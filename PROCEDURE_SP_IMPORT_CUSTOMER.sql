CREATE PROCEDURE SP_IMPORT_CUSTOMER
(
	@CSPID VARCHAR(10),
	@cLocId Varchar(10)
)

AS
BEGIN
--(dinkar) Replace  left(memoid,2) to Location_code 
	DECLARE @CSTEP VARCHAR(10),@CERRMSG VARCHAR(MAX),@LOCATINID VARCHAR(10),@CIMPORTTABLE VARCHAR(100),@CFIN_YEAR VARCHAR(10),
			@CMYSPID VARCHAR(5),@CCMD NVARCHAR(MAX),@CUSTDYM VARCHAR(50),@CAC_CODEVAL VARCHAR(500),@STATE VARCHAR(500),@CCITY VARCHAR(500),
			@CAREA VARCHAR(500), @PINCODE VARCHAR(50),@CUSER_CUSTOMER_CODE VARCHAR(100),@CSOURCEDB VARCHAR(200),@BALERT BIT,@CPRIFUX_NAME VARCHAR(50),
			@CCOLNAME VARCHAR(1000)
BEGIN TRY
	BEGIN TRAN
	    
	    SET @CSTEP = 10
		--SELECT @LOCATINID = DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
		SET @CIMPORTTABLE='TEMP_CUSTOMER_'+@CSPID
		SET @CFIN_YEAR='01'+CONVERT(VARCHAR(3),DBO.FN_GETFINYEAR(GETDATE()))
		SET @CMYSPID=@@SPID
		SET @LOCATINID= @cLocId
	   
	    /*
			 THIS TEMP TABLE HAVE ALL REQUIRED COLOMN. IF ANY COLOMN IS MISS INSERT IT WITH NULL VALUE
	    */

	IF ISNULL(@LOCATINID,'')=''
	 BEGIN
		SET @CERRMSG =' LOCATION ID CAN NOT BE BLANK  '  
		GOTO EXIT_PROC    
	 END
	    
	    SET @CSTEP = 30
	    IF OBJECT_ID('TEMPDB..#TMISSCOLCHECK','U') IS NOT NULL
				DROP TABLE #TMISSCOLCHECK
	    CREATE  TABLE #TMISSCOLCHECK (COLNAME VARCHAR(100))
	    
	    INSERT INTO #TMISSCOLCHECK
	    SELECT 'CUSTOMER_LNAME' UNION SELECT 'ADDRESS1' UNION SELECT 'ADDRESS2' UNION SELECT 'ADDRESS3' UNION
	    SELECT 'ADDRESS9'UNION SELECT 'ADDRESS4'UNION SELECT 'PIN' UNION SELECT 'DOB' UNION SELECT 'DOA'UNION
	    SELECT 'PHONE_H' UNION SELECT 'PHONE_O'UNION SELECT 'EMAIL'UNION SELECT 'CARDNO'UNION SELECT 'CARDISSUEDT'
	    UNION  SELECT 'CARDEXPIRYDT' UNION SELECT 'FLAT_DISC_CUSTOMER'UNION SELECT 'FLAT_DISC_PERCENTAGE' UNION
	    SELECT 'PREFIX_NAME'UNION SELECT 'REF_CUSTOMER_CODE' UNION SELECT 'STATE' UNION SELECT 'CITY' UNION
	    SELECT 'AREA'
	    
	    SET @CSTEP = 60
	    WHILE  EXISTS (SELECT TOP 1 * FROM #TMISSCOLCHECK)
	    BEGIN
				
				SELECT TOP 1 @CCOLNAME = COLNAME FROM #TMISSCOLCHECK
				PRINT @CCOLNAME
				SET @CCMD = N'IF NOT EXISTS (SELECT TOP 1 * FROM SYS.COLUMNS 
				              WHERE OBJECT_ID = OBJECT_ID('''+@CIMPORTTABLE+''') AND NAME = '''+@CCOLNAME+''')
				              ALTER TABLE '+@CIMPORTTABLE+' 
				              ADD '+@CCOLNAME+' VARCHAR(1000)'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD 
				DELETE FROM  #TMISSCOLCHECK WHERE  COLNAME = @CCOLNAME         
	    END
	    
	    
	    ---VALIDATE FLAT_DISC_PERCENTAGE
	    SET @CSTEP = 90
	    SET @CCMD = N'IF EXISTS (SELECT TOP 1 * FROM '+@CIMPORTTABLE+' 
	                   WHERE ISNUMERIC(ISNULL(FLAT_DISC_PERCENTAGE,''0''))=0 AND FLAT_DISC_PERCENTAGE <> '''')
	                   SET @BALERT = 1 
						ELSE 
						SET @BALERT = 0'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@BALERT BIT OUTPUT', @BALERT OUTPUT
		
		SET @CSTEP = 120
		IF (@BALERT = 1)
		BEGIN
			SET @CCMD = N'SELECT ''ALERT'' AS TYPE,''FLAT_DISC_PERCENTAGE SHOULD BE NUMERIC'' AS MESSAGE,FLAT_DISC_PERCENTAGE AS VALUE 
						FROM '+@CIMPORTTABLE+'  WHERE ISNUMERIC(ISNULL(FLAT_DISC_PERCENTAGE,''0''))=0 AND FLAT_DISC_PERCENTAGE <> '''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD		
			GOTO EXIT_PROC
		END	
	    
	    ---VALIDATE FLAT_DISC_CUSTOMER
	    SET @CSTEP = 150
	    SET @CCMD = N'IF EXISTS (SELECT TOP 1 * FROM '+@CIMPORTTABLE+' 
	                   WHERE FLAT_DISC_CUSTOMER NOT IN (''0'',''1'') AND FLAT_DISC_CUSTOMER<> '''')
	                      SET @BALERT = 1 
						ELSE 
						  SET @BALERT = 0'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@BALERT BIT OUTPUT', @BALERT OUTPUT
		SET @CSTEP = 180
		IF (@BALERT = 1)
		BEGIN
			SET @CCMD = N'SELECT ''ALERT'' AS TYPE,''FLAT_DISC_CUSTOMER SHOULD BIT(0,1)'' AS MESSAGE,FLAT_DISC_CUSTOMER AS VALUE 
						FROM '+@CIMPORTTABLE+'  WHERE FLAT_DISC_CUSTOMER NOT IN (''0'',''1'') AND FLAT_DISC_CUSTOMER<> '''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			GOTO EXIT_PROC		
		END	             
	 
   
        
        ---VALIDATE DOB
        SET @CSTEP = 210
	    SET @CCMD = N'IF EXISTS (SELECT TOP 1 * FROM '+@CIMPORTTABLE+' 
	                   WHERE ISDATE(ISNULL(DOB,''1900-01-01'')) = 0 AND  DOB <> '''')
	                      SET @BALERT = 1 
						ELSE 
						  SET @BALERT = 0'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@BALERT BIT OUTPUT', @BALERT OUTPUT
		
		SET @CSTEP = 240
		IF (@BALERT = 1)
		BEGIN
			SET @CCMD = N'SELECT ''ALERT'' AS TYPE,''DOB SHOULD BE DATE ONLY'' AS MESSAGE,DOB AS VALUE 
						FROM '+@CIMPORTTABLE+'  WHERE ISDATE(ISNULL(DOB,''1900-01-01'')) = 0 AND DOB <> '''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			GOTO EXIT_PROC		
		END	             
        
        
        ---VALIDATE DOA
        SET @CSTEP = 260
	    SET @CCMD = N'IF EXISTS (SELECT TOP 1 * FROM '+@CIMPORTTABLE+' 
	                   WHERE ISDATE(ISNULL(DOA,''1900-01-01'')) = 0 AND DOA <> '''')
	                      SET @BALERT = 1 
						ELSE 
						  SET @BALERT = 0'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@BALERT BIT OUTPUT', @BALERT OUTPUT
		
		SET @CSTEP = 290
		IF (@BALERT = 1)
		BEGIN
			SET @CCMD = N'SELECT ''ALERT'' AS TYPE,''DOA SHOULD BE DATE ONLY'' AS MESSAGE,DOA AS VALUE 
						FROM '+@CIMPORTTABLE+'  WHERE ISDATE(ISNULL(DOA,''1900-01-01'')) = 0 AND DOA <> '''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			GOTO EXIT_PROC		
		END	             
		
		
		---VALIDATE CARDISSUEDT
	    SET @CSTEP = 310
	    SET @CCMD = N'IF EXISTS (SELECT TOP 1 * FROM '+@CIMPORTTABLE+' 
	                   WHERE ISDATE(ISNULL(CARDISSUEDT,''1900-01-01'')) = 0 AND CARDISSUEDT <> '''')
	                      SET @BALERT = 1 
						ELSE 
						  SET @BALERT = 0'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@BALERT BIT OUTPUT', @BALERT OUTPUT
		
		SET @CSTEP = 340
		IF (@BALERT = 1)
		BEGIN
			SET @CCMD = N'SELECT ''ALERT'' AS TYPE,''CARD ISSUE DATE SHOULD BE DATE ONLY'' AS MESSAGE,CARDISSUEDT AS VALUE 
						FROM '+@CIMPORTTABLE+'  WHERE ISDATE(ISNULL(CARDISSUEDT,''1900-01-01'')) = 0 AND CARDISSUEDT <> '''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			GOTO EXIT_PROC		
		END	             
        
        ---VALIDATE CARDEXPIRYDT
        SET @CSTEP = 370
	    SET @CCMD = N'IF EXISTS (SELECT TOP 1 * FROM '+@CIMPORTTABLE+' 
	                   WHERE ISDATE(ISNULL(CARDEXPIRYDT,''1900-01-01'')) = 0 AND CARDEXPIRYDT <> '''')
	                      SET @BALERT = 1 
						ELSE 
						  SET @BALERT = 0'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@BALERT BIT OUTPUT', @BALERT OUTPUT
		
		SET @CSTEP = 410
		IF (@BALERT = 1)
		BEGIN
			SET @CCMD = N'SELECT ''ALERT'' AS TYPE,''CARD EXPIRY DATE SHOULD BE DATE ONLY'' AS MESSAGE,CARDEXPIRYDT AS VALUE 
						FROM '+@CIMPORTTABLE+'  WHERE ISDATE(ISNULL(CARDEXPIRYDT,''1900-01-01'')) = 0 AND CARDEXPIRYDT <> '''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			GOTO EXIT_PROC		
		END	
        
     
	    SET @CSTEP = 440
		SET @CUSTDYM = 'TMP_CUSTDYM_'+@CMYSPID
		SET @CCMD = N'IF OBJECT_ID ('''+@CUSTDYM+''',''U'') IS NOT NULL
						DROP TABLE '+@CUSTDYM+''
		PRINT @CCMD
		EXEC SP_EXECUTESQL	@CCMD
		
		SET @CSTEP = 470
		SET @CCMD = N'SELECT * INTO '+@CUSTDYM+' FROM CUSTDYM WHERE 1=2'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @CSTEP = 490 
		--VALIDATION FOR NULL USER_CUSTOMER_CODE
		SET @CCMD = N'IF EXISTS(SELECT TOP 1 * FROM '+@CIMPORTTABLE+' WHERE ISNULL(USER_CUSTOMER_CODE,'''') = '''')
						SET @BALERT = 1 
						ELSE 
						SET @BALERT = 0'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@BALERT BIT OUTPUT', @BALERT OUTPUT
		
		SET @CSTEP = 520
		IF (@BALERT = 1)
		BEGIN
			SELECT 'ALERT' AS TYPE ,'CAN NOT ACCEPT A BLANK OR NULL USER_CUSTOMER_CODE.' AS MESSAGE,'' AS VALUE
			GOTO EXIT_PROC
		END	
		
		SET @CSTEP = 540
		--VALIDATION FOR NULL CUSTOMER NAME
		SET @CCMD = N'IF EXISTS(SELECT TOP 1 * FROM '+@CIMPORTTABLE+' WHERE ISNULL(CUSTOMER_FNAME,'''') = '''')
						SET @BALERT = 1 
						ELSE 
						SET @BALERT = 0'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@BALERT BIT OUTPUT', @BALERT OUTPUT
		
		SET @CSTEP = 560
		IF (@BALERT = 1)
		BEGIN
			SELECT 'ALERT' AS TYPE,'CAN NOT ACCEPT A BLANK OR NULL CUSTOMER NAME.' AS MESSAGE,'' AS VALUE
			GOTO EXIT_PROC
		END	
		
		
		
		--VALIDATION FOR  DUBLICATE USER_CUSTOMER_CODE
		SET @CSTEP = 590
		SET @CCMD = N'IF EXISTS(SELECT USER_CUSTOMER_CODE, COUNT(USER_CUSTOMER_CODE) FROM  '+@CIMPORTTABLE+' 
					GROUP BY USER_CUSTOMER_CODE HAVING COUNT(USER_CUSTOMER_CODE) > 1)
					BEGIN
						SET @BALERT = 1
					END
					ELSE
					BEGIN
						SET @BALERT = 0
					END'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@BALERT BIT OUTPUT', @BALERT OUTPUT
		
		SET @CSTEP = 620
		IF (@BALERT = 1)
		BEGIN
			IF OBJECT_ID('#VALIDATION','U') IS NOT NULL 
				DROP TABLE  #VALIDATION
			
			CREATE TABLE #VALIDATION (USER_CUSTOMER_CODE VARCHAR(300), CUSTOMER_COUNT INT )
			SET @CCMD = N'INSERT INTO #VALIDATION SELECT USER_CUSTOMER_CODE, COUNT(USER_CUSTOMER_CODE) AS CUSTOMER_COUNT FROM  '+@CIMPORTTABLE+' 
						GROUP BY USER_CUSTOMER_CODE HAVING COUNT(USER_CUSTOMER_CODE) > 1'
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			
			SELECT 'ALERT' AS TYPE,'USER_CUSTOMER_CODE FOUND MORE THAN ONE TIME.' AS MESSAGE, USER_CUSTOMER_CODE AS VALUE FROM #VALIDATION  
			GOTO EXIT_PROC
		END			
		
		--VALIDATION FOR  CARD_NO AND USER_CUSTOMER_CODE AND ISNULL(CARDNO,'''')<>''''
		SET @CSTEP = 650
		SET @CCMD = N'IF EXISTS(SELECT CARDNO,COUNT(USER_CUSTOMER_CODE) FROM  '+@CIMPORTTABLE+'  
					WHERE ISNULL(CARDNO,'''') <> '''' GROUP BY CARDNO HAVING COUNT(USER_CUSTOMER_CODE) > 1)
					BEGIN
						SET @BALERT = 1
					END
					ELSE
					BEGIN
						SET @BALERT = 0
					END'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@BALERT BIT OUTPUT', @BALERT OUTPUT
		
		SET @CSTEP = 680
		IF (@BALERT = 1)
		BEGIN
			IF OBJECT_ID('#VALIDATION_CARDNO','U') IS NOT NULL 
				DROP TABLE  #VALIDATION_CARDNO
			
			CREATE TABLE #VALIDATION_CARDNO (CARDNO VARCHAR(300), USER_CUSTOMER_CODE_COUNT INT )
			SET @CCMD = N'INSERT INTO #VALIDATION_CARDNO (CARDNO,USER_CUSTOMER_CODE_COUNT) 
						  SELECT CARDNO, COUNT(USER_CUSTOMER_CODE) AS USER_CUSTOMER_CODE_COUNT FROM  '+@CIMPORTTABLE+' 
						  WHERE ISNULL(CARDNO,'''') <> ''''
						  GROUP BY CARDNO HAVING COUNT(USER_CUSTOMER_CODE) > 1'
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			
			SELECT 'ALERT' AS TYPE,'SAME CARD NUMBER FOUND FOR DIFFERENT USER_CUSTOMER_CODE' AS MESSAGE, CARDNO AS VALUE FROM #VALIDATION_CARDNO
			GOTO EXIT_PROC
		END
			
	
		SET @CSTEP = 710
		SET @CCMD = N'IF EXISTS (SELECT TOP 1 * FROM '+@CIMPORTTABLE+' 
		              WHERE CONVERT(NUMERIC(10,0),( CASE WHEN FLAT_DISC_PERCENTAGE='''' THEN ''0'' ELSE FLAT_DISC_PERCENTAGE END )) > 0 AND FLAT_DISC_CUSTOMER <> ''1'')
		              BEGIN
						SET @BALERT = 1
					  END
					  ELSE
					  BEGIN
							SET @BALERT = 0
					  END'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@BALERT BIT OUTPUT', @BALERT OUTPUT
		
		SET @CSTEP = 730
		IF (@BALERT = 1)
		BEGIN
				SET @CCMD  = N'SELECT ''ALERT'' AS TYPE,''NOT FLAT DISC CUSTOMER BUT FLAT DISC PERCENTAGE IS DEFIEND'' AS MESSAGE,USER_CUSTOMER_CODE AS VALUE FROM '+@CIMPORTTABLE+'
				              WHERE CONVERT(NUMERIC(10,0),FLAT_DISC_PERCENTAGE) > 0 AND FLAT_DISC_CUSTOMER <> ''1'''
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD
				GOTO EXIT_PROC              
		END 
		
		SET @BALERT = 0
		SET @CSTEP = 750
		SET @CCMD = N'INSERT '+@CUSTDYM+'(CUSTOMER_CODE,USER_CUSTOMER_CODE,CUSTOMER_FNAME,CUSTOMER_LNAME,ADDRESS1,ADDRESS2,ADDRESS9,ADDRESS0,
					PIN,DT_BIRTH,DT_ANNIVERSARY,PHONE1,PHONE2,EMAIL,CARD_NO,DT_CARD_ISSUE,DT_CARD_EXPIRY,FLAT_DISC_CUSTOMER,
					FLAT_DISC_PERCENTAGE,MOBILE,OPENING_BALANCE,LAST_UPDATE,REF_CUSTOMER_CODE,PREFIX_CODE,CUSTOMER_TITLE,PRIVILEGE_CUSTOMER,
					CARD_NAME,FLAT_DISC_PERCENTAGE_DURING_SALES,AC_CODE,SENT_TO_HO,INACTIVE,AREA_CODE,LOCATION_ID)
					SELECT '''' AS CUSTOMER_CODE,USER_CUSTOMER_CODE,CUSTOMER_FNAME,ISNULL(CUSTOMER_LNAME,'''') AS CUSTOMER_LNAME,ISNULL(ADDRESS1,'''') AS ADDRESS1,ISNULL(ADDRESS2,'''') AS ADDRESS2,ISNULL(ADDRESS3,'''') AS ADDRESS9,ISNULL(ADDRESS4,'''') AS ADDRESS0,
					ISNULL(STR(PIN),'''') AS PIN,ISNULL(DOB,'''') AS DT_BIRTH,ISNULL(DOA,'''') AS DT_ANNIVERSARY,ISNULL(PHONE_H,'''') AS PHONE1,ISNULL(PHONE_O,'''') AS PHONE2,ISNULL(EMAIL,'''') AS EMAIL,ISNULL(STR(CARDNO),'''') AS CARD_NO,ISNULL(CARDISSUEDT,'''') AS DT_CARD_ISSUE,
					ISNULL(CARDEXPIRYDT,'''') AS DT_CARD_EXPIRY,ISNULL(FLAT_DISC_CUSTOMER,0) AS FLAT_DISC_CUSTOMER ,(CASE WHEN ISNULL(FLAT_DISC_PERCENTAGE,'''')='''' THEN 0 ELSE FLAT_DISC_PERCENTAGE END) AS FLAT_DISC_PERCENTAGE,MOBILE,0 AS OPENING_BALANCE,GETDATE() AS LAST_UPDATE,ISNULL(REF_CUSTOMER_CODE,''000000000000''),'''' AS PREFIX_CODE,
					ISNULL(PREFIX_NAME,'''') AS CUSTOMER_TITLE , 0 AS PRIVILEGE_CUSTOMER,'''' AS CARD_NAME,
					0 AS FLAT_DISC_PERCENTAGE_DURING_SALES,'''' AS AC_CODE,0 AS SENT_TO_HO, 0 AS INACTIVE,''0000000'' AS AREA_CODE,'''' AS LOCATION_ID FROM '+@CIMPORTTABLE+''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
			
		----INSERT NEW STATE
		SET @CSTEP = 780
		IF OBJECT_ID ('#NEW_STATE','U') IS NOT NULL
			DROP TABLE #NEW_STATE
		
		CREATE TABLE #NEW_STATE ([STATE] VARCHAR(300))
		
		SET @CSTEP = 810
	    SET @CCMD = N'INSERT INTO #NEW_STATE(STATE) SELECT DISTINCT A.STATE  FROM '+@CIMPORTTABLE+' A LEFT OUTER JOIN STATE B
		ON A.STATE = B.STATE
		WHERE B.STATE IS NULL AND ISNULL(A.STATE,'''') <> '''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		--SELECT * FROM #NEW_STATE
		SET @CSTEP = 830
		WHILE(SELECT TOP 1 'U' FROM #NEW_STATE) = 'U'
		BEGIN
			EXEC GETNEXTKEY 'STATE','STATE_CODE',7,@LOCATINID,1,'',2,@CAC_CODEVAL OUTPUT 
		    SET @STATE = (SELECT TOP 1 STATE FROM #NEW_STATE)
		    INSERT INTO [STATE](STATE_CODE,[STATE],LAST_UPDATE,REGION_CODE,OCTROI_PERCENTAGE,INACTIVE)
		    SELECT @CAC_CODEVAL AS STATE_CODE,@STATE AS STATE,GETDATE() LAST_UPDATE,'0000000' AS REGION_CODE,0 AS OCTROI_PERCENTAGE,0 AS INACTIVE
		    SET @CCMD = N'DELETE FROM #NEW_STATE WHERE STATE = '''+@STATE+''''
		    EXEC SP_EXECUTESQL @CCMD
		END

		----INSERT NEW CITY
		
		SET @CSTEP = 850
		IF OBJECT_ID ('#NEW_CITY','U') IS NOT NULL
			DROP TABLE #NEW_CITY
			
		CREATE TABLE #NEW_CITY(CITY VARCHAR(300),STATE_CODE VARCHAR(50))
		
		SET @CSTEP = 880
		SET @CCMD = N'INSERT INTO #NEW_CITY(CITY,STATE_CODE)
					 SELECT DISTINCT A.CITY,C.STATE_CODE FROM '+@CIMPORTTABLE+' A
					 JOIN STATE C ON C.STATE = A.STATE
					 LEFT OUTER JOIN CITY B ON A.CITY = B.CITY AND B.STATE_CODE = C.STATE_CODE 
					 WHERE ISNULL(B.CITY,'''') = '''' AND ISNULL(A.CITY,'''') <> '''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		--SELECT * FROM #NEW_CITY
		SET @CSTEP = 910		
		IF EXISTS(SELECT TOP 1 'U' FROM #NEW_CITY WHERE STATE_CODE IS NULL) 
		BEGIN
				SELECT 'ALERT' AS TYPE, 'INVALID STATE FOR CITY '+CITY+''  AS MESSAGE, '' AS VALUE FROM #NEW_CITY
				WHERE STATE_CODE IS NULL
				GOTO EXIT_PROC
		END
		
		SET @CSTEP = 940
		WHILE(SELECT TOP 1 'U' FROM #NEW_CITY) = 'U'
		BEGIN
			EXEC GETNEXTKEY 'CITY','CITY_CODE',7,@LOCATINID,1,'',2,@CAC_CODEVAL OUTPUT 
		    SELECT TOP 1 @CCITY = CITY FROM #NEW_CITY
		    SELECT TOP 1 @STATE = STATE_CODE FROM #NEW_CITY
		    INSERT INTO CITY(CITY_CODE,CITY,LAST_UPDATE,STATE_CODE,INACTIVE,COMPANY_CODE)
		    SELECT @CAC_CODEVAL AS CITY_CODE,@CCITY AS CITY,GETDATE() AS LAST_UPDATE, @STATE AS STATE_CODE,0 AS INACTIVE,'01' AS COMPANY_CODE
		    SET @CCMD = N'DELETE FROM #NEW_CITY WHERE CITY = '''+@CCITY+''' AND STATE_CODE = '''+@STATE+''''
		    PRINT @CCMD
		    EXEC SP_EXECUTESQL @CCMD
		END
		
		
		SET @CSTEP = 960
		IF OBJECT_ID ('#NEW_AREA','U') IS NOT NULL
			DROP TABLE #NEW_AREA
				
		CREATE TABLE #NEW_AREA(AREA_NAME VARCHAR(300),PINCODE VARCHAR(10),CITY_CODE VARCHAR(10))

		SET @CSTEP = 990
			SET @CCMD = N'INSERT INTO #NEW_AREA(AREA_NAME,PINCODE,CITY_CODE)
				SELECT DISTINCT A.AREA AS AREA_NAME,ISNULL(STR(A.PIN),'''') AS PINCODE,C.CITY_CODE 
				FROM '+@CIMPORTTABLE+' A 
				JOIN CITY C ON C.CITY = A.CITY LEFT OUTER JOIN AREA B
				ON A.AREA = B.AREA_NAME AND B.CITY_CODE = C.CITY_CODE 
			    WHERE B.AREA_NAME IS NULL AND A.AREA IS NOT NULL'
	
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @CSTEP = 1020
		WHILE(SELECT TOP 1 'U' FROM #NEW_AREA) = 'U'
		BEGIN
			EXEC GETNEXTKEY 'AREA','AREA_CODE',7,@LOCATINID,1,'',2,@CAC_CODEVAL OUTPUT
			SELECT TOP 1 @CAREA = AREA_NAME, @PINCODE = PINCODE,@CCITY = CITY_CODE FROM #NEW_AREA
			INSERT INTO AREA(INACTIVE,AREA_CODE,AREA_NAME,PINCODE,CITY_CODE,LAST_UPDATE,COMPANY_CODE)
		    SELECT 0 AS INACTIVE, @CAC_CODEVAL AS AREA_CODE,@CAREA AS AREA_NAME,@PINCODE AS PINCODE,@CCITY AS CITY_CODE,GETDATE() AS LAST_UPDATE,'01' AS COMPANY_CODE
		    
		    SET @CCMD = N'DELETE FROM #NEW_AREA WHERE AREA_NAME = '''+@CAREA+''' AND CITY_CODE = '''+@CCITY+'''
						AND PINCODE = '''+@PINCODE+''''
		    PRINT @CCMD
		    EXEC SP_EXECUTESQL @CCMD
		END
		
		----INSERT NEW CUSTOMER 
		SET @CSTEP = 1050
		IF OBJECT_ID ('#NEW_CUSTOMER','U') IS NOT NULL
			DROP TABLE #NEW_CUSTOMER
				
		CREATE TABLE #NEW_CUSTOMER(USER_CUSTOMER_CODE VARCHAR(50))
		
		SET @CSTEP = 1080
		SET @CCMD = N'INSERT INTO #NEW_CUSTOMER(USER_CUSTOMER_CODE)
					SELECT A.USER_CUSTOMER_CODE FROM '+@CUSTDYM+' A LEFT OUTER JOIN CUSTDYM B ON 
					A.USER_CUSTOMER_CODE=B.USER_CUSTOMER_CODE WHERE B.USER_CUSTOMER_CODE IS NULL'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		--SELECT * FROM #NEW_CUSTOMER
		
		SET @CSTEP = 1110
		WHILE(SELECT TOP 1 'U' FROM #NEW_CUSTOMER) = 'U'
		BEGIN
			EXEC GETNEXTKEY 'CUSTDYM','CUSTOMER_CODE',12,@LOCATINID,1,'',2,@CAC_CODEVAL OUTPUT
			SELECT TOP 1 @CUSER_CUSTOMER_CODE=USER_CUSTOMER_CODE  FROM #NEW_CUSTOMER
			SET @CCMD = 'UPDATE '+@CUSTDYM+' SET CUSTOMER_CODE = '''+@CAC_CODEVAL+''',REF_CUSTOMER_CODE = '''+@CAC_CODEVAL+''' WHERE USER_CUSTOMER_CODE = '''+@CUSER_CUSTOMER_CODE+'''' 
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			
			SET @CCMD = N'UPDATE A SET A.MOBILE = (CASE WHEN ISNUMERIC(B.USER_CUSTOMER_CODE)=1 AND LEN(B.USER_CUSTOMER_CODE) =10  THEN B.USER_CUSTOMER_CODE  ELSE '''' END) FROM '+@CUSTDYM+' A JOIN '+@CIMPORTTABLE+' B
						ON A.USER_CUSTOMER_CODE = B.USER_CUSTOMER_CODE'
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
						
		    SET @CCMD = N'DELETE FROM #NEW_CUSTOMER WHERE USER_CUSTOMER_CODE = '''+@CUSER_CUSTOMER_CODE+''''
		    PRINT @CCMD
		    EXEC SP_EXECUTESQL @CCMD
		END	
		
		SET @CSTEP = 1130
		IF OBJECT_ID ('#NEW_PREFIX','U') IS NOT NULL
			DROP TABLE #NEW_PREFIX
				
		CREATE TABLE #NEW_PREFIX(PREFIX_NAME VARCHAR(20),PREFIX_CODE VARCHAR(5))
		
		SET @CSTEP = 1160
		SET @CCMD = N'INSERT INTO #NEW_PREFIX(PREFIX_NAME)
					SELECT A.CUSTOMER_TITLE FROM '+@CUSTDYM+' A LEFT OUTER JOIN PREFIX B ON 
					A.CUSTOMER_TITLE=B.PREFIX_NAME WHERE B.PREFIX_NAME IS NULL'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @CSTEP = 1190
		WHILE(SELECT TOP 1 'U' FROM #NEW_PREFIX) = 'U'
		BEGIN
			EXEC GETNEXTKEY 'PREFIX','PREFIX_CODE',5,@LOCATINID,1,'',2,@CAC_CODEVAL OUTPUT
			SELECT TOP 1 @CPRIFUX_NAME=PREFIX_NAME  FROM #NEW_PREFIX
		    INSERT INTO PREFIX(PREFIX_CODE,PREFIX_NAME,LAST_UPDATE) SELECT @CAC_CODEVAL AS PREFIX_CODE,@CPRIFUX_NAME AS PREFIX_NAME,GETDATE()
			DELETE FROM #NEW_PREFIX WHERE PREFIX_NAME = @CPRIFUX_NAME
		END	
		
		SET @CSTEP = 1210
		
		--SET @CCMD = N'ALTER TABLE '+@CIMPORTTABLE+' ADD AREA_CODE VARCHAR(20)'
		--PRINT @CCMD
		--EXEC SP_EXECUTESQL @CCMD
	    
	 --   SET @CCMD =N'ALTER TABLE '+@CIMPORTTABLE+' ADD CITY_CODE VARCHAR(20)'
		--PRINT @CCMD
		--EXEC SP_EXECUTESQL @CCMD
		
		--SET @CCMD =N'ALTER TABLE '+@CIMPORTTABLE+' ADD STATE_CODE  VARCHAR(20)'
		--PRINT @CCMD
		--EXEC SP_EXECUTESQL @CCMD
		
		SET @CSTEP = 1240
		SET @CCMD = N'UPDATE A SET A.STATE_CODE = B.STATE_CODE FROM '+@CIMPORTTABLE+'  A JOIN STATE B ON ISNULL(A.STATE,'''') = B.STATE'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		

		SET @CSTEP = 1260
		SET @CCMD = N'UPDATE A SET A.CITY_CODE = B.CITY_CODE FROM '+@CIMPORTTABLE+'  A JOIN CITY B ON ISNULL(A.CITY,'''') = B.CITY AND ISNULL(A.STATE_CODE,'''') = B.STATE_CODE'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD

	
		
		SET @CSTEP = 1290
		SET @CCMD = N'UPDATE A SET A.AREA_CODE = B.AREA_CODE FROM '+@CIMPORTTABLE+'  A JOIN AREA B ON ISNULL(A.AREA,'''') = B.AREA_NAME AND ISNULL(A.CITY_CODE,'''') = B.CITY_CODE'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @CSTEP = 1320
		SET @CCMD = N'UPDATE A SET A.AREA_CODE = ISNULL(B.AREA_CODE,''0000000'') FROM '+@CUSTDYM+' A JOIN '+@CIMPORTTABLE+' B ON A.USER_CUSTOMER_CODE = B.USER_CUSTOMER_CODE'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @CSTEP = 1350
		SET @CCMD = N'UPDATE '+@CUSTDYM+' SET FLAT_DISC_PERCENTAGE = 0 WHERE ISNULL(FLAT_DISC_CUSTOMER,0) = 0'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @CSTEP = 1380
		SET @CCMD = N'UPDATE A SET A.PREFIX_CODE = B.PREFIX_CODE FROM '+@CUSTDYM+' A JOIN PREFIX B ON ISNULL(A.CUSTOMER_TITLE,'''') = B.PREFIX_NAME'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD

		--select area_code  FROM DAMILANO.DBO.[TMP_CUSTDYM_325] B JOIN DAMILANO.DBO.[CUSTDYM] A  ON A.CUSTOMER_CODE = B.CUSTOMER_CODE
		
		SET @CSTEP = 1410
		SET @CCMD = N'UPDATE A  SET 
					A.CUSTOMER_CODE = B.CUSTOMER_CODE,
					A.REF_CUSTOMER_CODE = B.REF_CUSTOMER_CODE,
					A.MOBILE=B.MOBILE,
					A.MANAGER_CARD = B.MANAGER_CARD,
					A.OPENING_BALANCE= B.OPENING_BALANCE,
					A.PREFIX_CODE = B.PREFIX_CODE,
					A.SENT_TO_HO = B.SENT_TO_HO,
					A.INACTIVE = B.INACTIVE,
					A.WIZCLIP_LAST_UPDATE = B.WIZCLIP_LAST_UPDATE,
					A.LOCATION_ID = B.LOCATION_ID,
					A.AC_CODE = B.AC_CODE,
					A.PRIVILEGE_CUSTOMER = B.PRIVILEGE_CUSTOMER,
					A.CARD_NAME = B.CARD_NAME,
					A.LAST_UPDATE = GETDATE(),
					A.DT_CREATED = B.DT_CREATED,
					A.FLAT_DISC_PERCENTAGE_DURING_SALES = B.FLAT_DISC_PERCENTAGE_DURING_SALES,
					A.area_code=b.area_code
					FROM '+@CUSTDYM+' A JOIN CUSTDYM B
					ON A.USER_CUSTOMER_CODE = B.USER_CUSTOMER_CODE'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		
		SET @CSTEP = 1440
		
		SET @CCMD = N'UPDATE A  SET 
					A.MANAGER_CARD = 0,
					A.OPENING_BALANCE= 0,
					A.SENT_TO_HO = 0,
					A.INACTIVE = 0,
					A.WIZCLIP_LAST_UPDATE = '''',
					A.LOCATION_ID = '''+@LOCATINID+''',
					A.AC_CODE = ''0000000000'',
					A.PRIVILEGE_CUSTOMER = 0,
					A.CARD_NAME = '''',
					A.LAST_UPDATE = GETDATE(),
					A.FLAT_DISC_PERCENTAGE_DURING_SALES = 0,
					A.DT_CREATED = GETDATE(),
					A.AREA_CODE=ISNULL(B.AREA_CODE,''0000000'')
					FROM '+@CUSTDYM+' A LEFT OUTER JOIN CUSTDYM B
					ON A.USER_CUSTOMER_CODE = B.USER_CUSTOMER_CODE 
					WHERE B.USER_CUSTOMER_CODE IS NULL'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
					
	
		SET @CSOURCEDB = DB_NAME()+'.DBO.'
		SET @CSTEP = 1470
		EXEC UPDATEMASTERXN 
			@CSOURCEDB=@CSOURCEDB,
			@CSOURCETABLE=@CUSTDYM,
			@CDESTDB=@CSOURCEDB,
			@CDESTTABLE='CUSTDYM',
			@CKEYFIELD1='CUSTOMER_CODE',
			@CKEYFIELD2='',
			@CKEYFIELD3='',
			@LINSERTONLY=0,
			@CFILTERCONDITION='',
			@LUPDATEXNS=0,
			@CXNTYPE='',
			@LUPDATEONLY=0,
			@CUSERID='',
			@BALWAYSUPDATE=1
	END TRY
BEGIN CATCH
	SET @CERRMSG='P: SP_IMPORT_CUSTOMER, STEP: '+@CSTEP+' MESSAGE: '+ERROR_MESSAGE()
END CATCH
EXIT_PROC:
    
	IF ISNULL(@CERRMSG,'') = '' AND  @BALERT <> 1
	BEGIN
	   
	   IF @@TRANCOUNT > 0
		 COMMIT
		
		SET @CCMD = N'IF OBJECT_ID('''+@CUSTDYM+''',''U'')IS NOT NULL 
						DROP TABLE '+@CUSTDYM+'
					IF OBJECT_ID('''+@CIMPORTTABLE+''',''U'')IS NOT NULL 
						DROP TABLE '+@CIMPORTTABLE+''
		PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD	
		SELECT 'SUCCESS' AS TYPE,''AS MESSAGE,'' AS VALUE	
	END
	ELSE IF (ISNULL(@CERRMSG,'') <> '' ) OR @BALERT = 1
	BEGIN
		IF @@TRANCOUNT > 0
			ROLLBACK
			
		SELECT 'ERROR' AS TYPE,@CERRMSG AS MESSAGE,'' AS VALUE 
	END
END

--********************************* END OF PROCEDURE SP_IMPORT_CUSTOMER



/*
--Shall be creted when optimized ..It is damn slow at damilano (Date:27-10-2021)

CREATE PROCEDURE SP_IMPORT_CUSTOMER
(
	@CSPID VARCHAR(40),
	@cLocId Varchar(10)
)

AS
BEGIN
	DECLARE @CSTEP VARCHAR(10),@CERRMSG VARCHAR(MAX),@LOCATINID VARCHAR(10),@CIMPORTTABLE VARCHAR(100),@CFIN_YEAR VARCHAR(10),
			@CMYSPID VARCHAR(5),@CCMD NVARCHAR(MAX),@CAC_CODEVAL VARCHAR(500),@STATE VARCHAR(500),@CCITY VARCHAR(500),
			@CAREA VARCHAR(500), @PINCODE VARCHAR(50),@CUSER_CUSTOMER_CODE VARCHAR(20),@CSOURCEDB VARCHAR(200),@BALERT BIT,@CPRIFUX_NAME VARCHAR(50),
			@CCOLNAME VARCHAR(1000),@CIMPORTTABLE1 VARCHAR(100)
BEGIN TRY
	BEGIN TRAN
	    
	    SET @CSTEP = 10
		--SELECT @LOCATINID = DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
		SET @CIMPORTTABLE1='TEMP_CUSTOMER_'+@CSPID
		SET @CIMPORTTABLE='CUS_CUSTDYM_UPLOAD'
		SET @CFIN_YEAR='01'+CONVERT(VARCHAR(3),DBO.FN_GETFINYEAR(GETDATE()))
		SET @CMYSPID=@@SPID
		SET @LOCATINID= @cLocId
	   
	    /*
			 THIS TEMP TABLE HAVE ALL REQUIRED COLOMN. IF ANY COLOMN IS MISS INSERT IT WITH NULL VALUE
	    */

	IF ISNULL(@LOCATINID,'')=''
	 BEGIN
		SET @CERRMSG =' LOCATION ID CAN NOT BE BLANK  '  
		GOTO EXIT_PROC    
	 END
	    
	    SET @CSTEP = 30
	    

	--	SET @cCMD=N'INSERT CUS_CUSTDYM_UPLOAD	( ac_code, address0, address1, address2, address9, area, area_code, area_name, BILL_BY_BILL, card_code, card_name, 
 --card_no, CITY, CITY_CODE, company_name, cus_gst_no, cus_gst_state_code, CUST_BAL, CUST_CREDIT_LIMIT, custdym_export_gst_percentage, 
 --custdym_export_gst_percentage_Applicable, customer_code, customer_fname, customer_lname, customer_title, dt_anniversary, dt_birth, 
 --dt_card_expiry, dt_card_issue, dt_created, email, email2, firstcardissuedt, flat_disc_customer, flat_disc_percentage, flat_disc_percentage_during_sales, 
 --form_no, gender, HO_LAST_UPDATE, inactive, International_customer, LAST_UPDATE, LOCATION_ID, manager_card, mobile, not_downloaded_from_wizclip, 
 --old_discount_card_type, OPENING_BALANCE, phone1, phone2, pin, prefix_code, privilege_customer, ref_customer_code, sent_to_ho, SP_ID, state, STATE_CODE, 
 --Tin_No, uploaded_to_ho, user_customer_code, wizclip_last_update )  
 
 --SELECT 	  ac_code, address0, address1, address2, address9, area, area_code, area_name, BILL_BY_BILL, card_code, card_name, card_no, CITY, CITY_CODE, 
 --company_name, cus_gst_no, cus_gst_state_code, CUST_BAL, CUST_CREDIT_LIMIT, custdym_export_gst_percentage, custdym_export_gst_percentage_Applicable, 
 --customer_code, customer_fname, customer_lname, customer_title, dt_anniversary, dt_birth, dt_card_expiry, dt_card_issue, dt_created, email, email2, 
 --firstcardissuedt, flat_disc_customer, flat_disc_percentage, flat_disc_percentage_during_sales, form_no, gender, HO_LAST_UPDATE, inactive, 
 --International_customer, LAST_UPDATE, LOCATION_ID, manager_card, mobile, not_downloaded_from_wizclip, old_discount_card_type, OPENING_BALANCE, phone1, phone2, 
 --pin, prefix_code, privilege_customer, ref_customer_code, sent_to_ho, SP_ID, state, STATE_CODE, Tin_No, uploaded_to_ho, user_customer_code, wizclip_last_update 
 --FROM '+@CIMPORTTABLE1

 --PRINT @CCMD
	--	EXEC SP_EXECUTESQL @CCMD
	   
	    
	    ---VALIDATE FLAT_DISC_CUSTOMER
	    SET @CSTEP = 150
	    SET @CCMD = N'IF EXISTS (SELECT TOP 1 * FROM '+@CIMPORTTABLE+' 
	                   WHERE SP_ID='''+@CSPID+''' and  FLAT_DISC_CUSTOMER NOT IN (''0'',''1'') )
	                      SET @BALERT = 1 
						ELSE 
						  SET @BALERT = 0'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@BALERT BIT OUTPUT', @BALERT OUTPUT
		SET @CSTEP = 180
		IF (@BALERT = 1)
		BEGIN
			SET @CCMD = N'SELECT ''ALERT'' AS TYPE,''FLAT_DISC_CUSTOMER SHOULD BIT(0,1)'' AS MESSAGE,FLAT_DISC_CUSTOMER AS VALUE 
						FROM '+@CIMPORTTABLE+'  WHERE SP_ID='''+@CSPID+''' and  FLAT_DISC_CUSTOMER NOT IN (''0'',''1'') AND FLAT_DISC_CUSTOMER<> '''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			GOTO EXIT_PROC		
		END	             
	             
		
		SET @CSTEP = 490 
		--VALIDATION FOR NULL USER_CUSTOMER_CODE
		SET @CCMD = N'IF EXISTS(SELECT TOP 1 * FROM '+@CIMPORTTABLE+' WHERE SP_ID='''+@CSPID+''' and  ISNULL(USER_CUSTOMER_CODE,'''') = '''')
						SET @BALERT = 1 
						ELSE 
						SET @BALERT = 0'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@BALERT BIT OUTPUT', @BALERT OUTPUT
		
		SET @CSTEP = 520
		IF (@BALERT = 1)
		BEGIN
			SELECT 'ALERT' AS TYPE ,'CAN NOT ACCEPT A BLANK OR NULL USER_CUSTOMER_CODE.' AS MESSAGE,'' AS VALUE
			GOTO EXIT_PROC
		END	
		
		SET @CSTEP = 540
		--VALIDATION FOR NULL CUSTOMER NAME
		SET @CCMD = N'IF EXISTS(SELECT TOP 1 * FROM '+@CIMPORTTABLE+' WHERE SP_ID='''+@CSPID+''' and  ISNULL(CUSTOMER_FNAME,'''') = '''')
						SET @BALERT = 1 
						ELSE 
						SET @BALERT = 0'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@BALERT BIT OUTPUT', @BALERT OUTPUT
		
		SET @CSTEP = 560
		IF (@BALERT = 1)
		BEGIN
			SELECT 'ALERT' AS TYPE,'CAN NOT ACCEPT A BLANK OR NULL CUSTOMER NAME.' AS MESSAGE,'' AS VALUE
			GOTO EXIT_PROC
		END	
		
		
		
		--VALIDATION FOR  DUBLICATE USER_CUSTOMER_CODE
		SET @CSTEP = 590
		SET @CCMD = N'IF EXISTS(SELECT USER_CUSTOMER_CODE, COUNT(USER_CUSTOMER_CODE) FROM  '+@CIMPORTTABLE+' where SP_ID='''+@CSPID+'''  
					GROUP BY USER_CUSTOMER_CODE HAVING COUNT(USER_CUSTOMER_CODE) > 1)
					BEGIN
						SET @BALERT = 1
					END
					ELSE
					BEGIN
						SET @BALERT = 0
					END'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@BALERT BIT OUTPUT', @BALERT OUTPUT
		
		SET @CSTEP = 620
		IF (@BALERT = 1)
		BEGIN
			IF OBJECT_ID('#VALIDATION','U') IS NOT NULL 
				DROP TABLE  #VALIDATION
			
			CREATE TABLE #VALIDATION (USER_CUSTOMER_CODE VARCHAR(300), CUSTOMER_COUNT INT )
			SET @CCMD = N'INSERT INTO #VALIDATION SELECT USER_CUSTOMER_CODE, COUNT(USER_CUSTOMER_CODE) AS CUSTOMER_COUNT FROM  '+@CIMPORTTABLE+'  where SP_ID='''+@CSPID+''' 
						GROUP BY USER_CUSTOMER_CODE HAVING COUNT(USER_CUSTOMER_CODE) > 1'
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			
			SELECT 'ALERT' AS TYPE,'USER_CUSTOMER_CODE FOUND MORE THAN ONE TIME.' AS MESSAGE, USER_CUSTOMER_CODE AS VALUE FROM #VALIDATION  
			GOTO EXIT_PROC
		END			
		
		--VALIDATION FOR  CARD_NO AND USER_CUSTOMER_CODE AND ISNULL(CARDNO,'''')<>''''
		SET @CSTEP = 650
		SET @CCMD = N'IF EXISTS(SELECT card_no,COUNT(USER_CUSTOMER_CODE) FROM  '+@CIMPORTTABLE+'  
					WHERE SP_ID='''+@CSPID+''' and  ISNULL(card_no,'''') <> '''' GROUP BY card_no HAVING COUNT(USER_CUSTOMER_CODE) > 1)
					BEGIN
						SET @BALERT = 1
					END
					ELSE
					BEGIN
						SET @BALERT = 0
					END'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@BALERT BIT OUTPUT', @BALERT OUTPUT
		
		SET @CSTEP = 680
		IF (@BALERT = 1)
		BEGIN
			IF OBJECT_ID('#VALIDATION_CARDNO','U') IS NOT NULL 
				DROP TABLE  #VALIDATION_CARDNO
			
			CREATE TABLE #VALIDATION_CARDNO (CARDNO VARCHAR(300), USER_CUSTOMER_CODE_COUNT INT )
			SET @CCMD = N'INSERT INTO #VALIDATION_CARDNO (CARDNO,USER_CUSTOMER_CODE_COUNT) 
						  SELECT CARDNO, COUNT(USER_CUSTOMER_CODE) AS USER_CUSTOMER_CODE_COUNT FROM  '+@CIMPORTTABLE+' 
						  WHERE SP_ID='''+@CSPID+''' and  ISNULL(CARDNO,'''') <> ''''
						  GROUP BY CARDNO HAVING COUNT(USER_CUSTOMER_CODE) > 1'
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			
			SELECT 'ALERT' AS TYPE,'SAME CARD NUMBER FOUND FOR DIFFERENT USER_CUSTOMER_CODE' AS MESSAGE, CARDNO AS VALUE FROM #VALIDATION_CARDNO
			GOTO EXIT_PROC
		END
			
	
		SET @CSTEP = 710
		SET @CCMD = N'IF EXISTS (SELECT TOP 1 * FROM '+@CIMPORTTABLE+' 
		              WHERE SP_ID='''+@CSPID+''' and  CONVERT(NUMERIC(10,0),FLAT_DISC_PERCENTAGE) > 0 AND FLAT_DISC_CUSTOMER <> ''1'')
		              BEGIN
						SET @BALERT = 1
					  END
					  ELSE
					  BEGIN
							SET @BALERT = 0
					  END'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@BALERT BIT OUTPUT', @BALERT OUTPUT
		
		SET @CSTEP = 730
		IF (@BALERT = 1)
		BEGIN
				SET @CCMD  = N'SELECT ''ALERT'' AS TYPE,''NOT FLAT DISC CUSTOMER BUT FLAT DISC PERCENTAGE IS DEFIEND'' AS MESSAGE,USER_CUSTOMER_CODE AS VALUE FROM '+@CIMPORTTABLE+'
				              WHERE SP_ID='''+@CSPID+''' and  CONVERT(NUMERIC(10,0),FLAT_DISC_PERCENTAGE) > 0 AND FLAT_DISC_CUSTOMER <> ''1'''
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD
				GOTO EXIT_PROC              
		END 
		
	
		----INSERT NEW STATE
		SET @CSTEP = 780
		IF OBJECT_ID ('#NEW_STATE','U') IS NOT NULL
			DROP TABLE #NEW_STATE
		
		CREATE TABLE #NEW_STATE ([STATE] VARCHAR(300))
		
		SET @CSTEP = 810
	    SET @CCMD = N'INSERT INTO #NEW_STATE(STATE) SELECT DISTINCT A.STATE  FROM '+@CIMPORTTABLE+' A LEFT OUTER JOIN STATE B
		ON A.STATE = B.STATE
		WHERE a.SP_ID='''+@CSPID+''' and  B.STATE IS NULL AND ISNULL(A.STATE,'''') <> '''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		--SELECT * FROM #NEW_STATE
		SET @CSTEP = 830
		WHILE(SELECT TOP 1 'U' FROM #NEW_STATE) = 'U'
		BEGIN
			EXEC GETNEXTKEY 'STATE','STATE_CODE',7,@LOCATINID,1,'',2,@CAC_CODEVAL OUTPUT 
		    SET @STATE = (SELECT TOP 1 STATE FROM #NEW_STATE)
		    INSERT INTO [STATE](STATE_CODE,[STATE],LAST_UPDATE,REGION_CODE,OCTROI_PERCENTAGE,INACTIVE)
		    SELECT @CAC_CODEVAL AS STATE_CODE,@STATE AS STATE,GETDATE() LAST_UPDATE,'0000000' AS REGION_CODE,0 AS OCTROI_PERCENTAGE,0 AS INACTIVE
		    SET @CCMD = N'DELETE FROM #NEW_STATE WHERE STATE = '''+@STATE+''''
		    EXEC SP_EXECUTESQL @CCMD
		END

		----INSERT NEW CITY
		
		SET @CSTEP = 850
		IF OBJECT_ID ('#NEW_CITY','U') IS NOT NULL
			DROP TABLE #NEW_CITY
			
		CREATE TABLE #NEW_CITY(CITY VARCHAR(300),STATE_CODE VARCHAR(50))
		
		SET @CSTEP = 880
		SET @CCMD = N'INSERT INTO #NEW_CITY(CITY,STATE_CODE)
					 SELECT DISTINCT A.CITY,C.STATE_CODE FROM '+@CIMPORTTABLE+' A
					 JOIN STATE C ON C.STATE = A.STATE
					 LEFT OUTER JOIN CITY B ON A.CITY = B.CITY AND B.STATE_CODE = C.STATE_CODE 
					 WHERE a.SP_ID='''+@CSPID+''' and ISNULL(B.CITY,'''') = '''' AND ISNULL(A.CITY,'''') <> '''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		--SELECT * FROM #NEW_CITY
		SET @CSTEP = 910		
		IF EXISTS(SELECT TOP 1 'U' FROM #NEW_CITY WHERE STATE_CODE IS NULL) 
		BEGIN
				SELECT 'ALERT' AS TYPE, 'INVALID STATE FOR CITY '+CITY+''  AS MESSAGE, '' AS VALUE FROM #NEW_CITY
				WHERE STATE_CODE IS NULL
				GOTO EXIT_PROC
		END
		
		SET @CSTEP = 940
		WHILE(SELECT TOP 1 'U' FROM #NEW_CITY) = 'U'
		BEGIN
			EXEC GETNEXTKEY 'CITY','CITY_CODE',7,@LOCATINID,1,'',2,@CAC_CODEVAL OUTPUT 
		    SELECT TOP 1 @CCITY = CITY FROM #NEW_CITY
		    SELECT TOP 1 @STATE = STATE_CODE FROM #NEW_CITY
		    INSERT INTO CITY(CITY_CODE,CITY,LAST_UPDATE,STATE_CODE,INACTIVE,COMPANY_CODE)
		    SELECT @CAC_CODEVAL AS CITY_CODE,@CCITY AS CITY,GETDATE() AS LAST_UPDATE, @STATE AS STATE_CODE,0 AS INACTIVE,'01' AS COMPANY_CODE
		    SET @CCMD = N'DELETE FROM #NEW_CITY WHERE CITY = '''+@CCITY+''' AND STATE_CODE = '''+@STATE+''''
		    PRINT @CCMD
		    EXEC SP_EXECUTESQL @CCMD
		END
		
		
		SET @CSTEP = 960
		IF OBJECT_ID ('#NEW_AREA','U') IS NOT NULL
			DROP TABLE #NEW_AREA
				
		CREATE TABLE #NEW_AREA(AREA_NAME VARCHAR(300),PINCODE VARCHAR(10),CITY_CODE VARCHAR(10))

		SET @CSTEP = 990
			SET @CCMD = N'INSERT INTO #NEW_AREA(AREA_NAME,PINCODE,CITY_CODE)
				SELECT DISTINCT A.AREA AS AREA_NAME,ISNULL(STR(A.PIN),'''') AS PINCODE,C.CITY_CODE 
				FROM '+@CIMPORTTABLE+' A 
				JOIN CITY C ON C.CITY = A.CITY LEFT OUTER JOIN AREA B
				ON A.AREA = B.AREA_NAME AND B.CITY_CODE = C.CITY_CODE 
			    WHERE a.SP_ID='''+@CSPID+''' and B.AREA_NAME IS NULL AND A.AREA IS NOT NULL'
	
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @CSTEP = 1020
		WHILE(SELECT TOP 1 'U' FROM #NEW_AREA) = 'U'
		BEGIN
			EXEC GETNEXTKEY 'AREA','AREA_CODE',7,@LOCATINID,1,'',2,@CAC_CODEVAL OUTPUT
			SELECT TOP 1 @CAREA = AREA_NAME, @PINCODE = PINCODE,@CCITY = CITY_CODE FROM #NEW_AREA
			INSERT INTO AREA(INACTIVE,AREA_CODE,AREA_NAME,PINCODE,CITY_CODE,LAST_UPDATE,COMPANY_CODE)
		    SELECT 0 AS INACTIVE, @CAC_CODEVAL AS AREA_CODE,@CAREA AS AREA_NAME,@PINCODE AS PINCODE,@CCITY AS CITY_CODE,GETDATE() AS LAST_UPDATE,'01' AS COMPANY_CODE
		    
		    SET @CCMD = N'DELETE FROM #NEW_AREA WHERE AREA_NAME = '''+@CAREA+''' AND CITY_CODE = '''+@CCITY+'''
						AND PINCODE = '''+@PINCODE+''''
		    PRINT @CCMD
		    EXEC SP_EXECUTESQL @CCMD
		END
		
		----INSERT NEW CUSTOMER 
		SET @CSTEP = 1050
		IF OBJECT_ID ('#NEW_CUSTOMER','U') IS NOT NULL
			DROP TABLE #NEW_CUSTOMER
				
		CREATE TABLE #NEW_CUSTOMER(USER_CUSTOMER_CODE VARCHAR(50))
		
		SET @CSTEP = 1080
		SET @CCMD = N'INSERT INTO #NEW_CUSTOMER(USER_CUSTOMER_CODE)
					SELECT A.USER_CUSTOMER_CODE FROM '+@CIMPORTTABLE+' A LEFT OUTER JOIN CUSTDYM B ON 
					A.USER_CUSTOMER_CODE=B.USER_CUSTOMER_CODE WHERE a.SP_ID='''+@CSPID+''' and B.USER_CUSTOMER_CODE IS NULL'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		--SELECT * FROM #NEW_CUSTOMER
		
		SET @CSTEP = 1110
		WHILE(SELECT TOP 1 'U' FROM #NEW_CUSTOMER) = 'U'
		BEGIN
			EXEC GETNEXTKEY 'CUSTDYM','CUSTOMER_CODE',12,@LOCATINID,1,'',2,@CAC_CODEVAL OUTPUT
			SELECT TOP 1 @CUSER_CUSTOMER_CODE=USER_CUSTOMER_CODE  FROM #NEW_CUSTOMER
			SET @CCMD = 'UPDATE '+@CIMPORTTABLE+' SET CUSTOMER_CODE = '''+@CAC_CODEVAL+''',REF_CUSTOMER_CODE = '''+@CAC_CODEVAL+''' WHERE USER_CUSTOMER_CODE = '''+@CUSER_CUSTOMER_CODE+''' a.SP_ID='''+@CSPID+'''' 
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			
			--SET @CCMD = N'UPDATE A SET A.MOBILE = (CASE WHEN ISNUMERIC(B.USER_CUSTOMER_CODE)=1 AND LEN(B.USER_CUSTOMER_CODE) =10  THEN B.USER_CUSTOMER_CODE  ELSE '''' END) FROM '+@CUSTDYM+' A JOIN '+@CIMPORTTABLE+' B
			--			ON A.USER_CUSTOMER_CODE = B.USER_CUSTOMER_CODE'
			--PRINT @CCMD
			--EXEC SP_EXECUTESQL @CCMD
						
		    SET @CCMD = N'DELETE FROM #NEW_CUSTOMER WHERE USER_CUSTOMER_CODE = '''+@CUSER_CUSTOMER_CODE+''''
		    PRINT @CCMD
		    EXEC SP_EXECUTESQL @CCMD
		END	
		
		SET @CSTEP = 1130
		IF OBJECT_ID ('#NEW_PREFIX','U') IS NOT NULL
			DROP TABLE #NEW_PREFIX
				
		CREATE TABLE #NEW_PREFIX(PREFIX_NAME VARCHAR(20),PREFIX_CODE VARCHAR(5))
		
		SET @CSTEP = 1160
		SET @CCMD = N'INSERT INTO #NEW_PREFIX(PREFIX_NAME)
					SELECT A.CUSTOMER_TITLE FROM '+@CIMPORTTABLE+' A LEFT OUTER JOIN PREFIX B ON 
					A.CUSTOMER_TITLE=B.PREFIX_NAME WHERE a.SP_ID='''+@CSPID+''' and isnull(A.CUSTOMER_TITLE,'''')<>'''' and B.PREFIX_NAME IS NULL'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD

	
		
		SET @CSTEP = 1190
		WHILE(SELECT TOP 1 'U' FROM #NEW_PREFIX) = 'U'
		BEGIN
			EXEC GETNEXTKEY 'PREFIX','PREFIX_CODE',5,@LOCATINID,1,'',2,@CAC_CODEVAL OUTPUT
			SELECT TOP 1 @CPRIFUX_NAME=PREFIX_NAME  FROM #NEW_PREFIX
		    INSERT INTO PREFIX(PREFIX_CODE,PREFIX_NAME,LAST_UPDATE) SELECT @CAC_CODEVAL AS PREFIX_CODE,@CPRIFUX_NAME AS PREFIX_NAME,GETDATE()
			DELETE FROM #NEW_PREFIX WHERE PREFIX_NAME = @CPRIFUX_NAME
		END	
		
		SET @CSTEP = 1210
		
	
		
		SET @CSTEP = 1240
		SET @CCMD = N'UPDATE A SET A.STATE_CODE = B.STATE_CODE FROM '+@CIMPORTTABLE+'  A JOIN STATE B ON ISNULL(A.STATE,'''') = B.STATE WHERE a.SP_ID='''+@CSPID+''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @CSTEP = 1260
		SET @CCMD = N'UPDATE A SET A.CITY_CODE = B.CITY_CODE FROM '+@CIMPORTTABLE+'  A JOIN CITY B ON ISNULL(A.CITY,'''') = B.CITY AND ISNULL(A.STATE_CODE,'''') = B.STATE_CODE WHERE a.SP_ID='''+@CSPID+''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @CSTEP = 1290
		SET @CCMD = N'UPDATE A SET A.AREA_CODE = B.AREA_CODE FROM '+@CIMPORTTABLE+'  A JOIN AREA B ON ISNULL(A.AREA,'''') = B.AREA_NAME AND ISNULL(A.CITY_CODE,'''') = B.CITY_CODE WHERE a.SP_ID='''+@CSPID+''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @CSTEP = 1320
		SET @CCMD = N'UPDATE A SET A.AREA_CODE = ISNULL(B.AREA_CODE,''0000000'') FROM '+@CIMPORTTABLE+' A JOIN '+@CIMPORTTABLE+' B ON A.USER_CUSTOMER_CODE = B.USER_CUSTOMER_CODE WHERE a.SP_ID='''+@CSPID+''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @CSTEP = 1350
		SET @CCMD = N'UPDATE '+@CIMPORTTABLE+' SET FLAT_DISC_PERCENTAGE = 0 WHERE ISNULL(FLAT_DISC_CUSTOMER,0) = 0 and SP_ID='''+@CSPID+''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @CSTEP = 1380
		SET @CCMD = N'UPDATE A SET A.PREFIX_CODE = B.PREFIX_CODE FROM '+@CIMPORTTABLE+' A JOIN PREFIX B ON ISNULL(A.CUSTOMER_TITLE,'''') = B.PREFIX_NAME WHERE a.SP_ID='''+@CSPID+''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @CSTEP = 1410
		SET @CCMD = N'UPDATE A  SET 
					A.CUSTOMER_CODE = B.CUSTOMER_CODE,
					A.REF_CUSTOMER_CODE = B.REF_CUSTOMER_CODE,
					A.MOBILE=B.MOBILE,
					A.MANAGER_CARD = B.MANAGER_CARD,
					A.OPENING_BALANCE= B.OPENING_BALANCE,
					A.PREFIX_CODE = B.PREFIX_CODE,
					A.SENT_TO_HO = B.SENT_TO_HO,
					A.INACTIVE = B.INACTIVE,
					A.WIZCLIP_LAST_UPDATE = B.WIZCLIP_LAST_UPDATE,
					A.LOCATION_ID = B.LOCATION_ID,
					A.AC_CODE = B.AC_CODE,
					A.PRIVILEGE_CUSTOMER = B.PRIVILEGE_CUSTOMER,
					A.CARD_NAME = B.CARD_NAME,
					A.LAST_UPDATE = GETDATE(),
					A.DT_CREATED = B.DT_CREATED,
					A.FLAT_DISC_PERCENTAGE_DURING_SALES = B.FLAT_DISC_PERCENTAGE_DURING_SALES
					FROM '+@CIMPORTTABLE+' A JOIN CUSTDYM B
					ON A.USER_CUSTOMER_CODE = B.USER_CUSTOMER_CODE
					WHERE a.SP_ID='''+@CSPID+''' '
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		
		SET @CSTEP = 1440
		
		SET @CCMD = N'UPDATE A  SET 
					A.MANAGER_CARD = 0,
					A.OPENING_BALANCE= 0,
					A.SENT_TO_HO = 0,
					A.INACTIVE = 0,
					A.WIZCLIP_LAST_UPDATE = '''',
					A.LOCATION_ID = '''+@LOCATINID+''',
					A.AC_CODE = ''0000000000'',
					A.PRIVILEGE_CUSTOMER = 0,
					A.CARD_NAME = '''',
					A.LAST_UPDATE = GETDATE(),
					A.FLAT_DISC_PERCENTAGE_DURING_SALES = 0,
					A.DT_CREATED = GETDATE()
					FROM '+@CIMPORTTABLE+' A LEFT OUTER JOIN CUSTDYM B
					ON A.USER_CUSTOMER_CODE = B.USER_CUSTOMER_CODE 
					WHERE B.USER_CUSTOMER_CODE IS NULL
					and a.SP_ID='''+@CSPID+''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
					
	   DECLARE @CWHERECLAUSE VARCHAR(1000)
		SET @CWHERECLAUSE='  SP_ID='''+ LTRIM(RTRIM((@CSPID)))+''''
		
	
		SET @CSOURCEDB = DB_NAME()+'.DBO.'
		SET @CSTEP = 1470
		EXEC UPDATEMASTERXN 
			@CSOURCEDB=@CSOURCEDB,
			@CSOURCETABLE=@CIMPORTTABLE,
			@CDESTDB=@CSOURCEDB,
			@CDESTTABLE='CUSTDYM',
			@CKEYFIELD1='CUSTOMER_CODE',
			@CKEYFIELD2='',
			@CKEYFIELD3='',
			@LINSERTONLY=0,
			@CFILTERCONDITION=@CWHERECLAUSE,
			@LUPDATEXNS=0,
			@CXNTYPE='',
			@LUPDATEONLY=0,
			@CUSERID='',
			@BALWAYSUPDATE=1
		
	END TRY
BEGIN CATCH
	SET @CERRMSG='P: SP_IMPORT_CUSTOMER, STEP: '+@CSTEP+' MESSAGE: '+ERROR_MESSAGE()
END CATCH
EXIT_PROC:
    
	IF ISNULL(@CERRMSG,'') = '' AND  @BALERT <> 1
	BEGIN
	   
	   IF @@TRANCOUNT > 0
		 COMMIT
		SELECT 'SUCCESS' AS TYPE,''AS MESSAGE,'' AS VALUE	
	END
	ELSE IF (ISNULL(@CERRMSG,'') <> '' ) OR @BALERT = 1
	BEGIN
		IF @@TRANCOUNT > 0
			ROLLBACK
			
		SELECT 'ERROR' AS TYPE,@CERRMSG AS MESSAGE,'' AS VALUE 
	END

	DELETE A FROM CUS_CUSTDYM_UPLOAD A (NOLOCK) where sp_id=@CSPID

END

--********************************* END OF PROCEDURE SP_IMPORT_CUSTOMER

*/