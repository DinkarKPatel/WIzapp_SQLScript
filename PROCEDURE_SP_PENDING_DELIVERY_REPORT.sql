create PROC SP_PENDING_DELIVERY_REPORT
(
@DFROM_DATE DATETIME,
@DTO_DATE   DATETIME,
@CPRODUCT_CODE VARCHAR(100)='',
@CCUST_CODE VARCHAR(100)='',
@CLoc VARCHAR(4)='',
@CEMP_CODE VARCHAR(100)='',
@iDateFilter int = 1  --1-For Delivery Dt 2 For Cmm Dt
)
AS
BEGIN
--(dinkar) Replace  left(memoid,2) to Location_code 
DECLARE @CCMD NVARCHAR(MAX),@CACNAME VARCHAR(1000)

IF OBJECT_ID('TEMPDB..#TEMP_PAYMODE','U') IS NOT NULL
		DROP TABLE #TEMP_PAYMODE
	
SELECT DISTINCT PMXD.MEMO_ID,PMXD.AMOUNT AS BALANCE_AMT,cm.location_Code  
INTO #TEMP_PAYMODE   
FROM PAYMODE_XN_DET PMXD (NOLOCK)	 
JOIN CMM01106 CM (NOLOCK) ON PMXD.MEMO_ID = CM.CM_ID
JOIN CMD01106 CD (NOLOCK) ON CM.CM_ID = CD.CM_ID
JOIN HOLD_BACK_DELIVER_DET HD (NOLOCK) ON CD.ROW_ID = HD.REF_CMD_ROW_ID
WHERE PMXD.XN_TYPE='SLS' AND PMXD.PAYMODE_CODE='0000004'
		   AND HD.DELIVERY_DT BETWEEN @DFROM_DATE AND @DTO_DATE AND HD.DELIVERED=0
		   AND (@CPRODUCT_CODE='' OR CD.PRODUCT_CODE =@CPRODUCT_CODE )
		   AND(@CCUST_CODE='' OR CM.CUSTOMER_CODE =@CCUST_CODE)
		   AND (@CEMP_CODE='' OR CD.EMP_CODE=@CEMP_CODE)
		   
IF @CLOC!=''--SPECIFIC LOCATION 
	BEGIN
		DELETE #TEMP_PAYMODE WHERE location_Code<>@CLOC--20 Feb 2019

		SELECT CUST.CUSTOMER_FNAME+''+CUST.CUSTOMER_LNAME AS CUSTOMER_NAME,EM.EMP_NAME, CM.CM_NO AS MEMO_NO,
		CONVERT(VARCHAR,CM.CM_DT,105) AS MEMO_DT,
		CASE WHEN ROW_NUMBER () OVER (PARTITION BY CM.CM_NO ORDER BY CM.CM_NO)=1 THEN ISNULL(CONVERT(NUMERIC(10,2),PMXD.BALANCE_AMT),0) ELSE 0.00 END AS BALANCE_AMT,
		HM.MEMO_NO AS ALT_SLIP_NO,HM.MEMO_DT AS ALT_SLIP_DT,HD.DELIVERY_DT,	
		SUM(ISNULL(CONVERT(NUMERIC(10,2),HD.QUANTITY),0)) AS QUANTITY
		FROM HOLD_BACK_DELIVER_DET HD (NOLOCK)
		JOIN HOLD_BACK_DELIVER_MST HM (NOLOCK) ON HM.MEMO_ID = HD.MEMO_ID		
		JOIN CMD01106 CD (NOLOCK) ON CD.ROW_ID=HD.REF_CMD_ROW_ID
		JOIN CMM01106 CM (NOLOCK) ON CM.CM_ID=CD.CM_ID
		JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =CD.PRODUCT_CODE 
		JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =SKU.ARTICLE_CODE 		
		LEFT OUTER JOIN #TEMP_PAYMODE PMXD ON PMXD.MEMO_ID=CM.CM_ID
		LEFT OUTER JOIN CUSTDYM CUST (NOLOCK) ON CUST.CUSTOMER_CODE=HM.CUSTOMER_CODE
		LEFT OUTER JOIN EMPLOYEE EM (NOLOCK) ON EM.EMP_CODE=CD.EMP_CODE
		LEFT OUTER JOIN
		(
		   SELECT REF_HBD_ROW_ID FROM SLS_DELIVERY_MST M (NOLOCK)
		   JOIN SLS_DELIVERY_DET D (NOLOCK) ON M.MEMO_ID=D.MEMO_ID 
		   WHERE M.CANCELLED =0
		) DEL ON DEL.REF_HBD_ROW_ID=HD.ROW_ID 
		WHERE (HD.DELIVERY_DT BETWEEN @DFROM_DATE AND @DTO_DATE and @iDateFilter=1) 
			 or      ( cm.cm_dt BETWEEN @DFROM_DATE AND @DTO_DATE  and @iDateFilter=2) 
		AND HD.DELIVERED=0
		AND (@CPRODUCT_CODE='' OR CD.PRODUCT_CODE =@CPRODUCT_CODE )
		AND(@CCUST_CODE='' OR CM.CUSTOMER_CODE =@CCUST_CODE)
		AND (@CEMP_CODE='' OR CD.EMP_CODE=@CEMP_CODE)
		AND REF_HBD_ROW_ID IS NULL
		AND cm.location_Code =@CLOC--20 Feb 2019
		GROUP BY CM.CM_NO,HM.MEMO_NO,HM.MEMO_DT,HD.DELIVERY_DT,CUST.CUSTOMER_FNAME+''+CUST.CUSTOMER_LNAME,
		EM.EMP_NAME,PMXD.BALANCE_AMT,CM.CM_DT

		
		SELECT CUST.CUSTOMER_FNAME+''+CUST.CUSTOMER_LNAME AS CUSTOMER_NAME,EM.EMP_NAME, CM.CM_NO AS MEMO_NO,
		CONVERT(VARCHAR,CM.CM_DT,105) AS MEMO_DT,
		CASE WHEN ROW_NUMBER () OVER (PARTITION BY CM.CM_NO ORDER BY CM.CM_NO)=1 THEN ISNULL(CONVERT(NUMERIC(10,2),PMXD.BALANCE_AMT),0) ELSE 0.00 END AS BALANCE_AMT,
		HM.MEMO_NO AS ALT_SLIP_NO,HM.MEMO_DT AS ALT_SLIP_DT,HD.DELIVERY_DT,
		ISNULL(CONVERT(NUMERIC(10,2),HD.QUANTITY),0) AS QUANTITY
		,CD.PRODUCT_CODE,ART.ARTICLE_NO,ART.ARTICLE_NAME 
		FROM HOLD_BACK_DELIVER_DET HD (NOLOCK)
		JOIN HOLD_BACK_DELIVER_MST HM (NOLOCK) ON HM.MEMO_ID = HD.MEMO_ID		
		JOIN CMD01106 CD (NOLOCK) ON CD.ROW_ID=HD.REF_CMD_ROW_ID
		JOIN CMM01106 CM (NOLOCK) ON CM.CM_ID=CD.CM_ID
		JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =CD.PRODUCT_CODE 
		JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =SKU.ARTICLE_CODE 		
		LEFT OUTER JOIN #TEMP_PAYMODE PMXD ON PMXD.MEMO_ID=CM.CM_ID
		LEFT OUTER JOIN CUSTDYM CUST (NOLOCK) ON CUST.CUSTOMER_CODE=HM.CUSTOMER_CODE
		LEFT OUTER JOIN EMPLOYEE EM (NOLOCK) ON EM.EMP_CODE=CD.EMP_CODE
		LEFT OUTER JOIN
		(
		   SELECT REF_HBD_ROW_ID 
		   FROM SLS_DELIVERY_MST M (NOLOCK)
		   JOIN SLS_DELIVERY_DET D (NOLOCK) ON M.MEMO_ID=D.MEMO_ID 
		   WHERE M.CANCELLED =0
		) DEL ON DEL.REF_HBD_ROW_ID=HD.ROW_ID 
		WHERE (HD.DELIVERY_DT BETWEEN @DFROM_DATE AND @DTO_DATE  and @iDateFilter=1) 
			 or      ( cm.cm_dt BETWEEN @DFROM_DATE AND @DTO_DATE  and @iDateFilter=2) 
		AND HD.DELIVERED=0
		AND (@CPRODUCT_CODE='' OR CD.PRODUCT_CODE =@CPRODUCT_CODE )
		AND(@CCUST_CODE='' OR CM.CUSTOMER_CODE =@CCUST_CODE)
		AND (@CEMP_CODE='' OR CD.EMP_CODE=@CEMP_CODE)
		AND REF_HBD_ROW_ID IS NULL
		AND LEFT(CM.CM_ID,2)=@CLOC--20 Feb 2019
	END
ELSE--ALL LOCATIONS
	BEGIN
		SELECT CUST.CUSTOMER_FNAME+''+CUST.CUSTOMER_LNAME AS CUSTOMER_NAME,EM.EMP_NAME, CM.CM_NO AS MEMO_NO,
		CONVERT(VARCHAR,CM.CM_DT,105) AS MEMO_DT,
		CASE WHEN ROW_NUMBER () OVER (PARTITION BY CM.CM_NO ORDER BY CM.CM_NO)=1 THEN ISNULL(CONVERT(NUMERIC(10,2),PMXD.BALANCE_AMT),0) ELSE 0.00 END AS BALANCE_AMT,
		HM.MEMO_NO AS ALT_SLIP_NO,HM.MEMO_DT AS ALT_SLIP_DT,HD.DELIVERY_DT,	
		SUM(ISNULL(CONVERT(NUMERIC(10,2),HD.QUANTITY),0)) AS QUANTITY
		FROM HOLD_BACK_DELIVER_DET HD (NOLOCK)
		JOIN HOLD_BACK_DELIVER_MST HM (NOLOCK) ON HM.MEMO_ID = HD.MEMO_ID		
		JOIN CMD01106 CD (NOLOCK) ON CD.ROW_ID=HD.REF_CMD_ROW_ID
		JOIN CMM01106 CM (NOLOCK) ON CM.CM_ID=CD.CM_ID
		JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =CD.PRODUCT_CODE 
		JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =SKU.ARTICLE_CODE 		
		LEFT OUTER JOIN #TEMP_PAYMODE PMXD ON PMXD.MEMO_ID=CM.CM_ID
		LEFT OUTER JOIN CUSTDYM CUST (NOLOCK) ON CUST.CUSTOMER_CODE=HM.CUSTOMER_CODE
		LEFT OUTER JOIN EMPLOYEE EM (NOLOCK) ON EM.EMP_CODE=CD.EMP_CODE
		LEFT OUTER JOIN
		(
		   SELECT REF_HBD_ROW_ID FROM SLS_DELIVERY_MST M (NOLOCK)
		   JOIN SLS_DELIVERY_DET D (NOLOCK) ON M.MEMO_ID=D.MEMO_ID 
		   WHERE M.CANCELLED =0
		) DEL ON DEL.REF_HBD_ROW_ID=HD.ROW_ID 
		WHERE (HD.DELIVERY_DT BETWEEN @DFROM_DATE AND @DTO_DATE and  @iDateFilter=1 ) 
		 or      ( cm.cm_dt BETWEEN @DFROM_DATE AND @DTO_DATE  and @iDateFilter=2) 
		 AND HD.DELIVERED=0  
		AND (@CPRODUCT_CODE='' OR CD.PRODUCT_CODE =@CPRODUCT_CODE )
		AND(@CCUST_CODE='' OR CM.CUSTOMER_CODE =@CCUST_CODE)
		AND (@CEMP_CODE='' OR CD.EMP_CODE=@CEMP_CODE)
		AND REF_HBD_ROW_ID IS NULL
		GROUP BY CM.CM_NO,HM.MEMO_NO,HM.MEMO_DT,HD.DELIVERY_DT,CUST.CUSTOMER_FNAME+''+CUST.CUSTOMER_LNAME,
		EM.EMP_NAME,PMXD.BALANCE_AMT,CM.CM_DT

		
		SELECT CUST.CUSTOMER_FNAME+''+CUST.CUSTOMER_LNAME AS CUSTOMER_NAME,EM.EMP_NAME, CM.CM_NO AS MEMO_NO,
		CONVERT(VARCHAR,CM.CM_DT,105) AS MEMO_DT,
		CASE WHEN ROW_NUMBER () OVER (PARTITION BY CM.CM_NO ORDER BY CM.CM_NO)=1 THEN ISNULL(CONVERT(NUMERIC(10,2),PMXD.BALANCE_AMT),0) ELSE 0.00 END AS BALANCE_AMT,
		HM.MEMO_NO AS ALT_SLIP_NO,HM.MEMO_DT AS ALT_SLIP_DT,HD.DELIVERY_DT,
		ISNULL(CONVERT(NUMERIC(10,2),HD.QUANTITY),0) AS QUANTITY
		,CD.PRODUCT_CODE,ART.ARTICLE_NO,ART.ARTICLE_NAME 
		FROM HOLD_BACK_DELIVER_DET HD (NOLOCK)
		JOIN HOLD_BACK_DELIVER_MST HM (NOLOCK) ON HM.MEMO_ID = HD.MEMO_ID		
		JOIN CMD01106 CD (NOLOCK) ON CD.ROW_ID=HD.REF_CMD_ROW_ID
		JOIN CMM01106 CM (NOLOCK) ON CM.CM_ID=CD.CM_ID
		JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =CD.PRODUCT_CODE 
		JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =SKU.ARTICLE_CODE 		
		LEFT OUTER JOIN #TEMP_PAYMODE PMXD ON PMXD.MEMO_ID=CM.CM_ID
		LEFT OUTER JOIN CUSTDYM CUST (NOLOCK) ON CUST.CUSTOMER_CODE=HM.CUSTOMER_CODE
		LEFT OUTER JOIN EMPLOYEE EM (NOLOCK) ON EM.EMP_CODE=CD.EMP_CODE
		LEFT OUTER JOIN
		(
		   SELECT REF_HBD_ROW_ID 
		   FROM SLS_DELIVERY_MST M (NOLOCK)
		   JOIN SLS_DELIVERY_DET D (NOLOCK) ON M.MEMO_ID=D.MEMO_ID 
		   WHERE M.CANCELLED =0
		) DEL ON DEL.REF_HBD_ROW_ID=HD.ROW_ID 
		WHERE        ( HD.DELIVERY_DT BETWEEN @DFROM_DATE AND @DTO_DATE  and @iDateFilter=1)
		 or      ( cm.cm_dt BETWEEN @DFROM_DATE AND @DTO_DATE  and @iDateFilter=2)
		AND HD.DELIVERED=0
		AND (@CPRODUCT_CODE='' OR CD.PRODUCT_CODE =@CPRODUCT_CODE )
		AND(@CCUST_CODE='' OR CM.CUSTOMER_CODE =@CCUST_CODE)
		AND (@CEMP_CODE='' OR CD.EMP_CODE=@CEMP_CODE)
		AND REF_HBD_ROW_ID IS NULL
	END
END
--END OF PROCEDURE - SP_PENDING_DELIVERY_REPORT