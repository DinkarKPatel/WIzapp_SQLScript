CREATE PROCEDURE SP3S_SCHEME_SETUP      
(      
 @NQUERY    NUMERIC(2),      
 @CWHERE    NVARCHAR(MAX)='',     
 @CROWID    VARCHAR(100)='',       
 @NNAVMODE  NUMERIC(2)=1,
 @NSETUPMODE NUMERIC(2)=0,
 @CREFMEMONO VARCHAR(40)='', 
 @CFINYEAR   VARCHAR(5)='',
 @BINCLUDEESTIMATE	BIT=0,
 @NDISCOUNT  NUMERIC(14,2)=0, 
 @NSPID INT = ''
)      
AS      
BEGIN
 
	DECLARE @CCMD NVARCHAR(MAX),@CTEMPTABLE VARCHAR(100),@CERRMSG VARCHAR(MAX) ,@CPROMOID VARCHAR(100),
			@BADDDISC BIT,@CADDNLDISC VARCHAR(100)    
    
IF @NQUERY=1      
GOTO LBLNAV      
ELSE IF @NQUERY=2      
GOTO LBLMST      
ELSE IF @NQUERY=3      
GOTO LBLDET      
ELSE IF @NQUERY=4      
GOTO LBLLOC     
ELSE IF @NQUERY=5      
GOTO LBLALLLOC    
ELSE IF @NQUERY=6      
GOTO LBLSCAN      
ELSE IF @NQUERY=7      
GOTO LBLARTLIST              
ELSE IF @NQUERY=8--NEW ADD UNMERGED DATE-02-JUNE-2014
GOTO LBLBARCODE
ELSE IF @NQUERY=9
GOTO LBLARTICLEDTCREATED
ELSE IF @NQUERY=10
GOTO LBLPARA3DTCREATED
ELSE IF @NQUERY=11
GOTO LBLPRODUCTDTCREATED
ELSE IF @NQUERY=12
GOTO LBLGETSCHEMESET -- GET SCHEME SET
ELSE IF @NQUERY=13
GOTO LBLSCHEMEDETAILS -- GET SCHEME DET FOR TREE..
ELSE IF @NQUERY=14
GOTO LBLPRODSCAN
ELSE IF @NQUERY=15
GOTO LBLSLSBC  --- FOR SCHEME_SETUP_SLSBC
ELSE IF @NQUERY=16
GOTO LBLGETDATFRMFILTER 
ELSE IF @NQUERY= 17
GOTO LBLGETDATAFRMIMPORT
ELSE IF @NQUERY= 18
GOTO LBLGETDATABYARTICLE  --LBLALLARTICLE
ELSE IF @NQUERY= 19           
GOTO LBLSLSART
ELSE IF @NQUERY= 20          
GOTO LBLALLARTICLE
ELSE IF @NQUERY= 21          
GOTO LBLARTICLEFILTER   -- GET DATA FROM FILTER
ELSE IF @NQUERY IN (22,50)     
GOTO LBLARTICLEIMPORTEXCEL
ELSE IF @NQUERY= 23     
GOTO LBLALLPARA3
ELSE IF @NQUERY= 24
GOTO LBLSLPARA3
ELSE IF @NQUERY IN (25,49)
GOTO LBLSLSPARA3IMPORT
ELSE IF @NQUERY= 26
GOTO LBLGETSLSMSTBYNO
ELSE IF @NQUERY= 27
GOTO LBLGETSLSBCBYREFID
ELSE IF @NQUERY= 28
GOTO LBLGETSLSBCDETAIL
ELSE IF @NQUERY= 29
GOTO LBLSCHEMEMSTLOC
ELSE IF @NQUERY= 30
GOTO LBLSCHEMEDETBYROWID
ELSE IF @NQUERY= 31
GOTO LBLSETUPART
ELSE IF @NQUERY= 32
GOTO LBLSETUPPARA3
ELSE IF @NQUERY= 33
GOTO LBLALLPROMO
ELSE IF @NQUERY= 34
GOTO LBLPROMOSCHEMEDET
ELSE IF @NQUERY= 35
GOTO LBLGETSCHEMESETBYNOANDNAME
ELSE IF @NQUERY= 36
GOTO LBLGETSCHEMESETBYNAME
ELSE IF @NQUERY= 37
GOTO LBLPOWERPRICEQTY
ELSE IF @NQUERY= 38
GOTO LBLSETUPART_GET
ELSE IF @NQUERY= 39
GOTO LBLSETUPBC_GET
ELSE IF @NQUERY= 40
GOTO LBLSETUPPARA_GET
ELSE IF @NQUERY= 41
GOTO LBLSEC_SUBSECDETAILS
ELSE IF @NQUERY= 42
GOTO LBLSLSPARA3IMPORT_PRO
ELSE IF @NQUERY= 43
GOTO LBLPARA3_DETAILS
ELSE IF @NQUERY= 44
GOTO LBLPRODUT_CODE_IMPORT
ELSE IF @NQUERY= 45
GOTO LBLFINDBARCODE_TITLES
ELSE IF @NQUERY= 46
GOTO LBLFINDTITLES_LIST
ELSE IF @NQUERY= 47
GOTO LBLFINDTITLEGROUPS_LIST
ELSE IF @NQUERY= 48
GOTO LBLSCHEMESLOV
ELSE IF @NQUERY= 51
GOTO LBLCOPYSCHEMELIST
ELSE IF @NQUERY= 52
GOTO LBLSLSEAN
ELSE IF @NQUERY= 53
GOTO LBLEANSCAN
ELSE IF @NQUERY= 54
GOTO LBLSETUPEAN
ELSE IF @NQUERY= 55
GOTO LBLEANIMPORTEXCEL
ELSE IF @NQUERY= 56
GOTO LBLSETUPEAN_GET
ELSE IF @NQUERY= 57
GOTO LBLSETUPALLMST
ELSE IF @NQUERY =58     
GOTO LBLARTICLEIMPORTEXCEL1
ELSE IF @NQUERY= 59
GOTO LBLSETUPALLMSTCONFIG
ELSE IF @NQUERY= 60
GOTO LBLSETUPOPTSCHPARAS
ELSE IF @NQUERY= 61
GOTO LBLSCHEME0014DET

ELSE IF @NQUERY=62    
GOTO LBLSLSBCADD  --- FOR GET ADD    
  
ELSE IF @NQUERY= 63    
GOTO LBLSETUPBC_GET_RES  --FOR BUY RES

ELSE IF @NQUERY= 64    
GOTO LBLSETUPALLMST_GET_2  --FOR GET COM

ELSE IF @NQUERY= 65    
GOTO LBLSETUPALLMST_GET_3  --FOR GET ADD 

ELSE IF @NQUERY= 66    
GOTO LBLSETUPALLMST_GET_4  --FOR BUY RES   



LBLSETUPALLMST_GET_2:
	
	SELECT A.*,SECTION_NAME,C.SUB_SECTION_NAME,B.ARTICLE_NO,PARA1_NAME,PARA2_NAME,PARA3_NAME,PARA4_NAME,
	PARA5_NAME,PARA6_NAME,(CASE WHEN A.DISCOUNT_MODE = 1 THEN 'PCT' 
	WHEN A.DISCOUNT_MODE = 2 THEN 'NET' 
	WHEN A.DISCOUNT_MODE = 3 THEN 'AMT' ELSE '' END ) AS DISC_TYPE
	FROM SCHEME_SETUP_ALLMASTERS A
	JOIN scheme_setup_det s ON s.row_id=a.SCHEME_SETUP_DET_ROW_ID
	LEFT OUTER JOIN ARTICLE B ON A.ARTICLE_CODE = B.ARTICLE_CODE
	LEFT OUTER  JOIN SECTIOND C ON C.SUB_SECTION_CODE = A.SUB_SECTION_CODE 
	LEFT OUTER  JOIN SECTIONM D ON D.SECTION_CODE = A.SECTION_CODE
	LEFT OUTER  JOIN PARA1 P1 ON P1.PARA1_CODE=A.PARA1_CODE
	LEFT OUTER  JOIN PARA2 P2 ON P2.PARA2_CODE=A.PARA2_CODE
	LEFT OUTER  JOIN PARA3 P3 ON P3.PARA3_CODE=A.PARA3_CODE
	LEFT OUTER  JOIN PARA4 P4 ON P4.PARA4_CODE=A.PARA4_CODE
	LEFT OUTER  JOIN PARA5 P5 ON P5.PARA5_CODE=A.PARA5_CODE
	LEFT OUTER JOIN PARA6 P6 ON P6.PARA6_CODE=A.PARA6_CODE
	WHERE  A.SCHEME_SETUP_DET_ROW_ID = @CWHERE  AND ISNULL(source_type,0)=2

   GOTO ENDPROC 
   
   LBLSETUPALLMST_GET_3:
	
	SELECT A.*,SECTION_NAME,C.SUB_SECTION_NAME,B.ARTICLE_NO,PARA1_NAME,PARA2_NAME,PARA3_NAME,PARA4_NAME,
	PARA5_NAME,PARA6_NAME,(CASE WHEN A.DISCOUNT_MODE = 1 THEN 'PCT' 
	WHEN A.DISCOUNT_MODE = 2 THEN 'NET' 
	WHEN A.DISCOUNT_MODE = 3 THEN 'AMT' ELSE '' END ) AS DISC_TYPE
	FROM SCHEME_SETUP_ALLMASTERS A
	JOIN scheme_setup_det s ON s.row_id=a.SCHEME_SETUP_DET_ROW_ID
	LEFT OUTER JOIN ARTICLE B ON A.ARTICLE_CODE = B.ARTICLE_CODE
	LEFT OUTER  JOIN SECTIOND C ON C.SUB_SECTION_CODE = A.SUB_SECTION_CODE 
	LEFT OUTER  JOIN SECTIONM D ON D.SECTION_CODE = A.SECTION_CODE
	LEFT OUTER  JOIN PARA1 P1 ON P1.PARA1_CODE=A.PARA1_CODE
	LEFT OUTER  JOIN PARA2 P2 ON P2.PARA2_CODE=A.PARA2_CODE
	LEFT OUTER  JOIN PARA3 P3 ON P3.PARA3_CODE=A.PARA3_CODE
	LEFT OUTER  JOIN PARA4 P4 ON P4.PARA4_CODE=A.PARA4_CODE
	LEFT OUTER  JOIN PARA5 P5 ON P5.PARA5_CODE=A.PARA5_CODE
	LEFT OUTER JOIN PARA6 P6 ON P6.PARA6_CODE=A.PARA6_CODE
	WHERE  A.SCHEME_SETUP_DET_ROW_ID = @CWHERE  AND ISNULL(source_type,0)=3

     GOTO ENDPROC 
   
   
    LBLSETUPALLMST_GET_4:
	
	SELECT A.*,SECTION_NAME,C.SUB_SECTION_NAME,B.ARTICLE_NO,PARA1_NAME,PARA2_NAME,PARA3_NAME,PARA4_NAME,
	PARA5_NAME,PARA6_NAME,(CASE WHEN A.DISCOUNT_MODE = 1 THEN 'PCT' 
	WHEN A.DISCOUNT_MODE = 2 THEN 'NET' 
	WHEN A.DISCOUNT_MODE = 3 THEN 'AMT' ELSE '' END ) AS DISC_TYPE
	FROM SCHEME_SETUP_ALLMASTERS A
	LEFT OUTER JOIN ARTICLE B ON A.ARTICLE_CODE = B.ARTICLE_CODE
	LEFT OUTER  JOIN SECTIOND C ON C.SUB_SECTION_CODE = A.SUB_SECTION_CODE 
	LEFT OUTER  JOIN SECTIONM D ON D.SECTION_CODE = A.SECTION_CODE
	LEFT OUTER  JOIN PARA1 P1 ON P1.PARA1_CODE=A.PARA1_CODE
	LEFT OUTER  JOIN PARA2 P2 ON P2.PARA2_CODE=A.PARA2_CODE
	LEFT OUTER  JOIN PARA3 P3 ON P3.PARA3_CODE=A.PARA3_CODE
	LEFT OUTER  JOIN PARA4 P4 ON P4.PARA4_CODE=A.PARA4_CODE
	LEFT OUTER  JOIN PARA5 P5 ON P5.PARA5_CODE=A.PARA5_CODE
	LEFT OUTER JOIN PARA6 P6 ON P6.PARA6_CODE=A.PARA6_CODE
	WHERE  A.SCHEME_SETUP_DET_ROW_ID = @CWHERE  AND ISNULL(source_type,0) IN (4,1)

    GOTO ENDPROC 



 LBLSLSBCADD:    
    
 SELECT MST.*    
 ,SKU.MRP,SKU.PURCHASE_PRICE, SECTIOND.SUB_SECTION_NAME, SECTIONM.SECTION_NAME    
 ,PARA1.PARA1_NAME,PARA1.PARA1_CODE    
 ,PARA2.PARA2_NAME,PARA2.PARA2_CODE    
 ,PARA3.PARA3_NAME,PARA3.PARA3_CODE      
 ,PARA4.PARA4_NAME,PARA4.PARA4_CODE    
 ,PARA5.PARA5_NAME,PARA5.PARA5_CODE    
 ,PARA6.PARA6_NAME,PARA6.PARA6_CODE,
 ARTICLE.ARTICLE_NO,
 CONVERT(NUMERIC(10,0),0) AS OLD_DISCOUNT_MODE,CONVERT(NUMERIC(10,0),0) AS OLD_DISCOUNT_FIGURE    
 FROM SCHEME_SETUP_SLSBC_GET MST (NOLOCK)     
 JOIN SKU (NOLOCK) ON MST.PRODUCT_CODE = SKU.PRODUCT_CODE     
 JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE    
 LEFT JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE     
 LEFT JOIN PARA1 ON PARA1.PARA1_CODE = SKU.PARA1_CODE    
 LEFT JOIN PARA2 ON PARA2.PARA2_CODE = SKU.PARA2_CODE    
 LEFT JOIN PARA3 ON PARA3.PARA3_CODE = SKU.PARA3_CODE    
 LEFT JOIN PARA4 ON PARA4.PARA4_CODE = SKU.PARA4_CODE    
 LEFT JOIN PARA5 ON PARA5.PARA5_CODE = SKU.PARA5_CODE    
 LEFT JOIN PARA6 ON PARA6.PARA6_CODE = SKU.PARA6_CODE    
 WHERE MST.SCHEME_SETUP_DET_ROW_ID = @CWHERE   AND  ISNULL(source_type,0)=2 
       
 GOTO ENDPROC   
 
 
 
 LBLSETUPBC_GET_RES:   
  
 SELECT MST.*,    
 SKU.MRP,SKU.PURCHASE_PRICE, SECTIOND.SUB_SECTION_NAME, SECTIONM.SECTION_NAME    
 ,PARA1.PARA1_NAME,PARA1.PARA1_CODE    
 ,PARA2.PARA2_NAME,PARA2.PARA2_CODE    
 ,PARA3.PARA3_NAME,PARA3.PARA3_CODE      
 ,PARA4.PARA4_NAME,PARA4.PARA4_CODE    
 ,PARA5.PARA5_NAME,PARA5.PARA5_CODE    
 ,PARA6.PARA6_NAME,PARA6.PARA6_CODE    
 ,ARTICLE.ARTICLE_NO
 FROM SCHEME_SETUP_SLSBC MST (NOLOCK)     
 JOIN SKU (NOLOCK) ON MST.PRODUCT_CODE = SKU.PRODUCT_CODE     
 LEFT JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.SKU_CODE    
 LEFT JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE    
 LEFT JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE     
 LEFT JOIN PARA1 ON PARA1.PARA1_CODE = SKU.PARA1_CODE    
 LEFT JOIN PARA2 ON PARA2.PARA2_CODE = SKU.PARA2_CODE    
 LEFT JOIN PARA3 ON PARA3.PARA3_CODE = SKU.PARA3_CODE    
 LEFT JOIN PARA4 ON PARA4.PARA4_CODE = SKU.PARA4_CODE    
 LEFT JOIN PARA5 ON PARA5.PARA5_CODE = SKU.PARA5_CODE    
 LEFT JOIN PARA6 ON PARA6.PARA6_CODE = SKU.PARA6_CODE    
 WHERE MST.SCHEME_SETUP_DET_ROW_ID = @CWHERE  AND  ISNULL(source_type,0)=2
     
 GOTO ENDPROC   

LBLPRODUT_CODE_IMPORT: 
 BEGIN TRY 
		 SET @CTEMPTABLE = 'TEMP_SLS_BC_'+LTRIM(RTRIM(STR(@NSPID)))
		 
		 IF OBJECT_ID ('#NF_PRODUCT_CODE','U') IS NOT NULL
			DROP TABLE #NF_PRODUCT_CODE
		 CREATE TABLE #NF_PRODUCT_CODE(PRODUCT_CODE VARCHAR(100))
		
		 SET @CCMD = N'SELECT A.PRODUCT_CODE FROM '+@CTEMPTABLE+' A LEFT OUTER JOIN SKU B ON A.PRODUCT_CODE = B.PRODUCT_CODE
			WHERE B.PRODUCT_CODE IS NULL'
		 PRINT @CCMD
		 INSERT INTO #NF_PRODUCT_CODE
		 EXEC SP_EXECUTESQL @CCMD
		 
		 IF NOT EXISTS (SELECT TOP 1 COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE column_name='dept_id' and table_name=@CTEMPTABLE)
		 BEGIN
			SET @cCmd=N'ALTER TABLE '+@CTEMPTABLE+' ADD dept_id CHAR(2)'
			EXEC SP_EXECUTESQL @cCmd
		 END

		 IF EXISTS (SELECT TOP 1 * FROM  #NF_PRODUCT_CODE)
			SELECT PRODUCT_CODE AS PRODUCTNOTFOUND, PRODUCT_CODE FROM #NF_PRODUCT_CODE		
	     
		 IF OBJECT_ID('#SLS_BC_PRODUCT_CODE','U') IS NOT NULL
			DROP TABLE #SLS_BC_PRODUCT_CODE
			
		 CREATE TABLE  #SLS_BC_PRODUCT_CODE
		(PRODUCT_CODE VARCHAR(100),SECTION_NAME VARCHAR(100),SUB_SECTION_NAME VARCHAR(100),PARA1_NAME VARCHAR(500),
		 PARA2_NAME VARCHAR(500),PARA3_NAME VARCHAR(500),PARA4_NAME VARCHAR(500),PARA5_NAME VARCHAR(500),PARA6_NAME VARCHAR(500),
		 PURCHASE_PRICE NUMERIC(14,2),MRP NUMERIC(14,2),DISC_TYPE CHAR(3),DISCOUNT_FIGURE NUMERIC(14,2),DISCOUNT_PERCENTAGE NUMERIC(14,2),
		 DISCOUNT_AMOUNT NUMERIC(14,2),NET_PRICE NUMERIC(14,2),OLD_MD_PERCENTAGE NUMERIC(14,2),
		 NEW_MD_PERCENTAGE NUMERIC(14,2),DISCOUNT_MODE INT,QUANTITY INT,item_dept_id char(2))	
	     
		 SET @CCMD =N'SELECT SKU.PRODUCT_CODE,SECTIONM.SECTION_NAME,SECTIOND.SUB_SECTION_NAME,PARA1_NAME
		,PARA2_NAME,PARA3_NAME,PARA4_NAME,PARA5_NAME,PARA6_NAME,SKU.PURCHASE_PRICE,SKU.MRP,
		'''' AS DISC_TYPE,
		0 AS DISCOUNT_FIGURE,
		CONVERT(NUMERIC(14,0),0) AS DISCOUNT_PERCENTAGE
		,CONVERT(NUMERIC(14,0),0) AS DISCOUNT_AMOUNT
		,CONVERT(NUMERIC(14,0),0) AS NET_PRICE
		,CONVERT(NUMERIC(14,2),ROUND((CASE WHEN SKU.MRP <> 0 THEN (((SKU.MRP-SKU.PURCHASE_PRICE)*100)/(SKU.MRP)) ELSE 0 END),2))  AS OLD_MD_PERCENTAGE
		,CONVERT(NUMERIC(14,2),0) AS NEW_MD_PERCENTAGE
		,CONVERT(INT,0) AS DISCOUNT_MODE, QUANTITY=CAST( 1 AS INT),a.dept_id as item_dept_id
		FROM SKU 
		JOIN ARTICLE  ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE
		JOIN SECTIOND ON SECTIOND.SUB_SECTION_CODE = ARTICLE.SUB_SECTION_CODE 
		JOIN SECTIONM ON SECTIONM.SECTION_CODE = SECTIOND.SECTION_CODE
		JOIN PARA1    ON PARA1.PARA1_CODE = SKU.PARA1_CODE
		JOIN PARA2    ON PARA2.PARA2_CODE = SKU.PARA2_CODE
		JOIN PARA3    ON PARA3.PARA3_CODE = SKU.PARA3_CODE
		JOIN PARA4    ON PARA4.PARA4_CODE = SKU.PARA4_CODE
		JOIN PARA5    ON PARA5.PARA5_CODE = SKU.PARA5_CODE
		JOIN PARA6    ON PARA6.PARA6_CODE = SKU.PARA6_CODE
		JOIN '+@CTEMPTABLE+' A ON A.PRODUCT_CODE = SKU.PRODUCT_CODE'
		PRINT @CCMD
		INSERT INTO #SLS_BC_PRODUCT_CODE
		EXEC SP_EXECUTESQL @CCMD
		
		
		SELECT * FROM #SLS_BC_PRODUCT_CODE
		
		SET @CCMD = 'IF OBJECT_ID ('''+@CTEMPTABLE+''',''U'') IS NOT NULL
						DROP TABLE '+@CTEMPTABLE+''
	    
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
END TRY
BEGIN CATCH
	SET @CERRMSG = ERROR_MESSAGE()
	SELECT @CERRMSG AS ERRMSG
END CATCH
	
GOTO ENDPROC

 LBLPARA3_DETAILS: 
	
	SET @CWHERE=(CASE WHEN @CWHERE='' THEN '1=1' ELSE @CWHERE END)
	
    SET @CCMD =N'SELECT DISTINCT PARA3.PARA3_CODE,PARA3.PARA3_NAME,
	''PCT'' AS DISC_TYPE,CAST(0 AS NUMERIC(10,2)) AS DISCOUNT_FIGURE,
	CAST(1 AS NUMERIC(10,0)) AS DISCOUNT_MODE,
	SCHEME_SETUP_DET_ROW_ID=CAST('''' AS VARCHAR(100)),
	ROW_ID=CAST('''' AS VARCHAR(100)),
	COMPANY_CODE=CAST('''' AS VARCHAR(10)),
	LASTUPDATE=CAST(NULL AS DATETIME)
    FROM SKU 
	JOIN ARTICLE  ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE
	JOIN SECTIOND ON SECTIOND.SUB_SECTION_CODE = ARTICLE.SUB_SECTION_CODE 
	JOIN SECTIONM ON SECTIONM.SECTION_CODE = SECTIOND.SECTION_CODE
	JOIN PARA1    ON PARA1.PARA1_CODE = SKU.PARA1_CODE
	JOIN PARA2    ON PARA2.PARA2_CODE = SKU.PARA2_CODE
	JOIN PARA3    ON PARA3.PARA3_CODE = SKU.PARA3_CODE
	JOIN PARA4    ON PARA4.PARA4_CODE = SKU.PARA4_CODE
	JOIN PARA5    ON PARA5.PARA5_CODE = SKU.PARA5_CODE
	JOIN PARA6    ON PARA6.PARA6_CODE = SKU.PARA6_CODE  
	WHERE '+@CWHERE
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD
  GOTO ENDPROC
  
  LBLARTICLEIMPORTEXCEL1:	
	
	BEGIN TRY
		SET @CTEMPTABLE = 'TEMP_SCHEME_SETUP_ALLMASTERS_'+LTRIM(RTRIM(STR(@NSPID)))
		
		DECLARE @tDupParas TABLE (section_name varchar(100),sub_section_name varchar(100),article_no VARCHAR(300),para1_name VARCHAR(300),para2_name VARCHAR(300),para3_name VARCHAR(300),
		para4_name VARCHAR(300),para5_name VARCHAR(300),para6_name VARCHAR(300))

		SET @cCmd=N'IF EXISTS (SELECT section_name,sub_section_name, article_no,para1_name,para2_name,para3_name,para4_name,para5_name,para6_name
		FROM '+@CTEMPTABLE+' GROUP BY  section_name,sub_section_name,article_no,para1_name,para2_name,para3_name,para4_name,para5_name,para6_name
		HAVING count(*)>1)
				SELECT section_name,sub_section_name,article_no,para1_name,para2_name,para3_name,para4_name,para5_name,para6_name
				FROM '+@CTEMPTABLE+' GROUP BY  section_name,sub_section_name,article_no,para1_name,para2_name,para3_name,para4_name,para5_name,para6_name
				HAVING count(*)>1
		ELSE
			SELECT TOP 1 section_name,sub_section_name,article_no,para1_name,para2_name,para3_name,para4_name,para5_name,para6_name
				FROM '+@CTEMPTABLE+' WHERE 1=2
		   '
		INSERT INTO @tDupParas (section_name,sub_section_name,article_no,para1_name,para2_name,para3_name,para4_name,para5_name,para6_name)
		EXEC SP_EXECUTESQL @cCmd

		IF EXISTS (SELECT TOP 1 * from @tDupParas)
		BEGIN
			SET @CERRMSG='Duplicate Para combination not allowed...'
			SELECT @CERRMSG errmsg,1 as dupcheck,* FROM @tDupParas
			GOTO ENDPROC  
		END

		SET @CCMD =N'SELECT DISTINCT 
		PARA1.PARA1_CODE,PARA2.PARA2_CODE,PARA3.PARA3_CODE,PARA4.PARA4_CODE,PARA5.PARA5_CODE,PARA6.PARA6_CODE,
		a.PARA1_NAME,a.PARA2_NAME,a.PARA3_NAME,a.PARA4_NAME,a.PARA5_NAME,a.PARA6_NAME,
		SECTIOND.SUB_SECTION_CODE,SECTIONM.SECTION_CODE,ARTICLE.ARTICLE_CODE,A.ARTICLE_NO,
		a.SECTION_NAME,
		a.SUB_SECTION_NAME,
		A.DISCTYPE AS DISC_TYPE,
		A.DISCVALUE AS DISCOUNT_FIGURE,
		
		CONVERT(INT,(CASE WHEN A.DISCTYPE = ''PCT'' THEN 1 WHEN A.DISCTYPE = ''AMT'' THEN 3 ELSE 2 END)) AS DISCOUNT_MODE
		INTO #tmpAllmst FROM '+@CTEMPTABLE+' A (NOLOCK) 
		LEFT OUTER JOIN ARTICLE(NOLOCK)  ON A.ARTICLE_NO = ARTICLE.ARTICLE_NO AND 1=2
		LEFT OUTER JOIN SECTIOND(NOLOCK) ON SECTIOND.SUB_SECTION_NAME = A.SUB_SECTION_NAME AND 1=2 
				LEFT OUTER JOIN SECTIONM(NOLOCK) ON SECTIONM.SECTION_NAME = A.SECTION_NAME AND 1=2
				LEFT OUTER JOIN PARA1(NOLOCK) ON PARA1.PARA1_NAME=A.PARA1_NAME AND 1=2
				LEFT OUTER JOIN PARA2(NOLOCK) ON PARA2.PARA2_NAME=A.PARA2_NAME AND 1=2
				LEFT OUTER JOIN PARA3(NOLOCK) ON PARA3.PARA3_NAME=A.PARA3_NAME AND 1=2
				LEFT OUTER JOIN PARA4(NOLOCK) ON PARA4.PARA4_NAME=A.PARA4_NAME AND 1=2
				LEFT OUTER JOIN PARA5(NOLOCK) ON PARA5.PARA5_NAME=A.PARA5_NAME AND 1=2
	    		LEFT OUTER JOIN PARA6(NOLOCK) ON PARA6.PARA6_NAME=A.PARA6_NAME AND 1=2			
		
		UPDATE a set article_code=b.article_code from #tmpAllmst a JOIN article b on  a.article_no=b.article_no  where b.inactive=0
		UPDATE a set section_code=b.section_code from #tmpAllmst a JOIN sectionm b on  a.section_name=b.section_name
		UPDATE a set sub_section_code=b.sub_section_code from #tmpAllmst a JOIN sectiond b on  a.sub_section_name=b.sub_section_name 
		 AND a.section_code=b.section_code

		UPDATE a set para1_code=b.para1_code from #tmpAllmst a JOIN para1 b on  a.para1_name=b.para1_name
		UPDATE a set para2_code=b.para2_code from #tmpAllmst a JOIN para2 b on  a.para2_name=b.para2_name
		UPDATE a set para3_code=b.para3_code from #tmpAllmst a JOIN para3 b on  a.para3_name=b.para3_name
		UPDATE a set para4_code=b.para4_code from #tmpAllmst a JOIN para4 b on  a.para4_name=b.para4_name
		UPDATE a set para5_code=b.para5_code from #tmpAllmst a JOIN para5 b on  a.para5_name=b.para5_name
		UPDATE a set para6_code=b.para6_code from #tmpAllmst a JOIN para6 b on  a.para6_name=b.para6_name

		select * from #tmpAllmst 
		'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
	END TRY
	BEGIN CATCH
		SET @CERRMSG = ERROR_MESSAGE()
	    SELECT @CERRMSG AS ERRMSG
	END CATCH	
	
	--SET @CCMD = 'IF OBJECT_ID ('''+@CTEMPTABLE+''',''U'') IS NOT NULL
	--					DROP TABLE '+@CTEMPTABLE+''
	    
	--PRINT @CCMD
	--EXEC SP_EXECUTESQL @CCMD
	
    GOTO ENDPROC  

LBLSLSPARA3IMPORT_PRO:
BEGIN TRY
			SET @CTEMPTABLE = 'TEMP_SLS_PARA3_'+LTRIM(RTRIM(STR(@NSPID)))
		
			IF OBJECT_ID ('#NF_PARA_PRO','U') IS NOT NULL
				DROP TABLE #NF_PARA_PRO
			 CREATE TABLE #NF_PARA_PRO(PARA3NAME VARCHAR(100))
			
			 SET @CCMD = N'SELECT A.PARA3 FROM '+@CTEMPTABLE+' A LEFT OUTER JOIN PARA3 B ON A.PARA3 = B.PARA3_NAME
				WHERE B.PARA3_NAME IS NULL'
			 PRINT @CCMD
			 INSERT INTO #NF_PARA_PRO
			 EXEC SP_EXECUTESQL @CCMD
			 
			 IF EXISTS (SELECT TOP 1 * FROM  #NF_PARA_PRO)
				SELECT PARA3NAME AS PARANOTFOUND FROM #NF_PARA_PRO
			
			SET @CCMD =N'SELECT PARA3.PARA3_CODE,PARA3.PARA3_NAME,
			  '''' AS DISC_TYPE,0 AS DISCOUNT_FIGURE,
			  '''' AS DISCOUNT_MODE
			  FROM PARA3    
			  JOIN '+@CTEMPTABLE+' A ON A.PARA3 = PARA3.PARA3_NAME'
			  PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
	   END TRY
	   BEGIN CATCH
			SET @CERRMSG = ERROR_MESSAGE()
			SELECT @CERRMSG AS ERRMSG
		END CATCH	
		
		SET @CCMD = 'IF OBJECT_ID ('''+@CTEMPTABLE+''',''U'') IS NOT NULL
							DROP TABLE '+@CTEMPTABLE+''
		    
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD	
		
	GOTO ENDPROC

LBLNAV:    

  EXECUTE SP_NAVIGATE 'SCHEME_SETUP_MST',@NNAVMODE,@CREFMEMONO,@CFINYEAR,'MEMO_NO','MEMO_DT','MEMO_NO',@CWHERE,@BINCLUDEESTIMATE   
        
  GOTO ENDPROC      
     
     
LBLMST:      
    
  SELECT * FROM SCHEME_SETUP_MST       
  WHERE MEMO_NO=@CWHERE      
      
  GOTO ENDPROC      
     
LBLDET:      
    
  SELECT B.*,C.PROMOTIONAL_SCHEME_NAME,SOR_terms_name
  FROM SCHEME_SETUP_MST A 
  JOIN SCHEME_SETUP_DET B ON A.MEMO_NO = B.MEMO_NO 
  LEFT JOIN  sor_terms_mst st (NOLOCK) ON st.sor_terms_code=b.sor_terms_code
  LEFT OUTER JOIN PROMOTIONAL_SCHEMES_MST C ON B.PROMOTIONAL_SCHEME_ID = C.PROMOTIONAL_SCHEME_ID 
  WHERE A.MEMO_NO = @CWHERE
      
  GOTO ENDPROC     
      
LBLLOC:    

  SELECT CAST(1 AS BIT) AS [CHK], A.DEPT_ID,B.DEPT_NAME,A.MEMO_NO,STATE,CITY,AREA_NAME,
   B.DEPT_ALIAS
   FROM SCHEME_SETUP_LOC A      
  JOIN LOC_VIEW  B ON A.DEPT_ID=B.DEPT_ID      
  WHERE A.MEMO_NO=@CWHERE    
  
  UNION ALL
  
  SELECT CAST(0 AS BIT) AS [CHK],DEPT_ID, DEPT_NAME,'' AS MEMO_NO  ,STATE,CITY,AREA_NAME ,DEPT_ALIAS   
  FROM LOC_VIEW     
  WHERE DEPT_ID = MAJOR_DEPT_ID AND INACTIVE=0    
  AND DEPT_ID NOT IN (SELECT DEPT_ID FROM SCHEME_SETUP_LOC WHERE MEMO_NO =@CWHERE)
  ORDER BY DEPT_ID ASC 
      
  GOTO ENDPROC      
      
LBLALLLOC:      
    
  SELECT CAST(0 AS BIT) AS [CHK],DEPT_ID, DEPT_NAME,DEPT_ALIAS      
  FROM LOCATION     
  WHERE DEPT_ID = MAJOR_DEPT_ID AND INACTIVE=0    
  ORDER BY DEPT_ID ASC     
      
  GOTO ENDPROC     
      
LBLSCAN:    
    
     SELECT SKU.PRODUCT_CODE,ARTICLE.ARTICLE_NO,SKU.PURCHASE_PRICE,SKU.MRP,
     ARTICLE.ALIAS AS ARTICLE_ALIAS   
     FROM SKU  (NOLOCK)     
     JOIN ARTICLE (NOLOCK)  ON SKU.ARTICLE_CODE=ARTICLE.ARTICLE_CODE     
     WHERE PRODUCT_CODE= @CWHERE    
     
   GOTO ENDPROC     	

LBLARTLIST:
 
     SELECT ARTICLE_CODE,ARTICLE_NO
     FROM ARTICLE (NOLOCK) --WHERE INACTIVE=0  ----A.INACTIVE=0 AND Removed this as Suvidha was getting issue for setting Eoss on Barcodes in Stock under Inactive Para (25-01-2019)
     
     GOTO ENDPROC            

LBLBARCODE:--NEW ADD UNMERGED DATE: 02-JUNE-2014
	SET @CCMD = N'SELECT DISTINCT SKU.PRODUCT_CODE,SECTIONM.SECTION_NAME,SECTIOND.SUB_SECTION_NAME,ARTICLE.ARTICLE_NO,PARA1_NAME,
				PARA2_NAME,PARA3_NAME,PARA4_NAME,PARA5_NAME,PARA6_NAME,SKU.MRP,'+STR(@NDISCOUNT)+' AS DISCOUNT,'''' AS IMAGE FROM SKU 
				JOIN ARTICLE ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE
				JOIN SECTIOND ON SECTIOND.SUB_SECTION_CODE =ARTICLE.SUB_SECTION_CODE 
				JOIN SECTIONM ON SECTIONM.SECTION_CODE = SECTIOND.SECTION_CODE
				JOIN PARA1 ON PARA1.PARA1_CODE = SKU.PARA1_CODE
				JOIN PARA2 ON PARA2.PARA2_CODE = SKU.PARA2_CODE
				JOIN PARA3 ON PARA3.PARA3_CODE = SKU.PARA3_CODE
				JOIN PARA4 ON PARA4.PARA4_CODE = SKU.PARA4_CODE
				JOIN PARA5 ON PARA5.PARA5_CODE = SKU.PARA5_CODE
				JOIN PARA6 ON PARA6.PARA6_CODE = SKU.PARA6_CODE 
				LEFT OUTER JOIN SKU_XFP ON SKU_XFP.PRODUCT_CODE = SKU.PRODUCT_CODE 
				WHERE '+@CWHERE
	PRINT @CCMD
	EXEC SP_EXECUTESQL 	@CCMD	
	
	GOTO ENDPROC     

LBLARTICLEDTCREATED:

	SELECT ISNULL(DT_CREATED,'19000101') AS DTIMG FROM ARTICLE (NOLOCK) WHERE ARTICLE_NO = @CWHERE
	
	GOTO ENDPROC
	
LBLPARA3DTCREATED:

	SELECT ISNULL(DT_CREATED,'19000101') AS DTIMG FROM PARA3 (NOLOCK) WHERE PARA3_NAME = @CWHERE
	  
	GOTO ENDPROC
	
LBLPRODUCTDTCREATED:

	SELECT ISNULL(DT_CREATED,'19000101') AS DTIMG FROM SKU (NOLOCK) WHERE PRODUCT_CODE = @CWHERE
	  
	GOTO ENDPROC
	
LBLGETSCHEMESET:

	SELECT  SCHEME_SET_NAME,MEMO_NO FROM  SCHEME_SETUP_MST WHERE INACTIVE = 0 ORDER BY scheme_Set_name
	  
	GOTO ENDPROC
	
LBLSCHEMEDETAILS:

	SELECT RTRIM(LTRIM(STR(ISNULL(MEMO_PROCESSING_ORDER,0)))) + '. ' +A.SCHEME_SET_NAME AS SCHEME_SET_NAME,RTRIM(LTRIM(STR(PROCESSING_ORDER))) + '. ' +B.SCHEME_NAME AS SCHEME_NAME ,A.MEMO_NO,B.ROW_ID,B.SCHEME_MODE
	,(CASE WHEN B.SCHEME_MODE = 1 THEN 'FLAT DISCOUNT' 
	WHEN B.SCHEME_MODE = 2 THEN 'PROMOTIONAL' 
	ELSE 'BILL LEVEL' END ) AS SCHEME_TYPE  
	,A.MEMO_NO + CAST(B.SCHEME_MODE AS VARCHAR(1)) AS TEMP_ID,A.INACTIVE,
	(CASE WHEN APPLICABLE_TO_DT<CONVERT(VARCHAR,GETDATE(),110) THEN 1 ELSE 0 END) AS EXPIRED
	
	FROM SCHEME_SETUP_MST A
	JOIN SCHEME_SETUP_DET B ON A.MEMO_NO = B.MEMO_NO 
	ORDER BY MEMO_PROCESSING_ORDER,MEMO_NO DESC,SCHEME_MODE DESC,PROCESSING_ORDER
	  
	GOTO ENDPROC
	
LBLPRODSCAN:

	IF NOT EXISTS(SELECT TOP 1 * FROM SKU WHERE PRODUCT_CODE = @CWHERE)
		SELECT 'BARCODE NOT FOUND' AS ERRMSG
	ELSE
		SELECT '' AS ERRMSG
	
	SELECT A.PRODUCT_CODE,D.SECTION_NAME,C.SUB_SECTION_NAME,PARA1_NAME
	,PARA2_NAME,PARA3_NAME,PARA4_NAME,PARA5_NAME,PARA6_NAME,A.PURCHASE_PRICE,A.MRP,
	'PCT' AS DISC_TYPE,CAST(0 AS NUMERIC(10,2)) AS DISCOUNT_FIGURE,CAST(0 AS NUMERIC(6,2)) AS DISCOUNT_PERCENTAGE
	,CAST(0 AS NUMERIC(10,2)) AS DISCOUNT_AMOUNT
	,CAST(0 AS NUMERIC(10,2)) AS NET_PRICE
    ,CONVERT(NUMERIC(14,2),ROUND((CASE WHEN A.MRP <> 0 
    THEN (((A.MRP-A.PURCHASE_PRICE)*100)/(A.MRP)) ELSE 0 END),2))  AS OLD_MD_PERCENTAGE
    ,CAST(0 AS NUMERIC(6,2)) AS NEW_MD_PERCENTAGE
    ,CAST(1 AS NUMERIC(10,0)) AS DISCOUNT_MODE,ISNULL(P.QUANTITY_IN_STOCK,1) AS QUANTITY,
    ISNULL(SLSBC.DISCOUNT_MODE,0) AS OLD_DISCOUNT_MODE,ISNULL(SLSBC.DISCOUNT_FIGURE,0) AS OLD_DISCOUNT_FIGURE,
	 B.ARTICLE_NO
    FROM SKU A
	JOIN ARTICLE B ON A.ARTICLE_CODE = B.ARTICLE_CODE
	JOIN SECTIOND C ON C.SUB_SECTION_CODE = B.SUB_SECTION_CODE 
	JOIN SECTIONM D ON D.SECTION_CODE = C.SECTION_CODE
	JOIN PARA1 E ON E.PARA1_CODE = A.PARA1_CODE
	JOIN PARA2 F ON F.PARA2_CODE = A.PARA2_CODE
	JOIN PARA3 G ON G.PARA3_CODE = A.PARA3_CODE
	JOIN PARA4 H ON H.PARA4_CODE = A.PARA4_CODE
	JOIN PARA5 I ON I.PARA5_CODE = A.PARA5_CODE
	JOIN PARA6 J ON J.PARA6_CODE = A.PARA6_CODE
	LEFT OUTER JOIN PMT01106 P ON A.PRODUCT_CODE= P.PRODUCT_CODE 
	LEFT OUTER JOIN SCHEME_SETUP_SLSBC SLSBC ON SLSBC.PRODUCT_CODE=A.PRODUCT_CODE
	WHERE A.PRODUCT_CODE = 	@CWHERE AND ISNULL(P.BIN_ID,'000')= @CROWID
	AND (SLSBC.ROW_ID IS NULL OR SLSBC.ROW_ID=(SELECT TOP 1 A.ROW_ID FROM SCHEME_SETUP_SLSBC A
	JOIN SCHEME_SETUP_DET B ON A.SCHEME_SETUP_DET_ROW_ID=B.ROW_ID WHERE A.PRODUCT_CODE=@CWHERE 
	AND B.MEMO_NO=@CREFMEMONO AND B.SCHEME_MODE=1 ORDER BY A.LAST_UPDATE DESC))
	  
	GOTO ENDPROC
	
LBLSLSBC:

	--SELECT MST.*
	--,(CASE WHEN MST.DISCOUNT_MODE = 1 THEN 'PCT' 
	--WHEN MST.DISCOUNT_MODE = 2 THEN 'NET' 
	--WHEN MST.DISCOUNT_MODE = 3 THEN 'AMT' ELSE '' END ) AS DISC_TYPE
	--,SKU.MRP,SKU.PURCHASE_PRICE, SECTIOND.SUB_SECTION_NAME, SECTIONM.SECTION_NAME
	--,PARA1.PARA1_NAME,PARA1.PARA1_CODE
	--,PARA2.PARA2_NAME,PARA2.PARA2_CODE
	--,PARA3.PARA3_NAME,PARA3.PARA3_CODE  
	--,PARA4.PARA4_NAME,PARA4.PARA4_CODE
	--,PARA5.PARA5_NAME,PARA5.PARA5_CODE
	--,PARA6.PARA6_NAME,PARA6.PARA6_CODE,
	-- ARTICLE.ARTICLE_NO,
	--CONVERT(NUMERIC(10,0),0) AS OLD_DISCOUNT_MODE,CONVERT(NUMERIC(10,0),0) AS OLD_DISCOUNT_FIGURE
	--FROM SCHEME_SETUP_SLSBC MST (NOLOCK) 
	--JOIN SKU (NOLOCK) ON MST.PRODUCT_CODE = SKU.PRODUCT_CODE 
	--JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE
	--LEFT JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE
	--LEFT JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE 
	--LEFT JOIN PARA1 ON PARA1.PARA1_CODE = SKU.PARA1_CODE
	--LEFT JOIN PARA2 ON PARA2.PARA2_CODE = SKU.PARA2_CODE
	--LEFT JOIN PARA3 ON PARA3.PARA3_CODE = SKU.PARA3_CODE
	--LEFT JOIN PARA4 ON PARA4.PARA4_CODE = SKU.PARA4_CODE
	--LEFT JOIN PARA5 ON PARA5.PARA5_CODE = SKU.PARA5_CODE
	--LEFT JOIN PARA6 ON PARA6.PARA6_CODE = SKU.PARA6_CODE
	--WHERE MST.SCHEME_SETUP_DET_ROW_ID = @CWHERE   AND ISNULL(MST.source_type,1) =1


	SELECT MST.*
	,(CASE WHEN MST.DISCOUNT_MODE = 1 THEN 'PCT' 
	WHEN MST.DISCOUNT_MODE = 2 THEN 'NET' 
	WHEN MST.DISCOUNT_MODE = 3 THEN 'AMT' ELSE '' END ) AS DISC_TYPE
	,SKU.MRP,SKU.PP as PURCHASE_PRICE, SUB_SECTION_NAME, SECTION_NAME
	,PARA1_NAME	,PARA2_NAME	,PARA3_NAME	,PARA4_NAME,PARA5_NAME
	,PARA6_NAME,	 ARTICLE_NO,
	CONVERT(NUMERIC(10,0),0) AS OLD_DISCOUNT_MODE,CONVERT(NUMERIC(10,0),0) AS OLD_DISCOUNT_FIGURE
	FROM SCHEME_SETUP_SLSBC MST (NOLOCK) 
	JOIN SKU_NAMES  SKU(NOLOCK) ON MST.PRODUCT_CODE = SKU.PRODUCT_CODE 
	WHERE MST.SCHEME_SETUP_DET_ROW_ID = @CWHERE   AND ISNULL(MST.source_type,1) =1

	


	  
	GOTO ENDPROC
	
LBLGETDATFRMFILTER:

	SET @CCMD =N'SELECT PRODUCT_CODE,SECTIONM.SECTION_NAME,SECTIOND.SUB_SECTION_NAME,PARA1_NAME
	,PARA2_NAME,PARA3_NAME,PARA4_NAME,PARA5_NAME,PARA6_NAME,SKU.PURCHASE_PRICE,SKU.MRP,
	''PCT'' AS DISC_TYPE,CAST(0 AS NUMERIC(10,2)) AS DISCOUNT_FIGURE,CAST(0 AS NUMERIC(6,2)) AS DISCOUNT_PERCENTAGE
	,CAST(0 AS NUMERIC(10,2)) AS DISCOUNT_AMOUNT
	,CAST(0 AS NUMERIC(10,2)) AS NET_PRICE
    ,CONVERT(NUMERIC(14,2),ROUND((CASE WHEN SKU.MRP <> 0 
    THEN (((SKU.MRP-SKU.PURCHASE_PRICE)*100)/(SKU.MRP)) ELSE 0 END),2))  AS OLD_MD_PERCENTAGE
    ,CAST(0 AS NUMERIC(6,2)) AS NEW_MD_PERCENTAGE
    ,CAST(1 AS NUMERIC(10,0)) AS DISCOUNT_MODE
    FROM SKU 
	JOIN ARTICLE  ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE
	JOIN SECTIOND ON SECTIOND.SUB_SECTION_CODE = ARTICLE.SUB_SECTION_CODE 
	JOIN SECTIONM ON SECTIONM.SECTION_CODE = SECTIOND.SECTION_CODE
	JOIN PARA1    ON PARA1.PARA1_CODE = SKU.PARA1_CODE
	JOIN PARA2    ON PARA2.PARA2_CODE = SKU.PARA2_CODE
	JOIN PARA3    ON PARA3.PARA3_CODE = SKU.PARA3_CODE
	JOIN PARA4    ON PARA4.PARA4_CODE = SKU.PARA4_CODE
	JOIN PARA5    ON PARA5.PARA5_CODE = SKU.PARA5_CODE
	JOIN PARA6    ON PARA6.PARA6_CODE = SKU.PARA6_CODE
	WHERE '+@CWHERE
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD
	GOTO ENDPROC
	
LBLGETDATAFRMIMPORT:

	BEGIN TRY 
		DECLARE @DISTYPE BIT
		
		 SET @CTEMPTABLE = 'TEMP_SLS_BC_'+LTRIM(RTRIM(STR(@NSPID)))
		 IF OBJECT_ID ('#NF_BARCODE','U') IS NOT NULL
			DROP TABLE #NF_BARCODE
			
		 CREATE TABLE #NF_BARCODE(PRODUCT_CODE VARCHAR(100))
		
		 SET @CCMD = N'SELECT A.PRODUCT_CODE FROM '+@CTEMPTABLE+' A 
					   LEFT OUTER JOIN SKU B ON A.PRODUCT_CODE = B.PRODUCT_CODE
					   WHERE B.PRODUCT_CODE IS NULL'
		 PRINT @CCMD
		 INSERT INTO #NF_BARCODE
		 EXEC SP_EXECUTESQL @CCMD
		 
		 IF EXISTS (SELECT TOP 1 * FROM  #NF_BARCODE)
			SELECT PRODUCT_CODE AS PRODUCTNOTFOUND,PRODUCT_CODE,0 AS MRP FROM #NF_BARCODE		
	     
		 IF OBJECT_ID('#SLS_BC','U') IS NOT NULL
			DROP TABLE #SLS_BC
			
		SET @CCMD = N'IF EXISTS (SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID=OBJECT_ID('''+@CTEMPTABLE+''',''U'') AND NAME=''DISCTYPE'') 
						 SET @DISTYPE=1
		              ELSE
						 SET @DISTYPE=0'
	    PRINT @CCMD
	    EXEC SP_EXECUTESQL @CCMD,N'@DISTYPE BIT OUTPUT',@DISTYPE OUTPUT

		SET @CCMD = N'IF EXISTS (SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID=OBJECT_ID('''+@CTEMPTABLE+''',''U'') AND NAME=''ADD_DISC_PCT'') 
						 SET @BADDDISC=1
		              ELSE
						 SET @BADDDISC=0'
	    PRINT @CCMD
	    EXEC SP_EXECUTESQL @CCMD,N'@BADDDISC BIT OUTPUT',@BADDDISC OUTPUT
		    
		 CREATE TABLE  #SLS_BC
		(PRODUCT_CODE VARCHAR(100),SECTION_NAME VARCHAR(100),SUB_SECTION_NAME VARCHAR(100),PARA1_NAME VARCHAR(500),
		 PARA2_NAME VARCHAR(500),PARA3_NAME VARCHAR(500),PARA4_NAME VARCHAR(500),PARA5_NAME VARCHAR(500),PARA6_NAME VARCHAR(500),
		 PURCHASE_PRICE NUMERIC(14,2),MRP NUMERIC(14,2),DISC_TYPE CHAR(3),DISCOUNT_FIGURE NUMERIC(14,2),DISCOUNT_PERCENTAGE NUMERIC(14,2),
		 DISCOUNT_AMOUNT NUMERIC(14,2),NET_PRICE NUMERIC(14,2),OLD_MD_PERCENTAGE NUMERIC(14,2),NEW_MD_PERCENTAGE NUMERIC(14,2),DISCOUNT_MODE INT,QUANTITY NUMERIC(10,2),
		 OLD_DISCOUNT_MODE INT,OLD_DISCOUNT_FIGURE NUMERIC(6,2),ADDITIONAL_DISCOUNT_PERCENTAGE NUMERIC(6,2)
		 )	
	     
	     SET @CADDNLDISC=(CASE WHEN @BADDDISC=1 THEN 'ISNULL(A.ADD_DISC_PCT,0)' ELSE '0' END)
			
	     IF @DISTYPE=1
	     BEGIN
			 SET @CCMD =N'SELECT SKU.PRODUCT_CODE,SECTIONM.SECTION_NAME,SECTIOND.SUB_SECTION_NAME,PARA1_NAME
			,PARA2_NAME,PARA3_NAME,PARA4_NAME,PARA5_NAME,PARA6_NAME,SKU.PURCHASE_PRICE,SKU.MRP,
			 A.DISCTYPE AS DISC_TYPE,
			 A.DISCVALUE AS DISCOUNT_FIGURE,
			
			 CONVERT(NUMERIC(14,0),(CASE WHEN A.DISCTYPE = ''PCT'' THEN A.DISCVALUE WHEN A.DISCTYPE = ''AMT'' THEN ((A.DISCVALUE/SKU.MRP)*100) ELSE ((SKU.MRP-A.DISCVALUE)/SKU.MRP)*100 END)) AS DISCOUNT_PERCENTAGE
			,CONVERT(NUMERIC(14,0),(CASE WHEN A.DISCTYPE = ''PCT'' THEN ((SKU.MRP*A.DISCVALUE)/100) WHEN A.DISCTYPE = ''AMT'' THEN A.DISCVALUE ELSE (SKU.MRP-A.DISCVALUE) END)) AS DISCOUNT_AMOUNT
			,CONVERT(NUMERIC(14,0),(CASE WHEN A.DISCTYPE = ''PCT'' THEN ((SKU.MRP)-((SKU.MRP*A.DISCVALUE)/100)) WHEN A.DISCTYPE = ''AMT'' THEN SKU.MRP-A.DISCVALUE ELSE (A.DISCVALUE) END)) AS NET_PRICE
			,CONVERT(NUMERIC(14,2),ROUND((CASE WHEN SKU.MRP <> 0 THEN (((SKU.MRP-SKU.PURCHASE_PRICE)*100)/(SKU.MRP)) ELSE 0 END),2)) AS OLD_MD_PERCENTAGE
			,CONVERT(NUMERIC(14,2),0) AS NEW_MD_PERCENTAGE
			,CONVERT(INT,(CASE WHEN A.DISCTYPE = ''PCT'' THEN 1 WHEN A.DISCTYPE = ''AMT'' THEN 3 ELSE 2 END))AS DISCOUNT_MODE
			,CAST(1 AS NUMERIC(10,2)) AS QUANTITY,ISNULL(SLSBC.DISCOUNT_MODE,0) AS OLD_DISCOUNT_MODE,
			ISNULL(SLSBC.DISCOUNT_FIGURE,0) AS OLD_DISCOUNT_FIGURE,'+@CADDNLDISC+' AS ADDITIONAL_DISCOUNT_PERCENTAGE
			
			FROM SKU 
			JOIN ARTICLE  ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE
			JOIN SECTIOND ON SECTIOND.SUB_SECTION_CODE = ARTICLE.SUB_SECTION_CODE 
			JOIN SECTIONM ON SECTIONM.SECTION_CODE = SECTIOND.SECTION_CODE
			JOIN PARA1    ON PARA1.PARA1_CODE = SKU.PARA1_CODE
			JOIN PARA2    ON PARA2.PARA2_CODE = SKU.PARA2_CODE
			JOIN PARA3    ON PARA3.PARA3_CODE = SKU.PARA3_CODE
			JOIN PARA4    ON PARA4.PARA4_CODE = SKU.PARA4_CODE
			JOIN PARA5    ON PARA5.PARA5_CODE = SKU.PARA5_CODE
			JOIN PARA6    ON PARA6.PARA6_CODE = SKU.PARA6_CODE
			JOIN '+@CTEMPTABLE+' A ON A.PRODUCT_CODE = SKU.PRODUCT_CODE
			LEFT OUTER JOIN 
			(SELECT A.ROW_ID,A.DISCOUNT_MODE,A.DISCOUNT_FIGURE,A.PRODUCT_CODE FROM SCHEME_SETUP_SLSBC A JOIN 
			 SCHEME_SETUP_DET B ON A.SCHEME_SETUP_DET_ROW_ID=B.ROW_ID
			 WHERE B.MEMO_NO='''+@CREFMEMONO+''' AND B.SCHEME_MODE=1) SLSBC ON SLSBC.PRODUCT_CODE=SKU.PRODUCT_CODE
			WHERE (SLSBC.ROW_ID IS NULL OR SLSBC.ROW_ID=(SELECT TOP 1 A.ROW_ID FROM SCHEME_SETUP_SLSBC A
			JOIN SCHEME_SETUP_DET B ON A.SCHEME_SETUP_DET_ROW_ID=B.ROW_ID WHERE A.PRODUCT_CODE=SLSBC.PRODUCT_CODE
			AND B.MEMO_NO='''+@CREFMEMONO+''' AND B.SCHEME_MODE=1 ORDER BY A.LAST_UPDATE DESC))'
		END
		ELSE
		BEGIN
			 SET @CCMD =N'SELECT SKU.PRODUCT_CODE,SECTIONM.SECTION_NAME,SECTIOND.SUB_SECTION_NAME,PARA1_NAME
			,PARA2_NAME,PARA3_NAME,PARA4_NAME,PARA5_NAME,PARA6_NAME,SKU.PURCHASE_PRICE,SKU.MRP,
			 ''PCT'' AS DISC_TYPE,
			 0 AS DISCOUNT_FIGURE,
			
			 0 AS DISCOUNT_PERCENTAGE
			,0 AS DISCOUNT_AMOUNT
			,0 AS NET_PRICE
			,0 AS OLD_MD_PERCENTAGE
			,CONVERT(NUMERIC(14,2),0)  AS NEW_MD_PERCENTAGE
			,1 AS DISCOUNT_MODE
			,A.QUANTITY,ISNULL(SLSBC.DISCOUNT_MODE,0) AS OLD_DISCOUNT_MODE,
			ISNULL(SLSBC.DISCOUNT_FIGURE,0) AS OLD_DISCOUNT_FIGURE,'+@CADDNLDISC+' AS ADDITIONAL_DISCOUNT_PERCENTAGE
			FROM SKU 
			JOIN ARTICLE  ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE
			JOIN SECTIOND ON SECTIOND.SUB_SECTION_CODE = ARTICLE.SUB_SECTION_CODE 
			JOIN SECTIONM ON SECTIONM.SECTION_CODE = SECTIOND.SECTION_CODE
			JOIN PARA1    ON PARA1.PARA1_CODE = SKU.PARA1_CODE
			JOIN PARA2    ON PARA2.PARA2_CODE = SKU.PARA2_CODE
			JOIN PARA3    ON PARA3.PARA3_CODE = SKU.PARA3_CODE
			JOIN PARA4    ON PARA4.PARA4_CODE = SKU.PARA4_CODE
			JOIN PARA5    ON PARA5.PARA5_CODE = SKU.PARA5_CODE
			JOIN PARA6    ON PARA6.PARA6_CODE = SKU.PARA6_CODE
			JOIN '+@CTEMPTABLE+' A ON A.PRODUCT_CODE = SKU.PRODUCT_CODE
			LEFT OUTER JOIN 
			(SELECT A.ROW_ID,A.DISCOUNT_MODE,A.DISCOUNT_FIGURE,A.PRODUCT_CODE FROM SCHEME_SETUP_SLSBC A JOIN 
			 SCHEME_SETUP_DET B ON A.SCHEME_SETUP_DET_ROW_ID=B.ROW_ID
			 WHERE B.MEMO_NO='''+@CREFMEMONO+''' AND B.SCHEME_MODE=1) SLSBC ON SLSBC.PRODUCT_CODE=SKU.PRODUCT_CODE
			 
			WHERE (SLSBC.ROW_ID IS NULL OR SLSBC.ROW_ID=(SELECT TOP 1 A.ROW_ID FROM SCHEME_SETUP_SLSBC A
			JOIN SCHEME_SETUP_DET B ON A.SCHEME_SETUP_DET_ROW_ID=B.ROW_ID WHERE A.PRODUCT_CODE=SLSBC.PRODUCT_CODE
			AND B.MEMO_NO='''+@CREFMEMONO+''' AND B.SCHEME_MODE=1 ORDER BY A.LAST_UPDATE DESC))'
		
		END
		
		PRINT @CCMD
		INSERT INTO #SLS_BC
		EXEC SP_EXECUTESQL @CCMD
		
		UPDATE #SLS_BC SET NEW_MD_PERCENTAGE = (CASE WHEN @DISTYPE=1 AND ISNULL(NET_PRICE,0)<>0 
		THEN ((NET_PRICE-PURCHASE_PRICE)/NET_PRICE)*100 ELSE 0 END)

		UPDATE #SLS_BC SET DISCOUNT_FIGURE = (CASE WHEN @DISTYPE=1 AND DISCOUNT_FIGURE IS NULL
		AND ISNULL(OLD_DISCOUNT_FIGURE,0)<>0 AND ISNULL(OLD_DISCOUNT_MODE,0)=1 THEN OLD_DISCOUNT_FIGURE ELSE  DISCOUNT_FIGURE END)
		
		SELECT * FROM #SLS_BC
		
		--SET @CCMD = 'IF OBJECT_ID ('''+@CTEMPTABLE+''',''U'') IS NOT NULL
		--				DROP TABLE '+@CTEMPTABLE+''
	    
		--PRINT @CCMD
		--EXEC SP_EXECUTESQL @CCMD
	END TRY

	BEGIN CATCH
		SET @CERRMSG = ERROR_MESSAGE()
		SELECT @CERRMSG AS ERRMSG
	END CATCH
	
    GOTO ENDPROC
	
LBLGETDATABYARTICLE:
	
	SELECT DISTINCT B.ARTICLE_CODE, B.ARTICLE_NO,D.SECTION_NAME,C.SUB_SECTION_NAME
	,'PCT' AS DISC_TYPE,CAST(0 AS NUMERIC(10,2)) AS DISCOUNT_FIGURE
	,CAST(1 AS NUMERIC(10,0)) AS DISCOUNT_MODE,B.MRP
	FROM  ARTICLE B 
	JOIN SECTIOND C ON C.SUB_SECTION_CODE = B.SUB_SECTION_CODE 
	JOIN SECTIONM D ON D.SECTION_CODE = C.SECTION_CODE
	WHERE  B.ARTICLE_CODE = @CWHERE 

	GOTO ENDPROC
	
LBLSLSART:
	
	SELECT A.*,SECTION_NAME,C.SUB_SECTION_NAME,B.ARTICLE_NO
	,(CASE WHEN A.DISCOUNT_MODE = 1 THEN 'PCT' 
	WHEN A.DISCOUNT_MODE = 2 THEN 'NET' 
	WHEN A.DISCOUNT_MODE = 3 THEN 'AMT' ELSE '' END ) AS DISC_TYPE,B.MRP
	FROM SCHEME_SETUP_SLSART A
	JOIN ARTICLE B ON A.ARTICLE_CODE = B.ARTICLE_CODE
	JOIN SECTIOND C ON C.SUB_SECTION_CODE = B.SUB_SECTION_CODE 
	JOIN SECTIONM D ON D.SECTION_CODE = C.SECTION_CODE
	WHERE  A.ARTICLE_CODE = @CWHERE 

	GOTO ENDPROC

LBLSLSALLMST:
	
	SELECT A.*,SECTION_NAME,C.SUB_SECTION_NAME,B.ARTICLE_NO
	,(CASE WHEN A.DISCOUNT_MODE = 1 THEN 'PCT' 
	WHEN A.DISCOUNT_MODE = 2 THEN 'NET' 
	WHEN A.DISCOUNT_MODE = 3 THEN 'AMT' ELSE '' END ) AS DISC_TYPE,B.MRP
	FROM SCHEME_SETUP_SLSART A
	JOIN ARTICLE B ON A.ARTICLE_CODE = B.ARTICLE_CODE
	JOIN SECTIOND C ON C.SUB_SECTION_CODE = B.SUB_SECTION_CODE 
	JOIN SECTIONM D ON D.SECTION_CODE = C.SECTION_CODE
	WHERE  A.ARTICLE_CODE = @CWHERE 

	GOTO ENDPROC	
LBLALLARTICLE:

	SELECT DISTINCT TOP 50 A.ARTICLE_NO,A.ARTICLE_CODE 
	FROM ARTICLE A (NOLOCK) 
	WHERE ---A.INACTIVE=0 AND  ----A.INACTIVE=0 AND Removed this as Suvidha was getting issue for setting Eoss on Barcodes in Stock under Inactive Para (25-01-2019)
	A.ARTICLE_NO <> '' 
	AND A.ARTICLE_NO LIKE @CWHERE ORDER BY A.ARTICLE_NO

	GOTO ENDPROC
	
LBLARTICLEFILTER:

	SET @CCMD =N'SELECT DISTINCT SKU.ARTICLE_CODE,ARTICLE.ARTICLE_NO,SECTIONM.SECTION_NAME,SECTIOND.SUB_SECTION_NAME,
	''PCT'' AS DISC_TYPE,CAST(0 AS NUMERIC(10,2)) AS DISCOUNT_FIGURE,
	CAST(1 AS NUMERIC(10,0)) AS DISCOUNT_MODE,SKU.MRP
    FROM SKU 
	JOIN ARTICLE  ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE
	JOIN SECTIOND ON SECTIOND.SUB_SECTION_CODE = ARTICLE.SUB_SECTION_CODE 
	JOIN SECTIONM ON SECTIONM.SECTION_CODE = SECTIOND.SECTION_CODE
	JOIN PARA1 ON PARA1.PARA1_CODE=SKU.PARA1_CODE
	JOIN PARA2 ON PARA2.PARA2_CODE=SKU.PARA2_CODE
	JOIN PARA3 ON PARA3.PARA3_CODE=SKU.PARA3_CODE
	JOIN PARA4 ON PARA4.PARA4_CODE=SKU.PARA4_CODE
	JOIN PARA5 ON PARA5.PARA5_CODE=SKU.PARA5_CODE
	JOIN PARA6 ON PARA6.PARA6_CODE=SKU.PARA6_CODE
	WHERE '+@CWHERE
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD
	
	GOTO ENDPROC	
	
LBLARTICLEIMPORTEXCEL:	
	
	BEGIN TRY
		SET @CTEMPTABLE = (CASE WHEN @NQUERY=22 THEN 'TEMP_SLS_ART_' ELSE 'TEMP_SLS_ART_GET_' END)+LTRIM(RTRIM(STR(@NSPID)))
		
		IF OBJECT_ID ('#NF_ARTICLE','U') IS NOT NULL
			DROP TABLE #NF_ARTICLE
		 CREATE TABLE #NF_ARTICLE(ARTICLE_NO VARCHAR(100))
		
		 SET @CCMD = N'SELECT A.ARTICLE_NO FROM '+@CTEMPTABLE+' A LEFT OUTER JOIN ARTICLE B ON A.ARTICLE_NO = B.ARTICLE_NO
			WHERE B.ARTICLE_NO IS NULL'
		 PRINT @CCMD
		 INSERT INTO #NF_ARTICLE
		 EXEC SP_EXECUTESQL @CCMD
		 
		 IF EXISTS (SELECT TOP 1 * FROM  #NF_ARTICLE)
			SELECT ARTICLE_NO AS ARTICLENOTFOUND FROM #NF_ARTICLE	
     
		SET @CCMD =N'SELECT DISTINCT ARTICLE.ARTICLE_CODE,ARTICLE.ARTICLE_NO,SECTIONM.SECTION_NAME,
		SECTIOND.SUB_SECTION_NAME,A.DISCTYPE AS DISC_TYPE,
		A.DISCVALUE AS DISCOUNT_FIGURE,
		CONVERT(INT,(CASE WHEN A.DISCTYPE = ''PCT'' THEN 1 WHEN A.DISCTYPE = ''AMT'' THEN 3 ELSE 2 END)) 
		AS DISCOUNT_MODE,0 AS MRP
		FROM ARTICLE
		JOIN SECTIOND ON SECTIOND.SUB_SECTION_CODE = ARTICLE.SUB_SECTION_CODE 
		JOIN SECTIONM ON SECTIONM.SECTION_CODE = SECTIOND.SECTION_CODE
		JOIN '+@CTEMPTABLE+' A ON A.ARTICLE_NO = ARTICLE.ARTICLE_NO'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
	END TRY
	BEGIN CATCH
		SET @CERRMSG = ERROR_MESSAGE()
	    SELECT @CERRMSG AS ERRMSG
	END CATCH	
	
	--SET @CCMD = 'IF OBJECT_ID ('''+@CTEMPTABLE+''',''U'') IS NOT NULL
	--					DROP TABLE '+@CTEMPTABLE+''
	    
	--PRINT @CCMD
	--EXEC SP_EXECUTESQL @CCMD
	
    GOTO ENDPROC
    
LBLALLPARA3:

	SELECT DISTINCT TOP 50 A.PARA3_NAME,A.PARA3_CODE
	FROM PARA3 A (NOLOCK)
	WHERE ----A.INACTIVE=0 AND Removed this as Suvidha was getting issue for setting Eoss on Barcodes in Stock under Inactive Para (25-01-2019)
	A.PARA3_NAME <> '' AND A.PARA3_NAME <> 'NA'
	AND A.PARA3_NAME LIKE @CWHERE ORDER BY A.PARA3_NAME

	GOTO ENDPROC
	
LBLSLPARA3:
	
	SELECT A.*,B.PARA3_NAME
	,(CASE WHEN A.DISCOUNT_MODE = 1 THEN 'PCT' 
	WHEN A.DISCOUNT_MODE = 2 THEN 'NET' 
	WHEN A.DISCOUNT_MODE = 3 THEN 'AMT' ELSE '' END ) AS DISC_TYPE
	FROM SCHEME_SETUP_SLSPARA A
	JOIN PARA3 B ON A.PARA3_CODE=B.PARA3_CODE
	WHERE  A.PARA3_CODE = @CWHERE 

	GOTO ENDPROC

LBLSLSPARA3IMPORT:
	
	BEGIN TRY
			SET @CTEMPTABLE = (CASE WHEN @NQUERY=25 THEN 'TEMP_SLS_PARA3_' ELSE 'TEMP_SLS_PARA3_GET_' END)+LTRIM(RTRIM(STR(@NSPID)))
		
			IF OBJECT_ID ('#NF_PARA','U') IS NOT NULL
				DROP TABLE #NF_PARA
			 CREATE TABLE #NF_PARA(PARA3NAME VARCHAR(100))
			
			 SET @CCMD = N'SELECT A.PARA3 FROM '+@CTEMPTABLE+' A LEFT OUTER JOIN PARA3 B ON A.PARA3 = B.PARA3_NAME
				WHERE B.PARA3_NAME IS NULL'
			 PRINT @CCMD
			 INSERT INTO #NF_PARA
			 EXEC SP_EXECUTESQL @CCMD
			 
			 IF EXISTS (SELECT TOP 1 * FROM  #NF_PARA)
				SELECT PARA3NAME AS PARANOTFOUND FROM #NF_PARA
			
			SET @CCMD =N'SELECT PARA3.PARA3_CODE,PARA3.PARA3_NAME,
			  A.DISCTYPE AS DISC_TYPE,A.DISCVALUE AS DISCOUNT_FIGURE,
			  CONVERT(INT,(CASE WHEN A.DISCTYPE = ''PCT'' THEN 1 WHEN A.DISCTYPE = ''AMT'' THEN 3 ELSE 2 END)) AS DISCOUNT_MODE
			  FROM PARA3    
			  JOIN '+@CTEMPTABLE+' A ON A.PARA3 = PARA3.PARA3_NAME'
			  PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
	   END TRY
	   BEGIN CATCH
			SET @CERRMSG = ERROR_MESSAGE()
			SELECT @CERRMSG AS ERRMSG
		END CATCH	
		
		SET @CCMD = 'IF OBJECT_ID ('''+@CTEMPTABLE+''',''U'') IS NOT NULL
							DROP TABLE '+@CTEMPTABLE+''
		    
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD	
		
	GOTO ENDPROC	
	
LBLGETSLSMSTBYNO:
	
	SELECT * FROM SCHEME_SETUP_MST WHERE MEMO_NO = @CWHERE 

	GOTO ENDPROC	
	
LBLGETSLSBCBYREFID:
	
	SELECT * FROM SCHEME_SETUP_SLSBC  WHERE SCHEME_SETUP_DET_ROW_ID = @CWHERE 

	GOTO ENDPROC	
	
LBLGETSLSBCDETAIL:

	DECLARE @CROWFILTER NVARCHAR(MAX),@DTSQL NVARCHAR(MAX)
	
	SET @CROWFILTER = N' BC.ROW_ID IN ( ''' + @CWHERE + ''' )'

if @NNAVMODE not in(3,6)
begin
	
	SET @DTSQL=N'SELECT SKU.INV_NO, 
		 CONVERT(NUMERIC(10,0),BC.DISCOUNT_FIGURE) AS DISCOUNT_FIGURE,
		   BC.SCHEME_SETUP_DET_ROW_ID,BC.ROW_ID,
		   BC.COMPANY_CODE,BC.LAST_UPDATE,
		   CONVERT(NUMERIC(10,0),BC.DISCOUNT_PERCENTAGE) AS DISCOUNT_PERCENTAGE,
		   BC.DISCOUNT_AMOUNT,
		   CONVERT(NUMERIC(10,0),BC.NET_PRICE) AS NET_PRICE,
		   BC.PRODUCT_CODE,
		   BC.OLD_MD_PERCENTAGE,BC.NEW_MD_PERCENTAGE,
		   BC.DISCOUNT_MODE,BC.PRN,BC.QUANTITY,
		   BC.ADDITIONAL_DISCOUNT_PERCENTAGE,
   
	   (CASE WHEN BC.DISCOUNT_MODE = 1 THEN ''PCT'' 
		WHEN BC.DISCOUNT_MODE = 2 THEN ''NET'' 
		WHEN BC.DISCOUNT_MODE = 3 THEN ''AMT'' ELSE '''' END ) AS DISC_TYPE,
		BC.DISCOUNT_MODE,ARTICLE_NAME,ARTICLE_NO
		,SKU.MRP,SKU.PURCHASE_PRICE, SECTIOND.SUB_SECTION_NAME, SECTIONM.SECTION_NAME
		,PARA1.PARA1_NAME,PARA1.PARA1_CODE
		,PARA2.PARA2_NAME,PARA2.PARA2_CODE
		,PARA3.PARA3_NAME,PARA3.PARA3_CODE  
		,PARA4.PARA4_NAME,PARA4.PARA4_CODE
		,PARA5.PARA5_NAME,PARA5.PARA5_CODE
		,PARA6.PARA6_NAME,PARA6.PARA6_CODE,DISCON,ISNULL(LM.ALIAS,'''') AS PARTY_ALIAS,
		RTRIM(LTRIM(STR(MONTH(SKU.INV_DT)))) + ''/'' + RTRIM(LTRIM(STR(YEAR(SKU.INV_DT))))  AS INV_MONTH ,
		SKU.INV_NO,LM.ALIAS AS  ALIAS
		,(CASE WHEN ISNULL(IRD.PRODUCT_CODE,'''')='''' THEN BC.PRODUCT_CODE ELSE IRD.PRODUCT_CODE END) AS OLD_PRODUCT_CODE,
		SKU.HSN_CODE
		FROM SCHEME_SETUP_SLSBC BC (NOLOCK) 
		JOIN SCHEME_SETUP_DET DET ON BC.SCHEME_SETUP_DET_ROW_ID = DET.ROW_ID 
		JOIN SCHEME_SETUP_MST MST ON DET.MEMO_NO = MST.MEMO_NO
		JOIN SKU (NOLOCK) ON BC.PRODUCT_CODE = SKU.PRODUCT_CODE
		LEFT OUTER JOIN IRD01106 IRD (NOLOCK) ON IRD.NEW_PRODUCT_CODE = BC.PRODUCT_CODE  
		LEFT JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE
		LEFT JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE
		LEFT JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE 
		LEFT JOIN PARA1 ON PARA1.PARA1_CODE = SKU.PARA1_CODE
		LEFT JOIN PARA2 ON PARA2.PARA2_CODE = SKU.PARA2_CODE
		LEFT JOIN PARA3 ON PARA3.PARA3_CODE = SKU.PARA3_CODE
		LEFT JOIN PARA4 ON PARA4.PARA4_CODE = SKU.PARA4_CODE
		LEFT JOIN PARA5 ON PARA5.PARA5_CODE = SKU.PARA5_CODE
		LEFT JOIN PARA6 ON PARA6.PARA6_CODE = SKU.PARA6_CODE
		JOIN LM01106 LM ON LM.AC_CODE=SKU.AC_CODE
		LEFT OUTER JOIN LMP01106 LMP ON LMP.AC_CODE=LM.AC_CODE
		WHERE  '+@CROWFILTER+''
		+' ORDER BY BC.PRODUCT_CODE'
	
		PRINT @DTSQL  
		EXEC SP_EXECUTESQL @DTSQL


end	
else
begin

    
Declare @Cjoin varchar(1000)

SELECT SCHEME_SETUP_DET_ROW_ID into #tmp_SCHEME_SETUP_DET_ROW_ID FROM SCHEME_SETUP_ALLMASTERS BC where 1=2 


SET @DTSQL=N' SELECT SCHEME_SETUP_DET_ROW_ID FROM SCHEME_SETUP_ALLMASTERS BC WHERE  '+@CROWFILTER+' group by SCHEME_SETUP_DET_ROW_ID ' 
insert into #tmp_SCHEME_SETUP_DET_ROW_ID
exec sp_executesql @DTSQL

select @Cjoin=isnull(@Cjoin,'')+case  
             when   SCHEME_SETUP_COLUMN_NAME ='Article' then  'and SKU.ARTICLE_CODE=BC.ARTICLE_CODE '
             when   SCHEME_SETUP_COLUMN_NAME ='Para1'  then   'and SKU.Para1_CODE=BC.Para1_CODE '
			 when   SCHEME_SETUP_COLUMN_NAME ='Para2'  then   'and SKU.Para2_CODE=BC.Para2_CODE '
			 when   SCHEME_SETUP_COLUMN_NAME ='Para3'  then   'and SKU.Para3_CODE=BC.Para3_CODE' 
			 when   SCHEME_SETUP_COLUMN_NAME ='Para4'  then   'and SKU.Para4_CODE=BC.Para4_CODE '
			 when   SCHEME_SETUP_COLUMN_NAME ='Para5'  then   'and SKU.Para5_CODE=BC.Para5_CODE '
			 when   SCHEME_SETUP_COLUMN_NAME ='Para6'  then    'and SKU.Para6_CODE=BC.Para6_CODE '
			 else '' end

FROM SCHEME_SETUP_ALLMASTERS_CONFIG A
join #tmp_SCHEME_SETUP_DET_ROW_ID b on a.SCHEME_SETUP_DET_ROW_ID =b.SCHEME_SETUP_DET_ROW_ID
and  SCHEME_SETUP_FLAG=1 

set @Cjoin=isnull(@Cjoin,'')


SET @DTSQL=N'SELECT SKU.INV_NO, 
		 CONVERT(NUMERIC(10,0),bc.DISCOUNT_FIGURE) AS DISCOUNT_FIGURE,
		   bc.SCHEME_SETUP_DET_ROW_ID,bc.ROW_ID,
		   bc.COMPANY_CODE,bc.LAST_UPDATE,
		   DISCOUNT_PERCENTAGE=cast((CASE WHEN bc.discount_mode=1 AND bc.discount_figure<>0 THEN bc.discount_figure
		   WHEN bc.discount_mode=3 AND bc.discount_figure<>0 THEN ((bc.discount_figure/sku.MRP)*100)
		   WHEN bc.discount_mode=2 AND bc.discount_figure<>0 THEN (((sku.MRP-bc.discount_figure)/sku.MRP)*100)
           ELSE 0 END) as numeric(10,2)),
		   DISCOUNT_AMOUNT=cast(0 as numeric(10,2)),
		   CONVERT(NUMERIC(10,0),SKU.MRP) AS NET_PRICE,
		   sku.PRODUCT_CODE,
		   0 as OLD_MD_PERCENTAGE,0 as NEW_MD_PERCENTAGE,
		   bc.DISCOUNT_MODE,0 AS PRN,0 AS QUANTITY,
		   0 AS ADDITIONAL_DISCOUNT_PERCENTAGE,
	    (CASE WHEN bc.DISCOUNT_MODE = 1 THEN ''PCT'' 
		 WHEN bc.DISCOUNT_MODE = 2 THEN ''NET'' 
		 WHEN bc.DISCOUNT_MODE = 3 THEN ''AMT'' ELSE '''' END ) AS DISC_TYPE,
		 bc.DISCOUNT_MODE,ARTICLE_NAME,ARTICLE_NO
		,SKU.MRP,SKU.PURCHASE_PRICE, SECTIOND.SUB_SECTION_NAME, SECTIONM.SECTION_NAME
		,PARA1.PARA1_NAME,PARA1.PARA1_CODE,PARA2.PARA2_NAME,PARA2.PARA2_CODE
		,PARA3.PARA3_NAME,PARA3.PARA3_CODE ,PARA4.PARA4_NAME,PARA4.PARA4_CODE
		,PARA5.PARA5_NAME,PARA5.PARA5_CODE,PARA6.PARA6_NAME,PARA6.PARA6_CODE,DISCON,ISNULL(LM.ALIAS,'''') AS PARTY_ALIAS,
		RTRIM(LTRIM(STR(MONTH(SKU.INV_DT)))) + ''/'' + RTRIM(LTRIM(STR(YEAR(SKU.INV_DT))))  AS INV_MONTH ,
		SKU.INV_NO,LM.ALIAS AS  ALIAS
		,(CASE WHEN ISNULL(IRD.PRODUCT_CODE,'''')='''' THEN SKU.PRODUCT_CODE ELSE IRD.PRODUCT_CODE END) AS OLD_PRODUCT_CODE,SKU.HSN_CODE
		FROM SCHEME_SETUP_ALLMASTERS bc (nolock)
		join SKU (NOLOCK) on 1=1  '+@Cjoin+'
		join article  (nolock) on ARTICLE.article_code=sku.article_code
		JOIN SCHEME_SETUP_DET DET ON bc.SCHEME_SETUP_DET_ROW_ID = DET.ROW_ID 
		JOIN SCHEME_SETUP_MST MST ON DET.MEMO_NO = MST.MEMO_NO
		LEFT OUTER JOIN IRD01106 IRD (NOLOCK) ON IRD.NEW_PRODUCT_CODE = sku.PRODUCT_CODE  and ird.new_product_code<>''''
		LEFT JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE
		LEFT JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE 
		LEFT JOIN PARA1 ON PARA1.PARA1_CODE = SKU.PARA1_CODE
		LEFT JOIN PARA2 ON PARA2.PARA2_CODE = SKU.PARA2_CODE
		LEFT JOIN PARA3 ON PARA3.PARA3_CODE = SKU.PARA3_CODE
		LEFT JOIN PARA4 ON PARA4.PARA4_CODE = SKU.PARA4_CODE
		LEFT JOIN PARA5 ON PARA5.PARA5_CODE = SKU.PARA5_CODE
		LEFT JOIN PARA6 ON PARA6.PARA6_CODE = SKU.PARA6_CODE
		JOIN LM01106 LM ON LM.AC_CODE=SKU.AC_CODE
		LEFT OUTER JOIN LMP01106 LMP ON LMP.AC_CODE=LM.AC_CODE
		WHERE    '+@CROWFILTER+' AND CHARINDEX(''@'',SKU.PRODUCT_CODE)=0'
		+' ORDER BY SKU.PRODUCT_CODE'
		PRINT @DTSQL  
		EXEC SP_EXECUTESQL @DTSQL


end
	GOTO ENDPROC
	
LBLSCHEMEMSTLOC:	

	SELECT A.*,B.DEPT_NAME FROM SCHEME_SETUP_LOC A (NOLOCK)
	JOIN LOCATION B (NOLOCK) ON A.DEPT_ID = B.DEPT_ID
	WHERE A.MEMO_NO = @CWHERE	
	
	GOTO ENDPROC
	
LBLSCHEMEDETBYROWID:	

	SELECT A.*,C.PROMOTIONAL_SCHEME_NAME,SOR_terms_name
	FROM SCHEME_SETUP_DET A (NOLOCK) 
	JOIN SCHEME_SETUP_MST B (NOLOCK)ON A.MEMO_NO = B.MEMO_NO 
	LEFT JOIN  sor_terms_mst st (NOLOCK) ON st.sor_terms_code=a.sor_terms_code
	LEFT OUTER JOIN PROMOTIONAL_SCHEMES_MST C ON A.PROMOTIONAL_SCHEME_ID = C.PROMOTIONAL_SCHEME_ID 
	WHERE A.ROW_ID = @CWHERE	
	
	
	GOTO ENDPROC
	
	
	
LBLSETUPART:
	
	SELECT A.*,SECTION_NAME,C.SUB_SECTION_NAME,B.ARTICLE_NO
	,(CASE WHEN A.DISCOUNT_MODE = 1 THEN 'PCT' 
	WHEN A.DISCOUNT_MODE = 2 THEN 'NET' 
	WHEN A.DISCOUNT_MODE = 3 THEN 'AMT' ELSE '' END ) AS DISC_TYPE,CAST(0 AS BIT) AS CHK,B.MRP
	FROM SCHEME_SETUP_SLSART A
	JOIN ARTICLE B ON A.ARTICLE_CODE = B.ARTICLE_CODE
	JOIN SECTIOND C ON C.SUB_SECTION_CODE = B.SUB_SECTION_CODE 
	JOIN SECTIONM D ON D.SECTION_CODE = C.SECTION_CODE
	WHERE  A.SCHEME_SETUP_DET_ROW_ID = @CWHERE 
	
	GOTO ENDPROC

LBLSETUPALLMST:
	
	SELECT A.*,SECTION_NAME,C.SUB_SECTION_NAME,B.ARTICLE_NO,PARA1_NAME,PARA2_NAME,PARA3_NAME,PARA4_NAME,
	PARA5_NAME,PARA6_NAME,(CASE WHEN A.DISCOUNT_MODE = 1 THEN 'PCT' 
	WHEN A.DISCOUNT_MODE = 2 THEN 'NET' 
	WHEN A.DISCOUNT_MODE = 3 THEN 'AMT' ELSE '' END ) AS DISC_TYPE
	FROM SCHEME_SETUP_ALLMASTERS A
	LEFT OUTER JOIN ARTICLE B ON A.ARTICLE_CODE = B.ARTICLE_CODE
	LEFT OUTER  JOIN SECTIOND C ON C.SUB_SECTION_CODE = A.SUB_SECTION_CODE 
	LEFT OUTER  JOIN SECTIONM D ON D.SECTION_CODE = A.SECTION_CODE
	LEFT OUTER  JOIN PARA1 P1 ON P1.PARA1_CODE=A.PARA1_CODE
	LEFT OUTER  JOIN PARA2 P2 ON P2.PARA2_CODE=A.PARA2_CODE
	LEFT OUTER  JOIN PARA3 P3 ON P3.PARA3_CODE=A.PARA3_CODE
	LEFT OUTER  JOIN PARA4 P4 ON P4.PARA4_CODE=A.PARA4_CODE
	LEFT OUTER  JOIN PARA5 P5 ON P5.PARA5_CODE=A.PARA5_CODE
	LEFT OUTER JOIN PARA6 P6 ON P6.PARA6_CODE=A.PARA6_CODE
	WHERE  A.SCHEME_SETUP_DET_ROW_ID = @CWHERE  AND ISNULL(source_type,1) IN (0,1)
	
	GOTO ENDPROC
LBLSETUPALLMSTCONFIG:

	SELECT A.*
	FROM SCHEME_SETUP_ALLMASTERS_CONFIG A
	WHERE  A.SCHEME_SETUP_DET_ROW_ID = @CWHERE 
		
	GOTO ENDPROC

LBLSETUPOPTSCHPARAS:

	SELECT A.*
	FROM SCHEME_SETUP_OPTIMIZED_PARA A
	WHERE  A.SCHEME_SETUP_DET_ROW_ID = @CWHERE 
	
	GOTO ENDPROC
			
LBLSETUPPARA3:
	
	SELECT A.*,B.PARA3_NAME
	,(CASE WHEN A.DISCOUNT_MODE = 1 THEN 'PCT' 
	WHEN A.DISCOUNT_MODE = 2 THEN 'NET' 
	WHEN A.DISCOUNT_MODE = 3 THEN 'AMT' ELSE '' END ) AS DISC_TYPE
	FROM SCHEME_SETUP_SLSPARA A
	JOIN PARA3 B ON A.PARA3_CODE=B.PARA3_CODE
	WHERE  A.SCHEME_SETUP_DET_ROW_ID = @CWHERE 

	GOTO ENDPROC
	
LBLALLPROMO:
	
	SELECT * FROM PROMOTIONAL_SCHEMES_MST WHERE ISNULL(INACTIVE,0)= 0

	GOTO ENDPROC
	
LBLPROMOSCHEMEDET:
	
	SELECT * FROM PROMOTIONAL_SCHEMES_DET  WHERE REF_SCHEMESETUP_DET_ROW_ID = @CWHERE 
	
	GOTO ENDPROC
	
LBLGETSCHEMESETBYNOANDNAME:
	
	SELECT * FROM SCHEME_SETUP_MST WHERE MEMO_NO <> @CROWID AND SCHEME_SET_NAME = @CWHERE
	
	GOTO ENDPROC
	
LBLGETSCHEMESETBYNAME:
	
	SELECT * FROM SCHEME_SETUP_MST WHERE SCHEME_SET_NAME = @CWHERE
	
	GOTO ENDPROC
	
	
LBLPOWERPRICEQTY:
	
	
 SELECT @CPROMOID=PROMOTIONAL_SCHEME_ID FROM SCHEME_SETUP_DET WHERE ROW_ID=@CWHERE
 
 IF  @CPROMOID IN ('SCH0002','SCH0011')
 BEGIN	
	SELECT * FROM SCHEME_SETUP_SCH0002_1 (NOLOCK) WHERE SCHEME_SETUP_DET_ROW_ID= @CWHERE
 END
 
 ELSE
 IF  @CPROMOID='SCH0007'
 BEGIN	
	SELECT * FROM SCHEME_SETUP_SCH0007_1 (NOLOCK) WHERE SCHEME_SETUP_DET_ROW_ID= @CWHERE
 END
 
 ELSE
 IF  @CPROMOID='SCH0006'
 BEGIN
	SELECT SCHEME_SETUP_DET_ROW_ID,FROM_AMOUNT AS FROM_QTY,TO_AMOUNT AS TO_QTY,DISCOUNT_FIGURE,ROW_ID
	FROM SCHEME_SETUP_SCH0006_1 (NOLOCK) WHERE SCHEME_SETUP_DET_ROW_ID= @CWHERE
 END
 
 ELSE
 IF  @CPROMOID='SCHB002'
 BEGIN
	SELECT SCHEME_SETUP_DET_ROW_ID,FROM_QTY,TO_QTY,DISCOUNT_FIGURE,ROW_ID  
	FROM SCHEME_SETUP_SCHB002_1 (NOLOCK) WHERE SCHEME_SETUP_DET_ROW_ID= @CWHERE
 END
 
 ELSE
 IF  @CPROMOID='SCH0012'
 BEGIN
    SELECT * FROM SCHEME_SETUP_SCH0012 (NOLOCK) WHERE SCHEME_SETUP_DET_ROW_ID= @CWHERE
 END 
  
 ELSE 
 BEGIN
	SELECT SCHEME_SETUP_DET_ROW_ID,FROM_AMOUNT AS FROM_QTY,TO_AMOUNT AS TO_QTY,DISCOUNT_FIGURE,ROW_ID  
	FROM SCHEME_SETUP_SCHB001_1 (NOLOCK) WHERE 1=2
 END
	
	
 GOTO ENDPROC
	
	
LBLSETUPART_GET:
	SELECT A.*,ARTICLE_NO,SECTION_NAME,C.SUB_SECTION_NAME	,CAST(0 AS BIT) AS CHK
	FROM SCHEME_SETUP_SLSART_GET A
	JOIN ARTICLE B ON A.ARTICLE_CODE = B.ARTICLE_CODE
	JOIN SECTIOND C ON C.SUB_SECTION_CODE = B.SUB_SECTION_CODE 
	JOIN SECTIONM D ON D.SECTION_CODE = C.SECTION_CODE
	WHERE  A.SCHEME_SETUP_DET_ROW_ID = @CWHERE  

GOTO ENDPROC	

 LBLSETUPBC_GET:
 SELECT MST.*,
	SKU.MRP,SKU.PURCHASE_PRICE, SECTIOND.SUB_SECTION_NAME, SECTIONM.SECTION_NAME
	,PARA1.PARA1_NAME,PARA1.PARA1_CODE
	,PARA2.PARA2_NAME,PARA2.PARA2_CODE
	,PARA3.PARA3_NAME,PARA3.PARA3_CODE  
	,PARA4.PARA4_NAME,PARA4.PARA4_CODE
	,PARA5.PARA5_NAME,PARA5.PARA5_CODE
	,PARA6.PARA6_NAME,PARA6.PARA6_CODE,
	ARTICLE.ARTICLE_NO
	FROM SCHEME_SETUP_SLSBC_GET MST (NOLOCK) 
	JOIN SKU (NOLOCK) ON MST.PRODUCT_CODE = SKU.PRODUCT_CODE 
	LEFT JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE
	LEFT JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE
	LEFT JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE 
	LEFT JOIN PARA1 ON PARA1.PARA1_CODE = SKU.PARA1_CODE
	LEFT JOIN PARA2 ON PARA2.PARA2_CODE = SKU.PARA2_CODE
	LEFT JOIN PARA3 ON PARA3.PARA3_CODE = SKU.PARA3_CODE
	LEFT JOIN PARA4 ON PARA4.PARA4_CODE = SKU.PARA4_CODE
	LEFT JOIN PARA5 ON PARA5.PARA5_CODE = SKU.PARA5_CODE
	LEFT JOIN PARA6 ON PARA6.PARA6_CODE = SKU.PARA6_CODE
	WHERE MST.SCHEME_SETUP_DET_ROW_ID = @CWHERE AND ISNULL(MST.source_type,1) =1-- Prevoius it was 2
 
 GOTO ENDPROC

 LBLSETUPPARA_GET:
SELECT A.*,PARA3_NAME
	FROM SCHEME_SETUP_SLSPARA_GET A
	JOIN PARA3 B ON A.PARA3_CODE=B.PARA3_CODE
	WHERE  A.SCHEME_SETUP_DET_ROW_ID = @CWHERE 
 
 GOTO ENDPROC
 LBLSEC_SUBSECDETAILS:
 
 BEGIN TRY
     
		SET @CTEMPTABLE = 'TEMP_SLS_BC_GET_'+LTRIM(RTRIM(STR(@NSPID)))
	
	 --    SET @CCMD = N'IF EXISTS (SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID=OBJECT_ID('''+@CTEMPTABLE+''',''U'') AND NAME=''DISC_TYPE'') 
		--	               SET @DISTYPE=1
		--	               ELSE
		--	                SET @DISTYPE=0'
		--    PRINT @CCMD
		--    EXEC SP_EXECUTESQL @CCMD,N'@DISTYPE BIT OUTPUT',@DISTYPE OUTPUT
	
	
		--IF OBJECT_ID ('#SEC_SUB_ARTICLE','U') IS NOT NULL
		--	DROP TABLE #SEC_SUB_ARTICLE
		-- CREATE TABLE #SEC_SUB_ARTICLE(ARTICLE_NO VARCHAR(100))
		
		-- SET @CCMD = N'SELECT A.ARTICLE_NO FROM '+@CTEMPTABLE+' A 
		-- LEFT OUTER JOIN ARTICLE B ON A.ARTICLE_NO = B.ARTICLE_NO
		--	WHERE B.ARTICLE_NO IS NULL'
		-- PRINT @CCMD
		-- INSERT INTO #SEC_SUB_ARTICLE
		-- EXEC SP_EXECUTESQL @CCMD
		 
		-- IF EXISTS (SELECT TOP 1 * FROM  #SEC_SUB_ARTICLE)
		--	SELECT ARTICLE_NO AS ARTICLENOTFOUND FROM #SEC_SUB_ARTICLE	
     
		SET @CCMD =N'SELECT DISTINCT A.PRODUCT_CODE, ARTICLE.ARTICLE_CODE, ARTICLE.ARTICLE_NO,SECTIONM.SECTION_NAME,SECTIOND.SUB_SECTION_NAME,
		             DISCOUNT_MODE=CAST(0 AS INT),DISC_TYPE=CAST('''' AS VARCHAR(100)),DISCOUNT_FIGURE=CAST( 0 AS INT),
		             SCHEME_SETUP_DET_ROW_ID=CAST('''' AS VARCHAR(100)),ROW_ID=CAST('''' AS VARCHAR(100)),COMPANY_CODE=CAST('''' AS  VARCHAR(10)),LAST_UPDATE=GETDATE(),
		             SKU.MRP,SKU.PURCHASE_PRICE,DISCOUNT_PERCENTAGE=CAST(0 AS NUMERIC(18,2)),DISCOUNT_AMOUNT=CAST(0 AS NUMERIC(18,2)),
		             NET_PRICE=CAST(0 AS NUMERIC(18,2)),OLD_MD_PERCENTAGE=CAST(0 AS NUMERIC(18,2)),
		             P1.PARA1_NAME,P2.PARA2_NAME,P3.PARA3_NAME,P4.PARA4_NAME,P5.PARA5_NAME,P6.PARA6_NAME
		             
		FROM SKU  
		JOIN ARTICLE ON SKU.ARTICLE_CODE=ARTICLE.ARTICLE_CODE  
		JOIN SECTIOND ON SECTIOND.SUB_SECTION_CODE = ARTICLE.SUB_SECTION_CODE 
		JOIN SECTIONM ON SECTIONM.SECTION_CODE = SECTIOND.SECTION_CODE
		JOIN '+@CTEMPTABLE+' A ON A.PRODUCT_CODE = SKU.PRODUCT_CODE
		JOIN PARA1 P1 ON P1.PARA1_CODE=SKU.PARA1_CODE
		JOIN PARA2 P2 ON P2.PARA2_CODE=SKU.PARA2_CODE
		JOIN PARA3 P3 ON P3.PARA3_CODE=SKU.PARA3_CODE
		JOIN PARA4 P4 ON P4.PARA4_CODE=SKU.PARA4_CODE
		JOIN PARA5 P5 ON P5.PARA5_CODE=SKU.PARA5_CODE
		JOIN PARA6 P6 ON P6.PARA6_CODE=SKU.PARA6_CODE
		'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
	END TRY
	BEGIN CATCH
		SET @CERRMSG = ERROR_MESSAGE()
	    SELECT @CERRMSG AS ERRMSG
	END CATCH	
	
	SET @CCMD = 'IF OBJECT_ID ('''+@CTEMPTABLE+''',''U'') IS NOT NULL
						DROP TABLE '+@CTEMPTABLE+''
	    
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD
	
    GOTO ENDPROC

LBLFINDBARCODE_TITLES:
    
    
	SELECT C.MEMO_NO, SCHEME_SET_NAME,SCHEME_NAME,B.ROW_ID
	--(CASE WHEN A.DISCOUNT_MODE = 1 THEN 'PCT' 
	--WHEN A.DISCOUNT_MODE = 2 THEN 'NET' 
	--WHEN A.DISCOUNT_MODE = 3 THEN 'AMT' ELSE '' END ) AS DISCOUNT_MODE,DISCOUNT_FIGURE
	FROM SCHEME_SETUP_SLSBC A 
	JOIN SCHEME_SETUP_DET B ON A.SCHEME_SETUP_DET_ROW_ID=B.ROW_ID
	JOIN SCHEME_SETUP_MST C ON C.MEMO_NO=B.MEMO_NO
	WHERE A.PRODUCT_CODE=@CWHERE AND CONVERT(VARCHAR,GETDATE(),110) BETWEEN APPLICABLE_FROM_DT AND APPLICABLE_TO_DT

  GOTO ENDPROC


LBLFINDTITLES_LIST:
    
	SELECT A.MEMO_NO,SCHEME_SET_NAME,SCHEME_NAME,B.ROW_ID
	--(CASE WHEN C.DISCOUNT_MODE = 1 THEN 'PCT' 
	--	WHEN C.DISCOUNT_MODE = 2 THEN 'NET' 
	--	WHEN C.DISCOUNT_MODE = 3 THEN 'AMT' ELSE '' END ) AS DISCOUNT_MODE,DISCOUNT_FIGURE
	FROM SCHEME_SETUP_MST A
	LEFT JOIN SCHEME_SETUP_DET B ON A.MEMO_NO=B.MEMO_NO
	--LEFT JOIN SCHEME_SETUP_SLSBC C ON C.SCHEME_SETUP_DET_ROW_ID=B.ROW_ID
	WHERE (B.ROW_ID=@CWHERE or  @CWHERE='')
GOTO ENDPROC

LBLFINDTITLEGROUPS_LIST:
	
	SELECT A.MEMO_NO,SCHEME_SET_NAME,SCHEME_NAME,B.ROW_ID
	--(CASE WHEN C.DISCOUNT_MODE = 1 THEN 'PCT' 
	--	WHEN C.DISCOUNT_MODE = 2 THEN 'NET' 
	--	WHEN C.DISCOUNT_MODE = 3 THEN 'AMT' ELSE '' END ) AS DISCOUNT_MODE,DISCOUNT_FIGURE
	FROM SCHEME_SETUP_MST A
	LEFT JOIN SCHEME_SETUP_DET B ON A.MEMO_NO=B.MEMO_NO
	--LEFT JOIN SCHEME_SETUP_SLSBC C ON C.SCHEME_SETUP_DET_ROW_ID=B.ROW_ID
	WHERE (A.MEMO_NO=@CWHERE or  @CWHERE ='')

  GOTO ENDPROC

LBLSCHEMESLOV:

	 IF OBJECT_ID('TEMPDB..#TMPSCHEMES','U') IS NOT NULL
		DROP TABLE #TMPSCHEMES
		   
	 SELECT SCHEME_SET_NAME,SCHEME_NAME,ROW_ID AS SCHEME_DET_ROW_ID,A.MEMO_NO
	 INTO #TMPSCHEMES
	 FROM  SCHEME_SETUP_MST A 
	 LEFT JOIN SCHEME_SETUP_DET B ON A.MEMO_NO=B.MEMO_NO    
	 WHERE CONVERT(VARCHAR,GETDATE(),110) BETWEEN APPLICABLE_FROM_DT AND APPLICABLE_TO_DT    
	    
	 SELECT SCHEME_NAME+'('+SCHEME_SET_NAME+')' AS SCHEME_NAME,SCHEME_DET_ROW_ID FROM #TMPSCHEMES  
	 WHERE SCHEME_NAME IS NOT NULL 
	   
	 SELECT DISTINCT SCHEME_SET_NAME,MEMO_NO FROM #TMPSCHEMES  
	  
	 DROP TABLE #TMPSCHEMES
	 
	 GOTO ENDPROC
	 
LBLCOPYSCHEMELIST:
	 SELECT ROW_ID,CONVERT(BIT,0) AS SELECTED,(CASE WHEN SCHEME_MODE=1 THEN 'FLAT' ELSE 'PROMOTIONAL' END) AS SCHEME_TYPE,
	 SCHEME_NAME,SCHEME_NAME AS NEW_SCHEME_NAME FROM SCHEME_SETUP_DET
	 WHERE MEMO_NO=@CWHERE
	 ORDER BY SCHEME_TYPE
	 GOTO ENDPROC	 
	 
	 
	 
	 
	 LBLSLSEAN:

	SELECT MST.*,(CASE WHEN MST.DISCOUNT_MODE = 1 THEN 'PCT' 
	WHEN MST.DISCOUNT_MODE = 2 THEN 'NET' 
	WHEN MST.DISCOUNT_MODE = 3 THEN 'AMT' ELSE '' END ) AS DISC_TYPE,	
    CONVERT(NUMERIC(10,0),0) AS OLD_DISCOUNT_MODE,CONVERT(NUMERIC(10,0),0) AS OLD_DISCOUNT_FIGURE
	FROM SCHEME_SETUP_SLSEAN MST (NOLOCK) 	
	WHERE MST.SCHEME_SETUP_DET_ROW_ID = @CWHERE  
	  
	GOTO ENDPROC
	 
	 
	 
LBLEANSCAN:

	IF NOT EXISTS(SELECT TOP 1 * FROM VENDOR_EAN_MASTER WHERE VENDOR_EAN_NO = @CWHERE)
		SELECT 'VENDOR EAN NOT FOUND' AS ERRMSG
	ELSE
		SELECT '' AS ERRMSG
	
	SELECT A.VENDOR_EAN_NO,
	'PCT' AS DISC_TYPE,CAST(0 AS NUMERIC(10,2)) AS DISCOUNT_FIGURE,CAST(0 AS NUMERIC(6,2)) AS DISCOUNT_PERCENTAGE
	,CAST(0 AS NUMERIC(10,2)) AS DISCOUNT_AMOUNT
	,CAST(0 AS NUMERIC(10,2)) AS NET_PRICE
    ,CAST(0 AS NUMERIC(6,2))  AS OLD_MD_PERCENTAGE
    ,CAST(0 AS NUMERIC(6,2)) AS NEW_MD_PERCENTAGE
    ,CAST(1 AS NUMERIC(10,0)) AS DISCOUNT_MODE,1 AS QUANTITY   
    FROM VENDOR_EAN_MASTER A	
	WHERE A.VENDOR_EAN_NO = @CWHERE 
	  
	GOTO ENDPROC
	
	LBLSETUPEAN:
	
	SELECT A.*
	,(CASE WHEN A.DISCOUNT_MODE = 1 THEN 'PCT' 
	WHEN A.DISCOUNT_MODE = 2 THEN 'NET' 
	WHEN A.DISCOUNT_MODE = 3 THEN 'AMT' ELSE '' END ) AS DISC_TYPE
	FROM SCHEME_SETUP_SLSEAN A	
	WHERE  A.SCHEME_SETUP_DET_ROW_ID = @CWHERE 

	GOTO ENDPROC 
	
	
	
	
	LBLEANIMPORTEXCEL:	
	
	BEGIN TRY
		SET @CTEMPTABLE = (CASE WHEN @NQUERY=55 THEN 'TEMP_SLS_EAN_' ELSE 'TEMP_SLS_EAN_GET_' END)+LTRIM(RTRIM(STR(@NSPID)))
		
		IF OBJECT_ID ('#NF_EAN','U') IS NOT NULL
			DROP TABLE #NF_EAN
		 CREATE TABLE #NF_EAN(VENDOR_EAN_NO VARCHAR(100))
		
		 SET @CCMD = N'SELECT A.VENDOR_EAN_NO FROM '+@CTEMPTABLE+' A LEFT OUTER JOIN VENDOR_EAN_MASTER B ON A.VENDOR_EAN_NO = B.VENDOR_EAN_NO
		            	WHERE B.VENDOR_EAN_NO IS NULL'
		 PRINT @CCMD
		 INSERT INTO #NF_EAN
		 EXEC SP_EXECUTESQL @CCMD
		 
		 IF EXISTS (SELECT TOP 1 * FROM  #NF_EAN)
			SELECT VENDOR_EAN_NO AS ARTICLENOTFOUND FROM #NF_EAN	
     
		SET @CCMD =N'SELECT DISTINCT A.VENDOR_EAN_NO,A.DISCTYPE AS DISC_TYPE,
		A.DISCVALUE AS DISCOUNT_FIGURE,
		CONVERT(INT,(CASE WHEN A.DISCTYPE = ''PCT'' THEN 1 WHEN A.DISCTYPE = ''AMT'' THEN 3 ELSE 2 END)) AS DISCOUNT_MODE
		FROM VENDOR_EAN_MASTER 
		JOIN '+@CTEMPTABLE+' A ON A.VENDOR_EAN_NO = VENDOR_EAN_MASTER.VENDOR_EAN_NO'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
	END TRY
	BEGIN CATCH
		SET @CERRMSG = ERROR_MESSAGE()
	    SELECT @CERRMSG AS ERRMSG
	END CATCH	
	
	SET @CCMD = 'IF OBJECT_ID ('''+@CTEMPTABLE+''',''U'') IS NOT NULL
						DROP TABLE '+@CTEMPTABLE+''
	    
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD
	
    GOTO ENDPROC
    
       
    
    
 LBLSETUPEAN_GET:
 
    SELECT MST.*	
	FROM SCHEME_SETUP_SLSEAN_GET MST (NOLOCK) 	
	WHERE MST.SCHEME_SETUP_DET_ROW_ID = @CWHERE
 
 GOTO ENDPROC


LBLSCHEME0014DET:
	SELECT * FROM SCHEME_SETUP_SCH0014_1 WHERE SCHEME_SETUP_DET_ROW_ID = @CWHERE
	GOTO ENDPROC
			 
ENDPROC:
  
END
---- 'END OF CREATING PROCEDURE - SP3S_SCHEME_SETUP'
