CREATE PROCEDURE SP_SYNCH_MIRRORDATA_SLS_SINGLE
(
    @CLOCID VARCHAR(3)
   ,@CERRMSG VARCHAR(1000) OUTPUT
)
AS
SET NOCOUNT ON
BEGIN
	/*
		208_2014_01_13 : THIS PROCEDURE WILL MERGE DATA FROM TEMPORARY TABLE TO ACTUAL TABLE.
						 TABLE NAMES AND ITS MERGING ORDER WILL BE FIXED AND WILL BE DEFINED HERE.	
						 
		NOTE : EMPLOYEE_HEAD WILL BE MERGED TO EMPLOYEE				 
	*/
DECLARE @CSTEP VARCHAR(100),@DTSQL NVARCHAR(MAX),@NMERGE_ORDER NUMERIC(5)
	   ,@CTABLENAME VARCHAR(200),@CTABLE_SUFFIX VARCHAR(50),@CKEYFIELD VARCHAR(200),@CDEL_ID VARCHAR(50),@CTMP_TABLENAME VARCHAR(200),@LINSERTONLY VARCHAR(1)
	   ,@CFILTERCONDITION VARCHAR(200),@CFILTERCONDITION2 VARCHAR(500),@LUPDATEONLY VARCHAR(1),@BALWAYSUPDATE VARCHAR(1),@FDEL CHAR(1)
	   ,@CERRMSGOUT VARCHAR(1000),@CTABLESSTR VARCHAR(MAX),@CMIRRORINGENABLED VARCHAR(5)
	   ,@CCURDEPTID VARCHAR(5),@CTEMPMASTERTABLE VARCHAR(200),@CTEMPDETAILTABLE VARCHAR(200)
	   ,@CTEMPPAYMODETABLE VARCHAR(200),@CTEMPTABLE VARCHAR(100),@CDONOTRESETPOSTEDINAC VARCHAR(1)
	   ,@BADDMODE BIT,@CCUTOFFDATE VARCHAR(20),@CWHERECLAUSE VARCHAR(2000),@CMEMONOLEN VARCHAR(5),@NMEMONOLEN INT
	   ,@DMINMEMODT DATETIME,@DMAXMEMODT DATETIME,@CFINYEAR VARCHAR(5),@CMEMOPREFIX VARCHAR(10)
	   ,@CMINMEMONO VARCHAR(20),@CMAXMEMONO VARCHAR(20),@CSOURCEDB VARCHAR(200),@CMERGEDB VARCHAR(200)
	   ,@BMSTINSERTONLY BIT,@BSERIESMISMATCHFOUND BIT,@CMEMOID VARCHAR(40),@CPREVMEMONO VARCHAR(20)
	   ,@NPREVMEMONO NUMERIC(12,0),@NLENVALUE INT,@CPREVMEMONOSEARCH VARCHAR(20),@CCMIDSEARCH VARCHAR(40)
	   ,@CRETPRODUCTCODE VARCHAR(50),@NVERSIONNO INT,@CJOINSTR VARCHAR(MAX),@CDONOTCHECKSERIES VARCHAR(2)
	   ,@NUPDATEMODE NUMERIC(2),@CPREVMEMOID VARCHAR(50),@CREQMEMOID VARCHAR(50),@BMANUALBILL BIT,@CVALIDATIONERRMSG VARCHAR(MAX)
	   ,@CTEMPDAILOGFILETABLE VARCHAR(200),@CFILTERCONDITION3 VARCHAR(500),@CENABLEONLINECNREDEMPTION VARCHAR(2)
	   ,@CMEMONO VARCHAR(40),@CFILTERCONDITIONCUS VARCHAR(1000),@DCM_DT DATETIME,@TOTAL_AMOUNT NUMERIC(10,2),
	   @BTOTAL_AMOUNT NUMERIC(10,2),@CSHOWLIVESALE VARCHAR(10),@CSERVERDATE DATETIME,@SLS_SYNC_AFTER DATETIME,
	   @cXnTypeLog varchar(20),@nMemoUpdated NUMERIC(4,0)

BEGIN TRY
	
	
	SET @CSTEP=10

	SET @nMemoUpdated=0
	SELECT @CSOURCEDB='',@CMERGEDB='',@BMSTINSERTONLY=1,@BSERIESMISMATCHFOUND=0,@CSERVERDATE=''
	SET @CSERVERDATE=CAST(GETDATE() AS DATE)
	
	SET @CSTEP=15
    
    SELECT TOP 1 @CCURDEPTID=VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'
    
    SELECT TOP 1 @CDONOTRESETPOSTEDINAC=VALUE FROM CONFIG WHERE CONFIG_OPTION='DONOT_RESET_ACCOUNTS_POSTEDINAC'
    
    SELECT TOP 1 @CSHOWLIVESALE=VALUE FROM CONFIG WHERE CONFIG_OPTION='ENABLE_SHOW_LIVE_SALE'
        
    SET @CDONOTRESETPOSTEDINAC=ISNULL(@CDONOTRESETPOSTEDINAC,'')
    
    SELECT TOP 1 @CENABLEONLINECNREDEMPTION=VALUE FROM CONFIG WHERE CONFIG_OPTION='ONLINE_REDEMPTIONS_CN'
    
    DECLARE @TMISSINGDATA TABLE (CM_ID VARCHAR(40),ERRMSG VARCHAR(MAX))
    		
    DECLARE @CPOSTINGATHODEPTID VARCHAR(5)
    
	SET @DTSQL=N'SELECT TOP 1 @CPOSTINGATHODEPTID=ACCOUNTS_POSTING_DEPT_ID FROM 
				 LOCATION (NOLOCK) WHERE DEPT_ID='''+@CLOCID+''''
	PRINT @DTSQL
	EXEC SP_EXECUTESQL @DTSQL,N'@CPOSTINGATHODEPTID CHAR(2) OUTPUT',@CPOSTINGATHODEPTID OUTPUT

	SET @CSTEP=15
	
	SELECT TOP 1 @CMEMONOLEN=VALUE FROM CONFIG WHERE CONFIG_OPTION='SLS_MEMO_LEN'
	
	IF ISNULL(@CMEMONOLEN,'')<>''
		SET @NMEMONOLEN=CONVERT(INT,@CMEMONOLEN)
	ELSE
		SET @NMEMONOLEN=10


	SELECT @CTEMPMASTERTABLE=@CSOURCEDB+'SLS_CMM01106_MIRROR',
		   @CTEMPDETAILTABLE=@CSOURCEDB+'SLS_CMD01106_MIRROR',
		   @CTEMPPAYMODETABLE=@CSOURCEDB+'SLS_PAYMODE_XN_DET_MIRROR',
		   @CTEMPDAILOGFILETABLE=@CSOURCEDB+'SLS_DAILOGFILE_MIRROR'
	
	IF OBJECT_ID('TEMPDB..#TMPCMDRUNREQ','U') IS NOT NULL
		DROP TABLE #TMPCMDRUNREQ
	
	SELECT * INTO #TMPXNSREQ FROM XNS_REQ_FROM_LOC WHERE 1=2
	
	SET @CSTEP=18
	DECLARE @DFREEZINGDATE1 DATETIME	
	EXEC SP3S_GETDATA_FREEZING_DATE 'SLS',@DFREEZINGDATE1 OUTPUT
	
	IF ISNULL(@DFREEZINGDATE1,'')<>''
	BEGIN  
			IF OBJECT_ID('TEMPDB..#T','U') IS NOT NULL
			 DROP TABLE #T
		
		
		SELECT CM_ID  INTO #T
		FROM SLS_CMM01106_MIRROR B (NOLOCK)
		WHERE LEFT(B.CM_ID,2)=@CLOCID AND CM_DT<=@DFREEZINGDATE1
		ORDER BY B.CM_DT,B.CM_ID,VERSION_NO DESC
	    
	    
		DELETE A FROM SLS_PAYMODE_XN_DET_MIRROR A JOIN #T B ON A.MEMO_ID=B.CM_ID WHERE  XN_TYPE='SLS'	
		DELETE A FROM SLS_COUPON_REDEMPTION_INFO_MIRROR  A JOIN #T B ON A.CM_ID=B.CM_ID 
		DELETE A FROM SLS_RPS_MST_MIRROR A  JOIN #T B ON A.REF_CM_ID=B.CM_ID 
		DELETE A FROM SLS_DAILOGFILE_MIRROR  A JOIN #T B ON A.MEMONO=B.CM_ID 
		DELETE A FROM SLS_CMD_MANUALBILL_ERRORS_MIRROR A JOIN SLS_CMD01106_MIRROR B ON A.CMD_ROW_ID=B.ROW_ID
		JOIN #T C ON C.CM_ID=B.CM_ID			
		DELETE A FROM SLS_CUSTDYM_MIRROR A JOIN #T B ON A.SLS_MEMO_ID=B.CM_ID 
		DELETE A FROM SLS_CMD01106_MIRROR A JOIN #T B ON A.CM_ID=B.CM_ID 
		DELETE A FROM SLS_CMM01106_MIRROR A JOIN #T B ON A.CM_ID=B.CM_ID 
		DELETE A FROM SLS_CMD_CONS_MIRROR A JOIN #T B ON A.CM_ID=B.CM_ID 
	END
	
	
LBLSTART:
	
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,1,@@SPID,1

					
	SET @SLS_SYNC_AFTER=''
	
	SELECT @SLS_SYNC_AFTER=ISNULL(VALUE, '') FROM CONFIG WHERE config_option='SLS_SYNC_AFTER'
	    
    SELECT @CMEMOID='',@NVERSIONNO=0 ,@TOTAL_AMOUNT=0,@BTOTAL_AMOUNT=0

	DECLARE @DFREEZINGDATE DATETIME	
	EXEC SP3S_GETDATA_FREEZING_DATE 'SLS',@DFREEZINGDATE OUTPUT

	SELECT TOP 1 @CMEMOID = CM_ID ,@NVERSIONNO=VERSION_NO,@NMEMONOLEN=LEN(CM_NO),@BMANUALBILL=MANUAL_BILL,
    @CMEMONO=B.CM_NO  ,@DCM_DT =CAST(B.CM_DT AS DATE),
    @TOTAL_AMOUNT=(CASE WHEN CANCELLED=0 THEN B.NET_AMOUNT ELSE 0 END)
    FROM SLS_CMM01106_MIRROR B (NOLOCK)
    LEFT OUTER JOIN MIRROR_SYNCH_LOG C (NOLOCK) ON C.MEMO_ID=B.CM_ID AND C.XN_TYPE='SLS'
    WHERE LEFT(B.CM_ID,2)=@CLOCID AND CM_DT>@DFREEZINGDATE
    AND DATEDIFF(SS,B.VERSION_LAST_UPDATE,GETDATE())>60 AND C.MEMO_ID IS NULL
	and b.cm_dt > @SLS_SYNC_AFTER
    ORDER BY B.CM_DT,B.CM_ID,VERSION_NO DESC
    		
	IF ISNULL(@CMEMOID,'')='' AND @nMemoUpdated>0
		GOTO lblUpdLocStatus

 ----------- FOR CUSTOMER_CODE --------------
	 IF EXISTS(SELECT  TOP 1 CM_ID FROM SLS_CMM01106_MIRROR A (NOLOCK)  
				 LEFT OUTER JOIN CUSTDYM B (NOLOCK) ON A.CUSTOMER_CODE=B.CUSTOMER_CODE 
				 LEFT OUTER JOIN SLS_CUSTDYM_MIRROR C (NOLOCK) ON A.CUSTOMER_CODE=C.CUSTOMER_CODE AND A.VERSION_NO=C.VERSION_NO
				 AND A.CM_ID=C.SLS_MEMO_ID
				 WHERE a.cm_id=@cMemoId AND B.CUSTOMER_CODE IS NULL AND C.CUSTOMER_CODE IS NULL)
     BEGIN
		SET @CSTEP=19
       
		 INSERT CUST_REQ_FROM_LOC WITH (ROWLOCK)( DEPT_ID, CUSTOMER_CODE, SOURCE_XN_TYPE, PROCESSED, LAST_UPDATE ) 
		 SELECT  @CLOCID AS DEPT_ID,A.CUSTOMER_CODE,'SLS' AS SOURCE_XN_TYPE,0 AS PROCESSED,
		 GETDATE() AS LAST_UPDATE FROM SLS_CMM01106_MIRROR A  (NOLOCK)
		 LEFT OUTER JOIN CUSTDYM B (NOLOCK) ON A.CUSTOMER_CODE=B.CUSTOMER_CODE 
		 LEFT OUTER JOIN SLS_CUSTDYM_MIRROR C (NOLOCK) ON A.CUSTOMER_CODE=C.CUSTOMER_CODE AND A.VERSION_NO=C.VERSION_NO
		 AND A.CM_ID=C.SLS_MEMO_ID
		 LEFT OUTER JOIN CUST_REQ_FROM_LOC D (NOLOCK) ON D.CUSTOMER_CODE=A.CUSTOMER_CODE
		 AND D.DEPT_ID=@CLOCID 
		 WHERE a.cm_id=@cMemoId AND B.CUSTOMER_CODE IS NULL AND C.CUSTOMER_CODE IS NULL AND
		 D.CUSTOMER_CODE IS NULL
	
		SET @CSTEP=20
		INSERT custdym	( ac_code, address0, address1, address2, address9, area_code, BILL_BY_BILL, card_code, card_name, card_no, cus_gst_no, cus_gst_state_code, customer_code, customer_fname, customer_lname, customer_title, dt_anniversary, dt_birth, dt_card_expiry, dt_card_issue, dt_created, email, email2, flat_disc_customer, flat_disc_percentage, flat_disc_percentage_during_sales, form_no, HO_LAST_UPDATE, inactive, International_customer, LAST_UPDATE, LOCATION_ID, manager_card, mobile, not_downloaded_from_wizclip, old_discount_card_type, OPENING_BALANCE, phone1, phone2, pin, prefix_code, privilege_customer, ref_customer_code, sent_to_ho, Tin_No, uploaded_to_ho, user_customer_code, wizclip_last_update )  
		 SELECT 	'0000000000' as  ac_code,'' as address0,'' as  address1,'' as  address2,'' as  address9,'0000000' as  area_code, 
		 0 as BILL_BY_BILL,'' as  card_code,'' as  card_name,'' as  card_no,'' as  cus_gst_no,'' as  cus_gst_state_code,customer_code, 
		customer_code as customer_fname,'' as  customer_lname,'' as  customer_title,'' as  dt_anniversary,'' as  dt_birth,
		'' as  dt_card_expiry,'' as  dt_card_issue,'' as  dt_created,'' as  email,'' as  email2,0 as  flat_disc_customer,
		 0 as flat_disc_percentage,0 as flat_disc_percentage_during_sales,'' as  form_no,'' as  HO_LAST_UPDATE,0 as  inactive, 
		 0 as International_customer,getdate() as  LAST_UPDATE,'' as  LOCATION_ID,0 as  manager_card,customer_code as mobile, 
		 0 as not_downloaded_from_wizclip,'' as old_discount_card_type,0 as OPENING_BALANCE,'' as  phone1,'' as  phone2, 
		 '' as pin,'' as  prefix_code,0 as  privilege_customer,'000000000000' as  ref_customer_code,0 as  sent_to_ho,'' as  Tin_No,
		 0 as  uploaded_to_ho,customer_code as  user_customer_code,'' as wizclip_last_update
		 FROM SLS_CMM01106_MIRROR a  WHERE a.cm_id=@cMemoId
         
		 GOTO LBLSTART
    END

  
    
     ----------- FOR ADVANCE Adjustment--------------
    IF EXISTS(SELECT  TOP 1 A.ADJ_MEMO_ID  FROM SLS_PAYMODE_XN_DET_MIRROR A (NOLOCK)
				LEFT JOIN  ARC_ARC01106_MIRROR B (NOLOCK) ON A.ADJ_MEMO_ID=B.ADV_REC_ID
				LEFT JOIN ARC01106 C (NOLOCK) ON C.ADV_REC_ID=A.ADJ_MEMO_ID
				WHERE a.memo_id=@cMemoId AND  B.ADV_REC_ID IS NULL AND C.ADV_REC_ID IS NULL
				AND ISNULL(A.ADJ_MEMO_ID,'')<>'' AND A.PAYMODE_CODE='0000002')
    BEGIN
		  
		 SET @CSTEP=23
		 
		 DELETE FROM #TMPXNSREQ

		 INSERT #TMPXNSREQ (XN_TYPE, XN_ID,MODE,DEPT_ID,  REMARKS)	   
		 SELECT TOP 1  'ARC' AS XN_TYPE,A.ADJ_MEMO_ID AS XN_ID,0 AS MODE,LEFT(A.MEMO_ID,2) AS DEPT_ID,
		 'ADJUST ADVANCE ID NOT FOUND AT HO  '+A.ADJ_MEMO_ID +'' AS REMARKS
         FROM SLS_PAYMODE_XN_DET_MIRROR A (NOLOCK)
		LEFT JOIN  ARC_ARC01106_MIRROR B (NOLOCK) ON A.ADJ_MEMO_ID=B.ADV_REC_ID
		LEFT JOIN ARC01106 C (NOLOCK) ON C.ADV_REC_ID=A.ADJ_MEMO_ID
		WHERE a.memo_id=@cMemoId AND  B.ADV_REC_ID IS NULL AND C.ADV_REC_ID IS NULL
		AND ISNULL(A.ADJ_MEMO_ID,'')<>'' AND A.PAYMODE_CODE='0000002'

		
		 INSERT XNS_REQ_FROM_LOC WITH (ROWLOCK) (XN_TYPE, XN_ID,MODE,DEPT_ID,REMARKS) 
		 SELECT A.XN_TYPE, A.XN_ID,A.MODE,A.DEPT_ID, A.REMARKS
		 FROM #TMPXNSREQ A LEFT OUTER JOIN XNS_REQ_FROM_LOC B (NOLOCK) ON A.DEPT_ID=B.DEPT_ID 
		 AND A.XN_ID=B.XN_ID
		 AND A.XN_TYPE=B.XN_TYPE WHERE B.XN_ID IS NULL
		
		SET @CSTEP=24
		 INSERT MIRROR_SYNCH_LOG WITH (ROWLOCK) (XN_TYPE, DEPT_ID, MEMO_ID, ERRMSG, LAST_UPDATE) 
		 SELECT TOP 1 'SLS' AS XN_TYPE,LEFT(A.MEMO_ID,2) AS DEPT_ID,A.MEMO_ID AS MEMO_ID,
		 'ADJUST ADVANCE ID NOT FOUND AT HO  '+A.ADJ_MEMO_ID +'',GETDATE() AS LAST_UPDATE
		  FROM SLS_PAYMODE_XN_DET_MIRROR A (NOLOCK)
		  LEFT JOIN  ARC_ARC01106_MIRROR B (NOLOCK) ON A.ADJ_MEMO_ID=B.ADV_REC_ID
		  LEFT JOIN ARC01106 C (NOLOCK) ON C.ADV_REC_ID=A.ADJ_MEMO_ID
		  WHERE a.memo_id=@cMemoId AND  B.ADV_REC_ID IS NULL AND C.ADV_REC_ID IS NULL
		  AND ISNULL(A.ADJ_MEMO_ID,'')<>'' AND A.PAYMODE_CODE='0000002'

		 GOTO LBLSTART
    END
      ----------- FOR CREDIT NOTE Adjustment--------------
    IF EXISTS(SELECT TOP 1 A.ADJ_MEMO_ID  FROM SLS_PAYMODE_XN_DET_MIRROR A (NOLOCK)
				LEFT JOIN  SLS_CMM01106_MIRROR B (NOLOCK) ON A.ADJ_MEMO_ID=B.CM_ID
				LEFT JOIN CMM01106 C (NOLOCK) ON C.CM_ID=A.ADJ_MEMO_ID
				WHERE a.memo_id=@cMemoId AND   B.CM_ID IS NULL AND C.CM_ID IS NULL
				AND ISNULL(A.ADJ_MEMO_ID,'')<>'' AND A.PAYMODE_CODE='0000001')
    BEGIN
		  
		 SET @CSTEP=25
		 
		 DELETE FROM #TMPXNSREQ

		 INSERT #TMPXNSREQ (XN_TYPE, XN_ID,MODE,DEPT_ID,  REMARKS)	   
		 SELECT TOP 1   'SLS' AS XN_TYPE,A.ADJ_MEMO_ID AS XN_ID,0 AS MODE,LEFT(A.MEMO_ID,2) AS DEPT_ID,
		 'ADJUST CREDIT NOTE ID NOT FOUND AT HO  '+A.ADJ_MEMO_ID+'' AS REMARKS
         FROM SLS_PAYMODE_XN_DET_MIRROR A (NOLOCK)
		LEFT JOIN  SLS_CMM01106_MIRROR B (NOLOCK) ON A.ADJ_MEMO_ID=B.CM_ID
		LEFT JOIN CMM01106 C (NOLOCK) ON C.CM_ID=A.ADJ_MEMO_ID
		WHERE a.memo_id=@cMemoId AND  B.CM_ID IS NULL AND C.CM_ID IS NULL
		AND ISNULL(A.ADJ_MEMO_ID,'')<>'' AND A.PAYMODE_CODE='0000001'

		
		 INSERT XNS_REQ_FROM_LOC WITH (ROWLOCK) (XN_TYPE, XN_ID,MODE,DEPT_ID,REMARKS) 
		 SELECT  A.XN_TYPE, A.XN_ID,A.MODE,A.DEPT_ID, A.REMARKS
		 FROM #TMPXNSREQ A LEFT OUTER JOIN XNS_REQ_FROM_LOC B (NOLOCK) ON A.DEPT_ID=B.DEPT_ID 
		 AND A.XN_ID=B.XN_ID
		 AND A.XN_TYPE=B.XN_TYPE WHERE B.XN_ID IS NULL
		
		SET @CSTEP=26
		 INSERT MIRROR_SYNCH_LOG WITH (ROWLOCK) (XN_TYPE, DEPT_ID, MEMO_ID, ERRMSG, LAST_UPDATE) 
		 SELECT TOP 1 'SLS' AS XN_TYPE,LEFT(A.MEMO_ID,2) AS DEPT_ID,A.MEMO_ID AS MEMO_ID,
		  'ADJUST CREDIT NOTE ID NOT FOUND AT HO  '+A.ADJ_MEMO_ID+'' AS ERRMSG,GETDATE() AS LAST_UPDATE
		  FROM SLS_PAYMODE_XN_DET_MIRROR A (NOLOCK)
		  LEFT JOIN  SLS_CMM01106_MIRROR B (NOLOCK) ON A.ADJ_MEMO_ID=B.CM_ID
		  LEFT JOIN CMM01106 C (NOLOCK) ON C.CM_ID=A.ADJ_MEMO_ID
		  WHERE a.memo_id=@cMemoId AND  B.CM_ID IS NULL AND C.CM_ID IS NULL
		  AND LEFT(A.MEMO_ID,2)=@CLOCID AND ISNULL(A.ADJ_MEMO_ID,'')<>'' AND A.PAYMODE_CODE='0000001'

		  GOTO LBLSTART
    END
    
    
    SET @CSTEP=29
	 INSERT EMPLOYEE WITH (ROWLOCK)	(EMP_HEAD, LAST_UPDATE, INACTIVE, EMP_CODE, EMP_NAME, EMP_ALIAS, EMP_TYPE, COM_PER_1, COM_PER_2, COM_PER_3, CATEGORY_CODE, EMAIL )  
	 SELECT DISTINCT A.EMP_CODE AS EMP_HEAD,GETDATE()AS LAST_UPDATE,0 AS  INACTIVE,A.EMP_CODE AS EMP_CODE,
	 A.EMP_CODE AS  EMP_NAME,''AS  EMP_ALIAS,1 AS  EMP_TYPE,0 AS  COM_PER_1, 0 AS COM_PER_2,0 AS  COM_PER_3,
	 '0000000' AS  CATEGORY_CODE,'' AS  EMAIL 
	 FROM SLS_CMD01106_MIRROR A WITH (NOLOCK)
	 LEFT JOIN EMPLOYEE B WITH (NOLOCK) ON A.EMP_CODE=B.EMP_CODE
	 WHERE a.cm_id=@cMemoId AND  A.VERSION_NO=@NVERSIONNO AND B.EMP_CODE IS NULL
	

	BEGIN TRANSACTION 	     
	
lblUpdLocStatus:
    
    IF ISNULL(@CMEMOID,'')=''
    BEGIN
	    UPDATE A SET MAX_CM_DT=B.MAX_CM_DT FROM LOCATION A JOIN 
		(
		SELECT LEFT(CM_ID,2) AS DEPT_ID,MAX(CM_DT) AS MAX_CM_DT FROM CMM01106 GROUP BY LEFT(CM_ID,2)
		)B ON B.DEPT_ID=A.DEPT_ID WHERE A.DEPT_ID=@CLOCID
		
		GOTO EXIT_PROC

    END
	

	IF EXISTS (SELECT TOP 1 memo_id FROM SLS_PAYMODE_XN_DET_MIRROR A (NOLOCK)
	           JOIN SLS_CMM01106_MIRROR B (NOLOCK) ON A.memo_id=B.CM_ID
			   WHERE A.MEMO_ID=@CMEMOID AND A.PAYMODE_CODE='0000001' AND ISNULL(adj_memo_id,'')=''
			   AND xn_type='SLS' AND CANCELLED=0
			   )
	BEGIN
		SET @CERRMSG='Credit note adjustment memo found blank...CANNOT MERGE'
		
		GOTO EXIT_PROC
	END

	IF EXISTS (SELECT TOP 1 memo_id FROM SLS_PAYMODE_XN_DET_MIRROR A (NOLOCK)
			   WHERE A.MEMO_ID=@CMEMOID AND A.PAYMODE_CODE='0000002' AND ISNULL(adj_memo_id,'')='')
	BEGIN
		SET @CERRMSG='Advance adjustment memo found blank...CANNOT MERGE'
		
		GOTO EXIT_PROC
	END
		
	SET @CSTEP=30	
	EXEC SP_CHKXNSAVELOG @CMEMOID,@CSTEP,0,@@SPID,1
	
    SET @CFILTERCONDITION = ' B.CM_ID='''+@CMEMOID+''' AND B.VERSION_NO='+LTRIM(RTRIM(STR(@NVERSIONNO)))
		
	/*
	SET @CMEMOPREFIX=(CASE WHEN SUBSTRING(RIGHT(@CMEMOID,@NMEMONOLEN),5,1)='N' THEN LEFT(RIGHT(@CMEMOID,@NMEMONOLEN),6) ELSE 
						   LEFT(RIGHT(@CMEMOID,@NMEMONOLEN),5) END) 	
	
	
	
	SET @NPREVMEMONO=CONVERT(NUMERIC(12,0),RIGHT(@CMEMOID,@NMEMONOLEN-LEN(@CMEMOPREFIX)))
	*/
	
	
	IF CHARINDEX('-',@CMEMONO,1)=0
       SET @CMEMOPREFIX=LEFT(@CMEMONO,2)
    ELSE   					   
	   SET @CMEMOPREFIX=LEFT(@CMEMONO,CHARINDEX('-',@CMEMONO,1))
	
	SET @NLENVALUE=@NMEMONOLEN-LEN(@CMEMOPREFIX)
	   
	SET @NPREVMEMONO=CONVERT(NUMERIC(12,0),REPLACE(@CMEMONO,@CMEMOPREFIX,''))
	
	
	DECLARE @CFIRSTMEMONO VARCHAR(20),@SERIES_CHK_CUTOFF_DATE DATETIME
	
	SELECT @CFINYEAR=FIN_YEAR FROM SLS_CMM01106_MIRROR (NOLOCK) WHERE CM_ID=@CMEMOID
	SELECT @SERIES_CHK_CUTOFF_DATE =VALUE FROM CONFIG WHERE CONFIG_OPTION='SERIES_CHK_CUTOFF_DATE'
	
	SET @SERIES_CHK_CUTOFF_DATE=ISNULL(@SERIES_CHK_CUTOFF_DATE,'')
		
	--06 JUN 2017
	--AND EXISTS(SELECT TOP 1 * FROM CMM01106(NOLOCK) WHERE LEFT(CM_ID,2)=@CLOCID)
	--06 JUN 2017		
	IF @NPREVMEMONO>1 AND @DCM_DT>=@SERIES_CHK_CUTOFF_DATE
	BEGIN
		SET @NPREVMEMONO=@NPREVMEMONO-1
		
		----CHANGE DONE ON 10-04-17 AS PER DISCUSSION WITH RAJNISH AND SIR W.R.T PROBLEM
		----COMING AT CLIENTS WHERE DATA CUTTING IS DONE IN MID OF THE FINANCIAL YEAR E.G. DRESS LAND,PRETTY U
		
		--SELECT @CFIRSTMEMONO=MIN(CM_NO) 
		--FROM CMM01106 A (NOLOCK)
		--JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID 
		--WHERE LEFT(A.CM_ID,2)=LEFT(@CMEMOID,2)
		--AND A.FIN_YEAR=@CFINYEAR AND (CASE WHEN SUBSTRING(RIGHT(@CMEMOID,@NMEMONOLEN),5,1)='N' 
		--THEN LEFT(RIGHT(@CMEMOID,@NMEMONOLEN),6) 
		--ELSE LEFT(RIGHT(@CMEMOID,@NMEMONOLEN),5) END)=@CMEMOPREFIX 
		--AND LEN(CM_NO)=LEN(@CMEMONO)
		--AND LEFT(A.CM_NO,5)=LEFT(@CMEMONO,5)
		
		SELECT @CFIRSTMEMONO=MIN(CM_NO) 
		FROM CMM01106 A (NOLOCK)
		JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID 
		WHERE LEFT(A.CM_ID,2)=LEFT(@CMEMOID,2)
		AND A.FIN_YEAR=@CFINYEAR AND LEFT(RIGHT(@CMEMOID,@NMEMONOLEN),LEN(@CMEMOPREFIX))=@CMEMOPREFIX 
		AND LEN(CM_NO)=LEN(@CMEMONO)
		AND LEFT(A.CM_NO,5)=LEFT(@CMEMONO,5)
			   
						   
        IF @CFIRSTMEMONO > @CMEMONO
			SET @CFIRSTMEMONO=@CMEMONO						   		
		
		SET @CPREVMEMONO=@CMEMOPREFIX+REPLICATE('0',@NLENVALUE-LEN(LTRIM(RTRIM(STR(@NPREVMEMONO)))))+LTRIM(RTRIM(STR(@NPREVMEMONO)))
		
		SET @CPREVMEMONOSEARCH=''
		
		SELECT TOP 1 @CPREVMEMONOSEARCH=CM_NO 
		FROM CMM01106 WITH (INDEX(UNQ_CMM_CM_NO),NOLOCK) WHERE CM_NO=@CPREVMEMONO AND FIN_YEAR=@CFINYEAR
		AND(CM_DT > @SERIES_CHK_CUTOFF_DATE OR @SERIES_CHK_CUTOFF_DATE='' ) 
		
		IF ISNULL(@CPREVMEMONOSEARCH,'')='' AND @CMEMONO<>ISNULL(@CFIRSTMEMONO,'') AND ISNULL(@CFIRSTMEMONO,'')<>''
		BEGIN
			--select @SERIES_CHK_CUTOFF_DATE,@CPREVMEMONO,@CFINYEAR,@CMEMONO,@CFIRSTMEMONO
			SET @CERRMSG='PREVIOUS MEMO NO. :'+@CPREVMEMONO+' NOT FOUND...CANNOT MERGE'
			SET @BSERIESMISMATCHFOUND=1
							
			GOTO EXIT_PROC
		END	
	END

	SET @CSTEP=40
	SET @CCMIDSEARCH=''
	SELECT TOP 1 @CCMIDSEARCH=A.CM_ID FROM CMM01106 A (NOLOCK) WHERE A.CM_ID=@CMEMOID
	
	IF ISNULL(@CCMIDSEARCH,'')<>''
		SET @BADDMODE=0
	ELSE
		SET @BADDMODE=1
	
	IF @BADDMODE=0
	BEGIN
		SET @CSTEP=50
		EXEC SP3SBUILDSLS
			@CXNID=@CMEMOID
			,@NUPDATEMODE=3
			,@CERRMSG=@CERRMSG OUTPUT  

		IF ISNULL(@CERRMSG,'')<>''
			GOTO Exit_PROC
	END
	
	IF ISNULL(@CPOSTINGATHODEPTID,'')=@CCURDEPTID AND @BADDMODE=0
	BEGIN
		
		SET @CSTEP=90
		SET @DTSQL=N'UPDATE A SET POSTEDINAC=B.POSTEDINAC FROM '+@CTEMPMASTERTABLE+' A WITH (ROWLOCK) 
					 JOIN CMM01106 B (NOLOCK) ON A.CM_ID=B.CM_ID WHERE B.CM_ID='''+@CMEMOID+''''
		PRINT @DTSQL  
		EXEC SP_EXECUTESQL @DTSQL
		
		SET @CSTEP=95
		SET @DTSQL=N'UPDATE B SET POSTEDINAC=0 FROM CMM01106 A (NOLOCK) 
					 JOIN '+@CTEMPMASTERTABLE+' B WITH (ROWLOCK) ON A.CM_ID=B.CM_ID
				     WHERE B.CM_ID='''+@CMEMOID+''' AND A.NET_AMOUNT<>B.NET_AMOUNT OR A.CANCELLED<>B.CANCELLED'
		PRINT @DTSQL  
		EXEC SP_EXECUTESQL @DTSQL
		
		
		IF  @CDONOTRESETPOSTEDINAC<>'1'
		BEGIN
			SET @CSTEP=100

			SET @DTSQL=N'UPDATE A SET POSTEDINAC=0 FROM '+@CTEMPMASTERTABLE+' A  WITH (ROWLOCK) 
						 JOIN (SELECT ISNULL(A.MEMO_ID,B.MEMO_ID) AS MEMO_ID FROM 
							  ( SELECT A.MEMO_ID,A.PAYMODE_CODE,SUM(AMOUNT) AS AMOUNT FROM PAYMODE_XN_DET A (NOLOCK)
								JOIN '+@CTEMPMASTERTABLE+' B (NOLOCK) ON A.MEMO_ID=B.CM_ID
								WHERE '+@CFILTERCONDITION+' AND A.XN_TYPE=''SLS'' GROUP BY A.MEMO_ID,A.PAYMODE_CODE) A
							   FULL OUTER JOIN 
							  ( SELECT A.MEMO_ID,A.PAYMODE_CODE,SUM(AMOUNT) AS AMOUNT FROM '+@CTEMPPAYMODETABLE+' A (NOLOCK)
								JOIN '+@CTEMPMASTERTABLE+' B (NOLOCK) ON A.MEMO_ID=B.CM_ID
								WHERE '+@CFILTERCONDITION+' AND A.XN_TYPE=''SLS'' GROUP BY A.MEMO_ID,A.PAYMODE_CODE) B ON A.MEMO_ID=B.MEMO_ID
							   AND A.PAYMODE_CODE=B.PAYMODE_CODE WHERE ISNULL(A.AMOUNT,0)<>ISNULL(B.AMOUNT,0))
							  C ON C.MEMO_ID=A.CM_ID'
			PRINT @DTSQL  
			EXEC SP_EXECUTESQL @DTSQL
		END
		
		IF  @CDONOTRESETPOSTEDINAC<>'1' 
		BEGIN
			SET @CSTEP=105
			SET @DTSQL=N'UPDATE A SET POSTEDINAC=0 FROM '+@CTEMPMASTERTABLE+' A  WITH (ROWLOCK) 
						JOIN (SELECT ISNULL(A.CM_ID,B.CM_ID) AS CM_ID FROM 
							  ( SELECT A.CM_ID,A.TAX_METHOD,SUM(TAX_AMOUNT) AS TAX_AMOUNT,SUM(RFNET) AS NET
								FROM CMD01106 A (NOLOCK) JOIN '+@CTEMPMASTERTABLE+' B (NOLOCK) ON A.CM_ID=B.CM_ID
								WHERE '+@CFILTERCONDITION+' GROUP BY A.CM_ID,A.TAX_METHOD) A
							   FULL OUTER JOIN 
							  ( SELECT B.CM_ID,B.TAX_METHOD,SUM(TAX_AMOUNT) AS TAX_AMOUNT,SUM(RFNET) AS NET 
								FROM '+@CTEMPDETAILTABLE+' B (NOLOCK) 
								WHERE '+@CFILTERCONDITION+' GROUP BY B.CM_ID,B.TAX_METHOD)  B ON A.CM_ID=B.CM_ID AND A.TAX_METHOD=B.TAX_METHOD
							   WHERE ISNULL(A.TAX_AMOUNT,0)<>ISNULL(B.TAX_AMOUNT,0) OR ISNULL(A.NET,0)<>ISNULL(B.NET,0))
							  C ON C.CM_ID=A.CM_ID'
			PRINT @DTSQL  
			EXEC SP_EXECUTESQL @DTSQL
		END
	    
    END

LBLMERGE:
	---DELETING EXISTING RECORD IF BILL COMES AGAIN FOR MERGING
	
	--SELECT @CTEMPMASTERTABLE,@CFILTERCONDITION
	IF @BADDMODE=0
		PRINT 'ADDMODE:N'
	ELSE
		PRINT 'ADDMODE:Y'	
	
	IF @BADDMODE=0
	BEGIN	


				
		SET @CSTEP=115
		SET @DTSQL=N'DELETE A FROM PAYMODE_XN_DET A  WITH (ROWLOCK)  JOIN '+@CTEMPMASTERTABLE+' B (NOLOCK) ON A.MEMO_ID=B.CM_ID
					 WHERE '+@CFILTERCONDITION+' AND XN_TYPE=''SLS'''
		PRINT @DTSQL
		EXEC SP_EXECUTESQL @DTSQL

		SET @CSTEP=120
		SET @DTSQL=N'DELETE A FROM IMAGE_XN_DET A  WITH (ROWLOCK)  JOIN '+@CTEMPMASTERTABLE+' B (NOLOCK) ON A.MEMO_ID=B.CM_ID
					 WHERE '+@CFILTERCONDITION+' AND XN_TYPE=''SLS'''
		PRINT @DTSQL
		EXEC SP_EXECUTESQL @DTSQL
		
		SET @CSTEP=122
		SET @DTSQL=N'DELETE A FROM DAILOGFILE A  WITH (ROWLOCK)  JOIN '+@CTEMPMASTERTABLE+' B (NOLOCK) ON A.MEMONO=B.CM_ID
					 WHERE '+@CFILTERCONDITION+' AND MODULENAME=''FRMSALE'''
		PRINT @DTSQL
		EXEC SP_EXECUTESQL @DTSQL
		

		--SET @CSTEP=125
		--SET @DTSQL=N'DELETE A FROM PACK_SLIP_RF A  WITH (ROWLOCK) JOIN '+@CTEMPMASTERTABLE+' B (NOLOCK) ON A.CM_ID=B.CM_ID
		--			 WHERE '+@CFILTERCONDITION
		--PRINT @DTSQL
		--EXEC SP_EXECUTESQL @DTSQL

		--SET @CSTEP=127
		--SET @DTSQL=N'DELETE A FROM PACK_SLIP_RF A  WITH (ROWLOCK) JOIN SLS_PACK_SLIP_RF_MIRROR B (NOLOCK) ON A.PACK_SLIP_ID=B.PACK_SLIP_ID
		--			 WHERE '+@CFILTERCONDITION
		--PRINT @DTSQL
		--EXEC SP_EXECUTESQL @DTSQL
				
		
		SET @CSTEP=130
		SET @DTSQL=N'DELETE A FROM CMD01106  A WITH (ROWLOCK) 
					 JOIN '+@CTEMPMASTERTABLE+' B (NOLOCK) ON A.CM_ID=B.CM_ID		 
					 LEFT OUTER JOIN
					 (SELECT ROW_ID FROM '+@CTEMPDETAILTABLE+' B (NOLOCK) WHERE '+@CFILTERCONDITION+') C ON A.ROW_ID=C.ROW_ID
					 WHERE '+@CFILTERCONDITION+' AND C.ROW_ID IS NULL' 
		PRINT @DTSQL
		EXEC SP_EXECUTESQL @DTSQL
	
	END
	
	---UPDATING TRANSACTION TABLES
	SET @CSTEP=230
	SET @CTABLENAME='IMAGE_XN_DET'
	SET @CTMP_TABLENAME='SLS_IMAGE_XN_DET_MIRROR'
	SET @CKEYFIELD='MEMO_ID'
	
	SET @CFILTERCONDITION2=REPLACE(@CFILTERCONDITION,'CM_ID','MEMO_ID')
	 
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION2,@LUPDATEONLY=0
							  ,@BALWAYSUPDATE=0 
					

	SET @CSTEP=240
	SET @CTABLENAME='CUSTDYM'
	SET @CTMP_TABLENAME='SLS_CUSTDYM_MIRROR'
	SET @CKEYFIELD='CUSTOMER_CODE'
	
	UPDATE SLS_CUSTDYM_MIRROR WITH (ROWLOCK) SET AREA_CODE='0000000' WHERE SLS_MEMO_ID=@CMEMOID 


	SET @CSTEP=242
	UPDATE a SET total_quantity=b.total_quantity FROM SLS_CMM01106_MIRROR a (NOLOCK)
	JOIN (SELECT cm_id,SUM(quantity) as total_quantity FROM SLS_CMD01106_MIRROR (NOLOCK)
		  WHERE cm_id=@CMEMOID  AND VERSION_NO=@NVERSIONNO	GROUP BY cm_id) b
	ON a.cm_id=b.cm_id
	WHERE a.VERSION_NO=@NVERSIONNO AND  ISNULL(a.TOTAL_QUANTITY,0)<>b.total_quantity

	
	SET @CFILTERCONDITIONCUS=REPLACE(@CFILTERCONDITION,'CM_ID','SLS_MEMO_ID')
	
	SET @CSTEP=245
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITIONCUS,@LUPDATEONLY=0
							  ,@BALWAYSUPDATE=0,@BUPDATEXNS=0
							  

	SET @CSTEP=250
	SET @CTABLENAME='CMM01106'
	SET @CTMP_TABLENAME='SLS_CMM01106_MIRROR'
	SET @CKEYFIELD='CM_ID'
	
	SET @DTSQL = N'UPDATE '+@CSOURCEDB+@CTMP_TABLENAME+'  WITH (ROWLOCK)  SET CM_DT = CONVERT(DATETIME,CONVERT(VARCHAR(10),CM_DT,120)),
				   SHIFT_ID=(CASE WHEN SHIFT_ID='''' THEN NULL ELSE SHIFT_ID END),
				   PARTY_STATE_CODE=(CASE WHEN ISNULL(PARTY_STATE_CODE,'''')='''' THEN ''00'' ELSE PARTY_STATE_CODE END),
				   OTHER_CHARGES_HSN_CODE=(CASE WHEN OTHER_CHARGES_HSN_CODE='''' THEN ''0000000000'' ELSE OTHER_CHARGES_HSN_CODE END)
				   WHERE CM_ID='''+@CMEMOID+''''
	PRINT @DTSQL
	EXEC SP_EXECUTESQL @DTSQL
	
	SET @CSTEP=255
					
    UPDATE A SET GST_ROUND_OFF=(NET_AMOUNT-(ISNULL(OTHER_CHARGES_TAXABLE_VALUE,0)+
				ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_SGST_AMOUNT,0)+
				ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)+ROUND_OFF+B.NET_AMOUNT_GST))
    FROM SLS_CMM01106_MIRROR A (NOLOCK)  
    JOIN (SELECT A.CM_ID,SUM(XN_VALUE_WITHOUT_GST+IGST_AMOUNT+CGST_AMOUNT+SGST_AMOUNT+TAX_AMOUNT) AS NET_AMOUNT_GST  
       FROM SLS_CMD01106_MIRROR A (NOLOCK)  
       WHERE CM_ID=@CMEMOID 
       GROUP BY A.CM_ID  
      ) B ON A.CM_ID=B.CM_ID   
    WHERE A.CM_ID=@CMEMOID  AND CM_DT>='2017-07-01'  
      
	
	SET @CSTEP=260
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
							  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1 
							  
	SET @CTABLENAME='CMD01106'
	SET @CTMP_TABLENAME='SLS_CMD01106_MIRROR'
	SET @CKEYFIELD='ROW_ID'
	 
	SET @CSTEP=270

	SET @DTSQL = N'UPDATE '+@CSOURCEDB+@CTMP_TABLENAME+'  WITH (ROWLOCK)  SET
				   HSN_CODE=(CASE WHEN ISNULL(HSN_CODE,'''')='''' THEN ''0000000000'' ELSE HSN_CODE END)				   
				   WHERE CM_ID='''+@CMEMOID+''''
	PRINT @DTSQL
	EXEC SP_EXECUTESQL @DTSQL
	
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
							  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1 
							  
	SET @CTABLENAME='DAILOGFILE'
	SET @CTMP_TABLENAME='SLS_DAILOGFILE_MIRROR'
	SET @CKEYFIELD='MEMONO'
	 
	SET @CSTEP=273
	SET @CFILTERCONDITION3=REPLACE(@CFILTERCONDITION,'CM_ID','MEMONO')
	
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION3,@LUPDATEONLY=0
							  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1 	


	SET @CSTEP=275
	SET @CTABLENAME='PAYMODE_XN_DET'
	SET @CTMP_TABLENAME='SLS_PAYMODE_XN_DET_MIRROR'
	SET @CKEYFIELD='MEMO_ID'
	
	SET @CFILTERCONDITION2=REPLACE(@CFILTERCONDITION,'CM_ID','MEMO_ID')+' AND B.XN_TYPE=''SLS'''
	
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='XN_TYPE',@CKEYFIELD3=''
							  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION2,@LUPDATEONLY=0
							  ,@BALWAYSUPDATE=0,@BUPDATEXNS=1



	SET @CSTEP=285
	SET @CTABLENAME='CMD_CONS'
	SET @CTMP_TABLENAME='SLS_CMD_CONS_MIRROR'
	SET @CKEYFIELD='CM_ID'
	
	IF @bAddmode=0
	BEGIN
		SET @DTSQL= N'DELETE A FROM  CMD_CONS A WITH (ROWLOCK) JOIN '+@CTEMPMASTERTABLE+' B (NOLOCK) ON 
					  A.CM_ID=B.CM_ID WHERE '+@CFILTERCONDITION
		EXEC SP_EXECUTESQL @DTSQL	
	END
	SET @CSTEP=290
	
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
							  ,@BALWAYSUPDATE=0,@BUPDATEXNS=1


	SET @CSTEP=300	
	SET @CTABLENAME='CMD_MANUALBILL_ERRORS'
	SET @CTMP_TABLENAME='SLS_CMD_MANUALBILL_ERRORS_MIRROR'
	SET @CKEYFIELD='CMD_ROW_ID'
	
	IF @BADDMODE=0
	BEGIN	
		SET @CSTEP=310
		
		SET @DTSQL=N'DELETE A FROM CMD_MANUALBILL_ERRORS A WITH (ROWLOCK) JOIN SLS_CMD01106_MIRROR B (NOLOCK) ON A.CMD_ROW_ID = B.ROW_ID
					 WHERE '+@CFILTERCONDITION+' AND A.APPROVED = 0'
		
		EXEC SP_EXECUTESQL 	@DTSQL
		
		SET @CSTEP=320
		SET @DTSQL=N'DELETE A FROM '+@CSOURCEDB+@CTMP_TABLENAME+' A WITH (ROWLOCK)
					 JOIN CMD_MANUALBILL_ERRORS C (NOLOCK) ON A.CMD_ROW_ID=C.CMD_ROW_ID AND A.ERROR_CODE=C.ERROR_CODE 
					 JOIN SLS_CMD01106_MIRROR B (NOLOCK) ON A.CMD_ROW_ID = B.ROW_ID
					 WHERE '+@CFILTERCONDITION+' AND C.APPROVED=1'
		EXEC SP_EXECUTESQL 	@DTSQL		 
	END
	    
    SET @CSTEP=330
    SELECT @CFILTERCONDITION2=REPLACE(@CFILTERCONDITION,'B.','C.')+' AND B.APPROVED=0',
		   @CJOINSTR=' JOIN SLS_CMD01106_MIRROR C ON C.ROW_ID=B.CMD_ROW_ID'	
    
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='ERROR_CODE',@CKEYFIELD3=''
							  ,@LINSERTONLY=0,@CFILTERCONDITION=@CFILTERCONDITION2,@LUPDATEONLY=0
							  ,@BALWAYSUPDATE=1,@CJOINSTR=@CJOINSTR 
    

   
    
    IF ISNULL(@BMANUALBILL,0)=1
    BEGIN
		SET @CSTEP=340
		DECLARE @CMANUALBILLCMDROWID VARCHAR(50)
		
		SET @CMANUALBILLCMDROWID=''
		
		SELECT TOP 1 @CMANUALBILLCMDROWID=CMD_ROW_ID FROM CMD_MANUALBILL_ERRORS A
		JOIN CMD01106 B ON A.CMD_ROW_ID=B.ROW_ID WHERE CM_ID=@CMEMOID
		
		IF ISNULL(@CMANUALBILLCMDROWID,'')=''
		BEGIN
			 INSERT CMD_MANUALBILL_ERRORS WITH (ROWLOCK)(CMD_ROW_ID, ERROR_CODE, APPROVED, APPROVED_ON, USER_CODE, REMARKS )
			 SELECT TOP 1 ROW_ID AS CMD_ROW_ID,'09' AS  ERROR_CODE,0 AS  APPROVED,'' AS APPROVED_ON,
			 '0000000' AS USER_CODE,'INSERTED BY MERGING' AS REMARKS FROM CMD01106 WITH (INDEX(IND_CMD01106_CMID),NOLOCK) WHERE CM_ID=@CMEMOID
		END
    END
    
    SET @CSTEP=345
    
	SET @CTABLENAME='COUPON_REDEMPTION_INFO'
	SET @CTMP_TABLENAME='SLS_COUPON_REDEMPTION_INFO_MIRROR'
	
    SET @DTSQL= N'DELETE A FROM  COUPON_REDEMPTION_INFO A WITH (ROWLOCK) JOIN '+@CTEMPMASTERTABLE+' B (NOLOCK) ON 
				  A.CM_ID=B.CM_ID WHERE '+@CFILTERCONDITION
	EXEC SP_EXECUTESQL @DTSQL
	
	SET @CKEYFIELD='ROW_ID'
	
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
							  ,@BALWAYSUPDATE=1 					  
	

	 DECLARE @CPACK_SLIP_FILTERCONDITION VARCHAR(100)
	 SET @CPACK_SLIP_FILTERCONDITION = ' B.REF_CM_ID='''+@CMEMOID+''' AND B.VERSION_NO='+LTRIM(RTRIM(STR(@NVERSIONNO)))
		

	SET @CSTEP=350
	SET @CTABLENAME='RPS_MST'
	SET @CTMP_TABLENAME='SLS_RPS_MST_MIRROR'
	SET @CKEYFIELD='CM_ID'
	
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=1,@CFILTERCONDITION=@CPACK_SLIP_FILTERCONDITION,@LUPDATEONLY=0
							  ,@BALWAYSUPDATE=0 							  
	
	IF @BADDMODE=0
	BEGIN	
	  	SET @CSTEP=360
		SET @DTSQL=N'DELETE A FROM GV_MST_REDEMPTION A WITH (ROWLOCK) JOIN '+@CTEMPMASTERTABLE+' B (NOLOCK) ON 
					 A.REDEMPTION_CM_ID=B.CM_ID WHERE '+@CFILTERCONDITION
		EXEC SP_EXECUTESQL @DTSQL					 

		
		SET @DTSQL=N'UPDATE A SET REDEMPTION_CM_ID=C.MEMO_ID,REDEEMED_AT_DEPT_ID=LEFT(C.MEMO_ID,2)
		FROM GV_MST_REDEMPTION A WITH (ROWLOCK) 
		JOIN PAYMODE_XN_DET C (NOLOCK) ON C.GV_SRNO=A.GV_SRNO
		JOIN '+@CTEMPMASTERTABLE+' B (NOLOCK) ON B.CM_ID=C.MEMO_ID 
		WHERE '+@CFILTERCONDITION+' AND C.XN_TYPE=''SLS'' 
		AND (REDEEMED_AT_DEPT_ID=LEFT(C.MEMO_ID,2) OR ISNULL(REDEMPTION_CM_ID,'''')='''')'
		
		EXEC SP_EXECUTESQL @DTSQL
	END	

	SET @CSTEP=370
	SET @DTSQL=N'INSERT GV_MST_REDEMPTION  WITH (ROWLOCK) ( GV_SRNO, REDEEMED_AT_DEPT_ID, REDEEMED_ON, REDEMPTION_CM_ID ) 
	SELECT A.GV_SRNO,LEFT(A.MEMO_ID,2) AS REDEEMED_AT_DEPT_ID,A.LAST_UPDATE AS  REDEEMED_ON,
	A.MEMO_ID AS REDEMPTION_CM_ID 
	FROM PAYMODE_XN_DET A (NOLOCK) 
	LEFT OUTER JOIN GV_MST_REDEMPTION C (NOLOCK) ON C.REDEEMED_AT_DEPT_ID=LEFT(A.MEMO_ID,2) AND C.GV_SRNO=A.GV_SRNO
	JOIN '+@CTEMPMASTERTABLE+' B (NOLOCK) ON B.CM_ID=A.MEMO_ID
	WHERE '+@CFILTERCONDITION+' AND A.XN_TYPE=''SLS'' AND C.GV_SRNO IS NULL
	AND A.PAYMODE_CODE=''GVC0001'' AND ISNULL(A.GV_SRNO,'''')<>'''''
	
	PRINT @DTSQL
	EXEC SP_EXECUTESQL @DTSQL
	
	SELECT @CFILTERCONDITION2=REPLACE(@CFILTERCONDITION,'CM_ID','REDEMPTION_CM_ID')
	SET @CSTEP=375
	SET @CTABLENAME='GV_MST_REDEMPTION'
	SET @CTMP_TABLENAME='SLS_GV_MST_REDEMPTION_MIRROR'	
	SET @CKEYFIELD='REDEMPTION_CM_ID'
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='GV_SRNO',@CKEYFIELD3=''
							  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION2,@LUPDATEONLY=0
							  ,@BALWAYSUPDATE=0 							  
							  
	------ INSERT ENTRY IN ONLINE CN TABLE FOR THE CREDIT NOTE ISSUE TO BE REFERRED WHILE 
	------ REDEMPTION AT POS 
	IF @CENABLEONLINECNREDEMPTION='1'
	BEGIN
		SET @CSTEP=378
				
		DECLARE @CCNISSUEPAYMODECODE CHAR(7),@CCNADJPAYMODECODE CHAR(7)
			
		SELECT TOP 1 @CCNISSUEPAYMODECODE=PAYMODE_CODE 
		FROM SLS_PAYMODE_XN_DET_MIRROR A (NOLOCK)
		JOIN SLS_CMM01106_MIRROR B (NOLOCK) ON A.MEMO_ID=B.CM_ID
		WHERE MEMO_ID=@CMEMOID AND A.VERSION_NO=@NVERSIONNO AND PAYMODE_CODE='0000004' AND AMOUNT<0 
		AND SUBSTRING(B.CM_NO,5,1)='N' AND B.CANCELLED=0
		
		IF ISNULL(@CCNISSUEPAYMODECODE,'')<>''
		BEGIN
			IF NOT EXISTS (SELECT TOP 1 CN_ID FROM ONLINE_CN_REDEEMPTION (NOLOCK) WHERE CN_ID=@CMEMOID)
				INSERT ONLINE_CN_REDEEMPTION WITH (ROWLOCK) (CN_ID,LAST_UPDATED)
				SELECT @CMEMOID AS CN_ID,GETDATE() AS LAST_UPDATED
		END		
				
		SELECT TOP 1 @CCNADJPAYMODECODE=PAYMODE_CODE 
		FROM SLS_PAYMODE_XN_DET_MIRROR A (NOLOCK)
		JOIN SLS_CMM01106_MIRROR B (NOLOCK) ON A.MEMO_ID=B.CM_ID AND A.VERSION_NO=B.VERSION_NO
		WHERE MEMO_ID=@CMEMOID AND A.VERSION_NO=@NVERSIONNO AND PAYMODE_CODE='0000001' 
		AND B.CANCELLED=0
		
		IF ISNULL(@CCNADJPAYMODECODE,'')<>''
			UPDATE A SET REDEEMPTION_BILL_NO=C.CM_NO,REDEEMPTION_BILL_DATE=C.CM_DT
			FROM ONLINE_CN_REDEEMPTION A  WITH (ROWLOCK) 
			JOIN SLS_PAYMODE_XN_DET_MIRROR B (NOLOCK) ON A.CN_ID=B.ADJ_MEMO_ID
			JOIN SLS_CMM01106_MIRROR C  (NOLOCK) ON C.CM_ID=B.MEMO_ID AND C.VERSION_NO=B.VERSION_NO
			WHERE B.MEMO_ID=@CMEMOID AND B.VERSION_NO=@NVERSIONNO
			AND B.PAYMODE_CODE='0000001' AND ISNULL(A.REDEEMPTION_BILL_NO,'')=''
		
	END
	
	
IF @CSHOWLIVESALE=1  AND @DCM_DT =@CSERVERDATE
BEGIN
     IF  @BADDMODE=0
	BEGIN

		IF EXISTS(SELECT TOP 1 'U' FROM POS_NRV WHERE DEPT_ID=@CLOCID) 
		BEGIN
			  UPDATE A SET NRV=NRV-@BTOTAL_AMOUNT FROM POS_NRV A WHERE DEPT_ID=@CLOCID
			  UPDATE A SET NRV=NRV+@TOTAL_AMOUNT FROM POS_NRV A WHERE DEPT_ID=@CLOCID
		      
		END
	END
	
	
	IF EXISTS(SELECT TOP 1 'U' FROM POS_NRV WHERE DEPT_ID=@CLOCID) AND @BADDMODE=1
	    UPDATE A SET NRV=NRV+@TOTAL_AMOUNT FROM POS_NRV A WHERE DEPT_ID=@CLOCID
	
	IF NOT EXISTS(SELECT TOP 1 'U' FROM POS_NRV WHERE DEPT_ID=@CLOCID) AND @BADDMODE=1 
	    INSERT INTO POS_NRV(DEPT_ID,NRV) SELECT @CLOCID,@TOTAL_AMOUNT 
	    
END	
	
	---EXECUTE THE VALIDATION PROCEDURE

	SET @CSTEP=385
	IF EXISTS (SELECT TOP 1 'U' FROM CMM01106 WHERE CM_ID =@CMEMOID AND CANCELLED =0)
	BEGIN
	   EXEC VALIDATEXN_MIRROR_SLS_BATCH_SINGLE @CMEMOID
	END
    
    SELECT TOP 1 @CVALIDATIONERRMSG=ERRMSG FROM MIRROR_SYNCH_LOG (NOLOCK) WHERE XN_TYPE='SLS' AND MEMO_ID=@CMEMOID
    
    SET @CERRMSG=ISNULL(@CVALIDATIONERRMSG,'')
    
	SET @CSTEP=390
	
	SET @NUPDATEMODE=(CASE WHEN @BADDMODE=1 THEN 1 ELSE 2 END)

	SET @CSTEP=400 

	EXEC SP3S_MERGE_LOCPMT  
	@cTempTable='SLS_PMT01106_MIRROR',  
	@cMemoIdCol='SLS_MEMO_ID',  
	@cMemoId =@CMEMOID
		
		
	IF ISNULL(@CERRMSG,'')=''
	BEGIN
		COMMIT

		SET @nMemoUpdated=@nMemoUpdated+1
	END
	ELSE
		GOTO EXIT_PROC	

	DELETE FROM SLS_PAYMODE_XN_DET_MIRROR WITH (ROWLOCK)  WHERE MEMO_ID=@CMEMOID AND VERSION_NO<=@NVERSIONNO AND XN_TYPE='SLS'
	
	DELETE A FROM SLS_COUPON_REDEMPTION_INFO_MIRROR A  WITH (ROWLOCK) WHERE CM_ID=@CMEMOID AND A.VERSION_NO<=@NVERSIONNO

	DELETE A FROM SLS_RPS_MST_MIRROR A  WITH (ROWLOCK) WHERE REF_CM_ID=@CMEMOID AND VERSION_NO<=@NVERSIONNO
			
	DELETE A FROM SLS_DAILOGFILE_MIRROR A  WITH (ROWLOCK) WHERE MEMONO=@CMEMOID AND VERSION_NO<=@NVERSIONNO
	
	DELETE A FROM SLS_CMD_MANUALBILL_ERRORS_MIRROR A  WITH (ROWLOCK) JOIN SLS_CMD01106_MIRROR B (NOLOCK) ON A.CMD_ROW_ID=B.ROW_ID
	WHERE B.CM_ID=@CMEMOID AND A.VERSION_NO<=@NVERSIONNO				
	
	DELETE FROM SLS_CUSTDYM_MIRROR  WITH (ROWLOCK) WHERE SLS_MEMO_ID=@CMEMOID AND VERSION_NO<=@NVERSIONNO

	DELETE FROM SLS_CMD01106_MIRROR WITH (ROWLOCK) WHERE CM_ID=@CMEMOID AND VERSION_NO<=@NVERSIONNO

	DELETE FROM SLS_CMM01106_MIRROR WITH (ROWLOCK) WHERE CM_ID=@CMEMOID AND VERSION_NO<=@NVERSIONNO
	
	DELETE FROM SLS_CMD_CONS_MIRROR WHERE CM_ID=@CMEMOID AND VERSION_NO<=@NVERSIONNO
	DELETE FROM SLS_PMT01106_MIRROR WHERE SLS_MEMO_ID=@CMEMOID 
			
	GOTO LBLSTART	
END TRY

BEGIN CATCH
	SET @CERRMSG='P:SP_SYNCH_MIRRORDATA_SLS_SINGLE, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO EXIT_PROC
END CATCH

EXIT_PROC:

	--SELECT @CERRMSG,@BSERIESMISMATCHFOUND
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRMSG,'')='' AND @BSERIESMISMATCHFOUND<>1
			COMMIT
		ELSE
			ROLLBACK
    END
	
	IF ISNULL(@CVALIDATIONERRMSG,'')<>''
	BEGIN

		 DELETE FROM #TMPXNSREQ
		 
		 IF NOT EXISTS (SELECT TOP 1 XN_ID FROM XNS_REQ_FROM_LOC WHERE XN_TYPE='SLS' AND XN_ID=@CMEMOID)
			 INSERT XNS_REQ_FROM_LOC  WITH (ROWLOCK) ( XN_TYPE, XN_ID,MODE,DEPT_ID, REMARKS ) 
			 SELECT 'SLS' AS XN_TYPE,@CMEMOID AS XN_ID,0 AS  MODE,LEFT(@CMEMOID,2) AS DEPT_ID,@CVALIDATIONERRMSG AS REMARKS
		
	END
	
	ELSE
	IF @BSERIESMISMATCHFOUND=1
	BEGIN
		DECLARE @CSERIESERRMSG VARCHAR(MAX)
		
		IF OBJECT_ID('TEMPDB..#TMISSINGDATA','U') IS NOT NULL
			DROP TABLE #TMISSINGDATA
		
		SELECT CM_ID,CONVERT(VARCHAR(MAX),'') AS ERRMSG INTO #TMISSINGDATA FROM CMM01106 WHERE 1=2
								
		--EXEC SP3S_MIRROR_GETMISSINGSERIES 'SLS',@CLOCID,0,@CFIRSTMEMONO
		---- REMOVED THE CHECK OF COMPLETE SERIES AS TOLD BY SIR ON 22-07-2017
		---- WE SHOULD CHECK FOR LAST MEMO NO ONLY
		SET @CPREVMEMOID = @CLOCID+@CFINYEAR+REPLICATE('0',22-@NMEMONOLEN-7) +@CPREVMEMONO
		
		
		
		INSERT #TMISSINGDATA (CM_ID,ERRMSG)
		SELECT @CPREVMEMOID,''
						 
		IF EXISTS (SELECT TOP 1 * FROM @TMISSINGDATA WHERE ERRMSG<>'')
			SELECT TOP 1 @CSERIESERRMSG=ERRMSG FROM @TMISSINGDATA WHERE ERRMSG<>''	
		
		IF ISNULL(@CSERIESERRMSG,'')=''  
		BEGIN
			DELETE FROM #TMPXNSREQ
			INSERT #TMPXNSREQ (XN_TYPE, XN_ID,MODE,DEPT_ID, REMARKS)	   
			SELECT 'SLS' AS XN_TYPE,CM_ID AS XN_ID,0 AS MODE,@CLOCID AS DEPT_ID,'SERIES MISMATCH' AS REMARKS
			FROM #TMISSINGDATA A 

			INSERT XNS_REQ_FROM_LOC ( XN_TYPE, XN_ID,MODE,DEPT_ID, REMARKS ) 
			SELECT DISTINCT A.XN_TYPE, A.XN_ID,A.MODE,A.DEPT_ID, A.REMARKS
			FROM #TMPXNSREQ A 
			LEFT OUTER JOIN XNS_REQ_FROM_LOC B ON A.DEPT_ID=B.DEPT_ID AND A.XN_ID=B.XN_ID AND A.XN_TYPE=B.XN_TYPE 
			LEFT OUTER JOIN SLS_CMM01106_MIRROR C ON C.CM_ID=A.XN_ID
			WHERE B.XN_ID IS NULL AND C.CM_ID IS NULL
			
			
			--select 	'check xnsreq',* from XNS_REQ_FROM_LOC
				
		END
			
		ELSE
			SET @CERRMSG=@CSERIESERRMSG	
	END
	
	IF ISNULL(@CERRMSG,'')='' OR ISNULL(@CVALIDATIONERRMSG,'')<>''
	BEGIN
		DELETE FROM SLS_PAYMODE_XN_DET_MIRROR WHERE MEMO_ID=@CMEMOID AND VERSION_NO<=@NVERSIONNO AND XN_TYPE='SLS'
		
		DELETE A FROM SLS_COUPON_REDEMPTION_INFO_MIRROR A WHERE CM_ID=@CMEMOID AND A.VERSION_NO<=@NVERSIONNO

		DELETE A FROM SLS_RPS_MST_MIRROR A WHERE REF_CM_ID=@CMEMOID AND VERSION_NO<=@NVERSIONNO
				
		DELETE A FROM SLS_DAILOGFILE_MIRROR A WHERE MEMONO=@CMEMOID AND VERSION_NO<=@NVERSIONNO
		
		DELETE A FROM SLS_CMD_MANUALBILL_ERRORS_MIRROR A JOIN SLS_CMD01106_MIRROR B ON A.CMD_ROW_ID=B.ROW_ID
		WHERE B.CM_ID=@CMEMOID AND A.VERSION_NO<=@NVERSIONNO				
		
		DELETE FROM SLS_CUSTDYM_MIRROR WHERE SLS_MEMO_ID=@CMEMOID AND VERSION_NO<=@NVERSIONNO

		DELETE FROM SLS_CMD01106_MIRROR WHERE CM_ID=@CMEMOID AND VERSION_NO<=@NVERSIONNO

		DELETE FROM SLS_CMM01106_MIRROR WHERE CM_ID=@CMEMOID AND VERSION_NO<=@NVERSIONNO
		DELETE FROM SLS_CMD_CONS_MIRROR WHERE CM_ID=@CMEMOID AND VERSION_NO<=@NVERSIONNO
		DELETE FROM SLS_PMT01106_MIRROR WHERE SLS_MEMO_ID=@CMEMOID
		
	END
	
		
    IF ISNULL(@CERRMSG,'')<>'' AND ISNULL(@CREQMEMOID,'')=''
		SET @CERRMSG=(CASE WHEN ISNULL(@CMEMOID,'')<>'' THEN 'MEMO ID :'+@CMEMOID ELSE '' END)+@CERRMSG
	
END	
---END OF PROCEDURE - SP_SYNCH_MIRRORDATA_SLS_SINGLE
