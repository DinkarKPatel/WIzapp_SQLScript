CREATE PROCEDURE SP_CHK_TABLELIST
@SOURCEDB VARCHAR(100),
@MERGEDB VARCHAR(100),
@XNTYPE VARCHAR(50),
@MEMOID VARCHAR(100),
@ERRMSG VARCHAR(500) OUTPUT
AS
BEGIN
 BEGIN TRY
	DECLARE @QRY NVARCHAR(MAX),@T_NAME VARCHAR(500),@R_COUNT INT ,@TEMP_COUNT INT 
	DECLARE @TEMP_TL TABLE (T_NAME VARCHAR(500),R_COUNT INT )
	SET @ERRMSG =''
	
	SET @MEMOID = REPLACE(@MEMOID,'-','_')
	SET @QRY = N'SELECT TMP_TABLENAME AS T_NAME ,RECORD_COUNT AS R_COUNT FROM 
				'+@SOURCEDB+'[TMP_'+@XNTYPE+'_XNSTABLELIST_'+@MEMOID+']'
	PRINT @QRY
	INSERT INTO @TEMP_TL (T_NAME,R_COUNT)
	EXEC SP_EXECUTESQL @QRY
	
	
	IF CURSOR_STATUS('GLOBAL','CUR_TABLE_LIST') IN (0,1)
	BEGIN
		CLOSE CUR_TABLE_LIST
		DEALLOCATE CUR_TABLE_LIST
	END
	
	DECLARE CUR_TABLE_LIST CURSOR FOR SELECT T_NAME,R_COUNT FROM @TEMP_TL
	OPEN CUR_TABLE_LIST
	FETCH NEXT FROM CUR_TABLE_LIST INTO @T_NAME,@R_COUNT
	WHILE @@FETCH_STATUS =0
	BEGIN
		
		IF OBJECT_ID (@SOURCEDB+@T_NAME,'U') IS NOT NULL
		BEGIN
			SET @QRY = N' SELECT @TEMP_COUNT = COUNT(*) FROM '+@SOURCEDB+@T_NAME
			PRINT @QRY
			EXEC SP_EXECUTESQL @QRY,N'@TEMP_COUNT INT OUTPUT',@TEMP_COUNT OUTPUT
			IF ISNULL(@R_COUNT,0) <> ISNULL(@TEMP_COUNT,0)
				SET @ERRMSG = @ERRMSG + ' FOUND MISMATCH DATA FOR TEMP TABLE ['+ISNULL(@T_NAME,'')+'] '    
		END 
		ELSE
		BEGIN
			SET @ERRMSG = @ERRMSG + ' NOT FOUND TEMP TABLE ['+ISNULL(@T_NAME,'')+'] '
		END
		FETCH NEXT FROM CUR_TABLE_LIST INTO @T_NAME,@R_COUNT	
	END
	CLOSE CUR_TABLE_LIST
	DEALLOCATE CUR_TABLE_LIST
 END TRY
 BEGIN CATCH
	SET @ERRMSG = @ERRMSG + '  ' + ERROR_MESSAGE()
 END CATCH	 
END
