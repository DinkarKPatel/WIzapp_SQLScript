CREATE PROCEDURE VALIDATE_PPC_BUYER_ORDER_BEFORESAVE  
 @CXNID VARCHAR(50),   
 @NUPDATEMODE INT,
 @NSPID	INT=0,
 @CERRORMSG VARCHAR(200) OUTPUT  
--  --WITH ENCRYPTION
   
AS  
BEGIN  
	 
	   IF OBJECT_ID('TEMPDB..#TMPORDER','U') IS NOT NULL
	      DROP TABLE #TMPORDER
	  	 
		SELECT A.ORDER_ID, B.ROW_ID, A.BILL_NO,B.ARTICLE_CODE ,B.PARA1_CODE,B.SIZEGROUP_CODE,B.PARA3_CODE,B.QUANTITY 
		INTO #TMPORDER
		FROM PPC_BUYER_ORDER_MST A  
		JOIN PPC_BUYER_ORDER_DET B ON A.ORDER_ID=B.ORDER_ID
		JOIN
		(
		 SELECT A.BO_DET_ROW_ID  
		 FROM PPC_FGBCG_DET A
		 JOIN PPC_FGBCG_MST B ON A.MEMO_ID =B.MEMO_ID 
		 WHERE B.CANCELLED =0
		 GROUP BY A.BO_DET_ROW_ID
		) C ON C.BO_DET_ROW_ID=B.ROW_ID
		LEFT OUTER JOIN
		(
		  SELECT A.ORDER_ID, B.ROW_ID, A.BILL_NO,B.ARTICLE_CODE ,B.PARA1_CODE,B.SIZEGROUP_CODE,B.PARA3_CODE,B.QUANTITY 
		  FROM WSLORD_PPC_BUYER_ORDER_MST_UPLOAD A  
		  JOIN WSLORD_PPC_BUYER_ORDER_DET_UPLOAD B ON A.ORDER_ID=B.ORDER_ID AND A.SP_ID =B.SP_ID 
		  WHERE A.SP_ID =LTRIM(RTRIM(STR(@NSPID)))
		) D ON 
		A.ORDER_ID=D.ORDER_ID 
		AND B.ROW_ID=D.ROW_ID 
		AND A.BILL_NO=D.BILL_NO 
		AND B.ARTICLE_CODE =D.ARTICLE_CODE 
		AND B.PARA1_CODE=D.PARA1_CODE 
		AND B.SIZEGROUP_CODE=D.SIZEGROUP_CODE
		AND B.PARA3_CODE=D.PARA3_CODE
		AND B.QUANTITY =D.QUANTITY 
		WHERE A.ORDER_ID=@CXNID AND  D.ORDER_ID IS NULL

  IF EXISTS ( SELECT TOP 1 'U' FROM #TMPORDER A )
  BEGIN

        SET @CERRORMSG='BARCODE HAS BEEN GENERATED.....CAN NOT CHANGE'  
		RETURN  
  END 
  
	  
   IF OBJECT_ID('TEMPDB..#TMPPARA2','U') IS NOT NULL
	    DROP TABLE #TMPPARA2
	      
	SELECT A.ORDER_ID, DET.ROW_ID ,DET.PARA2_CODE ,DET.QUANTITY
	 INTO #TMPPARA2
	FROM PPC_BUYER_ORDER_MST A  
	JOIN PPC_BUYER_ORDER_DET B ON A.ORDER_ID=B.ORDER_ID
	JOIN PPC_BUYER_ORDER_SUB_DET DET ON B.ROW_ID=DET.REF_ROW_ID 
	JOIN
	(
	 SELECT A.BO_DET_ROW_ID  
	 FROM PPC_FGBCG_DET A
	 JOIN PPC_FGBCG_MST B ON A.MEMO_ID =B.MEMO_ID 
	 WHERE B.CANCELLED =0
	 GROUP BY A.BO_DET_ROW_ID
	) C ON C.BO_DET_ROW_ID=B.ROW_ID
	LEFT OUTER JOIN
	(
	  SELECT A.ORDER_ID, C.ROW_ID ,C.PARA2_CODE ,C.QUANTITY
	  FROM WSLORD_PPC_BUYER_ORDER_MST_UPLOAD A  
	  JOIN WSLORD_PPC_BUYER_ORDER_DET_UPLOAD B ON A.ORDER_ID=B.ORDER_ID AND A.SP_ID =B.SP_ID 
	  JOIN WSLORD_PPC_BUYER_ORDER_SUB_DET_UPLOAD C ON B.ROW_ID =C.REF_ROW_ID  AND A.SP_ID =B.SP_ID 
	  WHERE A.SP_ID =LTRIM(RTRIM(STR(@NSPID)))
	) D ON 
	A.ORDER_ID=D.ORDER_ID 
	AND B.ROW_ID=D.ROW_ID 
	AND B.QUANTITY =D.QUANTITY 
	WHERE A.ORDER_ID=@CXNID AND  D.ORDER_ID IS NULL
   
   
  IF EXISTS ( SELECT TOP 1 'U' FROM #TMPPARA2 A )
  BEGIN

        SET @CERRORMSG='QUANTITY OF RATIO CAN NOT BE CHANGED.....PLEASE CHECK'  
		RETURN  
  END 
  		  
  
   IF EXISTS( SELECT TOP 1 'U' FROM WSLORD_PPC_BUYER_ORDER_MST_UPLOAD A
      JOIN PPC_BUYER_ORDER_MST B ON A.BILL_NO =B.BILL_NO 
      WHERE A.SP_ID =LTRIM(RTRIM(STR(@NSPID))) AND B.CANCELLED=0 AND A.ORDER_ID<>B.ORDER_ID )
   BEGIN
       SET @CERRORMSG = ' DUPLICATE BILL NO FOUND PLEASE CHECK....'
	   GOTO END_PROC
   END
   
   
   
   	IF OBJECT_ID('TEMPDB..#TMPJOBS','U') IS NOT NULL
	      DROP TABLE #TMPJOBS
	  	 
		SELECT A.ORDER_ID, B.ROW_ID, A.BILL_NO,B.ARTICLE_CODE ,B.PARA1_CODE,B.SIZEGROUP_CODE,B.PARA3_CODE,B.QUANTITY 
		INTO #TMPJOBS
		FROM PPC_BUYER_ORDER_MST A  
		JOIN PPC_BUYER_ORDER_DET B ON A.ORDER_ID=B.ORDER_ID
		JOIN
		(
		 SELECT A.REF_ROW_ID  
		 FROM PPC_BO_ART_JOBS A
		 GROUP BY A.REF_ROW_ID
		) C ON C.REF_ROW_ID=B.ROW_ID
		LEFT OUTER JOIN
		(
		  SELECT B.ROW_ID  
		  FROM WSLORD_PPC_BUYER_ORDER_MST_UPLOAD A  
		  JOIN WSLORD_PPC_BUYER_ORDER_DET_UPLOAD B ON A.ORDER_ID=B.ORDER_ID AND A.SP_ID =B.SP_ID 
		  WHERE A.SP_ID =LTRIM(RTRIM(STR(@NSPID)))
		) D ON  B.ROW_ID=D.ROW_ID 
		WHERE A.ORDER_ID=@CXNID AND  D.ROW_ID IS NULL

	  IF EXISTS ( SELECT TOP 1 'U' FROM #TMPJOBS A )
	  BEGIN

			SET @CERRORMSG='JOB HAS ASSIGN.....CAN NOT CHANGE'  
			RETURN  
	  END
	  
	   	IF OBJECT_ID('TEMPDB..#TMPSKU','U') IS NOT NULL
	      DROP TABLE #TMPSKU
	  	 
		SELECT A.ORDER_ID, B.ROW_ID, A.BILL_NO,B.ARTICLE_CODE ,B.PARA1_CODE,B.SIZEGROUP_CODE,B.PARA3_CODE,B.QUANTITY 
		INTO #TMPSKU
		FROM PPC_BUYER_ORDER_MST A  
		JOIN PPC_BUYER_ORDER_DET B ON A.ORDER_ID=B.ORDER_ID
		JOIN
		(
		 SELECT A.REF_ROW_ID  
		 FROM PPC_BO_ART_BOM  A
		 GROUP BY A.REF_ROW_ID
		) C ON C.REF_ROW_ID=B.ROW_ID
		LEFT OUTER JOIN
		(
		  SELECT B.ROW_ID  
		  FROM WSLORD_PPC_BUYER_ORDER_MST_UPLOAD A  
		  JOIN WSLORD_PPC_BUYER_ORDER_DET_UPLOAD B ON A.ORDER_ID=B.ORDER_ID AND A.SP_ID =B.SP_ID 
		  WHERE A.SP_ID =LTRIM(RTRIM(STR(@NSPID)))
		) D ON  B.ROW_ID=D.ROW_ID 
		WHERE A.ORDER_ID=@CXNID AND  D.ROW_ID IS NULL

	  IF EXISTS ( SELECT TOP 1 'U' FROM #TMPSKU A )
	  BEGIN

			SET @CERRORMSG='SKU HAS ASSIGN.....CAN NOT CHANGE'  
			RETURN  
	  END
	  
	  	IF OBJECT_ID('TEMPDB..#TMPJOBCONSUME','U') IS NOT NULL
	      DROP TABLE #TMPJOBCONSUME
	  	 
		SELECT A.ORDER_ID, B.ROW_ID, A.BILL_NO,B.ARTICLE_CODE ,B.PARA1_CODE,B.SIZEGROUP_CODE,B.PARA3_CODE,B.QUANTITY 
		INTO #TMPJOBCONSUME
		FROM PPC_BUYER_ORDER_MST A  
		JOIN PPC_BUYER_ORDER_DET B ON A.ORDER_ID=B.ORDER_ID
		JOIN
		(
		 SELECT A.REF_ROW_ID  
		 FROM PPC_BO_ART_JOBS_CONSUME  A
		 GROUP BY A.REF_ROW_ID
		) C ON C.REF_ROW_ID=B.ROW_ID
		LEFT OUTER JOIN
		(
		  SELECT B.ROW_ID  
		  FROM WSLORD_PPC_BUYER_ORDER_MST_UPLOAD A  
		  JOIN WSLORD_PPC_BUYER_ORDER_DET_UPLOAD B ON A.ORDER_ID=B.ORDER_ID AND A.SP_ID =B.SP_ID 
		  WHERE A.SP_ID =LTRIM(RTRIM(STR(@NSPID)))
		) D ON  B.ROW_ID=D.ROW_ID 
		WHERE A.ORDER_ID=@CXNID AND  D.ROW_ID IS NULL

	  IF EXISTS ( SELECT TOP 1 'U' FROM #TMPSKU A )
	  BEGIN

			SET @CERRORMSG='JOB CONSUME QTY HAS ASSIGN.....CAN NOT CHANGE'  
			RETURN  
	  END
	  
               
END_PROC:  
END  
--*************************************** END OF PROCEDURE VALIDATEXN_TTM
