CREATE PROC SP_ERP_MODULEPROC
(    
	@CQUERYID INT,    
	@CVALUE1 VARCHAR(50) = '',    
	@CVALUE2 VARCHAR(50) = '',    
	@CVALUE3 VARCHAR(50) = '',
	@CVALUE4 VARCHAR(50) = ''    
) 
--WITH ENCRYPTION
AS    
BEGIN    
 
DECLARE @CQUERY NVARCHAR(MAX),
		@CTEMP VARCHAR(100),@cHEAD_CODE VARCHAR(MAX)
 
----------------------    
IF (@CQUERYID = 101)    
BEGIN    
-- AREA MASTER ( CITY LIST )
SET @CQUERY = N'SELECT A.CITY_CODE, A.CITY, B.STATE, C.REGION_NAME  
FROM CITY A 
JOIN [STATE] B ON A.STATE_CODE = B.STATE_CODE  
JOIN REGIONM C ON B.REGION_CODE = C.REGION_CODE  
WHERE A.CITY_CODE <> ''0000000''
ORDER BY C.REGION_NAME, B.STATE,  A.CITY'    
END      
--------------------  
IF (@CQUERYID = 102)
BEGIN    
-- ARTICLE MASTER ( LOOK UP )
SET @CQUERY = N'EXEC SP_ERP_ARTICLELIST ' + @CVALUE1
END      
--------------------  
IF (@CQUERYID = 103)
BEGIN    
-- ARTICLE MASTER ( SUB SECTION ATTRIBUTES )
SET @CQUERY = N'EXEC SP_ERP_SUBSECTIONATTRIBUTES ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 104)
BEGIN    
-- ARTICLE MASTER ( ATTRIBUTES KEYLIST )
SET @CQUERY = N'EXEC SP_ERP_ATTRKEYLIST ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 105)
BEGIN    
-- ARTICLE MASTER ( UOM LIST )
SET @CQUERY = N'EXEC SP_ERP_UOMLIST'
END      
--------------------  
IF (@CQUERYID = 106)
BEGIN    
-- ARTICLE MASTER ( SUB SECTION LIST )
SET @CQUERY = N'EXEC SP_ERP_SUBSECTIONLIST ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 107)
BEGIN    
-- ARTICLE MASTER ( PARA1 LIST )
SET @CQUERY = N'EXEC SP_ERP_PARA1LIST'
END      
--------------------  
IF (@CQUERYID = 108)
BEGIN    
-- ARTICLE MASTER ( PARA2 LIST )
SET @CQUERY = N'EXEC SP_ERP_PARA2LIST'
END      
--------------------  
IF (@CQUERYID = 109)
BEGIN    
-- ARTICLE MASTER ( BINDING )
SET @CQUERY = N'EXEC SP_ERP_ARTICLE_DATABINDING ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 110)
BEGIN    
-- ATTRIBUTE MASTER ( ATTRIBUTE GROUP LIST )
SET @CQUERY = N'SELECT DISTINCT ATTRIBUTE_GROUP FROM ATTRM ORDER BY ATTRIBUTE_GROUP'
END      
--------------------  
IF (@CQUERYID = 111)
BEGIN    
-- ATTRIBUTE MASTER ( SUB-SECTION ATTRIBUTE LIST )
SET @CQUERY = N'SELECT 0 AS ''CHECK'', A.*,C.SECTION_NAME,B.SUB_SECTION_NAME
                            FROM SD_ATTR A
                            JOIN SECTIOND B(NOLOCK) ON A.SUB_SECTION_CODE=B.SUB_SECTION_CODE
                            JOIN SECTIONM C(NOLOCK) ON B.SECTION_CODE=C.SECTION_CODE 
                            WHERE A.ATTRIBUTE_CODE = ''' + @CVALUE1 + ''' ORDER BY B.SUB_SECTION_NAME'
END      
--------------------  
IF (@CQUERYID = 112)
BEGIN    
-- CITY MASTER ( STATE LIST )
SET @CQUERY = N'SELECT A.STATE_CODE  ,A.STATE, B.REGION_NAME
                         FROM STATE  AS A 
                         JOIN REGIONM AS B ON A.REGION_CODE = B.REGION_CODE 
                         WHERE STATE_CODE <> ''0000000'''
END      
--------------------  
IF (@CQUERYID = 113)
BEGIN    
-- COLOR MASTER ( COLOR SET LIST )
SET @CQUERY = N'SELECT DISTINCT PARA1_SET FROM PARA1 WHERE PARA1_CODE <> ''0000000'' ORDER BY PARA1_SET '
END      
--------------------  
IF (@CQUERYID = 114)
BEGIN    
-- SIZE MASTER ( SIZE SET LIST )
SET @CQUERY = N'SELECT DISTINCT PARA2_SET FROM PARA2 WHERE PARA2_CODE <> ''0000000'' ORDER BY PARA2_SET'
END      
--------------------  
IF (@CQUERYID = 115)
BEGIN    
-- STATE MASTER ( REGION LIST )
SET @CQUERY = N'SELECT REGION_CODE, REGION_NAME FROM REGIONM WHERE REGION_CODE <> ''0000000'' ORDER BY REGION_NAME'
END      
--------------------  
IF (@CQUERYID = 116)
BEGIN    
-- SUB SECTION MASTER ( SECTION LIST )
SET @CQUERY = N'SELECT SECTION_CODE, SECTION_NAME FROM SECTIONM 
				WHERE SECTION_CODE <> ''0000000'' AND INACTIVE = 0 ORDER BY SECTION_NAME'
END      
--------------------  
IF (@CQUERYID = 117)
BEGIN    
-- SUB SECTION MASTER ( ATTRIBUTE LIST )
SET @CQUERY = N'SELECT A.ATTRIBUTE_CODE,A.ATTRIBUTE_NAME FROM ATTRM A ORDER BY ATTRIBUTE_NAME'
END      
--------------------  
IF (@CQUERYID = 118)
BEGIN    
-- SUB SECTION MASTER ( SUB SECTION'S ATTRIBUTE LIST )
SET @CQUERY = N'SELECT 0 AS ''CHECK'', B.*,A.ATTRIBUTE_NAME
                            FROM ATTRM A (NOLOCK)
                            JOIN SD_ATTR B ON A.ATTRIBUTE_CODE=B.ATTRIBUTE_CODE                            
                            WHERE B.SUB_SECTION_CODE = ''' + @CVALUE1 + ''' ORDER BY A.ATTRIBUTE_NAME'
END      
--------------------  
IF (@CQUERYID = 119)
BEGIN    
-- SUB SECTION MASTER ( ARTICLE LIST )
SET @CQUERY = N'SELECT ARTICLE_CODE FROM ARTICLE WHERE SUB_SECTION_CODE = ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 120)
BEGIN    
-- JOB WORKER MASTER ( AREA LIST )
SET @CQUERY = N'SELECT A.AREA_CODE , A.AREA_NAME , A.PINCODE , B.CITY , C.STATE FROM AREA A
                            LEFT OUTER JOIN CITY B ON A.CITY_CODE = B.CITY_CODE 
                            LEFT OUTER JOIN STATE C ON B.STATE_CODE = C.STATE_CODE 
                            WHERE AREA_CODE <> ''0000000'''
END      
--------------------  
IF (@CQUERYID = 121)
BEGIN    
-- JOB WORKER MASTER ( LEDGER LIST )
SET @CQUERY = N'SELECT A.AC_NAME, A.AC_CODE, B.HEAD_NAME FROM LM01106 A
                            JOIN HD01106 B ON A.HEAD_CODE = B.HEAD_CODE 
                            ORDER BY B.HEAD_NAME, A.AC_NAME'
END      
--------------------  
IF (@CQUERYID = 122)
BEGIN    
-- JOB WORKER MASTER ( WORKER JOBS LIST )
SET @CQUERY = N'SELECT A.*, B.JOB_NAME  FROM PRD_WORKER_JOBS A
               JOIN JOBS B ON A.JOB_CODE = B.JOB_CODE WHERE WORKER_AC_CODE = ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 123)
BEGIN    
-- JOB WORKER MASTER ( JOB LIST )
SET @CQUERY = N'SELECT * FROM JOBS WHERE JOB_NAME <> '''' ORDER BY JOB_NAME'
END      
--------------------  
IF (@CQUERYID = 124)
BEGIN    
-- JOB WORKER MASTER ( LOOKUP )
SET @CQUERY = N'SELECT WORKER_AC_CODE, WORKER_AC_NAME  FROM PRD_WORKER 
				WHERE WORKER_AC_CODE <> ''0000000000'' ORDER BY WORKER_AC_NAME'
END      
--------------------  
IF (@CQUERYID = 125)
BEGIN    
-- SUB SECTION MASTER ( LOOKUP )
SET @CQUERY = N'SELECT A.SUB_SECTION_CODE, A.SUB_SECTION_NAME, A.SECTION_CODE, B.SECTION_NAME, A.MFG_CATEGORY        
                         FROM SECTIOND A (NOLOCK)      
                         JOIN SECTIONM B (NOLOCK) ON A.SECTION_CODE = B.SECTION_CODE       
                         WHERE A.SUB_SECTION_NAME <> '''' ORDER BY SECTION_NAME, SUB_SECTION_NAME'
END      
--------------------  
IF (@CQUERYID = 126)
BEGIN    
-- STATE MASTER ( LOOKUP )
SET @CQUERY = N'SELECT A.STATE_CODE, A.STATE, B.REGION_CODE, B.REGION_NAME FROM STATE AS A 
                      JOIN REGIONM AS B ON A.REGION_CODE = B.REGION_CODE 
                      WHERE STATE <> '''' ORDER BY B.REGION_NAME, A.STATE'
END      
--------------------  
IF (@CQUERYID = 127)
BEGIN    
-- SIZE MASTER ( LOOKUP )
SET @CQUERY = N'SELECT A.PARA2_CODE, A.PARA2_NAME, A.PARA2_ORDER, A.PARA2_SET FROM PARA2 A 
				WHERE PARA2_NAME <> '''' ORDER BY A.PARA2_SET, A.PARA2_ORDER'
END      
--------------------  
IF (@CQUERYID = 128)
BEGIN    
-- SECTION MASTER ( LOOKUP )
SET @CQUERY = N'SELECT SECTION_CODE,SECTION_NAME FROM SECTIONM 
				WHERE SECTION_NAME <> '''' ORDER BY SECTION_NAME'
END      
--------------------  
IF (@CQUERYID = 129)
BEGIN    
-- REGION MASTER ( LOOKUP )
SET @CQUERY = N'SELECT REGION_CODE ,REGION_NAME FROM REGIONM WHERE REGION_CODE <> ''0000000'' ORDER BY REGION_NAME'
END      
--------------------  
IF (@CQUERYID = 130)
BEGIN    
-- CITY MASTER ( LOOKUP )
SET @CQUERY = N'SELECT C.REGION_CODE, C.REGION_NAME, B.STATE_CODE, B.STATE, A.CITY_CODE, A.CITY FROM CITY AS A
                     JOIN STATE AS B ON A.STATE_CODE = B.STATE_CODE
                     JOIN REGIONM AS C ON B.REGION_CODE = C.REGION_CODE
                     WHERE CITY_CODE <> ''0000000'' ORDER BY REGION_NAME, STATE, CITY'
END      
--------------------  
IF (@CQUERYID = 131)
BEGIN    
-- ATTRIBUTE MASTER ( LOOKUP )
SET @CQUERY = N'SELECT ATTRIBUTE_CODE,ATTRIBUTE_NAME,ATTRIBUTE_GROUP FROM ATTRM 
				WHERE ATTRIBUTE_CODE <> ''0000000'' ORDER BY ATTRIBUTE_GROUP,ATTRIBUTE_NAME'
END      
--------------------  
IF (@CQUERYID = 132)
BEGIN    
-- AREA MASTER ( LOOKUP )
SET @CQUERY = N'SELECT A.REGION_CODE ,A.REGION_NAME ,B.STATE_CODE ,B.STATE ,C.CITY_CODE ,C.CITY,
                       D.AREA_CODE ,D.AREA_NAME FROM REGIONM AS A 
                       JOIN STATE AS B ON B.REGION_CODE = A.REGION_CODE 
                       JOIN CITY AS C ON C.STATE_CODE  = B.STATE_CODE 
                       JOIN AREA AS D ON D.CITY_CODE = C.CITY_CODE WHERE AREA_CODE <> ''0000000''
                       ORDER BY REGION_NAME, STATE, CITY, AREA_NAME'
END      
--------------------  
IF (@CQUERYID = 133)
BEGIN    
-- ADD AREA ( CITY LIST )
SET @CQUERY = N'SELECT CITY, CITY_CODE ,A.STATE_CODE, B.STATE  FROM CITY A
                              LEFT OUTER JOIN STATE B ON A.STATE_CODE = B.STATE_CODE 
                              WHERE CITY_CODE <> ''0000000'''
END      
--------------------  
IF (@CQUERYID = 134)
BEGIN    
-- ADD AREA ( STATE LIST )
SET @CQUERY = N'SELECT STATE, STATE_CODE, B.REGION_NAME FROM STATE A
                            LEFT OUTER JOIN REGIONM B ON A.REGION_CODE = B.REGION_CODE'
END      
--------------------  
IF (@CQUERYID = 135)
BEGIN    
-- BARCODE GENERATE ( PURCHASE ORDER )
SET @CQUERY = N'EXEC SP_ERP_PORDER_PREPAREDATA ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 136)
BEGIN    
-- BOM ( ARTICLE DETAIL )
SET @CQUERY = N'SELECT ARTICLE_NO, ARTICLE_NAME, UOM_NAME, UOM_CODE,PURCHASE_PRICE FROM VW_ARTICLE 
                                WHERE ARTICLE_CODE = ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 137)
BEGIN    
-- BOM ( COLOR LIST )
SET @CQUERY = N'SELECT A.PARA1_CODE, P1.PARA1_NAME FROM ART_PARA1 A
                                JOIN PARA1 P1 (NOLOCK) ON A.PARA1_CODE = P1.PARA1_CODE
                                WHERE ARTICLE_CODE = ''' + @CVALUE1 + ''' ORDER BY PARA1_NAME'
END      
--------------------  
IF (@CQUERYID = 138)
BEGIN    
-- BOM ( SIZE LIST )
SET @CQUERY = N'SELECT A.PARA2_CODE, P2.PARA2_NAME FROM ART_DET A
                                JOIN PARA2 P2 (NOLOCK) ON A.PARA2_CODE = P2.PARA2_CODE
                                WHERE ARTICLE_CODE = ''' + @CVALUE1 + ''' ORDER BY PARA2_NAME'
END      
--------------------  
IF (@CQUERYID = 139)
BEGIN    
-- PRODUCTION POOL ( GET RAW MATERIAL )
SET @CQUERY = N'EXEC SP_ERP_GETRAWMATERIALS  ''' + @CVALUE1 + ''', ''' + @CVALUE2 + ''', 1'
END      
--------------------  
IF (@CQUERYID = 140)
BEGIN    
-- PRODUCTION POOL ( JOB ISSUE )
SET @CQUERY = N'EXEC SP_ERP_JOBISSUE_DATABINDING'
END      
--------------------  
IF (@CQUERYID = 141)
BEGIN    
-- PRODUCTION POOL RETURN ( JOB RECEIVE )
SET @CQUERY = N'EXEC SP_ERP_JOBRECEIPT_DATABINDING'
END      
--------------------  
IF (@CQUERYID = 142)
BEGIN    
-- PRODUCTION POOL RETURN ( JOB RECEIVE )
SET @CQUERY = N'EXEC SP_ERP_JOBORDER_POOLRETURN ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 143)
BEGIN    
-- SKU MASTER ( PRODUCT CODE LIST )
SET @CQUERY = N'SELECT A.PRODUCT_CODE FROM SKU A 
                                JOIN ARTICLE (NOLOCK) B ON A.ARTICLE_CODE = B.ARTICLE_CODE
                                WHERE A.PRODUCT_CODE <> '''' AND A.BARCODE_CODING_SCHEME = 1 ORDER BY A.PRODUCT_CODE'
END      
--------------------  
IF (@CQUERYID = 144)
BEGIN    
-- SKU MASTER ( PRODUCT CODE DETAIL )
SET @CQUERY = N'SELECT A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, A.PARA3_CODE, A.PARA4_CODE, 
                                A.PARA5_CODE, A.PARA6_CODE, A.ARTICLE_NO, A.PARA1_NAME, A.PARA2_NAME, 
                                A.PARA3_NAME, A.PARA4_NAME, A.PARA5_NAME, A.PARA6_NAME FROM PMV01106 A 
                                WHERE A.PRODUCT_CODE = ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 145)
BEGIN    
-- SKU MASTER ( ARTICLE LIST )
SET @CQUERY = N'SELECT A.ARTICLE_CODE, A.ARTICLE_NO, A.ARTICLE_NAME, B.SUB_SECTION_NAME FROM ARTICLE A 
                                JOIN SECTIOND (NOLOCK) B ON A.SUB_SECTION_CODE = B.SUB_SECTION_CODE
                                WHERE A.ARTICLE_NO <> '''' ORDER BY A.ARTICLE_NO'
END      
--------------------  
IF (@CQUERYID = 146)
BEGIN    
-- SKU MASTER ( PARA3 LIST )
SET @CQUERY = N'SELECT A.PARA3_CODE, A.PARA3_NAME FROM PARA3 A
                                WHERE A.PARA3_NAME <> '''' ORDER BY A.PARA3_NAME'
END      
--------------------  
IF (@CQUERYID = 147)
BEGIN    
-- SKU MASTER ( PARA4 LIST )
SET @CQUERY = N'SELECT A.PARA4_CODE, A.PARA4_NAME FROM PARA4 A
                                WHERE A.PARA4_NAME <> '''' ORDER BY A.PARA4_NAME'
END      
--------------------  
IF (@CQUERYID = 148)
BEGIN    
-- SKU MASTER ( PARA5 LIST )
SET @CQUERY = N'SELECT A.PARA5_CODE, A.PARA5_NAME FROM PARA5 A
                                WHERE A.PARA5_NAME <> '''' ORDER BY A.PARA5_NAME'
END      
--------------------  
IF (@CQUERYID = 149)
BEGIN    
-- SKU MASTER ( PARA6 LIST )
SET @CQUERY = N'SELECT A.PARA6_CODE, A.PARA6_NAME FROM PARA6 A
                                WHERE A.PARA6_NAME <> '''' ORDER BY A.PARA6_NAME'
END      
--------------------  
IF (@CQUERYID = 150)
BEGIN    
-- ARTICLE LIST ( SEARCH ARTICLE )
SET @CQUERY = N'SELECT F.SUB_SECTION_NAME, F.SUB_SECTION_CODE, E.ARTICLE_NO, C.ATTRIBUTE_NAME, D.KEY_NAME, 
                             E.ARTICLE_CODE, C.ATTRIBUTE_CODE, D.KEY_CODE FROM ART_ATTR A (NOLOCK)    
                             JOIN ATTRM C (NOLOCK) ON A.ATTRIBUTE_CODE = C.ATTRIBUTE_CODE      
                             JOIN ATTR_KEY D (NOLOCK) ON A.KEY_CODE = D.KEY_CODE     
                             JOIN ARTICLE E (NOLOCK) ON A.ARTICLE_CODE = E.ARTICLE_CODE
                             JOIN SECTIOND F (NOLOCK) ON E.SUB_SECTION_CODE = F.SUB_SECTION_CODE'
END      
--------------------  
IF (@CQUERYID = 151)    
BEGIN    
-- JOB ORDER ( PRODUCTION POOL )
SET @CQUERY = N'EXEC SP_ERP_GETRAWMATERIALS ''' + @CVALUE1 + ''', ''' + @CVALUE2 + ''', ''' + @CVALUE3 + ''''
END      
--------------------  
IF (@CQUERYID = 152)
BEGIN    
-- JOB ORDER ( ARTICLE WISE COLOR SIZE LIST)
SET @CQUERY = N'EXEC SP_ERP_ARTICLECOLORSIZE ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 153)
BEGIN    
-- JOB ORDER ( DATA BINDING )
SET @CQUERY = N'EXEC SP_ERP_JOBORDER_DATABINDING ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 154)
BEGIN    
-- JOB ORDER ( JOB ORDER LIST )
SET @CQUERY = N'EXEC SP_ERP_JOBORDERLIST ''' + @CVALUE1 + ''', ''' + @CVALUE2 + ''''
END      
--------------------  
IF (@CQUERYID = 155)
BEGIN    
-- JOB ORDER ( ARTICLE LIST )
SET @CQUERY = N'EXEC SP_ERP_ARTICLELIST ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 156)
BEGIN    
-- JOB ORDER ( REPORT )
SET @CQUERY = N'EXEC SP_ERP_JOBORDERREPORT2 ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 157)
BEGIN    
-- JOB ISSUE ( JOB ISSUE LIST )
SET @CQUERY = N'SELECT A.*,B.USERNAME,C.AC_NAME,D.JOB_NAME,E.JOB_ORDER_NO FROM PRD_JIM A 
                          JOIN PRD_JOM E ON A.JOB_ORDER_ID=E.JOB_ORDER_ID 
                          JOIN USERS B ON A.USER_CODE=B.USER_CODE 
                          JOIN LM01106 C ON A.WORKER_AC_CODE=C.AC_CODE 
                          JOIN JOBS D ON D.JOB_CODE=A.JOB_CODE
                          WHERE A.ISSUE_MODE = 1'
END      
--------------------  
IF (@CQUERYID = 158)
BEGIN    
-- JOB ISSUE ( BINDING )
SET @CQUERY = N'EXEC SP_ERP_JOBISSUE_DATABINDING ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 159)
BEGIN    
-- JOB ISSUE ( FG LIST )
SET @CQUERY = N'EXEC SP_ERP_JOBISSUE_GETFG ''' + @CVALUE1 + ''', ''' + @CVALUE2 + ''', ''' + @CVALUE3 + ''''
END      
--------------------  
IF (@CQUERYID = 160)
BEGIN    
-- JOB ISSUE ( JOB LIST )
SET @CQUERY = N'EXEC SP_ERP_JOBLIST'
END      
--------------------  
IF (@CQUERYID = 161)
BEGIN    
-- JOB ISSUE ( WORKER LIST )
SET @CQUERY = N'EXEC SP_ERP_WORKERLIST'
END      
--------------------  
IF (@CQUERYID = 162)
BEGIN    
-- JOB ISSUE ( WORKER LIST )
SET @CQUERY = N'EXEC SP_ERP_WORKERLIST'
END      
--------------------  
IF (@CQUERYID = 163)
BEGIN    
-- JOB ISSUE ( RM LIST )
SET @CQUERY = N'EXEC SP_ERP_JOBISSUE_GETRM ''' + @CVALUE1 + ''', ''' + @CVALUE2 + ''''
END      
--------------------  
IF (@CQUERYID = 164)
BEGIN    
-- JOB ISSUE ( PENDING JOBS )
PRINT '1'+ @CVALUE1
PRINT'2'+ @CVALUE2
PRINT '3'+ @CVALUE3

SET @CQUERY = N'EXEC SP_ERP_PENDINGJOBWORK '''', ''' + @CVALUE1 + ''','''''
END      
--------------------  
IF (@CQUERYID = 165)
BEGIN    
-- JOB RECEIVE ( BINDING )
SET @CQUERY = N'EXEC SP_ERP_JOBRECEIPT_DATABINDING ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 166)
BEGIN    
-- JOB RECEIVE ( RM LIST )
SET @CQUERY = N'EXEC SP_ERP_JOBRECEIPT_PENDINGRM ''' + @CVALUE1 + ''', ''' + @CVALUE2 + ''',''' + @CVALUE3 + ''''
END      
--------------------  
IF (@CQUERYID = 167)
BEGIN    
-- JOB RECEIVE ( FROM ISSUE )
SET @CQUERY = N'EXEC SP_ERP_PENDINGJOBWORK_FROMISSUE ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 168)
BEGIN    
-- JOB RECEIVE ( FROM ISSUE )
SET @CQUERY = N'EXEC SP_ERP_WORKERISSUELIST ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 169)
BEGIN    
-- JOB RECEIVE ( ISSUE LIST )

IF (@CVALUE1 <> '')
SET @CTEMP = 'WHERE ISSUE_ID = ''' + @CVALUE1 + ''''
ELSE
SET @CTEMP = ''

SET @CQUERY = N'SELECT ISSUE_ID,ISSUE_NO,WORKER_AC_CODE FROM PRD_JIM  ' + @CTEMP 
END      
--------------------  
IF (@CQUERYID = 170)
BEGIN    
-- PO FG ( LOOKUP )
SET @CQUERY = N'SELECT PO_NO, PO_ID, PO_DT  FROM POM01106 
	WHERE PO_MODE = 4 AND FIN_YEAR = ''' + @CVALUE1 + ''' ORDER BY PO_DT ASC'
END      
--------------------  
IF (@CQUERYID = 171)
BEGIN    
-- PO FG ( LOOKUP )
SET @CQUERY = N'EXEC SP_ERP_PORDER_DATABINDING ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 172)
BEGIN    
-- PO FG ( SUPPLIER )
SET @CQUERY = N'DECLARE @CHEADCODE VARCHAR(4000) ,@CHEADCODE1 VARCHAR(4000) 
              SET @CHEADCODE=DBO.FN_ACT_TRAVTREE(''0000000021'') 
              SET @CHEADCODE1=DBO.FN_ACT_TRAVTREE(''0000000018'') 
              SELECT AC_CODE, AC_NAME, ADDRESS1, ADDRESS2, AREA_NAME, CITY, 
              PINCODE, STATE, SST_NO,SST_DT, TIN_NO, TIN_DT FROM LMV01106  
              WHERE CHARINDEX(HEAD_CODE,@CHEADCODE)>0 OR CHARINDEX(HEAD_CODE,@CHEADCODE1)>0  
              AND ISNULL(INACTIVE,0)=0 AND AC_CODE <> ''0000000000'' ORDER BY AC_NAME'
END      
--------------------  
IF (@CQUERYID = 173)
BEGIN    
-- PO FG ( LOCATION LIST )
SET @CQUERY = N'SELECT DEPT_ID,DEPT_NAME FROM LOCATION WHERE DEPT_ID <> ''00'''
END      
--------------------  
IF (@CQUERYID = 174)
BEGIN    
-- PO FG ( PARA1 LIST )

IF (@CVALUE1 <> '')
SET @CTEMP = ' ARTICLE_CODE = ''' + @CVALUE1 + ''''
ELSE
SET @CTEMP = '1 = 2'


SET @CQUERY = N'SELECT A.ARTICLE_CODE,A.PARA1_CODE,B.PARA1_NAME 
                            FROM ART_PARA1 A 
                            RIGHT OUTER JOIN PARA1 B ON B.PARA1_CODE=A.PARA1_CODE 
                            WHERE B.PARA1_NAME<>'''' AND ' + @CTEMP + ''
END      
--------------------  
IF (@CQUERYID = 175)
BEGIN    
-- PO FG ( PARA2 LIST )

IF (@CVALUE1 <> '')
SET @CTEMP = ' ARTICLE_CODE = ''' + @CVALUE1 + ''''
ELSE
SET @CTEMP = '1 = 2'

SET @CQUERY = N'SELECT A.ARTICLE_CODE,A.PARA2_CODE,B.PARA2_NAME, A.PARA2_RATIO
                            FROM ART_DET A 
                            RIGHT OUTER JOIN PARA2 B ON B.PARA2_CODE=A.PARA2_CODE 
                            WHERE B.PARA2_NAME<>'''' AND ' + @CTEMP + ''
END      
--------------------  
IF (@CQUERYID = 176)
BEGIN    
-- ARTICLE MASTER ( ATTRIBUTES KEYLIST )
SET @CQUERY = N'SELECT ATTRIBUTE_CODE, KEY_NAME, KEY_CODE FROM ATTR_KEY 
			WHERE ATTRIBUTE_CODE = ''' + @CVALUE1 + ''' AND INACTIVE = 0 ORDER BY KEY_NAME'
END      
--------------------  
IF (@CQUERYID = 177)
BEGIN    
-- PURCHASE INVOICE ( LOOKUP )
SET @CQUERY = N'SELECT MRR_ID FROM PIM01106 WHERE FIN_YEAR = ''' + @CVALUE1 + ''' ORDER BY MRR_ID'
END      
--------------------  
IF (@CQUERYID = 178)
BEGIN    
-- PURCHASE INVOICE ( MASTER TABLE )
SET @CQUERY = N'SELECT 0.00 AS TOTAL_QTY, C.FORM_NAME, D.USERNAME AS CREATED_USERNAME, LM.AC_NAME, A.* 
        FROM PIM01106 A
        JOIN FORM C ON A.FORM_ID = C.FORM_ID
        JOIN USERS D ON A.USER_CODE = D.USER_CODE
        JOIN LM01106 LM ON A.AC_CODE = LM.AC_CODE
        WHERE A.MRR_ID = ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 179)
BEGIN    
-- PURCHASE INVOICE ( DETAIL TABLE )
SET @CQUERY = N'SELECT 0 AS SERIAL_NO, K.SECTION_NAME, J.SUB_SECTION_NAME, I.*, C.PARA1_NAME,    
        D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,B.ARTICLE_NO,     
        B.ARTICLE_NAME, ISNULL(SKU.BARCODE_CODING_SCHEME,B.CODING_SCHEME) AS CODING_SCHEME, B.PARA1_SET, B.PARA2_SET, A.*, '''' AS DELIVERY_TO_DT,
        A.PURCHASE_PRICE * A.QUANTITY AS ''AMOUNT'', ISNULL(B.DT_CREATED,'''') AS [ART_DT_CREATED], 
        ISNULL(E.DT_CREATED,'''') AS [PARA3_DT_CREATED], ISNULL(SKU.DT_CREATED,'''') AS [SKU_DT_CREATED]  
        FROM PID01106 A (NOLOCK)   
        JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
        JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE = SKU.ARTICLE_CODE     
        JOIN PARA1 C (NOLOCK) ON SKU.PARA1_CODE = C.PARA1_CODE    
        JOIN PARA2 D (NOLOCK) ON SKU.PARA2_CODE = D.PARA2_CODE    
        JOIN PARA3 E (NOLOCK) ON SKU.PARA3_CODE = E.PARA3_CODE    
        JOIN PARA4 F (NOLOCK) ON SKU.PARA4_CODE = F.PARA4_CODE    
        JOIN PARA5 G (NOLOCK) ON SKU.PARA5_CODE = G.PARA5_CODE    
        JOIN PARA6 H (NOLOCK) ON SKU.PARA6_CODE = H.PARA6_CODE    
        JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE    
        JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE    
        JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE  
        WHERE A.MRR_ID = ''' + @CVALUE1 + ''' AND ISNULL(A.PRODUCT_CODE)<>'''' ORDER BY A.PRODUCT_CODE
        UNION
		SELECT 0 AS SERIAL_NO, K.SECTION_NAME, J.SUB_SECTION_NAME, I.*, C.PARA1_NAME,    
        D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,B.ARTICLE_NO,     
        B.ARTICLE_NAME,B.CODING_SCHEME,B.PARA1_SET, B.PARA2_SET, A.*, '''' AS DELIVERY_TO_DT,
        A.PURCHASE_PRICE * A.QUANTITY AS ''AMOUNT'', ISNULL(B.DT_CREATED,'''') AS [ART_DT_CREATED], 
        ISNULL(E.DT_CREATED,'''') AS [PARA3_DT_CREATED], '''' AS [SKU_DT_CREATED]  
        FROM PID01106 A (NOLOCK)   
        JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE     
        JOIN PARA1 C (NOLOCK) ON A.PARA1_CODE = C.PARA1_CODE    
        JOIN PARA2 D (NOLOCK) ON A.PARA2_CODE = D.PARA2_CODE    
        JOIN PARA3 E (NOLOCK) ON A.PARA3_CODE = E.PARA3_CODE    
        JOIN PARA4 F (NOLOCK) ON A.PARA4_CODE = F.PARA4_CODE    
        JOIN PARA5 G (NOLOCK) ON A.PARA5_CODE = G.PARA5_CODE    
        JOIN PARA6 H (NOLOCK) ON A.PARA6_CODE = H.PARA6_CODE    
        JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE    
        JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE    
        JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE  
        LEFT OUTER JOIN SKU ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
        WHERE A.MRR_ID = ''' + @CVALUE1 + ''' AND ISNULL(A.PRODUCT_CODE)='''' ORDER BY A.PRODUCT_CODE'
END      
--------------------  
IF (@CQUERYID = 180)
BEGIN    
-- PURCHASE INVOICE ( PARA1 LIST )
SET @CQUERY = N'SELECT A.PARA1_CODE, A.PARA1_NAME FROM PARA1 A 
				WHERE PARA1_NAME <> '''' ORDER BY A.PARA1_NAME'
END      
--------------------  
IF (@CQUERYID = 181)
BEGIN    
-- PURCHASE INVOICE ( PARA2 LIST )
SET @CQUERY = N'SELECT A.PARA2_CODE, A.PARA2_NAME, A.PARA2_ORDER FROM PARA2 A 
        WHERE A.PARA2_NAME <> '''' ORDER BY A.PARA2_ORDER, A.PARA2_NAME'
END      
--------------------  
IF (@CQUERYID = 182)
BEGIN    
-- PURCHASE INVOICE ( PARA3 LIST )
SET @CQUERY = N'SELECT A.PARA3_CODE, A.PARA3_NAME FROM PARA3 A 
        WHERE A.PARA3_NAME <> '''' ORDER BY A.PARA3_NAME'
END      
--------------------  
IF (@CQUERYID = 183)
BEGIN    
-- PURCHASE INVOICE ( PARA4 LIST )
SET @CQUERY = N'SELECT PARA4_CODE, PARA4_NAME FROM PARA4 
        WHERE PARA4_NAME <> '''' ORDER BY PARA4_NAME'
END      
--------------------  
IF (@CQUERYID = 184)
BEGIN    
-- PURCHASE INVOICE ( PARA5 LIST )
SET @CQUERY = N'SELECT PARA5_CODE, PARA5_NAME FROM PARA5 
        WHERE PARA5_NAME <> '''' ORDER BY PARA5_NAME '
END      
--------------------  
IF (@CQUERYID = 185)
BEGIN    
-- PURCHASE INVOICE ( PARA6 LIST )
SET @CQUERY = N'SELECT PARA6_CODE, PARA6_NAME FROM PARA6 
        WHERE PARA6_NAME <> '''' ORDER BY PARA6_NAME '
END      
--------------------  
IF (@CQUERYID = 186)
BEGIN    
-- PURCHASE INVOICE ( SUPPLIER LIST )

SET  @cHEAD_CODE = DBO.FN_ACT_TRAVTREE (@CVALUE1) ----ADD VARIABLE BY GAURI ON 17/4/2019
 

SET @CQUERY = N'SELECT  A.AC_CODE, A.AC_NAME, ISNULL(A.CREDIT_DAYS, 0) AS CREDIT_DAYS,       
        ISNULL(A.DISCOUNT_PERCENTAGE, 0) AS DISCOUNT_PERCENTAGE, A.CITY, A.ADDRESS0 + '' '' + 
        A.ADDRESS1 + '' '' + A.ADDRESS2 + '' '' + A.AREA_NAME + '' '' + A.CITY + '' '' +       
        A.STATE AS SUPP_ADDRESS, AC_NAME AS REPCOLNAME       
        FROM LMV01106 A       
        WHERE (  HEAD_CODE IN( '+@cHEAD_CODE+' )  ----REPLACE VARIABLE FROM FUNCTION BY GAURI ON 17/4/2019
        OR ALLOW_CREDITOR_DEBTOR = 1 )       
        AND INACTIVE = 0 AND A.AC_NAME <> '''' AND A.HEAD_CODE = ''' + @CVALUE1 + ''' ----REPLACE VARIABLE FROM FUNCTION BY GAURI ON 17/4/2019      

        UNION ALL      

        SELECT A.AC_CODE, ALIAS, ISNULL(A.CREDIT_DAYS, 0) AS CREDIT_DAYS,       
        ISNULL(A.DISCOUNT_PERCENTAGE, 0) AS DISCOUNT_PERCENTAGE, A.CITY, A.ADDRESS0 + '' '' +       
        A.ADDRESS1 + '' '' + A.ADDRESS2 + '' '' + A.AREA_NAME + '' '' + A.CITY + '' '' + 
        A.STATE AS SUPP_ADDRESS, AC_NAME AS REPCOLNAME        
        FROM LMV01106 A       
        WHERE ( HEAD_CODE IN( '+@cHEAD_CODE+' ) ----REPLACE VARIABLE FROM FUNCTION BY GAURI ON 17/4/2019
        OR ALLOW_CREDITOR_DEBTOR = 1 )       
        AND INACTIVE = 0 AND A.ALIAS <> '''' AND A.HEAD_CODE = ''' + @CVALUE1 + '''       
        ORDER BY A.AC_NAME '
END      
--------------------  
IF (@CQUERYID = 187)
BEGIN    
-- PURCHASE INVOICE ( ARTICLE LIST )
SET @CQUERY = N'SELECT A.ARTICLE_CODE, A.ARTICLE_NAME, A.ARTICLE_NO,   
        B.SUB_SECTION_NAME, C.SECTION_NAME FROM ARTICLE A   
        JOIN SECTIOND B ON A.SUB_SECTION_CODE = B.SUB_SECTION_CODE  
        JOIN SECTIONM C ON B.SECTION_CODE = C.SECTION_CODE  
        WHERE A.ARTICLE_NO <> '''' AND ARTICLE_TYPE <> 4 AND A.INACTIVE = 0 ORDER BY A.ARTICLE_NO'
END      
--------------------  
IF (@CQUERYID = 188)
BEGIN    
-- PURCHASE INVOICE ( ARTICLE INFO )
SET @CQUERY = N'SELECT A.ARTICLE_CODE, A.ARTICLE_DESC, A.ARTICLE_NAME, A.ARTICLE_NO, A.CODING_SCHEME,
		A.PURCHASE_PRICE, A.MRP, A.WHOLESALE_PRICE, A.CREATED_ON, A.PARA1_SET, A.PARA2_SET, B.UOM_CODE, 
		B.UOM_NAME, B.UOM_TYPE, A.MP_PERCENTAGE FROM ARTICLE A 
		JOIN UOM B ON A.UOM_CODE = B.UOM_CODE 
		WHERE A.ARTICLE_CODE = ''' + @CVALUE1 + ''' '
END      
--------------------  
IF (@CQUERYID = 189)
BEGIN    
-- PURCHASE INVOICE ( FORM INFO )
SET @CQUERY = N'SELECT FORM_ID, FORM_NAME, TAX_PERCENTAGE FROM FORM 
				WHERE FORM_NAME <> '''' ORDER BY FORM_NAME'
END      
--------------------  
IF (@CQUERYID = 190)
BEGIN    
-- PURCHASE INVOICE ( ARTICLE SKU INFO )
SET @CQUERY = N'SELECT TOP 1 A.PARA1_CODE, A.PARA2_CODE, A.PARA3_CODE, A.PARA4_CODE, A.PARA5_CODE, 
        A.PARA6_CODE, P1.PARA1_NAME, P2.PARA2_NAME, P3.PARA3_NAME, P4.PARA4_NAME, 
        P5.PARA5_NAME, P6.PARA6_NAME, ART.DT_CREATED AS [ART_DT_CREATED], 
        P3.DT_CREATED AS [PARA3_DT_CREATED],ISNULL(A.DT_CREATED,'''') AS [SKU_DT_CREATED]
        FROM SKU A 
        JOIN ARTICLE (NOLOCK) ART ON ART.ARTICLE_CODE= A.ARTICLE_CODE 
        JOIN PARA1 (NOLOCK) P1 ON A.PARA1_CODE = P1.PARA1_CODE 
        JOIN PARA2 (NOLOCK) P2 ON A.PARA2_CODE = P2.PARA2_CODE 
        JOIN PARA3 (NOLOCK) P3 ON A.PARA3_CODE = P3.PARA3_CODE 
        JOIN PARA4 (NOLOCK) P4 ON A.PARA4_CODE = P4.PARA4_CODE 
        JOIN PARA5 (NOLOCK) P5 ON A.PARA5_CODE = P5.PARA5_CODE 
        JOIN PARA6 (NOLOCK) P6 ON A.PARA6_CODE = P6.PARA6_CODE 
        WHERE A.ARTICLE_CODE = ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 191)
BEGIN    
-- PURCHASE INVOICE ( ARTICLE PARA2 LIST )
SET @CQUERY = N'SELECT A.ARTICLE_CODE, A.PARA2_CODE, B.PARA2_NAME FROM ART_DET A 
        JOIN PARA2 B ON A.PARA2_CODE = B.PARA2_CODE
        WHERE A.ARTICLE_CODE = ''' + @CVALUE1 + ''' 
        ORDER BY B.PARA2_NAME'
END      
--------------------  
IF (@CQUERYID = 192)
BEGIN    
-- PURCHASE INVOICE ( ARTICLE PARA1 LIST )
SET @CQUERY = N'SELECT A.ARTICLE_CODE, A.PARA1_CODE, B.PARA1_NAME FROM ART_PARA1 A 
        JOIN PARA1 B ON A.PARA1_CODE = B.PARA1_CODE
        WHERE A.ARTICLE_CODE = ''' + @CVALUE1 + ''' 
        ORDER BY B.PARA1_NAME '
END      
--------------------  
IF (@CQUERYID = 193)
BEGIN    
-- PURCHASE ORDER ( ARTICLE INFO )

SET @CQUERY = N'SELECT DISTINCT A.UOM_CODE, ISNULL(B.BARCODE_CODING_SCHEME ,A.CODING_SCHEME) AS CODING_SCHEME, A.PURCHASE_PRICE, A.WS_PRICE, A.MRP,
                                    ISNULL(B.PARA5_CODE, ''0000000'') AS PARA5_CODE, 
                                    ISNULL(B.PARA4_CODE, ''0000000'') AS PARA4_CODE, 
                                    ISNULL(B.PARA3_CODE, ''0000000'') AS PARA3_CODE, 
                                    ISNULL(B.PARA6_CODE, ''0000000'') AS PARA6_CODE FROM ARTICLE A
                                    LEFT OUTER JOIN SKU B ON A.ARTICLE_CODE = B.ARTICLE_CODE 
                                    WHERE A.ARTICLE_CODE = ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 194)
BEGIN    
-- PURCHASE ORDER ( TOTAL COST INFO )
SET @CQUERY = N'SELECT * FROM VW_ERP_JOBORDERCOST WHERE JOB_ORDER_ID = ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 195)
BEGIN    
-- PURCHASE ORDER ( MAKE TEXT FILE )
SET @CQUERY = N'SELECT DISTINCT A.PO_NO,A.PO_DT,B.PRODUCT_CODE, 
				F.SECTION_NAME,E.SUB_SECTION_NAME,D.ARTICLE_NO,D.ARTICLE_NAME,
				P1.PARA1_NAME,P2.PARA2_NAME,P3.PARA3_NAME,
				P4.PARA4_NAME,P5.PARA5_NAME,P6.PARA6_NAME,D.CODING_SCHEME,
				B.PURCHASE_PRICE,B.MRP,B.QUANTITY FROM POM01106 A
				JOIN POD01106 B ON B.PO_ID=A.PO_ID 
				LEFT OUTER JOIN PODPMT C ON C.PRODUCT_CODE=B.PRODUCT_CODE 
				JOIN ARTICLE D ON D.ARTICLE_CODE=B.ARTICLE_CODE 
				JOIN SECTIOND E ON E.SUB_SECTION_CODE=D.SUB_SECTION_CODE 
				JOIN SECTIONM F ON F.SECTION_CODE=E.SECTION_CODE 
				LEFT OUTER JOIN PARA1 P1 ON P1.PARA1_CODE=B.PARA1_CODE 
				LEFT OUTER JOIN PARA2 P2 ON P2.PARA2_CODE=B.PARA2_CODE 
				LEFT OUTER JOIN PARA3 P3 ON P3.PARA3_CODE=B.PARA3_CODE 
				LEFT OUTER JOIN PARA4 P4 ON P4.PARA4_CODE=B.PARA4_CODE 
				LEFT OUTER JOIN PARA5 P5 ON P5.PARA5_CODE=B.PARA5_CODE 
				LEFT OUTER JOIN PARA6 P6 ON P6.PARA6_CODE=B.PARA6_CODE 
				WHERE B.PO_ID = ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 196)
BEGIN    
-- PURCHASE INVOICE ( REPORT )
SET @CQUERY = N'SELECT * FROM VW_ERP_PURCHASEINVOICELIST_QBF WHERE MRR_ID = ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 197)
BEGIN    
-- ANGADIA MASTER ( LOOKUP )
SET @CQUERY = N'SELECT A.ANGADIA_HEAD, A.ANGADIA_NAME,A.ANGADIA_CODE FROM ANGM A 
                        WHERE ANGADIA_CODE <> ''0000000'' ORDER BY ANGADIA_HEAD, ANGADIA_NAME'
END      
--------------------  
IF (@CQUERYID = 198)
BEGIN    
-- ANGADIA MASTER ( GROUP LIST )
SET @CQUERY = N'SELECT DISTINCT A.ANGADIA_HEAD FROM ANGM A ORDER BY ANGADIA_HEAD'
END      
--------------------  
IF (@CQUERYID = 199)
BEGIN    
-- ANGADIA MASTER ( AREA LIST )
SET @CQUERY = N'SELECT A.AREA_CODE, A.AREA_NAME, A.PINCODE, C.CITY, D.STATE FROM AREA A
                            JOIN CITY C (NOLOCK) ON A.CITY_CODE = C.CITY_CODE
                            JOIN STATE D (NOLOCK) ON C.STATE_CODE = D.STATE_CODE
                            WHERE AREA_CODE <> ''0000000'''
END      
--------------------  
IF (@CQUERYID = 200)
BEGIN    
-- REPORT
SET @CQUERY = N'SELECT A.WORKER_AC_CODE,A.JOB_CODE,B.JOB_NAME
                            FROM PRD_WORKER_JOBS A JOIN JOBS B ON A.JOB_CODE=B.JOB_CODE
                            WHERE A.WORKER_AC_CODE = ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 201)
BEGIN    
-- LABEL MANAGER
SET @CQUERY = N'SELECT A.MODULE_NAME, B.DISPLAY_NAME, A.D_REPORT_FILE AS LABEL_NAME, A.ROW_ID  FROM REPORTS A 
                                JOIN LBLMODULES (NOLOCK) B ON A.MODULE_NAME = B.MODULE_NAME WHERE(A.LBL = 1)'
END      
--------------------  
IF (@CQUERYID = 202)
BEGIN    
-- PURCHASE INVOICE
SET @CQUERY = N'SELECT TOP 1 C.ANGADIA_NAME, A.* FROM AND01106 A 
                                JOIN ANM01106 B ON A.ANGADIA_MEMO_ID = B.ANGADIA_MEMO_ID 
                                JOIN ANGM C ON A.ANGADIA_CODE = C.ANGADIA_CODE 
                                WHERE A.REF_MEMO_ID = ''' + @CVALUE1 + ''' 
                                AND YEAR(B.ANGADIA_MEMO_DT) = ''' + @CVALUE2 + ''' 
                                AND MONTH(B.ANGADIA_MEMO_DT) = ''' + @CVALUE3 + ''' 
                                AND DAY(B.ANGADIA_MEMO_DT) = ''' + @CVALUE4 + ''''
END      
--------------------  
IF (@CQUERYID = 203)
BEGIN    
-- PARA3 MASTER ( PARA3 SET LIST )
SET @CQUERY = N'SELECT DISTINCT PARA3_SET FROM PARA3 WHERE PARA3_CODE <> ''0000000'' ORDER BY PARA3_SET '
END      
--------------------  
IF (@CQUERYID = 204)
BEGIN    
-- PARA4 MASTER ( PARA4 SET LIST )
SET @CQUERY = N'SELECT DISTINCT PARA4_SET FROM PARA4 WHERE PARA4_CODE <> ''0000000'' ORDER BY PARA4_SET '
END      
--------------------  
IF (@CQUERYID = 205)
BEGIN    
-- PARA5 MASTER ( PARA5 SET LIST )
SET @CQUERY = N'SELECT DISTINCT PARA5_SET FROM PARA5 WHERE PARA5_CODE <> ''0000000'' ORDER BY PARA5_SET '
END      
--------------------  
IF (@CQUERYID = 206)
BEGIN    
-- PARA6 MASTER ( PARA6 SET LIST )
SET @CQUERY = N'SELECT DISTINCT PARA6_SET FROM PARA6 WHERE PARA6_CODE <> ''0000000'' ORDER BY PARA6_SET '
END      
--------------------  
IF (@CQUERYID = 207)
BEGIN    
-- PO FG ( LOOKUP )
SET @CQUERY = N'EXEC SP_ERP_PORDER_DATABINDING_DET ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 208)
BEGIN    
-- OPENING STOCK QTY ( LOOKUP )
SET @CQUERY = N'SELECT MEMO_ID FROM OPS_MST WHERE FIN_YEAR = ''' + @CVALUE1 + ''' ORDER BY MEMO_ID'
END      
--------------------  
IF (@CQUERYID = 209)
BEGIN    
-- OPENING STOCK QTY ( MASTER TABLE )
SET @CQUERY = N'SELECT 0.00 AS TOTAL_QTY, C.FORM_NAME, D.USERNAME AS CREATED_USERNAME, LM.AC_NAME, A.* 
        FROM OPS_MST A
        JOIN FORM C ON A.FORM_ID = C.FORM_ID
        JOIN USERS D ON A.USER_CODE = D.USER_CODE
        JOIN LM01106 LM ON A.AC_CODE = LM.AC_CODE
        WHERE A.MEMO_ID = ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 210)
BEGIN    
-- OPENING STOCK QTY ( DETAIL TABLE )
SET @CQUERY = N'SELECT 0 AS SERIAL_NO, K.SECTION_NAME, J.SUB_SECTION_NAME, I.*, 
		C.PARA1_NAME, D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,
		B.ARTICLE_NO, B.ARTICLE_NAME, B.CODING_SCHEME, B.PARA1_SET, B.PARA2_SET, A.*, 
		'''' AS DELIVERY_TO_DT, A.PURCHASE_PRICE * A.QUANTITY AS ''AMOUNT'', 
		ISNULL(B.DT_CREATED,'''') AS [ART_DT_CREATED], 
		ISNULL(E.DT_CREATED,'''') AS [PARA3_DT_CREATED], 
		ISNULL(SKU.DT_CREATED,'''') AS [SKU_DT_CREATED]  
        FROM OPS_DET A (NOLOCK)   
        JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE     
        JOIN PARA1 C (NOLOCK) ON A.PARA1_CODE = C.PARA1_CODE    
        JOIN PARA2 D (NOLOCK) ON A.PARA2_CODE = D.PARA2_CODE    
        JOIN PARA3 E (NOLOCK) ON A.PARA3_CODE = E.PARA3_CODE    
        JOIN PARA4 F (NOLOCK) ON A.PARA4_CODE = F.PARA4_CODE    
        JOIN PARA5 G (NOLOCK) ON A.PARA5_CODE = G.PARA5_CODE    
        JOIN PARA6 H (NOLOCK) ON A.PARA6_CODE = H.PARA6_CODE    
        JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE    
        JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE    
        JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE  
        LEFT OUTER JOIN SKU ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
        WHERE A.MEMO_ID = ''' + @CVALUE1 + ''' ORDER BY A.PRODUCT_CODE'
END      
--------------------  
IF (@CQUERYID = 211)
BEGIN    
-- PURCHASE INVOICE ( MAKE TEXT FILE )
SET @CQUERY = N'SELECT DISTINCT A.MRR_NO,A.RECEIPT_DT,B.PRODUCT_CODE, 
				F.SECTION_NAME,E.SUB_SECTION_NAME,D.ARTICLE_NO,D.ARTICLE_NAME,
				P1.PARA1_NAME,P2.PARA2_NAME,P3.PARA3_NAME,
				P4.PARA4_NAME,P5.PARA5_NAME,P6.PARA6_NAME,D.CODING_SCHEME,
				B.PURCHASE_PRICE,B.MRP,B.QUANTITY FROM PIM01106 A
				JOIN PID01106 B ON B.MRR_ID=A.MRR_ID 
				LEFT OUTER JOIN PODPMT C ON C.PRODUCT_CODE=B.PRODUCT_CODE 
				JOIN ARTICLE D ON D.ARTICLE_CODE=B.ARTICLE_CODE 
				JOIN SECTIOND E ON E.SUB_SECTION_CODE=D.SUB_SECTION_CODE 
				JOIN SECTIONM F ON F.SECTION_CODE=E.SECTION_CODE 
				LEFT OUTER JOIN PARA1 P1 ON P1.PARA1_CODE=B.PARA1_CODE 
				LEFT OUTER JOIN PARA2 P2 ON P2.PARA2_CODE=B.PARA2_CODE 
				LEFT OUTER JOIN PARA3 P3 ON P3.PARA3_CODE=B.PARA3_CODE 
				LEFT OUTER JOIN PARA4 P4 ON P4.PARA4_CODE=B.PARA4_CODE 
				LEFT OUTER JOIN PARA5 P5 ON P5.PARA5_CODE=B.PARA5_CODE 
				LEFT OUTER JOIN PARA6 P6 ON P6.PARA6_CODE=B.PARA6_CODE
				WHERE B.MRR_ID = ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 212)
BEGIN    
-- OPENING STOCK ( MAKE TEXT FILE )
SET @CQUERY = N'SELECT DISTINCT A.MEMO_NO,A.MEMO_DT,B.PRODUCT_CODE, 
				F.SECTION_NAME,E.SUB_SECTION_NAME,D.ARTICLE_NO,D.ARTICLE_NAME,
				P1.PARA1_NAME,P2.PARA2_NAME,P3.PARA3_NAME,
				P4.PARA4_NAME,P5.PARA5_NAME,P6.PARA6_NAME,D.CODING_SCHEME,
				B.PURCHASE_PRICE,B.MRP,B.QUANTITY FROM OPS_MST A
				JOIN OPS_DET B ON B.MEMO_ID=A.MEMO_ID 
				LEFT OUTER JOIN PODPMT C ON C.PRODUCT_CODE=B.PRODUCT_CODE 
				JOIN ARTICLE D ON D.ARTICLE_CODE=B.ARTICLE_CODE 
				JOIN SECTIOND E ON E.SUB_SECTION_CODE=D.SUB_SECTION_CODE 
				JOIN SECTIONM F ON F.SECTION_CODE=E.SECTION_CODE 
				LEFT OUTER JOIN PARA1 P1 ON P1.PARA1_CODE=B.PARA1_CODE 
				LEFT OUTER JOIN PARA2 P2 ON P2.PARA2_CODE=B.PARA2_CODE 
				LEFT OUTER JOIN PARA3 P3 ON P3.PARA3_CODE=B.PARA3_CODE 
				LEFT OUTER JOIN PARA4 P4 ON P4.PARA4_CODE=B.PARA4_CODE 
				LEFT OUTER JOIN PARA5 P5 ON P5.PARA5_CODE=B.PARA5_CODE 
				LEFT OUTER JOIN PARA6 P6 ON P6.PARA6_CODE=B.PARA6_CODE 
				WHERE B.MEMO_ID = ''' + @CVALUE1 + ''''
END      
--------------------  
IF (@CQUERYID = 213)  
BEGIN      
-- CLSGENREPORT ( GET COMPANY ADDRESS )
SET @CQUERY = N'SELECT COMPANY_NAME, ADDRESS1, ADDRESS2, (CITY) AS CITYNAME, PHONES_FAX, PIN     
                        FROM COMPANY (NOLOCK) WHERE COMPANY_CODE = ''' + @CVALUE1 + ''''  
END        
--------------------      
IF (@CQUERYID = 214)  
BEGIN      
-- BARCODE WIZARD ( GET LABLE MODULE LIST )
SET @CQUERY = N'SELECT DISPLAY_NAME, MODULE_NAME FROM LBLMODULES (NOLOCK)'
END        
--------------------      
IF (@CQUERYID = 215)
BEGIN      
-- CREATE AREA ( GET REGION LIST )
SET @CQUERY = N'SELECT REGION_CODE, REGION_NAME  FROM REGIONM (NOLOCK) WHERE REGION_CODE <> ''0000000'''
END        
--------------------      
IF (@CQUERYID = 216)
BEGIN      
-- CREATE AREA ( GET STATE LIST )
SET @CQUERY = N'SELECT [STATE], STATE_CODE, B.REGION_CODE, B.REGION_NAME FROM STATE A (NOLOCK)
                     JOIN REGIONM B (NOLOCK) ON A.REGION_CODE = B.REGION_CODE 
                     WHERE STATE_CODE <> ''0000000''  ORDER BY A.STATE'
END        
--------------------      
IF (@CQUERYID = 217)
BEGIN      
-- CREATE AREA ( GET CITY LIST )
SET @CQUERY = N'SELECT CITY, CITY_CODE, B.STATE, B.STATE_CODE, C.REGION_NAME, C.REGION_CODE FROM CITY A 
                JOIN STATE B ON A.STATE_CODE = B.STATE_CODE
                JOIN REGIONM C ON B.REGION_CODE = C.REGION_CODE
                WHERE CITY_CODE <> ''0000000'' ORDER BY CITY'
END        
--------------------      
IF (@CQUERYID = 218)
BEGIN      
-- FIND ARTICLE ( GET SUB SECTION LIST )
SET @CQUERY = N'SELECT B.SECTION_NAME ,A.* FROM  SECTIOND A
                            JOIN SECTIONM B ON A.SECTION_CODE = B.SECTION_CODE 
                            WHERE A.SUB_SECTION_CODE <> ''0000000'''
END        
--------------------      
IF (@CQUERYID = 219)
BEGIN      
-- ARTICLE MASTER ( GET PRODUCT CODE LIST )
SET @CQUERY = N'SELECT A.PRODUCT_CODE, A.PURCHASE_PRICE, A.MRP, A.WS_PRICE, P1.PARA1_NAME, P2.PARA2_NAME,
				P1.PARA1_CODE, P2.PARA2_CODE, A.MOP, '''' AS ROW_ID  
				FROM SKU A
				JOIN PARA1 P1 (NOLOCK) ON A.PARA1_CODE = P1.PARA1_CODE
				JOIN PARA2 P2 (NOLOCK) ON A.PARA2_CODE = P2.PARA2_CODE
				WHERE A.ARTICLE_CODE = ''' + @CVALUE1 + ''' AND A.VIRTUAL_BARCODE = 1
				ORDER BY A.PRODUCT_CODE'
END        
--------------------      

    
 IF @CQUERY <> ''    
 BEGIN    
  PRINT @CQUERY    
  EXEC SP_EXECUTESQL @CQUERY    
 END    
    
END
