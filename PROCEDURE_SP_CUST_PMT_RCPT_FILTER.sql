CREATE PROC SP_CUST_PMT_RCPT_FILTER  
(
	@NARCTYPE			NUMERIC(1)=0,
	@FROMADV_REC_DT		DATETIME,
	@TOADV_REC_DT		DATETIME,
	@CUST_CODE			VARCHAR(100)='',
	@NPARTYTYPE			NUMERIC=0,
	@NARCT				NUMERIC(1)=0,
	@AC_CODE			VARCHAR(100)= '',
	@CANCELLED			NUMERIC(1)=2,
	@LOC				VARCHAR(4)=''
)  
AS  
BEGIN  

--(dinkar) Replace  left(memoid,2) to Location_code 
     

		SELECT  B.MEMO_ID ,B.PAYMODE_CODE ,C.PAYMODE_NAME ,
		       SUM(B.AMOUNT) AS AMOUNT
			   into #tmppaymode
		FROM ARC01106 A (NOLOCK)
		JOIN PAYMODE_XN_DET B (NOLOCK) ON A.ADV_REC_ID =B.MEMO_ID 
		JOIN PAYMODE_MST C (NOLOCK) ON B.PAYMODE_CODE=C.PAYMODE_CODE
		WHERE XN_TYPE ='ARC'
		AND  
            (ISNULL(@NARCTYPE,0)=0 OR  A.ARC_TYPE=@NARCTYPE)
        AND (A.ADV_REC_DT BETWEEN @FROMADV_REC_DT AND @TOADV_REC_DT)
        AND (ISNULL(@CUST_CODE,'')='' OR A.CUSTOMER_CODE=@CUST_CODE)
        AND (ISNULL(@NPARTYTYPE,0)=0 OR A.PARTY_TYPE=@NPARTYTYPE)
        AND (ISNULL(@NARCT,0)=0 OR A.ARCT=@NARCT)
        AND (ISNULL(@AC_CODE,'')='' OR A.AC_CODE=@AC_CODE)
        AND (ISNULL(@CANCELLED,2)=2 OR CANCELLED=@CANCELLED) 
        AND (@LOC='' OR A.location_Code =@LOC)	
        GROUP BY B.MEMO_ID ,B.PAYMODE_CODE ,C.PAYMODE_NAME
		--@CPAYMODENAME=ISNULL(@CPAYMODENAME+',','')+'sum('+ QUOTENAME(PAYMODE_NAME)+')'+QUOTENAME(PAYMODE_NAME),
		
--SELECT * FROM #tmppaymode
		DECLARE @CPAYMODENAME nVARCHAR(MAX),@DTSQL NVARCHAR(MAX),
		        @CPAYMODECOLUMN nVARCHAR(MAX),@CPAYMODECOLUMN_SUM nVARCHAR(MAX)
		SELECT 	@CPAYMODECOLUMN=ISNULL(@CPAYMODECOLUMN+',','')+QUOTENAME(PAYMODE_NAME)
		FROM #tmppaymode
		group by PAYMODE_NAME

		SELECT 	@CPAYMODECOLUMN_SUM=ISNULL(@CPAYMODECOLUMN_SUM+',','')+'SUM('+QUOTENAME(PAYMODE_NAME)+') AS '+QUOTENAME(PAYMODE_NAME)
		FROM #tmppaymode
		group by PAYMODE_NAME


		PRINT @CPAYMODECOLUMN_SUM
		IF OBJECT_ID('tmppymode','U') IS NOT NULL
		   DROP TABLE tmppymode

		IF OBJECT_ID('tmppymode_sum','U') IS NOT NULL
		   DROP TABLE tmppymode_sum

		 if isnull(@CPAYMODECOLUMN,'')<>''
		 begin

		SET @DTSQL=' SELECT ''ARC'' AS XN_TYPE, MEMO_ID,'+@CPAYMODECOLUMN+' 
		INTO tmppymode_sum
		FROM #TMPPAYMODE 
		PIVOT ( SUM(AMOUNT) FOR PAYMODE_NAME IN('+@CPAYMODECOLUMN+')) AS P1
		'
		PRINT @DTSQL
		EXEC SP_EXECUTESQL @DTSQL

		SET @DTSQL=' SELECT ''ARC'' AS XN_TYPE, MEMO_ID,'+@CPAYMODECOLUMN_SUM+' 
		INTO tmppymode
		FROM tmppymode_sum
		GROUP BY MEMO_ID
		'
		PRINT @DTSQL
		EXEC SP_EXECUTESQL @DTSQL
		

		end
		else
		begin
		     
			 SELECT '' AS MEMO_ID,'ARC' AS XN_TYPE
			 into tmppymode where 1=2
		end
		

      
      IF OBJECT_ID('TEMPDB..#TMPTABLE','U') IS NOT NULL
         DROP TABLE #TMPTABLE
         
      SELECT (CASE WHEN A.ARC_TYPE=1 THEN 'RECEIPT' ELSE 'PAYMENT' END) AS [MEMO_TYPE],    
      (CASE WHEN A.ARCT=1 THEN 'OUTSTANDING'     
            WHEN A.ARCT=2 THEN 'ADVANCE VOUCHERS'  
            WHEN A.ARCT=5 THEN 'DISCOUNT CARD'       
            ELSE 'OTHER CHARGES' END) AS [MODE],A.ADV_REC_NO AS MEMO_NO,A.ADV_REC_DT AS MEMO_DT,    
      CUST.USER_CUSTOMER_CODE AS CUSTOMER_ID,CUST.CUSTOMER_FNAME+' '+ CUSTOMER_LNAME AS CUSTOMER_NAME,    
      LM.AC_NAME AS AC_NAME,A.REF_NO,    
      LM.ADDRESS0 + ' ' + LM.ADDRESS1 + ' ' + LM.ADDRESS2 + ' ' + LM.AREA_NAME + ' ' + LM.CITY + ' ' +      
      LM.STATE + ' '  + LM.MOBILE + ' ' AS AC_ADDRESS    
      ,CASE WHEN A.PARTY_TYPE = 1 THEN 'CUSTOMER' ELSE 'LEDGER' END AS PARTY_TYPE,    
      A.REMARKS AS MST_REMARKS,
      CASE WHEN A.CANCELLED=0 THEN  A.AMOUNT ELSE 0 END  AS GROSS_AMOUNT,
      CASE WHEN A.CANCELLED=0 THEN  A.DISCOUNT_AMOUNT  ELSE 0 END AS DISCOUNT_AMOUNT,  
      CASE WHEN A.CANCELLED=0 THEN  A.DISCOUNT_PERCENTAGE  ELSE 0 END  AS DISCOUNT_PERCENTAGE,
      CASE WHEN A.CANCELLED=0 THEN A.NET_AMOUNT  ELSE 0 END  AS NET_AMOUNT,    
      C.USERNAME,(CASE WHEN  A.CANCELLED = 1 THEN 'CANCELLED' ELSE '' END) AS CANCELLED,  
      A.FIN_YEAR,CAST(RIGHT(ISNULL(CMR.CM_ID,''),12) AS VARCHAR(MAX)) AS [AGAINST_BILL_NO],
      ISNULL(BM.CARD_NAME,'') AS DISCOUNTED_CARD_TYPE,A.CARD_NO,EMP.EMP_NAME,ADV_ADJ.ADV_ADJ_NO,ADV_ADJ.ADV_ADJ_DT
	  ,CAST(RIGHT(ISNULL(HBD.MEMO_ID,''),10) AS VARCHAR(MAX)) AS [AGAINST_HBD_NO],PAYDET.*
      INTO #TMPTABLE
      FROM ARC01106 A  
      JOIN USERS C ON C.USER_CODE=A.USER_CODE    
      JOIN CUSTDYM CUST ON CUST.CUSTOMER_CODE=A.CUSTOMER_CODE    
      LEFT OUTER JOIN CMM_CREDIT_RECEIPT CMR ON CMR.ADV_REC_ID=A.ADV_REC_ID    
      LEFT OUTER JOIN EMPLOYEE EMP ON A.EMP_CODE=EMP.EMP_CODE    
      LEFT OUTER JOIN LMV01106 LM ON LM.AC_CODE = A.AC_CODE    
      LEFT OUTER JOIN TMPPYMODE PAYDET ON PAYDET.MEMO_ID=A.ADV_REC_ID AND PAYDET.XN_TYPE='ARC'   
      LEFT OUTER JOIN BWD_MST BM ON BM.MEMO_ID=A.CARD_CODE
	  LEFT OUTER JOIN
	  (
		SELECT A.MEMO_ID,A.REF_NO,A.ADJ_MEMO_ID ,B.ADV_REC_NO AS ADV_ADJ_NO,B.adv_rec_dt AS ADV_ADJ_DT
		FROM PAYMODE_XN_DET A (NOLOCK)
		JOIN ARC01106 B (NOLOCK) ON A.MEMO_ID=B.ADV_REC_ID
		WHERE PAYMODE_CODE='0000002' AND XN_TYPE='ARC' AND B.cancelled=0
		UNION ALL
		SELECT A.MEMO_ID,A.REF_NO,A.ADJ_MEMO_ID ,B.CM_NO AS ADV_ADJ_NO,B.CM_dt AS ADV_ADJ_DT
		FROM PAYMODE_XN_DET A (NOLOCK)
		JOIN CMM01106 B (NOLOCK) ON A.MEMO_ID=B.CM_ID
		WHERE PAYMODE_CODE='0000002' AND XN_TYPE='SLS' AND B.cancelled=0
	  )ADV_ADJ ON ADV_ADJ.adj_memo_id=A.adv_rec_id
	  LEFT OUTER JOIN HBD_RECEIPT HBD ON HBD.ADV_REC_ID=A.ADV_REC_ID    
      WHERE 
            (ISNULL(@NARCTYPE,0)=0 OR  A.ARC_TYPE=@NARCTYPE)
        AND (A.ADV_REC_DT BETWEEN @FROMADV_REC_DT AND @TOADV_REC_DT)
        AND (ISNULL(@CUST_CODE,'')='' OR A.CUSTOMER_CODE=@CUST_CODE)
        AND (ISNULL(@NPARTYTYPE,0)=0 OR A.PARTY_TYPE=@NPARTYTYPE)
        AND (ISNULL(@NARCT,0)=0 OR A.ARCT=@NARCT)
        AND (ISNULL(@AC_CODE,'')='' OR A.AC_CODE=@AC_CODE)
        AND (ISNULL(@CANCELLED,2)=2 OR CANCELLED=@CANCELLED) 
        AND (@LOC='' OR A.location_Code =@LOC)	
        
      
		IF OBJECT_ID('tmppymode','U') IS NOT NULL
		   DROP TABLE tmppymode
		IF OBJECT_ID('tmppymode_sum','U') IS NOT NULL
		   DROP TABLE tmppymode_sum

--SELECT * FROM #TMPTABLE  
     DECLARE  @MEMO_NO VARCHAR(100),@AGAINST_BILL_NO VARCHAR(100),@PREV_MEMO VARCHAR(100),@TOTAL_BILL_NO VARCHAR(100)
     SET @PREV_MEMO=''
     SET @TOTAL_BILL_NO=''
	DECLARE  CURMEMOAGAINST_BILL CURSOR
	FOR
	 SELECT T.MEMO_NO,AGAINST_BILL_NO   FROM #TMPTABLE T
     JOIN ( SELECT  MEMO_NO  FROM #TMPTABLE T 
     GROUP BY MEMO_NO
     HAVING COUNT (*)>1) T1 ON T.MEMO_NO =T1.MEMO_NO 
     OPEN CURMEMOAGAINST_BILL
	FETCH NEXT FROM CURMEMOAGAINST_BILL  INTO @MEMO_NO,@AGAINST_BILL_NO
	WHILE @@FETCH_STATUS=0
	BEGIN
	IF @PREV_MEMO<>@MEMO_NO
	SET @TOTAL_BILL_NO=@AGAINST_BILL_NO
	ELSE 
	SET @TOTAL_BILL_NO=@TOTAL_BILL_NO+', '+@AGAINST_BILL_NO
	
	UPDATE #TMPTABLE SET AGAINST_BILL_NO=@TOTAL_BILL_NO WHERE MEMO_NO =@MEMO_NO
	SET @PREV_MEMO=@MEMO_NO
	FETCH NEXT FROM CURMEMOAGAINST_BILL  INTO @MEMO_NO,@AGAINST_BILL_NO
	END
	CLOSE CURMEMOAGAINST_BILL
	DEALLOCATE CURMEMOAGAINST_BILL
          
   SELECT DISTINCT  * FROM #TMPTABLE
END  
---END OF PROCEDURE - SP_CUST_PMT_RCPT_FILTER

