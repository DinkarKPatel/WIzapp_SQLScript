create PROCEDURE UPDATEPMT_IRR
  @nSpId VARCHAR(40),
  @CXNID			VARCHAR(40),  
  @NREVERTFLAG		BIT = 0,  
  @NALLOWNEGSTOCK	BIT = 0,  
  @NUPDATEMODE		INT=0,   
  @CCMD				NVARCHAR(4000) OUTPUT  
  
  --*** PARAMETERS :  
  --*** @CXNTYPE -		TRANSACTION TYPE (MODULE SPECIFIC)  
  --*** @CXNNO -		TRANSACTION NO ( MEMO NO OF MASTER TABLE )  
  --*** @CXNID -		TRANSACTION ID ( MEMO ID OF MASTER TABLE )  
  --*** @NREVERTFLAG -	A FLAG TO INDICATE WHETHER THIS PROCEDURE IS CALLED TO REVERT STOCK  
  --*** @NALLOWNEGSTOCK - FLAG TO INDICATE WHETHER OR NOT ALLOW NEGATIVE STOCK  
  --*** @NRETVAL - OUTPUT PARAMETER RETURNED BY THIS PROCEDURE (BIT 1-SUCCESS, 0-UNSUCCESS)  
----WITH ENCRYPTION
AS  
BEGIN  
	 DECLARE @NOUTFLAG INT, @NRETVAL BIT,@CXNTABLE VARCHAR(50),@CEXPR NVARCHAR(500),@CXNIDPARA VARCHAR(50),  
	 @BCANCELLED BIT,@cStep VARCHAR(20)
	 
	 SET @cStep='150.2'
	EXEC SP_CHKXNSAVELOG 'IRR',@cStep,1,@nSpId,'',1	 

	 SET @NRETVAL = 0  
	 SET @CCMD = ''  
	    
	 IF @NREVERTFLAG = 1  
	  SET @NOUTFLAG = -1  
	 ELSE  
	  SET @NOUTFLAG = 1  

  	IF EXISTS (SELECT TOP 1 A.MEMO_ID FROM STMH01106 A WITH (NOLOCK) 
  	JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
			   AND B.BIN_ID=A.RECON_BIN_ID
			   JOIN IRD01106 C WITH (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
			   WHERE C.IRM_MEMO_ID=@CXNID AND C.NEW_PRODUCT_CODE<>'' AND LEFT(C.IRM_MEMO_ID,2)= B.DEPT_ID)
	BEGIN
			SET @CCMD = N'SELECT DISTINCT C.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE PART OF STOCK RECONCILIATION'' AS ERRMSG
						  FROM STMH01106 A WITH (NOLOCK) JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
						  AND B.BIN_ID=A.RECON_BIN_ID
						  JOIN IRD01106 C WITH (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
						  WHERE C.IRM_MEMO_ID='''+@CXNID+'''  AND C.NEW_PRODUCT_CODE<>'''''		
			RETURN					
	END	       

	PRINT 'UPDATEPMT_IRR STEP 0' 
	 SET @cStep='150.4'
	EXEC SP_CHKXNSAVELOG 'IRR',@cStep,1,@nSpId,'',1	 	 
	 --IF NOT EXISTS ( SELECT TOP 1 A.PRODUCT_CODE FROM IRR_BARCODE_DET A JOIN IRR_DET B ON A.REFROW_ID=B.ROW_ID
		--			 WHERE B.MEMO_ID=@CXNID) 
		--   GOTO END_PROC --RECON PMT XN REBUILD WITHOUT CHECKING OF NEW BARCODE
	PRINT 'UPDATEPMT_IRR STEP 1'
	
	INSERT PMT01106 (PRODUCT_CODE,  QUANTITY_IN_STOCK, DEPT_ID,BIN_ID, LAST_UPDATE )    
	SELECT A.new_PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,b.Location_code/*LEFT(b.irm_memo_id,2)*//*Rohit 06-11-2024*/  DEPT_ID,b.BIN_ID,GETDATE() AS LAST_UPDATE    
     FROM ird01106 a (NOLOCK)
     JOIN irm01106 b (NOLOCK) ON b.IRM_MEMO_ID=a.irm_MEMO_ID    
     LEFT OUTER JOIN PMT01106 PMT ON PMT.PRODUCT_CODE = A.new_PRODUCT_CODE AND PMT.DEPT_ID = B.Location_code/*LEFT(b.irm_memo_id,2)*//*Rohit 06-11-2024*/ 
	 AND PMT.BIN_ID=b.BIN_ID    
	 WHERE b.irm_memo_id=@cXnId AND PMT.PRODUCT_CODE IS NULL   
	 
	 INSERT PMT01106 (PRODUCT_CODE,  QUANTITY_IN_STOCK, DEPT_ID,BIN_ID, LAST_UPDATE )    
	 SELECT distinct  A.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,b.Location_code/*LEFT(b.irm_memo_id,2)*//*Rohit 06-11-2024*/  DEPT_ID,b.BIN_ID,GETDATE() AS LAST_UPDATE    
     FROM ird01106 a (NOLOCK)
     JOIN irm01106 b (NOLOCK) ON b.IRM_MEMO_ID=a.irm_MEMO_ID    
     LEFT OUTER JOIN PMT01106 PMT ON PMT.PRODUCT_CODE = A.PRODUCT_CODE AND PMT.DEPT_ID = B.Location_code/*LEFT(b.irm_memo_id,2)*//*Rohit 06-11-2024*/ 
	 AND PMT.BIN_ID=b.BIN_ID    
	 WHERE b.irm_memo_id=@cXnId AND PMT.PRODUCT_CODE IS NULL   
	 
	 
	
	SET @cStep='150.6'
	EXEC SP_CHKXNSAVELOG 'IRR',@cStep,1,@nSpId,'',1	 
	 --*** UPDATING THE QUANTITY IN STOCK INTO PMT01106 FOR THE GIVEN MEMO  
	 UPDATE A SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK + ( @NOUTFLAG * X.QUANTITY )  
	 FROM  PMT01106 A  
	 JOIN   
	 ( 
		 SELECT A.new_PRODUCT_CODE product_code,a.quantity,b.Location_code/*LEFT(b.irm_memo_id,2)*//*Rohit 06-11-2024*/  DEPT_ID,b.BIN_ID
		 FROM ird01106 a (NOLOCK)
		 JOIN irm01106 b (NOLOCK) ON b.IRM_MEMO_ID=a.irm_MEMO_ID    
		 WHERE b.irm_memo_id=@cXnId
	 )X ON A.PRODUCT_CODE = X.PRODUCT_CODE AND A.BIN_ID = X.BIN_ID AND A.DEPT_ID = X.DEPT_ID  
	 
	 PRINT 'UPDATEPMT_IRR STEP 4'	
	
	 SET @cStep='150.8'
	EXEC SP_CHKXNSAVELOG 'IRR',@cStep,1,@nSpId,'',1	 	
	 UPDATE A SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * X.QUANTITY )  
	 FROM  PMT01106 A  
	 JOIN   
	 ( 
		 SELECT A.PRODUCT_CODE,SUM(a.quantity) quantity,b.Location_code/*LEFT(b.irm_memo_id,2)*//*Rohit 06-11-2024*/  DEPT_ID,b.BIN_ID
		 FROM ird01106 a (NOLOCK)
		 JOIN irm01106 b (NOLOCK) ON b.IRM_MEMO_ID=a.irm_MEMO_ID    
		 LEFT OUTER JOIN PMT01106 PMT ON PMT.PRODUCT_CODE = A.new_PRODUCT_CODE AND PMT.DEPT_ID = b.Location_code/*LEFT(b.irm_memo_id,2)*//*Rohit 06-11-2024*/ 
		 AND PMT.BIN_ID=b.BIN_ID    
		 WHERE b.irm_memo_id=@cXnId
		 GROUP BY a.product_code,b.Location_code/*LEFT(b.irm_memo_id,2)*//*Rohit 06-11-2024*/ ,b.BIN_ID
	 )X ON A.PRODUCT_CODE = X.PRODUCT_CODE AND A.BIN_ID = X.BIN_ID AND A.DEPT_ID = X.DEPT_ID  


		 SET @cStep='150.10'
	EXEC SP_CHKXNSAVELOG 'IRR',@cStep,1,@nSpId,'',1	 
  IF EXISTS ( SELECT TOP 1 A.PRODUCT_CODE FROM PMT01106 A JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/  AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM IRD01106 B WITH (NOLOCK)  
      JOIN IRM01106 C WITH (NOLOCK) ON C.IRM_MEMO_ID=B.IRM_MEMO_ID  
      JOIN SKU_NAMES D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      WHERE B.IRM_MEMO_ID = @CXNID AND D.STOCK_NA=0  AND ISNULL(B.NEW_PRODUCT_CODE,'')<>''
      GROUP BY B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/ ,B.BIN_ID  
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  AND  B.BIN_ID=A.BIN_ID 
      WHERE A.QUANTITY_IN_STOCK < 0)  
  BEGIN  
	SET @cStep='150.12'
	EXEC SP_CHKXNSAVELOG 'IRR',@cStep,1,@nSpId,'',1	 
   SET @NRETVAL = 0  --*** UNSUCCESS  
   SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG 
     FROM PMT01106 A WITH (NOLOCK)  
     JOIN  
     (
      SELECT B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/  AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM IRD01106 B WITH (NOLOCK) 
      JOIN IRM01106 C WITH (NOLOCK) ON C.IRM_MEMO_ID=B.IRM_MEMO_ID  
      JOIN SKU_NAMES D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      WHERE B.IRM_MEMO_ID = '''+@CXNID+''' AND D.STOCK_NA=0 AND ISNULL(B.NEW_PRODUCT_CODE,'''')<>''''
      GROUP BY B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/ ,B.BIN_ID
     )B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID AND B.BIN_ID=A.BIN_ID   
     WHERE A.QUANTITY_IN_STOCK < 0 '  
  END  

	  
     SET @NRETVAL = 1  --*** SUCCESS  
	 
	 
	 --*** CHECKING FOR NEGATIVE STOCK  
	  
END_PROC:  
	PRINT 'UPDATEPMT_IRR STEP OUT'  
END  
--***************************** END OF PROCEDURE UPDATEPMT_IRR
