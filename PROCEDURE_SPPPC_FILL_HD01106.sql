CREATE PROCEDURE SPPPC_FILL_HD01106  
(  
 @NQUERYID   INT,    
 @VPARAMETER  VARCHAR(500)  
)  
AS      
BEGIN   
  
 DECLARE @CSTEP INT, @CCMD NVARCHAR(MAX), @ERRMSG_OUT VARCHAR(MAX)  
 BEGIN TRY  
  SET NOCOUNT ON;  
    
  SET @ERRMSG_OUT = ''  
    
  IF @NQUERYID = 1  
   -- GET A/C HEAD LIST  
   GOTO LBLGETACHEADLIST  
  ELSE IF @NQUERYID = 2  
   -- GET A/C HEAD USING LIKE  
   GOTO LBLGETACHEADLIKE  
    
  ELSE IF @NQUERYID = 7  
   -- GET A/C INFO BY ACNAME  
   GOTO LBLGETINFOBYACNAME  
  
  ELSE  
   GOTO LAST  
  
-- GET A/C HEAD LIST  
LBLGETACHEADLIST:  
  SET @CSTEP = 101  
  SELECT A.HEAD_CODE, A.HEAD_NAME  
  FROM [HD01106] A (NOLOCK)   
  WHERE A.INACTIVE = 0 AND A.HEAD_CODE <> '0000000' AND ISNULL(A.HEAD_NAME,'')<>''  
  ORDER BY A.HEAD_NAME  
    
  GOTO LAST  
  
  
-- GET A/C HEAD LIKE  
LBLGETACHEADLIKE:  
  SET @CSTEP = 102  
  SELECT TOP 10 A.HEAD_CODE, A.HEAD_NAME  
  FROM [HD01106] A (NOLOCK)   
  WHERE A.INACTIVE = 0 AND A.HEAD_CODE <> '0000000' AND ISNULL(A.HEAD_NAME,'')<>''  
  AND A.HEAD_NAME LIKE '%'+ @VPARAMETER +'%'  
  ORDER BY A.HEAD_NAME  
    
  GOTO LAST  
  
  
-- GET A/C INFO BY ACNAME  
LBLGETINFOBYACNAME:  
  SET @CSTEP = 107  
  SELECT A.HEAD_CODE, A.HEAD_NAME  
  FROM [HD01106] A (NOLOCK)   
  WHERE A.HEAD_NAME = @VPARAMETER  
    
  GOTO LAST  
    
LAST:     
 GOTO END_PROC  
  
  SET NOCOUNT OFF;  
 END TRY    
 BEGIN CATCH    
  SET @ERRMSG_OUT='ERROR: [P]: SPPPC_HD01106, [STEP]: '+CAST(@CSTEP AS VARCHAR(5))+', [MESSAGE]: ' + ERROR_MESSAGE()  
  GOTO END_PROC    
 END CATCH     
  
END_PROC:    
 IF  ISNULL(@ERRMSG_OUT,'')<>''   
  SELECT @ERRMSG_OUT AS ERRORMSG  
END
