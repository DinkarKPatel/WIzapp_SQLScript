CREATE PROCEDURE SP3S_GST_TAX_CAL_BATCH
(
  @CXN_TYPE VARCHAR(10)='',
  @NSPID VARCHAR(100)='',
  @cLoginDeptId VARCHAR(5)='',
  @CERRMSG VARCHAR(200) OUTPUT  
)
AS
BEGIN
   
    DECLARE @CSTEP VARCHAR(10),@CCURDEPT_ID VARCHAR(5),@GSTDATE DATETIME,
            @CTABLENAME VARCHAR(100),@CTEMPTABLENAME VARCHAR(100),@CTEMPDBNAME   VARCHAR(100),
            @CMASTERTABLENAME  VARCHAR(100),  @CDETAILTABLENAME  VARCHAR(100),   @CTEMPMASTERTABLENAME VARCHAR(100),  
            @CTEMPDETAILTABLENAME VARCHAR(100), @CTEMPMASTERTABLE  VARCHAR(100),   @CTEMPDETAILTABLE  VARCHAR(100) ,
            @DTSQL NVARCHAR(MAX) ,@CHASNCODEERROR VARCHAR(1000),
            @BCALCGST BIT ,@CMEMO_ID VARCHAR(100),@REGISTERED_GST INT
           
    
    SET @CMEMO_ID=''
    SET @CSTEP=00
	IF @cLoginDeptId=''
		SELECT TOP 1 @CCURDEPT_ID=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
	ELSE
		SET @CCURDEPT_ID=@cLoginDeptId

	IF ISNULL(@CCURDEPT_ID,'')=''
	 BEGIN
		SET @CERRMSG =' LOCATION ID CAN NOT BE BLANK for spid:  '+str(@@spid)  
		RETURN    
	 END

  
	DECLARE @CSTATECODE VARCHAR(10)
	SELECT @CSTATECODE=STATE_CODE,@REGISTERED_GST=REGISTERED_GST FROM LOC_VIEW WHERE DEPT_ID=@CCURDEPT_ID
	             
    DECLARE @CGSTCUTOFFDATE VARCHAR(10)
    SELECT TOP 1 @CGSTCUTOFFDATE=VALUE FROM CONFIG WHERE CONFIG_OPTION ='GST_CUT_OFF_DATE'
   
   -- TEMPORARY DATABASE Discarded now onwards as per Meeting on 30-10-2020 mentioned in Client issues List
   SET @CTEMPDBNAME = '' 
 
    
    IF @CGSTCUTOFFDATE<>''
       SELECT @GSTDATE=CAST(@CGSTCUTOFFDATE AS DATETIME)
    
    BEGIN TRY 
    SET @CERRMSG=''
       
       
       -- IN CASE OF NEW TRANSACTION
       IF ISNULL(@CMEMO_ID,'')=''
       BEGIN
          --VALIDATION
            SET @CSTEP=10
              
           IF ISNULL(@CGSTCUTOFFDATE,'')=''
           BEGIN
               SET @CERRMSG='PLEASE DEFINE GST CUT OFF DATE'
               RETURN
           END
           
           
            
            IF @CXN_TYPE='SLS'
            BEGIN
				UPDATE TMP WITH (ROWLOCK) SET PARTY_STATE_CODE=LOC_STATE_CODE
				FROM GST_TAXINFO_CALC TMP
				WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID))) 
				AND ISNULL(LOCALBILL,0)=1
				
		    END
		    
		    
		   DECLARE  @CALL_XN_IGST VARCHAR(5)
		   SELECT TOP 1 @CALL_XN_IGST=VALUE  FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION ='ALL_XN_IGST' 
	       
		   IF @CALL_XN_IGST IS NULL
		   SET @CALL_XN_IGST=''
	       
		   IF ISNULL(@CALL_XN_IGST,'')='1'
		   BEGIN
				
				UPDATE TMP WITH (ROWLOCK) SET PARTY_GSTN_NO='NA1',LOC_GSTN_NO='NA2',
				LOC_STATE_CODE='01',PARTY_STATE_CODE='02'
				FROM GST_TAXINFO_CALC TMP
				WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID)))
	       
		   END
			
			
			
                    SET @CSTEP=50	 
				   UPDATE TMP WITH (ROWLOCK) SET HSN_CODE=CASE WHEN ISNULL(TMP.HSN_CODE,'') NOT IN ('','0000000000') THEN TMP.HSN_CODE
				                                WHEN ISNULL(SKU.HSN_CODE,'') NOT IN ('','0000000000') THEN SKU.HSN_CODE  
				                                ELSE HM.HSN_CODE END ,
				                   MRP=CASE WHEN ISNULL(TMP.MRP,0)=0 THEN SKU .MRP ELSE TMP.MRP END
				   FROM GST_TAXINFO_CALC TMP
				   JOIN SKU  (NOLOCK) SKU ON TMP.PRODUCT_CODE=SKU.PRODUCT_CODE 
				    JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =SKU.ARTICLE_CODE 
				   LEFT JOIN HSN_MST HM (NOLOCK) ON HM.HSN_CODE=ART.HSN_CODE 
				   WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID))) AND ISNULL(TMP.PRODUCT_CODE,'')<>''
				   

				  
				
					;WITH CTE AS
					(
					SELECT C.*,  
						  SR=ROW_NUMBER() OVER (PARTITION BY A.ROW_ID ORDER BY C.WEF DESC)
					FROM GST_TAXINFO_CALC A (NOLOCK)
					JOIN HSN_MST B (NOLOCK) ON A.HSN_CODE =B.HSN_CODE 
					JOIN HSN_DET C (NOLOCK) ON B.HSN_CODE =C.HSN_CODE AND C.WEF  <=MEMO_DT 
					WHERE SP_ID =LTRIM(RTRIM((@NSPID)))  
					)

			       SELECT * INTO #TMPHSN_MST FROM CTE WHERE SR=1

				   CREATE INDEX IX_TMPHSN_MST ON #TMPHSN_MST(HSN_CODE)

			      
			       UPDATE TMP SET MRP= CASE WHEN ISNULL(HM.GST_CAL_BASIS,1)=1 THEN NET_VALUE ELSE (MRP*quantity ) END
				   FROM GST_TAXINFO_CALC TMP WITH (ROWLOCK)
				   JOIN #TMPHSN_MST  HM (NOLOCK) ON HM.HSN_CODE=TMP.HSN_CODE 
				   WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID)))
				   
				   
				   --  PRINT '4.5 UPDATE CESS PERCENTAGE '
                  
				     
						 UPDATE A  SET CESS_PERCENTAGE= B.CESS_PERCENTAGE
						 FROM GST_TAXINFO_CALC  A WITH (ROWLOCK)
						 join location l (nolock) on l.dept_id =a.source_dept_id  and isnull(l.CESS_APPLICABLE ,0)=1
						 JOIN GST_STATE_DET B (NOLOCK) ON B.gst_STATE_CODE=l.gst_state_code   AND A.MEMO_DT BETWEEN B.FM_DT AND B.TO_DT
						 WHERE A.SP_ID=LTRIM(RTRIM((@NSPID)))
						 AND a.LOC_STATE_CODE=PARTY_STATE_CODE 
					
					
					
	  
                   UPDATE TMP WITH (ROWLOCK) SET  NET_VALUE_WOTAX= ROUND(MRP-(MRP*(CASE WHEN TAX_METHOD=2 THEN ((HM.RATE_CUTOFF_TAX_PERCENTAGE+ISNULL(TMP.CESS_PERCENTAGE,0)+ISNULL(hm.GST_CESS_PERCENTAGE,0))/  
												   (100 + HM.RATE_CUTOFF_TAX_PERCENTAGE+ISNULL(TMP.CESS_PERCENTAGE,0)+ISNULL(hm.GST_CESS_PERCENTAGE,0))) ELSE 0 END)),2)
				   FROM GST_TAXINFO_CALC TMP
				   JOIN #TMPHSN_MST HM (NOLOCK) ON HM.HSN_CODE=TMP.HSN_CODE 
				   WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID))) 
                        
                   UPDATE TMP WITH (ROWLOCK)  SET GST_PERCENTAGE=isnull(CASE WHEN HM.RATE_CUTOFF<ABS(TMP.NET_VALUE_WOTAX)/ABS(TMP.QUANTITY) THEN HM.TAX_PERCENTAGE ELSE RATE_CUTOFF_TAX_PERCENTAGE END,0) ,
				   Gst_Cess_Percentage=isnull(CASE WHEN HM.RATE_CUTOFF<ABS(TMP.NET_VALUE_WOTAX)/ABS(TMP.QUANTITY) THEN HM.GST_cess_PERCENTAGE ELSE RATE_CUTOFF_GST_cess_PERCENTAGE END,0) ,
				   IGST_AMOUNT=0,
				   SGST_AMOUNT=0
				   FROM GST_TAXINFO_CALC TMP
				   left JOIN #TMPHSN_MST HM (NOLOCK) ON HM.HSN_CODE=TMP.HSN_CODE 
				   WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID))) 
				   
				   --in case of export Gst Mark in cust dym

				   UPDATE TMP SET  GST_PERCENTAGE=ISNULL(EXPORT_GST_PERCENTAGE,0) 
				   FROM GST_TAXINFO_CALC TMP
				   WHERE ISNULL(TMP.EXPORT_GST_PERCENTAGE_APPLICABLE,0)=1
				   and TMP.SP_ID=LTRIM(RTRIM((@NSPID))) 

	
			       SET @CSTEP=60
	              
	              
	                --IN CASE OF SALE RETURN CHECK CONFIG & PICK GST FROM SALE
	             	IF  @CXN_TYPE ='SLS'
					BEGIN

					    --IN CASE OF SALE RETURN CHECK CONFIG & PICK GST FROM SALE
					    DECLARE @CPICKLASTSLSTAX VARCHAR(10)
					    SELECT TOP 1 @CPICKLASTSLSTAX=LTRIM(RTRIM(VALUE)) FROM CONFIG (NOLOCK) 
						WHERE CONFIG_OPTION='PICK_LAST_SLS_TAX'
                        
                 

                        IF ISNULL(@CPICKLASTSLSTAX,'')='1'	
                        BEGIN
							--IN RETAIL SALE 1 FOR INCLUSIVE AND ANOTHER TRANSACTION 1 FOR EXCLUSIVE PICK  FROM CASH MEMO
							UPDATE A SET HSN_CODE=ISNULL(SLS.HSN_CODE,B.HSN_CODE) ,
							TAX_METHOD = (CASE WHEN ISNULL(C.MRP_EXCHANGE_BILL,0)=1 THEN 2 
							ELSE ISNULL(SLS.TAX_METHOD,A.TAX_METHOD) END) ,
							GST_PERCENTAGE =ISNULL(SLS.GST_PERCENTAGE,B.GST_PERCENTAGE) ,
							Gst_Cess_Percentage=ISNULL(SLS.Gst_Cess_Percentage,B.Gst_Cess_Percentage)
							FROM   GST_TAXINFO_CALC A WITH (ROWLOCK) 
							JOIN SLS_CMD01106_UPLOAD B (NOLOCK) ON A.ROW_ID =B.ROW_ID AND A.SP_ID =B.SP_ID 
							JOIN SLS_CMM01106_UPLOAD C (NOLOCK) ON C.SP_ID=B.SP_ID
							JOIN
							( 
								SELECT A.CM_NO,A.CM_DT ,B.PRODUCT_CODE,  
								B.GST_PERCENTAGE ,(CASE WHEN B.TAX_METHOD=1 THEN 2 ELSE 1 END) AS TAX_METHOD,
								B.HSN_CODE ,b.Gst_Cess_Percentage
								FROM CMM01106 A (NOLOCK)
								JOIN CMD01106 B (NOLOCK) ON A.CM_ID =B.CM_ID 
								JOIN GST_TAXINFO_CALC C (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE
								WHERE A.CANCELLED =0 AND B.QUANTITY >0
								AND CM_DT >='2017-07-01'
							) SLS ON SLS.CM_NO =B.REF_SLS_MEMO_NO AND SLS.CM_DT =B.REF_SLS_MEMO_DT AND SLS.PRODUCT_CODE =A.PRODUCT_CODE 
							WHERE NET_VALUE <0  
							AND  A.SP_ID=LTRIM(RTRIM((@NSPID))) 
					
						END
								
						
						 	
							UPDATE A SET NET_VALUE_WOTAX= ROUND(A.MRP-(A.MRP*(CASE WHEN A.TAX_METHOD=1 THEN ( A.GST_PERCENTAGE+ISNULL(a.CESS_PERCENTAGE,0) /
																   (100 + A.GST_PERCENTAGE+ISNULL(a.CESS_PERCENTAGE,0) )) ELSE 0 END)),2) 
							FROM   GST_TAXINFO_CALC A WITH (ROWLOCK) 
							JOIN SLS_CMD01106_UPLOAD B (NOLOCK) ON A.ROW_ID =B.ROW_ID AND A.SP_ID =B.SP_ID 
							WHERE  A.NET_VALUE <0  
							AND  A.SP_ID=LTRIM(RTRIM((@NSPID))) 
							
						
                       
					END
					-- END OF SALE RETURN
	                 -- STEP 4 IN CASE OF INTER STATE GST PERCENTAGE SHOULD BE ZERO
	               IF ISNULL(@CALL_XN_IGST,'')<>'1'
				   BEGIN  
				   
					   UPDATE TMP WITH (ROWLOCK) 
					   SET GST_PERCENTAGE=0,
					   NET_VALUE_WOTAX=NET_VALUE      
					   FROM GST_TAXINFO_CALC TMP
					   JOIN LOCATION L WITH (NOLOCK)  ON L.DEPT_ID=TMP.SOURCE_DEPT_ID
					   WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID)))
					   AND (ISNULL(PARTY_GSTN_NO,'')=ISNULL(LOC_GSTN_NO,'') OR ISNULL(L.REGISTERED_GST,0) IN(0,2))
                  
                  END
				   -- STEP 4 IN HSN CODE CAN NOT BE BLANK
				   
				  SELECT @CHASNCODEERROR=PRODUCT_CODE 
				  FROM GST_TAXINFO_CALC TMP WITH (NOLOCK) 
				  JOIN LOCATION L WITH (NOLOCK)  ON L.DEPT_ID=TMP.SOURCE_DEPT_ID
				  WHERE SP_ID=LTRIM(RTRIM((@NSPID))) AND ISNULL(HSN_CODE,'') IN('','0000000000')
				  AND (ISNULL(PARTY_GSTN_NO,'')<>ISNULL(LOC_GSTN_NO,'') OR ISNULL(L.REGISTERED_GST,0) IN(1))
				   
				 IF ISNULL(@CHASNCODEERROR,'')<>''
	             BEGIN
	                 SET @CERRMSG='HSN CODE DOES NOT EXISTS OF PRODUCT_CODE:-'+@CHASNCODEERROR
	                 RETURN
	             END
		  
		   
		   IF @CXN_TYPE ='PUR'
		   BEGIN
		  --      --UNREGINSTERED CUSTOMER NOT ALLOW RO CALCULATE TAX PERCENTAGE
		       
		        UPDATE TMP WITH (ROWLOCK)  SET HSN_CODE=CASE WHEN ISNULL(HSN_CODE,'')='' THEN '0000000000' ELSE HSN_CODE END,
				GST_PERCENTAGE=0 ,
				IGST_AMOUNT=0,
				CGST_AMOUNT=0,
			    SGST_AMOUNT=0,
				Gst_Cess_Percentage=0,
				GST_cess_amount=0,
				NET_VALUE_WOTAX=NET_VALUE 
				FROM GST_TAXINFO_CALC TMP
				WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID))) 
				AND ISNULL(PARTYREGISTERED,0)=0
				
		   END	
		  
		  
				UPDATE TMP WITH (ROWLOCK)  SET XN_VALUE_WITHOUT_GST =ROUND(NET_VALUE-(NET_VALUE*(CASE WHEN TAX_METHOD=2 THEN ((ISNULL(TMP.GST_PERCENTAGE,0)+ISNULL(TMP.CESS_PERCENTAGE,0)+ISNULL(TMP.Gst_Cess_Percentage,0))/  
				(100 + ISNULL(TMP.GST_PERCENTAGE,0)+ISNULL(TMP.CESS_PERCENTAGE,0)+ISNULL(TMP.Gst_Cess_Percentage,0))) ELSE 0 END)),2)
				FROM GST_TAXINFO_CALC TMP
				WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID)))
				
				--calculate cess amount
				
				 UPDATE A  SET CESS_AMOUNT= ROUND(xn_value_without_gst *isnull(A.CESS_PERCENTAGE,0)/100,2),
				               Gst_Cess_Amount= ROUND(xn_value_without_gst *isnull(A.gst_CESS_PERCENTAGE,0)/100,2)
				 FROM GST_TAXINFO_CALC  A WITH (ROWLOCK) 
				 WHERE A.SP_ID=LTRIM(RTRIM((@NSPID)))
				 
				
                SET @CSTEP=70  

                UPDATE TMP SET XN_VALUE_WITH_GST = ROUND((NET_VALUE-isnull(Gst_Cess_Amount,0))+((NET_VALUE-isnull(Gst_Cess_Amount,0))*(CASE WHEN TAX_METHOD=2 THEN 0 
				ELSE ((ISNULL(TMP.GST_PERCENTAGE,0))/100) END)) ,2)	  
				FROM GST_TAXINFO_CALC TMP (NOLOCK)
				WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID))) 
				  
			    SET @CSTEP=80 
               
                UPDATE TMP WITH (ROWLOCK)  SET IGST_AMOUNT =ROUND(CASE WHEN LOC_STATE_CODE<>PARTY_STATE_CODE THEN 
                (NET_VALUE-isnull(Gst_Cess_Amount,0))*(CASE WHEN TAX_METHOD=2 THEN (TMP.GST_PERCENTAGE/  
		        (100 + TMP.GST_PERCENTAGE)) ELSE (TMP.GST_PERCENTAGE/100) END)
				ELSE 0 END,2) ,

				CGST_AMOUNT=ROUND((CASE WHEN LOC_STATE_CODE<>PARTY_STATE_CODE THEN 0
				ELSE ((NET_VALUE-isnull(Gst_Cess_Amount,0))-CASE WHEN TAX_METHOD=2 THEN ISNULL(CESS_AMOUNT,0) ELSE 0 END)
				*(CASE WHEN TAX_METHOD=2 THEN (TMP.GST_PERCENTAGE/  
				(100 + TMP.GST_PERCENTAGE)) ELSE (TMP.GST_PERCENTAGE/100) END) 
				 END)/2,2),

				SGST_AMOUNT=ROUND((CASE WHEN LOC_STATE_CODE<>PARTY_STATE_CODE THEN 0
				ELSE ((NET_VALUE-isnull(Gst_Cess_Amount,0))-CASE WHEN TAX_METHOD=2 THEN ISNULL(CESS_AMOUNT,0) ELSE 0 END)
				*(CASE WHEN TAX_METHOD=2 THEN (TMP.GST_PERCENTAGE/  
				(100 + TMP.GST_PERCENTAGE)) ELSE (TMP.GST_PERCENTAGE/100) END) 
				END)/2,2)
				FROM GST_TAXINFO_CALC TMP
				WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID)))
				
			
		
	   
				
		IF EXISTS (SELECT TOP 1 'U'	FROM GST_TAXINFO_CALC TMP (NOLOCK)
		 WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID))) AND ISNULL(CGST_AMOUNT,0)<>ISNULL(SGST_AMOUNT,0))
	     BEGIN
	        SET @CERRMSG='Diff In cgst & sgst Amount :-'
	        RETURN
	     
	     END
        
       END
    
  END TRY  
  BEGIN CATCH  
   SELECT @CERRMSG='ERROR MESSAGE IN PROCEDURE SP3S_GST_TAX_CAL_BATCH STEP#'+@CSTEP+' '+CAST(ERROR_MESSAGE() AS VARCHAR(MAX))+ '||'+ERROR_PROCEDURE()  
   PRINT 'ENTER CATCH IN SP3S_GST_TAX_CAL'
  END CATCH  
 
END
