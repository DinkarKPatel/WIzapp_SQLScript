CREATE PROCEDURE SP3S_PO_PENDING_REPORT
(  
 @DFM_DT VARCHAR(10),  
 @DTODT VARCHAR(10) ,
 @CCOLNAME VARCHAR(MAX) ='',
 @CFILTER VARCHAR(MAX) =''
  
)  
AS  
BEGIN  
     DECLARE @DTSQL NVARCHAR(MAX),@CCOLNAME1 NVARCHAR(MAX)
	 IF OBJECT_ID ('TEMPDB..#TMPPO_QTY','U') IS NOT NULL  
		DROP TABLE #TMPPO_QTY  
	
	 print 'SP3S_PO_PENDING_REPORT 1:'+convert(varchar,getdate(),113)	
	 
	 if ISNULL(@CFILTER,'')<>''
		    set @CFILTER=' WHERE '+@CFILTER
	   
	 
	    
	    --IF OBJECT_ID ('SP_RPT_PO_PENDING_REPORT','P') IS NOT NULL
	    --BEGIN
	        
	    --    EXEC SP_RPT_PO_PENDING_REPORT @DFM_DT,@DTODT,@CCOLNAME,@CFILTER
	    --    RETURN
	    --END
	    
	 SELECT A.PO_ID ,A.PO_NO,A.PO_DT,
	        B.ROW_ID ,B.PRODUCT_CODE,B.QUANTITY ,
	        B.QUANTITY AS PO_QTY ,
	        CONVERT(VARCHAR(40),'') AS MRR_ID ,
	        CONVERT(VARCHAR(40),'') AS MRR_NO,
	        CONVERT(DATE,'') AS MRR_DT,
	        '' AS PO_ROW_ID ,
	        ISNULL(ADJ.ADJ_QUANTITY,0) AS ADJ_QUANTITY,
	        B.PI_QTY AS PI_QTY ,
	        PENDING_QTY=CAST(0 AS NUMERIC(10,2)),
	        PI_EXCESS_QTY=CAST(0 AS NUMERIC(10,2)),
	        A.AC_CODE ,
	        B.ARTICLE_CODE,
	        B.PARA1_CODE,
	        B.PARA2_CODE,
	        B.PARA3_CODE,
	        B.PARA4_CODE,
	        B.PARA5_CODE,
	        B.PARA6_CODE,
	        A.PO_FOR_DEPT_ID,
	        L.DEPT_NAME AS PO_FOR_DEPT_NAME,
	        L1.DEPT_NAME AS DEPT_NAME,
	        B.HSN_CODE,B.GST_PERCENTAGE ,A.SHORT_CLOSE,A.SHORT_CLOSE_REMARKS ,
	        B.mrp,B.purchase_price ,A.PO_TYPE_ID ,A.DELIVERY_DT,A.ref_no ,
			A.packing_Dt ,A.user_code ,isnull(OEM.AC_NAME,'') as OEM_AC_NAME,
			isnull(OEM.ALIAS,'') as OEM_ALIAS,isnull(OEM.CITY,'')  as oem_city,OEM.lm_REMARKS  as oem_remarks,
			U.username as created_by,bk.BROKER_AC_NAME as Broker_Name ,bk.CITY  as SUP_CITY, 
			bk.ALIAS as SUP_ALIAS,A.location_Code
	 INTO #TMPPO_QTY  
	 FROM POM01106 A (NOLOCK)  
	 JOIN POD01106 B (NOLOCK) ON A.PO_ID =B.PO_ID 
	 LEFT OUTER JOIN
	 (
		SELECT  B.PO_ROW_ID,SUM(B.ADJ_QUANTITY) AS ADJ_QUANTITY FROM PO_ADJ_MST A
		JOIN PO_ADJ_DET B ON A.MEMO_ID =B.MEMO_ID 
		GROUP BY PO_ROW_ID
	 ) ADJ ON ADJ.PO_ROW_ID =B.ROW_ID
	 LEFT OUTER  JOIN lmv01106  OEM (NOLOCK) ON OEM.AC_CODE =A.SHIPPING_FROM_AC_CODE   
	 LEFT OUTER  JOIN Users  U (NOLOCK) ON U.user_code =A.user_code    
	 LEFT OUTER  JOIN LMV01106   bk (NOLOCK) ON A.ac_code =bk.AC_CODE    
     JOIN LOCATION L ON L.DEPT_ID =A.PO_FOR_DEPT_ID 
     JOIN LOCATION L1 ON L1.DEPT_ID =A.DEPT_ID 
	 WHERE A.CANCELLED=0
	 AND PO_DT BETWEEN @DFM_DT AND @DTODT
	 
	 print 'SP3S_PO_PENDING_REPORT 1.1:'+convert(varchar,getdate(),113)	
	 UPDATE #TMPPO_QTY SET PENDING_QTY=(CASE WHEN (QUANTITY-ADJ_QUANTITY-PI_QTY)>=0 AND ISNULL(SHORT_CLOSE,0)=0
	 THEN (QUANTITY-ADJ_QUANTITY-PI_QTY) ELSE 0 END),
	 PI_EXCESS_QTY=(CASE WHEN (QUANTITY-ADJ_QUANTITY-PI_QTY)<0
					THEN ABS(QUANTITY-ADJ_QUANTITY-PI_QTY) ELSE 0 END)
	
	 print 'SP3S_PO_PENDING_REPORT 1.2:'+convert(varchar,getdate(),113)	
	 UPDATE a SET MRR_ID=B.MRR_ID,MRR_NO=C.MRR_NO,MRR_DT=C.MRR_DT
	 FROM #TMPPO_QTY a 
	 JOIN PID01106 b (NOLOCK) ON b.po_row_id=a.row_id
	 JOIN PIM01106 c (NOLOCK) ON c.MRR_ID =B.MRR_ID 
	 WHERE c.CANCELLED =0
     	 
		 --as per pankaj ji po row id available in pid only against po purchase for tqs
	 --print 'SP3S_PO_PENDING_REPORT 1.5:'+convert(varchar,getdate(),113)		
	 --UPDATE a SET MRR_ID=B.MRR_ID,MRR_NO=C.MRR_NO,MRR_DT=C.MRR_DT
	 --FROM #TMPPO_QTY a 
	 --JOIN PID01106 b (NOLOCK) ON b.product_code=a.product_code
	 --JOIN PIM01106 c (NOLOCK) ON c.MRR_ID =B.MRR_ID 
	 --WHERE a.mrr_id='' AND c.CANCELLED =0 AND ISNULL(b.po_row_id,'')='' 
	 

	 
	 print 'SP3S_PO_PENDING_REPORT 2:'+convert(varchar,getdate(),113)	
	   
     
     print 'SP3S_PO_PENDING_REPORT 3:'+convert(varchar,getdate(),113)	
     IF ISNULL(@CCOLNAME,'')=''
     SET @CCOLNAME=' PO_FOR_DEPT_ID,  PO_ID ,PRODUCT_CODE ,MRR_ID ,MRR_NO,0 as SR,MRR_DT,QUANTITY  ' 
     
     SET @CCOLNAME1=REPLACE(REPLACE(REPLACE(REPLACE( REPLACE(REPLACE(@CCOLNAME,'AS PARA1_ALIAS',''),'AS PARA2_ALIAS',''),'AS PARA3_ALIAS',''),'AS PARA4_ALIAS',''),'AS PARA5_ALIAS',''),'AS PARA6_ALIAS','')


     SET @DTSQL=N'SELECT '+@CCOLNAME+'
     ,SUM(TEMP.PO_QTY) AS PO_QTY
     ,SUM(TEMP.ADJ_QUANTITY) AS ADJ_QTY
     ,SUM(TEMP.PI_QTY) AS PI_QTY
     ,SUM(PENDING_QTY) as PENDING_QTY
     ,SUM(PI_EXCESS_QTY) AS PI_EXCESS_QTY
     FROM #TMPPO_QTY TEMP 
      JOIN (
	 SELECT ARTICLE_CODE,SUB_SECTION_CODE,ARTICLE_NO,UOM_CODE,ARTICLE_NAME FROM ARTICLE  (NOLOCK) 
	 )ARTICLE ON TEMP.ARTICLE_CODE =ARTICLE.ARTICLE_CODE      
     JOIN SECTIOND  (NOLOCK) ON SECTIOND.SUB_SECTION_CODE =ARTICLE.SUB_SECTION_CODE   
     JOIN SECTIONM  (NOLOCK) ON SECTIONM.SECTION_CODE =SECTIOND.SECTION_CODE  
     JOIN PARA1  (NOLOCK) ON PARA1.PARA1_CODE =TEMP.PARA1_CODE    
     JOIN PARA2  (NOLOCK) ON PARA2.PARA2_CODE =TEMP.PARA2_CODE   
     JOIN PARA3  (NOLOCK) ON PARA3.PARA3_CODE =TEMP.PARA3_CODE   
     JOIN PARA4  (NOLOCK) ON PARA4.PARA4_CODE =TEMP.PARA4_CODE   
     JOIN PARA5  (NOLOCK) ON PARA5.PARA5_CODE =TEMP.PARA5_CODE   
     JOIN PARA6  (NOLOCK) ON PARA6.PARA6_CODE =TEMP.PARA6_CODE  
     JOIN UOM (NOLOCK) ON UOM.UOM_CODE=ARTICLE.UOM_CODE 
     JOIN LMV01106  (NOLOCK) ON LMV01106.AC_CODE =TEMP.AC_CODE 	  
     LEFT OUTER JOIN LOC_VIEW ON LOC_VIEW.DEPT_ID=TEMP.location_code
    LEFT OUTER JOIN PO_TYPE_MST PT ON TEMP.PO_TYPE_ID= PT.PO_TYPE_ID
	LEFT OUTER JOIN ARTICLE_FIX_ATTR ATTR  (NOLOCK) ON ARTICLE.ARTICLE_CODE = ATTR.ARTICLE_CODE 
	LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE
	LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE
	LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE
	LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE
	LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE
	LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE
	LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE
	LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE
	LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE
	LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE
	LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE
	LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE
	LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE
	LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE
	LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE
	LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE
	LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE
	LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE
	LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE
	LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE
	LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE
	LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE
	LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE
	LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE
	LEFT OUTER JOIN ATTR25_MST AT25(NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE    
	LEFT OUTER JOIN SECTIONDPARA2 (NOLOCK) ON SECTIONDPARA2.SUB_SECTION_CODE=SECTIOND.SUB_SECTION_CODE 
	AND  SECTIONDPARA2.PARA2_CODE=PARA2.PARA2_CODE    
     ' +@CFILTER+'
     GROUP BY '+@CCOLNAME1+'  
     ORDER BY '+@CCOLNAME1+''
     PRINT @DTSQL
     EXEC SP_EXECUTESQL @DTSQL
     
 
  print 'SP3S_PO_PENDING_REPORT 4:'+convert(varchar,getdate(),113)	
  
END