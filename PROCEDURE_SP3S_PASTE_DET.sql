CREATE PROCEDURE SP3S_PASTE_DET
(
	@NSPID INT,
	@BDONOTCHECKSTOCK BIT=0,
	@CBIN_ID  VARCHAR(7)='', 
	@CWHERE VARCHAR(40)='',  
	@CUSERCODE VARCHAR(10),
	@NRATEREVISION INT =0,
	@CXNTYPE VARCHAR(5)='',
	@NMRPWS NUMERIC(1)=1,
	@BESTIMATEMODE BIT,
	@CPRODUCT_CODE VARCHAR(50)='',
	@NQUANTITY NUMERIC(9,2) = 1 ,
	@cLOCID VARCHAR(5)=''
)
AS 
BEGIN
		DECLARE @CCMD NVARCHAR(MAX), @CTEMPTABLENAME VARCHAR(100),@CSTEP VARCHAR(100),
		        @CERRMSG VARCHAR(1000),@CDONOTCHECKSTOCK VARCHAR(5),@CTEMPTABLENAME_GRP VARCHAR(100)
		
		SET @CTEMPTABLENAME = DB_NAME() + '.DBO.TEMP_FORM_PASTE_'+RTRIM(LTRIM(STR(@NSPID)))    
		
		SET @CTEMPTABLENAME_GRP = DB_NAME() + '.DBO.TEMP_FORM_PASTE_GRP_'+RTRIM(LTRIM(STR(@NSPID))) 
 BEGIN TRY	
		
		SET @CSTEP = 1
		SET @CCMD = N'IF OBJECT_ID('''+@CTEMPTABLENAME_GRP+''',''U'') IS NOT NULL
						DROP TABLE '+@CTEMPTABLENAME_GRP+''
		PRINT @CCMD 
		EXEC SP_EXECUTESQL @CCMD			 
		
		SET @CSTEP = 2
		SET @CCMD = N'CREATE TABLE '+@CTEMPTABLENAME_GRP+'(PRODUCT_CODE VARCHAR(50),QUANTITY NUMERIC(9,2))'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		
		
		
		IF ISNULL(@CPRODUCT_CODE,'') = ''
		BEGIN
		    SET @CSTEP = 10
			SET @CCMD = N'IF OBJECT_ID('''+@CTEMPTABLENAME+''',''U'') IS NULL
								SET @CERRMSG = ''TEMP TABLE NOT EXISTS''
							ELSE
								SET @CERRMSG = '''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD,N'@CERRMSG VARCHAR(100) OUTPUT',@CERRMSG OUTPUT
			
			IF ISNULL(@CERRMSG,'') <> ''
				GOTO END_PROC	
			ELSE
			BEGIN
				SET @CSTEP = 3
				SET @CCMD = N'INSERT INTO '+@CTEMPTABLENAME_GRP+'(PRODUCT_CODE,QUANTITY)
							  SELECT PRODUCT_CODE,SUM(QUANTITY) AS QUANTITY FROM '+@CTEMPTABLENAME+' GROUP BY PRODUCT_CODE'
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD 	
							

				SET @CCMD = N'TRUNCATE TABLE '+@CTEMPTABLENAME 
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD

				SET @CCMD = N'INSERT INTO  '+@CTEMPTABLENAME +'( PRODUCT_CODE,QUANTITY) '+
							 'SELECT PRODUCT_CODE,QUANTITY FROM '+ @CTEMPTABLENAME_GRP
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD
			END	
		END
		ELSE 
		BEGIN
				SET @CSTEP = 15
				SET @CCMD = N'IF OBJECT_ID('''+@CTEMPTABLENAME+''',''U'') IS NOT NULL
								DROP TABLE '+@CTEMPTABLENAME+''
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD			 
				
				SET @CSTEP = 20
				SET @CCMD = N'CREATE TABLE '+@CTEMPTABLENAME+'(PRODUCT_CODE VARCHAR(50),QUANTITY NUMERIC(9,2))'
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD
				
				SET @CSTEP = 30
				SET @CCMD = N'INSERT INTO '+@CTEMPTABLENAME+' (PRODUCT_CODE,QUANTITY)
				              SELECT '''+@CPRODUCT_CODE+''','+STR(@NQUANTITY)+''
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD              
		END	 
		
		
		
		
				
		SET @CSTEP = 50
		SET @CCMD = N'IF EXISTS(SELECT TOP 1 * FROM SYS.COLUMNS WHERE NAME=''ERRMSG'' AND OBJECT_ID =  OBJECT_ID('''+@CTEMPTABLENAME+'''))
		              BEGIN
		                   EXEC SP_EXECUTESQL N''UPDATE '+@CTEMPTABLENAME+' SET ERRMSG = NULL''
		              END
		              ELSE
		              BEGIN 
		                    ALTER TABLE '+@CTEMPTABLENAME+'
		                    ADD ERRMSG VARCHAR(1000)
		                    
		                    ALTER TABLE '+@CTEMPTABLENAME+'
		                    ADD RNO INT IDENTITY
		              END'      
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD   
		 
		
		SET @CSTEP = 80
		DECLARE @ALLOW_ACCESS BIT
		SELECT TOP 1 @ALLOW_ACCESS=1 FROM BINUSERS (NOLOCK) WHERE USER_CODE=@CUSERCODE AND BIN_ID =@CBIN_ID
		
		SET @CSTEP = 120
		DECLARE @BINNAME VARCHAR(1000),@CUSERNAME VARCHAR(1000),@USER_AUTH VARCHAR(100),@BMBO_COUNTER BIT
		--GET THE USERNAME AND BIN_NAME
	    SELECT TOP 1 @CUSERNAME=USERNAME FROM USERS WHERE USER_CODE=@CUSERCODE 
	    SELECT TOP 1 @BINNAME=BIN_NAME FROM BIN WHERE BIN_ID =@CBIN_ID
	    
	    /*IF THE BIN IS MARKED AS MBO_COUNTER THAN ONLY THE BIN STOCK SHOULD BE CONSIDERED AND ONLY ITS STOCK 
        SHOULD BE RETURNED, IRRESPECTIVE OF THE BINS THE USER HAS ACCESS TO*/
        SET @CSTEP = 140
        SELECT @BMBO_COUNTER=ISNULL(MBO_COUNTER,0) FROM BIN(NOLOCK) WHERE BIN_ID=@CBIN_ID
        
        
        --CHECK @BDONOTCHECKSTOCK ON 16.1014
	     IF @BDONOTCHECKSTOCK=0
	     BEGIN
			SELECT TOP 1 @CDONOTCHECKSTOCK =VALUE FROM MODULES 
			WHERE USER_CODE=@CUSERCODE AND USER_CODE<>'0000000'
			AND FORM_NAME='FRMSALE' 
			AND FORM_OPTION='ALLOW_NEG_STOCK'		
			
			SET @CDONOTCHECKSTOCK = ISNULL(@CDONOTCHECKSTOCK,'0')
				
	     END 
	     
         /*SELECTED BARCODE SHOULD NOT BE PART OF STOCK RECONCILLATION*/ 
          SET @CSTEP = 160
          SET @CCMD = N'IF EXISTS (SELECT TOP 1 MEMO_ID FROM STMH01106 A 
                                     JOIN PMT01106 B ON A.REP_ID = B.REP_ID
                                     JOIN '+@CTEMPTABLENAME+' C ON B.PRODUCT_CODE = C.PRODUCT_CODE
                                     WHERE B.BIN_ID = '''+@CBIN_ID+'''
                                   )
                                  BEGIN 
                                     UPDATE C SET C.ERRMSG = ''THIS BARCODE IS PART OF STOCK RECONCILIATION'' FROM STMH01106 A 
                                     JOIN PMT01106 B ON A.REP_ID = B.REP_ID
                                     JOIN '+@CTEMPTABLENAME+' C ON B.PRODUCT_CODE = C.PRODUCT_CODE
                                     WHERE B.BIN_ID = '''+@CBIN_ID+'''
                                  END'
                                 
         PRINT @CCMD
         EXEC SP_EXECUTESQL @CCMD
         
	     SET @CSTEP = 180
	     
	     
	     
	     SET @CCMD = N'IF EXISTS (SELECT TOP 1 A.PRODUCT_CODE FROM '+@CTEMPTABLENAME+' A 
	                   JOIN SKU B ON A.PRODUCT_CODE = B.PRODUCT_CODE
	                   WHERE B.PRODUCT_CODE IS NULL)
	                   BEGIN
							   UPDATE A  SET A.ERRMSG =''BARCODE NOT FOUND....PLEASE CHECK''
							   FROM '+@CTEMPTABLENAME+' A 
	                           JOIN SKU B ON A.PRODUCT_CODE = B.PRODUCT_CODE
	                           WHERE B.PRODUCT_CODE IS NULL AND ISNULL(A.ERRMSG,'''') = '''' 
							   
					   END'       
	     PRINT @CCMD
	     EXEC SP_EXECUTESQL @CCMD
	     
	     
	     SET @CSTEP = 220
	     IF  ISNULL(@ALLOW_ACCESS,0)<>1  AND @CUSERCODE<>'0000000'
	     BEGIN
 		      SELECT '''USER -'+@CUSERNAME+' NOT ALLOW TO ACCESS BIN- '+@BINNAME+''' ' AS ERRMSG,'' AS PRODUCT_CODE 
			  GOTO END_PROC 
		 END
		 
		 
		SET @CSTEP = 290
		
		--IF OBJECT_ID('TEMPDB..#PRODUCTCODE','U') IS NOT NULL
		--	DROP TABLE #PRODUCTCODE
			
		Declare  @TMPPRODUCTCODE TABLE (RNO INT,PRODUCT_CODE VARCHAR(50),QUANTITY NUMERIC(14,2),STOCK NUMERIC(14,2),ERRMSG VARCHAR(MAX))	
		
		SET @CSTEP = 50
		SET @CCMD = N'SELECT B.RNO,A.PRODUCT_CODE,B.QUANTITY,B.ERRMSG FROM SKU A 
		             JOIN '+@CTEMPTABLENAME+' B ON A.PRODUCT_CODE = B.PRODUCT_CODE 
					 UNION
		             SELECT B.RNO,A.PRODUCT_CODE,B.QUANTITY,B.ERRMSG  FROM SKU A 
		             JOIN '+@CTEMPTABLENAME+' B ON A.PRODUCT_CODE = B.PRODUCT_CODE AND A.ER_FLAG=2'
		PRINT @CCMD
		
		
		 INSERT INTO @TMPPRODUCTCODE(RNO,PRODUCT_CODE,QUANTITY,ERRMSG)
		 EXEC SP_EXECUTESQL @CCMD
		--SELECT * FROM #PRODUCTCODE
		
		 SET @CSTEP = 170
	     UPDATE A SET A.STOCK = B.STOCK FROM @TMPPRODUCTCODE  A
	     JOIN (  
	           SELECT C.PRODUCT_CODE,SUM(PMT.QUANTITY_IN_STOCK)  AS STOCK
               FROM PMT01106 PMT (NOLOCK)
               JOIN BINUSERS B (NOLOCK) ON PMT.BIN_ID =B.BIN_ID 
               JOIN @TMPPRODUCTCODE C ON C.PRODUCT_CODE = PMT.PRODUCT_CODE
               WHERE (@CUSERCODE=(CASE WHEN @CUSERCODE='0000000' THEN @CUSERCODE ELSE B.USER_CODE END))  
                     AND B.BIN_ID=(CASE WHEN @BMBO_COUNTER=0 THEN B.BIN_ID ELSE @CBIN_ID END)
               GROUP BY C.PRODUCT_CODE
               ) 
          B ON A.PRODUCT_CODE = B.PRODUCT_CODE
		 
		 
		 SET @CSTEP = 310
		 IF @BDONOTCHECKSTOCK = 0
		 BEGIN
			 SET @CCMD = N'IF EXISTS (SELECT TOP 1 A.PRODUCT_CODE FROM @TMPPRODUCTCODE A
										  WHERE ISNULL(STOCK,0) = 0 AND QUANTITY > 0 AND '+ISNULL(@CDONOTCHECKSTOCK,0)+'=0
										  )
							BEGIN              
							  UPDATE A SET A.ERRMSG = ''BARCODE NOT IN STOCK....PLEASE CHECK'' FROM 
							  @TMPPRODUCTCODE A
							  WHERE ISNULL(A.STOCK,0) = 0 AND A.QUANTITY > 0 AND '+ISNULL(@CDONOTCHECKSTOCK,0)+'=0 
							END' 
			 PRINT @CCMD
			 EXEC SP_EXECUTESQL @CCMD 
		  END	 
		 
		 
		  IF OBJECT_ID('TEMPDB..#SP_CHECKSTOCK0','U') IS NOT NULL   
			DROP TABLE #SP_CHECKSTOCK0  
		        
		  IF OBJECT_ID('TEMPDB..#SP_CHECKSTOCK','U') IS NOT NULL   
			DROP TABLE #SP_CHECKSTOCK  
			
		  IF OBJECT_ID('TEMPDB..#SP_CHECKSTOCK1','U') IS NOT NULL   
			DROP TABLE #SP_CHECKSTOCK1 
		IF 	@NRATEREVISION = 1
		BEGIN
		  --IF @NRATEREVISION IN (0,1,3) AND @NQTY>=0	
		        SELECT PR.RNO,A.PRODUCT_CODE, A.ARTICLE_CODE, B.ARTICLE_NO, B.ARTICLE_NAME, A.PARA1_CODE,      
				C.PARA1_NAME, A.PARA2_CODE, D.PARA2_NAME, A.PARA3_CODE, F.PARA3_NAME, E.UOM_NAME,         
				ISNULL(PMT.DEPT_ID, @CBIN_ID) AS DEPT_ID, A.BARCODE_CODING_SCHEME AS CODING_SCHEME,  B.INACTIVE,ISNULL(PMT.QUANTITY_IN_STOCK,0) AS QUANTITY_IN_STOCK,      
				A.PURCHASE_PRICE AS PURCHASE_PRICE,
				--(CASE WHEN @NQTY<0 THEN ISNULL(Z1.OLD_MRP,A.MRP) ELSE ISNULL(Z.MRP,A.MRP) END)AS [MRP], 
				(CASE WHEN @NMRPWS =1 THEN ISNULL(Z.MRP,A.MRP) 
				   WHEN @NMRPWS =2 THEN ISNULL(Z.WS_PRICE,A.WS_PRICE) ELSE 0 END
				)AS [MRP],    
				ISNULL(Z.WS_PRICE,A.WS_PRICE) AS WS_PRICE,       
				'' AS SCHEME_ID, SM.SECTION_NAME, SD.SUB_SECTION_NAME,      
				A.PARA4_CODE,A.PARA5_CODE,A.PARA6_CODE,      
				PARA4_NAME,PARA5_NAME,PARA6_NAME,B.UOM_CODE,ISNULL(E.UOM_TYPE,0) AS [UOM_TYPE],      
				B.DT_CREATED AS [ART_DT_CREATED],F.DT_CREATED AS [PARA3_DT_CREATED],A.DT_CREATED AS [SKU_DT_CREATED],      
				B.STOCK_NA,(CASE  WHEN ISNULL(ES.EAN,'') ='' THEN '' ELSE ES.EAN END) AS EAN,  
				F1.FORM_ID,F1.FORM_NAME,F1.TAX_PERCENTAGE , A.PRODUCT_NAME,  
				ISNULL(Z.MRP,A.MRP) AS RATE,A.ER_FLAG     ,ISNULL(A.FIX_MRP,0) AS [FIX_MRP] ,LM.AC_NAME  
				,A.INV_DT,A.RECEIPT_DT ,A.AC_CODE,B.ALIAS AS [ARTICLE_ALIAS],
				ISNULL(PMT.BIN_ID, @CBIN_ID) AS [BIN_ID],ISNULL(BIN.BIN_NAME, '') AS [BIN_NAME],'' AS [WIP_UID],
				PR.QUANTITY ,PR.ERRMSG,A.HSN_CODE,SD.LABEL_COPIES,A.EXPIRY_DT,A.EXPIRY_DT AS NEW_Expiry_DT ,A.VENDOR_EAN_NO
				INTO #SP_CHECKSTOCK0  
				FROM SKU A   (NOLOCK) 
				JOIN   @TMPPRODUCTCODE PR ON PR.PRODUCT_CODE = A.PRODUCT_CODE   
				LEFT OUTER JOIN SKU_OH OH (NOLOCK) ON OH.product_code=A.product_code
				LEFT OUTER JOIN  PMT01106 PMT  (NOLOCK) ON A.PRODUCT_CODE=PMT.PRODUCT_CODE AND PMT.BIN_ID= @CBIN_ID
				LEFT OUTER JOIN BIN (NOLOCK) ON BIN.BIN_ID=ISNULL(PMT.BIN_ID, @CBIN_ID)
				JOIN ARTICLE B  (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE        
				JOIN SECTIOND SD  (NOLOCK) ON B.SUB_SECTION_CODE = SD.SUB_SECTION_CODE      
				JOIN SECTIONM SM  (NOLOCK) ON SD.SECTION_CODE = SM.SECTION_CODE      
				JOIN PARA1 C  (NOLOCK) ON A.PARA1_CODE = C.PARA1_CODE        
				JOIN PARA2 D  (NOLOCK) ON A.PARA2_CODE = D.PARA2_CODE        
				JOIN PARA3 F  (NOLOCK) ON A.PARA3_CODE = F.PARA3_CODE        
				JOIN PARA4 G  (NOLOCK) ON A.PARA4_CODE = G.PARA4_CODE        
				JOIN PARA5 H  (NOLOCK) ON A.PARA5_CODE = H.PARA5_CODE        
				JOIN PARA6 I  (NOLOCK) ON A.PARA6_CODE = I.PARA6_CODE     
				JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE = A.AC_CODE         
				LEFT OUTER JOIN UOM E  (NOLOCK) ON B.UOM_CODE = E.UOM_CODE 
				LEFT OUTER JOIN EAN_SYNC ES (NOLOCK) ON ES.PRODUCT_CODE = PR.PRODUCT_CODE    
				left outer JOIN FORM F1  (NOLOCK) ON A.FORM_ID=F1.FORM_ID       
				LEFT OUTER JOIN       
				(      
					SELECT A.PRODUCT_CODE,MRP,WS_PRICE,MAX(FROM_DT) AS  FROM_DT        
					FROM LOCSKUSP  (NOLOCK) A JOIN @TMPPRODUCTCODE B ON A.PRODUCT_CODE= B.PRODUCT_CODE      
					WHERE  DEPT_ID=@CBIN_ID  AND ( FROM_DT <= @CWHERE OR @CWHERE ='')
					GROUP BY A.PRODUCT_CODE,MRP,WS_PRICE       
					       
				)Z ON Z.PRODUCT_CODE=A.PRODUCT_CODE    
					LEFT OUTER JOIN BINUSERS LOC (NOLOCK) ON LOC.BIN_ID=ISNULL(PMT.BIN_ID,@CBIN_ID) AND LOC.USER_CODE=@CUSERCODE  
					WHERE   
					(B.STOCK_NA=1 OR (@CUSERCODE=(CASE WHEN @CUSERCODE='0000000' OR PR.QUANTITY<0 THEN @CUSERCODE ELSE LOC.USER_CODE END))
					OR @BDONOTCHECKSTOCK=1 OR ISNULL(@CDONOTCHECKSTOCK,'0')='1')
					AND ISNULL(PMT.BIN_ID,@CBIN_ID)=(CASE WHEN @BMBO_COUNTER=0 THEN ISNULL(PMT.BIN_ID,@CBIN_ID) ELSE 
													  @CBIN_ID END
				 )
				
				IF ISNULL(@CDONOTCHECKSTOCK,'0')='1'-- @BDONOTCHECKSTOCK=1  ---- DOING THIS BECAUSE APPLICATION RECHECKS THE QUANTITY IN STOCK BASED UPON QUANTITY & STOCK_NA COLUMN
				BEGIN
					UPDATE A SET QUANTITY_IN_STOCK=(CASE WHEN B.QUANTITY =0 THEN 1 ELSE B.QUANTITY END) FROM #SP_CHECKSTOCK0 A 
					 JOIN @TMPPRODUCTCODE B ON A.PRODUCT_CODE = B.PRODUCT_CODE  WHERE QUANTITY_IN_STOCK=0
					
					UPDATE #SP_CHECKSTOCK0 SET STOCK_NA=1
					
					SELECT * FROM #SP_CHECKSTOCK0  
				END	
				ELSE IF EXISTS (SELECT DEPT_ID FROM #SP_CHECKSTOCK0 WHERE  ((DEPT_ID=@CBIN_ID) OR BIN_ID =@CBIN_ID))
					SELECT  * FROM #SP_CHECKSTOCK0 WHERE (DEPT_ID=@CBIN_ID OR BIN_ID =@CBIN_ID)   --ORDER BY RNO
				ELSE IF EXISTS (SELECT DEPT_ID FROM #SP_CHECKSTOCK0 WHERE ((DEPT_ID<>@CBIN_ID) AND BIN_ID <>@CBIN_ID))  
					SELECT * FROM #SP_CHECKSTOCK0 WHERE BIN_ID <>@CBIN_ID --ORDER BY RNO
				ELSE  
					SELECT * FROM #SP_CHECKSTOCK0 --ORDER BY RNO
					 	
		  END
		       --IF @NRATEREVISION = 2
		       
		  IF @NRATEREVISION = 2 
		  BEGIN      
		       SELECT  PR.RNO,A.PRODUCT_CODE, A.ARTICLE_CODE, B.ARTICLE_NO, B.ARTICLE_NAME, A.PARA1_CODE,      
				C.PARA1_NAME, A.PARA2_CODE, D.PARA2_NAME, A.PARA3_CODE, F.PARA3_NAME, E.UOM_NAME,         
				ISNULL(PMT.DEPT_ID, @CBIN_ID) AS DEPT_ID, A.BARCODE_CODING_SCHEME AS CODING_SCHEME,  B.INACTIVE, PMT.QUANTITY_IN_STOCK,      
				A.PURCHASE_PRICE AS PURCHASE_PRICE,
				 (CASE WHEN @NMRPWS =1 THEN CASE WHEN PR.QUANTITY<0 THEN ISNULL(Z1.OLD_MRP,A.MRP) ELSE ISNULL(Z.MRP,A.MRP) END
				   WHEN @NMRPWS =2 THEN  CASE WHEN PR.QUANTITY<0 THEN ISNULL(A.WS_PRICE,0) ELSE ISNULL(Z.WS_PRICE,A.WS_PRICE) END ELSE 0 END
				)AS [MRP],    
				ISNULL(Z.WS_PRICE,A.WS_PRICE) AS WS_PRICE,       
				'' AS SCHEME_ID, SM.SECTION_NAME, SD.SUB_SECTION_NAME,      
				A.PARA4_CODE,A.PARA5_CODE,A.PARA6_CODE,      
				PARA4_NAME,PARA5_NAME,PARA6_NAME,B.UOM_CODE,ISNULL(E.UOM_TYPE,0) AS [UOM_TYPE],      
				B.DT_CREATED AS [ART_DT_CREATED],F.DT_CREATED AS [PARA3_DT_CREATED],A.DT_CREATED AS [SKU_DT_CREATED],      
				B.STOCK_NA,(CASE  WHEN ISNULL(ES.EAN,'') ='' THEN '' ELSE ES.EAN END) AS EAN,  
				F1.FORM_ID,F1.FORM_NAME,F1.TAX_PERCENTAGE , A.PRODUCT_NAME,  
				ISNULL(Z.MRP,A.MRP) AS RATE,A.ER_FLAG     ,ISNULL(A.FIX_MRP,0) AS [FIX_MRP] ,LM.AC_NAME  
				,A.INV_DT,A.RECEIPT_DT ,A.AC_CODE,B.ALIAS AS [ARTICLE_ALIAS],
				ISNULL(PMT.BIN_ID, @CBIN_ID) AS [BIN_ID],ISNULL(BIN.BIN_NAME, '') AS [BIN_NAME],'' AS [WIP_UID],
				ISNULL(HH.OLD_MRP,A.MRP ) AS OLD_MRP,
				PR.QUANTITY,PR.ERRMSG ,A.HSN_CODE,SD.LABEL_COPIES,A.EXPIRY_DT,A.EXPIRY_DT AS NEW_Expiry_DT,A.VENDOR_EAN_NO
				INTO #SP_CHECKSTOCK  
				FROM SKU A   (NOLOCK)  
				JOIN @TMPPRODUCTCODE PR ON PR.PRODUCT_CODE = A.PRODUCT_CODE 
				LEFT OUTER JOIN SKU_OH OH (NOLOCK) ON OH.product_code=A.product_code
				LEFT OUTER JOIN EAN_SYNC ES (NOLOCK) ON ES.PRODUCT_CODE = PR.PRODUCT_CODE
				LEFT OUTER JOIN  PMT01106 PMT  (NOLOCK) ON A.PRODUCT_CODE=PMT.PRODUCT_CODE  AND PMT.BIN_ID= @CBIN_ID
				LEFT OUTER JOIN BIN (NOLOCK) ON BIN.BIN_ID=ISNULL(PMT.BIN_ID, @CBIN_ID)
				JOIN ARTICLE B  (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE        
				JOIN SECTIOND SD  (NOLOCK) ON B.SUB_SECTION_CODE = SD.SUB_SECTION_CODE      
				JOIN SECTIONM SM  (NOLOCK) ON SD.SECTION_CODE = SM.SECTION_CODE      
				JOIN PARA1 C  (NOLOCK) ON A.PARA1_CODE = C.PARA1_CODE        
				JOIN PARA2 D  (NOLOCK) ON A.PARA2_CODE = D.PARA2_CODE        
				JOIN PARA3 F  (NOLOCK) ON A.PARA3_CODE = F.PARA3_CODE        
				JOIN PARA4 G  (NOLOCK) ON A.PARA4_CODE = G.PARA4_CODE        
				JOIN PARA5 H  (NOLOCK) ON A.PARA5_CODE = H.PARA5_CODE        
				JOIN PARA6 I  (NOLOCK) ON A.PARA6_CODE = I.PARA6_CODE     
				JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE = A.AC_CODE         
				LEFT OUTER JOIN UOM E  (NOLOCK) ON B.UOM_CODE = E.UOM_CODE   
				left outer JOIN FORM F1  (NOLOCK) ON A.FORM_ID=F1.FORM_ID       
				LEFT OUTER JOIN       
				(      
				  SELECT AA.PRODUCT_CODE,OLD_MRP,MAX(AA.LAST_UPDATE) AS LAST_UPDATE        
				  FROM IRD01106 AA (NOLOCK) 
				  JOIN IRM01106 (NOLOCK) LL ON AA.IRM_MEMO_ID= LL.IRM_MEMO_ID AND LL.TYPE=1
				  JOIN @TMPPRODUCTCODE tmp ON AA.PRODUCT_CODE = tmp.PRODUCT_CODE 
				  GROUP BY  AA.PRODUCT_CODE,OLD_MRP
				        
				)HH ON HH.PRODUCT_CODE=A.PRODUCT_CODE    
				LEFT OUTER JOIN       
				(      
				SELECT  LOCSKUSP.PRODUCT_CODE,MRP,WS_PRICE,MAX( FROM_DT) AS FROM_DT        
				FROM LOCSKUSP  (NOLOCK)
				JOIN @TMPPRODUCTCODE tmp ON LOCSKUSP.PRODUCT_CODE = tmp.PRODUCT_CODE       
				WHERE  DEPT_ID=@CBIN_ID  AND ( FROM_DT <= @CWHERE OR @CWHERE ='') 
				GROUP BY LOCSKUSP.PRODUCT_CODE,MRP,WS_PRICE      
				          
				)Z ON Z.PRODUCT_CODE=A.PRODUCT_CODE    
				LEFT OUTER JOIN       
				(      
					SELECT  A.PRODUCT_CODE,(CASE WHEN ISNULL(B.PATCHUP_RUN,0)=0 THEN A.MRP ELSE A.OLD_MRP END ) AS [OLD_MRP],
					MAX(B.CM_DT) AS CM_DT  
					FROM CMD01106 A  (NOLOCK)       
					JOIN CMM01106 B (NOLOCK) ON B.CM_ID=A.CM_ID 
					JOIN @TMPPRODUCTCODE P ON P.PRODUCT_CODE = A.PRODUCT_CODE  
					WHERE A.QUANTITY>0 
					AND ISNULL(B.BIN_ID,'000')=@CBIN_ID
					GROUP BY  A.PRODUCT_CODE,(CASE WHEN ISNULL(B.PATCHUP_RUN,0)=0 THEN A.MRP ELSE A.OLD_MRP END )  
					        
				)Z1 ON Z1.PRODUCT_CODE=A.PRODUCT_CODE   
				LEFT OUTER JOIN BINUSERS LOC (NOLOCK) ON LOC.BIN_ID=ISNULL(PMT.BIN_ID,@CBIN_ID) AND LOC.USER_CODE=@CUSERCODE  
				WHERE   
				(B.STOCK_NA=1 OR (@CUSERCODE=(CASE WHEN @CUSERCODE='0000000' OR PR.QUANTITY <0 THEN @CUSERCODE ELSE LOC.USER_CODE END)))  
				AND ISNULL(PMT.BIN_ID, @CBIN_ID)=(CASE WHEN @BMBO_COUNTER=0 THEN ISNULL(PMT.BIN_ID, @CBIN_ID) ELSE @CBIN_ID END)
				
				--SELECT * FROM #SP_CHECKSTOCK
				
				IF @BDONOTCHECKSTOCK=1  OR ISNULL(@CDONOTCHECKSTOCK,'0')='1'
					SELECT  * FROM #SP_CHECKSTOCK  --ORDER BY RNO
				ELSE IF EXISTS (SELECT DEPT_ID FROM #SP_CHECKSTOCK WHERE QUANTITY_IN_STOCK>0 AND ((DEPT_ID=@CBIN_ID)  OR BIN_ID =@CBIN_ID))
					SELECT  * FROM #SP_CHECKSTOCK WHERE (DEPT_ID=@CBIN_ID    OR BIN_ID =@CBIN_ID)  AND QUANTITY_IN_STOCK>0 --ORDER BY RNO
				ELSE IF EXISTS (SELECT DEPT_ID FROM #SP_CHECKSTOCK WHERE QUANTITY_IN_STOCK>0 AND ((DEPT_ID<>@CBIN_ID) AND BIN_ID <>@CBIN_ID))  
					SELECT * FROM #SP_CHECKSTOCK WHERE DEPT_ID<>@CBIN_ID    AND BIN_ID <>@CBIN_ID AND QUANTITY_IN_STOCK>0 --ORDER BY RNO
				ELSE  
					SELECT  * FROM #SP_CHECKSTOCK --ORDER BY RNO
		 
		 END
	END TRY
	BEGIN CATCH
		SET @CERRMSG = 'STEP:- '+@CSTEP+' MESSAGE:- '+ERROR_MESSAGE() 
	END CATCH	
		
		END_PROC:
		SET @CCMD = N'IF OBJECT_ID ('''+@CTEMPTABLENAME+''',''U'') IS NOT NULL
						DROP TABLE '+@CTEMPTABLENAME+''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		SET @CCMD = N'IF OBJECT_ID ('''+@CTEMPTABLENAME_GRP+''',''U'') IS NOT NULL
						DROP TABLE '+@CTEMPTABLENAME_GRP+''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD			
		IF ISNULL(@CERRMSG,'') <> ''
			SELECT @CERRMSG AS ERRMSG
		
 
END
