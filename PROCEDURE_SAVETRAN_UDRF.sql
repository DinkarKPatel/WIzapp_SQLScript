create PROCEDURE SAVETRAN_UDRF
(
	@NUPDATEMODE		NUMERIC(1,0),
	@NSPID				INT,
	@CXNMEMOID			VARCHAR(40)=''
	
)
----WITH ENCRYPTION
AS
BEGIN
	--changes by Dinkar in location id varchar(4)..
	DECLARE @CTEMPDBNAME			VARCHAR(100),
			@CMASTERTABLENAME		VARCHAR(100),
			@CDETAILTABLENAME1		VARCHAR(100),
			@CDETAILTABLENAME2		VARCHAR(100),
			@CDETAILTABLENAME3		VARCHAR(100),
			@CDETAILTABLENAME4		VARCHAR(100),
			@CTEMPMASTERTABLENAME	VARCHAR(100),
			@CTEMPDETAILTABLENAME1	VARCHAR(100),
			@CTEMPDETAILTABLENAME2	VARCHAR(100),
			@CTEMPDETAILTABLENAME3	VARCHAR(100),
			@CTEMPDETAILTABLENAME4	VARCHAR(100),
			@CTEMPMASTERTABLE		VARCHAR(100),
			@CTEMPDETAILTABLE1		VARCHAR(100),
			@CTEMPDETAILTABLE2		VARCHAR(100),
			@CTEMPDETAILTABLE3		VARCHAR(100),
			@CTEMPDETAILTABLE4		VARCHAR(100),
			@CERRMSG				VARCHAR(500),
			@LDONOTUPDATESTOCK		BIT,
			@CKEYFIELD1				VARCHAR(50),
			@CKEYFIELDVAL1			VARCHAR(50),
			@NMEMONOLEN				NUMERIC(20,0),
			@CMEMONOVAL				VARCHAR(50),
			@CDEPT_ID				VARCHAR(4),
			@CCMD					NVARCHAR(4000),
			@NSAVETRANLOOP			BIT,
			@NSTEP					INT,
			@CMEMONOPREFIX			VARCHAR(10),@cLocId char(4)

	DECLARE @OUTPUT TABLE (ERRMSG VARCHAR(2000),REPORT_ID VARCHAR(100))

	SET @NSTEP = 10		-- SETTTING UP ENVIRONMENT

	-- TEMPORARY DATABASE Discarded now onwards as per Meeting on 30-10-2020 mentioned in Client issues List
	SET @CTEMPDBNAME = ''

	SET @CMASTERTABLENAME	= 'UDRF_MST'
	SET @CDETAILTABLENAME1	= 'UDRF_DET'
	SET @CDETAILTABLENAME2	= 'UDRF_EXP'
	SET @CDETAILTABLENAME3	= 'REPORTS'
	SET @CDETAILTABLENAME4	= 'UDRF_EXP_COMP'
	
	SET @CTEMPMASTERTABLENAME	= 'TEMP_UDRF_MST_'+LTRIM(RTRIM(STR(@NSPID)))
	SET @CTEMPDETAILTABLENAME1	= 'TEMP_UDRF_DET_'+LTRIM(RTRIM(STR(@NSPID)))
	SET @CTEMPDETAILTABLENAME2	= 'TEMP_UDRF_EXP_'+LTRIM(RTRIM(STR(@NSPID)))
	SET @CTEMPDETAILTABLENAME3	= 'TEMP_REPORTS_'+LTRIM(RTRIM(STR(@NSPID)))
	SET @CTEMPDETAILTABLENAME4	= 'TEMP_UDRF_EXP_COMP_'+LTRIM(RTRIM(STR(@NSPID)))
	
	SET @CTEMPMASTERTABLE	= @CTEMPDBNAME + @CTEMPMASTERTABLENAME
	SET @CTEMPDETAILTABLE1	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME1
	SET @CTEMPDETAILTABLE2	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME2
	SET @CTEMPDETAILTABLE3	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME3
	SET @CTEMPDETAILTABLE4	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME4
	
	SET @CERRMSG			= ''
	SET @LDONOTUPDATESTOCK	= 0
	SET @CKEYFIELD1			= 'REPORT_ID'
	SET @NMEMONOLEN			= 10
	
	
	SET @CCMD = 'SELECT @CLOCID = location_code  FROM '+@CTEMPMASTERTABLE
	EXEC SP_EXECUTESQL @CCMD, N'@CLOCID VARCHAR(4) OUTPUT', @CLOCID OUTPUT
	
   	IF @cLocId=''
		SELECT @CDEPT_ID		= DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
    ELSE
		SET @CDEPT_ID=@cLocId

	BEGIN TRANSACTION
	
	BEGIN TRY
		
		/*VALIDATIONS ON THE USER DEFINED REPORTS FORMAT...*/
		/*
			1. DEFAULT REPORTS CANNOT BE EDIT.
			2. USER DEFINED REPORT FORMATS MUST REFER TO A VALID DEFAULT REPORT FORMAT.
		*/
		IF @NUPDATEMODE=3
		BEGIN
			IF ISNULL(@CXNMEMOID,'')=''
			BEGIN
				SET @CERRMSG='MEMO IS REQUIRED FOR MARKING A REPORT INACTIVE.CANNOT PROCEED.'
				GOTO END_PROC
			END
			
			SET @CKEYFIELDVAL1=@CXNMEMOID
			
			IF EXISTS(SELECT TOP 1 'U' FROM UDRF_MST WHERE REPORT_ID=@CXNMEMOID AND ISDEFAULT=1)
			BEGIN
				SET @CERRMSG='DEFAULT REPORT FORMATS CANNOT BE MODIFIED.'
				GOTO END_PROC
			END
				
			UPDATE UDRF_MST SET INACTIVE=1 WHERE REPORT_ID=@CXNMEMOID
			
			DELETE REPORTS WHERE G_REPORT_FILE=(SELECT TOP 1 XN_TYPE FROM UDRF_MST WHERE REPORT_ID=@CXNMEMOID)+@CXNMEMOID+'.RDLC'
			GOTO END_PROC
		END
		
		SET @NSTEP=20
		SET @CCMD=N'IF EXISTS(SELECT TOP 1 ''U'' FROM '+@CTEMPMASTERTABLE+' WHERE ISDEFAULT=1)
					SET @CERRMSG=''DEFAULT REPORT FORMATS CANNOT BE MODIFIED.'''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@CERRMSG VARCHAR(500) OUTPUT',@CERRMSG OUTPUT
		
		IF ISNULL(@CERRMSG,'')<>''
			GOTO END_PROC
		
		/*
		SET @NSTEP=30
		SET @CCMD=N'IF NOT EXISTS(SELECT TOP 1 ''U'' FROM '+@CTEMPMASTERTABLE+' A 
								  JOIN UDRF_MST B ON A.REF_REPORT_ID=B.REPORT_ID
								  WHERE B.ISDEFAULT=1)
					SET @CERRMSG=''NEW REPORT SHOULD BE BASED ON DEFAULT FORMAT ONLY.CANNOT PROCEED.'''
		EXEC SP_EXECUTESQL @CCMD,N'@CERRMSG VARCHAR(500) OUTPUT',@CERRMSG OUTPUT
		
		IF ISNULL(@CERRMSG,'')<>''
			GOTO END_PROC
		*/		
		SET @NSTEP = 40
		-- START UPDATING XN TABLES	
		IF @NUPDATEMODE = 1 -- ADDMODE	
		BEGIN	

		 IF ISNULL(@CDEPT_ID,'')=''
		 BEGIN
			SET @CERRMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' LOCATION ID CAN NOT BE BLANK  '  
			GOTO END_PROC    
		 END
			SET @NSTEP = 50		-- GENERATING NEW KEY
				SET @CMEMONOPREFIX=@CDEPT_ID
				-- GENERATING NEW MRR_NO		
				SET @NSAVETRANLOOP=0
				WHILE @NSAVETRANLOOP=0
				BEGIN
					EXEC GETNEXTKEY @CMASTERTABLENAME, @CKEYFIELD1, @NMEMONOLEN, @CMEMONOPREFIX, 1,
									'',0, @CKEYFIELDVAL1 OUTPUT   
					
					SET @CCMD=N'IF EXISTS ( 
											SELECT '+@CKEYFIELD1+' FROM '+@CMASTERTABLENAME+' 
											WHERE '+@CKEYFIELD1+'='''+@CKEYFIELDVAL1+''' 
										  )
									SET @NLOOPOUTPUT=0
								ELSE
									SET @NLOOPOUTPUT=1'
					PRINT @CCMD
					EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
				END

				IF @CKEYFIELDVAL1 IS NULL  OR @CKEYFIELDVAL1 LIKE '%LATER%'
				BEGIN
					  SET @CERRMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING REPORT ID....'	
					  GOTO END_PROC  		
				END

				SET @NSTEP = 60		-- GENERATING NEW ID
				-- UPDATING NEWLY GENERATED REPORT ID IN ALL RELATED TABLES
				SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' +@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''''
				PRINT @CCMD		
				EXEC SP_EXECUTESQL @CCMD
				
				SET @NSTEP = 70
				SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+'''
							 ,ROW_ID='''+@CDEPT_ID+'''+CONVERT(VARCHAR(40),NEWID())'
				PRINT @CCMD	
				EXEC SP_EXECUTESQL @CCMD
				
				SET @NSTEP = 80
				SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE2 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+'''
							 ,ROW_ID='''+@CDEPT_ID+'''+CONVERT(VARCHAR(40),NEWID())'
				PRINT @CCMD	
				EXEC SP_EXECUTESQL @CCMD
				
				SET @NSTEP = 85
				SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE4 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+'''
							 ,ROW_ID='''+@CDEPT_ID+'''+CONVERT(VARCHAR(40),NEWID())'
				PRINT @CCMD	
				EXEC SP_EXECUTESQL @CCMD
		END					-- END OF ADDMODE
		ELSE
		BEGIN
			/*START OF EDIT MODE.*/
			SET @CKEYFIELDVAL1=@CXNMEMOID
			
			SET @NSTEP = 90
			SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE2 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+'''
						 ,ROW_ID='''+@CDEPT_ID+'''+CONVERT(VARCHAR(40),NEWID())+''''
						 WHERE LEFT(LTRIM(RTRIM(ROW_ID)),5)=''LATER'''
			PRINT @CCMD	
			EXEC SP_EXECUTESQL @CCMD
			
			--SET @NSTEP = 95
			--SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE4 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+'''
			--			 ,ROW_ID='''+@CDEPT_ID+'''+CONVERT(VARCHAR(40),NEWID())+''''
			--			 WHERE LEFT(LTRIM(RTRIM(ROW_ID)),5)=''LATER'''
			--PRINT @CCMD	
			--EXEC SP_EXECUTESQL @CCMD
		
		END
	
		SET @NSTEP = 100
		EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPMASTERTABLENAME
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CMASTERTABLENAME
			, @CKEYFIELD1	= @CKEYFIELD1
			, @BALWAYSUPDATE = 1
		
		SET @NSTEP = 110		-- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES
		EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPDETAILTABLENAME1
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CDETAILTABLENAME1
			, @CKEYFIELD1	= 'ROW_ID'
			, @BALWAYSUPDATE = 1
			
		SET @NSTEP = 120		-- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES
		EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPDETAILTABLENAME2
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CDETAILTABLENAME2
			, @CKEYFIELD1	= 'ROW_ID'
			, @BALWAYSUPDATE = 1
			
		  SET @NSTEP = 130	
		 --TEMP TABLE FOR REPORT TABLE 
		    SET @CCMD = N'IF OBJECT_ID('''+@CTEMPDETAILTABLE3+''',''U'') IS NOT NULL
		                     DROP TABLE '+@CTEMPDETAILTABLE3+''
		    PRINT @CCMD	
			EXEC SP_EXECUTESQL @CCMD
		    
		    SET @CCMD = N'SELECT * INTO '+@CTEMPDETAILTABLE3+' FROM REPORTS WHERE 1>2 '
			PRINT @CCMD	
			EXEC SP_EXECUTESQL @CCMD
			
		    SET @NSTEP = 140	
		    SET @CCMD = N'INSERT INTO '+@CTEMPDETAILTABLE3+'	( G_REPORT_FILE, D_REPORT_FILE, LBL, DRAFT, ADVSETTING, LAST_UPDATE, ROW_ID, REPORT_GROUP, CUSTOM_REPORT, NOOFCOPIES, LPT_NO, MODULE_NAME, PAGE_NO, REPORT_NO, REPORT_NAME, FOR_EMAIL, REPORT_HIDE, XTAB,UDRF )  
		                  SELECT G_REPORT_FILE=A.XN_TYPE+A.REPORT_ID +''.RDLC'', D_REPORT_FILE='''', LBL=0, DRAFT=0, 
				                 ADVSETTING=0, LAST_UPDATE=GETDATE(), ROW_ID=NEWID(), REPORT_GROUP='''', 
				                 CUSTOM_REPORT=0, NOOFCOPIES=1, LPT_NO=1, 
				                 MODULE_NAME=CASE WHEN A.XN_TYPE=''WSL'' THEN ''FRMWSLINVOICE'' ELSE '''' END , 
				                 PAGE_NO=1, REPORT_NO=1, REPORT_NAME=XN_TYPE_FORMAT , 
		                         FOR_EMAIL=0, REPORT_HIDE=0, XTAB=0,UDRF=1
		                  FROM '+@CTEMPMASTERTABLENAME+' A'
			PRINT @CCMD	
			EXEC SP_EXECUTESQL @CCMD
		
		SET @NSTEP = 150		-- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES
		EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPDETAILTABLENAME3
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CDETAILTABLENAME3
			, @CKEYFIELD1	= 'MODULE_NAME'
			, @CKEYFIELD2	= 'REPORT_NAME'
			, @BALWAYSUPDATE = 1	
		
		SET @NSTEP = 160		-- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES
		EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPDETAILTABLENAME4
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CDETAILTABLENAME4
			, @CKEYFIELD1	= 'ROW_ID'
			, @BALWAYSUPDATE = 1	
				
	END TRY
	BEGIN CATCH
		SET @CERRMSG = 'P:- SAVETRAN_UDRF, STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		GOTO END_PROC
	END CATCH
	
END_PROC:
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRMSG,'')='' 
			COMMIT TRANSACTION
		ELSE
			ROLLBACK
	END
	
	INSERT @OUTPUT(ERRMSG,REPORT_ID)
		VALUES (ISNULL(@CERRMSG,''),ISNULL(@CKEYFIELDVAL1,''))

	SELECT * FROM @OUTPUT	
	
	---DROPPING TEMP TABLES
	IF ISNULL(@CERRMSG,'')=''
	SET @CCMD = N'IF OBJECT_ID('''+@CTEMPMASTERTABLE+''',''U'') IS NOT NULL
					 DROP TABLE '+@CTEMPMASTERTABLE+'
			IF OBJECT_ID('''+@CTEMPDETAILTABLE1+''',''U'') IS NOT NULL
					 DROP TABLE '+@CTEMPDETAILTABLE1+'
			IF OBJECT_ID('''+@CTEMPDETAILTABLE2+''',''U'') IS NOT NULL
					 DROP TABLE '+@CTEMPDETAILTABLE2+'
			IF OBJECT_ID('''+@CTEMPDETAILTABLE3+''',''U'') IS NOT NULL
					 DROP TABLE '+@CTEMPDETAILTABLE3+''
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD
END						
------------------------------------------------------ END OF PROCEDURE SAVETRAN_UDRF
