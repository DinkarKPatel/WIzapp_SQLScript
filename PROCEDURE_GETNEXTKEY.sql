CREATE PROCEDURE GETNEXTKEY  
	-- THESE ARE THE INPUT PARAMETERS   
	@CTABLENAME VARCHAR(40),  
	@CCOLNAME	VARCHAR(40),  
	@NWIDTH		INTEGER,  
	@CPREFIX	VARCHAR(200) = '',   
	@NLZEROS	BIT = 1,  
	@CFINYEAR	VARCHAR(40) = '',
	@NROWCOUNT	INTEGER = 0 ,	  
	@CNEWKEYVAL VARCHAR(200) OUTPUT  
--	WITH ENCRYPTION
AS  
BEGIN  
	DECLARE @NLASTKEYVAL	BIGINT,
			@NTEMPLASTKEYVAL BIGINT,
			@NVALLEN		INTEGER,
			@NTEMPWIDTH		INTEGER,
			@CZEROS			VARCHAR(40),
			@CCMD			NVARCHAR(MAX),
			@CKEYSTABLE		VARCHAR(20),
			@CLASTKEYVAL	VARCHAR(200),
			@NBOOL			BIT ,
			@CCHKNEWKEYVAL	VARCHAR(200),
			@NCOUNT			INTEGER,
			@NTMPROWCOUNT	INTEGER,
			@CMANUALPREFIX  VARCHAR(10) 	 

			IF (@CTABLENAME='CITY' AND @CCOLNAME='CITY_CODE') set @NWIDTH=10

		SET @CKEYSTABLE =		( CASE WHEN @CCOLNAME='ROW_ID' THEN 
								(CASE WHEN @CTABLENAME='PID01106' THEN 'KEYS_ROWID_PUR'		
								  WHEN @CTABLENAME='RMD01106' THEN 'KEYS_ROWID_PRT' 
								  WHEN @CTABLENAME='COD01106' THEN 'KEYS_ROWID_CHO' 
								  WHEN @CTABLENAME='CID01106' THEN 'KEYS_ROWID_CHI' 
								  WHEN @CTABLENAME='IND01106' THEN 'KEYS_ROWID_IND' 
								  WHEN @CTABLENAME='CND01106' THEN 'KEYS_ROWID_CND' 
								  ELSE 'KEYS_ROWID' END)
							 WHEN @CCOLNAME='PRODUCT_CODE' THEN 'KEYS_PMT' 
							 WHEN @CCOLNAME='CM_NO' THEN 'KEYS_CMM' 
							 WHEN @CCOLNAME='CHALLAN_NO' AND @CTABLENAME='COM01106' THEN 'KEYS_CHO'
							 WHEN @CCOLNAME='CHALLAN_NO' AND @CTABLENAME='CHM01106' THEN 'KEYS_CHM'
							 WHEN @CCOLNAME='MRR_NO' AND @CTABLENAME='PIM01106' THEN 'KEYS_PUR' 	
							 WHEN @CCOLNAME='RM_NO' AND @CTABLENAME='RMM01106' THEN 'KEYS_PRT'
							 WHEN @CCOLNAME='INV_NO' AND @CTABLENAME='INM01106' THEN 'KEYS_INM'
							 WHEN @CCOLNAME='PS_NO' AND @CTABLENAME='WPS_MST' THEN 'KEYS_WPS'
							 WHEN @CCOLNAME='CN_NO' AND @CTABLENAME='CNM01106' THEN 'KEYS_CNM'
						     --14 MAR 2018
						     WHEN @CCOLNAME='INV_NO' AND @CTABLENAME='INMSUPP' THEN 'KEYS_INMSUPP'
						     --14 MAR 2018
							 ELSE 'KEYS' END )

    --PRINT REPLICATE('*',10)+CHAR(13)+@CKEYSTABLE+CHAR(13)+REPLICATE('*',10)
	
	SELECT TOP 1 @CMANUALPREFIX=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_option='MANUAL_MST_PREFIX_'+@CTABLENAME
	
	IF ISNULL(@CMANUALPREFIX,'')<>''
		SET @CPREFIX=LTRIM(RTRIM(@CMANUALPREFIX))			 
	
	SET @CCMD = N'IF NOT EXISTS (   SELECT LASTKEYVAL FROM ' + @CKEYSTABLE + ' (nolock) 
								    WHERE TABLENAME	= ''' + @CTABLENAME + ''' 
								    AND COLUMNNAME	= ''' + @CCOLNAME + '''  
 									AND PREFIX		= ''' + @CPREFIX + ''' 
 									AND FINYEAR		= ''' + @CFINYEAR + ''' )
				  INSERT ' + @CKEYSTABLE + ' ( TABLENAME, COLUMNNAME, PREFIX, FINYEAR, LASTKEYVAL )   
 									  VALUES ( ''' + @CTABLENAME + ''', ''' + @CCOLNAME + ''', ''' + @CPREFIX + ''',
											   ''' + @CFINYEAR + ''', '''') '
	
	EXEC SP_EXECUTESQL @CCMD

	IF @CTABLENAME IN ('PARA1','PARA2','PARA3','PARA4','PARA5','PARA6')
	BEGIN
		SET @NWIDTH=9
		SET @CFINYEAR=''
	END	
	ELSE
	IF @CTABLENAME='CITY'
		SET @NWIDTH=10
			
	IF @NLZEROS = 0 OR (@CCOLNAME='CN_NO' AND @CTABLENAME='CNM01106')      -- ZERO SUFFING IS NOT ENABLED  
	BEGIN   
		SET @CCMD = N'SELECT TOP 1 @NTEMPWIDTH = LEN( LASTKEYVAL )  
					  FROM ' + @CKEYSTABLE + '  (nolock) 
					  WHERE TABLENAME = ''' + @CTABLENAME + '''  
					  AND COLUMNNAME  = ''' + @CCOLNAME + '''  
					  AND PREFIX	  = ''' + @CPREFIX + '''  
					  AND FINYEAR	  = ''' + @CFINYEAR + ''''
		
		EXEC SP_EXECUTESQL @CCMD, N'@NTEMPWIDTH INTEGER OUTPUT', @NTEMPWIDTH OUTPUT
		
		IF ISNULL(@NTEMPWIDTH,0)=0
			SET @NTEMPWIDTH = @NWIDTH
	END   
	ELSE
		SET @NTEMPWIDTH = @NWIDTH

	SELECT @NVALLEN = @NTEMPWIDTH - LEN(REPLACE(@CPREFIX,' ','0'))  
	
	IF @NVALLEN < 0  
		SELECT  @NVALLEN = 0  


	SET @CCMD = N' SELECT TOP 1 @NTEMPLASTKEYVAL = CAST( RIGHT( LASTKEYVAL, '+STR(@NVALLEN)+' ) AS BIGINT )   
				   FROM ' + @CKEYSTABLE + '  (nolock)  
				   WHERE TABLENAME = ''' + @CTABLENAME + '''  
				   AND COLUMNNAME  = ''' + @CCOLNAME + '''  
				   AND PREFIX	   = ''' + @CPREFIX + '''  
				   AND FINYEAR     = ''' + @CFINYEAR + ''''
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD, N'@NTEMPLASTKEYVAL BIGINT OUTPUT', @NTEMPLASTKEYVAL OUTPUT

	SET @NLASTKEYVAL = (@NTEMPLASTKEYVAL + 1)

	IF @NLZEROS = 1  
		SELECT @CZEROS = REPLICATE('0', @NVALLEN - LEN(@NLASTKEYVAL))  
	ELSE  
		SELECT @CZEROS = ''  
   
	SET @CZEROS=ISNULL(@CZEROS,'')
   
	SELECT  @CNEWKEYVAL = @CPREFIX + @CZEROS + LTRIM(RTRIM(CAST(@NLASTKEYVAL AS VARCHAR(200))))

	------------ START OF THE LOOP FOR GENERATION OF KEY CODES
		------------ START OF THE LOOP FOR GENERATION OF KEY CODES
	IF @NROWCOUNT>0 OR @CCOLNAME='PRODUCT_CODE'  
	BEGIN
		-- TEMPORARY # TABLE TO ROW ID STRING
		
		SELECT ROW_ID INTO #TBLTEMPROWIDSTR FROM PID01106 WHERE 1=2

		SET @NCOUNT = 1	
		SET @NBOOL = 0

		WHILE (@NBOOL=0) 
		BEGIN
			
			
			DELETE FROM #TBLTEMPROWIDSTR

			IF @NLZEROS = 1  
				SELECT @CZEROS = REPLICATE('0', @NVALLEN - LEN(@NLASTKEYVAL))  
			ELSE  
				SELECT @CZEROS = ''  

			SELECT @CNEWKEYVAL = @CPREFIX + @CZEROS + LTRIM(RTRIM(CAST(@NLASTKEYVAL AS VARCHAR(200))))
			SET @NTMPROWCOUNT = @NROWCOUNT	
		
			WHILE ( @NTMPROWCOUNT > 0 )
			BEGIN

				-- SET @NTEMPLASTKEYVAL = @NLASTKEYVAL
				SELECT @NTEMPLASTKEYVAL = (@NLASTKEYVAL + @NTMPROWCOUNT - 1 ) -- @NCOUNT)
				--SELECT @NTEMPLASTKEYVAL = (@NTEMPLASTKEYVAL + 1 ) -- @NCOUNT)

				IF @NLZEROS = 1  
					SELECT @CZEROS = REPLICATE('0', @NVALLEN - LEN(@NTEMPLASTKEYVAL))  
				ELSE  
					SELECT @CZEROS = ''  

				SET @CCHKNEWKEYVAL = @CPREFIX + @CZEROS + CAST(@NTEMPLASTKEYVAL AS VARCHAR(200))

				INSERT #TBLTEMPROWIDSTR (ROW_ID) VALUES (@CCHKNEWKEYVAL)

				SET @NTMPROWCOUNT=@NTMPROWCOUNT-1
				SET @NCOUNT=@NCOUNT+1
			END	

			SET @CCMD = N' IF NOT EXISTS (
								SELECT TOP 1 ' + @CCOLNAME + ' FROM ' + @CTABLENAME + '  (nolock) 
			 					WHERE ' + @CCOLNAME + ' IN ( SELECT ROW_ID FROM #TBLTEMPROWIDSTR ) )
						   SET @NBOOL = 1'
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD, N'@NBOOL BIT OUTPUT', @NBOOL OUTPUT

			IF @NLZEROS = 1  
				SELECT @CZEROS = REPLICATE('0', @NVALLEN - LEN(@NLASTKEYVAL))  
			ELSE  
				SELECT @CZEROS = ''  

			SELECT @CNEWKEYVAL = @CPREFIX + @CZEROS + LTRIM(RTRIM(CAST(@NLASTKEYVAL AS VARCHAR(200))))

			IF @NBOOL = 0 
			BEGIN
				SET @NLASTKEYVAL = @NLASTKEYVAL + @NROWCOUNT
			END
		END   
	END	
	------------ END OF THE LOOP FOR GENERATION OF KEY CODES 
	IF @CNEWKEYVAL IS NOT NULL 
	BEGIN
		 SET @CCMD = N' UPDATE ' + @CKEYSTABLE + '  WITH (ROWlock) 
						SET LASTKEYVAL  = ''' + @CNEWKEYVAL + '''  
						WHERE TABLENAME = ''' + @CTABLENAME + '''  
						AND COLUMNNAME	= ''' + @CCOLNAME + '''  
						AND PREFIX		= ''' + @CPREFIX + '''  
						AND FINYEAR		= ''' + @CFINYEAR + ''''  
		  PRINT @CCMD	
		  EXEC SP_EXECUTESQL @CCMD     
	END

	SELECT @CNEWKEYVAL = (CASE WHEN @CNEWKEYVAL IS NULL THEN 'NULL' ELSE @CNEWKEYVAL END )
END
