create PROCEDURE SP_DSR_PENDING_CREDITNOTES
( @CUSTOMER_CODE VARCHAR(20),
  @MEMO_DATE DATETIME,
  @BSHOW BIT,
  @LOC_ID VARCHAR(10)='',
  @BCALLEDFROMAPI BIT=0,
  @NAGEING INT =0,
  @SUMMARY INT=0,
  @BIN_ID VARCHAR(10)=''
)
--WITH ENCRYPTION
AS
BEGIN

--(dinkar) Replace  left(memoid,2) to Location_code 
	BEGIN TRY
		DECLARE @CSTEP VARCHAR(50),@CERRMSG VARCHAR(MAX),@CMOBILENO VARCHAR(15),@CFILTER VARCHAR(MAX),
		@CCMD NVARCHAR(MAX),@DATE VARCHAR(10),@CM_DT_WHERE_FILTER NVARCHAR(MAX),@ADV_DT_WHERE_FILTER NVARCHAR(MAX)
		SET @CSTEP = 00
		
		DECLARE @CUTOFF_DATE DATETIME 
	  SElect @CUTOFF_DATE=ISNULL(value,'') from config where config_option='CUTOFF_DATE_FOR_PENDING_ADV_CN_CR'
	  
	  	SET @DATE = CONVERT(VARCHAR,@MEMO_DATE,120)

	  IF ISNULL(@CUTOFF_DATE,'')=''
	  BEGIN
			SET @CM_DT_WHERE_FILTER='CM_DT <='''+@DATE+''''
			SET @ADV_DT_WHERE_FILTER='ADV_REC_DT <='''+@DATE+''''
	  END
	  SET @CSTEP = 021
	  IF ISNULL(@CUTOFF_DATE,'')<>''
	  BEGIN
			SET @CM_DT_WHERE_FILTER='CM_DT BETWEEN '''+CONVERT(VARCHAR,@CUTOFF_DATE,120)+''' AND  '''+@DATE+''''
			SET @ADV_DT_WHERE_FILTER='ADV_REC_DT BETWEEN '''+CONVERT(VARCHAR,@CUTOFF_DATE,120)+''' AND  '''+@DATE+''''
	  END
	  

		  SET @CSTEP = 100
	IF @BCALLEDFROMAPI=0
	 BEGIN	
			IF ISNULL(@CMOBILENO,'')=''
				SET @CMOBILENO = ''
				
			SET @CSTEP = 10
			IF ISNULL(@CUSTOMER_CODE,'') = ''
			BEGIN
				SET @CFILTER=''
				
			END
			ELSE
			BEGIN
				SET @CFILTER='CUSTOMER_CODE = '''+@CUSTOMER_CODE+''' AND'
			END
			
			SET @CSTEP = 20
			IF ISNULL(@MEMO_DATE,'') = ''
			BEGIN
				SET @CERRMSG = 'CAN NOT ACCEPT A BLANK DATE.'
				GOTO END_PROC
			END
			SET @CSTEP = 25
			SET @DATE = CONVERT(VARCHAR,@MEMO_DATE,120)
			SET @CSTEP = 30
			IF OBJECT_ID('TEMPDB..#PENDING_CREDITNOTES_1','U') IS NOT NULL
				DROP TABLE #PENDING_CREDITNOTES_1
			
			CREATE TABLE #PENDING_CREDITNOTES_1(CM_ID VARCHAR(50),CUSTOMER_CODE VARCHAR(25),CM_NO VARCHAR(50),CM_DT DATETIME,NET_AMOUNT NUMERIC(14,2),QUANTITY NUMERIC(14,2))
			SET @CCMD = N'SELECT A.CM_ID,A.CUSTOMER_CODE,A.CM_NO,A.CM_DT,SUM(PAY.AMOUNT) AS NET_AMOUNT ,B.QUANTITY
						FROM CMM01106 (NOLOCK) A 
						JOIN PAYMODE_XN_DET PAY ON A.CM_ID=PAY.MEMO_ID
						LEFT OUTER JOIN 
						(
						 SELECT CM_ID ,SUM(QUANTITY) AS QUANTITY
						 FROM CMD01106 (NOLOCK) 
						 GROUP BY CM_ID
						 )B ON A.CM_ID=B.CM_ID
						 
						WHERE '+@CFILTER+'  
						'+@CM_DT_WHERE_FILTER+'
						 AND CANCELLED = 0 
						AND SUBSTRING(CM_NO,5,1) = ''N''
						AND A.CANCELLED=0
						AND PAY.XN_TYPE=''SLS'' AND PAY.PAYMODE_CODE=''0000004'' 
						AND ('''+@LOC_ID+'''='''' OR a.location_code='''+@LOC_ID+''')
						AND '+@CM_DT_WHERE_FILTER+'
						GROUP BY A.CM_ID,A.CUSTOMER_CODE,A.CM_NO,A.CM_DT,B.QUANTITY'
			
			PRINT @CCMD 
			
			INSERT INTO #PENDING_CREDITNOTES_1
			EXEC SP_EXECUTESQL @CCMD
			
			SET @CSTEP = 40
			
			
			--IF OBJECT_ID('TEMPDB..#PENDING_CREDITNOTES_2','U') IS NOT NULL
			--	DROP TABLE #PENDING_CREDITNOTES_2
			--CREATE TABLE #PENDING_CREDITNOTES_2(AMOUNT NUMERIC(14,2),ADJ_MEMO_ID VARCHAR(50))
			--SET @CCMD = N'SELECT A.AMOUNT,A.ADJ_MEMO_ID FROM PAYMODE_XN_DET (NOLOCK) A WHERE ('''+@LOC_ID+'''='''' OR LEFT(A.ADJ_MEMO_ID,2)='''+@LOC_ID+''')'
			--PRINT @CCMD
			--INSERT INTO #PENDING_CREDITNOTES_2
			--EXEC SP_EXECUTESQL @CCMD
			
			IF OBJECT_ID('TEMPDB..#PENDING_CREDITNOTES_2','U') IS NOT NULL
				DROP TABLE #PENDING_CREDITNOTES_2
			CREATE TABLE #PENDING_CREDITNOTES_2(AMOUNT NUMERIC(14,2),ADJ_MEMO_ID VARCHAR(50))
			
		    SET @CCMD = N'	
		    SELECT SUM(A.AMOUNT) AS ADJ_AMOUNT ,ADJ_MEMO_ID 
			FROM PAYMODE_XN_DET A     
			JOIN CMM01106 B ON A.MEMO_ID=B.CM_ID
			WHERE '+@CM_DT_WHERE_FILTER+' AND XN_TYPE=''SLS''    
			AND PAYMODE_CODE=''0000001'' AND B.CANCELLED=0 
			AND  ('''+@LOC_ID+'''='''' OR a.adj_location_Code='''+@LOC_ID+''')
			GROUP BY ADJ_MEMO_ID
			UNION ALL    
			SELECT SUM(A.AMOUNT) AS ADJ_AMOUNT, ADJ_MEMO_ID  
			FROM PAYMODE_XN_DET A     
			JOIN ARC01106 B ON A.MEMO_ID=B.ADV_REC_ID  
			WHERE '+@ADV_DT_WHERE_FILTER+' AND 
			PAYMODE_CODE=''0000001'' AND B.CANCELLED=0 
			AND  ('''+@LOC_ID+'''='''' OR a.adj_location_Code='''+@LOC_ID+''')
			GROUP BY ADJ_MEMO_ID'
				PRINT @CCMD 
			INSERT INTO #PENDING_CREDITNOTES_2
			EXEC SP_EXECUTESQL @CCMD
			
			
			
			SET @CSTEP = 50	
			IF OBJECT_ID('TEMPDB..#PENDING_CREDITNOTES_3','U') IS NOT NULL
				DROP TABLE #PENDING_CREDITNOTES_3
				 
			SELECT A.CM_ID,A.CM_NO,A.CM_DT,C.CUSTOMER_FNAME+' '+C.CUSTOMER_LNAME AS CUSTOMER_NAME,
			C.USER_CUSTOMER_CODE AS CUSTOMER_ID,A.NET_AMOUNT,ISNULL(B.AMOUNT,0) AS AMOUNT,ISNULL(A.QUANTITY,0)AS QUANTITY 
			INTO #PENDING_CREDITNOTES_3 FROM #PENDING_CREDITNOTES_1 A LEFT OUTER JOIN #PENDING_CREDITNOTES_2 B
			ON A.CM_ID = B.ADJ_MEMO_ID 
			LEFT OUTER JOIN CUSTDYM C ON A.CUSTOMER_CODE = C.CUSTOMER_CODE
			WHERE  ISNULL(B.AMOUNT,0)=0
			
		--SELECT * FROM #PENDING_CREDITNOTES_3 WHERE CM_ID ='JM0111900000JM12N-0003'
				SET @CSTEP = 60
				SELECT  CM_NO,CM_DT,CUSTOMER_NAME,CUSTOMER_ID, ABS(NET_AMOUNT+AMOUNT) AS AMOUNT,
				DATEDIFF(DD,CM_DT,@MEMO_DATE) AS AGEING FROM #PENDING_CREDITNOTES_3
				WHERE NET_AMOUNT+AMOUNT  < 0 AND @BSHOW = 1
		END
		
	ELSE 
	BEGIN
			SET @CSTEP = 80
			IF OBJECT_ID('TEMPDB..#PENDING_CREDITNOTES_API','U') IS NOT NULL
				DROP TABLE #PENDING_CREDITNOTES_API
				
			SELECT A.CM_ID,A.CUSTOMER_CODE,A.CM_NO,A.CM_DT,A.NET_AMOUNT ,P.CN_AMOUNT,ISNULL(ADJ_AMOUNT,0) AS ADJ_AMOUNT,
			DATEDIFF(DD,A.CM_DT,@MEMO_DATE) AS AGEING  
			INTO #PENDING_CREDITNOTES_API
			FROM CMM01106 (NOLOCK) A
			JOIN --ADD BELOW LOGIC BY ON 16-05-2017 STARTED
			(
			 SELECT MEMO_ID,ABS(SUM(AMOUNT)) AS [CN_AMOUNT] FROM DBO.PAYMODE_XN_DET WITH(NOLOCK)
			 WHERE PAYMODE_CODE ='0000004' AND AMOUNT< =0 AND XN_TYPE ='SLS'
			 GROUP BY MEMO_ID
			)P ON A.CM_ID = P.MEMO_ID
			
			LEFT OUTER JOIN
			(
			 SELECT PY.ADJ_MEMO_ID ,SUM(PY.AMOUNT) AS ADJ_AMOUNT 
			 FROM PAYMODE_XN_DET PY (NOLOCK)
			 JOIN CMM01106 CM ON CM.CM_ID = PY.MEMO_ID
			 WHERE PAYMODE_CODE='0000004' AND CM.CANCELLED = 0
			 GROUP BY ADJ_MEMO_ID
			 
			) B ON A.CM_ID=B.ADJ_MEMO_ID --ADD BELOW LOGIC BY ON 16-05-2017 END
			 WHERE   ((@CUTOFF_DATE='' AND CM_DT<=@MEMO_DATE) OR (ISNULL(@CUTOFF_DATE,'')<>'' AND 
	                CM_DT BETWEEN @CUTOFF_DATE AND @MEMO_DATE)) 
			 AND CANCELLED = 0 
			 AND SUBSTRING(A.CM_NO,5,1) = 'N'
			AND A.CANCELLED=0
			AND (@LOC_ID='' OR a.location_Code =@LOC_ID)
			AND CN_AMOUNT - ISNULL(ADJ_AMOUNT,0)  > 0  --THIS LINE CHANGED BY ON 16-05-2017
			
			
            
            IF @SUMMARY =1
            BEGIN
               SELECT 'CREDIT NOTE' AS TYPE,COUNT(*) AS TOTAL_MEMOES,
			   SUM(ISNULL(CN_AMOUNT,0)) AS AMOUNT,
			   0 AS QUANTITY
			   FROM #PENDING_CREDITNOTES_API
            END
            ELSE
            BEGIN
				SELECT CM_NO AS CM_NO,C.USER_CUSTOMER_CODE  AS CUSTOMER_ID ,A.CM_DT,
				ISNULL(CUSTOMER_FNAME,'')+' '+ISNULL(CUSTOMER_LNAME,'') AS CUSTOMER_NAME, 
				ABS(CN_AMOUNT- ADJ_AMOUNT) AS AMOUNT,
				SUM(QUANTITY) AS QUANTITY,AGEING
				FROM #PENDING_CREDITNOTES_API A
				JOIN CMD01106 B ON A.CM_ID=B.CM_ID 
				JOIN CUSTDYM C ON A.CUSTOMER_CODE=C.CUSTOMER_CODE
				WHERE AGEING>=@NAGEING
				GROUP BY ISNULL(CUSTOMER_FNAME,'')+' '+ISNULL(CUSTOMER_LNAME,''),A.CM_NO,
				A.CM_DT,ABS(CN_AMOUNT- ADJ_AMOUNT),AGEING,C.USER_CUSTOMER_CODE,A.CM_DT 
				ORDER BY AGEING DESC
			END
	END
		
	END TRY
	BEGIN CATCH
		SET @CERRMSG = 'P:SP_DSR_PENDING_CREDITNOTES STEP:'+@CSTEP+ERROR_MESSAGE()
	END CATCH
	END_PROC:
	IF ISNULL(@CERRMSG,'') <> ''
		SELECT @CERRMSG AS ERRMSG
END
--********************************* END OF PROCEDURE SP_DSR_PENDING_CREDITNOTES
