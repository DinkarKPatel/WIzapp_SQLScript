CREATE PROC SP_GENERATE_TRAN_DETAIL_GRON(@LOC VARCHAR(10),@SALE_DATE DATE,@POS VARCHAR(10)='',@APP_FOLDER VARCHAR(200))            
AS              
BEGIN              
--            
SET NOCOUNT ON          
IF(SELECT TOP  1  DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID )!=@LOC    
   BEGIN    
      RAISERROR('INVALID LOCATION',0,1) WITH NOWAIT    
      RETURN          
   END    
IF @POS=''  
   SET @POS=@LOC     
SELECT @LOC=UPPER(@LOC),@POS=UPPER(@POS)     

IF OBJECT_ID('IDOC_GEN','U') IS NULL          
   CREATE TABLE IDOC_GEN(DEPT_ID VARCHAR(10),LEASE_ID VARCHAR(100),POS_NMBR VARCHAR(10),SNO VARCHAR(4))              
--SET @SALE_DATE=CAST(YEAR(@SALE_DATE) AS VARCHAR)+'-'+RIGHT('00'+CAST(DAY(@SALE_DATE)AS VARCHAR),2)+'-'+RIGHT('00'+CAST(MONTH(@SALE_DATE)AS VARCHAR),2)             
SET @SALE_DATE=DATEADD(DD,-1,@SALE_DATE)

DECLARE @ERR VARCHAR(1000),@ISBLANK BIT          
SET @ISBLANK=0          
--BEGIN TRY             
    
EXEC SP_CONFIGURE 'SHOW ADVANCED OPTIONS', 1;            
RECONFIGURE;            
EXEC SP_CONFIGURE 'XP_CMDSHELL', 1;            
RECONFIGURE;            
    
DECLARE @IN_PATH VARCHAR(1000),@OUT_PATH VARCHAR(1000),@ID INT              
DECLARE @MYFILE VARCHAR(MAX),@LINE_ITEMS VARCHAR(MAX),@ID_VALUE INT            
SET @ID_VALUE=0            
          
SET @OUT_PATH=@APP_FOLDER          
          
IF RIGHT(RTRIM(@OUT_PATH),1)='\'            
   SET @OUT_PATH=LEFT(LTRIM(RTRIM(@OUT_PATH)),LEN(LTRIM(RTRIM(@OUT_PATH)))-1)            
          
DECLARE @FIN VARCHAR(100),@IDOC_NO VARCHAR(100),@SEP VARCHAR(5) ,@LEASEID VARCHAR(100)           
SELECT TOP 1 @FIN=FIN_YEAR FROM CMM01106(NOLOCK)WHERE location_Code =@LOC AND CM_DT=@SALE_DATE          
SET @SEP='^|'          
SET @IDOC_NO=''          
SET @LINE_ITEMS=''          
SET @LEASEID='T019340000695'          
          
IF EXISTS(SELECT * FROM IDOC_GEN (NOLOCK) WHERE DEPT_ID=@LOC AND POS_NMBR=@POS)          
   SELECT @ID_VALUE=MAX(CAST(SNO AS INT)) FROM IDOC_GEN (NOLOCK) WHERE DEPT_ID=@LOC AND POS_NMBR=@POS          
ELSE          
   SET @ID_VALUE=0          
             
IF @ID_VALUE=9999          
   SET @ID_VALUE=0          
       
IF @ID_VALUE=0               
   SELECT @IDOC_NO='T'+@LEASEID+'_'+@POS+'_'+'0001'+'_'+SUBSTRING(CONVERT(VARCHAR,GETDATE(),112),3,6)+LEFT(REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),4)+'.TXT'           
ELSE          
   SELECT @IDOC_NO='T'+@LEASEID+'_'+@POS+'_'+RIGHT('0000'+CAST(MAX(CAST(@ID_VALUE+1 AS INT)) AS VARCHAR),4)+'_'+SUBSTRING(CONVERT(VARCHAR,GETDATE(),112),3,6)+LEFT(REPLACE(CONVERT(VARCHAR,GETDATE(),108),':',''),4)+'.TXT'           
   FROM IDOC_GEN (NOLOCK) WHERE DEPT_ID=@LOC AND POS_NMBR=@POS          
          
SELECT @IDOC_NO AS [FILE_NAME]          
    
DECLARE @SHOP_NMBR VARCHAR(14),@POS_NMBR VARCHAR(10),@RECEIPT_NMBR VARCHAR(10),@TRAN_FILE_NMBR INT          
,@DATE CHAR(8),@TIME CHAR(8),@USER_ID VARCHAR(10),@SHIFT_NMBR INT,@TRAN_TYPE VARCHAR(10),@SALEDATE DATE,@CMID VARCHAR(100)          
,@DISC_AMT FLOAT,@ITEM_NSALE FLOAT,@ITEM_STAX FLOAT,@TAX FLOAT,@PAYMODE_NAME VARCHAR(100)          
,@TENDER_TYPE CHAR(1),@TENDER_AMOUNT FLOAT,@TENDER_AMOUNT_CONV FLOAT,@TAX_TYPE VARCHAR(1),@REF_RECPT VARCHAR(100)          
          
--HEADER:CMD_CODE=1          
SELECT @SHOP_NMBR=@LEASEID,@POS_NMBR=@POS,@TRAN_FILE_NMBR=@ID_VALUE+1          
SELECT @DATE=CONVERT(VARCHAR,GETDATE(),112),@TIME=CONVERT(VARCHAR,GETDATE(),108)          
          
SELECT @RECEIPT_NMBR=MIN(CM_NO)           
FROM CMM01106 (NOLOCK)           
WHERE location_Code =@LOC AND CM_DT=@SALE_DATE AND SUBSTRING(CM_NO,5,1) NOT IN ('R','N')          
          
IF ISNULL(@RECEIPT_NMBR,'')=''           
   BEGIN          
      SET @ISBLANK=1          
      SELECT @RECEIPT_NMBR=MAX(CM_NO)           
      FROM CMM01106 (NOLOCK)           
      WHERE location_Code =@LOC AND SUBSTRING(CM_NO,5,1) NOT IN ('R','N')          
      GOTO BL_OPEN          
   END          
ELSE             
   IF RIGHT(@RECEIPT_NMBR,5)='00001'          
      SET @RECEIPT_NMBR=LEFT(@RECEIPT_NMBR,LEN(@RECEIPT_NMBR)-1)+'0'          
   ELSE          
      SELECT @RECEIPT_NMBR=MAX(CM_NO) FROM CMM01106 (NOLOCK) WHERE location_Code =@LOC AND SUBSTRING(CM_NO,5,1) NOT IN ('R','N') AND CM_NO<@RECEIPT_NMBR          
             
PRINT @RECEIPT_NMBR          
BL_OPEN:          
SET @LINE_ITEMS='1^|OPENED^|'          
+ISNULL(@SHOP_NMBR,'')+'^|'          
+ISNULL(@POS_NMBR,'')+'^|'          
+ISNULL(@RECEIPT_NMBR,'')+'^|'          
+RIGHT('0000'+CAST(ISNULL(@TRAN_FILE_NMBR,0) AS VARCHAR),4)+'^|'
+@DATE+'^|'          
+@TIME+'^|'          
+ISNULL(@USER_ID,'')+'^|'          
+CONVERT(VARCHAR,@SALE_DATE,112)          
SELECT @LINE_ITEMS='ECHO '+@LINE_ITEMS+' > '+@OUT_PATH+'\'+@IDOC_NO          
SET @LINE_ITEMS='EXEC MASTER..XP_CMDSHELL '''+@LINE_ITEMS+''''            
EXEC (@LINE_ITEMS)           
          
IF @ISBLANK=1          
   GOTO BL_CLOSE          
--DETAIL           
DECLARE DTL CURSOR FOR          
--SALE          
SELECT CM_ID,CM_NO RECEIPT_NUMBER,CM_DT [SALEDATE],'SALE'TRANSTAT,REF_CM_ID          
FROM CMM01106 (NOLOCK)          
WHERE location_Code =@LOC AND CM_DT=@SALE_DATE           
AND SUBSTRING(CM_NO,5,1) NOT IN ('R','N')           
AND CANCELLED=0          
UNION          
--CASH REFUND          
SELECT CM_ID,CM_NO RECEIPT_NUMBER,CM_DT [SALEDATE],'SALE'TRANSTAT,REF_CM_ID          
FROM CMM01106 (NOLOCK)          
WHERE location_Code =@LOC AND CM_DT=@SALE_DATE           
AND SUBSTRING(CM_NO,5,1) LIKE 'R'           
AND CANCELLED=0          
UNION          
--CREDIT_NOTE REFUND          
SELECT CM_ID,CM_NO RECEIPT_NUMBER,CM_DT [SALEDATE],'SALE'TRANSTAT,REF_CM_ID          
FROM CMM01106 (NOLOCK)          
WHERE location_Code =@LOC AND CM_DT=@SALE_DATE           
AND SUBSTRING(CM_NO,5,1) LIKE 'N'           
AND CANCELLED=0          
ORDER BY 4 DESC,1          
          
OPEN DTL          
FETCH NEXT FROM DTL INTO @CMID,@RECEIPT_NMBR,@SALEDATE,@TRAN_TYPE,@REF_RECPT          
WHILE @@FETCH_STATUS=0          
  BEGIN          
    --CMD_CODE=101           
    SET @LINE_ITEMS='101^|'+@RECEIPT_NMBR+'^|'          
    +''+'^|'--SHIFT NUMBER          
    +CONVERT(VARCHAR,@SALEDATE,112)+'^|'          
    +''+'^|'--TIME          
    +'MANAGER'+'^|'--USER ID          
    +''+'^|'--MANUAL RECEIPT          
    +ISNULL(@REF_RECPT,'')+'^|'--REFUND          
    +''+'^|'--REASON CODE          
    +''+'^|'--SALESMAN CODE          
    +''+'^|'--TABLE NMBR          
    +''+'^|'--CUST COUNT          
    +'N'+'^|'--TRAINING          
    +ISNULL(@TRAN_TYPE,'')          
    SELECT @LINE_ITEMS='ECHO '+@LINE_ITEMS+' >> '+@OUT_PATH+'\'+@IDOC_NO          
    SET @LINE_ITEMS='EXEC MASTER..XP_CMDSHELL '''+@LINE_ITEMS+''''            
    EXEC (@LINE_ITEMS)           
              
    --CMD_CODE=111          
    DECLARE @PROD VARCHAR(100),@QTY FLOAT,@PRICE FLOAT,@ITM_FLAG VARCHAR(10)          
    DECLARE ITM CURSOR FOR          
    SELECT PRODUCT_CODE,QUANTITY,MRP,''FLAG,DISCOUNT_AMOUNT          
    ,(QUANTITY*MRP)-DISCOUNT_AMOUNT-(IGST_AMOUNT+CGST_AMOUNT+SGST_AMOUNT)-CMM_DISCOUNT_AMOUNT AS ITEM_NSALE          
    ,IGST_AMOUNT+CGST_AMOUNT+SGST_AMOUNT AS ITEM_STAX          
    FROM CMD01106(NOLOCK) WHERE CM_ID=@CMID          
    OPEN ITM          
    FETCH NEXT FROM ITM INTO @PROD,@QTY,@PRICE,@ITM_FLAG,@DISC_AMT,@ITEM_NSALE,@ITEM_STAX          
    WHILE @@FETCH_STATUS=0          
      BEGIN          
        SET @LINE_ITEMS='111^|'          
        +ISNULL(@PROD,'')+'^|'          
        +CAST(ISNULL(@QTY,0) AS VARCHAR)+'^|'          
        +CAST(ISNULL(@PRICE,0) AS VARCHAR)+'^|'          
        +CAST(ISNULL(@PRICE,0) AS VARCHAR)+'^|'          
        +ISNULL(@ITM_FLAG,'')+'^|'          
        +''+'^|'--TAXCODE          
        +''+'^|'--DISC CODE          
        +CAST(ISNULL(@DISC_AMT,0) AS VARCHAR)+'^|'          
        +''+'^|'--ITEM DEPT          
        +''+'^|'--ITEM CATG          
        +''+'^|'--LABEL KEYS          
        +''+'^|'--ITEM COMM          
        +CAST(ISNULL(@ITEM_NSALE,0) AS VARCHAR)+'^|'          
        +CAST(ISNULL(@DISC_AMT,0) AS VARCHAR)+'^|'          
        +'$'+'^|'--DISC SIGN          
        +CAST(ISNULL(@ITEM_STAX,0) AS VARCHAR)+'^|'          
        +''--PLU CODE          
        SELECT @LINE_ITEMS='ECHO '+@LINE_ITEMS+' >> '+@OUT_PATH+'\'+@IDOC_NO          
        SET @LINE_ITEMS='EXEC MASTER..XP_CMDSHELL '''+@LINE_ITEMS+''''            
        EXEC (@LINE_ITEMS)           
        --          
        FETCH NEXT FROM ITM INTO @PROD,@QTY,@PRICE,@ITM_FLAG,@DISC_AMT,@ITEM_NSALE,@ITEM_STAX          
      END          
    CLOSE ITM          
    DEALLOCATE ITM          
              
    --CMD_CODE=121 FOOTER OF TXN; TAXES, DISCOUNT ETC          
    SELECT @ITEM_NSALE=CASE @TRAN_TYPE WHEN 'SALE' THEN 1 ELSE -1 END*          
        SUM(--GROSS AMOUNT          
       (QUANTITY*MRP)          
       --TAX          
       --CASE TAX_METHOD WHEN 2 THEN ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0) ELSE 0 END          
        )          
    ,@DISC_AMT=SUM(ISNULL(CMM_DISCOUNT_AMOUNT,0)+ISNULL(DISCOUNT_AMOUNT,0))          
    ,@TAX=SUM(ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0))          
    ,@TAX_TYPE=CASE TAX_METHOD WHEN 2 THEN 'E' ELSE 'I' END          
    FROM CMD01106(NOLOCK) WHERE CM_ID=@CMID          
    GROUP BY TAX_METHOD          
              
    SET @LINE_ITEMS='121^|'          
        +CAST(@ITEM_NSALE AS VARCHAR)+'^|'          
        +CAST(@DISC_AMT AS VARCHAR)+'^|'          
        +''+'^|'--CESS          
        +''+'^|'--CHARGES          
        +CAST(@TAX AS VARCHAR)+'^|'          
        +ISNULL(@TAX_TYPE,'') +'^|'--TAX_TYPE=I/E          
        +''+'^|'--EXECPT GST          
        +''+'^|'--DISCOUNT CODE          
        +''+'^|'--OTHER CHARGES          
        +''+'^|'--DISCOUNT PER          
    SELECT @LINE_ITEMS='ECHO '+@LINE_ITEMS+' >> '+@OUT_PATH+'\'+@IDOC_NO          
    SET @LINE_ITEMS='EXEC MASTER..XP_CMDSHELL '''+@LINE_ITEMS+''''            
    EXEC (@LINE_ITEMS)               
           
    --CMD_CODE=131 FOOTER OF TXN; PAYMODE MODE ETC          
    DECLARE TENDER CURSOR FOR          
    SELECT 'C',AMOUNT,AMOUNT*XD.CURRENCY_CONVERSION_RATE,PM.PAYMODE_GRP_CODE          
    FROM PAYMODE_XN_DET XD(NOLOCK) JOIN PAYMODE_MST PM (NOLOCK) ON PM.PAYMODE_CODE=XD.PAYMODE_CODE          
    WHERE MEMO_ID=@CMID AND PAYMODE_NAME='CREDIT ISSUED' AND XN_TYPE='SLS'          
    UNION          
    SELECT 'T',AMOUNT,AMOUNT*XD.CURRENCY_CONVERSION_RATE,PM.PAYMODE_GRP_CODE          
    FROM PAYMODE_XN_DET XD(NOLOCK) JOIN PAYMODE_MST PM (NOLOCK) ON PM.PAYMODE_CODE=XD.PAYMODE_CODE          
    WHERE MEMO_ID=@CMID AND PAYMODE_NAME!='CREDIT ISSUED' AND XN_TYPE='SLS'          
              
    OPEN TENDER          
    FETCH NEXT FROM TENDER INTO @TENDER_TYPE,@TENDER_AMOUNT,@TENDER_AMOUNT_CONV,@PAYMODE_NAME          
    WHILE @@FETCH_STATUS=0          
      BEGIN          
		SET @LINE_ITEMS='131^|'          
		+ISNULL(@TENDER_TYPE,'')+'^|'          
		+CASE ISNULL(@PAYMODE_NAME,'') WHEN '0000001' THEN 'CASH' WHEN '0000002' THEN 'VISACARD' ELSE '' END+'^|'          
		+'INR'+'^|'--CURR CODE          
		+CASE ISNULL(@PAYMODE_NAME,'') WHEN '0000001' THEN '1.0000' WHEN '0000002' THEN '1.0000' ELSE '0.0000' END+'^|'--BUY RATE          
		+CAST(ISNULL(@TENDER_AMOUNT,0) AS VARCHAR)+'^|'          
		+''+'^|'--REMARKS1          
		+''+'^|'--REMARKS2          
		+''+'^|'--REMARKS3          
		+CASE ISNULL(@PAYMODE_NAME,'') WHEN '0000001' THEN CAST(ISNULL(@TENDER_AMOUNT_CONV,0) AS VARCHAR) WHEN '0000002' THEN CAST(ISNULL(@TENDER_AMOUNT_CONV,0) AS VARCHAR) ELSE '0.0000' END          
     
		SELECT @LINE_ITEMS='ECHO '+@LINE_ITEMS+' >> '+@OUT_PATH+'\'+@IDOC_NO          
		SET @LINE_ITEMS='EXEC MASTER..XP_CMDSHELL '''+@LINE_ITEMS+''''            
		
		EXEC (@LINE_ITEMS)               
		--NEXT TENDER          
		FETCH NEXT FROM TENDER INTO @TENDER_TYPE,@TENDER_AMOUNT,@TENDER_AMOUNT_CONV,@PAYMODE_NAME          
      END          
    CLOSE TENDER          
    DEALLOCATE TENDER          
	--NEXT BILL/REFUND            
    FETCH NEXT FROM DTL INTO @CMID,@RECEIPT_NMBR,@SALEDATE,@TRAN_TYPE,@REF_RECPT          
  END          
  CLOSE DTL          
  DEALLOCATE DTL          
            
--FOOTER:CMD_CODE=1          
SELECT @SHOP_NMBR=@LEASEID,@POS_NMBR=@POS,@TRAN_FILE_NMBR=@ID_VALUE+1,@USER_ID=''          
SELECT @DATE=CONVERT(VARCHAR,GETDATE(),112),@TIME=CONVERT(VARCHAR,GETDATE(),108)          
SELECT @RECEIPT_NMBR=MAX(CM_NO) FROM CMM01106 WHERE location_Code =@LOC AND CM_DT=@SALE_DATE AND CM_NO NOT LIKE '%R%' AND CM_NO NOT LIKE '%N%'          
SET @RECEIPT_NMBR=LEFT(@RECEIPT_NMBR,CHARINDEX('-',@RECEIPT_NMBR))+RIGHT('00000'+CAST(CAST(RIGHT(@RECEIPT_NMBR,5) AS INT)+1 AS VARCHAR),5)          
BL_CLOSE:          
SET @LINE_ITEMS='1^|CLOSED^|'          
+ISNULL(@SHOP_NMBR,'')+'^|'          
+ISNULL(@POS_NMBR,'')+'^|'          
+ISNULL(@RECEIPT_NMBR,'')+'^|'          
+RIGHT('0000'+CAST(ISNULL(@TRAN_FILE_NMBR,0) AS VARCHAR),4)+'^|'
+@DATE+'^|'          
+@TIME+'^|'          
+ISNULL(@USER_ID,'')+'^|'          
+CONVERT(VARCHAR,@SALE_DATE,112)          
SELECT @LINE_ITEMS='ECHO '+@LINE_ITEMS+' >> '+@OUT_PATH+'\'+@IDOC_NO          
SET @LINE_ITEMS='EXEC MASTER..XP_CMDSHELL '''+@LINE_ITEMS+''''            
EXEC (@LINE_ITEMS)           
--UPDATE          
IF NOT EXISTS(SELECT * FROM IDOC_GEN WHERE DEPT_ID=@LOC AND POS_NMBR=@POS)          
   INSERT IDOC_GEN SELECT @LOC,@LEASEID,@POS,@ID_VALUE+1          
ELSE              
   UPDATE IDOC_GEN SET SNO=@ID_VALUE+1,LEASE_ID=@LEASEID WHERE DEPT_ID=@LOC AND POS_NMBR=@POS          
--FINISH          
EXEC SP_CONFIGURE 'SHOW ADVANCED OPTIONS', 0;            
RECONFIGURE;            
END
