create PROCEDURE DBO.SP3S_REPROCESS_GST_CALCULATION  
(  
 @CMEMOID VARCHAR(40)  
,@CXNTYPE VARCHAR(10)   
,@NSPID VARCHAR(40)=''  
,@CERRORMSG VARCHAR(MAX) OUTPUT
,@NCALCULATE_GST_ROUND_OFF INT=0  
)  
AS  
BEGIN  
  
BEGIN TRY  
   
   
  --DECLARE LOCAL VARIABLE  
   DECLARE @TOTAL_GST_AMOUNT NUMERIC(15,2),@BASE_AMOUNT NUMERIC(15,2),@TOTAL_BASE_AMOUNT NUMERIC(15,2)  
          ,@ITEM_RATE_PERCENTAGE NUMERIC(15,2),@LOOP_PERC_CAQL_START INT,@LOOP_PERC_CAQL_END INT  
          ,@LOOP_VAT_UPDATE_START INT,@LOOP_VAT_UPDATE_END INT,@BALANCE_AMOUNT NUMERIC(15,2)  
          ,@ROW_ID VARCHAR(100),@REMANING_BALANCE INT,@CSTRQUERY NVARCHAR(MAX),@CSTEP VARCHAR(4)  
          ,@CSOURCETABLE VARCHAR(200),@CCMD NVARCHAR(MAX),@CKEYFIELD VARCHAR(200),@NIGSTAMT NUMERIC(10,2)  
          ,@NCGSTAMT NUMERIC(10,2),@NDIVFACTOR NUMERIC(1,0),@BIGSTBILL BIT ,@NMULTIPLYFACTOR NUMERIC(1,0)
          ,@BODDDIFF BIT
   
   SET @CERRORMSG =''  
   set @CKEYFIELD=''
     
   SET @CSTEP='10'  
     
  
   ---CREATE TABLE TO STORE GST PERCENTAGE  
   IF OBJECT_ID('TEMPDB..#GST_PERCENTAGE') IS NOT NULL  
       DROP TABLE #GST_PERCENTAGE  
     
   CREATE TABLE #GST_PERCENTAGE  
   (  
        ID INT IDENTITY(1,1)  
       ,GST_PERCENTAGE NUMERIC(15,2)
   )  
     
     
   IF OBJECT_ID('TEMPDB..#TMPGSTCALC','U') IS NOT NULL  
	  DROP TABLE #TMPGSTCALC  
     
   CREATE TABLE #TMPGSTCALC (ROW_ID VARCHAR(50),GST_PERCENTAGE NUMERIC(6,2),GST_AMOUNT NUMERIC(10,2),  
   XN_VALUE_WITHOUT_GST NUMERIC(10,2),TAX_METHOD NUMERIC(2,0),TAX_ROUND_OFF NUMERIC(6,2))  
     
   SET @CSTEP='15'  
   IF @CXNTYPE='WSL'    
   BEGIN  
		SELECT  @NIGSTAMT=SUM(IGST_AMOUNT),@NCGSTAMT=SUM(CGST_AMOUNT) FROM #tDetTable 
		
	      
		SET @BIGSTBILL=(CASE WHEN ISNULL(@NIGSTAMT,0)<>0 THEN 1 ELSE 0 END)  
	      
		SET @NMULTIPLYFACTOR=(CASE WHEN ISNULL(@NIGSTAMT,0)=0 THEN 2 ELSE 1 END)  
	       
		INSERT INTO #TMPGSTCALC (ROW_ID,GST_PERCENTAGE,GST_AMOUNT,XN_VALUE_WITHOUT_GST,TAX_METHOD)  
		SELECT ROW_ID,GST_PERCENTAGE,(CASE WHEN @BIGSTBILL=1 THEN ISNULL(IGST_AMOUNT,0) ELSE ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0) END),  
		XN_VALUE_WITHOUT_GST,BILL_LEVEL_TAX_METHOD FROM #tDetTable A  (NOLOCK)
		JOIN #tMstTable B  (NOLOCK) ON 1=1
		WHERE  GST_PERCENTAGE<>0  
	      
		SET @LOOP_VAT_UPDATE_END = @@ROWCOUNT;  
	       
		SELECT @CSOURCETABLE='#tDetTable'
   END  
   ELSE  
   IF @CXNTYPE='WSLORD'    
   BEGIN  
		SELECT @NIGSTAMT=SUM(IGST_AMOUNT),@NCGSTAMT=SUM(CGST_AMOUNT) FROM BUYER_ORDER_DET WHERE ORDER_ID=@CMEMOID  
	      
		SET @BIGSTBILL=(CASE WHEN ISNULL(@NIGSTAMT,0)<>0 THEN 1 ELSE 0 END)  
	      
		SET @NMULTIPLYFACTOR=(CASE WHEN ISNULL(@NIGSTAMT,0)=0 THEN 2 ELSE 1 END)  
	       
		INSERT INTO #TMPGSTCALC (ROW_ID,GST_PERCENTAGE,GST_AMOUNT,XN_VALUE_WITHOUT_GST,TAX_METHOD)  
		SELECT ROW_ID,GST_PERCENTAGE,(CASE WHEN @BIGSTBILL=1 THEN ISNULL(IGST_AMOUNT,0) 
		ELSE ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0) END),  
		XN_VALUE_WITHOUT_GST,GST_CAL_METHOD 
		FROM BUYER_ORDER_DET   A  
		JOIN BUYER_ORDER_MST  B ON A.ORDER_ID =B.ORDER_ID  
		WHERE A.ORDER_ID=@CMEMOID AND GST_PERCENTAGE<>0  
	      
		SET @LOOP_VAT_UPDATE_END = @@ROWCOUNT;  
	      
		SELECT @CSOURCETABLE='BUYER_ORDER_DET',@CKEYFIELD='ORDER_ID'  
   END       
   ELSE  
   IF @CXNTYPE='PUR'    
   BEGIN  
		
		SELECT @NIGSTAMT=SUM(ISNULL(IGST_AMOUNT,0)),@NCGSTAMT=SUM(ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0) ) FROM #TDETTABLE
	      
		SET @BIGSTBILL=(CASE WHEN ISNULL(@NIGSTAMT,0)<>0 THEN 1 ELSE 0 END)  
	      
		SET @NMULTIPLYFACTOR=(CASE WHEN ISNULL(@NIGSTAMT,0)=0 THEN 2 ELSE 1 END)  
	       
		INSERT INTO #TMPGSTCALC (ROW_ID,GST_PERCENTAGE,GST_AMOUNT,XN_VALUE_WITHOUT_GST,TAX_METHOD)  
		SELECT ROW_ID,
		CASE WHEN ISNULL(@NCALCULATE_GST_ROUND_OFF,0)=1 THEN 0 ELSE GST_PERCENTAGE END  AS GST_PERCENTAGE,
		(CASE WHEN @BIGSTBILL=1 THEN ISNULL(IGST_AMOUNT,0) 
		ELSE ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0) END),  
		XN_VALUE_WITHOUT_GST,BILL_LEVEL_TAX_METHOD FROM #TdETTable  A  
		join #tmstTable b ON 1=1
		WHERE GST_PERCENTAGE<>0  


	   
		SET @LOOP_VAT_UPDATE_END = @@ROWCOUNT;  
	      
		SELECT @CSOURCETABLE='#tDetTable'
   END     
   ELSE  
   IF @CXNTYPE='PRT'    
   BEGIN   
		SELECT @NIGSTAMT=SUM(IGST_AMOUNT),@NCGSTAMT=SUM(CGST_AMOUNT) FROM #tPrtDetTable
	      
		SET @BIGSTBILL=(CASE WHEN ISNULL(@NIGSTAMT,0)<>0 THEN 1 ELSE 0 END)  
	      
		SET @NMULTIPLYFACTOR=(CASE WHEN ISNULL(@NIGSTAMT,0)=0 THEN 2 ELSE 1 END)  
	       
		INSERT INTO #TMPGSTCALC (ROW_ID,GST_PERCENTAGE,GST_AMOUNT,XN_VALUE_WITHOUT_GST,TAX_METHOD)  
		SELECT ROW_ID,GST_PERCENTAGE,(CASE WHEN @BIGSTBILL=1 THEN ISNULL(IGST_AMOUNT,0) ELSE ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0) END),  
		XN_VALUE_WITHOUT_GST,BILL_LEVEL_TAX_METHOD FROM #tPrtDEtTable A  
		JOIN #tPrtMstTable B ON 1=1
		WHERE GST_PERCENTAGE<>0  
	      
		SET @LOOP_VAT_UPDATE_END = @@ROWCOUNT;  
	      
		SELECT @CSOURCETABLE='#tPrtdetTable'
   END   
   ELSE  
   IF @CXNTYPE='WSR'    
   BEGIN  
		SELECT @NIGSTAMT=SUM(IGST_AMOUNT),@NCGSTAMT=SUM(CGST_AMOUNT) FROM #tWsrDetTable
	      
		SET @BIGSTBILL=(CASE WHEN @NIGSTAMT<>0 THEN 1 ELSE 0 END)  
	    
		SET @NMULTIPLYFACTOR=(CASE WHEN ISNULL(@NIGSTAMT,0)=0 THEN 2 ELSE 1 END)  
	       
		INSERT INTO #TMPGSTCALC (ROW_ID,GST_PERCENTAGE,GST_AMOUNT,XN_VALUE_WITHOUT_GST,TAX_METHOD)  
		SELECT ROW_ID,GST_PERCENTAGE,(CASE WHEN @BIGSTBILL=1 THEN ISNULL(IGST_AMOUNT,0) ELSE ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0) END),  
		XN_VALUE_WITHOUT_GST,BILL_LEVEL_TAX_METHOD FROM #tWsrDetTable A  
		JOIN #tWsrMstTable B ON 1=1
		WHERE GST_PERCENTAGE<>0  
	      
		SET @LOOP_VAT_UPDATE_END = @@ROWCOUNT;  
	      
		SELECT @CSOURCETABLE='#tWsrDetTable'
   END   
   ELSE  
   IF @CXNTYPE='SLS'    
   BEGIN  
		SELECT @NIGSTAMT=SUM(IGST_AMOUNT),@NCGSTAMT=SUM(CGST_AMOUNT) FROM SLS_CMD01106_UPLOAD WHERE SP_ID=@NSPID  
	      
		SET @BIGSTBILL=(CASE WHEN ISNULL(@NIGSTAMT,0)<>0 THEN 1 ELSE 0 END)  
	      
		SET @NMULTIPLYFACTOR=(CASE WHEN ISNULL(@NIGSTAMT,0)=0 THEN 2 ELSE 1 END)  
		
		IF @NSPID = ''
	    BEGIN
			INSERT INTO #TMPGSTCALC (ROW_ID,GST_PERCENTAGE,GST_AMOUNT,XN_VALUE_WITHOUT_GST,TAX_METHOD)  
			SELECT ROW_ID,GST_PERCENTAGE,(CASE WHEN @BIGSTBILL=1 THEN ISNULL(IGST_AMOUNT,0) ELSE ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0) END),  
			XN_VALUE_WITHOUT_GST,(CASE WHEN TAX_METHOD=2 THEN 1 ELSE 2 END) AS TAX_METHOD FROM CMD01106  
			WHERE CM_ID=@CMEMOID AND GST_PERCENTAGE<>0  AND ISNULL(CESS_AMOUNT,0)=0

			SET @LOOP_VAT_UPDATE_END = @@ROWCOUNT; 
			SELECT @CSOURCETABLE='CMD01106',@CKEYFIELD='CM_ID'  
	    END
	    ELSE
	    BEGIN  
			INSERT INTO #TMPGSTCALC (ROW_ID,GST_PERCENTAGE,GST_AMOUNT,XN_VALUE_WITHOUT_GST,TAX_METHOD)  
			SELECT ROW_ID,GST_PERCENTAGE,(CASE WHEN @BIGSTBILL=1 THEN ISNULL(IGST_AMOUNT,0) ELSE ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0) END),  
			XN_VALUE_WITHOUT_GST,(CASE WHEN TAX_METHOD=2 THEN 1 ELSE 2 END) AS TAX_METHOD FROM SLS_CMD01106_UPLOAD   
			WHERE SP_ID=@NSPID AND GST_PERCENTAGE<>0  AND ISNULL(CESS_AMOUNT,0)=0
		      
			SET @LOOP_VAT_UPDATE_END = @@ROWCOUNT;  
			
			SELECT @CSOURCETABLE='SLS_CMD01106_UPLOAD',@CKEYFIELD='SP_ID'  
		END  
   END   
   ELSE  
   IF @CXNTYPE='jwi'    
   BEGIN  
		SELECT @NIGSTAMT=SUM(IGST_AMOUNT),@NCGSTAMT=SUM(CGST_AMOUNT) FROM JOBWORK_ISSUE_DET WHERE ISSUE_ID=@CMEMOID  
	      
		SET @BIGSTBILL=(CASE WHEN @NIGSTAMT<>0 THEN 1 ELSE 0 END)  
	    
		SET @NMULTIPLYFACTOR=(CASE WHEN ISNULL(@NIGSTAMT,0)=0 THEN 2 ELSE 1 END)  
	       
		INSERT INTO #TMPGSTCALC (ROW_ID,GST_PERCENTAGE,GST_AMOUNT,XN_VALUE_WITHOUT_GST,TAX_METHOD)  
		SELECT ROW_ID,GST_PERCENTAGE,(CASE WHEN @BIGSTBILL=1 THEN ISNULL(IGST_AMOUNT,0) ELSE ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0) END),  
		XN_VALUE_WITHOUT_GST,BILL_LEVEL_TAX_METHOD FROM JOBWORK_ISSUE_DET A  
		JOIN JOBWORK_ISSUE_mst B ON A.issue_id=B.issue_id  
		WHERE A.issue_id=@CMEMOID AND GST_PERCENTAGE<>0  
	      
		SET @LOOP_VAT_UPDATE_END = @@ROWCOUNT;  
	      
		SELECT @CSOURCETABLE='JOBWORK_ISSUE_DET',@CKEYFIELD='issue_id'  
   END   
   ELSE  
   IF @CXNTYPE='JWR'    
   BEGIN  
		SELECT @NIGSTAMT=SUM(IGST_AMOUNT),@NCGSTAMT=SUM(CGST_AMOUNT) FROM jobwork_receipt_det  WHERE receipt_id =@CMEMOID  
	      
		SET @BIGSTBILL=(CASE WHEN @NIGSTAMT<>0 THEN 1 ELSE 0 END)  
	    
		SET @NMULTIPLYFACTOR=(CASE WHEN ISNULL(@NIGSTAMT,0)=0 THEN 2 ELSE 1 END)  
	       
		INSERT INTO #TMPGSTCALC (ROW_ID,GST_PERCENTAGE,GST_AMOUNT,XN_VALUE_WITHOUT_GST,TAX_METHOD)  
		SELECT ROW_ID,GST_PERCENTAGE,(CASE WHEN @BIGSTBILL=1 THEN ISNULL(IGST_AMOUNT,0) ELSE ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0) END),  
		XN_VALUE_WITHOUT_GST,BILL_LEVEL_TAX_METHOD FROM jobwork_receipt_det A  
		JOIN jobwork_receipt_mst  B ON A.receipt_id =B.receipt_id  
		WHERE A.receipt_id=@CMEMOID AND GST_PERCENTAGE<>0  
	      
		SET @LOOP_VAT_UPDATE_END = @@ROWCOUNT;  
	      
		SELECT @CSOURCETABLE='jobwork_receipt_det',@CKEYFIELD='receipt_id'  
   END    

   
   --SELECT @NDIVFACTOR AS DIV_FACTOR,* FROM #TMPGSTCALC  

	--IF @@SPID=160
	--	SELECT 'BEFORE BALANCING', SUM(IGST_AMOUNT),SUM(XN_VALUE_WITHOUT_GST) FROM #TDETTABLE
		     
   SET @CSTEP='20'  
   --INSERT PERCENTAGE INTO TEMP TABLE  
   INSERT INTO #GST_PERCENTAGE(GST_PERCENTAGE)  
   SELECT DISTINCT GST_PERCENTAGE FROM #TMPGSTCALC  
   
      
   SET @LOOP_PERC_CAQL_END = @@ROWCOUNT;  
   SET @LOOP_PERC_CAQL_START = 1  
   SET @BASE_AMOUNT = 0  
   SET @TOTAL_BASE_AMOUNT=0  
      
   SET @CSTEP='30'   
   ----- IF NO DATA FOUND FOR GST REPROCESSING , THEN RETURN TRUE  
   IF ISNULL(@LOOP_PERC_CAQL_END,0) = 0  
        GOTO PROC_END;  
      
      DECLARE @BROUND_OFF_GST_AMT BIT ,@INPUT_GST_ROUND_OFF NUMERIC(5,2)
      
    --SELECT @LOOP_PERC_CAQL_START AS START_LOOP,@LOOP_PERC_CAQL_END AS END_LOOP,ID  
    --FROM #GST_PERCENTAGE  
    
    --SELECT 'GST_PCT',* FROM #TMPGSTCALC
    --START LOOP FOR CALCULATE BASE AMOUNT. LOOP IS REQUIRED BECAUSE GST AMOUNT SHOLUD BE MULTIPLE  
    --SO NEED TO CALCLUATE BASE AMOUNT FOR BOTH TYPE OF GST PERCENTAGE  
    WHILE @LOOP_PERC_CAQL_END >= @LOOP_PERC_CAQL_START  
    BEGIN  
		  SET @CSTEP='40'  
		  SET @BODDDIFF=0
		  
		  SET @ITEM_RATE_PERCENTAGE = (SELECT ISNULL(GST_PERCENTAGE,0) FROM #GST_PERCENTAGE WHERE  
									   ID=@LOOP_PERC_CAQL_START)  
			--SET @BASE_AMOUNT = (SELECT SUM(ISNULL(NET_RATE,0)*ISNULL(INVOICE_QUANTITY,0)) FROM #TEMP_IND01106)  
			--SET @BASE_AMOUNT = (@BASE_AMOUNT * @RATE_PERCENTAGE)/100  
	          
		  DECLARE @BASE_FOR_GST NUMERIC(15,2),@GST_AMOUNT NUMERIC(15,2)  
	          
		  SET @CSTEP='50'  
			--ADDING THIS LINE ON 07-JUNE-2017  
		  SELECT @BASE_FOR_GST = SUM(XN_VALUE_WITHOUT_GST)  
		  FROM #TMPGSTCALC WHERE GST_PERCENTAGE = @ITEM_RATE_PERCENTAGE     
	          
		  SELECT @GST_AMOUNT = (@BASE_FOR_GST*@ITEM_RATE_PERCENTAGE/100)  
		  FROM #TMPGSTCALC WHERE GST_PERCENTAGE = @ITEM_RATE_PERCENTAGE  
	          
		  SET @CSTEP='60'  
	          
			--SELECT @GST_AMOUNT,'PICK',@ITEM_RATE_PERCENTAGE  
		  SET @TOTAL_BASE_AMOUNT = @GST_AMOUNT  
	         
		  SET @LOOP_PERC_CAQL_START= @LOOP_PERC_CAQL_START+1;  
		       
		  SET @CSTEP='70'  
		  ---SELECT TOTAL GST AMOUNT   
		  SELECT @TOTAL_GST_AMOUNT =SUM(GST_AMOUNT) FROM #TMPGSTCALC  
		  WHERE GST_PERCENTAGE = @ITEM_RATE_PERCENTAGE  

		
		      
		
		 IF @CXNTYPE ='PUR' and ISNULL(@NCALCULATE_GST_ROUND_OFF,0)=1
		 BEGIN
        
			SELECT @BROUND_OFF_GST_AMT=ROUND_OFF_GST_AMT ,@INPUT_GST_ROUND_OFF=A.INPUT_GST_ROUND_OFF
			FROM  PUR_pim01106_UPLOAD  A (nolock)
			JOIN LMP01106 B (nolock) ON A.AC_CODE =B.AC_CODE 
			WHERE A.sp_id=@NSPID

		
			

			IF ISNULL(@BROUND_OFF_GST_AMT,0)=1
			BEGIN
				IF ISNULL(ABS(@INPUT_GST_ROUND_OFF),0)>2
				SET @INPUT_GST_ROUND_OFF=0
				SET @TOTAL_BASE_AMOUNT=@TOTAL_GST_AMOUNT+ISNULL(@INPUT_GST_ROUND_OFF,0)
			END
             
          END
                

			
		  
		  IF @NMULTIPLYFACTOR=2 
		  BEGIN 
			
			    IF (ROUND(ABS(ISNULL(@TOTAL_GST_AMOUNT,0)-ISNULL(@TOTAL_BASE_AMOUNT,0))*100  ,0)%2)=1
					SET @BODDDIFF=1
			
				--SELECT @TOTAL_GST_AMOUNT AS TOTAL_GST_AMOUNT,@TOTAL_BASE_AMOUNT AS TOTAL_BASE_AMOUNT,@BODDDIFF AS BODDDIFF
		  END
		  

		
		
		  --IF TOTAL GST AMOUNT AND TOTAL BASE AMOUNT IS NOT EQUAL
		  IF ISNULL(@TOTAL_GST_AMOUNT,0) <> ISNULL(@TOTAL_BASE_AMOUNT,0)  
		  BEGIN  
				SET @CSTEP='80'  
				---SET VALUE INTO RQUIRED VARIABLE FOR FURTHER USED  
				SET @BALANCE_AMOUNT = (@TOTAL_BASE_AMOUNT - @TOTAL_GST_AMOUNT)*100  
			            
				SET @CSTEP='90'   
			            			           
				SET @BALANCE_AMOUNT = CAST(@BALANCE_AMOUNT AS INT)  
		            
				SELECT @LOOP_VAT_UPDATE_END=COUNT(*)*@NMULTIPLYFACTOR FROM #TMPGSTCALC   
				WHERE GST_PERCENTAGE = @ITEM_RATE_PERCENTAGE  
	    		DECLARE @NLOOP INT  
				SET @NLOOP=0  
				
				WHILE @BALANCE_AMOUNT <> 0  
				BEGIN  
					SET @CSTEP='100'  
					SET @NLOOP=@NLOOP+1  
				      
					SET @REMANING_BALANCE =SUBSTRING(CAST(@BALANCE_AMOUNT AS VARCHAR(10)),1,CHARINDEX('.',@BALANCE_AMOUNT)-1)  
				      
					--IF @ITEM_RATE_PERCENTAGE=3.5  
					--SELECT @NLOOP AS START_LOOP_COUNT,@BALANCE_AMOUNT AS BALANCE_AMOUNT,@LOOP_VAT_UPDATE_END,@REMANING_BALANCE AS REMAINING   
					--IF BALANCE AMOUNT GRATER THEN TOTAL ROW AVAILABLE INTO TEMP TABLE  
					IF ABS(@BALANCE_AMOUNT) > @LOOP_VAT_UPDATE_END  
					BEGIN  
						  SET @CSTEP='105'  
						  PRINT 'UPDATE WHOLE SET OF ROWS'  
						  UPDATE #TMPGSTCALC SET GST_AMOUNT = ISNULL(GST_AMOUNT,0)+(CASE WHEN @BALANCE_AMOUNT<0 THEN -1 ELSE 1 END)*.01*@NMULTIPLYFACTOR
						  WHERE GST_PERCENTAGE = @ITEM_RATE_PERCENTAGE  
					                    
						  PRINT 'UPDATED WHOLE SET OF ROWS'  
					                      
						  SET @BALANCE_AMOUNT = @BALANCE_AMOUNT - ((CASE WHEN @BALANCE_AMOUNT<0 THEN -1 ELSE 1 END)*@LOOP_VAT_UPDATE_END)  
					END  
					ELSE  
					BEGIN  
						  SET @CSTEP='110'  
						  PRINT 'UPDATE BALANCE SET OF ROWS:'+STR(@ITEM_RATE_PERCENTAGE,6,2)
						    
						  --IF BALANCE AMOUNT LESS THEN TOTAL ROW AVAILABLE INTO TEMP TABLE  
						  SET @CSTRQUERY = N'UPDATE #TMPGSTCALC SET GST_AMOUNT = ISNULL(GST_AMOUNT,0)+('+  
							  (CASE WHEN @BALANCE_AMOUNT<0 THEN '-1' ELSE '1' END)+'*.01*'+LTRIM(RTRIM(STR(@NMULTIPLYFACTOR)))+')  
								WHERE ROW_ID IN (SELECT TOP '+CONVERT(VARCHAR(10),FLOOR(ABS(@REMANING_BALANCE/@NMULTIPLYFACTOR)))+'   
								ROW_ID FROM #TMPGSTCALC WHERE GST_PERCENTAGE = '+LTRIM(RTRIM(STR(@ITEM_RATE_PERCENTAGE,6,2)))+')'  
						  
						  SET @CSTEP='112'  
						  PRINT @CSTRQUERY   
						  EXEC SP_EXECUTESQL @CSTRQUERY  
						  
						  SET @CSTEP='115'  
					                     
						  SET @BALANCE_AMOUNT = 0;  
					END  
				            

					--IF @ITEM_RATE_PERCENTAGE=3.5  
					-- SELECT @NLOOP AS END_LOOP_COUNT,@BALANCE_AMOUNT AS BALANCE_AMOUNT  
				END  
	         
		   END  
		   
    END  
      
	
    SET @CSTEP='140'  
	--TAX_ROUND_OFF=B.TAX_ROUND_OFF  (CASE WHEN A.IGST_AMOUNT<>0 THEN B.GST_AMOUNT-IGST_AMOUNT ELSE (B.GST_AMOUNT-CGST_AMOUNT-SGST_AMOUNT) END)+ISNULL(B.TAX_ROUND_OFF,0)
    SET @CCMD=N'UPDATE A SET IGST_AMOUNT=(CASE WHEN A.IGST_AMOUNT<>0 THEN B.GST_AMOUNT ELSE 0 END),  
      CGST_AMOUNT=(CASE WHEN A.CGST_AMOUNT<>0 THEN ROUND(B.GST_AMOUNT/2,2) ELSE 0 END),    
      SGST_AMOUNT=(CASE WHEN A.SGST_AMOUNT<>0 THEN ROUND(B.GST_AMOUNT/2,2) ELSE 0 END)
	  FROM '+@CSOURCETABLE+' A (NOLOCK) JOIN #TMPGSTCALC B ON A.ROW_ID=B.ROW_ID '+  
	 (case when @cXnType not in ('PUR','WSL','PRT','WSR')  THEN ' WHERE A.'+@CKEYFIELD+'='''+@CMEMOID+''''  ELSE '' END)
    
	PRINT ISNULL(@CCMD,'FINAL UPDATE COMMAND NULL')  
	EXEC SP_EXECUTESQL @CCMD  
	
	 SET @CCMD=N'UPDATE A SET TAX_ROUND_OFF=(IGST_AMOUNT+CGST_AMOUNT+SGST_AMOUNT)-B.GST_AMOUNT
	  FROM '+@CSOURCETABLE+' A (NOLOCK) JOIN #TMPGSTCALC B ON A.ROW_ID=B.ROW_ID '+  
	 (case when @cXnType not in ('PUR','WSL','PRT','WSR')  THEN ' WHERE A.'+@CKEYFIELD+'='''+@CMEMOID+''''  ELSE '' END)
	PRINT ISNULL(@CCMD,'FINAL UPDATE COMMAND NULL')  
	EXEC SP_EXECUTESQL @CCMD  

	--IF @@SPID=160
	--begin
	--	select @cCmd
	--	SELECT 'AFTER BALANCING', SUM(IGST_AMOUNT),SUM(XN_VALUE_WITHOUT_GST),sum(net_rate*quantity) as subtotal
	--	FROM #TDETTABLE

	--	select subtotal,* from #tmsttable
	--end			
	SET @CSTEP='150' 
	IF @CXNTYPE IN ('WSL','PUR','PRT','WSR') 
	begin
	    SET @CSTEP='150'  
		IF   EXISTS (SELECT TOP 1 'U' FROM #TMPGSTCALC WHERE TAX_METHOD=2)
			SET @CCMD=N'UPDATE A SET XN_VALUE_WITHOUT_GST=A.XN_VALUE_WITH_GST-(A.IGST_AMOUNT+A.CGST_AMOUNT+A.SGST_AMOUNT)
			FROM '+@CSOURCETABLE+' A '
		ELSE
		   SET @CCMD=N'UPDATE '+@CSOURCETABLE+' SET XN_VALUE_WITH_GST=XN_VALUE_WITHOUT_GST+IGST_AMOUNT+CGST_AMOUNT+SGST_AMOUNT '
		
	
	end
	else
	begin
		SET @CSTEP='160'  
		SET @CCMD=N'UPDATE '+@CSOURCETABLE+' SET XN_VALUE_WITH_GST=XN_VALUE_WITHOUT_GST+IGST_AMOUNT+CGST_AMOUNT+SGST_AMOUNT  
		 WHERE '+@CKEYFIELD+'='''+(CASE WHEN @CXNTYPE='SLS' THEN LTRIM(RTRIM((@NSPID))) ELSE  @CMEMOID END)+''''  
    end  
	print @CCMD
    EXEC SP_EXECUTESQL @CCMD  
         
END TRY  
  
BEGIN CATCH  
	PRINT 'ENTER CATCH OF REPROCESS_GST'
	 SET @CERRORMSG ='ERROR IN PROCEDURE SP3S_REPROCESS_GST_CALCULATION STEP#'+@CSTEP+' '+ ERROR_MESSAGE()  
	 PRINT 'ENTER CATCH BLOCK OF SP_REPROCESS_GST_CALCULATION'  
	   
	 GOTO PROC_END   
END CATCH  
    
PROC_END:    
  
END

