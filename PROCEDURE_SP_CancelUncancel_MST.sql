CREATE PROC SP_CANCELUNCANCEL_MST      
@NQUERYID NUMERIC (3,0),      
@CWHERE VARCHAR(MAX),      
@CFINYEAR VARCHAR(5),      
@NNAVMODE NUMERIC(1,0),      
@CMEMOID VARCHAR(40),      
@CDEPTID VARCHAR(50),  
@CUSERCODE VARCHAR(7)='',  
@cLOC VARCHAR(4)='',  
@CBIN_ID varchar(7)='',  
@nxn_item_type int=1  
----WITH ENCRYPTION  
AS      
BEGIN        
      
DECLARE @CCMD NVARCHAR(4000)    ,@CLOCID VARCHAR(5)  
   
IF @NQUERYID IN (3,4,5)      
BEGIN      
  DECLARE @BPICKFREIGHT BIT,@BPICKOC BIT,@BPICKRO BIT,@NSTOCKADJVALUE NUMERIC(10,2)      
        
  SELECT TOP 1 @BPICKFREIGHT=VALUE FROM CONFIG WHERE  CONFIG_OPTION='FIXREPS_PICK_FREIGHT'         
        
  SELECT TOP 1 @BPICKOC=VALUE FROM CONFIG WHERE CONFIG_OPTION='FIXREPS_PICK_OTHER_CHARGES'         
        
  SELECT TOP 1 @BPICKRO=VALUE FROM CONFIG WHERE  CONFIG_OPTION='FIXREPS_PICK_ROUND_OFF'         
      
END      
  
 IF ISNULL(@cLOC,'')=''   
     SELECT TOP 1 @CLOCID=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID   
  ELSE  
     SELECT @CLOCID= @cLOC  
      
IF @NQUERYID = 1      
GOTO LBLNAVIGATE      
      
ELSE IF @NQUERYID =2      
GOTO LBLGETMASTER      
      
ELSE IF @NQUERYID = 3      
GOTO LBLGETDETAILS      
      
ELSE IF @NQUERYID =4       
GOTO LBLGETPRODUCT      
      
ELSE IF @NQUERYID =5      
GOTO LBLGETPRODUCTINFO      
      
ELSE IF @NQUERYID = 6      
GOTO LBLGETREPORT      
      
ELSE IF @NQUERYID = 7      
GOTO LBLGETPRODUCTMULTIPLE      
      
ELSE       
GOTO LAST      
      
      
LBLNAVIGATE:      
      
  EXEC SP_NAVIGATE 'ICM01106',@NNAVMODE,@CMEMOID,@CFINYEAR,'CNC_MEMO_NO','CNC_MEMO_DT','CNC_MEMO_ID',@CWHERE      
        
GOTO LAST      
      
LBLGETMASTER:      
      
 SELECT T1.*,T2.USERNAME,CAST(0 AS NUMERIC) AS RATE  ,CAST(0 AS   NUMERIC) AS SP_ID,T3.ORDER_NO  
 FROM ICM01106 T1      
 JOIN USERS T2 ON T2.USER_CODE = T1.USER_CODE     
 Left outer join WSL_ORDER_MST T3 On T1.RBO_Order_id= T3.order_id  
 WHERE T1.CNC_MEMO_ID = @CMEMOID      
       
GOTO LAST      
      
LBLGETDETAILS:      
      
      
 SELECT C1.ARTICLE_NAME ,C1.ARTICLE_NO ,C1.PARA1_NAME ,C1.PARA2_NAME,C1.PARA3_NAME ,      
 C1.PARA4_NAME,C1.PARA5_NAME ,C1.PARA6_NAME ,S.MRP ,          
 A.*,CAST((A.QUANTITY* C1.pp) AS NUMERIC(14,2)) AS CURRPURAMT, CAST(C1.pp AS NUMERIC(14,2)) AS PURCHASE_PRICE,       
 A.QUANTITY AS 'OLD_QUANTITY', S.BARCODE_CODING_SCHEME AS CODING_SCHEME, CAST(ABS((C1.pp+        
 (CASE WHEN B1.CNC_TYPE=1 THEN -1 ELSE 1 END)*A.RATE)) AS NUMERIC(14,2)) AS NEWPURAMT        
 ,CAST(ABS((A.QUANTITY *(C1.pp+        
 (CASE WHEN B1.CNC_TYPE=1 THEN -1 ELSE 1 END)*A.RATE))) AS NUMERIC(14,2)) AS OLDPURAMT,        
 B.DT_CREATED AS [ART_DT_CREATED],'' AS [PARA3_DT_CREATED],S.DT_CREATED AS [SKU_DT_CREATED],E.UOM_TYPE ,    
 S.FIX_MRP,S.PRODUCT_NAME,BI.BIN_NAME,B.ALIAS AS ARTICLE_ALIAS,B.STOCK_NA  ,CAST(0 AS   NUMERIC) AS SP_ID,  
  A.PRODUCT_CODE AS ORG_PRODUCT_CODE,   
    CAST(CASE WHEN CHARINDEX('@',A.PRODUCT_CODE)=0 THEN '' ELSE   
    (SUBSTRING(A.PRODUCT_CODE,CHARINDEX('@',A.PRODUCT_CODE)+1,15)) END AS VARCHAR(100))  AS BATCH_LOT_NO  
 FROM ICD01106 A           
 JOIN ICM01106 B1 ON A.CNC_MEMO_ID=B1.CNC_MEMO_ID        
 JOIN sku_names C1  ON A.PRODUCT_CODE = C1.PRODUCT_CODE        
 JOIN SKU S ON A.PRODUCT_CODE = S.PRODUCT_CODE     
 JOIN ARTICLE B ON S.ARTICLE_CODE = B.ARTICLE_CODE             
 JOIN UOM   E ON B.UOM_CODE = E.UOM_CODE        
 JOIN BIN BI ON BI.BIN_ID=ISNULL(A.BIN_ID,'000')    
 WHERE A.CNC_MEMO_ID =  @CMEMOID           
        
GOTO LAST      
      
LBLGETPRODUCTMULTIPLE:      
     
   DECLARE @CGENERATE_BATCH_WISE_BARCODE_FOR_FIX_ARTICLE VARCHAR(10)  
   
  set @CGENERATE_BATCH_WISE_BARCODE_FOR_FIX_ARTICLE=1  
 IF   ISNULL(@CGENERATE_BATCH_WISE_BARCODE_FOR_FIX_ARTICLE,'')<>'1'  
  BEGIN  
        
   
       
   SET @CCMD = N'SELECT distinct  A.AC_CODE, F.UOM_TYPE, SN.SECTION_NAME, SN.SUB_SECTION_NAME, A.PRODUCT_CODE, A.INV_DT,       
   A.INV_NO, SN.PP'+(CASE WHEN @BPICKFREIGHT=1 THEN '+ISNULL(C.FREIGHT,0)' ELSE '' END)+      
   (CASE WHEN @BPICKOC=1 THEN '+ISNULL(C.OTHER_CHARGES,0)' ELSE '' END )+      
   (CASE WHEN @BPICKRO=1 THEN '+ISNULL(C.ROUND_OFF,0)' ELSE '' END)+'  AS PURCHASE_PRICE, 
   (CASE WHEN  ISNULL(TP.MRP,0)<>0 THEN  ISNULL(TP.MRP,0) ELSE A.MRP END ) AS MRP,
   B.ARTICLE_CODE, B.ARTICLE_NO, B.ARTICLE_NAME, B.ARTICLE_DESC,       
   C.PARA1_NAME, D.PARA2_NAME, E.PARA3_NAME, F.UOM_CODE, F.UOM_NAME, J.FREIGHT, J.DISCOUNT_AMOUNT,       
   J.TAX_AMOUNT, I.FORM_ID,I.FORM_NAME, J.OTHER_CHARGES, I.TAX_PERCENTAGE,       
  ISNULL(PMT.QUANTITY_IN_STOCK,0) AS [QUANTITY_IN_STOCK],  
  ISNULL(TP.QUANTITY,0) AS [QUANTITY],  
    (A.PURCHASE_PRICE - J.DISCOUNT_AMOUNT) AS RATE,      
   A.BARCODE_CODING_SCHEME AS CODING_SCHEME,A.FIX_MRP,A.PRODUCT_NAME,B.ALIAS AS ARTICLE_ALIAS ,B2.BIN_ID,B2.BIN_NAME     
   FROM SKU A   
    JOIN ##TEMP_PCODE_'+@CWHERE+' TP ON TP.PRODUCT_CODE=A.PRODUCT_CODE                  
   JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE                         
   JOIN UOM F (NOLOCK) ON B.UOM_CODE = F.UOM_CODE                       
   LEFT OUTER JOIN FORM I (NOLOCK) ON A.FORM_ID = I.FORM_ID             
   JOIN SKU_NAMES SN (NOLOCK) ON SN.PRODUCT_CODE=A.PRODUCT_CODE  
   LEFT JOIN SKU_OH J (NOLOCK) ON A.PRODUCT_CODE = J.PRODUCT_CODE            
   LEFT OUTER JOIN PMT01106 PMT (NOLOCK) ON PMT.PRODUCT_CODE=A.PRODUCT_CODE     AND TP.BIN_ID=ISNULL(PMT.BIN_ID,'''+@CDEPTID+''')     
   --JOIN BIN_LOC B1 (NOLOCK) ON B1.DEPT_ID=ISNULL(PMT.DEPT_ID,'''+@CLOCID+''') AND B1.BIN_ID=ISNULL(PMT.BIN_ID,'''+@CDEPTID+''')     
   JOIN BIN B2 ON B2.BIN_ID=ISNULL(PMT.BIN_ID,'''+@CDEPTID+''')   --B1.BIN_ID  
   JOIN BINUSERS BN ON BN.USER_CODE='''+  @CMEMOID+''' AND BN.BIN_ID=B2.BIN_ID  
   WHERE  PMT.DEPT_ID = '''+@CLOCID +''' AND  
   --B1.DEPT_ID = '''+@CLOCID +''' AND B2.BIN_ID='''+ @CDEPTID+''' AND A.PRODUCT_CODE IN (SELECT PRODUCT_CODE FROM ##TEMP_PCODE_'+@CWHERE+') AND   
   ISNULL(PMT.QUANTITY_IN_STOCK,0) '  + (CASE WHEN @NNAVMODE=1 THEN '>0' ELSE '=ISNULL(PMT.QUANTITY_IN_STOCK,0)' END)+    
   '  ORDER BY A.PRODUCT_CODE'      
   PRINT @CCMD      
   EXECUTE SP_EXECUTESQL @CCMD     



 END  
 ELSE  
 BEGIN  
  
     
  IF OBJECT_ID ('TEMPDB..#TMPVALIDATEITEM','U') IS NOT NULL   
      DROP TABLE #TMPVALIDATEITEM  
  
   SELECT PRODUCT_CODE ,SKU_ITEM_TYPE   
   INTO #TMPVALIDATEITEM FROM SKU_NAMES (NOLOCK) WHERE 1=2  
  
  
     SET @CCMD = N'  SELECT A.PRODUCT_CODE ,B.SKU_ITEM_TYPE    
     FROM ##TEMP_PCODE_'+@CWHERE+' A  
        JOIN SKU_NAMES B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE   
  WHERE CASE WHEN ISNULL(B.SKU_ITEM_TYPE,0) IN(0,1) THEN 1 ELSE B.SKU_ITEM_TYPE END  <> '''+RTRIM(LTRIM(STR(@NXN_ITEM_TYPE)))+''' '  
  INSERT INTO #TMPVALIDATEITEM(PRODUCT_CODE,SKU_ITEM_TYPE)  
  EXEC SP_EXECUTESQL  @CCMD  
  PRINT @CCMD  
          
  
  
  
  
  
  IF EXISTS (SELECT TOP 1 'U' FROM #TMPVALIDATEITEM)  
  BEGIN  
         
    SELECT PRODUCT_CODE,  
          CASE WHEN ISNULL(SKU_ITEM_TYPE,0) IN(0,1)  THEN 'INVENTORY'  
                WHEN SKU_ITEM_TYPE=2  THEN 'CONSUMABLE'  
       WHEN SKU_ITEM_TYPE=3  THEN 'ASSESTS' ELSE 'SERVICES' END AS SKU_ITEM_TYPE ,  
         CASE WHEN ISNULL(@NXN_ITEM_TYPE,0) IN(0,1)  THEN 'INVENTORY'  
                WHEN @NXN_ITEM_TYPE=2  THEN 'CONSUMABLE'  
       WHEN @NXN_ITEM_TYPE=3  THEN 'ASSESTS' ELSE 'SERVICES' END  
     AS MEMO_ITEM_TYPE,'MISMATCH ITEM TYPE' as ERRMSG  
    FROM #TMPVALIDATEITEM  
     
  END  
  ELSE   
  BEGIN  
  
  
  SET @CCMD = N'  SELECT A.PRODUCT_CODE,0 as SKU_ITEM_TYPE   
     FROM ##TEMP_PCODE_'+@CWHERE+' A  
     left JOIN SKU_NAMES B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE   
     WHERE b.product_code is null '  
  INSERT INTO #TMPVALIDATEITEM(PRODUCT_CODE,SKU_ITEM_TYPE)  
  EXEC SP_EXECUTESQL  @CCMD  
  PRINT @CCMD  
          
  if exists (select top 1 'u' from #TMPVALIDATEITEM)  
  begin  
       
     select PRODUCT_CODE,'Barcode not found' as ERRMSG  
     from #TMPVALIDATEITEM  
     return  
  
  end  
  
  
        
      SET @CCMD = N'SELECT distinct A.AC_CODE, F.UOM_TYPE, SN.SECTION_NAME, SN.SUB_SECTION_NAME, A.PRODUCT_CODE, A.INV_DT,       
   A.INV_NO, isnull(SN.PP,0)'+(CASE WHEN @BPICKFREIGHT=1 THEN '+ISNULL(J.FREIGHT,0)' ELSE '' END)+      
   (CASE WHEN @BPICKOC=1 THEN '+ISNULL(J.OTHER_CHARGES,0)' ELSE '' END )+      
   (CASE WHEN @BPICKRO=1 THEN '+ISNULL(J.ROUND_OFF,0)' ELSE '' END)+'  AS PURCHASE_PRICE,
   (CASE WHEN  ISNULL(TP.MRP,0)<>0 THEN  ISNULL(TP.MRP,0) ELSE A.MRP END ) AS MRP, B.ARTICLE_CODE, B.ARTICLE_NO, B.ARTICLE_NAME, B.ARTICLE_DESC,       
   SN.PARA1_NAME, SN.PARA2_NAME, SN.PARA3_NAME, F.UOM_CODE, F.UOM_NAME, J.FREIGHT, J.DISCOUNT_AMOUNT,       
   J.TAX_AMOUNT, I.FORM_ID,I.FORM_NAME, J.OTHER_CHARGES, I.TAX_PERCENTAGE,       
  ISNULL(PMT.QUANTITY_IN_STOCK,0) AS [QUANTITY_IN_STOCK],  
    ISNULL(TP.QUANTITY,0) AS [QUANTITY],  
    (A.PURCHASE_PRICE - J.DISCOUNT_AMOUNT) AS RATE,      
   A.BARCODE_CODING_SCHEME AS CODING_SCHEME,A.FIX_MRP,A.PRODUCT_NAME,B.ALIAS AS ARTICLE_ALIAS ,isnull(B2.BIN_ID,'''+@cDEptID+''') as bin_id ,B2.BIN_NAME     
   FROM SKU A (nolock)  
   JOIN ##TEMP_PCODE_'+@CWHERE+' TP ON TP.PRODUCT_CODE=A.PRODUCT_CODE                  
   JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE                        
   JOIN UOM F (NOLOCK) ON B.UOM_CODE = F.UOM_CODE                    
   LEFT OUTER JOIN FORM I (NOLOCK) ON A.FORM_ID = I.FORM_ID           
   JOIN SKU_NAMES SN (NOLOCK) ON SN.PRODUCT_CODE=A.PRODUCT_CODE  
   LEFT OUTER JOIN SKU_OH J (NOLOCK) ON A.PRODUCT_CODE = J.PRODUCT_CODE            
   LEFT OUTER JOIN   
   (    
     SELECT A.DEPT_ID,A.BIN_ID,    
            LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX (''@'',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE ))) AS PRODUCT_CODE,  
           SUM(QUANTITY_IN_STOCK) AS QUANTITY_IN_STOCK  
    from PMT01106 A (NOLOCK)   
    JOIN ##TEMP_PCODE_'+@CWHERE+' TP ON TP.PRODUCT_CODE=LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX (''@'',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE ))) 
     GROUP BY A.DEPT_ID,A.BIN_ID,   
     LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX (''@'',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE )))  
   ) pmt ON PMT.PRODUCT_CODE=TP.PRODUCT_CODE     AND TP.BIN_ID=ISNULL(PMT.BIN_ID,'''+@CDEPTID+''')  AND  PMT.DEPT_ID='''+@CLOCID+'''  
   --JOIN BIN_LOC B1 (NOLOCK) ON B1.DEPT_ID=ISNULL(PMT.DEPT_ID,'''+@CLOCID+''') AND B1.BIN_ID=ISNULL(PMT.BIN_ID,'''+@CDEPTID+''')     
   left JOIN BIN B2 ON B2.BIN_ID=ISNULL(PMT.BIN_ID,'''+@CDEPTID+''')   --B1.BIN_ID  
   left JOIN BINUSERS BN ON BN.USER_CODE='''+  @CMEMOID+''' AND BN.BIN_ID=B2.BIN_ID  
   WHERE (PMT.DEPT_ID = '''+@CLOCID +''' or '+str(@nNavmode)+'<>1) AND  
   --B1.DEPT_ID = '''+@CLOCID +''' AND B2.BIN_ID='''+ @CDEPTID+''' AND A.PRODUCT_CODE IN (SELECT PRODUCT_CODE FROM ##TEMP_PCODE_'+@CWHERE+') AND   
   ISNULL(PMT.QUANTITY_IN_STOCK,0) '  + (CASE WHEN @NNAVMODE=1 THEN '>0' ELSE '=ISNULL(PMT.QUANTITY_IN_STOCK,0)' END)+    
   '  ORDER BY A.PRODUCT_CODE'      
   PRINT @CCMD      
   EXECUTE SP_EXECUTESQL @CCMD    
  
   END  
   
 END       
GOTO LAST      
        
LBLGETPRODUCT:      
  IF @NNAVMODE=1    
  BEGIN    
   SELECT A.AC_CODE, F.UOM_TYPE, SN.SECTION_NAME, SN.SUB_SECTION_NAME, A.PRODUCT_CODE, A.INV_DT,       
   A.INV_NO,  (SN.PP+(CASE WHEN @BPICKFREIGHT=1 THEN ISNULL(J.FREIGHT,0) ELSE 0 END)+      
   (CASE WHEN @BPICKOC=1 THEN ISNULL(J.OTHER_CHARGES,0) ELSE 0 END )+      
   (CASE WHEN @BPICKRO=1 THEN ISNULL(J.ROUND_OFF,0) ELSE 0 END)) AS PURCHASE_PRICE, A.MRP, B.ARTICLE_CODE, B.ARTICLE_NO, B.ARTICLE_NAME, B.ARTICLE_DESC,       
   SN.PARA1_NAME, SN.PARA2_NAME, SN.PARA3_NAME,SN.PARA4_NAME, SN.PARA5_NAME, SN.PARA6_NAME,     
   F.UOM_CODE, F.UOM_NAME, J.FREIGHT, J.DISCOUNT_AMOUNT,       
   J.TAX_AMOUNT, I.FORM_ID,I.FORM_NAME, J.OTHER_CHARGES, I.TAX_PERCENTAGE,       
   ISNULL(PMT.QUANTITY_IN_STOCK,0) AS [QUANTITY_IN_STOCK], (A.PURCHASE_PRICE - J.DISCOUNT_AMOUNT) AS RATE,      
   A.BARCODE_CODING_SCHEME AS CODING_SCHEME,A.FIX_MRP,A.PRODUCT_NAME ,B1.BIN_ID,B2.BIN_NAME,  
   B.ALIAS AS ARTICLE_ALIAS,B.STOCK_NA     
   FROM SKU A             
    LEFT OUTER JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE                    
    LEFT OUTER JOIN UOM F (NOLOCK) ON B.UOM_CODE = F.UOM_CODE                    
   LEFT OUTER JOIN FORM I (NOLOCK) ON A.FORM_ID = I.FORM_ID     
     LEFT OUTER JOIN sku_names SN (NOLOCK) ON SN.product_Code =A.product_code   
   LEFT JOIN SKU_OH J (NOLOCK) ON J.product_code =A.product_code  
   JOIN BINUSERS  BU(NOLOCK) ON BU.user_code= @CUSERCODE         
   LEFT OUTER JOIN PMT01106 PMT (NOLOCK) ON PMT.PRODUCT_CODE=A.PRODUCT_CODE    
   AND BU.BIN_ID=ISNULL(PMT.BIN_ID,'000')    
   JOIN BIN_LOC B1 (NOLOCK) ON B1.DEPT_ID=ISNULL(PMT.DEPT_ID,@CDEPTID) AND B1.BIN_ID=ISNULL(PMT.BIN_ID,'000')     
   JOIN BIN B2 ON B2.BIN_ID=B1.BIN_ID    
   WHERE B1.DEPT_ID = @CDEPTID  
   AND A.PRODUCT_CODE = @CWHERE  
   order by (CASE WHEN B2.MAJOR_BIN_ID =@CBIN_ID THEN 0 ELSE 1 END ), ISNULL(PMT.QUANTITY_IN_STOCK,0) desc
   --AND LEFT(A.PRODUCT_CODE,ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE))) = @CWHERE   
  
   END    
   ELSE    
   BEGIN    
  SELECT TOP 1 A.AC_CODE, F.UOM_TYPE, SN.SECTION_NAME, SN.SUB_SECTION_NAME, A.PRODUCT_CODE, A.INV_DT,       
   A.INV_NO,  (SN.PP+(CASE WHEN @BPICKFREIGHT=1 THEN ISNULL(J.FREIGHT,0) ELSE 0 END)+      
   (CASE WHEN @BPICKOC=1 THEN ISNULL(J.OTHER_CHARGES,0) ELSE 0 END )+      
   (CASE WHEN @BPICKRO=1 THEN ISNULL(J.ROUND_OFF,0) ELSE 0 END)) AS PURCHASE_PRICE, A.MRP, B.ARTICLE_CODE, B.ARTICLE_NO, B.ARTICLE_NAME, B.ARTICLE_DESC,       
   SN.PARA1_NAME, SN.PARA2_NAME, SN.PARA3_NAME,SN.PARA4_NAME, SN.PARA5_NAME, SN.PARA6_NAME,     
   F.UOM_CODE, F.UOM_NAME, J.FREIGHT, J.DISCOUNT_AMOUNT,       
   J.TAX_AMOUNT, I.FORM_ID,I.FORM_NAME, J.OTHER_CHARGES, I.TAX_PERCENTAGE,       
  0 AS [QUANTITY_IN_STOCK], (A.PURCHASE_PRICE - J.DISCOUNT_AMOUNT) AS RATE,      
   A.BARCODE_CODING_SCHEME AS CODING_SCHEME,A.FIX_MRP,A.PRODUCT_NAME ,B2.BIN_ID,B2.BIN_NAME,  
   B.ALIAS AS ARTICLE_ALIAS,B.STOCK_NA      
   FROM SKU A             
    LEFT OUTER JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE                            
    LEFT OUTER JOIN UOM F (NOLOCK) ON B.UOM_CODE = F.UOM_CODE                    
   LEFT OUTER JOIN FORM I (NOLOCK) ON A.FORM_ID = I.FORM_ID             
   LEFT JOIN SKU_OH J (NOLOCK) ON A.PRODUCT_CODE = J.PRODUCT_CODE         
    LEFT OUTER JOIN SKU_NAMES SN (NOLOCK) ON SN.product_Code =A.product_code   
   LEFT OUTER JOIN PMT01106 PMT (NOLOCK) ON PMT.PRODUCT_CODE=A.PRODUCT_CODE  and bin_id=@CBIN_ID  
   JOIN BIN_LOC B1 (NOLOCK) ON B1.DEPT_ID=ISNULL(PMT.DEPT_ID,@CDEPTID) AND B1.BIN_ID=ISNULL(PMT.BIN_ID,@CBIN_ID )     
   JOIN BIN B2 ON B2.BIN_ID=B1.BIN_ID    
   WHERE       A.PRODUCT_CODE = @CWHERE 
   --LEFT(A.PRODUCT_CODE,ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),
   --LEN(A.PRODUCT_CODE))) = @CWHERE  
    
        
   END    
       
GOTO LAST      
      
LBLGETPRODUCTINFO:      

IF @NNAVMODE=1    
  BEGIN     
 SELECT ISNULL(B.QUANTITY_IN_STOCK,0) AS QUANTITY_IN_STOCK, A.BARCODE_CODING_SCHEME AS CODING_SCHEME,    
 B1.BIN_ID,B2.BIN_NAME,C.ALIAS AS ARTICLE_ALIAS     
 FROM SKU A  
 JOIN BINUSERS  BU(NOLOCK) ON BU.user_code= @CUSERCODE         
 LEFT OUTER JOIN PMT01106 B (NOLOCK)  ON A.PRODUCT_CODE = B.PRODUCT_CODE    
 AND BU.BIN_ID=ISNULL(B.BIN_ID,'000')       
 JOIN ARTICLE C (NOLOCK) ON A.ARTICLE_CODE = C.ARTICLE_CODE     
 JOIN BIN_LOC B1 (NOLOCK) ON B1.DEPT_ID=ISNULL(B.DEPT_ID,@CDEPTID) AND B1.BIN_ID=ISNULL(B.BIN_ID,'000')     
 JOIN BIN B2 ON B2.BIN_ID=B1.BIN_ID    
 WHERE A.PRODUCT_CODE = @CWHERE AND B1.DEPT_ID = @CDEPTID  AND ISNULL(B.QUANTITY_IN_STOCK,0) > 0        
 END  
 ELSE   
 BEGIN  
 SELECT TOP 1 ISNULL(B.QUANTITY_IN_STOCK,0) AS QUANTITY_IN_STOCK, A.BARCODE_CODING_SCHEME AS CODING_SCHEME,    
 B2.BIN_ID,B2.BIN_NAME,C.ALIAS AS ARTICLE_ALIAS     
 FROM SKU A        
 LEFT OUTER JOIN PMT01106 B (NOLOCK)  ON A.PRODUCT_CODE = B.PRODUCT_CODE        
 JOIN ARTICLE C (NOLOCK) ON A.ARTICLE_CODE = C.ARTICLE_CODE     
  JOIN BIN_LOC B1 (NOLOCK) ON B1.DEPT_ID=ISNULL(B.DEPT_ID,@CDEPTID) AND B1.BIN_ID=ISNULL(B.BIN_ID,'000')     
 JOIN BIN B2 ON B2.BIN_ID=B1.BIN_ID    
 WHERE A.PRODUCT_CODE = @CWHERE   
 --AND B1.DEPT_ID = @CDEPTID   
   
 END    
      
GOTO LAST      
      
LBLGETREPORT:      
      
 SELECT * FROM VW_CANCELUNCANCEL_QBF  WHERE XN_ID =@CMEMOID      
      
GOTO LAST      
      
LAST:      
END  
