
create PROCEDURE SPPPC_BUYERORDER
(
 @NQUERYID INT=1,
 @CARTICLE_CODE VARCHAR(100)='',
 @CORDER_ID VARCHAR(50)='',
 @CPARA1_CODE VARCHAR(10)='',
 @CSIZEGROUP_CODE VARCHAR(100)='',
 @CROW_ID VARCHAR(100)='',
 @BPASTE BIT=0,
 @NARTICLE_TYPE INT=0
)
AS
BEGIN

 DECLARE @CNEWORDER_ID VARCHAR(100),@CNEWROW_ID VARCHAR(100)
IF @NQUERYID=1
GOTO LBLORDERLIST
ELSE IF @NQUERYID=2
GOTO LBLRMARTICLE
ELSE IF @NQUERYID=3
GOTO LBLPENDINGRMARTICLE
ELSE
GOTO END_PROC

	LBLORDERLIST:           
	   
	   IF OBJECT_ID('TEMPDB..#TMPORDER','U') IS NOT NULL
	      DROP TABLE #TMPORDER
	      
		SELECT A.ORDER_ID, B.ARTICLE_CODE ,ART.ARTICLE_NO,ART.ARTICLE_NAME,
			   P1.PARA1_NAME AS COLOR,
			   P1.PARA1_CODE AS PARA1_CODE,
			   B.PARA3_CODE,
			   P3.PARA3_NAME,
			   E.SIZEGROUP_CODE AS SIZEGROUP_CODE,
			   E.SIZEGROUP_NAME AS SIZEGROUP,
			   SUM(B.QUANTITY) AS  ORDER_QTY ,
			   CASE WHEN BOM.REF_ROW_ID IS NULL THEN 0 
			        WHEN ISNULL(PEND.PENDING ,0)>0 THEN 2
			   ELSE 1 END AS BOM,
			   CASE WHEN JOBS.REF_ROW_ID IS NULL THEN 0
			        -- WHEN ISNULL(PEND.PENDING ,0)>0 THEN 2
			    ELSE 1 END AS JOB,
			   B.ROW_ID
			  
	    INTO #TMPORDER
		FROM PPC_BUYER_ORDER_MST A (NOLOCK)
		JOIN PPC_BUYER_ORDER_DET B (NOLOCK) ON A.ORDER_ID=B.ORDER_ID
		JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=B.ARTICLE_CODE
		JOIN PPC_SIZEGROUP E (NOLOCK) ON E.SIZEGROUP_CODE=B.SIZEGROUP_CODE
		JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE =B.PARA1_CODE 
		JOIN PARA3 P3 (NOLOCK) ON P3.PARA3_CODE =B.PARA3_CODE 
		LEFT OUTER JOIN
		(
		 SELECT REF_ROW_ID FROM PPC_BO_ART_BOM A (NOLOCK)
		 GROUP BY REF_ROW_ID
		) BOM ON BOM.REF_ROW_ID=B.ROW_ID
		LEFT OUTER JOIN
		(
		 SELECT REF_ROW_ID FROM PPC_BO_ART_JOBS A (NOLOCK)
		 GROUP BY REF_ROW_ID
		) JOBS ON JOBS.REF_ROW_ID=B.ROW_ID
		LEFT OUTER JOIN
		(
		 SELECT A.REF_ROW_ID ,COUNT(*) AS PENDING
		  FROM PPC_BO_ART_BOM A  (NOLOCK)
		  LEFT JOIN 
		  (
		   SELECT BOM_ARTICLE_CODE , REF_ROW_ID ,SUM(CONSUME_QTY) AS CONSUME_QTY
		   FROM PPC_BO_ART_JOBS_CONSUME  (NOLOCK)
		   GROUP BY BOM_ARTICLE_CODE ,REF_ROW_ID 
		  ) B ON A.REF_ROW_ID =B.REF_ROW_ID AND A.BOM_ARTICLE_CODE =B.BOM_ARTICLE_CODE 
		  WHERE 
		 -- A.REF_ROW_ID='C53E32F0-BC74-4C91-9DCD-190D6571A98E' AND
		   AVG_QTY >CONSUME_QTY  
		  GROUP BY A.REF_ROW_ID
		) PEND ON PEND.REF_ROW_ID =B.ROW_ID 
		WHERE (@CARTICLE_CODE='' OR B.ARTICLE_CODE=@CARTICLE_CODE)
		AND (@CORDER_ID='' OR A.ORDER_ID=@CORDER_ID)
		and (@NARTICLE_TYPE=0 or art.article_type =@NARTICLE_TYPE )
		GROUP BY  P1.PARA1_CODE ,B.PARA3_CODE,
			   P3.PARA3_NAME,B.ROW_ID,E.SIZEGROUP_CODE,A.ORDER_ID,B.ARTICLE_CODE ,ART.ARTICLE_NO,ART.ARTICLE_NAME,P1.PARA1_NAME,E.SIZEGROUP_NAME,
		 CASE WHEN BOM.REF_ROW_ID IS NULL THEN 0 
			        WHEN ISNULL(PEND.PENDING ,0)>0 THEN 2
			   ELSE 1 END ,
			   CASE WHEN JOBS.REF_ROW_ID IS NULL THEN 0
			       --  WHEN ISNULL(PEND.PENDING ,0)>0 THEN 2
			    ELSE 1 END 
		
		
		DECLARE @COLNAME VARCHAR(MAX),@DISPLAYCOLNAME VARCHAR(MAX),
		@DTSQL NVARCHAR(MAX)
		
		SET @DISPLAYCOLNAME=''
	    SET @COLNAME=''
	    
		IF OBJECT_ID('TEMPDB..#TMPJOBS','U') IS NOT NULL
	      DROP TABLE #TMPJOBS

		SELECT C.ROW_ID, JOB_NAME,CAST(1 AS INT) AS JOB_VALUE 
		INTO #TMPJOBS
		FROM PPC_BO_ART_JOBS A (NOLOCK)
		JOIN JOBS B (NOLOCK) ON A.JOB_CODE =B.JOB_CODE 
		JOIN #TMPORDER C ON C.ROW_ID =A.REF_ROW_ID 
		GROUP BY C.ROW_ID, JOB_NAME 
		
		IF OBJECT_ID('TEMPDB..#TMPJ','U') IS NOT NULL
	      DROP TABLE #TMPJ
        
        SELECT DISTINCT JOB_NAME INTO #TMPJ FROM  #TMPJOBS
		
		
		SELECT @COLNAME=ISNULL(@COLNAME+',','')+QUOTENAME(JOB_NAME)
	    FROM #TMPJ WHERE JOB_NAME <>''
	    ORDER BY JOB_NAME
	    
	   
	    
	    IF @COLNAME<>''
	    SET @DISPLAYCOLNAME=' '+@COLNAME
	    
	    SET @COLNAME=SUBSTRING(@COLNAME,2,LEN(@COLNAME))
	    
	    
	    
	 --   SET @COLNAME=''
	    
		--SET @DTSQL=N'SELECT A.ORDER_ID,  A.PARA1_CODE ,A.ROW_ID, A.SIZEGROUP_CODE,A.ARTICLE_CODE ,A.ARTICLE_NO,A.ARTICLE_NAME,
		--	         A.COLOR,A.SIZEGROUP,A.ORDER_QTY ,A.BOM FROM #TMPORDER A'
				
		--PRINT @DTSQL
		--EXEC SP_EXECUTESQL @DTSQL
		
		
		IF EXISTS(SELECT TOP 1 'U' FROM #TMPJOBS)
		BEGIN
		     
		     SET @DTSQL=N'SELECT A.ORDER_ID,  A.PARA1_CODE,A.PARA3_NAME ,A.ROW_ID,JB_ROW_ID,A.SIZEGROUP_CODE,A.ARTICLE_CODE ,A.ARTICLE_NO,A.ARTICLE_NAME,
			         A.COLOR,A.SIZEGROUP,A.ORDER_QTY ,A.BOM,A.JOB,B.*
			     FROM #TMPORDER A
		        LEFT  JOIN
		         (
		        SELECT ROW_ID AS JB_ROW_ID '+@DISPLAYCOLNAME+'
				FROM #TMPJOBS
				PIVOT (MAX(JOB_NAME) FOR JOB_NAME IN ('+@COLNAME+')) AS PTABLE
				) B ON A.ROW_ID=B.JB_ROW_ID'
				
		
		END
		ELSE
		BEGIN
		      SET @DTSQL=N'SELECT A.ORDER_ID,  A.PARA1_CODE,A.PARA3_NAME ,A.ROW_ID,A.SIZEGROUP_CODE,A.ARTICLE_CODE ,A.ARTICLE_NO,A.ARTICLE_NAME,
			         A.COLOR,A.SIZEGROUP,A.ORDER_QTY ,A.BOM,A.JOB
			     FROM #TMPORDER A '
		
		END
		 
		PRINT @DTSQL
		EXEC SP_EXECUTESQL @DTSQL
		
		
 GOTO END_PROC

 LBLRMARTICLE:
    
    IF OBJECT_ID('TEMPDB..#TMPARTBOM','U') IS NOT NULL
       DROP TABLE #TMPARTBOM
    
    SELECT  CAST(1 AS BIT) AS CHK,CASE WHEN ART .ARTICLE_TYPE=1 THEN 'FINISH GOOD'
       WHEN ART.ARTICLE_TYPE=2 THEN 'RAW MATERIAL'
       WHEN ART.ARTICLE_TYPE=3 THEN 'FABRIC'
       WHEN ART.ARTICLE_TYPE=4 THEN 'TRIM' ELSE 'PACKING' END AS ARTICLE_TYPE, 
       A.ARTICLE_CODE,C.BOM_ARTICLE_CODE,
       ISNULL(BM.AVG_QTY,C.AVG_QTY) AS AVG_QTY,
	   C.ROW_ID,
	   B.LAST_UPDATE,
	   C.RATE,
	   A.PARA1_CODE AS BOM_PARA1_CODE,
	   A.SIZEGROUP_CODE AS BOM_SIZEGROUP_CODE,
	   CONVERT(NUMERIC(12,2),A.QUANTITY ) AS ORD_QTY,
	   CONVERT(NUMERIC(12,2),A.QUANTITY*ISNULL(BM.AVG_QTY,C.AVG_QTY) ) AS CONSUME_QTY,
	   CONVERT(NUMERIC(12,2),(C.RATE*ISNULL(BM.AVG_QTY,C.AVG_QTY))) AS TOTALCOST ,  
	  ART.ARTICLE_NO AS BOM_ARTICLE_NO,     
	  ART.ARTICLE_NAME AS BOM_ARTICLE_NAME,     
	  ISNULL(BU.CONVERSION_UOM_NAME,UOM.UOM_NAME) AS BOM_UOM_NAME, 
	  UOM.UOM_TYPE,
	  SD.SUB_SECTION_NAME,
	  SD.SUB_SECTION_CODE,
	  SM.SECTION_NAME,
	  SM.SECTION_CODE,
	  P1.PARA1_NAME AS BOM_PARA1_NAME,
	  SG.SIZEGROUP_NAME AS BOM_SIZEGROUP_NAME,  
	  A.ROW_ID AS REF_ROW_ID,
     ART.ARTICLE_NAME,
     UOM.UOM_NAME AS UOM_NAME,
     0 AS USES,
     IMAGE_1=CAST('' AS VARCHAR(1000)),
     ISNULL(C.DEBIT_MATERIAL,0) AS DEBIT_MATERIAL
    INTO #TMPARTBOM
    FROM PPC_BUYER_ORDER_DET A
    JOIN PPC_BUYER_ORDER_MST B ON A.ORDER_ID=B.ORDER_ID
    JOIN PPC_BO_ART_BOM C ON A.ROW_ID=C.REF_ROW_ID
    JOIN ARTICLE ART ON C.BOM_ARTICLE_CODE = ART.ARTICLE_CODE 
    JOIN UOM UOM ON ART.UOM_CODE = UOM.UOM_CODE    
    LEFT JOIN PPC_UOM_CONVERSION UC ON UC.UOM_CODE=UOM.UOM_CODE
    LEFT OUTER JOIN PPC_BOM_UOM BU ON BU.CONVERSION_UOM_CODE=UC.CONVERSION_UOM_CODE
    JOIN SECTIOND SD ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE
	JOIN SECTIONM SM ON SD.SECTION_CODE=SM.SECTION_CODE 
	JOIN PPC_SIZEGROUP SG ON SG.SIZEGROUP_CODE=A.SIZEGROUP_CODE  
	LEFT JOIN PARA1 P1 ON P1.PARA1_CODE=A.PARA1_CODE
	LEFT JOIN
	(
		SELECT ARTICLE_CODE ,BOM_ARTICLE_CODE ,AVG_QTY  
		FROM PPC_ART_BOM
		GROUP BY ARTICLE_CODE ,BOM_ARTICLE_CODE ,AVG_QTY  
	) BM ON BM.ARTICLE_CODE =A.ARTICLE_CODE AND C.BOM_ARTICLE_CODE =BM.BOM_ARTICLE_CODE 
    WHERE B.CANCELLED=0 AND A.ORDER_ID=@CORDER_ID 
    and (@NARTICLE_TYPE=0 or art.article_type =@NARTICLE_TYPE )
    AND A.ARTICLE_CODE=@CARTICLE_CODE
    AND A.PARA1_CODE=@CPARA1_CODE AND A.SIZEGROUP_CODE=@CSIZEGROUP_CODE AND A.ROW_ID=@CROW_ID --AND 1=2  

    
     
    IF (SELECT COUNT(*) FROM #TMPARTBOM) =0 
    BEGIN
       
  
         SELECT TOP 1  @CNEWORDER_ID=A.ORDER_ID,@CNEWROW_ID=A.ROW_ID
         FROM PPC_BUYER_ORDER_DET A
         JOIN PPC_BUYER_ORDER_MST B ON A.ORDER_ID=B.ORDER_ID
         JOIN PPC_BO_ART_BOM C ON A.ROW_ID=C.REF_ROW_ID
         WHERE A.ARTICLE_CODE=@CARTICLE_CODE AND A.ORDER_ID<>@CORDER_ID
         AND A.PARA1_CODE=@CPARA1_CODE AND A.SIZEGROUP_CODE=@CSIZEGROUP_CODE
         ORDER BY B.LAST_UPDATE DESC
         
         
      INSERT INTO #TMPARTBOM (CHK,ARTICLE_TYPE,ARTICLE_CODE,BOM_ARTICLE_CODE,AVG_QTY,ROW_ID,LAST_UPDATE,RATE,BOM_PARA1_CODE
                             ,BOM_SIZEGROUP_CODE,ORD_QTY,CONSUME_QTY,TOTALCOST,BOM_ARTICLE_NO,BOM_ARTICLE_NAME,BOM_UOM_NAME,UOM_TYPE
                             ,SUB_SECTION_NAME,SUB_SECTION_CODE,SECTION_NAME,SECTION_CODE,BOM_PARA1_NAME
                   ,BOM_SIZEGROUP_NAME,REF_ROW_ID,ARTICLE_NAME,UOM_NAME,USES ,DEBIT_MATERIAL )
     
     SELECT CAST(1 AS BIT) AS CHK,CASE WHEN ART .ARTICLE_TYPE=1 THEN 'FINISH GOOD'
       WHEN ART.ARTICLE_TYPE=2 THEN 'RAW MATERIAL'
       WHEN ART.ARTICLE_TYPE=3 THEN 'FABRIC'
       WHEN ART.ARTICLE_TYPE=4 THEN 'TRIM' ELSE 'PACKING' END AS ARTICLE_TYPE, 
       A.ARTICLE_CODE,C.BOM_ARTICLE_CODE,
       C.AVG_QTY,
	   CAST('LATER' AS VARCHAR(40)) AS ROW_ID,
	   B.LAST_UPDATE,
	   C.RATE,
	   A.PARA1_CODE AS BOM_PARA1_CODE,
	   A.SIZEGROUP_CODE AS BOM_SIZEGROUP_CODE,
	   CONVERT(NUMERIC(12,2),A.QUANTITY ) AS ORD_QTY,
	   CONVERT(NUMERIC(12,2),A.QUANTITY*C.AVG_QTY ) AS CONSUME_QTY,
	   CONVERT(NUMERIC(12,2),(C.RATE*C.AVG_QTY)) AS TOTALCOST ,  
	  ART.ARTICLE_NO AS BOM_ARTICLE_NO,     
	  ART.ARTICLE_NAME AS BOM_ARTICLE_NAME,     
	  ISNULL(BU.CONVERSION_UOM_NAME,UOM.UOM_NAME) AS BOM_UOM_NAME, 
	  UOM.UOM_TYPE,
	  SD.SUB_SECTION_NAME,
	  SD.SUB_SECTION_CODE,
	  SM.SECTION_NAME,
	  SM.SECTION_CODE,
	  P1.PARA1_NAME AS BOM_PARA1_NAME,
	  SG.SIZEGROUP_NAME AS BOM_SIZEGROUP_NAME,  
	  A.ROW_ID AS REF_ROW_ID,
      ART.ARTICLE_NAME,UOM.UOM_NAME,0 AS USES,
      ISNULL(C.DEBIT_MATERIAL,0) AS DEBIT_MATERIAL
    FROM PPC_BUYER_ORDER_DET A
    JOIN PPC_BUYER_ORDER_MST B ON A.ORDER_ID=B.ORDER_ID
    JOIN PPC_BO_ART_BOM C ON A.ROW_ID=C.REF_ROW_ID
    JOIN ARTICLE ART ON C.BOM_ARTICLE_CODE = ART.ARTICLE_CODE 
    JOIN UOM UOM ON ART.UOM_CODE = UOM.UOM_CODE   
    LEFT JOIN PPC_UOM_CONVERSION UC ON UC.UOM_CODE=UOM.UOM_CODE  
    LEFT OUTER JOIN PPC_BOM_UOM BU ON BU.CONVERSION_UOM_CODE=UC.CONVERSION_UOM_CODE  
    JOIN SECTIOND SD ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE
	JOIN SECTIONM SM ON SD.SECTION_CODE=SM.SECTION_CODE 
	JOIN PPC_SIZEGROUP SG ON SG.SIZEGROUP_CODE=A.SIZEGROUP_CODE  
	LEFT JOIN PARA1 P1 ON P1.PARA1_CODE=A.PARA1_CODE
    WHERE B.CANCELLED=0 AND A.ORDER_ID=@CNEWORDER_ID AND A.ARTICLE_CODE=@CARTICLE_CODE
    AND A.PARA1_CODE=@CPARA1_CODE AND A.SIZEGROUP_CODE=@CSIZEGROUP_CODE  AND A.ROW_ID=@CNEWROW_ID--AND 1=2
    and (@NARTICLE_TYPE=0 or art.article_type =@NARTICLE_TYPE )
    END
    
    
     declare @chk bit 
     if (select COUNT(*) from #TMPARTBOM)>0
     set @chk=0
     else
     set @chk=1
     --IF (SELECT COUNT(*) FROM #TMPARTBOM) =0  
     --BEGIN
    
  --drop table TMPARTBOM
  --  select *  into TMPARTBOM from #TMPARTBOM
    -- select * into TMPARTBOM from #TMPARTBOM
        INSERT INTO #TMPARTBOM (CHK,ARTICLE_TYPE,ARTICLE_CODE,BOM_ARTICLE_CODE,AVG_QTY,ROW_ID,LAST_UPDATE,RATE,BOM_PARA1_CODE
                             ,BOM_SIZEGROUP_CODE,ORD_QTY,CONSUME_QTY,TOTALCOST,BOM_ARTICLE_NO,BOM_ARTICLE_NAME,BOM_UOM_NAME,UOM_TYPE
                             ,SUB_SECTION_NAME,SUB_SECTION_CODE,SECTION_NAME,SECTION_CODE,BOM_PARA1_NAME
                             ,BOM_SIZEGROUP_NAME,REF_ROW_ID,ARTICLE_NAME,UOM_NAME,USES ,DEBIT_MATERIAL  )
                             
     SELECT   CAST(@chk AS BIT) AS CHK,CASE WHEN B .ARTICLE_TYPE=1 THEN 'FINISH GOOD'
       WHEN B.ARTICLE_TYPE=2 THEN 'RAW MATERIAL'
       WHEN B.ARTICLE_TYPE=3 THEN 'FABRIC'
       WHEN B.ARTICLE_TYPE=4 THEN 'TRIM' ELSE 'PACKING' END AS ARTICLE_TYPE, 
       A.ARTICLE_CODE,A.BOM_ARTICLE_CODE,
       A.AVG_QTY,
	   CAST('LATER' AS VARCHAR(40)) AS ROW_ID,
	   A.LAST_UPDATE,
	   A.RATE,
	   A.BOM_PARA1_CODE AS BOM_PARA1_CODE,
	   A.BOM_SIZEGROUP_CODE AS BOM_SIZEGROUP_CODE,
	   CONVERT(NUMERIC(12,2),0) AS ORD_QTY,
	   CONVERT(NUMERIC(12,2),A.AVG_QTY ) AS CONSUME_QTY,
	   CONVERT(NUMERIC(12,2),(A.RATE*A.AVG_QTY)) AS TOTALCOST ,  
	  B.ARTICLE_NO AS BOM_ARTICLE_NO,     
	  B.ARTICLE_NAME AS BOM_ARTICLE_NAME,     
	  ISNULL(BU.CONVERSION_UOM_NAME,C.UOM_NAME)  AS BOM_UOM_NAME, 
	  C.UOM_TYPE,
	  SD.SUB_SECTION_NAME,
	  SD.SUB_SECTION_CODE,
	  SM.SECTION_NAME,
	  SM.SECTION_CODE,
	  P1.PARA1_NAME AS BOM_PARA1_NAME,
	  SG.SIZEGROUP_NAME AS BOM_SIZEGROUP_NAME,  
	  A.ROW_ID AS REF_ROW_ID,
      B.ARTICLE_NAME,C.UOM_NAME,0 AS USES,
      ISNULL(B.DEBIT_MATERIAL,0) AS DEBIT_MATERIAL
    FROM PPC_ART_BOM A      
    JOIN ARTICLE B ON A.BOM_ARTICLE_CODE = B.ARTICLE_CODE      
    JOIN UOM C ON B.UOM_CODE = C.UOM_CODE 
    LEFT JOIN PPC_UOM_CONVERSION UC ON UC.UOM_CODE=C.UOM_CODE   
    LEFT OUTER JOIN PPC_BOM_UOM BU ON BU.CONVERSION_UOM_CODE=UC.CONVERSION_UOM_CODE       
    JOIN SECTIOND SD ON SD.SUB_SECTION_CODE=B.SUB_SECTION_CODE
	JOIN SECTIONM SM ON SD.SECTION_CODE=SM.SECTION_CODE 
	JOIN PPC_SIZEGROUP SG ON SG.SIZEGROUP_CODE=A.BOM_SIZEGROUP_CODE 
	left outer join #TMPARTBOM tmp on tmp.ARTICLE_CODE =a.ARTICLE_CODE and tmp.BOM_ARTICLE_CODE =a.BOM_ARTICLE_CODE   
	and tmp.BOM_SIZEGROUP_CODE=SG.SIZEGROUP_CODE
	LEFT JOIN ART_PARA1 AP1 ON AP1.ARTICLE_CODE=A.ARTICLE_CODE   
	LEFT JOIN PARA1 P1 ON P1.PARA1_CODE=AP1.PARA1_CODE    
    WHERE A.ARTICLE_CODE= @CARTICLE_CODE  
    AND (@CPARA1_CODE='0000000' OR P1.PARA1_CODE=@CPARA1_CODE )
    AND A.BOM_SIZEGROUP_CODE=@CSIZEGROUP_CODE  and tmp.ARTICLE_CODE is null
    and (@NARTICLE_TYPE=0 or b.article_type =@NARTICLE_TYPE )
    ORDER BY A.SR_NO
    
    
 
   -- END
   
   
     IF OBJECT_ID('TEMPDB..#TMPCONSUME','U') IS NOT NULL
       DROP TABLE #TMPCONSUME
    
  
    SELECT C.BOM_ARTICLE_CODE,C.REF_ROW_ID,C.CONSUME_QTY,JOBS.JOB_NAME
    INTO #TMPCONSUME
    FROM PPC_BUYER_ORDER_DET A
    JOIN PPC_BUYER_ORDER_MST B ON A.ORDER_ID=B.ORDER_ID
    JOIN PPC_BO_ART_JOBS_CONSUME C ON A.ROW_ID=C.REF_ROW_ID
    JOIN JOBS ON JOBS.JOB_CODE=C.JOB_CODE
    WHERE B.CANCELLED=0 AND A.ORDER_ID=@CORDER_ID AND A.ROW_ID=@CROW_ID
    
    IF @BPASTE=1
    BEGIN
		INSERT INTO #TMPCONSUME  
		SELECT C.BOM_ARTICLE_CODE,C.REF_ROW_ID,C.CONSUME_QTY,JOBS.JOB_NAME
		FROM PPC_BUYER_ORDER_DET A
		JOIN PPC_BUYER_ORDER_MST B ON A.ORDER_ID=B.ORDER_ID
		JOIN PPC_BO_ART_JOBS_CONSUME C ON A.ROW_ID=C.REF_ROW_ID
		JOIN JOBS ON JOBS.JOB_CODE=C.JOB_CODE
		WHERE B.CANCELLED=0 AND A.ORDER_ID=@CNEWORDER_ID AND A.ROW_ID=@CNEWROW_ID
    
    
    END
    
    
   
    
    --select * into TMPARTBOM from #TMPARTBOM
      IF OBJECT_ID('TEMPDB..#TMPJOBS1','U') IS NOT NULL
       DROP TABLE #TMPJOBS1
    
  
    SELECT DISTINCT JOB_ORDER,JOB_NAME 
    INTO #TMPJOBS1
    FROM PPC_BUYER_ORDER_DET A
    JOIN PPC_BUYER_ORDER_MST B ON A.ORDER_ID=B.ORDER_ID
    JOIN PPC_BO_ART_JOBS C ON A.ROW_ID=C.REF_ROW_ID
    JOIN JOBS ON JOBS.JOB_CODE=C.JOB_CODE
    WHERE B.CANCELLED=0 AND A.ORDER_ID=@CORDER_ID  AND A.ROW_ID=@CROW_ID
    ORDER BY JOB_ORDER
    
    
    IF @BPASTE=1
    BEGIN
        
        INSERT INTO #TMPJOBS1
          SELECT DISTINCT JOB_ORDER,JOB_NAME 
		  FROM PPC_BUYER_ORDER_DET A
		  JOIN PPC_BUYER_ORDER_MST B ON A.ORDER_ID=B.ORDER_ID
		  JOIN PPC_BO_ART_JOBS C ON A.ROW_ID=C.REF_ROW_ID
		  JOIN JOBS ON JOBS.JOB_CODE=C.JOB_CODE
		  WHERE B.CANCELLED=0 AND A.ORDER_ID=@CNEWORDER_ID  AND A.ROW_ID=@CNEWROW_ID
		  ORDER BY JOB_ORDER
    
    END
  
    
    DECLARE @CJOBNAME VARCHAR(MAX),@CDISPLAY_COL_NAME VARCHAR(MAX),@CPEND_COLNAME VARCHAR(MAX)
    SET @CJOBNAME=''
    
    SELECT @CJOBNAME=ISNULL(@CJOBNAME+',','')+QUOTENAME(JOB_NAME)
	FROM #TMPJOBS1 WHERE JOB_NAME<>''
	ORDER BY JOB_ORDER ASC
    
    SET @CDISPLAY_COL_NAME=@CJOBNAME
    SET @CJOBNAME=SUBSTRING(@CJOBNAME,2,LEN(@CJOBNAME))
   
    SELECT @CPEND_COLNAME=ISNULL(@CPEND_COLNAME+'+','')+'ISNULL('+QUOTENAME(JOB_NAME)+',0)'
	FROM #TMPJOBS1 WHERE JOB_NAME<>''
	ORDER BY JOB_ORDER ASC
	
	--VISHAL:03-NOV-2017
    SET @DTSQL=N';WITH CTE AS (SELECT *, ROW_NUMBR=ROW_NUMBER() OVER(PARTITION BY A.ARTICLE_TYPE ORDER BY A.BOM_ARTICLE_CODE) FROM #TMPARTBOM A)'
    +CHAR(13)+'UPDATE T SET T.ARTICLE_TYPE1=CASE CTE.ROW_NUMBR WHEN 1 THEN ''''+T.ARTICLE_TYPE+'''' ELSE '''' END FROM #TMPARTBOM T JOIN CTE ON T.BOM_ARTICLE_CODE=CTE.BOM_ARTICLE_CODE'
    EXEC('ALTER TABLE #TMPARTBOM ADD [ARTICLE_TYPE1] VARCHAR(100)')
    EXEC SP_EXECUTESQL @DTSQL
    --VISHAL:03-NOV-2017

    IF @CJOBNAME<>''
		SET @DTSQL=N'SELECT A.*, A.AVG_QTY-('+@CPEND_COLNAME+') AS PENDING_QTY , B.*
					 FROM #TMPARTBOM A
					LEFT  JOIN
					 (
					SELECT REF_ROW_ID,BOM_ARTICLE_CODE '+@CDISPLAY_COL_NAME+'
					FROM #TMPCONSUME
					PIVOT (SUM(CONSUME_QTY) FOR JOB_NAME IN ('+@CJOBNAME+')) AS PTABLE
					) B ON A.REF_ROW_ID=B.REF_ROW_ID  AND A.BOM_ARTICLE_CODE=B.BOM_ARTICLE_CODE 
					LEFT OUTER JOIN 
					(
					  select distinct BOM_SIZEGROUP_CODE, ARTICLE_CODE,BOM_ARTICLE_CODE,SR_NO from PPC_ART_BOM BOM
					)
					BOM ON BOM.ARTICLE_CODE=A.ARTICLE_CODE AND BOM.BOM_ARTICLE_CODE=A.BOM_ARTICLE_CODE
					and a.BOM_SIZEGROUP_CODE=bom.BOM_SIZEGROUP_CODE
					JOIN ARTICLE ART ON ART.ARTICLE_CODE=A.BOM_ARTICLE_CODE
					--ORDER BY art.article_type,BOM.SR_NO 
					ORDER BY CASE WHEN A.ARTICLE_TYPE LIKE ''RAW%'' THEN 2 WHEN A.ARTICLE_TYPE LIKE ''FABRIC%'' THEN 3 WHEN A.ARTICLE_TYPE LIKE ''TRIM%'' THEN 4 ELSE 5 END,A.ARTICLE_TYPE1 DESC,
					BOM.SR_NO'
	ELSE
	    SET @DTSQL=N'SELECT A.*,A.AVG_QTY AS PENDING_QTY FROM #TMPARTBOM A 
	    LEFT OUTER JOIN 
	    (
	     select distinct BOM_SIZEGROUP_CODE,ARTICLE_CODE,BOM_ARTICLE_CODE,SR_NO from PPC_ART_BOM BOM
	    
	    ) bom ON BOM.ARTICLE_CODE=A.ARTICLE_CODE AND BOM.BOM_ARTICLE_CODE=A.BOM_ARTICLE_CODE 
	    and a.BOM_SIZEGROUP_CODE=bom.BOM_SIZEGROUP_CODE
	    JOIN ARTICLE ART ON ART.ARTICLE_CODE=A.BOM_ARTICLE_CODE
		--ORDER BY art.article_type, BOM.SR_NO
		ORDER BY CASE WHEN A.ARTICLE_TYPE LIKE ''RAW%'' THEN 2 WHEN A.ARTICLE_TYPE LIKE ''ACCESSO%'' THEN 3 WHEN A.ARTICLE_TYPE LIKE ''TRIM%'' THEN 4 ELSE 5 END,A.ARTICLE_TYPE1 DESC,
		BOM.SR_NO,ARTICLE_TYPE'

				
	PRINT @DTSQL
	EXEC SP_EXECUTESQL @DTSQL
  
 GOTO END_PROC

 LBLPENDINGRMARTICLE:      
       
     SELECT A.ARTICLE_CODE,ARTICLE_NO,ARTICLE_NAME,PURCHASE_PRICE ,UOM_NAME,A.DISCON       
     FROM ARTICLE A (NOLOCK)      
     JOIN UOM B (NOLOCK) ON A.UOM_CODE =B.UOM_CODE  
     LEFT OUTER JOIN
     (
       SELECT BOM_ARTICLE_CODE 
       FROM PPC_BO_ART_BOM A
       JOIN PPC_BUYER_ORDER_DET B ON A.REF_ROW_ID=B.ROW_ID 
       WHERE ARTICLE_CODE=@CARTICLE_CODE
       GROUP BY BOM_ARTICLE_CODE
     ) C ON A.ARTICLE_CODE=C.BOM_ARTICLE_CODE    
     WHERE A.ARTICLE_TYPE =2 AND A.INACTIVE =0     
     AND C.BOM_ARTICLE_CODE IS NULL 
       
 GOTO END_PROC 
 
END_PROC:     
END
