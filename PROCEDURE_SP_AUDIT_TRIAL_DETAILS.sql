create PROCEDURE SP_AUDIT_TRIAL_DETAILS  
(        
 @NQUERYID INT=0,        
 @CFMDT DATETIME='',        
 @LOC_ID VARCHAR(100)='',        
 @CMEMO_ID VARCHAR(100)='',        
 @USER_CODE VARCHAR(100)='',  
 @SHOW_DATASET1 BIT=1  ,
 @CTODT DATETIME=''
)      
AS       
BEGIN   
     --(dinkar) Replace  left(memoid,2) to Location_code 

SET NOCOUNT ON      
--REPORT PROCEDURE      
DECLARE @XN INT,@WHERE VARCHAR(MAX),@CCMD VARCHAR(MAX),@XN_TYPE VARCHAR(10),@TABLE VARCHAR(100),@MEMO VARCHAR(100)      
,@KEY_FIELD VARCHAR(100),@REMARKS_FIELD VARCHAR(100),@MEMO_NO VARCHAR(100),@MEMO_DT VARCHAR(100),@NET_AMT VARCHAR(100)      
,@TOTAL_MODIFIED_MEMO INT,@PKEY VARCHAR(1000)      
      
SET @XN=0      
      
IF @NQUERYID=1      
   SELECT @XN_TYPE='WSL',@TABLE='INM01106',@REMARKS_FIELD='REMARKS',@MEMO_NO='INV_NO',@MEMO_DT='INV_DT',@NET_AMT='NET_AMOUNT',@PKEY='INV_ID'      
ELSE IF @NQUERYID=2      
   SELECT @XN_TYPE='SLS',@TABLE='CMM01106',@REMARKS_FIELD='REMARKS',@MEMO_NO='CM_NO',@MEMO_DT='CM_DT',@NET_AMT='NET_AMOUNT',@PKEY='CM_ID'      
ELSE IF @NQUERYID=3      
   SELECT @XN_TYPE='PUR',@TABLE='PIM01106',@REMARKS_FIELD='REMARKS',@MEMO_NO='MRR_NO',@MEMO_DT='MRR_DT',@NET_AMT='TOTAL_AMOUNT',@PKEY='MRR_ID'      
ELSE IF @NQUERYID=4--17 MAR 2018  
   SELECT @XN_TYPE='VCH',@TABLE='VM01106',@REMARKS_FIELD='VM_ID',@MEMO_NO='VOUCHER_NO',@MEMO_DT='VOUCHER_DT',@NET_AMT='CRTOTAL',@PKEY='VM_ID'      
ELSE IF @NQUERYID=5      
   SELECT @XN_TYPE='PRT',@TABLE='RMM01106',@REMARKS_FIELD='REMARKS',@MEMO_NO='RM_NO',@MEMO_DT='RM_DT',@NET_AMT='TOTAL_AMOUNT',@PKEY='RM_ID'      
ELSE IF @NQUERYID=7      
   SELECT @XN_TYPE='PO',@TABLE='POM01106',@REMARKS_FIELD='REMARKS',@MEMO_NO='PO_NO',@MEMO_DT='PO_DT',@NET_AMT='TOTAL_AMOUNT',@PKEY='PO_ID'      
ELSE IF @NQUERYID=8      
   SELECT @XN_TYPE='BO',@TABLE='BUYER_ORDER_MST',@REMARKS_FIELD='REMARKS',@MEMO_NO='ORDER_NO',@MEMO_DT='ORDER_DT',@NET_AMT='TOTAL_AMOUNT',@PKEY='ORDER_ID'    
ELSE IF @NQUERYID=9      
   SELECT @XN_TYPE='WSR',@TABLE='CNM01106',@REMARKS_FIELD='REMARKS',@MEMO_NO='CN_NO',@MEMO_DT='CN_DT',@NET_AMT='TOTAL_AMOUNT',@PKEY='CN_ID'      
ELSE IF @NQUERYID=10      
   SELECT @XN_TYPE='ARC',@TABLE='ARC01106',@REMARKS_FIELD='REMARKS',@MEMO_NO='ADV_REC_NO',@MEMO_DT='ADV_REC_DT',@NET_AMT='NET_AMOUNT',@PKEY='ADV_REC_ID'      
              
SELECT TOP 1 @KEY_FIELD=LEFT(KEY_FIELDS,LEN(KEY_FIELDS)-1)       
FROM XN_AUDIT_TRIAL_MST (NOLOCK)      
WHERE XN_TYPE=@XN_TYPE AND TABLE_NAME=@TABLE      
      
SELECT TOP 1 @XN=LEN(ISNULL(KEY_VALUE,''))       
FROM XN_AUDIT_TRIAL_DET (NOLOCK)       
WHERE XN_TYPE=@XN_TYPE AND TABLE_NAME=@TABLE      
      
SET @WHERE=''      
SET @WHERE='WHERE D.XN_TYPE='''+@XN_TYPE+''' AND CAST(D.AUDITED_ON AS DATE) BETWEEN '''+REPLACE(CONVERT(VARCHAR,@CFMDT,102),'.','-')+''' AND '''+REPLACE(CONVERT(VARCHAR,@CTODT,102),'.','-')+'''
AND D.TABLE_NAME='''+@TABLE+''''      
      
IF LEN(ISNULL(@LOC_ID,''))>0      
   IF LEN(@WHERE)=0      
      SET @WHERE='WHERE Location_code='''+@LOC_ID+''''      
   ELSE      
      SET @WHERE+=' AND Location_code='''+@LOC_ID+''''      
            
IF LEN(ISNULL(@CMEMO_ID,''))>0      
   IF LEN(@WHERE)=0      
      SET @WHERE='WHERE KEY_VALUE LIKE '''+@CMEMO_ID+'%'''      
   ELSE      
      SET @WHERE+=' AND KEY_VALUE LIKE '''+@CMEMO_ID+'%'''      
            
IF LEN(ISNULL(@USER_CODE,''))>0      
   IF LEN(@WHERE)=0      
      SET @WHERE='WHERE CWIZUSERCODE='''+@USER_CODE+''''      
   ELSE      
      SET @WHERE+=' AND CWIZUSERCODE='''+@USER_CODE+''''      
      
IF OBJECT_ID('TEMPDB..#TOTAL','U') IS NOT NULL      
   DROP TABLE #TOTAL      
IF OBJECT_ID('TEMPDB..#TEMP','U') IS NOT NULL      
   DROP TABLE #TEMP      
SELECT CAST(1 AS BIT) VISIT      
,CAST(1 AS INT) TOTAL_MODIFIED_MEMO       
,KEY_VALUE MEMO_ID       
,KEY_VALUE MEMO_NO      
,REPLACE(CONVERT(VARCHAR,AUDITED_ON,104),'.','-') MEMO_DT      
,KEY_VALUE REMARKS ,OLDVAL ORG_AMT ,NEWVAL CURR_AMT ,OLDVAL [DIFFERENCE] ,AUDITED_ON ,DATA_TYPE      
INTO #TOTAL      
FROM XN_AUDIT_TRIAL_DET WHERE 1=2      
SET @CCMD=''      
      
ALTER TABLE #TOTAL ALTER COLUMN REMARKS VARCHAR(MAX)      
/*      
SET @CCMD='INSERT #TOTAL (VISIT,TOTAL_MODIFIED_MEMO,MEMO_ID,MEMO_NO,MEMO_DT,REMARKS,ORG_AMT,CURR_AMT,[DIFFERENCE],AUDITED_ON ,DATA_TYPE)       
SELECT CAST(0 AS BIT) VISIT      
,CAST(0 AS INT)      
,KEY_VALUE MEMO_ID      
,(SELECT TOP 1 '+@MEMO_NO+' FROM '+@TABLE+' (NOLOCK) WHERE '+@KEY_FIELD+'=LEFT(KEY_VALUE,'+CAST(@XN AS VARCHAR)+'))MEMO_NO   
,(SELECT TOP 1 REPLACE(CONVERT(VARCHAR,'+@MEMO_DT+',104),''.'',''-'') FROM '+@TABLE+'(NOLOCK) WHERE '+@KEY_FIELD+'=LEFT(KEY_VALUE,'+CAST(@XN AS VARCHAR)+'))MEMO_DT  
,(SELECT TOP 1 ISNULL('+@REMARKS_FIELD+','''') FROM '+@TABLE+' (NOLOCK) WHERE '+@KEY_FIELD+'=LEFT(KEY_VALUE,'+CAST(@XN AS VARCHAR)+'))REMARKS  
,OLDVAL AS ORG_AMT      
,NEWVAL AS CURR_AMT      
,CASE DATA_TYPE WHEN ''NUMERIC'' THEN CAST(OLDVAL AS NUMERIC(18,4))-CAST(NEWVAL AS NUMERIC(18,4)) END AS [DIFFERENCE]      
,AUDITED_ON       
,DATA_TYPE      
FROM XN_AUDIT_TRIAL_DET D (NOLOCK)'+CHAR(13)+@WHERE+' AND FIELD_NAME='''+@NET_AMT+''''      
--PRINT @CCMD      
EXEC(@CCMD)      
--RETURN  
UPDATE #TOTAL SET ORG_AMT=(SELECT TOP 1 X.OLDVAL       
         FROM XN_AUDIT_TRIAL_DET X (NOLOCK)       
         WHERE X.XN_TYPE=@XN_TYPE AND X.KEY_VALUE=#TOTAL.MEMO_ID AND X.FIELD_NAME=@NET_AMT       
         ORDER BY X.AUDITED_ON)       
DELETE #TOTAL      
*/  
SET @CCMD='INSERT #TOTAL (VISIT,TOTAL_MODIFIED_MEMO,MEMO_ID,MEMO_NO,MEMO_DT,REMARKS,ORG_AMT,CURR_AMT,[DIFFERENCE],AUDITED_ON ,DATA_TYPE)      
           SELECT CAST(0 AS BIT) VISIT      
   ,CAST(0 AS INT)      
   ,KEY_VALUE MEMO_ID      
   ,(SELECT TOP 1 '+@MEMO_NO+' FROM '+@TABLE+' (NOLOCK) WHERE '+@KEY_FIELD+'=LEFT(KEY_VALUE,'+CAST(@XN AS VARCHAR)+'))MEMO_NO       
   ,(SELECT TOP 1 REPLACE(CONVERT(VARCHAR,'+@MEMO_DT+',104),''.'',''-'') FROM '+@TABLE+'(NOLOCK) WHERE '+@KEY_FIELD+'=LEFT(KEY_VALUE,'+CAST(@XN AS VARCHAR)+'))MEMO_DT  
   ,(SELECT TOP 1 ISNULL('+@REMARKS_FIELD+','''') FROM '+@TABLE+' (NOLOCK) WHERE '+@KEY_FIELD+'=LEFT(KEY_VALUE,'+CAST(@XN AS VARCHAR)+'))REMARKS  
   ,(SELECT TOP 1 P1.TOTAL_AMOUNT FROM PIM01106 P1 (NOLOCK) WHERE P1.MRR_ID=LEFT(D.KEY_VALUE,'+CAST(@XN AS VARCHAR)+')) AS ORG_AMT      
   ,(SELECT TOP 1 P1.TOTAL_AMOUNT FROM PIM01106 P1 (NOLOCK) WHERE P1.MRR_ID=LEFT(D.KEY_VALUE,'+CAST(@XN AS VARCHAR)+')) AS CURR_AMT      
   ,CAST(0 AS NUMERIC(18,4)) AS [DIFFERENCE]      
   ,D.AUDITED_ON       
   ,D.DATA_TYPE      
   FROM XN_AUDIT_TRIAL_DET D (NOLOCK) 
   LEFT JOIN #TOTAL T ON D.KEY_VALUE=T.MEMO_ID'
   +CHAR(13)+@WHERE+' AND T.MEMO_ID IS NULL'      
--PRINT @CCMD      
EXEC(@CCMD)         
  
SET @CCMD='UPDATE #TOTAL SET ORG_AMT=(SELECT '+@NET_AMT+' FROM '+@TABLE+' T1 (NOLOCK) WHERE T1.'+@PKEY+'=#TOTAL.MEMO_ID) WHERE ORG_AMT IS NULL'      
EXEC(@CCMD)      
SET @CCMD='UPDATE #TOTAL SET CURR_AMT=ORG_AMT WHERE CURR_AMT IS NULL'      
EXEC(@CCMD)      
UPDATE #TOTAL SET [DIFFERENCE]=CAST(CAST(ORG_AMT AS NUMERIC(18,4))-CAST(CURR_AMT AS NUMERIC(18,4)) AS VARCHAR)      
SELECT @TOTAL_MODIFIED_MEMO=COUNT(DISTINCT MEMO_ID) FROM #TOTAL      
UPDATE #TOTAL SET TOTAL_MODIFIED_MEMO=@TOTAL_MODIFIED_MEMO         
      
--DATA SET 1      
SELECT * INTO #TEMP FROM #TOTAL      
DELETE #TOTAL      
;WITH CTE      
AS      
(      
SELECT ROW_NUMBER() OVER(PARTITION BY MEMO_ID ORDER BY AUDITED_ON DESC)ROW,* FROM #TEMP      
)      
INSERT #TOTAL (VISIT,TOTAL_MODIFIED_MEMO,MEMO_ID,MEMO_DT,MEMO_NO,REMARKS,ORG_AMT,CURR_AMT,[DIFFERENCE],AUDITED_ON,DATA_TYPE)      
SELECT         VISIT,TOTAL_MODIFIED_MEMO,MEMO_ID,MEMO_DT,MEMO_NO,REMARKS,ORG_AMT ORIGINAL_AMT,CURR_AMT CURRENT_AMT      
,CASE DATA_TYPE WHEN 'NUMERIC' THEN CAST(ORG_AMT AS NUMERIC(18,4))-CAST(CURR_AMT AS NUMERIC(18,4))       
                ELSE CAST(ORG_AMT AS NUMERIC(18,4))-CAST(CURR_AMT AS NUMERIC(18,4))      
 END AS [DIFFERENCE]      
,AUDITED_ON,DATA_TYPE       
FROM CTE       
WHERE ROW=1 ORDER BY 3      
      
--13 NOV 2017      
UPDATE #TOTAL SET ORG_AMT=(SELECT TOP 1 X.OLDVAL       
         FROM XN_AUDIT_TRIAL_DET X (NOLOCK)       
         WHERE X.XN_TYPE=@XN_TYPE AND X.KEY_VALUE=#TOTAL.MEMO_ID AND X.FIELD_NAME=@NET_AMT       
         ORDER BY X.AUDITED_ON)       
--13 NOV 2017      
  
IF @SHOW_DATASET1=1      
   SELECT VISIT,TOTAL_MODIFIED_MEMO,MEMO_ID ,MEMO_NO ,MEMO_DT ,REMARKS,ORG_AMT ORIGINAL_AMT,CURR_AMT CURRENT_AMT      
   ,ABS(CAST(ORG_AMT AS FLOAT)-CAST(CURR_AMT AS FLOAT)) AS [DIFFERENCE]       
   FROM #TOTAL      
      
      
IF OBJECT_ID('TEMPDB..#CUR','U') IS NOT NULL      
   DROP TABLE #CUR      
CREATE TABLE #CUR(MEMO_ID VARCHAR(100))      
      
IF OBJECT_ID('TEMPDB..#MEMO','U') IS NOT NULL      
   DROP TABLE #MEMO      
CREATE TABLE #MEMO(MEMO_ID VARCHAR(100),PREVIOUS_NET_AMOUNT NUMERIC(18,4),CURRENT_NET_AMOUNT NUMERIC(18,4))      
      
SET @CCMD='INSERT #CUR (MEMO_ID) SELECT DISTINCT KEY_VALUE      
FROM XN_AUDIT_TRIAL_DET D(NOLOCK)'      
+CHAR(13)+CASE LEN(@WHERE) WHEN 0 THEN 'WHERE CAST(AUDITED_ON AS DATE) BETWEEN '''+REPLACE(CONVERT(VARCHAR,@CFMDT,102),'.','-')+''' AND AND '''+REPLACE(CONVERT(VARCHAR,@CTODT,102),'.','-')+''' AND D.XN_TYPE='''+@XN_TYPE+''' AND  TABLE_NAME
=    
'''+@TABLE+'''' ELSE @WHERE+' AND D.XN_TYPE='''+@XN_TYPE+''' AND TABLE_NAME='''+@TABLE+'''' END      
EXEC(@CCMD)      
      
--IF CURSOR_STATUS('GLOBAL','MEMO') IN (0,1)      
--   BEGIN      
--     CLOSE MEMO      
--  DEALLOCATE MEMO      
--   END      
      
--DECLARE MEMO CURSOR FOR SELECT * FROM #CUR      
--OPEN MEMO      
--FETCH NEXT FROM MEMO INTO @MEMO      
--WHILE @@FETCH_STATUS=0      
--  BEGIN      
-- SET @CCMD='INSERT #MEMO (MEMO_ID,PREVIOUS_NET_AMOUNT)      
-- SELECT TOP 1 '''+@MEMO+''',OLDVAL      
-- FROM XN_AUDIT_TRIAL_DET (NOLOCK)       
-- WHERE XN_TYPE='''+@XN_TYPE+''' AND CAST(AUDITED_ON AS DATE)<='''+REPLACE(CONVERT(VARCHAR,@CFMDT,102),'.','-')+''' AND TABLE_NAME='''+@TABLE+'''      
--    AND FIELD_NAME='''+@NET_AMT+'''      
--    AND KEY_VALUE='''+@MEMO+'''      
-- ORDER BY LEFT(REVERSE(ID),CHARINDEX(''-'',REVERSE(ID))-1)'      
-- EXEC(@CCMD)      
       
-- SET @CCMD='UPDATE #MEMO SET CURRENT_NET_AMOUNT=(SELECT TOP 1 NEWVAL       
-- FROM XN_AUDIT_TRIAL_DET (NOLOCK)       
-- WHERE XN_TYPE='''+@XN_TYPE+''' AND CAST(AUDITED_ON AS DATE)<='''+REPLACE(CONVERT(VARCHAR,@CFMDT,102),'.','-')+''' AND TABLE_NAME='''+@TABLE+'''      
--    AND FIELD_NAME='''+@NET_AMT+'''      
--    AND KEY_VALUE='''+@MEMO+'''      
-- ORDER BY LEFT(REVERSE(ID),CHARINDEX(''-'',REVERSE(ID))-1) DESC) '      
       
-- SET @CCMD='UPDATE #MEMO SET CURRENT_NET_AMOUNT=(SELECT TOP 1 CURR_AMT FROM #TOTAL WHERE #MEMO.MEMO_ID=#TOTAL.MEMO_ID ORDER BY AUDITED_ON DESC)'      
-- EXEC(@CCMD)      
       
--    FETCH NEXT FROM MEMO INTO @MEMO        
--  END      
--CLOSE MEMO      
--DEALLOCATE MEMO        
  
  
 
  SET @CCMD='INSERT #MEMO (MEMO_ID,PREVIOUS_NET_AMOUNT) 
 SELECT KEY_VALUE,OLDVAL
 FROM 
 (      
 SELECT  KEY_VALUE,OLDVAL,SR=ROW_NUMBER() OVER (PARTITION BY   KEY_VALUE ORDER BY  LEFT(REVERSE(ID),CHARINDEX(''-'',REVERSE(ID))-1))  
 FROM XN_AUDIT_TRIAL_DET (NOLOCK)       
 WHERE XN_TYPE='''+@XN_TYPE+''' AND CAST(AUDITED_ON AS DATE)<='''+REPLACE(CONVERT(VARCHAR,@CFMDT,102),'.','-')+''' AND TABLE_NAME='''+@TABLE+'''      
    AND FIELD_NAME='''+@NET_AMT+'''      
    AND KEY_VALUE IN( SELECT MEMO_ID FROM #CUR ) 
    ) A WHERE SR=1 '      
 EXEC(@CCMD)   
  PRINT @CCMD
  
        
 --SET @CCMD='UPDATE #MEMO SET CURRENT_NET_AMOUNT=(SELECT TOP 1 NEWVAL       
 --FROM XN_AUDIT_TRIAL_DET (NOLOCK)       
 --WHERE XN_TYPE='''+@XN_TYPE+''' AND CAST(AUDITED_ON AS DATE)<='''+REPLACE(CONVERT(VARCHAR,@CFMDT,102),'.','-')+''' AND TABLE_NAME='''+@TABLE+'''      
 --   AND FIELD_NAME='''+@NET_AMT+'''      
 --   AND KEY_VALUE=#MEMO.memo_id    
 --ORDER BY LEFT(REVERSE(ID),CHARINDEX(''-'',REVERSE(ID))-1) DESC) '      
 --EXEC(@CCMD)   
 -- PRINT @CCMD     
  
      
 SET @CCMD='UPDATE #MEMO SET CURRENT_NET_AMOUNT=(SELECT TOP 1 CURR_AMT FROM #TOTAL WHERE #MEMO.MEMO_ID=#TOTAL.MEMO_ID ORDER BY AUDITED_ON DESC)'      
 EXEC(@CCMD) 

      
--DATA SET 2      
IF OBJECT_ID('TEMPDB..#DATASET2','U') IS NOT NULL      
   DROP TABLE #DATASET2      
SELECT LEFT(KEY_VALUE,100) AS MEMOID      
,[COLUMNS]=CASE LEN(ISNULL(M.FRIENDLY_COL,'')) WHEN 0 THEN M.FIELD_NAME ELSE M.FRIENDLY_COL END      
,OLDVAL [FROM]      
,NEWVAL [TO]      
,REPLACE(CONVERT(VARCHAR,AUDITED_ON,104),'.','-') [ON]      
,CONVERT(VARCHAR,AUDITED_ON,108) [AT]       
,CWIZUSERNAME [USER]      
,COMPUTER_NAME [COMPUTER]      
--,CAST(SUBSTRING(D.ID,11,5) AS INT) EDIT_ID      
,D.ID EDIT_ID      
,SUBSTRING(KEY_VALUE,1,50) PRODUCT_CODE      
,M.TABLE_NAME      
,M.ORDER_ID      
,D.AUDITED_ON    
,cast('' as varchar(20)) as BillNo
,Cast('' as DateTime) as BillDate
,user_CODE =cast('' as varchar(50))
INTO #DATASET2      
FROM XN_AUDIT_TRIAL_DET D(NOLOCK)      
JOIN XN_AUDIT_TRIAL_MST M(NOLOCK) ON M.TABLE_NAME=D.TABLE_NAME AND M.XN_TYPE=D.XN_TYPE 
AND ISNULL(D.FIELD_NAME,'')=ISNULL(M.FIELD_NAME,'')      
WHERE 1=2      
      
SET @CCMD='INSERT #DATASET2 (MEMOID,[COLUMNS],[FROM],[TO],[ON],[AT],[USER],[COMPUTER],EDIT_ID,PRODUCT_CODE,TABLE_NAME,ORDER_ID,AUDITED_ON)      
SELECT LEFT(KEY_VALUE,'+CAST(100 AS VARCHAR)+') AS MEMOID      
,[COLUMNS]=CASE LEN(ISNULL(M.FRIENDLY_COL,'''')) WHEN 0 THEN M.FIELD_NAME ELSE M.FRIENDLY_COL END      
,OLDVAL [FROM]      
,NEWVAL [TO]      
,REPLACE(CONVERT(VARCHAR,AUDITED_ON,104),''.'',''-'') [ON]      
,CONVERT(VARCHAR,AUDITED_ON,108) [AT]       
,CWIZUSERNAME [USER]      
,COMPUTER_NAME [COMPUTER]      
--,CAST(SUBSTRING(D.ID,11,5) AS INT) EDIT_ID      
,D.ID EDIT_ID      
--,SUBSTRING(KEY_VALUE,'+CAST(@XN+1 AS VARCHAR)+',50) PRODUCT_CODE  
,D.PRODUCT_CODE      
,M.TABLE_NAME      
,M.ORDER_ID      
,D.AUDITED_ON    
FROM XN_AUDIT_TRIAL_DET D(NOLOCK)      
JOIN XN_AUDIT_TRIAL_MST M(NOLOCK) ON M.TABLE_NAME=D.TABLE_NAME AND M.XN_TYPE=D.XN_TYPE AND ISNULL(D.FIELD_NAME,'''')=ISNULL(M.FIELD_NAME,'''')'      
+CHAR(13)+REPLACE(@WHERE,'AND D.TABLE_NAME='''+@TABLE+'''','')      
+CASE LEN(@WHERE) WHEN 0 THEN '' ELSE 'AND ISNULL(OLDVAL,'''')<>ISNULL(NEWVAL,'''')' END      
+CASE LEN(@WHERE) WHEN 0 THEN '' ELSE 'AND M.FIELD_NAME NOT IN (''CUSTOMER_CODE'',''TERMS_CODE'')' END    --'AC_CODE'  
+'UNION'      
+CHAR(13)+'SELECT LEFT(KEY_VALUE,'+CAST(@XN AS VARCHAR)+') AS MEMOID      
,[COLUMNS]=''SUPPLIER NAME''      
,L1.AC_NAME [FROM]      
,L2.AC_NAME [TO]      
,REPLACE(CONVERT(VARCHAR,AUDITED_ON,104),''.'',''-'') [ON]      
,CONVERT(VARCHAR,AUDITED_ON,108) [AT]       
,CWIZUSERNAME [USER]      
,COMPUTER_NAME [COMPUTER]      
--,CAST(SUBSTRING(D.ID,11,5) AS INT) EDIT_ID      
,D.ID AS EDIT_ID      
,SUBSTRING(KEY_VALUE,'+CAST(@XN+1 AS VARCHAR)+',50) PRODUCT_CODE      
,M.TABLE_NAME      
,M.ORDER_ID      
,D.AUDITED_ON    
FROM XN_AUDIT_TRIAL_DET D(NOLOCK)      
JOIN XN_AUDIT_TRIAL_MST M(NOLOCK) ON M.TABLE_NAME=D.TABLE_NAME AND M.XN_TYPE=D.XN_TYPE AND ISNULL(D.FIELD_NAME,'''')=ISNULL(M.FIELD_NAME,'''')      
JOIN LMV01106 L1 (NOLOCK) ON L1.AC_CODE=D.OLDVAL      
JOIN LMV01106 L2 (NOLOCK) ON L2.AC_CODE=D.NEWVAL'      
+CHAR(13)+@WHERE      
+CASE LEN(@WHERE) WHEN 0 THEN '' ELSE 'AND ISNULL(OLDVAL,'''')<>ISNULL(NEWVAL,'''')' END      
+CASE LEN(@WHERE) WHEN 0 THEN '' ELSE 'AND M.FIELD_NAME IN (''AC_CODE'')' END      
+'UNION'      
+CHAR(13)+'SELECT LEFT(KEY_VALUE,'+CAST(@XN AS VARCHAR)+') AS MEMOID      
,[COLUMNS]=''CUSTOMER NAME''      
,LTRIM(ISNULL(C1.CUSTOMER_TITLE,'''')+ISNULL('' ''+C1.CUSTOMER_FNAME,'''')+ISNULL('' ''+C1.CUSTOMER_LNAME,'''')+ISNULL('' (''+C1.MOBILE+'')'','''')) [FROM]      
,LTRIM(ISNULL(C2.CUSTOMER_TITLE,'''')+ISNULL('' ''+C2.CUSTOMER_FNAME,'''')+ISNULL('' ''+C2.CUSTOMER_LNAME,'''')+ISNULL('' (''+C2.MOBILE+'')'','''')) [TO]      
,REPLACE(CONVERT(VARCHAR,AUDITED_ON,104),''.'',''-'') [ON]      
,CONVERT(VARCHAR,AUDITED_ON,108) [AT]       
,CWIZUSERNAME [USER]      
,COMPUTER_NAME [COMPUTER]      
--,CAST(SUBSTRING(D.ID,11,5) AS INT) EDIT_ID      
,D.ID EDIT_ID      
,SUBSTRING(KEY_VALUE,'+CAST(@XN+1 AS VARCHAR)+',50) PRODUCT_CODE      
,M.TABLE_NAME      
,M.ORDER_ID      
,D.AUDITED_ON    
FROM XN_AUDIT_TRIAL_DET D(NOLOCK)      
JOIN XN_AUDIT_TRIAL_MST M(NOLOCK) ON M.TABLE_NAME=D.TABLE_NAME AND M.XN_TYPE=D.XN_TYPE AND ISNULL(D.FIELD_NAME,'''')=ISNULL(M.FIELD_NAME,'''')      
JOIN CUSTDYM C1 (NOLOCK) ON C1.CUSTOMER_CODE=D.OLDVAL      
JOIN CUSTDYM C2 (NOLOCK) ON C2.CUSTOMER_CODE=D.NEWVAL'      
+CHAR(13)+@WHERE      
+CASE LEN(@WHERE) WHEN 0 THEN '' ELSE 'AND ISNULL(OLDVAL,'''')<>ISNULL(NEWVAL,'''')' END      
+CASE LEN(@WHERE) WHEN 0 THEN '' ELSE 'AND M.FIELD_NAME IN (''CUSTOMER_CODE'')' END      
PRINT CHAR(13)+@CCMD      
EXEC(@CCMD)      
UPDATE #DATASET2 SET [FROM]=REPLACE([FROM],'.0000','.00'),[TO]=REPLACE([TO],'.0000','.00')      
DELETE #DATASET2 WHERE [FROM]=[TO]      
SELECT @XN=LEN(MIN(KEY_VALUE)) FROM XN_AUDIT_TRIAL_DET (NOLOCK) WHERE XN_TYPE=@XN_TYPE AND TABLE_NAME LIKE '%M01106%'    

IF @NQUERYID=4
   BEGIN
      UPDATE D SET [COLUMNS]=D.[COLUMNS]+' ('+CASE LEFT(V.X_TYPE,1) WHEN 'D' THEN 'DEBIT' ELSE 'CREDIT' END+')'
      FROM #DATASET2 D
      JOIN VD01106 V ON V.VM_ID=D.MEMOID AND D.[COLUMNS]='LEDGER' AND V.VD_ID=D.PRODUCT_CODE
   END  

   

IF @SHOW_DATASET1=1  
 BEGIN  
     ;WITH CTE      
  AS      
  (      
  SELECT MEMOID,[COLUMNS],[FROM],[TO],[ON],[AT],[USER],[COMPUTER]      
  ,RNO=DENSE_RANK()OVER(PARTITION BY MEMOID ORDER BY AUDITED_ON)      
  ,PRODUCT_CODE      
  ,LEFT(MEMOID,@XN)+CAST(EDIT_ID AS VARCHAR) AS PARTITION_ID      
  ,TABLE_NAME       
  ,ORDER_ID      
  ,EDIT_ID SEQ      
  FROM #DATASET2       
  )      
  
  SELECT MEMOID,[COLUMNS],[FROM],[TO],[ON],[AT],[USER],[COMPUTER],RNO AS EDIT_ID,PRODUCT_CODE=CASE @XN_TYPE WHEN 'VCH' THEN '' ELSE PRODUCT_CODE END       
  FROM CTE       
  ORDER BY LEFT(MEMOID,@XN),RNO DESC,TABLE_NAME DESC ,PRODUCT_CODE,ORDER_ID,[COLUMNS] DESC      
 END   
ELSE  
 BEGIN  


 UPDATE A SET BILLNO=B.CM_NO ,BillDate=B.cm_time ,USER_CODE=B.USER_CODE 
 FROM #DATASET2 A
 JOIN CMM01106 B ON LEFT(A.MEMOID,@XN)=B.CM_ID 


 IF @XN_TYPE<>'SLS'
 BEGIN

  ;WITH CTE      
  AS      
  (      
  SELECT MEMOID,[COLUMNS],[FROM],[TO],[ON],[AT],[USER],[COMPUTER]      
  ,RNO=DENSE_RANK()OVER(PARTITION BY MEMOID ORDER BY AUDITED_ON)      
  ,PRODUCT_CODE      
  ,LEFT(MEMOID,@XN)+CAST(EDIT_ID AS VARCHAR) AS PARTITION_ID      
  ,TABLE_NAME       
  ,ORDER_ID      
  ,EDIT_ID SEQ      
  FROM #DATASET2       
  )      
  

  SELECT MEMOID, [COLUMNS],[FROM],[TO],[ON],[AT],[USER],[COMPUTER],RNO AS EDIT_ID  
  ,PRODUCT_CODE=CASE @XN_TYPE WHEN 'VCH' THEN '' ELSE PRODUCT_CODE END      
  FROM CTE       
  ORDER BY LEFT(MEMOID,@XN),RNO DESC,TABLE_NAME DESC ,PRODUCT_CODE,ORDER_ID,[COLUMNS] DESC    
  

  END
  ELSE
  BEGIN
       

	    ;WITH CTE      
	  AS      
	  (      
	  SELECT MEMOID,[COLUMNS],[FROM],[TO],[ON],[AT],[USER],[COMPUTER]      
	  ,RNO=DENSE_RANK()OVER(PARTITION BY MEMOID ORDER BY AUDITED_ON)      
	  ,PRODUCT_CODE      
	  ,LEFT(MEMOID,@XN)+CAST(EDIT_ID AS VARCHAR) AS PARTITION_ID      
	  ,TABLE_NAME       
	  ,ORDER_ID      
	  ,EDIT_ID SEQ,
	  BILLnO,BILLDATE,USER_CODE 
	  FROM #DATASET2       
	  )      
  

	  SELECT A.BillNo ,A.BillDate,U.UserName ,A.MEMOID, [COLUMNS],A.[FROM],A.[TO],A.[ON],A.[AT],
	  A.[USER],[COMPUTER],A.RNO AS EDIT_ID  
	  ,PRODUCT_CODE=CASE @XN_TYPE WHEN 'VCH' THEN '' ELSE A.PRODUCT_CODE END 
	  
	  FROM CTE A
	  JOIN USERS U ON U.user_code =A.user_CODE
	  ORDER BY LEFT(MEMOID,@XN),RNO DESC,TABLE_NAME DESC ,PRODUCT_CODE,ORDER_ID,[COLUMNS] DESC    
  

  END

 END   
END_PROC:           
SET NOCOUNT OFF      
END           
--END OF PROCEDURE - SP_AUDIT_TRIAL_DETAILS
