CREATE PROCEDURE SP_JOBWORKLEDGER_REPORTS
@CFROMDATE		DATETIME,
@CTODATE		DATETIME,
@CPRODUCT_CODE	VARCHAR(100)='',
@CAGENCY		VARCHAR(100)=''
AS
BEGIN
	IF LTRIM(RTRIM(ISNULL(@CPRODUCT_CODE,'')))=''
		SET @CPRODUCT_CODE=NULL

	IF LTRIM(RTRIM(ISNULL(@CAGENCY,'')))=''
		SET @CAGENCY=NULL

	DECLARE @CTOTALSTK NUMERIC(14,2)
	DECLARE @DTTABLE TABLE (AGENCY_CODE VARCHAR(100),AGENCY_NAME VARCHAR(100),PC VARCHAR(100), XN_TYPE VARCHAR(100), QTY NUMERIC(14,2),XN_DT DATETIME)
	DECLARE @DTTABLE1 TABLE (AGENCY_CODE VARCHAR(100),AGENCY_NAME VARCHAR(100),PC VARCHAR(100), QTY NUMERIC(14,2),XN_DT DATETIME)
	DECLARE @DTPENDINGJOBS TABLE
	(
		AGENCY_NAME	VARCHAR(100),PRODUCT_CODE VARCHAR(100),XN_TYPE VARCHAR(10),QUANTITY NUMERIC(14,2),
		XN_DT DATETIME,XN_NO VARCHAR(100),XN_ORDER NUMERIC(5),WIP_UID VARCHAR(MAX),VALUE_ADDITION NUMERIC(14,2),
		UNIT_COST NUMERIC(14,2),JOB_CODE VARCHAR(20),AGENCY_CODE VARCHAR(100)
	)
	
	INSERT INTO @DTTABLE(AGENCY_CODE,AGENCY_NAME, PC , XN_TYPE , QTY ,XN_DT)
	SELECT C.AGENCY_CODE,C.AGENCY_NAME,A.PRODUCT_CODE ,'WIPJWI' AS [XN_TYPE],(-1 * A.QUANTITY) AS [QUANTITY]
		  ,B.ISSUE_DT AS [XN_DT]
	FROM JOBWORK_ISSUE_DET A
	JOIN JOBWORK_ISSUE_MST  B ON B.ISSUE_ID=A.ISSUE_ID
	JOIN WIP_PMT D ON D.WIP_UID = A.WIP_UID  
	JOIN PRD_AGENCY_MST C ON C.AGENCY_CODE=B.AGENCY_CODE	
	WHERE B.CANCELLED=0 AND B.WIP=1 AND B.ISSUE_DT<@CFROMDATE 
	AND A.PRODUCT_CODE = ISNULL(@CPRODUCT_CODE,A.PRODUCT_CODE)
	AND C.AGENCY_CODE = ISNULL(@CAGENCY,C.AGENCY_CODE)
	UNION ALL
	SELECT C.AGENCY_CODE,C.AGENCY_NAME,A.PRODUCT_CODE ,'WIPJWR' AS [XN_TYPE],A.QUANTITY,B.RECEIPT_DT AS [XN_DT]
	FROM JOBWORK_RECEIPT_DET A
	JOIN JOBWORK_RECEIPT_MST  B ON B.RECEIPT_ID=A.RECEIPT_ID
	JOIN WIP_PMT D ON D.XN_ROW_ID = A.ROW_ID 
	JOIN PRD_AGENCY_MST C ON C.AGENCY_CODE=B.AGENCY_CODE	
	WHERE B.CANCELLED=0 AND B.WIP=1 AND B.RECEIPT_DT<@CFROMDATE 
	AND A.PRODUCT_CODE = ISNULL(@CPRODUCT_CODE,A.PRODUCT_CODE)
	AND C.AGENCY_CODE = ISNULL(@CAGENCY,C.AGENCY_CODE)

	INSERT INTO @DTTABLE1(AGENCY_CODE,AGENCY_NAME, PC  , QTY,XN_DT )
	SELECT AGENCY_CODE,AGENCY_NAME,PC AS [PRODUCT_CODE],SUM(QTY) AS QTY,@CFROMDATE 
	FROM @DTTABLE 
	GROUP BY AGENCY_CODE,AGENCY_NAME,PC

	INSERT INTO @DTPENDINGJOBS(AGENCY_NAME,PRODUCT_CODE ,XN_TYPE,QUANTITY,XN_DT,XN_NO,XN_ORDER,WIP_UID,VALUE_ADDITION,UNIT_COST,JOB_CODE,AGENCY_CODE)
	SELECT AGENCY_NAME,PRODUCT_CODE,XN_TYPE,(QUANTITY) AS [QUANTITY],XN_DT,XN_NO,XN_ORDER,WIP_UID,VALUE_ADDITION,[UNIT COST],JOB_CODE,AGENCY_CODE
	FROM
	(
		SELECT C.AGENCY_NAME,A.PRODUCT_CODE ,'WIPJWI' AS [XN_TYPE],A.QUANTITY,B.ISSUE_DT AS [XN_DT],B.ISSUE_NO AS [XN_NO],5 AS [XN_ORDER],D.WIP_UID,0 AS VALUE_ADDITION,
		A.PREV_JOB_RATE AS [UNIT COST],A.JOB_CODE, B.AGENCY_CODE
		FROM JOBWORK_ISSUE_DET A
		JOIN JOBWORK_ISSUE_MST  B ON B.ISSUE_ID=A.ISSUE_ID
		JOIN WIP_PMT D ON D.WIP_UID = A.WIP_UID  
		JOIN PRD_AGENCY_MST C ON C.AGENCY_CODE=B.AGENCY_CODE
		WHERE B.CANCELLED=0 AND B.WIP=1  AND (B.ISSUE_DT BETWEEN @CFROMDATE AND @CTODATE)
		AND A.PRODUCT_CODE = ISNULL(@CPRODUCT_CODE,A.PRODUCT_CODE)
		AND C.AGENCY_CODE = ISNULL(@CAGENCY,C.AGENCY_CODE)
		UNION ALL
		SELECT C.AGENCY_NAME,A.PRODUCT_CODE ,'WIPJWR' AS [XN_TYPE],A.QUANTITY,B.RECEIPT_DT AS [XN_DT],B.RECEIPT_NO AS [XN_NO],5 AS [XN_ORDER],D.WIP_UID,A.JOB_RATE,
		A.PREV_JOB_RATE+A.JOB_RATE AS [UNIT COST],A.JOB_CODE, B.AGENCY_CODE
		FROM JOBWORK_RECEIPT_DET A
		JOIN JOBWORK_RECEIPT_MST  B ON B.RECEIPT_ID=A.RECEIPT_ID
		JOIN WIP_PMT D ON D.XN_ROW_ID = A.ROW_ID 
		JOIN PRD_AGENCY_MST C ON C.AGENCY_CODE=B.AGENCY_CODE
		WHERE B.CANCELLED=0 AND B.WIP=1  AND (B.RECEIPT_DT BETWEEN @CFROMDATE AND @CTODATE)
		AND A.PRODUCT_CODE = ISNULL(@CPRODUCT_CODE,A.PRODUCT_CODE)
		AND C.AGENCY_CODE = ISNULL(@CAGENCY,C.AGENCY_CODE)
	)X
	
  
  SELECT A.AGENCY_CODE,A.AGENCY_NAME,A.ARTICLE_NO,A.PRODUCT_CODE,-CONVERT(NUMERIC(18,2),SUM(A.OPS)) AS OPS
		,CONVERT(NUMERIC(18,2),SUM(A.WIPJWI)) AS WIPJWI
		,CONVERT(NUMERIC(18,2),SUM(A.WIPJWR)) AS WIPJWR
		,CONVERT(NUMERIC(18,2),-SUM(A.OPS)+SUM(A.WIPJWI)-SUM(A.WIPJWR)) AS CLOSING_STOCK
  FROM 
  (	
	SELECT A.AGENCY_CODE,A.AGENCY_NAME,ART.ARTICLE_NO,A.PRODUCT_CODE
		  ,CONVERT(NUMERIC(18,2),0) AS OPS
		  ,CONVERT(NUMERIC(18,2),SUM(CASE WHEN A.XN_TYPE LIKE '%JWI' THEN QUANTITY ELSE 0 END)) AS 'WIPJWI' 
		  ,CONVERT(NUMERIC(18,2),SUM(CASE WHEN A.XN_TYPE LIKE '%JWR' THEN QUANTITY ELSE 0 END)) AS 'WIPJWR'	
	FROM @DTPENDINGJOBS	A
	JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
	JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =SKU.ARTICLE_CODE 
	GROUP BY A.AGENCY_CODE,A.AGENCY_NAME,A.PRODUCT_CODE,ART.ARTICLE_NO
	UNION ALL
	SELECT A.AGENCY_CODE,A.AGENCY_NAME,ART.ARTICLE_NO,A.PC AS PRODUCT_CODE
		  ,CONVERT(NUMERIC(14,2),A.QTY) AS OPS
		  ,CONVERT(NUMERIC(18,2),0) AS 'WIPJWI' 
		  ,CONVERT(NUMERIC(18,2),0) AS 'WIPJWR'	
	FROM @DTTABLE1	A
	JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=A.PC
	JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =SKU.ARTICLE_CODE 
  )A
  GROUP BY A.AGENCY_CODE,A.AGENCY_NAME,A.PRODUCT_CODE,A.ARTICLE_NO	
  ORDER BY A.AGENCY_CODE,A.AGENCY_NAME,A.PRODUCT_CODE	
	
	SELECT AGENCY_NAME,PRODUCT_CODE ,XN_TYPE
	,(CASE WHEN XN_TYPE='WIPJWI' THEN QUANTITY ELSE 0 END) AS ISSUE_QUANTITY
	,(CASE WHEN XN_TYPE='WIPJWR' THEN QUANTITY ELSE 0 END) AS RECEIVED_QUANTITY
	,XN_DT,XN_NO,XN_ORDER,WIP_UID,VALUE_ADDITION,UNIT_COST,JOB_CODE,AGENCY_CODE
	FROM @DTPENDINGJOBS	
END
--END OF PROCEDURE - SP_JOBWORKLEDGER_REPORTS
