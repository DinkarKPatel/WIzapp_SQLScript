CREATE PROCEDURE SPPPC_FILL_ARTICLE_SIZEGROUP  
(  
 @NQUERYID    INT,    
 @VARTICLECODE  VARCHAR(500),  
 @VPARAMETER   VARCHAR(500)  
)  
AS  
BEGIN   
 DECLARE @CSTEP INT, @CCMD NVARCHAR(MAX), @ERRMSG_OUT VARCHAR(MAX)  
  
 BEGIN TRY  
  SET NOCOUNT ON;  
    
  SET @ERRMSG_OUT = ''  
    
  IF @NQUERYID = 1  
   -- GET ARTICLE SIZEGROUP LIST  
   GOTO LBLGETSIZEGROUPLIST  
     
  ELSE IF @NQUERYID = 2  
   -- GET ARTICLE SIZEGROUP USING LIKE  
   GOTO LBLGETSIZEGROUPLIKE  
    
  ELSE IF @NQUERYID = 7  
   -- GET INFO BY SIZEGROUP NAME  
   GOTO LBLGETINFOBYSIZEGROUPNAME  
  
  ELSE  
   GOTO LAST  
  
-- GET ARTICLE SIZEGROUP LIST  
LBLGETSIZEGROUPLIST:  
  SET @CSTEP = 101  
  SELECT SIZEGROUP_CODE, SIZEGROUP_NAME FROM (  
   SELECT  DISTINCT A.SIZEGROUP_CODE, B.SIZEGROUP_NAME  
   FROM PPC_ART_DET_SIZEGROUP A JOIN PPC_SIZEGROUP B ON A.SIZEGROUP_CODE=B.SIZEGROUP_CODE  
   WHERE A.ARTICLE_CODE = @VARTICLECODE AND ISNULL(B.SIZEGROUP_NAME,'') <> '' ) AS SG  
  ORDER BY SIZEGROUP_NAME  
    
  GOTO LAST  
  
  
-- GET ARTICLE SIZEGROUP USING LIKE  
LBLGETSIZEGROUPLIKE:  
  SET @CSTEP = 102  
  SELECT SIZEGROUP_CODE, SIZEGROUP_NAME FROM (  
   SELECT DISTINCT TOP 10 A.SIZEGROUP_CODE, B.SIZEGROUP_NAME  
   FROM PPC_ART_DET_SIZEGROUP A JOIN PPC_SIZEGROUP B ON A.SIZEGROUP_CODE=B.SIZEGROUP_CODE  
   WHERE A.ARTICLE_CODE = @VARTICLECODE AND ISNULL(B.SIZEGROUP_NAME,'') <> ''  
   AND B.SIZEGROUP_NAME LIKE '%'+ @VPARAMETER +'%' ) AS SG  
  ORDER BY SIZEGROUP_NAME  
    
  GOTO LAST  
  
  
-- GET INFO BY SIZEGROUP NAME  
LBLGETINFOBYSIZEGROUPNAME:  
  SET @CSTEP = 107  
  SELECT A.SIZEGROUP_CODE, A.SIZEGROUP_NAME  
  FROM PPC_SIZEGROUP A (NOLOCK)   
  WHERE A.SIZEGROUP_NAME = @VPARAMETER  
    
  GOTO LAST  
    
    
LAST:     
 GOTO END_PROC  
  
  SET NOCOUNT OFF;  
 END TRY    
 BEGIN CATCH    
  SET @ERRMSG_OUT='ERROR: [P]: SPPPC_FILL_ARTICLE_SIZEGROUP, [STEP]: '+CAST(@CSTEP AS VARCHAR(5))+', [MESSAGE]: ' + ERROR_MESSAGE()  
  GOTO END_PROC    
 END CATCH     
  
END_PROC:    
 IF  ISNULL(@ERRMSG_OUT,'')<>''   
  SELECT @ERRMSG_OUT AS ERRORMSG  
END
