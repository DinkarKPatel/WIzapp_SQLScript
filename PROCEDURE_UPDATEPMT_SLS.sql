CREATE PROCEDURE UPDATEPMT_SLS
		@CXNTYPE VARCHAR(10),
		@CXNNO VARCHAR(40),
		@CXNID VARCHAR(40),
		@NREVERTFLAG BIT = 0,
		@NALLOWNEGSTOCK BIT = 0,
		@NCHKDELBARCODES BIT = 0,
		@NUPDATEMODE INT=0,	
		@CCMD NVARCHAR(4000) OUTPUT

		--*** PARAMETERS :
		--*** @CXNTYPE - TRANSACTION TYPE (MODULE SPECIFIC)
		--*** @CXNNO - TRANSACTION NO ( MEMO NO OF MASTER TABLE )
		--*** @CXNID - TRANSACTION ID ( MEMO ID OF MASTER TABLE )
		--*** @NREVERTFLAG - A FLAG TO INDICATE WHETHER THIS PROCEDURE IS CALLED TO REVERT STOCK
		--*** @NALLOWNEGSTOCK - FLAG TO INDICATE WHETHER OR NOT ALLOW NEGATIVE STOCK
		--*** @NRETVAL - OUTPUT PARAMETER RETURNED BY THIS PROCEDURE (BIT 1-SUCCESS, 0-UNSUCCESS)
--WITH ENCRYPTION
AS
BEGIN
	DECLARE @NOUTFLAG INT, @NRETVAL BIT,@CXNTABLE VARCHAR(50),@CEXPR NVARCHAR(500),@CXNIDPARA VARCHAR(50),
			@BCANCELLED BIT,@CUSERCODE VARCHAR(10)
	
	SET @NRETVAL = 0
	SET @CCMD = ''
		
	IF @NREVERTFLAG = 1
		SET @NOUTFLAG = -1
	ELSE
		SET @NOUTFLAG = 1

	IF EXISTS (SELECT TOP 1 A.MEMO_ID FROM STMH01106 A JOIN PMT01106 B ON A.REP_ID=B.REP_ID
			   AND B.BIN_ID=A.RECON_BIN_ID
			   JOIN CMD01106 C ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
			   WHERE C.CM_ID=@CXNID)
	BEGIN
			SET @CCMD = N'SELECT DISTINCT C.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE PART OF STOCK RECONCILIATION'' AS ERRMSG
						  FROM STMH01106 A JOIN PMT01106 B ON A.REP_ID=B.REP_ID
						  AND B.BIN_ID=A.RECON_BIN_ID
						  JOIN CMD01106 C ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
						  WHERE C.CM_ID='''+@CXNID+''''		
			RETURN					
	END	  
	
     INSERT PMT01106 (PRODUCT_CODE,  QUANTITY_IN_STOCK, DEPT_ID,BIN_ID, LAST_UPDATE )  
     SELECT B.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/ DEPT_ID,B.BIN_ID,GETDATE() AS LAST_UPDATE  
     FROM CMD01106 B  
     JOIN CMM01106 C ON C.CM_ID=B.CM_ID  
     JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE  
     JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE  
     LEFT OUTER JOIN PMT01106 PMT ON PMT.PRODUCT_CODE = B.PRODUCT_CODE AND PMT.DEPT_ID = C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/  AND PMT.BIN_ID=B.BIN_ID  
     WHERE B.CM_ID = @CXNID AND PMT.PRODUCT_CODE IS NULL 
  
	UPDATE A SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
	FROM  PMT01106 A
    JOIN 
	(	SELECT B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/  DEPT_ID, B.BIN_ID,SUM(B.QUANTITY+ISNULL(B.FOC_QUANTITY,0)) AS QUANTITY 
		FROM CMD01106 B
		JOIN CMM01106 C ON C.CM_ID=B.CM_ID
		JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
		JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
		WHERE B.CM_ID = @CXNID AND E.STOCK_NA=0
		GROUP BY B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/ , B.BIN_ID
	) B ON A.PRODUCT_CODE = B.PRODUCT_CODE AND A.BIN_ID = B.BIN_ID AND A.DEPT_ID = B.DEPT_ID


	SET @NRETVAL = 1		--*** SUCCESS

	--*** CHECKING FOR NEGATIVE STOCK
	--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
	--AND D.STOCK_NA=0 )

	SELECT @BCANCELLED=CANCELLED,@CUSERCODE=USER_CODE FROM CMM01106 WHERE CM_ID=@CXNID
	---FOR SUPER USER NEGATIVE STOCK SHOULD NOT BE ALLOWED
	IF @CUSERCODE='0000000'
		SET @NALLOWNEGSTOCK=0
	
	--SELECT @NREVERTFLAG , @NALLOWNEGSTOCK ,@NOUTFLAG,@BCANCELLED
	--*** CHECKING FOR NEGATIVE STOCK
	--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
	IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1 
	BEGIN
		IF EXISTS (SELECT A.PRODUCT_CODE FROM PMT01106 A JOIN
					(
						SELECT B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/ DEPT_ID,B.BIN_ID, SUM(B.QUANTITY+ISNULL(B.FOC_QUANTITY,0)) AS QUANTITY 
						FROM CMD01106 B
						JOIN CMM01106 C ON C.CM_ID=B.CM_ID
						JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
						JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
						WHERE B.CM_ID = @CXNID AND E.STOCK_NA=0
						GROUP BY B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/ ,B.BIN_ID
					) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.BIN_ID=A.BIN_ID AND B.DEPT_ID=A.DEPT_ID
					WHERE A.QUANTITY_IN_STOCK < 0)
		BEGIN
			SET @NRETVAL = 0		--*** UNSUCCESS
			SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A  JOIN
					(SELECT B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/ DEPT_ID,B.BIN_ID, SUM(B.QUANTITY+ISNULL(B.FOC_QUANTITY,0)) AS QUANTITY 
					FROM CMD01106 B
					JOIN CMM01106 C ON C.CM_ID=B.CM_ID
					JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
					JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
					WHERE B.CM_ID = '''+@CXNID+''' AND E.STOCK_NA=0
					GROUP BY B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/ ,B.BIN_ID
					) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.BIN_ID=A.BIN_ID AND B.DEPT_ID=A.DEPT_ID
					WHERE A.QUANTITY_IN_STOCK < 0 '
		END
			--PRINT @CCMD
	END	

END_PROC:

END
--***************************** END OF PROCEDURE UPDATEPMT_SLS
