CREATE PROCEDURE SP3S_XNPENDINGAPPROVAL
 (
	
	@CXNID VARCHAR(100)='',
	@CXNTYPE VARCHAR(10)='PUR',
	@CLOCID VARCHAR(5)=''
	
 )AS
 BEGIN
 DECLARE @NLEVELNO NUMERIC(10,2),@CUSER_CODE VARCHAR(100),@CCURDEPTID CHAR(2)  
  ,@DSTARTINGFROM DATETIME  
     
  IF OBJECT_ID('TEMPDB..#PENDINGAPPROVAL','U') IS NOT NULL  
   DROP TABLE #PENDINGAPPROVAL  
     
 CREATE TABLE #PENDINGAPPROVAL  
 (
  XN_ID VARCHAR(100),XN_TYPE VARCHAR(100),XN_NO VARCHAR(100),LEVELNO INT,APPROVAL_STATUS VARCHAR(100),  
  APPROVALAGIENG NUMERIC(10),MEMOAGIENG NUMERIC(10),USERNAME VARCHAR(100),DATE VARCHAR(10), AC_NAME VARCHAR(100),
  INV_NO VARCHAR(100),INV_DT VARCHAR(50), INV_AMOUNT NUMERIC(14,2), total_qty_str VARCHAR(100),Mst_Remarks varchar(max)
 )  

IF ISNULL(@CLOCID,'')<>''
SET @CCURDEPTID=@CLOCID
else
SELECT @CCURDEPTID =DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 

        
SELECT TOP 1  @DSTARTINGFROM=ISNULL(CUTOFFDATE,'')  
 FROM LOC_XNSAPPROVAL  
  WHERE XN_TYPE=@CXNTYPE AND DEPT_ID=@CCURDEPTID  
     
SET @DSTARTINGFROM=ISNULL(@DSTARTINGFROM,'')     
     
 IF @CXNTYPE='PUR'  
  GOTO SSPL1  
  ELSE IF @CXNTYPE='PRT'  
   GOTO SSPL2  
  
 ELSE IF @CXNTYPE='VCH'  
  GOTO SSPL3  
   
 ELSE IF @CXNTYPE='SFT'    
  GOTO SSPL4  
 
 ELSE IF @CXNTYPE='PBM'    
  GOTO SSPL5   
  
 ELSE IF @CXNTYPE='EDS'    
  GOTO SSPL6  
  
 ELSE IF @CXNTYPE='PTC'    
  GOTO SSPL7    
 
 ELSE IF @CXNTYPE='SLSCRI'    
  GOTO SSPL8 
  
 ELSE IF @CXNTYPE='EOSSDSLS'    
  GOTO SSPL9 
 
 ELSE IF @CXNTYPE='CRDISS'    
  GOTO SSPL10 
 
 ELSE IF @CXNTYPE='WSL'    
  GOTO SSPL11 
 
 ELSE IF @CXNTYPE='PO'    
  GOTO SSPL12 
  
 ELSE IF @CXNTYPE='BDGPL'    
  GOTO SSPL13
  
 ELSE IF @CXNTYPE='BUYPL'    
  GOTO SSPL14

 ELSE IF @CXNTYPE='WSR'    
  GOTO SSPL15

 ELSE IF @CXNTYPE='JWI'    
  GOTO SSPL16

 ELSE IF @CXNTYPE='JWR'    
  GOTO SSPL17

 --ELSE
 --  GOTO ENDPROC
   
  SSPL1:   
  
  IF( @CXNID<>'' )  
  BEGIN  
   
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE,AC_NAME,INV_NO,INV_DT,INV_AMOUNT,total_qty_str,Mst_Remarks )  
    SELECT P.MRR_ID AS XN_ID,@CXNTYPE AS XN_TYPE ,P.MRR_NO AS XNO,  
    (P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,  
    GETDATE()),0) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.RECEIPT_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME     
    ,CONVERT(VARCHAR(10) ,P.MRR_DT,105) AS DATE,LM.AC_NAME
	,P.inv_no,CONVERT(VARCHAR(10) ,P.inv_dt,105) AS inv_dt,P.total_amount,P.TOTAL_QUANTITY_STR,p.remarks as Mst_Remarks
    FROM PIM01106 P   (NOLOCK)
	JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE=P.ac_code
    LEFT OUTER JOIN
    (
     SELECT XN_ID AS MRR_ID, MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM TRANSACTION_APPROVAL_DET (NOLOCK) WHERE XN_TYPE= 'PUR' AND XN_ID=@CXNID 
     GROUP BY XN_ID
    ) XN  ON P.MRR_ID=XN.MRR_ID 
    
    WHERE P.APPROVEDLEVELNO<>99 AND P.MRR_ID=@CXNID 
    AND P.INV_MODE=1
    AND BILL_CHALLAN_MODE<>1
    AND (@DSTARTINGFROM='' OR P.MRR_DT>=@DSTARTINGFROM)  
    AND P.CANCELLED=0 
    AND  BILL_NO<>''
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='PUR'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
     
  END  
         
 ELSE   
   BEGIN  
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE,AC_NAME,INV_NO,INV_DT,INV_AMOUNT,total_qty_str,Mst_Remarks )  
    SELECT P.MRR_ID AS XN_ID,@CXNTYPE AS XN_TYPE ,P.MRR_NO AS XNO,  
    (P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,GETDATE()),0) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.RECEIPT_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
   ,CONVERT(VARCHAR(10) ,P.MRR_DT,105) AS DATE,LM.AC_NAME
    --,CONVERT(VARCHAR(10) ,P.MRR_DT,105) AS DATE
	,P.inv_no,CONVERT(VARCHAR(10) ,P.inv_dt,105) AS inv_dt,P.total_amount,P.TOTAL_QUANTITY_STR
	,p.REMARKS as Mst_Remarks
    FROM  PIM01106 P   (NOLOCK)
	JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE=P.ac_code
     LEFT OUTER JOIN
    (
     SELECT XN_ID AS MRR_ID , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM TRANSACTION_APPROVAL_DET (NOLOCK) WHERE XN_TYPE= 'PUR' 
     GROUP BY XN_ID
    ) XN  ON P.MRR_ID=XN.MRR_ID 
    WHERE P.APPROVEDLEVELNO<>99 AND P.DEPT_ID=@CCURDEPTID   
    AND (@DSTARTINGFROM='' OR P.MRR_DT>=@DSTARTINGFROM)  
    AND P.CANCELLED=0 
    AND P.INV_MODE=1
    AND BILL_CHALLAN_MODE<>1 
    AND BILL_NO<>'' 
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='PUR'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A    WHERE @CXNTYPE<>''
   END  
   GOTO ENDPROC  
     
   
   
 -----------------------FOR DEBIT NOTE --------------  
 SSPL2:  
     
  IF( @CXNID<>'' )  
  BEGIN  
   
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE,AC_NAME,INV_NO,INV_DT,INV_AMOUNT,total_qty_str,Mst_Remarks  )  
    SELECT P.RM_ID AS XN_ID,@CXNTYPE AS XN_TYPE ,P.RM_NO AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.RM_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
    ,CONVERT(VARCHAR(10) ,P.RM_DT,105) AS DATE,LM.AC_NAME
	,null inv_no,null AS inv_dt,P.total_amount,P.TOTAL_QUANTITY_STR
	,p.REMARKS as Mst_Remarks
    FROM RMM01106 P   
    join LM01106 lm (nolock) on p.ac_code =lm.AC_CODE 
    LEFT OUTER JOIN
    (
     SELECT  XN_ID AS RM_ID , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM TRANSACTION_APPROVAL_DET (NOLOCK)  WHERE XN_ID=  @CXNID AND XN_TYPE='PRT'
     GROUP BY XN_ID
    ) XN  ON P.RM_ID=XN.RM_ID 
    WHERE P.APPROVEDLEVELNO<>99 AND P.RM_ID=@CXNID  
    AND P.CANCELLED=0 
      
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='PRT'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
     
  END  
         
 ELSE   
   BEGIN  
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE,AC_NAME,INV_NO,INV_DT,INV_AMOUNT,total_qty_str,Mst_Remarks )  
    SELECT P.RM_ID AS XN_ID,@CXNTYPE AS XN_TYPE ,P.RM_NO AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.RM_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME  
    ,CONVERT(VARCHAR(10) ,P.RM_DT,105) AS DATE,LM.AC_NAME
    ,null inv_no,null AS inv_dt,P.total_amount,P.TOTAL_QUANTITY_STR
	,p.REMARKS as Mst_Remarks
    FROM  RMM01106 P      
    join LM01106 lm (nolock) on p.ac_code =lm.AC_CODE 
    LEFT OUTER JOIN
    (
     SELECT  XN_ID AS RM_ID , MAX(LAST_UPDATE) AS XN_APP_DT  
     FROM TRANSACTION_APPROVAL_DET (NOLOCK) WHERE XN_TYPE='PRT'
     GROUP BY XN_ID
    ) XN  ON P.RM_ID=XN.RM_ID 
    WHERE P.APPROVEDLEVELNO<>99 AND P.location_Code =@CCURDEPTID  
    AND (@DSTARTINGFROM='' OR P.RM_DT>=@DSTARTINGFROM) 
    AND P.CANCELLED=0   
     
    UPDATE A SET USERNAME=C.USERNAME  
    FROM #PENDINGAPPROVAL A  
    JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='PRT'   
		AND B.DEPT_ID=@CCURDEPTID  
    JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   END  
   GOTO ENDPROC  
     
--------------------------- FOR VCH --------------------  
 SSPL3:  
     
   IF( @CXNID<>'' )  
  BEGIN  
   
   INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.VM_ID AS XN_ID,@CXNTYPE AS XN_TYPE ,P.VOUCHER_NO AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.VOUCHER_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME  
     ,CONVERT(VARCHAR(10) ,P.VOUCHER_DT,105) AS DATE
    FROM VM01106 P (NOLOCK)  
    LEFT OUTER JOIN POSTACT_VOUCHER_LINK VL (NOLOCK) ON P.VM_ID=VL.VM_ID 
    LEFT OUTER JOIN
    (
     SELECT  XN_ID AS VM_ID , MAX(LAST_UPDATE) AS XN_APP_DT  
     FROM TRANSACTION_APPROVAL_DET (NOLOCK)  WHERE xn_ID=@CXNID AND XN_TYPE='VCH'
     GROUP BY XN_ID
    ) XN  ON P.VM_ID=XN.VM_ID 
    
    
    
    WHERE P.APPROVEDLEVELNO<>99 AND P.VM_ID=@CXNID 
    AND P.CANCELLED=0 AND  VL.VM_ID IS NULL
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='VCH'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
     
  END  
       
 ELSE   
   BEGIN  
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME ,DATE)  
    SELECT P.VM_ID AS XN_ID,@CXNTYPE AS XN_TYPE ,P.VOUCHER_NO AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.VOUCHER_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME
    ,CONVERT(VARCHAR(10) ,P.VOUCHER_DT,105) AS DATE
    FROM VM01106 P  
    LEFT OUTER JOIN POSTACT_VOUCHER_LINK VL (NOLOCK) ON P.VM_ID=VL.VM_ID 
    LEFT OUTER JOIN
    (
     SELECT XN_ID AS  VM_ID , MAX(LAST_UPDATE) AS XN_APP_DT  
     FROM TRANSACTION_APPROVAL_DET (NOLOCK)  WHERE XN_TYPE='VCH'
     GROUP BY XN_ID
    ) XN  ON P.VM_ID=XN.VM_ID 
     
    WHERE P.APPROVEDLEVELNO<>99  AND P.location_code =@CCURDEPTID  
    AND (@DSTARTINGFROM='' OR P.VOUCHER_DT>=@DSTARTINGFROM)  
    AND P.CANCELLED=0 AND VL.VM_ID IS NULL 
      
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='VCH'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   END  
   GOTO ENDPROC  
     
-------------------------- FOR SFT --------------------  
 SSPL4:  
     
   IF( @CXNID<>'' )  
  BEGIN  
   
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.SHIFT_ID AS XN_ID,@CXNTYPE AS XN_TYPE ,'' AS XNO,  
    (P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.OPEN_DATE,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME
    ,CONVERT(VARCHAR(10) ,P.OPEN_TIME,105) AS DATE  
    
    FROM TILL_SHIFT_MST P       
    LEFT OUTER JOIN
    (
     --SELECT  SHIFT_ID , MAX(LAST_UPDATE) AS XN_APP_DT  
     --FROM TILL_XN_APPROVAL (NOLOCK) 
     --GROUP BY SHIFT_ID
		 SELECT xn_id AS  SHIFT_ID , MAX(LAST_UPDATE) AS XN_APP_DT  
		 FROM TRANSACTION_APPROVAL_DET (NOLOCK)  WHERE XN_ID=@CXNID AND  XN_TYPE='SFT'
		 GROUP BY XN_ID
    ) XN  ON P.SHIFT_ID=XN.SHIFT_ID 
     
    WHERE P.APPROVEDLEVELNO<>99 AND P.SHIFT_ID=@CXNID  
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='SFT'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
     
  END  
         
 ELSE   
   BEGIN  
   INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.SHIFT_ID AS XN_ID,@CXNTYPE AS XN_TYPE ,'' AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.OPEN_DATE,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME  
    ,CONVERT(VARCHAR(10) ,P.OPEN_TIME,105) AS DATE
    FROM TILL_SHIFT_MST P      
    LEFT OUTER JOIN
    (
     SELECT xn_id AS  SHIFT_ID , MAX(LAST_UPDATE) AS XN_APP_DT  
     FROM TRANSACTION_APPROVAL_DET (NOLOCK)  WHERE XN_TYPE='SFT'
     GROUP BY XN_ID
    ) XN  ON P.SHIFT_ID=XN.SHIFT_ID  
    WHERE P.APPROVEDLEVELNO<>99 AND P.location_code =@CCURDEPTID  
    AND (@DSTARTINGFROM='' OR P.OPEN_DATE>=@DSTARTINGFROM )   
    AND ISNULL(P.CLOSE_DATE,'')<>''  
      
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='SFT'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   END  
   GOTO ENDPROC  
   
  -----------PBM XNTYPE-------------
  SSPL5:   
   IF( @CXNID<>'' )  
  BEGIN  
     INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE,AC_NAME )  
    SELECT P.mrr_id  AS XN_ID,@CXNTYPE AS XN_TYPE ,P.mrr_no  AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,P.MRR_DT ,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.MRR_DT ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
    ,CONVERT(VARCHAR(10) ,P.MRR_DT ,105) AS DATE,LM.AC_NAME
	FROM pim01106  p  (NOLOCK)
	JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE=P.ac_code          
	WHERE  p.CANCELLED=0
	AND  isnull(p.pim_mode,0)=5
	and p.APPROVEDLEVELNO<>99 AND mrr_id =@CXNID  		
			
  
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='PBM'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE 
    
   SELECT A.* FROM #PENDINGAPPROVAL A  
      
   END
   ELSE
   BEGIN
        
        
		INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
		APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE,AC_NAME )  
		SELECT P.MRR_ID AS XN_ID,@CXNTYPE AS XN_TYPE ,P.MRR_NO AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
	   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,P.MRR_DT ,GETDATE()) AS APPROVALAGIENG,  
		DATEDIFF(DD,P.MRR_DT ,GETDATE())AS MEMOAGIENG  
		,CONVERT(VARCHAR(100),'') AS USERNAME  
		 ,CONVERT(VARCHAR(10) ,P.MRR_DT ,105) AS DATE,LM.AC_NAME
		FROM pim01106  p  (NOLOCK)
	JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE=P.ac_code          
	    WHERE  p.CANCELLED=0
	    AND  isnull(p.pim_mode,0)=5
		AND P.APPROVEDLEVELNO<>99 AND p.location_Code =@CCURDEPTID  
		AND (@DSTARTINGFROM='' OR P.MRR_DT >=@DSTARTINGFROM) 
		AND P.CANCELLED=0   
	     
		UPDATE A SET USERNAME=C.USERNAME  
		FROM #PENDINGAPPROVAL A  
		JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='PBM'   
		AND B.DEPT_ID=@CCURDEPTID  
		JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
        SELECT A.* FROM #PENDINGAPPROVAL A 
		 
   
   
   END  
   GOTO ENDPROC 
   
     
 -----------------------FOR EOSS SHARING DISCOUNT --------------  
 SSPL6:  
     
 IF( @CXNID<>'' )  
  BEGIN  
   
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.MEMO_ID AS XN_ID,@CXNTYPE AS XN_TYPE ,P.MEMO_NO AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,P.MEMO_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.MEMO_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
    ,CONVERT(VARCHAR(10) ,P.MEMO_DT,105) AS DATE
    FROM EOSSDNM P  
      
    WHERE P.APPROVEDLEVELNO<>99 AND MEMO_ID=@CXNID  
    AND P.CANCELLED=0 
      
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='EDS'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
     
  END  
         
 ELSE   
   BEGIN  
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.MEMO_ID AS XN_ID,@CXNTYPE AS XN_TYPE ,P.MEMO_NO AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,P.MEMO_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.MEMO_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME  
     ,CONVERT(VARCHAR(10) ,P.MEMO_DT,105) AS DATE
    FROM    
    EOSSDNM P   
    WHERE P.APPROVEDLEVELNO<>99 AND P.location_code =@CCURDEPTID  
    AND (@DSTARTINGFROM='' OR P.MEMO_DT>=@DSTARTINGFROM) 
    AND P.CANCELLED=0   
     
    UPDATE A SET USERNAME=C.USERNAME  
    FROM #PENDINGAPPROVAL A  
    JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='EDS'   
		AND B.DEPT_ID=@CCURDEPTID  
    JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   END  
   GOTO ENDPROC 
  
  
  --NEW CHANGES
  --PETY CASH
  SSPL7:
       
  IF( @CXNID<>'' )  
  BEGIN  
   
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.ROW_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,PM.PEM_MEMO_NO  AS XNO,  
    (P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,  
    GETDATE()),0) AS APPROVALAGIENG,  
    DATEDIFF(DD,PM.PEM_MEMO_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME     
    ,CONVERT(VARCHAR(10) ,PM.PEM_MEMO_DT ,105) AS DATE
    FROM PED01106  P  
   -- JOIN PTCBILLS PB ON P.ROW_ID =PB.PED_ROW_ID
    JOIN PEM01106 PM ON PM.PEM_MEMO_ID=P.PEM_MEMO_ID 
    LEFT OUTER JOIN
    (
     SELECT  PED_ROW_ID , MAX(A.LAST_UPDATE) AS XN_APP_DT 
     FROM PED_XN_APPROVAL (NOLOCK) A
     JOIN PED01106 B ON A.PED_ROW_ID =B.ROW_ID 
     JOIN PEM01106 C ON C.PEM_MEMO_ID =B.PEM_MEMO_ID 
     WHERE C.CANCELLED =0 
     AND  C.PEM_MEMO_ID  =@CXNID 
     GROUP BY PED_ROW_ID
    ) XN  ON P.ROW_ID =XN.PED_ROW_ID 
    
    WHERE P.APPROVEDLEVELNO<>99 AND PM.PEM_MEMO_ID =@CXNID 
    AND (@DSTARTINGFROM='' OR PM.PEM_MEMO_DT>=@DSTARTINGFROM)  
    AND PM.CANCELLED=0 
   
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='PTC'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
   --  SELECT * FROM PED_XN_APPROVAL
     
  END  
         
 ELSE   
   BEGIN  
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.ROW_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,PM.PEM_MEMO_NO  AS XNO,  
    (P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,GETDATE()),0) AS APPROVALAGIENG,  
    DATEDIFF(DD,PM.PEM_MEMO_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
   ,CONVERT(VARCHAR(10) ,PM.PEM_MEMO_DT,105) AS DATE
    --,CONVERT(VARCHAR(10) ,P.MRR_DT,105) AS DATE
    FROM PED01106  P  
   -- JOIN PTCBILLS PB ON P.ROW_ID =PB.PED_ROW_ID
    JOIN PEM01106 PM ON PM.PEM_MEMO_ID=P.PEM_MEMO_ID 
    LEFT OUTER JOIN
    (
     SELECT  PED_ROW_ID , MAX(A.LAST_UPDATE) AS XN_APP_DT 
     FROM PED_XN_APPROVAL (NOLOCK)  A
     JOIN PED01106 B ON A.PED_ROW_ID =B.ROW_ID 
     JOIN PEM01106 C ON C.PEM_MEMO_ID =B.PEM_MEMO_ID 
     WHERE C.CANCELLED =0 
     GROUP BY PED_ROW_ID
    ) XN  ON P.ROW_ID =XN.PED_ROW_ID 
    WHERE P.APPROVEDLEVELNO<>99 AND PM.location_Code =@CCURDEPTID   
    AND (@DSTARTINGFROM='' OR PM.PEM_MEMO_DT >=@DSTARTINGFROM)  
    AND PM.CANCELLED=0 
   
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='PTC'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   END  
   GOTO ENDPROC  
   
   --CREDIT BILLS 
   SSPL8:
    
  IF( @CXNID<>'' )  
  BEGIN  
   
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT A.CM_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,A.CM_NO  AS XNO,  
    (CB.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,  
    GETDATE()),0) AS APPROVALAGIENG,  
    DATEDIFF(DD,A.CM_DT ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME     
    ,CONVERT(VARCHAR(10) ,A.CM_DT  ,105) AS DATE
    FROM DBO.CMM01106 A  (NOLOCK) 
    LEFT JOIN DBO.CREDITBILLS CB(NOLOCK) ON A.CM_ID=CB.CM_ID      
	JOIN DBO.VW_BILL_PAYMODE VBP (NOLOCK) ON A.CM_ID = VBP.MEMO_ID  AND VBP.XN_TYPE='SLS'
    LEFT OUTER JOIN
    (
     SELECT  CM_ID , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM SLSCRI_XN_APPROVAL (NOLOCK) WHERE  CM_ID =@CXNID 
     GROUP BY CM_ID
    ) XN  ON A.CM_ID =XN.CM_ID 
    
    WHERE CB.APPROVEDLEVELNO<>99 AND A.CM_ID=@CXNID 
    AND (@DSTARTINGFROM='' OR A.CM_DT>=@DSTARTINGFROM)  
    AND A.CANCELLED=0 
    AND VBP.CREDIT_AMOUNT>0 
   
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='SLSCRI'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   --  SELECT * FROM PED_XN_APPROVAL
     
  END  
         
 ELSE   
   BEGIN  
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT A.CM_ID   AS XN_ID,@CXNTYPE AS XN_TYPE ,A.CM_NO AS XNO,  
    (CB.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,GETDATE()),0) AS APPROVALAGIENG,  
    DATEDIFF(DD,A.CM_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
   ,CONVERT(VARCHAR(10) ,A.CM_DT ,105) AS DATE
    --,CONVERT(VARCHAR(10) ,P.MRR_DT,105) AS DATE
    FROM DBO.CMM01106 A  (NOLOCK) 
    LEFT JOIN DBO.CREDITBILLS CB(NOLOCK) ON A.CM_ID=CB.CM_ID      
	JOIN DBO.VW_BILL_PAYMODE VBP (NOLOCK) ON A.CM_ID = VBP.MEMO_ID  AND VBP.XN_TYPE='SLS'
    LEFT OUTER JOIN
    (
     SELECT  CM_ID  , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM SLSCRI_XN_APPROVAL (NOLOCK) 
     GROUP BY CM_ID
    ) XN  ON A.CM_ID =XN.CM_ID 
    WHERE CB.APPROVEDLEVELNO<>99 AND A.location_Code =@CCURDEPTID   
    AND (@DSTARTINGFROM='' OR A.CM_DT  >=@DSTARTINGFROM)  
    AND A.CANCELLED=0 
    AND VBP.CREDIT_AMOUNT>0 
    
   
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='SLSCRI'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   END  
   GOTO ENDPROC  
  
  --EOSS DISABLE BILLS
  
   SSPL9:
    
  IF( @CXNID<>'' )  
  BEGIN  
  
		  
		  IF OBJECT_ID('TEMPDB..#BILLAUDIT','U') IS NOT NULL
			DROP TABLE #BILLAUDIT
		  
			  SELECT ROW_NUMBER() OVER(PARTITION BY CMM.CM_ID,FIELD_NAME,ACMM .PRODUCT_CODE  ORDER BY ACMM.AUDITED_ON ASC) AS SNO,CMM.CM_ID,
					 ACMM.FIELD_NAME ,CONVERT(NUMERIC(10,2),ACMM.OLDVAL) AS OLDVAL ,ACMM .PRODUCT_CODE 
			  INTO #BILLAUDIT
			  FROM CMM01106 CMM
			  JOIN XN_AUDIT_TRIAL_DET ACMM ON CMM.CM_ID=LEFT(ACMM.KEY_VALUE ,22)
			  WHERE ACMM.XN_TYPE ='SLS'
			  AND ACMM .FIELD_NAME IN('NET_AMOUNT','DISCOUNT_AMOUNT')
			  AND CMM.location_Code =@CCURDEPTID
			  AND (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)  
			  AND   CMM.CM_ID =@CXNID 
	  
			 
			  DELETE #BILLAUDIT WHERE SNO>1
			  
			  INSERT INTO #BILLAUDIT (SNO ,CM_ID ,FIELD_NAME ,OLDVAL ,PRODUCT_CODE )
			  SELECT 1 AS SNO,A.CM_ID, 'DISCOUNT_AMOUNT' AS FIELD_NAME,DISCOUNT_AMOUNT AS OLDVAL,A.PRODUCT_CODE 
			  FROM CMD01106 A 
			  JOIN 
			  ( 
			  SELECT DISTINCT CM_ID FROM #BILLAUDIT
			  )TMP ON TMP.CM_ID =A.CM_ID 
			  LEFT JOIN #BILLAUDIT B ON A.CM_ID =B.CM_ID AND A.PRODUCT_CODE=B.PRODUCT_CODE
			  WHERE B.PRODUCT_CODE IS NULL
			 
			 
			  IF OBJECT_ID('TEMPDB..#BILLAUDITDETAILS','U') IS NOT NULL
				 DROP TABLE #BILLAUDITDETAILS

				
			 SELECT CM_ID ,SUM(ISNULL([DISCOUNT_AMOUNT],0)) AS [DISCOUNT_AMOUNT],
					SUM(ISNULL([NET_AMOUNT],0)) AS [NET_AMOUNT]
			 INTO #BILLAUDITDETAILS
			 FROM #BILLAUDIT 
			 PIVOT (SUM(OLDVAL) FOR FIELD_NAME IN ([DISCOUNT_AMOUNT],[NET_AMOUNT])) AS PTABLE
			 GROUP BY CM_ID
			 
			
			 
		  IF OBJECT_ID('TEMPDB..#MODIFIEDBILLS','U') IS NOT NULL
			DROP TABLE #MODIFIEDBILLS
				
			 SELECT  CMM.CM_ID,NEW_QUANTITY AS ORG_QUANTITY
					,CMM.DISCOUNT_AMOUNT  AS ORG_DISCOUNT_AMOUNT
					,CMM.NET_AMOUNT AS ORG_NET_AMOUNT
					,CMD.NEW_QUANTITY,CMD.TOTAL_DISCOUNT_AMOUNT AS NEW_DISCOUNT_AMOUNT,CMD.NET_AMOUNT AS NEW_NET_AMOUNT
			 INTO #MODIFIEDBILLS
			 FROM #BILLAUDITDETAILS CMM
			  JOIN 
			  (
				SELECT CMM.CM_ID,CMM.NET_AMOUNT,
					   SUM(CMD.QUANTITY) AS NEW_QUANTITY
					  ,SUM(CMD.DISCOUNT_AMOUNT+ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS TOTAL_DISCOUNT_AMOUNT
				FROM CMM01106 CMM
				JOIN CMD01106 CMD ON CMM.CM_ID=CMD.CM_ID
				WHERE CMM.location_Code =@CCURDEPTID AND
		        CMM.CANCELLED=0 
		        AND   (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)  
		        AND   CMM.CM_ID =@CXNID 
				GROUP BY CMM.CM_ID,CMM.NET_AMOUNT
			  )CMD ON CMM.CM_ID=CMD.CM_ID
			  WHERE (CMM.NET_AMOUNT<>CMD.NET_AMOUNT 
			  OR CMD.TOTAL_DISCOUNT_AMOUNT<>(ISNULL(CMM.DISCOUNT_AMOUNT,0)))
			
			  
				  
		INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
		APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
		SELECT A.CM_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,A.CM_NO  AS XNO,  
		(B.APPROVEDLEVELNO+1) AS LEVELNO,  
	   'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,  
		GETDATE()),0) AS APPROVALAGIENG,  
		DATEDIFF(DD,A.CM_DT ,GETDATE())AS MEMOAGIENG  
		,CONVERT(VARCHAR(100),'') AS USERNAME     
		,CONVERT(VARCHAR(10) ,A.CM_DT  ,105) AS DATE
		 FROM #MODIFIEDBILLS MB  (NOLOCK)  
		  LEFT OUTER JOIN 
		  (
		  SELECT CM_ID,APPROVEDLEVELNO FROM DBO.EOSSDISABLEDSLS 
		  GROUP BY CM_ID,APPROVEDLEVELNO
		  ) B(NOLOCK) ON A.CM_ID=B.CM_ID
		 JOIN CMM01106 A (NOLOCK) ON A.CM_ID = MB.CM_ID 
		 LEFT OUTER JOIN
		 (
		 SELECT  CM_ID , MAX(LAST_UPDATE) AS XN_APP_DT 
		 FROM EOSSDSLS_XN_APPROVAL (NOLOCK) WHERE  CM_ID =@CXNID 
		 GROUP BY CM_ID
		 ) XN  ON A.CM_ID =XN.CM_ID      
		 WHERE ISNULL(B.APPROVEDLEVELNO,0)<>99 AND A.CM_ID=@CXNID 
		 AND (@DSTARTINGFROM='' OR A.CM_DT>=@DSTARTINGFROM)  
		 AND A.CANCELLED=0  
		 UNION ALL
		  SELECT A.CM_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,A.CM_NO  AS XNO,  
		 (B.APPROVEDLEVELNO+1) AS LEVELNO,  
		 'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,  
		 GETDATE()),0) AS APPROVALAGIENG,  
		 DATEDIFF(DD,A.CM_DT ,GETDATE())AS MEMOAGIENG  
		 ,CONVERT(VARCHAR(100),'') AS USERNAME     
		 ,CONVERT(VARCHAR(10) ,A.CM_DT  ,105) AS DATE
		 FROM DBO.CMM01106 A(NOLOCK)
		 JOIN 
		  (
			SELECT CMM.CM_ID,SUM(CMD.QUANTITY) AS ORG_QUANTITY
				  ,SUM(CMD.DISCOUNT_AMOUNT+ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS TOTAL_DISCOUNT_AMOUNT
			FROM CMM01106 CMM
			JOIN CMD01106 CMD ON CMM.CM_ID=CMD.CM_ID
			WHERE CMM.location_Code =@CCURDEPTID AND
			CMM.CANCELLED=0 
			AND   (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)
			AND CMM.CM_ID =@CXNID 
			GROUP BY CMM.CM_ID
		  )CMD ON A.CM_ID=CMD.CM_ID
		  LEFT OUTER JOIN 
		  (
		  SELECT CM_ID,APPROVEDLEVELNO FROM DBO.EOSSDISABLEDSLS 
		  GROUP BY CM_ID,APPROVEDLEVELNO
		  ) B(NOLOCK) ON A.CM_ID=B.CM_ID
		  LEFT OUTER JOIN
		  (
			 SELECT LEFT(ACMM.KEY_VALUE ,22) AS CM_ID
			 FROM XN_AUDIT_TRIAL_DET ACMM 
			 WHERE ACMM.XN_TYPE ='SLS'
			 GROUP BY LEFT(ACMM.KEY_VALUE ,22)
		  ) ACMM ON A.CM_ID=ACMM.CM_ID
		  LEFT OUTER JOIN
		  (
			 SELECT  CM_ID , MAX(LAST_UPDATE) AS XN_APP_DT 
			 FROM EOSSDSLS_XN_APPROVAL (NOLOCK) WHERE  CM_ID =@CXNID 
			 GROUP BY CM_ID
		 ) XN  ON A.CM_ID =XN.CM_ID     
		  WHERE ISNULL(B.APPROVEDLEVELNO,0)<>99 AND A.CM_ID=@CXNID 
		  AND (@DSTARTINGFROM='' OR A.CM_DT>=@DSTARTINGFROM)  
		  AND ISNULL(A.CTRLS_USED,0)=1
		  AND A.CANCELLED=0 
		  AND ACMM.CM_ID IS NULL
		  
	     
	   
	   UPDATE A SET USERNAME=C.USERNAME  
	   FROM #PENDINGAPPROVAL A  
	   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='EOSSDSLS'   
	   AND B.DEPT_ID=@CCURDEPTID  
	   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
	     
	   SELECT A.* FROM #PENDINGAPPROVAL A   
    
  --    IF OBJECT_ID('TEMPDB..#BILLFIRSTAUDIT','U') IS NOT NULL
		--DROP TABLE #BILLFIRSTAUDIT
  
	 -- SELECT ROW_NUMBER() OVER(PARTITION BY CMM.CM_ID ORDER BY ACMM.AUDITDATETIME ASC) AS SNO,CMM.CM_ID,ACMM.AUDITID
	 -- INTO #BILLFIRSTAUDIT
	 -- FROM CMM01106 CMM
	 -- JOIN CMM01106_AUDIT ACMM ON CMM.CM_ID=ACMM.CM_ID
	 -- WHERE LEFT(CMM.CM_ID,2)=@CCURDEPTID
	 -- AND (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)  
	 -- AND   CMM.CM_ID =@CXNID 
	  
	 -- DELETE #BILLFIRSTAUDIT WHERE SNO>1
	  
	 -- IF OBJECT_ID('TEMPDB..#MODIFIEDBILLS','U') IS NOT NULL
		--DROP TABLE #MODIFIEDBILLS
		
	 -- --LIST OF MODIFIED BILLS
	 -- SELECT CMM.CM_ID,SUM(ACMD.QUANTITY) AS ORG_QUANTITY
		--	,SUM(ACMD.DISCOUNT_AMOUNT+ISNULL(ACMD.CMM_DISCOUNT_AMOUNT,0)) AS ORG_DISCOUNT_AMOUNT
		--	,ACMM.NET_AMOUNT AS ORG_NET_AMOUNT
		--	,CMD.NEW_QUANTITY,CMD.TOTAL_DISCOUNT_AMOUNT AS NEW_DISCOUNT_AMOUNT,CMM.NET_AMOUNT AS NEW_NET_AMOUNT
	 -- INTO #MODIFIEDBILLS
	 -- FROM CMM01106 CMM
	 -- JOIN #BILLFIRSTAUDIT BFA ON CMM.CM_ID=BFA.CM_ID
	 -- JOIN CMM01106_AUDIT ACMM ON BFA.AUDITID=ACMM.AUDITID
	 -- JOIN CMD01106_AUDIT ACMD ON ACMM.AUDITID=ACMD.AUDITID
	 -- JOIN 
	 -- (
		--SELECT CMM.CM_ID,SUM(CMD.QUANTITY) AS NEW_QUANTITY
		--	  ,SUM(CMD.DISCOUNT_AMOUNT+ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS TOTAL_DISCOUNT_AMOUNT
		--FROM CMM01106 CMM
		--JOIN CMD01106 CMD ON CMM.CM_ID=CMD.CM_ID
		--WHERE LEFT(CMM.CM_ID,2)=@CCURDEPTID AND
		--CMM.CANCELLED=0 
		--AND   (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)  
		--AND   CMM.CM_ID =@CXNID 
		--GROUP BY CMM.CM_ID
	 -- )CMD ON CMM.CM_ID=CMD.CM_ID
	 -- WHERE   CMM.CM_ID =@CXNID 
	 -- AND   (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)
	 -- GROUP BY CMM.CM_ID,ACMM.NET_AMOUNT,CMD.NEW_QUANTITY,CMD.TOTAL_DISCOUNT_AMOUNT,CMM.NET_AMOUNT
	 -- HAVING (CMM.NET_AMOUNT<>ACMM.NET_AMOUNT OR CMD.NEW_QUANTITY<>SUM(ACMD.QUANTITY) 
		--	  OR CMD.TOTAL_DISCOUNT_AMOUNT<>SUM(ACMD.DISCOUNT_AMOUNT+ISNULL(ACMD.CMM_DISCOUNT_AMOUNT,0)))
	 -- --    ,      
	  
  --  INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
  --  APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
  --  SELECT A.CM_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,A.CM_NO  AS XNO,  
  --  (B.APPROVEDLEVELNO+1) AS LEVELNO,  
  -- 'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,  
  --  GETDATE()),0) AS APPROVALAGIENG,  
  --  DATEDIFF(DD,A.CM_DT ,GETDATE())AS MEMOAGIENG  
  --  ,CONVERT(VARCHAR(100),'') AS USERNAME     
  --  ,CONVERT(VARCHAR(10) ,A.CM_DT  ,105) AS DATE
  --   FROM #MODIFIEDBILLS MB  (NOLOCK)  
	 --LEFT OUTER JOIN DBO.EOSSDISABLEDSLS B(NOLOCK) ON MB.CM_ID=B.CM_ID
	 --JOIN CMM01106 A (NOLOCK) ON A.CM_ID = MB.CM_ID 
	 --LEFT OUTER JOIN
  --   (
  --   SELECT  CM_ID , MAX(LAST_UPDATE) AS XN_APP_DT 
  --   FROM EOSSDSLS_XN_APPROVAL (NOLOCK) WHERE  CM_ID =@CXNID 
  --   GROUP BY CM_ID
  --   ) XN  ON A.CM_ID =XN.CM_ID      
	 --WHERE ISNULL(B.APPROVEDLEVELNO,0)<>99 AND A.CM_ID=@CXNID 
  --   AND (@DSTARTINGFROM='' OR A.CM_DT>=@DSTARTINGFROM)  
  --   AND A.CANCELLED=0  
  --   UNION ALL
  --    SELECT A.CM_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,A.CM_NO  AS XNO,  
  --   (B.APPROVEDLEVELNO+1) AS LEVELNO,  
  --   'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,  
  --   GETDATE()),0) AS APPROVALAGIENG,  
  --   DATEDIFF(DD,A.CM_DT ,GETDATE())AS MEMOAGIENG  
  --   ,CONVERT(VARCHAR(100),'') AS USERNAME     
  --   ,CONVERT(VARCHAR(10) ,A.CM_DT  ,105) AS DATE
  --   FROM DBO.CMM01106 A(NOLOCK)
	 --JOIN 
	 -- (
		--SELECT CMM.CM_ID,SUM(CMD.QUANTITY) AS ORG_QUANTITY
		--	  ,SUM(CMD.DISCOUNT_AMOUNT+ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS TOTAL_DISCOUNT_AMOUNT
		--FROM CMM01106 CMM
		--JOIN CMD01106 CMD ON CMM.CM_ID=CMD.CM_ID
		--WHERE LEFT(CMM.CM_ID,2)=@CCURDEPTID AND
		--CMM.CANCELLED=0 
		--AND   (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)
		--AND CMM.CM_ID =@CXNID 
		--GROUP BY CMM.CM_ID
	 -- )CMD ON A.CM_ID=CMD.CM_ID
	 -- LEFT OUTER JOIN DBO.EOSSDISABLEDSLS B(NOLOCK) ON A.CM_ID=B.CM_ID
	 -- LEFT OUTER JOIN
	 -- (
	 --   SELECT CM_ID FROM 
	 --   CMM01106_AUDIT
	 --   WHERE CM_ID =@CXNID 
	 --   GROUP BY CM_ID
	 -- ) ACMM ON A.CM_ID=ACMM.CM_ID
	 -- LEFT OUTER JOIN
  --    (
		-- SELECT  CM_ID , MAX(LAST_UPDATE) AS XN_APP_DT 
		-- FROM EOSSDSLS_XN_APPROVAL (NOLOCK) WHERE  CM_ID =@CXNID 
		-- GROUP BY CM_ID
  --   ) XN  ON A.CM_ID =XN.CM_ID     
	 -- WHERE ISNULL(B.APPROVEDLEVELNO,0)<>99 AND A.CM_ID=@CXNID 
  --    AND (@DSTARTINGFROM='' OR A.CM_DT>=@DSTARTINGFROM)  
	 -- AND ISNULL(A.CTRLS_USED,0)=1
	 -- AND A.CANCELLED=0 
	 -- AND ACMM.CM_ID IS NULL
	  
     
   
  -- UPDATE A SET USERNAME=C.USERNAME  
  -- FROM #PENDINGAPPROVAL A  
  -- JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='EOSSDSLS'   
  -- AND B.DEPT_ID=@CCURDEPTID  
  -- JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
  -- SELECT A.* FROM #PENDINGAPPROVAL A   
  -- --  SELECT * FROM PED_XN_APPROVAL
     
   
  END  
         
 ELSE   
   BEGIN  
   
      IF OBJECT_ID('TEMPDB..#BILLAUDIT1','U') IS NOT NULL
			DROP TABLE #BILLAUDIT1
		  
			  SELECT ROW_NUMBER() OVER(PARTITION BY CMM.CM_ID,FIELD_NAME,ACMM .PRODUCT_CODE  ORDER BY ACMM.AUDITED_ON ASC) AS SNO,CMM.CM_ID,
					 ACMM.FIELD_NAME ,CONVERT(NUMERIC(10,2),ACMM.OLDVAL) AS OLDVAL ,ACMM .PRODUCT_CODE 
			  INTO #BILLAUDIT1
			  FROM CMM01106 CMM
			  JOIN XN_AUDIT_TRIAL_DET ACMM ON CMM.CM_ID=LEFT(ACMM.KEY_VALUE ,22)
			  WHERE ACMM.XN_TYPE ='SLS'
			  AND ACMM .FIELD_NAME IN('NET_AMOUNT','DISCOUNT_AMOUNT')
			  AND CMM.location_Code =@CCURDEPTID
			  AND (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)  
			  AND   CMM.CM_ID =@CXNID 
	  
			 
			  DELETE #BILLAUDIT1 WHERE SNO>1
			  
			  INSERT INTO #BILLAUDIT1 (SNO ,CM_ID ,FIELD_NAME ,OLDVAL ,PRODUCT_CODE )
			  SELECT 1 AS SNO,A.CM_ID, 'DISCOUNT_AMOUNT' AS FIELD_NAME,DISCOUNT_AMOUNT AS OLDVAL,A.PRODUCT_CODE 
			  FROM CMD01106 A 
			  JOIN 
			  ( 
			  SELECT DISTINCT CM_ID FROM #BILLAUDIT1
			  )TMP ON TMP.CM_ID =A.CM_ID 
			  LEFT JOIN #BILLAUDIT1 B ON A.CM_ID =B.CM_ID AND A.PRODUCT_CODE=B.PRODUCT_CODE
			  WHERE B.PRODUCT_CODE IS NULL
			 
			 
			  IF OBJECT_ID('TEMPDB..#BILLAUDITDETAILS1','U') IS NOT NULL
				 DROP TABLE #BILLAUDITDETAILS1

				
			 SELECT CM_ID ,SUM(ISNULL([DISCOUNT_AMOUNT],0)) AS [DISCOUNT_AMOUNT],
					SUM(ISNULL([NET_AMOUNT],0)) AS [NET_AMOUNT]
			 INTO #BILLAUDITDETAILS1
			 FROM #BILLAUDIT1 
			 PIVOT (SUM(OLDVAL) FOR FIELD_NAME IN ([DISCOUNT_AMOUNT],[NET_AMOUNT])) AS PTABLE
			 GROUP BY CM_ID
			 
			
			 
		  IF OBJECT_ID('TEMPDB..#MODIFIEDBILLS','U') IS NOT NULL
			DROP TABLE #MODIFIEDBILLS
				
			 SELECT  CMM.CM_ID,NEW_QUANTITY AS ORG_QUANTITY
					,CMM.DISCOUNT_AMOUNT  AS ORG_DISCOUNT_AMOUNT
					,CMM.NET_AMOUNT AS ORG_NET_AMOUNT
					,CMD.NEW_QUANTITY,CMD.TOTAL_DISCOUNT_AMOUNT AS NEW_DISCOUNT_AMOUNT,CMD.NET_AMOUNT AS NEW_NET_AMOUNT
			 INTO #MODIFIEDBILLS1
			 FROM #BILLAUDITDETAILS1 CMM
			  JOIN 
			  (
				SELECT CMM.CM_ID,CMM.NET_AMOUNT,
					   SUM(CMD.QUANTITY) AS NEW_QUANTITY
					  ,SUM(CMD.DISCOUNT_AMOUNT+ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS TOTAL_DISCOUNT_AMOUNT
				FROM CMM01106 CMM
				JOIN CMD01106 CMD ON CMM.CM_ID=CMD.CM_ID
				WHERE CMM.location_Code =@CCURDEPTID AND
		        CMM.CANCELLED=0 
		        AND   (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)  
				GROUP BY CMM.CM_ID,CMM.NET_AMOUNT
			  )CMD ON CMM.CM_ID=CMD.CM_ID
			  WHERE (CMM.NET_AMOUNT<>CMD.NET_AMOUNT 
			  OR CMD.TOTAL_DISCOUNT_AMOUNT<>(ISNULL(CMM.DISCOUNT_AMOUNT,0)))
			
			  
			  
				  
		INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
		APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
		SELECT A.CM_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,A.CM_NO  AS XNO,  
		(B.APPROVEDLEVELNO+1) AS LEVELNO,  
	   'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,  
		GETDATE()),0) AS APPROVALAGIENG,  
		DATEDIFF(DD,A.CM_DT ,GETDATE())AS MEMOAGIENG  
		,CONVERT(VARCHAR(100),'') AS USERNAME     
		,CONVERT(VARCHAR(10) ,A.CM_DT  ,105) AS DATE
		 FROM #MODIFIEDBILLS1 MB  (NOLOCK)  
		 LEFT OUTER JOIN 
		  (
		   SELECT CM_ID ,APPROVEDLEVELNO
		   FROM DBO.EOSSDISABLEDSLS (NOLOCK) 
		   GROUP BY CM_ID ,APPROVEDLEVELNO
		   ) B ON MB.CM_ID=B.CM_ID
		   JOIN CMM01106 A (NOLOCK) ON A.CM_ID = MB.CM_ID 
		 LEFT OUTER JOIN
		 (
		 SELECT  CM_ID , MAX(LAST_UPDATE) AS XN_APP_DT 
		 FROM EOSSDSLS_XN_APPROVAL (NOLOCK) WHERE  CM_ID =@CXNID 
		 GROUP BY CM_ID
		 ) XN  ON A.CM_ID =XN.CM_ID      
		 WHERE ISNULL(B.APPROVEDLEVELNO,0)<>99 AND A.CM_ID=@CXNID 
		 AND (@DSTARTINGFROM='' OR A.CM_DT>=@DSTARTINGFROM)  
		 AND A.CANCELLED=0  
		
		
		 UNION ALL
		  SELECT A.CM_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,A.CM_NO  AS XNO,  
		 (B.APPROVEDLEVELNO+1) AS LEVELNO,  
		 'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,  
		 GETDATE()),0) AS APPROVALAGIENG,  
		 DATEDIFF(DD,A.CM_DT ,GETDATE())AS MEMOAGIENG  
		 ,CONVERT(VARCHAR(100),'') AS USERNAME     
		 ,CONVERT(VARCHAR(10) ,A.CM_DT  ,105) AS DATE
		 FROM DBO.CMM01106 A(NOLOCK)
		 JOIN 
		  (
			SELECT CMM.CM_ID,SUM(CMD.QUANTITY) AS ORG_QUANTITY
				  ,SUM(CMD.DISCOUNT_AMOUNT+ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS TOTAL_DISCOUNT_AMOUNT
			FROM CMM01106 CMM
			JOIN CMD01106 CMD ON CMM.CM_ID=CMD.CM_ID
			WHERE CMM.location_Code =@CCURDEPTID AND
			CMM.CANCELLED=0 
			AND   (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)
			GROUP BY CMM.CM_ID
		  )CMD ON A.CM_ID=CMD.CM_ID
		  LEFT OUTER JOIN 
		  (
		   SELECT CM_ID ,APPROVEDLEVELNO
		   FROM DBO.EOSSDISABLEDSLS (NOLOCK) 
		   GROUP BY CM_ID ,APPROVEDLEVELNO
		   ) B ON A.CM_ID=B.CM_ID
		  LEFT OUTER JOIN
		  (
			 SELECT LEFT(ACMM.KEY_VALUE ,22) AS CM_ID
			 FROM XN_AUDIT_TRIAL_DET ACMM 
			 WHERE ACMM.XN_TYPE ='SLS'
			 GROUP BY LEFT(ACMM.KEY_VALUE ,22)
		  ) ACMM ON A.CM_ID=ACMM.CM_ID
		  LEFT OUTER JOIN
		  (
			 SELECT  CM_ID , MAX(LAST_UPDATE) AS XN_APP_DT 
			 FROM EOSSDSLS_XN_APPROVAL (NOLOCK) 
			 GROUP BY CM_ID
		 ) XN  ON A.CM_ID =XN.CM_ID     
		  WHERE ISNULL(B.APPROVEDLEVELNO,0)<>99 AND A.CM_ID=@CXNID 
		  AND (@DSTARTINGFROM='' OR A.CM_DT>=@DSTARTINGFROM)  
		  AND ISNULL(A.CTRLS_USED,0)=1
		  AND A.CANCELLED=0 
		  AND ACMM.CM_ID IS NULL
		  
	     
	   
	   UPDATE A SET USERNAME=C.USERNAME  
	   FROM #PENDINGAPPROVAL A  
	   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='EOSSDSLS'   
	   AND B.DEPT_ID=@CCURDEPTID  
	   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
	     
	   SELECT A.* FROM #PENDINGAPPROVAL A   
    
  --   IF OBJECT_ID('TEMPDB..#BILLFIRSTAUDIT1','U') IS NOT NULL
		--DROP TABLE #BILLFIRSTAUDIT
  
	 -- SELECT ROW_NUMBER() OVER(PARTITION BY CMM.CM_ID ORDER BY ACMM.AUDITDATETIME ASC) AS SNO,CMM.CM_ID,ACMM.AUDITID
	 -- INTO #BILLFIRSTAUDIT1
	 -- FROM CMM01106 CMM
	 -- JOIN CMM01106_AUDIT ACMM ON CMM.CM_ID=ACMM.CM_ID
	 -- WHERE LEFT(CMM.CM_ID,2)=@CCURDEPTID
	 -- AND (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)  
	
	  
	 -- DELETE #BILLFIRSTAUDIT1 WHERE SNO>1
	  
	 -- IF OBJECT_ID('TEMPDB..#MODIFIEDBILLS1','U') IS NOT NULL
		--DROP TABLE #MODIFIEDBILLS1
		
	 -- --LIST OF MODIFIED BILLS
	 -- SELECT CMM.CM_ID,SUM(ACMD.QUANTITY) AS ORG_QUANTITY
		--	,SUM(ACMD.DISCOUNT_AMOUNT+ISNULL(ACMD.CMM_DISCOUNT_AMOUNT,0)) AS ORG_DISCOUNT_AMOUNT
		--	,ACMM.NET_AMOUNT AS ORG_NET_AMOUNT
		--	,CMD.NEW_QUANTITY,CMD.TOTAL_DISCOUNT_AMOUNT AS NEW_DISCOUNT_AMOUNT,CMM.NET_AMOUNT AS NEW_NET_AMOUNT
	 -- INTO #MODIFIEDBILLS1
	 -- FROM CMM01106 CMM
	 -- JOIN #BILLFIRSTAUDIT1 BFA ON CMM.CM_ID=BFA.CM_ID
	 -- JOIN CMM01106_AUDIT ACMM ON BFA.AUDITID=ACMM.AUDITID
	 -- JOIN CMD01106_AUDIT ACMD ON ACMM.AUDITID=ACMD.AUDITID
	 -- JOIN 
	 -- (
		--SELECT CMM.CM_ID,SUM(CMD.QUANTITY) AS NEW_QUANTITY
		--	  ,SUM(CMD.DISCOUNT_AMOUNT+ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS TOTAL_DISCOUNT_AMOUNT
		--FROM CMM01106 CMM
		--JOIN CMD01106 CMD ON CMM.CM_ID=CMD.CM_ID
		--WHERE LEFT(CMM.CM_ID,2)=@CCURDEPTID AND
		--CMM.CANCELLED=0 
		--AND   (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)  
		--GROUP BY CMM.CM_ID
	 -- )CMD ON CMM.CM_ID=CMD.CM_ID
	 -- WHERE (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)
	 -- GROUP BY CMM.CM_ID,ACMM.NET_AMOUNT,CMD.NEW_QUANTITY,CMD.TOTAL_DISCOUNT_AMOUNT,CMM.NET_AMOUNT
	 -- HAVING (CMM.NET_AMOUNT<>ACMM.NET_AMOUNT OR CMD.NEW_QUANTITY<>SUM(ACMD.QUANTITY) 
		--	  OR CMD.TOTAL_DISCOUNT_AMOUNT<>SUM(ACMD.DISCOUNT_AMOUNT+ISNULL(ACMD.CMM_DISCOUNT_AMOUNT,0)))
	 -- --    ,      
	  
  --  INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
  --  APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
  --  SELECT A.CM_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,A.CM_NO  AS XNO,  
  --  (B.APPROVEDLEVELNO+1) AS LEVELNO,  
  -- 'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,  
  --  GETDATE()),0) AS APPROVALAGIENG,  
  --  DATEDIFF(DD,A.CM_DT ,GETDATE())AS MEMOAGIENG  
  --  ,CONVERT(VARCHAR(100),'') AS USERNAME     
  --  ,CONVERT(VARCHAR(10) ,A.CM_DT  ,105) AS DATE
  --   FROM #MODIFIEDBILLS1 MB  (NOLOCK)  
	 --LEFT OUTER JOIN DBO.EOSSDISABLEDSLS B(NOLOCK) ON MB.CM_ID=B.CM_ID
	 --JOIN CMM01106 A (NOLOCK) ON A.CM_ID = MB.CM_ID 
	 --LEFT OUTER JOIN
  --   (
  --   SELECT  CM_ID , MAX(LAST_UPDATE) AS XN_APP_DT 
  --   FROM EOSSDSLS_XN_APPROVAL (NOLOCK) 
  --   GROUP BY CM_ID
  --   ) XN  ON A.CM_ID =XN.CM_ID      
	 --WHERE ISNULL(B.APPROVEDLEVELNO,0)<>99 
  --   AND (@DSTARTINGFROM='' OR A.CM_DT>=@DSTARTINGFROM)  
  --   AND A.CANCELLED=0  
  --   UNION ALL
  --    SELECT A.CM_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,A.CM_NO  AS XNO,  
  --   (B.APPROVEDLEVELNO+1) AS LEVELNO,  
  --   'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,  
  --   GETDATE()),0) AS APPROVALAGIENG,  
  --   DATEDIFF(DD,A.CM_DT ,GETDATE())AS MEMOAGIENG  
  --   ,CONVERT(VARCHAR(100),'') AS USERNAME     
  --   ,CONVERT(VARCHAR(10) ,A.CM_DT  ,105) AS DATE
  --   FROM DBO.CMM01106 A(NOLOCK)
	 --JOIN 
	 -- (
		--SELECT CMM.CM_ID,SUM(CMD.QUANTITY) AS ORG_QUANTITY
		--	  ,SUM(CMD.DISCOUNT_AMOUNT+ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS TOTAL_DISCOUNT_AMOUNT
		--FROM CMM01106 CMM
		--JOIN CMD01106 CMD ON CMM.CM_ID=CMD.CM_ID
		--WHERE LEFT(CMM.CM_ID,2)=@CCURDEPTID AND
		--CMM.CANCELLED=0 
		--AND   (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)
		--GROUP BY CMM.CM_ID
	 -- )CMD ON A.CM_ID=CMD.CM_ID
	 -- LEFT OUTER JOIN DBO.EOSSDISABLEDSLS B(NOLOCK) ON A.CM_ID=B.CM_ID
	 -- LEFT OUTER JOIN
	 -- (
	 --   SELECT CM_ID FROM 
	 --   CMM01106_AUDIT
	 --   GROUP BY CM_ID
	 -- ) ACMM ON A.CM_ID=ACMM.CM_ID
	 -- LEFT OUTER JOIN
  --    (
		-- SELECT  CM_ID , MAX(LAST_UPDATE) AS XN_APP_DT 
		-- FROM EOSSDSLS_XN_APPROVAL (NOLOCK) 
		-- GROUP BY CM_ID
  --   ) XN  ON A.CM_ID =XN.CM_ID     
	 -- WHERE ISNULL(B.APPROVEDLEVELNO,0)<>99 
  --    AND (@DSTARTINGFROM='' OR A.CM_DT>=@DSTARTINGFROM)  
	 -- AND ISNULL(A.CTRLS_USED,0)=1
	 -- AND A.CANCELLED=0 
	 -- AND ACMM.CM_ID IS NULL
	  
     
   
  -- UPDATE A SET USERNAME=C.USERNAME  
  -- FROM #PENDINGAPPROVAL A  
  -- JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='EOSSDSLS'   
  -- AND B.DEPT_ID=@CCURDEPTID  
  -- JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
  -- SELECT A.* FROM #PENDINGAPPROVAL A    
   END  
   GOTO ENDPROC  
  
  
  -------------------------CARD FEE-------------------
  SSPL10:
    
  IF( @CXNID<>'' )  
  BEGIN  
   
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.ADV_REC_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,P.ADV_REC_NO  AS XNO,(ISNULL(CI.APPROVEDLEVELNO,0)+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.ADV_REC_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
    ,CONVERT(VARCHAR(10) ,P.ADV_REC_DT ,105) AS DATE
    FROM ARC01106 P   
    LEFT OUTER JOIN CARDISSUE (NOLOCK) CI ON CI.ADV_REC_ID=P.ADV_REC_ID  
    LEFT OUTER JOIN
    (
     SELECT  ADV_REC_ID  , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM ARC_XN_APPROVAL (NOLOCK)  WHERE ADV_REC_ID=  @CXNID 
     GROUP BY ADV_REC_ID
    ) XN  ON P.ADV_REC_ID=XN.ADV_REC_ID 
    WHERE ISNULL(CI.APPROVEDLEVELNO,0)<>99 AND P.ADV_REC_ID=@CXNID  
    AND P.CANCELLED=0 
    AND P.ARCT=5 AND P.AMOUNT<>P.NET_AMOUNT
      
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='CRDISS'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
     
  END  
         
 ELSE   
   BEGIN  
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.ADV_REC_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,P.ADV_REC_NO  AS XNO,(ISNULL(CI.APPROVEDLEVELNO,0)+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.ADV_REC_DT ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME  
    ,CONVERT(VARCHAR(10) ,P.ADV_REC_DT,105) AS DATE
     FROM ARC01106 P   
    LEFT OUTER JOIN CARDISSUE (NOLOCK) CI ON CI.ADV_REC_ID=P.ADV_REC_ID     
    LEFT OUTER JOIN
    (
     SELECT  ADV_REC_ID , MAX(LAST_UPDATE) AS XN_APP_DT  
     FROM ARC_XN_APPROVAL (NOLOCK) 
     GROUP BY ADV_REC_ID
    ) XN  ON P.ADV_REC_ID=XN.ADV_REC_ID 
    WHERE ISNULL(CI.APPROVEDLEVELNO,0)<>99 AND P.location_Code =@CCURDEPTID  
    AND (@DSTARTINGFROM='' OR P.ADV_REC_DT>=@DSTARTINGFROM) 
    AND P.CANCELLED=0   
    AND P.ARCT=5 AND P.AMOUNT<>P.NET_AMOUNT
     
    UPDATE A SET USERNAME=C.USERNAME  
    FROM #PENDINGAPPROVAL A  
    JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='CRDISS'   
		AND B.DEPT_ID=@CCURDEPTID  
    JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   END  
   GOTO ENDPROC  
   
   
   SSPL11:
      
      IF( @CXNID<>'' )  
  BEGIN  
   
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.INV_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,P.INV_NO  AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.INV_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
    ,CONVERT(VARCHAR(10) ,P.INV_DT,105) AS DATE
    FROM INM01106 P   
    
    LEFT OUTER JOIN
    (
     SELECT  INV_ID  , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM WSL_XN_APPROVAL (NOLOCK)  WHERE INV_ID=  @CXNID 
     GROUP BY INV_ID
    ) XN  ON P.INV_ID=XN.INV_ID 
    WHERE P.APPROVEDLEVELNO<>99 AND P.INV_ID=@CXNID  
    AND P.CANCELLED=0 
      
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='WSL'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
     
  END  
         
 ELSE   
   BEGIN  
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.INV_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,P.INV_NO  AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.INV_DT ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME  
    ,CONVERT(VARCHAR(10) ,P.INV_DT ,105) AS DATE
    FROM   INM01106  P      
    LEFT OUTER JOIN
    (
     SELECT  INV_ID  , MAX(LAST_UPDATE) AS XN_APP_DT  
     FROM WSL_XN_APPROVAL (NOLOCK) 
     GROUP BY INV_ID
    ) XN  ON P.INV_ID=XN.INV_ID 
    WHERE P.APPROVEDLEVELNO<>99 AND P.location_Code =@CCURDEPTID  
    AND (@DSTARTINGFROM='' OR P.INV_DT >=@DSTARTINGFROM) 
    AND P.CANCELLED=0   
     
    UPDATE A SET USERNAME=C.USERNAME  
    FROM #PENDINGAPPROVAL A  
    JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='WSL'   
		AND B.DEPT_ID=@CCURDEPTID  
    JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   END  
   GOTO ENDPROC  
 
 
 SSPL12:
      
  IF( @CXNID<>'' )  
  BEGIN  
   
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.PO_ID   AS XN_ID,@CXNTYPE AS XN_TYPE ,P.PO_NO   AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.PO_DT ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
    ,CONVERT(VARCHAR(10) ,P.PO_DT ,105) AS DATE
    FROM POM01106 P   
    LEFT OUTER JOIN
    (
     SELECT  XN_ID  , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM TRANSACTION_APPROVAL_DET (NOLOCK) 
      WHERE XN_ID=  @CXNID 
      AND XN_TYPE='PO'
     GROUP BY XN_ID
    ) XN  ON P.PO_ID=XN.XN_ID 
    WHERE ISNULL(P.APPROVEDLEVELNO,0)<>99 AND P.PO_ID=@CXNID  
    AND P.CANCELLED=0 
      
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='PO'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
     
  END  
         
 ELSE   
   BEGIN  
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.PO_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,P.PO_NO  AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.PO_DT ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME  
    ,CONVERT(VARCHAR(10) ,P.PO_DT ,105) AS DATE
    FROM   POM01106   P      
    LEFT OUTER JOIN
    (
     SELECT  XN_ID   , MAX(LAST_UPDATE) AS XN_APP_DT  
     FROM TRANSACTION_APPROVAL_DET (NOLOCK) 
     WHERE XN_TYPE='PO'
     GROUP BY XN_ID
    ) XN  ON P.PO_ID =XN.XN_ID 
    WHERE ISNULL(P.APPROVEDLEVELNO,0)<>99 AND P.location_Code =@CCURDEPTID  
    AND (@DSTARTINGFROM='' OR P.PO_DT  >=@DSTARTINGFROM) 
    AND P.CANCELLED=0   
     
    UPDATE A SET USERNAME=C.USERNAME  
    FROM #PENDINGAPPROVAL A  
    JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='PO'   
		AND B.DEPT_ID=@CCURDEPTID  
    JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   END  
   GOTO ENDPROC  
 
 
 SSPL13:
      
  IF( @CXNID<>'' )  
  BEGIN  
   
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.MEMO_NO   AS XN_ID,@CXNTYPE AS XN_TYPE ,P.MEMO_NO    AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.MEMO_DT ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
    ,CONVERT(VARCHAR(10) ,P.MEMO_DT ,105) AS DATE
    FROM BUDGET_PLAN_MST P   
    LEFT OUTER JOIN
    (
     SELECT  XN_ID  , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM TRANSACTION_APPROVAL_DET (NOLOCK) 
      WHERE XN_ID=  @CXNID 
      AND XN_TYPE='BDGPL'
     GROUP BY XN_ID
    ) XN  ON P.MEMO_NO =XN.XN_ID 
    WHERE ISNULL(P.APPROVEDLEVELNO,0)<>99 AND P.MEMO_NO=@CXNID  
    AND P.CANCELLED=0 
      
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='BDGPL'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
     
  END  
         
 ELSE   
  BEGIN  
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.MEMO_NO   AS XN_ID,@CXNTYPE AS XN_TYPE ,P.MEMO_NO  AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.MEMO_DT ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME  
    ,CONVERT(VARCHAR(10) ,P.MEMO_DT ,105) AS DATE
    FROM   BUDGET_PLAN_MST   P      
    LEFT OUTER JOIN
    (
     SELECT  XN_ID   , MAX(LAST_UPDATE) AS XN_APP_DT  
     FROM TRANSACTION_APPROVAL_DET (NOLOCK) 
     WHERE XN_TYPE='BDGPL'
     GROUP BY XN_ID
    ) XN  ON P.MEMO_NO  =XN.XN_ID 
    WHERE ISNULL(P.APPROVEDLEVELNO,0)<>99 AND P.location_code =@CCURDEPTID  
    AND (@DSTARTINGFROM='' OR P.MEMO_NO  >=@DSTARTINGFROM) 
    AND P.CANCELLED=0   
     
    UPDATE A SET USERNAME=C.USERNAME  
    FROM #PENDINGAPPROVAL A  
    JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='BDGPL'   
	AND B.DEPT_ID=@CCURDEPTID  
    JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   END  
   GOTO ENDPROC  
 
 
 
 SSPL14:
      
  IF( @CXNID<>'' )  
  BEGIN  
   
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.MEMO_NO   AS XN_ID,@CXNTYPE AS XN_TYPE ,P.MEMO_NO    AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.MEMO_DT ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
    ,CONVERT(VARCHAR(10) ,P.MEMO_DT ,105) AS DATE
    FROM BUY_PLAN_MST P   
    LEFT OUTER JOIN
    (
     SELECT  XN_ID  , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM TRANSACTION_APPROVAL_DET (NOLOCK) 
      WHERE XN_ID=  @CXNID 
      AND XN_TYPE='BUYPL'
     GROUP BY XN_ID
    ) XN  ON P.MEMO_NO =XN.XN_ID 
    WHERE ISNULL(P.APPROVEDLEVELNO,0)<>99 AND P.MEMO_NO=@CXNID  
    AND P.CANCELLED=0 
      
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='BUYPL'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
     
  END  
         
 ELSE   
  BEGIN  
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.MEMO_NO   AS XN_ID,@CXNTYPE AS XN_TYPE ,P.MEMO_NO  AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.MEMO_DT ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME  
    ,CONVERT(VARCHAR(10) ,P.MEMO_DT ,105) AS DATE
    FROM   BUY_PLAN_MST   P      
    LEFT OUTER JOIN
    (
     SELECT  XN_ID   , MAX(LAST_UPDATE) AS XN_APP_DT  
     FROM TRANSACTION_APPROVAL_DET (NOLOCK) 
     WHERE XN_TYPE='BUYPL'
     GROUP BY XN_ID
    ) XN  ON P.MEMO_NO  =XN.XN_ID 
    WHERE ISNULL(P.APPROVEDLEVELNO,0)<>99 AND P.location_code =@CCURDEPTID  
    AND (@DSTARTINGFROM='' OR P.MEMO_NO  >=@DSTARTINGFROM) 
    AND P.CANCELLED=0   
     
    UPDATE A SET USERNAME=C.USERNAME  
    FROM #PENDINGAPPROVAL A  
    JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='BUYPL'   
		AND B.DEPT_ID=@CCURDEPTID  
    JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   END  
   GOTO ENDPROC 
   

   SSPL15:
      
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.CN_ID   AS XN_ID,@CXNTYPE AS XN_TYPE ,P.CN_NO     AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.CN_DT ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
    ,CONVERT(VARCHAR(10) ,P.CN_DT ,105) AS DATE
    FROM cnm01106  P (nolock)  
    LEFT OUTER JOIN
    (
     SELECT  XN_ID  , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM TRANSACTION_APPROVAL_DET (NOLOCK) 
      WHERE XN_ID=  @CXNID 
      AND XN_TYPE='WSR'
     GROUP BY XN_ID
    ) XN  ON P.CN_ID =XN.XN_ID 
    WHERE ISNULL(P.APPROVEDLEVELNO,0)<>99 
	AND (@CXNID='' OR P.CN_ID =@CXNID  )
	 AND (@DSTARTINGFROM='' OR @CXNID<>'' OR  P.CN_DT  >=@DSTARTINGFROM) 
    AND P.CANCELLED=0 
      
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='WSR'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
    
   GOTO ENDPROC  

    SSPL16:
      
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.issue_id    AS XN_ID,@CXNTYPE AS XN_TYPE ,P.ISSUE_NO     AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.issue_dt  ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
    ,CONVERT(VARCHAR(10) ,P.ISSUE_DT ,105) AS DATE
    FROM jobwork_issue_mst   P (nolock)  
    LEFT OUTER JOIN
    (
     SELECT  XN_ID  , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM TRANSACTION_APPROVAL_DET (NOLOCK) 
      WHERE XN_ID=  @CXNID 
      AND XN_TYPE='JWI'
     GROUP BY XN_ID
    ) XN  ON P.issue_id  =XN.XN_ID 
    WHERE ISNULL(P.APPROVEDLEVELNO,0)<>99 
	AND (@CXNID='' OR P.issue_id  =@CXNID  )
	 AND (@DSTARTINGFROM='' OR @CXNID<>'' OR  P.ISSUE_DT  >=@DSTARTINGFROM) 
    AND P.CANCELLED=0 
      
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='JWI'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
    
   GOTO ENDPROC  
 
 SSPL17:
      
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.RECEIPT_ID    AS XN_ID,@CXNTYPE AS XN_TYPE ,P.RECEIPT_NO     AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.RECEIPT_DT  ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
    ,CONVERT(VARCHAR(10) ,P.RECEIPT_DT ,105) AS DATE
    FROM jobwork_RECEIPT_mst   P (nolock)  
    LEFT OUTER JOIN
    (
     SELECT  XN_ID  , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM TRANSACTION_APPROVAL_DET (NOLOCK) 
      WHERE XN_ID=  @CXNID 
      AND XN_TYPE='JWR'
     GROUP BY XN_ID
    ) XN  ON P.receipt_ID  =XN.XN_ID 
    WHERE ISNULL(P.APPROVEDLEVELNO,0)<>99 
	AND (@CXNID='' OR P.receipt_id   =@CXNID  )
	 AND (@DSTARTINGFROM='' OR @CXNID<>'' OR  P.receipt_dt   >=@DSTARTINGFROM) 
    AND P.CANCELLED=0 
      
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='JWR'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
    
   GOTO ENDPROC 


   GOTO ENDPROC 
     
     
   ENDPROC:  
  
   
   
     
END  
--END OF CREATING PROCEDURE - SP3S_XNPENDINGAPPROVAL

/*
CREATE PROCEDURE SP3S_XNPENDINGAPPROVAL
 (
	
	@CXNID VARCHAR(100)='',
	@CXNTYPE VARCHAR(10)='PUR',
	@CLOCID CHAR(2)=''
	
 )AS
 BEGIN
 DECLARE @NLEVELNO NUMERIC(10,2),@CUSER_CODE VARCHAR(100),@CCURDEPTID CHAR(2)  
  ,@DSTARTINGFROM DATETIME  
     
  IF OBJECT_ID('TEMPDB..#PENDINGAPPROVAL','U') IS NOT NULL  
   DROP TABLE #PENDINGAPPROVAL  
     
 CREATE TABLE #PENDINGAPPROVAL  
 (XN_ID VARCHAR(100),XN_TYPE VARCHAR(100),XN_NO VARCHAR(100),LEVELNO INT,APPROVAL_STATUS VARCHAR(100),  
   APPROVALAGIENG VARCHAR(100),MEMOAGIENG VARCHAR(100),USERNAME VARCHAR(100),DATE VARCHAR(10))  
   

IF ISNULL(@CLOCID,'')<>''
SET @CCURDEPTID=@CLOCID
        
SELECT TOP 1  @DSTARTINGFROM=ISNULL(CUTOFFDATE,'')  
 FROM LOC_XNSAPPROVAL  
  WHERE XN_TYPE=@CXNTYPE AND DEPT_ID=@CCURDEPTID  
     
SET @DSTARTINGFROM=ISNULL(@DSTARTINGFROM,'')     
     
 IF @CXNTYPE='PUR'  
  GOTO SSPL1  
  ELSE IF @CXNTYPE='PRT'  
   GOTO SSPL2  
  
 ELSE IF @CXNTYPE='VCH'  
  GOTO SSPL3  
   
 ELSE IF @CXNTYPE='SFT'    
  GOTO SSPL4  
 
 ELSE IF @CXNTYPE='PBM'    
  GOTO SSPL5   
  
 ELSE IF @CXNTYPE='EDS'    
  GOTO SSPL6  
  
 ELSE IF @CXNTYPE='PTC'    
  GOTO SSPL7    
 
 ELSE IF @CXNTYPE='SLSCRI'    
  GOTO SSPL8 
  
 ELSE IF @CXNTYPE='EOSSDSLS'    
  GOTO SSPL9 
 
 ELSE IF @CXNTYPE='CRDISS'    
  GOTO SSPL10 
 
 ELSE IF @CXNTYPE='WSL'    
  GOTO SSPL11 
 
 ELSE IF @CXNTYPE='PO'    
  GOTO SSPL12 
  
 ELSE IF @CXNTYPE='BDGPL'    
  GOTO SSPL13
  
 ELSE IF @CXNTYPE='BUYPL'    
  GOTO SSPL14

 ELSE IF @CXNTYPE='WSR'    
  GOTO SSPL15

 ELSE IF @CXNTYPE='JWI'    
  GOTO SSPL16

 ELSE IF @CXNTYPE='JWR'    
  GOTO SSPL17

 --ELSE
 --  GOTO ENDPROC
   
  SSPL1:   
  
  IF( @CXNID<>'' )  
  BEGIN  
   
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.MRR_ID AS XN_ID,@CXNTYPE AS XN_TYPE ,P.MRR_NO AS XNO,  
    (P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,  
    GETDATE()),0) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.RECEIPT_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME     
    ,CONVERT(VARCHAR(10) ,P.MRR_DT,105) AS DATE
    FROM PIM01106 P   
    LEFT OUTER JOIN
    (
     SELECT  MRR_ID, MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM PIM_XN_APPROVAL (NOLOCK) WHERE XN_TYPE= 'PUR' AND MRR_ID=@CXNID 
     GROUP BY MRR_ID
    ) XN  ON P.MRR_ID=XN.MRR_ID 
    
    WHERE P.APPROVEDLEVELNO<>99 AND P.MRR_ID=@CXNID 
    AND P.INV_MODE=1
    AND BILL_CHALLAN_MODE<>1
    AND (@DSTARTINGFROM='' OR P.MRR_DT>=@DSTARTINGFROM)  
    AND P.CANCELLED=0 
    AND  BILL_NO<>''
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='PUR'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
     
  END  
         
 ELSE   
   BEGIN  
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.MRR_ID AS XN_ID,@CXNTYPE AS XN_TYPE ,P.MRR_NO AS XNO,  
    (P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,GETDATE()),0) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.RECEIPT_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
   ,CONVERT(VARCHAR(10) ,P.MRR_DT,105) AS DATE
    --,CONVERT(VARCHAR(10) ,P.MRR_DT,105) AS DATE
    FROM    
    PIM01106 P   
     LEFT OUTER JOIN
    (
     SELECT  MRR_ID , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM PIM_XN_APPROVAL (NOLOCK) WHERE XN_TYPE= 'PUR' 
     GROUP BY MRR_ID
    ) XN  ON P.MRR_ID=XN.MRR_ID 
    WHERE P.APPROVEDLEVELNO<>99 AND P.DEPT_ID=@CCURDEPTID   
    AND (@DSTARTINGFROM='' OR P.MRR_DT>=@DSTARTINGFROM)  
    AND P.CANCELLED=0 
    AND P.INV_MODE=1
    AND BILL_CHALLAN_MODE<>1 
    AND BILL_NO<>'' 
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='PUR'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A    WHERE @CXNTYPE<>''
   END  
   GOTO ENDPROC  
     
   
   
 -----------------------FOR DEBIT NOTE --------------  
 SSPL2:  
     
   IF( @CXNID<>'' )  
  BEGIN  
   
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.RM_ID AS XN_ID,@CXNTYPE AS XN_TYPE ,P.RM_NO AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.RM_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
    ,CONVERT(VARCHAR(10) ,P.RM_DT,105) AS DATE
    FROM RMM01106 P   
    
    LEFT OUTER JOIN
    (
     SELECT  RM_ID , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM PRT_XN_APPROVAL (NOLOCK)  WHERE RM_ID=  @CXNID 
     GROUP BY RM_ID
    ) XN  ON P.RM_ID=XN.RM_ID 
    WHERE P.APPROVEDLEVELNO<>99 AND P.RM_ID=@CXNID  
    AND P.CANCELLED=0 
      
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='PRT'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
     
  END  
         
 ELSE   
   BEGIN  
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.RM_ID AS XN_ID,@CXNTYPE AS XN_TYPE ,P.RM_NO AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.RM_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME  
    ,CONVERT(VARCHAR(10) ,P.RM_DT,105) AS DATE
    FROM    
    RMM01106 P      
    LEFT OUTER JOIN
    (
     SELECT  RM_ID , MAX(LAST_UPDATE) AS XN_APP_DT  
     FROM PRT_XN_APPROVAL (NOLOCK) 
     GROUP BY RM_ID
    ) XN  ON P.RM_ID=XN.RM_ID 
    WHERE P.APPROVEDLEVELNO<>99 AND LEFT(P.RM_NO,2)=@CCURDEPTID  
    AND (@DSTARTINGFROM='' OR P.RM_DT>=@DSTARTINGFROM) 
    AND P.CANCELLED=0   
     
    UPDATE A SET USERNAME=C.USERNAME  
    FROM #PENDINGAPPROVAL A  
    JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='PRT'   
		AND B.DEPT_ID=@CCURDEPTID  
    JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   END  
   GOTO ENDPROC  
     
--------------------------- FOR VCH --------------------  
 SSPL3:  
     
   IF( @CXNID<>'' )  
  BEGIN  
   
   INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.VM_ID AS XN_ID,@CXNTYPE AS XN_TYPE ,P.VOUCHER_NO AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.VOUCHER_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME  
     ,CONVERT(VARCHAR(10) ,P.VOUCHER_DT,105) AS DATE
    FROM VM01106 P (NOLOCK)  
    LEFT OUTER JOIN POSTACT_VOUCHER_LINK VL (NOLOCK) ON P.VM_ID=VL.VM_ID 
    LEFT OUTER JOIN
    (
     SELECT  VM_ID , MAX(LAST_UPDATE) AS XN_APP_DT  
     FROM VM_XN_APPROVAL (NOLOCK)  WHERE VM_ID=@CXNID 
     GROUP BY VM_ID
    ) XN  ON P.VM_ID=XN.VM_ID 
    
    
    
    WHERE P.APPROVEDLEVELNO<>99 AND P.VM_ID=@CXNID 
    AND P.CANCELLED=0 AND  VL.VM_ID IS NULL
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='VCH'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
     
  END  
       
 ELSE   
   BEGIN  
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME ,DATE)  
    SELECT P.VM_ID AS XN_ID,@CXNTYPE AS XN_TYPE ,P.VOUCHER_NO AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.VOUCHER_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME
    ,CONVERT(VARCHAR(10) ,P.VOUCHER_DT,105) AS DATE
    FROM VM01106 P  
    LEFT OUTER JOIN POSTACT_VOUCHER_LINK VL (NOLOCK) ON P.VM_ID=VL.VM_ID 
    LEFT OUTER JOIN
    (
     SELECT  VM_ID , MAX(LAST_UPDATE) AS XN_APP_DT  
     FROM VM_XN_APPROVAL (NOLOCK) 
     GROUP BY VM_ID
    ) XN  ON P.VM_ID=XN.VM_ID 
     
    WHERE P.APPROVEDLEVELNO<>99  AND LEFT(P.VM_ID,2)=@CCURDEPTID  
    AND (@DSTARTINGFROM='' OR P.VOUCHER_DT>=@DSTARTINGFROM)  
    AND P.CANCELLED=0 AND VL.VM_ID IS NULL 
      
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='VCH'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   END  
   GOTO ENDPROC  
     
-------------------------- FOR SFT --------------------  
 SSPL4:  
     
   IF( @CXNID<>'' )  
  BEGIN  
   
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.SHIFT_ID AS XN_ID,@CXNTYPE AS XN_TYPE ,'' AS XNO,  
    (P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.OPEN_DATE,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME
    ,CONVERT(VARCHAR(10) ,P.OPEN_TIME,105) AS DATE  
    
    FROM TILL_SHIFT_MST P       
    LEFT OUTER JOIN
    (
     SELECT  SHIFT_ID , MAX(LAST_UPDATE) AS XN_APP_DT  
     FROM TILL_XN_APPROVAL (NOLOCK) 
     GROUP BY SHIFT_ID
    ) XN  ON P.SHIFT_ID=XN.SHIFT_ID 
     
    WHERE P.APPROVEDLEVELNO<>99 AND P.SHIFT_ID=@CXNID  
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='SFT'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
     
  END  
         
 ELSE   
   BEGIN  
   INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.SHIFT_ID AS XN_ID,@CXNTYPE AS XN_TYPE ,'' AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.OPEN_DATE,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME  
    ,CONVERT(VARCHAR(10) ,P.OPEN_TIME,105) AS DATE
    FROM TILL_SHIFT_MST P      
    LEFT OUTER JOIN
    (
     SELECT  SHIFT_ID , MAX(LAST_UPDATE) AS XN_APP_DT  
     FROM TILL_XN_APPROVAL (NOLOCK) 
     GROUP BY SHIFT_ID
    ) XN  ON P.SHIFT_ID=XN.SHIFT_ID  
    WHERE P.APPROVEDLEVELNO<>99 AND LEFT(P.SHIFT_ID,2)=@CCURDEPTID  
    AND (@DSTARTINGFROM='' OR P.OPEN_DATE>=@DSTARTINGFROM )   
    AND ISNULL(P.CLOSE_DATE,'')<>''  
      
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='SFT'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   END  
   GOTO ENDPROC  
   
  -----------PBM XNTYPE-------------
  SSPL5:   
   IF( @CXNID<>'' )  
  BEGIN  
     INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.mrr_id  AS XN_ID,@CXNTYPE AS XN_TYPE ,P.mrr_no  AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,P.MRR_DT ,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.MRR_DT ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
    ,CONVERT(VARCHAR(10) ,P.MRR_DT ,105) AS DATE
	FROM pim01106  p  (NOLOCK)           
	WHERE  p.CANCELLED=0
	AND  isnull(p.pim_mode,0)=5
	and p.APPROVEDLEVELNO<>99 AND mrr_id =@CXNID  		
			
  
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='PBM'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE 
    
   SELECT A.* FROM #PENDINGAPPROVAL A  
      
   END
   ELSE
   BEGIN
        
        
		INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
		APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
		SELECT P.MRR_ID AS XN_ID,@CXNTYPE AS XN_TYPE ,P.MRR_NO AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
	   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,P.MRR_DT ,GETDATE()) AS APPROVALAGIENG,  
		DATEDIFF(DD,P.MRR_DT ,GETDATE())AS MEMOAGIENG  
		,CONVERT(VARCHAR(100),'') AS USERNAME  
		 ,CONVERT(VARCHAR(10) ,P.MRR_DT ,105) AS DATE
		FROM pim01106  p  (NOLOCK)           
	    WHERE  p.CANCELLED=0
	    AND  isnull(p.pim_mode,0)=5
		AND P.APPROVEDLEVELNO<>99 AND LEFT(P.MRR_NO,2)=@CCURDEPTID  
		AND (@DSTARTINGFROM='' OR P.MRR_DT >=@DSTARTINGFROM) 
		AND P.CANCELLED=0   
	     
		UPDATE A SET USERNAME=C.USERNAME  
		FROM #PENDINGAPPROVAL A  
		JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='PBM'   
		AND B.DEPT_ID=@CCURDEPTID  
		JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
        SELECT A.* FROM #PENDINGAPPROVAL A 
		 
   
   
   END  
   GOTO ENDPROC 
   
     
 -----------------------FOR EOSS SHARING DISCOUNT --------------  
 SSPL6:  
     
 IF( @CXNID<>'' )  
  BEGIN  
   
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.MEMO_ID AS XN_ID,@CXNTYPE AS XN_TYPE ,P.MEMO_NO AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,P.MEMO_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.MEMO_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
    ,CONVERT(VARCHAR(10) ,P.MEMO_DT,105) AS DATE
    FROM EOSSDNM P  
      
    WHERE P.APPROVEDLEVELNO<>99 AND MEMO_ID=@CXNID  
    AND P.CANCELLED=0 
      
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='EDS'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
     
  END  
         
 ELSE   
   BEGIN  
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.MEMO_ID AS XN_ID,@CXNTYPE AS XN_TYPE ,P.MEMO_NO AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,P.MEMO_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.MEMO_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME  
     ,CONVERT(VARCHAR(10) ,P.MEMO_DT,105) AS DATE
    FROM    
    EOSSDNM P   
    WHERE P.APPROVEDLEVELNO<>99 AND LEFT(P.MEMO_NO,2)=@CCURDEPTID  
    AND (@DSTARTINGFROM='' OR P.MEMO_DT>=@DSTARTINGFROM) 
    AND P.CANCELLED=0   
     
    UPDATE A SET USERNAME=C.USERNAME  
    FROM #PENDINGAPPROVAL A  
    JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='EDS'   
		AND B.DEPT_ID=@CCURDEPTID  
    JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   END  
   GOTO ENDPROC 
  
  
  --NEW CHANGES
  --PETY CASH
  SSPL7:
       
  IF( @CXNID<>'' )  
  BEGIN  
   
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.ROW_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,PM.PEM_MEMO_NO  AS XNO,  
    (P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,  
    GETDATE()),0) AS APPROVALAGIENG,  
    DATEDIFF(DD,PM.PEM_MEMO_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME     
    ,CONVERT(VARCHAR(10) ,PM.PEM_MEMO_DT ,105) AS DATE
    FROM PED01106  P  
   -- JOIN PTCBILLS PB ON P.ROW_ID =PB.PED_ROW_ID
    JOIN PEM01106 PM ON PM.PEM_MEMO_ID=P.PEM_MEMO_ID 
    LEFT OUTER JOIN
    (
     SELECT  PED_ROW_ID , MAX(A.LAST_UPDATE) AS XN_APP_DT 
     FROM PED_XN_APPROVAL (NOLOCK) A
     JOIN PED01106 B ON A.PED_ROW_ID =B.ROW_ID 
     JOIN PEM01106 C ON C.PEM_MEMO_ID =B.PEM_MEMO_ID 
     WHERE C.CANCELLED =0 
     AND  C.PEM_MEMO_ID  =@CXNID 
     GROUP BY PED_ROW_ID
    ) XN  ON P.ROW_ID =XN.PED_ROW_ID 
    
    WHERE P.APPROVEDLEVELNO<>99 AND PM.PEM_MEMO_ID =@CXNID 
    AND (@DSTARTINGFROM='' OR PM.PEM_MEMO_DT>=@DSTARTINGFROM)  
    AND PM.CANCELLED=0 
   
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='PTC'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
   --  SELECT * FROM PED_XN_APPROVAL
     
  END  
         
 ELSE   
   BEGIN  
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.ROW_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,PM.PEM_MEMO_NO  AS XNO,  
    (P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,GETDATE()),0) AS APPROVALAGIENG,  
    DATEDIFF(DD,PM.PEM_MEMO_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
   ,CONVERT(VARCHAR(10) ,PM.PEM_MEMO_DT,105) AS DATE
    --,CONVERT(VARCHAR(10) ,P.MRR_DT,105) AS DATE
    FROM PED01106  P  
   -- JOIN PTCBILLS PB ON P.ROW_ID =PB.PED_ROW_ID
    JOIN PEM01106 PM ON PM.PEM_MEMO_ID=P.PEM_MEMO_ID 
    LEFT OUTER JOIN
    (
     SELECT  PED_ROW_ID , MAX(A.LAST_UPDATE) AS XN_APP_DT 
     FROM PED_XN_APPROVAL (NOLOCK)  A
     JOIN PED01106 B ON A.PED_ROW_ID =B.ROW_ID 
     JOIN PEM01106 C ON C.PEM_MEMO_ID =B.PEM_MEMO_ID 
     WHERE C.CANCELLED =0 
     GROUP BY PED_ROW_ID
    ) XN  ON P.ROW_ID =XN.PED_ROW_ID 
    WHERE P.APPROVEDLEVELNO<>99 AND LEFT(PM.PEM_MEMO_ID,2)=@CCURDEPTID   
    AND (@DSTARTINGFROM='' OR PM.PEM_MEMO_DT >=@DSTARTINGFROM)  
    AND PM.CANCELLED=0 
   
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='PTC'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   END  
   GOTO ENDPROC  
   
   --CREDIT BILLS 
   SSPL8:
    
  IF( @CXNID<>'' )  
  BEGIN  
   
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT A.CM_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,A.CM_NO  AS XNO,  
    (CB.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,  
    GETDATE()),0) AS APPROVALAGIENG,  
    DATEDIFF(DD,A.CM_DT ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME     
    ,CONVERT(VARCHAR(10) ,A.CM_DT  ,105) AS DATE
    FROM DBO.CMM01106 A  (NOLOCK) 
    LEFT JOIN DBO.CREDITBILLS CB(NOLOCK) ON A.CM_ID=CB.CM_ID      
	JOIN DBO.VW_BILL_PAYMODE VBP (NOLOCK) ON A.CM_ID = VBP.MEMO_ID  AND VBP.XN_TYPE='SLS'
    LEFT OUTER JOIN
    (
     SELECT  CM_ID , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM SLSCRI_XN_APPROVAL (NOLOCK) WHERE  CM_ID =@CXNID 
     GROUP BY CM_ID
    ) XN  ON A.CM_ID =XN.CM_ID 
    
    WHERE CB.APPROVEDLEVELNO<>99 AND A.CM_ID=@CXNID 
    AND (@DSTARTINGFROM='' OR A.CM_DT>=@DSTARTINGFROM)  
    AND A.CANCELLED=0 
    AND VBP.CREDIT_AMOUNT>0 
   
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='SLSCRI'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   --  SELECT * FROM PED_XN_APPROVAL
     
  END  
         
 ELSE   
   BEGIN  
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT A.CM_ID   AS XN_ID,@CXNTYPE AS XN_TYPE ,A.CM_NO AS XNO,  
    (CB.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,GETDATE()),0) AS APPROVALAGIENG,  
    DATEDIFF(DD,A.CM_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
   ,CONVERT(VARCHAR(10) ,A.CM_DT ,105) AS DATE
    --,CONVERT(VARCHAR(10) ,P.MRR_DT,105) AS DATE
    FROM DBO.CMM01106 A  (NOLOCK) 
    LEFT JOIN DBO.CREDITBILLS CB(NOLOCK) ON A.CM_ID=CB.CM_ID      
	JOIN DBO.VW_BILL_PAYMODE VBP (NOLOCK) ON A.CM_ID = VBP.MEMO_ID  AND VBP.XN_TYPE='SLS'
    LEFT OUTER JOIN
    (
     SELECT  CM_ID  , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM SLSCRI_XN_APPROVAL (NOLOCK) 
     GROUP BY CM_ID
    ) XN  ON A.CM_ID =XN.CM_ID 
    WHERE CB.APPROVEDLEVELNO<>99 AND LEFT(A.CM_ID ,2)=@CCURDEPTID   
    AND (@DSTARTINGFROM='' OR A.CM_DT  >=@DSTARTINGFROM)  
    AND A.CANCELLED=0 
    AND VBP.CREDIT_AMOUNT>0 
    
   
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='SLSCRI'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   END  
   GOTO ENDPROC  
  
  --EOSS DISABLE BILLS
  
   SSPL9:
    
  IF( @CXNID<>'' )  
  BEGIN  
  
		  
		  IF OBJECT_ID('TEMPDB..#BILLAUDIT','U') IS NOT NULL
			DROP TABLE #BILLAUDIT
		  
			  SELECT ROW_NUMBER() OVER(PARTITION BY CMM.CM_ID,FIELD_NAME,ACMM .PRODUCT_CODE  ORDER BY ACMM.AUDITED_ON ASC) AS SNO,CMM.CM_ID,
					 ACMM.FIELD_NAME ,CONVERT(NUMERIC(10,2),ACMM.OLDVAL) AS OLDVAL ,ACMM .PRODUCT_CODE 
			  INTO #BILLAUDIT
			  FROM CMM01106 CMM
			  JOIN XN_AUDIT_TRIAL_DET ACMM ON CMM.CM_ID=LEFT(ACMM.KEY_VALUE ,22)
			  WHERE ACMM.XN_TYPE ='SLS'
			  AND ACMM .FIELD_NAME IN('NET_AMOUNT','DISCOUNT_AMOUNT')
			  AND LEFT(CMM.CM_ID,2)=@CCURDEPTID
			  AND (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)  
			  AND   CMM.CM_ID =@CXNID 
	  
			 
			  DELETE #BILLAUDIT WHERE SNO>1
			  
			  INSERT INTO #BILLAUDIT (SNO ,CM_ID ,FIELD_NAME ,OLDVAL ,PRODUCT_CODE )
			  SELECT 1 AS SNO,A.CM_ID, 'DISCOUNT_AMOUNT' AS FIELD_NAME,DISCOUNT_AMOUNT AS OLDVAL,A.PRODUCT_CODE 
			  FROM CMD01106 A 
			  JOIN 
			  ( 
			  SELECT DISTINCT CM_ID FROM #BILLAUDIT
			  )TMP ON TMP.CM_ID =A.CM_ID 
			  LEFT JOIN #BILLAUDIT B ON A.CM_ID =B.CM_ID AND A.PRODUCT_CODE=B.PRODUCT_CODE
			  WHERE B.PRODUCT_CODE IS NULL
			 
			 
			  IF OBJECT_ID('TEMPDB..#BILLAUDITDETAILS','U') IS NOT NULL
				 DROP TABLE #BILLAUDITDETAILS

				
			 SELECT CM_ID ,SUM(ISNULL([DISCOUNT_AMOUNT],0)) AS [DISCOUNT_AMOUNT],
					SUM(ISNULL([NET_AMOUNT],0)) AS [NET_AMOUNT]
			 INTO #BILLAUDITDETAILS
			 FROM #BILLAUDIT 
			 PIVOT (SUM(OLDVAL) FOR FIELD_NAME IN ([DISCOUNT_AMOUNT],[NET_AMOUNT])) AS PTABLE
			 GROUP BY CM_ID
			 
			
			 
		  IF OBJECT_ID('TEMPDB..#MODIFIEDBILLS','U') IS NOT NULL
			DROP TABLE #MODIFIEDBILLS
				
			 SELECT  CMM.CM_ID,NEW_QUANTITY AS ORG_QUANTITY
					,CMM.DISCOUNT_AMOUNT  AS ORG_DISCOUNT_AMOUNT
					,CMM.NET_AMOUNT AS ORG_NET_AMOUNT
					,CMD.NEW_QUANTITY,CMD.TOTAL_DISCOUNT_AMOUNT AS NEW_DISCOUNT_AMOUNT,CMD.NET_AMOUNT AS NEW_NET_AMOUNT
			 INTO #MODIFIEDBILLS
			 FROM #BILLAUDITDETAILS CMM
			  JOIN 
			  (
				SELECT CMM.CM_ID,CMM.NET_AMOUNT,
					   SUM(CMD.QUANTITY) AS NEW_QUANTITY
					  ,SUM(CMD.DISCOUNT_AMOUNT+ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS TOTAL_DISCOUNT_AMOUNT
				FROM CMM01106 CMM
				JOIN CMD01106 CMD ON CMM.CM_ID=CMD.CM_ID
				WHERE LEFT(CMM.CM_ID,2)=@CCURDEPTID AND
		        CMM.CANCELLED=0 
		        AND   (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)  
		        AND   CMM.CM_ID =@CXNID 
				GROUP BY CMM.CM_ID,CMM.NET_AMOUNT
			  )CMD ON CMM.CM_ID=CMD.CM_ID
			  WHERE (CMM.NET_AMOUNT<>CMD.NET_AMOUNT 
			  OR CMD.TOTAL_DISCOUNT_AMOUNT<>(ISNULL(CMM.DISCOUNT_AMOUNT,0)))
			
			  
				  
		INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
		APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
		SELECT A.CM_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,A.CM_NO  AS XNO,  
		(B.APPROVEDLEVELNO+1) AS LEVELNO,  
	   'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,  
		GETDATE()),0) AS APPROVALAGIENG,  
		DATEDIFF(DD,A.CM_DT ,GETDATE())AS MEMOAGIENG  
		,CONVERT(VARCHAR(100),'') AS USERNAME     
		,CONVERT(VARCHAR(10) ,A.CM_DT  ,105) AS DATE
		 FROM #MODIFIEDBILLS MB  (NOLOCK)  
		  LEFT OUTER JOIN 
		  (
		  SELECT CM_ID,APPROVEDLEVELNO FROM DBO.EOSSDISABLEDSLS 
		  GROUP BY CM_ID,APPROVEDLEVELNO
		  ) B(NOLOCK) ON A.CM_ID=B.CM_ID
		 JOIN CMM01106 A (NOLOCK) ON A.CM_ID = MB.CM_ID 
		 LEFT OUTER JOIN
		 (
		 SELECT  CM_ID , MAX(LAST_UPDATE) AS XN_APP_DT 
		 FROM EOSSDSLS_XN_APPROVAL (NOLOCK) WHERE  CM_ID =@CXNID 
		 GROUP BY CM_ID
		 ) XN  ON A.CM_ID =XN.CM_ID      
		 WHERE ISNULL(B.APPROVEDLEVELNO,0)<>99 AND A.CM_ID=@CXNID 
		 AND (@DSTARTINGFROM='' OR A.CM_DT>=@DSTARTINGFROM)  
		 AND A.CANCELLED=0  
		 UNION ALL
		  SELECT A.CM_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,A.CM_NO  AS XNO,  
		 (B.APPROVEDLEVELNO+1) AS LEVELNO,  
		 'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,  
		 GETDATE()),0) AS APPROVALAGIENG,  
		 DATEDIFF(DD,A.CM_DT ,GETDATE())AS MEMOAGIENG  
		 ,CONVERT(VARCHAR(100),'') AS USERNAME     
		 ,CONVERT(VARCHAR(10) ,A.CM_DT  ,105) AS DATE
		 FROM DBO.CMM01106 A(NOLOCK)
		 JOIN 
		  (
			SELECT CMM.CM_ID,SUM(CMD.QUANTITY) AS ORG_QUANTITY
				  ,SUM(CMD.DISCOUNT_AMOUNT+ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS TOTAL_DISCOUNT_AMOUNT
			FROM CMM01106 CMM
			JOIN CMD01106 CMD ON CMM.CM_ID=CMD.CM_ID
			WHERE LEFT(CMM.CM_ID,2)=@CCURDEPTID AND
			CMM.CANCELLED=0 
			AND   (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)
			AND CMM.CM_ID =@CXNID 
			GROUP BY CMM.CM_ID
		  )CMD ON A.CM_ID=CMD.CM_ID
		  LEFT OUTER JOIN 
		  (
		  SELECT CM_ID,APPROVEDLEVELNO FROM DBO.EOSSDISABLEDSLS 
		  GROUP BY CM_ID,APPROVEDLEVELNO
		  ) B(NOLOCK) ON A.CM_ID=B.CM_ID
		  LEFT OUTER JOIN
		  (
			 SELECT LEFT(ACMM.KEY_VALUE ,22) AS CM_ID
			 FROM XN_AUDIT_TRIAL_DET ACMM 
			 WHERE ACMM.XN_TYPE ='SLS'
			 GROUP BY LEFT(ACMM.KEY_VALUE ,22)
		  ) ACMM ON A.CM_ID=ACMM.CM_ID
		  LEFT OUTER JOIN
		  (
			 SELECT  CM_ID , MAX(LAST_UPDATE) AS XN_APP_DT 
			 FROM EOSSDSLS_XN_APPROVAL (NOLOCK) WHERE  CM_ID =@CXNID 
			 GROUP BY CM_ID
		 ) XN  ON A.CM_ID =XN.CM_ID     
		  WHERE ISNULL(B.APPROVEDLEVELNO,0)<>99 AND A.CM_ID=@CXNID 
		  AND (@DSTARTINGFROM='' OR A.CM_DT>=@DSTARTINGFROM)  
		  AND ISNULL(A.CTRLS_USED,0)=1
		  AND A.CANCELLED=0 
		  AND ACMM.CM_ID IS NULL
		  
	     
	   
	   UPDATE A SET USERNAME=C.USERNAME  
	   FROM #PENDINGAPPROVAL A  
	   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='EOSSDSLS'   
	   AND B.DEPT_ID=@CCURDEPTID  
	   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
	     
	   SELECT A.* FROM #PENDINGAPPROVAL A   
    
  --    IF OBJECT_ID('TEMPDB..#BILLFIRSTAUDIT','U') IS NOT NULL
		--DROP TABLE #BILLFIRSTAUDIT
  
	 -- SELECT ROW_NUMBER() OVER(PARTITION BY CMM.CM_ID ORDER BY ACMM.AUDITDATETIME ASC) AS SNO,CMM.CM_ID,ACMM.AUDITID
	 -- INTO #BILLFIRSTAUDIT
	 -- FROM CMM01106 CMM
	 -- JOIN CMM01106_AUDIT ACMM ON CMM.CM_ID=ACMM.CM_ID
	 -- WHERE LEFT(CMM.CM_ID,2)=@CCURDEPTID
	 -- AND (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)  
	 -- AND   CMM.CM_ID =@CXNID 
	  
	 -- DELETE #BILLFIRSTAUDIT WHERE SNO>1
	  
	 -- IF OBJECT_ID('TEMPDB..#MODIFIEDBILLS','U') IS NOT NULL
		--DROP TABLE #MODIFIEDBILLS
		
	 -- --LIST OF MODIFIED BILLS
	 -- SELECT CMM.CM_ID,SUM(ACMD.QUANTITY) AS ORG_QUANTITY
		--	,SUM(ACMD.DISCOUNT_AMOUNT+ISNULL(ACMD.CMM_DISCOUNT_AMOUNT,0)) AS ORG_DISCOUNT_AMOUNT
		--	,ACMM.NET_AMOUNT AS ORG_NET_AMOUNT
		--	,CMD.NEW_QUANTITY,CMD.TOTAL_DISCOUNT_AMOUNT AS NEW_DISCOUNT_AMOUNT,CMM.NET_AMOUNT AS NEW_NET_AMOUNT
	 -- INTO #MODIFIEDBILLS
	 -- FROM CMM01106 CMM
	 -- JOIN #BILLFIRSTAUDIT BFA ON CMM.CM_ID=BFA.CM_ID
	 -- JOIN CMM01106_AUDIT ACMM ON BFA.AUDITID=ACMM.AUDITID
	 -- JOIN CMD01106_AUDIT ACMD ON ACMM.AUDITID=ACMD.AUDITID
	 -- JOIN 
	 -- (
		--SELECT CMM.CM_ID,SUM(CMD.QUANTITY) AS NEW_QUANTITY
		--	  ,SUM(CMD.DISCOUNT_AMOUNT+ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS TOTAL_DISCOUNT_AMOUNT
		--FROM CMM01106 CMM
		--JOIN CMD01106 CMD ON CMM.CM_ID=CMD.CM_ID
		--WHERE LEFT(CMM.CM_ID,2)=@CCURDEPTID AND
		--CMM.CANCELLED=0 
		--AND   (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)  
		--AND   CMM.CM_ID =@CXNID 
		--GROUP BY CMM.CM_ID
	 -- )CMD ON CMM.CM_ID=CMD.CM_ID
	 -- WHERE   CMM.CM_ID =@CXNID 
	 -- AND   (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)
	 -- GROUP BY CMM.CM_ID,ACMM.NET_AMOUNT,CMD.NEW_QUANTITY,CMD.TOTAL_DISCOUNT_AMOUNT,CMM.NET_AMOUNT
	 -- HAVING (CMM.NET_AMOUNT<>ACMM.NET_AMOUNT OR CMD.NEW_QUANTITY<>SUM(ACMD.QUANTITY) 
		--	  OR CMD.TOTAL_DISCOUNT_AMOUNT<>SUM(ACMD.DISCOUNT_AMOUNT+ISNULL(ACMD.CMM_DISCOUNT_AMOUNT,0)))
	 -- --    ,      
	  
  --  INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
  --  APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
  --  SELECT A.CM_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,A.CM_NO  AS XNO,  
  --  (B.APPROVEDLEVELNO+1) AS LEVELNO,  
  -- 'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,  
  --  GETDATE()),0) AS APPROVALAGIENG,  
  --  DATEDIFF(DD,A.CM_DT ,GETDATE())AS MEMOAGIENG  
  --  ,CONVERT(VARCHAR(100),'') AS USERNAME     
  --  ,CONVERT(VARCHAR(10) ,A.CM_DT  ,105) AS DATE
  --   FROM #MODIFIEDBILLS MB  (NOLOCK)  
	 --LEFT OUTER JOIN DBO.EOSSDISABLEDSLS B(NOLOCK) ON MB.CM_ID=B.CM_ID
	 --JOIN CMM01106 A (NOLOCK) ON A.CM_ID = MB.CM_ID 
	 --LEFT OUTER JOIN
  --   (
  --   SELECT  CM_ID , MAX(LAST_UPDATE) AS XN_APP_DT 
  --   FROM EOSSDSLS_XN_APPROVAL (NOLOCK) WHERE  CM_ID =@CXNID 
  --   GROUP BY CM_ID
  --   ) XN  ON A.CM_ID =XN.CM_ID      
	 --WHERE ISNULL(B.APPROVEDLEVELNO,0)<>99 AND A.CM_ID=@CXNID 
  --   AND (@DSTARTINGFROM='' OR A.CM_DT>=@DSTARTINGFROM)  
  --   AND A.CANCELLED=0  
  --   UNION ALL
  --    SELECT A.CM_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,A.CM_NO  AS XNO,  
  --   (B.APPROVEDLEVELNO+1) AS LEVELNO,  
  --   'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,  
  --   GETDATE()),0) AS APPROVALAGIENG,  
  --   DATEDIFF(DD,A.CM_DT ,GETDATE())AS MEMOAGIENG  
  --   ,CONVERT(VARCHAR(100),'') AS USERNAME     
  --   ,CONVERT(VARCHAR(10) ,A.CM_DT  ,105) AS DATE
  --   FROM DBO.CMM01106 A(NOLOCK)
	 --JOIN 
	 -- (
		--SELECT CMM.CM_ID,SUM(CMD.QUANTITY) AS ORG_QUANTITY
		--	  ,SUM(CMD.DISCOUNT_AMOUNT+ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS TOTAL_DISCOUNT_AMOUNT
		--FROM CMM01106 CMM
		--JOIN CMD01106 CMD ON CMM.CM_ID=CMD.CM_ID
		--WHERE LEFT(CMM.CM_ID,2)=@CCURDEPTID AND
		--CMM.CANCELLED=0 
		--AND   (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)
		--AND CMM.CM_ID =@CXNID 
		--GROUP BY CMM.CM_ID
	 -- )CMD ON A.CM_ID=CMD.CM_ID
	 -- LEFT OUTER JOIN DBO.EOSSDISABLEDSLS B(NOLOCK) ON A.CM_ID=B.CM_ID
	 -- LEFT OUTER JOIN
	 -- (
	 --   SELECT CM_ID FROM 
	 --   CMM01106_AUDIT
	 --   WHERE CM_ID =@CXNID 
	 --   GROUP BY CM_ID
	 -- ) ACMM ON A.CM_ID=ACMM.CM_ID
	 -- LEFT OUTER JOIN
  --    (
		-- SELECT  CM_ID , MAX(LAST_UPDATE) AS XN_APP_DT 
		-- FROM EOSSDSLS_XN_APPROVAL (NOLOCK) WHERE  CM_ID =@CXNID 
		-- GROUP BY CM_ID
  --   ) XN  ON A.CM_ID =XN.CM_ID     
	 -- WHERE ISNULL(B.APPROVEDLEVELNO,0)<>99 AND A.CM_ID=@CXNID 
  --    AND (@DSTARTINGFROM='' OR A.CM_DT>=@DSTARTINGFROM)  
	 -- AND ISNULL(A.CTRLS_USED,0)=1
	 -- AND A.CANCELLED=0 
	 -- AND ACMM.CM_ID IS NULL
	  
     
   
  -- UPDATE A SET USERNAME=C.USERNAME  
  -- FROM #PENDINGAPPROVAL A  
  -- JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='EOSSDSLS'   
  -- AND B.DEPT_ID=@CCURDEPTID  
  -- JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
  -- SELECT A.* FROM #PENDINGAPPROVAL A   
  -- --  SELECT * FROM PED_XN_APPROVAL
     
   
  END  
         
 ELSE   
   BEGIN  
   
      IF OBJECT_ID('TEMPDB..#BILLAUDIT1','U') IS NOT NULL
			DROP TABLE #BILLAUDIT1
		  
			  SELECT ROW_NUMBER() OVER(PARTITION BY CMM.CM_ID,FIELD_NAME,ACMM .PRODUCT_CODE  ORDER BY ACMM.AUDITED_ON ASC) AS SNO,CMM.CM_ID,
					 ACMM.FIELD_NAME ,CONVERT(NUMERIC(10,2),ACMM.OLDVAL) AS OLDVAL ,ACMM .PRODUCT_CODE 
			  INTO #BILLAUDIT1
			  FROM CMM01106 CMM
			  JOIN XN_AUDIT_TRIAL_DET ACMM ON CMM.CM_ID=LEFT(ACMM.KEY_VALUE ,22)
			  WHERE ACMM.XN_TYPE ='SLS'
			  AND ACMM .FIELD_NAME IN('NET_AMOUNT','DISCOUNT_AMOUNT')
			  AND LEFT(CMM.CM_ID,2)=@CCURDEPTID
			  AND (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)  
			  AND   CMM.CM_ID =@CXNID 
	  
			 
			  DELETE #BILLAUDIT1 WHERE SNO>1
			  
			  INSERT INTO #BILLAUDIT1 (SNO ,CM_ID ,FIELD_NAME ,OLDVAL ,PRODUCT_CODE )
			  SELECT 1 AS SNO,A.CM_ID, 'DISCOUNT_AMOUNT' AS FIELD_NAME,DISCOUNT_AMOUNT AS OLDVAL,A.PRODUCT_CODE 
			  FROM CMD01106 A 
			  JOIN 
			  ( 
			  SELECT DISTINCT CM_ID FROM #BILLAUDIT1
			  )TMP ON TMP.CM_ID =A.CM_ID 
			  LEFT JOIN #BILLAUDIT1 B ON A.CM_ID =B.CM_ID AND A.PRODUCT_CODE=B.PRODUCT_CODE
			  WHERE B.PRODUCT_CODE IS NULL
			 
			 
			  IF OBJECT_ID('TEMPDB..#BILLAUDITDETAILS1','U') IS NOT NULL
				 DROP TABLE #BILLAUDITDETAILS1

				
			 SELECT CM_ID ,SUM(ISNULL([DISCOUNT_AMOUNT],0)) AS [DISCOUNT_AMOUNT],
					SUM(ISNULL([NET_AMOUNT],0)) AS [NET_AMOUNT]
			 INTO #BILLAUDITDETAILS1
			 FROM #BILLAUDIT1 
			 PIVOT (SUM(OLDVAL) FOR FIELD_NAME IN ([DISCOUNT_AMOUNT],[NET_AMOUNT])) AS PTABLE
			 GROUP BY CM_ID
			 
			
			 
		  IF OBJECT_ID('TEMPDB..#MODIFIEDBILLS','U') IS NOT NULL
			DROP TABLE #MODIFIEDBILLS
				
			 SELECT  CMM.CM_ID,NEW_QUANTITY AS ORG_QUANTITY
					,CMM.DISCOUNT_AMOUNT  AS ORG_DISCOUNT_AMOUNT
					,CMM.NET_AMOUNT AS ORG_NET_AMOUNT
					,CMD.NEW_QUANTITY,CMD.TOTAL_DISCOUNT_AMOUNT AS NEW_DISCOUNT_AMOUNT,CMD.NET_AMOUNT AS NEW_NET_AMOUNT
			 INTO #MODIFIEDBILLS1
			 FROM #BILLAUDITDETAILS1 CMM
			  JOIN 
			  (
				SELECT CMM.CM_ID,CMM.NET_AMOUNT,
					   SUM(CMD.QUANTITY) AS NEW_QUANTITY
					  ,SUM(CMD.DISCOUNT_AMOUNT+ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS TOTAL_DISCOUNT_AMOUNT
				FROM CMM01106 CMM
				JOIN CMD01106 CMD ON CMM.CM_ID=CMD.CM_ID
				WHERE LEFT(CMM.CM_ID,2)=@CCURDEPTID AND
		        CMM.CANCELLED=0 
		        AND   (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)  
				GROUP BY CMM.CM_ID,CMM.NET_AMOUNT
			  )CMD ON CMM.CM_ID=CMD.CM_ID
			  WHERE (CMM.NET_AMOUNT<>CMD.NET_AMOUNT 
			  OR CMD.TOTAL_DISCOUNT_AMOUNT<>(ISNULL(CMM.DISCOUNT_AMOUNT,0)))
			
			  
			  
				  
		INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
		APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
		SELECT A.CM_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,A.CM_NO  AS XNO,  
		(B.APPROVEDLEVELNO+1) AS LEVELNO,  
	   'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,  
		GETDATE()),0) AS APPROVALAGIENG,  
		DATEDIFF(DD,A.CM_DT ,GETDATE())AS MEMOAGIENG  
		,CONVERT(VARCHAR(100),'') AS USERNAME     
		,CONVERT(VARCHAR(10) ,A.CM_DT  ,105) AS DATE
		 FROM #MODIFIEDBILLS1 MB  (NOLOCK)  
		 LEFT OUTER JOIN 
		  (
		   SELECT CM_ID ,APPROVEDLEVELNO
		   FROM DBO.EOSSDISABLEDSLS (NOLOCK) 
		   GROUP BY CM_ID ,APPROVEDLEVELNO
		   ) B ON MB.CM_ID=B.CM_ID
		   JOIN CMM01106 A (NOLOCK) ON A.CM_ID = MB.CM_ID 
		 LEFT OUTER JOIN
		 (
		 SELECT  CM_ID , MAX(LAST_UPDATE) AS XN_APP_DT 
		 FROM EOSSDSLS_XN_APPROVAL (NOLOCK) WHERE  CM_ID =@CXNID 
		 GROUP BY CM_ID
		 ) XN  ON A.CM_ID =XN.CM_ID      
		 WHERE ISNULL(B.APPROVEDLEVELNO,0)<>99 AND A.CM_ID=@CXNID 
		 AND (@DSTARTINGFROM='' OR A.CM_DT>=@DSTARTINGFROM)  
		 AND A.CANCELLED=0  
		
		
		 UNION ALL
		  SELECT A.CM_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,A.CM_NO  AS XNO,  
		 (B.APPROVEDLEVELNO+1) AS LEVELNO,  
		 'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,  
		 GETDATE()),0) AS APPROVALAGIENG,  
		 DATEDIFF(DD,A.CM_DT ,GETDATE())AS MEMOAGIENG  
		 ,CONVERT(VARCHAR(100),'') AS USERNAME     
		 ,CONVERT(VARCHAR(10) ,A.CM_DT  ,105) AS DATE
		 FROM DBO.CMM01106 A(NOLOCK)
		 JOIN 
		  (
			SELECT CMM.CM_ID,SUM(CMD.QUANTITY) AS ORG_QUANTITY
				  ,SUM(CMD.DISCOUNT_AMOUNT+ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS TOTAL_DISCOUNT_AMOUNT
			FROM CMM01106 CMM
			JOIN CMD01106 CMD ON CMM.CM_ID=CMD.CM_ID
			WHERE LEFT(CMM.CM_ID,2)=@CCURDEPTID AND
			CMM.CANCELLED=0 
			AND   (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)
			GROUP BY CMM.CM_ID
		  )CMD ON A.CM_ID=CMD.CM_ID
		  LEFT OUTER JOIN 
		  (
		   SELECT CM_ID ,APPROVEDLEVELNO
		   FROM DBO.EOSSDISABLEDSLS (NOLOCK) 
		   GROUP BY CM_ID ,APPROVEDLEVELNO
		   ) B ON A.CM_ID=B.CM_ID
		  LEFT OUTER JOIN
		  (
			 SELECT LEFT(ACMM.KEY_VALUE ,22) AS CM_ID
			 FROM XN_AUDIT_TRIAL_DET ACMM 
			 WHERE ACMM.XN_TYPE ='SLS'
			 GROUP BY LEFT(ACMM.KEY_VALUE ,22)
		  ) ACMM ON A.CM_ID=ACMM.CM_ID
		  LEFT OUTER JOIN
		  (
			 SELECT  CM_ID , MAX(LAST_UPDATE) AS XN_APP_DT 
			 FROM EOSSDSLS_XN_APPROVAL (NOLOCK) 
			 GROUP BY CM_ID
		 ) XN  ON A.CM_ID =XN.CM_ID     
		  WHERE ISNULL(B.APPROVEDLEVELNO,0)<>99 AND A.CM_ID=@CXNID 
		  AND (@DSTARTINGFROM='' OR A.CM_DT>=@DSTARTINGFROM)  
		  AND ISNULL(A.CTRLS_USED,0)=1
		  AND A.CANCELLED=0 
		  AND ACMM.CM_ID IS NULL
		  
	     
	   
	   UPDATE A SET USERNAME=C.USERNAME  
	   FROM #PENDINGAPPROVAL A  
	   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='EOSSDSLS'   
	   AND B.DEPT_ID=@CCURDEPTID  
	   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
	     
	   SELECT A.* FROM #PENDINGAPPROVAL A   
    
  --   IF OBJECT_ID('TEMPDB..#BILLFIRSTAUDIT1','U') IS NOT NULL
		--DROP TABLE #BILLFIRSTAUDIT
  
	 -- SELECT ROW_NUMBER() OVER(PARTITION BY CMM.CM_ID ORDER BY ACMM.AUDITDATETIME ASC) AS SNO,CMM.CM_ID,ACMM.AUDITID
	 -- INTO #BILLFIRSTAUDIT1
	 -- FROM CMM01106 CMM
	 -- JOIN CMM01106_AUDIT ACMM ON CMM.CM_ID=ACMM.CM_ID
	 -- WHERE LEFT(CMM.CM_ID,2)=@CCURDEPTID
	 -- AND (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)  
	
	  
	 -- DELETE #BILLFIRSTAUDIT1 WHERE SNO>1
	  
	 -- IF OBJECT_ID('TEMPDB..#MODIFIEDBILLS1','U') IS NOT NULL
		--DROP TABLE #MODIFIEDBILLS1
		
	 -- --LIST OF MODIFIED BILLS
	 -- SELECT CMM.CM_ID,SUM(ACMD.QUANTITY) AS ORG_QUANTITY
		--	,SUM(ACMD.DISCOUNT_AMOUNT+ISNULL(ACMD.CMM_DISCOUNT_AMOUNT,0)) AS ORG_DISCOUNT_AMOUNT
		--	,ACMM.NET_AMOUNT AS ORG_NET_AMOUNT
		--	,CMD.NEW_QUANTITY,CMD.TOTAL_DISCOUNT_AMOUNT AS NEW_DISCOUNT_AMOUNT,CMM.NET_AMOUNT AS NEW_NET_AMOUNT
	 -- INTO #MODIFIEDBILLS1
	 -- FROM CMM01106 CMM
	 -- JOIN #BILLFIRSTAUDIT1 BFA ON CMM.CM_ID=BFA.CM_ID
	 -- JOIN CMM01106_AUDIT ACMM ON BFA.AUDITID=ACMM.AUDITID
	 -- JOIN CMD01106_AUDIT ACMD ON ACMM.AUDITID=ACMD.AUDITID
	 -- JOIN 
	 -- (
		--SELECT CMM.CM_ID,SUM(CMD.QUANTITY) AS NEW_QUANTITY
		--	  ,SUM(CMD.DISCOUNT_AMOUNT+ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS TOTAL_DISCOUNT_AMOUNT
		--FROM CMM01106 CMM
		--JOIN CMD01106 CMD ON CMM.CM_ID=CMD.CM_ID
		--WHERE LEFT(CMM.CM_ID,2)=@CCURDEPTID AND
		--CMM.CANCELLED=0 
		--AND   (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)  
		--GROUP BY CMM.CM_ID
	 -- )CMD ON CMM.CM_ID=CMD.CM_ID
	 -- WHERE (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)
	 -- GROUP BY CMM.CM_ID,ACMM.NET_AMOUNT,CMD.NEW_QUANTITY,CMD.TOTAL_DISCOUNT_AMOUNT,CMM.NET_AMOUNT
	 -- HAVING (CMM.NET_AMOUNT<>ACMM.NET_AMOUNT OR CMD.NEW_QUANTITY<>SUM(ACMD.QUANTITY) 
		--	  OR CMD.TOTAL_DISCOUNT_AMOUNT<>SUM(ACMD.DISCOUNT_AMOUNT+ISNULL(ACMD.CMM_DISCOUNT_AMOUNT,0)))
	 -- --    ,      
	  
  --  INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
  --  APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
  --  SELECT A.CM_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,A.CM_NO  AS XNO,  
  --  (B.APPROVEDLEVELNO+1) AS LEVELNO,  
  -- 'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,  
  --  GETDATE()),0) AS APPROVALAGIENG,  
  --  DATEDIFF(DD,A.CM_DT ,GETDATE())AS MEMOAGIENG  
  --  ,CONVERT(VARCHAR(100),'') AS USERNAME     
  --  ,CONVERT(VARCHAR(10) ,A.CM_DT  ,105) AS DATE
  --   FROM #MODIFIEDBILLS1 MB  (NOLOCK)  
	 --LEFT OUTER JOIN DBO.EOSSDISABLEDSLS B(NOLOCK) ON MB.CM_ID=B.CM_ID
	 --JOIN CMM01106 A (NOLOCK) ON A.CM_ID = MB.CM_ID 
	 --LEFT OUTER JOIN
  --   (
  --   SELECT  CM_ID , MAX(LAST_UPDATE) AS XN_APP_DT 
  --   FROM EOSSDSLS_XN_APPROVAL (NOLOCK) 
  --   GROUP BY CM_ID
  --   ) XN  ON A.CM_ID =XN.CM_ID      
	 --WHERE ISNULL(B.APPROVEDLEVELNO,0)<>99 
  --   AND (@DSTARTINGFROM='' OR A.CM_DT>=@DSTARTINGFROM)  
  --   AND A.CANCELLED=0  
  --   UNION ALL
  --    SELECT A.CM_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,A.CM_NO  AS XNO,  
  --   (B.APPROVEDLEVELNO+1) AS LEVELNO,  
  --   'PENDING FOR NEXT LEVEL' AS STATUS,ISNULL(DATEDIFF(DD,XN.XN_APP_DT,  
  --   GETDATE()),0) AS APPROVALAGIENG,  
  --   DATEDIFF(DD,A.CM_DT ,GETDATE())AS MEMOAGIENG  
  --   ,CONVERT(VARCHAR(100),'') AS USERNAME     
  --   ,CONVERT(VARCHAR(10) ,A.CM_DT  ,105) AS DATE
  --   FROM DBO.CMM01106 A(NOLOCK)
	 --JOIN 
	 -- (
		--SELECT CMM.CM_ID,SUM(CMD.QUANTITY) AS ORG_QUANTITY
		--	  ,SUM(CMD.DISCOUNT_AMOUNT+ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS TOTAL_DISCOUNT_AMOUNT
		--FROM CMM01106 CMM
		--JOIN CMD01106 CMD ON CMM.CM_ID=CMD.CM_ID
		--WHERE LEFT(CMM.CM_ID,2)=@CCURDEPTID AND
		--CMM.CANCELLED=0 
		--AND   (@DSTARTINGFROM='' OR CMM.CM_DT>=@DSTARTINGFROM)
		--GROUP BY CMM.CM_ID
	 -- )CMD ON A.CM_ID=CMD.CM_ID
	 -- LEFT OUTER JOIN DBO.EOSSDISABLEDSLS B(NOLOCK) ON A.CM_ID=B.CM_ID
	 -- LEFT OUTER JOIN
	 -- (
	 --   SELECT CM_ID FROM 
	 --   CMM01106_AUDIT
	 --   GROUP BY CM_ID
	 -- ) ACMM ON A.CM_ID=ACMM.CM_ID
	 -- LEFT OUTER JOIN
  --    (
		-- SELECT  CM_ID , MAX(LAST_UPDATE) AS XN_APP_DT 
		-- FROM EOSSDSLS_XN_APPROVAL (NOLOCK) 
		-- GROUP BY CM_ID
  --   ) XN  ON A.CM_ID =XN.CM_ID     
	 -- WHERE ISNULL(B.APPROVEDLEVELNO,0)<>99 
  --    AND (@DSTARTINGFROM='' OR A.CM_DT>=@DSTARTINGFROM)  
	 -- AND ISNULL(A.CTRLS_USED,0)=1
	 -- AND A.CANCELLED=0 
	 -- AND ACMM.CM_ID IS NULL
	  
     
   
  -- UPDATE A SET USERNAME=C.USERNAME  
  -- FROM #PENDINGAPPROVAL A  
  -- JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='EOSSDSLS'   
  -- AND B.DEPT_ID=@CCURDEPTID  
  -- JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
  -- SELECT A.* FROM #PENDINGAPPROVAL A    
   END  
   GOTO ENDPROC  
  
  
  -------------------------CARD FEE-------------------
  SSPL10:
    
  IF( @CXNID<>'' )  
  BEGIN  
   
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.ADV_REC_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,P.ADV_REC_NO  AS XNO,(ISNULL(CI.APPROVEDLEVELNO,0)+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.ADV_REC_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
    ,CONVERT(VARCHAR(10) ,P.ADV_REC_DT ,105) AS DATE
    FROM ARC01106 P   
    LEFT OUTER JOIN CARDISSUE (NOLOCK) CI ON CI.ADV_REC_ID=P.ADV_REC_ID  
    LEFT OUTER JOIN
    (
     SELECT  ADV_REC_ID  , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM ARC_XN_APPROVAL (NOLOCK)  WHERE ADV_REC_ID=  @CXNID 
     GROUP BY ADV_REC_ID
    ) XN  ON P.ADV_REC_ID=XN.ADV_REC_ID 
    WHERE ISNULL(CI.APPROVEDLEVELNO,0)<>99 AND P.ADV_REC_ID=@CXNID  
    AND P.CANCELLED=0 
    AND P.ARCT=5 AND P.AMOUNT<>P.NET_AMOUNT
      
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='CRDISS'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
     
  END  
         
 ELSE   
   BEGIN  
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.ADV_REC_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,P.ADV_REC_NO  AS XNO,(ISNULL(CI.APPROVEDLEVELNO,0)+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.ADV_REC_DT ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME  
    ,CONVERT(VARCHAR(10) ,P.ADV_REC_DT,105) AS DATE
     FROM ARC01106 P   
    LEFT OUTER JOIN CARDISSUE (NOLOCK) CI ON CI.ADV_REC_ID=P.ADV_REC_ID     
    LEFT OUTER JOIN
    (
     SELECT  ADV_REC_ID , MAX(LAST_UPDATE) AS XN_APP_DT  
     FROM ARC_XN_APPROVAL (NOLOCK) 
     GROUP BY ADV_REC_ID
    ) XN  ON P.ADV_REC_ID=XN.ADV_REC_ID 
    WHERE ISNULL(CI.APPROVEDLEVELNO,0)<>99 AND LEFT(P.ADV_REC_ID,2)=@CCURDEPTID  
    AND (@DSTARTINGFROM='' OR P.ADV_REC_DT>=@DSTARTINGFROM) 
    AND P.CANCELLED=0   
    AND P.ARCT=5 AND P.AMOUNT<>P.NET_AMOUNT
     
    UPDATE A SET USERNAME=C.USERNAME  
    FROM #PENDINGAPPROVAL A  
    JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='CRDISS'   
		AND B.DEPT_ID=@CCURDEPTID  
    JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   END  
   GOTO ENDPROC  
   
   
   SSPL11:
      
      IF( @CXNID<>'' )  
  BEGIN  
   
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.INV_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,P.INV_NO  AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.INV_DT,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
    ,CONVERT(VARCHAR(10) ,P.INV_DT,105) AS DATE
    FROM INM01106 P   
    
    LEFT OUTER JOIN
    (
     SELECT  INV_ID  , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM WSL_XN_APPROVAL (NOLOCK)  WHERE INV_ID=  @CXNID 
     GROUP BY INV_ID
    ) XN  ON P.INV_ID=XN.INV_ID 
    WHERE P.APPROVEDLEVELNO<>99 AND P.INV_ID=@CXNID  
    AND P.CANCELLED=0 
      
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='WSL'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
     
  END  
         
 ELSE   
   BEGIN  
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.INV_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,P.INV_NO  AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.INV_DT ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME  
    ,CONVERT(VARCHAR(10) ,P.INV_DT ,105) AS DATE
    FROM   INM01106  P      
    LEFT OUTER JOIN
    (
     SELECT  INV_ID  , MAX(LAST_UPDATE) AS XN_APP_DT  
     FROM WSL_XN_APPROVAL (NOLOCK) 
     GROUP BY INV_ID
    ) XN  ON P.INV_ID=XN.INV_ID 
    WHERE P.APPROVEDLEVELNO<>99 AND LEFT(P.INV_NO ,2)=@CCURDEPTID  
    AND (@DSTARTINGFROM='' OR P.INV_DT >=@DSTARTINGFROM) 
    AND P.CANCELLED=0   
     
    UPDATE A SET USERNAME=C.USERNAME  
    FROM #PENDINGAPPROVAL A  
    JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='WSL'   
		AND B.DEPT_ID=@CCURDEPTID  
    JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   END  
   GOTO ENDPROC  
 
 
 SSPL12:
      
  IF( @CXNID<>'' )  
  BEGIN  
   
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.PO_ID   AS XN_ID,@CXNTYPE AS XN_TYPE ,P.PO_NO   AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.PO_DT ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
    ,CONVERT(VARCHAR(10) ,P.PO_DT ,105) AS DATE
    FROM POM01106 P   
    LEFT OUTER JOIN
    (
     SELECT  XN_ID  , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM TRANSACTION_APPROVAL_DET (NOLOCK) 
      WHERE XN_ID=  @CXNID 
      AND XN_TYPE='PO'
     GROUP BY XN_ID
    ) XN  ON P.PO_ID=XN.XN_ID 
    WHERE ISNULL(P.APPROVEDLEVELNO,0)<>99 AND P.PO_ID=@CXNID  
    AND P.CANCELLED=0 
      
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='PO'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
     
  END  
         
 ELSE   
   BEGIN  
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.PO_ID  AS XN_ID,@CXNTYPE AS XN_TYPE ,P.PO_NO  AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.PO_DT ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME  
    ,CONVERT(VARCHAR(10) ,P.PO_DT ,105) AS DATE
    FROM   POM01106   P      
    LEFT OUTER JOIN
    (
     SELECT  XN_ID   , MAX(LAST_UPDATE) AS XN_APP_DT  
     FROM TRANSACTION_APPROVAL_DET (NOLOCK) 
     WHERE XN_TYPE='PO'
     GROUP BY XN_ID
    ) XN  ON P.PO_ID =XN.XN_ID 
    WHERE ISNULL(P.APPROVEDLEVELNO,0)<>99 AND LEFT(P.PO_NO ,2)=@CCURDEPTID  
    AND (@DSTARTINGFROM='' OR P.PO_DT  >=@DSTARTINGFROM) 
    AND P.CANCELLED=0   
     
    UPDATE A SET USERNAME=C.USERNAME  
    FROM #PENDINGAPPROVAL A  
    JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='PO'   
		AND B.DEPT_ID=@CCURDEPTID  
    JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   END  
   GOTO ENDPROC  
 
 
 SSPL13:
      
  IF( @CXNID<>'' )  
  BEGIN  
   
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.MEMO_NO   AS XN_ID,@CXNTYPE AS XN_TYPE ,P.MEMO_NO    AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.MEMO_DT ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
    ,CONVERT(VARCHAR(10) ,P.MEMO_DT ,105) AS DATE
    FROM BUDGET_PLAN_MST P   
    LEFT OUTER JOIN
    (
     SELECT  XN_ID  , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM TRANSACTION_APPROVAL_DET (NOLOCK) 
      WHERE XN_ID=  @CXNID 
      AND XN_TYPE='BDGPL'
     GROUP BY XN_ID
    ) XN  ON P.MEMO_NO =XN.XN_ID 
    WHERE ISNULL(P.APPROVEDLEVELNO,0)<>99 AND P.MEMO_NO=@CXNID  
    AND P.CANCELLED=0 
      
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='BDGPL'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
     
  END  
         
 ELSE   
  BEGIN  
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.MEMO_NO   AS XN_ID,@CXNTYPE AS XN_TYPE ,P.MEMO_NO  AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.MEMO_DT ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME  
    ,CONVERT(VARCHAR(10) ,P.MEMO_DT ,105) AS DATE
    FROM   BUDGET_PLAN_MST   P      
    LEFT OUTER JOIN
    (
     SELECT  XN_ID   , MAX(LAST_UPDATE) AS XN_APP_DT  
     FROM TRANSACTION_APPROVAL_DET (NOLOCK) 
     WHERE XN_TYPE='BDGPL'
     GROUP BY XN_ID
    ) XN  ON P.MEMO_NO  =XN.XN_ID 
    WHERE ISNULL(P.APPROVEDLEVELNO,0)<>99 AND LEFT(P.MEMO_NO ,2)=@CCURDEPTID  
    AND (@DSTARTINGFROM='' OR P.MEMO_NO  >=@DSTARTINGFROM) 
    AND P.CANCELLED=0   
     
    UPDATE A SET USERNAME=C.USERNAME  
    FROM #PENDINGAPPROVAL A  
    JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='BDGPL'   
	AND B.DEPT_ID=@CCURDEPTID  
    JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   END  
   GOTO ENDPROC  
 
 
 
 SSPL14:
      
  IF( @CXNID<>'' )  
  BEGIN  
   
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.MEMO_NO   AS XN_ID,@CXNTYPE AS XN_TYPE ,P.MEMO_NO    AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.MEMO_DT ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
    ,CONVERT(VARCHAR(10) ,P.MEMO_DT ,105) AS DATE
    FROM BUY_PLAN_MST P   
    LEFT OUTER JOIN
    (
     SELECT  XN_ID  , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM TRANSACTION_APPROVAL_DET (NOLOCK) 
      WHERE XN_ID=  @CXNID 
      AND XN_TYPE='BUYPL'
     GROUP BY XN_ID
    ) XN  ON P.MEMO_NO =XN.XN_ID 
    WHERE ISNULL(P.APPROVEDLEVELNO,0)<>99 AND P.MEMO_NO=@CXNID  
    AND P.CANCELLED=0 
      
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='BUYPL'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
     
  END  
         
 ELSE   
  BEGIN  
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.MEMO_NO   AS XN_ID,@CXNTYPE AS XN_TYPE ,P.MEMO_NO  AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.MEMO_DT ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME  
    ,CONVERT(VARCHAR(10) ,P.MEMO_DT ,105) AS DATE
    FROM   BUY_PLAN_MST   P      
    LEFT OUTER JOIN
    (
     SELECT  XN_ID   , MAX(LAST_UPDATE) AS XN_APP_DT  
     FROM TRANSACTION_APPROVAL_DET (NOLOCK) 
     WHERE XN_TYPE='BUYPL'
     GROUP BY XN_ID
    ) XN  ON P.MEMO_NO  =XN.XN_ID 
    WHERE ISNULL(P.APPROVEDLEVELNO,0)<>99 AND LEFT(P.MEMO_NO ,2)=@CCURDEPTID  
    AND (@DSTARTINGFROM='' OR P.MEMO_NO  >=@DSTARTINGFROM) 
    AND P.CANCELLED=0   
     
    UPDATE A SET USERNAME=C.USERNAME  
    FROM #PENDINGAPPROVAL A  
    JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='BUYPL'   
		AND B.DEPT_ID=@CCURDEPTID  
    JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
   END  
   GOTO ENDPROC 
   

   SSPL15:
      
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.CN_ID   AS XN_ID,@CXNTYPE AS XN_TYPE ,P.CN_NO     AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.CN_DT ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
    ,CONVERT(VARCHAR(10) ,P.CN_DT ,105) AS DATE
    FROM cnm01106  P (nolock)  
    LEFT OUTER JOIN
    (
     SELECT  XN_ID  , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM TRANSACTION_APPROVAL_DET (NOLOCK) 
      WHERE XN_ID=  @CXNID 
      AND XN_TYPE='WSR'
     GROUP BY XN_ID
    ) XN  ON P.CN_ID =XN.XN_ID 
    WHERE ISNULL(P.APPROVEDLEVELNO,0)<>99 
	AND (@CXNID='' OR P.CN_ID =@CXNID  )
	 AND (@DSTARTINGFROM='' OR @CXNID<>'' OR  P.CN_DT  >=@DSTARTINGFROM) 
    AND P.CANCELLED=0 
      
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='WSR'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
    
   GOTO ENDPROC  

    SSPL16:
      
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.issue_id    AS XN_ID,@CXNTYPE AS XN_TYPE ,P.ISSUE_NO     AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.issue_dt  ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
    ,CONVERT(VARCHAR(10) ,P.ISSUE_DT ,105) AS DATE
    FROM jobwork_issue_mst   P (nolock)  
    LEFT OUTER JOIN
    (
     SELECT  XN_ID  , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM TRANSACTION_APPROVAL_DET (NOLOCK) 
      WHERE XN_ID=  @CXNID 
      AND XN_TYPE='JWI'
     GROUP BY XN_ID
    ) XN  ON P.issue_id  =XN.XN_ID 
    WHERE ISNULL(P.APPROVEDLEVELNO,0)<>99 
	AND (@CXNID='' OR P.issue_id  =@CXNID  )
	 AND (@DSTARTINGFROM='' OR @CXNID<>'' OR  P.ISSUE_DT  >=@DSTARTINGFROM) 
    AND P.CANCELLED=0 
      
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='JWI'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
    
   GOTO ENDPROC  
 
 SSPL17:
      
    INSERT INTO #PENDINGAPPROVAL (XN_ID,XN_TYPE ,XN_NO ,LEVELNO ,APPROVAL_STATUS ,  
    APPROVALAGIENG ,MEMOAGIENG,USERNAME,DATE )  
    SELECT P.RECEIPT_ID    AS XN_ID,@CXNTYPE AS XN_TYPE ,P.RECEIPT_NO     AS XNO,(P.APPROVEDLEVELNO+1) AS LEVELNO,  
   'PENDING FOR NEXT LEVEL' AS STATUS,DATEDIFF(DD,XN.XN_APP_DT,GETDATE()) AS APPROVALAGIENG,  
    DATEDIFF(DD,P.RECEIPT_DT  ,GETDATE())AS MEMOAGIENG  
    ,CONVERT(VARCHAR(100),'') AS USERNAME 
    ,CONVERT(VARCHAR(10) ,P.RECEIPT_DT ,105) AS DATE
    FROM jobwork_RECEIPT_mst   P (nolock)  
    LEFT OUTER JOIN
    (
     SELECT  XN_ID  , MAX(LAST_UPDATE) AS XN_APP_DT 
     FROM TRANSACTION_APPROVAL_DET (NOLOCK) 
      WHERE XN_ID=  @CXNID 
      AND XN_TYPE='JWR'
     GROUP BY XN_ID
    ) XN  ON P.receipt_ID  =XN.XN_ID 
    WHERE ISNULL(P.APPROVEDLEVELNO,0)<>99 
	AND (@CXNID='' OR P.receipt_id   =@CXNID  )
	 AND (@DSTARTINGFROM='' OR @CXNID<>'' OR  P.receipt_dt   >=@DSTARTINGFROM) 
    AND P.CANCELLED=0 
      
     
   UPDATE A SET USERNAME=C.USERNAME  
   FROM #PENDINGAPPROVAL A  
   JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.LEVELNO=B.LEVEL_NO AND B.XN_TYPE='JWR'   
   AND B.DEPT_ID=@CCURDEPTID  
   JOIN USERS C ON B.USER_CODE=C.USER_CODE  
     
   SELECT A.* FROM #PENDINGAPPROVAL A   
     
    
   GOTO ENDPROC 


   GOTO ENDPROC 
     
     
   ENDPROC:  
  
   
   
     
END  
--END OF CREATING PROCEDURE - SP3S_XNPENDINGAPPROVAL
*/