create PROCEDURE SAVETRAN_PURCHASE_QUOTATION
(
	@NUPDATEMODE		NUMERIC(1,0),
	@NSPID				varchar(40),
	@CMEMONOPREFIX		VARCHAR(50),
	@CFINYEAR			VARCHAR(10),
	@LGENERATEBARCODES	BIT=0,
	@CBARCODEPREFIX		VARCHAR(20)='',
	@NBOXNO				INT=0,
	@CMACHINENAME		VARCHAR(100)='',
	@CWINDOWUSERNAME	VARCHAR(100)='',
	@CWIZAPPUSERCODE	VARCHAR(10)='0000000',
	@CXNMEMOID			VARCHAR(40)='',
	@NAPPROVEMODE		NUMERIC(1,0)=0,
	@CCOMPUTERIP		VARCHAR(20)='',
	@NMODE				NUMERIC(1,0)=1,
	@BTHROUGHIMPORT		BIT=0,
	@EDIT_CLICKED	    BIT=0
)
--WITH ENCRYPTION
AS 
BEGIN
	
				--changes by Dinkar in location id varchar(4)..
   --DECLARE @EDIT_CLICKED BIT=1
	-- @NUPDATEMODE:	1- NEW PUR ADDED, 
	--					2- NEW BOX ADDED TO EXISTING PUR, 
	--					3- CURRENT PUR CANCELLED, 
	--					4- EXISTING PUR EDITED

	/*UNMERGED:
	MODE IN QUOTATION_mst :	3- AGAINST BUYER ORDER		
	*/
	
	DECLARE @CTEMPDBNAME			VARCHAR(100),
			@CMASTERTABLENAME		VARCHAR(100),
			@CDETAILTABLENAME1		VARCHAR(100),
			@CDETAILTABLENAME2		VARCHAR(100),
			@CDETAILTABLENAME3		VARCHAR(100),
			@CTEMPMASTERTABLENAME	VARCHAR(100),
			@CTEMPDETAILTABLENAME1	VARCHAR(100),
			@CTEMPDETAILTABLENAME2	VARCHAR(100),
			@CTEMPMASTERTABLE		VARCHAR(100),
			@CTEMPDETAILTABLE1		VARCHAR(100),
			@CTEMPDETAILTABLE2		VARCHAR(100),
			@CERRORMSG				VARCHAR(500),
			@LDONOTUPDATESTOCK		BIT,
			@CMEMOPREFIXPROC        VARCHAR(25),
			@CKEYFIELD1				VARCHAR(50),
			@CKEYFIELDVAL1			VARCHAR(50),
			@CMEMONO				VARCHAR(20),
			@NMEMONOLEN				NUMERIC(20,0),
			@CMEMONOVAL				VARCHAR(50),
			@CLOCATIONID			VARCHAR(4),
			@CHODEPTID				VARCHAR(4),
			@CCMD					NVARCHAR(4000),
			@CCMDOUTPUT				NVARCHAR(4000),
			@NSAVETRANLOOP			BIT,
			@cSTEP					varchar(40),
			@LENABLETEMPDATABASE	BIT,
			@NSUBTOTAL NUMERIC(20,2)
			,@cUpdateStr VARCHAR(4000),@LUPDATEONLY BIT
            ,@CAC_CODE VARCHAR(100),@CENABLEMULTILEVELAPPROVAL VARCHAR(2)
            ,@NLOOPQUTPUT1 BIT,@NEXCLTAX NUMERIC(10,2)
            ,@HSN_CODE VARCHAR(15),@CPARTYSTATECODE VARCHAR(10),@BLOCREGISTER BIT,@DPQDT DATETIME,@cMissingRowId VARCHAR(40),
            @CLOCID	VARCHAR(4)
    
	
	DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))

	declare @cStepmsg varchar(40)
	set @cstepmsg='@nUpdatemode='+str(@nUpdatemode)

	SET @cSTEP = 2		-- SETTTING UP ENVIRONMENT
	EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,@cStepmsg,1
	
		SET @CTEMPDBNAME = ''

	SET @CMASTERTABLENAME	= 'QUOTATION_mst'
	SET @CDETAILTABLENAME1	= 'QUOTATION_det'
	--SET @CDETAILTABLENAME2	= 'MOH01106'
	SET @CDETAILTABLENAME3	= 'SKU_BO'

	SET @CTEMPMASTERTABLENAME	= 'PQ_QUOTATION_MST_UPLOAD'
	SET @CTEMPDETAILTABLENAME1	= 'PQ_QUOTATION_det_UPLOAD'
	--SET @CTEMPDETAILTABLENAME2	= 'TEMP_MOH01106_'+LTRIM(RTRIM(STR(@NSPID)))
	SET @CTEMPMASTERTABLE	= @CTEMPDBNAME + @CTEMPMASTERTABLENAME
	SET @CTEMPDETAILTABLE1	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME1
	--SET @CTEMPDETAILTABLE2	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME2
	
	SET @CERRORMSG			= ''
	SET @LDONOTUPDATESTOCK	= 0
	SET @CKEYFIELD1			= 'pq_ID'
	SET @CMEMONO			= 'pq_NO'

	SET @cStep = 80  -- GENERATING NEW KEY  
	EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1
	   
   SELECT @CLOCID=LOCATION_CODE FROM PQ_QUOTATION_MST_UPLOAD (nolock) WHERE SP_ID=@NSPID  
   
	IF ISNULL(@CLOCID,'')=''
		SELECT @CLOCATIONID		= DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID
	ELSE 
		SET @CLOCATIONID=@CLOCID
	
	IF @nUpdatemode IN (1,2)
	BEGIN
	      IF ISNULL(@CLOCATIONID,'')=''
		 BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM((@cSTEP)) + ' LOCATION ID CAN NOT BE BLANK  '  
			GOTO END_PROC    
		 END
	    
		SET @cSTEP = 2.2		-- SETTTING UP ENVIRONMENT
		EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1
		
		-- GETTING pq_ID WHICH IS BEING EDITED
		SELECT @CKEYFIELDVAL1 = pq_ID, @CMEMONOVAL = pq_NO
		FROM PQ_QUOTATION_MST_UPLOAD (nolock) WHERE SP_ID=LTRIM(RTRIM((@NSPID)))
		IF (@CKEYFIELDVAL1 IS NULL ) OR (@CMEMONOVAL IS NULL )
		BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cSTEP)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'
				-- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'
				  
				GOTO END_PROC  		
		END
	
	END

	SET @cSTEP = 4.8		-- SETTTING UP ENVIRONMENT
	EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1			

	SELECT TOP 1 @CHODEPTID		= [VALUE] FROM CONFIG(NOLOCK) WHERE CONFIG_OPTION='HO_LOCATION_ID'		
	
	
	
	SELECT TOP 1 @CENABLEMULTILEVELAPPROVAL=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='ENABLE_MULTI_LEVEL_pq_APPROVAL'
	
	DECLARE @IMAXLEVEL INT
			
	--GETTING THE MAX LEVEL OF APPROVAL FOR PURCHASE TRANSACTION
	SELECT @IMAXLEVEL=MAX(LEVEL_NO) 
	FROM XN_APPROVAL_CHECKLIST_LEVELS 
	WHERE XN_TYPE='PQ' AND INACTIVE=0
			
	SET @IMAXLEVEL=ISNULL(@IMAXLEVEL,0)
		
	
BEGIN TRY
		
	BEGIN TRANSACTION
	
	IF @NUPDATEMODE<>1
	BEGIN
		IF @NUPDATEMODE=2
			SELECT TOP 1 @CXNMEMOID=pq_id FROM  PQ_QUOTATION_MST_UPLOAD (NOLOCK) WHERE sp_id=@nSpId
		
	END

	SET @cSTEP = 6		-- SETTTING UP ENVIRONMENT
	EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1

	IF @NUPDATEMODE=4
		GOTO LBLAPPROVEPQ

		
	IF @BTHROUGHIMPORT=1   
	BEGIN  
		SET @cSTEP = 8  
		EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1

		SET @CCMD=N'SELECT @CAC_CODE=AC_CODE FROM '+@CTEMPMASTERTABLE +'(NOLOCK) WHERE SP_ID='''+LTRIM(RTRIM((@NSPID)))+''' ' 
		EXEC SP_EXECUTESQL @CCMD,N'@CAC_CODE VARCHAR(100) OUTPUT',@CAC_CODE OUTPUT

		SET @cSTEP = 8.5  
		EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1		
		--as discuss with sanjiv sir 
     --	UPDATE  #TMPMASTERSENC SET CODING_SCHEME=1 where isnull(product_code,'')<>''


		EXEC SP_GETMASTERS '01112',2,@CERRORMSG OUTPUT ,@CAC_CODE ,1, @CLOCID

		PRINT 'COME OUT OF IMPORTMASTERS'     
		IF ISNULL(@CERRORMSG,'')<>''  
		GOTO END_PROC  


		EXEC SP3S_VALIDATE_PARAS @CERRORMSG=@CERRORMSG OUTPUT

		IF ISNULL(@CERRORMSG,'')<>''  
		GOTO END_PROC  


        SET @cSTEP = 10  
		EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1

		SET @CCMD=N'UPDATE A SET ARTICLE_CODE=ART.ARTICLE_CODE,PARA1_CODE=ISNULL(C.PARA1_CODE,''0000000''),  
					PARA2_CODE=ISNULL(D.PARA2_CODE,''0000000''),PARA3_CODE=ISNULL(E.PARA3_CODE,''0000000''),  
					PARA4_CODE=ISNULL(F.PARA4_CODE,''0000000''),PARA5_CODE=ISNULL(G.PARA5_CODE,''0000000''),  
					PARA6_CODE=ISNULL(H.PARA6_CODE,''0000000'') ,FORM_ID=ISNULL(I.FORM_ID,''0000000'')
					FROM  '+@CTEMPDBNAME+@CTEMPDETAILTABLENAME1+' A WITH (ROWLOCK) 
					JOIN #TMPMASTERSENC B ON A.ROW_ID=B.ROW_ID  
					JOIN ARTICLE ART(NOLOCK) ON ART.ARTICLE_NO = B.ARTICLE_NO    
					LEFT OUTER JOIN PARA1 C(NOLOCK) ON C.PARA1_NAME = B.PARA1_NAME  AND ISNULL(C.INACTIVE,0)=0  
					LEFT OUTER JOIN PARA2 D(NOLOCK) ON D.PARA2_NAME = B.PARA2_NAME  AND ISNULL(D.INACTIVE,0)=0  
					LEFT OUTER JOIN PARA3 E(NOLOCK) ON E.PARA3_NAME = B.PARA3_NAME  AND ISNULL(E.INACTIVE,0)=0 
					LEFT OUTER JOIN PARA4 F(NOLOCK) ON F.PARA4_NAME = B.PARA4_NAME  AND ISNULL(F.INACTIVE,0)=0 
					LEFT OUTER JOIN PARA5 G(NOLOCK) ON G.PARA5_NAME = B.PARA5_NAME  AND ISNULL(G.INACTIVE,0)=0
					LEFT OUTER JOIN PARA6 H(NOLOCK) ON H.PARA6_NAME = B.PARA6_NAME  AND ISNULL(H.INACTIVE,0)=0
					LEFT OUTER JOIN FORM I(NOLOCK) ON I.FORM_NAME = B.FORM_NAME '      
		PRINT @CCMD        
		EXEC SP_EXECUTESQL @CCMD     
		
		DROP TABLE #TMPMASTERSENC  
	END   


	  	
	
	IF @NUPDATEMODE = 3			
	BEGIN
		SET @cSTEP = 12  
		EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1
			
		IF @CXNMEMOID=''
		BEGIN
			SET @CERRORMSG='MEMO ID REQUIRED FOR CANCELLATION........CANNOT PROCEED'
			GOTO END_PROC
		END
			
		-- UPDATING SENTTOHO FLAG 
		--CHNAGE BY BAIJNATH pq_FOR_DEPT_ID
		SET @CCMD = N' UPDATE ' + @CMASTERTABLENAME + ' SET CANCELLED = 1,SENT_TO_HO=0,LAST_UPDATE=GETDATE() 
								, pq_FOR_DEPT_ID=(CASE WHEN ISNULL(pq_FOR_DEPT_ID,'''')='''' THEN location_code ELSE pq_FOR_DEPT_ID END ) ' + 
					N' WHERE ' + @CKEYFIELD1 + ' = ''' + @CXNMEMOID + ''''
		EXEC SP_EXECUTESQL @CCMD

		SET @cSTEP = 15  
		EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1			
		--14 Dec 2018 : Audit
		EXEC SP3S_CAPTURE_AUDIT_TRAIL 'PQ',@CXNMEMOID,@CTEMPMASTERTABLE,@CTEMPDETAILTABLE1,@NSPID,@CMACHINENAME,@CWINDOWUSERNAME,@CWIZAPPUSERCODE,1,'1900-01-01',@EDIT_CLICKED
			
		SET @CKEYFIELDVAL1=@CXNMEMOID
	
		GOTO END_PROC
	END
		
	SET @cSTEP = 25  
	EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1
		
	SET @cSTEP = 30  
	EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1
		
	-- START UPDATING XN TABLES	
	IF @NUPDATEMODE = 1 -- ADDMODE	
	BEGIN

		SET @cSTEP = 35  
		EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1

		SET @CMEMONOPREFIX=@CLOCATIONID+'-'

		SET @NMEMONOLEN	= 10
		
		
		

		IF LEFT(LTRIM(RTRIM(ISNULL(@CKEYFIELDVAL1,'LATER'))),5) = 'LATER'
		BEGIN
			-- GENERATING NEW MRR_NO		
			SET @NSAVETRANLOOP=0
			WHILE @NSAVETRANLOOP=0
			BEGIN
				SET @cSTEP = 40  
				EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1
				EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,
								@CFINYEAR,0, @CMEMONOVAL OUTPUT
									
							
				SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+' (nolock) 
										WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' 
										AND FIN_YEAR = '''+@CFINYEAR+''' )
								SET @NLOOPOUTPUT=0
							ELSE
								SET @NLOOPOUTPUT=1'
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
			END

			IF ISNULL(@CMEMONOVAL,'')=''  OR @CMEMONOVAL LIKE '%LATER%'
			BEGIN
					SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cSTEP)) + ' ERROR CREATING NEXT MEMO NO....'	
					-- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'
					GOTO END_PROC  		
			END

			SET @cSTEP = 45		-- GENERATING NEW ID

			EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1

			-- GENERATING NEW PQ ID
			SET @CKEYFIELDVAL1 = @CLOCATIONID + RIGHT(@CFINYEAR,2)+REPLICATE('0', (22-LEN(@CLOCATIONID + RIGHT(@CFINYEAR,2)))-LEN(LTRIM(RTRIM(@CMEMONOVAL))))  + LTRIM(RTRIM(@CMEMONOVAL))
			
			IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
			BEGIN
					SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
					GOTO END_PROC
			END
				
			SET @cSTEP = 50		-- UPDATING NEW ID INTO TEMP TABLES
					EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1
			-- UPDATING NEWLY GENERATED PQ NO AND PQ ID IN PQM AND PQD TEMP TABLES
			SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' WITH (ROWLOCK) SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' + 
						@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' where  SP_ID='''+LTRIM(RTRIM((@NSPID)))+''''
			EXEC SP_EXECUTESQL @CCMD

			SET @cSTEP = 55  
			EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1			
			SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE1 + ' WITH (ROWLOCK) SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' where SP_ID='''+LTRIM(RTRIM((@NSPID)))+''''
			EXEC SP_EXECUTESQL @CCMD

		END

	END					-- END OF ADDMODE
	ELSE				-- CALLED FROM EDITMODE
	BEGIN				-- START OF EDITMODE
		

		SET @cSTEP = 65		-- UPDATING Last_update TEMP TABLE

		EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1
			
		-- UPDATING SENTTOHO FLAG
		SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' WITH (ROWLOCK) SET LAST_UPDATE=GETDATE()  WHERE SP_ID='''+LTRIM(RTRIM((@NSPID)))+''''
		EXEC SP_EXECUTESQL @CCMD

	
	    UPDATE A SET pq_ID=@CXNMEMOID FROM PQ_QUOTATION_det_UPLOAD A (NOLOCK) WHERE pq_ID IN('','LATER') AND SP_ID=@NSPID

      
				
	END					-- END OF EDITMODE


	
	SET @cSTEP = 65.2		-- UPDATING TRANSACTION TABLE
	EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1


	SET @cSTEP = 65.4		-- UPDATING TRANSACTION TABLE
	EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1



	--	MD_PERCENTAGE=CASE MRP WHEN 0 THEN 0 ELSE ROUND(((MRP-PURCHASE_PRICE)/MRP)*100,2) END,
	--MP_PERCENTAGE=CASE PURCHASE_PRICE WHEN 0 THEN 0 ELSE ROUND(((MRP-PURCHASE_PRICE)/PURCHASE_PRICE)*100,2) END

	SET @cSTEP = 66.4		-- GETTING ID INFO FROM TEMP TABLE
	EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1

	EXEC SP3S_CALTOTALS_PURCHASE_QUOTATION
	@nUpdatemode=@NUPDATEMODE,
	@nSpId=@NSPID,
	@CERRORMSG=@CERRORMSG OUTPUT,
	@CLOCID=@CLOCID

	
	IF ISNULL(@CERRORMSG,'')<>''
		GOTO END_PROC

	
	-- UPDATING TRANSACTION TABLE (PID01106) FROM TEMP TABLE
	SET @cSTEP = 80		-- UPDATING TRANSACTION TABLE

	EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1
		-- UPDATING ROW_ID IN TEMP TABLES
	SET @CCMD = N'UPDATE a SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(40), NEWID())
			        from ' + @CTEMPDETAILTABLE1 + ' a (nolock)
					WHERE SP_ID='''+LTRIM(RTRIM((@NSPID)))+''' AND LEFT(ROW_ID,5) = ''LATER'' '
	EXEC SP_EXECUTESQL @CCMD
			
	SET @cSTEP = 80.2		-- UPDATING TRANSACTION TABLE

	EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1

	IF EXISTS (SELECT TOP 1 pq_id FROM PQ_QUOTATION_det_UPLOAD (NOLOCK) WHERE SP_ID=@nSpId AND article_code='')
		DELETE FROM PQ_QUOTATION_det_UPLOAD WITH (ROWLOCK) WHERE SP_ID=@nSpId AND article_code=''
				
	if @NUPDATEMODE=2
	begin
		-- DELETING EXISTING ENTRIES FROM PID01106 TABLE WHERE ROW_ID NOT FOUND IN TEMPTABLE
		SET @cSTEP = 84.5		-- UPDATING TRANSACTION TABLE - DELETING EXISTING ENTRIES
		EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1

		SELECT TOP 1 @cMissingRowId=a.row_id FROM QUOTATION_det A (NOLOCK) 
		LEFT JOIN 
		(SELECT row_id FROM PQ_QUOTATION_det_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId) b
			ON A.row_ID =B.row_ID WHERE A.pq_id =@CKEYFIELDVAL1 AND b.row_id IS NULL

		IF ISNULL(@cMissingRowId,'')<>''
		BEGIN		
			SET @CSTEP=85.5
			EXEC SP_CHKXNSAVELOG 'WSL',@CSTEP,0,@CKEYFIELDVAL1,'',1
			
			DELETE A FROM QUOTATION_det A (NOLOCK) LEFT JOIN 
			(SELECT row_id FROM PQ_QUOTATION_det_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId) b
			ON A.row_ID =B.row_ID WHERE A.pq_id =@CKEYFIELDVAL1 AND b.row_id IS NULL

		END
	
		-- UPDATING MASTER TABLE (PIM01106) FROM TEMP TABLE
		SET @cSTEP = 73		-- GETTING ID INFO FROM TEMP TABLE
		EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1
		
		IF EXISTS (SELECT TOP 1 tablename FROM savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nSPID)
			DELETE FROM savetran_updcols_updatestr WITH (ROWLOCK) WHERE sp_id=@nSPID

		INSERT savetran_updcols_updatestr (sp_id,tablename,updatestr)
		SELECT @nSPID as sp_id,tablename,'' from mirrorxnsinfo (NOLOCK)
		WHERE tablename IN ('QUOTATION_mst','QUOTATION_det')

		

	END

	SET @cSTEP = 75.2		-- GETTING ID INFO FROM TEMP TABLE
	EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1

	DECLARE @LINSERTONLY BIT,@lUpdatexns bIt 
	SET @LINSERTONLY=0
	SET @lUpdatexns=0
	if  @NUPDATEMODE=1
		SELECT @LINSERTONLY=1,@lUpdatexns=1

	DECLARE @CWHERECLAUSE VARCHAR(1000)
    SET @CWHERECLAUSE = ' SP_ID='''+LTRIM(RTRIM((@NSPID)))+''''

	SET @cSTEP = 75.4		-- GETTING ID INFO FROM TEMP TABLE
	EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1

	SELECT @LUPDATEONLY=0,@cUpdatestr=''

	IF @NUPDATEMODE=2
	BEGIN
		SELECT @cUpdatestr=updatestr FROM savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@NSPID AND tablename='QUOTATION_mst'
		SET @LUPDATEONLY = 1
	END

	SET @cSTEP = 76.2		-- GETTING ID INFO FROM TEMP TABLE
	EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1
	print 'Start inserting QUOTATION_mst'
	EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN 
		  @CSOURCEDB	= @CTEMPDBNAME
		, @CSOURCETABLE = @CTEMPMASTERTABLENAME
		, @CDESTDB		= ''
		, @CDESTTABLE	= @CMASTERTABLENAME
		, @CKEYFIELD1	= @CKEYFIELD1
		, @BALWAYSUPDATE = 1
		,@LINSERTONLY=@LINSERTONLY
		,@CFILTERCONDITION=@CWHERECLAUSE
		,@lUpdatexns=@lUpdatexns
		,@LUPDATEONLY=@LUPDATEONLY
		,@cUpdatestrPara=@cUpdatestr
		,@bThruUpdatestrPara=1 
			


	-- INSERTING/UPDATING THE ENTRIES IN PID01106 TABLE FROM TEMPTABLE
	SET @cSTEP = 100		-- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES

	EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1


	   
	SET @cSTEP = 177.6
	EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1

	SElect @LUPDATEONLY=0,@cUpdatestr=''
	IF @NUPDATEMODE=2
	BEGIN
		SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@NSPID AND  tablename='QUOTATION_det'
		
		SELECT TOP 1 @cMissingRowId=b.row_id FROM 
		(SELECT row_id  FROM PQ_QUOTATION_det_UPLOAD (NOLOCK) WHERE SP_id=(LEFT(@nSpId,38)+LEFT(@CKEYFIELDVAL1,2))) A
		RIGHT OUTER JOIN 
		(SELECT row_id FROM PQ_QUOTATION_det_UPLOAD (NOLOCK) WHERE SP_id=@nSPId) b ON 
		a.row_id=b.row_id WHERE a.row_id IS NULL

		--if @@spid=173
		--	SELECT 'check @cMissingRowId of PQd',@cMissingRowId

		IF ISNULL(@cMissingRowId,'')='' 
			SET @lUpdateonly=1
	END

	SET @cSTEP = 177.8
	EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1

	
	print 'Start inserting QUOTATION_det'

	EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN 
		  @CSOURCEDB	= @CTEMPDBNAME
		, @CSOURCETABLE = @CTEMPDETAILTABLENAME1
		, @CDESTDB		= ''
		, @CDESTTABLE	= @CDETAILTABLENAME1
		, @CKEYFIELD1	= 'ROW_ID'
		, @BALWAYSUPDATE = 1
		, @LINSERTONLY=@LINSERTONLY
		, @CFILTERCONDITION=@CWHERECLAUSE
		, @lUpdatexns=@lUpdatexns
		, @LUPDATEONLY=@LUPDATEONLY
		,@cUpdatestrPara=@cUpdatestr
		,@bThruUpdatestrPara=1 




		--if change supplier in PQ ac_code auto change in pim & sku if Purchase is available changes according to ved ji (mbkb) 20-10-2021

	
	GOTO END_PROC

LBLAPPROVEPQ:


	SET @cSTEP=265
	EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1
	IF @CXNMEMOID=''
	BEGIN
		SET @CERRORMSG='MEMO ID REQUIRED FOR APPROVAL......CANNOT PROCEED'
		GOTO END_PROC
	END
		
	IF @IMAXLEVEL>0
	BEGIN
		SET @CERRORMSG='YOU CAN''T APPQRVED PQ FROM HERE,PLZ APPROVED FROM TRANSCATION APPROVEL PAGE'
		GOTO END_PROC
	END
	

	SET @cSTEP=270
	EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1
	DECLARE @NAPPROVALSTATUS NUMERIC(1,0)
		
		-- direct approval Removed from PQ
		
	--IF ISNULL(@CENABLEMULTILEVELAPPROVAL,'')<>'1'		
	--BEGIN
	--	IF @CLOCATIONID<>@CHODEPTID
	--	BEGIN
	--		SELECT @NAPPROVALSTATUS=APPROVED FROM QUOTATION_mst (NOLOCK) WHERE pq_ID=@CXNMEMOID
				
			
				
	--		IF @NAPPROVALSTATUS<>0
	--			BEGIN
					
	--				SET @cSTEP=275
	--				EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1
	--				IF @NAPPROVALSTATUS=1
	--					UPDATE QUOTATION_mst SET  LAST_UPDATE=GETDATE() WHERE pq_ID=@CXNMEMOID
	--				ELSE 
	--					SET @CERRORMSG='PURCHASE ORDER IS ALREADY '+(CASE WHEN @NAPPROVALSTATUS=1 THEN ' MARKED FOR REQUEST OF APPROVAL FROM HO ' 
	--								WHEN @NAPPROVALSTATUS=2 THEN 'APPROVED BY HO' ELSE 'DISAPPROVED BY HO' END)
	--			END
	--		ELSE
	--			BEGIN
					
	--				SET @cSTEP=280
	--				EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1
					
	--				UPDATE QUOTATION_mst SET  APPROVED=(CASE WHEN @NAPPROVEMODE=2 THEN 1 ELSE APPROVED END),LAST_UPDATE=GETDATE()
	--					WHERE pq_ID=@CXNMEMOID --CHANGES BY DINKAR 1.8.2015
	--				--UPDATE QUOTATION_mst SET  LAST_UPDATE=GETDATE() WHERE pq_ID=@CXNMEMOID
	--			END
						
			
	--	END	
	-- 	ELSE
	-- 	BEGIN

	--		SET @cSTEP=285
	--		EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1
				
	--		UPDATE QUOTATION_mst SET  APPROVED=(CASE WHEN @NAPPROVEMODE=1 THEN 2 ELSE 3 END),LAST_UPDATE=GETDATE()

	--		WHERE pq_ID=@CXNMEMOID
				
				
	--		SET @cSTEP = 290
	--		EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1				
		
	--		INSERT XN_APPROVAL_DET	( XN_TYPE, XN_ID, APPROVED_BY_USER_CODE, APPROVED_ON, APPROVED_BY_USER_IP,
	--			APPROVED_BY_USER_COMPUTERNAME,APPROVED_BY_WINDOWUSER_NAME,APPROVED )  
				 
	--			SELECT 'XNSPQ' AS XN_TYPE,@CXNMEMOID AS XN_ID,
	--			@CWIZAPPUSERCODE AS APPROVED_BY_USER_CODE,GETDATE() AS APPROVED_ON,
	--			@CCOMPUTERIP AS APPROVED_BY_USER_IP,@CMACHINENAME AS APPROVED_BY_USER_COMPUTERNAME,
	--			@CWINDOWUSERNAME AS APPROVED_BY_WINDOWUSER_NAME,@NAPPROVEMODE AS APPROVED
				 
	--	END
	--END
				
				
						
 	SET @CKEYFIELDVAL1=@CXNMEMOID


		
	GOTO END_PROC
		
		
END TRY
BEGIN CATCH
	SET @CERRORMSG = 'Error in Savetran_Purchase_quotation at STEP#' + @cSTEP + ' SQL ERROR: #' + LTRIM(RTRIM(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
				
	GOTO END_PROC
END CATCH
	
END_PROC:
	
	UPDATE QUOTATION_mst WITH (ROWLOCk) SET last_update=getdate(),HO_SYNCH_LAST_UPDATE ='' WHERE pq_id=@CKEYFIELDVAL1

	SET @cSTEP=295
	EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1	
		

	

	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')=''
		BEGIN
			commit TRANSACTION
			  DELETE A  FROM XNTYPE_CHECKSUM_MST A  WITH (ROWLOCK)  WHERE SP_ID=@NSPID
		   

		END
		ELSE
		begin
			ROLLBACK
			  DELETE A  FROM XNTYPE_CHECKSUM_MST A  WITH (ROWLOCK)  WHERE SP_ID=@NSPID
	    end 
	END

	SET @cSTEP=296.2

	EXEC SP_CHKXNSAVELOG 'PQ',@cSTEP,0,@NSPID,'',1

	DECLARE @nInsSpId VARCHAR(45)
	SET @nInsSpId=LEFT(@nSpId,38)+@cLOcationId

	DELETE FROM PQ_QUOTATION_det_UPLOAD   WHERE SP_ID IN (@NSPID,@nInsSpId)
	DELETE FROM PQ_QUOTATION_MST_UPLOAD   WHERE SP_ID IN (@NSPID,@nInsSpId)
	DELETE A FROM XNTYPE_CHECKSUM_MST A(NOLOCK) WHERE SP_ID =@nSpId

    SET @cSTEP=300


	INSERT @OUTPUT ( ERRMSG, MEMO_ID)
			VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )

	SELECT * FROM @OUTPUT	
	
	--SET @COL='IF OBJECT_ID(''TEMPDB..##POM_'+@NSPID +'_'+@CXNMEMOID+''',''U'') IS NOT NULL'+CHAR(13)+' DROP TABLE [##POM_'+@NSPID +'_'+@CXNMEMOID+'];
	--          IF OBJECT_ID(''TEMPDB..##POD_'+@NSPID +'_'+@CXNMEMOID+''',''U'') IS NOT NULL'+CHAR(13)+' DROP TABLE [##POD_'+@NSPID +'_'+@CXNMEMOID+'];'
	--EXEC(@COL)	


END						-- END OF SAVETRAN_PURCHASE_QUOTATION
------------------------------------------------------END OF PROCEDURE SAVETRAN_QUOTATION
