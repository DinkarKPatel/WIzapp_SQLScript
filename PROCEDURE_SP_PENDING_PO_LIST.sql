CREATE PROCEDURE SP_PENDING_PO_LIST
(
 @NMODE INT,
 @CWHERE VARCHAR(100)='',
 @CCURDEPTID varchar(4)=''

)
AS
BEGIN
    --(dinkar) Replace  left(memoid,2) to Location_code        

		   DECLARE @NLEVEL NUMERIC(5,0)

		   IF @CCURDEPTID=''
		   SELECT @CCURDEPTID=VALUE  FROM CONFIG WHERE CONFIG_OPTION ='HO_LOCATION_ID'

           	SELECT @NLEVEL=B.LEVEL_NO  FROM XN_APPROVAL_CHECKLIST_LEVEL_USERS A         
			JOIN XN_APPROVAL_CHECKLIST_LEVELS B ON  B.LEVEL_NO=A.LEVEL_NO AND A.LEVEL_CODE=B.LEVEL_CODE AND B.XN_TYPE=A.XN_TYPE        
			WHERE USER_CODE=@CWHERE AND A.XN_TYPE='PO'  AND A.DEPT_ID=@CCURDEPTID 
	
  
IF @NMODE=1
   GOTO LBLPENDINPO
ELSE IF @NMODE=2
   GOTO LBLUPDATEPO
ELSE
   GOTO END_PROC 
  
  LBLPENDINPO:  
  
  SELECT A.PO_NO,A.PO_DT,A.PO_ID,C.AC_NAME,  
    TOTAL_AMOUNT ,SUM(B.QUANTITY) AS  QUANTITY 
    ,PO_FOR_DEPT_ID,a.terms 
    FROM POM01106 A (NOLOCK)  
    JOIN POD01106 B (NOLOCK) ON A.PO_ID=B.PO_ID  
    JOIN LM01106 C (NOLOCK) ON A.AC_CODE=C.AC_CODE 
    WHERE A.CANCELLED =0  
	 AND ISNULL(A.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
   -- AND A.APPROVED IN (0,1)  (AS PER ALOK only call in wizmd)
   -- AND (@CWHERE='' OR A.AC_CODE=@CWHERE)  
    GROUP BY PO_NO,PO_DT,TOTAL_AMOUNT,A.PO_ID,C.AC_NAME ,PO_FOR_DEPT_ID,
     A.TERMS
    
   GOTO END_PROC
   
   
   LBLUPDATEPO:
   
     UPDATE POM01106 SET APPROVED=2 ,ApprovedLevelNo=99 WHERE  PO_ID=@CWHERE 
   
   GOTO END_PROC
   
   
 
 END_PROC:  
END
