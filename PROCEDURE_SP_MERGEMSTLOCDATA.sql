create PROCEDURE SP_MERGEMSTLOCDATA  
(  
 @NSPID INT  
)  
--WITH ENCRYPTION
AS  
BEGIN  
   --(dinkar) Replace  left(memoid,2) to Location_code 
  
	  DECLARE @CERRORMSG VARCHAR(1000),@CCURDEPTID CHAR(4),@CHODEPTID CHAR(4),@CCMD NVARCHAR(MAX),  
		@CXNMASTERTABLENAME VARCHAR(100),@BPROCEED BIT,@CTABLENAME VARCHAR(100),@CMASTERKEYFIELD VARCHAR(100),  
		@CKEYFIELD VARCHAR(100),@CPARENTTABLENAME VARCHAR(100),@CPARENTPARANAME VARCHAR(100),@CCHILDPARANAME VARCHAR(100),  
		@CWHERECLAUSE VARCHAR(100),@CJOINSTR VARCHAR(1000),@CMEMOID VARCHAR(100),@CFINYEAR VARCHAR(100),  
		@NGRPCHARS INT,@NSERIESCHARS INT,@BSERIESBROKEN BIT,@CPREVMEMOID VARCHAR(40),@CMERGETABLENAME VARCHAR(50),  
		@CFIRSTMEMOID VARCHAR(40),@NPREVMEMOID INT,@NMEMONOLEN INT,@CRETCMD NVARCHAR(MAX),  
		@CDELCHILDTABLENAME VARCHAR(100),@CDELCHILDPARANAME VARCHAR(100),@CDELPARENTPARANAME VARCHAR(100),  
		@CORIGINALTABLENAME VARCHAR(100),@NLOCTYPE INT,@BDONOTMERGE BIT,@CRFXNTYPE VARCHAR(10),@BHOLOC BIT,  
		@BINSERTONLY BIT,@BLINKEDMASTER BIT,@BPURLOC BIT,@CSOURCELOCID CHAR(4),@BSOURCEPURLOC BIT,  
		@CMISSINGMEMOID VARCHAR(40),@CGRPCODE VARCHAR(20),@BRETVAL BIT,@NPREVNO INT,@CPREVNO VARCHAR(20),  
		@BEMPHEADSUPDATED BIT,@CFILTERCONDITION VARCHAR(100),@CTABLEPREFIX VARCHAR(100),@CXNTYPE VARCHAR(10),  
		@BUPDPURINFO BIT,@CUNQCOLUMNNAME1 VARCHAR(100),@CUNQCOLUMNNAME2 VARCHAR(100),@NXNSMERGINGORDER INT,  
		@BLOCDATAEXISTS BIT,@NSTEP INT,@CTEMPLMTABLE VARCHAR(100),@CTEMPHDTABLE VARCHAR(100),@CTEMPREGIONTABLE VARCHAR(100),
		@CTEMPAREATABLE VARCHAR(100),@CTEMPCITYTABLE VARCHAR(100),@CTEMPSTATETABLE VARCHAR(100),@CSTATECODE CHAR(7),
		@CTEMPLMPTABLE VARCHAR(100),@CTEMPSMTABLE VARCHAR(100),@CTEMPSDTABLE VARCHAR(100),@CTEMPLOCTABLE VARCHAR(100),
		@BTILLENABLED BIT,@BMIRRORINGENABLED BIT,@CLOCMERGINGTHRUWIZCOM VARCHAR(2)		  
	    

	  SET @NSTEP = 5
	           
	  SELECT @CCURDEPTID = VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='LOCATION_ID'  
	  SELECT @CHODEPTID = VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='HO_LOCATION_ID'    

	  IF EXISTS (SELECT TOP 1 CONFIG_OPTION FROM CONFIG WHERE 
				   CONFIG_OPTION='MIRROR_SERVER_IP' AND VALUE<>'')
			SET @BMIRRORINGENABLED=1
	  ELSE
			SET @BMIRRORINGENABLED=0

	  IF @BMIRRORINGENABLED=1
	  BEGIN
			SET @CERRORMSG='LOCATION MASTER MERGING SHIFTED TO MIRRORSERVICE....'
			GOTO LBLLAST
	  END
	   
	    
    
	  SET @NSTEP = 10  
	  DECLARE @TRETMSG TABLE  (MEMO_ID VARCHAR(40),ERRMSG VARCHAR(MAX))  
	   
	  BEGIN TRY  
	       
	  SELECT @CERRORMSG='',@BPROCEED=1,@NMEMONOLEN=10,@CRETCMD='',@CMEMOID='',@CXNTYPE='MSTLOC',@BEMPHEADSUPDATED=0  
	    
	  SET @CTABLEPREFIX='TMP_MSTLOC' 
	    
	  SET @NSTEP = 20  
	    
	  SET @CCMD=N'IF OBJECT_ID(''TMP_MSTLOC_LOCATION_'+LTRIM(RTRIM(STR(@NSPID)))+''',''U'') IS NOT NULL  
		  SELECT @BLOCDATAEXISTSOUT=1   
		 ELSE  
		  SELECT @BLOCDATAEXISTSOUT=0'  
	  EXEC SP_EXECUTESQL @CCMD,N'@BLOCDATAEXISTSOUT BIT OUTPUT',@BLOCDATAEXISTSOUT=@BLOCDATAEXISTS OUTPUT  

	  
	    
	  IF @BLOCDATAEXISTS=0  
	  BEGIN  
	   SET @NSTEP = 23  
	     
	   SET @CERRORMSG='NO LOCATION DATA FOUND TO BE MERGED'  
	   GOTO LBLLAST  
	  END  
	  
 
	    
	  SET @NSTEP = 30    

	  SET @CCMD=N'SELECT @BTILLENABLED=TILL_ENABLED FROM TMP_MSTLOC_LOCATION_'+LTRIM(RTRIM(STR(@NSPID)))+'
				  WHERE DEPT_ID='''+@CCURDEPTID+''''
				  	
	  EXEC SP_EXECUTESQL @CCMD,N'@BTILLENABLED BIT OUTPUT',@BTILLENABLED  OUTPUT
	  	    
	  SELECT @NLOCTYPE=LOC_TYPE,@BPURLOC=PUR_LOC FROM LOCATION WHERE DEPT_ID=@CCURDEPTID  
	    
	      
	  SELECT TOP 1 @CXNMASTERTABLENAME=TABLENAME,@CMASTERKEYFIELD=KEYFIELD FROM XNSINFO (NOLOCK) WHERE XN_TYPE=@CXNTYPE  
	  AND XNS_MERGING_ORDER NOT IN (0,99)  ORDER BY XNS_SENDING_ORDER  
	    
	  SET @NSTEP = 40  
	    
	  SET @CXNMASTERTABLENAME=ISNULL(@CXNMASTERTABLENAME,'')  
	    
	  SET @CMEMOID='MSTLOC'  
	    

LBLDELENTRIES:	
	  
	  SET @NSTEP = 50
	  	    
   	  DELETE FROM LOCSSTADD  WITH (ROWLOCK)
	  DELETE FROM LOCSST  WITH (ROWLOCK)
	  DELETE FROM LOCSST_MST  WITH (ROWLOCK)
	  DELETE FROM LOC_SALE_TARGET WITH (ROWLOCK)
	  DELETE FROM CATGRPDET WITH (ROWLOCK)
	  DELETE FROM CATGRPMST WITH (ROWLOCK)
	  DELETE FROM SALECONTRIBUTIONDATA WITH (ROWLOCK)
	  DELETE FROM AGENCY_JOBS WITH (ROWLOCK)
	  DELETE FROM LOC_REQ WITH (ROWLOCK)
	  DELETE FROM BIN_LOC WITH (ROWLOCK)
	  DELETE FROM LOC_BILLING_RULES WITH (ROWLOCK)--NEW ADD UNMERGED DATE: 06-05-2014
	  DELETE FROM LOC_BILLING_RULES_FORM WITH (ROWLOCK)--NEW ADD UNMERGED DATE: 06-05-2014
	  DELETE FROM LOC_BILLING_RULES_SERIES WITH (ROWLOCK)--NEW ADD UNMERGED DATE: 06-05-2014
	  DELETE FROM  BWD_DET WITH (ROWLOCK)--NEW ADD UNMERGED DATE: 09-05-2014
	  DELETE FROM  BWD_MST WITH (ROWLOCK)--NEW ADD UNMERGED DATE: 09-05-2014
	  DELETE FROM  MONTHLYBUDGET WITH (ROWLOCK)
	  DELETE FROM  MONTHLYBUDGET_HEAD WITH (ROWLOCK)
	  DELETE FROM PETTY_CASH_AC WITH (ROWLOCK)
	  
      DELETE  FROM LOC_SPACE_DET WITH (ROWLOCK)
	  DELETE  FROM LOC_SPACE_MST WITH (ROWLOCK) 
	  DELETE  FROM SALEPERSON_TARGET_SUBDET WITH (ROWLOCK) 
	  DELETE  FROM SALEPERSON_TARGET_DET WITH (ROWLOCK)
	  DELETE  FROM SALEPERSON_TARGET_MST WITH (ROWLOCK)
	  DELETE  FROM SEASON_MST  WITH (ROWLOCK)
	  DELETE  FROM LOC_STOCK_LEVEL_DET WITH (ROWLOCK)
	  DELETE  FROM LOC_STOCK_LEVEL_MST WITH (ROWLOCK)
	  
	  DELETE FROM GV_SCHEME_LOCS WITH (ROWLOCK)
	  DELETE FROM GV_SCHEME_1 WITH (ROWLOCK)
	  DELETE FROM GV_SCHEME_MST WITH (ROWLOCK)
	   	
	  DELETE FROM XN_APPROVAL_CHECKLIST_LEVEL_USERS	WITH (ROWLOCK) 	
	  DELETE FROM XN_APPROVAL_CHECKLIST_LEVEL_DETAILS WITH (ROWLOCK)	 	
	  DELETE FROM XN_APPROVAL_CHECKLIST_LEVELS WITH (ROWLOCK)	 	
	  DELETE FROM XN_APPROVAL_CHECKLIST_MST	WITH (ROWLOCK) 
	  
	  --ADD UDRF REPORT 
	  
	DELETE A 
	FROM PRINTLOCATION A WITH (ROWLOCK)
	JOIN PRINTMASTER B (NOLOCK) ON A.PRINTID=B.PRINTID
	WHERE B.REFPRINTID<>A.PRINTID
	
	DELETE A 
	FROM PRINTHEADER A WITH (ROWLOCK)
	JOIN PRINTMASTER B (NOLOCK) ON A.PRINTID=B.PRINTID
	WHERE B.REFPRINTID<>A.PRINTID
	
	DELETE A 
	FROM PRINTDESCRIPTION A WITH (ROWLOCK)
	JOIN PRINTMASTER B (NOLOCK) ON A.PRINTID=B.PRINTID
	WHERE B.REFPRINTID<>A.PRINTID
    
    DELETE A 
    FROM PRINTDETAIL A WITH (ROWLOCK) 
	JOIN PRINTMASTER B (NOLOCK) ON A.PRINTID=B.PRINTID
	WHERE B.REFPRINTID<>A.PRINTID
	
    DELETE FROM PRINTMASTER WITH (ROWLOCK) WHERE REFPRINTID<>PRINTID
    
    DELETE FROM ITEMSEARCH_COL_DET WITH (ROWLOCK)
    
    
  IF OBJECT_ID('TMP_MSTLOC_REP_MST_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
  BEGIN
       SET @CCMD=N'DELETE A FROM REP_FILTER_DET A WITH (ROWLOCK)
				   JOIN  TMP_MSTLOC_REP_MST_'+LTRIM(RTRIM(STR(@NSPID)))+' B (NOLOCK) ON A.REP_ID=B.REP_ID'
	   EXEC SP_EXECUTESQL @CCMD
	   
	   SET @CCMD=N'DELETE A FROM REP_FILTER A WITH (ROWLOCK)
				   JOIN  TMP_MSTLOC_REP_MST_'+LTRIM(RTRIM(STR(@NSPID)))+' B (NOLOCK) ON A.REP_ID=B.REP_ID'
	   EXEC SP_EXECUTESQL @CCMD
	   
	    
	   SET @CCMD=N'DELETE A FROM REP_DET A WITH (ROWLOCK)
				   JOIN  TMP_MSTLOC_REP_MST_'+LTRIM(RTRIM(STR(@NSPID)))+' B (NOLOCK) ON A.REP_ID=B.REP_ID'
	   EXEC SP_EXECUTESQL @CCMD
	   
	   SET @CCMD=N'DELETE A FROM REP_CRM A WITH (ROWLOCK)
				   JOIN  TMP_MSTLOC_REP_MST_'+LTRIM(RTRIM(STR(@NSPID)))+' B (NOLOCK) ON A.REP_ID=B.REP_ID'
	   EXEC SP_EXECUTESQL @CCMD
	   
	   SET @CCMD=N'DELETE A FROM REP_SCH A WITH (ROWLOCK)
				   JOIN  TMP_MSTLOC_REP_MST_'+LTRIM(RTRIM(STR(@NSPID)))+' B (NOLOCK) ON A.REP_ID=B.REP_ID'
	   EXEC SP_EXECUTESQL @CCMD
	   
       SET @CCMD=N'DELETE A FROM REP_MST A WITH (ROWLOCK)
				   JOIN  TMP_MSTLOC_REP_MST_'+LTRIM(RTRIM(STR(@NSPID)))+' B (NOLOCK) ON A.REP_ID=B.REP_ID'
	   EXEC SP_EXECUTESQL @CCMD
  END
  
  
    
    ---------CHANGES----
 IF OBJECT_ID('TMP_MSTLOC_PRINTLOCATION_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
  BEGIN
	    SET @NSTEP=900
		SET @CCMD=N'DELETE FROM TMP_MSTLOC_PRINTLOCATION_'+LTRIM(RTRIM(STR(@NSPID)))+' WITH (ROWLOCK) WHERE DEPTID<>'''+@CCURDEPTID+''''
		EXEC SP_EXECUTESQL @CCMD
		
	  IF OBJECT_ID('TMP_MSTLOC_PRINTHEADER_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
	     SET @NSTEP=910
	     SET @CCMD=N'DELETE A FROM TMP_MSTLOC_PRINTHEADER_'+LTRIM(RTRIM(STR(@NSPID)))+' A WITH (ROWLOCK)
					LEFT JOIN  TMP_MSTLOC_PRINTLOCATION_'+LTRIM(RTRIM(STR(@NSPID)))+' B (NOLOCK) ON A.PRINTID=B.PRINTID
					WHERE B.PRINTID IS NULL'
		 EXEC SP_EXECUTESQL @CCMD
	  
	  END
	  
	  IF OBJECT_ID('TMP_MSTLOC_PRINTDESCRIPTION_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
	    SET @NSTEP=920
	    SET @CCMD=N'DELETE A FROM TMP_MSTLOC_PRINTDESCRIPTION_'+LTRIM(RTRIM(STR(@NSPID)))+' A WITH (ROWLOCK)
					LEFT JOIN  TMP_MSTLOC_PRINTLOCATION_'+LTRIM(RTRIM(STR(@NSPID)))+' B (NOLOCK) ON A.PRINTID=B.PRINTID
					WHERE B.PRINTID IS NULL'
		EXEC SP_EXECUTESQL @CCMD
	  
	  END
	  IF OBJECT_ID('TMP_MSTLOC_PRINTDETAIL_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
	     
	     SET @NSTEP=930
	     SET @CCMD=N'DELETE A FROM TMP_MSTLOC_PRINTDETAIL_'+LTRIM(RTRIM(STR(@NSPID)))+' A
					LEFT JOIN  TMP_MSTLOC_PRINTLOCATION_'+LTRIM(RTRIM(STR(@NSPID)))+' B ON A.PRINTID=B.PRINTID
					WHERE B.PRINTID IS NULL'
		 EXEC SP_EXECUTESQL @CCMD
	     
	  END
	  
	 IF OBJECT_ID('TMP_MSTLOC_PRINTMASTER_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		SET @NSTEP=940
		SET @CCMD=N'DELETE A FROM TMP_MSTLOC_PRINTMASTER_'+LTRIM(RTRIM(STR(@NSPID)))+' A
					LEFT JOIN  TMP_MSTLOC_PRINTLOCATION_'+LTRIM(RTRIM(STR(@NSPID)))+' B ON A.PRINTID=B.PRINTID
					WHERE B.PRINTID IS NULL'
		EXEC SP_EXECUTESQL @CCMD
	  END
	  
	  IF OBJECT_ID('TMP_MSTLOC_REPORTS_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
	   SET @NSTEP=950   
	   SET @CCMD=N'DELETE A FROM TMP_MSTLOC_REPORTS_'+LTRIM(RTRIM(STR(@NSPID)))+' A
					LEFT JOIN  TMP_MSTLOC_PRINTLOCATION_'+LTRIM(RTRIM(STR(@NSPID)))+' B 
					ON SUBSTRING(REPLACE(A.G_REPORT_FILE,''.RDLC'',''''),4,LEN(REPLACE(A.G_REPORT_FILE,''.RDLC'','''')))=B.PRINTID
					WHERE B.PRINTID IS NULL'
		EXEC SP_EXECUTESQL @CCMD
		
		SET @NSTEP=960
		SET @CCMD=N'UPDATE A  SET ADVSETTING=B.ADVSETTING,NOOFCOPIES=B.NOOFCOPIES  
		            FROM TMP_MSTLOC_REPORTS_'+LTRIM(RTRIM(STR(@NSPID)))+' A
					JOIN  REPORTS B ON A.G_REPORT_FILE=B.G_REPORT_FILE AND A.ROW_ID=B.ROW_ID'
		EXEC SP_EXECUTESQL @CCMD
	  
	  END
	  
 END
 ELSE
 BEGIN
	      
	      
	  IF OBJECT_ID('TMP_MSTLOC_PRINTHEADER_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
	     SET @NSTEP=960
	     SET @CCMD=N'DELETE A FROM TMP_MSTLOC_PRINTHEADER_'+LTRIM(RTRIM(STR(@NSPID)))+' A '
		 EXEC SP_EXECUTESQL @CCMD
	  
	  END
	  
	  IF OBJECT_ID('TMP_MSTLOC_PRINTDESCRIPTION_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
	    SET @NSTEP=970
	    SET @CCMD=N'DELETE A FROM TMP_MSTLOC_PRINTDESCRIPTION_'+LTRIM(RTRIM(STR(@NSPID)))+' A '
		EXEC SP_EXECUTESQL @CCMD
	  
	  END
	  IF OBJECT_ID('TMP_MSTLOC_PRINTDETAIL_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
	     
	     SET @NSTEP=980
	     SET @CCMD=N'DELETE A FROM TMP_MSTLOC_PRINTDETAIL_'+LTRIM(RTRIM(STR(@NSPID)))+' A '
		 EXEC SP_EXECUTESQL @CCMD
	     
	  END
	  
	 IF OBJECT_ID('TMP_MSTLOC_PRINTMASTER_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		SET @NSTEP=990
		SET @CCMD=N'DELETE A FROM TMP_MSTLOC_PRINTMASTER_'+LTRIM(RTRIM(STR(@NSPID)))+' A '
		EXEC SP_EXECUTESQL @CCMD
	  END
	  
	  IF OBJECT_ID('TMP_MSTLOC_REPORTS_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
	   SET @NSTEP=1000   
	   SET @CCMD=N'DELETE A FROM TMP_MSTLOC_REPORTS_'+LTRIM(RTRIM(STR(@NSPID)))+' A '
		EXEC SP_EXECUTESQL @CCMD
	  
	  END
 END
	  
  DELETE FROM REPORTS WHERE UDRF=1
----------------------


	  IF OBJECT_ID('TMP_MSTLOC_LOC_SPACE_DET_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		SET @NSTEP=60
		SET @CCMD=N'DELETE FROM TMP_MSTLOC_LOC_SPACE_DET_'+LTRIM(RTRIM(STR(@NSPID)))+' WHERE DEPT_ID<>'''+@CCURDEPTID+''''
		EXEC SP_EXECUTESQL @CCMD
	  END

	  IF OBJECT_ID('TMP_MSTLOC_LOC_SPACE_MST_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		SET @NSTEP=70
		SET @CCMD=N'DELETE A FROM TMP_MSTLOC_LOC_SPACE_MST_'+LTRIM(RTRIM(STR(@NSPID)))+' A
					LEFT JOIN  TMP_MSTLOC_LOC_SPACE_DET_'+LTRIM(RTRIM(STR(@NSPID)))+' B ON A.MEMO_ID=B.MEMO_ID
					WHERE B.MEMO_ID IS NULL'
		EXEC SP_EXECUTESQL @CCMD
	  END
	  
	  
	  IF OBJECT_ID('TMP_MSTLOC_SALEPERSON_TARGET_DET_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		SET @NSTEP=80
		SET @CCMD=N'DELETE FROM TMP_MSTLOC_SALEPERSON_TARGET_DET_'+LTRIM(RTRIM(STR(@NSPID)))+' WHERE DEPT_ID<>'''+@CCURDEPTID+''''
		EXEC SP_EXECUTESQL @CCMD
	  END
	  
	  IF OBJECT_ID('TMP_MSTLOC_SALEPERSON_TARGET_SUB_DET_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		SET @NSTEP=90
		SET @CCMD=N'DELETE A FROM TMP_MSTLOC_SALEPERSON_TARGET_SUB_DET_'+LTRIM(RTRIM(STR(@NSPID)))+' A
					LEFT JOIN  TMP_MSTLOC_SALEPERSON_TARGET_DET_'+LTRIM(RTRIM(STR(@NSPID)))+' B ON A.MEMO_ID=B.MEMO_ID
					WHERE B.MEMO_ID IS NULL'
		EXEC SP_EXECUTESQL @CCMD
	  END
	  
	   IF OBJECT_ID('TMP_MSTLOC_SALEPERSON_TARGET_MST_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		SET @NSTEP=100
		SET @CCMD=N'DELETE A FROM TMP_MSTLOC_SALEPERSON_TARGET_MST_'+LTRIM(RTRIM(STR(@NSPID)))+' A
					LEFT JOIN  TMP_MSTLOC_SALEPERSON_TARGET_DET_'+LTRIM(RTRIM(STR(@NSPID)))+' B ON A.MEMO_ID=B.MEMO_ID
					WHERE B.MEMO_ID IS NULL'
		EXEC SP_EXECUTESQL @CCMD
	  END
	  
	  
	  
	  IF OBJECT_ID('TMP_MSTLOC_LOC_STOCK_LEVEL_DET_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		SET @NSTEP=110
		SET @CCMD=N'DELETE FROM TMP_MSTLOC_LOC_STOCK_LEVEL_DET_'+LTRIM(RTRIM(STR(@NSPID)))+' WHERE DEPT_ID<>'''+@CCURDEPTID+''''
		EXEC SP_EXECUTESQL @CCMD
	  END
	  
	  IF OBJECT_ID('TMP_MSTLOC_LOC_STOCK_LEVEL_MST_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		SET @NSTEP=120
		SET @CCMD=N'DELETE A FROM TMP_MSTLOC_LOC_STOCK_LEVEL_MST_'+LTRIM(RTRIM(STR(@NSPID)))+' A
					LEFT JOIN  TMP_MSTLOC_LOC_STOCK_LEVEL_DET_'+LTRIM(RTRIM(STR(@NSPID)))+' B ON A.MEMO_ID=B.MEMO_ID
					WHERE B.MEMO_ID IS NULL'
		EXEC SP_EXECUTESQL @CCMD
	  END
	  
	  
	  IF OBJECT_ID('TMP_MSTLOC_LM01106_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		SET @NSTEP=130
 		SET @CCMD=N'UPDATE TMP_MSTLOC_LM01106_'+LTRIM(RTRIM(STR(@NSPID)))+' SET COMPANY_CODE=''01'''
		EXEC SP_EXECUTESQL @CCMD
	  END

	  IF OBJECT_ID('TMP_MSTLOC_LMP01106_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		SET @NSTEP=140
		SET @CCMD=N'UPDATE TMP_MSTLOC_LMP01106_'+LTRIM(RTRIM(STR(@NSPID)))+' SET COMPANY_CODE=''01'''
		EXEC SP_EXECUTESQL @CCMD
	  END
	  	  	  
	  IF OBJECT_ID('TMP_MSTLOC_LOCSST_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
			SET @NSTEP=150
			SET @CTEMPLOCTABLE='TMP_MSTLOC_LOCATION_'+LTRIM(RTRIM(STR(@NSPID)))
			
			SET @CCMD=N'SELECT TOP 1 @CSTATECODEOUT=C.STATE_CODE FROM '+@CTEMPLOCTABLE+' A 
						JOIN '+@CTEMPAREATABLE+' B ON A.AREA_CODE=B.AREA_CODE
						JOIN '+@CTEMPCITYTABLE+' C ON B.CITY_CODE=C.CITY_CODE
						WHERE A.DEPT_ID='''+@CCURDEPTID+''''
			EXEC SP_EXECUTESQL @CCMD,N'@CSTATECODEOUT CHAR(7) OUTPUT',@CSTATECODEOUT=@CSTATECODE OUTPUT
			
			PRINT 'LOCATION STATE'+@CSTATECODE
			
			
			SET @NSTEP=160
			SET @CCMD=N'DELETE FROM TMP_MSTLOC_LOCSST_MST_'+LTRIM(RTRIM(STR(@NSPID)))+' WHERE STATE_CODE<>'''+@CSTATECODE+''''
			EXEC SP_EXECUTESQL @CCMD			

			SET @NSTEP=170
			SET @CCMD=N'DELETE FROM TMP_MSTLOC_LOCSST_'+LTRIM(RTRIM(STR(@NSPID)))+' WHERE MEMO_ID NOT IN (
						SELECT MEMO_ID FROM TMP_MSTLOC_LOCSST_MST_'+LTRIM(RTRIM(STR(@NSPID)))+')'
			EXEC SP_EXECUTESQL @CCMD			

			IF OBJECT_ID('TMP_MSTLOC_LOCSSTADD_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL 
			BEGIN
				SET @NSTEP=180
				SET @CCMD=N'DELETE FROM TMP_MSTLOC_LOCSSTADD_'+LTRIM(RTRIM(STR(@NSPID)))+' WHERE LOCSST_ROW_ID NOT IN (
								SELECT ROW_ID FROM TMP_MSTLOC_LOCSST_'+LTRIM(RTRIM(STR(@NSPID)))+')'
				EXEC SP_EXECUTESQL @CCMD			
			END
	  END
	 
 	  IF OBJECT_ID('TMP_MSTLOC_LOC_REQ_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		SET @NSTEP=190
		SET @CCMD=N'DELETE FROM TMP_MSTLOC_LOC_REQ_'+LTRIM(RTRIM(STR(@NSPID)))+' WHERE DEPT_ID<>'''+@CCURDEPTID+''''
		EXEC SP_EXECUTESQL @CCMD
	  END
	  
	  IF OBJECT_ID('TMP_MSTLOC_MONTHLYBUDGET_HEAD_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		SET @NSTEP=192
		SET @CCMD=N'DELETE FROM TMP_MSTLOC_MONTHLYBUDGET_HEAD_'+LTRIM(RTRIM(STR(@NSPID)))+' WHERE DEPT_ID<>'''+@CCURDEPTID+''''
		EXEC SP_EXECUTESQL @CCMD
	  END
	  
	  IF OBJECT_ID('TMP_MSTLOC_MONTHLYBUDGET_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		SET @NSTEP=194
		SET @CCMD=N'DELETE FROM TMP_MSTLOC_MONTHLYBUDGET_'+LTRIM(RTRIM(STR(@NSPID)))+' WHERE DEPT_ID<>'''+@CCURDEPTID+''''
		EXEC SP_EXECUTESQL @CCMD
	  END

	  IF OBJECT_ID('TMP_MSTLOC_CONFIG_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		SET @NSTEP=195
		SET @CCMD=N'UPDATE TMP_MSTLOC_CONFIG_'+LTRIM(RTRIM(STR(@NSPID)))+' SET DEPT_ID='''+@CCURDEPTID+''''
		EXEC SP_EXECUTESQL @CCMD
	  END

	 SET @NSTEP=195 
	  
	 -------------------- TILL----------
	 IF @BTILLENABLED=0 AND OBJECT_ID('TMP_MSTLOC_TILL_USERS_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL
	 BEGIN 
	      SET @CCMD=N'DELETE A FROM TMP_MSTLOC_TILL_USERS_'+LTRIM(RTRIM(STR(@NSPID)))+' A '            
        PRINT  @CCMD    
		EXEC SP_EXECUTESQL @CCMD
	 END
	 
     IF  OBJECT_ID('TMP_MSTLOC_TILL_USERS_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  AND @BTILLENABLED=1 
	  BEGIN
		
        SET @NSTEP=490
        SET @CCMD=N'DELETE A FROM TMP_MSTLOC_TILL_USERS_'+LTRIM(RTRIM(STR(@NSPID)))+' A 
            WHERE  USER_CODE NOT IN (SELECT USER_CODE FROM USERS)'            
        PRINT  @CCMD    
		EXEC SP_EXECUTESQL @CCMD
	
	 END  
	 
	  IF  OBJECT_ID('TMP_MSTLOC_TILL_LOCS_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  AND  OBJECT_ID('TMP_MSTLOC_TILL_USERS_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL AND @BTILLENABLED=1 
	  BEGIN
		SET @NSTEP=500
		
		SET @CCMD=N'DELETE  TMP_MSTLOC_TILL_LOCS_'+LTRIM(RTRIM(STR(@NSPID)))+'  WHERE DEPT_ID<>'''+@CCURDEPTID+'''' 
		PRINT  @CCMD             
		EXEC SP_EXECUTESQL @CCMD
		
        SET @NSTEP=510
        SET @CCMD=N'DELETE A FROM TMP_MSTLOC_TILL_LOCS_'+LTRIM(RTRIM(STR(@NSPID)))+' A 
                   LEFT JOIN TMP_MSTLOC_TILL_USERS_'+LTRIM(RTRIM(STR(@NSPID)))+'  B ON A.TILL_ID=B.TILL_ID
                   WHERE  ISNULL(B.USER_CODE,'''') NOT IN (SELECT USER_CODE FROM USERS )'  
        PRINT  @CCMD
		EXEC SP_EXECUTESQL @CCMD
	
	 END 
	 
	 
	 IF  OBJECT_ID('TMP_MSTLOC_TILL_MST_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL   AND @BTILLENABLED=1 
	 BEGIN
		
        SET @NSTEP=520
        SET @CCMD=N'DELETE A FROM TMP_MSTLOC_TILL_MST_'+LTRIM(RTRIM(STR(@NSPID)))+' A WHERE  TILL_ID NOT IN (SELECT TILL_ID FROM TMP_MSTLOC_TILL_LOCS_'+LTRIM(RTRIM(STR(@NSPID)))+')'            
        PRINT  @CCMD  
		EXEC SP_EXECUTESQL @CCMD
	
	 END 
	 
	 IF  OBJECT_ID('TMP_MSTLOC_TILL_USERS_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL    AND @BTILLENABLED=1
	 BEGIN
	    SET @NSTEP=525
        SET @CCMD=N'DELETE A FROM TMP_MSTLOC_TILL_USERS_'+LTRIM(RTRIM(STR(@NSPID)))+' A WHERE  TILL_ID NOT IN (SELECT TILL_ID FROM TMP_MSTLOC_TILL_LOCS_'+LTRIM(RTRIM(STR(@NSPID)))+')'            
        PRINT  @CCMD    
		EXEC SP_EXECUTESQL @CCMD
	
	 END  
	 IF  OBJECT_ID('TMP_MSTLOC_TILL_MST_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  AND @BTILLENABLED=1
	  BEGIN
		
        SET @NSTEP=530
        SET @CCMD=N'DELETE A FROM TMP_MSTLOC_TILL_MST_'+LTRIM(RTRIM(STR(@NSPID)))+' A WHERE  TILL_ID NOT IN (SELECT TILL_ID FROM TMP_MSTLOC_TILL_LOCS_'+LTRIM(RTRIM(STR(@NSPID)))+')'            
        PRINT  @CCMD    
		EXEC SP_EXECUTESQL @CCMD
	
	 END 
	  
	IF  OBJECT_ID('TMP_MSTLOC_TILL_SMS_REC_LOC_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  AND @BTILLENABLED=1 
	  BEGIN
		
        SET @NSTEP=535
        SET @CCMD=N'DELETE A FROM TMP_MSTLOC_TILL_SMS_REC_LOC_'+LTRIM(RTRIM(STR(@NSPID)))+' A   WHERE DEPT_ID<>'''+@CCURDEPTID+''''  
        PRINT  @CCMD    
		EXEC SP_EXECUTESQL @CCMD
	
	 END    
	 
	 IF  OBJECT_ID('TMP_MSTLOC_TILL_SMS_REC_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL
	   AND OBJECT_ID('TMP_MSTLOC_TILL_SMS_REC_LOC_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL
	   AND @BTILLENABLED=1
	  BEGIN
		
        SET @NSTEP=540
        SET @CCMD=N'DELETE A FROM TMP_MSTLOC_TILL_SMS_REC_'+LTRIM(RTRIM(STR(@NSPID)))+' A   WHERE REC_ID  NOT IN
           (SELECT REC_ID FROM TMP_MSTLOC_TILL_SMS_REC_LOC_'+LTRIM(RTRIM(STR(@NSPID)))+')'  
        PRINT  @CCMD    
		EXEC SP_EXECUTESQL @CCMD
	
	 END   
	 
	 
	 -----------------
	 ---FOR XNAPPROVAL--
	  IF  OBJECT_ID('TMP_MSTLOC_XN_APPROVAL_CHECKLIST_LEVEL_USERS_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		
        SET @NSTEP=550
        SET @CCMD=N'DELETE A FROM TMP_MSTLOC_XN_APPROVAL_CHECKLIST_LEVEL_USERS_'+LTRIM(RTRIM(STR(@NSPID)))+' A   WHERE DEPT_ID<>'''+@CCURDEPTID+''''  
        PRINT  @CCMD    
		EXEC SP_EXECUTESQL @CCMD
		
		 SET @NSTEP=560
        SET @CCMD=N'DELETE A FROM TMP_MSTLOC_XN_APPROVAL_CHECKLIST_LEVEL_USERS_'+LTRIM(RTRIM(STR(@NSPID)))+' A   WHERE USER_CODE NOT IN
                    (SELECT USER_CODE FROM USERS)'  
        PRINT  @CCMD    
		EXEC SP_EXECUTESQL @CCMD
	
	-- ADD NEW
	 IF  OBJECT_ID('TMP_MSTLOC_XN_APPROVAL_CHECKLIST_LEVELS_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		
		SET @NSTEP=570
        SET @CCMD=N'DELETE A FROM TMP_MSTLOC_XN_APPROVAL_CHECKLIST_LEVELS_'+LTRIM(RTRIM(STR(@NSPID)))+' A   WHERE LEVEL_CODE NOT IN
                    (SELECT LEVEL_CODE FROM TMP_MSTLOC_XN_APPROVAL_CHECKLIST_LEVEL_USERS_'+LTRIM(RTRIM(STR(@NSPID)))+' )'  
        PRINT  @CCMD    
		EXEC SP_EXECUTESQL @CCMD
	
	 END     
	  IF  OBJECT_ID('TMP_MSTLOC_XN_APPROVAL_CHECKLIST_LEVEL_DETAILS_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		
		SET @NSTEP=580
        SET @CCMD=N'DELETE A FROM TMP_MSTLOC_XN_APPROVAL_CHECKLIST_LEVEL_DETAILS_'+LTRIM(RTRIM(STR(@NSPID)))+' A   WHERE LEVEL_CODE NOT IN
                    (SELECT LEVEL_CODE FROM TMP_MSTLOC_XN_APPROVAL_CHECKLIST_LEVEL_USERS_'+LTRIM(RTRIM(STR(@NSPID)))+' )'  
        PRINT  @CCMD    
		EXEC SP_EXECUTESQL @CCMD
	
	 END  
	   IF  OBJECT_ID('TMP_MSTLOC_XN_APPROVAL_CHECKLIST_MST_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		
		SET @NSTEP=580
        SET @CCMD=N'DELETE A FROM TMP_MSTLOC_XN_APPROVAL_CHECKLIST_MST_'+LTRIM(RTRIM(STR(@NSPID)))+' A   WHERE CHECKLIST_CODE NOT IN
                    (SELECT CHECKLIST_CODE FROM TMP_MSTLOC_XN_APPROVAL_CHECKLIST_LEVEL_DETAILS_'+LTRIM(RTRIM(STR(@NSPID)))+' )'  
        PRINT  @CCMD    
		EXEC SP_EXECUTESQL @CCMD
	
	 END  
	 IF  OBJECT_ID('TMP_MSTLOC_LOC_XNSAPPROVAL_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		
		SET @NSTEP=580
        SET @CCMD=N'DELETE A FROM TMP_MSTLOC_LOC_XNSAPPROVAL_'+LTRIM(RTRIM(STR(@NSPID)))+' A   WHERE DEPT_ID<>'''+@CCURDEPTID+''' '  
        PRINT  @CCMD    
		EXEC SP_EXECUTESQL @CCMD
	
	 END  
	  --
END     
ELSE
BEGIN
      
       IF  OBJECT_ID('TMP_MSTLOC_XN_APPROVAL_CHECKLIST_LEVELS_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		
		SET @NSTEP=570
        SET @CCMD=N'DELETE A FROM TMP_MSTLOC_XN_APPROVAL_CHECKLIST_LEVELS_'+LTRIM(RTRIM(STR(@NSPID)))+' A   '  
        PRINT  @CCMD    
		EXEC SP_EXECUTESQL @CCMD
	
	 END     
	  IF  OBJECT_ID('TMP_MSTLOC_XN_APPROVAL_CHECKLIST_LEVEL_DETAILS_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		
		SET @NSTEP=580
        SET @CCMD=N'DELETE A FROM TMP_MSTLOC_XN_APPROVAL_CHECKLIST_LEVEL_DETAILS_'+LTRIM(RTRIM(STR(@NSPID)))+' A   '  
        PRINT  @CCMD    
		EXEC SP_EXECUTESQL @CCMD
	
	 END  
	   IF  OBJECT_ID('TMP_MSTLOC_XN_APPROVAL_CHECKLIST_MST_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		
		SET @NSTEP=580
        SET @CCMD=N'DELETE A FROM TMP_MSTLOC_XN_APPROVAL_CHECKLIST_MST_'+LTRIM(RTRIM(STR(@NSPID)))+' A  '  
        PRINT  @CCMD    
		EXEC SP_EXECUTESQL @CCMD
	
	 END  
	 IF  OBJECT_ID('TMP_MSTLOC_LOC_XNSAPPROVAL_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
	  BEGIN
		
		SET @NSTEP=580
        SET @CCMD=N'DELETE A FROM TMP_MSTLOC_LOC_XNSAPPROVAL_'+LTRIM(RTRIM(STR(@NSPID)))+' A    '  
        PRINT  @CCMD    
		EXEC SP_EXECUTESQL @CCMD
	
	 END  

  END

  IF OBJECT_ID('TMP_MSTLOC_GV_SCHEME_LOCS_'+LTRIM(RTRIM(STR(@NSPID))),'U') IS NOT NULL  
  BEGIN
	SET @NSTEP=590
	SET @CCMD=N'DELETE A FROM TMP_MSTLOC_GV_SCHEME_LOCS_'+LTRIM(RTRIM(STR(@NSPID)))+' A
				WHERE DEPT_ID<>'''+@CCURDEPTID+''''
	EXEC SP_EXECUTESQL @CCMD

	SET @CCMD=N'DELETE A FROM TMP_MSTLOC_GV_SCHEME_MST_'+LTRIM(RTRIM(STR(@NSPID)))+' A
				LEFT OUTER JOIN TMP_MSTLOC_GV_SCHEME_LOCS_'+LTRIM(RTRIM(STR(@NSPID)))+' B ON A.SCHEME_CODE=B.SCHEME_CODE
				WHERE B.SCHEME_CODE IS  NULL'
	EXEC SP_EXECUTESQL @CCMD

	SET @CCMD=N'DELETE A FROM TMP_MSTLOC_GV_SCHEME_1_'+LTRIM(RTRIM(STR(@NSPID)))+' A
				LEFT OUTER JOIN TMP_MSTLOC_GV_SCHEME_MST_'+LTRIM(RTRIM(STR(@NSPID)))+' B ON A.SCHEME_CODE=B.SCHEME_CODE
				WHERE B.SCHEME_CODE IS  NULL'
	EXEC SP_EXECUTESQL @CCMD		
				
  END		
	  
	 -----------------------  
	  --
	  
	 IF ISNULL(@CERRORMSG,'')<>''
			GOTO LBLLAST
			
	 LBLMERGE:  
	  DECLARE @CKEYFIELD1 VARCHAR(100),@CKEYFIELD2 VARCHAR(100)  
	  SET @CFILTERCONDITION=''  
	    
	  SET @NSTEP = 196
	  
	  IF CURSOR_STATUS('GLOBAL','MERGECUR') IN (0,1)  
	  BEGIN  
	   CLOSE MERGECUR  
	   DEALLOCATE MERGECUR  
	  END  
	    
	  --- NOW, UPDATE TRANSACTIONS DATA ONE BY ONE  
	  DECLARE MERGECUR CURSOR FOR   
	  SELECT DISTINCT TABLENAME, KEYFIELD,XNS_MERGING_ORDER  
	  FROM XNSINFO (NOLOCK)   
	  WHERE XN_TYPE = @CXNTYPE   
	  AND   XNS_MERGING_ORDER <> 99 -- AND TABLENAME NOT IN  ('REPLOCS','REP_MST','REP_DET','REP_FILTER','REP_FILTER_DET')
	  ORDER BY XNS_MERGING_ORDER  
	    
	  OPEN MERGECUR  
	  FETCH NEXT FROM MERGECUR INTO @CTABLENAME,@CKEYFIELD,@NXNSMERGINGORDER  
	  WHILE @@FETCH_STATUS=0  
	  BEGIN  
	     
	   SET @NSTEP = 200
	     
	   LBLSTARTMERGE:  
	   SET @BPROCEED=1  
	     
	   SET @CCMD=N'IF NOT EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME=''TMP_' + @CXNTYPE + '_' + @CTABLENAME + '_' + LTRIM(RTRIM(STR(@NSPID)))+''')  
		   SET @BPROCEEDOUT=0'  
	     
	   PRINT @CCMD  
	   EXEC SP_EXECUTESQL @CCMD,N'@BPROCEEDOUT BIT OUTPUT',@BPROCEEDOUT=@BPROCEED OUTPUT  
	     
	   SET @NSTEP = 210  
	     
	   IF @BPROCEED=0  
		GOTO LBLMERGENEXT  
	     
	     
	   IF  EXISTS(SELECT TABLENAME FROM MST_UNQ  (NOLOCK) WHERE TABLENAME=@CTABLENAME)  
	   BEGIN  
			SET @NSTEP = 215
		      
			SELECT @CUNQCOLUMNNAME1=PRIMARY_COLUMNNAME FROM MST_UNQ (NOLOCK) WHERE TABLENAME=@CTABLENAME   
			SELECT @CUNQCOLUMNNAME2=SECONDARY_COLUMNNAME FROM MST_UNQ (NOLOCK) WHERE TABLENAME=@CTABLENAME  
		      
			SET @CCMD=N'UPDATE '+@CTABLENAME+' SET '+@CUNQCOLUMNNAME1+'='+@CTABLENAME+'.'+@CUNQCOLUMNNAME1+'+''_''+'+  
			   @CTABLENAME+'.'+@CKEYFIELD+' FROM [TMP_'+@CXNTYPE + '_' + @CTABLENAME + '_' +  
				LTRIM(RTRIM(STR(@NSPID)))+'] B  WHERE B.'+@CUNQCOLUMNNAME1+'='+@CTABLENAME+'.'+  
				@CUNQCOLUMNNAME1+(CASE WHEN @CUNQCOLUMNNAME2<>'' THEN ' AND B.'+@CUNQCOLUMNNAME2+  
				'='+@CTABLENAME+'.'+@CUNQCOLUMNNAME2 ELSE '' END)+' AND B.'+@CKEYFIELD+'<>'+@CTABLENAME+'.'+@CKEYFIELD  
			PRINT @CCMD        
			EXEC SP_EXECUTESQL @CCMD          
	   END  
	     
	   SET @NSTEP = 220   
	   IF @CTABLENAME ='TILL_USERS'
		   SET @CKEYFIELD1='USER_CODE'
	   ELSE
	   IF @CTABLENAME ='TILL_LOCS'
		   SET @CKEYFIELD1='DEPT_ID'
	   ELSE	   
	   IF @CTABLENAME ='XN_APPROVAL_CHECKLIST_LEVEL_USERS'
	   BEGIN
		   SET @CKEYFIELD1='USER_CODE'
		   SET @CKEYFIELD2='XN_TYPE'
	   END
	   ELSE
	   IF @CTABLENAME ='XN_APPROVAL_CHECKLIST_LEVEL_DETAILS'
		   SET @CKEYFIELD1='LEVEL_CODE'
	   ELSE
	   IF @CTABLENAME ='LOC_XNSAPPROVAL'
	       SET @CKEYFIELD1='XN_TYPE'
	   ELSE
	   BEGIN
		   SET @CKEYFIELD1=''
		   SET @CKEYFIELD2=''
	   END
	   
	   SET @CCMD='EXEC UPDATEMASTERXN_MERGING '''','''+@CTABLEPREFIX+'_' + @CTABLENAME + '_' + LTRIM(RTRIM(STR(@NSPID)))+''','''',  
			'''+@CTABLENAME+''','''+@CKEYFIELD+''','''+@CKEYFIELD1+''','''+@CKEYFIELD2+''',0,0,1,'''+@CFILTERCONDITION+''',@CERRORMSGOUT OUTPUT'  
	   PRINT @CCMD  
	   EXEC SP_EXECUTESQL @CCMD,N'@CERRORMSGOUT VARCHAR(1000) OUTPUT',@CERRORMSGOUT=@CERRORMSG OUTPUT  
	 
	   IF @CTABLENAME='SEASON_MST'
			EXEC SP_LOC_STOCK_LEVEL @NMODE=1,@DISPLAYMSG='INSERT_COLUMN'
	   
	   SET @NSTEP = 185     
	   IF @CERRORMSG<>''  
		BREAK  
	       
	   LBLMERGENEXT:  
	     
	   FETCH NEXT FROM MERGECUR INTO @CTABLENAME,@CKEYFIELD,@NXNSMERGINGORDER  
	  END  
	  CLOSE MERGECUR  
	  DEALLOCATE MERGECUR  


		
	 END TRY  
	  
	 BEGIN CATCH  
	    
	  PRINT 'UNTRAPPED ERROR'    
	       
	  DECLARE @CERRORPROCNAME VARCHAR(100),@CLINENO VARCHAR(5),@CERRTEXT VARCHAR(MAX)  
	    
	  SELECT @CERRORPROCNAME=ISNULL(ERROR_PROCEDURE(),'NULL P'),@CLINENO=ISNULL(LTRIM(RTRIM(STR(ERROR_LINE()))),'NULL LINE'),  
	  @CERRTEXT='STEP : '+LTRIM(RTRIM(STR(@NSTEP)))+' '+ISNULL(ERROR_MESSAGE(),'NULL MSG')  
	    
	  
	  --SELECT @CERRORMSG='PROCEDURE : '+@CERRORPROCNAME+' LINE NO. :'+@CLINENO+' MSG :'+@CERRTEXT  
	    
	  SELECT @CERRORMSG=@CERRTEXT  
	  
	  GOTO LBLLAST 		    
	     
	 END CATCH  
	  

  
LBLLAST:	
	 
	 IF @@TRANCOUNT>0  
	 BEGIN  
		IF ISNULL(@CERRORMSG,'')=''
		    COMMIT TRANSACTION  
		ELSE
		   ROLLBACK      
	 END   
	  
	EXEC SP_DROPTEMPTABLES_XNS @CXNTYPE,@NSPID,'','TMP_MSTLOC'       
	 
	   
	 INSERT @TRETMSG  
	 SELECT 'MSTLOC' AS MEMO_ID,@CERRORMSG  
	    
	 SELECT * FROM @TRETMSG  
	 
END  
--- 'END OF CREATING PROCEDURE SP_MERGEMSTLOCDATA'
