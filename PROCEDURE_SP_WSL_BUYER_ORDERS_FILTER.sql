CREATE PROCEDURE SP_WSL_BUYER_ORDERS_FILTER--(LocId 3 digit change by Sanjay:04-11-2024)
(
 @MEMO_TYPE NUMERIC(1),--0 FOR ALL 1 FOR DIRECT 2 FOR PICKLIST
 @PICK_LIST_GEN NUMERIC(1)=0,--0 FOR ALL 1 FOR  GENERATED 2 FOR NOT GENERATED  3 FOR PARTIAL GENERATED  
 @DTFILTER NUMERIC(1),
 @FM_ORDER_DT VARCHAR(20)='', --ORDER_FMDT
 @TO_ORDER_DT VARCHAR(20)='',--ORDER_TODT
 @FM_DELEVERY_DT VARCHAR(20)='',--DELEVERYFMDT
 @TO_DELEVERY_DT VARCHAR(20)='',--DELEVERYTOFT
 @AC_CODE VARCHAR(100)='',--AC_CODE
 @SALES_PERSON VARCHAR(100)='',--SALES PERSON
 @CANCELLED NUMERIC(1)=2,--0 UN-CANCELLED 1 CANCELLED 2 ALL
 @DISABLE_AC_CODE VARCHAR(100)='',--DISABLEAC_CODE
 @APPROVED INT   ,
 @LOC VARCHAR(4)=''              

)
AS
BEGIN

     DECLARE @CCMD NVARCHAR(MAX),@FILTER VARCHAR(MAX),@CFILTER1 VARCHAR(2000)
     DECLARE @PICKLISFILTER VARCHAR(MAX)
     SET @FILTER=''
     SET @PICKLISFILTER=''
      IF @PICK_LIST_GEN=1 
      SET @PICKLISFILTER=' HAVING SUM(CASE WHEN MEMO_TYPE=1 THEN ISNULL(B.INV_QTY,0) ELSE ISNULL(B.PL_QTY,0) END)=SUM(B.QUANTITY)'
     IF @PICK_LIST_GEN=2 
      SET @PICKLISFILTER=' HAVING SUM (CASE WHEN MEMO_TYPE=1 THEN ISNULL(B.INV_QTY,0) ELSE ISNULL(B.PL_QTY,0) END)=0  '
     IF @PICK_LIST_GEN=3
      SET @PICKLISFILTER=' HAVING ( SUM(B.QUANTITY)- (CASE WHEN MEMO_TYPE=1 THEN ISNULL(B.INV_QTY,0) ELSE ISNULL(B.PL_QTY,0) END))>0 '
      
	  




      SET @CFILTER1=''
      IF @AC_CODE ='' AND @DISABLE_AC_CODE<>''
      SET @CFILTER1='A.AC_CODE NOT IN ('''+@DISABLE_AC_CODE+''') AND '
     
     IF @DTFILTER=1 OR @DTFILTER=0
      SET @FILTER=ISNULL(@FILTER,'')+'A.ORDER_DT BETWEEN '''+@FM_ORDER_DT+''' AND  '''+@TO_ORDER_DT+''' AND '
      IF @DTFILTER=2 OR @DTFILTER=0
      SET @FILTER=ISNULL(@FILTER,'')+'A.DELIVERY_DT BETWEEN '''+@FM_DELEVERY_DT+''' AND  '''+@TO_DELEVERY_DT+''' AND '
 
     SET @FILTER=ISNULL(@FILTER,'')+ISNULL(@CFILTER1,'')+'('+STR(@MEMO_TYPE)+'=0 OR A.MEMO_TYPE='+STR(@MEMO_TYPE)+') AND 
                          ('''+@AC_CODE+'''='''' OR A.AC_CODE='''+@AC_CODE+''') AND
                          ('''+@SALES_PERSON+'''='''' OR A.SALE_emp_code='''+@SALES_PERSON+''') AND 
                          ('+STR(@CANCELLED)+'=2 OR A.CANCELLED='+STR(@CANCELLED)+')  AND ('''+@LOC+'''='''' OR (a.location_code= ''' +@LOC +''' or a.wbo_for_dept_id=''' +@LOC +'''))	'
                          
                          
                          
                         	
                     
      IF @APPROVED IN(0,1)
      BEGIN
           
           SET @FILTER=@FILTER+' AND ISNULL(APPROVED,0)='+RTRIM(LTRIM(STR(@APPROVED)))
      
      END 
     
                           
        SET @CCMD=N'SELECT A.ORDER_NO,A.ORDER_ID,CONVERT(VARCHAR,ORDER_DT,105) AS ORDER_DT,LM.AC_NAME,
		CASE WHEN A.CANCELLED=0 THEN SUM(B.QUANTITY) ELSE 0 END  AS QUANTITY,
		CASE WHEN A.CANCELLED=0 THEN TOTAL_AMOUNT ELSE 0 END AS TOTAL_AMOUNT ,
		CASE WHEN A.CANCELLED=0 THEN A.SUBTOTAL ELSE 0 END AS  SUBTOTAL,
		CASE WHEN A.CANCELLED=0 THEN A.DISCOUNT_PERCENTAGE ELSE 0 END AS DISCOUNT_PERCENTAGE ,
		CASE WHEN A.CANCELLED=0 THEN A.DISCOUNT_AMOUNT ELSE 0 END  AS DISCOUNT_AMOUNT,
		CASE WHEN A.CANCELLED=0 THEN A.OTHER_CHARGES ELSE 0 END  AS OTHER_CHARGES ,
		A.PAYMENT_DETAILS,A.MODE,
		CANCELLED=CASE WHEN A.CANCELLED=0 THEN '''' ELSE ''CANCELLED'' END,

		PL_STATUS= CASE WHEN  ISNULL(a.SHORT_CLOSE,0)=1 THEN ''SHORT CLOSE''
            WHEN DELIVERY_DT <GETDATE() THEN ''EXPIRE''
			WHEN SUM(QUANTITY-ISNULL(B.INV_QTY,0))>0 and sum(ISNULL(B.INV_QTY,0))>0  THEN ''PARCIALLY INVOICED''
			WHEN SUM(QUANTITY-ISNULL(B.INV_QTY,0))=0 THEN ''INVOICED''
			ELSE '''' END,
		U1.USERNAME,CONVERT(VARCHAR,A.LAST_UPDATE,105) AS LAST_UPDATE,
		A.SENT_TO_HO,A.FIN_YEAR,CONVERT(VARCHAR,A.DELIVERY_DT,105) AS DELIVERY_DT,A.DEPT_ID,A.CHECKED_BY,A.SENT_BY,A.ROUND_OFF,
		REF_NO,CONVERT(VARCHAR,A.TRAIL_DT,105) AS TRAIL_DT,A.CONVERTED_BY_USER_CODE,A.MEMO_TYPE,A.SHIPPING_ADDRESS,
		CASE WHEN A.APPROVED=0 THEN ''UN APPROVED'' ELSE ''APPROVED'' END AS APPROVED,
		A.REMARKS as Mst_remarks,CUSTOMER_NAME=ISNULL(CUSTOMER_TITLE,'''')+ISNULL(CUSTOMER_FNAME,'''')+ISNULL(CUSTOMER_LNAME,''''),
		A.SMS_SENT,A.MANUAL_DISCOUNT,A.EDITED,A.ORDER_TYPE,LM.AREA_NAME,
		ISNULL(A.TOTAL_PICK_LIST_QTY,0) AS TOTAL_PICK_LIST_QTY,
		CAST(SUM(B.QUANTITY)-ISNULL(A.TOTAL_PICK_LIST_QTY,0) AS NUMERIC(10,3)) AS PENDING_PICK_LIST_QTY ,
		emp.emp_name  as sale_person,A.ApprovedLevelNo,cast(0 as bit) as CHK
		FROM BUYER_ORDER_MST A (NOLOCK) 
		JOIN BUYER_ORDER_DET B (NOLOCK) ON A.ORDER_ID=B.ORDER_ID
		JOIN LMV01106 LM (NOLOCK) ON LM.AC_CODE=A.AC_CODE
		JOIN USERS U1 (NOLOCK) ON U1.USER_CODE=A.USER_CODE
		JOIN USERS U2 (NOLOCK) ON U2.USER_CODE=A.EDT_USER_CODE
		LEFT JOIN CUSTDYM C (NOLOCK)ON C.CUSTOMER_CODE=A.CUSTOMER_CODE
		left outer join employee  emp on A.SALE_emp_code = emp.emp_code 
		WHERE '+@FILTER+'
		GROUP BY A.ORDER_NO,A.ORDER_ID,ORDER_DT,ISNULL(a.SHORT_CLOSE,0),
		LM.AC_NAME,LM.AREA_NAME,ISNULL(A.TOTAL_PICK_LIST_QTY,0),
		TOTAL_AMOUNT,A.LAST_UPDATE,A.SUBTOTAL,A.DISCOUNT_PERCENTAGE,A.DISCOUNT_AMOUNT,
		A.OTHER_CHARGES,A.PAYMENT_DETAILS,A.MODE,A.CANCELLED,U1.USERNAME,
		A.SENT_TO_HO,A.FIN_YEAR,A.DELIVERY_DT,A.DEPT_ID,A.CHECKED_BY,A.SENT_BY,A.ROUND_OFF,
		REF_NO,A.TRAIL_DT,A.CONVERTED_BY_USER_CODE,A.MEMO_TYPE,emp.emp_name,A.SHIPPING_ADDRESS,
		A.APPROVED,A.REMARKS,ISNULL(CUSTOMER_TITLE,'''')+ISNULL(CUSTOMER_FNAME,'''')+ISNULL(CUSTOMER_LNAME,''''),
		A.SMS_SENT,A.MANUAL_DISCOUNT,A.ApprovedLevelNo,A.EDITED,A.ORDER_TYPE  '+
		@PICKLISFILTER+' ORDER BY CONVERT(VARCHAR(10),ORDER_DT,112) DESC'
		
		PRINT @CCMD					
	    EXEC SP_EXECUTESQL @CCMD
		                     
                          
END
