CREATE PROCEDURE SP_MERGE_MIRROR_BATCHDATA
@CERRMSGOUT VARCHAR(MAX) OUTPUT
AS
BEGIN
    
    DECLARE @CSTEP VARCHAR(5),@DTSQL NVARCHAR(MAX),@XN_TYPE VARCHAR(10),@CMEMOID VARCHAR(100),
            @HO_DEPTID CHAR(2),@DEPT_ID CHAR(2)
    
    DECLARE @TBLWH TABLE(DEPT_ID CHAR(2))
    
    DECLARE @TBLMERGEMSG TABLE (ERRMSG VARCHAR(MAX))
   
    DECLARE @CERRMSGMERGING VARCHAR(MAX)
    
BEGIN TRY	

	SET @CSTEP=10
	
    IF OBJECT_ID('TEMPDB..#TMERGEORDER','U') IS NOT NULL
	    DROP TABLE #TMERGEORDER
	
	SELECT TOP 1   @HO_DEPTID =VALUE   FROM CONFIG  WHERE CONFIG_OPTION ='HO_LOCATION_ID'
	
	IF OBJECT_ID('TEMPDB..#TMPWH','U') IS NOT NULL
	    DROP TABLE #TMPWH
    
    SELECT DEPT_ID,XN_TYPE='PUR'  INTO #TMPWH   FROM LOCATION   WHERE PUR_LOC =1 AND DEPT_ID<>@HO_DEPTID
    
    SET @CSTEP=20
    SELECT  'PO' AS XN_TYPE,20 AS MERGE_ORDER INTO #TMERGEORDER 
    UNION SELECT 'OPS',30 UNION SELECT 'PUR',40 UNION SELECT 'SNC',45 UNION SELECT 'PBG',50
	UNION SELECT 'SCF',60 UNION SELECT 'IRR',70 UNION SELECT 'APP',80 UNION SELECT 'APR',90 UNION SELECT 'ADV',100
	UNION SELECT 'RPS',110 UNION SELECT 'SLS',120 UNION SELECT 'ARC',125 UNION SELECT 'PTC',130 UNION SELECT 'HBD',140 
	UNION SELECT 'DNPS',150 UNION SELECT 'PRT',155
	UNION SELECT 'WSLORD',160 
	UNION SELECT 'WPS',165
	UNION SELECT 'WBO',170
	UNION SELECT 'WPL',175
	UNION SELECT 'WSL',180 
	UNION SELECT 'WSR',190 UNION SELECT 'BCO',195 UNION SELECT 'JWI',200 
	UNION SELECT 'JWR',210 UNION SELECT 'ACT',220 UNION SELECT 'ATD',230 UNION SELECT 'CNC',240
	UNION SELECT 'POADJ',250 UNION SELECT 'DEND',260 UNION SELECT 'FIRR',270
	UNION SELECT 'SCH',300 UNION SELECT 'PSHBD',310 UNION SELECT 'PSJWI',320
	UNION SELECT 'PSJWR',330 UNION SELECT 'PSDLV',340 UNION	SELECT 'CUS',350
	UNION SELECT 'STREC',380
	UNION SELECT 'PCI',510
	UNION SELECT 'PCO',520
	UNION SELECT 'DSM',530
	UNION SELECT 'PRCL',540  

	SET @CSTEP=30

    IF OBJECT_ID('TEMPDB..#TBATCHMODEMERGEERR','U') IS NOT NULL
	    DROP TABLE #TBATCHMODEMERGEERR
	
	SELECT CONVERT(VARCHAR(MAX),'') AS ERRMSG INTO #TBATCHMODEMERGEERR
	    
    IF OBJECT_ID('TEMPDB..#TMPXNS_PENDING_MEMOS','U') IS NOT NULL
	    DROP TABLE #TMPXNS_PENDING_MEMOS
	        
	SELECT A.XN_ID,A.XN_TYPE,B.MERGE_ORDER,
	       (CASE WHEN WH.DEPT_ID IS NOT NULL THEN 1 ELSE 2 END) AS PUR_MERGE_ORDER
	INTO #TMPXNS_PENDING_MEMOS
	FROM  MERGING_XNS_PENDING_MEMOS A 
	JOIN #TMERGEORDER B ON A.XN_TYPE=B.XN_TYPE
	LEFT JOIN #TMPWH WH ON WH.XN_TYPE=A.XN_TYPE AND  LEFT(A.XN_ID,2)=WH.DEPT_ID
	LEFT JOIN 
	(
	  SELECT XN_TYPE,LEFT(XN_ID,2) AS DEPT_ID FROM MERGING_XNS_PENDING_MEMOS 
	  WHERE @CERRMSGMERGING<>''
	  GROUP BY XN_TYPE,LEFT(XN_ID,2)
	) ERRMSG ON ERRMSG.XN_TYPE=A.XN_TYPE  AND ERRMSG.DEPT_ID=LEFT(A.XN_ID,2)
	
	WHERE (ISNULL(ERRMSG.XN_TYPE,'')='' AND ABS(DATEDIFF(MI,LAST_UPDATE,GETDATE()))>1) OR
		  (ISNULL(ERRMSG.XN_TYPE,'')<>'' AND ABS(DATEDIFF(MI,LAST_UPDATE,GETDATE()))>60) 
	ORDER BY B.MERGE_ORDER

	            
	SET @CSTEP=40
    WHILE EXISTS(SELECT TOP 1 * FROM #TMPXNS_PENDING_MEMOS ORDER BY MERGE_ORDER,PUR_MERGE_ORDER)
	BEGIN
	     SELECT TOP 1 @CMEMOID=XN_ID ,@XN_TYPE =XN_TYPE, @DEPT_ID =LEFT(XN_ID,2) 
	     FROM #TMPXNS_PENDING_MEMOS ORDER BY MERGE_ORDER,PUR_MERGE_ORDER,XN_ID
	     
	     EXEC SP_MERGE_MIRRORDATA
	          @CLOCID=@DEPT_ID,
              @CXNTYPE=@XN_TYPE,
              @CXNID=@CMEMOID,
              @BCALLEDFROMBATCHMODE=1
	     
	     SET @CERRMSGMERGING=(SELECT TOP 1 ERRMSG FROM #TBATCHMODEMERGEERR)
	     
	     SELECT @CERRMSGMERGING,@XN_TYPE
	     IF ISNULL(@CERRMSGMERGING,'')<>'SUCCESS'
	     BEGIN
	        UPDATE MERGING_XNS_PENDING_MEMOS  WITH (ROWLOCK) SET ERRMSG=@CERRMSGMERGING WHERE XN_ID =  @CMEMOID AND XN_TYPE =@XN_TYPE
	        DELETE FROM #TMPXNS_PENDING_MEMOS WHERE  XN_TYPE =@XN_TYPE AND LEFT(XN_ID,2)=@DEPT_ID
	     
	     END
	     ELSE 
	     BEGIN
			DELETE FROM #TMPXNS_PENDING_MEMOS WHERE XN_ID =  @CMEMOID AND XN_TYPE =@XN_TYPE 
			DELETE FROM MERGING_XNS_PENDING_MEMOS  WITH (ROWLOCK) WHERE  XN_TYPE =@XN_TYPE AND XN_ID =  @CMEMOID 
  		 END
  		 
  		 DELETE FROM #TBATCHMODEMERGEERR
    END	

   GOTO EXIT_PROC

END TRY
BEGIN CATCH
	SET @CERRMSGOUT='P:SP_MERGE_MIRROR_BATCHDATA, STEP: '+@CSTEP+',MESSAGE:'+ERROR_MESSAGE()
END CATCH	 

EXIT_PROC:
  SELECT ISNULL(@CERRMSGOUT,'') AS ERRMSG

END
-----END OF PROCEDURE SP_MERGE_MIRROR_BATCHDATA
