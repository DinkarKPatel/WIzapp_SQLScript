create PROCEDURE SP3S_WIP_REPORT
@CPRODUCTCODE VARCHAR(50),
@DFROMDT DATETIME,
@DTODT DATETIME 
AS
BEGIN


if object_id('SP3S_WIP_REPORT_opt','p') is not null
 begin

 EXEC SP3S_WIP_REPORT_opt @CPRODUCTCODE,@DFROMDT,@DTODT  
 RETURN  


 end
	IF OBJECT_ID('TEMPDB..#WIP_DETAILS','U') IS NOT NULL
		DROP TABLE #WIP_DETAILS
		
	
	SELECT A.PRODUCT_CODE,C.ORG_WIP_UID,A.WIP_UID,'ISSUE' AS XN_TYPE,MEMO_NO,RECEIPT_DT AS MEMO_DT,A.QUANTITY AS ISSUE_QUANTITY,
	CONVERT(NUMERIC(10,2),0) AS RECEIVE_QUANTITY,CONVERT(NUMERIC(10,2),0) AS JOBWORK_QUANTITY,CONVERT(NUMERIC(10,2),A.PURCHASE_PRICE*A.QUANTITY)*-1 AS MATERIAL_VALUE,CONVERT(NUMERIC(10,2),0) AS JOBWORK_VALUE
	INTO #WIP_DETAILS FROM SNC_CONSUMABLE_DET A JOIN SNC_MST B ON A.MEMO_ID=B.MEMO_ID
	JOIN WIP_PMT C ON C.WIP_UID=A.WIP_UID
	WHERE (@CPRODUCTCODE='' OR A.PRODUCT_CODE=@CPRODUCTCODE) AND RECEIPT_DT BETWEEN @DFROMDT AND @DTODT AND CANCELLED=0 AND A.WIP=1
	
	UNION ALL
	SELECT C.PRODUCT_CODE,D.WIP_UID AS ORG_WIP_UID,D.WIP_UID,'RECEIVE' AS XN_TYPE,MEMO_NO,RECEIPT_DT AS MEMO_DT,0 AS ISSUE_QUANTITY,A.QUANTITY AS RECEIVE_QUANTITY,
	0 AS JOBWORK_QUANTITY,CONVERT(NUMERIC(10,2),A.PURCHASE_PRICE*A.QUANTITY) AS MATERIAL_VALUE,CONVERT(NUMERIC(10,2),0) AS JOBWORK_VALUE
	FROM SNC_DET A JOIN SNC_MST B ON A.MEMO_ID=B.MEMO_ID
	JOIN SNC_BARCODE_DET C ON C.REFROW_ID=A.ROW_ID
	JOIN WIP_PMT D ON D.XN_ROW_ID=A.ROW_ID
	WHERE (@CPRODUCTCODE='' OR C.PRODUCT_CODE=@CPRODUCTCODE) AND  RECEIPT_DT BETWEEN @DFROMDT AND @DTODT AND CANCELLED=0 AND WIP=1

	UNION ALL
	SELECT A.PRODUCT_CODE,C.ORG_WIP_UID,A.WIP_UID,'JOBWORK RECEIVE' AS XN_TYPE,RECEIPT_NO AS MEMO_NO,RECEIPT_DT AS MEMO_DT,0 AS ISSUE_QUANTITY,0 AS RECEIVE_QUANTITY,
	A.QUANTITY AS JOBWORK_QUANTITY,0 AS MATERIAL_VALUE,CONVERT(NUMERIC(10,2),A.JOB_RATE*A.QUANTITY) AS JOBWORK_VALUE
	FROM JOBWORK_RECEIPT_DET A JOIN JOBWORK_RECEIPT_MST B ON A.RECEIPT_ID=B.RECEIPT_ID
	JOIN WIP_PMT C ON C.WIP_UID=A.WIP_UID
	WHERE (@CPRODUCTCODE='' OR A.PRODUCT_CODE=@CPRODUCTCODE) AND RECEIPT_DT BETWEEN @DFROMDT AND @DTODT AND CANCELLED=0 AND WIP=1

	UNION ALL
	SELECT A.PRODUCT_CODE,C.ORG_WIP_UID,A.WIP_UID,(CASE WHEN CNC_TYPE=1 THEN 'Ã‡ANCELLATION' ELSE 'UNCANCELLATION' END) AS XN_TYPE,
	B.CNC_MEMO_NO AS MEMO_NO,CNC_MEMO_DT AS MEMO_DT,(CASE WHEN CNC_TYPE=1 THEN QUANTITY ELSE 0 END) AS ISSUE_QUANTITY,
	(CASE WHEN CNC_TYPE=2 THEN QUANTITY ELSE 0 END) AS RECEIVE_QUANTITY,
	0 AS JOBWORK_QUANTITY,0 AS MATERIAL_VALUE,CONVERT(NUMERIC(10,2),0) AS JOBWORK_VALUE
	FROM ICD01106 A JOIN ICM01106 B ON A.CNC_MEMO_ID=B.CNC_MEMO_ID
	JOIN WIP_PMT C ON C.WIP_UID=A.WIP_UID
	WHERE (@CPRODUCTCODE='' OR A.PRODUCT_CODE=@CPRODUCTCODE) AND CNC_MEMO_DT BETWEEN @DFROMDT AND @DTODT AND CANCELLED=0 AND WIP=1	
	
	IF @CPRODUCTCODE<>''
	BEGIN		
		IF OBJECT_ID('TEMPDB..#TMPWIPDET','U') IS NOT NULL
			DROP TABLE #TMPWIPDET
		
		SELECT *,CONVERT(INT,0) AS SRNO,CONVERT(NUMERIC(10,2),0) AS CUM_CBS,CONVERT(NUMERIC(10,2),0) AS CUM_VALUE,CONVERT(NUMERIC(10,2),0) AS CUM_CBS_UID,CONVERT(NUMERIC(10,2),0) AS CUM_VALUE_UID,ROW_NUMBER() OVER ( ORDER BY ORG_WIP_UID,MEMO_DT ) AS RNO INTO #TMPWIPDET FROM 
		(
		SELECT ORG_WIP_UID,PRODUCT_CODE,XN_TYPE,MEMO_NO,MEMO_DT,ISSUE_QUANTITY,RECEIVE_QUANTITY,
		JOBWORK_QUANTITY,MATERIAL_VALUE,JOBWORK_VALUE FROM #WIP_DETAILS 
		
		UNION ALL
		SELECT C.ORG_WIP_UID,A.PRODUCT_CODE,'JOBWORK ISSUE' AS XN_TYPE,ISSUE_NO AS MEMO_NO,ISSUE_DT AS MEMO_DT,0 AS ISSUE_QUANTITY,0 AS RECEIVE_QUANTITY,
		A.QUANTITY*-1 AS JOBWORK_QUANTITY,0 AS MATERIAL_VALUE,CONVERT(NUMERIC(10,2),0) AS JOBWORK_VALUE
		FROM JOBWORK_ISSUE_DET A JOIN JOBWORK_ISSUE_MST B ON A.ISSUE_ID=B.ISSUE_ID
		JOIN WIP_PMT C ON C.WIP_UID=A.WIP_UID
		WHERE A.PRODUCT_CODE=@CPRODUCTCODE AND ISSUE_DT BETWEEN @DFROMDT AND @DTODT AND CANCELLED=0 AND WIP=1
		) A
			
						
		UPDATE A SET CUM_CBS=(SELECT SUM(RECEIVE_QUANTITY-ISSUE_QUANTITY) FROM #TMPWIPDET B WHERE B.RNO<=A.RNO),
		CUM_VALUE=(SELECT SUM(ISNULL(MATERIAL_VALUE,0)+ISNULL(JOBWORK_VALUE,0)) FROM #TMPWIPDET B WHERE B.RNO<=A.RNO )
		FROM #TMPWIPDET A

		UPDATE A SET CUM_CBS_UID=(SELECT SUM(RECEIVE_QUANTITY-ISSUE_QUANTITY) FROM #TMPWIPDET B WHERE B.ORG_WIP_UID=A.ORG_WIP_UID AND B.RNO<=A.RNO),
		CUM_VALUE_UID=(SELECT SUM(ISNULL(MATERIAL_VALUE,0)+ISNULL(JOBWORK_VALUE,0)) FROM #TMPWIPDET B WHERE B.ORG_WIP_UID=A.ORG_WIP_UID AND  B.RNO<=A.RNO )
		FROM #TMPWIPDET A
				
		SELECT * FROM #TMPWIPDET ORDER BY ORG_WIP_UID,MEMO_DT
		
		RETURN
	END	
	
	IF OBJECT_ID('TEMPDB..#WIP_STOCK','U') IS NOT NULL
		DROP TABLE #WIP_STOCK

	SELECT PRODUCT_CODE,SUM(RECEIVE_QUANTITY-ISSUE_QUANTITY) AS CBS,SUM(MATERIAL_VALUE+JOBWORK_VALUE) AS COST
	INTO #WIP_STOCK FROM #WIP_DETAILS A
	GROUP BY PRODUCT_CODE HAVING SUM(RECEIVE_QUANTITY-ISSUE_QUANTITY)<>0
				
	SELECT A.PRODUCT_CODE,ARTICLE_NO,ARTICLE_NAME,CONVERT(NUMERIC(10,2),ROUND(COST/CBS,2)) AS PURCHASE_PRICE,CBS,COST
	FROM #WIP_STOCK A
	JOIN SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE
	JOIN ARTICLE C ON C.ARTICLE_CODE=B.ARTICLE_CODE
	WHERE A.CBS>=.01
	ORDER BY PRODUCT_CODE
END
