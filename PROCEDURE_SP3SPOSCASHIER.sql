CREATE PROCEDURE SP3SPOSCASHIER
(     
  @CXNTYPE VARCHAR(10)='SLS'    
 ,@CXNID VARCHAR(40)    
)    
AS    
BEGIN    
    
IF @CXNTYPE!='SLS'      
   RETURN    
       
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED      
SET NOCOUNT ON    
DECLARE @CCOLNAME VARCHAR(MAX),@DTSQL NVARCHAR(MAX),@SALE_PERSON VARCHAR(1000),@SNO BIT,@PRINTER VARCHAR(100),@CMID VARCHAR(100)  
SET @SALE_PERSON=''    
SELECT TOP 1 @PRINTER=ISNULL(PRINTER_NAME,'') FROM GST_REPORT_CONFIG WHERE XN_TYPE=@CXNTYPE  
SET @SNO=0  
SELECT TOP 1 @CMID=CM_ID FROM DSD01106 (NOLOCK) WHERE DS_ID=@CXNID 

IF EXISTS(SELECT * FROM GST_XN_DETAIL (NOLOCK) WHERE DISPLAYNAME='BARCODE' AND XN_TYPE='SLS' AND ISVISIBLE=1)  
   SET @SNO=1  
--01 AUG 2017 : ORDER ISSUE WHEN BARCODE IS SET TO VISIBLE  
     
;WITH CTE AS    
(    
  SELECT TOP 1 E.EMP_NAME    
  FROM CMD01106 C(NOLOCK)     
  JOIN EMPLOYEE E(NOLOCK) ON E.EMP_CODE=C.EMP_CODE    
  WHERE C.CM_ID=@CMID--@CXNID    
)    
SELECT @SALE_PERSON=EMP_NAME FROM CTE    
SELECT @SALE_PERSON=''    
    
IF @SALE_PERSON=''    
   BEGIN    
     SELECT TOP 1 @SALE_PERSON=E.EMP_NAME  
     FROM CMD01106 C(NOLOCK)       
     JOIN EMPLOYEE E(NOLOCK) ON E.EMP_CODE=C.EMP_CODE      
     WHERE C.CM_ID=@CMID--@CXNID      
         
     SELECT TOP 1 @SALE_PERSON+=CASE ISNULL(E.EMP_NAME,'') WHEN '' THEN '' ELSE CASE LEN(@SALE_PERSON) WHEN 0 THEN '' ELSE ',' END+ISNULL(E.EMP_NAME,'') END  
     FROM CMD01106 C(NOLOCK)       
     JOIN EMPLOYEE E(NOLOCK) ON E.EMP_CODE=C.EMP_CODE1      
     WHERE CM_ID=@CMID--@CXNID      
         
     SELECT TOP 1 @SALE_PERSON+=CASE ISNULL(E.EMP_NAME,'') WHEN '' THEN '' ELSE CASE LEN(@SALE_PERSON) WHEN 0 THEN '' ELSE ',' END+ISNULL(E.EMP_NAME,'') END  
     FROM CMD01106 C(NOLOCK)       
     JOIN EMPLOYEE E(NOLOCK) ON E.EMP_CODE=C.EMP_CODE2      
     WHERE CM_ID=@CMID--@CXNID     
         
     SELECT @SALE_PERSON=LTRIM(RTRIM(@SALE_PERSON))    
     IF RIGHT(@SALE_PERSON,1)=','    
        SET @SALE_PERSON=LEFT(@SALE_PERSON,LEN(@SALE_PERSON)-1)    
     IF @SALE_PERSON<>''     
        SET @SALE_PERSON='You are attended by '+@SALE_PERSON    
   END     

SET @SALE_PERSON=''
SELECT @SALE_PERSON=COALESCE(@SALE_PERSON,'')+E.EMP_NAME+','
FROM
(   
SELECT DISTINCT C.EMP_CODE  FROM CMD01106 C WHERE C.CM_ID=@CXNID
UNION
SELECT DISTINCT C.EMP_CODE1 FROM CMD01106 C WHERE C.CM_ID=@CXNID
UNION
SELECT DISTINCT C.EMP_CODE2 FROM CMD01106 C WHERE C.CM_ID=@CXNID)C1
JOIN EMPLOYEE E(NOLOCK) ON E.EMP_CODE=C1.EMP_CODE WHERE ISNULL(E.EMP_NAME,'')<>''

SELECT @SALE_PERSON=LTRIM(RTRIM(@SALE_PERSON))      
IF RIGHT(@SALE_PERSON,1)=','      
   SET @SALE_PERSON=LEFT(@SALE_PERSON,LEN(@SALE_PERSON)-1)      
IF @SALE_PERSON<>''       
   SET @SALE_PERSON='You are attended by '+@SALE_PERSON     
   


DECLARE @PAYMODE VARCHAR(1000)    
  SET @PAYMODE=''    
  ;WITH CTE AS    
  (    
    SELECT 'CC' AS PAYMODE_NAME,SUM(AMOUNT) AMT     
    FROM PAYMODE_XN_DET A (NOLOCK)     
    JOIN PAYMODE_MST B (NOLOCK) ON A.PAYMODE_CODE=B.PAYMODE_CODE      
    --
    JOIN DSD01106 DD(NOLOCK) ON DD.CM_ID=A.MEMO_ID
    --
    WHERE A.XN_TYPE =@CXNTYPE 
    AND DD.DS_ID=@CXNID
    AND B.PAYMODE_GRP_CODE='0000002'  
    UNION  
    SELECT PAYMODE_NAME=CASE B.PAYMODE_NAME WHEN 'INR' THEN 'CASH' ELSE B.PAYMODE_NAME END    
    ,SUM(AMOUNT) AMT     
    FROM PAYMODE_XN_DET A (NOLOCK)     
    JOIN PAYMODE_MST B (NOLOCK) ON A.PAYMODE_CODE=B.PAYMODE_CODE      
    --
    JOIN DSD01106 DD(NOLOCK) ON DD.CM_ID=A.MEMO_ID
    --
    WHERE A.XN_TYPE =@CXNTYPE 
    AND DD.DS_ID=@CXNID
    AND B.PAYMODE_GRP_CODE!='0000002'  
    GROUP BY B.PAYMODE_NAME    
   )    
SELECT @PAYMODE=COALESCE(@PAYMODE,'')+PAYMODE_NAME+': '+DBO.CURR_GROUPING(AMT,',')+REPLICATE(CHAR(32),3) FROM CTE    
WHERE ISNULL(AMT,0)<>0  
   
   
   
   
     IF OBJECT_ID('TEMPDB..#DATASET1','U') IS NOT NULL
        DROP TABLE #DATASET1      
      --HEADER BLOCK    
     SELECT CMP.COMPANY_NAME,CMP.ADDRESS1,CMP.ADDRESS2,CMP.CITY,CMP.PHONES_FAX,CMP.TIN_NO,CMP.TAN_NO  
       ,CASE ISNULL(CMP.CIN,'') WHEN '' THEN '' ELSE 'CIN : '+CMP.CIN END AS CIN  
       ,CMP.LOGO_PATH  
       ,CASE ISNULL(L.LOC_GST_NO,'') WHEN '' THEN '' ELSE ''+L.LOC_GST_NO END AS LOC_GST_NO  
       ,(SELECT TOP 1 ISNULL(REGISTERED_ADD,'') FROM LOCATION L (NOLOCK) WHERE DEPT_ID=LEFT(@CXNID,2))REGISTERED_ADDRESS  
       ,CAST(0 AS NUMERIC(10,2)) AS REVERSE_CHARGES  
       ,CMM.CM_NO AS INV_NO  
       ,CASE ISNULL((SELECT TOP 1 DATE_WITH_TIME FROM GST_COMPANY_CONFIG WHERE XN_TYPE=@CXNTYPE),0)     
             WHEN 0 THEN 'DATE : '+CONVERT(VARCHAR,CMM.CM_DT,105)     
             ELSE        'DATE : '+CONVERT(VARCHAR,CMM.CM_DT,105)+' '+CONVERT(VARCHAR,CMM.CM_TIME,108)   
        END  
        AS INV_DT  
       ,ISNULL(LS.GST_STATE_NAME,'') AS LOC_GST_STATE_NAME  
       ,LS.GST_STATE_CODE AS LOC_GST_STATE_CODE  
       ,[PARTY_NAME]=DBO.GST_SLS_PARTY_NAME(CMM.CUSTOMER_CODE,'SLS','CUS')    
         
       --04 AUG 2017 -- DATE NOT SHOWING DUE TO BLANK PARTY ADDRESS  
       --,CASE WHEN INV_MODE=1 THEN DBO.CUST_ADDRESS(CMM.CUSTOMER_CODE,1) ELSE DBO.CUST_ADDRESS(LEFT(CMM.CM_ID,2),INV_MODE) END AS PARTY_ADDRESS  
       ,CASE WHEN ISNULL(CASE WHEN INV_MODE=1 THEN DBO.CUST_ADDRESS(CMM.CUSTOMER_CODE,1,0,'CUS')   
                              ELSE DBO.CUST_ADDRESS(LEFT(CMM.CM_ID,2),INV_MODE,0,'CUS')   
                         END  
                         ,''  
                         )='' THEN '.'  
             ELSE CASE WHEN INV_MODE=1 THEN DBO.CUST_ADDRESS(CMM.CUSTOMER_CODE,1,0,'CUS')   
                       ELSE DBO.CUST_ADDRESS(LEFT(CMM.CM_ID,2),INV_MODE,0,'CUS')   
                  END   
        END  
        AS PARTY_ADDRESS  
          
       ,CASE WHEN ISNULL(CASE WHEN INV_MODE=1 THEN DBO.CUST_ADDRESS(CMM.CUSTOMER_CODE,1,0,'CUS')   
                              ELSE DBO.CUST_ADDRESS(LEFT(CMM.CM_ID,2),INV_MODE,0,'CUS')   
                         END  
                         ,''  
                         )='' THEN '.'  
             ELSE CASE WHEN INV_MODE=1 THEN DBO.CUST_ADDRESS(CMM.CUSTOMER_CODE,1,0,'CUS')   
                       ELSE DBO.CUST_ADDRESS(LEFT(CMM.CM_ID,2),INV_MODE,0,'CUS')   
                  END   
        END  
        AS PARTY_ADDRESS1  
          
       ,CASE WHEN ISNULL(CASE WHEN INV_MODE=1 THEN DBO.CUST_ADDRESS(CMM.CUSTOMER_CODE,1,1,'CUS')   
                              ELSE DBO.CUST_ADDRESS(LEFT(CMM.CM_ID,2),INV_MODE,1,'CUS')   
                         END  
                         ,''  
                         )='' THEN '.'  
             ELSE CASE WHEN INV_MODE=1 THEN DBO.CUST_ADDRESS(CMM.CUSTOMER_CODE,1,1,'CUS')   
                       ELSE DBO.CUST_ADDRESS(LEFT(CMM.CM_ID,2),INV_MODE,1,'CUS')   
                  END   
        END  
        AS PARTY_ADDRESS2  
          
        ,CASE WHEN ISNULL(CASE WHEN INV_MODE=1 THEN DBO.CUST_ADDRESS(CMM.CUSTOMER_CODE,1,2,'CUS')   
                              ELSE DBO.CUST_ADDRESS(LEFT(CMM.CM_ID,2),INV_MODE,2,'CUS')   
                         END  
                         ,''  
                         )='' THEN '.'  
             ELSE CASE WHEN INV_MODE=1 THEN DBO.CUST_ADDRESS(CMM.CUSTOMER_CODE,1,2,'CUS')   
                       ELSE DBO.CUST_ADDRESS(LEFT(CMM.CM_ID,2),INV_MODE,2,'CUS')   
                  END   
        END  
        AS PARTY_ADDRESS3  
  
  
       ,CASE WHEN ISNULL(CASE WHEN INV_MODE=1 THEN DBO.CUST_ADDRESS(CMM.CUSTOMER_CODE,1,3,'CUS')   
                              ELSE DBO.CUST_ADDRESS(LEFT(CMM.CM_ID,2),INV_MODE,3,'CUS')   
                         END  
                         ,''  
                         )='' THEN '.'  
             ELSE CASE WHEN INV_MODE=1 THEN DBO.CUST_ADDRESS(CMM.CUSTOMER_CODE,1,3,'CUS')   
                       ELSE DBO.CUST_ADDRESS(LEFT(CMM.CM_ID,2),INV_MODE,3,'CUS')   
                  END   
        END  
        --PHONE
        +CASE WHEN ISNULL(CD.PHONE1,'')<>'' OR ISNULL(CD.PHONE2,'')<>'' OR ISNULL(CD.MOBILE,'')<>'' 
              THEN '; '+CASE WHEN ISNULL(CD.PHONE1,'')<>'' THEN 'PHONE '+CD.PHONE1  
                             ELSE CASE WHEN ISNULL(CD.PHONE2,'')<>'' THEN 'PHONE '+CD.PHONE2  
                                       ELSE CASE WHEN ISNULL(CD.MOBILE,'')<>'' THEN 'MOBILE: '+CD.MOBILE
                                                 ELSE ''
                                            END
                                  END
                        END
              ELSE ''
         END       
        AS PARTY_CITY
        
       --04 AUG 2017 -- DATE NOT SHOWING DUE TO BLANK PARTY ADDRESS  
         
       --05 AUG 2017 : CORRECTION OF PARTY GSTIN VALUE  
       --,CASE WHEN INV_MODE=1 THEN LMP.AC_GST_NO ELSE TL.LOC_GST_NO END  
       ,CASE LEN(ISNULL(CD.CUS_GST_NO,'')) WHEN 0 THEN '' ELSE 'GSTIN: '+ISNULL(CD.CUS_GST_NO,'') END  
       AS PARTY_GST_NO  
       --05 AUG 2017 : CORRECTION OF PARTY GSTIN VALUE  
         
       ,CMM.PARTY_STATE_CODE  
       ,(SELECT TOP 1 GST_STATE_NAME FROM GST_STATE_MST WHERE GST_STATE_CODE=CMM.PARTY_STATE_CODE) AS PARTY_STATE_NAME  
       ,CASE WHEN CMM.CANCELLED =1 THEN 'CANCELLED' ELSE '' END AS CANCELLED  
       --HEADER ON REGISTED_GST: 05 AUG 2017  
       ,CASE SUBSTRING(CMM.CM_NO,5,1)   
             WHEN 'N' THEN 'CREDIT NOTE'   
             --WHEN 'R' THEN 'CREDIT NOTE'
             WHEN 'E' THEN 'ESTIMATE'
             ELSE CASE ISNULL(L.REGISTERED_GST,0) WHEN 1 THEN (SELECT TOP 1 CAPTION FROM GST_XN_CAPTION WHERE XN_TYPE=@CXNTYPE AND [MODE]=1) ELSE (SELECT TOP 1 CAPTION FROM GST_XN_CAPTION WHERE XN_TYPE=@CXNTYPE AND [MODE]=0) END  
        END AS INVOICE_TYPE  
       --HEADER ON REGISTED_GST: 05 AUG 2017  
       ,ISNULL(LS.UT,0) AS UT  
       ,(SELECT TOP 1 IS_SIGNATURE FROM GST_SLS_CUSTOMER_CONFIG WHERE XN_TYPE=@CXNTYPE)CUST_SIGNATURE
       ,SLS_CONFIG.LOGO AS LOGO
	   ,SLS_CONFIG.NAME AS NAME
	   ,SLS_CONFIG.ADDRESS1 AS PRINT_ADDRESS1
	   ,SLS_CONFIG.TELEPHONE1 AS TELEPHONE1
       ,SLS_CONFIG.CIN_NO AS CIN_NO
	   ,SLS_CONFIG.DATE_WITH_TIME AS DATE_WITH_TIME
	   ,SLS_CONFIG.PRINT_SALE_PERSON AS PRINT_SALE_PERSON
	   ,SLS_CONFIG.PRINT_AUTO_CUT_DATE AS PRINT_AUTO_CUT_DATE
	   ,SLS_CONFIG.BILL_MRP AS PRINT_BILL_MRP
	   ,SLS_CONFIG.BILL_DISCOUNT AS PRINT_BILL_DISCOUNT
	   ,SLS_CONFIG.BILL_TAXABLE AS PRINT_BILL_TAXABLE
	   ,SLS_CONFIG.ALL_SHOW AS PRINT_ALL_SHOW
	   ,SLS_CONFIG.ITEM_TAXABLE AS PRINT_ITEM_TAXABLE
	   ,SLS_CONFIG.ITEM_GST_RATE AS PRINT_ITEM_GST_RATE
	   ,SLS_CONFIG.DISC_PER AS PRINT_DISC_PER
	   ,SLS_CONFIG.CGST_AMOUNT AS PRINT_CGST_AMOUNT
	   ,SLS_CONFIG.SGST_AMOUNT AS PRINT_SGST_AMOUNT
	   ,SLS_CONFIG.IGST_AMOUNT AS PRINT_IGST_AMOUNT
	   ,SLS_CONFIG.AMT_BEFORE_GST AS PRINT_AMT_BEFORE_GST
       
       ,@SALE_PERSON SALE_PERSON    
       ,(SELECT TOP 1 ISNULL(IS_ENABLED,0) FROM GST_TNC WHERE XN_TYPE=@CXNTYPE)PRINT_TERM      
       ,(SELECT TOP 1 ISNULL(PRINT_COPIES,0) FROM GST_SLS_CUSTOMER_CONFIG WHERE XN_TYPE=@CXNTYPE)PRINT_COPIES    
       --15 JUL 2017    
       ,CASH_TENDERED=CASE (SELECT TOP 1 ISNULL(CASH_TENDERED,0) FROM CMM01106 (NOLOCK) WHERE CM_ID=@CXNID) WHEN 0 THEN '' ELSE 'CASH TENDERED: '+CAST((SELECT TOP 1 ISNULL(CASH_TENDERED,0) FROM CMM01106 (NOLOCK) WHERE CM_ID=@CXNID) AS VARCHAR) END        
       ,(SELECT TOP 1 ISNULL(VALUE,0) FROM CONFIG(NOLOCK) WHERE CONFIG_OPTION='ASK_CASH_TENDERED' ) AS PRINTCASHTENDER    
       ,CASE ISNULL(CMM.PAYBACK,0) WHEN 0 THEN '' ELSE 'PAYBACK: '+CAST(ISNULL(CMM.PAYBACK,0) AS VARCHAR) END AS PAYBACK  
       ,L.REGISTERED_GST [IS_REGISTERED]    
       ,@PRINTER AS PRINTER_NAME
       ,DM.DS_NO
       ,@PAYMODE PAYMENTS
       INTO #DATASET1
  FROM CMM01106 CMM (NOLOCK) 
  LEFT JOIN DSD01106 DD(NOLOCK) ON DD.CM_ID=CMM.CM_ID   
  LEFT JOIN DSM01106 DM (NOLOCK) ON DD.DS_ID=DM.DS_ID
  LEFT JOIN (SELECT TOP 1 XN_TYPE,LOGO,NAME,ADDRESS1,TELEPHONE1,CIN_NO,DATE_WITH_TIME,PRINT_SALE_PERSON,PRINT_AUTO_CUT_DATE,BILL_MRP,BILL_DISCOUNT,BILL_TAXABLE,ALL_SHOW,ITEM_TAXABLE,ITEM_GST_RATE,DISC_PER,CGST_AMOUNT,SGST_AMOUNT,IGST_AMOUNT,AMT_BEFORE_GST
             FROM GST_COMPANY_CONFIG 
             WHERE XN_TYPE='SLS'
             )SLS_CONFIG ON SLS_CONFIG.XN_TYPE=@CXNTYPE
  LEFT JOIN CUSTDYM CD (NOLOCK) ON CD.CUSTOMER_CODE=CMM.CUSTOMER_CODE       
  LEFT JOIN COMPANY CMP (NOLOCK) ON CMP.COMPANY_CODE='01'        
  LEFT OUTER JOIN LOCATION L (NOLOCK) ON L.DEPT_ID =LEFT (CMM.CM_ID,2)       
  LEFT JOIN GST_STATE_MST LS (NOLOCK) ON LS.GST_STATE_CODE =L.GST_STATE_CODE    
  LEFT JOIN LMP01106 LMP (NOLOCK) ON LMP.AC_CODE=CMM.AC_CODE        
  LEFT JOIN GST_STATE_MST CS (NOLOCK) ON CS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE    
  LEFT JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE=LMP.AC_CODE        
  LEFT JOIN AREA CUSAR (NOLOCK) ON LMP.AREA_CODE=CUSAR.AREA_CODE        
  LEFT JOIN CITY CUSCT (NOLOCK) ON CUSAR.CITY_CODE=CUSCT.CITY_CODE       
  LEFT OUTER JOIN LOCATION TL (NOLOCK) ON TL.DEPT_ID=LEFT(CMM.CM_ID,2)       
  LEFT JOIN AREA TLAR (NOLOCK) ON TL.AREA_CODE=TLAR.AREA_CODE        
  LEFT JOIN CITY TLCT (NOLOCK) ON TLAR.CITY_CODE=TLCT.CITY_CODE       
  LEFT JOIN GST_STATE_MST TS (NOLOCK) ON TS.GST_STATE_CODE=TL.GST_STATE_CODE    
  WHERE CMM.CM_ID=@CMID--@CXNID      
  
  UPDATE #DATASET1 SET ADDRESS1=REPLACE(ADDRESS1,'(WC)','')
  ,ADDRESS2=REPLACE(ADDRESS2,'(WC)','')
  ,CITY=REPLACE(CITY,'(WC)','')
  ,PARTY_ADDRESS1=REPLACE(PARTY_ADDRESS1,'(WC)','')
  ,PARTY_ADDRESS2=REPLACE(PARTY_ADDRESS2,'(WC)','')
  ,PARTY_ADDRESS3=REPLACE(PARTY_ADDRESS3,'(WC)','')
  ,PARTY_CITY=REPLACE(PARTY_CITY,'(WC)','')
  UPDATE #DATASET1 SET [PARTY_NAME]=REPLACE(REPLACE([PARTY_NAME],';CUS',''),';AC','')  
  SELECT * FROM #DATASET1
    
 --DETAILS BLOCK    
      
  --04 AUG 2017    
  SELECT @CCOLNAME=ISNULL(@CCOLNAME+'+','  ')+SOURCENAME+'.'+QUOTENAME(COLUMNNAME) +'+'+''''+COLUMNSEPARATOR+''''+' '    
  FROM GST_XN_DETAIL (NOLOCK) WHERE XN_TYPE =@CXNTYPE AND ISVISIBLE=1  
  ORDER BY DISPLAYORDER    
  --04 AUG 2017  
      
  SELECT TOP 1 @CCOLNAME=LEFT(@CCOLNAME,LEN(@CCOLNAME)-3-LEN(COLUMNSEPARATOR))    
  FROM GST_XN_DETAIL (NOLOCK)   
  WHERE XN_TYPE=@CXNTYPE  
    
  --SET @DTSQL=N'SELECT ROW_NUMBER() OVER (ORDER BY '+@CCOLNAME+' ) AS SR_NO,'    
    
  --01 AUG 2017 : ORDER ISSUE WHEN BARCODE IS SET TO VISIBLE     
  SET @DTSQL=N'SELECT ROW_NUMBER() OVER (ORDER BY '+CASE @SNO WHEN 0 THEN @CCOLNAME ELSE 'CMD.SR_NO' END+' ) AS SR_NO,'    
  --01 AUG 2017 : ORDER ISSUE WHEN BARCODE IS SET TO VISIBLE     
    
  SET @DTSQL+=@CCOLNAME+' AS PARTICULARS ,    
      CMD.HSN_CODE [HSN_CODE],    
      CAST(SUM(CMD.QUANTITY) AS DECIMAL(10,2))QUANTITY,    
      UOM.UOM_NAME UOM_NAME,    
      CMD.MRP RATE,    
      CAST(ROUND((ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)+ISNULL(CMD.DISCOUNT_AMOUNT,0))/(CMD.MRP*CMD.QUANTITY)*100,2) AS NUMERIC(10,2))[LESS_DISCOUNT],    
      CAST(SUM(ISNULL(CMD.XN_VALUE_WITHOUT_GST,0))AS DECIMAL(18,2))[TAXABLE_VALUE],    
      CAST(DBO.CURR_GROUPING(ROUND(CMD.GST_PERCENTAGE,2),'''') AS VARCHAR)+''%''[GST],    

      --CAST(SUM(CMD.NET-ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS NUMERIC(10,2))
      SUM(CASE CMD.TAX_METHOD WHEN 1 THEN CMD.NET-ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0) 
							  ELSE CMD.XN_VALUE_WITHOUT_GST
							       +CMD.IGST_AMOUNT+CMD.CGST_AMOUNT+CMD.SGST_AMOUNT 
          END)
      AS [ITEM_NET_AMT],

      ''''AS ALIAS,    
      EMPLOYEE.EMP_NAME AS SALEPERSON1,    
      EMPLOYEE1.EMP_NAME AS SALEPERSON2,     
      EMPLOYEE2.EMP_NAME AS SALEPERSON3,    
      SKU.PRODUCT_CODE AS PARTICULARSNEW,    
      (CASE WHEN CMD.TAX_METHOD=1 THEN SECTIONM.SECTION_NAME+'' - ''+SECTIOND.SUB_SECTION_NAME     
            ELSE ''*'' + SECTIONM.SECTION_NAME+'' - ''+SECTIOND.SUB_SECTION_NAME END)     
      AS SUBSECTIONNEW
      
      ,CAST(CAST(ROUND((SUM(ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)+ISNULL(CMD.DISCOUNT_AMOUNT,0))),2) AS NUMERIC(10,2)) AS VARCHAR)[DISCOUNT_AMOUNT]    
      
      ,REF_NO=CASE WHEN ISNULL(CMD.REF_SLS_MEMO_DT,''1900-01-01'')<>''1900-01-01''
                     THEN ''REF NO: ''+LTRIM(RTRIM(ISNULL(CMD.REF_SLS_MEMO_NO,'''')))+'' / ''+CONVERT(VARCHAR,ISNULL(CMD.REF_SLS_MEMO_DT,''1900-01-01''),105) 
                   ELSE ''''
              END
	  ,ISNULL(CMM.CM_NO,'''') AS BILL_NO
      FROM CMD01106 CMD (NOLOCK)     
      JOIN CMM01106 CMM (NOLOCK) ON CMM.CM_ID=CMD.CM_ID     
      JOIN DSD01106 DD (NOLOCK) ON DD.CM_ID=CMM.CM_ID
      JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =CMD.PRODUCT_CODE       
      JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE =SKU.ARTICLE_CODE       
      JOIN UOM (NOLOCK) ON UOM.UOM_CODE =ARTICLE.UOM_CODE       
      JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE=SECTIOND.SUB_SECTION_CODE      
      JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE=SECTIONM.SECTION_CODE      
      LEFT JOIN LOCATION TL (NOLOCK) ON TL.DEPT_ID=LEFT(CMM.CM_ID,2)    
	  LEFT JOIN GST_STATE_MST LS (NOLOCK) ON LS.GST_STATE_CODE=LEFT(TL.LOC_GST_NO,2)    
	  LEFT JOIN EMPLOYEE ON EMPLOYEE.EMP_CODE=CMD.EMP_CODE     
	  LEFT JOIN EMPLOYEE EMPLOYEE1 ON EMPLOYEE1.EMP_CODE=CMD.EMP_CODE1     
	  LEFT JOIN EMPLOYEE EMPLOYEE2 ON EMPLOYEE2.EMP_CODE=CMD.EMP_CODE2        
	  LEFT OUTER JOIN PARA1 ON PARA1.PARA1_CODE=SKU.PARA1_CODE    
	  LEFT OUTER JOIN PARA2 ON PARA2.PARA2_CODE=SKU.PARA2_CODE    
	  LEFT OUTER JOIN PARA3 ON PARA3.PARA3_CODE=SKU.PARA3_CODE    
	  LEFT OUTER JOIN PARA4 ON PARA4.PARA4_CODE=SKU.PARA4_CODE    
	  LEFT OUTER JOIN PARA5 ON PARA5.PARA5_CODE=SKU.PARA5_CODE    
	  LEFT OUTER JOIN PARA6 ON PARA6.PARA6_CODE=SKU.PARA6_CODE    
	  WHERE DD.DS_ID='''+@CXNID+'''    
	  GROUP BY '  
	  +/*01 AUG 2017 : ORDER ISSUE*/CASE @SNO WHEN 0 THEN '' ELSE 'CMD.SR_NO,' END/*01 AUG 2017 : ORDER ISSUE*/  
	  +@CCOLNAME+',UOM.UOM_NAME,CMD.HSN_CODE,CMD.MRP    
      ,CAST(ROUND((ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)+ISNULL(CMD.DISCOUNT_AMOUNT,0))/(CMD.MRP*CMD.QUANTITY)*100,2) AS NUMERIC(10,2))    
      ,CAST(DBO.CURR_GROUPING(ROUND(CMD.GST_PERCENTAGE,2),'''') AS VARCHAR)+''%''      
      ,EMPLOYEE.EMP_NAME,EMPLOYEE1.EMP_NAME,EMPLOYEE2.EMP_NAME,SKU.PRODUCT_CODE    
      ,(CASE WHEN CMD.TAX_METHOD=1 THEN SECTIONM.SECTION_NAME+'' - ''+SECTIOND.SUB_SECTION_NAME     
             ELSE ''*'' + SECTIONM.SECTION_NAME+'' - ''+SECTIOND.SUB_SECTION_NAME END)     
      ,ISNULL(CMD.REF_SLS_MEMO_DT,''1900-01-01'')
      ,ISNULL(CMD.REF_SLS_MEMO_NO,'''')       
      ,ISNULL(CMM.CM_NO,'''')
      ORDER BY 1'    
     
      SET @DTSQL=N'SELECT CMM.CM_NO BILL_NO,SUM(CMD.QUANTITY+CMD.FOC_QUANTITY)QUANTITY
                  --,SUM(CMD.NET)ITEM_NET_AMT
                  ,SUM(CASE CMD.TAX_METHOD WHEN 1 THEN CMD.NET-ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0) ELSE CMD.XN_VALUE_WITHOUT_GST +CMD.IGST_AMOUNT+CMD.CGST_AMOUNT+CMD.SGST_AMOUNT END)ITEM_NET_AMT
                  FROM CMD01106 CMD (NOLOCK)     
                  JOIN CMM01106 CMM (NOLOCK) ON CMM.CM_ID=CMD.CM_ID AND CMM.CANCELLED=0    
                  JOIN DSD01106 DD (NOLOCK) ON DD.CM_ID=CMM.CM_ID
                  WHERE DD.DS_ID='''+@CXNID+'''
                  GROUP BY CMM.CM_NO ORDER BY 1'
                  
      PRINT @DTSQL    
      EXEC SP_EXECUTESQL @DTSQL    
    
  --3 EXISTING    
  SELECT SUM(RD.NET) AS PACKSLIPAMOUNT, RM.CM_NO AS PACKSLIPNO  
  , SUM(RD.QUANTITY+ISNULL(RD.FOC_QUANTITY,0)) PACKSLIPQTY    
  FROM  RPS_MST RM (NOLOCK) 
  JOIN RPS_DET RD(NOLOCK) ON RM.CM_ID=RD.CM_ID  
  JOIN DSD01106 DD(NOLOCK) ON DD.DS_ID=RM.CM_ID     
  WHERE DD.DS_ID=@CXNID AND ISNULL(RM.REF_CM_ID,'')<>''
  GROUP BY RM.CM_NO
    
  --6 ADD NEW AS BLOCK 4    
  SELECT *    
  ,[IGST_PER]=CASE ISNULL([IGST_AMOUNT],0) WHEN 0 THEN '0%' WHEN [GST_COLLECTION] THEN GST ELSE GST END    
  ,[CGST_PER]=CASE ISNULL([CGST_AMOUNT],0) WHEN 0 THEN '0%' ELSE DBO.CURR_GROUPING(ROUND(CAST(REPLACE([GST],'%','') AS DECIMAL(10,2))/2,2),'')+'%' END    
  ,[SGST_PER]=CASE ISNULL([SGST_AMOUNT],0) WHEN 0 THEN '0%' ELSE DBO.CURR_GROUPING(ROUND(CAST(REPLACE([GST],'%','') AS DECIMAL(10,2))/2,2),'')+'%' END    
FROM    
  (SELECT CAST(DBO.CURR_GROUPING(GST_PERCENTAGE,'') AS VARCHAR)+'%'[GST]    
  --31 JUL 2017    
  ,ISNULL(SUM(XN_VALUE_WITHOUT_GST),0)
  +(SELECT SUM(ATD_CHARGES) FROM CMM01106(NOLOCK) WHERE CM_ID=@CXNID)
  AS [TAXABLE_VALUES]    
  ,ISNULL(SUM(CGST_AMOUNT),0)[CGST_AMOUNT]     
  ,ISNULL(SUM(SGST_AMOUNT),0)[SGST_AMOUNT]     
  ,ISNULL(SUM(IGST_AMOUNT),0)[IGST_AMOUNT]    
  ,ISNULL(SUM(CGST_AMOUNT+SGST_AMOUNT+IGST_AMOUNT),0)    
  +(SELECT ISNULL(CMM01106.OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(CMM01106.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(CMM01106.OTHER_CHARGES_SGST_AMOUNT,0) FROM CMM01106 (NOLOCK) WHERE CM_ID=@CXNID)  
  AS GST_COLLECTION  
  FROM CMD01106 (NOLOCK) 
  JOIN DSD01106 DD(NOLOCK) ON DD.CM_ID=CMD01106.CM_ID
  WHERE DS_ID=@CXNID    
  GROUP BY CAST(DBO.CURR_GROUPING(GST_PERCENTAGE,'') AS VARCHAR))GST    
        
  --TERMS AND CONDITIONS    
  SELECT TNC_1,TNC_2,TNC_3,TNC_4,TNC_5,TNC_6 FROM GST_TNC WHERE XN_TYPE=@CXNTYPE    
    
  --QUOTATIONS    
  SELECT QUOTATION1 [QUOTATION1],QUOTATION2 [QUOTATION2]    
  ,(SELECT TOP 1 ISNULL(REGISTERED_ADD,'') FROM LOCATION L (NOLOCK) WHERE DEPT_ID=LEFT(@CXNID,2))REGISTERED_ADDRESS    
  FROM GST_QUOTATION_MST WHERE XN_TYPE=@CXNTYPE    
      
   IF OBJECT_ID('TEMPDB..#A','U') IS NOT NULL
      DROP TABLE #A
   
   SELECT CMP.COMPANY_NAME,CMP.ADDRESS1,CMP.ADDRESS2,CMP.CITY+'-'+CMP.PIN AS CITY,CMP.PHONES_FAX,CMP.TIN_NO,CMP.TAN_NO      
   ,CMP.CIN,CMP.LOGO_PATH,RTRIM(LTRIM(CUS.CUSTOMER_TITLE+' '+CUS.CUSTOMER_FNAME+' '+CUS.CUSTOMER_LNAME)) AS CUSTOMER      
   ,RTRIM(LTRIM(CUS.ADDRESS1+' '+CUS.ADDRESS2+' '+CUSCT.CITY
    +' '
    +CASE WHEN CUS.MOBILE<>'' THEN 'MOB:-'+CUS.MOBILE ELSE '' END)) 
    AS CUSTOMERADDRESS
   ,CMM.CM_NO AS [NO]
   ,CONVERT(VARCHAR,CMM.CM_DT,105) AS DATE
   ,RIGHT(CONVERT(VARCHAR,CMM.CM_TIME,100),7) AS TIME   
   ,(SELECT SUM(XN_VALUE_WITHOUT_GST) FROM CMD01106 (NOLOCK) WHERE CM_ID=@CXNID)
   +ISNULL(CMM.ATD_CHARGES,0) SUBTOTAL    
   ,NET_AMOUNT=CASE SUBSTRING(CM_NO,5,1) WHEN 'N' THEN ABS(CMM.NET_AMOUNT) ELSE CMM.NET_AMOUNT END    
   ,CMM.REMARKS    
   ,CONVERT(NUMERIC(18,2),CMM.DISCOUNT_PERCENTAGE) AS DISCOUNT_PERCENTAGE      
   ,CONVERT(NUMERIC(18,2),CMM.DISCOUNT_AMOUNT) AS DISCOUNT_AMOUNT    
   ,CMM.ATD_CHARGES AS OTHERCHARGES    
   ,ROUND_OFF AS ROUND_OFF    
   ,'' AS SALEPERSON ,'' AS SALEPERSON2,'' AS SALEPERSON3,@PAYMODE AS PAYMENTS    
   ,'OUT : 1.00  PCS' AS OUTQUANTITY
   ,'IN : 1.00  PCS' AS INQUANTITY
   ,CMP.EMAIL_ID,U.USERNAME    
   ,CUS.USER_CUSTOMER_CODE    
   ,CMM.CASH_TENDERED    
   ,ISNULL(CMM.PAYBACK,0)AS PAYBACK    
   ,CMM.CM_DT    
   ,CMD.EXCLUSIVEAMOUNT AS TAX_AMOUNT    
   ,CMD.INCLUSIVEAMOUNT  
   ,CMD.EXCLUSIVEAMOUNT    
   ,CMP.BL_COMPANY_NAME    
   ,DBO.FN_CASHMEMO_HEADER_CAPTION(@CXNID) AS CASHMEMO_HEADER_CAPTION
   ,ISNULL(CMM.OTHER_CHARGES_IGST_AMOUNT,0)+(SELECT SUM(IGST_AMOUNT) FROM CMD01106 (NOLOCK) WHERE CM_ID=@CXNID)IGST_COLLECTION
   ,ISNULL(CMM.OTHER_CHARGES_CGST_AMOUNT,0)+(SELECT SUM(CGST_AMOUNT) FROM CMD01106 (NOLOCK) WHERE CM_ID=@CXNID)CGST_COLLECTION    
   ,ISNULL(CMM.OTHER_CHARGES_SGST_AMOUNT,0)+(SELECT SUM(SGST_AMOUNT) FROM CMD01106 (NOLOCK) WHERE CM_ID=@CXNID)SGST_COLLECTION    
   ,(SELECT SUM(QUANTITY*MRP) FROM CMD01106 (NOLOCK) WHERE CM_ID=@CXNID)TOTAL_MRP             
   INTO #A         
   FROM CMM01106 CMM (NOLOCK)   
   JOIN DSD01106 DD(NOLOCK) ON CMM.CM_ID=DD.CM_ID  
   LEFT OUTER JOIN      
   (      
     SELECT CM_ID,     
     SUM(TAX_AMOUNT) AS TAX_AMOUNT,      
     SUM (CASE WHEN TAX_METHOD=1 THEN (TAX_AMOUNT)ELSE 0 END)AS INCLUSIVEAMOUNT,      
     SUM (CASE WHEN TAX_METHOD=2 THEN (TAX_AMOUNT)ELSE 0 END)AS EXCLUSIVEAMOUNT       
     FROM CMD01106 (NOLOCK)          
     GROUP BY CM_ID    
   ) CMD ON CMD.CM_ID = CMM.CM_ID         
   JOIN USERS U (NOLOCK) ON U.USER_CODE=CMM.USER_CODE      
   JOIN COMPANY CMP (NOLOCK) ON CMP.COMPANY_CODE='01'      
   JOIN CUSTDYM CUS (NOLOCK) ON CMM.CUSTOMER_CODE=CUS.CUSTOMER_CODE      
   JOIN AREA CUSAR (NOLOCK) ON CUS.AREA_CODE=CUSAR.AREA_CODE      
   JOIN CITY CUSCT (NOLOCK) ON CUSAR.CITY_CODE=CUSCT.CITY_CODE      
   WHERE --CMM.CM_ID=@CXNID    
   DD.DS_ID=@CXNID
   
   UPDATE #A SET ADDRESS1=REPLACE(ADDRESS1,'(WC)','')
   ,ADDRESS2=REPLACE(ADDRESS2,'(WC)','')
   ,CITY=REPLACE(CITY,'(WC)','')
   ,CUSTOMERADDRESS=REPLACE(CUSTOMERADDRESS,'(WC)','')

   SELECT TOP 1 * FROM #A    
   
   SELECT *     
   FROM    
   (    
     SELECT CASE OH_NAME WHEN 'OC' THEN 'OTHER CHARGES' ELSE OH_NAME END AS OH_NAME    
     ,HSN_CODE AS HSNSAC_CODE    
     ,OH_GST_PER=CASE OH_NAME WHEN 'OC' THEN OTHER_CHARGES_GST_PERCENTAGE END    
     ,OH_SGST_AMOUNT=CASE OH_NAME WHEN 'OC' THEN ISNULL(OTHER_CHARGES_SGST_AMOUNT,0) END    
     ,OH_CGST_AMOUNT=CASE OH_NAME WHEN 'OC' THEN ISNULL(OTHER_CHARGES_CGST_AMOUNT,0) END    
     ,OH_IGST_AMOUNT=CASE OH_NAME WHEN 'OC' THEN ISNULL(OTHER_CHARGES_IGST_AMOUNT,0) END    
     FROM GST_OH_CONFIG,CMM01106 (NOLOCK)    
     WHERE CM_ID=@CXNID    
  )T    
  WHERE ISNULL(OH_GST_PER,0)<>0    
       
SET NOCOUNT OFF      
END      
--END OF PROCEDURE - SP3SGSTSLSREPORT
