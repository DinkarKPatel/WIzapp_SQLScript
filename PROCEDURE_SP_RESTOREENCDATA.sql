CREATE PROCEDURE SP_RESTOREENCDATA
@CSOURCEDB VARCHAR(100),
@CRETCMD NVARCHAR(1000) OUTPUT
--WITH ENCRYPTION
AS
BEGIN
	
	DECLARE @NSTEP INT,@CTRGNAME VARCHAR(100)
	
	--- FIRSTLY DROP DEFAULT & CHECK CONSTRAINTS IN THE CURRENT DATABASE
	
	SET @CSOURCEDB=@CSOURCEDB+'.DBO.'
		
	SET @CRETCMD=''
	
	BEGIN TRY
		
		SET @NSTEP=1
		
		DECLARE @CONSTID VARCHAR(500),@CTABLENAME VARCHAR(500), @CONSTNAME VARCHAR(500),@CCMD NVARCHAR(MAX),
		@CINSERTSTR NVARCHAR(MAX),@BPROCEED BIT
		
		--- FIRSTLY DROP FOREIGN KEY CONSTRAINTS IN THE CURRENT DATABASE
		DECLARE FKEYCUR CURSOR FOR
		SELECT C.NAME AS CHILDTABLENAME,B.NAME AS CONSTNAME
		  FROM SYSREFERENCES A    
		  JOIN SYSOBJECTS B ON A.CONSTID = B.ID    
		  JOIN SYSOBJECTS C ON A.FKEYID = C.ID    
		  JOIN SYSOBJECTS D ON A.RKEYID = D.ID    
		  JOIN SYSCOLUMNS E ON A.FKEY1 = E.COLID AND A.FKEYID = E.ID    
		  JOIN SYSCOLUMNS F ON A.RKEY1 = F.COLID AND A.RKEYID = F.ID    
		  JOIN (SELECT NAME,CONVERT(NUMERIC(1),ISNULL(OBJECTPROPERTY ( OBJECT_ID(NAME),'CNSTISNOTTRUSTED'),0)) AS CNSTISNOTTRUSTED   
				FROM SYSOBJECTS WHERE XTYPE IN ('C','D','F','UQ','PK')) G ON G.NAME=B.NAME  
		  WHERE DB_NAME() NOT LIKE ('%YTD%') 

		OPEN FKEYCUR
		FETCH NEXT FROM FKEYCUR INTO @CTABLENAME,@CONSTNAME
		

		SET @NSTEP=4		
		
		WHILE @@FETCH_STATUS=0
		BEGIN
			
			SET @CCMD=N'ALTER TABLE '+ @CTABLENAME +N' DROP CONSTRAINT '+ @CONSTNAME
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			FETCH NEXT FROM FKEYCUR INTO @CTABLENAME,@CONSTNAME
		END
		CLOSE FKEYCUR
		DEALLOCATE FKEYCUR
		
		
		SET @NSTEP=5
		
		--THEN DROP TRIGGERS IN CURRENT DATABASE
		DECLARE TRGCUR CURSOR FOR
		SELECT NAME FROM SYSOBJECTS WHERE XTYPE='TR'
		
		OPEN TRGCUR

		FETCH NEXT FROM TRGCUR INTO @CTRGNAME

		SET @NSTEP=6
		
		WHILE @@FETCH_STATUS=0
		BEGIN
			
			SET @CCMD=N'DROP TRIGGER '+ @CTRGNAME
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			
			FETCH NEXT FROM TRGCUR INTO @CTRGNAME
		END
		CLOSE TRGCUR
		DEALLOCATE TRGCUR
		
		BEGIN TRANSACTION
		
		SET @NSTEP=7
		
		-- FINALLY DELETE DATA FROM CURRENT TABLES & IMPORT FROM SOURCE DATABASE
		--DECLARE TNAMECUR CURSOR FOR SELECT NAME AS TABLENAME FROM SYSOBJECTS 
		--WHERE XTYPE IN ('U') AND NOT (LEFT(NAME,3)='SYS' AND RIGHT(NAME,2)='LO') ORDER BY NAME
		BEGIN TRY
			DECLARE TNAMECUR CURSOR FOR SELECT NAME AS TABLENAME FROM SYSOBJECTS   
			WHERE XTYPE IN ('U') AND NOT (LEFT(NAME,3)='SYS' AND RIGHT(NAME,2)='LO') ORDER BY NAME  
		END TRY
		BEGIN CATCH
			CLOSE TNAMECUR  
			DEALLOCATE TNAMECUR  
		  
			DECLARE TNAMECUR CURSOR FOR SELECT NAME AS TABLENAME FROM SYSOBJECTS   
			WHERE XTYPE IN ('U') AND NOT (LEFT(NAME,3)='SYS' AND RIGHT(NAME,2)='LO') ORDER BY NAME  
		END CATCH
		
		OPEN TNAMECUR
		FETCH NEXT FROM TNAMECUR INTO @CTABLENAME

		
		WHILE @@FETCH_STATUS=0
		BEGIN
			SET @NSTEP=8
						
			IF @CTABLENAME IN ('LOCATION','USERS','MODULES','LOCUSERS','REPORTS')
				GOTO LBLNEXT
				
			SET @CCMD=N'TRUNCATE TABLE ['+ @CTABLENAME +']'
			PRINT @CCMD
			
			EXEC SP_EXECUTESQL @CCMD
			
			SET @NSTEP=9
			SET @CCMD=N' IF EXISTS (SELECT NAME FROM '+@CSOURCEDB+'SYSOBJECTS WHERE NAME='''+@CTABLENAME+'''
									AND XTYPE=''U'')
							SET @BPROCEEDOUT=1
						 ELSE	
							SET @BPROCEEDOUT=0'
			PRINT @CCMD				 	 			
			EXEC SP_EXECUTESQL @CCMD,N'@BPROCEEDOUT BIT OUTPUT',@BPROCEEDOUT=@BPROCEED OUTPUT
			
						
			IF @BPROCEED=1
			BEGIN
				SET @NSTEP=15
				EXEC UPDATEMASTERXN @CSOURCEDB,@CTABLENAME,'',@CTABLENAME,'','','',1
			END	
			
			SET @NSTEP=20
			
			LBLNEXT:
			
			FETCH NEXT FROM TNAMECUR INTO @CTABLENAME
		END
		CLOSE TNAMECUR
		DEALLOCATE TNAMECUR

		LBLEND:
			PRINT 'COMPLETE'
		
		IF @@TRANCOUNT>0
			COMMIT TRANSACTION		
				
	END TRY
	
	BEGIN CATCH

		SET @CRETCMD = 'STEP- ' + LTRIM(RTRIM(STR(@NSTEP))) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		
		IF @@TRANCOUNT>0
			ROLLBACK
	
	END CATCH	
END
