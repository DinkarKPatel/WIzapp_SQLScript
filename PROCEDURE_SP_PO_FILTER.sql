create PROC SP_PO_FILTER    
(    
 @NMODE_TYPE NUMERIC(1), /*@NMODE_TYPE:0 FOR ALL,1 FOR HO,2 FOR STORES AND 3 FOR AGAINST BUYINGORDER */    
 @NBILL_LEVEL_TAX_METHOD NUMERIC(1), /*@NBILL_LEVEL_TAX_METHOD:0 FOR ALL , 1 FOR EXCLUSIVE BILL LEVEL TAX METHOD     
          AND 2 FOR INCLUSIVE */    
 @NTAXFORM_STORAGE_MODE NUMERIC(1),  /*@NTAXFORM_STORAGE_MODE:0 FOR ALL,1 FOR TAX TYPE BILL LEVEL AND 2 FOR ITEM LEVEL*/     
 @NDT_FLAG NUMERIC(1), /*@NDT_FLAG:0 FOR DLEVERY DATE AND 1 FOR PO DATE  */    
 @DFROMDATE DATETIME, /*@DFROMDATE:2013-04-20 FOR FROM DELEVERY DATE OR FROM PO DATE*/    
 @DTODATE DATETIME, /*@DTODATE:2014-08-05 FOR TO DELEVERY DATE OR TO PO DATE*/    
 @CAC_CODE VARCHAR(10), /*@CAC_CODE:'' THEN NO FILTER ELSE FILTER SUPPLIER*/    
 @CFORM_ID VARCHAR(7), /*@CFORM_ID:'' THEN NO FILTER ELSE FILTER FORM*/    
 @CDEPT_ID VARCHAR(4), /*@CDEPT_ID:'' THEN NO FILTER ELSE FILTER LOCATION*/    
 @BCANCELLED NUMERIC(1),             /* @BCANCELLED:0 FOR UNCANCELLED AND 1 FOR CANCELLED */    
 @CREF_NO  VARCHAR(100)='',    
 @LOC VARCHAR(4)='',    
 @POTYPE VARCHAR(10)=''  ,  
 @XN_ITEM_TYPE NUMERIC(1),  
 @PO_RECEIVING_MODE   NUMERIC(1),  
 @PUR_CAL_METHOD  NUMERIC(1)  
)    
--WITH ENCRYPTION    
AS     
BEGIN    
--(dinkar) Replace  left(memoid,2) to Location_code 
SET NOCOUNT ON   

 SELECT CONVERT(VARCHAR,A.PO_DT,106) AS MEMO_DT,A.PO_ID AS MEMO_ID,A.PO_NO AS MEMO_NO,    
 (CASE WHEN A.CANCELLED = 0 THEN A.TOTAL_AMOUNT  ELSE 0 END) AS NET_PURCHASE_VALUE,               
 (CASE WHEN A.CANCELLED = 0 THEN A.DISCOUNT_AMOUNT  ELSE 0 END)  AS BILL_DISCOUNT_AMOUNT,          
 A.DISCOUNT_PERCENTAGE AS DISCOUNT_PERCENTAGE,          
 (CASE WHEN A.CANCELLED = 0 THEN A.FREIGHT  ELSE 0 END) AS FREIGHT,          
 (CASE WHEN A.CANCELLED = 0 THEN A.OTHER_CHARGES  ELSE 0 END) AS OTHER_CHARGES,          
 (CASE WHEN A.CANCELLED = 0 THEN A.ROUND_OFF  ELSE 0 END) AS ROUND_OFF,        
 (CASE WHEN A.CANCELLED = 0 THEN A.SUBTOTAL  ELSE 0 END) AS SUBTOTAL,          
 (CASE WHEN A.CANCELLED = 0 THEN A.TAX_AMOUNT ELSE 0 END) AS TAX_AMOUNT,          
 A.TAX_PERCENTAGE AS TAX_PERCENTAGE,B.AC_NAME AS SUPPLIER_NAME,    
 --(CASE WHEN PO.PO_QTY = C.PUR_QTY+ISNULL(PA_QTY,0) THEN 'SETTLED' ELSE 'PENDING' END) AS [STATUS],      
 A.TOTAL_QUANTITY AS PO_QTY,    
 A.TOTAL_QUANTITY_STR AS PO_QTY_STR,  
 A.Total_PI_QTY AS PUR_QTY,
 a.TOTAL_ADJ_QUANTITY,
 A.TOTAL_QUANTITY-(ISNULL(A.Total_PI_QTY,0)+ISNULL(A.TOTAL_ADJ_QUANTITY,0)) AS PENDING_QTY,
 --C.PUR_QTY ,    
 --(PO.PO_QTY - C.PUR_QTY-ISNULL(PA_QTY,0)) AS PENDING_QTY,    
 CONVERT(VARCHAR,A.DELIVERY_DT,106) AS DELIVERY_DT,    
 L.DEPT_ID  AS LOC_ID,L.DEPT_NAME AS LOC_NAME ,    
 (CASE WHEN A.CANCELLED = 1 THEN 'CANCELLED' ELSE '' END) AS CANCELLED,    
 A.REF_NO,    
 (CASE WHEN (A.APPROVED = 2 or A.ApprovedLevelNo =99) THEN 'YES' ELSE 'NO' END) AS APPROVED,PT.PO_TYPE    
 --CONVERT(NUMERIC(18,2),TOTAL_MRP) AS TOTAL_MRP    
 ,u.username as USERNAME   ---ADDED BY CHANDAN 02-07-2019  
 ,u1.username as EDT_USERNAME ,A.REMARKS   
 ,A.Total_Gst_Cess_Amount   
  
 FROM POM01106 A (NOLOCK)                   
 JOIN LM01106 B (NOLOCK)  ON A.AC_CODE = B.AC_CODE      
 JOIN USERS U (NOLOCK) ON a.user_code=U.user_code    
 LEFT OUTER JOIN PO_TYPE_MST  PT ON A.PO_TYPE_ID = Pt.PO_TYPE_ID     
 LEFT OUTER JOIN users u1 ON a.EDT_USER_CODE=U1.user_code               
 --JOIN    
 --(      
 -- SELECT B.PO_ID, SUM(A.QUANTITY) AS PO_QTY,TOTAL_MRP=SUM(A.QUANTITY*MRP)             
 -- FROM POD01106 A (NOLOCK)       
 -- JOIN POM01106 B (NOLOCK) ON A.PO_ID=B.PO_ID     
 -- GROUP BY B.PO_ID     
 --) PO ON A.PO_ID= PO.PO_ID      
 --LEFT OUTER JOIN      
 --(    
 -- SELECT C.PO_ID,SUM(A.QUANTITY) AS PUR_QTY     
 -- FROM PID01106 A (NOLOCK)     
 -- JOIN PIM01106 B (NOLOCK) ON A.MRR_ID=B.MRR_ID      
 -- JOIN POD01106 C (NOLOCK) ON C.ROW_ID=A.PO_ROW_ID       
 -- WHERE B.CANCELLED=0 GROUP BY C.PO_ID    
 --) C ON A.PO_ID = C.PO_ID             
 LEFT OUTER JOIN LOCATION  L (NOLOCK) ON A.DEPT_ID = L.DEPT_ID           
 --LEFT OUTER JOIN     
 --(     
 -- SELECT SUM(A.ADJ_QUANTITY)AS PA_QTY,B.PO_ID     
 -- FROM PO_ADJ_DET A(NOLOCK)       
 -- JOIN POD01106 B (NOLOCK) ON A.PO_ROW_ID = B.ROW_ID    
 -- GROUP BY B.PO_ID    
 --) J ON J.PO_ID = A.PO_ID      
    WHERE          
   (ISNULL(@NMODE_TYPE,0)=0 OR A.entry_mode= @NMODE_TYPE)    
     AND (@NBILL_LEVEL_TAX_METHOD=0 OR (A.BILL_LEVEL_TAX_METHOD=@NBILL_LEVEL_TAX_METHOD))         
     AND (@NTAXFORM_STORAGE_MODE=0 OR (A.TAXFORM_STORAGE_MODE= @NTAXFORM_STORAGE_MODE ))              
     AND ((@NDT_FLAG = 0 AND A.DELIVERY_DT BETWEEN  @DFROMDATE AND @DTODATE)     
        OR (@NDT_FLAG = 1 AND A.PO_DT BETWEEN  @DFROMDATE AND @DTODATE))    
     AND (ISNULL(@CAC_CODE,'')='' OR B.AC_CODE=@CAC_CODE)     
     AND (ISNULL(@CFORM_ID,'')='' OR A.FORM_ID=@CFORM_ID)    
     AND (ISNULL(@CDEPT_ID,'')='' OR A.DEPT_ID=@CDEPT_ID)     
     AND (@BCANCELLED=2 OR CANCELLED=@BCANCELLED)    
     AND (@CREF_NO='' OR A.REF_NO=@CREF_NO)     
     AND (@POTYPE='' OR A.PO_TYPE_ID =@POTYPE)     
     AND (@LOC='' OR a.location_Code =@LOC OR A.DEPT_ID = @LOC)     
  AND ( ISNULL(@XN_ITEM_TYPE ,0)=0 OR A.xn_item_type= @XN_ITEM_TYPE)  
AND (ISNULL(@PO_RECEIVING_MODE   ,0)=0 OR A.PO_RECEIVING_MODE= @PO_RECEIVING_MODE)  
AND (ISNULL(@PUR_CAL_METHOD    ,0)=0 OR A.PUR_CAL_METHOD= @PUR_CAL_METHOD)  
  
END 