CREATE PROCEDURE SP_VALIDATEXN_BEFORESAVE_PUR--(LocId 3 digit change by Sanjay:06-11-2024)
(
	@NSPID			NUMERIC(5),
	@CUSERCODE		NVARCHAR(10),
	@NUPDATEMODE	INT,
	@CRETVAL		NVARCHAR(MAX) OUTPUT,
	@BNEGSTOCKFOUND BIT OUTPUT
)
--WITH ENCRYPTION
AS
BEGIN


BEGIN TRY

PRINT 'ENTER VALIDATE BEFORE OF PUR'
DECLARE @CCMD			NVARCHAR(MAX),
		@CTEMPPIM		NVARCHAR(MAX),
		@CTEMPPID		NVARCHAR(MAX),
		@NSTEP			INT,
		@CERRPRODUCTCODE	VARCHAR(50),
		@CTEMPDBNAME	VARCHAR(50),
		@CSTATECODE CHAR(7),@CLOCSSTMEMOID VARCHAR(40),@CCMDSUBSECTION VARCHAR(100),
		@CSTATENAME VARCHAR(100),@CERREMPCODE CHAR(7),@NCMMDISCOUNT NUMERIC(6,2),@NCRDISCOUNTPCT NUMERIC(10,2),
		@NCRDAYS INT,@NDISCOUNTAMT NUMERIC(14,2),@NTAXAMT NUMERIC(14,2),@NDISCOUNTPCT NUMERIC(6,2),@NTAXPCT NUMERIC(6,2),
		@CERRARTICLENO VARCHAR(100),@CERRPARA1NAME VARCHAR(50),@CERRPARA2NAME VARCHAR(50),@NITEMTYPE NUMERIC(1,0),
		@NSECTIONTYPE NUMERIC(1,0),@CALLOWTOSAVEMRPZERO BIT,@MRPFILTER VARCHAR(100),@COTHERMEMONO VARCHAR(50),
		@DOTHERMEMODT DATETIME,@CTEXT VARCHAR(200),@NOTHSECTIONTYPE NUMERIC(1,0),@COTHITEMTEXT VARCHAR(200),
		@DOTHERBILLDT DATETIME,@NCOUNT NUMERIC(5,0)


SET @NSTEP=0

SET @CTEMPDBNAME=''
--SET @CTEMPDBNAME = (SELECT DBO.FN_GETTEMPDBNAME())

SET @NSTEP=1

SET @CTEMPPIM=@CTEMPDBNAME+ 'PUR_PIM01106_UPLOAD'
SET @CTEMPPID=@CTEMPDBNAME+ 'PUR_PID01106_UPLOAD'

--SET @CTEMPPIM=@CTEMPDBNAME+ 'TEMP_PIM01106_'+LTRIM(RTRIM(STR(@NSPID)))
--SET @CTEMPPID=@CTEMPDBNAME+ 'TEMP_PID01106_'+LTRIM(RTRIM(STR(@NSPID)))
SET @CRETVAL=''

SET @NSTEP=2
--********************************************VALIDATION FOR CMM01106****************************************************
--VALIDATING RECORD COUNT
SET @CCMD=N'IF (SELECT COUNT(*) FROM '+@CTEMPPIM+' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')=0
				SET @CRETVAL1=''NO RECORD FOUND AT MASTER LEVEL..... CANNOT PROCEED'''

EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
GOTO ATLAST


SELECT @NCOUNT=COUNT(PARCEL_MEMO_ID) FROM PUR_PARCEL_DET_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID
IF ISNULL(@NCOUNT,0)>1
BEGIN
	SET @CRETVAL='MULTIPLE ENTRIES OF PARCEL DETAILS NOT ALLOWED...'
	GOTO ATLAST
END

SET @NSTEP=4
--VALIDATING FINYEAR
DECLARE @ENABLE_ERP_INVOICE_IMPORT INT,@ERP_HO_AC_CODE VARCHAR(100)
       ,@ERP_PARTY_CODE VARCHAR(50),@PARTY_ERP_HO VARCHAR(50)
       
SELECT @ENABLE_ERP_INVOICE_IMPORT = VALUE FROM DBO.CONFIG WITH(NOLOCK) WHERE CONFIG_OPTION = 'ENABLE_ERP_INVOICE_IMPORT'
SELECT @ERP_HO_AC_CODE = VALUE FROM DBO.CONFIG WITH(NOLOCK) WHERE CONFIG_OPTION = 'ENABLE_ERP_INVOICE_IMPORT'
SELECT @ERP_PARTY_CODE = VALUE FROM DBO.CONFIG WITH(NOLOCK) WHERE CONFIG_OPTION = 'ENABLE_ERP_INVOICE_IMPORT'
SELECT @PARTY_ERP_HO = VALUE FROM DBO.CONFIG WITH(NOLOCK) WHERE CONFIG_OPTION = 'ENABLE_ERP_INVOICE_IMPORT'


IF ISNULL(@ENABLE_ERP_INVOICE_IMPORT,0)  = 0
BEGIN
SET @CCMD=N'SELECT @LRETVAL1=(CASE WHEN ''01'' + LTRIM(RTRIM((DBO.FN_GETFINYEAR(RECEIPT_DT))))=FIN_YEAR THEN '''' 
			ELSE ''RECEIPT DATE IS NOT IN CURRENT FINANCIAL YEAR...CAN NOT PROCEED'' END)
			FROM '+ @CTEMPPIM +' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
EXEC SP_EXECUTESQL @CCMD,N'@LRETVAL1 NVARCHAR(MAX) OUTPUT',@LRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
GOTO ATLAST
END

IF ISNULL(@ERP_HO_AC_CODE,'') = ''
BEGIN
SET @CCMD=N'SELECT @LRETVAL1=(CASE WHEN ''01'' + LTRIM(RTRIM((DBO.FN_GETFINYEAR(RECEIPT_DT))))=FIN_YEAR THEN '''' 
			ELSE ''RECEIPT DATE IS NOT IN CURRENT FINANCIAL YEAR...CAN NOT PROCEED'' END)
			FROM '+ @CTEMPPIM +' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
EXEC SP_EXECUTESQL @CCMD,N'@LRETVAL1 NVARCHAR(MAX) OUTPUT',@LRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
GOTO ATLAST
END

IF ISNULL(@ERP_HO_AC_CODE,'') = ''
BEGIN
SET @CCMD=N'SELECT @LRETVAL1=(CASE WHEN ''01'' + LTRIM(RTRIM((DBO.FN_GETFINYEAR(RECEIPT_DT))))=FIN_YEAR THEN '''' 
			ELSE ''RECEIPT DATE IS NOT IN CURRENT FINANCIAL YEAR...CAN NOT PROCEED'' END)
			FROM '+ @CTEMPPIM +' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
EXEC SP_EXECUTESQL @CCMD,N'@LRETVAL1 NVARCHAR(MAX) OUTPUT',@LRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
GOTO ATLAST
END

IF ISNULL(@PARTY_ERP_HO,'') = ''
BEGIN
SET @CCMD=N'SELECT @LRETVAL1=(CASE WHEN ''01'' + LTRIM(RTRIM((DBO.FN_GETFINYEAR(RECEIPT_DT))))=FIN_YEAR THEN '''' 
			ELSE ''RECEIPT DATE IS NOT IN CURRENT FINANCIAL YEAR...CAN NOT PROCEED'' END)
			FROM '+ @CTEMPPIM +' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
EXEC SP_EXECUTESQL @CCMD,N'@LRETVAL1 NVARCHAR(MAX) OUTPUT',@LRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
GOTO ATLAST
END
 
SET @NSTEP=5

--VALIDATING CREDIT DISCOUNT PERCENTAGE
SET @CCMD=N'SELECT TOP 1 @NCRDISCOUNTPCTOUT=CR_DISCOUNT_PERCENTAGE FROM '+@CTEMPPIM+' WHERE 
			CR_DISCOUNT_PERCENTAGE NOT BETWEEN 0 AND 100 AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' '
EXEC SP_EXECUTESQL @CCMD,N'@NCRDISCOUNTPCTOUT NUMERIC(6,2) OUTPUT',@NCRDISCOUNTPCTOUT=@NCRDISCOUNTPCT OUTPUT

IF ISNULL(@NCRDISCOUNTPCT,0)<>0
BEGIN
	SET @CRETVAL='CREDIT DISCOUNT PERCENTAGE SHOULD BE BETWEEN 0 AND 100..... CANNOT PROCEED'
	GOTO ATLAST
END

SET @NSTEP=6
--VALIDATING CREDIT DAYS FOR PAYMENT TO SUPPLIER
SET @CCMD=N'SELECT TOP 1 @NCRDAYSOUT=CREDIT_DAYS FROM '+@CTEMPPIM+' WHERE CREDIT_DAYS<0 AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
EXEC SP_EXECUTESQL @CCMD,N'@NCRDAYSOUT NUMERIC(6,2) OUTPUT',@NCRDAYSOUT=@NCRDAYS OUTPUT

IF ISNULL(@NCRDAYS,0)<>0
BEGIN
	SET @CRETVAL='CREDIT DAYS SHOULD BE MORE THEN OR EQUAL TO ZERO..... CANNOT PROCEED'
	GOTO ATLAST
END

SET @NSTEP=7
--VALIDATING DISCOUNT AMOUNT
SET @CCMD=N'SELECT TOP 1 @NDISCOUNTAMTOUT=DISCOUNT_AMOUNT FROM '+@CTEMPPIM+' WHERE DISCOUNT_AMOUNT<0 AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
EXEC SP_EXECUTESQL @CCMD,N'@NDISCOUNTAMTOUT NUMERIC(10,2) OUTPUT',@NDISCOUNTAMTOUT=@NDISCOUNTAMT OUTPUT

IF ISNULL(@NDISCOUNTAMT,0)<>0
BEGIN
	SET @CRETVAL='BILL LEVEL DISCOUNT AMOUNT SHOULD BE MORE THAN OR EQUAL TO ZERO..... CANNOT PROCEED'
	GOTO ATLAST
END

SET @NSTEP=8
--VALIDATING TAX AMOUNT
SET @CCMD=N'SELECT TOP 1 @NTAXAMTOUT=TAX_AMOUNT FROM '+@CTEMPPIM+' WHERE TAX_AMOUNT<0 AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
EXEC SP_EXECUTESQL @CCMD,N'@NTAXAMTOUT NUMERIC(10,2) OUTPUT',@NTAXAMTOUT=@NTAXAMT OUTPUT

IF ISNULL(@NTAXAMT,0)<>0
BEGIN
	SET @CRETVAL='BILL LEVEL TAX AMOUNT SHOULD BE MORE THAN OR EQUAL TO ZERO..... CANNOT PROCEED'
	GOTO ATLAST
END

SET @NSTEP=10
--VALIDATING DISCOUNT PERCENTAGE
SET @CCMD=N'SELECT TOP 1 @NDISCOUNTPCTOUT=DISCOUNT_PERCENTAGE FROM '+@CTEMPPIM+' WHERE 
			DISCOUNT_PERCENTAGE NOT BETWEEN 0 AND 100 AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
EXEC SP_EXECUTESQL @CCMD,N'@NDISCOUNTPCTOUT NUMERIC(6,2) OUTPUT',@NDISCOUNTPCTOUT=@NDISCOUNTPCT OUTPUT

IF ISNULL(@NDISCOUNTPCT,0)<>0
BEGIN
	SET @CRETVAL='DEBIT DISCOUNT PERCENTAGE SHOULD BE BETWEEN 0 AND 100..... CANNOT PROCEED'
	GOTO ATLAST
END


SET @NSTEP=12
--VALIDATING TAX PERCENTAGE
SET @CCMD=N'SELECT TOP 1 @NTAXPCTOUT=TAX_PERCENTAGE FROM '+@CTEMPPIM+' WHERE 
			TAX_PERCENTAGE NOT BETWEEN 0 AND 100 AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' '
EXEC SP_EXECUTESQL @CCMD,N'@NTAXPCTOUT NUMERIC(6,2) OUTPUT',@NTAXPCTOUT=@NTAXPCT OUTPUT

IF ISNULL(@NTAXPCT,0)<>0
BEGIN
	SET @CRETVAL='TAX PERCENTAGE SHOULD BE BETWEEN 0 AND 100..... CANNOT PROCEED'
	GOTO ATLAST
END


SET @NSTEP=14
--VALIDATING CASH MEMO MODE
SET @CCMD=N'IF EXISTS (SELECT TOP 1 MEMO_TYPE FROM '+ @CTEMPPIM + N' WHERE MEMO_TYPE NOT IN (1,2) AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
				SET @CRETVAL1=''PURCHASE MEMO TYPE IS NOT CORRECT...CAN NOT PROCEED'''
				
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
GOTO ATLAST

--VALIDATING USER CODE
IF @NUPDATEMODE=1
BEGIN
	SET @NSTEP=15
	
	SET @CCMD=N'UPDATE '+ @CTEMPPIM + N' SET USER_CODE='''+@CUSERCODE+''' WHERE LTRIM(RTRIM(USER_CODE)) = '''' AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
	EXEC SP_EXECUTESQL @CCMD

END

SET @NSTEP=17
SET @CCMD=N'IF EXISTS (SELECT TOP 1 A.USER_CODE FROM '+ @CTEMPPIM + N' A 
						LEFT OUTER JOIN USERS B ON B.USER_CODE=A.USER_CODE
						WHERE B.USER_CODE IS NULL AND A.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
				SET @CRETVAL1=''INVALID USER DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	GOTO ATLAST

IF @NUPDATEMODE=1
BEGIN
	SET @NSTEP=20
	
	SET @CCMD=N'UPDATE '+ @CTEMPPIM + N' SET EDT_USER_CODE='''+@CUSERCODE+''' WHERE LTRIM(RTRIM(EDT_USER_CODE)) = '''' AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
	EXEC SP_EXECUTESQL @CCMD

END

SET @NSTEP=22
SET @CCMD=N'IF EXISTS (SELECT TOP 1 A.USER_CODE FROM '+ @CTEMPPIM + N' A 
						LEFT OUTER JOIN USERS B ON B.USER_CODE=A.EDT_USER_CODE
						WHERE B.USER_CODE IS NULL AND A.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
				SET @CRETVAL1=''INVALID EDITING USER DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	GOTO ATLAST

--VALIDATING FORM NAME
   DECLARE @DMEMO_DT DATETIME,@CGSTCUTOFFDATE VARCHAR(10),@CMRR_DT DATETIME,@GSTDATE DATETIME
   SELECT @CGSTCUTOFFDATE=VALUE FROM CONFIG WHERE CONFIG_OPTION ='GST_CUT_OFF_DATE'
 
 
 IF ISNULL(@CGSTCUTOFFDATE,'')<>''
 BEGIN  
	 SELECT @GSTDATE=CAST(@CGSTCUTOFFDATE AS DATETIME)
	
	 SET @CCMD=N'SELECT TOP 1 @CMRR_DT=INV_DT FROM '+ @CTEMPPIM + N' A   WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
	 EXEC SP_EXECUTESQL @CCMD,N'@CMRR_DT DATETIME OUTPUT',@CMRR_DT=@CMRR_DT OUTPUT
	 PRINT @CCMD
END

SET @NSTEP=27

--IF EXISTS(SELECT TOP 1 'U' FROM 
IF @CMRR_DT<@GSTDATE
BEGIN
SET @CCMD=N'IF EXISTS (SELECT TOP 1 A.FORM_ID FROM '+ @CTEMPPID + N' A 
						LEFT OUTER JOIN FORM B ON B.FORM_ID=A.FORM_ID
						WHERE (B.FORM_ID IS NULL OR A.FORM_ID=''0000000'') AND A.PRODUCT_CODE<>'''' AND A.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' )
				SET @CRETVAL1=''INVALID FORM NAME FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	GOTO ATLAST
END
--VALIDATING SUPPLIER


SET @NSTEP=29
SET @CCMD=N'IF EXISTS (SELECT TOP 1 A.AC_CODE FROM '+ @CTEMPPIM + N' A 
						LEFT OUTER JOIN LM01106 B ON B.AC_CODE=A.AC_CODE WHERE B.AC_CODE IS NULL
						OR A.AC_CODE IN ('''',''0000000000'') AND A.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
				SET @CRETVAL1=''INVALID SUPPLIER DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	GOTO ATLAST

--VALIDATING LOCATION ID
SET @NSTEP=31

SET @CCMD=N'UPDATE '+ @CTEMPPIM + N' SET DEPT_ID=location_code WHERE ISNULL(DEPT_ID,'''')='''' AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
EXEC SP_EXECUTESQL @CCMD

SET @NSTEP=33
SET @CCMD=N'IF EXISTS (SELECT TOP 1 A.DEPT_ID FROM '+ @CTEMPPIM + N' A 
						LEFT OUTER JOIN LOCATION B ON B.DEPT_ID=A.DEPT_ID
						WHERE B.DEPT_ID IS NULL AND A.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
				SET @CRETVAL1=''INVALID LOCATION ID FOUND IN PURCHASE MASTER...CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	GOTO ATLAST

SET @NSTEP=35
--VALIDATING RECORD COUNT
SET @CCMD=N'IF NOT EXISTS (SELECT TOP 1 PRODUCT_CODE FROM '+@CTEMPPID+' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
				SET @CRETVAL1=''BLANK DETAILS CAN NOT BE SAVED..... PLEASE CHECK'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD

IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
GOTO ATLAST

SET @NSTEP=37
---CHANGE VALIDATION ON MRP 22.12.2014
IF @CUSERCODE<>'0000000'
BEGIN
SELECT TOP 1 @CALLOWTOSAVEMRPZERO=VALUE  FROM USER_ROLE_DET A
JOIN USERS B ON A.ROLE_ID=B.ROLE_ID WHERE FORM_NAME ='FRMTRANPURCHASEINVOICE' AND FORM_OPTION ='ALLOW_TO_SAVE_WITH_ZERO_MRP' AND USER_CODE=@CUSERCODE

IF ISNULL(@CALLOWTOSAVEMRPZERO,0)=0
SET @MRPFILTER=' A.MRP<=0'
ELSE
SET @MRPFILTER=' A.MRP<0'

--VALIDATING MRP
SET @CCMD=N'SELECT TOP 1 @CERRPRODUCTCODE=PRODUCT_CODE,@CERRARTICLENO=ARTICLE_NO,@CERRPARA1NAME=PARA1_NAME,
			@CERRPARA2NAME=PARA2_NAME  FROM '+@CTEMPPID+' A JOIN ARTICLE B ON A.ARTICLE_CODE=B.ARTICLE_CODE
			JOIN PARA1 C ON C.PARA1_CODE=A.PARA1_CODE
			JOIN PARA2 D ON D.PARA2_CODE=A.PARA2_CODE 
			WHERE  '+@MRPFILTER+' AND A.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
EXEC SP_EXECUTESQL @CCMD,N'@CERRPRODUCTCODE VARCHAR(50) OUTPUT,@CERRARTICLENO VARCHAR(50) OUTPUT,
@CERRPARA1NAME VARCHAR(50) OUTPUT,@CERRPARA2NAME VARCHAR(50) OUTPUT',
@CERRPRODUCTCODE OUTPUT,@CERRARTICLENO OUTPUT,@CERRPARA1NAME OUTPUT,@CERRPARA2NAME OUTPUT

IF ISNULL(@CERRPRODUCTCODE,'')<>'' OR ISNULL(@CERRARTICLENO,'')<>''
	SET @CRETVAL=(CASE WHEN ISNULL(@CERRPRODUCTCODE,'')<>'' THEN 'ITEM CODE: '+@CERRPRODUCTCODE 
					   ELSE 'ARTICLE NO.: '+@CERRARTICLENO+'PARA1 NAME: '+@CERRPARA1NAME+
					   'PARA2 NAME: '+@CERRPARA2NAME END)+'...MRP SHOULD NOT BE LESS THAN OR EQUAL TO ZERO..... CANNOT PROCEED'	

END


IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
GOTO ATLAST

SET @NSTEP=39
--VALIDATING RECORD COUNT
SET @CCMD=N'IF (SELECT COUNT(*) FROM '+@CTEMPPID+' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')=0
				SET @CRETVAL1=''NO RECORD FOUND AT DETAIL LEVEL..... CANNOT PROCEED'''

EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD

SET @NSTEP=41

--VALIDATING NEGATIVE VALUES OF MRP/PURCHASE PRICE/QUANTITY
SET @CCMD=N'SELECT TOP 1 @CERRPRODUCTCODE=PRODUCT_CODE,@CERRARTICLENO=ARTICLE_NO,@CERRPARA1NAME=PARA1_NAME,
			@CERRPARA2NAME=PARA2_NAME  FROM '+@CTEMPPID+' A JOIN ARTICLE B ON A.ARTICLE_CODE=B.ARTICLE_CODE
			JOIN PARA1 C ON C.PARA1_CODE=A.PARA1_CODE
			JOIN PARA2 D ON D.PARA2_CODE=A.PARA2_CODE WHERE (A.MRP<0 OR A.PURCHASE_PRICE<0 OR A.QUANTITY<0)
			AND A.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
				
EXEC SP_EXECUTESQL @CCMD,N'@CERRPRODUCTCODE VARCHAR(50) OUTPUT,@CERRARTICLENO VARCHAR(50) OUTPUT,
@CERRPARA1NAME VARCHAR(50) OUTPUT,@CERRPARA2NAME VARCHAR(50) OUTPUT',
@CERRPRODUCTCODE OUTPUT,@CERRARTICLENO OUTPUT,@CERRPARA1NAME OUTPUT,@CERRPARA2NAME OUTPUT


IF ISNULL(@CERRPRODUCTCODE,'')<>'' OR ISNULL(@CERRARTICLENO,'')<>''
	SET @CRETVAL='MRP/PURCHASE PRICE/QUANTITY CANNOT BE NEGATIVE FOR ....'+(CASE WHEN ISNULL(@CERRPRODUCTCODE,'')<>''
				  THEN 'ITEM CODE: '+@CERRPRODUCTCODE ELSE 'ARTICLE NO.: '+@CERRARTICLENO+'PARA1 NAME: '+
				  @CERRPARA1NAME+ 'PARA2 NAME: '+@CERRPARA2NAME END)+'........ CANNOT PROCEED'
IF ISNULL(@CRETVAL,'')<>''
GOTO ATLAST

SET @NSTEP=42

SET @CCMD=N'UPDATE '+ @CTEMPPID + N' SET PARA1_CODE=(CASE WHEN PARA1_CODE='''' THEN ''0000000'' ELSE PARA1_CODE END),
										 PARA2_CODE=(CASE WHEN PARA2_CODE='''' THEN ''0000000'' ELSE PARA2_CODE END),
										 PARA3_CODE=(CASE WHEN PARA3_CODE='''' THEN ''0000000'' ELSE PARA3_CODE END),
										 PARA4_CODE=(CASE WHEN PARA4_CODE='''' THEN ''0000000'' ELSE PARA4_CODE END),
										 PARA5_CODE=(CASE WHEN PARA5_CODE='''' THEN ''0000000'' ELSE PARA5_CODE END),
										 PARA6_CODE=(CASE WHEN PARA6_CODE='''' THEN ''0000000'' ELSE PARA6_CODE END)
										 WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''	
EXEC SP_EXECUTESQL @CCMD

--VALIDATING ARTICLES
SET @NSTEP=43
SET @CCMD=N'IF EXISTS (SELECT TOP 1 A.ARTICLE_CODE FROM '+ @CTEMPPID + N' A 
						LEFT OUTER JOIN ARTICLE B ON B.ARTICLE_CODE=A.ARTICLE_CODE 
						WHERE  ISNULL(A.ARTICLE_CODE,'''') IN ('''',''0000000'') AND A.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
				SET @CRETVAL1=''INVALID ARTICLE DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	GOTO ATLAST

--VALIDATING PARA1
SET @NSTEP=45
SET @CCMD=N'IF EXISTS (SELECT TOP 1 A.PARA1_CODE FROM '+ @CTEMPPID + N' A 
						LEFT OUTER JOIN PARA1 B ON B.PARA1_CODE=A.PARA1_CODE WHERE B.PARA1_CODE IS NULL
						AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
				SET @CRETVAL1=''INVALID PARA1 DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	GOTO ATLAST

--VALIDATING PARA2
SET @NSTEP=47
SET @CCMD=N'IF EXISTS (SELECT TOP 1 A.PARA2_CODE FROM '+ @CTEMPPID + N' A 
						LEFT OUTER JOIN PARA2 B ON B.PARA2_CODE=A.PARA2_CODE WHERE B.PARA2_CODE IS NULL
						AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
				SET @CRETVAL1=''INVALID PARA2 DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	GOTO ATLAST

--VALIDATING PARA3
SET @NSTEP=49
SET @CCMD=N'IF EXISTS (SELECT TOP 1 A.PARA3_CODE FROM '+ @CTEMPPID + N' A 
						LEFT OUTER JOIN PARA3 B ON B.PARA3_CODE=A.PARA3_CODE WHERE B.PARA3_CODE IS NULL
						AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
				SET @CRETVAL1=''INVALID PARA3 DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	GOTO ATLAST

--VALIDATING PARA4
SET @NSTEP=51
SET @CCMD=N'IF EXISTS (SELECT TOP 1 A.PARA4_CODE FROM '+ @CTEMPPID + N' A 
						LEFT OUTER JOIN PARA4 B ON B.PARA4_CODE=A.PARA4_CODE WHERE B.PARA4_CODE IS NULL
						AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
				SET @CRETVAL1=''INVALID PARA4 DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	GOTO ATLAST

--VALIDATING PARA5
SET @NSTEP=53
SET @CCMD=N'IF EXISTS (SELECT TOP 1 A.PARA5_CODE FROM '+ @CTEMPPID + N' A 
						LEFT OUTER JOIN PARA5 B ON B.PARA5_CODE=A.PARA5_CODE WHERE B.PARA5_CODE IS NULL
						AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
				SET @CRETVAL1=''INVALID PARA5 DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	GOTO ATLAST

--VALIDATING PARA6
SET @NSTEP=55
SET @CCMD=N'IF EXISTS (SELECT TOP 1 A.PARA6_CODE FROM '+ @CTEMPPID + N' A 
						LEFT OUTER JOIN PARA6 B ON B.PARA6_CODE=A.PARA6_CODE WHERE B.PARA6_CODE IS NULL
						AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
				SET @CRETVAL1=''INVALID PARA6 DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	GOTO ATLAST
	
--VALIDATING HSN CODE
SET @NSTEP=56

SET @CCMD=N'IF EXISTS (SELECT TOP 1 A.HSN_CODE FROM '+ @CTEMPPID + N' A 
						LEFT OUTER JOIN HSN_MST B ON B.HSN_CODE=A.HSN_CODE 
						WHERE B.HSN_CODE IS NULL AND ISNULL(A.HSN_CODE,'''')<>'''')
				SET @CRETVAL1=''PLEASE ENTER HSN PRESENT IN HSN MASTER....'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
   BEGIN
	 GOTO ATLAST
   END	
					
SET @CRETVAL=''

--in case of box entry check wrong

DECLARE @CDUPBILLNO VARCHAR(50),@OTHERBILLDT DATETIME
SELECT TOP 1 @CDUPBILLNO=A.BILL_NO,@COTHERMEMONO=B.MRR_NO,@DOTHERMEMODT=B.MRR_DT,@OTHERBILLDT=B.INV_DT FROM PUR_PIM01106_UPLOAD A 
JOIN PIM01106 B ON A.AC_CODE=B.AC_CODE AND A.BILL_NO=B.BILL_NO AND 
DBO.FN_GETFINYEAR(A.INV_DT)=DBO.FN_GETFINYEAR(B.INV_DT)
WHERE A.SP_ID=@NSPID AND B.MRR_ID<>A.MRR_ID AND B.CANCELLED=0 AND A.BILL_CHALLAN_MODE<>1 AND B.BILL_CHALLAN_MODE<>1

IF ISNULL(@COTHERMEMONO,'')<>''
BEGIN
	SET @CRETVAL='DUPLICATE BILL NO.#'+@CDUPBILLNO+' FOUND IN OTHER MRR NO.:'+@COTHERMEMONO+' HAVING BILL DATE :'+
	CONVERT(VARCHAR,@OTHERBILLDT,105)+' RAISED ON :'+CONVERT(VARCHAR,@DOTHERMEMODT,105)
	
	PRINT 'ERROR OF DUP BILL#'
	GOTO ATLAST
END

DECLARE @CWHERECLAUSE VARCHAR(1000)

SET @CWHERECLAUSE=' AND SP_ID='+ LTRIM(RTRIM(STR(@NSPID)))

PRINT 'NOW VALIDATE SECTION ITEM TYPE'

EXEC SP3S_VALIDATEXN_ITEMTYPE
@CTEMPMASTERTABLE=@CTEMPPIM,
@CTEMPDETAILTABLE=@CTEMPPID,
@CWHERECLAUSE=@CWHERECLAUSE,
@CERRORMSG=@CRETVAL OUTPUT


IF @CRETVAL<>''
	GOTO ATLAST
	
ATLAST:

PRINT 'LAST STEP OF SP_VALIDATEXN_BEFORESAVE_PUR:'+STR(@NSTEP)
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	SET @CRETVAL=ISNULL(@CRETVAL,'') +'(SP_VALIDATEXN_BEFORESAVE_PUR)'
		
END TRY

BEGIN CATCH
	SET @CRETVAL=N'ERROR FOUND IN '+ISNULL(ERROR_PROCEDURE(),'SP_VALIDATEXN_BEFORESAVE_PUR ')+
	  'STEP :'+LTRIM(RTRIM(STR(@NSTEP)))  +' MSG :'+ISNULL(ERROR_MESSAGE(),'NULL MSG')  
	  
END CATCH
END
------   END OF PROCEDURE SP_VALIDATEXN_BEFORESAVE_PUR
