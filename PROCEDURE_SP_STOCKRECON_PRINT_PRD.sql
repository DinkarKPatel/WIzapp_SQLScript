CREATE PROCEDURE SP_STOCKRECON_PRINT_PRD
(
 @IQUERYID INT,
 @CDEPTID VARCHAR(10),
 @CREPID  VARCHAR(20),
 @MEMOID VARCHAR(50)
)
--WITH ENCRYPTION

AS
BEGIN


DECLARE @CCMD NVARCHAR(MAX)
IF @IQUERYID= 1
GOTO LBL1
ELSE IF @IQUERYID= 2
GOTO LBL2
ELSE IF @IQUERYID= 3
GOTO LBL3
ELSE IF @IQUERYID= 4
GOTO LBL4


LBL1:

IF OBJECT_ID('TEMPDB..#TMPPMTSHORTAGE','U') IS NOT NULL
	DROP TABLE #TMPPMTSHORTAGE
	
SELECT PMT.PRODUCT_UID, PRODUCT_CODE ,SUM(PMT.COMPUTER_QTY )AS STK_QTY , 
	   SUM(ISNULL(PMT.SCAN_QTY,0)) AS SCAN_QTY,
       SUM(ISNULL(PMT.EXCESS_QTY,0))AS EX_QTY, 
       SUM( (CASE   WHEN (ISNULL(PMT.COMPUTER_QTY,0) - ISNULL(PMT.SCAN_QTY,0)) > 0     
					THEN (PMT.COMPUTER_QTY - ISNULL(PMT.SCAN_QTY,0))ELSE 0 END ))AS SH_QTY
INTO #TMPPMTSHORTAGE FROM PRD_STK_RECON_HIST_DET  PMT (NOLOCK) 
WHERE PMT.RECON_ID = @MEMOID --AND PMT.DEPT_ID = @CDEPTID  
GROUP BY  PMT.PRODUCT_UID,PMT.PRODUCT_CODE
HAVING(NOT (SUM( (CASE WHEN (ISNULL(PMT.COMPUTER_QTY,0) - ISNULL(PMT.SCAN_QTY,0)) > 0     
     THEN (PMT.COMPUTER_QTY - ISNULL(PMT.SCAN_QTY,0))    
     ELSE 0 END )) = 0))


--SHORTAGE
SET @CCMD=N'SELECT D.SECTION_NAME,C.SUB_SECTION_NAME ,ARTICLE_NO,P1.PARA1_NAME ,P2.PARA2_NAME ,
				P3.PARA3_NAME,P4.PARA4_NAME,P5.PARA5_NAME,P6.PARA6_NAME ,A.MRP,A.PRODUCT_CODE ,
				P2.PARA2_ORDER,SUM(STK_QTY) AS STK_QTY ,SUM(SCAN_QTY) AS SCAN_QTY,
				SUM(EX_QTY) AS EX_QTY,SUM(SH_QTY) AS SH_QTY
			FROM #TMPPMTSHORTAGE PMT (NOLOCK) 
				JOIN PRD_SKU A ON PMT.PRODUCT_CODE = A.PRODUCT_CODE  AND PMT.PRODUCT_UID=A.PRODUCT_UID
				JOIN ARTICLE  B (NOLOCK) ON A.ARTICLE_CODE= B.ARTICLE_CODE
				JOIN SECTIOND  C (NOLOCK) ON B.SUB_SECTION_CODE= C.SUB_SECTION_CODE
				JOIN SECTIONM  D (NOLOCK) ON C.SECTION_CODE= D.SECTION_CODE
				JOIN PARA1  P1 (NOLOCK) ON A.PARA1_CODE= P1.PARA1_CODE 
				JOIN PARA2  P2 (NOLOCK) ON A.PARA2_CODE= P2.PARA2_CODE 
				JOIN PARA3  P3 (NOLOCK) ON A.PARA3_CODE= P3.PARA3_CODE 
				JOIN PARA4  P4 (NOLOCK) ON A.PARA4_CODE= P4.PARA4_CODE 
				JOIN PARA5  P5 (NOLOCK) ON A.PARA5_CODE= P5.PARA5_CODE 
				JOIN PARA6  P6 (NOLOCK) ON A.PARA6_CODE= P6.PARA6_CODE
			GROUP BY  
				D.SECTION_NAME,C.SUB_SECTION_NAME ,ARTICLE_NO,P1.PARA1_NAME ,P2.PARA2_NAME ,
				P3.PARA3_NAME, P4.PARA4_NAME, P5.PARA5_NAME, P6.PARA6_NAME, A.MRP, A.PRODUCT_CODE, 
				P2.PARA2_ORDER
			ORDER BY  
				D.SECTION_NAME,C.SUB_SECTION_NAME ,ARTICLE_NO,P1.PARA1_NAME ,P2.PARA2_ORDER,
				P2.PARA2_NAME,P3.PARA3_NAME, P4.PARA4_NAME, P5.PARA5_NAME, P6.PARA6_NAME, 
				A.MRP, A.PRODUCT_CODE'

EXEC SP_EXECUTESQL @CCMD


GOTO LAST

LBL2:


IF OBJECT_ID('TEMPDB..#TMPPMTEXCESS','U') IS NOT NULL
	DROP TABLE #TMPPMTEXCESS
	
SELECT PRODUCT_CODE ,SUM(PMT.COMPUTER_QTY )AS STK_QTY , SUM(ISNULL(PMT.SCAN_QTY,0)) AS SCAN_QTY,
       SUM(PMT.EXCESS_QTY)AS EX_QTY,  
       SUM( (CASE WHEN (ISNULL(PMT.COMPUTER_QTY,0) - ISNULL(PMT.SCAN_QTY,0)) >0     
				  THEN (PMT.COMPUTER_QTY - ISNULL(PMT.SCAN_QTY,0)) ELSE 0 END )) AS SH_QTY
INTO #TMPPMTEXCESS FROM STK_RECON_HIST_DET  PMT (NOLOCK) 
WHERE PMT.RECON_ID = @MEMOID --AND PMT.DEPT_ID = @CDEPTID  
GROUP BY  PMT.PRODUCT_CODE
HAVING(NOT (SUM(PMT.EXCESS_QTY) = 0))

SET @CCMD=N'SELECT D.SECTION_NAME,C.SUB_SECTION_NAME ,ARTICLE_NO,P1.PARA1_NAME ,P2.PARA2_NAME ,
			   P3.PARA3_NAME,P4.PARA4_NAME,P5.PARA5_NAME,P6.PARA6_NAME ,A.MRP,A.PRODUCT_CODE ,
			   P2.PARA2_ORDER,SUM(STK_QTY) AS STK_QTY ,SUM(SCAN_QTY) AS SCAN_QTY,
			   SUM(EX_QTY) AS EX_QTY,SUM(SH_QTY) AS SH_QTY       
			FROM #TMPPMTEXCESS  PMT (NOLOCK) 
				JOIN PRD_SKU A ON PMT.PRODUCT_CODE = A.PRODUCT_CODE 
				JOIN ARTICLE  B (NOLOCK) ON A.ARTICLE_CODE= B.ARTICLE_CODE
				JOIN SECTIOND  C (NOLOCK) ON B.SUB_SECTION_CODE= C.SUB_SECTION_CODE
				JOIN SECTIONM  D (NOLOCK) ON C.SECTION_CODE= D.SECTION_CODE
				JOIN PARA1  P1 (NOLOCK) ON A.PARA1_CODE= P1.PARA1_CODE 
				JOIN PARA2  P2 (NOLOCK) ON A.PARA2_CODE= P2.PARA2_CODE 
				JOIN PARA3  P3 (NOLOCK) ON A.PARA3_CODE= P3.PARA3_CODE 
				JOIN PARA4  P4 (NOLOCK) ON A.PARA4_CODE= P4.PARA4_CODE 
				JOIN PARA5  P5 (NOLOCK) ON A.PARA5_CODE= P5.PARA5_CODE 
				JOIN PARA6  P6 (NOLOCK) ON A.PARA6_CODE= P6.PARA6_CODE
			GROUP BY  
				D.SECTION_NAME,C.SUB_SECTION_NAME ,ARTICLE_NO,P1.PARA1_NAME ,P2.PARA2_NAME ,
				P3.PARA3_NAME, P4.PARA4_NAME, P5.PARA5_NAME, P6.PARA6_NAME, A.MRP, 
				A.PRODUCT_CODE, P2.PARA2_ORDER
			ORDER BY  
				D.SECTION_NAME,C.SUB_SECTION_NAME ,ARTICLE_NO,P1.PARA1_NAME ,P2.PARA2_ORDER,
				P2.PARA2_NAME ,P3.PARA3_NAME, P4.PARA4_NAME, P5.PARA5_NAME, P6.PARA6_NAME, A.MRP, 
				A.PRODUCT_CODE'

EXEC SP_EXECUTESQL @CCMD

GOTO LAST


LBL3:

--DEPT_ID = '''+@CDEPTID+'''  AND REP_ID ='''+ @CREPID+'''

SET @CCMD=N'SELECT PRODUCT_CODE,SUM(EXCESS_QTY)AS QTY
FROM PRD_STK_RECON_HIST_DET (NOLOCK)
WHERE RECON_ID = '''+@MEMOID+'''
GROUP BY PRODUCT_CODE
HAVING NOT (SUM(EXCESS_QTY)=0)
ORDER BY PRODUCT_CODE'

EXEC SP_EXECUTESQL @CCMD

GOTO LAST

LBL4:
-- DEPT_ID = '''+@CDEPTID+'''  AND REP_ID ='''+ @CREPID+'''
SET @CCMD=N'SELECT PRODUCT_CODE, 
			SUM( (CASE  WHEN (ISNULL(COMPUTER_QTY,0) - ISNULL(SCAN_QTY,0)) >0     
						THEN (COMPUTER_QTY - ISNULL(SCAN_QTY,0)) ELSE 0 END )) AS QTY
FROM PRD_STK_RECON_HIST_DET (NOLOCK)
WHERE  RECON_ID = '''+@MEMOID+'''
GROUP BY PRODUCT_CODE
HAVING NOT (SUM((CASE WHEN (ISNULL(COMPUTER_QTY,0) - ISNULL(SCAN_QTY,0)) >0     
					  THEN (COMPUTER_QTY - ISNULL(SCAN_QTY,0)) ELSE 0 END ))=0)
ORDER BY PRODUCT_CODE'

EXEC SP_EXECUTESQL @CCMD

GOTO LAST

LAST:

END
