CREATE PROCEDURE SP_PPC_RECALCULATE_COST_PRICE
(
 @CMEMO_ID VARCHAR(50)='',
 @CERRORMSG VARCHAR(4000) OUTPUT
)
AS
BEGIN
    
   BEGIN TRY
        DECLARE @CSTEP VARCHAR(100)
         IF OBJECT_ID('TEMPDB..#TMPPRODUCT_CODE','U') IS NOT NULL
            DROP TABLE #TMPPRODUCT_CODE
            
			SELECT A.PRODUCT_CODE 
			INTO #TMPPRODUCT_CODE
			FROM PPC_TRANSFER_TO_TRADING_DET A
			JOIN PPC_TRANSFER_TO_TRADING_MST B ON A.MEMO_ID =B.MEMO_ID 
			WHERE B.CANCELLED =0
			AND B.MEMO_ID=@CMEMO_ID
			
		SET @CSTEP=10	
         IF OBJECT_ID('TEMPDB..#TMPFGMEMODETAILS','U') IS NOT NULL
            DROP TABLE #TMPFGMEMODETAILS
    
            
			SELECT A.MEMO_ID,A.PRODUCT_CODE   
			INTO #TMPFGMEMODETAILS
			FROM PPC_AGENCY_ISSUE_FG_FIRST_DET A
			JOIN PPC_AGENCY_ISSUE_FG_FIRST_MST B ON A.MEMO_ID =B.MEMO_ID 
			JOIN #TMPPRODUCT_CODE TMP ON TMP.PRODUCT_CODE =A.PRODUCT_CODE 
			WHERE B.CANCELLED =0 AND MEMO_TYPE =1
			UNION 
			SELECT A.MEMO_ID  ,A.PRODUCT_CODE 
			FROM PPC_AGENCY_ISSUE_FG_DET A
			JOIN PPC_AGENCY_ISSUE_FG_MST B ON A.MEMO_ID =B.MEMO_ID 
			JOIN #TMPPRODUCT_CODE TMP ON TMP.PRODUCT_CODE =A.PRODUCT_CODE 
			WHERE B.CANCELLED =0 AND MEMO_TYPE =1
			
			SET @CSTEP=20
			
			IF OBJECT_ID('TEMPDB..#TMPFGMEMO','U') IS NOT NULL
            DROP TABLE #TMPFGMEMO
            
			SELECT DISTINCT  MEMO_ID  INTO #TMPFGMEMO FROM #TMPFGMEMODETAILS
	
			 IF OBJECT_ID('TEMPDB..#TMPFGMEMO_QTY','U') IS NOT NULL
                DROP TABLE #TMPFGMEMO_QTY
            
			
			SELECT A.MEMO_ID ,ISNULL(FG1.QUANTITY,0) +ISNULL(FG2.QUANTITY,0) AS TOTAL_QTY
			INTO #TMPFGMEMO_QTY
			FROM  #TMPFGMEMO A
			LEFT JOIN
			(
			 SELECT MEMO_ID ,SUM(QUANTITY) AS QUANTITY
			 FROM PPC_AGENCY_ISSUE_FG_FIRST_DET (NOLOCK)
			 GROUP BY MEMO_ID
			)  FG1 ON A.MEMO_ID =FG1.MEMO_ID
            LEFT JOIN
            (
              SELECT MEMO_ID ,SUM(QUANTITY) AS QUANTITY
			  FROM PPC_AGENCY_ISSUE_FG_DET (NOLOCK)
			  GROUP BY MEMO_ID
            ) FG2 ON FG2.MEMO_ID =A.MEMO_ID 
            
            SET @CSTEP=30
             IF OBJECT_ID('TEMPDB..#TMPMATERIALCOST','U') IS NOT NULL
                DROP TABLE #TMPMATERIALCOST
 
            SELECT REF_ROW_ID,
            CONVERT(NUMERIC(18,2),SUM(SKU.PURCHASE_PRICE *A.QUANTITY  )) AS MATERIAL_COST,
            CONVERT(NUMERIC(18,2),SUM(SKU.PURCHASE_PRICE *A.QUANTITY  )/CASE WHEN TMP.TOTAL_QTY<>0 THEN TMP.TOTAL_QTY ELSE 0 END ) AS SINGLE_MATERIAL_COST,
            TMP.TOTAL_QTY 
            INTO #TMPMATERISLCOST
            FROM PPC_AGENCY_ISSUE_MATERIAL_DET A
            JOIN PPC_AGENCY_ISSUE_MATERIAL_MST B ON A.MEMO_ID =B.MEMO_ID 
            JOIN #TMPFGMEMO_QTY TMP ON A.REF_ROW_ID =TMP.MEMO_ID 
            JOIN PPC_SKU SKU ON SKU.PRODUCT_UID =A.PRODUCT_UID 
            WHERE B.CANCELLED =0
            GROUP BY REF_ROW_ID,TMP.TOTAL_QTY 
            
            
            SET @CSTEP=40
            
            IF OBJECT_ID('TEMPDB..#TMPFGCOST','U') IS NOT NULL
                DROP TABLE #TMPFGCOST
                
            SELECT A.PRODUCT_CODE  ,A.AMOUNT 
            INTO #TMPFGCOST
            FROM PPC_AGENCY_REC_FG_DET  A
            JOIN PPC_AGENCY_REC_FG_MST B ON A.MEMO_ID =B.MEMO_ID 
            JOIN #TMPPRODUCT_CODE TMP ON TMP.PRODUCT_CODE =A.PRODUCT_CODE 
            WHERE B.CANCELLED =0 AND B.MEMO_TYPE =1

             UPDATE A
             SET COST_PRICE =ISNULL(C.MATERIAL_COST,0)+ISNULL(FG.AMOUNT,0),
             PURCHASE_PRICE  =ISNULL(C.MATERIAL_COST,0)+ISNULL(FG.AMOUNT,0)
             FROM PPC_TRANSFER_TO_TRADING_DET A
             JOIN PPC_TRANSFER_TO_TRADING_MST B ON A.MEMO_ID =B.MEMO_ID 
             JOIN 
            (
             SELECT A.PRODUCT_CODE ,SUM(ISNULL(MC.SINGLE_MATERIAL_COST,0)) AS  MATERIAL_COST
             FROM #TMPFGMEMODETAILS A
             JOIN #TMPMATERISLCOST MC ON A.MEMO_ID =MC.REF_ROW_ID 
             GROUP BY A.PRODUCT_CODE
             ) C ON A.PRODUCT_CODE =C.PRODUCT_CODE 
             JOIN #TMPFGCOST FG ON A.PRODUCT_CODE =FG.PRODUCT_CODE
             WHERE A.MEMO_ID =@CMEMO_ID 
             
 
          SET @CSTEP=50
          
         
          INSERT SKU ( PRODUCT_CODE,PRODUCT_NAME,ARTICLE_CODE, PARA1_CODE, PARA2_CODE, PARA3_CODE,PARA4_CODE, PARA5_CODE, PARA6_CODE,  
				PURCHASE_PRICE, MRP,  LAST_UPDATE,INV_NO,INV_DT, RECEIPT_DT, AC_CODE,FORM_ID,WS_PRICE,ER_FLAG,  
				BARCODE_CODING_SCHEME)  
		 SELECT  DISTINCT  A.PRODUCT_CODE,C.ARTICLE_NAME, C.ARTICLE_CODE, SKU.PARA1_CODE, SKU.PARA2_CODE, 
			  SKU.PARA3_CODE, '0000000' AS PARA4_CODE, '0000000' AS  PARA5_CODE, '0000000' AS  PARA6_CODE,  
			   A.PURCHASE_PRICE, A.MRP,  GETDATE() AS LAST_UPDATE,   
			   B.MEMO_NO  AS INV_NO, B.MEMO_DT AS  INV_DT, B.MEMO_DT  AS RECEIPT_DT, '0000000000' AS AC_CODE,   
			   '0000000' AS FORM_ID,A.WS_PRICE AS WS_PRICE,1 AS MEMO_TYPE,C.CODING_SCHEME  
			FROM PPC_TRANSFER_TO_TRADING_DET  A  
			JOIN PPC_TRANSFER_TO_TRADING_MST  B ON A.MEMO_ID  = B.MEMO_ID
			JOIN PPC_FG_SKU  SKU ON A.PRODUCT_CODE =SKU.PRODUCT_CODE   
			JOIN ARTICLE C ON SKU.ARTICLE_CODE = C.ARTICLE_CODE  
			LEFT OUTER JOIN SKU D ON A.PRODUCT_CODE = D.PRODUCT_CODE  
			WHERE B.MEMO_ID  = @CMEMO_ID   
			AND   D.PRODUCT_CODE IS NULL  
		 
	
			SET @CSTEP=60
			
		 INSERT PMT01106	( LAST_UPDATE, REP_ID, PRODUCT_CODE, QUANTITY_IN_STOCK, DEPT_ID, BIN_ID )  
		 SELECT  DISTINCT 	 GETDATE() AS  LAST_UPDATE,NULL  AS  REP_ID, A.PRODUCT_CODE, 0  AS QUANTITY_IN_STOCK, 
		 LEFT(A.MEMO_ID,2) AS  DEPT_ID, '000' AS BIN_ID 
		 FROM  PPC_TRANSFER_TO_TRADING_DET  A  
		 JOIN PPC_TRANSFER_TO_TRADING_MST  B ON A.MEMO_ID  = B.MEMO_ID
		 LEFT OUTER JOIN PMT01106 D ON A.PRODUCT_CODE = D.PRODUCT_CODE  
		 WHERE B.MEMO_ID  = @CMEMO_ID  AND D.PRODUCT_CODE IS NULL
          
         
     --SELECT * FROM PPC_AGENCY_ISSUE_MATERIAL_MST A
    END TRY
    BEGIN CATCH
      SET @CERRORMSG ='ERROR || STEP-'+@CSTEP+' SP_PPC_RECALCULATE_COST_PRICE ' + ERROR_MESSAGE()
     
    END CATCH
    
    
END_PROC:
END
