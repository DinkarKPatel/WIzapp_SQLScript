CREATE PROCEDURE PPC_SAVETRAN_FGBCG
(
	@NUPDATEMODE		NUMERIC(1,0),
	@NSPID				INT,
	@CFINYEAR			VARCHAR(10),
	@CXNMEMOID			VARCHAR(40)='',
	@CLOCID				VARCHAR(2)=''	
)
--WITH ENCRYPTION
AS
BEGIN
	DECLARE @CTEMPDBNAME			VARCHAR(100),
			@CMASTERTABLENAME		VARCHAR(100),
			@CDETAILTABLENAME1		VARCHAR(100),
			@CDETAILTABLENAME2		VARCHAR(100),
			@CTEMPMASTERTABLENAME	VARCHAR(100),
			@CTEMPDETAILTABLENAME1	VARCHAR(100),
			@CTEMPDETAILTABLENAME2	VARCHAR(100),
			@CTEMPMASTERTABLE		VARCHAR(100),
			@CTEMPDETAILTABLE1		VARCHAR(100),
			@CTEMPDETAILTABLE2		VARCHAR(100),
			@CERRORMSG				VARCHAR(MAX),
			@LDONOTUPDATESTOCK		BIT,
			@CKEYFIELD1				VARCHAR(50),
			@CKEYFIELDVAL1			VARCHAR(50),
			@CMEMONO				VARCHAR(20),
			@NMEMONOLEN				NUMERIC(20,0),
			@CMEMONOVAL				VARCHAR(50),
			@CMEMODEPTID			VARCHAR(2),
			@CLOCATIONID			VARCHAR(2),
			@CHODEPTID				VARCHAR(2),
			@CCMD					NVARCHAR(4000),
			@CCMDOUTPUT				NVARCHAR(4000),
			@NSAVETRANLOOP			BIT,
			@NSTEP					INT,
			@LENABLETEMPDATABASE	BIT,
			@CMEMONOPREFIX VARCHAR(10)

	DECLARE @OUTPUT TABLE (ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))
	
	SET @CMEMONOPREFIX=@CLOCID

	SET @NSTEP = 10		-- SETTTING UP ENVIRONMENT

	
	SET @CTEMPDBNAME = ''

	SET @CMASTERTABLENAME	= 'PPC_FGBCG_MST'
	SET @CDETAILTABLENAME1	= 'PPC_FGBCG_DET'
	SET @CDETAILTABLENAME2	= 'PPC_FGBCG_SUB_DET'
	
	SET @CTEMPMASTERTABLENAME	= 'PPC_PPC_FGBCG_MST_UPLOAD'
	SET @CTEMPDETAILTABLENAME1	= 'PPC_PPC_FGBCG_DET_UPLOAD'
	SET @CTEMPDETAILTABLENAME2	= 'PPC_PPC_FGBCG_SUB_DET_UPLOAD'
	
	
	SET @CTEMPMASTERTABLE	=  @CTEMPMASTERTABLENAME
	SET @CTEMPDETAILTABLE1	=  @CTEMPDETAILTABLENAME1
	SET @CTEMPDETAILTABLE2	=  @CTEMPDETAILTABLENAME2
	
	SET @CERRORMSG			= ''
	SET @LDONOTUPDATESTOCK	= 0
	SET @CKEYFIELD1			= 'MEMO_ID'
	SET @CMEMONO			= 'MEMO_NO'
	SET @NMEMONOLEN			= 10
	
	IF ISNULL(@CLOCID,'')=''
		SELECT @CLOCATIONID	= [VALUE] FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'
	ELSE
		SELECT @CLOCATIONID=@CLOCID
		
	SELECT @CHODEPTID		= [VALUE] FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'		

	BEGIN TRANSACTION
	BEGIN TRY
		
		SET @NSTEP = 20

		IF ISNULL(@CXNMEMOID,'') = '' AND @NUPDATEMODE IN (3)
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' MEMO ID REQUIRED '
			GOTO END_PROC  		
		END
		
		IF @NUPDATEMODE=3
		BEGIN
		
		SET @NSTEP=30    
		    
		IF EXISTS(SELECT TOP 1'U'   FROM PPC_FGBCG_MST A
		JOIN PPC_FGBCG_DET B ON A.MEMO_ID=B.MEMO_ID
		JOIN PPC_FG_SKU C ON C.PPC_FGBCG_DET_ROW_ID=B.ROW_ID 
		JOIN
		(
		  SELECT PRODUCT_CODE FROM PPC_FG_BARCODE_NA_DET A
		  JOIN PPC_FG_BARCODE_NA_MST B ON A.MEMO_ID =B.MEMO_ID 
		  WHERE B.CANCELLED =0
		) D ON D.PRODUCT_CODE =C.PRODUCT_CODE 
		WHERE A.MEMO_ID=@CXNMEMOID)
		BEGIN
		    
		     SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' RATIO ASSIGN FOR NA BARCODE...'
			 GOTO END_PROC  	
		
		END

		    
			SET @NSTEP = 30		
			SET @CCMD=N' UPDATE PPC_FGBCG_MST SET CANCELLED=1,LAST_UPDATE=GETDATE() WHERE MEMO_ID='''+@CXNMEMOID+''''
			EXEC SP_EXECUTESQL @CCMD
			
			UPDATE A SET QUANTITY_IN_STOCK =0 FROM PPC_FG_PMT A
			JOIN PPC_FG_SKU B ON A.PRODUCT_CODE =B.PRODUCT_CODE
			JOIN PPC_FGBCG_DET D ON D.ROW_ID =B.PPC_FGBCG_DET_ROW_ID
			JOIN PPC_FGBCG_MST E ON E.MEMO_ID=D.MEMO_ID 
			WHERE E.MEMO_ID =@CXNMEMOID
			
			GOTO END_PROC
		END
		
		SET @NSTEP = 40
		
		--GETTING DEPT_ID FROM TEMP MASTER TABLE
		SET @CCMD = 'SELECT @CMEMODEPTID = DEPT_ID, @CKEYFIELDVAL1 = MEMO_ID FROM ' + @CTEMPMASTERTABLE +' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' '
		EXEC SP_EXECUTESQL @CCMD, N'@CMEMODEPTID VARCHAR(2) OUTPUT, @CKEYFIELDVAL1 VARCHAR(50) OUTPUT', 
								  @CMEMODEPTID OUTPUT, @CKEYFIELDVAL1 OUTPUT
		IF (@CMEMODEPTID IS NULL)
		BEGIN
			  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE SAVED...'
			  GOTO END_PROC  		
		END

		-- START UPDATING XN TABLES	
		IF @NUPDATEMODE = 1 -- ADDMODE	
		BEGIN	
			SET @NSTEP = 50		-- GENERATING NEW KEY
			
			IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
			BEGIN
				-- GENERATING NEW MRR_NO		
				SET @NSAVETRANLOOP=0
				WHILE @NSAVETRANLOOP=0
				BEGIN
					EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,
									@CFINYEAR,0, @CMEMONOVAL OUTPUT   
					
					SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+' 
											WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' 
											AND FIN_YEAR = '''+@CFINYEAR+''' )
									SET @NLOOPOUTPUT=0
								ELSE
									SET @NLOOPOUTPUT=1'
					PRINT @CCMD
					EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
				END

				IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'	
					  GOTO END_PROC  		
				END

				SET @NSTEP = 60		-- GENERATING NEW ID

				-- GENERATING NEW ORDER ID
				SET @CKEYFIELDVAL1 = @CLOCATIONID + @CFINYEAR+ REPLICATE('0', 15-LEN(LTRIM(RTRIM(@CMEMONOVAL)))) + LTRIM(RTRIM(@CMEMONOVAL))
				IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
					  GOTO END_PROC
				END
				
				SET @NSTEP = 70
				-- CHECK WETHER THE MEMO ID IS STILL LATER
				IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
					  GOTO END_PROC
				END

				SET @NSTEP = 80		-- UPDATING NEW ID INTO TEMP TABLES

				-- UPDATING NEWLY GENERATED MEMO NO AND MEMO ID IN BUYER ORDER MST AND BUYER ORDER DET TEMP TABLES
				SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' + 
							@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
				PRINT @CCMD		
				EXEC SP_EXECUTESQL @CCMD
				
				SET @NSTEP = 90
				SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
				PRINT @CCMD	
				EXEC SP_EXECUTESQL @CCMD
			
			
			SET @CCMD = N'UPDATE '+ @CTEMPDETAILTABLE2 + ' SET ROW_ID = NEWID() WHERE LEFT(ROW_ID,5) = ''LATER'' AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			PRINT @CCMD	
			EXEC SP_EXECUTESQL @CCMD
				
				
	    END
		END					-- END OF ADDMODE
		ELSE				-- CALLED FROM EDITMODE
		BEGIN				-- START OF EDITMODE
			SET @NSTEP = 110		-- GETTING ID INFO FROM TEMP TABLE
			
			-- GETTING ORDER_ID WHICH IS BEING EDITED
			SET @CCMD = 'SELECT @CKEYFIELDVAL1 = ORDER_ID, @CMEMONOVAL = ORDER_NO FROM ' + @CTEMPMASTERTABLE +' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			EXEC SP_EXECUTESQL @CCMD, N'@CKEYFIELDVAL1 VARCHAR(50) OUTPUT, @CMEMONOVAL VARCHAR(50) OUTPUT', 
							   @CKEYFIELDVAL1 OUTPUT, @CMEMONOVAL OUTPUT
			IF (@CKEYFIELDVAL1 IS NULL ) OR (@CMEMONOVAL IS NULL )
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'
				  GOTO END_PROC  		
			END
			
			SET @NSTEP = 120		-- UPDATING SENT_TO_HO FLAG TEMP TABLE
			
			SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE LEFT(ORDER_ID,5) = ''LATER'' AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			PRINT @CCMD	
			EXEC SP_EXECUTESQL @CCMD
			

			
			SET @NSTEP = 130	
			SET @CCMD = N'UPDATE '+ @CTEMPDETAILTABLE2 + ' SET ROW_ID = NEWID() WHERE LEFT(ROW_ID,5) = ''LATER'' AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			PRINT @CCMD	
			EXEC SP_EXECUTESQL @CCMD
			
			SET @NSTEP = 140
			
			--DELETE A FROM PPC_BUYER_ORDER_SUB_DET A
			--JOIN PPC_BUYER_ORDER_DET B ON A.REF_ROW_ID =B.ROW_ID
			--WHERE B.ORDER_ID=@CKEYFIELDVAL1
			
			--DELETE FROM PPC_BUYER_ORDER_DET WHERE ORDER_ID = @CKEYFIELDVAL1
			
	    END					-- END OF EDITMODE
        
        --UPDATE PPC_FGBCG_MST_UPLOAD
        -- SET EDT_USER_CODE='0000000' WHERE ISNULL(EDT_USER_CODE,'')='' AND SP_ID=LTRIM(RTRIM(STR(@NSPID)))
   
       IF OBJECT_ID('TEMPDB..#TMPORDERDET','U') IS NOT NULL
          DROP TABLE #TMPORDERDET
          
          SELECT ROW_ID=NEWID(),ROW_ID AS REF_ROW_ID INTO #TMPORDERDET 
          FROM PPC_PPC_FGBCG_DET_UPLOAD  
          WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
          AND LEFT(ROW_ID,5) = 'LATER'
          
          
          UPDATE A SET ROW_ID =B.ROW_ID 
          FROM PPC_PPC_FGBCG_DET_UPLOAD A
          JOIN #TMPORDERDET B ON A.ROW_ID=B.REF_ROW_ID
		  WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
          AND LEFT(A.ROW_ID,5) = 'LATER'	
          
          UPDATE A SET PPC_FGBCG_DET_ROW_ID =B.ROW_ID 
          FROM PPC_PPC_FGBCG_SUB_DET_UPLOAD A
          JOIN #TMPORDERDET B ON A.PPC_FGBCG_DET_ROW_ID=B.REF_ROW_ID
		  WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
          AND LEFT(A.PPC_FGBCG_DET_ROW_ID,5) = 'LATER'	
          
         
        DECLARE @FILTER VARCHAR(MAX)
	    SET @FILTER=' B.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
		SET @NSTEP = 150
		
		EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPMASTERTABLENAME
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CMASTERTABLENAME
			, @CKEYFIELD1	= @CKEYFIELD1
			, @BALWAYSUPDATE = 1
			,@CFILTERCONDITION=@FILTER
			
		
		SET @NSTEP = 160		-- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES

		EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPDETAILTABLENAME1
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CDETAILTABLENAME1
			, @CKEYFIELD1	= 'ROW_ID'
			, @BALWAYSUPDATE = 1
			,@CFILTERCONDITION=@FILTER
			
		
		EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPDETAILTABLENAME2
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CDETAILTABLENAME2
			, @CKEYFIELD1	= 'ROW_ID'
			, @BALWAYSUPDATE = 1
			,@CFILTERCONDITION=@FILTER
			
	END TRY
	BEGIN CATCH
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		GOTO END_PROC
	END CATCH
	
	IF ISNULL(@CERRORMSG,'')='' 
	EXEC SP_PPC_GEN_FG_BARCODE @CMEMO_ID=@CKEYFIELDVAL1, @CERRORMSG = @CERRORMSG OUTPUT  
	  
    IF ISNULL(@CERRORMSG,'')<>''    
	GOTO END_PROC   
	
END_PROC:
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')=''
			COMMIT TRANSACTION
		ELSE
			ROLLBACK
	END
	
	INSERT @OUTPUT ( ERRMSG, MEMO_ID)
		VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )

	SELECT * FROM @OUTPUT	
	
	
	---DROPPING TEMP TABLES
	IF ISNULL(@CERRORMSG,'') = ''
	BEGIN
	   DELETE FROM PPC_PPC_FGBCG_MST_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
	   DELETE FROM PPC_PPC_FGBCG_DET_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))	
	   DELETE FROM PPC_PPC_FGBCG_SUB_DET_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))	
    END
    
 
END						
------------- END OF PROCEDURE PPC_SAVETRAN_FGBCG		-----------------------------------------
