CREATE PROCEDURE SP3S_PRINTPURCHASE_GST  
(  
 @CXN_TYPE VARCHAR(10)='',  
 @CXN_ID VARCHAR(100)=''  
)  
AS  
BEGIN  
SET NOCOUNT ON       
DECLARE @DTSQL NVARCHAR(MAX),@CCOLNAME VARCHAR(MAX),@CERRMSG VARCHAR(100),@NCALQTYSUM NUMERIC(10,3),  
        @NSTOREDQTY NUMERIC(10,3),@CSTEP VARCHAR(10),@RATECOL VARCHAR(100),@SEASON VARCHAR(1000),  
        @MD_PER VARCHAR(1000),@cterms varchar(250)
IF @CXN_TYPE!='PUR'  
   RETURN

   
--STARTS:CHANGES DONE TO SHOW PO NUMBER: 04 APR 2018        
DECLARE @PIM_MODE INT,@CONFIG BIT,@LIST_OF_PO VARCHAR(1000)=''
SELECT TOP 1 @CONFIG=ISNULL(PRINT_PONO_PUR,0) FROM GST_COMPANY_CONFIG WHERE XN_TYPE=@CXN_TYPE
SELECT TOP 1 @PIM_MODE=PIM_MODE,@cterms=Terms FROM PIM01106 (NOLOCK) WHERE MRR_ID=@CXN_ID   

IF @cterms=''
set @cterms=NULL

IF OBJECT_ID('TEMPDB..#POD','U') IS NOT NULL
   DROP TABLE #POD
SELECT DISTINCT POM.PO_NO
INTO #POD
FROM PIM01106 PIM (NOLOCK) 
JOIN PID01106 PID (NOLOCK) ON PIM.MRR_ID=PID.MRR_ID
LEFT JOIN POM01106 POM (NOLOCK) JOIN POD01106 POD (NOLOCK) ON POM.PO_ID=POD.PO_ID ON PID.PO_ROW_ID=POD.ROW_ID
WHERE PIM.MRR_ID IN (@CXN_ID) AND @PIM_MODE=3 AND @CONFIG=1
SELECT @LIST_OF_PO=COALESCE(@LIST_OF_PO,'')+PO_NO+',' FROM #POD WHERE PO_NO<>''
SET @LIST_OF_PO=ISNULL(@LIST_OF_PO,'')
IF @LIST_OF_PO<>'' SET @LIST_OF_PO='PO NO: '+LEFT(@LIST_OF_PO,LEN(@LIST_OF_PO)-1)
--ENDS:CHANGES DONE TO SHOW PO NUMBER: 04 APR 2018 
        
;WITH CTE AS
(SELECT DISTINCT CAST(MD_PERCENTAGE AS VARCHAR)AS MD_PERCENTAGE FROM PID01106 (NOLOCK) WHERE MRR_ID=@CXN_ID AND ISNULL(MD_PERCENTAGE,0)<>0)
SELECT @MD_PER=COALESCE(@MD_PER,'')+REPLACE(MD_PERCENTAGE,'.00','')+',' FROM CTE
SET @MD_PER=RTRIM(@MD_PER)
IF LEN(@MD_PER)>0
   SET @MD_PER='MD[%]: '+LEFT(@MD_PER,LEN(@MD_PER)-1)
   
SET @CERRMSG=''  
SET @CSTEP=100  
BEGIN TRY  
          
  IF @CXN_TYPE='PUR'  
     BEGIN         
       SET @CSTEP=10             
       IF OBJECT_ID ('TEMPDB..#TRANSPORTER','U') IS NOT NULL  
	      DROP TABLE #TRANSPORTER  
       
	   SELECT A.PARCEL_MEMO_ID
	   ,ANGM.ANGADIA_NAME AS TRANSPORTER_NAME
	   ,A.BILTY_NO AS BILTY_NO
	   ,b.BOX_NO AS BOX_NO
	   ,SUM(QTY) AS WGHT
	   ,b.REF_MEMO_ID AS XN_ID
	   ,A.VEHICLE_NO  
	   INTO #TRANSPORTER  
  FROM PARCEL_MST A  
  JOIN PARCEL_DET B ON A.PARCEL_MEMO_ID =B.PARCEL_MEMO_ID   
  LEFT OUTER JOIN ANGM ON ANGM.ANGADIA_CODE =A.ANGADIA_CODE   
  WHERE A.XN_TYPE =@CXN_TYPE AND b.REF_MEMO_ID=@CXN_ID  
  GROUP BY ANGM.ANGADIA_NAME ,A.PARCEL_MEMO_ID ,A.BILTY_NO ,b.REF_MEMO_ID,A.VEHICLE_NO,b.BOX_NO  
     
  ;WITH CTE AS   
  (  
   SELECT PARCEL_MEMO_ID ,  
          SR=ROW_NUMBER () OVER (ORDER BY PARCEL_MEMO_ID)   
   FROM #TRANSPORTER  
  )  
  DELETE FROM CTE WHERE SR>1  
  
  IF OBJECT_ID('TEMPDB..#DATASET1') IS NOT NULL
	 DROP TABLE #DATASET1   
	 
  DECLARE @PP_TOTAL VARCHAR(100),@MRP_TOTAL VARCHAR(100)   
  SELECT @PP_TOTAL='PP TOTAL: '+CAST(CAST(SUM(QUANTITY*PURCHASE_PRICE) AS DECIMAL(18,2))AS VARCHAR)
  ,@MRP_TOTAL='MRP TOTAL: '+CAST(CAST(SUM(QUANTITY*MRP) AS DECIMAL(18,2))AS VARCHAR)
  FROM PID01106 (NOLOCK) 
  WHERE MRR_ID=@CXN_ID

  ;WITH CTE
  AS
  (
   SELECT DISTINCT P3.PARA3_NAME AS SEASON
   FROM PID01106 PD (NOLOCK) JOIN PARA3 P3 (NOLOCK) ON PD.PARA3_CODE=P3.PARA3_CODE
   WHERE MRR_ID=@CXN_ID
  )
  SELECT @SEASON=COALESCE(@SEASON,'')+SEASON+',' FROM CTE
  IF @SEASON<>''
     SET @SEASON='SEASON: '+LEFT(@SEASON,LEN(@SEASON)-1)
     
  IF ISNULL(@PP_TOTAL,'')=''
     SET @PP_TOTAL='PP TOTAL: 0'
     
  IF ISNULL(@MRP_TOTAL,'')=''
     SET @MRP_TOTAL='MRP TOTAL: 0'

  IF OBJECT_ID('TEMPDB..#ledger_terms') IS NOT NULL
	     DROP TABLE #ledger_terms   
	select * into #ledger_terms  FROM dbo.FN3SGETLEDGERTERMS (@cterms)


     
  SELECT l.Dept_Print_Name COMPANY_NAME
  --COMPANY
  ,L.ADDRESS1--,CMP.ADDRESS1
  ,L.ADDRESS2--,CMP.ADDRESS2  
  ,CLOC.CITY --,CMP.CITY
  ,PHONES_FAX=CASE LEN(ISNULL(l.phone,'')) WHEN 0 THEN '' ELSE 'TEL: '+REPLACE(REPLACE(l.phone,'TEL',''),':','') END  
  ,TIN_NO=CASE LEN(ISNULL(l.TIN_NO,'')) WHEN 0 THEN '' ELSE 'TIN: '+l.TIN_NO END  
  ,TAN_NO=CASE LEN(ISNULL(l.TAN_NO,'')) WHEN 0 THEN '' ELSE 'TAN: '+l.TAN_NO END   
  ,CIN=CASE LEN(ISNULL(CMP.CIN,'')) WHEN 0 THEN '' ELSE 'CIN: '+CMP.CIN END  
  --OTHERS
  ,CMP.LOGO_PATH
  ,LOC_GST_NO=CASE LEN(ISNULL(L.LOC_GST_NO,'')) WHEN 0 THEN '' ELSE 'GSTIN: '+L.LOC_GST_NO END   
  ,CAST(0 AS NUMERIC(10,2)) AS REVERSE_CHARGES  
  --28 JUL 2017  
  --,PIM.INV_NO AS INV_NO  
  --,CONVERT(VARCHAR,PIM.INV_DT,105)AS INV_DT  
  ,'MRR NO: '+PIM.MRR_NO AS INV_NO  
  ,'REC DATE: '+CONVERT(VARCHAR,PIM.MRR_DT,105)AS INV_DT  
  --28 JUL 2017   
  ,ISNULL(LS.GST_STATE_NAME,'') AS  LOC_GST_STATE_NAME  
  ,LS.GST_STATE_CODE AS LOC_GST_STATE_CODE  
       
  --,'SUPPLIER:- '+CASE WHEN INV_MODE=1 THEN LM.AC_NAME ELSE L.DEPT_NAME END 
  -- +CASE (SELECT TOP 1 ISNULL(IS_PARTY_ALIAS,0) FROM GST_COMPANY_CONFIG WHERE XN_TYPE=@CXN_TYPE)
		--  WHEN 0 THEN '' 
		--  ELSE CASE WHEN INV_MODE=1 THEN ISNULL('-'+LM.ALIAS,'') ELSE ISNULL('-'+L.DEPT_ALIAS,'') END
  --  END
  --AS PARTY_NAME  
       
  ,'SUPPLIER:- '+CASE WHEN INV_MODE=1 THEN LM.AC_NAME WHEN INV_MODE=2 THEN LM.AC_NAME ELSE L.DEPT_NAME END 
   +CASE (SELECT TOP 1 ISNULL(IS_PARTY_ALIAS,0) FROM GST_COMPANY_CONFIG WHERE XN_TYPE=@CXN_TYPE)
		  WHEN 0 THEN '' 
		  ELSE CASE WHEN INV_MODE=1 THEN ISNULL('-'+LM.ALIAS,'') WHEN INV_MODE=2 THEN ISNULL('-'+LM.ALIAS,'') ELSE ISNULL('-'+L.DEPT_ALIAS,'') END
    END
  AS PARTY_NAME
  --05 AUG 2017  
  --,CASE WHEN INV_MODE=1   
  --      THEN RTRIM(LTRIM(LMP.ADDRESS0+CASE LEN(ISNULL(LMP.ADDRESS1,'')) WHEN 0 THEN '' ELSE ', ' END+LMP.ADDRESS1+CASE LEN(ISNULL(LMP.ADDRESS2,'')) WHEN 0 THEN '' ELSE ', ' END+LMP.ADDRESS2+CASE LEN(ISNULL(CUSAR.AREA_NAME,'')) WHEN 0 THEN '' ELSE ', ' END+CUSAR.AREA_NAME +CASE LEN(ISNULL(CUSCT.CITY,'')) WHEN 0 THEN '' ELSE ', ' END+CUSCT.CITY+CASE LEN(ISNULL(CUSAR.PINCODE,'')) WHEN 0 THEN '' ELSE ', ' END+CUSAR.PINCODE ))   
  --      ELSE RTRIM(LTRIM(TL.ADDRESS1 +CASE LEN(ISNULL(TL.ADDRESS2 ,'')) WHEN 0 THEN '' ELSE ', ' END+TL.ADDRESS2 +CASE LEN(ISNULL(TLAR.AREA_NAME,'')) WHEN 0 THEN '' ELSE ', ' END+TLAR.AREA_NAME+CASE LEN(ISNULL(TLCT.CITY,'')) WHEN 0 THEN '' ELSE ', ' END+TLCT.CITY+CASE LEN(ISNULL(TLAR.PINCODE,'')) WHEN 0 THEN '' ELSE ', ' END+TLAR.PINCODE))    
  -- END   
  -- AS PARTY_ADDRESS  
  ,CASE WHEN INV_MODE IN (1,2)  
        THEN CASE LEN(ISNULL(LMP.ADDRESS0,'')) WHEN 0 THEN '' ELSE RTRIM(LTRIM(ISNULL(LMP.ADDRESS0,''))) END  
        ELSE CASE LEN(ISNULL(TL.ADDRESS1,'')) WHEN 0 THEN '' ELSE RTRIM(LTRIM(TL.ADDRESS1)) END  
   END  
   AS PARTY_ADDRESS1  
        
  ,CASE WHEN INV_MODE IN (1,2)  
           THEN CASE LEN(ISNULL(LMP.ADDRESS1,'')) WHEN 0 THEN '' ELSE RTRIM(LTRIM(ISNULL(LMP.ADDRESS1,''))) END  
        ELSE CASE LEN(ISNULL(TL.ADDRESS2,'')) WHEN 0 THEN '' ELSE RTRIM(LTRIM(TL.ADDRESS2)) END  
   END  
   AS PARTY_ADDRESS2  
  
  ,CASE WHEN INV_MODE IN (1,2)
        THEN CASE LEN(ISNULL(LMP.ADDRESS2,'')) WHEN 0 THEN '' ELSE RTRIM(LTRIM(ISNULL(LMP.ADDRESS2,''))) END  
        ELSE ''--CASE LEN(ISNULL(TL.ADDRESS1,'')) WHEN 0 THEN '' ELSE 'RECEIVER: '+RTRIM(LTRIM(TL.ADDRESS1))  
   END  
   AS PARTY_ADDRESS3  
              
  ,CASE WHEN INV_MODE IN (1,2)
        THEN RTRIM(LTRIM(CASE RIGHT(RTRIM(ISNULL(CUSAR.AREA_NAME,'')),1) WHEN ',' THEN LEFT(ISNULL(CUSAR.AREA_NAME,''),LEN(ISNULL(CUSAR.AREA_NAME,''))-1) ELSE ISNULL(CUSAR.AREA_NAME,'')END  
                +CASE LEN(ISNULL(CUSCT.CITY,'')) WHEN 0 THEN '' ELSE ', ' END+ISNULL(CUSCT.CITY,'')  
                +CASE LEN(ISNULL(CUSAR.PINCODE,'')) WHEN 0 THEN '' ELSE ', ' END+CUSAR.PINCODE))  
        ELSE RTRIM(LTRIM(ISNULL(TLAR.AREA_NAME,'')  
                +CASE LEN(ISNULL(TLCT.CITY,'')) WHEN 0 THEN '' ELSE ', ' END+ISNULL(TLCT.CITY,'')  
                +CASE LEN(ISNULL(TLAR.PINCODE,''))  WHEN 0 THEN '' ELSE ', ' END+TLAR.PINCODE))  
   END  
   +CASE ISNULL(LMP.MOBILE,'') WHEN '' THEN '' ELSE 'PHONE- '+LMP.MOBILE END  
   AS PARTY_CITY  
   --05 AUG 2017  
   ,CASE WHEN INV_MODE IN (1,2) THEN LMP.AC_GST_NO ELSE TL.LOC_GST_NO END AS PARTY_GST_NO  
   ,ISNULL(CASE WHEN INV_MODE IN (1,2) THEN CS.GST_STATE_NAME ELSE TS.GST_STATE_NAME END,'') AS PARTY_STATE_NAME  
   ,ISNULL(CASE WHEN INV_MODE IN (1,2) THEN CS.GST_STATE_CODE ELSE TS.GST_STATE_CODE END,'') AS PARTY_STATE_CODE  
   ,CASE WHEN PIM.CANCELLED =1 THEN 'CANCELLED' ELSE '' END AS CANCELLED  
  
   ,CASE WHEN PIM.INV_MODE=2 AND L.LOC_GST_NO=TL.LOC_GST_NO THEN 'DELIVERY CHALLAN' 
         ELSE 'MATERIAL RECEIPT REPORT' END  
    AS INVOICE_TYPE  
  
   ,ISNULL(LS.UT,0) AS UT  
   ,(SELECT TOP 1 ISNULL(IS_ENABLED,0) FROM GST_TNC WHERE XN_TYPE=@CXN_TYPE)AS PRINT_TERM  
   ,'' AS SHIPPING_ADDRESS  
   ,'' AS SHIPPING_ADDRESS2  
   ,'' AS SHIPPING_ADDRESS3  
   ,'' AS SHIPPING_AREA_CODE  
   ,'' AS SHIPPING_AREA_NAME  
   ,'' AS SHIPPING_CITY_NAME  
   ,'' AS SHIPPING_STATE_NAME  
   ,'' AS SHIPPING_PIN  
   ,ISNULL(L.REGISTERED_ADD,'')REGISTERED_ADDRESS  
   ,ISNULL(PIM.REMARKS,'')REMARKS  
   ,BUYER_ORDER_NO=''--CASE ISNULL(BUYER_ORDER_NO,'') WHEN '' THEN '' ELSE 'P.O.NO: '+BUYER_ORDER_NO END  
   
   ,ISNULL(COM.LOGO,0) AS LOGO  
   ,ISNULL(COM.NAME,0) AS NAME  
   ,ISNULL(COM.ADDRESS1,0) AS PRINT_ADDRESS1  
   ,ISNULL(COM.TELEPHONE1,0) AS TELEPHONE1  
   ,ISNULL(COM.CIN_NO,0) AS CIN_NO  
   ,ISNULL(COM.DATE_WITH_TIME,0) AS DATE_WITH_TIME  
   
   ,ISNULL((SELECT SUM(XN_VALUE_WITHOUT_GST) FROM PID01106 (NOLOCK) WHERE MRR_ID=@CXN_ID),0)  
    +ISNULL(PIM.FREIGHT,0) 
    +ISNULL(PIM.OTHER_CHARGES,0) 
    AS [TAXABLEVALUE]  
        
   ,ISNULL((SELECT SUM(CGST_AMOUNT) FROM PID01106 (NOLOCK) WHERE MRR_ID=@CXN_ID),0)  
    +ISNULL(PIM.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(PIM.FREIGHT_CGST_AMOUNT,0)  
    AS [CGSTAMOUNT]   
                
   ,ISNULL((SELECT SUM(SGST_AMOUNT) FROM PID01106 (NOLOCK) WHERE MRR_ID=@CXN_ID),0)  
    +ISNULL(PIM.OTHER_CHARGES_SGST_AMOUNT,0)+ISNULL(PIM.FREIGHT_SGST_AMOUNT,0)  
    AS [SGSTAMOUNT]  
                
   ,ISNULL((SELECT SUM(IGST_AMOUNT) FROM PID01106 (NOLOCK) WHERE MRR_ID=@CXN_ID),0)  
    +ISNULL(PIM.OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(PIM.FREIGHT_IGST_AMOUNT,0)  
    AS [IGSTAMOUNT]  
                
   ,ISNULL(PIM.FREIGHT,0) AS FREIGHT  
   ,/*ISNULL(PIM.INSURANCE,0)*/0 AS INSURANCE_AMOUNT  
   ,/*ISNULL(PIM.PACKING,0)*/0 AS PACKING  
   ,ISNULL(PIM.OTHER_CHARGES,0) AS OTHER_CHARGE  
   ,ISNULL(PIM.TOTAL_AMOUNT/*NET_AMOUNT*/,0) AS NETAMOUNT  
   ,ISNULL(PIM.ROUND_OFF,0) AS ROUND_OFF  
     
   ,ISNULL((SELECT SUM(CGST_AMOUNT+SGST_AMOUNT+IGST_AMOUNT) FROM PID01106(NOLOCK) WHERE MRR_ID=@CXN_ID),0)  
    +ISNULL(PIM.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(PIM.FREIGHT_CGST_AMOUNT,0)  
    +ISNULL(PIM.OTHER_CHARGES_SGST_AMOUNT,0)+ISNULL(PIM.FREIGHT_SGST_AMOUNT,0)  
    +ISNULL(PIM.OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(PIM.FREIGHT_IGST_AMOUNT,0)  
    AS [GSTCOLLECTION]  
   --01 AUG 2017  
   ,CASE ISNULL(PIM.INV_NO,'') WHEN '' THEN '' ELSE 'RECEIVE NO '+PIM.INV_NO END AS RECEIVE_NO  
   ,CASE YEAR(ISNULL(PIM.INV_DT,'')) WHEN 1900 THEN '' ELSE 'BILL DATE '+CONVERT(VARCHAR,PIM.INV_DT,105) END AS BILL_DT  
   ,CASE ISNULL(PIM.BILL_NO,'') WHEN '' THEN '' ELSE 'BILL NO '+ISNULL(PIM.BILL_NO,'') END  AS BILL_NO  
   ,CASE ISNULL(PIM.RECEIPT_DT,'') WHEN '' THEN '' ELSE 'RECEIVE DATE '+CONVERT(VARCHAR,PIM.RECEIPT_DT,105) END AS RECEIVE_DATE  
   --02 SEP 2017  
   ,TERMS_NAME= ''
   ,TERMS=CASE ISNULL(PIM.TERMS,'') WHEN '' THEN '' ELSE 'TERMS: '+PIM.TERMS END   
   ,@PP_TOTAL AS PP_TOTAL
   ,@MRP_TOTAL AS MRP_TOTAL
   ,@SEASON AS SEASON
   ,ISNULL(@MD_PER,0) MD_PERCENTAGE
   ,'G.M.: '+CAST(ISNULL(LT.GROSS_MARGIN,0) AS VARCHAR) AS [GROSS_MARGIN]
   ,'CR DAYS : '+CAST(ISNULL(LT.CREDIT_DAYS,0) AS VARCHAR) AS [CR_DAYS]
   ,'DISC : '+CAST(ISNULL(LT.prevatdiscount ,0) AS VARCHAR) AS [PRE_VAT_DISC] 
   ,'CD : '+CAST(ISNULL(LT.CASHDISCOUNT,0) AS VARCHAR) AS [CASH_DISC]
   ,'EOSS: '+CAST(ISNULL(LT.EOSS_DISCOUNT_PER,0) AS VARCHAR) AS [EOSS_DISC]
   ,'RMB PUR TAX : '+CASE CAST(ISNULL(LT.REIMUBURSE_PURCHASE_TAX,0) AS VARCHAR) WHEN '0' THEN 'N' ELSE 'Y' END AS REIMUBURSE_PURCHASE_TAX	
   ,'RMB FREIGHT : '+CASE CAST(ISNULL(LT.REIMUBURSE_FREIGHT,0) AS VARCHAR) WHEN '0' THEN 'N' ELSE 'Y' END AS REIMUBURSE_FREIGHT	
   ,'RMB INS : '+CASE CAST(ISNULL(LT.REIMUBURSE_INSURANCE,0) AS VARCHAR) WHEN '0' THEN 'N' ELSE 'Y' END AS REIMUBURSE_INSURANCE
   ,'APPLY CD TAX: '+CASE CAST(ISNULL('0',0) AS VARCHAR) WHEN '0' THEN 'N' ELSE 'Y' END AS [APPLY_CASH_DISC_ON_TAX]
   ,'RMB OUT VAT : '+CASE CAST(LT.REIMUBURSE_OUTPUT_VAT AS VARCHAR) WHEN '0' THEN 'N' ELSE 'Y' END AS REIMUBURSE_OUTPUT_VAT
   ,'FIX MRP : '+CASE ISNULL(FIX_MRP_MD_PERCENTAGE,0) WHEN 0 THEN '0' ELSE CAST(FIX_MRP_MD_PERCENTAGE AS VARCHAR) END AS [FIX_MRP]
   --03 FEB 2018
   ,(SELECT TOP 1 ISNULL(PRINT_AUTHORIZED_SIGNATURE,0) FROM GST_COMPANY_CONFIG WHERE XN_TYPE=@CXN_TYPE)PRINT_AUTHORIZED_SIGNATURE  
   --06 FEB 2018
   ,ISNULL(COM.TOP_MARGIN,0.01)TOP_MARGIN
   ,ISNULL(COM.BOTTOM_MARGIN,0.25)BOTTOM_MARGIN
   ,ISNULL(COM.RIGHT_MARGIN,0.25)RIGHT_MARGIN
   ,ISNULL(COM.LEFT_MARGIN,0.30)LEFT_MARGIN
   --08 FEB 2018
   ,ISNULL((SELECT TOP 1 PRINT_COPIES FROM GST_SLS_CUSTOMER_CONFIG (NOLOCK) WHERE XN_TYPE=@CXN_TYPE),1)AS PRINT_COPIES
   --12 MAR 2018
   ,ISNULL(COM.PRINT_HSN_PUR,1)AS PRINT_HSN_PUR 
   ,ISNULL(COM.PRINT_UOM_PUR,1)AS PRINT_UOM_PUR
   ,ISNULL(COM.PRINT_GROSS_PP_PUR,1)AS PRINT_GROSS_PP_PUR
   ,ISNULL(COM.PRINT_DISC_PER_PUR,1)AS PRINT_DISC_PER_PUR
   ,ISNULL(COM.PRINT_DISC_AMT_PUR,1)AS PRINT_DISC_AMT_PUR
   ,ISNULL(COM.PRINT_RATE_PUR,1)AS PRINT_RATE_PUR
   ,ISNULL(COM.PRINT_AMOUNT_PUR,1)AS PRINT_AMOUNT_PUR 
   ,ISNULL(COM.PRINT_MRP_PUR,1)AS PRINT_MRP_PUR
   ,ISNULL(COM.PRINT_MD_PUR,1)AS PRINT_MD_PUR
   ,ISNULL(COM.PRINT_MP_PUR,1)AS PRINT_MP_PUR
   ,ISNULL(COM.PRINT_TAXABLE_PUR,1)AS PRINT_TAXABLE_PUR
   ,ISNULL(COM.PRINT_GST_PUR,1)AS PRINT_GST_PUR
   --04 APR 2018
   ,CAST(ISNULL(PRINT_PONO_PUR,0) AS BIT) AS PRINT_PONO_PUR
   ,@LIST_OF_PO PO_NO
   --05 MAY 2018
   ,TERMS_REMARK=pim.pur_terms_Remarks,
   U.username AS CREATED_BY,
   U1.username AS EDITED_BY,
   PIM.Total_Gst_Cess_Amount ,
   pim.Tcs_Amount ,PIM.chi_entry_ref_no
   INTO #DATASET1
   FROM PIM01106 PIM (NOLOCK)    
   JOIN (SELECT TOP 1 * FROM GST_COMPANY_CONFIG (NOLOCK) WHERE XN_TYPE=@CXN_TYPE)COM ON 1=1
   LEFT JOIN COMPANY CMP (NOLOCK) ON CMP.COMPANY_CODE='01'  
   LEFT OUTER JOIN LOCATION L (NOLOCK) ON L.DEPT_ID =PIM.location_Code   
   LEFT OUTER JOIN AREA ALOC(NOLOCK) ON ALOC.AREA_CODE=L.AREA_CODE
   LEFT OUTER JOIN CITY CLOC (NOLOCK) ON CLOC.CITY_CODE=ALOC.CITY_CODE
   LEFT JOIN GST_STATE_MST LS (NOLOCK) ON LS.GST_STATE_CODE=L.GST_STATE_CODE  
   LEFT JOIN LMP01106 LMP (NOLOCK) ON LMP.AC_CODE=PIM.AC_CODE  
   LEFT JOIN GST_STATE_MST CS (NOLOCK) ON CS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE  
   LEFT JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE=LMP.AC_CODE  
   LEFT JOIN AREA CUSAR (NOLOCK) ON LMP.AREA_CODE=CUSAR.AREA_CODE  
   LEFT JOIN CITY CUSCT (NOLOCK) ON CUSAR.CITY_CODE=CUSCT.CITY_CODE  
   LEFT OUTER JOIN LOCATION TL (NOLOCK) ON TL.DEPT_ID=PIM.ACCOUNTS_DEPT_ID/*INM.PARTY_DEPT_ID*/  
   LEFT JOIN AREA TLAR (NOLOCK) ON TL.AREA_CODE=TLAR.AREA_CODE  
   LEFT JOIN CITY TLCT (NOLOCK) ON TLAR.CITY_CODE=TLCT.CITY_CODE  
   LEFT JOIN GST_STATE_MST TS (NOLOCK) ON TS.GST_STATE_CODE=TL.GST_STATE_CODE  
   --LEFT OUTER JOIN #TRANSPORTER TR ON TR.XN_ID=INM.INV_ID  
   LEFT JOIN #ledger_terms LT (NOLOCK) ON 1=1
   JOIN USERS U (NOLOCK) ON U.user_code =PIM.user_code 
   LEFT JOIN USERS U1 (NOLOCK) ON U1.user_code =PIM.EDT_USER_CODE  
   WHERE PIM.MRR_ID=@CXN_ID  
  
   UPDATE #DATASET1 SET ADDRESS1=REPLACE(ADDRESS1,'(WC)','')
		  ,ADDRESS2=REPLACE(ADDRESS2,'(WC)','')
		  ,CITY=REPLACE(CITY,'(WC)','')
		  ,PARTY_ADDRESS1=REPLACE(PARTY_ADDRESS1,'(WC)','')
		  ,PARTY_ADDRESS2=REPLACE(PARTY_ADDRESS2,'(WC)','')
		  ,PARTY_ADDRESS3=REPLACE(PARTY_ADDRESS3,'(WC)','')
		  ,PARTY_CITY=REPLACE(PARTY_CITY,'(WC)','')

   
   --04 AUG 2017  
   SELECT @CCOLNAME=ISNULL(@CCOLNAME+'+','  ')+'ISNULL('+SOURCENAME+'.'+QUOTENAME(COLUMNNAME) +','''')+'+''''+COLUMNSEPARATOR+''''+' '  
   FROM GST_XN_DETAIL  WHERE XN_TYPE ='PUR' AND ISVISIBLE=1  
   ORDER BY DISPLAYORDER  
   --04 AUG 2017  
   SET @CCOLNAME=RTRIM(@CCOLNAME)  
   IF RIGHT(@CCOLNAME,4)='+'''+(SELECT TOP 1 COLUMNSEPARATOR FROM GST_XN_DETAIL WHERE XN_TYPE =@CXN_TYPE AND ISVISIBLE=1)+''''  
      SET @CCOLNAME=LEFT(@CCOLNAME,LEN(@CCOLNAME)-4)  
  
   IF OBJECT_ID ('TEMPDB..#TMPDETAILS','U') IS NOT NULL  
         DROP TABLE #TMPDETAILS  
            SELECT ROW_NUMBER() OVER (ORDER BY AUTO_SRNO) AS SR_NO,  CAST('' AS VARCHAR(MAX)) AS PARTICULARS ,  
          A.HSN_CODE,UOM.UOM_NAME,  
          CAST(A.QUANTITY AS NUMERIC(10,2)) AS QUANTITY,  
          A.GROSS_PURCHASE_PRICE GROSS_PP,
          A.PURCHASE_PRICE RATE,  
            
          CAST(A.QUANTITY*A.PURCHASE_PRICE AS NUMERIC(12,2)) AS AMOUNT,  
          CAST((A.QUANTITY*A.PURCHASE_PRICE )-ISNULL(XN_VALUE_WITHOUT_GST,0) AS NUMERIC(12,2)) AS LESS_DISCOUNT,  
          A.PURCHASE_PRICE AS DISCOUNT_PER,  
          CAST(ISNULL(XN_VALUE_WITHOUT_GST,0) AS NUMERIC(12,2)) AS TAXABLE_VALUE,  
          CAST(CASE WHEN A.IGST_AMOUNT<>0 THEN A.GST_PERCENTAGE ELSE 0 END AS NUMERIC(12,0)) AS IGST_RATE ,  
                A.IGST_AMOUNT,  
                 CAST(CASE WHEN A.CGST_AMOUNT<>0 THEN (A.GST_PERCENTAGE)/2 ELSE 0 END AS NUMERIC(12,1)) AS CGST_RATE ,  
                 A.CGST_AMOUNT,  
                 CAST(CASE WHEN A.SGST_AMOUNT<>0 THEN (A.GST_PERCENTAGE)/2 ELSE 0 END AS NUMERIC(12,1)) AS SGST_RATE ,  
                 A.SGST_AMOUNT,  
                 A.XN_VALUE_WITH_GST AS TOTAL,  
                 B.TOTAL_AMOUNT AS NET_AMOUNT ,B.ROUND_OFF  --MORE CHANGES IN REPORT URGENT REQUIRED FOR UPDATE CHANGES IN MASTER  
                 --02 SEP 2017  
                 ,A.MRP,A.MD_PERCENTAGE,A.MP_PERCENTAGE,  
                 CAST(A.QUANTITY*A.PURCHASE_PRICE AS NUMERIC(12,2)) AS GROSS_AMOUNT ,
				  A.Gst_Cess_Amount 
       INTO #TMPDETAILS            
       FROM PID01106 A (NOLOCK)  
       JOIN PIM01106 B (NOLOCK) ON  A.MRR_ID=B.MRR_ID  
       LEFT JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =A.PRODUCT_CODE     
                LEFT JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE =SKU.ARTICLE_CODE      
       LEFT JOIN UOM UOM (NOLOCK) ON UOM.UOM_CODE=ARTICLE.UOM_CODE  
       LEFT OUTER JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE  
       WHERE 1=2  
    
   
   DECLARE @AMOUNT_DIV FLOAT 
   SELECT @AMOUNT_DIV=SUM(QUANTITY*GROSS_PURCHASE_PRICE)--SUM(DISCOUNT_AMOUNT)-SUM(QUANTITY*PIMDISCOUNTAMOUNT) 
   FROM PID01106(NOLOCK) 
   WHERE MRR_ID=@CXN_ID

     IF EXISTS (SELECT TOP 1 'U'  FROM GST_XN_DETAIL WHERE XN_TYPE ='PUR' AND ISVISIBLE=1 AND COLUMNNAME ='PRODUCT_CODE')             
    BEGIN              
     SET @CCOLNAME=REPLACE (@CCOLNAME,'SKU.[PRODUCT_CODE]','LEFT(SKU.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX (''@'',SKU.[PRODUCT_CODE])-1,-1),LEN(SKU.[PRODUCT_CODE] )))')              
                  
    END     

   
   SET @RATECOL='PURCHASE_PRICE'   
   SET @DTSQL=N' SELECT ROW_NUMBER() OVER (ORDER BY '+ @CCOLNAME+' ) AS SR_NO, '+ @CCOLNAME+' AS PARTICULARS ,  
                 A.HSN_CODE,UOM.UOM_NAME,  
                 SUM(A.QUANTITY) AS QUANTITY,  
                 A.GROSS_PURCHASE_PRICE AS GROSS_PP  
                 ,A.'+@RATECOL+' AS RATE  
                 ,CAST(SUM(A.QUANTITY*A.'+@RATECOL+') AS NUMERIC(12,2)) AS AMOUNT,  
                 CAST(SUM(ISNULL(A.DISCOUNT_AMOUNT,0)+(ISNULL(A.PIMDISCOUNTAMOUNT,0)*1)) AS NUMERIC(12,2))  
                 '  
                 --+CASE @RATECOL   
				 --WHEN 'GROSS_PURCHASE_PRICE' THEN 'CAST(SUM(ISNULL(A.DISCOUNT_AMOUNT,0)+(ISNULL(A.PIMDISCOUNTAMOUNT,0)*A.INVOICE_QUANTITY)) AS NUMERIC(12,2))'  
				 --ELSE 'CAST(SUM((ISNULL(A.PIMDISCOUNTAMOUNT,0)*A.INVOICE_QUANTITY)) AS NUMERIC(12,2))'   
                 --  END  
                 +'AS LESS_DISCOUNT,  
                 0 AS DISCOUNT_PER,  
                 CAST(SUM(ISNULL(XN_VALUE_WITHOUT_GST,0)) AS NUMERIC(12,2)) AS TAXABLE_VALUE,  
                 DBO.CURR_GROUPING(CAST(CASE WHEN SUM(A.IGST_AMOUNT)<>0 THEN  A.GST_PERCENTAGE ELSE 0 END AS NUMERIC(12,0)),'''') AS IGST_RATE,  
                 CAST(SUM(A.IGST_AMOUNT) AS NUMERIC(12,2)) AS IGST_AMOUNT,  
                 DBO.CURR_GROUPING(CAST(CASE WHEN SUM(A.CGST_AMOUNT)<>0 THEN  (A.GST_PERCENTAGE)/2 ELSE 0 END AS NUMERIC(12,1)),'''') AS CGST_RATE,  
                 CAST(SUM(A.CGST_AMOUNT) AS NUMERIC(12,2)) AS CGST_AMOUNT,  
                 DBO.CURR_GROUPING(CAST(CASE WHEN SUM(A.SGST_AMOUNT)<>0 THEN  (A.GST_PERCENTAGE)/2 ELSE 0 END AS NUMERIC(12,1)),'''') AS SGST_RATE,  
                 CAST(SUM(A.SGST_AMOUNT) AS NUMERIC(12,2)) AS SGST_AMOUNT,  
                 CAST(SUM(A.XN_VALUE_WITH_GST) AS NUMERIC(12,2)) AS TOTAL,  
                 B.TOTAL_AMOUNT AS NET_AMOUNT,B.ROUND_OFF  
                 ,A.MRP
                 ,DBO.CURR_GROUPING(A.MD_PERCENTAGE,''''),DBO.CURR_GROUPING(A.MP_PERCENTAGE,'''')
                 ,CAST(SUM(A.QUANTITY*A.GROSS_PURCHASE_PRICE) AS NUMERIC(12,2))
				 ,CAST(SUM(A.GST_Cess_amount) AS NUMERIC(12,2)) AS GST_Cess_Amount
       FROM PID01106 A (NOLOCK)  
       JOIN PIM01106 B (NOLOCK) ON  A.MRR_ID=B.MRR_ID  
       LEFT OUTER JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =A.PRODUCT_CODE     
       LEFT OUTER JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE =A.ARTICLE_CODE      
       LEFT OUTER JOIN UOM UOM (NOLOCK) ON UOM.UOM_CODE=ARTICLE.UOM_CODE  
       LEFT OUTER JOIN SECTIOND (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE  
       LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE  
       LEFT OUTER JOIN PARA1 ON PARA1.PARA1_CODE=SKU.PARA1_CODE  
       LEFT OUTER JOIN PARA2 ON PARA2.PARA2_CODE=SKU.PARA2_CODE  
       LEFT OUTER JOIN PARA3 ON PARA3.PARA3_CODE=SKU.PARA3_CODE  
       LEFT OUTER JOIN PARA4 ON PARA4.PARA4_CODE=SKU.PARA4_CODE  
       LEFT OUTER JOIN PARA5 ON PARA5.PARA5_CODE=SKU.PARA5_CODE  
       LEFT OUTER JOIN PARA6 ON PARA6.PARA6_CODE=SKU.PARA6_CODE  
       WHERE A.MRR_ID='''+@CXN_ID+'''  
       GROUP BY '+ @CCOLNAME+',A.HSN_CODE,UOM.UOM_NAME,A.GROSS_PURCHASE_PRICE,A.'+@RATECOL+',A.GST_PERCENTAGE ,B.TOTAL_AMOUNT ,B.ROUND_OFF,A.MRP,A.MD_PERCENTAGE,A.MP_PERCENTAGE  
       ORDER BY '+ @CCOLNAME+''  
   PRINT @DTSQL  
   INSERT INTO #TMPDETAILS(SR_NO,PARTICULARS,HSN_CODE,UOM_NAME,QUANTITY,GROSS_PP,RATE,AMOUNT,LESS_DISCOUNT,DISCOUNT_PER,TAXABLE_VALUE,IGST_RATE,IGST_AMOUNT,CGST_RATE,CGST_AMOUNT,SGST_RATE,SGST_AMOUNT,TOTAL,NET_AMOUNT,ROUND_OFF,MRP,MD_PERCENTAGE,MP_PERCENTAGE,GROSS_AMOUNT,GST_Cess_Amount)  
   EXEC SP_EXECUTESQL @DTSQL  
   
   UPDATE #TMPDETAILS 
   SET DISCOUNT_PER=ROUND(ISNULL(LESS_DISCOUNT,0)/CASE ISNULL(GROSS_AMOUNT,0) WHEN 0 THEN 1 ELSE GROSS_AMOUNT END*100.0,2)  
   

   DECLARE @STOREDQTY NUMERIC(10,3),@TAXABLEVALUE NUMERIC(10,2),@STOREDGSTAMOUNT NUMERIC(10,2),
	           @PRINTQTY NUMERIC(10,3),@PRINTTAXABLEVALUE NUMERIC(10,2),@PRINTGSTAMOUNT NUMERIC(10,2)
			 

	   --SELECT @STOREDQTY=SUM(QUANTITY),@TAXABLEVALUE=SUM(XN_VALUE_WITHOUT_GST),@STOREDGSTAMOUNT=SUM(ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)) 
	   --FROM PID01106 (NOLOCK) WHERE MRR_ID=@CXN_ID

	   --SELECT @PRINTQTY=SUM(QUANTITY),@PRINTTAXABLEVALUE=SUM(taxable_value),@PRINTGSTAMOUNT=SUM(ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0))  
	   --FROM #TMPDETAILS


	  -- IF ISNULL(@STOREDQTY,0)<>ISNULL(@PRINTQTY,0)
	  -- BEGIN
	  --      SET @CERRMSG='Differences In Stored Qty:'+rtrim(ltrim(str(@STOREDQTY)))+' and Print Qty: '+ rtrim(ltrim(str(@PRINTQTY)))
			--goto end_proc
	  -- END
	  -- IF ISNULL(@TAXABLEVALUE,0)<>ISNULL(@PRINTTAXABLEVALUE,0)
	  -- BEGIN
	  --      SET @CERRMSG='Differences In Taxable Value:'+rtrim(ltrim(str(@TAXABLEVALUE)))+' and Print Taxable Value: '+ rtrim(ltrim(str(@PRINTTAXABLEVALUE)))
			--goto end_proc
	  -- END
	  --   IF ISNULL(@STOREDGSTAMOUNT,0)<>ISNULL(@PRINTGSTAMOUNT,0)
	  -- BEGIN
	  --      SET @CERRMSG='Differences In Stored Gst Amount:'+rtrim(ltrim(str(@STOREDGSTAMOUNT)))+' and Print Gst Amount: '+ rtrim(ltrim(str(@PRINTGSTAMOUNT)))
			--goto end_proc
	  -- END

   SELECT * FROM #DATASET1	
	
     
   SELECT SR_NO,PARTICULARS,HSN_CODE,UOM_NAME,QUANTITY,GROSS_PP,RATE,AMOUNT,LESS_DISCOUNT,DISCOUNT_PER,TAXABLE_VALUE,IGST_RATE,  
          IGST_AMOUNT,CGST_RATE,CGST_AMOUNT,SGST_RATE,SGST_AMOUNT,TOTAL ,NET_AMOUNT,ROUND_OFF  
         ,MRP,MD_PERCENTAGE AS MD_PER,MP_PERCENTAGE AS MP_PER,Gst_Cess_Amount 
   FROM #TMPDETAILS   
   ORDER BY SR_NO   
     
   SELECT TNC_1,TNC_2,TNC_3,TNC_4,TNC_5,TNC_6   
   FROM GST_TNC WHERE XN_TYPE=@CXN_TYPE  
    
     
   SELECT B.PAYMODE_NAME FROM PAYMODE_XN_DET A  
   JOIN PAYMODE_MST B ON A.PAYMODE_CODE=B.PAYMODE_CODE  
   WHERE A.XN_TYPE =@CXN_TYPE AND A.MEMO_ID=@CXN_ID  
   GROUP BY B.PAYMODE_NAME  
     
     
   SELECT @NCALQTYSUM=SUM(QUANTITY) FROM #TMPDETAILS  
   SELECT @NSTOREDQTY=SUM(QUANTITY) FROM IND01106 WHERE INV_ID=@CXN_ID   
     
   --ADD NEW AS BLOCK FOR GST PERCENTAGE  
   SELECT *  
   ,[IGST_PER]=CASE ISNULL([IGST_AMOUNT],0) WHEN 0 THEN '0%' WHEN [GST_COLLECTION] THEN GST ELSE GST END  
   ,[CGST_PER]=CASE ISNULL([CGST_AMOUNT],0) WHEN 0 THEN '0%' ELSE DBO.CURR_GROUPING(ROUND(CAST(REPLACE([GST],'%','') AS DECIMAL(10,2))/2,2),'')+'%' END  
   ,[SGST_PER]=CASE ISNULL([SGST_AMOUNT],0) WHEN 0 THEN '0%' ELSE DBO.CURR_GROUPING(ROUND(CAST(REPLACE([GST],'%','') AS DECIMAL(10,2))/2,2),'')+'%' END  
   FROM  
   (  
     SELECT CAST(DBO.CURR_GROUPING(GST_PERCENTAGE,'') AS VARCHAR)+'%'[GST]  
     ,SUM(XN_VALUE_WITHOUT_GST)[TAXABLE_VALUES]  
     ,SUM(CGST_AMOUNT)[CGST_AMOUNT]   
     ,SUM(SGST_AMOUNT)[SGST_AMOUNT]   
     ,SUM(IGST_AMOUNT)[IGST_AMOUNT]  
	 ,SUM(ISNULL(Gst_Cess_Amount,0) )[Gst_Cess_Amount]   
     ,SUM(CGST_AMOUNT+SGST_AMOUNT+IGST_AMOUNT)[GST_COLLECTION]  
     FROM PID01106 (NOLOCK) WHERE MRR_ID=@CXN_ID  
     GROUP BY CAST(DBO.CURR_GROUPING(GST_PERCENTAGE,'') AS VARCHAR)  
   )GST  
        
           
   --GST_OH_CONFIG  
   SELECT *   
   FROM  
   (  
   SELECT CASE OH_NAME WHEN 'OC' THEN 'OTHER CHARGES' ELSE OH_NAME END AS OH_NAME  
   ,HSN_CODE AS HSNSAC_CODE  
   ,OH_GST_PER=CASE OH_NAME WHEN 'FREIGHT' THEN FREIGHT_GST_PERCENTAGE   
          WHEN 'OC' THEN OTHER_CHARGES_GST_PERCENTAGE  WHEN 'INSURANCE' THEN 0 WHEN 'PACKING' THEN 0 END  
   ,OH_SGST_AMOUNT=CASE OH_NAME WHEN 'OC' THEN ISNULL(OTHER_CHARGES_SGST_AMOUNT,0) WHEN 'FREIGHT' THEN ISNULL(FREIGHT_SGST_AMOUNT,0) WHEN 'INSURANCE' THEN 0 WHEN 'PACKING' THEN 0 END  
   ,OH_CGST_AMOUNT=CASE OH_NAME WHEN 'OC' THEN ISNULL(OTHER_CHARGES_CGST_AMOUNT,0) WHEN 'FREIGHT' THEN ISNULL(FREIGHT_CGST_AMOUNT,0) WHEN 'INSURANCE' THEN 0 WHEN 'PACKING' THEN 0 END  
   ,OH_IGST_AMOUNT=CASE OH_NAME WHEN 'OC' THEN ISNULL(OTHER_CHARGES_IGST_AMOUNT,0) WHEN 'FREIGHT' THEN ISNULL(FREIGHT_IGST_AMOUNT,0) WHEN 'INSURANCE' THEN 0 WHEN 'PACKING' THEN 0 END  
   FROM GST_OH_CONFIG,PIM01106 (NOLOCK)  
   WHERE MRR_ID=@CXN_ID  
   )T  
   WHERE ISNULL(OH_GST_PER,0)<>0  


   
	SELECT POD.ROW_ID AS POD_ROW_ID,  FROM_UOM_NAME,TO_UOM_NAME, 
		   A.AREA_LENGTH,A.AREA_WIDTH,A.AREA_SQARE,A.AREA_RATE_PP,A.RATE_AREA_SQUARE
	FROM BUYER_ORDER_DET A (NOLOCK)
	JOIN POD01106 POD (NOLOCK) ON POD.WOD_ROW_ID =A.ROW_ID 
	JOIN POM01106 POM (NOLOCK) ON POM.PO_ID =POD.PO_ID 
	JOIN pid01106 PID (NOLOCK) ON PID.po_row_id=POD.ROW_ID 
	LEFT JOIN STANDARD_UOM SUOM (NOLOCK) ON SUOM.UOM_CODE=A.AREA_UOM_CODE
	where PID.MRR_ID=@CXN_ID
     
   GOTO END_PROC  
   END --END OF PUR  
        
  END TRY    
BEGIN CATCH    
  BEGIN  
     SELECT @CERRMSG='ERROR MESSAGE IN PROCEDURE SP3S_PRINTPAYMENT_GST STEP#'+@CSTEP+' '+CAST(ERROR_MESSAGE() AS VARCHAR(MAX))+ '||'+ERROR_PROCEDURE()    
     GOTO END_PROC  
  END  
END CATCH     
     
END_PROC:  
  SELECT @CERRMSG AS ERRMSG  
SET NOCOUNT OFF    
END
