create PROCEDURE SP3S_PATCH_CMD01106  
(  
@CMEMOID VARCHAR(22),  
@CPRODUCTCODE  VARCHAR(50),  
@CDISCOUNT_PERCENTAGE NUMERIC(7,3) ,
@CDEPT_ID VARCHAR(5)='' 

)  
AS  
BEGIN  
    
	
    --drop table tmp
    --select @CMEMOID as m ,@CPRODUCTCODE as p,@CDISCOUNT_PERCENTAGE d
    --into tmp
    
    --select * from tmp
    
 DECLARE @SPID INT,@CPARTY_STATE_CODE CHAR(2),@CERRORMSG NVARCHAR(MAX),@NEXCLTAX NUMERIC(10,2),      
              @NOCGST NUMERIC(10,2),@NSTEP INT,@CROUNDBILLLEVEL VARCHAR(1),@CMEMODT DATETIME,
              @CROW_ID varchar(50)      
                    
                    
 BEGIN TRY   
   BEGIN TRAN                  
    SET @SPID=''      
    SET @SPID=@@SPID  

	 SELECT @CPARTY_STATE_CODE=PARTY_STATE_CODE,@CMEMODT=CM_DT,@CDEPT_ID=location_code FROM CMM01106 WHERE CM_ID=@CMEMOID       
     

    set @CROW_ID= @CDEPT_ID+'APP'+CONVERT(VARCHAR(40),NEWID())    
          
    SET @NSTEP=10      
                     
    SET @NSTEP = 20      
    INSERT CMD01106( FOC_QUANTITY, CMM_DISCOUNT_AMOUNT, NRM_ID, ITEM_ROUND_OFF, CARD_DISCOUNT, FORM_ID, MANUAL_TAX_METHOD, PACK_SLIP_ROW_ID, BASIC_DISCOUNT_PERCENTAGE, CARD_DISCOUNT_PERCENTAGE, BASIC_DISCOUNT_AMOUNT, CARD_DISCOUNT_AMOUNT, SCHEME_NAME,    

     MANUAL_MRP, CALC_DA1, CALC_DA2, MANUAL_DP, HSN_CODE, GST_PERCENTAGE, IGST_AMOUNT, CGST_AMOUNT, SGST_AMOUNT, XN_VALUE_WITHOUT_GST, XN_VALUE_WITH_GST, REF_SLS_MEMO_NO, REF_SLS_MEMO_DT, PRODUCT_CODE, QUANTITY,    
     MRP, NET, DISCOUNT_PERCENTAGE, DISCOUNT_AMOUNT, ROW_ID, LAST_UPDATE, TAX_PERCENTAGE, TAX_AMOUNT, EMP_CODE, SLSDET_ROW_ID, DEPT_ID, OLD_MRP, REF_SLS_MEMO_ID, REALIZE_SALE, CM_ID, RFNET, TAX_TYPE, TAX_METHOD, EAN, EMP_CODE1, EMP_CODE2, ITEM_DESC,    
     WEIGHTED_AVG_DISC_PCT, WEIGHTED_AVG_DISC_AMT, MANUAL_DISCOUNT    
   , FIX_MRP, SR_NO, HOLD_FOR_ALTER, PACK_SLIP_ID, XN_TYPE, REPEAT_PUR_ORDER, BIN_ID, REF_ORDER_ID, DISCOUNT_SHARING_WITH_SUPPLIER, TAX_ROUND_OFF )        
    SELECT  0 FOC_QUANTITY, 0 CMM_DISCOUNT_AMOUNT,'0000000' NRM_ID, 0 ITEM_ROUND_OFF,0 CARD_DISCOUNT,      
    '0000000' FORM_ID,0 MANUAL_TAX_METHOD, '' PACK_SLIP_ROW_ID,@CDISCOUNT_PERCENTAGE BASIC_DISCOUNT_PERCENTAGE,      
    0 CARD_DISCOUNT_PERCENTAGE, 0 BASIC_DISCOUNT_AMOUNT, 0 CARD_DISCOUNT_AMOUNT,''SCHEME_NAME,       
    0 MANUAL_MRP,0 CALC_DA1,0 CALC_DA2,0 MANUAL_DP, HSN_CODE,       
    0 GST_PERCENTAGE,0 IGST_AMOUNT,0 CGST_AMOUNT,0 SGST_AMOUNT,0 XN_VALUE_WITHOUT_GST,0 XN_VALUE_WITH_GST,      
    '' REF_SLS_MEMO_NO,'' REF_SLS_MEMO_DT,@CPRODUCTCODE PRODUCT_CODE,      
    1 QUANTITY, MRP,0 NET,@CDISCOUNT_PERCENTAGE DISCOUNT_PERCENTAGE,0 DISCOUNT_AMOUNT,
    @CROW_ID ROW_ID,      
    GETDATE() LAST_UPDATE,0 TAX_PERCENTAGE,0 TAX_AMOUNT,       
    '0000000' EMP_CODE,'' SLSDET_ROW_ID,@CDEPT_ID DEPT_ID,0 OLD_MRP, '' REF_SLS_MEMO_ID,       
    0 REALIZE_SALE, @CMEMOID CM_ID, 0 RFNET, 0 TAX_TYPE,       
    1 TAX_METHOD, '' EAN, '0000000'EMP_CODE1, '0000000' EMP_CODE2, '' ITEM_DESC,       
    0 WEIGHTED_AVG_DISC_PCT,0 WEIGHTED_AVG_DISC_AMT,       
    0 MANUAL_DISCOUNT, 0 FIX_MRP, 0 SR_NO,0 HOLD_FOR_ALTER,'' PACK_SLIP_ID,'SLS' XN_TYPE,      
    0 REPEAT_PUR_ORDER,'000' BIN_ID, '' REF_ORDER_ID, '' DISCOUNT_SHARING_WITH_SUPPLIER, 0 TAX_ROUND_OFF       
    FROM SKU(NOLOCK) WHERE PRODUCT_CODE=@CPRODUCTCODE      
      
      
                SET @NSTEP = 20-- UPDATE DISC_AMT & BASIC_DISC_AMT IN CMD      
    UPDATE CMD01106 SET DISCOUNT_AMOUNT=((MRP*QUANTITY) * @CDISCOUNT_PERCENTAGE)/100,      
    BASIC_DISCOUNT_AMOUNT=((MRP*QUANTITY) * @CDISCOUNT_PERCENTAGE)/100      
    WHERE PRODUCT_CODE=@CPRODUCTCODE   AND CM_ID=@CMEMOID AND ROW_ID=@CROW_ID     
      
    SET @NSTEP = 30-- UPDATE NET IN CMD      
    UPDATE CMD01106 SET NET=((MRP*QUANTITY) - DISCOUNT_AMOUNT)       
    WHERE PRODUCT_CODE=@CPRODUCTCODE AND CM_ID=@CMEMOID   AND ROW_ID=@CROW_ID                       
      
     
      
      
    SET @NSTEP = 50---UPDATE SUBTOTAL IN CMM01106      
    UPDATE A SET SUBTOTAL= B.CMD_NET,SUBTOTAL_R=CMD_NET_SUBTOTAL_R,LAST_UPDATE=GETDATE()  FROM CMM01106  A      
    JOIN       
    (      
     SELECT CM_ID, SUM(CASE WHEN NET> 0 THEN NET ELSE 0 END) AS CMD_NET,  
    SUM(CASE WHEN NET< 0 THEN NET ELSE 0 END) AS CMD_NET_SUBTOTAL_R   
    FROM  CMD01106  WHERE CM_ID=@CMEMOID GROUP BY  CM_ID      
    ) B ON A.CM_ID=B.CM_ID      
      
          
	DELETE A FROM GST_TAXINFO_CALC A (NOLOCK) WHERE SP_ID=LTRIM(RTRIM(CAST(@SPID AS VARCHAR(50))))   
        
    SET @NSTEP = 70      
    INSERT GST_TAXINFO_CALC ( PRODUCT_CODE, SP_ID ,NET_VALUE,TAX_METHOD,ROW_ID,QUANTITY,MRP )        
    SELECT A.PRODUCT_CODE,@SPID AS SP_ID,(A.NET-ISNULL(A.CMM_DISCOUNT_AMOUNT,0)) AS NET_VALUE,      
    (CASE WHEN A.TAX_METHOD=2 THEN 1 ELSE 2 END) AS TAX_METHOD,A.ROW_ID,A.QUANTITY,A.MRP       
    FROM CMD01106 A(NOLOCK)      
    WHERE A.PRODUCT_CODE=@CPRODUCTCODE AND CM_ID=@CMEMOID AND ROW_ID=@CROW_ID     
      
      
      
      
    SET @NSTEP = 80      
    EXEC SP3S_GST_TAX_CAL       
    @CXN_TYPE = 'SLS',      
    @CMEMO_ID = @CMEMOID,      
    @DMEMO_DT = @CMEMODT,      
    @NSPID = @SPID,      
    @CPARTYSTATE_CODE=@CPARTY_STATE_CODE,      
    @BLOCALBILL=0,      
    @BPARTYREGISTERED=0,      
    @CPARTY_GSTN_NO='',      
    @CERRMSG=@CERRORMSG OUTPUT      
          
    IF ISNULL(@CERRORMSG,'')<>''      
    GOTO END_PROC      
          
    SET @NSTEP = 85      
    UPDATE CMD01106 SET TAX_AMOUNT=0,TAX_PERCENTAGE=0,      
    HSN_CODE=B.HSN_CODE,GST_PERCENTAGE=B.GST_PERCENTAGE,IGST_AMOUNT=B.IGST_AMOUNT,      
    CGST_AMOUNT=B.CGST_AMOUNT,SGST_AMOUNT=B.SGST_AMOUNT,      
    XN_VALUE_WITHOUT_GST=B.XN_VALUE_WITHOUT_GST,XN_VALUE_WITH_GST=B.XN_VALUE_WITH_GST      
    FROM GST_TAXINFO_CALC B (NOLOCK) WHERE B.ROW_ID=CMD01106.ROW_ID  
    and  cm_id=@CMEMOID   and b.sp_id =rtrim(ltrim(str(@SPID  )))
    
    
    if exists (select top 1 'u' from CMD01106 where cm_id = @CMEMOID and ISNULL(cgst_amount,0)<>isnull(sgst_amount,0))
    begin
       SET @CERRORMSG='INVALID GST AMOUNT'   
       GOTO END_PROC     
    end   
      
    SET @NSTEP = 90      
    SELECT @NEXCLTAX=SUM(TAX_AMOUNT+ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0))      
    FROM CMD01106 (NOLOCK) WHERE CM_ID=@CMEMOID AND TAX_METHOD=2      
      
    SET @NSTEP = 100      
    SELECT @NOCGST=ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_SGST_AMOUNT,0)      
    FROM CMM01106 A (NOLOCK)      
    WHERE A.CM_ID=@CMEMOID      
      
    --SET @NSTEP = 341      
    --EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,@BDEBUGMODE        
    SET @NSTEP = 110      
    UPDATE CMM01106 SET NET_AMOUNT=SUBTOTAL+SUBTOTAL_R+ATD_CHARGES+ISNULL(@NEXCLTAX,0)-DISCOUNT_AMOUNT+      
    (CASE WHEN OH_TAX_METHOD=2 THEN 0 ELSE ISNULL(@NOCGST,0) END)      
    WHERE CM_ID=@CMEMOID      
      
    SET @NSTEP = 120      
    SELECT TOP 1 @CROUNDBILLLEVEL=VALUE FROM CONFIG WHERE CONFIG_OPTION='SLS_ROUND_BILL_LEVEL'
      
    SET @NSTEP = 130      
    UPDATE CMM01106 SET ROUND_OFF= (CASE WHEN ISNULL(@CROUNDBILLLEVEL,'')='2' THEN ROUND(NET_AMOUNT/5,0)*5-NET_AMOUNT      
    WHEN ISNULL(@CROUNDBILLLEVEL,'')='3' THEN CEILING(NET_AMOUNT/5)*5-NET_AMOUNT  ELSE ROUND(NET_AMOUNT,0)-NET_AMOUNT  END)      
    WHERE CM_ID=@CMEMOID      
          
            
    SET @NSTEP = 140      
    UPDATE CMM01106 SET NET_AMOUNT=SUBTOTAL+SUBTOTAL_R+ATD_CHARGES+ISNULL(@NEXCLTAX,0)-DISCOUNT_AMOUNT+ROUND_OFF+      
    (CASE WHEN OH_TAX_METHOD=2 THEN 0 ELSE ISNULL(@NOCGST,0) END)      
    WHERE CM_ID=@CMEMOID    
      
     SET @NSTEP = 145  
    UPDATE A SET GST_ROUND_OFF=(NET_AMOUNT-(ATD_CHARGES+ROUND_OFF+B.NET_AMOUNT_GST)) ,
	             TOTAL_QUANTITY=B.TOTAL_QUANTITY  
    FROM CMM01106 A (NOLOCK)  
    JOIN (SELECT A.CM_ID,SUM(XN_VALUE_WITHOUT_GST+IGST_AMOUNT+CGST_AMOUNT+SGST_AMOUNT+TAX_AMOUNT) AS NET_AMOUNT_GST  ,
	          SUM(QUANTITY) AS TOTAL_QUANTITY
       FROM CMD01106 A (NOLOCK)  
       WHERE CM_ID=@CMEMOID  
       GROUP BY A.CM_ID  
      ) B ON A.CM_ID=B.CM_ID   
    WHERE A.CM_ID=@CMEMOID    


	   DECLARE @STR VARCHAR(MAX),@STR1 VARCHAR(MAX)
		SET @STR=NULL
		SET @STR1=NULL

		 SELECT  @STR1=CM_ID,@STR =  COALESCE(@STR +  '/ ', ' ' ) + (''+C.UOM_NAME+': '+CAST(SUM(QUANTITY) AS VARCHAR) +' ')  
		 FROM CMD01106 A  (NOLOCK)
		 JOIN SKU S (NOLOCK) ON S.PRODUCT_CODE=A.PRODUCT_CODE
		 JOIN ARTICLE B (NOLOCK) ON S.ARTICLE_CODE=B.ARTICLE_CODE
		 JOIN UOM C (NOLOCK) ON C.UOM_CODE=B.UOM_CODE
		 WHERE A.CM_ID=@CMEMOID GROUP BY C.UOM_NAME ,CM_ID

        UPDATE CMM01106 WITH (ROWLOCK) SET TOTAL_QUANTITY_STR =@STR WHERE CM_ID=@CMEMOID

      
      
    SET @NSTEP = 150      
    EXEC UPDATERFNET 'SLS',@CMEMOID      
          
        
        DECLARE @INRAMT NUMERIC(10,2),@INRNOTAMT NUMERIC(10,2),@CMMNETAMT NUMERIC(10,2)      
              
        SET @INRAMT=0      
        SET @INRNOTAMT=0      
        SET @CMMNETAMT=0      
              
        SELECT @CMMNETAMT=NET_AMOUNT FROM CMM01106 WHERE CM_ID=@CMEMOID      
        SELECT @INRAMT =ISNULL(AMOUNT,0) FROM PAYMODE_XN_DET WHERE MEMO_ID=@CMEMOID AND PAYMODE_CODE='0000000' AND XN_TYPE='SLS'      
        SELECT @INRNOTAMT=ISNULL(SUM(AMOUNT),0) FROM PAYMODE_XN_DET WHERE MEMO_ID=@CMEMOID AND PAYMODE_CODE<>'0000000' AND XN_TYPE='SLS'      
              
              
        IF ISNULL(@INRAMT,0)<>0 AND ISNULL(@INRNOTAMT,0)=0 AND ISNULL(@CMMNETAMT,0)<>0      
          BEGIN      
                UPDATE A SET AMOUNT=NET_AMOUNT FROM PAYMODE_XN_DET A JOIN CMM01106 B ON A.MEMO_ID=B.CM_ID       
                WHERE A.XN_TYPE='SLS'      
                AND PAYMODE_CODE='0000000' AND B.CM_ID=@CMEMOID      
           END  
             
             
           IF ISNULL(@INRAMT,0)=0 AND ISNULL(@INRNOTAMT,0)=0 AND ISNULL(@CMMNETAMT,0)<>0      
          BEGIN      
				UPDATE A SET AMOUNT=NET_AMOUNT FROM PAYMODE_XN_DET A JOIN CMM01106 B ON A.MEMO_ID=B.CM_ID       
                WHERE A.XN_TYPE='SLS'      
                AND PAYMODE_CODE='0000000' AND B.CM_ID=@CMEMOID      
           END      
                
                
        IF ISNULL(@INRAMT,0)<>0 AND ISNULL(@INRNOTAMT,0)<>0 AND ISNULL(@CMMNETAMT,0)<>0      
          BEGIN      
         UPDATE A SET AMOUNT=@CMMNETAMT-@INRNOTAMT FROM PAYMODE_XN_DET A       
                JOIN CMM01106 B ON A.MEMO_ID=B.CM_ID WHERE A.XN_TYPE='SLS'      
                AND PAYMODE_CODE='0000000' AND B.CM_ID=@CMEMOID      
          END       
                
         IF ISNULL(@INRAMT,0)=0 AND ISNULL(@INRNOTAMT,0)<>0 AND ISNULL(@CMMNETAMT,0)<>0      
          BEGIN      
              INSERT PAYMODE_XN_DET ( MEMO_ID, XN_TYPE, PAYMODE_CODE, ROW_ID, AMOUNT, LAST_UPDATE,       
				REF_NO, ADJ_MEMO_ID, CURRENCY_CONVERSION_RATE, REMARKS, GV_SRNO, GV_SCRATCH_NO,      
				WALLET_MOBILE, CC_NAME )        
				SELECT   @CMEMOID MEMO_ID,'SLS' XN_TYPE, '0000000' PAYMODE_CODE,NEWID() ROW_ID,      
				 @CMMNETAMT-@INRNOTAMT AS AMOUNT, GETDATE() LAST_UPDATE,''  REF_NO,       
				'' ADJ_MEMO_ID, 0 CURRENCY_CONVERSION_RATE, '' REMARKS, '' GV_SRNO,'' GV_SCRATCH_NO,       
				''WALLET_MOBILE, ''CC_NAME       
          END        
              
      UPDATE CMM01106 SET DISCOUNT_PERCENTAGE=ABS(DISCOUNT_AMOUNT/(SUBTOTAL+SUBTOTAL_R))*100 
	  WHERE CM_ID=@CMEMOID and DISCOUNT_AMOUNT<>0
	  and ABS(DISCOUNT_AMOUNT/(SUBTOTAL+SUBTOTAL_R))<100
     EXEC SP_CMM_DISCOUNT @CMEMOID



                      
    SET @NSTEP = 170  -- UPDATE PMT      
    UPDATE A
    SET QUANTITY_IN_STOCK=QUANTITY_IN_STOCK-QUANTITY
    FROM PMT01106 A
    JOIN CMD01106 B ON A.PRODUCT_CODE=B.PRODUCT_CODE       
    WHERE  A.DEPT_ID=@CDEPT_ID AND  A.PRODUCT_CODE=@CPRODUCTCODE  AND B.CM_ID=@CMEMOID 
    AND ROW_ID=@CROW_ID   

	--as per chandan donot allow negative stock of settelement barcode
    
    IF EXISTS (SELECT TOP 1 'U'  FROM PMT01106 A (NOLOCK) 
    WHERE  A.DEPT_ID=@CDEPT_ID AND  A.PRODUCT_CODE=@CPRODUCTCODE 
    AND A.quantity_in_stock <0)
    BEGIN
          SET @CERRORMSG='QUANTITY GOING NEGATIVE BARCODE: '  +@CPRODUCTCODE
          GOTO END_PROC     
    
    END
    
    declare @server_loc int
    select @server_loc=server_loc from location  where dept_id= @CDEPT_ID 
      
   	update cmm01106 with (rowlock) set wizclip_bill_synch_last_update=LAST_UPDATE  WHERE  CM_ID=@CMEMOID AND ISNULL(wizclip_bill_synch_last_update,'')<>''
      
  --  EXEC VALIDATEXN_SLS_AFTERSAVE 2,'',0,@CMEMOID,1, @CERRORMSG OUTPUT,1,@CDEPT_ID
          
         
      
          
         
END TRY      
BEGIN CATCH      
     SET @CERRORMSG='ERROR IN SP3S_PATCH_CMD01106,STEP-'+LTRIM(STR(@NSTEP))+'SQL ERROR: #'+LTRIM(STR(ERROR_NUMBER())) + '  ' + ERROR_MESSAGE()      
END CATCH           
      
END_PROC:      
      
IF @@TRANCOUNT>0        
BEGIN      
      
           IF ISNULL(@CERRORMSG,'')=''     
           commit         
           ELSE      
             ROLLBACK      
                 
 END                
       
         SELECT  @CMEMOID AS CM_ID,ISNULL(@CERRORMSG,'')  AS  ERRMSG      
       
END



