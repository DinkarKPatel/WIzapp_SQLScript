create PROCEDURE SP_GETMASTERS_ATTR      
(      
 @CFINYEAR VARCHAR(10),       
 @CTABLENAME VARCHAR(50),
 @CERRORMSG VARCHAR(MAX) OUTPUT    ,
 @cLocid char(4)=''
)      
--WITH ENCRYPTION
AS      
BEGIN     
--(dinkar) Replace  left(memoid,2) to Location_code 
 
       
   INSERT IMPORT_INFO VALUES (0,GETDATE())  
     
   PRINT 'IMPORT MASTERS-START0'  
  BEGIN TRY    
  
   PRINT 'IMPORT MASTERS-START'  
     
   INSERT IMPORT_INFO VALUES (0.2,GETDATE())   
   DECLARE @UPDATEVALUE NUMERIC(10,0),@UPDATEVALUE1 NUMERIC(10,0),@UPDATEVALUE2 NUMERIC(10,0),@CMES VARCHAR(500),      
     @CATTRCODE1 VARCHAR(10),@CATTRCODE2 VARCHAR(10),@CCMD NVARCHAR(MAX),@CATTRNAME VARCHAR(100),      
     @CCOLNAME VARCHAR(1000),@CFORMATFILE VARCHAR(100),@CTMPTABLENAME VARCHAR(1000),@CARTICLENOCOL VARCHAR(100),      
     @DCURDT DATETIME,@NSTEP INT   ,@BLOOP BIT  
       
   SET @NSTEP=10    
	--IF OBJECT_ID('TEMPDB..#TMPMASTERSATTRENC','U') IS NOT NULL      
	--	DROP TABLE #TMPMASTERSATTRENC
		
	--SET @CCMD=N'  SELECT * INTO   #TMPMASTERSATTRENC  FROM '+@CTABLENAME                               
	--EXEC SP_EXECUTESQL @CCMD 
	
	--SELECT * INTO TMPMASTERSATTRENC_ROHIT FROM #TMPMASTERSATTRENC
   INSERT IMPORT_INFO VALUES (@NSTEP,GETDATE())       
   SET @CERRORMSG = ''     
        

	IF @cLocId=''
		SELECT @CLOCID		= DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
        
   SET @DCURDT = GETDATE()        
       
   SET @NSTEP=20     
  
   INSERT IMPORT_INFO VALUES (@NSTEP,GETDATE())       
     
   PRINT 'IMPORT MASTERS-'+STR(@NSTEP)  
   
      UPDATE A SET KEY_ALIAS=B.KEY_ALIAS FROM ATTR_KEY A 
   JOIN #TMPMASTERSATTRENC B ON LTRIM(RTRIM(A.KEY_NAME))=LTRIM(RTRIM(B.KEY_NAME))
   JOIN ATTRM C ON B.ATTRIBUTE_NAME = C.ATTRIBUTE_NAME  
   WHERE ISNULL(B.KEY_NAME,'')<>'' 
       
   IF OBJECT_ID('TEMPDB..#TMPATTRM','U') IS NOT NULL      
    DROP TABLE #TMPATTRM      
        
   SELECT DISTINCT CONVERT(CHAR(7),'') AS ATTRIBUTE_CODE,ATTRIBUTE_NAME,
   '' AS ALIAS,'' AS ATTRIBUTE_GROUP ,'' AS REMARKS 
   INTO #TMPATTRM 
   FROM #TMPMASTERSATTRENC      
   WHERE ATTRIBUTE_NAME NOT IN (SELECT ATTRIBUTE_NAME FROM ATTRM)      
        
   SET @UPDATEVALUE = 0      
   SELECT @UPDATEVALUE = ISNULL(MAX(CONVERT(NUMERIC,SUBSTRING(LASTKEYVAL,3,LEN(LASTKEYVAL)))),0) FROM       
     KEYS WHERE TABLENAME='ATTRM' AND COLUMNNAME='ATTRIBUTE_CODE'      
        
   SELECT @UPDATEVALUE = 0,@UPDATEVALUE1 = 0,@UPDATEVALUE2 = 0      
        
   SELECT @UPDATEVALUE1 = ISNULL(MAX(CONVERT(NUMERIC,SUBSTRING(LASTKEYVAL,3,LEN(LASTKEYVAL)))),0) FROM       
     KEYS WHERE TABLENAME='ATTRM' AND COLUMNNAME='ATTRIBUTE_CODE'      
     AND PATINDEX('%[A-Z]%',LASTKEYVAL)=0      
       
   SET @NSTEP=30     
  
INSERT IMPORT_INFO VALUES (@NSTEP,GETDATE())       
  
 PRINT 'IMPORT MASTERS-'+STR(@NSTEP)  
       
   SELECT @UPDATEVALUE2 = MAX(ISNULL(CONVERT(NUMERIC,SUBSTRING(ATTRIBUTE_CODE,3,LEN(LTRIM(RTRIM(ATTRIBUTE_CODE))))),0))      
     FROM  ATTRM WHERE PATINDEX('%[A-Z]%',ATTRIBUTE_CODE)=0      
        
   IF ISNULL(@UPDATEVALUE1,0)>ISNULL(@UPDATEVALUE2,0)      
    SET @UPDATEVALUE=ISNULL(@UPDATEVALUE1,0)      
   ELSE      
    SET @UPDATEVALUE=ISNULL(@UPDATEVALUE2,0)      
        
  
       
   SET @NSTEP=40     
  
INSERT IMPORT_INFO VALUES (@NSTEP,GETDATE())         
  PRINT 'IMPORT MASTERS-'+STR(@NSTEP)  
    
   SET @BLOOP=0  
     
   WHILE @BLOOP=0  
   BEGIN    
    UPDATE #TMPATTRM SET ATTRIBUTE_CODE= @CLOCID+REPLICATE('0',5-LEN(LTRIM(STR(@UPDATEVALUE))))+LTRIM(STR(@UPDATEVALUE)),      
    @UPDATEVALUE = @UPDATEVALUE + 1      
      
    IF NOT EXISTS (SELECT TOP 1 A.ATTRIBUTE_CODE FROM ATTRM A JOIN #TMPATTRM B ON A.ATTRIBUTE_CODE=B.ATTRIBUTE_CODE)  
      SET @BLOOP=1             
   END  
              
   INSERT ATTRM (ATTRIBUTE_CODE,ATTRIBUTE_NAME,ATTRIBUTE_GROUP,REMARKS,LAST_UPDATE,COMPANY_CODE)      
   SELECT DISTINCT ATTRIBUTE_CODE,ATTRIBUTE_NAME,'' AS ATTRIBUTE_GROUP,'' AS REMARKS,GETDATE() AS LAST_UPDATE, '01'  
   FROM #TMPATTRM 
   WHERE ISNULL(ATTRIBUTE_NAME,'')<>''      
         
   IF  EXISTS (SELECT LASTKEYVAL FROM KEYS WHERE TABLENAME='ATTRM')       
    UPDATE KEYS SET LASTKEYVAL = @CLOCID+REPLICATE('0',5-LEN(LTRIM(STR(@UPDATEVALUE))))+LTRIM(STR(@UPDATEVALUE))      
    WHERE TABLENAME='ATTRM' AND @UPDATEVALUE<>0      
   ELSE      
    INSERT KEYS (TABLENAME,LASTKEYVAL,COLUMNNAME,PREFIX,FINYEAR)      
    VALUES  ('ATTRM',@CLOCID+REPLICATE('0',5-LEN(LTRIM(STR(@UPDATEVALUE))))+LTRIM(STR(@UPDATEVALUE)),      
     'ATTRIBUTE_CODE','01',@CFINYEAR)       
        
   ----PRINT 'INSERTING ATTR_KEY...'+ CAST( DATEDIFF( SS, @DCURDT, GETDATE() ) AS VARCHAR(10) ) +'SECONDS ...'      
        
   SET @DCURDT = GETDATE()        
         
   SET @NSTEP=50     
    
  PRINT 'IMPORT MASTERS-'+STR(@NSTEP)  
  
 INSERT IMPORT_INFO VALUES (@NSTEP,GETDATE())       
       
        
   IF OBJECT_ID('TEMPDB..#TMPATTR_KEY','U') IS NOT NULL      
    DROP TABLE #TMPATTR_KEY      
        
   SELECT DISTINCT CONVERT(CHAR(7),'') AS KEY_CODE,ATTRIBUTE_NAME,KEY_NAME,KEY_ALIAS AS KEY_ALIAS,CONVERT(VARCHAR(50),'') AS ATTRIBUTE_CODE
   INTO #TMPATTR_KEY 
   FROM #TMPMASTERSATTRENC      
   WHERE LTRIM(RTRIM(ATTRIBUTE_NAME))+LTRIM(RTRIM(KEY_NAME)) NOT IN       
     (SELECT LTRIM(RTRIM(ATTRIBUTE_NAME))+LTRIM(RTRIM(KEY_NAME)) FROM ATTR_KEY A      
     JOIN ATTRM B ON A.ATTRIBUTE_CODE=B.ATTRIBUTE_CODE)      
   SELECT @UPDATEVALUE = 0,@UPDATEVALUE1 = 0,@UPDATEVALUE2 = 0      
       
   SET @NSTEP=60     
    
  PRINT 'IMPORT MASTERS-'+STR(@NSTEP)  
  
INSERT IMPORT_INFO VALUES (@NSTEP,GETDATE())       
       
   SELECT @UPDATEVALUE1 = ISNULL(MAX(CONVERT(NUMERIC,SUBSTRING(LASTKEYVAL,3,LEN(LASTKEYVAL)))),0) FROM       
     KEYS WHERE TABLENAME='ATTR_KEY'  AND COLUMNNAME='KEY_CODE'      
     AND PATINDEX('%[A-Z]%',LASTKEYVAL)=0   
     AND LEN(LASTKEYVAL)=7     
        
   SELECT @UPDATEVALUE2 = MAX(ISNULL(CONVERT(NUMERIC,SUBSTRING(KEY_CODE,3,LEN(LTRIM(RTRIM(KEY_CODE))))),0))       
     FROM  ATTR_KEY WHERE PATINDEX('%[A-Z]%',KEY_CODE)=0   
     AND LEN(KEY_CODE)=7   
        
   IF ISNULL(@UPDATEVALUE1,0)>ISNULL(@UPDATEVALUE2,0)      
    SET @UPDATEVALUE=ISNULL(@UPDATEVALUE1,0)      
   ELSE      
    SET @UPDATEVALUE=ISNULL(@UPDATEVALUE2,0)      
       
   SET @NSTEP=70     
    
  PRINT 'IMPORT MASTERS-'+STR(@NSTEP)   
  
INSERT IMPORT_INFO VALUES (@NSTEP,GETDATE())       
     
   SET @BLOOP=0  
     
   WHILE @BLOOP=0  
   BEGIN    
    UPDATE #TMPATTR_KEY SET KEY_CODE = @CLOCID+REPLICATE('0',5-LEN(LTRIM(STR(@UPDATEVALUE))))+LTRIM(STR(@UPDATEVALUE)),      
    @UPDATEVALUE = @UPDATEVALUE + 1      
      
    IF NOT EXISTS (SELECT TOP 1 A.KEY_CODE FROM ATTR_KEY A JOIN #TMPATTR_KEY B ON A.KEY_CODE= B.KEY_CODE)  
   SET @BLOOP=1             
   END  
   
  
             
   INSERT ATTR_KEY ( ATTRIBUTE_CODE, KEY_CODE, KEY_NAME, LAST_UPDATE,  KEY_ALIAS,COMPANY_CODE)      
   SELECT DISTINCT B.ATTRIBUTE_CODE, A.KEY_CODE, A.KEY_NAME,'' AS LAST_UPDATE,KEY_ALIAS AS KEY_ALIAS,'01'       
   FROM #TMPATTR_KEY A       
   JOIN ATTRM B ON A.ATTRIBUTE_NAME = B.ATTRIBUTE_NAME       
   WHERE ISNULL(KEY_NAME,'')<>''      
       
   SET @NSTEP=80     
       
   IF  EXISTS (SELECT LASTKEYVAL FROM KEYS WHERE TABLENAME='ATTR_KEY')       
    UPDATE KEYS SET LASTKEYVAL = @CLOCID+REPLICATE('0',5-LEN(LTRIM(STR(@UPDATEVALUE))))+LTRIM(STR(@UPDATEVALUE))      
    WHERE TABLENAME='ATTR_KEY' AND @UPDATEVALUE<>0      
   ELSE      
    INSERT KEYS (TABLENAME,LASTKEYVAL,COLUMNNAME,PREFIX,FINYEAR)      
    VALUES  ('ATTR_KEY',@CLOCID+REPLICATE('0',5-LEN(LTRIM(STR(@UPDATEVALUE))))+LTRIM(STR(@UPDATEVALUE)),      
     'KEY_CODE','01',@CFINYEAR)      

   SET @DCURDT = GETDATE()        
         
   ----PRINT 'INSERTING ART_ATTR...'+ CAST( DATEDIFF( SS, @DCURDT, GETDATE() ) AS VARCHAR(10) )       
       
   SET @NSTEP=121     
  

	
    PRINT 'IMPORT MASTERS-'+STR(@NSTEP)       
	
	UPDATE  A SET ARTICLE_CODE=B.ARTICLE_CODE
	FROM #TMPMASTERSATTRENC A
	JOIN ARTICLE B ON B.ARTICLE_NO=A.ARTICLE_NO
	
	
    SET @NSTEP=125   
  
  
    UPDATE  A SET A.ATTRIBUTE_CODE=B.ATTRIBUTE_CODE
	FROM #TMPMASTERSATTRENC A
	JOIN ATTRM B ON B.ATTRIBUTE_NAME=A.ATTRIBUTE_NAME


   SET @NSTEP=130
   
	UPDATE  A SET A.KEY_CODE=B.KEY_CODE
	FROM #TMPMASTERSATTRENC A
	JOIN ATTR_KEY B ON B.KEY_NAME=A.KEY_NAME
	
	
	UPDATE D SET KEY_CODE=A.KEY_CODE FROM #TMPMASTERSATTRENC A
    JOIN ART_ATTR D ON D.ARTICLE_CODE=A.ARTICLE_CODE AND D.ATTRIBUTE_CODE=A.ATTRIBUTE_CODE
	
	INSERT ART_ATTR	( ARTICLE_CODE, ATTRIBUTE_CODE, KEY_CODE, ROW_ID, LAST_UPDATE, COMPANY_CODE )  
	SELECT 	  A.ARTICLE_CODE, A.ATTRIBUTE_CODE, A.KEY_CODE,NEWID() AS  ROW_ID,GETDATE() AS LAST_UPDATE,'01' AS COMPANY_CODE 
	FROM #TMPMASTERSATTRENC A
	LEFT OUTER JOIN ART_ATTR D ON D.ARTICLE_CODE=A.ARTICLE_CODE AND D.ATTRIBUTE_CODE=A.ATTRIBUTE_CODE
	WHERE D.ARTICLE_CODE IS NULL

PRINT 'IMPORT MASTERS-'+STR(@NSTEP)              
        
         
 END TRY    
     
 BEGIN CATCH    
  SET @CERRORMSG = 'ERROR IN UPDATING MASTERS (SP_GETMASTERS_ATTR) AT STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()    
    SELECT @CERRORMSG
 END CATCH      
END
