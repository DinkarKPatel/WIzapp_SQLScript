create PROCEDURE SP3S_UPDATEPMT_PRTCHI
@cMemoId VARCHAR(40),
@bREvertFlag BIT,
@cErrormsg varchar(2000) output,
@BNEGSTOCKFOUND BIT OUTPUT
AS
BEGIN
	DECLARE @cStep VARCHAR(5),@bNewEntry BIT,@NOUTFLAG INT

BEGIN TRY
	
	set @cStep='10'
	set @CERRORMSG=''
	SET @bNewEntry=(CASE WHEN @bRevertFlag=1 THEN 0 ELSE 1 END)

-- UPDATING STOCK OF PMT W.R.T. CURRENT MEMO
	SET @cStep = 178		-- UPDATING PMT TABLE
	EXEC SP_CHKXNSAVELOG 'WSR',@cStep,0,@cMemoId,'',1

	
	  IF @bREvertFlag = 1  
			SET @NOUTFLAG =  1  
	  ELSE  
			SET @NOUTFLAG = -1  

	

	  INSERT PMT01106 (PRODUCT_CODE,  QUANTITY_IN_STOCK, DEPT_ID,BIN_ID, LAST_UPDATE )  
	  SELECT DISTINCT B.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,A.PARTY_DEPT_ID,A.TARGET_BIN_ID,GETDATE() AS LAST_UPDATE  
	  FROM DOCPRT_RMD01106_MIRROR B WITH (NOLOCK)  
	  JOIN DOCPRT_RMM01106_MIRROR A WITH (NOLOCK) ON A.RM_ID=B.RM_ID
	  LEFT OUTER JOIN PMT01106 PMT WITH (NOLOCK) ON PMT.PRODUCT_CODE = B.PRODUCT_CODE 
	  AND PMT.DEPT_ID = A.PARTY_DEPT_ID AND PMT.BIN_ID = A.TARGET_BIN_ID
	  WHERE A.RM_ID = @CMemoId AND PMT.PRODUCT_CODE IS NULL 
	 
	IF EXISTS (SELECT TOP 1 product_code from SAVETRAN_BARCODE_NETQTY (NOLOCK) WHERE sp_id=@cMemoId)
		DELETE FROM SAVETRAN_BARCODE_NETQTY WITH (ROWLOCK) WHERE sp_id=@cMemoId

	
	IF @bREvertFlag=1
		INSERT SAVETRAN_BARCODE_NETQTY(SP_ID,PRODUCT_CODE,DEPT_ID,BIN_ID,XN_QTY,new_entry)
		SELECT cm.rm_id AS sp_id,CD.PRODUCT_CODE,cm.BILLED_FROM_DEPT_ID,CD.BIN_ID,
		CD.QUANTITY AS XN_QTY,0 as new_entry
		FROM  cnm01106 CM (NOLOCK)
		JOIN cnd01106 CD (NOLOCK) ON CM.cn_ID=CD.cn_ID
		WHERE CM.rm_id=@cMemoId
	ELSE
		INSERT SAVETRAN_BARCODE_NETQTY(SP_ID,PRODUCT_CODE,DEPT_ID,BIN_ID,XN_QTY,new_entry)
		SELECT cm.rm_id AS sp_id,CD.PRODUCT_CODE,cm.BILLED_FROM_DEPT_ID,CD.BIN_ID,
		CD.QUANTITY AS XN_QTY,1 as new_entry
		FROM WSR_CNM01106_UPLOAD CM (NOLOCK)
		JOIN WSR_CND01106_UPLOAD CD (NOLOCK) ON CM.cn_ID=CD.cn_ID
		WHERE CM.rm_id=@cMemoId		

	SET @cStep = 182
	EXEC SP_CHKXNSAVELOG 'WSR',@cStep,0,@cMemoId,'',1

	
   IF EXISTS (SELECT TOP 1 A.MEMO_ID FROM STMH01106 A WITH (NOLOCK) 
             JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
			 JOIN SAVETRAN_BARCODE_NETQTY C ON C.product_code=B.product_code AND C.DEPT_ID=B.DEPT_ID AND C.BIN_ID=B.BIN_ID 
			 WHERE SP_ID=@CMEMOID 
			)
  BEGIN
		SELECT DISTINCT 'WSR' AS XN_TYPE,
				C.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,'FOLLOWING BAR CODES ARE PART OF STOCK RECONCILIATION' AS ERRMSG
			
		FROM STMH01106 A WITH (NOLOCK) 
        JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
	    JOIN SAVETRAN_BARCODE_NETQTY C ON C.product_code=B.product_code AND C.DEPT_ID=B.DEPT_ID AND C.BIN_ID=B.BIN_ID 
		WHERE SP_ID=@CMEMOID 
		 	 			  
		SET @BNEGSTOCKFOUND=1			 
		RETURN					
  END	  

	--UPDATING STOCK IN PMT01106
	UPDATE A
	SET QUANTITY_IN_STOCK=QUANTITY_IN_STOCK-(@NOUTFLAG*B.xn_qty)
	FROM PMT01106 A WITH (ROWLOCK)
	JOIN (
	 SELECT PRODUCT_CODE ,DEPT_ID ,BIN_ID ,
	        SUM(XN_QTY) AS XN_QTY
	 FROM SAVETRAN_BARCODE_NETQTY B (NOLOCK)  
	 WHERE SP_ID=@CMEMOID AND ISNULL(NEW_ENTRY,0)=@BNEWENTRY
	 GROUP BY PRODUCT_CODE ,DEPT_ID ,BIN_ID 
	) b on A.product_code=B.product_code AND A.DEPT_ID=B.DEPT_ID AND A.BIN_ID=B.BIN_ID
	

	SET @cStep = 184
	EXEC SP_CHKXNSAVELOG 'WSR',@cStep,0,@cMemoId,'',1			
	--as per discussion with sanjiv sir in chi entry no check pmt stock as on 23-11-2020
	--IF @bREvertFlag=0 
	--BEGIN
	--	IF EXISTS(SELECT TOP 1 'U' FROM PMT01106 A (NOLOCK) JOIN SAVETRAN_BARCODE_NETQTY B (NOLOCK) ON A.product_code=B.product_code
	--				AND A.DEPT_ID=B.DEPT_ID AND A.BIN_ID=B.BIN_ID 
	--				WHERE sp_id=@cMemoId AND A.quantity_in_stock<0)
	--	BEGIN	
	--		SET @cStep = 186
	--		EXEC SP_CHKXNSAVELOG 'WSR',@cStep,0,@cMemoId,'',1			
					  
	--		SELECT A.PRODUCT_CODE,A.QUANTITY_IN_STOCK,'STOCK is GOING NEGATIVE' AS ERRMSG
	--		FROM PMT01106 A WITH (NOLOCK)
	--		JOIN SAVETRAN_BARCODE_NETQTY B (NOLOCK) ON A.product_code=B.product_code AND A.DEPT_ID=B.DEPT_ID AND A.BIN_ID=B.BIN_ID 
	--		WHERE sp_id=@cMemoId AND A.quantity_in_stock<0
			
	--		set @cErrormsg='Stock Going negative'
	--		SET @BNEGSTOCKFOUND=1

	--		goto end_proc
	--	END
	--END

	GOTO END_PROC
END TRY

BEGIN CATCH
	SET @cErrormsg='Error in Procedure SP3S_UPDATEPMT_PRTCHI at Step#'+@cStep+' '+ERROR_MESSAGE()
	GOTO END_PROC
END CATCH

END_PROC:
	
END