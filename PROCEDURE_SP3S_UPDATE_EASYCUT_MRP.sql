CREATE PROCEDURE SP3S_UPDATE_EASYCUT_MRP
--WITH ENCRYPTION
AS
BEGIN
  DECLARE @CERRMSG VARCHAR(MAX) ,@NSTEP  INT,@CCM_ID VARCHAR(50),@SPID INT,@CFINYEAR VARCHAR(10),
          @NNEWNETAMOUNT NUMERIC(12,2),@DEPT_ID VARCHAR(5),@NCMMDISCAMT NUMERIC(12,2),@CROUNDBILLLEVEL INT,
          @NEXCLTAX NUMERIC(12,2),@NCMMDISCPCT NUMERIC(10,3),@NET_AMOUNT NUMERIC(18,2),@ADJ_AMOUNT NUMERIC(18,2),
          @CCMD NVARCHAR(MAX),@DTFROM VARCHAR(20),@DTTO VARCHAR(20),@NUPLOADED INT
  DECLARE @TRETMSG TABLE  (ERRMSG VARCHAR(MAX))
  
  SET @CERRMSG=''  
  BEGIN TRY  
  BEGIN TRANSACTION  
  
  DECLARE @TBLCMTAX TABLE (ERRMSG   VARCHAR(MAX))
  
  SET @NSTEP=10
  --SET MRP WITH NEW MRP
   SELECT TOP 1  @DEPT_ID=VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'
  -- IF EXISTS (SELECT TOP 1 'U' FROM EASYCUT_AUTO_LOG WHERE ISNULL(PROCESSED,0)=0 AND ISNULL(UPLOADED,0)=1)
  
   SELECT  TOP 1 @DTFROM=FROM_DT ,@DTTO=TO_DT,@NUPLOADED=UPLOADED  FROM EASYCUT_AUTO_LOG WHERE ISNULL(PROCESSED,0)=0 AND ISNULL(UPLOADED,0)=1
   
   IF ISNULL(@NUPLOADED,0)=0
   GOTO END_PROC  	
	
	SET @NSTEP=20
 IF OBJECT_ID('TEMPDB..#TABLECM_ID','U') IS NOT NULL
	DROP TABLE #TABLECM_ID
 
  CREATE TABLE #TABLECM_ID(CM_ID VARCHAR(50),NET_AMOUNT NUMERIC(10,2))
  
	SET @CCMD=N'SELECT A1.CM_ID  ,A1.NET_AMOUNT AS  NET_AMOUNT 
	FROM CMM01106 A1 (NOLOCK)     
	JOIN CMD01106 B (NOLOCK) ON B.CM_ID=A1.CM_ID  
	JOIN   
	(    
	 SELECT A.MEMO_ID,B.PAYMODE_GRP_CODE,SUM(A.AMOUNT) AS [AMOUNT]     
	 FROM PAYMODE_XN_DET A (NOLOCK)     
	 JOIN PAYMODE_MST B (NOLOCK) ON  B.PAYMODE_CODE=A.PAYMODE_CODE     
	 JOIN PAYMODE_GRP_MST C (NOLOCK) ON C.PAYMODE_GRP_CODE=B.PAYMODE_GRP_CODE     
	 WHERE C.PAYMODE_GRP_CODE=''0000001'' AND A.XN_TYPE=''SLS''     
	 GROUP BY A.MEMO_ID,B.PAYMODE_GRP_CODE    
	)X ON X.MEMO_ID=A1.CM_ID  
	LEFT OUTER JOIN
	(
	 SELECT A1.CM_ID 
	 FROM CMM01106 A1
	 JOIN CMD01106 B ON A1.CM_ID=B.CM_ID
	 WHERE A1.CANCELLED=0
	 AND (A1.CM_DT BETWEEN '''+CONVERT(VARCHAR(11),@DTFROM,120)+''' AND '''+CONVERT(VARCHAR(11),@DTTO,120)+''') 
	 AND B.TAX_METHOD=2
	 GROUP BY  A1.CM_ID
	) Y ON A1.CM_ID=Y.CM_ID
	JOIN PATCH_MRP_SETUP PMRP ON PMRP.OLD_MRP=B.MRP
	WHERE (B.OLD_MRP=B.MRP OR ISNULL(A1.PATCHUP_RUN,0)=0) AND A1.NET_AMOUNT=X.AMOUNT     
	AND (A1.MEMO_TYPE = ''0'' OR A1.MEMO_TYPE = ''1'')    
	AND (A1.CM_DT BETWEEN '''+CONVERT(VARCHAR(11),@DTFROM,120)+''' AND '''+CONVERT(VARCHAR(11),@DTTO,120)+''')    
	AND A1.CANCELLED=0 
	AND ISNULL(A1.SUBTOTAL_R,0)=0 
	AND A1.location_code='''+@DEPT_ID+'''
	AND A1.USER_CODE NOT IN (''0000047'',''0000048'')
	AND Y.CM_ID IS NULL
	GROUP BY A1.CM_ID,A1.NET_AMOUNT '
    PRINT @CCMD
	INSERT INTO #TABLECM_ID    
	EXEC SP_EXECUTESQL @CCMD

   CREATE INDEX IX_TABLECM_ID ON #TABLECM_ID(CM_ID)
  
   SET @NSTEP=30
   UPDATE B SET MRP=C.NEW_MRP ,OLD_MRP=B.MRP,DISCOUNT_AMOUNT =((C.NEW_MRP*DISCOUNT_PERCENTAGE) /100)*QUANTITY,
                NET=((C.NEW_MRP*QUANTITY)-(((C.NEW_MRP*DISCOUNT_PERCENTAGE) /100)*QUANTITY)),ITEM_ROUND_OFF=0 
   FROM #TABLECM_ID A (NOLOCK)
   JOIN CMD01106 B (NOLOCK)  ON A.CM_ID =B.CM_ID 
   JOIN PATCH_MRP_SETUP C (NOLOCK) ON B.MRP =C.OLD_MRP 
  
   
   --CALCULATE SUBTOTAL
   SET @NSTEP=60
   UPDATE B SET SUBTOTAL=C.SUBTOTAL,SUBTOTAL_R=C.SUBTOTAL_R ,PATCHUP_RUN =1
   FROM #TABLECM_ID A
   JOIN CMM01106 B ON A.CM_ID=B.CM_ID
   JOIN
   (
    SELECT CM_ID,
    SUM(CASE WHEN QUANTITY>0 THEN NET ELSE 0 END) AS SUBTOTAL,
    SUM(CASE WHEN QUANTITY<0 THEN NET ELSE 0 END) AS SUBTOTAL_R 
    FROM CMD01106 C 
    GROUP BY CM_ID
   ) C ON A.CM_ID =C.CM_ID 
   
   
   --CALCULATE SUBTOTAL DISCOUNT AMOUNT
    SET @NSTEP=70
    UPDATE A SET DISCOUNT_AMOUNT=SUBTOTAL*DISCOUNT_PERCENTAGE/100,LAST_UPDATE=GETDATE() 
    FROM CMM01106 A
    JOIN #TABLECM_ID B ON A.CM_ID =B.CM_ID 
   
    --CALCULATE CMM_DISCOUNT AMOUNT
    SET @NSTEP=80
     UPDATE CD SET CMM_DISCOUNT_AMOUNT = ROUND(((CM.DISCOUNT_AMOUNT*NET)/SUBTOTAL) ,3) ,
               RFNET=NET-ISNULL(ROUND(((CM.DISCOUNT_AMOUNT*NET)/SUBTOTAL) ,3) ,0)
     FROM #TABLECM_ID A
     JOIN CMM01106 CM ON A.CM_ID=CM.CM_ID
     JOIN CMD01106 CD ON A.CM_ID =CD.CM_ID 
    
     SET @NSTEP=90
     INSERT INTO @TBLCMTAX
     EXEC SP_UPDCMTAX
     @DFROMDT=@DTFROM,
	 @DTODT=@DTTO,
	 @CDEPT_ID=@DEPT_ID,
	 @CCMID='',
	 @BCALLEDFROMSAVEBILL=0,
	 @NBILLLEVELDISCPCT=0,
	 @BCAL_EXCLUSIVE_TAX_FORCELY=1
	 
	 SELECT TOP 1 @CERRMSG=ERRMSG FROM @TBLCMTAX WHERE ISNULL(ERRMSG,'')<>''
	 IF ISNULL(@CERRMSG,'')<>''
	 GOTO END_PROC
     
      
      SET @NSTEP=110
      --CALCULATE NET AMOUNT
      UPDATE A SET  NET_AMOUNT=SUBTOTAL+SUBTOTAL_R+ATD_CHARGES+ISNULL(EXCLTAX,0)-DISCOUNT_AMOUNT 
      FROM CMM01106 A
      JOIN #TABLECM_ID B ON A.CM_ID =B.CM_ID 
      LEFT OUTER JOIN
      (
       SELECT CM_ID,SUM(TAX_AMOUNT) AS EXCLTAX 
       FROM CMD01106 
       WHERE TAX_METHOD=2
       GROUP BY CM_ID
      ) C ON A.CM_ID=C.CM_ID 
      
      SELECT TOP 1 @CROUNDBILLLEVEL=VALUE FROM CONFIG WHERE CONFIG_OPTION='sls_ROUND_BILL_LEVEL' 
	  SET @NSTEP=120
	  --CALCULATE ROUND_OFF
	  UPDATE A  SET ROUND_OFF= (CASE WHEN ISNULL(@CROUNDBILLLEVEL,'')='2' THEN ROUND(A.NET_AMOUNT/5,0)*5-A.NET_AMOUNT
	  WHEN ISNULL(@CROUNDBILLLEVEL,'')='3' THEN CEILING(A.NET_AMOUNT/5)*5-A.NET_AMOUNT  ELSE ROUND(A.NET_AMOUNT,0)-A.NET_AMOUNT  END)
	  FROM CMM01106 A
      JOIN #TABLECM_ID B ON A.CM_ID =B.CM_ID 
      
	  --CALCULATE NET AMOUNT AFTER  ROUND_OFF
	  
	  UPDATE A SET  NET_AMOUNT=SUBTOTAL+SUBTOTAL_R+ATD_CHARGES+ISNULL(EXCLTAX,0)-DISCOUNT_AMOUNT+ROUND_OFF
      FROM CMM01106 A
      JOIN #TABLECM_ID B ON A.CM_ID =B.CM_ID 
      LEFT OUTER JOIN
      (
       SELECT CM_ID,SUM(TAX_AMOUNT) AS EXCLTAX 
       FROM CMD01106 
       WHERE TAX_METHOD=2
       GROUP BY CM_ID
      ) C ON A.CM_ID=C.CM_ID 
      
      --CALCULATE PAY MODE AMOUNT 
      
      UPDATE C SET AMOUNT =B.NET_AMOUNT 
      FROM #TABLECM_ID A
      JOIN CMM01106 B ON A.CM_ID =B.CM_ID 
      JOIN PAYMODE_XN_DET C ON A.CM_ID =C.MEMO_ID AND C.XN_TYPE ='SLS'
    
    

END TRY  
BEGIN CATCH  
    SET @CERRMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
END CATCH 
   
END_PROC: 

IF @@TRANCOUNT>0  
BEGIN  
  IF ISNULL(@CERRMSG,'')='' 
  BEGIN
	COMMIT TRANSACTION 
	UPDATE EASYCUT_AUTO_LOG SET PROCESSED=1 WHERE FROM_DT=@DTFROM AND TO_DT=@DTTO
  END
  ELSE  
	ROLLBACK  
END  
SELECT ISNULL(@CERRMSG,'') AS ERRMSG

END        
---------- END OF PROCEDURE SP3S_UPDATE_EASYCUT_MRP
