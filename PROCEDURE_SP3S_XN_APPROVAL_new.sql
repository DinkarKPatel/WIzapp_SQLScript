create PROCEDURE SP3S_XN_APPROVAL_NEW
(        
 @NQUERYID  NUMERIC(5),        
 @CXNTYPE  VARCHAR(10),        
 @NLEVEL   NUMERIC(5),        
 @CWHERE   VARCHAR(MAX),         
 @CTODT   DATETIME ,
 @CGTODAY   DATETIME='' ,
 @cDeptID VARCHAR(10)= '' ,
 @iApprovedPO int=0
)         
AS        
BEGIN       
 
--drop table temp
--select @@spid as a  into temp


--select * from temp

	DECLARE @CCURDEPTID VARCHAR(5),@DSTARTINGFROM DATETIME,@BCONSIDERAUTOPOSTEDVOUCHER BIT,
			@DSTARTINGFROM_PBM DATETIME

	
	IF ISNULL(@cDeptID,'')='' 
	SELECT TOP 1 @CCURDEPTID=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
	ELSE
	SELECT @CCURDEPTID= @cDeptID
	

	SELECT TOP 1  @DSTARTINGFROM=ISNULL(CUTOFFDATE,''),@BCONSIDERAUTOPOSTEDVOUCHER=ISNULL(ALLOWAUTOPOSTEDENTRY,0) 
	 FROM LOC_XNSAPPROVAL
	  WHERE XN_TYPE=@CXNTYPE AND DEPT_ID=@CCURDEPTID

	SELECT @DSTARTINGFROM=ISNULL(@DSTARTINGFROM,'')
			,@BCONSIDERAUTOPOSTEDVOUCHER=ISNULL(@BCONSIDERAUTOPOSTEDVOUCHER,0)


	IF @DSTARTINGFROM=''
		SET @DSTARTINGFROM= @CTODT
	
	SELECT @NLEVEL=B.LEVEL_NO  FROM XN_APPROVAL_CHECKLIST_LEVEL_USERS A         
	JOIN XN_APPROVAL_CHECKLIST_LEVELS B ON  B.LEVEL_NO=A.LEVEL_NO AND A.LEVEL_CODE=B.LEVEL_CODE AND B.XN_TYPE=A.XN_TYPE        
	WHERE USER_CODE=@CWHERE AND A.XN_TYPE=@CXNTYPE  AND A.DEPT_ID=@CCURDEPTID 
	
		--*-- PURCHASE INVOICE
	  
	IF OBJECT_ID ('TEMPDB..#TMPREMARKS','U') IS NOT NULL
	   DROP TABLE #TMPREMARKS
			
	 SELECT XN_TYPE=CAST('' AS VARCHAR(10)),MEMO_ID=CAST('' AS VARCHAR(100)),APPROVAL_REMARKS INTO #TMPREMARKS FROM 	PIM_XN_APPROVAL WHERE 1=2 
      
IF @NQUERYID=1        
 GOTO SSPL_MST        
ELSE IF @NQUERYID=2        
 GOTO SSPL_DET        
ELSE IF @NQUERYID=3        
 GOTO SSPL_CHECKLIST_LEVEL_DETAILS           
ELSE IF @NQUERYID=4        
 GOTO SSPL_CHECKLIST_LEVEL_USERS
ELSE IF @NQUERYID=5        
 GOTO SSPL_ACCESSS
       
SSPL_MST: 

    
 IF(@CXNTYPE='PUR')  
 BEGIN   
	 
	 print 'step#1:'+convert(varchar,getdate(),113)
	 
	SELECT TOP 1  @DSTARTINGFROM_PBM=ISNULL(CUTOFFDATE,'')
	 FROM LOC_XNSAPPROVAL (NOLOCK)
	 WHERE XN_TYPE IN ('PUR','PBM') AND DEPT_ID=@CCURDEPTID

	SELECT @DSTARTINGFROM_PBM=ISNULL(@DSTARTINGFROM_PBM,'')
	
	print 'step#2:'+convert(varchar,getdate(),113)	
	select mrr_id INTO 	#tmpMrr from pim01106 b (NOLOCK)
	join location l on l.dept_id =case when isnull(Pur_For_Dept_id,'') <>'' then Pur_For_Dept_id else b.location_Code  end
	WHERE (B.location_Code =@CCURDEPTID or isnull(l.allow_purchase_at_ho,0)=1) AND b.BILL_NO<>'' 
	AND  ISNULL(b.PIM_MODE,0)<>5 AND  ISNULL(b.BILL_CHALLAN_MODE,0)<>1 
	AND b.INV_MODE=1  and ISNULL(b.MRR_DT,b.RECEIPT_DT) BETWEEN @DSTARTINGFROM AND @CTODT
	 -- AND (@DSTARTINGFROM='' OR ISNULL(b.MRR_DT,b.RECEIPT_DT) BETWEEN @DSTARTINGFROM AND @CTODT)
	AND ISNULL(b.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
	AND b.CANCELLED=0
	
	print 'step#3:'+convert(varchar,getdate(),113)
		;WITH CTE AS
		(
		 SELECT  XN_TYPE,B.MRR_ID,APPROVAL_REMARKS, 
				 SR=ROW_NUMBER() OVER ( PARTITION BY XN_TYPE,B.MRR_ID ORDER BY A.LAST_UPDATE DESC)  
		 FROM  TRANSACTION_APPROVAL_DET A (NOLOCK)
		 JOIN #tmpMrr B (NOLOCK) ON A.XN_ID =B.mrr_id 
		 WHERE XN_TYPE IN ('PUR','PBM')
		-- AND ISNULL(B.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
		)
        
        INSERT INTO #TMPREMARKS (XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
		SELECT XN_TYPE,MRR_ID,APPROVAL_REMARKS 
		FROM CTE WHERE SR=1  
	
	  
	  print 'step#5:'+convert(varchar,getdate(),113)
	--	--PENDING FOR HIGHER LEVEL
	----SELECT @DSTARTINGFROM	,ISNULL(@NLEVEL,0)	
	  SELECT ROW_NUMBER() OVER (ORDER BY XN_TYPE DESC, A.XN_ID ) AS SRNO,* INTO #tmpPimApp FROM 
	  (
	  SELECT 'PUR' AS XN_TYPE,A.MRR_ID AS XN_ID ,0 AS APPROVAL_STATUS,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
	  GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,A.MRR_NO AS [XN_NO],A.INV_DT AS [XN_DT],
	  a.AC_CODE,lm.AC_NAME,lmp.ADDRESS0+' '+ lmp.ADDRESS1 + ' ' + lmp.ADDRESS2 + ', ' + AREA_NAME +           
	  ' ' +CITY + ' ' + STATE AS [ADDRESS],        
	  A.TERMS ,
	  ISNULL(LT.REMARKS,'') AS TERMS_REMARKS,A.BILL_NO,CONVERT(BIT,0) AS ISHIDDEN      
	  ,A.CANCELLED, ISNULL(LT.TERMS_NAME,'') AS TERMS_NAME,A.RECEIPT_DT,UNAPPROVED  =CAST(0 AS BIT),
	  USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),
	  LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	  DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10)),
	  CONVERT(NUMERIC(12,2),
	  ISNULL(PID.RSP_VALUE,0)) AS RSP, 
	  CONVERT(NUMERIC(14,2),P_VALUE) AS PURCHASE_PRICE,
	  MARKDOWN_PERCENTAGE=CONVERT(NUMERIC(18,2),CASE WHEN MRP= 0 THEN 0 ELSE ROUND((RSP_VALUE-P_VALUE)*100/RSP_VALUE,2) END),
	  MARKUP_PERCENTAGE=CONVERT(NUMERIC(18,2),CASE WHEN MRP= 0 OR P_VALUE=0 THEN 0 ELSE ROUND(((RSP_VALUE-P_VALUE)/P_VALUE)*100,2) END),
	  A.TOTAL_AMOUNT AS [AMOUNT] ,
	  CONVERT(NUMERIC(14,2),party_inv_amount) AS LEDGER_NETAMOUNT,
	  CONVERT(NUMERIC(14,2),0) AS DIFF_NETAMOUNT,

	  ISNULL(RMM.TOTAL_AMOUNT,0) AS FDN_AMT,
	  ISNULL(RMM.RM_NO,'') AS FDN_NO,
	  (CASE WHEN a.XN_ITEM_TYPE  = 4 THEN 'SERVICES' WHEN a.XN_ITEM_TYPE =3 THEN 'ASSETS' WHEN a.XN_ITEM_TYPE =2 THEN 'CONSUMABLE'  ELSE  'INVENTORY' END) AS XN_ITEM_TYPE 
	  ,A.REMARKS
	  --ISNULL(RMM.TOTAL_AMOUNT,0) AS FDN_AMT,RMM.RM_NO AS FDN_NO
	  FROM PIM01106 A  (NOLOCK) 
	  JOIN
	  (
	   SELECT a.MRR_ID,SUM(MRP*QUANTITY) AS RSP_VALUE,SUM(MRP) AS MRP,SUM(PURCHASE_PRICE*QUANTITY) AS P_VALUE,
	          SUM(ISNULL(PRTAMOUNT,0)) AS FDN_AMT
	   FROM PID01106 A (NOLOCK)
	   JOIN #tmpMrr b  ON a.mrr_id=b.mrr_id
	   GROUP BY  a.MRR_ID
	  ) PID ON A.MRR_ID =PID.MRR_ID        
	  JOIN LM01106 lm (NOLOCK) ON A.AC_CODE = lm.AC_CODE 
	  JOIN lmp01106 lmp (NOLOCK) ON lmp.AC_CODE=lm.AC_CODE
	  JOIN area (NOLOCK) on area.area_code=lmp.area_code
	  JOIN city (NOLOCK) ON city.city_code=area.city_code
	  JOIN state (NOLOCK) ON state.state_code=city.state_code
	  LEFT JOIN LEDGER_TERMS LT(NOLOCK) ON 1=2
	  LEFT JOIN #TMPREMARKS XN ON XN.MEMO_ID =A.MRR_ID AND XN.XN_TYPE='PUR'       
	  LEFT OUTER JOIN RMM01106 RMM (NOLOCK) ON RMM.REFMEMOID=A.MRR_ID AND RMM.PRTSOURCE='PUR' AND RMM.CANCELLED=0              
	  JOIN #tmpMrr m ON m.mrr_id=a.mrr_id

	  UNION ALL
	  SELECT  'PBM' AS XN_TYPE,A.MRR_ID AS XN_ID ,0 AS APPROVAL_STATUS,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
	  GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,A.MRR_NO AS [XN_NO],A.INV_DT  AS [XN_DT],
	  C.AC_CODE,C.AC_NAME,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + C.AREA_NAME +           
	  ' ' + C.CITY + ' ' + C.STATE AS [ADDRESS], 
	  '' AS TERMS ,
	  '' AS TERMS_REMARKS,A.BILL_NO,CONVERT(BIT,0) AS ISHIDDEN      
	  ,A.CANCELLED,'' AS TERMS_NAME,A.RECEIPT_DT  AS RECEIPT_DT,UNAPPROVED  =CAST(0 AS BIT),
	  USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	  DISAPPROVAL_STATUS =CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(5)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10)),
	  0 AS RSP,
	  0 AS PURCHASE_PRICE,
	  MARKDOWN_PERCENTAGE=0,
	  MARKUP_PERCENTAGE=0,
	  A.TOTAL_AMOUNT AS [AMOUNT] ,
	  0 AS LEDGER_AMOUNT ,
	  0 AS DIFF_NETAMOUNT,
	  0 AS FDN_AMT,'' AS FDN_NO,
	  (CASE WHEN a.XN_ITEM_TYPE  = 4 THEN 'SERVICES' WHEN a.XN_ITEM_TYPE =3 THEN 'ASSETS' WHEN a.XN_ITEM_TYPE =2 THEN 'CONSUMABLE'  ELSE  'INVENTORY' END) AS XN_ITEM_TYPE
	  ,A.REMARKS
	  FROM PIM01106  A  (NOLOCK)        
	  JOIN LMV01106 C (NOLOCK) ON A.AC_CODE = C.AC_CODE 
	  LEFT JOIN #TMPREMARKS XN ON XN.MEMO_ID =A.MRR_ID  AND XN.XN_TYPE='PBM'      
	  WHERE A.location_Code =@CCURDEPTID AND A.BILL_NO<>'' 
			AND (@DSTARTINGFROM_PBM='' OR A.MRR_DT BETWEEN @DSTARTINGFROM_PBM AND @CTODT) 
			AND ISNULL(A.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
			AND A.CANCELLED=0
			AND  ISNULL(A.PIM_MODE,0)=5
	 ) A
	 
	
	print 'step#6:'+convert(varchar,getdate(),113)
	 SELECT DISTINCT XN_ID,LEDGER_NETAMOUNT,DIFF_NETAMOUNT,amount INTO #tmpPimAppLmnet FROM 
	 #tmpPimApp
	 
	print 'step#7:'+convert(varchar,getdate(),113)
	UPDATE #tmpPimAppLmnet SET LEDGER_NETAMOUNT=b.ledger_netamount from
	pending_purapp_ledgernet b (NOLOCK) WHERE b.mrr_id=#tmpPimAppLmnet.xn_id
	 

	 print 'step#8:'+convert(varchar,getdate(),113)
	 UPDATE #tmpPimAppLmnet SET DIFF_NETAMOUNT=AMOUNT-LEDGER_NETAMOUNT
	 
	 print 'step#9:'+convert(varchar,getdate(),113)
	 UPDATE a SET LEDGER_NETAMOUNT=b.LEDGER_NETAMOUNT,DIFF_NETAMOUNT=b.DIFF_NETAMOUNT FROM #tmpPimApp a
	 JOIN #tmpPimAppLmnet b ON a.XN_ID=b.XN_ID
	 
	 print 'step#10:'+convert(varchar,getdate(),113)
	 SELECT * FROM #tmpPimApp
	 ORDER BY XN_TYPE DESC, XN_ID 	 
	 
	 print 'step#11:'+convert(varchar,getdate(),113)
    GOTO SSPL99
END 
ELSE IF(@CXNTYPE='PO')  
 BEGIN   
		 ;WITH CTE AS
		(
		 SELECT  XN_TYPE,XN_ID,APPROVAL_REMARKS, 
				 SR=ROW_NUMBER() OVER ( PARTITION BY XN_ID ORDER BY LAST_UPDATE DESC)  
		 FROM  TRANSACTION_APPROVAL_DET 
		 WHERE XN_TYPE='PO' 
		)
        
        INSERT INTO #TMPREMARKS (XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
		SELECT XN_TYPE,XN_ID,APPROVAL_REMARKS 
		FROM CTE WHERE SR=1  
	
		
		IF @iApprovedPO=0
		BEGIN

		 SELECT 'PO' AS XN_TYPE,A.PO_ID AS XN_ID,
				0 AS APPROVAL_STATUS,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
				GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,
				A.PO_NO AS [XN_NO],A.PO_DT  AS [XN_DT],
				C.AC_NAME ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + C.AREA_NAME +           
				' ' + C.CITY + ' ' + C.STATE AS [ADDRESS],        
				CONVERT(BIT ,0) AS [APPROVED],UNAPPROVED  =CAST(0 AS BIT),
				A.TOTAL_AMOUNT AS [AMOUNT],
				ROW_NUMBER() OVER (ORDER BY  A.PO_ID ) AS [SRNO],      
				USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
				SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),
				LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
				DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),
				DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),
				LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10)),
				'' AS BUDGET_PLAN_NAME
		 FROM POM01106  A  (NOLOCK)        
		 JOIN LMV01106 C (NOLOCK) ON A.AC_CODE = C.AC_CODE 
		 LEFT OUTER JOIN  #TMPREMARKS XN ON XN.MEMO_ID =A.PO_ID  AND XN.XN_TYPE='PO'        
		 WHERE A.location_Code =@CCURDEPTID 
		 AND (@DSTARTINGFROM='' OR A.PO_DT  BETWEEN @DSTARTINGFROM AND @CTODT) 
		 AND ISNULL(A.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
		 AND A.CANCELLED=0
		 ORDER BY A.PO_ID  

		 END
		 ELSE
		 BEGIN
		        --IT IS CHANGES FOR PO Approved But Grn Not generated this Po shows for dis approval
				IF OBJECT_ID ('TEMPDB..#TMP_APPROVEDGRNPO','U') IS NOT NULL
		            Drop table #TMP_APPROVEDGRNPO

		

			  SELECT a.po_id  
			        INTO #TMP_APPROVEDGRNPO
			  FROM POm01106 A
			  join pod01106 b on a.po_id =b.po_id 
			  where a.approvedlevelno=99 
			  and A.location_Code =@CCURDEPTID 
	          AND (@DSTARTINGFROM='' OR A.PO_DT  BETWEEN @DSTARTINGFROM AND @CTODT) 
			  and a.cancelled=0 and ISNULL(B.PI_QTY ,0)<>0 
			  GROUP BY a.po_id


			  
		 SELECT 'PO' AS XN_TYPE,A.PO_ID AS XN_ID,
				CONVERT(BIT ,0) AS APPROVAL_STATUS,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
				GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,
				A.PO_NO AS [XN_NO],A.PO_DT  AS [XN_DT],
				C.AC_NAME ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + C.AREA_NAME +           
				' ' + C.CITY + ' ' + C.STATE AS [ADDRESS],        
				CONVERT(BIT ,0) AS [APPROVED],UNAPPROVED  =CAST(0 AS BIT),
				A.TOTAL_AMOUNT AS [AMOUNT],
				ROW_NUMBER() OVER (ORDER BY  A.PO_ID ) AS [SRNO],      
				USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
				SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),
				LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
				DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),
				DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),
				LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10)),
				'' AS BUDGET_PLAN_NAME
		 FROM POM01106  A  (NOLOCK)  
		 LEFT JOIN #TMP_APPROVEDGRNPO TMP ON TMP.po_id =A.PO_ID 
		 JOIN LMV01106 C (NOLOCK) ON A.AC_CODE = C.AC_CODE 
		 LEFT OUTER JOIN  #TMPREMARKS XN ON XN.MEMO_ID =A.PO_ID  AND XN.XN_TYPE='PO'        
		 WHERE A.location_Code =@CCURDEPTID 
		 and a.po_for_dept_id =@CCURDEPTID
		 AND (@DSTARTINGFROM='' OR A.PO_DT  BETWEEN @DSTARTINGFROM AND @CTODT) 
		 AND ISNULL(A.APPROVEDLEVELNO,0)=99 
		 AND A.CANCELLED=0 --AND TMP.po_id IS NULL
		 ORDER BY A.PO_ID  


		 END

    GOTO SSPL99
END
ELSE IF(@CXNTYPE='EOSSSOR')  
 BEGIN   
		 ;WITH CTE AS
		(
		 SELECT  XN_TYPE,XN_ID,APPROVAL_REMARKS, 
				 SR=ROW_NUMBER() OVER ( PARTITION BY XN_ID ORDER BY LAST_UPDATE DESC)  
		 FROM  TRANSACTION_APPROVAL_DET 
		 WHERE XN_TYPE='EOSSSOR' 
		)
        INSERT INTO #TMPREMARKS (XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
		SELECT XN_TYPE,XN_ID,APPROVAL_REMARKS 
		FROM CTE WHERE SR=1  
		

		SELECT 'EOSSSOR' AS XN_TYPE,A.MEMO_ID AS XN_ID,0 AS APPROVAL_STATUS,
		ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
		GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,
		ac_name,memo_no as xn_no,memo_dt  as xn_dt,eoss_scheme_name,SUM(mrp_value) mrp_value,
		SUM(discount_amount) actual_discount,
		SUM(claimed_base_value) as claimed_base_discount,
		CONVERT(BIT ,0) AS [APPROVED],UNAPPROVED  =CAST(0 AS BIT),
	    DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),
	    DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),
		LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10)),
		LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
  	    USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	    SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),
		LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),
		SUM(taxable_value) taxable_value,st.sor_terms_name AS sor_terms_DESC,SUM(taxable_value+output_gst) NRV,gm_per,
		sum(claimed_base_value) claimed_base_value,

		(CASE WHEN SUM(taxable_value)<>0 THEN convert(numeric(6,2),ROUND((SUM(claimed_base_value*gm_per/100)/SUM(taxable_value))*100 ,2))
					  ELSE 0 END) margin_pct_taxable,

		convert(numeric(14,2),SUM(claimed_base_value*gm_per/100)) claimed_base_gm_value,
		SUM(output_gst) output_gst,
		SUM(input_gst) input_gst,SUM(input_gst-output_gst) net_gst,
		SUM(net_payable) net_payable,
		convert(numeric(10,2),
		case when SUM(item_net)=0 then 0 else 
		ROUND((SUM(claimed_base_value*gm_per/100)/SUM(item_net))*100,2) end )   margin_pct

		FROM EOSSSORD A  (NOLOCK)        
		JOIN eosssorm b (NOLOCK) ON a.MEMO_ID=b.memo_id
		JOIN LM01106 C (NOLOCK) ON b.AC_CODE = C.AC_CODE 
		left join sor_terms_mst st (nolock) on st.sor_terms_code=a.sor_terms_code
		LEFT JOIN location loc (NOLOCK) ON loc.dept_id=b.party_dept_id
		LEFT OUTER JOIN  #TMPREMARKS XN ON XN.MEMO_ID =A.MEMO_ID AND XN.XN_TYPE='EOSSSOR'        
		WHERE b.location_Code =@CCURDEPTID 
		AND (@DSTARTINGFROM='' OR b.MEMO_DT BETWEEN @DSTARTINGFROM AND @CTODT) 
		AND ISNULL(b.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1	AND b.CANCELLED=0
		group by a.memo_id,ISNULL(XN.APPROVAL_REMARKS,''),ac_name,memo_no,memo_dt,eoss_scheme_name,
		st.sor_terms_name,gm_per
		ORDER BY memo_dt,memo_no,eoss_scheme_name
		
	 
		
    GOTO SSPL99
END 
ELSE IF(@CXNTYPE='BDGPL')  
 BEGIN   
		 ;WITH CTE AS
		(
		 SELECT  XN_TYPE,XN_ID,APPROVAL_REMARKS, 
				 SR=ROW_NUMBER() OVER ( PARTITION BY XN_ID ORDER BY LAST_UPDATE DESC)  
		 FROM  TRANSACTION_APPROVAL_DET 
		 WHERE XN_TYPE='BDGPL' 
		)
        INSERT INTO #TMPREMARKS (XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
		SELECT XN_TYPE,XN_ID,APPROVAL_REMARKS 
		FROM CTE WHERE SR=1  
		
	
		--PENDING FOR HIGHER LEVEL
		
		--PENDING FOR HIGHER LEVEL
		
	 SELECT 'BDGPL' AS XN_TYPE,A.MEMO_NO AS XN_ID,
	        0 AS APPROVAL_STATUS,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
		    GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,
		    A.MEMO_NO AS [XN_NO],A.MEMO_DT  AS [XN_DT],
		    '' AS [ADDRESS],
		    A.BUDGET_PLAN_NAME,  A.EXPIRY_DT,      
		    CONVERT(BIT ,0) AS [APPROVED],UNAPPROVED  =CAST(0 AS BIT),
		    B.BUDGET_AMOUNT AS [AMOUNT],
		    ROW_NUMBER() OVER (ORDER BY  A.MEMO_NO ) AS [SRNO],      
		    USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	        SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),
	        LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	        DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),
	        DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),
	        LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10)),
	        SM.SEASON_NAME ,
	        A.BUDGET_PLAN_NAME
	 FROM BUDGET_PLAN_MST  A  (NOLOCK) 
	 JOIN SEASON_MST SM (NOLOCK) ON SM.SEASON_ID=A.SEASON_ID
	 JOIN
	 (
	  SELECT MEMO_NO ,SUM(BUDGET_AMOUNT) AS BUDGET_AMOUNT
	  FROM BUDGET_PLAN_DET
	  GROUP BY MEMO_NO
	 ) B ON A.MEMO_NO=B.MEMO_NO      
	 LEFT OUTER JOIN  #TMPREMARKS XN ON XN.MEMO_ID =A.MEMO_NO  AND XN.XN_TYPE='BDGPL'        
	 WHERE a.location_code =@CCURDEPTID 
	 AND (@DSTARTINGFROM='' OR A.MEMO_DT  BETWEEN @DSTARTINGFROM AND @CTODT) 
	 AND ISNULL(A.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
	 AND A.CANCELLED=0
	 AND EXPIRY_DT>=@CGTODAY
	 ORDER BY A.MEMO_NO  
	 
		
    GOTO SSPL99
END 
ELSE IF(@CXNTYPE='BUYPL')  
 BEGIN   
		 ;WITH CTE AS
		(
		 SELECT  XN_TYPE,XN_ID,APPROVAL_REMARKS, 
				 SR=ROW_NUMBER() OVER ( PARTITION BY XN_ID ORDER BY LAST_UPDATE DESC)  
		 FROM  TRANSACTION_APPROVAL_DET 
		 WHERE XN_TYPE='BUYPL' 
		)
        INSERT INTO #TMPREMARKS (XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
		SELECT XN_TYPE,XN_ID,APPROVAL_REMARKS 
		FROM CTE WHERE SR=1  
	
		
		--PENDING FOR HIGHER LEVEL
		
	 SELECT 'BUYPL' AS XN_TYPE,A.MEMO_NO AS XN_ID,
	        0 AS APPROVAL_STATUS,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
		    GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,
		    A.MEMO_NO AS [XN_NO],A.MEMO_DT  AS [XN_DT], 
		    '' AS [ADDRESS],   
		    CONVERT(BIT ,0) AS [APPROVED],UNAPPROVED  =CAST(0 AS BIT),
		    ROW_NUMBER() OVER (ORDER BY  A.MEMO_NO ) AS [SRNO],      
		    USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	        SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),
	        LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	        DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),
	        DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),
	        LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10)),
	        A.BUY_PLAN_NAME AS BUDGET_PLAN_NAME
	 FROM BUY_PLAN_MST  A  (NOLOCK) 
	 JOIN
	 (
	  SELECT MEMO_NO ,SUM(PURCHASE_PRICE*QUANTITY) AS AMOUNT
	  FROM BUY_PLAN_DET
	  GROUP BY MEMO_NO
	 ) B ON A.MEMO_NO=B.MEMO_NO      
	 LEFT OUTER JOIN  #TMPREMARKS XN ON XN.MEMO_ID =A.MEMO_NO  AND XN.XN_TYPE='BDGPL'        
	 WHERE A.location_code =@CCURDEPTID 
	 AND (@DSTARTINGFROM='' OR A.MEMO_DT  BETWEEN @DSTARTINGFROM AND @CTODT) 
	 AND ISNULL(A.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
	 AND A.CANCELLED=0
	 ORDER BY A.MEMO_NO  
		
	
    GOTO SSPL99
END 
ELSE IF(@CXNTYPE='PRT')  
BEGIN         
       
       ;WITH CTE AS
		(
		 SELECT  XN_TYPE='PRT',RM_ID,APPROVAL_REMARKS, 
				 SR=ROW_NUMBER() OVER ( PARTITION BY RM_ID ORDER BY LAST_UPDATE DESC)  
		 FROM  PRT_XN_APPROVAL 
		)
        
        INSERT INTO #TMPREMARKS (XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
		SELECT XN_TYPE,RM_ID,APPROVAL_REMARKS 
		FROM CTE WHERE SR=1  
		
		
		
		SELECT 'PRT' AS XN_TYPE,A.RM_ID AS XN_ID,0 AS APPROVAL_STATUS,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
		GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,A.RM_NO AS [XN_NO],A.RM_DT AS [XN_DT],
		C.AC_NAME ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + C.AREA_NAME +           
		' ' + C.CITY + ' ' + C.STATE AS [ADDRESS],        
		CONVERT(BIT ,0) AS [APPROVED],UNAPPROVED  =CAST(0 AS BIT),
		A.TOTAL_AMOUNT AS [AMOUNT],
		ROW_NUMBER() OVER (ORDER BY  A.RM_ID ) AS [SRNO],CONVERT(BIT,0) AS ISHIDDEN,       
		A.CANCELLED,(CASE WHEN A.DN_TYPE=2 THEN 'FINANCIAL' ELSE 'REGULAR' END) AS DEBITNOTETYPE,
		USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	    SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	    DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10)),
	    DIFFAMOUNT,
	    (CASE WHEN a.XN_ITEM_TYPE  = 4 THEN 'SERVICES' WHEN a.XN_ITEM_TYPE =3 THEN 'ASSETS' WHEN a.XN_ITEM_TYPE =2 THEN 'CONSUMABLE'  ELSE  'INVENTORY' END) AS XN_ITEM_TYPE
		,A.REMARKS
		FROM RMM01106 A  (NOLOCK)        
		JOIN LMV01106 C (NOLOCK) ON A.AC_CODE = C.AC_CODE 
		LEFT OUTER JOIN  #TMPREMARKS XN ON XN.MEMO_ID =A.RM_ID AND XN.XN_TYPE='PRT'        
		WHERE A.location_Code =@CCURDEPTID 
		AND (@DSTARTINGFROM='' OR A.RM_DT BETWEEN @DSTARTINGFROM AND @CTODT) 
		AND ISNULL(A.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
		AND A.CANCELLED=0
		ORDER BY A.RM_ID
		
  
   GOTO SSPL99
END
ELSE IF(@CXNTYPE='WSLORD')  
BEGIN         
       
       ;WITH CTE AS
		(
		 SELECT  XN_TYPE='WSLORD',RM_ID,APPROVAL_REMARKS, 
				 SR=ROW_NUMBER() OVER ( PARTITION BY RM_ID ORDER BY LAST_UPDATE DESC)  
		 FROM  PRT_XN_APPROVAL 
		)
        
        INSERT INTO #TMPREMARKS (XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
		SELECT XN_TYPE,RM_ID,APPROVAL_REMARKS 
		FROM CTE WHERE SR=1  
		
		
		
		SELECT 'WSLORD' AS XN_TYPE,A.ORDER_ID AS XN_ID,0 AS APPROVAL_STATUS,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
		GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,A.ORDER_NO AS [XN_NO],A.ORDER_DT AS [XN_DT],
		C.AC_NAME ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + C.AREA_NAME +           
		' ' + C.CITY + ' ' + C.STATE AS [ADDRESS],        
		CONVERT(BIT ,0) AS [APPROVED],UNAPPROVED  =CAST(0 AS BIT),
		A.TOTAL_AMOUNT AS [AMOUNT],
		ROW_NUMBER() OVER (ORDER BY  A.ORDER_ID ) AS [SRNO],CONVERT(BIT,0) AS ISHIDDEN,       
		A.CANCELLED,
		USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	    SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	    DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))
	    
		FROM BUYER_ORDER_MST A  (NOLOCK)        
		JOIN LMV01106 C (NOLOCK) ON A.AC_CODE = C.AC_CODE 
		LEFT OUTER JOIN  #TMPREMARKS XN ON XN.MEMO_ID =A.ORDER_ID AND XN.XN_TYPE='WSLORD'        
		WHERE (@DSTARTINGFROM='' OR A.ORDER_DT BETWEEN @DSTARTINGFROM AND @CTODT) 
		AND ISNULL(A.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
		AND A.CANCELLED=0 AND DELIVERY_DT>=CONVERT(VARCHAR(10),GETDATE(),121)
		and isnull(a.short_close,0)=0
		ORDER BY A.ORDER_ID
		
  
   GOTO SSPL99
END


ELSE IF(@CXNTYPE='EDS')  
BEGIN         
       
       ;WITH CTE AS
		(
		 SELECT  XN_TYPE='EDS',MEMO_ID,APPROVAL_REMARKS, 
				 SR=ROW_NUMBER() OVER ( PARTITION BY MEMO_ID ORDER BY LAST_UPDATE DESC)  
		 FROM  EDS_XN_APPROVAL 
		)
        
        INSERT INTO #TMPREMARKS (XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
		SELECT XN_TYPE,MEMO_ID,APPROVAL_REMARKS 
		FROM CTE WHERE SR=1  
		
		
		
		SELECT 'EDS' AS XN_TYPE,A.MEMO_ID AS XN_ID,0 AS APPROVAL_STATUS,
		ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
		GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,A.MEMO_NO AS [XN_NO],A.MEMO_DT AS [XN_DT],
		C.AC_NAME ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + C.AREA_NAME +           
		' ' + C.CITY + ' ' + C.STATE AS [ADDRESS],        
		CONVERT(BIT ,0) AS [APPROVED],UNAPPROVED  =CAST(0 AS BIT),
		A.VENDOR_AMOUNT AS [AMOUNT],
		ROW_NUMBER() OVER (ORDER BY  A.MEMO_ID ) AS [SRNO],CONVERT(BIT,0) AS ISHIDDEN,       
		A.CANCELLED,(CASE WHEN A.EOSS_TYPE=1 THEN 'AGAINST EOSS DISCOUNTS' ELSE 'AGAINST EOSS OPENING STOCK' END) AS EOSSTYPE,
		USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	    SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),
	    LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	    DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),
	    DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),
	    LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))
		FROM EOSSDNM A  (NOLOCK)        
		JOIN LMV01106 C (NOLOCK) ON A.AC_CODE = C.AC_CODE 
		LEFT OUTER JOIN  #TMPREMARKS XN ON XN.MEMO_ID =A.MEMO_ID AND XN.XN_TYPE='EDS'        
		WHERE A.location_code =@CCURDEPTID 
		AND (@DSTARTINGFROM='' OR A.MEMO_DT BETWEEN @DSTARTINGFROM AND @CTODT) 
		AND ISNULL(A.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
		AND A.CANCELLED=0
		ORDER BY A.MEMO_ID
		
  
   GOTO SSPL99
END

ELSE IF(@CXNTYPE='PTC')  
  BEGIN         
      
        ;WITH CTE AS
		(
		 SELECT  XN_TYPE='PTC',PED_ROW_ID,APPROVAL_REMARKS, 
				 SR=ROW_NUMBER() OVER ( PARTITION BY PED_ROW_ID ORDER BY LAST_UPDATE DESC)  
		 FROM  PED_XN_APPROVAL 
		)
        
        INSERT INTO #TMPREMARKS (XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
		SELECT XN_TYPE,PED_ROW_ID,APPROVAL_REMARKS 
		FROM CTE WHERE SR=1  
		
	  SELECT 'PTC' AS XN_TYPE,A.PEM_MEMO_ID AS XN_ID,A.ROW_ID AS PED_ROW_ID,0 AS APPROVAL_STATUS,ISNULL(Y.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
	  GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,A1.PEM_MEMO_NO AS [XN_NO],A1.PEM_MEMO_DT AS [XN_DT],
	  C.AC_NAME ,ISNULL(C.ADDRESS0,'')+' '+ ISNULL(C.ADDRESS1,'') + ' ' + ISNULL(C.ADDRESS2,'') + ', ' + ISNULL(C.AREA_NAME,'') +           
	  ' ' + ISNULL(C.CITY,'') + ' ' + ISNULL(C.STATE,'') AS [ADDRESS],        
	  CONVERT(BIT ,0) AS [APPROVED],UNAPPROVED  =CAST(0 AS BIT), 
	  A.XN_AMOUNT AS [AMOUNT], 
	  ROW_NUMBER() OVER (ORDER BY  A.PEM_MEMO_ID,A.ROW_ID ) AS [SRNO],A.PEM_MEMO_ID,CONVERT(BIT,0) AS HIDDENFROMAPPROVAL,CONVERT(BIT,0) AS ISHIDDEN
	  ,A1.CANCELLED,A.REF_NO,A.NARRATION,
	  USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	  DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))
	  FROM PED01106 A  (NOLOCK)        
      JOIN PEM01106 A1  (NOLOCK) ON A1.PEM_MEMO_ID=A.PEM_MEMO_ID
     -- LEFT OUTER JOIN PTCBILLS (NOLOCK) ON PTCBILLS.PED_ROW_ID=A.ROW_ID
      JOIN LMV01106 C (NOLOCK) ON A.AC_CODE = C.AC_CODE                 
      LEFT  JOIN #TMPREMARKS Y  ON Y.MEMO_ID=A.ROW_ID              
      WHERE A1.location_Code =@CCURDEPTID 
      AND (@DSTARTINGFROM='' OR A1.PEM_MEMO_DT BETWEEN @DSTARTINGFROM AND @CTODT )
      AND ISNULL(A.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1     
      AND A1.CANCELLED=0
      ORDER BY  A.PEM_MEMO_ID,A.ROW_ID
      
   GOTO SSPL99
 END
 
 ELSE IF(@CXNTYPE='VCH')  
 BEGIN        
 
      ;WITH CTE AS
	  (
	    SELECT 'VCH' AS XN_TYPE,VM_ID,APPROVAL_REMARKS,
	    SR=ROW_NUMBER () OVER (PARTITION BY VM_ID ORDER BY LAST_UPDATE DESC)
	    FROM VM_XN_APPROVAL (NOLOCK)
	  )
	  
	  INSERT INTO #TMPREMARKS(XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
	  SELECT XN_TYPE,VM_ID,APPROVAL_REMARKS
	  FROM CTE WHERE SR=1
	   
	   
	   
	  SELECT 'VCH' AS [XN_TYPE],A.VM_ID AS XN_ID ,0 AS APPROVAL_STATUS,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
	  GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,A.VOUCHER_NO AS [XN_NO],A.VOUCHER_DT AS [XN_DT],
	  C.DEPT_NAME , C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + D.AREA_NAME +           
	  ' ' + E.CITY + ' ' + F.STATE AS [ADDRESS],A.DRTOTAL AS [AMOUNT],    
	  ROW_NUMBER() OVER (ORDER BY  A.VM_ID ) AS [SRNO],B.VOUCHER_TYPE ,A.REF_NO,CONVERT(BIT,0) AS ISHIDDEN     
	  ,A.CANCELLED,
	  USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	  DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))
	  FROM VM01106 A  (NOLOCK)  
	  JOIN VCHTYPE B (NOLOCK) ON A.VOUCHER_CODE=B.VOUCHER_CODE     
	  JOIN LOCATION C (NOLOCK) ON A.DEPT_ID = C.DEPT_ID      
	  JOIN AREA D (NOLOCK) ON D.AREA_CODE = C.AREA_CODE  
	  JOIN CITY E (NOLOCK) ON E.CITY_CODE = D.CITY_CODE  
	  JOIN STATE F (NOLOCK) ON F.STATE_CODE = E.STATE_CODE 
	  LEFT OUTER JOIN #TMPREMARKS XN ON XN.MEMO_ID=A.VM_ID 
	  LEFT OUTER JOIN POSTACT_VOUCHER_LINK VL (NOLOCK) ON A.VM_ID=VL.VM_ID   
	  WHERE 
	  --LEFT(A.VM_ID,2)=@CCURDEPTID AND
	   (@BCONSIDERAUTOPOSTEDVOUCHER=1 OR A.BILL_TYPE='')
	  AND (@DSTARTINGFROM='' OR A.VOUCHER_DT BETWEEN @DSTARTINGFROM AND @CTODT) 
	  AND  VL.VM_ID IS NULL
	  AND A.CANCELLED=0
	  AND ISNULL(A.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
	  ORDER BY A.VM_ID
	  
	  GOTO SSPL99
END	  

ELSE IF @CXNTYPE='SLSCRI'
BEGIN
	IF @NLEVEL=1
	BEGIN
	
	;WITH CTE AS
	  (
	    SELECT 'SLSCRI' AS XN_TYPE,CM_ID,APPROVAL_REMARKS,
	    SR=ROW_NUMBER () OVER (PARTITION BY CM_ID ORDER BY LAST_UPDATE DESC)
	    FROM SLSCRI_XN_APPROVAL
	  )
	  
	  INSERT INTO #TMPREMARKS(XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
	  SELECT XN_TYPE,CM_ID,APPROVAL_REMARKS
	  FROM CTE WHERE SR=1 
	  
	SELECT 'SLSCRI' AS [XN_TYPE],A.CM_ID AS [XN_ID],0 AS APPROVAL_STATUS
	  ,ISNULL(APPROVAL_REMARKS,'')  AS APPROVAL_REMARKS,
	  GETDATE() AS [LAST_UPDATE],'LATER' AS ROW_ID,A.CM_NO AS [XN_NO],A.CM_DT AS [XN_DT],
	  (C.CUSTOMER_FNAME+' '+C.CUSTOMER_LNAME) AS AC_NAME
	  ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + AR.AREA_NAME +           
	  ' ' + CT.CITY + ' ' + ST.STATE AS [ADDRESS],        
	  A.SUBTOTAL AS [AMOUNT] ,ROW_NUMBER() OVER (ORDER BY  A.CM_ID ) AS [SRNO],CONVERT(BIT,0) AS ISHIDDEN      
	  ,A.CANCELLED,
	  USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	  DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))
	  FROM DBO.CMM01106 A  (NOLOCK) 
	  LEFT JOIN DBO.CREDITBILLS CB(NOLOCK) ON A.CM_ID=CB.CM_ID      
	  JOIN DBO.VW_BILL_PAYMODE VBP (NOLOCK) ON A.CM_ID = VBP.MEMO_ID  AND VBP.XN_TYPE='SLS'
	  JOIN DBO.CUSTDYM C (NOLOCK) ON A.CUSTOMER_CODE = C.CUSTOMER_CODE  
	  LEFT JOIN DBO.AREA AR(NOLOCK) ON AR.AREA_CODE=C.AREA_CODE
	  LEFT JOIN DBO.CITY CT(NOLOCK) ON AR.CITY_CODE=CT.CITY_CODE
	  LEFT JOIN DBO.STATE ST(NOLOCK) ON ST.STATE_CODE=CT.STATE_CODE
	  LEFT OUTER JOIN #TMPREMARKS XN ON XN.MEMO_ID=A.CM_ID 
	  WHERE A.location_Code =@CCURDEPTID 
	  AND (@DSTARTINGFROM='' OR A.CM_DT BETWEEN @DSTARTINGFROM AND @CTODT )
	  AND VBP.CREDIT_AMOUNT>0 
	  AND ISNULL(CB.APPROVEDLEVELNO	,0)=0 
	  AND A.CANCELLED=0
	  ORDER BY A.CM_ID 
	  
	  GOTO SSPL99
	END
    ELSE
    BEGIN
     ;WITH CTE AS
	  (
	    SELECT 'SLSCRI' AS XN_TYPE,CM_ID,APPROVAL_REMARKS,
	    SR=ROW_NUMBER () OVER (PARTITION BY CM_ID ORDER BY LAST_UPDATE DESC)
	    FROM SLSCRI_XN_APPROVAL
	  )
	  
	  INSERT INTO #TMPREMARKS(XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
	  SELECT XN_TYPE,CM_ID,APPROVAL_REMARKS
	  FROM CTE WHERE SR=1 
	 
	  SELECT 'SLSCRI' AS [XN_TYPE],A.CM_ID AS [XN_ID],0 AS APPROVAL_STATUS
	  ,ISNULL(APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
	  GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,A.CM_NO AS [XN_NO],A.CM_DT AS [XN_DT],
	  (C.CUSTOMER_FNAME+' '+C.CUSTOMER_LNAME) AS AC_NAME
	  ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + AR.AREA_NAME +           
	  ' ' + CT.CITY + ' ' + ST.STATE AS [ADDRESS],        
	  A.SUBTOTAL AS [AMOUNT] ,ROW_NUMBER() OVER (ORDER BY  A.CM_ID ) AS [SRNO],CONVERT(BIT,0) AS ISHIDDEN      
	  ,A.CANCELLED,
	  USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	  DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))
	  FROM DBO.CMM01106 A  (NOLOCK) 
	  JOIN DBO.CREDITBILLS CB(NOLOCK) ON A.CM_ID=CB.CM_ID      
	  JOIN DBO.VW_BILL_PAYMODE VBP (NOLOCK) ON A.CM_ID = VBP.MEMO_ID  AND VBP.XN_TYPE='SLS'
	  JOIN DBO.CUSTDYM C (NOLOCK) ON A.CUSTOMER_CODE = C.CUSTOMER_CODE  
	  LEFT JOIN DBO.AREA AR(NOLOCK) ON AR.AREA_CODE=C.AREA_CODE
	  LEFT JOIN DBO.CITY CT(NOLOCK) ON AR.CITY_CODE=CT.CITY_CODE
	  LEFT JOIN DBO.STATE ST(NOLOCK) ON ST.STATE_CODE=CT.STATE_CODE
	  LEFT OUTER JOIN #TMPREMARKS XN ON XN.MEMO_ID=A.CM_ID 
	  WHERE A.location_Code =@CCURDEPTID
	  AND (@DSTARTINGFROM='' OR A.CM_DT BETWEEN @DSTARTINGFROM AND @CTODT )
	  AND VBP.CREDIT_AMOUNT>0 
	  AND ISNULL(CB.APPROVEDLEVELNO,0)=@NLEVEL-1
	  AND A.CANCELLED=0
	  ORDER BY A.CM_ID 
	  
	  GOTO SSPL99
    END 
 END 
 
 ELSE 
 IF @CXNTYPE IN ('SLSEDT','EOSSDSLS')
 BEGIN 
 
	 DECLARE @CSP_ID VARCHAR(50)
	 set @CSP_ID=@@SPID 
	 DELETE A FROM SLS_XN_AUDIT_TRIAL_DET_UPLOAD A (NOLOCK) WHERE SP_ID =@CSP_ID

    ;WITH CTE AS
	(
	
	  SELECT ROW_NUMBER() OVER(PARTITION BY CMM.CM_ID,FIELD_NAME,ACMM .PRODUCT_CODE  ORDER BY ACMM.AUDITED_ON ASC) AS SNO,
	         CMM.CM_ID,ACMM.FIELD_NAME ,CONVERT(NUMERIC(10,2),ACMM.OLDVAL) AS OLDVAL ,ACMM .PRODUCT_CODE ,
			 0 AS CTRLS_USED 
	  FROM XN_AUDIT_TRIAL_DET ACMM
	  JOIN CMM01106 CMM (NOLOCK)  ON CMM.CM_ID=LEFT(ACMM.KEY_VALUE ,22)
	  LEFT JOIN EOSSDISABLEDSLS B ON CMM.CM_ID =B.CM_ID 
	  WHERE XN_TYPE ='SLS'
	  AND ACMM .FIELD_NAME IN('NET_AMOUNT','DISCOUNT_AMOUNT')
	  AND ( CMM.CM_DT BETWEEN @DSTARTINGFROM AND @CTODT )
	  AND ISNULL(B.APPROVEDLEVELNO,0) =@NLEVEL-1
	  AND CMM.location_Code =@cDeptID
	  )
	  INSERT INTO SLS_XN_AUDIT_TRIAL_DET_UPLOAD(SP_ID,XN_ID ,FIELD_NAME,OLDVAL,PRODUCT_CODE,ID)
	  SELECT @CSP_ID SP_ID, CM_ID ,FIELD_NAME,OLDVAL ,PRODUCT_CODE ,CTRLS_USED
	  FROM CTE 
	  WHERE SNO=1
	  UNION ALL
	  SELECT @CSP_ID sp_id,A.CM_ID, 'DISCOUNT_AMOUNT' AS FIELD_NAME,DISCOUNT_AMOUNT AS OLDVAL,A.PRODUCT_CODE ,CMM.CTRLS_USED
	  FROM CMD01106 A (NOLOCK)
	  JOIN CTE CMM ON A.CM_ID =CMM.CM_ID AND CMM.FIELD_NAME ='NET_AMOUNT'
	  LEFT JOIN CTE B ON A.CM_ID =B.CM_ID AND A.PRODUCT_CODE=B.PRODUCT_CODE
	  WHERE B.PRODUCT_CODE IS NULL and discount_amount >0
	  UNION ALL
	   SELECT @CSP_ID AS sp_id,
	         CMM.CM_ID,'' FIELD_NAME ,0 OLDVAL ,'' AS PRODUCT_CODE,
			 1 AS CTRLS_USED
	  FROM CMM01106 CMM (NOLOCK)
	  LEFT JOIN EOSSDISABLEDSLS B ON CMM.CM_ID =B.CM_ID 
	  LEFT JOIN CTE CT (NOLOCK) ON CMM.CM_ID =CT.CM_ID  
	  WHERE CMM.location_Code =@cDeptID 
	  AND (CMM.CM_DT BETWEEN @DSTARTINGFROM AND @CTODT )
	  AND ISNULL(B.APPROVEDLEVELNO,0) =@NLEVEL-1
	  AND (ISNULL(CMM.CTRLS_USED,0)=1 OR ISNULL(CMM.SALE_PERSON_MODIFIED,0)=1 OR ISNULL(CMM.PAYMENT_MODE_MODIFIED,0)=1)
	  AND CT.CM_ID IS NULL



	  ;WITH EOSSDATA AS (

		  SELECT CMM.ID, CMM.CM_ID AS CM_ID,NEW_QUANTITY AS ORG_QUANTITY
				,CMM.DISCOUNT_AMOUNT  AS ORG_DISCOUNT_AMOUNT
				,CMM.NET_AMOUNT AS ORG_NET_AMOUNT
				,CMD.NEW_QUANTITY,CMD.TOTAL_DISCOUNT_AMOUNT AS NEW_DISCOUNT_AMOUNT,CMD.NET_AMOUNT AS NEW_NET_AMOUNT
		 FROM
		 (
			SELECT XN_ID AS CM_ID ,A.ID,
				   SUM(CASE WHEN FIELD_NAME='DISCOUNT_AMOUNT'  THEN CAST(OLDVAL AS NUMERIC(10,2)) ELSE 0 END) AS DISCOUNT_AMOUNT,
				   SUM(CASE WHEN FIELD_NAME='NET_AMOUNT' AND FIELD_NAME<>'0.00' THEN CAST(OLDVAL AS NUMERIC(10,2)) ELSE 0 END) AS NET_AMOUNT
			FROM SLS_XN_AUDIT_TRIAL_DET_UPLOAD A (NOLOCK)
			WHERE SP_ID=@CSP_ID
			GROUP BY XN_ID,A.ID
		 ) CMM
		 JOIN 
		  (
			SELECT CMM.CM_ID,CMM.NET_AMOUNT,
				   SUM(CMD.QUANTITY) AS NEW_QUANTITY
				  ,SUM(CMD.DISCOUNT_AMOUNT+ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS TOTAL_DISCOUNT_AMOUNT
			FROM CMM01106 CMM (NOLOCK)
			JOIN CMD01106 CMD (NOLOCK) ON CMM.CM_ID=CMD.CM_ID
			WHERE CMM.CANCELLED=0
			GROUP BY CMM.CM_ID,CMM.NET_AMOUNT
		  )CMD ON CMM.CM_ID=CMD.CM_ID
		  WHERE (CMM.NET_AMOUNT<>CMD.NET_AMOUNT 
		  OR CMD.TOTAL_DISCOUNT_AMOUNT<>(ISNULL(CMM.DISCOUNT_AMOUNT,0)))
	  )
	   ,CTE_REMARKS AS    
		(    
			SELECT @CXNTYPE AS XN_TYPE,A.XN_ID ,APPROVAL_REMARKS,    
			SR=ROW_NUMBER () OVER (PARTITION BY A.XN_ID ORDER BY A.LAST_UPDATE DESC)    
			FROM TRANSACTION_APPROVAL_DET (NOLOCK) A    
			JOIN EOSSDISABLEDSLS B ON A.XN_ID =B.cm_id    
			WHERE  A.XN_TYPE IN ('SLSEDT','EOSSDSLS') AND B.APPROVEDLEVELNO =ISNULL(@NLEVEL,0)-1    
		)
	


	  SELECT (CASE WHEN ISNULL(A.CTRLS_USED,0)<>1 THEN 'SLSEDT' ELSE 'EOSSDSLS' END) AS [XN_TYPE],A.CM_ID  AS [XN_ID],0 AS APPROVAL_STATUS
	  ,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
	  GETDATE() AS [LAST_UPDATE],'LATER' AS ROW_ID,A.CM_NO AS [XN_NO],A.CM_DT AS [XN_DT],
	  (C.CUSTOMER_FNAME+' '+C.CUSTOMER_LNAME) AS AC_NAME
	  ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + AR.AREA_NAME +           
	  ' ' + CT.CITY + ' ' + ST.STATE AS [ADDRESS],        
	  A.SUBTOTAL AS [AMOUNT],ROW_NUMBER() OVER (ORDER BY  A.CM_ID ) AS [SRNO],CONVERT(BIT,0) AS ISHIDDEN,      
	  A.CANCELLED,
	  USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	  DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),
	  DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))	
	  ,A.TOTAL_QUANTITY AS ORG_QUANTITY,0 AS NEW_QUANTITY,0 AS NEW_DISCOUNT_AMOUNT,ORG_DISCOUNT_AMOUNT
	  ,A.NET_AMOUNT  AS ORG_NET_AMOUNT,0  AS NEW_NET_AMOUNT,''  AS  NEW_USERNAME,''  AS  NEW_COMPUTERNAME
	  ,A.LAST_UPDATE   AS  MODIFIEDON,CONVERT(BIT,0) AS ISHIDDEN   ,''  AS  DISCOUNTNAME,A.REMARKS,
	  CASE WHEN ISNULL(A.CTRLS_USED,0)=1 THEN 'CTRL+S' 
	       WHEN ISNULL(A.SALE_PERSON_MODIFIED,0)=1 THEN 'SALE PERSON MODIFIED'
	       WHEN ISNULL(A.PAYMENT_MODE_MODIFIED,0)=1 THEN 'PAYMENT MODE MODIFIED' 
	   ELSE 'AUDIT BILL' END  AS STATUS1
	  FROM DBO.CMM01106 A(NOLOCK)
	  JOIN EOSSDATA bsa (NOLOCK) ON bsa.cm_id=a.cm_id
	  JOIN DBO.CUSTDYM C(NOLOCK) ON A.CUSTOMER_CODE=C.CUSTOMER_CODE
	  LEFT JOIN DBO.AREA AR(NOLOCK) ON AR.AREA_CODE=C.AREA_CODE
	  LEFT JOIN DBO.CITY CT(NOLOCK) ON AR.CITY_CODE=CT.CITY_CODE
	  LEFT JOIN DBO.STATE ST(NOLOCK) ON ST.STATE_CODE=CT.STATE_CODE
	  LEFT OUTER JOIN CTE_REMARKS XN ON XN.XN_ID=A.CM_ID AND SR=1
	  ORDER BY XN_TYPE , a.CM_ID

	 DELETE FROM SLS_XN_AUDIT_TRIAL_DET_UPLOAD WHERE SP_ID =@CSP_ID
	 
	
	
	/*
	;WITH CTE AS    
	(    
		SELECT @CXNTYPE AS XN_TYPE,A.XN_ID AS CM_ID,APPROVAL_REMARKS,    
		SR=ROW_NUMBER () OVER (PARTITION BY A.XN_ID ORDER BY A.LAST_UPDATE DESC)    
		FROM TRANSACTION_APPROVAL_DET (NOLOCK) A    
		JOIN EOSSDISABLEDSLS B ON A.XN_ID =B.cm_id    
		WHERE  A.XN_TYPE IN ('SLSEDT','EOSSDSLS') AND B.APPROVEDLEVELNO =ISNULL(@NLEVEL,0)-1    
	)
	INSERT INTO #TMPREMARKS(XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
	SELECT XN_TYPE,CM_ID,APPROVAL_REMARKS
	FROM CTE WHERE SR=1 
	  

  IF OBJECT_ID('TEMPDB..#BILLAUDIT','U') IS NOT NULL
	 DROP TABLE #BILLAUDIT
  
	  SELECT ROW_NUMBER() OVER(PARTITION BY CMM.CM_ID,FIELD_NAME,ACMM .PRODUCT_CODE  ORDER BY ACMM.AUDITED_ON ASC) AS SNO,CMM.CM_ID,
	         ACMM.FIELD_NAME ,CONVERT(NUMERIC(10,2),ACMM.OLDVAL) AS OLDVAL ,ACMM .PRODUCT_CODE 
	  INTO #BILLAUDIT
	  FROM CMM01106 CMM (NOLOCK)
	  LEFT JOIN EOSSDISABLEDSLS B ON cmm.CM_ID =B.cm_id 
	  JOIN XN_AUDIT_TRIAL_DET ACMM (NOLOCK) ON CMM.CM_ID=LEFT(ACMM.KEY_VALUE ,22)
	  WHERE 1=2
	
	---Commented this as it is impacting tempdb (Date:26-11-2021)
	 -- ACMM.XN_TYPE ='SLS'
	 -- AND ACMM .FIELD_NAME IN('NET_AMOUNT','DISCOUNT_AMOUNT')
	 -- AND LEFT(CMM.CM_ID,2)=@CCURDEPTID 
	 -- AND (@DSTARTINGFROM='' OR CMM.CM_DT BETWEEN @DSTARTINGFROM AND @CTODT )
	 -- and isnull(B.APPROVEDLEVELNO,0) =ISNULL(@NLEVEL,0)-1
	  
	 ---- if @@spid=101
	 ---- begin
		----select @nLevel, @DSTARTINGFROM
		----select 'check audit',* from #BILLAUDIT
  ----    end

	  DELETE #BILLAUDIT WHERE SNO>1
	  	  
	 
	  INSERT INTO #BILLAUDIT (SNO ,CM_ID ,FIELD_NAME ,OLDVAL ,PRODUCT_CODE )
	  SELECT 1 AS SNO,A.CM_ID, 'DISCOUNT_AMOUNT' AS FIELD_NAME,DISCOUNT_AMOUNT AS OLDVAL,A.PRODUCT_CODE 
	  FROM CMD01106 A (NOLOCK)
	  JOIN 
	  ( 
		SELECT DISTINCT CM_ID FROM #BILLAUDIT
	  )TMP ON TMP.CM_ID =A.CM_ID 
	  LEFT JOIN #BILLAUDIT B ON A.CM_ID =B.CM_ID AND A.PRODUCT_CODE=B.PRODUCT_CODE
	  WHERE B.PRODUCT_CODE IS NULL
	 	 
	  IF OBJECT_ID('TEMPDB..#BILLAUDITDETAILS','U') IS NOT NULL
		 DROP TABLE #BILLAUDITDETAILS

		
	 SELECT CM_ID ,SUM(ISNULL([DISCOUNT_AMOUNT],0)) AS [DISCOUNT_AMOUNT],
	        SUM(ISNULL([NET_AMOUNT],0)) AS [NET_AMOUNT]
	 INTO #BILLAUDITDETAILS
	 FROM #BILLAUDIT 
	 PIVOT (SUM(OLDVAL) FOR FIELD_NAME IN ([DISCOUNT_AMOUNT],[NET_AMOUNT])) AS PTABLE
	 GROUP BY CM_ID
	 

	
	 
  IF OBJECT_ID('TEMPDB..#BILLFIRSTAUDIT','U') IS NOT NULL
	DROP TABLE #BILLFIRSTAUDIT
		
	 SELECT  CMM.CM_ID,NEW_QUANTITY AS ORG_QUANTITY
			,CMM.DISCOUNT_AMOUNT  AS ORG_DISCOUNT_AMOUNT
			,CMM.NET_AMOUNT AS ORG_NET_AMOUNT
			,CMD.NEW_QUANTITY,CMD.TOTAL_DISCOUNT_AMOUNT AS NEW_DISCOUNT_AMOUNT,CMD.NET_AMOUNT AS NEW_NET_AMOUNT
	 INTO #BILLFIRSTAUDIT
	 FROM #BILLAUDITDETAILS CMM
	  JOIN 
	  (
		SELECT CMM.CM_ID,CMM.NET_AMOUNT,
		       SUM(CMD.QUANTITY) AS NEW_QUANTITY
			  ,SUM(CMD.DISCOUNT_AMOUNT+ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS TOTAL_DISCOUNT_AMOUNT
		FROM CMM01106 CMM (NOLOCK)
		JOIN CMD01106 CMD (NOLOCK) ON CMM.CM_ID=CMD.CM_ID
		JOIN #BILLAUDITDETAILS bad ON bad.cm_id=cmm.cm_id
		WHERE CMM.CANCELLED=0
		GROUP BY CMM.CM_ID,CMM.NET_AMOUNT
	  )CMD ON CMM.CM_ID=CMD.CM_ID
	  WHERE (CMM.NET_AMOUNT<>CMD.NET_AMOUNT 
	  OR CMD.TOTAL_DISCOUNT_AMOUNT<>(ISNULL(CMM.DISCOUNT_AMOUNT,0)))
	 
	
	 
	IF OBJECT_ID('tempdb..#BILLSECONDAUDIT','U') IS NOT NULL
		DROP TABLE #BILLSECONDAUDIT
		
	SELECT DISTINCT A.CM_ID,A.NET_AMOUNT ,CAST(0 AS NUMERIC(10,2)) AS TOTAL_DISCOUNT_AMOUNT 
	INTO #BILLSECONDAUDIT 
	FROM CMM01106 A (NOLOCK)
	LEFT JOIN  #BILLFIRSTAUDIT b ON a.cm_id=b.cm_id
	WHERE A.CANCELLED =0
	AND LEFT(A.CM_ID,2)=@CCURDEPTID AND A.CM_DT  BETWEEN @DSTARTINGFROM AND @CTODT
	AND (ISNULL(A.CTRLS_USED,0)=1 OR ISNULL(A.SALE_PERSON_MODIFIED,0)=1 OR ISNULL(A.PAYMENT_MODE_MODIFIED,0)=1)
	AND B.cm_id IS NULL
	
	
	DELETE A FROM #BILLSECONDAUDIT A
	left outer join 
	(SELECT CM_ID ,APPROVEDLEVELNO
	   FROM DBO.EOSSDISABLEDSLS (NOLOCK)
	   GROUP BY CM_ID ,APPROVEDLEVELNO ) C ON c.cm_id=a.cm_id
	 WHERE  ISNULL(c.APPROVEDLEVELNO,0)<>ISNULL(@NLEVEL,0)-1
      
      
      UPDATE A SET TOTAL_DISCOUNT_AMOUNT=B.TOTAL_DISCOUNT_AMOUNT FROM #BILLSECONDAUDIT A
      JOIN
      (
        SELECT CM_ID ,
        SUM(CMD.DISCOUNT_AMOUNT+ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS TOTAL_DISCOUNT_AMOUNT
        FROM CMD01106 CMD (NOLOCK)
        GROUP BY CM_ID
      ) B ON A.cm_id =B.cm_id 
    
   
	
	
	/*
	
	IF OBJECT_ID('tempdb..#BILLSECONDAUDIT','U') IS NOT NULL
		DROP TABLE #BILLSECONDAUDIT
	
	SELECT a.cm_id INTO #BILLSECONDAUDIT FROM cmm01106 A (NOLOCK)
	LEFT OUTER JOIN #BILLFIRSTAUDIT b ON a.cm_id=b.cm_id
	left outer join 
	(SELECT CM_ID ,APPROVEDLEVELNO
	   FROM DBO.EOSSDISABLEDSLS (NOLOCK)
	   GROUP BY CM_ID ,APPROVEDLEVELNO ) C ON c.cm_id=a.cm_id
	WHERE LEFT(A.CM_ID,2)=@CCURDEPTID AND A.CM_DT  BETWEEN @DSTARTINGFROM AND @CTODT
	AND  ISNULL(c.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
    AND (ISNULL(A.CTRLS_USED,0)=1 OR ISNULL(A.SALE_PERSON_MODIFIED,0)=1 OR ISNULL(A.PAYMENT_MODE_MODIFIED,0)=1)
	AND A.CANCELLED=0 AND b.cm_id IS NULL
	*/
	  
	  SELECT 'SLSEDT' AS [XN_TYPE],A.CM_ID  AS [XN_ID],0 AS APPROVAL_STATUS
	  ,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
	  GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,A.CM_NO AS [XN_NO],A.CM_DT AS [XN_DT],
	  (C.CUSTOMER_FNAME+' '+C.CUSTOMER_LNAME) AS AC_NAME
	  ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + AR.AREA_NAME +           
	  ' ' + CT.CITY + ' ' + ST.STATE AS [ADDRESS],      
	  A.SUBTOTAL AS [AMOUNT],
	  ROW_NUMBER() OVER (ORDER BY  A.CM_ID ) AS [SRNO],CONVERT(BIT,0) AS ISHIDDEN,
	  A.CANCELLED,
	  USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	  DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))	
	  ,MB.ORG_QUANTITY,MB.NEW_QUANTITY,MB.NEW_DISCOUNT_AMOUNT,MB.ORG_DISCOUNT_AMOUNT
	  ,MB.ORG_NET_AMOUNT,MB.NEW_NET_AMOUNT
	  ,USERS.USERNAME AS NEW_USERNAME
	  ,'' AS NEW_COMPUTERNAME
	  ,A.LAST_UPDATE AS MODIFIEDON
	  ,CONVERT(BIT,0) AS ISHIDDEN     
	  ,DTM.DT_NAME AS DISCOUNTNAME
	  ,A.REMARKS,
	  'AUDIT BILL' AS STATUS1
	  FROM #BILLFIRSTAUDIT MB  (NOLOCK)  
	  LEFT OUTER JOIN 
	  (
	   SELECT CM_ID ,APPROVEDLEVELNO
	   FROM DBO.EOSSDISABLEDSLS (NOLOCK) 
	   GROUP BY CM_ID ,APPROVEDLEVELNO
	   ) B ON MB.CM_ID=B.CM_ID
	  JOIN CMM01106 A (NOLOCK) ON A.CM_ID = MB.CM_ID
	  LEFT JOIN DTM (NOLOCK) ON A.DT_CODE=DTM.DT_CODE
	  JOIN USERS (NOLOCK) ON A.USER_CODE=USERS.USER_CODE     
	  JOIN CUSTDYM C (NOLOCK) ON A.CUSTOMER_CODE = C.CUSTOMER_CODE
	  LEFT JOIN AREA AR(NOLOCK) ON AR.AREA_CODE=C.AREA_CODE
	  LEFT JOIN CITY CT(NOLOCK) ON AR.CITY_CODE=CT.CITY_CODE
	  LEFT JOIN STATE ST(NOLOCK) ON ST.STATE_CODE=CT.STATE_CODE
	  LEFT OUTER JOIN #TMPREMARKS XN ON XN.MEMO_ID=A.CM_ID       
	  WHERE ISNULL(B.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
	  AND A.CANCELLED=0 
	  AND @CXNTYPE IN ('SLSEDT')
	  UNION ALL
	  SELECT (CASE WHEN ISNULL(A.CTRLS_USED,0)<>1 THEN 'SLSEDT' ELSE 'EOSSDSLS' END) AS [XN_TYPE],A.CM_ID  AS [XN_ID],0 AS APPROVAL_STATUS
	  ,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
	  GETDATE() AS [LAST_UPDATE],'LATER' AS ROW_ID,A.CM_NO AS [XN_NO],A.CM_DT AS [XN_DT],
	  (C.CUSTOMER_FNAME+' '+C.CUSTOMER_LNAME) AS AC_NAME
	  ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + AR.AREA_NAME +           
	  ' ' + CT.CITY + ' ' + ST.STATE AS [ADDRESS],        
	  A.SUBTOTAL AS [AMOUNT],ROW_NUMBER() OVER (ORDER BY  A.CM_ID ) AS [SRNO],CONVERT(BIT,0) AS ISHIDDEN,      
	  A.CANCELLED,
	  USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	  DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),
	  DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))	
	  ,A.TOTAL_QUANTITY AS ORG_QUANTITY
	  ,0 AS NEW_QUANTITY
	  ,0 AS NEW_DISCOUNT_AMOUNT
	  ,TOTAL_DISCOUNT_AMOUNT  AS ORG_DISCOUNT_AMOUNT
	  ,A.NET_AMOUNT  AS ORG_NET_AMOUNT
	  ,0  AS NEW_NET_AMOUNT
	  ,''  AS  NEW_USERNAME
	  ,''  AS  NEW_COMPUTERNAME
	  ,A.LAST_UPDATE   AS  MODIFIEDON
	  ,CONVERT(BIT,0) AS ISHIDDEN     
	  ,''  AS  DISCOUNTNAME
	  ,A.REMARKS,
	  CASE WHEN ISNULL(A.CTRLS_USED,0)=1 THEN 'CTRL+S' 
	       WHEN ISNULL(A.SALE_PERSON_MODIFIED,0)=1 THEN 'SALE PERSON MODIFIED'
	       WHEN ISNULL(A.PAYMENT_MODE_MODIFIED,0)=1 THEN 'PAYMENT MODE MODIFIED' 
	   ELSE '' END  AS STATUS1
	  FROM DBO.CMM01106 A(NOLOCK)
	  JOIN #BILLSECONDAUDIT bsa (NOLOCK) ON bsa.cm_id=a.cm_id
	  JOIN DBO.CUSTDYM C(NOLOCK) ON A.CUSTOMER_CODE=C.CUSTOMER_CODE
	  LEFT JOIN DBO.AREA AR(NOLOCK) ON AR.AREA_CODE=C.AREA_CODE
	  LEFT JOIN DBO.CITY CT(NOLOCK) ON AR.CITY_CODE=CT.CITY_CODE
	  LEFT JOIN DBO.STATE ST(NOLOCK) ON ST.STATE_CODE=CT.STATE_CODE
	  LEFT OUTER JOIN #TMPREMARKS XN ON XN.MEMO_ID=A.CM_ID
	  --WHERE (@CXNTYPE = 'SLSEDT' AND ISNULL(A.CTRLS_USED,0)<>1 )
	  --OR (@CXNTYPE = 'EOSSDSLS' AND ISNULL(A.CTRLS_USED,0)=1 )
	  ORDER BY XN_TYPE , a.CM_ID
	
	--;WITH CTE AS
	--  (
	--    SELECT @CXNTYPE AS XN_TYPE,CM_ID,APPROVAL_REMARKS,
	--    SR=ROW_NUMBER () OVER (PARTITION BY CM_ID ORDER BY LAST_UPDATE DESC)
	--    FROM EOSSDSLS_XN_APPROVAL
	--  )
	  
	--  INSERT INTO #TMPREMARKS(XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
	--  SELECT XN_TYPE,CM_ID,APPROVAL_REMARKS
	--  FROM CTE WHERE SR=1 
	  
	  
	  
	  	  
 -- IF OBJECT_ID('TEMPDB..#BILLAUDIT','U') IS NOT NULL
	--DROP TABLE #BILLAUDIT
  
	--  SELECT ROW_NUMBER() OVER(PARTITION BY CMM.CM_ID,FIELD_NAME,ACMM .PRODUCT_CODE  ORDER BY ACMM.AUDITED_ON ASC) AS SNO,CMM.CM_ID,
	--         ACMM.FIELD_NAME ,CONVERT(NUMERIC(10,2),ACMM.OLDVAL) AS OLDVAL ,ACMM .PRODUCT_CODE 
	--  INTO #BILLAUDIT
	--  FROM CMM01106 CMM
	--  JOIN XN_AUDIT_TRIAL_DET ACMM ON CMM.CM_ID=LEFT(ACMM.KEY_VALUE ,22)
	--  WHERE ACMM.XN_TYPE ='SLS'
	--  AND ACMM .FIELD_NAME IN('NET_AMOUNT','DISCOUNT_AMOUNT')
	--  AND LEFT(CMM.CM_ID,2)=@CCURDEPTID 
	--  AND (@DSTARTINGFROM='' OR CMM.CM_DT BETWEEN @DSTARTINGFROM AND @CTODT )
	 
	--  DELETE #BILLAUDIT WHERE SNO>1

	  
	--  INSERT INTO #BILLAUDIT (SNO ,CM_ID ,FIELD_NAME ,OLDVAL ,PRODUCT_CODE )
	--  SELECT 1 AS SNO,A.CM_ID, 'DISCOUNT_AMOUNT' AS FIELD_NAME,DISCOUNT_AMOUNT AS OLDVAL,A.PRODUCT_CODE 
	--  FROM CMD01106 A 
	--  JOIN 
	--  ( 
	--  SELECT DISTINCT CM_ID FROM #BILLAUDIT
	--  )TMP ON TMP.CM_ID =A.CM_ID 
	--  LEFT JOIN #BILLAUDIT B ON A.CM_ID =B.CM_ID AND A.PRODUCT_CODE=B.PRODUCT_CODE
	--  WHERE B.PRODUCT_CODE IS NULL
	 
	 
	--  IF OBJECT_ID('TEMPDB..#BILLAUDITDETAILS','U') IS NOT NULL
	--	 DROP TABLE #BILLAUDITDETAILS

		
	-- SELECT CM_ID ,SUM(ISNULL([DISCOUNT_AMOUNT],0)) AS [DISCOUNT_AMOUNT],
	--        SUM(ISNULL([NET_AMOUNT],0)) AS [NET_AMOUNT]
	-- INTO #BILLAUDITDETAILS
	-- FROM #BILLAUDIT 
	-- PIVOT (SUM(OLDVAL) FOR FIELD_NAME IN ([DISCOUNT_AMOUNT],[NET_AMOUNT])) AS PTABLE
	-- GROUP BY CM_ID
	 

	 
 -- IF OBJECT_ID('TEMPDB..#BILLFIRSTAUDIT','U') IS NOT NULL
	--DROP TABLE #BILLFIRSTAUDIT
		
	-- SELECT  CMM.CM_ID,NEW_QUANTITY AS ORG_QUANTITY
	--		,CMM.DISCOUNT_AMOUNT  AS ORG_DISCOUNT_AMOUNT
	--		,CMM.NET_AMOUNT AS ORG_NET_AMOUNT
	--		,CMD.NEW_QUANTITY,CMD.TOTAL_DISCOUNT_AMOUNT AS NEW_DISCOUNT_AMOUNT,CMD.NET_AMOUNT AS NEW_NET_AMOUNT
	-- INTO #BILLFIRSTAUDIT
	-- FROM #BILLAUDITDETAILS CMM
	--  JOIN 
	--  (
	--	SELECT CMM.CM_ID,CMM.NET_AMOUNT,
	--	       SUM(CMD.QUANTITY) AS NEW_QUANTITY
	--		  ,SUM(CMD.DISCOUNT_AMOUNT+ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS TOTAL_DISCOUNT_AMOUNT
	--	FROM CMM01106 CMM
	--	JOIN CMD01106 CMD ON CMM.CM_ID=CMD.CM_ID
	--	JOIN #BILLAUDITDETAILS bad ON bad.cm_id=cmm.cm_id
	--	WHERE CMM.CANCELLED=0
	--	GROUP BY CMM.CM_ID,CMM.NET_AMOUNT
	--  )CMD ON CMM.CM_ID=CMD.CM_ID
	--  WHERE (CMM.NET_AMOUNT<>CMD.NET_AMOUNT 
	--  OR CMD.TOTAL_DISCOUNT_AMOUNT<>(ISNULL(CMM.DISCOUNT_AMOUNT,0)))
	
	--IF OBJECT_ID('tempdb..#BILLSECONDAUDIT','U') IS NOT NULL
	--	DROP TABLE #BILLSECONDAUDIT
	
	--SELECT a.cm_id INTO #BILLSECONDAUDIT FROM cmm01106 A (NOLOCK)
	--LEFT OUTER JOIN #BILLFIRSTAUDIT b ON a.cm_id=b.cm_id
	--left outer join 
	--(SELECT CM_ID ,APPROVEDLEVELNO
	--   FROM DBO.EOSSDISABLEDSLS (NOLOCK)
	--   GROUP BY CM_ID ,APPROVEDLEVELNO ) C ON c.cm_id=a.cm_id
	--WHERE LEFT(A.CM_ID,2)=@CCURDEPTID AND A.CM_DT  BETWEEN @DSTARTINGFROM AND @CTODT
	--AND  ISNULL(c.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
 --   AND (ISNULL(A.CTRLS_USED,0)=1 OR ISNULL(A.SALE_PERSON_MODIFIED,0)=1 OR ISNULL(A.PAYMENT_MODE_MODIFIED,0)=1)
	--AND A.CANCELLED=0 AND b.cm_id IS NULL
	
	  
	--  SELECT 'SLSEDT' AS [XN_TYPE],A.CM_ID  AS [XN_ID],0 AS APPROVAL_STATUS
	--  ,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
	--  GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,A.CM_NO AS [XN_NO],A.CM_DT AS [XN_DT],
	--  (C.CUSTOMER_FNAME+' '+C.CUSTOMER_LNAME) AS AC_NAME
	--  ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + AR.AREA_NAME +           
	--  ' ' + CT.CITY + ' ' + ST.STATE AS [ADDRESS],      
	--  A.SUBTOTAL AS [AMOUNT],
	--  ROW_NUMBER() OVER (ORDER BY  A.CM_ID ) AS [SRNO],CONVERT(BIT,0) AS ISHIDDEN,
	--  A.CANCELLED,
	--  USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	--  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	--  DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))	
	--  ,MB.ORG_QUANTITY,MB.NEW_QUANTITY,MB.NEW_DISCOUNT_AMOUNT,MB.ORG_DISCOUNT_AMOUNT
	--  ,MB.ORG_NET_AMOUNT,MB.NEW_NET_AMOUNT
	--  ,USERS.USERNAME AS NEW_USERNAME
	--  ,'' AS NEW_COMPUTERNAME
	--  ,A.LAST_UPDATE AS MODIFIEDON
	--  ,CONVERT(BIT,0) AS ISHIDDEN     
	--  ,DTM.DT_NAME AS DISCOUNTNAME
	--  ,A.REMARKS,
	--  'AUDIT BILL' AS STATUS1
	--  FROM #BILLFIRSTAUDIT MB  (NOLOCK)  
	--  LEFT OUTER JOIN 
	--  (
	--   SELECT CM_ID ,APPROVEDLEVELNO
	--   FROM DBO.EOSSDISABLEDSLS (NOLOCK) 
	--   GROUP BY CM_ID ,APPROVEDLEVELNO
	--   ) B ON MB.CM_ID=B.CM_ID
	--  JOIN CMM01106 A (NOLOCK) ON A.CM_ID = MB.CM_ID
	--  LEFT JOIN DTM (NOLOCK) ON A.DT_CODE=DTM.DT_CODE
	--  JOIN USERS (NOLOCK) ON A.USER_CODE=USERS.USER_CODE     
	--  JOIN CUSTDYM C (NOLOCK) ON A.CUSTOMER_CODE = C.CUSTOMER_CODE
	--  LEFT JOIN AREA AR(NOLOCK) ON AR.AREA_CODE=C.AREA_CODE
	--  LEFT JOIN CITY CT(NOLOCK) ON AR.CITY_CODE=CT.CITY_CODE
	--  LEFT JOIN STATE ST(NOLOCK) ON ST.STATE_CODE=CT.STATE_CODE
	--  LEFT OUTER JOIN #TMPREMARKS XN ON XN.MEMO_ID=A.CM_ID       
	--  WHERE ISNULL(B.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
	--  AND A.CANCELLED=0 
	  
	--  UNION ALL
	--  SELECT 'EOSSDSLS' AS [XN_TYPE],A.CM_ID  AS [XN_ID],0 AS APPROVAL_STATUS
	--  ,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
	--  GETDATE() AS [LAST_UPDATE],'LATER' AS ROW_ID,A.CM_NO AS [XN_NO],A.CM_DT AS [XN_DT],
	--  (C.CUSTOMER_FNAME+' '+C.CUSTOMER_LNAME) AS AC_NAME
	--  ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + AR.AREA_NAME +           
	--  ' ' + CT.CITY + ' ' + ST.STATE AS [ADDRESS],        
	--  A.SUBTOTAL AS [AMOUNT],ROW_NUMBER() OVER (ORDER BY  A.CM_ID ) AS [SRNO],CONVERT(BIT,0) AS ISHIDDEN,      
	--  A.CANCELLED,
	--  USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	--  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	--  DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))	
	--  ,ORG_QUANTITY AS ORG_QUANTITY
	--  ,0 AS NEW_QUANTITY
	--  ,0 AS NEW_DISCOUNT_AMOUNT
	--  ,TOTAL_DISCOUNT_AMOUNT  AS ORG_DISCOUNT_AMOUNT
	--  ,A.NET_AMOUNT  AS ORG_NET_AMOUNT
	--  ,0  AS NEW_NET_AMOUNT
	--  ,''  AS  NEW_USERNAME
	--  ,''  AS  NEW_COMPUTERNAME
	--  ,A.LAST_UPDATE   AS  MODIFIEDON
	--  ,CONVERT(BIT,0) AS ISHIDDEN     
	--  ,''  AS  DISCOUNTNAME
	--  ,A.REMARKS,
	--  CASE WHEN ISNULL(A.CTRLS_USED,0)=1 THEN 'CTRL+S' 
	--       WHEN ISNULL(A.SALE_PERSON_MODIFIED,0)=1 THEN 'SALE PERSON MODIFIED'
	--       WHEN ISNULL(A.PAYMENT_MODE_MODIFIED,0)=1 THEN 'PAYMENT MODE MODIFIED' 
	--   ELSE '' END  AS STATUS1
	--  FROM DBO.CMM01106 A(NOLOCK)
	--  JOIN #BILLSECONDAUDIT bsa (NOLOCK) ON bsa.cm_id=a.cm_id
	--  JOIN 
	--  (
	--	SELECT CMM.CM_ID,SUM(CMD.QUANTITY) AS ORG_QUANTITY
	--		  ,SUM(CMD.DISCOUNT_AMOUNT+ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS TOTAL_DISCOUNT_AMOUNT
	--	FROM CMM01106 CMM
	--	JOIN CMD01106 CMD ON CMM.CM_ID=CMD.CM_ID
	--	JOIN #BILLSECONDAUDIT bsa (NOLOCK) ON bsa.cm_id=cmm.cm_id
	--	WHERE LEFT(CMM.CM_ID,2)=@CCURDEPTID AND
	--	CMM.CANCELLED=0 AND CMM.CM_DT  BETWEEN @DSTARTINGFROM AND @CTODT
	--	GROUP BY CMM.CM_ID
	--  )CMD ON A.CM_ID=CMD.CM_ID
	--   LEFT OUTER JOIN 
	--  (
	--   SELECT CM_ID ,APPROVEDLEVELNO
	--   FROM DBO.EOSSDISABLEDSLS (NOLOCK)
	--   GROUP BY CM_ID ,APPROVEDLEVELNO
	--   ) B  ON A.CM_ID=B.CM_ID
	  
	--  JOIN DBO.CUSTDYM C(NOLOCK) ON A.CUSTOMER_CODE=C.CUSTOMER_CODE
	--  LEFT JOIN DBO.AREA AR(NOLOCK) ON AR.AREA_CODE=C.AREA_CODE
	--  LEFT JOIN DBO.CITY CT(NOLOCK) ON AR.CITY_CODE=CT.CITY_CODE
	--  LEFT JOIN DBO.STATE ST(NOLOCK) ON ST.STATE_CODE=CT.STATE_CODE
	--  LEFT OUTER JOIN #TMPREMARKS XN ON XN.MEMO_ID=A.CM_ID
	  
	--  ORDER BY XN_TYPE , a.CM_ID

	*/
	  GOTO SSPL99
	  
	  
	  
	  
	  
	  
	  
	 
  END

 
ELSE IF @CXNTYPE='CRDISS'
BEGIN 
      ;WITH CTE AS
	  (
	    SELECT 'CRDISS' AS XN_TYPE,ADV_REC_ID,APPROVAL_REMARKS,
	    SR=ROW_NUMBER () OVER (PARTITION BY ADV_REC_ID ORDER BY LAST_UPDATE DESC)
	    FROM ARC_XN_APPROVAL
	  )
	  
	  INSERT INTO #TMPREMARKS(XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
	  SELECT XN_TYPE,ADV_REC_ID,APPROVAL_REMARKS
	  FROM CTE WHERE SR=1 
	  
	  SELECT 'CRDISS' AS [XN_TYPE],A.ADV_REC_ID AS XN_ID,0 AS APPROVAL_STATUS,
	  ISNULL(Y.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
	  GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,A.ADV_REC_NO AS [XN_NO],
	  A.ADV_REC_DT AS [XN_DT],
	  (C.CUSTOMER_FNAME+' '+C.CUSTOMER_LNAME) AS AC_NAME
	  ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + AR.AREA_NAME +           
	  ' ' + CT.CITY + ' ' + ST.STATE AS [ADDRESS],         
	  A.AMOUNT AS [AMOUNT],A.DISCOUNT_PERCENTAGE,A.DISCOUNT_AMOUNT,A.NET_AMOUNT,
	  ROW_NUMBER() OVER (ORDER BY  A.ADV_REC_ID ) AS [SRNO],CONVERT(BIT,0) AS ISHIDDEN,
	  0 AS DISAPPROVAL_STATUS,ISNULL(@NLEVEL,0) AS LEVEL_NO,ISNULL(@NLEVEL,0) AS LEVEL_NO_ORG     
	  ,A.CANCELLED,
	  USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	  DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))	
	  FROM ARC01106 A  (NOLOCK)        
	  JOIN CUSTDYM C (NOLOCK) ON A.CUSTOMER_CODE = C.CUSTOMER_CODE  
	  LEFT JOIN AREA AR(NOLOCK) ON AR.AREA_CODE=C.AREA_CODE
	  LEFT JOIN CITY CT(NOLOCK) ON AR.CITY_CODE=CT.CITY_CODE
	  LEFT JOIN STATE ST(NOLOCK) ON ST.STATE_CODE=CT.STATE_CODE      
	  LEFT OUTER JOIN #TMPREMARKS Y ON Y.MEMO_ID=A.ADV_REC_ID  
	  LEFT OUTER JOIN CARDISSUE (NOLOCK) CI ON CI.ADV_REC_ID=A.ADV_REC_ID              
	  WHERE A.location_Code =@CCURDEPTID 
	  AND (@DSTARTINGFROM='' OR A.ADV_REC_DT BETWEEN @DSTARTINGFROM AND @CTODT) 
	  AND ISNULL(CI.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
	  AND A.ARCT=5 AND A.AMOUNT<>A.NET_AMOUNT
	  AND A.CANCELLED=0
	  ORDER BY A.ADV_REC_ID
	  GOTO SSPL99
END
ELSE IF(@CXNTYPE='SFT')  
BEGIN         
	  
	  ;WITH CTE AS
	  (
	    SELECT 'SFT' AS XN_TYPE,SHIFT_ID,APPROVAL_REMARKS,
	    SR=ROW_NUMBER () OVER (PARTITION BY SHIFT_ID ORDER BY LAST_UPDATE DESC)
	    FROM TILL_XN_APPROVAL
	  )
	  
	  INSERT INTO #TMPREMARKS(XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
	  SELECT XN_TYPE,SHIFT_ID,APPROVAL_REMARKS
	  FROM CTE WHERE SR=1
	  
		SELECT 'SFT' AS [XN_TYPE],A.SHIFT_ID AS [XN_ID],0 AS APPROVAL_STATUS,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
		GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,A.OPEN_DATE AS [XN_DT],
		'' AS AC_NAME,'' AS [ADDRESS], 
		ROW_NUMBER() OVER (ORDER BY  A.SHIFT_ID ) AS [SRNO],CONVERT(BIT,0) AS ISHIDDEN,
		CONVERT(BIT ,0) AS [APPROVED],CONVERT(BIT ,0) AS [DISAPPROVED],
		TM.TILL_NAME,A.FIN_YEAR,A.COMP_OP
		,A.PHY_OP,A.RECEIPTS,A.ISSUES,A.COMP_CL,A.PHY_CL,USR.USERNAME
		,A.OPEN_DATE,A.OPEN_TIME,A.CLOSE_TIME,A.CLOSE_DATE,
		ISNULL(A.PHY_CL,0)-ISNULL(A.COMP_CL,0) AS CLOSING_MISMATCH,
		USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	  DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))	
		FROM TILL_SHIFT_MST A  (NOLOCK)        
		JOIN TILL_MST TM ON A.TILL_ID=TM.TILL_ID
		JOIN USERS USR ON A.USER_CODE=USR.USER_CODE
		LEFT OUTER JOIN #TMPREMARKS XN ON XN.MEMO_ID=A.SHIFT_ID AND XN.XN_TYPE='SFT'
		WHERE A.location_code =@CCURDEPTID 
		AND (A.OPEN_DATE BETWEEN @DSTARTINGFROM AND @CTODT AND ISNULL(A.CLOSE_DATE,'')<>'') 
		AND ISNULL(A.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
		ORDER BY A.SHIFT_ID
		GOTO SSPL99
END 

ELSE IF(@CXNTYPE='WSL')  
 BEGIN         
	  
	  ;WITH CTE AS
	  (
	    SELECT 'WSL' AS XN_TYPE,INV_ID,APPROVAL_REMARKS,
	    SR=ROW_NUMBER () OVER (PARTITION BY INV_ID ORDER BY LAST_UPDATE DESC)
	    FROM WSL_XN_APPROVAL
	  )
	  
	  INSERT INTO #TMPREMARKS(XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
	  SELECT XN_TYPE,INV_ID,APPROVAL_REMARKS
	  FROM CTE WHERE SR=1
	  
	   SELECT 'WSL' AS XN_TYPE,
	   A.INV_ID AS XN_ID,0 AS APPROVAL_STATUS,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
	   GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,A.INV_NO AS [XN_NO],A.INV_DT AS [XN_DT],
	   C.AC_NAME ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + C.AREA_NAME +           
	   ' ' + C.CITY + ' ' + C.STATE AS [ADDRESS],        
	   CONVERT(BIT ,0) AS [APPROVED],UNAPPROVED  =CAST(0 AS BIT),
	   A.NET_AMOUNT AS [AMOUNT],
	   ROW_NUMBER() OVER (ORDER BY  A.INV_ID )  AS [SRNO],CONVERT(BIT,0) AS ISHIDDEN,       
	   A.CANCELLED,
	   USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	   SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	   DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10)),
	   (CASE WHEN a.XN_ITEM_TYPE  = 4 THEN 'SERVICES' WHEN a.XN_ITEM_TYPE =3 THEN 'ASSETS' WHEN a.XN_ITEM_TYPE =2 THEN 'CONSUMABLE'  ELSE  'INVENTORY' END) AS XN_ITEM_TYPE   
	  FROM INM01106 A  (NOLOCK)        
	  JOIN USERS USR ON A.USER_CODE=USR.USER_CODE
	  JOIN LMV01106 C (NOLOCK) ON A.AC_CODE = C.AC_CODE 
	  LEFT OUTER JOIN #TMPREMARKS XN ON XN.MEMO_ID=A.INV_ID AND XN.XN_TYPE='WSL'
	  WHERE a.location_Code =@CCURDEPTID 
	  AND A.INV_MODE=1
	  AND A.INV_DT  BETWEEN @DSTARTINGFROM AND @CTODT 
	 AND ISNULL(A.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
	 ORDER BY A.INV_ID
	GOTO SSPL99
END 
ELSE IF(@CXNTYPE='WPS')  
 BEGIN         
	  
	  ;WITH CTE AS
	  (
	    SELECT 'WPS' AS XN_TYPE,XN_ID,APPROVAL_REMARKS,
	    SR=ROW_NUMBER () OVER (PARTITION BY XN_ID ORDER BY LAST_UPDATE DESC)
	    FROM TRANSACTION_APPROVAL_DET WHERE XN_TYPE='WPS'
	  )
	  
	  INSERT INTO #TMPREMARKS(XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
	  SELECT XN_TYPE,XN_ID,APPROVAL_REMARKS
	  FROM CTE WHERE SR=1
	  
	   SELECT 'WPS' AS XN_TYPE,
	   A.ps_id AS XN_ID,0 AS APPROVAL_STATUS,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
	   GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,A.ps_no AS [XN_NO],A.ps_dt AS [XN_DT],
	   C.AC_NAME ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + C.AREA_NAME +           
	   ' ' + C.CITY + ' ' + C.STATE AS [ADDRESS],        
	   CONVERT(BIT ,0) AS [APPROVED],UNAPPROVED  =CAST(0 AS BIT),
	   A.SUBTOTAL AS [AMOUNT],
	   ROW_NUMBER() OVER (ORDER BY  A.ps_id )  AS [SRNO],CONVERT(BIT,0) AS ISHIDDEN,       
	   A.CANCELLED,
	   USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	   SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	   DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10)),
	   (CASE WHEN a.XN_ITEM_TYPE  = 4 THEN 'SERVICES' WHEN a.XN_ITEM_TYPE =3 THEN 'ASSETS' WHEN a.XN_ITEM_TYPE =2 THEN 'CONSUMABLE'  ELSE  'INVENTORY' END) AS XN_ITEM_TYPE   
	  FROM wps_mst A  (NOLOCK)        
	  JOIN USERS USR ON A.USER_CODE=USR.USER_CODE
	  JOIN LMV01106 C (NOLOCK) ON A.AC_CODE = C.AC_CODE 
	  LEFT OUTER JOIN #TMPREMARKS XN ON XN.MEMO_ID=A.ps_id AND XN.XN_TYPE='wps'
	  WHERE A.location_Code =@CCURDEPTID 
	 -- AND A.ps_mode=1
	  AND A.ps_dt  BETWEEN @DSTARTINGFROM AND @CTODT 
	 AND ISNULL(A.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
	 ORDER BY A.PS_ID

	GOTO SSPL99
END 
ELSE IF(@CXNTYPE='GRPWSL')  
 BEGIN         
	  
	  ;WITH CTE AS
	  (
	    SELECT 'GRPWSL' AS XN_TYPE,INV_ID,APPROVAL_REMARKS,
	    SR=ROW_NUMBER () OVER (PARTITION BY INV_ID ORDER BY LAST_UPDATE DESC)
	    FROM WSL_XN_APPROVAL
	  )
	  
	  INSERT INTO #TMPREMARKS(XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
	  SELECT XN_TYPE,INV_ID,APPROVAL_REMARKS
	  FROM CTE WHERE SR=1
	  
	   SELECT 'GRPWSL' AS XN_TYPE,
	   A.INV_ID AS XN_ID,0 AS APPROVAL_STATUS,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
	   GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,A.INV_NO AS [XN_NO],A.INV_DT AS [XN_DT],
	   C.AC_NAME ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + C.AREA_NAME +           
	   ' ' + C.CITY + ' ' + C.STATE AS [ADDRESS],        
	   CONVERT(BIT ,0) AS [APPROVED],UNAPPROVED  =CAST(0 AS BIT),
	   A.NET_AMOUNT AS [AMOUNT],
	   ROW_NUMBER() OVER (ORDER BY  A.INV_ID )  AS [SRNO],CONVERT(BIT,0) AS ISHIDDEN,       
	   A.CANCELLED,
	   USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	   SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	   DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10)),
	   (CASE WHEN a.XN_ITEM_TYPE  = 4 THEN 'SERVICES' WHEN a.XN_ITEM_TYPE =3 THEN 'ASSETS' WHEN a.XN_ITEM_TYPE =2 THEN 'CONSUMABLE'  ELSE  'INVENTORY' END) AS XN_ITEM_TYPE   
	  FROM INM01106 A  (NOLOCK)        
	  JOIN USERS USR ON A.USER_CODE=USR.USER_CODE
	  JOIN LMV01106 C (NOLOCK) ON A.AC_CODE = C.AC_CODE 
	  LEFT OUTER JOIN #TMPREMARKS XN ON XN.MEMO_ID=A.INV_ID AND XN.XN_TYPE='WSL'
	  WHERE A.location_Code =@CCURDEPTID 
	  AND A.INV_MODE=2
	  AND A.INV_DT  BETWEEN @DSTARTINGFROM AND @CTODT 
	 AND ISNULL(A.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
	 ORDER BY A.INV_ID
	GOTO SSPL99
END 
--CHANGES NEW XNTYPE ('WSR','JWI','JWR')
ELSE IF(@CXNTYPE='WSR')  
 BEGIN   
		 ;WITH CTE AS
		(
		 SELECT  XN_TYPE,XN_ID,APPROVAL_REMARKS, 
				 SR=ROW_NUMBER() OVER ( PARTITION BY XN_ID ORDER BY LAST_UPDATE DESC)  
		 FROM  TRANSACTION_APPROVAL_DET 
		 WHERE XN_TYPE='WSR' 
		)
        INSERT INTO #TMPREMARKS (XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
		SELECT XN_TYPE,XN_ID,APPROVAL_REMARKS 
		FROM CTE WHERE SR=1  
	
		
		--PENDING FOR HIGHER LEVEL
		
	 SELECT 'WSR' AS XN_TYPE,A.CN_ID AS XN_ID,0 AS APPROVAL_STATUS,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
	   GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,A.CN_NO AS [XN_NO],A.CN_DT AS [XN_DT],
	   C.AC_NAME ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + C.AREA_NAME +           
	   ' ' + C.CITY + ' ' + C.STATE AS [ADDRESS],        
	   CONVERT(BIT ,0) AS [APPROVED],UNAPPROVED  =CAST(0 AS BIT),
	   A.total_amount  AS [AMOUNT],
	   ROW_NUMBER() OVER (ORDER BY  A.CN_ID )  AS [SRNO],CONVERT(BIT,0) AS ISHIDDEN,       
	   A.CANCELLED,
	   USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	   SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	   DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10)),
	   (CASE WHEN a.XN_ITEM_TYPE  = 4 THEN 'SERVICES' WHEN a.XN_ITEM_TYPE =3 THEN 'ASSETS' WHEN a.XN_ITEM_TYPE =2 THEN 'CONSUMABLE'  ELSE  'INVENTORY' END) AS XN_ITEM_TYPE   
	 FROM CNM01106  A  (NOLOCK)    
	 JOIN LMV01106 C (NOLOCK) ON A.AC_CODE = C.AC_CODE 
	 LEFT OUTER JOIN  #TMPREMARKS XN ON XN.MEMO_ID =A.CN_ID  AND XN.XN_TYPE='WSR'        
	 WHERE a.location_Code =@CCURDEPTID 
	 AND (@DSTARTINGFROM='' OR A.cn_dt   BETWEEN @DSTARTINGFROM AND @CTODT) 
	 AND ISNULL(A.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
	 AND A.CANCELLED=0
	 ORDER BY A.cn_no   
		
	
    GOTO SSPL99
END 
ELSE IF(@CXNTYPE='jwi')  
 BEGIN   
		 ;WITH CTE AS
		(
		 SELECT  XN_TYPE,XN_ID,APPROVAL_REMARKS, 
				 SR=ROW_NUMBER() OVER ( PARTITION BY XN_ID ORDER BY LAST_UPDATE DESC)  
		 FROM  TRANSACTION_APPROVAL_DET 
		 WHERE XN_TYPE='jwi' 
		)
        INSERT INTO #TMPREMARKS (XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
		SELECT XN_TYPE,XN_ID,APPROVAL_REMARKS 
		FROM CTE WHERE SR=1  
	
		
		--PENDING FOR HIGHER LEVEL
		
	 SELECT 'jwi' AS XN_TYPE,A.ISSUE_ID AS XN_ID,0 AS APPROVAL_STATUS,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
	   GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,A.ISSUE_NO AS [XN_NO],A.ISSUE_DT AS [XN_DT],
	   C.AC_NAME ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + C.AREA_NAME +           
	   ' ' + C.CITY + ' ' + C.STATE AS [ADDRESS],        
	   CONVERT(BIT ,0) AS [APPROVED],UNAPPROVED  =CAST(0 AS BIT),
	   A.total_amount  AS [AMOUNT],
	   ROW_NUMBER() OVER (ORDER BY  A.ISSUE_ID )  AS [SRNO],CONVERT(BIT,0) AS ISHIDDEN,       
	   A.CANCELLED,
	   USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	   SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	   DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10)),
	   (CASE WHEN ISNULL(a.ISSUE_MODE,0)   = 0 THEN 'TRADING'  ELSE  'PRODUCTION' END) AS XN_ITEM_TYPE   
	 FROM JOBWORK_ISSUE_MST   A  (NOLOCK)   
	 JOIN prd_agency_mst AM (NOLOCK) ON AM.agency_code =A.agency_code 
	 JOIN LMV01106 C (NOLOCK) ON AM.AC_CODE = C.AC_CODE 
	 LEFT OUTER JOIN  #TMPREMARKS XN ON XN.MEMO_ID =A.ISSUE_ID  AND XN.XN_TYPE='JWI'        
	 WHERE A.location_Code =@CCURDEPTID 
	 AND (@DSTARTINGFROM='' OR A.issue_dt   BETWEEN @DSTARTINGFROM AND @CTODT) 
	 AND ISNULL(A.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
	 AND A.CANCELLED=0
	 ORDER BY A.issue_no   


    GOTO SSPL99
END 
ELSE IF(@CXNTYPE='jwR')  
 BEGIN   
		 ;WITH CTE AS
		(
		 SELECT  XN_TYPE,XN_ID,APPROVAL_REMARKS, 
				 SR=ROW_NUMBER() OVER ( PARTITION BY XN_ID ORDER BY LAST_UPDATE DESC)  
		 FROM  TRANSACTION_APPROVAL_DET 
		 WHERE XN_TYPE='jwR' 
		)
        INSERT INTO #TMPREMARKS (XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
		SELECT XN_TYPE,XN_ID,APPROVAL_REMARKS 
		FROM CTE WHERE SR=1  
	
		
		--PENDING FOR HIGHER LEVEL
		
	 SELECT 'jwr' AS XN_TYPE,A.RECEIPT_ID AS XN_ID,0 AS APPROVAL_STATUS,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
	   GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,A.receipt_no  AS [XN_NO],A.receipt_dt  AS [XN_DT],
	   C.AC_NAME ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + C.AREA_NAME +           
	   ' ' + C.CITY + ' ' + C.STATE AS [ADDRESS],        
	   CONVERT(BIT ,0) AS [APPROVED],UNAPPROVED  =CAST(0 AS BIT),
	   A.net_amount  AS [AMOUNT],
	   ROW_NUMBER() OVER (ORDER BY  A.RECEIPT_ID )  AS [SRNO],CONVERT(BIT,0) AS ISHIDDEN,       
	   A.CANCELLED,
	   USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	   SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	   DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10)),
	   (CASE WHEN ISNULL(a.Receive_Mode,0)   = 0 THEN 'TRADING'  ELSE  'PRODUCTION' END) AS XN_ITEM_TYPE   
	 FROM JOBWORK_RECEIPT_MST   A  (NOLOCK)   
	 JOIN prd_agency_mst AM (NOLOCK) ON AM.agency_code =A.agency_code 
	 JOIN LMV01106 C (NOLOCK) ON AM.AC_CODE = C.AC_CODE 
	 LEFT OUTER JOIN  #TMPREMARKS XN ON XN.MEMO_ID =A.RECEIPT_ID  AND XN.XN_TYPE='JWR'        
	 WHERE A.location_Code =@CCURDEPTID 
	 AND (@DSTARTINGFROM='' OR A.receipt_dt   BETWEEN @DSTARTINGFROM AND @CTODT) 
	 AND ISNULL(A.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
	 AND A.CANCELLED=0
	 ORDER BY A.receipt_no   


    GOTO SSPL99
END 
ELSE IF(@CXNTYPE='JC')  
 BEGIN   
		 ;WITH CTE AS
		(
		 SELECT  XN_TYPE,XN_ID,APPROVAL_REMARKS, 
				 SR=ROW_NUMBER() OVER ( PARTITION BY XN_ID ORDER BY LAST_UPDATE DESC)  
		 FROM  TRANSACTION_APPROVAL_DET 
		 WHERE XN_TYPE='JC' 
		)
        INSERT INTO #TMPREMARKS (XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
		SELECT XN_TYPE,XN_ID,APPROVAL_REMARKS 
		FROM CTE WHERE SR=1  
	
		
		--PENDING FOR HIGHER LEVEL
		--disappove option apply on full approved memo
		IF @IAPPROVEDPO=1
		SET @NLEVEL=100

	 SELECT 'JC' AS XN_TYPE,A.MEMO_ID AS XN_ID,0 AS APPROVAL_STATUS,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
	   GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,A.MEMO_NO  AS [XN_NO],A.MEMO_DT  AS [XN_DT],
	   C.AC_NAME ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + C.AREA_NAME +           
	   ' ' + C.CITY + ' ' + C.STATE AS [ADDRESS],        
	   CONVERT(BIT ,0) AS [APPROVED],UNAPPROVED  =CAST(0 AS BIT),
	   A.TOTAL_AMOUNT  AS [AMOUNT],
	   ROW_NUMBER() OVER (ORDER BY  A.memo_ID )  AS [SRNO],CONVERT(BIT,0) AS ISHIDDEN,       
	   A.CANCELLED,
	   USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	   SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	   DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10)),
	   (CASE WHEN ISNULL(a.ORD_PLAN_MODE,0)   = 0 THEN 'Direct'  ELSE  'Against Buyer Order' END) AS XN_ITEM_TYPE   
	 FROM ORD_PLAN_MST   A  (NOLOCK)   
	 --JOIN prd_agency_mst AM (NOLOCK) ON AM.agency_code =A.agency_code 
	 JOIN LMV01106 C (NOLOCK) ON A.AC_CODE = C.AC_CODE 
	 LEFT OUTER JOIN  #TMPREMARKS XN ON XN.MEMO_ID =A.MEMO_ID  AND XN.XN_TYPE='JC'        
	 WHERE a.location_code =@CCURDEPTID 
	 AND (@DSTARTINGFROM='' OR A.MEMO_DT   BETWEEN @DSTARTINGFROM AND @CTODT) 
	 AND ISNULL(A.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
	 AND A.CANCELLED=0
	 ORDER BY A.MEMO_NO   


    GOTO SSPL99
END 
ELSE IF(@CXNTYPE='EDT')  
 BEGIN   
		 ;WITH CTE AS
		(
		 SELECT  XN_TYPE,XN_ID,APPROVAL_REMARKS, 
				 SR=ROW_NUMBER() OVER ( PARTITION BY XN_ID ORDER BY LAST_UPDATE DESC)  
		 FROM  TRANSACTION_APPROVAL_DET 
		 WHERE XN_TYPE='EDT' 
		)
        INSERT INTO #TMPREMARKS (XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
		SELECT XN_TYPE,XN_ID,APPROVAL_REMARKS 
		FROM CTE WHERE SR=1  
	
		
		--PENDING FOR HIGHER LEVEL
		
	SELECT 'EDT' AS XN_TYPE,A.ID AS XN_ID,0 AS APPROVAL_STATUS,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
	   GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,A.ID  AS [XN_NO],A.TODT  AS [XN_DT],
	   a.name as ac_name  ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + C.AREA_NAME +           
	   ' ' + C.CITY + ' ' + C.STATE AS [ADDRESS],        
	   CONVERT(BIT ,0) AS [APPROVED],UNAPPROVED  =CAST(0 AS BIT),
	   0  AS [AMOUNT],
	   ROW_NUMBER() OVER (ORDER BY  A.ID )  AS [SRNO],CONVERT(BIT,0) AS ISHIDDEN,       
	   0 AS CANCELLED,
	   USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	   SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	   DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10)),
	   '' AS XN_ITEM_TYPE   
	 FROM TBL_EOSS_DISC_SHARE_MST   A  (NOLOCK)   
	 JOIN LMV01106 C (NOLOCK) ON A.AC_CODE = C.AC_CODE 
	 LEFT OUTER JOIN  #TMPREMARKS XN ON XN.MEMO_ID =A.ID  AND XN.XN_TYPE='EDT'        
	 WHERE LEFT(A.ID ,2)=@CCURDEPTID 
	-- AND (@DSTARTINGFROM='' OR A.FROMDT>=@DSTARTINGFROM  ) 
	 AND ISNULL(A.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
	 ORDER BY A.ID   


    GOTO SSPL99
END 
ELSE IF(@CXNTYPE='ARO')  
 BEGIN   
		 ;WITH CTE AS
		(
		 SELECT  XN_TYPE,XN_ID,APPROVAL_REMARKS, 
				 SR=ROW_NUMBER() OVER ( PARTITION BY XN_ID ORDER BY LAST_UPDATE DESC)  
		 FROM  TRANSACTION_APPROVAL_DET 
		 WHERE XN_TYPE='ARO' 
		)
        INSERT INTO #TMPREMARKS (XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
		SELECT XN_TYPE,XN_ID,APPROVAL_REMARKS 
		FROM CTE WHERE SR=1  
	
		
		--PENDING FOR HIGHER LEVEL
		
	SELECT 'ARO' AS XN_TYPE,A.PLAN_ID AS XN_ID,0 AS APPROVAL_STATUS,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
	   GETDATE() AS [LAST_UPDATE],  'LATER' AS ROW_ID,A.PLAN_ID  AS [XN_NO],A.to_dt  AS [XN_DT],
	   a.PLAN_NAME as PLAN_NAME  ,'' AS [ADDRESS],        
	   CONVERT(BIT ,0) AS [APPROVED],UNAPPROVED  =CAST(0 AS BIT),
	   0  AS [AMOUNT],
	   ROW_NUMBER() OVER (ORDER BY  A.PLAN_ID )  AS [SRNO],CONVERT(BIT,0) AS ISHIDDEN,       
	   0 AS CANCELLED,
	   USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	   SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	   DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10)),
	   '' AS XN_ITEM_TYPE   ,FILTER,FILTER_DISPLAY,a.remarks
	 FROM ARO_PLAN_MST   A  (NOLOCK)   
	 LEFT OUTER JOIN  #TMPREMARKS XN ON XN.MEMO_ID =A.PLAN_ID  AND XN.XN_TYPE='ARO'        
	 WHERE --LEFT(A.PLAN_ID ,2)=@CCURDEPTID AND
	-- AND (@DSTARTINGFROM='' OR A.FROMDT>=@DSTARTINGFROM  ) 
	  ISNULL(A.APPROVEDLEVELNO,0)=ISNULL(@NLEVEL,0)-1
	 ORDER BY A.PLAN_ID   




    GOTO SSPL99
END 


GOTO SSPL99 
        
SSPL_DET:  

	 IF(@CXNTYPE='PUR')  
	 BEGIN   
	  SELECT A.*, B.ARTICLE_NO,  K.SECTION_NAME, J.SUB_SECTION_NAME,I.UOM_NAME,C.PARA1_NAME,            
	  D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,         
	  B.ARTICLE_NAME,B.STOCK_NA,FORM.FORM_NAME,B.FIX_MRP,SKU.PRODUCT_NAME,      
	  B.ALIAS AS ARTICLE_ALIAS,A.QUANTITY,A.PURCHASE_PRICE,A.MRP,A.PRODUCT_CODE,A.MRR_ID AS REF_XN_ID,
	  CAST( 0 AS INT) AS SRNO  ,B.CODING_SCHEME,A.INVOICE_QUANTITY AS 'AMOUNT',
	  ISNULL(B.DT_CREATED,'') AS [ART_DT_CREATED],ISNULL(E.DT_CREATED,'') AS [PARA3_DT_CREATED],  
	  ISNULL(SKU.DT_CREATED,'') AS [SKU_DT_CREATED],B.GEN_EAN_CODES,     
	  '' AS OTHER_XN_PRODUCT_CODE,D.PARA2_ORDER, B.SIZE_RATE_DIFF ,B.SIZE_CENTER_POINT, 
	  A.QUANTITY AS [ORG_QUANTITY],CAST(0 AS NUMERIC(10,2)) AS [STK_QUANTITY],B.STOCK_NA,
	  FORM.FORM_NAME,B.FIX_MRP,  SKU.PRODUCT_NAME,B.FIX_PRICE_ARTICLE,CONVERT(NUMERIC(2),0) AS  MODE,
	  B.ALIAS AS ARTICLE_ALIAS,
	  (FROM_UOM_NAME+ ' - ' +TO_UOM_NAME) AS AREA_UOM_NAME,
	  ISNULL(AR_UOM.SQUARE_UNIT,0) AS SQUARE_UNIT,
	  ISNULL(AR_UOM.BASE_UNIT,0) AS BASE_UNIT,
	  ISNULL(AR_UOM.FROM_UOM_NAME,'') AS FROM_UOM_NAME,
	  ISNULL(AR_UOM.TO_UOM_NAME,'') AS TO_UOM_NAME,
	  B.AREA_WISE_RATE_APPLICABLE   
	  FROM PID01106 A (NOLOCK)           
	  JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE             
	  JOIN PARA1 C (NOLOCK) ON A.PARA1_CODE = C.PARA1_CODE            
	  JOIN PARA2 D (NOLOCK) ON A.PARA2_CODE = D.PARA2_CODE            
	  JOIN PARA3 E (NOLOCK) ON A.PARA3_CODE = E.PARA3_CODE            
	  JOIN PARA4 F (NOLOCK) ON A.PARA4_CODE = F.PARA4_CODE            
	  JOIN PARA5 G (NOLOCK) ON A.PARA5_CODE = G.PARA5_CODE            
	  JOIN PARA6 H (NOLOCK) ON A.PARA6_CODE = H.PARA6_CODE            
	  JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE            
	  JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE            
	  JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE         
	  JOIN FORM (NOLOCK) ON FORM.FORM_ID=A.FORM_ID         
	  LEFT OUTER JOIN SKU ON SKU.PRODUCT_CODE=A.PRODUCT_CODE 
	  LEFT OUTER JOIN STANDARD_UOM AR_UOM (NOLOCK) ON A.AREA_UOM_CODE= AR_UOM.UOM_CODE              
	  WHERE A.MRR_ID = @CWHERE             
	  ORDER BY A.BOX_NO,A.SRNO,A.PRODUCT_CODE    
	  GOTO SSPL99  
	 END 
	 ELSE
	 IF(@CXNTYPE='PBM')  
	 BEGIN   
	  SELECT A.*, B.ARTICLE_NO,  K.SECTION_NAME, J.SUB_SECTION_NAME,I.UOM_NAME,C.PARA1_NAME,            
	  D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,         
	  B.ARTICLE_NAME,B.STOCK_NA,FORM.FORM_NAME,B.FIX_MRP,SKU.PRODUCT_NAME,      
	  B.ALIAS AS ARTICLE_ALIAS,A.QUANTITY,A.PURCHASE_PRICE,SKU.MRP,A.PRODUCT_CODE,A.MRR_ID  AS REF_XN_ID,
	  CAST( 0 AS INT) AS SRNO  ,B.CODING_SCHEME,A.QUANTITY AS 'AMOUNT',
	  ISNULL(B.DT_CREATED,'') AS [ART_DT_CREATED],ISNULL(E.DT_CREATED,'') AS [PARA3_DT_CREATED],  
	  ISNULL(SKU.DT_CREATED,'') AS [SKU_DT_CREATED],B.GEN_EAN_CODES,     
	  '' AS OTHER_XN_PRODUCT_CODE,D.PARA2_ORDER, B.SIZE_RATE_DIFF ,B.SIZE_CENTER_POINT, 
	  A.QUANTITY AS [ORG_QUANTITY],CAST(0 AS NUMERIC(10,2)) AS [STK_QUANTITY],B.STOCK_NA,
	  FORM.FORM_NAME,B.FIX_MRP,  SKU.PRODUCT_NAME,B.FIX_PRICE_ARTICLE,CONVERT(NUMERIC(2),0) AS  MODE,
	  B.ALIAS AS ARTICLE_ALIAS,
	  '' AS AREA_UOM_NAME,
	  0 AS SQUARE_UNIT,
	  0 AS BASE_UNIT,
	  '' AS FROM_UOM_NAME,
	  '' AS TO_UOM_NAME,
	  B.AREA_WISE_RATE_APPLICABLE        
	  FROM PID01106  A (NOLOCK)           
	  LEFT JOIN SKU (NOLOCK) ON A.PRODUCT_CODE=SKU.PRODUCT_CODE
	  JOIN ARTICLE B (NOLOCK) ON SKU.ARTICLE_CODE = B.ARTICLE_CODE             
	  JOIN PARA1 C (NOLOCK) ON SKU.PARA1_CODE = C.PARA1_CODE            
	  JOIN PARA2 D (NOLOCK) ON SKU.PARA2_CODE = D.PARA2_CODE            
	  JOIN PARA3 E (NOLOCK) ON SKU.PARA3_CODE = E.PARA3_CODE            
	  JOIN PARA4 F (NOLOCK) ON SKU.PARA4_CODE = F.PARA4_CODE            
	  JOIN PARA5 G (NOLOCK) ON SKU.PARA5_CODE = G.PARA5_CODE            
	  JOIN PARA6 H (NOLOCK) ON SKU.PARA6_CODE = H.PARA6_CODE            
	  JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE            
	  JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE            
	  JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE         
	  JOIN FORM (NOLOCK) ON FORM.FORM_ID=A.FORM_ID         
	  WHERE A.MRR_ID  = @CWHERE             
	  ORDER BY A.PRODUCT_CODE 
	     
	  GOTO SSPL99  
	 END 
 
 ELSE      
 IF(@CXNTYPE='PRT')  
 BEGIN   
	 SELECT A.PRODUCT_CODE,A.QUANTITY,A.PURCHASE_PRICE,A.AMOUNT,  
	 A.BILL_NO,A.DISCOUNT_PERCENTAGE,A.DISCOUNT_AMOUNT,A.GROSS_PURCHASE_PRICE,A.PUR_DISCOUNT_PERCENTAGE,  
	 A.PUR_DISCOUNT_AMOUNT,A.PUR_PURCHASE_PRICE,A.REMARKS,A.INVOICE_QUANTITY,A.SCHEME_QUANTITY,A.RATE,  
	 A.INV_RATE,A.DN_DISCOUNT_PERCENTAGE,A.DN_DISCOUNT_AMOUNT,A.BOX_NO,  
	 A.BOX_DT,K.SECTION_NAME, J.SUB_SECTION_NAME,I.UOM_NAME,C.PARA1_NAME,            
	 D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,B.ARTICLE_NO,          
	 B.ARTICLE_NAME,B.STOCK_NA,FORM.FORM_NAME,B.FIX_MRP,SKU.PRODUCT_NAME,      
	 B.ALIAS AS ARTICLE_ALIAS,A.RM_ID AS REF_XN_ID ,CAST( 0 AS INT) AS SRNO       
	 FROM RMD01106 A (NOLOCK)  
	 JOIN SKU (NOLOCK)  ON SKU.PRODUCT_CODE=A.PRODUCT_CODE               
	 JOIN ARTICLE B (NOLOCK) ON SKU.ARTICLE_CODE = B.ARTICLE_CODE             
	 JOIN PARA1 C (NOLOCK) ON SKU.PARA1_CODE = C.PARA1_CODE            
	 JOIN PARA2 D (NOLOCK) ON SKU.PARA2_CODE = D.PARA2_CODE            
	 JOIN PARA3 E (NOLOCK) ON SKU.PARA3_CODE = E.PARA3_CODE            
	 JOIN PARA4 F (NOLOCK) ON SKU.PARA4_CODE = F.PARA4_CODE            
	 JOIN PARA5 G (NOLOCK) ON SKU.PARA5_CODE = G.PARA5_CODE            
	 JOIN PARA6 H (NOLOCK) ON SKU.PARA6_CODE = H.PARA6_CODE            
	 JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE            
	 JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE            
	 JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE         
	 JOIN FORM (NOLOCK) ON FORM.FORM_ID=A.ITEM_FORM_ID                 
	 WHERE A.RM_ID = @CWHERE             
	 ORDER BY A.PRODUCT_CODE  
	 
	 GOTO SSPL99    
 END 
 ELSE
 IF(@CXNTYPE='EDS')  
 BEGIN   
	 SELECT A.PRODUCT_CODE,A.QUANTITY,A.MRP,A.VALUE_AT_MRP,A.CM_NO,A.CM_DT,A.DISCOUNT_AMOUNT,
	 0  AS DISCOUNT_PERCENTAGE,K.SECTION_NAME, J.SUB_SECTION_NAME,I.UOM_NAME,C.PARA1_NAME,            
	 D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,B.ARTICLE_NO,          
	 B.ARTICLE_NAME,B.STOCK_NA,
	 --FORM.FORM_NAME,
	 B.FIX_MRP,SKU.PRODUCT_NAME,      
	 B.ALIAS AS ARTICLE_ALIAS,A.MEMO_ID AS REF_XN_ID ,CAST( 0 AS INT) AS SRNO      
	 FROM EOSSDND A (NOLOCK)  
	 JOIN SKU (NOLOCK)  ON SKU.PRODUCT_CODE=A.PRODUCT_CODE               
	 JOIN ARTICLE B (NOLOCK) ON SKU.ARTICLE_CODE = B.ARTICLE_CODE             
	 JOIN PARA1 C (NOLOCK) ON SKU.PARA1_CODE = C.PARA1_CODE            
	 JOIN PARA2 D (NOLOCK) ON SKU.PARA2_CODE = D.PARA2_CODE            
	 JOIN PARA3 E (NOLOCK) ON SKU.PARA3_CODE = E.PARA3_CODE            
	 JOIN PARA4 F (NOLOCK) ON SKU.PARA4_CODE = F.PARA4_CODE            
	 JOIN PARA5 G (NOLOCK) ON SKU.PARA5_CODE = G.PARA5_CODE            
	 JOIN PARA6 H (NOLOCK) ON SKU.PARA6_CODE = H.PARA6_CODE            
	 JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE            
	 JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE            
	 JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE         
	 --JOIN FORM (NOLOCK) ON FORM.FORM_ID=A.ITEM_FORM_ID                 
	 WHERE A.MEMO_ID = @CWHERE             
	 ORDER BY A.PRODUCT_CODE  
	 
	 GOTO SSPL99    
 END   

 ELSE

 IF(@CXNTYPE='EOSSSOR')  
 BEGIN   
	 SELECT A.PRODUCT_CODE,A.QUANTITY,A.MRP_value,a.net_payable,A.CM_NO,A.CM_DT,A.DISCOUNT_AMOUNT,
	 0  AS DISCOUNT_PERCENTAGE,SECTION_NAME, SUB_SECTION_NAME,PARA1_NAME,            
	 PARA2_NAME,PARA3_NAME,PARA4_NAME,PARA5_NAME,PARA6_NAME,ARTICLE_NO,          
	 ARTICLE_NAME,A.MEMO_ID AS REF_XN_ID ,CAST( 0 AS INT) AS SRNO      
	 FROM EOSSSORD A (NOLOCK)  
	 JOIN SKU_names sn (NOLOCK)  ON Sn.PRODUCT_CODE=A.PRODUCT_CODE               
	 WHERE A.MEMO_ID = @CWHERE             
	 ORDER BY A.PRODUCT_CODE  
	 
	 GOTO SSPL99    
 END   

 ELSE
IF(@CXNTYPE='PTC')  
 BEGIN   
       
  SELECT B.AC_NAME,XN_AMOUNT,XN_TYPE,NARRATION,REF_NO,PEM_MEMO_ID AS REF_XN_ID  
		,CAST( 0 AS INT) AS SRNO  
  FROM  PED01106 A          
  JOIN LMV01106 B ON B.AC_CODE=A.AC_CODE AND B.AC_CODE<>'0000000000'       
  WHERE PEM_MEMO_ID=@CWHERE          
  ORDER BY TS   
  GOTO SSPL99    
 END

IF(@CXNTYPE='VCH')  
 BEGIN   
  SELECT B.AC_NAME,A.VM_ID AS REF_XN_ID,NARRATION,CREDIT_AMOUNT,DEBIT_AMOUNT,X_TYPE,SECONDARY_NARRATION      
	,CAST( 0 AS INT) AS SRNO       
  FROM VD01106 A (NOLOCK)      
  JOIN LMV01106 B ON B.AC_CODE=A.AC_CODE AND B.AC_CODE<>'0000000000'             
  WHERE A.VM_ID = @CWHERE 
  GOTO SSPL99               
END
 
 IF(@CXNTYPE IN ('SLSCRI','SLSEDT','EOSSDSLS'))  
 BEGIN   
  SELECT  A.*,A.SR_NO AS SRNO,  
    EMP.EMP_NAME, A.PRODUCT_CODE, B.ARTICLE_CODE, B.ARTICLE_NO, B.ARTICLE_NAME, C.PARA1_CODE,    
    C.PARA1_NAME, D.PARA2_CODE, D.PARA2_NAME, F.PARA3_CODE, F.PARA3_NAME, E.UOM_NAME,       
    A.DEPT_ID, B.CODING_SCHEME,  B.INACTIVE,ISNULL(P.QUANTITY_IN_STOCK,0) AS QUANTITY_IN_STOCK ,   
    SKU.PURCHASE_PRICE,  SKU.MRP,SKU.WS_PRICE,   SM.SECTION_NAME, SD.SUB_SECTION_NAME,    
    G.PARA4_CODE,H.PARA5_CODE,I.PARA6_CODE,    
    PARA4_NAME,PARA5_NAME,PARA6_NAME,E.UOM_CODE,ISNULL(E.UOM_TYPE,0) AS [UOM_TYPE],    
    B.DT_CREATED AS [ART_DT_CREATED],F.DT_CREATED AS [PARA3_DT_CREATED],SKU.DT_CREATED AS [SKU_DT_CREATED],    
    B.STOCK_NA,   
    CONVERT (BIT,(CASE WHEN A.QUANTITY <0 THEN 1 ELSE 0 END)) AS SALERETURN ,CAST(0 AS BIT) AS CREDIT_REFUND,  
    '' AS HOLD_ID,'' AS CMD_HOLD_ROW_ID, A.MRP AS [LOCSKU_MRP],SKU.PRODUCT_NAME,  
    EMP1.EMP_NAME AS EMP_NAME1 ,EMP2.EMP_NAME AS EMP_NAME2  ,(CASE WHEN ISNULL(SKU.FIX_MRP,0)=0 THEN SKU.MRP ELSE SKU.FIX_MRP END) AS [FIX_MRP],
   (CASE WHEN ISNULL(A.HOLD_FOR_ALTER,0)=0 THEN 'N' ELSE 'Y' END) AS [HOLD_FOR_ALTER_TXT],
   (CASE WHEN ISNULL(A.PACK_SLIP_ID,'')='' THEN '' ELSE RIGHT(A.PACK_SLIP_ID,10 ) END) AS [PACK_SLIP_NO]
   ,ISNULL(BIN.BIN_NAME,'') AS [BIN_NAME],B.ALIAS AS ARTICLE_ALIAS ,SD.SUB_SECTION_CODE,SM.SECTION_CODE,
   CONVERT(BIT,0 ) AS [BRANDWISE_DISC],ISNULL(SLS_TITLE,'') AS SLS_TITLE,ISNULL(N.NARRATION,'') AS [NARRATION],
   CONVERT(VARCHAR(10),(CASE WHEN ORD.PRODUCT_CODE IS NULL THEN '' ELSE RIGHT(ORD.ORDER_ID,10) END)) AS [BUYER_ORDER_NO]
   ,DTM.DT_NAME AS DISCOUNTNAME
  FROM  CMD01106  A  (NOLOCK) 
  JOIN CMM01106 CMM (NOLOCK) ON CMM.CM_ID=A.CM_ID
  LEFT JOIN DTM(NOLOCK) ON CMM.DT_CODE=DTM.DT_CODE
  JOIN SKU  (NOLOCK) ON SKU.PRODUCT_CODE=A.PRODUCT_CODE  
  LEFT OUTER JOIN PMT01106 P  (NOLOCK) ON P.PRODUCT_CODE=A.PRODUCT_CODE AND P.BIN_ID=A.BIN_ID  
  LEFT OUTER JOIN BIN (NOLOCK) ON BIN.BIN_ID=A.BIN_ID  
  JOIN ARTICLE B  (NOLOCK) ON SKU.ARTICLE_CODE = B.ARTICLE_CODE      
  JOIN SECTIOND SD  (NOLOCK) ON B.SUB_SECTION_CODE = SD.SUB_SECTION_CODE    
  JOIN SECTIONM SM  (NOLOCK) ON SD.SECTION_CODE = SM.SECTION_CODE    
  JOIN PARA1 C  (NOLOCK) ON SKU.PARA1_CODE = C.PARA1_CODE      
  JOIN PARA2 D  (NOLOCK) ON SKU.PARA2_CODE = D.PARA2_CODE      
  JOIN PARA3 F  (NOLOCK) ON SKU.PARA3_CODE = F.PARA3_CODE      
  JOIN PARA4 G  (NOLOCK) ON SKU.PARA4_CODE = G.PARA4_CODE      
  JOIN PARA5 H  (NOLOCK) ON SKU.PARA5_CODE = H.PARA5_CODE      
  JOIN PARA6 I  (NOLOCK) ON SKU.PARA6_CODE = I.PARA6_CODE      
  JOIN UOM E  (NOLOCK) ON B.UOM_CODE = E.UOM_CODE 
  LEFT OUTER JOIN NRM N (NOLOCK) ON N.NRM_ID=ISNULL(A.NRM_ID  ,'0000000')
  LEFT OUTER JOIN EMPLOYEE EMP  (NOLOCK) ON A.EMP_CODE = EMP.EMP_CODE   
  LEFT OUTER JOIN EMPLOYEE EMP1  (NOLOCK) ON A.EMP_CODE1 = EMP1.EMP_CODE     
  LEFT OUTER JOIN EMPLOYEE EMP2  (NOLOCK) ON A.EMP_CODE2 = EMP2.EMP_CODE    
  LEFT OUTER JOIN SLSDET S (NOLOCK) ON S.ROW_ID =A.SLSDET_ROW_ID
  LEFT JOIN
  (
    SELECT A.ORDER_ID,B.PRODUCT_CODE,A.CUSTOMER_CODE,B.ORDER_TYPE ,REF_PRODUCT_CODE
           FROM WSL_ORDER_MST A (NOLOCK)
           JOIN WSL_ORDER_DET B (NOLOCK) ON A.ORDER_ID =B.ORDER_ID 
           WHERE A.CANCELLED =0 AND ISNULL(B.CANCELLED ,0)=0
           
  ) ORD ON A.PRODUCT_CODE=(CASE WHEN ORD.ORDER_TYPE=1 THEN ORD.REF_PRODUCT_CODE ELSE ORD.PRODUCT_CODE END)
		AND CMM.CUSTOMER_CODE=ORD.CUSTOMER_CODE

   WHERE A.CM_ID=@CWHERE     
   ORDER BY  A.SR_NO--ROW_NUMBER() OVER (ORDER BY A.TS)  
  GOTO SSPL99  
 END 
IF(@CXNTYPE='SFT')  
 BEGIN   
  SELECT A.*,TM.TILL_NAME,USR.USERNAME,CAST( 0 AS INT) AS SRNO  
  FROM TILL_SHIFT_MST A (NOLOCK)           
  JOIN TILL_MST TM (NOLOCK) ON A.TILL_ID=TM.TILL_ID
  JOIN USERS USR (NOLOCK) ON A.USER_CODE=USR.USER_CODE
  WHERE A.SHIFT_ID = @CWHERE             
  ORDER BY A.SHIFT_ID
  
  GOTO SSPL99 
 END 
IF(@CXNTYPE='WSL')  
 BEGIN   
	 SELECT A.PRODUCT_CODE,A.QUANTITY,A.MRP,  
	 A.DISCOUNT_PERCENTAGE,A.DISCOUNT_AMOUNT,A.NET_RATE ,
	 A.REMARKS,A.INVOICE_QUANTITY,A.SCHEME_QUANTITY,A.RATE,A.BOX_NO,  
	 A.BOX_DT,K.SECTION_NAME, J.SUB_SECTION_NAME,I.UOM_NAME,C.PARA1_NAME,            
	 D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,B.ARTICLE_NO,          
	 B.ARTICLE_NAME,B.STOCK_NA,FORM.FORM_NAME,B.FIX_MRP,SKU.PRODUCT_NAME,      
	 B.ALIAS AS ARTICLE_ALIAS,A.INV_ID AS REF_XN_ID ,CAST( 0 AS INT) AS SRNO       
	 FROM IND01106 A (NOLOCK)  
	 JOIN SKU (NOLOCK)  ON SKU.PRODUCT_CODE=A.PRODUCT_CODE               
	 JOIN ARTICLE B (NOLOCK) ON SKU.ARTICLE_CODE = B.ARTICLE_CODE             
	 JOIN PARA1 C (NOLOCK) ON SKU.PARA1_CODE = C.PARA1_CODE            
	 JOIN PARA2 D (NOLOCK) ON SKU.PARA2_CODE = D.PARA2_CODE            
	 JOIN PARA3 E (NOLOCK) ON SKU.PARA3_CODE = E.PARA3_CODE            
	 JOIN PARA4 F (NOLOCK) ON SKU.PARA4_CODE = F.PARA4_CODE            
	 JOIN PARA5 G (NOLOCK) ON SKU.PARA5_CODE = G.PARA5_CODE            
	 JOIN PARA6 H (NOLOCK) ON SKU.PARA6_CODE = H.PARA6_CODE            
	 JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE            
	 JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE            
	 JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE         
	 JOIN FORM (NOLOCK) ON FORM.FORM_ID=A.ITEM_FORM_ID                 
	 WHERE A.INV_ID = @CWHERE             
	 ORDER BY A.PRODUCT_CODE  
	 
	 GOTO SSPL99    
 END  
 IF(@CXNTYPE='WPS')  
 BEGIN   
	 SELECT A.PRODUCT_CODE,A.QUANTITY,A.MRP ,A.REMARKS,A.QUANTITY,A.RATE,A.BOX_NO,  
	 A.BOX_DT,K.SECTION_NAME, J.SUB_SECTION_NAME,I.UOM_NAME,C.PARA1_NAME,            
	 D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,B.ARTICLE_NO,          
	 B.ARTICLE_NAME,B.STOCK_NA,FORM.FORM_NAME,B.FIX_MRP,SKU.PRODUCT_NAME,      
	 B.ALIAS AS ARTICLE_ALIAS,A.PS_ID AS REF_XN_ID ,CAST( 0 AS INT) AS SRNO       
	 FROM WPS_DET A (NOLOCK)  
	 JOIN SKU (NOLOCK)  ON SKU.PRODUCT_CODE=A.PRODUCT_CODE               
	 JOIN ARTICLE B (NOLOCK) ON SKU.ARTICLE_CODE = B.ARTICLE_CODE             
	 JOIN PARA1 C (NOLOCK) ON SKU.PARA1_CODE = C.PARA1_CODE            
	 JOIN PARA2 D (NOLOCK) ON SKU.PARA2_CODE = D.PARA2_CODE            
	 JOIN PARA3 E (NOLOCK) ON SKU.PARA3_CODE = E.PARA3_CODE            
	 JOIN PARA4 F (NOLOCK) ON SKU.PARA4_CODE = F.PARA4_CODE            
	 JOIN PARA5 G (NOLOCK) ON SKU.PARA5_CODE = G.PARA5_CODE            
	 JOIN PARA6 H (NOLOCK) ON SKU.PARA6_CODE = H.PARA6_CODE            
	 JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE            
	 JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE            
	 JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE         
	 JOIN FORM (NOLOCK) ON FORM.FORM_ID=A.ITEM_FORM_ID                 
	 WHERE A.PS_iD = @CWHERE             
	 ORDER BY A.PRODUCT_CODE  
	 
	 GOTO SSPL99    
 END  

 IF(@CXNTYPE='WSR')  
 BEGIN   
	 SELECT A.PRODUCT_CODE,A.QUANTITY,A.RATE, A.inv_no ,A.inv_dt ,
	 A.DISCOUNT_PERCENTAGE,A.DISCOUNT_AMOUNT,A.NET_RATE ,
	 '' AS REMARKS,A.INVOICE_QUANTITY,A.SCHEME_QUANTITY,A.RATE,'' AS BOX_NO,  
	 '' AS BOX_DT,K.SECTION_NAME, J.SUB_SECTION_NAME,I.UOM_NAME,C.PARA1_NAME,            
	 D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,B.ARTICLE_NO,          
	 B.ARTICLE_NAME,B.STOCK_NA,FORM.FORM_NAME,B.FIX_MRP,SKU.PRODUCT_NAME,      
	 B.ALIAS AS ARTICLE_ALIAS,A.CN_ID AS REF_XN_ID ,CAST( 0 AS INT) AS SRNO       
	 FROM cnd01106  A (NOLOCK)  
	 JOIN SKU (NOLOCK)  ON SKU.PRODUCT_CODE=A.PRODUCT_CODE               
	 JOIN ARTICLE B (NOLOCK) ON SKU.ARTICLE_CODE = B.ARTICLE_CODE             
	 JOIN PARA1 C (NOLOCK) ON SKU.PARA1_CODE = C.PARA1_CODE            
	 JOIN PARA2 D (NOLOCK) ON SKU.PARA2_CODE = D.PARA2_CODE            
	 JOIN PARA3 E (NOLOCK) ON SKU.PARA3_CODE = E.PARA3_CODE            
	 JOIN PARA4 F (NOLOCK) ON SKU.PARA4_CODE = F.PARA4_CODE            
	 JOIN PARA5 G (NOLOCK) ON SKU.PARA5_CODE = G.PARA5_CODE            
	 JOIN PARA6 H (NOLOCK) ON SKU.PARA6_CODE = H.PARA6_CODE            
	 JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE            
	 JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE            
	 JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE         
	 JOIN FORM (NOLOCK) ON FORM.FORM_ID=A.ITEM_FORM_ID                 
	 WHERE A.CN_ID = @CWHERE             
	 ORDER BY A.PRODUCT_CODE  
	 
	 GOTO SSPL99    
 END  
 IF(@CXNTYPE='JWI')  
 BEGIN   
	 SELECT A.PRODUCT_CODE,A.QUANTITY,
	 A.REMARKS,A.PURCHASE_PRICE ,'' AS BOX_NO,  
	 '' AS BOX_DT,K.SECTION_NAME, J.SUB_SECTION_NAME,I.UOM_NAME,C.PARA1_NAME,            
	 D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,B.ARTICLE_NO,          
	 B.ARTICLE_NAME,B.STOCK_NA,B.FIX_MRP,SKU.PRODUCT_NAME,      
	 B.ALIAS AS ARTICLE_ALIAS,A.issue_id  AS REF_XN_ID ,CAST( 0 AS INT) AS SRNO       
	 FROM jobwork_issue_det   A (NOLOCK)  
	 JOIN SKU (NOLOCK)  ON SKU.PRODUCT_CODE=A.PRODUCT_CODE               
	 JOIN ARTICLE B (NOLOCK) ON SKU.ARTICLE_CODE = B.ARTICLE_CODE             
	 JOIN PARA1 C (NOLOCK) ON SKU.PARA1_CODE = C.PARA1_CODE            
	 JOIN PARA2 D (NOLOCK) ON SKU.PARA2_CODE = D.PARA2_CODE            
	 JOIN PARA3 E (NOLOCK) ON SKU.PARA3_CODE = E.PARA3_CODE            
	 JOIN PARA4 F (NOLOCK) ON SKU.PARA4_CODE = F.PARA4_CODE            
	 JOIN PARA5 G (NOLOCK) ON SKU.PARA5_CODE = G.PARA5_CODE            
	 JOIN PARA6 H (NOLOCK) ON SKU.PARA6_CODE = H.PARA6_CODE            
	 JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE            
	 JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE            
	 JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE                        
	 WHERE A.issue_id  = @CWHERE             
	 ORDER BY A.PRODUCT_CODE  
	 
	 GOTO SSPL99    
 END  
 IF(@CXNTYPE='JWR')  
 BEGIN   
	 SELECT A.PRODUCT_CODE,A.QUANTITY,
	 A.REMARKS,A.job_rate ,'' AS BOX_NO,  
	 '' AS BOX_DT,K.SECTION_NAME, J.SUB_SECTION_NAME,I.UOM_NAME,C.PARA1_NAME,            
	 D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,B.ARTICLE_NO,          
	 B.ARTICLE_NAME,B.STOCK_NA,B.FIX_MRP,SKU.PRODUCT_NAME,      
	 B.ALIAS AS ARTICLE_ALIAS,A.receipt_id   AS REF_XN_ID ,CAST( 0 AS INT) AS SRNO       
	 FROM jobwork_RECEIPT_det   A (NOLOCK)  
	 JOIN SKU (NOLOCK)  ON SKU.PRODUCT_CODE=A.PRODUCT_CODE               
	 JOIN ARTICLE B (NOLOCK) ON SKU.ARTICLE_CODE = B.ARTICLE_CODE             
	 JOIN PARA1 C (NOLOCK) ON SKU.PARA1_CODE = C.PARA1_CODE            
	 JOIN PARA2 D (NOLOCK) ON SKU.PARA2_CODE = D.PARA2_CODE            
	 JOIN PARA3 E (NOLOCK) ON SKU.PARA3_CODE = E.PARA3_CODE            
	 JOIN PARA4 F (NOLOCK) ON SKU.PARA4_CODE = F.PARA4_CODE            
	 JOIN PARA5 G (NOLOCK) ON SKU.PARA5_CODE = G.PARA5_CODE            
	 JOIN PARA6 H (NOLOCK) ON SKU.PARA6_CODE = H.PARA6_CODE            
	 JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE            
	 JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE            
	 JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE                        
	 WHERE A.receipt_id   = @CWHERE             
	 ORDER BY A.PRODUCT_CODE  
	 
	 GOTO SSPL99    
 END  
 IF(@CXNTYPE='JC')  
 BEGIN   
	 SELECT A.PRODUCT_CODE,DET.QUANTITY,
	 MST.REMARKS,DET.rate ,'' AS BOX_NO,  
	 '' AS BOX_DT,K.SECTION_NAME, J.SUB_SECTION_NAME,I.UOM_NAME,C.PARA1_NAME,            
	 D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,B.ARTICLE_NO,          
	 B.ARTICLE_NAME,B.STOCK_NA,B.FIX_MRP,SKU.PRODUCT_NAME,      
	 B.ALIAS AS ARTICLE_ALIAS,DET.MEMO_ID   AS REF_XN_ID ,CAST( 0 AS INT) AS SRNO       
	 FROM ORD_PLAN_BARCODE_DET   A (NOLOCK)
	 JOIN ORD_PLAN_DET DET (NOLOCK) ON DET.ROW_ID=A.REFROW_ID  
	 JOIN ORD_PLAN_MST MST (NOLOCK) ON DET.MEMO_ID=MST.MEMO_ID  
	 JOIN SKU (NOLOCK)  ON SKU.PRODUCT_CODE=A.PRODUCT_CODE               
	 JOIN ARTICLE B (NOLOCK) ON SKU.ARTICLE_CODE = B.ARTICLE_CODE             
	 JOIN PARA1 C (NOLOCK) ON SKU.PARA1_CODE = C.PARA1_CODE            
	 JOIN PARA2 D (NOLOCK) ON SKU.PARA2_CODE = D.PARA2_CODE            
	 JOIN PARA3 E (NOLOCK) ON SKU.PARA3_CODE = E.PARA3_CODE            
	 JOIN PARA4 F (NOLOCK) ON SKU.PARA4_CODE = F.PARA4_CODE            
	 JOIN PARA5 G (NOLOCK) ON SKU.PARA5_CODE = G.PARA5_CODE            
	 JOIN PARA6 H (NOLOCK) ON SKU.PARA6_CODE = H.PARA6_CODE            
	 JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE            
	 JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE            
	 JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE                        
	 WHERE MST.MEMO_ID   = @CWHERE             
	 ORDER BY A.PRODUCT_CODE  
	 
	 GOTO SSPL99    
 END  
 IF(@CXNTYPE='EDT')  
 BEGIN   
	SELECT B.ID,LM.AC_NAME ,B.D_FILTER,B.A_FILTER,B.FROMDT,B.TODT, A.DISCFROM,
          A.DISCTO,A.BASE,A.SUPP_SHARE_PER, A.VAT_SHARING_PER,
      (case when base=1 then '1.Share in discount Outflow'  
            When base=2 Then '2.Margin on NRV'  
            when base=3 then '3.Margin on MRP' 
            Else  '1.Share in discount Out Flow' End) as BASE_NAME, 
      (case when VAT_SHARING_MODE=1 then '1.Not Shared'  
            When VAT_SHARING_MODE=2 Then '2.Inc Vat Sharad'  
            when VAT_SHARING_MODE=3 then '3.Excl Vat Sharad' 
            When  VAT_SHARING_MODE =4 THEN  '4.All Vat Sharad' End) as VAT_SHARING_MODE_NAME 
FROM TBL_EOSS_DISC_SHARE_DET A  (NOLOCK) 
JOIN TBL_EOSS_DISC_SHARE_MST B (NOLOCK) ON A.ID=B.ID 
JOIN LM01106 LM (NOLOCK) ON B.AC_CODE =LM.AC_CODE
WHERE A.ID= @CWHERE


	 
	 GOTO SSPL99    
 END  
 IF(@CXNTYPE='ARO')  
 BEGIN   
	 SELECT A.DEPT_ID ,L.DEPT_NAME, A.*
	 FROM aro_plan_DET   A (NOLOCK)    
	 join location l (nolock) on l.dept_id =a.dept_id                            
	 WHERE A.plan_id   = @CWHERE             
	 ORDER BY A.article_no  


	 GOTO SSPL99    
 END  

SSPL_CHECKLIST_LEVEL_DETAILS:  
      
 SELECT A.*,C.*,CONVERT(NUMERIC, 0) AS SRNO  FROM XN_APPROVAL_CHECKLIST_LEVEL_DETAILS A        
 JOIN XN_APPROVAL_CHECKLIST_LEVELS B ON B.LEVEL_CODE=A.LEVEL_CODE        
 JOIN XN_APPROVAL_CHECKLIST_MST C ON C.CHECKLIST_CODE=A.CHECKLIST_CODE        
 WHERE B.LEVEL_NO=@NLEVEL AND A.XN_TYPE=@CXNTYPE  ORDER BY C.CHECKLIST_ORDER 
       
GOTO SSPL99        

SSPL_CHECKLIST_LEVEL_USERS:  
      
 SELECT DISTINCT  B.LEVEL_NO,LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(B.LEVEL_NO,0) AS VARCHAR(10)),B.INACTIVE 
 
 FROM XN_APPROVAL_CHECKLIST_LEVEL_USERS A         
 JOIN XN_APPROVAL_CHECKLIST_LEVELS B ON  B.LEVEL_CODE=A.LEVEL_CODE AND B.XN_TYPE=A.XN_TYPE        
 WHERE USER_CODE=@CWHERE AND A.XN_TYPE=@CXNTYPE
   
 GOTO SSPL99  

 SSPL_ACCESSS:
      
	  ;WITH CTE
	  AS
	  (
		  SELECT XN_TYPE,DISPLAY_NAME,'FRMXNAPPROVAL_'+XN_TYPE AS FORM_NAME
		  FROM
		  (
		  select CAST('PUR' AS varchar(10)) AS XN_TYPE,CAST('Purchase Invoice' AS varchar(50)) AS DISPLAY_NAME UNION 
		  SELECT 'PRT' AS XN_TYPE,'Debit Note' AS DISPLAY_NAME UNION 
		  SELECT 'PTC' AS XN_TYPE,'Petty Cash' AS DISPLAY_NAME UNION 
		  SELECT 'SLSCRI' AS XN_TYPE,'Credit Bills' AS DISPLAY_NAME UNION 
		  SELECT 'CRDISS' AS XN_TYPE,'Card Issue' AS DISPLAY_NAME UNION
		  SELECT 'SFT' AS XN_TYPE,'Shift' AS DISPLAY_NAME UNION
		  SELECT 'WSL' AS XN_TYPE,'Wholesale' AS DISPLAY_NAME UNION
		  SELECT 'GRPWSL' AS XN_TYPE,'Wholesale Group' AS DISPLAY_NAME UNION
		  --SELECT 'EDS' AS XN_TYPE,'Eoss Discount Sharing Approval' AS DISPLAY_NAME UNION
		  SELECT 'EOSSDSLS' AS XN_TYPE,'EOSS Disabled Bills' AS DISPLAY_NAME UNION
		  SELECT 'SLSEDT' AS XN_TYPE,'Modified Bill Approval' AS DISPLAY_NAME UNION
		  SELECT 'VCH' AS XN_TYPE,'Voucher Entry' AS DISPLAY_NAME UNION
		  SELECT 'PO' AS XN_TYPE,'Purchase Order Approval' AS DISPLAY_NAME UNION
		  SELECT 'BDGPL' AS XN_TYPE,'Budget Plan' AS DISPLAY_NAME UNION
		  SELECT 'BUYPL' AS XN_TYPE,'Buy Plan' AS DISPLAY_NAME UNION
		  SELECT 'WSLORD' AS XN_TYPE,'Wsl Buyer Order' AS DISPLAY_NAME UNION
		  SELECT 'WSR' AS XN_TYPE,'Wholesale Return' AS DISPLAY_NAME UNION
		  SELECT 'JWI' AS XN_TYPE,'Job Work Issue' AS DISPLAY_NAME UNION
		  SELECT 'JWR' AS XN_TYPE,'Job Work return' AS DISPLAY_NAME UNION
		 -- SELECT 'EDT' AS XN_TYPE,'Eoss Discount Sharing Terms' AS DISPLAY_NAME union all
		  SELECT 'EDT' AS XN_TYPE,'SOR Terms' AS DISPLAY_NAME union all
		  SELECT 'ARO' AS XN_TYPE,'Auto Reorder' AS DISPLAY_NAME union all
		  SELECT 'EOSSSOR' AS XN_TYPE,'SOR Payment Advice' AS DISPLAY_NAME  union all
		  SELECT 'JC' AS XN_TYPE,'Job Card' AS DISPLAY_NAME union All
		  SELECT 'WPS' AS XN_TYPE,'Wholesale PackSlip' AS DISPLAY_NAME  
		  )X
	  )
	  Select CTE.* From  CTE 
	ORDER BY CTE.DISPLAY_NAME
	--Select CTE.*
 --   From  users a (NOLOCK) 
 --   join USER_ROLE_MST b (nolock) on a.ROLE_ID = b.ROLE_ID 
 --   join USER_ROLE_DET c (nolock) on b.ROLE_id = c.ROLE_ID 
	--JOIN CTE ON CTE.FORM_NAME=C.FORM_NAME
 --   Where  user_code= @CWHERE AND Form_option = 'ACCESS' and value= '1'
	--ORDER BY CTE.DISPLAY_NAME

	  

 GOTO SSPL99  
 

        
SSPL99:
print 'step#12:'+convert(varchar,getdate(),113)        
END        