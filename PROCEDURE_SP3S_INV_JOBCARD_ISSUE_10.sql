CREATE PROCEDURE [DBO].[SP3S_INV_JOBCARD_ISSUE_10]          
(          
  @IMODE INT ,          
  @CWHERE VARCHAR(MAX)='',      
  @CAGENCYCODE VARCHAR(20)='',      
  @FINYEAR VARCHAR(10)=''  ,    
  @DEPTID VARCHAR(10)='' ,
  @NRETURNMODE INT=0
          
)      
----WITH ENCRYPTION
AS          
          
BEGIN        
 DECLARE @CCMD NVARCHAR(MAX) 	
--LBLPENDINGJOBDETAILS: 10
	
	
	IF @NRETURNMODE=1
	BEGIN
	
		;WITH BOM_ISSUE
		AS
		(

			SELECT A.*,B.MEMO_ID AS ORD_PLAN_MEMO_ID,B.ROW_ID AS ORD_PLAN_DET_ROW_ID,
			CONVERT(NUMERIC(14,2),((A.AVG_QUANTITY+A.ADD_AVG_QUANTITY) * B.ISSUED_QTY)) AS JW_REQ_QTY		
			FROM ORD_PLAN_BOM_DET A (NOLOCK)
			JOIN
			(
				SELECT D.MEMO_ID,C.ROW_ID,C.ARTICLE_CODE,C.PARA1_CODE,C.PARA2_CODE,a.job_code ,
				SUM(A.QUANTITY) AS ISSUED_QTY
				FROM JOBWORK_ISSUE_DET A (NOLOCK)
				JOIN JOBWORK_ISSUE_MST A1 (NOLOCK) ON A1.ISSUE_ID=A.ISSUE_ID
				JOIN ORD_PLAN_BARCODE_DET B (NOLOCK) ON B.PRODUCT_CODE=A.PRODUCT_CODE
				JOIN ORD_PLAN_DET C (NOLOCK) ON C.ROW_ID=B.REFROW_ID
				JOIN ORD_PLAN_MST D (NOLOCK) ON D.MEMO_ID=C.MEMO_ID
				WHERE D.CANCELLED=0 AND ISNULL(D.SHORT_CLOSE,0)=0 AND A1.CANCELLED=0 AND A.ISSUE_ID=@CWHERE
				GROUP BY D.MEMO_ID,C.ROW_ID,C.ARTICLE_CODE,C.PARA1_CODE,C.PARA2_CODE,a.job_code 
			)B ON B.ROW_ID=A.REF_ROW_ID and a.JOB_CODE =b.job_code 
			--JOIN JOBWORK_ISSUE_BOM C (NOLOCK) ON C.ISSUE_ID=@CWHERE
			--AND C.ARTICLE_CODE=A.ARTICLE_CODE 
			--AND C.PARA1_CODE=A.PARA1_CODE 
			--AND C.PARA2_CODE=A.PARA2_CODE
		)
		SELECT T.* ,K.SECTION_NAME, J.SUB_SECTION_NAME, C.PARA1_NAME,        
			 D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,B.ARTICLE_NO,         
			 B.ARTICLE_NAME,I.UOM_NAME,
			 CONVERT(NUMERIC(14,2),ISNULL(X.ISSUED_QTY,0)) AS REQ_QTY,
			 CONVERT(NUMERIC(14,2), CASE WHEN ISNULL(UC.CONVERSION_VALUE,0) =0 THEN ISNULL(X.ISSUED_QTY,0)
	         ELSE (ISNULL(X.ISSUED_QTY,0))/ISNULL(UC.CONVERSION_VALUE,0) END  ) AS STOCK_QTY,
			 ISNULL(X.ISSUED_QTY,0) AS ISSUED_QTY ,
			 BU.CONVERSION_UOM_NAME AS BOM_UOM,
		     UC.Conversion_Value,B.coding_scheme
		FROM BOM_ISSUE T 
		JOIN ARTICLE B (NOLOCK) ON T.ARTICLE_CODE = B.ARTICLE_CODE         
		JOIN PARA1 C (NOLOCK) ON T.PARA1_CODE = C.PARA1_CODE        
		JOIN PARA2 D (NOLOCK) ON T.PARA2_CODE = D.PARA2_CODE        
		JOIN PARA3 E (NOLOCK) ON T.PARA3_CODE = E.PARA3_CODE        
		JOIN PARA4 F (NOLOCK) ON T.PARA4_CODE = F.PARA4_CODE        
		JOIN PARA5 G (NOLOCK) ON T.PARA5_CODE = G.PARA5_CODE        
		JOIN PARA6 H (NOLOCK) ON T.PARA6_CODE = H.PARA6_CODE        
		JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE        
		JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE        
		JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE 
		JOIN 
		(
			SELECT A1.JOB_CODE, A1.MEMO_ID, A1.REF_ROW_ID,A1.ARTICLE_CODE,A1.PARA1_CODE,A1.PARA2_CODE,
			SUM(CASE WHEN ISNULL(A5.issue_type,0)=0 THEN 1 ELSE -1 END* A6.QUANTITY) AS ISSUED_QTY
			--SUM(A6.QUANTITY) AS ISSUED_QTY
			FROM BOM_ISSUE_DET A4 (NOLOCK) 
			JOIN BOM_ISSUE_MST A5  (NOLOCK) ON A5.ISSUE_ID=A4.ISSUE_ID
			JOIN BOM_ISSUE_REF A6  (NOLOCK) ON A5.ISSUE_ID=A6.BOM_ISSUE_ID AND A4.ROW_ID=A6.BOM_DET_ROW_ID
			JOIN ORD_PLAN_BOM_DET A1  (NOLOCK) ON A1.ROW_ID=A6.ORD_PLAN_BOM_DET_ROW_ID
			WHERE A5.CANCELLED=0 --AND A1.MEMO_ID='AK0111900000AK00000061'
			and  a5.JOBWORK_ISSUE_ID=@CWHERE
			GROUP BY A1.JOB_CODE,A1.MEMO_ID, A1.REF_ROW_ID,A1.ARTICLE_CODE,A1.PARA1_CODE,A1.PARA2_CODE--,A6.ORD_PLAN_BOM_DET_ROW_ID
		)X ON X.REF_ROW_ID=T.ORD_PLAN_DET_ROW_ID	AND X.MEMO_ID=T.ORD_PLAN_MEMO_ID
		AND X.ARTICLE_CODE=T.ARTICLE_CODE AND X.PARA1_CODE=T.PARA1_CODE AND X.PARA2_CODE=T.PARA2_CODE
		AND X.JOB_CODE =T.JOB_CODE 
		LEFT OUTER JOIN UOM_CONVERSION UC ON UC.UOM_CODE=I.UOM_CODE
        LEFT OUTER JOIN BOM_UOM BU ON BU.CONVERSION_UOM_CODE=UC.CONVERSION_UOM_CODE 
		WHERE ISNULL(X.ISSUED_QTY,0)>0
		
		;WITH BOM_ISSUE_SUMMARY
		AS
		(
			SELECT A.*,B.MEMO_ID AS ORD_PLAN_MEMO_ID,B.ROW_ID AS ORD_PLAN_DET_ROW_ID,
			CONVERT(NUMERIC(14,2),((A.AVG_QUANTITY+A.ADD_AVG_QUANTITY) * B.ISSUED_QTY)) AS JW_REQ_QTY		
			FROM ORD_PLAN_BOM_DET A (NOLOCK)
			JOIN
			(
				SELECT D.MEMO_ID,C.ROW_ID,C.ARTICLE_CODE,C.PARA1_CODE,C.PARA2_CODE,a.job_code  ,SUM(A.QUANTITY) AS ISSUED_QTY
				FROM JOBWORK_ISSUE_DET A (NOLOCK)
				JOIN JOBWORK_ISSUE_MST A1 (NOLOCK) ON A1.ISSUE_ID=A.ISSUE_ID
				JOIN ORD_PLAN_BARCODE_DET B (NOLOCK) ON B.PRODUCT_CODE=A.PRODUCT_CODE
				JOIN ORD_PLAN_DET C (NOLOCK) ON C.ROW_ID=B.REFROW_ID
				JOIN ORD_PLAN_MST D (NOLOCK) ON D.MEMO_ID=C.MEMO_ID
				WHERE D.CANCELLED=0 AND ISNULL(D.SHORT_CLOSE,0)=0 AND A1.CANCELLED=0 AND A.ISSUE_ID=@CWHERE
				GROUP BY D.MEMO_ID,C.ROW_ID,C.ARTICLE_CODE,C.PARA1_CODE,C.PARA2_CODE,a.job_code 
			)B ON B.ROW_ID=A.REF_ROW_ID and a.JOB_CODE =b.job_code 
			--JOIN JOBWORK_ISSUE_BOM C (NOLOCK) ON C.ISSUE_ID=@CWHERE
			--AND C.ARTICLE_CODE=A.ARTICLE_CODE 
			--AND C.PARA1_CODE=A.PARA1_CODE 
			--AND C.PARA2_CODE=A.PARA2_CODE
		)
		--SELECT T.* ,K.SECTION_NAME, J.SUB_SECTION_NAME, C.PARA1_NAME,        
		--	 D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,B.ARTICLE_NO,         
		--	 B.ARTICLE_NAME,I.UOM_NAME,
		--	 CONVERT(NUMERIC(14,2),(T.JW_REQ_QTY)-ISNULL(X.ISSUED_QTY,0)) AS REQ_QTY,
		--	 ISNULL(X.ISSUED_QTY,0) AS ISSUED_QTY 
		SELECT CAST(0 AS BIT) AS CHK,T.ARTICLE_CODE,T.PARA1_CODE,T.PARA2_CODE ,C.PARA1_NAME,        
			 D.PARA2_NAME,B.ARTICLE_NO,B.ARTICLE_NAME,I.UOM_NAME,
			  SUM(QUANTITY) AS QUANTITY,ISNULL(SUM(ISSUED_QTY),0) AS ISSUED_QTY,
			  CONVERT(NUMERIC(14,2),SUM(ISNULL(X.ISSUED_QTY,0))) AS REQ_QTY,
			  
			  CONVERT(NUMERIC(14,2), sum(CASE WHEN ISNULL(UC.CONVERSION_VALUE,0) =0 THEN ISNULL(X.ISSUED_QTY,0)
	         ELSE (ISNULL(X.ISSUED_QTY,0))/ISNULL(UC.CONVERSION_VALUE,0) END  )) AS STOCK_QTY,
			  CAST(0 AS NUMERIC(14,2)) AS SCANNED_QTY
			  ,SUM(JW_REQ_QTY) AS JW_REQ_QTY,
			  BU.CONVERSION_UOM_NAME AS BOM_UOM,
		      UC.Conversion_Value,B.coding_scheme
		FROM BOM_ISSUE_SUMMARY T 
		JOIN ARTICLE B (NOLOCK) ON T.ARTICLE_CODE = B.ARTICLE_CODE         
		JOIN PARA1 C (NOLOCK) ON T.PARA1_CODE = C.PARA1_CODE        
		JOIN PARA2 D (NOLOCK) ON T.PARA2_CODE = D.PARA2_CODE        
		JOIN PARA3 E (NOLOCK) ON T.PARA3_CODE = E.PARA3_CODE        
		JOIN PARA4 F (NOLOCK) ON T.PARA4_CODE = F.PARA4_CODE        
		JOIN PARA5 G (NOLOCK) ON T.PARA5_CODE = G.PARA5_CODE        
		JOIN PARA6 H (NOLOCK) ON T.PARA6_CODE = H.PARA6_CODE        
		JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE        
		JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE        
		JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE 
		JOIN
		(
			SELECT A1.JOB_CODE , A1.MEMO_ID, A1.REF_ROW_ID,A1.ARTICLE_CODE,A1.PARA1_CODE,A1.PARA2_CODE,
			SUM(CASE WHEN ISNULL(A5.issue_type,0)=0 THEN 1 ELSE -1 END* A6.QUANTITY) AS ISSUED_QTY
			--SUM(A6.QUANTITY) AS ISSUED_QTY
			FROM BOM_ISSUE_DET A4 (NOLOCK) 
			JOIN BOM_ISSUE_MST A5  (NOLOCK) ON A5.ISSUE_ID=A4.ISSUE_ID
			JOIN BOM_ISSUE_REF A6  (NOLOCK) ON A5.ISSUE_ID=A6.BOM_ISSUE_ID AND A4.ROW_ID=A6.BOM_DET_ROW_ID
			JOIN ORD_PLAN_BOM_DET A1  (NOLOCK) ON A1.ROW_ID=A6.ORD_PLAN_BOM_DET_ROW_ID
			WHERE A5.CANCELLED=0 --AND A1.MEMO_ID='AK0111900000AK00000061'
			and a5.JOBWORK_ISSUE_ID=@CWHERE
			GROUP BY A1.JOB_CODE ,A1.MEMO_ID, A1.REF_ROW_ID,A1.ARTICLE_CODE,A1.PARA1_CODE,A1.PARA2_CODE--,A6.ORD_PLAN_BOM_DET_ROW_ID
		)X ON X.REF_ROW_ID=T.ORD_PLAN_DET_ROW_ID	AND X.MEMO_ID=T.ORD_PLAN_MEMO_ID
		AND X.ARTICLE_CODE=T.ARTICLE_CODE AND X.PARA1_CODE=T.PARA1_CODE AND X.PARA2_CODE=T.PARA2_CODE
		 AND X.JOB_CODE =T.JOB_CODE
		LEFT OUTER JOIN UOM_CONVERSION UC ON UC.UOM_CODE=I.UOM_CODE
        LEFT OUTER JOIN BOM_UOM BU ON BU.CONVERSION_UOM_CODE=UC.CONVERSION_UOM_CODE
		GROUP BY T.ARTICLE_CODE,T.PARA1_CODE,T.PARA2_CODE ,C.PARA1_NAME,        
		D.PARA2_NAME,B.ARTICLE_NO,B.ARTICLE_NAME,I.UOM_NAME,BU.CONVERSION_UOM_NAME ,
		UC.Conversion_Value,B.coding_scheme
	    HAVING ISNULL(SUM(ISSUED_QTY),0)>0
	
	END
	ELSE 
	BEGIN
	    
	IF OBJECT_ID ('TEMPDB..#TMPJWI','U') IS NOT NULL
	 DROP TABLE #TMPJWI

	SELECT D.MEMO_ID,C.ROW_ID,C.ARTICLE_CODE,C.PARA1_CODE,C.PARA2_CODE,a.job_code,SUM(A.QUANTITY) AS ISSUED_QTY,JobCardType
	INTO #TMPJWI
	FROM JOBWORK_ISSUE_DET A (NOLOCK)
	JOIN JOBWORK_ISSUE_MST A1 (NOLOCK) ON A1.ISSUE_ID=A.ISSUE_ID
	JOIN ORD_PLAN_BARCODE_DET B (NOLOCK) ON B.PRODUCT_CODE=A.PRODUCT_CODE
	JOIN ORD_PLAN_DET C (NOLOCK) ON C.ROW_ID=B.REFROW_ID
	JOIN ORD_PLAN_MST D (NOLOCK) ON D.MEMO_ID=C.MEMO_ID
	WHERE D.CANCELLED=0 AND ISNULL(D.SHORT_CLOSE,0)=0 AND A1.CANCELLED=0 AND A.ISSUE_ID=@CWHERE
	GROUP BY D.MEMO_ID,C.ROW_ID,C.ARTICLE_CODE,C.PARA1_CODE,C.PARA2_CODE,a.job_code,JobCardType


	IF OBJECT_ID ('TEMPDB..#TMPSTCOK','U') IS NOT NULL
		DROP TABLE #TMPSTCOK

	 Declare @bJOBCARDTYPE int 
	 select @bJOBCARDTYPE=JOBCARDTYPE from #TMPJWI


	IF isnull(@bJOBCARDTYPE,0)=0
	 BEGIN

		;WITH BOM_ISSUE
		AS
		(

			SELECT A.*,B.MEMO_ID AS ORD_PLAN_MEMO_ID,B.ROW_ID AS ORD_PLAN_DET_ROW_ID,
			CONVERT(NUMERIC(14,2),((A.AVG_QUANTITY+A.ADD_AVG_QUANTITY) * B.ISSUED_QTY)) AS JW_REQ_QTY
			FROM ORD_PLAN_BOM_DET A (NOLOCK)
			JOIN  #TMPJWI B ON B.ROW_ID=A.REF_ROW_ID AND A.JOB_CODE =B.JOB_CODE 
	
		)
		SELECT @bJOBCARDTYPE as JOBCARDTYPE, T.* ,K.SECTION_NAME, J.SUB_SECTION_NAME, C.PARA1_NAME,        
			 D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,B.ARTICLE_NO,         
			 B.ARTICLE_NAME,I.UOM_NAME,
			 CONVERT(NUMERIC(14,2),(T.JW_REQ_QTY)-ISNULL(X.ISSUED_QTY,0)) AS REQ_QTY,
			 ISNULL(X.ISSUED_QTY,0) AS ISSUED_QTY ,
			 BU.CONVERSION_UOM_NAME AS BOM_UOM,

			 CONVERT(NUMERIC(14,2), CASE WHEN ISNULL(UC.CONVERSION_VALUE,0) =0 THEN (T.JW_REQ_QTY)-ISNULL(X.ISSUED_QTY,0)
			 ELSE ((T.JW_REQ_QTY)-ISNULL(X.ISSUED_QTY,0))/ISNULL(UC.CONVERSION_VALUE,0) END  ) AS STOCK_QTY,

			 UC.CONVERSION_VALUE,B.CODING_SCHEME
		FROM BOM_ISSUE T 
		JOIN ARTICLE B (NOLOCK) ON T.ARTICLE_CODE = B.ARTICLE_CODE         
		JOIN PARA1 C (NOLOCK) ON T.PARA1_CODE = C.PARA1_CODE        
		JOIN PARA2 D (NOLOCK) ON T.PARA2_CODE = D.PARA2_CODE        
		JOIN PARA3 E (NOLOCK) ON T.PARA3_CODE = E.PARA3_CODE        
		JOIN PARA4 F (NOLOCK) ON T.PARA4_CODE = F.PARA4_CODE        
		JOIN PARA5 G (NOLOCK) ON T.PARA5_CODE = G.PARA5_CODE        
		JOIN PARA6 H (NOLOCK) ON T.PARA6_CODE = H.PARA6_CODE        
		JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE        
		JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE        
		JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE 
		LEFT OUTER JOIN 
		(
			SELECT A1.JOB_CODE ,A1.MEMO_ID, A1.REF_ROW_ID,A1.ARTICLE_CODE,A1.PARA1_CODE,A1.PARA2_CODE,
			SUM(CASE WHEN ISNULL(A5.ISSUE_TYPE,0)=0 THEN 1 ELSE -1 END* A6.QUANTITY) AS ISSUED_QTY
			--SUM(A6.QUANTITY) AS ISSUED_QTY
			FROM BOM_ISSUE_DET A4 (NOLOCK) 
			JOIN BOM_ISSUE_MST A5  (NOLOCK) ON A5.ISSUE_ID=A4.ISSUE_ID
			JOIN BOM_ISSUE_REF A6  (NOLOCK) ON A5.ISSUE_ID=A6.BOM_ISSUE_ID AND A4.ROW_ID=A6.BOM_DET_ROW_ID
			JOIN ORD_PLAN_BOM_DET A1  (NOLOCK) ON A1.ROW_ID=A6.ORD_PLAN_BOM_DET_ROW_ID
			WHERE A5.CANCELLED=0 --AND A1.MEMO_ID='AK0111900000AK00000061'
			AND  A5.JOBWORK_ISSUE_ID=@CWHERE
			GROUP BY A1.JOB_CODE ,A1.MEMO_ID, A1.REF_ROW_ID,A1.ARTICLE_CODE,A1.PARA1_CODE,A1.PARA2_CODE--,A6.ORD_PLAN_BOM_DET_ROW_ID
		)X ON X.REF_ROW_ID=T.ORD_PLAN_DET_ROW_ID	AND X.MEMO_ID=T.ORD_PLAN_MEMO_ID
		AND X.ARTICLE_CODE=T.ARTICLE_CODE AND X.PARA1_CODE=T.PARA1_CODE AND X.PARA2_CODE=T.PARA2_CODE
		AND X.JOB_CODE =T.JOB_CODE 
		LEFT OUTER JOIN UOM_CONVERSION UC ON UC.UOM_CODE=I.UOM_CODE
		LEFT OUTER JOIN BOM_UOM BU ON BU.CONVERSION_UOM_CODE=UC.CONVERSION_UOM_CODE 


  END
  ELSE
  begin
       	;WITH BOM_ISSUE1
		AS
		(

			SELECT A.*,B.MEMO_ID AS ORD_PLAN_MEMO_ID,B.ROW_ID AS ORD_PLAN_DET_ROW_ID,
			CONVERT(NUMERIC(14,2),((A.AVG_QUANTITY+A.ADD_AVG_QUANTITY) * B.ISSUED_QTY)) AS JW_REQ_QTY,b.JobCardType			
			FROM ORD_PLAN_BOM_DET A (NOLOCK)
			JOIN  #TMPJWI B ON B.ROW_ID=A.REF_ROW_ID and a.JOB_CODE =b.job_code 
	
		)
		SELECT @bJOBCARDTYPE as JOBCARDTYPE, T.* ,'' SECTION_NAME, ''  SUB_SECTION_NAME, '' PARA1_NAME,        
			 ''  PARA2_NAME,''  PARA3_NAME,'' PARA4_NAME,''  PARA5_NAME,'' PARA6_NAME,'' ARTICLE_NO,         
			 '' ARTICLE_NAME,'' UOM_NAME,
			 CONVERT(NUMERIC(14,2),9999) AS REQ_QTY,
			 9999 AS ISSUED_QTY ,
			 '' AS BOM_UOM,
			9999 AS STOCK_QTY,

			 0 Conversion_Value,1 coding_scheme
		FROM #TMPJWI a
		left join BOM_ISSUE1 T on 1=1


  end

	
	;WITH BOM_ISSUE_SUMMARY
	AS
	(

		SELECT A.*,B.MEMO_ID AS ORD_PLAN_MEMO_ID,B.ROW_ID AS ORD_PLAN_DET_ROW_ID,
		CONVERT(NUMERIC(14,2),((A.AVG_QUANTITY+A.ADD_AVG_QUANTITY) * B.ISSUED_QTY)) AS JW_REQ_QTY
		FROM ORD_PLAN_BOM_DET A (NOLOCK)
		JOIN #TMPJWI B ON B.ROW_ID=A.REF_ROW_ID and a.job_code=b.job_code 
		LEFT JOIN art_bom AM (NOLOCK) ON AM.article_code =B.ARTICLE_CODE 
		AND AM.BOM_ARTICLE_CODE =A.ARTICLE_CODE AND A.JOB_CODE =AM.JOB_CODE 
		
		
	)
	SELECT CAST(0 AS BIT) AS CHK,T.ARTICLE_CODE,T.PARA1_CODE,T.PARA2_CODE ,C.PARA1_NAME,        
		 D.PARA2_NAME,B.ARTICLE_NO,B.ARTICLE_NAME,I.UOM_NAME,
		  SUM(QUANTITY) AS QUANTITY,

		  CONVERT(NUMERIC(14,3), CASE WHEN  ISNULL(UC.CONVERSION_VALUE,0)=0 THEN  ISNULL(SUM(ISSUED_QTY),0) 
		  ELSE ISNULL(SUM(ISSUED_QTY),0)/ UC.CONVERSION_VALUE END) AS ISSUED_QTY, --ISSUED_QTY
		
		  CONVERT(NUMERIC(14,3),SUM((T.JW_REQ_QTY)-ISNULL(X.ISSUED_QTY,0))) AS REQ_QTY,--PENDING_BOM_QTY
		  CAST(0 AS NUMERIC(14,3)) AS SCANNED_QTY
		  ,CONVERT(NUMERIC(14,3),SUM(JW_REQ_QTY)) AS JW_REQ_QTY, --TOTAL_BOM_PENDING_QTY
		  BU.CONVERSION_UOM_NAME AS BOM_UOM,

		  SUM(CONVERT(NUMERIC(14,3), CASE WHEN ISNULL(UC.CONVERSION_VALUE,0) =0 THEN (T.JW_REQ_QTY)
	     ELSE ((T.JW_REQ_QTY))/ISNULL(UC.CONVERSION_VALUE,0) END  )) AS STOCK_REQ_QTY,--TOTAL_STOCK_REQ_QTY

		 SUM(CONVERT(NUMERIC(14,3), CASE WHEN ISNULL(UC.CONVERSION_VALUE,0) =0 THEN (T.JW_REQ_QTY)-ISNULL(ISSUED_QTY,0)
	     ELSE ((T.JW_REQ_QTY)-ISNULL(ISSUED_QTY,0))/ISNULL(UC.CONVERSION_VALUE,0) END  )) AS STOCK_QTY, --PENDING_STOCK_REQ_QTY

		 UC.CONVERSION_VALUE,B.CODING_SCHEME,
		 isnull(T.TOL_PER,0) as TOL_PER,
		 CONVERT(NUMERIC(14,3),SUM((T.JW_REQ_QTY)-ISNULL(X.ISSUED_QTY,0)))-
		 CASE WHEN isnull(T.TOL_PER,0)= 0 THEN  0
		 ELSE  CONVERT(NUMERIC(14,3),SUM((T.JW_REQ_QTY)-ISNULL(X.ISSUED_QTY,0)))*isnull(T.TOL_PER,0)/100 END as FROM_REQ_QTY,
		 
		  CONVERT(NUMERIC(14,3),SUM((T.JW_REQ_QTY)-ISNULL(X.ISSUED_QTY,0)))+
		 CASE WHEN isnull(T.TOL_PER,0)= 0 THEN  0
		 ELSE  CONVERT(NUMERIC(14,3),SUM((T.JW_REQ_QTY)-ISNULL(X.ISSUED_QTY,0)))*isnull(T.TOL_PER,0)/100 END as TO_REQ_QTY


    INTO #TMPSTCOK
	FROM BOM_ISSUE_SUMMARY T 
	JOIN ARTICLE B (NOLOCK) ON T.ARTICLE_CODE = B.ARTICLE_CODE         
	JOIN PARA1 C (NOLOCK) ON T.PARA1_CODE = C.PARA1_CODE        
	JOIN PARA2 D (NOLOCK) ON T.PARA2_CODE = D.PARA2_CODE        
	JOIN PARA3 E (NOLOCK) ON T.PARA3_CODE = E.PARA3_CODE        
	JOIN PARA4 F (NOLOCK) ON T.PARA4_CODE = F.PARA4_CODE        
	JOIN PARA5 G (NOLOCK) ON T.PARA5_CODE = G.PARA5_CODE        
	JOIN PARA6 H (NOLOCK) ON T.PARA6_CODE = H.PARA6_CODE        
	JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE        
	JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE        
	JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE 
	LEFT OUTER JOIN
	(
		SELECT A1.JOB_CODE , A1.MEMO_ID, A1.REF_ROW_ID,A1.ARTICLE_CODE,A1.PARA1_CODE,A1.PARA2_CODE,
		SUM(CASE WHEN ISNULL(A5.issue_type,0)=0 THEN 1 ELSE -1 END* A6.QUANTITY) AS ISSUED_QTY
		--SUM(A6.QUANTITY) AS ISSUED_QTY
		FROM BOM_ISSUE_DET A4 (NOLOCK) 
		JOIN BOM_ISSUE_MST A5  (NOLOCK) ON A5.ISSUE_ID=A4.ISSUE_ID
		JOIN BOM_ISSUE_REF A6  (NOLOCK) ON A5.ISSUE_ID=A6.BOM_ISSUE_ID AND A4.ROW_ID=A6.BOM_DET_ROW_ID
		JOIN ORD_PLAN_BOM_DET A1  (NOLOCK) ON A1.ROW_ID=A6.ORD_PLAN_BOM_DET_ROW_ID
		WHERE A5.CANCELLED=0 --AND A1.MEMO_ID='AK0111900000AK00000061'
		and  a5.JOBWORK_ISSUE_ID=@CWHERE
		GROUP BY A1.JOB_CODE ,A1.MEMO_ID, A1.REF_ROW_ID,A1.ARTICLE_CODE,A1.PARA1_CODE,A1.PARA2_CODE--,A6.ORD_PLAN_BOM_DET_ROW_ID
	)X ON X.REF_ROW_ID=T.ORD_PLAN_DET_ROW_ID	AND X.MEMO_ID=T.ORD_PLAN_MEMO_ID
	AND X.ARTICLE_CODE=T.ARTICLE_CODE AND X.PARA1_CODE=T.PARA1_CODE AND X.PARA2_CODE=T.PARA2_CODE
	AND X.JOB_CODE =T.JOB_CODE 
	LEFT OUTER JOIN UOM_CONVERSION UC ON UC.UOM_CODE=I.UOM_CODE
    LEFT OUTER JOIN BOM_UOM BU ON BU.CONVERSION_UOM_CODE=UC.CONVERSION_UOM_CODE 
	GROUP BY T.ARTICLE_CODE,T.PARA1_CODE,T.PARA2_CODE ,C.PARA1_NAME,        
	 D.PARA2_NAME,B.ARTICLE_NO,B.ARTICLE_NAME,I.UOM_NAME,BU.CONVERSION_UOM_NAME ,
     UC.Conversion_Value,B.coding_scheme,isnull(t.TOL_PER,0)


	 SELECT * ,
	     CONVERT(NUMERIC(14,3), CASE WHEN ISNULL(T.TOL_PER,0)=0 THEN STOCK_QTY
		 ELSE ISNULL(STOCK_QTY,0)-(ISNULL(STOCK_QTY,0)*ISNULL(T.TOL_PER,0)/100) END)  AS FROM_STOCK_REQ_QTY,
		 CONVERT(NUMERIC(14,3), CASE WHEN ISNULL(T.TOL_PER,0)=0 THEN STOCK_QTY
		 ELSE ISNULL(STOCK_QTY,0)+(ISNULL(STOCK_QTY,0)*ISNULL(T.TOL_PER,0)/100) END)  AS TO_STOCK_REQ_QTY

	 FROM #TMPSTCOK T


	
	
 END
	
	
END
