CREATE PROCEDURE SP_SALARY_CREDIT_VOUCHER        
--WITH ENCRYPTION

AS        
 DECLARE @REF_CODE VARCHAR(50),@QRY NVARCHAR(MAX),@DRVAL VARCHAR(50),@FRSTVAL INT        
        ,@IDVAL VARCHAR(50),@IDNO VARCHAR(50),@FINYEAR VARCHAR(10),@CLOCATIONID VARCHAR(10)        
        ,@NSTEP VARCHAR(100),@CERRORMSG NVARCHAR(MAX),@COMPANY_CODE VARCHAR(10),@CRAMT NUMERIC(9,3)        
        ,@DRAMT NUMERIC(9,3),@AC_CODE VARCHAR(50),@EMP_CODE VARCHAR(100)        
        ,@CQRY NVARCHAR(MAX),@E_DATE DATETIME,@SAL_AC_CODE VARCHAR(40)        
 DECLARE @TEMP_ERROE TABLE (TYPE VARCHAR(100),VALUE VARCHAR(MAX),MESSAGE VARCHAR(MAX))      
 DECLARE @TEMP_VOUCHER_POSTING_DATA TABLE (EMP_CODE VARCHAR(100),DATE DATETIME,NAME VARCHAR(100),BASIC NUMERIC(14,2),    
         HRA NUMERIC(14,2),CONV_ALLOW NUMERIC(14,2),MEDICAL NUMERIC(14,2),OT_AMT NUMERIC(14,2),    
         PF NUMERIC(14,2),ESI NUMERIC(14,2),NET_SALARY NUMERIC(14,2))                              
 DECLARE @DRCRVAL TABLE (DRCRVAL VARCHAR(50))        
 DECLARE @CURR_TABLE  TABLE (REF_CODE VARCHAR(20),REF_DATE DATETIME)        
 BEGIN        
 BEGIN TRY        
 BEGIN TRAN        
      SET @NSTEP ='10'        
   SET @COMPANY_CODE  ='01'        
   SELECT @CLOCATIONID = DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID          
   SELECT @SAL_AC_CODE = ISNULL(VALUE,'')  FROM CONFIG WHERE  CONFIG_OPTION='SALARY ACCOUNT'        
         
   SET @CQRY =  N' IF NOT EXISTS ( SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = (    
       SELECT OBJECT_ID  FROM SYS.OBJECTS WHERE NAME =''TEMP_VOUCHER_POSTING_MAPPING'') AND NAME =''COL_NAME'' )    
       ALTER TABLE TEMP_VOUCHER_POSTING_MAPPING ADD [COL_NAME] VARCHAR(50)   '    
   PRINT @CQRY    
   EXEC SP_EXECUTESQL @CQRY      
       
   SET @CQRY =  N' IF NOT EXISTS ( SELECT * FROM SYS.COLUMNS WHERE OBJECT_ID = (    
       SELECT OBJECT_ID  FROM SYS.OBJECTS WHERE NAME =''TEMP_VOUCHER_POSTING_MAPPING'') AND NAME =''X_TYPE'' )    
       ALTER TABLE TEMP_VOUCHER_POSTING_MAPPING ADD [X_TYPE] VARCHAR(50)   '    
   PRINT @CQRY    
   EXEC SP_EXECUTESQL @CQRY      
   SET @CQRY =  N' UPDATE TEMP_VOUCHER_POSTING_MAPPING SET [COL_NAME] =MASTER_COL_EXPR,X_TYPE=MAPPED_TYPE  '    
   PRINT @CQRY    
   EXEC SP_EXECUTESQL @CQRY      
   SET @CQRY =  N' UPDATE TEMP_VOUCHER_POSTING_MAPPING SET [COL_NAME]='''' ,X_TYPE = '''' WHERE [COL_NAME] IN (''EMP_CODE'',''DATE'')'      
   PRINT @CQRY    
   EXEC SP_EXECUTESQL @CQRY      
   SET @NSTEP ='20'        
       
   INSERT INTO @TEMP_VOUCHER_POSTING_DATA (EMP_CODE,DATE,BASIC,HRA,CONV_ALLOW,MEDICAL,OT_AMT,PF,ESI,NET_SALARY)    
   SELECT EMP_CODE,DATE,ISNULL(CONVERT(NUMERIC(14,2), [BASIC]),0) AS BASIC,ISNULL(CONVERT(NUMERIC(14,2), HRA),0) AS HRA,    
   ISNULL(CONVERT(NUMERIC(14,2) ,CONV_ALLOW),0) AS CONV_ALLOW,ISNULL(CONVERT(NUMERIC(14,2) ,MEDICAL),0) AS MEDICAL,    
   ISNULL(CONVERT(NUMERIC(14,2), OT_AMT),0) AS OT_AMT,ISNULL(CONVERT(NUMERIC(14,2) ,PF),0) AS PF,    
   ISNULL(CONVERT(NUMERIC(14,2), ESI),0) AS ESI,ISNULL(CONVERT(NUMERIC(14,2), NET_SALARY),0) AS NET_SALARY    
   FROM TEMP_VOUCHER_POSTING_DATA WHERE EMP_CODE <> '' OR EMP_CODE IS NOT NULL    
       
   IF ISNULL(@SAL_AC_CODE,'') =''          
   BEGIN          
    INSERT INTO  @TEMP_ERROE (TYPE,VALUE,MESSAGE)        
    SELECT 'ALERT' AS TYPE,'DEFINE SALARY ACCOUNT IN CONFIG' AS VALUE,'INVALID SALARY ACCOUNT CODE' AS MESSAGE           
   END                 
   SET @NSTEP ='30'        
   --SELECT @REF_CODE = [COL_NAME] FROM TEMP_VOUCHER_POSTING_MAPPING WHERE [COL_NAME]  ='EMP_CODE'      
  
  
       
   IF EXISTS (SELECT EMP_CODE FROM @TEMP_VOUCHER_POSTING_DATA WHERE EMP_CODE ='' OR EMP_CODE IS NULL  )        
    BEGIN        
      INSERT INTO  @TEMP_ERROE (TYPE,VALUE,MESSAGE)        
      SELECT 'ALERT' AS TYPE,'NOT FOUND EMP CODE IS NULL OR BLANK:  ' AS VALUE,'INVALID EMPLOYEE CODE ' AS MESSAGE FROM @TEMP_VOUCHER_POSTING_DATA 
      WHERE EMP_CODE ='' OR EMP_CODE IS NULL       
    END   
  
  
      
          
  -- CHECK EMPLOYEE CODE EXIST OR NOT        
  IF EXISTS (SELECT EMP_CODE FROM @TEMP_VOUCHER_POSTING_DATA WHERE EMP_CODE NOT IN (SELECT REF_CODE FROM LM01106_LINK))        
  BEGIN        
   INSERT INTO  @TEMP_ERROE (TYPE,VALUE,MESSAGE)        
   SELECT 'ALERT' AS TYPE,'NOT FOUND EMP CODE:  '+ EMP_CODE AS VALUE,'INVALID EMPLOYEE CODE ' AS MESSAGE FROM @TEMP_VOUCHER_POSTING_DATA         
   WHERE EMP_CODE NOT IN (SELECT REF_CODE FROM LM01106_LINK  )        
  END 
          
  SET @NSTEP ='40'        
  -- CHECK DUPLICATE ENTRY OF ANY EMPLOYEE CODE IN GROUP BY EMP CODE AND DATE        
  INSERT INTO  @TEMP_ERROE (TYPE,VALUE,MESSAGE)        
  SELECT 'ALERT' AS TYPE,'FOUND DUPLICATE EMP CODE:  '+ EMP_CODE AS VALUE,'DUPLICATE EMPLOYEE CODE ' AS MESSAGE FROM @TEMP_VOUCHER_POSTING_DATA GROUP BY EMP_CODE,DATE        
  HAVING COUNT(EMP_CODE)>1        
  -- CHECK SALARY IS ALREADY EXIST OR NOT        
  SET @NSTEP ='50'        
  INSERT INTO  @TEMP_ERROE (TYPE,VALUE,MESSAGE)        
  SELECT 'ALERT' AS TYPE,'SALARY ALREADY EXIST FOR EMP CODE:  '+ PP.EMP_CODE AS VALUE,'SALARY ALREADY EXIST' AS MESSAGE        
  FROM @TEMP_VOUCHER_POSTING_DATA AS PP JOIN LM01106_LINK AS LL ON PP.EMP_CODE = LL.REF_CODE JOIN         
  VOUCHER_IMPORT_LOG AS VIL ON VIL.AC_CODE = LL.AC_CODE         
  AND MONTH(VIL.DATE) = MONTH(PP.DATE) AND YEAR(VIL.DATE)= YEAR(PP.DATE)        
  SET @NSTEP ='60'       
      
       
      
 SET @CQRY =N' SELECT CASE WHEN X_TYPE =''DR'' THEN ''(''+COL_NAME+'')'' ELSE ''-(''+COL_NAME+'')'' END AS TYPE11         
 FROM TEMP_VOUCHER_POSTING_MAPPING WHERE X_TYPE IN (''DR'',''CR'')    '    
 INSERT INTO @DRCRVAL (DRCRVAL)        
 EXEC SP_EXECUTESQL @CQRY     
      
      
      
    SET @NSTEP ='70'        
    SET @QRY=''        
    SET @FRSTVAL =0        
    WHILE ( SELECT TOP 1 'U' FROM @DRCRVAL ) IS NOT NULL        
     BEGIN        
        SELECT TOP 1 @DRVAL =  DRCRVAL FROM @DRCRVAL        
  IF @FRSTVAL =0        
   SET @QRY = @QRY + ' ( ' + @DRVAL  +' ) '        
  ELSE        
   SET @QRY = @QRY + ' + ( ' + @DRVAL  +' ) '        
  DELETE FROM @DRCRVAL WHERE DRCRVAL = @DRVAL        
  SET @FRSTVAL = @FRSTVAL + 1        
 END        
 SET @NSTEP ='80'         
 IF OBJECT_ID ('TEMP_SALARY','U') IS NOT NULL    
             DROP TABLE  TEMP_SALARY    
      
 SELECT * INTO  TEMP_SALARY FROM @TEMP_VOUCHER_POSTING_DATA     
      
            
 SET @QRY= N'SELECT ''ALERT'' AS TYPE,''CHECK SALARY FOR EMP CODE :''+EMP_CODE AS VALUE, ''INVALID NET SALARY'' AS MESSAGE FROM TEMP_SALARY          
 GROUP BY EMP_CODE,DATE HAVING SUM( '+ @QRY +' ) <> 0 '    
 PRINT @QRY  
 PRINT 'AA'     
 INSERT INTO  @TEMP_ERROE (TYPE,VALUE,MESSAGE)     
 EXEC SP_EXECUTESQL @QRY     
      
      
 SET @NSTEP ='90'        
 IF EXISTS ( SELECT TOP 1 'U' FROM @TEMP_ERROE)        
 BEGIN        
  SET @CERRORMSG ='ALERT'        
  SELECT * FROM @TEMP_ERROE        
  GOTO EXITPROC        
 END           
  SET @NSTEP ='200'        
  PRINT 'START CURSOR1'         
             
 IF CURSOR_STATUS('GLOBAL','PRDD') IN (0,1)          
 BEGIN          
  CLOSE PRDD          
  DEALLOCATE PRDD          
 END         
             
 DECLARE PRDD CURSOR FOR SELECT  EMP_CODE,DATE AS E_DATE  FROM @TEMP_VOUCHER_POSTING_DATA             
    PRINT 'START CURSOR111'         
    OPEN PRDD        
    FETCH NEXT FROM PRDD INTO @EMP_CODE,@E_DATE        
    WHILE @@FETCH_STATUS =0        
    BEGIN        
         PRINT @E_DATE        
         SET @FINYEAR =@COMPANY_CODE+DBO.FN_GETFINYEAR (@E_DATE)         
   SELECT  @DRAMT=ISNULL(BASIC,0)+ISNULL(HRA,0)+ISNULL(CONV_ALLOW,0)+ISNULL(MEDICAL,0)+ISNULL(OT_AMT,0),        
           @CRAMT = ISNULL(ESI,0)+ISNULL(NET_SALARY,0)+ISNULL(PF,0)        
           FROM @TEMP_VOUCHER_POSTING_DATA WHERE EMP_CODE = @EMP_CODE AND DATE = @E_DATE        
                    
   SELECT @AC_CODE = AC_CODE FROM LM01106_LINK WHERE REF_CODE = @EMP_CODE        
   PRINT 'FINYEAR  : '+@FINYEAR        
   EXEC GETNEXTKEY 'VM01106', 'VM_ID', '7', '', 1,@FINYEAR ,0, @IDNO OUTPUT            
   PRINT 'NO--- : '+@IDNO        
   SET @NSTEP ='300'        
   SET @IDVAL = @CLOCATIONID + @FINYEAR+ REPLICATE('0', 8-LEN(LTRIM(RTRIM(@IDNO)))) + LTRIM(RTRIM(@IDNO))            
   IF @IDVAL IS NULL              
   BEGIN            
    SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT VOUCHER MASTER....'            
    GOTO EXITPROC            
   END            
   PRINT 'MAX VALUE :  '+@IDVAL         
   SET @CQRY =  N'INSERT INTO VM01106 (VM_ID,VOUCHER_NO,VOUCHER_DT,VOUCHER_CODE,DRTOTAL,        
   CRTOTAL,DEPT_ID,FIN_YEAR, APPROVED,USER_CODE,BILL_NO,CASH_VOUCHER ,BILL_DT,BILL_TYPE,REF_NO          
   ,LAST_UPDATE,COMPANY_CODE,SALE_VOUCHER,SENT_TO_HO,MEMO,REMINDER_DAYS,  
   OP_ENTRY,LR_DT,LR_NO,ANGADIA_CODE,QUANTITY) VALUES         
   ('''+@IDVAL +''','''+@IDNO +''','''+CAST(CAST(@E_DATE AS DATETIME) AS VARCHAR(100))+''',''0000000001'','+STR(@DRAMT,14,2) +','+STR(@CRAMT,14,2)  +','''+@CLOCATIONID+''',        
   '''+@FINYEAR +''',1,''0000000'','''',1,GETDATE(),'''','''',GETDATE(),'''+@COMPANY_CODE +''',0,1,0,0,  
   0,'''','''',''0000000'',0 )'        
   SET @NSTEP ='400'        
   PRINT @CQRY        
   EXEC SP_EXECUTESQL @CQRY    
     
     
     
     
     
     
     
     
           
   SET @QRY =  N'INSERT INTO VD01106 (VD_ID,VM_ID,AC_CODE,NARRATION,CREDIT_AMOUNT,DEBIT_AMOUNT,        
   X_TYPE,LAST_UPDATE,COMPANY_CODE,COST_CENTER_AC_CODE,VS_AC_CODE,CHK_RECON,RECON_DT) VALUES         
   (NEWID(),'''+@IDVAL+''','''+@AC_CODE+''',''SALARY DETAIL'',0 ,'+STR(@DRAMT,14,2)+' ,''DR'',        
   GETDATE(),'''+@COMPANY_CODE+''',''0000000000'',''0000000000'',0,'''')'        
   SET @NSTEP ='500'        
        
   PRINT @QRY        
   EXEC SP_EXECUTESQL @QRY          
   SET @QRY =  N'INSERT INTO VD01106 (VD_ID,VM_ID,AC_CODE,NARRATION,CREDIT_AMOUNT,DEBIT_AMOUNT,        
   X_TYPE,LAST_UPDATE,COMPANY_CODE,COST_CENTER_AC_CODE,VS_AC_CODE,CHK_RECON,RECON_DT) VALUES         
   (NEWID(),'''+@IDVAL+''','''+@SAL_AC_CODE+''',''SALARY DETAIL'','+ STR(@CRAMT,14,2) +',0 ,''CR'',        
   GETDATE(),'''+@COMPANY_CODE+''',''0000000000'',''0000000000'',0,'''')'        
   SET @NSTEP ='600'        
   PRINT @QRY        
   EXEC SP_EXECUTESQL @QRY          
   SET @NSTEP ='700'        
   SET @QRY =  N'INSERT INTO VOUCHER_IMPORT_LOG (AC_CODE,DATE,TYPE)        
   VALUES ('''+@AC_CODE+''','''+CAST(CAST(@E_DATE AS DATETIME) AS VARCHAR(100))+''',''SALARY'')'        
   PRINT @QRY        
   EXEC SP_EXECUTESQL @QRY  
           
   FETCH NEXT FROM PRDD INTO @EMP_CODE,@E_DATE         
 END        
 CLOSE PRDD        
 DEALLOCATE PRDD        
  GOTO EXITPROC        
 END TRY        
 BEGIN CATCH        
 SET  @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()            
 SELECT @CERRORMSG AS TYPE        
 GOTO EXITPROC            
 END CATCH        
 EXITPROC:         
 PRINT 'HELLO  '+ISNULL(@CERRORMSG,'')        
 IF ISNULL(@CERRORMSG,'')=''          
 BEGIN          
  COMMIT            
  SELECT 'SUCCESS' AS TYPE,'' AS VALUE,'' AS MESSAGE          
 END          
 ELSE            
 BEGIN  
  SELECT 'ALERT' AS TYPE,ISNULL(@CERRORMSG,'')  AS MESSAGE,'' AS VALUE              
  ROLLBACK            
 END          
 END
