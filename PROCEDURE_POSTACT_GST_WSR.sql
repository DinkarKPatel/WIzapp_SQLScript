CREATE PROCEDURE POSTACT_GST_WSR  --(LocId 3 digit change by Sanjay:26-11-2024 left changes by concerned developer)   
(    
 @DTTO DATETIME,    
 @CDEPTID CHAR(4)='',    
 @CACCODE CHAR(10)='',
 @CXNTYPEPARA VARCHAR(10),
 @NXNITEMTYPE NUMERIC(1,0),
 @NLOOP NUMERIC(1,0),
 @BLOC BIT=0
)    
AS    
BEGIN    
	 
	 DECLARE @CSTEP VARCHAR(10),@CDISCACCODE VARCHAR(10),@CFREIGHTACCODE VARCHAR(10),    
	   @COTHERCHARGESACCODE VARCHAR(10),@CROUNDOFFACCODE VARCHAR(10),@NCTR NUMERIC(10,0),    
	   @NSUBTOTAL NUMERIC(14,2),@NTAXAMOUNT NUMERIC(14,2), @CPURACCODE VARCHAR(50),@CTAXACCODE VARCHAR(100),    
	   @CCNNO VARCHAR(50),@DCNDT DATETIME, @CCNID VARCHAR(50),@LOUTSTATIONPARTY BIT,@TMPDR NUMERIC(14,2),    
	   @TMPCR NUMERIC(14,2),@CCURSTATECODE VARCHAR(10),@CVMID VARCHAR(40),@CLOCATIONID CHAR(2),    
	   @CLASTBILLNO VARCHAR(40),@DTMPVENDORBILLDT DATETIME,@CRMLIST VARCHAR(300),@NTMPCREDITDAYS NUMERIC(10),    
	   @NTMPCRDISCOUNTPERCENTAGE NUMERIC(14,2),@DLASTINVDT DATETIME,@CVOUCHERCODE VARCHAR(10),    
	   @COLDBILLTYPE VARCHAR(10),@CLASTACCODE VARCHAR(10),@CLASTPARTYNAME VARCHAR(100),@NTOTQUANTITY NUMERIC(14,2),    
	   @NTOTNETAMOUNT NUMERIC(14,2),@CDEPTNAME VARCHAR(100),@CVOUCHERNO VARCHAR(10)    
	   ,@CINSURANCEACCODE VARCHAR(10),@NMODE INT,@BNEWENTRY BIT,@CREFINVID VARCHAR(40)
	   ,@CPOSTBILLBYBILLREFTYPE VARCHAR(2),@NVDID INT,@NROLIMIT NUMERIC(7,3),@BMANUALROFF BIT,
	   @DGSTCUTOFFDATE DATETIME,@CREFBILLNO VARCHAR(100),@CDEBTORHEADS VARCHAR(500),
	   @BBLANKACFOUND BIT,@CERRORMSG VARCHAR(MAX),@cCashAcCode CHAR(10),@bPostRemarksInNarration BIT,@cRemarks VARCHAR(MAX),
	   @nSpId VARCHAR(40),@cLoopRefNo varchar(100),@cLoopVmId VARCHAR(50)
	
   
  
   SET @CSTEP=5
   set @nSpId=ltrim(rtrim(str(@@spid)))  	 
	 SET @CERRORMSG=''
	  
	  
--	  select @CXNTYPEPARA as CXNTYPEPARA,@NXNITEMTYPE as NXNITEMTYPE     
	 SET @CSTEP=10    
	 
	 SET  @CDEBTORHEADS=DBO.FN_ACT_TRAVTREE('0000000018')
	 DECLARE @CPARTYACCODE VARCHAR(10),@CPARTYSTATECODE VARCHAR(10),@NNETAMOUNT NUMERIC(14,2),    
	   @NDISCAMOUNT NUMERIC(14,2),@NFREIGHT NUMERIC(14,2), @NOTHER NUMERIC(14,2),@NROUNDOFF NUMERIC(14,2),    
	   @NDRTOTAL NUMERIC(14,4),@NCRTOTAL NUMERIC(14,4),@CCUTOFFDATE VARCHAR(20),@CXNTYPE VARCHAR(10),    
	   @CAC_CODE VARCHAR(20),@CVDID VARCHAR(40),@CWSLBILLS VARCHAR(MAX),@BBILLBYBILL BIT,@CSETOFFACCODE CHAR(10),  
	   @POST_BILL_BY_BILL_REFTYPE INT,@BGSTBILL BIT,@CSLOCGSTSTATECODE VARCHAR(5),@CTLOCGSTSTATECODE VARCHAR(5),
	   @CPARTYGSTSTATECODE VARCHAR(5),@CADJDIFFACCODE CHAR(10),@COLDCNID VARCHAR(40),@NEXCEPTIONTYPE NUMERIC(1,0),
	   @CFINWSRAC CHAR(10)
	     
	    SET @DGSTCUTOFFDATE='2017-07-01'    
	    
		SET @COTHERCHARGESACCODE=''    
		SET @CFREIGHTACCODE=''    
		SET @CROUNDOFFACCODE=''    
	        
		SET @CSTEP=20    
		--THIS TABLE VARIABLE STORE ERROR OF OF MEMO ID    

		IF OBJECT_ID('TEMPDB..#ERRORS','U') IS NOT NULL
			DROP TABLE #ERRORS
			
		CREATE TABLE #ERRORS 
		(
			XN_TYPE VARCHAR(10),SOURCE_TABLE VARCHAR(200),COLUMNNAME VARCHAR(200),GST_PERCENTAGE NUMERIC(6,2),ERR_DESC VARCHAR(500)
		)
		   	        
		SET @CSTEP=30    
	 
	 DECLARE @VCHC TABLE     
	 (    
	  AC_CODE CHAR(10),NARRATION VARCHAR(200),XN_NO VARCHAR(30),    
	  XN_DT DATETIME,DEPT_ID CHAR(4),AMOUNT NUMERIC(14,4),XN_ID VARCHAR(50),    
	  REF_BILL_NO VARCHAR(50),REF_BILL_DATE DATETIME, ENTRY_ID INT    
	  , CRDAYS NUMERIC(5)    
	 )    
	 
	  
	 SET @CSTEP=40    
	 DECLARE @VDC TABLE     
	 (    
	  VD_ID VARCHAR(50),    VM_ID VARCHAR(40),    AC_CODE CHAR(10),     
	  NARRATION VARCHAR(MAX),   DEBIT_AMOUNT NUMERIC(14,4),  CREDIT_AMOUNT NUMERIC(14,4),    
	  X_TYPE CHAR(2),     VS_AC_CODE CHAR(10), REF_BILL_NO VARCHAR(40),     
	  CREDIT_DAYS NUMERIC(10),  CR_DISCOUNT_PERCENTAGE NUMERIC(14,2),      
	  VAT_ENTRY BIT,REF_BILL_DATE DATETIME, AC_NAME VARCHAR(100),NEW_VD_ID VARCHAR(50),
	  REF_INV_ID VARCHAR(300)    
	 )    
	     
	 SET @CSTEP=50    
	 DECLARE @VMC TABLE    
	 (    
	  VM_ID VARCHAR(400),    VOUCHER_NO VARCHAR(400),   VOUCHER_DT DATETIME,     
	  VOUCHER_CODE CHAR(10),   DEPT_ID CHAR(4),    BILL_TYPE VARCHAR(300),    
	  BILL_NO VARCHAR(200),    BILL_ID VARCHAR(220),    BILL_DT DATETIME,     
	  BILL_AC_CODE VARCHAR(100),  DRTOTAL NUMERIC(20,2),   CRTOTAL NUMERIC(20,2),     
	  CASH_VOUCHER BIT,     SALE_VOUCHER BIT,     QUANTITY NUMERIC(20,2),     
	  ANGADIA_CODE CHAR(70),    LR_NO VARCHAR(500),    LR_DT DATETIME,    
	  PARTY_NAME VARCHAR(1000),  NET_AMOUNT NUMERIC(20,2),   BILL_STATUS VARCHAR(1000),    
	  RM_LIST VARCHAR(MAX),   CANCELLED BIT,     DEPT_NAME VARCHAR(100),    
	  VOUCHER_TYPE VARCHAR(100)     
	 )    
	     
	 SET @CSTEP=60    
	 DECLARE @VLINK TABLE    
	 (    
	  VM_ID VARCHAR(100),MEMO_ID VARCHAR(100),XN_TYPE VARCHAR(20),LAST_UPDATE DATETIME    
	 ) 
	     
	 DECLARE @TBILL_BY_BILL_REF TABLE(VM_ID VARCHAR(50),VD_ID VARCHAR(40),REF_NO VARCHAR(40),AMOUNT NUMERIC(18,4),LAST_UPDATE DATETIME    
			,X_TYPE VARCHAR(20),CR_DAYS NUMERIC(5),adj_remarks VARCHAR(4000),REF_INV_ID VARCHAR(40),on_account BIT)    
	     
	 SELECT TOP 1 @CCUTOFFDATE=CUTOFFDATE,@POST_BILL_BY_BILL_REFTYPE=ISNULL(POST_BILL_BY_BILL_REFTYPE,0),
	 @bPostRemarksInNarration=isnull(post_remarks_in_narration,0)    
	 FROM GST_ACCOUNTS_CONFIG_MST WHERE XN_TYPE=@CXNTYPEPARA

	DECLARE @CCURLOCID varCHAR(5),@cHoLocId varchar(5)

	SELECT TOP 1 @CCURLOCID=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
	SELECT TOP 1 @cHoLocId=VALUE FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'
	
	 SET @CCUTOFFDATE=ISNULL(@CCUTOFFDATE,'')    
	     
	 SET @CSTEP=70    
	 SET @CVOUCHERCODE = '0000000004'    
	 
BEGIN TRY    
	       
	   SET @CSTEP=80    
	   IF OBJECT_ID('TEMPDB..#WSRTABLE','U') IS NOT NULL    
		DROP TABLE #WSRTABLE     
	       
	   SET @CSTEP=90     --THIS TABLE STORE ALL PENDING MEMO_ID     
	   CREATE TABLE #WSRTABLE (MEMO_ID VARCHAR(30),MODE VARCHAR(10))    
	       
	   SET @CSTEP=100 
	   
	   DECLARE @IMAXLEVEL INT
			
			--GETTING THE MAX LEVEL OF APPROVAL FOR PURCHASE TRANSACTION
			SELECT @IMAXLEVEL=MAX(LEVEL_NO) 
			FROM XN_APPROVAL_CHECKLIST_LEVELS 
			WHERE XN_TYPE='WSR' AND INACTIVE=0
			
			IF EXISTS(SELECT TOP 1 'U' FROM XN_APPROVAL_CHECKLIST_LEVELS  WHERE XN_TYPE='WSR' AND INACTIVE=0 AND ISNULL(AC_POSTING,0)<>0)
			BEGIN
			    SELECT @IMAXLEVEL=LEVEL_NO
				FROM XN_APPROVAL_CHECKLIST_LEVELS 
				WHERE XN_TYPE='WSR' AND INACTIVE=0 AND ISNULL(AC_POSTING,0)<>0
			END
						
			SET @IMAXLEVEL=ISNULL(@IMAXLEVEL,0)

	   --GETTING LIST OF PURCHASE RETURNS THAT QUALIFY FOR VOUCHER POSTING    
	   INSERT INTO #WSRTABLE (MEMO_ID,MODE)    
			 SELECT A.CN_ID,'WSR' AS MODE     
			 FROM CNM01106 A    
			 JOIN LOCATION SL ON a.location_Code =SL.DEPT_ID    
			 LEFT JOIN LOCATION TL ON A.PARTY_DEPT_ID=TL.DEPT_ID    
			 JOIN LMP01106 LMP(NOLOCK) ON LMP.AC_CODE=A.AC_CODE
			 LEFT JOIN loc_accounting_company lac1 (NOLOCK) ON lac1.pan_no=sl.PAN_NO
			 LEFT JOIN loc_accounting_company lac2 (NOLOCK) ON lac2.pan_no=SUBSTRING(sl.loc_gst_no,3,10)
			 LEFT OUTER JOIN     
			 (    
		SELECT B.MEMO_ID,B.LAST_UPDATE    
		FROM POSTACT_VOUCHER_LINK B     
		JOIN VM01106 C ON C.VM_ID = B.VM_ID     
		WHERE C.CANCELLED=0 AND B.XN_TYPE = 'WSR'     
			 )VM  ON A.CN_ID = VM.MEMO_ID      
			 WHERE  
			   -- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES    
			 /*CREDITNOTE IS NOT CANCELLED.*/    
			 ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)      
			 /*CREDITNOTE INV_DT IS LESS THAN THE SPECIFIED DATE.*/    
			 AND A.CN_DT  BETWEEN @DGSTCUTOFFDATE AND @DTTO  
			 AND (ISNULL(A.XN_ITEM_TYPE,0)=@NXNITEMTYPE OR (ISNULL(A.XN_ITEM_TYPE,0) IN (0,1) AND @NXNITEMTYPE=1)) 
			 /*IF CUTOFF DATE IS SPECIFIED, CONSIDER CREDITNOTE AFTER THE CUTOFF DATE*/    
			 AND (ISNULL(@CCUTOFFDATE,'')='' OR A.CN_DT>@CCUTOFFDATE)    
			 /*APPLY FILTER TO LOCATION.*/    
			 AND (ISNULL(@CDEPTID,'')='' OR a.location_Code =@CDEPTID)    
			 /*CREDITNOTE IS NOT GROUP/BRANCH CREDITNOTE*/    
			 AND (A.MODE<>2 OR (A.MODE=2 AND @cHoLocId<>@CCURLOCID AND a.receipt_Dt<>'' AND sl.loc_type=2))
			 /*CREDITNOTE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/    
			 AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE)     
			 AND (@CACCODE='' OR A.AC_CODE=@CACCODE)    
	         AND (ISNULL(SL.LOC_GST_NO,'')<>ISNULL(LMP.AC_GST_NO,'') OR ISNULL(SL.LOC_GST_NO,'')=''  OR ISNULL(cn_type,0)=2)---- DO NOT PROCESS INVOICES FOR PARTIES HAVING SAME GST NO. AS THAT OF LOCATION    
			 AND ISNULL(A.APPROVEDLEVELNO,0)>=@IMAXLEVEL
			AND (SUBSTRING(ISNULL(SL.LOC_GST_NO,''),3,10)<>ISNULL(LMP.PAN_NO,'')  OR ISNULL(cn_type,0)=2)
			AND (ISNULL(SL.pan_NO,'')<>ISNULL(LMP.PAN_NO,'') OR ISNULL(lmp.pan_no,'')='' OR ISNULL(cn_type,0)=2)
			AND (lac1.pan_no IS NOT NULL OR lac2.pan_no IS NOT NULL)

		--if @@spid=426
		--	SELECT 'CHECK WSRTABE',* FROM #WSRTABLE    

	   SET @CSTEP=130    
		SELECT @CDISCACCODE = VALUE    
		FROM GST_ACCOUNTS_CONFIG_DET_OTHERS WHERE XN_TYPE=@CXNTYPEPARA AND COLUMNNAME='DISCOUNT_AC_CODE'
	        
		SET @CDISCACCODE=ISNULL(@CDISCACCODE,'')    
		/*    
		IF DISCOUNT HAS TO BE POSTED SEPARATELY AND DISCOUNT ACCOUNT IS NOT DEFINED,     
		SEND ERROR MESSAGE TO USER    
		*/     
	       
			 SET @CSTEP=150    
			 --IF FREIGHT CONSIDERED AS PART OF STOCK THEN CLUB IT IN CREDITNOTE A/C OTHERWISE POST SEPARATELY    
	          
		  --IF INSURANCE IS CONSIDERED AS PART OF STOCK THEN CLUB IT IN WHOLESALE A/C OTHERWISE POST SEPARATELY    
	   SET @CSTEP = 160    
		SELECT @CFINWSRAC=VALUE FROM GST_ACCOUNTS_CONFIG_DET_OTHERS WHERE XN_TYPE=@CXNTYPEPARA AND COLUMNNAME='FINWSR_AC_CODE'
		 	       
	   SET @CSTEP = 170    
	   SELECT @CROUNDOFFACCODE = VALUE
	   FROM GST_ACCOUNTS_CONFIG_DET_OTHERS WHERE XN_TYPE=@CXNTYPEPARA AND COLUMNNAME='ROFF_AC_CODE'
	       
	   SET @CROUNDOFFACCODE=ISNULL(@CROUNDOFFACCODE,'')    
	   
	   SELECT @cCashAcCode= VALUE
	   FROM GST_ACCOUNTS_CONFIG_DET_paymodes WHERE COLUMNNAME='CASH_AC_CODE'
	       
	   SET @cCashAcCode=ISNULL(@cCashAcCode,'')    
	      
	   CREATE INDEX IX_TEMP_WSRTABLE_RM_ID ON #WSRTABLE(MEMO_ID)    
	             
	   --SELECT COUNT(*) FROM #WSRTABLE    
	   SET @CSTEP = 180    
	   IF OBJECT_ID('TEMPDB..#V_PROCESS','U') IS NOT NULL    
			DROP TABLE #V_PROCESS    
	       
	   SET @CSTEP = 190
	   /*    
		BILL_LEVEL_TAX_METHOD : 1 IS EXCLUSIVE    
			  2 IS INCLUSIVE    
	                  
	   */    

	   DECLARE @CPOSTINGXNTYPE VARCHAR(10)	
	   SET @CPOSTINGXNTYPE=(CASE WHEN @NXNITEMTYPE=3 THEN 'WSR_AST' WHEN @NXNITEMTYPE=4 THEN 'WSR_SRV'
							 WHEN @NXNITEMTYPE=2 THEN 'WSR_CON' ELSE 'WSR' END)	
							 
	   SELECT @CPOSTBILLBYBILLREFTYPE=ISNULL(POST_BILL_BY_BILL_REFTYPE,1),
	   @NEXCEPTIONTYPE=ISNULL(POST_BILL_BY_BILL_ADJ_EXCEPTION_TYPE,0)
	   FROM GST_ACCOUNTS_CONFIG_MST WHERE XN_TYPE=@CXNTYPEPARA  

	   --A SINGLE CREDITNOTE MEMO CAN HAVE MULTIPLE CREDITNOTE AND TAX ACCOUNTS BASED ON MULTIPLE FORMS    
		SELECT   PM.CN_ID    
		  ,PM.CN_NO    
		  ,PM.CN_DT    
		  ,PM.CREDIT_DAYS    
		  ,pm.location_code AS DEPT_ID    
		  ,PD.INV_DT
		  ,PAC.WSRAC AS WSRAC    
		  ,PAC.TAXAC AS TAXAC    
		  --FOR INCLUSIVE TAX DEDUCE THE AMOUNT FROM THE SUBTOTAL AS TAX WOULD BE POSTED SEPARATELY    
		  ,FM.POST_TAX_SEPARATELY    
		  ,(CASE WHEN PM.MODE<>2 THEN PM.AC_CODE ELSE LOCT.DEPT_AC_CODE END) AS AC_CODE   
		  ,PM.TOTAL_AMOUNT
		  ,SUM(RFNET) AS CNDNET
		  ,PD.INV_NO AS BILL_NO     
		  ,PM.CANCELLED    
		  ,SUM(CASE WHEN PM.SUBTOTAL<>0 THEN ROUND((PM.DISCOUNT_AMOUNT/PM.SUBTOTAL)*((PD.RATE*PD.QUANTITY)-
					PD.DISCOUNT_AMOUNT),2) ELSE 0 END) AS DISCOUNTAMOUNT    
		  ,ISNULL(FREIGHT_TAXABLE_VALUE,0) AS FREIGHT
		  ,ISNULL(PM.OTHER_CHARGES_TAXABLE_VALUE,0) AS OTHERCHARGES
		  ,ISNULL(PM.INSURANCE_TAXABLE_VALUE,0) AS INSURANCE
		  ,SUM(CASE WHEN PM.SUBTOTAL<>0 THEN (PM.ROUND_OFF/PM.SUBTOTAL)*(PD.RATE*PD.QUANTITY-PD.DISCOUNT_AMOUNT)
		       ELSE 0 END) AS ROUNDOFF    
		  ,SUM(CASE WHEN PD.INV_DT<@DGSTCUTOFFDATE AND PD.GST_PERCENTAGE=0 THEN 
				 ROUND((((PD.NET_RATE*PD.INVOICE_QUANTITY)-(CASE WHEN PD.BILL_LEVEL_TAX_METHOD=2 
					THEN PD.ITEM_TAX_AMOUNT ELSE 0 END)))-(PD.NET_RATE*PD.INVOICE_QUANTITY*PM.DISCOUNT_PERCENTAGE/100) ,2)
		    			 ELSE XN_VALUE_WITHOUT_GST END) AS WSRAMOUNT
			,SUM(PD.ITEM_TAX_AMOUNT) AS TAXAMOUNT
			,SUM(IGST_AMOUNT) AS IGST_AMOUNT
			,SUM(CGST_AMOUNT) AS CGST_AMOUNT
			,SUM(SGST_AMOUNT) AS SGST_AMOUNT
			,SUM(GST_CESS_AMOUNT) AS GST_CESS_AMOUNT
			,pd.GST_CESS_PERCENTAGE
			,FREIGHT_GST_PERCENTAGE
			,OTHER_CHARGES_GST_PERCENTAGE
			,INSURANCE_GST_PERCENTAGE
			,FREIGHT_IGST_AMOUNT
			,FREIGHT_CGST_AMOUNT
			,FREIGHT_SGST_AMOUNT
			,OTHER_CHARGES_IGST_AMOUNT
			,OTHER_CHARGES_CGST_AMOUNT
			,OTHER_CHARGES_SGST_AMOUNT		 	
			,INSURANCE_IGST_AMOUNT
			,INSURANCE_CGST_AMOUNT
			,INSURANCE_SGST_AMOUNT		 			 					
			,LOCS.GST_STATE_CODE AS LOCS_GST_STATE_CODE
			,LMP.AC_GST_STATE_CODE AS PARTY_GST_STATE_CODE		 			
			,LOCT.GST_STATE_CODE AS LOCT_GST_STATE_CODE		 					 					 			
			,SUM(PD.QUANTITY) AS QUANTITY    
			,'WSR' AS XN_TYPE
			,@CPOSTINGXNTYPE AS POSTING_XN_TYPE
			,PM.MODE    
			,SUM(XN_VALUE_WITHOUT_GST) AS XN_VALUE_WITHOUT_GST
			,PM.FREIGHT-(ISNULL(PM.FREIGHT_TAXABLE_VALUE,0)+(CASE WHEN PM.OH_TAX_METHOD=2 THEN PM.FREIGHT_IGST_AMOUNT+PM.FREIGHT_CGST_AMOUNT+PM.FREIGHT_SGST_AMOUNT ELSE 0 END)) AS FREIGHT_RO
			,PM.OTHER_CHARGES-(ISNULL(PM.OTHER_CHARGES_TAXABLE_VALUE,0)+(CASE WHEN PM.OH_TAX_METHOD=2 THEN PM.OTHER_CHARGES_IGST_AMOUNT+PM.OTHER_CHARGES_CGST_AMOUNT+PM.OTHER_CHARGES_SGST_AMOUNT ELSE 0 END)) AS OTHER_CHARGES_RO       
			,PM.INSURANCE-(PM.INSURANCE_TAXABLE_VALUE+(CASE WHEN PM.OH_TAX_METHOD=2 THEN PM.INSURANCE_IGST_AMOUNT+PM.INSURANCE_CGST_AMOUNT+PM.INSURANCE_SGST_AMOUNT ELSE 0 END)) AS INSURANCE_RO       
			,(CASE WHEN @CPOSTBILLBYBILLREFTYPE='2' THEN '' ELSE REF_INV_ID   END) AS REF_INV_ID
			,ROUND_OFF,MANUAL_ROUNDOFF,PD.GST_PERCENTAGE
			, (CASE WHEN IGST_AMOUNT<>0 OR LOCS.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE THEN '0000000000' ELSE '' END) AS IGST_REVENUE_AC_CODE
			, (CASE WHEN CGST_AMOUNT<>0 OR LOCS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE THEN '0000000000' ELSE '' END) AS LGST_REVENUE_AC_CODE
			, (CASE WHEN IGST_AMOUNT<>0  THEN '0000000000' ELSE '' END) AS IGST_TAX_AC_CODE
			, (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)  AS CGST_TAX_AC_CODE
			, (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)  AS SGST_TAX_AC_CODE
			, '0000000000' AS GST_CESS_AC_CODE	
			, (CASE WHEN (ISNULL(PM.FREIGHT_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE) 
					AND PM.FREIGHT<>0 AND ISNULL(PM.FREIGHT_GST_PERCENTAGE,0)<>0
					THEN '0000000000' ELSE '' END)  AS FREIGHT_IGST_REVENUE_AC_CODE
			, (CASE WHEN (ISNULL(PM.FREIGHT_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE OR ISNULL(PM.FREIGHT_GST_PERCENTAGE,0)=0) 
					AND PM.FREIGHT<>0
					THEN '0000000000' ELSE '' END) AS FREIGHT_LGST_REVENUE_AC_CODE
			, (CASE WHEN ISNULL(PM.FREIGHT_SGST_AMOUNT,0)<>0 AND PM.FREIGHT<>0
					THEN '0000000000' ELSE '' END)  AS FREIGHT_SGST_TAX_AC_CODE
			, (CASE WHEN ISNULL(PM.FREIGHT_CGST_AMOUNT,0)<>0 AND PM.FREIGHT<>0
					THEN '0000000000' ELSE '' END)  AS FREIGHT_CGST_TAX_AC_CODE
			, (CASE WHEN ISNULL(PM.FREIGHT_IGST_AMOUNT,0)<>0  AND PM.FREIGHT<>0
					THEN '0000000000' ELSE '' END)  AS FREIGHT_IGST_TAX_AC_CODE
			
			, (CASE WHEN (ISNULL(PM.OTHER_CHARGES_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE) AND PM.OTHER_CHARGES<>0  AND ISNULL(PM.OTHER_CHARGES_GST_PERCENTAGE,0)<>0
					THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_IGST_REVENUE_AC_CODE
			, (CASE WHEN (ISNULL(PM.OTHER_CHARGES_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE OR ISNULL(PM.OTHER_CHARGES_GST_PERCENTAGE,0)=0 ) AND PM.OTHER_CHARGES<>0
					THEN '0000000000' ELSE '' END) AS OTHER_CHARGES_LGST_REVENUE_AC_CODE
			, (CASE WHEN ISNULL(PM.OTHER_CHARGES_SGST_AMOUNT,0)<>0 AND PM.OTHER_CHARGES<>0
					THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_SGST_TAX_AC_CODE
			, (CASE WHEN ISNULL(PM.OTHER_CHARGES_CGST_AMOUNT,0)<>0 AND PM.OTHER_CHARGES<>0
					THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_CGST_TAX_AC_CODE
			, (CASE WHEN ISNULL(PM.OTHER_CHARGES_IGST_AMOUNT,0)<>0  AND PM.OTHER_CHARGES<>0
					THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_IGST_TAX_AC_CODE			               

			, (CASE WHEN (ISNULL(PM.INSURANCE_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE) AND PM.INSURANCE<>0  AND ISNULL(PM.INSURANCE_GST_PERCENTAGE,0)<>0
					THEN '0000000000' ELSE '' END)  AS INSURANCE_IGST_REVENUE_AC_CODE
			, (CASE WHEN (ISNULL(PM.INSURANCE_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE OR ISNULL(PM.INSURANCE_GST_PERCENTAGE,0)=0 ) AND PM.INSURANCE<>0
					THEN '0000000000' ELSE '' END) AS INSURANCE_LGST_REVENUE_AC_CODE
			, (CASE WHEN ISNULL(PM.INSURANCE_SGST_AMOUNT,0)<>0 AND PM.INSURANCE<>0
					THEN '0000000000' ELSE '' END)  AS INSURANCE_SGST_TAX_AC_CODE
			, (CASE WHEN ISNULL(PM.INSURANCE_CGST_AMOUNT,0)<>0 AND PM.INSURANCE<>0
					THEN '0000000000' ELSE '' END)  AS INSURANCE_CGST_TAX_AC_CODE
			, (CASE WHEN ISNULL(PM.INSURANCE_IGST_AMOUNT,0)<>0  AND PM.INSURANCE<>0
					THEN '0000000000' ELSE '' END)  AS INSURANCE_IGST_TAX_AC_CODE			               
			,SECTION_CODE,ART.SUB_SECTION_CODE,0 AS CASHDISCOUNTAMOUNT,0 AS CD_PCT								               
			,pm.pay_mode,pm.remarks,cn_type,cn_type org_cn_type     
	   INTO #V_PROCESS    
	   FROM CNM01106 PM     
	 LEFT JOIN CND01106 PD ON PM.CN_ID=PD.CN_ID    
	   JOIN #WSRTABLE PT ON PT.MEMO_ID = PM.CN_ID AND PT.MODE='WSR'    
	   left JOIN FORM FM ON PD.ITEM_FORM_ID = FM.FORM_ID    
	   LEFT OUTER JOIN WSRCONFIGDET PAC ON FM.FORM_ID=PAC.FORMID     
	   JOIN LMP01106 LMP ON LMP.AC_CODE=PM.AC_CODE
	   JOIN LOCATION LOCS ON LOCS.DEPT_ID=pm.location_Code 
	   LEFT OUTER JOIN LOCATION LOCT ON LOCT.DEPT_ID=PM.PARTY_DEPT_ID
	   LEFT JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=PD.PRODUCT_CODE
	   LEFT JOIN ARTICLE ART(NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE
	   LEFT JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE
				   
	   WHERE PM.TOTAL_AMOUNT<>0       
			GROUP BY PM.CN_ID , pm.location_code  
			,PM.CN_NO    
			,PM.CN_DT    
			,PM.CREDIT_DAYS    
			,PAC.WSRAC    
			,PAC.TAXAC    
			,FM.POST_TAX_SEPARATELY    
			,(CASE WHEN PM.MODE<>2 THEN PM.AC_CODE ELSE LOCT.DEPT_AC_CODE END)
			,PM.TOTAL_AMOUNT    
			,PD.INV_NO    
			,PM.CANCELLED    
			,PD.INV_DT
			,FREIGHT_TAXABLE_VALUE
			,PM.OTHER_CHARGES_TAXABLE_VALUE
			,PM.INSURANCE_TAXABLE_VALUE           
			,FREIGHT_GST_PERCENTAGE
			,OTHER_CHARGES_GST_PERCENTAGE
			,INSURANCE_GST_PERCENTAGE
			,FREIGHT_IGST_AMOUNT
			,FREIGHT_CGST_AMOUNT
			,FREIGHT_SGST_AMOUNT
			,OTHER_CHARGES_IGST_AMOUNT
			,OTHER_CHARGES_CGST_AMOUNT
			,OTHER_CHARGES_SGST_AMOUNT		 	
			,INSURANCE_IGST_AMOUNT
			,INSURANCE_CGST_AMOUNT
			,INSURANCE_SGST_AMOUNT		 			 					
			,LOCS.GST_STATE_CODE
			,LMP.AC_GST_STATE_CODE
			,LOCT.GST_STATE_CODE
			,PM.MODE
			,PM.FREIGHT
			,PM.OTHER_CHARGES
			,PM.INSURANCE
			,OH_TAX_METHOD
			,(CASE WHEN @CPOSTBILLBYBILLREFTYPE='2' THEN '' ELSE REF_INV_ID   END)
			,ROUND_OFF,MANUAL_ROUNDOFF,PD.GST_PERCENTAGE,pd.GST_CESS_PERCENTAGE
			, (CASE WHEN IGST_AMOUNT<>0 OR LOCS.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE THEN '0000000000' ELSE '' END)
			, (CASE WHEN CGST_AMOUNT<>0 OR LOCS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE THEN '0000000000' ELSE '' END)
			, (CASE WHEN IGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)
			, (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)
			, (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)
			
			, (CASE WHEN (ISNULL(PM.FREIGHT_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE) 
					AND PM.FREIGHT<>0 AND ISNULL(PM.FREIGHT_GST_PERCENTAGE,0)<>0
					THEN '0000000000' ELSE '' END)
			, (CASE WHEN (ISNULL(PM.FREIGHT_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE OR ISNULL(PM.FREIGHT_GST_PERCENTAGE,0)=0) 
					AND PM.FREIGHT<>0
					THEN '0000000000' ELSE '' END)
			, (CASE WHEN ISNULL(PM.FREIGHT_SGST_AMOUNT,0)<>0 AND PM.FREIGHT<>0
					THEN '0000000000' ELSE '' END)
			, (CASE WHEN ISNULL(PM.FREIGHT_CGST_AMOUNT,0)<>0 AND PM.FREIGHT<>0
					THEN '0000000000' ELSE '' END)
			, (CASE WHEN ISNULL(PM.FREIGHT_IGST_AMOUNT,0)<>0  AND PM.FREIGHT<>0
					THEN '0000000000' ELSE '' END)
			
			, (CASE WHEN (ISNULL(PM.OTHER_CHARGES_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE) AND PM.OTHER_CHARGES<>0  AND ISNULL(PM.OTHER_CHARGES_GST_PERCENTAGE,0)<>0
					THEN '0000000000' ELSE '' END)
			, (CASE WHEN (ISNULL(PM.OTHER_CHARGES_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE OR ISNULL(PM.OTHER_CHARGES_GST_PERCENTAGE,0)=0 ) AND PM.OTHER_CHARGES<>0
					THEN '0000000000' ELSE '' END)
			, (CASE WHEN ISNULL(PM.OTHER_CHARGES_SGST_AMOUNT,0)<>0 AND PM.OTHER_CHARGES<>0
					THEN '0000000000' ELSE '' END)
			, (CASE WHEN ISNULL(PM.OTHER_CHARGES_CGST_AMOUNT,0)<>0 AND PM.OTHER_CHARGES<>0
					THEN '0000000000' ELSE '' END)
			, (CASE WHEN ISNULL(PM.OTHER_CHARGES_IGST_AMOUNT,0)<>0  AND PM.OTHER_CHARGES<>0
					THEN '0000000000' ELSE '' END)

			, (CASE WHEN (ISNULL(PM.INSURANCE_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE) AND PM.INSURANCE<>0  AND ISNULL(PM.INSURANCE_GST_PERCENTAGE,0)<>0
					THEN '0000000000' ELSE '' END)
			, (CASE WHEN (ISNULL(PM.INSURANCE_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE OR ISNULL(PM.INSURANCE_GST_PERCENTAGE,0)=0 ) AND PM.INSURANCE<>0
					THEN '0000000000' ELSE '' END)
			, (CASE WHEN ISNULL(PM.INSURANCE_SGST_AMOUNT,0)<>0 AND PM.INSURANCE<>0
					THEN '0000000000' ELSE '' END)
			, (CASE WHEN ISNULL(PM.INSURANCE_CGST_AMOUNT,0)<>0 AND PM.INSURANCE<>0
					THEN '0000000000' ELSE '' END)
			, (CASE WHEN ISNULL(PM.INSURANCE_IGST_AMOUNT,0)<>0  AND PM.INSURANCE<>0
					THEN '0000000000' ELSE '' END)
			,SECTION_CODE,ART.SUB_SECTION_CODE,pm.pay_mode,pm.remarks								               	 				
			,cn_type

	  CREATE INDEX IX_V_PROCESS_RM_ID ON #V_PROCESS(CN_ID,XN_TYPE)    
	  
	 -- if @@spid=63
		--select 'check vprocess',* from  #V_PROCESS where cn_id='HO0112200000HOF-000012'
			
	  SET @CSTEP = 195
	
	  IF OBJECT_ID('TEMPDB..#V_PROCESS_OTHERS','U') IS NOT NULL
			DROP TABLE #V_PROCESS_OTHERS
			
		SELECT TOP 1 @CPOSTINGXNTYPE AS XN_TYPE,'DISCOUNT_AC_CODE' AS  COLUMNNAME,'DISCOUNT A/C' AS COLUMNDESC
		INTO #V_PROCESS_OTHERS FROM #V_PROCESS WHERE ISNULL(CASHDISCOUNTAMOUNT,0)<>0 
		UNION ALL
		SELECT TOP  1 @CPOSTINGXNTYPE AS  XN_TYPE,'ROFF_AC_CODE' AS  COLUMNNAME,'ROUND OFF A/C' AS COLUMNDESC
		FROM #V_PROCESS WHERE ROUND_OFF<>0 
		UNION ALL
		SELECT TOP  1 @CPOSTINGXNTYPE AS  XN_TYPE,'FINWSR_AC_CODE' AS  COLUMNNAME,'FINANCIAL CN A/C' AS COLUMNDESC
		FROM #V_PROCESS WHERE cn_type=2

	  SET @CSTEP = 198

	   IF OBJECT_ID('TEMPDB..#V_PROCESS_PAYMODES','U') IS NOT NULL
			DROP TABLE #V_PROCESS_PAYMODES		

	   SELECT A.PAYMODE_CODE, PAYMODE_GRP_CODE,
	   CONVERT(VARCHAR(50),A.PAYMODE_CODE+'_DOC') AS COLUMNNAME,
	   CONVERT(VARCHAR(200),' A/C') AS COLUMNDESC,'0000000000' AS AC_CODE 
	   iNTO #V_PROCESS_PAYMODES FROM PAYMODE_XN_DET A
	   JOIN #V_PROCESS B ON A.MEMO_ID=B.CN_ID
	   JOIN PAYMODE_MST C ON C.PAYMODE_CODE=A.PAYMODE_CODE
	   WHERE A.XN_TYPE='WSR' AND  C.PAYMODE_GRP_CODE='0000002'
	   GROUP BY A.PAYMODE_CODE,PAYMODE_GRP_CODE
	 
	 
   	   INSERT #V_PROCESS_PAYMODES (PAYMODE_CODE,PAYMODE_GRP_CODE,COLUMNNAME,COLUMNDESC,AC_CODE)
	   SELECT TOP 1 '' AS PAYMODE_CODE,'' AS PAYMODE_GRP_CODE,
	   'CASH_AC_CODE' AS COLUMNNAME,'CASH A/C' AS COLUMNDESC,'0000000000' AS AC_CODE 
	   FROM PAYMODE_XN_DET A
	   JOIN #V_PROCESS B ON A.MEMO_ID=B.cN_ID
	   JOIN PAYMODE_MST C ON C.PAYMODE_CODE=A.PAYMODE_CODE
	   WHERE A.XN_TYPE='WSR' AND C.PAYMODE_GRP_CODE='0000001'

	  SET @CSTEP = 200

	   INSERT #V_PROCESS_PAYMODES (PAYMODE_CODE,PAYMODE_GRP_CODE,COLUMNNAME,COLUMNDESC,AC_CODE)	
	   SELECT TOP 1 '' AS PAYMODE_CODE,'' AS PAYMODE_GRP_CODE,
	   'CASH_AC_CODE' AS COLUMNNAME,'CASH A/C' AS COLUMNDESC,'0000000000' AS AC_CODE 
	   FROM #v_process a
	   WHERE pay_mode=2


	  SET @CSTEP=210	


	  EXEC SP3S_GET_POSTING_BLANKAC
		@CXNTYPE=@CPOSTINGXNTYPE,
		@NLOOP=@NLOOP,
		@CERRORMSG=@CERRORMSG OUTPUT,
		@BBLANKACFOUND=@BBLANKACFOUND OUTPUT		
	
	IF @BBLANKACFOUND=1 OR @CERRORMSG<>'' OR @NLOOP=0
		GOTO END_PROC
				  
	  --SELECT 'CHECK #V_PROCESS',* FROM #V_PROCESS --  WHERE CN_ID='0101118000000100000006'
	  
	  SELECT @CCNID='',@CXNTYPE='',@CAC_CODE='',@NCTR=1,@COLDCNID=''    
	  
	  UPDATE #V_PROCESS set cn_type=1 where XN_VALUE_WITHOUT_GST<>0 and cn_type=2

	  SET @CSTEP = 280    
	  WHILE EXISTS(SELECT TOP 1 'U' FROM #V_PROCESS ORDER BY CN_ID)    
	  BEGIN    
	  	   SET @CSTEP = 290    
		   SELECT TOP 1 @CCNID=CN_ID,@CCNNO=CN_NO,@CXNTYPE=XN_TYPE,@CAC_CODE=AC_CODE,@DLASTINVDT=CN_DT,
		   				@CSLOCGSTSTATECODE=LOCS_GST_STATE_CODE,@CTLOCGSTSTATECODE=LOCT_GST_STATE_CODE,
						@CPARTYGSTSTATECODE=PARTY_GST_STATE_CODE,@NMODE=MODE,@cREmarks=ISNULL(remarks,''),
						@NROUNDOFF=(CASE WHEN ISNULL(MANUAL_ROUNDOFF,0)=1 THEN  ROUND_OFF ELSE 0 END)
						FROM #V_PROCESS
		   
		   
		   					
		   SELECT @COLDCNID=@CCNID
	   		SELECT TOP 1 @CSETOFFACCODE=(CASE WHEN (@NMODE=1 AND @CSLOCGSTSTATECODE<>@CPARTYGSTSTATECODE) OR
			(@NMODE=2 AND @CSLOCGSTSTATECODE<>@CTLOCGSTSTATECODE) THEN IGST_REVENUE_AC_CODE ELSE LGST_REVENUE_AC_CODE END)
			FROM #V_PROCESS WHERE CN_ID=@CCNID  		
			

			--if @CCNID='DD01121000000DD-000345'
			--SELECT CN_ID,org_cn_type,cn_type,wsramount,igst_amount
			--FROM #V_PROCESS
			--WHERE CN_ID=@CCNID --AND IGST_AMOUNT<>0 AND ((cn_type=2 AND org_cn_type<>cn_type) OR org_cn_type<>2)

			
		   SET @CSTEP = 300    
		   INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT ) 
			SELECT CN_ID,(CASE WHEN cn_type=2 THEN @CFINWSRAC ELSE  IGST_REVENUE_AC_CODE END),SUM(WSRAMOUNT) AS AMOUNT
			FROM #V_PROCESS
			WHERE CN_ID=@CCNID AND IGST_AMOUNT<>0 
			GROUP BY CN_ID,IGST_REVENUE_AC_CODE,cn_type 									  
			
			UNION ALL
			SELECT CN_ID,(CASE WHEN cn_type=2 THEN @CFINWSRAC ELSE  LGST_REVENUE_AC_CODE END),SUM(WSRAMOUNT) AS AMOUNT
			FROM #V_PROCESS
			WHERE CN_ID=@CCNID AND (CGST_AMOUNT<>0 OR IGST_AMOUNT=0)  
			GROUP BY CN_ID,LGST_REVENUE_AC_CODE,cn_type

			UNION ALL
			SELECT Cn_ID,gst_cess_ac_code,a.gst_cess_AMOUNT
			FROM #V_PROCESS a
			WHERE CN_ID=@CCNID AND ISNULL(a.gst_cess_AMOUNT,0)<>0			
			
		   SET @CSTEP = 310    

		   --FREIGHT AMOUNT SHOULD BE DEBITED    
		   INSERT @VCHC ( XN_ID,XN_NO,CRDAYS,AC_CODE,AMOUNT )     
		   SELECT TOP 1 CN_ID,CN_NO+'-1',CREDIT_DAYS,(CASE WHEN ISNULL(FREIGHT_IGST_AMOUNT,0)<>0 THEN 
					  FREIGHT_IGST_REVENUE_AC_CODE ELSE FREIGHT_LGST_REVENUE_AC_CODE END) AS AC_CODE,FREIGHT    
		   FROM #V_PROCESS    
		   WHERE CN_ID=@CCNID AND FREIGHT<>0 
		       
		   SET @CSTEP = 320
		   --OTHER CHARGES AMOUNT SHOULD BE DEBITED    
		   INSERT @VCHC ( XN_ID,XN_NO,CRDAYS,AC_CODE,AMOUNT )     
		   SELECT TOP 1 CN_ID,CN_NO+'-2',CREDIT_DAYS,(CASE WHEN ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)<>0 THEN 
					  OTHER_CHARGES_IGST_REVENUE_AC_CODE ELSE OTHER_CHARGES_LGST_REVENUE_AC_CODE END) AS AC_CODE,OTHERCHARGES    
		   FROM #V_PROCESS    
		   WHERE CN_ID=@CCNID AND OTHERCHARGES<>0 
		       
		   SET @CSTEP = 325    
		   --INSURANCE AMOUNT SHOULD BE DEBITED    
		   INSERT @VCHC ( XN_ID,XN_NO,CRDAYS,AC_CODE,AMOUNT )     
		   SELECT TOP 1 CN_ID,CN_NO+'-3',CREDIT_DAYS,(CASE WHEN ISNULL(INSURANCE_IGST_AMOUNT,0)<>0 THEN 
					  INSURANCE_IGST_REVENUE_AC_CODE ELSE INSURANCE_LGST_REVENUE_AC_CODE END) AS AC_CODE,INSURANCE    
		   FROM #V_PROCESS    
		   WHERE CN_ID=@CCNID AND INSURANCE<>0 
		       
		   SET @CSTEP = 330
			
		   --SET @NROLIMIT=(CASE WHEN @BMANUALROFF=1 AND ABS(@NROUNDOFF)>.99 THEN ABS(@NROUNDOFF) ELSE 0.99 END)
		 --  SELECT A.CN_ID,A.CN_NO,@CROUNDOFFACCODE,
			--(B.TOTAL_AMOUNT-(SUM(XN_VALUE_WITHOUT_GST+ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+
			--				 ISNULL(TAXAMOUNT,0))+
			--	ISNULL(B.GST_ROUND_OFF,0)+ISNULL(B.FREIGHT_TAXABLE_VALUE,0)+ISNULL(B.FREIGHT_IGST_AMOUNT,0)+ISNULL(B.FREIGHT_CGST_AMOUNT,0)+ISNULL(B.FREIGHT_SGST_AMOUNT,0)+
			--	ISNULL(B.OTHER_CHARGES_TAXABLE_VALUE,0)+ISNULL(B.OTHER_CHARGES_IGST_AMOUNT,0)+
			--	ISNULL(B.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_SGST_AMOUNT,0)+
			--	ISNULL(B.INSURANCE_TAXABLE_VALUE,0)+ISNULL(B.INSURANCE_IGST_AMOUNT,0)+
			--	ISNULL(B.INSURANCE_CGST_AMOUNT,0)+ISNULL(B.INSURANCE_SGST_AMOUNT,0))
			--	) AS AMOUNT
			--FROM #V_PROCESS A
			--JOIN CNM01106 B ON A.CN_ID=B.CN_ID
			--WHERE A.CN_ID=@CCNID
			--GROUP BY A.CN_ID,A.CN_NO,B.FREIGHT_TAXABLE_VALUE,B.OTHER_CHARGES_TAXABLE_VALUE,B.OH_TAX_METHOD,
			--ISNULL(B.GST_ROUND_OFF,0),B.FREIGHT_IGST_AMOUNT,B.FREIGHT_CGST_AMOUNT,B.FREIGHT_SGST_AMOUNT,
			--B.OTHER_CHARGES_IGST_AMOUNT,B.OTHER_CHARGES_CGST_AMOUNT,B.OTHER_CHARGES_SGST_AMOUNT,B.TOTAL_AMOUNT,
			--B.INSURANCE_TAXABLE_VALUE,B.INSURANCE_IGST_AMOUNT,B.INSURANCE_CGST_AMOUNT,B.INSURANCE_SGST_AMOUNT,WSRAC
			--HAVING 
			--ABS(B.TOTAL_AMOUNT-(SUM(XN_VALUE_WITHOUT_GST+ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+
			--				 ISNULL(TAXAMOUNT,0))+
			--	ISNULL(B.GST_ROUND_OFF,0)+ISNULL(B.FREIGHT_TAXABLE_VALUE,0)+ISNULL(B.FREIGHT_IGST_AMOUNT,0)+ISNULL(B.FREIGHT_CGST_AMOUNT,0)+ISNULL(B.FREIGHT_SGST_AMOUNT,0)+
			--	ISNULL(B.OTHER_CHARGES_TAXABLE_VALUE,0)+ISNULL(B.OTHER_CHARGES_IGST_AMOUNT,0)+
			--	ISNULL(B.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_SGST_AMOUNT,0)+
			--	ISNULL(B.INSURANCE_TAXABLE_VALUE,0)+ISNULL(B.INSURANCE_IGST_AMOUNT,0)+
			--	ISNULL(B.INSURANCE_CGST_AMOUNT,0)+ISNULL(B.INSURANCE_SGST_AMOUNT,0))
			--	)<=@NROLIMIT
			--UNION ALL

		   	
		   --ROUNDOFF AMOUNT SHOULD BE DEBITED    
		   INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT)     
			SELECT TOP 1 CN_ID,CN_NO+'-4',@CROUNDOFFACCODE,
			ISNULL(GST_ROUND_OFF,0)+@NROUNDOFF FROM CNM01106
			WHERE  CN_ID=@CCNID AND( ISNULL(GST_ROUND_OFF,0)+@NROUNDOFF)<>0
		      		
				
					
		  SET @CSTEP=335	
		  --TAX AMOUNT SHOULD BE CREDITED WITH THE RESPECTIVE TAX_AMOUNT    
		  INSERT @VCHC ( XN_ID,XN_NO,CRDAYS,AC_CODE,AMOUNT )   
		  SELECT CN_ID,CN_NO+'-5',CREDIT_DAYS,IGST_TAX_AC_CODE,IGST_AMOUNT  
		  FROM #V_PROCESS  
		  WHERE CN_ID=@CCNID AND IGST_AMOUNT<>0 AND cn_type<>2
		  UNION ALL
		  SELECT CN_ID,CN_NO+'-5',CREDIT_DAYS,CGST_TAX_AC_CODE,CGST_AMOUNT  
		  FROM #V_PROCESS  
		  WHERE CN_ID=@CCNID AND CGST_AMOUNT<>0 AND cn_type<>2
		  UNION ALL
		  SELECT CN_ID,CN_NO+'-5',CREDIT_DAYS,SGST_TAX_AC_CODE,SGST_AMOUNT  
		  FROM #V_PROCESS  
		  WHERE CN_ID=@CCNID AND SGST_AMOUNT<>0 AND cn_type<>2
	  		
		  SET @CSTEP=340
		  INSERT @VCHC (XN_ID,XN_NO,AC_CODE,AMOUNT) 	
	  	  SELECT TOP 1 CN_ID,CN_NO+'-6',FREIGHT_IGST_TAX_AC_CODE AS AC_CODE,FREIGHT_IGST_AMOUNT
		  FROM #V_PROCESS  A
		  WHERE CN_ID=@CCNID AND  FREIGHT_IGST_AMOUNT<>0
		  
		  UNION ALL
		  SELECT TOP 1  CN_ID,CN_NO+'-6',FREIGHT_CGST_TAX_AC_CODE,FREIGHT_CGST_AMOUNT
		  FROM #V_PROCESS  A
		  WHERE CN_ID=@CCNID AND FREIGHT_CGST_AMOUNT<>0
		  
		  UNION ALL
		  SELECT TOP 1  CN_ID,CN_NO+'-6',FREIGHT_SGST_TAX_AC_CODE,FREIGHT_SGST_AMOUNT
		  FROM #V_PROCESS  A
		  WHERE CN_ID=@CCNID AND FREIGHT_SGST_AMOUNT<>0
		  
		  				  
		  UNION ALL
		  SELECT TOP 1  CN_ID,CN_NO+'-6',OTHER_CHARGES_IGST_TAX_AC_CODE,OTHER_CHARGES_IGST_AMOUNT
		  FROM #V_PROCESS  A
		  WHERE CN_ID=@CCNID AND OTHER_CHARGES_IGST_AMOUNT<>0
		  
		  UNION ALL
		  SELECT TOP 1  CN_ID,CN_NO+'-6',OTHER_CHARGES_CGST_TAX_AC_CODE,OTHER_CHARGES_CGST_AMOUNT
		  FROM #V_PROCESS  A
		  WHERE CN_ID=@CCNID AND OTHER_CHARGES_CGST_AMOUNT<>0
		  
		  UNION ALL
		  SELECT TOP 1  CN_ID,CN_NO+'-6',OTHER_CHARGES_SGST_TAX_AC_CODE,OTHER_CHARGES_SGST_AMOUNT
		  FROM #V_PROCESS  A
		  WHERE CN_ID=@CCNID AND OTHER_CHARGES_SGST_AMOUNT<>0
		  

		  UNION ALL
		  SELECT TOP 1  CN_ID,CN_NO+'-6',INSURANCE_IGST_TAX_AC_CODE,INSURANCE_IGST_AMOUNT
		  FROM #V_PROCESS  A
		  WHERE CN_ID=@CCNID AND INSURANCE_IGST_AMOUNT<>0
		  
		  UNION ALL
		  SELECT TOP 1  CN_ID,CN_NO+'-6',INSURANCE_CGST_TAX_AC_CODE,INSURANCE_CGST_AMOUNT
		  FROM #V_PROCESS  A
		  WHERE CN_ID=@CCNID AND INSURANCE_CGST_AMOUNT<>0
		  
		  UNION ALL
		  SELECT TOP 1  CN_ID,CN_NO+'-6',INSURANCE_SGST_TAX_AC_CODE,INSURANCE_SGST_AMOUNT
		  FROM #V_PROCESS  A
		  WHERE CN_ID=@CCNID AND INSURANCE_SGST_AMOUNT<>0	

		   SET @CSTEP = 365    
		   IF NOT EXISTS (SELECT TOP 1 paymode_code FROM PAYMODE_XN_DET (NOLOCK) WHERE memo_id=@CCNID AND xn_type='WSR')
				INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT,CRDAYS,ref_bill_no ) 
				SELECT CN_ID,CN_NO,AC_CODE,SUM(cndnet)*-1,CREDIT_DAYS,ref_inv_id
				FROM #V_PROCESS 
				WHERE CN_ID=@CCNID AND TOTAL_AMOUNT<>0
				GROUP BY CN_ID,CN_NO,ref_inv_id,credit_days,ac_code 
			ELSE
				INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT,CRDAYS,REF_BILL_NO ) 
				SELECT  CN_ID,CN_NO,@CCASHACCODE AS AC_CODE,SUM(B.AMOUNT)*-1,CREDIT_DAYS,'' ref_bill_no
				FROM PAYMODE_XN_DET B (NOLOCK)
				JOIN cnm01106 a (NOLOCK) ON b.memo_id=a.cn_id
				WHERE CN_ID=@cCnId AND B.PAYMODE_CODE='0000000'  AND xn_type='WSR'
				GROUP BY CN_ID,CN_NO,CREDIT_DAYS
				UNION ALL
				SELECT  CN_ID,CN_NO,AC_CODE,SUM(cndnet)*-1,CREDIT_DAYS,ref_inv_id ref_bill_no
				FROM PAYMODE_XN_DET B (NOLOCK)
				JOIN #v_process a (NOLOCK) ON b.memo_id=a.cn_id
				WHERE CN_ID=@cCnId AND B.PAYMODE_CODE='0000004'  AND b.xn_type='WSR' 
				GROUP BY CN_ID,CN_NO,ac_code,CREDIT_DAYS,ref_inv_id,credit_days
		    	
				union all
				SELECT CN_ID,CN_NO,V.AC_CODE,SUM(B.AMOUNT)*-1 amount,0 CREDIT_DAYS,'' ref_bill_no
				FROM #V_PROCESS A JOIN PAYMODE_XN_DET B ON A.CN_ID=B.MEMO_ID
				JOIN PAYMODE_MST D ON D.PAYMODE_CODE=B.PAYMODE_CODE
				JOIN #V_PROCESS_PAYMODES V ON V.COLUMNNAME=D.PAYMODE_CODE+'_DOC'
				WHERE Cn_ID=@cCnId AND D.PAYMODE_GRP_CODE='0000002' AND b.xn_type='WSR' 
				GROUP BY CN_ID,CN_NO,V.AC_CODE
				
		   SET @CSTEP = 370    
		   SET @CVMID = ''    
		   SELECT @CVMID = A.VM_ID     
			FROM POSTACT_VOUCHER_LINK A    
			 JOIN VM01106 B ON A.VM_ID=B.VM_ID    
			  WHERE B.CANCELLED=0 AND A.MEMO_ID = @CCNID AND A.XN_TYPE=@CXNTYPE    
		       
		   SET @CSTEP = 380    
		   IF ISNULL(@CVMID,'') = ''    
		   BEGIN    
			   SET @CVMID = 'LATERWSR-'+RTRIM(LTRIM(CONVERT(VARCHAR,@NCTR)))    
			SET @NCTR = @NCTR+1    
		   END    
		       
		   SET @CSTEP = 390    
		   INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )    
		   SELECT @CVMID,@CCNID,@CXNTYPE,LAST_UPDATE FROM CNM01106 WHERE CN_ID = @CCNID    
		       
		   --GET THE CONCATENATED BILL NOS FOR THE DEBITNOTE    
		   SET @CWSLBILLS=NULL    
		   SELECT @CWSLBILLS=ISNULL(@CWSLBILLS+',','')+BILL_NO    
		   FROM #V_PROCESS    
		   WHERE CN_ID=@CCNID    
	             
		   SET @CSTEP = 450        
		   SET @CVOUCHERNO = ''     
 		   SELECT TOP 1 @CVOUCHERNO = VOUCHER_NO FROM VM01106 WHERE VM_ID = @CVMID    
		   
		   IF ISNULL(@CVOUCHERNO,'') = ''    
				SET @CVOUCHERNO = @CVMID    
			             
			       

			SET @CSTEP = 470    
			INSERT @VMC ( VM_ID,VOUCHER_NO,VOUCHER_DT, VOUCHER_CODE, DEPT_ID,     
					BILL_TYPE, BILL_NO, BILL_ID, BILL_DT, BILL_AC_CODE,     
					PARTY_NAME, QUANTITY, NET_AMOUNT, RM_LIST, CANCELLED,DRTOTAL,CRTOTAL    
					,VOUCHER_TYPE,DEPT_NAME,BILL_STATUS )    
			   SELECT @CVMID,@CVOUCHERNO,A.CN_DT,@CVOUCHERCODE,A.DEPT_ID,'WSR',A.CN_NO,A.CN_ID,A.CN_DT,A.AC_CODE    
				  ,B.AC_NAME,SUM(A.QUANTITY),A.TOTAL_AMOUNT,ISNULL(@CWSLBILLS,''),A.CANCELLED,@NDRTOTAL ,@NCRTOTAL    
				  ,'CREDIT NOTE',C.DEPT_NAME,'NEW'    
			   FROM #V_PROCESS A    
			   JOIN LM01106 B ON A.AC_CODE=B.AC_CODE    
			   JOIN LOCATION C ON A.DEPT_ID=C.DEPT_ID    
			   WHERE A.CN_ID=@CCNID      
			   GROUP BY A.CN_DT,A.DEPT_ID,A.CN_NO,A.CN_ID,A.CN_DT,A.AC_CODE    
				  ,B.AC_NAME,A.TOTAL_AMOUNT,C.DEPT_NAME,A.CANCELLED    


			
		   SET @NVDID=1
		   		 				
		   SET @CSTEP = 410    
		   INSERT @VDC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE,     
					    CREDIT_DAYS, CR_DISCOUNT_PERCENTAGE,AC_NAME,REF_INV_ID)    
		   SELECT @CVMID    
			, 'LATER-'+CONVERT(VARCHAR,ROW_NUMBER() OVER(ORDER BY A.AC_CODE)+@NVDID) AS VD_ID    
			, A.AC_CODE    
			,'C/N# ' + @CCNNO
			+(CASE WHEN ISNULL(@CWSLBILLS,'')='' THEN '' ELSE ' AGAINST WSL# '+@CWSLBILLS END)
			+(CASE WHEN @bPostRemarksInNarration=1 THEN ' '+ @cRemarks ELSE '' END)   AS NARRATION    
			,(CASE WHEN SUM(AMOUNT)>0 THEN SUM(AMOUNT) ELSE 0 END) AS DEBIT_AMOUNT    
			,(CASE WHEN SUM(AMOUNT)<0 THEN ABS(SUM(AMOUNT)) ELSE 0 END) AS CREDIT_AMOUNT    
			,(CASE WHEN SUM(AMOUNT) > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE    
			,0 AS CRDAYS    
			,@NTMPCRDISCOUNTPERCENTAGE    
			,B.AC_NAME,ISNULL(REF_BILL_NO,'')
		   FROM @VCHC A    
		   JOIN LMV01106 B ON A.AC_CODE = B.AC_CODE    
		   WHERE A.XN_ID = @CCNID AND AMOUNT<>0   
		   GROUP BY A.AC_CODE,B.AC_NAME,ISNULL(REF_BILL_NO,'')
		   ORDER BY X_TYPE,ABS(SUM(AMOUNT)) DESC    
		       
		       
		   SET @CVDID=''    
		   SET @CSTEP =415     

		   SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC
		   WHERE VM_ID = @CVMID

		  IF @nDrTotal<>@nCrTotal AND ABS(@nDrTotal-@nCrTotal)<=1
		  BEGIN
					INSERT @VDC (VM_ID, VD_ID, AC_CODE,ac_name, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE)
					SELECT TOP 1 @cVmId as vm_id,'later-roff' as vd_id,@CROUNDOFFACCODE as ac_code,b.ac_name,narration,
					(CASE WHEN (@NDRTOTAL-@NCRTOTAL)>0 then 0 else ABS(@NDRTOTAL-@NCRTOTAL) END) AS DEBIT_AMOUNT,
					(CASE WHEN (@NDRTOTAL-@NCRTOTAL)<0 then 0 else (@NDRTOTAL-@NCRTOTAL) END) AS CREDIT_AMOUNT,
					(CASE WHEN (@NDRTOTAL-@NCRTOTAL)<0 then 'Dr' ELSE 'Cr' END) AS x_type
					FROM @vdC a JOIN lm01106 b on @CROUNDOFFACCODE=b.ac_code
					where vm_id=@cVmId
				
					SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC
					WHERE VM_ID = @CVMID
		  END
		
		   UPDATE @VMC SET DRTOTAL=@NDRTOTAL,CRTOTAL=@NCRTOTAL	
			
			
			--if @CCNID='HO0112200000HOF-000012' and @@spid=63
			--	select 'check @vchc',* from @vchC
						               
		   DELETE @VCHC    
		   DELETE FROM #V_PROCESS WHERE CN_ID = @CCNID

	  END           
  
	  SET @CSTEP =420     
--	  SELECT 'BEFORE UPDATING NEW VD ID',* FROM @VDC
	   
	  UPDATE A SET NEW_VD_ID=(SELECT TOP 1 C.VD_ID FROM @VDC C
					  JOIN @VMC D ON D.VM_ID=C.VM_ID 
					  WHERE C.AC_CODE=D.BILL_AC_CODE AND C.VM_ID=A.VM_ID
					  ) FROM @VDC A
	  JOIN @VMC D ON D.VM_ID=A.VM_ID AND A.AC_CODE=D.BILL_AC_CODE
	  
--	  SELECT 'AFTER UPDATING NEW VD ID',* FROM @VDC


	  SET @CSTEP = 425 
	  --INSERT @TBILL_BY_BILL_REF    
	  -- (VM_ID,VD_ID,REF_NO,AMOUNT,LAST_UPDATE,X_TYPE,CR_DAYS)    
	  -- SELECT A.VM_ID,NEW_VD_ID,(CASE WHEN @POST_BILL_BY_BILL_REFTYPE=1 AND ISNULL(D.REF_NO,'')<>'' AND ISNULL(C.BILL_BY_BILL,0)=1
	  -- THEN ISNULL(D.REF_NO,'')  ELSE  DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,LTRIM(RTRIM(B.BILL_NO)),B.BILL_DT,'CR',A.VM_ID) END) AS REF_NO,
	  -- SUM(A.CREDIT_AMOUNT) AS AMOUNT,GETDATE(),'CR',A.CREDIT_DAYS    
	  -- FROM @VDC A
	  -- JOIN @VMC B ON A.VM_ID=B.VM_ID
	  -- JOIN LMP01106 C ON C.AC_CODE=A.AC_CODE
	  -- LEFT OUTER JOIN 
	  -- (SELECT A.REF_NO,E.REF_BILL_NO,B.AC_CODE,E.VM_ID FROM BILL_BY_BILL_REF A 
	  --  JOIN VD01106 B ON A.VD_ID=B.VD_ID
	  --  JOIN VM01106 C ON C.VM_ID=B.VM_ID
	  --  JOIN POSTACT_VOUCHER_LINK D ON D.VM_ID=C.VM_ID
	  --  JOIN @VDC E ON E.REF_BILL_NO=D.MEMO_ID
	  --  WHERE C.CANCELLED=0 AND D.XN_TYPE='WSL'
	  -- ) D ON D.REF_BILL_NO=A.REF_BILL_NO AND D.AC_CODE=A.AC_CODE AND D.VM_ID=A.VM_ID
	  -- WHERE C.BILL_BY_BILL=1
	  -- GROUP BY A.VM_ID,NEW_VD_ID,(CASE WHEN @POST_BILL_BY_BILL_REFTYPE=1 AND ISNULL(D.REF_NO,'')<>'' AND ISNULL(C.BILL_BY_BILL,0)=1
	  -- THEN ISNULL(D.REF_NO,'')  ELSE  DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,LTRIM(RTRIM(B.BILL_NO)),B.BILL_DT,'CR',A.VM_ID) END),
	  -- A.CREDIT_DAYS

 ------- START OF WORKING OF BILL BY BILL ENTRIES POSTING    
 	
   	
	SET @CSTEP = 450
    INSERT @TBILL_BY_BILL_REF  
	(VM_ID,VD_ID,REF_NO,AMOUNT,LAST_UPDATE,X_TYPE,CR_DAYS)  
      
	SELECT A.VM_ID,VD_ID,DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,LTRIM(RTRIM(B.BILL_NO)),B.BILL_DT,'CR',@CVMID) AS REF_NO,  
	SUM(DEBIT_AMOUNT-CREDIT_AMOUNT) AS AMOUNT,GETDATE(),'' AS X_TYPE,A.CREDIT_DAYS
	FROM @VDC   A 
	JOIN @VMC B ON A.VM_ID=B.VM_ID
	JOIN LMP01106 C ON C.AC_CODE=A.AC_CODE
	JOIN CNM01106 D ON D.CN_ID=B.BILL_ID
	LEFT OUTER JOIN 
	(SELECT A.CN_ID FROM CNM01106 A 
	 LEFT OUTER JOIN CND01106 B ON A.CN_ID=B.CN_ID
	 WHERE B.CN_ID IS NULL) E ON E.CN_ID=D.CN_ID
	WHERE BILL_BY_BILL=1 AND ((D.CN_TYPE=2 AND E.CN_ID IS NOT NULL) OR @CPOSTBILLBYBILLREFTYPE='2')
	GROUP BY A.VM_ID,A.VD_ID,A.CREDIT_DAYS,A.AC_CODE,B.BILL_NO,B.BILL_DT

	SET @CSTEP = 455

	IF EXISTS (SELECT TOP 1 b.ac_code FROM @TBILL_BY_BILL_REF a JOIN @vdC b ON a.vd_id=b.vd_id 
				JOIN lm01106 c ON c.ac_code=b.ac_code
				JOIN @vmC d ON d.vm_id=b.vm_id
				JOIN SOR_FDNFCN_LINK sl (NOLOCK)  ON d.bill_id=sl.refFcnMemoId
				JOIN eosssorm sor (NOLOCK) ON sor.MEMO_ID=sl.sorMemoId
				JOIN  location loc (NOLOCK) ON loc.dept_id=sor.party_dept_id
				WHERE loc.sor_loc=1 AND  ISNULL(AgnstSupplier,0)=0)
	    UPDATE a SET on_account=1,ref_no=LEFT(CONVERT(VARCHAR(40),NEWID()),10) 
		FROM @TBILL_BY_BILL_REF a JOIN @vdC b ON a.vd_id=b.vd_id 
		JOIN lm01106 c ON c.ac_code=b.ac_code
		JOIN @vmC d ON d.vm_id=b.vm_id
		JOIN SOR_FDNFCN_LINK sl (NOLOCK)  ON d.bill_id=sl.refFcnMemoId
		JOIN eosssorm sor (NOLOCK) ON sor.MEMO_ID=sl.sorMemoId
		JOIN  location loc (NOLOCK) ON loc.dept_id=sor.party_dept_id
		JOIN gst_accounts_config_mst conf (NOLOCK) ON conf.xn_type='SOR_REC'
		WHERE loc.sor_loc=1 AND  ISNULL(AgnstSupplier,0)=0 AND conf.enableposting=1

   IF @CPOSTBILLBYBILLREFTYPE<>'2' 
   BEGIN  
	 SET @CSTEP = 465  
	 IF OBJECT_ID('TEMPDB..#TMPMEMOS','U') IS NOT NULL
		DROP TABLE #TMPMEMOS
	 
	 SELECT A.VM_ID,B.MEMO_ID,A.AC_CODE,CN_NO,CN_DT,D.REF_NO,ISNULL(A.REF_INV_ID,'') AS REF_INV_ID INTO #TMPMEMOS FROM @VDC A 
	 JOIN POSTACT_VOUCHER_LINK VL ON A.REF_INV_ID=VL.MEMO_ID
	 JOIN VD01106 C ON C.VM_ID=VL.VM_ID AND C.AC_CODE=A.AC_CODE
	 JOIN BILL_BY_BILL_REF D ON D.VD_ID=C.VD_ID
	 JOIN VM01106 E ON E.VM_ID=C.VM_ID
	 JOIN @VLINK B ON B.VM_ID=A.VM_ID
	 JOIN CNM01106 F ON F.CN_ID=B.MEMO_ID
	 LEFT OUTER JOIN LMP01106 LMP ON LMP.AC_CODE=A.AC_CODE
	 WHERE ISNULL(A.REF_INV_ID,'')<>'' AND VL.XN_TYPE='WSL' AND E.CANCELLED=0 AND ISNULL(LMP.BILL_BY_BILL,0)=1
	 AND  B.XN_TYPE='WSR' AND ISNULL(A.REF_INV_ID,'')<>''
	 GROUP BY A.VM_ID,B.MEMO_ID,A.AC_CODE,CN_TYPE,CN_NO,CN_DT,D.REF_NO,ISNULL(A.REF_INV_ID,'')
	 UNION
	 SELECT A.VM_ID,B.MEMO_ID,A.AC_CODE,CN_NO,CN_DT,'' AS REF_NO,ISNULL(A.REF_INV_ID,'') FROM @VDC A 
	 LEFT OUTER JOIN 
	 (SELECT C.REF_INV_ID FROM POSTACT_VOUCHER_LINK VL
	  JOIN VD01106 B ON B.VM_ID=VL.VM_ID
	  JOIN @VDC C ON C.AC_CODE=B.AC_CODE AND C.REF_INV_ID=VL.MEMO_ID
	  JOIN VM01106 D ON D.VM_ID=B.VM_ID
	  WHERE VL.XN_TYPE='WSL' AND CANCELLED=0) C ON C.REF_INV_ID=A.REF_INV_ID    
	  JOIN @VLINK B ON B.VM_ID=A.VM_ID
	 JOIN CNM01106 F ON F.CN_ID=B.MEMO_ID
	 LEFT OUTER JOIN LMP01106 LMP ON LMP.AC_CODE=A.AC_CODE
	 WHERE ISNULL(LMP.BILL_BY_BILL,0)=1 AND C.REF_INV_ID IS NULL
	 GROUP BY A.VM_ID,B.MEMO_ID,A.AC_CODE,CN_TYPE,CN_NO,CN_DT,ISNULL(A.REF_INV_ID,'')
	 
	 --if @@spid=171
	 --SELECT 'CHECK TMPMEMOS',* FROM #TMPMEMOS
	 
	 --SELECT 'MEMOS CHECK',* FROM #TMPMEMOS 
	 SET @CSTEP = 470  
	  	
	 DECLARE @BMAINLOOP BIT,@BLOOP BIT,@NWSRAMOUNT NUMERIC(10,2),@NCTRBB INT,@CSEARCHREFBILLTYPE VARCHAR(10),
			 @CRETREFBILLNO VARCHAR(30)
	 
	 SET @BMAINLOOP=0 
	 WHILE @BMAINLOOP=0
	 BEGIN
	   
	   SET @CSTEP = 480  
	   SET @CCNID=''
	   		
	   SELECT TOP 1 @CVMID=VM_ID,@CPARTYACCODE=AC_CODE,@CCNID=MEMO_ID,@CPARTYACCODE=AC_CODE,
					@CCNNO=CN_NO,@DCNDT=CN_DT,@CREFINVID=REF_INV_ID,@CREFBILLNO=REF_NO FROM #TMPMEMOS
	   
	   
	   IF ISNULL(@CCNID,'')=''
			BREAK
	   
	   PRINT 'POSTING FOR CREDIT NOTE -5.0:('+@CCNID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE
	   
	   BEGIN  
			SELECT @BLOOP=0
			PRINT 'POSTING FOR CREDIT NOTE -5.1:('+@CCNID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE+' REF BILL#'+@CREFBILLNO
      		 SET @NWSRAMOUNT=0
			
			 --SELECT 'BEFORE CHECKING BILLS',* FROM @VDC WHERE VM_ID=@CVMID
					 
			 SET @CSTEP = 520
			 SELECT @NWSRAMOUNT=SUM(CREDIT_AMOUNT-DEBIT_AMOUNT) FROM @VDC WHERE VM_ID=@CVMID AND AC_CODE=@CPARTYACCODE
			 AND REF_INV_ID=@CREFINVID
			 
			 SELECT @NCTRBB=1,@CSEARCHREFBILLTYPE='WSL'
		        
			 WHILE @NCTRBB<=(CASE WHEN @NEXCEPTIONTYPE<>2 THEN 2 ELSE 1 END) 
			 BEGIN  
				  SELECT @CRETREFBILLNO=''  
			      
				  SET @CSTEP = 530
				  PRINT 'POSTING FOR CREDIT NOTE -5.2:('+@CCNID+')'+CONVERT(VARCHAR,GETDATE(),113)+' REF BILL#'+@CREFBILLNO+' FOR AMOUNT:'+STR(@NWSRAMOUNT,10,2)      
			      			              
				  SELECT TOP 1 @CRETREFBILLNO=A.REF_NO FROM BILL_BY_BILL_REF A (NOLOCK)  
				  JOIN VD01106 B  (NOLOCK)  ON A.VD_ID=B.VD_ID  
				  JOIN VM01106 C (NOLOCK) ON C.VM_ID=B.VM_ID  
			  
				  LEFT OUTER JOIN   
				  (SELECT A.REF_NO,SUM( CASE WHEN A.X_TYPE = 'DR' THEN -A.AMOUNT ELSE A.AMOUNT END) AS ADJ_AMT  
				  FROM BILL_BY_BILL_REF A  (NOLOCK) 
				  JOIN VD01106 B  (NOLOCK) ON A.VD_ID = B.VD_ID  
				  JOIN VM01106 C ON B.VM_ID = C.VM_ID  
				  WHERE B.AC_CODE=@CPARTYACCODE AND C.CANCELLED = 0 AND A.X_TYPE='CR'
				  GROUP BY A.REF_NO) E ON E.REF_NO=A.REF_NO  
				  LEFT OUTER JOIN   
				  (  
				   SELECT A.REF_NO AS REF_BILL_NO,SUM(AMOUNT) AS ADJ_AMT  
				   FROM @TBILL_BY_BILL_REF A  
				   JOIN @VDC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID 
				   WHERE B.AC_CODE=@CPARTYACCODE AND B.VM_ID<>@CVMID  
				   GROUP BY A.REF_NO
				   )  F ON F.REF_BILL_NO=A.REF_NO   
			             
				  WHERE B.AC_CODE=@CPARTYACCODE AND ((@NCTRBB=1 AND A.REF_NO=@CREFBILLNO)   
				  OR (@NCTRBB=2 AND A.REF_NO<>@CREFBILLNO))    
				  AND (C.BILL_TYPE=@CSEARCHREFBILLTYPE OR LEFT(C.VM_ID,2)='OB') AND C.CANCELLED=0   
				  AND (A.AMOUNT-ISNULL(E.ADJ_AMT,0)-ISNULL(F.ADJ_AMT,0))>=@NWSRAMOUNT  
			      
			      
				  SET @CSTEP = 540     
				  SET @NCTRBB=@NCTRBB+1  

				  PRINT 'POSTING FOR CREDIT NOTE -5.3:('+@CCNID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE+'RETREFBILL#'+@CRETREFBILLNO		            
			   
				  IF ISNULL(@CRETREFBILLNO,'')<>''  
					BREAK  
			      

		        
			 END  
		       
			 PRINT 'POSTING FOR CREDIT NOTE -5.4:('+@CCNID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE
			        
			 ---- END CHANGE ON 28-06-2016  
		     
			 SET @CSTEP = 550
			 --CREATING BILL BY BILL DETAIL FOR SUPPLIER ACCOUNT FOR DN AMOUNT DEBITED/CASH DISCOUNT CREDITED/PRTAMOUNT CREDITED        
			 INSERT @TBILL_BY_BILL_REF  
			 (VM_ID,VD_ID,REF_NO,AMOUNT,LAST_UPDATE,X_TYPE,CR_DAYS,REF_INV_ID)  
			 SELECT @CVMID,VD_ID,(CASE WHEN @CPOSTBILLBYBILLREFTYPE<>'2' AND @CRETREFBILLNO<>'' 
				THEN @CRETREFBILLNO   
				ELSE DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,LTRIM(RTRIM(@CCNNO)),@DCNDT,'DR',@CVMID) END) AS REF_NO,  
				(DEBIT_AMOUNT-CREDIT_AMOUNT) AS BILL_AMOUNT,GETDATE(),
			 (CASE WHEN (DEBIT_AMOUNT-CREDIT_AMOUNT)>0 THEN 'DR' ELSE 'CR' END),
			 A.CREDIT_DAYS,@CREFINVID AS REF_INV_ID  
			 FROM @VDC A  
			 WHERE A.VM_ID=@CVMID AND AC_CODE=@CPARTYACCODE AND A.REF_INV_ID=@CREFINVID
			
			 SET @CSTEP = 555
			 UPDATE @VMC SET BILL_STATUS=(CASE WHEN @CPOSTBILLBYBILLREFTYPE<>'2' AND @CRETREFBILLNO<>''  THEN 'ADJUST'   
					   ELSE 'NEW' END)  WHERE VM_ID=@CVMID
			
			
			--if @@spid=171
			--	select 'check bbref',@CRETREFBILLNO,@CPOSTBILLBYBILLREFTYPE,* from @TBILL_BY_BILL_REF
			  
			 PRINT 'POSTING FOR CREDIT NOTE -5.5:('+@CCNID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE
			  
			  SET @CWSLBILLS=NULL  
			  SELECT @CWSLBILLS=ISNULL(@CWSLBILLS+',','')+REF_NO
			  FROM @TBILL_BY_BILL_REF A
			  WHERE VM_ID=@CVMID
			  
			 SET @CSTEP = 560
			  IF ISNULL(@CWSLBILLS,'')<>''
				  UPDATE @VDC SET NARRATION='C/N# ' +RIGHT(@CCNID,10)+' AGAINST BILL# '+@CWSLBILLS
				  WHERE VM_ID=@CVMID AND ISNULL(NARRATION,'')=''
			 
			 PRINT 'POSTING FOR CREDIT NOTE -5.6:('+@CCNID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE
			 --SELECT @CRETREFBILLNO AS BILL_NO,@CCNID,* FROM @TBILL_BY_BILL_REF   
		     
		 END ---- END OF ISNULL(@NDNTYPE,0)=2  
		
		 DELETE FROM #TMPMEMOS WHERE MEMO_ID =  @CCNID AND REF_INV_ID=@CREFINVID

	     	 
	  END ----- END OF @BMAINLOOP=0

  END
  
  SET @CSTEP = 565
  
  
  UPDATE A SET VD_ID=B.NEW_VD_ID FROM @TBILL_BY_BILL_REF  A
  JOIN @VDC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID WHERE B.NEW_VD_ID IS NOT NULL
  
  IF @CPOSTBILLBYBILLREFTYPE='2'
  BEGIN
	  SET @CSTEP = 567
	  WHILE EXISTS (SELECT TOP 1 ref_no FROM @TBILL_BY_BILL_REF WHERE ISNULL(adj_remarks,'')='')
	  BEGIN
		  
		  SELECT TOP 1 @cLoopRefNo=ref_no,@cLoopVmId=vm_id FROM @TBILL_BY_BILL_REF
		  WHERE ISNULL(adj_remarks,'')=''

		  SET @cRemarks=NULL

		  PRINT  'Checking Bill references of Credit note #'+@cLOOPREFNO
		  SELECT @cRemarks=coalesce(@cRemarks+',','')+b.inv_no+'/'+convert(varchar,inv_dt,112) FROM
		   (SELECT inv_no,inv_dt FROM @VLINK a
				JOIN cnd01106 b (NOLOCK) ON a.MEMO_ID=b.cn_id
				WHERE vm_id=@cLoopVmId AND ISNULL(b.inv_no,'')<>''
				GROUP BY vm_id,inv_no,inv_dt) b
		  
		  IF ISNULL(@cRemarks,'')<>''
			UPDATE @TBILL_BY_BILL_REF SET adj_remarks=@cRemarks WHERE ref_no=@cLoopRefNo
		  ELSE
			UPDATE @TBILL_BY_BILL_REF SET adj_remarks=@cLoopRefNo WHERE ref_no=@cLoopRefNo

	  END
  END

  SET @CSTEP = 567.5
  UPDATE @VDC SET VD_ID=NEW_VD_ID WHERE NEW_VD_ID IS NOT NULL
  
--SELECT 'CHECK GROUP',VM_ID,NEW_VD_ID,NARRATION,SUM(DEBIT_AMOUNT) AS DEBIT_AMOUNT,SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT
--	   FROM @VDC GROUP BY VM_ID,NEW_VD_ID,NARRATION
  		     
  UPDATE A SET DEBIT_AMOUNT=B.DEBIT_AMOUNT,CREDIT_AMOUNT=B.CREDIT_AMOUNT FROM @VDC A
  JOIN (SELECT VM_ID,NEW_VD_ID,NARRATION,SUM(DEBIT_AMOUNT) AS DEBIT_AMOUNT,SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT
	   FROM @VDC GROUP BY VM_ID,NEW_VD_ID,NARRATION) B ON A.VM_ID=B.VM_ID AND A.NEW_VD_ID=B.NEW_VD_ID
	 
  SET @CSTEP = 570
	 DELETE A FROM @VDC A
	 JOIN LMP01106 LMP ON LMP.AC_CODE=A.AC_CODE
	 JOIN LM01106 LM ON LM.AC_CODE=A.AC_CODE
	 JOIN @vmC b on b.VM_ID=a.vm_id AND b.BILL_AC_CODE=a.AC_CODE
	 WHERE A.REF_INV_ID<>(SELECT TOP 1 REF_INV_ID FROM @VDC B WHERE B.VM_ID=A.VM_ID AND ISNULL(REF_INV_ID,'')<>''
							AND B.NARRATION=A.NARRATION)
	 AND (BILL_BY_BILL=1 OR CHARINDEX(HEAD_CODE,@CDEBTORHEADS)>0 OR a.ac_code=b.BILL_AC_CODE)		   

  SET @CSTEP = 575
  UPDATE A SET DRTOTAL=B.DEBIT_AMOUNT,CRTOTAL=B.CREDIT_AMOUNT FROM @VMC A
  JOIN (SELECT VM_ID,SUM(DEBIT_AMOUNT) AS DEBIT_AMOUNT,SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT
	   FROM @VDC GROUP BY VM_ID) B ON A.VM_ID=B.VM_ID

   SET @CSTEP =580
   IF OBJECT_ID('TEMPDB..#TMPBB','U') IS NOT NULL
	DROP TABLE #TMPBB
  
    SELECT  VM_ID,VD_ID,REF_NO,  
	SUM(AMOUNT) AS AMOUNT,GETDATE() AS LAST_UPDATE,X_TYPE, 
	CR_DAYS,adj_remarks  
	INTO #TMPBB FROM @TBILL_BY_BILL_REF A  
	GROUP BY VM_ID,VD_ID,REF_NO,CR_DAYS,adj_remarks,X_TYPE
	
	UPDATE #TMPBB SET X_TYPE=(CASE WHEN AMOUNT<0 THEN 'CR' ELSE 'DR' END),AMOUNT=ABS(AMOUNT)
	WHERE X_TYPE=''
	 
	DELETE FROM @TBILL_BY_BILL_REF
	 
	SET @CSTEP = 585   		
	 INSERT @TBILL_BY_BILL_REF  
	 (VM_ID,VD_ID,REF_NO,AMOUNT,LAST_UPDATE,X_TYPE,CR_DAYS,adj_remarks)  
	 SELECT VM_ID,VD_ID,REF_NO,ABS(AMOUNT),LAST_UPDATE,X_TYPE,CR_DAYS,adj_remarks
	 FROM #TMPBB 
  ------- END OF WORKING OF BILL BY BILL ENTRIES POSTING        
	   
	  SET @CSTEP = 590
	  UPDATE A SET DEBIT_AMOUNT=B.DEBIT_AMOUNT,CREDIT_AMOUNT=B.CREDIT_AMOUNT FROM @VDC A
	  JOIN (SELECT A.VM_ID,A.AC_CODE,SUM(DEBIT_AMOUNT) AS DEBIT_AMOUNT,SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT
		   FROM @VDC A
		   JOIN @VMC B ON A.AC_CODE=B.BILL_AC_CODE AND A.VM_ID=B.VM_ID GROUP BY A.VM_ID,AC_CODE) B 
		   ON A.VM_ID=B.VM_ID AND A.AC_CODE=B.AC_CODE
		 
	  SET @CSTEP = 435
	  DELETE FROM @VDC WHERE ISNULL(NEW_VD_ID,'')<>VD_ID AND ISNULL(NEW_VD_ID,'')<>''	    					  
	            
   	  SET @CSTEP = 440
		UPDATE @VDC SET DEBIT_AMOUNT=(CASE WHEN DEBIT_AMOUNT<>0 THEN DEBIT_AMOUNT ELSE NULL END),
		CREDIT_AMOUNT=(CASE WHEN CREDIT_AMOUNT<>0 THEN CREDIT_AMOUNT ELSE NULL END)

	SET @CSTEP=445
	EXEC SP_CHKXNSAVELOG 'WSRPOST',@cStep,1,@nSpId,'',1	 	
	
	DELETE FROM ACT_VM01106_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_VD01106_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_BILL_BY_BILL_REF_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_POSTACT_VOUCHER_LINK_UPLOAD WHERE SP_ID=@NSPID
	
	SET @CSTEP = 450
	EXEC SP_CHKXNSAVELOG 'WSRPOST',@cStep,1,@nSpId,'',1	 		
	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
    INSERT ACT_VM01106_UPLOAD	( ANGADIA_CODE, APPROVED, APPROVEDLEVELNO, ATTACHMENT_FILE, AUDITED_DT, 
    AUDITED_USER_CODE, BILL_AC_CODE, BILL_DT, BILL_ID, BILL_NO, BILL_TYPE, CANCELLED, CASH_VOUCHER, COMPANY_CODE, 
    CRTOTAL, DEPT_ID, DRTOTAL, EDT_USER_CODE, FIN_YEAR, FREEZE, LAST_UPDATE, LR_DT, LR_NO, MEMO, MRR_LIST, OP_ENTRY,
    QUANTITY, REF_NO, REF_VM_ID, REMINDER_DAYS, SALE_VOUCHER, SENT_FOR_RECON, SENT_TO_HO, SMS_SENT, SR_NO, 
    UPLOADED_TO_ACTIVSTREAM, USER_CODE, VM_ID, VM_NO, VOUCHER_CODE, VOUCHER_DT, VOUCHER_NO, SP_ID,TEMP_VM_ID )  
    SELECT 	  ANGADIA_CODE,0 AS APPROVED,0 AS APPROVEDLEVELNO,'' AS ATTACHMENT_FILE,'' AS AUDITED_DT, 
    '' AS AUDITED_USER_CODE, BILL_AC_CODE,BILL_DT, ISNULL(BILL_ID,'') AS BILL_ID,ISNULL( BILL_NO,'') AS BILL_NO,
     BILL_TYPE,CANCELLED, 
    0 AS CASH_VOUCHER, '01' AS COMPANY_CODE, CRTOTAL, DEPT_ID, DRTOTAL,'' AS EDT_USER_CODE,
	('01'+dbo.FN_GETFINYEAR(voucher_dt)) FIN_YEAR, 
    0 AS FREEZE,GETDATE() AS  LAST_UPDATE,'' AS LR_DT,'' AS LR_NO,0 AS MEMO,'' AS MRR_LIST,0 AS  OP_ENTRY,
    QUANTITY, '' AS REF_NO,'' AS REF_VM_ID,0 AS  REMINDER_DAYS,1 AS SALE_VOUCHER,0 AS  SENT_FOR_RECON,0 AS SENT_TO_HO, 
    0 AS SMS_SENT,0 AS SR_NO,0 AS UPLOADED_TO_ACTIVSTREAM,'0000000' AS USER_CODE,
    VM_ID,'' AS VM_NO, VOUCHER_CODE, VOUCHER_DT,VOUCHER_NO, @NSPID AS SP_ID,'' AS TEMP_VM_ID 
    FROM @vmC A 
    
	
	SET @CSTEP = 455
	EXEC SP_CHKXNSAVELOG 'WSRPOST',@cStep,1,@nSpId,'',1	 		

	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_VD01106_UPLOAD	( AC_CODE, AUTOENTRY, CHK_RECON, COMPANY_CODE, CONTROL_AC, COST_CENTER_AC_CODE, COST_CENTER_DEPT_ID, 
	CREDIT_AMOUNT, DEBIT_AMOUNT, LAST_UPDATE, NARRATION, RECON_DT, SECONDARY_NARRATION, VAT_ENTRY, VD_ID, VM_ID, VS_AC_CODE, X_TYPE, SP_ID,TEMP_VD_ID )
	SELECT AC_CODE,0 AS AUTOENTRY,0 AS CHK_RECON,'01' AS COMPANY_CODE,0 AS CONTROL_AC,'0000000000' AS COST_CENTER_AC_CODE, 
	ISNULL(b.Dept_id,@CDEPTID) AS COST_CENTER_DEPT_ID,CREDIT_AMOUNT, DEBIT_AMOUNT,GETDATE() AS LAST_UPDATE,ISNULL(NARRATION,'') AS NARRATION,'' AS RECON_DT, 
	'' AS SECONDARY_NARRATION, 0 AS VAT_ENTRY,VD_ID,A.VM_ID,ISNULL(VS_AC_CODE,'0000000000') AS VS_AC_CODE,
	X_TYPE, @NSPID AS SP_ID,'' AS TEMP_VD_ID 
	FROM @vdC A
	JOIN @vmC B ON A.VM_ID=B.VM_ID
    WHERE (DEBIT_AMOUNT<>0 OR CREDIT_AMOUNT<>0)

	
	SET @CSTEP = 457
	EXEC SP_CHKXNSAVELOG 'WSRPOST',@cStep,1,@nSpId,'',1	 		
	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_BILL_BY_BILL_REF_UPLOAD	( adj_remarks, AMOUNT, BB_ROW_ID, CR_DAYS, LAST_UPDATE, PAYMENT_ADJ_REF_NO, 
	REF_NO,  VD_ID, X_TYPE, SP_ID ,VM_ID,cd_percentage,cd_base_amount,ignore_cd_base_amount,
	cd_posted,org_bill_amount,org_bill_dt,org_bill_no,on_account)  
	SELECT a.adj_remarks,AMOUNT,'' AS BB_ROW_ID,0 AS CR_DAYS,GETDATE() AS LAST_UPDATE,'' AS PAYMENT_ADJ_REF_NO, 
	a.ref_no, A.VD_ID,A.X_TYPE,@NSPID AS SP_ID,A.VM_ID,
	0 cd_percentage,0 cd_base_amount,0 ignore_cd_base_amount,0 cd_posted,d.net_amount as org_bill_amount,
	d.inv_DT org_bill_dt,d.inv_no org_bill_no,a.on_account FROM @TBILL_BY_BILL_REF A
    JOIN @vdC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID
    JOIN @vmC C ON B.VM_ID=C.VM_ID
	JOIN @vLink v ON v.VM_ID=c.VM_ID
	LEFT JOIN inm01106 d ON d.inv_id=v.MEMO_ID
    WHERE A.AMOUNT<>0
	
	SET @CSTEP = 460
	EXEC SP_CHKXNSAVELOG 'WSRPOST',@cStep,1,@nSpId,'',1	 		
	
	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_POSTACT_VOUCHER_LINK_UPLOAD	( LAST_UPDATE, MEMO_ID, VM_ID, XN_TYPE, SP_ID )  
	SELECT 	LAST_UPDATE, MEMO_ID, A.VM_ID, A.XN_TYPE, @NSPID AS SP_ID 
	FROM @vlink A
    JOIN @vmC B ON A.VM_ID=B.VM_ID

    SET @CSTEP = 580

	SELECT @nSpId sp_id, CONVERT(BIT,1) AS CHK,CONVERT(BIT,1) optimized, A.*,(CASE WHEN B.VM_ID IS NOT NULL 
    THEN CONVERT(BIT,1) ELSE CONVERT(BIT,0) END) AS ERROR_FLAG,
    (CASE WHEN B.VM_ID IS NOT NULL THEN CONVERT(VARCHAR(500),'DEBIT & CREDIT TOTAL MISMATCH') ELSE CONVERT(VARCHAR(500),'') END) AS ERROR_DESC
    FROM @VMC A
    LEFT OUTER JOIN 
    (SELECT VM_ID,SUM(DEBIT_AMOUNT) AS DRTOTAL,SUM(CREDIT_AMOUNT) AS CRTOTAL
     FROM @VDC GROUP BY VM_ID
     HAVING SUM(DEBIT_AMOUNT)<>SUM(CREDIT_AMOUNT)) B ON A.VM_ID=B.VM_ID

		
		
		SELECT * FROM @VDC ORDER BY VM_ID    
		SELECT * FROM #ERRORS  WHERE 1=2   
		SELECT * FROM @VLINK ORDER BY VM_ID    
	    
		SELECT B.AC_NAME,A.*,A.REF_NO AS BILL_NO FROM @TBILL_BY_BILL_REF A
		JOIN @VDC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID
		JOIN @VLINK C ON B.VM_ID=C.VM_ID


        
END TRY    
 
BEGIN CATCH    
	SET @CERRORMSG='ERROR IN PROCEDURE POSTACT_GST_WSR AT STEP#'+@CSTEP+' '+ERROR_MESSAGE()
	GOTO END_PROC
END CATCH

END_PROC:

IF @CERRORMSG<>''
	SELECT @CERRORMSG AS ERRMSG

END
--END OF PROCEDURE - POSTACT_GST_WSR