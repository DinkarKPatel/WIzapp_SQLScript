create PROCEDURE SP_CHECKSTOCK_CNPS_PASTE
 @Cspid VARCHAR(50),    
 @BDONOTCHECKSTOCK BIT=0,    
 @CBINID  VARCHAR(7)='', 
 @CWHERE VARCHAR(40)='',  
 @NQTY NUMERIC(14,2)=0,  
 @CUSERCODE VARCHAR(10),
 @NRATEREVISION INT =0,
 @CXNTYPE VARCHAR(5)='',
 @NMRPWS NUMERIC(1)=1,
 @BESTIMATEMODE NUMERIC(1,0)=0,
 @XN_ITEM_TYPE NUMERIC(2,0)=1,
 @cDeptID VARCHAR(10)= '',
 @BAGAINSTBO bit=0
 
-- WITH ENCRYPTION
AS    
BEGIN   
	 DECLARE @NSTKQTY NUMERIC(10,3),@CPRDCODE VARCHAR(100),@CLOC_ID  VARCHAR(5),@CDONOTCHECKSTOCK VARCHAR(5),
	 @BSTOCKNA BIT,@NCNT NUMERIC(3,0),@DEXPIRYDT DATETIME, @NITEMTYPE NUMERIC(2,0),@CSKUPC VARCHAR(50),@nCodingScheme NUMERIC(1,0),
	 @cBarCodeSeparator VARCHAR(10)
	        
	 if @NMRPWS=0
		SET @NMRPWS=1
     IF ISNULL(@cDeptID,'')='' 
	    SELECT TOP 1 @CLOC_ID=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID
	 ELSE
	    SELECT @CLOC_ID= @cDeptID
	 
	 UPDATE wsl_ITEM_DETAILS SET ROW_ID=CAST('LATER'+CAST(NEWID() AS VARCHAR(40)) AS VARCHAR(40))
		 WHERE SP_ID=RTRIM(LTRIM(@Cspid))	and isnull(row_id,'')=''

	IF ISNULL(@XN_ITEM_TYPE,0)=0
	SET @XN_ITEM_TYPE=1

   UPDATE ITEM SET ERRMSG=CASE WHEN  @XN_ITEM_TYPE=1 AND D.ITEM_TYPE=2 THEN 'CONSUMABLE ITEM NOT ALLOWED IN INVENTORY TRANSCTION'
	                     WHEN  @XN_ITEM_TYPE=1 AND D.ITEM_TYPE=3 THEN 'ASSESTS    ITEM NOT ALLOWED IN INVENTORY TRANSCTION'
	                     WHEN  @XN_ITEM_TYPE=1 AND D.ITEM_TYPE=4 THEN 'SERVICE    ITEM NOT ALLOWED IN INVENTORY TRANSCTION'
	                     
	                     WHEN  @XN_ITEM_TYPE=2 AND D.ITEM_TYPE=1 THEN 'INVENTORY  ITEM NOT ALLOWED IN CONSUMBLE TRANSCTION'
	                     WHEN  @XN_ITEM_TYPE=2 AND D.ITEM_TYPE=3 THEN 'ASSESTS    ITEM NOT ALLOWED IN CONSUMBLE TRANSCTION'
	                     WHEN  @XN_ITEM_TYPE=2 AND D.ITEM_TYPE=4 THEN 'SERVICE    ITEM NOT ALLOWED IN CONSUMBLE TRANSCTION'
	                     
	                     WHEN  @XN_ITEM_TYPE=3 AND D.ITEM_TYPE=1 THEN 'INVENTORY  ITEM NOT ALLOWED IN ASSESTS   TRANSCTION'
	                     WHEN  @XN_ITEM_TYPE=3 AND D.ITEM_TYPE=2 THEN 'CONSUMABLE ITEM NOT ALLOWED IN ASSESTS   TRANSCTION'
	                     WHEN  @XN_ITEM_TYPE=3 AND D.ITEM_TYPE=4 THEN 'SERVICE    ITEM NOT ALLOWED IN ASSESTS   TRANSCTION'
	                     
	                     
	                     WHEN  @XN_ITEM_TYPE=4 AND D.ITEM_TYPE=1 THEN 'INVENTORY  ITEM NOT ALLOWED IN SERVICE   TRANSCTION'
	                     WHEN  @XN_ITEM_TYPE=4 AND D.ITEM_TYPE=2 THEN 'CONSUMBLE  ITEM NOT ALLOWED IN SERVICE   TRANSCTION'
	                     WHEN  @XN_ITEM_TYPE=4 AND D.ITEM_TYPE=3 THEN 'ASSESTS    ITEM NOT ALLOWED IN SERVICE   TRANSCTION '
						 ELSE '' END
	  FROM wsl_ITEM_DETAILS item
	 JOIN SKU A(NOLOCK) ON A.product_code=ITEM.product_code
	 JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE=B.ARTICLE_CODE
	 JOIN SECTIOND C(NOLOCK) ON C.SUB_SECTION_CODE=B.SUB_SECTION_CODE
	 JOIN SECTIONM D(NOLOCK) ON D.SECTION_CODE=C.SECTION_CODE
	 WHERE SP_ID=RTRIM(LTRIM(@Cspid))
	 AND CASE WHEN ISNULL(D.ITEM_TYPE,0) IN (0,1) THEN 1 ELSE D.ITEM_TYPE END <>ISNULL(@XN_ITEM_TYPE,1)
	 

	   IF EXISTS (SELECT TOP 1 'U' FROM wsl_ITEM_DETAILS WHERE SP_ID=RTRIM(LTRIM(@Cspid)) AND ISNULL(ERRMSG,'')<>'')
	   GOTO END_PROC
	 
	
	 UPDATE A SET ERRMSG ='BARCODE NOT FOUND' FROM wsl_ITEM_DETAILS A
	 LEFT JOIN SKU (NOLOCK) ON A.PRODUCT_CODE =SKU.PRODUCT_CODE 
	 WHERE SP_ID=RTRIM(LTRIM(@Cspid)) AND SKU.PRODUCT_CODE IS NULL


	 IF EXISTS (SELECT TOP 1 'U' FROM wsl_ITEM_DETAILS WHERE SP_ID=RTRIM(LTRIM(@Cspid)) AND ISNULL(ERRMSG,'')<>'')
	  GOTO END_PROC

	
	DECLARE @ALLOW_ACCESS BIT ,@BINSTOCK NUMERIC(10,2)  ,@MAINTAIN_UNQ_QTY BIT
	 
	---VALIDATION FOR UNIQUR BARCODE----
	SELECT  TOP 1 @MAINTAIN_UNQ_QTY=VALUE FROM CONFIG(NOLOCK) WHERE CONFIG_OPTION='MAINTAIN_01_QTY_UNQ_CODING' 
	
	
	IF @CXNTYPE='WSR' AND ISNULL(@MAINTAIN_UNQ_QTY,1)=1	
	BEGIN
	 IF EXISTS(	SELECT TOP 1 'U' FROM PMT01106 A (NOLOCK) 
	    join wsl_ITEM_DETAILS tmp (nolock) on a.product_code =tmp.PRODUCT_CODE 
		JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
		JOIN ARTICLE C (NOLOCK) ON C.ARTICLE_CODE=B.ARTICLE_CODE
		WHERE  A.QUANTITY_IN_STOCK >0 AND b.barcode_coding_scheme=3  AND a.dept_id=@CLOC_ID and tmp.SP_ID=RTRIM(LTRIM(@Cspid)))
		BEGIN 
			 SELECT 'UNIQUE BARCODE HAS ALREADY IN STOCK....PLEASE CHECK' AS RETMSG  
			 RETURN
		END
	END	
	
		
	
   UPDATE A SET ERRMSG=CASE WHEN @BESTIMATEMODE=1 THEN  'REGULAR INVOICE  CAN NOTE SCAN ESTMATE BARCODE PLEASE CHECK ' 
			 ELSE 'ESTMATE INVOCE  CAN NOTE SCAN REGULAR BARCODE PLEASE CHECK '  END 
   FROM wsl_ITEM_DETAILS A (NOLOCK)
   JOIN SKU (NOLOCK) ON A.PRODUCT_CODE =SKU.PRODUCT_CODE 
   WHERE A.SP_ID=RTRIM(LTRIM(@Cspid)) AND CASE WHEN SKU.ER_FLAG IN (0,1) THEN 1 ELSE 2 END<>@BESTIMATEMODE
   
    IF EXISTS (SELECT TOP 1 'U' FROM wsl_ITEM_DETAILS WHERE SP_ID=RTRIM(LTRIM(@Cspid)) AND ISNULL(ERRMSG,'')<>'')
	   GOTO END_PROC
   
    UPDATE PR SET ERRMSG ='SELECTED BARCODE IS PART OF STOCK RECONCILIATION....PLEASE CHECK' FROM STMH01106 A(NOLOCK) JOIN PMT01106 B(NOLOCK) ON A.REP_ID=B.REP_ID
	JOIN wsl_ITEM_DETAILS PR ON PR.PRODUCT_CODE = B.product_code AND PR.BIN_ID =B.BIN_ID 
	AND B.DEPT_ID= @CLOC_ID AND  PR.SP_ID=RTRIM(LTRIM(@Cspid))
	  
	 
    IF EXISTS (SELECT TOP 1 'U' FROM wsl_ITEM_DETAILS WHERE SP_ID=RTRIM(LTRIM(@Cspid)) AND ISNULL(ERRMSG,'')<>'')
	   GOTO END_PROC		
   

   
					
					SELECT TMP.PRODUCT_CODE  AS PRODUCT_CODE, B.ARTICLE_NO, B.ARTICLE_NAME, 
					sn.PARA1_NAME, sn.PARA2_NAME, sn.PARA3_NAME, E.UOM_NAME,         
					A.PURCHASE_PRICE,sn.SECTION_NAME, sn.SUB_SECTION_NAME,      
					SN.PARA4_NAME,SN.PARA5_NAME,SN.PARA6_NAME,ISNULL(E.UOM_TYPE,0) AS [UOM_TYPE],      
					B.DT_CREATED AS [ART_DT_CREATED],F.DT_CREATED AS [PARA3_DT_CREATED],A.DT_CREATED AS [SKU_DT_CREATED],      
					B.STOCK_NA,TMP.PRODUCT_CODE  AS EAN,  
					F1.FORM_NAME,F1.TAX_PERCENTAGE , A.PRODUCT_NAME,(CASE WHEN ISNULL(a.ER_FLAG,0)=0 THEN 1 ELSE A.ER_FLAG END) AS ER_FLAG,
					sn.AC_NAME,A.INV_DT,A.RECEIPT_DT ,B.ALIAS AS [ARTICLE_ALIAS],'' AS [WIP_UID],
					(A.PURCHASE_PRICE+ISNULL(SKU_OH.TAX_AMOUNT,0)+ ISNULL(SKU_OH.OTHER_CHARGES,0) +   
					ISNULL(SKU_OH.ROUND_OFF,0) + ISNULL(SKU_OH.FREIGHT,0)- ISNULL(SKU_OH.DISCOUNT_AMOUNT,0) +
					ISNULL(SKU_OH.EXCISE_DUTY_AMOUNT,0)) AS LANDED_COST,A.ONLINE_PRODUCT_CODE AS ONLINE_BAR_CODE,
					A.VENDOR_EAN_NO,(CASE WHEN ISNULL(A.HSN_CODE,'')='' THEN B.HSN_CODE ELSE A.HSN_CODE END) AS HSN_CODE,
					Sn.sku_item_type  ITEM_TYPE,B.UOM_CODE,F1.FORM_ID,A.MRP,A.WS_PRICE,a.AC_CODE ,
					B.ARTICLE_CODE ,A.PARA1_CODE,A.PARA2_CODE,A.PARA3_CODE,A.PARA4_CODE,A.PARA5_CODE,A.PARA6_CODE,B.PARA1_SET,B.PARA2_SET ,ISNULL(A.FIX_MRP,0) AS [FIX_MRP],
					SN.PARA1_NAME ,SN.PARA2_NAME,SN.para2_order ,A.INV_NO AS BILL_NO,A.challan_no 
					,B.sub_section_code,@CDEPTID AS DEPT_ID,TMP.ROW_ID ,GETDATE() AS LAST_UPDATE,TMP.PS_ID ,
					0 AS selling_days,0 AS CANCELLED,B.discon ,b.article_desc ,A.ws_price AS WSP,A.barcode_coding_scheme AS CODING_SCHEME,
					'' AS BRAND_NAME,TMP.QUANTITY  ,
					'' AS CITY  ,TMP.BIN_ID ,BIN.BIN_NAME ,CAST('' AS VARCHAR(50)) AS SP_ID,
					 TMP.PRODUCT_CODE AS ORG_PRODUCUt_CODE,CAST('' AS VARCHAR(20)) AS BIX_ID
					,ISNULL(SN.ATTR1_KEY_NAME,'') as ATTR1_KEY_NAME   ,ISNULL(SN.ATTR2_KEY_NAME,'')  as ATTR2_KEY_NAME
				    ,ISNULL(SN.ATTR3_KEY_NAME,'') as ATTR3_KEY_NAME  ,ISNULL(SN.ATTR4_KEY_NAME,'') as ATTR4_KEY_NAME
					,ISNULL(SN.ATTR5_KEY_NAME,'') as ATTR5_KEY_NAME,ISNULL(SN.ATTR6_KEY_NAME,'') as ATTR6_KEY_NAME
					,ISNULL(SN.ATTR7_KEY_NAME,'')  ATTR7_KEY_NAME ,ISNULL(SN.ATTR8_KEY_NAME,'')  ATTR8_KEY_NAME
					,ISNULL(SN.ATTR9_KEY_NAME,'')  ATTR9_KEY_NAME ,ISNULL(SN.ATTR10_KEY_NAME,'') ATTR10_KEY_NAME
					,ISNULL(SN.ATTR11_KEY_NAME,'') ATTR11_KEY_NAME,ISNULL(SN.ATTR12_KEY_NAME,'') ATTR12_KEY_NAME
					,ISNULL(SN.ATTR13_KEY_NAME,'') ATTR13_KEY_NAME ,ISNULL(SN.ATTR14_KEY_NAME,'') ATTR14_KEY_NAME
					,ISNULL(SN.ATTR15_KEY_NAME,'') ATTR15_KEY_NAME     
					,ISNULL(SN.ATTR16_KEY_NAME,'') ATTR16_KEY_NAME,ISNULL(SN.ATTR17_KEY_NAME,'') ATTR17_KEY_NAME
					,ISNULL(SN.ATTR18_KEY_NAME,'') ATTR18_KEY_NAME,ISNULL(SN.ATTR19_KEY_NAME,'') ATTR19_KEY_NAME
					,ISNULL(SN.ATTR20_KEY_NAME,'')  ATTR20_KEY_NAME  ,ISNULL(SN.ATTR21_KEY_NAME,'') ATTR21_KEY_NAME
					,ISNULL(SN.ATTR22_KEY_NAME,'') as ATTR22_KEY_NAME,ISNULL(SN.ATTR23_KEY_NAME,'') as ATTR23_KEY_NAME
					,ISNULL(SN.ATTR24_KEY_NAME,'') ATTR24_KEY_NAME,ISNULL(SN.ATTR25_KEY_NAME,'')  ATTR25_KEY_NAME 
					FROM SKU A   (NOLOCK)     
					JOIN wsl_ITEM_DETAILS TMP (NOLOCK) ON A.product_code =TMP.PRODUCT_CODE 
					LEFT OUTER JOIN SKU_OH  (NOLOCK) ON SKU_OH.PRODUCT_CODE=A.PRODUCT_CODE    		
					JOIN SKU_NAMES SN (NOLOCK) ON SN.product_Code=A.product_Code 						
					JOIN ARTICLE B  (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE          
					JOIN PARA3 F  (NOLOCK) ON A.PARA3_CODE = F.PARA3_CODE              
					LEFT OUTER JOIN UOM E  (NOLOCK) ON B.UOM_CODE = E.UOM_CODE   
					JOIN FORM F1  (NOLOCK) ON A.FORM_ID=F1.FORM_ID  
					JOIN BIN (NOLOCK) ON BIN.BIN_ID =TMP.BIN_ID      
					where tmp.SP_ID=RTRIM(LTRIM(@Cspid)) 



   END_PROC:

   IF EXISTS (SELECT TOP 1 'U' FROM wsl_ITEM_DETAILS WHERE SP_ID=RTRIM(LTRIM(@Cspid)) AND ISNULL(ERRMSG,'')<>'')
	BEGIN
	    SELECT PRODUCT_CODE ,ERRMSG  FROM wsl_ITEM_DETAILS WHERE SP_ID=RTRIM(LTRIM(@Cspid)) AND ISNULL(ERRMSG,'')<>''

	END
   
   DELETE   FROM WSL_ITEM_DETAILS WHERE SP_ID=RTRIM(LTRIM(@CSPID))	
		
 END 
 

