
create PROCEDURE SP3S_NORMALIZE_FIX_PRODUCT_CODE_OPTIMIZE
(
 @CXN_TYPE VARCHAR(20)='',
 @NSPID				VARCHAR(50)='',
 @NUPDATEMODE		NUMERIC(2,0),
 @CTEMPDETAILTABLE1 VARCHAR(100),
 @CMEMO_ID VARCHAR(100)='',
 @CERRORMSG VARCHAR(MAX) OUTPUT,
 @CTEMPMASTERTABLE VARCHAR(100)=''
 ,@CDEPT_ID	VARCHAR(10)=''   

)
AS
BEGIN

BEGIN TRY     

	 DECLARE @NSTEP VARCHAR(10),
	 @DTSQL NVARCHAR(MAX),@CMRP VARCHAR(100),@BCHKMRP BIT,@CLOCATIONID VARCHAR(5),
	 @NBATCH_WSP VARCHAR(10),@NBATCH_PURCHASE_PRICE VARCHAR(10),
	 @CWSP VARCHAR(100),@BCHKWSP BIT,@CPP VARCHAR(100),@BCHKPP BIT
	 DELETE FROM BATCHWISE_FIXCODE_UPLOAD  WHERE SP_ID=@NSPID
	 
			 
		DECLARE @SKU_SERIES_START VARCHAR(10)
		SELECT TOP 1 @SKU_SERIES_START=VALUE FROM CONFIG WHERE CONFIG_OPTION ='SKU_SERIES_START_1000' AND VALUE =1
			 
	
	 
	 --CHECK PROCESS FOR NORMALIZATION   
	    DECLARE @CCHKROW_ID VARCHAR(100)
	    SET @DTSQL=' SELECT  TOP 1 @CCHKROW_ID=A.ROW_ID
	    FROM '+@CTEMPDETAILTABLE1+' A 
		JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
	    JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=B.ARTICLE_CODE
	    WHERE (B.BARCODE_CODING_SCHEME=1) AND ISNULL(ART.STOCK_NA,0)=0
		AND CHARINDEX(''@'',A.PRODUCT_CODE)=0 AND A.SP_ID='''+LTRIM(RTRIM((@NSPID)))+''' '
		PRINT @DTSQL
		EXEC SP_EXECUTESQL @DTSQL,N'@CCHKROW_ID VARCHAR(100) OUTPUT',@CCHKROW_ID OUTPUT
		
		IF ISNULL(@CCHKROW_ID,'')=''
		 GOTO END_PROC
	  --END
	  if @CDEPT_ID	=''
     SELECT @CLOCATIONID  =DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
	 ELSE
	 SET @CLOCATIONID  =@CDEPT_ID
     SELECT TOP 1 @NBATCH_WSP=VALUE FROM CONFIG WHERE CONFIG_OPTION ='WSP'
     SELECT TOP 1 @NBATCH_PURCHASE_PRICE=VALUE FROM CONFIG WHERE CONFIG_OPTION ='CONSIDER_FOR_AUTO_BATCH_PP' 
      
      IF @CXN_TYPE='WSL' AND ISNULL(@NBATCH_WSP,'')='1'
      BEGIN
           SET @CWSP=' A.WS_PRICE AS WS_PRICE '
           SET @BCHKWSP=1
      
      END
      ELSE
      BEGIN
          
          SET @CWSP=' 0 AS WS_PRICE '
          SET @BCHKWSP=0
           
      END 
      
      IF @CXN_TYPE='PRT' AND ISNULL(@NBATCH_PURCHASE_PRICE,'')='1'
      BEGIN
           SET @CPP=' A.PURCHASE_PRICE AS PURCHASE_PRICE '
           SET @BCHKPP=1
      
      END
      ELSE IF @CXN_TYPE='DNPS' AND ISNULL(@NBATCH_PURCHASE_PRICE,'')='1'
      BEGIN
           SET @CPP=' B.PURCHASE_PRICE AS PURCHASE_PRICE '
           SET @BCHKPP=1
      
      END
      ELSE
      BEGIN
          
          SET @CPP=' 0 AS PURCHASE_PRICE '
          SET @CPP=0
           
      END   
          
     SET @NSTEP=00
     
     IF OBJECT_ID('TEMPDB..#TMPFIXCODE','U')   IS NOT NULL
       DROP TABLE #TMPFIXCODE
       
       SELECT ROW_ID= CAST('' AS VARCHAR(100)),PRODUCT_CODE=CAST('' AS  VARCHAR(100)), QUANTITY=CAST(0 AS  NUMERIC(10,3)),
              DEPT_ID =CAST('' AS VARCHAR(5)),BIN_ID=CAST('' AS VARCHAR(7)),MRP=CAST(0 AS NUMERIC(14,3)),
              WS_PRICE=CAST(0 AS NUMERIC(14,3)),PURCHASE_PRICE=CAST(0 AS NUMERIC(14,3))
       INTO #TMPFIXCODE WHERE 1=2
       
       PRINT '1 SET STOCK OUT MRP WISE'
       
       IF @CXN_TYPE IN('SLS','WSL','RPS','APP') 
       BEGIN
       
         SET @CMRP=' A.MRP AS MRP '
         SET @BCHKMRP=1
         
       END
       ELSE 
       BEGIN
            SET @CMRP=' B.MRP AS MRP '
            SET @BCHKMRP=1
       END
       
       
    SET @NSTEP=10
    
    PRINT '2 HOLD THE BARCODE FOR NORMALIZE '
    
    IF @CXN_TYPE IN('WSL','SLS','PRT','RPS','DCO','WPS','DNPS','CNC','APP','JWI') 
    BEGIN    
        
		IF @CXN_TYPE IN('WSL','SLS','PRT','RPS','WPS','DNPS','CNC','APP','JWI') 
		BEGIN	
		
			 SET @DTSQL=' SELECT A.ROW_ID,A.PRODUCT_CODE,A.QUANTITY,A.DEPT_ID,A.BIN_ID,
			 '+@CMRP+',
			 '+@CWSP+',
			 '+@CPP+'	
			 FROM '+@CTEMPDETAILTABLE1+' A 
			 JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
			 JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=B.ARTICLE_CODE
			 WHERE (B.BARCODE_CODING_SCHEME=1) AND ISNULL(ART.STOCK_NA,0)=0
			 AND CHARINDEX(''@'',A.PRODUCT_CODE)=0 AND A.SP_ID='''+LTRIM(RTRIM((@NSPID)))+''' '
			 PRINT @DTSQL
			 INSERT INTO #TMPFIXCODE(ROW_ID,PRODUCT_CODE,QUANTITY,DEPT_ID,BIN_ID ,MRP,WS_PRICE ,PURCHASE_PRICE )
			 EXEC SP_EXECUTESQL @DTSQL
			 
		 END
		 ELSE IF @CXN_TYPE IN('DCO') 
		 BEGIN
		     
		     SET @DTSQL=' SELECT A.ROW_ID,A.PRODUCT_CODE,A.QUANTITY,'''+@CLOCATIONID+''' AS DEPT_ID,A.SOURCE_BIN_ID AS BIN_ID,
			 '+@CMRP+',
			 '+@CWSP+',
			 '+@CPP+'
			 FROM '+@CTEMPDETAILTABLE1+' A 
			 JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
			 JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=B.ARTICLE_CODE
			 WHERE (B.BARCODE_CODING_SCHEME=1)
			 AND CHARINDEX(''@'',A.PRODUCT_CODE)=0 AND A.SP_ID='''+LTRIM(RTRIM((@NSPID)))+'''
			 '
			 PRINT @DTSQL
			 INSERT INTO #TMPFIXCODE(ROW_ID,PRODUCT_CODE,QUANTITY,DEPT_ID,BIN_ID ,MRP,WS_PRICE ,PURCHASE_PRICE )
			 EXEC SP_EXECUTESQL @DTSQL
		 
		 END
		
		 PRINT '3 HOLD THE BARCODE FOR NORMALIZE '
		  
	     SET @NSTEP=20	 
	
		 IF NOT EXISTS(SELECT TOP 1 'U' FROM #TMPFIXCODE)
		   GOTO END_PROC
		   
		   IF OBJECT_ID('TEMPDB..#TMPPMT01106','U')   IS NOT NULL
              DROP TABLE #TMPPMT01106
   
		   SELECT DISTINCT  B.*,SKU.MRP ,SKU.WS_PRICE ,SKU.PURCHASE_PRICE  
		   INTO #TMPPMT01106 
		   FROM #TMPFIXCODE A
		   JOIN PMT01106 B (NOLOCK) 
		   ON A.PRODUCT_CODE =CASE WHEN CHARINDEX('@',B.PRODUCT_CODE)=0 THEN B.PRODUCT_CODE 
		                             ELSE SUBSTRING (B.PRODUCT_CODE,1, CHARINDEX('@',B.PRODUCT_CODE)-1) END
		   JOIN SKU (NOLOCK) ON SKU.product_code =B.product_code 
		   WHERE QUANTITY_IN_STOCK >0 
		   
		   
		
          
         IF OBJECT_ID('TEMPDB..#TMPCLUBBEDBARCODE','U')   IS NOT NULL
           DROP TABLE #TMPCLUBBEDBARCODE
		   
		 SELECT DEPT_ID, PRODUCT_CODE ,BIN_ID ,MRP,WS_PRICE ,PURCHASE_PRICE ,
		 SUM(QUANTITY) AS QUANTITY 
		 into #TMPCLUBBEDBARCODE
		 FROM #TMPFIXCODE  
         GROUP BY DEPT_ID,PRODUCT_CODE ,BIN_ID,MRP,WS_PRICE ,PURCHASE_PRICE 
		   
           IF OBJECT_ID('TEMPDB..#TMPPRODUCTCODE','U')   IS NOT NULL
              DROP TABLE #TMPPRODUCTCODE
   
		
		SELECT A.PRODUCT_CODE ,b.BIN_ID ,a.DEPT_ID , A.MRP,A.WS_PRICE,A.PURCHASE_PRICE ,
		       A.QUANTITY  AS TOTAL_QTY,
		       isnull(B.PRODUCT_CODE,'') AS ORG_PRODUCT_CODE,
		       isnull(B.QUANTITY_IN_STOCK,0) as QUANTITY_IN_STOCK,
			   PRODUCTSR=CAST(CASE WHEN CHARINDEX('@',isnull(B.PRODUCT_CODE,''))=0 THEN '0' 
			   ELSE SUBSTRING(isnull(B.PRODUCT_CODE,''), CHARINDEX('@',isnull(B.PRODUCT_CODE,''))+1,LEN(isnull(B.PRODUCT_CODE,''))) END AS VARCHAR(100))
			   --ROW_NUMBER () over( partition by A.PRODUCT_CODE order by b.bin_id) as sr
		into #TMPPRODUCTCODE				
		FROM #TMPCLUBBEDBARCODE A
		LEFT JOIN 
		( 
		  SELECT PRODUCT_CODE,DEPT_ID,BIN_ID,QUANTITY_IN_STOCK ,MRP,WS_PRICE ,PURCHASE_PRICE 
		  FROM #TMPPMT01106 
		)B ON A.PRODUCT_CODE =  CASE WHEN CHARINDEX('@',B.PRODUCT_CODE)=0 THEN B.PRODUCT_CODE 
		                             ELSE SUBSTRING (B.PRODUCT_CODE,1, CHARINDEX('@',B.PRODUCT_CODE)-1) END
		and a.DEPT_ID =b.DEPT_ID and a.BIN_ID =b.BIN_ID 
		where  (ISNULL(@BCHKMRP,0)=0 OR A.MRP =b.mrp  )
		AND(ISNULL(@BCHKWSP,0)=0 OR A.WS_PRICE  =b.ws_price   )
		AND(ISNULL(@BCHKWSP,0)=0 OR A.PURCHASE_PRICE   =b.purchase_price  )
		
		
		
		IF OBJECT_ID('TEMPDB..#TMPERROR','U')   IS NOT NULL
              DROP TABLE #TMPERROR
   
		SELECT A.PRODUCT_CODE ,A.DEPT_ID ,A.BIN_ID ,a.PURCHASE_PRICE ,a.WS_PRICE ,a.MRP ,
		a.QUANTITY ,isnull(b.QUANTITY_IN_STOCK,0) as QUANTITY_IN_STOCK
		INTO #TMPERROR
		FROM #TMPCLUBBEDBARCODE A
	    left outer join
	    (
	     SELECT A.PRODUCT_CODE ,A.DEPT_ID ,A.BIN_ID ,A.PURCHASE_PRICE ,A.WS_PRICE ,A.MRP ,
	            SUM(QUANTITY_IN_STOCK) AS QUANTITY_IN_STOCK
		  FROM #TMPPRODUCTCODE A
		  GROUP BY A.PRODUCT_CODE ,A.DEPT_ID ,A.BIN_ID ,A.PURCHASE_PRICE ,A.WS_PRICE ,A.MRP
	    
	    ) b on a.PRODUCT_CODE =b.PRODUCT_CODE and a.DEPT_ID =b.DEPT_ID and a.BIN_ID =b.BIN_ID 
	    AND A.MRP =B.MRP 
	    where a.QUANTITY >ISNULL(b.QUANTITY_IN_STOCK,0)
         
         
         
         
        declare @CPRODUCT_CODE varchar(50),@NQTY numeric(10,2),@CBIN_ID varchar(7),
        @NMRP numeric(10,2),@NCALQTY numeric(10,2)
         
         IF EXISTS (SELECT TOP 1 'U' FROM #TMPERROR)
         BEGIN
            SELECT TOP 1 @CPRODUCT_CODE=PRODUCT_CODE,@NQTY=QUANTITY ,@CBIN_ID=BIN_ID,@NMRP=MRP,@NCALQTY=QUANTITY_IN_STOCK 
            FROM #TMPERROR
         
        	   IF ISNULL(@NQTY,0)>ISNULL(@NCALQTY,0)
				BEGIN
					SET @CERRORMSG='QTY GOING NEGATIVE ITEM '+  @CPRODUCT_CODE  
					+', BIN '+@CBIN_ID+', MRP:'+STR(@NMRP)
					GOTO END_PROC  
		        
				END
           END
           
            
            IF OBJECT_ID('TEMPDB..#TMPPRODUCTCODELIST','U')   IS NOT NULL
			DROP TABLE #TMPPRODUCTCODELIST
	              

			SELECT A.ORG_PRODUCT_CODE , A.PRODUCT_CODE,A.BIN_ID,A.TOTAL_QTY,
			a.MRP,a.WS_PRICE,a.PURCHASE_PRICE,
			A.QUANTITY_IN_STOCK ,A.PRODUCTSR,
			SUM(B.QUANTITY_IN_STOCK ) AS RUNNINGTOTAL
			INTO #TMPPRODUCTCODELIST
			FROM #TMPPRODUCTCODE A CROSS JOIN #TMPPRODUCTCODE B 
			WHERE  a.PRODUCTSR >=b.PRODUCTSR 
			AND A.PRODUCT_CODE =B.PRODUCT_CODE 
			and a.DEPT_ID =b.DEPT_ID and a.BIN_ID =b.BIN_ID 
			and a.MRP =b.MRP and a.WS_PRICE =b.WS_PRICE and a.PURCHASE_PRICE =b.PURCHASE_PRICE 
			GROUP BY  A.ORG_PRODUCT_CODE ,A.PRODUCT_CODE,A.BIN_ID,A.TOTAL_QTY,
			a.MRP,a.WS_PRICE,a.PURCHASE_PRICE,A.QUANTITY_IN_STOCK ,A.PRODUCTSR
			
	     
			
			UPDATE A SET  QUANTITY_IN_STOCK= QUANTITY_IN_STOCK+(TOTAL_QTY -RUNNINGTOTAL)
		    FROM #TMPPRODUCTCODELIST A WHERE RUNNINGTOTAL >TOTAL_QTY 
		 
		    DELETE  FROM #TMPPRODUCTCODELIST WHERE QUANTITY_IN_STOCK <=0
		 

		 
		 INSERT INTO BATCHWISE_FIXCODE_UPLOAD(ROW_ID,PRODUCT_CODE,QUANTITY,DEPT_ID,BIN_ID,MRP,SP_ID)
		  SELECT CAST('LATER'+CONVERT(VARCHAR(40),NEWID()) AS VARCHAR(100)),A.ORG_PRODUCT_CODE,A.QUANTITY_IN_STOCK,
		  '' as DEPT_ID,A.BIN_ID  ,A.MRP,@NSPID AS SP_ID
		  FROM #TMPPRODUCTCODELIST A
				
	
		PRINT '4 TEMP TABLE FOR NORMALIZE DISCOUNT  '
		
		DECLARE @CCOLNAME VARCHAR(MAX),@CALIASCOLNAME VARCHAR(MAX)
		DECLARE @CNEWCOLNAME VARCHAR(MAX)
		
		IF @CXN_TYPE IN('DCO')
		BEGIN
		    
		    
		     PRINT '12 INSERTION NEW BARCODE IN UPLOAD TABLES  '   
           
             SET @NSTEP=160

		    SELECT @CCOLNAME=ISNULL(@CCOLNAME+',','')+(COLUMN_NAME),
			@CALIASCOLNAME=ISNULL(@CALIASCOLNAME+',','')+('A.'+COLUMN_NAME)
			FROM INFORMATION_SCHEMA.COLUMNS 
			WHERE TABLE_NAME=@CTEMPDETAILTABLE1
			AND COLUMN_NAME NOT IN('TS','QUANTITY','ROW_ID','PRODUCT_CODE')
            ORDER BY COLUMN_NAME
            
            SET @CNEWCOLNAME='PRODUCT_CODE,QUANTITY,ROW_ID,'
            SET @CCOLNAME=@CNEWCOLNAME+@CCOLNAME
            
            SET @DTSQL=N' ;with cte as
            (
              select a.* ,SR=ROW_NUMBER() OVER(PARTITION BY PRODUCT_CODE,SOURCE_BIN_ID ORDER BY PRODUCT_CODE,SOURCE_BIN_ID )
              from '+@CTEMPDETAILTABLE1+' a
            
            )
            DELETE A FROM CTE A
            JOIN BATCHWISE_FIXCODE_UPLOAD B ON A.PRODUCT_CODE=B.PRODUCT_CODE AND A.SOURCE_BIN_ID=B.BIN_ID AND B.SP_ID ='''+LTRIM(RTRIM((@NSPID)))+'''
            WHERE A.SR>1
            '
            PRINT @DTSQL 
			EXEC SP_EXECUTESQL @DTSQL
          
            
            SET @NSTEP=170
			SET @DTSQL=N' INSERT '+@CTEMPDETAILTABLE1+' ('+@CCOLNAME+')
			            SELECT distinct B.PRODUCT_CODE, B.QUANTITY,
			            CONVERT(VARCHAR(40),''LATER''+ CONVERT(VARCHAR(50), NEWID())) AS ROW_ID, '+@CALIASCOLNAME+' 
			            FROM '+@CTEMPDETAILTABLE1+' A 
			            JOIN
			            (
			             SELECT LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX (''@'',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE ))) AS ORG_PRODUCT_CODE,
			              BIN_ID,PRODUCT_CODE,QUANTITY,SP_ID
			             FROM BATCHWISE_FIXCODE_UPLOAD a
			             WHERE SP_ID ='''+LTRIM(RTRIM((@NSPID)))+'''
			            ) B ON  a.product_code=b.ORG_PRODUCT_CODE
			            AND A.SOURCE_BIN_ID =B.BIN_ID
			            WHERE A.SP_ID ='''+LTRIM(RTRIM((@NSPID)))+'''
			            '
			PRINT @DTSQL 
			EXEC SP_EXECUTESQL @DTSQL
	        
	        
	        
	        
	        
	        PRINT '13 DELETE OLD BARCODE   '   
	        
		    SET @NSTEP=180
            SET @DTSQL=N' DELETE A FROM '+@CTEMPDETAILTABLE1+' A
            JOIN #TMPFIXCODE B (NOLOCK) ON A.product_code=B.product_code 
            WHERE A.SP_ID ='''+LTRIM(RTRIM((@NSPID)))+''' '
            PRINT @DTSQL 
			EXEC SP_EXECUTESQL @DTSQL
            
            
		
		END
		
		
    END
    
    
END TRY         
BEGIN CATCH    		    
  SET @CERRORMSG = 'PROCEDURE SP3S_NORMALIZE_FIX_PRODUCT_CODE : STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()    
    
END CATCH    
     
END_PROC:    

END
