create PROCEDURE DBO.PRD_ARTICLE_SET_COMPONENT_INSERT
(
 @CARTICLE_NO VARCHAR(20)
)
AS
 BEGIN TRY
  --DECLARE LOCAL VARIABLE
   DECLARE @SUB_SECTION_CODE VARCHAR(50)
          ,@LOOPSTART INT
          ,@LOOPEND INT
          ,@CLOCATION CHAR(4)
          ,@CARTICLE_CODE_LENGTH INT
          ,@NSAVETRANLOOP INT
          ,@STEP INT
          ,@CSOURCETABLE_MST VARCHAR(200)
          ,@CARTICLE_CODE_VAL VARCHAR(10)
          ,@ARTICLE_CODE VARCHAR(20)
          ,@STRQUERY NVARCHAR(MAX)
          ,@COMPONENT_SUFFIX VARCHAR(3)
          ,@ERRMSG VARCHAR(MAX)
   DECLARE @ARTICLE_SET_COMPONENT AS TABLE(ID INT IDENTITY(1,1),MEMO_ID VARCHAR(50)
                      ,SUB_SECTION_CODE VARCHAR(100),COMPONENT_SUFFIX VARCHAR(3) )
   SET @SUB_SECTION_CODE = (SELECT SUB_SECTION_CODE FROM DBO.ARTICLE WITH(NOLOCK) WHERE ARTICLE_NO = @CARTICLE_NO)
   
   SELECT @CLOCATION=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
   
   SET @CARTICLE_CODE_LENGTH=9
  -- SET @SUB_SECTION_CODE='0100066'
   SET @ARTICLE_CODE='ARTICLE_CODE'
   SET @CSOURCETABLE_MST='ARTICLE'
   SET @ERRMSG=''
   SET @LOOPEND=0;
   
   INSERT INTO @ARTICLE_SET_COMPONENT(MEMO_ID,SUB_SECTION_CODE,COMPONENT_SUFFIX)
   SELECT M.MEMO_ID,M.SUB_SECTION_CODE,D.COMPONENT_SUFFIX 
   FROM DBO.PRD_COMPONENT_MST M WITH(NOLOCK)
    JOIN DBO.PRD_COMPONENT_DET D WITH(NOLOCK) ON M.MEMO_ID = D.MEMO_ID
   WHERE M.SUB_SECTION_CODE = @SUB_SECTION_CODE AND CANCELLED = 0
    -- AND M.MEMO_ID='0101117000000100000007'
   ORDER BY SRNO ASC
     
    -- SELECT * FROM @ARTICLE_SET_COMPONENT
     
 
   SET @LOOPEND=@@ROWCOUNT;
   SET @LOOPSTART = 1;
   
   BEGIN TRANSACTION
   
   WHILE @LOOPEND >= @LOOPSTART
     BEGIN
        SET @NSAVETRANLOOP = 0
        WHILE @NSAVETRANLOOP = 0
         BEGIN
           SET @STEP=5
           EXEC GETNEXTKEY 'ARTICLE', @ARTICLE_CODE, @CARTICLE_CODE_LENGTH, @CLOCATION, 1,
                '',0, @CARTICLE_CODE_VAL OUTPUT 
           -- BELOW QUERY CHECKED NEWLY GENERATED MEMO_NO ARE EXIST IN MASTER TABLE 
           --IF EXIST THEN RE-GENERATE NEW MEMO_NO
           SET @STEP=6
           SET @STRQUERY=N'IF EXISTS ( SELECT '+@ARTICLE_CODE+' FROM '+@CSOURCETABLE_MST+' 
                      WHERE '+@ARTICLE_CODE+'='''+@CARTICLE_CODE_VAL+''')
                       SET @NLOOPOUTPUT=0
                      ELSE
                       SET @NLOOPOUTPUT=1'
          -- PRINT @STRQUERY
           SET @STEP=7
           EXEC SP_EXECUTESQL @STRQUERY, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT 
         END
         
         SET @COMPONENT_SUFFIX= (SELECT COMPONENT_SUFFIX FROM @ARTICLE_SET_COMPONENT 
                                 WHERE ID=@LOOPSTART)
         
         --ADD ARTICLE
		INSERT INTO DBO.ARTICLE(PARA2_CODE,PARA3_CODE,PARA4_CODE,PARA5_CODE,PARA6_CODE
		,DISCON,WHOLESALE_PRICE,WSP_PERCENTAGE,MIN_PRICE,STOCK_NA
		,ARTICLE_TYPE,CREATED_ON,ARTICLE_GROUP_CODE,COMPANY_CODE
		,GENERATE_BARCODES_WITHARTICLE_PREFIX,ARTICLE_GEN_MODE
		,ARTICLE_PRD_MODE,ARTICLE_SET_CODE,OH_PERCENTAGE,OH_AMOUNT
		,FIX_MRP,ENABLE_FIXWT_ENTRY,FIX_WEIGHT,EXP_AMOUNT,SUPP_SPECIFIC
		,SUPP_AC_CODE,SUPP_ITEM_CODE,REMARKS,FIX_PRICE_ARTICLE,GROSS_PURCHASE_PRICE
		,DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT,GEN_EAN_CODES,SIZE_CENTER_POINT,SIZE_RATE_DIFF
		,MANUAL_DISC,MANUAL_WSP,MANUAL_RSP,AREA_WISE_RATE_APPLICABLE,ORDERITEM,BL_ARTICLE_NAME
		,CODING_SCHEME,LAST_UPDATE,UOM_CODE,ALIAS,MP_PERCENTAGE,PURCHASE_PRICE,MRP,PARA1_SET
		,PARA2_SET,INACTIVE,SKU_CODE,DT_CREATED,USER_CODE,EDT_USER_CODE,ARTICLE_CODE,ARTICLE_NO
		,ARTICLE_NAME,ARTICLE_DESC,SUB_SECTION_CODE,PARA1_CODE,DO_AMOUNT,DO_PERCENTAGE,EXP_PERCENTAGE
		,LAST_MODIFIED_ON,ARTICLE_SET_TYPE,STYLE_NO,COLOR_NAME,COLOR_CODE,SIZE
		)
		SELECT PARA2_CODE,PARA3_CODE,PARA4_CODE,PARA5_CODE,PARA6_CODE
		,DISCON,WHOLESALE_PRICE,WSP_PERCENTAGE,MIN_PRICE,STOCK_NA
		,ARTICLE_TYPE,CREATED_ON,ARTICLE_GROUP_CODE,COMPANY_CODE
		,GENERATE_BARCODES_WITHARTICLE_PREFIX,ARTICLE_GEN_MODE
		,3,ARTICLE_CODE,OH_PERCENTAGE,OH_AMOUNT
		,FIX_MRP,ENABLE_FIXWT_ENTRY,FIX_WEIGHT,EXP_AMOUNT,SUPP_SPECIFIC
		,SUPP_AC_CODE,SUPP_ITEM_CODE,REMARKS,FIX_PRICE_ARTICLE,GROSS_PURCHASE_PRICE
		,DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT,GEN_EAN_CODES,SIZE_CENTER_POINT,SIZE_RATE_DIFF
		,MANUAL_DISC,MANUAL_WSP,MANUAL_RSP,AREA_WISE_RATE_APPLICABLE,0,BL_ARTICLE_NAME
		,CODING_SCHEME,LAST_UPDATE,UOM_CODE,ALIAS,MP_PERCENTAGE,PURCHASE_PRICE,MRP,PARA1_SET
		,PARA2_SET,INACTIVE,SKU_CODE,DT_CREATED,USER_CODE,EDT_USER_CODE,@CARTICLE_CODE_VAL
		,ARTICLE_NO + '-' + @COMPONENT_SUFFIX,ARTICLE_NAME,ARTICLE_DESC,SUB_SECTION_CODE
		,PARA1_CODE,DO_AMOUNT,DO_PERCENTAGE,EXP_PERCENTAGE,LAST_MODIFIED_ON,ARTICLE_SET_TYPE
		,STYLE_NO,COLOR_NAME,COLOR_CODE,SIZE
		FROM ARTICLE
        WHERE ARTICLE_NO = @CARTICLE_NO
       
        SET @LOOPSTART = @LOOPSTART+1; 
     END
     COMMIT TRANSACTION
     IF @LOOPEND = 0
       BEGIN
        SELECT 'ARTICLE COMPONENT NOT INSERT' AS [ERRMSG]
       END
     ELSE 
      BEGIN
        SELECT @ERRMSG AS [ERRMSG]
      END
     
  
   --SELECT * FROM DBO.ARTICLE WITH(NOLOCK)
   --WHERE ARTICLE_NO LIKE  'LS001%'

 END TRY
 BEGIN CATCH
  IF @@TRANCOUNT > 0
     ROLLBACK;
     
  SET @ERRMSG='ERROR || '+ERROR_MESSAGE();
  SELECT @ERRMSG AS [ERRMSG]
 END CATCH
