CREATE PROCEDURE SP3S_TIME_PERIODWISE_CHART
(
    @NMODE			       INT=1, --- 1 FOR NRV --2 FOR QUANTITY AND 3 FOR GROSS MARGIN
    @DFMDATE               VARCHAR(50)='',
	@DTODATE 			   VARCHAR(50)='', --DATE PASS OF FILTER
	@CCONVERSIONFACTOR	   INT=1,--1 FOR DIVIDE BY THOUSAND 2 FOR 10 THOUSAND 3 FOR LAKH   
	@LASTYEARCOMPERISION   INT=0,--0 FOR CURRENT YEAR VALUE AND 1 FOR CUR YEAR PREV YEAR AND CONVERSION FACTOR
	@CDEPTID               VARCHAR(5)='',--LOCATION FILTER
    @NHOUR                 INT=3,
    @NMINUTE               INT=30,
    @CDAYSTART             VARCHAR(40)= '0930',
    @CDAYEND               VARCHAR(40)='2330'  
)
AS
BEGIN
DECLARE @DSDATE DATETIME, @DEDATE DATETIME, @DDATECTR DATETIME, @DSTIME DATETIME,@TNRV NUMERIC(18,2),
        @NCONVERSIONAMOUNT NUMERIC(10,0),@TQTY NUMERIC(18,2)


SET @DSDATE=(SELECT @DFMDATE)
--DATEADD(DD,0, DATEDIFF(DD,0, DATEADD( MM, -(((12 + DATEPART(M, @DTODATE)) - 4)%12), 
--@DTODATE ) - DATEPART(D,DATEADD(	MM,	-(((12 + DATEPART(M, @DTODATE)) - 4)%12),@DTODATE ))+1 ) )


SET @DDATECTR = @DSDATE 
SET @DEDATE = DATEADD(SS, -1, DATEADD(DD, 1, @DSDATE ))

DECLARE @TBLTIME TABLE ( DSTIME DATETIME, DETIME DATETIME )  
SET @DSTIME = @DSDATE 
SET @DDATECTR = DATEADD(HH, CAST(LEFT(@CDAYSTART,2) AS INT), @DSDATE)
SET @DDATECTR = DATEADD(MI, CAST(SUBSTRING(@CDAYSTART,3,2) AS INT), @DDATECTR)
INSERT @TBLTIME VALUES ( DATEADD(SS, 1, @DSTIME), @DDATECTR )

WHILE @DDATECTR <= @DEDATE
BEGIN
    SET @DSTIME = @DDATECTR
    IF @NHOUR > 0 
       SET @DDATECTR = DATEADD(HH, @NHOUR, @DDATECTR)

    IF @NMINUTE > 0  
       SET @DDATECTR = DATEADD(MI, @NMINUTE, @DDATECTR)
    
    --SELECT LEFT(DBO.FN_GETTIME( @DDATECTR ),4),@CDAYEND
    
    IF LEFT(DBO.FN_GETTIME( @DDATECTR ),4) > @CDAYEND 
        BREAK
    ELSE
       INSERT @TBLTIME VALUES ( DATEADD(SS, 1, @DSTIME), @DDATECTR )
END 
INSERT @TBLTIME VALUES ( DATEADD(SS, 1, @DSTIME), @DEDATE ) 

DECLARE @SLSRF TABLE ( XN_DT DATETIME, XN_TIME DATETIME, XN_ID VARCHAR(40), XN_QTY NUMERIC(10,2), XN_NET NUMERIC(10,2) ) 
DECLARE @SLSPREVRF TABLE ( XN_DT DATETIME, XN_TIME DATETIME, XN_ID VARCHAR(40), XN_QTY NUMERIC(10,2), XN_NET NUMERIC(10,2) ) 

IF @CCONVERSIONFACTOR=0
SET @CCONVERSIONFACTOR=1

IF @CCONVERSIONFACTOR=1
       SET @NCONVERSIONAMOUNT=1000
    ELSE IF @CCONVERSIONFACTOR=2
       SET @NCONVERSIONAMOUNT=100000
    ELSE IF @CCONVERSIONFACTOR=3
       SET @NCONVERSIONAMOUNT=10000000
       
IF @NMODE=1
BEGIN
    INSERT @SLSRF ( XN_DT, XN_TIME, XN_ID,  XN_NET ) 
    SELECT	CM_DT, CM_TIME, A.CM_ID,NET_AMOUNT  AS XN_NET
    FROM CMM01106 A (NOLOCK)
    JOIN LOCATION B (NOLOCK) ON A.location_Code =B.DEPT_ID 
    WHERE B.INACTIVE =0
    AND A.CM_DT BETWEEN @DSDATE AND @DTODATE
    
    IF @LASTYEARCOMPERISION=1
    BEGIN
         SET @DSDATE=(SELECT DATEADD(YEAR,-1,@DSDATE))
         SET @DTODATE=CONVERT(VARCHAR(11),(SELECT DATEADD(YEAR,-1,@DTODATE)),120)
       
         INSERT @SLSPREVRF ( XN_DT, XN_TIME, XN_ID,  XN_NET ) 
         SELECT	CM_DT, CM_TIME, A.CM_ID,NET_AMOUNT  AS XN_NET
         FROM CMM01106 A (NOLOCK)
         JOIN LOCATION B (NOLOCK) ON A.location_Code=B.DEPT_ID 
         WHERE B.INACTIVE =0 AND A.CANCELLED =0
         AND A.CM_DT BETWEEN @DSDATE AND @DTODATE
         
          IF OBJECT_ID ('TEMPDB..#TMPNRV','U') IS NOT NULL
            DROP TABLE #TMPNRV
            
         SELECT TIMELINE,SUM(CUR_BILL_AMOUNT) AS CUR_YEAR_NRV,
                CUR_CONT_PER=CAST(0 AS NUMERIC(10,0)),
                SUM(PREV_BILL_AMOUNT) AS PREV_YEAR_NRV,
                PREV_CONT_PER=CAST(0 AS NUMERIC(10,0))
         INTO #TMPNRV
         FROM
         (
         SELECT  LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)AS TIMELINE, 
                 SUM(CASE WHEN DBO.FN_GETTIME( XN_TIME ) BETWEEN DBO.FN_GETTIME( DSTIME ) AND DBO.FN_GETTIME( DETIME ) THEN XN_NET ELSE 0 END ) AS CUR_BILL_AMOUNT,
                 0 AS PREV_BILL_AMOUNT
         FROM @SLSRF, @TBLTIME
         GROUP BY LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)
         UNION ALL
         SELECT  LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)AS TIMELINE, 
                 0 AS CUR_BILL_AMOUNT,
                 SUM(CASE WHEN DBO.FN_GETTIME( XN_TIME ) BETWEEN DBO.FN_GETTIME( DSTIME ) AND DBO.FN_GETTIME( DETIME ) THEN XN_NET ELSE 0 END )  AS PREV_BILL_AMOUNT
         FROM @SLSPREVRF, @TBLTIME
         GROUP BY LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)
         ) A
         GROUP BY TIMELINE
         
         SELECT @TNRV=SUM(ISNULL(CUR_YEAR_NRV ,0)) FROM #TMPNRV
		 UPDATE #TMPNRV SET CUR_CONT_PER =(CUR_YEAR_NRV *100)/CASE WHEN @TNRV=0 THEN 1 ELSE @TNRV END  
		 UPDATE #TMPNRV SET CUR_YEAR_NRV=CUR_YEAR_NRV/@NCONVERSIONAMOUNT
		 
         SELECT @TNRV=SUM(ISNULL(PREV_YEAR_NRV ,0)) FROM #TMPNRV
		 UPDATE #TMPNRV SET PREV_CONT_PER =(PREV_YEAR_NRV *100)/CASE WHEN @TNRV=0 THEN 1 ELSE @TNRV END  
		 UPDATE #TMPNRV SET PREV_YEAR_NRV=PREV_YEAR_NRV/@NCONVERSIONAMOUNT
         
         SELECT A.TIMELINE,ISNULL(CUR_YEAR_NRV,0) AS CUR_YEAR_NRV ,
         ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER,
         ISNULL(PREV_YEAR_NRV,0) AS PREV_YEAR_NRV ,
         ISNULL(PREV_CONT_PER ,0) AS PREV_CONT_PER
         FROM #TMPNRV A
         
         GOTO END_PROC
    END
    ELSE
    BEGIN       
       IF OBJECT_ID ('TEMPDB..#TMPNRV_CUR','U') IS NOT NULL
           DROP TABLE #TMPNRV_CUR
        
        SELECT TIMELINE,SUM(CUR_BILL_AMOUNT) AS CUR_YEAR_NRV,
                CUR_CONT_PER=CAST(0 AS NUMERIC(10,0)),
                SUM(PREV_BILL_AMOUNT) AS PREV_YEAR_NRV,
                PREV_CONT_PER=CAST(0 AS NUMERIC(10,0))
         INTO #TMPNRV_CUR
         FROM
         (
         SELECT  LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)AS TIMELINE, 
                 SUM(CASE WHEN DBO.FN_GETTIME( XN_TIME ) BETWEEN DBO.FN_GETTIME( DSTIME ) AND DBO.FN_GETTIME( DETIME ) THEN XN_NET ELSE 0 END ) AS CUR_BILL_AMOUNT,
                 0 AS PREV_BILL_AMOUNT
         FROM @SLSRF, @TBLTIME
         GROUP BY LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)
         ) A
         GROUP BY TIMELINE
         
		 SELECT @TNRV=SUM(ISNULL(CUR_YEAR_NRV ,0)) FROM #TMPNRV_CUR
		 UPDATE #TMPNRV_CUR SET CUR_CONT_PER =(CUR_YEAR_NRV *100)/CASE WHEN @TNRV=0 THEN 1 ELSE @TNRV END  
		 UPDATE #TMPNRV_CUR SET CUR_YEAR_NRV=CUR_YEAR_NRV/@NCONVERSIONAMOUNT
         
		 SELECT A.TIMELINE,ISNULL(CUR_YEAR_NRV,0) AS CUR_YEAR_NRV ,
         ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER
         FROM #TMPNRV_CUR A
		
		
        GOTO END_PROC
       END
END
ELSE IF @NMODE=2
BEGIN
       
	INSERT @SLSRF ( XN_DT, XN_TIME, XN_ID, XN_QTY ) 
	SELECT	CM_DT, CM_TIME, D.CM_ID, 
			 SUM(QUANTITY) AS XN_QTY
	FROM CMD01106 A (NOLOCK)
	JOIN CMM01106  D (NOLOCK) ON A.CM_ID = D.CM_ID  
	JOIN LOCATION B (NOLOCK) ON D.location_Code=B.DEPT_ID 
	WHERE B.INACTIVE =0 AND D.CANCELLED =0
	AND D.CM_DT BETWEEN @DSDATE AND @DTODATE
    GROUP BY CM_DT, CM_TIME, D.CM_ID
    
    
    IF @LASTYEARCOMPERISION=1
    BEGIN
         SET @DSDATE=(SELECT DATEADD(YEAR,-1,@DSDATE))
         SET @DTODATE=CONVERT(VARCHAR(11),(SELECT DATEADD(YEAR,-1,@DTODATE)),120)
       
         INSERT @SLSPREVRF ( XN_DT, XN_TIME, XN_ID,  XN_QTY  ) 
         SELECT	CM_DT, CM_TIME, D.CM_ID, 
			 SUM(QUANTITY) AS XN_QTY
		 FROM CMD01106 A (NOLOCK)
		 JOIN CMM01106  D (NOLOCK) ON A.CM_ID = D.CM_ID  
		 JOIN LOCATION B (NOLOCK) ON D.location_Code =B.DEPT_ID 
		 WHERE B.INACTIVE =0 AND D.CANCELLED =0
		 AND D.CM_DT BETWEEN @DSDATE AND @DTODATE
		 GROUP BY CM_DT, CM_TIME, D.CM_ID
         
          IF OBJECT_ID ('TEMPDB..#TMPQTY','U') IS NOT NULL
            DROP TABLE #TMPQTY
            
         SELECT TIMELINE,SUM(CUR_QTY) AS CUR_YEAR_QTY,
                CUR_CONT_PER=CAST(0 AS NUMERIC(10,0)),
                SUM(PREV_QTY) AS PREV_YEAR_QTY,
                PREV_CONT_PER=CAST(0 AS NUMERIC(10,0))
         INTO #TMPQTY
         FROM
         (
         SELECT  LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)AS TIMELINE, 
                 SUM(CASE WHEN DBO.FN_GETTIME( XN_TIME ) BETWEEN DBO.FN_GETTIME( DSTIME ) AND DBO.FN_GETTIME( DETIME ) THEN XN_QTY  ELSE 0 END ) AS CUR_QTY,
                 0 AS PREV_QTY
         FROM @SLSRF, @TBLTIME
         GROUP BY LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)
         UNION ALL
         SELECT  LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)AS TIMELINE, 
                 0 AS CUR_BILL_AMOUNT,
                 SUM(CASE WHEN DBO.FN_GETTIME( XN_TIME ) BETWEEN DBO.FN_GETTIME( DSTIME ) AND DBO.FN_GETTIME( DETIME ) THEN XN_QTY ELSE 0 END )  AS PREV_QTY
         FROM @SLSPREVRF, @TBLTIME
         GROUP BY LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)
         ) A
         GROUP BY TIMELINE
         
         SELECT @TQTY=SUM(ISNULL(CUR_YEAR_QTY ,0)) FROM #TMPQTY
		 UPDATE #TMPQTY SET CUR_CONT_PER =(CUR_YEAR_QTY *100)/CASE WHEN @TNRV=0 THEN 1 ELSE @TNRV END
		 
         SELECT @TQTY=SUM(ISNULL(PREV_YEAR_QTY ,0)) FROM #TMPQTY
		 UPDATE #TMPQTY SET PREV_CONT_PER =(PREV_YEAR_QTY *100)/CASE WHEN @TQTY =0 THEN 1 ELSE @TQTY END  
		 UPDATE #TMPQTY SET PREV_YEAR_QTY=PREV_YEAR_QTY/@NCONVERSIONAMOUNT
         
         SELECT A.TIMELINE,ISNULL(CUR_YEAR_QTY,0) AS CUR_YEAR_QTY ,
         ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER,
         ISNULL(PREV_YEAR_QTY,0) AS PREV_YEAR_QTY ,
         ISNULL(PREV_CONT_PER ,0) AS PREV_CONT_PER
         FROM #TMPQTY A
         
         GOTO END_PROC
    END
    ELSE
    BEGIN       
       IF OBJECT_ID ('TEMPDB..#TMPQTY_CUR','U') IS NOT NULL
           DROP TABLE TMPQTY_CUR
        
        SELECT TIMELINE,SUM(CUR_QTY ) AS CUR_YEAR_QTY,
                CUR_CONT_PER=CAST(0 AS NUMERIC(10,0))
         INTO #TMPQTY_CUR
         FROM
         (
         SELECT  LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)AS TIMELINE, 
                 SUM(CASE WHEN DBO.FN_GETTIME( XN_TIME ) BETWEEN DBO.FN_GETTIME( DSTIME ) AND DBO.FN_GETTIME( DETIME ) THEN XN_QTY ELSE 0 END ) AS CUR_QTY,
                 0 AS PREV_BILL_AMOUNT
         FROM @SLSRF, @TBLTIME
         GROUP BY LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)
         ) A
         GROUP BY TIMELINE
         
		 SELECT @TQTY=SUM(ISNULL(CUR_YEAR_QTY ,0)) FROM #TMPQTY_CUR
		 UPDATE #TMPQTY_CUR SET CUR_CONT_PER =(CUR_YEAR_QTY *100)/CASE WHEN @TNRV=0 THEN 1 ELSE @TNRV END  
		-- UPDATE #TMPQTY_CUR SET CUR_YEAR_QTY=CUR_YEAR_QTY/@NCONVERSIONAMOUNT
         
		 SELECT A.TIMELINE,ISNULL(CUR_YEAR_QTY,0) AS CUR_YEAR_QTY ,
         ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER
         FROM #TMPQTY_CUR A
		
		
        GOTO END_PROC
       END

GOTO END_PROC
END

END_PROC:

END
