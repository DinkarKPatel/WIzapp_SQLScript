create PROCEDURE SP_GETPOS_RECEIPTS

@DMEMODT DATETIME 
--WITH ENCRYPTION
AS
BEGIN
--(dinkar) Replace  left(memoid,2) to Location_code 
	IF OBJECT_ID('TEMPDB..#TMPSLSORD','U') IS NOT NULL
		DROP TABLE #TMPSLSORD
	
	SELECT DISTINCT CMM.CM_ID,ISNULL(REF_ORDER_ID,'') AS ORDER_ID INTO #TMPSLSORD 
	FROM CMD01106 CMD
	JOIN CMM01106 CMM ON CMD.CM_ID=CMM.CM_ID
	WHERE ISNULL(REF_ORDER_ID,'')<>'' AND CMM.CANCELLED=0
	
	DECLARE @TREPS TABLE (SR_NO NUMERIC(2),DEPT_ID CHAR(4),DEPT_ALIAS VARCHAR(20),DEPT_NAME VARCHAR(200),USERNAME VARCHAR(100),MEMO_TYPE VARCHAR(50),MEMO_NO VARCHAR(20),MEMO_DT DATETIME,
						  MEMO_AMOUNT NUMERIC(10,2),REF_MEMO_TYPE VARCHAR(50),REF_MEMO_DT DATETIME,REF_MEMO_NO VARCHAR(20),
						  REF_MEMO_AMOUNT NUMERIC(10,2),REF_CREDIT_AMOUNT NUMERIC(10,2),CUSTOMER_NAME VARCHAR(200),
						  PREVIOUS_RECEIVED NUMERIC(10,2),CURRENT_RECEIVED NUMERIC(10,2),CREDIT_AMOUNT NUMERIC(10,2),
						  CASH_AMOUNT_RECEIVED NUMERIC(10,2),CC_AMOUNT_RECEIVED NUMERIC(10,2),CN_ADJ NUMERIC(10,2),
						  ADV_ADJ NUMERIC(10,2),OTHER_AMOUNT_RECEIVED NUMERIC(10,2),LIST_ORDER INT,SUB_LIST BIT,CANCELLED BIT,SLSORD BIT,
						  SSS VARCHAR(MAX),ID INT IDENTITY(1,1),REF_NO VARCHAR(100))

	------ INSERT ENTRIES OF BUYER ORDER RECEIPTS
	INSERT @TREPS (SR_NO,DEPT_ID,DEPT_ALIAS,DEPT_NAME,USERNAME,MEMO_TYPE,MEMO_NO,MEMO_DT,MEMO_AMOUNT,CUSTOMER_NAME,CURRENT_RECEIVED,CREDIT_AMOUNT,
				   CASH_AMOUNT_RECEIVED,CC_AMOUNT_RECEIVED,OTHER_AMOUNT_RECEIVED,LIST_ORDER,CANCELLED,SSS,REF_NO)
	SELECT 1 AS SR_NO,a.location_Code  AS DEPT_ID,DEPT_ALIAS,DEPT_NAME,USERNAME,'ORDER' AS MEMO_TYPE,ORDER_NO,ORDER_DT,TOTAL_AMOUNT,
	(CASE WHEN ISNULL(E.CUSTOMER_CODE,'') IN ('','000000000000','0000000000') THEN AC_NAME ELSE CUSTOMER_FNAME+' '+CUSTOMER_LNAME END) AS CUSTOMER_NAME,D.CURRENT_RECEIVED,(A.TOTAL_AMOUNT-D.CURRENT_RECEIVED) AS CREDIT_AMOUNT,
	D.CASH_AMOUNT_RECEIVED,D.CC_AMOUNT_RECEIVED,D.OTHER_AMOUNT_RECEIVED,1 AS LIST_ORDER,A.CANCELLED
	,(CASE WHEN A.CANCELLED=0 THEN DBO.FN3S_RTN_DET (A.ORDER_ID,'ORD') ELSE '' END),A.REF_NO
	FROM WSL_ORDER_MST A JOIN USERS B ON A.USER_CODE=B.USER_CODE 
	JOIN LOCATION C ON C.DEPT_ID=a.location_Code 
	LEFT OUTER JOIN (SELECT D.ORDER_ID,SUM(CASE WHEN A.PAYMODE_CODE<>'0000004' THEN AMOUNT ELSE 0 END) AS CURRENT_RECEIVED,
    SUM(CASE WHEN A.PAYMODE_CODE='0000000' THEN AMOUNT ELSE 0 END) AS CASH_AMOUNT_RECEIVED,
    SUM(CASE WHEN PAYMODE_GRP_CODE='0000002' THEN AMOUNT ELSE 0 END) AS CC_AMOUNT_RECEIVED, 	
    SUM(CASE WHEN A.PAYMODE_CODE NOT IN ('0000000','0000001','0000002') AND PAYMODE_GRP_CODE<>'0000002' THEN AMOUNT ELSE 0 END) AS OTHER_AMOUNT_RECEIVED
    FROM PAYMODE_XN_DET A JOIN PAYMODE_MST B ON A.PAYMODE_CODE=B.PAYMODE_CODE
    JOIN WSL_ORDER_ADV_RECEIPT C ON C.ADV_REC_ID=A.MEMO_ID
    JOIN WSL_ORDER_MST D ON D.ORDER_ID=C.ORDER_ID
    WHERE XN_TYPE='ARC' AND ORDER_DT=@DMEMODT GROUP BY D.ORDER_ID) D ON D.ORDER_ID=A.ORDER_ID
	LEFT OUTER JOIN CUSTDYM E ON E.CUSTOMER_CODE=A.CUSTOMER_CODE
	JOIN LM01106 F ON F.AC_CODE=A.AC_CODE
	WHERE A.ORDER_DT=@DMEMODT
		
	------ INSERT ENTRIES OF SALE RECEIPTS SUMMARIZED	
	INSERT @TREPS (SR_NO,DEPT_ID,DEPT_ALIAS,DEPT_NAME,USERNAME,MEMO_TYPE,MEMO_NO,MEMO_DT,MEMO_AMOUNT,CUSTOMER_NAME,CURRENT_RECEIVED,CREDIT_AMOUNT,
				   CASH_AMOUNT_RECEIVED,CC_AMOUNT_RECEIVED,OTHER_AMOUNT_RECEIVED,CN_ADJ,ADV_ADJ,LIST_ORDER,SUB_LIST,CANCELLED,SSS)
	SELECT 2 AS SR_NO,a.location_Code  AS DEPT_ID,DEPT_ALIAS,DEPT_NAME,USERNAME,'SALE' AS MEMO_TYPE,CM_NO,CM_DT,NET_AMOUNT,
	(CASE WHEN PARTY_TYPE=2 THEN AC_NAME ELSE CUSTOMER_FNAME+' '+CUSTOMER_LNAME END) AS CUSTOMER_NAME,D.CURRENT_RECEIVED,(A.NET_AMOUNT-D.CURRENT_RECEIVED) AS CREDIT_AMOUNT,
	D.CASH_AMOUNT_RECEIVED,D.CC_AMOUNT_RECEIVED,D.OTHER_AMOUNT_RECEIVED,D.CN_ADJ,D.ADV_ADJ,2 AS LIST_ORDER,0 AS SUB_LIST,A.CANCELLED
	,(CASE WHEN A.CANCELLED=0 THEN DBO.FN3S_RTN_DET (A.CM_ID,'SLS') ELSE '' END)
	FROM CMM01106 A JOIN USERS B ON A.USER_CODE=B.USER_CODE 
	JOIN LOCATION C ON C.DEPT_ID=a.location_Code 
	LEFT OUTER JOIN (SELECT MEMO_ID,SUM(CASE WHEN A.PAYMODE_CODE NOT IN ('0000004') THEN AMOUNT ELSE 0 END) AS CURRENT_RECEIVED,
		  SUM(CASE WHEN A.PAYMODE_CODE='0000000' THEN AMOUNT ELSE 0 END) AS CASH_AMOUNT_RECEIVED,
		  SUM(CASE WHEN PAYMODE_GRP_CODE='0000002' THEN AMOUNT ELSE 0 END) AS CC_AMOUNT_RECEIVED,
		  SUM(CASE WHEN A.PAYMODE_CODE='0000001' THEN AMOUNT ELSE 0 END) AS CN_ADJ,
		  SUM(CASE WHEN A.PAYMODE_CODE='0000002' THEN AMOUNT ELSE 0 END) AS ADV_ADJ, 	
		  SUM(CASE WHEN A.PAYMODE_CODE NOT IN ('0000000','0000001','0000002') AND PAYMODE_GRP_CODE<>'0000002' THEN AMOUNT ELSE 0 END) AS OTHER_AMOUNT_RECEIVED
		  FROM PAYMODE_XN_DET A JOIN PAYMODE_MST B ON A.PAYMODE_CODE=B.PAYMODE_CODE
		  JOIN CMM01106 C ON C.CM_ID=A.MEMO_ID
		  WHERE XN_TYPE='SLS' AND CM_DT=@DMEMODT GROUP BY MEMO_ID) D ON D.MEMO_ID=A.CM_ID
	JOIN CUSTDYM E ON E.CUSTOMER_CODE=A.CUSTOMER_CODE
	LEFT OUTER JOIN LM01106 F ON F.AC_CODE=A.AC_CODE
	WHERE A.CM_DT=@DMEMODT
	
	------ INSERT ENTRIES OF ORDERS REFERENCES AGAINST WHICH SALE IS BEING MADE
	INSERT @TREPS (SR_NO,DEPT_ID,DEPT_NAME,DEPT_ALIAS,USERNAME,MEMO_TYPE,MEMO_NO,MEMO_DT,CUSTOMER_NAME,REF_MEMO_TYPE,REF_MEMO_DT,REF_MEMO_NO,
				   REF_MEMO_AMOUNT,PREVIOUS_RECEIVED,LIST_ORDER,SUB_LIST,CANCELLED,SSS)
	SELECT 2 AS SR_NO,a.location_Code  AS DEPT_ID,DEPT_NAME,DEPT_ALIAS,USERNAME,'SALE' AS MEMO_TYPE,CM_NO,CM_DT,
	(CASE WHEN PARTY_TYPE=2 THEN AC_NAME ELSE CUSTOMER_FNAME+' '+CUSTOMER_LNAME END) AS CUSTOMER_NAME,
	'ORDER' AS REF_MEMO_TYPE,H.ORDER_DT,H.ORDER_NO,H.TOTAL_AMOUNT,ISNULL(I.PREVIOUS_RECEIVED,0),2 AS LIST_ORDER,1 AS SUB_LIST
	,A.CANCELLED,(CASE WHEN A.CANCELLED=0 THEN DBO.FN3S_RTN_DET (A.CM_ID,'SLS') ELSE '' END)
	FROM CMM01106 A JOIN USERS B ON A.USER_CODE=B.USER_CODE 
	JOIN LOCATION C ON C.DEPT_ID=a.location_Code 
	JOIN CUSTDYM E ON E.CUSTOMER_CODE=A.CUSTOMER_CODE
	LEFT OUTER JOIN LM01106 F ON F.AC_CODE=A.AC_CODE
	--JOIN SLS_BO_REF G ON G.CM_ID=A.CM_ID
	JOIN #TMPSLSORD G ON G.CM_ID=A.CM_ID
	JOIN WSL_ORDER_MST H ON H.ORDER_ID=G.ORDER_ID	  
	LEFT OUTER JOIN (SELECT A.ORDER_ID,SUM(C.NET_AMOUNT) AS PREVIOUS_RECEIVED
		  FROM WSL_ORDER_MST A 
		  JOIN WSL_ORDER_ADV_RECEIPT B ON A.ORDER_ID=B.ORDER_ID
		  JOIN ARC01106 C ON C.ADV_REC_ID=B.ADV_REC_ID
		  --JOIN SLS_BO_REF D ON D.ORDER_ID=B.ORDER_ID
		  JOIN #TMPSLSORD D ON D.ORDER_ID=B.ORDER_ID
		  JOIN CMM01106 E ON E.CM_ID=D.CM_ID
		  WHERE E.CM_DT=@DMEMODT AND E.CANCELLED=0 AND C.CANCELLED=0  GROUP BY A.ORDER_ID) I ON I.ORDER_ID=H.ORDER_ID
	WHERE A.CM_DT=@DMEMODT
	
	------ INSERT ENTRIES OF DIRECT/AGAINST ORDER ADVANCE RECEIPTS 
	INSERT @TREPS (SR_NO,DEPT_ID,DEPT_NAME,DEPT_ALIAS,USERNAME,MEMO_TYPE,MEMO_NO,MEMO_DT,MEMO_AMOUNT,CUSTOMER_NAME,CURRENT_RECEIVED,
				   CASH_AMOUNT_RECEIVED,CC_AMOUNT_RECEIVED,OTHER_AMOUNT_RECEIVED,REF_MEMO_TYPE,REF_MEMO_DT,REF_MEMO_NO,
				   REF_MEMO_AMOUNT,LIST_ORDER,CANCELLED)
	SELECT 3 AS SR_NO,a.location_Code  AS DEPT_ID,DEPT_NAME,DEPT_ALIAS,USERNAME,'ADV RCT' AS MEMO_TYPE,ADV_REC_NO,ADV_REC_DT,
	(CASE WHEN H.ORDER_ID IS NULL THEN NET_AMOUNT ELSE 0 END) AS MEMO_AMOUNT,
	(CASE WHEN PARTY_TYPE=2 THEN AC_NAME ELSE CUSTOMER_FNAME+' '+CUSTOMER_LNAME END) AS CUSTOMER_NAME,
	(CASE WHEN H.ORDER_ID IS NULL OR H.ORDER_DT<>@DMEMODT THEN A.NET_AMOUNT ELSE 0 END) AS CURRENT_RECEIVED,
	(CASE WHEN H.ORDER_ID IS NULL OR H.ORDER_DT<>@DMEMODT THEN D.CASH_AMOUNT_RECEIVED ELSE 0 END),
	(CASE WHEN H.ORDER_ID IS NULL OR H.ORDER_DT<>@DMEMODT THEN D.CC_AMOUNT_RECEIVED ELSE 0 END),
	(CASE WHEN H.ORDER_ID IS NULL OR H.ORDER_DT<>@DMEMODT THEN D.OTHER_AMOUNT_RECEIVED ELSE 0 END),
	(CASE WHEN H.ORDER_ID IS NOT NULL AND H.ORDER_DT=@DMEMODT THEN 'ORDER' ELSE '' END) AS MEMO_TYPE,
	H.ORDER_DT,H.ORDER_NO,H.TOTAL_AMOUNT,3 AS LIST_ORDER,A.CANCELLED
	
	FROM ARC01106 A JOIN USERS B ON A.USER_CODE=B.USER_CODE 
	JOIN LOCATION C ON C.DEPT_ID=a.location_Code 
	LEFT OUTER JOIN (SELECT MEMO_ID,SUM(CASE WHEN A.PAYMODE_CODE<>'0000004' THEN A.AMOUNT ELSE 0 END) AS CURRENT_RECEIVED,
		  SUM(CASE WHEN A.PAYMODE_CODE='0000000' THEN A.AMOUNT ELSE 0 END) AS CASH_AMOUNT_RECEIVED,
		  SUM(CASE WHEN PAYMODE_GRP_CODE='0000002' THEN A.AMOUNT ELSE 0 END) AS CC_AMOUNT_RECEIVED,
	  	  SUM(CASE WHEN A.PAYMODE_CODE<>'0000000' AND PAYMODE_GRP_CODE<>'0000002' THEN A.AMOUNT ELSE 0 END) AS OTHER_AMOUNT_RECEIVED
		  FROM PAYMODE_XN_DET A JOIN PAYMODE_MST B ON A.PAYMODE_CODE=B.PAYMODE_CODE
		  JOIN ARC01106 C ON C.ADV_REC_ID=A.MEMO_ID
		  WHERE XN_TYPE='ARC' AND ADV_REC_DT=@DMEMODT AND CANCELLED=0 GROUP BY MEMO_ID) D 
	ON D.MEMO_ID=A.ADV_REC_ID
	JOIN CUSTDYM E ON E.CUSTOMER_CODE=A.CUSTOMER_CODE
	LEFT OUTER JOIN LM01106 F ON F.AC_CODE=A.AC_CODE
	LEFT OUTER JOIN WSL_ORDER_ADV_RECEIPT G ON G.ADV_REC_ID=A.ADV_REC_ID
	LEFT OUTER JOIN WSL_ORDER_MST H ON H.ORDER_ID=G.ORDER_ID
	WHERE A.ADV_REC_DT=@DMEMODT AND ARCT=2
	
	----- INSERTION OF O/S RECEIPT SUMMARY
	INSERT @TREPS (SR_NO,DEPT_ID,DEPT_NAME,DEPT_ALIAS,USERNAME,MEMO_TYPE,MEMO_NO,MEMO_DT,MEMO_AMOUNT,CUSTOMER_NAME,CURRENT_RECEIVED,CREDIT_AMOUNT,
				   CASH_AMOUNT_RECEIVED,CC_AMOUNT_RECEIVED,OTHER_AMOUNT_RECEIVED,CN_ADJ,ADV_ADJ,LIST_ORDER,SUB_LIST,CANCELLED)
	SELECT 4 AS SR_NO,a.location_Code  AS DEPT_ID,DEPT_NAME,DEPT_ALIAS,USERNAME,'O/S RCT' AS MEMO_TYPE,ADV_REC_NO,ADV_REC_DT,A.NET_AMOUNT,
	(CASE WHEN PARTY_TYPE=2 THEN AC_NAME ELSE CUSTOMER_FNAME+' '+CUSTOMER_LNAME END) AS CUSTOMER_NAME,
	0 AS CURRENT_RECEIVED,0 AS CREDIT_AMOUNT,D.CASH_AMOUNT_RECEIVED,D.CC_AMOUNT_RECEIVED,D.OTHER_AMOUNT_RECEIVED,
	D.CN_ADJ,D.ADV_ADJ,4 AS LIST_ORDER,0 AS SUB_LIST,A.CANCELLED
	FROM ARC01106 A JOIN USERS B ON A.USER_CODE=B.USER_CODE 
	JOIN LOCATION C ON C.DEPT_ID=a.location_Code 
	LEFT OUTER JOIN (SELECT MEMO_ID,SUM(CASE WHEN A.PAYMODE_CODE='0000000' THEN A.AMOUNT ELSE 0 END) AS CASH_AMOUNT_RECEIVED,
		  SUM(CASE WHEN PAYMODE_GRP_CODE='0000002' THEN A.AMOUNT ELSE 0 END) AS CC_AMOUNT_RECEIVED, 	
		  SUM(CASE WHEN A.PAYMODE_CODE='0000001' THEN A.AMOUNT ELSE 0 END) AS CN_ADJ,
		  SUM(CASE WHEN A.PAYMODE_CODE='0000002' THEN A.AMOUNT ELSE 0 END) AS ADV_ADJ,
		  SUM(CASE WHEN A.PAYMODE_CODE NOT IN ('0000000','0000001','0000002') AND PAYMODE_GRP_CODE<>'0000002' THEN A.AMOUNT ELSE 0 END) AS OTHER_AMOUNT_RECEIVED		  
		  FROM PAYMODE_XN_DET A JOIN PAYMODE_MST B ON A.PAYMODE_CODE=B.PAYMODE_CODE
		  JOIN ARC01106 C ON C.ADV_REC_ID=A.MEMO_ID
		  WHERE XN_TYPE='ARC' AND ADV_REC_DT=@DMEMODT AND C.ARCT=1 AND C.ARC_TYPE=1 GROUP BY MEMO_ID) D ON D.MEMO_ID=A.ADV_REC_ID
	JOIN CUSTDYM E ON E.CUSTOMER_CODE=A.CUSTOMER_CODE
	LEFT OUTER JOIN LM01106 F ON F.AC_CODE=A.AC_CODE
	WHERE A.ADV_REC_DT=@DMEMODT AND A.ARCT=1 AND ARC_TYPE=1

	
	----- INSERTION OF SALE BIILS AGAINST WHICH O/S RECEIVED
	INSERT @TREPS (SR_NO,DEPT_ID,DEPT_NAME,DEPT_ALIAS,USERNAME,MEMO_TYPE,MEMO_NO,MEMO_DT,MEMO_AMOUNT,CUSTOMER_NAME,CURRENT_RECEIVED,CREDIT_AMOUNT,
				   CASH_AMOUNT_RECEIVED,CC_AMOUNT_RECEIVED,OTHER_AMOUNT_RECEIVED,REF_MEMO_TYPE,REF_MEMO_DT,REF_MEMO_NO,
				   REF_MEMO_AMOUNT,REF_CREDIT_AMOUNT,PREVIOUS_RECEIVED,LIST_ORDER,SUB_LIST,CANCELLED)
	SELECT 4 AS SR_NO,a.location_Code  AS DEPT_ID,DEPT_NAME,DEPT_ALIAS,USERNAME,'O/S RCT' AS MEMO_TYPE,ADV_REC_NO,ADV_REC_DT,A.NET_AMOUNT,
	(CASE WHEN PARTY_TYPE=2 THEN AC_NAME ELSE CUSTOMER_FNAME+' '+CUSTOMER_LNAME END) AS CUSTOMER_NAME,
	G.CURENT_RECEIVED,(ISNULL(G.BILL_CREDIT_AMOUNT,0)-ISNULL(G.ARC_CREDIT_AMOUNT,0)) AS CREDIT_AMOUNT,
	0 AS CASH_AMOUNT_RECEIVED,0 AS CC_AMOUNT_RECEIVED,0 AS OTHER_AMOUNT_RECEIVED,
	(CASE WHEN G.ADV_REC_ID IS NULL THEN '' ELSE 'SALE' END) AS REF_MEMO_TYPE,
	G.CM_DT,G.CM_NO,G.NET_AMOUNT AS REF_MEMO_AMOUNT,G.BILL_CREDIT_AMOUNT AS REF_CREDIT_AMOUNT,H.PREVIOUS_RECEIVED,
	4 AS LIST_ORDER,1 AS SUB_LIST,A.CANCELLED
	FROM ARC01106 A JOIN USERS B ON A.USER_CODE=B.USER_CODE 
	JOIN LOCATION C ON C.DEPT_ID=a.location_Code 
	JOIN CUSTDYM E ON E.CUSTOMER_CODE=A.CUSTOMER_CODE
	LEFT OUTER JOIN LM01106 F ON F.AC_CODE=A.AC_CODE
	JOIN (SELECT B.CM_NO,B.CM_DT,D.ADV_REC_ID,B.NET_AMOUNT,SUM(CASE WHEN A.PAYMODE_CODE='0000004' THEN A.AMOUNT ELSE 0 END) AS BILL_CREDIT_AMOUNT,
					 DBO.FN_ARC_AMOUNT_PREV(B.CM_ID,D.ADV_REC_DT) AS ARC_CREDIT_AMOUNT,C.RECEIPT_AMOUNT AS CURENT_RECEIVED
					 FROM PAYMODE_XN_DET A 
					 JOIN CMM01106 B ON A.MEMO_ID=B.CM_ID
					 JOIN CMM_CREDIT_RECEIPT C ON C.CM_ID=B.CM_ID
					 JOIN ARC01106 D ON D.ADV_REC_ID=C.ADV_REC_ID
					 WHERE ADV_REC_DT=@DMEMODT AND XN_TYPE='SLS' AND D.CANCELLED=0 
					 GROUP BY B.CM_NO,B.CM_DT,D.ADV_REC_ID,B.NET_AMOUNT,B.CM_ID,D.ADV_REC_DT,C.RECEIPT_AMOUNT) G ON G.ADV_REC_ID=A.ADV_REC_ID
	  LEFT OUTER JOIN (SELECT F.ADV_REC_ID,SUM(CASE WHEN A.PAYMODE_CODE<>'0000004' THEN A.AMOUNT ELSE 0 END) AS PREVIOUS_RECEIVED
	  FROM PAYMODE_XN_DET A JOIN PAYMODE_MST B ON A.PAYMODE_CODE=B.PAYMODE_CODE
	  JOIN ARC01106 C ON C.ADV_REC_ID=A.MEMO_ID
	  JOIN CMM_CREDIT_RECEIPT D ON D.ADV_REC_ID=C.ADV_REC_ID
	  JOIN CMM_CREDIT_RECEIPT E ON E.CM_ID=D.CM_ID
	  JOIN ARC01106 F ON F.ADV_REC_ID=E.ADV_REC_ID
	  WHERE XN_TYPE='ARC' AND F.ADV_REC_DT=@DMEMODT 
	  AND C.ADV_REC_DT<@DMEMODT 
	  GROUP BY F.ADV_REC_ID) H ON H.ADV_REC_ID=A.ADV_REC_ID
	WHERE A.ADV_REC_DT=@DMEMODT AND ARCT=1

	----- INSERTION OF PAYMENT TO CUSTOMER
	INSERT @TREPS (SR_NO,DEPT_ID,DEPT_NAME,DEPT_ALIAS,USERNAME,MEMO_TYPE,MEMO_NO,MEMO_DT,MEMO_AMOUNT,CUSTOMER_NAME,CURRENT_RECEIVED,CREDIT_AMOUNT,
				   CASH_AMOUNT_RECEIVED,CC_AMOUNT_RECEIVED,OTHER_AMOUNT_RECEIVED,CN_ADJ,ADV_ADJ,LIST_ORDER,SUB_LIST,CANCELLED)
	SELECT 5 AS SR_NO,a.location_Code  AS DEPT_ID,DEPT_NAME,DEPT_ALIAS,USERNAME,'PAYMENT' AS MEMO_TYPE,ADV_REC_NO,ADV_REC_DT,A.NET_AMOUNT,
	(CASE WHEN PARTY_TYPE=2 THEN AC_NAME ELSE CUSTOMER_FNAME+' '+CUSTOMER_LNAME END) AS CUSTOMER_NAME,
	0 AS CURRENT_RECEIVED,0 AS CREDIT_AMOUNT,(D.CASH_AMOUNT_RECEIVED*-1) AS CASH_AMOUNT_RECEIVED,(D.CC_AMOUNT_RECEIVED*-1) AS CC_AMOUNT_RECEIVED
	,D.CN_ADJ,D.ADV_ADJ,(D.OTHER_AMOUNT_RECEIVED*-1),
	4 AS LIST_ORDER,0 AS SUB_LIST,A.CANCELLED
	FROM ARC01106 A JOIN USERS B ON A.USER_CODE=B.USER_CODE 
	JOIN LOCATION C ON C.DEPT_ID=a.location_Code 
	LEFT OUTER JOIN (SELECT MEMO_ID,SUM(CASE WHEN A.PAYMODE_CODE='0000000' THEN A.AMOUNT ELSE 0 END) AS CASH_AMOUNT_RECEIVED,
		  SUM(CASE WHEN PAYMODE_GRP_CODE='0000002' THEN A.AMOUNT ELSE 0 END) AS CC_AMOUNT_RECEIVED, 	
		  SUM(CASE WHEN A.PAYMODE_CODE='0000001' THEN A.AMOUNT ELSE 0 END) AS CN_ADJ,
		  SUM(CASE WHEN A.PAYMODE_CODE='0000002' THEN A.AMOUNT ELSE 0 END) AS ADV_ADJ, 	
	  	  SUM(CASE WHEN A.PAYMODE_CODE NOT IN ('0000000','0000001','0000002') AND PAYMODE_GRP_CODE<>'0000002' THEN A.AMOUNT ELSE 0 END) AS OTHER_AMOUNT_RECEIVED
		  FROM PAYMODE_XN_DET A JOIN PAYMODE_MST B ON A.PAYMODE_CODE=B.PAYMODE_CODE
		  JOIN ARC01106 C ON C.ADV_REC_ID=A.MEMO_ID
		  WHERE XN_TYPE='ARC' AND ADV_REC_DT=@DMEMODT AND C.ARCT=1 AND C.ARC_TYPE=2 GROUP BY MEMO_ID) D ON D.MEMO_ID=A.ADV_REC_ID
	JOIN CUSTDYM E ON E.CUSTOMER_CODE=A.CUSTOMER_CODE
	LEFT OUTER JOIN LM01106 F ON F.AC_CODE=A.AC_CODE
	WHERE A.ADV_REC_DT=@DMEMODT AND A.ARCT=1 AND ARC_TYPE=2

	----RESULT SET PROCESSING	
	IF OBJECT_ID('TEMPDB..#POS_DSR','U') IS NOT NULL
		DROP TABLE #POS_DSR
	
	SELECT ROW_NUMBER() OVER(PARTITION BY MEMO_TYPE,MEMO_NO ORDER BY MEMO_AMOUNT DESC) AS ROW_ID,CONVERT(BIT,0) AS DISPLAY_AMT,* 
	INTO #POS_DSR FROM @TREPS 

	IF OBJECT_ID('TEMPDB..#SLSORD','U') IS NOT NULL
		DROP TABLE #SLSORD
		
	SELECT DISTINCT MEMO_NO,MEMO_TYPE,MEMO_DT INTO #SLSORD FROM @TREPS WHERE ISNULL(REF_MEMO_TYPE,'')<>''

	UPDATE A SET SLSORD=1 
	FROM #POS_DSR A 
	JOIN #SLSORD B ON A.MEMO_NO=B.MEMO_NO AND A.MEMO_TYPE=B.MEMO_TYPE AND A.MEMO_DT=B.MEMO_DT
	

	UPDATE A SET REF_MEMO_TYPE=B.REF_MEMO_TYPE,REF_MEMO_DT=B.REF_MEMO_DT,REF_MEMO_NO=B.REF_MEMO_NO
			    ,REF_MEMO_AMOUNT=B.REF_MEMO_AMOUNT,REF_CREDIT_AMOUNT=B.REF_CREDIT_AMOUNT
			    ,PREVIOUS_RECEIVED=B.PREVIOUS_RECEIVED,DISPLAY_AMT=1
	FROM #POS_DSR A
	JOIN #POS_DSR B ON A.MEMO_NO=B.MEMO_NO AND A.MEMO_TYPE=B.MEMO_TYPE AND A.SLSORD=B.SLSORD
	WHERE A.SLSORD=1 AND A.REF_MEMO_TYPE IS NULL AND B.ROW_ID=2 AND B.REF_MEMO_TYPE IS NOT NULL 
	AND A.MEMO_AMOUNT > 0
	
	DELETE #POS_DSR WHERE SLSORD=1 AND ROW_ID=2
	
	UPDATE #POS_DSR SET DISPLAY_AMT=1 WHERE CANCELLED=0 AND SLSORD IS NULL
	
	SELECT ID,ROW_ID,SR_NO,DEPT_ID,DEPT_NAME,DEPT_ALIAS,USERNAME,MEMO_TYPE,MEMO_NO,SLSORD,MEMO_DT
	,DISPLAY_AMT
	--,(CASE WHEN ISNULL(REF_MEMO_NO,'')='' AND CANCELLED=0  THEN MEMO_AMOUNT ELSE 0 END) AS MEMO_AMOUNT
	,(CASE WHEN DISPLAY_AMT=1  THEN MEMO_AMOUNT ELSE 0.00 END) AS MEMO_AMOUNT
	,(CASE WHEN ISNULL(SLSORD,0)=0 AND CANCELLED=0 AND MEMO_TYPE IN ('SALE','ORDER')  THEN MEMO_AMOUNT ELSE 0.00 END) AS SLS_ORD_ONLY_AMOUNT
	,(CASE WHEN DISPLAY_AMT=1 THEN MEMO_AMOUNT ELSE 0.00 END) AS SLS_ORD_AMOUNT
	,REF_MEMO_TYPE,REF_MEMO_DT,REF_MEMO_NO,REF_MEMO_AMOUNT,REF_CREDIT_AMOUNT,CUSTOMER_NAME
	,(CASE WHEN DISPLAY_AMT=1 THEN PREVIOUS_RECEIVED ELSE 0.00 END) AS PREVIOUS_RECEIVED
	,(CASE WHEN DISPLAY_AMT=1  THEN CURRENT_RECEIVED ELSE 0.00 END) AS CURRENT_RECEIVED
	
	,(CASE WHEN DISPLAY_AMT=1  THEN (CASE WHEN MEMO_TYPE='PAYMENT' THEN -CREDIT_AMOUNT ELSE CREDIT_AMOUNT END) ELSE 0.00 END) AS ACT_CREDIT_AMOUNT
	,(CASE WHEN ISNULL(REF_MEMO_NO,'')='' AND CANCELLED=0  THEN (CASE WHEN MEMO_TYPE='PAYMENT' THEN -CASH_AMOUNT_RECEIVED ELSE CASH_AMOUNT_RECEIVED END) ELSE 0.00 END) AS ACT_CASH_AMOUNT_RECEIVED
	,(CASE WHEN ISNULL(REF_MEMO_NO,'')='' AND CANCELLED=0  THEN (CASE WHEN MEMO_TYPE='PAYMENT' THEN -CC_AMOUNT_RECEIVED ELSE CC_AMOUNT_RECEIVED END) ELSE 0.00 END) AS ACT_CC_AMOUNT_RECEIVED
	,(CASE WHEN ISNULL(REF_MEMO_NO,'')='' AND CANCELLED=0  THEN (CASE WHEN MEMO_TYPE='PAYMENT' THEN -OTHER_AMOUNT_RECEIVED ELSE OTHER_AMOUNT_RECEIVED END) ELSE 0.00 END) AS ACT_OTHER_AMOUNT_RECEIVED
	,(CASE WHEN ISNULL(REF_MEMO_NO,'')='' AND CANCELLED=0  THEN (CASE WHEN MEMO_TYPE='PAYMENT' THEN -CN_ADJ ELSE CN_ADJ END) ELSE 0.00 END) AS ACT_CN_ADJ
	,(CASE WHEN ISNULL(REF_MEMO_NO,'')='' AND CANCELLED=0  THEN (CASE WHEN MEMO_TYPE='PAYMENT' THEN -ADV_ADJ ELSE ADV_ADJ END) ELSE 0.00 END) AS ACT_ADV_ADJ		  
	
	,(CASE WHEN DISPLAY_AMT=1  THEN CASH_AMOUNT_RECEIVED ELSE 0.00 END) AS CASH_AMOUNT_RECEIVED
	,(CASE WHEN DISPLAY_AMT=1  THEN CREDIT_AMOUNT ELSE 0.00 END) AS CREDIT_AMOUNT
	,(CASE WHEN DISPLAY_AMT=1  THEN CC_AMOUNT_RECEIVED ELSE 0.00 END) AS CC_AMOUNT_RECEIVED
	,(CASE WHEN DISPLAY_AMT=1  THEN OTHER_AMOUNT_RECEIVED ELSE 0.00 END) AS OTHER_AMOUNT_RECEIVED
	,(CASE WHEN DISPLAY_AMT=1  THEN CN_ADJ ELSE 0.00 END) AS CN_ADJ
	,(CASE WHEN DISPLAY_AMT=1  THEN ADV_ADJ ELSE 0.00 END) AS ADV_ADJ		  
	,LIST_ORDER,SUB_LIST,CANCELLED,SSS,REF_NO
	FROM #POS_DSR 
	ORDER BY DEPT_ID,SR_NO,USERNAME,LIST_ORDER,MEMO_NO,SUB_LIST
	
	
	--SELECT ID,ROW_ID,SR_NO,DEPT_ID,DEPT_NAME,DEPT_ALIAS,USERNAME,MEMO_TYPE,MEMO_NO,SLSORD,MEMO_DT
	----,(CASE WHEN ISNULL(REF_MEMO_NO,'')='' AND CANCELLED=0  THEN MEMO_AMOUNT ELSE 0 END) AS MEMO_AMOUNT
	--,(CASE WHEN ISNULL(SLSORD,0)=0 AND CANCELLED=0  THEN MEMO_AMOUNT ELSE 0.00 END) AS MEMO_AMOUNT
	--,(CASE WHEN ISNULL(SLSORD,0)=0 AND CANCELLED=0 AND MEMO_TYPE IN ('SALE','ORDER')  THEN MEMO_AMOUNT ELSE 0.00 END) AS SLS_ORD_ONLY_AMOUNT
	--,(CASE WHEN ISNULL(REF_MEMO_NO,'')='' AND SLSORD=1 AND CANCELLED=0  THEN MEMO_AMOUNT ELSE 0.00 END) AS SLS_ORD_AMOUNT
	--,REF_MEMO_TYPE,REF_MEMO_DT,REF_MEMO_NO,REF_MEMO_AMOUNT,REF_CREDIT_AMOUNT,CUSTOMER_NAME
	--,(CASE WHEN ISNULL(REF_MEMO_NO,'')='' AND CANCELLED=0  THEN PREVIOUS_RECEIVED ELSE 0.00 END) AS PREVIOUS_RECEIVED
	--,(CASE WHEN ISNULL(REF_MEMO_NO,'')='' AND CANCELLED=0  THEN CURRENT_RECEIVED ELSE 0.00 END) AS CURRENT_RECEIVED
	
	--,(CASE WHEN ISNULL(REF_MEMO_NO,'')='' AND CANCELLED=0  THEN (CASE WHEN MEMO_TYPE='PAYMENT' THEN -CREDIT_AMOUNT ELSE CREDIT_AMOUNT END) ELSE 0.00 END) AS ACT_CREDIT_AMOUNT
	--,(CASE WHEN ISNULL(REF_MEMO_NO,'')='' AND CANCELLED=0  THEN (CASE WHEN MEMO_TYPE='PAYMENT' THEN -CASH_AMOUNT_RECEIVED ELSE CASH_AMOUNT_RECEIVED END) ELSE 0.00 END) AS ACT_CASH_AMOUNT_RECEIVED
	--,(CASE WHEN ISNULL(REF_MEMO_NO,'')='' AND CANCELLED=0  THEN (CASE WHEN MEMO_TYPE='PAYMENT' THEN -CC_AMOUNT_RECEIVED ELSE CC_AMOUNT_RECEIVED END) ELSE 0.00 END) AS ACT_CC_AMOUNT_RECEIVED
	--,(CASE WHEN ISNULL(REF_MEMO_NO,'')='' AND CANCELLED=0  THEN (CASE WHEN MEMO_TYPE='PAYMENT' THEN -OTHER_AMOUNT_RECEIVED ELSE OTHER_AMOUNT_RECEIVED END) ELSE 0.00 END) AS ACT_OTHER_AMOUNT_RECEIVED
	--,(CASE WHEN ISNULL(REF_MEMO_NO,'')='' AND CANCELLED=0  THEN (CASE WHEN MEMO_TYPE='PAYMENT' THEN -CN_ADJ ELSE CN_ADJ END) ELSE 0.00 END) AS ACT_CN_ADJ
	--,(CASE WHEN ISNULL(REF_MEMO_NO,'')='' AND CANCELLED=0  THEN (CASE WHEN MEMO_TYPE='PAYMENT' THEN -ADV_ADJ ELSE ADV_ADJ END) ELSE 0.00 END) AS ACT_ADV_ADJ		  
	
	--,(CASE WHEN ISNULL(REF_MEMO_NO,'')='' AND CANCELLED=0  THEN CASH_AMOUNT_RECEIVED ELSE 0.00 END) AS CASH_AMOUNT_RECEIVED
	--,(CASE WHEN ISNULL(REF_MEMO_NO,'')='' AND CANCELLED=0  THEN CREDIT_AMOUNT ELSE 0.00 END) AS CREDIT_AMOUNT
	--,(CASE WHEN ISNULL(REF_MEMO_NO,'')='' AND CANCELLED=0  THEN CC_AMOUNT_RECEIVED ELSE 0.00 END) AS CC_AMOUNT_RECEIVED
	--,(CASE WHEN ISNULL(REF_MEMO_NO,'')='' AND CANCELLED=0  THEN OTHER_AMOUNT_RECEIVED ELSE 0.00 END) AS OTHER_AMOUNT_RECEIVED
	--,(CASE WHEN ISNULL(REF_MEMO_NO,'')='' AND CANCELLED=0  THEN CN_ADJ ELSE 0.00 END) AS CN_ADJ
	--,(CASE WHEN ISNULL(REF_MEMO_NO,'')='' AND CANCELLED=0  THEN ADV_ADJ ELSE 0.00 END) AS ADV_ADJ		  
	--,LIST_ORDER,SUB_LIST,CANCELLED,SSS
	--FROM @TREPS 
	--ORDER BY DEPT_ID,SR_NO,USERNAME,LIST_ORDER,MEMO_NO,SUB_LIST
	--ORDER BY DEPT_ID,USERNAME,LIST_ORDER,MEMO_NO,SUB_LIST
	--SELECT * INTO POS_DSR FROM @TREPS ORDER BY DEPT_ID,USERNAME,LIST_ORDER,MEMO_NO,SUB_LIST
	
END
