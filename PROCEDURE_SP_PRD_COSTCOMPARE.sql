CREATE PROCEDURE SP_PRD_COSTCOMPARE  
@NQUERYID NUMERIC(2,0),          
@CMEMOID VARCHAR(MAX),          
@CWHERE VARCHAR(MAX),          
@CDEPTCODE VARCHAR(10)=''          
--WITH ENCRYPTION          
          
AS  
BEGIN            
              
IF @NQUERYID = 1            
GOTO LBLSETDET  
            
ELSE            
GOTO LAST            
          
LBLSETDET:          
SELECT ARTICLE_CODE,ARTICLE_NO,ARTICLE_NAME,SUM(QUANTITY) AS QUANTITY ,SUM(AMOUNT) AS AMOUNT    
FROM    
(    
  SELECT B.REF_COMPONENT_ARTICLE_CODE AS ARTICLE_CODE,ART.ARTICLE_NO,ART.ARTICLE_NAME ,SUM(C.QUANTITY) AS QUANTITY,SUM(C.RATE) AS  RATE,              
 SUM(C.AMOUNT)/ISNULL(T.QUANTITY,1) AS AMOUNT               
 FROM PRD_AGENCY_MATERIAL_RECEIPT_DET C     
 JOIN PRD_AGENCY_MATERIAL_RECEIPT_MST D ON D.MEMO_ID=C.MEMO_ID              
 JOIN PRD_AGENCY_ISSUE_MATERIAL_DET B ON B.ROW_ID=C.REF_ROW_ID            
 JOIN ARTICLE ART ON ART.ARTICLE_CODE=B.REF_COMPONENT_ARTICLE_CODE      
 JOIN PRD_AGENCY_ISSUE_MATERIAL_MST F ON F.MEMO_ID=B.MEMO_ID              
 JOIN JOBS E ON E.JOB_CODE=B.JOB_CODE     
 JOIN   
 (  
  SELECT DISTINCT QUANTITY ,WOD.MEMO_ID FROM PRD_WO_SUB_DET WOSD  
  JOIN PRD_WO_DET WOD ON WOD.ROW_ID=WOSD.REF_ROW_ID  
 )T ON T.MEMO_ID=B.REF_PRD_WORKORDER_MEMOID             
 WHERE B.REF_PRD_WORKORDER_MEMOID=@CMEMOID AND D.CANCELLED=0 --'0001113000000000000060'                
 GROUP BY B.REF_COMPONENT_ARTICLE_CODE ,ART.ARTICLE_NO ,ART.ARTICLE_NAME ,ISNULL(T.QUANTITY,1)           
  
 UNION ALL               
  
 SELECT B.REF_COMPONENT_ARTICLE_CODE AS ARTICLE_CODE,ART.ARTICLE_NO,ART.ARTICLE_NAME,  SUM(C.QUANTITY) AS QUANTITY,SUM(C.PURCHASE_PRICE) AS RATE,            
 SUM(C.PROCESS_COST) AS AMOUNT             
 FROM PRD_OP_MATERIAL_CON_DET C            
 JOIN PRD_OP_MATERIAL_CON_MST B ON B.MEMO_ID=C.MEMO_ID         
 JOIN ARTICLE ART ON ART.ARTICLE_CODE=B.REF_COMPONENT_ARTICLE_CODE            
 JOIN JOBS E ON E.JOB_CODE=B.SOURCE_DEPARTMENT_ID            
 WHERE B.REF_PRD_WORKORDER_MEMOID=@CMEMOID AND B.CANCELLED=0            
 GROUP BY B.REF_COMPONENT_ARTICLE_CODE ,ART.ARTICLE_NO  ,ARTICLE_NAME         
  
 UNION ALL  
  
 SELECT C.ARTICLE_CODE AS ARTICLE_CODE,ART.ARTICLE_NO, ART.ARTICLE_NAME,SUM(C.QUANTITY) AS QUANTITY,SUM(C.PURCHASE_PRICE) AS RATE,            
 SUM(C.PROCESS_COST) AS AMOUNT             
 FROM PRD_DEPARTMENT_OUTPUT_DET C            
 JOIN PRD_DEPARTMENT_OUTPUT_MST B ON B.MEMO_ID=C.MEMO_ID         
 JOIN ARTICLE ART ON ART.ARTICLE_CODE=C.ARTICLE_CODE  
 JOIN JOBS E ON E.JOB_CODE=B.DEPARTMENT_ID            
 WHERE B.REF_PRD_WORKORDER_MEMOID=@CMEMOID AND B.CANCELLED=0            
 GROUP BY C.ARTICLE_CODE ,ART.ARTICLE_NO         ,ART.ARTICLE_NAME  
  
                   
) T    
GROUP BY ARTICLE_CODE,ARTICLE_NO,ARTICLE_NAME    
   
   
SELECT A.COMPONENT_CODE AS ARTICLE_CODE, SK.ARTICLE_CODE AS BOM_ARTICLE_CODE,C.ARTICLE_NO,            
 PARA1.PARA1_NAME AS COLOR,PARA2.PARA2_NAME AS SIZE , (SK.PURCHASE_PRICE) AS RATE            
 ,SUM(ISNULL(A.QUANTITY,0))/ISNULL(T.QUANTITY,1) AS AVG_QTY,SUM(ISNULL(A.QUANTITY,0))/ISNULL(T.QUANTITY,1) AS ORDER_QTY            
 ,(ISNULL(A.QUANTITY,0))/ISNULL(T.QUANTITY,1) AS USED_MATERIAL_QTY            
 ,(ISNULL(SK.PURCHASE_PRICE,0)*ISNULL(A.QUANTITY,0))/ISNULL(T.QUANTITY,1) AS AMOUNT            
 FROM PRD_STK_TRANSFER_DET A  
  JOIN PRD_STK_TRANSFER_MST B ON B.MEMO_ID = A.MEMO_ID       
 JOIN PRD_SKU SK ON SK.PRODUCT_UID=A.PRODUCT_UID  
 JOIN ARTICLE C ON C.ARTICLE_CODE=SK.ARTICLE_CODE            
 JOIN PARA1 ON PARA1.PARA1_CODE=SK.PARA1_CODE            
 JOIN PARA2 ON PARA2.PARA2_CODE=SK.PARA2_CODE          
 JOIN   
 (  
 SELECT DISTINCT QUANTITY ,WOD.MEMO_ID FROM PRD_WO_SUB_DET WOSD  
 JOIN PRD_WO_DET WOD ON WOD.ROW_ID=WOSD.REF_ROW_ID  
 )T ON T.MEMO_ID=A.REF_WO_ID  
 WHERE A.REF_WO_ID= @CMEMOID  
 GROUP BY A.COMPONENT_CODE , SK.ARTICLE_CODE ,C.ARTICLE_NO,            
 PARA1.PARA1_NAME ,PARA2.PARA2_NAME , SK.PURCHASE_PRICE,ISNULL(T.QUANTITY,1),(ISNULL(A.QUANTITY,0))/ISNULL(T.QUANTITY,1),  
 (ISNULL(SK.PURCHASE_PRICE,0)*ISNULL(A.QUANTITY,0)) /ISNULL(T.QUANTITY,1)  
        
     
             
 SELECT ARTICLE_CODE,ARTICLE_NO,JOB_NAME,JOB_CODE, SUM(QUANTITY) AS QUANTITY,SUM(RATE) AS RATE,SUM(AMOUNT) AS AMOUNT FROM      (       
 SELECT B.REF_COMPONENT_ARTICLE_CODE AS ARTICLE_CODE,ART.ARTICLE_NO, E.JOB_NAME,E.JOB_CODE,SUM(C.QUANTITY)/ISNULL(T.QUANTITY,1) AS QUANTITY,SUM(C.RATE) AS  RATE,                  
 SUM(C.AMOUNT)/ISNULL(T.QUANTITY,1) AS AMOUNT                   
 FROM PRD_AGENCY_MATERIAL_RECEIPT_DET C         
 JOIN PRD_AGENCY_MATERIAL_RECEIPT_MST D ON D.MEMO_ID=C.MEMO_ID                  
 JOIN PRD_AGENCY_ISSUE_MATERIAL_DET B ON B.ROW_ID=C.REF_ROW_ID                
 JOIN ARTICLE ART ON ART.ARTICLE_CODE=B.REF_COMPONENT_ARTICLE_CODE          
 JOIN PRD_AGENCY_ISSUE_MATERIAL_MST F ON F.MEMO_ID=B.MEMO_ID                  
 JOIN JOBS E ON E.JOB_CODE=B.JOB_CODE       
 JOIN   
 (  
  SELECT DISTINCT QUANTITY ,WOD.MEMO_ID FROM PRD_WO_SUB_DET WOSD  
  JOIN PRD_WO_DET WOD ON WOD.ROW_ID=WOSD.REF_ROW_ID  
 )T ON T.MEMO_ID=B.REF_PRD_WORKORDER_MEMOID             
 WHERE B.REF_PRD_WORKORDER_MEMOID=@CMEMOID AND D.CANCELLED=0 --'0001113000000000000060'                    
 GROUP BY E.JOB_NAME,E.JOB_CODE,B.REF_COMPONENT_ARTICLE_CODE ,ART.ARTICLE_NO  ,ISNULL(T.QUANTITY,1)               
      
 UNION ALL                   
 SELECT B.REF_COMPONENT_ARTICLE_CODE AS ARTICLE_CODE,ART.ARTICLE_NO,  'OPERATION COST' AS JOB_NAME,'' AS JOB_CODE,SUM(C.QUANTITY) AS QUANTITY,(C.PURCHASE_PRICE) AS RATE,                
 SUM(C.PROCESS_COST)/SUM(C.QUANTITY) AS AMOUNT                 
 FROM PRD_OP_MATERIAL_CON_DET C                
 JOIN PRD_OP_MATERIAL_CON_MST B ON B.MEMO_ID=C.MEMO_ID             
 JOIN ARTICLE ART ON ART.ARTICLE_CODE=B.REF_COMPONENT_ARTICLE_CODE                
 JOIN JOBS E ON E.JOB_CODE=B.SOURCE_DEPARTMENT_ID                
 WHERE B.REF_PRD_WORKORDER_MEMOID=@CMEMOID AND B.CANCELLED=0                
 GROUP BY B.REF_COMPONENT_ARTICLE_CODE ,E.JOB_NAME,E.JOB_CODE ,ART.ARTICLE_NO ,C.PURCHASE_PRICE              
      
 UNION ALL      
      
 SELECT C.ARTICLE_CODE AS ARTICLE_CODE,ART.ARTICLE_NO, 'OPERATION COST' AS JOB_NAME,'' AS JOB_CODE,SUM(C.QUANTITY) AS QUANTITY,(C.PURCHASE_PRICE) AS RATE,                
 SUM(C.PROCESS_COST)/SUM(C.QUANTITY) AS AMOUNT                 
 FROM PRD_DEPARTMENT_OUTPUT_DET C                
 JOIN PRD_DEPARTMENT_OUTPUT_MST B ON B.MEMO_ID=C.MEMO_ID             
 JOIN ARTICLE ART ON ART.ARTICLE_CODE=C.ARTICLE_CODE      
 JOIN JOBS E ON E.JOB_CODE=B.DEPARTMENT_ID                
 WHERE B.REF_PRD_WORKORDER_MEMOID=@CMEMOID AND B.CANCELLED=0                
 GROUP BY C.ARTICLE_CODE ,E.JOB_NAME,E.JOB_CODE ,ART.ARTICLE_NO    ,C.PURCHASE_PRICE           
              
             
)A      
GROUP BY ARTICLE_CODE,ARTICLE_NO,JOB_NAME,JOB_CODE          
                
  
  
  
  
    
 SELECT ARTICLE_CODE,'' AS ARTICLE_NO,'PURCHASE' AS JOB_NAME,JOB_CODE, INVOICE_QUANTITY,                
 RATE,AMOUNT                  
 FROM(              
  SELECT ARTICLE_CODE,JOB_NAME,JOB_CODE,CAST(0 AS NUMERIC(10,2)) AS INVOICE_QUANTITY,                
  CAST(0 AS NUMERIC(10,2)) AS RATE,ISNULL(T1.AMOUNT,0)-ISNULL(T2.SUBTOTAL,0) AS AMOUNT                  
  FROM                   
  (                  
   SELECT E.REF_WO_ID, '' AS ARTICLE_CODE,'PURCHASE' AS JOB_NAME, '' AS JOB_CODE                  
   ,SUM(A.INVOICE_QUANTITY ) AS INVOICE_QUANTITY                  
   ,SUM(A.PURCHASE_PRICE) AS RATE,SUM(A.INVOICE_QUANTITY *A.PURCHASE_PRICE )/ISNULL(T3.QUANTITY,1) AS AMOUNT                  
   FROM PRD_PID01106 A                  
   JOIN PRD_PIM01106 PM ON PM.MRR_ID=A.MRR_ID                
   JOIN PRD_POD01106 B ON B.ROW_ID=A.PO_ROW_ID                  
   JOIN PRD_PO_WSL C ON B.PO_ID=C.PO_ID                  
   JOIN PRD_PS_MST E ON C.INV_ID=E.PS_ID    
   JOIN   
 (  
  SELECT DISTINCT QUANTITY ,WOD.MEMO_ID FROM PRD_WO_SUB_DET WOSD  
  JOIN PRD_WO_DET WOD ON WOD.ROW_ID=WOSD.REF_ROW_ID  
 )T3 ON T3.MEMO_ID=E.REF_WO_ID    
   WHERE E.REF_WO_ID=@CMEMOID AND E.CANCELLED=0  AND PM.CANCELLED=0                
   GROUP BY E.REF_WO_ID ,ISNULL(T3.QUANTITY,1)           
  ) T1                   
  RIGHT OUTER JOIN                   
  (                  
   SELECT A1.REF_WO_ID,SUM(A1.SUBTOTAL)/ISNULL(T3.QUANTITY,1) AS SUBTOTAL   
   FROM PRD_PS_MST A1       
      JOIN   
 (  
  SELECT DISTINCT QUANTITY ,WOD.MEMO_ID FROM PRD_WO_SUB_DET WOSD  
  JOIN PRD_WO_DET WOD ON WOD.ROW_ID=WOSD.REF_ROW_ID  
 )T3 ON T3.MEMO_ID=A1.REF_WO_ID                 
   WHERE A1.REF_WO_ID=@CMEMOID AND  A1.CANCELLED=0                
   GROUP BY A1.REF_WO_ID  ,ISNULL(T3.QUANTITY,1)          
  ) T2 ON T1.REF_WO_ID=T2.REF_WO_ID   
               
 ) T   
  
  
  
  
   
   
   
   DECLARE @COVERHEADPER NUMERIC(5,2)   
 SELECT @COVERHEADPER=OVERHEAD_PER FROM PRD_WO_MST WHERE MEMO_ID=@CMEMOID  
 SELECT SUM(T.AMOUNT) AS OVERHEAD FROM (  
 
 SELECT B.REF_COMPONENT_ARTICLE_CODE AS ARTICLE_CODE,ART.ARTICLE_NO,  'OVERHEAD COST' AS JOB_NAME,'' AS JOB_CODE,0 AS QUANTITY,0 AS RATE,                
 SUM(C.PROCESS_COST*@COVERHEADPER/100)/SUM(C.QUANTITY) AS AMOUNT                 
 FROM PRD_OP_MATERIAL_CON_DET C                
 JOIN PRD_OP_MATERIAL_CON_MST B ON B.MEMO_ID=C.MEMO_ID             
 JOIN ARTICLE ART ON ART.ARTICLE_CODE=B.REF_COMPONENT_ARTICLE_CODE                
 JOIN JOBS E ON E.JOB_CODE=B.SOURCE_DEPARTMENT_ID                
 WHERE B.REF_PRD_WORKORDER_MEMOID=@CMEMOID AND B.CANCELLED=0                
 GROUP BY B.REF_COMPONENT_ARTICLE_CODE ,E.JOB_NAME,E.JOB_CODE ,ART.ARTICLE_NO      
     
  UNION ALL    
      
  SELECT C.ARTICLE_CODE AS ARTICLE_CODE,ART.ARTICLE_NO, 'OVERHEAD COST' AS JOB_NAME,'' AS JOB_CODE,0 AS  QUANTITY,0 AS RATE,                
 SUM(C.PROCESS_COST*@COVERHEADPER/100)/SUM(C.QUANTITY) AS AMOUNT                 
 FROM PRD_DEPARTMENT_OUTPUT_DET C                
 JOIN PRD_DEPARTMENT_OUTPUT_MST B ON B.MEMO_ID=C.MEMO_ID             
 JOIN ARTICLE ART ON ART.ARTICLE_CODE=C.ARTICLE_CODE      
 JOIN JOBS E ON E.JOB_CODE=B.DEPARTMENT_ID                
 WHERE B.REF_PRD_WORKORDER_MEMOID=@CMEMOID AND B.CANCELLED=0                
 GROUP BY C.ARTICLE_CODE ,E.JOB_NAME,E.JOB_CODE ,ART.ARTICLE_NO  
  
 )T  
    
   
GOTO LAST          
           
          
LAST:            
END
