CREATE PROCEDURE VALIDATEXN_MIRROR_WSR  
 @CLOCID VARCHAR(10),
 @CXNID VARCHAR(50),   
 @CMERGEDB VARCHAR(200),
 @CERRORMSG VARCHAR(MAX) OUTPUT  
-- WITH ENCRYPTION
AS  
BEGIN  
/* 
VALIDATEXN_MIRROR_WSR_V208_29_JAN_14 : THIS PROCEDURE WILL VALIDATE ALL THE MIRROR TRANSFERRED DATA FOR
WHOLESALE DATA.
*/
DECLARE	@NCALCDISCOUNTAMT NUMERIC(14,2),@NDISCOUNTAMT NUMERIC(14,2),@DTSQL NVARCHAR(MAX),@NSUBTOTAL NUMERIC(14,2)
		,@NSUMINDNET NUMERIC(14,2),@CSTEP VARCHAR(5),@CCHK_TABLE VARCHAR(50),@NPAYMODECRAMT NUMERIC(10,2)
		,@NPAYMODETOTAMT NUMERIC(10,2),@NTOTAMOUNT NUMERIC(14,2)   
	 SET @CERRORMSG=''
BEGIN TRY	 
	 SET @CSTEP=00	     
	 IF OBJECT_ID('TEMPDB..#CNMTABLE','U') IS NOT NULL 
		DROP TABLE #CNMTABLE	 
	 SET @CSTEP=10	     
	 IF OBJECT_ID('TEMPDB..#CNDTABLE','U') IS NOT NULL 
		DROP TABLE #CNDTABLE
	 SET @CSTEP=20	     	
	 IF OBJECT_ID('TEMPDB..#PAYMODETABLE','U') IS NOT NULL 
		DROP TABLE #PAYMODETABLE		
	 SET @CSTEP=30	     
	 CREATE TABLE #CNMTABLE(CN_ID VARCHAR(22),MODE NUMERIC (5,0),DISCOUNT_PERCENTAGE NUMERIC (7,3),
			 DISCOUNT_AMOUNT NUMERIC (10,2),TOTAL_AMOUNT NUMERIC (10,2), ROUND_OFF NUMERIC (10,2), 
			 CN_NO CHAR(15),SUBTOTAL NUMERIC(18,4), FIN_YEAR VARCHAR(10),
			 CN_DT DATETIME,USER_CODE CHAR(7),AC_CODE CHAR(10),MANUAL_DISCOUNT BIT )  
	 SET @CSTEP=40	     		 
	 CREATE TABLE #CNDTABLE (CN_ID VARCHAR(22),PRODUCT_CODE VARCHAR(50),QUANTITY NUMERIC(10,3),INVOICE_QUANTITY NUMERIC(10,3)
			  ,RATE NUMERIC (10,2),NET_RATE NUMERIC (14,4),DISCOUNT_PERCENTAGE NUMERIC(6,2), DISCOUNT_AMOUNT NUMERIC (14,4)
			  ,RFNET NUMERIC (10,2),ITEM_TAX_PERCENTAGE NUMERIC(6,2),ITEM_TAX_AMOUNT NUMERIC(12,4),MANUAL_DISCOUNT BIT )  
	 SET @CSTEP=50	     	
	 CREATE TABLE #PAYMODETABLE( PAYMODE_GRP_CODE CHAR(7), PAYMODE_CODE CHAR(7), AMOUNT NUMERIC(10,2)  )  
	 SET @CSTEP=60	     
	 PRINT 'MASTER RECORDS...'
	 SET @DTSQL=N'SELECT CN_ID,MODE,DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT,TOTAL_AMOUNT,ROUND_OFF, 
				 CN_NO,SUBTOTAL,FIN_YEAR,CN_DT,USER_CODE,AC_CODE,MANUAL_DISCOUNT 
				 FROM  '+@CMERGEDB+'CNM01106 (NOLOCK) WHERE CN_ID='''+@CXNID+'''' 
	  
	 INSERT #CNMTABLE
	 EXEC SP_EXECUTESQL @DTSQL 
	 SET @CSTEP=70
	 PRINT 'DETAIL RECORDS...'
	 SET @DTSQL=N'SELECT CN_ID ,PRODUCT_CODE ,QUANTITY ,INVOICE_QUANTITY,RATE ,NET_RATE , DISCOUNT_PERCENTAGE , DISCOUNT_AMOUNT ,RFNET ,  
						ITEM_TAX_PERCENTAGE,ITEM_TAX_AMOUNT, MANUAL_DISCOUNT 
				 FROM  '+@CMERGEDB+'CND01106 (NOLOCK) WHERE CN_ID='''+@CXNID+''''  
	 SET @CSTEP=80
	 INSERT #CNDTABLE
	 EXEC SP_EXECUTESQL @DTSQL 
	 
	 SET @CSTEP=120	
	 PRINT 'VALIDATING LEDGERS...'	
	 IF ISNULL(@CERRORMSG,'')=''
	 BEGIN
		 SET @CSTEP=130	
		 SET @DTSQL=N'IF EXISTS (SELECT TOP 1 ''U'' FROM  '+@CMERGEDB+'CNM01106 A
								LEFT OUTER JOIN  '+@CMERGEDB+'LM01106 B ON A.AC_CODE=B.AC_CODE
								WHERE A.CN_ID='''+@CXNID+''' AND B.AC_CODE IS NULL)
						SET @CERRORMSGOUT=''INVALID LEDGER DETAILS FOUND''
					 ELSE
						SET @CERRORMSGOUT='''''	
		 EXEC SP_EXECUTESQL @DTSQL,N'@CERRORMSGOUT VARCHAR(200) OUTPUT',@CERRORMSGOUT=@CERRORMSG OUTPUT
		 IF ISNULL(@CERRORMSG,'')<>''
			RETURN
	 END
	 
	 PRINT 'VALIDATING SALES PERSON'	
	 IF ISNULL(@CERRORMSG,'')=''
	 BEGIN
		 SET @CSTEP=160	
		 SET @DTSQL=N'IF EXISTS (SELECT TOP 1 CN_ID FROM  '+@CMERGEDB+'CND01106 A
								LEFT OUTER JOIN  '+@CMERGEDB+'EMPLOYEE B ON A.EMP_CODE=B.EMP_CODE
								LEFT OUTER JOIN  '+@CMERGEDB+'EMPLOYEE C ON A.EMP_CODE1=C.EMP_CODE
								LEFT OUTER JOIN  '+@CMERGEDB+'EMPLOYEE D ON A.EMP_CODE2=D.EMP_CODE
								WHERE A.CN_ID='''+@CXNID+''' AND ((A.EMP_CODE IS NOT NULL AND B.EMP_CODE IS NULL) 
								OR (A.EMP_CODE1 IS NOT NULL AND C.EMP_CODE IS NULL) OR (A.EMP_CODE2 IS NOT NULL AND D.EMP_CODE IS NULL))) 
						SET @CERRORMSGOUT=''INVALID SALES PERSON DETAILS FOUND''
					 ELSE
						SET @CERRORMSGOUT='''''	
		 PRINT @DTSQL						
		 EXEC SP_EXECUTESQL @DTSQL,N'@CERRORMSGOUT VARCHAR(200) OUTPUT',@CERRORMSGOUT=@CERRORMSG OUTPUT
		 IF ISNULL(@CERRORMSG,'')<>''
			RETURN
	 END
	 SET @CSTEP=170
	 SELECT @NSUBTOTAL=SUBTOTAL FROM #CNMTABLE  
	 SET @CSTEP=180
	 SELECT @NSUMINDNET=SUM(NET_RATE*INVOICE_QUANTITY) FROM #CNDTABLE
	 SET @CSTEP=190
	 IF ABS(ISNULL(@NSUMINDNET,0)-ISNULL(@NSUBTOTAL,0))>1
	 BEGIN
		SET @CERRORMSG = 'MISMATCH BETWEEN ITEM LEVEL TOTAL AMOUNT & BILL LEVEL SUBTOTAL.....' -- CANNOT SAVE '
		RETURN
	 END	 
	 
END TRY	
BEGIN CATCH
		SET @CERRORMSG = 'P:VALIDATEXN_MIRROR_WSR,STEP: '+@CSTEP+'MESSAGE: '+ERROR_MESSAGE()
		RETURN
END CATCH	
END_PROC:  
END  
--*************************************** END OF PROCEDURE VALIDATEXN_MIRROR_WSR
