create PROCEDURE UPDATEPMT_JWR_WIP  
  @CXNTYPE VARCHAR(10),  
  @CXNNO VARCHAR(40),  
  @CXNID VARCHAR(40),  
  @NREVERTFLAG BIT = 0,  
  @NALLOWNEGSTOCK BIT = 0,  
  @NCHKDELBARCODES BIT = 0,  
  @NUPDATEMODE INT=0,   
  @CCMD NVARCHAR(4000) OUTPUT  
  
  --*** PARAMETERS :  
  --*** @CXNTYPE -		TRANSACTION TYPE (MODULE SPECIFIC)  
  --*** @CXNNO -		TRANSACTION NO ( MEMO NO OF MASTER TABLE )  
  --*** @CXNID -		TRANSACTION ID ( MEMO ID OF MASTER TABLE )  
  --*** @NREVERTFLAG -	A FLAG TO INDICATE WHETHER THIS PROCEDURE IS CALLED TO REVERT STOCK  
  --*** @NALLOWNEGSTOCK - FLAG TO INDICATE WHETHER OR NOT ALLOW NEGATIVE STOCK  
  --*** @NRETVAL - OUTPUT PARAMETER RETURNED BY THIS PROCEDURE (BIT 1-SUCCESS, 0-UNSUCCESS)  
--WITH ENCRYPTION
AS  
BEGIN  
	DECLARE @NOUTFLAG	INT,			@NRETVAL BIT,				@CXNTABLE VARCHAR(50),
			@CEXPR NVARCHAR(500),		@CXNIDPARA	VARCHAR(50),	@BCANCELLED BIT  ,
			@NISSUETYPE BIT,@NISSUEMODE INT

	SET @NRETVAL = 0  
	SET @CCMD = '' 
	PRINT 'UPDATEPMT - 1 '  
	IF @NREVERTFLAG = 1  
		SET @NOUTFLAG = 1  
	ELSE  
		SET @NOUTFLAG = -1  

	     
		INSERT WIP_PMT (PRODUCT_CODE,  QUANTITY_IN_STOCK, DEPT_ID,BIN_ID,LAST_UPDATE,WIP_UID
						,BASE_PRICE,VALUE_ADDITION,JOB_CODE,XN_ROW_ID,
						Article_code,Para1_code,Para2_code,Para3_code,Para4_code,Para5_code,Para6_code)  
		SELECT distinct  B.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ DEPT_ID,B.BIN_ID ,GETDATE() AS LAST_UPDATE
		,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ +CONVERT(VARCHAR(MAX),NEWID()),
		0 BASE_PRICE,0 JOB_RATE,B.JOB_CODE, newid() ROW_ID ,
		jwipmt.Article_code,jwipmt.Para1_code,jwipmt.Para2_code,jwipmt.Para3_code,jwipmt.Para4_code,jwipmt.Para5_code,jwipmt.Para6_code
		FROM JOBWORK_RECEIPT_DET B  
		JOIN JOBWORK_RECEIPT_MST C ON C.RECEIPT_ID=B.RECEIPT_ID  
		JOIN JOBWORK_ISSUE_det  D ON B.REF_ROW_ID =D.ROW_ID
		JOIN JOBWORK_ISSUE_MST  E ON E.issue_id =D.issue_id 
		JOIN WIP_PMT jwiPMT ON JWIPMT.PRODUCT_CODE = d.PRODUCT_CODE 
		LEFT OUTER JOIN WIP_PMT PMT ON PMT.PRODUCT_CODE = B.PRODUCT_CODE 
		AND PMT.DEPT_ID = C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/   AND B.BIN_ID=PMT.BIN_ID 
		WHERE C.WIP=1 AND B.RECEIPT_ID = @CXNID AND PMT.PRODUCT_CODE IS NULL 
		and E.cancelled=0
	    

	   --*** UPDATING THE QUANTITY IN STOCK FROM PMT FOR THE GIVEN MEMO  
		UPDATE A SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )  ,
		             VALUE_ADDITION= isnull(VALUE_ADDITION,0) - ( @NOUTFLAG * B.job_rate ) ,
					 BASE_PRICE= isnull(a.BASE_PRICE,0) - ( @NOUTFLAG * ( B.job_rate+isnull(b.BASE_PRICE,0)) )
		FROM  WIP_PMT A
		JOIN 
		( 
			SELECT B.PRODUCT_CODE, A.Location_code/*A.DEPT_ID*//*Rohit 06-11-2024*/ DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY ,  
			       sum(b.job_rate) as job_rate,
				   pmt.BASE_PRICE
			FROM JOBWORK_RECEIPT_DET B   
			JOIN JOBWORK_RECEIPT_MST A ON A.RECEIPT_ID=B.RECEIPT_ID  
			JOIN JOBWORK_ISSUE_DET C ON C.ROW_ID=B.REF_ROW_ID  
			JOIN JOBWORK_ISSUE_MST D ON D.ISSUE_ID=C.ISSUE_ID  
			JOIN WIP_PMT PMT ON PMT.PRODUCT_CODE = c.PRODUCT_CODE 
			WHERE A.WIP=1 AND B.RECEIPT_ID = @CXNID 
			GROUP BY B.PRODUCT_CODE,A.Location_code/*A.DEPT_ID*//*Rohit 06-11-2024*/   ,B.BIN_ID,  PMT.BASE_PRICE
		) B  ON A.PRODUCT_CODE = B.PRODUCT_CODE   
		AND A.DEPT_ID = B.DEPT_ID  
		AND A.BIN_ID=B.BIN_ID
		--AND B.ROW_ID=A.XN_ROW_ID
		  
	  SET @NRETVAL = 1  --*** SUCCESS  
	  
	  SELECT @BCANCELLED=CANCELLED FROM JOBWORK_RECEIPT_MST WHERE RECEIPT_ID=@CXNID  
	    
	  --*** CHECKING FOR NEGATIVE STOCK  
	  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
	  IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1  
	  BEGIN  
	   IF EXISTS ( SELECT A.PRODUCT_CODE FROM WIP_PMT A JOIN  
		  (SELECT B.PRODUCT_CODE,C.DEPT_ID AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
		  FROM JOBWORK_RECEIPT_DET B  
		  JOIN JOBWORK_RECEIPT_MST C ON C.RECEIPT_ID=B.RECEIPT_ID  
		  WHERE C.WIP=1 AND B.RECEIPT_ID = @CXNID 
		  GROUP BY B.PRODUCT_CODE,C.DEPT_ID  ,B.BIN_ID
		  ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  AND A.BIN_ID=B.BIN_ID
		  WHERE A.QUANTITY_IN_STOCK < 0 )  
	   BEGIN  
		SET @NRETVAL = 0  --*** UNSUCCESS  
		SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK ,''STOCK GOING NEGATIVE'' AS ERRMSG,'''' AS MEMO_ID
		   FROM WIP_PMT A  JOIN  
		  (SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(C.RECEIPT_NO,2)*//*Rohit 06-11-2024*/  AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
		  FROM JOBWORK_RECEIPT_DET B  
		  JOIN JOBWORK_RECEIPT_MST C ON C.RECEIPT_ID=B.RECEIPT_ID  
		  WHERE C.WIP=1 AND B.RECEIPT_ID = '''+@CXNID+'''    
		  GROUP BY B.PRODUCT_CODE,C.Location_code/*LEFT(C.RECEIPT_NO,2)*//*Rohit 06-11-2024*/ ,B.BIN_ID
		  ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  AND A.BIN_ID=B.BIN_ID
		  WHERE A.QUANTITY_IN_STOCK < 0  '  
		  print @CCMD
	   END  
	  END   
 

	  

 END  --  END OF JOB WORK RECEIPT
