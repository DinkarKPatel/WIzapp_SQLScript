CREATE PROCEDURE SAVETRAN_PO--(LocId 3 digit change by Sanjay:06-11-2024)
(
	@NUPDATEMODE		NUMERIC(1,0),
	@NSPID				varchar(40),
	@CMEMONOPREFIX		VARCHAR(50),
	@CFINYEAR			VARCHAR(10),
	@LGENERATEBARCODES	BIT=0,
	@CBARCODEPREFIX		VARCHAR(20)='',
	@NBOXNO				INT=0,
	@CMACHINENAME		VARCHAR(100)='',
	@CWINDOWUSERNAME	VARCHAR(100)='',
	@CWIZAPPUSERCODE	VARCHAR(10)='0000000',
	@CXNMEMOID			VARCHAR(40)='',
	@NAPPROVEMODE		NUMERIC(1,0)=0,
	@CCOMPUTERIP		VARCHAR(20)='',
	@NMODE				NUMERIC(1,0)=1,
	@BTHROUGHIMPORT		BIT=0,
	@EDIT_CLICKED	    BIT=0,
	@NRUNNING_SPID INT=0
)
--WITH ENCRYPTION
AS 
BEGIN
   --DECLARE @EDIT_CLICKED BIT=1
	-- @NUPDATEMODE:	1- NEW PUR ADDED, 
	--					2- NEW BOX ADDED TO EXISTING PUR, 
	--					3- CURRENT PUR CANCELLED, 
	--					4- EXISTING PUR EDITED

	/*UNMERGED:
	MODE IN POM01106 :	3- AGAINST BUYER ORDER		
	*/
	
	if @NUPDATEMODE =2
	   set @EDIT_CLICKED=1
	   
	  DECLARE @COL VARCHAR(MAX)
    IF @EDIT_CLICKED=1
      BEGIN
		SET @COL='IF OBJECT_ID(''TEMPDB..##POM_'+CAST(@NSPID AS VARCHAR(100))+'_'+@CXNMEMOID+''',''U'') IS NOT NULL'+CHAR(13)+' DROP TABLE [##POM_'+CAST(@NSPID AS VARCHAR(100))+'_'+@CXNMEMOID+'];'+CHAR(13)+'SELECT PO_ID OLD_PO_ID, PO_id NEW_PO_ID,'
		SELECT @COL=COALESCE(@COL,'')+FIELD_NAME+' OLD_'+FIELD_NAME+', '+FIELD_NAME+' NEW_'+FIELD_NAME+',' FROM XN_AUDIT_TRIAL_MST (NOLOCK) WHERE TABLE_NAME='POM01106' AND TRIG='UPDATE' ORDER BY ORDER_ID
		SET @COL=LEFT(@COL,LEN(@COL)-1)+CHAR(13)+'INTO [##POM_'+CAST(@NSPID AS VARCHAR(100))+'_'+@CXNMEMOID+']'+CHAR(13)+'FROM pom01106 (NOLOCK) WHERE po_id='''+@CXNMEMOID+''';'
		PRINT @COL
		EXEC(@COL)
		SET @COL='IF OBJECT_ID(''TEMPDB..##POD_'+CAST(@NSPID AS VARCHAR)+'_'+@CXNMEMOID+''',''U'') IS NOT NULL'+CHAR(13)+' DROP TABLE [##POD_'+CAST(@NSPID AS VARCHAR)+'_'+@CXNMEMOID+'];'+CHAR(13)+'SELECT PO_id OLD_PO_id, PO_id NEW_PO_id,'
		SELECT @COL=COALESCE(@COL,'')+FIELD_NAME+' OLD_'+FIELD_NAME+', '+FIELD_NAME+' NEW_'+FIELD_NAME+',' FROM XN_AUDIT_TRIAL_MST (NOLOCK) WHERE TABLE_NAME='POd01106' AND TRIG='UPDATE' ORDER BY ORDER_ID
		SET @COL=LEFT(@COL,LEN(@COL)-1)+CHAR(13)+'INTO [##POD_'+CAST(@NSPID AS VARCHAR(100))+'_'+@CXNMEMOID+']'+CHAR(13)+'FROM pod01106 WITH (NOLOCK) WHERE po_id='''+@CXNMEMOID+''';'
		PRINT @COL
		EXEC(@COL)
	  END
	  


	
	DECLARE @CTEMPDBNAME			VARCHAR(100),
			@CMASTERTABLENAME		VARCHAR(100),
			@CDETAILTABLENAME1		VARCHAR(100),
			@CDETAILTABLENAME2		VARCHAR(100),
			@CDETAILTABLENAME3		VARCHAR(100),
			@CTEMPMASTERTABLENAME	VARCHAR(100),
			@CTEMPDETAILTABLENAME1	VARCHAR(100),
			@CTEMPDETAILTABLENAME2	VARCHAR(100),
			@CTEMPMASTERTABLE		VARCHAR(100),
			@CTEMPDETAILTABLE1		VARCHAR(100),
			@CTEMPDETAILTABLE2		VARCHAR(100),
			@CERRORMSG				VARCHAR(500),
			@LDONOTUPDATESTOCK		BIT,
			@CMEMOPREFIXPROC        VARCHAR(25),
			@CKEYFIELD1				VARCHAR(50),
			@CKEYFIELDVAL1			VARCHAR(50),
			@CMEMONO				VARCHAR(20),
			@NMEMONOLEN				NUMERIC(20,0),
			@CMEMONOVAL				VARCHAR(50),
			@CLOCATIONID			VARCHAR(4),
			@CHODEPTID				VARCHAR(4),
			@CCMD					NVARCHAR(4000),
			@CCMDOUTPUT				NVARCHAR(4000),
			@NSAVETRANLOOP			BIT,
			@cSTEP					varchar(40),
			@LENABLETEMPDATABASE	BIT,
			@NSUBTOTAL NUMERIC(20,2)
			,@CGENBARCODESINPO BIT,@cUpdateStr VARCHAR(4000),@LUPDATEONLY BIT
            ,@CAC_CODE VARCHAR(100),@CENABLEMULTILEVELAPPROVAL VARCHAR(4)
            ,@NLOOPOUTPUT1 BIT,@NEXCLTAX NUMERIC(10,2)
            ,@HSN_CODE VARCHAR(15),@CPARTYSTATECODE VARCHAR(10),@BLOCREGISTER BIT,@DPODT DATETIME,@cMissingRowId VARCHAR(40)
    
	
	DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))

	declare @cStepmsg varchar(40)
	set @cstepmsg='@nUpdatemode='+str(@nUpdatemode)

	SET @cSTEP = 2		-- SETTTING UP ENVIRONMENT
	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,@cStepmsg,1
	
		SET @CTEMPDBNAME = ''

	SET @CMASTERTABLENAME	= 'POM01106'
	SET @CDETAILTABLENAME1	= 'POD01106'
	--SET @CDETAILTABLENAME2	= 'MOH01106'
	SET @CDETAILTABLENAME3	= 'SKU_BO'

	SET @CTEMPMASTERTABLENAME	= 'PO_POM01106_UPLOAD'
	SET @CTEMPDETAILTABLENAME1	= 'PO_POD01106_UPLOAD'
	--SET @CTEMPDETAILTABLENAME2	= 'TEMP_MOH01106_'+LTRIM(RTRIM(STR(@NSPID)))
	SET @CTEMPMASTERTABLE	= @CTEMPDBNAME + @CTEMPMASTERTABLENAME
	SET @CTEMPDETAILTABLE1	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME1
	--SET @CTEMPDETAILTABLE2	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME2
	
	SET @CERRORMSG			= ''
	SET @LDONOTUPDATESTOCK	= 0
	SET @CKEYFIELD1			= 'PO_ID'
	SET @CMEMONO			= 'PO_NO'

	SET @cStep = 80  -- GENERATING NEW KEY  
	EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1
	   
	   
  IF @NUPDATEMODE IN (1,2)
	SELECT @CLOCATIONID =LOCATION_CODE  FROM PO_POM01106_UPLOAD (NOLOCK) WHERE sp_id=@NSPID
  ELSE
    SELECT @CLOCATIONID =LOCATION_CODE  FROM POM01106 (NOLOCK) WHERE po_id=@CXNMEMOID
	
	IF @nUpdatemode IN (1,2)
	BEGIN
	      IF ISNULL(@CLOCATIONID,'')=''
		 BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM((@cSTEP)) + ' LOCATION ID CAN NOT BE BLANK  '  
			GOTO END_PROC    
		 END


	    
		SET @cSTEP = 2.2		-- SETTTING UP ENVIRONMENT
		EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
		
		-- GETTING PO_ID WHICH IS BEING EDITED
		SELECT @CKEYFIELDVAL1 = PO_ID, @CMEMONOVAL = PO_NO,@CBARCODEPREFIX=ISNULL(barcode_prefix,'') 
		FROM po_pom01106_upload (nolock) WHERE SP_ID=LTRIM(RTRIM((@NSPID)))
		IF (@CKEYFIELDVAL1 IS NULL ) OR (@CMEMONOVAL IS NULL )
		BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cSTEP)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'
				-- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'
				  
				GOTO END_PROC  		
		END
	
		SET @cSTEP = 2.4		-- SETTTING UP ENVIRONMENT
		EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1			
		
		EXEC SP3S_VALIDATEXN_BEFORESAVE_PO
		@nSpId=@nSpId,
		@CERRORMSG=@CERRORMSG OUTPUT

		IF ISNULL(@CERRORMSG,'')<>''
			GOTO END_PROC
	END

	SET @cSTEP = 4.8		-- SETTTING UP ENVIRONMENT
	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1			

	SELECT TOP 1 @CHODEPTID		= [VALUE] FROM CONFIG(NOLOCK) WHERE CONFIG_OPTION='HO_LOCATION_ID'		
	
	SELECT TOP 1  @CGENBARCODESINPO= [VALUE] FROM CONFIG(NOLOCK) WHERE CONFIG_OPTION='ASK_FOR_GENERATING_BARCODES_PO' 
	
	SELECT TOP 1 @CENABLEMULTILEVELAPPROVAL=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='ENABLE_MULTI_LEVEL_PO_APPROVAL'
	
	DECLARE @IMAXLEVEL INT
			
	--GETTING THE MAX LEVEL OF APPROVAL FOR PURCHASE TRANSACTION
	SELECT @IMAXLEVEL=MAX(LEVEL_NO) 
	FROM XN_APPROVAL_CHECKLIST_LEVELS 
	WHERE XN_TYPE='PO' AND INACTIVE=0
			
	SET @IMAXLEVEL=ISNULL(@IMAXLEVEL,0)
		
	
BEGIN TRY
		
	BEGIN TRANSACTION
	
	IF @NUPDATEMODE<>1
	BEGIN
		IF @NUPDATEMODE=2
			SELECT TOP 1 @CXNMEMOID=po_id FROM  po_pom01106_UPLOAD (NOLOCK) WHERE sp_id=@nSpId
		
	END

	SET @cSTEP = 6		-- SETTTING UP ENVIRONMENT
	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

	
		
	IF @NUPDATEMODE=4
		GOTO LBLAPPROVEPO

		
	IF @BTHROUGHIMPORT=1   
	BEGIN  
		SET @cSTEP = 8  
		EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

		SET @CCMD=N'SELECT @CAC_CODE=AC_CODE FROM '+@CTEMPMASTERTABLE +'(NOLOCK) WHERE SP_ID='''+LTRIM(RTRIM((@NSPID)))+''' ' 
		EXEC SP_EXECUTESQL @CCMD,N'@CAC_CODE VARCHAR(100) OUTPUT',@CAC_CODE OUTPUT

		SET @cSTEP = 8.5  
		EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1		
		--as discuss with sanjiv sir 
     --	UPDATE  #TMPMASTERSENC SET CODING_SCHEME=1 where isnull(product_code,'')<>''

	    EXEC SP_GETMASTERS   
	   @cFinyear='01112',  
	   @nFileFormat=2,  
	   @CERRORMSG=@CERRORMSG OUTPUT,  
	   @CAC_CODE=@CAC_CODE,  
	   @NIMPORTFROM=1,  
	   @cdept_id=@cLocationId,  
	   @nSpId=@nSpId,  
	   @cSrcUploadTable='po_pod01106_UPLOAD'

		PRINT 'COME OUT OF IMPORTMASTERS'     
		IF ISNULL(@CERRORMSG,'')<>''  
		GOTO END_PROC  


		EXEC SP3S_VALIDATE_PARAS @CERRORMSG=@CERRORMSG OUTPUT

		IF ISNULL(@CERRORMSG,'')<>''  
		GOTO END_PROC  

		 if isnull(@NRUNNING_SPID,0)=0
           set @NRUNNING_SPID=@@SPID 

		DECLARE @CattrMASTERTABLE VARCHAR(100)

	   SET @CATTRMASTERTABLE='TEMP_EXCEL_IMPORT_'+rtrim(ltrim((str(@NRUNNING_SPID))))
	   IF EXISTS (SELECT TOP 1 'U' FROM INFORMATION_SCHEMA .COLUMNS WHERE TABLE_NAME  =@CATTRMASTERTABLE AND  COLUMN_NAME LIKE 'ATTR%KEY_NAME') 
	   EXEC SP_GETMASTERS_ATTR_NEW @CFINYEAR,@CATTRMASTERTABLE,@CERRORMSG OUTPUT  ,@cLocationId
  
  
   IF ISNULL(@CERRORMSG,'')<>''  
	GOTO END_PROC  
   


        SET @cSTEP = 10  
		EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

		SET @CCMD=N'UPDATE A SET ARTICLE_CODE=ART.ARTICLE_CODE,PARA1_CODE=ISNULL(C.PARA1_CODE,''0000000''),  
					PARA2_CODE=ISNULL(D.PARA2_CODE,''0000000''),PARA3_CODE=ISNULL(E.PARA3_CODE,''0000000''),  
					PARA4_CODE=ISNULL(F.PARA4_CODE,''0000000''),PARA5_CODE=ISNULL(G.PARA5_CODE,''0000000''),  
					PARA6_CODE=ISNULL(H.PARA6_CODE,''0000000'') ,FORM_ID=ISNULL(I.FORM_ID,''0000000'')
					FROM  '+@CTEMPDBNAME+@CTEMPDETAILTABLENAME1+' A WITH (ROWLOCK) 
					JOIN #TMPMASTERSENC B ON A.ROW_ID=B.ROW_ID  
					JOIN ARTICLE ART(NOLOCK) ON ART.ARTICLE_NO = B.ARTICLE_NO    
					LEFT OUTER JOIN PARA1 C(NOLOCK) ON C.PARA1_NAME = B.PARA1_NAME  AND ISNULL(C.INACTIVE,0)=0  
					LEFT OUTER JOIN PARA2 D(NOLOCK) ON D.PARA2_NAME = B.PARA2_NAME  AND ISNULL(D.INACTIVE,0)=0  
					LEFT OUTER JOIN PARA3 E(NOLOCK) ON E.PARA3_NAME = B.PARA3_NAME  AND ISNULL(E.INACTIVE,0)=0 
					LEFT OUTER JOIN PARA4 F(NOLOCK) ON F.PARA4_NAME = B.PARA4_NAME  AND ISNULL(F.INACTIVE,0)=0 
					LEFT OUTER JOIN PARA5 G(NOLOCK) ON G.PARA5_NAME = B.PARA5_NAME  AND ISNULL(G.INACTIVE,0)=0
					LEFT OUTER JOIN PARA6 H(NOLOCK) ON H.PARA6_NAME = B.PARA6_NAME  AND ISNULL(H.INACTIVE,0)=0
					LEFT OUTER JOIN FORM I(NOLOCK) ON I.FORM_NAME = B.FORM_NAME '      
		PRINT @CCMD        
		EXEC SP_EXECUTESQL @CCMD     
		
		DROP TABLE #TMPMASTERSENC  
	END   

	 IF @NUPDATEMODE<>3
	  BEGIN

	       IF EXISTS(SELECT TOP 1'U' FROM PO_POD01106_UPLOAD A (NOLOCK)
			JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE =B.ARTICLE_CODE 
			WHERE SP_ID=@NSPID
			AND A.PRODUCT_CODE <>'' AND B.CODING_SCHEME =1 AND ISNULL(B.GEN_EAN_CODES,0)=0	
			)
			begin

			   ;WITH CTE AS
			  (
				   SELECT 
						 C.ROW_ID,a.product_code,PO_DT,A.PO_ID,
						   a.para3_code,a.para4_code,a.para5_code,a.para6_code,
						   SRNO =ROW_NUMBER() OVER (PARTITION BY A.article_code,A.para1_code,A.para2_code ORDER BY B.PO_DT DESC ,B.PO_ID DESC)
				   FROM POD01106 A (NOLOCK)
				   JOIN POM01106 B (NOLOCK) ON A.PO_ID =B.PO_ID 
				   JOIN PO_POD01106_UPLOAD C (NOLOCK) ON A.ARTICLE_CODE =C.ARTICLE_CODE AND A.PARA1_CODE =C.PARA1_CODE AND A.PARA2_CODE=C.PARA2_CODE
				   WHERE B.CANCELLED =0 AND A.PRODUCT_CODE <>'' AND C.product_code=''
				   AND A.product_code <>'' AND C.SP_ID=@nSpId
				)

				SELECT * Into #tmppod FROM CTE WHERE SRNO=1

		     
				UPDATE A SET PRODUCT_CODE=tmp.PRODUCT_CODE ,
							para3_code= tmp.para3_code,
							para4_code=tmp.para4_code,
							para5_code=tmp.para5_code,
							para6_code=tmp.para6_code
						
				FROM PO_POD01106_UPLOAD A (NOLOCK)
				join #tmppod tmp on tmp.row_id =a.row_id 
				JOIN ARTICLE C (NOLOCK) ON A.ARTICLE_CODE=C.ARTICLE_CODE
				WHERE isnull(A.PRODUCT_CODE,'') =''  
				AND C.CODING_SCHEME=1 AND ISNULL(C.GEN_EAN_CODES,0)=0 and tmp.SRNO=1

		 end
	    END


	IF EXISTS (SELECT TOP 1 po_id FROM PO_POD01106_UPLOAD (NOLOCK) WHERE SP_ID=@nSpId AND article_code='')
			DELETE FROM PO_POD01106_UPLOAD WITH (ROWLOCK) WHERE SP_ID=@nSpId AND article_code=''
	
	DECLARE  @PONMODE INT
	IF @NUPDATEMODE =1
	  SELECT TOP 1 @PONMODE=MODE FROM PO_POM01106_UPLOAD (NOLOCK) WHERE SP_ID=@nSpId
	ELSE 
	   SELECT TOP 1 @PONMODE=MODE FROM pom01106 (NOLOCK) WHERE PO_ID=@CXNMEMOID

	   select * into #tmpPurchaseOrderProcessingnew
	   from PurchaseOrderProcessingnew (nolock) where 1=2
	
	IF @NUPDATEMODE = 3			
	BEGIN
		SET @cSTEP = 12  
		EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
			
		IF @CXNMEMOID=''
		BEGIN
			SET @CERRORMSG='MEMO ID REQUIRED FOR CANCELLATION........CANNOT PROCEED'
			GOTO END_PROC
		END
			
		-- UPDATING SENTTOHO FLAG 
		--CHNAGE BY BAIJNATH PO_FOR_DEPT_ID
		SET @CCMD = N' UPDATE ' + @CMASTERTABLENAME + ' SET CANCELLED = 1,SENT_TO_HO=0,LAST_UPDATE=GETDATE() 
								, PO_FOR_DEPT_ID=(CASE WHEN ISNULL(PO_FOR_DEPT_ID,'''')='''' THEN location_code ELSE PO_FOR_DEPT_ID END ) ' + 
					N' WHERE ' + @CKEYFIELD1 + ' = ''' + @CXNMEMOID + ''''
		EXEC SP_EXECUTESQL @CCMD

		SET @cSTEP = 15  
		EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1			
		--14 Dec 2018 : Audit
		EXEC SP3S_CAPTURE_AUDIT_TRAIL 'PO',@CXNMEMOID,@CTEMPMASTERTABLE,@CTEMPDETAILTABLE1,@NSPID,@CMACHINENAME,@CWINDOWUSERNAME,@CWIZAPPUSERCODE,1,'1900-01-01',@EDIT_CLICKED
			
		SET @CKEYFIELDVAL1=@CXNMEMOID

		
		EXEC Sp3s_PurchaseOrderProcessing
			@nUpdateMode=@nUpdateMode,
			@cmemoid=@CKEYFIELDVAL1,
			@PurchasrOrderXnType='PurchaseOrder',
			@CERRORMSG=@CERRORMSG output 
			
		GOTO END_PROC
	END
		
	SET @cSTEP = 25  
	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
		
	SET @cSTEP = 30  
	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
		
	IF @CGENBARCODESINPO<>'1'
		SET @LGENERATEBARCODES=0
		
	-- START UPDATING XN TABLES	
	IF @NUPDATEMODE = 1 -- ADDMODE	
	BEGIN
		SET @cSTEP = 35  
		EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

		EXEC SAVETRAN_GETMEMOPREFIX
		@CXNTYPE='PO',
		@CUSERCODE=@CWIZAPPUSERCODE,
		@CFINYEAR=@CFINYEAR,
		@CSOURCELOCID=@CLOCATIONID,
		@CTARGETLOCID='',
		@CMANUALPREFIX=@CMEMONOPREFIX,
		@NSPID=@NSPID,
		@CMEMOPREFIX=@CMEMOPREFIXPROC OUTPUT,
		@CERRORMSG=@CERRORMSG OUTPUT

		IF ISNULL(@cErrormsg,'')<>''
			GOTO END_PROC
		SET @NMEMONOLEN	= LEN(@CMEMOPREFIXPROC)+6
		SET @CMEMONOPREFIX=@CMEMOPREFIXPROC
			
		IF LEFT(LTRIM(RTRIM(ISNULL(@CKEYFIELDVAL1,'LATER'))),5) = 'LATER'
		BEGIN
			-- GENERATING NEW MRR_NO		
			SET @NSAVETRANLOOP=0
			WHILE @NSAVETRANLOOP=0
			BEGIN
				SET @cSTEP = 40  
				EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
				EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,
								@CFINYEAR,0, @CMEMONOVAL OUTPUT
									
							
				SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+' (nolock) 
										WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' 
										AND FIN_YEAR = '''+@CFINYEAR+''' )
								SET @NLOOPOUTPUT=0
							ELSE
								SET @NLOOPOUTPUT=1'
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
			END

			IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
			BEGIN
					SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cSTEP)) + ' ERROR CREATING NEXT MEMO NO....'	
					-- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'
					GOTO END_PROC  		
			END

			SET @cSTEP = 45		-- GENERATING NEW ID

			EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

			-- GENERATING NEW PO ID
			SET @CKEYFIELDVAL1 = @CLOCATIONID + RIGHT(@CFINYEAR,2)+isnull(REPLICATE('0', (22-LEN(@CLOCATIONID + RIGHT(@CFINYEAR,2)))-LEN(LTRIM(RTRIM(@CMEMONOVAL)))),'')  + LTRIM(RTRIM(@CMEMONOVAL))
			
			IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
			BEGIN
					SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
					GOTO END_PROC
			END
				
			SET @cSTEP = 50		-- UPDATING NEW ID INTO TEMP TABLES
					EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
			-- UPDATING NEWLY GENERATED PO NO AND PO ID IN POM AND POD TEMP TABLES
			SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' WITH (ROWLOCK) SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' + 
						@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' where  SP_ID='''+LTRIM(RTRIM((@NSPID)))+''''
			EXEC SP_EXECUTESQL @CCMD

			SET @cSTEP = 55  
			EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1			
			SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE1 + ' WITH (ROWLOCK) SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' where SP_ID='''+LTRIM(RTRIM((@NSPID)))+''''
			EXEC SP_EXECUTESQL @CCMD

		END

	END					-- END OF ADDMODE
	ELSE				-- CALLED FROM EDITMODE
	BEGIN				-- START OF EDITMODE
		

		SET @cSTEP = 65		-- UPDATING Last_update TEMP TABLE

		EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
			
		-- UPDATING SENTTOHO FLAG
		SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' WITH (ROWLOCK) SET LAST_UPDATE=GETDATE()  WHERE SP_ID='''+LTRIM(RTRIM((@NSPID)))+''''
		EXEC SP_EXECUTESQL @CCMD

	
	    UPDATE A SET PO_ID=@CXNMEMOID FROM PO_POD01106_UPLOAD A (NOLOCK) WHERE PO_ID IN('','LATER') AND SP_ID=@NSPID

		
      
				
	END					-- END OF EDITMODE


	
	SET @cSTEP = 65.2		-- UPDATING TRANSACTION TABLE
	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1


	SET @cSTEP = 65.4		-- UPDATING TRANSACTION TABLE
	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

	--UPDATE PO_POD01106_UPLOAD SET  MD_PERCENTAGE= CASE WHEN MRP=0 THEN 0 ELSE  ROUND(((MRP-PURCHASE_PRICE)/MRP)*100,2) END ,
	--MP_PERCENTAGE=CASE WHEN PURCHASE_PRICE=0 THEN 0 ELSE  ROUND(((MRP-PURCHASE_PRICE)/PURCHASE_PRICE)*100,2) END 
	--WHERE SP_ID= @NSPID   

	--UPDATE A SET  
	--CALC_MP_PERCENTAGE=CASE WHEN ISNULL(B.GST_PERCENTAGE_ADDED,0)=0 OR A.PURCHASE_PRICE=0 THEN A.MP_PERCENTAGE ELSE  ROUND(((MRP-PURCHASE_PRICE)/PURCHASE_PRICE)*100,2) END 
	--FROM PO_POD01106_UPLOAD A
	--JOIN PO_POM01106_UPLOAD  B ON B.SP_ID=A.SP_ID
	--WHERE A.SP_ID= @NSPID
	--	MD_PERCENTAGE=CASE MRP WHEN 0 THEN 0 ELSE ROUND(((MRP-PURCHASE_PRICE)/MRP)*100,2) END,
	--MP_PERCENTAGE=CASE PURCHASE_PRICE WHEN 0 THEN 0 ELSE ROUND(((MRP-PURCHASE_PRICE)/PURCHASE_PRICE)*100,2) END

	SET @cSTEP = 66.4		-- GETTING ID INFO FROM TEMP TABLE
	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

	EXEC SP3S_CALTOTALS_PO
	@nUpdatemode=@NUPDATEMODE,
	@nSpId=@NSPID,
	@CERRORMSG=@CERRORMSG OUTPUT,
	@CLOCID=@cLocationId

	
	IF ISNULL(@CERRORMSG,'')<>''
		GOTO END_PROC

	
	-- UPDATING TRANSACTION TABLE (PID01106) FROM TEMP TABLE
	SET @cSTEP = 80		-- UPDATING TRANSACTION TABLE

	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
		-- UPDATING ROW_ID IN TEMP TABLES
	SET @CCMD = N'UPDATE a SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(40), NEWID())
			        from ' + @CTEMPDETAILTABLE1 + ' a (nolock)
					WHERE SP_ID='''+LTRIM(RTRIM((@NSPID)))+''' AND LEFT(ROW_ID,5) = ''LATER'' '
	EXEC SP_EXECUTESQL @CCMD
			
	SET @cSTEP = 80.2		-- UPDATING TRANSACTION TABLE

	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
			
	-- GENERATING BARCODES
	IF @LGENERATEBARCODES = 1
	BEGIN
		PRINT 'GENERATING BARCODES'
			
		SET @cSTEP=66.6
		EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

		EXEC SAVETRAN_GENBARCODES_PO
			  @nSpId		= @nSpId
			, @CPREFIX		= @CBARCODEPREFIX
			, @NMODE		= 3	
			, @LOCID		= @CLOCATIONID	
			, @CERRORMSG	= @CERRORMSG OUTPUT		
		
		
		IF ISNULL(@CERRORMSG,'')<>''
			GOTO END_PROC
		
		--select 'check genbarcode_rows',* from GENBARCODE_ROWS where sp_id=@nSpId

		SET @cSTEP=66.8
		EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
		-- CHECK WHETHER BARCODE HAS SUCCESSFULLY GENERATED OR NOT
		IF EXISTS ( SELECT TOP 1 A.PRODUCT_CODE FROM PO_POD01106_UPLOAD  A(NOLOCK) JOIN ARTICLE B(NOLOCK) ON A.ARTICLE_CODE=B.ARTICLE_CODE
					WHERE sP_ID = @nSpId AND PRODUCT_CODE = '')
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cSTEP)) + ' ERROR GENERATING NEW BARCODES....'
			-- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'
			GOTO END_PROC
		END
			
	END

	--changes for para7 Code Generate on the basis of 
		   IF EXISTS (SELECT TOP 1 'U' FROM INV_SKU_COL_LIST A  (NOLOCK) WHERE FOR_SKU=1 )
			BEGIN
			   
				   EXEC SP3S_INSERT_PARA7 
						@CXNTYPE='PO',
						@CSP_ID=@NSPID,
						@CLOCID=@CLOCATIONID,
						@CERRORMSG=@CERRORMSG OUTPUT 
				   
				   IF ISNULL(@CERRORMSG,'')<>''
				       GOTO END_PROC

			END
		

			
	if @NUPDATEMODE=2
	begin
		-- DELETING EXISTING ENTRIES FROM PID01106 TABLE WHERE ROW_ID NOT FOUND IN TEMPTABLE
		SET @cSTEP = 84.5		-- UPDATING TRANSACTION TABLE - DELETING EXISTING ENTRIES
		EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

		SELECT TOP 1 @cMissingRowId=a.row_id FROM pod01106 A (NOLOCK) 
		LEFT JOIN 
		(SELECT row_id FROM PO_pod01106_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId) b
			ON A.row_ID =B.row_ID WHERE A.po_id =@CKEYFIELDVAL1 AND b.row_id IS NULL

		IF ISNULL(@cMissingRowId,'')<>''
		BEGIN		
			SET @CSTEP=85.5
			EXEC SP_CHKXNSAVELOG 'WSL',@CSTEP,0,@CKEYFIELDVAL1,'',1
			
			DELETE A FROM pod01106 A (NOLOCK) LEFT JOIN 
			(SELECT row_id FROM PO_pod01106_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId) b
			ON A.row_ID =B.row_ID WHERE A.po_id =@CKEYFIELDVAL1 AND b.row_id IS NULL

		END
	
		-- UPDATING MASTER TABLE (PIM01106) FROM TEMP TABLE
		SET @cSTEP = 73		-- GETTING ID INFO FROM TEMP TABLE
		EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
		
		IF EXISTS (SELECT TOP 1 tablename FROM savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nSPID)
			DELETE FROM savetran_updcols_updatestr WITH (ROWLOCK) WHERE sp_id=@nSPID

		INSERT savetran_updcols_updatestr (sp_id,tablename,updatestr)
		SELECT @nSPID as sp_id,tablename,'' from mirrorxnsinfo (NOLOCK)
		WHERE tablename IN ('pom01106','POd01106')

		SET @cSTEP = 75		-- GETTING ID INFO FROM TEMP TABLE
		EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
		
		EXEC SP3S_VERIFY_PODATA_CHANGES
		@cMemoId=@cKeyFieldval1,
		@nSpId=@nSpId,
		@bCalledFromSavetran=1

	

		

	END

	SET @cSTEP = 75.2		-- GETTING ID INFO FROM TEMP TABLE
	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

	DECLARE @LINSERTONLY BIT,@lUpdatexns bIt 
	SET @LINSERTONLY=0
	SET @lUpdatexns=0
	if  @NUPDATEMODE=1
		SELECT @LINSERTONLY=1,@lUpdatexns=1

	DECLARE @CWHERECLAUSE VARCHAR(1000)
    SET @CWHERECLAUSE = ' SP_ID='''+LTRIM(RTRIM((@NSPID)))+''''

	SET @cSTEP = 75.4		-- GETTING ID INFO FROM TEMP TABLE
	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

	SELECT @LUPDATEONLY=0,@cUpdatestr=''

	IF @NUPDATEMODE=2
	BEGIN
		SELECT @cUpdatestr=updatestr FROM savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@NSPID AND tablename='pom01106'
		SET @LUPDATEONLY = 1
	END

	SET @cSTEP = 76.2		-- GETTING ID INFO FROM TEMP TABLE
	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
	print 'Start inserting pom01106'
	EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN 
		  @CSOURCEDB	= @CTEMPDBNAME
		, @CSOURCETABLE = @CTEMPMASTERTABLENAME
		, @CDESTDB		= ''
		, @CDESTTABLE	= @CMASTERTABLENAME
		, @CKEYFIELD1	= @CKEYFIELD1
		, @BALWAYSUPDATE = 1
		,@LINSERTONLY=@LINSERTONLY
		,@CFILTERCONDITION=@CWHERECLAUSE
		,@lUpdatexns=@lUpdatexns
		,@LUPDATEONLY=@LUPDATEONLY
		,@cUpdatestrPara=@cUpdatestr
		,@bThruUpdatestrPara=1 
			


	-- INSERTING/UPDATING THE ENTRIES IN PID01106 TABLE FROM TEMPTABLE
	SET @cSTEP = 100		-- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES

	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

	IF @LGENERATEBARCODES=0
	BEGIN
		SET @cSTEP = 177
		EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

		INSERT SKU ( PRODUCT_CODE, ARTICLE_CODE, PARA1_CODE, PARA2_CODE, PARA3_CODE,PARA4_CODE, PARA5_CODE, PARA6_CODE,
						PURCHASE_PRICE, MRP,  LAST_UPDATE,INV_NO,INV_DT, RECEIPT_DT, AC_CODE,FORM_ID,WS_PRICE,BARCODE_CODING_SCHEME,purchaseLocId,FIX_MRP ,hsn_code  )
						
		SELECT DISTINCT A.PRODUCT_CODE, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, A.PARA3_CODE, A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE,
					A.PURCHASE_PRICE, A.MRP,  GETDATE() AS LAST_UPDATE, 
					'' AS INV_NO,'' AS INV_DT,'' AS RECEIPT_DT, B.AC_CODE, 
					A.FORM_ID,A.WHOLESALE_PRICE,C.CODING_SCHEME,@CLOCATIONID as purchaseLocId,a.Fix_mrp,
				  ( case when ISNULL(a.hsn_code,'') not  in ('','0000000000') then	a.hsn_code else c.HSN_CODE end ) as Hsn_code
		FROM PO_POD01106_UPLOAD A(NOLOCK)
		JOIN PO_POM01106_UPLOAD B(NOLOCK) ON A.SP_ID = B.SP_ID
		JOIN ARTICLE C(NOLOCK) ON A.ARTICLE_CODE = C.ARTICLE_CODE
		LEFT OUTER JOIN SKU D(NOLOCK) ON A.PRODUCT_CODE = D.PRODUCT_CODE
		WHERE B.SP_ID = @nSpId
		AND   D.PRODUCT_CODE IS NULL AND ISNULL(A.PRODUCT_CODE,'')<>''
		
	  INSERT SKU_OH( PRODUCT_CODE, DISCOUNT_AMOUNT, TAX_AMOUNT, FREIGHT, OTHER_CHARGES, ROUND_OFF, VALUE_ADD,EXCISE_DUTY_AMOUNT )    
		   SELECT DISTINCT a.PRODUCT_CODE,0 AS  DISCOUNT_AMOUNT, 0 AS TAX_AMOUNT,0 AS  FREIGHT,
		   0 AS OTHER_CHARGES, 0 AS ROUND_OFF,0 AS  VALUE_ADD,0 AS  EXCISE_DUTY_AMOUNT  
	 FROM PO_POD01106_UPLOAD  a 
	 left join  sku_oh b (NOLOCK) ON a.product_code=b.product_CODE
	 WHERE a.SP_ID = @nSpId  AND ISNULL(A.PRODUCT_CODE,'')<>'' and   b.product_code IS NULL
	


			
	END


	SET @cSTEP = 177.2
	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

	INSERT LOCSKUSP	( PRODUCT_CODE, DEPT_ID, MRP, WS_PRICE, SENT_TO_LOCATION )  
	SELECT DISTINCT PD.PRODUCT_CODE
			,PM.DEPT_ID
			,PD.MRP
			,PD.WHOLESALE_PRICE
			,1			  	  
	FROM PO_POM01106_UPLOAD PM(NOLOCK)
	JOIN PO_POD01106_UPLOAD PD(NOLOCK) ON PM.PO_ID=PD.PO_ID
	JOIN ARTICLE A(NOLOCK) ON PD.ARTICLE_CODE=A.ARTICLE_CODE
	JOIN SKU(NOLOCK) ON SKU.PRODUCT_CODE=PD.PRODUCT_CODE
	LEFT JOIN LOCSKUSP LSP(NOLOCK) ON PD.PRODUCT_CODE=LSP.PRODUCT_CODE AND PM.DEPT_ID=LSP.DEPT_ID
	WHERE PM.SP_ID=@nSpId AND PM.MODE=2 AND ISNULL(PD.MRP,0)<>ISNULL(LSP.MRP,0) AND ISNULL(PD.WHOLESALE_PRICE,0)<>ISNULL(LSP.WS_PRICE,0)
	AND A.CODING_SCHEME=1

	SET @cSTEP = 177.4
	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

	IF @NUPDATEMODE=2				
		EXEC SAVETRAN_PO_UPDSKU	@NUPDATEMODE,@nSpId


	   
	SET @cSTEP = 177.6
	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

	SElect @LUPDATEONLY=0,@cUpdatestr=''
	IF @NUPDATEMODE=2
	BEGIN
		SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@NSPID AND  tablename='pod01106'
		
		SELECT TOP 1 @cMissingRowId=b.row_id FROM 
		(SELECT row_id  FROM PO_POD01106_UPLOAD (NOLOCK) WHERE SP_id=(LEFT(@nSpId,38)+LEFT(@CKEYFIELDVAL1,2))) A
		RIGHT OUTER JOIN 
		(SELECT row_id FROM PO_POD01106_UPLOAD (NOLOCK) WHERE SP_id=@nSPId) b ON 
		a.row_id=b.row_id WHERE a.row_id IS NULL

		--if @@spid=173
		--	SELECT 'check @cMissingRowId of pod',@cMissingRowId

		IF ISNULL(@cMissingRowId,'')='' 
			SET @lUpdateonly=1
	END

	SET @cSTEP = 177.8
	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

	
	print 'Start inserting pod01106'

	EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN 
		  @CSOURCEDB	= @CTEMPDBNAME
		, @CSOURCETABLE = @CTEMPDETAILTABLENAME1
		, @CDESTDB		= ''
		, @CDESTTABLE	= @CDETAILTABLENAME1
		, @CKEYFIELD1	= 'ROW_ID'
		, @BALWAYSUPDATE = 1
		, @LINSERTONLY=@LINSERTONLY
		, @CFILTERCONDITION=@CWHERECLAUSE
		, @lUpdatexns=@lUpdatexns
		, @LUPDATEONLY=@LUPDATEONLY
		,@cUpdatestrPara=@cUpdatestr
		,@bThruUpdatestrPara=1 

	    if @NUPDATEMODE in(1,2)
			begin


			INSERT INTO #tmpPurchaseOrderProcessingnew(XnType,RowId ,RefRowId ,Qty  )
			 SELECT 'PurchaseOrder' XnType ,b.row_id  RowId ,b.row_id  RefRowId ,
			 b.quantity +
			 CEILING((ISNULL(b.INVOICE_QUANTITY,0) * ISNULL(b.tolerance_percentage,0))/100)
			FROM pom01106 A (nolock)
			JOIN pod01106  B (nolock) ON A.po_id =B.po_id 
			WHERE A.po_id =@CKEYFIELDVAL1
		

			EXEC Sp3s_PurchaseOrderProcessing
				@nUpdateMode=@nUpdateMode,
				@cmemoid=@CKEYFIELDVAL1,
				@PurchasrOrderXnType='PurchaseOrder',
				@CERRORMSG=@CERRORMSG output 
			
      		if isnull(@CERRORMSG,'')<>''
			 goto END_PROC

			
	 End


		--EXEC VALIDATEXN_CHECKSUM
		--     @CXNID=@CKEYFIELDVAL1,
  --           @CSPID=@NSPID,
  --           @CKEYFIELNAME='PO_ID',
  --           @CCMD= @CERRORMSG OUTPUT		
		
		
		IF ISNULL(@CERRORMSG,'')<>''
			GOTO END_PROC

	

		declare @CWHEREVALIDATEXN VARCHAR(100)
		SET @CWHEREVALIDATEXN=' AND '+@CWHERECLAUSE
			
		  EXEC SP3S_VALIDATEXN_ITEMTYPE
			@CTEMPMASTERTABLE='PO_POM01106_upload',
			@CTEMPDETAILTABLE='PO_POd01106_upload',
			@CWHERECLAUSE=@CWHEREVALIDATEXN,
			@CERRORMSG=@CERRORMSG OUTPUT


			IF ISNULL(@CERRORMSG,'')<>''
				GOTO END_PROC


		--if change supplier in po ac_code auto change in pim & sku if Purchase is available changes according to ved ji (mbkb) 20-10-2021
	IF @PONMODE<>1
	begin
		  SELECT B.PRODUCT_CODE ,POM.AC_CODE,C.MRR_ID
		  INTO #TMPACCODECHANGE
		  FROM PO_POD01106_UPLOAD A (NOLOCK)
		  JOIN PO_POM01106_UPLOAD POM (NOLOCK) ON A.SP_ID =POM.SP_ID 
		  JOIN PID01106 B  (NOLOCK)   ON A.ROW_ID =B.PO_ROW_ID 
		  JOIN PIM01106 C (NOLOCK) ON B.MRR_ID =C.MRR_ID 
		  WHERE A.SP_ID=@NSPID AND C.CANCELLED =0
		  AND POM.AC_CODE <>C.AC_CODE and a.row_id <>''

		  if exists (select top 1 'u' from #TMPACCODECHANGE)
		  begin
		        

				UPDATE A SET AC_CODE =B.AC_CODE 
				FROM PIM01106  A (NOLOCK)
				JOIN #TMPACCODECHANGE B ON A.MRR_ID =B.MRR_ID 

				UPDATE A SET AC_CODE =B.AC_CODE 
				FROM SKU (NOLOCK) A
				JOIN #TMPACCODECHANGE B ON A.PRODUCT_CODE =B.PRODUCT_CODE 

		  end


    end
		
	
	GOTO END_PROC

LBLAPPROVEPO:


	SET @cSTEP=265
	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
	IF @CXNMEMOID=''
	BEGIN
		SET @CERRORMSG='MEMO ID REQUIRED FOR APPROVAL......CANNOT PROCEED'
		GOTO END_PROC
	END
		
	IF @IMAXLEVEL>0
	BEGIN
		SET @CERRORMSG='YOU CAN''T APPORVED PO FROM HERE,PLZ APPROVED FROM TRANSCATION APPROVEL PAGE'
		GOTO END_PROC
	END
	

	SET @cSTEP=270
	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
	DECLARE @NAPPROVALSTATUS NUMERIC(1,0)
		
		-- direct approval Removed from po
		
	--IF ISNULL(@CENABLEMULTILEVELAPPROVAL,'')<>'1'		
	--BEGIN
	--	IF @CLOCATIONID<>@CHODEPTID
	--	BEGIN
	--		SELECT @NAPPROVALSTATUS=APPROVED FROM POM01106 (NOLOCK) WHERE PO_ID=@CXNMEMOID
				
			
				
	--		IF @NAPPROVALSTATUS<>0
	--			BEGIN
					
	--				SET @cSTEP=275
	--				EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
	--				IF @NAPPROVALSTATUS=1
	--					UPDATE POM01106 SET  LAST_UPDATE=GETDATE() WHERE PO_ID=@CXNMEMOID
	--				ELSE 
	--					SET @CERRORMSG='PURCHASE ORDER IS ALREADY '+(CASE WHEN @NAPPROVALSTATUS=1 THEN ' MARKED FOR REQUEST OF APPROVAL FROM HO ' 
	--								WHEN @NAPPROVALSTATUS=2 THEN 'APPROVED BY HO' ELSE 'DISAPPROVED BY HO' END)
	--			END
	--		ELSE
	--			BEGIN
					
	--				SET @cSTEP=280
	--				EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
					
	--				UPDATE POM01106 SET  APPROVED=(CASE WHEN @NAPPROVEMODE=2 THEN 1 ELSE APPROVED END),LAST_UPDATE=GETDATE()
	--					WHERE PO_ID=@CXNMEMOID --CHANGES BY DINKAR 1.8.2015
	--				--UPDATE POM01106 SET  LAST_UPDATE=GETDATE() WHERE PO_ID=@CXNMEMOID
	--			END
						
			
	--	END	
	-- 	ELSE
	-- 	BEGIN

	--		SET @cSTEP=285
	--		EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
				
	--		UPDATE POM01106 SET  APPROVED=(CASE WHEN @NAPPROVEMODE=1 THEN 2 ELSE 3 END),LAST_UPDATE=GETDATE()

	--		WHERE PO_ID=@CXNMEMOID
				
				
	--		SET @cSTEP = 290
	--		EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1				
		
	--		INSERT XN_APPROVAL_DET	( XN_TYPE, XN_ID, APPROVED_BY_USER_CODE, APPROVED_ON, APPROVED_BY_USER_IP,
	--			APPROVED_BY_USER_COMPUTERNAME,APPROVED_BY_WINDOWUSER_NAME,APPROVED )  
				 
	--			SELECT 'XNSPO' AS XN_TYPE,@CXNMEMOID AS XN_ID,
	--			@CWIZAPPUSERCODE AS APPROVED_BY_USER_CODE,GETDATE() AS APPROVED_ON,
	--			@CCOMPUTERIP AS APPROVED_BY_USER_IP,@CMACHINENAME AS APPROVED_BY_USER_COMPUTERNAME,
	--			@CWINDOWUSERNAME AS APPROVED_BY_WINDOWUSER_NAME,@NAPPROVEMODE AS APPROVED
				 
	--	END
	--END
				
				
						
 	SET @CKEYFIELDVAL1=@CXNMEMOID


		
	GOTO END_PROC
		
		
END TRY
BEGIN CATCH
	SET @CERRORMSG = 'Error in Savetran_po at STEP#' + @cSTEP + ' SQL ERROR: #' + LTRIM(RTRIM(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
				
	GOTO END_PROC
END CATCH
	
END_PROC:
	
	UPDATE pom01106 WITH (ROWLOCk) SET last_update=getdate(),HO_SYNCH_LAST_UPDATE ='' WHERE po_id=@CKEYFIELDVAL1

	SET @cSTEP=295
	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1	
		

--SELECT A.PRODUCT_CODE FROM POD01106 A JOIN POM01106 B ON A.PO_ID=B.PO_ID
--WHERE PO_NO='JMPO-000121' ORDER BY PRODUCT_CODE
	
	--select 'check xnsavelog',* from xnsavelog where xn_type='po'

	

	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')=''
		BEGIN
		     
		     if @NUPDATEMODE =2
	         EXEC SP3S_CAPTURE_AUDIT_TRAIL 'PO',@CKEYFIELDVAL1,'','',@NSPID,@CMACHINENAME,@CWINDOWUSERNAME,@CWIZAPPUSERCODE,0,'1900-01-01',1
	          
			commit TRANSACTION
			DELETE A  FROM XNTYPE_CHECKSUM_MST A  WITH (ROWLOCK)  WHERE SP_ID=@NSPID
		   

		END
		ELSE
		begin
			ROLLBACK
			  DELETE A  FROM XNTYPE_CHECKSUM_MST A  WITH (ROWLOCK)  WHERE SP_ID=@NSPID
	    end 
	END

	SET @cSTEP=296.2

	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

	DECLARE @nInsSpId VARCHAR(45)
	SET @nInsSpId=LEFT(@nSpId,38)+@cLOcationId

	DELETE FROM PO_POD01106_UPLOAD   WHERE SP_ID IN (@NSPID,@nInsSpId)
	DELETE FROM PO_POM01106_UPLOAD   WHERE SP_ID IN (@NSPID,@nInsSpId)
	DELETE FROM genbarcode_rows WITH (ROWLOCK) WHERE SP_ID=@nSpId
--	DELETE A FROM XNTYPE_CHECKSUM_MST A(NOLOCK) WHERE SP_ID =@nSpId

    SET @cSTEP=300




	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
	IF ISNULL(@CERRORMSG,'')='' 
    BEGIN
         
		SET @cSTEP=330

		EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1			 
		IF EXISTS(SELECT TOP 1 'U' FROM CONFIG_PO_BO A (NOLOCK) JOIN POM01106 B (NOLOCK) ON A.SOURCE_AC_CODE=B.AC_CODE WHERE B.PO_ID=@CKEYFIELDVAL1 AND PO_DT >='2018-11-20')
		BEGIN
			SET @cSTEP=340

			EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
			IF EXISTS (SELECT TOP 1 * FROM UPLOAD_MIRRORPO_BO (NOLOCK) WHERE XN_TYPE='PO' AND PO_ID=@CKEYFIELDVAL1)
				UPDATE UPLOAD_MIRRORPO_BO WITH (ROWLOCK) SET LAST_UPDATE=GETDATE() WHERE XN_TYPE='PO' AND PO_ID=@CKEYFIELDVAL1
			ELSE 
			BEGIN
				INSERT UPLOAD_MIRRORPO_BO WITH (ROWLOCK) (XN_TYPE, PO_ID, LAST_UPDATE, ERRMSG ,HO_DEPT_ID,IP)   
				SELECT DISTINCT 'PO' AS XN_TYPE, @CKEYFIELDVAL1 AS PO_ID, 
				A.LAST_UPDATE AS LAST_UPDATE,'' AS  ERRMSG,
				(SELECT TOP 1 HO_DEPT_ID FROM CONFIG_PO_BO (NOLOCK)) AS HO_DEPT_ID,
				(SELECT TOP 1 IP FROM CONFIG_PO_BO (NOLOCK)) AS IP
				FROM POM01106 A WITH (NOLOCK)
				LEFT JOIN UPLOAD_MIRRORPO_BO B (NOLOCK) ON A.PO_ID=B.PO_ID AND B.XN_TYPE='PO'
				WHERE A.PO_ID=@CKEYFIELDVAL1
				AND (@IMAXLEVEL=0 OR A.APPROVEDLEVELNO=99)
				--AND A.APPROVED=1 AND ISNULL(B.ORDER_ID,'')=''
				AND B.PO_ID IS NULL
				--INSERT APPROVED PO ONLY
				AND EXISTS(SELECT TOP 1 PRODUCT_CODE FROM POD01106 PD(NOLOCK) WHERE PD.PO_ID=A.PO_ID AND ISNULL(PD.PRODUCT_CODE,'')<>'')
				--INSERT APPROVED PO ONLY
			END 
		END
    END  

    SET @cSTEP=350

	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

	 IF ISNULL(@CERRORMSG,'')='' AND @NUPDATEMODE<>3
	 BEGIN
	
		 EXEC SP3S_UPDATE_SKUNAMES @CKEYFIELDVAL1,'PO','POD01106','PO_ID'
	 END


	INSERT @OUTPUT ( ERRMSG, MEMO_ID)
			VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )

	SELECT * FROM @OUTPUT	
	
	SET @COL='IF OBJECT_ID(''TEMPDB..##POM_'+@NSPID +'_'+@CXNMEMOID+''',''U'') IS NOT NULL'+CHAR(13)+' DROP TABLE [##POM_'+@NSPID +'_'+@CXNMEMOID+'];
	          IF OBJECT_ID(''TEMPDB..##POD_'+@NSPID +'_'+@CXNMEMOID+''',''U'') IS NOT NULL'+CHAR(13)+' DROP TABLE [##POD_'+@NSPID +'_'+@CXNMEMOID+'];'
	EXEC(@COL)	


END						-- END OF SAVETRAN_PO
------------------------------------------------------END OF PROCEDURE SAVETRAN_PO