CREATE PROCEDURE SP_LEDGER_MASTER
@NQUERYID	NUMERIC(3,0),
@CMEMOID	VARCHAR(22) = '',
@CWHERE		VARCHAR(200)= '',
@CFINYEAR	VARCHAR(10) ='',
@DFROMDT	DATETIME	= '',
@DTODT		DATETIME	= '',
@DEPTID	VARCHAR(10) =''
--WITH ENCRYPTION
AS
BEGIN

DECLARE @CCMD NVARCHAR(4000)
DECLARE @CCMD2 NVARCHAR(4000)

IF @NQUERYID = 1
GOTO LBLACCLIST

ELSE 
IF @NQUERYID = 2
GOTO LBLACCADDRESS

ELSE 
IF @NQUERYID = 3
GOTO LBLSINGLELEDGER

ELSE 
IF @NQUERYID = 4
GOTO LBLGROUPTRIALHEAD

ELSE 
IF @NQUERYID = 5
GOTO LBLBILLBYBILL

LBLACCLIST:

		 SELECT AC_CODE,AC_NAME, 
		 REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(AC_NAME,'.',''),'@',''),' ',''),'_',''),'(',''),')',''),'-','')  AS PARSE_AC_NAME, 
		 AC_NAME AS REP_AC_NAME 
		 FROM LM01106 
		 WHERE AC_NAME<>'' AND ISNULL(INACTIVE,0)=0 
		 
		 UNION ALL 
		  
		 SELECT AC_CODE, ALIAS AS AC_NAME, 
		 REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(ALIAS,'.',''),'@',''),' ',''),'_',''),'(',''),')',''),'-','')  AS PARSE_AC_NAME, 
		 AC_NAME AS REP_AC_NAME 
		 FROM LM01106 
		 WHERE ALIAS <>'' AND ISNULL(INACTIVE,0)=0 
		 ORDER BY AC_NAME
		 
	GOTO LAST
	
LBLACCADDRESS:

		SELECT B.HEAD_NAME, A.ADDRESS0, A.ADDRESS1, A.ADDRESS2, A.AREA_NAME, A.CITY, A.STATE, A.PINCODE 
		FROM LMV01106 A 
		JOIN HD01106 B ON A.HEAD_CODE=B.HEAD_CODE  
		WHERE A.AC_CODE=@CWHERE
		
	GOTO LAST
LBLSINGLELEDGER:

		 SELECT  A.AC_CODE, A.AC_NAME, A.ADDRESS0, A.ADDRESS1, A.ADDRESS2, A.AREA_NAME, A.PINCODE, A.CITY, STATE, 
		 A.PAN_NO,  A.PHONES_R, A.PHONES_O, A.PHONES_FAX, A.MOBILE, A.CST_NO, A.SST_NO, A.TIN_NO, A.HEAD_CODE, 
		 ISNULL(B.AC_NAME,'') AS BROKER_AC_NAME,
		 0 AS OPENING_BALANCE,  
		 0 AS CLOSING_BALANCE  
		 --commented use of function as it will slow down our cloud (28-01-2021)
		 FROM LMV01106 A 
		 LEFT OUTER JOIN LM01106 B ON ISNULL(A.BROKER_AC_CODE,'0000000000') = B.AC_CODE 
		 WHERE A.AC_CODE=@CMEMOID
		 
	GOTO LAST
	
LBLGROUPTRIALHEAD:
		SELECT HEAD_CODE AS [AC_CODE],HEAD_NAME AS [AC_NAME], 
		REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(HEAD_NAME,'.',''),'@',''),' ',''),'_',''),'(',''),')',''),'-','')  AS PARSE_AC_NAME, 
		HEAD_NAME AS REP_AC_NAME 
        FROM HD01106 
        WHERE HEAD_NAME<>'' 
        
        UNION ALL 
        
        SELECT HEAD_CODE AS [AC_CODE],ALIAS AS [AC_NAME], 
        REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(ALIAS,'.',''),'@',''),' ',''),'_',''),'(',''),')',''),'-','')  AS PARSE_AC_NAME, 
        ALIAS AS REP_AC_NAME 
        FROM HD01106 
        WHERE ALIAS <>''
        ORDER BY AC_NAME
	GOTO LAST
	
LBLBILLBYBILL:
		DECLARE @FIXEDHEADS VARCHAR(2000) 
	 SELECT @FIXEDHEADS = DBO.FN_ACT_TRAVTREE( '0000000005' )  
	 SELECT	A.VD_ID, A.VDN_ID, A.REF_NO, A.REF_DATE, A.INV_AMT, A.NX_TYPE, A.ON_ACCOUNT, 
	 A.INV_AMT, ISNULL(F.DISCOUNT_PERCENTAGE ,G.DISCOUNT_PERCENTAGE ) AS DISCOUNT_PERCENTAGE, 
	 CAST((A.INV_AMT * A.DISCOUNT_PERCENTAGE)/100 AS NUMERIC(10,2)) AS DISCOUNT_AMT, 
	 A.NX_TYPE, (A.REF_DATE + A.CR_DAYS ) AS DUE_DATE, ISNULL(F.CREDIT_DAYS,G.CREDIT_DAYS) AS CR_DAYS, D.MRR_LIST, 
	 ISNULL(C.AC_CODE,A.VD_ID) AS AC_CODE, ISNULL(D.VOUCHER_DT,'01-01-1900') AS VOUCHER_DT, 
	 ISNULL(E.VOUCHER_TYPE_ALIAS,'') AS VOUCHER_TYPE_ALIAS, 
	 ISNULL(F.AC_NAME,G.AC_NAME) AS AC_NAME , 
	 ISNULL(D.VM_ID,'') AS VM_ID, ISNULL(D.VOUCHER_NO,'') AS VOUCHER_NO,(A.REF_DATE + A.CR_DAYS ) AS DUE_DATE,
	 ISNULL(X.X_TYPE,'') AS ADJ_X_TYPE, ISNULL(X.AMOUNT,0) AS ADJ_AMOUNT,  
	 ISNULL(X.VOUCHER_DT,'') AS ADJ_VOUCHER_DT, 
	 ISNULL(X.VM_ID,'') AS ADJ_VM_ID, 
	 ISNULL(X.VOUCHER_NO,'') AS ADJ_VOUCHER_NO,  
	 ISNULL(X.VOUCHER_TYPE_ALIAS,'') AS ADJ_VOUCHER_TYPE_ALIAS, 
	 ISNULL(X.NARRATION,'') AS ADJ_NARRATION, 
	 ISNULL(ISNULL(F.ADDRESS0,G.ADDRESS0),'') AS ADDRESS0, ISNULL(ISNULL(F.ADDRESS1,G.ADDRESS1),'') AS ADDRESS1,
	 ISNULL(ISNULL(F.ADDRESS2,G.ADDRESS2),'') AS ADDRESS2, 
	 ISNULL(ISNULL(F.AREA_NAME,G.AREA_NAME),'') AS AREA_NAME, ISNULL(ISNULL(F.CITY,G.CITY),'') AS CITY, 
	 ISNULL(ISNULL(F.STATE,G.STATE),'') AS STATE,  
	 ISNULL(ISNULL(F.PINCODE,G.PINCODE),'') AS PINCODE, ISNULL(ISNULL(F.CST_NO,G.CST_NO),'') AS CST_NO,
	 ISNULL(ISNULL(F.PAN_NO,G.PAN_NO),'') AS PAN_NO, ISNULL(ISNULL(F.TIN_NO,G.TIN_NO),'') AS TIN_NO, 
	 ISNULL(ISNULL(F.PHONES_O,G.PHONES_O),'') AS PHONES_O, ISNULL(ISNULL(F.PHONES_R,G.PHONES_R),'') AS PHONES_R, 
	 ISNULL(ISNULL(F.PHONES_FAX,G.PHONES_FAX),'') AS PHONES_FAX, ISNULL(H.AC_NAME,'') AS BROKER_AC_NAME 
	  FROM VDN01106 A   
	 LEFT OUTER JOIN VD01106 C ON A.VD_ID=C.VD_ID   
	 LEFT OUTER JOIN VM01106 D ON C.VM_ID=D.VM_ID   
	 LEFT OUTER JOIN VCHTYPE E ON D.VOUCHER_CODE=E.VOUCHER_CODE  
	 LEFT OUTER JOIN LMV01106 F ON F.AC_CODE=C.AC_CODE 
	 LEFT OUTER JOIN LMV01106 G ON G.AC_CODE=A.VD_ID 
	 LEFT OUTER JOIN LM01106 H  ON ISNULL(F.BROKER_AC_CODE,G.BROKER_AC_CODE) = ISNULL(H.AC_CODE,'0000000000') 
	 LEFT OUTER JOIN 
	 ( 
		 SELECT A.VDN_ID, A.X_TYPE, A.AMOUNT, C.VOUCHER_DT,C.VM_ID,C.VOUCHER_NO, D.VOUCHER_TYPE_ALIAS, B.NARRATION 
		 FROM VDA01106 A 
		 JOIN VD01106 B ON A.VD_ID = B.VD_ID 
		 JOIN VM01106 C ON B.VM_ID = C.VM_ID 
		 JOIN VCHTYPE D ON C.VOUCHER_CODE = D.VOUCHER_CODE 
		 JOIN VDN01106 E ON A.VDN_ID = E.VDN_ID 
		 WHERE C.CANCELLED = 0  AND ISNULL(C.OP_ENTRY,0)=0
		 
	 ) X ON A.VDN_ID = X.VDN_ID  
	 WHERE A.REF_DATE<=@DFROMDT
	 AND  ISNULL(D.CANCELLED,0) = 0  
	 AND ISNULL(C.AC_CODE,A.VD_ID) = @CMEMOID
	 AND  CHARINDEX(  ISNULL(F.HEAD_CODE,G.HEAD_CODE), @FIXEDHEADS ) <= 0 
	 ORDER BY AC_NAME,A.ON_ACCOUNT,A.REF_DATE, A.REF_NO 
GOTO LAST

LAST:
END
