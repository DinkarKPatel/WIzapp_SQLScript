SET NOCOUNT ON
DECLARE @DB VARCHAR(100),@PATH VARCHAR(100),@CCMD NVARCHAR(MAX),@ERR INT=0,@ERR_MSG VARCHAR(100)='',@bCreate BIT
SET @DB=DB_NAME()+'_IMAGE'

SET @CCMD=N'USE ['+@DB+'];
IF NOT EXISTS(SELECT NAME FROM SYS.OBJECTS WHERE NAME LIKE ''PK_IMAGEID_IMGINFO'')
BEGIN
	ALTER TABLE IMAGE_INFO ADD CONSTRAINT PK_IMAGEID_IMGINFO PRIMARY KEY  (IMG_ID)
END'

PRINT @CCMD   
EXEC(@CCMD)

SET @CCMD=N'USE ['+@DB+'];
IF EXISTS(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''IMAGE_INFO'' AND COLUMN_NAME=''PROD_IMAGE_BASE64'')
BEGIN
	ALTER TABLE IMAGE_INFO DROP COLUMN PROD_IMAGE_BASE64	
END'

PRINT @CCMD   
EXEC(@CCMD)

SET @CCMD=N'USE ['+@DB+'];
IF EXISTS(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''IMAGE_INFO'' AND COLUMN_NAME=''PROD_IMAGE1_BASE64'')
BEGIN
	ALTER TABLE IMAGE_INFO DROP COLUMN PROD_IMAGE1_BASE64	
END'

PRINT @CCMD   
EXEC(@CCMD)

SET @CCMD=N'USE ['+@DB+'];
IF EXISTS(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''IMAGE_INFO'' AND COLUMN_NAME=''PROD_IMAGE2_BASE64'')
BEGIN
	ALTER TABLE IMAGE_INFO DROP COLUMN PROD_IMAGE2_BASE64	
END'

PRINT @CCMD   
EXEC(@CCMD)

SET @CCMD=N'USE ['+@DB+'];
IF EXISTS(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''IMAGE_INFO'' AND COLUMN_NAME=''PROD_IMAGE3_BASE64'')
BEGIN
	ALTER TABLE IMAGE_INFO DROP COLUMN PROD_IMAGE3_BASE64	
END'

PRINT @CCMD   
EXEC(@CCMD)

SET @CCMD=N'USE ['+@DB+'];
IF EXISTS(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = ''IMAGE_INFO'' AND COLUMN_NAME=''PROD_IMAGE4_BASE64'')
BEGIN
	ALTER TABLE IMAGE_INFO DROP COLUMN PROD_IMAGE4_BASE64
END'

PRINT @CCMD   
EXEC(@CCMD)

SET @CCMD=N'USE ['+@DB+'];
IF OBJECT_ID(''IMAGE_INFO_REF'',''U'') IS NULL
BEGIN
	CREATE TABLE IMAGE_INFO_REF
	(
		IMG_ID VARCHAR(100) CONSTRAINT FP_IMAGE_INFO_IMG_ID REFERENCES IMAGE_INFO(IMG_ID)
	)
END'

PRINT @CCMD   
EXEC(@CCMD)

SET @CCMD=N'USE ['+@DB+'];
IF OBJECT_ID(''RBO_DOC'',''U'') IS NULL
BEGIN
	 CREATE TABLE RBO_DOC 
	 (
		 RBO_DOC_ORDER_ID VARCHAR(22),
		 RBO_DOC_UOPC VARCHAR(50), 
		 RBO_DOC_ID VARCHAR(40) NOT NULL CONSTRAINT PK_RBO_DOC_ID PRIMARY KEY,
		 RBO_DOC_DOC VARBINARY(MAX),
		 RBO_DOC_DOC_NAME VARCHAR(200),
		 RBO_DOC_LAST_UPDATE DATETIME
	 )
END'

PRINT @CCMD   
EXEC(@CCMD)


SET @CCMD=N'USE ['+@DB+'];
INSERT INTO IMAGE_INFO_REF(IMG_ID)
SELECT a.IMG_ID
FROM IMAGE_INFO a
LEFT OUTER JOIN IMAGE_INFO_REF b ON b.IMG_ID=a.IMG_ID
WHERE b.IMG_ID IS NULL'

PRINT @CCMD   
EXEC(@CCMD)

SET @bCreate=0
SET @CCMD =N'IF OBJECT_ID('''+@DB+'..TRG_IMAGE_INFO_IMAGE_INFO_REF'',''TR'') IS NULL
	SET @bCreate=1'

PRINT @CCMD   
exec SP_EXECUTESQL @CCMD, N' @bCreate BIT OUTPUT ',@bCreate=@bCreate OUTPUT

PRINT @bCreate
IF ISNULL(@bCreate,0)=1
BEGIN
	SET @CCMD =N'
		CREATE TRIGGER TRG_IMAGE_INFO_IMAGE_INFO_REF
		ON IMAGE_INFO
		FOR INSERT
		AS
		BEGIN
			INSERT IMAGE_INFO_REF(IMG_ID)
			SELECT IMG_ID FROM INSERTED
		END
	'

	PRINT @CCMD   
	BEGIN TRY

	 SET @CCMD = REPLACE(@CCMD,'''','''''')
	   SET @CCMD = 'USE [' + @DB + ']; EXEC(''' + @CCMD + ''')'
	   PRINT @CCMD
	   EXEC(@CCMD)

	
	END TRY
	BEGIN CATCH
		select ERROR_MESSAGE()
	END CATCH
END


SET @bCreate=0
SET @CCMD =N'IF OBJECT_ID('''+@DB+'..TRG_IMAGE_INFO_OPT_SKU_DIFF'',''TR'') IS NOT NULL
	DROP TRIGGER TRG_IMAGE_INFO_OPT_SKU_DIFF
	IF OBJECT_ID('''+@DB+'..TRG_IMAGE_INFO_UPDSKUNAMES'',''TR'') IS NOT NULL
	DROP TRIGGER TRG_IMAGE_INFO_UPDSKUNAMES'

PRINT @CCMD   
BEGIN TRY

	SET @CCMD = REPLACE(@CCMD,'''','''''')
	SET @CCMD = 'USE [' + @DB + ']; EXEC(''' + @CCMD + ''')'
	PRINT @CCMD
	EXEC(@CCMD)

	
END TRY
BEGIN CATCH
	select ERROR_MESSAGE()
END CATCH


SET @CCMD=N'CREATE TRIGGER TRG_IMAGE_INFO_UPDSKUNAMES
	ON IMAGE_INFO
	FOR INSERT,UPDATE
	AS
	BEGIN
		DECLARE @cExpr NVARCHAR(MAX),@cIMGID NVARCHAR(100),@ccmd nVARCHAR(MAX),@cDBNAME NVARCHAR(100)

		SET @cDBNAME=DB_NAME()
		SET @cDBNAME=LEFT(@cDBNAME,LEN(@cDBNAME)-6)
			
		SELECT IMG_ID INTO #tmpExistingSkuImg FROM inserted
			
		SET @cCmd=N''EXEC  ''+@cDBNAME+''.dbo.SP3S_UPDATE_IMGINFO_BARCODES
		@bCalledFromImageInfoTrigger=1''

		EXEC SP_EXECUTESQL @cCmd

	END
'

PRINT @CCMD   
BEGIN TRY

	SET @CCMD = REPLACE(@CCMD,'''','''''')
	SET @CCMD = 'USE [' + @DB + ']; EXEC(''' + @CCMD + ''')'
	PRINT @CCMD
	EXEC(@CCMD)

	
END TRY
BEGIN CATCH
	select ERROR_MESSAGE()
END CATCH

--PRINT @CCMD   
--EXEC(@CCMD)


FINISH:
SET @CCMD='USE ['+REPLACE(@DB,'_IMAGE','')+'];'
EXEC(@CCMD)
SELECT @ERR_MSG ERROR_MSG
SET NOCOUNT OFF

