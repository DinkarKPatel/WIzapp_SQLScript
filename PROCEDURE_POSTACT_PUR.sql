create PROCEDURE POSTACT_PUR 
(
	@DTTO DATETIME,
	@CDEPTID CHAR(4)='',
	@CACCODE CHAR(10)='',
	@DGSTCUTOFFDATE  DATETIME=''	
)
AS
BEGIN

    DECLARE @CSTEP VARCHAR(10),@BPOSTDISCOUNTSEPARATELY BIT,@CDISCACCODE VARCHAR(10),@BPOSTFREIGHTSEPARATELY	BIT,@CFREIGHTACCODE VARCHAR(10),
			@BPOSTOTHERCHARGESSEPARATELY	BIT,@COTHERCHARGESACCODE VARCHAR(10),@BPOSTROUNDOFFSEPARATELY BIT,@CROUNDOFFACCODE VARCHAR(10),@NCTR NUMERIC(10,0),
			@NSUBTOTAL NUMERIC(14,4),@NTAXAMOUNT NUMERIC(14,4), @CPURACCODE VARCHAR(50),@CTAXACCODE VARCHAR(100),
			@LPOSTTAXSEPARATELY NUMERIC(14,4),@CMRRID VARCHAR(50),@LOUTSTATIONPARTY BIT,@TMPDR NUMERIC(14,4),
			@TMPCR NUMERIC(14,4),@CCURSTATECODE	VARCHAR(10),@CVMID	VARCHAR(40),@CLOCATIONID CHAR(2),
			@CLASTBILLNO VARCHAR(40),@COLDLASTBILLNO VARCHAR(40),@DTMPVENDORBILLDT DATETIME,@CMRRLIST VARCHAR(300),@NTMPCREDITDAYS NUMERIC(10),
			@NTMPCRDISCOUNTPERCENTAGE NUMERIC(14,4),@DLASTINVDT	DATETIME,@CVOUCHERCODE VARCHAR(10),
			@COLDBILLTYPE VARCHAR(10),@CLASTACCODE VARCHAR(10),@CLASTPARTYNAME VARCHAR(100),@NTOTQUANTITY NUMERIC(14,4),
			@NTOTNETAMOUNT NUMERIC(14,4),@CDEPTNAME VARCHAR(100),@CVOUCHERNO VARCHAR(10)
	        ,@CPARTYACCODE VARCHAR(10),@CPARTYSTATECODE VARCHAR(10),@NNETAMOUNT NUMERIC(14,4),
			@NDISCAMOUNT NUMERIC(14,4),@NFREIGHT NUMERIC(14,4),	@NOTHER NUMERIC(14,4),@NROUNDOFF NUMERIC(14,4),
			@NDRTOTAL NUMERIC(14,4),@NCRTOTAL NUMERIC(14,4),@DCUTOFFDATE VARCHAR(20),@CXNTYPE VARCHAR(10)
			,@NCREDITDAYS NUMERIC(5),@CCASHDISCOUNTAC VARCHAR(10),@NCASHDISCOUNTAMOUNT NUMERIC(18,2)
			,@CSUPPLIER CHAR(10),@BPOSTEXCISESEPARATELY BIT,@CEXCISEDUTYACCODE VARCHAR(10)
			,@CPREVMRRID VARCHAR(50),@CPREVXNTYPE VARCHAR(50),@CSETOFFACCODE CHAR(10),@BGSTBILL BIT
			,@CLOCGSTSTATECODE VARCHAR(5),@CPARTYGSTSTATECODE VARCHAR(5),@BGPCCONFIGFOUND BIT,
			 @CFIN_YEAR VARCHAR(5),@NOHTAXMETHOD NUMERIC(1,0),@CADJDIFFACCODE CHAR(10),@CVDID VARCHAR(50),
			 @DFROMDT DATETIME,@CREFMEMOID VARCHAR(40),@CPREVREFMEMOID VARCHAR(40),@BCANCELLED BIT,@BOLDCANCELLED BIT,
			 @NDIFFLIMIT NUMERIC(2,0),@NCDPCT NUMERIC(7,2),@CCREDITORHEADS VARCHAR(500),
			 @BMANUALROFF BIT,@NROLIMIT NUMERIC(7,3)
			
			SET @CCREDITORHEADS = DBO.FN_ACT_TRAVTREE( '0000000021' ) 
			SELECT @DFROMDT=DBO.FN_GETFINYEARDATE('01'+DBO.FN_GETFINYEAR(@DTTO),1)
		    
		    SELECT @CFIN_YEAR='01'+CAST(DBO.FN_GETFINYEAR (@DTTO) AS VARCHAR(5))

			SET @CFREIGHTACCODE=''
			SET @COTHERCHARGESACCODE=''
			SET @CROUNDOFFACCODE=''
    
    SET @CSTEP=20
    --THIS TABLE VARIABLE STORE ERROR OF OF MEMO ID
    DECLARE @ERRORS TABLE
	(
		XN_ID	VARCHAR(40),XN_TYPE VARCHAR(30),XN_NO VARCHAR(40),
		XN_DT DATETIME,XN_AMT NUMERIC(14,4),XN_AC VARCHAR(100),
		ERR_DESC VARCHAR(500)
	)   
    
    SET @CSTEP=30
    DECLARE @VCHC TABLE 
	(
		AC_CODE CHAR(10),NARRATION VARCHAR(200),XN_NO VARCHAR(30),
		XN_DT DATETIME,DEPT_ID CHAR(4),AMOUNT NUMERIC(14,4),XN_ID VARCHAR(22),
		REF_BILL_NO VARCHAR(50),REF_BILL_DATE DATETIME,	ENTRY_ID INT
	)
	
	SET @CSTEP=40
	DECLARE @VDC TABLE 
	(
		VD_ID VARCHAR(50),				VM_ID VARCHAR(40),				AC_CODE CHAR(10), 
		NARRATION VARCHAR(200),			DEBIT_AMOUNT NUMERIC(14,4),		CREDIT_AMOUNT NUMERIC(14,4),
		X_TYPE CHAR(2), 				VS_AC_CODE CHAR(10),	 		REF_BILL_NO VARCHAR(40), 
		CREDIT_DAYS NUMERIC(10),		CR_DISCOUNT_PERCENTAGE NUMERIC(14,4),		
		VAT_ENTRY BIT,REF_BILL_DATE DATETIME, AC_NAME VARCHAR(100)
		,CHK_RECON BIT,RECON_DT DATETIME,LAST_UPDATE DATETIME,COMPANY_CODE CHAR(2)
		,AUTOENTRY BIT,CONTROL_AC BIT,SECONDARY_NARRATION VARCHAR(2000),COST_CENTER_AC_CODE CHAR(15)  
	)

	SET @CSTEP=50
	DECLARE @VMC TABLE
	(
		VM_ID VARCHAR(400), 			VOUCHER_NO VARCHAR(400), 		VOUCHER_DT DATETIME, 
		VOUCHER_CODE CHAR(100), 		DEPT_ID CHAR(20),				BILL_TYPE VARCHAR(300),
		BILL_NO VARCHAR(200), 			BILL_ID VARCHAR(220), 			BILL_DT DATETIME, 
		BILL_AC_CODE VARCHAR(100),		DRTOTAL NUMERIC(20,2),			CRTOTAL NUMERIC(20,2), 
		CASH_VOUCHER BIT, 				SALE_VOUCHER BIT, 				QUANTITY NUMERIC(20,2), 
		ANGADIA_CODE CHAR(70), 			LR_NO VARCHAR(500), 			LR_DT DATETIME,
		PARTY_NAME VARCHAR(1000),		NET_AMOUNT NUMERIC(20,2), 		BILL_STATUS VARCHAR(1000),
		MRR_LIST VARCHAR(3000), 		CANCELLED BIT,					DEPT_NAME VARCHAR(100),
		VOUCHER_TYPE VARCHAR(100),VM_ORDER NUMERIC(1)
	)
	
	SET @CSTEP=60
	DECLARE @VLINK TABLE
	(
		VM_ID VARCHAR(100),MEMO_ID VARCHAR(100),XN_TYPE VARCHAR(20),LAST_UPDATE DATETIME
	)

	DECLARE @TBILL_BY_BILL_REF TABLE(VD_ID VARCHAR(40),REF_NO VARCHAR(40),AMOUNT NUMERIC(18,4),X_TYPE VARCHAR(20),
									 CR_DAYS NUMERIC(5),ADJ_REMARKS VARCHAR(200),LAST_UPDATE DATETIME,VM_ID VARCHAR(40))  

	
	SELECT TOP 1 @DCUTOFFDATE=CUTOFFDATE FROM PURCONFIGMST
	
	SET @DCUTOFFDATE=ISNULL(@DCUTOFFDATE,'')
	SET @NCTR=1
	
	SET @CSTEP=70
	SET @CVOUCHERCODE = '0000000006'
    BEGIN TRY
			
			SET @CSTEP=80
			IF OBJECT_ID('TEMPDB..#PURTABLE','U') IS NOT NULL
				DROP TABLE #PURTABLE 

			IF OBJECT_ID('TEMPDB..#PURTABLE_PBM','U') IS NOT NULL
				DROP TABLE #PURTABLE_PBM 
							
			SET @CSTEP=90
			--THIS TABLE STORE ALL PENDING MEMO_ID 
			CREATE TABLE #PURTABLE (MEMO_ID VARCHAR(30),MODE VARCHAR(10),REF_BILL_NO VARCHAR(200),REF_BILL_DT DATETIME)
			
			CREATE TABLE #PURTABLE_PBM (MEMO_ID VARCHAR(30),REF_MRR_ID VARCHAR(30))
						
			SET @CSTEP=92
			IF OBJECT_ID('#APPROVALLOCATION','U') IS NOT NULL
				DROP TABLE #APPROVALLOCATION
			
			--GETTING LIST OF LOCATIONS ON WHICH APPROVAL PROCESS IS ENABLED
			SELECT DISTINCT DEPT_ID 
			INTO #APPROVALLOCATION
			FROM LOC_XNSAPPROVAL
			WHERE XN_TYPE='PUR'
			
			DECLARE @IMAXLEVEL INT
			
			--GETTING THE MAX LEVEL OF APPROVAL FOR PURCHASE TRANSACTION
			SELECT @IMAXLEVEL=MAX(LEVEL_NO) 
			FROM XN_APPROVAL_CHECKLIST_LEVELS 
			WHERE XN_TYPE='PUR' AND INACTIVE=0
			
			IF EXISTS(SELECT TOP 1 'U' FROM XN_APPROVAL_CHECKLIST_LEVELS  WHERE XN_TYPE='PUR' AND INACTIVE=0 AND ISNULL(AC_POSTING,0)<>0)
			BEGIN
			    SELECT @IMAXLEVEL=LEVEL_NO
				FROM XN_APPROVAL_CHECKLIST_LEVELS 
				WHERE XN_TYPE='PUR' AND INACTIVE=0 AND ISNULL(AC_POSTING,0)<>0
			END
						
			SET @IMAXLEVEL=ISNULL(@IMAXLEVEL,0)
			
			SET @CSTEP=100
			INSERT INTO #PURTABLE (MEMO_ID,MODE,REF_BILL_NO,REF_BILL_DT)
	        --GETTING LIST OF PURCHASES THAT QUALIFY FOR VOUCHER POSTING FOR APPROVAL ENABLED LOCATIONS
	        SELECT A.MRR_ID,'PUR' AS MODE,A.BILL_NO,A.INV_DT 
	        FROM PIM01106 A
	        JOIN LOCATION LA ON a.location_Code =LA.DEPT_ID 
	        left join INM01106 inm (nolock) on inm.INV_ID =a.inv_id 
	        LEFT OUTER JOIN LOCATION LS ON LS.DEPT_ID=inm.location_Code 
	        JOIN #APPROVALLOCATION AL ON a.location_Code =AL.DEPT_ID
	        LEFT OUTER JOIN 
	        (
				SELECT B.MEMO_ID,B.LAST_UPDATE
				FROM POSTACT_VOUCHER_LINK B 
				JOIN VM01106 C ON C.VM_ID = B.VM_ID 
				WHERE C.CANCELLED=0 AND B.XN_TYPE = 'PUR' 
	        )VM  ON A.MRR_ID = VM.MEMO_ID  
	        LEFT OUTER JOIN LOCATION LOC ON LOC.DEPT_ID=A.DEPT_ID
	        WHERE  
	        A.APPROVEDLEVELNO>=@IMAXLEVEL AND A.MEMO_TYPE=1 --CHANGES
	        -- LOC TYPE 1 OR FRANCHIES LOCATION MARK 1 
	        AND (ISNULL(LA.LOC_TYPE,0)=1 OR ISNULL(LA.ACCOUNT_POSTING_AT_HO,0)=1)
	        /*PURCHASE IS NOT CANCELLED OR PURCHASE IS CANCELLED AND VOUCHER IS NOT CANCELLED.*/
	        AND ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)	 
	        /*PURCHASE IS FINAL BILL FOR SUPPLIER.*/
	        /*PURCHASE INV_DT IS LESS THAN THE SPECIFIED DATE.*/
	        AND A.INV_DT BETWEEN @DFROMDT AND @DTTO
	        AND A.FIN_YEAR >=@CFIN_YEAR
	        /*IF CUTOFF DATE IS SPECIFIED, CONSIDER PURCHASE AFTER THE CUTOFF DATE*/
	        AND (ISNULL(@DCUTOFFDATE,'')='' OR A.INV_DT>@DCUTOFFDATE)
	        /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO THAT ELSE APPLY IT TO MRR_NO FOR LOCATION.*/
	        AND (ISNULL(@CDEPTID,'')='' OR 
				(CASE WHEN ISNULL(A.ACCOUNTS_DEPT_ID,'')='' AND ISNULL(LOC.ALLOW_PURCHASE_AT_HO,0)=0
					  THEN a.location_Code  WHEN ISNULL(LOC.ALLOW_PURCHASE_AT_HO,0)=1 THEN A.DEPT_ID 
					ELSE A.ACCOUNTS_DEPT_ID END)=@CDEPTID)
	        /*PURCHASE IS NOT GROUP/BRANCH PURCHASE*/
	        AND ((A.INV_MODE<>2 AND A.BILL_CHALLAN_MODE=0)  OR (A.INV_DT>=@DGSTCUTOFFDATE AND LS.LOC_TYPE=2))
	        /*PURCHASE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/
	        AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE) 
	        AND (@CACCODE='' OR A.AC_CODE=@CACCODE)
	        --GETTING LIST OF PURCHASES THAT QUALIFY FOR VOUCHER POSTING FOR APPROVAL  NOT ENABLED LOCATIONS
	        UNION ALL
	        SELECT A.MRR_ID,'PUR' AS MODE,A.BILL_NO,A.INV_DT  
	        FROM PIM01106 A
	        JOIN LOCATION LA ON a.location_Code =LA.DEPT_ID 
	        left join INM01106 inm (nolock) on inm.INV_ID =a.inv_id 
	        LEFT JOIN #APPROVALLOCATION AL ON a.location_Code =AL.DEPT_ID
	        LEFT OUTER JOIN LOCATION LS ON LS.DEPT_ID=inm.location_Code 
	        LEFT OUTER JOIN 
	        (
				SELECT B.MEMO_ID,B.LAST_UPDATE
				FROM POSTACT_VOUCHER_LINK B 
				JOIN VM01106 C ON C.VM_ID = B.VM_ID 
				WHERE C.CANCELLED=0 AND B.XN_TYPE = 'PUR' 
	        )VM  ON A.MRR_ID = VM.MEMO_ID  
	        LEFT OUTER JOIN LOCATION LOC ON LOC.DEPT_ID=A.DEPT_ID
	        WHERE  A.MEMO_TYPE=1 AND 
	        /*PURCHASE IS NOT CANCELLED OR PURCHASE IS CANCELLED AND VOUCHER IS NOT CANCELLED.*/
	        ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)
	         -- LOC TYPE 1 OR FRANCHIES LOCATION MARK 1 
	        AND (ISNULL(LA.LOC_TYPE,0)=1 OR ISNULL(LA.ACCOUNT_POSTING_AT_HO,0)=1)	 
	        /*LOCATIONS WHERE APPROVAL IS NOT ENABLED*/
	        AND AL.DEPT_ID IS NULL 
	        /*PURCHASE IS FINAL BILL FOR SUPPLIER.*/
	        /*PURCHASE INV_DT IS LESS THAN THE SPECIFIED DATE.*/
	        AND A.INV_DT BETWEEN @DFROMDT AND @DTTO
	        AND A.FIN_YEAR >=@CFIN_YEAR
	        /*IF CUTOFF DATE IS SPECIFIED, CONSIDER PURCHASE AFTER THE CUTOFF DATE*/
	        AND (ISNULL(@DCUTOFFDATE,'')='' OR A.INV_DT>@DCUTOFFDATE)
	        /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO THAT ELSE APPLY IT TO MRR_NO FOR LOCATION.*/
	        AND (ISNULL(@CDEPTID,'')='' OR 
				(CASE WHEN ISNULL(A.ACCOUNTS_DEPT_ID,'')='' AND ISNULL(LOC.ALLOW_PURCHASE_AT_HO,0)=0
					  THEN a.location_Code  WHEN ISNULL(LOC.ALLOW_PURCHASE_AT_HO,0)=1 THEN A.DEPT_ID 
					ELSE A.ACCOUNTS_DEPT_ID END)=@CDEPTID)
			AND (@CACCODE='' OR A.AC_CODE=@CACCODE)						
	        /*PURCHASE IS NOT GROUP/BRANCH PURCHASE*/
	        AND ((A.INV_MODE<>2 AND A.BILL_CHALLAN_MODE=0) OR (A.INV_DT>=@DGSTCUTOFFDATE AND LS.LOC_TYPE=2))
	        /*PURCHASE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/
	        AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE) 
	        
	        
	        
	        --SELECT '#PURTABLE',* FROM #PURTABLE
	        
	        
	        SET @CSTEP=110
	        SELECT @BPOSTDISCOUNTSEPARATELY = POSTCASHDISCSPRTLY FROM PURCONFIGMST
			
			SET @CSTEP=120
			--IF NO ENTRY EXISTS IN CONFIG, CONSIDER 0
			SET @BPOSTDISCOUNTSEPARATELY=ISNULL(@BPOSTDISCOUNTSEPARATELY,0)
			
			SET @CSTEP=130
			IF @BPOSTDISCOUNTSEPARATELY=1
			BEGIN
				SELECT @CDISCACCODE = CASHDISCAC FROM PURCONFIGMST
				
				SET @CDISCACCODE=ISNULL(@CDISCACCODE,'')
				/*
				IF DISCOUNT HAS TO BE POSTED SEPARATELY AND DISCOUNT ACCOUNT IS NOT DEFINED, 
				SEND ERROR MESSAGE TO USER
				*/
				SET @CSTEP=140
				IF @CDISCACCODE = '' OR @CDISCACCODE = '0000000000'
				BEGIN
					INSERT @ERRORS (XN_TYPE, ERR_DESC ) 
					VALUES ('PUR', 'DISCOUNT ACCOUNT NOT SPECIFIED')
				END
			END
	  
	        SET @CSTEP=150
	        --IF FREIGHT CONSIDERED AS PART OF STOCK THEN CLUB IT IN PURCHASE A/C OTHERWISE POST SEPARATELY
			SELECT @BPOSTFREIGHTSEPARATELY = POSTFREIGHTSPRTLY FROM PURCONFIGMST 
			
			SET @CSTEP=160
			SET @BPOSTFREIGHTSEPARATELY=ISNULL(@BPOSTFREIGHTSEPARATELY,0)
							
			SET @CSTEP=170
			--GET THE ACCOUNT FOR FREIGHT AMOUNT POSTING
			SELECT @CFREIGHTACCODE = FREIGHTAC	FROM PURCONFIGMST
		    
		    SET @CFREIGHTACCODE=ISNULL(@CFREIGHTACCODE,'')
		    
		    SELECT @BPOSTEXCISESEPARATELY=POSTEXCISESPRTLY FROM PURCONFIGMST
		    SELECT @CEXCISEDUTYACCODE=EXCISEAC FROM PURCONFIGMST
		    
		    SET @BPOSTEXCISESEPARATELY=ISNULL(@BPOSTEXCISESEPARATELY,0)
		    SET @CEXCISEDUTYACCODE=ISNULL(@CEXCISEDUTYACCODE,'')
		    
		    SET @CSTEP=175
			--GET THE CASH DISCOUNT ACCOUNT FOR DISCOUNT AMOUNT POSTING AS PER LEDGER TERMS
			SELECT @CCASHDISCOUNTAC = CASHDISCAC FROM PURCONFIGMST
		    
		    SET @CCASHDISCOUNTAC=ISNULL(@CCASHDISCOUNTAC,'')
		    
		    SET @CSTEP=180
		    --IF OTHER CHARGES CONSIDERED AS PART OF STOCK THEN CLUB IT IN PURCHASE A/C OTHERWISE POST SEPARATELY
			SELECT @BPOSTOTHERCHARGESSEPARATELY = POSTOCSPRTLY	FROM PURCONFIGMST

			SET @CSTEP=190
			SET @BPOSTOTHERCHARGESSEPARATELY=ISNULL(@BPOSTOTHERCHARGESSEPARATELY,0)

			SET @CSTEP=200
			SELECT @COTHERCHARGESACCODE = OCAC	FROM PURCONFIGMST
		   
			SET @COTHERCHARGESACCODE=ISNULL(@COTHERCHARGESACCODE,'')
		   
			SET @CSTEP = 210
			--IF OTHER CHARGES CONSIDERED AS PART OF STOCK THEN CLUB IT IN PURCHASE A/C OTHERWISE POST SEPARATELY
			SELECT @BPOSTROUNDOFFSEPARATELY = POSTROFFSPRTLY FROM PURCONFIGMST
			SET @CSTEP = 220
			SET @BPOSTROUNDOFFSEPARATELY=ISNULL(@BPOSTROUNDOFFSEPARATELY,0)
			
			SET @CSTEP = 230
			SELECT @CROUNDOFFACCODE = ROFFAC FROM PURCONFIGMST
			
			SET @CROUNDOFFACCODE=ISNULL(@CROUNDOFFACCODE,'')
		
			CREATE INDEX IX_TEMP_PURTABLE_MRR_ID ON #PURTABLE(MEMO_ID)
			
			SET @BGPCCONFIGFOUND=0
			IF EXISTS (SELECT TOP 1 XN_TYPE FROM GST_POSTING_CONFIG WHERE XN_TYPE='PUR')
				SET @BGPCCONFIGFOUND=1
				
			SET @CSTEP=240
			---GETTING LIST OF ALL ERROR FROM PURCHASE AND CONVERT MRN TO BILL
			INSERT INTO @ERRORS(XN_ID,XN_NO ,XN_DT,XN_TYPE,ERR_DESC)
			--GETTING ERROR LIST FROM PURCHASE BILLS
			SELECT DISTINCT PIM.MRR_ID,PIM.MRR_NO,INV_DT,'PUR' AS XN_TYPE
				  ,(CASE 
						 WHEN PID.FORM_ID='0000000' AND PIM.INV_DT<@DGSTCUTOFFDATE
								THEN 'FORM NOT SPECIFIED'
						 WHEN ISNULL(PID.HSN_CODE,'') IN ('','0000000000') AND PIM.INV_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>''
								THEN 'HSN CODE NOT ATTACHED'								
						 WHEN (ISNULL(PAC.PURAC,'') = '' OR ISNULL(PAC.PURAC,'') = '0000000000')  AND PIM.INV_DT<@DGSTCUTOFFDATE 
								THEN 'PURCHASE A/C NOT SPECIFIED'
						 WHEN (FM.POST_TAX_SEPARATELY=1 AND PID.TAX_PERCENTAGE<>0 AND (ISNULL(PAC.TAXAC,'')='' 
								OR PAC.TAXAC='0000000000')) AND PIM.INV_DT<@DGSTCUTOFFDATE
								THEN 'TAX A/C NOT SPECIFIED'
						 WHEN PIM.INV_DT>=@DGSTCUTOFFDATE  AND GPC.XN_TYPE IS NULL AND @BGPCCONFIGFOUND=1
								THEN 'GST A/C CONFIGURATION NOT FOUND FOR RELATED GST PERCENTAGE'								
						 WHEN PIM.INV_DT>=@DGSTCUTOFFDATE  AND @BGPCCONFIGFOUND=0
								THEN 'GST A/C CONFIGURATION NOT SETUP FOR PURCHASE'								
						 
						 WHEN (ISNULL(GPC.IGST_XN_AC_CODE,'') = '' OR ISNULL(GPC.IGST_XN_AC_CODE,'') = '0000000000')
								AND PIM.INV_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND IGST_AMOUNT<>0 THEN 'IGST PUR A/C NOT SPECIFIED'
						 WHEN (ISNULL(GPC.LOCAL_GST_XN_AC_CODE,'') = '' OR ISNULL(GPC.LOCAL_GST_XN_AC_CODE,'') = '0000000000')
								AND PIM.INV_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND CGST_AMOUNT<>0 THEN 'CGST PUR A/C NOT SPECIFIED'
						 
						 WHEN (ISNULL(GPC.IGST_TAX_AC_CODE,'') = '' OR ISNULL(GPC.IGST_TAX_AC_CODE,'') = '0000000000')
								AND PIM.INV_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND IGST_AMOUNT<>0 THEN 'IGST TAX A/C NOT SPECIFIED'
						 WHEN (ISNULL(GPC.CGST_TAX_AC_CODE,'') = '' OR ISNULL(GPC.CGST_TAX_AC_CODE,'') = '0000000000')
								AND PIM.INV_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND CGST_AMOUNT<>0 THEN 'CGST TAX A/C NOT SPECIFIED'
						 WHEN (ISNULL(GPC.SGST_TAX_AC_CODE,'') = '' OR ISNULL(GPC.SGST_TAX_AC_CODE,'') = '0000000000')
								AND PIM.INV_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND SGST_AMOUNT<>0 THEN 'SGST TAX NOT SPECIFIED'																								
								
						 WHEN (FM.POST_TAX_SEPARATELY=1 AND PID.TAX_PERCENTAGE<>0 AND (ISNULL(PAC.TAXAC,'')='' 
								OR PAC.TAXAC='0000000000')) AND PIM.INV_DT<@DGSTCUTOFFDATE
								THEN 'TAX A/C NOT SPECIFIED'
						 WHEN (ISNULL(PIM.BILL_NO,'') = '')
								THEN 'BILL NO. NOT SPECIFIED'
						 WHEN (PIM.FREIGHT<>0 AND @BPOSTFREIGHTSEPARATELY=1
								AND (@CFREIGHTACCODE = '' OR @CFREIGHTACCODE = '0000000000'))
								THEN 'FREIGHT A/C NOT SPECIFIED'
						 WHEN (PIM.EXCISE_DUTY_AMOUNT<>0 AND @BPOSTEXCISESEPARATELY=1 AND (@CEXCISEDUTYACCODE = '' OR @CEXCISEDUTYACCODE= '0000000000'))
								THEN 'EXCISE DUTY A/C NOT SPECIFIED'		
						 WHEN (PIM.OTHER_CHARGES<>0 AND @BPOSTOTHERCHARGESSEPARATELY=1 
								 AND (@COTHERCHARGESACCODE='' OR @COTHERCHARGESACCODE='0000000000'))
								THEN 'OTHER CHARGES A/C NOT SPECIFIED' 
						 WHEN (PIM.ROUND_OFF<>0 AND (@BPOSTROUNDOFFSEPARATELY=1  OR (PIM.INV_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'')) AND (@CROUNDOFFACCODE = '' OR @CROUNDOFFACCODE = '0000000000'))
								THEN 'ROUND OFF A/C NOT SPECIFIED'		
						 WHEN (PIM.TOTAL_AMOUNT=0) 								
								THEN 'ZERO VALUE PURCHASE'
						 ELSE 'UNIDENTIFIED ERROR' END) AS ERR_DESC		
			FROM PIM01106 PIM
			JOIN PID01106 PID ON PIM.MRR_ID=PID.MRR_ID
			JOIN LOCATION LA ON pim.location_Code =LA.DEPT_ID 
			JOIN 
			(SELECT MEMO_ID AS MRR_ID FROM  #PURTABLE WHERE MODE='PUR'
			 UNION 
			 SELECT REF_MRR_ID AS MRR_ID FROM #PURTABLE_PBM) TPT ON PIM.MRR_ID=TPT.MRR_ID 
			 
			LEFT OUTER JOIN PURCONFIGDET PAC ON PID.FORM_ID=PAC.FORMID 
			LEFT OUTER JOIN GST_POSTING_CONFIG GPC  ON GPC.GST_PERCENTAGE=ISNULL(PID.GST_PERCENTAGE,0) AND GPC.XN_TYPE='PUR'
			LEFT JOIN FORM FM ON FM.FORM_ID=PID.FORM_ID				
			WHERE 
			
			(ISNULL(LA.LOC_TYPE,0)=1 OR ISNULL(LA.ACCOUNT_POSTING_AT_HO,0)=1) AND 
			--GENERATE ERROR IF ITEM WITH INVALID FORM SELECTION IS FOUND.
			((PID.FORM_ID='0000000' AND PIM.INV_DT<@DGSTCUTOFFDATE)
			OR (PIM.INV_DT>=@DGSTCUTOFFDATE  AND GPC.XN_TYPE IS NULL)
			OR (ISNULL(PID.HSN_CODE,'') IN ('','0000000000') AND PIM.INV_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'')
			--GENERATE ERROR IF PURCHASE ACCOUNT IS NOT SPECIFIED.
			OR ((ISNULL(PAC.PURAC,'') = '' OR ISNULL(PAC.PURAC,'') = '0000000000') AND PIM.INV_DT<@DGSTCUTOFFDATE) 
			--GENERATE ERROR IF TAX IS TO BE POSTED SEPARATELY AND NO TAX ACCOUNT IS SPECIFIED.
			OR (FM.POST_TAX_SEPARATELY=1 AND PID.TAX_PERCENTAGE<>0 AND (ISNULL(PAC.TAXAC,'')='' 
				OR PAC.TAXAC='0000000000')  AND PIM.INV_DT<@DGSTCUTOFFDATE) 
			--GENERATE ERROR IF SUPPLIER BILL NO IS NOT SPECIFIED IN THE PURCHASE
			OR ISNULL(PIM.BILL_NO,'') = ''
			--GENERATE ERROR IF FREIGHT SHOULD BE SEPARATELY POSTED AND FREIGHT ACCOUNT IS NOT SPECIFIED.
			OR (PIM.FREIGHT<>0 AND @BPOSTFREIGHTSEPARATELY=1  AND PIM.INV_DT<@DGSTCUTOFFDATE  
								AND (@CFREIGHTACCODE = '' OR @CFREIGHTACCODE = '0000000000'))
			OR (PIM.EXCISE_DUTY_AMOUNT<>0 AND @BPOSTEXCISESEPARATELY=1 AND (@CEXCISEDUTYACCODE = '' OR @CEXCISEDUTYACCODE = '0000000000'))
			--GENERATE ERROR IF OTHER CHARGES SHOULD BE SEPARATELY POSTED AND OTHER CHARGES ACCOUNT IS NOT SPECIFIED.
			OR (PIM.OTHER_CHARGES<>0 AND @BPOSTOTHERCHARGESSEPARATELY=1  AND PIM.INV_DT<@DGSTCUTOFFDATE 
			    AND (@COTHERCHARGESACCODE='' OR @COTHERCHARGESACCODE='0000000000'))
			--GENERATE ERROR IF ROUNDOFF SHOULD BE SEPARATELY POSTED AND ROUNDOFF ACCOUNT IS NOT SPECIFIED.
			OR (PIM.ROUND_OFF<>0 AND (@BPOSTROUNDOFFSEPARATELY=1   OR (PIM.INV_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>''))
				 AND (@CROUNDOFFACCODE = '' OR @CROUNDOFFACCODE = '0000000000'))
			--GENERATE ERROR IF PURCHASE IS NOT CANCELLED AND IT HAS TOTAL AMOUNT=0
			OR PIM.TOTAL_AMOUNT=0) 
			UNION ALL
			SELECT DISTINCT PIM.MRR_ID,PIM.MRR_NO,INV_DT AS XN_DT,'PUR' AS XN_TYPE
				  ,'CASH DISCOUNT AC NOT SPECIFIED.'  AS ERR_DESC		
			FROM PIM01106 PIM
			JOIN LOCATION LA ON pim.location_Code =LA.DEPT_ID 
			JOIN 
			(SELECT MEMO_ID AS MRR_ID FROM  #PURTABLE WHERE MODE='PUR'
			 UNION 
			 SELECT REF_MRR_ID AS MRR_ID FROM #PURTABLE_PBM) TPT ON PIM.MRR_ID=TPT.MRR_ID 
			JOIN PID01106 PD ON PIM.MRR_ID=PD.MRR_ID
			WHERE 
			(ISNULL(LA.LOC_TYPE,0)=1 OR ISNULL(LA.ACCOUNT_POSTING_AT_HO,0)=1) AND 
			ISNULL(PD.CASHDISCOUNTAMOUNT,0)<>0 AND (@CCASHDISCOUNTAC = '' OR @CCASHDISCOUNTAC = '0000000000')
	       	       
	        SET @CSTEP = 250
	        --DELETE MRR_ID FROM TEPM TABLE WHICH HAVE SOME ERROR
	        DELETE A 
	        FROM #PURTABLE A 
	        JOIN @ERRORS B ON A.MEMO_ID = B.XN_ID AND A.MODE=B.XN_TYPE
	       
	        --SELECT COUNT(*) FROM #PURTABLE
	        SET @CSTEP = 260
	        IF OBJECT_ID('TEMPDB..#V_PROCESS','U') IS NOT NULL
				DROP TABLE #V_PROCESS
			
			SET @CSTEP = 270
			/*
				BILL_LEVEL_TAX_METHOD : 1 IS EXCLUSIVE
										2 IS INCLUSIVE
														
			*/
			
			--A SINGLE PURCHASE MEMO CAN HAVE MULTIPLE PURCHASE AND TAX ACCOUNTS BASED ON MULTIPLE FORMS
		 	SELECT  TPT.REF_MEMO_ID 
		 			,TPT.MRR_ID
		 			,PAC.PURAC
		 			,PAC.TAXAC
					,'0000000000' AS IGST_XN_AC_CODE
					,'0000000000' AS IGST_TAX_AC_CODE
					,'0000000000' AS LOCAL_GST_XN_AC_CODE
					,'0000000000' AS CGST_TAX_AC_CODE
					,'0000000000' AS SGST_TAX_AC_CODE
		 			--FOR INCLUSIVE TAX DEDUCE THE AMOUNT FROM THE SUBTOTAL AS TAX WOULD BE POSTED SEPARATELY
		 			,PM.AC_CODE
		 			,SUM((((ISNULL(PM.POSTTAXDISCOUNTAMOUNT,0))/PM.SUBTOTAL)*(PD.PURCHASE_PRICE*PD.INVOICE_QUANTITY))) 
		 			 AS DISCOUNTAMOUNT
		 			,(CASE WHEN ISNULL(FRIGHT_PAY_MODE,0)<>2 THEN FREIGHT ELSE 0 END) AS FREIGHT
		 			,PM.OTHER_CHARGES AS OTHERCHARGES
		 			,SUM(((PM.EXCISE_DUTY_AMOUNT/PM.SUBTOTAL)*(PD.PURCHASE_PRICE*PD.INVOICE_QUANTITY))) AS EXCISEDUTYAMOUNT
		 			,SUM(ISNULL(PD.TAX_ROUND_OFF,0)) AS TAX_ROUND_OFF	
		 			,ROUND(SUM((PD.PURCHASE_PRICE*PD.INVOICE_QUANTITY)-((PM.DISCOUNT_AMOUNT/PM.SUBTOTAL)*
		 				((PD.PURCHASE_PRICE*PD.INVOICE_QUANTITY)))
		 			-(CASE WHEN PM.BILL_LEVEL_TAX_METHOD=2 THEN PD.TAX_AMOUNT ELSE 0 END)
		 			+(CASE WHEN POST_TAX_SEPARATELY=0 THEN PD.TAX_AMOUNT ELSE 0 END)
		 			),2) AS PURAMOUNT
		 			,ROUND(SUM(CASE WHEN 	FM.POST_TAX_SEPARATELY=1 THEN  PD.TAX_AMOUNT ELSE 0 END),2) AS TAXAMOUNT
		 			,ROUND(SUM(ISNULL(PD.CASHDISCOUNTAMOUNT,0)*PD.QUANTITY),2) AS CASHDISCOUNTAMOUNT
		 			,CONVERT(NUMERIC(10,2),0) AS IGST_AMOUNT
		 			,CONVERT(NUMERIC(10,2),0) AS CGST_AMOUNT
		 			,CONVERT(NUMERIC(10,2),0) AS SGST_AMOUNT
		 			,TPT.XN_TYPE
		 			,TPT.REF_BILL_NO
		 			,TPT.REF_BILL_DT
		 			,TPT.CANCELLED
		 			,CONVERT(NUMERIC(6,2),0) AS FREIGHT_GST_PERCENTAGE
		 			,CONVERT(NUMERIC(6,2),0) AS OTHER_CHARGES_GST_PERCENTAGE
		 			,CONVERT(NUMERIC(10,2),0) AS FREIGHT_IGST_AMOUNT
		 			,CONVERT(NUMERIC(10,2),0) AS FREIGHT_CGST_AMOUNT
		 			,CONVERT(NUMERIC(10,2),0) AS FREIGHT_SGST_AMOUNT
		 			,CONVERT(NUMERIC(10,2),0) AS OTHER_CHARGES_IGST_AMOUNT
		 			,CONVERT(NUMERIC(10,2),0) AS OTHER_CHARGES_CGST_AMOUNT
		 			,CONVERT(NUMERIC(10,2),0) AS OTHER_CHARGES_SGST_AMOUNT
		 			,CONVERT(VARCHAR(5),'') AS LOC_GST_STATE_CODE
		 			,CONVERT(VARCHAR(5),'') AS PARTY_GST_STATE_CODE
				    ,CONVERT(NUMERIC(6,2),0)  AS FREIGHT_RO
				    ,CONVERT(NUMERIC(6,2),0)  OTHER_CHARGES_RO       
		 			,ISNULL(LT.CASHDISCOUNT,0) AS CD_PCT
		 			,PM.ROUND_OFF
		 			,PM.MANUAL_ROUNDOFF
			INTO #V_PROCESS
			FROM PIM01106 PM 
			JOIN PID01106 PD ON PM.MRR_ID=PD.MRR_ID
			
			JOIN 
			(SELECT B.CANCELLED,B.MRR_ID AS REF_MEMO_ID,MEMO_ID AS MRR_ID,REF_BILL_NO,REF_BILL_DT,'PUR' AS XN_TYPE FROM  #PURTABLE A
			 JOIN PIM01106 B ON B.MRR_ID=A.MEMO_ID WHERE MODE='PUR'
			) TPT ON PM.MRR_ID=TPT.MRR_ID 
			 
			JOIN FORM FM ON PD.FORM_ID = FM.FORM_ID
			JOIN PURCONFIGDET PAC ON FM.FORM_ID=PAC.FORMID
			LEFT OUTER JOIN LEDGER_TERMS LT ON PM.TERMS_CODE=LT.TERMS_CODE 			
			
		    WHERE (PM.INV_DT<@DGSTCUTOFFDATE OR @DGSTCUTOFFDATE='') AND PM.SUBTOTAL<>0   
		    GROUP BY TPT.REF_MEMO_ID
					,TPT.MRR_ID 
					,PAC.PURAC
		 			,PAC.TAXAC
		 			,FM.POST_TAX_SEPARATELY
		 			,PM.AC_CODE
					,(CASE WHEN ISNULL(FRIGHT_PAY_MODE,0)<>2 THEN FREIGHT ELSE 0 END)
		 			,PM.OTHER_CHARGES
					,TPT.XN_TYPE
					,TPT.REF_BILL_NO
					,TPT.REF_BILL_DT
					,TPT.CANCELLED
					,OH_TAX_METHOD
					,ISNULL(LT.CASHDISCOUNT,0)
					,PM.ROUND_OFF
					,PM.MANUAL_ROUNDOFF
		UNION

		SELECT       TPT.REF_MEMO_ID
					,TPT.MRR_ID
		 			,'' AS PURAC
		 			,'' AS TAXAC
					,IGST_XN_AC_CODE
					,IGST_TAX_AC_CODE
					,LOCAL_GST_XN_AC_CODE
					,CGST_TAX_AC_CODE
					,SGST_TAX_AC_CODE
		 			--FOR INCLUSIVE TAX DEDUCE THE AMOUNT FROM THE SUBTOTAL AS TAX WOULD BE POSTED SEPARATELY
		 			,PM.AC_CODE
		 			,ROUND(SUM((((ISNULL(PM.POSTTAXDISCOUNTAMOUNT,0))/PM.SUBTOTAL)*(PD.PURCHASE_PRICE*PD.INVOICE_QUANTITY))),2) 
		 			 AS DISCOUNTAMOUNT
					,(CASE WHEN ISNULL(FRIGHT_PAY_MODE,0)<>2 THEN FREIGHT_TAXABLE_VALUE ELSE 0 END) AS FREIGHT
		 			,OTHER_CHARGES_TAXABLE_VALUE AS OTHERCHARGES
		 			,ROUND(SUM(((PM.EXCISE_DUTY_AMOUNT/PM.SUBTOTAL)*(PD.PURCHASE_PRICE*PD.INVOICE_QUANTITY))),2) AS EXCISEDUTYAMOUNT
		 			,SUM(ISNULL(PD.TAX_ROUND_OFF,0)) AS TAX_ROUND_OFF	
		 			,SUM(XN_VALUE_WITHOUT_GST) AS PURAMOUNT
		 			,0 AS TAXAMOUNT
		 			,ROUND(SUM(ISNULL(PD.CASHDISCOUNTAMOUNT,0)*PD.QUANTITY),2) AS CASHDISCOUNTAMOUNT
		 			,SUM(IGST_AMOUNT) AS IGST_AMOUNT
		 			,SUM(CGST_AMOUNT) AS CGST_AMOUNT
		 			,SUM(SGST_AMOUNT) AS SGST_AMOUNT
		 			,TPT.XN_TYPE
		 			,TPT.REF_BILL_NO
		 			,TPT.REF_BILL_DT
		 			,TPT.CANCELLED
					,FREIGHT_GST_PERCENTAGE
 					,OTHER_CHARGES_GST_PERCENTAGE
 					,FREIGHT_IGST_AMOUNT
 					,FREIGHT_CGST_AMOUNT
 					,FREIGHT_SGST_AMOUNT
 					,OTHER_CHARGES_IGST_AMOUNT
 					,OTHER_CHARGES_CGST_AMOUNT
 					,OTHER_CHARGES_SGST_AMOUNT
 					,LOC.GST_STATE_CODE AS LOC_GST_STATE_CODE
		 			,LMP.AC_GST_STATE_CODE AS PARTY_GST_STATE_CODE
 			        ,(CASE WHEN ISNULL(FRIGHT_PAY_MODE,0)<>2 THEN 
 			         PM.FREIGHT-(PM.FREIGHT_TAXABLE_VALUE+(CASE WHEN PM.OH_TAX_METHOD=2 THEN PM.FREIGHT_IGST_AMOUNT+PM.FREIGHT_CGST_AMOUNT+PM.FREIGHT_SGST_AMOUNT ELSE 0 END))
 			         ELSE 0 END) AS FREIGHT_RO
			        ,PM.OTHER_CHARGES-(PM.OTHER_CHARGES_TAXABLE_VALUE+(CASE WHEN PM.OH_TAX_METHOD=2 THEN PM.OTHER_CHARGES_IGST_AMOUNT+PM.OTHER_CHARGES_CGST_AMOUNT+PM.OTHER_CHARGES_SGST_AMOUNT ELSE 0 END)) AS OTHER_CHARGES_RO       
					,ISNULL(LT.CASHDISCOUNT,0) AS CD_PCT					
					,PM.ROUND_OFF
					,PM.MANUAL_ROUNDOFF
			FROM PIM01106 PM 
			JOIN PID01106 PD ON PM.MRR_ID=PD.MRR_ID
			
			JOIN 
			(SELECT B.CANCELLED,MEMO_ID AS REF_MEMO_ID,MEMO_ID AS MRR_ID,REF_BILL_NO,REF_BILL_DT,'PUR' AS XN_TYPE
			 FROM  #PURTABLE A
			 JOIN PIM01106 B ON B.MRR_ID=A.MEMO_ID WHERE MODE='PUR'
			) TPT ON PM.MRR_ID=TPT.MRR_ID 
			
			JOIN GST_POSTING_CONFIG GPC ON GPC.GST_PERCENTAGE=PD.GST_PERCENTAGE
			JOIN LOCATION LOC ON LOC.DEPT_ID=PM.MRR_CREATION_DEPT_ID
			JOIN LMP01106 LMP ON LMP.AC_CODE=PM.AC_CODE
			LEFT OUTER JOIN LEDGER_TERMS LT ON PM.TERMS_CODE=LT.TERMS_CODE 
			
		    WHERE INV_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND PM.SUBTOTAL<>0 
		    AND GPC.XN_TYPE='PUR'
		    GROUP BY TPT.REF_MEMO_ID 
					,TPT.MRR_ID
					,TPT.XN_TYPE
					,TPT.REF_BILL_NO
					,TPT.REF_BILL_DT
					,TPT.CANCELLED
					,IGST_XN_AC_CODE
					,IGST_TAX_AC_CODE
					,LOCAL_GST_XN_AC_CODE
					,CGST_TAX_AC_CODE
					,SGST_TAX_AC_CODE
		 			,PM.AC_CODE
		 			,FREIGHT
		 			,FRIGHT_PAY_MODE
		 			,OTHER_CHARGES
					,FREIGHT_GST_PERCENTAGE
 					,OTHER_CHARGES_GST_PERCENTAGE
 					,FREIGHT_TAXABLE_VALUE
 					,OTHER_CHARGES_TAXABLE_VALUE
 					,FREIGHT_IGST_AMOUNT
 					,FREIGHT_CGST_AMOUNT
 					,FREIGHT_SGST_AMOUNT
 					,OTHER_CHARGES_IGST_AMOUNT
 					,OTHER_CHARGES_CGST_AMOUNT
 					,OTHER_CHARGES_SGST_AMOUNT
		 			,LOC.GST_STATE_CODE
		 			,LMP.AC_GST_STATE_CODE		 			
		 			,OH_TAX_METHOD
		 			,ISNULL(LT.CASHDISCOUNT,0)
		 			,PM.ROUND_OFF
		 			,PM.MANUAL_ROUNDOFF
		 			
		CREATE INDEX IX_V_PROCESS_MRR_ID ON #V_PROCESS(MRR_ID,XN_TYPE)
		
		
		SELECT @CPREVMRRID='',@CPREVXNTYPE=''
		
		--SELECT 'CHECK VPROCESS',* FROM #V_PROCESS 
		
        IF OBJECT_ID('TEMPDB..#V_PROCESS_VCH','U') IS NOT NULL
			DROP TABLE #V_PROCESS_VCH
		
		SELECT AC_CODE,CASHDISCOUNTAMOUNT,REF_MEMO_ID,XN_TYPE INTO #V_PROCESS_VCH FROM #V_PROCESS WHERE 1=2
		

		SELECT @CMRRID='',@CXNTYPE='',@CSUPPLIER='',@CPREVREFMEMOID='',@BOLDCANCELLED=0
		
		SELECT TOP 1 @CMRRID=MRR_ID,@CREFMEMOID=REF_MEMO_ID,@CXNTYPE=XN_TYPE,@CSUPPLIER=AC_CODE,
		@CLASTBILLNO=REF_BILL_NO, @DLASTINVDT = REF_BILL_DT,@CLOCGSTSTATECODE=LOC_GST_STATE_CODE,
		@CPARTYGSTSTATECODE=PARTY_GST_STATE_CODE,@BCANCELLED=CANCELLED,@NCDPCT=CD_PCT,@NROUNDOFF=ROUND_OFF,
		@BMANUALROFF=ISNULL(MANUAL_ROUNDOFF,0) 
		FROM #V_PROCESS ORDER BY XN_TYPE,REF_MEMO_ID

		
		SET @CSTEP = 280
		WHILE EXISTS(SELECT TOP 1 'U' FROM #V_PROCESS)
		BEGIN
			SET @CSTEP = 290
		
			
			IF @CPREVREFMEMOID<>@CREFMEMOID OR @CXNTYPE<>@CPREVXNTYPE
			BEGIN
				SELECT @CPREVREFMEMOID=@CREFMEMOID,@CPREVXNTYPE=@CXNTYPE,@BOLDCANCELLED=@BCANCELLED,@CPREVMRRID=@CMRRID
				
				--SUPPLIER SHOULD BE CREDITED WITH TOTAL AMOUNT
				IF @CXNTYPE='PUR'
					INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT ) 
					SELECT @CREFMEMOID,AC_CODE,-TOTAL_AMOUNT
					FROM PIM01106 WHERE MRR_ID=@CREFMEMOID
				ELSE
					INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT ) 
					SELECT @CREFMEMOID,B.AC_CODE,SUM(B.TOTAL_AMOUNT)*-1
					FROM #PURTABLE_PBM A
					JOIN PIM01106 B ON B.MRR_ID=A.REF_MRR_ID
					WHERE A.MEMO_ID=@CREFMEMOID
					GROUP BY B.AC_CODE
				
			END	
			
			SET @BGSTBILL=0
			IF @DLASTINVDT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>''
				SET @BGSTBILL=1
				
			SET @CSTEP = 300
			--PURCHASE ACCOUNT SHOULD BE DEBITED WITH THE RESPECTIVE SUBTOTAL
			IF  @BGSTBILL=0
				INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT ) 
				SELECT @CREFMEMOID,PURAC,PURAMOUNT
				FROM #V_PROCESS
				WHERE MRR_ID=@CMRRID AND XN_TYPE=@CXNTYPE AND PURAMOUNT<>0
			ELSE
				INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT ) 
				SELECT @CREFMEMOID,IGST_XN_AC_CODE,PURAMOUNT
				FROM #V_PROCESS
				WHERE MRR_ID=@CMRRID AND XN_TYPE=@CXNTYPE AND @CLOCGSTSTATECODE<>@CPARTYGSTSTATECODE
				UNION ALL
				SELECT @CREFMEMOID,LOCAL_GST_XN_AC_CODE,PURAMOUNT
				FROM #V_PROCESS
				WHERE MRR_ID=@CMRRID AND XN_TYPE=@CXNTYPE AND @CLOCGSTSTATECODE=@CPARTYGSTSTATECODE
															

		  IF @BGSTBILL=0
				SELECT TOP 1 @CSETOFFACCODE=PURAC FROM #V_PROCESS WHERE MRR_ID=@CMRRID AND XN_TYPE=@CXNTYPE
		  ELSE
				SELECT TOP 1 @CSETOFFACCODE=(CASE WHEN @CLOCGSTSTATECODE<>@CPARTYGSTSTATECODE 
				THEN IGST_XN_AC_CODE ELSE LOCAL_GST_XN_AC_CODE END)
				FROM #V_PROCESS WHERE MRR_ID=@CMRRID AND XN_TYPE=@CXNTYPE  		
			
			SET @CSTEP = 310
			--TAX AMOUNT SHOULD BE DEBITED WITH THE RESPECTIVE TAX_AMOUNT
			IF  @BGSTBILL=0
				INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT ) 
				SELECT @CREFMEMOID,TAXAC,TAXAMOUNT
				FROM #V_PROCESS
				WHERE MRR_ID=@CMRRID AND XN_TYPE=@CXNTYPE  AND TAXAMOUNT<>0
			ELSE
				INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT ) 
				SELECT  @CREFMEMOID,IGST_TAX_AC_CODE,IGST_AMOUNT
				FROM #V_PROCESS
				WHERE MRR_ID=@CMRRID AND XN_TYPE=@CXNTYPE  AND IGST_AMOUNT<>0
				UNION ALL
				SELECT  @CREFMEMOID,CGST_TAX_AC_CODE,CGST_AMOUNT
				FROM #V_PROCESS
				WHERE MRR_ID=@CMRRID AND XN_TYPE=@CXNTYPE  AND CGST_AMOUNT<>0
				UNION ALL
				SELECT  @CREFMEMOID,SGST_TAX_AC_CODE,SGST_AMOUNT
				FROM #V_PROCESS
				WHERE MRR_ID=@CMRRID AND XN_TYPE=@CXNTYPE  AND SGST_AMOUNT<>0
																														
			SET @CSTEP = 320
			INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT ) 
			SELECT @CREFMEMOID,(CASE WHEN @BPOSTDISCOUNTSEPARATELY=1 THEN @CDISCACCODE ELSE @CSETOFFACCODE END),-DISCOUNTAMOUNT
			FROM #V_PROCESS
			WHERE MRR_ID=@CMRRID AND XN_TYPE=@CXNTYPE AND DISCOUNTAMOUNT<>0
			
			SET @CSTEP = 330

			--FREIGHT AMOUNT SHOULD BE CREDITED  
			IF @BGSTBILL=1	
			BEGIN				  
				  IF @BPOSTFREIGHTSEPARATELY=1	
					  INSERT @VCHC (XN_ID,XN_NO,AC_CODE,AMOUNT)   
					  SELECT TOP 1 REF_MEMO_ID,REF_BILL_NO,@CFREIGHTACCODE,FREIGHT  
					  FROM #V_PROCESS  A
					  WHERE MRR_ID=@CMRRID AND FREIGHT<>0 
				  ELSE
					  INSERT @VCHC (XN_ID,XN_NO,AC_CODE,AMOUNT)   
					  SELECT TOP 1 REF_MEMO_ID,REF_BILL_NO,B.IGST_XN_AC_CODE,FREIGHT  
					  FROM #V_PROCESS  A
					  JOIN GST_POSTING_CONFIG B ON A.FREIGHT_GST_PERCENTAGE=B.GST_PERCENTAGE
					  WHERE MRR_ID=@CMRRID AND FREIGHT<>0  AND FREIGHT_IGST_AMOUNT<>0 AND B.XN_TYPE='PUR'
					  UNION ALL
					  SELECT TOP 1 REF_MEMO_ID,REF_BILL_NO,B.LOCAL_GST_XN_AC_CODE,FREIGHT
					  FROM #V_PROCESS  A
					  JOIN GST_POSTING_CONFIG B ON A.FREIGHT_GST_PERCENTAGE=B.GST_PERCENTAGE
					  WHERE MRR_ID=@CMRRID AND FREIGHT<>0  AND FREIGHT_CGST_AMOUNT<>0 AND B.XN_TYPE='PUR'

				  INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT )   
			  	  SELECT TOP 1 REF_MEMO_ID,REF_BILL_NO,B.IGST_TAX_AC_CODE,FREIGHT_IGST_AMOUNT
				  FROM #V_PROCESS  A
				  JOIN GST_POSTING_CONFIG B ON A.FREIGHT_GST_PERCENTAGE=B.GST_PERCENTAGE
				  WHERE MRR_ID=@CMRRID AND  FREIGHT_IGST_AMOUNT<>0 AND B.XN_TYPE='PUR'  				  
				  UNION ALL
				  SELECT TOP 1  REF_MEMO_ID,REF_BILL_NO,B.CGST_TAX_AC_CODE,FREIGHT_CGST_AMOUNT
				  FROM #V_PROCESS  A
				  JOIN GST_POSTING_CONFIG B ON A.FREIGHT_GST_PERCENTAGE=B.GST_PERCENTAGE
				  WHERE MRR_ID=@CMRRID AND FREIGHT_CGST_AMOUNT<>0 AND B.XN_TYPE='PUR' 				  
				  UNION ALL
				  SELECT TOP 1  REF_MEMO_ID,REF_BILL_NO,B.SGST_TAX_AC_CODE,FREIGHT_SGST_AMOUNT
				  FROM #V_PROCESS  A
				  JOIN GST_POSTING_CONFIG B ON A.FREIGHT_GST_PERCENTAGE=B.GST_PERCENTAGE
				  WHERE MRR_ID=@CMRRID AND FREIGHT_SGST_AMOUNT<>0 AND B.XN_TYPE='PUR'  				  
   			END
   			ELSE
			IF @BGSTBILL=0	
				  INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT )   
				  SELECT TOP 1 REF_MEMO_ID,REF_BILL_NO,(CASE WHEN @BPOSTFREIGHTSEPARATELY=1 THEN @CFREIGHTACCODE ELSE PURAC END),FREIGHT  
				  FROM #V_PROCESS  A WHERE MRR_ID=@CMRRID AND FREIGHT<>0  
			    
			SET @CSTEP = 340  
			--OTHER CHARGES AMOUNT SHOULD BE CREDITED  
			IF @BGSTBILL=1	
			BEGIN
				  IF @BPOSTOTHERCHARGESSEPARATELY=1	
					  INSERT @VCHC (XN_ID,XN_NO,AC_CODE,AMOUNT)   
					  SELECT TOP 1 REF_MEMO_ID,REF_BILL_NO,@COTHERCHARGESACCODE,OTHERCHARGES
					  FROM #V_PROCESS  A
					  WHERE MRR_ID=@CMRRID AND OTHERCHARGES<>0 
				  ELSE
					  INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT )   
					  SELECT TOP 1 REF_MEMO_ID,REF_BILL_NO,B.IGST_XN_AC_CODE,OTHERCHARGES  
					  FROM #V_PROCESS  A
					  JOIN GST_POSTING_CONFIG B ON A.OTHER_CHARGES_GST_PERCENTAGE=B.GST_PERCENTAGE
					  WHERE MRR_ID=@CMRRID AND OTHERCHARGES<>0  AND OTHER_CHARGES_IGST_AMOUNT<>0 AND B.XN_TYPE='PUR'
					  UNION ALL
					  SELECT TOP 1 REF_MEMO_ID,REF_BILL_NO,B.LOCAL_GST_XN_AC_CODE,OTHERCHARGES
					  FROM #V_PROCESS  A
					  JOIN GST_POSTING_CONFIG B ON A.OTHER_CHARGES_GST_PERCENTAGE=B.GST_PERCENTAGE
					  WHERE MRR_ID=@CMRRID AND OTHERCHARGES<>0  AND OTHER_CHARGES_CGST_AMOUNT<>0 AND B.XN_TYPE='PUR'

				  INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT )   
				  SELECT TOP 1  REF_MEMO_ID,REF_BILL_NO,B.IGST_TAX_AC_CODE,OTHER_CHARGES_IGST_AMOUNT
				  FROM #V_PROCESS  A
				  JOIN GST_POSTING_CONFIG B ON A.OTHER_CHARGES_GST_PERCENTAGE=B.GST_PERCENTAGE
				  WHERE MRR_ID=@CMRRID AND OTHER_CHARGES_IGST_AMOUNT<>0 AND B.XN_TYPE='PUR'  				  
				  UNION ALL
				  SELECT TOP 1  REF_MEMO_ID,REF_BILL_NO,B.CGST_TAX_AC_CODE,OTHER_CHARGES_CGST_AMOUNT
				  FROM #V_PROCESS  A
				  JOIN GST_POSTING_CONFIG B ON A.OTHER_CHARGES_GST_PERCENTAGE=B.GST_PERCENTAGE
				  WHERE MRR_ID=@CMRRID AND OTHER_CHARGES_CGST_AMOUNT<>0 AND B.XN_TYPE='PUR'  				  
				  UNION ALL
				  SELECT TOP 1  REF_MEMO_ID,REF_BILL_NO,B.SGST_TAX_AC_CODE,OTHER_CHARGES_SGST_AMOUNT
				  FROM #V_PROCESS  A
				  JOIN GST_POSTING_CONFIG B ON A.OTHER_CHARGES_GST_PERCENTAGE=B.GST_PERCENTAGE
				  WHERE MRR_ID=@CMRRID AND OTHER_CHARGES_SGST_AMOUNT<>0 AND B.XN_TYPE='PUR' 				  
			END
			ELSE
			IF @BGSTBILL=0	
				  INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT )   
				  SELECT TOP 1 REF_MEMO_ID,REF_BILL_NO,(CASE WHEN @BPOSTOTHERCHARGESSEPARATELY=1 THEN @COTHERCHARGESACCODE ELSE PURAC END),OTHERCHARGES  
				  FROM #V_PROCESS  A WHERE MRR_ID=@CMRRID AND OTHERCHARGES<>0  
	  			
			SET @CSTEP = 350
			
			SET @NROLIMIT=(CASE WHEN @BMANUALROFF=1 AND ABS(@NROUNDOFF)>.99 THEN ABS(@NROUNDOFF) ELSE 0.99 END)
			
			--IF @CMRRID='HO0111800000HO00007688'
			--SELECT @CMRRID AS MRR_ID,@BMANUALROFF AS MANUALROFF,@NROUNDOFF AS NROIUNDOFF,@CREFMEMOID AS REF_MEMO_ID,(CASE WHEN @BPOSTROUNDOFFSEPARATELY=1 OR @BGSTBILL=1 THEN @CROUNDOFFACCODE ELSE @CSETOFFACCODE END) AS RO_AC_CODE,
			--B.TOTAL_AMOUNT AS TOTAMT,B.POSTTAXDISCOUNTAMOUNT,SUM(PURAMOUNT) AS PURAMOUNT,
			--SUM(ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(TAXAMOUNT,0)) AS GST,
			--	B.FREIGHT,(CASE WHEN B.OH_TAX_METHOD=1 THEN ISNULL(B.FREIGHT_IGST_AMOUNT,0)+ISNULL(B.FREIGHT_CGST_AMOUNT,0)+ISNULL(B.FREIGHT_SGST_AMOUNT,0) ELSE 0 END) AS FREIGHT_GST,
			--	B.EXCISE_DUTY_AMOUNT,B.OTHER_CHARGES,(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(B.OTHER_CHARGES_IGST_AMOUNT,0)+
			--	ISNULL(B.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_SGST_AMOUNT,0) ELSE 0 END) AS OC_GST,
			--	(B.TOTAL_AMOUNT+B.POSTTAXDISCOUNTAMOUNT-B.EXCISE_DUTY_AMOUNT-(SUM(PURAMOUNT+ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+
			--				 ISNULL(TAXAMOUNT,0))+
			--	(CASE WHEN ISNULL(FRIGHT_PAY_MODE,0)<>2 THEN  B.FREIGHT+(CASE WHEN B.OH_TAX_METHOD=1 THEN ISNULL(B.FREIGHT_IGST_AMOUNT,0)+ISNULL(B.FREIGHT_CGST_AMOUNT,0)+ISNULL(B.FREIGHT_SGST_AMOUNT,0)
			--	 ELSE 0 END) ELSE 0 END)+
			--	B.OTHER_CHARGES+(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(B.OTHER_CHARGES_IGST_AMOUNT,0)+
			--	ISNULL(B.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_SGST_AMOUNT,0) ELSE 0 END))
			--	)  AS R_O,@NROLIMIT AS RO_LIMIT				
				
			--FROM #V_PROCESS A
			--JOIN PIM01106 B ON A.MRR_ID=B.MRR_ID
			--WHERE A.MRR_ID=@CMRRID AND XN_TYPE=@CXNTYPE
			--GROUP BY FRIGHT_PAY_MODE,B.FREIGHT,B.OTHER_CHARGES,BILL_LEVEL_TAX_METHOD,B.OH_TAX_METHOD,
			--B.FREIGHT_IGST_AMOUNT,B.FREIGHT_CGST_AMOUNT,B.FREIGHT_SGST_AMOUNT,B.POSTTAXDISCOUNTAMOUNT,
			--B.OTHER_CHARGES_IGST_AMOUNT,B.OTHER_CHARGES_CGST_AMOUNT,B.OTHER_CHARGES_SGST_AMOUNT,B.TOTAL_AMOUNT,B.EXCISE_DUTY_AMOUNT
			 
							 							
			--ROUNDOFF AMOUNT SHOULD BE DEBITED
			INSERT @VCHC (XN_ID,AC_CODE,AMOUNT) 
			SELECT @CREFMEMOID,(CASE WHEN @BPOSTROUNDOFFSEPARATELY=1 OR @BGSTBILL=1 THEN @CROUNDOFFACCODE ELSE @CSETOFFACCODE END),
			(B.TOTAL_AMOUNT+B.POSTTAXDISCOUNTAMOUNT-B.EXCISE_DUTY_AMOUNT-(SUM(PURAMOUNT+ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+
							 ISNULL(TAXAMOUNT,0))+
				(CASE WHEN ISNULL(FRIGHT_PAY_MODE,0)<>2 THEN  B.FREIGHT+(CASE WHEN B.OH_TAX_METHOD=1 THEN ISNULL(B.FREIGHT_IGST_AMOUNT,0)+ISNULL(B.FREIGHT_CGST_AMOUNT,0)+ISNULL(B.FREIGHT_SGST_AMOUNT,0)
				 ELSE 0 END) ELSE 0 END)+
				B.OTHER_CHARGES+(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(B.OTHER_CHARGES_IGST_AMOUNT,0)+
				ISNULL(B.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_SGST_AMOUNT,0) ELSE 0 END))
				) AS AMOUNT
			FROM #V_PROCESS A
			JOIN PIM01106 B ON A.MRR_ID=B.MRR_ID
			
			WHERE A.MRR_ID=@CMRRID AND XN_TYPE=@CXNTYPE
			GROUP BY B.FREIGHT,FRIGHT_PAY_MODE,B.OTHER_CHARGES,BILL_LEVEL_TAX_METHOD,B.OH_TAX_METHOD,
			B.FREIGHT_IGST_AMOUNT,B.FREIGHT_CGST_AMOUNT,B.FREIGHT_SGST_AMOUNT,B.POSTTAXDISCOUNTAMOUNT,
			B.OTHER_CHARGES_IGST_AMOUNT,B.OTHER_CHARGES_CGST_AMOUNT,B.OTHER_CHARGES_SGST_AMOUNT,B.TOTAL_AMOUNT,B.EXCISE_DUTY_AMOUNT
			HAVING 
			ABS(B.TOTAL_AMOUNT+B.POSTTAXDISCOUNTAMOUNT-B.EXCISE_DUTY_AMOUNT-(SUM(PURAMOUNT+ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+
							 ISNULL(TAXAMOUNT,0))+
				(CASE WHEN ISNULL(FRIGHT_PAY_MODE,0)<>2 THEN  B.FREIGHT+(CASE WHEN B.OH_TAX_METHOD=1 THEN ISNULL(B.FREIGHT_IGST_AMOUNT,0)+ISNULL(B.FREIGHT_CGST_AMOUNT,0)+ISNULL(B.FREIGHT_SGST_AMOUNT,0)
				 ELSE 0 END) ELSE 0 END)+
				B.OTHER_CHARGES+(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(B.OTHER_CHARGES_IGST_AMOUNT,0)+
				ISNULL(B.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_SGST_AMOUNT,0) ELSE 0 END))
				)<=@NROLIMIT 
			UNION ALL
			SELECT TOP 1 @CREFMEMOID,(CASE WHEN @BPOSTROUNDOFFSEPARATELY=1 OR @BGSTBILL=1 THEN @CROUNDOFFACCODE ELSE @CSETOFFACCODE END),
			FREIGHT_RO+OTHER_CHARGES_RO FROM #V_PROCESS
			WHERE  MRR_ID=@CMRRID AND XN_TYPE=@CXNTYPE AND (FREIGHT_RO+OTHER_CHARGES_RO)<>0
			
			--IF @CMRRID='0101118000000100000034'
			--BEGIN
			--	SELECT * FROM @VCHC WHERE AC_CODE=@CROUNDOFFACCODE AND XN_ID=@CREFMEMOID
				
			--	SELECT 'CHECK R/O',@CREFMEMOID,(CASE WHEN @BPOSTROUNDOFFSEPARATELY=1 OR @BGSTBILL=1 THEN @CROUNDOFFACCODE ELSE @CSETOFFACCODE END),
			--	B.TOTAL_AMOUNT,SUM(PURAMOUNT) AS TAXABLE_VALUE,SUM(ISNULL(IGST_AMOUNT,0)+
			--		ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(TAX_AMOUNT,0)) AS GST,
			--		B.FREIGHT,(CASE WHEN B.OH_TAX_METHOD=1 THEN ISNULL(B.FREIGHT_IGST_AMOUNT,0)+ISNULL(B.FREIGHT_CGST_AMOUNT,0)+ISNULL(B.FREIGHT_SGST_AMOUNT,0) ELSE 0 END) AS FREIGHT_GST,
			--		B.OTHER_CHARGES,(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(B.OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_SGST_AMOUNT,0) ELSE 0 END) AS OC_GST
					
			--	FROM #V_PROCESS A
			--	JOIN PIM01106 B ON A.MRR_ID=B.MRR_ID
			--	WHERE A.MRR_ID=@CMRRID AND XN_TYPE=@CXNTYPE
			--	GROUP BY B.FREIGHT,B.OTHER_CHARGES,BILL_LEVEL_TAX_METHOD,B.OH_TAX_METHOD,
			--	B.FREIGHT_IGST_AMOUNT,B.FREIGHT_CGST_AMOUNT,B.FREIGHT_SGST_AMOUNT,
			--	B.OTHER_CHARGES_IGST_AMOUNT,B.OTHER_CHARGES_CGST_AMOUNT,B.OTHER_CHARGES_SGST_AMOUNT,B.TOTAL_AMOUNT
				
			--END
			
			SET @CSTEP = 360
			--EXCISEDUTY AMOUNT SHOULD BE DEBITED TO PURCHASE ACCOUNT
			INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT ) 
			SELECT @CREFMEMOID,(CASE WHEN @BPOSTEXCISESEPARATELY=1 THEN @CEXCISEDUTYACCODE ELSE @CSETOFFACCODE END),EXCISEDUTYAMOUNT
			FROM #V_PROCESS
			WHERE MRR_ID=@CMRRID AND XN_TYPE=@CXNTYPE AND EXCISEDUTYAMOUNT<>0
			
			SET @CSTEP = 365
						
			INSERT #V_PROCESS_VCH (AC_CODE,CASHDISCOUNTAMOUNT,REF_MEMO_ID,XN_TYPE)
			SELECT AC_CODE,CASHDISCOUNTAMOUNT,REF_MEMO_ID,XN_TYPE 
			FROM #V_PROCESS WHERE MRR_ID = @CMRRID AND XN_TYPE=@CXNTYPE 
			
			DELETE FROM #V_PROCESS WHERE MRR_ID = @CMRRID AND XN_TYPE=@CXNTYPE
			
			SELECT @CREFMEMOID='',@CXNTYPE=''
			SELECT TOP 1 @CREFMEMOID=REF_MEMO_ID,@CXNTYPE=XN_TYPE
			FROM #V_PROCESS ORDER BY XN_TYPE,REF_MEMO_ID
								
			--SELECT @CMRRID,@CLOCATIONID
			
			IF @CPREVREFMEMOID<>@CREFMEMOID OR @CXNTYPE<>@CPREVXNTYPE
			BEGIN
					
				SET @CSTEP = 370
				SET @CVMID = ''
				SELECT @CVMID = A.VM_ID 
				FROM POSTACT_VOUCHER_LINK A
				JOIN VM01106 B ON A.VM_ID=B.VM_ID
				WHERE B.CANCELLED=0 AND A.MEMO_ID = @CPREVREFMEMOID AND A.XN_TYPE=@CPREVXNTYPE
				
				SET @CVMID=ISNULL(@CVMID,'')
				
				SET @CSTEP = 380
				IF ISNULL(@CVMID,'') = ''
				BEGIN
					SET @CVMID = 'LATER-'+RTRIM(LTRIM(CONVERT(VARCHAR,@NCTR)))
					SET @NCTR = @NCTR+1
				END
				
				SET @CSTEP = 390

				INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )
				SELECT @CVMID,@CPREVREFMEMOID,@CPREVXNTYPE,LAST_UPDATE FROM PIM01106 WHERE MRR_ID = @CPREVMRRID
			
				SET @CSTEP = 400
				SELECT TOP 1
						   @DTMPVENDORBILLDT=INV_DT,
						   @CMRRLIST = MRR_NO,
						   @NTMPCRDISCOUNTPERCENTAGE = 0,
						   @CLOCATIONID= (CASE WHEN ISNULL(ACCOUNTS_DEPT_ID,'')='' AND ISNULL(B.ALLOW_PURCHASE_AT_HO,0)=0 
						   THEN a.location_Code  WHEN ISNULL(B.ALLOW_PURCHASE_AT_HO,0)=1 THEN A.DEPT_ID
						   ELSE ACCOUNTS_DEPT_ID END),
						   @COLDBILLTYPE='PUR',
						   @NCREDITDAYS=CREDIT_DAYS
				FROM PIM01106 A
				LEFT OUTER JOIN LOCATION B  ON B.DEPT_ID=A.DEPT_ID
				WHERE MRR_ID = @CPREVMRRID
									
				SET @CSTEP = 410
				INSERT @VDC ( VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE, 
							  CREDIT_DAYS, CR_DISCOUNT_PERCENTAGE,AC_NAME)
				SELECT @CVMID
					, 'LATER-'+CONVERT(VARCHAR,ROW_NUMBER() OVER(ORDER BY A.AC_CODE)+2) AS VD_ID
					, A.AC_CODE
					,'BILL# ' + @CLASTBILLNO + (CASE WHEN @DTMPVENDORBILLDT<> '' THEN ' DT. ' + CONVERT(VARCHAR(10),@DTMPVENDORBILLDT ,105 ) ELSE '' END) + 
						' MRR# ' + @CMRRLIST AS NARRATION
					,(CASE WHEN SUM(AMOUNT)>0 THEN SUM(AMOUNT) ELSE 0 END) AS DEBIT_AMOUNT
					,(CASE WHEN SUM(AMOUNT)<0 THEN ABS(SUM(AMOUNT)) ELSE 0 END) AS CREDIT_AMOUNT
					,(CASE WHEN SUM(AMOUNT) > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE
					,(CASE WHEN ISNULL(@NCREDITDAYS,0)=0 THEN B.CREDIT_DAYS ELSE @NCREDITDAYS END)
					,@NTMPCRDISCOUNTPERCENTAGE
					,B.AC_NAME
				FROM @VCHC A
				JOIN LMV01106 B ON A.AC_CODE = B.AC_CODE
				WHERE XN_ID = @CPREVREFMEMOID AND AMOUNT<>0
				GROUP BY A.AC_CODE,B.AC_NAME,B.CREDIT_DAYS
				ORDER BY X_TYPE,ABS(SUM(AMOUNT)) DESC
				
				--CREATING VOUCHERS FOR CASH DISCOUNT IF SPECIFIED IN LEDGER TERMS...
				INSERT @VDC ( VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE, 
					  CREDIT_DAYS, CR_DISCOUNT_PERCENTAGE,AC_NAME)
				SELECT @CVMID,'LATER-1' AS VD_ID,A.AC_CODE
					  ,'BILL# ' + @CLASTBILLNO + (CASE WHEN @DTMPVENDORBILLDT<> '' THEN ' DT. ' + CONVERT(VARCHAR(10),@DTMPVENDORBILLDT ,105 ) ELSE '' END) + 
						' MRR# ' + @CMRRLIST AS NARRATION						  
					  ,SUM(A.CASHDISCOUNTAMOUNT),0,'DR',ISNULL(@NCREDITDAYS,0),@NTMPCRDISCOUNTPERCENTAGE
					  ,B.AC_NAME
				FROM #V_PROCESS_VCH A
				JOIN LM01106 B ON A.AC_CODE=B.AC_CODE
				WHERE A.REF_MEMO_ID=@CPREVREFMEMOID AND A.XN_TYPE=@CPREVXNTYPE
				GROUP BY A.AC_CODE,B.AC_NAME	  
				HAVING SUM(A.CASHDISCOUNTAMOUNT)<>0
				UNION ALL
				SELECT @CVMID,'LATER-2' AS VD_ID,@CCASHDISCOUNTAC
					  ,'BILL# ' + @CLASTBILLNO + (CASE WHEN @DTMPVENDORBILLDT<> '' THEN ' DT. ' + CONVERT(VARCHAR(10),@DTMPVENDORBILLDT ,105 ) ELSE '' END) + 
						' MRR# ' + @CMRRLIST AS NARRATION						  
					  ,0,SUM(A.CASHDISCOUNTAMOUNT),'CR',ISNULL(@NCREDITDAYS,0),@NTMPCRDISCOUNTPERCENTAGE
					  ,B.AC_NAME	  	
				FROM #V_PROCESS_VCH A
				JOIN LM01106 B ON B.AC_CODE=@CCASHDISCOUNTAC
				WHERE A.REF_MEMO_ID=@CPREVREFMEMOID AND A.XN_TYPE=@CPREVXNTYPE
				GROUP BY B.AC_NAME
				HAVING SUM(A.CASHDISCOUNTAMOUNT)<>0
				
				SET @CSTEP = 420
				SELECT @CLASTACCODE = A.AC_CODE,@CLASTPARTYNAME= AC_NAME,@NNETAMOUNT=TOTAL_AMOUNT
				FROM PIM01106 A 
				JOIN LM01106 B ON A.AC_CODE = B.AC_CODE 
				JOIN LOCATION C ON C.DEPT_ID =(CASE WHEN ISNULL(A.ACCOUNTS_DEPT_ID,'')='' 
											   THEN a.location_Code  ELSE A.ACCOUNTS_DEPT_ID END)
				WHERE MRR_ID = @CPREVMRRID
				
				SELECT @CDEPTNAME=DEPT_NAME FROM LOCATION WHERE DEPT_ID=@CLOCATIONID					
				
				SET @CSTEP = 430
				SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC
				WHERE VM_ID = @CVMID

					
				----SETTING OFF THE DIFFERENCE AMOUNT TO PURCHASE ACCOUNT
				--IF ABS(@NDRTOTAL-@NCRTOTAL)<=@NDIFFLIMIT AND (@NDRTOTAL-@NCRTOTAL)<>0
				--BEGIN
				--	IF EXISTS (SELECT TOP 1 AC_CODE FROM @VDC WHERE VM_ID=@CVMID AND AC_CODE=@CROUNDOFFACCODE)
				--	BEGIN	
				--		SELECT TOP 1 @CVDID=VD_ID FROM @VDC WHERE VM_ID=@CVMID AND AC_CODE=@CROUNDOFFACCODE
								
				--		UPDATE @VDC SET DEBIT_AMOUNT=DEBIT_AMOUNT-(@NDRTOTAL-@NCRTOTAL)
				--		WHERE VM_ID=@CVMID AND VD_ID=@CVDID AND DEBIT_AMOUNT<>0

				--		UPDATE @VDC SET CREDIT_AMOUNT=CREDIT_AMOUNT+(@NDRTOTAL-@NCRTOTAL)
				--		WHERE VM_ID=@CVMID AND VD_ID=@CVDID AND CREDIT_AMOUNT<>0
						
				--		IF EXISTS (SELECT * FROM @VDC WHERE VM_ID=@CVMID AND VD_ID=@CVDID AND CREDIT_AMOUNT<0 OR DEBIT_AMOUNT<0)
				--		BEGIN
				--			UPDATE @VDC SET CREDIT_AMOUNT=ABS(DEBIT_AMOUNT),DEBIT_AMOUNT=0 WHERE VM_ID=@CVMID AND VD_ID=@CVDID AND DEBIT_AMOUNT<0
				--			UPDATE @VDC SET DEBIT_AMOUNT=ABS(CREDIT_AMOUNT),CREDIT_AMOUNT=0 WHERE VM_ID=@CVMID AND VD_ID=@CVDID AND CREDIT_AMOUNT<0
				--		END
				--	END
				--	ELSE
				--		INSERT @VDC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE, 
				--					  CREDIT_DAYS, CR_DISCOUNT_PERCENTAGE,AC_NAME,REF_BILL_NO)
				--		SELECT @CVMID
				--			, 'LATER-'+@CROUNDOFFACCODE AS VD_ID
				--			, @CROUNDOFFACCODE AS AC_CODE
				--			,'MRR# ' + @CMRRLIST AS NARRATION
				--			,(CASE WHEN (@NDRTOTAL-@NCRTOTAL)<0 THEN ABS(@NDRTOTAL-@NCRTOTAL) ELSE 0 END) AS DEBIT_AMOUNT
				--			,(CASE WHEN (@NDRTOTAL-@NCRTOTAL)>0 THEN (@NDRTOTAL-@NCRTOTAL) ELSE 0 END) AS CREDIT_AMOUNT
				--			,(CASE WHEN (@NDRTOTAL-@NCRTOTAL) > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE
				--			,0 AS CRDAYS
				--			,0
				--			,AC_NAME,'' AS REF_BILL_NO
				--		FROM LM01106 WHERE AC_CODE=	@CROUNDOFFACCODE		
				--END

				SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC
				WHERE VM_ID = @CVMID
			    		    
				SET @CSTEP = 440
				SET @NTOTQUANTITY= 0
				SET @NTOTNETAMOUNT = 0
			    
				SET @CSTEP = 445    
				SET @CVOUCHERNO = '' 
				SELECT TOP 1 @CVOUCHERNO = VOUCHER_NO FROM VM01106 WHERE VM_ID = @CVMID
				IF ISNULL(@CVOUCHERNO,'') = ''
					SET @CVOUCHERNO = @CVMID
		        

				SET @CSTEP = 450
				INSERT @VMC	( VM_ID,VOUCHER_NO,VOUCHER_DT, VOUCHER_CODE, DEPT_ID, 
								  BILL_TYPE, BILL_NO, BILL_ID, BILL_DT, BILL_AC_CODE, 
								  PARTY_NAME, QUANTITY, NET_AMOUNT, MRR_LIST, CANCELLED,DRTOTAL,CRTOTAL
								  ,VOUCHER_TYPE,DEPT_NAME,BILL_STATUS,VM_ORDER )
				SELECT TOP 1  @CVMID,@CVOUCHERNO,@DLASTINVDT AS VOUCHER_DT,@CVOUCHERCODE, @CLOCATIONID,--
								  @COLDBILLTYPE, @CLASTBILLNO,@CPREVREFMEMOID AS BILL_ID, @DLASTINVDT, @CLASTACCODE,
								  @CLASTPARTYNAME, @NTOTQUANTITY, @NTOTNETAMOUNT, @CMRRLIST,
								  @BCANCELLED AS  CANCELLED,@NDRTOTAL,@NCRTOTAL
								  ,'PURCHASE',@CDEPTNAME,'NEW',1
								
				SET @CSTEP = 470
				
				--BILL BY BILL REF  
				INSERT @TBILL_BY_BILL_REF  
				   (VD_ID,REF_NO,AMOUNT,X_TYPE,CR_DAYS,ADJ_REMARKS,LAST_UPDATE,VM_ID)  
				   SELECT A.VD_ID  
					  ,DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,@CLASTBILLNO,@DLASTINVDT,'CR',@CVMID)
					  ,A.CREDIT_AMOUNT+A.DEBIT_AMOUNT
					  ,(CASE WHEN DEBIT_AMOUNT > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE  
					  ,A.CREDIT_DAYS,(CASE WHEN 	DEBIT_AMOUNT > 0 THEN 'CD@'+(CASE WHEN ROUND(@NCDPCT,0)<>@NCDPCT 
									  THEN LTRIM(RTRIM(STR(@NCDPCT,7,2))) ELSE LTRIM(RTRIM(STR(@NCDPCT))) END)+'%'
									  ELSE 'PURCHASE' END) AS ADJ_REMARKS,GETDATE(),@CVMID AS VM_ID
				FROM @VDC A   
				JOIN LM01106 B ON A.AC_CODE=B.AC_CODE  
				JOIN LMP01106 C ON C.AC_CODE=B.AC_CODE
				WHERE VM_ID=@CVMID AND (CHARINDEX(B.HEAD_CODE,@CCREDITORHEADS)>0 OR ISNULL(C.ALLOW_CREDITOR_DEBTOR,0)=1)
				
				--IF @CMRRID='GH0111800000GH00000026'
				--	SELECT 'CHECK @VCHC',AC_NAME,* FROM @VCHC A JOIN LM01106 B ON A.AC_CODE=B.AC_CODE
						
				DELETE @VCHC
			END			    

			SELECT @CMRRID='',@CSUPPLIER=''
			
			SELECT TOP 1 @CMRRID=MRR_ID,@CREFMEMOID=REF_MEMO_ID,@CXNTYPE=XN_TYPE,@CSUPPLIER=AC_CODE,
			@CLASTBILLNO=REF_BILL_NO, @DLASTINVDT = REF_BILL_DT,@CLOCGSTSTATECODE=LOC_GST_STATE_CODE,
			@CPARTYGSTSTATECODE=PARTY_GST_STATE_CODE,@BCANCELLED=CANCELLED,@NCDPCT=CD_PCT,@NROUNDOFF=ROUND_OFF,
		@BMANUALROFF=ISNULL(MANUAL_ROUNDOFF,0)  
			FROM #V_PROCESS WHERE REF_MEMO_ID=@CREFMEMOID AND XN_TYPE=@CXNTYPE

			PRINT 'NEXT MRR ID :'+@CMRRID
			IF ISNULL(@CMRRID,'')=''
				BREAK
							
		END			 			
    
    SET @CSTEP = 480

	INSERT @ERRORS (XN_ID,XN_TYPE,XN_NO,XN_DT,XN_AMT,XN_AC,ERR_DESC)
	SELECT '' AS XN_ID,'PUR' AS XN_TYPE,XN_NO,XN_DT,0 AS XN_AMT,AC_NAME AS XN_AC,
	'MISMATCH BETWEEN DEBIT TOTALS :'+LTRIM(RTRIM(STR(A.DEBIT_AMOUNT,10,2)))+' & CREDIT TOTALS :'+LTRIM(RTRIM(STR(A.CREDIT_AMOUNT,10,2)))+' LOC ID :'+A.DEPT_ID AS ERR_DESC
	FROM (SELECT B.DEPT_ID,F.AC_NAME AS AC_NAME,PIM.MRR_NO AS XN_NO,
		  VOUCHER_DT AS XN_DT,SUM(DEBIT_AMOUNT) AS DEBIT_AMOUNT,SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT
		  FROM @VDC A JOIN @VMC B ON A.VM_ID=B.VM_ID
		  JOIN @VLINK D ON D.VM_ID=B.VM_ID
		  LEFT OUTER JOIN PIM01106 PIM ON PIM.MRR_ID=D.MEMO_ID
		  LEFT OUTER JOIN LM01106 F ON F.AC_CODE=PIM.AC_CODE
		  GROUP BY B.DEPT_ID,PIM.MRR_NO,VOUCHER_DT,F.AC_NAME
		  HAVING SUM(DEBIT_AMOUNT-CREDIT_AMOUNT)<>0) A
    
    SELECT * FROM @VMC ORDER BY BILL_DT,BILL_ID,VM_ORDER
    SELECT * FROM @VDC ORDER BY VM_ID
    SELECT * FROM @ERRORS
    SELECT * FROM @VLINK ORDER BY VM_ID
    SELECT * FROM @TBILL_BY_BILL_REF
    
    END TRY
	BEGIN CATCH
			SELECT 'STEP:- '+@CSTEP+' '+ERROR_MESSAGE()AS  ERRMSG
	END CATCH
END
--END OF PROCEDURE - POSTACT_PUR
