create PROCEDURE SP_DUPLICATE_ORDER_ARTICLE
(
   @CSP_ID VARCHAR(50),
   @ORDER_ID VARCHAR(50)=''
)
AS
BEGIN
    


	 SELECT A.ARTICLE_CODE, A.PARA1_CODE ,A.PARA2_CODE ,
	        SUM(B.QUANTITY) AS ORDER_QTY
	      INTO #TMPORDER
	 FROM WSLORD_BUYER_ORDER_DET_UPLOAD A (NOLOCK)
	 JOIN BUYER_ORDER_DET B (NOLOCK)  ON A.ARTICLE_CODE =B.ARTICLE_CODE  AND A.PARA1_CODE =B.PARA1_CODE AND A.PARA2_CODE=B.PARA2_CODE 
	 WHERE A.SP_ID=@CSP_ID AND B.order_id =@ORDER_ID
	 group by A.ARTICLE_CODE, A.PARA1_CODE ,A.PARA2_CODE

	  SELECT ART.ARTICLE_NO ,P1.PARA1_NAME ,P2.PARA2_NAME ,ORDER_QTY
	  into #TMPDUPLICATEORDER
	  FROM #TMPORDER A
	  JOIN ARTICLE ART (NOLOCK) ON A.ARTICLE_CODE =ART.ARTICLE_CODE 
	  JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE =A.PARA1_CODE 
	  JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE =A.PARA2_CODE 

	 

	
	 DECLARE @CPARA2NAME VARCHAR(MAX),@DTSQL NVARCHAR(MAX)

	 IF EXISTS (SELECT  TOP 1'U' FROM #TMPDUPLICATEORDER)
	 BEGIN

	    SELECT @CPARA2NAME=ISNULL(@CPARA2NAME+',','')+QUOTENAME(PARA2_NAME) 
		FROM #TMPDUPLICATEORDER
		GROUP BY PARA2_NAME


		SET @DTSQL =N'SELECT * 
		FROM  #TMPDUPLICATEORDER 
		PIVOT (SUM(ORDER_QTY) FOR PARA2_NAME IN('+@CPARA2NAME+')) AS PVT'
		PRINT @DTSQL
		EXEC SP_EXECUTESQL @DTSQL


	 END
	 ELSE
	 BEGIN

	     SELECT * FROM #TMPDUPLICATEORDER

	 END

	





END

