CREATE PROCEDURE DBO.SP3S_REPROCESS_TAX_CALCULATION
(
 @INV_ID VARCHAR(100)
,@ERRMSG VARCHAR(MAX) OUTPUT
)
AS
BEGIN

--RETURN

BEGIN TRY
   --DECLARE LOCAL VARIABLE
   DECLARE @TOTAL_TAX_AMOUNT NUMERIC(15,2),@BASE_AMOUNT NUMERIC(15,2),@TOTAL_BASE_AMOUNT NUMERIC(15,2)
          ,@ITEM_RATE_PERCENTAGE NUMERIC(15,2),@LOOP_PERC_CAQL_START INT,@LOOP_PERC_CAQL_END INT
          ,@LOOP_VAT_UPDATE_START INT,@LOOP_VAT_UPDATE_END INT,@BALANCE_AMOUNT NUMERIC(15,2)
          ,@ROW_ID VARCHAR(100),@REMANING_BALANCE INT,@CSTRQUERY NVARCHAR(MAX)
	
   SET @ERRMSG =''
 
   IF OBJECT_ID('TEMPDB..#TEMP_IND01106','U') IS NOT NULL
      DROP TABLE #TEMP_IND01106
   CREATE TABLE #TEMP_IND01106
    (
     ID INT IDENTITY(1,1)
    ,NET_RATE NUMERIC(15,2)
    ,DISCOUNT_PERCENTAGE NUMERIC(15,2)
    ,INVOICE_QUANTITY NUMERIC(15,3)
    ,ITEM_EXCISE_DUTY_AMOUNT NUMERIC(15,3)
    ,ITEM_EXCISE_EDU_CESS_AMOUNT NUMERIC(15,3)
    ,ITEM_EXCISE_HEDU_CESS_AMOUNT NUMERIC(15,3)
    ,ITEM_TAX_PERCENTAGE NUMERIC(15,3)
    ,BILL_LEVEL_TAX_METHOD INT
    ,ITEM_TAX_AMOUNT   NUMERIC(15,2)
    ,ROW_ID VARCHAR(100)
    )
    --INSERT VAT DETAILS INTO #TEMP_IND01106 TABLE
    INSERT INTO #TEMP_IND01106(NET_RATE,DISCOUNT_PERCENTAGE,INVOICE_QUANTITY,ITEM_EXCISE_DUTY_AMOUNT
    ,ITEM_EXCISE_EDU_CESS_AMOUNT,ITEM_EXCISE_HEDU_CESS_AMOUNT,ITEM_TAX_PERCENTAGE,BILL_LEVEL_TAX_METHOD,
    ITEM_TAX_AMOUNT,ROW_ID)
    SELECT D.NET_RATE,M.DISCOUNT_PERCENTAGE,D.INVOICE_QUANTITY,ISNULL(D.ITEM_EXCISE_DUTY_AMOUNT,0),
    ISNULL(D.ITEM_EXCISE_EDU_CESS_AMOUNT,0),ISNULL(D.ITEM_EXCISE_HEDU_CESS_AMOUNT,0),
    D.ITEM_TAX_PERCENTAGE,M.BILL_LEVEL_TAX_METHOD,D.ITEM_TAX_AMOUNT,D.ROW_ID
    FROM INM01106 M
    JOIN IND01106 D ON M.INV_ID = D.INV_ID
    WHERE M.INV_ID = @INV_ID
    
    SET @LOOP_VAT_UPDATE_END = @@ROWCOUNT;
   
    ---CREATE TABLE TO STORE TAX PERCENTAGE
    IF OBJECT_ID('TEMPDB..#TAX_PERCENTAGE') IS NOT NULL
       DROP TABLE #TAX_PERCENTAGE
       CREATE TABLE #TAX_PERCENTAGE
       (
        ID INT IDENTITY(1,1)
       ,TAX_PERCENTAGE NUMERIC(15,2)
       )
    --INSERT PERCENTAGE INTO TEMP TABLE
    INSERT INTO #TAX_PERCENTAGE(TAX_PERCENTAGE)
    SELECT DISTINCT ITEM_TAX_PERCENTAGE FROM #TEMP_IND01106
    SET @LOOP_PERC_CAQL_END = @@ROWCOUNT;
    SET @LOOP_PERC_CAQL_START = 1
    SET @BASE_AMOUNT = 0
    SET @TOTAL_BASE_AMOUNT=0
   
    IF ISNULL(@LOOP_PERC_CAQL_END,0) = 0
      BEGIN
       SET @ERRMSG='TAX PERCENTAGE AMOUNT NOT FOUND..'
       GOTO PROC_END;
      END
    --START LOOP FOR CALCULATE BASE AMOUNT. LOOP IS REQUIRED BECAUSE TAX AMOUNT SHOLUD BE MULTIPLE
    --SO NEED TO CALCLUATE BASE AMOUNT FOR BOTH TYPE OF TAX PERCENTAGE
    WHILE @LOOP_PERC_CAQL_END >= @LOOP_PERC_CAQL_START
      BEGIN
          SET @ITEM_RATE_PERCENTAGE = (SELECT ISNULL(TAX_PERCENTAGE,0) FROM #TAX_PERCENTAGE WHERE ID=@LOOP_PERC_CAQL_START)
        
        DECLARE @BASE_FOR_TAX NUMERIC(15,2)
        ,@ITEM_TAX_AMOUNT NUMERIC(15,2)
        
        --ADDING THIS LINE ON 07-JUNE-2017
        SELECT @BASE_FOR_TAX = SUM(((NET_RATE - (NET_RATE * DISCOUNT_PERCENTAGE / 100))*INVOICE_QUANTITY)+ 
        ISNULL(ITEM_EXCISE_DUTY_AMOUNT,0)+ISNULL(ITEM_EXCISE_EDU_CESS_AMOUNT,0)+ISNULL(ITEM_EXCISE_HEDU_CESS_AMOUNT,0))  
        FROM #TEMP_IND01106   
        WHERE ITEM_TAX_PERCENTAGE = @ITEM_RATE_PERCENTAGE   
        
        SELECT @ITEM_TAX_AMOUNT = (@BASE_FOR_TAX*@ITEM_RATE_PERCENTAGE/
        (100+(CASE WHEN ISNULL(BILL_LEVEL_TAX_METHOD,0)=2 THEN @ITEM_RATE_PERCENTAGE ELSE 0  END)))
        FROM #TEMP_IND01106
        WHERE ITEM_TAX_PERCENTAGE = @ITEM_RATE_PERCENTAGE
        
        
        SET @TOTAL_BASE_AMOUNT = @TOTAL_BASE_AMOUNT + @ITEM_TAX_AMOUNT
       
        SET @LOOP_PERC_CAQL_START= @LOOP_PERC_CAQL_START+1;
      END
    ---SELECT TOTAL TAX AMOUNT 
    SELECT @TOTAL_TAX_AMOUNT =SUM(ISNULL(ITEM_TAX_AMOUNT,0)) FROM #TEMP_IND01106 
    
    --IF TOTAL TAX AMOUNT AND TOTAL BASE AMOUNT IS NOT EQUALL
    IF ISNULL(@TOTAL_TAX_AMOUNT,0) <> ISNULL(@TOTAL_BASE_AMOUNT,0)
    BEGIN
         ---SET VALUE INTO RQUIRED VARIABLE FOR FURTHER USED
         SET @BALANCE_AMOUNT = (@TOTAL_BASE_AMOUNT - @TOTAL_TAX_AMOUNT)*100
         
         --IF ISNULL(@BALANCE_AMOUNT,0) <= 0
         -- GOTO PROC_END;
       
        IF ISNULL(@BALANCE_AMOUNT,0) > 0
           BEGIN
              SET @REMANING_BALANCE =SUBSTRING(CAST(@BALANCE_AMOUNT AS VARCHAR(10)),1,CHARINDEX('.',@BALANCE_AMOUNT)-1)
                 SET @LOOP_VAT_UPDATE_START = 1;
                
                  SET @BALANCE_AMOUNT = CAST(@BALANCE_AMOUNT AS INT)
                   WHILE @BALANCE_AMOUNT > 0
                      BEGIN
                        --IF BALANCE AMOUNT GRATER THEN TOTAL ROW AVAILABLE INTO TEMP TABLE
                        IF @BALANCE_AMOUNT > @LOOP_VAT_UPDATE_END
                          BEGIN
                           UPDATE #TEMP_IND01106 SET ITEM_TAX_AMOUNT = ISNULL(ITEM_TAX_AMOUNT,0)+.01
                           SET @BALANCE_AMOUNT = @BALANCE_AMOUNT - @LOOP_VAT_UPDATE_END
                          END
                        ELSE
                          BEGIN
                          --IF BALANCE AMOUNT LESS THEN TOTAL ROW AVAILABLE INTO TEMP TABLE
                          SET @CSTRQUERY = N'UPDATE #TEMP_IND01106 SET ITEM_TAX_AMOUNT = ISNULL(ITEM_TAX_AMOUNT,0)+.01
                                           WHERE ROW_ID IN (SELECT TOP '+CAST(''+@REMANING_BALANCE+'' AS VARCHAR(10))+' 
                                           ROW_ID FROM #TEMP_IND01106)'
                          PRINT @CSTRQUERY 
                          EXEC SP_EXECUTESQL @CSTRQUERY
                          SET @BALANCE_AMOUNT = 0;
                          END
              END
           END
         ELSE
           BEGIN
             SET @REMANING_BALANCE =SUBSTRING(CAST(@BALANCE_AMOUNT AS VARCHAR(10)),1,CHARINDEX('.',@BALANCE_AMOUNT)-1)
             SET @LOOP_VAT_UPDATE_START = 1;
            
              SET @BALANCE_AMOUNT = CAST(@BALANCE_AMOUNT AS INT)

               WHILE @BALANCE_AMOUNT < 0
                  BEGIN
                    --IF BALANCE AMOUNT GRATER THEN TOTAL ROW AVAILABLE INTO TEMP TABLE
                    IF @BALANCE_AMOUNT < @LOOP_VAT_UPDATE_END
                      BEGIN
                       UPDATE #TEMP_IND01106 SET ITEM_TAX_AMOUNT = ISNULL(ITEM_TAX_AMOUNT,0)-.01
                       SET @BALANCE_AMOUNT = @BALANCE_AMOUNT + @LOOP_VAT_UPDATE_END
                      END
                    ELSE
                      BEGIN
                      --IF BALANCE AMOUNT LESS THEN TOTAL ROW AVAILABLE INTO TEMP TABLE
                      SET @CSTRQUERY = N'UPDATE #TEMP_IND01106 SET ITEM_TAX_AMOUNT = ISNULL(ITEM_TAX_AMOUNT,0)-.01
                                       WHERE ROW_ID IN (SELECT TOP '+CAST(''+ABS(@REMANING_BALANCE)+'' AS VARCHAR(10))+' 
                                       ROW_ID FROM #TEMP_IND01106)'
                      PRINT @CSTRQUERY 
                      EXEC SP_EXECUTESQL @CSTRQUERY
                      SET @BALANCE_AMOUNT = 0;
                      END
                  END
           END
         
         ---UPDATE ITEM TAX AMOUNT INTO MAIN TABLE BASED ON ROW_ID 
        UPDATE IND SET ITEM_TAX_AMOUNT = T.ITEM_TAX_AMOUNT
        FROM DBO.IND01106 IND 
        JOIN #TEMP_IND01106 T ON T.ROW_ID=IND.ROW_ID
        
        SET @ERRMSG =''
   END
   
END TRY

BEGIN CATCH
	SET @ERRMSG ='ERROR INT PROCEDURE SP3S_REPROCESS_TAX_CALCULATION || '+ ERROR_MESSAGE()
END CATCH
  
PROC_END:  
	
END
