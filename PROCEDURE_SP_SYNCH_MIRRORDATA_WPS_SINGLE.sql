CREATE PROCEDURE SP_SYNCH_MIRRORDATA_WPS_SINGLE
(
    @CLOCID VARCHAR(3)
   ,@CERRMSG VARCHAR(1000) OUTPUT
)
AS
SET NOCOUNT ON
BEGIN

	/*
		208_2014_01_13 : THIS PROCEDURE WILL MERGE DATA FROM TEMPORARY TABLE TO ACTUAL TABLE.
						 TABLE NAMES AND ITS MERGING ORDER WILL BE FIXED AND WILL BE DEFINED HERE.	
						 
		NOTE : EMPLOYEE_HEAD WILL BE MERGED TO EMPLOYEE				 
	*/

DECLARE @CSTEP VARCHAR(100),@DTSQL NVARCHAR(MAX),@NMERGE_ORDER NUMERIC(5)
	   ,@CTABLENAME VARCHAR(200),@CTABLE_SUFFIX VARCHAR(50),@CKEYFIELD VARCHAR(200),@CDEL_ID VARCHAR(50),@CTMP_TABLENAME VARCHAR(200),@LINSERTONLY VARCHAR(1)
	   ,@CFILTERCONDITION VARCHAR(200),@CFILTERCONDITION2 VARCHAR(500),@LUPDATEONLY VARCHAR(1),@BALWAYSUPDATE VARCHAR(1),@FDEL CHAR(1)
	   ,@CERRMSGOUT VARCHAR(1000),@CTABLESSTR VARCHAR(MAX),@CMIRRORINGENABLED VARCHAR(5)
	   ,@CCURDEPTID VARCHAR(5),@CTEMPMASTERTABLE VARCHAR(200),@CTEMPDETAILTABLE1 VARCHAR(200)
	   ,@CTEMPDETAILTABLE2 VARCHAR(200),@CTEMPDETAILTABLE3 VARCHAR(200)
	   ,@CTEMPPAYMODETABLE VARCHAR(200),@CTEMPTABLE VARCHAR(100),@CDONOTRESETPOSTEDINAC VARCHAR(1)
	   ,@BADDMODE BIT,@CCUTOFFDATE VARCHAR(20),@CWHERECLAUSE VARCHAR(2000),@CMEMONOLEN VARCHAR(5),@NMEMONOLEN INT
	   ,@DMINMEMODT DATETIME,@DMAXMEMODT DATETIME,@CFINYEAR VARCHAR(5),@CMEMOPREFIX VARCHAR(10)
	   ,@CMINMEMONO VARCHAR(20),@CMAXMEMONO VARCHAR(20),@CSOURCEDB VARCHAR(200),@CMERGEDB VARCHAR(200)
	   ,@BMSTINSERTONLY BIT,@BSERIESMISMATCHFOUND BIT,@CMEMOID VARCHAR(40),@CPREVMEMONO VARCHAR(20)
	   ,@NPREVMEMONO NUMERIC(5,0),@NLENVALUE INT,@CPREVMEMONOSEARCH VARCHAR(20),@CMEMOIDSEARCH VARCHAR(40)
	   ,@CRETPRODUCTCODE VARCHAR(50),@NVERSIONNO INT,@CJOINSTR VARCHAR(MAX),@cMissingRowId VARCHAR(50)
	   ,@cUpdatestr VARCHAR(2000)
	

BEGIN TRY
	
	
	SET @CSTEP=10
	EXEC SP_CHKXNSAVELOG 'WPSMERGE',@CSTEP,0,@CMEMOID,'',1
	SELECT @CSOURCEDB='',@CMERGEDB='',@BMSTINSERTONLY=1,@BSERIESMISMATCHFOUND=0
	
    	
    SELECT TOP 1 @CCURDEPTID=VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'
    
    SELECT TOP 1 @CDONOTRESETPOSTEDINAC=VALUE FROM CONFIG WHERE CONFIG_OPTION='DONOT_RESET_ACCOUNTS_POSTEDINAC'
    
    SET @CDONOTRESETPOSTEDINAC=ISNULL(@CDONOTRESETPOSTEDINAC,'')
		
    DECLARE @CPOSTINGATHODEPTID VARCHAR(5)
    
	SET @DTSQL=N'SELECT TOP 1 @CPOSTINGATHODEPTID=ACCOUNTS_POSTING_DEPT_ID FROM 
				 LOCATION WHERE DEPT_ID='''+@CLOCID+''''
	PRINT @DTSQL
	EXEC SP_EXECUTESQL @DTSQL,N'@CPOSTINGATHODEPTID CHAR(2) OUTPUT',@CPOSTINGATHODEPTID OUTPUT

	SET @CSTEP=12
	EXEC SP_CHKXNSAVELOG 'WPSMERGE',@CSTEP,0,@CMEMOID,'',1
	SET @NMEMONOLEN=10


	SELECT @CTEMPMASTERTABLE=@CSOURCEDB+'WPS_WPS_MST_MIRROR',
		   @CTEMPDETAILTABLE1=@CSOURCEDB+'WPS_WPS_DET_MIRROR',
		   @CTEMPDETAILTABLE2=@CSOURCEDB+'WPS_PMT01106_MIRROR'
		
	IF EXISTS (SELECT TOP 1 tablename FROM savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@@SPID)
		DELETE FROM savetran_updcols_updatestr WITH (ROWLOCK) WHERE sp_id=@@SpId

	INSERT savetran_updcols_updatestr (sp_id,tablename,updatestr)
	SELECT @@SPId as sp_id,tablename,'' from mirrorxnsinfo (NOLOCK)
	WHERE tablename IN ('wps_mst','wps_det')


	SET @CSTEP=14
	EXEC SP_CHKXNSAVELOG 'WPSMERGE',@CSTEP,0,@CMEMOID,'',1
	IF OBJECT_ID('TEMPDB..#T','U') IS NOT NULL
		DROP TABLE #T
	
	select ps_id INTO #t FROM wps_wps_mst_mirror (NOLOCK) WHERE 1=2

	SET @CSTEP=16
	EXEC SP_CHKXNSAVELOG 'WPSMERGE',@CSTEP,0,@CMEMOID,'',1
	DECLARE @DFREEZINGDATE DATETIME	
	EXEC SP3S_GETDATA_FREEZING_DATE 'WPS',@DFREEZINGDATE OUTPUT


LBLSTART:
    BEGIN TRANSACTION 	
	SET @CSTEP=18
	EXEC SP_CHKXNSAVELOG 'WPSMERGE',@CSTEP,0,@CMEMOID,'',1

    SELECT @CMEMOID='',@NVERSIONNO=0

    SELECT TOP 1 @CMEMOID = B.PS_ID ,@NVERSIONNO=VERSION_NO
    FROM WPS_WPS_MST_MIRROR B (NOLOCK)
    LEFT OUTER JOIN MIRROR_SYNCH_LOG C (NOLOCK) ON C.MEMO_ID=B.PS_ID AND C.XN_TYPE='WPS'
    WHERE LEFT(B.PS_ID,2)=@CLOCID AND PS_DT>@DFREEZINGDATE
    AND DATEDIFF(SS,B.VERSION_LAST_UPDATE,GETDATE())>60 AND C.MEMO_ID IS NULL
    ORDER BY B.PS_ID,VERSION_NO DESC
   
    IF ISNULL(@CMEMOID,'')=''
		GOTO EXIT_PROC
		
    SET @CFILTERCONDITION = 'B.PS_ID='''+@CMEMOID+''' AND B.VERSION_NO='+LTRIM(RTRIM(STR(@NVERSIONNO)))

	SET @CSTEP=20
	EXEC SP_CHKXNSAVELOG 'WPSMERGE',@CSTEP,0,@CMEMOID,'',1

	SET @CMEMOIDSEARCH=''
	SELECT TOP 1 @CMEMOIDSEARCH=A.PS_ID FROM WPS_MST A (NOLOCK) WHERE A.PS_ID=@CMEMOID
	
	IF ISNULL(@CMEMOIDSEARCH,'')<>''
		SET @BADDMODE=0
	ELSE
		SET @BADDMODE=1
  
  DECLARE @CBO_DET_ROW_ID VARCHAR(100) 
  SELECT @CBO_DET_ROW_ID=BO_DET_ROW_ID   FROM WPS_WPS_DET_MIRROR (NOLOCK) WHERE ps_id =	@cMemoId
			

--LBLMERGE:
	---DELETING EXISTING RECORD IF BILL COMES AGAIN FOR MERGING
	
	--SELECT @CTEMPMASTERTABLE,@CFILTERCONDITION
	IF @BADDMODE=0
		PRINT 'ADDMODE:N'
	ELSE
		PRINT 'ADDMODE:Y'	
	
	IF @BADDMODE=0
	BEGIN	
		SET @CSTEP=30
		EXEC SP_CHKXNSAVELOG 'WPSMERGE',@CSTEP,0,@CMEMOID,'',1

		EXEC SP3S_VERIFY_WPSDATA_merge_CHANGES
		@cMemoId=@cMemoId
		
		SET @CSTEP=35
		EXEC SP_CHKXNSAVELOG 'WPSMERGE',@CSTEP,0,@CMEMOID,'',1
		SELECT TOP 1 @cMissingRowId=a.row_id FROM wps_det A (NOLOCK) 
		LEFT JOIN 
		(SELECT row_id FROM WPS_wps_det_MIRROR B (NOLOCK) WHERE PS_id=@cMEmoId) b
		ON A.row_ID =B.row_ID WHERE A.ps_id =@CMEMOID AND b.row_id IS NULL

		IF ISNULL(@cMissingRowId,'')<>''
		BEGIN		
			SET @CSTEP=40
			EXEC SP_CHKXNSAVELOG 'WPSMERGE',@CSTEP,0,@CMEMOID,'',1

			DELETE A FROM WPS_DET A (NOLOCK) LEFT JOIN 
			(SELECT row_id FROM WPS_wps_det_MIRROR B (NOLOCK) WHERE PS_id=@cMEmoId) b
			ON A.row_ID =B.row_ID WHERE A.ps_id =@CMEMOID AND b.row_id IS NULL

		END
	
	END


	SET @CSTEP=45
	EXEC SP_CHKXNSAVELOG 'WPSMERGE',@CSTEP,0,@CMEMOID,'',1

	SET @CTABLENAME='WPS_MST'
	SET @CTMP_TABLENAME='WPS_WPS_MST_MIRROR'
	SET @CKEYFIELD='PS_ID'

	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@@spid AND tablename='wps_mst'
	SET @LUPDATEONLY = (CASE WHEN @BADDMODE=0 THEN 1 ELSE 0 END)	
	
	SET @CSTEP=50
	EXEC SP_CHKXNSAVELOG 'WPSMERGE',@CSTEP,0,@CMEMOID,'',1

	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
							  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1  
							  
	SET @CTABLENAME='WPS_DET'
	SET @CTMP_TABLENAME='WPS_WPS_DET_MIRROR'
	SET @CKEYFIELD='ROW_ID'
	 
	SELECT @cMissingRowId='',@lUpdateonly=0
	IF @BADDMODE=0
	BEGIN
		SET @CSTEP=55
		EXEC SP_CHKXNSAVELOG 'WPSMERGE',@CSTEP,0,@CMEMOID,'',1

		SELECT TOP 1 @cMissingRowId=b.row_id FROM 
		(SELECT row_id  FROM WPS_wps_det_MIRROR (NOLOCK) WHERE ps_id=(@cMemoId+LEFT(@cMemoId,2))) A
		RIGHT OUTER JOIN 
		(SELECT row_id FROM WPS_wps_det_MIRROR (NOLOCK) WHERE ps_id=@cMemoId) b ON 
		a.row_id=b.row_id WHERE a.row_id IS NULL

		--SELECT 'check @cMissingRowId of pid',@cMissingRowId
		IF ISNULL(@CBO_DET_ROW_ID,'')<>'' 
		BEGIN

				EXEC SP3S_PROCESS_INV_QTY @cMemoId,'',1,@CERRMSG OUTPUT,'WPS' 
				IF ISNULL(@CERRMSG,'')<>''
				GOTO EXIT_PROC
				   
		END
		

		IF ISNULL(@cMissingRowId,'')='' 
			SET @lUpdateonly=1
	END

	SET @CSTEP=60
    EXEC SP_CHKXNSAVELOG 'WPSMERGE',@CSTEP,0,@CMEMOID,'',1

	
	--select 'check @lUpdateonly',@lUpdateonly as lUpdateonly

	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@@spid AND tablename='wps_det'

	
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
							  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 



	SET @CSTEP=70
	EXEC SP_CHKXNSAVELOG 'WPSMERGE',@CSTEP,0,@CMEMOID,'',1

	IF ISNULL(@CBO_DET_ROW_ID ,'')<>'' 
	BEGIN
		EXEC SP3S_PROCESS_INV_QTY @CERRMSG ,'',1,@CERRMSG OUTPUT,'WPS' 
		IF ISNULL(@CERRMSG,'')<>''
		GOTO EXIT_PROC
				   
	END
			

   	EXEC SP3S_MERGE_LOCPMT  
	@cTempTable='WPS_PMT01106_MIRROR',  
	@cMemoIdCol='WPS_MEMO_ID',  
	@cMemoId =@CMEMOID
	
	SET @CSTEP=80
	EXEC SP_CHKXNSAVELOG 'WPSMERGE',@CSTEP,0,@CMEMOID,'',1

    SELECT TOP 1 @CERRMSG=ERRMSG FROM MIRROR_SYNCH_LOG (NOLOCK) WHERE XN_TYPE='WPS' AND MEMO_ID=@CMEMOID
    
    IF ISNULL(@CERRMSG,'')=''
    BEGIN 
		SET @CSTEP=85
		EXEC SP_CHKXNSAVELOG 'WPSMERGE',@CSTEP,0,@CMEMOID,'',1

		EXEC SP3S_DELETE_WPS_MIRROR_TABLES @cMemoId
		
		COMMIT
	   
	    GOTO LBLSTART
    END
    
END TRY
BEGIN CATCH
	SET @CERRMSG='P:SP_SYNCH_MIRRORDATA_WPS_SINGLE, MEMO ID :'+@CMEMOID+' STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO EXIT_PROC
END CATCH

EXIT_PROC:

	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRMSG,'')='' AND @BSERIESMISMATCHFOUND<>1
			COMMIT
		ELSE
			ROLLBACK
    END
	
END	
---END OF PROCEDURE - SP_SYNCH_MIRRORDATA_WPS_SINGLE