create PROCEDURE SPSIS_SYNCH_UPLOADDATA_SLSNEW_OPT
(
    @nSpId VARCHAR(40),
	@CDEPTID VARCHAR(5)/*Rohit 01-11-2024*/,
	@cErrmsg VARCHAR(MAX) output

)
AS
SET NOCOUNT ON
BEGIN

DECLARE @CSTEP VARCHAR(100),@CSOURCEDB VARCHAR(200),@CMERGEDB VARCHAR(200),@CMEMOID VARCHAR(40),
        @CTEMPMASTERTABLE VARCHAR(200),@CTEMPDETAILTABLE VARCHAR(200),@CTEMPPAYMODETABLE VARCHAR(200),
		@CCMIDSEARCH VARCHAR(40),@BMSTINSERTONLY BIT,@CMEMONO VARCHAR(40),@CINSSPID VARCHAR(50),
		@CCURDEPTID VARCHAR(5),@BADDMODE BIT,@CFILTERCONDITION3 VARCHAR(500),@DTSQL NVARCHAR(MAX),
		@CFILTERCONDITION VARCHAR(500),@CTABLENAME VARCHAR(200),@CTMP_TABLENAME VARCHAR(200),
		@CKEYFIELD VARCHAR(200),@LUPDATEONLY VARCHAR(1),@NNET_AMOUNT NUMERIC(14,2),@bCancelled bit


BEGIN TRY
	
	
	SET @CSTEP=5
	
	SET @CERRMSG=''
	EXEC SP_CHKXNSAVELOG 'SIS_SLS',@CSTEP,0,@nSpId,'',1
	
	SELECT @CSOURCEDB='',@CMERGEDB='',@BMSTINSERTONLY=1

	IF NOT EXISTS (SELECT TOP 1'U' FROM LOCATION WHERE DEPT_ID =@CDEPTID)
	BEGIN
	    SET @CERRMSG=''
		GOTO EXIT_PROC

	END

	
	--SOME MANDETORY COLUMNS UPDATE IN UPLOAD TABLES
	UPDATE A SET memo_type =1,
	             AC_CODE ='0000000000',
				 CUSTOMER_CODE='000000000000',
				 USER_CODE ='0000000',
				 EDT_USER_CODE='0000000',
				 PARTY_STATE_CODE='00',
				 BIN_ID='000',
				 CM_ID=@CDEPTID+SUBSTRING(CM_ID,LEN(@CDEPTID)+1,LEN(CM_ID))/*Rohit 01-11-2024*/ ,
				 CM_NO=@CDEPTID+SUBSTRING(CM_NO,LEN(@CDEPTID)+1 ,LEN(CM_NO))/*Rohit 01-11-2024*/,
				 DT_CODE ='0000000',
				 other_charges_hsn_code ='0000000000',
				 party_type =1,
				 pay_mode=1,
				 cm_time =cm_dt ,
				 manual_discount =0,
				 copies_ptd=0,
				 round_off =0,
				 Location_code=@CDEPTID
	FROM SLS_CMM01106_UPLOAD A (NOLOCK)
	WHERE SP_ID =@nSpId

	UPDATE A SET BIN_ID ='000',
	          CM_ID=@CDEPTID++SUBSTRING(CM_ID,LEN(@CDEPTID)+1,LEN(CM_ID))/*Rohit 01-11-2024*/ ,
			  DEPT_ID=@CDEPTID,
			  hsn_code ='0000000000',
			  emp_code ='0000000',
			  emp_code1 ='0000000',
			  emp_code2 ='0000000',
			   SR_NO=0,
			   tax_method =1,
			   Realize_sale=0,
			   old_mrp=0,
			   manual_discount =0,
			   rfnet=xn_value_with_gst,
			   igst_amount =isnull(a.igst_amount,0),
			   Cgst_amount =isnull(a.Cgst_amount,0),
			   Sgst_amount =isnull(a.Sgst_amount,0),
			   rfnet_with_other_charges=xn_value_with_gst
	FROM SLS_CMD01106_UPLOAD A (NOLOCK)
	WHERE SP_ID =@nSpId

	if exists (select top 1 'u' 	FROM SLS_CMD01106_UPLOAD A (NOLOCK) WHERE SP_ID =@nSpId and cmm_discount_amount <>0)
	begin
	     

		 Update a set basic_discount_amount=isnull(basic_discount_amount,0)+isnull(CMM_DISCOUNT_AMOUNT,0),
		              discount_amount=isnull(discount_amount,0)+isnull(CMM_DISCOUNT_AMOUNT,0)
		 from SLS_CMD01106_UPLOAD A (NOLOCK) WHERE SP_ID =@NSPID AND CMM_DISCOUNT_AMOUNT <>0

		 
		 UPDATE A SET BASIC_DISCOUNT_PERCENTAGE=abs(ISNULL(BASIC_DISCOUNT_AMOUNT,0)*100/(MRP *QUANTITY)),
		              DISCOUNT_PERCENTAGE=abs(ISNULL(DISCOUNT_AMOUNT,0)*100/(MRP *QUANTITY))
		 FROM SLS_CMD01106_UPLOAD A (NOLOCK) WHERE SP_ID =@NSPID AND CMM_DISCOUNT_AMOUNT <>0
		 AND MRP>0 AND QUANTITY <>0
		  
		 UPDATE A SET CMM_DISCOUNT_AMOUNT =0,net=net-cmm_discount_amount 
		 FROM SLS_CMD01106_UPLOAD A (NOLOCK) WHERE SP_ID =@NSPID AND CMM_DISCOUNT_AMOUNT <>0

		 UPDATE A SET DISCOUNT_AMOUNT =0,DISCOUNT_PERCENTAGE=0 FROM SLS_CMM01106_UPLOAD A (NOLOCK) WHERE SP_ID =@NSPID



	end


		    UPDATE A SET A.TOTAL_QUANTITY=B.TOTAL_QUANTITY ,SUBTOTAL=B.SUBTOTAL,SUBTOTAL_R=0,ref_no =a.CM_NO 
			FROM SLS_CMM01106_UPLOAD A WITH (ROWLOCK)
			INNER JOIN 
			(
				SELECT SP_ID,SUM(QUANTITY) AS TOTAL_QUANTITY ,SUM(NET) as SUBTOTAL
				FROM  SLS_CMD01106_UPLOAD  (NOLOCK)
				WHERE SP_ID=@NSPID GROUP BY SP_ID
			)B ON  A.SP_ID=B.SP_ID
			WHERE A.SP_ID=@NSPID
    
	if exists (select   top 1 'u' FROM SLS_CMM01106_UPLOAD A WITH (ROWLOCK)   WHERE A.SP_ID=@NSPID   and a.atd_charges <>0)
   begin
        
		 Update a set  rfnet_with_other_charges=rfnet+((b.atd_charges/b.subtotal)*a.net)
		 FROM SLS_CMD01106_UPLOAD A (NOLOCK)    
		 join SLS_CMm01106_UPLOAD b (nolock) on a.sp_id =b.SP_ID 
		 WHERE a.SP_ID =@nSpId    

   end
	
	DECLARE @CPICKROUNDITEMLEVELFROMLOC VARCHAR(2)
	SELECT TOP 1 @CPICKROUNDITEMLEVELFROMLOC = VALUE  FROM CONFIG WHERE  CONFIG_OPTION='PICK_SLS_ROUND_OFF_FROMLOC'

	DECLARE @CROUNDBILLLEVEL VARCHAR(2),@NEXCLTAX NUMERIC(10,2),@NTOTAL_GST_CESS_AMOUNT NUMERIC(10,2)
			
	SELECT @NEXCLTAX=SUM(TAX_AMOUNT+ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)),
	       @NTOTAL_GST_CESS_AMOUNT=SUM(ISNULL(GST_CESS_AMOUNT ,0))
	FROM SLS_cmd01106_UPLOAD (NOLOCK) A WHERE sp_id=@nSpId AND TAX_METHOD=2


	UPDATE SLS_CMM01106_UPLOAD SET NET_AMOUNT=isnull(SUBTOTAL,0)+isnull(SUBTOTAL_R,0)+isnull(ATD_CHARGES,0)+ISNULL(@NEXCLTAX,0)+ISNULL(@NTOTAL_GST_CESS_AMOUNT,0)-isnull(DISCOUNT_AMOUNT ,0)
	WHERE sp_id=@nSpId

	
	IF ISNULL(@CPICKROUNDITEMLEVELFROMLOC,'')<>'1'
		SELECT TOP 1 @CROUNDBILLLEVEL=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='SLS_ROUND_BILL_LEVEL' 
	ELSE
		SELECT TOP 1 @CROUNDBILLLEVEL = SLS_ROUND_BILL_LEVEL  FROM LOCATION (NOLOCK) WHERE DEPT_ID=@CDEPTID



	UPDATE SLS_CMM01106_UPLOAD SET ROUND_OFF= (CASE WHEN ISNULL(@CROUNDBILLLEVEL,'')='4' THEN 0
	WHEN ISNULL(@CROUNDBILLLEVEL,'')='2' THEN ROUND(NET_AMOUNT/5,0)*5-NET_AMOUNT
	WHEN ISNULL(@CROUNDBILLLEVEL,'')='3' THEN CEILING(NET_AMOUNT/5)*5-NET_AMOUNT  ELSE ROUND(NET_AMOUNT,0)-NET_AMOUNT  END)
    WHERE SP_ID=@NSPID
	
					
	UPDATE SLS_CMM01106_UPLOAD SET NET_AMOUNT=isnull(SUBTOTAL,0)+isnull(SUBTOTAL_R,0)+isnull(ATD_CHARGES,0)+ISNULL(@NEXCLTAX,0)+ISNULL(@NTOTAL_GST_CESS_AMOUNT,0)-isnull(DISCOUNT_AMOUNT,0)+isnull(ROUND_OFF ,0)
	WHERE sp_id=@nSpId

	
	 UPDATE A SET PRODUCT_CODE=LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE )))  
	 FROM SLS_CMD01106_UPLOAD A (NOLOCK)	WHERE SP_ID=@NSPID
	 AND CHARINDEX('@',PRODUCT_CODE)<>0

    
	SELECT  TOP 1 @CMEMOID=cm_id,@cMemoNo=cm_no,@NNET_AMOUNT=NET_AMOUNT,
	              @bCancelled=cancelled
	FROM SLS_CMM01106_UPLOAD (NOLOCK) WHERE SP_ID=@nSpId



	if isnull(@CMEMOID,'')=''
	   GOTO EXIT_PROC

	set @CINSSPID=@nSpId+@CDEPTID /*LEFT(@cMemoId,2)*//*Rohit 01-11-2024*/

	SET @CSTEP=4
    EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1

    SELECT TOP 1 @CCURDEPTID=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='LOCATION_ID'
    
	SET @CSTEP=5
	EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1

	SELECT @CTEMPMASTERTABLE=@CSOURCEDB+'SLS_CMM01106_UPLOAD',
		   @CTEMPDETAILTABLE=@CSOURCEDB+'SLS_CMD01106_UPLOAD'


	SET @CSTEP=8.5
	EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1



	IF EXISTS (SELECT TOP 1 tablename FROM savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nSpId)
		DELETE FROM savetran_updcols_updatestr WITH (ROWLOCK) WHERE sp_id=@nSpId

	SET @CSTEP=8.7
	EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1

	INSERT savetran_updcols_updatestr (sp_id,tablename,updatestr)
	SELECT @nSpId as sp_id,tablename,'' from mirrorxnsinfo (NOLOCK)
	WHERE tablename IN ('cmm01106','cmd01106')
	
	
LBLSTART:
	
	SET @CSTEP=9.2
	EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1

	SET @CCMIDSEARCH=''
	SELECT TOP 1 @CCMIDSEARCH=A.CM_ID FROM CMM01106 A (NOLOCK) WHERE A.CM_ID=@CMEMOID
	
	IF ISNULL(@CCMIDSEARCH,'')<>''
		SET @BADDMODE=0
	ELSE
		SET @BADDMODE=1

	SET @CSTEP=11
	EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1

	BEGIN TRANSACTION 	     

	IF @BADDMODE=1 AND NOT EXISTS (SELECT TOP 1 'U' FROM SLS_CMD01106_UPLOAD WHERE SP_ID =@NSPID)
	    GOTO EXIT_PROC
    IF @BADDMODE=0 AND NOT EXISTS (SELECT TOP 1 'U' FROM SLS_CMD01106_UPLOAD WHERE SP_ID =@NSPID)
		 SET @BCANCELLED=1
	
	IF @BADDMODE=0
	begin
	    INSERT SAVETRAN_BARCODE_NETQTY	( BIN_ID, DEPT_ID, PRODUCT_CODE, sp_id, XN_QTY ) 
		 SELECT 	'000'  BIN_ID,/*LEFT(A.cm_id,2)Rohit 01-11-2024*/@CDEPTID DEPT_ID, PRODUCT_CODE,@nSpId SP_ID,A.quantity AS XN_QTY 
		 FROM cmd01106 A (NOLOCK)
		 WHERE A.cm_id =@CMEMOID


		IF @bCancelled=1 
		BEGIN
			UPDATE CMM01106 WITH (ROWLOCK) SET cancelled=1 WHERE cm_id=@cMemoid
			GOTO lblupdatepmt
		END
		EXEC SP3S_VERIFY_SLSDATA_CHANGES_merge
		@cMemoId=@cMemoId,
		@nSpId=@nSpId

	end
	
	declare @cStepMsg VARCHAR(100)
	set @cStepMsg=(case when @BADDMODE=0 then '@BADDMODE=0:' else '@BADDMODE=1:' end)+@cMemoId
	
	SET @CSTEP=18
	EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,@cStepMsg,1


lblUpdLocStatus:
   
   SET @CFILTERCONDITION = ' B.SP_ID='''+LTRIM(RTRIM(@nSpId))+''''
		
	SET @CSTEP=40
	EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1
	
LBLMERGE:

	IF @BADDMODE=0
		PRINT 'ADDMODE:N'
	ELSE
		PRINT 'ADDMODE:Y'	
	
	DECLARE @cMissingRowId VARCHAR(50)

	IF @BADDMODE=0
	BEGIN	

		SET @CSTEP=58
		EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1
		SET @cMissingRowId=''
		SELECT TOP 1 @cMissingRowId=a.row_id FROM 
		(SELECT row_id FROM sls_CMD01106_upload (NOLOCK) WHERE sp_id=@cInsSpId) A
		LEFT OUTER JOIN 
		(SELECT row_id FROM sls_CMD01106_upload (NOLOCK) WHERE sp_id=@nSpId) b ON 
		a.row_id=b.row_id WHERE b.row_id IS NULL

	
		IF @cMissingRowId<>''
		BEGIN
			SET @CSTEP=62
			EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1
			SET @DTSQL=N'DELETE A FROM CMD01106  A WITH (ROWLOCK) 
						 JOIN '+@CTEMPMASTERTABLE+' B (NOLOCK) ON A.CM_ID=B.CM_ID		 
							 LEFT OUTER JOIN
							 (SELECT ROW_ID FROM '+@CTEMPDETAILTABLE+' B (NOLOCK) WHERE '+@CFILTERCONDITION+') C ON A.ROW_ID=C.ROW_ID
							 WHERE '+@CFILTERCONDITION+' AND C.ROW_ID IS NULL' 
			PRINT @DTSQL
			EXEC SP_EXECUTESQL @DTSQL
		END
	END
	

	SET @CSTEP=77
	EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1
	SET @CTABLENAME='CMM01106'
	SET @CTMP_TABLENAME='SLS_CMM01106_UPLOAD'
	SET @CKEYFIELD='CM_ID'


	DECLARE @cUpdatestr VARCHAR(4000)

	EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1
	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK)  WHERE SP_ID=@nSpId AND tablename='cmm01106'

	SET @CSTEP=79
	EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1		
	SET @LUPDATEONLY = (CASE WHEN @BADDMODE=0 THEN 1 ELSE 0 END)	
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION
							  ,@LUPDATEONLY=@LUPDATEONLY,@BALWAYSUPDATE=1,@BUPDATEXNS=1,@cUpdatestrPara=@cUpdatestr
							  ,@bThruUpdatestrPara=1 

	SET @CSTEP=81
	EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1		
	

	    SELECT a.product_code as new_product_code into #tmpbarcode FROM SLS_CMD01106_UPLOAD A (NOLOCK)
		LEFT JOIN SKU B (nolock) ON A.PRODUCT_CODE =B.PRODUCT_CODE 
		WHERE A.SP_ID=@nSpId AND B.PRODUCT_CODE IS NULL
		group by a.product_code

		IF EXISTS (SELECT TOP 1 'U' FROM #tmpbarcode)
		BEGIN
			SET @CSTEP=84.2
			EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1

			 EXEC SPSIS_INSERTSKUBARCODE @NSPID, 'SLS',@CERRMSG OUTPUT

			 if isnull(@cErrmsg,'')<>''
			    goto EXIT_PROC

          end

     if exists (select top 1 'u' FROM SLS_CMD01106_UPLOAD A (NOLOCK)
		WHERE A.SP_ID=@nSpId and isnull(a.PRODUCT_CODE,'') =''
	 )
	 begin
	    set @CERRMSG='Blank barcode cant be saved'
		goto Exit_proc
	 end



	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK)  WHERE SP_ID=@nSpId AND tablename='cmd01106'

	SET @CTABLENAME='CMD01106'
	SET @CTMP_TABLENAME='SLS_CMD01106_UPLOAD'
	SET @CKEYFIELD='ROW_ID'
	 
	SELECT @cMissingRowId='',@lUpdateonly=0
	IF @BADDMODE=0
	BEGIN
		SET @CSTEP=83
		EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1

		SELECT TOP 1 @cMissingRowId=b.row_id FROM 
		(SELECT row_id  FROM sls_CMD01106_upload (NOLOCK) WHERE sp_id=@cInsSpId) A
		RIGHT OUTER JOIN 
		(SELECT row_id FROM sls_cmd01106_upload (NOLOCK) WHERE sp_id=@nSpId) b ON 
		a.row_id=b.row_id WHERE a.row_id IS NULL

		IF ISNULL(@cMissingRowId,'')='' 
			SET @lUpdateonly=1
	END

	SET @CSTEP=83.5
	EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1
	


	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@lUpdateonly
							  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 
	
	
	SET @CSTEP=92
	EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1
	
	SET @CTABLENAME='PAYMODE_XN_DET'
	SET @CTMP_TABLENAME='SLS_PAYMODE_XN_DET_UPLOAD'
	SET @CKEYFIELD='MEMO_ID'
	
	SET @CSTEP=95
	EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1
	
	IF EXISTS (SELECT TOP 1 'U' FROM PAYMODE_XN_DET (NOLOCK) WHERE XN_TYPE='SLS' AND MEMO_ID=@CMEMOID)
	BEGIN
	     
		 UPDATE A SET AMOUNT =@NNET_AMOUNT
		 FROM PAYMODE_XN_DET A (NOLOCK) WHERE XN_TYPE='SLS' AND MEMO_ID=@CMEMOID


	END
	ELSE
	BEGIN
	     
		  INSERT PAYMODE_XN_DET	( amount, last_update, memo_id, paymode_code, row_id, xn_type )  
		  SELECT 	@NNET_AMOUNT amount,GETDATE() last_update,@CMEMOID memo_id, '0000000' paymode_code,NEWID() row_id,'SLS' xn_type 

	END
	

	   INSERT SAVETRAN_BARCODE_NETQTY	( BIN_ID, DEPT_ID, PRODUCT_CODE, sp_id, XN_QTY ) 
		 SELECT 	'000'  BIN_ID,/*LEFT(A.cm_id,2)Rohit 01-11-2024*/@CDEPTID DEPT_ID, PRODUCT_CODE,@nSpId SP_ID,-1*A.quantity AS XN_QTY 
		 FROM cmd01106 A (NOLOCK)
		 WHERE A.cm_id =@CMEMOID

	lblupdatepmt:
	EXEC SPSIS_UPDATEPMT @nSpId




	
	
END TRY

BEGIN CATCH
	SELECT @CERRMSG='P:SPSIS_SYNCH_UPLOADDATA_SLSNEW_OPT Memo Id:'+isnull(@cMemoId,'')+' STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO EXIT_PROC
END CATCH

EXIT_PROC:


	SET @CSTEP=388.5
	EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1

	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRMSG,'')='' 
			COMMIT
		ELSE
			ROLLBACK
    END
	
	EXEC SP3S_DELETEUPLOAD_CMM @nSpId

	
	IF @BADDMODE=0
	BEGIN
		SET @CSTEP=392
		EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1	

		SET @cInsSpId=@nSpId+@CDEPTID/*LEFT(@cMemoId,2)Rohit 01-11-2024*/

		EXEC SP3S_DELETEUPLOAD_CMM @cInsSpId
	END

	SET @CSTEP=394
	EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1	

	IF ISNULL(@cErrmsg,'')<>''
	BEGIN
		IF NOT EXISTS (SELECT TOP 1 xn_type FROM mirror_synch_log (NOLOCK) WHERE xn_type='SIS_SLSMERGE' AND dept_id=@CDEPTID/*LEFT(@cMemoId,2))Rohit 01-11-2024*/)
			INSERT mirror_synch_log (XN_TYPE,dept_id,memo_id,ERRMSG,last_update)
			SELECT 'SIS_SLSMERGE',/*LEFT(@cMemoId,2)*//*Rohit 01-11-2024*/@CDEPTID,@cMemoId, @CERRMSG,GETDATE() as last_update
		ELSE
			update mirror_synch_log set errmsg=@cErrmsg,memo_id=@cMemoId WHERE xn_type='SIS_SLSMERGE' AND dept_id=@CDEPTID /*LEFT(@cMemoId,2)Rohit 01-11-2024*/
	END

	SET @CSTEP=396
	EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1
	DELETE FROM savetran_updcols_updatestr with (rowlock) where sp_id=@nSpId

		
	IF EXISTS (SELECT TOP 1 xn_type FROM mirror_synch_log (NOLOCK) WHERE xn_type='SIS_SLSMERGE' AND dept_id=@CDEPTID /*LEFT(@cMemoId,2))Rohit 01-11-2024*/)
	BEGIN
		SET @CSTEP=398
		EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1
		iF ISNULL(@cErrmsg,'')=''
			DelETE FROM mirror_synch_log WITH (ROWLOCK)  WHERE xn_type='SIS_SLSMERGE' AND dept_id=@CDEPTID/*LEFT(@cMemoId,2)Rohit 01-11-2024*/			
	ENd

	SET @CSTEP=400
	EXEC SP_CHKXNSAVELOG 'SIS_SLSMERGE',@CSTEP,0,@nSpId,'',1	

END	
---END OF PROCEDURE - SPSIS_SYNCH_UPLOADDATA_SLSNEW_OPT
