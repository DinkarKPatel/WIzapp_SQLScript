CREATE PROCEDURE SPSIS_SEND_MIRROR_CLS_DATA  
(    
 @CPANNO VARCHAR(10)='SOFTINFOSY'  
,@CREQXNID VARCHAR(50)  
,@CCURLOCID VARCHAR(5)/*Rohit 01-11-2024*/  
,@BACKNOWLEDGE BIT=0  
,@CERRMSG VARCHAR(1000) OUTPUT  
)    
--WITH ENCRYPTION    
AS    
BEGIN    
 DECLARE @CMEMOID VARCHAR(50),@CSTEP VARCHAR(5)    
BEGIN TRY     
 SET @CSTEP=00    
      
             
     
  
     SELECT PAN_NO  INTO #TMPPANNO FROM SISLOCATIONDETAILS A WHERE ISNULL(PAN_NO,'')<>'' GROUP BY PAN_NO  
     UNION   
     SELECT SECONDRY_PAN_NO   FROM SISLOCATIONDETAILS A WHERE ISNULL(SECONDRY_PAN_NO,'')<>'' GROUP BY SECONDRY_PAN_NO  
       
     DECLARE @DCLOSINGDT DATETIME  
     SET @DCLOSINGDT=CONVERT(VARCHAR(10),GETDATE()-1,121)  
  
     IF not  EXISTS (SELECT TOP 1 'U' FROM SIS_CLOSING_STOCK where CLOSING_DT=@DCLOSINGDT)  
     begin    
  
 
     TRUNCATE TABLE SIS_CLOSING_STOCK  
  
     INSERT INTO SIS_CLOSING_STOCK(CLOSING_DT,DBNAME,XN_TYPE,XN_QTY,LAST_UPDATE)  
     SELECT @DCLOSINGDT AS CLOSING_DT, DB_NAME() AS DBNAME,XN_TYPE ,SUM(XN_QTY) AS XN_QTY,  
            getdate() as last_update  
     FROM VW_XNSREPS A WITH (NOLOCK)  
     JOIN SKU C WITH (NOLOCK) ON C.PRODUCT_CODE=A.PRODUCT_CODE  
     JOIN LMP01106 LMP WITH (NOLOCK) ON LMP.AC_CODE =C.AC_CODE  
     JOIN #TMPPANNO TMP ON TMP.PAN_NO =SUBSTRING(LMP.AC_GST_NO,3,10)  
     AND A.XN_DT<=CONVERT(VARCHAR(10), @DCLOSINGDT,121)  
     GROUP BY XN_TYPE  

  
           
   end  
   
   IF @BACKNOWLEDGE=0
   SELECT 'MST_SIS_CLOSING_STOCK_UPLOAD' AS TARGET_TABLENAME,* FROM SIS_CLOSING_STOCK  (NOLOCK) 

    
END TRY    
BEGIN CATCH    
 SET @CERRMSG='P: SPSIS_SEND_MIRROR_CLS_DATA, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()    
 GOTO END_PROC    
END CATCH     
     
END_PROC:    
    
END     
