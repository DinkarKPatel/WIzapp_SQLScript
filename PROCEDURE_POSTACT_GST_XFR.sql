create PROCEDURE POSTACT_GST_XFR   --(LocId 3 digit change by Sanjay:26-11-2024 left changes by concerned developer)
(  
 @DTTO DATETIME,  
 @CDEPTID CHAR(4)='',  
 @CPOSTINGXNTYPE VARCHAR(40),  
 @NXNITEMTYPE NUMERIC(1,0)=1,
 @NLOOP NUMERIC(1,0),
 @bCalledfromValidate BIT=0,
 @nSpId VARCHAR(50)=''
)  
AS  
BEGIN  
  
 PRINT 'ENTER XFR POSTING'  
   
   
    DECLARE @CSTEP VARCHAR(10),@BPOSTDISCOUNTSEPARATELY BIT,@CDISCACCODE VARCHAR(10),@BPOSTFREIGHTSEPARATELY BIT,  
   @CFREIGHTACCODE VARCHAR(10),@BPOSTOCTROISEPARATELY BIT,@COCTROIACCODE VARCHAR(10),  
   @BPOSTINSURANCESEPARATELY BIT,@CINSURANCEACCODE VARCHAR(10),  @CXnItemType VARCHAR(20),
   @BPOSTOTHERCHARGESSEPARATELY BIT,@COTHERCHARGESACCODE VARCHAR(10),@BPOSTROUNDOFFSEPARATELY BIT,  
   @CROUNDOFFACCODE VARCHAR(10),@NCTR NUMERIC(10,0),  
   @NSUBTOTAL NUMERIC(14,4),@NTAXAMOUNT NUMERIC(14,4), @CPURACCODE VARCHAR(50),@CTAXACCODE VARCHAR(100),  
   @LPOSTTAXSEPARATELY NUMERIC(14,4),@CMEMOID VARCHAR(50),@LOUTSTATIONPARTY BIT,@TMPDR NUMERIC(14,4),  
   @TMPCR NUMERIC(14,4),@CCURSTATECODE VARCHAR(10),@CVMID VARCHAR(40),@CLOCATIONID VARCHAR(4),  
   @CLASTBILLNO VARCHAR(40),@DTMPVENDORBILLDT DATETIME,@CRMLIST VARCHAR(300),@NTMPCREDITDAYS NUMERIC(10),  
   @NTMPCRDISCOUNTPERCENTAGE NUMERIC(14,4),@DLASTINVDT DATETIME,@CVOUCHERCODE VARCHAR(10),  
   @COLDBILLTYPE VARCHAR(10),@CLASTACCODE VARCHAR(10),@CLASTPARTYNAME VARCHAR(100),@NTOTQUANTITY NUMERIC(14,4),  
   @NTOTNETAMOUNT NUMERIC(14,4),@CDEPTNAME VARCHAR(100),@CVOUCHERNO VARCHAR(10),@NSIGN NUMERIC(1),  
   @CMEMONO VARCHAR(100),@CLOCALSTKXFRACCODE CHAR(10),@BENABLEPOSTING BIT,@NDIFFAMT NUMERIC(14,4),  
   @CXFRACCODE CHAR(10),@CEXCISEDUTYAC CHAR(10),@DMEMODT DATETIME,@CLOCGSTNO VARCHAR(50),  
   @CPARTYGSTNO VARCHAR(50),@BGSTBILL BIT,@CREFMEMOID VARCHAR(40),@BPOSTLOCALSTKXFR BIT,@cActualMemoNo VARCHAR(50),  
   @CCGSTTAXACCODE CHAR(10),@CSGSTTAXACCODE CHAR(10),@CIGSTTAXACCODE CHAR(10),@BMANUALROFF BIT,  
   @NROLIMIT NUMERIC(6,2),@CSEARCHGPCXNTYPEPREFIX VARCHAR(10),@CSEARCHGPCXNTYPESUFFIX VARCHAR(10),  
   @DGSTCUTOFFDATE DATETIME,@NOHGSTPCT NUMERIC(6,2),@BBLANKACFOUND BIT,@CERRORMSG VARCHAR(MAX),@bPOSTHOASCOSTCENTERforTds BIT,  
   @bPostRemarksInNarration BIT,@cRemarks VARCHAR(500),@cTcsAcCode CHAR(10),@CPOSTINGXNTYPEConfig VARCHAR(40)  
     
 SET @CERRORMSG=''  
   
 SET @CSTEP=10  
 DECLARE @CPARTYACCODE VARCHAR(10),@CPARTYSTATECODE VARCHAR(10),@NNETAMOUNT NUMERIC(14,4),  
   @NDISCAMOUNT NUMERIC(14,4),@NFREIGHT NUMERIC(14,4), @NOTHER NUMERIC(14,4),@NROUNDOFF NUMERIC(14,4),  
   @NDRTOTAL NUMERIC(14,4),@NCRTOTAL NUMERIC(14,4),@DCUTOFFDATE DATETIME,@CXNTYPE VARCHAR(10),  
   @CAC_CODE VARCHAR(20),@CVDID VARCHAR(40),@CCURLOCID VARCHAR(4),@cHoLocId VARCHAR(4)  
  
  print 'enter postact_gst_xfr'
 SELECT TOP 1 @CCURLOCID=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID   
  
 IF @CCURLOCID IS NULL  
  SELECT TOP 1 @CCURLOCID=VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'  
  
 SELECT TOP 1 @cHoLocId=VALUE FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'  
   

    SET @CXnItemType=(CASE WHEN @NXNITEMTYPE=3 THEN '_AST' WHEN @NXNITEMTYPE=4 THEN '_SRV'
								 WHEN @NXNITEMTYPE=2 THEN '_CON' ELSE '' END)
	
	SET @CPOSTINGXNTYPEConfig=@CPOSTINGXNTYPE

	SET @CPOSTINGXNTYPE=REPLACE(@CPOSTINGXNTYPEConfig,@CXnItemType,'')

    SET @CFREIGHTACCODE=''  
    SET @CROUNDOFFACCODE=''  
      
    SET @DGSTCUTOFFDATE='2017-07-01'  
      
    SET @CSTEP=20  
    --THIS TABLE VARIABLE STORE ERROR OF OF MEMO ID  
    DECLARE @ERRORS TABLE  
 (  
  XN_ID VARCHAR(40),XN_TYPE VARCHAR(30),XN_NO VARCHAR(40),  
  XN_DT DATETIME,XN_AMT NUMERIC(14,4),XN_AC VARCHAR(100),  
  ERR_DESC VARCHAR(500)  
 )     
      
    SET @CSTEP=30  
    DECLARE @VCHC TABLE   
 (  
  AC_CODE CHAR(10),NARRATION VARCHAR(200),XN_NO VARCHAR(30),  
  XN_DT DATETIME,DEPT_ID CHAR(4),AMOUNT NUMERIC(14,4),XN_ID VARCHAR(50),  
  REF_BILL_NO VARCHAR(50),REF_BILL_DATE DATETIME, ENTRY_ID INT  
  ,CRDAYS NUMERIC(5),tds_entry BIT  
 )  
   
 SET @CSTEP=40  
 DECLARE @VDC TABLE   
 (  
  AC_NAME VARCHAR(100), VD_ID VARCHAR(50),    VM_ID VARCHAR(40),    AC_CODE CHAR(10),   
  NARRATION VARCHAR(2000),   DEBIT_AMOUNT NUMERIC(14,4),  CREDIT_AMOUNT NUMERIC(14,4),  
  X_TYPE CHAR(2),     VS_AC_CODE CHAR(10),    REF_BILL_NO VARCHAR(40),   
  CREDIT_DAYS NUMERIC(10),  CR_DISCOUNT_PERCENTAGE NUMERIC(14,4),    
  VAT_ENTRY BIT,REF_BILL_DATE DATETIME )  
   
 SET @CSTEP=50  
 DECLARE @VMC TABLE  
 (  
  VM_ID VARCHAR(400),    VOUCHER_NO VARCHAR(400),   VOUCHER_DT DATETIME,   
  VOUCHER_CODE CHAR(10),    DEPT_ID CHAR(4),    BILL_TYPE VARCHAR(300),  
  BILL_NO VARCHAR(200),    BILL_ID VARCHAR(220),    BILL_DT DATETIME,   
  BILL_AC_CODE VARCHAR(100),  DRTOTAL NUMERIC(20,4),   CRTOTAL NUMERIC(20,4),   
  CASH_VOUCHER BIT,     SALE_VOUCHER BIT,     QUANTITY NUMERIC(20,4),   
  ANGADIA_CODE CHAR(70),    LR_NO VARCHAR(500),    LR_DT DATETIME,  
  PARTY_NAME VARCHAR(1000),  NET_AMOUNT NUMERIC(20,4),   BILL_STATUS VARCHAR(1000),  
  RM_LIST VARCHAR(3000),   CANCELLED BIT,     DEPT_NAME VARCHAR(100),  
  VOUCHER_TYPE VARCHAR(100)   
 )  
   
 SET @CSTEP=60  
 DECLARE @VLINK TABLE  
 (  
  VM_ID VARCHAR(100),MEMO_ID VARCHAR(100),XN_TYPE VARCHAR(20),LAST_UPDATE DATETIME  
 )  
   
 DECLARE @TBILL_BY_BILL_REF TABLE(VD_ID VARCHAR(40),REF_NO VARCHAR(40),AMOUNT NUMERIC(18,4),LAST_UPDATE DATETIME,  
          X_TYPE VARCHAR(20),CR_DAYS NUMERIC(5),REF_TYPE VARCHAR(10),VM_ID VARCHAR(40),on_account BIT)  
   
 PRINT 'CHECK POSTING ENABLED OR NOT FOR STOCK TRANSFER'  
  
 SELECT TOP 1 @BENABLEPOSTING=ENABLEPOSTING,@DCUTOFFDATE=CUTOFFDATE  
 FROM GST_ACCOUNTS_CONFIG_MST WHERE xn_type=@CPOSTINGXNTYPEConfig
   

--if @@spid=57
--	select @DCUTOFFDATE,@CPOSTINGXNTYPE

 SELECT TOP 1 @bPostRemarksInNarration=isnull(post_remarks_in_narration,0),@bPOSTHOASCOSTCENTERforTds=ISNULL(POST_TDS_AC_AT_HO,0)      
 FROM GST_ACCOUNTS_CONFIG_MST WHERE XN_TYPE=@CPOSTINGXNTYPEConfig AND ENABLEPOSTING=1   
   
 DECLARE @nPostingLoctype NUMERIC(1,0),@bEnablePostingatHo BIT  
  
 SELECT @nPostingLoctype=1,@bEnablePostingatHo=1  
  
 IF  @cHoLocId<>@CCURLOCID  
 BEGIN  
  SELECT @nPostingLoctype=loc_type ,@bEnablePostingatHo=ISNULL(Account_posting_at_ho,0) FROM  location (NOLOCK)  
  WHERE dept_id=@CCURLOCID  
  
  IF @nPostingLoctype=2 AND @bEnablePostingatHo=1  
  BEGIN  
   SET @cErrormsg='Franchise accounts posting can be done only at Head office..'  
  END  
  
 END   

 SET @DCUTOFFDATE=ISNULL(@DCUTOFFDATE,'')  
   
    
 SET @CSTEP=70  
 SET @CVOUCHERCODE = '0000000006'  
    BEGIN TRY  
   SET @CSTEP=80  
   IF OBJECT_ID('TEMPDB..#POSTS','U') IS NOT NULL  
    DROP TABLE #POSTS   
     
   SET @CSTEP=90  
   --THIS TABLE STORE ALL PENDING MEMO_ID   
   CREATE TABLE #POSTS (MEMO_ID VARCHAR(50),MODE VARCHAR(10),source_gst_no VARCHAR(20),  
   TARGET_GST_NO VARCHAR(20),source_pan_no VARCHAR(20),target_pan_no VARCHAR(20),posting_base NUMERIC(1,0),posting_dept_id CHAR(4))  
   
--   select @CPOSTINGXNTYPE,@NXNITEMTYPE
   SET @CSTEP=100  
   --GETTING LIST OF GROUP INVOICES THAT QUALIFY FOR VOUCHER POSTING  
   IF @CPOSTINGXNTYPE in ('CHO_WSL_SAME_PANNO','CHO_WSL_DIFF_PANNO','CHO_XFR')  
    INSERT INTO #POSTS (MEMO_ID,MODE,source_gst_no,TARGET_GST_NO,source_pan_no,target_pan_no)  
    SELECT A.INV_ID,'WSLCHO' AS MODE,sl.loc_gst_no,(CASE WHEN inv_mode=2 THEN tl.loc_gst_no  
    ELSE lmp.Ac_gst_no END),(CASE WHEN ISNULL(sl.loc_gst_no,'')<>'' THEN SUBSTRING(sl.loc_gst_no,3,10)  
    ELSE sl.PAN_NO END) source_pan_no,(CASE WHEN inv_mode=2 AND ISNULL(tl.loc_gst_no,'')<>''   
    THEN SUBSTRING(tl.loc_gst_no,3,10) WHEN inv_mode=2 AND ISNULL(tl.pan_no,'')<>''   
    THEN tl.pan_no ELSE ISNULL(lmp.PAN_NO,'') END) target_pan_no  
    FROM INM01106 A  
    JOIN LOCATION SL ON a.location_Code =SL.DEPT_ID  
    LEFT JOIN LOCATION TL ON A.PARTY_DEPT_ID=TL.DEPT_ID  
    LEFT JOIN loc_accounting_company lac1 (NOLOCK) ON lac1.pan_no=sl.PAN_NO  
    LEFT JOIN loc_accounting_company lac2 (NOLOCK) ON lac2.pan_no=SUBSTRING(sl.loc_gst_no,3,10)  
    LEFT OUTER JOIN   
    (  
     SELECT B.MEMO_ID,B.LAST_UPDATE  
     FROM POSTACT_VOUCHER_LINK B   
     JOIN VM01106 C ON C.VM_ID = B.VM_ID   
     WHERE C.CANCELLED=0 AND B.XN_TYPE = 'WSLCHO'   
    )VM  ON A.INV_ID = VM.MEMO_ID    
    LEFT OUTER JOIN LMP01106 LMP ON LMP.AC_CODE=A.AC_CODE  
    WHERE   ISNULL(a.xn_item_type,0)<>5 AND  
     -- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES  
    /*GROUP INVOICE IS NOT CANCELLED.*/  
    ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)    
    /*GROUP INVOICE INV_DT IS LESS THAN THE SPECIFIED DATE.*/  
    AND (@DCUTOFFDATE='' OR A.INV_DT>@DCUTOFFDATE)  
    /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/  
    AND (ISNULL(@CDEPTID,'')='' OR a.location_Code =@CDEPTID)  
    /*GROUP INVOICE IS NOT GROUP/BRANCH GROUP INVOICE*/  
    AND A.INV_DT BETWEEN @DGSTCUTOFFDATE AND  @DTTO   
    AND (INV_MODE=2 OR ((SL.LOC_GST_NO=ISNULL(LMP.AC_GST_NO,'') OR SUBSTRING(SL.LOC_GST_NO,3,10)=  
      SUBSTRING(LMP.AC_GST_NO,3,10)) AND ISNULL(LMP.AC_GST_NO,'')<>'')  
         OR (SL.PAN_NO=ISNULL(LMP.PAN_NO,'') AND ISNULL(LMP.PAN_NO,'')<>'')  
      OR (SUBSTRING(SL.LOC_GST_NO,3,10)=ISNULL(LMP.PAN_NO,'') AND ISNULL(LMP.PAN_NO,'')<>''))  
    /*GROUP INVOICE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/  
    AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE)   
    AND (lac1.pan_no IS NOT NULL OR lac2.pan_no IS NOT NULL)           
	AND (ISNULL(XN_ITEM_TYPE,1)=@NXNITEMTYPE  OR (ISNULL(XN_ITEM_TYPE,1) IN (0,1) AND @NXNITEMTYPE=1))
    AND ISNULL(memo_type,0) IN (0,1)

	IF  @CPOSTINGXNTYPE in ('CHI_PUR_SAME_PANNO','CHI_PUR_DIFF_PANNO','CHI_XFR')  
    BEGIN  
		INSERT INTO #POSTS (MEMO_ID,MODE,source_gst_no,TARGET_GST_NO,source_pan_no,target_pan_no,posting_dept_id)  
		SELECT A.MRR_ID,'PURCHI' AS MODE,(CASE WHEN a.inv_mode=2 THEN sl.loc_gst_no ELSE ISNULL(lmp.ac_gst_no,'') END) source_gst_no,  
		(CASE WHEN a.inv_mode=1 AND isnull(a.XN_ITEM_TYPE,0) NOT IN (0,1) THEN tlp.loc_gst_no 
		ELSE  tl.loc_gst_no END) as target_gst_no,  
		(CASE WHEN a.inv_mode=2 AND ISNULL(sl.loc_gst_no,'')<>'' THEN SUBSTRING(sl.loc_gst_no,3,10)  
		WHEN a.inv_mode=2 AND ISNULL(sl.pan_no,'')<>'' THEN sl.pan_no  
		WHEN a.inv_mode=1 AND ISNULL(lmp.ac_gst_no,'')<>'' THEN SUBSTRING(lmp.ac_gST_NO,3,10)  
		ELSE lmp.pan_no END) source_pan_no,(CASE WHEN a.inv_mode=1 AND isnull(a.XN_ITEM_TYPE,0) NOT IN (0,1) 
		AND isnull(tlp.loc_gst_no,'')<>'' THEN SUBSTRING(tlp.loc_gst_no,3,10)
		WHEN a.inv_mode=1 AND isnull(a.XN_ITEM_TYPE,0) NOT IN (0,1) 
		AND isnull(tlp.loc_gst_no,'')='' THEN tlp.pan_no
		WHEN ISNULL(tl.loc_gst_no,'')<>'' THEN SUBSTRING(tl.loc_gst_no,3,10) ELSE tl.pan_no END) target_pan_no  ,
		(CASE WHEN a.inv_mode=1 AND isnull(a.XN_ITEM_TYPE,0) NOT IN (0,1) THEN pur_for_dept_id ELSE a.dept_id END) posting_dept_id
		FROM PIM01106 A  
		LEFT JOIN INM01106 b ON A.INV_ID=b.INV_ID  
		LEFT JOIN LOCATION SL ON b.location_Code =SL.DEPT_ID  
		JOIN LOCATION TL ON A.location_Code=TL.DEPT_ID  
		LEFT JOIN location tlp (NOLOCK) ON tlp.dept_id=a.Pur_For_Dept_id
		LEFT JOIN lmp01106 lmp (NOLOCK) ON lmp.ac_code=a.ac_code  
		LEFT JOIN loc_accounting_company lac1 (NOLOCK) ON lac1.pan_no=tl.PAN_NO  
		LEFT JOIN loc_accounting_company lac2 (NOLOCK) ON lac2.pan_no=SUBSTRING(tl.loc_gst_no,3,10)  
		LEFT OUTER JOIN   
		(  
		 SELECT B.MEMO_ID,B.LAST_UPDATE  
		 FROM POSTACT_VOUCHER_LINK B   
		 JOIN VM01106 C ON C.VM_ID = B.VM_ID   
		 WHERE C.CANCELLED=0 AND B.XN_TYPE = 'PURCHI'   
		)VM  ON A.MRR_ID = VM.MEMO_ID    
		WHERE  coalesce(b.xn_item_type,a.xn_item_type,0)<>5   
		AND (a.INV_MODE=2 OR ((TL.LOC_GST_NO=ISNULL(LMP.AC_GST_NO,'') OR SUBSTRING(TL.LOC_GST_NO,3,10)=  
		  SUBSTRING(LMP.AC_GST_NO,3,10)) AND ISNULL(LMP.AC_GST_NO,'')<>'' AND isnull(a.xn_item_type,0) IN (0,1))  
			 OR (TL.PAN_NO=ISNULL(LMP.PAN_NO,'') AND ISNULL(LMP.PAN_NO,'')<>''  AND isnull(a.xn_item_type,0) IN (0,1))  
		  OR (SUBSTRING(TL.LOC_GST_NO,3,10)=ISNULL(LMP.PAN_NO,'') AND ISNULL(LMP.PAN_NO,'')<>''  AND isnull(a.xn_item_type,0) IN (0,1))

		   OR ((TLP.LOC_GST_NO=ISNULL(LMP.AC_GST_NO,'') OR SUBSTRING(TLP.LOC_GST_NO,3,10)=  
		  SUBSTRING(LMP.AC_GST_NO,3,10)) AND ISNULL(LMP.AC_GST_NO,'')<>'' AND isnull(a.xn_item_type,0) NOT IN (0,1))  
			 OR (TLP.PAN_NO=ISNULL(LMP.PAN_NO,'') AND ISNULL(LMP.PAN_NO,'')<>''  AND isnull(a.xn_item_type,0) NOT IN (0,1))  
		  OR (SUBSTRING(TLP.LOC_GST_NO,3,10)=ISNULL(LMP.PAN_NO,'') AND ISNULL(LMP.PAN_NO,'')<>''  AND isnull(a.xn_item_type,0) NOT IN (0,1))
		  )  
		-- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES  
		/*GROUP INVOICE IS NOT CANCELLED.*/  
		AND ((ISNULL(b.cancelled,A.CANCELLED)=1 AND VM.MEMO_ID IS NOT NULL) OR ISNULL(b.cancelled,A.CANCELLED)=0)
		/*GROUP INVOICE RECEIPT_DT IS LESS THAN THE SPECIFIED DATE.*/  
           
		AND (@DCUTOFFDATE='' OR ((A.BILL_DT>@DCUTOFFDATE)  
			  OR (A.INV_DT>@DCUTOFFDATE)))  
		/*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/  
		AND (ISNULL(@CDEPTID,'')='' OR a.location_Code =@CDEPTID)  
	   /*GROUP INVOICE IS NOT GROUP/BRANCH GROUP INVOICE*/   
		AND A.BILL_DT  BETWEEN @DGSTCUTOFFDATE AND  @DTTO  
		/*GROUP INVOICE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/  
		AND (VM.MEMO_ID IS NULL OR (a.inv_mode=1 AND VM.LAST_UPDATE <> A.LAST_UPDATE) OR (a.inv_mode=2 AND VM.LAST_UPDATE <> b.LAST_UPDATE))
		AND (lac1.pan_no IS NOT NULL OR lac2.pan_no IS NOT NULL)           
		AND a.total_amount<>0
		AND (coalesce(b.xn_item_type,a.xn_item_type,1)=@NXNITEMTYPE  OR (coalesce(b.xn_item_type,a.xn_item_type,1) IN (0,1) AND @NXNITEMTYPE=1))
		AND (a.inv_mode=2 OR A.bill_challan_mode=0)
		AND ISNULL(a.memo_type,0) IN (0,1)
   END   
     
   IF @CPOSTINGXNTYPE in ('CHO_PRT_SAME_PANNO','CHO_PRT_DIFF_PANNO','CHO_XFR')  
    INSERT INTO #POSTS (MEMO_ID,MODE,source_gst_no,TARGET_GST_NO,source_pan_no,target_pan_no)  
    SELECT A.RM_ID,'PRTCHO' AS MODE,sl.loc_gst_no,(CASE WHEN mode=2 THEN tl.loc_gst_no  
    ELSE lmp.Ac_gst_no END),(CASE WHEN ISNULL(sl.loc_gst_no,'')<>'' THEN SUBSTRING(sl.loc_gst_no,3,10)  
    ELSE sl.PAN_NO END) source_pan_no,(CASE WHEN mode=2 AND ISNULL(tl.loc_gst_no,'')<>''   
    THEN SUBSTRING(tl.loc_gst_no,3,10) WHEN mode=2 AND ISNULL(tl.pan_no,'')<>''   
    THEN tl.pan_no ELSE ISNULL(lmp.PAN_NO,'') END) target_pan_no  
    FROM RMM01106 A  
    JOIN LOCATION SL ON a.location_Code =SL.DEPT_ID  
    LEFT JOIN LOCATION TL ON A.PARTY_DEPT_ID=TL.DEPT_ID  
    LEFT JOIN lmp01106 lmp (NOLOCK) ON lmp.ac_code=a.ac_code  
    LEFT JOIN loc_accounting_company lac1 (NOLOCK) ON lac1.pan_no=sl.PAN_NO  
    LEFT JOIN loc_accounting_company lac2 (NOLOCK) ON lac2.pan_no=SUBSTRING(sl.loc_gst_no,3,10)  
    LEFT OUTER JOIN   
    (  
     SELECT B.MEMO_ID,B.LAST_UPDATE  
     FROM POSTACT_VOUCHER_LINK B   
     JOIN VM01106 C ON C.VM_ID = B.VM_ID   
     WHERE C.CANCELLED=0 AND B.XN_TYPE = 'PRTCHO'   
    )VM  ON A.RM_ID = VM.MEMO_ID    
    WHERE  ISNULL(a.xn_item_type,0)<>5 AND
     -- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES  
    /*GROUP INVOICE IS NOT CANCELLED.*/  
    ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)    
    /*GROUP INVOICE INV_DT IS LESS THAN THE SPECIFIED DATE.*/  
    AND (@DCUTOFFDATE='' OR A.RM_DT>@DCUTOFFDATE)  
    /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/  
    AND (ISNULL(@CDEPTID,'')='' OR a.location_Code =@CDEPTID)  
    /*GROUP INVOICE IS NOT GROUP/BRANCH GROUP INVOICE*/  
    AND A.RM_DT  BETWEEN @DGSTCUTOFFDATE AND  @DTTO  
    AND (MODE=2 OR ((SL.LOC_GST_NO=ISNULL(LMP.AC_GST_NO,'') OR SUBSTRING(SL.LOC_GST_NO,3,10)=  
      SUBSTRING(LMP.AC_GST_NO,3,10)) AND ISNULL(LMP.AC_GST_NO,'')<>'')  
         OR (SL.PAN_NO=ISNULL(LMP.PAN_NO,'') AND ISNULL(LMP.PAN_NO,'')<>'')  
      OR (SUBSTRING(SL.LOC_GST_NO,3,10)=ISNULL(LMP.PAN_NO,'') AND ISNULL(LMP.PAN_NO,'')<>''))  
    /*GROUP INVOICE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/  
    AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE)   
    AND (lac1.pan_no IS NOT NULL OR lac2.pan_no IS NOT NULL)  
    AND (ISNULL(XN_ITEM_TYPE,1)=@NXNITEMTYPE  OR (ISNULL(XN_ITEM_TYPE,1) IN (0,1) AND @NXNITEMTYPE=1))
	AND ISNULL(a.memo_type,0) IN (0,1)

   IF  @CPOSTINGXNTYPE in ('CHI_WSR_SAME_PANNO','CHI_WSR_DIFF_PANNO','CHI_XFR')  
    INSERT INTO #POSTS (MEMO_ID,MODE,source_gst_no,TARGET_GST_NO,source_pan_no,target_pan_no)  
    SELECT A.CN_ID,'WSRCHI' AS MODE,(CASE WHEN a.mode=2 THEN sl.loc_gst_no ELSE ISNULL(lmp.ac_gst_no,'') END) source_gst_no,  
    tl.loc_gst_no as target_gst_no,  
    (CASE WHEN a.mode=2 AND ISNULL(sl.loc_gst_no,'')<>'' THEN SUBSTRING(sl.loc_gst_no,3,10)  
    WHEN a.mode=2 AND ISNULL(sl.pan_no,'')<>'' THEN sl.pan_no  
    WHEN a.mode=1 AND ISNULL(lmp.ac_gst_no,'')<>'' THEN SUBSTRING(lmp.ac_gST_NO,3,10)  
    ELSE lmp.pan_no END) source_pan_no,(CASE WHEN ISNULL(tl.loc_gst_no,'')<>''   
    THEN SUBSTRING(tl.loc_gst_no,3,10) ELSE tl.pan_no END) target_pan_no  
    FROM CNM01106 A  
    LEFT JOIN RMM01106 b ON A.RM_ID=b.RM_ID  
    LEFT JOIN LOCATION SL ON b.location_Code =SL.DEPT_ID  
    JOIN LOCATION TL ON a.location_Code =TL.DEPT_ID  
    LEFT JOIN lmp01106 lmp (NOLOCK) ON lmp.ac_code=a.ac_code  
    LEFT JOIN loc_accounting_company lac1 (NOLOCK) ON lac1.pan_no=tl.PAN_NO  
    LEFT JOIN loc_accounting_company lac2 (NOLOCK) ON lac2.pan_no=SUBSTRING(tl.loc_gst_no,3,10)      
    LEFT OUTER JOIN   
    (  
     SELECT B.MEMO_ID,B.LAST_UPDATE  
     FROM POSTACT_VOUCHER_LINK B   
     JOIN VM01106 C ON C.VM_ID = B.VM_ID   
     WHERE C.CANCELLED=0 AND B.XN_TYPE = 'WSRCHI'   
    )VM  ON A.CN_ID = VM.MEMO_ID    
    WHERE  coalesce(b.xn_item_type,a.xn_item_type,0)<>5   
    AND (a.MODE=2 OR ((TL.LOC_GST_NO=ISNULL(LMP.AC_GST_NO,'') OR SUBSTRING(TL.LOC_GST_NO,3,10)=  
      SUBSTRING(LMP.AC_GST_NO,3,10)) AND ISNULL(LMP.AC_GST_NO,'')<>'')  
         OR (TL.PAN_NO=ISNULL(LMP.PAN_NO,'') AND ISNULL(LMP.PAN_NO,'')<>'')  
      OR (SUBSTRING(TL.LOC_GST_NO,3,10)=ISNULL(LMP.PAN_NO,'') AND ISNULL(LMP.PAN_NO,'')<>'')  
     OR (TL.PAN_NO=ISNULL(LMP.PAN_NO,'') AND ISNULL(LMP.PAN_NO,'')<>'')) AND  
    /*GROUP INVOICE IS NOT CANCELLED.*/  
    ((ISNULL(b.cancelled,A.CANCELLED)=1 AND VM.MEMO_ID IS NOT NULL) OR ISNULL(b.cancelled,A.CANCELLED)=0)  
    /*GROUP INVOICE RECEIPT_DT IS LESS THAN THE SPECIFIED DATE.*/  
    AND (  
        (A.RECEIPT_DT BETWEEN @DGSTCUTOFFDATE AND  @DTTO) OR  
        (A.CN_DT BETWEEN @DGSTCUTOFFDATE AND  @DTTO)   
     ) AND (a.mode<>2 OR a.receipt_dt<>'')  
    AND (@DCUTOFFDATE='' OR ((A.RECEIPT_DT>@DCUTOFFDATE)  
          OR (A.CN_DT>@DCUTOFFDATE)))      
    /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/  
    AND (ISNULL(@CDEPTID,'')='' OR a.location_Code =@CDEPTID)  
    /*GROUP INVOICE IS NOT GROUP/BRANCH GROUP INVOICE*/  
    /*GROUP INVOICE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/  
    AND (VM.MEMO_ID IS NULL OR (a.mode=1 AND VM.LAST_UPDATE <> A.LAST_UPDATE) OR (a.mode=2 AND VM.LAST_UPDATE <> b.LAST_UPDATE))
    AND (lac1.pan_no IS NOT NULL OR lac2.pan_no IS NOT NULL)  
    AND (coalesce(b.xn_item_type,a.xn_item_type,1)=@NXNITEMTYPE  OR (coalesce(b.xn_item_type,a.xn_item_type,1) IN (0,1) AND @NXNITEMTYPE=1))
	AND ISNULL(a.memo_type,0) IN (0,1)

   SET @CSTEP = 330  
   CREATE INDEX IX_TEMP_WSLTABLE_RM_ID ON #POSTS(MEMO_ID)  
     
   SET @CSTEP = 335  
   UPDATE #posts SET posting_base=(CASE WHEN  source_gst_no=target_gst_no AND ISNULL(target_gst_no,'')<>''  
   AND ISNULL(source_gst_no,'')<>'' THEN 1 WHEN source_pan_no=target_pan_no AND ISNULL(source_pan_no,'')<>''  
   AND ISNULL(target_pan_no,'')<>'' THEN 2 ELSE 3 END)  
  
  	--	if @@spid=59
			--select 'check posts',* from #posts

  
         --SELECT COUNT(*) FROM #POSTS  
         IF OBJECT_ID('TEMPDB..#V_PROCESS','U') IS NOT NULL  
    DROP TABLE #V_PROCESS  
     
     
   SET @CSTEP = 340  
   /*  
    BILL_LEVEL_TAX_METHOD : 1 IS EXCLUSIVE  
          2 IS INCLUSIVE  
                
   */  
  
  
     SELECT    
      @CPOSTINGXNTYPEConfig AS POSTING_XN_TYPE,  
      A.INV_NO AS MEMO_NO,   
     A.INV_ID AS MEMO_ID,   
     A.INV_DT AS MEMO_DT,  
     a.ac_code AS DEPT_AC_CODE,   
     A.REMARKS,   
     A.NET_AMOUNT AS MEMO_AMOUNT  
     ,A.CANCELLED  
     ,A.FREIGHT_TAXABLE_VALUE*-1 AS FREIGHT  
     ,A.OTHER_CHARGES_TAXABLE_VALUE*-1 AS OTHERCHARGES  
     ,A.INSURANCE_TAXABLE_VALUE*-1 AS INSURANCE       
     ,IND.QUANTITY AS QUANTITY  
     ,a.location_Code  AS DEPT_ID  
     ,A.FIN_YEAR  
     ,D.AC_NAME AS PARTY_NAME  
     ,'0000000007' AS VOUCHER_TYPE  
     ,A.INV_ID AS REF_MEMO_ID  
     ,A.INV_DT AS REF_MEMO_DT  
     ,'WSLCHO' AS XN_TYPE  
     ,ISNULL(IND.GST_PERCENTAGE,0) AS GST_PERCENTAGE  
     ,XN_VALUE_WITHOUT_GST  
      ,IGST_AMOUNT  
      ,CGST_AMOUNT  
      ,SGST_AMOUNT  
     ,GST_CESS_AMOUNT  
     ,ind.GST_CESS_PERCENTAGE  
      ,FREIGHT_GST_PERCENTAGE  
      ,OTHER_CHARGES_GST_PERCENTAGE  
      ,INSURANCE_GST_PERCENTAGE  
      ,(FREIGHT_IGST_AMOUNT*-1) AS FREIGHT_IGST_AMOUNT  
      ,(FREIGHT_CGST_AMOUNT*-1) AS FREIGHT_CGST_AMOUNT  
      ,(FREIGHT_SGST_AMOUNT*-1) AS FREIGHT_SGST_AMOUNT  
      ,(INSURANCE_IGST_AMOUNT*-1) AS INSURANCE_IGST_AMOUNT  
      ,(INSURANCE_CGST_AMOUNT*-1) AS INSURANCE_CGST_AMOUNT  
      ,(INSURANCE_SGST_AMOUNT*-1) AS INSURANCE_SGST_AMOUNT  
      ,(OTHER_CHARGES_IGST_AMOUNT*-1) AS OTHER_CHARGES_IGST_AMOUNT  
      ,(OTHER_CHARGES_CGST_AMOUNT*-1) AS OTHER_CHARGES_CGST_AMOUNT  
      ,(OTHER_CHARGES_SGST_AMOUNT*-1) AS OTHER_CHARGES_SGST_AMOUNT  
      ,LOCS.GST_STATE_CODE AS SOURCE_GST_STATE_CODE  
      ,LOCT.GST_STATE_CODE AS TARGET_GST_STATE_CODE  
         ,(A.FREIGHT_TAXABLE_VALUE+(CASE WHEN A.OH_TAX_METHOD=2 THEN A.FREIGHT_IGST_AMOUNT+A.FREIGHT_CGST_AMOUNT+A.FREIGHT_SGST_AMOUNT ELSE 0 END)-A.FREIGHT) AS FREIGHT_RO  
           ,(A.OTHER_CHARGES_TAXABLE_VALUE+(CASE WHEN A.OH_TAX_METHOD=2 THEN A.OTHER_CHARGES_IGST_AMOUNT+A.OTHER_CHARGES_CGST_AMOUNT+A.OTHER_CHARGES_SGST_AMOUNT ELSE 0 END)-A.OTHER_CHARGES) AS OTHER_CHARGES_RO         
           ,(A.INSURANCE_TAXABLE_VALUE+(CASE WHEN A.OH_TAX_METHOD=2 THEN A.INSURANCE_IGST_AMOUNT+A.INSURANCE_CGST_AMOUNT+A.INSURANCE_SGST_AMOUNT ELSE 0 END)-A.INSURANCE) AS INSURANCE_RO   
           ,A.FREIGHT*-1 AS MEMO_FREIGHT  
      ,A.OTHER_CHARGES*-1 AS MEMO_OTHER_CHARGES       
      ,OH_TAX_METHOD  
      ,LOCS.LOC_GST_NO AS SOURCE_GST_NO  
     ,(CASE WHEN INV_MODE=2 THEN LOCT.LOC_GST_NO ELSE D.AC_GST_NO END) AS TARGET_GST_NO        
     ,A.ROUND_OFF,A.MANUAL_ROUNDOFF  
     ,A.INSURANCE*-1 AS MEMO_INSURANCE  
     , CONVERT(CHAR(10),'') AS IGST_REVENUE_AC_CODE  
     , CONVERT(CHAR(10),'') AS LGST_REVENUE_AC_CODE  
     , CONVERT(CHAR(10),'') AS  IGST_TAX_AC_CODE  
     , CONVERT(CHAR(10),'') AS  CGST_TAX_AC_CODE  
     , CONVERT(CHAR(10),'') AS  SGST_TAX_AC_CODE  
     , CONVERT(CHAR(10),'') AS GST_CESS_AC_CODE  
     , CONVERT(CHAR(10),'') AS  FREIGHT_IGST_REVENUE_AC_CODE  
     , CONVERT(CHAR(10),'') AS  FREIGHT_LGST_REVENUE_AC_CODE  
     , CONVERT(CHAR(10),'') AS  FREIGHT_SGST_TAX_AC_CODE  
     , CONVERT(CHAR(10),'') AS  FREIGHT_CGST_TAX_AC_CODE  
     , CONVERT(CHAR(10),'') AS  FREIGHT_IGST_TAX_AC_CODE  
     , CONVERT(CHAR(10),'') AS  OTHER_CHARGES_IGST_REVENUE_AC_CODE  
     , CONVERT(CHAR(10),'') AS  OTHER_CHARGES_LGST_REVENUE_AC_CODE  
     , CONVERT(CHAR(10),'') AS  OTHER_CHARGES_SGST_TAX_AC_CODE  
     , CONVERT(CHAR(10),'') AS  OTHER_CHARGES_CGST_TAX_AC_CODE  
     , CONVERT(CHAR(10),'') AS  OTHER_CHARGES_IGST_TAX_AC_CODE                    
     , CONVERT(CHAR(10),'') AS  INSURANCE_IGST_REVENUE_AC_CODE  
     , CONVERT(CHAR(10),'') AS  INSURANCE_LGST_REVENUE_AC_CODE  
     , CONVERT(CHAR(10),'') AS  INSURANCE_SGST_TAX_AC_CODE  
     , CONVERT(CHAR(10),'') AS  INSURANCE_CGST_TAX_AC_CODE  
     , CONVERT(CHAR(10),'') AS  INSURANCE_IGST_TAX_AC_CODE                    
     ,SECTION_CODE,ART.SUB_SECTION_CODE,0 AS CASHDISCOUNTAMOUNT,0 AS CD_PCT                              
     ,a.gst_round_off,isnull(a.tcs_amount,0) tcs_amount ,CONVERT(NUMERIC(10,2),0) tds_amount ,
	 CONVERT(VARCHAR(50),'') actual_memo_no
   INTO #V_PROCESS  
   FROM INM01106 A   
   JOIN #POSTS PS ON A.INV_ID=PS.MEMO_ID AND PS.MODE='WSLCHO'  
   JOIN IND01106 IND ON A.INV_ID=IND.INV_ID  
   LEFT OUTER JOIN XFRCONFIGDET PC ON IND.ITEM_FORM_ID=PC.FORMID   
   JOIN LOCATION LOCS ON LOCS.DEPT_ID=a.location_Code   
   JOIN LM01106 LMLOC ON LMLOC.AC_CODE=LOCS.DEPT_AC_CODE  
   LEFT OUTER JOIN LOCATION LOCT ON LOCT.DEPT_ID=A.PARTY_DEPT_ID  
   LEFT OUTER JOIN LMV01106 D ON A.AC_CODE = D.AC_CODE  
   JOIN AREA ON AREA.AREA_CODE=LOCS.AREA_CODE  
   JOIN CITY ON CITY.CITY_CODE=AREA.CITY_CODE  
   JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=IND.PRODUCT_CODE  
   JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE  
   JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE  
   LEFT OUTER JOIN GST_ACCOUNTS_CONFIG_MST GACM_CO_CO ON GACM_CO_CO.XN_TYPE='CHO_WSL_SAME_PANNO'+@CXnItemType AND GACM_CO_CO.ENABLEPOSTING=1  
   LEFT OUTER JOIN GST_ACCOUNTS_CONFIG_MST GACM_NONCO_NONCO ON GACM_NONCO_NONCO.XN_TYPE='CHO_WSL_DIFF_PANNO'+@CXnItemType AND GACM_NONCO_NONCO.ENABLEPOSTING=1  
   LEFT OUTER JOIN GST_ACCOUNTS_CONFIG_MST GACM_XFR ON GACM_XFR.XN_TYPE='CHO_XFR'+@CXnItemType AND GACM_XFR.ENABLEPOSTING=1  
   WHERE 1=2  
  
   --  select @NXNITEMTYPE,@DCUTOFFDATE,@dtto,@cDeptId,@CPOSTINGXNTYPE,@CPOSTINGXNTYPEConfig,@CXnItemType
   --select 'check posts',* from  #posts

   SET @CSTEP = 350  
   --A SINGLE GROUP INVOICE MEMO CAN HAVE MULTIPLE GROUP INVOICE AND TAX ACCOUNTS BASED ON MULTIPLE FORMS  
   IF @CPOSTINGXNTYPE in ('CHO_WSL_SAME_PANNO','CHO_WSL_DIFF_PANNO','CHO_XFR')  
    INSERT INTO #V_PROCESS (POSTING_XN_TYPE,MEMO_NO,MEMO_ID,MEMO_DT,DEPT_AC_CODE,REMARKS,   
    MEMO_AMOUNT,CANCELLED,FREIGHT,OTHERCHARGES,INSURANCE,QUANTITY,DEPT_ID,  
    FIN_YEAR,PARTY_NAME,VOUCHER_TYPE,REF_MEMO_ID,REF_MEMO_DT,XN_TYPE,GST_PERCENTAGE,XN_VALUE_WITHOUT_GST,  
     IGST_AMOUNT,CGST_AMOUNT,SGST_AMOUNT,GST_CESS_AMOUNT,GST_CESS_PERCENTAGE,FREIGHT_GST_PERCENTAGE,  
     OTHER_CHARGES_GST_PERCENTAGE,INSURANCE_GST_PERCENTAGE,FREIGHT_IGST_AMOUNT,FREIGHT_CGST_AMOUNT,  
        FREIGHT_SGST_AMOUNT,INSURANCE_IGST_AMOUNT,INSURANCE_CGST_AMOUNT,INSURANCE_SGST_AMOUNT,OTHER_CHARGES_IGST_AMOUNT,  
     OTHER_CHARGES_CGST_AMOUNT,OTHER_CHARGES_SGST_AMOUNT,  
     MEMO_FREIGHT,MEMO_OTHER_CHARGES,OH_TAX_METHOD,  
     SOURCE_GST_NO,TARGET_GST_NO,ROUND_OFF,MANUAL_ROUNDOFF,mEMO_INSURANCE,IGST_REVENUE_AC_CODE,  
    LGST_REVENUE_AC_CODE,IGST_TAX_AC_CODE,CGST_TAX_AC_CODE,SGST_TAX_AC_CODE,GST_CESS_AC_CODE,  
    FREIGHT_IGST_REVENUE_AC_CODE,FREIGHT_LGST_REVENUE_AC_CODE,FREIGHT_SGST_TAX_AC_CODE,  
    FREIGHT_CGST_TAX_AC_CODE,FREIGHT_IGST_TAX_AC_CODE,OTHER_CHARGES_IGST_REVENUE_AC_CODE,  
    OTHER_CHARGES_LGST_REVENUE_AC_CODE,OTHER_CHARGES_SGST_TAX_AC_CODE,OTHER_CHARGES_CGST_TAX_AC_CODE,  
    OTHER_CHARGES_IGST_TAX_AC_CODE,INSURANCE_IGST_REVENUE_AC_CODE,INSURANCE_LGST_REVENUE_AC_CODE,  
    INSURANCE_SGST_TAX_AC_CODE,INSURANCE_CGST_TAX_AC_CODE,INSURANCE_IGST_TAX_AC_CODE,SECTION_CODE,  
    SUB_SECTION_CODE,CASHDISCOUNTAMOUNT,CD_PCT,gst_round_off,tcs_amount)  
  
    SELECT    
      @CPOSTINGXNTYPEConfig AS POSTING_XN_TYPE,  
      A.INV_NO AS MEMO_NO,   
     A.INV_ID AS MEMO_ID,   
     A.INV_DT AS MEMO_DT,  
     a.ac_code AS DEPT_AC_CODE,   
     A.REMARKS,   
     A.NET_AMOUNT AS MEMO_AMOUNT  
     ,A.CANCELLED  
     ,A.FREIGHT_TAXABLE_VALUE*-1 AS FREIGHT  
     ,A.OTHER_CHARGES_TAXABLE_VALUE*-1 AS OTHERCHARGES  
     ,A.INSURANCE_TAXABLE_VALUE*-1 AS INSURANCE       
     ,SUM(IND.QUANTITY) AS QUANTITY  
     ,a.location_Code  AS DEPT_ID  
     ,A.FIN_YEAR  
     ,D.AC_NAME AS PARTY_NAME  
     ,'0000000007' AS VOUCHER_TYPE  
     ,A.INV_ID AS REF_MEMO_ID  
     ,A.INV_DT AS REF_MEMO_DT  
     ,'WSLCHO' AS XN_TYPE  
     ,ISNULL(IND.GST_PERCENTAGE,0) AS GST_PERCENTAGE  
     ,SUM(XN_VALUE_WITHOUT_GST)*-1 AS XN_VALUE_WITHOUT_GST  
      ,SUM(IGST_AMOUNT)*-1 AS IGST_AMOUNT  
      ,SUM(CGST_AMOUNT)*-1 AS CGST_AMOUNT  
      ,SUM(SGST_AMOUNT)*-1 AS SGST_AMOUNT  
     ,SUM(GST_CESS_AMOUNT)*-1 AS GST_CESS_AMOUNT  
     ,ind.GST_CESS_PERCENTAGE  
      ,FREIGHT_GST_PERCENTAGE  
      ,OTHER_CHARGES_GST_PERCENTAGE  
      ,INSURANCE_GST_PERCENTAGE  
      ,(FREIGHT_IGST_AMOUNT*-1) AS FREIGHT_IGST_AMOUNT  
      ,(FREIGHT_CGST_AMOUNT*-1) AS FREIGHT_CGST_AMOUNT  
      ,(FREIGHT_SGST_AMOUNT*-1) AS FREIGHT_SGST_AMOUNT  
      ,(INSURANCE_IGST_AMOUNT*-1) AS INSURANCE_IGST_AMOUNT  
      ,(INSURANCE_CGST_AMOUNT*-1) AS INSURANCE_CGST_AMOUNT  
      ,(INSURANCE_SGST_AMOUNT*-1) AS INSURANCE_SGST_AMOUNT  
      ,(OTHER_CHARGES_IGST_AMOUNT*-1) AS OTHER_CHARGES_IGST_AMOUNT  
      ,(OTHER_CHARGES_CGST_AMOUNT*-1) AS OTHER_CHARGES_CGST_AMOUNT  
      ,(OTHER_CHARGES_SGST_AMOUNT*-1) AS OTHER_CHARGES_SGST_AMOUNT  
           ,A.FREIGHT*-1 AS MEMO_FREIGHT  
      ,A.OTHER_CHARGES*-1 AS MEMO_OTHER_CHARGES       
      ,OH_TAX_METHOD  
      ,LOCS.LOC_GST_NO AS SOURCE_GST_NO  
     ,(CASE WHEN INV_MODE=2 THEN LOCT.LOC_GST_NO ELSE D.AC_GST_NO END) AS TARGET_GST_NO        
     ,A.ROUND_OFF,A.MANUAL_ROUNDOFF  
     ,A.INSURANCE*-1 AS MEMO_INSURANCE  
     , (CASE WHEN IGST_AMOUNT<>0 OR LOCS.GST_STATE_CODE<>LOCT.GST_STATE_CODE THEN '0000000000' ELSE '' END) AS IGST_REVENUE_AC_CODE  
     , (CASE WHEN CGST_AMOUNT<>0 OR LOCS.GST_STATE_CODE=LOCT.GST_STATE_CODE THEN '0000000000' ELSE '' END) AS LGST_REVENUE_AC_CODE  
     , (CASE WHEN IGST_AMOUNT<>0  THEN '0000000000' ELSE '' END) AS IGST_TAX_AC_CODE  
     , (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)  AS CGST_TAX_AC_CODE  
     , (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)  AS SGST_TAX_AC_CODE  
     , '0000000000' AS GST_CESS_AC_CODE  
     , (CASE WHEN (ISNULL(A.FREIGHT_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LOCT.GST_STATE_CODE)   
       AND A.FREIGHT<>0 AND ISNULL(A.FREIGHT_GST_PERCENTAGE,0)<>0  
       THEN '0000000000' ELSE '' END)  AS FREIGHT_IGST_REVENUE_AC_CODE  
     , (CASE WHEN (ISNULL(A.FREIGHT_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LOCT.GST_STATE_CODE OR ISNULL(A.FREIGHT_GST_PERCENTAGE,0)=0)   
       AND A.FREIGHT<>0  
       THEN '0000000000' ELSE '' END) AS FREIGHT_LGST_REVENUE_AC_CODE  
     , (CASE WHEN ISNULL(A.FREIGHT_SGST_AMOUNT,0)<>0 AND A.FREIGHT<>0  
       THEN '0000000000' ELSE '' END)  AS FREIGHT_SGST_TAX_AC_CODE  
     , (CASE WHEN ISNULL(A.FREIGHT_CGST_AMOUNT,0)<>0 AND A.FREIGHT<>0  
       THEN '0000000000' ELSE '' END)  AS FREIGHT_CGST_TAX_AC_CODE  
     , (CASE WHEN ISNULL(A.FREIGHT_IGST_AMOUNT,0)<>0  AND A.FREIGHT<>0  
       THEN '0000000000' ELSE '' END)  AS FREIGHT_IGST_TAX_AC_CODE  
       
     , (CASE WHEN (ISNULL(A.OTHER_CHARGES_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LOCT.GST_STATE_CODE) AND A.OTHER_CHARGES<>0  AND ISNULL(A.OTHER_CHARGES_GST_PERCENTAGE,0)<>0  
       THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_IGST_REVENUE_AC_CODE  
     , (CASE WHEN (ISNULL(A.OTHER_CHARGES_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LOCT.GST_STATE_CODE OR ISNULL(A.OTHER_CHARGES_GST_PERCENTAGE,0)=0 ) AND A.OTHER_CHARGES<>0  
       THEN '0000000000' ELSE '' END) AS OTHER_CHARGES_LGST_REVENUE_AC_CODE  
     , (CASE WHEN ISNULL(A.OTHER_CHARGES_SGST_AMOUNT,0)<>0 AND A.OTHER_CHARGES<>0  
       THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_SGST_TAX_AC_CODE  
     , (CASE WHEN ISNULL(A.OTHER_CHARGES_CGST_AMOUNT,0)<>0 AND A.OTHER_CHARGES<>0  
       THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_CGST_TAX_AC_CODE  
     , (CASE WHEN ISNULL(A.OTHER_CHARGES_IGST_AMOUNT,0)<>0  AND A.OTHER_CHARGES<>0  
       THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_IGST_TAX_AC_CODE                    
  
     , (CASE WHEN (ISNULL(A.INSURANCE_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LOCT.GST_STATE_CODE) AND A.INSURANCE<>0  AND ISNULL(A.INSURANCE_GST_PERCENTAGE,0)<>0  
       THEN '0000000000' ELSE '' END)  AS INSURANCE_IGST_REVENUE_AC_CODE  
     , (CASE WHEN (ISNULL(A.INSURANCE_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LOCT.GST_STATE_CODE OR ISNULL(A.INSURANCE_GST_PERCENTAGE,0)=0 ) AND A.INSURANCE<>0  
       THEN '0000000000' ELSE '' END) AS INSURANCE_LGST_REVENUE_AC_CODE  
     , (CASE WHEN ISNULL(A.INSURANCE_SGST_AMOUNT,0)<>0 AND A.INSURANCE<>0  
       THEN '0000000000' ELSE '' END)  AS INSURANCE_SGST_TAX_AC_CODE  
     , (CASE WHEN ISNULL(A.INSURANCE_CGST_AMOUNT,0)<>0 AND A.INSURANCE<>0  
       THEN '0000000000' ELSE '' END)  AS INSURANCE_CGST_TAX_AC_CODE  
     , (CASE WHEN ISNULL(A.INSURANCE_IGST_AMOUNT,0)<>0  AND A.INSURANCE<>0  
       THEN '0000000000' ELSE '' END)  AS INSURANCE_IGST_TAX_AC_CODE                    
     ,SECTION_CODE,ART.SUB_SECTION_CODE,0 AS CASHDISCOUNTAMOUNT,0 AS CD_PCT                              
     ,a.gst_round_off,isnull(a.tcs_amount,0) tcs_amount  
   FROM INM01106 A   
   JOIN #POSTS PS ON A.INV_ID=PS.MEMO_ID AND PS.MODE='WSLCHO'  
   JOIN IND01106 IND ON A.INV_ID=IND.INV_ID  
   LEFT OUTER JOIN XFRCONFIGDET PC ON IND.ITEM_FORM_ID=PC.FORMID   
   JOIN LOCATION LOCS ON LOCS.DEPT_ID=a.location_Code   
   JOIN LM01106 LMLOC ON LMLOC.AC_CODE=LOCS.DEPT_AC_CODE  
   LEFT OUTER JOIN LOCATION LOCT ON LOCT.DEPT_ID=A.PARTY_DEPT_ID  
   LEFT OUTER JOIN LMV01106 D ON A.AC_CODE = D.AC_CODE  
   JOIN AREA ON AREA.AREA_CODE=LOCS.AREA_CODE  
   JOIN CITY ON CITY.CITY_CODE=AREA.CITY_CODE  
   JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=IND.PRODUCT_CODE  
   JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE  
   JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE  
   LEFT OUTER JOIN GST_ACCOUNTS_CONFIG_MST GACM_CO_CO ON GACM_CO_CO.XN_TYPE='CHO_WSL_SAME_PANNO'+@CXnItemType AND GACM_CO_CO.ENABLEPOSTING=1  
   LEFT OUTER JOIN GST_ACCOUNTS_CONFIG_MST GACM_NONCO_NONCO ON GACM_NONCO_NONCO.XN_TYPE='CHO_WSL_DIFF_PANNO'+@CXnItemType AND GACM_NONCO_NONCO.ENABLEPOSTING=1  
   LEFT OUTER JOIN GST_ACCOUNTS_CONFIG_MST GACM_XFR ON GACM_XFR.XN_TYPE='CHO_XFR'+@CXnItemType AND GACM_XFR.ENABLEPOSTING=1  
   WHERE (GACM_XFR.XN_TYPE=@CPOSTINGXNTYPE+@CXnItemType AND posting_base=1) OR  
       (GACM_CO_CO.XN_TYPE=@CPOSTINGXNTYPE+@CXnItemType  AND posting_base=2) OR  
        (GACM_NONCO_NONCO.XN_TYPE=@CPOSTINGXNTYPE+@CXnItemType  AND posting_base=3)   
        
   GROUP BY A.INV_NO,   
      A.INV_ID,   
      A.INV_DT ,  
      a.AC_CODE ,  
      A.REMARKS,  
      A.NET_AMOUNT,   
      a.location_Code ,   
      A.FIN_YEAR,  
      D.AC_NAME,  
      A.CANCELLED  
     ,ISNULL(IND.GST_PERCENTAGE,0)  
     ,ind.GST_CESS_PERCENTAGE  
     ,FREIGHT_GST_PERCENTAGE  
      ,OTHER_CHARGES_GST_PERCENTAGE  
      ,INSURANCE_GST_PERCENTAGE  
      ,FREIGHT_IGST_AMOUNT  
      ,FREIGHT_CGST_AMOUNT  
      ,FREIGHT_SGST_AMOUNT  
      ,INSURANCE_IGST_AMOUNT  
      ,INSURANCE_CGST_AMOUNT  
      ,INSURANCE_SGST_AMOUNT  
      ,OTHER_CHARGES_IGST_AMOUNT  
      ,OTHER_CHARGES_CGST_AMOUNT  
      ,OTHER_CHARGES_SGST_AMOUNT  
      ,LOCS.GST_STATE_CODE  
      ,LOCT.GST_STATE_CODE        
      ,LOCS.LOC_GST_NO   
     ,(CASE WHEN INV_MODE=2 THEN LOCT.LOC_GST_NO ELSE D.AC_GST_NO END)  
      ,A.FREIGHT  
      ,A.OTHER_CHARGES  
      ,A.INSURANCE  
      ,A.FREIGHT_TAXABLE_VALUE  
      ,A.OTHER_CHARGES_TAXABLE_VALUE  
      ,A.INSURANCE_TAXABLE_VALUE,isnull(a.tcs_amount,0)   
     ,OH_TAX_METHOD  
     ,A.ROUND_OFF,A.MANUAL_ROUNDOFF  
  
     , (CASE WHEN IGST_AMOUNT<>0 OR LOCS.GST_STATE_CODE<>LOCT.GST_STATE_CODE THEN '0000000000' ELSE '' END)  
     , (CASE WHEN CGST_AMOUNT<>0 OR LOCS.GST_STATE_CODE=LOCT.GST_STATE_CODE THEN '0000000000' ELSE '' END)  
     , (CASE WHEN IGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)  
     , (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)  
     , (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)  
       
     , (CASE WHEN (ISNULL(A.FREIGHT_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LOCT.GST_STATE_CODE)   
       AND A.FREIGHT<>0 AND ISNULL(A.FREIGHT_GST_PERCENTAGE,0)<>0  
       THEN '0000000000' ELSE '' END)  
     , (CASE WHEN (ISNULL(A.FREIGHT_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LOCT.GST_STATE_CODE OR ISNULL(A.FREIGHT_GST_PERCENTAGE,0)=0)   
       AND A.FREIGHT<>0  
       THEN '0000000000' ELSE '' END)  
     , (CASE WHEN ISNULL(A.FREIGHT_SGST_AMOUNT,0)<>0 AND A.FREIGHT<>0  
       THEN '0000000000' ELSE '' END)  
     , (CASE WHEN ISNULL(A.FREIGHT_CGST_AMOUNT,0)<>0 AND A.FREIGHT<>0  
       THEN '0000000000' ELSE '' END)  
     , (CASE WHEN ISNULL(A.FREIGHT_IGST_AMOUNT,0)<>0  AND A.FREIGHT<>0  
       THEN '0000000000' ELSE '' END)  
       
     , (CASE WHEN (ISNULL(A.OTHER_CHARGES_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LOCT.GST_STATE_CODE) AND A.OTHER_CHARGES<>0  AND ISNULL(A.OTHER_CHARGES_GST_PERCENTAGE,0)<>0  
       THEN '0000000000' ELSE '' END)  
     , (CASE WHEN (ISNULL(A.OTHER_CHARGES_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LOCT.GST_STATE_CODE OR ISNULL(A.OTHER_CHARGES_GST_PERCENTAGE,0)=0 ) AND A.OTHER_CHARGES<>0  
       THEN '0000000000' ELSE '' END)  
     , (CASE WHEN ISNULL(A.OTHER_CHARGES_SGST_AMOUNT,0)<>0 AND A.OTHER_CHARGES<>0  
       THEN '0000000000' ELSE '' END)  
     , (CASE WHEN ISNULL(A.OTHER_CHARGES_CGST_AMOUNT,0)<>0 AND A.OTHER_CHARGES<>0  
       THEN '0000000000' ELSE '' END)  
     , (CASE WHEN ISNULL(A.OTHER_CHARGES_IGST_AMOUNT,0)<>0  AND A.OTHER_CHARGES<>0  
       THEN '0000000000' ELSE '' END)  
  
     , (CASE WHEN (ISNULL(A.INSURANCE_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LOCT.GST_STATE_CODE) AND A.INSURANCE<>0  AND ISNULL(A.INSURANCE_GST_PERCENTAGE,0)<>0  
       THEN '0000000000' ELSE '' END)  
     , (CASE WHEN (ISNULL(A.INSURANCE_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LOCT.GST_STATE_CODE OR ISNULL(A.INSURANCE_GST_PERCENTAGE,0)=0 ) AND A.INSURANCE<>0  
       THEN '0000000000' ELSE '' END)  
     , (CASE WHEN ISNULL(A.INSURANCE_SGST_AMOUNT,0)<>0 AND A.INSURANCE<>0  
       THEN '0000000000' ELSE '' END)  
     , (CASE WHEN ISNULL(A.INSURANCE_CGST_AMOUNT,0)<>0 AND A.INSURANCE<>0  
       THEN '0000000000' ELSE '' END)  
     , (CASE WHEN ISNULL(A.INSURANCE_IGST_AMOUNT,0)<>0  AND A.INSURANCE<>0  
       THEN '0000000000' ELSE '' END)  
     ,SECTION_CODE,ART.SUB_SECTION_CODE  
     ,a.gst_round_off  
     
   SET @CSTEP = 352  
   IF @CPOSTINGXNTYPE in ('CHI_PUR_SAME_PANNO','CHI_PUR_DIFF_PANNO','CHI_XFR')  
   BEGIN  
    INSERT INTO #V_PROCESS (POSTING_XN_TYPE,MEMO_NO,MEMO_ID,MEMO_DT,DEPT_AC_CODE,REMARKS,   
    MEMO_AMOUNT,CANCELLED,FREIGHT,OTHERCHARGES,INSURANCE,QUANTITY,DEPT_ID,  
    FIN_YEAR,PARTY_NAME,VOUCHER_TYPE,REF_MEMO_ID,REF_MEMO_DT,XN_TYPE,GST_PERCENTAGE,XN_VALUE_WITHOUT_GST,  
     IGST_AMOUNT,CGST_AMOUNT,SGST_AMOUNT,GST_CESS_AMOUNT,GST_CESS_PERCENTAGE,FREIGHT_GST_PERCENTAGE,  
     OTHER_CHARGES_GST_PERCENTAGE,INSURANCE_GST_PERCENTAGE,FREIGHT_IGST_AMOUNT,FREIGHT_CGST_AMOUNT,  
        FREIGHT_SGST_AMOUNT,INSURANCE_IGST_AMOUNT,INSURANCE_CGST_AMOUNT,INSURANCE_SGST_AMOUNT,OTHER_CHARGES_IGST_AMOUNT,  
     OTHER_CHARGES_CGST_AMOUNT,OTHER_CHARGES_SGST_AMOUNT,SOURCE_GST_STATE_CODE,TARGET_GST_STATE_CODE,  
     MEMO_FREIGHT,MEMO_OTHER_CHARGES,OH_TAX_METHOD,  
     SOURCE_GST_NO,TARGET_GST_NO,ROUND_OFF,MANUAL_ROUNDOFF,mEMO_INSURANCE,IGST_REVENUE_AC_CODE,  
    LGST_REVENUE_AC_CODE,IGST_TAX_AC_CODE,CGST_TAX_AC_CODE,SGST_TAX_AC_CODE,GST_CESS_AC_CODE,  
    FREIGHT_IGST_REVENUE_AC_CODE,FREIGHT_LGST_REVENUE_AC_CODE,FREIGHT_SGST_TAX_AC_CODE,  
    FREIGHT_CGST_TAX_AC_CODE,FREIGHT_IGST_TAX_AC_CODE,OTHER_CHARGES_IGST_REVENUE_AC_CODE,  
    OTHER_CHARGES_LGST_REVENUE_AC_CODE,OTHER_CHARGES_SGST_TAX_AC_CODE,OTHER_CHARGES_CGST_TAX_AC_CODE,  
    OTHER_CHARGES_IGST_TAX_AC_CODE,INSURANCE_IGST_REVENUE_AC_CODE,INSURANCE_LGST_REVENUE_AC_CODE,  
    INSURANCE_SGST_TAX_AC_CODE,INSURANCE_CGST_TAX_AC_CODE,INSURANCE_IGST_TAX_AC_CODE,SECTION_CODE,  
    SUB_SECTION_CODE,CASHDISCOUNTAMOUNT,CD_PCT,gst_round_off,tcs_amount)  
   
    SELECT @CPOSTINGXNTYPEConfig AS POSTING_XN_TYPE,  
      A.INV_NO AS MEMO_NO,   
      E.MRR_ID AS MEMO_ID,   
      E.BILL_DT AS MEMO_DT,  
      E.DEPT_AC_CODE,  
      A.REMARKS,   
      A.NET_AMOUNT*-1 AS MEMO_AMOUNT  
      ,A.CANCELLED  
      ,A.FREIGHT_TAXABLE_VALUE AS FREIGHT  
      ,A.OTHER_CHARGES_TAXABLE_VALUE AS OTHERCHARGES  
      ,A.INSURANCE_TAXABLE_VALUE AS INSURANCE ,  
      SUM(IND.QUANTITY) AS QUANTITY,  
      e.location_code  AS DEPT_ID,   
      A.FIN_YEAR,  
      LMLOC.AC_NAME AS PARTY_NAME,  
      '0000000006' AS VOUCHER_TYPE,  
      A.INV_ID AS REF_MEMO_ID,  
      A.INV_DT AS REF_MEMO_DT,  
      'PURCHI' AS XN_TYPE  
      ,ISNULL(IND.GST_PERCENTAGE,0) AS GST_PERCENTAGE       
      ,SUM(XN_VALUE_WITHOUT_GST) AS XN_VALUE_WITHOUT_GST  
       ,SUM(IGST_AMOUNT) AS IGST_AMOUNT  
       ,SUM(CGST_AMOUNT) AS CGST_AMOUNT  
       ,SUM(SGST_AMOUNT) AS SGST_AMOUNT  
      ,SUM(GST_CESS_AMOUNT) AS GST_CESS_AMOUNT  
      ,ind.GST_CESS_PERCENTAGE  
       ,A.FREIGHT_GST_PERCENTAGE  
       ,A.OTHER_CHARGES_GST_PERCENTAGE  
       ,A.INSURANCE_GST_PERCENTAGE  
       ,FREIGHT_IGST_AMOUNT  
       ,FREIGHT_CGST_AMOUNT  
       ,FREIGHT_SGST_AMOUNT  
       ,INSURANCE_IGST_AMOUNT  
       ,INSURANCE_CGST_AMOUNT  
       ,INSURANCE_SGST_AMOUNT  
       ,OTHER_CHARGES_IGST_AMOUNT  
       ,OTHER_CHARGES_CGST_AMOUNT  
       ,OTHER_CHARGES_SGST_AMOUNT  
       ,LOCS.GST_STATE_CODE AS SOURCE_GST_STATE_CODE  
       ,LOCT.GST_STATE_CODE AS TARGET_GST_STATE_CODE  
       ,A.FREIGHT AS MEMO_FREIGHT  
       ,A.OTHER_CHARGES AS MEMO_OTHER_CHARGES        
       ,OH_TAX_METHOD  
       ,LOCS.LOC_GST_NO AS SOURCE_GST_NO  
      ,LOCT.LOC_GST_NO AS TARGET_GST_NO        
      ,A.ROUND_OFF,A.MANUAL_ROUNDOFF,A.INSURANCE  
      , (CASE WHEN IGST_AMOUNT<>0 OR LOCS.GST_STATE_CODE<>LOCT.GST_STATE_CODE THEN '0000000000' ELSE '' END) AS IGST_REVENUE_AC_CODE  
      , (CASE WHEN CGST_AMOUNT<>0 OR LOCS.GST_STATE_CODE=LOCT.GST_STATE_CODE THEN '0000000000' ELSE '' END) AS LGST_REVENUE_AC_CODE  
      , (CASE WHEN IGST_AMOUNT<>0  THEN '0000000000' ELSE '' END) AS IGST_TAX_AC_CODE  
      , (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)  AS CGST_TAX_AC_CODE  
      , (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)  AS SGST_TAX_AC_CODE  
      , '0000000000' AS GST_CESS_AC_CODE  
      , (CASE WHEN (ISNULL(A.FREIGHT_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LOCT.GST_STATE_CODE)   
        AND A.FREIGHT<>0 AND ISNULL(A.FREIGHT_GST_PERCENTAGE,0)<>0  
        THEN '0000000000' ELSE '' END)  AS FREIGHT_IGST_REVENUE_AC_CODE  
      , (CASE WHEN (ISNULL(A.FREIGHT_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LOCT.GST_STATE_CODE OR ISNULL(A.FREIGHT_GST_PERCENTAGE,0)=0)   
        AND A.FREIGHT<>0  
        THEN '0000000000' ELSE '' END) AS FREIGHT_LGST_REVENUE_AC_CODE  
      , (CASE WHEN ISNULL(A.FREIGHT_SGST_AMOUNT,0)<>0 AND A.FREIGHT<>0  
        THEN '0000000000' ELSE '' END)  AS FREIGHT_SGST_TAX_AC_CODE  
      , (CASE WHEN ISNULL(A.FREIGHT_CGST_AMOUNT,0)<>0 AND A.FREIGHT<>0  
        THEN '0000000000' ELSE '' END)  AS FREIGHT_CGST_TAX_AC_CODE  
      , (CASE WHEN ISNULL(A.FREIGHT_IGST_AMOUNT,0)<>0  AND A.FREIGHT<>0  
        THEN '0000000000' ELSE '' END)  AS FREIGHT_IGST_TAX_AC_CODE  
       
      , (CASE WHEN (ISNULL(A.OTHER_CHARGES_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LOCT.GST_STATE_CODE) AND A.OTHER_CHARGES<>0  AND ISNULL(A.OTHER_CHARGES_GST_PERCENTAGE,0)<>0  
        THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_IGST_REVENUE_AC_CODE  
      , (CASE WHEN (ISNULL(A.OTHER_CHARGES_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LOCT.GST_STATE_CODE OR ISNULL(A.OTHER_CHARGES_GST_PERCENTAGE,0)=0 ) AND A.OTHER_CHARGES<>0  
        THEN '0000000000' ELSE '' END) AS OTHER_CHARGES_LGST_REVENUE_AC_CODE  
      , (CASE WHEN ISNULL(A.OTHER_CHARGES_SGST_AMOUNT,0)<>0 AND A.OTHER_CHARGES<>0  
        THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_SGST_TAX_AC_CODE  
      , (CASE WHEN ISNULL(A.OTHER_CHARGES_CGST_AMOUNT,0)<>0 AND A.OTHER_CHARGES<>0  
        THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_CGST_TAX_AC_CODE  
      , (CASE WHEN ISNULL(A.OTHER_CHARGES_IGST_AMOUNT,0)<>0  AND A.OTHER_CHARGES<>0  
        THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_IGST_TAX_AC_CODE                    
  
      , (CASE WHEN (ISNULL(A.INSURANCE_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LOCT.GST_STATE_CODE) AND A.INSURANCE<>0  AND ISNULL(A.INSURANCE_GST_PERCENTAGE,0)<>0  
        THEN '0000000000' ELSE '' END)  AS INSURANCE_IGST_REVENUE_AC_CODE  
      , (CASE WHEN (ISNULL(A.INSURANCE_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LOCT.GST_STATE_CODE OR ISNULL(A.INSURANCE_GST_PERCENTAGE,0)=0 ) AND A.INSURANCE<>0  
        THEN '0000000000' ELSE '' END) AS INSURANCE_LGST_REVENUE_AC_CODE  
      , (CASE WHEN ISNULL(A.INSURANCE_SGST_AMOUNT,0)<>0 AND A.INSURANCE<>0  
        THEN '0000000000' ELSE '' END)  AS INSURANCE_SGST_TAX_AC_CODE  
      , (CASE WHEN ISNULL(A.INSURANCE_CGST_AMOUNT,0)<>0 AND A.INSURANCE<>0  
        THEN '0000000000' ELSE '' END)  AS INSURANCE_CGST_TAX_AC_CODE  
      , (CASE WHEN ISNULL(A.INSURANCE_IGST_AMOUNT,0)<>0  AND A.INSURANCE<>0  
        THEN '0000000000' ELSE '' END)  AS INSURANCE_IGST_TAX_AC_CODE                    
      ,SECTION_CODE,ART.SUB_SECTION_CODE,0 AS CASHDISCOUNTAMOUNT,0 AS CD_PCT                                   
      ,a.gst_round_off,isnull(a.tcs_amount,0)   
    FROM inm01106 A (NOLOCK)  
    JOIN ind01106 ind (NOLOCK) ON A.inv_id=IND.inv_id  
    JOIN LMV01106 D ON A.AC_CODE = D.AC_CODE  
    JOIN (SELECT pim.location_Code , MRR_ID,INV_ID,PIM.BILL_DT,PIM.AC_CODE AS DEPT_AC_CODE FROM PIM01106 PIM  
       JOIN #POSTS PST ON PIM.MRR_ID=PST.MEMO_ID   
       WHERE PST.MODE='PURCHI') E ON E.INV_ID=A.INV_ID  
    JOIN #POSTS PS ON E.MRR_ID=PS.MEMO_ID AND PS.MODE='PURCHI'  
    JOIN LOCATION LOCS ON LOCS.DEPT_ID=a.location_Code   
    JOIN LM01106 LMLOC ON LMLOC.AC_CODE=LOCS.DEPT_AC_CODE  
    JOIN LOCATION LOCT ON LOCT.DEPT_ID=A.PARTY_DEPT_ID  
    JOIN AREA ON AREA.AREA_CODE=LOCS.AREA_CODE  
    JOIN CITY ON CITY.CITY_CODE=AREA.CITY_CODE  
    JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=IND.PRODUCT_CODE  
    JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE  
    JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE   
    LEFT OUTER JOIN GST_ACCOUNTS_CONFIG_MST GACM_CO_CO ON GACM_CO_CO.XN_TYPE='CHI_PUR_SAME_PANNO'+@CXnItemType AND GACM_CO_CO.ENABLEPOSTING=1  
    LEFT OUTER JOIN GST_ACCOUNTS_CONFIG_MST GACM_NONCO_NONCO ON GACM_NONCO_NONCO.XN_TYPE='CHI_PUR_DIFF_PANNO'+@CXnItemType AND GACM_NONCO_NONCO.ENABLEPOSTING=1  
    LEFT OUTER JOIN GST_ACCOUNTS_CONFIG_MST GACM_XFR ON GACM_XFR.XN_TYPE='CHI_XFR'+@CXnItemType AND GACM_XFR.ENABLEPOSTING=1  
    WHERE (GACM_XFR.XN_TYPE=@CPOSTINGXNTYPE+@CXnItemType AND posting_base=1) OR  
       (GACM_CO_CO.XN_TYPE=@CPOSTINGXNTYPE+@CXnItemType  AND posting_base=2) OR  
        (GACM_NONCO_NONCO.XN_TYPE=@CPOSTINGXNTYPE+@CXnItemType  AND posting_base=3)   
    GROUP BY A.AC_CODE,   
      A.REMARKS,  
      A.NET_AMOUNT,   
      e.location_Code ,   
      A.FIN_YEAR,  
      E.DEPT_AC_CODE ,LMLOC.AC_NAME,  
      A.INV_NO,E.MRR_ID,E.BILL_DT,A.INV_ID,A.INV_DT  
      ,A.CANCELLED  
      ,ISNULL(IND.GST_PERCENTAGE,0)       
      ,ind.GST_CESS_PERCENTAGE  
      ,A.FREIGHT_GST_PERCENTAGE  
       ,A.OTHER_CHARGES_GST_PERCENTAGE  
       ,INSURANCE_GST_PERCENTAGE  
       ,FREIGHT_IGST_AMOUNT  
       ,FREIGHT_CGST_AMOUNT  
       ,FREIGHT_SGST_AMOUNT  
       ,INSURANCE_IGST_AMOUNT  
       ,INSURANCE_CGST_AMOUNT  
       ,INSURANCE_SGST_AMOUNT  
       ,OTHER_CHARGES_IGST_AMOUNT  
       ,OTHER_CHARGES_CGST_AMOUNT  
       ,OTHER_CHARGES_SGST_AMOUNT  
       ,LOCS.GST_STATE_CODE  
       ,LOCT.GST_STATE_CODE       
       ,LOCS.LOC_GST_NO   
      ,LOCT.LOC_GST_NO  
       ,A.FREIGHT  
       ,A.OTHER_CHARGES        
       ,A.INSURANCE  
       ,A.FREIGHT_TAXABLE_VALUE  
       ,A.OTHER_CHARGES_TAXABLE_VALUE        
       ,A.INSURANCE_TAXABLE_VALUE  
      ,OH_TAX_METHOD  
  
      ,A.ROUND_OFF,A.MANUAL_ROUNDOFF,isnull(a.tcs_amount,0)  
      , (CASE WHEN IGST_AMOUNT<>0 OR LOCS.GST_STATE_CODE<>LOCT.GST_STATE_CODE THEN '0000000000' ELSE '' END)  
      , (CASE WHEN CGST_AMOUNT<>0 OR LOCS.GST_STATE_CODE=LOCT.GST_STATE_CODE THEN '0000000000' ELSE '' END)  
      , (CASE WHEN IGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)  
      , (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)  
      , (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)  
       
      , (CASE WHEN (ISNULL(A.FREIGHT_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LOCT.GST_STATE_CODE)   
        AND A.FREIGHT<>0 AND ISNULL(A.FREIGHT_GST_PERCENTAGE,0)<>0  
        THEN '0000000000' ELSE '' END)  
      , (CASE WHEN (ISNULL(A.FREIGHT_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LOCT.GST_STATE_CODE OR ISNULL(A.FREIGHT_GST_PERCENTAGE,0)=0)   
        AND A.FREIGHT<>0  
        THEN '0000000000' ELSE '' END)  
      , (CASE WHEN ISNULL(A.FREIGHT_SGST_AMOUNT,0)<>0 AND A.FREIGHT<>0  
        THEN '0000000000' ELSE '' END)  
      , (CASE WHEN ISNULL(A.FREIGHT_CGST_AMOUNT,0)<>0 AND A.FREIGHT<>0  
        THEN '0000000000' ELSE '' END)  
      , (CASE WHEN ISNULL(A.FREIGHT_IGST_AMOUNT,0)<>0  AND A.FREIGHT<>0  
        THEN '0000000000' ELSE '' END)  
       
      , (CASE WHEN (ISNULL(A.OTHER_CHARGES_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LOCT.GST_STATE_CODE) AND A.OTHER_CHARGES<>0  AND ISNULL(A.OTHER_CHARGES_GST_PERCENTAGE,0)<>0  
        THEN '0000000000' ELSE '' END)  
      , (CASE WHEN (ISNULL(A.OTHER_CHARGES_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LOCT.GST_STATE_CODE OR ISNULL(A.OTHER_CHARGES_GST_PERCENTAGE,0)=0 ) AND A.OTHER_CHARGES<>0  
        THEN '0000000000' ELSE '' END)  
      , (CASE WHEN ISNULL(A.OTHER_CHARGES_SGST_AMOUNT,0)<>0 AND A.OTHER_CHARGES<>0  
        THEN '0000000000' ELSE '' END)  
      , (CASE WHEN ISNULL(A.OTHER_CHARGES_CGST_AMOUNT,0)<>0 AND A.OTHER_CHARGES<>0  
        THEN '0000000000' ELSE '' END)  
      , (CASE WHEN ISNULL(A.OTHER_CHARGES_IGST_AMOUNT,0)<>0  AND A.OTHER_CHARGES<>0  
        THEN '0000000000' ELSE '' END)  
  
      , (CASE WHEN (ISNULL(A.INSURANCE_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LOCT.GST_STATE_CODE) AND A.INSURANCE<>0  AND ISNULL(A.INSURANCE_GST_PERCENTAGE,0)<>0  
        THEN '0000000000' ELSE '' END)  
      , (CASE WHEN (ISNULL(A.INSURANCE_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LOCT.GST_STATE_CODE OR ISNULL(A.INSURANCE_GST_PERCENTAGE,0)=0 ) AND A.INSURANCE<>0  
        THEN '0000000000' ELSE '' END)  
      , (CASE WHEN ISNULL(A.INSURANCE_SGST_AMOUNT,0)<>0 AND A.INSURANCE<>0  
        THEN '0000000000' ELSE '' END)  
      , (CASE WHEN ISNULL(A.INSURANCE_CGST_AMOUNT,0)<>0 AND A.INSURANCE<>0  
        THEN '0000000000' ELSE '' END)  
      , (CASE WHEN ISNULL(A.INSURANCE_IGST_AMOUNT,0)<>0  AND A.INSURANCE<>0  
        THEN '0000000000' ELSE '' END)  
      ,SECTION_CODE,ART.SUB_SECTION_CODE       
      ,a.gst_round_off  
  
    INSERT INTO #V_PROCESS (POSTING_XN_TYPE,MEMO_NO,MEMO_ID,MEMO_DT,DEPT_AC_CODE,REMARKS,   
    MEMO_AMOUNT,CANCELLED,FREIGHT,OTHERCHARGES,QUANTITY,DEPT_ID,  
    FIN_YEAR,PARTY_NAME,VOUCHER_TYPE,REF_MEMO_ID,REF_MEMO_DT,XN_TYPE,GST_PERCENTAGE,XN_VALUE_WITHOUT_GST,  
     IGST_AMOUNT,CGST_AMOUNT,SGST_AMOUNT,GST_CESS_AMOUNT,GST_CESS_PERCENTAGE,FREIGHT_GST_PERCENTAGE,  
     OTHER_CHARGES_GST_PERCENTAGE,FREIGHT_IGST_AMOUNT,FREIGHT_CGST_AMOUNT,  
        FREIGHT_SGST_AMOUNT,OTHER_CHARGES_IGST_AMOUNT,  
     OTHER_CHARGES_CGST_AMOUNT,OTHER_CHARGES_SGST_AMOUNT,MEMO_FREIGHT,MEMO_OTHER_CHARGES,OH_TAX_METHOD,  
     SOURCE_GST_NO,TARGET_GST_NO,ROUND_OFF,MANUAL_ROUNDOFF,IGST_REVENUE_AC_CODE,  
    LGST_REVENUE_AC_CODE,IGST_TAX_AC_CODE,CGST_TAX_AC_CODE,SGST_TAX_AC_CODE,GST_CESS_AC_CODE,  
    FREIGHT_IGST_REVENUE_AC_CODE,FREIGHT_LGST_REVENUE_AC_CODE,FREIGHT_SGST_TAX_AC_CODE,  
    FREIGHT_CGST_TAX_AC_CODE,FREIGHT_IGST_TAX_AC_CODE,OTHER_CHARGES_IGST_REVENUE_AC_CODE,  
    OTHER_CHARGES_LGST_REVENUE_AC_CODE,OTHER_CHARGES_SGST_TAX_AC_CODE,OTHER_CHARGES_CGST_TAX_AC_CODE,  
    OTHER_CHARGES_IGST_TAX_AC_CODE,SECTION_CODE,SUB_SECTION_CODE,CASHDISCOUNTAMOUNT,CD_PCT,gst_round_off,tcs_amount,tds_amount)  
   
    SELECT @CPOSTINGXNTYPEConfig AS POSTING_XN_TYPE,  
      A.INV_NO AS MEMO_NO,   
      A.MRR_ID AS MEMO_ID,   
      A.BILL_DT AS MEMO_DT,  
      a.AC_CODE DEPT_AC_CODE,  
      A.REMARKS,   
      A.TOTAL_AMOUNT*-1 AS MEMO_AMOUNT  
      ,A.CANCELLED  
      ,A.FREIGHT_TAXABLE_VALUE AS FREIGHT  
      ,A.OTHER_CHARGES_TAXABLE_VALUE AS OTHERCHARGES,  
      SUM(IND.QUANTITY) AS QUANTITY,  
      ISNULL(pst.posting_dept_id,a.location_Code ) AS DEPT_ID,   
      A.FIN_YEAR,  
      LMLOC.AC_NAME AS PARTY_NAME,  
      '0000000006' AS VOUCHER_TYPE,  
      A.INV_ID AS REF_MEMO_ID,  
      A.INV_DT AS REF_MEMO_DT,  
      'PURCHI' AS XN_TYPE  
      ,ISNULL(IND.GST_PERCENTAGE,0) AS GST_PERCENTAGE       
      ,SUM(XN_VALUE_WITHOUT_GST) AS XN_VALUE_WITHOUT_GST  
       ,SUM(IGST_AMOUNT) AS IGST_AMOUNT  
       ,SUM(CGST_AMOUNT) AS CGST_AMOUNT  
       ,SUM(SGST_AMOUNT) AS SGST_AMOUNT  
      ,SUM(GST_CESS_AMOUNT) AS GST_CESS_AMOUNT  
      ,ind.GST_CESS_PERCENTAGE  
       ,A.FREIGHT_GST_PERCENTAGE  
       ,A.OTHER_CHARGES_GST_PERCENTAGE  
       ,FREIGHT_IGST_AMOUNT  
       ,FREIGHT_CGST_AMOUNT  
       ,FREIGHT_SGST_AMOUNT  
       ,OTHER_CHARGES_IGST_AMOUNT  
       ,OTHER_CHARGES_CGST_AMOUNT  
       ,OTHER_CHARGES_SGST_AMOUNT  
       ,A.FREIGHT AS MEMO_FREIGHT  
       ,A.OTHER_CHARGES AS MEMO_OTHER_CHARGES        
       ,OH_TAX_METHOD  
      ,Lmp.ac_GST_NO AS SOURCE_GST_NO  
      ,LOCT.LOC_GST_NO AS TARGET_GST_NO        
      ,ISNULL(A.ROUND_OFF,0) round_off,A.MANUAL_ROUNDOFF  
      ,'0000000000' AS IGST_REVENUE_AC_CODE  
      , '0000000000' AS LGST_REVENUE_AC_CODE  
      , '0000000000' AS IGST_TAX_AC_CODE  
      , '0000000000'  AS CGST_TAX_AC_CODE  
      ,  '0000000000' AS SGST_TAX_AC_CODE  
      , '0000000000' AS GST_CESS_AC_CODE  
      , '0000000000'  AS FREIGHT_IGST_REVENUE_AC_CODE  
      ,  '0000000000'  AS FREIGHT_LGST_REVENUE_AC_CODE  
      , '0000000000'  AS FREIGHT_SGST_TAX_AC_CODE  
      , '0000000000' AS FREIGHT_CGST_TAX_AC_CODE  
      , '0000000000'  AS FREIGHT_IGST_TAX_AC_CODE  
       
      , '0000000000' AS OTHER_CHARGES_IGST_REVENUE_AC_CODE  
      , '0000000000' AS OTHER_CHARGES_LGST_REVENUE_AC_CODE  
      , '0000000000'  AS OTHER_CHARGES_SGST_TAX_AC_CODE  
      , '0000000000' AS OTHER_CHARGES_CGST_TAX_AC_CODE  
      , '0000000000' AS OTHER_CHARGES_IGST_TAX_AC_CODE                    
      ,SECTION_CODE,ART.SUB_SECTION_CODE,0 AS CASHDISCOUNTAMOUNT,0 AS CD_PCT                                   
      ,a.gst_round_off,isnull(a.tcs_amount,0)  , isnull(a.tds_amount,0)
    FROM pim01106 A (NOLOCK)  
    JOIN pid01106 ind (NOLOCK) ON A.mrr_id=IND.mrr_id  
    JOIN #POSTS PST ON a.MRR_ID=PST.MEMO_ID AND pst.mode='PURCHI'  
    JOIN LM01106 LMLOC ON LMLOC.AC_CODE=a.ac_code  
    JOIN LMP01106 lmp (NOLOCK) ON lmp.ac_code=a.ac_code  
    JOIN LOCATION LOCT ON LOCT.DEPT_ID=a.location_Code   
    JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=IND.PRODUCT_CODE  
    JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE  
    JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE   
    LEFT OUTER JOIN GST_ACCOUNTS_CONFIG_MST GACM_CO_CO ON GACM_CO_CO.XN_TYPE='CHI_PUR_SAME_PANNO'+@CXnItemType AND GACM_CO_CO.ENABLEPOSTING=1  
    LEFT OUTER JOIN GST_ACCOUNTS_CONFIG_MST GACM_NONCO_NONCO ON GACM_NONCO_NONCO.XN_TYPE='CHI_PUR_DIFF_PANNO'+@CXnItemType AND GACM_NONCO_NONCO.ENABLEPOSTING=1  
    LEFT OUTER JOIN GST_ACCOUNTS_CONFIG_MST GACM_XFR ON GACM_XFR.XN_TYPE='CHI_XFR'+@CXnItemType AND GACM_XFR.ENABLEPOSTING=1  
    WHERE (a.inv_mode=1 OR @nPostingLoctype=2) AND 
	((GACM_XFR.XN_TYPE=@CPOSTINGXNTYPE+@CXnItemType AND posting_base=1) OR  
     (GACM_CO_CO.XN_TYPE=@CPOSTINGXNTYPE+@CXnItemType  AND posting_base=2) OR  
     (GACM_NONCO_NONCO.XN_TYPE=@CPOSTINGXNTYPE+@CXnItemType  AND posting_base=3))   
    GROUP BY A.AC_CODE,   
      A.REMARKS,  
      A.total_AMOUNT,   
      a.location_Code ,   
      A.FIN_YEAR,  
      A.AC_CODE ,LMLOC.AC_NAME,  
      A.INV_NO,A.MRR_ID,A.BILL_DT,A.INV_ID,A.INV_DT  
      ,A.CANCELLED  
      ,ISNULL(IND.GST_PERCENTAGE,0)       
      ,ind.GST_CESS_PERCENTAGE  
      ,A.FREIGHT_GST_PERCENTAGE  
       ,A.OTHER_CHARGES_GST_PERCENTAGE  
       ,FREIGHT_IGST_AMOUNT  
       ,FREIGHT_CGST_AMOUNT  
       ,FREIGHT_SGST_AMOUNT  
       ,OTHER_CHARGES_IGST_AMOUNT  
       ,OTHER_CHARGES_CGST_AMOUNT  
       ,OTHER_CHARGES_SGST_AMOUNT  
       ,Lmp.ac_GST_NO   
      ,LOCT.LOC_GST_NO  
       ,A.FREIGHT  
       ,A.OTHER_CHARGES        
       ,A.FREIGHT_TAXABLE_VALUE  
       ,A.OTHER_CHARGES_TAXABLE_VALUE        
      ,OH_TAX_METHOD  
      ,A.ROUND_OFF,A.MANUAL_ROUNDOFF,isnull(a.tcs_amount,0), isnull(a.tds_amount,0)  
      ,SECTION_CODE,ART.SUB_SECTION_CODE       
      ,a.gst_round_off  , ISNULL(pst.posting_dept_id,a.location_Code )
  END  
  
  SET @CSTEP = 354   
  IF @CPOSTINGXNTYPE IN ('CHO_PRT_SAME_PANNO','CHO_PRT_DIFF_PANNO','CHO_XFR')  
   INSERT INTO #V_PROCESS (POSTING_XN_TYPE,MEMO_NO,MEMO_ID,MEMO_DT,DEPT_AC_CODE,REMARKS,   
   MEMO_AMOUNT,CANCELLED,FREIGHT,OTHERCHARGES,QUANTITY,DEPT_ID,  
   FIN_YEAR,PARTY_NAME,VOUCHER_TYPE,REF_MEMO_ID,REF_MEMO_DT,XN_TYPE,GST_PERCENTAGE,XN_VALUE_WITHOUT_GST,  
    IGST_AMOUNT,CGST_AMOUNT,SGST_AMOUNT,GST_CESS_AMOUNT,GST_CESS_PERCENTAGE,FREIGHT_GST_PERCENTAGE,  
    OTHER_CHARGES_GST_PERCENTAGE,FREIGHT_IGST_AMOUNT,FREIGHT_CGST_AMOUNT,  
    FREIGHT_SGST_AMOUNT,OTHER_CHARGES_IGST_AMOUNT,  
    OTHER_CHARGES_CGST_AMOUNT,OTHER_CHARGES_SGST_AMOUNT,MEMO_FREIGHT,MEMO_OTHER_CHARGES,OH_TAX_METHOD,  
    SOURCE_GST_NO,TARGET_GST_NO,ROUND_OFF,MANUAL_ROUNDOFF,IGST_REVENUE_AC_CODE,  
   LGST_REVENUE_AC_CODE,IGST_TAX_AC_CODE,CGST_TAX_AC_CODE,SGST_TAX_AC_CODE,GST_CESS_AC_CODE,  
   FREIGHT_IGST_REVENUE_AC_CODE,FREIGHT_LGST_REVENUE_AC_CODE,FREIGHT_SGST_TAX_AC_CODE,  
   FREIGHT_CGST_TAX_AC_CODE,FREIGHT_IGST_TAX_AC_CODE,OTHER_CHARGES_IGST_REVENUE_AC_CODE,  
   OTHER_CHARGES_LGST_REVENUE_AC_CODE,OTHER_CHARGES_SGST_TAX_AC_CODE,OTHER_CHARGES_CGST_TAX_AC_CODE,  
   OTHER_CHARGES_IGST_TAX_AC_CODE,SECTION_CODE,  
   SUB_SECTION_CODE,CASHDISCOUNTAMOUNT,CD_PCT,gst_round_off,tcs_amount)  
   SELECT  @CPOSTINGXNTYPEConfig AS POSTING_XN_TYPE,  
     A.RM_NO AS MEMO_NO,   
     A.RM_ID AS MEMO_ID,   
     A.RM_DT  AS MEMO_DT,  
     A.AC_CODE,   
     A.REMARKS,   
     A.TOTAL_AMOUNT AS MEMO_AMOUNT  
     ,A.CANCELLED  
     ,A.FREIGHT_TAXABLE_VALUE*-1 AS FREIGHT  
     ,A.OTHER_CHARGES_TAXABLE_VALUE*-1 AS OTHERCHARGES,  
     SUM(RMD.QUANTITY) AS QUANTITY,  
     a.location_Code  AS DEPT_ID,   
     A.FIN_YEAR,  
     isnull(D.AC_NAME,prlm .AC_NAME ) AS PARTY_NAME,  
     '0000000005' AS VOUCHER_TYPE,  
     A.RM_ID AS REF_MEMO_ID,  
     A.RM_DT AS REF_MEMO_DT  
     ,'PRTCHO' AS XN_TYPE  
     ,ISNULL(RMD.GST_PERCENTAGE,0) AS GST_PERCENTAGE       
     ,SUM(XN_VALUE_WITHOUT_GST)*-1 AS XN_VALUE_WITHOUT_GST  
      ,SUM(IGST_AMOUNT)*-1 AS IGST_AMOUNT  
      ,SUM(CGST_AMOUNT)*-1 AS CGST_AMOUNT  
      ,SUM(SGST_AMOUNT)*-1 AS SGST_AMOUNT  
     ,SUM(GST_CESS_AMOUNT)*-1 AS GST_CESS_AMOUNT  
     ,rmd.GST_CESS_PERCENTAGE  
      ,FREIGHT_GST_PERCENTAGE  
      ,OTHER_CHARGES_GST_PERCENTAGE  
      ,(FREIGHT_IGST_AMOUNT*-1) AS FREIGHT_IGST_AMOUNT  
      ,(FREIGHT_CGST_AMOUNT*-1) AS FREIGHT_CGST_AMOUNT  
      ,(FREIGHT_SGST_AMOUNT*-1) AS FREIGHT_SGST_AMOUNT  
      ,(OTHER_CHARGES_IGST_AMOUNT*-1) AS OTHER_CHARGES_IGST_AMOUNT  
      ,(OTHER_CHARGES_CGST_AMOUNT*-1) AS OTHER_CHARGES_CGST_AMOUNT  
      ,(OTHER_CHARGES_SGST_AMOUNT*-1) AS OTHER_CHARGES_SGST_AMOUNT  
      ,A.FREIGHT*-1 AS MEMO_FREIGHT  
      ,A.OTHER_CHARGES*-1 AS MEMO_OTHER_CHARGES             
      ,OH_TAX_METHOD  
      ,LOCS.LOC_GST_NO AS SOURCE_GST_NO  
     ,isnull(LOCT.LOC_GST_NO,prlmp .Ac_gst_no ) AS TARGET_GST_NO  
     ,A.ROUND_OFF,A.MANUAL_ROUNDOFF  
     ,'0000000000' AS IGST_REVENUE_AC_CODE  
     , '0000000000' AS LGST_REVENUE_AC_CODE  
     , '0000000000' AS IGST_TAX_AC_CODE  
     , '0000000000'  AS CGST_TAX_AC_CODE  
     ,  '0000000000' AS SGST_TAX_AC_CODE  
     , '0000000000' AS GST_CESS_AC_CODE  
     , '0000000000'  AS FREIGHT_IGST_REVENUE_AC_CODE  
     ,  '0000000000'  AS FREIGHT_LGST_REVENUE_AC_CODE  
     , '0000000000'  AS FREIGHT_SGST_TAX_AC_CODE  
     , '0000000000' AS FREIGHT_CGST_TAX_AC_CODE  
     , '0000000000'  AS FREIGHT_IGST_TAX_AC_CODE  
       
     , '0000000000' AS OTHER_CHARGES_IGST_REVENUE_AC_CODE  
     , '0000000000' AS OTHER_CHARGES_LGST_REVENUE_AC_CODE  
     , '0000000000'  AS OTHER_CHARGES_SGST_TAX_AC_CODE  
     , '0000000000' AS OTHER_CHARGES_CGST_TAX_AC_CODE  
     , '0000000000' AS OTHER_CHARGES_IGST_TAX_AC_CODE                    
     ,SECTION_CODE,ART.SUB_SECTION_CODE,0 AS CASHDISCOUNTAMOUNT,0 AS CD_PCT                                   
     ,a.gst_round_off,0  tcs_amount  
   FROM RMM01106 A    
   JOIN RMD01106 RMD ON A.RM_ID=RMD.RM_ID  
   JOIN FORM C ON RMD.ITEM_FORM_ID = C.FORM_ID  
   JOIN #POSTS PS ON A.RM_ID=PS.MEMO_ID AND PS.MODE='PRTCHO'  
   JOIN LOCATION LOCS ON LOCS.DEPT_ID=a.location_Code   
   LEFT JOIN LOCATION LOCT ON LOCT.DEPT_ID=A.PARTY_DEPT_ID  
   LEFT JOIN LMV01106 D ON LOCT.DEPT_AC_CODE = D.AC_CODE  
   JOIN LM01106 PRLM (NOLOCK) ON PRLM.AC_CODE =A.AC_CODE 
   LEFT JOIN LMP01106 PRLMP (NOLOCK) ON PRLMP.AC_CODE =A.AC_CODE 
   JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=RMD.PRODUCT_CODE  
   JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE  
   JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE  
   LEFT OUTER JOIN GST_ACCOUNTS_CONFIG_MST GACM_CO_CO ON GACM_CO_CO.XN_TYPE='CHO_PRT_SAME_PANNO'+@CXnItemType AND GACM_CO_CO.ENABLEPOSTING=1  
   LEFT OUTER JOIN GST_ACCOUNTS_CONFIG_MST GACM_NONCO_NONCO ON GACM_NONCO_NONCO.XN_TYPE='CHO_PRT_DIFF_PANNO'+@CXnItemType AND GACM_NONCO_NONCO.ENABLEPOSTING=1  
   LEFT OUTER JOIN GST_ACCOUNTS_CONFIG_MST GACM_XFR ON GACM_XFR.XN_TYPE='CHO_XFR'+@CXnItemType AND GACM_XFR.ENABLEPOSTING=1  
   WHERE (GACM_XFR.XN_TYPE=@CPOSTINGXNTYPE+@CXnItemType AND posting_base=1) OR  
       (GACM_CO_CO.XN_TYPE=@CPOSTINGXNTYPE+@CXnItemType  AND posting_base=2) OR  
        (GACM_NONCO_NONCO.XN_TYPE=@CPOSTINGXNTYPE+@CXnItemType  AND posting_base=3)   
   GROUP BY A.RM_NO,   
     A.RM_ID,   
     A.RM_DT ,  
     A.AC_CODE,   
     A.REMARKS,  
     A.TOTAL_AMOUNT,   
     a.location_Code ,   
     A.FIN_YEAR,  
    isnull(D.AC_NAME,prlm .AC_NAME ),  
     A.CANCELLED  
     ,ISNULL(RMD.GST_PERCENTAGE,0)  
     ,rmd.GST_CESS_PERCENTAGE  
     ,FREIGHT_GST_PERCENTAGE  
      ,OTHER_CHARGES_GST_PERCENTAGE  
      ,FREIGHT_IGST_AMOUNT  
      ,FREIGHT_CGST_AMOUNT  
      ,FREIGHT_SGST_AMOUNT  
      ,OTHER_CHARGES_IGST_AMOUNT  
      ,OTHER_CHARGES_CGST_AMOUNT  
      ,OTHER_CHARGES_SGST_AMOUNT  
      ,LOCS.GST_STATE_CODE  
      ,LOCT.GST_STATE_CODE       
      ,LOCS.LOC_GST_NO   
     ,isnull(LOCT.LOC_GST_NO,prlmp .Ac_gst_no )   
      ,A.FREIGHT  
      ,A.OTHER_CHARGES      
      ,A.FREIGHT_TAXABLE_VALUE  
      ,A.OTHER_CHARGES_TAXABLE_VALUE          
      ,OH_TAX_METHOD  
     , A.ROUND_OFF,A.MANUAL_ROUNDOFF  
     ,SECTION_CODE,ART.SUB_SECTION_CODE,a.gst_round_off  
    
     
  SET @CSTEP = 356          
  IF @CPOSTINGXNTYPE IN ('CHI_WSR_SAME_PANNO','CHI_WSR_DIFF_PANNO','CHI_XFR')  
  BEGIN  
   INSERT INTO #V_PROCESS (POSTING_XN_TYPE,MEMO_NO,MEMO_ID,MEMO_DT,DEPT_AC_CODE,REMARKS,   
   MEMO_AMOUNT,CANCELLED,FREIGHT,OTHERCHARGES,INSURANCE,QUANTITY,DEPT_ID,  
   FIN_YEAR,PARTY_NAME,VOUCHER_TYPE,REF_MEMO_ID,REF_MEMO_DT,XN_TYPE,GST_PERCENTAGE,XN_VALUE_WITHOUT_GST,  
    IGST_AMOUNT,CGST_AMOUNT,SGST_AMOUNT,GST_CESS_AMOUNT,GST_CESS_PERCENTAGE,FREIGHT_GST_PERCENTAGE,  
    OTHER_CHARGES_GST_PERCENTAGE,INSURANCE_GST_PERCENTAGE,FREIGHT_IGST_AMOUNT,FREIGHT_CGST_AMOUNT,  
    FREIGHT_SGST_AMOUNT,INSURANCE_IGST_AMOUNT,INSURANCE_CGST_AMOUNT,INSURANCE_SGST_AMOUNT,OTHER_CHARGES_IGST_AMOUNT,  
    OTHER_CHARGES_CGST_AMOUNT,OTHER_CHARGES_SGST_AMOUNT,MEMO_FREIGHT,MEMO_OTHER_CHARGES,OH_TAX_METHOD,  
    SOURCE_GST_NO,TARGET_GST_NO,ROUND_OFF,MANUAL_ROUNDOFF,IGST_REVENUE_AC_CODE,  
   LGST_REVENUE_AC_CODE,IGST_TAX_AC_CODE,CGST_TAX_AC_CODE,SGST_TAX_AC_CODE,GST_CESS_AC_CODE,  
   FREIGHT_IGST_REVENUE_AC_CODE,FREIGHT_LGST_REVENUE_AC_CODE,FREIGHT_SGST_TAX_AC_CODE,  
   FREIGHT_CGST_TAX_AC_CODE,FREIGHT_IGST_TAX_AC_CODE,OTHER_CHARGES_IGST_REVENUE_AC_CODE,  
   OTHER_CHARGES_LGST_REVENUE_AC_CODE,OTHER_CHARGES_SGST_TAX_AC_CODE,OTHER_CHARGES_CGST_TAX_AC_CODE,  
   OTHER_CHARGES_IGST_TAX_AC_CODE,SECTION_CODE,  
   SUB_SECTION_CODE,CASHDISCOUNTAMOUNT,CD_PCT,gst_round_off,tcs_amount,actual_memo_no)     
   SELECT  @CPOSTINGXNTYPEConfig AS POSTING_XN_TYPE,  
     A.RM_NO AS MEMO_NO,   
     E.CN_ID AS MEMO_ID,   
     E.RECEIPT_DT AS MEMO_DT,  
     E.DEPT_AC_CODE,  
     A.REMARKS,   
     A.TOTAL_AMOUNT*-1 AS MEMO_AMOUNT  
     ,A.CANCELLED  
     ,A.FREIGHT_TAXABLE_VALUE AS FREIGHT  
     ,A.OTHER_CHARGES_TAXABLE_VALUE AS OTHERCHARGES  
     ,0 AS INSURANCE,       
     SUM(RMD.QUANTITY) AS QUANTITY,  
     e.location_code  AS DEPT_ID,   
     A.FIN_YEAR,  
     LMLOC.AC_NAME AS PARTY_NAME,  
     '0000000004' AS VOUCHER_TYPE,  
     A.RM_ID AS REF_MEMO_ID,  
     A.RM_DT AS REF_MEMO_DT,  
     'WSRCHI' AS XN_TYPE  
     ,ISNULL(RMD.GST_PERCENTAGE,0) AS GST_PERCENTAGE       
     ,SUM(XN_VALUE_WITHOUT_GST) AS XN_VALUE_WITHOUT_GST  
      ,SUM(IGST_AMOUNT) AS IGST_AMOUNT  
      ,SUM(CGST_AMOUNT) AS CGST_AMOUNT  
      ,SUM(SGST_AMOUNT) AS SGST_AMOUNT  
     ,SUM(GST_CESS_AMOUNT) AS GST_CESS_AMOUNT  
     ,rmd.GST_CESS_PERCENTAGE  
      ,FREIGHT_GST_PERCENTAGE  
      ,OTHER_CHARGES_GST_PERCENTAGE  
      ,0 AS INSURANCE_GST_PERCENTAGE  
      ,FREIGHT_IGST_AMOUNT  
      ,FREIGHT_CGST_AMOUNT  
      ,FREIGHT_SGST_AMOUNT  
      ,0 AS INSURANCE_IGST_AMOUNT  
      ,0 AS INSURANCE_CGST_AMOUNT  
      ,0 AS INSURANCE_SGST_AMOUNT  
      ,OTHER_CHARGES_IGST_AMOUNT  
      ,OTHER_CHARGES_CGST_AMOUNT  
      ,OTHER_CHARGES_SGST_AMOUNT  
      ,A.FREIGHT AS MEMO_FREIGHT  
      ,A.OTHER_CHARGES AS MEMO_OTHER_CHARGES  
      ,OH_TAX_METHOD  
      ,LOCS.LOC_GST_NO AS SOURCE_GST_NO  
     ,LOCT.LOC_GST_NO AS TARGET_GST_NO  
     ,A.ROUND_OFF,A.MANUAL_ROUNDOFF  
     ,'0000000000' AS IGST_REVENUE_AC_CODE  
     , '0000000000' AS LGST_REVENUE_AC_CODE  
     , '0000000000' AS IGST_TAX_AC_CODE  
     , '0000000000'  AS CGST_TAX_AC_CODE  
     ,  '0000000000' AS SGST_TAX_AC_CODE  
     , '0000000000' AS GST_CESS_AC_CODE  
     , '0000000000'  AS FREIGHT_IGST_REVENUE_AC_CODE  
     ,  '0000000000'  AS FREIGHT_LGST_REVENUE_AC_CODE  
     , '0000000000'  AS FREIGHT_SGST_TAX_AC_CODE  
     , '0000000000' AS FREIGHT_CGST_TAX_AC_CODE  
     , '0000000000'  AS FREIGHT_IGST_TAX_AC_CODE  
       
     , '0000000000' AS OTHER_CHARGES_IGST_REVENUE_AC_CODE  
     , '0000000000' AS OTHER_CHARGES_LGST_REVENUE_AC_CODE  
     , '0000000000'  AS OTHER_CHARGES_SGST_TAX_AC_CODE  
     , '0000000000' AS OTHER_CHARGES_CGST_TAX_AC_CODE  
     , '0000000000' AS OTHER_CHARGES_IGST_TAX_AC_CODE                       ,SECTION_CODE,ART.SUB_SECTION_CODE,0 AS CASHDISCOUNTAMOUNT,0 AS CD_PCT  
     ,a.gst_round_off,0 tcs_amount,e.cn_no  
       
   FROM RMM01106 A    
   JOIN RMD01106 RMD ON A.RM_ID=RMD.RM_ID  
   JOIN FORM C ON RMD.ITEM_FORM_ID = C.FORM_ID  
   JOIN LMV01106 D ON A.AC_CODE = D.AC_CODE  
   JOIN (SELECT cnm.location_Code , CN_ID,RM_ID,CNM.RECEIPT_DT,CNM.AC_CODE AS DEPT_AC_CODE,cn_no FROM CNM01106 CNM  
      JOIN #POSTS PST ON CNM.CN_ID=PST.MEMO_ID   
      WHERE PST.MODE='WSRCHI') E ON E.RM_ID=A.RM_ID  
   JOIN #POSTS PS ON E.CN_ID=PS.MEMO_ID AND PS.MODE='WSRCHI'  
   JOIN LOCATION LOCS ON LOCS.DEPT_ID=a.location_Code   
   JOIN LOCATION LOCT ON LOCT.DEPT_ID=A.PARTY_DEPT_ID  
   JOIN LM01106 LMLOC ON LMLOC.AC_CODE=LOCS.DEPT_AC_CODE  
   JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=RMD.PRODUCT_CODE  
   JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE  
   JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE     
   LEFT OUTER JOIN GST_ACCOUNTS_CONFIG_MST GACM_CO_CO ON GACM_CO_CO.XN_TYPE='CHI_WSR_SAME_PANNO'+@CXnItemType AND GACM_CO_CO.ENABLEPOSTING=1  
   LEFT OUTER JOIN GST_ACCOUNTS_CONFIG_MST GACM_NONCO_NONCO ON GACM_NONCO_NONCO.XN_TYPE='CHI_WSR_DIFF_PANNO'+@CXnItemType AND GACM_NONCO_NONCO.ENABLEPOSTING=1  
   LEFT OUTER JOIN GST_ACCOUNTS_CONFIG_MST GACM_XFR ON GACM_XFR.XN_TYPE='CHI_XFR'+@CXnItemType AND GACM_XFR.ENABLEPOSTING=1  
   WHERE (GACM_XFR.XN_TYPE=@CPOSTINGXNTYPE+@cXnItemtype AND posting_base=1) OR  
       (GACM_CO_CO.XN_TYPE=@CPOSTINGXNTYPE+@cXnItemtype  AND posting_base=2) OR  
        (GACM_NONCO_NONCO.XN_TYPE=@CPOSTINGXNTYPE+@cXnItemtype  AND posting_base=3)   
   GROUP BY A.RM_NO,A.RM_ID,A.RM_DT,A.REMARKS,  
     A.TOTAL_AMOUNT,   
     e.location_Code ,   
     A.FIN_YEAR,  
     E.DEPT_AC_CODE,LMLOC.AC_NAME,  
     E.CN_ID,E.RECEIPT_DT,A.CANCELLED  
     ,ISNULL(RMD.GST_PERCENTAGE,0)  
     ,rmd.GST_CESS_PERCENTAGE  
     ,FREIGHT_GST_PERCENTAGE  
      ,OTHER_CHARGES_GST_PERCENTAGE  
      ,FREIGHT_IGST_AMOUNT  
      ,FREIGHT_CGST_AMOUNT  
      ,FREIGHT_SGST_AMOUNT  
      ,OTHER_CHARGES_IGST_AMOUNT  
      ,OTHER_CHARGES_CGST_AMOUNT  
      ,OTHER_CHARGES_SGST_AMOUNT  
      ,LOCS.GST_STATE_CODE  
      ,LOCT.GST_STATE_CODE       
      ,LOCS.LOC_GST_NO   
     ,LOCT.LOC_GST_NO  
     ,A.FREIGHT  
      ,A.OTHER_CHARGES      
      ,A.FREIGHT_TAXABLE_VALUE  
      ,A.OTHER_CHARGES_TAXABLE_VALUE          
      ,OH_TAX_METHOD  
     ,A.ROUND_OFF,A.MANUAL_ROUNDOFF   
     ,SECTION_CODE,ART.SUB_SECTION_CODE,a.gst_round_off,e.cn_no
     
   INSERT INTO #V_PROCESS (POSTING_XN_TYPE,MEMO_NO,MEMO_ID,MEMO_DT,DEPT_AC_CODE,REMARKS,   
   MEMO_AMOUNT,CANCELLED,FREIGHT,OTHERCHARGES,INSURANCE,QUANTITY,DEPT_ID,  
   FIN_YEAR,PARTY_NAME,VOUCHER_TYPE,REF_MEMO_ID,REF_MEMO_DT,XN_TYPE,GST_PERCENTAGE,XN_VALUE_WITHOUT_GST,  
    IGST_AMOUNT,CGST_AMOUNT,SGST_AMOUNT,GST_CESS_AMOUNT,GST_CESS_PERCENTAGE,FREIGHT_GST_PERCENTAGE,  
    OTHER_CHARGES_GST_PERCENTAGE,INSURANCE_GST_PERCENTAGE,FREIGHT_IGST_AMOUNT,FREIGHT_CGST_AMOUNT,  
    FREIGHT_SGST_AMOUNT,INSURANCE_IGST_AMOUNT,INSURANCE_CGST_AMOUNT,INSURANCE_SGST_AMOUNT,OTHER_CHARGES_IGST_AMOUNT,  
    OTHER_CHARGES_CGST_AMOUNT,OTHER_CHARGES_SGST_AMOUNT,MEMO_FREIGHT,MEMO_OTHER_CHARGES,OH_TAX_METHOD,  
    SOURCE_GST_NO,TARGET_GST_NO,ROUND_OFF,MANUAL_ROUNDOFF,IGST_REVENUE_AC_CODE,  
   LGST_REVENUE_AC_CODE,IGST_TAX_AC_CODE,CGST_TAX_AC_CODE,SGST_TAX_AC_CODE,GST_CESS_AC_CODE,  
   FREIGHT_IGST_REVENUE_AC_CODE,FREIGHT_LGST_REVENUE_AC_CODE,FREIGHT_SGST_TAX_AC_CODE,  
   FREIGHT_CGST_TAX_AC_CODE,FREIGHT_IGST_TAX_AC_CODE,OTHER_CHARGES_IGST_REVENUE_AC_CODE,  
   OTHER_CHARGES_LGST_REVENUE_AC_CODE,OTHER_CHARGES_SGST_TAX_AC_CODE,OTHER_CHARGES_CGST_TAX_AC_CODE,  
   OTHER_CHARGES_IGST_TAX_AC_CODE,SECTION_CODE,  
   SUB_SECTION_CODE,CASHDISCOUNTAMOUNT,CD_PCT,gst_round_off,tcs_amount)     
   SELECT  @CPOSTINGXNTYPEConfig AS POSTING_XN_TYPE,  
     A.CN_NO AS MEMO_NO,   
     E.CN_ID AS MEMO_ID,   
     E.RECEIPT_DT AS MEMO_DT,  
     E.DEPT_AC_CODE,  
     A.REMARKS,   
     A.TOTAL_AMOUNT*-1 AS MEMO_AMOUNT  
     ,A.CANCELLED  
     ,A.FREIGHT_TAXABLE_VALUE AS FREIGHT  
     ,A.OTHER_CHARGES_TAXABLE_VALUE AS OTHERCHARGES  
     ,0 AS INSURANCE,       
     SUM(cnd.QUANTITY) AS QUANTITY,  
     a.location_code  AS DEPT_ID,   
     A.FIN_YEAR,  
     LMLOC.AC_NAME AS PARTY_NAME,  
     '0000000004' AS VOUCHER_TYPE,  
     A.CN_ID AS REF_MEMO_ID,  
     A.CN_DT AS REF_MEMO_DT,  
     'WSRCHI' AS XN_TYPE  
     ,ISNULL(CND.GST_PERCENTAGE,0) AS GST_PERCENTAGE       
     ,SUM(XN_VALUE_WITHOUT_GST) AS XN_VALUE_WITHOUT_GST  
      ,SUM(IGST_AMOUNT) AS IGST_AMOUNT  
      ,SUM(CGST_AMOUNT) AS CGST_AMOUNT  
      ,SUM(SGST_AMOUNT) AS SGST_AMOUNT  
     ,SUM(GST_CESS_AMOUNT) AS GST_CESS_AMOUNT  
     ,cnd.GST_CESS_PERCENTAGE  
      ,FREIGHT_GST_PERCENTAGE  
      ,OTHER_CHARGES_GST_PERCENTAGE  
      ,0 AS INSURANCE_GST_PERCENTAGE  
      ,FREIGHT_IGST_AMOUNT  
      ,FREIGHT_CGST_AMOUNT  
      ,FREIGHT_SGST_AMOUNT  
      ,0 AS INSURANCE_IGST_AMOUNT  
      ,0 AS INSURANCE_CGST_AMOUNT  
      ,0 AS INSURANCE_SGST_AMOUNT  
      ,OTHER_CHARGES_IGST_AMOUNT  
      ,OTHER_CHARGES_CGST_AMOUNT  
      ,OTHER_CHARGES_SGST_AMOUNT  
      ,A.FREIGHT AS MEMO_FREIGHT  
      ,A.OTHER_CHARGES AS MEMO_OTHER_CHARGES  
      ,OH_TAX_METHOD  
      ,d.ac_GST_NO AS SOURCE_GST_NO  
     ,LOCT.LOC_GST_NO AS TARGET_GST_NO  
     ,A.ROUND_OFF,A.MANUAL_ROUNDOFF  
     ,'0000000000' AS IGST_REVENUE_AC_CODE  
     , '0000000000' AS LGST_REVENUE_AC_CODE  
     , '0000000000' AS IGST_TAX_AC_CODE  
     , '0000000000'  AS CGST_TAX_AC_CODE  
     ,  '0000000000' AS SGST_TAX_AC_CODE  
     , '0000000000' AS GST_CESS_AC_CODE  
     , '0000000000'  AS FREIGHT_IGST_REVENUE_AC_CODE  
     ,  '0000000000'  AS FREIGHT_LGST_REVENUE_AC_CODE  
     , '0000000000'  AS FREIGHT_SGST_TAX_AC_CODE  
     , '0000000000' AS FREIGHT_CGST_TAX_AC_CODE  
     , '0000000000'  AS FREIGHT_IGST_TAX_AC_CODE  
       
     , '0000000000' AS OTHER_CHARGES_IGST_REVENUE_AC_CODE  
     , '0000000000' AS OTHER_CHARGES_LGST_REVENUE_AC_CODE  
     , '0000000000'  AS OTHER_CHARGES_SGST_TAX_AC_CODE  
     , '0000000000' AS OTHER_CHARGES_CGST_TAX_AC_CODE  
     , '0000000000' AS OTHER_CHARGES_IGST_TAX_AC_CODE     
	 , SECTION_CODE,ART.SUB_SECTION_CODE,0 AS CASHDISCOUNTAMOUNT,0 AS CD_PCT  
     ,a.gst_round_off,0 tcs_amount  
       
   FROM CNM01106 A    
   JOIN CND01106 CND ON A.CN_ID=CND.CN_ID  
   JOIN LMP01106 D ON A.AC_CODE = D.AC_CODE  
   JOIN LM01106 lmloc ON A.AC_CODE = lmloc.AC_CODE  
   JOIN (SELECT cnm.location_Code , CN_ID,CNM.RECEIPT_DT,CNM.AC_CODE AS DEPT_AC_CODE FROM CNM01106 CNM  
      JOIN #POSTS PST ON CNM.CN_ID=PST.MEMO_ID   
      WHERE PST.MODE='WSRCHI') E ON E.CN_ID=A.CN_ID  
   JOIN #POSTS PS ON E.CN_ID=PS.MEMO_ID AND PS.MODE='WSRCHI'  
   JOIN LOCATION LOCT ON LOCT.DEPT_ID=a.location_Code  
   JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=CND.PRODUCT_CODE  
   JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE  
   JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE     
   LEFT OUTER JOIN GST_ACCOUNTS_CONFIG_MST GACM_CO_CO ON GACM_CO_CO.XN_TYPE='CHI_WSR_SAME_PANNO'+@CXnItemType AND GACM_CO_CO.ENABLEPOSTING=1  
   LEFT OUTER JOIN GST_ACCOUNTS_CONFIG_MST GACM_NONCO_NONCO ON GACM_NONCO_NONCO.XN_TYPE='CHI_WSR_DIFF_PANNO'+@CXnItemType AND GACM_NONCO_NONCO.ENABLEPOSTING=1  
   LEFT OUTER JOIN GST_ACCOUNTS_CONFIG_MST GACM_XFR ON GACM_XFR.XN_TYPE='CHI_XFR'+@CXnItemType AND GACM_XFR.ENABLEPOSTING=1  
   WHERE (a.mode=1 OR @nPostingLoctype=2) AND ((GACM_XFR.XN_TYPE=@CPOSTINGXNTYPE+@cXnItemtype AND posting_base=1) OR  
       (GACM_CO_CO.XN_TYPE=@CPOSTINGXNTYPE+@cXnItemtype  AND posting_base=2) OR  
        (GACM_NONCO_NONCO.XN_TYPE=@CPOSTINGXNTYPE+@cXnItemtype  AND posting_base=3))   
   GROUP BY A.CN_NO,A.CN_ID,A.CN_DT,A.REMARKS,  
     A.TOTAL_AMOUNT,   
     a.location_Code ,   
     A.FIN_YEAR,  
     E.DEPT_AC_CODE,LMLOC.AC_NAME,  
     E.CN_ID,E.RECEIPT_DT,A.CANCELLED  
     ,ISNULL(cnd.GST_PERCENTAGE,0)  
     ,cnd.GST_CESS_PERCENTAGE  
     ,FREIGHT_GST_PERCENTAGE  
      ,OTHER_CHARGES_GST_PERCENTAGE  
      ,FREIGHT_IGST_AMOUNT  
      ,FREIGHT_CGST_AMOUNT  
      ,FREIGHT_SGST_AMOUNT  
      ,OTHER_CHARGES_IGST_AMOUNT  
      ,OTHER_CHARGES_CGST_AMOUNT  
      ,OTHER_CHARGES_SGST_AMOUNT  
      ,d.ac_GST_STATE_CODE  
      ,LOCT.GST_STATE_CODE       
      ,d.ac_GST_NO   
     ,LOCT.LOC_GST_NO  
     ,A.FREIGHT  
      ,A.OTHER_CHARGES      
      ,A.FREIGHT_TAXABLE_VALUE  
      ,A.OTHER_CHARGES_TAXABLE_VALUE          
      ,OH_TAX_METHOD  
     ,A.ROUND_OFF,A.MANUAL_ROUNDOFF   
     ,SECTION_CODE,ART.SUB_SECTION_CODE,a.gst_round_off  
  END  
  
  SET @CSTEP = 370  
--SELECT 'CHECK #V_PROCESS',* FROM #V_PROCESS where MEMO_ID='J101119J1/18-19/000001'  
    
  IF OBJECT_ID('TEMPDB..#V_PROCESS_OTHERS','U') IS NOT NULL  
   DROP TABLE #V_PROCESS_OTHERS  
    
  SELECT @CROUNDOFFACCODE=VALUE  
  FROM GST_ACCOUNTS_CONFIG_DET_OTHERS WHERE XN_TYPE=@CPOSTINGXNTYPEConfig AND COLUMNNAME='ROFF_AC_CODE'  
  
  SELECT @CTcsAcCode=VALUE  
  FROM GST_ACCOUNTS_CONFIG_DET_OTHERS WHERE XN_TYPE=@CPOSTINGXNTYPEConfig AND COLUMNNAME='TCS_AC_CODE'  
      
  SELECT TOP  1 @CPOSTINGXNTYPEConfig AS  XN_TYPE,'ROFF_AC_CODE' AS  COLUMNNAME,'ROUND OFF A/C' AS COLUMNDESC  
  INTO #V_PROCESS_OTHERS FROM #V_PROCESS WHERE ROUND_OFF<>0   
  UNION ALL  
  SELECT TOP 1 @CPOSTINGXNTYPEConfig AS  XN_TYPE,'TCS_AC_CODE' AS  COLUMNNAME,'TCS A/C' AS COLUMNDESC  
  FROM #V_PROCESS WHERE tcs_amount<>0   
    
  SET @CSTEP = 375    
   
  EXEC SP3S_GET_POSTING_BLANKAC  
  @CXNTYPE= @CPOSTINGXNTYPEConfig,  
  @NLOOP=@NLOOP,  
  @CERRORMSG=@CERRORMSG OUTPUT,  
  @BBLANKACFOUND=@BBLANKACFOUND OUTPUT    
   
  IF @BBLANKACFOUND=1 OR @CERRORMSG<>'' OR @NLOOP=0  
   GOTO END_PROC  
      
  CREATE INDEX IX_V_PROCESS_RM_ID ON #V_PROCESS(MEMO_ID,XN_TYPE)  
    
  --SELECT 'CHECK VPROCESS',GST_PERCENTAGE, IGST_REVENUE_AC_CODE,LGST_REVENUE_AC_CODE, * FROM #V_PROCESS   
    
  --SELECT * FROM #GST_PCT_CONFIG WHERE GST_PERCENTAGE=5  
    
  DECLARE @nTotGST NUMERIC(10,2)    
  SELECT @CMEMOID='',@CXNTYPE='',@CAC_CODE='',@NCTR=1  
  SET @CSTEP = 380  
  WHILE EXISTS(SELECT TOP 1 'U' FROM #V_PROCESS)  
  BEGIN  
   SET @CSTEP = 390  
   SELECT TOP 1 @CMEMOID=MEMO_ID,@CMEMONO=MEMO_NO,@DMEMODT=MEMO_DT,@CXNTYPE=XN_TYPE,@CAC_CODE=DEPT_AC_CODE,  
   @CLOCGSTNO=SOURCE_GST_NO,@CPARTYGSTNO=TARGET_GST_NO,@cActualMemoNo=ISNULL(actual_memo_no,''),  
   @CREFMEMOID=REF_MEMO_ID,@BMANUALROFF=MANUAL_ROUNDOFF,@NROUNDOFF=ROUND_OFF,@cRemarks=ISNULL(remarks,'')  
   FROM #V_PROCESS  
     
   SELECT @nTotGST=ABS(sum(igst_amount+cgst_amount+sgst_amount+isnull(FREIGHT_IGST_AMOUNT,0)+isnull(FREIGHT_cGST_AMOUNT,0)+  
    isnull(FREIGHT_sGST_AMOUNT,0)+isnull(other_charges_IGST_AMOUNT,0)+isnull(other_charges_cGST_AMOUNT,0)+  
    isnull(other_charges_sGST_AMOUNT,0)+isnull(insurance_IGST_AMOUNT,0)+isnull(insurance_cGST_AMOUNT,0)+  
    isnull(insurance_sGST_AMOUNT,0)))  
   FROM #V_PROCESS where memo_id=@cMemoId  
  
   SELECT @CSEARCHGPCXNTYPEPREFIX=RIGHT(@CXNTYPE,3),@CSEARCHGPCXNTYPESUFFIX=LEFT(@CXNTYPE,3)  
  
   --IF @@SPID=338  
   -- SELECT TOP 1 DEPT_AC_CODE,memo_AMOUNT,  
   -- (CASE WHEN @CPOSTINGXNTYPE IN ('CHO_XFR','CHI_XFR') THEN @nTotGST ELSE 0 END) TOTGST  
   --   ,@CMEMOID MEMO_ID  
   -- FROM #V_PROCESS   
   -- WHERE MEMO_ID=@CMEMOID AND XN_TYPE=@CXNTYPE  AND memo_AMOUNT<>0  
               
       SET @CSTEP = 405  
   -- PARTY ACCOUNT DR WITH NET AMOUNT  
   INSERT @VCHC ( AC_CODE, AMOUNT,XN_ID )  
   SELECT TOP 1 DEPT_AC_CODE,memo_AMOUNT-  
   (CASE WHEN @CPOSTINGXNTYPE='CHO_XFR' THEN @nTotGST  
      WHEN @CPOSTINGXNTYPE='CHI_XFR' THEN @nTotGST*-1 ELSE 0 END)  
     ,@CMEMOID  
   FROM #V_PROCESS   
   WHERE MEMO_ID=@CMEMOID AND XN_TYPE=@CXNTYPE  AND memo_AMOUNT<>0  
        
   SET @CSTEP = 410  
  
     INSERT @VCHC ( AC_CODE,AMOUNT )   
   SELECT IGST_REVENUE_AC_CODE,SUM(XN_VALUE_WITHOUT_GST) AS AMOUNT  
   FROM #V_PROCESS  
   WHERE MEMO_ID=@CMEMOID AND IGST_AMOUNT<>0  
   GROUP BY MEMO_ID,IGST_REVENUE_AC_CODE              
     
   UNION ALL  
   SELECT LGST_REVENUE_AC_CODE,SUM(XN_VALUE_WITHOUT_GST) AS AMOUNT  
   FROM #V_PROCESS  
   WHERE MEMO_ID=@CMEMOID AND (CGST_AMOUNT<>0 OR IGST_AMOUNT=0)   
   GROUP BY MEMO_ID,LGST_REVENUE_AC_CODE  
                
     SET @CSTEP = 310      
  
     --FREIGHT AMOUNT SHOULD BE DEBITED      
     INSERT @VCHC ( AC_CODE,AMOUNT )       
     SELECT TOP 1 (CASE WHEN ISNULL(FREIGHT_IGST_AMOUNT,0)<>0 THEN   
       FREIGHT_IGST_REVENUE_AC_CODE ELSE FREIGHT_LGST_REVENUE_AC_CODE END) AS AC_CODE,FREIGHT      
     FROM #V_PROCESS      
     WHERE MEMO_ID=@CMEMOID AND FREIGHT<>0   
           
     SET @CSTEP = 320  
     --OTHER CHARGES AMOUNT SHOULD BE DEBITED      
     INSERT @VCHC (AC_CODE,AMOUNT )       
     SELECT TOP 1 (CASE WHEN ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)<>0 THEN   
       OTHER_CHARGES_IGST_REVENUE_AC_CODE ELSE OTHER_CHARGES_LGST_REVENUE_AC_CODE END) AS AC_CODE,OTHERCHARGES      
     FROM #V_PROCESS      
     WHERE MEMO_ID=@CMEMOID AND OTHERCHARGES<>0   
  
     SET @CSTEP = 325      
     --INSURANCE AMOUNT SHOULD BE DEBITED      
     INSERT @VCHC (AC_CODE,AMOUNT )       
     SELECT TOP 1 (CASE WHEN ISNULL(INSURANCE_IGST_AMOUNT,0)<>0 THEN   
       INSURANCE_IGST_REVENUE_AC_CODE ELSE INSURANCE_LGST_REVENUE_AC_CODE END) AS AC_CODE,INSURANCE      
     FROM #V_PROCESS      
     WHERE MEMO_ID=@CMEMOID AND INSURANCE<>0   
  
  
    SET @CSTEP=330   
  
    --TAX AMOUNT SHOULD BE CREDITED WITH THE RESPECTIVE TAX_AMOUNT      
    IF @CPOSTINGXNTYPE NOT IN ('CHO_XFR','CHI_XFR')  
    BEGIN  
     INSERT @VCHC ( AC_CODE,AMOUNT )     
     SELECT IGST_TAX_AC_CODE,IGST_AMOUNT    
     FROM #V_PROCESS    
     WHERE MEMO_ID=@CMEMOID AND IGST_AMOUNT<>0  
     UNION ALL  
     SELECT (CASe when @CLOCGSTNO=@CPARTYGSTNO THEN LGST_REVENUE_AC_CODE ELSE CGST_TAX_AC_CODE END),CGST_AMOUNT    
     FROM #V_PROCESS    
     WHERE MEMO_ID=@CMEMOID AND CGST_AMOUNT<>0  
     UNION ALL  
     SELECT (CASe when @CLOCGSTNO=@CPARTYGSTNO THEN LGST_REVENUE_AC_CODE ELSE SGST_TAX_AC_CODE END),SGST_AMOUNT    
     FROM #V_PROCESS    
     WHERE MEMO_ID=@CMEMOID AND SGST_AMOUNT<>0  
     UNION ALL  
    SELECT gst_cess_ac_code,a.gst_cess_AMOUNT  
    FROM #V_PROCESS a  
    WHERE MEMO_ID=@CMEMOID AND ISNULL(a.gst_cess_AMOUNT,0)<>0  
  
     SET @CSTEP=335  
     INSERT @VCHC (AC_CODE,AMOUNT)    
       SELECT TOP 1 FREIGHT_IGST_TAX_AC_CODE AS AC_CODE,FREIGHT_IGST_AMOUNT  
     FROM #V_PROCESS  A  
     WHERE MEMO_ID=@CMEMOID AND  FREIGHT_IGST_AMOUNT<>0  
      
     UNION ALL  
     SELECT TOP 1  (CASe when @CLOCGSTNO=@CPARTYGSTNO THEN LGST_REVENUE_AC_CODE ELSE FREIGHT_CGST_TAX_AC_CODE END)  
     ,FREIGHT_CGST_AMOUNT  
     FROM #V_PROCESS  A  
     WHERE MEMO_ID=@CMEMOID AND FREIGHT_CGST_AMOUNT<>0  
      
     UNION ALL  
     SELECT TOP 1  (CASe when @CLOCGSTNO=@CPARTYGSTNO THEN LGST_REVENUE_AC_CODE ELSE FREIGHT_SGST_TAX_AC_CODE END),FREIGHT_SGST_AMOUNT  
     FROM #V_PROCESS  A  
     WHERE MEMO_ID=@CMEMOID AND FREIGHT_SGST_AMOUNT<>0  
      
            
     UNION ALL  
     SELECT TOP 1   OTHER_CHARGES_IGST_TAX_AC_CODE ,OTHER_CHARGES_IGST_AMOUNT  
     FROM #V_PROCESS  A  
     WHERE MEMO_ID=@CMEMOID AND OTHER_CHARGES_IGST_AMOUNT<>0  
      
     UNION ALL  
     SELECT TOP 1   (CASe when @CLOCGSTNO=@CPARTYGSTNO THEN LGST_REVENUE_AC_CODE ELSE OTHER_CHARGES_CGST_TAX_AC_CODE END),OTHER_CHARGES_CGST_AMOUNT  
     FROM #V_PROCESS  A  
     WHERE MEMO_ID=@CMEMOID AND OTHER_CHARGES_CGST_AMOUNT<>0  
      
     UNION ALL  
     SELECT TOP 1   (CASe when @CLOCGSTNO=@CPARTYGSTNO THEN LGST_REVENUE_AC_CODE ELSE OTHER_CHARGES_SGST_TAX_AC_CODE END),OTHER_CHARGES_SGST_AMOUNT  
     FROM #V_PROCESS  A  
     WHERE MEMO_ID=@CMEMOID AND OTHER_CHARGES_SGST_AMOUNT<>0  
      
  
     UNION ALL  
     SELECT TOP 1  INSURANCE_IGST_TAX_AC_CODE,INSURANCE_IGST_AMOUNT  
     FROM #V_PROCESS  A  
     WHERE MEMO_ID=@CMEMOID AND INSURANCE_IGST_AMOUNT<>0  
      
     UNION ALL  
     SELECT TOP 1  (CASe when @CLOCGSTNO=@CPARTYGSTNO THEN LGST_REVENUE_AC_CODE ELSE  INSURANCE_CGST_TAX_AC_CODE END),INSURANCE_CGST_AMOUNT  
     FROM #V_PROCESS  A  
     WHERE MEMO_ID=@CMEMOID AND INSURANCE_CGST_AMOUNT<>0  
      
     UNION ALL  
     SELECT TOP 1  (CASe when @CLOCGSTNO=@CPARTYGSTNO THEN LGST_REVENUE_AC_CODE ELSE  INSURANCE_SGST_TAX_AC_CODE END),INSURANCE_SGST_AMOUNT  
     FROM #V_PROCESS  A  
     WHERE MEMO_ID=@CMEMOID AND INSURANCE_SGST_AMOUNT<>0   
  END  
  
    SET @CSTEP=340    
   --SET @NROLIMIT=(CASE WHEN @BMANUALROFF=1 THEN ABS(@NROUNDOFF) ELSE 0.99 END)  
   --SELECT  @CROUNDOFFACCODE ,  
   --(MEMO_AMOUNT-ABS(SUM(XN_VALUE_WITHOUT_GST+ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)  
   --     )+  
   -- MEMO_FREIGHT+(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(FREIGHT_IGST_AMOUNT,0)+ISNULL(FREIGHT_CGST_AMOUNT,0)+ISNULL(FREIGHT_SGST_AMOUNT,0) ELSE 0 END)+  
   -- MEMO_OTHER_CHARGES+(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)+  
   -- ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_SGST_AMOUNT,0) ELSE 0 END)+  
   -- MEMO_INSURANCE+(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(INSURANCE_IGST_AMOUNT,0)+  
   -- ISNULL(INSURANCE_CGST_AMOUNT,0)+ISNULL(INSURANCE_SGST_AMOUNT,0) ELSE 0 END)+  
   -- isnull(a.gst_round_off,0)))      
   -- *(CASE WHEN @CXNTYPE IN ('WSLCHO','PRTCHO') THEN -1 ELSE 1 END) AS AMOUNT,@CMEMOID  
   --FROM #V_PROCESS A  
   --WHERE A.MEMO_ID=@CMEMOID AND A.XN_TYPE=@CXNTYPE  
   --GROUP BY MEMO_FREIGHT,MEMO_OTHER_CHARGES,MEMO_INSURANCE,OH_TAX_METHOD,  
   --FREIGHT_IGST_AMOUNT,FREIGHT_CGST_AMOUNT,FREIGHT_SGST_AMOUNT,  
   --OTHER_CHARGES_IGST_AMOUNT,OTHER_CHARGES_CGST_AMOUNT,OTHER_CHARGES_SGST_AMOUNT,  
   --INSURANCE_IGST_AMOUNT,INSURANCE_CGST_AMOUNT,INSURANCE_SGST_AMOUNT,MEMO_AMOUNT,a.gst_round_off  
   --HAVING   
   --ABS(MEMO_AMOUNT-ABS(SUM(XN_VALUE_WITHOUT_GST+ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)  
   --     )+  
   -- MEMO_FREIGHT+(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(FREIGHT_IGST_AMOUNT,0)+ISNULL(FREIGHT_CGST_AMOUNT,0)+ISNULL(FREIGHT_SGST_AMOUNT,0) ELSE 0 END)+  
   -- MEMO_OTHER_CHARGES+(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)+  
   -- ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_SGST_AMOUNT,0) ELSE 0 END)+  
   -- MEMO_INSURANCE+(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(INSURANCE_IGST_AMOUNT,0)+  
   -- ISNULL(INSURANCE_CGST_AMOUNT,0)+ISNULL(INSURANCE_SGST_AMOUNT,0) ELSE 0 END)+isnull(a.gst_round_off,0))  
   -- )<=@NROLIMIT  
      
   
   	INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT,TDS_ENTRY,narration ) 
	SELECT DISTINCT ref_memo_id,Dept_AC_CODE,a.TDS_AMOUNT,0 AS TDS_ENTRY,'Tds Debited against ' 
	FROM #V_PROCESS a 
	WHERE memo_id=@cMemoId AND a.tds_amount<>0
	UNION ALL					
	SELECT DISTINCT ref_memo_id,ISNULL(TDS.PAYABLE_AC_CODE,'') AS TDS_AC_CODE,-ISNULL(a.TDS_AMOUNT,0),1 AS TDS_ENTRY,'' as narration
	FROM #V_PROCESS a
	JOIN pim01106 b ON a.memo_id=b.mrr_id
	LEFT OUTER JOIN TDS_SECTION TDS (NOLOCK) ON TDS.TDS_CODE=b.TDS_CODE
	WHERE memo_id=@cMemoId AND a.tds_amount<>0

   --ROUNDOFF AMOUNT SHOULD BE CREDITED  
   INSERT @VCHC (AC_CODE,AMOUNT,XN_ID )   
   SELECT TOP 1 @CROUNDOFFACCODE , isnull(a.gst_round_off+round_off,0)*  
   (CASE WHEN right(xn_type,3)='CHO' THEN -1 ELSE 1 END),@cMemoId  
   FROM #V_PROCESS A  
   WHERE A.MEMO_ID=@CMEMOID AND A.XN_TYPE=@CXNTYPE  
   AND isnull(a.gst_round_off+round_off,0)<>0  
  
  
   --TCS AMOUNT SHOULD BE CREDITED  
   INSERT @VCHC (AC_CODE,AMOUNT,XN_ID )   
   SELECT TOP 1 @CTCSACCODE , isnull(a.tcs_amount,0)*  
   (CASE WHEN right(xn_type,3)='CHO' THEN -1 ELSE 1 END),@cMemoId  
   FROM #V_PROCESS A  
   WHERE A.MEMO_ID=@CMEMOID AND A.XN_TYPE=@CXNTYPE  
   AND isnull(a.tcs_amount,0)<>0     
     
   SET @CSTEP = 480  
  
   SET @CSTEP = 500  
   SET @CVMID = ''  
   SELECT @CVMID = A.VM_ID   
   FROM POSTACT_VOUCHER_LINK A  
    JOIN VM01106 B ON A.VM_ID=B.VM_ID   
     WHERE B.CANCELLED=0 AND A.MEMO_ID = @CMEMOID AND A.XN_TYPE=@CXNTYPE  
     
   SET @CSTEP = 510  
   IF ISNULL(@CVMID,'') = ''  
   BEGIN  
       SET @CVMID = 'LATER-'+RTRIM(LTRIM(CONVERT(VARCHAR,@NCTR)))  
    SET @NCTR = @NCTR+1  
   END  
     
   SET @CSTEP = 520  
   IF @CXNTYPE='WSLCHO'  
   BEGIN  
    INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )  
    SELECT @CVMID,@CMEMOID,@CXNTYPE,LAST_UPDATE FROM INM01106 WHERE INV_ID = @CMEMOID  
   END  
   ELSE IF @CXNTYPE='PURCHI'  
   BEGIN  
    INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )  
    SELECT @CVMID,@CMEMOID,@CXNTYPE,ISNULL(b.LAST_UPDATE,a.last_update) FROM PIM01106 a
	left join inm01106 b (nolock) on a.inv_id=b.inv_id WHERE MRR_ID = @CMEMOID  
   END  
   ELSE IF @CXNTYPE='PRTCHO'  
   BEGIN  
    INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )  
    SELECT @CVMID,@CMEMOID,@CXNTYPE,LAST_UPDATE FROM RMM01106 WHERE RM_ID = @CMEMOID  
   END  
   ELSE IF @CXNTYPE='WSRCHI'  
   BEGIN  
    INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )  
    SELECT @CVMID,@CMEMOID,@CXNTYPE,ISNULL(b.LAST_UPDATE,a.last_update) FROM CNM01106 a
	left join rmm01106 b (nolock) on a.rm_id=b.rm_id WHERE CN_ID = @CMEMOID  
   END  
     
   SET @NSIGN=1  
     
   SET @CSTEP = 530  
   INSERT @VDC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE,   
        CREDIT_DAYS, CR_DISCOUNT_PERCENTAGE,AC_NAME)  
   SELECT @CVMID  
    , 'LATER-'+CONVERT(VARCHAR,ROW_NUMBER() OVER(ORDER BY A.AC_CODE)) AS VD_ID  
    , A.AC_CODE  
    ,isnull(narration+' ','')+(CASE 	WHEN @CLOCGSTNO=@CPARTYGSTNO THEN 'STOCK TRANSFER #'  
        WHEN @CXNTYPE='WSLCHO' THEN 'WHOLESALE INV #'  
        WHEN @CXNTYPE='PURCHI' THEN 'PURCHASE INV #'  
        WHEN @CXNTYPE='PRTCHO' THEN 'DEBIT NOTE #'  
        ELSE 'CREDIT NOTE #'   
      END)+(CASE WHEN @cActualMemoNo='' THEN  @CMEMONO ELSE @cActualMemoNo+' Source Challan#'+@cMemoNo END)
	  +(CASE WHEN @bPostRemarksInNarration=1 THEN ' '+ @cRemarks ELSE '' END)   AS NARRATION   
    ,(CASE WHEN SUM(AMOUNT)>0 THEN ABS(SUM(AMOUNT)) ELSE 0 END) AS DEBIT_AMOUNT  
    ,(CASE WHEN SUM(AMOUNT)<0 THEN ABS(SUM(AMOUNT)) ELSE 0 END) AS CREDIT_AMOUNT  
    ,(CASE WHEN SUM(AMOUNT)> 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE  
    ,0 AS CRDAYS  
    ,0  
    ,B.AC_NAME  
         FROM @VCHC A  
         JOIN LMV01106 B ON A.AC_CODE = B.AC_CODE  
         WHERE AMOUNT<>0  
         GROUP BY A.AC_CODE,B.AC_NAME  ,isnull(narration+' ','')
         ORDER BY X_TYPE,ABS(SUM(AMOUNT)) DESC  
     
         SET @CSTEP = 540  
         SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC  
      WHERE VM_ID = @CVMID  
  
   IF @nDrTotal<>@nCrTotal AND ABS(@nDrTotal-@nCrTotal)<=1  
   BEGIN  
     INSERT @VDC (VM_ID, VD_ID, AC_CODE,ac_name, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE)  
     SELECT TOP 1 @cVmId as vm_id,'later-roff' as vd_id,@CROUNDOFFACCODE as ac_code,b.ac_name,narration,  
     (CASE WHEN (@NDRTOTAL-@NCRTOTAL)>0 then 0 else ABS(@NDRTOTAL-@NCRTOTAL) END) AS DEBIT_AMOUNT,  
     (CASE WHEN (@NDRTOTAL-@NCRTOTAL)<0 then 0 else (@NDRTOTAL-@NCRTOTAL) END) AS CREDIT_AMOUNT,  
     (CASE WHEN (@NDRTOTAL-@NCRTOTAL)<0 then 'Dr' ELSE 'Cr' END) AS x_type  
     FROM @vdC a JOIN lm01106 b on @CROUNDOFFACCODE=b.ac_code  
     where vm_id=@cVmId  
      
     SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC  
     WHERE VM_ID = @CVMID  
   END  
  
      SET @CSTEP = 545      
         SET @CVOUCHERNO = ''   
         SELECT TOP 1 @CVOUCHERNO = VOUCHER_NO FROM VM01106 WHERE VM_ID = @CVMID  
         IF ISNULL(@CVOUCHERNO,'') = ''  
    SET @CVOUCHERNO = @CVMID  
     
           
         SET @CSTEP = 550  
         INSERT @VMC ( VM_ID,VOUCHER_NO,VOUCHER_DT, VOUCHER_CODE, DEPT_ID,   
        BILL_TYPE, BILL_NO, BILL_ID, BILL_DT,   
         PARTY_NAME, QUANTITY, NET_AMOUNT, RM_LIST, CANCELLED,DRTOTAL,CRTOTAL  
      )  
   SELECT TOP 1  VM_ID,VOUCHER_NO,VOUCHER_DT,VOUCHER_CODE, DEPT_ID,   
         BILL_TYPE, BILL_NO, BILL_ID, BILL_DT,   
         PARTY_NAME, QUANTITY, ABS(NET_AMOUNT),'' AS RM_LIST, CANCELLED,DRTOTAL,CRTOTAL  
   FROM (           
   SELECT @CVMID AS VM_ID,@CVOUCHERNO AS VOUCHER_NO,MEMO_DT AS VOUCHER_DT,VOUCHER_TYPE,DEPT_ID,  
       (CASE WHEN @CXNTYPE='WSLCHO' THEN '0000000007'  
       WHEN @CXNTYPE='PURCHI' THEN '0000000006'   
       WHEN @CXNTYPE='PRTCHO' THEN '0000000005'  
       ELSE '0000000004'   
     END) AS VOUCHER_CODE   
      ,(CASE WHEN @CXNTYPE='WSLCHO' THEN 'WSL'  
       WHEN @CXNTYPE='PURCHI' THEN 'PUR'   
       WHEN @CXNTYPE='PRTCHO' THEN 'PRT'  
       ELSE 'WSR'   
     END) AS BILL_TYPE,@CMEMONO AS BILL_NO,@CMEMOID AS  BILL_ID,@DMEMODT AS BILL_DT  
      ,A.PARTY_NAME,SUM(A.QUANTITY) AS QUANTITY,A.memo_AMOUNT AS NET_AMOUNT,A.CANCELLED,@NDRTOTAL AS DRTOTAL,  
      @NCRTOTAL AS CRTOTAL  
   FROM #V_PROCESS A  
   WHERE A.MEMO_ID=@CMEMOID AND XN_TYPE=@CXNTYPE  
   GROUP BY A.MEMO_DT,A.VOUCHER_TYPE,A.DEPT_ID  
     ,A.MEMO_NO,A.MEMO_ID  
     ,A.PARTY_NAME,A.memo_AMOUNT,A.CANCELLED  
   ) A  
     
  
   SET @CSTEP = 560  
   INSERT @TBILL_BY_BILL_REF    
      (VD_ID,REF_NO,AMOUNT,X_TYPE,CR_DAYS,LAST_UPDATE,VM_ID)    
      SELECT A.VD_ID    
      ,DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,@CMEMONO,@DMEMODT,(CASE WHEN DEBIT_AMOUNT > 0 THEN 'DR' ELSE 'CR' END),@CVMID)  
      ,A.CREDIT_AMOUNT+A.DEBIT_AMOUNT  
      ,(CASE WHEN DEBIT_AMOUNT > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE    
      ,A.CREDIT_DAYS,GETDATE(),@CVMID AS VM_ID  
   FROM @VDC A     
   JOIN LM01106 B ON A.AC_CODE=B.AC_CODE    
   JOIN LMP01106 C ON C.AC_CODE=B.AC_CODE  
   WHERE VM_ID=@CVMID AND C.BILL_BY_BILL=1  
      
   SET @CSTEP = 570  
     
   --IF @CREFMEMOID='01011180103-00001'  
   -- SELECT 'CHECK VCHC',* FROM @VCHC  
     
   DELETE @VCHC  
      DELETE FROM #V_PROCESS WHERE MEMO_ID = @CMEMOID AND XN_TYPE=@CXNTYPE  
  END         
     
    END TRY  
  
 BEGIN CATCH
 print 'enter catch of postact_gst_xfr'
  SET @CERRORMSG='ERROR IN PROCEDURE POSTACT_GST_XFR AT STEP:- '+@CSTEP+' FOR MEMOID :'+ISNULL(@CMEMOID,'')+' '+ERROR_MESSAGE()  
  GOTO END_PROC  
 END CATCH  
  
      
    SET @CSTEP = 580  
  
lblLast:  



	
   
  
   SET @CSTEP=582
	IF EXISTS (SELECT TOP 1 b.ac_code FROM @TBILL_BY_BILL_REF a JOIN @vdC b ON a.vd_id=b.vd_id 
			   JOIN  location loc (NOLOCK) ON loc.dept_ac_code=B.ac_code
			   WHERE loc.sor_loc=1 )
	    UPDATE a SET on_account=1,ref_no=LEFT(CONVERT(VARCHAR(40),NEWID()),10) FROM 
		@TBILL_BY_BILL_REF a JOIN @vdC b ON a.vd_id=b.vd_id AND a.vm_id=b.vm_id
	    JOIN  location loc (NOLOCK) ON loc.dept_ac_code=B.ac_code
		JOIN gst_accounts_config_mst c (NOLOCK) ON c.xn_type='SOR_REC'
		WHERE loc.sor_loc=1 AND c.enableposting=1

   SET @CSTEP=582.5
   IF @nSpId=''	
		set @nSpId=ltrim(rtrim(str(@@spid)))  

	EXEC SP_CHKXNSAVELOG 'XFRPOST',@cStep,1,@nSpId,'',1	 	
	
	DELETE FROM ACT_VM01106_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_VD01106_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_BILL_BY_BILL_REF_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_POSTACT_VOUCHER_LINK_UPLOAD WHERE SP_ID=@NSPID
	
	SET @CSTEP = 584
	EXEC SP_CHKXNSAVELOG 'XFRPOST',@cStep,1,@nSpId,'',1	 		
	PRINT 'START POSTING XFR:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
    INSERT ACT_VM01106_UPLOAD	( ANGADIA_CODE, APPROVED, APPROVEDLEVELNO, ATTACHMENT_FILE, AUDITED_DT, 
    AUDITED_USER_CODE, BILL_AC_CODE, BILL_DT, BILL_ID, BILL_NO, BILL_TYPE, CANCELLED, CASH_VOUCHER, COMPANY_CODE, 
    CRTOTAL, DEPT_ID, DRTOTAL, EDT_USER_CODE, FIN_YEAR, FREEZE, LAST_UPDATE, LR_DT, LR_NO, MEMO, MRR_LIST, OP_ENTRY,
    QUANTITY, REF_NO, REF_VM_ID, REMINDER_DAYS, SALE_VOUCHER, SENT_FOR_RECON, SENT_TO_HO, SMS_SENT, SR_NO, 
    UPLOADED_TO_ACTIVSTREAM, USER_CODE, VM_ID, VM_NO, VOUCHER_CODE, VOUCHER_DT, VOUCHER_NO, SP_ID,TEMP_VM_ID )  
    SELECT 	  ANGADIA_CODE,0 AS APPROVED,0 AS APPROVEDLEVELNO,'' AS ATTACHMENT_FILE,'' AS AUDITED_DT, 
    '' AS AUDITED_USER_CODE, BILL_AC_CODE,BILL_DT, ISNULL(BILL_ID,'') AS BILL_ID,ISNULL( BILL_NO,'') AS BILL_NO,
     BILL_TYPE,CANCELLED, 
    0 AS CASH_VOUCHER, '01' AS COMPANY_CODE, CRTOTAL, DEPT_ID, DRTOTAL,'' AS EDT_USER_CODE,
	('01'+dbo.FN_GETFINYEAR(voucher_dt)) FIN_YEAR, 
    0 AS FREEZE,GETDATE() AS  LAST_UPDATE,'' AS LR_DT,'' AS LR_NO,0 AS MEMO,'' AS MRR_LIST,0 AS  OP_ENTRY,
    QUANTITY, '' AS REF_NO,'' AS REF_VM_ID,0 AS  REMINDER_DAYS,1 AS SALE_VOUCHER,0 AS  SENT_FOR_RECON,0 AS SENT_TO_HO, 
    0 AS SMS_SENT,0 AS SR_NO,0 AS UPLOADED_TO_ACTIVSTREAM,'0000000' AS USER_CODE,
    VM_ID,'' AS VM_NO, VOUCHER_CODE, VOUCHER_DT,VOUCHER_NO, @NSPID AS SP_ID,'' AS TEMP_VM_ID 
    FROM @vmC A 
    
	
	SET @CSTEP = 586
	EXEC SP_CHKXNSAVELOG 'XFRPOST',@cStep,1,@nSpId,'',1	 		

	PRINT 'START POSTING XFR:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_VD01106_UPLOAD	( AC_CODE, AUTOENTRY, CHK_RECON, COMPANY_CODE, CONTROL_AC, COST_CENTER_AC_CODE, COST_CENTER_DEPT_ID, 
	CREDIT_AMOUNT, DEBIT_AMOUNT, LAST_UPDATE, NARRATION, RECON_DT, SECONDARY_NARRATION, VAT_ENTRY, VD_ID, VM_ID, VS_AC_CODE, X_TYPE, SP_ID,TEMP_VD_ID )
	SELECT AC_CODE,0 AS AUTOENTRY,0 AS CHK_RECON,'01' AS COMPANY_CODE,0 AS CONTROL_AC,'0000000000' AS COST_CENTER_AC_CODE, 
	ISNULL(b.Dept_id,@CDEPTID) AS COST_CENTER_DEPT_ID,CREDIT_AMOUNT, DEBIT_AMOUNT,GETDATE() AS LAST_UPDATE,ISNULL(NARRATION,'') AS NARRATION,'' AS RECON_DT, 
	'' AS SECONDARY_NARRATION, 0 AS VAT_ENTRY,VD_ID,A.VM_ID,ISNULL(VS_AC_CODE,'0000000000') AS VS_AC_CODE,
	X_TYPE, @NSPID AS SP_ID,'' AS TEMP_VD_ID 
	FROM @vdC A
	JOIN @vmC B ON A.VM_ID=B.VM_ID
    WHERE (DEBIT_AMOUNT<>0 OR CREDIT_AMOUNT<>0)

	
	SET @CSTEP = 588
	EXEC SP_CHKXNSAVELOG 'XFRPOST',@cStep,1,@nSpId,'',1	 		
	PRINT 'START POSTING XFR:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_BILL_BY_BILL_REF_UPLOAD	( ADJ_REMARKS, AMOUNT, BB_ROW_ID, CR_DAYS, LAST_UPDATE, PAYMENT_ADJ_REF_NO, 
	REF_NO,  REMARKS, VD_ID, X_TYPE, SP_ID ,VM_ID,cd_percentage,cd_base_amount,ignore_cd_base_amount,
	cd_posted,org_bill_amount,org_bill_dt,org_bill_no,on_account)  
	SELECT '' AS ADJ_REMARKS,AMOUNT,'' AS BB_ROW_ID,0 AS CR_DAYS,GETDATE() AS LAST_UPDATE,'' AS PAYMENT_ADJ_REF_NO, 
	a.ref_no, '' AS REMARKS,A.VD_ID,A.X_TYPE,@NSPID AS SP_ID,A.VM_ID,
	0 cd_percentage,0 cd_base_amount,0 ignore_cd_base_amount,0 cd_posted,d.net_amount as org_bill_amount,
	d.inv_DT org_bill_dt,d.inv_no org_bill_no,a.on_account FROM @TBILL_BY_BILL_REF A
    JOIN @vdC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID
    JOIN @vmC C ON B.VM_ID=C.VM_ID
	JOIN @vLink v ON v.VM_ID=c.VM_ID
	LEFT JOIN inm01106 d ON d.inv_id=v.MEMO_ID
    WHERE A.AMOUNT<>0
	
	SET @CSTEP = 590
	EXEC SP_CHKXNSAVELOG 'XFRPOST',@cStep,1,@nSpId,'',1	 		
	
	PRINT 'START POSTING XFR:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_POSTACT_VOUCHER_LINK_UPLOAD	( LAST_UPDATE, MEMO_ID, VM_ID, XN_TYPE, SP_ID )  
	SELECT 	LAST_UPDATE, MEMO_ID, A.VM_ID, A.XN_TYPE, @NSPID AS SP_ID 
	FROM @vlink A
    JOIN @vmC B ON A.VM_ID=B.VM_ID
	
	IF @bCalledfromValidate=0
	BEGIN
		SET @CSTEP = 592  
		  PRINT 'Running Step#'+@cStep+':'+convert(varchar,getdate(),113)
		SELECT @nSpId sp_id, CONVERT(BIT,1) AS CHK,CONVERT(BIT,1) optimized,*,CONVERT(BIT,0) AS ERROR_FLAG,CONVERT(VARCHAR(500),'') AS ERROR_DESC FROM @VMC ORDER BY BILL_DT,BILL_NO  
  
		 UPDATE @VDC SET DEBIT_AMOUNT=(CASE WHEN DEBIT_AMOUNT<>0 THEN DEBIT_AMOUNT ELSE NULL END),  
		 CREDIT_AMOUNT=(CASE WHEN CREDIT_AMOUNT<>0 THEN CREDIT_AMOUNT ELSE NULL END)  
      
			SELECT A.* FROM @VDC A   
			SELECT * FROM @ERRORS WHERE 1=2  
			SELECT * FROM @VLINK  
      
		 SELECT B.AC_NAME,A.*,A.REF_NO AS BILL_NO FROM @TBILL_BY_BILL_REF A  
		 JOIN @VDC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID  
		 JOIN @VLINK C ON B.VM_ID=C.VM_ID  
		 LEFT OUTER JOIN @ERRORS D ON C.MEMO_ID=D.XN_ID  
		 WHERE D.ERR_DESC IS NULL  
	END

END_PROC:  
   
 IF ISNULL(@CERRORMSG,'')<>''  
  SELECT @CERRORMSG AS ERRMSG           
END  
--END OF PROCEDURE - POSTACT_GST_XFR