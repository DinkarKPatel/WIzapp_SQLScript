CREATE PROCEDURE SAVETRAN_UPDSKU_PRD    
(    
@CXNTYPE VARCHAR(10),    
@CPOID VARCHAR(40),    
@CERROR VARCHAR(4000) OUTPUT    
)
--WITH ENCRYPTION    
AS    
DECLARE @CNEXTPRODUCTCODE VARCHAR(100),@CLOCID				VARCHAR(2) ,@CADDLOCIDPREFIX	VARCHAR(10)  
        ,@CPREFIXFLOORID  VARCHAR(10) ,@CADDFLOORIDPREFIX	VARCHAR(10),@CBIN_ALIAS			VARCHAR(10),@CADDPREFIX VARCHAR(50)  
        ,@CPREFIX		  VARCHAR(100),@CYEARCODE			VARCHAR(2) ,@NROWS				BIGINT,@NNEXTKEYVALUE   NUMERIC(30,0)   
        ,@PRDD            VARCHAR(100)    
BEGIN    

IF @CXNTYPE = 'PO'        
	GOTO LBLPO         
ELSE IF @CXNTYPE = 'PUR'        
	GOTO LBLPUR      
ELSE IF @CXNTYPE = 'XFR'        
	GOTO LBLXFR    
ELSE IF @CXNTYPE = 'XREC'        
	GOTO LBLXREC    
ELSE IF @CXNTYPE = 'MIS'        
	GOTO LBLISS     
ELSE IF @CXNTYPE = 'OMC'  -- OUT PUT      
	GOTO LBLOUT     
ELSE IF @CXNTYPE = 'DOC'  -- CODE CONVERSION      
	GOTO LBLDOC      
ELSE IF @CXNTYPE = 'FGP'        
	GOTO LBLFGP                
ELSE IF @CXNTYPE = 'RMR'        
	GOTO LBLRMR                
ELSE IF @CXNTYPE = 'PRDJWR'        
	GOTO LBLPRDJWR  
ELSE IF @CXNTYPE = 'XFR_PEN'        
	GOTO LBLXFR_PEN      
ELSE        
GOTO LAST  

  DECLARE @NWITHARTICLE INT,@CARTICLE_NO VARCHAR(20),@CARTICLEPREFIX VARCHAR(50),@CPREFIXFINYEAR INT,
           @CNEWPREFIX VARCHAR(100),@NBARCODEWTPREFIX INT
                
LBLPO:      
   BEGIN TRY     
   --INSERTING RECORDS IN PRD_SKU    
 
   SET @CARTICLEPREFIX=''
   SET @CNEWPREFIX=''
  IF OBJECT_ID('TEMPDB..#PODROWS','U') IS NOT NULL    
		DROP TABLE #PODROWS     
  SELECT @CLOCID=VALUE  FROM CONFIG WHERE CONFIG_OPTION   ='LOCATION_ID'  
  SET @CADDLOCIDPREFIX =@CLOCID  
  SELECT TOP 1 @CPREFIXFLOORID= VALUE FROM CONFIG WHERE CONFIG_OPTION='FLOOR_ID_IN_PC' 
  IF ISNULL(@CPREFIXFLOORID,'')='1'      
   SET @CADDFLOORIDPREFIX=@CLOCID+ISNULL(@CBIN_ALIAS ,'')  
  ELSE    
   SET @CADDFLOORIDPREFIX=''   
  
  SELECT TOP 1 @CADDPREFIX = VALUE FROM CONFIG WHERE CONFIG_OPTION='BARCODE_PREFIX'
  
  --SET @CYEARCODE = RIGHT(YEAR(PO_DT),2)  
  SELECT TOP 1 @CPREFIXFINYEAR= VALUE FROM CONFIG WHERE CONFIG_OPTION='YEAR_CODE_IN_PC'
  IF @CPREFIXFINYEAR=1
  SELECT @CYEARCODE =  CAST(RIGHT(YEAR(PO_DT),2) AS VARCHAR(4))   FROM PRD_POM01106 WHERE PO_ID = @CPOID 
  ELSE
  SET @CYEARCODE = ''
         
  SET  @CPREFIX = LTRIM(RTRIM(ISNULL(@CYEARCODE,''))) + LTRIM(RTRIM(ISNULL(@CADDLOCIDPREFIX,''))) +     
  LTRIM(RTRIM(ISNULL(@CADDFLOORIDPREFIX,''))) +   LTRIM(RTRIM(ISNULL(@CADDPREFIX,'')))    
  
      
  SELECT   NEWID() AS PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE,     
           A.PURCHASE_PRICE,A.PARA3_CODE, B.PO_DT AS INV_DT, PO_NO AS INV_NO, B.AC_CODE, B.PO_DT AS RECEIPT_DT,    
           A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE, A.FORM_ID, A.MRP,GETDATE() AS DT_CREATED, A.WS_PRICE,    
           A.ITEM_TAX_AMOUNT, '' AS CHALLAN_NO ,A.ROW_ID,A.PO_ID ,ISNULL(I.REF_WO_ID,'') AS WORK_ORDER_ID,    
           A.COMPONENT_CODE,A.COM_PARA1_CODE,A.COM_PARA2_CODE,ART.GENERATE_BARCODES_WITHARTICLE_PREFIX ,ART.ARTICLE_NO,
           CODING_SCHEME,A.PRODUCT_CODE,A.ROW_ID  AS POD_ROW_ID,A.PRODUCT_UID AS ORG_PRODUCT_UID  
  INTO #PODROWS    
  FROM PRD_POD01106 (NOLOCK) A    
  JOIN PRD_POM01106 (NOLOCK) B ON A.PO_ID = B.PO_ID   
  JOIN ARTICLE ART ON ART.ARTICLE_CODE =A.ARTICLE_CODE 
  LEFT OUTER JOIN PRD_PO_WSL  PW ON B.PO_ID = PW.PO_ID    
  LEFT OUTER JOIN PRD_PS_MST I ON PW.INV_ID= I.PS_ID    
  WHERE B.PO_ID = @CPOID  --AND ISNULL(A.PRODUCT_CODE,'')=''  
  
   --ALTER TABLE   #PODROWS   ADD PRODUCT_CODE VARCHAR(100)  
  UPDATE A SET PRODUCT_CODE=B.PRODUCT_CODE FROM  #PODROWS A
  JOIN SKU B ON A.ARTICLE_CODE=B.ARTICLE_CODE
  WHERE CODING_SCHEME=1  AND ISNULL(A.PRODUCT_CODE,'')=''         
  SET @NROWS = @@ROWCOUNT       
  
 
  IF OBJECT_ID('TEMPDB..#TMPARTICLE','U') IS NOT NULL    
		DROP TABLE #TMPARTICLE  
  SELECT  ARTICLE_NO INTO #TMPARTICLE FROM #PODROWS  
  WHERE GENERATE_BARCODES_WITHARTICLE_PREFIX=1 AND ISNULL(PRODUCT_CODE,'')=''
  
  

  WHILE EXISTS (SELECT TOP 1 'U' FROM #TMPARTICLE)
  BEGIN
   SELECT TOP 1 @CARTICLE_NO=ARTICLE_NO FROM #TMPARTICLE
   SET @CNEWPREFIX  =''
   SET @CARTICLEPREFIX=''
   SET @CARTICLEPREFIX=@CARTICLE_NO+'-'
   SET @CNEWPREFIX=@CPREFIX+@CARTICLEPREFIX
   EXEC GETNEXTKEY 'PRD_SKU', 'PRODUCT_CODE', 50, @CNEWPREFIX, 0, '', @NROWS,@CNEXTPRODUCTCODE OUTPUT   
   SET @NNEXTKEYVALUE = CONVERT(NUMERIC(30,0),RIGHT(LTRIM(RTRIM(@CNEXTPRODUCTCODE)),LEN(@CNEXTPRODUCTCODE)-LEN(@CNEWPREFIX)))      
         
  --PREFIC GENERATE WITH ARTICLE PREFIN     
  DECLARE PRDD CURSOR FOR SELECT  PRODUCT_UID,GENERATE_BARCODES_WITHARTICLE_PREFIX,ARTICLE_NO FROM #PODROWS  
  WHERE GENERATE_BARCODES_WITHARTICLE_PREFIX=1 AND ISNULL(PRODUCT_CODE,'')='' AND ARTICLE_NO=@CARTICLE_NO
  OPEN PRDD   
   FETCH NEXT FROM PRDD INTO @PRDD,@NWITHARTICLE ,@CARTICLE_NO      
    WHILE @@FETCH_STATUS=0  
    BEGIN  
       
    SET @CNEXTPRODUCTCODE = @CNEWPREFIX+LTRIM(RTRIM(CONVERT(VARCHAR(40),@NNEXTKEYVALUE)))         
    UPDATE #PODROWS SET PRODUCT_CODE = @CNEXTPRODUCTCODE WHERE PRODUCT_UID = @PRDD     
    SET @NNEXTKEYVALUE = @NNEXTKEYVALUE + 1     
       
   FETCH NEXT FROM PRDD INTO @PRDD ,@NWITHARTICLE ,@CARTICLE_NO    
    END  
  CLOSE PRDD   
  DEALLOCATE PRDD  
  
  UPDATE KEYS_PMT SET       
 LASTKEYVAL = LTRIM(RTRIM(@CNEXTPRODUCTCODE))       
 WHERE TABLENAME = 'PRD_SKU'      
 AND COLUMNNAME = 'PRODUCT_CODE'      
 AND FINYEAR  = ''      
 AND PREFIX  =@CNEWPREFIX    
 
  DELETE FROM #TMPARTICLE WHERE ARTICLE_NO =@CARTICLE_NO
 END 
 
   
--FOR  WITHOUT ARTICLE    

  SELECT @NBARCODEWTPREFIX=COUNT(PRODUCT_UID) FROM #PODROWS  
  WHERE GENERATE_BARCODES_WITHARTICLE_PREFIX<>1   AND ISNULL(PRODUCT_CODE,'')='' 
  SET @NROWS = @@ROWCOUNT   
IF ISNULL(@NBARCODEWTPREFIX,0)>0
BEGIN   
  EXEC GETNEXTKEY 'PRD_SKU', 'PRODUCT_CODE', 50, @CPREFIX, 0, '', @NROWS,@CNEXTPRODUCTCODE OUTPUT       
  SET @NNEXTKEYVALUE = CONVERT(NUMERIC(30,0),RIGHT(LTRIM(RTRIM(@CNEXTPRODUCTCODE)),LEN(@CNEXTPRODUCTCODE)-LEN(@CPREFIX)))      
       
  DECLARE PRDD1 CURSOR FOR SELECT  PRODUCT_UID FROM #PODROWS  
  WHERE GENERATE_BARCODES_WITHARTICLE_PREFIX<>1   AND ISNULL(PRODUCT_CODE,'')='' 
  OPEN PRDD1   
  FETCH NEXT FROM PRDD1 INTO @PRDD     
  WHILE @@FETCH_STATUS=0  
  BEGIN  
    SET @CNEXTPRODUCTCODE = @CPREFIX+LTRIM(RTRIM(CONVERT(VARCHAR(40),@NNEXTKEYVALUE)))         
    UPDATE #PODROWS SET PRODUCT_CODE = @CNEXTPRODUCTCODE WHERE PRODUCT_UID = @PRDD     
    SET @NNEXTKEYVALUE = @NNEXTKEYVALUE + 1     
     --PRINT @NNEXTKEYVALUE         
 FETCH NEXT FROM PRDD1 INTO @PRDD     
 END  
 CLOSE PRDD1   
 DEALLOCATE PRDD1  
     
 UPDATE KEYS_PMT SET       
 LASTKEYVAL = LTRIM(RTRIM(@CNEXTPRODUCTCODE))       
 WHERE TABLENAME = 'PRD_SKU'      
 AND COLUMNNAME = 'PRODUCT_CODE'      
 AND FINYEAR  = ''      
 AND PREFIX  = @CPREFIX        
END    
  
     
  UPDATE PRD_POD01106 SET PRODUCT_UID =  A.PRODUCT_UID ,
  PRODUCT_CODE=CASE WHEN ISNULL(B.PRODUCT_CODE,'')='' THEN A.PRODUCT_CODE ELSE  B.PRODUCT_CODE END   
  FROM #PODROWS A JOIN PRD_POD01106 B ON A.ARTICLE_CODE= B.ARTICLE_CODE     
  AND A.PARA1_CODE= B.PARA1_CODE AND A.PARA2_CODE= B.PARA2_CODE AND     
  A.PURCHASE_PRICE= B.PURCHASE_PRICE AND  A.COMPONENT_CODE= B.COMPONENT_CODE    
  AND  A.COM_PARA1_CODE= B.COM_PARA1_CODE AND  A.COM_PARA2_CODE= B.COM_PARA2_CODE  
  AND B.ROW_ID =A.POD_ROW_ID   
  JOIN PRD_POM01106 C ON B.PO_ID= C.PO_ID     
  WHERE C.PO_ID= @CPOID   --AND ISNULL(B.PRODUCT_CODE,'')=''   
  
  
  DELETE A FROM PRD_PMT  A
  JOIN #PODROWS B ON A.PRODUCT_UID=B.ORG_PRODUCT_UID 
  
  --IN CASE OF EDIT MODE DELETE PREVIOUS AND AGAIN INSERT
  DELETE A FROM PRD_SKU  A
  JOIN #PODROWS B ON A.PRODUCT_UID=B.ORG_PRODUCT_UID 
  
  
  INSERT PRD_SKU( PRODUCT_UID, ARTICLE_CODE, PARA1_CODE, PARA2_CODE, LAST_UPDATE, PURCHASE_PRICE,            
  PARA3_CODE, INV_DT, INV_NO, AC_CODE, RECEIPT_DT, PARA4_CODE, PARA5_CODE, PARA6_CODE,    
  FORM_ID, MRP, DT_CREATED, WS_PRICE, TAX_AMOUNT, CHALLAN_NO,WORK_ORDER_ID,COMPONENT_CODE,  
  COM_PARA1_CODE,COM_PARA2_CODE,PRODUCT_CODE )    
    
  SELECT   A.PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE, A.PURCHASE_PRICE,    
  A.PARA3_CODE,     
  A.INV_DT, A.INV_NO, A.AC_CODE, A.RECEIPT_DT, A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE, A.FORM_ID, A.MRP,    
  '' AS DT_CREATED, A.WS_PRICE, A.ITEM_TAX_AMOUNT, '' AS CHALLAN_NO ,A.WORK_ORDER_ID,    
  A.COMPONENT_CODE,A.COM_PARA1_CODE,A.COM_PARA2_CODE,A.PRODUCT_CODE    
  FROM #PODROWS A    
  LEFT OUTER JOIN PRD_SKU D ON A.PRODUCT_UID = D.PRODUCT_UID     
  WHERE  D.PRODUCT_UID IS NULL    
 
 
  -- INSERTING RECORDS IN PMT FOR PO FLOOR    
  INSERT PRD_PMT (PRODUCT_UID,  QUANTITY_IN_STOCK, DEPARTMENT_ID,LAST_UPDATE ,PRODUCT_CODE)    
  SELECT DISTINCT A.PRODUCT_UID,  0 AS QUANTITY_IN_STOCK,B.DEPARTMENT_ID, GETDATE() AS LAST_UPDATE ,BC.PRODUCT_CODE   
  FROM PRD_POD01106 A    
  JOIN PRD_POM01106 B ON A.PO_ID = B.PO_ID    
  JOIN #PODROWS BC ON A.PRODUCT_UID = BC.PRODUCT_UID    
  LEFT OUTER JOIN PRD_PMT D ON A.PRODUCT_UID = D.PRODUCT_UID AND D.DEPARTMENT_ID = B.DEPARTMENT_ID    
  WHERE B.PO_ID = @CPOID    
  AND   D.PRODUCT_UID IS NULL     
  
  
     
  GOTO LAST     
    END TRY    
    BEGIN CATCH    
  SET @CERROR =  ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()      
    END CATCH     
    
       
    
    
LBLPUR:    
    
 BEGIN TRY     
    
    
   SET @CARTICLEPREFIX=''
   SET @CNEWPREFIX=''
  IF OBJECT_ID('TEMPDB..#PIDROWS','U') IS NOT NULL    
		DROP TABLE #PIDROWS    
		 
  SELECT @CLOCID=VALUE  FROM CONFIG WHERE CONFIG_OPTION   ='LOCATION_ID'  
  SET @CADDLOCIDPREFIX =@CLOCID  
  SELECT TOP 1 @CPREFIXFLOORID= VALUE FROM CONFIG WHERE CONFIG_OPTION='FLOOR_ID_IN_PC'
  IF ISNULL(@CPREFIXFLOORID,'')='1'      
   SET @CADDFLOORIDPREFIX=@CLOCID+ISNULL(@CBIN_ALIAS ,'')  
  ELSE    
   SET @CADDFLOORIDPREFIX=''   
  
  SELECT TOP 1 @CADDPREFIX = VALUE FROM CONFIG WHERE CONFIG_OPTION='BARCODE_PREFIX'
  
  --SET @CYEARCODE = RIGHT(YEAR(PO_DT),2)  
  SELECT TOP 1 @CPREFIXFINYEAR= VALUE FROM CONFIG WHERE CONFIG_OPTION='YEAR_CODE_IN_PC'
  IF @CPREFIXFINYEAR=1
  SELECT @CYEARCODE =  CAST(RIGHT(YEAR(RECEIPT_DT),2) AS VARCHAR(4))   FROM PRD_PIM01106 WHERE MRR_ID = @CPOID 
  ELSE
  SET @CYEARCODE = ''
         
  SET  @CPREFIX = LTRIM(RTRIM(ISNULL(@CYEARCODE,''))) + LTRIM(RTRIM(ISNULL(@CADDLOCIDPREFIX,''))) +     
  LTRIM(RTRIM(ISNULL(@CADDFLOORIDPREFIX,''))) +   LTRIM(RTRIM(ISNULL(@CADDPREFIX,'')))    
  
      
  SELECT   CASE WHEN A.PRODUCT_CODE ='' THEN  NEWID() ELSE A.PRODUCT_UID END AS PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE,     
           A.PURCHASE_PRICE,A.PARA3_CODE, B.INV_DT AS INV_DT, B.INV_NO AS INV_NO, B.AC_CODE, B.RECEIPT_DT AS RECEIPT_DT,    
           A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE, A.FORM_ID, A.MRP,GETDATE() AS DT_CREATED, A.WHOLESALE_PRICE AS WS_PRICE,    
           A.TAX_AMOUNT, '' AS CHALLAN_NO ,A.ROW_ID,A.MRR_ID ,'' AS WORK_ORDER_ID,    
           '' AS COMPONENT_CODE,'' AS COM_PARA1_CODE,'' AS COM_PARA2_CODE,ART.GENERATE_BARCODES_WITHARTICLE_PREFIX ,ART.ARTICLE_NO,
           CODING_SCHEME,A.PRODUCT_CODE,A.ROW_ID  AS POD_ROW_ID,A.PRODUCT_UID AS ORG_PRODUCT_UID  
  INTO #PIDROWS    
  FROM PRD_PID01106 (NOLOCK) A    
  JOIN PRD_PIM01106 (NOLOCK) B ON A.MRR_ID = B.MRR_ID   
  JOIN ARTICLE ART ON ART.ARTICLE_CODE =A.ARTICLE_CODE 
  WHERE B.MRR_ID = @CPOID  --AND ISNULL(A.PRODUCT_CODE,'')=''  
  
   --ALTER TABLE   #PODROWS   ADD PRODUCT_CODE VARCHAR(100)  
  UPDATE A SET PRODUCT_CODE=B.PRODUCT_CODE FROM  #PIDROWS A
  JOIN SKU B ON A.ARTICLE_CODE=B.ARTICLE_CODE
  WHERE CODING_SCHEME=1  AND ISNULL(A.PRODUCT_CODE,'')=''         
  SET @NROWS = @@ROWCOUNT       
  
  IF OBJECT_ID('TEMPDB..#TMPARTICLE_PID','U') IS NOT NULL    
		DROP TABLE #TMPARTICLE_PID
		  
  SELECT  ARTICLE_NO INTO #TMPARTICLE_PID FROM #PIDROWS  
  WHERE GENERATE_BARCODES_WITHARTICLE_PREFIX=1 AND ISNULL(PRODUCT_CODE,'')=''
  
  WHILE EXISTS (SELECT TOP 1 'U' FROM #TMPARTICLE_PID)
  BEGIN
   SELECT TOP 1 @CARTICLE_NO=ARTICLE_NO FROM #TMPARTICLE_PID
   SET @CNEWPREFIX  =''
   SET @CARTICLEPREFIX=''
   SET @CARTICLEPREFIX=@CARTICLE_NO+'-'
   SET @CNEWPREFIX=@CPREFIX+@CARTICLEPREFIX
   EXEC GETNEXTKEY 'PRD_SKU', 'PRODUCT_CODE', 50, @CNEWPREFIX, 0, '', @NROWS,@CNEXTPRODUCTCODE OUTPUT   
   SET @NNEXTKEYVALUE = CONVERT(NUMERIC(30,0),RIGHT(LTRIM(RTRIM(@CNEXTPRODUCTCODE)),LEN(@CNEXTPRODUCTCODE)-LEN(@CNEWPREFIX)))      
         
  --PREFIC GENERATE WITH ARTICLE PREFIN     
  DECLARE PRDD CURSOR FOR SELECT  PRODUCT_UID,GENERATE_BARCODES_WITHARTICLE_PREFIX,ARTICLE_NO FROM #PIDROWS  
  WHERE GENERATE_BARCODES_WITHARTICLE_PREFIX=1 AND ISNULL(PRODUCT_CODE,'')='' AND ARTICLE_NO=@CARTICLE_NO
  OPEN PRDD   
   FETCH NEXT FROM PRDD INTO @PRDD,@NWITHARTICLE ,@CARTICLE_NO      
    WHILE @@FETCH_STATUS=0  
    BEGIN  
       
    SET @CNEXTPRODUCTCODE = @CNEWPREFIX+LTRIM(RTRIM(CONVERT(VARCHAR(40),@NNEXTKEYVALUE)))         
    UPDATE #PIDROWS SET PRODUCT_CODE = @CNEXTPRODUCTCODE WHERE PRODUCT_UID = @PRDD     
    SET @NNEXTKEYVALUE = @NNEXTKEYVALUE + 1     
       
   FETCH NEXT FROM PRDD INTO @PRDD ,@NWITHARTICLE ,@CARTICLE_NO    
    END  
  CLOSE PRDD   
  DEALLOCATE PRDD  
  
  UPDATE KEYS_PMT SET       
 LASTKEYVAL = LTRIM(RTRIM(@CNEXTPRODUCTCODE))       
 WHERE TABLENAME = 'PRD_SKU'      
 AND COLUMNNAME = 'PRODUCT_CODE'      
 AND FINYEAR  = ''      
 AND PREFIX  =@CNEWPREFIX    
 
  DELETE FROM #TMPARTICLE_PID WHERE ARTICLE_NO =@CARTICLE_NO
 END 
 
   
--FOR  WITHOUT ARTICLE    

  SELECT @NBARCODEWTPREFIX=COUNT(PRODUCT_UID) FROM #PIDROWS  
  WHERE GENERATE_BARCODES_WITHARTICLE_PREFIX<>1   AND ISNULL(PRODUCT_CODE,'')='' 
  SET @NROWS = @@ROWCOUNT   
IF ISNULL(@NBARCODEWTPREFIX,0)>0
BEGIN   
  EXEC GETNEXTKEY 'PRD_SKU', 'PRODUCT_CODE', 50, @CPREFIX, 0, '', @NROWS,@CNEXTPRODUCTCODE OUTPUT       
  SET @NNEXTKEYVALUE = CONVERT(NUMERIC(30,0),RIGHT(LTRIM(RTRIM(@CNEXTPRODUCTCODE)),LEN(@CNEXTPRODUCTCODE)-LEN(@CPREFIX)))      
       
  DECLARE PRDD1 CURSOR FOR SELECT  PRODUCT_UID FROM #PIDROWS  
  WHERE GENERATE_BARCODES_WITHARTICLE_PREFIX<>1   AND ISNULL(PRODUCT_CODE,'')='' 
  OPEN PRDD1   
  FETCH NEXT FROM PRDD1 INTO @PRDD     
  WHILE @@FETCH_STATUS=0  
  BEGIN  
    SET @CNEXTPRODUCTCODE = @CPREFIX+LTRIM(RTRIM(CONVERT(VARCHAR(40),@NNEXTKEYVALUE)))         
    UPDATE #PIDROWS SET PRODUCT_CODE = @CNEXTPRODUCTCODE WHERE PRODUCT_UID = @PRDD     
    SET @NNEXTKEYVALUE = @NNEXTKEYVALUE + 1     
     --PRINT @NNEXTKEYVALUE         
 FETCH NEXT FROM PRDD1 INTO @PRDD     
 END  
 CLOSE PRDD1   
 DEALLOCATE PRDD1  
     
 UPDATE KEYS_PMT SET       
 LASTKEYVAL = LTRIM(RTRIM(@CNEXTPRODUCTCODE))       
 WHERE TABLENAME = 'PRD_SKU'      
 AND COLUMNNAME = 'PRODUCT_CODE'      
 AND FINYEAR  = ''      
 AND PREFIX  = @CPREFIX        
END    
  
     
   
  UPDATE PRD_PID01106 SET PRODUCT_UID =  A.PRODUCT_UID ,
  PRODUCT_CODE=CASE WHEN ISNULL(B.PRODUCT_CODE,'')='' THEN A.PRODUCT_CODE ELSE  B.PRODUCT_CODE END   
  FROM #PIDROWS A 
  JOIN PRD_PID01106 B ON A.ARTICLE_CODE= B.ARTICLE_CODE     
  AND A.PARA1_CODE= B.PARA1_CODE AND A.PARA2_CODE= B.PARA2_CODE AND     
  A.PURCHASE_PRICE= B.PURCHASE_PRICE AND    B.ROW_ID =A.POD_ROW_ID   
  JOIN PRD_PIM01106 C ON B.MRR_ID= C.MRR_ID     
  WHERE C.MRR_ID= @CPOID   --AND ISNULL(B.PRODUCT_CODE,'')=''   
  

  
  --DELETE A FROM PRD_PMT  A
  --JOIN #PIDROWS B ON A.PRODUCT_UID=B.ORG_PRODUCT_UID 
  
  ----IN CASE OF EDIT MODE DELETE PREVIOUS AND AGAIN INSERT
  --DELETE A FROM PRD_SKU  A
  --JOIN #PIDROWS B ON A.PRODUCT_UID=B.ORG_PRODUCT_UID 
  
  
  INSERT PRD_SKU( PRODUCT_UID, ARTICLE_CODE, PARA1_CODE, PARA2_CODE, LAST_UPDATE, PURCHASE_PRICE,            
  PARA3_CODE, INV_DT, INV_NO, AC_CODE, RECEIPT_DT, PARA4_CODE, PARA5_CODE, PARA6_CODE,    
  FORM_ID, MRP, DT_CREATED, WS_PRICE, TAX_AMOUNT, CHALLAN_NO,WORK_ORDER_ID,COMPONENT_CODE,  
  COM_PARA1_CODE,COM_PARA2_CODE,PRODUCT_CODE )    
    
  SELECT   A.PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE, A.PURCHASE_PRICE,    
  A.PARA3_CODE,     
  A.INV_DT, A.INV_NO, A.AC_CODE, A.RECEIPT_DT, A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE, A.FORM_ID, A.MRP,    
  '' AS DT_CREATED, A.WS_PRICE, A.TAX_AMOUNT, '' AS CHALLAN_NO ,A.WORK_ORDER_ID,    
  A.COMPONENT_CODE,A.COM_PARA1_CODE,A.COM_PARA2_CODE,A.PRODUCT_CODE    
  FROM #PIDROWS A    
  LEFT OUTER JOIN PRD_SKU D ON A.PRODUCT_UID = D.PRODUCT_UID     
  WHERE  D.PRODUCT_UID IS NULL    
 
 
  -- INSERTING RECORDS IN PMT FOR PO FLOOR    
  INSERT PRD_PMT (PRODUCT_UID,  QUANTITY_IN_STOCK, DEPARTMENT_ID,LAST_UPDATE ,PRODUCT_CODE)    
  SELECT DISTINCT A.PRODUCT_UID,  0 AS QUANTITY_IN_STOCK,B.DEPARTMENT_ID, GETDATE() AS LAST_UPDATE ,BC.PRODUCT_CODE   
  FROM PRD_PID01106 A    
  JOIN PRD_PIM01106 B ON A.MRR_ID  = B.MRR_ID    
  JOIN #PIDROWS BC ON A.PRODUCT_UID = BC.PRODUCT_UID    
  LEFT OUTER JOIN PRD_PMT D ON A.PRODUCT_UID = D.PRODUCT_UID AND D.DEPARTMENT_ID = B.DEPARTMENT_ID    
  WHERE B.MRR_ID = @CPOID    
  AND   D.PRODUCT_UID IS NULL     
  
  
  
  GOTO LAST       
     
    END TRY    
        
    BEGIN CATCH    
  SET @CERROR =  ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()      
    END CATCH     
        
        
        
        
LBLXFR:      
    
   BEGIN TRY     
 -- INSERTING RECORDS IN PRD_SKU    
      
       
  
       
  DECLARE @IMEMOTYPE1 INT    
  SELECT @IMEMOTYPE1=TRANSFER_TO_MAIN   FROM PRD_STK_TRANSFER_MST WHERE MEMO_ID=@CPOID 
       
     
  IF ISNULL(@IMEMOTYPE1,0) <> 1     
  BEGIN    
      
       IF OBJECT_ID('TEMPDB..#XFRROWS','U') IS NOT NULL    
             DROP TABLE #XFRROWS    
       
   
       
   SELECT ISNULL(C.PRODUCT_UID,NEWID()) AS PRODUCT_UID, S.ARTICLE_CODE, S.PARA1_CODE, S.PARA2_CODE,     
   GETDATE() AS LAST_UPDATE,     
   S.PURCHASE_PRICE,S.PARA3_CODE,  MST.MEMO_DT AS INV_DT, MST.MEMO_NO AS INV_NO, S.AC_CODE,  MST.MEMO_DT AS RECEIPT_DT,    
   S.PARA4_CODE, S.PARA5_CODE, S.PARA6_CODE, S.FORM_ID, S.MRP,GETDATE() AS DT_CREATED, S.WS_PRICE,    
   S.TAX_AMOUNT, '' AS CHALLAN_NO ,DET.ROW_ID,MST.MEMO_ID ,ISNULL(DET.REF_WO_ID,'') AS WORK_ORDER_ID,    
   DET.COMPONENT_CODE,DET.COM_PARA1_CODE ,DET.COM_PARA2_CODE,S.PRODUCT_CODE    
   INTO #XFRROWS    
   FROM PRD_STK_TRANSFER_DET DET    
   JOIN PRD_STK_TRANSFER_MST MST ON DET.MEMO_ID = MST.MEMO_ID     
   JOIN PRD_SKU S ON DET.PRODUCT_UID = S.PRODUCT_UID  
   LEFT OUTER JOIN PRD_SKU C ON DET.PRODUCT_CODE =C.PRODUCT_CODE
    AND  S.ARTICLE_CODE= C.ARTICLE_CODE  AND S.PARA1_CODE= C.PARA1_CODE     
   AND S.PARA2_CODE= C.PARA2_CODE 
   AND ISNULL(DET.REF_WO_ID,'')  =ISNULL(C.WORK_ORDER_ID,'')     
   AND DET.COMPONENT_CODE= C.COMPONENT_CODE 
   AND DET.COM_PARA1_CODE= C.COM_PARA1_CODE AND      
   DET.COM_PARA2_CODE= C.COM_PARA2_CODE  AND S.PURCHASE_PRICE= C.PURCHASE_PRICE     
   WHERE MST.MEMO_ID =  @CPOID    
   
   --IN CASE OF MULTIPLE COMPONENT WITH SINGLE PRODUCT
   
   
   ;WITH CTE AS
   (
   SELECT DISTINCT   ISNULL(C.PRODUCT_UID , '') AS PRODUCT_UID, DET.PRODUCT_CODE,  S.ARTICLE_CODE, S.PARA1_CODE, S.PARA2_CODE, 
   DET.PRODUCT_UID AS OLD_PRODUCT_UID ,   
   GETDATE() AS LAST_UPDATE,     
   S.PURCHASE_PRICE,S.PARA3_CODE,  MST.MEMO_DT AS INV_DT, MST.MEMO_NO AS INV_NO, S.AC_CODE,  MST.MEMO_DT AS RECEIPT_DT,    
   S.PARA4_CODE, S.PARA5_CODE, S.PARA6_CODE, S.FORM_ID, S.MRP,GETDATE() AS DT_CREATED, S.WS_PRICE,
   DET.COMPONENT_CODE,    
   --,S.TAX_AMOUNT, '' AS CHALLAN_NOMST.MEMO_ID ,ISNULL(MST.REF_WO_ID,'') AS WORK_ORDER_ID,    
   DET.COM_PARA1_CODE ,DET.COM_PARA2_CODE
   --INTO #XFRROWS    
   FROM PRD_STK_TRANSFER_DET DET    
   JOIN PRD_STK_TRANSFER_MST MST ON DET.MEMO_ID = MST.MEMO_ID     
   JOIN PRD_SKU S ON DET.PRODUCT_UID = S.PRODUCT_UID  
   LEFT OUTER JOIN PRD_SKU C ON DET.PRODUCT_CODE =C.PRODUCT_CODE
   AND  S.ARTICLE_CODE= C.ARTICLE_CODE  AND S.PARA1_CODE= C.PARA1_CODE     
   AND S.PARA2_CODE= C.PARA2_CODE 
   AND ISNULL(DET.REF_WO_ID,'')  =ISNULL(C.WORK_ORDER_ID,'')     
   AND DET.COMPONENT_CODE= C.COMPONENT_CODE 
   AND DET.COM_PARA1_CODE= C.COM_PARA1_CODE AND      
   DET.COM_PARA2_CODE= C.COM_PARA2_CODE  
   AND S.PURCHASE_PRICE= C.PURCHASE_PRICE     
   WHERE MST.MEMO_ID = @CPOID   
    )

   
   SELECT * INTO #TMPCTE FROM CTE
   UPDATE #TMPCTE SET PRODUCT_UID=NEWID() WHERE ISNULL(PRODUCT_UID,'')=''
   
  
   IF  EXISTS (SELECT TOP 1 'U' FROM #TMPCTE)
   BEGIN
   UPDATE A SET PRODUCT_UID =B.PRODUCT_UID  FROM #XFRROWS A
   JOIN #TMPCTE B ON    A.PRODUCT_CODE =B.PRODUCT_CODE
   AND  A.ARTICLE_CODE= B.ARTICLE_CODE  AND A.PARA1_CODE= B.PARA1_CODE     
   AND A.PARA2_CODE= B.PARA2_CODE 
   AND A.COMPONENT_CODE= B.COMPONENT_CODE
   AND A.COM_PARA1_CODE= B.COM_PARA1_CODE AND      
   A.COM_PARA2_CODE= B.COM_PARA2_CODE  
   AND A.PURCHASE_PRICE= B.PURCHASE_PRICE     
  
   END
     
   
 
   UPDATE PRD_STK_TRANSFER_DET SET NEW_PRODUCT_UID =  A.PRODUCT_UID     
   FROM #XFRROWS A JOIN PRD_STK_TRANSFER_DET B ON A.ROW_ID= B.ROW_ID     
   JOIN PRD_STK_TRANSFER_MST C ON B.MEMO_ID= C.MEMO_ID     
   WHERE C.MEMO_ID= @CPOID AND ISNULL(NEW_PRODUCT_UID,'')=''    
   
       
       
   ;    
   WITH TEMP    
   AS    
   (     
    SELECT  ARTICLE_CODE,PARA1_CODE,PARA2_CODE,WORK_ORDER_ID,COMPONENT_CODE, COM_PARA1_CODE,COM_PARA2_CODE,PURCHASE_PRICE,    
            ROW_NUMBER() OVER (PARTITION BY PRODUCT_CODE,  ARTICLE_CODE ,PARA1_CODE,PARA2_CODE,COMPONENT_CODE,
            COM_PARA1_CODE,COM_PARA2_CODE,PURCHASE_PRICE    
            ORDER BY PRODUCT_CODE)    
            AS DUPLICATE    
    FROM #XFRROWS  (NOLOCK)    
   )    
   DELETE  FROM TEMP WHERE DUPLICATE>1 ;    
      
    
   INSERT PRD_SKU( PRODUCT_UID, ARTICLE_CODE, PARA1_CODE, PARA2_CODE, LAST_UPDATE, PURCHASE_PRICE,            
   PARA3_CODE, INV_DT, INV_NO, AC_CODE, RECEIPT_DT, PARA4_CODE, PARA5_CODE, PARA6_CODE,    
   FORM_ID, MRP, DT_CREATED, WS_PRICE, TAX_AMOUNT, CHALLAN_NO,WORK_ORDER_ID,    
   COMPONENT_CODE, COM_PARA1_CODE,COM_PARA2_CODE,PRODUCT_CODE )    
    
   SELECT   A.PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE, A.PURCHASE_PRICE,    
   A.PARA3_CODE,     
   A.INV_DT, A.INV_NO, A.AC_CODE, A.RECEIPT_DT, A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE, A.FORM_ID, A.MRP,    
   '' AS DT_CREATED, A.WS_PRICE, A.TAX_AMOUNT, '' AS CHALLAN_NO ,A.WORK_ORDER_ID,    
   A.COMPONENT_CODE,A.COM_PARA1_CODE ,A.COM_PARA2_CODE,A.PRODUCT_CODE       
   FROM #XFRROWS A    
   LEFT OUTER JOIN PRD_SKU D ON A.PRODUCT_UID = D.PRODUCT_UID     
   WHERE  D.PRODUCT_UID IS NULL    
         
       
   -- INSERTING RECORDS IN PMT FOR PIM FLOOR    
   INSERT PRD_PMT (PRODUCT_UID,  QUANTITY_IN_STOCK, DEPARTMENT_ID,LAST_UPDATE,PRODUCT_CODE  )    
   SELECT DISTINCT A.NEW_PRODUCT_UID,  0 AS QUANTITY_IN_STOCK,B.TARGET_DEPARTMENT_ID, GETDATE() AS LAST_UPDATE ,BC.PRODUCT_CODE   
   FROM PRD_STK_TRANSFER_DET A    
   JOIN PRD_STK_TRANSFER_MST B ON A.MEMO_ID = B.MEMO_ID    
   JOIN #XFRROWS BC ON A.NEW_PRODUCT_UID = BC.PRODUCT_UID    
   LEFT OUTER JOIN PRD_PMT D ON A.NEW_PRODUCT_UID = D.PRODUCT_UID AND D.DEPARTMENT_ID = B.TARGET_DEPARTMENT_ID    
   WHERE B.MEMO_ID = @CPOID    
   AND   D.PRODUCT_UID IS NULL      
        
        
      
  END    
      
  IF ISNULL(@IMEMOTYPE1,0) =1     
  BEGIN    
    
           IF OBJECT_ID('TEMPDB..#XFRROWS1','U') IS NOT NULL    
             DROP TABLE #XFRROWS1     
      
       
        
        
    SELECT ISNULL(C.PRODUCT_UID,NEWID()) AS PRODUCT_UID, S.ARTICLE_CODE, S.PARA1_CODE, S.PARA2_CODE,     
    GETDATE() AS LAST_UPDATE,     
    S.PURCHASE_PRICE,S.PARA3_CODE,  MST.MEMO_DT AS INV_DT, MST.MEMO_NO AS INV_NO, S.AC_CODE,  MST.MEMO_DT AS RECEIPT_DT,    
    S.PARA4_CODE, S.PARA5_CODE, S.PARA6_CODE, S.FORM_ID, S.MRP,GETDATE() AS DT_CREATED, S.WS_PRICE,    
    S.TAX_AMOUNT, '' AS CHALLAN_NO ,DET.ROW_ID,MST.MEMO_ID ,    
    --ISNULL(MST.REF_WO_ID,'') AS WORK_ORDER_ID,    
    '' AS WORK_ORDER_ID, DET.PRODUCT_CODE ,  
        
    DET.COMPONENT_CODE,DET.COM_PARA1_CODE ,DET.COM_PARA2_CODE    
    INTO #XFRROWS1    
    FROM PRD_STK_TRANSFER_DET DET    
    JOIN PRD_STK_TRANSFER_MST MST ON DET.MEMO_ID = MST.MEMO_ID     
    JOIN PRD_SKU S ON DET.PRODUCT_UID = S.PRODUCT_UID     
    LEFT OUTER JOIN PRD_SKU C ON DET.PRODUCT_CODE =C.PRODUCT_CODE AND S.ARTICLE_CODE= C.ARTICLE_CODE  AND S.PARA1_CODE= C.PARA1_CODE     
    AND S.PARA2_CODE= C.PARA2_CODE  AND S.PURCHASE_PRICE= C.PURCHASE_PRICE     
    AND ISNULL(C.WORK_ORDER_ID,'') ='' AND ISNULL(C.COMPONENT_CODE,'')=''     
    WHERE MST.MEMO_ID = @CPOID      
            
    
    
                ;    
    WITH TEMP    
    AS    
    (     
     SELECT  ARTICLE_CODE,PARA1_CODE,PARA2_CODE,WORK_ORDER_ID,PURCHASE_PRICE, ROW_NUMBER()     
     OVER (PARTITION BY ARTICLE_CODE,PARA1_CODE,PARA2_CODE,WORK_ORDER_ID,PURCHASE_PRICE,PRODUCT_CODE    
     ORDER BY ARTICLE_CODE,PARA1_CODE,PARA2_CODE,WORK_ORDER_ID,PURCHASE_PRICE,PRODUCT_CODE) AS DUPLICATE    
     FROM #XFRROWS1  (NOLOCK)    
    )    
    DELETE  FROM TEMP WHERE DUPLICATE>1 ;  
    
    
    
       UPDATE PRD_STK_TRANSFER_DET SET NEW_PRODUCT_UID =  A.PRODUCT_UID     
       FROM #XFRROWS1 A JOIN PRD_STK_TRANSFER_DET B ON A.ROW_ID= B.ROW_ID     
       JOIN PRD_STK_TRANSFER_MST C ON B.MEMO_ID= C.MEMO_ID     
       WHERE C.MEMO_ID= @CPOID AND ISNULL(NEW_PRODUCT_UID,'')='' 
       
         
        
         
                     
    
    INSERT PRD_SKU( PRODUCT_UID, ARTICLE_CODE, PARA1_CODE, PARA2_CODE, LAST_UPDATE, PURCHASE_PRICE,            
       PARA3_CODE, INV_DT, INV_NO, AC_CODE, RECEIPT_DT, PARA4_CODE, PARA5_CODE, PARA6_CODE,    
       FORM_ID, MRP, DT_CREATED, WS_PRICE, TAX_AMOUNT, CHALLAN_NO,WORK_ORDER_ID,    
       COMPONENT_CODE, COM_PARA1_CODE,COM_PARA2_CODE,PRODUCT_CODE)    
    
    SELECT   A.PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE, A.PURCHASE_PRICE,    
    A.PARA3_CODE,     
    A.INV_DT, A.INV_NO, A.AC_CODE, A.RECEIPT_DT, A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE, A.FORM_ID, A.MRP,    
    '' AS DT_CREATED, A.WS_PRICE, A.TAX_AMOUNT, '' AS CHALLAN_NO ,'' AS WORK_ORDER_ID,    
    '' AS COMPONENT_CODE,'' AS COM_PARA1_CODE ,'' AS COM_PARA2_CODE  ,A.PRODUCT_CODE  
    FROM #XFRROWS1 A    
    LEFT OUTER JOIN PRD_SKU D ON A.PRODUCT_UID = D.PRODUCT_UID     
    WHERE  D.PRODUCT_UID IS NULL    
                                
            
     --INSERTING RECORDS IN PMT FOR PIM FLOOR    
    INSERT PRD_PMT (PRODUCT_UID,  QUANTITY_IN_STOCK, DEPARTMENT_ID,LAST_UPDATE ,PRODUCT_CODE)    
    SELECT DISTINCT A.NEW_PRODUCT_UID,  0 AS QUANTITY_IN_STOCK,B.TARGET_DEPARTMENT_ID, GETDATE() AS LAST_UPDATE ,BC.PRODUCT_CODE    
    FROM PRD_STK_TRANSFER_DET A    
    JOIN PRD_STK_TRANSFER_MST B ON A.MEMO_ID = B.MEMO_ID    
    JOIN #XFRROWS1 BC ON A.NEW_PRODUCT_UID = BC.PRODUCT_UID    
    LEFT OUTER JOIN PRD_PMT D ON A.NEW_PRODUCT_UID = D.PRODUCT_UID AND D.DEPARTMENT_ID = B.TARGET_DEPARTMENT_ID    
    WHERE B.MEMO_ID = @CPOID    
    AND   D.PRODUCT_UID IS NULL     
         
        
    
    
  END     
         
         
         
     
  GOTO LAST     
        
    END TRY    
        
    BEGIN CATCH    
  SET @CERROR =  ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()      
    END CATCH     

------XFR PENDING--------------

LBLXFR_PEN:      
    
   BEGIN TRY     
 -- INSERTING RECORDS IN PRD_SKU    
      
  SELECT @IMEMOTYPE1=TRANSFER_TO_MAIN   FROM PRD_STK_TRANSFER_MST WHERE MEMO_ID=@CPOID 
       
     
  IF ISNULL(@IMEMOTYPE1,0) <> 1     
  BEGIN    
      
       IF OBJECT_ID('TEMPDB..#XFRROWS2','U') IS NOT NULL    
             DROP TABLE #XFRROWS2    
       
   
       
   SELECT ISNULL(C.PRODUCT_UID,NEWID()) AS PRODUCT_UID, S.ARTICLE_CODE, S.PARA1_CODE, S.PARA2_CODE,     
   GETDATE() AS LAST_UPDATE,     
   S.PURCHASE_PRICE,S.PARA3_CODE,  MST.MEMO_DT AS INV_DT, MST.MEMO_NO AS INV_NO, S.AC_CODE,  MST.MEMO_DT AS RECEIPT_DT,    
   S.PARA4_CODE, S.PARA5_CODE, S.PARA6_CODE, S.FORM_ID, S.MRP,GETDATE() AS DT_CREATED, S.WS_PRICE,    
   S.TAX_AMOUNT, '' AS CHALLAN_NO ,DET.ROW_ID,MST.MEMO_ID ,ISNULL(DET.REF_WO_ID,'') AS WORK_ORDER_ID,    
   DET.COMPONENT_CODE,DET.COM_PARA1_CODE ,DET.COM_PARA2_CODE,S.PRODUCT_CODE    
   INTO #XFRROWS2    
   FROM PRD_STK_TRANSFER_DET_PENDING DET    
   JOIN PRD_STK_TRANSFER_MST_PENDING MST ON DET.MEMO_ID = MST.MEMO_ID     
   JOIN PRD_SKU S ON DET.PRODUCT_UID = S.PRODUCT_UID  
   LEFT OUTER JOIN PRD_SKU C ON DET.PRODUCT_CODE =C.PRODUCT_CODE
    AND  S.ARTICLE_CODE= C.ARTICLE_CODE  AND S.PARA1_CODE= C.PARA1_CODE     
   AND S.PARA2_CODE= C.PARA2_CODE 
   AND ISNULL(DET.REF_WO_ID,'')  =ISNULL(C.WORK_ORDER_ID,'')     
   AND DET.COMPONENT_CODE= C.COMPONENT_CODE 
   AND DET.COM_PARA1_CODE= C.COM_PARA1_CODE AND      
   DET.COM_PARA2_CODE= C.COM_PARA2_CODE  AND S.PURCHASE_PRICE= C.PURCHASE_PRICE     
   WHERE MST.MEMO_ID =  @CPOID    
   
   --IN CASE OF MULTIPLE COMPONENT WITH SINGLE PRODUCT
   
   
   ;WITH CTE AS
   (
   SELECT DISTINCT   ISNULL(C.PRODUCT_UID , '') AS PRODUCT_UID, DET.PRODUCT_CODE,  S.ARTICLE_CODE, S.PARA1_CODE, S.PARA2_CODE, 
   DET.PRODUCT_UID AS OLD_PRODUCT_UID ,   
   GETDATE() AS LAST_UPDATE,     
   S.PURCHASE_PRICE,S.PARA3_CODE,  MST.MEMO_DT AS INV_DT, MST.MEMO_NO AS INV_NO, S.AC_CODE,  MST.MEMO_DT AS RECEIPT_DT,    
   S.PARA4_CODE, S.PARA5_CODE, S.PARA6_CODE, S.FORM_ID, S.MRP,GETDATE() AS DT_CREATED, S.WS_PRICE,
   DET.COMPONENT_CODE,    
   --,S.TAX_AMOUNT, '' AS CHALLAN_NOMST.MEMO_ID ,ISNULL(MST.REF_WO_ID,'') AS WORK_ORDER_ID,    
   DET.COM_PARA1_CODE ,DET.COM_PARA2_CODE
   --INTO #XFRROWS    
   FROM PRD_STK_TRANSFER_DET_PENDING  DET   
   JOIN PRD_STK_TRANSFER_MST_PENDING MST ON DET.MEMO_ID = MST.MEMO_ID     
   JOIN PRD_SKU S ON DET.PRODUCT_UID = S.PRODUCT_UID  
   LEFT OUTER JOIN PRD_SKU C ON DET.PRODUCT_CODE =C.PRODUCT_CODE
   AND  S.ARTICLE_CODE= C.ARTICLE_CODE  AND S.PARA1_CODE= C.PARA1_CODE     
   AND S.PARA2_CODE= C.PARA2_CODE 
   AND ISNULL(DET.REF_WO_ID,'')  =ISNULL(C.WORK_ORDER_ID,'')     
   AND DET.COMPONENT_CODE= C.COMPONENT_CODE 
   AND DET.COM_PARA1_CODE= C.COM_PARA1_CODE AND      
   DET.COM_PARA2_CODE= C.COM_PARA2_CODE  
   AND S.PURCHASE_PRICE= C.PURCHASE_PRICE     
   WHERE MST.MEMO_ID = @CPOID   
    )

   
   SELECT * INTO #TMPCTE1 FROM CTE
   UPDATE #TMPCTE1 SET PRODUCT_UID=NEWID() WHERE ISNULL(PRODUCT_UID,'')=''
   
  
   IF  EXISTS (SELECT TOP 1 'U' FROM #TMPCTE1)
   BEGIN
   UPDATE A SET PRODUCT_UID =B.PRODUCT_UID  FROM #XFRROWS2 A
   JOIN #TMPCTE1 B ON    A.PRODUCT_CODE =B.PRODUCT_CODE
   AND  A.ARTICLE_CODE= B.ARTICLE_CODE  AND A.PARA1_CODE= B.PARA1_CODE     
   AND A.PARA2_CODE= B.PARA2_CODE 
   AND A.COMPONENT_CODE= B.COMPONENT_CODE
   AND A.COM_PARA1_CODE= B.COM_PARA1_CODE AND      
   A.COM_PARA2_CODE= B.COM_PARA2_CODE  
   AND A.PURCHASE_PRICE= B.PURCHASE_PRICE     
  
   END
     
   
 
   UPDATE PRD_STK_TRANSFER_DET_PENDING SET NEW_PRODUCT_UID =  A.PRODUCT_UID     
   FROM #XFRROWS2 A JOIN PRD_STK_TRANSFER_DET_PENDING B ON A.ROW_ID= B.ROW_ID     
   JOIN PRD_STK_TRANSFER_MST_PENDING C ON B.MEMO_ID= C.MEMO_ID     
   WHERE C.MEMO_ID= @CPOID AND ISNULL(NEW_PRODUCT_UID,'')=''    
   
       
       
   ;    
   WITH TEMP    
   AS    
   (     
    SELECT  ARTICLE_CODE,PARA1_CODE,PARA2_CODE,WORK_ORDER_ID,COMPONENT_CODE, COM_PARA1_CODE,COM_PARA2_CODE,PURCHASE_PRICE,    
            ROW_NUMBER() OVER (PARTITION BY PRODUCT_CODE,  ARTICLE_CODE ,PARA1_CODE,PARA2_CODE,COMPONENT_CODE,
            COM_PARA1_CODE,COM_PARA2_CODE,PURCHASE_PRICE    
            ORDER BY PRODUCT_CODE)    
            AS DUPLICATE    
    FROM #XFRROWS2  (NOLOCK)    
   )    
   DELETE  FROM TEMP WHERE DUPLICATE>1 ;    
      
    
   INSERT PRD_SKU( PRODUCT_UID, ARTICLE_CODE, PARA1_CODE, PARA2_CODE, LAST_UPDATE, PURCHASE_PRICE,            
   PARA3_CODE, INV_DT, INV_NO, AC_CODE, RECEIPT_DT, PARA4_CODE, PARA5_CODE, PARA6_CODE,    
   FORM_ID, MRP, DT_CREATED, WS_PRICE, TAX_AMOUNT, CHALLAN_NO,WORK_ORDER_ID,    
   COMPONENT_CODE, COM_PARA1_CODE,COM_PARA2_CODE,PRODUCT_CODE )    
    
   SELECT   A.PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE, A.PURCHASE_PRICE,    
   A.PARA3_CODE,     
   A.INV_DT, A.INV_NO, A.AC_CODE, A.RECEIPT_DT, A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE, A.FORM_ID, A.MRP,    
   '' AS DT_CREATED, A.WS_PRICE, A.TAX_AMOUNT, '' AS CHALLAN_NO ,A.WORK_ORDER_ID,    
   A.COMPONENT_CODE,A.COM_PARA1_CODE ,A.COM_PARA2_CODE,A.PRODUCT_CODE       
   FROM #XFRROWS2 A    
   LEFT OUTER JOIN PRD_SKU D ON A.PRODUCT_UID = D.PRODUCT_UID     
   WHERE  D.PRODUCT_UID IS NULL    
         
       
   -- INSERTING RECORDS IN PMT FOR PIM FLOOR    
   INSERT PRD_PMT (PRODUCT_UID,  QUANTITY_IN_STOCK, DEPARTMENT_ID,LAST_UPDATE,PRODUCT_CODE  )    
   SELECT DISTINCT A.NEW_PRODUCT_UID,  0 AS QUANTITY_IN_STOCK,B.TARGET_DEPARTMENT_ID, GETDATE() AS LAST_UPDATE ,BC.PRODUCT_CODE   
   FROM PRD_STK_TRANSFER_DET_PENDING A    
   JOIN PRD_STK_TRANSFER_MST_PENDING B ON A.MEMO_ID = B.MEMO_ID    
   JOIN #XFRROWS2 BC ON A.NEW_PRODUCT_UID = BC.PRODUCT_UID    
   LEFT OUTER JOIN PRD_PMT D ON A.NEW_PRODUCT_UID = D.PRODUCT_UID AND D.DEPARTMENT_ID = B.TARGET_DEPARTMENT_ID    
   WHERE B.MEMO_ID = @CPOID    
   AND   D.PRODUCT_UID IS NULL      
        
        
      
  END    
      
  IF ISNULL(@IMEMOTYPE1,0) =1     
  BEGIN    
    
           IF OBJECT_ID('TEMPDB..#XFRROWS3','U') IS NOT NULL    
             DROP TABLE #XFRROWS3  
      
       
        
        
    SELECT ISNULL(C.PRODUCT_UID,NEWID()) AS PRODUCT_UID, S.ARTICLE_CODE, S.PARA1_CODE, S.PARA2_CODE,     
    GETDATE() AS LAST_UPDATE,     
    S.PURCHASE_PRICE,S.PARA3_CODE,  MST.MEMO_DT AS INV_DT, MST.MEMO_NO AS INV_NO, S.AC_CODE,  MST.MEMO_DT AS RECEIPT_DT,    
    S.PARA4_CODE, S.PARA5_CODE, S.PARA6_CODE, S.FORM_ID, S.MRP,GETDATE() AS DT_CREATED, S.WS_PRICE,    
    S.TAX_AMOUNT, '' AS CHALLAN_NO ,DET.ROW_ID,MST.MEMO_ID ,    
    --ISNULL(MST.REF_WO_ID,'') AS WORK_ORDER_ID,    
    '' AS WORK_ORDER_ID, DET.PRODUCT_CODE ,  
        
    DET.COMPONENT_CODE,DET.COM_PARA1_CODE ,DET.COM_PARA2_CODE    
    INTO #XFRROWS3    
    FROM PRD_STK_TRANSFER_DET_PENDING DET    
    JOIN PRD_STK_TRANSFER_MST_PENDING MST ON DET.MEMO_ID = MST.MEMO_ID     
    JOIN PRD_SKU S ON DET.PRODUCT_UID = S.PRODUCT_UID     
    LEFT OUTER JOIN PRD_SKU C ON DET.PRODUCT_CODE =C.PRODUCT_CODE AND S.ARTICLE_CODE= C.ARTICLE_CODE  AND S.PARA1_CODE= C.PARA1_CODE     
    AND S.PARA2_CODE= C.PARA2_CODE  AND S.PURCHASE_PRICE= C.PURCHASE_PRICE     
    AND ISNULL(C.WORK_ORDER_ID,'') ='' AND ISNULL(C.COMPONENT_CODE,'')=''     
    WHERE MST.MEMO_ID = @CPOID      
            
    
    
                ;    
    WITH TEMP    
    AS    
    (     
     SELECT  ARTICLE_CODE,PARA1_CODE,PARA2_CODE,WORK_ORDER_ID,PURCHASE_PRICE, ROW_NUMBER()     
     OVER (PARTITION BY ARTICLE_CODE,PARA1_CODE,PARA2_CODE,WORK_ORDER_ID,PURCHASE_PRICE,PRODUCT_CODE    
     ORDER BY ARTICLE_CODE,PARA1_CODE,PARA2_CODE,WORK_ORDER_ID,PURCHASE_PRICE,PRODUCT_CODE) AS DUPLICATE    
     FROM #XFRROWS1  (NOLOCK)    
    )    
    DELETE  FROM TEMP WHERE DUPLICATE>1 ;  
    
    
    
       UPDATE PRD_STK_TRANSFER_DET_PENDING SET NEW_PRODUCT_UID =  A.PRODUCT_UID     
       FROM #XFRROWS3 A JOIN PRD_STK_TRANSFER_DET_PENDING B ON A.ROW_ID= B.ROW_ID     
       JOIN PRD_STK_TRANSFER_MST_PENDING C ON B.MEMO_ID= C.MEMO_ID     
       WHERE C.MEMO_ID= @CPOID AND ISNULL(PRD_STK_TRANSFER_DET.NEW_PRODUCT_UID,'')='' 
       
         
        
         
                     
    
    INSERT PRD_SKU( PRODUCT_UID, ARTICLE_CODE, PARA1_CODE, PARA2_CODE, LAST_UPDATE, PURCHASE_PRICE,            
       PARA3_CODE, INV_DT, INV_NO, AC_CODE, RECEIPT_DT, PARA4_CODE, PARA5_CODE, PARA6_CODE,    
       FORM_ID, MRP, DT_CREATED, WS_PRICE, TAX_AMOUNT, CHALLAN_NO,WORK_ORDER_ID,    
       COMPONENT_CODE, COM_PARA1_CODE,COM_PARA2_CODE,PRODUCT_CODE)    
    
    SELECT   A.PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE, A.PURCHASE_PRICE,    
    A.PARA3_CODE,     
    A.INV_DT, A.INV_NO, A.AC_CODE, A.RECEIPT_DT, A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE, A.FORM_ID, A.MRP,    
    '' AS DT_CREATED, A.WS_PRICE, A.TAX_AMOUNT, '' AS CHALLAN_NO ,'' AS WORK_ORDER_ID,    
    '' AS COMPONENT_CODE,'' AS COM_PARA1_CODE ,'' AS COM_PARA2_CODE  ,A.PRODUCT_CODE  
    FROM #XFRROWS3 A    
    LEFT OUTER JOIN PRD_SKU D ON A.PRODUCT_UID = D.PRODUCT_UID     
    WHERE  D.PRODUCT_UID IS NULL    
                                
            
     --INSERTING RECORDS IN PMT FOR PIM FLOOR    
    INSERT PRD_PMT (PRODUCT_UID,  QUANTITY_IN_STOCK, DEPARTMENT_ID,LAST_UPDATE ,PRODUCT_CODE)    
    SELECT DISTINCT A.NEW_PRODUCT_UID,  0 AS QUANTITY_IN_STOCK,B.TARGET_DEPARTMENT_ID, GETDATE() AS LAST_UPDATE ,BC.PRODUCT_CODE    
    FROM PRD_STK_TRANSFER_DET_PENDING A    
    JOIN PRD_STK_TRANSFER_MST_PENDING B ON A.MEMO_ID = B.MEMO_ID    
    JOIN #XFRROWS3 BC ON A.NEW_PRODUCT_UID = BC.PRODUCT_UID    
    LEFT OUTER JOIN PRD_PMT D ON A.NEW_PRODUCT_UID = D.PRODUCT_UID AND D.DEPARTMENT_ID = B.TARGET_DEPARTMENT_ID    
    WHERE B.MEMO_ID = @CPOID    
    AND   D.PRODUCT_UID IS NULL     
         
        
    
    
  END     
         
         
         
     
  GOTO LAST     
        
    END TRY    
        
    BEGIN CATCH    
  SET @CERROR =  ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()      
    END CATCH           
        
LBLISS:      
    
   BEGIN TRY     
      
     
      
  --FOR OLD UID WITH NEW DEPARMENT    
      
  INSERT PRD_PMT (PRODUCT_UID,  QUANTITY_IN_STOCK, DEPARTMENT_ID,LAST_UPDATE,PRODUCT_CODE )    
  SELECT DISTINCT A.PRODUCT_UID,  0 AS QUANTITY_IN_STOCK,B.TARGET_DEPARTMENT_ID, GETDATE() AS LAST_UPDATE,
                  PD.PRODUCT_CODE    
  FROM PRD_ISSUE_MATERIAL_DET A    
  JOIN PRD_ISSUE_MATERIAL_MST B ON A.MEMO_ID = B.MEMO_ID
  JOIN PRD_SKU PD ON A.PRODUCT_UID= PD.PRODUCT_UID    
  LEFT OUTER JOIN PRD_PMT D ON A.PRODUCT_UID = D.PRODUCT_UID AND D.DEPARTMENT_ID = B.TARGET_DEPARTMENT_ID    
  WHERE B.MEMO_ID = @CPOID AND D.PRODUCT_UID IS NULL     
      
       
      
  GOTO LAST     
        
  END TRY    
        
    BEGIN CATCH    
  SET @CERROR =  ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()      
    END CATCH     
        
        
        
        
LBLOUT:      
    
   BEGIN TRY     
       
  ---UPDATING MRP IN PRD_SKU TABLE     
      
  UPDATE  A SET A.MRP = B.MRP ,A.WS_PRICE = B.WS_PRICE,A.PURCHASE_PRICE= A.PURCHASE_PRICE + B.PURCHASE_PRICE     
  FROM PRD_SKU A    
  JOIN PRD_OP_MATERIAL_CON_DET B ON A.PRODUCT_UID= B.PRODUCT_UID    
  JOIN PRD_OP_MATERIAL_CON_MST C ON B.MEMO_ID= C.MEMO_ID    
  WHERE B.MEMO_ID =@CPOID AND A.PURCHASE_PRICE <> B.PURCHASE_PRICE     
        
  GOTO LAST     
        
    END TRY    
        
    BEGIN CATCH    
  SET @CERROR =  ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()      
    END CATCH     
              
      
      
LBLDOC:      
    
   BEGIN TRY     
 -- INSERTING RECORDS IN PRD_SKU FOR CODE CONVERSION    
  IF OBJECT_ID('TEMPDB..#DOCROWS','U') IS NOT NULL    
  DROP TABLE #PODROWS     
        
     
      
  --SELECT   ISNULL(C.PRODUCT_UID,NEWID()) AS PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE,     
  --         A.PURCHASE_PRICE,'0000000' AS PARA3_CODE, B.MEMO_DT AS INV_DT, MEMO_NO AS INV_NO,     
  --         '0000000000'  AS AC_CODE, B.MEMO_DT AS RECEIPT_DT,    
  --         '0000000' AS PARA4_CODE, '0000000' AS PARA5_CODE, '0000000' AS PARA6_CODE, '0000000' AS FORM_ID,     
  --         A.MRP,GETDATE() AS DT_CREATED, A.WS_PRICE,    
  --         0 AS ITEM_TAX_AMOUNT, '' AS CHALLAN_NO ,A.ROW_ID,A.MEMO_ID ,    
  --         ISNULL(B.REF_PRD_WORKORDER_MEMOID,'') AS WORK_ORDER_ID    
  --INTO #DOCROWS    
  --FROM PRD_DEPARTMENT_OUTPUT_DET A    
  --JOIN PRD_DEPARTMENT_OUTPUT_MST B ON A.MEMO_ID = B.MEMO_ID      
  --LEFT OUTER JOIN PRD_SKU C ON A.ARTICLE_CODE= C.ARTICLE_CODE  AND A.PARA1_CODE= C.PARA1_CODE     
  --AND A.PARA2_CODE= C.PARA2_CODE   AND C.WORK_ORDER_ID =B.REF_PRD_WORKORDER_MEMOID    
  --WHERE B.MEMO_ID = @CPOID     
      
   SELECT ISNULL(C.PRODUCT_UID,NEWID()) AS PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE,     
          GETDATE() AS LAST_UPDATE, A.PURCHASE_PRICE,'0000000' AS PARA3_CODE, B.MEMO_DT AS INV_DT, MEMO_NO AS INV_NO,     
          '0000000000'  AS AC_CODE, B.MEMO_DT AS RECEIPT_DT,    
          '0000000' AS PARA4_CODE, '0000000' AS PARA5_CODE, '0000000' AS PARA6_CODE, '0000000' AS FORM_ID,     
          A.MRP,GETDATE() AS DT_CREATED, A.WS_PRICE,    
          0 AS ITEM_TAX_AMOUNT, '' AS CHALLAN_NO ,A.ROW_ID,A.MEMO_ID ,    
          ISNULL(B.REF_PRD_WORKORDER_MEMOID,'') AS WORK_ORDER_ID, A.ARTICLE_CODE AS COMPONENT_CODE,    
          A.PARA1_CODE AS COM_PARA1_CODE, A.PARA2_CODE AS COM_PARA2_CODE          
  INTO #DOCROWS    
  FROM PRD_DEPARTMENT_OUTPUT_DET A    
  JOIN PRD_DEPARTMENT_OUTPUT_MST B ON A.MEMO_ID = B.MEMO_ID      
  LEFT OUTER JOIN PRD_SKU C ON A.ARTICLE_CODE= C.ARTICLE_CODE  AND A.PARA1_CODE= C.PARA1_CODE     
  AND A.PARA2_CODE= C.PARA2_CODE   AND C.WORK_ORDER_ID =B.REF_PRD_WORKORDER_MEMOID    
  AND A.ARTICLE_CODE= C.COMPONENT_CODE AND A.PARA1_CODE= C.COM_PARA1_CODE    
  AND A.PARA2_CODE= C.COM_PARA2_CODE  --AND A.PURCHASE_PRICE= C.PURCHASE_PRICE    
  WHERE B.MEMO_ID = @CPOID     
    
    
    
  INSERT PRD_SKU( PRODUCT_UID, ARTICLE_CODE, PARA1_CODE, PARA2_CODE, LAST_UPDATE, PURCHASE_PRICE,            
  PARA3_CODE, INV_DT, INV_NO, AC_CODE, RECEIPT_DT, PARA4_CODE, PARA5_CODE, PARA6_CODE,    
  FORM_ID, MRP, DT_CREATED, WS_PRICE, TAX_AMOUNT, CHALLAN_NO,WORK_ORDER_ID,    
  COMPONENT_CODE,COM_PARA1_CODE,COM_PARA2_CODE )    
    
  SELECT   A.PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE, A.PURCHASE_PRICE,    
  A.PARA3_CODE,     
  A.INV_DT, A.INV_NO, A.AC_CODE, A.RECEIPT_DT, A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE, A.FORM_ID, A.MRP,    
  '' AS DT_CREATED, A.WS_PRICE, A.ITEM_TAX_AMOUNT, '' AS CHALLAN_NO ,A.WORK_ORDER_ID,A.COMPONENT_CODE,A.COM_PARA1_CODE,    
  A.COM_PARA2_CODE     
  FROM #DOCROWS A    
  LEFT OUTER JOIN PRD_SKU D ON A.PRODUCT_UID = D.PRODUCT_UID     
  WHERE  D.PRODUCT_UID IS NULL    
    
    
    
  UPDATE PRD_DEPARTMENT_OUTPUT_DET SET PRODUCT_UID =  A.PRODUCT_UID     
  FROM #DOCROWS A JOIN PRD_DEPARTMENT_OUTPUT_DET B ON A.ROW_ID= B.ROW_ID     
  JOIN PRD_DEPARTMENT_OUTPUT_MST C ON B.MEMO_ID= C.MEMO_ID     
  WHERE C.MEMO_ID= @CPOID    
      
          
       
      
  -- INSERTING RECORDS IN PMT FOR PO FLOOR    
  INSERT PRD_PMT (PRODUCT_UID,  QUANTITY_IN_STOCK, DEPARTMENT_ID,LAST_UPDATE )    
  SELECT DISTINCT A.PRODUCT_UID,  0 AS QUANTITY_IN_STOCK,B.DEPARTMENT_ID, GETDATE() AS LAST_UPDATE    
  FROM PRD_DEPARTMENT_OUTPUT_DET A    
  JOIN PRD_DEPARTMENT_OUTPUT_MST B ON A.MEMO_ID = B.MEMO_ID    
  JOIN #DOCROWS BC ON A.PRODUCT_UID = BC.PRODUCT_UID    
  LEFT OUTER JOIN PRD_PMT D ON A.PRODUCT_UID = D.PRODUCT_UID AND D.DEPARTMENT_ID = B.DEPARTMENT_ID    
  WHERE B.MEMO_ID = @CPOID    
  AND   D.PRODUCT_UID IS NULL     
    
      
      
  GOTO LAST     
        
    END TRY    
        
    BEGIN CATCH    
  SET @CERROR =  ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()      
    END CATCH     
        
        
        
        
LBLFGP:      
    
   BEGIN TRY     
 -- INSERTING RECORDS IN PRD_SKU    
  IF OBJECT_ID('TEMPDB..#FGPROWS','U') IS NOT NULL    
  DROP TABLE #FGPROWS     
      
       
  --SELECT   ISNULL(C.PRODUCT_UID,NEWID()) AS PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE,     
  --         A.PARA2_CODE, GETDATE() AS LAST_UPDATE,     
  --         A.PURCHASE_PRICE,'0000000' AS PARA3_CODE, B.MEMO_DT AS INV_DT, MEMO_NO  AS INV_NO,     
  --         '0000000000' AS AC_CODE, B.MEMO_DT AS RECEIPT_DT,    
  --         '0000000' AS PARA4_CODE, '0000000' AS PARA5_CODE, '0000000' AS PARA6_CODE,     
  --  '0000000' AS FORM_ID, A.MRP,GETDATE() AS DT_CREATED, A.WS_PRICE,    
  --         0 AS ITEM_TAX_AMOUNT, '' AS CHALLAN_NO ,A.ROW_ID,A.MEMO_ID ,    
  --         ISNULL(B.REF_PRD_WORKORDER_MEMOID,'') AS WORK_ORDER_ID    
  --INTO #FGPROWS    
  --FROM PRD_FINISH_DET A    
  --JOIN PRD_FINISH_MST B ON A.MEMO_ID = B.MEMO_ID      
  --LEFT OUTER JOIN PRD_SKU C ON A.ARTICLE_CODE= C.ARTICLE_CODE  AND A.PARA1_CODE= C.PARA1_CODE     
  --AND A.PARA2_CODE= C.PARA2_CODE AND ISNULL(C.WORK_ORDER_ID,'') =ISNULL(B.REF_PRD_WORKORDER_MEMOID,'')    
  --WHERE B.MEMO_ID = @CPOID     
     
       
     
      
  SELECT   ISNULL(C.PRODUCT_UID,NEWID()) AS PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE,     
           A.PARA2_CODE, GETDATE() AS LAST_UPDATE,     
           A.PURCHASE_PRICE,'0000000' AS PARA3_CODE, B.MEMO_DT AS INV_DT, MEMO_NO  AS INV_NO,     
           '0000000000' AS AC_CODE, B.MEMO_DT AS RECEIPT_DT,    
           '0000000' AS PARA4_CODE, '0000000' AS PARA5_CODE, '0000000' AS PARA6_CODE,     
           '0000000' AS FORM_ID, A.MRP,GETDATE() AS DT_CREATED, A.WS_PRICE,    
           0 AS ITEM_TAX_AMOUNT, '' AS CHALLAN_NO ,A.ROW_ID,A.MEMO_ID ,    
           ISNULL(B.REF_PRD_WORKORDER_MEMOID,'') AS WORK_ORDER_ID,    
           A.ARTICLE_CODE AS COMPONENT_CODE,    
           A.PARA1_CODE AS COM_PARA1_CODE, A.PARA2_CODE AS COM_PARA2_CODE    
  INTO #FGPROWS    
  FROM PRD_FINISH_DET A    
  JOIN PRD_FINISH_MST B ON A.MEMO_ID = B.MEMO_ID      
  LEFT OUTER JOIN PRD_SKU C ON A.ARTICLE_CODE= C.ARTICLE_CODE  AND A.PARA1_CODE= C.PARA1_CODE     
  AND A.PARA2_CODE= C.PARA2_CODE AND ISNULL(C.WORK_ORDER_ID,'') =ISNULL(B.REF_PRD_WORKORDER_MEMOID,'')    
  AND A.ARTICLE_CODE= C.COMPONENT_CODE AND A.PARA1_CODE= C.COM_PARA1_CODE    
  AND A.PARA2_CODE= C.COM_PARA2_CODE  --AND A.PURCHASE_PRICE= C.PURCHASE_PRICE      
  WHERE B.MEMO_ID = @CPOID     
    
     
     UPDATE PRD_FINISH_DET SET PRODUCT_UID =  A.PRODUCT_UID     
  FROM #FGPROWS A     
  JOIN PRD_FINISH_DET B ON A.ROW_ID= B.ROW_ID     
  JOIN PRD_FINISH_MST C ON B.MEMO_ID= C.MEMO_ID     
  WHERE C.MEMO_ID= @CPOID     
     
     
     ;    
  WITH TEMP    
  AS    
  (     
   SELECT  ARTICLE_CODE,PARA1_CODE,PARA2_CODE,WORK_ORDER_ID,COMPONENT_CODE,COM_PARA1_CODE,COM_PARA2_CODE , ROW_NUMBER() OVER (PARTITION BY ARTICLE_CODE,PARA1_CODE,PARA2_CODE,WORK_ORDER_ID,    
   COMPONENT_CODE,COM_PARA1_CODE,COM_PARA2_CODE     
   ORDER BY ARTICLE_CODE,PARA1_CODE,PARA2_CODE,WORK_ORDER_ID,COMPONENT_CODE,COM_PARA1_CODE,COM_PARA2_CODE ) AS DUPLICATE    
   FROM #FGPROWS  (NOLOCK)    
  )    
  DELETE  FROM TEMP WHERE DUPLICATE>1 ;    
     
     
    
  INSERT PRD_SKU( PRODUCT_UID, ARTICLE_CODE, PARA1_CODE, PARA2_CODE, LAST_UPDATE, PURCHASE_PRICE,            
  PARA3_CODE, INV_DT, INV_NO, AC_CODE, RECEIPT_DT, PARA4_CODE, PARA5_CODE, PARA6_CODE,    
  FORM_ID, MRP, DT_CREATED, WS_PRICE, TAX_AMOUNT, CHALLAN_NO,WORK_ORDER_ID,  
  COMPONENT_CODE,COM_PARA1_CODE,COM_PARA2_CODE )    
    
  SELECT   A.PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE, A.PURCHASE_PRICE,    
  A.PARA3_CODE,     
  A.INV_DT, A.INV_NO, A.AC_CODE, A.RECEIPT_DT, A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE, A.FORM_ID, A.MRP,    
  '' AS DT_CREATED, A.WS_PRICE, A.ITEM_TAX_AMOUNT, '' AS CHALLAN_NO ,A.WORK_ORDER_ID,    
  A.COMPONENT_CODE,A.COM_PARA1_CODE,A.COM_PARA2_CODE     
  FROM #FGPROWS A    
  LEFT OUTER JOIN PRD_SKU D ON A.PRODUCT_UID = D.PRODUCT_UID     
  WHERE  D.PRODUCT_UID IS NULL    
    
   
  -- INSERTING RECORDS IN PMT FOR PO FLOOR    
  INSERT PRD_PMT (PRODUCT_UID,  QUANTITY_IN_STOCK, DEPARTMENT_ID,LAST_UPDATE )    
  SELECT DISTINCT A.PRODUCT_UID,  0 AS QUANTITY_IN_STOCK,B.DEPARTMENT_ID, GETDATE() AS LAST_UPDATE    
  FROM PRD_FINISH_DET A    
  JOIN PRD_FINISH_MST B ON A.MEMO_ID = B.MEMO_ID    
  JOIN #FGPROWS BC ON A.PRODUCT_UID = BC.PRODUCT_UID    
  LEFT OUTER JOIN PRD_PMT D ON A.PRODUCT_UID = D.PRODUCT_UID AND D.DEPARTMENT_ID = B.DEPARTMENT_ID    
  WHERE B.MEMO_ID = @CPOID    
  AND   D.PRODUCT_UID IS NULL     
    
      
      
  GOTO LAST     
        
    END TRY    
        
    BEGIN CATCH    
  SET @CERROR =  ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()      
    END CATCH     
        
     
LBLRMR:        
      
   BEGIN TRY       
 -- INSERTING RECORDS IN PRD_SKU      
  IF OBJECT_ID('TEMPDB..#RMRROWS','U') IS NOT NULL      
  DROP TABLE #RMRROWS       
      
  --SELECT   ISNULL(C.PRODUCT_UID,NEWID()) AS PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE,       
  -- A.RATE AS PURCHASE_PRICE,'0000000' AS PARA3_CODE, B.MEMO_DT AS INV_DT, MEMO_NO AS INV_NO, B.AC_CODE, B.MEMO_DT AS RECEIPT_DT,      
  -- '0000000' AS PARA4_CODE, '0000000' AS PARA5_CODE,'0000000' AS PARA6_CODE, '0000000' AS FORM_ID, A.RATE AS MRP,GETDATE() AS DT_CREATED,A.RATE AS WS_PRICE,      
  --CAST(0 AS NUMERIC(10,2)) AS ITEM_TAX_AMOUNT, '' AS CHALLAN_NO ,A.ROW_ID,A.MEMO_ID ,ISNULL(B.WORK_ORDER_ID,'') AS WORK_ORDER_ID      
  --INTO #RMRROWS       
  --FROM PRD_READY_RECEIVE_DET A      
  --JOIN PRD_READY_RECEIVE_MST B ON A.MEMO_ID = B.MEMO_ID      
  --LEFT OUTER JOIN PRD_SKU C ON A.ARTICLE_CODE= C.ARTICLE_CODE  AND A.PARA1_CODE= C.PARA1_CODE     
  --AND A.PARA2_CODE= C.PARA2_CODE AND ISNULL(C.WORK_ORDER_ID,'') =ISNULL(B.WORK_ORDER_ID,'')      
  --WHERE B.MEMO_ID = @CPOID       
      
      
  SELECT   ISNULL(C.PRODUCT_UID,NEWID()) AS PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE,       
           A.RATE AS PURCHASE_PRICE,'0000000' AS PARA3_CODE, B.MEMO_DT AS INV_DT, MEMO_NO AS INV_NO, B.AC_CODE, B.MEMO_DT AS RECEIPT_DT,      
           '0000000' AS PARA4_CODE, '0000000' AS PARA5_CODE,'0000000' AS PARA6_CODE, '0000000' AS FORM_ID, A.RATE AS MRP,GETDATE() AS DT_CREATED,A.RATE AS WS_PRICE,      
           CAST(0 AS NUMERIC(10,2)) AS ITEM_TAX_AMOUNT, '' AS CHALLAN_NO ,A.ROW_ID,A.MEMO_ID ,ISNULL(B.WORK_ORDER_ID,'') AS WORK_ORDER_ID  ,    
            A.COMPONENT_CODE,A.COM_PARA1_CODE,A.COM_PARA2_CODE     
  INTO #RMRROWS       
  FROM PRD_READY_RECEIVE_DET A      
  JOIN PRD_READY_RECEIVE_MST B ON A.MEMO_ID = B.MEMO_ID      
  LEFT OUTER JOIN PRD_SKU C ON A.ARTICLE_CODE= C.ARTICLE_CODE  AND A.PARA1_CODE= C.PARA1_CODE     
  AND A.PARA2_CODE= C.PARA2_CODE AND ISNULL(C.WORK_ORDER_ID,'') =ISNULL(B.WORK_ORDER_ID,'')     
  AND A.COMPONENT_CODE= C.COMPONENT_CODE AND A.COM_PARA1_CODE= C.COM_PARA1_CODE    
  AND A.COM_PARA2_CODE= C.COM_PARA2_CODE     
  WHERE B.MEMO_ID = @CPOID       
      
       
  UPDATE PRD_READY_RECEIVE_DET SET PRODUCT_UID =  A.PRODUCT_UID       
  FROM #RMRROWS    A JOIN PRD_READY_RECEIVE_DET B ON A.ROW_ID= B.ROW_ID       
  JOIN PRD_READY_RECEIVE_MST C ON B.MEMO_ID= C.MEMO_ID       
  WHERE C.MEMO_ID= @CPOID       
       
     
  --;      
  --WITH TEMP      
  --AS      
  --(       
  -- SELECT  ARTICLE_CODE,PARA1_CODE,PARA2_CODE,WORK_ORDER_ID, ROW_NUMBER() OVER (PARTITION BY ARTICLE_CODE,PARA1_CODE,PARA2_CODE,WORK_ORDER_ID      
  -- ORDER BY ARTICLE_CODE,PARA1_CODE,PARA2_CODE,WORK_ORDER_ID) AS DUPLICATE      
  -- FROM #RMRROWS     (NOLOCK)      
  --)      
  --DELETE  FROM TEMP WHERE DUPLICATE>1 ;      
      
  --INSERT PRD_SKU( PRODUCT_UID, ARTICLE_CODE, PARA1_CODE, PARA2_CODE, LAST_UPDATE, PURCHASE_PRICE,              
  --PARA3_CODE, INV_DT, INV_NO, AC_CODE, RECEIPT_DT, PARA4_CODE, PARA5_CODE, PARA6_CODE,      
  --FORM_ID, MRP, DT_CREATED, WS_PRICE, TAX_AMOUNT, CHALLAN_NO,WORK_ORDER_ID )      
      
  --SELECT   A.PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE, A.PURCHASE_PRICE,      
  --A.PARA3_CODE,       
  --A.INV_DT, A.INV_NO, A.AC_CODE, A.RECEIPT_DT, A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE, A.FORM_ID, A.MRP,      
  --A.DT_CREATED, A.WS_PRICE, A.ITEM_TAX_AMOUNT, '' AS CHALLAN_NO ,A.WORK_ORDER_ID      
  --FROM #RMRROWS    A      
  --LEFT OUTER JOIN PRD_SKU D ON A.PRODUCT_UID = D.PRODUCT_UID       
  --WHERE  D.PRODUCT_UID IS NULL    
      
    ;      
  WITH TEMP      
  AS      
  (       
   SELECT  ARTICLE_CODE,PARA1_CODE,PARA2_CODE,WORK_ORDER_ID,COMPONENT_CODE,COM_PARA1_CODE,COM_PARA2_CODE, ROW_NUMBER() OVER (PARTITION BY ARTICLE_CODE,PARA1_CODE,PARA2_CODE,WORK_ORDER_ID,    
   COMPONENT_CODE,COM_PARA1_CODE,COM_PARA2_CODE      
   ORDER BY ARTICLE_CODE,PARA1_CODE,PARA2_CODE,WORK_ORDER_ID,COMPONENT_CODE,COM_PARA1_CODE,COM_PARA2_CODE) AS DUPLICATE      
   FROM #RMRROWS     (NOLOCK)      
  )      
  DELETE  FROM TEMP WHERE DUPLICATE>1 ;      
      
  INSERT PRD_SKU( PRODUCT_UID, ARTICLE_CODE, PARA1_CODE, PARA2_CODE, LAST_UPDATE, PURCHASE_PRICE,              
  PARA3_CODE, INV_DT, INV_NO, AC_CODE, RECEIPT_DT, PARA4_CODE, PARA5_CODE, PARA6_CODE,      
  FORM_ID, MRP, DT_CREATED, WS_PRICE, TAX_AMOUNT, CHALLAN_NO,WORK_ORDER_ID,COMPONENT_CODE,COM_PARA1_CODE,COM_PARA2_CODE )      
      
  SELECT   A.PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE, A.PURCHASE_PRICE,      
  A.PARA3_CODE,       
  A.INV_DT, A.INV_NO, A.AC_CODE, A.RECEIPT_DT, A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE, A.FORM_ID, A.MRP,      
  '' AS DT_CREATED, A.WS_PRICE, A.ITEM_TAX_AMOUNT, '' AS CHALLAN_NO ,A.WORK_ORDER_ID, A.COMPONENT_CODE,A.COM_PARA1_CODE,A.COM_PARA2_CODE     
  FROM #RMRROWS    A      
  LEFT OUTER JOIN PRD_SKU D ON A.PRODUCT_UID = D.PRODUCT_UID       
  WHERE D.PRODUCT_UID IS NULL        
      
           
        
        
  -- INSERTING RECORDS IN PMT FOR PO FLOOR      
  INSERT PRD_PMT (PRODUCT_UID,  QUANTITY_IN_STOCK, DEPARTMENT_ID,LAST_UPDATE )      
  SELECT DISTINCT A.PRODUCT_UID,  0 AS QUANTITY_IN_STOCK,B.DEPARTMENT_ID, GETDATE() AS LAST_UPDATE      
  FROM PRD_READY_RECEIVE_DET A      
  JOIN PRD_READY_RECEIVE_MST B ON A.MEMO_ID = B.MEMO_ID      
  JOIN #RMRROWS    BC ON A.PRODUCT_UID = BC.PRODUCT_UID      
  LEFT OUTER JOIN PRD_PMT D ON A.PRODUCT_UID = D.PRODUCT_UID AND D.DEPARTMENT_ID = B.DEPARTMENT_ID      
  WHERE B.MEMO_ID = @CPOID      
  AND   D.PRODUCT_UID IS NULL       
      
        
        
  GOTO LAST       
          
    END TRY      
          
    BEGIN CATCH      
  SET @CERROR =  ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()        
    END CATCH       


 LBLPRDJWR:
 
 BEGIN TRY     
   --INSERTING RECORDS IN PRD_SKU    
  
  SET @CNEWPREFIX=''
  IF OBJECT_ID('TEMPDB..#JWRROWS','U') IS NOT NULL    
	 DROP TABLE #JWRROWS    
	  
  SELECT TOP 1  @CLOCID=VALUE  FROM CONFIG WHERE CONFIG_OPTION   ='LOCATION_ID'  
  SET @CADDLOCIDPREFIX =@CLOCID  
         
  SET  @CPREFIX = LTRIM(RTRIM(ISNULL(@CADDLOCIDPREFIX,'')))    
  
  SELECT   CASE WHEN ISNULL(B.PRODUCT_UID,'')='' THEN  NEWID() ELSE B.PRODUCT_UID END AS PRODUCT_UID, E.ARTICLE_CODE,
           B.PARA1_CODE, B.PARA2_CODE, GETDATE() AS LAST_UPDATE,     
           SKU.PURCHASE_PRICE +ISNULL(B.JOB_RATE,0) AS PURCHASE_PRICE,B.PARA3_CODE, A.RECEIPT_DT AS INV_DT, RECEIPT_NO AS INV_NO, SKU.AC_CODE, A.RECEIPT_DT AS RECEIPT_DT,    
           B.PARA4_CODE, B.PARA5_CODE, B.PARA6_CODE, SKU.FORM_ID, SKU.MRP,GETDATE() AS DT_CREATED, SKU.WS_PRICE,    
           0 AS ITEM_TAX_AMOUNT, '' AS CHALLAN_NO , B.ROW_ID,A.RECEIPT_ID  ,'' AS WORK_ORDER_ID,    
           '' AS COMPONENT_CODE,'' AS COM_PARA1_CODE,'' AS COM_PARA2_CODE,E.GENERATE_BARCODES_WITHARTICLE_PREFIX ,E.ARTICLE_NO,
           CODING_SCHEME,B.PRODUCT_CODE,B.ROW_ID  AS REC_ROW_ID,
           B.PRODUCT_UID  AS ORG_PRODUCT_UID  
  INTO #JWRROWS    
  FROM PRD_JOBWORK_RECEIPT_DET B   
  JOIN PRD_JOBWORK_RECEIPT_MST A ON A.RECEIPT_ID=B.RECEIPT_ID  
  JOIN PRD_JOBWORK_ISSUE_DET C ON C.ROW_ID=B.REF_ROW_ID  
  JOIN PRD_JOBWORK_ISSUE_MST D ON D.ISSUE_ID=C.ISSUE_ID  
  JOIN PRD_SKU SKU ON C.PRODUCT_CODE = SKU.PRODUCT_CODE  
  JOIN ARTICLE E ON SKU.ARTICLE_CODE = E.ARTICLE_CODE  
  WHERE B.RECEIPT_ID = @CPOID  --AND ISNULL(B.PRODUCT_UID,'')=''  
  
  
   --ALTER TABLE   #PODROWS   ADD PRODUCT_CODE VARCHAR(100)  
  UPDATE A SET PRODUCT_CODE=B.PRODUCT_CODE FROM  #JWRROWS A
  JOIN PRD_SKU B ON A.ARTICLE_CODE=B.ARTICLE_CODE
  WHERE CODING_SCHEME=1  AND ISNULL(A.PRODUCT_CODE,'')=''         
  SET @NROWS = @@ROWCOUNT       
  
 
  IF OBJECT_ID('TEMPDB..#TMP_JWR_ARTICLE','U') IS NOT NULL    
		DROP TABLE #TMP_JWR_ARTICLE  
  SELECT  ARTICLE_NO INTO #TMP_JWR_ARTICLE FROM #JWRROWS  
  WHERE GENERATE_BARCODES_WITHARTICLE_PREFIX=1 AND ISNULL(PRODUCT_CODE,'')=''
  
  

  WHILE EXISTS (SELECT TOP 1 'U' FROM #TMP_JWR_ARTICLE)
  BEGIN
   SELECT TOP 1 @CARTICLE_NO=ARTICLE_NO FROM #TMP_JWR_ARTICLE
   SET @CNEWPREFIX  =''
   SET @CARTICLEPREFIX=''
   SET @CARTICLEPREFIX=@CARTICLE_NO+'-'
   SET @CNEWPREFIX=@CPREFIX+@CARTICLEPREFIX
   EXEC GETNEXTKEY 'PRD_SKU', 'PRODUCT_CODE', 50, @CNEWPREFIX, 0, '', @NROWS,@CNEXTPRODUCTCODE OUTPUT   
   SET @NNEXTKEYVALUE = CONVERT(NUMERIC(30,0),RIGHT(LTRIM(RTRIM(@CNEXTPRODUCTCODE)),LEN(@CNEXTPRODUCTCODE)-LEN(@CNEWPREFIX)))      
         
  --PREFIC GENERATE WITH ARTICLE PREFIN     
  DECLARE PRDJWR CURSOR FOR SELECT  PRODUCT_UID,GENERATE_BARCODES_WITHARTICLE_PREFIX,ARTICLE_NO FROM #JWRROWS  
  WHERE GENERATE_BARCODES_WITHARTICLE_PREFIX=1 AND ISNULL(PRODUCT_CODE,'')='' AND ARTICLE_NO=@CARTICLE_NO
   OPEN PRDJWR   
   FETCH NEXT FROM PRDJWR INTO @PRDD,@NWITHARTICLE ,@CARTICLE_NO      
    WHILE @@FETCH_STATUS=0  
    BEGIN  
       
    SET @CNEXTPRODUCTCODE = @CNEWPREFIX+LTRIM(RTRIM(CONVERT(VARCHAR(40),@NNEXTKEYVALUE)))         
    UPDATE #JWRROWS SET PRODUCT_CODE = @CNEXTPRODUCTCODE WHERE PRODUCT_UID = @PRDD     
    SET @NNEXTKEYVALUE = @NNEXTKEYVALUE + 1     
       
    FETCH NEXT FROM PRDJWR INTO @PRDD ,@NWITHARTICLE ,@CARTICLE_NO    
    END  
  CLOSE PRDJWR   
  DEALLOCATE PRDJWR  
  
  UPDATE KEYS_PMT SET       
 LASTKEYVAL = LTRIM(RTRIM(@CNEXTPRODUCTCODE))       
 WHERE TABLENAME = 'PRD_SKU'      
 AND COLUMNNAME = 'PRODUCT_CODE'      
 AND FINYEAR  = ''      
 AND PREFIX  =@CNEWPREFIX    
 
  DELETE FROM #TMP_JWR_ARTICLE WHERE ARTICLE_NO =@CARTICLE_NO
 END 
 
   
--FOR  WITHOUT ARTICLE    

  SELECT @NBARCODEWTPREFIX=COUNT(PRODUCT_UID) FROM #JWRROWS  
  WHERE GENERATE_BARCODES_WITHARTICLE_PREFIX<>1   AND ISNULL(PRODUCT_CODE,'')='' 
  SET @NROWS = @@ROWCOUNT   
IF ISNULL(@NBARCODEWTPREFIX,0)>0
BEGIN   
  EXEC GETNEXTKEY 'PRD_SKU', 'PRODUCT_CODE', 50, @CPREFIX, 0, '', @NROWS,@CNEXTPRODUCTCODE OUTPUT       
  SET @NNEXTKEYVALUE = CONVERT(NUMERIC(30,0),RIGHT(LTRIM(RTRIM(@CNEXTPRODUCTCODE)),LEN(@CNEXTPRODUCTCODE)-LEN(@CPREFIX)))      
       
  DECLARE PRDJWR1 CURSOR FOR SELECT  PRODUCT_UID FROM #JWRROWS  
  WHERE GENERATE_BARCODES_WITHARTICLE_PREFIX<>1   AND ISNULL(PRODUCT_CODE,'')='' 
  OPEN PRDJWR1   
  FETCH NEXT FROM PRDJWR1 INTO @PRDD     
  WHILE @@FETCH_STATUS=0  
  BEGIN  
    SET @CNEXTPRODUCTCODE = @CPREFIX+LTRIM(RTRIM(CONVERT(VARCHAR(40),@NNEXTKEYVALUE)))         
    UPDATE #JWRROWS SET PRODUCT_CODE = @CNEXTPRODUCTCODE WHERE PRODUCT_UID = @PRDD     
    SET @NNEXTKEYVALUE = @NNEXTKEYVALUE + 1     
     --PRINT @NNEXTKEYVALUE         
 FETCH NEXT FROM PRDJWR1 INTO @PRDD     
 END  
 CLOSE PRDJWR1   
 DEALLOCATE PRDJWR1  
     
 UPDATE KEYS_PMT SET       
 LASTKEYVAL = LTRIM(RTRIM(@CNEXTPRODUCTCODE))       
 WHERE TABLENAME = 'PRD_SKU'      
 AND COLUMNNAME = 'PRODUCT_CODE'      
 AND FINYEAR  = ''      
 AND PREFIX  = @CPREFIX        
END    
  
  
  
  UPDATE PRD_JOBWORK_RECEIPT_DET SET PRODUCT_UID =  A.PRODUCT_UID ,
  PRODUCT_CODE=CASE WHEN ISNULL(B.PRODUCT_CODE,'')='' THEN A.PRODUCT_CODE ELSE  B.PRODUCT_CODE END   
  FROM #JWRROWS A  
  JOIN PRD_JOBWORK_RECEIPT_DET B ON A.ROW_ID =B.ROW_ID  
  WHERE B.RECEIPT_ID= @CPOID   --AND ISNULL(B.PRODUCT_CODE,'')=''   
  
  
  DELETE A FROM PRD_PMT  A
  JOIN #JWRROWS B ON A.PRODUCT_UID=B.ORG_PRODUCT_UID 
  
  --IN CASE OF EDIT MODE DELETE PREVIOUS AND AGAIN INSERT
  DELETE A FROM PRD_SKU  A
  JOIN #JWRROWS B ON A.PRODUCT_UID=B.ORG_PRODUCT_UID 
  
  
  
  
  INSERT PRD_SKU( PRODUCT_UID, ARTICLE_CODE, PARA1_CODE, PARA2_CODE, LAST_UPDATE, PURCHASE_PRICE,            
  PARA3_CODE, INV_DT, INV_NO, AC_CODE, RECEIPT_DT, PARA4_CODE, PARA5_CODE, PARA6_CODE,    
  FORM_ID, MRP, DT_CREATED, WS_PRICE, TAX_AMOUNT, CHALLAN_NO,WORK_ORDER_ID,COMPONENT_CODE,  
  COM_PARA1_CODE,COM_PARA2_CODE,PRODUCT_CODE )    
    
  SELECT   A.PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE, A.PURCHASE_PRICE,    
  A.PARA3_CODE,     
  A.INV_DT, A.INV_NO, A.AC_CODE, A.RECEIPT_DT, A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE, A.FORM_ID, A.MRP,    
  '' AS DT_CREATED, A.WS_PRICE, A.ITEM_TAX_AMOUNT, '' AS CHALLAN_NO ,A.WORK_ORDER_ID,    
  A.COMPONENT_CODE,A.COM_PARA1_CODE,A.COM_PARA2_CODE,A.PRODUCT_CODE    
  FROM #JWRROWS A    
  LEFT OUTER JOIN PRD_SKU D ON A.PRODUCT_UID = D.PRODUCT_UID     
  WHERE  D.PRODUCT_UID IS NULL    
 
 
  -- INSERTING RECORDS IN PMT FOR PO FLOOR    
  INSERT PRD_PMT (PRODUCT_UID,  QUANTITY_IN_STOCK, DEPARTMENT_ID,LAST_UPDATE ,PRODUCT_CODE)    
  SELECT DISTINCT A.PRODUCT_UID,  0 AS QUANTITY_IN_STOCK,B.DEPARTMENT_ID, GETDATE() AS LAST_UPDATE ,BC.PRODUCT_CODE   
  FROM PRD_JOBWORK_RECEIPT_DET A    
  JOIN PRD_JOBWORK_RECEIPT_MST B ON A.RECEIPT_ID = B.RECEIPT_ID    
  JOIN #JWRROWS BC ON A.PRODUCT_UID = BC.PRODUCT_UID    
  LEFT OUTER JOIN PRD_PMT D ON A.PRODUCT_UID = D.PRODUCT_UID AND D.DEPARTMENT_ID = B.DEPARTMENT_ID    
  WHERE B.RECEIPT_ID = @CPOID    
  AND   D.PRODUCT_UID IS NULL     
  
  
     
  GOTO LAST     
    END TRY    
    BEGIN CATCH    
  SET @CERROR =  ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()      
    END CATCH     
    
  GOTO LAST    
  
  
  
  LBLXREC:      
    
   BEGIN TRY     
 -- INSERTING RECORDS IN PRD_SKU    
      
       
  
       IF OBJECT_ID('TEMPDB..#XRECROWS','U') IS NOT NULL    
             DROP TABLE #XRECROWS    
       
   
       
   SELECT CAST(NEWID() AS VARCHAR(100)) AS PRODUCT_UID, S.ARTICLE_CODE, S.PARA1_CODE, S.PARA2_CODE,     
   GETDATE() AS LAST_UPDATE,     
   S.PURCHASE_PRICE,S.PARA3_CODE,  MST.MEMO_DT AS INV_DT, MST.MEMO_NO AS INV_NO, S.AC_CODE,  MST.MEMO_DT AS RECEIPT_DT,    
   S.PARA4_CODE, S.PARA5_CODE, S.PARA6_CODE, S.FORM_ID, S.MRP,GETDATE() AS DT_CREATED, S.WS_PRICE,    
   S.TAX_AMOUNT, '' AS CHALLAN_NO ,DET.ROW_ID,MST.MEMO_ID ,ISNULL(DET.REF_WO_ID,'') AS WORK_ORDER_ID,    
   DET.COMPONENT_CODE,DET.COM_PARA1_CODE ,DET.COM_PARA2_CODE,S.PRODUCT_CODE    
   INTO #XRECROWS    
   FROM PRD_STK_RECEIVE_DET DET    
   JOIN PRD_STK_RECEIVE_MST MST ON DET.MEMO_ID = MST.MEMO_ID     
   JOIN PRD_SKU S ON DET.PRODUCT_UID = S.PRODUCT_UID     
   WHERE MST.MEMO_ID =  @CPOID    
   
   
 
   UPDATE B SET NEW_PRODUCT_UID =  A.PRODUCT_UID     
   FROM #XRECROWS A
   JOIN PRD_STK_RECEIVE_DET B ON A.ROW_ID= B.ROW_ID     
   JOIN PRD_STK_RECEIVE_MST C ON B.MEMO_ID= C.MEMO_ID     
   WHERE C.MEMO_ID= @CPOID 
   AND ISNULL(B.NEW_PRODUCT_UID,'')='LATER'    
   
       
   INSERT PRD_SKU( PRODUCT_UID, ARTICLE_CODE, PARA1_CODE, PARA2_CODE, LAST_UPDATE, PURCHASE_PRICE,            
   PARA3_CODE, INV_DT, INV_NO, AC_CODE, RECEIPT_DT, PARA4_CODE, PARA5_CODE, PARA6_CODE,    
   FORM_ID, MRP, DT_CREATED, WS_PRICE, TAX_AMOUNT, CHALLAN_NO,WORK_ORDER_ID,    
   COMPONENT_CODE, COM_PARA1_CODE,COM_PARA2_CODE,PRODUCT_CODE )    
    
   SELECT   A.PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE, A.PURCHASE_PRICE,    
   A.PARA3_CODE,     
   A.INV_DT, A.INV_NO, A.AC_CODE, A.RECEIPT_DT, A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE, A.FORM_ID, A.MRP,    
   '' AS DT_CREATED, A.WS_PRICE, A.TAX_AMOUNT, '' AS CHALLAN_NO ,'' AS WORK_ORDER_ID,    
   '' AS COMPONENT_CODE,'' AS COM_PARA1_CODE ,'' AS COM_PARA2_CODE,A.PRODUCT_CODE       
   FROM #XRECROWS A    
   LEFT OUTER JOIN PRD_SKU D ON A.PRODUCT_UID = D.PRODUCT_UID     
   WHERE  D.PRODUCT_UID IS NULL    
   
  
    
   INSERT PRD_PMT (PRODUCT_UID,  QUANTITY_IN_STOCK, DEPARTMENT_ID,LAST_UPDATE,PRODUCT_CODE  )    
   SELECT DISTINCT A.NEW_PRODUCT_UID,  0 AS QUANTITY_IN_STOCK,B.TARGET_DEPARTMENT_ID, GETDATE() AS LAST_UPDATE ,
   BC.PRODUCT_CODE   
   FROM PRD_STK_RECEIVE_DET A    
   JOIN PRD_STK_RECEIVE_MST B ON A.MEMO_ID = B.MEMO_ID    
   JOIN #XRECROWS BC ON A.NEW_PRODUCT_UID = BC.PRODUCT_UID    
   LEFT OUTER JOIN PRD_PMT D ON A.NEW_PRODUCT_UID = D.PRODUCT_UID AND D.DEPARTMENT_ID = B.TARGET_DEPARTMENT_ID    
   WHERE B.MEMO_ID = @CPOID    
   AND   D.PRODUCT_UID IS NULL      
     
     
  GOTO LAST     
        
    END TRY    
        
    BEGIN CATCH    
     SET @CERROR =  ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()      
    END CATCH     
           
    
LAST:       
    
END
