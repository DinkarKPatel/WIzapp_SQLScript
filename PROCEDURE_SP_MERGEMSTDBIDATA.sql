create PROCEDURE SP_MERGEMSTDBIDATA  
(  
 @NSPID INT  
)  
--WITH ENCRYPTION
AS  
BEGIN  
   
  --(dinkar) Replace  left(memoid,2) to Location_code 
	  DECLARE @CERRORMSG VARCHAR(1000),@CCURDEPTID CHAR(4),@CHODEPTID CHAR(4),@CCMD NVARCHAR(MAX),  
		@CXNMASTERTABLENAME VARCHAR(100),@BPROCEED BIT,@CTABLENAME VARCHAR(100),@CMASTERKEYFIELD VARCHAR(100),  
		@CKEYFIELD VARCHAR(100),@CPARENTTABLENAME VARCHAR(100),@CPARENTPARANAME VARCHAR(100),@CCHILDPARANAME VARCHAR(100),  
		@CWHERECLAUSE VARCHAR(100),@CJOINSTR VARCHAR(1000),@CMEMOID VARCHAR(100),@CFINYEAR VARCHAR(100),  
		@NGRPCHARS INT,@NSERIESCHARS INT,@BSERIESBROKEN BIT,@CPREVMEMOID VARCHAR(40),@CMERGETABLENAME VARCHAR(50),  
		@CFIRSTMEMOID VARCHAR(40),@NPREVMEMOID INT,@NMEMONOLEN INT,@CRETCMD NVARCHAR(MAX),  
		@CDELCHILDTABLENAME VARCHAR(100),@CDELCHILDPARANAME VARCHAR(100),@CDELPARENTPARANAME VARCHAR(100),  
		@CORIGINALTABLENAME VARCHAR(100),@NLOCTYPE INT,@BDONOTMERGE BIT,@CRFXNTYPE VARCHAR(10),@BHOLOC BIT,  
		@BINSERTONLY BIT,@BLINKEDMASTER BIT,@BPURLOC BIT,@CSOURCELOCID CHAR(2),@BSOURCEPURLOC BIT,  
		@CMISSINGMEMOID VARCHAR(40),@CGRPCODE VARCHAR(20),@BRETVAL BIT,@NPREVNO INT,@CPREVNO VARCHAR(20),  
		@BEMPHEADSUPDATED BIT,@CFILTERCONDITION VARCHAR(100),@CTABLEPREFIX VARCHAR(100),@CXNTYPE VARCHAR(10),  
		@BUPDPURINFO BIT,@CUNQCOLUMNNAME1 VARCHAR(100),@CUNQCOLUMNNAME2 VARCHAR(100),@NXNSMERGINGORDER INT,  
		@BLOCDATAEXISTS BIT,@NSTEP INT,@CTEMPLMTABLE VARCHAR(100),@CTEMPHDTABLE VARCHAR(100),@CTEMPREGIONTABLE VARCHAR(100),
		@CTEMPAREATABLE VARCHAR(100),@CTEMPCITYTABLE VARCHAR(100),@CTEMPSTATETABLE VARCHAR(100),@CSTATECODE CHAR(7),
		@CTEMPLMPTABLE VARCHAR(100),@CTEMPSMTABLE VARCHAR(100),@CTEMPSDTABLE VARCHAR(100),@CTEMPLOCTABLE VARCHAR(100),
		@CSOURCETEMPTABLE VARCHAR(200)				  
	    
	   
	    
	  BEGIN TRANSACTION  
	    
	  SET @NSTEP = 10  
	  DECLARE @TRETMSG TABLE  (MEMO_ID VARCHAR(40),ERRMSG VARCHAR(MAX))  
	   
	  BEGIN TRY  
	       
	  SELECT @CERRORMSG='',@BPROCEED=1,@NMEMONOLEN=10,@CRETCMD='',@CMEMOID='',@CXNTYPE='MSTDBI',@BEMPHEADSUPDATED=0  
	    
	  SET @CTABLEPREFIX='TMP_MSTDBI' 
	     
	    
	  SET @NSTEP = 20  
	    
	  SET @CCMD=N'IF OBJECT_ID(''TMP_MSTDBI_LOC_MIS_INFO_'+LTRIM(RTRIM(STR(@NSPID)))+''',''U'') IS NOT NULL  
				   	  SELECT @BLOCDATAEXISTSOUT=1   
				  ELSE  
					  SELECT @BLOCDATAEXISTSOUT=0'  
	  EXEC SP_EXECUTESQL @CCMD,N'@BLOCDATAEXISTSOUT BIT OUTPUT',@BLOCDATAEXISTSOUT=@BLOCDATAEXISTS OUTPUT  
	    
	  IF @BLOCDATAEXISTS=0  
	  BEGIN  
	   SET @NSTEP = 23  
	     
	   SET @CERRORMSG='NO MIS DATA FOUND TO BE MERGED'  
	   GOTO LBLLAST  
	  END  
	    
	  SET @NSTEP = 26  
	           
	  SELECT @CCURDEPTID = VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='LOCATION_ID'  
	  SELECT @CHODEPTID = VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='HO_LOCATION_ID'    
	    
	  IF @CCURDEPTID=@CHODEPTID  
	   SET @BHOLOC=1  
	    
	  SET @NSTEP = 30    
	    
	  SELECT @NLOCTYPE=LOC_TYPE,@BPURLOC=PUR_LOC FROM LOCATION (NOLOCK) WHERE DEPT_ID=@CCURDEPTID  
	    
	      
	  SELECT TOP 1 @CXNMASTERTABLENAME=TABLENAME,@CMASTERKEYFIELD=KEYFIELD FROM XNSINFO (NOLOCK) WHERE XN_TYPE=@CXNTYPE  
	  AND XNS_MERGING_ORDER NOT IN (0,99)  ORDER BY XNS_SENDING_ORDER  
	    
	  SET @NSTEP = 40  
	    
	  SET @CXNMASTERTABLENAME=ISNULL(@CXNMASTERTABLENAME,'')  
	    
	  SET @CMEMOID='MSTDBI'  
	    

LBLDELENTRIES:	
	  
	 SET @NSTEP = 178
	  	    
	 DELETE FROM LOC_SALE_TARGET
	 DELETE FROM LOC_MIS_INFO
	 	  
	 IF ISNULL(@CERRORMSG,'')<>''
		GOTO LBLLAST
			
LBLMERGE:  
	    
	  SET @CFILTERCONDITION=''
	    
	  SET @NSTEP = 195  
	  
	  IF CURSOR_STATUS('GLOBAL','MERGECUR') IN (0,1)  
	  BEGIN  
	   CLOSE MERGECUR  
	   DEALLOCATE MERGECUR  
	  END  
	    
	  --- NOW, UPDATE TRANSACTIONS DATA ONE BY ONE  
	  DECLARE MERGECUR CURSOR FOR   
	  SELECT DISTINCT TABLENAME, KEYFIELD,XNS_MERGING_ORDER  
	  FROM XNSINFO (NOLOCK)   
	  WHERE XN_TYPE = @CXNTYPE   
	  AND   XNS_MERGING_ORDER <> 99  
	  ORDER BY XNS_MERGING_ORDER  
	    
	  OPEN MERGECUR  
	  FETCH NEXT FROM MERGECUR INTO @CTABLENAME,@CKEYFIELD,@NXNSMERGINGORDER  
	  WHILE @@FETCH_STATUS=0  
	  BEGIN  
	     
	   SET @NSTEP = 200
	     
	   LBLSTARTMERGE:  
	   SET @BPROCEED=1  
	     
	   SET @CCMD=N'IF NOT EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME=''TMP_' + @CXNTYPE + '_' + @CTABLENAME + '_' + LTRIM(RTRIM(STR(@NSPID)))+''')  
		   SET @BPROCEEDOUT=0'  
	     
	   PRINT @CCMD  
	   EXEC SP_EXECUTESQL @CCMD,N'@BPROCEEDOUT BIT OUTPUT',@BPROCEEDOUT=@BPROCEED OUTPUT  
	     
	   SET @NSTEP = 210  
	     
	   IF @BPROCEED=0  
		GOTO LBLMERGENEXT  
	     
	     
	   SET @NSTEP = 220   
	   
	   SET @CSOURCETEMPTABLE='TMP_' + @CXNTYPE + '_' + @CTABLENAME + '_' + LTRIM(RTRIM(STR(@NSPID)))
	     
		EXEC UPDATEMASTERXN_MERGING
		@CSOURCEDB='',
		@CSOURCETABLE=@CSOURCETEMPTABLE,
		@CDESTDB='',
		@CDESTTABLE=@CTABLENAME,
		@CKEYFIELD1=@CKEYFIELD ,
		@CKEYFIELD2='',
		@CKEYFIELD3='',
		@LINSERTONLY=1,
		@LUPDATEONLY=0,
		@BALWAYSUPDATE=0,
		@CFILTERCONDITION=@CFILTERCONDITION,
		@CERRORMSG = @CERRORMSG OUTPUT 
	   
	   SET @NSTEP = 240
	   
	   IF @CERRORMSG<>''  
		BREAK  
	       
	   LBLMERGENEXT:  
	     
	   FETCH NEXT FROM MERGECUR INTO @CTABLENAME,@CKEYFIELD,@NXNSMERGINGORDER  
	  END  
	  CLOSE MERGECUR  
	  DEALLOCATE MERGECUR  
	   
	 END TRY  
	  
	 BEGIN CATCH  
	    
		  PRINT 'UNTRAPPED ERROR'    
		       
		  DECLARE @CERRORPROCNAME VARCHAR(100),@CLINENO VARCHAR(5),@CERRTEXT VARCHAR(MAX)  
		    
		  SELECT @CERRORPROCNAME=ISNULL(ERROR_PROCEDURE(),'NULL P'),@CLINENO=ISNULL(LTRIM(RTRIM(STR(ERROR_LINE()))),'NULL LINE'),  
		  @CERRTEXT='STEP : '+LTRIM(RTRIM(STR(@NSTEP)))+' '+ISNULL(ERROR_MESSAGE(),'NULL MSG')  
		    
		    
		  SELECT @CERRORMSG=@CERRTEXT  
		  
		  GOTO LBLLAST 		    
	     
	 END CATCH  
	  

  
LBLLAST:	
	 
	 IF @@TRANCOUNT>0  
	 BEGIN  
		IF ISNULL(@CERRORMSG,'')=''
		   COMMIT TRANSACTION  
		ELSE
		   ROLLBACK      
	 END   
	  
	 EXEC SP_DROPTEMPTABLES_XNS @CXNTYPE,@NSPID,'','TMP_MSTDBI'       
	 
	   
	 INSERT @TRETMSG  
	 SELECT 'MSTDBI' AS MEMO_ID,@CERRORMSG  
	    
	 SELECT * FROM @TRETMSG  
	 
END  
--- 'END OF CREATING PROCEDURE SP_MERGEMSTDBIDATA'
