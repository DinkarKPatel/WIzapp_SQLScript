-- PROCEDURE TO SAVE A TRANSACTION APPROVAL MEMO 
CREATE PROCEDURE SAVETRAN_XNSAPPROVAL
(
	@NUPDATEMODE		NUMERIC(1,0),
	@NSPID				INT,
	@CMEMONOPREFIX		VARCHAR(50),
	@CFINYEAR			VARCHAR(10),
	@CMACHINENAME		VARCHAR(100)='',
	@CWINDOWUSERNAME	VARCHAR(100)='',
	@CWIZAPPUSERCODE	VARCHAR(10)='0000000',
	@CMEMOID			VARCHAR(40)=''
	
)
--WITH ENCRYPTION
AS
BEGIN
--changes by Dinkar in location id varchar(4)..
	-- @NUPDATEMODE:	1- NEW MEMO ADDED, 
	--					2- EXISTING MEMO EDITED, 
	
	DECLARE @CTEMPDBNAME			VARCHAR(100),
			@CMASTERTABLENAME		VARCHAR(100),
			@CDETAILTABLENAME		VARCHAR(100),
			@CTEMPMASTERTABLENAME	VARCHAR(1000),
			@CTEMPDETAILTABLENAME	VARCHAR(1000),
			@CTEMPMASTERTABLE		VARCHAR(1000),
			@CTEMPDETAILTABLE		VARCHAR(1000),
			@CERRORMSG				VARCHAR(500),
			@CKEYFIELD1				VARCHAR(50),
			@CKEYFIELDVAL1			VARCHAR(50),
			@CKEYFIELD1_DETAIL2		VARCHAR(50),
			@CMEMONO				VARCHAR(20),
			@NMEMONOLEN				NUMERIC(20,0),
			@CMEMONOVAL				VARCHAR(50),
			@CMEMODEPTID			VARCHAR(4),
			@CLOCATIONID			VARCHAR(4),
			@CHODEPTID				VARCHAR(4),
			@CCMD					NVARCHAR(4000),
			@CCMDOUTPUT				NVARCHAR(4000),
			@NSAVETRANLOOP			BIT,
			@NSTEP					INT,
			@BNEGSTOCKFOUND			BIT,
			@CVALUSERARC			CHAR(4),
			@ARCTYPE                INT,
			@ARCT                   INT,
			@CMEMODT                DATETIME	,@NLEVELNO NUMERIC(2,0),@BINVALIDENTRYFOUND BIT
			,@CXNTYPE VARCHAR(20)
			,@CREFXNTYPE VARCHAR(20)
			,@ICURRENTLEVEL INT
			,@IMAXLEVEL INT
			,@CLOCID				VARCHAR(4)

	DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))

	SET @NSTEP = 0		-- SETTTING UP ENVIRONMENT

	-- TEMPORARY DATABASE Discarded now onwards as per Meeting on 30-10-2020 mentioned in Client issues List
	SET @CTEMPDBNAME = ''
		
	SET @CMASTERTABLENAME	= 'XN_APPROVAL_DONE_MST'
	SET @CDETAILTABLENAME	= 'XN_APPROVAL_DONE_DET'

	SET @CTEMPMASTERTABLENAME	= 'TEMP_XN_APPROVAL_DONE_MST_'+LTRIM(RTRIM(STR(@NSPID)))
	SET @CTEMPDETAILTABLENAME	= 'TEMP_XN_APPROVAL_DONE_DET_'+LTRIM(RTRIM(STR(@NSPID)))

	SET @CTEMPMASTERTABLE	= @CTEMPDBNAME + @CTEMPMASTERTABLENAME
	SET @CTEMPDETAILTABLE	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME
	
	SET @CERRORMSG			= ''
	--SET @LDONOTUPDATESTOCK	= 0
	SET @CKEYFIELD1			= 'MEMO_ID'

	SET @CMEMONO			= 'MEMO_NO'
	SET @NMEMONOLEN			= 10
	
	SET @BNEGSTOCKFOUND = 0
	
	SET @CCMD = 'SELECT @CLOCID = location_code  FROM '+@CTEMPMASTERTABLE
	EXEC SP_EXECUTESQL @CCMD, N'@CLOCID VARCHAR(4) OUTPUT', @CLOCID OUTPUT
    
	
	IF ISNULL(@CLOCID,'')=''	
		SELECT @CLOCATIONID		= DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID
	ELSE
		SET @CLOCATIONID=@CLOCID
		
	SELECT @CHODEPTID		= [VALUE] FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'		

	SET @NSTEP = 10		-- GETTING DEPTID INFO FROM TEMP TABLE
	BEGIN TRY
		
		BEGIN TRANSACTION		
		
		 IF ISNULL(@CLOCATIONID,'')=''
		 BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' LOCATION ID CAN NOT BE BLANK  '  
			GOTO END_PROC    
		 END	
		
				
		EXEC SP_VALIDATEXN_BEFORESAVE 'XNSAPPROVAL',@NSPID,'0000000',@NUPDATEMODE,@CCMDOUTPUT OUTPUT,@BNEGSTOCKFOUND OUTPUT
		IF ISNULL(@CCMDOUTPUT,'') <> ''
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' DATA VALIDATION ON TEMP DATA FAILED : ' + @CCMDOUTPUT + '...'
			GOTO END_PROC
		END
		
		SET @NSTEP = 15
		
		SET @CCMD=N'DELETE FROM '+@CTEMPDETAILTABLE+' WHERE APPROVAL_STATUS NOT IN (2,3)'
		EXEC SP_EXECUTESQL @CCMD
		
		SET @NSTEP=19
		SET @CCMD=N'SELECT @CXNTYPE=XN_TYPE,@ICURRENTLEVEL=LEVEL_NO FROM '+@CTEMPMASTERTABLE
		EXEC SP_EXECUTESQL @CCMD,N'@CXNTYPE VARCHAR(20) OUTPUT,@ICURRENTLEVEL INT OUTPUT'
			,@CXNTYPE OUTPUT,@ICURRENTLEVEL OUTPUT
		
		SET @NSTEP=20
		--GET THE REFXNTYPE FROM TEMPDETAIL TABLE
		SET @CCMD=N'SELECT TOP 1 @CREFXNTYPE=REFXNTYPE FROM '+@CTEMPDETAILTABLE
		EXEC SP_EXECUTESQL @CCMD,N'@CREFXNTYPE VARCHAR(20) OUTPUT',@CREFXNTYPE OUTPUT
		
		SELECT @IMAXLEVEL=MAX(LEVEL_NO)
			 FROM XN_APPROVAL_CHECKLIST_LEVELS
			  WHERE XN_TYPE=@CXNTYPE AND INACTIVE=0
		
		IF @CXNTYPE='PUR'
		BEGIN
			--GET THE REFXNTYPE
			SET @NSTEP = 21
			IF OBJECT_ID('TEMPDB..#TMPINVALID','U') IS NOT NULL
				DROP TABLE #TMPINVALID
			
			SELECT MRR_NO INTO 	#TMPINVALID FROM PIM01106 WHERE 1=2
			
			SET @CCMD=N'SELECT B.MRR_NO FROM '+@CTEMPDETAILTABLE+' A JOIN PIM01106 B ON A.REF_XN_ID=B.MRR_ID
						WHERE INV_MODE=2 AND A.REFXNTYPE=''PUR'''
					
			INSERT #TMPINVALID
			EXEC SP_EXECUTESQL @CCMD
			
			IF EXISTS (SELECT TOP 1 * FROM #TMPINVALID)
			BEGIN
				SET @NSTEP = 30
				SELECT MRR_NO AS PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,'FOLLOWING MRR(S) ARE GROUP PURCHASE INVOICES WHICH DO NOT NEED APPROVAL' AS ERRMSG FROM #TMPINVALID	
				
				SET @BINVALIDENTRYFOUND=1
				
				GOTO END_PROC
			END			 

			SET @NSTEP = 35
			SET @CCMD=N'SELECT B.MRR_NO FROM '+@CTEMPDETAILTABLE+' A 
						JOIN PIM01106 B ON A.REF_XN_ID=B.MRR_ID
						JOIN '+@CTEMPMASTERTABLE+' C ON C.MEMO_ID=A.MEMO_ID
						JOIN XN_APPROVAL_DONE_DET D ON D.REF_XN_ID=A.REF_XN_ID
						JOIN XN_APPROVAL_DONE_MST E ON E.MEMO_ID=D.MEMO_ID AND E.LEVEL_NO=C.LEVEL_NO
						WHERE E.MEMO_ID<>A.MEMO_ID AND D.REFXNTYPE=''PUR'''
			
			INSERT #TMPINVALID
			EXEC SP_EXECUTESQL @CCMD
			
			IF EXISTS(SELECT TOP 1 * FROM #TMPINVALID)
			BEGIN
				SET @NSTEP = 40
				SELECT MRR_NO AS PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,'FOLLOWING MRR(S) ARE ALREADY MARKED AS APPROVED' AS ERRMSG FROM #TMPINVALID	
				
				SET @BINVALIDENTRYFOUND=1
				
				GOTO END_PROC
			END
					
			/*UPDATE APPROVAL_LEVELNO*/			 
			IF @CREFXNTYPE='PUR'
			SET @CCMD=N'UPDATE A 
								SET APPROVEDLEVELNO=(CASE WHEN 
														'+LTRIM(RTRIM(STR(@ICURRENTLEVEL)))+'='+LTRIM(RTRIM(STR(@IMAXLEVEL)))+'
													 THEN ''99'' ELSE C.LEVEL_NO END)
  						 FROM PIM01106 A
  						  JOIN '+@CTEMPDETAILTABLE+' B ON A.MRR_ID=B.REF_XN_ID
  						   JOIN '+@CTEMPMASTERTABLE+' C ON B.MEMO_ID=C.MEMO_ID'
			ELSE IF @CREFXNTYPE='PBM'
			SET @CCMD=N'UPDATE A 
								SET APPROVEDLEVELNO=(CASE WHEN 
														'+LTRIM(RTRIM(STR(@ICURRENTLEVEL)))+'='+LTRIM(RTRIM(STR(@IMAXLEVEL)))+'
													 THEN ''99'' ELSE C.LEVEL_NO END)
  						 FROM PBM01106 A
  						  JOIN '+@CTEMPDETAILTABLE+' B ON A.MEMO_ID=B.REF_XN_ID
  						   JOIN '+@CTEMPMASTERTABLE+' C ON B.MEMO_ID=C.MEMO_ID'
  						   			  						   
			PRINT @CCMD  						   
			EXEC SP_EXECUTESQL @CCMD  						   
		END
		ELSE IF @CXNTYPE='PRT'
		BEGIN
			SET @CCMD=N'UPDATE A 
								SET APPROVEDLEVELNO=(CASE WHEN 
														'+LTRIM(RTRIM(STR(@ICURRENTLEVEL)))+'='+LTRIM(RTRIM(STR(@IMAXLEVEL)))+'
													 THEN ''99'' ELSE C.LEVEL_NO END)
  						 FROM RMM01106 A
  						  JOIN '+@CTEMPDETAILTABLE+' B ON A.RM_ID=B.REF_XN_ID
  						   JOIN '+@CTEMPMASTERTABLE+' C ON B.MEMO_ID=C.MEMO_ID'
  						   			  						   
			PRINT @CCMD  						   
			EXEC SP_EXECUTESQL @CCMD  						   
		END

		ELSE IF @CXNTYPE='wsr'
		BEGIN
			SET @CCMD=N'UPDATE A 
								SET APPROVEDLEVELNO=(CASE WHEN 
														'+LTRIM(RTRIM(STR(@ICURRENTLEVEL)))+'='+LTRIM(RTRIM(STR(@IMAXLEVEL)))+'
													 THEN ''99'' ELSE C.LEVEL_NO END)
  						 FROM cnm01106 A
  						  JOIN '+@CTEMPDETAILTABLE+' B ON A.cn_id=B.REF_XN_ID
  						   JOIN '+@CTEMPMASTERTABLE+' C ON B.MEMO_ID=C.MEMO_ID'
  						   			  						   
			PRINT @CCMD  						   
			EXEC SP_EXECUTESQL @CCMD  						   
		END
		ELSE IF @CXNTYPE='VCH'
		BEGIN
			SET @CCMD=N'UPDATE A 
								SET APPROVEDLEVELNO=(CASE WHEN 
														'+LTRIM(RTRIM(STR(@ICURRENTLEVEL)))+'='+LTRIM(RTRIM(STR(@IMAXLEVEL)))+'
													 THEN ''99'' ELSE C.LEVEL_NO END)
  						 FROM VM01106 A
  						  JOIN '+@CTEMPDETAILTABLE+' B ON A.VM_ID=B.REF_XN_ID
  						   JOIN '+@CTEMPMASTERTABLE+' C ON B.MEMO_ID=C.MEMO_ID'
  						   			  						   
			PRINT @CCMD  						   
			EXEC SP_EXECUTESQL @CCMD  						   
		END
		ELSE IF @CXNTYPE='SFT'
		BEGIN
			SET @CCMD=N'UPDATE A 
								SET APPROVEDLEVELNO=(CASE WHEN 
														'+LTRIM(RTRIM(STR(@ICURRENTLEVEL)))+'='+LTRIM(RTRIM(STR(@IMAXLEVEL)))+'
													 THEN ''99'' ELSE C.LEVEL_NO END)
  						 FROM TILL_SHIFT_MST A
  						  JOIN '+@CTEMPDETAILTABLE+' B ON A.SHIFT_ID=B.REF_XN_ID
  						   JOIN '+@CTEMPMASTERTABLE+' C ON B.MEMO_ID=C.MEMO_ID'
  						   			  						   
			PRINT @CCMD  						   
			EXEC SP_EXECUTESQL @CCMD  						   
		END
		ELSE IF @CXNTYPE='SLSCRI'
		BEGIN
			IF @ICURRENTLEVEL=1
			BEGIN
				SET @CCMD=N'SELECT REF_XN_ID,1 FROM '+@CTEMPDETAILTABLE
				PRINT @CCMD
				
				INSERT CREDITBILLS(CM_ID,APPROVEDLEVELNO)
				EXEC SP_EXECUTESQL @CCMD
			END
			ELSE 
			BEGIN
				SET @CCMD=N'UPDATE A 
								SET APPROVEDLEVELNO=(CASE WHEN 
														'+LTRIM(RTRIM(STR(@ICURRENTLEVEL)))+'='+LTRIM(RTRIM(STR(@IMAXLEVEL)))+'
													 THEN ''99'' ELSE C.LEVEL_NO END)
  						 FROM CREDITBILLS A
  						  JOIN '+@CTEMPDETAILTABLE+' B ON A.CM_ID=B.REF_XN_ID
  						   JOIN '+@CTEMPMASTERTABLE+' C ON B.MEMO_ID=C.MEMO_ID'
  						   			  						   
			PRINT @CCMD  						   
			EXEC SP_EXECUTESQL @CCMD
			END
		END
		ELSE IF @CXNTYPE IN ('SLSEDT','EOSSDSLS')
		BEGIN
			IF @ICURRENTLEVEL=1
			BEGIN
				SET @CCMD=N'SELECT REF_XN_ID,1 FROM '+@CTEMPDETAILTABLE
				PRINT @CCMD
				
				INSERT EOSSDISABLEDSLS(CM_ID,APPROVEDLEVELNO)
				EXEC SP_EXECUTESQL @CCMD
			END
			ELSE 
			BEGIN
				SET @CCMD=N'UPDATE A 
								SET APPROVEDLEVELNO=(CASE WHEN 
														'+LTRIM(RTRIM(STR(@ICURRENTLEVEL)))+'='+LTRIM(RTRIM(STR(@IMAXLEVEL)))+'
													 THEN ''99'' ELSE C.LEVEL_NO END)
  						 FROM EOSSDISABLEDSLS A
  						  JOIN '+@CTEMPDETAILTABLE+' B ON A.CM_ID=B.REF_XN_ID
  						   JOIN '+@CTEMPMASTERTABLE+' C ON B.MEMO_ID=C.MEMO_ID'
  						   			  						   
			PRINT @CCMD  						   
			EXEC SP_EXECUTESQL @CCMD
			END
		END
		--SET @NSTEP = 45
		--SET @CCMD=N'SELECT @NLEVELNO=B.LEVEL_NO FROM '+@CTEMPMASTERTABLE+' A JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B
		--			ON A.USER_CODE=B.USER_CODE AND A.XN_TYPE=B.XN_TYPE'
					
		--EXEC SP_EXECUTESQL @CCMD,N'@NLEVELNO NUMERIC(2,0) OUTPUT',@NLEVELNO=@NLEVELNO OUTPUT

		--IF @NLEVELNO>1
		--BEGIN
		--	SET @NSTEP = 50
		--	SET @CCMD=N'SELECT B.MRR_NO FROM '+@CTEMPDETAILTABLE+' A JOIN PIM01106 B ON A.REF_XN_ID=B.MRR_ID
		--				LEFT OUTER JOIN 
		--				(SELECT A.REF_XN_ID FROM XN_APPROVAL_DONE_DET A JOIN '+@CTEMPDETAILTABLE+' B ON A.REF_XN_ID=B.REF_XN_ID
		--				 JOIN XN_APPROVAL_DONE_MST C ON C.MEMO_ID=A.MEMO_ID
		--				 JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS D ON D.USER_CODE=C.USER_CODE AND D.XN_TYPE=C.XN_TYPE						
		--				 WHERE D.LEVEL_NO='+LTRIM(RTRIM(STR(@NLEVELNO-1)))+' AND A.APPROVAL_STATUS IN (3))
		--				 C ON A.REF_XN_ID=C.REF_XN_ID WHERE C.REF_XN_ID IS NULL'
			
		--	INSERT #TMPINVALID
		--	EXEC SP_EXECUTESQL @CCMD
			
		--	IF EXISTS (SELECT TOP 1 * FROM #TMPINVALID)
		--	BEGIN
		--		SET @NSTEP = 55
		--		SELECT MRR_NO AS PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,'FOLLOWING MRR(S) ARE NOT BEING APPROVED BY LEVEL#'+LTRIM(RTRIM(STR(@NLEVELNO-1)))+' USER' AS ERRMSG FROM #TMPINVALID	
				
		--		SET @BINVALIDENTRYFOUND=1
				
		--		GOTO END_PROC
		--	END			 
						 
		--END

		
		SET @NSTEP = 65
		-- GETTING DEPT_ID FROM TEMP MASTER TABLE
		SET @CCMD = 'SELECT @CMEMODEPTID = LEFT(' + @CMEMONO + ',4) FROM ' 
					+ (CASE WHEN @NUPDATEMODE=3 THEN @CMASTERTABLENAME ELSE @CTEMPMASTERTABLE END )
		EXEC SP_EXECUTESQL @CCMD, N'@CMEMODEPTID VARCHAR(4) OUTPUT', 
						   @CMEMODEPTID OUTPUT
		IF (@CMEMODEPTID IS NULL )
		BEGIN
			  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE SAVED... INCORRECT PARAMETER'
			  GOTO END_PROC  		
		END

		-- START UPDATING XN TABLES	
		IF @NUPDATEMODE = 1 -- ADDMODE	
		BEGIN	
			SET @NSTEP = 70
			SET @CCMD = 'SELECT @CMEMODT=MEMO_DT FROM '+ @CTEMPMASTERTABLE
			EXEC SP_EXECUTESQL @CCMD, N'@CMEMODT DATETIME OUTPUT ',@CMEMODT OUTPUT
	
			SET @CMEMONOPREFIX=@CLOCATIONID
     
			-- GENERATING NEW JOB ORDER NO		
			SET @NSAVETRANLOOP=0
			WHILE @NSAVETRANLOOP=0
			BEGIN
				SET @NSTEP = 80
				EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,
								@CFINYEAR,0, @CMEMONOVAL OUTPUT   
				
				PRINT @CMEMONOVAL
				SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+' 
										WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' 
										AND FIN_YEAR = '''+@CFINYEAR+''' )
								SET @NLOOPOUTPUT=0
							ELSE
								SET @NLOOPOUTPUT=1'
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
			END


			IF @CMEMONOVAL IS NULL OR @CMEMONOVAL LIKE '%LATER%'
			BEGIN
				  SET @NSTEP = 90
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'	
				  GOTO END_PROC  		
			END

			SET @NSTEP = 100		-- GENERATING NEW ID

			-- GENERATING NEW JOB ORDER ID
			SET @CKEYFIELDVAL1 = @CLOCATIONID + RIGHT(@CFINYEAR,2)+REPLICATE('0', (22-LEN(@CLOCATIONID + RIGHT(@CFINYEAR,2)))-LEN(LTRIM(RTRIM(@CMEMONOVAL))))  + LTRIM(RTRIM(@CMEMONOVAL))
			
			IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
				  -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'
				  GOTO END_PROC
			END

			SET @NSTEP = 110		-- UPDATING NEW ID INTO TEMP TABLES

			-- UPDATING NEWLY GENERATED JOB ORDER NO AND JOB ORDER ID IN PIM AND PID TEMP TABLES
			SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET MEMO_NO=''' + @CMEMONOVAL+''',
						 MEMO_ID = '''+@CKEYFIELDVAL1+''''

			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			
			SET @NSTEP = 113	
			SET @CCMD = 'UPDATE A SET A.LEVEL_NO=(CASE WHEN ISNULL(A.LEVEL_NO,0)=0 THEN B.LEVEL_NO ELSE A.LEVEL_NO END),
						 LEVEL_CODE=(CASE WHEN ISNULL(A.LEVEL_CODE,'''')='''' THEN C.LEVEL_CODE ELSE A.LEVEL_CODE END) FROM ' +
						 @CTEMPMASTERTABLE + ' A 
						 JOIN XN_APPROVAL_CHECKLIST_LEVEL_USERS B ON A.USER_CODE=B.USER_CODE
						 JOIN XN_APPROVAL_CHECKLIST_LEVELS C ON C.LEVEL_NO=B.LEVEL_NO AND C.XN_TYPE=A.XN_TYPE'

			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			
			SET @NSTEP = 116			
			SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE + ' SET MEMO_ID = '''+@CKEYFIELDVAL1+''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			
			/*FOR XN_TYPE PTC, IF TEMP_XN_APPROVAL_DONE_DET HAS ISHIDDEN TRUE THEN THAT ROW SHOULD BE MARKED AS 
			  HIDDEN IN PETTY CASH EXPENSE DETAIL TABLE AND SHOULD NOT BE DISPLAYED IN PETTY CASH EXPENSE MODULE.*/
			SET @NSTEP=117
			SET @CCMD=N'SELECT @CXNTYPE=XN_TYPE FROM '+@CTEMPMASTERTABLE
			EXEC SP_EXECUTESQL @CCMD,N'@CXNTYPE VARCHAR(20) OUTPUT',@CXNTYPE OUTPUT
			
			SET @NSTEP=118
			IF @CXNTYPE='PTC'
			BEGIN
				SET @CCMD=N'UPDATE A SET HIDDENFROMAPPROVAL=ISHIDDEN FROM PED01106 A JOIN 
							'+@CTEMPDETAILTABLE+' B ON A.ROW_ID=B.REF_XN_ID'
				EXEC SP_EXECUTESQL @CCMD							
			END
		END					-- END OF ADDMODE
		ELSE				-- CALLED FROM EDITMODE
		BEGIN				-- START OF EDITMODE
		
			SET @NSTEP = 120		-- GETTING ID INFO FROM TEMP TABLE

			-- GETTING JOB ORDER ID WHICH IS BEING EDITED
			SET @CCMD = 'SELECT @CKEYFIELDVAL1 = ' + @CKEYFIELD1 + ', @CMEMONOVAL = ' + @CMEMONO + ' FROM '
						+ (CASE WHEN @NUPDATEMODE=3 THEN @CMASTERTABLENAME + ' WHERE MEMO_ID = ''' + @CMEMOID + '''' 
								ELSE @CTEMPMASTERTABLE END )
			
			EXEC SP_EXECUTESQL @CCMD, N'@CKEYFIELDVAL1 VARCHAR(50) OUTPUT, @CMEMONOVAL VARCHAR(50) OUTPUT', 
							   @CKEYFIELDVAL1 OUTPUT, @CMEMONOVAL OUTPUT
			IF (@CKEYFIELDVAL1 IS NULL ) OR (@CMEMONOVAL IS NULL )
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'
				  GOTO END_PROC  		
			END
			
		END					-- END OF EDITMODE

		SET @NSTEP = 130

		IF @CXNTYPE='PUR'
		BEGIN
			SET @CCMD=N'SELECT B.MRR_NO FROM '+@CTEMPDETAILTABLE+' A JOIN PIM01106 B ON A.REF_XN_ID=B.MRR_ID
						JOIN '+@CTEMPMASTERTABLE+' C ON C.MEMO_ID=A.MEMO_ID
						JOIN XN_APPROVAL_DONE_DET D ON A.REF_XN_ID=D.REF_XN_ID
						JOIN XN_APPROVAL_DONE_MST E ON D.MEMO_ID=E.MEMO_ID AND E.LEVEL_NO=C.LEVEL_NO
						AND D.REFXNTYPE=''PUR'''
			
			INSERT #TMPINVALID
			EXEC SP_EXECUTESQL @CCMD
			
			IF EXISTS (SELECT TOP 1 * FROM #TMPINVALID)
			BEGIN
				SET @NSTEP = 135
				SELECT MRR_NO AS PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,'FOLLOWING MRR(S) ARE ALREADY APPROVED FULLY/PARTIALLY ' AS ERRMSG FROM #TMPINVALID	
				
				SET @BINVALIDENTRYFOUND=1
				
				GOTO END_PROC
			END			 
		END
		
		-- RECHECKING IF ID IS STILL LATER
		IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
			GOTO END_PROC
		END

		-- UPDATING MASTER TABLE (PIM01106) FROM TEMP TABLE
		
		SET @NSTEP = 140
		EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPMASTERTABLENAME
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CMASTERTABLENAME
			, @CKEYFIELD1	= @CKEYFIELD1
			, @BALWAYSUPDATE = 1
			

		-- UPDATING TRANSACTION TABLE (PID01106) FROM TEMP TABLE
		SET @NSTEP = 150		-- UPDATING TRANSACTION TABLE

		-- UPDATING ROW_ID IN TEMP TABLES - PAYMODE_XN_DET
		SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE + ' SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(40), NEWID())
					  WHERE LEFT(ROW_ID,5) = ''LATER'''
		EXEC SP_EXECUTESQL @CCMD

		SET @NSTEP = 155		-- DELETING FROM TRANSACTION TABLE - ARC_GVSALE_DETAILS
		
		---- ARC_GVSALE_DETAILS
		SET @CCMD = N'DELETE A FROM ' + @CDETAILTABLENAME + ' A 
					  LEFT OUTER JOIN ' + @CTEMPDETAILTABLE + ' B ON A.ROW_ID = B.ROW_ID
					  WHERE A.MEMO_ID = ''' + @CKEYFIELDVAL1 + '''
					  AND   B.ROW_ID IS NULL'
		EXEC SP_EXECUTESQL @CCMD
		
		SET @NSTEP = 160
		EXEC UPDATEMASTERXN 
		  @CSOURCEDB	= @CTEMPDBNAME
		, @CSOURCETABLE = @CTEMPDETAILTABLENAME
		, @CDESTDB		= ''
		, @CDESTTABLE	= @CDETAILTABLENAME
		, @CKEYFIELD1	= @CKEYFIELD1
		, @BALWAYSUPDATE = 1

		
		-- VALIDATING ENTRIES 
		SET @NSTEP = 165

		EXEC VALIDATEXN
			  @CXNTYPE	= 'XNSAPPROVAL'
			, @CXNID	= @CKEYFIELDVAL1
			, @NUPDATEMODE = @NUPDATEMODE			
			, @CCMD		= @CCMDOUTPUT OUTPUT

		IF @CCMDOUTPUT <> ''
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' DATA VALIDATION FAILED : ' + @CCMDOUTPUT + '...'
			GOTO END_PROC
		END
		
	END TRY
	BEGIN CATCH
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		
		
		GOTO END_PROC
	END CATCH
	
END_PROC:
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@BINVALIDENTRYFOUND,0)=0
		BEGIN
			COMMIT TRANSACTION
		END	
		ELSE
			ROLLBACK
	END
	
	IF ISNULL(@BINVALIDENTRYFOUND,0)=0
	BEGIN
		INSERT @OUTPUT ( ERRMSG, MEMO_ID)
			VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )

		SELECT * FROM @OUTPUT	
	END	

	EXEC SP_DROPTEMPTABLES_XNS 'XNSAPPROVAL',@NSPID	
	
END
------------------------------------------------------ END OF PROCEDURE SAVETRAN_XNSAPPROVAL
