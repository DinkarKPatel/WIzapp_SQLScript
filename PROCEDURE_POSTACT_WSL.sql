create PROCEDURE POSTACT_WSL 
(
	@DTTO DATETIME,
	@CDEPTID CHAR(4)='',
	@CACCODE CHAR(10)='',
	@DGSTCUTOFFDATE DATETIME
)
AS
BEGIN
    DECLARE @CSTEP VARCHAR(10),@BPOSTDISCOUNTSEPARATELY BIT,@CDISCACCODE VARCHAR(10),@BPOSTFREIGHTSEPARATELY	BIT
			,@CFREIGHTACCODE VARCHAR(10),@BPOSTOCTROISEPARATELY BIT,@COCTROIACCODE VARCHAR(10),
			@BPOSTINSURANCESEPARATELY BIT,@CINSURANCEACCODE VARCHAR(10),
			@BPOSTOTHERCHARGESSEPARATELY BIT,@COTHERCHARGESACCODE VARCHAR(10),@BPOSTROUNDOFFSEPARATELY BIT,@CROUNDOFFACCODE VARCHAR(10),@NCTR NUMERIC(10,0),
			@NSUBTOTAL NUMERIC(14,2),@NTAXAMOUNT NUMERIC(14,2), @CPURACCODE VARCHAR(50),@CTAXACCODE VARCHAR(100),
			@LPOSTTAXSEPARATELY NUMERIC(14,2),@CINVID VARCHAR(50),@LOUTSTATIONPARTY BIT,@TMPDR NUMERIC(14,2),
			@TMPCR NUMERIC(14,2),@CCURSTATECODE	VARCHAR(10),@CVMID	VARCHAR(40),@CLOCATIONID CHAR(2),
			@CLASTBILLNO VARCHAR(40),@DTMPVENDORBILLDT DATETIME,@CRMLIST VARCHAR(300),@NTMPCREDITDAYS NUMERIC(10),
			@NTMPCRDISCOUNTPERCENTAGE NUMERIC(14,2),@DLASTINVDT	DATETIME,@CVOUCHERCODE VARCHAR(10),
			@COLDBILLTYPE VARCHAR(10),@CLASTACCODE VARCHAR(10),@CLASTPARTYNAME VARCHAR(100),@NTOTQUANTITY NUMERIC(14,2),
			@NTOTNETAMOUNT NUMERIC(14,2),@CDEPTNAME VARCHAR(100),@CVOUCHERNO VARCHAR(10),
			@NDIFFAMT NUMERIC(14,4),@CWSLAC CHAR(10),@CINVNO VARCHAR(50),@BGSTBILL BIT,
			@CSLOCGSTSTATECODE VARCHAR(5),@CTLOCGSTSTATECODE VARCHAR(5),@CPARTYGSTSTATECODE VARCHAR(5),@NINVMODE NUMERIC(1,0),
			@CSETOFFACCODE CHAR(10),@CADJDIFFACCODE CHAR(10),@BMANUALROFF BIT,@NROLIMIT NUMERIC(7,3)  
			
	SET @CSTEP=10
	DECLARE @CPARTYACCODE VARCHAR(10),@CPARTYSTATECODE VARCHAR(10),@NNETAMOUNT NUMERIC(14,2),
			@NDISCAMOUNT NUMERIC(14,2),@NFREIGHT NUMERIC(14,2),	@NOTHER NUMERIC(14,2),@NROUNDOFF NUMERIC(14,2),
			@NDRTOTAL NUMERIC(14,4),@NCRTOTAL NUMERIC(14,4),@CCUTOFFDATE VARCHAR(20),@CXNTYPE VARCHAR(10)
			,@CAC_CODE VARCHAR(20),@CVDID VARCHAR(40)
    
    SET @CFREIGHTACCODE=''
    SET @CROUNDOFFACCODE=''
	
	--SELECT @DGSTCUTOFFDATE AS DGSTCUTOFFDATE    
    SET @CSTEP=20
    --THIS TABLE VARIABLE STORE ERROR OF OF MEMO ID
    DECLARE @ERRORS TABLE
	(
		XN_ID	VARCHAR(40),XN_TYPE VARCHAR(30),XN_NO VARCHAR(40),
		XN_DT DATETIME,XN_AMT NUMERIC(14,2),XN_AC VARCHAR(100),
		ERR_DESC VARCHAR(500)
	)   
    
    SET @CSTEP=30
    DECLARE @VCHC TABLE 
	(
		AC_CODE CHAR(10),NARRATION VARCHAR(200),XN_NO VARCHAR(30),
		XN_DT DATETIME,DEPT_ID CHAR(4),AMOUNT NUMERIC(14,4),XN_ID VARCHAR(22),
		REF_BILL_NO VARCHAR(50),REF_BILL_DATE DATETIME,	ENTRY_ID INT
		,CRDAYS NUMERIC(5)
	)
	
	SET @CSTEP=40
	DECLARE @VDC TABLE 
	(
		VD_ID VARCHAR(50),				VM_ID VARCHAR(40),				AC_CODE CHAR(10), 
		NARRATION VARCHAR(200),			DEBIT_AMOUNT NUMERIC(14,4),		CREDIT_AMOUNT NUMERIC(14,4),
		X_TYPE CHAR(2), 				VS_AC_CODE CHAR(10),	 		REF_BILL_NO VARCHAR(40), 
		CREDIT_DAYS NUMERIC(10),		CR_DISCOUNT_PERCENTAGE NUMERIC(14,2),		
		VAT_ENTRY BIT,REF_BILL_DATE DATETIME, AC_NAME VARCHAR(100)
	)
	
	SET @CSTEP=50
	DECLARE @VMC TABLE
	(
		VM_ID VARCHAR(400), 			VOUCHER_NO VARCHAR(400), 		VOUCHER_DT DATETIME, 
		VOUCHER_CODE CHAR(100), 		DEPT_ID CHAR(20),				BILL_TYPE VARCHAR(300),
		BILL_NO VARCHAR(200), 			BILL_ID VARCHAR(220), 			BILL_DT DATETIME, 
		BILL_AC_CODE VARCHAR(100),		DRTOTAL NUMERIC(20,2),			CRTOTAL NUMERIC(20,2), 
		CASH_VOUCHER BIT, 				SALE_VOUCHER BIT, 				QUANTITY NUMERIC(20,2), 
		ANGADIA_CODE CHAR(70), 			LR_NO VARCHAR(500), 			LR_DT DATETIME,
		PARTY_NAME VARCHAR(1000),		NET_AMOUNT NUMERIC(20,2), 		BILL_STATUS VARCHAR(1000),
		RM_LIST VARCHAR(3000), 		CANCELLED BIT,					DEPT_NAME VARCHAR(100),
		VOUCHER_TYPE VARCHAR(100)	
	)
	
	SET @CSTEP=60
	DECLARE @VLINK TABLE
	(
		VM_ID VARCHAR(100),MEMO_ID VARCHAR(100),XN_TYPE VARCHAR(20),LAST_UPDATE DATETIME
	)
	
	DECLARE @TBILL_BY_BILL_REF TABLE(VD_ID VARCHAR(40),BILL_NO VARCHAR(40),AMOUNT NUMERIC(18,4),LAST_UPDATE DATETIME
								,X_TYPE VARCHAR(20),CR_DAYS NUMERIC(5),VM_ID VARCHAR(40))
	
	
	SELECT TOP 1 @CCUTOFFDATE=CUTOFFDATE FROM WSLCONFIGMST 
	
	SET @CCUTOFFDATE=ISNULL(@CCUTOFFDATE,'')
	
	SET @CSTEP=70
	SET @CVOUCHERCODE = '0000000007'
    BEGIN TRY
			
			DECLARE @IMAXLEVEL INT
			
			--GETTING THE MAX LEVEL OF APPROVAL FOR PURCHASE TRANSACTION
			SELECT @IMAXLEVEL=MAX(LEVEL_NO) 
			FROM XN_APPROVAL_CHECKLIST_LEVELS 
			WHERE XN_TYPE='WSL' AND INACTIVE=0
			
			IF EXISTS(SELECT TOP 1 'U' FROM XN_APPROVAL_CHECKLIST_LEVELS  WHERE XN_TYPE='WSL' AND INACTIVE=0 AND ISNULL(AC_POSTING,0)<>0)
			BEGIN
			    SELECT @IMAXLEVEL=LEVEL_NO
				FROM XN_APPROVAL_CHECKLIST_LEVELS 
				WHERE XN_TYPE='WSL' AND INACTIVE=0 AND ISNULL(AC_POSTING,0)<>0
			END
			
			
			SET @IMAXLEVEL=ISNULL(@IMAXLEVEL,0)
			
			
			SET @CSTEP=80
			IF OBJECT_ID('TEMPDB..#WSLTABLE','U') IS NOT NULL
				DROP TABLE #WSLTABLE 
			
			SET @CSTEP=90
			--THIS TABLE STORE ALL PENDING MEMO_ID 
			CREATE TABLE #WSLTABLE (MEMO_ID VARCHAR(30),MODE VARCHAR(10))
			
			SET @CSTEP=100
			--GETTING LIST OF WHOLESALE INVOICES THAT QUALIFY FOR VOUCHER POSTING
			INSERT INTO #WSLTABLE (MEMO_ID,MODE)
	        SELECT A.INV_ID,'WSL' AS MODE 
	        FROM INM01106 A
	        JOIN LOCATION SL ON a.location_Code =SL.DEPT_ID
	        LEFT JOIN LOCATION TL ON A.PARTY_DEPT_ID=TL.DEPT_ID
	        LEFT OUTER JOIN 
	        (
				SELECT B.MEMO_ID,B.LAST_UPDATE
				FROM POSTACT_VOUCHER_LINK B 
				JOIN VM01106 C ON C.VM_ID = B.VM_ID 
				WHERE C.CANCELLED=0 AND B.XN_TYPE = 'WSL' 
	        )VM  ON A.INV_ID = VM.MEMO_ID  
	        WHERE  
	        ISNULL(A.APPROVEDLEVELNO,0)>=@IMAXLEVEL AND
	          -- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES
            (ISNULL(SL.LOC_TYPE,0)=1 OR ISNULL(SL.ACCOUNT_POSTING_AT_HO,0)=1) AND 
	        /*WHOLESALE IS NOT CANCELLED.*/
	        ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)	 
	        /*WHOLESALE INV_DT IS LESS THAN THE SPECIFIED DATE.*/
	        AND A.INV_DT <= @DTTO
	        /*IF CUTOFF DATE IS SPECIFIED, CONSIDER WHOLESALE AFTER THE CUTOFF DATE*/
	        AND (ISNULL(@CCUTOFFDATE,'')='' OR A.INV_DT>@CCUTOFFDATE)
	        /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/
	        AND (ISNULL(@CDEPTID,'')='' OR a.location_Code =@CDEPTID)
	        /*WHOLESALE IS NOT GROUP/BRANCH WHOLESALE*/
	        AND (((A.INV_MODE<>2 OR A.XFER_TYPE=1) AND INV_DT<@DGSTCUTOFFDATE) OR
				 ((A.INV_MODE<>2 OR TL.LOC_TYPE=2) AND INV_DT>=@DGSTCUTOFFDATE))
	        /*WHOLESALE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/
	        AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE) 
	        AND (@CACCODE='' OR A.AC_CODE=@CACCODE)
	        
			--SELECT 'CHECK WSLTABLE',* FROM #WSLTABLE
	        
	        SET @CSTEP=110
	        SELECT @BPOSTDISCOUNTSEPARATELY =POSTDISCSPRTLY FROM WSLCONFIGMST
			
			SET @CSTEP=120
			--IF NO ENTRY EXISTS IN CONFIG, CONSIDER 0
			SET @BPOSTDISCOUNTSEPARATELY=ISNULL(@BPOSTDISCOUNTSEPARATELY,0)
			
			SET @CSTEP=130
			IF @BPOSTDISCOUNTSEPARATELY=1
			BEGIN
				SELECT @CDISCACCODE = ISNULL(DISCAC,'')
				FROM WSLCONFIGMST
				
				SET @CDISCACCODE=ISNULL(@CDISCACCODE,'')
				/*
				IF DISCOUNT HAS TO BE POSTED SEPARATELY AND DISCOUNT ACCOUNT IS NOT DEFINED, 
				SEND ERROR MESSAGE TO USER
				*/
				SET @CSTEP=140
				IF @CDISCACCODE = '' OR @CDISCACCODE = '0000000000'
				BEGIN
					INSERT @ERRORS (XN_TYPE, ERR_DESC ) 
					VALUES ( 'WSL', 'CONFIG: DISCOUNT ACCOUNT NOT SPECIFIED')
				END
			END
	  
	        SET @CSTEP=150
	        --IF FREIGHT CONSIDERED AS PART OF STOCK THEN CLUB IT IN WHOLESALE A/C OTHERWISE POST SEPARATELY
			SELECT @BPOSTFREIGHTSEPARATELY = POSTFREIGHTSPRTLY
			FROM WSLCONFIGMST
			
			SET @CSTEP=160
			SET @BPOSTFREIGHTSEPARATELY=ISNULL(@BPOSTFREIGHTSEPARATELY,0)
			
			SET @CSTEP=170
			--GET THE ACCOUNT FOR FREIGHT AMOUNT POSTING
			SELECT @CFREIGHTACCODE = FREIGHTAC
			FROM WSLCONFIGMST
		    
		    SET @CFREIGHTACCODE=ISNULL(@CFREIGHTACCODE,'')
		    
		    SET @CSTEP=180
		    --IF OTHER CHARGES CONSIDERED AS PART OF STOCK THEN CLUB IT IN WHOLESALE A/C OTHERWISE POST SEPARATELY
			SELECT @BPOSTOTHERCHARGESSEPARATELY = POSTOCSPRTLY
			FROM WSLCONFIGMST

			SET @CSTEP=190
			SET @BPOSTOTHERCHARGESSEPARATELY=ISNULL(@BPOSTOTHERCHARGESSEPARATELY,0)

			SET @CSTEP=200
			SELECT @COTHERCHARGESACCODE = OCAC
			FROM WSLCONFIGMST 
		   
			SET @COTHERCHARGESACCODE=ISNULL(@COTHERCHARGESACCODE,'')
		   
		    SET @CSTEP=210
		    --IF OCTROI IS CONSIDERED AS PART OF STOCK THEN CLUB IT IN WHOLESALE A/C OTHERWISE POST SEPARATELY
			SELECT @BPOSTOCTROISEPARATELY = POSTOCTROISPRTLY
			FROM WSLCONFIGMST
		   
			SET @CSTEP=220
			SET @BPOSTOCTROISEPARATELY=ISNULL(@BPOSTOCTROISEPARATELY,0)

			SET @CSTEP=230
			SELECT @COCTROIACCODE = OCTROIAC
			FROM WSLCONFIGMST
		   
			SET @CSTEP=240
			SET @COCTROIACCODE=ISNULL(@COCTROIACCODE,'')
			
			SET @CSTEP=250
		    --IF INSURANCE IS CONSIDERED AS PART OF STOCK THEN CLUB IT IN WHOLESALE A/C OTHERWISE POST SEPARATELY
			SELECT @BPOSTINSURANCESEPARATELY = POSTINSSPRTLY
			FROM WSLCONFIGMST
		   
			SET @CSTEP=260
			SET @BPOSTINSURANCESEPARATELY=ISNULL(@BPOSTINSURANCESEPARATELY,0)

			SET @CSTEP=270
			SELECT @CINSURANCEACCODE = INSAC
			FROM WSLCONFIGMST
		   
			SET @CSTEP=280
			SET @CINSURANCEACCODE=ISNULL(@CINSURANCEACCODE,'')
		   
			SET @CSTEP = 290
			--IF ROUND OFF IS CONSIDERED AS PART OF STOCK THEN CLUB IT IN WHOLESALE A/C OTHERWISE POST SEPARATELY
			SELECT @BPOSTROUNDOFFSEPARATELY = POSTROFFSPRTLY
			FROM WSLCONFIGMST

			SET @CSTEP = 300
			SET @BPOSTROUNDOFFSEPARATELY=ISNULL(@BPOSTROUNDOFFSEPARATELY,0)
			
			SET @CSTEP = 310
			SELECT @CROUNDOFFACCODE = ROFFAC
			FROM WSLCONFIGMST
			
			SET @CSTEP = 320
			SET @CROUNDOFFACCODE=ISNULL(@CROUNDOFFACCODE,'')
		
			SET @CSTEP = 330
			CREATE INDEX IX_TEMP_WSLTABLE_RM_ID ON #WSLTABLE(MEMO_ID)

			DECLARE @BGPCCONFIGFOUND BIT			
			SET @BGPCCONFIGFOUND=0
			IF EXISTS (SELECT TOP 1 XN_TYPE FROM GST_POSTING_CONFIG WHERE XN_TYPE='WSL')
				SET @BGPCCONFIGFOUND=1
		
			SET @CSTEP=340
			---GETTING LIST OF ALL ERROR FROM WHOLESALE AND CONVERT MRN TO BILL
			/*
				INV_TYPE = 2 FOR LOCAL WHOLESALE INVOICE
				INV_TYPE = 1 FOR OUTSTATION WHOLESALE INVOICE
			*/
			INSERT INTO @ERRORS(XN_ID,XN_DT,XN_NO ,XN_TYPE,ERR_DESC)
			--GETTING ERROR LIST FROM WHOLESALE BILLS
			SELECT DISTINCT INM.INV_ID,INM.INV_DT,INM.INV_NO,'WSL' AS XN_TYPE
				  ,(CASE 
						 WHEN IND.ITEM_FORM_ID='0000000' AND INM.INV_DT<@DGSTCUTOFFDATE
								THEN 'FORM NOT SPECIFIED'
						 WHEN (ISNULL(PAC.WSLAC,'') = '' OR ISNULL(PAC.WSLAC,'') = '0000000000')  AND INM.INV_DT<@DGSTCUTOFFDATE
								THEN 'WHOLESALE A/C NOT SPECIFIED'
						 WHEN (IND.ITEM_TAX_PERCENTAGE<>0 AND (ISNULL(PAC.TAXAC,'')='' OR PAC.TAXAC='0000000000'))  AND INM.INV_DT<@DGSTCUTOFFDATE 
								THEN 'TAX A/C NOT SPECIFIED'

						 WHEN INM.INV_DT>=@DGSTCUTOFFDATE  AND GPC.XN_TYPE IS NULL AND @BGPCCONFIGFOUND=1
								THEN 'GST A/C CONFIGURATION NOT FOUND FOR RELATED GST PERCENTAGE'								
						 WHEN INM.INV_DT>=@DGSTCUTOFFDATE  AND @BGPCCONFIGFOUND=0
								THEN 'GST A/C CONFIGURATION NOT SETUP FOR WHOLESALE'								
						 
						 WHEN (ISNULL(GPC.IGST_XN_AC_CODE,'') = '' OR ISNULL(GPC.IGST_XN_AC_CODE,'') = '0000000000')
								AND INM.INV_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND IGST_AMOUNT<>0 THEN 'IGST PUR A/C NOT SPECIFIED'
						 WHEN (ISNULL(GPC.LOCAL_GST_XN_AC_CODE,'') = '' OR ISNULL(GPC.LOCAL_GST_XN_AC_CODE,'') = '0000000000')
								AND INM.INV_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND CGST_AMOUNT<>0 THEN 'CGST PUR A/C NOT SPECIFIED'
						 
						 WHEN (ISNULL(GPC.IGST_TAX_AC_CODE,'') = '' OR ISNULL(GPC.IGST_TAX_AC_CODE,'') = '0000000000')
								AND INM.INV_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND IGST_AMOUNT<>0 THEN 'IGST TAX A/C NOT SPECIFIED'
						 WHEN (ISNULL(GPC.CGST_TAX_AC_CODE,'') = '' OR ISNULL(GPC.CGST_TAX_AC_CODE,'') = '0000000000')
								AND INM.INV_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND CGST_AMOUNT<>0 THEN 'CGST TAX A/C NOT SPECIFIED'
						 WHEN (ISNULL(GPC.SGST_TAX_AC_CODE,'') = '' OR ISNULL(GPC.SGST_TAX_AC_CODE,'') = '0000000000')
								AND INM.INV_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND SGST_AMOUNT<>0 THEN 'SGST TAX NOT SPECIFIED'																								
						 
						 WHEN (INM.FREIGHT<>0 AND @BPOSTFREIGHTSEPARATELY=1 AND
								 (@CFREIGHTACCODE = '' OR @CFREIGHTACCODE = '0000000000'))
								THEN 'FREIGHT A/C NOT SPECIFIED'
						 WHEN (INM.OTHER_CHARGES<>0 AND @BPOSTOTHERCHARGESSEPARATELY=1
								AND (@COTHERCHARGESACCODE='' OR @COTHERCHARGESACCODE='0000000000'))
								THEN 'OTHER CHARGES A/C NOT SPECIFIED' 
						 WHEN (INM.OCTROI_AMOUNT<>0 AND @BPOSTOCTROISEPARATELY=1 AND (@COCTROIACCODE='' OR @COCTROIACCODE='0000000000'))
								THEN 'OCTROI A/C NOT SPECIFIED' 		
						 WHEN (INM.INSURANCE<>0 AND @BPOSTINSURANCESEPARATELY=1
								 AND (@CINSURANCEACCODE='' OR @CINSURANCEACCODE='0000000000'))
								THEN 'INSURANCE A/C NOT SPECIFIED' 				
						 WHEN (INM.ROUND_OFF<>0 AND (@BPOSTROUNDOFFSEPARATELY=1 OR  INM.INV_DT>=@DGSTCUTOFFDATE) AND (@CROUNDOFFACCODE = '' OR @CROUNDOFFACCODE = '0000000000'))
								THEN 'ROUND OFF A/C NOT SPECIFIED'		
						 WHEN (INM.NET_AMOUNT=0) 								
								THEN 'ZERO VALUE WHOLESALE'
						 WHEN (PXD.PAYMODE_CODE='0000000' AND ISNULL(SCM.CASH_AC_CODE,'') IN ('','0000000000'))
							   THEN 'CASH A/C NOT DEFINED IN SALES ACCOUNT CONFIG'
						 WHEN (PM.PAYMODE_GRP_CODE='0000002' AND ISNULL(SCD.BANK_AC_CODE,'') IN ('','0000000000'))
							   THEN 'BANK A/C NOT DEFINED IN SALES ACCOUNT CONFIG FOR CARD :'+PM.PAYMODE_NAME
						 WHEN (PM.PAYMODE_GRP_CODE='0000002' AND ISNULL(SCD.COMMISSION_AC_CODE,'') IN ('','0000000000')) AND PM.COMMISSION_PERCENTAGE<>0
							   THEN 'COMMISSION A/C NOT DEFINED IN SALES ACCOUNT CONFIG FOR CARD :'+PM.PAYMODE_NAME							   							   		
						 ELSE 'UNIDENTIFIED ERROR' END) AS ERR_DESC		
			FROM INM01106 INM
			JOIN IND01106 IND ON INM.INV_ID=IND.INV_ID
			JOIN #WSLTABLE TPT ON INM.INV_ID=TPT.MEMO_ID AND TPT.MODE='WSL'
			LEFT OUTER JOIN WSLCONFIGDET PAC ON IND.ITEM_FORM_ID=PAC.FORMID 
			LEFT JOIN FORM FM ON FM.FORM_ID=IND.ITEM_FORM_ID
			LEFT OUTER JOIN SLSCONFIGMST SCM ON 1=1
			LEFT OUTER JOIN PAYMODE_XN_DET PXD ON INM.INV_ID=PXD.MEMO_ID AND PXD.XN_TYPE='WSL'
			LEFT OUTER JOIN SLSCONFIGDET_2 SCD ON SCD.CARD_PAYMODE_CODE=PXD.PAYMODE_CODE
			LEFT OUTER JOIN PAYMODE_MST PM ON PM.PAYMODE_CODE=PXD.PAYMODE_CODE			
			LEFT OUTER JOIN GST_POSTING_CONFIG GPC ON GPC.GST_PERCENTAGE=ISNULL(IND.GST_PERCENTAGE,0) AND GPC.XN_TYPE='WSL'
			
			WHERE INM.INV_TYPE=1 AND /*FOR OUTSTATION INVOICES*/
			--GENERATE ERROR IF ITEM WITH INVALID FORM SELECTION IS FOUND.
			((IND.ITEM_FORM_ID='0000000' AND  INM.INV_DT<@DGSTCUTOFFDATE)
			OR (INM.INV_DT>=@DGSTCUTOFFDATE  AND GPC.XN_TYPE IS NULL)			
			--GENERATE ERROR IF WHOLESALE ACCOUNT IS NOT SPECIFIED.
			OR ((ISNULL(PAC.WSLAC,'') = '' OR ISNULL(PAC.WSLAC,'') = '0000000000')  AND  INM.INV_DT<@DGSTCUTOFFDATE)	
			--GENERATE ERROR IF TAX IS TO BE POSTED SEPARATELY AND NO TAX ACCOUNT IS SPECIFIED.
			OR (IND.ITEM_TAX_PERCENTAGE<>0  AND  INM.INV_DT<@DGSTCUTOFFDATE 
				AND ((ISNULL(PAC.TAXAC,'')='' OR PAC.TAXAC='0000000000'))) 
			--GENERATE ERROR IF FREIGHT SHOULD BE SEPARATELY POSTED AND FREIGHT ACCOUNT IS NOT SPECIFIED.
			OR (INM.FREIGHT<>0 AND @BPOSTFREIGHTSEPARATELY=1
				 AND (@CFREIGHTACCODE = '' OR @CFREIGHTACCODE = '0000000000'))
			--GENERATE ERROR IF OTHER CHARGES SHOULD BE SEPARATELY POSTED AND OTHER CHARGES ACCOUNT IS NOT SPECIFIED.
			OR (INM.OTHER_CHARGES<>0 AND @BPOSTOTHERCHARGESSEPARATELY=1
				 AND (@COTHERCHARGESACCODE='' OR @COTHERCHARGESACCODE='0000000000'))
			--GENERATE ERROR IF OCTROI SHOULD BE SEPARATELY POSTED AND OTHER OCTROI ACCOUNT IS NOT SPECIFIED.
			OR (INM.OCTROI_AMOUNT<>0 AND @BPOSTOCTROISEPARATELY=1 AND (@COCTROIACCODE='' OR @COCTROIACCODE='0000000000'))
			--GENERATE ERROR IF INSURANCE SHOULD BE SEPARATELY POSTED AND OTHER INSURANCE ACCOUNT IS NOT SPECIFIED.
			OR (INM.INSURANCE<>0 AND @BPOSTINSURANCESEPARATELY=1 
				 AND (@CINSURANCEACCODE='' OR @CINSURANCEACCODE='0000000000'))
			--GENERATE ERROR IF ROUNDOFF SHOULD BE SEPARATELY POSTED AND ROUNDOFF ACCOUNT IS NOT SPECIFIED.
			OR (INM.ROUND_OFF<>0 AND (@BPOSTROUNDOFFSEPARATELY=1 OR  INM.INV_DT>=@DGSTCUTOFFDATE) AND (@CROUNDOFFACCODE = '' OR @CROUNDOFFACCODE = '0000000000'))
			--GENERATE ERROR IF A/C RELATED TO CASH/CARD NOT DEFINED IN RETAIL SALES CONFIGURATION
			OR (ISNULL(PXD.PAYMODE_CODE,'')='0000000' AND ISNULL(SCM.CASH_AC_CODE,'') IN ('','0000000000'))
			OR (ISNULL(PM.PAYMODE_GRP_CODE,'')='0000002' AND ISNULL(SCD.BANK_AC_CODE,'') IN ('','0000000000'))
			OR (ISNULL(PM.PAYMODE_GRP_CODE,'')='0000002' AND ISNULL(SCD.COMMISSION_AC_CODE,'') IN ('','0000000000') AND PM.COMMISSION_PERCENTAGE<>0)
			--GENERATE ERROR IF WHOLESALE IS NOT CANCELLED AND IT HAS TOTAL AMOUNT=0
			OR INM.NET_AMOUNT=0 )
	        UNION ALL
	        SELECT DISTINCT INM.INV_ID,INM.INV_DT,INM.INV_NO,'WSL' AS XN_TYPE
				  ,(CASE 
						 WHEN (ISNULL(PAC.SALE_AC_CODE,'') = '' OR ISNULL(PAC.SALE_AC_CODE,'') = '0000000000')  AND INM.INV_DT<@DGSTCUTOFFDATE
								THEN 'WHOLESALE A/C NOT SPECIFIED'
						 WHEN ((ISNULL(PAC.TAX_AC_CODE,'')='' OR PAC.TAX_AC_CODE='0000000000'))  AND INM.INV_DT<@DGSTCUTOFFDATE 
								THEN 'TAX A/C NOT SPECIFIED FOR LOCAL INVOICE.'
						 WHEN (INM.FREIGHT<>0 AND @BPOSTFREIGHTSEPARATELY=1
								 AND (@CFREIGHTACCODE = '' OR @CFREIGHTACCODE = '0000000000'))
								THEN 'FREIGHT A/C NOT SPECIFIED'
						 WHEN (INM.OTHER_CHARGES<>0 AND @BPOSTOTHERCHARGESSEPARATELY=1
								 AND (@COTHERCHARGESACCODE='' OR @COTHERCHARGESACCODE='0000000000'))
								THEN 'OTHER CHARGES A/C NOT SPECIFIED' 
						 WHEN (INM.OCTROI_AMOUNT<>0 AND @BPOSTOCTROISEPARATELY=1 AND (@COCTROIACCODE='' OR @COCTROIACCODE='0000000000'))
								THEN 'OCTROI A/C NOT SPECIFIED' 		
						 WHEN (INM.INSURANCE<>0 AND @BPOSTINSURANCESEPARATELY=1
								 AND (@CINSURANCEACCODE='' OR @CINSURANCEACCODE='0000000000'))
								THEN 'INSURANCE A/C NOT SPECIFIED' 				
						 WHEN (INM.ROUND_OFF<>0 AND (@BPOSTROUNDOFFSEPARATELY=1 OR INM.INV_DT>=@DGSTCUTOFFDATE) AND (@CROUNDOFFACCODE = '' OR @CROUNDOFFACCODE = '0000000000'))
								THEN 'ROUND OFF A/C NOT SPECIFIED'		
						 WHEN (INM.NET_AMOUNT=0) 								
								THEN 'ZERO VALUE WHOLESALE'
						 ELSE 'UNIDENTIFIED ERROR' END) AS ERR_DESC		
			FROM INM01106 INM
			JOIN IND01106 IND ON INM.INV_ID=IND.INV_ID
			JOIN #WSLTABLE TPT ON INM.INV_ID=TPT.MEMO_ID AND TPT.MODE='WSL'
			LEFT OUTER JOIN WSLCONFIGDET_1 PAC ON IND.ITEM_TAX_PERCENTAGE=PAC.TAX_PERCENTAGE
			WHERE INM.INV_TYPE=2 AND /*FOR LOCAL INVOICES*/
			(
				--GENERATE ERROR IF WHOLESALE ACCOUNT IS NOT SPECIFIED.
			  ((ISNULL(PAC.SALE_AC_CODE,'') = '' OR ISNULL(PAC.SALE_AC_CODE,'') = '0000000000')  
				AND INM.INV_DT<@DGSTCUTOFFDATE)	
			--GENERATE ERROR IF TAX IS TO BE POSTED SEPARATELY AND NO TAX ACCOUNT IS SPECIFIED.
			OR (((ISNULL(PAC.TAX_AC_CODE,'')='' OR PAC.TAX_AC_CODE='0000000000')) AND INM.INV_DT<@DGSTCUTOFFDATE) 
			--GENERATE ERROR IF FREIGHT SHOULD BE SEPARATELY POSTED AND FREIGHT ACCOUNT IS NOT SPECIFIED.
			OR (INM.FREIGHT<>0 AND @BPOSTFREIGHTSEPARATELY=1
				 AND (@CFREIGHTACCODE = '' OR @CFREIGHTACCODE = '0000000000'))
			--GENERATE ERROR IF OTHER CHARGES SHOULD BE SEPARATELY POSTED AND OTHER CHARGES ACCOUNT IS NOT SPECIFIED.
			OR (INM.OTHER_CHARGES<>0 AND @BPOSTOTHERCHARGESSEPARATELY=1
				 AND (@COTHERCHARGESACCODE='' OR @COTHERCHARGESACCODE='0000000000'))
			--GENERATE ERROR IF OCTROI SHOULD BE SEPARATELY POSTED AND OTHER OCTROI ACCOUNT IS NOT SPECIFIED.
			OR (INM.OCTROI_AMOUNT<>0 AND @BPOSTOCTROISEPARATELY=1 AND (@COCTROIACCODE='' OR @COCTROIACCODE='0000000000'))
			--GENERATE ERROR IF INSURANCE SHOULD BE SEPARATELY POSTED AND OTHER INSURANCE ACCOUNT IS NOT SPECIFIED.
			OR (INM.INSURANCE<>0 AND @BPOSTINSURANCESEPARATELY=1
				 AND (@CINSURANCEACCODE='' OR @CINSURANCEACCODE='0000000000'))
			--GENERATE ERROR IF ROUNDOFF SHOULD BE SEPARATELY POSTED AND ROUNDOFF ACCOUNT IS NOT SPECIFIED.
			OR (INM.ROUND_OFF<>0 AND (@BPOSTROUNDOFFSEPARATELY=1 OR INM.INV_DT>=@DGSTCUTOFFDATE) AND (@CROUNDOFFACCODE = '' OR @CROUNDOFFACCODE = '0000000000'))
			--GENERATE ERROR IF WHOLESALE IS NOT CANCELLED AND IT HAS TOTAL AMOUNT=0
			OR INM.NET_AMOUNT=0 )
			
	        SET @CSTEP = 350
	        --DELETE INV_ID FROM TEPM TABLE WHICH HAVE SOME ERROR
	        --DELETE A 
	        --FROM #WSLTABLE A 
	        --JOIN @ERRORS B ON A.MEMO_ID = B.XN_ID AND A.MODE=B.XN_TYPE
	        
	        --SELECT COUNT(*) FROM #WSLTABLE
	        SET @CSTEP = 360
	        IF OBJECT_ID('TEMPDB..#V_PROCESS','U') IS NOT NULL
				DROP TABLE #V_PROCESS
			
			SET @CSTEP = 370
			/*
				BILL_LEVEL_TAX_METHOD : 1 IS EXCLUSIVE
										2 IS INCLUSIVE
														
			*/
						
			--A SINGLE WHOLESALE MEMO CAN HAVE MULTIPLE WHOLESALE AND TAX ACCOUNTS BASED ON MULTIPLE FORMS
		 	SELECT   PM.INV_ID
		 			,PAC.WSLAC AS WSLAC
		 			,PACMST.EXCISEDUTYAC AS EXCISEDUTYAC
		 			,PAC.TAXAC AS TAXAC
		 			--FOR INCLUSIVE TAX DEDUCE THE AMOUNT FROM THE SUBTOTAL AS TAX WOULD BE POSTED SEPARATELY
		 			,PM.AC_CODE
		 			,PM.NET_AMOUNT AS TOTAL_AMOUNT
		 			,PM.INV_NO
		 			,PM.INV_DT
		 			,pm.location_Code  AS DEPT_ID 
		 			,PM.CREDIT_DAYS
		 			,PM.CANCELLED
		 			,INV_MODE
		 			,SUM(PD.QUANTITY) AS QUANTITY
		 			,SUM(PD.RFNET) AS BILL_AMOUNT
		 			,SUM(PD.DISCOUNT_AMOUNT+((CONVERT(NUMERIC(18,4),PM.DISCOUNT_AMOUNT)/PM.SUBTOTAL)*(PD.NET_RATE*PD.QUANTITY))) 
		 			 AS DISCOUNTAMOUNT
					,FREIGHT_TAXABLE_VALUE AS FREIGHT
		 			,PM.OTHER_CHARGES_TAXABLE_VALUE AS OTHERCHARGES
		 			,SUM(((CONVERT(NUMERIC(18,4),PM.OCTROI_AMOUNT)/PM.SUBTOTAL)*(PD.NET_RATE*PD.QUANTITY))) AS OCTROIAMOUNT
		 			,PM.INSURANCE_TAXABLE_VALUE AS INSURANCE
		 			,SUM(PD.ITEM_EXCISE_DUTY_AMOUNT) AS EXCISEDUTYAMOUNT
		 			,SUM((CASE WHEN PD.DISCOUNT_AMOUNT<>0 THEN ISNULL(ITEM_ROUND_OFF,0) ELSE 0 END)*-1) AS ROUNDOFF
		 			,SUM(CASE WHEN INV_DT<@DGSTCUTOFFDATE THEN  ((PD.RATE*PD.QUANTITY)-(CASE WHEN PM.BILL_LEVEL_TAX_METHOD=2 
		 					THEN PD.ITEM_TAX_AMOUNT ELSE 0 END)) ELSE XN_VALUE_WITHOUT_GST END) AS WSLAMOUNT
					,CONVERT(NUMERIC(10,2),0) AS WSLAMOUNT_SUBTOTAL		 							 			
		 			,SUM(PD.ITEM_TAX_AMOUNT) AS TAXAMOUNT
		 			,'WSL' AS XN_TYPE
		 			,SUM(IGST_AMOUNT) AS IGST_AMOUNT
		 			,SUM(CGST_AMOUNT) AS CGST_AMOUNT
		 			,SUM(SGST_AMOUNT) AS SGST_AMOUNT
		 			,FREIGHT_GST_PERCENTAGE
		 			,OTHER_CHARGES_GST_PERCENTAGE
		 			,INSURANCE_GST_PERCENTAGE
		 			,FREIGHT_IGST_AMOUNT
		 			,FREIGHT_CGST_AMOUNT
		 			,FREIGHT_SGST_AMOUNT
		 			,OTHER_CHARGES_IGST_AMOUNT
		 			,OTHER_CHARGES_CGST_AMOUNT
		 			,OTHER_CHARGES_SGST_AMOUNT		 	
		 			,INSURANCE_IGST_AMOUNT
		 			,INSURANCE_CGST_AMOUNT
		 			,INSURANCE_SGST_AMOUNT		 			 					
		 			,LOCS.GST_STATE_CODE AS LOCS_GST_STATE_CODE
		 			,LMP.AC_GST_STATE_CODE AS PARTY_GST_STATE_CODE		 			
		 			,LOCT.GST_STATE_CODE AS LOCT_GST_STATE_CODE		 					 					 			
		 			,IGST_XN_AC_CODE
		 			,LOCAL_GST_XN_AC_CODE
		 			,IGST_TAX_AC_CODE
		 			,CGST_TAX_AC_CODE
		 			,SGST_TAX_AC_CODE
 			        ,(PM.FREIGHT_TAXABLE_VALUE+(CASE WHEN PM.OH_TAX_METHOD=2 THEN PM.FREIGHT_IGST_AMOUNT+PM.FREIGHT_CGST_AMOUNT+PM.FREIGHT_SGST_AMOUNT ELSE 0 END)-PM.FREIGHT) AS FREIGHT_RO
			        ,(PM.OTHER_CHARGES_TAXABLE_VALUE+(CASE WHEN PM.OH_TAX_METHOD=2 THEN PM.OTHER_CHARGES_IGST_AMOUNT+PM.OTHER_CHARGES_CGST_AMOUNT+PM.OTHER_CHARGES_SGST_AMOUNT ELSE 0 END)-PM.OTHER_CHARGES) AS OTHER_CHARGES_RO       
			        ,(PM.INSURANCE_TAXABLE_VALUE+(CASE WHEN PM.OH_TAX_METHOD=2 THEN PM.INSURANCE_IGST_AMOUNT+PM.INSURANCE_CGST_AMOUNT+PM.INSURANCE_SGST_AMOUNT ELSE 0 END)-PM.INSURANCE) AS INSURANCE_RO
			        ,ROUND_OFF,MANUAL_ROUNDOFF       
	 		INTO #V_PROCESS
			FROM INM01106 PM 
			JOIN IND01106 PD ON PM.INV_ID=PD.INV_ID
			JOIN #WSLTABLE PT ON PT.MEMO_ID = PM.INV_ID AND PT.MODE='WSL'
			JOIN LOCATION LOCS ON LOCS.DEPT_ID=pm.location_Code 
			JOIN AREA AR ON LOCS.AREA_CODE=AR.AREA_CODE
			JOIN CITY CT ON AR.CITY_CODE=CT.CITY_CODE
			JOIN FORM FM ON PD.ITEM_FORM_ID = FM.FORM_ID 
			JOIN WSLCONFIGDET PAC ON FM.FORM_ID=PAC.FORMID 
			JOIN WSLCONFIGMST PACMST ON 1=1
			LEFT OUTER JOIN LOCATION LOCT ON LOCT.DEPT_ID=PM.PARTY_DEPT_ID
			LEFT OUTER JOIN LMP01106 LMP ON LMP.AC_CODE=PM.AC_CODE
			LEFT OUTER JOIN GST_POSTING_CONFIG GPC ON GPC.GST_PERCENTAGE=PD.GST_PERCENTAGE AND GPC.XN_TYPE='WSL'
			WHERE PM.NET_AMOUNT<>0 	AND PM.INV_DT<@DGSTCUTOFFDATE /*OUTSTAION INVOICE*/	
		    GROUP BY PM.INV_ID
		 			,PAC.WSLAC
		 			,PAC.TAXAC
		 			,PM.AC_CODE
		 			,PM.NET_AMOUNT
		 			,PM.INV_NO 
		 			,PM.INV_DT
		 			,PM.CREDIT_DAYS
		 			,PM.CANCELLED
		 			,INV_MODE
		 			,PACMST.EXCISEDUTYAC
		 			,FREIGHT
		 			,OTHER_CHARGES
		 			,INSURANCE
					,FREIGHT_TAXABLE_VALUE
		 			,OTHER_CHARGES_TAXABLE_VALUE
		 			,INSURANCE_TAXABLE_VALUE
		 			,FREIGHT_GST_PERCENTAGE
		 			,INSURANCE_GST_PERCENTAGE
		 			,OTHER_CHARGES_GST_PERCENTAGE
		 			,FREIGHT_IGST_AMOUNT
		 			,FREIGHT_CGST_AMOUNT
		 			,FREIGHT_SGST_AMOUNT
		 			,OTHER_CHARGES_IGST_AMOUNT
		 			,OTHER_CHARGES_CGST_AMOUNT
		 			,OTHER_CHARGES_SGST_AMOUNT		 			
		 			,INSURANCE_IGST_AMOUNT
		 			,INSURANCE_CGST_AMOUNT
		 			,INSURANCE_SGST_AMOUNT		 			 							 			
		 			,LOCS.GST_STATE_CODE
		 			,LMP.AC_GST_STATE_CODE
		 			,LOCT.GST_STATE_CODE
		 			,IGST_XN_AC_CODE
		 			,LOCAL_GST_XN_AC_CODE
		 			,IGST_TAX_AC_CODE
		 			,CGST_TAX_AC_CODE
		 			,SGST_TAX_AC_CODE
	 				,OH_TAX_METHOD
	 				,ROUND_OFF,MANUAL_ROUNDOFF
			UNION ALL
			SELECT   PM.INV_ID
		 			,PAC.SALE_AC_CODE AS WSLAC
		 			,PACMST.EXCISEDUTYAC AS EXCISEDUTYAC
		 			,PAC.TAX_AC_CODE AS TAXAC
		 			--FOR INCLUSIVE TAX DEDUCE THE AMOUNT FROM THE SUBTOTAL AS TAX WOULD BE POSTED SEPARATELY
		 			,PM.AC_CODE
		 			,PM.NET_AMOUNT AS TOTAL_AMOUNT
		 			,PM.INV_NO
		 			,PM.INV_DT
		 			,pm.location_Code  AS DEPT_ID 
		 			,PM.CREDIT_DAYS
		 			,PM.CANCELLED
		 			,INV_MODE
		 			,SUM(PD.QUANTITY) AS QUANTITY
		 			,SUM(PD.RFNET) AS BILL_AMOUNT
		 			,SUM(PD.DISCOUNT_AMOUNT+((CONVERT(NUMERIC(18,4),PM.DISCOUNT_AMOUNT)/PM.SUBTOTAL)*(PD.NET_RATE*PD.QUANTITY))) 
		 			 AS DISCOUNTAMOUNT
		 			,FREIGHT
		 			,PM.OTHER_CHARGES AS OTHERCHARGES
		 			,SUM(((CONVERT(NUMERIC(18,4),PM.OCTROI_AMOUNT)/PM.SUBTOTAL)*(PD.NET_RATE*PD.QUANTITY))) AS OCTROIAMOUNT
		 			,PM.INSURANCE
		 			,SUM(PD.ITEM_EXCISE_DUTY_AMOUNT) AS EXCISEDUTYAMOUNT
		 			,SUM((CASE WHEN PD.DISCOUNT_AMOUNT<>0 THEN ISNULL(ITEM_ROUND_OFF,0) ELSE 0 END)*-1) AS ROUNDOFF
		 			,SUM((PD.RATE*PD.QUANTITY)-(CASE WHEN PM.BILL_LEVEL_TAX_METHOD=2 
		 					THEN PD.ITEM_TAX_AMOUNT ELSE 0 END)) AS WSLAMOUNT
					,SUM((PD.NET_RATE*PD.QUANTITY)-(CASE WHEN PM.BILL_LEVEL_TAX_METHOD=2 
		 					THEN PD.ITEM_TAX_AMOUNT ELSE 0 END)) AS WSLAMOUNT_SUBTOTAL		 					
		 			,SUM(PD.ITEM_TAX_AMOUNT) AS TAXAMOUNT
		 			,'WSL' AS XN_TYPE
		 			,CONVERT(NUMERIC(10,2),0) AS IGST_AMOUNT
		 			,CONVERT(NUMERIC(10,2),0) AS CGST_AMOUNT
		 			,CONVERT(NUMERIC(10,2),0) AS SGST_AMOUNT
		 			,CONVERT(NUMERIC(6,2),0) AS FREIGHT_GST_PERCENTAGE
		 			,CONVERT(NUMERIC(6,2),0) AS OTHER_CHARGES_GST_PERCENTAGE
		 			,CONVERT(NUMERIC(6,2),0) AS INSURANCE_GST_PERCENTAGE
		 			,CONVERT(NUMERIC(10,2),0) AS FREIGHT_IGST_AMOUNT
		 			,CONVERT(NUMERIC(10,2),0) AS FREIGHT_CGST_AMOUNT
		 			,CONVERT(NUMERIC(10,2),0) AS FREIGHT_SGST_AMOUNT
		 			,CONVERT(NUMERIC(10,2),0) AS OTHER_CHARGES_IGST_AMOUNT
		 			,CONVERT(NUMERIC(10,2),0) AS OTHER_CHARGES_CGST_AMOUNT
		 			,CONVERT(NUMERIC(10,2),0) AS OTHER_CHARGES_SGST_AMOUNT
		 			,CONVERT(NUMERIC(10,2),0) AS INSURANCE_IGST_AMOUNT
		 			,CONVERT(NUMERIC(10,2),0) AS INSURANCE_CGST_AMOUNT
		 			,CONVERT(NUMERIC(10,2),0) AS INSURANCE_SGST_AMOUNT		 			
		 			,CONVERT(VARCHAR(5),'') AS LOCS_GST_STATE_CODE
		 			,CONVERT(VARCHAR(5),'') AS PARTY_GST_STATE_CODE
		 			,CONVERT(VARCHAR(5),'') AS LOCT_GST_STATE_CODE		 			
		 			,'' AS IGST_XN_AC_CODE
		 			,'' AS LOCAL_GST_XN_AC_CODE
		 			,'' AS IGST_TAX_AC_CODE
		 			,'' AS CGST_TAX_AC_CODE
		 			,'' AS SGST_TAX_AC_CODE
 			        ,CONVERT(NUMERIC(6,2),0) AS FREIGHT_RO
			        ,CONVERT(NUMERIC(6,2),0) AS OTHER_CHARGES_RO       
			        ,CONVERT(NUMERIC(6,2),0) AS INSURANCE_RO       
		 			,ROUND_OFF,MANUAL_ROUNDOFF
			FROM INM01106 PM 
			JOIN IND01106 PD ON PM.INV_ID=PD.INV_ID
			JOIN #WSLTABLE PT ON PT.MEMO_ID = PM.INV_ID AND PT.MODE='WSL'
			JOIN LOCATION LOCS ON LOCS.DEPT_ID=pm.location_Code 
			JOIN AREA AR ON LOCS.AREA_CODE=AR.AREA_CODE
			JOIN CITY CT ON AR.CITY_CODE=CT.CITY_CODE
			JOIN WSLCONFIGDET_1 PAC ON PD.ITEM_TAX_PERCENTAGE=PAC.TAX_PERCENTAGE
			JOIN WSLCONFIGMST PACMST ON 1=1
			WHERE PM.NET_AMOUNT<>0 AND PM.INV_DT<@DGSTCUTOFFDATE /*LOCAL INVOICE*/	
		    GROUP BY PM.INV_ID
		 			,PAC.SALE_AC_CODE
		 			,PAC.TAX_AC_CODE
		 			,PM.AC_CODE
		 			,PM.NET_AMOUNT
		 			,PM.INV_NO 
		 			,PM.INV_DT
		 			,PM.CREDIT_DAYS
		 			,PM.CANCELLED
		 			,PM.FREIGHT
		 			,PM.OTHER_CHARGES
		 			,PM.INSURANCE
					,PACMST.EXCISEDUTYAC
					,INV_MODE
					,ROUND_OFF,MANUAL_ROUNDOFF
						
		CREATE INDEX IX_V_PROCESS_RM_ID ON #V_PROCESS(INV_ID,XN_TYPE)
		
		--SELECT 'CHECK VPROCESS',* FROM #V_PROCESS
	
		SELECT @CINVID='',@CXNTYPE='',@CAC_CODE='',@NCTR=1
		SET @CSTEP = 380
		WHILE EXISTS(SELECT TOP 1 'U' FROM #V_PROCESS)
		BEGIN
			SET @CSTEP = 390
			SELECT TOP 1 @CINVNO=INV_NO,@DLASTINVDT=INV_DT, @CINVID=INV_ID,@CXNTYPE=XN_TYPE,@CAC_CODE=AC_CODE,
						 @CWSLAC=WSLAC,@CSLOCGSTSTATECODE=LOCS_GST_STATE_CODE,@CTLOCGSTSTATECODE=LOCT_GST_STATE_CODE,
						 @CPARTYGSTSTATECODE=PARTY_GST_STATE_CODE,@NINVMODE=INV_MODE,
						 @NROUNDOFF=ROUND_OFF+ROUNDOFF,@BMANUALROFF=ISNULL(MANUAL_ROUNDOFF,0) FROM #V_PROCESS
			
			SET @CSTEP = 400

			SET @BGSTBILL=0
			IF @DLASTINVDT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>''
				SET @BGSTBILL=1
			
			--WHOLESALE ACCOUNT SHOULD BE CREDITED WITH THE RESPECTIVE SUBTOTAL
			IF @BGSTBILL=0
				INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT,CRDAYS ) 
				SELECT INV_ID,INV_NO,WSLAC,-WSLAMOUNT,CREDIT_DAYS
				FROM #V_PROCESS
				WHERE INV_ID=@CINVID AND WSLAMOUNT<>0
			ELSE
				INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT ) 
				SELECT INV_ID,IGST_XN_AC_CODE,-WSLAMOUNT
				FROM #V_PROCESS
				WHERE INV_ID=@CINVID AND ((@NINVMODE=1 AND @CSLOCGSTSTATECODE<>@CPARTYGSTSTATECODE) OR
										  (@NINVMODE=2 AND @CSLOCGSTSTATECODE<>@CTLOCGSTSTATECODE))	
				UNION ALL
				SELECT INV_ID,LOCAL_GST_XN_AC_CODE,-WSLAMOUNT
				FROM #V_PROCESS
				WHERE INV_ID=@CINVID AND ((@NINVMODE=1 AND @CSLOCGSTSTATECODE=@CPARTYGSTSTATECODE) OR
										 (@NINVMODE=2 AND @CSLOCGSTSTATECODE=@CTLOCGSTSTATECODE))
						
			SET @CSTEP = 410
			--TAX AMOUNT SHOULD BE CREDITED WITH THE RESPECTIVE TAX_AMOUNT
			IF @BGSTBILL=0
				INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT,CRDAYS ) 
				SELECT INV_ID,INV_NO,TAXAC,-TAXAMOUNT
				,CREDIT_DAYS
				FROM #V_PROCESS
				WHERE INV_ID=@CINVID AND TAXAMOUNT<>0
			ELSE
				INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT ) 
				SELECT INV_ID,IGST_TAX_AC_CODE,-IGST_AMOUNT
				FROM #V_PROCESS
				WHERE INV_ID=@CINVID AND ((@NINVMODE=1 AND @CSLOCGSTSTATECODE<>@CPARTYGSTSTATECODE) OR
										  (@NINVMODE=2 AND @CSLOCGSTSTATECODE<>@CTLOCGSTSTATECODE))	
				UNION ALL
				SELECT INV_ID,CGST_TAX_AC_CODE,-CGST_AMOUNT
				FROM #V_PROCESS
				WHERE INV_ID=@CINVID AND ((@NINVMODE=1 AND @CSLOCGSTSTATECODE=@CPARTYGSTSTATECODE) OR
										 (@NINVMODE=2 AND @CSLOCGSTSTATECODE=@CTLOCGSTSTATECODE))
				UNION ALL
				SELECT INV_ID,SGST_TAX_AC_CODE,-SGST_AMOUNT
				FROM #V_PROCESS
				WHERE INV_ID=@CINVID AND ((@NINVMODE=1 AND @CSLOCGSTSTATECODE=@CPARTYGSTSTATECODE) OR
										  (@NINVMODE=2 AND @CSLOCGSTSTATECODE=@CTLOCGSTSTATECODE))
			
			
						
										  						
			IF @BGSTBILL=0
				INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT,CRDAYS ) 
				SELECT INV_ID,INV_NO,(CASE WHEN @BPOSTDISCOUNTSEPARATELY=1 THEN @CDISCACCODE ELSE WSLAC END),DISCOUNTAMOUNT
				,CREDIT_DAYS
				FROM #V_PROCESS
				WHERE INV_ID=@CINVID AND DISCOUNTAMOUNT<>0

			
			SET @CSTEP = 430

			--FREIGHT AMOUNT SHOULD BE CREDITED
			INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT,CRDAYS ) 
			SELECT TOP 1 INV_ID,INV_NO,(CASE WHEN @BPOSTFREIGHTSEPARATELY=1 THEN @CFREIGHTACCODE ELSE WSLAC END),-FREIGHT
			,CREDIT_DAYS
			FROM #V_PROCESS
			WHERE INV_ID=@CINVID AND FREIGHT<>0 AND (@BPOSTFREIGHTSEPARATELY=1 OR @BGSTBILL=0)
			
			SET @CSTEP = 440
			--OTHER CHARGES AMOUNT SHOULD BE CREDITED
			INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT,CRDAYS ) 
			SELECT TOP 1 INV_ID,INV_NO,(CASE WHEN @BPOSTOTHERCHARGESSEPARATELY=1 THEN @COTHERCHARGESACCODE ELSE WSLAC END),-OTHERCHARGES
			,CREDIT_DAYS
			FROM #V_PROCESS
			WHERE INV_ID=@CINVID AND OTHERCHARGES<>0 AND (@BPOSTOTHERCHARGESSEPARATELY=1 OR @BGSTBILL=0)
		
			SET @CSTEP = 450
			--INSURANCE AMOUNT SHOULD BE CREDITED
			INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT,CRDAYS ) 
			SELECT TOP 1 INV_ID,INV_NO,(CASE WHEN @BPOSTINSURANCESEPARATELY=1 THEN @CINSURANCEACCODE ELSE WSLAC END)
				  ,-INSURANCE,CREDIT_DAYS
			FROM #V_PROCESS
			WHERE INV_ID=@CINVID AND INSURANCE<>0 AND (@BPOSTINSURANCESEPARATELY=1 OR @BGSTBILL=0)
						
			SET @CSTEP = 460
			--OCTROI AMOUNT SHOULD BE CREDITED
			INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT,CRDAYS ) 
			SELECT INV_ID,INV_NO,(CASE WHEN @BPOSTOCTROISEPARATELY=1 THEN @COCTROIACCODE ELSE WSLAC END)
				  ,-OCTROIAMOUNT,CREDIT_DAYS
			FROM #V_PROCESS
			WHERE INV_ID=@CINVID AND OCTROIAMOUNT<>0

			
			SET @NROLIMIT=(CASE WHEN @BMANUALROFF=1 AND ABS(@NROUNDOFF)>.99 THEN ABS(@NROUNDOFF) ELSE 1 END)
			---- CHHABRA555 INVOICE%OLWE-01349 DATED :31-08-2017 WAS HAVING R/O DIFFERENCE OF UPTO RE.1
			--IF @CINVID='SS01118SS00000076'
			--SELECT 'CHECK ROFF',@NROLIMIT AS RO_LIMIT,A.INV_ID,A.INV_NO,
			--SUM(CASE WHEN WSLAMOUNT_SUBTOTAL<>0 THEN WSLAMOUNT_SUBTOTAL ELSE WSLAMOUNT END) AS WSLAMT,
			--SUM(ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(TAXAMOUNT,0)) AS TAX,
			--SUM(ROUNDOFF) AS ROUNDOFF,
			--	B.FREIGHT+(CASE WHEN B.OH_TAX_METHOD=1 THEN ISNULL(B.FREIGHT_IGST_AMOUNT,0)+ISNULL(B.FREIGHT_CGST_AMOUNT,0)+ISNULL(B.FREIGHT_SGST_AMOUNT,0) ELSE 0 END) AS FREIGHT,
			--	B.OTHER_CHARGES+(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(B.OTHER_CHARGES_IGST_AMOUNT,0)+
			--	ISNULL(B.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_SGST_AMOUNT,0) ELSE 0 END) AS OC,
			--	B.INSURANCE+(CASE WHEN B.OH_TAX_METHOD=1 THEN ISNULL(B.INSURANCE_IGST_AMOUNT,0)+ISNULL(B.INSURANCE_CGST_AMOUNT,0)+ISNULL(B.INSURANCE_SGST_AMOUNT,0) ELSE 0 END) AS INS,
			--	B.DISCOUNT_AMOUNT,
			--	(SUM((CASE WHEN WSLAMOUNT_SUBTOTAL<>0 THEN WSLAMOUNT_SUBTOTAL ELSE WSLAMOUNT END) +ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+
			--				 ISNULL(TAXAMOUNT,0)+ROUNDOFF)+
			--	-B.DISCOUNT_AMOUNT+B.FREIGHT+(CASE WHEN B.OH_TAX_METHOD=1 THEN ISNULL(B.FREIGHT_IGST_AMOUNT,0)+ISNULL(B.FREIGHT_CGST_AMOUNT,0)+ISNULL(B.FREIGHT_SGST_AMOUNT,0) ELSE 0 END)+
			--	B.OTHER_CHARGES+(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(B.OTHER_CHARGES_IGST_AMOUNT,0)+
			--	ISNULL(B.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_SGST_AMOUNT,0) ELSE 0 END)+
			--	B.INSURANCE+(CASE WHEN B.OH_TAX_METHOD=1 THEN ISNULL(B.INSURANCE_IGST_AMOUNT,0)+
			--	ISNULL(B.INSURANCE_CGST_AMOUNT,0)+ISNULL(B.INSURANCE_SGST_AMOUNT,0) ELSE 0 END))-B.NET_AMOUNT AS RO
								
				
			--FROM #V_PROCESS A
			--JOIN INM01106 B ON A.INV_ID=B.INV_ID
			--WHERE A.INV_ID=@CINVID
			--GROUP BY WSLAC,A.INV_ID,A.INV_NO,B.FREIGHT,B.OTHER_CHARGES,B.INSURANCE,B.OH_TAX_METHOD,
			--B.FREIGHT_IGST_AMOUNT,B.FREIGHT_CGST_AMOUNT,B.FREIGHT_SGST_AMOUNT,
			--B.OTHER_CHARGES_IGST_AMOUNT,B.OTHER_CHARGES_CGST_AMOUNT,B.OTHER_CHARGES_SGST_AMOUNT,
			--B.INSURANCE_IGST_AMOUNT,B.INSURANCE_CGST_AMOUNT,B.INSURANCE_SGST_AMOUNT,B.NET_AMOUNT
			--,B.DISCOUNT_AMOUNT
			SET @CSTEP = 465
			
			
			----ROUNDOFF AMOUNT SHOULD BE CREDITED
			--INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT ) 
			--SELECT A.INV_ID,A.INV_NO,(CASE WHEN @BPOSTROUNDOFFSEPARATELY=1 OR @BGSTBILL=1 THEN @CROUNDOFFACCODE ELSE WSLAC END),
			--((SUM(WSLAMOUNT +ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+
			--				 ISNULL(TAXAMOUNT,0))+
			--	B.FREIGHT+(CASE WHEN B.OH_TAX_METHOD=1 THEN ISNULL(B.FREIGHT_IGST_AMOUNT,0)+ISNULL(B.FREIGHT_CGST_AMOUNT,0)+ISNULL(B.FREIGHT_SGST_AMOUNT,0) ELSE 0 END)+
			--	B.OTHER_CHARGES+(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(B.OTHER_CHARGES_IGST_AMOUNT,0)+
			--	ISNULL(B.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_SGST_AMOUNT,0) ELSE 0 END)+
			--	B.INSURANCE-B.DISCOUNT_AMOUNT+(CASE WHEN B.OH_TAX_METHOD=1 THEN ISNULL(B.INSURANCE_IGST_AMOUNT,0)+ISNULL(B.INSURANCE_CGST_AMOUNT,0)+ISNULL(B.INSURANCE_SGST_AMOUNT,0) ELSE 0 END))-B.NET_AMOUNT
			--	) AS AMOUNT
			--FROM #V_PROCESS A
			--JOIN INM01106 B ON A.INV_ID=B.INV_ID
			--WHERE A.INV_ID=@CINVID
			--GROUP BY WSLAC,A.INV_ID,A.INV_NO,B.FREIGHT,B.OTHER_CHARGES,B.INSURANCE,B.OH_TAX_METHOD,
			--B.FREIGHT_IGST_AMOUNT,B.FREIGHT_CGST_AMOUNT,B.FREIGHT_SGST_AMOUNT,
			--B.OTHER_CHARGES_IGST_AMOUNT,B.OTHER_CHARGES_CGST_AMOUNT,B.OTHER_CHARGES_SGST_AMOUNT,
			--B.INSURANCE_IGST_AMOUNT,B.INSURANCE_CGST_AMOUNT,B.INSURANCE_SGST_AMOUNT,B.NET_AMOUNT,
			--B.DISCOUNT_AMOUNT
			--HAVING 
			--ABS((SUM(WSLAMOUNT+ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+
			--				 ISNULL(TAXAMOUNT,0))+
			--	-B.DISCOUNT_AMOUNT+B.FREIGHT+(CASE WHEN B.OH_TAX_METHOD=1 THEN ISNULL(B.FREIGHT_IGST_AMOUNT,0)+ISNULL(B.FREIGHT_CGST_AMOUNT,0)+ISNULL(B.FREIGHT_SGST_AMOUNT,0) ELSE 0 END)+
			--	B.OTHER_CHARGES+(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(B.OTHER_CHARGES_IGST_AMOUNT,0)+
			--	ISNULL(B.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_SGST_AMOUNT,0) ELSE 0 END)+
			--	B.INSURANCE+(CASE WHEN B.OH_TAX_METHOD=1 THEN ISNULL(B.INSURANCE_IGST_AMOUNT,0)+ISNULL(B.INSURANCE_CGST_AMOUNT,0)+ISNULL(B.INSURANCE_SGST_AMOUNT,0) ELSE 0 END))-B.NET_AMOUNT
			--	)<=@NROLIMIT
			--UNION ALL
			--SELECT TOP 1 INV_ID,INV_NO,(CASE WHEN @BPOSTROUNDOFFSEPARATELY=1 OR @BGSTBILL=1 THEN @CROUNDOFFACCODE ELSE WSLAC END),
			--FREIGHT_RO+OTHER_CHARGES_RO+INSURANCE_RO FROM #V_PROCESS
			--WHERE  INV_ID=@CINVID AND  (FREIGHT_RO+OTHER_CHARGES_RO+INSURANCE_RO)<>0

			INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT,CRDAYS ) 
			SELECT INV_ID,INV_NO,@CROUNDOFFACCODE,@NROUNDOFF,0 AS CREDIT_DAYS
			FROM #V_PROCESS
			WHERE INV_ID=@CINVID AND @NROUNDOFF<>0


			SET @CSTEP = 470
			--EXCISEDUTY AMOUNT SHOULD BE CREDITED TO WHOLESALE ACCOUNT
			INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT,CRDAYS ) 
			SELECT INV_ID,INV_NO,EXCISEDUTYAC,-EXCISEDUTYAMOUNT,CREDIT_DAYS
			FROM #V_PROCESS
			WHERE INV_ID=@CINVID AND EXCISEDUTYAMOUNT<>0

			IF @BGSTBILL=1	
			BEGIN
				SET @CSTEP = 475
				
				DECLARE @NOHGSTPCT NUMERIC(6,2),@COHIGSTTAXACCODE CHAR(10),@COHCGSTTAXACCODE CHAR(10),@COHSGSTTAXACCODE CHAR(10),
				@COHIGSTACCODE CHAR(10),@COHLOCALGSTACCODE CHAR(10)
				
				SELECT TOP 1 @NOHGSTPCT=(CASE WHEN ISNULL(FREIGHT_GST_PERCENTAGE,0)<>0 THEN FREIGHT_GST_PERCENTAGE
				WHEN ISNULL(OTHER_CHARGES_GST_PERCENTAGE,0)<>0 THEN OTHER_CHARGES_GST_PERCENTAGE
				ELSE ISNULL(INSURANCE_GST_PERCENTAGE,0) END ) FROM #V_PROCESS  A 
				WHERE INV_ID=@CINVID
				
				SELECT TOP 1 @COHIGSTACCODE=IGST_XN_AC_CODE,@COHLOCALGSTACCODE=LOCAL_GST_XN_AC_CODE,
							 @COHIGSTTAXACCODE=IGST_TAX_AC_CODE,
							 @COHCGSTTAXACCODE=CGST_TAX_AC_CODE,
							 @COHSGSTTAXACCODE=SGST_TAX_AC_CODE FROM GST_POSTING_CONFIG  A
				WHERE GST_PERCENTAGE=@NOHGSTPCT AND XN_TYPE='WSL'
				
				SET @CSTEP = 480
				INSERT @VCHC (AC_CODE,AMOUNT,XN_ID,XN_NO) 	
				  SELECT TOP 1 @COHIGSTACCODE,((CASE WHEN @BPOSTFREIGHTSEPARATELY=0 THEN ISNULL(FREIGHT,0)
				  ELSE 0 END) +(CASE WHEN @BPOSTINSURANCESEPARATELY=0 THEN ISNULL(INSURANCE,0) ELSE 0 END)+
				  (CASE WHEN @BPOSTOTHERCHARGESSEPARATELY=0 THEN ISNULL(OTHERCHARGES,0) ELSE 0 END))*-1,INV_ID,INV_NO
				  FROM #V_PROCESS  A
				  WHERE INV_ID=@CINVID AND (ISNULL(FREIGHT_IGST_AMOUNT,0)+ISNULL(INSURANCE_IGST_AMOUNT,0)+
				  ISNULL(OTHER_CHARGES_IGST_AMOUNT,0))<>0
				  AND (@BPOSTFREIGHTSEPARATELY=0 OR @BPOSTINSURANCESEPARATELY=0 OR @BPOSTOTHERCHARGESSEPARATELY=0) 
				  
				  UNION ALL
				  SELECT TOP 1 @COHLOCALGSTACCODE,((CASE WHEN @BPOSTFREIGHTSEPARATELY=0 THEN ISNULL(FREIGHT,0)
				  ELSE 0 END) +(CASE WHEN @BPOSTINSURANCESEPARATELY=0 THEN ISNULL(INSURANCE,0) ELSE 0 END)+
				  (CASE WHEN @BPOSTOTHERCHARGESSEPARATELY=0 THEN ISNULL(OTHERCHARGES,0) ELSE 0 END))*-1,INV_ID,INV_NO
				  FROM #V_PROCESS  A
				  WHERE INV_ID=@CINVID AND (ISNULL(FREIGHT_CGST_AMOUNT,0)+ISNULL(INSURANCE_CGST_AMOUNT,0)+
				  ISNULL(OTHER_CHARGES_CGST_AMOUNT,0))<>0
				  AND (@BPOSTFREIGHTSEPARATELY=0 OR @BPOSTINSURANCESEPARATELY=0 OR @BPOSTOTHERCHARGESSEPARATELY=0) 
				  
				  
			  	
			  	SET @CSTEP = 485						
				INSERT @VCHC (AC_CODE,AMOUNT,XN_ID,XN_NO) 	
				  SELECT TOP 1 @COHIGSTTAXACCODE,(ISNULL(FREIGHT_IGST_AMOUNT,0)+ISNULL(INSURANCE_IGST_AMOUNT,0)+
				  ISNULL(OTHER_CHARGES_IGST_AMOUNT,0))*-1,INV_ID,INV_NO
				  FROM #V_PROCESS  A
				  WHERE INV_ID=@CINVID  AND (ISNULL(FREIGHT_IGST_AMOUNT,0)+ISNULL(INSURANCE_IGST_AMOUNT,0)+
				  ISNULL(OTHER_CHARGES_IGST_AMOUNT,0))<>0
				  
				  UNION ALL
				  SELECT TOP 1 @COHCGSTTAXACCODE,(ISNULL(FREIGHT_CGST_AMOUNT,0)+ISNULL(INSURANCE_CGST_AMOUNT,0)+
				  ISNULL(OTHER_CHARGES_CGST_AMOUNT,0))*-1,INV_ID,INV_NO
				  FROM #V_PROCESS 
				  WHERE INV_ID=@CINVID AND (ISNULL(FREIGHT_CGST_AMOUNT,0)+ISNULL(INSURANCE_CGST_AMOUNT,0)+
				  ISNULL(OTHER_CHARGES_CGST_AMOUNT,0))<>0
				  
				  UNION ALL
				  SELECT TOP 1 @COHSGSTTAXACCODE,(ISNULL(FREIGHT_SGST_AMOUNT,0)+ISNULL(INSURANCE_SGST_AMOUNT,0)+
				  ISNULL(OTHER_CHARGES_SGST_AMOUNT,0))*-1,INV_ID,INV_NO
				  FROM #V_PROCESS  A
				  WHERE INV_ID=@CINVID AND (ISNULL(FREIGHT_SGST_AMOUNT,0)+ISNULL(INSURANCE_SGST_AMOUNT,0)+
				  ISNULL(OTHER_CHARGES_SGST_AMOUNT,0))<>0
				 
			END
			
						
			SET @CSTEP = 490
			
			
			
			DECLARE @COTHERPAYMODECODE VARCHAR(10),@NPAYMODECNT NUMERIC(2,0)
			SELECT TOP 1 @COTHERPAYMODECODE=PAYMODE_CODE FROM PAYMODE_XN_DET (NOLOCK) WHERE MEMO_ID=@CINVID AND XN_TYPE='WSL'
			AND PAYMODE_CODE<>'0000004'

			SET @COTHERPAYMODECODE=''

			SELECT @NPAYMODECNT=COUNT(*) FROM PAYMODE_XN_DET (NOLOCK) WHERE MEMO_ID=@CINVID AND XN_TYPE='WSL'
			
			--PARTY SHOULD BE DEBITED WITH TOTAL AMOUNT
			
			IF ISNULL(@COTHERPAYMODECODE,'')='' AND @NPAYMODECNT<=1
				INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT,CRDAYS ) 
				SELECT TOP 1 INV_ID,INV_NO,AC_CODE,TOTAL_AMOUNT,CREDIT_DAYS
				FROM #V_PROCESS 
				WHERE INV_ID=@CINVID AND TOTAL_AMOUNT<>0
			ELSE
			BEGIN
				INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT,CRDAYS,REF_BILL_NO ) 
				SELECT TOP 1 INV_ID,INV_NO,AC_CODE,B.AMOUNT,CREDIT_DAYS,'' AS REF_BILL_NO
				FROM #V_PROCESS A JOIN PAYMODE_XN_DET B ON A.INV_ID=B.MEMO_ID
				WHERE INV_ID=@CINVID AND B.PAYMODE_CODE IN ('0000004')
				UNION 
				SELECT TOP 1 INV_ID,INV_NO,C.CASH_AC_CODE AS AC_CODE,B.AMOUNT,CREDIT_DAYS,'' AS REF_BILL_NO
				FROM #V_PROCESS A JOIN PAYMODE_XN_DET B ON A.INV_ID=B.MEMO_ID
				JOIN SLSCONFIGMST C ON 1=1
				WHERE INV_ID=@CINVID AND B.PAYMODE_CODE='0000000' AND ISNULL(C.CASH_AC_CODE,'') NOT IN ('','0000000000')
				
				UNION 
				SELECT TOP 1 INV_ID,INV_NO,C.BANK_AC_CODE AS AC_CODE,B.AMOUNT-ROUND(( (B.AMOUNT*D.COMMISSION_PERCENTAGE/100) +   
						(B.AMOUNT*D.COMMISSION_PERCENTAGE/100) * D.SERVICE_TAX_PERCENTAGE/100 ),2),CREDIT_DAYS,'' AS REF_BILL_NO
				FROM #V_PROCESS A JOIN PAYMODE_XN_DET B ON A.INV_ID=B.MEMO_ID
				JOIN SLSCONFIGDET_2 C ON C.CARD_PAYMODE_CODE=B.PAYMODE_CODE
				JOIN PAYMODE_MST D ON D.PAYMODE_CODE=B.PAYMODE_CODE
				WHERE INV_ID=@CINVID AND D.PAYMODE_GRP_CODE='0000002' AND ISNULL(C.BANK_AC_CODE,'') NOT IN ('','0000000000')								
				UNION 
				SELECT TOP 1 INV_ID,INV_NO,C.COMMISSION_AC_CODE AS AC_CODE,ROUND(( (B.AMOUNT*D.COMMISSION_PERCENTAGE/100) +   
						(B.AMOUNT*D.COMMISSION_PERCENTAGE/100) * D.SERVICE_TAX_PERCENTAGE/100 ),2) AS AMOUNT,CREDIT_DAYS,'' AS REF_BILL_NO
				FROM #V_PROCESS A JOIN PAYMODE_XN_DET B ON A.INV_ID=B.MEMO_ID
				JOIN SLSCONFIGDET_2 C ON C.CARD_PAYMODE_CODE=B.PAYMODE_CODE
				JOIN PAYMODE_MST D ON D.PAYMODE_CODE=B.PAYMODE_CODE
				WHERE INV_ID=@CINVID AND D.PAYMODE_GRP_CODE='0000002' AND ISNULL(C.COMMISSION_AC_CODE,'') NOT IN ('','0000000000') AND D.COMMISSION_PERCENTAGE<>0												
				UNION 
				SELECT INV_ID,INV_NO,A.AC_CODE AS AC_CODE,B.AMOUNT,CREDIT_DAYS,
				LTRIM(RTRIM(C.ADV_REC_NO)) AS REF_BILL_NO
				FROM #V_PROCESS A JOIN PAYMODE_XN_DET B ON A.INV_ID=B.MEMO_ID
				JOIN ARC01106 C ON C.ADV_REC_ID=B.ADJ_MEMO_ID
				WHERE INV_ID=@CINVID AND B.PAYMODE_CODE='0000002'
				
				
			END			
			----SETTLING MINOR DIFFERENCES IN DEBIT AND CREDIT TOTAL
			--INSERT @VCHC(XN_ID,XN_NO,AC_CODE,AMOUNT,CRDAYS)
			--SELECT MAX(XN_ID),MAX(XN_NO),MAX(AC_CODE),(CASE WHEN SUM(AMOUNT)>0 THEN -SUM(AMOUNT) ELSE SUM(AMOUNT) END) 
			--	   ,MAX(CRDAYS)
			--FROM @VCHC
			--HAVING SUM(AMOUNT)<>0 AND ABS(SUM(AMOUNT))<0.1
						
			SET @CSTEP = 500
			SET @CVMID = ''
			SELECT @CVMID = A.VM_ID 
			 FROM POSTACT_VOUCHER_LINK A
			  JOIN VM01106 B ON A.VM_ID=B.VM_ID
			   WHERE B.CANCELLED=0 AND A.MEMO_ID = @CINVID AND A.XN_TYPE=@CXNTYPE
			
			SET @CSTEP = 510
			IF ISNULL(@CVMID,'') = ''
			BEGIN
			    SET @CVMID = 'LATER-'+RTRIM(LTRIM(CONVERT(VARCHAR,@NCTR)))
				SET @NCTR = @NCTR+1
			END
			
			SET @CSTEP = 520
			INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )
			SELECT @CVMID,@CINVID,@CXNTYPE,LAST_UPDATE FROM INM01106 WHERE INV_ID = @CINVID
			
			
			--SELECT 'CHECK VCHC',* FROM @VCHC WHERE XN_ID = @CINVID
			
			SET @CSTEP = 530
			INSERT @VDC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE, 
						  CREDIT_DAYS, CR_DISCOUNT_PERCENTAGE,AC_NAME,REF_BILL_NO)
			SELECT @CVMID
				, 'LATER-'+CONVERT(VARCHAR,ROW_NUMBER() OVER(ORDER BY A.AC_CODE)) AS VD_ID
				, A.AC_CODE
				,'INVOICE# ' + @CINVNO AS NARRATION
				,(CASE WHEN SUM(AMOUNT)>0 THEN SUM(AMOUNT) ELSE 0 END) AS DEBIT_AMOUNT
				,(CASE WHEN SUM(AMOUNT)<0 THEN ABS(SUM(AMOUNT)) ELSE 0 END) AS CREDIT_AMOUNT
				,(CASE WHEN SUM(AMOUNT) > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE
				,A.CRDAYS
				,0
				,B.AC_NAME,ISNULL(A.REF_BILL_NO,'')
	        FROM @VCHC A
	        JOIN LMV01106 B ON A.AC_CODE = B.AC_CODE
	        WHERE XN_ID = @CINVID AND AMOUNT<>0
	        GROUP BY A.AC_CODE,B.AC_NAME,A.CRDAYS,ISNULL(A.REF_BILL_NO,'')
	        ORDER BY X_TYPE,ABS(SUM(AMOUNT)) DESC
			
	        SET @CSTEP = 540
	        SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC
		    WHERE VM_ID = @CVMID

			--SETTING OFF THE DIFFERENCE AMOUNT TO WHOLESALEE ACCOUNT
			IF ABS(@NDRTOTAL-@NCRTOTAL)<=1 AND (@NDRTOTAL-@NCRTOTAL)<>0
			BEGIN
				IF EXISTS (SELECT TOP 1 AC_CODE FROM @VDC WHERE VM_ID=@CVMID AND AC_CODE=@CROUNDOFFACCODE)
				BEGIN	
					SELECT TOP 1 @CVDID=VD_ID FROM @VDC WHERE VM_ID=@CVMID AND AC_CODE=@CROUNDOFFACCODE
							
					UPDATE @VDC SET DEBIT_AMOUNT=DEBIT_AMOUNT-(@NDRTOTAL-@NCRTOTAL)
					WHERE VM_ID=@CVMID AND VD_ID=@CVDID AND DEBIT_AMOUNT<>0

					UPDATE @VDC SET CREDIT_AMOUNT=CREDIT_AMOUNT+(@NDRTOTAL-@NCRTOTAL)
					WHERE VM_ID=@CVMID AND VD_ID=@CVDID AND CREDIT_AMOUNT<>0
					
					IF EXISTS (SELECT * FROM @VDC WHERE VM_ID=@CVMID AND VD_ID=@CVDID AND CREDIT_AMOUNT<0 OR DEBIT_AMOUNT<0)
					BEGIN
						UPDATE @VDC SET CREDIT_AMOUNT=ABS(DEBIT_AMOUNT),DEBIT_AMOUNT=0 WHERE VM_ID=@CVMID AND VD_ID=@CVDID AND DEBIT_AMOUNT<0
						UPDATE @VDC SET DEBIT_AMOUNT=ABS(CREDIT_AMOUNT),CREDIT_AMOUNT=0 WHERE VM_ID=@CVMID AND VD_ID=@CVDID AND CREDIT_AMOUNT<0
					END
				END
				ELSE
					INSERT @VDC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE, 
								  CREDIT_DAYS, CR_DISCOUNT_PERCENTAGE,AC_NAME,REF_BILL_NO)
					SELECT @CVMID
						, 'LATER-'+@CROUNDOFFACCODE AS VD_ID
						, @CROUNDOFFACCODE AS AC_CODE
						,'ROUND OFF ' AS NARRATION
						,(CASE WHEN (@NDRTOTAL-@NCRTOTAL)<0 THEN ABS(@NDRTOTAL-@NCRTOTAL) ELSE 0 END) AS DEBIT_AMOUNT
						,(CASE WHEN (@NDRTOTAL-@NCRTOTAL)>0 THEN (@NDRTOTAL-@NCRTOTAL) ELSE 0 END) AS CREDIT_AMOUNT
						,(CASE WHEN (@NDRTOTAL-@NCRTOTAL) > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE
						,0 AS CRDAYS
						,0
						,AC_NAME,'' AS REF_BILL_NO
					FROM LM01106 WHERE AC_CODE=	@CROUNDOFFACCODE		
			END

	        SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC
		    WHERE VM_ID = @CVMID
		
			PRINT 'AFTER R/O TOTALS:'+STR(ABS(ISNULL(@NDRTOTAL,0)),10,2)+'-'+STR(ISNULL(@NCRTOTAL,0),10,2)
		    		    
		    SET @CSTEP = 550    
	    SET @CVOUCHERNO = '' 
	        SELECT TOP 1 @CVOUCHERNO = VOUCHER_NO FROM VM01106 WHERE VM_ID = @CVMID
	        IF ISNULL(@CVOUCHERNO,'') = ''
				SET @CVOUCHERNO= @CVMID
	        
	        SET @CSTEP = 560
	        INSERT @VMC	( VM_ID,VOUCHER_NO,VOUCHER_DT, VOUCHER_CODE, DEPT_ID, 
							  BILL_TYPE, BILL_NO, BILL_ID, BILL_DT, BILL_AC_CODE, 
							  PARTY_NAME, QUANTITY, NET_AMOUNT, RM_LIST, CANCELLED,DRTOTAL,CRTOTAL
							  ,VOUCHER_TYPE,DEPT_NAME,BILL_STATUS )
			SELECT @CVMID,@CVOUCHERNO,A.INV_DT,@CVOUCHERCODE,A.DEPT_ID,'WSL',A.INV_NO,A.INV_ID,A.INV_DT
				  ,A.AC_CODE,B.AC_NAME,SUM(A.QUANTITY),A.TOTAL_AMOUNT,A.INV_NO,A.CANCELLED,@NDRTOTAL,@NCRTOTAL
				  ,'WHOLESALE',C.DEPT_NAME,'NEW'  	
			FROM #V_PROCESS A
			JOIN LM01106 B ON A.AC_CODE=B.AC_CODE
			JOIN LOCATION C ON a.location_Code =C.DEPT_ID
			WHERE A.INV_ID=@CINVID
			GROUP BY A.INV_DT,A.DEPT_ID,A.INV_NO,A.INV_ID,A.INV_DT
				  ,A.AC_CODE,B.AC_NAME,A.TOTAL_AMOUNT,A.INV_NO,C.DEPT_NAME
				  ,A.CANCELLED

			SET @CSTEP = 565
			
			INSERT @TBILL_BY_BILL_REF
				(VD_ID,BILL_NO,AMOUNT,LAST_UPDATE,X_TYPE,CR_DAYS,VM_ID)
			SELECT VD_ID
				  ,(CASE WHEN ISNULL(A.REF_BILL_NO,'')<>'' THEN A.REF_BILL_NO ELSE 
				   DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,LTRIM(RTRIM(@CINVNO)),@DLASTINVDT,'CR',@CVMID) END)
				  ,ABS(SUM(A.CREDIT_AMOUNT+A.DEBIT_AMOUNT)),GETDATE()
				  ,A.X_TYPE,(CASE WHEN ISNULL(D.CREDIT_DAYS,0)=0 THEN C.CREDIT_DAYS ELSE D.CREDIT_DAYS END)
				  ,@CVMID AS VM_ID
			FROM @VDC A 
			JOIN LMP01106 C ON C.AC_CODE=A.AC_CODE
			JOIN INM01106 D ON 1=1
			WHERE A.VM_ID=@CVMID AND C.BILL_BY_BILL=1 AND D.INV_ID=@CINVID
			GROUP BY A.VD_ID,A.X_TYPE,A.REF_BILL_NO,
			(CASE WHEN ISNULL(D.CREDIT_DAYS,0)=0 THEN C.CREDIT_DAYS ELSE D.CREDIT_DAYS END),
			(CASE WHEN ISNULL(A.REF_BILL_NO,'')<>'' THEN A.REF_BILL_NO ELSE 
				   DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,LTRIM(RTRIM(@CINVNO)),@DLASTINVDT,'CR',@CVMID) END)
			
									
			SET @CSTEP = 570
			DELETE @VCHC
		    DELETE FROM #V_PROCESS WHERE INV_ID = @CINVID AND XN_TYPE=@CXNTYPE
		END			 			
    

    SET @CSTEP = 580
    SELECT * FROM @VMC ORDER BY VM_ID
    SELECT * FROM @VDC ORDER BY VM_ID
    SELECT * FROM @ERRORS 
    SELECT * FROM @VLINK ORDER BY VM_ID
    SELECT *,BILL_NO AS REF_NO FROM @TBILL_BY_BILL_REF ORDER BY VM_ID,VD_ID,BILL_NO
    
    END TRY
	BEGIN CATCH
			SELECT 'STEP:- '+@CSTEP+' '+ERROR_MESSAGE()AS  ERRMSG
	END CATCH
	        
END
--END OF PROCEDURE - POSTACT_WSL
