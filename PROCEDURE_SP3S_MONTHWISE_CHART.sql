CREATE PROCEDURE SP3S_MONTHWISE_CHART
(
    @NMODE			       INT=1, --- 1 FOR NRV --2 FOR QUANTITY AND 3 FOR GROSS MARGIN
	@DTODATE 			   VARCHAR(50)='', --DATE PASS OF FILTER
	@CCONVERSIONFACTOR	   INT=1,--1 FOR DIVIDE BY THOUSAND 2 FOR 10 THOUSAND 3 FOR LAKH   
	@LASTYEARCOMPERISION   INT=0,--0 FOR CURRENT YEAR VALUE AND 1 FOR CUR YEAR PREV YEAR AND CONVERSION FACTOR
	@CDEPTID               VARCHAR(5)=''--LOCATION FILTER
	)
                              
AS
BEGIN
     

      DECLARE @CURRENTYEAR VARCHAR(10),@DTSQL NVARCHAR(MAX),@DTSQL1 NVARCHAR(MAX),@CFILTER VARCHAR(MAX),@NCONVERSIONAMOUNT NUMERIC(18,0),
              @PREVYEAR VARCHAR(10),@TNRV NUMERIC(12,2),@DPREVTODATE VARCHAR(50),@TPREVNRV NUMERIC(12,2),
              @TQTY NUMERIC(12,2),@TPREVQTY NUMERIC(12,2),@TGM NUMERIC(12,2),@TPREVGM NUMERIC(12,2),
              @LASTDATE DATETIME,@FINALDATE DATETIME
              
    DECLARE @TBLMTH TABLE (SR INT,MONTH_NAME VARCHAR(3))
    DECLARE @TMPNRV TABLE (MONTH_NAME VARCHAR(3),NOOFMONTHS INT, CUR_YEAR_NRV NUMERIC(12,2),
    PER_MONTH_NRV NUMERIC(12,2),CUR_CONT_PER NUMERIC(10,0),PREV_NOOFMONTHS INT,PREV_YEAR_NRV NUMERIC(12,2),PREV_PER_MONTH_NRV NUMERIC(12,2), PREV_CONT_PER NUMERIC(10,0))
    DECLARE @TMPQTY TABLE (MONTH_NAME VARCHAR(3), CUR_YEAR_QTY NUMERIC(12,0),CUR_CONT_PER NUMERIC(10,0),PREV_YEAR_QTY NUMERIC(12,0), PREV_CONT_PER NUMERIC(10,0))
    DECLARE @TMP_GROSS_MARGIN TABLE (MONTH_NAME VARCHAR(10),SALE_VALUE NUMERIC(12,2),SOLD_PURCHASE_VALUE NUMERIC(12,2),  CUR_GROSS_MARGIN NUMERIC(12,0),CUR_CONT_PER NUMERIC(10,0),PREV_SALE_VALUE NUMERIC(12,2),PREV_SOLD_PURCHASE_VALUE NUMERIC(12,2),PREV_GROSS_MARGIN NUMERIC(12,0),PREV_CONT_PER NUMERIC(10,0))

	IF @DTODATE>GETDATE()
	SET @DTODATE=GETDATE()
	
	
	 SELECT  @LASTDATE= CONVERT(VARCHAR(25),DATEADD(DD,-(DAY(DATEADD(MM,1,@DTODATE))),DATEADD(MM,1,@DTODATE)),101)
     SELECT @FINALDATE= CONVERT(VARCHAR(25),DATEADD(DD,-(DAY(@DTODATE)),@DTODATE),101)
 
     
     IF @DTODATE=@LASTDATE
     SET @DTODATE=@DTODATE
     IF @DTODATE<=@LASTDATE
     SET @DTODATE=@FINALDATE
     
     

    SET @DTSQL1=''
    SET @CFILTER=''
    SET @CURRENTYEAR=(SELECT '01'+ DBO.FN_GETFINYEAR(@DTODATE))
    SET @NCONVERSIONAMOUNT=1
    SET @DPREVTODATE=(SELECT DATEADD(YEAR,-1,@DTODATE))
	SET @PREVYEAR=(SELECT '01'+ DBO.FN_GETFINYEAR(@DPREVTODATE))
	
	   INSERT INTO @TBLMTH(SR,MONTH_NAME) 
	   	 		
		SELECT 1 AS SR,	'APR' AS MONTH_NAME UNION ALL
		SELECT 2 AS SR,	'MAY' AS MONTH_NAME UNION ALL
		SELECT 3 AS SR,	'JUN' AS MONTH_NAME UNION ALL
		SELECT 4 AS SR,	'JUL' AS MONTH_NAME UNION ALL
		SELECT 5 AS SR,	'AUG' AS MONTH_NAME UNION ALL
		SELECT 6 AS SR,	'SEP' AS MONTH_NAME UNION ALL
		SELECT 7 AS SR,	'OCT' AS MONTH_NAME UNION ALL
		SELECT 8 AS SR,	'NOV' AS MONTH_NAME UNION ALL
		SELECT 9 AS SR,	'DEC' AS MONTH_NAME UNION ALL
		SELECT 10 AS SR,'JAN' AS MONTH_NAME UNION ALL
		SELECT 11 AS SR,'FEB' AS MONTH_NAME UNION ALL
		SELECT 12 AS SR,'MAR' AS MONTH_NAME
	           
     IF @CCONVERSIONFACTOR=1
       SET @NCONVERSIONAMOUNT=1000
    ELSE IF @CCONVERSIONFACTOR=2
       SET @NCONVERSIONAMOUNT=100000
    ELSE IF @CCONVERSIONFACTOR=3
       SET @NCONVERSIONAMOUNT=10000000
       
    IF @CDEPTID<>''
	SET @CFILTER=' AND A.location_Code='''+RTRIM(LTRIM(@CDEPTID))+''''  

IF @NMODE=1
BEGIN
   
		   SET @DTSQL=N'SELECT MONTH_NAME,SUM(ISNULL(CUR_YEAR_NRV,0)) AS CUR_YEAR_NRV,
		                SUM(ISNULL(PREV_YEAR_NRV,0)) AS PREV_YEAR_NRV
		                FROM
		                (
		                SELECT LEFT(DATENAME (MM,CM_DT),3) AS MONTH_NAME,
		                SUM(ISNULL(NET_AMOUNT,0)) AS CUR_YEAR_NRV,
		                0 AS PREV_YEAR_NRV
					    FROM CMM01106 A (NOLOCK) 
					    JOIN LOCATION B (NOLOCK) ON A.location_Code=B.DEPT_ID 
					    WHERE A.CANCELLED=0 AND A.FIN_YEAR='''+@CURRENTYEAR+'''
					    AND A.CM_DT <='''+CONVERT(VARCHAR(11),@DTODATE,120)+'''
					    '+@CFILTER+'
					    AND B.INACTIVE=0
					    GROUP BY  LEFT(DATENAME (MM,CM_DT),3) '
	              
	              
	    IF @LASTYEARCOMPERISION=1
		BEGIN		      
		SET @DTSQL1 =N' UNION ALL 
	                 SELECT  LEFT(DATENAME (MM,CM_DT),3) AS MONTH_NAME,
	                 0 AS CUR_YEAR_NRV,
		             SUM(NET_AMOUNT) AS PREV_YEAR_NRV
	                 FROM CMM01106 A (NOLOCK) 
	                 JOIN LOCATION B (NOLOCK) ON A.location_Code=B.DEPT_ID 
	                 WHERE A.CANCELLED=0 AND A.FIN_YEAR='''+@PREVYEAR+'''
				     AND A.CM_DT <='''+CONVERT(VARCHAR(11),@DPREVTODATE,120)+'''
				     '+@CFILTER+'
				     AND B.INACTIVE=0
	                 GROUP BY LEFT(DATENAME (MM,CM_DT),3) '
	     END
			 SET @DTSQL1=@DTSQL1+') A
						  GROUP BY MONTH_NAME'
			 SET @DTSQL=@DTSQL+@DTSQL1       
			 PRINT @DTSQL         
			 INSERT INTO @TMPNRV(MONTH_NAME,CUR_YEAR_NRV ,PREV_YEAR_NRV )	    
			 EXEC SP_EXECUTESQL @DTSQL
			 
			  
			 SELECT @TNRV=SUM(ISNULL(CUR_YEAR_NRV ,0)) FROM @TMPNRV
			 UPDATE @TMPNRV SET CUR_CONT_PER =(CUR_YEAR_NRV *100)/CASE WHEN @TNRV=0 THEN 1 ELSE @TNRV END  
			 UPDATE @TMPNRV SET CUR_YEAR_NRV=CUR_YEAR_NRV/@NCONVERSIONAMOUNT 
		
         
        IF @LASTYEARCOMPERISION=1
		BEGIN
         
			 SELECT @TNRV=SUM(ISNULL(PREV_YEAR_NRV ,0)) FROM @TMPNRV
			 UPDATE @TMPNRV SET PREV_CONT_PER =(PREV_YEAR_NRV *100)/CASE WHEN @TNRV=0 THEN 1 ELSE @TNRV END  
			 UPDATE @TMPNRV SET PREV_YEAR_NRV=PREV_YEAR_NRV/@NCONVERSIONAMOUNT
	         
			 SELECT A.MONTH_NAME,ISNULL(CUR_YEAR_NRV,0) AS CUR_YEAR_NRV 
			 ,ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER,
			 ISNULL(PREV_YEAR_NRV,0) AS PREV_YEAR_NRV ,
			 ISNULL(PREV_CONT_PER ,0) AS PREV_CONT_PER
			 FROM @TBLMTH A
			 LEFT JOIN @TMPNRV B ON A.MONTH_NAME =B.MONTH_NAME
			 WHERE ISNULL(CUR_YEAR_NRV,0) <> 0 
			 ORDER BY A.SR
		END
		ELSE
		BEGIN
			 SELECT A.MONTH_NAME,ISNULL(CUR_YEAR_NRV,0) AS CUR_YEAR_NRV ,
			 ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER
			 FROM @TBLMTH A
			 LEFT JOIN @TMPNRV B ON A.MONTH_NAME =B.MONTH_NAME 
			 WHERE ISNULL(CUR_YEAR_NRV,0)<>0
			 ORDER BY A.SR
		
		END  
         GOTO END_PROC
		
END		
ELSE IF  @NMODE=2
BEGIN

     SET @DTSQL =N'SELECT MONTH_NAME,SUM(ISNULL(CUR_YEAR_QTY,0)) AS CUR_YEAR_QTY,
		              SUM(ISNULL(PREV_YEAR_QTY,0)) AS PREV_YEAR_QTY
		              FROM 
		              (
		              SELECT LEFT(DATENAME (MM,CM_DT),3) AS MONTH_NAME,
	                  SUM(B.QUANTITY) AS CUR_YEAR_QTY,
	                  0 AS  PREV_YEAR_QTY
				      FROM CMM01106 A (NOLOCK) 
				      JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID
				      JOIN LOCATION C (NOLOCK) ON A.location_Code=C.DEPT_ID 
				      WHERE A.CANCELLED=0 AND A.FIN_YEAR='''+@CURRENTYEAR+'''
				      AND A.CM_DT <='''+CONVERT(VARCHAR(11),@DTODATE,120)+'''
				      '+@CFILTER+'
				      AND C.INACTIVE=0
				      GROUP BY LEFT(DATENAME (MM,CM_DT),3) '
		
		IF @LASTYEARCOMPERISION=1
		BEGIN		      
		SET @DTSQL1 =N'UNION ALL
				      SELECT LEFT(DATENAME (MM,CM_DT),3) AS MONTH_NAME,
				      0 AS CUR_YEAR_QTY,
					  SUM(B.QUANTITY) AS PREV_YEAR_QTY 
				      FROM CMM01106 A (NOLOCK) 
				      JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID
				      JOIN LOCATION C (NOLOCK) ON A.location_Code=C.DEPT_ID 
				      WHERE A.CANCELLED=0 AND A.FIN_YEAR='''+@PREVYEAR+'''
				      AND A.CM_DT <='''+CONVERT(VARCHAR(11),@DPREVTODATE,120)+'''
				      '+@CFILTER+'
				      AND C.INACTIVE=0
				      GROUP BY LEFT(DATENAME (MM,CM_DT),3) '
		END
		
		SET @DTSQL1=@DTSQL1+') A
				      GROUP BY MONTH_NAME'
		SET @DTSQL=@DTSQL+@DTSQL1
		        
		 INSERT INTO @TMPQTY(MONTH_NAME,CUR_YEAR_QTY,PREV_YEAR_QTY )	    
		 EXEC SP_EXECUTESQL @DTSQL
		 
		SELECT @TQTY=SUM(ISNULL(CUR_YEAR_QTY ,0)) FROM @TMPQTY
		UPDATE @TMPQTY SET CUR_CONT_PER =(CUR_YEAR_QTY *100)/CASE WHEN @TQTY=0 THEN 1 ELSE @TQTY END 
		
         
        IF @LASTYEARCOMPERISION=1
		BEGIN
        SELECT @TPREVQTY=SUM(ISNULL(PREV_YEAR_QTY ,0)) FROM @TMPQTY
		UPDATE @TMPQTY SET PREV_CONT_PER =(PREV_YEAR_QTY *100)/CASE WHEN @TPREVQTY=0 THEN 1 ELSE @TPREVQTY END 
		
		
		 SELECT A.MONTH_NAME,ISNULL(CUR_YEAR_QTY,0) AS CUR_YEAR_QTY, 
		 ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER,
		 ISNULL(PREV_YEAR_QTY,0) AS PREV_YEAR_QTY ,
		 ISNULL(PREV_CONT_PER ,0) AS PREV_CONT_PER
		 FROM @TBLMTH A
		 LEFT JOIN @TMPQTY B ON A.MONTH_NAME =B.MONTH_NAME 
		 ORDER BY A.SR
		END
		ELSE
		BEGIN
		 SELECT A.MONTH_NAME,ISNULL(CUR_YEAR_QTY,0) AS CUR_YEAR_QTY ,
		 ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER
		 FROM @TBLMTH A
		 LEFT JOIN @TMPQTY B ON A.MONTH_NAME =B.MONTH_NAME 
		 ORDER BY A.SR
		
		END 
		  
         GOTO END_PROC

END	
	
ELSE IF  @NMODE=3
BEGIN

     SET @DTSQL =N'SELECT MONTH_NAME,
	               SUM(ISNULL(SALE_VALUE,0)) AS SALE_VALUE,
	               SUM(ISNULL(SOLD_PURCHASE_VALUE,0)) AS SOLD_PURCHASE_VALUE,
	               SUM(ISNULL(PREV_SALE_VALUE,0)) AS PREV_SALE_VALUE,
	               SUM(ISNULL(PREV_SOLD_PURCHASE_VALUE,0)) AS PREV_SOLD_PURCHASE_VALUE   
	               FROM  
	               (
	                SELECT LEFT(DATENAME (MM,CM_DT),3) AS MONTH_NAME, 
	                SUM(B.RFNET) AS SALE_VALUE, 
	                SUM(B.QUANTITY*(SKU.PURCHASE_PRICE+(CASE WHEN FORM.POST_TAX_SEPARATELY=0 
			        THEN ISNULL(SKU_OH.TAX_AMOUNT,0) ELSE 0 END)-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0))) AS SOLD_PURCHASE_VALUE,
			        0 AS PREV_SALE_VALUE,
			        0 AS PREV_SOLD_PURCHASE_VALUE	
	                FROM CMM01106 A (NOLOCK) 
	                JOIN CMD01106 B (NOLOCK) ON A.CM_ID =B.CM_ID 
	                JOIN LOCATION C (NOLOCK) ON A.location_Code=C.DEPT_ID 
	                JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =B.PRODUCT_CODE 
	                LEFT JOIN SKU_OH (NOLOCK) ON SKU.PRODUCT_CODE =SKU_OH .PRODUCT_CODE 
	                JOIN FORM (NOLOCK) ON SKU.FORM_ID=FORM.FORM_ID
	                WHERE A.CANCELLED=0 AND A.FIN_YEAR='''+@CURRENTYEAR+'''
				    AND A.CM_DT <='''+CONVERT(VARCHAR(11),@DTODATE,120)+'''
				    '+@CFILTER+'
				    AND C.INACTIVE=0 
				    GROUP BY LEFT(DATENAME (MM,CM_DT),3) '
				     
		IF @LASTYEARCOMPERISION=1
		BEGIN		      
		SET @DTSQL1 =N' UNION ALL
				      SELECT LEFT(DATENAME (MM,CM_DT),3) AS MONTH_NAME, 
				      0 AS SALE_VALUE,
				      0 AS SOLD_PURCHASE_VALUE
	                 ,SUM(B.RFNET) AS PREV_SALE_VALUE 
	                 ,SUM(B.QUANTITY*(SKU.PURCHASE_PRICE+(CASE WHEN FORM.POST_TAX_SEPARATELY=0 
			         THEN ISNULL(SKU_OH.TAX_AMOUNT,0) ELSE 0 END)-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0))) AS PREV_SOLD_PURCHASE_VALUE	
	                 FROM CMM01106 A (NOLOCK) 
	                 JOIN CMD01106 B (NOLOCK) ON A.CM_ID =B.CM_ID 
	                 JOIN LOCATION C (NOLOCK) ON A.location_Code=C.DEPT_ID 
	                 JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =B.PRODUCT_CODE 
	                 LEFT JOIN SKU_OH (NOLOCK) ON SKU.PRODUCT_CODE =SKU_OH .PRODUCT_CODE 
	                 JOIN FORM (NOLOCK) ON SKU.FORM_ID=FORM.FORM_ID
				     WHERE A.CANCELLED=0 AND A.FIN_YEAR='''+@PREVYEAR+'''
				     AND A.CM_DT <='''+CONVERT(VARCHAR(11),@DPREVTODATE,120)+'''
				     '+@CFILTER+'
				     AND C.INACTIVE=0
				     GROUP BY LEFT(DATENAME (MM,CM_DT),3)'
		END
		SET @DTSQL1=@DTSQL1+') A
				      GROUP BY MONTH_NAME'
		SET @DTSQL=@DTSQL+@DTSQL1
		
	    PRINT @DTSQL
	    INSERT INTO @TMP_GROSS_MARGIN(MONTH_NAME,SALE_VALUE,SOLD_PURCHASE_VALUE,PREV_SALE_VALUE,PREV_SOLD_PURCHASE_VALUE)
		EXEC SP_EXECUTESQL @DTSQL
		
	   UPDATE 	@TMP_GROSS_MARGIN SET CUR_GROSS_MARGIN=SALE_VALUE-SOLD_PURCHASE_VALUE     
	   WHERE SALE_VALUE>SOLD_PURCHASE_VALUE	
	   
	   UPDATE 	@TMP_GROSS_MARGIN SET PREV_GROSS_MARGIN=PREV_SALE_VALUE-PREV_SOLD_PURCHASE_VALUE
	   WHERE PREV_SALE_VALUE>PREV_SOLD_PURCHASE_VALUE
	   
	  SELECT @TGM=SUM(ISNULL(CUR_GROSS_MARGIN ,0)) FROM @TMP_GROSS_MARGIN
	  
	  UPDATE @TMP_GROSS_MARGIN SET CUR_CONT_PER =(CUR_GROSS_MARGIN *100)/CASE WHEN @TGM=0 THEN 1 ELSE @TGM END 
	  UPDATE @TMP_GROSS_MARGIN SET CUR_GROSS_MARGIN=CUR_GROSS_MARGIN/@NCONVERSIONAMOUNT
      
     IF @LASTYEARCOMPERISION=1
	  BEGIN
		  SELECT @TPREVGM=SUM(ISNULL(PREV_GROSS_MARGIN ,0)) FROM @TMP_GROSS_MARGIN
		  UPDATE @TMP_GROSS_MARGIN SET PREV_CONT_PER =(PREV_GROSS_MARGIN *100)/CASE WHEN @TPREVGM=0 THEN 1 ELSE @TPREVGM END 
		  UPDATE @TMP_GROSS_MARGIN SET PREV_GROSS_MARGIN=PREV_GROSS_MARGIN/@NCONVERSIONAMOUNT
		       
		  SELECT  A.MONTH_NAME,ISNULL(CUR_GROSS_MARGIN,0) AS CUR_GROSS_MARGIN,ISNULL(CUR_CONT_PER,0) AS CUR_CONT_PER ,
				  ISNULL(PREV_GROSS_MARGIN,0) AS PREV_GROSS_MARGIN,ISNULL(PREV_CONT_PER,0) AS PREV_CONT_PER 
		  FROM  @TBLMTH A
		 LEFT JOIN @TMP_GROSS_MARGIN B ON A.MONTH_NAME =B.MONTH_NAME 
		 ORDER BY A.SR
		  
     END
    ELSE
     BEGIN
		  SELECT  A.MONTH_NAME,ISNULL(CUR_GROSS_MARGIN,0) AS CUR_GROSS_MARGIN,ISNULL(CUR_CONT_PER,0) AS CUR_CONT_PER 
	      FROM  @TBLMTH A
		  LEFT JOIN @TMP_GROSS_MARGIN B ON A.MONTH_NAME =B.MONTH_NAME 
		  ORDER BY A.SR
	
		
     END      
	 GOTO END_PROC

END	


END_PROC:

END
