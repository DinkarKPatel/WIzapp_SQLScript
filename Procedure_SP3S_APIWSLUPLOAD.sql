CREATE PROCEDURE SP3S_APIWSLUPLOAD     --(LocId 3 digit change by Sanjay:06-11-2024)
(        
@CXNID VARCHAR(50)=''        
)        
AS        
BEGIN        
        
   
   
   DECLARE @CEINVOICE_PREFIX VARCHAR(10)
   select @CEINVOICE_PREFIX=value  from CONFIG where config_option ='EINVOICE_PREFIX'
   set @CEINVOICE_PREFIX=ISNULL(@CEINVOICE_PREFIX,'')
   
	   
    DECLARE @Auto_Einvoice_Api VARCHAR(10)
	SELECT @Auto_Einvoice_Api=VALUE FROM CONFIG WHERE config_option='Auto_Einvoice_Api_Configuration'

	IF ISNULL(@Auto_Einvoice_Api,'') in('','0')
	   SET @Auto_Einvoice_Api='1'
	
	   
	   
	declare @ctcshsn_code varchar(10)
	select @ctcshsn_code=hsn_code  from GST_OH_CONFIG where oh_name ='OC'

   
	 DECLARE @CEINVOICE_EXPORT_GSTNO VARCHAR(25),@CEINVOICE_EXPORT_BUYER_STATE_CODE VARCHAR(10),
	 @CEINVOICE_EXPORT_BUYER_PIN_CODE VARCHAR(10)

	 SELECT @CEINVOICE_EXPORT_GSTNO=value FROM CONFIG WHERE CONFIG_OPTION ='EINVOICE_EXPORT_GSTNO'
	 SELECT @CEINVOICE_EXPORT_BUYER_STATE_CODE=value FROM CONFIG WHERE CONFIG_OPTION ='EINVOICE_EXPORT_BUYER_STATE_CODE'
	 SELECT @CEINVOICE_EXPORT_BUYER_PIN_CODE=value FROM CONFIG WHERE CONFIG_OPTION ='EINVOICE_EXPORT_BUYER_PIN_CODE'

  
        IF OBJECT_ID ('TEMPDB..#TRANSPORTER','U') IS NOT NULL                                
           DROP TABLE #TRANSPORTER            
    SELECT A.PARCEL_MEMO_ID, ANGM.ANGADIA_NAME AS TRANSPORTER_NAME , angm.Angadia_code ,       
           ANGADIA_ADD1 ,ANGADIA_ADD2  ,AR.AREA_NAME ,AR.PINCODE , lmp.ac_gst_state_code  AS STATE ,A.MODE ,  
           vehicle_no , parcel_memo_no , parcel_memo_dt ,bilty_no ,lmp.Ac_gst_no as TRANSPORTER_GST_NO                                       
    INTO #TRANSPORTER                                
    FROM PARCEL_MST A (NOLOCK)                                
    JOIN PARCEL_DET B (NOLOCK) ON A.PARCEL_MEMO_ID =B.PARCEL_MEMO_ID                                           
    LEFT OUTER JOIN ANGM (NOLOCK) ON ANGM.ANGADIA_CODE =A.ANGADIA_CODE            
    LEFT JOIN AREA AR (NOLOCK) ON AR.AREA_CODE =ANGM.AREA_CODE  
	left join lmp01106 lmp (nolock) on lmp.ac_code= angm.ac_code                    
    WHERE A.XN_TYPE ='WSL' AND B.REF_MEMO_ID=@CXNID          
    AND A.CANCELLED =0        
    GROUP BY A.PARCEL_MEMO_ID, ANGM.ANGADIA_NAME  ,        
    ANGADIA_ADD1 ,ANGADIA_ADD2  ,AR.AREA_NAME ,AR.PINCODE ,  lmp.ac_gst_state_code,A.MODE,vehicle_no ,parcel_memo_no,bilty_no, parcel_memo_dt 
	,angm.Angadia_code ,lmp.Ac_gst_no                         
     
           
    ;WITH CTE AS                                 
    (                                
	   SELECT PARCEL_MEMO_ID,SR=ROW_NUMBER () OVER (ORDER BY PARCEL_MEMO_ID)                                 
	   FROM #TRANSPORTER                                
    )                                
                                   
    DELETE FROM CTE WHERE SR>1      
   
        
        
      DECLARE @NIGSTVAL NUMERIC(10,2),@NCGSTVAL NUMERIC(10,2),@NSGSTVAL NUMERIC(10,2),@NCESSaMOUNT  NUMERIC(10,2)  ,@NTABLABLEVALUE NUMERIC(18,2)  , @NDISCOUNT_AMOUNT NUMERIC(10,2)  
        
	  SELECT @NIGSTVAL=SUM(IGST_AMOUNT),@NCGSTVAL=SUM(CGST_AMOUNT),@NSGSTVAL=SUM(CGST_AMOUNT),@NCESSaMOUNT=SUM(Gst_CESS_AMOUNT),  
	  @NTABLABLEVALUE= SUM(XN_VALUE_WITHOUT_GST ),-- SUM(XN_VALUE_WITHOUT_GST),
	  @NDISCOUNT_AMOUNT =SUM(DISCOUNT_AMOUNT)  
	  FROM IND01106         
	  WHERE INV_ID =@CXNID      
  

   DECLARE @NPICKINGSHIPPINGADDRESS INT
--1 FOR  INM  SHIPPING AC_CODE DETAILS 2.INM SHPING ADDRESS STORED IN INM 3 FOR PARTY ADDRESS

 SELECT @NPICKINGSHIPPINGADDRESS=
      CASE WHEN ISNULL(SHIPPING_SAME_AS_BILLING_ADD,0) =0 
	       THEN CASE WHEN ISNULL(SHIPPING_MODE,0)=0 THEN 1 ELSE 2 END 
		   ELSE 3 END  
 FROM INM01106  WHERE INV_ID=@CXNID

    
 IF OBJECT_ID('TEMPDB..#TMPINVOICE','U') IS NOT NULL  
    DROP TABLE #TMPINVOICE  
           
   SELECT 'GST' AS TAXSCH,
		SUPPLY_TYPE_CODE  AS SUPTYP,
	   'N' AS REGREV,UPPER(L.LOC_GST_NO) AS ECMGSTIN,'N' AS IGSTONINTRA,        
	   'INV' AS TYP,  
	   NO=CASE WHEN (@CEINVOICE_PREFIX<>'' AND LEFT(RTRIM(LTRIM(A.INV_NO)),1)='0') THEN @CEINVOICE_PREFIX ELSE '' END+RTRIM(LTRIM(A.INV_NO)),   
	   convert(varchar,A.INV_DT,103) AS INV_DT,  -- CONVERT INVDT NOT TIME      
	   UPPER(L.LOC_GST_NO) AS GSTIN,L.DEPT_NAME AS LGLNM,L.DEPT_NAME AS TRDNM,-- L.DEPT_ALIAS TRADE NAME SHOULD BE MIN 3 CHARCATER      
	   Left(isnull(L.ADDRESS1,'')+' '+isnull(L.ADDRESS2,''),100) ADDRESS1 ,
	   substring(isnull(L.ADDRESS1,'')+' '+isnull(L.ADDRESS2,''),101,100) ADDRESS2 ,        
	   L.AREA_NAME LOC ,l.PINCODE  PIN,-- PIN NO SHOULD NOT BE BLANK MOUST BE 6 CHARACTER      
	   l.gst_state_code  STCD,---L.gst_state_code      
	   l.phone  PH,--L.PHONE MUST BE NOT BLANK SHOULD BE MIN 6 CHARCTAER   
	   C.EMAIL_ID  AS EM ,     
  
	   --******BuyerDtls******  
   
	   CASE WHEN A.party_state_code IN('96','99') THEN 'URP' ELSE   UPPER(LM.AC_GST_NO)  END   AS B_GSTIN,--LM.AC_GST_NO      
	   LM.AC_NAME AS B_LGLNM ,      
	   LM.AC_NAME AS B_TRDNM  ,--LM.ALIAS NOT SHOULD BE BLANK  
	   CASE WHEN A.DOMESTIC_FOR_EXPORT IN(2,3) THEN @CEINVOICE_EXPORT_BUYER_STATE_CODE ELSE   a.party_state_code END   AS POS,      

	   Left((isnull(LM.ADDRESS0,'')+' '+isnull(LM.ADDRESS1,'')+' '+isnull(LM.ADDRESS2,'')) ,100) AS ADDR1 ,-- LM.ADDRESS1 SHOULD NOT BE BLANK      
	   substring((isnull(LM.ADDRESS0,'')+' '+isnull(LM.ADDRESS1,'')+' '+isnull(LM.ADDRESS2,'')),101,100)  AS ADDR2, 

	   LM.AREA_NAME +' '+lm.CITY  B_LOC ,
	   (CASE WHEN A.DOMESTIC_FOR_EXPORT IN(2,3) THEN @CEINVOICE_EXPORT_BUYER_PIN_CODE ELSE   lm.PINCODE END) AS B_PIN, 
   
	   a.party_state_code AS B_STCD,--LM.AC_GST_STATE_CODE  STCD IS NOT SAME STATECODE FOR b_STCd      
	   isnull(NULLIF((case when isnull( LM.MOBILE,'')='' then lm.PHONES_O else lm.mobile end),''),'null') AS B_PH,
	   isnull(NULLIF(LM.E_MAIL,''),'null')  AS B_EM ,  
  
	 --******DispDtls******   
	   L.DEPT_NAME AS DIS_NM,

	   Left(isnull(L.ADDRESS1,'')+' '+isnull(L.ADDRESS2,''),100) AS DIS_ADDR1,  
	   substring(isnull(L.ADDRESS1,'')+' '+isnull(L.ADDRESS2,''),101,100) AS DIS_ADDR2,     
	   
	   L.AREA_NAME AS DIS_LOC ,--mANADATORY disc loc TR.AREA_NAME    
	   l.PINCODE AS DIS_PIN,--mANADATORY PINCODE TR.PINCODE      
	   l.gst_state_code AS DIS_STCD,  --mANADATORY STCD SENDER GSTNO     

    --******SHIPDTLS******   

      UPPER(CASE WHEN @NPICKINGSHIPPINGADDRESS=1 THEN SHLMP.AC_GST_NO  
	       WHEN @NPICKINGSHIPPINGADDRESS=2 THEN SHLMP.AC_GST_NO
		   ELSE LM.AC_GST_NO  END) SHIP_GSTIN,

      CASE WHEN @NPICKINGSHIPPINGADDRESS=1 THEN SHLM.AC_NAME   
	       WHEN @NPICKINGSHIPPINGADDRESS=2 THEN SHLM.AC_NAME 
		   ELSE LM.AC_NAME  END SHIP_LGLNM,

       CASE WHEN @NPICKINGSHIPPINGADDRESS=1 THEN SHLM.AC_NAME   
	       WHEN @NPICKINGSHIPPINGADDRESS=2 THEN SHLM.AC_NAME 
		   ELSE LM.AC_NAME  END SHIP_TRDNM,

         CASE WHEN @NPICKINGSHIPPINGADDRESS=1 THEN Left((isnull(shLmp.ADDRESS0,'')+' '+isnull(shLmp.ADDRESS1,'')+' '+isnull(shLmp.ADDRESS2,'')) ,100) 
	       WHEN @NPICKINGSHIPPINGADDRESS=2 THEN LEFT(ISNULL(A.SHIPPING_ADDRESS ,'')+' '+ISNULL(A.SHIPPING_ADDRESS2 ,''),100)
		   ELSE LEFT(ISNULL(LM.ADDRESS0,'')+' '+ISNULL(LM.ADDRESS1,'')+' '+ISNULL(LM.ADDRESS2,''),100) END SHIP_ADDR1,

	    CASE WHEN @NPICKINGSHIPPINGADDRESS=1 THEN substring((isnull(shLmp.ADDRESS0,'')+' '+isnull(shLmp.ADDRESS1,'')+' '+isnull(shLmp.ADDRESS2,'')),101,100)
	       WHEN @NPICKINGSHIPPINGADDRESS=2 THEN substring(ISNULL(A.SHIPPING_ADDRESS ,'')+' '+ISNULL(A.SHIPPING_ADDRESS2 ,''),101,100)
		   ELSE substring(ISNULL(LM.ADDRESS0,'')+' '+ISNULL(LM.ADDRESS1,'')+' '+ISNULL(LM.ADDRESS2,''),101,100) END SHIP_ADDR2,

         CASE WHEN @NPICKINGSHIPPINGADDRESS=1 THEN SHAR.AREA_NAME  
	       WHEN @NPICKINGSHIPPINGADDRESS=2 THEN a.SHIPPING_AREA_NAME 
		   ELSE lm.AREA_NAME +' '+ lm.city  END SHIP_LOC,
         
		  CASE WHEN @NPICKINGSHIPPINGADDRESS=1 THEN SHAR.pincode   
	       WHEN @NPICKINGSHIPPINGADDRESS=2 THEN ISNULL(a.SHIPPING_PIN,'') 
		   ELSE lm.PINCODE    END SHIP_PIN,

		   CASE WHEN @NPICKINGSHIPPINGADDRESS=1 THEN SHcs.gst_state_code   
	       WHEN @NPICKINGSHIPPINGADDRESS=2 THEN ISNULL(shp.gst_state_code ,'') 
		   ELSE lm.ac_gst_state_code     END SHIP_STCD,

  
	   ROW_NUMBER () OVER (ORDER BY CASE WHEN  @Auto_Einvoice_Api=1 THEN   RTRIM(LTRIM(IND.HSN_CODE)) ELSE LEFT(RTRIM(LTRIM(SN.SECTION_NAME))+'-'+RTRIM(LTRIM(SN.SUB_SECTION_NAME)),10) END )  AS SLNO,
	   CASE WHEN  @Auto_Einvoice_Api=1 THEN   RTRIM(LTRIM(IND.HSN_CODE)) ELSE LEFT(RTRIM(LTRIM(SN.SECTION_NAME))+'-'+RTRIM(LTRIM(SN.SUB_SECTION_NAME)),10) END AS PRDDESC,      
   
	   CASE WHEN XN_ITEM_TYPE=4 THEN   'Y' ELSE 'N' END AS ISSERVC,
	   RTRIM(LTRIM(IND.HSN_CODE)) AS HSNCD,
   
	  CASE WHEN  @Auto_Einvoice_Api=1 THEN   RTRIM(LTRIM(IND.HSN_CODE)) ELSE left(RTRIM(LTRIM(SN.section_name))+'-'+RTRIM(LTRIM(SN.SUB_section_name)),10) END AS BARCDE,
	 --  RTRIM(LTRIM(IND.HSN_CODE)) AS BARCDE,        
	   CAST(SUM(IND.INVOICE_QUANTITY) AS NUMERIC(10,3)) AS QTY,
	   CAST(SUM(IND.SCHEME_QUANTITY) AS NUMERIC(10,3)) AS FREEQTY,
	   CASE WHEN ISNULL(UOM.GST_UOM_NAME,'')<>'' THEN LEFT(UOM.GST_UOM_NAME,3) ELSE UOM.UOM_NAME END AS UNIT,  
   
	   --AS DISCUSS WITH SIR TAXABLE VALUE 
	   SUM(CAST( (XN_VALUE_WITHOUT_GST+(IND.DISCOUNT_AMOUNT +IND.INMDISCOUNTAMOUNT))/(INVOICE_QUANTITY)  AS NUMERIC(18,2))) AS UNITPRICE,

	  -- CAST( (XN_VALUE_WITHOUT_GST+(ind.DISCOUNT_AMOUNT +ind.INMDISCOUNTAMOUNT))/(INVOICE_QUANTITY)  AS NUMERIC(18,2)) AS UNITPRICE,

	   CAST((sum(XN_VALUE_WITHOUT_GST+(ind.DISCOUNT_AMOUNT +ind.INMDISCOUNTAMOUNT)))   AS NUMERIC(14,2)) AS TOTAMT, --SUBT
	   CAST(sum(isnull(IND.DISCOUNT_AMOUNT,0) +isnull(IND.INMDISCOUNTAMOUNT,0))  AS NUMERIC(10,2)) AS DISCOUNT,

	   CAST(SUM(XN_VALUE_WITHOUT_GST) AS nUMERIC(14,2)) AS PRETAXVAL, 
	   CAST(SUM(XN_VALUE_WITHOUT_GST) AS NUMERIC(14,2))  AS ASSAMT,-- ASSAMT IS SAME TOTAMT  -SUBT  

	   IND.GST_PERCENTAGE AS GSTRT,
	   CAST(SUM(IND.IGST_AMOUNT) AS NUMERIC(14,2)) AS IGSTAMT,
	   CAST(SUM(IND.CGST_AMOUNT) AS NUMERIC(14,2)) AS CGSTAMT,        
	   CAST(SUM(IND.CGST_AMOUNT) AS NUMERIC(14,2)) AS SGSTAMT,

	   isnull(ind.GST_CESS_PERCENTAGE,0) AS CESRT,
	   SUM(isnull(IND.gst_CESS_AMOUNT,0)) AS  CESAMT,        
	   0 AS CESNONADVLAMT,0 AS STATECESRT,0 AS STATECESAMT,0 AS STATECESNONADVLAMT,0 AS OTHCHRG,   
  
	   CAST(SUM(ISNULL(XN_VALUE_WITHOUT_GST,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(IGST_AMOUNT,0)+isnull(IND.gst_CESS_AMOUNT,0)) aS nUMERIC(18,2)) AS TOTITEMVAL,

	   0 AS ORDLINEREF,'IN' AS ORGCNTRY,CAST(0 AS INT) AS PRDSLNO,        
	   COMPANY_NAME AS NM,'' AS EXPDT,'' AS WRDT,'' AS ATTR_NM,0 AS ATTR_VAL ,     
    
	  --*******ValDtls***********  
       
	   ASSVAL= cast(@NTABLABLEVALUE+isnull(a.other_charges_taxable_value,0)+isnull(a.freight_taxable_value,0)+isnull(a.insurance_taxable_value,0)+isnull(a.packing_taxable_value,0)+ISNULL(a.tcs_amount,0)  as numeric(18,2)) ,--+ISNULL(@NDISCOUNT_AMOUNT,0)+A.DISCOUNT_AMOUNT ,--net_rate,---ASSVAL WITHOUT TAX VALE  --SUBT
	   CGSTVAL=cast(@NCGSTVAL+isnull(a.other_charges_cgst_amount ,0)+isnull(a.freight_cgst_amount ,0)+isnull(a.insurance_cgst_amount ,0)+isnull(a.packing_cgst_amount ,0) as numeric(18,2)) ,-- cgst_amount, ----@NCGSTVAL,    
	   SGSTVAL=cast(@NSGSTVAL+isnull(a.other_charges_sgst_amount ,0)+isnull(a.freight_sgst_amount ,0)+isnull(a.insurance_sgst_amount ,0)+isnull(a.packing_sgst_amount ,0) as numeric(18,2)),--sgst_amount,-- , 
	   IGSTVAL=cast(@NIGSTVAL+isnull(a.other_charges_Igst_amount ,0)+isnull(a.freight_igst_amount ,0)+isnull(a.insurance_igst_amount ,0)+isnull(a.packing_igst_amount ,0) as numeric(18,2)),--IND.IGST_AMOUNT , --- ,   
	   CESVAL=@NCESSaMOUNT,---IND.CESS_AMOUNT , 
   
	  -- @NCGSTVAL=SUM(CGST_AMOUNT),@NSGSTVAL=SUM(CGST_AMOUNT),@NCESSaMOUNT=SUM(CESS_AMOUNT),  
	  --@NTABLABLEVALUE  
        
	   STCESVAL=0,    
	   DISCOUNTVAL=0,  ---IND.DISCOUNT_AMOUNT TWO DISCOUNT COLUMN THEN THIS COLMN NAME CHANGE,        
	   OTHCHRGVAL=0,     
	   RNDOFFAMT=A.ROUND_OFF+a.Gst_round_off ,  --A.ROUND_OFF,        
	   TOTINVVAL=A.NET_AMOUNT,   --A.NET_AMOUNT,    ---TOTINVVALUE  ASSVALUE+TAX VALE    
	   TOTINVVALFC=CAST((@NTABLABLEVALUE+@NCGSTVAL+@NSGSTVAL+@NIGSTVAL+@NCESSaMOUNT
		+a.FREIGHT +a.OTHER_CHARGES+isnull(a.insurance,0)+isnull(a.packing ,0)+ISNULL(a.tcs_amount,0)+
	   case when a.OH_TAX_METHOD =1 then 
	   ISNULL(A.FREIGHT_IGST_AMOUNT,0)+ISNULL(A.FREIGHT_SGST_AMOUNT,0)+ISNULL(A.FREIGHT_CGST_AMOUNT,0) 
	   +ISNULL(A.OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(A.OTHER_CHARGES_SGST_AMOUNT,0)+ISNULL(A.OTHER_CHARGES_CGST_AMOUNT,0)
	   +ISNULL(A.insurance_IGST_AMOUNT,0)+ISNULL(A.insurance_SGST_AMOUNT,0)+ISNULL(A.insurance_CGST_AMOUNT,0) 
	   +ISNULL(A.packing_IGST_AMOUNT,0)+ISNULL(A.packing_SGST_AMOUNT,0)+ISNULL(A.packing_CGST_AMOUNT,0) 
	   else 0 end 
	   )  AS NUMERIC(18,2)), 
  
	  --*******PayDtls***********  
      
	   PAY_NM=isnull(bd.BF_AC_NAME,'-'),--MANADTORT MUST BE 11 CHARACTER    
	   -- dm ACCDET='000705019105', ---bank ac number of payee      (mandetory) 
	   ACCDET=isnull(bd.ACCOUNT_NO,'-')  , ---bank ac number of payee      (mandetory) 
		MODE='CREDIT'  ,        
	   -- dm FININSBR='ICIC0000007',--bd.IFSC_CODE,---IFSC code      (mandetory) 
	   FININSBR=isnull(bd.IFSC_CODE,'-') ,--bd.IFSC_CODE,---IFSC code      (mandetory) 
	   PAYTERM=0,    
	   PAYINSTR='PI',--payment instruction mandatory should be 1 character    
	   CRTRN='CT',--CREDIT TRANSFER MANADATORY MIN 1CHARCTER    
	   DIRDR='RR',----direct debit  MANADATORY MIN 1CHARCTER   
	   CRDAY=A.CREDIT_DAYS ,        
	   PAIDAMT=A.NET_AMOUNT,PAYMTDUE=0,INVRM='invrm',-- MANADATORY,    
	   INVSTDT=convert(varchar(10),GETDATE(),103), -- MANADATORY,    
	   INVENDDT= convert(varchar(10),GETDATE()+1,103), -- MANADATORY,    
		--*******RefDtls***********  
	   INVNO=CASE WHEN (@CEINVOICE_PREFIX<>'' AND  LEFT(RTRIM(LTRIM(A.INV_NO)),1)='0') THEN @CEINVOICE_PREFIX ELSE '' END+RTRIM(LTRIM(A.INV_NO)),
	   INVDT= convert(varchar(10),A.INV_DT,103),  --A.INV_DT ,        
	   OTHREFNO='OTH-'+A.INV_NO,--MANADTORY    
	   RECADVREFR='RF',--MANADTORY    
	   RECADVDT=convert(varchar(10),GETDATE(),103),--MANADTORY    
	   TENDREFR='TR-90',--MANADTORY    
	   CONTRREFR='CR',--MANADTORY    
	   EXTREFR='ER',--MANADTORY    
	   PROJREFR='PR',--MANADTORY    
	   POREFR='PR',--MANADTORY    
	   POREFDT=convert(varchar(10),GETDATE(),103),  --MANADTORY      
  
	   --ExpDtls--  
	   SHIPBNO='NULL',--MANADTORY    5 CHARCETER  ---NOT STORE
	   SHIPBDT=convert(varchar(10),GETDATE(),103),--MANADTORY      
	   PORT=CAST('' AS VARCHAR(20)),--MANADTORY   FIX  
	   REFCLM='N',--MANADTORY  only one charcter FIX  
	   FORCUR='INR',--MANADTORY  THIS VALUE IS FIX 3 CHARCTER   AED
	   CNTCODE='IN',--MANADTORY   THIS VALUE IS FIX 2 CHARACTER  AE
  
	   --EwbDtls--  
	   TRANSID=UPPER(CASE WHEN ISNULL(TR.TRANSPORTER_GST_NO,'')='' THEN '' ELSE TR.TRANSPORTER_GST_NO END), --MANADTORY  
	   TRANSNAME=TRANSPORTER_NAME,  --MANADTORY  
	   DISTANCE=0,  --isnull(a.ewaydistance,0),-- NOT BE 0  
	   TRANSDOCNO=case when ISNULL(bilty_no,'')='' then '' else bilty_no end,  --parcel_memo_no , --MANADTORY       
	   TRANSDOCDT=convert(varchar(10),parcel_memo_dt ,103),--MANADTORY   
	   VEHNO=case when ISNULL(vehicle_no,'')='' then '' else vehicle_no end ,--vehicle_no ,--MANADTORY   
	   VEHTYPE='R',--MANADTORY   
	   TRANSMODE=tr.mode  --MANADTORY  nUMERIC VALUE,  
   into #TMPINVOICE            
   FROM INM01106 A (NOLOCK)        
   JOIN IND01106 IND (NOLOCK) ON A.INV_ID =IND.INV_ID         
   JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =IND.PRODUCT_CODE         
   JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =SKU.ARTICLE_CODE         
   JOIN UOM (NOLOCK) ON UOM.UOM_CODE =ART.UOM_CODE         
   JOIN SKU_NAMES SN (NOLOCK) ON SN.PRODUCT_CODE =IND.PRODUCT_CODE         
   JOIN LOC_VIEW L (NOLOCK) ON L.DEPT_ID =A.location_Code       
   LEFT JOIN GST_STATE_DET GD (NOLOCK) ON GD.GST_STATE_CODE =L.GST_STATE_CODE AND A.INV_DT BETWEEN GD.FM_DT AND GD.TO_DT         
   JOIN COMPANY C (NOLOCK) ON C.COMPANY_CODE ='01'        
   JOIN LMV01106 LM (NOLOCK) ON LM.AC_CODE =A.AC_CODE         
  LEFT JOIN #TRANSPORTER TR ON 1=1          
  left join LM01106 shlm (nolock) on shlm.AC_CODE =a.SHIPPING_AC_CODE 
  left join LMP01106 shlmp (nolock) on shlmp.AC_CODE =shlm.AC_CODE 
  LEFT JOIN AREA shAR (NOLOCK) ON shlmp.AREA_CODE=shAR.AREA_CODE                        
  LEFT JOIN CITY shCT (NOLOCK) ON shAR.CITY_CODE=shCT.CITY_CODE  
  LEFT JOIN GST_STATE_MST shCS (NOLOCK) ON shCS.GST_STATE_CODE=shLMP.AC_GST_STATE_CODE      
  LEFT JOIN GST_STATE_MST SHP (NOLOCK) ON ISNULL(SHP.GST_STATE_NAME,'')=ISNULL(a.SHIPPING_STATE_NAME,'')     
  left join LM_BANK_DETAIL bd (nolock) on bd.AC_CODE =L.control_ac_code   
  WHERE A.INV_ID=@CXNID    and ISNULL(a.IRN_QR_CODE,'')=''
   group by SUPPLY_TYPE_CODE,upper(L.LOC_GST_NO) ,    
     CASE WHEN  @Auto_Einvoice_Api=1 THEN 0
   else  CAST( (XN_VALUE_WITHOUT_GST+(ind.DISCOUNT_AMOUNT +ind.INMDISCOUNTAMOUNT))/(INVOICE_QUANTITY)  AS NUMERIC(18,2)) end,
   --******SellerDtls******  
   RTRIM(LTRIM(A.INV_NO)),  A.DOMESTIC_FOR_EXPORT,
   convert(varchar,A.INV_DT,103),  -- CONVERT INVDT NOT TIME      
   upper(L.LOC_GST_NO) ,L.DEPT_NAME ,L.DEPT_NAME ,-- L.DEPT_ALIAS TRADE NAME SHOULD BE MIN 3 CHARCATER      
   L.ADDRESS1 ,L.ADDRESS2 ,        
   L.AREA_NAME  ,l.PINCODE  ,-- PIN NO SHOULD NOT BE BLANK MOUST BE 6 CHARACTER      
   l.gst_state_code  ,---L.gst_state_code      
   l.phone  ,--L.PHONE MUST BE NOT BLANK SHOULD BE MIN 6 CHARCTAER      
   C.EMAIL_ID ,     
   upper(LM.AC_GST_NO) ,--LM.AC_GST_NO      
   LM.AC_NAME  ,         
   ISNULL(LM.ADDRESS0,'')+' '+ISNULL(LM.ADDRESS1,'')+' '+ISNULL(LM.ADDRESS2,'')  ,-- LM.ADDRESS1 SHOULD NOT BE BLANK        
   LM.AREA_NAME +' '+lm.CITY   ,lm.PINCODE ,-- LM.PINCODE PIN CODE MATCH ADDRESS        
   a.party_state_code --LM.AC_GST_STATE_CODE  STCD IS NOT SAME STATECODE FOR b_STCd      
   ,case when isnull( LM.MOBILE,'')='' then lm.PHONES_O else lm.mobile end ,LM.E_MAIL  ,  
   case when ISNULL(vehicle_no,'')='' then '' else vehicle_no end,
   CASE WHEN XN_ITEM_TYPE=4 THEN   'Y' ELSE 'N' END,
   CASE WHEN  @Auto_Einvoice_Api=1 THEN   RTRIM(LTRIM(IND.HSN_CODE)) ELSE left(RTRIM(LTRIM(SN.section_name))+'-'+RTRIM(LTRIM(SN.SUB_section_name)),10) END,
    --******ShipDtls******   

      UPPER(CASE WHEN @NPICKINGSHIPPINGADDRESS=1 THEN SHLMP.AC_GST_NO  
	       WHEN @NPICKINGSHIPPINGADDRESS=2 THEN SHLMP.AC_GST_NO
		   ELSE LM.AC_GST_NO  END) ,

      CASE WHEN @NPICKINGSHIPPINGADDRESS=1 THEN SHLM.AC_NAME   
	       WHEN @NPICKINGSHIPPINGADDRESS=2 THEN SHLM.AC_NAME 
		   ELSE LM.AC_NAME  END ,

       CASE WHEN @NPICKINGSHIPPINGADDRESS=1 THEN SHLM.AC_NAME   
	       WHEN @NPICKINGSHIPPINGADDRESS=2 THEN SHLM.AC_NAME 
		   ELSE LM.AC_NAME  END ,

          CASE WHEN @NPICKINGSHIPPINGADDRESS=1 THEN Left((isnull(shLmp.ADDRESS0,'')+' '+isnull(shLmp.ADDRESS1,'')+' '+isnull(shLmp.ADDRESS2,'')) ,100) 
	       WHEN @NPICKINGSHIPPINGADDRESS=2 THEN LEFT(ISNULL(A.SHIPPING_ADDRESS ,'')+' '+ISNULL(A.SHIPPING_ADDRESS2 ,''),100)
		   ELSE LEFT(ISNULL(LM.ADDRESS0,'')+' '+ISNULL(LM.ADDRESS1,'')+' '+ISNULL(LM.ADDRESS2,''),100) END ,

	    CASE WHEN @NPICKINGSHIPPINGADDRESS=1 THEN substring((isnull(shLmp.ADDRESS0,'')+' '+isnull(shLmp.ADDRESS1,'')+' '+isnull(shLmp.ADDRESS2,'')),101,100)
	       WHEN @NPICKINGSHIPPINGADDRESS=2 THEN substring(ISNULL(A.SHIPPING_ADDRESS ,'')+' '+ISNULL(A.SHIPPING_ADDRESS2 ,''),101,100)
		   ELSE substring(ISNULL(LM.ADDRESS0,'')+' '+ISNULL(LM.ADDRESS1,'')+' '+ISNULL(LM.ADDRESS2,''),101,100) END ,

         CASE WHEN @NPICKINGSHIPPINGADDRESS=1 THEN SHAR.AREA_NAME  
	       WHEN @NPICKINGSHIPPINGADDRESS=2 THEN a.SHIPPING_AREA_NAME 
		   ELSE lm.AREA_NAME +' '+ lm.city  END ,
         
		  CASE WHEN @NPICKINGSHIPPINGADDRESS=1 THEN SHAR.pincode   
	       WHEN @NPICKINGSHIPPINGADDRESS=2 THEN ISNULL(a.SHIPPING_PIN,'') 
		   ELSE lm.PINCODE    END ,

		   CASE WHEN @NPICKINGSHIPPINGADDRESS=1 THEN SHcs.gst_state_code   
	       WHEN @NPICKINGSHIPPINGADDRESS=2 THEN ISNULL(shp.gst_state_code ,'') 
		   ELSE lm.ac_gst_state_code     END ,

   IND.HSN_CODE,
   CASE WHEN ISNULL(UOM.GST_UOM_NAME,'')<>'' THEN LEFT(UOM.GST_UOM_NAME,3) ELSE UOM.UOM_NAME END,       
   IND.GST_PERCENTAGE ,isnull(ind.GST_CESS_PERCENTAGE,0) ,  
   A.ROUND_OFF+a.gst_round_off  ,  --A.ROUND_OFF,        
   A.NET_AMOUNT,   --A.NET_AMOUNT,    ---TOTINVVALUE  ASSVALUE+TAX VALE    
   CAST((a.FREIGHT +a.OTHER_CHARGES+isnull(a.insurance,0)+isnull(a.packing ,0)+
   case when a.OH_TAX_METHOD =1 then 
   ISNULL(A.FREIGHT_IGST_AMOUNT,0)+ISNULL(A.FREIGHT_SGST_AMOUNT,0)+ISNULL(A.FREIGHT_CGST_AMOUNT,0) 
   +ISNULL(A.OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(A.OTHER_CHARGES_SGST_AMOUNT,0)+ISNULL(A.OTHER_CHARGES_CGST_AMOUNT,0)
   +ISNULL(A.insurance_IGST_AMOUNT,0)+ISNULL(A.insurance_SGST_AMOUNT,0)+ISNULL(A.insurance_CGST_AMOUNT,0) 
   +ISNULL(A.packing_IGST_AMOUNT,0)+ISNULL(A.packing_SGST_AMOUNT,0)+ISNULL(A.packing_CGST_AMOUNT,0) 
   else 0 end 
   )  AS NUMERIC(18,2)), 
  
  --*******PayDtls***********  
  isnull(bd.BF_AC_NAME,'-'),--MANADTORT MUST BE 11 CHARACTER    
  isnull(bd.ACCOUNT_NO,'-')  , ---bank ac number of payee      (mandetory) 
  isnull(bd.IFSC_CODE,'-') ,--bd.IFSC_CODE,---IFSC code      (mandetory) 
  A.CREDIT_DAYS ,A.NET_AMOUNT,
   UPPER(LM.AC_GST_NO), --MANADTORY  
   TRANSPORTER_NAME,  --MANADTORY  
   isnull(a.ewaydistance,0),-- NOT BE 0  
   parcel_memo_no ,bilty_no, --MANADTORY       
   convert(varchar(10),parcel_memo_dt ,103),--MANADTORY   
   tr.mode,COMPANY_NAME,
   A.OTHER_CHARGES_TAXABLE_VALUE,A.FREIGHT_TAXABLE_VALUE,A.INSURANCE_TAXABLE_VALUE,A.PACKING_TAXABLE_VALUE,
   A.other_charges_cgst_amount ,A.other_charges_Sgst_amount,A.other_charges_Igst_amount,
   A.FREIGHT_cgst_amount ,A.INSURANCE_cgst_amount,A.PACKING_cgst_amount,
   A.FREIGHT_Sgst_amount ,A.INSURANCE_Sgst_amount,A.PACKING_Sgst_amount,
   A.FREIGHT_Igst_amount ,A.INSURANCE_Igst_amount,A.PACKING_Igst_amount,
   A.FREIGHT,A.OTHER_CHARGES ,A.PACKING ,A.OH_TAX_METHOD ,A.INSURANCE ,A.INV_DT ,A.INV_NO,
   UPPER(case when ISNULL(TR.TRANSPORTER_GST_NO,'')='' then '' else TR.TRANSPORTER_GST_NO end),
   ISNULL(a.tcs_amount,0)

   Update #TMPINVOICE set SHIP_GSTIN='URP' where isnull(SHIP_GSTIN,'')=''
   Update #TMPINVOICE set SHIP_GSTIN=(CASE WHEN LEFT(SHIP_GSTIN,2) IN ('96','99') THEN 'URP' ELSE SHIP_GSTIN END)
   Update #TMPINVOICE set SUPTYP='B2B' where isnull(SUPTYP,'')=''

   

UPDATE A SET ADDRESS1=(CASE WHEN  LEN(ADDRESS1)<=3 THEN ADDRESS1+'...' ELSE ADDRESS1 END),
       ADDRESS2=(CASE WHEN  LEN(ADDRESS2)<=3 THEN ADDRESS2+'...' ELSE ADDRESS2 END),

	   ADDR1=(CASE WHEN  LEN(ADDR1)<=3 THEN ADDR1+'...' ELSE ADDR1 END),
	   ADDR2=(CASE WHEN  LEN(ADDR2)<=3 THEN ADDR2+'...' ELSE ADDR2 END),

	   DIS_ADDR1=(CASE WHEN  LEN(DIS_ADDR1)<=3 THEN DIS_ADDR1+'...' ELSE DIS_ADDR1 END),
	   DIS_ADDR2=(CASE WHEN  LEN(DIS_ADDR2)<=3 THEN DIS_ADDR2+'...' ELSE DIS_ADDR2 END),

	   SHIP_ADDR1=(CASE WHEN  LEN(SHIP_ADDR1)<=3 THEN SHIP_ADDR1+'...' ELSE SHIP_ADDR1 END),
	   SHIP_ADDR2=(CASE WHEN  LEN(SHIP_ADDR2)<=3 THEN SHIP_ADDR2+'...' ELSE SHIP_ADDR2 END)

FROM #TMPINVOICE A
   

  IF OBJECT_ID ('TEMPDB..#TMPOVERHEAD','U') IS NOT NULL
     drop table #TMPOVERHEAD

	 SELECT TOP 1 * INTO #TMPOVERHEAD FROM #TMPINVOICE




		 INSERT #TMPINVOICE	( TAXSCH, SUPTYP, REGREV, ECMGSTIN, IGSTONINTRA, TYP, NO, INV_DT, GSTIN, LGLNM, TRDNM, ADDRESS1, ADDRESS2, LOC, PIN, STCD, PH, EM, B_GSTIN, B_LGLNM, B_TRDNM,
		  POS, ADDR1, ADDR2, B_LOC, B_PIN, B_STCD, B_PH, B_EM, DIS_NM, DIS_ADDR1, DIS_ADDR2, DIS_LOC, DIS_PIN, DIS_STCD, SHIP_GSTIN, SHIP_LGLNM, SHIP_TRDNM, SHIP_ADDR1, SHIP_ADDR2, SHIP_LOC, 
		  SHIP_PIN, SHIP_STCD, SLNO, PRDDESC, ISSERVC, HSNCD, BARCDE, QTY, FREEQTY, UNIT, UNITPRICE, TOTAMT, DISCOUNT, PRETAXVAL, ASSAMT, GSTRT, IGSTAMT, CGSTAMT, SGSTAMT, CESRT, CESAMT, 
		  CESNONADVLAMT, STATECESRT, STATECESAMT, STATECESNONADVLAMT, OTHCHRG, TOTITEMVAL, ORDLINEREF, ORGCNTRY, PRDSLNO, NM, EXPDT, WRDT, ATTR_NM, ATTR_VAL, ASSVAL, CGSTVAL, SGSTVAL, 
		  IGSTVAL, CESVAL, STCESVAL, DISCOUNTVAL, OTHCHRGVAL, RNDOFFAMT, TOTINVVAL, TOTINVVALFC, PAY_NM, ACCDET, MODE, FININSBR, PAYTERM, PAYINSTR, CRTRN, DIRDR, CRDAY, PAIDAMT, PAYMTDUE, 
		  INVRM, INVSTDT, INVENDDT, INVNO, INVDT, OTHREFNO, RECADVREFR, RECADVDT, TENDREFR, CONTRREFR, EXTREFR, PROJREFR, POREFR, POREFDT, SHIPBNO, SHIPBDT, PORT, REFCLM, FORCUR, CNTCODE, 
		  TRANSID, TRANSNAME, DISTANCE, TRANSDOCNO, TRANSDOCDT, VEHNO, VEHTYPE, TRANSMODE )  

		 SELECT 	TOP 1  TAXSCH, SUPTYP, REGREV, ECMGSTIN, IGSTONINTRA, TYP, NO, A.INV_DT, GSTIN, LGLNM, TRDNM, ADDRESS1, ADDRESS2, LOC, PIN, STCD, PH, EM, B_GSTIN, B_LGLNM, B_TRDNM, 
			 POS, ADDR1, ADDR2, B_LOC, B_PIN, B_STCD, B_PH, B_EM, DIS_NM, DIS_ADDR1, DIS_ADDR2, DIS_LOC, DIS_PIN, DIS_STCD, SHIP_GSTIN, SHIP_LGLNM, SHIP_TRDNM, SHIP_ADDR1, SHIP_ADDR2, SHIP_LOC, 
			 SHIP_PIN, SHIP_STCD, SLNO,'Other Charges' PRDDESC, 'Y', other_charges_hsn_code  HSNCD,'Other Charges' BARCDE,1 QTY,0 FREEQTY, UNIT, 
			 UNITPRICE= CAST(b.OTHER_CHARGES   
		   -(CASE WHEN B.OH_TAX_METHOD =2 THEN ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_SGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_IGST_AMOUNT,0) ELSE 0 END)
		      AS NUMERIC(18,2)), 
		     TOTAMT=CAST(b.OTHER_CHARGES   
		     -(CASE WHEN B.OH_TAX_METHOD =2 THEN ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_SGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_IGST_AMOUNT,0) ELSE 0 END)
		      AS NUMERIC(18,2)), 
			 DISCOUNT=0, 
			 PRETAXVAL=OTHER_CHARGES_TAXABLE_VALUE , 
			 ASSAMT=OTHER_CHARGES_TAXABLE_VALUE, 
			 GSTRT=other_charges_gst_percentage , 
			 IGSTAMT=isnull(other_charges_igst_amount,0) , 
			 CGSTAMT=isnull(other_charges_cgst_amount,0) , 
			 SGSTAMT=isnull(other_charges_sgst_amount,0) , 
			 0 CESRT,0 CESAMT, 
			 0 CESNONADVLAMT,0  STATECESRT,0 STATECESAMT,0 STATECESNONADVLAMT, OTHCHRG, 
			 TOTITEMVAL=   ISNULL(OTHER_CHARGES_TAXABLE_VALUE ,0)+ISNULL(other_charges_CGST_AMOUNT,0)+ISNULL(other_charges_SGST_AMOUNT,0)+ISNULL(other_charges_IGST_AMOUNT,0) ,
			  ORDLINEREF, ORGCNTRY, PRDSLNO, NM, EXPDT, WRDT, ATTR_NM, ATTR_VAL, 
			  ASSVAL, CGSTVAL, SGSTVAL,  IGSTVAL,0 CESVAL,0 STCESVAL,0 DISCOUNTVAL,0 OTHCHRGVAL, RNDOFFAMT, TOTINVVAL, TOTINVVALFC, PAY_NM, ACCDET, MODE, FININSBR, PAYTERM, PAYINSTR, CRTRN, DIRDR, CRDAY, PAIDAMT, PAYMTDUE, 
			 INVRM, INVSTDT, INVENDDT, INVNO, INVDT, OTHREFNO, RECADVREFR, RECADVDT, TENDREFR, CONTRREFR, EXTREFR, PROJREFR, POREFR, POREFDT, SHIPBNO, SHIPBDT, PORT, REFCLM, FORCUR, CNTCODE, 
			 TRANSID, TRANSNAME, DISTANCE, TRANSDOCNO, TRANSDOCDT, VEHNO, VEHTYPE, TRANSMODE 
		 FROM #TMPOVERHEAD A
		 JOIN INM01106 B ON 1=1
		 WHERE B.INV_ID=@CXNID
		 AND B.OTHER_CHARGES <>0
		 union all
		 SELECT 	TOP 1  TAXSCH, SUPTYP, REGREV, ECMGSTIN, IGSTONINTRA, TYP, NO, A.INV_DT, GSTIN, LGLNM, TRDNM, ADDRESS1, ADDRESS2, LOC, PIN, STCD, PH, EM, B_GSTIN, B_LGLNM, B_TRDNM, 
			 POS, ADDR1, ADDR2, B_LOC, B_PIN, B_STCD, B_PH, B_EM, DIS_NM, DIS_ADDR1, DIS_ADDR2, DIS_LOC, DIS_PIN, DIS_STCD, SHIP_GSTIN, SHIP_LGLNM, SHIP_TRDNM, SHIP_ADDR1, SHIP_ADDR2, SHIP_LOC, 
			 SHIP_PIN, SHIP_STCD, SLNO,'Freight' PRDDESC, 'Y', Freight_hsn_code  HSNCD,'Freight' BARCDE,1 QTY,0 FREEQTY, UNIT, 
			 UNITPRICE= CAST(b.Freight   
			   -(CASE WHEN B.OH_TAX_METHOD =2 THEN ISNULL(Freight_CGST_AMOUNT,0)+ISNULL(Freight_SGST_AMOUNT,0)+ISNULL(Freight_IGST_AMOUNT,0) ELSE 0 END)
			   AS NUMERIC(18,2)), 
			 TOTAMT=CAST(b.Freight   
			   -(CASE WHEN B.OH_TAX_METHOD =2 THEN ISNULL(Freight_CGST_AMOUNT,0)+ISNULL(Freight_SGST_AMOUNT,0)+ISNULL(Freight_IGST_AMOUNT,0) ELSE 0 END)
				 AS NUMERIC(18,2)), 
			 DISCOUNT=0, 
			 PRETAXVAL=Freight_TAXABLE_VALUE , 
			 ASSAMT=Freight_TAXABLE_VALUE, 
			 GSTRT=Freight_gst_percentage , 
			 IGSTAMT=isnull(Freight_igst_amount,0) , 
			 CGSTAMT=isnull(Freight_cgst_amount,0) , 
			 SGSTAMT=isnull(Freight_sgst_amount,0) , 
			 0 CESRT,0 CESAMT, 
			 0 CESNONADVLAMT,0  STATECESRT,0 STATECESAMT,0 STATECESNONADVLAMT, OTHCHRG, 
			 TOTITEMVAL=   ISNULL(Freight_TAXABLE_VALUE ,0)+ISNULL(Freight_CGST_AMOUNT,0)+ISNULL(Freight_SGST_AMOUNT,0)+ISNULL(Freight_IGST_AMOUNT,0) ,
			  ORDLINEREF, ORGCNTRY, PRDSLNO, NM, EXPDT, WRDT, ATTR_NM, ATTR_VAL, 
			  ASSVAL, CGSTVAL, SGSTVAL,  IGSTVAL,0 CESVAL,0 STCESVAL,0 DISCOUNTVAL,0 OTHCHRGVAL, RNDOFFAMT, TOTINVVAL, TOTINVVALFC, PAY_NM, ACCDET, MODE, FININSBR, PAYTERM, PAYINSTR, CRTRN, DIRDR, CRDAY, PAIDAMT, PAYMTDUE, 
			 INVRM, INVSTDT, INVENDDT, INVNO, INVDT, OTHREFNO, RECADVREFR, RECADVDT, TENDREFR, CONTRREFR, EXTREFR, PROJREFR, POREFR, POREFDT, SHIPBNO, SHIPBDT, PORT, REFCLM, FORCUR, CNTCODE, 
			 TRANSID, TRANSNAME, DISTANCE, TRANSDOCNO, TRANSDOCDT, VEHNO, VEHTYPE, TRANSMODE 
		 FROM #TMPOVERHEAD A
		 JOIN INM01106 B ON 1=1
		 WHERE B.INV_ID=@CXNID
		 AND B.Freight <>0
		 union all
 
		 SELECT 	TOP 1  TAXSCH, SUPTYP, REGREV, ECMGSTIN, IGSTONINTRA, TYP, NO, A.INV_DT, GSTIN, LGLNM, TRDNM, ADDRESS1, ADDRESS2, LOC, PIN, STCD, PH, EM, B_GSTIN, B_LGLNM, B_TRDNM, 
			 POS, ADDR1, ADDR2, B_LOC, B_PIN, B_STCD, B_PH, B_EM, DIS_NM, DIS_ADDR1, DIS_ADDR2, DIS_LOC, DIS_PIN, DIS_STCD, SHIP_GSTIN, SHIP_LGLNM, SHIP_TRDNM, SHIP_ADDR1, SHIP_ADDR2, SHIP_LOC, 
			 SHIP_PIN, SHIP_STCD, SLNO,'Insurance' PRDDESC, 'Y', insurance_hsn_code  HSNCD,'Insurance' BARCDE,1 QTY,0 FREEQTY, UNIT, 
			 UNITPRICE= CAST(b.insurance   
			   -(CASE WHEN B.OH_TAX_METHOD =2 THEN ISNULL(insurance_CGST_AMOUNT,0)+ISNULL(insurance_SGST_AMOUNT,0)+ISNULL(insurance_IGST_AMOUNT,0) ELSE 0 END)
			   AS NUMERIC(18,2)), 
			 TOTAMT=CAST(b.insurance   
			   -(CASE WHEN B.OH_TAX_METHOD =2 THEN ISNULL(insurance_CGST_AMOUNT,0)+ISNULL(insurance_SGST_AMOUNT,0)+ISNULL(insurance_IGST_AMOUNT,0) ELSE 0 END)
			   AS NUMERIC(18,2)), 
			 DISCOUNT=0, 
			 PRETAXVAL=insurance_TAXABLE_VALUE , 
			 ASSAMT=insurance_TAXABLE_VALUE, 
			 GSTRT=insurance_gst_percentage , 
			 IGSTAMT=isnull(insurance_igst_amount,0) , 
			 CGSTAMT=isnull(insurance_cgst_amount,0) , 
			 SGSTAMT=isnull(insurance_sgst_amount,0) , 
			 0 CESRT,0 CESAMT, 
			 0 CESNONADVLAMT,0  STATECESRT,0 STATECESAMT,0 STATECESNONADVLAMT, OTHCHRG, 
			 TOTITEMVAL=   ISNULL(insurance_TAXABLE_VALUE ,0)+ISNULL(insurance_CGST_AMOUNT,0)+ISNULL(insurance_SGST_AMOUNT,0)+ISNULL(insurance_IGST_AMOUNT,0) ,
			  ORDLINEREF, ORGCNTRY, PRDSLNO, NM, EXPDT, WRDT, ATTR_NM, ATTR_VAL, 
			  ASSVAL, CGSTVAL, SGSTVAL,  IGSTVAL,0 CESVAL,0 STCESVAL,0 DISCOUNTVAL,0 OTHCHRGVAL, RNDOFFAMT, TOTINVVAL, TOTINVVALFC, PAY_NM, ACCDET, MODE, FININSBR, PAYTERM, PAYINSTR, CRTRN, DIRDR, CRDAY, PAIDAMT, PAYMTDUE, 
			 INVRM, INVSTDT, INVENDDT, INVNO, INVDT, OTHREFNO, RECADVREFR, RECADVDT, TENDREFR, CONTRREFR, EXTREFR, PROJREFR, POREFR, POREFDT, SHIPBNO, SHIPBDT, PORT, REFCLM, FORCUR, CNTCODE, 
			 TRANSID, TRANSNAME, DISTANCE, TRANSDOCNO, TRANSDOCDT, VEHNO, VEHTYPE, TRANSMODE 
		 FROM #TMPOVERHEAD A
		 JOIN INM01106 B ON 1=1
		 WHERE B.INV_ID=@CXNID
		 AND B.insurance <>0
		 union all
 
		 SELECT 	TOP 1  TAXSCH, SUPTYP, REGREV, ECMGSTIN, IGSTONINTRA, TYP, NO, A.INV_DT, GSTIN, LGLNM, TRDNM, ADDRESS1, ADDRESS2, LOC, PIN, STCD, PH, EM, B_GSTIN, B_LGLNM, B_TRDNM, 
			 POS, ADDR1, ADDR2, B_LOC, B_PIN, B_STCD, B_PH, B_EM, DIS_NM, DIS_ADDR1, DIS_ADDR2, DIS_LOC, DIS_PIN, DIS_STCD, SHIP_GSTIN, SHIP_LGLNM, SHIP_TRDNM, SHIP_ADDR1, SHIP_ADDR2, SHIP_LOC, 
			 SHIP_PIN, SHIP_STCD, SLNO,'Packing' PRDDESC, 'Y', packing_hsn_code  HSNCD,'Packing' BARCDE,1 QTY,0 FREEQTY, UNIT, 
			 UNITPRICE= CAST(b.packing   
			   -(CASE WHEN B.OH_TAX_METHOD =2 THEN ISNULL(packing_CGST_AMOUNT,0)+ISNULL(packing_SGST_AMOUNT,0)+ISNULL(packing_IGST_AMOUNT,0) ELSE 0 END)
			   AS NUMERIC(18,2)), 
			 TOTAMT=CAST(b.packing   
			   -(CASE WHEN B.OH_TAX_METHOD =2 THEN ISNULL(packing_CGST_AMOUNT,0)+ISNULL(packing_SGST_AMOUNT,0)+ISNULL(packing_IGST_AMOUNT,0) ELSE 0 END)
			   AS NUMERIC(18,2)), 
			 DISCOUNT=0, 
			 PRETAXVAL=packing_TAXABLE_VALUE , 
			 ASSAMT=packing_TAXABLE_VALUE, 
			 GSTRT=packing_gst_percentage , 
			 IGSTAMT=isnull(packing_igst_amount,0) , 
			 CGSTAMT=isnull(packing_cgst_amount,0) , 
			 SGSTAMT=isnull(packing_sgst_amount,0) , 
			 0 CESRT,0 CESAMT, 
			 0 CESNONADVLAMT,0  STATECESRT,0 STATECESAMT,0 STATECESNONADVLAMT, OTHCHRG, 
			 TOTITEMVAL=   ISNULL(packing_TAXABLE_VALUE ,0)+ISNULL(packing_CGST_AMOUNT,0)+ISNULL(packing_SGST_AMOUNT,0)+ISNULL(packing_IGST_AMOUNT,0) ,
			  ORDLINEREF, ORGCNTRY, PRDSLNO, NM, EXPDT, WRDT, ATTR_NM, ATTR_VAL, 
			  ASSVAL, CGSTVAL, SGSTVAL,  IGSTVAL,0 CESVAL,0 STCESVAL,0 DISCOUNTVAL,0 OTHCHRGVAL, RNDOFFAMT, TOTINVVAL, TOTINVVALFC, PAY_NM, ACCDET, MODE, FININSBR, PAYTERM, PAYINSTR, CRTRN, DIRDR, CRDAY, PAIDAMT, PAYMTDUE, 
			 INVRM, INVSTDT, INVENDDT, INVNO, INVDT, OTHREFNO, RECADVREFR, RECADVDT, TENDREFR, CONTRREFR, EXTREFR, PROJREFR, POREFR, POREFDT, SHIPBNO, SHIPBDT, PORT, REFCLM, FORCUR, CNTCODE, 
			 TRANSID, TRANSNAME, DISTANCE, TRANSDOCNO, TRANSDOCDT, VEHNO, VEHTYPE, TRANSMODE 
		 FROM #TMPOVERHEAD A
		 JOIN INM01106 B ON 1=1
		 WHERE B.INV_ID=@CXNID
		 AND B.packing <>0
          union all
          
		 SELECT 	TOP 1  TAXSCH, SUPTYP, REGREV, ECMGSTIN, IGSTONINTRA, TYP, NO, A.INV_DT, GSTIN, LGLNM, TRDNM, ADDRESS1, ADDRESS2, LOC, PIN, STCD, PH, EM, B_GSTIN, B_LGLNM, B_TRDNM, 
			 POS, ADDR1, ADDR2, B_LOC, B_PIN, B_STCD, B_PH, B_EM, DIS_NM, DIS_ADDR1, DIS_ADDR2, DIS_LOC, DIS_PIN, DIS_STCD, SHIP_GSTIN, SHIP_LGLNM, SHIP_TRDNM, SHIP_ADDR1, SHIP_ADDR2, SHIP_LOC, 
			 SHIP_PIN, SHIP_STCD, SLNO,'Tcs Amount' PRDDESC, 'Y' ISSERVC,@ctcshsn_code as HSNCD,'Tcs Amount' BARCDE,1 QTY,0 FREEQTY, UNIT, 
			 UNITPRICE= CAST(b.Tcs_Amount 
			   AS NUMERIC(18,2)), 
			 TOTAMT=CAST(Tcs_Amount AS NUMERIC(18,2)), 
			 DISCOUNT=0, 
			 PRETAXVAL=CAST(Tcs_Amount AS NUMERIC(18,2)) , 
			 ASSAMT=CAST(Tcs_Amount AS NUMERIC(18,2)), 
			 GSTRT=0 , 
			 IGSTAMT=0 , 
			 CGSTAMT=0 , 
			 SGSTAMT=0 , 
			 0 CESRT,0 CESAMT, 
			 0 CESNONADVLAMT,0  STATECESRT,0 STATECESAMT,0 STATECESNONADVLAMT, OTHCHRG, 
			 TOTITEMVAL=  CAST(Tcs_Amount AS NUMERIC(18,2)),
			  ORDLINEREF, ORGCNTRY, PRDSLNO, NM, EXPDT, WRDT, ATTR_NM, ATTR_VAL, 
			  ASSVAL, CGSTVAL, SGSTVAL,  IGSTVAL,0 CESVAL,0 STCESVAL,0 DISCOUNTVAL,0 OTHCHRGVAL, RNDOFFAMT, TOTINVVAL, TOTINVVALFC, PAY_NM, ACCDET, MODE, FININSBR, PAYTERM, PAYINSTR, CRTRN, DIRDR, CRDAY, PAIDAMT, PAYMTDUE, 
			 INVRM, INVSTDT, INVENDDT, INVNO, INVDT, OTHREFNO, RECADVREFR, RECADVDT, TENDREFR, CONTRREFR, EXTREFR, PROJREFR, POREFR, POREFDT, SHIPBNO, SHIPBDT, PORT, REFCLM, FORCUR, CNTCODE, 
			 TRANSID, TRANSNAME, DISTANCE, TRANSDOCNO, TRANSDOCDT, VEHNO, VEHTYPE, TRANSMODE 
		 FROM #TMPOVERHEAD A
		 JOIN INM01106 B ON 1=1
		 WHERE B.INV_ID=@CXNID
		 AND isnull(B.Tcs_Amount,0) <>0
       


		 ;with CTE as 
		 (
			select NEWSRNO =ROW_NUMBER () OVER (ORDER BY CASE WHEN BARCDE IN('OTHER CHARGES','FREIGHT','INSURANCE','PACKING','Tcs Amount') THEN 1 ELSE 0 END ,SLNO ),* from  #TMPINVOICE a
		 )

		 UPDATE CTE SET SLNO  =NEWSRNO

	
	  select *   
	  from #TMPINVOICE  
	   ORDER BY SLNO  
  
	  DECLARE @CLOCID VARCHAR(4),@CERRORMSG VARCHAR(1000)
	  SElECT TOP 1 @CLOCID=location_code FROM inm01106 (NOLOCK) WHERE inv_id=@CXNID
    
	  EXEC VALIDATEXN_EINVOICE @CXNID=@CXNID,@CDEPT_ID=@CLOCID,@CXN_TYPE='wsl',@CERRMSG= @CERRORMSG OUTPUT
   
   
	   SELECT '' AS ERRMSG WHERE 1=2
		
 
      return  
  
        
END  
  
