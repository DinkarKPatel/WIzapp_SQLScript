CREATE PROCEDURE SP3S_INSERT_ESTIMATED_OPS  
(  
 @CLOCID VARCHAR(5)='',  
 @CHKONLYCASHMEMO BIT=1  
)  
AS  
BEGIN  
     
    DECLARE @CERRORMSG VARCHAR(1000),@NSTEP VARCHAR(10),@NLOCCOUNT INT,@CJOINSKU VARCHAR(MAX),@CJOINSKU1 VARCHAR(MAX),  
            @CJOINSKU2 VARCHAR(MAX)  
       
    BEGIN TRAN            
    BEGIN TRY          
      
    SET @CERRORMSG=''  
    SET  @NLOCCOUNT=(SELECT COUNT(*) FROM LOCATION )  
    IF @NLOCCOUNT>1  
    BEGIN  
        SET @CERRORMSG='MULTIPLE LOCATION FOUND PLEASE CHEK'  
        GOTO END_PROC  
    END  
   
    --CBS QTY BIN WISE  
   IF OBJECT_ID ('TEMPDB..#TMPOPS','U') IS NOT NULL  
      DROP TABLE #TMPOPS  
     
     
   SELECT A.DEPT_ID , A.PRODUCT_CODE ,A.BIN_ID   
          ,CAST(SUM( (CASE WHEN A.XN_TYPE='OPS' OR (A.XN_TYPE IN ('WPR','DNPR','TTM','API','SCF','OPS','PRD', 'PUR', 'CHI', 'SLR','UNC','APR', 'WSR', 'PFI', 'PFG', 'BCG','MRP','DCI','PSB','JWR')  ) THEN 1   
                           WHEN A.XN_TYPE IN ('WPI','DNPI''APO','SCC','BOC','PRT','CHO','SLS','CNC','APP','WSL','CIP', 'CRM', 'DCO','MIP','CSB','JWI','DLM') THEN -1 ELSE 0 END) * (XN_QTY)) AS NUMERIC(14,2)) AS CBS    
    INTO #TMPOPS     
    FROM VW_XNSREPS  A  (NOLOCK)   
    JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
    JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE   
    WHERE   SKU.ER_FLAG=2  
    GROUP BY A.DEPT_ID ,A.BIN_ID,A.PRODUCT_CODE   
      
      
       INSERT OPS01106	( PURCHASE_PRICE, RFINSERTED, XN_DT, SENT_TO_HO, XFER_PRICE, XFER_PRICE_WOTAX, PRODUCT_CODE, LOT_NO, DEPT_ID, QUANTITY_OB, COMPANY_CODE, LAST_UPDATE, SENT_FOR_RECON, BIN_ID ) 
        SELECT 	0 AS  PURCHASE_PRICE,0 AS  RFINSERTED, GETDATE()  AS XN_DT,0 AS  SENT_TO_HO, 
        0 AS XFER_PRICE,0 AS  XFER_PRICE_WOTAX, PRODUCT_CODE, 
        '' AS LOT_NO, DEPT_ID,CBS AS  QUANTITY_OB,'01' AS  COMPANY_CODE,GETDATE() LAST_UPDATE,0 AS  SENT_FOR_RECON, 
        BIN_ID 
        FROM #TMPOPS

    -- DELETE BARCODE WHEN CBS QTY 0  
      
   --NOW CHECK REGULAR OR ESTIMATED BARCODE IN SINGLE MEMO  
     
     
      IF OBJECT_ID ('TEMPDB..#TMPMEMO','U') IS NOT NULL  
       DROP TABLE #TMPMEMO  
      
       --SALE--  
  SELECT XN_TYPE='SLS', A.CM_ID,C.ER_FLAG   
  INTO #TMPMEMO  
  FROM CMD01106 A  
  JOIN CMM01106 B ON A.CM_ID =B.CM_ID   
  JOIN SKU C ON A.PRODUCT_CODE =C.PRODUCT_CODE   
  WHERE B.CANCELLED =0 AND C.ER_FLAG =2  
  GROUP BY A.CM_ID,C.ER_FLAG  
          
        IF EXISTS (SELECT TOP 1 'U'  FROM #TMPMEMO A  
  JOIN CMD01106 B ON A.CM_ID =B.CM_ID   
  JOIN SKU C ON B.PRODUCT_CODE =C.PRODUCT_CODE   
  WHERE  C.ER_FLAG =1)  
  BEGIN  
   SET @CERRORMSG='REGULAR OR ESTIMATED BARCODE FOUND IN SINGLE BILL'  
   GOTO END_PROC  
  END  
   
        SET @CHKONLYCASHMEMO=1  
  IF @CHKONLYCASHMEMO=1  
  BEGIN    
      
   
    IF OBJECT_ID ('TEMPDB..#TEMPDUPLICATE','U') IS NOT NULL   
    DROP TABLE #TEMPDUPLICATE   
     
     SELECT DISTINCT 'APP' AS XN_TYPE, A.MEMO_ID,ER_FLAG   
     INTO #TEMPDUPLICATE    
     FROM APD01106 (NOLOCK) B   
     JOIN APM01106 A ON A.MEMO_ID=B.MEMO_ID     
     JOIN SKU ON SKU.PRODUCT_CODE=B.PRODUCT_CODE   
     WHERE SKU.ER_FLAG=2     
     UNION    
     SELECT DISTINCT 'APR',A.MEMO_ID,SKU.ER_FLAG FROM APPROVAL_RETURN_DET (NOLOCK) B    
     JOIN APPROVAL_RETURN_MST A ON A.MEMO_ID=B.MEMO_ID   
     JOIN APD01106 APD ON APD.ROW_ID=B.APD_ROW_ID      
     JOIN SKU ON SKU.PRODUCT_CODE=APD.PRODUCT_CODE   
     WHERE SKU.ER_FLAG=2    
     UNION  
     SELECT DISTINCT 'SLS',A.CM_ID,SKU.ER_FLAG FROM CMD01106 (NOLOCK) B    
     JOIN CMM01106 A ON B.CM_ID=A.CM_ID    
     JOIN SKU ON SKU.PRODUCT_CODE=B.PRODUCT_CODE WHERE SKU.ER_FLAG=2    
     UNION  
     SELECT DISTINCT 'WSR',A.CN_ID,SKU.ER_FLAG FROM CND01106 (NOLOCK) B   
     JOIN CNM01106 A ON B.CN_ID=A.CN_ID    
     JOIN SKU ON SKU.PRODUCT_CODE=B.PRODUCT_CODE WHERE SKU.ER_FLAG=2    
     UNION  
     SELECT DISTINCT 'CNC',A.CNC_MEMO_ID,SKU.ER_FLAG FROM ICD01106 (NOLOCK) B   
     JOIN ICM01106 A ON A.CNC_MEMO_ID=B.CNC_MEMO_ID   
     JOIN SKU ON SKU.PRODUCT_CODE=B.PRODUCT_CODE WHERE SKU.ER_FLAG=2   
     UNION  
     SELECT DISTINCT 'WSL',A.INV_ID,SKU.ER_FLAG FROM IND01106 (NOLOCK) B    
     JOIN INM01106 A ON A.INV_ID=B.INV_ID    
     JOIN SKU ON SKU.PRODUCT_CODE=B.PRODUCT_CODE WHERE SKU.ER_FLAG=2      
     UNION  
     SELECT DISTINCT 'PFI',A.IRM_MEMO_ID,SKU.ER_FLAG FROM IRD01106 (NOLOCK) B  
     JOIN IRM01106 A ON A.IRM_MEMO_ID=B.IRM_MEMO_ID   
     JOIN SKU ON SKU.PRODUCT_CODE=B.PRODUCT_CODE WHERE SKU.ER_FLAG=2    
     UNION  
     SELECT DISTINCT 'CIP',A.IRM_MEMO_ID,SKU.ER_FLAG  FROM IRD01106 (NOLOCK) B  
     JOIN IRM01106 A ON A.IRM_MEMO_ID=B.IRM_MEMO_ID   
     JOIN SKU ON SKU.PRODUCT_CODE=B.NEW_PRODUCT_CODE WHERE SKU.ER_FLAG=2      
     UNION  
     SELECT DISTINCT 'JWI', A.ISSUE_ID,SKU.ER_FLAG   
     FROM JOBWORK_ISSUE_DET (NOLOCK) B  
     JOIN JOBWORK_ISSUE_MST A ON A.ISSUE_ID=B.ISSUE_ID    
     JOIN SKU ON SKU.PRODUCT_CODE=B.PRODUCT_CODE WHERE SKU.ER_FLAG=2    
     UNION  
     SELECT DISTINCT 'JWR',A.RECEIPT_ID,SKU.ER_FLAG FROM JOBWORK_RECEIPT_DET (NOLOCK) B   
     JOIN JOBWORK_RECEIPT_MST A ON A.RECEIPT_ID=B.RECEIPT_ID   
     JOIN SKU ON SKU.PRODUCT_CODE=B.PRODUCT_CODE WHERE SKU.ER_FLAG=2    
     UNION  
     SELECT DISTINCT 'PUR',A.MRR_ID,SKU.ER_FLAG FROM PID01106 (NOLOCK) B  
     JOIN PIM01106 A ON A.MRR_ID=B.MRR_ID  
     JOIN SKU ON SKU.PRODUCT_CODE=B.PRODUCT_CODE WHERE SKU.ER_FLAG=2    
     UNION  
     SELECT DISTINCT '', A.MEMO_ID,SKU.ER_FLAG FROM PRD_TRANSFER_MAIN_DET (NOLOCK) B   
     JOIN PRD_TRANSFER_MAIN_MST A ON A.MEMO_ID=B.MEMO_ID   
     JOIN SKU ON SKU.PRODUCT_CODE=B.PRODUCT_CODE WHERE SKU.ER_FLAG=2    
     UNION  
     SELECT DISTINCT 'PRT',A.RM_ID,SKU.ER_FLAG FROM RMD01106 (NOLOCK) B  
     JOIN RMM01106 A ON A.RM_ID=B.RM_ID   
     JOIN SKU ON SKU.PRODUCT_CODE=B.PRODUCT_CODE WHERE SKU.ER_FLAG=2    
     UNION  
     SELECT DISTINCT 'SNC_IN', A.MEMO_ID,SKU.ER_FLAG FROM SNC_BARCODE_DET (NOLOCK) B   
     JOIN SNC_DET A ON A.ROW_ID=B.REFROW_ID    
     JOIN SKU ON SKU.PRODUCT_CODE=B.PRODUCT_CODE WHERE SKU.ER_FLAG=2    
     UNION  
     SELECT DISTINCT 'SNC_IN', A.MEMO_ID,SKU.ER_FLAG FROM SNC_CONSUMABLE_DET (NOLOCK) B  
     JOIN SNC_MST A ON A.MEMO_ID=B.MEMO_ID   
     JOIN SKU ON SKU.PRODUCT_CODE=B.PRODUCT_CODE WHERE SKU.ER_FLAG=2    
          
          
        DECLARE @XNTYPE VARCHAR(10),@CMEMO_ID VARCHAR(100)  
        SELECT TOP 1 @XNTYPE=A.XN_TYPE,@CMEMO_ID=A.MEMO_ID  
        FROM #TEMPDUPLICATE A  
        GROUP BY A.XN_TYPE,A.MEMO_ID   
        HAVING COUNT(*)>1  
          
        IF ISNULL(@CMEMO_ID,'')<>''  
        BEGIN   
             SET @CERRORMSG='REGULAR OR ESTIMATED BARCODE FOUND IN XN TYPE- '+@XNTYPE +' AND MEMO ID' +@CMEMO_ID  
          GOTO END_PROC  
        END  
     
   END  
    
      
    DELETE FROM #TMPOPS WHERE CBS=0  
      
   -- UPDATE IN PMT OF CBS QTY  
    UPDATE A SET QUANTITY_IN_STOCK =B.CBS    
    FROM PMT01106 A  
    JOIN #TMPOPS B ON A.PRODUCT_CODE =B.PRODUCT_CODE AND A.BIN_ID =B.BIN_ID   
      
   -- INSERT OPS IN PMT   
    INSERT PMT01106 ( LAST_UPDATE, REP_ID, PRODUCT_CODE, QUANTITY_IN_STOCK, DEPT_ID, BIN_ID )    
    SELECT   GETDATE() AS  LAST_UPDATE, '' AS REP_ID,A.PRODUCT_CODE AS PRODUCT_CODE,A.CBS AS QUANTITY_IN_STOCK,   
    A.DEPT_ID,A.BIN_ID AS BIN_ID   
    FROM #TMPOPS A  
    LEFT OUTER JOIN PMT01106 B ON A.PRODUCT_CODE =B.PRODUCT_CODE AND A.BIN_ID =B.BIN_ID   
    WHERE B.PRODUCT_CODE IS NULL  
  
    SET @NSTEP=10      
      
   IF OBJECT_ID ('TEMPDB..#TABELIST','U') IS NOT NULL            
       DROP TABLE #TABELIST            
  SELECT SR=CAST(0 AS INT),MSTTABLE=CAST('' AS  VARCHAR(100)),TABLENAME=CAST('' AS  VARCHAR(100)),KEYFIELD=CAST('' AS  VARCHAR(100)),CUTOFFDATE=CAST('' AS VARCHAR(100)),      
  JOINSTR=CAST('' AS VARCHAR(MAX))      
  INTO #TABELIST            
  WHERE 1=2            
       
        
    --INSERTION ALL TRANSACTION TABLES            
     INSERT INTO #TABELIST (MSTTABLE,SR,TABLENAME,KEYFIELD,CUTOFFDATE,JOINSTR)     
     SELECT 'PIM01106', 1, 'PID01106','MRR_ID','RECEIPT_DT',' JOIN PIM01106 A ON A.MRR_ID=B.MRR_ID'   
     UNION ALL  
     SELECT 'PIM01106',2, 'PIM01106','MRR_ID','RECEIPT_DT',' '          
     UNION ALL  
     SELECT 'CMM01106', 1,'CMD01106','CM_ID','CM_DT',' JOIN CMM01106 A ON B.CM_ID=A.CM_ID'    
     UNION ALL  
     SELECT 'CMM01106', 2,'CMM01106','CM_ID','CM_DT',''   
     UNION ALL  
     SELECT 'CNM01106',1,'CND01106','CN_ID','CN_DT',' JOIN CNM01106 A ON B.CN_ID=A.CN_ID'   
     UNION ALL  
     SELECT 'CNM01106',2,'CNM01106','CN_ID','CN_DT',' '   
     UNION ALL  
     SELECT 'INM01106',1,'IND01106','INV_ID','INV_DT',' JOIN INM01106 A ON A.INV_ID=B.INV_ID '  
     UNION ALL  
     SELECT 'INM01106', 2,'INM01106','INV_ID','INV_DT',' '  
     UNION ALL  
     SELECT 'RMM01106',1,'RMD01106','RM_ID','RM_DT',' JOIN RMM01106 A ON A.RM_ID=B.RM_ID '  
     UNION ALL  
     SELECT 'RMM01106',2,'RMM01106','RM_ID','RM_DT',' '  
     UNION ALL  
     SELECT 'PRD_TRANSFER_MAIN_MST',1,'PRD_TRANSFER_MAIN_DET','MEMO_ID','MEMO_DT',' JOIN PRD_TRANSFER_MAIN_MST A ON A.MEMO_ID=B.MEMO_ID '  
     UNION ALL  
     SELECT 'PRD_TRANSFER_MAIN_MST',2,'PRD_TRANSFER_MAIN_SUB_DET','MEMO_ID','MEMO_DT',' JOIN PRD_TRANSFER_MAIN_MST A ON A.MEMO_ID=B.MEMO_ID '  
     UNION ALL  
     SELECT 'PRD_TRANSFER_MAIN_MST',3,'PRD_TRANSFER_MAIN_MST','MEMO_ID','MEMO_DT',' '  
     --UNION ALL  
     --SELECT 'SNC_MST',1,'SNC_BARCODE_DET','MEMO_ID','MEMO_DT',' JOIN SNC_DET A ON A.ROW_ID=B.REFROW_ID '  
     --UNION ALL  
     --SELECT 'SNC_MST',2,'SNC_DET','MEMO_ID','MEMO_DT',' JOIN SNC_MST A ON A.MEMO_ID=B.MEMO_ID '  
     --UNION ALL  
     --SELECT 'SNC_MST',3,'SNC_MST','MEMO_ID','MEMO_DT',' '  
     UNION ALL  
     SELECT 'ICM01106',1,'ICD01106','CNC_MEMO_ID','CNC_MEMO_DT',' JOIN ICM01106 A ON A.CNC_MEMO_ID=B.CNC_MEMO_ID '  
     UNION ALL  
     SELECT 'ICM01106',2,'ICM01106','CNC_MEMO_ID','CNC_MEMO_DT',' '  
     UNION ALL  
     SELECT 'APPROVAL_RETURN_MST',1,'APPROVAL_RETURN_DET','MEMO_ID','MEMO_DT',' JOIN APPROVAL_RETURN_MST A ON A.MEMO_ID=B.MEMO_ID JOIN APD01106 APD ON APD.ROW_ID=B.APD_ROW_ID  '  
     UNION ALL  
     SELECT 'APPROVAL_RETURN_MST',2,'APPROVAL_RETURN_MST','MEMO_ID','MEMO_DT',' '  
     UNION ALL  
     SELECT 'APM01106',3,'APD01106','MEMO_ID','MEMO_DT',' JOIN APM01106 A ON A.MEMO_ID=B.MEMO_ID '  
     UNION ALL  
     SELECT 'APM01106',4,'APM01106','MEMO_ID','MEMO_DT',' '  
     UNION ALL  
     SELECT 'JOBWORK_RECEIPT_MST',1,'JOBWORK_RECEIPT_DET','RECEIPT_ID','RECEIPT_DT',' JOIN JOBWORK_RECEIPT_MST A ON A.RECEIPT_ID=B.RECEIPT_ID '  
     UNION ALL  
     SELECT 'JOBWORK_RECEIPT_MST',2,'JOBWORK_RECEIPT_MST','RECEIPT_ID','RECEIPT_DT',' '  
     UNION ALL  
     SELECT 'JOBWORK_ISSUE_MST',1,'JOBWORK_ISSUE_DET','ISSUE_ID','ISSUE_DT',' JOIN JOBWORK_ISSUE_MST A ON A.ISSUE_ID=B.ISSUE_ID '  
     UNION ALL  
     SELECT 'JOBWORK_ISSUE_MST',2,'JOBWORK_ISSUE_MST','ISSUE_ID','ISSUE_DT',' '  
     UNION ALL  
     SELECT 'IRM01106',1,'IRD01106','IRM_MEMO_ID','IRM_MEMO_DT',' JOIN IRM01106 A ON A.IRM_MEMO_ID=B.IRM_MEMO_ID '  
     UNION ALL  
     SELECT 'IRM01106',2,'IRM01106','IRM_MEMO_ID','IRM_MEMO_DT',' '  
     UNION ALL  
     SELECT 'SNC_MST1',1,'SNC_CONSUMABLE_DET','MEMO_ID','MEMO_DT',' JOIN SNC_MST A ON A.MEMO_ID=B.MEMO_ID '  
     UNION ALL  
     SELECT 'SNC_MST1',2,'SNC_MST','MEMO_ID','MEMO_DT',' '  
     UNION ALL  
     SELECT 'IRM011061',1,'IRD01106','IRM_MEMO_ID','IRM_MEMO_DT',' JOIN IRM01106 A ON A.IRM_MEMO_ID=B.IRM_MEMO_ID '  
     UNION ALL  
     SELECT 'IRM011061',2,'IRM01106','IRM_MEMO_ID','MEMO_DT',' '  
       
     
       
        
     SET @CJOINSKU=' JOIN SKU ON SKU.PRODUCT_CODE=B.PRODUCT_CODE WHERE SKU.ER_FLAG=2 '  
     SET @CJOINSKU1=' JOIN SKU ON SKU.PRODUCT_CODE=APD.PRODUCT_CODE WHERE SKU.ER_FLAG=2 '  
     SET @CJOINSKU2=' JOIN SKU ON SKU.PRODUCT_CODE=IRD.NEW_PRODUCT_CODE WHERE SKU.ER_FLAG=2 '  
     --NOW DELETE ENTRY  
     DECLARE @CMSTTABLENAME VARCHAR(100), @CTABLENAME VARCHAR(100),@CKEYFIELD VARCHAR(100),@JOINSTR VARCHAR(MAX),@CWHERECLAUSE VARCHAR(MAX),  
             @CCMD NVARCHAR(MAX),@NSR INT  
       
     WHILE EXISTS (SELECT TOP 1 * FROM #TABELIST WHERE ISNULL(KEYFIELD,'') <> '')            
     BEGIN            
            
          SET @JOINSTR=''      
    SELECT TOP 1 @CMSTTABLENAME=MSTTABLE, @CTABLENAME=TABLENAME,@CKEYFIELD=KEYFIELD,@JOINSTR=JOINSTR     
    FROM #TABELIST            
    WHERE ISNULL(KEYFIELD,'') <> ''    
    ORDER BY MSTTABLE,SR       
         
         
        IF OBJECT_ID ('TEMPDB..#TMPMEMOLIST','U') IS NOT NULL  
        DROP TABLE #TMPMEMOLIST   
        SELECT  CAST('' AS VARCHAR(100)) AS MEMO_ID  
        INTO #TMPMEMOLIST WHERE 1=2          
         
       IF @CTABLENAME ='APPROVAL_RETURN_DET'  
       BEGIN  
             
           SET @CCMD=' SELECT DISTINCT A.'+@CKEYFIELD+' FROM '+@CTABLENAME+' (NOLOCK) B '+@JOINSTR+' '+ @CJOINSKU1+' '  
     PRINT @CCMD  
     INSERT INTO #TMPMEMOLIST  
     EXEC SP_EXECUTESQL @CCMD  
         
       END  
       ELSE IF @CTABLENAME ='IRM011061'  
       BEGIN  
           SET @CCMD=' SELECT DISTINCT A.'+@CKEYFIELD+' FROM '+@CTABLENAME+' (NOLOCK) B '+@JOINSTR+' '+ @CJOINSKU2+' '  
     PRINT @CCMD  
     INSERT INTO #TMPMEMOLIST  
     EXEC SP_EXECUTESQL @CCMD  
         
       END  
       ELSE  
       BEGIN  
           SET @CCMD=' SELECT DISTINCT A.'+@CKEYFIELD+' FROM '+@CTABLENAME+' (NOLOCK) B '+@JOINSTR+' '+ @CJOINSKU+' '  
     PRINT @CCMD  
     INSERT INTO #TMPMEMOLIST  
     EXEC SP_EXECUTESQL @CCMD  
        
       END  
              
         
       WHILE EXISTS (SELECT TOP 1 'U' FROM #TABELIST WHERE MSTTABLE =@CMSTTABLENAME)  
       BEGIN  
            
            
          SELECT TOP 1 @NSR=SR,@CTABLENAME=TABLENAME,@CKEYFIELD=KEYFIELD,@JOINSTR=JOINSTR    
          FROM #TABELIST WHERE MSTTABLE =@CMSTTABLENAME ORDER BY SR  
            
          PRINT 'START FOR TABLE '+@CTABLENAME             
                       
     SET @CCMD=N'IF OBJECT_ID ('''+@CTABLENAME+''',''U'') IS NOT NULL            
     BEGIN            
     DELETE B  FROM '+@CTABLENAME+' (NOLOCK) B '+@JOINSTR+'   
     JOIN #TMPMEMOLIST TMP ON TMP.MEMO_ID=B.'+@CKEYFIELD+'            
     END '            
                   
       PRINT @CCMD    
     PRINT ' END FOR TABLE '+@CTABLENAME            
     EXEC SP_EXECUTESQL @CCMD                   
     DELETE FROM #TABELIST WHERE MSTTABLE=@CMSTTABLENAME AND SR=@NSR   
         
       END  
       
    
      END  
     
     
     GOTO END_PROC  
       --EXEC SP3S_INSERT_ESTIMATED_OPS '',0            
    END TRY            
    BEGIN CATCH            
    SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()              
    GOTO END_PROC            
    END CATCH            
                
    END_PROC:            
 IF @@TRANCOUNT>0              
 BEGIN              
                 
 IF ISNULL(@CERRORMSG,'')=''            
 BEGIN              
    COMMIT TRANSACTION              
 END              
 ELSE              
    ROLLBACK              
 END              
             
 SELECT @CERRORMSG AS ERRMSG    
   
END
