create PROCEDURE SAVETRAN_SLS_BEFORESAVE ----- Do not overwrite in May 2022 release
(
	@NUPDATEMODE NUMERIC(1,0),
	@NSPID	VARCHAR(40),
	@CMEMONOPREFIX VARCHAR(10),
	@BDONOTVALIDATECOUPON BIT=0,
	@BWIZCLIPAPICALLED BIT=0,
	@BSISLOC BIT=0,
	@BCALLEDFROMEASYCUT BIT=0,
	@BCALLEDFROMAFTERSAVE BIT=0,
	@NLOGINSPID	NUMERIC(5,0)=0,
	@bCalledFromBulkImport BIT=0
)
AS
BEGIN
	--changes by Dinkar in location id varchar(4)..
	-- @NUPDATEMODE:	1- NEW RETAIL SALE ADDED, 
	--					2- EDIT CURRENT BILL, 
	--					3- CURRENT RETAIL SALE CANCELLED, 
	--					4- CALLED FROM CTRL+F8 (DATE CHANGE OF BILL)			
	--					5- CALLED FROM PAYMENT MODE DIRECT EDIT W/O BILL EDIT
	
	-- @CMEMOID:		MEMOID IS REQUIRED IF @NUPDATEMODE IS 3 (FROM CANCELLATION)

	DECLARE @NSTEP		VARCHAR(10),@CECOUPONID VARCHAR(100), @cStepmsg varchar(100),@nEcouponDiscAmount NUMERIC(10,2)
	
	SET @NSTEP='2'
	
	set  @cStepmsg=''
	IF @BWIZCLIPAPICALLED=1 
	begin
		set  @cStepmsg='Api called '
		select @CECOUPONID=ecoupon_id,@nEcouponDiscAmount=discount_amount FROM  SLS_cmm01106_UPLOAD where sp_id=@nSpid
		IF @CECOUPONID<>''
		 set  @cStepmsg=@cStepmsg+'Ecoupon Disc:'+ltrim(rtrim(str(@nEcouponDiscAmount,10,2)))
	end

	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,@cStepmsg,0

	DECLARE @CTEMPDBNAME			VARCHAR(100),
			@CMASTERTABLENAME		VARCHAR(100),
			@CDETAILTABLENAME		VARCHAR(100),
			@CDETAILTABLENAME2		VARCHAR(100),
			@CDETAILTABLENAME3		VARCHAR(100),
			@CDETAILTABLENAME4		VARCHAR(100),
			@CDETAILTABLENAME5		VARCHAR(100),
			@CTEMPMASTERTABLENAME	VARCHAR(100),
			@CTEMPDETAILTABLENAME	VARCHAR(100),
			@CTEMPDETAILTABLENAME2	VARCHAR(100),
			@CTEMPDETAILTABLENAME3	VARCHAR(100),
			@CTEMPDETAILTABLENAME4	VARCHAR(100),
			@CTEMPDETAILTABLENAME5	VARCHAR(100),
			@CTEMPDETAILTABLENAME6	VARCHAR(100),
			@CTEMPDETAILTABLENAME7	VARCHAR(100),
			@CTEMPDETAILTABLENAME9	VARCHAR(100),
			@CTEMPDETAILTABLENAME10	VARCHAR(100),
			@CTEMPDETAILTABLENAME11	VARCHAR(100),
			@CTEMPMASTERTABLE		VARCHAR(100),
			@CTEMPDETAILTABLE		VARCHAR(100),
			@CTEMPDETAILTABLE2		VARCHAR(100),
			@CTEMPDETAILTABLE3		VARCHAR(100),
			@CTEMPDETAILTABLE4		VARCHAR(100),
			@CTEMPDETAILTABLE5		VARCHAR(100),
			@CTEMPDETAILTABLE6		VARCHAR(100),
			@CTEMPDETAILTABLE7		VARCHAR(100),			
			@CTEMPDETAILTABLE8		VARCHAR(100),
			@CTEMPDETAILTABLE9		VARCHAR(100),
			@CTEMPDETAILTABLE10		VARCHAR(100),
			@CTEMPDETAILTABLE11		VARCHAR(100),
			@CERRORMSG				VARCHAR(MAX),
			@LDONOTUPDATESTOCK		BIT,
			@CKEYFIELD1				VARCHAR(50),
			@CKEYFIELDVAL1			VARCHAR(50),
			@CKEYFIELD1_DETAIL2		VARCHAR(50),
			@CMEMONO				VARCHAR(20),
			@NMEMONOLEN				NUMERIC(20,0),
			@CMEMONOVAL				VARCHAR(50),
			@CLOCATIONID			VARCHAR(4),
			@CHODEPTID				VARCHAR(4),
			@CCMD					NVARCHAR(4000),
			@CCMDOUTPUT				NVARCHAR(4000),
			@NSAVETRANLOOP			BIT,
			@CREFAPPMEMOID			VARCHAR(40),
			@CAPRMEMOID VARCHAR(40),
			@BINSERTONLY BIT,
			@LENABLETEMPDATABASE	BIT,
			@BNEGSTOCKFOUND BIT,
			@CKEYSTABLE VARCHAR(100),
			@CUSERALIAS VARCHAR(100),
			@BESTIMATEMEMO NUMERIC(1),
			@CDEPT_ID CHAR(4),
			@BALLOWNEGSTOCK BIT,
			@CMEMONOLEN VARCHAR(5),
			@CDONOTENFORCEDAYCLOSE VARCHAR(2),
			@DCURRENTDATE DATETIME,
			@BINSERTONLYCMD BIT,
			@CCMMUSERCODE CHAR(7),
			@CERRPCTAX VARCHAR(100),
			@DCMDT DATETIME,
			@NCMMDISCAMT NUMERIC(10,2),@NSCHEMEGVCNT NUMERIC(2,0),
			@CTAXDIFFPC VARCHAR(50),
			@NCMDTAXAMT NUMERIC(10,2),
			@NCALCTAXAMT NUMERIC(10,2),@NEXPECTEDTAXAMT NUMERIC(10,2),
			@BMANUALBILL BIT,
			@DSTARTTIME DATETIME,@BAPPRETFOUND BIT,@nDtmADDNLDISCMODE INT,
			@CTMPTABLEFINYEAR VARCHAR(10),@BSLRRECONREQD BIT,@DSLRRECONCUTOFFDATE DATETIME,
			@CWHERECLAUSE VARCHAR(500),@CWHERECLAUSE1 VARCHAR(500),@CWHERECLAUSE2 VARCHAR(500),
			@@DXNDT DATETIME,@BSALESSETUPINEFFECT BIT,@BESTEXMPTSALES BIT,@CUSERCODE CHAR(7),@NPAYMODECNT INT,
			@CCUSTCODE CHAR(12),@CDTCODE CHAR(7),@DXNDT DATETIME,@BAGSTPACKSLIP BIT,@CROUNDBILLLEVEL VARCHAR(2),
			@NEXCLTAX NUMERIC(10,2),@BDEBUGMODE BIT,@CDEBUGMODE VARCHAR(2),@NPAYMODE INT,
			@BPAYMENTMISMATCH BIT,@NNEWNETAMOUNT NUMERIC(14,2),@NOLDNETAMOUNT NUMERIC(14,2),@CADJPAYMODECODE CHAR(7),
			@NPAYMODETOTAMT NUMERIC(14,2),@CZERODISCITEM VARCHAR(50),@CGVSCHEMECODE VARCHAR(10),@NGVSCHEMEAMOUNT NUMERIC(10,2),
			@BWIZCLIPGVFOUND BIT,@BUPDPAYMODEAMTAGSTCOUPON BIT,@NWIZCLIPGVAMOUNT NUMERIC(10,2),@NMINBILLAMTFORGVREDEMPTION NUMERIC(10,2),
			@BENABLEWIZCLIP BIT,@NINVALIDGVAMOUNT NUMERIC(10,2),@NGVMODE INT,
			@NSUBTOTAL NUMERIC(10,2),@NSUBTOTALCALC NUMERIC(10,2),@NSUBTOTALSTORED NUMERIC(10,2),
			@BAPPLYWIZCLIPDISCOUNTASFLAT BIT,@NADDNLDISCMODE INT,@BRESET BIT,@CTEXT VARCHAR(200),
			@BSALESSETUPDISABLED BIT,@NCOUPONDISCMODE NUMERIC(1,0),@CPOSSCHEMEECOUPONID VARCHAR(20),@CPARTYCODE CHAR(12),
			@CCURLOCPARTYSTATECODE VARCHAR(5),@NPARTYTYPE INT,@CPARTYSTATECODE CHAR(2),@NOCGST NUMERIC(10,2),
			@BEXTRAGSTCREDITDISALLOWED BIT,@BMRPEXCHANGEBILL BIT,@BDONOTPICKCARDDISC BIT,@cLoyaltyOtpCode VARCHAR(200),@CLOCID	VARCHAR(5)
			
	
	select @CLOCID=location_code from SLS_CMM01106_UPLOAD where sp_id=@NSPID 
	
	IF ISNULL(@CLOCID,'')=''
		SELECT @CLOCATIONID	=DEPT_ID FROM NEW_APP_LOGIN_INFO (NOLOCK) WHERE SPID=@@SPID 
	ELSE
		SELECT @CLOCATIONID=@CLOCID

	SELECT TOP 1 @CDEBUGMODE=VALUE FROM CONFIG (NOLOCK) WHERE  CONFIG_OPTION='SLS_DEBUG_MODE'
	SELECT TOP 1 @BENABLEWIZCLIP=ISNULL(WIZCLIP,0) FROM LOCATION (NOLOCK)
	WHERE DEPT_ID=@CLOCATIONID

	IF ISNULL(@NLOGINSPID,0)=0
		SET @NLOGINSPID=@@SPID
	

	--SELECT * FROM CALL_WC	
	
	SET @BDEBUGMODE=0---(CASE WHEN ISNULL(@CDEBUGMODE,'')='1' THEN 1 ELSE 0 END) --- 
	
	--IF @BDONOTVALIDATECOUPON=1 AND @BENABLEWIZCLIP=1 AND @nUpdatemode=1
	--	SELECT @BWIZCLIPAPICALLED=1,@BDONOTVALIDATECOUPON=0

	IF @BWIZCLIPAPICALLED=1 AND @BDONOTVALIDATECOUPON=0 AND @NUPDATEMODE=2 ---- DONE THIS TEMPORARY CHANGE AS PER DISCUSSION WITH ROHIT 
	     SET @BDONOTVALIDATECOUPON=1									   ----	( HE WILL CHECK THIS LATER ON : 23-12-2019) 
																		   ----	(FOR SUVIDHA BILL EDITING PROBLEM TICKET#12-0987 ) 
	--IF @BWIZCLIPAPICALLED=1 --AND @@spid=137
	--	GOTO END_PROC
		

	SET @BRESET=(CASE WHEN @BWIZCLIPAPICALLED=0 THEN 1 ELSE 0 END)
	
	SET @CTEXT='SLS_TMP_'+(CASE WHEN @BWIZCLIPAPICALLED=0 THEN '1' ELSE '0' END)
	
	SET @NSTEP = 5		-- DO VALIDATIONS ON INPUT DATA BY USER
	EXEC SP_CHKXNSAVELOG @CTEXT,@NSTEP,@BRESET,@NSPID,'',@BDEBUGMODE
	
	SET @DSTARTTIME=GETDATE()
	
	DECLARE @CRETVAL VARCHAR(MAX)
	
	DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))
	
	SET @CREFAPPMEMOID = ''
	
	SET @NSTEP = 10		-- SETTTING UP ENVIRONMENT

	-- CHECK TEMPORARY DATABASE TO HOLD TEMP TABLES 
	-- IF CONFIG SETTING SAYS TO DO SO
	SET @CTEMPDBNAME = ''

	SET @CMASTERTABLENAME	= 'CMM01106'
	SET @CDETAILTABLENAME	= 'CMD01106'
	SET @CDETAILTABLENAME2	= 'PAYMODE_XN_DET'
	SET @CDETAILTABLENAME4	= 'PACK_SLIP_REF'
	SET @CDETAILTABLENAME5	= 'IMAGE_XN_DET'	

	SET @CTEMPMASTERTABLENAME	= 'SLS_CMM01106_UPLOAD'
	SET @CTEMPDETAILTABLENAME	= 'SLS_CMD01106_UPLOAD'
	SET @CTEMPDETAILTABLENAME2	= 'SLS_PAYMODE_XN_DET_UPLOAD'
	SET @CTEMPDETAILTABLENAME5	= 'SLS_CMM01106_RPS_UPLOAD'
	SET @CTEMPDETAILTABLENAME6	= 'SLS_PACK_SLIP_REF_UPLOAD'
	SET @CTEMPDETAILTABLENAME7	= 'SLS_IMAGE_XN_DET_UPLOAD'
	SET @CTEMPDETAILTABLENAME9	= 'SLS_CMM_FLIGHT_UPLOAD'
	SET @CTEMPDETAILTABLENAME10	= 'SLS_COUPON_REDEMPTION_INFO_UPLOAD'
	SET @CTEMPDETAILTABLENAME11	= 'SLS_GV_MST_REDEMPTION_UPLOAD'
	
	SET @CTEMPMASTERTABLE	= @CTEMPDBNAME + @CTEMPMASTERTABLENAME
	SET @CTEMPDETAILTABLE	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME
	SET @CTEMPDETAILTABLE2	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME2
	SET @CTEMPDETAILTABLE5	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME5
	SET @CTEMPDETAILTABLE6	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME6
	SET @CTEMPDETAILTABLE8	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME7
	SET @CTEMPDETAILTABLE7 =  @CTEMPDBNAME + 'SLS_APM01106_REF_UPLOAD'
	SET @CTEMPDETAILTABLE9	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME9
	SET @CTEMPDETAILTABLE10	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME10
	SET @CTEMPDETAILTABLE11=  @CTEMPDBNAME + @CTEMPDETAILTABLENAME11
	
	SET @CERRORMSG			= ''
	SET @LDONOTUPDATESTOCK	= 0
	SET @CKEYFIELD1			= 'CM_ID'

	SET @CKEYFIELD1_DETAIL2	= 'MEMO_ID'

	SET @CMEMONO			= 'CM_NO'
	SET @NMEMONOLEN			= 10

	
BEGIN TRY	
			
	IF ISNULL(@CLOCATIONID,'')=''
	 BEGIN
		SET @CERRORMSG =' LOCATION ID CAN NOT BE BLANK  '  
		GOTO END_PROC    
	 END

	 
	    IF EXISTS(SELECT TOP 1 A.CM_ID  FROM  SLS_CMM01106_UPLOAD   A (NOLOCK)
		   JOIN CUSTDYM B (NOLOCK) ON A.CUSTOMER_CODE =B.CUSTOMER_CODE
		   WHERE A.SP_ID =@NSPID  AND B.INACTIVE=1)        
		 BEGIN  

		  SET @CERRORMSG='BILL CAN NOT BE GENERATE FOR INACTIVE CUSTOMER '
		  GOTO END_PROC  

		 END 
 
			
		SET @NSTEP = 15
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
		
		IF OBJECT_ID('TEMPDB..#TMPSLSDISCTAXOPT','U') IS NOT NULL
			DROP TABLE #TMPSLSDISCTAXOPT 
				 	
 		SELECT A.PRODUCT_CODE,SUB_SECTION_CODE,A.MRP*A.QUANTITY AS MRPVAL ,A.DISCOUNT_PERCENTAGE,
 		((A.MRP*A.QUANTITY)-A.NET) AS DISCOUNT_AMOUNT,A.NET,A.ROW_ID AS CMD_ROW_ID,B.USER_CODE,
 		C.SCHEME_NAME AS SLS_TITLE,ISNULL(@CERRORMSG,'') AS ERRMSG,CONVERT(VARCHAR(10),'') AS SCHEME_ID,
		A.ROW_ID,A.TAX_PERCENTAGE,A.TAX_AMOUNT,A.TAX_METHOD,'0000000000' AS TAX_AC_CODE,'0000000000' AS SALE_AC_CODE,
		B.DISCOUNT_PERCENTAGE AS BILL_LEVEL_DISCOUNT_PERCENTAGE,B.DISCOUNT_AMOUNT AS CMM_DISCOUNT_AMOUNT,
		A.WEIGHTED_AVG_DISC_PCT,A.WEIGHTED_AVG_DISC_AMT,A.ITEM_ROUND_OFF,
		B.DISCOUNT_AMOUNT AS BILL_LEVEL_DISCOUNT_AMOUNT,A.BASIC_DISCOUNT_PERCENTAGE,A.CARD_DISCOUNT_PERCENTAGE,
		A.BASIC_DISCOUNT_AMOUNT,A.CARD_DISCOUNT_AMOUNT,A.SCHEME_DISCOUNT
		INTO #TMPSLSDISCTAXOPT FROM SLS_CMD01106_UPLOAD A (NOLOCK)
		JOIN SLS_CMM01106_UPLOAD B (NOLOCK) ON A.CM_ID=B.CM_ID
		JOIN SCHEME_SETUP_DET C ON 1=1
		JOIN SECTIOND D ON 1=1
		WHERE 1=2
		
		IF OBJECT_ID('TEMPDB..#TEOSSERROR','U') IS NOT NULL
			DROP TABLE #TEOSSERROR
		
		CREATE TABLE #TEOSSERROR (ERRORMSG VARCHAR(MAX))
				
		SET @NSTEP = 20
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE

		
		DECLARE @NSOLDQTY NUMERIC(10,2),@NRETURNQTY NUMERIC(10,2),@NRETURNAMT NUMERIC(10,2),@NSOLDAMT NUMERIC(10,2),
				@NOTHERPMODEAMT NUMERIC(10,2),@CCMMPARTYSTATECODE VARCHAR(10)

		SET @NSTEP = 22
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
		
		SELECT @BSISLOC=ISNULL(SIS_LOC,0) FROM LOCATION WHERE DEPT_ID=@CLOCATIONID

		IF @bCalledFromBulkImport=1
			SET @BSISLOC=1

		SELECT @DXNDT=CM_DT,@DCMDT=CM_DT, @BSALESSETUPINEFFECT=(CASE WHEN @BSISLOC=0 THEN SALESSETUPINEFFECT ELSE 1 END),@BESTEXMPTSALES=@BESTEXMPTSALES,
				@CUSERCODE=USER_CODE,@CCUSTCODE=CUSTOMER_CODE,@CDTCODE=DT_CODE,@NPAYMODE=PAY_MODE,
				@NOLDNETAMOUNT=NET_AMOUNT,@BMANUALBILL=MANUAL_BILL,@CECOUPONID=ECOUPON_ID,
				@CCMMPARTYSTATECODE=ISNULL(PARTY_STATE_CODE,''),@cLoyaltyOtpCode=isnull(loyalty_otp_code,'')
		FROM SLS_CMM01106_UPLOAD (NOLOCK)
		WHERE SP_ID=@NSPID

		DECLARE @CWIZCLIPPOSSCHEMENAME VARCHAR(200)
		

		SET @NSTEP = 25
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
		DECLARE @BGSTBILL BIT,@CGSTCUTOFFDATE VARCHAR(20)
		SET @BGSTBILL=0
		
		
		SELECT TOP 1  @CGSTCUTOFFDATE=VALUE FROM CONFIG WHERE CONFIG_OPTION='GST_CUT_OFF_DATE'
		IF ISNULL(@CGSTCUTOFFDATE,'')<>''
		BEGIN
			IF @DXNDT>=CONVERT(DATE,@CGSTCUTOFFDATE)
				SET @BGSTBILL=1

		END
		
		SET @NSTEP = 30
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
		IF @BGSTBILL=0
		BEGIN
			SET @NSTEP = 35
			UPDATE SLS_CMM01106_UPLOAD SET PARTY_STATE_CODE='00' WHERE SP_ID=@NSPID 
  		END	
		ELSE
		BEGIN
			SET @NSTEP = 40
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
			SELECT TOP 1 @CCURLOCPARTYSTATECODE=GST_STATE_CODE FROM LOCATION (NOLOCK) WHERE DEPT_ID=@CLOCATIONID

			SELECT @NPARTYTYPE=PARTY_TYPE FROM SLS_CMM01106_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID
			IF @NPARTYTYPE=2
				SELECT @CPARTYSTATECODE=B.AC_GST_STATE_CODE
				FROM SLS_CMM01106_UPLOAD A (NOLOCK) JOIN LMP01106 B (NOLOCK) ON A.AC_CODE=B.AC_CODE
				WHERE SP_ID=@NSPID
			ELSE
				SELECT @CPARTYSTATECODE=B.CUS_GST_STATE_CODE
				FROM SLS_CMM01106_UPLOAD A (NOLOCK) JOIN CUSTDYM B (NOLOCK) ON A.CUSTOMER_CODE=B.CUSTOMER_CODE
				WHERE SP_ID=@NSPID				
			
			
			SET @NSTEP = 45
			SELECT @CPARTYSTATECODE=(CASE WHEN ISNULL(@CCMMPARTYSTATECODE,'')='' AND @CCUSTCODE IN ('','000000000000')
			THEN @CCURLOCPARTYSTATECODE WHEN ISNULL(@CCMMPARTYSTATECODE,'')='' THEN @CPARTYSTATECODE ELSE @CCMMPARTYSTATECODE END)
			
			---- DONE ON 21-01-2021 AS PER OPTIMIZATION SUGGESTED BY SIR IN ZOOM MEETING EVENING ON 20-01-2021
			--UPDATE SLS_CMM01106_UPLOAD WITH  (ROWLOCK) SET PARTY_STATE_CODE=(CASE WHEN ISNULL(PARTY_STATE_CODE,'')=''
			--AND CUSTOMER_CODE IN ('','000000000000') THEN @CCURLOCPARTYSTATECODE 
			--WHEN ISNULL(PARTY_STATE_CODE,'')='' THEN @CPARTYSTATECODE ELSE PARTY_STATE_CODE END)
		 --   WHERE SP_ID=@NSPID			
			
			SET @NSTEP = 47						
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
			UPDATE SLS_CMM01106_UPLOAD WITH  (ROWLOCK) SET PARTY_STATE_CODE=@CPARTYSTATECODE
		    WHERE SP_ID=@NSPID AND ISNULL(PARTY_STATE_CODE,'')<>@CPARTYSTATECODE			
		END	
		
		SET @NSTEP = 50
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
		---- WE HAVE TO RUN THESE TWO STEPS BECAUSE APPLICATION DOES NOT DELETE DATA FROM THIS TABLE IF USER 
		---- UNCHECKS THE COUPON REDEMPTION CHECKBOX / EVEN IN CASE OF ECOUPON REDEMPTION ALSO
		---- APPLICATION GIVES ADDITIONAL BLANK ENTRY EVEN IN CASE OF ADDMODE ALSO SOMETITMES
		---- APPLICATION IS NOT ABLE TO HANDLE THIS
		IF EXISTS (SELECT TOP 1 ECOUPON_ID FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD WITH (ROWLOCK) WHERE SP_ID=@NSPID
				   AND ECOUPON_ID='')
			DELETE FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD WITH (ROWLOCK) WHERE SP_ID=@NSPID
			AND ECOUPON_ID=''
		
		IF @CECOUPONID='' AND EXISTS (SELECT TOP 1 ECOUPON_ID FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD WITH (ROWLOCK) WHERE SP_ID=@NSPID)
		BEGIN
			SET @NSTEP = 52
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
			DELETE FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD WITH (ROWLOCK) WHERE SP_ID=@NSPID
		END

		SELECT TOP 1 @CPOSSCHEMEECOUPONID=ECOUPON_ID FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD (NOLOCK)
		WHERE SP_ID=@NSPID AND SUBSTRING(ECOUPON_ID,3,1)='$'
		
		SET @CPOSSCHEMEECOUPONID=ISNULL(@CPOSSCHEMEECOUPONID,'')
		
		
		IF @BENABLEWIZCLIP=1 AND (@BWIZCLIPAPICALLED=1 AND @BDONOTVALIDATECOUPON=0) 
		BEGIN
			SET @NSTEP = 55
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
			DECLARE @CVALIDECOUPONID VARCHAR(100)
			
			IF ISNULL(@CECOUPONID,'')<>''
			BEGIN
				
				SET @NSTEP = 60
				EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
				SELECT TOP 1 @CWIZCLIPPOSSCHEMENAME=B.SCHEME_NAME FROM SLS_CMD01106_UPLOAD A (NOLOCK) 
				JOIN SCHEME_SETUP_DET B (NOLOCK) ON A.SLSDET_ROW_ID=B.ROW_ID WHERE SP_ID=@NSPID 
				AND ((ISNULL(B.APPLY_ADDITIONAL_DISCOUNT_WIZCLIP_CUSTOMER,0)=1 AND 
				(VALIDATESCHEME_WIZCLIP_MODE<>2 OR @CPOSSCHEMEECOUPONID<>''))
				OR ISNULL(B.APPLICABLE_FOR_PRIVILEGE_CUSTOMER,0)=1) AND @CCUSTCODE NOT IN ('','000000000000')
				
				IF ISNULL(@CWIZCLIPPOSSCHEMENAME,'')=''
					DELETE FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD WITH (ROWLOCK) WHERE SP_ID=@NSPID AND (COUPON_DISC_AMOUNT=0 AND COUPON_DISC_PCT=0)	
				ELSE
					DELETE FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD WITH (ROWLOCK) WHERE SP_ID=@NSPID AND ECOUPON_ID=''
				
				SELECT TOP 1 @CVALIDECOUPONID=ECOUPON_ID FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID 
				
				IF ISNULL(@CVALIDECOUPONID,'')=''
				BEGIN
					SET @NSTEP = 70
					EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
					IF ISNULL(@CWIZCLIPPOSSCHEMENAME,'')=''
					BEGIN
						SET @CERRORMSG='BLANK COUPON DETAILS FOUND....PLEASE CHECK'
						GOTO END_PROC
					END
				END

				SET @NSTEP = 72
				EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
					
				SET @CCMD=N'INSERT DTM	( DT_CODE, DT_NAME, UPDATE_AC, AC_CODE, LAST_UPDATE, DISCOUNT_PERCENTAGE,FIXED, DTM_TYPE,WIZCLIP_DISCOUNT ) 
							SELECT DISTINCT CAMPAIGN_TITLE_CODE AS DT_CODE,CAMPAIGN_TITLE AS DT_NAME,0 AS UPDATE_AC,
							''0000000000'' AS AC_CODE,GETDATE() AS  LAST_UPDATE,0 AS DISCOUNT_PERCENTAGE,1 AS FIXED, 
							1 AS DTM_TYPE,1 AS WIZCLIP_DISCOUNT FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD A (NOLOCK) 
							LEFT OUTER JOIN DTM B (NOLOCK) ON A.CAMPAIGN_TITLE_CODE=B.DT_CODE
							WHERE '+@CWHERECLAUSE+' AND A.CAMPAIGN_TITLE_CODE<>'''' AND B.DT_CODE IS NULL'
					 								
				EXEC SP_EXECUTESQL @CCMD
					 
					SET @NSTEP = 75
					EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,1
				
					UPDATE A SET DT_CODE=B.CAMPAIGN_TITLE_CODE 
					FROM SLS_CMM01106_UPLOAD A WITH (ROWLOCK) 
					JOIN SLS_COUPON_REDEMPTION_INFO_UPLOAD B  (NOLOCK) ON A.SP_ID=B.SP_ID
					WHERE B.SP_ID=@NSPID AND B.CAMPAIGN_TITLE_CODE<>''
					
					DELETE FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD WITH (ROWLOCK) WHERE SP_ID=@NSPID 
					AND (CAMPAIGN_TITLE_CODE='' OR ECOUPON_ID='')
			
			END	
							
		END
				 		
		SET @NSTEP = 80
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
		
		IF EXISTS (SELECT TOP 1 CM_ID FROM SLS_PACK_SLIP_REF_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID)
			SET @BAGSTPACKSLIP=1
		
		SET @NSTEP = 82
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
		SET @BAPPLYWIZCLIPDISCOUNTASFLAT=0
		
		SELECT TOP 1 @NADDNLDISCMODE=ISNULL(ADDITIONAL_DISC_MODE,0),@NCOUPONDISCMODE=ISNULL(COUPON_DISC_MODE,0) 
		FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD (NOLOCK)
		WHERE SP_ID=@NSPID AND ISNULL(ADDITIONAL_DISC_MODE,0)=2
		
		SELECT @NCOUPONDISCMODE=ISNULL(@NCOUPONDISCMODE,0),@NADDNLDISCMODE=ISNULL(@NADDNLDISCMODE,0)
		
		IF @NADDNLDISCMODE=2
			SET @BAPPLYWIZCLIPDISCOUNTASFLAT=1


		SET @NSTEP=85
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
		SELECT @BMRPEXCHANGEBILL=ISNULL(MRP_EXCHANGE_BILL,0),@nDtmADDNLDISCMODE=ISNULL(bill_level_dtm_method,1),
		@NCMMDISCAMT=discount_amount FROM SLS_CMM01106_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID
		
		IF @nDtmADDNLDISCMODE=0 OR ISNULL(@nCmmDiscAmt,0)=0
			SET @nDtmADDNLDISCMODE=1

		IF ISNULL(@BMRPEXCHANGEBILL,0)=1
		BEGIN
			
			PRINT 'ENTER EXCHANGE MRP APPLICABILITY'		
			SET @NSTEP=90
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
			SELECT @NSOLDQTY=SUM(QUANTITY) FROM SLS_CMD01106_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID
			SELECT @NRETURNQTY=SUM(QUANTITY) FROM SLS_CMD01106_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID
			IF (@NSOLDQTY=0 AND @NRETURNQTY<>0) OR (@NSOLDQTY<>0 AND @NRETURNQTY=0)
			BEGIN
				SET @CERRORMSG='ATLEAST ONE SALE ITEM AND ONE RETURN ITEM SHOULD BE THERE IN MRP EXCHANGE FOR THIS BILL....PLEASE CHECK'
				GOTO END_PROC
			END
			
			SET @NSTEP=93
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
			UPDATE SLS_CMD01106_UPLOAD SET BASIC_DISCOUNT_PERCENTAGE=0,BASIC_DISCOUNT_AMOUNT=0,
			CARD_DISCOUNT_PERCENTAGE=0,CARD_DISCOUNT_AMOUNT=0,DISCOUNT_PERCENTAGE=0,DISCOUNT_AMOUNT=0,
			TAX_METHOD=1,NET=MRP*QUANTITY WHERE SP_ID=@NSPID 

			SET @BSALESSETUPINEFFECT=0								
		END					
		
		IF @BCALLEDFROMEASYCUT=1
			SET @BSALESSETUPINEFFECT=0
		
		DECLARE @CPICKDISCSource VARCHAR(2),@CPICKSLRDISCMODE VARCHAR(2)		

		SELECT @CPICKSLRDISCMODE=''
		IF @BSALESSETUPINEFFECT=0
		BEGIN
			SELECT TOP 1 @CPICKSLRDISCMODE=ISNULL(DISCOUNT_PICKMODE_SLR,1) FROM LOCATION WHERE DEPT_ID=@CLOCATIONID

			--- This is done regarding asking for new option of applying Sale return discount with 2 options only now (1. Tolerance based 2.Max Discount)
			--- Previous options have beed discarded now as per Tickit#0523-00163 (Date : 16-05-2023)
			--- We have to manipulate the new option value as already reference of these value lies in multiple scheme procedures
			IF ISNULL(@CPICKSLRDISCMODE,0) IN (0,1) -- (1.Tolerance based(Default) 2.Max discount)
				SET @CPICKSLRDISCMODE= 3
			ELSE
				SET @CPICKSLRDISCMODE = 1

		END
		----- DO NOT CALL SALES SETUP PROCEDURE IF SAVETRAN CALLED SECOND TIME FROM APPLICATION FOR 
		----- JUST RECALCULATION OF TAX AND CORRESPONDING AMOUNTS AFTER COUPON REDEMPTION API CALL
		IF  ((@BWIZCLIPAPICALLED=1 AND (@BDONOTVALIDATECOUPON=1 OR @BAPPLYWIZCLIPDISCOUNTASFLAT=1) AND ISNULL(@CECOUPONID,'')<>'') 
				 OR (@BWIZCLIPAPICALLED=0 AND ISNULL(@CECOUPONID,'')<>'')
				 OR ISNULL(@CECOUPONID,'')='')
		BEGIN
			SET @NSTEP = 100
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
			PRINT 'ENTER SALE SETUP APPLY FROM SLSSAVE'

			IF ISNULL(@BMANUALBILL,0)=1 OR @BAPPLYWIZCLIPDISCOUNTASFLAT=1 OR @nDtmADDNLDISCMODE=2
				SET @BSALESSETUPINEFFECT=0
			
			IF @BSALESSETUPINEFFECT=1 
			BEGIN
				UPDATE A  WITH (ROWLOCK) SET DISCOUNT_AMOUNT=0,BILL_LEVEL_EOSS_SCHEME_DISCOUNT=0,DT_CODE='0000000',
				DISCOUNT_PERCENTAGE=0 FROM SLS_CMM01106_UPLOAD A 
				LEFT JOIN DTM B (NOLOCK) ON B.DT_CODE=A.DT_CODE
				WHERE SP_ID=@NSPID AND ISNULL(ECOUPON_ID,'')='' AND ISNULL(DP_CHANGED,0)=0  AND ISNULL(MANUAL_DISCOUNT,0)=0
				AND ISNULL(loyalty_otp_code,'')=''
				AND NOT (ISNULL(B.DT_CODE,'') NOT IN ('','0000000') AND ISNULL(B.DT_MODE,0) IN  (0,1) 
				AND ISNULL(A.BILL_LEVEL_EOSS_SCHEME_DISCOUNT,0)=0)
				AND ISNULL(DISCOUNT_AMOUNT,0)<>0  
				

				SELECT @NCMMDISCAMT=DISCOUNT_AMOUNT FROM SLS_CMM01106_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID
			END	
			ELSE
			IF (@BAPPLYWIZCLIPDISCOUNTASFLAT=1 OR (@CPICKSLRDISCMODE<>'3' AND @BSALESSETUPINEFFECT=0)) AND @nDtmADDNLDISCMODE<>2
			BEGIN
				UPDATE SLS_CMD01106_UPLOAD WITH (ROWLOCK) SET BASIC_DISCOUNT_PERCENTAGE=0,BASIC_DISCOUNT_AMOUNT=0,
				DISCOUNT_PERCENTAGE=0,DISCOUNT_AMOUNT=0,CARD_DISCOUNT_PERCENTAGE=0,CARD_DISCOUNT_AMOUNT=0,
				WEIGHTED_AVG_DISC_AMT=0,WEIGHTED_AVG_DISC_PCT=0,net=(mrp*quantity)
				WHERE SP_ID=@NSPID AND ISNULL(MANUAL_DISCOUNT,0)=0 AND ISNULL(MANUAL_DP,0)=0
				AND (@BAPPLYWIZCLIPDISCOUNTASFLAT=1 OR quantity>0) 
			END
			ELSE
			IF @nDtmADDNLDISCMODE=2 ---All kind of discounts at Item level should be zero (Manual/Auto) 
									---If User has selected Flat discount marked Discount type at Bill Level (Confirmed by Rohit as discussed with Sir(Date:21-12-2022))
			BEGIN
				UPDATE SLS_CMD01106_UPLOAD WITH (ROWLOCK) SET BASIC_DISCOUNT_PERCENTAGE=0,BASIC_DISCOUNT_AMOUNT=0,
				DISCOUNT_PERCENTAGE=0,DISCOUNT_AMOUNT=0,CARD_DISCOUNT_PERCENTAGE=0,CARD_DISCOUNT_AMOUNT=0,
				WEIGHTED_AVG_DISC_AMT=0,WEIGHTED_AVG_DISC_PCT=0,net=(mrp*quantity)
				WHERE SP_ID=@NSPID 
			END

			SET @NSTEP = 110
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
			UPDATE SLS_CMM01106_UPLOAD WITH (ROWLOCK) SET NET_AMOUNT=SUBTOTAL+ATD_CHARGES-DISCOUNT_AMOUNT
			WHERE SP_ID=@NSPID AND NET_AMOUNT<>(SUBTOTAL+ATD_CHARGES-DISCOUNT_AMOUNT)

			--SELECT 'BEFORE APPLYING EOSS DISCOUNT',TAX_METHOD,MRP,QUANTITY, DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT,BASIC_DISCOUNT_PERCENTAGE,BASIC_DISCOUNT_AMOUNT, * 
			--FROM SLS_CMD01106_UPLOAD WHERE SP_ID=@NSPID

			SET @NSTEP = 112
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
			UPDATE SLS_CMD01106_UPLOAD SET DEPT_ID=@CLOCATIONID
		    WHERE SP_ID=@NSPID
					
			SET @NSTEP = 114
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
			IF @BWIZCLIPAPICALLED=0 AND ISNULL(@CECOUPONID,'')<>''
				SET @BDONOTPICKCARDDISC=1
			ELSE
				SET @BDONOTPICKCARDDISC=0

			  DELETE FROM BATCHWISE_FIXCODE_UPLOAD WITH (ROWLOCK)  WHERE SP_ID=@NSPID
			  DELETE FROM SLS_CMD01106_UPLOAD WITH (ROWLOCK) WHERE SP_ID=(@NSPID+'ZZ')
			
			DECLARE @CALNETAMOUNT NUMERIC(10,2),@NNET_AMOUNT NUMERIC(10,2),@cDonotChkStockSisLoc VARCHAR(2)
			SET @NSTEP = 114.2
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE


			SET @cDonotChkStockSisLoc =''
			IF  ISNULL(@BSISLOC,0)=1
			BEGIN

				SELECT TOP 1 @cDonotChkStockSisLoc=value FROM  config (NOLOCK) WHERE config_option='donot_checkstock_sisloc'

				SET @cDonotChkStockSisLoc=ISNULL(@cDonotChkStockSisLoc,'')

			END
	
			IF @cDonotChkStockSisLoc<>'1'
			BEGIN
				print 'call normalize fix product code from bulk import'
				--IF @@SPID=122
				--	select 'call normalize fix product_code',@NUPDATEMODE UPDATEMODE,product_code,quantity,row_id
				--	from SLS_cmd01106_UPLOAD where sp_id=@nSpid

				SET @NSTEP = 114.22
				EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE

				EXEC SP3S_NORMALIZE_FIX_PRODUCT_CODE 'SLS',@NSPID,@NUPDATEMODE,
				'SLS_CMD01106_UPLOAD','',@CERRORMSG OUTPUT,'SLS_CMM01106_UPLOAD','',@CUSERCODE
				IF ISNULL(@CERRORMSG,'')<>''
				BEGIN
					SET @CERRORMSG='ERROR IN NORMALIZATION '+@CERRORMSG
					GOTO END_PROC
				END

			END
		 
			SET @NSTEP = 114.25
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE

			UPDATE A SET SELLING_DAYS=(CASE WHEN B.RECEIPT_DT IS NOT NULL
			AND b.RECEIPT_DT<>@dXndt THEN  DATEDIFF(DAY,B.RECEIPT_DT,@DXNDT) ELSE 1 END)
			FROM SLS_CMD01106_UPLOAD A WITH (ROWLOCK) LEFT OUTER  JOIN 
			(SELECT A.PRODUCT_CODE,MAX(RECEIPT_DT) RECEIPT_DT FROM PID01106 A (NOLOCK) 
			 JOIN PIM01106 B (NOLOCK) ON A.MRR_ID=B.MRR_ID
			 JOIN SLS_CMD01106_UPLOAD C (NOLOCK) ON C.PRODUCT_CODE=A.PRODUCT_CODE
			 WHERE SP_ID=@NSPID AND B.DEPT_ID=@CLOCATIONID AND CANCELLED=0
			 GROUP BY A.PRODUCT_CODE) B ON A.PRODUCT_CODE=B.PRODUCT_CODE
			 WHERE A.SP_ID=@NSPID

		 	SET @NSTEP = 114.7
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
			  IF EXISTS(SELECT TOP 1 'U' FROM BATCHWISE_FIXCODE_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID)
			  BEGIN
				 -- IF @@SPID=122
				 -- BEGIN
					--SELECT 'CHECK BATCHES',ROW_ID,PRODUCT_CODE, * FROM BATCHWISE_FIXCODE_UPLOAD WHERE SP_ID=@NSPID
					--SELECT 'CHECK PC',ROW_ID,PRODUCT_CODE,TEMP_ROW_ID, * FROM SLS_CMD01106_UPLOAD WHERE SP_ID=@NSPID
				 -- END

		 	SET @NSTEP = 114.9
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE

				  SELECT @CALNETAMOUNT=NET_AMOUNT FROM SLS_CMM01106_UPLOAD (NOLOCK) WHERE SP_ID =@NSPID	
				  IF ABS(@NNET_AMOUNT-@CALNETAMOUNT)>1
				  BEGIN
					  SET @CERRORMSG='ERROR IN NORMALIZATION NET AMOUNT BEFORE '+STR(@NNET_AMOUNT)+' AFTER '+STR(@CALNETAMOUNT)
					  GOTO END_PROC

			      END
			  

		 	SET @NSTEP = 115.2
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE

			IF EXISTS (SELECT TOP 1 A.SP_ID FROM SLS_CMD01106_UPLOAD A WITH (ROWLOCK)
				  JOIN BATCHWISE_FIXCODE_UPLOAD B (NOLOCK) ON A.ROW_ID=B.ROW_ID AND A.SP_ID =B.SP_ID 
				  WHERE A.SP_ID =LTRIM(RTRIM((@NSPID)))) 
				  DELETE A FROM SLS_CMD01106_UPLOAD A WITH (ROWLOCK)
				  JOIN BATCHWISE_FIXCODE_UPLOAD B (NOLOCK) ON A.ROW_ID=B.ROW_ID AND A.SP_ID =B.SP_ID 
				  WHERE A.SP_ID =LTRIM(RTRIM((@NSPID))) 

		 	SET @NSTEP = 115.8
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE

			
				  UPDATE A SET SP_ID=B.SP_ID FROM  SLS_CMD01106_UPLOAD A WITH (ROWLOCK)
				  JOIN BATCHWISE_FIXCODE_UPLOAD B (NOLOCK) ON A.TEMP_ROW_ID=B.ROW_ID AND A.SP_ID =B.SP_ID+'ZZ' 
				  WHERE B.SP_ID =LTRIM(RTRIM((@NSPID))) AND A.TEMP_ROW_ID<>A.ROW_ID

			END				  		       

			DECLARE @CRETAINEXCELNRV VARCHAR(2)
			SELECT TOP 1 @CRETAINEXCELNRV=VALUE FROM CONFIG (NOLOCK)
			WHERE CONFIG_OPTION='RETAIN_EXCEL_NRV_SISLOC_SALEIMP'

			SET @CRETAINEXCELNRV=ISNULL(@CRETAINEXCELNRV,'')
			
			IF @BSISLOC=1 
			BEGIN
				IF EXISTS (SELECT TOP 1 PRODUCT_CODE FROM  SLS_CMD01106_UPLOAD (NOLOCK)
							WHERE SP_ID=@NSPID AND QUANTITY<0)
				BEGIN
		 			SET @NSTEP = 116.2
					EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE

					SELECT B.CM_ID,B.PRODUCT_CODE,(CASE WHEN @CRETAINEXCELNRV<>'1' THEN B.WEIGHTED_AVG_DISC_PCT ELSE 0 END) WEIGHTED_AVG_DISC_PCT,
					(CASE WHEN @CRETAINEXCELNRV<>'1' THEN B.WEIGHTED_AVG_DISC_AMT ELSE 0 END) WEIGHTED_AVG_DISC_AMT,
					(CASE WHEN @CRETAINEXCELNRV<>'1' THEN B.BASIC_DISCOUNT_PERCENTAGE ELSE B.SISLOC_EOSS_DISCOUNT_PERCENTAGE END) BASIC_DISCOUNT_PERCENTAGE,
					B.CMM_DISCOUNT_AMOUNT,B.OLD_MRP,
					(CASE WHEN @CRETAINEXCELNRV<>'1' THEN B.MRP ELSE B.SISLOC_MRP END) MRP,B.QUANTITY,B.CARD_DISCOUNT_PERCENTAGE,
					ROW_NUMBER() OVER (PARTITION BY B.PRODUCT_CODE ORDER BY CM_DT DESC,CM_NO DESC) RNO
					INTO #TMPLASTSISLOCSLS
					FROM  SLS_CMD01106_UPLOAD A (NOLOCK)
					JOIN  CMD01106 B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
					JOIN CMM01106 C (NOLOCK) ON C.CM_ID=B.CM_ID
					WHERE A.SP_ID=@NSPID AND c.location_Code =@CLOCATIONID AND CANCELLED=0 AND B.QUANTITY>0

		 			SET @NSTEP = 116.4
					EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE

					--IF @@SPID=105
					--	SELECT 'CHECK TMPLASTSISLOCSLS',WEIGHTED_AVG_DISC_PCT,MRP,BASIC_DISCOUNT_PERCENTAGE,CMM_DISCOUNT_AMOUNT,
					--	* FROM #TMPLASTSISLOCSLS

					UPDATE A SET LAST_SLS_DISCOUNT_PERCENTAGE= 
				   (CASE WHEN B.WEIGHTED_AVG_DISC_PCT<>0  THEN ((B.WEIGHTED_AVG_DISC_AMT+ISNULL(B.CMM_DISCOUNT_AMOUNT,0))/(B.MRP*B.QUANTITY))*100
				   ELSE (100-((((B.MRP-(B.MRP*(ISNULL(B.BASIC_DISCOUNT_PERCENTAGE,0)+ISNULL(B.CARD_DISCOUNT_PERCENTAGE,0))/100))-
					B.CMM_DISCOUNT_AMOUNT/B.QUANTITY))/B.MRP)*100) END) 
					FROM SLS_CMD01106_UPLOAD A
					JOIN #TMPLASTSISLOCSLS B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
					WHERE A.SP_ID=@NSPID AND RNO=1 AND b.QUANTITY>0 AND b.mrp<>0
				END
			END

			IF @BSALESSETUPINEFFECT=1
			BEGIN
				SET @NSTEP = 118							
				EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
				EXEC SP3S_EOSS_APPLY_SLSDISCTAX
				@CPRODUCTCODEPARA='',
				@DXNDT=@DXNDT,
				@BSALESSETUPINEFFECT=@BSALESSETUPINEFFECT,
				@BESTEXMPTSALES=@BESTEXMPTSALES,
				@NCMMDISCAMT=@NCMMDISCAMT,
				@CUSERCODE=@CUSERCODE,
				@BAGSTPACKSLIP=@BAGSTPACKSLIP,
				@CCUSTOMERCODE=@CCUSTCODE,
				@CDTCODE=@CDTCODE,
				@BCALLEDFROMSAVETRAN=1,
				@NSPID=@NSPID,
				@BCARDDISCOUNT=0,
				@BMRPEXCHANGEBILL=@BMRPEXCHANGEBILL,
				@BDONOTPICKCARDDISC=@BDONOTPICKCARDDISC,
				@CLOCATIONID=@CLOCATIONID
			
				SELECT TOP 1 @CERRORMSG=ERRORMSG FROM #TEOSSERROR
			
				IF ISNULL(@CERRORMSG,'')<>''
					GOTO END_PROC
			END				
		    ELSE
			IF @BSALESSETUPINEFFECT=0
			BEGIN
				SET @NSTEP = 118.4	
				EXEC SP3S_RECALSLS_CMDNET_SLSSETUPDISABLED
				@nSpId=@nSpId,
				@CCUSTCODE=@CCUSTCODE,
				@dXnDt=@dXnDt,
				@bDonotPickCardDisc=@bDonotPickCardDisc,
				@BMRPEXCHANGEBILL=@BMRPEXCHANGEBILL,
				@CLOCATIONID=@CLOCATIONID,
				@CERRORMSG=@CERRORMSG OUTPUT

				IF ISNULL(@cErrormsg,'')<>''
					GOTO END_PROC
			END

			SET @NSTEP = 120
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
			
			SELECT TOP 1 @CERRORMSG=ERRMSG FROM #TMPSLSDISCTAXOPT WHERE ISNULL(ERRMSG,'')<>''
			
			IF ISNULL(@CERRORMSG,'')<>''
				GOTO END_PROC
		
			SELECT TOP 1 @CWIZCLIPPOSSCHEMENAME=B.SCHEME_NAME FROM #TMPSLSDISCTAXOPT A 
			JOIN SCHEME_SETUP_DET B (NOLOCK) ON A.ROW_ID=B.ROW_ID 
			WHERE ((ISNULL(B.APPLY_ADDITIONAL_DISCOUNT_WIZCLIP_CUSTOMER,0)=1 OR ISNULL(B.APPLICABLE_FOR_PRIVILEGE_CUSTOMER,0)=1)
					 AND (VALIDATESCHEME_WIZCLIP_MODE<>2 OR @CPOSSCHEMEECOUPONID<>'')) 
			AND @CCUSTCODE NOT IN ('','000000000000')

			--IF @NSPID=70
			--	SELECT '#TMPSLSDISCTAXOPT ',* FROM #TMPSLSDISCTAXOPT 
			
			--SELECT 'BEFORE APPLYING FINAL DISCOUNT',MRP,QUANTITY, DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT,BASIC_DISCOUNT_PERCENTAGE,BASIC_DISCOUNT_AMOUNT, * FROM SLS_CMD01106_UPLOAD WHERE SP_ID=@NSPID
			  
            DECLARE @CALCULATE_GST_FOR_SLR VARCHAR(5)
			SELECT @CALCULATE_GST_FOR_SLR=VALUE  FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='CALCULATE_GST_FOR_SLR' 


			SET @NSTEP = 130

			IF @BSISLOC=0 OR @CRETAINEXCELNRV<>'1'
			BEGIN
				PRINT 'UPDATE FINAL EOSS DISCOUNT IN CMD TABLE'			
				UPDATE A SET CARD_DISCOUNT_PERCENTAGE=B.CARD_DISCOUNT_PERCENTAGE,CARD_DISCOUNT_AMOUNT=B.CARD_DISCOUNT_AMOUNT,
				BASIC_DISCOUNT_PERCENTAGE=B.BASIC_DISCOUNT_PERCENTAGE,BASIC_DISCOUNT_AMOUNT=B.BASIC_DISCOUNT_AMOUNT,
				DISCOUNT_PERCENTAGE=B.DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT=B.DISCOUNT_AMOUNT,
				NET=B.NET,ITEM_ROUND_OFF=B.ITEM_ROUND_OFF,TAX_PERCENTAGE=B.TAX_PERCENTAGE,TAX_AMOUNT=B.TAX_AMOUNT,
				RFNET=B.NET-ISNULL(A.CMM_DISCOUNT_AMOUNT,0),
				SLSDET_ROW_ID=B.ROW_ID,SCHEME_NAME=(CASE WHEN ISNULL(B.SLS_TITLE,'')='' THEN C.SCHEME_NAME 
				ELSE ISNULL(B.SLS_TITLE,'') END),WEIGHTED_AVG_DISC_AMT=B.WEIGHTED_AVG_DISC_AMT,WEIGHTED_AVG_DISC_PCT=B.WEIGHTED_AVG_DISC_PCT,
				DISCOUNT_SHARING_WITH_SUPPLIER =C.DISCOUNT_SHARING_WITH_SUPPLIER,SCHEME_DISCOUNT=B.SCHEME_DISCOUNT,
				SOR_TERMS_CODE=(CASE WHEN ISNULL(C.DISCOUNT_SHARING_WITH_SUPPLIER,0)=1 
									 THEN (CASE WHEN ISNULL(C.SOR_TERMS_CODE,'SD')='' THEN 'SD' ELSE C.SOR_TERMS_CODE END)
									 ELSE '' END)
				FROM  SLS_CMD01106_UPLOAD A (NOLOCK) 
				JOIN  #TMPSLSDISCTAXOPT B ON B.CMD_ROW_ID=A.ROW_ID
				LEFT JOIN  SCHEME_SETUP_DET C (NOLOCK) ON B.ROW_ID=C.ROW_ID
				WHERE  A.SP_ID=@NSPID
			END

			IF @BSISLOC=1 AND @CRETAINEXCELNRV='1'
			BEGIN
				SET @NSTEP = 130.5
				UPDATE A SET SISLOC_EOSS_DISCOUNT_PERCENTAGE=B.BASIC_DISCOUNT_PERCENTAGE,SISLOC_EOSS_DISCOUNT_AMOUNT=B.BASIC_DISCOUNT_AMOUNT,
				SCHEME_NAME=(CASE WHEN ISNULL(B.SLS_TITLE,'')='' THEN C.SCHEME_NAME 
				ELSE ISNULL(B.SLS_TITLE,'') END),SISLOC_MRP=SKU.MRP,SIS_NET=((SKU.MRP*A.QUANTITY)-B.BASIC_DISCOUNT_AMOUNT)
				FROM  SLS_CMD01106_UPLOAD A (NOLOCK) 
				JOIN  #TMPSLSDISCTAXOPT B ON B.CMD_ROW_ID=A.ROW_ID
				LEFT JOIN  SCHEME_SETUP_DET C (NOLOCK) ON B.ROW_ID=C.ROW_ID
				JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
				WHERE  A.SP_ID=@NSPID
			END

			SET @NSTEP = 132
			DECLARE @CMANUALSCHEMESETMEMONO VARCHAR(50)
			SET @CMANUALSCHEMESETMEMONO=''
			SELECT TOP 1 @CMANUALSCHEMESETMEMONO=ISNULL(MANUAL_SCHEME_SETUP_MEMO_NO,'')
			FROM SLS_CMM01106_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID


			IF ISNULL(@CMANUALSCHEMESETMEMONO,'')<>''
				UPDATE SLS_CMD01106_UPLOAD WITH (ROWLOCK) SET MANUAL_DISCOUNT=1,MANUAL_DP=1
				WHERE SP_ID=@NSPID
			

			SET @NSTEP = 140
			UPDATE SLS_CMD01106_UPLOAD WITH (ROWLOCK) SET XN_VALUE_WITHOUT_GST=NET-CMM_DISCOUNT_AMOUNT,
			XN_VALUE_WITH_GST=NET-CMM_DISCOUNT_AMOUNT
			WHERE SP_ID=@NSPID AND QUANTITY<0 AND REF_SLS_MEMO_DT<'2017-07-01' AND ISNULL(REF_SLS_MEMO_DT,'')<>'' 
			AND ISNULL(XN_VALUE_WITHOUT_GST,0)=0
	
		END
		
		DECLARE @BWIZCLIPCUSTOMER BIT
		IF ISNULL(@CCUSTCODE,'') NOT IN ('','000000000000') 
		BEGIN
			
			SELECT TOP 1  @BWIZCLIPCUSTOMER=ISNULL(WIZCLIP,0) FROM LOCATION (NOLOCK) WHERE DEPT_ID=@CLOCATIONID
			
		END

		IF NOT EXISTS (SELECT TOP 1 cm_id FROM SLS_CMM01106_UPLOAD (NOLOCK) WHERE sp_id=@nSpId AND discount_amount<>0
					   AND (isnull(manual_discount,0)=1 OR ISNULL(dp_changed,0)=1 OR ISNULL(ecoupon_id,'')<>''))
		BEGIN
			SET @NSTEP = 170
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
		
			EXEC SP3S_APPLY_BILLLEVEL_SCHEME
			@NSPID=@NSPID,
			@DXNDT=@DXNDT,
			@CCURDEPTID=@CLOCATIONID,
			@BWIZCLIPCUSTOMER=@BWIZCLIPCUSTOMER,
			@CMANUALSCHEMESETMEMONO=@CMANUALSCHEMESETMEMONO,
			@CERRORMSG=@CERRORMSG OUTPUT
		END

		---- NEED TO PUT THIS STEP ESPECIALLY TO HANDLE ECOUPON REDEMPTION CASE 
		---- WHERE SUBTOTAL GETS CHANGED AFTER COUPON REDEMPTION BECAUSE OF CARD DISCOUNT PICKING 
		---- CALLED AFTER ECOUPON DISCOUNT PICKING 

		SET @NSTEP = 172
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
		
		SELECT @NSUBTOTALCALC=SUM(NET) FROM SLS_CMD01106_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID

		DECLARE @BDPCHANGED BIT,@BDISCAMTCHANGED BIT,@BRECALBILLDISC BIT
		SET @BRECALBILLDISC=0

		
		SELECT @NSUBTOTALSTORED=SUBTOTAL,@BDPCHANGED=ISNULL(DP_CHANGED,0),
		@BDISCAMTCHANGED=ISNULL(MANUAL_DISCOUNT,0),@CDTCODE=A.DT_CODE
		FROM SLS_CMM01106_UPLOAD A (NOLOCK)
		LEFT JOIN DTM B (NOLOCK) ON A.DT_CODE=B.DT_CODE WHERE SP_ID=@NSPID
				
		IF ISNULL(@NSUBTOTALCALC,0)<>ISNULL(@NSUBTOTALSTORED,0) 
		BEGIN
			SET @BRECALBILLDISC=1
			UPDATE SLS_CMM01106_UPLOAD WITH (ROWLOCK) SET SUBTOTAL=@NSUBTOTALCALC,SUBTOTAL_R=0
			WHERE SP_ID=@NSPID
		END

		SET @NSTEP = 174
		EXEC SP3S_UPDATE_CMM_LASTDTCODE
		@nSpId=@nSpId,
		@dCmDt=@DCMDT,
		@NUPDATEMODE=@NUPDATEMODE

		SET @NSTEP = 174.5

		SET @BRECALBILLDISC=1

		SET @CTEXT='SLS_TMP_'+(CASE WHEN @BWIZCLIPAPICALLED=1 THEN '1' ELSE '0' END)+'_'+
		(CASE WHEN ISNULL(@CECOUPONID,'')<>'' THEN '1' ELSE '0' END)
				
		--- COMMENTED FOR NOW TO CHECK COUPON REDEMPTION CASE OF DONEAR (28-09-2016)						
		IF (@BWIZCLIPAPICALLED=1 AND ISNULL(@CECOUPONID,'')<>'') OR @BRECALBILLDISC=1
		OR EXISTS (SELECT TOP 1 BILL_LEVEL_DISCOUNT_AMOUNT,BILL_LEVEL_DISCOUNT_PERCENTAGE FROM  #TMPSLSDISCTAXOPT
					   WHERE ISNULL(BILL_LEVEL_DISCOUNT_AMOUNT,0)<>0)				 
		BEGIN
			PRINT 'ENTER SALE TAX APPLY FROM SLSSAVE'
			SET @NSTEP = 180
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
			
			--IF @@SPID=173
			--BEGIN
			--	SELECT @BRECALBILLDISC RECALBILLDISC,@NSUBTOTALCALC SUBTOTALCALC,@NSUBTOTALSTORED SUBTOTALSTORED,
			--	'CHECK BILL DISC', PRODUCT_CODE, BILL_LEVEL_DISCOUNT_AMOUNT,BILL_LEVEL_DISCOUNT_PERCENTAGE FROM  #TMPSLSDISCTAXOPT
			--		   --WHERE ISNULL(BILL_LEVEL_DISCOUNT_AMOUNT,0)<>0
			--	SELECT SUBTOTAL,DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT, * FROM SLS_CMM01106_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID
			--END

			IF EXISTS (SELECT TOP 1 BILL_LEVEL_DISCOUNT_AMOUNT,BILL_LEVEL_DISCOUNT_PERCENTAGE FROM  #TMPSLSDISCTAXOPT
					   WHERE ISNULL(BILL_LEVEL_DISCOUNT_AMOUNT,0)<>0)
				OR EXISTS (SELECT TOP 1 ECOUPON_ID FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD A (NOLOCK) WHERE SP_ID=@NSPID AND
						  (COUPON_DISC_AMOUNT<>0 OR COUPON_DISC_PCT<>0) AND ISNULL(GV_DISCOUNT,0)<>1)	   
				OR EXISTS (SELECT TOP 1 GV_SRNO FROM SLS_GV_MST_REDEMPTION_UPLOAD A WHERE SP_ID=@NSPID AND
						   GV_AMOUNT<>0)	   						  
				OR EXISTS (SELECT DISCOUNT_PERCENTAGE FROM SLS_CMM01106_UPLOAD WHERE SP_ID=@NSPID AND DISCOUNT_PERCENTAGE<>0)		  
				OR @BRECALBILLDISC=1
			BEGIN		   

				IF EXISTS (SELECT TOP 1 BILL_LEVEL_DISCOUNT_AMOUNT,BILL_LEVEL_DISCOUNT_PERCENTAGE FROM  #TMPSLSDISCTAXOPT 
						   WHERE ISNULL(BILL_LEVEL_DISCOUNT_AMOUNT,0)<>0)
				BEGIN
					PRINT 'UPDATE BILL DISCOUNT -1'

					SET @NSTEP = 190
					EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		


					UPDATE A  SET DISCOUNT_AMOUNT=B.BILL_LEVEL_DISCOUNT_AMOUNT,--ROUND((SUBTOTAL)*B.BILL_LEVEL_DISCOUNT_PERCENTAGE/100,2),
					DISCOUNT_PERCENTAGE=B.BILL_LEVEL_DISCOUNT_PERCENTAGE,BILL_LEVEL_EOSS_SCHEME_DISCOUNT=1
					FROM SLS_CMM01106_UPLOAD A (NOLOCK) JOIN 
					(SELECT TOP 1 BILL_LEVEL_DISCOUNT_AMOUNT,BILL_LEVEL_DISCOUNT_PERCENTAGE FROM  #TMPSLSDISCTAXOPT) B ON 1=1
					LEFT OUTER JOIN 
					(SELECT A.* FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD A (NOLOCK) WHERE SP_ID=@NSPID AND (COUPON_DISC_AMOUNT<>0 OR COUPON_DISC_PCT<>0))
					C ON  C.SP_ID=A.SP_ID
					LEFT OUTER JOIN 
					(SELECT A.* FROM SLS_GV_MST_REDEMPTION_UPLOAD A (NOLOCK) WHERE SP_ID=@NSPID AND GV_AMOUNT<>0)
					D ON  D.SP_ID=A.SP_ID			
					LEFT JOIN DTM E (NOLOCK) ON E.DT_CODE=A.DT_CODE	
					WHERE A.SP_ID=@NSPID AND ((C.ECOUPON_ID IS NULL AND ISNULL(a.LOYALTY_OTP_CODE,'')='') OR ISNULL(C.GV_DISCOUNT,0)=1)
					AND D.GV_SRNO IS NULL AND  ISNULL(A.DP_CHANGED,0)=0 
					AND NOT (ISNULL(E.DT_CODE,'') NOT IN ('','0000000') AND ISNULL(E.DT_MODE,0) IN  (0,1))
				END	 

				--IF @@SPID=607
				--	SELECT 'CHK BILL DISC-1',SUBTOTAL,DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT FROM SLS_CMM01106_UPLOAD
				--	WHERE SP_ID=@NSPID

					SET @NSTEP = 195
					EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
				UPDATE A WITH (ROWLOCK) SET COUPON_DISC_AMOUNT=B.SUBTOTAL FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD A 
				JOIN SLS_CMM01106_UPLOAD B (NOLOCK) ON A.SP_ID=B.SP_ID
				WHERE A.SP_ID=@NSPID AND COUPON_DISC_AMOUNT>SUBTOTAL

				PRINT 'UPDATE BILL DISCOUNT -2'
				SET @NSTEP = 200
				EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
				
				UPDATE A  SET DISCOUNT_AMOUNT=ISNULL(B.DISCOUNT_AMOUNT,0),
				DISCOUNT_PERCENTAGE=ROUND((ISNULL(B.DISCOUNT_AMOUNT,0)/(SUBTOTAL))*100,2)
				FROM SLS_CMM01106_UPLOAD A (NOLOCK) JOIN 
				(SELECT SUM(ISNULL(A.DISCOUNT_AMOUNT,0)) AS DISCOUNT_AMOUNT FROM 
				(SELECT SUM(COUPON_DISC_AMOUNT) AS DISCOUNT_AMOUNT FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD A (NOLOCK) 
				 WHERE SP_ID=@NSPID AND COUPON_DISC_AMOUNT<>0  AND ISNULL(GV_DISCOUNT,0)<>1
				 UNION
				 SELECT SUM(GV_AMOUNT) AS DISCOUNT_AMOUNT FROM SLS_GV_MST_REDEMPTION_UPLOAD A (NOLOCK)
				 WHERE SP_ID=@NSPID AND GV_AMOUNT<>0) A
				 ) B ON  1=1 WHERE A.SP_ID=@NSPID
				AND ISNULL(B.DISCOUNT_AMOUNT,0)<>0

				--IF @@SPID=607
				--	SELECT 'CHK BILL DISC-2',SUBTOTAL,DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT FROM SLS_CMM01106_UPLOAD
				--	WHERE SP_ID=@NSPID
				--SELECT DISCOUNT_AMOUNT,DISCOUNT_PERCENTAGE,'AFTER BILL DISC-3',* FROM SLS_CMM01106_UPLOAD WHERE SP_ID=@NSPID
				
				PRINT 'UPDATE BILL DISCOUNT -3'
				DECLARE @BCOUPONDISC BIT
				
				SET @BCOUPONDISC=0

				SET @NSTEP = 212
				EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
				
				SELECT TOP 1 @NCOUPONDISCMODE=COUPON_DISC_MODE FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD A (NOLOCK) 
				WHERE SP_ID=@NSPID AND (COUPON_DISC_PCT<>0 OR COUPON_DISC_AMOUNT<>0) AND ISNULL(GV_DISCOUNT,0)<>1

				SET @NSTEP = 213
				UPDATE A WITH  (ROWLOCK) SET DISCOUNT_AMOUNT=(CASE WHEN ISNULL(@NCOUPONDISCMODE,0)<>1 
				AND	(ISNULL(DISCOUNT_AMOUNT,0)=0 OR ISNULL(DP_CHANGED,0)=1 OR ABS(SUBTOTAL)<1 OR 
				(ISNULL(B.DT_CODE,'') NOT IN ('','0000000') AND ISNULL(B.DT_MODE,0) IN  (0,1)))
				THEN (SUBTOTAL*A.DISCOUNT_PERCENTAGE/100) ELSE DISCOUNT_AMOUNT END)
				--THEN ROUND((SUBTOTAL)*A.DISCOUNT_PERCENTAGE/100,2) ELSE DISCOUNT_AMOUNT END) --- Change for Dm Round off not required in case of Behrain
				FROM SLS_CMM01106_UPLOAD A LEFT JOIN DTM B (NOLOCK) ON B.DT_CODE=A.DT_CODE
				WHERE SP_ID=@NSPID AND ISNULL(a.LOYALTY_OTP_CODE,'')=''

				SET @NSTEP = 214
				PRINT 'UPDATE BILL DISCOUNT -4'
				UPDATE A WITH (ROWLOCK) SET DISCOUNT_PERCENTAGE=(CASE WHEN (ISNULL(A.DISCOUNT_PERCENTAGE,0)=0 OR
				 ISNULL(DP_CHANGED,0)=0 OR ISNULL(B.DT_MODE,0)=2 OR ISNULL(a.LOYALTY_OTP_CODE,'')<>'')
				AND (SUBTOTAL)<>0
				THEN ROUND((DISCOUNT_AMOUNT/(SUBTOTAL))*100,2) ELSE A.DISCOUNT_PERCENTAGE END)				
				FROM SLS_CMM01106_UPLOAD A LEFT JOIN DTM B (NOLOCK) ON B.DT_CODE=A.DT_CODE
				WHERE SP_ID=@NSPID AND ABS(SUBTOTAL)>1 AND ISNULL(DP_CHANGED,0)=0 
				AND ((NOT (ISNULL(B.DT_CODE,'') NOT IN ('','0000000') AND ISNULL(B.DT_MODE,0) IN  (0,1))
				AND (ISNULL(@NCOUPONDISCMODE,0)<>1 OR ISNULL(A.ECOUPON_ID,'')='')) OR ISNULL(a.LOYALTY_OTP_CODE,'')<>'')
				--IF @@SPID=607
				--	SELECT 'CHK BILL DIS-3',SUBTOTAL,DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT FROM SLS_CMM01106_UPLOAD
				--	WHERE SP_ID=@NSPID
				--SELECT DISCOUNT_AMOUNT,DISCOUNT_PERCENTAGE,'AFTER BILL DISC-4',* FROM SLS_CMM01106_UPLOAD WHERE SP_ID=@NSPID
			
				SET @NSTEP = 220
				EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
													
				SET @NCMMDISCAMT = 0
				SELECT @NCMMDISCAMT=DISCOUNT_AMOUNT,@CDTCODE=DT_CODE,@BSALESSETUPDISABLED=CTRLS_USED FROM SLS_CMM01106_UPLOAD (NOLOCK)
				WHERE SP_ID=@NSPID

				IF ISNULL(@CDTCODE,'') IN ('','0000000') AND @NCMMDISCAMT<>0 AND ISNULL(@CECOUPONID,'')=''
				BEGIN
					SET @NSTEP = 222
					SELECT TOP 1 @CDTCODE=VALUE FROM  CONFIG (NOLOCK) WHERE CONFIG_OPTION='DEFAULT_DISCOUNT_TYPE'
					UPDATE SLS_CMM01106_UPLOAD WITH (ROWLOCK)  SET DT_CODE=(CASE WHEN ISNULL(@CDTCODE,'') IN ('')
					THEN '0000000' ELSE @CDTCODE END) 
					WHERE SP_ID=@NSPID
				END
				
				SET @NCMMDISCAMT=ISNULL(@NCMMDISCAMT,0)
				
				
				SET @NSTEP = 230
				EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		

				PRINT 'RECAL WITH SLS_CMD01106_UPLOAD AT STEP#'+@NSTEP

				EXEC SP_RECAL_CMMDISC_CMD @NSPID,'',@NCMMDISCAMT

			END
				
		END

		SET @NSTEP = 240
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		

		UPDATE SLS_CMD01106_UPLOAD WITH (ROWLOCK) SET SLSDET_ROW_ID='',SCHEME_NAME='' WHERE SP_ID=@NSPID
		AND (ISNULL(MANUAL_DISCOUNT,0)=1 OR ISNULL(MANUAL_DP,0)=1)
		
		DECLARE @BRECALTOTALS BIT
		
		SET @BRECALTOTALS=0
		
		---- START OF WORKING OF EXTRA GST CREDIT TO BE GIVEN TO CUSTOMER 		
		IF @BGSTBILL=1
		BEGIN
			DECLARE @CMAXEXCLUSIVEGST VARCHAR(10),@NMAXEXCLUSIVEGST NUMERIC(7,2),@NCMMDISCOUNT NUMERIC(10,2),
			@CEXCLGSTITEMCODE VARCHAR(50),@CROUNDITEMLEVEL VARCHAR(2)
			
			SET @NSTEP=310		
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
			SELECT TOP 1 @NMAXEXCLUSIVEGST=MAX_EXCLUSIVE_GST FROM SLS_CMD01106_UPLOAD A (NOLOCK)
			JOIN SCHEME_SETUP_DET B (NOLOCK) ON A.SLSDET_ROW_ID=B.ROW_ID WHERE SP_ID=@NSPID
			AND ISNULL(MAX_EXCLUSIVE_GST,0)>0
			
			SET @NMAXEXCLUSIVEGST=ISNULL(@NMAXEXCLUSIVEGST,0)
			
			PRINT 'GSTCREDIT-1'
			IF @NMAXEXCLUSIVEGST>0
			BEGIN
				SET @NSTEP=312
				EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
				
				EXEC SP3S_CALTOTALS_SLS
				@NSPID=@NSPID,
				@BGSTBILL=@BGSTBILL,
				@DCMDT=@DCMDT,
				@CLOCATIONID=@CLOCATIONID,
				@BSALESSETUPDISABLED=0,
				@CUSERCODE=@CUSERCODE,
				@NLOGINSPID=@NLOGINSPID,
				@CERRORMSG=@CERRORMSG OUTPUT,
				@NUPDATEMODE=@NUPDATEMODE

				IF ISNULL(@CERRORMSG,'')<>''
					GOTO END_PROC
				
				SET @NSTEP=312.3
				EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
				PRINT 'GSTCREDIT-1.2:'+STR(@NMAXEXCLUSIVEGST)
				SELECT TOP 1 @CEXCLGSTITEMCODE=PRODUCT_CODE FROM SLS_CMD01106_UPLOAD A (NOLOCK)
				JOIN SCHEME_SETUP_DET B (NOLOCK) ON A.SLSDET_ROW_ID=B.ROW_ID WHERE SP_ID=@NSPID AND TAX_METHOD=2
				AND (ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0))<>0 AND ISNULL(MANUAL_DISCOUNT,0)=0
				AND GST_PERCENTAGE>ISNULL(MAX_EXCLUSIVE_GST,0) AND ISNULL(MAX_EXCLUSIVE_GST,0)<>0
				
				--SELECT 'BEFORE APPLYING EXTRA GST', TAX_METHOD, MANUAL_DISCOUNT,GST_PERCENTAGE,* FROM SLS_CMD01106_UPLOAD WHERE SP_ID=131
				
				IF ISNULL(@CEXCLGSTITEMCODE,'')<>''
				BEGIN
					SET @NSTEP=314
					EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
					PRINT 'GSTCREDIT-2'
					SELECT TOP 1 @NCMMDISCOUNT=DISCOUNT_AMOUNT FROM SLS_CMM01106_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID 
					AND ISNULL(ECOUPON_ID,'')=''
					
					IF ISNULL(@NCMMDISCOUNT,0)<>0
					BEGIN
						SET @BEXTRAGSTCREDITDISALLOWED=1
						GOTO LBLBREAK
					END
					
					PRINT 'GSTCREDIT-3'				
					SET @NSTEP=317
					EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
					UPDATE A SET BASIC_DISCOUNT_AMOUNT=BASIC_DISCOUNT_AMOUNT+
					(NET*(GST_PERCENTAGE-ISNULL(MAX_EXCLUSIVE_GST,0))/100) FROM SLS_CMD01106_UPLOAD A (NOLOCK)
					JOIN SCHEME_SETUP_DET B (NOLOCK) ON A.SLSDET_ROW_ID=B.ROW_ID
					WHERE SP_ID=@NSPID AND TAX_METHOD=2	AND (ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0))<>0 AND 
					ISNULL(MANUAL_DISCOUNT,0)=0	AND GST_PERCENTAGE>ISNULL(MAX_EXCLUSIVE_GST,0) AND ISNULL(MAX_EXCLUSIVE_GST,0)<>0
					
					SET @NSTEP=318
					EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
					UPDATE A SET NET=((MRP*QUANTITY)-BASIC_DISCOUNT_AMOUNT-CARD_DISCOUNT_AMOUNT)+ITEM_ROUND_OFF,
					BASIC_DISCOUNT_PERCENTAGE=(BASIC_DISCOUNT_AMOUNT/(MRP*QUANTITY))*100 FROM SLS_CMD01106_UPLOAD A (NOLOCK)
					JOIN SCHEME_SETUP_DET B (NOLOCK) ON A.SLSDET_ROW_ID=B.ROW_ID
					WHERE SP_ID=@NSPID AND TAX_METHOD=2	AND (ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0))<>0 AND 
					ISNULL(MANUAL_DISCOUNT,0)=0	AND GST_PERCENTAGE>ISNULL(MAX_EXCLUSIVE_GST,0) AND ISNULL(MAX_EXCLUSIVE_GST,0)<>0			

					SET @NSTEP=320
					EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
					UPDATE A SET DISCOUNT_PERCENTAGE=BASIC_DISCOUNT_PERCENTAGE+CARD_DISCOUNT_PERCENTAGE,
					DISCOUNT_AMOUNT=BASIC_DISCOUNT_AMOUNT+CARD_DISCOUNT_AMOUNT FROM SLS_CMD01106_UPLOAD A (NOLOCK)
					JOIN SCHEME_SETUP_DET B (NOLOCK) ON A.SLSDET_ROW_ID=B.ROW_ID
					WHERE SP_ID=@NSPID AND TAX_METHOD=2	AND (ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0))<>0 AND 
					ISNULL(MANUAL_DISCOUNT,0)=0	AND GST_PERCENTAGE>ISNULL(MAX_EXCLUSIVE_GST,0) AND ISNULL(MAX_EXCLUSIVE_GST,0)<>0			

					SELECT TOP 1 @CROUNDITEMLEVEL = VALUE  FROM CONFIG (NOLOCK) WHERE  CONFIG_OPTION='ROUND_ITEM_NET'

					SET @CROUNDITEMLEVEL=ISNULL(@CROUNDITEMLEVEL,'')

					IF @CROUNDITEMLEVEL='1'	
					BEGIN
						SET @NSTEP=322
						EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
						UPDATE A SET ITEM_ROUND_OFF=0
						FROM SLS_CMD01106_UPLOAD A (NOLOCK)
						JOIN SCHEME_SETUP_DET B (NOLOCK) ON A.SLSDET_ROW_ID=B.ROW_ID
						WHERE SP_ID=@NSPID AND GST_PERCENTAGE>ISNULL(MAX_EXCLUSIVE_GST,0) AND ISNULL(MAX_EXCLUSIVE_GST,0)<>0
						
						UPDATE A SET basic_discount_amount=ROUND(a.basic_discount_amount,0), NET=((MRP*QUANTITY)-ROUND(a.basic_discount_amount,0)),
						discount_amount=ROUND(a.basic_discount_amount,0)+a.card_discount_amount FROM SLS_CMD01106_UPLOAD A (NOLOCK)
						JOIN SCHEME_SETUP_DET B (NOLOCK) ON A.SLSDET_ROW_ID=B.ROW_ID
						WHERE SP_ID=@NSPID AND GST_PERCENTAGE>ISNULL(MAX_EXCLUSIVE_GST,0) AND ISNULL(MAX_EXCLUSIVE_GST,0)<>0
					END
				
			
					SET @NSTEP=323
					EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
					UPDATE A SET GST_PERCENTAGE=(CASE WHEN (CASE WHEN ISNULL(C.GST_CAL_BASIS,0)=1 THEN ABS(NET/QUANTITY) ELSE A.MRP END)>=C.RATE_CUTOFF THEN C.TAX_PERCENTAGE ELSE C.RATE_CUTOFF_TAX_PERCENTAGE END)
					FROM SLS_CMD01106_UPLOAD A (NOLOCK)
					JOIN SCHEME_SETUP_DET B (NOLOCK) ON A.SLSDET_ROW_ID=B.ROW_ID
					JOIN HSN_DET C (NOLOCK) ON A.HSN_CODE=C.HSN_CODE
					JOIN HSN_MST D (NOLOCK) ON D.HSN_CODE=C.HSN_CODE
					WHERE A.SP_ID=@NSPID AND TAX_METHOD=2	AND (ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0))<>0 AND 
					ISNULL(MANUAL_DISCOUNT,0)=0	AND GST_PERCENTAGE>ISNULL(MAX_EXCLUSIVE_GST,0) AND ISNULL(MAX_EXCLUSIVE_GST,0)<>0		
					AND C.WEF=(SELECT TOP 1 D.WEF FROM HSN_DET D (NOLOCK) JOIN SLS_CMM01106_UPLOAD E (NOLOCK) ON 1=1
							   WHERE E.SP_ID=@NSPID AND D.HSN_CODE=C.HSN_CODE AND D.WEF<=E.CM_DT
							   ORDER BY WEF DESC)	
					
					SET @NSTEP=325
					EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
					UPDATE A SET 
					IGST_AMOUNT=(CASE WHEN IGST_AMOUNT<>0 THEN NET*GST_PERCENTAGE/100 ELSE 0 END),
					CGST_AMOUNT=(CASE WHEN CGST_AMOUNT<>0 THEN (NET*GST_PERCENTAGE/100)/2 ELSE 0 END),
					SGST_AMOUNT=(CASE WHEN SGST_AMOUNT<>0 THEN (NET*GST_PERCENTAGE/100)/2 ELSE 0 END) 
					FROM SLS_CMD01106_UPLOAD A WITH (ROWLOCK)
					JOIN SCHEME_SETUP_DET B (NOLOCK) ON A.SLSDET_ROW_ID=B.ROW_ID
					WHERE SP_ID=@NSPID AND TAX_METHOD=2	AND (ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0))<>0 AND 
					ISNULL(MANUAL_DISCOUNT,0)=0	 AND ISNULL(MAX_EXCLUSIVE_GST,0)<>0		
									
					SET @NSTEP=327
					EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
					UPDATE A SET BASIC_DISCOUNT_PERCENTAGE=(BASIC_DISCOUNT_AMOUNT/(MRP*QUANTITY))*100,
					XN_VALUE_WITHOUT_GST=NET
					FROM SLS_CMD01106_UPLOAD A (NOLOCK)
					JOIN SCHEME_SETUP_DET B (NOLOCK) ON A.SLSDET_ROW_ID=B.ROW_ID
					WHERE SP_ID=@NSPID AND TAX_METHOD=2	AND (ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0))<>0 AND 
					ISNULL(MANUAL_DISCOUNT,0)=0	 AND ISNULL(MAX_EXCLUSIVE_GST,0)<>0						
					
					SET @BRECALTOTALS=1
					
					IF ISNULL(@CERRORMSG,'')<>''
						GOTO END_PROC
					
				END
			END
		END
		---- END OF WORKING OF EXTRA GST CREDIT TO BE GIVEN TO CUSTOMER 		

		---- START OF WORKING FOR MANIPULATION OF NET FOR A GIVEN SLAB IN GST REGIME (DONE FOR TOPSHOP)

		DECLARE @CREUPDATENETEXCL VARCHAR(2),@CREUPDATENETINCL VARCHAR(2),@NEXCLRANGEFROM NUMERIC(10,0),@NEXCLRANGENET NUMERIC(10,0),
		@NEXCLRANGETO NUMERIC(10,0),@NINCLRANGEFROM NUMERIC(10,0),@NINCLRANGETO NUMERIC(10,0),@NINCLRANGENET NUMERIC(10,0),
		@CEXCLRANGEFROM VARCHAR(10),@CEXCLRANGETO VARCHAR(10),@CEXCLRANGENET VARCHAR(10),
		@CINCLRANGEFROM VARCHAR(10),@CINCLRANGETO VARCHAR(10),@CINCLRANGENET VARCHAR(10),
		@BEXCLCMDFOUND BIT,@BINCLCMDFOUND BIT,@BRECALCMMDISC BIT



		---- DO NOT RUN THIS PROCESS BEFORE APPLICABLE OF ECOUPON DISCOUNT IF IT'S THERE
		---- (AS PER TICKET#08-1279 DATED :16-08-2021 OF ONE PLUS)
		IF NOT (@BWIZCLIPAPICALLED=0 AND ISNULL(@CECOUPONID,'')<>'') AND @BSISLOC=0
		BEGIN
			
			PRINT 'ENTER RECALCUALTE OF NET-0'
			SELECT @BEXCLCMDFOUND=0,@BINCLCMDFOUND=0
		
			SELECT TOP 1 @CREUPDATENETEXCL=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='REUPDATE_NET_FOR_RANGE_EXCLUSIVE'
			SELECT TOP 1 @CREUPDATENETINCL=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='REUPDATE_NET_FOR_RANGE_INCLUSIVE'
			

			SET @BRECALCMMDISC=0

			SELECT @NCMMDISCAMT=ISNULL(DISCOUNT_AMOUNT,0) FROM SLS_CMM01106_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID

			---- HAD TO SKIP THIS CALCULATION IN CASE IF BILL LEVEL DISCOUNT IS THERE (TICKET#09-1229)
			---- AS IT IS GETTING COMPLEX AS PER DISCUSSION WITH SIR IN EVENING MEETING (DATE:08-11-2021)
			---- DONE AFTER CANTABIL TICKET RESOLUTION NOT DONE
			IF  (ISNULL(@CREUPDATENETEXCL,'')='1' OR ISNULL(@CREUPDATENETINCL,'')='1') AND ISNULL(@NCMMDISCAMT,0)=0
			BEGIN
				

				SET @NSTEP=338
				EXEC SP_RECAL_CMMDISC_CMD @NSPID,'',@NCMMDISCAMT
				
				SET @NSTEP=338.5
				EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
				EXEC SP3S_CALTOTALS_SLS
				@NSPID=@NSPID,
				@BGSTBILL=@BGSTBILL,
				@DCMDT=@DCMDT,
				@CLOCATIONID=@CLOCATIONID,
				@BSALESSETUPDISABLED=0,
				@CUSERCODE=@CUSERCODE,
				@NLOGINSPID=@NLOGINSPID,
				@CERRORMSG=@CERRORMSG OUTPUT,
				@NUPDATEMODE=@NUPDATEMODE

				--IF @@SPID=855
				--	SELECT 'CHECK CMM DISC',@CREUPDATENETINCL, GST_PERCENTAGE,MRP,NET,TAX_METHOD, PRODUCT_CODE,CMM_DISCOUNT_AMOUNT, * FROM SLS_CMD01106_UPLOAD 
				--	WHERE SP_ID='583719FB95F-02A4-4941-ACC5-5FED31598149'
		
				IF ISNULL(@CREUPDATENETEXCL,'')='1'
				BEGIN
					SET @NSTEP=340
					EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
					SELECT TOP 1 @CEXCLRANGEFROM=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='FROM_NET_RANGE_EXCLUSIVE'
					SELECT TOP 1 @CEXCLRANGETO=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='TO_NET_RANGE_EXCLUSIVE'
					SELECT TOP 1 @CEXCLRANGENET=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='RANGE_EXCLUSIVE_CONVERT_NET'
				
					SELECT @NEXCLRANGEFROM=(CASE WHEN ISNUMERIC(@CEXCLRANGEFROM)=1 THEN @CEXCLRANGEFROM ELSE 0 END),
						   @NEXCLRANGETO=(CASE WHEN ISNUMERIC(@CEXCLRANGETO)=1 THEN @CEXCLRANGETO ELSE 0 END),
						   @NEXCLRANGENET=(CASE WHEN ISNUMERIC(@CEXCLRANGENET)=1 THEN @CEXCLRANGENET ELSE 0 END)
				
					--SELECT @NEXCLRANGENET,@NEXCLRANGEFROM,@NEXCLRANGETO
					IF @NEXCLRANGENET<>0
					BEGIN
						SET @NSTEP=345
						EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		

						
						SELECT ROW_ID AS CMD_ROW_ID INTO #TMPEXCLNET	FROM SLS_CMD01106_UPLOAD A (NOLOCK)
						WHERE SP_ID=@NSPID AND TAX_METHOD=2 AND ABS(A.NET-A.CMM_DISCOUNT_AMOUNT) BETWEEN @NEXCLRANGEFROM AND @NEXCLRANGETO

						IF EXISTS (SELECT TOP 1 * FROM #TMPEXCLNET)
							SET @BEXCLCMDFOUND=1
												
						UPDATE A SET BASIC_DISCOUNT_AMOUNT=BASIC_DISCOUNT_AMOUNT+(A.NET-A.CMM_DISCOUNT_AMOUNT-@NEXCLRANGENET*(CASE WHEN QUANTITY>0 THEN 1 ELSE -1 END))
						FROM SLS_CMD01106_UPLOAD A (NOLOCK) JOIN #TMPEXCLNET B ON A.ROW_ID=B.CMD_ROW_ID
						WHERE A.SP_ID=@NSPID

						UPDATE A SET BASIC_DISCOUNT_PERCENTAGE=ROUND((BASIC_DISCOUNT_AMOUNT/(MRP*QUANTITY))*100,2)
						FROM SLS_CMD01106_UPLOAD A WITH (ROWLOCK)  JOIN #TMPEXCLNET B ON A.ROW_ID=B.CMD_ROW_ID					
						WHERE A.SP_ID=@NSPID
					
						SET @NSTEP=347
						EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
						UPDATE A SET DISCOUNT_AMOUNT=BASIC_DISCOUNT_AMOUNT+CARD_DISCOUNT_AMOUNT,
						DISCOUNT_PERCENTAGE=ROUND(((BASIC_DISCOUNT_AMOUNT+CARD_DISCOUNT_AMOUNT)/(MRP*QUANTITY))*100,2)
						FROM SLS_CMD01106_UPLOAD A WITH (ROWLOCK) JOIN #TMPEXCLNET B ON A.ROW_ID=B.CMD_ROW_ID									
						WHERE A.SP_ID=@NSPID
					
						UPDATE A SET NET=(MRP*QUANTITY) - DISCOUNT_AMOUNT
						FROM SLS_CMD01106_UPLOAD A WITH (ROWLOCK) JOIN #TMPEXCLNET B ON A.ROW_ID=B.CMD_ROW_ID									
						WHERE A.SP_ID=@NSPID

					END	


				END

				IF ISNULL(@CREUPDATENETINCL,'')='1'
				BEGIN
					PRINT 'ENTER RECALCUALTE OF NET-1'
					SET @NSTEP=349
					EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
					SELECT TOP 1 @CINCLRANGEFROM=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='FROM_NET_RANGE_INCLUSIVE'
					SELECT TOP 1 @CINCLRANGETO=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='TO_NET_RANGE_INCLUSIVE'
					SELECT TOP 1 @CINCLRANGENET=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='RANGE_INCLUSIVE_CONVERT_NET'
				
					SELECT @NINCLRANGEFROM=(CASE WHEN ISNUMERIC(@CINCLRANGEFROM)=1 THEN @CINCLRANGEFROM ELSE 0 END),
						   @NINCLRANGETO=(CASE WHEN ISNUMERIC(@CINCLRANGETO)=1 THEN @CINCLRANGETO ELSE 0 END),
						   @NINCLRANGENET=(CASE WHEN ISNUMERIC(@CINCLRANGENET)=1 THEN @CINCLRANGENET ELSE 0 END)
					
					IF @NINCLRANGENET<>0
					BEGIN
						PRINT 'ENTER RECALCUALTE OF NET-2:'+STR(@NINCLRANGENET)
						SET @NSTEP=352
						EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
						
						--IF @@SPID=59
						--	SELECT 'CHECK SLSCMD BEFORE INCL NET',MRP,BASIC_DISCOUNT_AMOUNT,NET,CMM_DISCOUNT_AMOUNT,PRODUCT_CODE, * FROM SLS_CMD01106_UPLOAD
						--	WHERE SP_ID=@NSPID

						SELECT ROW_ID AS CMD_ROW_ID INTO #TMPINCLNET	FROM SLS_CMD01106_UPLOAD A (NOLOCK)
						WHERE SP_ID=@NSPID AND TAX_METHOD=1 AND ABS(A.NET-A.CMM_DISCOUNT_AMOUNT) BETWEEN @NINCLRANGEFROM AND @NINCLRANGETO

						IF EXISTS (SELECT TOP 1 * FROM #TMPINCLNET)
							SET @BINCLCMDFOUND=1
												
						UPDATE A SET BASIC_DISCOUNT_AMOUNT=BASIC_DISCOUNT_AMOUNT+(A.NET-A.CMM_DISCOUNT_AMOUNT-@NINCLRANGENET*(CASE WHEN QUANTITY>0 THEN 1 ELSE -1 END))
						FROM SLS_CMD01106_UPLOAD A (NOLOCK) JOIN #TMPINCLNET B ON A.ROW_ID=B.CMD_ROW_ID
						WHERE A.SP_ID=@NSPID
					
						PRINT 'ENTER RECALCUALTE OF NET-3'
						UPDATE A SET BASIC_DISCOUNT_PERCENTAGE=ROUND((BASIC_DISCOUNT_AMOUNT/(MRP*QUANTITY))*100,2)
						FROM SLS_CMD01106_UPLOAD A WITH (ROWLOCK)  JOIN #TMPINCLNET B ON A.ROW_ID=B.CMD_ROW_ID					
						WHERE A.SP_ID=@NSPID
					
						UPDATE A SET DISCOUNT_AMOUNT=BASIC_DISCOUNT_AMOUNT+CARD_DISCOUNT_AMOUNT,
						DISCOUNT_PERCENTAGE=ROUND(((BASIC_DISCOUNT_AMOUNT+CARD_DISCOUNT_AMOUNT)/(MRP*QUANTITY))*100,2)
						FROM SLS_CMD01106_UPLOAD A WITH (ROWLOCK) JOIN #TMPINCLNET B ON A.ROW_ID=B.CMD_ROW_ID									
						WHERE A.SP_ID=@NSPID

						UPDATE A SET NET=(MRP*QUANTITY) - DISCOUNT_AMOUNT
						FROM SLS_CMD01106_UPLOAD A WITH (ROWLOCK) JOIN #TMPINCLNET B ON A.ROW_ID=B.CMD_ROW_ID									
						WHERE A.SP_ID=@NSPID

						--IF @@SPID=59
						--	SELECT 'CHECK SLSCMD AFTER INCL NET',MRP,BASIC_DISCOUNT_AMOUNT,NET,CMM_DISCOUNT_AMOUNT,PRODUCT_CODE, * FROM SLS_CMD01106_UPLOAD
						--	WHERE SP_ID=@NSPID
						--IF @@SPID=131
						--	SELECT 'CHK NET', PRODUCT_CODE,MRP,DISCOUNT_AMOUNT,NET,BASIC_DISCOUNT_AMOUNT 
						--	FROM SLS_CMD01106_UPLOAD WHERE SP_ID='293D2556EBF-336B-4416-A31D-8A2E41063BDB'
					END	   
				END
				
				IF @BEXCLCMDFOUND=1 OR @BINCLCMDFOUND=1
				BEGIN
					SET @NSTEP=355
					EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		

					SET @BRECALTOTALS=1
					SET @BRECALCMMDISC=1

					IF ISNULL(@CERRORMSG,'')<>''
						GOTO END_PROC
				END						
			
			END
		END
		---- END OF WORKING FOR MANIPULATION OF NET FOR A GIVEN SLAB IN GST REGIME (DONE FOR TOPSHOP)
		
		----- NEED TO RECALCULATE CARD DISCOUNT/TOTAL DISCOUNT/NET IF BASIC DISCOUNT IS RECALCULATED
		IF @BRECALTOTALS=1
		BEGIN
			SET @NSTEP=357
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
			UPDATE SLS_CMD01106_UPLOAD SET CARD_DISCOUNT_AMOUNT=(MRP-(ISNULL(BASIC_DISCOUNT_AMOUNT,0)/QUANTITY))*ISNULL(CARD_DISCOUNT_PERCENTAGE,0)*QUANTITY/100
			WHERE SP_ID=@NSPID
			
			SET @NSTEP=359
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
			UPDATE SLS_CMD01106_UPLOAD SET DISCOUNT_AMOUNT=BASIC_DISCOUNT_AMOUNT+CARD_DISCOUNT_AMOUNT,
			DISCOUNT_PERCENTAGE=ROUND(((BASIC_DISCOUNT_AMOUNT+CARD_DISCOUNT_AMOUNT)/(MRP*QUANTITY))*100,2)
			WHERE SP_ID=@NSPID AND CARD_DISCOUNT_PERCENTAGE<>0

			UPDATE SLS_CMD01106_UPLOAD SET NET=((MRP*QUANTITY)-DISCOUNT_AMOUNT+ITEM_ROUND_OFF)
			WHERE SP_ID=@NSPID AND CARD_DISCOUNT_PERCENTAGE<>0
			
			IF @BRECALCMMDISC=1 AND ISNULL(@cLoyaltyOtpCode,'')=''
			BEGIN
				SET @NSTEP=359.5
				UPDATE A WITH (ROWLOCK) SET DISCOUNT_AMOUNT=ROUND(B.SUBTOTAL*DISCOUNT_PERCENTAGE/100,2)
				FROM SLS_CMM01106_UPLOAD A WITH (ROWLOCK)
				JOIN (SELECT SP_ID,SUM(NET) SUBTOTAL FROM SLS_CMD01106_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID
				      GROUP BY SP_ID)
				B ON A.SP_ID=B.SP_ID
				WHERE A.SP_ID=@NSPID AND isnull(a.manual_discount,0)=0

				SET @NSTEP=359.8
				SELECT @NCMMDISCAMT=DISCOUNT_AMOUNT FROM SLS_CMM01106_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID

				EXEC SP_RECAL_CMMDISC_CMD @NSPID,'',@NCMMDISCAMT
			END
		END	

		---HAVE TO DO THIS BECAUSE OF SPECIAL CASE OF GST CALC PROCEDURE WHICH DOES NOT RECAL OH GST COLUMNS
		-- IF USER MAKES THE OTHER CHARGES ZERO ON EDIT CLICK
		IF @NUPDATEMODE=2
		BEGIN
			SET @NSTEP=361
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
			UPDATE SLS_CMM01106_UPLOAD SET OTHER_CHARGES_TAXABLE_VALUE=0,OTHER_CHARGES_CGST_AMOUNT=0,
			OTHER_CHARGES_SGST_AMOUNT=0,OTHER_CHARGES_IGST_AMOUNT=0
			WHERE SP_ID=@NSPID 
		END

		SET @NSTEP=361.5
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		

		EXEC SP3S_CALTOTALS_SLS
		@NSPID=@NSPID,
		@BGSTBILL=@BGSTBILL,
		@DCMDT=@DCMDT,
		@CLOCATIONID=@CLOCATIONID,
		@BSALESSETUPDISABLED=0,
		@CUSERCODE=@CUSERCODE,
		@NLOGINSPID=@NLOGINSPID,
		@CERRORMSG=@CERRORMSG OUTPUT,
		@NUPDATEMODE=@NUPDATEMODE
		

		IF ISNULL(@CERRORMSG,'')<>''
			GOTO END_PROC
LBLBREAK:
		
		SET @NSTEP = 363
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		

		IF ISNULL(@BMRPEXCHANGEBILL,0)=0
			UPDATE A  SET TAX_METHOD=(CASE WHEN ISNULL(B.TAX_METHOD,0)=0 THEN 1 ELSE 
			(CASE WHEN B.TAX_METHOD=1 THEN 2 ELSE 1 END) END)
			FROM SLS_CMD01106_UPLOAD A WITH (ROWLOCK) 
			JOIN SLS_GST_TAXINFO_CALC B (NOLOCK) ON  A.SP_ID=B.SP_ID AND A.ROW_ID=B.ROW_ID
			WHERE A.SP_ID=@NSPID AND ISNULL(A.MANUAL_TAX_METHOD,0)=0
		
		SET @NSTEP = 364
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
		SELECT @NEXCLTAX=SUM(TAX_AMOUNT+ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CESS_AMOUNT,0))
		FROM SLS_CMD01106_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID AND TAX_METHOD=2

		SET @NSTEP = 365
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
		SELECT @NOCGST=ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_SGST_AMOUNT,0)
		FROM SLS_CMM01106_UPLOAD A (NOLOCK)
		WHERE A.SP_ID=@NSPID

		SELECT @NNEWNETAMOUNT=NET_AMOUNT,@NSUBTOTAL=SUBTOTAL FROM SLS_CMM01106_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID

		SELECT TOP 1 @NINVALIDGVAMOUNT=AMOUNT FROM SLS_PAYMODE_XN_DET_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID
		AND PAYMODE_CODE='GVC0001' AND GV_SRNO='' AND AMOUNT<>0

		IF ISNULL(@NINVALIDGVAMOUNT,0)<>0
		BEGIN
			SET @CERRORMSG='PAYMENT ENTRY WITH GIFT VOUCHER AMOUNT : '+LTRIM(RTRIM(STR(@NINVALIDGVAMOUNT,10,2)))+' FOUND WITH BLANK GV NO....CANNOT SAVE'
			GOTO END_PROC
		END			
		

		SET @NSTEP = 373
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
		
		SELECT @CADJPAYMODECODE='',@BPAYMENTMISMATCH=0,@BUPDPAYMODEAMTAGSTCOUPON=0
		
		IF EXISTS (SELECT TOP 1 A.ECOUPON_ID FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD A (NOLOCK)
				   JOIN SLS_CMM01106_UPLOAD B (NOLOCK) ON A.SP_ID=B.SP_ID WHERE A.SP_ID=@NSPID AND ISNULL(GV_DISCOUNT,0)=1
				   AND ISNULL(A.ECOUPON_ID,'')<>'')
		BEGIN

			SET @NSTEP = 375
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		

			IF EXISTS (SELECT TOP 1 A.PAYMODE_CODE FROM SLS_PAYMODE_XN_DET_UPLOAD A (NOLOCK)
					   JOIN PAYMODE_MST B (NOLOCK) ON A.PAYMODE_CODE=B.PAYMODE_CODE
					   WHERE SP_ID=@NSPID AND B.PAYMODE_GRP_CODE='WCGV001')
			BEGIN
				DELETE A FROM SLS_PAYMODE_XN_DET_UPLOAD A WITH(ROWLOCK)
				JOIN PAYMODE_MST B (NOLOCK) ON A.PAYMODE_CODE=B.PAYMODE_CODE
				WHERE SP_ID=@NSPID AND B.PAYMODE_GRP_CODE='WCGV001'
				
			END	
			
			SET @NSTEP = 380
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		

			SELECT @NPAYMODECNT=COUNT(*) FROM SLS_PAYMODE_XN_DET_UPLOAD A (NOLOCK)
			WHERE SP_ID=@NSPID AND AMOUNT<>0
			
			IF @NPAYMODECNT=1
			BEGIN
				SET @NSTEP = 390
				EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		

				IF EXISTS (SELECT TOP 1 ECOUPON_ID FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD A (NOLOCK)
						   WHERE SP_ID=@NSPID AND ISNULL(GV_DISCOUNT,0)=1 AND ISNULL(A.ECOUPON_ID,'')<>'')	
					SET @BUPDPAYMODEAMTAGSTCOUPON=1 		
			END	
			
					
			SET @NSTEP = 400
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
			
			INSERT SLS_PAYMODE_XN_DET_UPLOAD	( SP_ID, MEMO_ID, XN_TYPE, PAYMODE_CODE, ROW_ID, AMOUNT,
			LAST_UPDATE, REF_NO, ADJ_MEMO_ID, CURRENCY_CONVERSION_RATE, REMARKS, GV_SRNO, GV_SCRATCH_NO ) 
			SELECT 	A.SP_ID,B.CM_ID AS MEMO_ID,'SLS' AS XN_TYPE,CAMPAIGN_TITLE_CODE AS PAYMODE_CODE,
			@CLOCATIONID+CONVERT(VARCHAR(40), NEWID()) AS ROW_ID,
			(CASE WHEN ISNULL(COUPON_DISC_AMOUNT,0)=0 THEN ROUND(B.SUBTOTAL*COUPON_DISC_PCT/100,0) ELSE COUPON_DISC_AMOUNT END) AS AMOUNT,GETDATE() AS LAST_UPDATE,
			A.ECOUPON_ID AS REF_NO,'' AS ADJ_MEMO_ID,
			1 AS  CURRENCY_CONVERSION_RATE,'ECOUPON DISCOUNT' AS REMARKS,'' AS GV_SRNO,'' AS  GV_SCRATCH_NO 
			FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD A (NOLOCK)
			JOIN SLS_CMM01106_UPLOAD B (NOLOCK) ON A.SP_ID=B.SP_ID WHERE A.SP_ID=@NSPID AND ISNULL(GV_DISCOUNT,0)=1
			AND ISNULL(A.ECOUPON_ID,'')<>''
					
			IF @BUPDPAYMODEAMTAGSTCOUPON=1
			BEGIN
		
				SET @NSTEP = 410
				EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		

				SELECT @NWIZCLIPGVAMOUNT=SUM(AMOUNT) FROM SLS_PAYMODE_XN_DET_UPLOAD A (NOLOCK)
				JOIN PAYMODE_MST B (NOLOCK) ON A.PAYMODE_CODE=B.PAYMODE_CODE
				WHERE SP_ID=@NSPID AND B.PAYMODE_GRP_CODE='WCGV001'
				
				SET @NWIZCLIPGVAMOUNT=ISNULL(@NWIZCLIPGVAMOUNT,0)
				
				UPDATE A SET AMOUNT= @NNEWNETAMOUNT-@NWIZCLIPGVAMOUNT FROM SLS_PAYMODE_XN_DET_UPLOAD A (NOLOCK)
				JOIN PAYMODE_MST B (NOLOCK) ON A.PAYMODE_CODE=B.PAYMODE_CODE WHERE SP_ID=@NSPID 
				AND B.PAYMODE_GRP_CODE<>'WCGV001' 
			END
		END
			
		SET @NSTEP = 420
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		

		SELECT @CADJPAYMODECODE=PAYMODE_CODE FROM SLS_PAYMODE_XN_DET_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID
		AND PAYMODE_CODE IN ('0000001','0000002')	
		
		SELECT @NPAYMODECNT=COUNT(MEMO_ID) FROM SLS_PAYMODE_XN_DET_UPLOAD A (NOLOCK)
		LEFT OUTER JOIN SCHEME_SETUP_DET B (NOLOCK) ON B.ROW_ID=A.CC_NAME ---- (USED THIS COLUMN TO VALIDATE SCHEME RALATED GV(S))
		WHERE SP_ID=@NSPID AND (PAYMODE_CODE<>'GVC0001' OR B.ROW_ID IS  NULL)
		
		SELECT @NSCHEMEGVCNT=COUNT(MEMO_ID) FROM SLS_PAYMODE_XN_DET_UPLOAD A (NOLOCK)
		JOIN SCHEME_SETUP_DET B (NOLOCK) ON B.ROW_ID=A.CC_NAME ---- (USED THIS COLUMN TO VALIDATE SCHEME RALATED GV(S))
		WHERE SP_ID=@NSPID AND PAYMODE_CODE='GVC0001'

		SET @NSTEP = 425
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		

		SET @NPAYMODECNT=ISNULL(@NPAYMODECNT,0)
		
		--SELECT @NOLDNETAMOUNT,@NNEWNETAMOUNT

		IF @NNEWNETAMOUNT<>ISNULL(@NOLDNETAMOUNT,0)
		BEGIN
			IF @NPAYMODECNT>1 OR ISNULL(@CADJPAYMODECODE,'')<>''
				SET @BPAYMENTMISMATCH=1
		END

		IF @BPAYMENTMISMATCH=0
		BEGIN
			SET @NSTEP = 430
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
			SELECT @NPAYMODETOTAMT = SUM(AMOUNT) FROM SLS_PAYMODE_XN_DET_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID		
			
			SET @NPAYMODETOTAMT=ISNULL(@NPAYMODETOTAMT,0)
			
			IF ISNULL(@NPAYMODETOTAMT,0)<>@NNEWNETAMOUNT
			BEGIN
				SET @NSTEP = 435
				EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		

				
				--IF @@SPID=62
				--	SELECT @NPAYMODECNT,@NSCHEMEGVCNT,@NNEWNETAMOUNT,@NPAYMODETOTAMT

				--IF @@SPID=62
				--	SELECT 'BEFORE CHECK PAYMODE',* FROM SLS_PAYMODE_XN_DET_UPLOAD WHERE SP_ID=@NSPID
					
				IF @NSCHEMEGVCNT>0 AND @NPAYMODECNT=1
					UPDATE SLS_PAYMODE_XN_DET_UPLOAD SET AMOUNT=AMOUNT+@NNEWNETAMOUNT-@NPAYMODETOTAMT WHERE SP_ID=@NSPID
					AND PAYMODE_CODE<>'GVC0001'
				ELSE
				IF NOT (@NPAYMODECNT>1 OR ISNULL(@CADJPAYMODECODE,'')<>'') AND @NPAYMODECNT>0
					UPDATE SLS_PAYMODE_XN_DET_UPLOAD SET AMOUNT=@NNEWNETAMOUNT WHERE SP_ID=@NSPID		
				ELSE	
					SET @BPAYMENTMISMATCH=1
				
				--IF @@SPID=62
				--	SELECT 'AFTER CHECK PAYMODE',* FROM SLS_PAYMODE_XN_DET_UPLOAD WHERE SP_ID=@NSPID
			END	
		END
		
		SET @NSTEP = 440
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
		
		SELECT @CWHERECLAUSE = ' SP_ID=+'''+LTRIM(RTRIM((@NSPID)))+'''',
		   @CWHERECLAUSE1 = ' WHERE SP_ID='''+LTRIM(RTRIM((@NSPID)))+'''',
		   @CWHERECLAUSE2 = ' AND SP_ID='''+LTRIM(RTRIM((@NSPID)))+''''
	
		SET @NSTEP = 445
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
		
		SELECT @CDONOTENFORCEDAYCLOSE=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='DO_NOT_ENFORCE_LAST_RUN_DT'

		SET @CDONOTENFORCEDAYCLOSE=ISNULL(@CDONOTENFORCEDAYCLOSE,'')
		
		SET @NSTEP = 450
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
		SET @CCMD=N'SELECT @DCURRENTDATE=CM_DT,@CTMPTABLEFINYEAR=FIN_YEAR,@CCMMUSERCODE=USER_CODE FROM SLS_CMM01106_UPLOAD (NOLOCK) '+@CWHERECLAUSE1

		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@DCURRENTDATE DATETIME OUTPUT,@CTMPTABLEFINYEAR VARCHAR(10) OUTPUT,@CCMMUSERCODE CHAR(7) OUTPUT',
		@DCURRENTDATE OUTPUT,@CTMPTABLEFINYEAR OUTPUT,@CCMMUSERCODE OUTPUT
		
		IF @NUPDATEMODE=1 AND @bCalledFromBulkImport=0 ---- Need not put this check in case of Bulk Sales Import
		BEGIN
			SET @NSTEP = 455
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		

			IF EXISTS (SELECT TOP 1 CM_ID FROM  CMM01106 (NOLOCK) WHERE CM_DT>@DCURRENTDATE AND FIN_YEAR>@CTMPTABLEFINYEAR AND CANCELLED=0)
			BEGIN
				IF NOT EXISTS (SELECT TOP 1 A.ROLE_ID FROM USER_ROLE_DET A (NOLOCK) JOIN USERS B (NOLOCK) ON A.ROLE_ID=B.ROLE_ID
							   WHERE B.USER_CODE=@CCMMUSERCODE AND FORM_OPTION='ALLOW_CREATE_BILLS_PREV_FINYEAR' AND VALUE='1')	
				BEGIN
					SET @CERRORMSG='BILLS GENERATED IN NEXT FINANCIAL YEAR...CANNOT SAVE'
					GOTO END_PROC
				END	
			END
		END
		

		SET @NSTEP = 460
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
		
		IF @CDONOTENFORCEDAYCLOSE<>'1'
		BEGIN
			DECLARE @DCONFIGCURRENTDATE DATETIME
			SELECT TOP 1 @DCONFIGCURRENTDATE=DBO.FN_GETLASTRUNDATE()

			IF @NUPDATEMODE=1 AND DATEADD(DD,1,@DCONFIGCURRENTDATE)>@DCURRENTDATE
				SET @DCURRENTDATE=DATEADD(DD,1,@DCONFIGCURRENTDATE)
		END	
		

		SET @NSTEP = 465
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		

		DECLARE @NTOTQTY NUMERIC(14,3)

		SELECT @NTOTQTY=SUM(QUANTITY)  FROM  SLS_CMD01106_UPLOAD  (NOLOCK)
		WHERE SP_ID=@NSPID 

		SET @NSTEP = 467
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
		-- ADDING TOTAL ITEM QUANTITY IN TEMP_MASTER--
		UPDATE SLS_CMM01106_UPLOAD WITH (ROWLOCK) SET TOTAL_QUANTITY=@NTOTQTY  WHERE SP_ID=@NSPID
		
		
		SET @NSTEP = 470 -- DONT REMOVE IT (SUMIT)
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
		DECLARE @STR VARCHAR(MAX),@STR1 VARCHAR(MAX)
		SET @STR=NULL
		SET @STR1=NULL

		SELECT  @STR1=CM_ID,@STR =  COALESCE(@STR +  '/ ', ' ' ) + (''+C.UOM_NAME+': '+CAST(SUM(QUANTITY) AS VARCHAR) +' ')  
		 FROM SLS_CMD01106_UPLOAD A  (NOLOCK)
		 JOIN SKU S (NOLOCK) ON S.PRODUCT_CODE=A.PRODUCT_CODE
		 JOIN ARTICLE B (NOLOCK) ON S.ARTICLE_CODE=B.ARTICLE_CODE
		JOIN UOM C (NOLOCK) ON C.UOM_CODE=B.UOM_CODE
		WHERE SP_ID=@NSPID GROUP BY C.UOM_NAME ,CM_ID

		SET @NSTEP=475
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		

        UPDATE SLS_CMM01106_UPLOAD WITH (ROWLOCK) SET TOTAL_QUANTITY_STR =@STR WHERE SP_ID=@NSPID



	
		
	   IF @NUPDATEMODE=1 
	   BEGIN
		
			SET @NSTEP = 480
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		

			SET @CCMD=N' UPDATE SLS_CMM01106_UPLOAD WITH (ROWLOCK)	SET MANUAL_BILL_FLAG=MANUAL_BILL'+@CWHERECLAUSE1
			EXEC SP_EXECUTESQL @CCMD 

	   END
		
				
		IF @NUPDATEMODE NOT IN (3,4) 
		BEGIN
			
			SET @NSTEP = 485
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		


			SET @CCMD=N' UPDATE SLS_CMM01106_UPLOAD WITH (ROWLOCK) SET CM_DT=CONVERT(VARCHAR,CM_DT,110),
			CUSTOMER_CODE=(CASE WHEN CUSTOMER_CODE='''' THEN ''000000000000'' ELSE CUSTOMER_CODE END)'+@CWHERECLAUSE1
			EXEC SP_EXECUTESQL @CCMD

			SET @NSTEP = 487
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
			---COMMENTED THIS STEP AS IT IS TAKING AROUND 10 SECONDS AT SUVIDHA (12-12-2020)
			---AGAIN UNCOMMENTED THIS STEP AFTER THEIR TICKET#01-0728 CAME FOR CREDIT REFUND ENFORCE VALIDATION BYPASSED
			---WHICH IS CALLED IN THIS PROCEDURE
			
			DECLARE @bExchangeToleranceCrossed BIT

			EXEC SP_VALIDATEXN_BEFORESAVE_SLS_OPTIMIZED
			@NSPID			=@NSPID,
			@NUPDATEMODE	=@NUPDATEMODE,
			@DCURRENTDATE	=@DCURRENTDATE,
			@CMEMOPREFIX	=@CMEMONOPREFIX,
			@BDEBUGMODE		=@BDEBUGMODE ,
			@CLOCID= @CLOCATIONID,
			@CRETVAL		=@CCMDOUTPUT		OUTPUT,
			@BNEGSTOCKFOUND	=@BNEGSTOCKFOUND	OUTPUT,
			@bExchangeToleranceCrossed=@bExchangeToleranceCrossed OUTPUT
						
			SET @NSTEP = 490
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
			
            
			IF(@BALLOWNEGSTOCK=1 AND @BNEGSTOCKFOUND=1)
			BEGIN
				SET @BNEGSTOCKFOUND=0
				SET @CCMDOUTPUT=''
			END
			
			IF @bExchangeToleranceCrossed=1
			BEGIN
				SET @cCmdoutput=''
				---- Had to forcly make error message as blank in this case because as per Rohit Application understands this as error
				---- and does not refresh local cursor to be displayed to User ..Because We need to show the User
				---- the Exchange discount value only after applying discounts (22-12-2022 [Sanjay])

			END
			ELSE
			BEGIN
				IF ISNULL(@CCMDOUTPUT,'') <> '' AND @bExchangeToleranceCrossed=0
				BEGIN
					SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@NSTEP)) + ' DATA VALIDATION ON TEMP DATA FAILED : ' + @CCMDOUTPUT + '...'
					GOTO END_PROC
				END
			END
		END
		
		SET @NSTEP = 495
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
		
		-- START UPDATING XN TABLES	
		SET @CCMD = 'UPDATE SLS_CMD01106_UPLOAD SET OLD_MRP=MRP'+@CWHERECLAUSE1+' AND ISNULL(OLD_MRP,0)=0'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		
		IF @NUPDATEMODE=2	-- CALLED FROM EDITMODE
		BEGIN				-- START OF EDITMODE
		
			SET @NSTEP = 500
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		

			-- UPDATING SENTTOHO FLAG
			SET @CCMD = N'UPDATE SLS_CMM01106_UPLOAD WITH (ROWLOCK) SET SENT_TO_HO = 0, POSTEDINAC = 0,LAST_UPDATE=GETDATE() '+@CWHERECLAUSE1
			EXEC SP_EXECUTESQL @CCMD						

		END					-- END OF EDITMODE

	
		IF EXISTS (SELECT TOP 1 CM_ID FROM SLS_CMM_FLIGHT_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID)
		BEGIN
			SET @NSTEP = 510
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
			
			SET @CCMD = 'UPDATE SLS_CMM_FLIGHT_UPLOAD WITH (ROWLOCK) SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(40), NEWID())
						  WHERE '+@CWHERECLAUSE+' AND (LEFT(ROW_ID,5) = ''LATER'' OR ISNULL(ROW_ID,'''')='''')'
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
		END

		IF EXISTS (SELECT TOP 1 CM_ID FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID)
		BEGIN
			SET @NSTEP = 515
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		

			SET @CCMD = 'DELETE FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD WITH (ROWLOCK) WHERE '+@CWHERECLAUSE+' AND ECOUPON_ID='''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			
			SET @NSTEP = 520
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
			
			SET @CCMD = 'UPDATE SLS_COUPON_REDEMPTION_INFO_UPLOAD WITH (ROWLOCK) SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(40), NEWID())
						 WHERE '+@CWHERECLAUSE+' AND (LEFT(ROW_ID,5) = ''LATER'' OR ISNULL(ROW_ID,'''')='''')'
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
		END

		-- UPDATING MASTER TABLE (PIM01106) FROM TEMP TABLE

		SET @NSTEP =525		-- UPDATING MASTER TABLE			
		
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE

		/*UPDATING SHIFT ID TO NULL WHERE SHIFT ID IS BLANK, FOR CASES WHERE TILL BASED CASH MANAGEMENT 
		  SYSTEM IS NOT ENABLES....NO NEED TO CHECK OTHER CONDITIONS AS IT IS ALREADY BEING VALIDATED BY APPLICATION 
		  AS WELL AS SAVETRAN FOR ADD MODE*/
		SET @CCMD=N'UPDATE SLS_CMM01106_UPLOAD WITH (ROWLOCK) SET SHIFT_ID=NULL WHERE  SP_ID='''+@NSPID+''' AND SHIFT_ID='''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD		
		
		SET @NSTEP = 530
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
		
		SET @CCMD=N'UPDATE SLS_CMD01106_UPLOAD WITH (ROWLOCK)  SET DEPT_ID='''+@CLOCATIONID+''' WHERE '+@CWHERECLAUSE+' AND ISNULL(DEPT_ID,'''')='''''
		EXEC SP_EXECUTESQL @CCMD

		SET @NSTEP=540
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
			-- UPDATING ROW_ID IN TEMP TABLES - CMD01106
		SET @CCMD = N'UPDATE SLS_CMD01106_UPLOAD SET TEMP_ROW_ID=ROW_ID
					  WHERE '+@CWHERECLAUSE+' AND LEFT(ROW_ID,5) = ''LATER'''
		EXEC SP_EXECUTESQL @CCMD

		-- UPDATING REALIZE_SALE IN TEMP TABLES - CMD01106 WHERE  OLD_MRP IS EQUAL TO MRP
		SET @NSTEP = 545
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
		
		SET @CCMD = 'UPDATE SLS_CMD01106_UPLOAD SET REALIZE_SALE=RFNET WHERE SP_ID='''+@NSPID+''' AND OLD_MRP=MRP'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD

		SET @NSTEP = 550
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
		
		---- CODE FOR UPDATING GV SRNO.'S IN PAYMODE XN DET TABLE FOR PAYMODE_CODE='GVC0001'
		SET @CCMD=N'UPDATE SLS_PAYMODE_XN_DET_UPLOAD SET GV_SRNO=(CASE WHEN PAYMODE_CODE=''GVC0001'' 
					THEN ADJ_MEMO_ID ELSE NULL END)'+@CWHERECLAUSE1
		EXEC SP_EXECUTESQL @CCMD
		

		--- Did below change to Update old values column as per discussion with Ved/Sir on 12-12-2022 (Ticket#12-0819)
		SET @NSTEP = 552		
		UPDATE SLS_CMM01106_UPLOAD WITH (ROWLOCK) SET 
		Old_DISCOUNT_PERCENTAGE=DISCOUNT_PERCENTAGE,
		Old_DISCOUNT_AMOUNT=DISCOUNT_AMOUNT,
		Old_NET_AMOUNT=NET_AMOUNT,
		Old_round_off=round_off,
		Old_subtotal=subtotal,
		patchup_run=0 WHERE sp_id=@nSpId --- Reset patchup_run also on Bill Edit/Save as per discussion with Sir/Ved and above Ticket remarks

		SET @NSTEP = 555
		update sls_cmd01106_upload WITH (ROWLOCK) SET 
		old_mrp=mrp,
		OLD_NET=net,
		old_discount_percentage=discount_percentage,
		old_discount_amount=discount_amount,
		old_cmm_discount_amount=cmm_discount_amount,
		old_gst_percentage=gst_percentage,
		old_xn_value_without_gst=xn_value_without_gst,
		old_xn_value_with_gst=xn_value_with_gst,
		OLD_igst_amount=igst_amount,
		OLD_cgst_amount=cgst_amount,
		OLD_sgst_amount=sgst_amount
		WHERE sp_id=@nSpId

		SET @NSTEP = 555.65
		UPDATE sls_paymode_xn_det_upload WITH (ROWLOCK)
		SET old_amount=amount WHERE sp_id=@nSpId

		IF @bSisLoc=1
		BEGIN
			SET @nStep=557
			EXEC SP3S_UPDATE_SISLOC_SALEVAL_DIFFERENCES
			@nSpId=@nSpId,
			@cRetainExcelNrv=@cRetainExcelNrv
		END
				
	END TRY
	BEGIN CATCH
		SET @CERRORMSG = 'PROCEDURE SAVETRAN_SLS_BEFORESAVE : STEP- ' + LTRIM(RTRIM(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		-- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG, '''' AS MEMO_ID'
		
		GOTO END_PROC
	END CATCH
	
END_PROC:
	
	SET @NSTEP=560
	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE	
	
	--SELECT PRODUCT_CODE,NET,CMM_DISCOUNT_AMOUNT,* FROM SLS_CMD01106_UPLOAD WHERE SP_ID=@NSPID
	
	--IF @@TRANCOUNT>0 AND ISNULL(@BSISLOC,0)=0 AND ISNULL(@BCALLEDFROMAFTERSAVE,0)=0
	--BEGIN
	--	IF ISNULL(@CERRORMSG,'')=''
	--		COMMIT TRANSACTION
	--	ELSE
	--		ROLLBACK
	--END
	
	IF ISNULL(@CERRORMSG,'')<>'' 
	BEGIN
		IF OBJECT_ID('#TMPSLSDISCTAXOPT','U') IS NOT NULL
		BEGIN
			IF EXISTS (SELECT TOP 1 ERRMSG FROM #TMPSLSDISCTAXOPT WHERE ISNULL(ERRMSG,'')<>'')
			BEGIN
				SELECT TOP 1 @CERRORMSG=ERRMSG FROM #TMPSLSDISCTAXOPT WHERE ISNULL(ERRMSG,'')<>''
			END
		END
	END	
	
	SET @NSTEP=565
	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE
	
	INSERT @OUTPUT ( ERRMSG, MEMO_ID)
	VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )
	
	IF ISNULL(@BCALLEDFROMAFTERSAVE,0)=0 AND @bCalledFromBulkImport=0
		SELECT *,ISNULL(@BPAYMENTMISMATCH,0) AS PAYMENT_MISMATCH,ISNULL(@CWIZCLIPPOSSCHEMENAME,'') AS WIZCLIP_POS_SCHEMENAME,
		ISNULL(@BEXTRAGSTCREDITDISALLOWED,0) AS EXTRAGST_CREDIT_DISALLOWED,@bExchangeToleranceCrossed exchange_tolerance_crossed
		FROM @OUTPUT	
	ELSE
	IF ISNULL(@BCALLEDFROMAFTERSAVE,0)=1
		INSERT #TERROR (ERRMSG)
		SELECT ISNULL(@CERRORMSG,'')
	ELSE
	IF @bCalledFromBulkImport=1
		INSERT #SAVETRAN_SLS_BULK (ERRMSG)
		SELECT ISNULL(@CERRORMSG,'')
	
	SET @NSTEP=570
	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@NSTEP,0,@NSPID,'',@BDEBUGMODE		
END						-- SAVETRAN_SLS_BEFORESAVE
------------------------------------------------------ END OF PROCEDURE SAVETRAN_SLS_BEFORESAVE
