CREATE PROCEDURE PPC_SAVETRAN_CURRENCY
(
	 @NUPDATEMODE	NUMERIC(1,0)/*1: ADD MODE, 2 : EDIT MODE, 0 DELETE*/,  
	 @NSPID			INT=0,  
	 @CLOC_ID VARCHAR(2)='',
	 @CCURRENCY_CODE VARCHAR(7)=''
)
----WITH ENCRYPTION
AS
BEGIN
DECLARE @CERRMSG VARCHAR(500),@CSTEP VARCHAR(10)
	   ,@CCMD NVARCHAR(MAX),@CNEWCURRENCY_CODE VARCHAR(7),@BREFEXISTS BIT

DECLARE @TOUTPUT TABLE(CURRENCY_CODE VARCHAR(7),ERRMSG VARCHAR(500))

---LIST OF TABLES TO SAVE
DECLARE @UPLOAD_TABLE VARCHAR(100)
SET @UPLOAD_TABLE='PPC_PPC_CURRENCY_MST_UPLOAD'

DECLARE @FILTER VARCHAR(MAX)
SET @FILTER=' B.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''

 IF @CLOC_ID=''
 SELECT TOP 1  @CLOC_ID=VALUE  FROM CONFIG  WHERE CONFIG_OPTION='LOCATION_ID'
     
SET @CSTEP=00
BEGIN TRY
BEGIN TRANSACTION

	IF @NUPDATEMODE=1 --NEW ARTICLE BEING ADDED
	BEGIN
			PRINT 'NEW CURRENCY BEING ADDED'
			SET @CSTEP=70
			--VALIDATION FOR DUPLICATE CURRENCY NAME
			SET @CCMD=N'IF EXISTS(SELECT TOP 1 ''U'' FROM '+@UPLOAD_TABLE+' A INNER JOIN PPC_CURRENCY_MST B ON A.CURRENCY_NAME=B.CURRENCY_NAME
								  WHERE  A.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
					        SET @CERRMSG=''CAN NOT INSERT DUPLICATE CURRENCY NAME.'' '
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD,N'@CERRMSG VARCHAR(500) OUTPUT',@CERRMSG OUTPUT	
			IF ISNULL(@CERRMSG,'')<>''
				GOTO END_PROC			
				
			SET @CSTEP=150
			
			LBL_GENARTKEY:
			EXEC GETNEXTKEY @CTABLENAME='PPC_CURRENCY_MST'
							,@CCOLNAME='CURRENCY_CODE'
							,@NWIDTH='7'
							,@CPREFIX=@CLOC_ID 
							,@NLZEROS=1
							,@CFINYEAR=''
							,@NROWCOUNT=0
							,@CNEWKEYVAL=@CNEWCURRENCY_CODE OUTPUT	
			
			PRINT @CNEWCURRENCY_CODE
			IF ISNULL(@CNEWCURRENCY_CODE,'')=''	
			BEGIN	
				SET @CERRMSG='ERROR GENERATING CURRENCY CODE.'
				GOTO END_PROC
			END	
			
			SET @CSTEP=160				
			IF EXISTS(SELECT TOP 1 'U' FROM PPC_CURRENCY_MST WHERE CURRENCY_CODE=@CNEWCURRENCY_CODE)
				GOTO LBL_GENARTKEY
				
			SET @CSTEP=170		
			 SET @CCMD=N'UPDATE '+ @UPLOAD_TABLE +' SET CURRENCY_CODE='''+@CNEWCURRENCY_CODE+ ''' WHERE SP_ID='+LTRIM(RTRIM(STR(@NSPID)))
			PRINT @CCMD
			EXEC SP_EXECUTESQL  @CCMD
	END
	
	ELSE IF @NUPDATEMODE=2 --UPDATE OR EDIT
	 BEGIN
		     SET @CSTEP=10
			 IF ISNULL(@CCURRENCY_CODE,'')=''
			 BEGIN
				 SET @CERRMSG='COPY CURRENCY CODE NO CANNOT BE BLANK.'
				 GOTO END_PROC
			 END
	         
			SET @CSTEP=20
			--VALIDATION FOR BLANK OR NULL CURRENCY NAME
			
			SET @CCMD=N'IF EXISTS(SELECT TOP 1 ''U'' FROM '+@UPLOAD_TABLE+' WHERE ISNULL(CURRENCY_NAME,'''')='''' AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
					         SET @CERRMSG=''CURRENCY NAME CANNOT BE BLANK.'' '
			PRINT @CCMD					        
			EXEC SP_EXECUTESQL @CCMD,N'@CERRMSG VARCHAR(500) OUTPUT',@CERRMSG OUTPUT
			IF ISNULL(@CERRMSG,'')<>''
				GOTO END_PROC
			
			SET @CSTEP=60
			--VALIDATION FOR DUPLICATE CURRENCY NAME
			SET @CCMD=N'IF EXISTS(SELECT TOP 1 ''U'' FROM '+@UPLOAD_TABLE+' A INNER JOIN PPC_CURRENCY_MST B ON A.CURRENCY_CODE=B.CURRENCY_CODE
								  WHERE A.CURRENCY_NAME= B.CURRENCY_NAME AND A.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
					        SET @CERRMSG=''CAN NOT UPDATE DUPLICATE CURRENCY NAME.'' '
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD,N'@CERRMSG VARCHAR(500) OUTPUT',@CERRMSG OUTPUT	
			IF ISNULL(@CERRMSG,'')<>''
				GOTO END_PROC
			-- SET 
			SET @CNEWCURRENCY_CODE=@CCURRENCY_CODE
	END
	IF @NUPDATEMODE=1 OR @NUPDATEMODE=2
	BEGIN
		SET @CSTEP=260
		--ADDING IN CURRENCY MASTER
		EXEC UPDATEMASTERXN   
			 @CSOURCEDB = ''  
		   , @CSOURCETABLE = @UPLOAD_TABLE  
		   , @CDESTDB  = ''  
		   , @CDESTTABLE = PPC_CURRENCY_MST  
		   , @CKEYFIELD1 = 'CURRENCY_CODE'  
		   , @BALWAYSUPDATE = 1  
		   ,@CFILTERCONDITION=@FILTER  
		   
			 GOTO END_PROC
  END
  IF @NUPDATEMODE=0 -- FRO DELETE CURRENCY MATER
	BEGIN
		SET @CSTEP=10
			 IF ISNULL(@CCURRENCY_CODE,'')=''
			 BEGIN
				 SET @CERRMSG='CURRENCY CODE CANNOT BE BLANK.'
				 GOTO END_PROC
			 END
			 
			DELETE FROM PPC_CURRENCY_MST WHERE CURRENCY_CODE=@CCURRENCY_CODE
			GOTO END_PROC
	END
	
END TRY
BEGIN CATCH 
	SET @CERRMSG='PPC_SAVETRAN_CURRENCY: STEP - '+ISNULL(@CSTEP,'')+', MESSAGE - '+ERROR_MESSAGE() 
END CATCH

END_PROC:

IF @@TRANCOUNT>0  
 BEGIN  
  IF ISNULL(@CERRMSG,'')='' 
	  BEGIN
	   COMMIT TRANSACTION  
	   DELETE FROM PPC_PPC_CURRENCY_MST_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID))) 
	  END
  ELSE  
    ROLLBACK  
 END  
INSERT @TOUTPUT(CURRENCY_CODE,ERRMSG)
SELECT @CNEWCURRENCY_CODE,ISNULL(@CERRMSG,'')
SELECT * FROM @TOUTPUT

END
--END OF PROCEDURE - PPC_SAVETRAN_CURRENCY
