CREATE PROCEDURE ACT_VATFORMS
(
	@CFORMCODE	VARCHAR(10),
	@DFROMDT	DATETIME,
	@DTODT		DATETIME
)
--WITH ENCRYPTION
AS 
BEGIN

	--**** DECLARATION SECTION
	-- DECLARE TABLE FOR LIST OF VOUCHERS
	DECLARE @VMIDC TABLE ( VM_ID VARCHAR(40) )
	-- LIST OF LEDGERS
	DECLARE @LEDGERC TABLE ( VM_ID VARCHAR(40), AC_CODE VARCHAR(10) )

	-- PRIMITIVE OUTPUT TABLE-1 : FOR NON-TAXABLE ENTRIES
	DECLARE @REPORT1C TABLE ( VM_ID VARCHAR(40), AC_CODE VARCHAR(10), 
							 XFER_AMT NUMERIC(14,2), TF_SALE_AMT NUMERIC(14,2), EX_SALE_AMT NUMERIC(14,2) )

	-- PRIMITIVE OUTPUT TABLE-2 : FOR TAXABLE ENTRIES
	DECLARE @REPORT2C TABLE ( VM_ID VARCHAR(40), AC_CODE VARCHAR(10), 
							 TAX_RATE NUMERIC(10,3), TX_SALE_AMT NUMERIC(14,2), TAX_AMOUNT NUMERIC(14,2 ) )

	-- FINAL OUTPUT TABLE
	DECLARE @REPORTC TABLE ( VM_ID VARCHAR(40), AC_CODE VARCHAR(10), 
							 XFER_AMT NUMERIC(14,2), TF_SALE_AMT NUMERIC(14,2), EX_SALE_AMT NUMERIC(14,2), 
							 TAX_RATE NUMERIC(10,3), TX_SALE_AMT NUMERIC(14,2), TAX_AMOUNT NUMERIC(14,2 ) )

	-- TEMP TABLE TO STORE DISTICT TAX RATES FROM FORM_DET TABLE
	DECLARE @TAXRATEC TABLE ( TAX_RATE NUMERIC(10,3), TX_SALE_AMT NUMERIC(14,2), TAX_AMOUNT NUMERIC(14,2) )

	-- DECLARE ENVIRONMENTAL VARIABLES 
	DECLARE @CVMID VARCHAR(40), 
			@CACCODE VARCHAR(40), 
			@CVDID VARCHAR(40),
			@CXNACCODE VARCHAR(40), 
			@NDEBIT NUMERIC(10,2), 
			@NCREDIT NUMERIC(10,2),
			@NXFRAMT NUMERIC(14,2),
			@NTFSLSAMT NUMERIC(14,2),
			@NEXSLSAMT NUMERIC(14,2),
			@NTAXRATE NUMERIC(10,3),
			@NFACT NUMERIC(1),
			@cHEAD_CODE	VARCHAR(MAX),
			@cHEAD_CODE1 VARCHAR(MAX),
			@cHEAD_CODE2 VARCHAR(MAX)
			
			

	INSERT @TAXRATEC ( TAX_RATE ) SELECT DISTINCT TAX_RATE FROM FORM_DET WHERE TAX_TYPE = 'TX' AND FORM_CODE = @CFORMCODE

	-- @NFACT WILL STORE A NEGATIVE OR POSITIVE VALUE TO SPECIFY THE OUT OR IN TYPE OF FORM
	-- (E.G. IT WILL CONTAIN 1 IN SALE FORMS AND -1 IN PURCHASE FORMS )
	SET @NFACT = ( CASE WHEN @CFORMCODE IN ( '001', '003' ) THEN 1
						WHEN @CFORMCODE IN ( '002', '004' ) THEN -1
				   END )

	-- GETING A LIST OF VOUCHERS WHERE THE SALES AND TAX ACCOUNT FROM CONFIG FOR FORM VAT-24 ARE INVOLVED
	INSERT @VMIDC
	SELECT DISTINCT A.VM_ID 
	FROM VD01106 A 
	JOIN VM01106 B ON A.VM_ID = B.VM_ID
	WHERE B.CANCELLED = 0 AND ISNULL(B.OP_ENTRY,0)=0  AND ISNULL(B.MEMO,0)=0 	-- VOUCHERS WHICH ARE NOT CANCELLED
	AND B.VOUCHER_DT BETWEEN @DFROMDT AND @DTODT					-- VOUCHERS OF SPECIFIED PERIOD
--	AND B.VOUCHER_CODE IN ( '0000000007', '0000000004' )			-- SALE AND CREDIT NOTE VOUCHERS
	AND A.AC_CODE IN 
	(
		SELECT DISTINCT XN_AC_CODE AS AC_CODE FROM FORM_DET WHERE FORM_CODE = @CFORMCODE
		UNION 
		SELECT DISTINCT R_XN_AC_CODE AS AC_CODE FROM FORM_DET WHERE FORM_CODE = @CFORMCODE
		UNION 
		SELECT DISTINCT TAX_AC_CODE AS AC_CODE FROM FORM_DET WHERE FORM_CODE = @CFORMCODE
		UNION 
		SELECT DISTINCT R_TAX_AC_CODE AS AC_CODE FROM FORM_DET WHERE FORM_CODE = @CFORMCODE
	)

	-- GETTING A LIST OF ACCOUNTS WHERE HEADS ARE SD, SC OR CASH FOR THE EXTRACTED VOUCHERS
	SELECT @cHEAD_CODE = DBO.FN_ACT_TRAVTREE('0000000014'),@cHEAD_CODE1= DBO.FN_ACT_TRAVTREE('0000000018') ----ADD VARIABLE BY GAURI ON 17/4/2019	
						,@cHEAD_CODE2 = DBO.FN_ACT_TRAVTREE('0000000021')								   ----ADD VARIABLE BY GAURI ON 17/4/2019		
	
	
	INSERT @LEDGERC 
	SELECT DISTINCT A.VM_ID, A.AC_CODE
	FROM VD01106 A
	JOIN LMV01106 B ON A.AC_CODE = B.AC_CODE
	WHERE ( CHARINDEX( B.HEAD_CODE,@cHEAD_CODE)>0		----REPLACE VARIABLE FROM FUNCTION BY GAURI ON 17/4/2019
	OR CHARINDEX( B.HEAD_CODE, @cHEAD_CODE1)>0			----REPLACE VARIABLE FROM FUNCTION BY GAURI ON 17/4/2019
	OR CHARINDEX( B.HEAD_CODE, @cHEAD_CODE2)>0 )		----REPLACE VARIABLE FROM FUNCTION BY GAURI ON 17/4/2019
--	AND B.OUTSTATION_PARTY = 0
	AND A.VM_ID IN ( SELECT DISTINCT VM_ID FROM @VMIDC )


	-- TRAVERSING THE @LEDGERC TABLE TO GET CORRESPONDENCE XNS VALUES
	DECLARE ABC CURSOR FOR 
	SELECT DISTINCT VM_ID, AC_CODE FROM @LEDGERC

	OPEN ABC
	FETCH NEXT FROM ABC INTO @CVMID, @CACCODE
	WHILE @@FETCH_STATUS = 0
	BEGIN
		UPDATE @TAXRATEC SET TX_SALE_AMT = 0, TAX_AMOUNT = 0

		DECLARE XYZ CURSOR FOR 
		SELECT VD_ID, AC_CODE, 
				( DEBIT_AMOUNT * @NFACT ) AS DEBIT_AMOUNT, 
				( CREDIT_AMOUNT * @NFACT ) AS CREDIT_AMOUNT
		FROM VD01106
		WHERE VM_ID = @CVMID AND AC_CODE <> @CACCODE

		SELECT @NXFRAMT= 0, @NTFSLSAMT = 0, @NEXSLSAMT = 0, @NTAXRATE = 0

		OPEN XYZ
		FETCH NEXT FROM XYZ INTO @CVDID, @CXNACCODE, @NDEBIT, @NCREDIT
		WHILE @@FETCH_STATUS = 0
		BEGIN
			IF @NCREDIT <> 0
			BEGIN
				IF @CXNACCODE IN ( SELECT XN_AC_CODE FROM FORM_DET WHERE TAX_TYPE = 'XFR' AND FORM_CODE = @CFORMCODE )
					SET @NXFRAMT = @NXFRAMT + @NCREDIT

				IF @CXNACCODE IN ( SELECT XN_AC_CODE FROM FORM_DET WHERE TAX_TYPE = 'TF' AND FORM_CODE = @CFORMCODE )
					SET @NTFSLSAMT = @NTFSLSAMT + @NCREDIT

				IF @CXNACCODE IN ( SELECT XN_AC_CODE FROM FORM_DET WHERE TAX_TYPE = 'EX' AND FORM_CODE = @CFORMCODE )
					SET @NEXSLSAMT = @NEXSLSAMT + @NCREDIT

				IF @CXNACCODE IN ( SELECT XN_AC_CODE FROM FORM_DET WHERE TAX_TYPE = 'TX' AND FORM_CODE = @CFORMCODE )
				BEGIN
					SELECT TOP 1 @NTAXRATE = TAX_RATE FROM FORM_DET 
						WHERE XN_AC_CODE = @CXNACCODE AND TAX_TYPE = 'TX' AND FORM_CODE = @CFORMCODE 
					
					UPDATE @TAXRATEC SET TX_SALE_AMT = TX_SALE_AMT + @NCREDIT WHERE TAX_RATE = @NTAXRATE
				END

				IF @CXNACCODE IN ( SELECT TAX_AC_CODE FROM FORM_DET WHERE TAX_TYPE = 'TX' AND FORM_CODE = @CFORMCODE )
				BEGIN
					SELECT TOP 1 @NTAXRATE = TAX_RATE FROM FORM_DET 
						WHERE TAX_AC_CODE = @CXNACCODE AND TAX_TYPE = 'TX' AND FORM_CODE = @CFORMCODE 

					UPDATE @TAXRATEC SET TAX_AMOUNT = TAX_AMOUNT + @NCREDIT WHERE TAX_RATE = @NTAXRATE
				END
			END
			ELSE
			BEGIN
				IF @CXNACCODE IN ( SELECT R_XN_AC_CODE FROM FORM_DET WHERE TAX_TYPE = 'XFR' AND FORM_CODE = @CFORMCODE )
					SET @NXFRAMT = @NXFRAMT - @NDEBIT

				IF @CXNACCODE IN ( SELECT R_XN_AC_CODE FROM FORM_DET WHERE TAX_TYPE = 'TF' AND FORM_CODE = @CFORMCODE )
					SET @NTFSLSAMT = @NTFSLSAMT - @NDEBIT

				IF @CXNACCODE IN ( SELECT R_XN_AC_CODE FROM FORM_DET WHERE TAX_TYPE = 'EX' AND FORM_CODE = @CFORMCODE )
					SET @NEXSLSAMT = @NEXSLSAMT - @NDEBIT

				IF @CXNACCODE IN ( SELECT R_XN_AC_CODE FROM FORM_DET WHERE TAX_TYPE = 'TX' AND FORM_CODE = @CFORMCODE )
				BEGIN
					SELECT TOP 1 @NTAXRATE = TAX_RATE FROM FORM_DET 
						WHERE R_XN_AC_CODE = @CXNACCODE AND TAX_TYPE = 'TX' AND FORM_CODE = @CFORMCODE 
					
					UPDATE @TAXRATEC SET TX_SALE_AMT = TX_SALE_AMT - @NDEBIT WHERE TAX_RATE = @NTAXRATE
				END

				IF @CXNACCODE IN ( SELECT R_TAX_AC_CODE FROM FORM_DET WHERE TAX_TYPE = 'TX' AND FORM_CODE = @CFORMCODE )
				BEGIN
					SELECT TOP 1 @NTAXRATE = TAX_RATE FROM FORM_DET 
						WHERE R_TAX_AC_CODE = @CXNACCODE AND TAX_TYPE = 'TX' AND FORM_CODE = @CFORMCODE 

					UPDATE @TAXRATEC SET TAX_AMOUNT = TAX_AMOUNT - @NDEBIT WHERE TAX_RATE = @NTAXRATE
				END
			END

			FETCH NEXT FROM XYZ INTO @CVDID, @CXNACCODE, @NDEBIT, @NCREDIT
		END
		CLOSE XYZ
		DEALLOCATE XYZ

		INSERT @REPORT1C ( VM_ID, AC_CODE, XFER_AMT, TF_SALE_AMT, EX_SALE_AMT )
				VALUES ( @CVMID, @CACCODE, @NXFRAMT, @NTFSLSAMT, @NEXSLSAMT )

		INSERT @REPORT2C ( VM_ID, AC_CODE, TAX_RATE, TX_SALE_AMT, TAX_AMOUNT )
		SELECT  @CVMID AS VM_ID, @CACCODE AS AC_CODE, TAX_RATE, TX_SALE_AMT, TAX_AMOUNT
		FROM @TAXRATEC WHERE TX_SALE_AMT<> 0 OR TAX_AMOUNT<> 0

		FETCH NEXT FROM ABC INTO @CVMID, @CACCODE
	END
	CLOSE ABC
	DEALLOCATE ABC

	INSERT @REPORTC
	SELECT A.VM_ID, A.AC_CODE, 
		( CASE WHEN ISNULL(B.TAX_RATE,0) = ISNULL((SELECT TOP 1 TAX_RATE FROM @REPORT2C 
												   WHERE VM_ID = A.VM_ID AND AC_CODE = A.AC_CODE),0) 
			   THEN A.XFER_AMT ELSE 0 END ) AS XFER_AMT,
		( CASE WHEN ISNULL(B.TAX_RATE,0) = ISNULL((SELECT TOP 1 TAX_RATE FROM @REPORT2C 
												   WHERE VM_ID = A.VM_ID AND AC_CODE = A.AC_CODE),0) 
			   THEN A.TF_SALE_AMT ELSE 0 END ) AS TF_SALE_AMT, 
		( CASE WHEN ISNULL(B.TAX_RATE,0) = ISNULL((SELECT TOP 1 TAX_RATE FROM @REPORT2C 
												   WHERE VM_ID = A.VM_ID AND AC_CODE = A.AC_CODE),0) 
			   THEN A.EX_SALE_AMT ELSE 0 END ) AS EX_SALE_AMT, 
		ISNULL(B.TAX_RATE,0) AS TAX_RATE, ISNULL(B.TX_SALE_AMT,0) AS TX_SALE_AMT, ISNULL(B.TAX_AMOUNT,0) AS TAX_AMOUNT
	FROM @REPORT1C A 
	LEFT OUTER JOIN @REPORT2C B ON A.VM_ID = B.VM_ID AND A.AC_CODE = B.AC_CODE

--	SELECT * FROM @REPORTC
--	SELECT * FROM @REPORT1C
--	SELECT * FROM @REPORT2C

	SELECT  A.VM_ID, A.AC_CODE, 
			B.VOUCHER_NO, B.VOUCHER_DT, B.REF_NO, B.BILL_NO, B.BILL_DT, 
			B.QUANTITY, B.LR_NO, B.LR_DT, E.ANGADIA_NAME,
			D.VOUCHER_TYPE,
			C.AC_NAME, C.CITY, C.TIN_NO, C.TIN_DT,
			A.XFER_AMT, A.TF_SALE_AMT, A.EX_SALE_AMT, A.TAX_RATE, A.TX_SALE_AMT, A.TAX_AMOUNT
	FROM @REPORTC A 
	JOIN VM01106 B ON A.VM_ID = B.VM_ID
	JOIN LMV01106 C ON A.AC_CODE = C.AC_CODE
	JOIN VCHTYPE D ON B.VOUCHER_CODE = D.VOUCHER_CODE
	LEFT OUTER JOIN ANGM E ON B.ANGADIA_CODE = E.ANGADIA_CODE
	WHERE NOT ( A.XFER_AMT=0 AND A.TF_SALE_AMT=0 AND A.EX_SALE_AMT=0 AND A.TX_SALE_AMT=0 )
END
