CREATE PROCEDURE SP3S_GENINDENTS_DATA_ARS
@cFinYear VARCHAR(5),        
@cTable_Name VARCHAR(100),        
@cSeason_From varchar(10)='',        
@cSeason_Upto varchar(10)='',
@AUTO_CAL BIT=0,        --31 MAY 2019
@CAL_DAYS TINYINT=0 --31 MAY 2019
AS        
BEGIN         
  SET NOCOUNT ON        
  IF OBJECT_ID(@cTable_Name) IS NULL     
     BEGIN    
        RAISERROR('PARAM TABLE NOT FOUND',16,1)    
		RETURN        
     END    
  IF OBJECT_ID('tempdb..##GENINDENTS_DATA_ARS') IS NOT NULL DROP TABLE ##GENINDENTS_DATA_ARS  
  CREATE TABLE ##GENINDENTS_DATA_ARS(SEASON_DAYS INT,SPID INT)    
  
  DECLARE @CCMD NVARCHAR(MAX),@CRFDBNAME VARCHAR(500),@CACCODE CHAR(10),@CRFTABLENAME VARCHAR(500),        
  @DFROMDT DATETIME,@DTODT DATETIME,@BINCLUDEYEARINDATE BIT,@DNEWFROMDT DATETIME,@DNEWTODT DATETIME        
 ,@STOCK VARCHAR(MAX),@COL VARCHAR(100),@PAR VARCHAR(MAX)='',@JOIN VARCHAR(MAX)='',@STK_SLS VARCHAR(MAX)=''        
 ,@STK_SLS_JOIN VARCHAR(MAX)='',@PARAM_PASSED VARCHAR(MAX)='',@STK_SLS_GROUP VARCHAR(MAX)=''        
 ,@SHOW_JOIN VARCHAR(MAX)='',@SHOW_COLS VARCHAR(MAX)='',@AF_JOIN VARCHAR(MAX)='',@PARAM VARCHAR(MAX)=''        
 ,@CSEASONID VARCHAR(100),@CFILTERCRITERIA VARCHAR(10)='',@CLOCID VARCHAR(MAX)='IN (',@NGROWTHFACTOR FLOAT        
 ,@DAYS_IN_SEASON INT=0,@FILTER_PARAM VARCHAR(MAX)='',@DEPT VARCHAR(20)
 SET @CCMD='DELETE FROM ['+@cTable_Name+'] WHERE ISNULL(CHK,0)=0'        
 EXEC(@CCMD)      
     
 IF OBJECT_ID('TEMPDB..#TMPSEASON','U') IS NOT NULL DROP TABLE #TMPSEASON        
 CREATE TABLE #TMPSEASON(SEASON_ID VARCHAR(100),PARAMS VARCHAR(MAX))    
     
 SET @CCMD='SELECT TOP 1 SEASON_ID,REPLACE(filter_Criteria,'', '','','') FROM '+@cTable_Name        
 INSERT #TMPSEASON EXEC(@CCMD)        
 SELECT TOP 1 @CSEASONID=SEASON_ID,@PARAM=PARAMS FROM #TMPSEASON        
 IF OBJECT_ID('TEMPDB..#TMPSEASON','U') IS NOT NULL DROP TABLE #TMPSEASON        
 
 IF OBJECT_ID('TEMPDB..#TMPLOCS','U') IS NOT NULL DROP TABLE #TMPLOCS        
 CREATE TABLE #TMPLOCS(LOC CHAR(2))        
 
 --31 MAY 2019
 IF @CAL_DAYS>0 AND @AUTO_CAL=1
    SELECT @cSeason_From=CONVERT(DATE,DATEADD(DD,-@CAL_DAYS+1,GETDATE())),@cSeason_Upto=CONVERT(DATE,GETDATE())
 --31 MAY 2019

 SET @CCMD='SELECT DISTINCT DEPT_ID FROM '+@cTable_Name        
 INSERT #TMPLOCS EXEC(@CCMD)        
 SELECT @CLOCID=COALESCE(@CLOCID,'')+''''+LOC+''',' FROM #TMPLOCS        
 SET @CLOCID=LEFT(@CLOCID,LEN(@CLOCID)-1)+')'        
 WHILE EXISTS(SELECT TOP 1 * FROM #TMPLOCS)
   BEGIN
      SELECT TOP 1 @DEPT=LOC FROM #TMPLOCS 
      EXEC SP3S_SET_ATTR @DEPT,@cSeason_From,@cSeason_Upto,''
      DELETE #TMPLOCS WHERE LOC=@DEPT
   END
 IF OBJECT_ID('TEMPDB..#TMPLOCS','U') IS NOT NULL DROP TABLE #TMPLOCS        
 IF OBJECT_ID('TEMPDB..#TMPATTR','U') IS NOT NULL DROP TABLE #TMPATTR        
 SET @PARAM=REPLACE(REPLACE(@PARAM,'ARTICLE_NO','ARTICLE_NAME'),'NAME','CODE')        
 PRINT 'PARAM '+@PARAM
 
    
 IF @cSeason_From=''        
    SELECT @BINCLUDEYEARINDATE=INCLUDEYEARINDATE    
    ,@DFROMDT=DBO.GET_SEASON_DT(SM.Season_Id,'FROM')    
    ,@DTODT=DBO.GET_SEASON_DT(SM.Season_Id,'TILL')    
    FROM SEASON_MST SM (NOLOCK)         
    WHERE SEASON_ID=@CSEASONID AND INACTIVE=0        
 ELSE        
    SELECT TOP 1 @BINCLUDEYEARINDATE=INCLUDEYEARINDATE, @DFROMDT=@cSeason_From,@DTODT=@cSeason_Upto         
    FROM SEASON_MST WHERE SEASON_ID=@CSEASONID        
 
 IF CONVERT(DATE,GETDATE()) NOT BETWEEN @DFROMDT AND @DTODT
    SELECT @DFROMDT=DATEADD(YY,-1,@DFROMDT),@DTODT=DATEADD(YY,-1,@DTODT)       
 
 SET @DAYS_IN_SEASON=DATEDIFF(DD,@DFROMDT,@DTODT)+1        
 PRINT CONVERT(VARCHAR,@DFROMDT,106)+CHAR(13)+CONVERT(VARCHAR,@DTODT,106)
 
 --IF @DAYS_IN_SEASON<=0 SET @DAYS_IN_SEASON=1        
 PRINT 'Days in Season '+cast(@DAYS_IN_SEASON as varchar)        
  
 INSERT INTO ##GENINDENTS_DATA_ARS (SEASON_DAYS,SPID) SELECT @DAYS_IN_SEASON,REVERSE(LEFT(REVERSE(@cTable_Name),CHARINDEX('_',REVERSE(@cTable_Name))-1))  
 
 SET @CRFDBNAME=DB_NAME()+'.DBO.'        
 SET @CRFTABLENAME='VW_ARS_RF'        
 IF @CFILTERCRITERIA='' SET @CFILTERCRITERIA='1=1 '
 SET @PARAM_PASSED=@PARAM        
 IF @PARAM<>'' AND RIGHT(@PARAM,1)<>',' SET @PARAM+=','         
         
 IF OBJECT_ID('TEMPDB..#TMPCOLS','U') IS NOT NULL DROP TABLE #TMPCOLS        
 IF OBJECT_ID('TEMPDB..#TMPSLS','U') IS NOT NULL DROP TABLE #TMPSLS        
 IF OBJECT_ID('TEMPDB..#TMPSTOCK','U') IS NOT NULL DROP TABLE #TMPSTOCK        
 IF OBJECT_ID('TEMPDB..PARAMSLSCOLS__','U') IS NOT NULL DROP TABLE TEMPDB..[PARAMSLSCOLS__]        
 IF OBJECT_ID('TEMPDB..PARAMSTKCOLS__','U') IS NOT NULL DROP TABLE TEMPDB..[PARAMSTKCOLS__]        
         
 CREATE TABLE #TMPCOLS(COL VARCHAR(MAX))        
            
 SELECT TOP 0 A.DEPT_ID,QUANTITY_IN_STOCK AS SLS_QTY ,QUANTITY_IN_STOCK AS STOCK_QTY,QUANTITY_IN_STOCK AS ORDERS_IN_HAND,QUANTITY_IN_STOCK AS GIT_QTY         
 INTO TEMPDB..[PARAMSLSCOLS__]        
 FROM PMT01106 A (NOLOCK) JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE        
        
 SELECT TOP 0 A.DEPT_ID,QUANTITY_IN_STOCK AS STOCK_QTY,QUANTITY_IN_STOCK AS GIT_QTY         
 INTO TEMPDB..[PARAMSTKCOLS__]        
 FROM PMT01106 A JOIN SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE        

 SET @CCMD='SELECT ''ALTER TABLE TEMPDB..[PARAMSLSCOLS__] ADD ''+COLUMN_NAME+'' ''+DATA_TYPE+''(''+CAST(CHARACTER_MAXIMUM_LENGTH AS VARCHAR)+'');''        
 FROM INFORMATION_SCHEMA.COLUMNS         
 WHERE TABLE_NAME=''ARS_ARS_PLAN_DETAIL_UPLOAD'' AND COLUMN_NAME IN ('+''''+REPLACE(REPLACE(@PARAM,'ARTICLE_NO','ARTICLE_NAME'),',',''',''')+''''+')'        
 INSERT #TMPCOLS EXEC(@CCMD)        
        
 SET @CCMD=''        
 SELECT @CCMD=COALESCE(@CCMD,'')+COL+REPLACE(COL,'[PARAMSLSCOLS__]','[PARAMSTKCOLS__]') FROM #TMPCOLS        
 IF @CCMD<>'' EXEC(@CCMD)        
 SELECT *,CAST(0 AS FLOAT)GROWTH_FACTOR,CAST(0 AS FLOAT)SAFETY_LEVEL,CAST(0 AS INT) MINIMUM_DAYS,CAST(0 AS INT) TARGET_DAYS,CAST(0 AS INT) MAXIMUM_DAYS INTO #TMPSLS FROM TEMPDB..[PARAMSLSCOLS__]        
 SELECT * INTO #TMPSTOCK FROM TEMPDB..[PARAMSTKCOLS__]        
 IF OBJECT_ID('TEMPDB..PARAMSLSCOLS__','U') IS NOT NULL DROP TABLE TEMPDB..[PARAMSLSCOLS__]        
 IF OBJECT_ID('TEMPDB..PARAMSTKCOLS__','U') IS NOT NULL DROP TABLE TEMPDB..[PARAMSTKCOLS__]        
 IF OBJECT_ID('TEMPDB..#TMPCOLS','U') IS NOT NULL DROP TABLE #TMPCOLS        
         
 WHILE @PARAM<>''        
   BEGIN        
      SET @COL=LEFT(@PARAM,CHARINDEX(',',@PARAM)-1)        
      IF @COL='SECTION_CODE'         
         BEGIN        
            SET @PAR+='SECTIONM.SECTION_CODE,'        
            SET @STK_SLS+='SECTIONM.SECTION_CODE=B.SECTION_CODE AND '        
            SET @STK_SLS_JOIN+='A.SECTION_CODE=B.SECTION_CODE AND '        
            SET @STK_SLS_GROUP+='SECTIONM.SECTION_CODE,'        
            SET @SHOW_JOIN+=CHAR(13)+'JOIN SECTIONM (NOLOCK) ON SECTIONM.SECTION_CODE=A.SECTION_CODE'        
            SET @SHOW_COLS+='SECTIONM.SECTION_NAME,'        
         END        
      IF @COL='ARTICLE_CODE'         
         BEGIN        
            SET @PAR+='SKU.ARTICLE_CODE,'        
            SET @STK_SLS+='SKU.ARTICLE_CODE=B.ARTICLE_CODE AND '        
			SET @STK_SLS_JOIN+='A.ARTICLE_CODE=B.ARTICLE_CODE AND '        
            SET @STK_SLS_GROUP+='SKU.ARTICLE_CODE,'        
            SET @SHOW_JOIN+=CHAR(13)+'JOIN ARTICLE ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE=A.ARTICLE_CODE'+CHAR(13)+'JOIN SKU (NOLOCK) ON SKU.ARTICLE_CODE=ARTICLE.ARTICLE_CODE'+CHAR(13)+'JOIN UOM (NOLOCK) ON UOM.UOM_CODE=ARTICLE.UOM_CODE'        
            SET @SHOW_COLS+='ARTICLE.ARTICLE_NAME,'        
         END        
      IF @COL='SUB_SECTION_CODE'         
         BEGIN        
            SET @PAR+='SECTIOND.SUB_SECTION_CODE,'        
            SET @STK_SLS+='SECTIOND.SUB_SECTION_CODE=B.SUB_SECTION_CODE AND '        
            SET @STK_SLS_JOIN+='A.SUB_SECTION_CODE=B.SUB_SECTION_CODE AND '        
            SET @STK_SLS_GROUP+='SECTIOND.SUB_SECTION_CODE,'        
            SET @SHOW_JOIN+=CHAR(13)+'JOIN SECTIOND (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=A.SUB_SECTION_CODE'        
          SET @SHOW_COLS+='SECTIOND.SUB_SECTION_NAME,'        
         END           
      IF @COL LIKE 'PARA%CODE'         
         BEGIN        
           SET @PAR+='SKU.'+@COL+','        
           SET @STK_SLS+='SKU.'+@COL+'=B.'+@COL+' AND '        
           SET @STK_SLS_JOIN+='A.'+@COL+'=B.'+@COL+' AND '        
           SET @STK_SLS_GROUP+='SKU.'+@COL+','        
           SET @SHOW_JOIN+=CHAR(13)+'JOIN PARA'+SUBSTRING(@COL,5,1)+' (NOLOCK) ON PARA'+SUBSTRING(@COL,5,1)+'.PARA'+SUBSTRING(@COL,5,1)+'_CODE=A.PARA'+SUBSTRING(@COL,5,1)+'_CODE'        
           SET @SHOW_COLS+='PARA'+SUBSTRING(@COL,5,1)+'.PARA'+SUBSTRING(@COL,5,1)+'_NAME,'        
         END        
      IF @COL LIKE 'ATTR%KEY_CODE'         
         BEGIN        
           SET @PAR+='ATTR'+SUBSTRING(@COL,5,1)+'_MST.'+@COL+','        
           SET @JOIN+=' JOIN ATTR'+SUBSTRING(@COL,5,1)+'_MST (NOLOCK) ON ATTR'+SUBSTRING(@COL,5,1)+'_MST.'+@COL+'=AF.'+@COL        
           SET @STK_SLS+='ATTR'+SUBSTRING(@COL,5,1)+'_MST.'+@COL+'=B.'+@COL+' AND '        
           SET @STK_SLS_JOIN+='A.'+@COL+'=B.'+@COL+' AND '        
           SET @STK_SLS_GROUP+='ATTR'+SUBSTRING(@COL,5,1)+'_MST.'+@COL+','        
           SET @SHOW_JOIN+=CHAR(13)+' JOIN ATTR'+SUBSTRING(@COL,5,1)+'_MST (NOLOCK) ON ATTR'+SUBSTRING(@COL,5,1)+'_MST.ATTR'+SUBSTRING(@COL,5,1)+'_KEY_CODE=A.ATTR'+SUBSTRING(@COL,5,1)+'_KEY_CODE'        
           SET @SHOW_COLS+='ATTR'+SUBSTRING(@COL,5,1)+'_MST.ATTR'+SUBSTRING(@COL,5,1)+'_KEY_NAME,'        
           SET @AF_JOIN+='AF.ATTR'+SUBSTRING(@COL,5,1)+'_KEY_CODE=ATTR'+SUBSTRING(@COL,5,1)+'_MST.ATTR'+SUBSTRING(@COL,5,1)+'_KEY_CODE AND '        
         END        
      SET @PARAM=SUBSTRING(@PARAM,CHARINDEX(',',@PARAM)+1,4000)        
   END        
   
 SET @PARAM=@PAR    
 --PRINT 'PAR '+@PAR      
 IF RIGHT(RTRIM(@SHOW_COLS),1)=',' SET @SHOW_COLS=LEFT(RTRIM(@SHOW_COLS),LEN(RTRIM(@SHOW_COLS))-1)        
 IF RIGHT(RTRIM(@STK_SLS_GROUP),1)=',' SET @STK_SLS_GROUP=LEFT(RTRIM(@STK_SLS_GROUP),LEN(RTRIM(@STK_SLS_GROUP))-1)        
 IF RIGHT(RTRIM(@STK_SLS),3)='AND' SET @STK_SLS=LEFT(RTRIM(@STK_SLS),LEN(RTRIM(@STK_SLS))-3)        
 IF RIGHT(RTRIM(@AF_JOIN),3)='AND' SET @AF_JOIN=LEFT(RTRIM(@AF_JOIN),LEN(RTRIM(@AF_JOIN))-3)        
 IF RIGHT(RTRIM(@STK_SLS_JOIN),3)='AND' SET @STK_SLS_JOIN=LEFT(RTRIM(@STK_SLS_JOIN),LEN(RTRIM(@STK_SLS_JOIN))-3)        
         
 IF @PARAM<>'' SET @PARAM=LEFT(@PARAM,LEN(@PARAM)-1)        

 SET @CCMD=N'INSERT #TMPSLS(DEPT_ID,SLS_QTY,GIT_QTY,ORDERS_IN_HAND,STOCK_QTY'+CASE @PARAM_PASSED WHEN '' THEN '' ELSE ','+@PARAM_PASSED END+')'        
 --+CHAR(13)+'SELECT A.DEPT_ID,SUM(ISNULL(A.SALES_QTY,0)+ISNULL(A.OPS_QTY,0)) AS NSLS,0,0,0'+CASE @PARAM WHEN '' THEN '' ELSE ','+@PARAM END        
 +CHAR(13)+'SELECT A.DEPT_ID,SUM(CASE WHEN A.XN_MODE=''SALE'' THEN ISNULL(A.SALES_QTY,0) ELSE 0 END) AS NSLS,0,0,0'+CASE @PARAM WHEN '' THEN '' ELSE ','+@PARAM END        
 +CHAR(13)+'FROM '+@CRFDBNAME+@CRFTABLENAME+' A (NOLOCK)
	JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
	JOIN ARTICLE (NOLOCK)
	JOIN SECTIOND (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE
	JOIN SECTIONM (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE
	JOIN ARTICLE_FIX_ATTR AF (NOLOCK) ON AF.ARTICLE_CODE=ARTICLE.ARTICLE_CODE
	JOIN ATTR1_MST (NOLOCK) ON ATTR1_MST.ATTR1_KEY_CODE=AF.ATTR1_KEY_CODE
	JOIN ATTR2_MST (NOLOCK) ON ATTR2_MST.ATTR2_KEY_CODE=AF.ATTR2_KEY_CODE
	JOIN ATTR3_MST (NOLOCK) ON ATTR3_MST.ATTR3_KEY_CODE=AF.ATTR3_KEY_CODE
	JOIN ATTR4_MST (NOLOCK) ON ATTR4_MST.ATTR4_KEY_CODE=AF.ATTR4_KEY_CODE
	JOIN ATTR5_MST (NOLOCK) ON ATTR5_MST.ATTR5_KEY_CODE=AF.ATTR5_KEY_CODE
	JOIN ATTR6_MST (NOLOCK) ON ATTR6_MST.ATTR6_KEY_CODE=AF.ATTR6_KEY_CODE
	JOIN ATTR7_MST (NOLOCK) ON ATTR7_MST.ATTR7_KEY_CODE=AF.ATTR7_KEY_CODE
	JOIN ATTR8_MST (NOLOCK) ON ATTR8_MST.ATTR8_KEY_CODE=AF.ATTR8_KEY_CODE
	JOIN ATTR9_MST (NOLOCK) ON ATTR9_MST.ATTR9_KEY_CODE=AF.ATTR9_KEY_CODE
	JOIN ATTR10_MST (NOLOCK) ON ATTR10_MST.ATTR10_KEY_CODE=AF.ATTR10_KEY_CODE
	JOIN ATTR11_MST (NOLOCK) ON ATTR11_MST.ATTR11_KEY_CODE=AF.ATTR11_KEY_CODE
	JOIN ATTR12_MST (NOLOCK) ON ATTR12_MST.ATTR12_KEY_CODE=AF.ATTR12_KEY_CODE
	JOIN ATTR13_MST (NOLOCK) ON ATTR13_MST.ATTR13_KEY_CODE=AF.ATTR13_KEY_CODE
	JOIN ATTR14_MST (NOLOCK) ON ATTR14_MST.ATTR14_KEY_CODE=AF.ATTR14_KEY_CODE
	JOIN ATTR15_MST (NOLOCK) ON ATTR15_MST.ATTR15_KEY_CODE=AF.ATTR15_KEY_CODE
	JOIN ATTR16_MST (NOLOCK) ON ATTR16_MST.ATTR16_KEY_CODE=AF.ATTR16_KEY_CODE
	JOIN ATTR17_MST (NOLOCK) ON ATTR17_MST.ATTR17_KEY_CODE=AF.ATTR17_KEY_CODE
	JOIN ATTR18_MST (NOLOCK) ON ATTR18_MST.ATTR18_KEY_CODE=AF.ATTR18_KEY_CODE
	JOIN ATTR19_MST (NOLOCK) ON ATTR19_MST.ATTR19_KEY_CODE=AF.ATTR19_KEY_CODE
	JOIN ATTR20_MST (NOLOCK) ON ATTR20_MST.ATTR20_KEY_CODE=AF.ATTR20_KEY_CODE
	JOIN ATTR21_MST (NOLOCK) ON ATTR21_MST.ATTR21_KEY_CODE=AF.ATTR21_KEY_CODE
	JOIN ATTR22_MST (NOLOCK) ON ATTR22_MST.ATTR22_KEY_CODE=AF.ATTR22_KEY_CODE
	JOIN ATTR23_MST (NOLOCK) ON ATTR23_MST.ATTR23_KEY_CODE=AF.ATTR23_KEY_CODE
	JOIN ATTR24_MST (NOLOCK) ON ATTR24_MST.ATTR24_KEY_CODE=AF.ATTR24_KEY_CODE
	JOIN ATTR25_MST (NOLOCK) ON ATTR25_MST.ATTR25_KEY_CODE=AF.ATTR25_KEY_CODE
	ON SKU.ARTICLE_CODE=ARTICLE.ARTICLE_CODE'        
  +CHAR(13)+'WHERE A.DEPT_ID '+@CLOCID
  +CHAR(13)+'AND XN_DT BETWEEN '''+REPLACE(CONVERT(VARCHAR,@DFROMDT,102),'.','-')+''' AND '''+REPLACE(CONVERT(VARCHAR,@DTODT,102),'.','-')+''''
  +CHAR(13)+'AND '+@CFILTERCRITERIA--+CHAR(13)        
  +CASE @PARAM WHEN '' THEN 'GROUP BY A.DEPT_ID' ELSE CHAR(13)+'GROUP BY A.DEPT_ID,'+@PARAM END        
  --+CHAR(13)+'HAVING SUM(CASE WHEN A.XN_MODE=''SALE'' THEN ISNULL(A.SALES_QTY,0) ELSE 0 END)>0'
  PRINT '--SALE FOR SEASON '+CHAR(13)+@CCMD+CHAR(13)        
	
  EXEC SP_EXECUTESQL @CCMD        

 IF OBJECT_ID('TEMPDB..##TMPSLS') IS NOT NULL DROP TABLE ##TMPSLS    
  
 SET @STOCK='SUM(ISNULL(A.STOCK_QTY,0)+ISNULL(A.OPS_QTY,0))'         
 
 SET @CCMD=N'INSERT #TMPSTOCK(DEPT_ID,STOCK_QTY,GIT_QTY'+CASE @PARAM_PASSED WHEN '' THEN '' ELSE ','+@PARAM_PASSED END+')'        
 SET @CCMD+=CHAR(13)+'SELECT A.DEPT_ID,SUM(ISNULL(A.STOCK_QTY,0)+ISNULL(A.OPS_QTY,0)) AS CBS,SUM(ISNULL(A.GIT_QTY,0)) AS GIT_QTY'+CASE @PARAM WHEN '' THEN '' ELSE ','+@PARAM END        
 SET @CCMD+=CHAR(13)+'FROM '+@CRFDBNAME+@CRFTABLENAME+' A (NOLOCK)
    JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
	JOIN PARA1 (NOLOCK) ON PARA1.PARA1_CODE=SKU.PARA1_CODE AND ISNULL(PARA1.INACTIVE,0)=0
	JOIN PARA2 (NOLOCK) ON PARA2.PARA2_CODE=SKU.PARA2_CODE AND ISNULL(PARA2.INACTIVE,0)=0
	JOIN PARA3 (NOLOCK) ON PARA3.PARA3_CODE=SKU.PARA3_CODE AND ISNULL(PARA3.INACTIVE,0)=0
	JOIN PARA4 (NOLOCK) ON PARA4.PARA4_CODE=SKU.PARA4_CODE AND ISNULL(PARA4.INACTIVE,0)=0
	JOIN PARA5 (NOLOCK) ON PARA5.PARA5_CODE=SKU.PARA5_CODE AND ISNULL(PARA5.INACTIVE,0)=0
	JOIN PARA6 (NOLOCK) ON PARA6.PARA6_CODE=SKU.PARA6_CODE AND ISNULL(PARA6.INACTIVE,0)=0
	JOIN ARTICLE (NOLOCK)
	JOIN SECTIOND (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE
	JOIN SECTIONM (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE
	JOIN ARTICLE_FIX_ATTR AF (NOLOCK) ON AF.ARTICLE_CODE=ARTICLE.ARTICLE_CODE
	JOIN ATTR1_MST (NOLOCK) ON ATTR1_MST.ATTR1_KEY_CODE=AF.ATTR1_KEY_CODE
	JOIN ATTR2_MST (NOLOCK) ON ATTR2_MST.ATTR2_KEY_CODE=AF.ATTR2_KEY_CODE
	JOIN ATTR3_MST (NOLOCK) ON ATTR3_MST.ATTR3_KEY_CODE=AF.ATTR3_KEY_CODE
	JOIN ATTR4_MST (NOLOCK) ON ATTR4_MST.ATTR4_KEY_CODE=AF.ATTR4_KEY_CODE
	JOIN ATTR5_MST (NOLOCK) ON ATTR5_MST.ATTR5_KEY_CODE=AF.ATTR5_KEY_CODE
	JOIN ATTR6_MST (NOLOCK) ON ATTR6_MST.ATTR6_KEY_CODE=AF.ATTR6_KEY_CODE
	JOIN ATTR7_MST (NOLOCK) ON ATTR7_MST.ATTR7_KEY_CODE=AF.ATTR7_KEY_CODE
	JOIN ATTR8_MST (NOLOCK) ON ATTR8_MST.ATTR8_KEY_CODE=AF.ATTR8_KEY_CODE	
	JOIN ATTR9_MST (NOLOCK) ON ATTR9_MST.ATTR9_KEY_CODE=AF.ATTR9_KEY_CODE
	JOIN ATTR10_MST (NOLOCK) ON ATTR10_MST.ATTR10_KEY_CODE=AF.ATTR10_KEY_CODE
	JOIN ATTR11_MST (NOLOCK) ON ATTR11_MST.ATTR11_KEY_CODE=AF.ATTR11_KEY_CODE
	JOIN ATTR12_MST (NOLOCK) ON ATTR12_MST.ATTR12_KEY_CODE=AF.ATTR12_KEY_CODE
	JOIN ATTR13_MST (NOLOCK) ON ATTR13_MST.ATTR13_KEY_CODE=AF.ATTR13_KEY_CODE
	JOIN ATTR14_MST (NOLOCK) ON ATTR14_MST.ATTR14_KEY_CODE=AF.ATTR14_KEY_CODE
	JOIN ATTR15_MST (NOLOCK) ON ATTR15_MST.ATTR15_KEY_CODE=AF.ATTR15_KEY_CODE
	JOIN ATTR16_MST (NOLOCK) ON ATTR16_MST.ATTR16_KEY_CODE=AF.ATTR16_KEY_CODE
	JOIN ATTR17_MST (NOLOCK) ON ATTR17_MST.ATTR17_KEY_CODE=AF.ATTR17_KEY_CODE
	JOIN ATTR18_MST (NOLOCK) ON ATTR18_MST.ATTR18_KEY_CODE=AF.ATTR18_KEY_CODE
	JOIN ATTR19_MST (NOLOCK) ON ATTR19_MST.ATTR19_KEY_CODE=AF.ATTR19_KEY_CODE
	JOIN ATTR20_MST (NOLOCK) ON ATTR20_MST.ATTR20_KEY_CODE=AF.ATTR20_KEY_CODE
	JOIN ATTR21_MST (NOLOCK) ON ATTR21_MST.ATTR21_KEY_CODE=AF.ATTR21_KEY_CODE
	JOIN ATTR22_MST (NOLOCK) ON ATTR22_MST.ATTR22_KEY_CODE=AF.ATTR22_KEY_CODE
	JOIN ATTR23_MST (NOLOCK) ON ATTR23_MST.ATTR23_KEY_CODE=AF.ATTR23_KEY_CODE
	JOIN ATTR24_MST (NOLOCK) ON ATTR24_MST.ATTR24_KEY_CODE=AF.ATTR24_KEY_CODE
	JOIN ATTR25_MST (NOLOCK) ON ATTR25_MST.ATTR25_KEY_CODE=AF.ATTR25_KEY_CODE
	ON SKU.ARTICLE_CODE=ARTICLE.ARTICLE_CODE'
 +CHAR(13)+'JOIN #TMPSLS B ON '+@STK_SLS        
 +CHAR(13)+'WHERE A.XN_MODE=''STOCK''
  AND A.DEPT_ID '+@CLOCID+'         
    AND A.XN_DT = '''+REPLACE(CONVERT(VARCHAR,GETDATE(),102),'.','-')+''''        
 +CASE @PARAM WHEN '' THEN 'GROUP BY A.DEPT_ID' ELSE CHAR(13)+'GROUP BY A.DEPT_ID,'+@PARAM END
 +CHAR(13)+'HAVING NOT ('+@STOCK+'=0 AND SUM(ISNULL(A.GIT_QTY,0))=0)'        
 PRINT CHAR(13)+'--STOCK AS ON DATE '+CHAR(13)+@CCMD        
 
 EXEC SP_EXECUTESQL @CCMD        
 
 SELECT @CACCODE=DEPT_AC_CODE FROM LOCATION WHERE DEPT_ID=@CLOCID        
         
 SET @CCMD='UPDATE A SET GIT_QTY=CONVERT(NUMERIC(10,2),B.GIT_QTY),STOCK_QTY=CONVERT(NUMERIC(10,2),B.STOCK_QTY)         
 FROM #TMPSLS A         
 JOIN #TMPSTOCK B ON A.DEPT_ID=B.DEPT_ID'+CASE @STK_SLS_JOIN WHEN '' THEN '' ELSE ' AND '+@STK_SLS_JOIN END        
 --PRINT '227 '+@CCMD        
 
 EXEC(@CCMD)        
 
 ALTER TABLE #TMPSLS ALTER COLUMN ORDERS_IN_HAND FLOAT
 
 SET @CCMD='UPDATE A SET ORDERS_IN_HAND=CONVERT(FLOAT,P.PENDING_QTY)         
 FROM #TMPSLS A        
 JOIN         
 (SELECT A.DEPT_ID,'+CASE @PARAM_PASSED WHEN '' THEN '' ELSE 'A.'+REPLACE(@PARAM_PASSED,',',',A.')+',' END+'ORDER_QTY-ISNULL(B.WSL_QTY,0) AS PENDING_QTY        
  FROM         
  (SELECT B.DEPT_ID,'+CASE @STK_SLS_GROUP WHEN '' THEN '' ELSE @STK_SLS_GROUP+',' END+'SUM(QUANTITY) AS ORDER_QTY         
   FROM BUYER_ORDER_DET A (NOLOCK)    
   JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE=A.ARTICLE_CODE        
   JOIN SECTIOND (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE        
   JOIN SECTIONM (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE         
   JOIN SKU (NOLOCK) ON SKU.ARTICLE_CODE=ARTICLE.ARTICLE_CODE '+        
   +CASE @JOIN WHEN '' THEN '' ELSE +'        
   LEFT JOIN ARTICLE_FIX_ATTR AF (NOLOCK) '        
   +CHAR(13)+'      '+@JOIN+'        
   ON AF.ARTICLE_CODE=A.ARTICLE_CODE' END+'        
   JOIN BUYER_ORDER_MST B (NOLOCK) ON A.ORDER_ID=B.ORDER_ID        
   WHERE (B.AC_CODE='''+LTRIM(RTRIM(ISNULL(@CACCODE,'')))+''' OR B.DEPT_ID '+@CLOCID+')'        
   +CASE @STK_SLS_GROUP WHEN '' THEN '' ELSE CHAR(13)+'      GROUP BY B.DEPT_ID,'+@STK_SLS_GROUP END+'         
  )A        
  LEFT OUTER JOIN         
  (SELECT B.DEPT_ID,'+CASE @STK_SLS_GROUP WHEN '' THEN '' ELSE @STK_SLS_GROUP+',' END+'SUM(QUANTITY) AS WSL_QTY         
   FROM IND01106 A (NOLOCK)        
   JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=A.PRODUCT_CODE        
   JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE=SKU.ARTICLE_CODE        
   JOIN SECTIOND (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE        
   JOIN SECTIONM (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE '+        
   +CASE @JOIN WHEN '' THEN '' ELSE +'        
   LEFT JOIN ARTICLE_FIX_ATTR AF (NOLOCK) '        
   +CHAR(13)+' '+@JOIN+'        
   ON AF.ARTICLE_CODE=SKU.ARTICLE_CODE' END+'        
   JOIN INM01106 B (NOLOCK) ON A.INV_ID=B.INV_ID     
   JOIN BUYER_ORDER_MST C (NOLOCK) ON C.ORDER_ID=A.ORDER_ID        
   JOIN SKU D (NOLOCK) ON D.PRODUCT_CODE=A.PRODUCT_CODE        
   LEFT OUTER JOIN WPS_MST E (NOLOCK) ON E.PS_ID=A.PS_ID        
   WHERE C.AC_CODE='''+LTRIM(RTRIM(ISNULL(@CACCODE,'')))+''' AND B.CANCELLED=0 AND (ISNULL(A.ORDER_ID,'''')<>'''' OR ISNULL(E.ENTRY_MODE,0) IN (3,4) OR B.ENTRY_MODE=4) AND B.DEPT_ID '+@CLOCID+''        
   +CASE @STK_SLS_GROUP WHEN '' THEN '' ELSE CHAR(13)+'      GROUP BY B.DEPT_ID,'+@STK_SLS_GROUP END+'        
  )B ON A.DEPT_ID=B.DEPT_ID AND '+@STK_SLS_JOIN+'        
 )P ON A.DEPT_ID=P.DEPT_ID AND '+REPLACE(@STK_SLS_JOIN,'B.','P.')        
 PRINT REPLICATE('*',150)+CHAR(13)+'--ORDERS IN HAND'+CHAR(13)+@CCMD+CHAR(13)+REPLICATE('*',150)
 
 EXEC(@CCMD)        
 
 
 SET @CCMD='UPDATE T SET T.GROWTH_FACTOR=1+ISNULL(A.GROWTH_FACTOR,0)/100.0,T.SAFETY_LEVEL=ISNULL(A.SAFETY_LEVEL,0)         
    ,T.MINIMUM_DAYS=A.MINIMUM_DAYS,T.TARGET_DAYS=A.TARGET_DAYS,T.MAXIMUM_DAYS=A.MAXIMUM_DAYS        
    FROM #TMPSLS T JOIN ['+@cTable_Name+'] A ON T.DEPT_ID=A.DEPT_ID'        
 
 EXEC(@CCMD)        
 
 SET @CCMD='SELECT DISTINCT CAST(1 AS BIT) AS CHK/*,L.DEPT_ID*/,L.DEPT_NAME,'+CAST(@DAYS_IN_SEASON AS VARCHAR)+' AS Days_In_Season,'+CHAR(13)        
 +CASE @SHOW_COLS WHEN '' THEN '' ELSE REPLACE(@SHOW_COLS,'ARTICLE_NAME','ARTICLE_NO')+',' END+CHAR(13)         
 +'A.DEPT_ID,A.GIT_QTY,A.ORDERS_IN_HAND,A.SLS_QTY,A.STOCK_QTY'        
 +CASE @PARAM_PASSED WHEN '' THEN '' ELSE ',A.'+REPLACE(@PARAM_PASSED,',',',A.') END        
 +',CAST(A.GROWTH_FACTOR*100-100 AS VARCHAR) AS GROWTH_FACTOR,A.SAFETY_LEVEL    
   ,CONVERT(NUMERIC(10,0),CEILING(A.SLS_QTY*A.GROWTH_FACTOR/'+CAST(CASE @DAYS_IN_SEASON WHEN 0 THEN 1 ELSE 1/*@DAYS_IN_SEASON*/ END AS VARCHAR)+')) AS ESTIMATED_SALES        
   ,CONVERT(NUMERIC(10,0),CEILING(A.SLS_QTY*A.GROWTH_FACTOR/'+CAST(CASE @DAYS_IN_SEASON WHEN 0 THEN 1 ELSE @DAYS_IN_SEASON END AS VARCHAR)+'*A.TARGET_DAYS*(1.0+ISNULL(A.SAFETY_LEVEL,0)/100)-ISNULL(A.STOCK_QTY,0)-ISNULL(A.ORDERS_IN_HAND,0)-ISNULL(A.GIT_QTY,0))) AS ORDER_QTY  
   ,''ROW_'''+CASE @PARAM_PASSED WHEN '' THEN '' ELSE '+A.'+REPLACE(@PARAM_PASSED,',','+A.') END +' AS ROW_ID'        
 +CASE WHEN @SHOW_COLS LIKE '%ARTICLE%' OR @SHOW_COLS LIKE '%ATTR[1-25]_MST%' THEN ',UOM_NAME' ELSE '' END +',MINIMUM_DAYS,TARGET_DAYS,MAXIMUM_DAYS     
 INTO ##TMPSLS         
 FROM #TMPSLS A    
 JOIN LOCATION L (NOLOCK) ON L.DEPT_ID=A.DEPT_ID AND L.DEPT_ID '+@CLOCID+        
 +CASE @SHOW_JOIN WHEN '' THEN '' ELSE @SHOW_JOIN END        
 +CASE WHEN @SHOW_JOIN LIKE '%ARTICLE%' THEN '' ELSE CHAR(13)+'LEFT JOIN ARTICLE_FIX_ATTR AF (NOLOCK) ON '+@AF_JOIN
												    +CHAR(13)+'JOIN ARTICLE (NOLOCK) ON AF.ARTICLE_CODE=ARTICLE.ARTICLE_CODE'
												    +CHAR(13)+'JOIN SKU (NOLOCK) ON SKU.ARTICLE_CODE=ARTICLE.ARTICLE_CODE'
													+CHAR(13)+'JOIN UOM (NOLOCK) ON UOM.UOM_CODE=ARTICLE.UOM_CODE' END 
 --+CHAR(13)+'WHERE 1=1 --OR CONVERT(NUMERIC(10,0),CEILING(A.SLS_QTY*A.GROWTH_FACTOR/'+CAST(CASE @DAYS_IN_SEASON WHEN 0 THEN 1 ELSE @DAYS_IN_SEASON END AS VARCHAR)+'*A.TARGET_DAYS*(1.0+ISNULL(A.SAFETY_LEVEL,0)/100)-ISNULL(A.STOCK_QTY,0)-ISNULL(A.ORDERS_IN_HAND,0)-ISNULL(A.GIT_QTY,0)))>0'        
 SET @CCMD=REPLACE(@CCMD,'ARTICLE.ARTICLE_NO','ARTICLE.ARTICLE_NO,ARTICLE.ARTICLE_NAME')
 PRINT CHAR(13)+'--Final '+CHAR(13)+@CCMD        
 
 EXEC(@CCMD) 
 
 DECLARE @ORDER VARCHAR(1000)='ORDER BY DEPT_NAME'   
 SET @CCMD='CHK,DEPT_NAME,Days_In_Season,DEPT_ID,MINIMUM_DAYS,TARGET_DAYS,MAXIMUM_DAYS,'    
 SELECT @FILTER_PARAM=COALESCE(@FILTER_PARAM,'')+COLUMN_NAME+',' 
 FROM TEMPDB.INFORMATION_SCHEMA.COLUMNS 
 WHERE TABLE_NAME LIKE '%##TMPSLS%'    
 AND COLUMN_NAME NOT IN ('CHK','DEPT_NAME','Days_In_Season','DEPT_ID','MINIMUM_DAYS','TARGET_DAYS','MAXIMUM_DAYS','SLS_QTY','GROWTH_FACTOR','ESTIMATED_SALES','GIT_QTY','ORDERS_IN_HAND','STOCK_QTY','SAFETY_LEVEL','ORDER_QTY','UOM_NAME','ROW_ID')    
 IF @FILTER_PARAM LIKE '%ARTICLE%' SET @ORDER+=',ARTICLE_NO'
IF @FILTER_PARAM LIKE '%PARA1%' SET @ORDER+=',PARA1_NAME'
 IF @FILTER_PARAM LIKE '%PARA2%' SET @ORDER+=',PARA2_NAME'
 IF @FILTER_PARAM LIKE '%PARA3%' SET @ORDER+=',PARA3_NAME'
 IF @FILTER_PARAM LIKE '%PARA4%' SET @ORDER+=',PARA4_NAME'
 IF @FILTER_PARAM LIKE '%PARA5%' SET @ORDER+=',PARA5_NAME'
 IF @FILTER_PARAM LIKE '%PARA6%' SET @ORDER+=',PARA6_NAME'
 IF @FILTER_PARAM LIKE '%SECTION_NAME%' SET @ORDER+=',SECTION_NAME'
 IF @FILTER_PARAM LIKE '%SUB_SECTION_NAME%' SET @ORDER+=',SUB_SECTION_NAME'
 SET @CCMD+=@FILTER_PARAM
 SET @CCMD+='SLS_QTY,GROWTH_FACTOR,ESTIMATED_SALES ,STOCK_QTY,GIT_QTY,ORDERS_IN_HAND,SAFETY_LEVEL,ORDER_QTY,UOM_NAME,ROW_ID'    
 
 print '373 '+@ccmd
 if OBJECT_ID('tempdb..#sel') is not null drop table #sel
 if OBJECT_ID('tempdb..#ord') is not null drop table #ord
 select * into #sel from DBO.FN_SPLIT_VALUE(@ccmd)
 select * into #ord from DBO.FN_SPLIT_VALUE(ltrim(replace(@order,'order by','')))
 delete #ord where code='dept_name'
 set @order='ORDER BY DEPT_NAME,'
 select @order=COALESCE(@order,'')+o.code+',' 
 from #ord o
 left join #sel s on o.code=s.code
 where s.code is not null
 set @ORDER=rtrim(@ORDER)
 if RIGHT(@ORDER,1)=',' set @ORDER=LEFT(@ORDER,LEN(@order)-1)
 if OBJECT_ID('tempdb..##TMPARSSALESPD') is not null drop table ##TMPARSSALESPD
 SET @CCMD='SELECT '+@CCMD+','''+CONVERT(VARCHAR,@DFROMDT,106)+''' Season_From,'''+CONVERT(VARCHAR,@DTODT,106)+''' Season_Upto 
 INTO ##TMPARSSALESPD
 FROM ##TMPSLS '+@ORDER 
 EXEC(@CCMD)    
 PRINT 'RC '+cast(@@ROWCOUNT as varchar)
 print replicate('-',1000)
 
 SET @CCMD='SELECT '
 SELECT @CCMD=COALESCE(@CCMD,'')+COLUMN_NAME+','
 FROM tempdb.INFORMATION_SCHEMA.COLUMNS 
 WHERE TABLE_NAME LIKE '%##TMPARSSALESPD%'
 AND COLUMN_NAME NOT IN ('SLS_QTY','STOCK_QTY','GIT_QTY','ORDERS_IN_HAND','ORDER_QTY')
 
 SET @ORDER='GROUP BY '
 SELECT @ORDER=COALESCE(@ORDER,'')+COLUMN_NAME+','
 FROM tempdb.INFORMATION_SCHEMA.COLUMNS 
 WHERE TABLE_NAME LIKE '%##TMPARSSALESPD%'
 AND COLUMN_NAME NOT IN ('SLS_QTY','STOCK_QTY','GIT_QTY','ORDERS_IN_HAND','ORDER_QTY')
 IF RIGHT(@ORDER,1)=',' set @ORDER=LEFT(@ORDER,LEN(@ORDER)-1)
 
 SELECT @CCMD=COALESCE(@CCMD,'')+'SUM('+COLUMN_NAME+') AS '+COLUMN_NAME+','
 FROM tempdb.INFORMATION_SCHEMA.COLUMNS 
 WHERE TABLE_NAME LIKE '%##TMPARSSALESPD%'
 AND COLUMN_NAME IN ('SLS_QTY','STOCK_QTY','GIT_QTY','ORDERS_IN_HAND','ORDER_QTY')
 IF RIGHT(@CCMD,1)=',' set @CCMD=LEFT(@CCMD,LEN(@CCMD)-1)
 
 DECLARE @MYSQL VARCHAR(MAX)=''
 SELECT @MYSQL=COALESCE(@MYSQL,'')+'UPDATE P SET '+COLUMN_NAME+'=(SELECT '+REPLACE(COLUMN_NAME,'_CODE','.')+COLUMN_NAME+' FROM '+REPLACE(COLUMN_NAME,'_CODE','')+' WHERE LTRIM(RTRIM(P.'+REPLACE(COLUMN_NAME,'CODE','NAME')+'))=LTRIM(RTRIM('+REPLACE(COLUMN_NAME,'_CODE','.')+REPLACE(COLUMN_NAME,'CODE','NAME')+')) AND '+REPLACE(COLUMN_NAME,'_CODE','')+'.inactive=0) FROM ##TMPARSSALESPD P;'
 FROM TEMPDB.INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME LIKE 'PARA%CODE' AND TABLE_NAME LIKE '%##TMPARSSALESPD%'
 EXEC(@MYSQL)
 
 DECLARE @MYGRP VARCHAR(MAX)='GROUP BY '
 SET @MYSQL='SELECT '
 SELECT @MYSQL=COALESCE(@MYSQL,'')+COLUMN_NAME+','
 ,@MYGRP=COALESCE(@MYGRP,'')+COLUMN_NAME+','
 FROM TEMPDB.INFORMATION_SCHEMA.COLUMNS 
 WHERE COLUMN_NAME NOT IN ('GIT_QTY','ORDER_QTY','ORDERS_IN_HAND','SLS_QTY','STOCK_QTY','ESTIMATED_SALES') AND TABLE_NAME LIKE '%##TMPARSSALESPD%'
 SET @MYSQL+='SUM(GIT_QTY)GIT_QTY,SUM(ORDER_QTY)ORDER_QTY,SUM(ORDERS_IN_HAND)ORDERS_IN_HAND,SUM(SLS_QTY)SLS_QTY,SUM(STOCK_QTY)STOCK_QTY,SUM(ESTIMATED_SALES)ESTIMATED_SALES'
 SET @MYGRP=LEFT(@MYGRP,LEN(@MYGRP)-1)
 SET @MYSQL=REPLACE(@MYSQL,'ROW_ID','NEWID() ROW_ID')
 SET @MYGRP=REPLACE(@MYGRP,',ROW_ID','')
 SET @MYSQL=@MYSQL+' FROM ##TMPARSSALESPD '+@MYGRP
 PRINT '1='+@MYSQL
 EXEC(@MYSQL)
 
 SET @CCMD=@CCMD+CHAR(13)+' FROM ##TMPARSSALESPD '+CHAR(13)+@ORDER
 PRINT '2='+@CCMD
 --EXEC(@CCMD)--RUNNNING 1 MYSQL ABOVE

 --EXEC('DROP TABLE '+@cTable_Name)        
 --EXECUTE SP3S_GENINDENTS_DATA_ARS @cFinYear='01119',@cTABLE_NAME='TEMP_LOCATION_ARS_126',@cSeason_From='',@cSeason_upto=''
 SET NOCOUNT OFF        
END