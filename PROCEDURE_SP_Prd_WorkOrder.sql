CREATE PROCEDURE SP_PRD_WORKORDER    
@NQUERYID NUMERIC(2,0),    
@CMEMOID VARCHAR(MAX),    
@CWHERE VARCHAR(MAX),    
@CFINYEAR VARCHAR(5),    
@NNAVMODE NUMERIC(2,0),    
@CDEPTCODE VARCHAR(10)='' ,
@FG_ARTICLE_NO VARCHAR(50)=''   
-- WITH ENCRYPTION
   
AS    
BEGIN      
      
DECLARE @CCMD NVARCHAR(4000)      
DECLARE @CRETCOLSTR NVARCHAR(4000)      
DECLARE  @INT INT          
        
IF @NQUERYID = 1      
GOTO LBLNAVIGATE      
      
ELSE      
IF @NQUERYID = 2      
GOTO LBLGETMASTERS      
      
ELSE      
IF @NQUERYID = 3      
GOTO LBLGETDETAILS      
      
ELSE      
IF @NQUERYID = 4      
GOTO LBLSUBDET      
      
ELSE      
IF @NQUERYID = 5      
GOTO LBLORDERMEMO      
      
ELSE      
IF @NQUERYID = 6      
GOTO LBLBOM      
      
ELSE      
IF @NQUERYID = 7      
GOTO LBLJOB      
      
ELSE      
IF @NQUERYID = 8      
GOTO LBLSPEC      
      
ELSE      
IF @NQUERYID = 9      
GOTO LBLARTICLESET      
      
ELSE      
IF @NQUERYID = 10      
GOTO LBLARTICLE      
      
ELSE      
IF @NQUERYID = 11      
GOTO LBLORDERLIST      
      
ELSE      
IF @NQUERYID = 12      
GOTO LBLORDERDETAIL      
      
ELSE      
IF @NQUERYID = 13      
GOTO LBLARTBOM      
      
ELSE      
IF @NQUERYID = 14      
GOTO LBLARTJOB      
      
ELSE      
IF @NQUERYID = 15      
GOTO LBLARTSPEC      
      
ELSE      
IF @NQUERYID = 16      
GOTO LBLRMARTICLE      
      
      
ELSE      
IF @NQUERYID = 17      
GOTO LBLSUBDETCROSS      
      
ELSE      
IF @NQUERYID = 19      
GOTO LBLRELEASEMEMO      
      
ELSE      
IF @NQUERYID = 20      
GOTO LBLLISTAGENCY      
      
         
ELSE        
IF @NQUERYID = 21        
GOTO LBLREFNO       
        
ELSE      
GOTO LAST      
      
LBLNAVIGATE:      
      
 EXECUTE SP_NAVIGATE 'PRD_WO_MST',@NNAVMODE,@CMEMOID,@CFINYEAR,'MEMO_NO','MEMO_DT','MEMO_ID',@CWHERE      
      
GOTO LAST      
      
LBLGETMASTERS:      
      
 SELECT T1.*, T2.USERNAME,T3.ARTICLE_NO AS ARTICLE_SET_NAME,
         ISNULL(T4.EMP_TITLE,'') + ' ' + ISNULL(T4.EMP_FNAME,'') + ' ' + ISNULL(T4.EMP_LNAME,'')  AS EMP_NAME       
         ,ISNULL(BO.DELIVERY_DT,T1.TARGET_DT) AS DELIVERY_DT ,LM.AC_NAME
         ,T6.EMP_NAME AS SALE_EMP_NAME   
 FROM PRD_WO_MST T1      
 JOIN USERS T2 ON T1.USER_CODE = T2.USER_CODE      
 JOIN ARTICLE T3 ON T1.ARTICLE_SET_CODE = T3.ARTICLE_CODE      
 LEFT OUTER JOIN EMP_MST T4 ON T1.EMP_CODE= T4.EMP_ID  
 --LEFT OUTER  JOIN WSL_ORDER_MST BO ON BO.REF_NO=T1.REF_NO 
 --LEFT OUTER  JOIN LM01106 LM ON  BO.AC_CODE=LM.AC_CODE 
 LEFT OUTER JOIN PRD_WO_ORDERS  T5 ON T1.MEMO_ID = T5.MEMO_ID   
 LEFT OUTER  JOIN WSL_ORDER_MST BO ON T5.ORDER_ID= BO.ORDER_ID 
 --LEFT OUTER JOIN BUYER_ORDER_MST BM ON BM.
 LEFT OUTER JOIN EMPLOYEE T6 ON T1.SALE_EMP_CODE= T6.EMP_CODE    
 LEFT OUTER  JOIN LM01106 LM ON T1.AC_CODE=LM.AC_CODE         
     
 WHERE T1.MEMO_ID = @CMEMOID      
      
GOTO LAST      
      
LBLGETDETAILS:      
      
       
 SELECT CAST(1 AS BIT) AS CHK, A.* ,B.ARTICLE_NO,C.SUB_SECTION_NAME ,D.SECTION_NAME,B.DT_CREATED,
 QUANTITY AS P_QTY
 FROM PRD_WO_DET A  
 JOIN
 (
  SELECT REF_ROW_ID ,SUM(QUANTITY) AS QUANTITY
  FROM PRD_WO_SUB_DET A
  GROUP BY REF_ROW_ID
 ) SUB_DET ON A.ROW_ID=SUB_DET.REF_ROW_ID
 JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE= B.ARTICLE_CODE       
 JOIN SECTIOND  C (NOLOCK) ON C.SUB_SECTION_CODE= B.SUB_SECTION_CODE       
 JOIN SECTIONM  D (NOLOCK) ON D.SECTION_CODE= C.SECTION_CODE    
 WHERE A.MEMO_ID = @CMEMOID      
 ORDER BY B.ARTICLE_NO,C.SUB_SECTION_NAME ,D.SECTION_NAME       
       
      
GOTO LAST      
      
      
      
LBLSUBDET:      
      
   SELECT A.*,D.ARTICLE_CODE,E.ARTICLE_NO,PARA1_NAME,PARA2_NAME       
   FROM PRD_WO_SUB_DET (NOLOCK) A      
   JOIN PARA1 B (NOLOCK) ON A.PARA1_CODE = B.PARA1_CODE       
   JOIN PARA2 C (NOLOCK) ON A.PARA2_CODE = C.PARA2_CODE       
   JOIN PRD_WO_DET D ON A.REF_ROW_ID = D.ROW_ID       
   JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE       
   WHERE D.MEMO_ID = @CMEMOID      
         
         
GOTO LAST      
      
      
      
LBLORDERMEMO:      
      
 SELECT * FROM PRD_WO_ORDERS  WHERE MEMO_ID = @CMEMOID      
      
GOTO LAST      
      
      
LBLBOM:      
      
 SELECT CAST(1 AS BIT) AS CHK, A.*,C.ARTICLE_NO,C.ARTICLE_NAME,D.UOM_NAME,(AVG_QTY*RATE) AS TOTALCOST ,      
  E.PARA1_NAME,C.DISCON,F.PARA2_NAME,DET.QUANTITY AS ORDER_QUANTITY ,
  @FG_ARTICLE_NO AS FG_ARTICLE_NO          
 FROM PRD_WO_ART_BOM A (NOLOCK)      
 JOIN  PRD_WO_DET B (NOLOCK) ON A.REF_ROW_ID = B.ROW_ID    
 JOIN
 (
  SELECT REF_ROW_ID,SUM(QUANTITY) AS QUANTITY 
  FROM PRD_WO_SUB_DET 
  GROUP BY REF_ROW_ID
 ) DET ON B.ROW_ID=DET.REF_ROW_ID
 JOIN ARTICLE C (NOLOCK) ON A.BOM_ARTICLE_CODE = C.ARTICLE_CODE       
 JOIN UOM D (NOLOCK) ON C.UOM_CODE = D.UOM_CODE       
 JOIN PARA1 E (NOLOCK) ON A.PARA1_CODE  = E.PARA1_CODE      
 JOIN PARA2 F (NOLOCK) ON A.PARA2_CODE  = F.PARA2_CODE              
 WHERE B.MEMO_ID = @CMEMOID      
 ORDER BY TS      
      
 GOTO LAST      
       
       
LBLJOB:      
      
 SELECT CAST(1 AS BIT) AS CHK, A.*,C.JOB_NAME,CAST(1 AS BIT) AS CHK,D.AGENCY_NAME,      
 (CASE WHEN JOB_THROUGH=0 THEN 'IN HOUSE' ELSE 'OUT SOURCE' END) AS THROUGH      
 FROM PRD_WO_ART_JOBS A (NOLOCK)      
    JOIN  PRD_WO_DET B (NOLOCK) ON A.REF_ROW_ID = B.ROW_ID       
    JOIN JOBS C (NOLOCK) ON A.JOB_CODE = C.JOB_CODE       
    LEFT OUTER JOIN PRD_AGENCY_MST D (NOLOCK) ON A.AGENCY_CODE = D.AGENCY_CODE         
 WHERE B.MEMO_ID = @CMEMOID      
 ORDER BY A.JOB_ORDER      
      
      
 GOTO LAST      
       
LBLSPEC:       
       
 SELECT A.*, C.SPECS_NAME      
 FROM PRD_WO_ARTICLE_SPECS A      
 JOIN PRD_WO_DET B ON A.REF_ROW_ID = B.ROW_ID       
 JOIN SPECS_MST C ON A.SPECS_CODE = C.SPECS_CODE       
 WHERE B.MEMO_ID = @CMEMOID      
        
 GOTO LAST      
      
LBLARTICLESET:      
         
    --SELECT DISTINCT ARTICLE_NO AS ARTICLE_SET_NAME ,A.ARTICLE_CODE AS ARTICLE_SET_CODE,DT_CREATED        
    --FROM ARTICLE A (NOLOCK)       
    --JOIN BUYER_ORDER_DET B (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE       
    --WHERE A.INACTIVE=0 AND ARTICLE_PRD_MODE IN(1,2) AND ARTICLE_TYPE=1      
    --AND ARTICLE_NO <>''       
                    
      
            
    SELECT DISTINCT ARTICLE_NO AS ARTICLE_SET_NAME ,A.ARTICLE_CODE AS ARTICLE_SET_CODE,DT_CREATED        
    FROM ARTICLE A (NOLOCK)       
    JOIN BUYER_ORDER_DET B (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE       
    WHERE A.INACTIVE=0 AND ARTICLE_PRD_MODE IN(2) AND ARTICLE_TYPE=1      
    AND ARTICLE_NO <>''        
          
      
GOTO LAST      
      
LBLARTICLE:      
       
 SELECT CAST(1 AS BIT) AS CHK, A.ARTICLE_CODE,A.ARTICLE_SET_CODE,A.ARTICLE_NO,C.SUB_SECTION_NAME ,
 D.SECTION_NAME,A.DT_CREATED        
 FROM ARTICLE A (NOLOCK)       
 JOIN SECTIOND  C (NOLOCK) ON C.SUB_SECTION_CODE= A.SUB_SECTION_CODE       
 JOIN SECTIONM  D (NOLOCK) ON D.SECTION_CODE= C.SECTION_CODE       
 WHERE ARTICLE_PRD_MODE IN (1,3) AND A.INACTIVE=0   AND A.ARTICLE_CODE <> ''  
 AND (A.ARTICLE_CODE = (CASE WHEN @CWHERE = '' THEN A.ARTICLE_CODE  ELSE @CWHERE END)
 OR A.ARTICLE_SET_CODE = (CASE WHEN @CWHERE = '' THEN A.ARTICLE_SET_CODE  ELSE @CWHERE END))
      
GOTO LAST      
      
LBLORDERLIST: 
       
  DECLARE @CQUERY NVARCHAR(MAX)      
  SET @CQUERY= N'       
   SELECT (CASE WHEN A.MEMO_TYPE=1 THEN ''BUYERS ORDER'' ELSE ''INHOUSE'' END) AS [TYPE],        
   A.ORDER_ID,A.ORDER_NO,A.ORDER_DT,A.DELIVERY_DT  ,        
        (CASE WHEN ISNULL(A.REF_NO,'''')='''' THEN A.ORDER_NO ELSE A.REF_NO END) AS REF_NO,B.ARTICLE_CODE ,ART.ARTICLE_NO,ART.ARTICLE_NAME,        
        C.AC_NAME,CONVERT(VARCHAR,A.ORDER_DT,105) AS ORDER_DT1,
         SUM(B.QUANTITY) AS  ORDER_QTY,
         SUM(ISNULL(WPS.QUANTITY,0)) AS DELIVER_QTY,
         CAST(SUM(ISNULL(UPC.ALLOCATE_QTY,0)) AS NUMERIC(10,2)) AS ALLOCATE_QTY,
         CAST(SUM(B.QUANTITY)-(SUM(ISNULL(WPS.QUANTITY,0))+SUM(ISNULL(UPC.ALLOCATE_QTY,0))) AS NUMERIC(10,2)) AS QUANTITY ,    
        ISNULL(A.EMP_CODE,'''') AS EMP_CODE     
         ,ISNULL(T4.REF_ID,'''') AS EMP_REF_ID       
        ,ISNULL(T4.EMP_TITLE,'''') + '' '' + ISNULL(T4.EMP_FNAME,'''') + '' '' + ISNULL(T4.EMP_LNAME,'''')  AS EMP_NAME
        ,A.SALE_EMP_CODE
        ,A.AC_CODE
        ,ISNULL(T5.EMP_NAME,'''')  AS SALE_EMP_NAME     
 FROM BUYER_ORDER_MST A (NOLOCK)        
 JOIN BUYER_ORDER_DET B (NOLOCK) ON A.ORDER_ID = B.ORDER_ID   
 LEFT OUTER JOIN
 (
  SELECT B.AC_CODE, A.ORDER_ID,A.PACKSLIP_ARTICLE_CODE,
         A.PACKSLIP_PARA1_CODE,A.PACKSLIP_PARA2_CODE,
         SUM(A.QUANTITY) AS QUANTITY
  FROM WPS_DET A
  JOIN WPS_MST B ON A.PS_ID=B.PS_ID
  WHERE B.CANCELLED=0
  GROUP BY B.AC_CODE,A.ORDER_ID,A.PACKSLIP_ARTICLE_CODE,
  A.PACKSLIP_PARA1_CODE,A.PACKSLIP_PARA2_CODE
 ) WPS ON WPS.ORDER_ID=A.ORDER_ID    
 AND WPS.AC_CODE=A.AC_CODE
 AND WPS.PACKSLIP_ARTICLE_CODE=B.ARTICLE_CODE
 AND WPS.PACKSLIP_PARA1_CODE=B.PARA1_CODE
 AND WPS.PACKSLIP_PARA2_CODE=B.PARA2_CODE  
 LEFT OUTER JOIN
 (
   SELECT A.ORDER_ID,B.ARTICLE_SET_CODE,A.PARA1_CODE,A.PARA2_CODE,
          COUNT(*) AS   ALLOCATE_QTY
   FROM PRD_UPCPMT A
   JOIN PRD_WO_MST B ON A.WO_ID=B.MEMO_ID
   WHERE ISNULL(ORDER_ID,'''')<>'''' AND B.CANCELLED=0
   GROUP BY A.ORDER_ID,B.ARTICLE_SET_CODE,A.PARA1_CODE,A.PARA2_CODE
 
 ) UPC ON UPC.ORDER_ID=A.ORDER_ID
   AND UPC.ARTICLE_SET_CODE=B.ARTICLE_CODE
   AND UPC.PARA1_CODE=B.PARA1_CODE
   AND UPC.PARA2_CODE=B.PARA2_CODE 
 JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=B.ARTICLE_CODE        
 JOIN LMV01106 C (NOLOCK) ON A.AC_CODE = C.AC_CODE      
 LEFT OUTER JOIN EMP_MST T4 ON A.EMP_CODE= T4.EMP_ID 
 LEFT OUTER JOIN EMPLOYEE T5 ON A.SALE_EMP_CODE= T5.EMP_CODE      
 LEFT OUTER JOIN  (    
   SELECT A.ORDER_ID,A.MEMO_ID,B.ARTICLE_CODE,Q.PARA1_CODE,Q.PARA2_CODE,     
 B.QUANTITY, Q.QUANTITY AS PRD_QUANTITY     
 FROM  (SELECT DISTINCT * FROM PRD_WO_ORDERS) A     
 JOIN PRD_WO_MST C ON C.MEMO_ID=A.MEMO_ID     
 JOIN PRD_WO_DET P ON C.MEMO_ID=P.MEMO_ID     
 JOIN PRD_WO_SUB_DET Q ON P.ROW_ID =Q.REF_ROW_ID     
 JOIN BUYER_ORDER_DET B ON A.ORDER_ID=B.ORDER_ID     
 AND B.PARA1_CODE = Q.PARA1_CODE     
 AND B.PARA2_CODE = Q.PARA2_CODE     
 AND B.ARTICLE_CODE = C.ARTICLE_SET_CODE     
 JOIN BUYER_ORDER_MST M ON M.ORDER_ID=B.ORDER_ID     
 WHERE C.CANCELLED=0 '      
   IF ISNULL(@CWHERE,'')<>''      
   SET @CQUERY=@CQUERY+ N' AND B.ARTICLE_CODE= '''+@CWHERE +''' '  
        
  SET @CQUERY=@CQUERY+ N' ) D ON A.ORDER_ID = D.ORDER_ID   AND B.PARA1_CODE = D.PARA1_CODE AND B.PARA2_CODE = D.PARA2_CODE  AND B.ARTICLE_CODE=D.ARTICLE_CODE  
 WHERE D.ORDER_ID  IS NULL AND A.CANCELLED=0  '
       
 IF ISNULL(@CMEMOID,'')<>''      
  SET @CQUERY=@CQUERY+ N' AND (A.REF_NO = ( CASE WHEN A.REF_NO = '''' THEN '''' ELSE ''' + @CMEMOID + ''' END ))'      
 ELSE 
	BEGIN
		SET @CQUERY=@CQUERY+ N' AND (A.REF_NO  IN 
		( 
			SELECT A.REF_NO  
			FROM BUYER_ORDER_MST A (NOLOCK)        
			JOIN BUYER_ORDER_DET B (NOLOCK) ON A.ORDER_ID = B.ORDER_ID   
		)) '
	END   
       
 IF ISNULL(@CWHERE,'')<>''      
	SET @CQUERY=@CQUERY+ N' AND   (B.ARTICLE_CODE = '''+ @CWHERE +''' ) '      
 ELSE 
	BEGIN
		SET @CQUERY=@CQUERY+ N' AND   (B.ARTICLE_CODE IN 
		( 
			SELECT A.ARTICLE_CODE FROM ARTICLE A (NOLOCK)       
			WHERE   A.INACTIVE=0   AND A.ARTICLE_CODE <> '''' --AND ARTICLE_PRD_MODE IN (1,3)
		)) '
	END       
       
  SET @CQUERY=@CQUERY+ N' GROUP BY A.MEMO_TYPE,A.ORDER_ID,A.ORDER_NO,A.ORDER_DT,A.REF_NO,C.AC_NAME,B.ARTICLE_CODE , ART.ARTICLE_NO,ART.ARTICLE_NAME ,A.DELIVERY_DT ,A.EMP_CODE,T4.EMP_TITLE,T4.EMP_FNAME,T4.EMP_LNAME  , T4.REF_ID ,A.SALE_EMP_CODE,T5.EMP_NAME,A.AC_CODE 
  HAVING SUM(B.QUANTITY)-(SUM(ISNULL(WPS.QUANTITY,0))+SUM(ISNULL(UPC.ALLOCATE_QTY,0))) >0    
 ORDER BY ORDER_ID,ORDER_NO,ORDER_DT,AC_NAME  '      
        
  PRINT @CQUERY      
  EXEC SP_EXECUTESQL @CQUERY      
GOTO LAST     
    
      
LBLORDERDETAIL:      
  IF OBJECT_ID('TEMPDB..##TEMP')IS NOT NULL   
 DROP TABLE ##TEMP       
  DECLARE @CCMD1 NVARCHAR(MAX)    
SET @CCMD1 =N'       
 SELECT B.TS, B.ORDER_ID, PARA1.PARA1_CODE,PARA1.PARA1_NAME,PARA2.PARA2_NAME,PARA2_ORDER,A.ARTICLE_CODE,        
 SUM(A.QUANTITY)-(SUM(ISNULL(WPS.QUANTITY,0))+SUM(ISNULL(UPC.ALLOCATE_QTY,0))) AS QTY ,
 SUM(ISNULL(UPC.ALLOCATE_QTY,0)) AS ALLOCATE_QTY,
 (CASE WHEN SUM(ISNULL(PRD_QTY,0)) = 0 THEN SUM(A.QUANTITY) ELSE SUM(ISNULL(PRD_QUANTITY,0)) END)-(SUM(ISNULL(WPS.QUANTITY,0))+SUM(ISNULL(UPC.ALLOCATE_QTY,0))) AS [PRD_QTY]         
 INTO ##TEMP        
 FROM BUYER_ORDER_DET A         
 JOIN BUYER_ORDER_MST B ON A.ORDER_ID = B.ORDER_ID  
  LEFT OUTER JOIN
 (
  SELECT B.AC_CODE, A.ORDER_ID,A.PACKSLIP_ARTICLE_CODE,
         A.PACKSLIP_PARA1_CODE,A.PACKSLIP_PARA2_CODE,
         SUM(A.QUANTITY) AS QUANTITY
  FROM WPS_DET A
  JOIN WPS_MST B ON A.PS_ID=B.PS_ID
  WHERE B.CANCELLED=0
  GROUP BY B.AC_CODE,A.ORDER_ID,A.PACKSLIP_ARTICLE_CODE,
  A.PACKSLIP_PARA1_CODE,A.PACKSLIP_PARA2_CODE
 ) WPS ON WPS.ORDER_ID=A.ORDER_ID    
 AND WPS.AC_CODE=B.AC_CODE
 AND WPS.PACKSLIP_ARTICLE_CODE=A.ARTICLE_CODE
 AND WPS.PACKSLIP_PARA1_CODE=A.PARA1_CODE
 AND WPS.PACKSLIP_PARA2_CODE=A.PARA2_CODE 
 LEFT OUTER JOIN
 (
   SELECT A.ORDER_ID,B.ARTICLE_SET_CODE,A.PARA1_CODE,A.PARA2_CODE,
          SUM(QUANTITY_IN_STOCK) AS   ALLOCATE_QTY
   FROM PRD_UPCPMT A
   JOIN PRD_WO_MST B ON A.WO_ID=B.MEMO_ID
   WHERE ISNULL(ORDER_ID,'''')<>'''' AND B.CANCELLED=0
   GROUP BY A.ORDER_ID,B.ARTICLE_SET_CODE,A.PARA1_CODE,A.PARA2_CODE
 
 ) UPC ON UPC.ORDER_ID=A.ORDER_ID
   AND UPC.ARTICLE_SET_CODE=A.ARTICLE_CODE
   AND UPC.PARA1_CODE=A.PARA1_CODE
   AND UPC.PARA2_CODE=A.PARA2_CODE         
 JOIN PARA1 ON A.PARA1_CODE= PARA1.PARA1_CODE         
 JOIN PARA2 ON A.PARA2_CODE= PARA2.PARA2_CODE       
 LEFT OUTER JOIN      
       
 ( SELECT A.ORDER_ID,A.MEMO_ID,B.ARTICLE_CODE,Q.PARA1_CODE,Q.PARA2_CODE,     
 B.QUANTITY, Q.QUANTITY AS PRD_QUANTITY,Q.PRD_QTY     
 FROM  (SELECT DISTINCT * FROM PRD_WO_ORDERS) A     
 JOIN PRD_WO_MST C ON C.MEMO_ID=A.MEMO_ID     
 JOIN PRD_WO_DET P ON C.MEMO_ID=P.MEMO_ID     
 JOIN PRD_WO_SUB_DET Q ON P.ROW_ID =Q.REF_ROW_ID     
 JOIN BUYER_ORDER_DET B ON A.ORDER_ID=B.ORDER_ID     
 AND B.PARA1_CODE = Q.PARA1_CODE     
 AND B.PARA2_CODE = Q.PARA2_CODE     
 AND B.ARTICLE_CODE = C.ARTICLE_SET_CODE     
 JOIN BUYER_ORDER_MST M ON M.ORDER_ID=B.ORDER_ID     
 WHERE C.CANCELLED=0 '  
   
 IF ISNULL(@CWHERE ,'')<>''    
 SET @CCMD1=@CCMD1+ N' AND B.ARTICLE_CODE= '''+@CWHERE+''' '
 ELSE 
	BEGIN
		SET @CQUERY=@CQUERY+ N' AND   (B.ARTICLE_CODE IN 
		( 
			SELECT A.ARTICLE_CODE FROM ARTICLE A (NOLOCK)       
			WHERE A.INACTIVE=0   AND A.ARTICLE_CODE <> '''' --AND ARTICLE_PRD_MODE IN (1,3)
		)) '
	END   
 
 IF ISNULL(@CMEMOID ,'')<>''
 SET @CCMD1=@CCMD1+ N'AND M.REF_NO = (CASE WHEN M.REF_NO = '''' THEN '''' ELSE '''+@CMEMOID+''' END )'    
 ELSE 
	BEGIN
		SET @CQUERY=@CQUERY+ N' AND (M.REF_NO  IN 
		( 
			SELECT A.REF_NO  
			FROM BUYER_ORDER_MST A (NOLOCK)        
			JOIN BUYER_ORDER_DET B (NOLOCK) ON A.ORDER_ID = B.ORDER_ID   
		)) '
	END   
    
 SET @CCMD1=@CCMD1+ N'     
  )  D ON A.ORDER_ID = D.ORDER_ID       
 AND A.PARA1_CODE = D.PARA1_CODE     
 AND A.PARA2_CODE = D.PARA2_CODE     
 AND A.ARTICLE_CODE = D.ARTICLE_CODE     
 WHERE D.ORDER_ID  IS NULL AND B.CANCELLED=0 '    
  IF ISNULL(@CWHERE ,'')<>''    
   SET @CCMD1=@CCMD1+ N' AND A.ARTICLE_CODE= '''+@CWHERE+'''   '   
   ELSE 
	BEGIN
		SET @CQUERY=@CQUERY+ N' AND   (A.ARTICLE_CODE IN 
		( 
			SELECT A.ARTICLE_CODE FROM ARTICLE A (NOLOCK)       
			WHERE  A.INACTIVE=0   AND A.ARTICLE_CODE <> ''''  --AND ARTICLE_PRD_MODE IN (1,3)
		)) '
	END   
	 
  IF ISNULL(@CMEMOID ,'')<>''    
   SET @CCMD1=@CCMD1+ N' AND B.REF_NO = (CASE WHEN B.REF_NO = '''' THEN '''' ELSE '''+@CMEMOID+''' END )'      
   BEGIN
		SET @CQUERY=@CQUERY+ N' AND (B.REF_NO  IN 
		( 
			SELECT A.REF_NO  
			FROM BUYER_ORDER_MST A (NOLOCK)        
			JOIN BUYER_ORDER_DET B (NOLOCK) ON A.ORDER_ID = B.ORDER_ID   
		)) '
	END     
 SET @CCMD1=@CCMD1+ N' GROUP BY B.TS,B.ORDER_ID,PARA1.PARA1_CODE,PARA1_NAME,PARA2_NAME,PARA2_ORDER,A.ARTICLE_CODE '    
     
   PRINT @CCMD1    
  EXEC SP_EXECUTESQL @CCMD1    
  SELECT @INT = COUNT(*) FROM ##TEMP        
 IF (@INT) >0        
 BEGIN       
  EXEC CROSSTABSTR  '##TEMP', 'PARA2_NAME', 'PARA2_ORDER', 'QTY', '', '', @CRETCOLSTR OUTPUT          
  SET @CCMD = N'SELECT CAST(0 AS BIT) AS CHK ,ORDER_ID,ARTICLE_CODE,PARA1_CODE,PARA1_NAME AS COLOR        
  , ' + @CRETCOLSTR + ',SUM(QTY) AS [TOTAL QTY],PRD_QTY        
  FROM ##TEMP        
  GROUP BY TS,ORDER_ID,ARTICLE_CODE,PARA1_CODE,PARA1_NAME ,PRD_QTY       
  ORDER BY ORDER_ID,TS,ARTICLE_CODE,PARA1_NAME'         
      
  EXEC SP_EXECUTESQL @CCMD        
      
   END      
      
GOTO LAST     
      
      
LBLARTBOM:      
      
    SELECT D.ARTICLE_CODE,BOM_ARTICLE_CODE,AVG_QTY,RATE,B.ARTICLE_NAME ,C.UOM_NAME,A.USES ,      
          (AVG_QTY*RATE) AS TOTALCOST, B.ARTICLE_NO ,A.BOM_PARA1_CODE,E.PARA1_NAME,B.DISCON,      
          A.BOM_PARA2_CODE,F.PARA2_NAME,A.ADD_AVG_QTY           
    FROM ART_BOM A      
    JOIN ARTICLE B ON A.BOM_ARTICLE_CODE = B.ARTICLE_CODE      
    JOIN UOM C ON B.UOM_CODE = C.UOM_CODE       
    JOIN ARTICLE D ON A.ARTICLE_CODE = D.ARTICLE_CODE      
    JOIN PARA1 E ON A.BOM_PARA1_CODE = E.PARA1_CODE       
    JOIN PARA2 F ON A.BOM_PARA2_CODE = F.PARA2_CODE       
    WHERE D.ARTICLE_CODE= @CWHERE      
          
    GOTO LAST      
          
          
LBLARTJOB:      
      
    SELECT A.JOB_CODE,A.JOB_RATE,B.PER_DAYS,A.DAYS,A.HOURS,B.JOB_NAME,A.JOB_ORDER,A.ARTICLE_CODE        
 FROM ART_JOBS A      
 JOIN JOBS B ON A.JOB_CODE= B.JOB_CODE      
 JOIN ARTICLE C ON A.ARTICLE_CODE= C.ARTICLE_CODE       
    WHERE C.ARTICLE_CODE= @CWHERE      
    ORDER BY A.JOB_ORDER      
    GOTO LAST      
      
LBLARTSPEC:      
      
    SELECT A.ARTICLE_CODE,A.SPECS_CODE,B.SPECS_NAME,A.SPECS_VALUE       
    FROM ARTICLE_SPECS  A      
    JOIN SPECS_MST B ON A.SPECS_CODE = B.SPECS_CODE       
    WHERE A.ARTICLE_CODE= @CWHERE      
          
    GOTO LAST      
          
          
          
 LBLRMARTICLE:      
       
       
     SELECT A.ARTICLE_CODE,ARTICLE_NO,ARTICLE_NAME,PURCHASE_PRICE ,UOM_NAME,A.DISCON    
     FROM ARTICLE A (NOLOCK)      
     JOIN UOM B (NOLOCK) ON A.UOM_CODE =B.UOM_CODE       
     WHERE A.ARTICLE_TYPE =2 AND A.INACTIVE =0      
       
     GOTO LAST      
           
           
           
 LBLSUBDETCROSS:          
      
           
         
 IF OBJECT_ID('TEMPDB..#TEMPC')IS NOT NULL        
 DROP TABLE #TEMPC       
      
 SELECT C.ARTICLE_CODE,C.ARTICLE_NO,D.PARA1_CODE,E.PARA2_CODE,D.PARA1_NAME,      
            E.PARA2_NAME,E.PARA2_ORDER, SUM(QUANTITY) AS QTY ,
            (CASE WHEN ISNULL(SUM(PRD_QTY),0) = 0 THEN SUM(QUANTITY) ELSE SUM(PRD_QTY) END) AS PRD_QTY 
    INTO #TEMPC       
 FROM PRD_WO_SUB_DET A        
 JOIN PRD_WO_DET B ON A.REF_ROW_ID= B.ROW_ID      
 JOIN ARTICLE C ON B.ARTICLE_CODE= C.ARTICLE_CODE      
 JOIN PARA1 D ON A.PARA1_CODE= D.PARA1_CODE      
 JOIN PARA2 E ON A.PARA2_CODE= E.PARA2_CODE      
 WHERE B.MEMO_ID= @CMEMOID       
 GROUP BY  C.ARTICLE_CODE,C.ARTICLE_NO,D.PARA1_CODE,E.PARA2_CODE,D.PARA1_NAME,      
     E.PARA2_NAME,E.PARA2_ORDER      
 ORDER BY C.ARTICLE_NO,D.PARA1_NAME,E.PARA2_ORDER,E.PARA2_NAME      
      
       
 SELECT @INT = COUNT(*) FROM #TEMPC        
      
 IF (@INT) >0        
 BEGIN        
       
  EXEC CROSSTABSTR  '#TEMPC', 'PARA2_NAME', 'PARA2_ORDER', 'QTY', '', '', @CRETCOLSTR OUTPUT          
  SET @CCMD = N'SELECT ARTICLE_CODE,ARTICLE_NO,PARA1_CODE,PARA1_NAME AS COLOR       
  , ' + @CRETCOLSTR + ',SUM(QTY) AS [TOTAL_QTY],(CASE WHEN ISNULL(SUM(PRD_QTY),0) = 0 THEN SUM(QTY) ELSE SUM(PRD_QTY) END) AS [PRD_QTY]          
  FROM #TEMPC        
  GROUP BY ARTICLE_CODE,ARTICLE_NO,PARA1_CODE,PARA1_NAME       
  ORDER BY PARA1_NAME'         
      
  EXEC SP_EXECUTESQL @CCMD        
      
   END      
      
 GOTO LAST      
      
      
LBLRELEASEMEMO:      
      
 BEGIN TRANSACTION      
       
  UPDATE PRD_WO_MST SET MARK_AS_COMPLETED = @NNAVMODE WHERE MEMO_ID = @CMEMOID      
       
 COMMIT TRANSACTION      
      
GOTO LAST      
      
      
LBLLISTAGENCY:      
      
  SELECT A.AGENCY_NAME,A.AGENCY_CODE      
  FROM PRD_AGENCY_MST A (NOLOCK)      
  JOIN AGENCY_JOBS B (NOLOCK) ON A.AGENCY_CODE = B.AGENCY_CODE       
  JOIN JOBS C (NOLOCK) ON B.JOB_CODE = C.JOB_CODE       
  WHERE C.JOB_CODE = @CWHERE      
        
        
GOTO LAST      
     
     
      
  LBLREFNO:    
  SELECT DISTINCT A.REF_NO,C.ARTICLE_NO,B.ARTICLE_CODE FROM BUYER_ORDER_MST A    
  JOIN BUYER_ORDER_DET B ON A.ORDER_ID=B.ORDER_ID    
  JOIN ARTICLE C ON C.ARTICLE_CODE=B.ARTICLE_CODE  AND C.ARTICLE_PRD_MODE=2  
  WHERE A.CANCELLED=0    
  AND A.REF_NO NOT IN (SELECT REF_NO FROM PRD_WO_MST WHERE CANCELLED=0)    
  GOTO LAST    
       
LAST:      
END
