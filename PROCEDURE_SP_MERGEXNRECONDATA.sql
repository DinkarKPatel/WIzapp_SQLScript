create PROCEDURE SP_MERGEXNRECONDATA
@NMODE INT=1
--WITH ENCRYPTION
AS
BEGIN
--(dinkar) Replace  left(memoid,2) to Location_code 
	DECLARE @CTARGETDB VARCHAR(200),@CCURLOCID VARCHAR(5),@CHOLOCID VARCHAR(5),@BPROCEED BIT,
			@CCMD NVARCHAR(MAX),@NSTEP INT,@CDISTINCTSTR VARCHAR(50),@CTEMPTABLENAME VARCHAR(200),@CCHILDPARANAME VARCHAR(200),
			@CTARGETTABLENAME VARCHAR(200),@CSENDTABLENAME VARCHAR(200),@CSENDTEMPTABLENAME VARCHAR(500),@CERRORMSG VARCHAR(MAX),
			@CPARENTTABLENAME VARCHAR(200),@CPARENTPARANAME VARCHAR(200),@CWHERECLAUSE VARCHAR(200),@CMEMODTCOL VARCHAR(100),
			@CJOINSTR VARCHAR(MAX),@BFIRST BIT,@CTABLENAME VARCHAR(200),@CSENDCOLS VARCHAR(2000),@CXNTYPE VARCHAR(10),
			@CMASTERTABLENAME VARCHAR(200),@CADDWHERECLAUSE VARCHAR(1000),@CCMDSTR VARCHAR(MAX),@CSEARCHSTR VARCHAR(MAX),
			@CREPLACESTR VARCHAR(MAX),@CTARGETDBNAME VARCHAR(500),@CBACKUPFILE VARCHAR(1000),@BACKUP_DATAFILE VARCHAR(100),
			@BACKUP_LOGFILE VARCHAR(100),@CBACKUPPATH VARCHAR(MAX),@RESTORE_DATAFILE VARCHAR(500),@RESTORE_LOGFILE VARCHAR(500),
			@CSOURCEDBNAME VARCHAR(200),@CSOURCEDB VARCHAR(500),@CKEYFIELD1 VARCHAR(100),@CKEYFIELD2 VARCHAR(100),
			@CKEYFIELD3 VARCHAR(100),@BUPDMERGESTATUS BIT,@CDEPTID CHAR(4),@BALWAYSUPDATE BIT,@CFILEPATH VARCHAR(500),
			@BDONOTSENDACK BIT,@CSOURCETABLENAME VARCHAR(200),@CDEPTIDCOL VARCHAR(100),@CXNDTCOL VARCHAR(200),@CRETERRORMSG VARCHAR(MAX),
			@CFILTERCONDITION VARCHAR(1000),@BSENDACK BIT,@BSKIP BIT,@CCURDBNAME VARCHAR(200),@CCHILDTABLENAME VARCHAR(200),
			@CREFTABLENAME VARCHAR(200),@CREFKEYFIELD VARCHAR(100),@CREFKEYFIELDVAL VARCHAR(200),@BMERGINGSTARTED BIT,
			@NRECCOUNT INT,@NSOURCETABLERECCOUNT INT
			
	
	SELECT @CRETERRORMSG='',@BMERGINGSTARTED=0
	
	SELECT TOP 1 @CCURLOCID=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='LOCATION_ID'
	SELECT TOP 1 @CHOLOCID=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='HO_LOCATION_ID'
	
LBLSTART:
	
	BEGIN TRY
		
		SET @BSENDACK=0
		SET @NSTEP=10
		
		SET @CERRORMSG=''
		
		IF @CCURLOCID<>@CHOLOCID
			GOTO END_PROC
		
		
		SET @BDONOTSENDACK=0
			
		DECLARE @TRETMSG TABLE (MEMO_ID VARCHAR(200),ERRMSG VARCHAR(MAX),SENDACK BIT) 
		
		SET @BPROCEED=0
			
		IF EXISTS (SELECT TOP 1 [DB_NAME] FROM XNS_BACKUP_INFO (NOLOCK) WHERE (MERGE_STATUS=1 AND @NMODE=1) OR (MERGE_STATUS=3 AND @NMODE=2))
			SET @BPROCEED=1
		
		IF @BPROCEED=0
			GOTO END_PROC
		
		IF @NMODE=2
			GOTO LBLMERGEDATA
			
		SET @NSTEP=20
		

		IF CURSOR_STATUS('GLOBAL','MERGEDTRCUR') IN (0,1)
		BEGIN
			CLOSE MERGEDTRCUR
			DEALLOCATE MERGEDTRCUR
		END
		
		DECLARE MERGEDTRCUR CURSOR FOR SELECT [DB_NAME],FILE_PATH-- SUBSTRING(FILE_PATH,1,CHARINDEX([DB_NAME],FILE_PATH)-1)
		FROM XNS_BACKUP_INFO
		WHERE LEFT([DB_NAME],14)='WIZAPP3S_RECON' AND MERGE_STATUS=1
		
		SET @NSTEP=30
		
		OPEN MERGEDTRCUR
		FETCH NEXT FROM MERGEDTRCUR INTO @CTARGETDBNAME,@CBACKUPPATH
		WHILE @@FETCH_STATUS=0
		BEGIN
			
			IF EXISTS (SELECT TOP 1 NAME FROM SYS.DATABASES (NOLOCK) WHERE NAME=@CTARGETDBNAME)
			BEGIN
				SET @NSTEP=32
				EXEC KILLCONNECTIONSTODB @CTARGETDBNAME
				
				SET @NSTEP=34
				SET @CCMD=N'DROP DATABASE '+@CTARGETDBNAME
				EXEC SP_EXECUTESQL @CCMD 
			END	
			
			SET @NSTEP=36
			DECLARE @CDBNAME VARCHAR(100)
			SET @CDBNAME=DB_NAME()

			SELECT @CFILEPATH=PHYSICAL_NAME FROM SYS.MASTER_FILES WHERE DATABASE_ID=DB_ID(@CDBNAME) AND TYPE_DESC='ROWS'
			SET @CFILEPATH=REVERSE(RIGHT(REVERSE(@CFILEPATH),(LEN(@CFILEPATH)-CHARINDEX('\',REVERSE(@CFILEPATH),1))+1))
							
				
			SET @NSTEP=40
			SET @CCMD=N' CREATE DATABASE ' + @CTARGETDBNAME + ' ON '+
			' ( NAME = ' + @CTARGETDBNAME + ', ' + 
			'  FILENAME = ''' + @CFILEPATH + '\' + @CTARGETDBNAME + '.MDF'' ) ' + 
			' LOG ON ' + 
			' ( NAME = ' + @CTARGETDBNAME + '_LOG, ' + 
			'  FILENAME = ''' + @CFILEPATH + '\' + @CTARGETDBNAME + '_LOG.LDF'' )'
			PRINT @CCMD

			EXEC SP_EXECUTESQL @CCMD
			
			SET @NSTEP=50		
			BEGIN TRANSACTION
			
			UPDATE XNS_BACKUP_INFO SET MERGE_STATUS=2  WHERE [DB_NAME]=@CTARGETDBNAME
			
			COMMIT TRANSACTION
			
			
			FETCH NEXT FROM MERGEDTRCUR INTO @CTARGETDBNAME,@CBACKUPPATH
		END
		
		CLOSE MERGEDTRCUR
		DEALLOCATE MERGEDTRCUR

		GOTO END_PROC

LBLMERGEDATA:
		

		DECLARE @TTABLELIST TABLE (TABLENAME VARCHAR(200),RECCOUNT INT)
		
		IF CURSOR_STATUS('GLOBAL','XNSTABLELISTCUR') IN (0,1)
		BEGIN
			CLOSE XNSTABLELISTCUR
			DEALLOCATE XNSTABLELISTCUR
		END

		IF CURSOR_STATUS('GLOBAL','MERGEDTRCUR') IN (0,1)
		BEGIN
			CLOSE MERGEDTRCUR
			DEALLOCATE MERGEDTRCUR
		END
				
		SET @CTARGETDB=DB_NAME()+'_WIZCOM.DBO.'
		
		SET @NSTEP=55		
		DECLARE MERGEDTRCUR CURSOR FOR SELECT [DB_NAME],DEPT_ID FROM XNS_BACKUP_INFO
		WHERE LEFT([DB_NAME],14)='WIZAPP3S_RECON' AND MERGE_STATUS=3
		
		OPEN MERGEDTRCUR 
		
		FETCH NEXT FROM MERGEDTRCUR INTO @CSOURCEDBNAME,@CDEPTID
		WHILE @@FETCH_STATUS=0
		BEGIN
			
			SET @BMERGINGSTARTED=1
			SET @NSTEP=60
			SET @CSOURCEDB='WIZAPP3S_RECON_'+@CDEPTID+'.DBO.'
			
			SET @CERRORMSG=''
			
			SET @CCMD=N'IF EXISTS (SELECT TOP 1 NAME FROM '+@CSOURCEDB+'SYSOBJECTS (NOLOCK) WHERE NAME=''RECONXNSINFO'')
							SET @BPROCEED=1
						ELSE
							SET @BPROCEED=0'
			
			EXEC SP_EXECUTESQL @CCMD,N'@BPROCEED BIT OUTPUT',@BPROCEED OUTPUT

			IF @BPROCEED=0
			BEGIN
				SET @CERRORMSG='AUTO RECONCILIATION CHECKSUM TABLE NOT FOUND...PLEASE GET DATA RESENT'
			    GOTO LBLNEXTLOC
			END
			
			IF @BPROCEED=1
			BEGIN

				SET @CCMD=N'IF EXISTS (SELECT TOP 1 NAME FROM '+@CSOURCEDB+'SYSOBJECTS (NOLOCK) WHERE NAME=''XNRECON_LOG'')
								SET @BPROCEED=1
							ELSE
								SET @BPROCEED=0'
				
				EXEC SP_EXECUTESQL @CCMD,N'@BPROCEED BIT OUTPUT',@BPROCEED OUTPUT
				
				IF @BPROCEED=0
				BEGIN
					SET @CERRORMSG='AUTO RECONCILIATION MARKING TABLE NOT FOUND :'+@CTABLENAME+'...PLEASE GET DATA RESENT'
				    GOTO LBLNEXTLOC
				END
				
				DELETE FROM @TTABLELIST		
				
				
				SET @NSTEP=65
				SET @CCMD=N'SELECT TABLENAME,RECCOUNT FROM '+@CSOURCEDB+'RECONXNSINFO'
				
				SET @CCMDSTR=@CCMD	
				INSERT @TTABLELIST
				EXEC SP_EXECUTESQL @CCMD

				DECLARE XNSTABLELISTCUR CURSOR FOR SELECT TABLENAME,RECCOUNT FROM @TTABLELIST
				OPEN XNSTABLELISTCUR
				
				FETCH NEXT FROM XNSTABLELISTCUR INTO @CTABLENAME,@NRECCOUNT
				WHILE @@FETCH_STATUS=0
				BEGIN
					SET @NSTEP=70
					SET @CCMD=N'IF EXISTS (SELECT TOP 1 NAME FROM '+@CSOURCEDB+'SYSOBJECTS (NOLOCK) 
								WHERE NAME='''+@CTABLENAME+''')
									SET @BPROCEED=1
								ELSE
									SET @BPROCEED=0'
					
					EXEC SP_EXECUTESQL @CCMD,N'@BPROCEED BIT OUTPUT',@BPROCEED OUTPUT
					
					IF @BPROCEED=1
					BEGIN
						SET @NSTEP=75
						SET @NSOURCETABLERECCOUNT=0
						SET @CCMD=N'SELECT @NSOURCETABLERECCOUNT=COUNT(*) FROM '+@CSOURCEDB+@CTABLENAME
						EXEC SP_EXECUTESQL @CCMD,N'@NSOURCETABLERECCOUNT INT OUTPUT',@NSOURCETABLERECCOUNT OUTPUT
						
						IF ISNULL(@NSOURCETABLERECCOUNT,0)<>@NRECCOUNT
						BEGIN
							SET @NSTEP=77
							SET @BPROCEED=0
							SET @CERRORMSG='EXTRACTED NO. OF RECORDS  ('+LTRIM(RTRIM(STR(@NSOURCETABLERECCOUNT)))+')
											FOR THE TABLE :'+@CTABLENAME+' IS NOT EQUAL TO NO. OF SENT RECORDS ('+
										    LTRIM(RTRIM(STR(@NRECCOUNT)))+')....PLEASE GET DATA RESENT('+@CCMDSTR+')'
							GOTO LBLNEXTLOC			    
						END
					END
					ELSE
					BEGIN
						SET @CERRORMSG='SOURCE DATA NOT FOUND FOR TABLE :'+@CTABLENAME+'...PLEASE GET DATA RESENT'
						GOTO LBLNEXTLOC
					END
					
					FETCH NEXT FROM XNSTABLELISTCUR INTO @CTABLENAME,@NRECCOUNT					
				END
				
				CLOSE XNSTABLELISTCUR
				DEALLOCATE XNSTABLELISTCUR
			END
			
			IF @CERRORMSG<>''
				INSERT @TRETMSG (MEMO_ID,ERRMSG)
				SELECT 'XNSRECON',ISNULL(@CERRORMSG,'')
				
			
														   	
			PRINT 'MERGING TABLE-1 :'+@CTABLENAME

			BEGIN TRANSACTION
			
			SET @NSTEP=80	
			DECLARE XNSTABLELISTCUR CURSOR FOR SELECT DISTINCT TABLENAME,KEYFIELD FROM XNSINFO (NOLOCK) 
			WHERE LEFT(XN_TYPE,3)='XNS'
			
			OPEN XNSTABLELISTCUR
			FETCH NEXT FROM XNSTABLELISTCUR INTO @CTABLENAME,@CKEYFIELD1
			WHILE @@FETCH_STATUS=0
			BEGIN
				
				SET @CSOURCETABLENAME=@CTABLENAME
				
				SELECT @CKEYFIELD2='',@CKEYFIELD3=''
				
				IF @CTABLENAME='ART_ATTR'
				BEGIN
					SELECT @CKEYFIELD1='ARTICLE_CODE',@CKEYFIELD2='ATTRIBUTE_CODE'			
				END	
				ELSE
				IF @CTABLENAME='OPS01106' 
				BEGIN
					SET @CKEYFIELD2='DEPT_ID'
				END
				
				SET @NSTEP=95	
				
				SET @CCMD=N'IF EXISTS (SELECT TOP 1 NAME FROM '+@CSOURCEDB+'SYSOBJECTS (NOLOCK) WHERE NAME='''+@CSOURCETABLENAME+''')
								SET @BPROCEED=1
							ELSE
								SET @BPROCEED=0'
				
				EXEC SP_EXECUTESQL @CCMD,N'@BPROCEED BIT OUTPUT',@BPROCEED OUTPUT
				
				IF @BPROCEED=1
				BEGIN
					SET @NSTEP=97	
					SET @CCMD=N'IF EXISTS (SELECT TOP 1 '+@CKEYFIELD1+' FROM '+@CSOURCEDB+@CSOURCETABLENAME+')
									SET @BPROCEED=1
								ELSE
									SET @BPROCEED=0'
					
					EXEC SP_EXECUTESQL @CCMD,N'@BPROCEED BIT OUTPUT',@BPROCEED OUTPUT				
				END
				
				IF @BPROCEED=1									
				BEGIN
					PRINT 'MERGING TABLE-2 :'+@CTABLENAME
					
					SET @NSTEP=100
					SET @CCMD=N'IF EXISTS (SELECT TOP 1 A.NAME FROM '+@CSOURCEDB+'SYSCOLUMNS A 
									JOIN '+@CSOURCEDB+'SYSOBJECTS B (NOLOCK) ON A.ID=B.ID
									WHERE B.NAME='''+@CTABLENAME+''' AND A.NAME=''LAST_UPDATE'')
									SET @BALWAYSUPDATE=0
								ELSE
									SET @BALWAYSUPDATE=1'
				
					EXEC SP_EXECUTESQL @CCMD,N'@BALWAYSUPDATE BIT OUTPUT',@BALWAYSUPDATE OUTPUT
					
					
					
					SET @NSTEP=110
					
					
					SET @CFILTERCONDITION=''
																			
					EXEC UPDATEMASTERXN
					@CSOURCEDB=@CSOURCEDB,
					@CSOURCETABLE=@CSOURCETABLENAME,
					@CDESTDB=@CTARGETDB,
					@CDESTTABLE=@CSOURCETABLENAME,
					@CKEYFIELD1=@CKEYFIELD1,
					@CKEYFIELD2=@CKEYFIELD2,
					@CKEYFIELD3=@CKEYFIELD3,
					@LINSERTONLY=0,
					@LUPDATEONLY=0,
					@BALWAYSUPDATE=@BALWAYSUPDATE,
					@CFILTERCONDITION=@CFILTERCONDITION

					SET @NSTEP=115	
				END
				
				
				FETCH NEXT FROM XNSTABLELISTCUR INTO @CTABLENAME,@CKEYFIELD1
			END
			
			CLOSE XNSTABLELISTCUR
			DEALLOCATE XNSTABLELISTCUR			
			
			SET @BSENDACK=1
			
			IF  EXISTS (SELECT TOP 1 DEPT_ID FROM XNRECON_LOG (NOLOCK) WHERE DEPT_ID=@CDEPTID)
			BEGIN
				SET @NSTEP=145
				
				SET @CCMD=N'UPDATE XNRECON_LOG SET SENT_ID=B.SENT_ID,SENT_DT=B.SENT_DT,LAST_UPDATE=GETDATE(),
							SENT_TO_LOC=0 FROM '+
						  @CSOURCEDB+'XNRECON_LOG B WHERE B.DEPT_ID=XNRECON_LOG.DEPT_ID
						  AND  B.DEPT_ID='''+@CDEPTID+''''
				EXEC SP_EXECUTESQL @CCMD									  

				UPDATE XNRECON_LOG SET RECON_ID=SENT_ID WHERE DEPT_ID=@CDEPTID							
			END	
			ELSE
			BEGIN
				SET @NSTEP=150
				SET @CCMD=N'INSERT XNRECON_LOG (DEPT_ID,SENT_ID,SENT_DT,RECON_ID,LAST_UPDATE,SENT_TO_LOC)
							SELECT DEPT_ID,SENT_ID,SENT_DT,1 AS RECON_ID,GETDATE(),0
							FROM '+@CSOURCEDB+'XNRECON_LOG WHERE DEPT_ID='''+@CDEPTID+''''
				EXEC SP_EXECUTESQL @CCMD			
			END
						
			COMMIT TRANSACTION

			LBLNEXTLOC:
			
			SET @NSTEP=155
			
			UPDATE XNS_BACKUP_INFO SET MERGE_STATUS=(CASE WHEN ISNULL(@CERRORMSG,'')<>'' THEN 1 ELSE 4 END),
			ERRORMSG=ISNULL(@CERRORMSG,''),LAST_UPDATE=GETDATE() WHERE DEPT_ID=@CDEPTID
			
			FETCH NEXT FROM MERGEDTRCUR INTO @CSOURCEDBNAME,@CDEPTID
		END
		
		CLOSE MERGEDTRCUR
		DEALLOCATE MERGEDTRCUR
		
		BEGIN TRANSACTION
		
		SET @NSTEP=160
		DECLARE XNSTABLELISTCUR CURSOR FOR SELECT TABLENAME,XN_TYPE FROM RECONMSTTABLEINFO (NOLOCK) 
		WHERE TABLENAME IN ('INM01106','PIM01106','RMM01106','CNM01106')
		
		OPEN XNSTABLELISTCUR
		FETCH NEXT FROM XNSTABLELISTCUR INTO @CTABLENAME,@CXNTYPE
		WHILE @@FETCH_STATUS=0
		BEGIN
								
			SET @NSTEP=165
			SET @CTEMPTABLENAME='TMP_LOCDTRECON_'+LTRIM(RTRIM(STR(@@SPID))) 				
			
			IF OBJECT_ID(@CTEMPTABLENAME,'U') IS NULL
			BEGIN
				SET @NSTEP=165
				SET @CCMD=N'SELECT * INTO '+@CTEMPTABLENAME+' FROM LOC_XNSRECON WHERE 1=2'
				EXEC SP_EXECUTESQL @CCMD
			END
			
			SET @NSTEP=170
			SET @CCMD='DELETE FROM '+@CTEMPTABLENAME
			EXEC SP_EXECUTESQL @CCMD
			
			SET @NSTEP=175

			SELECT TOP 1 @CKEYFIELD1=KEYFIELD FROM XNSINFO (NOLOCK) WHERE XN_TYPE=@CXNTYPE AND TABLENAME=@CTABLENAME
						
			SELECT @CDEPTIDCOL='LEFT(A.'+@CKEYFIELD1+',2)',
				   @CXNDTCOL=MEMODTCOL,
				   @CXNTYPE=(CASE WHEN @CTABLENAME='INM01106' THEN 'XNSCHO_WSL'
								  WHEN @CTABLENAME='RMM01106' THEN 'XNSCHO_PRT'
								  WHEN @CTABLENAME='PIM01106' THEN 'XNSCHI_PUR'
								  ELSE 'XNSCHI_WSR' END),
				   @CCHILDTABLENAME=REPLACE(@CTABLENAME,'M01106','D01106')					  					  												   
			FROM RECONMSTTABLEINFO WHERE TABLENAME=@CTABLENAME
			
			
			SET @NSTEP=180
			SELECT @CREFTABLENAME='',@CREFKEYFIELD =(CASE WHEN @CTABLENAME='PIM01106' THEN 'INV_ID' 
									 WHEN @CTABLENAME='CNM01106' THEN 'RM_ID' ELSE '' END)

			SET @NSTEP=182
			SELECT @CREFKEYFIELDVAL =(CASE WHEN @CTABLENAME IN ('PIM01106','CNM01106') 
										THEN 'ISNULL(C.'+@CREFKEYFIELD+',D.'+@CREFKEYFIELD+')'
										ELSE 'A.'+@CKEYFIELD1 END)
			
			
			SET @NSTEP=184
			SET @CCMD=N'INSERT '+@CTEMPTABLENAME+'( DEPT_ID, XN_DT, XN_TYPE, XN_QTY, XN_NET,
			LAST_UPDATE,SENT_TO_HO, XN_ID, CANCELLED ) 
			SELECT  '+@CDEPTIDCOL+' AS DEPT_ID,A.'+@CXNDTCOL+' AS XN_DT,'''+@CXNTYPE+''' AS XN_TYPE,
			ISNULL(B.TOTAL_QUANTITY,0) AS XN_QTY,0 AS  XN_NET,GETDATE() AS LAST_UPDATE,0 AS SENT_TO_HO,'+
			@CREFKEYFIELDVAL+' AS XN_ID,CANCELLED FROM '+@CTARGETDB+@CTABLENAME+' A
			LEFT OUTER JOIN (SELECT '+@CKEYFIELD1+',SUM(QUANTITY) AS TOTAL_QUANTITY FROM '+@CTARGETDB+@CCHILDTABLENAME+' B
				  GROUP BY '+@CKEYFIELD1+') B	 ON A.'+@CKEYFIELD1+'=B.'+@CKEYFIELD1+
			(CASE WHEN @CREFTABLENAME<>'' THEN
			' LEFT OUTER JOIN '+@CTARGETDB+@CREFTABLENAME+' C ON C.'+@CKEYFIELD1+'=A.'+@CKEYFIELD1+
			' LEFT OUTER JOIN '+@CREFTABLENAME+' D ON D.'+@CKEYFIELD1+'=A.'+@CKEYFIELD1+
			' WHERE (D.'+@CKEYFIELD1+' IS NOT NULL OR C.'+@CKEYFIELD1+' IS NOT NULL)'  ELSE '' END)
			
			SET @NSTEP=186
			PRINT @CCMD-- ISNULL(@CDEPTIDCOL,'NULL @CDEPTIDCOL')+ISNULL(@CXNDTCOL,'NULL @@CXNDTCOL')+ISNULL(@CXNDTCOL,'NULL @@CXNDTCOL')
			EXEC SP_EXECUTESQL @CCMD
			
			SET @NSTEP=190
			
			EXEC UPDATEMASTERXN
			@CSOURCEDB='',
			@CSOURCETABLE=@CTEMPTABLENAME,
			@CDESTDB='',
			@CDESTTABLE='LOC_XNSRECON',
			@CKEYFIELD1='DEPT_ID',
			@CKEYFIELD2='XN_TYPE',
			@CKEYFIELD3='XN_ID',
			@LINSERTONLY=0,
			@LUPDATEONLY=0,
			@BALWAYSUPDATE=1,
			@CFILTERCONDITION=''
			
			FETCH NEXT FROM XNSTABLELISTCUR INTO @CTABLENAME,@CXNTYPE
		END		
		
		CLOSE XNSTABLELISTCUR
		DEALLOCATE XNSTABLELISTCUR
		
		GOTO END_PROC
	END TRY
	
	BEGIN CATCH
		
		IF @CRETERRORMSG=''
			SELECT @CERRORMSG='PROCEDURE SP_MERGEXNRECONDATA : STEP: '+STR(@NSTEP)+' LINE NO. :'+
			ISNULL(LTRIM(RTRIM(STR(ERROR_LINE()))),'NULL LINE')+'MSG :'+ISNULL(ERROR_MESSAGE(),'NULL MSG')
		ELSE
			SET @CERRORMSG=@CRETERRORMSG				

		IF @BMERGINGSTARTED=1	
		BEGIN
			PRINT 'UNTRAPPED ERROR :'+@CSOURCEDBNAME
			
			UPDATE XNS_BACKUP_INFO SET MERGE_STATUS=4,ERRORMSG='' WHERE [DB_NAME]=@CSOURCEDBNAME
			IF @@TRANCOUNT>0
				COMMIT TRANSACTION
			GOTO LBLSTART
		END
		ELSE
			GOTO END_PROC
					

	END CATCH

END_PROC:
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')=''
			COMMIT TRANSACTION
		ELSE
			ROLLBACK	
	END				
	
	INSERT @TRETMSG (MEMO_ID,ERRMSG,SENDACK)
	SELECT 'XNSRECON',ISNULL(@CERRORMSG,''),ISNULL(@BSENDACK,0)
	
	UPDATE @TRETMSG SET SENDACK=@BSENDACK
					
	SELECT * FROM @TRETMSG				
END
