create PROCEDURE SP_DSR_DETAILSALE    
(          --PARAMETERS    
  @DFROMDT DATETIME,    --REPORT FROM DT    
  @DTODT  DATETIME,    --REPORT TO DT    
  @CDEPTID VARCHAR(4)='',    --DEPT ID (IF BLANK THIS PARAMETER THEN RUN THIS REPORT FOR ALL LOCATION    
  @NMODE  INT,      --@NMODE=1- BILL NO WISE; 2- DATE WISE  
  @BESTIMATEENABLED BIT = 1 ,  
  @CUSERCODE VARCHAR(15),  
  @CBINID VARCHAR(10),  
  @NSUMMARYTYPE INT,    --- 1 FOR RETAILSALE  2 FOR WHOLESALE  3 FOR BOTH  
  @CLOGIN_USERCODE VARCHAR(12) = '',  
  @SHOWACTIVELOCATIONS BIT =0  
)    
--WITH ENCRYPTION  
AS    
BEGIN    
  --(dinkar) Replace  left(memoid,2) to Location_code 
 DECLARE @CMAJORDEPTID VARCHAR(5),@BDSM BIT,@CERRMSGOUT VARCHAR(500)  
  
 --SET @BDSM=ISNULL(@BDSM,0)  
    --SELECT @CMAJORDEPTID=MAJOR_DEPT_ID FROM LOCATION (NOLOCK) WHERE DEPT_ID=@CDEPTID  
   
 /*  
  CALL THIS PROCEDURE TO CHECK IF SOME BILLS ARE PENDING FOR CASHER. EITHER FROM CASH MEMO TO CASHIER OR  
  PACKSLIP TO CASHMEMO.      
   */  
     
   EXEC SP3S_CHECK_PENDING_BILLS   
     @DFROM_DT=@DFROMDT  
 ,@DTO_DT=@DTODT  
 ,@CDEPT_ID=@CDEPTID  
 ,@BESTIMATEENABLED=@BESTIMATEENABLED  
 ,@CUSERCODE=@CUSERCODE  
 ,@CBINID=@CBINID  
 ,@CERRMSGOUT=@CERRMSGOUT OUTPUT  
      
  
   IF OBJECT_ID('TEMPDB..#TMPUSERS','U') IS NOT NULL  
   DROP TABLE #TMPUSERS  
    SELECT DISTINCT XNS_USER_CODE INTO #TMPUSERS FROM USER_XNS_FILTER (NOLOCK) WHERE 1=2  
  
      DECLARE @BALLOW_ACCESS_RETAIL_SALE_ALL_USERS VARCHAR(10)  
   SELECT @BALLOW_ACCESS_RETAIL_SALE_ALL_USERS=ALLOW_ACCESS_RETAIL_SALE_ALL_USERS FROM USERS WHERE USER_CODE =@CLOGIN_USERCODE   
  
    IF @CUSERCODE<>''  
    BEGIN  
       INSERT INTO #TMPUSERS  
    SELECT @CUSERCODE  
    END  
    ELSE   
    BEGIN  
  
         IF   ISNULL(@BALLOW_ACCESS_RETAIL_SALE_ALL_USERS,0)=1  
           SET @CUSERCODE=''  
      ELSE   
      BEGIN  
  
         INSERT INTO #TMPUSERS  
      SELECT DISTINCT XNS_USER_CODE FROM USER_XNS_FILTER (NOLOCK) WHERE USER_CODE= @CLOGIN_USERCODE   
      UNION   
      SELECT @CLOGIN_USERCODE AS XNS_USER_CODE  
  
      SET @CUSERCODE=@CLOGIN_USERCODE  
  
      END  
  
  
    END  
  
   --SET @CMAJORDEPTID=ISNULL(@CMAJORDEPTID,'')  
   
 DECLARE @OUTPUTC TABLE (XN_TYPE VARCHAR(3),DEPT_ID VARCHAR(4), DEPT_NAME VARCHAR(200),BIN_ID VARCHAR(10), BIN_NAME VARCHAR(200),  
                         CM_DT DATETIME, CM_NO VARCHAR(100),   QUANTITY NUMERIC(10,3), SLS_AT_MRP NUMERIC(12,2),   
                         SLR_AT_MRP NUMERIC(12,2),NET_SLS_AT_MRP NUMERIC(12,2), DISCOUNT_AMOUNT NUMERIC(12,2),     
                            DISCOUNT_PERCENTAGE NUMERIC(12,2), NET_AMOUNT NUMERIC(12,2),ATD_CHARGES NUMERIC(12,2),  
                             CASH_AMOUNT NUMERIC(12,2), CC_AMOUNT NUMERIC(12,2),     
                            CN_AMOUNT NUMERIC(12,2), ADVANCE_AMOUNT_ADJUSTED NUMERIC(12,2),OTHER_DOC_AMOUNT NUMERIC(12,2),  
                            CNISSUE_AMOUNT NUMERIC(12,2),CREDIT_AMOUNT NUMERIC(12,2),BANK_CHARGES NUMERIC(12,2),  
                            MISC_AMOUNT NUMERIC(12,2),GIFT_VOUCHERS NUMERIC(12,2),Walet NUMERIC(12,2),CANCELLED BIT,  
                            ROUND_OFF NUMERIC(12,2),EXCL_TAX NUMERIC(10,2) )    
          
          
   DECLARE @OUTPUTC_WSL TABLE (XN_TYPE VARCHAR(3), DEPT_ID VARCHAR(4), DEPT_NAME VARCHAR(200),BIN_ID VARCHAR(10),BIN_NAME VARCHAR(200),  
                             CM_DT DATETIME, CM_NO VARCHAR(100),QUANTITY NUMERIC(10,3), SLS_AT_MRP NUMERIC(12,2),  
                             SLR_AT_MRP NUMERIC(12,2),NET_SLS_AT_MRP NUMERIC(12,2), DISCOUNT_AMOUNT NUMERIC(12,2),     
                                DISCOUNT_PERCENTAGE NUMERIC(12,2), NET_AMOUNT NUMERIC(12,2),ATD_CHARGES NUMERIC(12,2),   
                                CASH_AMOUNT NUMERIC(12,2), CC_AMOUNT NUMERIC(12,2),CN_AMOUNT NUMERIC(12,2),  
                                ADVANCE_AMOUNT_ADJUSTED NUMERIC(12,2),OTHER_DOC_AMOUNT NUMERIC(12,2),  
                                CNISSUE_AMOUNT NUMERIC(12,2),CREDIT_AMOUNT NUMERIC(12,2),BANK_CHARGES NUMERIC(12,2),  
                                MISC_AMOUNT NUMERIC(12,2),GIFT_VOUCHERS NUMERIC(12,2),Walet NUMERIC(12,2), CANCELLED BIT,  
                                ROUND_OFF NUMERIC(12,2),EXCL_TAX NUMERIC(10,2) )    
  
 DECLARE @BDONOTSHOWITEMDISC BIT   
  
 SELECT @BDONOTSHOWITEMDISC=ISNULL(VALUE,0) FROM CONFIG   
 WHERE CONFIG_OPTION='DO_NOT_SHOW_ITEM_DISC'  
 SET @BDONOTSHOWITEMDISC=ISNULL(@BDONOTSHOWITEMDISC,0)   
  
 IF ISNULL(@NSUMMARYTYPE,0) IN (1,3)  
 BEGIN  
   
     INSERT @OUTPUTC (XN_TYPE, DEPT_ID, DEPT_NAME,BIN_ID , BIN_NAME, CM_DT, CM_NO, QUANTITY, SLS_AT_MRP, SLR_AT_MRP,     
       NET_SLS_AT_MRP, DISCOUNT_AMOUNT, DISCOUNT_PERCENTAGE, NET_AMOUNT,    
       ATD_CHARGES, CASH_AMOUNT, CC_AMOUNT, CN_AMOUNT, ADVANCE_AMOUNT_ADJUSTED,    
       OTHER_DOC_AMOUNT,CNISSUE_AMOUNT, CREDIT_AMOUNT, BANK_CHARGES, MISC_AMOUNT,GIFT_VOUCHERS,Walet , CANCELLED, ROUND_OFF,EXCL_TAX )    
    
 SELECT 'SLS',C.DEPT_ID, C.DEPT_ID + ' ' + C.DEPT_NAME AS DEPT_NAME,  
 B1.BIN_ID , B1.BIN_NAME ,  A.CM_DT,     
   A.CM_NO + (CASE WHEN A.CANCELLED=1 THEN ': CANCELLED' ELSE '' END) AS CM_NO,     
   (CASE WHEN A.CANCELLED=0 THEN B.QUANTITY ELSE 0 END) AS QUANTITY,     
   (CASE WHEN A.CANCELLED=0 THEN B.SLS_AT_MRP ELSE 0 END) AS SLS_AT_MRP,     
   (CASE WHEN A.CANCELLED=0 THEN B.SLR_AT_MRP ELSE 0 END) AS SLR_AT_MRP,     
   (CASE WHEN A.CANCELLED=0 THEN (B.SLS_AT_MRP - B.SLR_AT_MRP) ELSE 0 END) AS NET_SLS_AT_MRP,    
   (CASE WHEN A.CANCELLED=0 THEN (A.DISCOUNT_AMOUNT + B.ITEM_DISCOUNT_AMOUNT) ELSE 0 END) AS DISCOUNT_AMOUNT,    
   (CASE WHEN A.CANCELLED=0 AND (B.SLS_AT_MRP - B.SLR_AT_MRP) <> 0 THEN    
    ((A.DISCOUNT_AMOUNT + B.ITEM_DISCOUNT_AMOUNT)*100)/(B.SLS_AT_MRP - B.SLR_AT_MRP)    
    ELSE 0 END) DISCOUNT_PERCENTAGE,    
   (CASE WHEN A.CANCELLED=0 THEN A.NET_AMOUNT-A.ATD_CHARGES-A.ROUND_OFF ELSE 0 END) AS NET_AMOUNT,     
   (CASE WHEN A.CANCELLED=0 THEN A.ATD_CHARGES ELSE 0 END) AS ATD_CHARGES,    
   (CASE WHEN A.CANCELLED=0 THEN D.CASH_AMOUNT ELSE 0 END) AS CASH_AMOUNT,     
   (CASE WHEN A.CANCELLED=0 THEN D.CC_AMOUNT ELSE 0 END) AS CC_AMOUNT,     
   (CASE WHEN A.CANCELLED=0 THEN D.CN_AMOUNT ELSE 0 END) AS CN_AMOUNT,     
   (CASE WHEN A.CANCELLED=0 THEN D.ADVANCE_AMOUNT_ADJUSTED ELSE 0 END) AS ADVANCE_AMOUNT_ADJUSTED,     
   (CASE WHEN A.CANCELLED=0 THEN D.OTHER_DOC_AMOUNT ELSE 0 END) AS OTHER_DOC_AMOUNT,    
   (CASE WHEN ISNULL(D.CREDIT_AMOUNT,0)<0 AND SUBSTRING(A.CM_NO,5,1)='N'   
   THEN ABS(ISNULL(D.CREDIT_AMOUNT,0)) ELSE 0 END) AS CNISSUE_AMOUNT,     
   (CASE WHEN A.CANCELLED=0 THEN (CASE WHEN NOT (ISNULL(D.CREDIT_AMOUNT,0)<0 AND SUBSTRING(A.CM_NO,5,1)='N')   
   THEN  D.CREDIT_AMOUNT ELSE 0 END)+D.CREDIT_REFUND_AMOUNT ELSE 0 END) AS CREDIT_AMOUNT,     
   (CASE WHEN A.CANCELLED=0 THEN D.BANK_CHARGES ELSE 0 END) AS BANK_CHARGES,     
   (CASE WHEN A.CANCELLED=0 THEN D.MISC_AMOUNT ELSE 0 END) AS MISC_AMOUNT,    
   (CASE WHEN A.CANCELLED=0 THEN D.GIFT_VOUCHERS ELSE 0 END) AS GIFT_VOUCHERS,    
   (CASE WHEN A.CANCELLED=0 THEN D.WALLET ELSE 0 END) AS WALLET,   
   A.CANCELLED  ,  
   (CASE WHEN A.CANCELLED=0 THEN A.ROUND_OFF ELSE 0 END) AS  [ROUND_OFF],  
   (CASE WHEN A.CANCELLED=0 THEN B.EXCL_TAX ELSE 0 END) AS  [EXCL_TAX]  
  
 FROM CMM01106 A  
 JOIN BIN B1 ON B1.BIN_ID=ISNULL(A.BIN_ID,'000')      
 JOIN     
 (    
 SELECT CM_ID, SUM(QUANTITY) AS QUANTITY  
 ,SUM(CASE WHEN @BDONOTSHOWITEMDISC=0 THEN DISCOUNT_AMOUNT ELSE 0 END) AS ITEM_DISCOUNT_AMOUNT  
 ,SUM(CASE WHEN QUANTITY>0 THEN (QUANTITY*(CASE WHEN @BDONOTSHOWITEMDISC=0 THEN MRP ELSE NET END)) ELSE 0 END) AS SLS_AT_MRP  
 ,SUM(CASE WHEN QUANTITY<0 THEN ABS(QUANTITY*(CASE WHEN @BDONOTSHOWITEMDISC=0 THEN MRP ELSE NET END)) ELSE 0 END)  AS SLR_AT_MRP  
 ,SUM(CASE WHEN TAX_METHOD=2 THEN TAX_AMOUNT ELSE 0 END) AS EXCL_TAX    
 FROM CMD01106     
 GROUP BY CM_ID    
 ) B ON A.CM_ID = B.CM_ID      
  
 JOIN LOCATION C ON a.location_Code  = C.DEPT_ID      
 LEFT OUTER JOIN VW_BILL_PAYMODE D ON A.CM_ID = D.MEMO_ID AND D.XN_TYPE = 'SLS'    
 WHERE --A.CM_MODE = 1 AND   --CHANGE  
 A.CM_DT BETWEEN @DFROMDT AND @DTODT   AND (A.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE  
 AND a.location_Code  =(CASE WHEN @CDEPTID='' THEN a.location_Code  ELSE @CDEPTID END)    
 AND ISNULL(A.BIN_ID,'000') =(CASE WHEN (@CBINID = '')  THEN ISNULL(A.BIN_ID,'000') ELSE @CBINID END)      
 AND (@CUSERCODE='' OR  a.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )  
 --AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CB.CM_ID IS NOT NULL)) OR (@BDSM=0))   
   
  IF @SHOWACTIVELOCATIONS=1  
  BEGIN  
  
  INSERT INTO @OUTPUTC(DEPT_ID,CANCELLED,XN_TYPE )  
  SELECT A.DEPT_ID ,0 AS CANCELLED,'SLS' AS XN_TYPE  
  FROM LOCATION (NOLOCK) A  
  LEFT JOIN @OUTPUTC B ON A.DEPT_ID =B.DEPT_ID   
  WHERE B.DEPT_ID IS NULL  
  AND  INACTIVE=0  
  
  END  
 END  
   
   
 IF ISNULL(@NSUMMARYTYPE,0) IN (2,3)  
 BEGIN  
   
     INSERT @OUTPUTC_WSL (XN_TYPE, DEPT_ID, DEPT_NAME,BIN_ID , BIN_NAME, CM_DT, CM_NO, QUANTITY, SLS_AT_MRP, SLR_AT_MRP,     
       NET_SLS_AT_MRP, DISCOUNT_AMOUNT, DISCOUNT_PERCENTAGE, NET_AMOUNT,    
       ATD_CHARGES, CASH_AMOUNT, CC_AMOUNT, CN_AMOUNT, ADVANCE_AMOUNT_ADJUSTED,    
       OTHER_DOC_AMOUNT,CNISSUE_AMOUNT, CREDIT_AMOUNT, BANK_CHARGES, MISC_AMOUNT,GIFT_VOUCHERS,Walet , CANCELLED, ROUND_OFF,EXCL_TAX  )    
     
  SELECT 'WSL', C.DEPT_ID, C.DEPT_ID + ' ' + C.DEPT_NAME AS DEPT_NAME,  
  B1.BIN_ID , B1.BIN_NAME ,  A.INV_DT,     
    A.INV_NO + (CASE WHEN A.CANCELLED=1 THEN ': CANCELLED' ELSE '' END) AS CM_NO,     
    (CASE WHEN A.CANCELLED=0 THEN B.QUANTITY ELSE 0 END) AS QUANTITY,     
    (CASE WHEN A.CANCELLED=0 THEN B.SLS_AT_MRP ELSE 0 END) AS SLS_AT_MRP,     
    (CASE WHEN A.CANCELLED=0 THEN B.SLR_AT_MRP ELSE 0 END) AS SLR_AT_MRP,     
    (CASE WHEN A.CANCELLED=0 THEN (B.SLS_AT_MRP - B.SLR_AT_MRP) ELSE 0 END) AS NET_SLS_AT_MRP,    
    (CASE WHEN A.CANCELLED=0 THEN (A.DISCOUNT_AMOUNT + B.ITEM_DISCOUNT_AMOUNT) ELSE 0 END) AS DISCOUNT_AMOUNT,    
    (CASE WHEN A.CANCELLED=0 AND (B.SLS_AT_MRP - B.SLR_AT_MRP) <> 0 THEN    
  ((A.DISCOUNT_AMOUNT + B.ITEM_DISCOUNT_AMOUNT)*100)/(B.SLS_AT_MRP - B.SLR_AT_MRP)    
  ELSE 0 END) DISCOUNT_PERCENTAGE,    
    (CASE WHEN A.CANCELLED=0 THEN A.NET_AMOUNT-A.OTHER_CHARGES-A.FREIGHT-A.ROUND_OFF ELSE 0 END) AS NET_AMOUNT,     
    (CASE WHEN A.CANCELLED=0 THEN A.OTHER_CHARGES+A.FREIGHT ELSE 0 END) AS ATD_CHARGES,    
    (CASE WHEN A.CANCELLED=0 THEN D.CASH_AMOUNT ELSE 0 END) AS CASH_AMOUNT,     
    (CASE WHEN A.CANCELLED=0 THEN D.CC_AMOUNT ELSE 0 END) AS CC_AMOUNT,     
    (CASE WHEN A.CANCELLED=0 THEN D.CN_AMOUNT ELSE 0 END) AS CN_AMOUNT,     
    (CASE WHEN A.CANCELLED=0 THEN D.ADVANCE_AMOUNT_ADJUSTED ELSE 0 END) AS ADVANCE_AMOUNT_ADJUSTED,     
    (CASE WHEN A.CANCELLED=0 THEN D.OTHER_DOC_AMOUNT ELSE 0 END) AS OTHER_DOC_AMOUNT,    
    (CASE WHEN ISNULL(D.CREDIT_AMOUNT,0)<0 AND SUBSTRING(A.INV_NO,5,1)='N'   
    THEN ABS(ISNULL(D.CREDIT_AMOUNT,0)) ELSE 0 END) AS CNISSUE_AMOUNT,     
    (CASE WHEN A.CANCELLED=0 THEN (CASE WHEN NOT (ISNULL(D.CREDIT_AMOUNT,0)<0 AND SUBSTRING(A.INV_NO,5,1)='N')   
    THEN  D.CREDIT_AMOUNT ELSE 0 END)+D.CREDIT_REFUND_AMOUNT ELSE 0 END) AS CREDIT_AMOUNT,     
    (CASE WHEN A.CANCELLED=0 THEN D.BANK_CHARGES ELSE 0 END) AS BANK_CHARGES,     
    (CASE WHEN A.CANCELLED=0 THEN D.MISC_AMOUNT ELSE 0 END) AS MISC_AMOUNT,    
    (CASE WHEN A.CANCELLED=0 THEN D.GIFT_VOUCHERS ELSE 0 END) AS GIFT_VOUCHERS,    
    (CASE WHEN A.CANCELLED=0 THEN D.WALLET  ELSE 0 END) AS WALLET,    
    A.CANCELLED  ,  
    (CASE WHEN A.CANCELLED=0 THEN A.ROUND_OFF ELSE 0 END) AS  [ROUND_OFF],  
    (CASE WHEN A.CANCELLED=0 THEN B.EXCL_TAX ELSE 0 END) AS  [EXCL_TAX]  
	
  FROM INM01106 A  
  JOIN BIN B1 ON B1.BIN_ID=ISNULL(A.BIN_ID,'000')      
  JOIN     
  (    
  SELECT A.INV_ID, SUM(QUANTITY) AS QUANTITY, SUM(CASE WHEN @BDONOTSHOWITEMDISC=0 THEN A.DISCOUNT_AMOUNT ELSE 0 END) AS ITEM_DISCOUNT_AMOUNT,    
  SUM(CASE WHEN QUANTITY>0 THEN (QUANTITY*(CASE WHEN @BDONOTSHOWITEMDISC=0 THEN MRP ELSE NET_RATE END)) ELSE 0 END) AS SLS_AT_MRP,    
  SUM(CASE WHEN QUANTITY<0 THEN ABS(QUANTITY*(CASE WHEN @BDONOTSHOWITEMDISC=0 THEN MRP ELSE NET_RATE END)) ELSE 0 END)  AS SLR_AT_MRP,  
  SUM(CASE WHEN B.BILL_LEVEL_TAX_METHOD=2 THEN ITEM_TAX_AMOUNT ELSE 0 END) AS EXCL_TAX    
  FROM IND01106  A   
  JOIN INM01106 B ON A.INV_ID=B.INV_ID    
  GROUP BY A.INV_ID    
  ) B ON A.INV_ID = B.INV_ID      
  
  JOIN LOCATION C ON a.location_Code = C.DEPT_ID      
  LEFT OUTER JOIN VW_BILL_PAYMODE D ON A.INV_ID = D.MEMO_ID AND D.XN_TYPE = 'WSL'    
  WHERE --A.CM_MODE = 1 AND   --CHANGE  
  A.INV_DT BETWEEN @DFROMDT AND @DTODT   AND (A.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE  
  AND A.INV_MODE=1   
  AND a.location_Code  =(CASE WHEN @CDEPTID='' THEN a.location_Code  ELSE @CDEPTID END)    
  AND ISNULL(A.BIN_ID,'000') =(CASE WHEN (@CBINID = '')  THEN ISNULL(A.BIN_ID,'000') ELSE @CBINID END)      
 AND (@CUSERCODE='' OR  a.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )  
  --AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CB.CM_ID IS NOT NULL)) OR (@BDSM=0))   
    
    
  UNION ALL  
   SELECT 'WSR', C.DEPT_ID, C.DEPT_ID + ' ' + C.DEPT_NAME AS DEPT_NAME,  
  B1.BIN_ID , B1.BIN_NAME ,  A.CN_DT,     
    A.CN_NO + (CASE WHEN A.CANCELLED=1 THEN ': CANCELLED' ELSE '' END) AS CM_NO,     
    (-1)*(CASE WHEN A.CANCELLED=0 THEN B.QUANTITY ELSE 0 END) AS QUANTITY,     
    (-1)*(CASE WHEN A.CANCELLED=0 THEN B.SLS_AT_MRP ELSE 0 END) AS SLS_AT_MRP,     
    (CASE WHEN A.CANCELLED=0 THEN B.SLR_AT_MRP ELSE 0 END) AS SLR_AT_MRP,     
    (-1)*(CASE WHEN A.CANCELLED=0 THEN (B.SLS_AT_MRP - B.SLR_AT_MRP) ELSE 0 END) AS NET_SLS_AT_MRP,    
    (-1)*(CASE WHEN A.CANCELLED=0 THEN (A.DISCOUNT_AMOUNT + B.ITEM_DISCOUNT_AMOUNT) ELSE 0 END) AS DISCOUNT_AMOUNT,    
    (CASE WHEN A.CANCELLED=0 AND (B.SLS_AT_MRP - B.SLR_AT_MRP) <> 0 THEN    
  ((A.DISCOUNT_AMOUNT + B.ITEM_DISCOUNT_AMOUNT)*100)/(B.SLS_AT_MRP - B.SLR_AT_MRP)    
  ELSE 0 END) DISCOUNT_PERCENTAGE,    
    (-1)*(CASE WHEN A.CANCELLED=0 THEN A.total_amount -A.OTHER_CHARGES-A.FREIGHT-A.ROUND_OFF ELSE 0 END) AS NET_AMOUNT,     
    (-1)*(CASE WHEN A.CANCELLED=0 THEN A.OTHER_CHARGES+A.FREIGHT ELSE 0 END) AS ATD_CHARGES,    
    (-1)*(CASE WHEN A.CANCELLED=0 AND ISNULL(A.pay_mode,1)=2  THEN A.total_amount  ELSE 0 END) AS CASH_AMOUNT,     
    (-1)*(CASE WHEN A.CANCELLED=0 THEN D.CC_AMOUNT ELSE 0 END) AS CC_AMOUNT,     
    (-1)*(-1)*(CASE WHEN A.CANCELLED=0 THEN D.CN_AMOUNT ELSE 0 END) AS CN_AMOUNT,     
    (CASE WHEN A.CANCELLED=0 THEN D.ADVANCE_AMOUNT_ADJUSTED ELSE 0 END) AS ADVANCE_AMOUNT_ADJUSTED,     
    (-1)*(CASE WHEN A.CANCELLED=0 THEN D.OTHER_DOC_AMOUNT ELSE 0 END) AS OTHER_DOC_AMOUNT,    
    0 AS CNISSUE_AMOUNT,     
    (-1)*(CASE WHEN A.CANCELLED=0 AND ISNULL(A.pay_mode,1)=1  THEN A.total_amount  ELSE 0 END) AS CREDIT_AMOUNT,     
    (-1)*(CASE WHEN A.CANCELLED=0 THEN D.BANK_CHARGES ELSE 0 END) AS BANK_CHARGES,     
    (-1)*(CASE WHEN A.CANCELLED=0 THEN D.MISC_AMOUNT ELSE 0 END) AS MISC_AMOUNT,    
    (-1)*(CASE WHEN A.CANCELLED=0 THEN D.GIFT_VOUCHERS ELSE 0 END) AS GIFT_VOUCHERS,    
    (-1)*(CASE WHEN A.CANCELLED=0 THEN D.WALLET  ELSE 0 END) AS WALLET,    
    A.CANCELLED  ,  
   (-1)* (CASE WHEN A.CANCELLED=0 THEN A.ROUND_OFF ELSE 0 END) AS  [ROUND_OFF],  
    (-1)*(CASE WHEN A.CANCELLED=0 THEN B.EXCL_TAX ELSE 0 END) AS  [EXCL_TAX] 
  FROM cnm01106  A  
  JOIN BIN B1 ON B1.BIN_ID=ISNULL(A.BIN_ID,'000')      
  JOIN     
  (    
  SELECT A.cn_id , SUM(QUANTITY) AS QUANTITY, SUM(CASE WHEN @BDONOTSHOWITEMDISC=0 THEN A.DISCOUNT_AMOUNT ELSE 0 END) AS ITEM_DISCOUNT_AMOUNT,    
  SUM(CASE WHEN QUANTITY>0 THEN (QUANTITY*(CASE WHEN @BDONOTSHOWITEMDISC=0 THEN RATE ELSE NET_RATE END)) ELSE 0 END) AS SLS_AT_MRP,    
  SUM(CASE WHEN QUANTITY<0 THEN ABS(QUANTITY*(CASE WHEN @BDONOTSHOWITEMDISC=0 THEN RATE ELSE NET_RATE END)) ELSE 0 END)  AS SLR_AT_MRP,  
  SUM(CASE WHEN A.BILL_LEVEL_TAX_METHOD=2 THEN ITEM_TAX_AMOUNT+isnull(a.igst_amount,0)+isnull(a.cgst_amount,0)+isnull(a.sgst_amount,0) ELSE 0 END) AS EXCL_TAX    
  FROM cnd01106   A   
  JOIN cnm01106  B ON A.cn_id =B.cn_id    
  GROUP BY A.cn_id    
  ) B ON A.cn_id = B.cn_id      
  JOIN LOCATION C ON a.location_Code  = C.DEPT_ID      
  LEFT OUTER JOIN VW_BILL_PAYMODE D ON A.CN_ID = D.MEMO_ID AND D.XN_TYPE = 'WSR'    
  WHERE --A.CM_MODE = 1 AND   --CHANGE    
  A.CN_DT BETWEEN @DFROMDT AND @DTODT   AND (A.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE  
  AND A.mode =1   
  AND a.location_Code  =(CASE WHEN @CDEPTID='' THEN a.location_Code  ELSE @CDEPTID END)    
  AND ISNULL(A.BIN_ID,'000') =(CASE WHEN (@CBINID = '')  THEN ISNULL(A.BIN_ID,'000') ELSE @CBINID END)      
  AND (@CUSERCODE='' OR  a.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )  
  --AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CB.CM_ID IS NOT NULL)) OR (@BDSM=0))   
 IF @SHOWACTIVELOCATIONS=1  
  BEGIN    
  
  INSERT INTO @OUTPUTC_WSL(DEPT_ID,CANCELLED,XN_TYPE)  
  SELECT A.DEPT_ID ,0 AS CANCELLED,'WSL' AS XN_TYPE  
  FROM LOCATION (NOLOCK) A  
  LEFT JOIN @OUTPUTC B ON A.DEPT_ID =B.DEPT_ID   
  WHERE B.DEPT_ID IS NULL  
  AND  INACTIVE=0  
  
 END  
 END  
    
  IF ISNULL(@NSUMMARYTYPE,0) IN (1)  
 BEGIN  
  IF @NMODE = 1    
   SELECT XN_TYPE,DEPT_ID, DEPT_NAME,BIN_ID , BIN_NAME, CONVERT(VARCHAR,CM_DT,105) AS CM_DT, CM_NO, QUANTITY, SLS_AT_MRP, SLR_AT_MRP,     
     NET_SLS_AT_MRP, DISCOUNT_AMOUNT, DISCOUNT_PERCENTAGE, NET_AMOUNT,    
     ATD_CHARGES, CASH_AMOUNT, CC_AMOUNT, CN_AMOUNT, ADVANCE_AMOUNT_ADJUSTED,    
     OTHER_DOC_AMOUNT, CREDIT_AMOUNT,CNISSUE_AMOUNT, BANK_CHARGES, MISC_AMOUNT,GIFT_VOUCHERS,Walet , CANCELLED, ROUND_OFF,EXCL_TAX   
   FROM @OUTPUTC ORDER BY CONVERT(DATETIME,CM_DT), CM_NO, DEPT_ID    
  ELSE    
   SELECT XN_TYPE,DEPT_ID, DEPT_NAME,BIN_ID, BIN_NAME,  CONVERT(VARCHAR,CM_DT,105) AS CM_DT,      
  SUM(QUANTITY) AS QUANTITY, SUM(SLS_AT_MRP) AS SLS_AT_MRP, SUM(SLR_AT_MRP) AS SLR_AT_MRP,     
  SUM(NET_SLS_AT_MRP) AS NET_SLS_AT_MRP, SUM(DISCOUNT_AMOUNT) AS DISCOUNT_AMOUNT,     
  SUM(NET_AMOUNT) AS NET_AMOUNT, SUM(ATD_CHARGES) AS ATD_CHARGES, SUM(CASH_AMOUNT) AS CASH_AMOUNT,     
  SUM(CC_AMOUNT) AS CC_AMOUNT, SUM(CN_AMOUNT) AS CN_AMOUNT, SUM(ADVANCE_AMOUNT_ADJUSTED) AS ADVANCE_AMOUNT_ADJUSTED,    
  SUM(OTHER_DOC_AMOUNT) AS OTHER_DOC_AMOUNT, SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT,SUM(CNISSUE_AMOUNT) AS CNISSUE_AMOUNT  ,   
  SUM(BANK_CHARGES) AS BANK_CHARGES, SUM(MISC_AMOUNT) AS MISC_AMOUNT  ,SUM(GIFT_VOUCHERS) AS GIFT_VOUCHERS,sum(Walet) as Walet , SUM(ROUND_OFF) AS [ROUND_OFF],  
  SUM(EXCL_TAX) AS [EXCL_TAX],0 AS CANCELLED,'' AS CM_NO  
   FROM @OUTPUTC    
   WHERE CANCELLED=0  
   GROUP BY DEPT_ID, DEPT_NAME,BIN_ID, BIN_NAME,CM_DT,XN_TYPE  
   ORDER BY CASE WHEN  CM_DT IS NULL THEN 1 ELSE 0 END, CONVERT(DATETIME,CM_DT), DEPT_ID, DEPT_NAME,BIN_ID, BIN_NAME    
     
  SELECT ISNULL(@CERRMSGOUT,'') AS ALERT_MESSAGE   
  END  
  IF ISNULL(@NSUMMARYTYPE,0) IN (2)  
  BEGIN  
  IF @NMODE = 1    
   SELECT XN_TYPE,DEPT_ID, DEPT_NAME,BIN_ID , BIN_NAME, CONVERT(VARCHAR,CM_DT,105) AS CM_DT, CM_NO, QUANTITY, SLS_AT_MRP, SLR_AT_MRP,     
     NET_SLS_AT_MRP, DISCOUNT_AMOUNT, DISCOUNT_PERCENTAGE, NET_AMOUNT,    
     ATD_CHARGES, CASH_AMOUNT, CC_AMOUNT, CN_AMOUNT, ADVANCE_AMOUNT_ADJUSTED,    
     OTHER_DOC_AMOUNT, CREDIT_AMOUNT,CNISSUE_AMOUNT, BANK_CHARGES, MISC_AMOUNT,GIFT_VOUCHERS,Walet, CANCELLED, ROUND_OFF,EXCL_TAX   
   FROM @OUTPUTC_WSL ORDER BY CASE WHEN  CM_DT IS NULL THEN 1 ELSE 0 END, CONVERT(DATETIME,CM_DT), CM_NO, DEPT_ID   
  ELSE    
   SELECT XN_TYPE,DEPT_ID, DEPT_NAME,BIN_ID, BIN_NAME,  CONVERT(VARCHAR,CM_DT,105) AS CM_DT,      
  SUM(QUANTITY) AS QUANTITY, SUM(SLS_AT_MRP) AS SLS_AT_MRP, SUM(SLR_AT_MRP) AS SLR_AT_MRP,     
  SUM(NET_SLS_AT_MRP) AS NET_SLS_AT_MRP, SUM(DISCOUNT_AMOUNT) AS DISCOUNT_AMOUNT,     
  SUM(NET_AMOUNT) AS NET_AMOUNT, SUM(ATD_CHARGES) AS ATD_CHARGES, SUM(CASH_AMOUNT) AS CASH_AMOUNT,     
  SUM(CC_AMOUNT) AS CC_AMOUNT, SUM(CN_AMOUNT) AS CN_AMOUNT, SUM(ADVANCE_AMOUNT_ADJUSTED) AS ADVANCE_AMOUNT_ADJUSTED,    
  SUM(OTHER_DOC_AMOUNT) AS OTHER_DOC_AMOUNT, SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT,SUM(CNISSUE_AMOUNT) AS CNISSUE_AMOUNT  ,   
  SUM(BANK_CHARGES) AS BANK_CHARGES, SUM(MISC_AMOUNT) AS MISC_AMOUNT  ,SUM(GIFT_VOUCHERS) AS GIFT_VOUCHERS,sum(Walet) as Walet, SUM(ROUND_OFF) AS [ROUND_OFF],  
  SUM(EXCL_TAX) AS [EXCL_TAX],0 AS CANCELLED,'' AS CM_NO  
   FROM @OUTPUTC_WSL    
   WHERE CANCELLED=0  
   GROUP BY DEPT_ID, DEPT_NAME,BIN_ID, BIN_NAME,CM_DT,XN_TYPE 
   ORDER BY CASE WHEN  CM_DT IS NULL THEN 1 ELSE 0 END, CONVERT(DATETIME,CM_DT), DEPT_ID, DEPT_NAME,BIN_ID, BIN_NAME  
     
  SELECT '' AS ALERT_MESSAGE   
 END  
 IF ISNULL(@NSUMMARYTYPE,0) IN (3)  
  BEGIN  
  IF @NMODE = 1   
   SELECT XN_TYPE,DEPT_ID, DEPT_NAME,BIN_ID , BIN_NAME, CM_DT, CM_NO, QUANTITY, SLS_AT_MRP, SLR_AT_MRP,     
      NET_SLS_AT_MRP, DISCOUNT_AMOUNT, DISCOUNT_PERCENTAGE, NET_AMOUNT,    
      ATD_CHARGES, CASH_AMOUNT, CC_AMOUNT, CN_AMOUNT, ADVANCE_AMOUNT_ADJUSTED,    
      OTHER_DOC_AMOUNT, CREDIT_AMOUNT,CNISSUE_AMOUNT, BANK_CHARGES, MISC_AMOUNT,GIFT_VOUCHERS,Walet, CANCELLED, ROUND_OFF,EXCL_TAX  
      FROM  
      (   
      SELECT XN_TYPE,DEPT_ID, DEPT_NAME,BIN_ID , BIN_NAME, CONVERT(VARCHAR,CM_DT,105) AS CM_DT, CM_NO, QUANTITY, SLS_AT_MRP, SLR_AT_MRP,     
        NET_SLS_AT_MRP, DISCOUNT_AMOUNT, DISCOUNT_PERCENTAGE, NET_AMOUNT,    
        ATD_CHARGES, CASH_AMOUNT, CC_AMOUNT, CN_AMOUNT, ADVANCE_AMOUNT_ADJUSTED,    
        OTHER_DOC_AMOUNT, CREDIT_AMOUNT,CNISSUE_AMOUNT, BANK_CHARGES, MISC_AMOUNT,GIFT_VOUCHERS,Walet, CANCELLED, ROUND_OFF,EXCL_TAX   
      FROM @OUTPUTC   
       
      UNION ALL  
      SELECT XN_TYPE,DEPT_ID, DEPT_NAME,BIN_ID , BIN_NAME, CONVERT(VARCHAR,CM_DT,105) AS CM_DT, CM_NO, QUANTITY, SLS_AT_MRP, SLR_AT_MRP,     
        NET_SLS_AT_MRP, DISCOUNT_AMOUNT, DISCOUNT_PERCENTAGE, NET_AMOUNT,    
        ATD_CHARGES, CASH_AMOUNT, CC_AMOUNT, CN_AMOUNT, ADVANCE_AMOUNT_ADJUSTED,    
        OTHER_DOC_AMOUNT, CREDIT_AMOUNT,CNISSUE_AMOUNT, BANK_CHARGES, MISC_AMOUNT,GIFT_VOUCHERS,Walet, CANCELLED, ROUND_OFF,EXCL_TAX 
      FROM @OUTPUTC_WSL  
   )A ORDER BY  CM_DT, CM_NO ,DEPT_ID   
 ELSE  
    
  SELECT *  
  FROM  
  (  
  
   SELECT XN_TYPE,DEPT_ID, DEPT_NAME,BIN_ID, BIN_NAME,  CONVERT(VARCHAR,CM_DT,105) AS CM_DT,   CM_DT AS CMDT,      
  SUM(QUANTITY) AS QUANTITY, SUM(SLS_AT_MRP) AS SLS_AT_MRP, SUM(SLR_AT_MRP) AS SLR_AT_MRP,     
  SUM(NET_SLS_AT_MRP) AS NET_SLS_AT_MRP, SUM(DISCOUNT_AMOUNT) AS DISCOUNT_AMOUNT,     
  SUM(NET_AMOUNT) AS NET_AMOUNT, SUM(ATD_CHARGES) AS ATD_CHARGES, SUM(CASH_AMOUNT) AS CASH_AMOUNT,     
  SUM(CC_AMOUNT) AS CC_AMOUNT, SUM(CN_AMOUNT) AS CN_AMOUNT, SUM(ADVANCE_AMOUNT_ADJUSTED) AS ADVANCE_AMOUNT_ADJUSTED,    
  SUM(OTHER_DOC_AMOUNT) AS OTHER_DOC_AMOUNT, SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT,SUM(CNISSUE_AMOUNT) AS CNISSUE_AMOUNT  ,   
  SUM(BANK_CHARGES) AS BANK_CHARGES, SUM(MISC_AMOUNT) AS MISC_AMOUNT  ,SUM(GIFT_VOUCHERS) AS GIFT_VOUCHERS,sum(Walet) as Walet,  
   SUM(ROUND_OFF) AS [ROUND_OFF],SUM(EXCL_TAX) AS [EXCL_TAX],0 AS CANCELLED,'' AS CM_NO   
   FROM @OUTPUTC    
   WHERE CANCELLED=0  
   GROUP BY DEPT_ID, DEPT_NAME,BIN_ID, BIN_NAME,CM_DT,XN_TYPE 
     
   UNION ALL  
     
   SELECT XN_TYPE,DEPT_ID, DEPT_NAME,BIN_ID, BIN_NAME,  CONVERT(VARCHAR,CM_DT,105) AS CM_DT,  CM_DT AS CMDT,    
  SUM(QUANTITY) AS QUANTITY, SUM(SLS_AT_MRP) AS SLS_AT_MRP, SUM(SLR_AT_MRP) AS SLR_AT_MRP,     
  SUM(NET_SLS_AT_MRP) AS NET_SLS_AT_MRP, SUM(DISCOUNT_AMOUNT) AS DISCOUNT_AMOUNT,     
  SUM(NET_AMOUNT) AS NET_AMOUNT, SUM(ATD_CHARGES) AS ATD_CHARGES, SUM(CASH_AMOUNT) AS CASH_AMOUNT,     
  SUM(CC_AMOUNT) AS CC_AMOUNT, SUM(CN_AMOUNT) AS CN_AMOUNT, SUM(ADVANCE_AMOUNT_ADJUSTED) AS ADVANCE_AMOUNT_ADJUSTED,    
  SUM(OTHER_DOC_AMOUNT) AS OTHER_DOC_AMOUNT, SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT,SUM(CNISSUE_AMOUNT) AS CNISSUE_AMOUNT  ,   
  SUM(BANK_CHARGES) AS BANK_CHARGES, SUM(MISC_AMOUNT) AS MISC_AMOUNT  ,SUM(GIFT_VOUCHERS) AS GIFT_VOUCHERS,sum(Walet) as Walet, SUM(ROUND_OFF) AS [ROUND_OFF],  
  SUM(EXCL_TAX) AS [EXCL_TAX],0 AS CANCELLED,'' AS CM_NO  
   FROM @OUTPUTC_WSL   
   WHERE CANCELLED=0  
   GROUP BY DEPT_ID, DEPT_NAME,BIN_ID, BIN_NAME,CM_DT,XN_TYPE  
   )B  
   ORDER BY CASE WHEN  CMDT IS NULL THEN 1 ELSE 0 END, CMDT, DEPT_ID, DEPT_NAME,BIN_ID, BIN_NAME    
     
   SELECT ISNULL(@CERRMSGOUT,'') AS ALERT_MESSAGE   
  END  
    
   
END  
--******************************************* END OF PROCEDURE SP_DSR_DETAILSALE  