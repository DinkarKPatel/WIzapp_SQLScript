create PROCEDURE POSTACT_GST_JWR 
(
	@DTTO DATETIME,
	@CDEPTID CHAR(4)='',
	@cAcCode CHAR(10)='',
	@NLOOP NUMERIC(1,0)
	
)
AS
BEGIN
    DECLARE @CSTEP VARCHAR(10),@BPOSTDISCOUNTSEPARATELY BIT,@CDISCACCODE VARCHAR(10),@BPOSTFREIGHTSEPARATELY	BIT
			,@CFREIGHTACCODE VARCHAR(10),@BPOSTOCTROISEPARATELY BIT,@CJOBWORKACCODE VARCHAR(10),
			@BPOSTINSURANCESEPARATELY BIT,@CTDSACCODE VARCHAR(10),
			@BPOSTOTHERCHARGESSEPARATELY BIT,@COTHERCHARGESACCODE VARCHAR(10),@CROUNDOFFACCODE VARCHAR(10),@NCTR NUMERIC(10,0),
			@NSUBTOTAL NUMERIC(14,2),@NTAXAMOUNT NUMERIC(14,2), @CPURACCODE VARCHAR(50),@CTAXACCODE VARCHAR(100),
			@LPOSTTAXSEPARATELY NUMERIC(14,2),@CMEMOID VARCHAR(50),@LOUTSTATIONPARTY BIT,@TMPDR NUMERIC(14,2),
			@TMPCR NUMERIC(14,2),@CCURSTATECODE	VARCHAR(10),@CVMID	VARCHAR(40),@CLOCATIONID CHAR(2),
			@CLASTBILLNO VARCHAR(40),@DTMPVENDORBILLDT DATETIME,@CRMLIST VARCHAR(300),@NTMPCREDITDAYS NUMERIC(10),
			@NTMPCRDISCOUNTPERCENTAGE NUMERIC(14,2),@DLASTINVDT	DATETIME,@CVOUCHERCODE VARCHAR(10),
			@COLDBILLTYPE VARCHAR(10),@CLASTACCODE VARCHAR(10),@CLASTPARTYNAME VARCHAR(100),@NTOTQUANTITY NUMERIC(14,2),
			@NTOTNETAMOUNT NUMERIC(14,2),@CDEPTNAME VARCHAR(100),@CVOUCHERNO VARCHAR(10),@dXnDt DATETIME
	SET @CSTEP=10
	DECLARE @CPARTYACCODE VARCHAR(10),@CPARTYSTATECODE VARCHAR(10),@NNETAMOUNT NUMERIC(14,2),
			@NDISCAMOUNT NUMERIC(14,2),@NFREIGHT NUMERIC(14,2),	@NOTHER NUMERIC(14,2),@NROUNDOFF NUMERIC(14,2),
			@NDRTOTAL NUMERIC(14,2),@NCRTOTAL NUMERIC(14,2),@CCUTOFFDATE VARCHAR(20),@CXNTYPE VARCHAR(10),
			@CAC_CODE VARCHAR(20),@CVDID VARCHAR(40),@BBLANKACFOUND BIT,@CERRORMSG VARCHAR(MAX),
			@CLOCGSTSTATECODE CHAR(7),@CPARTYGSTSTATECODE CHAR(7),@cXnNo VARCHAR(20)
    
    SET @CFREIGHTACCODE=''
    SET @CROUNDOFFACCODE=''
    SET @CSTEP=20
    --THIS TABLE VARIABLE STORE ERROR OF OF MEMO ID
    DECLARE @ERRORS TABLE
	(
		XN_ID	VARCHAR(40),XN_TYPE VARCHAR(30),XN_NO VARCHAR(40),
		XN_DT DATETIME,XN_AMT NUMERIC(14,2),XN_AC VARCHAR(100),
		ERR_DESC VARCHAR(500)
	)   
    
    SET @CSTEP=30
    DECLARE @VCHC TABLE 
	(
		AC_CODE CHAR(10),NARRATION VARCHAR(200),XN_NO VARCHAR(30),
		XN_DT DATETIME,DEPT_ID CHAR(4),AMOUNT NUMERIC(14,4),XN_ID VARCHAR(22),
		REF_BILL_NO VARCHAR(50),REF_BILL_DATE DATETIME,	ENTRY_ID INT
		,CRDAYS NUMERIC(5),narraton varchar(1000)
	)
	
	SET @CSTEP=40
	DECLARE @VDC TABLE 
	(
		VD_ID VARCHAR(50),				VM_ID VARCHAR(40),				AC_CODE CHAR(10), 
		NARRATION VARCHAR(200),			DEBIT_AMOUNT NUMERIC(14,4),		CREDIT_AMOUNT NUMERIC(14,4),
		X_TYPE CHAR(2), 				VS_AC_CODE CHAR(10),	 		REF_BILL_NO VARCHAR(40), 
		CREDIT_DAYS NUMERIC(10),		CR_DISCOUNT_PERCENTAGE NUMERIC(14,2),		
		VAT_ENTRY BIT,REF_BILL_DATE DATETIME, AC_NAME VARCHAR(100)
	)
	
	SET @CSTEP=50
	DECLARE @VMC TABLE
	(
		VM_ID VARCHAR(400), 			VOUCHER_NO VARCHAR(400), 		VOUCHER_DT DATETIME, 
		VOUCHER_CODE CHAR(10), 		DEPT_ID CHAR(4),				BILL_TYPE VARCHAR(300),
		BILL_NO VARCHAR(200), 			BILL_ID VARCHAR(220), 			BILL_DT DATETIME, 
		BILL_AC_CODE VARCHAR(100),		DRTOTAL NUMERIC(20,2),			CRTOTAL NUMERIC(20,2), 
		CASH_VOUCHER BIT, 				SALE_VOUCHER BIT, 				QUANTITY NUMERIC(20,2), 
		ANGADIA_CODE CHAR(70), 			LR_NO VARCHAR(500), 			LR_DT DATETIME,
		PARTY_NAME VARCHAR(1000),		NET_AMOUNT NUMERIC(20,2), 		BILL_STATUS VARCHAR(1000),
		RM_LIST VARCHAR(3000), 		CANCELLED BIT,					DEPT_NAME VARCHAR(100),
		VOUCHER_TYPE VARCHAR(100)	
	)
	
	SET @CSTEP=60
	DECLARE @VLINK TABLE
	(
		VM_ID VARCHAR(100),MEMO_ID VARCHAR(100),XN_TYPE VARCHAR(20),LAST_UPDATE DATETIME
	)
	
	DECLARE @CCREDITORHEADS VARCHAR(2000)
	SET @CCREDITORHEADS = DBO.FN_ACT_TRAVTREE( '0000000021' ) 
	DECLARE @TBILL_BY_BILL_REF TABLE(VD_ID VARCHAR(40),REF_NO VARCHAR(40),AMOUNT NUMERIC(18,4),LAST_UPDATE DATETIME
								,X_TYPE VARCHAR(20),CR_DAYS NUMERIC(5),REF_TYPE VARCHAR(10),VM_ID VARCHAR(40))
	
	SELECT TOP 1 @CCUTOFFDATE=CUTOFFDATE FROM GST_ACCOUNTS_CONFIG_MST WHERE XN_TYPE ='JWR'
	
	SET @CCUTOFFDATE=ISNULL(@CCUTOFFDATE,'')
	
	SET @CSTEP=70
	SET @CVOUCHERCODE = '0000000006'
    BEGIN TRY
			
			SET @CSTEP=80
			IF OBJECT_ID('TEMPDB..#POSTS','U') IS NOT NULL
				DROP TABLE #POSTS 
			
			SET @CSTEP=90
			--THIS TABLE STORE ALL PENDING MEMO_ID 
			CREATE TABLE #POSTS (MEMO_ID VARCHAR(30),MODE VARCHAR(10))
			
			SET @CSTEP=100

			DECLARE @IMAXLEVEL INT
			
			--GETTING THE MAX LEVEL OF APPROVAL FOR PURCHASE TRANSACTION
			SELECT @IMAXLEVEL=MAX(LEVEL_NO) 
			FROM XN_APPROVAL_CHECKLIST_LEVELS 
			WHERE XN_TYPE='JWR' AND INACTIVE=0
			
			IF EXISTS(SELECT TOP 1 'U' FROM XN_APPROVAL_CHECKLIST_LEVELS  WHERE XN_TYPE='JWR' AND INACTIVE=0 AND ISNULL(AC_POSTING,0)<>0)
			BEGIN
			    SELECT @IMAXLEVEL=LEVEL_NO
				FROM XN_APPROVAL_CHECKLIST_LEVELS 
				WHERE XN_TYPE='JWR' AND INACTIVE=0 AND ISNULL(AC_POSTING,0)<>0
			END
						
			SET @IMAXLEVEL=ISNULL(@IMAXLEVEL,0)

			--GETTING LIST OF JOBWORK RECEIVE INVOICES THAT QUALIFY FOR VOUCHER POSTING
			INSERT INTO #POSTS (MEMO_ID,MODE)
	        SELECT A.RECEIPT_ID,'JWR' AS MODE 
	        FROM JOBWORK_RECEIPT_MST A
	        JOIN LOCATION SL ON SL.DEPT_ID =a.location_Code 
			LEFT JOIN loc_accounting_company lac1 (NOLOCK) ON lac1.pan_no=sl.PAN_NO
			LEFT JOIN loc_accounting_company lac2 (NOLOCK) ON lac2.pan_no=SUBSTRING(sl.loc_gst_no,3,10)
			JOIN prd_Agency_mst PAM ON a.AGENCY_CODE= PAM.agency_code
			LEFT JOIN LM01106 LM ON PAM.ac_code=LM.AC_CODE	        
	        LEFT OUTER JOIN 
	        (
				SELECT B.MEMO_ID,B.LAST_UPDATE
				FROM POSTACT_VOUCHER_LINK B 
				JOIN VM01106 C ON C.VM_ID = B.VM_ID 
				WHERE C.CANCELLED=0 AND B.XN_TYPE = 'JWR' 
	        )VM  ON A.RECEIPT_ID = VM.MEMO_ID  
	        WHERE  
	         -- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES
	        /*JOBWORK RECEIVE IS NOT CANCELLED.*/
	        ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)  
	        /*JOBWORK RECEIVE RECEIPT_DT IS LESS THAN THE SPECIFIED DATE.*/
	        AND A.RECEIPT_DT <= @DTTO
	        /*IF CUTOFF DATE IS SPECIFIED, CONSIDER JOBWORK RECEIVE AFTER THE CUTOFF DATE*/
	        AND (ISNULL(@CCUTOFFDATE,'')='' OR A.RECEIPT_DT>@CCUTOFFDATE)
	        /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/
	        AND (ISNULL(@CDEPTID,'')='' OR a.location_Code =@CDEPTID)
	        AND (ISNULL(@CACCODE,'')='' OR lm.ac_code=@cAcCode)
			AND ISNULL(A.BILL_CHALLAN_MODE,1) IN (0,1) --- (Did changes this from 0 to 1 as per confirmation by Rohit agst Ticket#03-0633
												--- ( that is taken as Bill mode for its value =1 from  the day one)
	        /*JOBWORK RECEIVE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/
	        AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE) 
			AND ISNULL(A.APPROVEDLEVELNO,0)>=@IMAXLEVEL
			AND (lac1.pan_no IS NOT NULL OR lac2.pan_no IS NOT NULL)
				
	        
	        INSERT INTO #POSTS (MEMO_ID,MODE)
	        SELECT A.MEMO_ID ,'PPC_JWR' AS MODE 
	        FROM PPC_AGENCY_REC_FG_MST  A
	        JOIN LOCATION SL ON SL.DEPT_ID =a.location_code
			LEFT JOIN loc_accounting_company lac1 (NOLOCK) ON lac1.pan_no=sl.PAN_NO
			LEFT JOIN loc_accounting_company lac2 (NOLOCK) ON lac2.pan_no=SUBSTRING(sl.loc_gst_no,3,10)
	        LEFT OUTER JOIN 
	        (
				SELECT B.MEMO_ID,B.LAST_UPDATE
				FROM POSTACT_VOUCHER_LINK B 
				JOIN VM01106 C ON C.VM_ID = B.VM_ID 
				WHERE C.CANCELLED=0 AND B.XN_TYPE = 'PPC_JWR' 
	        )VM  ON A.MEMO_ID = VM.MEMO_ID  
	        WHERE  
	         -- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES
	        /*JOBWORK RECEIVE IS NOT CANCELLED.*/
	        ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)  	 
	        /*JOBWORK RECEIVE RECEIPT_DT IS LESS THAN THE SPECIFIED DATE.*/
	        AND A.MEMO_DT  <= @DTTO
	        /*IF CUTOFF DATE IS SPECIFIED, CONSIDER JOBWORK RECEIVE AFTER THE CUTOFF DATE*/
	        AND (ISNULL(@CCUTOFFDATE,'')='' OR A.MEMO_DT>@CCUTOFFDATE)
	        /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/
	        AND (ISNULL(@CDEPTID,'')='' OR a.location_code=@CDEPTID)
	        /*JOBWORK RECEIVE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/
	        AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE) 
			AND (lac1.pan_no IS NOT NULL OR lac2.pan_no IS NOT NULL)	        
	        
			--select 'check #posts', * FROM #POSTS
			
	       IF NOT EXISTS (SELECT TOP 1 * FROM #POSTS)
				GOTO ENDPROC
	        
			SET @CSTEP=230
			SELECT @CJOBWORKACCODE = VALUE  FROM GST_ACCOUNTS_CONFIG_DET_OTHERS WHERE XN_TYPE ='JWR' AND COLUMNNAME ='JWR_AC_CODE' 
			
			SET @CSTEP=240
			SET @CJOBWORKACCODE=ISNULL(@CJOBWORKACCODE,'')
			
		
			SET @CSTEP=260
			
			--IF ROUND OFF IS CONSIDERED AS PART OF STOCK THEN CLUB IT IN JOBWORK RECEIVE A/C OTHERWISE POST SEPARATELY
	
			SET @CSTEP = 310
			SELECT TOP 1 @CROUNDOFFACCODE =VALUE  FROM GST_ACCOUNTS_CONFIG_DET_OTHERS WHERE XN_TYPE ='JWR' AND COLUMNNAME ='ROFF_AC_CODE'
			
			SET @CSTEP = 320
			SET @CROUNDOFFACCODE=ISNULL(@CROUNDOFFACCODE,'') 
		
			SET @CSTEP = 330
			CREATE INDEX IX_TEMP_WSLTABLE_RM_ID ON #POSTS(MEMO_ID)
		    SET @CSTEP = 350
			
			    
	        --SELECT COUNT(*) FROM #POSTS
	        SET @CSTEP = 360
	        IF OBJECT_ID('TEMPDB..#V_PROCESS','U') IS NOT NULL
				DROP TABLE #V_PROCESS
			
			SET @CSTEP = 370
		 	SELECT    (CASE WHEN ISNULL(jrm.challan_no,'')='' THEN JRM.RECEIPT_NO ELSE jrm.challan_no END) AS receipt_no
					, JRM.RECEIPT_ID
					, (CASE WHEN ISNULL(jrm.challan_dt,'')='' THEN JRM.RECEIPT_DT ELSE jrm.challan_dt END) AS RECEIPT_dT
					, LM.AC_CODE
					, JRM.REMARKS
					, JRM.NET_AMOUNT 
					, JRM.SUBTOTAL 
					, JRM.TDS
					, ISNULL(TDS.PAYABLE_AC_CODE,'') AS TDS_AC_CODE 
					, JRM.ROUND_OFF 
					, JRM.location_Code  DEPT_ID 
					, JRM.FIN_YEAR
					, LM.AC_NAME 
					, JRD.QUANTITY
					,'JWR' AS XN_TYPE
					  ,'JWR' AS POSTING_XN_TYPE
					 ,other_charges_gst_percentage
		 			,ISNULL(OTHER_CHARGES_TAXABLE_VALUE,0) AS OTHERCHARGES
 					,OTHER_CHARGES_IGST_AMOUNT
 					,OTHER_CHARGES_CGST_AMOUNT
 					,OTHER_CHARGES_SGST_AMOUNT
		 			,ISNULL(freight_taxable_value,0) freight
					,FREIGHT_GST_PERCENTAGE
 					,FREIGHT_IGST_AMOUNT
 					,FREIGHT_CGST_AMOUNT
 					,FREIGHT_SGST_AMOUNT

					  ,LEFT('0000000000',10) AS IGST_REVENUE_AC_CODE
					  ,LEFT('0000000000',10) AS IGST_TAX_AC_CODE
					  ,LEFT('0000000000',10) AS LGST_REVENUE_AC_CODE
					  ,LEFT('0000000000',10) AS CGST_TAX_AC_CODE
					  ,LEFT('0000000000',10) AS SGST_TAX_AC_CODE
					   ,LEFT('0000000000',10) AS OTHER_CHARGES_IGST_REVENUE_AC_CODE
					   ,LEFT('0000000000',10) AS OTHER_CHARGES_IGST_TAX_AC_CODE
					  ,LEFT('0000000000',10) AS OTHER_CHARGES_LGST_REVENUE_AC_CODE
					  ,LEFT('0000000000',10) AS OTHER_CHARGES_CGST_TAX_AC_CODE
					  ,LEFT('0000000000',10) AS OTHER_CHARGES_SGST_TAX_AC_CODE 
					  ,LEFT('0000000000',10) AS FREIGHT_IGST_REVENUE_AC_CODE
					   ,LEFT('0000000000',10) AS FREIGHT_IGST_TAX_AC_CODE
					  ,LEFT('0000000000',10) AS FREIGHT_LGST_REVENUE_AC_CODE
					  ,LEFT('0000000000',10) AS FREIGHT_CGST_TAX_AC_CODE
					  ,LEFT('0000000000',10) AS FREIGHT_SGST_TAX_AC_CODE 
					  ,0 gst_cess_percentage,'' gst_cess_ac_code     
					  ,LEFT('',1) AS SECTION_CODE
					  ,LEFT('',1) AS SUB_SECTION_CODE
					  ,gst_state_code as loc_gst_state_code
					  ,ac_gst_state_code as party_gst_state_code	
					  ,jrd.gst_percentage,cgst_amount,sgst_amount,igst_amount,xn_value_without_gst	,JRM.cancelled						
			INTO #V_PROCESS
			FROM JOBWORK_RECEIPT_MST JRM 
			JOIN 
			(
				SELECT RECEIPT_ID,SUM(QUANTITY) AS QUANTITY,SUM(cgst_amount) as cgst_amount,a.gst_percentage
				,SUM(sgst_amount) as sgst_amount,SUM(igst_amount) as igst_amount,SUM(xn_value_without_gst) as xn_value_without_gst
				FROM JOBWORK_RECEIPT_DET A
				JOIN #POSTS PT ON PT.MEMO_ID = A.RECEIPT_ID AND PT.MODE='JWR'
				GROUP BY RECEIPT_ID,a.gst_percentage
			)JRD ON JRM.RECEIPT_ID=JRD.RECEIPT_ID
			JOIN #POSTS PT ON PT.MEMO_ID = JRM.RECEIPT_ID AND PT.MODE='JWR'
			JOIN prd_Agency_mst PAM ON JRM.AGENCY_CODE= PAM.agency_code
			JOIN LM01106 LM ON PAM.ac_code=LM.AC_CODE
			LEFT OUTER JOIN LMP01106 lmp ON lmp.ac_code=lm.ac_code
			JOIN location loc ON loc.dept_id=jrm.location_Code
			LEFT OUTER JOIN TDS_SECTION TDS ON TDS.TDS_CODE=JRM.TDS_CODE
			WHERE JRM.NET_AMOUNT<>0 
			UNION ALL
			SELECT    JRM.MEMO_NO AS  RECEIPT_NO
					, JRM.MEMO_ID AS  RECEIPT_ID
					, JRM.MEMO_DT AS RECEIPT_DT
					, LM.AC_CODE
					, '' AS REMARKS
					, JRM.NET_AMOUNT 
					, JRM.NET_AMOUNT  AS SUBTOTAL 
					, 0 AS TDS 
					,'' as tds_ac_code
					, 0 AS ROUND_OFF 
					, jrm.location_code AS DEPT_ID 
					, JRM.FIN_YEAR
					, LM.AC_NAME 
					, JRD.QUANTITY
					,'PPC_JWR' AS XN_TYPE
					,'JWR' AS POSTING_XN_TYPE
		 			,0 other_charges_gst_percentage
					,0 AS OTHERCHARGES
 					,0 OTHER_CHARGES_IGST_AMOUNT
 					,0 OTHER_CHARGES_CGST_AMOUNT
 					,0 OTHER_CHARGES_SGST_AMOUNT
					,0 freight
					,0 FREIGHT_GST_PERCENTAGE
 					,0 FREIGHT_IGST_AMOUNT
 					,0 FREIGHT_CGST_AMOUNT
 					,0 FREIGHT_SGST_AMOUNT
			,LEFT('0000000000',10) AS IGST_REVENUE_AC_CODE
					  ,LEFT('0000000000',10) AS IGST_TAX_AC_CODE
					  ,LEFT('0000000000',10) AS LGST_REVENUE_AC_CODE
					  ,LEFT('0000000000',10) AS CGST_TAX_AC_CODE
					  ,LEFT('0000000000',10) AS SGST_TAX_AC_CODE
					   ,LEFT('0000000000',10) AS OTHER_CHARGES_IGST_REVENUE_AC_CODE
					   ,LEFT('0000000000',10) AS OTHER_CHARGES_IGST_TAX_AC_CODE
					  ,LEFT('0000000000',10) AS OTHER_CHARGES_LGST_REVENUE_AC_CODE
					  ,LEFT('0000000000',10) AS OTHER_CHARGES_CGST_TAX_AC_CODE
					  ,LEFT('0000000000',10) AS OTHER_CHARGES_SGST_TAX_AC_CODE 
					  ,LEFT('0000000000',10) AS FREIGHT_IGST_REVENUE_AC_CODE
					   ,LEFT('0000000000',10) AS FREIGHT_IGST_TAX_AC_CODE
					  ,LEFT('0000000000',10) AS FREIGHT_LGST_REVENUE_AC_CODE
					  ,LEFT('0000000000',10) AS FREIGHT_CGST_TAX_AC_CODE
					  ,LEFT('0000000000',10) AS FREIGHT_SGST_TAX_AC_CODE 
					  ,0 gst_cess_percentage,'' gst_cess_ac_code     
					  ,LEFT('',1) AS SECTION_CODE
					  ,LEFT('',1) AS SUB_SECTION_CODE		
					  ,gst_state_code as loc_gst_state_code
					  ,ac_gst_state_code as party_gst_state_code													  			
					  ,jrd.gst_percentage,cgst_amount,sgst_amount,igst_amount,xn_value_without_gst,JRM.CANCELLED
			FROM PPC_AGENCY_REC_FG_MST JRM 
			JOIN 
			(
				SELECT MEMO_ID,gst_percentage, SUM(QUANTITY) AS QUANTITY,SUM(cgst_amount) as cgst_amount
				,SUM(sgst_amount) as sgst_amount,SUM(igst_amount) as igst_amount,SUM(xn_value_without_gst) as xn_value_without_gst
				FROM PPC_AGENCY_REC_FG_DET 
				GROUP BY MEMO_ID,gst_percentage
			)JRD ON JRM.MEMO_ID =JRD.MEMO_ID
			JOIN #POSTS PT ON PT.MEMO_ID = JRM.MEMO_ID AND PT.MODE='PPC_JWR'
			JOIN JWRCONFIGDET PAM ON JRM.AC_CODE = PAM.AGENCYCODE
			JOIN LM01106 LM ON PAM.AGENCYAC=LM.AC_CODE
			LEFT OUTER JOIN LMP01106 lmp ON lmp.ac_code=lm.ac_code
			JOIN location loc ON loc.dept_id=LEFT(jrm.memo_id,2)
			WHERE JRM.NET_AMOUNT<>0 		
		
		CREATE INDEX IX_V_PROCESS_RM_ID ON #V_PROCESS(RECEIPT_ID,XN_TYPE)

		IF OBJECT_ID('TEMPDB..#V_PROCESS_OTHERS','U') IS NOT NULL
			DROP TABLE #V_PROCESS_OTHERS
	
		SELECT TOP 1  'JWR' AS XN_TYPE,'ROFF_AC_CODE' AS COLUMNNAME,'ROUND OFF A/C' AS COLUMNDESC
		INTO #V_PROCESS_OTHERS FROM #V_PROCESS WHERE ISNULL(@CROUNDOFFACCODE,'') IN ('','0000000000')
		
		SET @CSTEP = 180  
		
		--select 'check #v_process',* from #V_PROCESS
		
		EXEC SP3S_GET_POSTING_BLANKAC
			@CXNTYPE='JWR',
			@NLOOP=@NLOOP,
			@CERRORMSG=@CERRORMSG OUTPUT,
			@BBLANKACFOUND=@BBLANKACFOUND OUTPUT		
		
		IF @BBLANKACFOUND=1 OR @CERRORMSG<>'' OR @NLOOP=0
			GOTO END_PROC

		
			
		
					
		SELECT @CMEMOID='',@CXNTYPE='',@CAC_CODE='',@NCTR=1
		SET @CSTEP = 380
		WHILE EXISTS(SELECT TOP 1 'U' FROM #V_PROCESS)
		BEGIN
			SET @CSTEP = 390
			SELECT TOP 1 @CMEMOID=RECEIPT_ID,@CXNTYPE=XN_TYPE,@CAC_CODE=AC_CODE,@cXnNo=receipt_no,@dXnDt=receipt_dt,
			@CLOCGSTSTATECODE=loc_gst_state_code,@cPartyGstStateCode=party_gst_state_code
			FROM #V_PROCESS
			
			SET @CSTEP = 400
			--PARTY ACCOUNT SHOULD BE CREDITED WITH THE NET AMOUNT
			INSERT @VCHC ( AC_CODE, AMOUNT )
			SELECT TOP 1 AC_CODE,-NET_AMOUNT
			FROM #V_PROCESS
			WHERE RECEIPT_ID=@CMEMOID AND NET_AMOUNT<>0
			AND XN_TYPE =@CXNTYPE

			INSERT @VCHC ( AC_CODE, AMOUNT,narration )
			SELECT TOP 1 AC_CODE,tds,'Tds Debited against Jobwork Receipt Memo# ' +receipt_no
			FROM #V_PROCESS
			WHERE RECEIPT_ID=@CMEMOID AND tds<>0
			AND XN_TYPE =@CXNTYPE
			
			--SET @CSTEP = 410
			----JOBWORK ACCOUNT SHOULD BE DEBITED WITH SUBTOTAL
			--INSERT @VCHC ( AC_CODE, AMOUNT )
			--SELECT TOP 1 @CJOBWORKACCODE,SUBTOTAL
			--FROM #V_PROCESS
			--WHERE RECEIPT_ID=@CMEMOID AND SUBTOTAL<>0
			--AND XN_TYPE =@CXNTYPE
			
			SET @CSTEP = 420
			--TDS ACCOUNT SHOULD BE DEBITED WITH TAX AMOUNT
			INSERT @VCHC ( AC_CODE, AMOUNT )
			SELECT TOP 1 tds_ac_code,-TDS
			FROM #V_PROCESS
			WHERE RECEIPT_ID=@CMEMOID AND TDS<>0
			AND XN_TYPE =@CXNTYPE
			
			SET @CSTEP = 470
			--ROUNDOFF AMOUNT SHOULD BE DEBITED
			INSERT @VCHC ( AC_CODE, AMOUNT )
			SELECT TOP 1 @CROUNDOFFACCODE
						,ROUND_OFF
			FROM #V_PROCESS
			WHERE RECEIPT_ID=@CMEMOID AND round_off<>0
			AND XN_TYPE =@CXNTYPE


		  INSERT @VCHC ( AC_CODE,AMOUNT ) 
			SELECT A.IGST_REVENUE_AC_CODE,xn_value_without_gst
			FROM #V_PROCESS A
			WHERE receipt_id=@CMEMOID  AND (IGST_AMOUNT<>0 OR (CGST_AMOUNT=0 AND @CLOCGSTSTATECODE<>@CPARTYGSTSTATECODE))
			AND xn_value_without_gst<>0
			UNION ALL
			SELECT A.LGST_REVENUE_AC_CODE,xn_value_without_gst
			FROM #V_PROCESS A
			WHERE receipt_id=@CMEMOID  AND (CGST_AMOUNT<>0 OR (IGST_AMOUNT=0 AND @CLOCGSTSTATECODE=@CPARTYGSTSTATECODE))
			AND xn_value_without_gst<>0
				  		
		  INSERT @VCHC ( AC_CODE,AMOUNT )   
		  SELECT A.IGST_TAX_AC_CODE,IGST_AMOUNT  
		  FROM #V_PROCESS  A
		  WHERE receipt_id=@CMEMOID AND IGST_AMOUNT<>0
		  UNION ALL
		  SELECT A.CGST_TAX_AC_CODE,CGST_AMOUNT  
		  FROM #V_PROCESS  A
		  WHERE receipt_id=@CMEMOID AND CGST_AMOUNT<>0
		  UNION ALL
		  SELECT A.SGST_TAX_AC_CODE,SGST_AMOUNT  
		  FROM #V_PROCESS A  
		  WHERE receipt_id=@CMEMOID AND SGST_AMOUNT<>0

		SET @cStep=490
		INSERT @VCHC (AC_CODE,AMOUNT,NARRATION)   
		SELECT (CASE WHEN ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)<>0 THEN 
		OTHER_CHARGES_IGST_REVENUE_AC_CODE ELSE OTHER_CHARGES_LGST_REVENUE_AC_CODE END),OTHERCHARGES,'Other Charges'
		FROM #V_PROCESS  A
		WHERE receipt_id=@CMEMOID AND OTHERCHARGES<>0 

		SET @cStep=492
		INSERT @VCHC (AC_CODE,AMOUNT,narration)   
		SELECT (CASE WHEN ISNULL(FREIGHT_IGST_AMOUNT,0)<>0 THEN 
		FREIGHT_IGST_REVENUE_AC_CODE ELSE FREIGHT_LGST_REVENUE_AC_CODE END),freight,'Freight'
		FROM #V_PROCESS  A
		WHERE receipt_id=@CMEMOID AND FREIGHT<>0 		
		SET @CSTEP=225
		

		INSERT @VCHC ( AC_CODE,AMOUNT,narration  )   
		SELECT OTHER_CHARGES_IGST_TAX_AC_CODE,OTHER_CHARGES_IGST_AMOUNT,'Other charges IGST'
		FROM #V_PROCESS  A
		WHERE receipt_id=@CMEMOID AND ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)<>0
		UNION ALL
		SELECT OTHER_CHARGES_CGST_TAX_AC_CODE,OTHER_CHARGES_CGST_AMOUNT,'Other charges CGST'
		FROM #V_PROCESS  A
		WHERE receipt_id=@CMEMOID  AND ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)<>0
		UNION ALL
		SELECT OTHER_CHARGES_SGST_TAX_AC_CODE,OTHER_CHARGES_SGST_AMOUNT,'Other charges SGST'
		FROM #V_PROCESS  A
		WHERE  receipt_id=@CMEMOID AND ISNULL(OTHER_CHARGES_SGST_AMOUNT,0)<>0

		INSERT @VCHC ( AC_CODE,AMOUNT,narration  )   
		SELECT FREIGHT_IGST_TAX_AC_CODE,FREIGHT_IGST_AMOUNT,'Freight IGST'
		FROM #V_PROCESS  A
		WHERE receipt_id=@CMEMOID AND ISNULL(FREIGHT_IGST_AMOUNT,0)<>0
		UNION ALL
		SELECT FREIGHT_CGST_TAX_AC_CODE,FREIGHT_CGST_AMOUNT,'Freight CGST'
		FROM #V_PROCESS  A
		WHERE receipt_id=@CMEMOID  AND ISNULL(FREIGHT_CGST_AMOUNT,0)<>0
		UNION ALL
		SELECT FREIGHT_SGST_TAX_AC_CODE,FREIGHT_SGST_AMOUNT,'Freight SGST'
		FROM #V_PROCESS  A
		WHERE  receipt_id=@CMEMOID AND ISNULL(Freight_SGST_AMOUNT,0)<>0
		
			SET @CSTEP = 500
			SET @CVMID = ''
			SELECT @CVMID = A.VM_ID 
			 FROM POSTACT_VOUCHER_LINK A 
			  JOIN VM01106 B ON A.VM_ID=B.VM_ID
			   WHERE B.CANCELLED=0 AND A.MEMO_ID = @CMEMOID AND A.XN_TYPE=@CXNTYPE
			
			SET @CSTEP = 510
			IF ISNULL(@CVMID,'') = ''
			BEGIN
			    SET @CVMID = 'LATERJWR-'+RTRIM(LTRIM(CONVERT(VARCHAR,@NCTR)))
				SET @NCTR = @NCTR+1
			END
			
			
			--select 'check @vchc',* from @vchc
			SET @CSTEP = 520
			INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )
			SELECT @CVMID,@CMEMOID,@CXNTYPE,LAST_UPDATE FROM JOBWORK_RECEIPT_MST WHERE RECEIPT_ID = @CMEMOID
			
			SET @CSTEP = 530
			INSERT @VDC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE, 
						  CREDIT_DAYS, CR_DISCOUNT_PERCENTAGE,AC_NAME)
			SELECT @CVMID
				, 'LATERJWR-'+CONVERT(VARCHAR,ROW_NUMBER() OVER(ORDER BY A.AC_CODE)) AS VD_ID
				, A.AC_CODE
				,(case when ISNULL(NARRATION,'')<>'' THEN NARRATION ELSE  'Job work Receipt'  END)+
				' against BILL# ' +@cXnNo AS NARRATION
				,(CASE WHEN SUM(AMOUNT)>0 THEN SUM(AMOUNT) ELSE 0 END) AS DEBIT_AMOUNT
				,(CASE WHEN SUM(AMOUNT)<0 THEN ABS(SUM(AMOUNT)) ELSE 0 END) AS CREDIT_AMOUNT
				,(CASE WHEN SUM(AMOUNT) > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE
				,A.CRDAYS
				,0
				,B.AC_NAME
	        FROM @VCHC A
	        JOIN LMV01106 B ON A.AC_CODE = B.AC_CODE
	        GROUP BY A.AC_CODE,A.XN_NO,B.AC_NAME,A.CRDAYS,narration
	        ORDER BY X_TYPE,ABS(SUM(AMOUNT)) DESC
			
			SET @CSTEP = 535
			INSERT @TBILL_BY_BILL_REF  
			   (VD_ID,REF_NO,AMOUNT,X_TYPE,CR_DAYS,LAST_UPDATE,VM_ID)  
			   SELECT A.VD_ID  
				  ,DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,@cXnNo,@dXnDt,'CR',@CVMID)
				  ,A.CREDIT_AMOUNT+A.DEBIT_AMOUNT
				  ,(CASE WHEN DEBIT_AMOUNT > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE  
				  ,A.CREDIT_DAYS,GETDATE(),@CVMID AS VM_ID
  				 
				  
			FROM @VDC A   
			JOIN LM01106 B ON A.AC_CODE=B.AC_CODE  
			JOIN LMP01106 C ON C.AC_CODE=B.AC_CODE
			WHERE VM_ID=@CVMID AND (CHARINDEX(B.HEAD_CODE,@CCREDITORHEADS)>0 OR ISNULL(C.ALLOW_CREDITOR_DEBTOR,0)=1)
		
	        SET @CSTEP = 540
	        SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC
		    WHERE VM_ID = @CVMID
		    
		    SET @CSTEP = 550    
	        SET @CVOUCHERNO = '' 
	        SELECT TOP 1 @CVOUCHERNO = VOUCHER_NO FROM VM01106 WHERE VM_ID = @CVMID
	        IF ISNULL(@CVOUCHERNO,'') = ''
				SET @CVOUCHERNO = @CVMID

			IF @nDrTotal<>@nCrTotal AND ABS(@nDrTotal-@nCrTotal)<=1
			BEGIN
				INSERT @VDC (VM_ID, VD_ID, AC_CODE,ac_name, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE)
				SELECT TOP 1 @cVmId as vm_id,'later-roff' as vd_id,@CROUNDOFFACCODE as ac_code,b.ac_name,narration,
				(CASE WHEN (@NDRTOTAL-@NCRTOTAL)>0 then 0 else ABS(@NDRTOTAL-@NCRTOTAL) END) AS DEBIT_AMOUNT,
				(CASE WHEN (@NDRTOTAL-@NCRTOTAL)<0 then 0 else (@NDRTOTAL-@NCRTOTAL) END) AS CREDIT_AMOUNT,
				(CASE WHEN (@NDRTOTAL-@NCRTOTAL)<0 then 'Dr' ELSE 'Cr' END) AS x_type
				FROM @vdC a JOIN lm01106 b on @CROUNDOFFACCODE=b.ac_code
				where vm_id=@cVmId
				
				SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC
				WHERE VM_ID = @CVMID
			END
					        
	        SET @CSTEP = 560
	        INSERT @VMC	( VM_ID,VOUCHER_NO,VOUCHER_DT, VOUCHER_CODE, DEPT_ID, 
							  BILL_TYPE, BILL_NO, BILL_ID, BILL_DT, BILL_AC_CODE, 
							  PARTY_NAME, QUANTITY, NET_AMOUNT, RM_LIST, CANCELLED,DRTOTAL,CRTOTAL
							  ,VOUCHER_TYPE,DEPT_NAME,BILL_STATUS )
			SELECT @CVMID,@CVOUCHERNO,A.RECEIPT_DT,@CVOUCHERCODE,A.DEPT_ID,'JWR',A.RECEIPT_NO,A.RECEIPT_ID,A.RECEIPT_DT
				  ,A.AC_CODE,B.AC_NAME,SUM(A.QUANTITY) AS quantity,A.NET_AMOUNT,A.RECEIPT_NO,0,@NDRTOTAL,@NCRTOTAL
				  ,'JOBWORK RECEIVE',C.DEPT_NAME,'NEW'  	
			FROM #V_PROCESS A
			JOIN LM01106 B ON A.AC_CODE=B.AC_CODE
			JOIN LOCATION C ON LEFT(A.RECEIPT_ID,2)=C.DEPT_ID
			WHERE A.RECEIPT_ID=@CMEMOID
			GROUP BY A.RECEIPT_DT,A.DEPT_ID,A.receipt_NO,A.RECEIPT_ID,A.RECEIPT_DT
				  ,A.AC_CODE,B.AC_NAME,A.NET_AMOUNT,C.DEPT_NAME
			
			--if @CMEMOID='JM01120JM00000002'
			--	select 'check tds entry',* from @vchC  
				
			SET @CSTEP = 570
			DELETE @VCHC
		    DELETE FROM #V_PROCESS WHERE RECEIPT_ID = @CMEMOID AND XN_TYPE=@CXNTYPE
		END			 			

ENDPROC:    



	DECLARE @nSpId VARCHAR(40)
	
   
  
   SET @CSTEP=572
   set @nSpId=ltrim(rtrim(str(@@spid)))  

	EXEC SP_CHKXNSAVELOG 'JWRPOST',@cStep,1,@nSpId,'',1	 	
	
	DELETE FROM ACT_VM01106_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_VD01106_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_BILL_BY_BILL_REF_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_POSTACT_VOUCHER_LINK_UPLOAD WHERE SP_ID=@NSPID
	
	SET @CSTEP = 574
	EXEC SP_CHKXNSAVELOG 'JWRPOST',@cStep,1,@nSpId,'',1	 		
	PRINT 'START POSTING JWR:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
    INSERT ACT_VM01106_UPLOAD	( ANGADIA_CODE, APPROVED, APPROVEDLEVELNO, ATTACHMENT_FILE, AUDITED_DT, 
    AUDITED_USER_CODE, BILL_AC_CODE, BILL_DT, BILL_ID, BILL_NO, BILL_TYPE, CANCELLED, CASH_VOUCHER, COMPANY_CODE, 
    CRTOTAL, DEPT_ID, DRTOTAL, EDT_USER_CODE, FIN_YEAR, FREEZE, LAST_UPDATE, LR_DT, LR_NO, MEMO, MRR_LIST, OP_ENTRY,
    QUANTITY, REF_NO, REF_VM_ID, REMINDER_DAYS, SALE_VOUCHER, SENT_FOR_RECON, SENT_TO_HO, SMS_SENT, SR_NO, 
    UPLOADED_TO_ACTIVSTREAM, USER_CODE, VM_ID, VM_NO, VOUCHER_CODE, VOUCHER_DT, VOUCHER_NO, SP_ID,TEMP_VM_ID )  
    SELECT 	  ANGADIA_CODE,0 AS APPROVED,0 AS APPROVEDLEVELNO,'' AS ATTACHMENT_FILE,'' AS AUDITED_DT, 
    '' AS AUDITED_USER_CODE, BILL_AC_CODE,BILL_DT, ISNULL(BILL_ID,'') AS BILL_ID,ISNULL( BILL_NO,'') AS BILL_NO,
     BILL_TYPE,CANCELLED, 
    0 AS CASH_VOUCHER, '01' AS COMPANY_CODE, CRTOTAL, DEPT_ID, DRTOTAL,'' AS EDT_USER_CODE,
	('01'+dbo.FN_GETFINYEAR(voucher_dt)) FIN_YEAR, 
    0 AS FREEZE,GETDATE() AS  LAST_UPDATE,'' AS LR_DT,'' AS LR_NO,0 AS MEMO,'' AS MRR_LIST,0 AS  OP_ENTRY,
    QUANTITY, '' AS REF_NO,'' AS REF_VM_ID,0 AS  REMINDER_DAYS,1 AS SALE_VOUCHER,0 AS  SENT_FOR_RECON,0 AS SENT_TO_HO, 
    0 AS SMS_SENT,0 AS SR_NO,0 AS UPLOADED_TO_ACTIVSTREAM,'0000000' AS USER_CODE,
    VM_ID,'' AS VM_NO, VOUCHER_CODE, VOUCHER_DT,VOUCHER_NO, @NSPID AS SP_ID,'' AS TEMP_VM_ID 
    FROM @vmC A 
    
	
	SET @CSTEP = 576
	EXEC SP_CHKXNSAVELOG 'JWRPOST',@cStep,1,@nSpId,'',1	 		

	PRINT 'START POSTING JWR:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_VD01106_UPLOAD	( AC_CODE, AUTOENTRY, CHK_RECON, COMPANY_CODE, CONTROL_AC, COST_CENTER_AC_CODE, COST_CENTER_DEPT_ID, 
	CREDIT_AMOUNT, DEBIT_AMOUNT, LAST_UPDATE, NARRATION, RECON_DT, SECONDARY_NARRATION, VAT_ENTRY, VD_ID, VM_ID, VS_AC_CODE, X_TYPE, SP_ID,TEMP_VD_ID )
	SELECT AC_CODE,0 AS AUTOENTRY,0 AS CHK_RECON,'01' AS COMPANY_CODE,0 AS CONTROL_AC,'0000000000' AS COST_CENTER_AC_CODE, 
	ISNULL(b.Dept_id,@CDEPTID) AS COST_CENTER_DEPT_ID,CREDIT_AMOUNT, DEBIT_AMOUNT,GETDATE() AS LAST_UPDATE,ISNULL(NARRATION,'') AS NARRATION,'' AS RECON_DT, 
	'' AS SECONDARY_NARRATION, 0 AS VAT_ENTRY,VD_ID,A.VM_ID,ISNULL(VS_AC_CODE,'0000000000') AS VS_AC_CODE,
	X_TYPE, @NSPID AS SP_ID,'' AS TEMP_VD_ID 
	FROM @vdC A
	JOIN @vmC B ON A.VM_ID=B.VM_ID
    WHERE (DEBIT_AMOUNT<>0 OR CREDIT_AMOUNT<>0)

	
	SET @CSTEP = 578
	EXEC SP_CHKXNSAVELOG 'JWRPOST',@cStep,1,@nSpId,'',1	 		
	PRINT 'START POSTING JWR:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_BILL_BY_BILL_REF_UPLOAD	( ADJ_REMARKS, AMOUNT, BB_ROW_ID, CR_DAYS, LAST_UPDATE, PAYMENT_ADJ_REF_NO, 
	REF_NO,  REMARKS, VD_ID, X_TYPE, SP_ID ,VM_ID,cd_percentage,cd_base_amount,ignore_cd_base_amount,
	cd_posted,org_bill_amount,org_bill_dt,org_bill_no)  
	SELECT '' AS ADJ_REMARKS,AMOUNT,'' AS BB_ROW_ID,0 AS CR_DAYS,GETDATE() AS LAST_UPDATE,'' AS PAYMENT_ADJ_REF_NO, 
	a.ref_no, '' AS REMARKS,A.VD_ID,A.X_TYPE,@NSPID AS SP_ID,A.VM_ID,
	0 cd_percentage,0 cd_base_amount,0 ignore_cd_base_amount,0 cd_posted,d.net_amount as org_bill_amount,
	d.inv_DT org_bill_dt,d.inv_no org_bill_no FROM @TBILL_BY_BILL_REF A
    JOIN @vdC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID
    JOIN @vmC C ON B.VM_ID=C.VM_ID
	JOIN @vLink v ON v.VM_ID=c.VM_ID
	LEFT JOIN inm01106 d ON d.inv_id=v.MEMO_ID
    WHERE A.AMOUNT<>0
	
	SET @CSTEP = 580
	EXEC SP_CHKXNSAVELOG 'JWRPOST',@cStep,1,@nSpId,'',1	 		
	
	PRINT 'START POSTING JWR:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_POSTACT_VOUCHER_LINK_UPLOAD	( LAST_UPDATE, MEMO_ID, VM_ID, XN_TYPE, SP_ID )  
	SELECT 	LAST_UPDATE, MEMO_ID, A.VM_ID, A.XN_TYPE, @NSPID AS SP_ID 
	FROM @vlink A
    JOIN @vmC B ON A.VM_ID=B.VM_ID
	
    SET @CSTEP = 582  
	  PRINT 'Running Step#'+@cStep+':'+convert(varchar,getdate(),113)
    SELECT @nSpId sp_id, CONVERT(BIT,1) AS CHK,CONVERT(BIT,1) optimized,*,CONVERT(BIT,0) AS ERROR_FLAG,CONVERT(VARCHAR(500),'') AS ERROR_DESC
    FROM @VMC ORDER BY VM_ID
    SELECT * FROM @VDC ORDER BY VM_ID
    SELECT * FROM @ERRORS WHERE 1=2
    SELECT * FROM @VLINK ORDER BY VM_ID

	SELECT B.AC_NAME,A.*,A.REF_NO AS BILL_NO FROM @TBILL_BY_BILL_REF A
	JOIN @VDC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID
	JOIN @VLINK C ON B.VM_ID=C.VM_ID
	LEFT OUTER JOIN @ERRORS D ON C.MEMO_ID=D.XN_ID
	WHERE D.ERR_DESC IS NULL

    
	GOTO END_PROC      
END TRY    
BEGIN CATCH    
   SET @CERRORMSG=' ERROR IN POSTACT_GST_TTL  AT STEP#'+@CSTEP+' '+ERROR_MESSAGE()
   GOTO END_PROC
END CATCH    

END_PROC:
    IF ISNULL(@CERRORMSG,'')<>''
		SELECT @CERRORMSG AS ERRMSG         	
	        
END
--END OF PROCEDURE - POSTACT_JWR
