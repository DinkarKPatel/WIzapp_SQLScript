create PROCEDURE SP_JOBWORK_PENDINGITEMS_CROSSTAB
(
  @NMODE INT=1 ,--1 for issue, 2 for rec 
  @CAGENCY_CODE VARCHAR(10)='',
  @CJOB_CODE VARCHAR(10)='',
  @CORDER_ID VARCHAR(50)='',
  @CJOBCARD_ID VARCHAR(50)='',
  @DEPTID VARCHAR(5)=''  ,
  @bitemReturn bit=0
 ,@CJOBWORKISSUE_ID VARCHAR(50)=''

)
AS
BEGIN
     
--(dinkar) Replace  left(memoid,2) to Location_code 
	 
			DECLARE @CJOIN VARCHAR(1000),@DTSQL NVARCHAR(MAX),@CFILTER VARCHAR(1000),@jobcard_id varchar(50),
			        @cgroupby varchar(100),@cjwijoin varchar(max)
	 
		 IF OBJECT_ID ('TEMPDB..#TMPBARCODE','U') IS NOT NULL
			DROP TABLE #TMPBARCODE

			SELECT PRODUCT_CODE,JOB_CODE,JOBCARD_ID =CAST('' AS VARCHAR(50)) ,QUANTITY_IN_STOCK 
			INTO #TMPBARCODE 
			FROM JOBWORK_PMT WHERE 1=2


	if isnull(@NMODE,0)=2
	begin

			SET @CJOIN=''
			SET @CFILTER=''
			SET @JOBCARD_ID=','''' AS JOBCARD_ID'
			set @cgroupby=''
			set @cjwijoin=''

			IF @CORDER_ID<>''
			BEGIN
		    
					SET @CJOIN=' JOIN ORD_PLAN_BARCODE_DET  B  (NOLOCK) ON B.PRODUCT_CODE =A.PRODUCT_CODE 
							JOIN ORD_PLAN_DET C ON C.ROW_ID =B.REFROW_ID
							JOIN ORD_PLAN_MST D (NOLOCK)  ON C.MEMO_ID=D.MEMO_ID 
							JOIN BUYER_ORDER_DET E (NOLOCK) ON E.ROW_ID =C.WOD_ROW_ID
							JOIN BUYER_ORDER_MST F (NOLOCK) ON E.ORDER_ID =F.ORDER_ID 
							  '

					SET @CFILTER=  ' AND D.CANCELLED=0 AND ISNULL(D.SHORT_CLOSE,0)<>1 AND  F.CANCELLED=0 AND F.ORDER_ID='''+@CORDER_ID+'''  '

					SET @JOBCARD_ID=' ,D.MEMO_ID AS JOBCARD_ID'
					set @cgroupby=',d.memo_id'

			END
			IF @CJOBCARD_ID<>''
			BEGIN

				   SET @CJOIN=' JOIN ORD_PLAN_BARCODE_DET  B  (NOLOCK) ON B.PRODUCT_CODE =A.PRODUCT_CODE 
							JOIN ORD_PLAN_DET C ON C.ROW_ID =B.REFROW_ID
							JOIN ORD_PLAN_MST D (NOLOCK)  ON C.MEMO_ID=D.MEMO_ID 
							 '
					SET @CFILTER=  ' AND  D.CANCELLED=0 AND ISNULL(D.SHORT_CLOSE,0)<>1 AND D.MEMO_ID='''+@CJOBCARD_ID+'''  '
					SET @JOBCARD_ID=' ,D.MEMO_ID AS JOBCARD_ID'
					set @cgroupby=',d.memo_id'

			END

			if @CJOBWORKISSUE_ID<>''
			begin
			    
				if object_id('tempdb..#tmpissue','u') is not null
				   Drop table #tmpissue

				SELECT a.product_code  
				     into  #tmpissue
				FROM JOBWORK_ISSUE_DET A
				JOIN JOBWORK_ISSUE_MST B ON A.ISSUE_ID =B.ISSUE_ID
				where a.issue_id=@CJOBWORKISSUE_ID

				SET @CJWIJOIN= ' JOIN #TMPISSUE TMP ON TMP.PRODUCT_CODE=A.PRODUCT_CODE'

			end

			if @CJOB_CODE=''
			   SELECT TOP 1 @CJOB_CODE=JOB_CODE FROM AGENCY_JOBS 
			   WHERE AGENCY_CODE =@CAGENCY_CODE

				SET @DTSQL=N' SELECT A.PRODUCT_CODE ,A.JOB_CODE
				              '+@JOBCARD_ID+',1 as QUANTITY_IN_STOCK
				 FROM JOBWORK_PMT A (NOLOCK) '+ @CJOIN +@CJWIJOIN+
				 ' WHERE A.QUANTITY_IN_STOCK =0 AND ISNULL(A.JOB_CODE,'''')<>'''' 
				 and isnull(a.Barcode_Cancelled,0)=0
				 AND A.AGENCY_CODE ='''+@CAGENCY_CODE+'''
				 and a.job_code='''+@CJOB_CODE+'''
				 AND ISNULL(A.TTM,0)=0 '+ @CFILTER +'
				 GROUP BY A.PRODUCT_CODE,A.JOB_CODE '+@cgroupby
				 PRINT @DTSQL
				 INSERT  INTO   #TMPBARCODE(PRODUCT_CODE,JOB_CODE,JOBCARD_ID,QUANTITY_IN_STOCK)
				 EXEC SP_EXECUTESQL @DTSQL

				-- UPDATE A SET QUANTITY_IN_STOCK =B.QTY 
				-- FROM #TMPBARCODE A
				-- JOIN
				-- (
				 
				--SELECT TMP.PRODUCT_CODE,CAST(B.QUANTITY/COUNT(*) AS NUMERIC(10,0)) AS QTY  
				--FROM ORD_PLAN_BARCODE_DET A
				--JOIN #TMPBARCODE TMP ON TMP.PRODUCT_CODE =A.PRODUCT_CODE
				--JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =TMP.PRODUCT_CODE 
				--JOIN ORD_PLAN_DET B ON A.REFROW_ID =B.ROW_ID 
				--WHERE SKU.BARCODE_CODING_SCHEME <>3
				--GROUP BY TMP.PRODUCT_CODE,B.QUANTITY
				--) B ON A.PRODUCT_CODE =B.PRODUCT_CODE 

				

        END
		ELSE if  isnull(@NMODE,0)=1
		BEGIN


			DECLARE @LEVEL_NO INT
			SELECT TOP 1 @LEVEL_NO=LEVEL_NO  FROM XN_APPROVAL_CHECKLIST_LEVEL_USERS A  
			WHERE A.XN_TYPE ='jC'	AND DEPT_ID =@DEPTID

			SET @LEVEL_NO=ISNULL(@LEVEL_NO,0)



		     --LBLPENDINGJOBCARD_MST: 11

			 if isnull(@bitemReturn,0)=0
			 begin


		     	INSERT  INTO   #TMPBARCODE(PRODUCT_CODE,JOB_CODE,JOBCARD_ID,QUANTITY_IN_STOCK)
				SELECT PMT.PRODUCT_CODE ,@CJOB_CODE AS JOB_CODE,@CJOBCARD_ID as MEMO_ID,PMT.QUANTITY_IN_STOCK
				FROM JOBWORK_PMT PMT (NOLOCK)
				join ORD_PLAN_BARCODE_DET A (NOLOCK) on PMT.PRODUCT_CODE=A.PRODUCT_CODE
				JOIN ORD_PLAN_DET T1 (NOLOCK) ON  A.REFROW_ID=T1.ROW_ID
				JOIN ORD_PLAN_MST T2 (NOLOCK) ON  T1.MEMO_ID=T2.MEMO_ID 
				LEFT JOIN
				(
				    SELECT DISTINCT  T3.JOB_ORDER AS CUR_JOB_ORDER,T3.JOB_CODE AS CUR_JOB_CODE,  T3.MEMO_ID,T3.ARTICLE_CODE  ,PJ.JOB_CODE AS PREV_JOB_CODE ,
					PJ.JOB_ORDER  AS PREV_JOB_ORDER
					FROM
					ORD_PLAN_JOB T3 (NOLOCK) 
					LEFT JOIN
					(
					  SELECT PJ.MEMO_ID,PJ.ARTICLE_CODE  ,PJ.JOB_CODE ,PJ.JOB_ORDER  
					  FROM ORD_PLAN_JOB  PJ (NOLOCK)
					) PJ ON  T3.MEMO_ID=PJ.MEMO_ID AND T3.ARTICLE_CODE=PJ.ARTICLE_CODE AND T3.JOB_ORDER-1 =PJ.JOB_ORDER 
					AND T3.JOB_CODE=  @CJOB_CODE  
				 ) PJ ON  t1.MEMO_ID=PJ.MEMO_ID AND t1.ARTICLE_CODE=PJ.ARTICLE_CODE --AND t1.JOB_ORDER-1 =PJ.JOB_ORDER  
				LEFT JOIN BUYER_ORDER_DET A1 (NOLOCK) ON T1.WOD_ROW_ID=A1.ROW_ID
				LEFT JOIN  BUYER_ORDER_MST A3 (NOLOCK) ON A1.ORDER_ID=A3.ORDER_ID
				WHERE PMT.QUANTITY_IN_STOCK>0 AND T2.CANCELLED=0 and ISNULL(T2.SHORT_CLOSE,0)<>1 AND  isnull(a3.cancelled,0)=0
				and isnull(PMT.Barcode_Cancelled,0)=0
				AND( ISNULL(T2.ENFORCE_JOB_ORDER,0) =0 OR  ((ISNULL(PMT.JOB_CODE,'')='' AND ISNULL(pj.CUR_JOB_ORDER,0) =1)OR ( PMT.JOB_CODE =PJ.PREV_JOB_CODE )))
				AND (ISNULL(T2.ENFORCE_JOB_ORDER,0) =0 OR pj.CUR_JOB_CODE=@CJOB_CODE)
				and (@LEVEL_NO=0 OR T2.APPROVEDLEVELNO =99)
				and (@CJOBCARD_ID='' or t2.MEMO_ID =@CJOBCARD_ID)
				and (@CORDER_ID='' or a3.order_id =@CORDER_ID)
				and @CAGENCY_CODE<>''
				AND t2.DEPT_ID =@DEPTID

				end
				else
				begin

				     
		     		INSERT  INTO   #TMPBARCODE(PRODUCT_CODE,JOB_CODE,JOBCARD_ID,QUANTITY_IN_STOCK)
					SELECT PMT.PRODUCT_CODE ,@CJOB_CODE AS JOB_CODE,@CJOBCARD_ID as MEMO_ID,PMT.QUANTITY_IN_STOCK
					FROM JOBWORK_PMT PMT (NOLOCK)
					join ORD_PLAN_BARCODE_DET A (NOLOCK) on PMT.PRODUCT_CODE=A.PRODUCT_CODE
					JOIN ORD_PLAN_DET T1 (NOLOCK) ON  A.REFROW_ID=T1.ROW_ID
					JOIN ORD_PLAN_MST T2 (NOLOCK) ON  T1.MEMO_ID=T2.MEMO_ID 
					JOIN
					(
						SELECT DISTINCT  T3.JOB_ORDER AS CUR_JOB_ORDER,T3.JOB_CODE AS CUR_JOB_CODE,  T3.MEMO_ID,T3.ARTICLE_CODE  ,PJ.JOB_CODE AS PREV_JOB_CODE ,
						PJ.JOB_ORDER  AS PREV_JOB_ORDER
						FROM
						ORD_PLAN_JOB T3 (NOLOCK) 
						LEFT JOIN
						(
						  SELECT PJ.MEMO_ID,PJ.ARTICLE_CODE  ,PJ.JOB_CODE ,PJ.JOB_ORDER  
						  FROM ORD_PLAN_JOB  PJ (NOLOCK)
						) PJ ON  T3.MEMO_ID=PJ.MEMO_ID AND T3.ARTICLE_CODE=PJ.ARTICLE_CODE AND (T3.JOB_ORDER+1 =PJ.JOB_ORDER or T3.JOB_ORDER =PJ.JOB_ORDER )
						AND T3.JOB_CODE=  @CJOB_CODE  
					 ) PJ ON  t1.MEMO_ID=PJ.MEMO_ID AND t1.ARTICLE_CODE=PJ.ARTICLE_CODE --AND t1.JOB_ORDER-1 =PJ.JOB_ORDER  
					LEFT JOIN BUYER_ORDER_DET A1 (NOLOCK) ON T1.WOD_ROW_ID=A1.ROW_ID
					LEFT JOIN  BUYER_ORDER_MST A3 (NOLOCK) ON A1.ORDER_ID=A3.ORDER_ID
					WHERE PMT.QUANTITY_IN_STOCK>0 AND T2.CANCELLED=0 and ISNULL(T2.SHORT_CLOSE,0)<>1 AND isnull(a3.cancelled,0)=0
					and isnull(PMT.Barcode_Cancelled,0)=0
					AND( ISNULL(T2.ENFORCE_JOB_ORDER,0) =0 OR  (( PMT.JOB_CODE =PJ.PREV_JOB_CODE )))
					AND (ISNULL(T2.ENFORCE_JOB_ORDER,0) =0 OR pj.CUR_JOB_CODE=@CJOB_CODE)
					and (@LEVEL_NO=0 OR T2.APPROVEDLEVELNO =99)
					and (@CJOBCARD_ID='' or t2.MEMO_ID =@CJOBCARD_ID)
					and (@CORDER_ID='' or a3.order_id =@CORDER_ID)
					and @CAGENCY_CODE<>''
					and isnull(pmt.JOB_CODE,'') <>''
					AND t2.location_code =@DEPTID

				end
		

		
		END
		ELSE if  isnull(@NMODE,0)=3
		BEGIN


		     --LBLPENDINGJOBCARD_MST: 11
		     	INSERT  INTO   #TMPBARCODE(PRODUCT_CODE,JOB_CODE,JOBCARD_ID,QUANTITY_IN_STOCK)
				SELECT PMT.PRODUCT_CODE ,PMT.JOB_CODE  AS JOB_CODE,@CJOBCARD_ID as MEMO_ID,pmt.QUANTITY_IN_STOCK
				FROM JOBWORK_PMT PMT (NOLOCK)
				join ORD_PLAN_BARCODE_DET A (NOLOCK) on PMT.PRODUCT_CODE=A.PRODUCT_CODE
				JOIN ORD_PLAN_DET T1 (NOLOCK) ON  A.REFROW_ID=T1.ROW_ID
				JOIN ORD_PLAN_MST T2 (NOLOCK) ON  T1.MEMO_ID=T2.MEMO_ID 
				left  JOIN
				(
				    SELECT DISTINCT  T3.JOB_ORDER AS CUR_JOB_ORDER,T3.JOB_CODE AS CUR_JOB_CODE,  T3.MEMO_ID,T3.ARTICLE_CODE  ,
					PJ.JOB_ORDER  AS PREV_JOB_ORDER
					FROM
					ORD_PLAN_JOB T3 (NOLOCK) 
					JOIN
					(
					  SELECT PJ.MEMO_ID,PJ.ARTICLE_CODE  ,max(PJ.JOB_ORDER)  as JOB_ORDER
					  FROM ORD_PLAN_JOB  PJ (NOLOCK)
                      group by PJ.MEMO_ID,PJ.ARTICLE_CODE
					) PJ ON  T3.MEMO_ID=PJ.MEMO_ID AND T3.ARTICLE_CODE=PJ.ARTICLE_CODE AND T3.JOB_ORDER =PJ.JOB_ORDER 
					
				 ) PJ ON  t1.MEMO_ID=PJ.MEMO_ID AND t1.ARTICLE_CODE=PJ.ARTICLE_CODE  and PMT.JOB_CODE =PJ.CUR_JOB_CODE 
				LEFT JOIN BUYER_ORDER_DET A1 (NOLOCK) ON T1.WOD_ROW_ID=A1.ROW_ID
				LEFT JOIN  BUYER_ORDER_MST A3 (NOLOCK) ON A1.ORDER_ID=A3.ORDER_ID
				WHERE PMT.QUANTITY_IN_STOCK>0 AND T2.CANCELLED=0 and ISNULL(T2.SHORT_CLOSE,0)<>1 AND  isnull(a3.cancelled,0)=0
				and isnull(PMT.Barcode_Cancelled,0)=0
				AND( ISNULL(T2.ENFORCE_JOB_ORDER,0) =0 OR  ( ( PMT.JOB_CODE =PJ.CUR_JOB_CODE )))
				and (@CJOBCARD_ID='' or t2.MEMO_ID =@CJOBCARD_ID)
				and (@CORDER_ID='' or a3.order_id =@CORDER_ID)
			--	and @CAGENCY_CODE<>''
				AND t2.location_code =@DEPTID 
		

		
		END
	  ELSE IF ISNULL(@NMODE,0)=4--FETCH
	  BEGIN

			
		
			IF OBJECT_ID ('TEMPDB..#TMPNA','U') IS NOT NULL
			   DROP TABLE #TMPNA

			   SELECT CAST('' AS VARCHAR(MAX)) MEMO_ID , CAST('' AS VARCHAR(MAX)) ARTICLE_CODE ,CAST('' AS VARCHAR(MAX)) PARA1_CODE  ,
			   CAST('' AS VARCHAR(MAX)) para2_code,CAST(0 AS NUMERIC(14,2)) QUANTITY
			   INTO #TMPNA
			   WHERE 1=2

			

			if ISNULL(@CJOBCARD_ID,'') <>''
			BEGIN
				INSERT INTO #TMPNA(MEMO_ID,ARTICLE_CODE,PARA1_CODE,para2_code,QUANTITY)
				SELECT D.MEMO_ID , SKU.ARTICLE_CODE ,SKU.PARA1_CODE  ,SKU.para2_code,SUM(1) AS QUANTITY
			FROM ORD_PLAN_DET C (NOLOCK) 
			JOIN ORD_PLAN_MST D (NOLOCK)  ON C.MEMO_ID=D.MEMO_ID 
			JOIN ORD_PLAN_BARCODE_DET  E  (NOLOCK) ON E.REFROW_ID =C.ROW_ID 
			JOIN JOBWORK_PMT PMT (NOLOCK) ON E.PRODUCT_CODE =PMT.PRODUCT_CODE
			JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =PMT.PRODUCT_CODE 
			--JOIN PARA2 ON PARA2.PARA2_CODE=SKU.PARA2_CODE 
			WHERE D.MEMO_ID =@CJOBCARD_ID
			AND PMT.JOB_CODE =@CJOB_CODE  
			and pmt.agency_code =@CAGENCY_CODE
			AND D.CANCELLED =0 
			and ISNULL(D.SHORT_CLOSE,0)<>1 AND sku.para2_code ='0000000'
			and isnull(PMT.Barcode_Cancelled,0)=0
			--AND PARA2.PARA2_NAME ='NA'
			GROUP BY D.MEMO_ID , SKU.ARTICLE_CODE ,SKU.PARA1_CODE ,SKU.PARA1_CODE,SKU.para2_code
			END
			ELSE
			BEGIN
				INSERT INTO #TMPNA(MEMO_ID,ARTICLE_CODE,PARA1_CODE,para2_code,QUANTITY)
			SELECT D.MEMO_ID , SKU.ARTICLE_CODE ,SKU.PARA1_CODE  ,SKU.para2_code,
				   SUM(1) AS QUANTITY
			FROM BUYER_ORDER_MST A (NOLOCK)
			JOIN BUYER_ORDER_DET B (NOLOCK) ON A.ORDER_ID =B.ORDER_ID 
			JOIN ORD_PLAN_DET C (NOLOCK) ON C.WOD_ROW_ID =B.ROW_ID
			JOIN ORD_PLAN_MST D (NOLOCK)  ON C.MEMO_ID=D.MEMO_ID 
			JOIN ORD_PLAN_BARCODE_DET  E  (NOLOCK) ON E.REFROW_ID =C.ROW_ID 
			JOIN JOBWORK_PMT PMT (NOLOCK) ON E.PRODUCT_CODE =PMT.PRODUCT_CODE
			JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =PMT.PRODUCT_CODE 
			--JOIN PARA2 ON PARA2.PARA2_CODE=SKU.PARA2_CODE 
			WHERE A.ORDER_ID =@CORDER_ID 
			AND PMT.JOB_CODE =@CJOB_CODE  
			and pmt.agency_code =@CAGENCY_CODE
			AND A.CANCELLED =0 AND D.CANCELLED =0 
			and ISNULL(D.SHORT_CLOSE,0)<>1 AND sku.para2_code ='0000000'
			and isnull(PMT.Barcode_Cancelled,0)=0
			--AND PARA2.PARA2_NAME ='NA'
			GROUP BY D.MEMO_ID , SKU.ARTICLE_CODE ,SKU.PARA1_CODE ,SKU.PARA1_CODE,SKU.para2_code
			END
			--SELECT * FROM #TMPNA

			IF OBJECT_ID('TEMPDB..#TMPARTICLENAKIST','U') IS NOT NULL
			   DROP TABLE #TMPARTICLENAKIST

			SELECT A.MEMO_ID JOBCARD_ID, B.ARTICLE_NO ,P1.PARA1_NAME ,P2.PARA2_NAME ,P2.PARA2_ORDER ,
				   B.ARTICLE_CODE ,P1.PARA1_CODE ,P2.PARA2_CODE ,
				   ISNULL(SUM(A.QUANTITY),0) AS Gross_QTY,
				  ISNULL(SUM(A.QUANTITY),0) AS PENDING_QTY,
				  CAST(0 AS NUMERIC(12,0)) AS REC_QTY ,
				   @CAGENCY_CODE as agency_code,
				   cast(B.ARTICLE_CODE +P1.PARA1_CODE+p2.para2_set as varchar(100)) as row_id,
				   --CAST(newid() AS VARCHAR(50)) as row_id,
				   @CJOB_CODE JOB_CODE,0 as Rate,
				   p2.para2_set AS Qty_Type,
				   CAST('' AS DATETIME) AS DUE_DT
			INTO #TMPARTICLENAKIST
			FROM #TMPNA A
			JOIN ARTICLE B ON A.ARTICLE_CODE =B.ARTICLE_CODE 
			JOIN PARA1 P1 (NOLOCK) ON A.PARA1_CODE =P1.PARA1_CODE 
			JOIN ART_DET ART_DET (NOLOCK) ON A.ARTICLE_CODE =ART_DET.ARTICLE_CODE 
			JOIN PARA2 P2 ON P2.PARA2_CODE =ART_DET.PARA2_CODE 
			--WHERE P2.para2_code  <>'0000000'
			--LEFT JOIN #TMPNA NA ON NA.article_code =A.article_code --AND ART_DET.PARA2_CODE=NA.para2_code 
			GROUP BY A.MEMO_ID , B.ARTICLE_NO ,P1.PARA1_NAME ,P2.PARA2_NAME ,P2.PARA2_ORDER ,
			B.ARTICLE_CODE ,P1.PARA1_CODE ,P2.PARA2_CODE,p2.para2_set 
			ORDER BY B.ARTICLE_NO,P1.para1_name  ,P2.PARA2_ORDER

			UPDATE A SET Qty_Type=B.Qty_Type,
			             row_id =cast(B.ARTICLE_CODE +B.PARA1_CODE+B.Qty_Type as varchar(100)) 
			FROM #TMPARTICLENAKIST A
			JOIN #TMPARTICLENAKIST B ON A.article_code =B.article_code AND A.para1_code =B.para1_code 
			WHERE A.PARA2_CODE='0000000' AND B.para2_code <>'0000000'

			SELECT * 
			FROM #TMPARTICLENAKIST A
			ORDER BY A.ARTICLE_NO,A.para1_name  ,A.PARA2_ORDER


			GOTO END_PROC
				

        END
	
	 
		 SELECT a. JOBCARD_ID, SKU_NAMES.ARTICLE_NO ,SKU_NAMES.PARA1_NAME ,SKU_NAMES .PARA2_NAME ,SKU_NAMES .PARA2_ORDER ,
				SKU.ARTICLE_CODE ,SKU.PARA1_CODE ,SKU.PARA2_CODE ,
				SUM(QUANTITY_IN_STOCK ) AS Gross_QTY,
				cast(0 as numeric(10,0)) as Adj_qty,
				SUM(QUANTITY_IN_STOCK ) AS PENDING_QTY,
				CAST(0 AS NUMERIC(12,0)) AS REC_QTY ,
				@CAGENCY_CODE as agency_code,
				CAST(newid() AS VARCHAR(50)) as row_id,
				A.JOB_CODE,0 as Rate,
				CAST('Pending Qty' AS VARCHAR(1000)) AS Qty_Type,CAST('' AS DATETIME) AS DUE_DT
		 FROM #TMPBARCODE A
		 JOIN SKU (NOLOCK) ON A.product_code =SKU .product_Code 
		 JOIN SKU_NAMES  (NOLOCK)  ON A.PRODUCT_CODE =SKU_NAMES.PRODUCT_CODE 
		 GROUP BY SKU_NAMES.ARTICLE_NO ,SKU_NAMES.PARA1_NAME ,SKU_NAMES .PARA2_NAME ,SKU_NAMES .PARA2_ORDER ,
		 SKU.ARTICLE_CODE ,SKU.PARA1_CODE ,SKU.PARA2_CODE,A.JOB_CODE,a. JOBCARD_ID
		 order by SKU_NAMES.ARTICLE_NO ,SKU_NAMES.PARA1_NAME,isnull(SKU_NAMES .PARA2_ORDER,0)


	  
END_PROC:

	 --SELECT   @CJOBCARD_ID as jobcard_id, @CAGENCY_CODE as Agency_code, SKU_NAMES.ARTICLE_NO ,SKU_NAMES.PARA1_NAME ,SKU_NAMES .PARA2_NAME ,SKU_NAMES .PARA2_ORDER ,
		--		SKU.ARTICLE_CODE ,SKU.PARA1_CODE ,SKU.PARA2_CODE ,
		--		SUM(1 ) AS PENDING_QTY,
		--		CAST(0 AS NUMERIC(12,0)) AS REC_QTY ,
		--		CAST(newid() AS VARCHAR(50)) as row_id,@CJOB_CODE AS JOB_CODE,0 as Rate,
		--		CAST('Pending Qty' AS VARCHAR(1000)) AS Qty_Type
		-- FROM LIST_OF_PC A
		-- JOIN SKU (NOLOCK) ON A.product_code =SKU .product_Code 
		-- JOIN SKU_NAMES  (NOLOCK)  ON A.PRODUCT_CODE =SKU_NAMES.PRODUCT_CODE 
		-- GROUP BY SKU_NAMES.ARTICLE_NO ,SKU_NAMES.PARA1_NAME ,SKU_NAMES .PARA2_NAME ,SKU_NAMES .PARA2_ORDER ,
		-- SKU.ARTICLE_CODE ,SKU.PARA1_CODE ,SKU.PARA2_CODE,A.JOB_CODE
		-- order by isnull(SKU_NAMES .PARA2_ORDER,0)


END

