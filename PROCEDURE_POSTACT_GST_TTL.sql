CREATE PROCEDURE POSTACT_GST_TTL 
(
	@DTTO DATETIME,
	@CDEPTID VARCHAR(4)='',
	@NLOOP NUMERIC(1,0)	
)
AS
BEGIN
    DECLARE @CSTEP VARCHAR(10),@BPOSTDISCOUNTSEPARATELY BIT,@CDISCACCODE VARCHAR(10),@BPOSTFREIGHTSEPARATELY	BIT
			,@CPETTYCASHACCODE VARCHAR(10),@BPOSTOCTROISEPARATELY BIT,@COCTROIACCODE VARCHAR(10),
			@BPOSTINSURANCESEPARATELY BIT,@CINSURANCEACCODE VARCHAR(10),
			@BPOSTOTHERCHARGESSEPARATELY BIT,@COTHERCHARGESACCODE VARCHAR(10),@BPOSTROUNDOFFSEPARATELY BIT,@CROUNDOFFACCODE VARCHAR(10),@NCTR NUMERIC(10,0),
			@NSUBTOTAL NUMERIC(14,2),@NTAXAMOUNT NUMERIC(14,2), @CPURACCODE VARCHAR(50),@CTAXACCODE VARCHAR(100),
			@LPOSTTAXSEPARATELY NUMERIC(14,2),@CMEMOID VARCHAR(50),@LOUTSTATIONPARTY BIT,@TMPDR NUMERIC(14,2),
			@TMPCR NUMERIC(14,2),@CCURSTATECODE	VARCHAR(10),@CVMID	VARCHAR(40),@CLOCATIONID CHAR(2),
			@CLASTBILLNO VARCHAR(40),@DTMPVENDORBILLDT DATETIME,@CRMLIST VARCHAR(300),@NTMPCREDITDAYS NUMERIC(10),
			@NTMPCRDISCOUNTPERCENTAGE NUMERIC(14,2),@DLASTINVDT	DATETIME,@CVOUCHERCODE VARCHAR(10),
			@COLDBILLTYPE VARCHAR(10),@CLASTACCODE VARCHAR(10),@CLASTPARTYNAME VARCHAR(100),@NTOTQUANTITY NUMERIC(14,2),
			@NTOTNETAMOUNT NUMERIC(14,2),@CDEPTNAME VARCHAR(100),@CVOUCHERNO VARCHAR(10),@CCASHAC VARCHAR(10)
	SET @CSTEP=10
	DECLARE @CPARTYACCODE VARCHAR(10),@CPARTYSTATECODE VARCHAR(10),@NNETAMOUNT NUMERIC(14,2),
			@NDISCAMOUNT NUMERIC(14,2),@NFREIGHT NUMERIC(14,2),	@NOTHER NUMERIC(14,2),@NROUNDOFF NUMERIC(14,2),
			@NDRTOTAL NUMERIC(14,2),@NCRTOTAL NUMERIC(14,2),@CCUTOFFDATE VARCHAR(20),@CXNTYPE VARCHAR(10)
			,@CAC_CODE VARCHAR(20),@CVDID VARCHAR(40),@BBLANKACFOUND BIT,@CERRORMSG VARCHAR(MAX)
    
    SET @CROUNDOFFACCODE=''
    SET @CPETTYCASHACCODE=''
    
    SET @CSTEP=20
    --THIS TABLE VARIABLE STORE ERROR OF OF MEMO ID
    DECLARE @ERRORS TABLE
	(
		XN_ID	VARCHAR(40),XN_TYPE VARCHAR(30),XN_NO VARCHAR(40),
		XN_DT DATETIME,XN_AMT NUMERIC(14,2),XN_AC VARCHAR(100),
		ERR_DESC VARCHAR(500)
	)   
    
    SET @CSTEP=30
    DECLARE @VCHC TABLE 
	(
		AC_CODE CHAR(10),NARRATION VARCHAR(200),XN_NO VARCHAR(30),
		XN_DT DATETIME,DEPT_ID CHAR(4),AMOUNT NUMERIC(14,4),XN_ID VARCHAR(22),
		REF_BILL_NO VARCHAR(50),REF_BILL_DATE DATETIME,	ENTRY_ID INT
		,CRDAYS NUMERIC(5)
	)
	
	SET @CSTEP=40
	DECLARE @VDC TABLE 
	(
		VD_ID VARCHAR(50),				VM_ID VARCHAR(40),				AC_CODE CHAR(10), 
		NARRATION VARCHAR(200),			DEBIT_AMOUNT NUMERIC(14,4),		CREDIT_AMOUNT NUMERIC(14,4),
		X_TYPE CHAR(2), 				VS_AC_CODE CHAR(10),	 		REF_BILL_NO VARCHAR(40), 
		CREDIT_DAYS NUMERIC(10),		CR_DISCOUNT_PERCENTAGE NUMERIC(14,2),		
		VAT_ENTRY BIT,REF_BILL_DATE DATETIME, AC_NAME VARCHAR(100)
	)
	
	SET @CSTEP=50
	DECLARE @VMC TABLE
	(
		VM_ID VARCHAR(400), 			VOUCHER_NO VARCHAR(400), 		VOUCHER_DT DATETIME, 
		VOUCHER_CODE CHAR(10), 		DEPT_ID VARCHAR(4),				BILL_TYPE VARCHAR(300),
		BILL_NO VARCHAR(200), 			BILL_ID VARCHAR(220), 			BILL_DT DATETIME, 
		BILL_AC_CODE VARCHAR(100),		DRTOTAL NUMERIC(20,2),			CRTOTAL NUMERIC(20,2), 
		CASH_VOUCHER BIT, 				SALE_VOUCHER BIT, 				QUANTITY NUMERIC(20,2), 
		ANGADIA_CODE CHAR(70), 			LR_NO VARCHAR(500), 			LR_DT DATETIME,
		PARTY_NAME VARCHAR(1000),		NET_AMOUNT NUMERIC(20,2), 		BILL_STATUS VARCHAR(1000),
		RM_LIST VARCHAR(3000), 		CANCELLED BIT,					DEPT_NAME VARCHAR(100),
		VOUCHER_TYPE VARCHAR(100)	
	)
	
	SET @CSTEP=60
	DECLARE @VLINK TABLE
	(
		VM_ID VARCHAR(100),MEMO_ID VARCHAR(100),XN_TYPE VARCHAR(20),LAST_UPDATE DATETIME
	)
	
	DECLARE @TBILL_BY_BILL_REF TABLE(VD_ID VARCHAR(40),REF_NO VARCHAR(40),AMOUNT NUMERIC(18,4),LAST_UPDATE DATETIME
								,X_TYPE VARCHAR(20),CR_DAYS NUMERIC(5),REF_TYPE VARCHAR(10),VM_ID VARCHAR(40))
	
	SELECT TOP 1 @CCUTOFFDATE=CUTOFFDATE FROM GST_ACCOUNTS_CONFIG_MST WHERE XN_TYPE='TLF'
	
	SET @CCUTOFFDATE=ISNULL(@CCUTOFFDATE,'')
	
	SET @CSTEP=70
	SET @CVOUCHERCODE = '0000000008'
    BEGIN TRY
			
		
			SET @CSTEP=80
			IF OBJECT_ID('TEMPDB..#POSTS','U') IS NOT NULL
				DROP TABLE #POSTS 
			
			SET @CSTEP=90
			--THIS TABLE STORE ALL PENDING MEMO_ID 
			CREATE TABLE #POSTS (MEMO_ID VARCHAR(30),MODE VARCHAR(10))
			
			SET @CSTEP=100
			--GETTING LIST OF PETTYCASH EXPENSE INVOICES THAT QUALIFY FOR VOUCHER POSTING
			INSERT INTO #POSTS (MEMO_ID,MODE)
	        SELECT A.MEMO_ID,'TTL' AS MODE 
	        FROM TILL_LIFTS A
	        JOIN LOCATION SL ON SL.DEPT_ID=a.location_Code 
			LEFT JOIN loc_accounting_company lac1 (NOLOCK) ON lac1.pan_no=sl.PAN_NO
			LEFT JOIN loc_accounting_company lac2 (NOLOCK) ON lac2.pan_no=SUBSTRING(sl.loc_gst_no,3,10)
	        LEFT OUTER JOIN 
	        (
				SELECT B.MEMO_ID,B.LAST_UPDATE
				FROM POSTACT_VOUCHER_LINK B 
				JOIN VM01106 C ON C.VM_ID = B.VM_ID 
				WHERE C.CANCELLED=0 AND B.XN_TYPE = 'TTL' 
	        )VM  ON A.MEMO_ID = VM.MEMO_ID  
	        WHERE  
	         -- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES
	        /*PETTYCASH EXPENSE IS NOT CANCELLED.*/
	        ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)	 
	        AND A.TRANSFERMODE IN (2,3) AND A.LIFT_AMOUNT<>0 	 
	        /*PETTYCASH EXPENSE INV_DT IS LESS THAN THE SPECIFIED DATE.*/
	        AND A.MEMO_DT <= @DTTO
	        /*IF CUTOFF DATE IS SPECIFIED, CONSIDER PETTYCASH EXPENSE AFTER THE CUTOFF DATE*/
	        AND (ISNULL(@CCUTOFFDATE,'')='' OR A.MEMO_DT>@CCUTOFFDATE)
	        /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/
	        AND (ISNULL(@CDEPTID,'')='' OR a.location_Code =@CDEPTID)
	        /*PETTYCASH EXPENSE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/
	        AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE) 
			AND (lac1.pan_no IS NOT NULL OR lac2.pan_no IS NOT NULL)	        

	        IF NOT EXISTS (SELECT TOP 1 * FROM #POSTS)
				GOTO ENDPROC
			    
			SET @CSTEP = 110
			CREATE INDEX IX_TEMP_TTLTABLE_RM_ID ON #POSTS(MEMO_ID)
		
	        
	        DECLARE @IMAXLEVEL INT
			
			--GETTING THE MAX LEVEL OF APPROVAL FOR TILL SHIFT
			SELECT @IMAXLEVEL=MAX(LEVEL_NO) 
			FROM XN_APPROVAL_CHECKLIST_LEVELS 
			WHERE XN_TYPE='SFT' AND INACTIVE=0
			
			IF EXISTS(SELECT TOP 1 'U' FROM XN_APPROVAL_CHECKLIST_LEVELS  WHERE XN_TYPE='SFT' AND INACTIVE=0 AND ISNULL(AC_POSTING,0)<>0)
			BEGIN
			    SELECT @IMAXLEVEL=LEVEL_NO
				FROM XN_APPROVAL_CHECKLIST_LEVELS 
				WHERE XN_TYPE='SFT' AND INACTIVE=0 AND ISNULL(AC_POSTING,0)<>0
			END
			
			
			SET @IMAXLEVEL=ISNULL(@IMAXLEVEL,0)
	        --SELECT COUNT(*) FROM #POSTS
	        SET @CSTEP = 130
	        IF OBJECT_ID('TEMPDB..#V_PROCESS','U') IS NOT NULL
				DROP TABLE #V_PROCESS
			

			SELECT    A.MEMO_NO
					, A.MEMO_ID
					, A.MEMO_DT
					, A.AC_CODE AS LOCKERACCODE
					, tm.ac_code AS SHIFTACCODE
					, A.REMARKS
					, A.LIFT_AMOUNT AS MEMO_AMOUNT
					, A.FIN_YEAR
					, D.AC_NAME AS PARTY_NAME
					, A.CANCELLED
					,'TTL' AS XN_TYPE
					  ,'TTL' AS POSTING_XN_TYPE,a.location_Code
			  	  					
			INTO #V_PROCESS
			FROM TILL_LIFTS A 
			JOIN #POSTS PST ON A.MEMO_ID=PST.MEMO_ID	
			JOIN TILL_SHIFT_MST TSM ON A.SHIFT_ID=TSM.SHIFT_ID	
			JOIN TILL_MST TM ON TM.TILL_ID=TSM.TILL_ID
			JOIN LMV01106 D ON A.AC_CODE=D.AC_CODE
			WHERE ISNULL(TSM.APPROVEDLEVELNO,0)>=@IMAXLEVEL

					
		CREATE INDEX IX_V_PROCESS_RM_ID ON #V_PROCESS(MEMO_ID)

		
		SELECT @CMEMOID='',@CXNTYPE='TTL',@CAC_CODE='',@NCTR=1
		
		SET @CSTEP = 380
		
		WHILE EXISTS(SELECT TOP 1 'U' FROM #V_PROCESS)
		BEGIN
			SET @CSTEP = 390
			SELECT TOP 1 @CMEMOID=MEMO_ID FROM #V_PROCESS
			
			SET @CSTEP = 400
			--LOCKER A/C SHOULD BE DEBITED
			INSERT @VCHC ( AC_CODE, AMOUNT,XN_NO,XN_ID)
			SELECT LOCKERACCODE,MEMO_AMOUNT,MEMO_NO,MEMO_ID
			FROM #V_PROCESS
			WHERE MEMO_ID=@CMEMOID
			
			--TILL A/C SHOULD BE CREDITED
			INSERT @VCHC ( AC_CODE, AMOUNT,XN_NO,XN_ID )
			SELECT SHIFTACCODE,-MEMO_AMOUNT,MEMO_NO,MEMO_ID
			FROM #V_PROCESS
			WHERE MEMO_ID=@CMEMOID
					
			SET @CSTEP = 500
			SET @CVMID = ''
			SELECT @CVMID = A.VM_ID 
			 FROM POSTACT_VOUCHER_LINK A
			  JOIN VM01106 B ON A.VM_ID=B.VM_ID
			   WHERE B.CANCELLED=0 AND A.MEMO_ID = @CMEMOID AND A.XN_TYPE=@CXNTYPE
			
			SET @CSTEP = 510
			IF ISNULL(@CVMID,'') = ''
			BEGIN
			    SET @CVMID = 'LATERTTL-'+RTRIM(LTRIM(CONVERT(VARCHAR,@NCTR)))
				SET @NCTR = @NCTR+1
			END
			
			SET @CSTEP = 520
			INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )
			SELECT @CVMID,@CMEMOID,@CXNTYPE,LAST_UPDATE FROM TILL_LIFTS WHERE MEMO_ID = @CMEMOID
			
			SET @CSTEP = 530
			INSERT @VDC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE, 
						  CREDIT_DAYS, CR_DISCOUNT_PERCENTAGE,AC_NAME)
			SELECT @CVMID
				, 'LATERTTL-'+CONVERT(VARCHAR,ROW_NUMBER() OVER(ORDER BY A.AC_CODE)) AS VD_ID
				, A.AC_CODE
				,'LIFT#'+A.XN_NO AS NARRATION
				,(CASE WHEN SUM(AMOUNT)>0 THEN SUM(AMOUNT) ELSE 0 END) AS DEBIT_AMOUNT
				,(CASE WHEN SUM(AMOUNT)<0 THEN ABS(SUM(AMOUNT)) ELSE 0 END) AS CREDIT_AMOUNT
				,(CASE WHEN SUM(AMOUNT) > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE
				,A.CRDAYS
				,0
				,B.AC_NAME
	        FROM @VCHC A
	        JOIN LMV01106 B ON A.AC_CODE = B.AC_CODE
	        WHERE XN_ID = @CMEMOID
	        GROUP BY A.AC_CODE,A.XN_NO,B.AC_NAME,A.CRDAYS
	        ORDER BY X_TYPE,ABS(SUM(AMOUNT)) DESC
			
	        SET @CSTEP = 540
	        SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC
		    WHERE VM_ID = @CVMID
		    
		    SET @CSTEP = 550    
	        SET @CVOUCHERNO = '' 
	        SELECT TOP 1 @CVOUCHERNO = VOUCHER_NO FROM VM01106 WHERE VM_ID = @CVMID
	        IF ISNULL(@CVOUCHERNO,'') = ''
				SET @CVOUCHERNO = @CVMID
	        
	        SET @CSTEP = 560
	        INSERT @VMC	( VM_ID, VOUCHER_DT, VOUCHER_CODE, DEPT_ID, 
					  BILL_TYPE, BILL_NO, BILL_ID, BILL_DT, 
					  PARTY_NAME, QUANTITY, NET_AMOUNT, CANCELLED )
			SELECT TOP 1 @CVMID,MEMO_DT,@CVOUCHERCODE,location_code
					,@CXNTYPE,MEMO_NO,MEMO_ID,MEMO_DT,'',0,0,CANCELLED
			FROM #V_PROCESS
			WHERE MEMO_ID=@CMEMOID
			
			SET @CSTEP = 570
			DELETE @VCHC
		    DELETE FROM #V_PROCESS WHERE MEMO_ID = @CMEMOID 
		END			 			

ENDPROC:
    

	DECLARE @nSpId VARCHAR(40)
	
   
  
   SET @CSTEP=572
   set @nSpId=ltrim(rtrim(str(@@spid)))  

	EXEC SP_CHKXNSAVELOG 'TTLPOST',@cStep,1,@nSpId,'',1	 	
	
	DELETE FROM ACT_VM01106_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_VD01106_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_BILL_BY_BILL_REF_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_POSTACT_VOUCHER_LINK_UPLOAD WHERE SP_ID=@NSPID
	
	SET @CSTEP = 574
	EXEC SP_CHKXNSAVELOG 'TTLPOST',@cStep,1,@nSpId,'',1	 		
	PRINT 'START POSTING TTL:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
    INSERT ACT_VM01106_UPLOAD	( ANGADIA_CODE, APPROVED, APPROVEDLEVELNO, ATTACHMENT_FILE, AUDITED_DT, 
    AUDITED_USER_CODE, BILL_AC_CODE, BILL_DT, BILL_ID, BILL_NO, BILL_TYPE, CANCELLED, CASH_VOUCHER, COMPANY_CODE, 
    CRTOTAL, DEPT_ID, DRTOTAL, EDT_USER_CODE, FIN_YEAR, FREEZE, LAST_UPDATE, LR_DT, LR_NO, MEMO, MRR_LIST, OP_ENTRY,
    QUANTITY, REF_NO, REF_VM_ID, REMINDER_DAYS, SALE_VOUCHER, SENT_FOR_RECON, SENT_TO_HO, SMS_SENT, SR_NO, 
    UPLOADED_TO_ACTIVSTREAM, USER_CODE, VM_ID, VM_NO, VOUCHER_CODE, VOUCHER_DT, VOUCHER_NO, SP_ID,TEMP_VM_ID )  
    SELECT 	  ANGADIA_CODE,0 AS APPROVED,0 AS APPROVEDLEVELNO,'' AS ATTACHMENT_FILE,'' AS AUDITED_DT, 
    '' AS AUDITED_USER_CODE, BILL_AC_CODE,BILL_DT, ISNULL(BILL_ID,'') AS BILL_ID,ISNULL( BILL_NO,'') AS BILL_NO,
     BILL_TYPE,CANCELLED, 
    0 AS CASH_VOUCHER, '01' AS COMPANY_CODE, CRTOTAL,a.DEPT_ID  DEPT_ID, DRTOTAL,'' AS EDT_USER_CODE,
	('01'+dbo.FN_GETFINYEAR(voucher_dt)) FIN_YEAR, 
    0 AS FREEZE,GETDATE() AS  LAST_UPDATE,'' AS LR_DT,'' AS LR_NO,0 AS MEMO,'' AS MRR_LIST,0 AS  OP_ENTRY,
    QUANTITY, '' AS REF_NO,'' AS REF_VM_ID,0 AS  REMINDER_DAYS,1 AS SALE_VOUCHER,0 AS  SENT_FOR_RECON,0 AS SENT_TO_HO, 
    0 AS SMS_SENT,0 AS SR_NO,0 AS UPLOADED_TO_ACTIVSTREAM,'0000000' AS USER_CODE,
    VM_ID,'' AS VM_NO, VOUCHER_CODE, VOUCHER_DT,VOUCHER_NO, @NSPID AS SP_ID,'' AS TEMP_VM_ID 
    FROM @vmC A 
    
	
	SET @CSTEP = 576
	EXEC SP_CHKXNSAVELOG 'TTLPOST',@cStep,1,@nSpId,'',1	 		

	PRINT 'START POSTING TTL:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_VD01106_UPLOAD	( AC_CODE, AUTOENTRY, CHK_RECON, COMPANY_CODE, CONTROL_AC, COST_CENTER_AC_CODE, COST_CENTER_DEPT_ID, 
	CREDIT_AMOUNT, DEBIT_AMOUNT, LAST_UPDATE, NARRATION, RECON_DT, SECONDARY_NARRATION, VAT_ENTRY, VD_ID, VM_ID, VS_AC_CODE, X_TYPE, SP_ID,TEMP_VD_ID )
	SELECT AC_CODE,0 AS AUTOENTRY,0 AS CHK_RECON,'01' AS COMPANY_CODE,0 AS CONTROL_AC,'0000000000' AS COST_CENTER_AC_CODE, 
	ISNULL(b.Dept_id,@CDEPTID) AS COST_CENTER_DEPT_ID,CREDIT_AMOUNT, DEBIT_AMOUNT,GETDATE() AS LAST_UPDATE,ISNULL(NARRATION,'') AS NARRATION,'' AS RECON_DT, 
	'' AS SECONDARY_NARRATION, 0 AS VAT_ENTRY,VD_ID,A.VM_ID,ISNULL(VS_AC_CODE,'0000000000') AS VS_AC_CODE,
	X_TYPE, @NSPID AS SP_ID,'' AS TEMP_VD_ID 
	FROM @vdC A
	JOIN @vmC B ON A.VM_ID=B.VM_ID
    WHERE (DEBIT_AMOUNT<>0 OR CREDIT_AMOUNT<>0)

	
	SET @CSTEP = 578
	EXEC SP_CHKXNSAVELOG 'TTLPOST',@cStep,1,@nSpId,'',1	 		
	PRINT 'START POSTING TTL:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_BILL_BY_BILL_REF_UPLOAD	( ADJ_REMARKS, AMOUNT, BB_ROW_ID, CR_DAYS, LAST_UPDATE, PAYMENT_ADJ_REF_NO, 
	REF_NO,  REMARKS, VD_ID, X_TYPE, SP_ID ,VM_ID,cd_percentage,cd_base_amount,ignore_cd_base_amount,
	cd_posted,org_bill_amount,org_bill_dt,org_bill_no)  
	SELECT '' AS ADJ_REMARKS,AMOUNT,'' AS BB_ROW_ID,0 AS CR_DAYS,GETDATE() AS LAST_UPDATE,'' AS PAYMENT_ADJ_REF_NO, 
	a.ref_no, '' AS REMARKS,A.VD_ID,A.X_TYPE,@NSPID AS SP_ID,A.VM_ID,
	0 cd_percentage,0 cd_base_amount,0 ignore_cd_base_amount,0 cd_posted,d.net_amount as org_bill_amount,
	d.inv_DT org_bill_dt,d.inv_no org_bill_no FROM @TBILL_BY_BILL_REF A
    JOIN @vdC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID
    JOIN @vmC C ON B.VM_ID=C.VM_ID
	JOIN @vLink v ON v.VM_ID=c.VM_ID
	LEFT JOIN inm01106 d ON d.inv_id=v.MEMO_ID
    WHERE A.AMOUNT<>0
	
	SET @CSTEP = 580
	EXEC SP_CHKXNSAVELOG 'TTLPOST',@cStep,1,@nSpId,'',1	 		
	
	PRINT 'START POSTING TTL:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_POSTACT_VOUCHER_LINK_UPLOAD	( LAST_UPDATE, MEMO_ID, VM_ID, XN_TYPE, SP_ID )  
	SELECT 	LAST_UPDATE, MEMO_ID, A.VM_ID, A.XN_TYPE, @NSPID AS SP_ID 
	FROM @vlink A
    JOIN @vmC B ON A.VM_ID=B.VM_ID
	
    SET @CSTEP = 582  
	  PRINT 'Running Step#'+@cStep+':'+convert(varchar,getdate(),113)
    SELECT @nSpId sp_id, CONVERT(BIT,1) AS CHK,CONVERT(BIT,1) optimized,*,CONVERT(BIT,0) AS ERROR_FLAG,CONVERT(VARCHAR(500),'') AS ERROR_DESC
    FROM @VMC ORDER BY VM_ID
    SELECT * FROM @VDC ORDER BY VM_ID
    SELECT * FROM @ERRORS  WHERE 1=2
    SELECT * FROM @VLINK ORDER BY VM_ID

	SELECT B.AC_NAME,A.*,A.REF_NO AS BILL_NO FROM @TBILL_BY_BILL_REF A
	JOIN @VDC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID
	JOIN @VLINK C ON B.VM_ID=C.VM_ID
	LEFT OUTER JOIN @ERRORS D ON C.MEMO_ID=D.XN_ID
	WHERE D.ERR_DESC IS NULL
    
	GOTO END_PROC      
END TRY    
BEGIN CATCH    
   SET @CERRORMSG=' ERROR IN POSTACT_GST_TTL  AT STEP#'+@CSTEP+' '+ERROR_MESSAGE()
   GOTO END_PROC
END CATCH    

END_PROC:
    IF ISNULL(@CERRORMSG,'')<>''
		SELECT @CERRORMSG AS ERRMSG         	
	        
END
--END OF PROCEDURE - POSTACT_TTL
