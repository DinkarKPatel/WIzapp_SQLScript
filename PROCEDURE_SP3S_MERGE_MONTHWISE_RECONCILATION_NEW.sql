CREATE PROCEDURE SP3S_MERGE_MONTHWISE_RECONCILATION_NEW
 (
 @CDEPTID VARCHAR(5)
 )
-- WITH ENCRYPTION
 AS
 BEGIN
     
 BEGIN TRY
    DECLARE @TABLENAME VARCHAR(100),@TMPTABLENAME VARCHAR(100),@DTSQL NVARCHAR(MAX),@DFM_DT VARCHAR(20)
	
	DECLARE @CTEMPDBNAME VARCHAR(40),@CSTEP VARCHAR(5),@CERRMSG VARCHAR(MAX),@TABLENAME_PAYMODE VARCHAR(100),
	@TMPTABLENAME_PAYMODE VARCHAR(100)
	
	SET @CSTEP=10
	
	SET @CTEMPDBNAME = DB_NAME() + '_TEMP.DBO.'	    
	
	SET @TABLENAME='MONTHLY_RECONCILATION_LOC'
	SET @TMPTABLENAME=@CTEMPDBNAME+'TMP_'+@TABLENAME+'_'+@CDEPTID
	
	SET @CSTEP=20
	SET @TABLENAME_PAYMODE='MONTHLY_PAYMODE_DETAILS'
	SET @TMPTABLENAME_PAYMODE=@CTEMPDBNAME+'TMP_'+@TABLENAME_PAYMODE +'_'+@CDEPTID
		
	DELETE FROM   MONTHLY_RECONCILATION_LOC WHERE DEPT_ID=@CDEPTID
	
	SET @CSTEP=30
	DELETE FROM   MONTHLY_PAYMODE_DETAILS WHERE DEPT_ID=@CDEPTID
	
	SET @CSTEP=40
	SET @DTSQL =N'SELECT DEPT_ID,FM_DT,TO_DT,XN_TYPE,XN_QTY,XN_NET,CANCELLED_QTY FROM '+@TMPTABLENAME
	PRINT @DTSQL
    INSERT INTO MONTHLY_RECONCILATION_LOC(DEPT_ID,FM_DT,TO_DT,XN_TYPE,XN_QTY,XN_NET,CANCELLED_QTY)
	EXEC SP_EXECUTESQL @DTSQL
	
	SET @CSTEP=50
	SET @DTSQL =N'SELECT DEPT_ID,CM_DT,PAYMODE_CODE,AMOUNT FROM '+@TMPTABLENAME_PAYMODE 
	PRINT @DTSQL
	INSERT INTO MONTHLY_PAYMODE_DETAILS(DEPT_ID,CM_DT,PAYMODE_CODE,AMOUNT)
	EXEC SP_EXECUTESQL @DTSQL
		
	SET @CSTEP=60
	SET @DTSQL =N'IF OBJECT_ID('''+@TMPTABLENAME+''',''U'') IS NOT NULL
					DROP TABLE '+@TMPTABLENAME+'
				  IF OBJECT_ID('''+@TMPTABLENAME_PAYMODE +''',''U'') IS NOT NULL
					DROP TABLE '+@TMPTABLENAME_PAYMODE
    PRINT @DTSQL
	EXEC SP_EXECUTESQL @DTSQL
    
    SET @CSTEP=70

	DELETE FROM LOC_AUTORECON_LOG WHERE DEPT_ID=@CDEPTID
    
    INSERT LOC_AUTORECON_LOG	( DEPT_ID, RECONCILE, LASTUPDATE )  
	SELECT DEPT_ID=@CDEPTID, RECONCILE=0, LASTUPDATE =GETDATE ()
	
	GOTO EXIT_PROC
		
END TRY        

BEGIN CATCH
	  PRINT 'CATCH START'       
	  SET @CERRMSG='P:SP3S_MERGE_MONTHWISE_RECONCILATION, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	  GOTO EXIT_PROC
END CATCH        
        
EXIT_PROC: 
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRMSG,'')=''
			 COMMIT TRANSACTION
		ELSE
			 ROLLBACK        
	END
 
 	SELECT ISNULL(@CERRMSG,'') AS ERRMSG
END
