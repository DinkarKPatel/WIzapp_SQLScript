CREATE  PROCEDURE SAVETRAN_GENPERISHABLE_BARCODE    
(    
 @NMODE INT,
 @CXNID VARCHAR(40),    
 @CERRORMSG VARCHAR(MAX) OUTPUT ,
 @NFORCELYBARCODEGEN BIT=0   ,
 @cLocId VARCHAR(4)='',
 @NUPDATEMODE INT=1,
 @CXNTYPE VARCHAR(10)=''
) 
AS
BEGIN 
BEGIN TRY 
  
  
  
    print 'enter perishable genbarcode'
	DECLARE @NSTEP VARCHAR(10),
	@CNEXTPRODUCTSR NUMERIC(12,0),@CLASTPRODUCTSR NUMERIC(12,0),@CCUR_DEPT_ID VARCHAR(4)
	
	SET @nStep=225.2
	EXEC SP_CHKXNSAVELOG 'PUR',@nStep,0,@cXnId,'',1
	
		SET @CCUR_DEPT_ID=@CLOCID
		 
		
		 	IF ISNULL(@CCUR_DEPT_ID,'')=''
			 BEGIN
				SET @CERRORMSG =' LOCATION ID CAN NOT BE BLANK  '  
				GOTO END_PROC    
			 END

				 
		 IF EXISTS (SELECT TOP 1 sp_id FROM keys_perishable (NOLOCK) WHERE sp_id=@CXNID)
			 DELETE FROM keys_perishable WITH (ROWLOCK) WHERE sp_id=@cXnid

         IF @NMODE=1
         BEGIN        
			
			SET @nStep=225.4
			EXEC SP_CHKXNSAVELOG 'PUR',@nStep,0,@cXnId,'',1   
		

            INSERT INTO keys_perishable(sp_id,PID_ROW_ID,PRODUCT_CODE,SR_NO,BATCH_NO,EXPIRY_DT,MRP,PURCHASE_PRICE,PERISHABLE,NEW_PRODUCT_CODE,SKU_CODING_SCHEME)
			SELECT @cXnId as sp_id,B.ROW_ID AS PID_ROW_ID,B.PRODUCT_CODE,CAST(0 AS INT) AS SR_NO ,
				B.BATCH_NO,
				B.EXPIRY_DT,B.MRP,
				B.PURCHASE_PRICE,
				ISNULL(ART.PERISHABLE,0) AS PERISHABLE,
				CAST('' AS VARCHAR(100)) AS NEW_PRODUCT_CODE,
				ISNULL( sku.barcode_coding_scheme , art.CODING_SCHEME) as CODING_SCHEME
			FROM PUR_pid01106_UPLOAD B (NOLOCK)
			JOIN PUR_pim01106_UPLOAD PIM (NOLOCK) ON B.SP_id =PIM.SP_id
			LEFT JOIN SKU (NOLOCK) ON B.PRODUCT_CODE =SKU.PRODUCT_CODE and sku.product_code <>''
			JOIN ARTICLE ART (nolock) ON ART.ARTICLE_CODE=b.ARTICLE_CODE
			LEFT JOIN PID01106 PID (NOLOCK) ON   PID.MRR_ID=B.MRR_ID AND B.ROW_ID =PID.ROW_ID 
			WHERE B.SP_ID =@CXNID AND ISNULL( sku.barcode_coding_scheme , art.CODING_SCHEME)=1 AND ISNULL(ART.STOCK_NA,0)=0
			AND charindex('@',b.product_code)=0 AND PID.row_id IS NULL
			and isnull(pim.XN_ITEM_TYPE,0) <>2 
			


		 END 
		 ELSE IF @NMODE=2
		 BEGIN
		     
                 INSERT INTO KEYS_PERISHABLE(sp_id,PID_ROW_ID,PRODUCT_CODE,SR_NO,BATCH_NO,EXPIRY_DT,MRP,PURCHASE_PRICE,PERISHABLE,NEW_PRODUCT_CODE,SKU_CODING_SCHEME)
				 SELECT @cXnId AS sp_id,B.ROW_ID AS PID_ROW_ID,B.PRODUCT_CODE,CAST(0 AS INT) AS SR_NO ,
						SKU.BATCH_NO,
						SKU.EXPIRY_DT,SKU.MRP,
						SKU.PURCHASE_PRICE,
						ISNULL(ART.PERISHABLE,0) AS PERISHABLE,
						CAST('' AS VARCHAR(100)) AS NEW_PRODUCT_CODE,
						sku.barcode_coding_scheme as CODING_SCHEME
				 FROM GRN_PS_DET  B (NOLOCK) 
				 JOIN SKU (NOLOCK) ON B.PRODUCT_CODE =SKU.PRODUCT_CODE 
				 JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE
				 join sectionD  sd (nolock) on sd.sub_section_code =art.sub_section_code 
				 join sectionm sm (nolock) on sm.section_code =sd.section_code 
				 WHERE ISNULL(SKU.BARCODE_CODING_SCHEME,0)=1 
				 AND ISNULL(ART.STOCK_NA,0)=0
				 AND B.MEMO_ID  =@CXNID AND charindex('@',b.product_code)=0
				 and isnull(sm.ITEM_TYPE,0)<>2 
		 
		 END 
		 ELSE IF @NMODE=4
		 BEGIN
		        
		  -- as Discuss with Sanjiv sir in Split combined and jobwotk receive wip forcely generate bartch for all coding scheme

			 if @CXNTYPE='SNC_WIP' 
			 begin
			    
				INSERT INTO KEYS_PERISHABLE(sp_id,PID_ROW_ID,PRODUCT_CODE,SR_NO,BATCH_NO,EXPIRY_DT,MRP,PURCHASE_PRICE,PERISHABLE,NEW_PRODUCT_CODE,SKU_CODING_SCHEME)
				    
			    SELECT @cXnId AS sp_id,B.PID_ROW_ID AS PID_ROW_ID,B.PRODUCT_CODE,CAST(0 AS INT) AS SR_NO ,
						''BATCH_NO,
						'' EXPIRY_DT,a.MRP MRP,
						a.PURCHASE_PRICE PURCHASE_PRICE,
						0 AS PERISHABLE,
						CAST('' AS VARCHAR(100)) AS NEW_PRODUCT_CODE,
						1 as CODING_SCHEME
				 from SNC_DET a
				 join  #BARCODES  B (NOLOCK) on a.ROW_ID =b.PID_ROW_ID
				 WHERE charindex('@',b.product_code)=0

			


			 end
	         else
			 begin

                 INSERT INTO KEYS_PERISHABLE(sp_id,PID_ROW_ID,PRODUCT_CODE,SR_NO,BATCH_NO,EXPIRY_DT,MRP,PURCHASE_PRICE,PERISHABLE,NEW_PRODUCT_CODE,SKU_CODING_SCHEME)
				 SELECT @cXnId AS sp_id,B.PID_ROW_ID AS PID_ROW_ID,B.PRODUCT_CODE,CAST(0 AS INT) AS SR_NO ,
						SKU.BATCH_NO,
						SKU.EXPIRY_DT,SKU.MRP,
						SKU.PURCHASE_PRICE,
						ISNULL(ART.PERISHABLE,0) AS PERISHABLE,
						CAST('' AS VARCHAR(100)) AS NEW_PRODUCT_CODE,
						sku.barcode_coding_scheme as CODING_SCHEME
				 FROM #BARCODES  B (NOLOCK) 
				 JOIN SKU (NOLOCK) ON B.PRODUCT_CODE =SKU.PRODUCT_CODE 
				 JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE
				 join sectionD  sd (nolock) on sd.sub_section_code =art.sub_section_code 
				 join sectionm sm (nolock) on sm.section_code =sd.section_code 
				 WHERE ISNULL(SKU.BARCODE_CODING_SCHEME,0)=1 
				 AND ISNULL(ART.STOCK_NA,0)=0
				 AND charindex('@',b.product_code)=0
				 and isnull(sm.ITEM_TYPE,0)<>2 
		 
		    end

		 END 
		 ELSE IF @NMODE=5
		 BEGIN
		     

			 DELETE FROM KEYS_PERISHABLE WHERE SP_ID=@CXNID

                 INSERT INTO KEYS_PERISHABLE(sp_id,PID_ROW_ID,PRODUCT_CODE,SR_NO,BATCH_NO,EXPIRY_DT,MRP,PURCHASE_PRICE,PERISHABLE,NEW_PRODUCT_CODE,SKU_CODING_SCHEME)
				 SELECT @cXnId AS sp_id,B.PID_ROW_ID AS PID_ROW_ID,B.PRODUCT_CODE,CAST(0 AS INT) AS SR_NO ,
						SKU.BATCH_NO,
						SKU.EXPIRY_DT,SKU.MRP,
						SKU.PURCHASE_PRICE,
						ISNULL(ART.PERISHABLE,0) AS PERISHABLE,
						CAST('' AS VARCHAR(100)) AS NEW_PRODUCT_CODE,
						sku.barcode_coding_scheme as CODING_SCHEME
				 FROM #BARCODES  B (NOLOCK) 
				 JOIN SKU (NOLOCK) ON B.PRODUCT_CODE =SKU.PRODUCT_CODE 
				 JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE
				 join sectionD  sd (nolock) on sd.sub_section_code =art.sub_section_code 
				 join sectionm sm (nolock) on sm.section_code =sd.section_code 
				 WHERE ISNULL(SKU.BARCODE_CODING_SCHEME,0)=1 
				 AND ISNULL(ART.STOCK_NA,0)=0
				 AND charindex('@',b.product_code)=0
				 and isnull(sm.ITEM_TYPE,0)<>2 
		 
	

		 END 
		 ELSE IF @NMODE=6
		 BEGIN
		     

			 DELETE FROM KEYS_PERISHABLE WHERE SP_ID=@CXNID

			 if @CXNTYPE ='JWR_WIP'
             begin
			
                 INSERT INTO KEYS_PERISHABLE(sp_id,PID_ROW_ID,PRODUCT_CODE,SR_NO,BATCH_NO,EXPIRY_DT,MRP,PURCHASE_PRICE,PERISHABLE,NEW_PRODUCT_CODE,SKU_CODING_SCHEME)
				 SELECT @cXnId AS sp_id,B.pid_row_id AS PID_ROW_ID,B.PRODUCT_CODE,CAST(0 AS INT) AS SR_NO ,
						'' BATCH_NO,
						'' EXPIRY_DT,0 MRP,
						0  PURCHASE_PRICE,
						0 AS PERISHABLE,
						CAST('' AS VARCHAR(100)) AS NEW_PRODUCT_CODE,
						1 as CODING_SCHEME
				 FROM #BARCODES  B (NOLOCK) 
				 WHERE charindex('@',b.product_code)=0

				
		     end
	

		 END 
		 --IF @NUPDATEMODE<>1
		 --BEGIN
		 --    DELETE FROM KEYS_PERISHABLE WHERE LEFT(PID_ROW_ID,5) not IN ('LATER') AND SP_ID=@CXNID
		 --END
	
			SET @nStep=225.7
	EXEC SP_CHKXNSAVELOG 'PUR',@nStep,0,@cXnId,'',1
		 IF EXISTS(SELECT TOP 1 'U'  FROM KEYS_PERISHABLE (nolock) WHERE SP_ID=@CXnId AND ISNULL(product_code ,'')='')
		 BEGIN
		   SET @CERRORMSG='EAN REQUIRED FOR BATCH BARCODE'    
		   GOTO END_PROC  
		 END

	SET @nStep=225.9
	EXEC SP_CHKXNSAVELOG 'PUR',@nStep,0,@cXnId,'',1		 			
		 IF EXISTS(SELECT TOP 1 'U'  FROM KEYS_PERISHABLE (nolock) WHERE SP_ID=@CXnId AND  ISNULL(PERISHABLE,0)=1 AND ISNULL(EXPIRY_DT,'')='')
		 BEGIN
		   SET @CERRORMSG='EXPIRY DATE CAN NOT BE BLANK OF PERISHABLE ITEM'    
		   GOTO END_PROC  
		 END
		 
		IF EXISTS(SELECT TOP 1 'U'  FROM KEYS_PERISHABLE (nolock) WHERE SP_ID=@CXnId AND  ISNULL(PERISHABLE,0)=1 AND ISNULL(EXPIRY_DT,'')<CONVERT(VARCHAR(10),GETDATE(),121))
		 BEGIN
		   SET @CERRORMSG='EXPIRY DATE CAN NOT BE LESS THAN TODAY DATE'    
		   GOTO END_PROC  
		 END

		 IF NOT EXISTS(SELECT TOP 1 'U' FROM KEYS_PERISHABLE (nolock) WHERE SP_ID=@CXnId)
		 	GOTO END_PROC
		
			SET @nStep=225.12
	EXEC SP_CHKXNSAVELOG 'PUR',@nStep,0,@cXnId,'',1		   
		EXEC GETNEXTKEY 'SKU', 'PRODUCT_CODE', 50, '', 0, '',0,@CNEXTPRODUCTSR OUTPUT     
		IF @CNEXTPRODUCTSR IS NULL    
		BEGIN
			SET @CERRORMSG='Error getting Next Product Code in FIX CODE GENERATION OF PERISHABLE ITEM'    
			GOTO END_PROC  
		END 
			 
			 	SET @nStep=225.15
	EXEC SP_CHKXNSAVELOG 'PUR',@nStep,0,@cXnId,'',1
			DECLARE @CNEXTPRODUCTCODE VARCHAR(50),@CROW_ID VARCHAR(100)
			
			SET @CNEXTPRODUCTSR=@CNEXTPRODUCTSR-1

		

			WHILE EXISTS (SELECT TOP 1 'U' FROM KEYS_PERISHABLE (NOLOCK) WHERE sp_id=@CXNID AND ISNULL(NEW_PRODUCT_CODE,'')='')
			BEGIN 
			      
				  
				UPDATE KEYS_PERISHABLE SET NEW_PRODUCT_CODE=RTRIM(LTRIM(PRODUCT_CODE))+'@'+@CCUR_DEPT_ID +CAST(@CNEXTPRODUCTSR AS VARCHAR(100)) ,
											@CNEXTPRODUCTSR=@CNEXTPRODUCTSR+1
				WHERE SP_ID=@CXNID
				AND ISNULL(NEW_PRODUCT_CODE,'')=''

				if @CXNTYPE not in('SNC_WIP','JWR_WIP') 
				begin

					UPDATE A SET NEW_PRODUCT_CODE='' FROM  KEYS_PERISHABLE (NOLOCK) A
					JOIN SKU B (NOLOCK) ON A.NEW_PRODUCT_CODE =B.PRODUCT_CODE 
					WHERE A.SP_ID=@CXNID AND ISNULL(A.NEW_PRODUCT_CODE,'') <>''

				end
				ELSE
				BEGIN
				       
					UPDATE A SET NEW_PRODUCT_CODE='' FROM  KEYS_PERISHABLE (NOLOCK) A
					JOIN WIP_PMT B (NOLOCK) ON A.NEW_PRODUCT_CODE =B.PRODUCT_CODE 
					WHERE A.SP_ID=@CXNID AND ISNULL(A.NEW_PRODUCT_CODE,'') <>''


				END
			     
			     
			    SET @CLASTPRODUCTSR=@CNEXTPRODUCTSR
			    PRINT 'CHECKING PERISHABLE ROW ID :'+@CROW_ID+' FOR PRODUCT CODE :'+@CNEXTPRODUCTCODE
			 
			 
			END
			 
		SET @nStep=225.22
		EXEC SP_CHKXNSAVELOG 'PUR',@nStep,0,@cXnId,'',1

		 if exists (select  top 1 'u' FROM SKU A WITH (ROWLOCK)
			JOIN KEYS_PERISHABLE B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE 
			WHERE sp_id=@cXNId AND A.BARCODE_CODING_SCHEME <>1) and @CXNTYPE not in('JWR_WIP','SNC_WIP')
			begin

			UPDATE A SET BARCODE_CODING_SCHEME =1 FROM SKU A WITH (ROWLOCK)
			JOIN KEYS_PERISHABLE B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE 
			WHERE sp_id=@cXNId AND A.BARCODE_CODING_SCHEME <>1

			end 
				

		IF @NMODE=1
		BEGIN
					SET @nStep=226.2
    	EXEC SP_CHKXNSAVELOG 'PUR',@nStep,0,@cXnId,'',1
					-- INSERTING RECORDS IN SKU    
				INSERT SKU ( PRODUCT_CODE,PRODUCT_NAME,ARTICLE_CODE, PARA1_CODE, PARA2_CODE, PARA3_CODE,PARA4_CODE, PARA5_CODE, PARA6_CODE,    
				PURCHASE_PRICE, MRP,  LAST_UPDATE,INV_NO,INV_DT, RECEIPT_DT, AC_CODE,FORM_ID,WS_PRICE,ER_FLAG,CHALLAN_NO,BARCODE_CODING_SCHEME,EMP_CODE,VENDOR_EAN_NO,HSN_CODE,FIX_MRP,GST_PERCENTAGE  
				,BATCH_NO ,EXPIRY_DT,purchaseLocId,basic_purchase_price   )    

				SELECT  DISTINCT A.PRODUCT_CODE,C.ARTICLE_NAME, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, A.PARA3_CODE, A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE,    
				(ISNULL(A.PURCHASE_PRICE,0)+ISNULL(A.MATERIAL_COST,0)-(CASE WHEN BILL_LEVEL_TAX_METHOD=2 THEN A.TAX_AMOUNT/A.QUANTITY ELSE 0 END))
				AS PURCHASE_PRICE, A.MRP,  GETDATE() AS LAST_UPDATE,     
				B.BILL_NO AS INV_NO, B.INV_DT, B.RECEIPT_DT, B.AC_CODE,     
				A.FORM_ID,A.WHOLESALE_PRICE,B.MEMO_TYPE,B.INV_NO AS CHALLAN_NO,
				CASE WHEN ISNULL(BC.SKU_CODING_SCHEME,0)=0 THEN C.CODING_SCHEME ELSE BC.SKU_CODING_SCHEME END,
				ISNULL(B.EMP_CODE,'') AS EMP_CODE,A.VENDOR_EAN_NO ,ISNULL(A.HSN_CODE,'0000000000') ,A.FIX_MRP,A.GST_PERCENTAGE  
				,A.BATCH_NO ,A.EXPIRY_DT ,B.DEPT_ID AS purchaseLocId ,a.gross_purchase_price as basic_purchase_price
				FROM PUR_pid01106_UPLOAD A (NOLOCK)    
				JOIN PUR_pim01106_UPLOAD B (NOLOCK) ON A.SP_ID = B.SP_ID    
				JOIN ARTICLE C ON A.ARTICLE_CODE = C.ARTICLE_CODE    
				JOIN KEYS_PERISHABLE BC (NOLOCK) ON A.PRODUCT_CODE = BC.PRODUCT_CODE AND a.sp_id=bc.sp_id   
				LEFT OUTER JOIN SKU D ON A.PRODUCT_CODE = D.PRODUCT_CODE    
				WHERE B.sp_ID = @CXNID AND D.PRODUCT_CODE IS NULL    
				AND ISNULL(A.PRODUCT_CODE,'')<>''
				          
			SET @nStep=226.5
	           EXEC SP_CHKXNSAVELOG 'PUR',@nStep,0,@cXnId,'',1				     
				     
				-- INSERTING RECORDS IN SKU_OH    
				INSERT SKU_OH ( PRODUCT_CODE, DISCOUNT_AMOUNT, TAX_AMOUNT, FREIGHT, OTHER_CHARGES, ROUND_OFF, VALUE_ADD )    
				SELECT DISTINCT A.PRODUCT_CODE, 0 AS DISCOUNT_AMOUNT, 0 AS TAX_AMOUNT, 0 AS FREIGHT, 0 AS OTHER_CHARGES,     
				0 AS ROUND_OFF, 0 AS VALUE_ADD   
				FROM PUR_pid01106_UPLOAD A (NOLOCK)    
				--JOIN PUR_pim01106_UPLOAD B1 (NOLOCK) ON A.SP_ID = B1.SP_ID    
				JOIN KEYS_PERISHABLE BC (NOLOCK) ON A.PRODUCT_CODE = BC.PRODUCT_CODE AND a.sp_id=bc.sp_id   
				LEFT OUTER JOIN SKU_OH B (NOLOCK) ON A.PRODUCT_CODE = B.PRODUCT_CODE    
				WHERE a.SP_ID = @CXNID  AND  B.PRODUCT_CODE IS NULL 
				AND ISNULL(A.PRODUCT_CODE,'')<>''

				SET @nStep=226.8
	            EXEC SP_CHKXNSAVELOG 'PUR',@nStep,0,@cXnId,'',1		
						   
				UPDATE A 
				SET PRODUCT_CODE =B.NEW_PRODUCT_CODE 
				FROM PUR_pid01106_UPLOAD A
				JOIN KEYS_PERISHABLE B ON A.ROW_ID=B.PID_ROW_ID	 AND a.sp_id=b.sp_id
				WHERE A.sp_ID= @CXNID
					
				SET @nStep=227.2
	            EXEC SP_CHKXNSAVELOG 'PUR',@nStep,0,@cXnId,'',1

				UPDATE
				KEYS_PMT WITH (ROWLOCK)
				SET LASTKEYVAL =@CLASTPRODUCTSR
				WHERE TABLENAME ='SKU' AND COLUMNNAME ='PRODUCT_CODE'
				AND PREFIX='' AND FINYEAR =''

					
				IF ISNULL (@NFORCELYBARCODEGEN,0)=1
				BEGIN

					SET @nStep=228.2
	                EXEC SP_CHKXNSAVELOG 'PUR',@nStep,0,@cXnId,'',1					    

					INSERT SKU ( PRODUCT_CODE,PRODUCT_NAME,ARTICLE_CODE, PARA1_CODE, PARA2_CODE, PARA3_CODE,PARA4_CODE, PARA5_CODE, PARA6_CODE,    
					PURCHASE_PRICE, MRP,  LAST_UPDATE,INV_NO,INV_DT, RECEIPT_DT, AC_CODE,FORM_ID,WS_PRICE,ER_FLAG,CHALLAN_NO,BARCODE_CODING_SCHEME,EMP_CODE,VENDOR_EAN_NO,HSN_CODE,FIX_MRP,GST_PERCENTAGE  
					,BATCH_NO ,EXPIRY_DT,purchaseLocId ,basic_purchase_price )    
					SELECT  DISTINCT A.PRODUCT_CODE,C.ARTICLE_NAME, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, A.PARA3_CODE, A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE,    
					(ISNULL(A.PURCHASE_PRICE,0)+ISNULL(A.MATERIAL_COST,0)-(CASE WHEN BILL_LEVEL_TAX_METHOD=2 THEN A.TAX_AMOUNT/A.QUANTITY ELSE 0 END))
					AS PURCHASE_PRICE, A.MRP,  GETDATE() AS LAST_UPDATE,     
					B.BILL_NO AS INV_NO, B.INV_DT, B.RECEIPT_DT, B.AC_CODE,     
					A.FORM_ID,A.WHOLESALE_PRICE,B.MEMO_TYPE,B.INV_NO AS CHALLAN_NO,
					BC.SKU_CODING_SCHEME as coding_scheme,
					ISNULL(B.EMP_CODE,'') AS EMP_CODE,A.VENDOR_EAN_NO ,ISNULL(A.HSN_CODE,'0000000000') ,A.FIX_MRP,A.GST_PERCENTAGE  
					,A.BATCH_NO ,A.EXPIRY_DT  ,B.DEPT_ID AS  purchaseLocId,a.gross_purchase_price as basic_purchase_price
					FROM PUR_pid01106_UPLOAD A (NOLOCK)    
					JOIN PUR_PIM01106_UPLOAD B (nolock) ON A.sp_ID = B.sp_ID    
					JOIN ARTICLE C WITH (NOLOCK) ON A.ARTICLE_CODE = C.ARTICLE_CODE 
					JOIN KEYS_PERISHABLE Bc ON A.ROW_ID=Bc.PID_ROW_ID	 AND a.sp_id=bc.sp_id    
					LEFT OUTER JOIN SKU D WITH (NOLOCK) ON A.PRODUCT_CODE = D.PRODUCT_CODE    
					WHERE B.SP_ID = @CXNID AND D.PRODUCT_CODE IS NULL    
					AND ISNULL(A.PRODUCT_CODE,'')<>''
					          
					SET @nStep=228.6
                	EXEC SP_CHKXNSAVELOG 'PUR',@nStep,0,@cXnId,'',1					    
					     					     
					-- INSERTING RECORDS IN SKU_OH    
					INSERT SKU_OH ( PRODUCT_CODE, DISCOUNT_AMOUNT, TAX_AMOUNT, FREIGHT, OTHER_CHARGES, ROUND_OFF, VALUE_ADD )    
					SELECT DISTINCT A.PRODUCT_CODE, 0 AS DISCOUNT_AMOUNT, 0 AS TAX_AMOUNT, 0 AS FREIGHT, 0 AS OTHER_CHARGES,     
					0 AS ROUND_OFF, 0 AS VALUE_ADD   FROM PUR_PID01106_UPLOAD A  (NOLOCK)
					JOIN pur_PIM01106_upload B1 (nolock) ON A.SP_ID = B1.SP_ID      
					LEFT OUTER JOIN SKU_OH B WITH (NOLOCK) ON A.PRODUCT_CODE = B.PRODUCT_CODE    
					WHERE B1.SP_ID = @CXNID  AND  B.PRODUCT_CODE IS NULL 
					AND ISNULL(A.PRODUCT_CODE,'')<>''
				END
				ELSE
					insert GENBARCODE_ROWS (pid_row_id,sp_id,product_code,CODING_SCHEME)
					SELECT a.pid_row_id ,a.sp_id,a.new_product_code,a.SKU_CODING_SCHEME FROM KEYS_PERISHABLE a (NOLOCK) 
					LEFT OUTER JOIN GENBARCODE_ROWS b (NOLOCK) ON a.pid_row_id=b.PID_ROW_ID AND b.sp_id=a.SP_ID
					WHERE a.sp_id=@CXNID AND b.sp_id IS NULL

					
					
		END 	
		ELSE IF @NMODE=2
		BEGIN
			      
					
				UPDATE
				KEYS_PMT 
				SET LASTKEYVAL =@CLASTPRODUCTSR
				WHERE TABLENAME ='SKU' AND COLUMNNAME ='PRODUCT_CODE'
				AND PREFIX='' AND FINYEAR =''
			
			     	-- INSERTING RECORDS IN SKU    
				INSERT SKU ( PRODUCT_CODE,PRODUCT_NAME,ARTICLE_CODE, PARA1_CODE, PARA2_CODE, PARA3_CODE,PARA4_CODE, PARA5_CODE, PARA6_CODE,    
				PURCHASE_PRICE, MRP,  LAST_UPDATE,INV_NO,INV_DT, RECEIPT_DT, AC_CODE,FORM_ID,WS_PRICE,ER_FLAG,CHALLAN_NO,BARCODE_CODING_SCHEME,EMP_CODE,VENDOR_EAN_NO,HSN_CODE,FIX_MRP,GST_PERCENTAGE  
				,BATCH_NO ,EXPIRY_DT ,purchaseLocId,basic_purchase_price )    
				SELECT  DISTINCT BC.NEW_PRODUCT_CODE AS  PRODUCT_CODE,A.PRODUCT_NAME, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, A.PARA3_CODE, A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE,    
				A.PURCHASE_PRICE AS PURCHASE_PRICE,
				A.MRP,  GETDATE() AS LAST_UPDATE,     
				mst.MEMO_NO AS INV_NO, MST.MEMO_DT, MST.MEMO_DT AS RECEIPT_DT, MST.AC_CODE,     
				A.FORM_ID,A.WS_PRICE,A.ER_FLAG,A.CHALLAN_NO,A.BARCODE_CODING_SCHEME,  
				ISNULL(A.EMP_CODE,'') AS EMP_CODE,A.VENDOR_EAN_NO ,ISNULL(A.HSN_CODE,'0000000000') ,A.FIX_MRP,A.GST_PERCENTAGE  
				,A.BATCH_NO ,A.EXPIRY_DT,MST.location_Code  AS purchaseLocId ,a.basic_purchase_price 
				FROM SKU A
			    JOIN GRN_PS_DET B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE 
			    JOIN GRN_PS_MST MST (NOLOCK) ON B.MEMO_ID =MST.MEMO_ID 
				JOIN KEYS_PERISHABLE BC (NOLOCK) ON B.ROW_ID   = BC.PID_ROW_ID AND bc.sp_id=b.MEMO_ID    
				LEFT OUTER JOIN SKU D ON BC.NEW_PRODUCT_CODE = D.PRODUCT_CODE    
				WHERE B.MEMO_ID  = @CXNID AND D.PRODUCT_CODE IS NULL    
				AND ISNULL(BC.NEW_PRODUCT_CODE,'')<>''
				          
				SET @NSTEP=180    
				     
				     
				-- INSERTING RECORDS IN SKU_OH    
				INSERT SKU_OH ( PRODUCT_CODE, DISCOUNT_AMOUNT, TAX_AMOUNT, FREIGHT, OTHER_CHARGES, ROUND_OFF, VALUE_ADD )    
				SELECT DISTINCT BC.NEW_PRODUCT_CODE AS  PRODUCT_CODE, SKU_OH.DISCOUNT_AMOUNT, SKU_OH.TAX_AMOUNT, SKU_OH.FREIGHT, SKU_OH.OTHER_CHARGES,     
				SKU_OH.ROUND_OFF, SKU_OH.VALUE_ADD   
				FROM GRN_PS_DET A      
				JOIN SKU_OH ON A.PRODUCT_CODE =SKU_OH.PRODUCT_CODE 
				JOIN KEYS_PERISHABLE BC (NOLOCK) ON A.ROW_ID  = BC.PID_ROW_ID AND a.MEMO_ID=bc.sp_id    
				LEFT OUTER JOIN SKU_OH B ON BC.NEW_PRODUCT_CODE = B.PRODUCT_CODE    
				WHERE A.MEMO_ID = @CXNID  AND  B.PRODUCT_CODE IS NULL 
				AND ISNULL(BC.PRODUCT_CODE,'')<>''
				   
				   
				UPDATE A 
				SET PRODUCT_CODE =B.NEW_PRODUCT_CODE 
				FROM GRN_PS_DET A WITH (ROWLOCK)
				JOIN KEYS_PERISHABLE B (NOLOCK) ON A.ROW_ID=B.PID_ROW_ID AND a.MEMO_ID=b.sp_id	
				WHERE A.MEMO_ID = @CXNID
					
				
		END 
		ELSE IF @NMODE=4
		BEGIN
			      
					
				UPDATE
				KEYS_PMT 
				SET LASTKEYVAL =@CLASTPRODUCTSR
				WHERE TABLENAME ='SKU' AND COLUMNNAME ='PRODUCT_CODE'
				AND PREFIX='' AND FINYEAR =''
		
				
	

		--	SELECT AC_CODE FROM LM01106
			     	-- INSERTING RECORDS IN SKU    
             IF @CXNTYPE<>'SNC_WIP'
			 BEGIN
				INSERT SKU ( PRODUCT_CODE,PRODUCT_NAME,ARTICLE_CODE, PARA1_CODE, PARA2_CODE, PARA3_CODE,PARA4_CODE, PARA5_CODE, PARA6_CODE,    
				PURCHASE_PRICE, MRP,  LAST_UPDATE,INV_NO,INV_DT, RECEIPT_DT, AC_CODE,FORM_ID,WS_PRICE,BARCODE_CODING_SCHEME,purchaseLocId,hsn_code ,
				basic_purchase_price )    
			   SELECT  B.PRODUCT_CODE,ART.ARTICLE_NAME, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, A.PARA3_CODE, A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE,    
			   A.PURCHASE_PRICE, A.MRP,  GETDATE() AS LAST_UPDATE,     
			   C.MEMO_NO AS INV_NO, C.RECEIPT_DT, C.RECEIPT_DT,'0000000000' AS AC_CODE,     
			   '0000000' AS FORM_ID,A.MRP AS WS_PRICE,ART.CODING_SCHEME ,C.location_Code  AS purchaseLocId  ,
			   ISNULL(Art.HSN_CODE,'0000000000')  ,a.PURCHASE_PRICE as basic_purchase_price
			   FROM #BARCODES B    
			   JOIN SNC_DET A ON B.PID_ROW_ID=A.ROW_ID
			   JOIN SNC_MST C ON C.MEMO_ID = A.MEMO_ID    
			   JOIN ARTICLE ART ON A.ARTICLE_CODE = ART.ARTICLE_CODE    
			   LEFT OUTER JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE    
			   WHERE C.MEMO_ID = @CXNID AND D.PRODUCT_CODE IS NULL    
       
			   SET @NSTEP=370    
       
			   PRINT 'GENBC-13'
			   -- INSERTING RECORDS IN SKU_OH    
			  INSERT SKU_OH ( PRODUCT_CODE, DISCOUNT_AMOUNT, TAX_AMOUNT, FREIGHT, OTHER_CHARGES, ROUND_OFF, VALUE_ADD )    
			   SELECT DISTINCT A.PRODUCT_CODE, 0 AS DISCOUNT_AMOUNT, 0 AS TAX_AMOUNT, 0 AS FREIGHT, 0 AS OTHER_CHARGES,     
			   0 AS ROUND_OFF, 0 AS VALUE_ADD    
			   FROM #BARCODES A    
			   LEFT OUTER JOIN SKU_OH B ON A.PRODUCT_CODE = B.PRODUCT_CODE    
			   WHERE B.PRODUCT_CODE IS NULL   
				
			END
				UPDATE A 
				SET PRODUCT_CODE =B.NEW_PRODUCT_CODE 
				FROM #BARCODES A WITH (ROWLOCK)
				JOIN KEYS_PERISHABLE B (NOLOCK) ON A.PID_ROW_ID=B.PID_ROW_ID and  A.PRODUCT_CODE = B.PRODUCT_CODE    
				WHERE B.SP_ID = @CXNID
					
				
		END 
		ELSE IF @NMODE=5
		BEGIN
			      
					
				UPDATE
				KEYS_PMT 
				SET LASTKEYVAL =@CLASTPRODUCTSR
				WHERE TABLENAME ='SKU' AND COLUMNNAME ='PRODUCT_CODE'
				AND PREFIX='' AND FINYEAR =''
			

			    DECLARE @DCNCMEMO_DT DATETIME,@CpurchaseLocId VARCHAR(4)
				SELECT  @DCNCMEMO_DT=CNC_MEMO_DT,@CpurchaseLocId=dept_id  FROM CNC_ICM01106_UPLOAD WHERE SP_ID=@CXNID   

	
		--	SELECT AC_CODE FROM LM01106
			     	-- INSERTING RECORDS IN SKU    
				INSERT SKU ( PRODUCT_CODE,PRODUCT_NAME,ARTICLE_CODE, PARA1_CODE, PARA2_CODE, PARA3_CODE,PARA4_CODE, PARA5_CODE, PARA6_CODE,    
				PURCHASE_PRICE, MRP,  LAST_UPDATE,INV_NO,INV_DT, RECEIPT_DT, AC_CODE,FORM_ID,WS_PRICE,BARCODE_CODING_SCHEME,hsn_code,purchaseLocId,
				basic_purchase_price )    
			   SELECT distinct  B.new_PRODUCT_CODE,ART.ARTICLE_NAME, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, A.PARA3_CODE, A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE,    
			   A.PURCHASE_PRICE, A.MRP,  GETDATE() AS LAST_UPDATE,     
			   a.inv_no AS INV_NO, @DCNCMEMO_DT  RECEIPT_DT, @DCNCMEMO_DT RECEIPT_DT,'0000000000' AS AC_CODE,     
			   '0000000' AS FORM_ID,A.MRP AS WS_PRICE,a.barcode_coding_scheme  ,a.hsn_code, @CpurchaseLocId purchaseLocId ,a.basic_purchase_price 
			   FROM  KEYS_PERISHABLE b 
			   join #BARCODES tmp on tmp.PID_ROW_ID=B.PID_ROW_ID 
			   join sku a (nolock) on tmp.product_code =a.product_code 
			   JOIN ARTICLE ART ON A.ARTICLE_CODE = ART.ARTICLE_CODE  
			   LEFT OUTER JOIN SKU D ON B.new_PRODUCT_CODE = D.PRODUCT_CODE    
			   WHERE b.sp_id=@CXNID and  D.PRODUCT_CODE IS NULL    
       
			   SET @NSTEP=370    
       
			   PRINT 'GENBC-13'
			   -- INSERTING RECORDS IN SKU_OH    
			
			  	UPDATE A 
				SET PRODUCT_CODE =B.NEW_PRODUCT_CODE 
				FROM #BARCODES A WITH (ROWLOCK)
				JOIN KEYS_PERISHABLE B (NOLOCK) ON A.PID_ROW_ID=B.PID_ROW_ID 
				WHERE B.SP_ID = @CXNID
				
		END 
		ELSE IF @NMODE=6
		BEGIN
			      
				
				UPDATE
				KEYS_PMT 
				SET LASTKEYVAL =@CLASTPRODUCTSR
				WHERE TABLENAME ='SKU' AND COLUMNNAME ='PRODUCT_CODE'
				AND PREFIX='' AND FINYEAR =''
			
			   SET @NSTEP=370    
       
			   PRINT 'GENBC-13'
			   -- INSERTING RECORDS IN SKU_OH    

			 
			  	UPDATE A 
				SET PRODUCT_CODE =B.NEW_PRODUCT_CODE 
				FROM jobwork_receipt_det A WITH (ROWLOCK)
				JOIN KEYS_PERISHABLE B (NOLOCK) ON A.row_id=B.PID_ROW_ID 
				WHERE B.SP_ID = @CXNID  and a.receipt_id =@CXNID
				
		END 
			 
END TRY         
BEGIN CATCH    		    
  SET @CERRORMSG = 'PROCEDURE SAVETRAN_GENPERISHABLE_BARCODE : STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()    
    
END CATCH    
     
END_PROC:  

END