create PROCEDURE SP3s_SYNCH_UPLOADDATA_SNC_OPT
(
   @nSpId VARCHAR(50),
   @CERRMSG VARCHAR(MAX) OUTPUT
)

AS
BEGIN

	DECLARE @CSTEP VARCHAR(100),@DTSQL NVARCHAR(MAX),@NMERGE_ORDER NUMERIC(5)
		   ,@CTABLENAME VARCHAR(200),@CTABLE_SUFFIX VARCHAR(50),@CKEYFIELD VARCHAR(200),@CDEL_ID VARCHAR(50),@CTMP_TABLENAME VARCHAR(200),@LINSERTONLY VARCHAR(1)
		   ,@CFILTERCONDITION VARCHAR(200),@LUPDATEONLY VARCHAR(1),@BALWAYSUPDATE VARCHAR(1),@FDEL CHAR(1)
		   ,@CERRMSGOUT VARCHAR(1000),@CTABLESSTR VARCHAR(MAX)
		   ,@CMEMOID VARCHAR(100),@NVERSIONNO INT,
	        @CMEMOIDSEARCH varchar(100),@BADDMODE bit,@CMERGEDB varchar(100),@CSOURCEDB varchar(100),
	        @BMSTINSERTONLY bit,@BCANCELLED BIT,@cCmd NVARCHAR(MAX),@cUpdatestr VARCHAR(1000),
			@nUpdateMode numeric(1,0),@cLocId varchar(5)
	BEGIN TRY
  

	LBLSTART:
	 SET @CMERGEDB=''
	 SET @CSOURCEDB=''
     SELECT @CMEMOID='',@NVERSIONNO=0
	 set @BMSTINSERTONLY=1
  BEGIN TRANSACTION 

    SELECT TOP 1 @CMEMOID = B.MEMO_ID,@BCANCELLED=CANCELLED ,@cLocId = B.location_Code 
    FROM SNC_SNC_MST_UPLOAD  B (NOLOCK)
	WHERE SP_ID=@nSpId
    
    IF ISNULL(@CMEMOID,'')=''
		GOTO EXIT_PROC
		
    SET @CFILTERCONDITION = 'B.SP_ID='''+@nSpId+''' '
	
	SET @CMEMOIDSEARCH=''
	SELECT TOP 1 @CMEMOIDSEARCH=A.memo_id  FROM SNC_MST  A (NOLOCK) WHERE A.memo_id =@CMEMOID
	
	IF ISNULL(@CMEMOIDSEARCH,'')<>''
		SET @BADDMODE=0
	ELSE
		SET @BADDMODE=1

	
LBLMERGE:
	---DELETING EXISTING RECORD IF BILL COMES AGAIN FOR MERGING
	IF @BADDMODE=0
		PRINT 'ADDMODE:N'
	ELSE
		PRINT 'ADDMODE:Y'	


  IF ISNULL(@BADDMODE,0)=0
  BEGIN
        
		IF @bCancelled=1 
		BEGIN
			UPDATE SNC_MST WITH (ROWLOCK) SET cancelled=1 WHERE MEMO_ID=@cMemoid
			GOTO lblUpdatePmt
		END

		IF EXISTS (SELECT TOP 1 tablename FROM savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nSPID)
			DELETE FROM savetran_updcols_updatestr WITH (ROWLOCK) WHERE sp_id=@nSpId

		INSERT savetran_updcols_updatestr (sp_id,tablename,updatestr)
		SELECT @nSPId as sp_id,tablename,'' from mirrorxnsinfo (NOLOCK)
		WHERE tablename IN ('SNC_MST','SNC_DET','SNC_CONSUMABLE_DET')

		
		EXEC SP3S_VERIFY_SNCDATA_merge_CHANGES
		@cMemoId=@cMemoId,
		@nSpId=@nSpid



	END

	
	DECLARE @cMissingRowId VARCHAR(40)

	SET @nUpdateMode=(CASE WHEN @BADDMODE=1 THEN 1 WHEN @bCancelled=1 THEN 3 ELSE 2 END)

	EXEC SP3S_upd_qty_lastupdate
	@nUpdateMode=@NUPDATEMODE,
	@cXnType='SNC',
	@nSpId=@nSpId,
	@cMasterTable='SNC_mst',
	@cMemoIdCol='memo_id',
	@cXnDtCol='Receipt_dt',
	@cMemoId=@CMEMOIDSEARCH,
	@bCalledfromMerging=1,
	@CERRORMSG=@CERRMSG OUTPUT

	IF ISNULL(@cErrmsg,'')<>''
		GOTO EXIT_PROC


	IF @BADDMODE=0
	BEGIN	

		SET @CSTEP=27
	
		DELETE A FROM SNC_BARCODE_DET A (NOLOCK)
		JOIN SNC_DET B (NOLOCK) ON A.REFROW_ID=B.ROW_ID
		WHERE B.MEMO_ID=@CMEMOID

		SET @CSTEP=32
	
	   	SELECT TOP 1 @cMissingRowId=a.row_id FROM SNC_CONSUMABLE_DET A (NOLOCK) 
		LEFT JOIN 
		(SELECT row_id FROM SNC_SNC_CONSUMABLE_DET_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId) b
		ON A.row_ID =B.row_ID WHERE A.MEMO_ID =@CMEMOID AND b.row_id IS NULL

		IF ISNULL(@cMissingRowId,'')<>''
		BEGIN		
			SET @CSTEP=30
		
			DELETE A FROM SNC_CONSUMABLE_DET A WITH (ROWLOCK) LEFT JOIN 
			(SELECT row_id FROM SNC_SNC_CONSUMABLE_DET_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId) b
			ON A.row_ID =B.row_ID WHERE A.MEMO_ID =@CMEMOID AND b.row_id IS NULL
		END

		SELECT TOP 1 @cMissingRowId=a.row_id FROM SNC_DET A (NOLOCK) 
		LEFT JOIN 
		(SELECT row_id FROM SNC_SNC_DET_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId) b
		ON A.row_ID =B.row_ID WHERE A.MEMO_ID =@CMEMOID AND b.row_id IS NULL

		IF ISNULL(@cMissingRowId,'')<>''
		BEGIN		
			SET @CSTEP=30
		
			DELETE A FROM SNC_DET A WITH (ROWLOCK) LEFT JOIN 
			(SELECT row_id FROM SNC_SNC_DET_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId) b
			ON A.row_ID =B.row_ID WHERE A.MEMO_ID =@CMEMOID AND b.row_id IS NULL
		END



	END



	  DECLARE @CWHERE VARCHAR(100)
	  SET @CWHERE=' AND A.sp_ID='''+@nSpId+''''

	  
	IF EXISTS (SELECT TOP 1 a.section_code FROM SNC_Sectionm_upload a (NOLOCK)
				LEFT OUTER JOIN sectionm b (NOLOCK) ON a.section_code=b.section_code
				WHERE a.sp_id=@nSpId AND b.section_code IS NULL)
	BEGIN
		SET @CSTEP=37

		SET @CTABLENAME='SECTIONM'
		SET @CTMP_TABLENAME='SNC_SECTIONM_upload'
		SET @CKEYFIELD='SECTION_CODE'
		SET @CSTEP=45

		EXEC SP3S_INACTIVE_MASTERS @CTEMPTABLE=@CTMP_TABLENAME,@CTABLENAME=@CTABLENAME,@CCOLNAME='SECTION_NAME',@CCOLKEYNAME=@CKEYFIELD,@CWHERE=@CWHERE

		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1 
	END

	IF EXISTS (SELECT TOP 1 a.section_code FROM SNC_Sectiond_upload a (NOLOCK)
			LEFT OUTER JOIN sectiond b (NOLOCK) ON a.sub_section_code=b.sub_section_code
			WHERE a.sp_id=@nSpId AND b.sub_section_code IS NULL)
	BEGIN

	
		SET @CSTEP=50

		SET @CTABLENAME='SECTIOND'
		SET @CTMP_TABLENAME='SNC_SECTIOND_UPLOAD'
		SET @CKEYFIELD='SUB_SECTION_CODE'

		
		EXEC SP3S_INACTIVE_MASTERS @CTEMPTABLE=@CTMP_TABLENAME,@CTABLENAME=@CTABLENAME,@CCOLNAME='SUB_SECTION_NAME',@CCOLKEYNAME=@CKEYFIELD,@CWHERE=@CWHERE

		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1 
	END						  

	IF EXISTS (SELECT TOP 1 a.article_code FROM SNC_ARTICLE_upload a (NOLOCK) 
				LEFT OUTER JOIN article b (NOLOCK) ON a.article_code=b.article_code
			    WHERE a.sp_id=@nSpId AND b.article_code IS NULL)	
	BEGIN

   		SET @CSTEP=55

		SET @CTABLENAME='ARTICLE'
		SET @CTMP_TABLENAME='SNC_ARTICLE_upload'
		SET @CKEYFIELD='ARTICLE_CODE'
		
		
		EXEC SP3S_INACTIVE_MASTERS @CTEMPTABLE=@CTMP_TABLENAME,@CTABLENAME=@CTABLENAME,@CCOLNAME='ARTICLE_NO',@CCOLKEYNAME=@CKEYFIELD,@CWHERE=@CWHERE

		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
									,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
									,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
									,@BALWAYSUPDATE=1 
							  
	END
	
	DECLARE @nParaCnt NUMERIC(2,0),@cColName VARCHAR(20)							  

	DECLARE @NCOUNT INT,@BLOOP INT,@CCMD1 NVARCHAR(MAX),@bExists bit
	SET @NCOUNT=6
	SET @BLOOP=1
	WHILE (@BLOOP <=@NCOUNT )
	BEGIN
			SET @CSTEP=65

			SET @nParaCnt=@bLoop
			SET @CTABLENAME='PARA'+RTRIM(LTRIM(STR(@nParaCnt)))
			SET @CTMP_TABLENAME='SNC_PARA'+RTRIM(LTRIM(STR(@nParaCnt)))+'_upload'
			SET @CKEYFIELD='PARA'+RTRIM(LTRIM(STR(@nParaCnt)))+'_CODE'

			SET @cColName='PARA'+RTRIM(LTRIM(STR(@nParaCnt)))+'_NAME'

			
		
		EXEC SP3S_INACTIVE_MASTERS @CTEMPTABLE=@CTMP_TABLENAME,@CTABLENAME=@CTABLENAME,@CCOLNAME=@cColName,@CCOLKEYNAME=@CKEYFIELD,@CWHERE=@CWHERE

			SET @cCmd=N'IF EXISTS (SELECT TOP 1 '+@CKEYFIELD+' FROM '+@CTMP_TABLENAME+'(NOLOCK) WHERE sp_id='''+@nSpId+'''
							AND '+@cKeyField+'<>''0000000'')
							SET @bExists=1
						ELSE
							SET @bExists=0'
			PRINT @cCmd
			EXEC SP_EXECUTESQL @cCmd,N'@bExists BIT OUTPUT' ,@bExists=@bExists OUTPUT

		  	----FOR DUPLICATE ATTRIBUTE 
			
			IF @bExists=1
			BEGIN
				SET @CSTEP=70
				

				SET @cCmd=N'IF EXISTS (SELECT TOP 1 a.'+@CKEYFIELD+' FROM '+@CTMP_TABLENAME+' a (NOLOCK)
									   LEFT OUTER JOIN '+@CTABLENAME+' b (NOLOCK) ON a.'+@CKEYFIELD+'=b.'+@CKEYFIELD+'
									   WHERE sp_id='''+@nSpId+''' AND b.'+@CKEYFIELD+' IS NULL)
							SET @bExists=1
						ELSE
							SET @bExists=0'
				EXEC SP_EXECUTESQL @cCmd,N'@bExists BIT OUTPUT' ,@bExists=@bExists OUTPUT

		
				IF @bExists=1
				BEGIN

					SET @CSTEP=75

					 EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB        
					 ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''        
					 ,@LINSERTONLY=1,@LUPDATEONLY=0        
					 ,@BALWAYSUPDATE=1
					 ,@CFILTERCONDITION=@CFILTERCONDITION 
				END
			END
			
		

	       
		   SET @BLOOP=@BLOOP +1  			
	END
    						  
	
	SET @CSTEP=157
	--according to purchase chnage in sku & sku_oh as discuss with sanjay sir


	DECLARE @bINSERTSKUONLY INT 
	SET @bINSERTSKUONLY=0
	
	SET @CSTEP=145
 
	
    IF EXISTS (SELECT TOP 1 'U' FROM SNC_SKU_UPLOAD A (NOLOCK) JOIN IRD01106 B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
			   JOIN IRM01106 C (NOLOCK) ON B.IRM_MEMO_ID=C.IRM_MEMO_ID 
			   WHERE sp_ID=@nSpId AND C.TYPE IN (1,3,4) AND ISNULL(b.new_product_code,'')='')
    BEGIN
		SET @CSTEP=150
		

      SET @bINSERTSKUONLY=1
      UPDATE A SET ARTICLE_CODE=B.ARTICLE_CODE,PARA1_CODE=B.PARA1_CODE,PARA2_CODE=B.PARA2_CODE,
                 PARA3_CODE=B.PARA3_CODE,PARA4_CODE=B.PARA4_CODE,PARA5_CODE=B.PARA5_CODE,
                 PARA6_CODE=B.PARA6_CODE ,MRP=B.MRP,ws_price=b.ws_price 
                 FROM SNC_SKU_UPLOAD A (NOLOCK) 
                 JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
                 JOIN IRD01106 C (NOLOCK) ON C.product_code=A.product_code
                 JOIN irm01106 D (NOLOCK) ON D.irm_memo_id=C.irm_memo_id
                 WHERE  sp_ID=@nSpId AND D.TYPE IN (1,3,4) AND ISNULL(c.new_product_code,'')=''
    END
    
	SET @CSTEP=155
 

	SELECT @cMissingRowId='',@lUpdateonly=0,@cUpdatestr=''
	IF @BADDMODE=0 AND @bINSERTSKUONLY=0
	BEGIN
		SET @CSTEP=185
		

		SELECT TOP 1 @cMissingRowId=b.product_code FROM 
		(SELECT product_code  FROM SNC_SKU_UPLOAD (NOLOCK) WHERE sp_id=(LEFT(@nSPId,38)+@cLocId )) A
		RIGHT OUTER JOIN 
		(SELECT product_code FROM SNC_SKU_UPLOAD (NOLOCK) WHERE sp_ID=@nSpId) b ON 
		a.product_code=b.product_code WHERE a.product_code IS NULL

		--SELECT 'check @cMissingRowId of pid',@cMissingRowId

		IF ISNULL(@cMissingRowId,'')='' 
			SET @lUpdateonly=1
	END

	SET @CSTEP=157
  
	SET @CTABLENAME='SKU'
	SET @CTMP_TABLENAME='SNC_SKU_UPLOAD'
	SET @CKEYFIELD='PRODUCT_CODE'
	
	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nspid and tablename='sku'

	SET @CSTEP=157.3

	SELECT a.product_code INTO #tmpSku FROM SNC_SKU_UPLOAD a (NOLOCK) where 1=2


	IF @LUPDATEONLY=0
	BEGIN	
		SET @CSTEP=157.5
	   

		INSERT INTO #tmpSku
		SELECT a.product_code FROM SNC_SKU_UPLOAD a (NOLOCK) LEFT OUTER JOIN 
		sku b (NOLOCK) ON a.product_code=b.product_code
		WHERE a.sp_ID=@nSpId AND b.product_code IS NULL AND ISNULL(a.product_code,'')<>''
	END

	DECLARE @bBarCodeGenerated BIT
	set @bBarCodeGenerated=0

	IF EXISTS (SELECT TOP 1 product_code FROM  #tmpSku)
		SET @bBarCodeGenerated=1

	IF @bBarCodeGenerated=0 AND @BADDMODE=1
	BEGIN
		IF EXISTS (SELECT top 1 a.product_code FROM SNC_SKU_UPLOAD a (NOLOCK) WHERE sp_id=@nSpId AND ISNULL(a.product_code,'')<>'')
			SET @bBarCodeGenerated=1
	END

	SET @CSTEP=158
 
	declare @cRemarks varchar(2000)

	IF (@bBarCodeGenerated=1 OR  EXISTS (SELECT TOP 1 product_code FROM  #tmpSku)  OR ISNULL(@cUpdatestr,'')<>'')
	BEGIN
		IF @bINSERTSKUONLY=0 AND @bAddmode=1
		BEGIN
			IF NOT EXISTS (SELECT TOP 1 a.product_code FROM SNC_SKU_UPLOAD a (NOLOCK) 
					   JOIN sku b (NOLOCK) ON a.product_code=b.product_code
					   WHERE a.sp_ID=@nSpId )
				SET @bINSERTSKUONLY=1
		END
		
	

		SET @CSTEP=158.5
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1
		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=@bINSERTSKUONLY,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
								  ,@BALWAYSUPDATE=1,@lUpdateXns=0,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1  
	END

	SET @CSTEP=159
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1
	IF EXISTS (SELECT TOP 1 a.product_code FROM SNC_SKU_OH_UPLOAD a (NOLOCK) LEFT OUTER JOIN 
			   sku_oh b (NOLOCK) ON a.product_code=b.product_code
			   WHERE a.sp_ID=@nSpId AND b.product_code IS NULL) 
	BEGIN
		SET @CSTEP=160
	

		SET @CTABLENAME='SKU_OH'
		SET @CTMP_TABLENAME='snc_SKU_OH_upload'
		SET @CKEYFIELD='PRODUCT_CODE'

	
		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1 
	END
					

	--IF EXISTS (SELECT TOP 1 a.product_code FROM SNC_SKU_upload a (NOLOCK) LEFT OUTER JOIN 
	--		   sku b (NOLOCK) ON a.product_code=b.product_code
	--		   WHERE a.sp_ID=@nSpId AND b.product_code IS NULL) 
	--BEGIN
	--	SET @CSTEP=160

	--	SET @CTABLENAME='SKU'
	--	SET @CTMP_TABLENAME='SNC_SKU_UPLOAD'
	--	SET @CKEYFIELD='PRODUCT_CODE'

	
	--	EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
	--							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
	--							  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
	--							  ,@BALWAYSUPDATE=1 
	--END


	--IF EXISTS (SELECT TOP 1 a.product_code FROM SNC_SKU_OH_upload a (NOLOCK) LEFT OUTER JOIN 
	--		   sku_oh b (NOLOCK) ON a.product_code=b.product_code
	--		   WHERE a.sp_ID=@nSpId AND b.product_code IS NULL) 
	--BEGIN
	--	SET @CSTEP=160

	--	SET @CTABLENAME='SKU_OH'
	--	SET @CTMP_TABLENAME='SNC_SKU_OH_UPLOAD'
	--	SET @CKEYFIELD='PRODUCT_CODE'

	
	--	EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
	--							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
	--							  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
	--							  ,@BALWAYSUPDATE=1 
	--END


		SET @CSTEP=300
		SET @CTABLENAME='SNC_MST'
		SET @CTMP_TABLENAME='SNC_SNC_MST_UPLOAD'
		SET @CKEYFIELD='MEMO_ID'
		SET @CSTEP=320
		
		SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK)  WHERE sp_id=@nSpId and tablename='SNC_MST'
		SET @LUPDATEONLY = (CASE WHEN @BADDMODE=0 THEN 1 ELSE 0 END)		
		
		
    	EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
							  ,@BALWAYSUPDATE=1,@lUpdateXns=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1  

		
		SET @CSTEP=350
		SET @CTABLENAME='SNC_DET'
		SET @CTMP_TABLENAME='SNC_SNC_DET_UPLOAD'
		SET @CKEYFIELD='row_ID'
		SET @CSTEP=360

	SELECT @cMissingRowId='',@lUpdateonly=0
	IF @BADDMODE=0
	BEGIN
	
		SELECT TOP 1 @cMissingRowId=b.row_id FROM 
		(SELECT row_id  FROM SNC_SNC_DET_UPLOAD (NOLOCK) WHERE sp_id=(@nSpId+@cLocId )) A
		RIGHT OUTER JOIN 
		(SELECT row_id FROM SNC_SNC_DET_UPLOAD (NOLOCK) WHERE sp_id=@nSpId) b ON 
		a.row_id=b.row_id WHERE a.row_id IS NULL


		IF ISNULL(@cMissingRowId,'')='' 
			SET @lUpdateonly=1
	END


	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK)  WHERE sp_id=@nSpId and tablename='SNC_DET'
	set @cUpdatestr=isnull(@cUpdatestr,'')

	EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@lUpdateonly
							  ,@BALWAYSUPDATE=1,@lUpdateXns=@BADDMODE,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 

		
		
		SET @CSTEP=400
		SET @CTABLENAME='SNC_CONSUMABLE_DET'
		SET @CTMP_TABLENAME='SNC_SNC_CONSUMABLE_DET_UPLOAD'
		SET @CKEYFIELD='ROW_ID'
		SET @CSTEP=500

		SELECT @cMissingRowId='',@lUpdateonly=0
		IF @BADDMODE=0
		BEGIN
	
			SELECT TOP 1 @cMissingRowId=b.row_id FROM 
			(SELECT row_id  FROM SNC_SNC_CONSUMABLE_DET_UPLOAD (NOLOCK) WHERE sp_id=(@nSpId+@cLocId )) A
			RIGHT OUTER JOIN 
			(SELECT row_id FROM SNC_SNC_CONSUMABLE_DET_UPLOAD (NOLOCK) WHERE sp_id=@nSpId) b ON 
			a.row_id=b.row_id WHERE a.row_id IS NULL


			IF ISNULL(@cMissingRowId,'')='' 
				SET @lUpdateonly=1
		END


	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK)  WHERE sp_id=@nSpId and tablename='SNC_CONSUMABLE_DET'
	set @cUpdatestr=isnull(@cUpdatestr,'')


	EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@lUpdateonly
							  ,@BALWAYSUPDATE=1,@lUpdateXns=@BADDMODE,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 


		
		SET @CSTEP=600
		SET @CTABLENAME='SNC_BARCODE_DET'
		SET @CTMP_TABLENAME='SNC_SNC_BARCODE_DET_UPLOAD'
		SET @CKEYFIELD='REFROW_ID'
		SET @CSTEP=700
		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='PRODUCT_CODE',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1 
							

		SET @CSTEP=705 


lblUpdatePmt:
		
	EXEC SP3S_MERGE_LOCPMT  
	@cTempTable='SNC_PMT01106_UPLOAD',  
	@cMemoIdCol='SP_ID',  
	@cMemoId =@nSpId

	IF ISNULL(@cErrmsg,'')=''
	BEGIN
		SET @CSTEP=707
		EXEC SP_CHKXNSAVELOG 'SNCMERGE',@CSTEP,0,@CMEMOID,'',1

		EXEC SP3S_VALIDATE_DATAMERGED_SINGLECHANNEL
		@cMasterTable='snc_mst',
		@cDetTable='snc_det',
		@cMemoIdCol='memo_id',
		@cMemoId=@cMemoId,
		@cUploadTable='snc_snc_mst_upload',
		@nSpId=@nSpId,
		@cErrormsg=@CERRMSG OUTPUT

		IF ISNULL(@cErrmsg,'')=''
			GOTO EXIT_PROC
    END

	SET @cStep=710
	
	
	EXEC SP3S_DELETE_UPLOAD_PRTMERGE_TABLES @nSpId
	DECLARE @nSpidCopy VARCHAR(50)
	SET @nSpIdCopy=LEFT(@nSPId,38)+@cLocId 
	IF @bAddmode=0
		EXEC SP3S_DELETE_UPLOAD_PRTMERGE_TABLES @nSpIdCopy
	
		GOTO EXIT_PROC

	
								  						  
	END TRY
	BEGIN CATCH
		SET @CERRMSG='P:SP3s_SYNCH_UPLOADDATA_SNC_OPT, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	END CATCH

EXIT_PROC:	
	IF ISNULL(@CERRMSG,'')='' AND @@TRANCOUNT>0
	BEGIN
		COMMIT
	END
	ELSE IF ISNULL(@CERRMSG,'')<>'' AND @@TRANCOUNT>0
		ROLLBACK
END
