create PROCEDURE SAVETRAN_PURCHASE_ALLOCATION
@NUPDATEMODE INT=1,
@CMRRID VARCHAR(40),
@DXNDT DATETIME='',
@NSPID INT=0,
@CUSERCODE CHAR(7)='',
@CFINYEAR VARCHAR(5)=''
AS
BEGIN

	--changes by Dinkar in location id varchar(4)..
	DECLARE @CTEMPPURALLOCATETABLENAME VARCHAR(500),@CTEMPPURALLOCATETABLE VARCHAR(500),@CTEMPDBNAME VARCHAR(500),
			@CCMD NVARCHAR(MAX),@CTEMPWPSMSTTABLENAME VARCHAR(500),@CTEMPWPSMSTTABLE VARCHAR(500),
			@CTEMPWPSDETTABLENAME VARCHAR(500),@CTEMPWPSDETTABLE VARCHAR(500),@CMRRNO VARCHAR(40),@DMRRDT DATETIME,
			@CBINID VARCHAR(10),@CDEPTACCODE CHAR(10),@CPARTYDEPTID VARCHAR(5),@CMEMONOPREFIX VARCHAR(5),
			@CCURLOCID VARCHAR(5),@CSTEP VARCHAR(5),@CERRORMSG VARCHAR(MAX),@NMEMOCNT INT,@CMEMOTEXT VARCHAR(100),
			@CSUCCESSMSG VARCHAR(MAX),@CPSID VARCHAR(22),@cLocId CHAR(4)


BEGIN TRY
	
	SET @CSTEP = 10	
	 
	
	
	DECLARE @TNEGSTOCK TABLE (PRODUCT_CODE VARCHAR(50),QUANTITY_IN_STOCK NUMERIC(10,2),ERRMSG VARCHAR(500))
	
	SET @CSUCCESSMSG=''
	



		
	SET @CMEMONOPREFIX=@CCURLOCID+'-'
	
	SET @CSTEP = 20  
   SET @CTEMPDBNAME = '' 
	
	SET @CSTEP = 30
	
	IF OBJECT_ID('TEMPDB..#TMPOUTPUT','U') IS NOT NULL
		DROP TABLE #TMPOUTPUT
	
	SELECT CONVERT(VARCHAR(MAX),'') AS ERRMSG,MRR_ID AS MEMO_ID INTO #TMPOUTPUT 
	FROM PIM01106 WHERE 1=2

				
	SELECT @CTEMPPURALLOCATETABLENAME='TEMP_PURCHASE_ALLOCATION_'+LTRIM(RTRIM(STR(@NSPID))),
		   @CTEMPWPSMSTTABLENAME='TEMP_WPS_MST_'+LTRIM(RTRIM(STR(@NSPID))),
		   @CTEMPWPSDETTABLENAME='TEMP_WPS_DET_'+LTRIM(RTRIM(STR(@NSPID)))
	
	SELECT @CTEMPPURALLOCATETABLE=@CTEMPDBNAME+@CTEMPPURALLOCATETABLENAME,
		   @CTEMPWPSMSTTABLE=@CTEMPDBNAME+@CTEMPWPSMSTTABLENAME,
		   @CTEMPWPSDETTABLE=@CTEMPDBNAME+@CTEMPWPSDETTABLENAME	
		   
		   
	SET @CCMD = 'SELECT @CLOCID = location_code  FROM '+@CTEMPWPSMSTTABLENAME
				EXEC SP_EXECUTESQL @CCMD, N'@CLOCID VARCHAR(4) OUTPUT', @CLOCID OUTPUT
	
	IF @cLocId=''
		SELECT @CCURLOCID	= DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
    ELSE
		SET @CCURLOCID=@cLocId
		
	IF ISNULL(@CCURLOCID,'')=''
	 BEGIN
		SET @CERRORMSG = ' LOCATION ID CAN NOT BE BLANK  '  
		GOTO END_PROC    
	 END
	 
	SELECT @CMRRNO=MRR_NO,@DMRRDT=RECEIPT_DT,@CBINID=BIN_ID FROM PIM01106 (NOLOCK) WHERE MRR_ID=@CMRRID

	BEGIN TRANSACTION			
	IF @NUPDATEMODE=2
		GOTO LBLCANCELPACKSLIPS
	
	SET @CSTEP = 40
	IF OBJECT_ID('TEMPDB..#TMPPURALLOCATE','U') IS NOT NULL
		DROP TABLE #TMPPURALLOCATE
	
	SELECT DEPT_ID INTO #TMPPURALLOCATE FROM LOCATION WHERE 1=2
	
	IF CURSOR_STATUS('GLOBAL','PURALLOCATECUR') IN (0,1)
	BEGIN
		CLOSE PURALLOCATECUR
		DEALLOCATE PURALLOCATECUR
	END
	
	SET @CSTEP = 50
	SET @CCMD=N'SELECT DISTINCT DEPT_ID FROM '+@CTEMPPURALLOCATETABLE
	
	INSERT #TMPPURALLOCATE
	EXEC SP_EXECUTESQL @CCMD
	
	IF OBJECT_ID(@CTEMPWPSMSTTABLE,'U') IS NOT NULL
	BEGIN
		SET @CCMD=N'DROP TABLE '+@CTEMPWPSMSTTABLE
		EXEC SP_EXECUTESQL @CCMD
	END	

	IF OBJECT_ID(@CTEMPWPSDETTABLE,'U') IS NOT NULL
	BEGIN
		SET @CCMD=N'DROP TABLE '+@CTEMPWPSDETTABLE
		EXEC SP_EXECUTESQL @CCMD
	END	


	
	SET @CSTEP = 60
	DECLARE PURALLOCATECUR CURSOR FOR SELECT A.DEPT_ID,B.DEPT_AC_CODE FROM #TMPPURALLOCATE A
	JOIN LOCATION B ON A.DEPT_ID=B.DEPT_ID
	
	OPEN PURALLOCATECUR
	FETCH NEXT FROM PURALLOCATECUR INTO @CPARTYDEPTID,@CDEPTACCODE
	
	WHILE @@FETCH_STATUS=0
	BEGIN
		SET @CSTEP = 70
		SET @CCMD=N'SELECT 2 AS PS_MODE,'''+@CPARTYDEPTID+''' AS PARTY_DEPT_ID,GETDATE() AS  PS_CREATED_TIME,
		1 AS TAXFORM_STORAGE_MODE,1 AS LOTTYPE,1 AS ENTRY_MODE,''GENERATED FROM PURCHASE ALLOCATION AGAINST MRR#'+@CMRRNO+' DATED : '+CONVERT(VARCHAR,@DMRRDT,110)+''' AS REMARKS, 
		0 AS SENT_FOR_RECON,'''+@CBINID+''' AS BIN_ID,''000'' AS TARGET_BIN_ID,CONVERT(VARCHAR(22),''LATER'') AS PS_ID,
		'''+@CDEPTACCODE+''' AS AC_CODE,CONVERT(VARCHAR(15),''LATER'') AS PS_NO,'''+CONVERT(VARCHAR,@DXNDT,110)+''' AS PS_DT,
		0 AS SUBTOTAL,0 AS CANCELLED,'''' AS CHECKED_BY,'''+@CUSERCODE+''' AS USER_CODE, 
		GETDATE() AS LAST_UPDATE,'''+@CFINYEAR+''' AS FIN_YEAR,''0000000'' AS EDT_USER_CODE
		INTO '+@CTEMPWPSMSTTABLE
		
		
		EXEC SP_EXECUTESQL @CCMD		
		
		SET @CSTEP = 80
		SET @CCMD=N'SELECT CONVERT(VARCHAR(22),''LATER'') AS PS_ID,A.PRODUCT_CODE,QUANTITY,B.MRP AS RATE,'''+@CCURLOCID+''' AS DEPT_ID,
		CONVERT(VARCHAR(40),''LATER'') AS  ROW_ID,''0000000'' AS ITEM_FORM_ID,0 AS TAX_PERCENTAGE,0 AS  TAX_AMOUNT,GETDATE() AS LAST_UPDATE, 
		''0000000'' AS EMP_CODE,''0000000'' AS EMP_CODE1,''0000000'' AS EMP_CODE2,NULL AS REF_WO_DET_ROW_ID,
		'''' AS REMARKS,B.MRP,B.WS_PRICE,'''+@CBINID+''' AS BIN_ID,1 AS BOX_NO,'''' AS BOX_DT
		INTO '+@CTEMPWPSDETTABLE+' FROM '+@CTEMPPURALLOCATETABLE+' A JOIN SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE
		WHERE DEPT_ID='''+@CPARTYDEPTID+''''
		
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD		
		
		SET @CSTEP = 85
		SET @CCMD=N'SELECT A.PRODUCT_CODE,A.QUANTITY-ISNULL(B.QUANTITY_IN_STOCK,0) AS QUANTITY_IN_STOCK,
					''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG  FROM 
					(SELECT PRODUCT_CODE,SUM(QUANTITY) AS QUANTITY FROM '+@CTEMPPURALLOCATETABLE+'
					 WHERE DEPT_ID='''+@CPARTYDEPTID+''' GROUP BY PRODUCT_CODE)  A
					LEFT OUTER JOIN
					
					(SELECT A.PRODUCT_CODE,SUM(QUANTITY_IN_STOCK) AS QUANTITY_IN_STOCK FROM  PMT01106 A
					 JOIN '+@CTEMPPURALLOCATETABLE+' B ON A.PRODUCT_CODE=B.PRODUCT_CODE
					 WHERE A.BIN_ID='''+@CBINID+''' GROUP BY A.PRODUCT_CODE)  B ON A.PRODUCT_CODE=B.PRODUCT_CODE
					WHERE (A.QUANTITY-ISNULL(B.QUANTITY_IN_STOCK,0))>0'
		
		INSERT @TNEGSTOCK
		EXEC SP_EXECUTESQL @CCMD
		
		IF EXISTS (SELECT TOP 1 * FROM @TNEGSTOCK)
		BEGIN
			SELECT *,'' AS SUCCESSMSG FROM @TNEGSTOCK
			GOTO END_PROC
		END				
			
		SET @CSTEP = 90

		EXEC SAVETRAN_WPS
		@NUPDATEMODE=1,
		@NSPID=@NSPID,
		@CMEMONOPREFIX=@CMEMONOPREFIX,
		@CFINYEAR=@CFINYEAR,
		@BCALLEDFROMPURCHASE=1
		
				
		IF EXISTS (SELECT TOP 1 * FROM #TMPOUTPUT WHERE ERRMSG<>'')
			GOTO END_PROC
		
		
		
		FETCH NEXT FROM PURALLOCATECUR INTO @CPARTYDEPTID,@CDEPTACCODE
	END

	CLOSE PURALLOCATECUR
	DEALLOCATE PURALLOCATECUR	
	
	GOTO END_PROC
	
LBLCANCELPACKSLIPS:
	
	IF CURSOR_STATUS('GLOBAL','PURALLOCATECUR') IN (0,1)
	BEGIN
		CLOSE PURALLOCATECUR
		DEALLOCATE PURALLOCATECUR
	END
	
	IF EXISTS (SELECT TOP 1 A.PS_ID FROM PURCHASE_ALLOCATION_LINK A JOIN WPS_MST B ON A.PS_ID=B.PS_ID
			   WHERE MRR_ID=@CMRRID AND CANCELLED=1)
	BEGIN
		SELECT TOP 1 @CERRORMSG='PS NO. : '+LTRIM(RTRIM(PS_NO))+' IS ALREADY CANCELLED' FROM PURCHASE_ALLOCATION_LINK A JOIN WPS_MST B ON A.PS_ID=B.PS_ID
		WHERE MRR_ID=@CMRRID AND CANCELLED=1
		
		GOTO END_PROC
	END	
		   
	DECLARE PURALLOCATECUR CURSOR FOR SELECT PS_ID FROM PURCHASE_ALLOCATION_LINK WHERE MRR_ID=@CMRRID
	
	OPEN PURALLOCATECUR
	FETCH NEXT FROM PURALLOCATECUR INTO @CPSID
	
	WHILE @@FETCH_STATUS=0
	BEGIN

		EXEC SAVETRAN_WPS
		@NUPDATEMODE=3,
		@CMEMOID=@CPSID,
		@BCALLEDFROMPURCHASE=1
		
		IF EXISTS (SELECT TOP 1 * FROM #TMPOUTPUT WHERE ERRMSG<>'')
			GOTO END_PROC
				
		FETCH NEXT FROM PURALLOCATECUR INTO @CPSID
	END

	CLOSE PURALLOCATECUR
	DEALLOCATE PURALLOCATECUR	
	
END TRY

BEGIN CATCH
	SET @CERRORMSG = 'PROCEDURE SAVETRAN_PURCHASE_ALLOCATION : STEP- ' + @CSTEP + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
	
	GOTO END_PROC
END CATCH
	
END_PROC:

	IF OBJECT_ID(@CTEMPWPSMSTTABLE,'U') IS NOT NULL
	BEGIN
		SET @CCMD=N'DROP TABLE '+@CTEMPWPSMSTTABLE
		EXEC SP_EXECUTESQL @CCMD
	END	

	IF OBJECT_ID(@CTEMPWPSDETTABLE,'U') IS NOT NULL
	BEGIN
		SET @CCMD=N'DROP TABLE '+@CTEMPWPSDETTABLE
		EXEC SP_EXECUTESQL @CCMD
	END	

	IF OBJECT_ID(@CTEMPPURALLOCATETABLE,'U') IS NOT NULL
	BEGIN
		SET @CCMD=N'DROP TABLE '+@CTEMPPURALLOCATETABLE
		EXEC SP_EXECUTESQL @CCMD
	END	
	
	IF EXISTS (SELECT TOP 1 * FROM #TMPOUTPUT WHERE ERRMSG<>'')
		SELECT TOP 1 @CERRORMSG=ERRMSG FROM #TMPOUTPUT WHERE ERRMSG<>''
	
	IF EXISTS (SELECT TOP 1 * FROM @TNEGSTOCK)		
		SET @CERRORMSG='STOCK GOING NEGATIVE'

	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'') = ''
		BEGIN
			IF @NUPDATEMODE=1
				INSERT INTO PURCHASE_ALLOCATION_LINK (MRR_ID,PS_ID)
				SELECT @CMRRID,MEMO_ID AS PS_ID FROM #TMPOUTPUT
			ELSE
				DELETE FROM PURCHASE_ALLOCATION_LINK WHERE MRR_ID=@CMRRID
			
			COMMIT TRANSACTION
		END	
		ELSE
			ROLLBACK
	END	
	
	IF ISNULL(@CERRORMSG,'') = '' AND NOT EXISTS (SELECT TOP 1 * FROM #TMPOUTPUT WHERE ERRMSG<>'')
	BEGIN
		SELECT @NMEMOCNT=COUNT(*),@CMEMOTEXT='FROM '+LTRIM(RTRIM(MIN(PS_NO)))+' TO '+LTRIM(RTRIM(MAX(PS_NO))) FROM WPS_MST A 
		JOIN #TMPOUTPUT B ON A.PS_ID=B.MEMO_ID
		
		SET @CSUCCESSMSG=LTRIM(RTRIM(STR(@NMEMOCNT)))+' PACK SLIPS '+(CASE WHEN @NUPDATEMODE=1 THEN 'GENERATED' ELSE 'CANCELLED' END)+'('+@CMEMOTEXT+')......PLEASE ACKNOWLEDGE'
	END

	IF NOT EXISTS (SELECT TOP 1 * FROM @TNEGSTOCK)			
		SELECT '' AS PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,ISNULL(@CSUCCESSMSG,'') AS SUCCESSMSG,
		ISNULL(@CERRORMSG,'') AS ERRMSG				

END
----- END OF PROCEDURE SAVETRAN_PURCHASE_ALLOCATION
