create PROCEDURE UPDATEPMT  
  @CXNTYPE VARCHAR(10),  
  @CXNNO VARCHAR(40),  
  @CXNID VARCHAR(40),  
  @NREVERTFLAG BIT = 0,  
  @NALLOWNEGSTOCK BIT = 0,  
  @NCHKDELBARCODES BIT = 0,  
  @NUPDATEMODE INT=0,   
  @CCMD NVARCHAR(4000) OUTPUT  
  --*** PARAMETERS :  
  --*** @CXNTYPE		- TRANSACTION TYPE (MODULE SPECIFIC)  
  --*** @CXNNO			- TRANSACTION NO ( MEMO NO OF MASTER TABLE )  
  --*** @CXNID			- TRANSACTION ID ( MEMO ID OF MASTER TABLE )  
  --*** @NREVERTFLAG	- A FLAG TO INDICATE WHETHER THIS PROCEDURE IS CALLED TO REVERT STOCK  
  --*** @NALLOWNEGSTOCK - FLAG TO INDICATE WHETHER OR NOT ALLOW NEGATIVE STOCK  
  --*** @NRETVAL		- OUTPUT PARAMETER RETURNED BY THIS PROCEDURE (BIT 1-SUCCESS, 0-UNSUCCESS)  
--WITH ENCRYPTION
AS  
BEGIN  
DECLARE @NOUTFLAG INT, @NRETVAL BIT,@CXNTABLE VARCHAR(50),@CEXPR NVARCHAR(500),@CXNIDPARA VARCHAR(50),  
		@BCANCELLED BIT,@NENTRYMODE INT  ,@CHECK_UNIQUE_STOCK INT ,@CUSERCODE VARCHAR(10),@BBIN_TRANSFER BIT
		,@BSLRRECONREQD BIT
   
 SET @NRETVAL = 0  
 SET @CCMD = ''  
 --*** CHECKING FOR NEGATIVE STOCK OF BAR CODES WHICH R REMOVED FROM DETAIL FILE  
 --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK   
 
 SELECT @CHECK_UNIQUE_STOCK = ISNULL(VALUE,1) FROM CONFIG WHERE CONFIG_OPTION ='ALLOW_STOCK_UNIQUE>1' 
  
 --*** STARTING STOCK  FOR PURCHASE   
 IF @CXNTYPE IN ('PUR')    -- PURCHASE INVOICE  
 BEGIN  
 
  IF @NREVERTFLAG = 1  
		SET @NOUTFLAG =  1  
  ELSE  
		SET @NOUTFLAG = -1  
  
  INSERT PMT01106 (PRODUCT_CODE,  QUANTITY_IN_STOCK, DEPT_ID,BIN_ID, LAST_UPDATE )  
  SELECT DISTINCT B.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,A.Location_code/*A.DEPT_ID*//*Rohit 06-11-2024*/ DEPT_ID,A.BIN_ID,GETDATE() AS LAST_UPDATE  
  FROM PID01106 B WITH (NOLOCK)  
  JOIN PIM01106 A WITH (NOLOCK) ON A.MRR_ID=B.MRR_ID
  JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
  JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
  LEFT OUTER JOIN PMT01106 PMT WITH (NOLOCK) ON PMT.PRODUCT_CODE = B.PRODUCT_CODE 
  AND PMT.DEPT_ID =A.Location_code/*A.DEPT_ID*//*Rohit 06-11-2024*/  AND PMT.BIN_ID = A.BIN_ID
  WHERE A.MRR_ID = @CXNID AND PMT.PRODUCT_CODE IS NULL 
  
  IF EXISTS (SELECT TOP 1 A.MEMO_ID FROM STMH01106 A WITH (NOLOCK) 
             JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
			 AND B.BIN_ID=A.RECON_BIN_ID
			 JOIN PID01106 C ON C.PRODUCT_CODE=B.PRODUCT_CODE
			 JOIN PIM01106 D ON D.MRR_ID=C.MRR_ID AND D.BIN_ID=B.BIN_ID
			 WHERE D.MRR_ID=@CXNID AND D.Location_code/*LEFT(D.mrr_id,2)*//*Rohit 06-11-2024*/ = B.DEPT_ID)
  BEGIN
		SET @CCMD = N'SELECT DISTINCT ''PUR'' AS XN_TYPE
					  ,(CASE WHEN D.INV_MODE=2 THEN D.INV_NO ELSE D.MRR_NO END) AS MEMO_NO,
					  C.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE PART OF STOCK RECONCILIATION'' AS ERRMSG
					 
					  FROM STMH01106 A WITH (NOLOCK) JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
					  AND B.BIN_ID=A.RECON_BIN_ID
					  JOIN PID01106 C WITH (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE
					  JOIN PIM01106 D WITH (NOLOCK) ON D.MRR_ID=C.MRR_ID AND D.BIN_ID=B.BIN_ID
					  WHERE D.MRR_ID='''+@CXNID+''''		
		RETURN					
  END	  
  
  --*** UPDATING THE QUANTITY IN STOCK FROM PMT FOR THE GIVEN MEMO  
  --,   
  --  QUANTITY_PURCHASED = QUANTITY_PURCHASED - ( @NOUTFLAG * B.QUANTITY )  
  --AND E.STOCK_NA = 0

     
  UPDATE A SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * X.QUANTITY )  
   FROM   PMT01106 A
   JOIN
   ( 
		SELECT B.PRODUCT_CODE, C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ AS DEPT_ID, C.BIN_ID, 
		SUM(QUANTITY-ISNULL(B.GRN_QTY,0)) AS QUANTITY
		--SUM( QUANTITY) AS QUANTITY   
		FROM PID01106 B WITH (NOLOCK)  
		JOIN PIM01106 C WITH (NOLOCK) ON B.MRR_ID = C.MRR_ID  
		JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
		JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
		WHERE B.MRR_ID = @CXNID AND B.PRODUCT_CODE<>''  
		GROUP BY B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/, C.BIN_ID  
   ) X  ON A.PRODUCT_CODE = X.PRODUCT_CODE   
   AND A.DEPT_ID = X.DEPT_ID  
   AND A.BIN_ID = X.BIN_ID  
   where isnull(a.bo_order_id,'')=''
  
  SET @NRETVAL = 1  --*** SUCCESS  
    
  SELECT @BCANCELLED=CANCELLED,@CUSERCODE=USER_CODE FROM PIM01106 WHERE MRR_ID=@CXNID  
  ---NEGATIVE STOCK SHOULD NOT BE ALLOWED FOR SUPER USER
 -- IF @CUSERCODE='0000000'
	--SET @NALLOWNEGSTOCK=0
    
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
  IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1 OR @NUPDATEMODE IN (4,5)  
  BEGIN  
   --PRINT 'CHECKING FOR NEGATIVE STOCK'  
	   IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A 
				  JOIN  
				  (
					  SELECT B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ AS DEPT_ID,C.BIN_ID , SUM(B.QUANTITY) AS QUANTITY   
					  FROM PID01106 B WITH (NOLOCK)  
					  JOIN PIM01106 C WITH (NOLOCK) ON C.MRR_ID=B.MRR_ID  
					  JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
					  JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
					  WHERE B.MRR_ID = @CXNID AND E.STOCK_NA=0  
					  GROUP BY B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/,C.BIN_ID  
				  ) X ON X.PRODUCT_CODE=A.PRODUCT_CODE AND X.DEPT_ID=A.DEPT_ID AND X.BIN_ID=A.BIN_ID  
				  WHERE A.QUANTITY_IN_STOCK < 0 and  isnull(a.bo_order_id,'')=''
				 )  
	   BEGIN  
			SET @NRETVAL = 0  --*** UNSUCCESS  
			SET @CCMD = N'SELECT DISTINCT ''PUR'' AS XN_TYPE,X.MEMO_NO,A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG
						  FROM PMT01106 A WITH (NOLOCK)  
						  JOIN  
			  (
				  SELECT (CASE WHEN C.INV_MODE=2 THEN C.INV_NO ELSE C.MRR_NO END) AS MEMO_NO
						 ,B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ AS DEPT_ID,C.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
				  FROM PID01106 B WITH (NOLOCK)  
				  JOIN PIM01106 C WITH (NOLOCK) ON C.MRR_ID=B.MRR_ID  
				  JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
				  JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
				  WHERE B.MRR_ID = '''+@CXNID+''' AND E.STOCK_NA=0  
				  GROUP BY (CASE WHEN C.INV_MODE=2 THEN C.INV_NO ELSE C.MRR_NO END), 
				  
							B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/,C.BIN_ID
			  ) X ON X.PRODUCT_CODE=A.PRODUCT_CODE AND X.DEPT_ID=A.DEPT_ID AND X.BIN_ID=A.BIN_ID  
			  WHERE A.QUANTITY_IN_STOCK < 0 and  isnull(a.bo_order_id,'''')='''' '  
	   END  
  END   
  ELSE  
  IF(@NUPDATEMODE=2 AND @NREVERTFLAG=0)  
  BEGIN  
	   IF OBJECT_ID('TEMPDB..#TEMPBARCODES','U') IS NOT NULL  
	   BEGIN  
			IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A WITH (NOLOCK)   
			   JOIN #TEMPBARCODES B ON A.PRODUCT_CODE=B.PRODUCT_CODE AND A.BIN_ID=B.BIN_ID  AND A.DEPT_ID=B.DEPT_ID  
			   WHERE A.QUANTITY_IN_STOCK < 0)  
			BEGIN  
			 SET @NRETVAL = 0  --*** UNSUCCESS  
			 SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG 
					FROM PMT01106 A WITH (NOLOCK)    
				  JOIN #TEMPBARCODES B ON A.PRODUCT_CODE=B.PRODUCT_CODE AND A.BIN_ID=B.BIN_ID AND A.DEPT_ID=B.DEPT_ID 
				  WHERE A.QUANTITY_IN_STOCK < 0 '  
			END   
	   END       
  END  
    IF ISNULL(@CHECK_UNIQUE_STOCK,1)<>1
   BEGIN
    IF EXISTS(SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK FROM PMT01106 A WITH (NOLOCK)  JOIN  
		     (
			  SELECT B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ AS DEPT_ID,C.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
			  FROM PID01106 B WITH (NOLOCK)  
			  JOIN PIM01106 C WITH (NOLOCK) ON C.MRR_ID=B.MRR_ID  
			  JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
			  JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
			  WHERE B.MRR_ID = ''+@CXNID+'' AND E.STOCK_NA=0  AND E.CODING_SCHEME = 3 
			  GROUP BY B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ ,C.BIN_ID
		    ) X ON X.PRODUCT_CODE=A.PRODUCT_CODE AND X.DEPT_ID=A.DEPT_ID AND X.BIN_ID=A.BIN_ID  
		     WHERE A.QUANTITY_IN_STOCK > 1)
	  SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG 
			  FROM PMT01106 A WITH (NOLOCK)
			  JOIN  
		     (
			  SELECT B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ AS DEPT_ID,C.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
			  FROM PID01106 B WITH (NOLOCK)  
			  JOIN PIM01106 C WITH (NOLOCK) ON C.MRR_ID=B.MRR_ID  
			  JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
			  JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
			  WHERE B.MRR_ID = '''+@CXNID+''' AND E.STOCK_NA=0  AND E.CODING_SCHEME = 3 
			  GROUP BY B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ ,C.BIN_ID
		    ) X ON X.PRODUCT_CODE=A.PRODUCT_CODE AND X.DEPT_ID=A.DEPT_ID AND X.BIN_ID=A.BIN_ID  
		     WHERE A.QUANTITY_IN_STOCK > 1 '  
   END
   
 END   -- END OF LABEL PURCHASE INVOICE  
 ELSE  
IF @CXNTYPE IN ('OPS')    -- OPENING STOCK  
 BEGIN    
  IF @NREVERTFLAG = 1    
   SET @NOUTFLAG = 1    
  ELSE    
   SET @NOUTFLAG = -1    
  
  
    IF EXISTS (SELECT TOP 1 A.MEMO_ID FROM STMH01106 A WITH (NOLOCK) JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
			   AND B.BIN_ID=A.RECON_BIN_ID
			   JOIN OPS01106 C WITH (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
			   WHERE C.DEPT_ID=@CXNID)
	BEGIN
			SET @CCMD = N'SELECT DISTINCT D.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE PART OF STOCK RECONCILIATION'' AS ERRMSG
						  FROM STMH01106 A WITH (NOLOCK) JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
						  AND B.BIN_ID=A.RECON_BIN_ID
						  JOIN OPS01106 C WITH (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
						  WHERE C.DEPT_ID='''+@CXNID+''''		
			RETURN					
	END	     
	
	INSERT PMT01106 (PRODUCT_CODE,  QUANTITY_IN_STOCK, DEPT_ID,BIN_ID, LAST_UPDATE )  
	SELECT DISTINCT B.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,B.DEPT_ID,B.BIN_ID AS BIN_ID,GETDATE() AS LAST_UPDATE  
	FROM OPS01106 B WITH (NOLOCK)  
	JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
	JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
	LEFT OUTER JOIN PMT01106 PMT WITH (NOLOCK) ON PMT.PRODUCT_CODE = B.PRODUCT_CODE AND PMT.DEPT_ID = B.DEPT_ID
	AND B.BIN_ID=PMT.BIN_ID
	WHERE B.DEPT_ID = @CXNID AND PMT.PRODUCT_CODE IS NULL 
     
    
  UPDATE A SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )    
   FROM    PMT01106 A 
   JOIN
   ( SELECT B.PRODUCT_CODE, B.DEPT_ID,B.BIN_ID AS BIN_ID, SUM(B.QUANTITY_OB) AS QUANTITY     
    FROM OPS01106 B WITH (NOLOCK)    
    WHERE B.DEPT_ID = @CXNID     
    GROUP BY B.PRODUCT_CODE,B.DEPT_ID,B.BIN_ID 
   ) B ON A.PRODUCT_CODE = B.PRODUCT_CODE AND A.DEPT_ID = B.DEPT_ID AND A.BIN_ID=B.BIN_ID   
    
  SET @NRETVAL = 1  --*** SUCCESS    
      
  --SELECT @BCANCELLED=CANCELLED FROM OPS01106 WHERE MRR_ID=@CXNID    
      
  --*** CHECKING FOR NEGATIVE STOCK    
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT    
  IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1 OR @NUPDATEMODE IN (4,5)    
  BEGIN    
   --PRINT 'CHECKING FOR NEGATIVE STOCK'    
   IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A WITH (NOLOCK) JOIN    
      (SELECT B.PRODUCT_CODE,B.DEPT_ID AS DEPT_ID,B.BIN_ID AS BIN_ID, SUM(B.QUANTITY_OB) AS QUANTITY     
      FROM OPS01106 B WITH (NOLOCK)    
      WHERE B.DEPT_ID= @CXNID   
      GROUP BY B.PRODUCT_CODE,B.DEPT_ID,B.BIN_ID  
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID AND A.BIN_ID=B.BIN_ID
      WHERE A.QUANTITY_IN_STOCK < 0)    
   BEGIN    
    SET @NRETVAL = 0  --*** UNSUCCESS    
    SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A WITH (NOLOCK)  JOIN    
      (SELECT B.PRODUCT_CODE,B.DEPT_ID AS DEPT_ID,B.BIN_ID AS BIN_ID, SUM(B.QUANTITY_OB) AS QUANTITY     
      FROM OPS01106 B WITH (NOLOCK)    
      WHERE B.DEPT_ID= '''+@CXNID+'''   
      GROUP BY B.PRODUCT_CODE,B.DEPT_ID,B.BIN_ID
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE
       AND B.DEPT_ID=A.DEPT_ID    
       AND B.BIN_ID=A.BIN_ID    
      WHERE A.QUANTITY_IN_STOCK < 0 '    
   END    
  END     
     
 END   -- END OF LABEL OPENING STOCK  
 ELSE  
 --*** STARTING STOCK UPDATION FOR SALE  
 IF @CXNTYPE IN ('SLS')  -- SALE  
 BEGIN  
  IF @NREVERTFLAG = 1  
   SET @NOUTFLAG = -1  
  ELSE  
   SET @NOUTFLAG = 1  


	IF EXISTS (SELECT TOP 1 A.MEMO_ID FROM STMH01106 A  WITH (NOLOCK) 
	JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
			   AND B.BIN_ID=A.RECON_BIN_ID
			   JOIN CMD01106 C WITH (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
			   WHERE C.CM_ID=@CXNID AND LEFT(C.CM_ID,2)= B.DEPT_ID)
	BEGIN
			SET @CCMD = N'SELECT DISTINCT C.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE PART OF STOCK RECONCILIATION'' AS ERRMSG
						  FROM STMH01106 A WITH (NOLOCK) JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
						  AND B.BIN_ID=A.RECON_BIN_ID
						  JOIN CMD01106 C WITH (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
						  WHERE C.CM_ID='''+@CXNID+''''		
			RETURN					
	END	  
      
  UPDATE A  SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )  
   FROM  PMT01106 A 
   JOIN 
   ( SELECT B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/DEPT_ID,B.BIN_ID, SUM(B.QUANTITY+ISNULL(B.FOC_QUANTITY,0)) AS QUANTITY   
    FROM CMD01106 B WITH (NOLOCK)  
    JOIN CMM01106 C WITH (NOLOCK) ON C.CM_ID=B.CM_ID  
    JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
    JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
    WHERE B.CM_ID = @CXNID AND E.STOCK_NA=0  
    GROUP BY B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/ ,B.BIN_ID 
   ) B  ON A.PRODUCT_CODE = B.PRODUCT_CODE   
   AND A.DEPT_ID = B.DEPT_ID AND A.BIN_ID=B.BIN_ID 
  
  
  SET @NRETVAL = 1  --*** SUCCESS  
  
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
  --AND D.STOCK_NA=0 )  
  
  SELECT @BCANCELLED=CANCELLED,@CUSERCODE=USER_CODE FROM CMM01106 WITH (NOLOCK) WHERE CM_ID=@CXNID  
  ---NEGATIVE STOCK SHOULD NOT BE ALLOWED FOR SUPER USER
	--IF @CUSERCODE='0000000'
	--	SET @NALLOWNEGSTOCK=0  
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
  IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1  
  BEGIN  
   IF EXISTS (SELECT A.PRODUCT_CODE FROM PMT01106 A WITH (NOLOCK) JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/ AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY+ISNULL(B.FOC_QUANTITY,0)) AS QUANTITY   
      FROM CMD01106 B WITH (NOLOCK)  
      JOIN CMM01106 C WITH (NOLOCK) ON C.CM_ID=B.CM_ID  
      JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.CM_ID = @CXNID AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/,B.BIN_ID) B ON B.PRODUCT_CODE=A.PRODUCT_CODE
       AND B.DEPT_ID=A.DEPT_ID  
        AND B.BIN_ID=A.BIN_ID  
      WHERE A.QUANTITY_IN_STOCK < 0)  
   BEGIN  
    SET @NRETVAL = 0  --*** UNSUCCESS  
    SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A WITH (NOLOCK)  JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/ AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY+ISNULL(B.FOC_QUANTITY,0)) AS QUANTITY   
      FROM CMD01106 B WITH (NOLOCK)  
      JOIN CMM01106 C WITH (NOLOCK) ON C.CM_ID=B.CM_ID  
      JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.CM_ID = '''+@CXNID+''' AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/,B.BIN_ID) B ON B.PRODUCT_CODE=A.PRODUCT_CODE
       AND B.DEPT_ID=A.DEPT_ID  
        AND B.BIN_ID=A.BIN_ID  
      WHERE A.QUANTITY_IN_STOCK < 0 '  
   END  
    --PRINT @CCMD  
  END   
  ELSE  
  IF(@NUPDATEMODE=2 AND @NREVERTFLAG=0)  
  BEGIN  
   IF OBJECT_ID('TEMPDB..#TEMPBARCODES','U') IS NOT NULL  
   BEGIN  
    IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A WITH (NOLOCK)   
       JOIN #TEMPBARCODES B ON A.PRODUCT_CODE=B.PRODUCT_CODE AND A.DEPT_ID=B.DEPT_ID AND A.BIN_ID=B.BIN_ID 
       WHERE A.QUANTITY_IN_STOCK < 0)  
    BEGIN  
     SET @NRETVAL = 0  --*** UNSUCCESS  
     SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A WITH (NOLOCK)    
          JOIN #TEMPBARCODES B ON A.PRODUCT_CODE=B.PRODUCT_CODE AND A.DEPT_ID=B.DEPT_ID  AND B.BIN_ID=A.BIN_ID   
          WHERE A.QUANTITY_IN_STOCK < 0 '  
    END   
      
    DELETE FROM #TEMPBARCODES  
   END       
  END  
  
 END  --  END OF SALE  
ELSE  
 --*** STARTING STOCK UPDATION FOR PACK SLIP  
 IF @CXNTYPE IN ('RPS')  -- SALE  
 BEGIN  
  IF @NREVERTFLAG = 1  
   SET @NOUTFLAG = -1  
  ELSE  
   SET @NOUTFLAG = 1  
	SELECT @BSLRRECONREQD=ISNULL(SLR_RECON_REQD,0) FROM LOCATION (NOLOCK) WHERE DEPT_ID=LEFT(@CXNID,2)
   SET @BSLRRECONREQD=ISNULL(@BSLRRECONREQD,0)
 	IF EXISTS (SELECT TOP 1 A.MEMO_ID FROM STMH01106 A WITH (NOLOCK) JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
			   AND B.BIN_ID=A.RECON_BIN_ID
			   JOIN RPS_DET C ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
			   JOIN RPS_MST D ON D.cm_id=C.cm_id
			   WHERE C.CM_ID=@CXNID AND D.Location_code/*LEFT(C.CM_ID,2)*//*Rohit 06-11-2024*/= B.DEPT_ID)
	BEGIN
			SET @CCMD = N'SELECT DISTINCT C.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE PART OF STOCK RECONCILIATION'' AS ERRMSG
						  FROM STMH01106 A WITH (NOLOCK) JOIN PMT01106 B  WITH (NOLOCK) ON A.REP_ID=B.REP_ID
						  AND B.BIN_ID=A.RECON_BIN_ID
						  JOIN RPS_DET C  WITH (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
						  JOIN RPS_MST D ON D.cm_id=C.cm_id
						  WHERE C.CM_ID='''+@CXNID+''''		
			RETURN					
	END	  
  
    INSERT PMT01106 (PRODUCT_CODE,  QUANTITY_IN_STOCK, DEPT_ID,BIN_ID, LAST_UPDATE )  
   SELECT DISTINCT B.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/ AS DEPT_ID,B.BIN_ID,GETDATE() AS LAST_UPDATE  
     FROM RPS_DET B WITH (NOLOCK)  
     JOIN RPS_MST C WITH (NOLOCK) ON C.CM_ID=B.CM_ID  
     JOIN SKU D  WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
     JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
     LEFT OUTER JOIN PMT01106 PMT WITH (NOLOCK) ON PMT.PRODUCT_CODE = B.PRODUCT_CODE AND PMT.DEPT_ID = C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/ AND PMT.BIN_ID=B.BIN_ID  
   WHERE B.CM_ID = @CXNID AND PMT.PRODUCT_CODE IS NULL 
  --*** UPDATING THE QUANTITY IN STOCK FROM PMT FOR THE GIVEN MEMO  
  --,   
  --  QUANTITY_SOLD = QUANTITY_SOLD + ( @NOUTFLAG * B.QUANTITY )  
  --AND E.STOCK_NA = 0   
  UPDATE A
   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )  
   FROM  PMT01106 A
   JOIN 
   ( 
	SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/DEPT_ID,B.BIN_ID, SUM(B.QUANTITY+ISNULL(B.FOC_QUANTITY,0)) AS QUANTITY   
    FROM RPS_DET B WITH (NOLOCK)  
    JOIN RPS_MST C WITH (NOLOCK) ON C.CM_ID=B.CM_ID  
    JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
    JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
    WHERE B.CM_ID = @CXNID AND E.STOCK_NA=0 AND (B.QUANTITY>0 OR @BSLRRECONREQD=0) 
    GROUP BY B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/  ,B.BIN_ID
   ) B  ON A.PRODUCT_CODE = B.PRODUCT_CODE   
   AND A.DEPT_ID = B.DEPT_ID  AND A.BIN_ID=B.BIN_ID
  
  SET @NRETVAL = 1  --*** SUCCESS  
  
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
  --AND D.STOCK_NA=0 )  
  
  SELECT @BCANCELLED=CANCELLED,@CUSERCODE=USER_CODE FROM RPS_MST WITH (NOLOCK) WHERE CM_ID=@CXNID  
  
	---NEGATIVE STOCK SHOULD NOT BE ALLOWED FOR SUPER USER
	--IF @CUSERCODE='0000000'
	--	SET @NALLOWNEGSTOCK=0
    
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
  IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1  
  BEGIN  
   IF EXISTS (SELECT A.PRODUCT_CODE FROM PMT01106 A WITH (NOLOCK) JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/ AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY+ISNULL(B.FOC_QUANTITY,0)) AS QUANTITY   
      FROM RPS_DET B WITH (NOLOCK)  
      JOIN RPS_MST C WITH (NOLOCK) ON C.CM_ID=B.CM_ID  
      JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.CM_ID = @CXNID AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/,B.BIN_ID ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  
       AND B.BIN_ID=A.BIN_ID  
      WHERE A.QUANTITY_IN_STOCK < 0)  
   BEGIN  
    SET @NRETVAL = 0  --*** UNSUCCESS  
    SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A WITH (NOLOCK)  JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/ AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY+ISNULL(B.FOC_QUANTITY,0)) AS QUANTITY   
      FROM RPS_DET B WITH (NOLOCK)  
      JOIN RPS_MST C WITH (NOLOCK) ON C.CM_ID=B.CM_ID  
      JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.CM_ID = '''+@CXNID+''' AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/,B.BIN_ID) B ON B.PRODUCT_CODE=A.PRODUCT_CODE
       AND B.DEPT_ID=A.DEPT_ID   AND B.BIN_ID=A.BIN_ID  
      WHERE A.QUANTITY_IN_STOCK < 0 '  
   END  
    --PRINT @CCMD  
  END   
 END  --  END OF PACK SLIP  
 ELSE  
 --*** STARTING STOCK UPDATION FOR APPROVAL MEMO  
 IF @CXNTYPE IN ('APP')   
 BEGIN  
  IF @NREVERTFLAG = 1  
   SET @NOUTFLAG = -1  
  ELSE  
   SET @NOUTFLAG = 1  

 	

	   
   INSERT PMT01106 (PRODUCT_CODE,QUANTITY_IN_STOCK, DEPT_ID,BIN_ID, LAST_UPDATE )  
   SELECT distinct  B.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,C.Location_code/*LEFT( C.MEMO_ID,2)*//*Rohit 06-11-2024*/ AS DEPT_ID,b.BIN_ID, GETDATE() AS LAST_UPDATE  
   FROM APD01106 B WITH (NOLOCK)  
   JOIN APM01106 C WITH (NOLOCK) ON C.MEMO_ID=B.MEMO_ID  
   LEFT OUTER JOIN PMT01106 PMT WITH (NOLOCK) ON PMT.PRODUCT_CODE = B.PRODUCT_CODE
    AND PMT.DEPT_ID =  C.Location_code/*LEFT( C.MEMO_ID,2)*//*Rohit 06-11-2024*/
    AND PMT.BIN_ID = b.bin_id 
   WHERE b.MEMO_ID = @CXNID AND PMT.PRODUCT_CODE IS NULL  
	
  UPDATE A   
   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )  
	FROM  PMT01106 A
   JOIN 
   ( 
	    SELECT B.PRODUCT_CODE,C.Location_code/*LEFT( C.MEMO_ID,2)*//*Rohit 06-11-2024*/ AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
		FROM APD01106 B WITH (NOLOCK)  
		JOIN APM01106 C WITH (NOLOCK) ON C.MEMO_ID=B.MEMO_ID  
		JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
		JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
		WHERE B.MEMO_ID = @CXNID  AND E.STOCK_NA=0  
		GROUP BY B.PRODUCT_CODE,C.Location_code/*LEFT( C.MEMO_ID,2)*//*Rohit 06-11-2024*/  ,B.BIN_ID
   ) B  ON A.PRODUCT_CODE = B.PRODUCT_CODE   
   AND A.DEPT_ID = B.DEPT_ID  
   AND A.BIN_ID = B.BIN_ID 
  
  
  SET @NRETVAL = 1  --*** SUCCESS  
  
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
  --AND D.STOCK_NA=0 )  
  
  SELECT @BCANCELLED=CANCELLED,@CUSERCODE=USER_CODE FROM APM01106 WITH (NOLOCK) WHERE MEMO_ID=@CXNID  
  
	---NEGATIVE STOCK SHOULD NOT BE ALLOWED FOR SUPER USER
	--IF @CUSERCODE='0000000'
	--	SET @NALLOWNEGSTOCK=0
    
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
  IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1  
  BEGIN  
   IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A WITH (NOLOCK) JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*LEFT( C.MEMO_ID,2)*//*Rohit 06-11-2024*/ AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM APD01106 B WITH (NOLOCK)  
      JOIN APM01106 C WITH (NOLOCK) ON C.MEMO_ID=B.MEMO_ID  
      JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE, C.Location_code/*LEFT( C.MEMO_ID,2)*//*Rohit 06-11-2024*/ ,B.BIN_ID
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  AND A.BIN_ID=B.BIN_ID
      WHERE A.QUANTITY_IN_STOCK < 0)  
   BEGIN  
    SET @NRETVAL = 0  --*** UNSUCCESS  
  
    SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A WITH (NOLOCK)  JOIN  
				  (
					  SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(C.MEMO_ID,2)*//*Rohit 06-11-2024*/ AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
					  FROM APD01106 B WITH (NOLOCK)  
					  JOIN APM01106 C WITH (NOLOCK) ON C.MEMO_ID=B.MEMO_ID  
					  JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
					  JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
					  WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0  
					  GROUP BY B.PRODUCT_CODE,C.Location_code/*LEFT( C.MEMO_ID,2)*//*Rohit 06-11-2024*/,B.BIN_ID
				  ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE 
				  AND B.DEPT_ID=A.DEPT_ID  
				  AND B.BIN_ID=A.BIN_ID  
				  WHERE A.QUANTITY_IN_STOCK < 0 '  
   END  
    --PRINT @CCMD  
  END   
 END  --  END OF APPROVAL MEMO  
    
 ELSE  
 IF @CXNTYPE IN ('WSL')  -- WHOLESALE INVOICE MANISH STARTS  
 BEGIN  
  PRINT 'ENTER WSL STOCK UPDATE-1'  
  IF @NREVERTFLAG = 1  
   SET @NOUTFLAG = -1  
  ELSE  
   SET @NOUTFLAG = 1  

	    
  SELECT @NENTRYMODE=ENTRY_MODE FROM INM01106 WHERE INV_ID=@CXNID  
    
  ---- DO NOT UPDATE STOCK OF INVOICES WHICH ARE RAISED AGAINST PACKING SLIP  
  ---- BECAUSE IT IS ALREADY UPDATED BY PACKINJG SLIP MODULES  
  IF @NENTRYMODE=2   
   RETURN  

 	IF EXISTS (SELECT TOP 1 A.MEMO_ID FROM STMH01106 A WITH (NOLOCK) 
 	JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
			   AND B.BIN_ID=A.RECON_BIN_ID
			   JOIN IND01106 C WITH (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
			   WHERE C.INV_ID=@CXNID  AND LEFT(C.INV_ID,2)= B.DEPT_ID)
	BEGIN
			SET @CCMD = N'SELECT DISTINCT C.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE PART OF STOCK RECONCILIATION'' AS ERRMSG
						  FROM STMH01106 A WITH (NOLOCK) JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
						  AND B.BIN_ID=A.RECON_BIN_ID
						  JOIN IND01106 C WITH (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
						  WHERE C.INV_ID='''+@CXNID+''''		
			RETURN					
	END	  
    
 
  PRINT 'ENTER WSL STOCK UPDATE-2'  
  UPDATE A   
   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )  
   FROM  PMT01106 A
   JOIN 
   ( SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/ DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
    FROM IND01106 B WITH (NOLOCK)  
    JOIN INM01106 C WITH (NOLOCK) ON C.INV_ID=B.INV_ID  
    JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
    JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
    WHERE B.INV_ID = @CXNID AND E.STOCK_NA=0  
    GROUP BY B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/,B.BIN_ID  
   ) B ON A.PRODUCT_CODE = B.PRODUCT_CODE   
   AND A.DEPT_ID = B.DEPT_ID
    AND A.BIN_ID=B.BIN_ID    
  
  
  SET @NRETVAL = 1  --*** SUCCESS  
  
PRINT 'ENTER WSL STOCK UPDATE-3'  
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
    
  SELECT @BCANCELLED=CANCELLED,@CUSERCODE=USER_CODE FROM INM01106 WITH (NOLOCK) WHERE INV_ID=@CXNID  
	---NEGATIVE STOCK SHOULD NOT BE ALLOWED FOR SUPER USER
	--IF @CUSERCODE='0000000'
	--	SET @NALLOWNEGSTOCK=0
    
  IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1  
  BEGIN  
   PRINT 'ENTER WSL STOCK UPDATE-4'  
   IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A WITH (NOLOCK) 
			   JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/ DEPT_ID,B.BIN_ID , SUM(B.QUANTITY) AS QUANTITY   
      FROM IND01106 B WITH (NOLOCK)  
      JOIN INM01106 C WITH (NOLOCK) ON C.INV_ID=B.INV_ID  
      JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.INV_ID = @CXNID AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/,B.BIN_ID  
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID AND B.BIN_ID=A.BIN_ID  
      WHERE A.QUANTITY_IN_STOCK < 0)  
   BEGIN  
    SET @NRETVAL = 0  --*** UNSUCCESS  
  
    SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A  JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/ DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM IND01106 B WITH (NOLOCK)  
      JOIN INM01106 C WITH (NOLOCK) ON C.INV_ID=B.INV_ID  
      JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.INV_ID = '''+@CXNID+''' AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/,B.BIN_ID) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  AND B.BIN_ID=A.BIN_ID  
      WHERE A.QUANTITY_IN_STOCK < 0 '  
   END  
    --PRINT @CCMD  
  END   
 END  --  END OF WHOLESALE INVOICE MANISH ENDS  
 ELSE  
 IF @CXNTYPE IN ('WPS')  -- WHOLESALE PACKING SLIP STARTS  
 BEGIN  
  PRINT 'ENTER WPS STOCK UPDATE-1'  
  IF @NREVERTFLAG = 1  
   SET @NOUTFLAG = -1  
  ELSE  
   SET @NOUTFLAG = 1  

   	INSERT PMT01106 ( PRODUCT_CODE, QUANTITY_IN_STOCK, DEPT_ID, BIN_ID ) --PHYSICAL_QTY, EXCESS_QTY,
	SELECT DISTINCT A.PRODUCT_CODE, 0 AS QUANTITY_IN_STOCK,B.Location_code/* LEFT(@CXNID,2)*//*Rohit 06-11-2024*/ AS DEPT_ID,   
			  A.BIN_ID AS BIN_ID
	FROM wps_DET  A (NOLOCK)
	JOIN  wps_mst B ON A.ps_id = B.ps_id 
	LEFT OUTER JOIN PMT01106 PMT ON PMT.PRODUCT_CODE=A.PRODUCT_CODE AND PMT.BIN_ID= A.BIN_ID 
	AND B.Location_code/*LEFT(A.ps_ID,2)*//*Rohit 06-11-2024*/=PMT.DEPT_ID 
	WHERE PMT.PRODUCT_CODE IS NULL AND a.ps_ID = @CXNID

 	IF EXISTS (SELECT TOP 1 A.MEMO_ID FROM STMH01106 A WITH (NOLOCK) 
 	JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
			   AND B.BIN_ID=A.RECON_BIN_ID
			   JOIN WPS_DET C WITH (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
			   JOIN WPS_MST D (NOLOCK) ON D.PS_ID=C.PS_ID
			   WHERE C.PS_ID=@CXNID AND D.Location_code/*LEFT(C.PS_ID,2)*//*Rohit 06-11-2024*/= B.DEPT_ID)
	BEGIN
			SET @CCMD = N'SELECT DISTINCT C.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE PART OF STOCK RECONCILIATION'' AS ERRMSG
						  FROM STMH01106 A WITH (NOLOCK) JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
						  AND B.BIN_ID=A.RECON_BIN_ID
						  JOIN WPS_DET C WITH (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
						  WHERE C.PS_ID='''+@CXNID+''''		
			RETURN					
	END	       
	
  UPDATE A   
   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )  
   FROM  PMT01106 A
   JOIN 
   ( SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
    FROM WPS_DET B WITH (NOLOCK)  
    JOIN WPS_MST C WITH (NOLOCK) ON C.PS_ID=B.PS_ID  
    JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
    JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
    WHERE B.PS_ID = @CXNID AND E.STOCK_NA=0  
    GROUP BY B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/  ,B.BIN_ID
   ) B ON A.PRODUCT_CODE = B.PRODUCT_CODE   
   AND A.DEPT_ID = B.DEPT_ID
   AND   A.BIN_ID = B.BIN_ID
    
  SET @NRETVAL = 1  --*** SUCCESS  
  
  PRINT 'ENTER WPS STOCK UPDATE-3'  
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
    
  SELECT @BCANCELLED=CANCELLED,@CUSERCODE=USER_CODE FROM WPS_MST WITH (NOLOCK) WHERE PS_ID=@CXNID  
  
  ---NEGATIVE STOCK SHOULD NOT BE ALLOWED FOR SUPER USER
  --IF @CUSERCODE='0000000'
	 --SET @NALLOWNEGSTOCK=0  
    
  IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1  
  BEGIN  
   PRINT 'ENTER WPS STOCK UPDATE-4'  
   IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A WITH (NOLOCK) JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/ AS DEPT_ID, B.BIN_ID,SUM(B.QUANTITY) AS QUANTITY   
      FROM WPS_DET B WITH (NOLOCK)  
      JOIN WPS_MST C WITH (NOLOCK) ON C.PS_ID=B.PS_ID  
      JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.PS_ID = @CXNID AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/ ,B.BIN_ID
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID   AND B.BIN_ID=A.BIN_ID  
      WHERE A.QUANTITY_IN_STOCK < 0)  
   BEGIN  
    SET @NRETVAL = 0  --*** UNSUCCESS  
  
    SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A WITH (NOLOCK)  JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/ AS DEPT_ID, B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM WPS_DET B WITH (NOLOCK)  
      JOIN WPS_MST C WITH (NOLOCK) ON C.PS_ID=B.PS_ID  
      JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.PS_ID = '''+@CXNID+''' AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/,B.DEPT_ID) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  
         AND B.BIN_ID=A.BIN_ID  
      WHERE A.QUANTITY_IN_STOCK < 0 '  
   END  
    --PRINT @CCMD  
  END   
 END  --  END OF WHOLESALE PACKING SLIP ENDS  
  
 ELSE  
 IF @CXNTYPE IN ('DNPS')  -- DEBITNOTE PACKING SLIP STARTS  
 BEGIN  
  PRINT 'ENTER DNPS STOCK UPDATE-1'  
  IF @NREVERTFLAG = 1  
   SET @NOUTFLAG = -1  
  ELSE  
   SET @NOUTFLAG = 1  

 	

	 INSERT PMT01106 ( PRODUCT_CODE, QUANTITY_IN_STOCK, DEPT_ID, BIN_ID ) --PHYSICAL_QTY, EXCESS_QTY,
	SELECT DISTINCT A.PRODUCT_CODE, 0 AS QUANTITY_IN_STOCK, B.Location_code/*LEFT(A.DEPT_ID,2)*//*Rohit 06-11-2024*/  AS DEPT_ID,   
			  A.BIN_ID AS BIN_ID
	FROM DNPS_DET  A (NOLOCK)
	JOIN  DNPS_MST B (NOLOCK) ON A.PS_ID = B.PS_ID 
	LEFT OUTER JOIN PMT01106 PMT ON PMT.PRODUCT_CODE=A.PRODUCT_CODE AND PMT.BIN_ID= A.BIN_ID and isnull(pmt.bo_order_id,'')=''
	AND B.Location_code/*LEFT(A.PS_ID,2)*//*Rohit 06-11-2024*/=PMT.DEPT_ID 
	WHERE PMT.PRODUCT_CODE IS NULL AND a.ps_ID = @CXNID
	
  --*** UPDATING THE QUANTITY IN STOCK FROM PMT FOR THE GIVEN MEMO  
  PRINT 'ENTER DNPS STOCK UPDATE-2'  
  UPDATE A   
   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )  
   FROM  PMT01106 A
   JOIN 
   ( SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
    FROM DNPS_DET B WITH (NOLOCK)  
    JOIN DNPS_MST C WITH (NOLOCK) ON C.PS_ID=B.PS_ID  
    JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
    JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
    WHERE B.PS_ID = @CXNID AND E.STOCK_NA=0  
    GROUP BY B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/,B.BIN_ID 
   ) B  ON A.PRODUCT_CODE = B.PRODUCT_CODE   
   AND A.DEPT_ID = B.DEPT_ID  
   AND A.BIN_ID = B.BIN_ID  
   where  isnull(a.bo_order_id,'')=''
  
  SET @NRETVAL = 1  --*** SUCCESS  
  
  PRINT 'ENTER DNPS STOCK UPDATE-3'  
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
    
  SELECT @BCANCELLED=CANCELLED,@CUSERCODE=USER_CODE FROM DNPS_MST WITH (NOLOCK) WHERE PS_ID=@CXNID  
  
  ---NEGATIVE STOCK SHOULD NOT BE ALLOWED FOR SUPER USER
	--IF @CUSERCODE='0000000'
	--	SET @NALLOWNEGSTOCK=0  
		
  IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1  
  BEGIN  
   PRINT 'ENTER DNPS STOCK UPDATE-4'  
   IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A WITH (NOLOCK) JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/ AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM DNPS_DET B WITH (NOLOCK)  
      JOIN DNPS_MST C WITH (NOLOCK) ON C.PS_ID=B.PS_ID  
      JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.PS_ID = @CXNID AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/,B.BIN_ID 
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  AND B.BIN_ID=A.BIN_ID 
      WHERE A.QUANTITY_IN_STOCK < 0 and isnull(a.bo_order_id,'')='')  
   BEGIN  
    SET @NRETVAL = 0  --*** UNSUCCESS  
  
    SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A WITH (NOLOCK)  JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/ AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM DNPS_DET B WITH (NOLOCK)  
      JOIN DNPS_MST C WITH (NOLOCK) ON C.PS_ID=B.PS_ID  
      JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.PS_ID = '''+@CXNID+''' AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/,B.BIN_ID) B ON B.PRODUCT_CODE=A.PRODUCT_CODE 
      AND B.DEPT_ID=A.DEPT_ID   AND B.BIN_ID=A.BIN_ID 
      WHERE A.QUANTITY_IN_STOCK < 0  and isnull(a.bo_order_id,'''')='''''  
   END  
    --PRINT @CCMD  
  END   
 END  --  END OF DEBITNOTE PACKING SLIP ENDS  
   
 ELSE  
 IF @CXNTYPE IN ('WSR')  --MANISH WHOLESALE INVOICE CREDIT NOTE  
 BEGIN  
	  IF @NREVERTFLAG = 1  
		SET @NOUTFLAG = -1  
	  ELSE  
		SET @NOUTFLAG = 1  

 	  IF EXISTS (SELECT TOP 1 A.MEMO_ID FROM STMH01106 A WITH (NOLOCK) 
 	  JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
				   AND B.BIN_ID=A.RECON_BIN_ID
				   JOIN CND01106 C WITH (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
				   JOIN CNM01106 D(NOLOCK) ON D.cn_id=C.cn_id
				   WHERE C.CN_ID=@CXNID AND D.Location_code/*LEFT(C.CN_ID,2)*//*Rohit 06-11-2024*/= B.DEPT_ID)
	  BEGIN
			SET @CCMD = N'SELECT DISTINCT ''WSR'' AS XN_TYPE,(CASE WHEN D.MODE=2 THEN D.MANUAL_INV_NO ELSE D.CN_NO END) AS MEMO_NO,
						  C.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE PART OF STOCK RECONCILIATION'' AS ERRMSG
						 
						  FROM STMH01106 A WITH (NOLOCK) JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
						  AND B.BIN_ID=A.RECON_BIN_ID
						  JOIN CND01106 C WITH (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
						  JOIN CNM01106 D WITH (NOLOCK) ON D.CN_ID=C.CN_ID
						  WHERE C.CN_ID='''+@CXNID+''''		
			RETURN					
	  END	       

	  ---GET THE INFORMATION FOR BIN_TRANSFER 
	  SELECT @BBIN_TRANSFER=ISNULL(BIN_TRANSFER,0) 
	  FROM CNM01106 WHERE CN_ID=@CXNID
		  
	  IF @NREVERTFLAG = 0  
	  BEGIN
		   INSERT PMT01106 (PRODUCT_CODE,  QUANTITY_IN_STOCK, DEPT_ID,BIN_ID, LAST_UPDATE )  
		   SELECT DISTINCT B.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/ DEPT_ID,B.BIN_ID,GETDATE() AS LAST_UPDATE  
			 FROM CND01106 B WITH (NOLOCK)  
			 JOIN CNM01106 C WITH (NOLOCK) ON C.CN_ID=B.CN_ID  
			 JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
			 JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
			 LEFT OUTER JOIN PMT01106 PMT WITH (NOLOCK) ON PMT.PRODUCT_CODE = B.PRODUCT_CODE AND PMT.DEPT_ID = C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/ AND PMT.BIN_ID=B.BIN_ID  
		   WHERE B.CN_ID = @CXNID AND PMT.PRODUCT_CODE IS NULL  
				
		   IF @BBIN_TRANSFER=1
   			INSERT PMT01106 (PRODUCT_CODE,  QUANTITY_IN_STOCK, DEPT_ID,BIN_ID, LAST_UPDATE )  
			SELECT DISTINCT B.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/DEPT_ID,C.SOURCE_BIN_ID,GETDATE() AS LAST_UPDATE  
			 FROM CND01106 B WITH (NOLOCK)  
			 JOIN CNM01106 C WITH (NOLOCK) ON C.CN_ID=B.CN_ID  
			 JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
			 JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
			 LEFT OUTER JOIN PMT01106 PMT WITH (NOLOCK) ON PMT.PRODUCT_CODE = B.PRODUCT_CODE AND PMT.DEPT_ID = C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/ AND PMT.BIN_ID=C.SOURCE_BIN_ID  
			WHERE B.CN_ID = @CXNID AND PMT.PRODUCT_CODE IS NULL  
	  END
	 
	   
	  PRINT 'CHECK WSR UPDATESTOCK-1'   
	  --*** UPDATING THE QUANTITY IN STOCK FROM PMT FOR THE GIVEN MEMO  
	  UPDATE A   
	   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK + ( @NOUTFLAG * B.QUANTITY )  
	   FROM  PMT01106 A
	   JOIN 
	   ( 
			SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/ DEPT_ID,B.BIN_ID, SUM(QUANTITY) AS QUANTITY   
			FROM CND01106 B WITH (NOLOCK)  
			JOIN CNM01106 C WITH (NOLOCK) ON C.CN_ID=B.CN_ID  
			JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
			JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
			WHERE B.CN_ID = @CXNID  
			GROUP BY B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/ ,B.BIN_ID 
	   ) B  ON A.PRODUCT_CODE = B.PRODUCT_CODE   
	   AND A.DEPT_ID = B.DEPT_ID  
	   AND A.BIN_ID = B.BIN_ID 
	  
	  --FOR BIN TRANSFER THE STOCK NEEDS TO BE UPDATE FOR SOURCE BIN ALSO
	  IF @BBIN_TRANSFER=1
	  BEGIN
		   UPDATE A   
		   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )  
		   FROM  PMT01106 A
		   JOIN 
		   ( 
				SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/DEPT_ID,C.SOURCE_BIN_ID AS BIN_ID,SUM(QUANTITY) AS QUANTITY   
				FROM CND01106 B WITH (NOLOCK)  
				JOIN CNM01106 C WITH (NOLOCK) ON C.CN_ID=B.CN_ID  
				JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
				JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
				WHERE B.CN_ID = @CXNID  
				GROUP BY B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/ ,C.SOURCE_BIN_ID
		   )B ON A.PRODUCT_CODE = B.PRODUCT_CODE   
		   AND A.DEPT_ID = B.DEPT_ID  
		   AND A.BIN_ID = B.BIN_ID 
	  END
	  
	  SET @NRETVAL = 1  --*** SUCCESS  
	    
	  SELECT @BCANCELLED=CANCELLED,@CUSERCODE=USER_CODE FROM CNM01106 WHERE CN_ID=@CXNID  
	  
 END 
   
 ELSE  
 IF @CXNTYPE IN ('APR')    -- APPROVAL SETTLEMENT  
 BEGIN  
  PRINT 'ENTER APPROVAL RETURN '+STR(@NREVERTFLAG)+' FOR MEMO ID :'+@CXNID  
  IF @NREVERTFLAG = 1  
   SET @NOUTFLAG = -1  
  ELSE  
   SET @NOUTFLAG = 1  

 	IF EXISTS (SELECT TOP 1 A.MEMO_ID FROM STMH01106 A WITH (NOLOCK)
 	 JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
			   AND B.BIN_ID=A.RECON_BIN_ID
			   JOIN APD01106 C WITH (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
			   JOIN APPROVAL_RETURN_DET D WITH (NOLOCK) ON D.APD_ROW_ID=C.ROW_ID
			   JOIN approval_return_mst E (NOLOCK) ON E.MEMO_ID=D.memo_id
			   WHERE D.MEMO_ID=@CXNID AND E.Location_code/*LEFT(C.MEMO_ID,2)*//*Rohit 06-11-2024*/= B.DEPT_ID)
	BEGIN
			SET @CCMD = N'SELECT DISTINCT C.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE PART OF STOCK RECONCILIATION'' AS ERRMSG
						  FROM STMH01106 A WITH (NOLOCK) JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
						  AND B.BIN_ID=A.RECON_BIN_ID
						  JOIN APD01106 C WITH (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
						  JOIN APPROVAL_RETURN_DET D WITH (NOLOCK) ON D.APD_ROW_ID=C.ROW_ID
						  WHERE D.MEMO_ID='''+@CXNID+''''		
			RETURN					
	END	       
	  
  
   INSERT PMT01106 (PRODUCT_CODE,QUANTITY_IN_STOCK, DEPT_ID,BIN_ID, LAST_UPDATE )  
   SELECT distinct  B.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,C.Location_code/*LEFT(C.DEPT_ID,2)*//*Rohit 06-11-2024*/DEPT_ID,A.BIN_ID, GETDATE() AS LAST_UPDATE  
   FROM APPROVAL_RETURN_DET A WITH (NOLOCK)  
   JOIN APD01106 B WITH (NOLOCK) ON B.ROW_ID=A.APD_ROW_ID  
   JOIN APPROVAL_RETURN_MST C WITH (NOLOCK) ON C.MEMO_ID=A.MEMO_ID     
   LEFT OUTER JOIN PMT01106 PMT WITH (NOLOCK) ON PMT.PRODUCT_CODE = B.PRODUCT_CODE
    AND PMT.DEPT_ID = C.Location_code/*LEFT(C.DEPT_ID,2)*//*Rohit 06-11-2024*/
    AND PMT.BIN_ID = A.BIN_ID  
   WHERE A.MEMO_ID = @CXNID AND PMT.PRODUCT_CODE IS NULL  
      
  PRINT 'CHECK APR UPDATESTOCK-1'   
  --*** UPDATING THE QUANTITY IN STOCK FROM PMT FOR THE GIVEN MEMO  
  UPDATE A   
   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK + ( @NOUTFLAG * B.QUANTITY )  
   FROM  PMT01106 A
   JOIN 
   ( SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/ DEPT_ID,A.BIN_ID, SUM(A.QUANTITY) AS QUANTITY   
    FROM APPROVAL_RETURN_DET A WITH (NOLOCK)  
    JOIN APD01106 B WITH (NOLOCK) ON B.ROW_ID=A.APD_ROW_ID  
    JOIN APPROVAL_RETURN_MST C  WITH (NOLOCK)ON C.MEMO_ID=A.MEMO_ID     
    JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
    JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
    WHERE A.MEMO_ID = @CXNID AND E.STOCK_NA=0  
    GROUP BY B.PRODUCT_CODE,C.Location_code/*LEFT(C.DEPT_ID,2)*//*Rohit 06-11-2024*/,  A.BIN_ID
   ) B  ON A.PRODUCT_CODE = B.PRODUCT_CODE   
   AND A.DEPT_ID = B.DEPT_ID  
  AND A.BIN_ID = B.BIN_ID
  SET @NRETVAL = 1  --*** SUCCESS  
    
  SELECT @BCANCELLED=CANCELLED,@CUSERCODE=USER_CODE FROM APPROVAL_RETURN_MST WHERE MEMO_ID=@CXNID  
  
  ---NEGATIVE STOCK SHOULD NOT BE ALLOWED FOR SUPER USER
  --IF @CUSERCODE='0000000'
  --   SET @NALLOWNEGSTOCK=0
    
  PRINT 'CHECK APR UPDATESTOCK-2'  
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
  IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1  
  BEGIN  
   PRINT 'CHECK APR UPDATESTOCK-3'  
   IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A WITH (NOLOCK) JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(C.DEPT_ID,2)*//*Rohit 06-11-2024*/ AS DEPT_ID,A.BIN_ID, SUM(A.QUANTITY) AS QUANTITY   
      FROM APPROVAL_RETURN_DET A WITH (NOLOCK)  
      JOIN APD01106 B WITH (NOLOCK) ON B.ROW_ID=A.APD_ROW_ID  
      JOIN APPROVAL_RETURN_MST C  WITH (NOLOCK)ON C.MEMO_ID=A.MEMO_ID     
      JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE A.MEMO_ID = @CXNID AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,C.Location_code/*LEFT(C.DEPT_ID,2)*//*Rohit 06-11-2024*/ , A.BIN_ID
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID AND A.BIN_ID = B.BIN_ID 
      WHERE A.QUANTITY_IN_STOCK < 0)  
   BEGIN  
    SET @NRETVAL = 0  --*** UNSUCCESS  
    SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A  JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/ AS DEPT_ID,A.BIN_ID, SUM(A.QUANTITY) AS QUANTITY   
      FROM APPROVAL_RETURN_DET A WITH (NOLOCK)  
      JOIN APD01106 B WITH (NOLOCK) ON B.ROW_ID=A.APD_ROW_ID  
      JOIN APPROVAL_RETURN_MST C WITH (NOLOCK) ON C.MEMO_ID=A.MEMO_ID     
      JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE A.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,C.Location_code/*LEFT(C.DEPT_ID,2)*//*Rohit 06-11-2024*/,A.BIN_ID) B ON B.PRODUCT_CODE=A.PRODUCT_CODE
       AND B.DEPT_ID=A.DEPT_ID  
       AND B.BIN_ID=A.BIN_ID  
      WHERE A.QUANTITY_IN_STOCK < 0 '  
   END  
  
  END   
  
 END   -- END OF LABEL APPROVAL RETURN  
   
 ELSE   
 --*** STARTING STOCK UPDATION FOR PURCHASE RETURN  
 IF @CXNTYPE IN ('PRT')  -- PURCHASE RETURN  
 BEGIN  
  IF @NREVERTFLAG = 1  
   SET @NOUTFLAG = -1  
  ELSE  
   SET @NOUTFLAG = 1  
  
  SELECT @NENTRYMODE=ENTRY_MODE,@CUSERCODE=USER_CODE FROM RMM01106 WHERE RM_ID=@CXNID  
  

  ---NEGATIVE STOCK SHOULD NOT BE ALLOWED FOR SUPER USER
 -- IF @CUSERCODE='0000000'
	--SET @NALLOWNEGSTOCK=0
    
  ---- DO NOT UPDATE STOCK OF DEBITNOTES WHICH ARE RAISED AGAINST PACKING SLIP  
  ---- BECAUSE IT IS ALREADY UPDATED BY PACKING SLIP MODULE  
  IF @NENTRYMODE=2   
   RETURN  

 	
	 
  --*** UPDATING THE QUANTITY IN STOCK FROM PMT FOR THE GIVEN MEMO  
  UPDATE A   
   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )  
   FROM  PMT01106 A
   JOIN 
   ( SELECT B.PRODUCT_CODE, C.Location_code/*LEFT(C.RM_ID,2)*//*Rohit 06-11-2024*/ AS DEPT_ID,B.BIN_ID, SUM(QUANTITY) AS QUANTITY   
    FROM RMD01106 B WITH (NOLOCK)  
    JOIN RMM01106 C WITH (NOLOCK) ON C.RM_ID=B.RM_ID  
    JOIN SKU D  WITH (NOLOCK)ON B.PRODUCT_CODE = D.PRODUCT_CODE  
    JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
    WHERE B.RM_ID = @CXNID AND E.STOCK_NA=0  
    GROUP BY B.PRODUCT_CODE,  C.Location_code/* LEFT(C.RM_ID,2)*//*Rohit 06-11-2024*/ ,B.BIN_ID  
   ) B  ON A.PRODUCT_CODE = B.PRODUCT_CODE   
   AND A.DEPT_ID = B.DEPT_ID  AND A.BIN_ID=B.BIN_ID 
  
  SET @NRETVAL = 1  --*** SUCCESS  
    
		
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
  IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1)  
  BEGIN  
   IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A WITH (NOLOCK) JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(C.RM_ID,2)*//*Rohit 06-11-2024*/ AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM RMD01106 B WITH (NOLOCK)  
      JOIN RMM01106 C WITH (NOLOCK) ON C.RM_ID=B.RM_ID  
      JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.RM_ID = @CXNID AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE, C.Location_code/*LEFT(C.RM_ID,2)*//*Rohit 06-11-2024*/  ,B.BIN_ID 
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  AND B.BIN_ID=A.BIN_ID 
      WHERE A.QUANTITY_IN_STOCK < 0)  
   BEGIN  
    SET @NRETVAL = 0  --*** UNSUCCESS  
    SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A WITH (NOLOCK)  JOIN  
      (SELECT B.PRODUCT_CODE,  C.Location_code/*LEFT(C.RM_ID,2)*//*Rohit 06-11-2024*/ AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM RMD01106 B WITH (NOLOCK)  
      JOIN RMM01106 C WITH (NOLOCK) ON C.RM_ID=B.RM_ID  
      JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.RM_ID = '''+@CXNID+''' AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE, C.Location_code/*LEFT(C.RM_ID,2)*//*Rohit 06-11-2024*/,B.BIN_ID
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID AND B.BIN_ID=A.BIN_ID   
      WHERE A.QUANTITY_IN_STOCK < 0 '  
   END  
  
  END   
 END  --  END OF PURCHASE RETURN  
  
  
 ELSE  
 --*** STARTING STOCK UPDATION FOR BARCODE CANCELLATION / UNCANCELLATION  
 IF @CXNTYPE IN ('CNC', 'UNC')  -- BARCODE CANCELLATION / UNCANCELLATION  
 BEGIN  
  
  PRINT 'UPDATEPMT - 1 '  
  --SELECT @CTEMPXNTYPE = (CASE WHEN CNC_TYPE=1 THEN 'CNC' ELSE 'UNC' END)  
  --FROM ICM01106  
  --WHERE CNC_MEMO_ID = @CXNID   
   
  IF @NREVERTFLAG = 1  
   SET @NOUTFLAG = ( CASE WHEN @CXNTYPE = 'CNC' THEN -1 ELSE 1 END )  
  ELSE  
   SET @NOUTFLAG = ( CASE WHEN @CXNTYPE = 'CNC' THEN 1 ELSE -1 END )  
 
  	IF EXISTS (SELECT TOP 1 A.MEMO_ID FROM STMH01106 A WITH (NOLOCK) 
  	JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
			   AND B.BIN_ID=A.RECON_BIN_ID
			   JOIN ICD01106 C WITH (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
			   JOIN ICM01106 D (NOLOCK) ON D.cnc_memo_id=C.cnc_memo_id
			   WHERE C.CNC_MEMO_ID=@CXNID AND D.Location_code/*LEFT(C.CNC_MEMO_ID,2)*//*Rohit 06-11-2024*/= B.DEPT_ID) and @CXNTYPE='UNC'
	BEGIN
			SET @CCMD = N'SELECT DISTINCT C.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE PART OF STOCK RECONCILIATION'' AS ERRMSG
						  FROM STMH01106 A WITH (NOLOCK) JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
						  AND B.BIN_ID=A.RECON_BIN_ID
						  JOIN ICD01106 C WITH (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
						  WHERE C.CNC_MEMO_ID='''+@CXNID+''''		
			RETURN					
	END	       
	    
	
     
  INSERT PMT01106 (PRODUCT_CODE,  QUANTITY_IN_STOCK, DEPT_ID,BIN_ID,LAST_UPDATE )  
  SELECT distinct  B.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,C.Location_code/*LEFT(B.DEPT_ID,2)*//*Rohit 06-11-2024*/ DEPT_ID,B.BIN_ID,GETDATE() AS LAST_UPDATE  
  FROM ICD01106 B WITH (NOLOCK)  
  JOIN ICM01106 C WITH (NOLOCK) ON C.CNC_MEMO_ID=B.CNC_MEMO_ID  
  JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
  JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
  LEFT OUTER JOIN PMT01106 PMT WITH (NOLOCK) ON PMT.PRODUCT_CODE = B.PRODUCT_CODE AND PMT.DEPT_ID = C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/  AND PMT.BIN_ID = B.BIN_ID  
  WHERE B.CNC_MEMO_ID = @CXNID AND PMT.PRODUCT_CODE IS NULL  
  
  PRINT 'UPDATEPMT - @NOUTFLAG ' + CONVERT(VARCHAR, @NOUTFLAG )  
  
  --*** UPDATING THE QUANTITY IN STOCK FROM PMT FOR THE GIVEN MEMO  
  UPDATE A   
   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )  
   FROM  PMT01106 A
   JOIN 
   ( SELECT B.PRODUCT_CODE, A.Location_code/*A.DEPT_ID*//*Rohit 06-11-2024*/DEPT_ID,B.BIN_ID, SUM(QUANTITY) AS QUANTITY   
    FROM ICD01106 B WITH (NOLOCK)   
    JOIN ICM01106 A WITH (NOLOCK) ON A.CNC_MEMO_ID=B.CNC_MEMO_ID  
    JOIN SKU C WITH (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE  
    JOIN ARTICLE D WITH (NOLOCK) ON D.ARTICLE_CODE=C.ARTICLE_CODE  
    WHERE B.CNC_MEMO_ID = @CXNID AND D.STOCK_NA=0   
    AND A.STOCK_ADJ_NOTE=0  
    GROUP BY B.PRODUCT_CODE,A.Location_code/*A.DEPT_ID*//*Rohit 06-11-2024*/ ,B.BIN_ID 
   ) B  ON A.PRODUCT_CODE = B.PRODUCT_CODE   
   AND A.DEPT_ID = B.DEPT_ID  
   AND A.BIN_ID = B.BIN_ID  
  
  
  
  SET @NRETVAL = 1  --*** SUCCESS  
  
  SELECT @BCANCELLED=CANCELLED,@CUSERCODE=USER_CODE FROM ICM01106 WHERE CNC_MEMO_ID=@CXNID  
  
  ---NEGATIVE STOCK SHOULD NOT BE ALLOWED FOR SUPER USER
 -- IF @CUSERCODE='0000000'
	--SET @NALLOWNEGSTOCK=0
    
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
  IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1  
  BEGIN  
   IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A  WITH (NOLOCK) JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM ICD01106 B WITH (NOLOCK)  
      JOIN ICM01106 C WITH (NOLOCK) ON C.CNC_MEMO_ID=B.CNC_MEMO_ID  
      JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.CNC_MEMO_ID = @CXNID AND E.STOCK_NA=0 AND C.STOCK_ADJ_NOTE=0  
      GROUP BY B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ ,B.BIN_ID 
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  AND  B.BIN_ID=A.BIN_ID
      WHERE A.QUANTITY_IN_STOCK < 0)  
   BEGIN  
    SET @NRETVAL = 0  --*** UNSUCCESS  
    SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A WITH (NOLOCK)  JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/  AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM ICD01106 B WITH (NOLOCK)  
      JOIN ICM01106 C WITH (NOLOCK) ON C.CNC_MEMO_ID=B.CNC_MEMO_ID  
      JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.CNC_MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0 AND C.STOCK_ADJ_NOTE=0  
      GROUP BY B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ ,B.BIN_ID) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID AND  B.BIN_ID=A.BIN_ID 
      WHERE A.QUANTITY_IN_STOCK < 0 '  
   END  
  END   
 END  --  END OF BARCODE CANCELLATION / UNCANCELLATION  
   
 ELSE  
 IF @CXNTYPE IN ('IRR')    -- ITEM RATE/MASTERS REVISION  
 BEGIN  
  IF @NREVERTFLAG = 1  
   SET @NOUTFLAG = -1  
  ELSE  
   SET @NOUTFLAG = 1  

  	IF EXISTS (SELECT TOP 1 A.MEMO_ID FROM STMH01106 A WITH (NOLOCK) 
  	JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
			   AND B.BIN_ID=A.RECON_BIN_ID
			   JOIN IRD01106 C WITH (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
			   JOIN IRM01106 D (NOLOCK) ON D.irm_memo_id=C.irm_memo_id
			   WHERE C.IRM_MEMO_ID=@CXNID AND C.NEW_PRODUCT_CODE<>'' AND D.Location_code/*LEFT(C.IRM_MEMO_ID,2)*//*Rohit 06-11-2024*/ = B.DEPT_ID)
	BEGIN
			SET @CCMD = N'SELECT DISTINCT C.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE PART OF STOCK RECONCILIATION'' AS ERRMSG
						  FROM STMH01106 A WITH (NOLOCK) JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
						  AND B.BIN_ID=A.RECON_BIN_ID
						  JOIN IRD01106 C WITH (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
						  WHERE C.IRM_MEMO_ID='''+@CXNID+'''  AND C.NEW_PRODUCT_CODE<>'''''		
			RETURN					
	END	       
	    
	PRINT 'IRR STOCK UPDATE-1'  
    
  PRINT 'IRR STOCK UPDATE-2'  
  --*** UPDATING THE QUANTITY IN STOCK FROM PMT FOR THE GIVEN MEMO  
  UPDATE A   
   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )  
   FROM  PMT01106 A
   JOIN 
   ( SELECT B.PRODUCT_CODE, E.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/ DEPT_ID,B.BIN_ID, SUM(QUANTITY) AS QUANTITY   
    FROM IRD01106 B WITH (NOLOCK)  
    JOIN SKU C WITH (NOLOCK) ON B.PRODUCT_CODE=C.PRODUCT_CODE  
    JOIN ARTICLE D WITH (NOLOCK) ON C.ARTICLE_CODE=D.ARTICLE_CODE  
    JOIN IRM01106 E WITH (NOLOCK) ON E.IRM_MEMO_ID=B.IRM_MEMO_ID  
    WHERE B.IRM_MEMO_ID = @CXNID AND D.STOCK_NA=0   
    AND  ISNULL(B.NEW_PRODUCT_CODE,'')<>'' AND E.TYPE IN (1,4) 
    GROUP BY B.PRODUCT_CODE, E.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/  ,B.BIN_ID 
   ) B  ON A.PRODUCT_CODE = B.PRODUCT_CODE   
   AND A.DEPT_ID = B.DEPT_ID  
   AND A.BIN_ID = B.BIN_ID 
    
  PRINT 'IRR STOCK UPDATE-3'  
  
  UPDATE PMT01106   
   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK + ( @NOUTFLAG * B.QUANTITY )  
   FROM   
   ( SELECT B.NEW_PRODUCT_CODE AS PRODUCT_CODE, E.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/ DEPT_ID,B.BIN_ID, SUM(QUANTITY) AS QUANTITY   
    FROM IRD01106 B WITH (NOLOCK)  
    JOIN SKU C WITH (NOLOCK) ON B.PRODUCT_CODE=C.PRODUCT_CODE  
    JOIN ARTICLE D WITH (NOLOCK) ON C.ARTICLE_CODE=D.ARTICLE_CODE  
    JOIN IRM01106 E  WITH (NOLOCK)ON E.IRM_MEMO_ID=B.IRM_MEMO_ID  
    WHERE B.IRM_MEMO_ID = @CXNID AND D.STOCK_NA=0  
    AND ISNULL(B.NEW_PRODUCT_CODE,'')<>'' 
    GROUP BY B.NEW_PRODUCT_CODE, E.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/  ,B.BIN_ID 
   ) B  
   WHERE PMT01106.PRODUCT_CODE = B.PRODUCT_CODE   
   AND PMT01106.DEPT_ID = B.DEPT_ID  
   AND PMT01106.BIN_ID = B.BIN_ID 
    
  SET @NRETVAL = 1  --*** SUCCESS  
    
  PRINT 'IRR STOCK UPDATE-4'  
    
  IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/  AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM IRD01106 B WITH (NOLOCK)  
      JOIN IRM01106 C WITH (NOLOCK) ON C.IRM_MEMO_ID=B.IRM_MEMO_ID  
      JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.IRM_MEMO_ID = @CXNID AND E.STOCK_NA=0  AND ISNULL(B.NEW_PRODUCT_CODE,'')<>''
      GROUP BY B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/ ,B.BIN_ID  
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  AND  B.BIN_ID=A.BIN_ID 
      WHERE A.QUANTITY_IN_STOCK < 0)  
  BEGIN  
   SET @NRETVAL = 0  --*** UNSUCCESS  
   SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG 
     FROM PMT01106 A WITH (NOLOCK)  
     JOIN  
     (
      SELECT B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/  AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM IRD01106 B WITH (NOLOCK) 
      JOIN IRM01106 C WITH (NOLOCK) ON C.IRM_MEMO_ID=B.IRM_MEMO_ID  
      JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.IRM_MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0 AND ISNULL(B.NEW_PRODUCT_CODE,'''')<>''''
      GROUP BY B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/ ,B.BIN_ID
     )B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID AND B.BIN_ID=A.BIN_ID   
     WHERE A.QUANTITY_IN_STOCK < 0 '  
  END  
     
    
 END   -- END OF ITEM RATE REVISION  
  
 ELSE  
 --*** STARTING STOCK UPDATION FOR JOB WORK ISSUE  
 IF @CXNTYPE IN ('JWI')  
 BEGIN  
  
  PRINT 'UPDATEPMT - 1 '  
  --SELECT @CTEMPXNTYPE = (CASE WHEN CNC_TYPE=1 THEN 'CNC' ELSE 'UNC' END)  
  --FROM ICM01106  
  --WHERE CNC_MEMO_ID = @CXNID   
   
  IF @NREVERTFLAG = 1  
   SET @NOUTFLAG = -1  
  ELSE  
   SET @NOUTFLAG = 1  

  
    PRINT 'UPDATEPMT - @NOUTFLAG ' + CONVERT(VARCHAR, @NOUTFLAG )  
	
  --*** UPDATING THE QUANTITY IN STOCK FROM PMT FOR THE GIVEN MEMO  
  UPDATE A   
   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )  
   FROM  PMT01106 A
   JOIN 
   ( SELECT B.PRODUCT_CODE, A.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/ DEPT_ID,B.BIN_ID, SUM(QUANTITY) AS QUANTITY   
    FROM JOBWORK_ISSUE_DET B   
    JOIN JOBWORK_ISSUE_MST A ON A.ISSUE_ID=B.ISSUE_ID  
    WHERE B.ISSUE_ID = @CXNID   
    GROUP BY B.PRODUCT_CODE,A.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/   ,B.BIN_ID
   ) B  ON A.PRODUCT_CODE = B.PRODUCT_CODE   
   AND A.DEPT_ID = B.DEPT_ID  
   AND A.BIN_ID = B.BIN_ID  
    
  SET @NRETVAL = 1  --*** SUCCESS  
  
  SELECT @BCANCELLED=CANCELLED,@CUSERCODE=USER_CODE FROM JOBWORK_ISSUE_MST WHERE ISSUE_ID=@CXNID  
  
  ---NEGATIVE STOCK SHOULD NOT BE ALLOWED FOR SUPER USER
	--IF @CUSERCODE='0000000'
	--	SET @NALLOWNEGSTOCK=0  
		
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
  IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1  
  BEGIN  
   IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A JOIN  
      (SELECT   B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/  AS DEPT_ID ,B.BIN_ID 
        , SUM(B.QUANTITY) AS QUANTITY   
      FROM JOBWORK_ISSUE_DET B  
      JOIN JOBWORK_ISSUE_MST C ON C.ISSUE_ID=B.ISSUE_ID  
      JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.ISSUE_ID = @CXNID AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/  ,B.BIN_ID 
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID   AND B.BIN_ID=A.BIN_ID  
      WHERE A.QUANTITY_IN_STOCK < 0)  
   BEGIN  
    SET @NRETVAL = 0  --*** UNSUCCESS  
    SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A  JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/  AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM JOBWORK_ISSUE_DET B  
      JOIN JOBWORK_ISSUE_MST C ON C.ISSUE_ID=B.ISSUE_ID  
      JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.ISSUE_ID = '''+@CXNID+''' AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/ ,B.BIN_ID) B ON B.PRODUCT_CODE=A.PRODUCT_CODE 
      AND B.DEPT_ID=A.DEPT_ID  AND B.BIN_ID=A.BIN_ID   
      WHERE A.QUANTITY_IN_STOCK < 0 '  
    PRINT @CCMD    
   END  
  END   
 END  --  END OF JOB WORK ISSUE  
ELSE  
IF @CXNTYPE IN ('JWI_PS')  
 BEGIN  
  
  PRINT 'UPDATEPMT - 1 '  
  --SELECT @CTEMPXNTYPE = (CASE WHEN CNC_TYPE=1 THEN 'CNC' ELSE 'UNC' END)  
  --FROM ICM01106  
  --WHERE CNC_MEMO_ID = @CXNID   
   
  IF @NREVERTFLAG = 1  
   SET @NOUTFLAG = -1  
  ELSE  
   SET @NOUTFLAG = 1  

  
	PRINT 'UPDATEPMT - @NOUTFLAG ' + CONVERT(VARCHAR, @NOUTFLAG )  
	--UPDATE A SET LAST_UPDATE=GETDATE()
	--FROM PMT01106_LUPD A 
	--JOIN POST_SALES_JOBWORK_ISSUE_DET B ON A.PRODUCT_CODE=B.PRODUCT_CODE
	--WHERE B.ISSUE_ID=@CXNID
  
	--INSERT PMT01106_LUPD(PRODUCT_CODE,LAST_UPDATE)	
	--SELECT DISTINCT PID.PRODUCT_CODE,GETDATE()
	--FROM POST_SALES_JOBWORK_ISSUE_DET PID
	--JOIN SKU ON PID.PRODUCT_CODE=SKU.PRODUCT_CODE
	--JOIN ARTICLE ART ON SKU.ARTICLE_CODE=ART.ARTICLE_CODE
	--LEFT JOIN PMT01106_LUPD PL ON PL.PRODUCT_CODE=PID.PRODUCT_CODE
	--WHERE ART.STOCK_NA=0 AND PID.ISSUE_ID=@CXNID AND PL.PRODUCT_CODE IS NULL         	  
  
  --*** UPDATING THE QUANTITY IN STOCK FROM PMT FOR THE GIVEN MEMO  
  UPDATE A   
   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )  
   FROM  PMT01106 A
   JOIN 
   ( SELECT B.PRODUCT_CODE, A.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/ DEPT_ID,B.BIN_ID, SUM(QUANTITY) AS QUANTITY   
    FROM POST_SALES_JOBWORK_ISSUE_DET B   
    JOIN POST_SALES_JOBWORK_ISSUE_MST A ON A.ISSUE_ID=B.ISSUE_ID  
    WHERE B.ISSUE_ID = @CXNID   
    GROUP BY B.PRODUCT_CODE,A.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/   ,B.BIN_ID
   ) B ON A.PRODUCT_CODE = B.PRODUCT_CODE   
   AND A.DEPT_ID = B.DEPT_ID  
   AND A.BIN_ID = B.BIN_ID 
    
  SET @NRETVAL = 1  --*** SUCCESS  
  
  SELECT @BCANCELLED=CANCELLED,@CUSERCODE=USER_CODE FROM POST_SALES_JOBWORK_ISSUE_MST WHERE ISSUE_ID=@CXNID  
  
  ---NEGATIVE STOCK SHOULD NOT BE ALLOWED FOR SUPER USER
 -- IF @CUSERCODE='0000000'
	--SET @NALLOWNEGSTOCK=0
    
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
  IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1  
  BEGIN  
   IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/  AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM POST_SALES_JOBWORK_ISSUE_DET B  
      JOIN POST_SALES_JOBWORK_ISSUE_MST C ON C.ISSUE_ID=B.ISSUE_ID  
      JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.ISSUE_ID = @CXNID AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/  ,B.BIN_ID 
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  AND A.BIN_ID=B.BIN_ID
      WHERE A.QUANTITY_IN_STOCK < 0)  
   BEGIN  
    SET @NRETVAL = 0  --*** UNSUCCESS  
    SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A  JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/  AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM POST_SALES_JOBWORK_ISSUE_DET B  
      JOIN POST_SALES_JOBWORK_ISSUE_MST C ON C.ISSUE_ID=B.ISSUE_ID  
      JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.ISSUE_ID = '''+@CXNID+''' AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,C.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/ ,B.BIN_ID) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID AND A.BIN_ID = B.BIN_ID  
      WHERE A.QUANTITY_IN_STOCK < 0 '  
    PRINT @CCMD    
   END  
  END   
 END  --  END OF JOB WORK ISSUE  
 ELSE  
 --*** STARTING STOCK UPDATION FOR JOB WORK RECEIPT  
 IF @CXNTYPE IN ('JWR')  
 BEGIN  
  
PRINT 'UPDATEPMT - 1 '  
  IF @NREVERTFLAG = 1  
   SET @NOUTFLAG = 1  
  ELSE  
   SET @NOUTFLAG = -1  

  	IF EXISTS (SELECT TOP 1 A.MEMO_ID FROM STMH01106 A JOIN PMT01106 B ON A.REP_ID=B.REP_ID
			   AND B.BIN_ID=A.RECON_BIN_ID
			   JOIN JOBWORK_RECEIPT_DET C ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
			   JOIN jobwork_receipt_mst D ON D.receipt_id=c.receipt_id
			   WHERE C.RECEIPT_ID=@CXNID AND LEFT(C.RECEIPT_ID,2)= B.DEPT_ID)
	BEGIN
			SET @CCMD = N'SELECT DISTINCT C.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE PART OF STOCK RECONCILIATION'' AS ERRMSG
						  FROM STMH01106 A JOIN PMT01106 B ON A.REP_ID=B.REP_ID
						  AND B.BIN_ID=A.RECON_BIN_ID
						  JOIN JOBWORK_RECEIPT_DET C ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
						  WHERE C.RECEIPT_ID='''+@CXNID+''''		
			RETURN					
	END	       
	  
  IF @NREVERTFLAG = 0  
   INSERT PMT01106 (PRODUCT_CODE,  QUANTITY_IN_STOCK, DEPT_ID,BIN_ID,LAST_UPDATE )  
   SELECT B.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ DEPT_ID,B.BIN_ID ,GETDATE() AS LAST_UPDATE  
     FROM JOBWORK_RECEIPT_DET B  
     JOIN JOBWORK_RECEIPT_MST C ON C.RECEIPT_ID=B.RECEIPT_ID  
     JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE  
     LEFT OUTER JOIN PMT01106 PMT ON PMT.PRODUCT_CODE = B.PRODUCT_CODE AND PMT.DEPT_ID = C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/   AND B.BIN_ID=PMT.BIN_ID
   WHERE B.RECEIPT_ID = @CXNID AND PMT.PRODUCT_CODE IS NULL  
	
  --*** UPDATING THE QUANTITY IN STOCK FROM PMT FOR THE GIVEN MEMO  
  UPDATE A   
   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )  
   FROM  PMT01106 A
   JOIN 
   ( SELECT B.PRODUCT_CODE, A.Location_code/*A.DEPT_ID*//*Rohit 06-11-2024*/ DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
    FROM JOBWORK_RECEIPT_DET B   
    JOIN JOBWORK_RECEIPT_MST A ON A.RECEIPT_ID=B.RECEIPT_ID  
    JOIN JOBWORK_ISSUE_DET C ON C.ROW_ID=B.REF_ROW_ID  
    JOIN JOBWORK_ISSUE_MST D ON D.ISSUE_ID=C.ISSUE_ID  
    WHERE B.RECEIPT_ID = @CXNID AND D.ISSUE_TYPE=1  
    GROUP BY B.PRODUCT_CODE,A.Location_code/*A.DEPT_ID*//*Rohit 06-11-2024*/   ,B.BIN_ID
   ) B  ON A.PRODUCT_CODE = B.PRODUCT_CODE   
   AND A.DEPT_ID = B.DEPT_ID  
   AND A.BIN_ID=B.BIN_ID
  
  
  SET @NRETVAL = 1  --*** SUCCESS  
  
  SELECT @BCANCELLED=CANCELLED,@CUSERCODE=USER_CODE FROM JOBWORK_RECEIPT_MST WHERE RECEIPT_ID=@CXNID  
  
  ---NEGATIVE STOCK SHOULD NOT BE ALLOWED FOR SUPER USER
  --IF @CUSERCODE='0000000'
		--SET @NALLOWNEGSTOCK=0
    
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
  IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1  
  BEGIN  
   IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/  AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM JOBWORK_RECEIPT_DET B  
      JOIN JOBWORK_RECEIPT_MST C ON C.RECEIPT_ID=B.RECEIPT_ID  
      JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      JOIN JOBWORK_ISSUE_DET F ON F.ROW_ID=B.REF_ROW_ID  
      JOIN JOBWORK_ISSUE_MST G ON G.ISSUE_ID=F.ISSUE_ID  
      WHERE B.RECEIPT_ID = @CXNID AND G.ISSUE_TYPE=1  
      AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/   ,B.BIN_ID
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  AND A.BIN_ID=B.BIN_ID
      WHERE A.QUANTITY_IN_STOCK < 0)  
   BEGIN  
    SET @NRETVAL = 0  --*** UNSUCCESS  
    SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A  JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(C.RECEIPT_NO,2)*//*Rohit 06-11-2024*/  AS DEPT_ID,B.BIN_D, SUM(B.QUANTITY) AS QUANTITY   
      FROM JOBWORK_RECEIPT_DET B  
      JOIN JOBWORK_RECEIPT_MST C ON C.RECEIPT_ID=B.RECEIPT_ID  
      JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      JOIN JOBWORK_ISSUE_DET F ON F.ROW_ID=B.REF_ROW_ID  
      JOIN JOBWORK_ISSUE_MST G ON G.ISSUE_ID=F.ISSUE_ID  
      WHERE B.RECEIPT_ID = '''+@CXNID+''' AND G.ISSUE_TYPE=1        
      AND E.STOCK_NA=0 GROUP BY B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ ,B.BIN_ID
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  AND A.BIN_ID=B.BIN_ID
      WHERE A.QUANTITY_IN_STOCK < 0 '  
   END  
  END   
 END  --  END OF JOB WORK RECEIPT  
 ELSE  
 --*** STARTING STOCK UPDATION FOR JOB WORK RECEIPT  
 IF @CXNTYPE IN ('JWR_PS')  
 BEGIN  
  
 PRINT 'UPDATEPMT - 1 '  
  IF @NREVERTFLAG = 1  
   SET @NOUTFLAG = 1  
  ELSE  
   SET @NOUTFLAG = -1  

  	IF EXISTS (SELECT TOP 1 A.MEMO_ID FROM STMH01106 A JOIN PMT01106 B ON A.REP_ID=B.REP_ID
			   AND B.BIN_ID=A.RECON_BIN_ID
			   JOIN POST_SALES_JOBWORK_RECEIPT_DET C ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
			   JOIN post_sales_jobwork_receipt_mst D ON D.receipt_id=C.receipt_id
			   WHERE C.RECEIPT_ID=@CXNID AND D.Location_code/*LEFT(C.RECEIPT_ID,2)*//*Rohit 06-11-2024*/ = B.DEPT_ID)
	BEGIN
			SET @CCMD = N'SELECT DISTINCT C.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE PART OF STOCK RECONCILIATION'' AS ERRMSG
						  FROM STMH01106 A JOIN PMT01106 B ON A.REP_ID=B.REP_ID
						  AND B.BIN_ID=A.RECON_BIN_ID
						  JOIN POST_SALES_JOBWORK_RECEIPT_DET C ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
						  WHERE C.RECEIPT_ID='''+@CXNID+''''		
			RETURN					
	END	       
	  
     PRINT 'UPDATEPMT - @NOUTFLAG ' + CONVERT(VARCHAR, @NOUTFLAG )  
    --INSERT MISSING PRODUCT_CODE  
       
  INSERT PMT01106 (PRODUCT_CODE,  QUANTITY_IN_STOCK, DEPT_ID,BIN_ID,LAST_UPDATE )  
  SELECT B.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ DEPT_ID,B.BIN_ID,GETDATE() AS LAST_UPDATE  
  FROM POST_SALES_JOBWORK_RECEIPT_DET B  
  JOIN POST_SALES_JOBWORK_RECEIPT_MST C ON C.RECEIPT_ID=B.RECEIPT_ID  
  JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE  
  LEFT OUTER JOIN PMT01106 PMT ON PMT.PRODUCT_CODE = B.PRODUCT_CODE AND PMT.DEPT_ID = C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/   AND PMT.BIN_ID=B.BIN_ID
  WHERE B.RECEIPT_ID = @CXNID AND PMT.PRODUCT_CODE IS NULL   
               
	--UPDATE A SET LAST_UPDATE=GETDATE()
	--FROM PMT01106_LUPD A 
	--JOIN POST_SALES_JOBWORK_RECEIPT_DET B ON A.PRODUCT_CODE=B.PRODUCT_CODE
	--WHERE B.RECEIPT_ID=@CXNID
  
	--INSERT PMT01106_LUPD(PRODUCT_CODE,LAST_UPDATE)	
	--SELECT DISTINCT PID.PRODUCT_CODE,GETDATE()
	--FROM POST_SALES_JOBWORK_RECEIPT_DET PID
	--JOIN SKU ON PID.PRODUCT_CODE=SKU.PRODUCT_CODE
	--JOIN ARTICLE ART ON SKU.ARTICLE_CODE=ART.ARTICLE_CODE
	--LEFT JOIN PMT01106_LUPD PL ON PL.PRODUCT_CODE=PID.PRODUCT_CODE
	--WHERE ART.STOCK_NA=0 AND PID.RECEIPT_ID=@CXNID AND PL.PRODUCT_CODE IS NULL         	     
  
  --*** UPDATING THE QUANTITY IN STOCK FROM PMT FOR THE GIVEN MEMO  
  UPDATE A   
   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )  
   FROM  PMT01106 A
   JOIN 
   ( SELECT B.PRODUCT_CODE, A.Location_code/*A.DEPT_ID*//*Rohit 06-11-2024*/ DEPT_ID,B.BIN_ID, SUM(QUANTITY) AS QUANTITY   
    FROM POST_SALES_JOBWORK_RECEIPT_DET B   
    JOIN POST_SALES_JOBWORK_RECEIPT_MST A ON A.RECEIPT_ID=B.RECEIPT_ID  
    WHERE B.RECEIPT_ID = @CXNID   
    GROUP BY B.PRODUCT_CODE,A.Location_code/*A.DEPT_ID*//*Rohit 06-11-2024*/   ,B.BIN_ID
   ) B  ON A.PRODUCT_CODE = B.PRODUCT_CODE   
   AND A.DEPT_ID = B.DEPT_ID  
   AND A.BIN_ID=B.BIN_ID
  
  
  SET @NRETVAL = 1  --*** SUCCESS  
  
  SELECT @BCANCELLED=CANCELLED,@CUSERCODE=USER_CODE FROM POST_SALES_JOBWORK_RECEIPT_MST WHERE RECEIPT_ID=@CXNID  
  
  ---NEGATIVE STOCK SHOULD NOT BE ALLOWED FOR SUPER USER
  --IF @CUSERCODE='0000000'
		--SET @NALLOWNEGSTOCK=0  
    
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
  IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1  
  BEGIN  
   IF EXISTS (SELECT A.PRODUCT_CODE FROM PMT01106 A JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/  AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM POST_SALES_JOBWORK_RECEIPT_DET B  
      JOIN POST_SALES_JOBWORK_RECEIPT_MST C ON C.RECEIPT_ID=B.RECEIPT_ID  
      JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.RECEIPT_ID = @CXNID AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/   ,B.BIN_ID
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  AND B.BIN_ID=A.BIN_ID
      WHERE A.QUANTITY_IN_STOCK < 0)  
   BEGIN  
    SET @NRETVAL = 0  --*** UNSUCCESS  
    SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A  JOIN  
      (SELECT B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/  AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM POST_SALES_JOBWORK_RECEIPT_DET B  
      JOIN POST_SALES_JOBWORK_RECEIPT_MST C ON C.RECEIPT_ID=B.RECEIPT_ID  
      JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.RECEIPT_ID = '''+@CXNID+''' AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ ,B.BIN_ID
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  AND A.BIN_ID=B.BIN_ID
      WHERE A.QUANTITY_IN_STOCK < 0 '  
    PRINT @CCMD    
   END  
  END   
 END   --  END OF JOB WORK RECEIPT  
  
 ELSE  
 --*** STARTING STOCK UPDATION FOR SPLIT & COMBINE (OUTPUT)  
 IF @CXNTYPE IN ('SCF')  
 BEGIN  

	IF EXISTS (SELECT TOP 1 A.MEMO_ID FROM STMH01106 A JOIN PMT01106 B ON A.REP_ID=B.REP_ID
			   AND B.BIN_ID=A.RECON_BIN_ID
			   JOIN SCF01106 C ON C.PRODUCT_CODE=B.PRODUCT_CODE
			   JOIN scm01106 D ON D.memo_id=C.memo_id
			   WHERE C.MEMO_ID=@CXNID AND D.Location_code/*LEFT(C.MEMO_ID,2)*//*Rohit 06-11-2024*/ = B.DEPT_ID)
	BEGIN
			SET @CCMD = N'SELECT DISTINCT C.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE PART OF STOCK RECONCILIATION'' AS ERRMSG
						  FROM STMH01106 A JOIN PMT01106 B ON A.REP_ID=B.REP_ID
						  AND B.BIN_ID=A.RECON_BIN_ID
						  JOIN SCF01106 C ON C.PRODUCT_CODE=B.PRODUCT_CODE
						  WHERE C.MEMO_ID='''+@CXNID+''''		
			RETURN					
	END	       
	  
  PRINT 'UPDATEPMT - 1 '  
  IF @NREVERTFLAG = 1  
   SET @NOUTFLAG = 1  
  ELSE  
   SET @NOUTFLAG = -1  
  
  
  PRINT 'UPDATEPMT - @NOUTFLAG ' + CONVERT(VARCHAR, @NOUTFLAG )  
  --*** UPDATING THE QUANTITY IN STOCK FROM PMT FOR THE GIVEN MEMO  
  UPDATE A   
   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )  
   FROM  PMT01106 A
   JOIN 
   ( SELECT B.PRODUCT_CODE,A.Location_code/*A.DEPT_ID*//*Rohit 06-11-2024*/ DEPT_ID  
    , SUM(QUANTITY) AS QUANTITY   
    FROM SCF01106 B   
    JOIN SCM01106 A ON A.MEMO_ID=B.MEMO_ID  
    JOIN SKU C ON C.PRODUCT_CODE=B.PRODUCT_CODE  
    JOIN ARTICLE D ON D.ARTICLE_CODE=C.ARTICLE_CODE  
    WHERE B.MEMO_ID = @CXNID  AND D.STOCK_NA=0  
    GROUP BY B.PRODUCT_CODE,A.Location_code/*A.DEPT_ID*//*Rohit 06-11-2024*/ 
   ) B  ON A.PRODUCT_CODE = B.PRODUCT_CODE   
   AND A.DEPT_ID = B.DEPT_ID  
  
  SET @NRETVAL = 1  --*** SUCCESS  
  
  SELECT @BCANCELLED=CANCELLED,@CUSERCODE=USER_CODE FROM SCM01106 WHERE MEMO_ID=@CXNID  
  
  ---NEGATIVE STOCK SHOULD NOT BE ALLOWED FOR SUPER USER
  --IF @CUSERCODE='0000000'
	 --SET @NALLOWNEGSTOCK=0
	
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
  IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1  
  BEGIN  
   IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A JOIN  
      (SELECT B.PRODUCT_CODE,A.Location_code/*A.DEPT_ID*//*Rohit 06-11-2024*/  AS DEPT_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM SCF01106 B   
      JOIN SCM01106 A ON A.MEMO_ID=B.MEMO_ID  
      JOIN SKU C ON C.PRODUCT_CODE=B.PRODUCT_CODE  
      JOIN ARTICLE D ON D.ARTICLE_CODE=C.ARTICLE_CODE  
      WHERE  B.MEMO_ID = @CXNID  AND D.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,A.Location_code/*A.DEPT_ID*//*Rohit 06-11-2024*/  
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  
      WHERE A.QUANTITY_IN_STOCK < 0)  
   BEGIN  
    SET @NRETVAL = 0  --*** UNSUCCESS  
    SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A  JOIN  
      (SELECT B.PRODUCT_CODE,A.Location_code/*A.DEPT_ID*//*Rohit 06-11-2024*/  AS DEPT_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM SCF01106 B   
      JOIN SCM01106 A ON A.MEMO_ID=B.MEMO_ID  
      JOIN SKU C ON C.PRODUCT_CODE=B.PRODUCT_CODE  
      JOIN ARTICLE D ON D.ARTICLE_CODE=C.ARTICLE_CODE  
      WHERE  B.MEMO_ID = '''+@CXNID+'''  AND D.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,A.Location_code/*A.DEPT_ID*//*Rohit 06-11-2024*/ ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  
      WHERE A.QUANTITY_IN_STOCK < 0 '  
   END  
  END   
    
 END  --  END OF  SPLIT COMBINE (OUTPUT)  
  
 ELSE  
 --*** STARTING STOCK UPDATION FOR  SPLIT COMBINE (CONSUMPTION)  
 IF @CXNTYPE IN ('SCC')  
 BEGIN  
  
  PRINT 'UPDATEPMT - 1 '  
  IF @NREVERTFLAG = 1  
   SET @NOUTFLAG = -1  
  ELSE  
   SET @NOUTFLAG = 1  

  	IF EXISTS (SELECT TOP 1 A.MEMO_ID FROM STMH01106 A JOIN PMT01106 B ON A.REP_ID=B.REP_ID
			   AND B.BIN_ID=A.RECON_BIN_ID
			   JOIN SCC01106 C ON C.PRODUCT_CODE=B.PRODUCT_CODE
			   JOIN scm01106 D ON D.memo_id=C.memo_id
			   WHERE C.MEMO_ID=@CXNID AND D.Location_code/*LEFT(C.MEMO_ID,2)*//*Rohit 06-11-2024*/ = B.DEPT_ID)
	BEGIN
			SET @CCMD = N'SELECT DISTINCT C.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE PART OF STOCK RECONCILIATION'' AS ERRMSG
						  FROM STMH01106 A JOIN PMT01106 B ON A.REP_ID=B.REP_ID AND B.BIN_ID=A.RECON_BIN_ID
						  JOIN SCC01106 C ON C.PRODUCT_CODE=B.PRODUCT_CODE
						  WHERE C.MEMO_ID='''+@CXNID+''''		
			RETURN					
	END	       
	  
    PRINT 'UPDATEPMT - @NOUTFLAG ' + CONVERT(VARCHAR, @NOUTFLAG )  
  
  --*** UPDATING THE QUANTITY IN STOCK FROM PMT FOR THE GIVEN MEMO  
  UPDATE A   
   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )  
   FROM  PMT01106 A
   JOIN 
   ( SELECT B.PRODUCT_CODE, A.Location_code/*A.DEPT_ID*//*Rohit 06-11-2024*/ DEPT_ID, SUM(QUANTITY+ADJ_QUANTITY) AS QUANTITY   
	FROM SCC01106 B   
	JOIN SCM01106 A ON A.MEMO_ID=B.MEMO_ID  
	WHERE B.MEMO_ID = @CXNID   
	GROUP BY B.PRODUCT_CODE,A.Location_code/*A.DEPT_ID*//*Rohit 06-11-2024*/ 
   ) B  ON A.PRODUCT_CODE = B.PRODUCT_CODE   
   AND A.DEPT_ID = B.DEPT_ID  
  
  SET @NRETVAL = 1  --*** SUCCESS  
  
  SELECT @CUSERCODE=USER_CODE FROM SCM01106 WHERE MEMO_ID=@CXNID
  ---NEGATIVE STOCK SHOULD NOT BE ALLOWED FOR SUPER USER
  --IF @CUSERCODE='0000000'
		--SET @NALLOWNEGSTOCK=0
  
  IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1  
  BEGIN  
   IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A JOIN  
      (SELECT B.PRODUCT_CODE,A.Location_code/*A.DEPT_ID*//*Rohit 06-11-2024*/  AS DEPT_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM SCC01106 B   
      JOIN SCM01106 A ON A.MEMO_ID=B.MEMO_ID  
      JOIN SKU C ON C.PRODUCT_CODE=B.PRODUCT_CODE  
      JOIN ARTICLE D ON D.ARTICLE_CODE=C.ARTICLE_CODE  
      WHERE  B.MEMO_ID = @CXNID  AND D.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,A.Location_code/*A.DEPT_ID*//*Rohit 06-11-2024*/ 
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  
      WHERE A.QUANTITY_IN_STOCK < 0)  
   BEGIN  
    SET @NRETVAL = 0  --*** UNSUCCESS  
    SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A  JOIN  
      (SELECT B.PRODUCT_CODE,A.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/  AS DEPT_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM SCC01106 B   
      JOIN SCM01106 A ON A.MEMO_ID=B.MEMO_ID  
      JOIN SKU C ON C.PRODUCT_CODE=B.PRODUCT_CODE  
      JOIN ARTICLE D ON D.ARTICLE_CODE=C.ARTICLE_CODE  
      WHERE  B.MEMO_ID = '''+@CXNID+'''  AND D.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,A.Location_code/*B.DEPT_ID*//*Rohit 06-11-2024*/ ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  
      WHERE A.QUANTITY_IN_STOCK < 0 '  
   END  
  END   
 END  --  END OF SPLIT COMBINE (CONSUMPTION)  
 ELSE --*** STARTING STOCK UPDATION FOR BUYER'S ORDER   
 IF @CXNTYPE IN ('WOD')    -- BUYER'S ORDER  
 BEGIN  
  IF @NREVERTFLAG = 1  
   SET @NOUTFLAG = -1  
  ELSE  
   SET @NOUTFLAG = 1  

  	IF EXISTS (SELECT TOP 1 A.MEMO_ID FROM STMH01106 A JOIN PMT01106 B ON A.REP_ID=B.REP_ID
			   AND B.BIN_ID=A.RECON_BIN_ID
			   JOIN WSL_ORDER_BOM C ON C.PRODUCT_CODE=B.PRODUCT_CODE
			   JOIN WSL_ORDER_DET D ON D.ROW_ID=C.REF_ROW_ID
			   JOIN WSL_ORDER_MST E ON E.order_id=D.order_id
			   WHERE D.ORDER_ID=@CXNID AND E.Location_code/*LEFT(D.ORDER_ID,2)*//*Rohit 06-11-2024*/ = B.DEPT_ID)
	BEGIN
			SET @CCMD = N'SELECT DISTINCT C.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE PART OF STOCK RECONCILIATION'' AS ERRMSG
						  FROM STMH01106 A JOIN PMT01106 B ON A.REP_ID=B.REP_ID
						  AND B.BIN_ID=A.RECON_BIN_ID
						  JOIN WSL_ORDER_BOM C ON C.PRODUCT_CODE=B.PRODUCT_CODE
						  JOIN WSL_ORDER_DET D ON D.ROW_ID=C.REF_ROW_ID
						  WHERE D.ORDER_ID='''+@CXNID+''''		
			RETURN					
	END	       
	  
  UPDATE A   
   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )  
   FROM  PMT01106 A
   JOIN 
   (   
    SELECT BOP.PRODUCT_CODE,  BOM.Location_code/*BOM.DEPT_ID*//*Rohit 06-11-2024*/ AS DEPT_ID
       ,SUM(BOP.CONS_QTY_PER_PICE*POD.QUANTITY) AS QUANTITY  
    FROM POM01106 POM  
    JOIN POD01106 POD ON POM.PO_ID=POD.PO_ID  
    JOIN WSL_ORDER_DET BOD ON POD.WOD_ROW_ID=BOD.ROW_ID  
    JOIN WSL_ORDER_MST BOM ON BOD.ORDER_ID=BOM.ORDER_ID  
    JOIN WSL_ORDER_BOM BOP ON BOD.ROW_ID=BOP.REF_ROW_ID  
    WHERE POM.PO_ID=@CXNID AND BOP.PRODUCT_CODE<>''  
    GROUP BY BOP.PRODUCT_CODE,BOM.Location_code/*BOM.DEPT_ID*//*Rohit 06-11-2024*/ 
   ) B  ON A.PRODUCT_CODE = B.PRODUCT_CODE   
   AND A.DEPT_ID = B.DEPT_ID  
  
  SET @NRETVAL = 1  --*** SUCCESS  
    
  SELECT @BCANCELLED=CANCELLED,@CUSERCODE=USER_CODE FROM POM01106 WHERE PO_ID=@CXNID  
  
  ---NEGATIVE STOCK SHOULD NOT BE ALLOWED FOR SUPER USER
  --IF @CUSERCODE='0000000'
		--SET @NALLOWNEGSTOCK=0
    
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
  IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0) OR @BCANCELLED=1   
  BEGIN  
   --PRINT 'CHECKING FOR NEGATIVE STOCK'  
   IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A JOIN  
      (  
      SELECT BOP.PRODUCT_CODE,BOM.Location_code/*BOM.DEPT_ID*//*Rohit 06-11-2024*/ AS DEPT_ID
            ,SUM(BOP.CONS_QTY_PER_PICE*POD.QUANTITY) AS QUANTITY  
      FROM POM01106 POM  
      JOIN POD01106 POD ON POM.PO_ID=POD.PO_ID  
      JOIN WSL_ORDER_DET BOD ON POD.WOD_ROW_ID=BOD.ROW_ID  
      JOIN WSL_ORDER_MST BOM ON BOD.ORDER_ID=BOM.ORDER_ID  
      JOIN WSL_ORDER_BOM BOP ON BOD.ROW_ID=BOP.REF_ROW_ID  
      JOIN SKU D ON BOP.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE POM.PO_ID=@CXNID AND E.STOCK_NA=0  
      GROUP BY BOP.PRODUCT_CODE,BOM.Location_code/*BOM.DEPT_ID*//*Rohit 06-11-2024*/ 
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  
      WHERE A.QUANTITY_IN_STOCK < 0)  
   BEGIN  
    SET @NRETVAL = 0  --*** UNSUCCESS  
    SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A  JOIN  
      (SELECT BOP.PRODUCT_CODE,BOM.Location_code/*BOM.DEPT_ID*//*Rohit 06-11-2024*/ DEPT_ID  
            ,SUM(BOP.CONS_QTY_PER_PICE*POD.QUANTITY) AS QUANTITY  
      FROM POM01106 POM  
      JOIN POD01106 POD ON POM.PO_ID=POD.PO_ID  
      JOIN WSL_ORDER_DET BOD ON POD.WOD_ROW_ID=BOD.ROW_ID  
      JOIN WSL_ORDER_MST BOM ON BOD.ORDER_ID=BOM.ORDER_ID  
      JOIN WSL_ORDER_BOM BOP ON BOD.ROW_ID=BOP.REF_ROW_ID  
      JOIN SKU D ON BOP.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE POM.PO_ID='''+@CXNID+''' AND E.STOCK_NA=0  
      GROUP BY BOP.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  
      WHERE A.QUANTITY_IN_STOCK < 0 '  
   END  
  END   
 END   -- END OF LABEL BUYER'S ORDER  
   
IF @CXNTYPE IN ('CHO')  -- CHALLAN OUT / INTERFLOOR CHALLAN  
 BEGIN  
  IF @NREVERTFLAG = 1  
   SET @NOUTFLAG = -1  
  ELSE  
   SET @NOUTFLAG = 1  

	
	IF EXISTS (SELECT TOP 1 A.MEMO_ID FROM STMH01106 A JOIN PMT01106 B ON A.REP_ID=B.REP_ID
			   AND B.BIN_ID=A.RECON_BIN_ID
			   JOIN FLOOR_ST_DET C ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.ITEM_TARGET_BIN_ID=B.BIN_ID
			   WHERE C.MEMO_ID=@CXNID)
	BEGIN
			SET @CCMD = N'SELECT DISTINCT ''CHO'' AS XN_TYPE,D.MEMO_NO,C.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE PART OF STOCK RECONCILIATION'' AS ERRMSG
						  FROM STMH01106 A JOIN PMT01106 B ON A.REP_ID=B.REP_ID
						  AND B.BIN_ID=A.RECON_BIN_ID
						  JOIN FLOOR_ST_DET C ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.ITEM_TARGET_BIN_ID=B.BIN_ID
						  JOIN FLOOR_ST_MST D ON D.MEMO_ID=C.MEMO_ID
						  WHERE C.MEMO_ID='''+@CXNID+''''		
			RETURN					
	END		       
  
  
  IF @NUPDATEMODE<>6  
  BEGIN  
  --*** UPDATING THE QUANTITY IN STOCK FROM PMT FOR THE GIVEN MEMO  
	UPDATE A   
   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )  
   FROM  PMT01106 A
   JOIN 
   ( SELECT B.PRODUCT_CODE,A.Location_code/*LEFT(a.MEMO_ID,2)*//*Rohit 06-11-2024*/  AS DEPT_ID, B.SOURCE_BIN_ID AS BIN_ID, SUM(QUANTITY) AS QUANTITY   
    FROM FLOOR_ST_DET  B  
    JOIN FLOOR_ST_MST A ON A.MEMO_ID=B.MEMO_ID  
    WHERE B.MEMO_ID = @CXNID   
    GROUP BY B.PRODUCT_CODE, B.SOURCE_BIN_ID  ,A.Location_code/*LEFT(a.MEMO_ID,2)*//*Rohit 06-11-2024*/ 
   ) B ON A.PRODUCT_CODE = B.PRODUCT_CODE   
   AND A.BIN_ID = B.BIN_ID  
   AND A.DEPT_ID =B.DEPT_ID 
     
   ---CASE OF CANCEL  
   IF @NUPDATEMODE=3  
   BEGIN  
    IF NOT EXISTS(SELECT TOP 1 'U' FROM FLOOR_ST_MST WHERE MEMO_ID=@CXNID AND ISNULL(RECEIPT_DT,'')='')  
    BEGIN
    
     UPDATE A  SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK + ( @NOUTFLAG * B.QUANTITY )  
	   FROM  PMT01106 A
	   JOIN 
		( SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(c.MEMO_ID,2)*//*Rohit 06-11-2024*/  AS DEPT_ID,B.ITEM_TARGET_BIN_ID AS BIN_ID, SUM(QUANTITY) AS QUANTITY   
		 FROM FLOOR_ST_DET B  
		 JOIN FLOOR_ST_MST C ON B.MEMO_ID = C.MEMO_ID   
		 WHERE B.MEMO_ID = @CXNID  
		 GROUP BY B.PRODUCT_CODE,B.ITEM_TARGET_BIN_ID,C.Location_code/*LEFT(c.MEMO_ID,2)*//*Rohit 06-11-2024*/ 
		) B ON A.PRODUCT_CODE = B.PRODUCT_CODE   
		AND A.BIN_ID =B.BIN_ID 
		AND A.DEPT_ID=B.DEPT_ID 
      
    
     END   
   END  
 END 
 
 

   IF @NUPDATEMODE  IN (1,2,5, 6 )
  BEGIN  
         
	INSERT PMT01106 ( PRODUCT_CODE, QUANTITY_IN_STOCK, DEPT_ID, BIN_ID ) --PHYSICAL_QTY, EXCESS_QTY,
	SELECT DISTINCT A.PRODUCT_CODE, 0 AS QUANTITY_IN_STOCK, B.Location_code/*LEFT(@CXNID,2)*//*Rohit 06-11-2024*/  AS DEPT_ID,   
			--0 AS PHYSICAL_QTY,0 AS EXCESS_QTY,
			  A.ITEM_TARGET_BIN_ID AS BIN_ID
	FROM FLOOR_ST_DET  A
	JOIN  FLOOR_ST_MST B ON A.MEMO_ID = B.MEMO_ID 
	LEFT OUTER JOIN PMT01106 PMT ON PMT.PRODUCT_CODE=A.PRODUCT_CODE AND PMT.BIN_ID= A.ITEM_TARGET_BIN_ID 
	AND B.Location_code/*LEFT(A.MEMO_ID,2)*//*Rohit 06-11-2024*/ =PMT.DEPT_ID 
	WHERE PMT.PRODUCT_CODE IS NULL AND B.MEMO_ID = @CXNID
	

    -- NOW UPDATE THE PMT STOCK WITH THE CHALLAN STOCK  
	UPDATE A SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK + ( @NOUTFLAG * B.QUANTITY )  
	FROM  PMT01106 A
	JOIN 
	( 
		SELECT B.PRODUCT_CODE,C.Location_code/*LEFT(C.MEMO_ID,2)*//*Rohit 06-11-2024*/  AS [DEPT_ID],  B.ITEM_TARGET_BIN_ID AS BIN_ID, SUM(QUANTITY) AS QUANTITY   
		FROM FLOOR_ST_DET B  
		JOIN FLOOR_ST_MST C ON B.MEMO_ID = C.MEMO_ID   
		WHERE B.MEMO_ID = @CXNID  AND ISNULL(RECEIPT_DT,'')<>''
		GROUP BY B.PRODUCT_CODE,C.Location_code/*LEFT(C.MEMO_ID,2)*//*Rohit 06-11-2024*/ , B.ITEM_TARGET_BIN_ID  
	) B ON A.PRODUCT_CODE = B.PRODUCT_CODE   AND A.DEPT_ID=B.DEPT_ID AND A.BIN_ID=B.BIN_ID
      
  
 
  
END            
 
 
  
  
  SET @NRETVAL = 1  --*** SUCCESS  
  
  --PRINT 'START CHECKING FOR NEGATIVE STOCK'  
  
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
  IF ((@NCHKDELBARCODES=1) AND  @NALLOWNEGSTOCK = 0 )  
  BEGIN  
   PRINT 'CHECKING FOR NEGATIVE STOCK'  
   IF EXISTS ( SELECT A.PRODUCT_CODE   
      FROM PMT01106 A   
      JOIN FLOOR_ST_DET B ON A.PRODUCT_CODE = B.PRODUCT_CODE /*AND LEFT(B.MEMO_ID,2)=A.DEPT_ID*//*Rohit 06-11-2024*/   
      JOIN FLOOR_ST_MST C ON B.MEMO_ID = C.MEMO_ID   
      WHERE B.MEMO_ID = @CXNID   
      AND (A.BIN_ID = B.SOURCE_BIN_ID) --OR A.BIN_ID = C.TARGET_BIN_ID)  
	  AND C.Location_code/*Rohit 06-11-2024*/=A.DEPT_ID
      AND A.QUANTITY_IN_STOCK < 0   
       )  
   BEGIN  
    --PRINT 'NEGATIVE STOCK FOUND...'  
  
    SET @NRETVAL = 0  --*** UNSUCCESS  
  
    SET @CCMD = N'SELECT DISTINCT ''CHO'' AS XN_TYPE,C.MEMO_NO,A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG
       FROM PMT01106 A   
      JOIN FLOOR_ST_DET B ON A.PRODUCT_CODE = B.PRODUCT_CODE   /*AND LEFT(B.MEMO_ID,2)=A.DEPT_ID*//*Rohit 06-11-2024*/    
      JOIN FLOOR_ST_MST C ON B.MEMO_ID = C.MEMO_ID   
        AND (A.BIN_ID =B.SOURCE_BIN_ID ) AND C.Location_code/*Rohit 06-11-2024*/=A.DEPT_ID
      WHERE B.MEMO_ID = ''' + @CXNID + '''  
      AND A.QUANTITY_IN_STOCK < 0'  
        
    PRINT 'INSIDE DCO CODE...'  
    PRINT @CCMD  
   END  
  END   
 END  --  END OF CHALLAN_OUT  
 
IF @CXNTYPE IN ('CON')   
 BEGIN  
  IF @NREVERTFLAG = 1  
   SET @NOUTFLAG = -1  
  ELSE  
   SET @NOUTFLAG = 1  

 	IF EXISTS (SELECT TOP 1 A.MEMO_ID FROM STMH01106 A JOIN PMT01106 B ON A.REP_ID=B.REP_ID
			   AND B.BIN_ID=A.RECON_BIN_ID
			   JOIN CON_CONSUMPTION_DET C ON C.PRODUCT_CODE=B.PRODUCT_CODE 
			   WHERE C.MEMO_ID=@CXNID AND LEFT(C.MEMO_ID,2)= B.DEPT_ID)
	BEGIN
			SET @CCMD = N'SELECT DISTINCT C.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE PART OF STOCK RECONCILIATION'' AS ERRMSG
						  FROM STMH01106 A JOIN PMT01106 B ON A.REP_ID=B.REP_ID
						  AND B.BIN_ID=A.RECON_BIN_ID
						  JOIN CON_CONSUMPTION_DET C ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.BIN_ID=B.BIN_ID
						  WHERE C.MEMO_ID='''+@CXNID+''''		
			RETURN					
	END	 
	
	  SELECT B.PRODUCT_CODE,LEFT( C.MEMO_ID,2) AS DEPT_ID,SUM(B.QUANTITY) AS QUANTITY   
		FROM CON_CONSUMPTION_DET B  
		JOIN CON_CONSUMPTION_MST C ON C.MEMO_ID=B.MEMO_ID  
		JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE  
		JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE  
		WHERE B.MEMO_ID = @CXNID  AND E.STOCK_NA=0  
		GROUP BY B.PRODUCT_CODE,LEFT( C.MEMO_ID,2)  
	   
	
  UPDATE A   
   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )  
	FROM  PMT01106 A
   JOIN 
   ( 
	    SELECT B.PRODUCT_CODE,LEFT( C.MEMO_ID,2) AS DEPT_ID,SUM(B.QUANTITY) AS QUANTITY   
		FROM CON_CONSUMPTION_DET B  
		JOIN CON_CONSUMPTION_MST C ON C.MEMO_ID=B.MEMO_ID  
		JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE  
		JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE  
		WHERE B.MEMO_ID = @CXNID  AND E.STOCK_NA=0  
		GROUP BY B.PRODUCT_CODE,LEFT( C.MEMO_ID,2) 
   ) B  ON A.PRODUCT_CODE = B.PRODUCT_CODE   
   AND A.DEPT_ID = B.DEPT_ID  
  
  
  SET @NRETVAL = 1  --*** SUCCESS  
  
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
  --AND D.STOCK_NA=0 )  
  
  SELECT @BCANCELLED=CANCELLED,@CUSERCODE=USER_CODE FROM CON_CONSUMPTION_MST WHERE MEMO_ID=@CXNID  
  
	---NEGATIVE STOCK SHOULD NOT BE ALLOWED FOR SUPER USER
	--IF @CUSERCODE='0000000'
	--	SET @NALLOWNEGSTOCK=0
    
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
  IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1  
  BEGIN  
   IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A JOIN  
      (SELECT B.PRODUCT_CODE,LEFT( C.MEMO_ID,2) AS DEPT_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM CON_CONSUMPTION_DET B  
      JOIN CON_CONSUMPTION_MST C ON C.MEMO_ID=B.MEMO_ID  
      JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0  
      GROUP BY B.PRODUCT_CODE,LEFT( C.MEMO_ID,2)  
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID 
      WHERE A.QUANTITY_IN_STOCK < 0)  
   BEGIN  
    SET @NRETVAL = 0  --*** UNSUCCESS  
  
    SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A  JOIN  
				  (
					  SELECT B.PRODUCT_CODE,LEFT( C.MEMO_ID,2) AS DEPT_ID,SUM(B.QUANTITY) AS QUANTITY   
					  FROM CON_CONSUMPTION_DET B  
					  JOIN CON_CONSUMPTION_MST C ON C.MEMO_ID=B.MEMO_ID  
					  JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE  
					  JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE  
					  WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0  
					  GROUP BY B.PRODUCT_CODE,LEFT( C.MEMO_ID,2)
				  ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE 
				  AND B.DEPT_ID=A.DEPT_ID  
				  WHERE A.QUANTITY_IN_STOCK < 0 '  
   END  
    --PRINT @CCMD  
  END   
 END  --  END OF CONSUMPTION 
 
 PRINT ' NOW CHECK FINAL STOCK'+STR(@NUPDATEMODE)  
   
END_PROC:  
   
END
