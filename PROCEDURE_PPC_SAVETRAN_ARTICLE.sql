CREATE PROCEDURE PPC_SAVETRAN_ARTICLE
(
	 @NUPDATEMODE	NUMERIC(1,0)/*1: ADD MODE, 2 : EDIT MODE*/,  
	 @NSPID			INT=0,  
	 @CLOC_ID VARCHAR(2),
	 @NINSERJOBS INT=0,
	 @CARTICLE_CODE VARCHAR(10)=''
)
----WITH ENCRYPTION
AS
BEGIN
DECLARE @CERRMSG VARCHAR(500),@CSTEP VARCHAR(10)
	   ,@CCMD NVARCHAR(MAX),@CNEWARTICLE_CODE VARCHAR(10),@BREFEXISTS BIT

DECLARE @TOUTPUT TABLE(ARTICLE_CODE VARCHAR(50),ERRMSG VARCHAR(500))

---LIST OF TABLES TO SAVE
DECLARE @TARTICLE VARCHAR(100),@TART_PARA1 VARCHAR(100),@TART_DET VARCHAR(100),@TART_DETSIZEGROUP VARCHAR(100),@TART_JOBS VARCHAR(100)
--,@TSKU VARCHAR(100)
SET @CERRMSG=''

SET @TARTICLE='ART_ARTICLE_UPLOAD'
SET @TART_PARA1='ART_ART_PARA1_UPLOAD'
SET @TART_DET='ART_ART_DET_UPLOAD'
SET @TART_DETSIZEGROUP='ART_PPC_ART_DET_SIZEGROUP_UPLOAD'
SET @TART_JOBS='ART_ART_JOBS_UPLOAD'


DECLARE @FILTER VARCHAR(MAX)
SET @FILTER=' B.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''

 IF @CLOC_ID=''
 SELECT TOP 1  @CLOC_ID=VALUE  FROM CONFIG  WHERE CONFIG_OPTION='LOCATION_ID'
     

BEGIN TRY
BEGIN TRANSACTION
		   SET @CSTEP=10
	
	IF @NUPDATEMODE=0
	BEGIN
	IF NOT EXISTS (SELECT TOP 1 'U' FROM PPC_BUYER_ORDER_DET WHERE ARTICLE_CODE =@CARTICLE_CODE )
	BEGIN
	   DELETE  FROM ART_JOBS WHERE ARTICLE_CODE=@CARTICLE_CODE
	   DELETE  FROM PPC_ART_DET_SIZEGROUP WHERE ARTICLE_CODE=@CARTICLE_CODE
	   DELETE  FROM ART_DET WHERE ARTICLE_CODE=@CARTICLE_CODE
	   DELETE  FROM ART_PARA1 WHERE ARTICLE_CODE=@CARTICLE_CODE
	   DELETE  FROM ARTICLE WHERE ARTICLE_CODE=@CARTICLE_CODE
	   GOTO END_PROC
	END	  
	ELSE
	BEGIN
	   SET @CERRMSG='ARTICLE USED IN TRANSACTION PLEASE CHECK'
	   GOTO END_PROC
	END 
	END
	
	
	IF @NINSERJOBS=1
	   GOTO INSERTARTJOBS
	
			SET @CSTEP=20
			--VALIDATION FOR BLANK ARTICLE_NO
			SET @CCMD=N'IF EXISTS(SELECT TOP 1 ''U'' FROM '+@TARTICLE+' WHERE ISNULL(ARTICLE_NO,'''')='''' AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
					         SET @CERRMSG=''ARTICLE NO CANNOT BE BLANK.'' '
			PRINT @CCMD					        
			EXEC SP_EXECUTESQL @CCMD,N'@CERRMSG VARCHAR(500) OUTPUT',@CERRMSG OUTPUT
			
			IF ISNULL(@CERRMSG,'')<>''
				GOTO END_PROC
			
			SET @CSTEP=30
			--VALIDATION FOR UNIQUE ARTICLE_NO
			SET @CCMD=N'IF EXISTS(SELECT TOP 1 ''U'' FROM '+@TARTICLE+' A JOIN ARTICLE B ON A.ARTICLE_NO=B.ARTICLE_NO
								  WHERE A.ARTICLE_CODE<>B.ARTICLE_CODE AND  A.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
					        SET @CERRMSG=''ARTICLE NO ALREADY EXISTS.'' '
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD,N'@CERRMSG VARCHAR(500) OUTPUT',@CERRMSG OUTPUT
			IF ISNULL(@CERRMSG,'')<>''
				GOTO END_PROC
				
			SET @CSTEP=40
			--VALIDATION FOR UNIQUE ALIAS
			SET @CCMD=N'IF EXISTS(SELECT TOP 1 ''U'' FROM '+@TARTICLE+' A JOIN ARTICLE B ON A.ALIAS=B.ALIAS 
								  WHERE ISNULL(A.ALIAS,'''')<>'''' AND A.ARTICLE_CODE<>B.ARTICLE_CODE AND A.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
					        SET @CERRMSG=''ARTICLE ALIAS IS ALREADY USED BY ANOTHER ARTICLE.'' '
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD,N'@CERRMSG VARCHAR(500) OUTPUT',@CERRMSG OUTPUT	
			
			IF ISNULL(@CERRMSG,'')<>''
				GOTO END_PROC
			
			SET @CSTEP=50
			--VALIDATION OF VALID UOM
			SET @CCMD=N'IF EXISTS(SELECT TOP 1 ''U'' FROM '+@TARTICLE+' A LEFT JOIN UOM B ON A.UOM_CODE=B.UOM_CODE
								  WHERE B.UOM_CODE IS NULL AND A.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
					       SET @CERRMSG=''INVALID UOM FOR THE ARTICLE.'' '
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD,N'@CERRMSG VARCHAR(500) OUTPUT',@CERRMSG OUTPUT	
			
			IF ISNULL(@CERRMSG,'')<>''
				GOTO END_PROC
				
			SET @CSTEP=60
			--VALIDATION OF VALID SUB SECTION
			SET @CCMD=N'IF EXISTS(SELECT TOP 1 ''U'' FROM '+@TARTICLE+' A LEFT JOIN SECTIOND B ON A.SUB_SECTION_CODE=B.SUB_SECTION_CODE
								  WHERE B.SUB_SECTION_CODE IS NULL AND A.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
					        SET @CERRMSG=''INVALID SUB SECTION FOR THE ARTICLE.'' '
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD,N'@CERRMSG VARCHAR(500) OUTPUT',@CERRMSG OUTPUT	
			
			IF ISNULL(@CERRMSG,'')<>''
				GOTO END_PROC	
				
			/*VALIDATIONS ON ART_PARA1
				**PARA1_CODE SHOULD EXISTS IN COLOR MASTER	
			*/
			SET @CSTEP=80
			--VALIDATION ON PARA1_CODE OF ART_PARA1
			SET @CCMD=N'IF EXISTS(SELECT TOP 1 ''U'' FROM '+@TART_PARA1+' A LEFT JOIN PARA1 B ON A.PARA1_CODE=B.PARA1_CODE
								  WHERE B.PARA1_CODE IS NULL AND A.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
					        SET @CERRMSG=''INVALID COLOR ASSIGNED TO THE ARTICLE.'' '
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD,N'@CERRMSG VARCHAR(500) OUTPUT',@CERRMSG OUTPUT	
			
			IF ISNULL(@CERRMSG,'')<>''
				GOTO END_PROC		
			
			/*VALIDATION ON ART_DET
				**PARA2_CODE SHOULD EXISTS IN SIZE MASTER
			*/
			SET @CSTEP=90
			--VALIDATION ON PARA2_CODE OF ART_DET
			SET @CCMD=N'IF EXISTS(SELECT TOP 1 ''U'' FROM '+@TART_DETSIZEGROUP+' A LEFT JOIN PPC_SIZEGROUP B ON A.SIZEGROUP_CODE=B.SIZEGROUP_CODE
								  WHERE B.SIZEGROUP_CODE IS NULL AND A.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''')
					        SET @CERRMSG=''INVALID SIZE GROUP TO THE ARTICLE.'' '
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD,N'@CERRMSG VARCHAR(500) OUTPUT',@CERRMSG OUTPUT	
			
			IF ISNULL(@CERRMSG,'')<>''
				GOTO END_PROC		
						
			SET @CSTEP=100	
			--START OF GENERATION OF NEW ARTICLE CODE
    

	IF @NUPDATEMODE=1 --NEW ARTICLE BEING ADDED
	BEGIN
			PRINT 'NEW ARTICLE BEING ADDED'
			
			SET @CSTEP=150
			LBL_GENARTKEY:
			EXEC GETNEXTKEY @CTABLENAME='ARTICLE'
							,@CCOLNAME='ARTICLE_CODE'
							,@NWIDTH='9'
							,@CPREFIX=@CLOC_ID 
							,@NLZEROS=1
							,@CFINYEAR=''
							,@NROWCOUNT=0
							,@CNEWKEYVAL=@CNEWARTICLE_CODE OUTPUT	
			
			IF ISNULL(@CNEWARTICLE_CODE,'')=''	
			BEGIN	
				SET @CERRMSG='ERROR GENERATING ARTICLE CODE.'
				GOTO END_PROC
			END	
			
			SET @CSTEP=160				
			IF EXISTS(SELECT TOP 1 'U' FROM ARTICLE WHERE ARTICLE_CODE=@CNEWARTICLE_CODE)
				GOTO LBL_GENARTKEY
			
			---UPDATE THE ARTICLE_CODE IN ALL TEMP TABLES
			SET @CSTEP=170
			---UPDATING ARTICLE_CODE IN ARTICLE
			SET @CCMD=N'UPDATE '+@TARTICLE+' SET ARTICLE_CODE='''+@CNEWARTICLE_CODE+''' WHERE LEFT(ARTICLE_CODE,5)=''LATER'' AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD 
			
			SET @CSTEP=180
			---UPDATING ARTICLE_CODE ART_PARA1
			SET @CCMD=N'UPDATE '+@TART_PARA1+' SET ARTICLE_CODE='''+@CNEWARTICLE_CODE+''',ROW_ID='''+@CLOC_ID+'''+CONVERT(VARCHAR(40),NEWID()) WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD 
			
			SET @CSTEP=190
			---UPDATING ARTICLE_CODE ART_DET
			SET @CCMD=N'UPDATE '+@TART_DET+' SET ARTICLE_CODE='''+@CNEWARTICLE_CODE+''',ROW_ID='''+@CLOC_ID+'''+CONVERT(VARCHAR(40),NEWID()),PARA2_CODE=''0000000'' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD 
			
			
			SET @CSTEP=200
			---UPDATING ARTICLE_CODE ART_DET
			SET @CCMD=N'UPDATE '+@TART_DETSIZEGROUP+' SET ARTICLE_CODE='''+@CNEWARTICLE_CODE+''',ROW_ID='''+@CLOC_ID+'''+CONVERT(VARCHAR(40),NEWID()) WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD 
			
					
	END
	ELSE
	BEGIN --CASE OF EDIT 
		    PRINT 'ARTICLE BEING UPDATED'
			SET @CCMD=N'SELECT @CNEWARTICLE_CODE=ARTICLE_CODE FROM '+@TARTICLE +' WHERE  SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD,N'@CNEWARTICLE_CODE VARCHAR(10) OUTPUT',@CNEWARTICLE_CODE OUTPUT
			
			SET @CSTEP=210
			---UPDATING LAST_UPDATE IN ARTICLE
			SET @CCMD=N'UPDATE '+@TARTICLE+' SET LAST_UPDATE=GETDATE() WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD 
		
			SET @CSTEP=220
			---UPDATING ROW_ID FOR NEW COLORS IN ART_PARA1
			SET @CCMD=N'UPDATE '+@TART_PARA1+' SET ARTICLE_CODE='''+@CNEWARTICLE_CODE+''',ROW_ID='''+@CLOC_ID+'''+CONVERT(VARCHAR(40),NEWID()) WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD 
			
			SET @CSTEP=230
			---UPDATING ROW_ID IN ART_DET
			---UPDATING ARTICLE_CODE ART_DET
			SET @CCMD=N'UPDATE '+@TART_DET+' SET ARTICLE_CODE='''+@CNEWARTICLE_CODE+''',ROW_ID='''+@CLOC_ID+'''+CONVERT(VARCHAR(40),NEWID()),PARA2_CODE=''0000000'' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD 
			
			SET @CSTEP=240
			---GET THE ARTICLE_CODE OF MODIFIED ARTICLE
			
			---UPDATING ARTICLE_CODE ART_DET
			SET @CCMD=N'UPDATE '+@TART_DETSIZEGROUP+' SET ARTICLE_CODE='''+@CNEWARTICLE_CODE+''',ROW_ID='''+@CLOC_ID+'''+CONVERT(VARCHAR(40),NEWID()) WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD 
			
			SET @CSTEP=250
			--DELETE THE EXISTING RECORD FOR THIS ARTICLE IN ART_PARA1 AND ART_PARA2
			DELETE ART_PARA1 WHERE ARTICLE_CODE=@CNEWARTICLE_CODE
			DELETE ART_DET WHERE ARTICLE_CODE=@CNEWARTICLE_CODE
			DELETE PPC_ART_DET_SIZEGROUP WHERE ARTICLE_CODE=@CNEWARTICLE_CODE
			--DELETE PPC_ART_BOM WHERE ARTICLE_CODE=@CNEWARTICLE_CODE
	END
	
	
	--IN CASE OF NO ANY SIZEGROUP DELETE SIZEGROUP PARA2 RECORD IN TEMP TABLE
	
	DELETE A FROM ART_PPC_ART_DET_SIZEGROUP_UPLOAD  A
	LEFT JOIN ART_ART_DET_UPLOAD B ON A.SP_ID=B.SP_ID AND A.ARTICLE_CODE=B.ARTICLE_CODE
	WHERE A.SP_ID=LTRIM(RTRIM(STR(@NSPID))) AND  B.ARTICLE_CODE IS NULL
	
	
	
	DELETE A FROM PPC_ART_BOM  A
	LEFT JOIN ART_PPC_ART_DET_SIZEGROUP_UPLOAD B ON A.BOM_SIZEGROUP_CODE=B.SIZEGROUP_CODE  
	AND A.ARTICLE_CODE =B.ARTICLE_CODE AND B.SP_ID=LTRIM(RTRIM(STR(@NSPID)))
	WHERE A.ARTICLE_CODE =@CNEWARTICLE_CODE AND 
	B.SIZEGROUP_CODE IS NULL
	
	
	
	SET @CSTEP=260
	--UPDATING ARTICLE MASTER
	EXEC UPDATEMASTERXN 
			 @CSOURCEDB=''
			,@CSOURCETABLE=@TARTICLE
			,@CDESTDB=''
			,@CDESTTABLE='ARTICLE'
			,@CKEYFIELD1='ARTICLE_CODE'
			,@CKEYFIELD2=''
			,@CKEYFIELD3=''
			,@LINSERTONLY=0
			,@CFILTERCONDITION=@FILTER
			,@LUPDATEXNS=0
			,@CXNTYPE=''
			,@LUPDATEONLY=0
			,@CUSERID=''
			,@BALWAYSUPDATE=0
			
	
	SET @CSTEP=270		
	--UPDATING ART_PARA1
	EXEC UPDATEMASTERXN 
			 @CSOURCEDB=''
			,@CSOURCETABLE=@TART_PARA1
			,@CDESTDB=''
			,@CDESTTABLE='ART_PARA1'
			,@CKEYFIELD1='ARTICLE_CODE'
			,@CKEYFIELD2=''
			,@CKEYFIELD3=''
			,@LINSERTONLY=0
			,@CFILTERCONDITION=@FILTER
			,@LUPDATEXNS=0
			,@CXNTYPE=''
			,@LUPDATEONLY=0
			,@CUSERID=''
			,@BALWAYSUPDATE=0	
		
	SET @CSTEP=280		
	--UPDATING ART_DET
	EXEC UPDATEMASTERXN 
			 @CSOURCEDB=''
			,@CSOURCETABLE=@TART_DET
			,@CDESTDB=''
			,@CDESTTABLE='ART_DET'
			,@CKEYFIELD1='ARTICLE_CODE'
			,@CKEYFIELD2=''
			,@CKEYFIELD3=''
			,@LINSERTONLY=0
			,@CFILTERCONDITION=@FILTER
			,@LUPDATEXNS=0
			,@CXNTYPE=''
			,@LUPDATEONLY=0
			,@CUSERID=''
			,@BALWAYSUPDATE=0
			
			
	SET @CSTEP=300		
	--UPDATING ART_DET
	EXEC UPDATEMASTERXN 
			 @CSOURCEDB=''
			,@CSOURCETABLE=@TART_DETSIZEGROUP
			,@CDESTDB=''
			,@CDESTTABLE='PPC_ART_DET_SIZEGROUP'
			,@CKEYFIELD1='ARTICLE_CODE'
			,@CKEYFIELD2=''
			,@CKEYFIELD3=''
			,@LINSERTONLY=0
			,@CFILTERCONDITION=@FILTER
			,@LUPDATEXNS=0
			,@CXNTYPE=''
			,@LUPDATEONLY=0
			,@CUSERID=''
			,@BALWAYSUPDATE=1

  GOTO END_PROC

INSERTARTJOBS:
   	SET @CCMD=N'SELECT @CNEWARTICLE_CODE=ARTICLE_CODE FROM '+@TART_JOBS +' WHERE  SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD,N'@CNEWARTICLE_CODE VARCHAR(10) OUTPUT',@CNEWARTICLE_CODE OUTPUT
			
   
   --VALIDATION FOR BLANK ARTICLE_NO
	SET @CCMD=N'IF EXISTS(SELECT ARTICLE_CODE,JOB_CODE FROM '+@TART_JOBS+' WHERE   SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+'''  GROUP BY ARTICLE_CODE,JOB_CODE 
	              HAVING COUNT(*)>1)
				SET @CERRMSG=''JOB CANOT BE DULICATE.'' '
	PRINT @CCMD					        
	EXEC SP_EXECUTESQL @CCMD,N'@CERRMSG VARCHAR(500) OUTPUT',@CERRMSG OUTPUT
			
	IF ISNULL(@CERRMSG,'')<>''
		GOTO END_PROC
	
   
   SET @CCMD=N'UPDATE '+@TART_JOBS+' SET ROW_ID='''+@CLOC_ID+'''+CONVERT(VARCHAR(40),NEWID()) WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
   PRINT @CCMD
   EXEC SP_EXECUTESQL @CCMD 

   
	DELETE FROM ART_JOBS WHERE ARTICLE_CODE=@CNEWARTICLE_CODE		
   EXEC UPDATEMASTERXN 
			 @CSOURCEDB=''
			,@CSOURCETABLE=@TART_JOBS
			,@CDESTDB=''
			,@CDESTTABLE='ART_JOBS'
			,@CKEYFIELD1='ARTICLE_CODE'
			,@CKEYFIELD2=''
			,@CKEYFIELD3=''
			,@LINSERTONLY=0
			,@CFILTERCONDITION=@FILTER
			,@LUPDATEXNS=0
			,@CXNTYPE=''
			,@LUPDATEONLY=0
			,@CUSERID=''
			,@BALWAYSUPDATE=0
			
		
END TRY
BEGIN CATCH 
	SET @CERRMSG='SAVETRAN_ARTICLE: STEP - '+ISNULL(@CSTEP,'')+', MESSAGE - '+ERROR_MESSAGE() 
END CATCH

END_PROC:

IF @@TRANCOUNT>0  
 BEGIN  
  IF ISNULL(@CERRMSG,'')='' 
   COMMIT TRANSACTION  
  ELSE  
   ROLLBACK  
 END  

--DROP TEMP TABLES

IF @CERRMSG=''
BEGIN
   DELETE FROM ART_ARTICLE_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
   DELETE FROM ART_ART_PARA1_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
   DELETE FROM ART_ART_DET_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
   DELETE FROM ART_PPC_ART_DET_SIZEGROUP_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
   DELETE FROM ART_ART_JOBS_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
   
END

INSERT @TOUTPUT(ARTICLE_CODE,ERRMSG)
SELECT @CNEWARTICLE_CODE,ISNULL(@CERRMSG,'')
SELECT * FROM @TOUTPUT

END
--END OF PROCEDURE - SAVETRAN_ARTICLE
