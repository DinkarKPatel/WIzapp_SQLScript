CREATE PROC SP_XNSRECON    --(LocId 3 digit change by Sanjay:04-11-2024)
@NQUERYID INT,    
@CMEMOID VARCHAR(50)='',
@CXNTYPE VARCHAR(50),
@CLOC VARCHAR(4)='' 
AS    
  
BEGIN    
    
 DECLARE @CCMD NVARCHAR(MAX)    
    
 IF @NQUERYID=1    
  GOTO LBLPENDINGRECON      
 ELSE IF @NQUERYID=2    
  GOTO LBLRECON  
 ELSE IF @NQUERYID=3      
  GOTO LBLRECON_print 
ELSE IF @NQUERYID=4      
  GOTO LBLRECON_BOX_PRINT  
     
LBLPENDINGRECON: 
	 IF @CLOC=''
		SELECT AC_NAME AS SUPPLIER_NAME,QUANTITY,A.MRR_NO,A.INV_NO AS CHALLAN_NO,
		A.BILL_NO,A.RECEIPT_DT AS CHALLAN_DATE,A.INV_DT AS BILL_DATE 
		FROM PIM01106 A  (NOLOCK)
		JOIN (SELECT MRR_ID,SUM(QUANTITY) AS QUANTITY FROM PID01106 A (NOLOCK)
				LEFT OUTER JOIN XNRECONMEMO B ON A.MRR_ID=B.XN_ID WHERE B.XN_ID IS NULL  
				GROUP BY A.MRR_ID) C ON C.MRR_ID=A.MRR_ID
		JOIN LM01106 LM ON LM.AC_CODE=A.AC_CODE	   
		LEFT OUTER JOIN XNRECONMEMO B ON A.MRR_ID=B.XN_ID 
		WHERE B.XN_ID IS NULL
	 ELSE
		SELECT AC_NAME AS SUPPLIER_NAME,QUANTITY,A.MRR_NO,A.INV_NO AS CHALLAN_NO,
		A.BILL_NO,A.RECEIPT_DT AS CHALLAN_DATE,A.INV_DT AS BILL_DATE 
		FROM PIM01106 A  (NOLOCK)
		JOIN (SELECT MRR_ID,SUM(QUANTITY) AS QUANTITY FROM PID01106 A (NOLOCK)
				LEFT OUTER JOIN XNRECONMEMO B ON A.MRR_ID=B.XN_ID WHERE B.XN_ID IS NULL  
				GROUP BY A.MRR_ID) C ON C.MRR_ID=A.MRR_ID
		JOIN LM01106 LM ON LM.AC_CODE=A.AC_CODE	   
		LEFT OUTER JOIN XNRECONMEMO B ON A.MRR_ID=B.XN_ID 
		WHERE B.XN_ID IS NULL AND a.location_Code=@CLOC
  
             
 GOTO LAST    
    
LBLRECON: 
	IF @CXNTYPE='PUR' OR @CXNTYPE = 'PUR_PARTY'
		BEGIN
		
		  SELECT DISTINCT  AC_NAME,MRR_NO,B.INV_NO,B.RECEIPT_DT,BILL_NO,B.INV_DT
			  FROM XNRECONMEMO A (NOLOCK)
		   JOIN PIM01106 B (NOLOCK) ON A.XN_ID=B.MRR_ID
		   JOIN PID01106 PID (NOLOCK) ON PID.MRR_ID=B.MRR_ID
		   JOIN LM01106 C (NOLOCK) ON C.AC_CODE=B.AC_CODE 
		   WHERE RECON_ID=@CMEMOID
		   
		   SELECT ISNULL(A.PRODUCT_CODE,B.PRODUCT_CODE) AS PRODUCT_CODE,  
		   ISNULL(A.QUANTITY,0) AS PHYSICAL_QTY,
		   ISNULL(B.QUANTITY,0) AS PUR_QTY,  
		   
		   (CASE WHEN (ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0))>0 THEN   
		   (ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0)) ELSE 0 END) AS SHORTAGE, 
		    
		   (CASE WHEN (ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0))<0 AND
		   A.PRODUCT_CODE =ISNULL(S1.PRODUCT_CODE,'') THEN   
		   ABS(ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0)) ELSE 0 END) AS EXCESS,
		   
		   (CASE WHEN A.PRODUCT_CODE<>ISNULL(S1.PRODUCT_CODE,'')
		   THEN ISNULL(A.QUANTITY,0) ELSE 0 END) AS BARCODE_NOT_FOUND,
		   
		    S.MRP,S.SUB_SECTION_NAME,S.SECTION_NAME,S.PARA1_NAME,S.PARA2_NAME,
			S.PARA3_NAME,S.PARA4_NAME,S.PARA5_NAME,S.PARA6_NAME    
			,S.ARTICLE_NAME,S.ARTICLE_NO
		   FROM   
		   (
		    SELECT LEFT(PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',PRODUCT_CODE)-1,-1),LEN(PRODUCT_CODE ))) PRODUCT_CODE,
			SUM(QUANTITY) AS QUANTITY 
		    FROM XNRECONP (NOLOCK)
		    WHERE RECON_ID=@CMEMOID  
		 	GROUP BY LEFT(PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',PRODUCT_CODE)-1,-1),LEN(PRODUCT_CODE )))
		   )A 
		   FULL OUTER JOIN   
		   (
		    SELECT 
		    LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE ))) as product_code,	
		    SUM(QUANTITY) AS QUANTITY 
		    FROM PID01106 A (NOLOCK)
		    JOIN XNRECONMEMO B (NOLOCK) ON A.MRR_ID=B.XN_ID  
			WHERE B.RECON_ID=@CMEMOID 
			GROUP BY LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE )))
		   )B ON A.PRODUCT_CODE=B.PRODUCT_CODE  
		   LEFT JOIN SKU_NAMES S (NOLOCK) ON S.PRODUCT_CODE=B.PRODUCT_CODE
		   LEFT JOIN SKU_NAMES S1 (NOLOCK) ON S1.PRODUCT_CODE=A.PRODUCT_CODE
		   
		   
		   --JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=S.ARTICLE_CODE
		   --JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE
		   --JOIN SECTIONM SM (NOLOCK) ON SM.SECTION_CODE=SD.SECTION_CODE
		   --JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE=S.PARA1_CODE
		   --JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE=S.PARA2_CODE
		   --JOIN PARA3 P3 (NOLOCK) ON P3.PARA3_CODE=S.PARA3_CODE
		   --JOIN PARA4 P4 (NOLOCK) ON P4.PARA4_CODE=S.PARA4_CODE
		   --JOIN PARA5 P5 (NOLOCK) ON P5.PARA5_CODE=S.PARA5_CODE
		   --JOIN PARA6 P6 (NOLOCK) ON P6.PARA6_CODE=S.PARA6_CODE	
			
		
		END 
		
		------- 
	IF @CXNTYPE='WSI'
		BEGIN
		
		  SELECT DISTINCT AC_NAME, B.INV_NO AS MRR_NO,'' AS RECEIPT_DT,B.INV_NO AS BILL_NO,B.INV_DT
		  FROM XNRECONMEMO A
		   JOIN INM01106 B ON A.XN_ID=B.INV_ID
		   JOIN IND01106 PID ON PID.INV_ID=B.INV_ID
		   JOIN LM01106 C ON C.AC_CODE=B.AC_CODE WHERE RECON_ID=@CMEMOID
		   SELECT ISNULL(A.PRODUCT_CODE,B.PRODUCT_CODE) AS PRODUCT_CODE,  
		   ISNULL(A.QUANTITY,0) AS PHYSICAL_QTY,ISNULL(B.QUANTITY,0) AS PUR_QTY,  
		   
		   (CASE WHEN (ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0))>0 THEN   
		   (ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0)) ELSE 0 END) AS SHORTAGE, 
		    
		   (CASE WHEN (ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0))<0 AND
		   A.PRODUCT_CODE  =ISNULL(S1.PRODUCT_CODE,'') THEN   
		   ABS(ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0)) ELSE 0 END) AS EXCESS,
		   
		   (CASE WHEN A.PRODUCT_CODE <>ISNULL(S1.PRODUCT_CODE,'')
		   THEN ISNULL(A.QUANTITY,0) ELSE 0 END) AS BARCODE_NOT_FOUND,
		   
		    S.MRP,S1.SUB_SECTION_NAME,S1.SECTION_NAME,S1.PARA1_NAME,S1.PARA2_NAME,
			 S1.PARA3_NAME,S1.PARA4_NAME,S1.PARA5_NAME,S1.PARA6_NAME    
			 ,S1.ARTICLE_NAME,S1.ARTICLE_NO
		   FROM   
		   (
		    SELECT LEFT(PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',PRODUCT_CODE)-1,-1),LEN(PRODUCT_CODE ))) PRODUCT_CODE,
			SUM(QUANTITY) AS QUANTITY 
		    FROM XNRECONP (NOLOCK)
		    WHERE RECON_ID=@CMEMOID  
		 	GROUP BY LEFT(PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',PRODUCT_CODE)-1,-1),LEN(PRODUCT_CODE )))
		   )A 
		   FULL OUTER JOIN   
		   (
		    SELECT LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE ))) as product_code,
		    SUM(QUANTITY) AS QUANTITY 
		    FROM IND01106 A (NOLOCK)
		    JOIN XNRECONMEMO B (NOLOCK) ON A.INV_ID=B.XN_ID  
			WHERE B.RECON_ID=@CMEMOID 
			GROUP BY LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE )))
		   )B ON A.PRODUCT_CODE=B.PRODUCT_CODE  
		   LEFT JOIN SKU_NAMES S (NOLOCK) 	ON S.PRODUCT_CODE=B.PRODUCT_CODE
		   LEFT JOIN SKU_NAMES S1 (NOLOCK) 	ON S1.PRODUCT_CODE=A.PRODUCT_CODE
				--JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=S.ARTICLE_CODE
				--JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE
				--JOIN SECTIONM SM (NOLOCK) ON SM.SECTION_CODE=SD.SECTION_CODE
				--JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE=S.PARA1_CODE
				--JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE=S.PARA2_CODE
				--JOIN PARA3 P3 (NOLOCK) ON P3.PARA3_CODE=S.PARA3_CODE
				--JOIN PARA4 P4 (NOLOCK) ON P4.PARA4_CODE=S.PARA4_CODE
				--JOIN PARA5 P5 (NOLOCK) ON P5.PARA5_CODE=S.PARA5_CODE
				--JOIN PARA6 P6 (NOLOCK) ON P6.PARA6_CODE=S.PARA6_CODE	
		
		
		END 
		
	IF @CXNTYPE='WSR'
		BEGIN
		   SELECT DISTINCT AC_NAME,CN_NO AS MRR_NO,''AS INV_NO,B.RECEIPT_DT,B.MANUAL_INV_NO AS BILL_NO,CN_DT AS INV_DT
           FROM XNRECONMEMO A
		   JOIN CNM01106 B ON A.XN_ID=B.CN_ID
		   JOIN CND01106 CND ON CND.CN_ID=B.CN_ID
		   JOIN LM01106 C ON C.AC_CODE=B.AC_CODE 
		   WHERE RECON_ID=@CMEMOID
	
		SELECT U.*
		,(CASE WHEN U.PRODUCT_CODE <>ISNULL(S.PRODUCT_CODE,'') THEN ISNULL(U.PUR_QTY,0) ELSE 0 END) AS BARCODE_NOT_FOUND
		,S.MRP,S.SUB_SECTION_NAME,S.SECTION_NAME,S.PARA1_NAME,S.PARA2_NAME,S.PARA3_NAME,S.PARA4_NAME,S.PARA5_NAME,
		S.PARA6_NAME  ,s.article_no  
		FROM   
		(
		  SELECT ISNULL(B.PRODUCT_CODE,A.PRODUCT_CODE)PRODUCT_CODE,
		  ISNULL(A.QUANTITY,0)PHYSICAL_QTY
		  ,ISNULL(B.QUANTITY,0) AS PUR_QTY
		  ,CASE WHEN ISNULL(A.QUANTITY,0)<ISNULL(B.QUANTITY,0) THEN ABS(ISNULL(A.QUANTITY,0)-ISNULL(B.QUANTITY,0)) ELSE 0 END SHORTAGE
		  ,CASE WHEN ISNULL(A.QUANTITY,0)>ISNULL(B.QUANTITY,0) THEN ABS(ISNULL(A.QUANTITY,0)-ISNULL(B.QUANTITY,0)) ELSE 0 END EXCESS
		  FROM
		   (SELECT LEFT(PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',PRODUCT_CODE)-1,-1),LEN(PRODUCT_CODE ))) PRODUCT_CODE,
		   SUM(QUANTITY) AS QUANTITY FROM XNRECONP WHERE RECON_ID=@CMEMOID 
		   GROUP BY LEFT(PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',PRODUCT_CODE)-1,-1),LEN(PRODUCT_CODE )))) A
		   FULL OUTER JOIN   
		   (SELECT LEFT(PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',PRODUCT_CODE)-1,-1),LEN(PRODUCT_CODE ))) PRODUCT_CODE,
		   SUM(QUANTITY) AS QUANTITY FROM CND01106 A JOIN XNRECONMEMO B ON A.CN_ID=B.XN_ID WHERE B.RECON_ID=@CMEMOID 
		   GROUP BY LEFT(PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',PRODUCT_CODE)-1,-1),LEN(PRODUCT_CODE )))) B ON A.PRODUCT_CODE=B.PRODUCT_CODE
			
		 )U
		 LEFT OUTER JOIN sku_names  S (NOLOCK)  ON S.PRODUCT_CODE=U.PRODUCT_CODE
			
				--JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=S.ARTICLE_CODE
				--JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE
				--JOIN SECTIONM SM (NOLOCK) ON SM.SECTION_CODE=SD.SECTION_CODE
				--JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE=S.PARA1_CODE
				--JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE=S.PARA2_CODE
				--JOIN PARA3 P3 (NOLOCK) ON P3.PARA3_CODE=S.PARA3_CODE
				--JOIN PARA4 P4 (NOLOCK) ON P4.PARA4_CODE=S.PARA4_CODE
				--JOIN PARA5 P5 (NOLOCK) ON P5.PARA5_CODE=S.PARA5_CODE 
				--JOIN PARA6 P6 (NOLOCK) ON P6.PARA6_CODE=S.PARA6_CODE 
		 
		END 	
		
		
		IF @CXNTYPE='DCO'
		BEGIN
		   SELECT DISTINCT MEMO_NO AS MRR_NO,B.RECEIPT_DT,MEMO_DT AS INV_DT
           FROM XNRECONMEMO A
		   JOIN FLOOR_ST_MST B ON A.XN_ID=B.MEMO_ID
		   JOIN FLOOR_ST_DET CND ON CND.MEMO_ID=B.MEMO_ID
		   WHERE a.RECON_ID=@CMEMOID
		   SELECT ISNULL(A.PRODUCT_CODE,B.PRODUCT_CODE) AS PRODUCT_CODE,  
		   ISNULL(A.QUANTITY,0) AS PHYSICAL_QTY,ISNULL(B.QUANTITY,0) AS PUR_QTY,  
		   (CASE WHEN (ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0))>0 THEN   
		   (ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0)) ELSE 0 END) AS SHORTAGE,  
		   (CASE WHEN (ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0))<0 AND
		   A.PRODUCT_CODE  =ISNULL(S1.PRODUCT_CODE,'') THEN   
		   ABS(ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0)) ELSE 0 END) AS EXCESS,
		   
		   (CASE WHEN A.PRODUCT_CODE <>ISNULL(S1.PRODUCT_CODE,'')
		   THEN ISNULL(A.QUANTITY,0) ELSE 0 END) AS BARCODE_NOT_FOUND
		   
		   ,S.MRP,
		   S.SUB_SECTION_NAME,S.SECTION_NAME,S.PARA1_NAME,S.PARA2_NAME,
			 S.PARA3_NAME,S.PARA4_NAME,S.PARA5_NAME,S.PARA6_NAME   
		   FROM   
		   (
			SELECT LEFT(PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',PRODUCT_CODE)-1,-1),LEN(PRODUCT_CODE ))) PRODUCT_CODE,
			SUM(QUANTITY) AS QUANTITY 
			FROM XNRECONP (NOLOCK)
			WHERE RECON_ID=@CMEMOID  
		 	GROUP BY LEFT(PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',PRODUCT_CODE)-1,-1),LEN(PRODUCT_CODE )))
		 	)A
		   FULL OUTER JOIN   
		   (
			SELECT PRODUCT_CODE,SUM(QUANTITY) AS QUANTITY 
			FROM FLOOR_ST_DET A (NOLOCK)
			JOIN XNRECONMEMO  B (NOLOCK) ON A.MEMO_ID=B.XN_ID  
			WHERE B.RECON_ID=@CMEMOID 
			GROUP BY PRODUCT_CODE
		   ) B ON A.PRODUCT_CODE=B.PRODUCT_CODE
		   LEFT OUTER JOIN sku_names  S (NOLOCK)    ON S.PRODUCT_CODE=B.PRODUCT_CODE 
		   LEFT OUTER JOIN sku_names  S1 (NOLOCK)    ON S1.PRODUCT_CODE=A.PRODUCT_CODE 
			
		 
		END 	      
   
IF @CXNTYPE='PRT'      
  BEGIN      
         
  SELECT DISTINCT  AC_NAME,RM_NO AS MRR_NO,''AS INV_NO,B.RM_DT as RECEIPT_DT,'' AS BILL_NO    
   FROM XNRECONMEMO A      
   LEFT OUTER JOIN rmm01106 B ON A.XN_ID=B.rm_id      
   LEFT OUTER JOIN rmd01106 PID ON PID.MRR_ID=B.rm_id      
   LEFT OUTER JOIN LM01106 C ON C.AC_CODE=B.AC_CODE WHERE RECON_ID=@CMEMOID      
   SELECT ISNULL(A.PRODUCT_CODE,B.PRODUCT_CODE) AS PRODUCT_CODE,        
   ISNULL(A.QUANTITY,0) AS PHYSICAL_QTY,ISNULL(B.QUANTITY,0) AS PUR_QTY,        
            
   (CASE WHEN (ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0))>0 THEN         
   (ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0)) ELSE 0 END) AS SHORTAGE,       
             
   (CASE WHEN (ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0))<0 AND      
   A.PRODUCT_CODE  =ISNULL(S1.PRODUCT_CODE,'') THEN         
   ABS(ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0)) ELSE 0 END) AS EXCESS,      
            
   (CASE WHEN A.PRODUCT_CODE <>ISNULL(S1.PRODUCT_CODE,'')      
   THEN ISNULL(A.QUANTITY,0) ELSE 0 END) AS BARCODE_NOT_FOUND,      
            
    S.MRP,S.SUB_SECTION_NAME,S.SECTION_NAME,S.PARA1_NAME,S.PARA2_NAME,      
    S.PARA3_NAME,S.PARA4_NAME,S.PARA5_NAME,S.PARA6_NAME          
   ,S.ARTICLE_NAME,S.ARTICLE_NO      
   FROM         
   (      
    SELECT LEFT(PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',PRODUCT_CODE)-1,-1),LEN(PRODUCT_CODE ))) PRODUCT_CODE,
	SUM(QUANTITY) AS QUANTITY       
    FROM XNRECONP (NOLOCK)      
    WHERE RECON_ID=@CMEMOID        
    GROUP BY LEFT(PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',PRODUCT_CODE)-1,-1),LEN(PRODUCT_CODE )))      
   )A       
   FULL OUTER JOIN         
   (      
    SELECT LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE ))) as product_code,
    SUM(QUANTITY) AS QUANTITY       
    FROM rmd01106 A (NOLOCK)      
    JOIN XNRECONMEMO B (NOLOCK) ON A.rm_id=B.XN_ID        
    WHERE B.RECON_ID=@CMEMOID       
    GROUP BY LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE )))     
   )B ON A.PRODUCT_CODE=B.PRODUCT_CODE        
         
   LEFT JOIN sku_names  S (NOLOCK)   ON S.PRODUCT_CODE=B.PRODUCT_CODE 
   LEFT JOIN sku_names  S1 (NOLOCK)   ON S1.PRODUCT_CODE=A.PRODUCT_CODE         
   where not ((CASE WHEN (ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0))>0 THEN         
   (ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0)) ELSE 0 END)=0 and
   (CASE WHEN (ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0))<0 AND      
   A.PRODUCT_CODE  =ISNULL(S1.PRODUCT_CODE,'') THEN         
   ABS(ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0)) ELSE 0 END) =0)


         
   END   
	    
	  -------   
      
  GOTO LAST    
  
   
  LBLRECON_print:
 
    SELECT distinct b.mrr_id ,  AC_NAME,MRR_NO,B.INV_NO,B.RECEIPT_DT,BILL_NO,B.INV_DT  
     FROM XNRECONMEMO A (NOLOCK)  
     JOIN PIM01106 B (NOLOCK) ON A.XN_ID=B.MRR_ID  
     JOIN PID01106 PID (NOLOCK) ON PID.MRR_ID=B.MRR_ID  
     JOIN LM01106 C (NOLOCK) ON C.AC_CODE=B.AC_CODE   
     WHERE RECON_ID=@CMEMOID  
       
     SELECT b.mrr_id,b.INV_NO ,b.INV_DT,B.MRR_NO ,B.MRR_DT ,
    -- ISNULL(A.PRODUCT_CODE,B.PRODUCT_CODE) AS PRODUCT_CODE,    
     sum(ISNULL(A.QUANTITY,0)) AS PHYSICAL_QTY,  
     sum(ISNULL(B.QUANTITY,0)) AS PUR_QTY,    
       
     sum((CASE WHEN (ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0))>0 THEN     
     (ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0)) ELSE 0 END)) AS SHORTAGE,   
        
     sum((CASE WHEN (ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0))<0 AND  
     A.PRODUCT_CODE =ISNULL(S1.PRODUCT_CODE,'') THEN     
     ABS(ISNULL(B.QUANTITY,0)-ISNULL(A.QUANTITY,0)) ELSE 0 END)) AS EXCESS,  
       
     sum((CASE WHEN A.PRODUCT_CODE<>ISNULL(S1.PRODUCT_CODE,'')  
     THEN ISNULL(A.QUANTITY,0) ELSE 0 END)) AS BARCODE_NOT_FOUND  
     FROM     
     (  
      SELECT PRODUCT_CODE,SUM(QUANTITY) AS QUANTITY   
      FROM XNRECONP (NOLOCK)  
      WHERE RECON_ID=@CMEMOID    
       GROUP BY PRODUCT_CODE  
     )A   
     FULL OUTER JOIN     
     (  
      SELECT a.mrr_id AS MRR_ID,PIM.INV_NO ,PIM.INV_DT,PIM.MRR_NO,PIM.MRR_DT,
      LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE ))) as product_code,   
      SUM(QUANTITY) AS QUANTITY   
      FROM PID01106 A (NOLOCK) 
      join pim01106 pim (nolock) on a.mrr_id =pim .mrr_id  
      JOIN 
      (
        SELECT XN_ID 
        FROM  XNRECONMEMO  (NOLOCK)
        WHERE RECON_ID=@CMEMOID
        GROUP BY XN_ID
      )B  ON A.MRR_ID=B.XN_ID        
	  GROUP BY PIM.INV_NO ,PIM.INV_DT,a.mrr_id,
	  LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE ))),
	  PIM.MRR_NO,PIM.MRR_DT  
     )B ON A.PRODUCT_CODE=B.PRODUCT_CODE    
     LEFT JOIN SKU_NAMES S (NOLOCK) ON S.PRODUCT_CODE=B.PRODUCT_CODE  
     LEFT JOIN SKU_NAMES S1 (NOLOCK) ON S1.PRODUCT_CODE=A.PRODUCT_CODE  
     group by b.mrr_id,b.INV_NO ,b.INV_DT,B.MRR_NO ,B.MRR_DT 
       
  
  
  GOTO LAST    
  
  
  LBLRECON_box_print:
        
     SELECT distinct b.mrr_id ,  AC_NAME,MRR_NO,B.INV_NO,B.RECEIPT_DT,BILL_NO,B.INV_DT  
     FROM XNRECONMEMO A (NOLOCK)  
     JOIN PIM01106 B (NOLOCK) ON A.XN_ID=B.MRR_ID  
     JOIN PID01106 PID (NOLOCK) ON PID.MRR_ID=B.MRR_ID  
     JOIN LM01106 C (NOLOCK) ON C.AC_CODE=B.AC_CODE   
     WHERE RECON_ID=@CMEMOID  
       
     SELECT b.mrr_id,b.INV_NO ,b.INV_DT,a.box_no,b.MRR_NO,b.MRR_DT , 
     sum(ISNULL(A.QUANTITY,0)) AS PHYSICAL_QTY,  
     sum(ISNULL(B.QUANTITY,0)) AS PUR_QTY    
       
     FROM     
     (  
      SELECT box_no, PRODUCT_CODE,SUM(QUANTITY) AS QUANTITY   
      FROM XNRECONP (NOLOCK)  
      WHERE RECON_ID=@CMEMOID    
       GROUP BY box_no,PRODUCT_CODE  
     )A   
     FULL OUTER JOIN     
     (  
      SELECT a.mrr_id AS MRR_ID,PIM.INV_NO ,PIM.INV_DT,XN_ID,PIM.MRR_NO,PIM.MRR_DT,  
      LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE ))) as product_code,   
      SUM(QUANTITY) AS QUANTITY   
      FROM PID01106 A (NOLOCK) 
      join pim01106 pim (nolock) on a.mrr_id =pim .mrr_id  
      JOIN 
      (
        SELECT XN_ID 
        FROM  XNRECONMEMO  (NOLOCK)
        WHERE RECON_ID=@CMEMOID
        GROUP BY XN_ID
      )B  ON A.MRR_ID=B.XN_ID    
	  GROUP BY PIM.INV_NO ,PIM.INV_DT,a.mrr_id,
	  LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE ))),
	  b.XN_ID ,PIM.MRR_NO,PIM.MRR_DT 
     )B ON A.PRODUCT_CODE=B.PRODUCT_CODE    
     LEFT JOIN SKU_NAMES S (NOLOCK) ON S.PRODUCT_CODE=B.PRODUCT_CODE  
     LEFT JOIN SKU_NAMES S1 (NOLOCK) ON S1.PRODUCT_CODE=A.PRODUCT_CODE  
     group by b.mrr_id,b.INV_NO ,b.INV_DT,a.box_no,b.MRR_NO,b.MRR_DT
     
    
   
  
  GOTO LAST 
           
  
LAST:    
    
END


