create PROCEDURE SAVETRAN_BOMDQRQ
(
	@NUPDATEMODE		NUMERIC(1,0),
	@NSPID				INT,
	@CFINYEAR			VARCHAR(10),
	@CXNMEMOID			VARCHAR(40)='',
	@CMEMONOPREFIX      varchar(10)=''
)
--WITH ENCRYPTION
AS
BEGIN
	DECLARE @CTEMPDBNAME			VARCHAR(100),
			@CMASTERTABLENAME		VARCHAR(100),
			@CDETAILTABLENAME1		VARCHAR(100),
	
			@CTEMPMASTERTABLENAME	VARCHAR(100),
			@CTEMPDETAILTABLENAME1	VARCHAR(100),
        
			@CTEMPMASTERTABLE		VARCHAR(100),
			@CTEMPDETAILTABLE1		VARCHAR(100),
			@CERRORMSG				VARCHAR(500),
			@LDONOTUPDATESTOCK		BIT,
			@CKEYFIELD1				VARCHAR(50),
			@CKEYFIELDVAL1			VARCHAR(50),
			@CMEMONO				VARCHAR(20),
			@NMEMONOLEN				NUMERIC(20,0),
			@CMEMONOVAL				VARCHAR(50),
			@CMEMODEPTID			VARCHAR(4),
			@CLOCATIONID			VARCHAR(4),
			@CHODEPTID				VARCHAR(4),
			@CCMD					NVARCHAR(4000),
			@CCMDOUTPUT				NVARCHAR(4000),
			@NSAVETRANLOOP			BIT,
			@NSTEP					INT,
			@LENABLETEMPDATABASE	BIT,
			@BNEGSTOCKFOUND BIT,@CLOCID				VARCHAR(4)=''

	DECLARE @OUTPUT TABLE (ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))
	
	select @CLOCID=location_code from DQRQ_BOMDQRQMST_UPLOAD where  sp_id=@NSPID 
	
	SET @CMEMONOPREFIX=@CLOCID
	SET @NSTEP = 10		-- SETTTING UP ENVIRONMENT
    
    
    
	
	SET @CTEMPDBNAME = ''

	SET @CMASTERTABLENAME	= 'BOMDQRQMST'
	SET @CDETAILTABLENAME1	= 'BOMDQRQDET'

	SET @CTEMPMASTERTABLENAME	= 'DQRQ_BOMDQRQMST_UPLOAD'
	SET @CTEMPDETAILTABLENAME1	= 'DQRQ_BOMDQRQDET_UPLOAD'

	SET @CTEMPMASTERTABLE	=  @CTEMPMASTERTABLENAME
	SET @CTEMPDETAILTABLE1	=  @CTEMPDETAILTABLENAME1


	SET @CERRORMSG			= ''
	SET @LDONOTUPDATESTOCK	= 0
	SET @CKEYFIELD1			= 'MEMO_ID'
	SET @CMEMONO			= 'MEMO_NO'
	SET @NMEMONOLEN			= LEN(@CMEMONOPREFIX)+6
	
	
		SELECT @CLOCATIONID=@CLOCID
		
	SELECT @CHODEPTID		= [VALUE] FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'		

    
    DECLARE @CMEMO_TYPE INT
    SET @CCMD=N'SELECT TOP 1 @CMEMO_TYPE=ISNULL(MEMO_TYPE,0) FROM '+@CTEMPMASTERTABLE+' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD, N'@CMEMO_TYPE INT OUTPUT',@CMEMO_TYPE=@CMEMO_TYPE OUTPUT
	
	IF @CMEMO_TYPE NOT IN(1,2)
	BEGIN
	     SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' PLEASE CHECK...'
		GOTO END_PROC  	
	
	END

	    IF OBJECT_ID ('TEMPDB..#BARCODE_NETQTY','U') IS NOT NULL
		   DROP TABLE #BARCODE_NETQTY

	
		    SELECT DEPT_ID ,BIN_ID ,PRODUCT_CODE ,BO_ORDER_ID ,QUANTITY_IN_STOCK  AS XN_QTY
		        into #BARCODE_NETQTY
		   FROM PMT01106 
		   WHERE 1=2

		   IF @CMEMONOPREFIX=''
		   SET @CMEMONOPREFIX=@CLOCID

	IF 	@CMEMO_TYPE=1			
    SET @CMEMONOPREFIX=@CMEMONOPREFIX +'A'
    ELSE
    SET @CMEMONOPREFIX=@CMEMONOPREFIX +'D'
    
	BEGIN TRY
	BEGIN TRANSACTION
		--- IF PROCEDURE CALLED FROM CANCEL MEMO, THEN JUST DO RELATED VALIDATIONS BEFORE CANCEL
		--- AND THEN AFTER CANCELLING THE MEMO JUST PROCEED TOWARDS VALIDATIONS TO BE DONE AFTER CANCEL
		IF @NUPDATEMODE = 3
		BEGIN
		    IF (isnull(@CXNMEMOID,'')='' )
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE SAVED...'
				  GOTO END_PROC  		
			END
			
			SET @CCMD=N' UPDATE '+@CMASTERTABLENAME+' SET CANCELLED=1,LAST_UPDATE=GETDATE() WHERE '+@CKEYFIELD1+'='''+@CXNMEMOID+'''  '
	        EXEC SP_EXECUTESQL @CCMD
	        
		-- pmt update & stck check not in negative
		SET @NSTEP = 15


		SELECT @CMEMO_TYPE=MEMO_TYPE FROM BOMDQRQMST WHERE MEMO_ID=@CXNMEMOID

		   IF (isnull(@CMEMO_TYPE,0)=0 )
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR In Memo Type ...'
				  GOTO END_PROC  		
			END

	  	   INSERT INTO #BARCODE_NETQTY(DEPT_ID ,BIN_ID ,PRODUCT_CODE ,BO_ORDER_ID ,XN_QTY  )
			SELECT DEPT_ID ,BIN_ID ,PRODUCT_CODE ,BO_ORDER_ID,
				  SUM(QUANTITY) AS QUANTITY_IN_STOCK
			FROM 
			(
			SELECT LEFT(A.MEMO_ID,2) AS DEPT_ID ,BIN_ID ,PRODUCT_CODE ,
			        A.REF_ORDER_ID AS BO_ORDER_ID ,
				   (CASE WHEN @CMEMO_TYPE=2 THEN 1 ELSE -1 END) *A.QUANTITY  as QUANTITY
			FROM BOMDQRQDET A
			WHERE A.MEMO_ID=@CXNMEMOID--DEALLOCATION BARCODE
			UNION ALL
			SELECT LEFT(A.MEMO_ID,2) AS DEPT_ID ,BIN_ID ,PRODUCT_CODE ,
			        '' AS BO_ORDER_ID ,
				   (CASE WHEN @CMEMO_TYPE=2 THEN -1 ELSE  1 END) *A.QUANTITY as QUANTITY
			FROM BOMDQRQDET A
			WHERE A.MEMO_ID=@CXNMEMOID--reallocate BARCODE
			) A
			GROUP BY DEPT_ID ,BIN_ID ,PRODUCT_CODE ,BO_ORDER_ID


			update #BARCODE_NETQTY set BO_ORDER_ID=null where BO_ORDER_ID=''

			
			EXEC SP3S_UPDATE_PMTSTOCK_BOMDQRQ 1,@CERRORMSG OUTPUT 

			if isnull(@CERRORMSG,'')<>''
			begin
			      SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
				  GOTO END_PROC

			end

		
			
			GOTO END_PROC
		END	
		
		-- START UPDATING XN TABLES	
		IF @NUPDATEMODE = 1 -- ADDMODE	
		BEGIN	
		    
			SET @NSTEP = 12
			IF NOT  EXISTS(SELECT TOP 1 'U' FROM DQRQ_BOMDQRQMST_UPLOAD WHERE SP_ID=@NSPID )
			BEGIN
			     SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' Record Not Found In Master Table....'
				  GOTO END_PROC

			END
		    SET @NSTEP = 14
			IF NOT  EXISTS(SELECT TOP 1 'U' FROM DQRQ_BOMDQRQdet_UPLOAD WHERE SP_ID=@NSPID  )
			BEGIN
			     SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' Record Not Found In Details Tbale  Table....'
				  GOTO END_PROC

			END

			SET @NSTEP = 16
			IF   EXISTS(SELECT TOP 1 'U' FROM DQRQ_BOMDQRQdet_UPLOAD WHERE SP_ID=@NSPID  and isnull(PRODUCT_CODE,'')=''  )
			BEGIN
			     SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' Blank Barcode can Not Be saved....'
				  GOTO END_PROC

			END


			SET @NSTEP = 20		-- GENERATING NEW KEY
			IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
			BEGIN
				-- GENERATING NEW MRR_NO		
				SET @NSAVETRANLOOP=0
				WHILE @NSAVETRANLOOP=0
				BEGIN
					SET @NSTEP = 23
					EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,
									@CFINYEAR,0, @CMEMONOVAL OUTPUT   
					SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+' 
											WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' 
											AND FIN_YEAR = '''+@CFINYEAR+''' )
									SET @NLOOPOUTPUT=0
								ELSE
									SET @NLOOPOUTPUT=1'
					PRINT @CCMD
					EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
				END

				IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'	
					  GOTO END_PROC  		
				END

				SET @NSTEP = 30		-- GENERATING NEW ID
				-- GENERATING NEW ORDER ID
				SET @CKEYFIELDVAL1 = @CLOCATIONID + @CFINYEAR+REPLICATE('0', (22-LEN(@CLOCATIONID + @CFINYEAR))-LEN(LTRIM(RTRIM(@CMEMONOVAL))))  + LTRIM(RTRIM(@CMEMONOVAL))

				
				IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
					  GOTO END_PROC
				END
				
				SET @NSTEP = 35
				IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
					  GOTO END_PROC
				END

				SET @NSTEP = 40		-- UPDATING NEW ID INTO TEMP TABLES
				-- UPDATING NEWLY GENERATED WORK ORDER NO AND ID IN MASTER & DETAIL TABLES
				SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' + 
							@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
				EXEC SP_EXECUTESQL @CCMD
				
				SET @NSTEP = 50
				
				SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD

				SET @CCMD = N'UPDATE '+ @CTEMPDETAILTABLE1 + ' SET ROW_ID = NEWID() WHERE LEFT(ROW_ID,5) = ''LATER'' and sp_id='''+LTRIM(RTRIM(STR(@NSPID)))+''''
				PRINT @CCMD	
				EXEC SP_EXECUTESQL @CCMD
				

			
				
				
			END
		END					-- END OF ADDMODE
		ELSE				-- CALLED FROM EDITMODE
		BEGIN				-- START OF EDITMODE
			SET @NSTEP = 50		-- GETTING ID INFO FROM TEMP TABLE
			-- GETTING ORDER_ID WHICH IS BEING EDITED
			SET @CCMD = 'SELECT @CKEYFIELDVAL1 = MEMO_ID, @CMEMONOVAL = MEMO_NO FROM ' + @CTEMPMASTERTABLE +' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			EXEC SP_EXECUTESQL @CCMD, N'@CKEYFIELDVAL1 VARCHAR(50) OUTPUT, @CMEMONOVAL VARCHAR(50) OUTPUT', 
							   @CKEYFIELDVAL1 OUTPUT, @CMEMONOVAL OUTPUT
			IF (@CKEYFIELDVAL1 IS NULL ) OR (@CMEMONOVAL IS NULL )
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'
				  GOTO END_PROC  		
			END
			
			SET @NSTEP = 60		-- UPDATING SENT_TO_HO FLAG TEMP TABLE
			
				
			SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' AND '+@CKEYFIELD1+' = ''LATER'' '
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
				
			SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' SET LAST_UPDATE=GETDATE() WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' '
			EXEC SP_EXECUTESQL @CCMD
			
			SET @NSTEP = 70	
		
				
		END	-- END OF EDITMODE

		
		SET @NSTEP = 95

		-- CHECK WETHER THE MEMO ID IS STILL LATER
		IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
			GOTO END_PROC
		END
       set @CXNMEMOID=@CKEYFIELDVAL1
	



		SET @NSTEP = 100		-- UPDATING MASTER TABLE

            DECLARE @FILTER VARCHAR(MAX)
	        SET @FILTER=' B.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
		EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPMASTERTABLENAME
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CMASTERTABLENAME
			, @CKEYFIELD1	= @CKEYFIELD1
			, @BALWAYSUPDATE = 1
			,@CFILTERCONDITION=@FILTER
			

		-- DELETING EXISTING ENTRIES FROM PID01106 TABLE WHERE ROW_ID NOT FOUND IN TEMPTABLE
		SET @NSTEP = 230		-- UPDATING TRANSACTION TABLE - DELETING EXISTING ENTRIES

		--SET @CCMD = N'DELETE FROM ' + @CDETAILTABLENAME1 + ' 
		--			WHERE ' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''
		--			AND ROW_ID IN 
		--			(
		--				SELECT A.ROW_ID 
		--				FROM ' + @CDETAILTABLENAME1 + ' A 
		--				LEFT OUTER JOIN ' + @CTEMPDETAILTABLENAME1 + ' B ON A.ROW_ID = B.ROW_ID AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+'''
		--				WHERE A.' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''
		--				AND B.ROW_ID IS NULL
		--			)'
		--PRINT @CCMD
		
		--EXEC SP_EXECUTESQL @CCMD
		
		SET @NSTEP = 240
       --SELECT * FROM TEMP_PRD_AGENCY_ISSUE_ROW_MATERIAL_DET_61
		
		IF @NUPDATEMODE= 1
		BEGIN
		EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPDETAILTABLENAME1
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CDETAILTABLENAME1
			, @CKEYFIELD1	= 'ROW_ID'
			, @BALWAYSUPDATE = 1
			,@CFILTERCONDITION=@FILTER


		
		SET @NSTEP = 250
			INSERT INTO #BARCODE_NETQTY(DEPT_ID ,BIN_ID ,PRODUCT_CODE ,BO_ORDER_ID ,XN_QTY  )
			SELECT DEPT_ID ,BIN_ID ,PRODUCT_CODE ,BO_ORDER_ID,
				  SUM(QUANTITY) AS QUANTITY_IN_STOCK
			FROM 
			(
			SELECT LEFT(A.MEMO_ID,2) AS DEPT_ID ,BIN_ID ,PRODUCT_CODE ,
			        A.REF_ORDER_ID AS BO_ORDER_ID ,
				  (CASE WHEN @CMEMO_TYPE=2 THEN -1 ELSE 1 END) *A.QUANTITY as QUANTITY
			FROM BOMDQRQDET A
			WHERE A.MEMO_ID=@CXNMEMOID--DEALLOCATION BARCODE
			UNION ALL
			SELECT LEFT(A.MEMO_ID,2) AS DEPT_ID ,BIN_ID ,PRODUCT_CODE ,
			        '' AS BO_ORDER_ID ,
				  (CASE WHEN @CMEMO_TYPE=2 THEN 1 ELSE - 1 END) *A.QUANTITY as QUANTITY
			FROM BOMDQRQDET A
			WHERE A.MEMO_ID=@CXNMEMOID--reallocate BARCODE
			) A
			GROUP BY DEPT_ID ,BIN_ID ,PRODUCT_CODE ,BO_ORDER_ID

			update #BARCODE_NETQTY set BO_ORDER_ID=null where BO_ORDER_ID=''

		
			SET @NSTEP = 260
			EXEC SP3S_UPDATE_PMTSTOCK_BOMDQRQ 1,@CERRORMSG OUTPUT 

			if isnull(@CERRORMSG,'')<>''
			begin
			      SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' Error In Stock Updation'+@CERRORMSG
				  GOTO END_PROC

			end

	

	END

       

	--   SELECT bo_order_id, * FROM pmt01106 WHERE product_code IN('H1RBTN-45','H1RCOT-11')

    
	END TRY
	BEGIN CATCH
		SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(STR(@NSTEP))) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
	END CATCH
	
END_PROC:

  
  
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')=''
			commit TRANSACTION
		ELSE
			ROLLBACK
	END
	
	INSERT @OUTPUT ( ERRMSG, MEMO_ID)
		VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )

	SELECT * FROM @OUTPUT	

	IF ISNULL(@CERRORMSG,'') = ''
	BEGIN
	   DELETE FROM DQRQ_BOMDQRQMST_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
	   DELETE FROM DQRQ_BOMDQRQdet_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))	
	  
	  
    END
    
 
END						
------------- END OF PROCEDURE PPC_SAVETRAN_AGENCY_ISSUE_FIRST		-----------------------------------------
