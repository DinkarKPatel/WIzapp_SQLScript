-- PROCEDURE TO SAVE A JOB WORK ISSUE MEMO  
CREATE PROCEDURE SAVETRAN_JWR_FIXCODE  
(  
 @NUPDATEMODE  NUMERIC(1,0),  
 @NSPID    varchar(50),  
 @CFINYEAR   VARCHAR(10),  
 @CMEMOID   VARCHAR(40)=''  
)  
AS  
BEGIN  
 -- @NUPDATEMODE: 1- NEW MEMO ADDED,   
 --     2- EDITING OF MEMO,   
 --     3- CURRENT MEMO CANCELLED,   
  
 DECLARE @CTEMPDBNAME   VARCHAR(100),  
   @CMASTERTABLENAME  VARCHAR(100),  
   @CDETAILTABLENAME1  VARCHAR(100),  
   @CDETAILTABLENAME2  VARCHAR(100),  
   @CTEMPMASTERTABLENAME VARCHAR(100),  
   @CTEMPDETAILTABLENAME1 VARCHAR(100),  
   @CTEMPDETAILTABLENAME2 VARCHAR(100),  
   @CTEMPMASTERTABLE  VARCHAR(300),  
   @CTEMPDETAILTABLE1  VARCHAR(300),  
   @CTEMPDETAILTABLE2  VARCHAR(300),  
   @CERRORMSG    VARCHAR(500),  
   @LDONOTUPDATESTOCK  BIT,  
   @CKEYFIELD1    VARCHAR(50),  
   @CKEYFIELDVAL1   VARCHAR(50),  
   @CMEMONO    VARCHAR(20),  
   @NMEMONOLEN    NUMERIC(20,0),  
   @CMEMONOVAL    VARCHAR(50),  
   @CLOCATIONID   VARCHAR(4),  
   @CHODEPTID    VARCHAR(4),  
   @CCMD     NVARCHAR(4000),  
   @CCMDOUTPUT    NVARCHAR(4000),  
   @NSAVETRANLOOP   BIT,  
   @NSTEP     INT,  
   @BNEGSTOCKFOUND BIT,  
   @CUSERALIAS VARCHAR(5),@CMEMONOPREFIX VARCHAR(10),  
   @CEXPRERRORMSG VARCHAR(MAX) ,@CLOCID    VARCHAR(4)   
  
 DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))  
  
  
 SET @NSTEP = 0  -- SETTTING UP ENVIRONMENT  
 
 SET @CTEMPDBNAME = ''  
  
 SET @CMASTERTABLENAME = 'JOBWORK_RECEIPT_MST'  
 SET @CDETAILTABLENAME1 = 'JOBWORK_RECEIPT_DET'  
   
  
 SET @CTEMPMASTERTABLENAME = 'JWR_jobwork_receipt_mst_UPLOAD'  
 SET @CTEMPDETAILTABLENAME1 = 'JWR_jobwork_receipt_det_UPLOAD'
   
  
 SET @CTEMPMASTERTABLE = @CTEMPDBNAME + @CTEMPMASTERTABLENAME  
 SET @CTEMPDETAILTABLE1 = @CTEMPDBNAME + @CTEMPDETAILTABLENAME1  
   
   
 SET @CERRORMSG   = ''  
 SET @LDONOTUPDATESTOCK = 0  
 SET @CKEYFIELD1   = 'RECEIPT_ID'  
 SET @CMEMONO   = 'RECEIPT_NO'  
 SET @NMEMONOLEN   = 10  
  
  
  select @CLOCID=location_code from JWR_jobwork_receipt_mst_UPLOAD where SP_ID=@NSPID 
  
  SET @CLOCATIONID=@CLOCID  
  
 SELECT @CHODEPTID  = [VALUE] FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'    
  
 SET @NSTEP = 10  -- GETTING DEPTID INFO FROM TEMP TABLE  
 
 BEGIN TRY  
  
  IF OBJECT_ID('TEMPDB..#TMPPMT','U') IS NOT NULL  
   DROP TABLE #TMPPMT  
    
  SELECT PRODUCT_CODE INTO #TMPPMT FROM SKU WHERE 1=2  
  
  IF OBJECT_ID('TEMPDB..#TMPXNSTK','U') IS NOT NULL  
   DROP TABLE #TMPXNSTK           
    
  SELECT PRODUCT_CODE,QUANTITY_IN_STOCK AS XN_STOCK INTO #TMPXNSTK FROM PMT01106 WHERE 1=2  
  
  BEGIN TRANSACTION  
  
  DECLARE @INSERTSTRING VARCHAR(MAX)
  DELETE FROM JWR_JOBWORK_RECEIVE_FG_DET_UPLOAD WHERE SP_ID =LTRIM(RTRIM(STR(@NSPID))) AND ISNULL(ARTICLE_CODE,'')=''
  
  SET @NSTEP = 20

   IF ISNULL(@CLOCATIONID,'')=''
	 BEGIN
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' LOCATION ID CAN NOT BE BLANK  '  
		GOTO END_PROC    
	 END
  
  IF @NUPDATEMODE=1
  EXEC  SAVETRAN_GENBARCODES_RECEIVE @CLOCATIONID,0,@NSPID,@CLOCATIONID,@CTEMPDETAILTABLE1,@CERRORMSG OUTPUT 
  
  IF ISNULL(@CERRORMSG,'')<>''
     GOTO END_PROC   
      

  IF @NUPDATEMODE<>3  
  BEGIN  
  
   EXEC SP_VALIDATEXN_BEFORESAVE 'JWR',@NSPID,'0000000',@NUPDATEMODE,@CCMDOUTPUT OUTPUT,@BNEGSTOCKFOUND OUTPUT  
   IF ISNULL(@CCMDOUTPUT,'') <> ''  
   BEGIN  
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' DATA VALIDATION ON TEMP DATA FAILED : ' + @CCMDOUTPUT + '...'  
		GOTO END_PROC  
   END  
  END  
  ELSE  
  BEGIN  
     EXEC VALIDATEXN_BEFORE_EDIT 'JWR',@CMEMOID,1,'0000000',@CERRORMSG OUTPUT,@CEXPRERRORMSG OUTPUT ,@CLOCATIONID 
     

   IF ISNULL(@CERRORMSG,'')<>''  
    GOTO END_PROC  
  END  
    
    
  IF @NUPDATEMODE = 3 AND ISNULL(@CMEMOID,'') = ''  
  BEGIN  
   SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' MEMO ID REQUIRED IF CALLED FROM CANCELLATION'  
   GOTO END_PROC      
  END  
    
   
  -- START UPDATING XN TABLES   
  IF @NUPDATEMODE = 1 -- ADDMODE   
  BEGIN   
     
	   SET @NSTEP=15  
	     
	   SET @CMEMONOPREFIX=@CLOCATIONID  
	     
	    
	   SET @NSTEP = 20  -- GENERATING NEW KEY  
	     
	   -- GENERATING NEW JOB ORDER NO    
	   SET @NSAVETRANLOOP=0  
	   WHILE @NSAVETRANLOOP=0  
	   BEGIN  
			EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,   
				@CFINYEAR,0, @CMEMONOVAL OUTPUT     
		      
			PRINT @CMEMONOVAL  
			SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+'   
				  WHERE '+@CMEMONO+'='''+@CMEMONOVAL+'''   
				  AND FIN_YEAR = '''+@CFINYEAR+''' )  
				SET @NLOOPOUTPUT=0  
			   ELSE  
				SET @NLOOPOUTPUT=1'  
			PRINT @CCMD  
			EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT  
	   END  
	  
	   IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
	   BEGIN  
		  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'   
		  GOTO END_PROC      
	   END  
	  
	   SET @NSTEP = 30  -- GENERATING NEW ID  
	  
	   -- GENERATING NEW JOB ORDER ID  
	   SET @CKEYFIELDVAL1 = @CLOCATIONID + RIGHT(@CFINYEAR,2)+REPLICATE('0', (22-LEN(@CLOCATIONID + RIGHT(@CFINYEAR,2)))-LEN(LTRIM(RTRIM(@CMEMONOVAL))))  + LTRIM(RTRIM(@CMEMONOVAL))  
	   
	   IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'    
	   BEGIN  
		  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'  
		  -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'  
		  GOTO END_PROC  
	   END  
	   
	  
	   SET @NSTEP = 40  -- UPDATING NEW ID INTO TEMP TABLES  
	  
	   -- UPDATING NEWLY GENERATED JOB ORDER NO AND JOB ORDER ID IN PIM AND PID TEMP TABLES  
	   SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' +   
		  @CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' where SP_ID='''+@NSPID +''' '  
	   PRINT @CCMD  
	   EXEC SP_EXECUTESQL @CCMD  
	    
	   SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' where SP_ID='''+@NSPID +''''  
	       
	     
	   PRINT @CCMD  
	   EXEC SP_EXECUTESQL @CCMD  
  
  END     -- END OF ADDMODE  
  ELSE    -- CALLED FROM EDITMODE  
  BEGIN    -- START OF EDITMODE  
    
	   SET @NSTEP = 50  -- GETTING ID INFO FROM TEMP TABLE  
	  
	     
	   -- GETTING MEMO ID WHICH IS BEING EDITED  
	   SET @CCMD = 'SELECT @CKEYFIELDVAL1 = ' + @CKEYFIELD1 + ', @CMEMONOVAL = ' + @CMEMONO + ' FROM '  
		  + (CASE WHEN @NUPDATEMODE=3 THEN @CMASTERTABLENAME + ' WHERE RECEIPT_ID = ''' + @CMEMOID + ''''  
			ELSE @CTEMPMASTERTABLE +' where SP_ID='''+@NSPID +'''' END )  
	     
	   EXEC SP_EXECUTESQL @CCMD, N'@CKEYFIELDVAL1 VARCHAR(50) OUTPUT, @CMEMONOVAL VARCHAR(50) OUTPUT',   
			  @CKEYFIELDVAL1 OUTPUT, @CMEMONOVAL OUTPUT  
	            
	   IF (@CKEYFIELDVAL1 IS NULL ) OR (@CMEMONOVAL IS NULL )  
	   BEGIN  
		  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'  
		  GOTO END_PROC      
	   END  
	  
	
     
	   IF @NUPDATEMODE = 3     
	   BEGIN  
			SET @NSTEP = 60  
			-- UPDATING SENTTOHO FLAG  
			SET @CCMD = N'UPDATE ' + @CMASTERTABLENAME + ' SET CANCELLED = 1,LAST_UPDATE=GETDATE() ' +   
			   N' WHERE ' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + ''''  
			EXEC SP_EXECUTESQL @CCMD  
	   END  
     
	   -- REVERTING BACK THE STOCK OF PMT W.R.T CURRENT ISSUE  
	   SET @NSTEP = 80  -- REVERTING STOCK  
	  
	   EXEC UPDATEPMT_JWR   
		  @CXNTYPE   = 'JWR'   
		, @CXNNO   = @CMEMONOVAL  
		, @CXNID   = @CKEYFIELDVAL1  
		, @NREVERTFLAG  = 1  
		, @NALLOWNEGSTOCK = 0  
		, @NCHKDELBARCODES = 1  
		, @NUPDATEMODE  = @NUPDATEMODE      
		, @CCMD    = @CCMDOUTPUT OUTPUT  
	     
	   IF (@NUPDATEMODE = 3)   
	   BEGIN  
	   
	   
	      IF EXISTS (SELECT TOP 1 'U' FROM JOBWORK_RECEIPT_MST WHERE receipt_id =@CKEYFIELDVAL1 AND ISNULL(Receive_Mode,0)=1)
	        BEGIN 
	        
				EXEC SP3S_VALIDATE_ENFORCE_JOB @CKEYFIELDVAL1,@CERRORMSG OUTPUT
				IF ISNULL(@CERRORMSG,'')<>''
				GOTO END_PROC 
				 
			END
	   
			IF @CCMDOUTPUT <> ''  
			BEGIN  
			     print @CCMDOUTPUT
				 SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR UPDATING THE STOCK STATUS IN PMT....'  
				 SET @BNEGSTOCKFOUND=1       
				 EXEC SP_EXECUTESQL @CCMDOUTPUT  
				 GOTO END_PROC  
			END 
			
		 GOTO END_PROC 	
	   END  
  END     -- END OF EDITMODE  

	SET @NSTEP = 65  -- UPDATING SENT_TO_HO FLAG TEMP TABLE  
	-- UPDATING SENTTOHO FLAG  
	SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' SET SENT_TO_HO = 0,LAST_UPDATE=GETDATE() where SP_ID='''+@NSPID +''''  
	EXEC SP_EXECUTESQL @CCMD  
      
      
     
  SET @NSTEP = 95  
    
  -- RECHECKING IF ID IS STILL LATER  
  IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
  BEGIN  
   SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR GETTING NEXT MEMO ID....'  
   GOTO END_PROC  
  END  
  
   SET @NSTEP = 105  -- UPDATING MASTER TABLE  
  
   DECLARE @CWHERECLAUSE VARCHAR(1000)
  SET @CWHERECLAUSE='  SP_ID='''+ LTRIM(RTRIM((@NSPID)))+''''

   EXEC UPDATEMASTERXN_OPT   
      @CSOURCEDB = @CTEMPDBNAME  
    , @CSOURCETABLE = @CTEMPMASTERTABLENAME  
    , @CDESTDB  = ''  
    , @CDESTTABLE = @CMASTERTABLENAME  
    , @CKEYFIELD1 = @CKEYFIELD1  
    ,@BALWAYSUPDATE = 1  
	,@CFILTERCONDITION=@CWHERECLAUSE
  
   -- UPDATING TRANSACTION TABLE (PID01106) FROM TEMP TABLE  
   SET @NSTEP = 110  -- UPDATING TRANSACTION TABLE  
     
 
   -- UPDATING ROW_ID IN TEMP TABLES  
   SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET OLD_ROW_ID=ROW_ID,ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(38), NEWID())  
        WHERE LEFT(ROW_ID,5) = ''LATER'' and sp_id ='''+@NSPID+''' '  
   EXEC SP_EXECUTESQL @CCMD  
  
   -- DELETING EXISTING ENTRIES FROM DETAIL TABLE WHERE ROW_ID NOT FOUND IN TEMPTABLE  
   SET @NSTEP = 114  -- UPDATING TRANSACTION TABLE - DELETING EXISTING ENTRIES  
  
   SET @CCMD = N'DELETE FROM ' + @CDETAILTABLENAME1 + '   
      WHERE ' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''  
      AND ROW_ID IN   
      (  
       SELECT A.ROW_ID   
       FROM ' + @CDETAILTABLENAME1 + ' A   
       LEFT OUTER JOIN ' + @CTEMPDETAILTABLE1 + ' B ON A.ROW_ID = B.ROW_ID  and and sp_id ='''+@NSPID+'''
       WHERE A.' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''  
       AND   B.ROW_ID IS NULL  
      )'  
   EXEC SP_EXECUTESQL @CCMD  
     
   SET @NSTEP=117  
  
   SET @CCMD = N' UPDATE A SET HSN_CODE =''0000000000'',IGST_AMOUNT =0,CGST_AMOUNT =0,SGST_AMOUNT =0 
   FROM  ' + @CTEMPDETAILTABLENAME1 + ' A
   WHERE ISNULL(HSN_CODE,'''')  IN('''') and sp_id ='''+@NSPID+''' '
   EXEC SP_EXECUTESQL @CCMD  
   PRINT @CCMD
     
      -- INSERTING/UPDATING THE ENTRIES IN PRD_JID TABLE FROM TEMPTABLE  
   SET @NSTEP = 130  -- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES  
  
   EXEC UPDATEMASTERXN_OPT   
      @CSOURCEDB = @CTEMPDBNAME  
    , @CSOURCETABLE = @CTEMPDETAILTABLENAME1  
    , @CDESTDB  = ''  
    , @CDESTTABLE = @CDETAILTABLENAME1  
    , @CKEYFIELD1 = 'ROW_ID'  
    ,@BALWAYSUPDATE = 1  
	,@CFILTERCONDITION=@CWHERECLAUSE
  
   SET @NSTEP = 135  
     
   -- UPDATING STOCK OF PMT W.R.T. CURRENT MEMO  
   SET @NSTEP = 140  -- UPDATING PMT TABLE  
   

   EXEC UPDATEPMT_JWR   
      @CXNTYPE   = 'JWR'   
    , @CXNNO   = @CMEMONOVAL  
    , @CXNID   = @CKEYFIELDVAL1  
    , @NREVERTFLAG  = 0  
    , @NALLOWNEGSTOCK = 0  
    , @NCHKDELBARCODES = 1  
    , @NUPDATEMODE  = @NUPDATEMODE      
    , @CCMD    = @CCMDOUTPUT OUTPUT  
     
   IF @CCMDOUTPUT <> ''  
   BEGIN  
		PRINT @CCMDOUTPUT  
	      
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR UPDATING THE STOCK STATUS IN PMT....'  
		SET @BNEGSTOCKFOUND=1      
		EXEC SP_EXECUTESQL @CCMDOUTPUT  
		GOTO END_PROC  
   END  
   

	--  GST CALCULATION
	  DECLARE @CPARTY_GSTN_NO VARCHAR(20),@BREGISTERED BIT,@BGSTBILL INT
	  DECLARE @CPARTYSTATECODE VARCHAR(2),@DRECIPT_DT DATETIME,@CGSTCUTOFFDATE VARCHAR(100)
	  SET @BGSTBILL=0
	 SELECT @CGSTCUTOFFDATE=VALUE FROM CONFIG WHERE CONFIG_OPTION ='GST_CUT_OFF_DATE'
	
	IF ISNULL(@CGSTCUTOFFDATE,'')<>''
	BEGIN
		SELECT @DRECIPT_DT=A.RECEIPT_DT 
		FROM JOBWORK_RECEIPT_MST A 
		WHERE A.RECEIPT_ID=@CKEYFIELDVAL1	
		
		IF @DRECIPT_DT>=CONVERT(DATE,@CGSTCUTOFFDATE)
			SET @BGSTBILL=1
	END
		
		
    IF @BGSTBILL=1
	BEGIN
		   
			SET @NSTEP=187
			DELETE FROM GST_TAXINFO_CALC WITH (ROWLOCK) WHERE SP_ID=CAST(@NSPID AS VARCHAR)
			DELETE FROM GST_TAXINFO_CALC_OH WITH (ROWLOCK) WHERE SP_ID=CAST(@NSPID AS VARCHAR)
			
			
		
			SELECT TOP 1 @CPARTY_GSTN_NO=AC_GST_NO,@CPARTYSTATECODE=C.AC_GST_STATE_CODE,
			@BREGISTERED=ISNULL(REGISTERED_GST_DEALER,0),
			@DRECIPT_DT=A.RECEIPT_DT 
			FROM JOBWORK_RECEIPT_MST A 
			JOIN PRD_AGENCY_MST B ON A.AGENCY_CODE =B.AGENCY_CODE 
			JOIN LMP01106 C ON B.AC_CODE=C.AC_CODE 
			WHERE A.RECEIPT_ID=@CKEYFIELDVAL1	
			
            
			UPDATE A SET PARTY_STATE_CODE=@CPARTYSTATECODE FROM JOBWORK_RECEIPT_MST A WHERE ISNULL(PARTY_STATE_CODE,'') IN('','00')
			AND receipt_id =@CKEYFIELDVAL1
			
			INSERT GST_TAXINFO_CALC	WITH (ROWLOCK) ( PRODUCT_CODE, SP_ID ,NET_VALUE,TAX_METHOD,ROW_ID,QUANTITY,SOURCE_DEPT_ID,MRP,HSN_CODE)  
			SELECT A.PRODUCT_CODE,@NSPID AS SP_ID,
			ISNULL(A.QUANTITY,0)*ISNULL(A.JOB_RATE,0)  AS NET_VALUE,
			ISNULL(B.BILL_LEVEL_TAX_METHOD,0) AS TAX_METHOD,
			ROW_ID,QUANTITY,B.DEPT_ID,SKU.MRP,A.HSN_CODE 
			FROM JOBWORK_RECEIPT_DET  A
			JOIN JOBWORK_RECEIPT_MST B ON A.RECEIPT_ID=B.RECEIPT_ID 
			JOIN SKU ON SKU .PRODUCT_CODE =A.PRODUCT_CODE 
			WHERE A.RECEIPT_ID=@CKEYFIELDVAL1

					
			EXEC SP3S_GST_TAX_CAL
				@CXN_TYPE='JWR',
				@CMEMO_ID='',
				@DMEMO_DT=@DRECIPT_DT,
				@NSPID=@NSPID,
				@CPARTYSTATE_CODE=@CPARTYSTATECODE,
				@BPARTYREGISTERED=@BREGISTERED,
				@CPARTY_GSTN_NO=@CPARTY_GSTN_NO,
				@CERRMSG=@CERRORMSG OUTPUT
			  
			IF ISNULL(@CERRORMSG,'')<>''
				 GOTO END_PROC
				 
				 
				 UPDATE A SET IGST_AMOUNT =ISNULL(TMP.IGST_AMOUNT,0),
				 CGST_AMOUNT =ISNULL(TMP.CGST_AMOUNT,0),
				 SGST_AMOUNT =ISNULL(TMP.SGST_AMOUNT,0),
				 HSN_CODE =TMP.HSN_CODE ,
				 GST_PERCENTAGE=ISNULL(TMP.GST_PERCENTAGE,0),
				 XN_VALUE_WITH_GST =ISNULL(TMP.XN_VALUE_WITH_GST,0),
				 XN_VALUE_WITHOUT_GST =ISNULL(TMP.XN_VALUE_WITHOUT_GST,0)
				  FROM JOBWORK_RECEIPT_DET A (NOLOCK)
				 JOIN GST_TAXINFO_CALC TMP (NOLOCK) ON A.ROW_ID =TMP.ROW_ID 
				 WHERE TMP.SP_ID =CAST(@NSPID AS VARCHAR)
				 AND A.RECEIPT_ID=@CKEYFIELDVAL1
					
	END
	ELSE
	BEGIN
		    
		    
				 UPDATE A SET IGST_AMOUNT =0,
				 CGST_AMOUNT =0,
				 SGST_AMOUNT =0,
				 HSN_CODE ='0000000000',
				 GST_PERCENTAGE=0,
				 XN_VALUE_WITH_GST =ISNULL(QUANTITY,0)*ISNULL(JOB_RATE,0),
				 XN_VALUE_WITHOUT_GST =ISNULL(QUANTITY,0)*ISNULL(JOB_RATE,0)
				 FROM JOBWORK_RECEIPT_DET A (NOLOCK)
				 WHERE A.RECEIPT_ID=@CKEYFIELDVAL1
					
		
		
	END
		
    
    UPDATE A SET NET_AMOUNT =B.NET+ISNULL(CASE WHEN ISNULL(A.BILL_LEVEL_TAX_METHOD ,0)=1 THEN GST_AMT ELSE 0 END,0)
    FROM JOBWORK_RECEIPT_MST A
    JOIN
    (
     SELECT RECEIPT_ID ,SUM(ISNULL(QUANTITY,0)*ISNULL(JOB_RATE,0)) AS NET,
     SUM(ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)) AS GST_AMT
     FROM JOBWORK_RECEIPT_DET 
     WHERE RECEIPT_ID=@CKEYFIELDVAL1
     GROUP BY RECEIPT_ID
    )B ON A.RECEIPT_ID =B.RECEIPT_ID 
    WHERE A.RECEIPT_ID=@CKEYFIELDVAL1

    UPDATE PMT SET JOB_CODE =''
	FROM JOBWORK_RECEIPT_DET B  
	JOIN JOBWORK_RECEIPT_MST C ON C.RECEIPT_ID=B.RECEIPT_ID   
	JOIN JOBWORK_PMT  PMT ON PMT.PRODUCT_CODE = B.PRODUCT_CODE AND PMT.DEPT_ID = C.DEPT_ID  AND B.BIN_ID=PMT.BIN_ID
	WHERE  B.RECEIPT_ID = @CKEYFIELDVAL1 


    
    
  SET @NSTEP = 150  -- VALIDATING ENTRIES  
  
  EXEC VALIDATEXN  
     @CXNTYPE = 'JWR'    
   , @CXNID = @CKEYFIELDVAL1  
   , @NUPDATEMODE = @NUPDATEMODE     
   , @CCMD  = @CCMDOUTPUT OUTPUT  
   , @CUSERCODE = '0000000'
  
  IF @CCMDOUTPUT <> ''  
  BEGIN  
   SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' DATA VALIDATION FAILED : ' + @CCMDOUTPUT + '...'  
   GOTO END_PROC  
  END  
  

  
  -- AFTER SUCCESSFUL SAVING , JUST DROP THE TEMP TABLES CREATED BY APPLICATION  
  SET @NSTEP = 170  
  
     --CALCULATING JOB VALUE
    IF EXISTS (SELECT TOP 1 'U' FROM jobwork_receipt_mst WHERE ISNULL(Receive_Mode,0) =1 ) AND @NUPDATEMODE=1
    BEGIN
        
	   IF OBJECT_ID('TEMPDB..#TMPPRODUCT','U') IS NOT NULL
	   DROP TABLE #TMPPRODUCT
	   
	   SELECT DISTINCT A.ref_row_id , A.product_code,A.QUANTITY INTO #TMPPRODUCT FROM 
	   JOBWORK_RECEIPT_DET A (NOLOCK)
	   JOIN JOBWORK_RECEIPT_MST B (NOLOCK) ON A.receipt_id =B.receipt_id
	   WHERE  A.receipt_id=@CKEYFIELDVAL1
	   
	  IF OBJECT_ID('TEMPDB..#TMPJOBWORK','U') IS NOT NULL
	   DROP TABLE #TMPJOBWORK
	   				   
		SELECT A.PRODUCT_CODE,SUM(A.JOB_RATE ) AS JOB_RATE
		INTO #TMPJOBWORK
		FROM #TMPPRODUCT TMP
		JOIN JOBWORK_RECEIPT_DET A (NOLOCK) ON TMP.PRODUCT_CODE =A.PRODUCT_CODE 
		JOIN JOBWORK_RECEIPT_MST  B (NOLOCK) ON A.RECEIPT_ID =B.RECEIPT_ID 
		WHERE B.CANCELLED =0 
		GROUP BY A.PRODUCT_CODE
		
		IF EXISTS (SELECT TOP 1 'U' FROM #TMPJOBWORK)
		BEGIN
			UPDATE A SET FG_VALUE=ISNULL(TMP.JOB_RATE,0) 
			FROM JOBWORK_PMT A (NOLOCK)
			JOIN #TMPJOBWORK TMP ON A.PRODUCT_CODE =TMP.PRODUCT_CODE 
		END
		ELSE
		BEGIN
		    UPDATE A SET FG_VALUE=0 
		    FROM JOBWORK_PMT A (NOLOCK)
			JOIN #TMPPRODUCT TMP ON A.PRODUCT_CODE =TMP.PRODUCT_CODE 
		
		END
		
		IF OBJECT_ID ('TEMPDB..#TEMPBOMVALUE','U') IS NOT NULL
            DROP TABLE #TEMPBOMVALUE
       
	    --SELECT * FROM JWR_JOBWORK_RECEIVE_BOM_DET_UPLOAD WHERE SP_ID='261'
	    
	    --SELECT * FROM JWR_JOBWORK_RECEIVE_FG_DET_UPLOAD WHERE SP_ID='261'
            
		SELECT A.ARTICLE_CODE,A.PARA1_CODE ,A.PARA2_CODE ,
		A.purchase_price ,A.QUANTITY,a.REF_ROW_ID,
		FG_QTY AS FG_QTY,
		AVG_QUANTITY,
		ADD_AVG_QUANTITY,
		CAST(0 AS NUMERIC(10,2)) AS RATE
		INTO #TEMPBOMVALUE
		FROM JWR_JOBWORK_RECEIVE_BOM_DET_UPLOAD A (NOLOCK)
		JOIN
		(
            SELECT REF_ROW_ID,SUM(QUANTITY) AS FG_QTY   
            FROM JWR_JOBWORK_RECEIVE_FG_DET_UPLOAD
	        WHERE SP_ID =LTRIM(RTRIM(STR(@NSPID)))
	        GROUP BY REF_ROW_ID
		) B ON A.REF_ROW_ID =B.REF_ROW_ID 
		WHERE A.SP_ID =LTRIM(RTRIM(STR(@NSPID)))
		
		
		UPDATE #TEMPBOMVALUE SET RATE =(ISNULL(AVG_QUANTITY,0)+ISNULL(ADD_AVG_QUANTITY,0)) *purchase_price 
		
		IF EXISTS (SELECT TOP 1 'U' FROM #TEMPBOMVALUE)
		   BEGIN
				
			    UPDATE PMT SET BOM_VALUE= A.RATE
				FROM  ORD_PLAN_BARCODE_DET B (NOLOCK) 
				JOIN #TMPPRODUCT C ON B.PRODUCT_CODE =C.product_code 
				JOIN JOBWORK_PMT PMT (NOLOCK) ON PMT.PRODUCT_CODE =C.product_code 
				JOIN
				(
					SELECT ref_row_id, SUM(RATE) AS RATE FROM #TEMPBOMVALUE
					GROUP BY ref_row_id
				) A ON C.ref_row_id =A.ref_row_id
					
		 END
		 ELSE
		 BEGIN
				   
				UPDATE A SET BOM_VALUE=0 
				FROM JOBWORK_PMT A (NOLOCK)
			    JOIN #TMPPRODUCT TMP ON A.PRODUCT_CODE =TMP.PRODUCT_CODE 
		END
		
	  INSERT JOBWORK_RECEIVE_BOM_DET	( RECEIPT_ID, REF_ROW_ID, ARTICLE_CODE,PARA1_CODE,PARA2_CODE , PURCHASE_PRICE, QUANTITY, ROW_ID,AVG_QUANTITY,ADD_AVG_QUANTITY ) 
	  SELECT 	@CKEYFIELDVAL1 AS   RECEIPT_ID,REF_ROW_ID AS  REF_ROW_ID, ARTICLE_CODE,PARA1_CODE,PARA2_CODE , PURCHASE_PRICE, 
	  QUANTITY,NEWID() AS  ROW_ID,AVG_QUANTITY, ADD_AVG_QUANTITY
	  FROM #TEMPBOMVALUE

    END  
   
 END TRY  
   
 BEGIN CATCH  
  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()  
  -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG, '''' AS MEMO_ID'  
    
  GOTO END_PROC  
 END CATCH  
   
END_PROC:  
    
    IF @NUPDATEMODE=1 AND ISNULL(@CERRORMSG,'')=''
    BEGIN
    EXEC VALIDATEXN_JWR_FIXCODE @CKEYFIELDVAL1,@NUPDATEMODE,@NSPID,@CERRORMSG OUTPUT
    END
  
 IF @@TRANCOUNT>0  
 BEGIN  
  IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')='' AND ISNULL(@BNEGSTOCKFOUND,0)=0  
  BEGIN
		UPDATE JOBWORK_RECEIPT_MST SET LAST_UPDATE=GETDATE() WHERE RECEIPT_ID=@CKEYFIELDVAL1 
		UPDATE XNLOG SET LAST_UPDATE=GETDATE() WHERE TABLENAME='JOBWORK_RECEIPT_MST'
		COMMIT TRANSACTION
  END	
  ELSE  
   ROLLBACK  
 END  
   
 IF ISNULL(@BNEGSTOCKFOUND,0)=0  
 BEGIN  
  INSERT @OUTPUT ( ERRMSG, MEMO_ID)  
  VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )  
  
  SELECT * FROM @OUTPUT   
 END   
  
 
 DELETE A from  JWR_JOBWORK_RECEIPT_DET_UPLOAD A (NOLOCK) WHERE SP_ID=@NSPID 
 DELETE A from  JWR_JOBWORK_RECEIPT_mst_UPLOAD A (NOLOCK) WHERE SP_ID=@NSPID 
 DELETE FROM JWR_JOBWORK_RECEIVE_BOM_DET_UPLOAD WHERE SP_ID =LTRIM(RTRIM(STR(@NSPID)))
END    
------------------------------------------------------ END OF PROCEDURE SAVETRAN_JWR  

