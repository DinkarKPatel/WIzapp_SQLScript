CREATE PROCEDURE SAVETRAN_GENBARCODES_PO
(    
 @CPREFIX VARCHAR(50),    
 @NSPID VARCHAR(40),
 @LOCID VARCHAR(4)='',    
 @nMode NUMERIC(1,0),
 @CERRORMSG VARCHAR(MAX) OUTPUT    
) 
AS     
BEGIN    
	 -- @NMODE : SOURCE OF BARCODE GENERATION, 1- FROM PURCHASE, 2- FROM PO    
	 --PRINT 'ROHIT 1'    
	 -- THIS PROCEDURE ASSUMES THAT THE PID TABLE IS NORMALIZED FOR UNIQUE CODING    
	 -- IF IT IS NOT NORMALIZED THEN THE PROCESS WILL FAIL    
	     
BEGIN TRY    
	     
	 DECLARE @NROWS    BIGINT,    
	   @NEANROWS   BIGINT,    
	   @NFIXROWS   BIGINT,    
	   @NCTR    BIGINT,    
	   @CPIDROWID   VARCHAR(50),    
	   @CNEXTPRODUCTCODE VARCHAR(50),    
	   @NNEXTKEYVALUE  NUMERIC(30,0),    
	   @CPIMDEPTID   VARCHAR(5),  
	   @CBIN_ALIAS	VARCHAR(10),  
	   @CLOCID    VARCHAR(4),@CHOLOCID VARCHAR(5),    
	   @CCMD NVARCHAR(MAX),@CTEMPIRDTABLE VARCHAR(MAX),@NWHCOUNT INT,    
	   @CBARCODEPREFIX VARCHAR(100),@CADDPREFIX VARCHAR(50),@DMEMODT DATETIME,    
	   @CPREFIXYEARCODE BIT,@CPREFIXLOCID BIT,@CYEARCODE CHAR(2),@CADDLOCIDPREFIX CHAR(4),    
	   @CTEMPIRMTABLE VARCHAR(500),@CCUSTOMPREFIX VARCHAR(50),@BLOOP BIT,@NPURLOCCNT INT,    
	   @BRANDOMGEN BIT,@NBARCODELEN INT,@CARTICLENO VARCHAR(300),@CARTPREFIX VARCHAR(50),    
	   @BGENEANCODES BIT,@CGENEANCODES VARCHAR(5),    
	   @CEANPREFIX VARCHAR(10),@NEANLENGTH INT,@CEANLENGTH VARCHAR(5),@CPREFIXFLOORID VARCHAR(10),  
	   @CADDFLOORIDPREFIX VARCHAR(10),@BBARCODEGENERATED BIT,
	   @CPREFIXMONTHCODE VARCHAR(10),@MONTHCODE VARCHAR(2),@CXNBARCODEPREFIX VARCHAR(50),
	   @CREATE_MANUAL_BARCODE BIT,@cMultipleFc VARCHAR(2),@cSTEP VARCHAR(10)
	  
	          
	 SELECT @CYEARCODE='',@CADDLOCIDPREFIX='',@CERRORMSG=''    
	     
	 SET @cSTEP=170.2
	 EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1


	 SET @cSTEP=170.4
	 EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1	
	 IF OBJECT_ID('TEMPDB..#BARCODES','U') IS NOT NULL    
		DROP TABLE #BARCODES    

     IF OBJECT_ID('TEMPDB..#BARCODES_ART','U') IS NOT NULL    
		DROP TABLE #BARCODES_ART
		
	 DELETE FROM GENBARCODE_ROWS WITH  (ROWLOCK) WHERE sp_id=@nSpId

	 SET @cSTEP=170.6
	 EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

	 SELECT A.ROW_ID AS PID_ROW_ID,A.PRODUCT_CODE,SRNO=CAST(a.SRNO AS INT),convert(varchar(25),'') as genbc_prefix INTO #BARCODES FROM PID01106 A (NOLOCK) WHERE 1=2    

	 select * into #BARCODES_art from #BARCODES

	     
 	 SELECT TOP 1 @CREATE_MANUAL_BARCODE= VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='CREATE_MANUAL_BARCODE' 
    SET @CREATE_MANUAL_BARCODE=ISNULL(@CREATE_MANUAL_BARCODE,0) 

	     
	 SET @cSTEP=171
	 EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
	      
	 SELECT @CLOCID = @LOCID     

	 SET @cSTEP=171.2
	 EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

	        
	 SELECT TOP 1 @CHOLOCID = [VALUE] FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION = 'HO_LOCATION_ID'    
	      
	 IF ISNULL(@CLOCID,'') = ''     
		  GOTO END_PROC      

	 SET @cSTEP=171.5
	 EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
	    
	SELECT @CPIMDEPTID = DEPT_ID,@DMEMODT=PO_DT,@CXNBARCODEPREFIX=BARCODE_PREFIX,@CBIN_ALIAS=isnull(b.bin_alias,'')
	FROM po_POM01106_upload a (nolock)
	LEFT OUTER JOIN bin b (NOLOCk) ON b.bin_id=a.BIN_ID
	WHERE SP_ID = @nSpId
   	
	IF ISNULL(@CPIMDEPTID,'') = ''    
		GOTO END_PROC    


		
	 exec SAVETRAN_GENBARCODES_COMMONSTEPS
	   @cXnType='PO',
	   @NmODE=1,
	 @nSpId=@nSpId,
	@cManualPrefix=@CXNBARCODEPREFIX,
	@cLocId=@cLocId,
	@CBIN_ALIAS='',
	@dMemoDt=@DMEMODT,
	@cErrormsg =@cErrormsg OUTPUT

	if isnull(@cErrormsg,'')<>''
		GOTO END_PROC


-- GENERATE EAN CODES 19122022
--IF EXISTS (SELECT TOP 1 'U' FROM PO_POD01106_UPLOAD A   (NOLOCK) 
--	JOIN ARTICLE B  (NOLOCK) ON A.ARTICLE_CODE=B.ARTICLE_CODE  
--	WHERE B.GEN_EAN_CODES=1 AND a.SP_ID=@NSPID)
--	BEGIN  
--		 DECLARE @CEANSOURCEABLE VARCHAR(100)  
--		  set @CEANSOURCEABLE='PO_pod01106_upload'

--		 SELECT TOP 1 @CEANPREFIX=VALUE FROM CONFIG WHERE CONFIG_OPTION='EAN_PREFIX'    
--		 SELECT TOP 1 @CEANLENGTH=VALUE FROM CONFIG WHERE CONFIG_OPTION='EAN_LENGTH'  
		 
--		 if isnull(@CEANPREFIX,'')=''
--		    select @CEANPREFIX=loc_Ean_prefix from location  where dept_id=@CLOCID

--		 IF ISNULL(@CEANLENGTH,'')=''    
--			SET @NEANLENGTH=12    
--		 ELSE    
--			SET @NEANLENGTH=CONVERT(INT,@CEANLENGTH)     
	     
--	     		 SET @cSTEP=172
--		 EXEC GETNEXTEANCODE @NEANLENGTH,@CEANPREFIX,1,'', @NEANROWS,@CEANSOURCEABLE,@nSpId,@CERRORMSG OUTPUT   
	
--		 IF @CERRORMSG<>''  
--		 BEGIN  
--			  PRINT 'GENBARCODE-RETURND-5'  
--			  GOTO END_PROC  
--		 END    

--	END  
	
INS_CODES:    

	 SET @cSTEP='174.3.1'
	 EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

	 --IF @@SPID=68
		--SELECT 'CHECK #BARCODES',* FROM #BARCODES

	-- UPDATING PID TABLE WITH THE NEWLY GENERATED BARCODES    
	UPDATE a SET PRODUCT_CODE = B.PRODUCT_CODE    
	FROM #BARCODES B   
	join PO_POD01106_UPLOAD a (nolock) on   B.PID_ROW_ID=a.row_id 
	WHERE a.PRODUCT_CODE <> B.PRODUCT_CODE 
	and a.sp_id= @NSPID

    SET @cSTEP='174.3.2'
	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
		       
	UPDATE a SET PRODUCT_CODE = B.PRODUCT_CODE    
	FROM GENBARCODE_ROWS B (NOLOCK)  
	join PO_POD01106_UPLOAD a (nolock) on   B.PID_ROW_ID=a.row_id AND b.sp_id=a.sp_id
	WHERE a.PRODUCT_CODE <> B.PRODUCT_CODE 
	and a.sp_id= @NSPID

	SET @cSTEP='174.3.4'
	EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

		  
	IF EXISTS (SELECT TOP 1 'U' FROM PO_POD01106_UPLOAD A   (NOLOCK) 
	JOIN ARTICLE B  (NOLOCK) ON A.ARTICLE_CODE=B.ARTICLE_CODE  
	WHERE B.GEN_EAN_CODES=1 AND a.SP_ID=@NSPID)
	BEGIN

		 SET @cSTEP=174.4
		 EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
		  
		UPDATE A SET PRODUCT_CODE=X.PRODUCT_CODE  
		FROM PO_POD01106_UPLOAD A  (NOLOCK)
		JOIN  
		(  
		SELECT ROW_NUMBER() OVER (PARTITION BY  A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE,A.PURCHASE_PRICE ORDER BY  A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE,A.PURCHASE_PRICE) AS [TEMP_SR_NO],  
		A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE,A.PURCHASE_PRICE,PRODUCT_CODE,A.PO_ID  
		FROM PO_POD01106_UPLOAD A  (NOLOCK)
		JOIN ARTICLE B  (NOLOCK) ON A.ARTICLE_CODE=B.ARTICLE_CODE  
		WHERE B.GEN_EAN_CODES=1 AND A.SP_ID=@NSPID  
		)X ON A.ARTICLE_CODE=X.ARTICLE_CODE AND A.PARA1_CODE=X.PARA1_CODE AND A.PARA2_CODE=X.PARA2_CODE AND A.PO_ID=X.PO_ID  
		WHERE X.TEMP_SR_NO=1  
		AND A.SP_ID=@NSPID  
		 
	END

	 SET @cSTEP=174.6
	 EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1
	 
	   IF EXISTS (SELECT TOP 1 a.po_id FROM PO_POD01106_UPLOAD a (NOLOCK) JOIN article b (NOLOCK) ON a.ARTICLE_CODE=b.article_code
			  WHERE a.sp_id=@nSpId AND ISNULL(b.alternate_uom_applicable,0)=1 AND ISNULL(a.alternate_uom_code,'')='')
		UPDATE a WITH (ROWLOCK) SET  alternate_uom_code=b.alternate_uom_code,alt_uom_conversion_factor=b.alt_uom_conversion_factor
		FROM PO_POD01106_UPLOAD a  JOIN article b (NOLOCK) ON a.ARTICLE_CODE=b.article_code
		WHERE a.sp_id=@nSpId AND ISNULL(b.alternate_uom_applicable,0)=1 AND ISNULL(a.alternate_uom_code,'')=''

	 SET @cSTEP=174.62
	 EXEC SP_CHKXNSAVELOG 'PO',@cSTEP,0,@NSPID,'',1

	
	
	--Ean generation Procedure insert barcode in sku
	--if @CGENEANCODES=1
	--begin
	     
	--	 Delete a  from GENBARCODE_ROWS A (nolock)
	--	 join Article art (nolock) on art.article_code =a.ARTICLE_CODE 
	--	 where isnull(art.gen_ean_codes,0) =1

	--end

	
	DECLARE @dLastUpdate DATETIME
	SELECT @dLastUpdate=getdate()

	
	INSERT SKU (PRODUCT_CODE, ARTICLE_CODE, PARA1_CODE, PARA2_CODE, PARA3_CODE,PARA4_CODE, PARA5_CODE, PARA6_CODE
	,PURCHASE_PRICE, MRP, LAST_UPDATE,INV_NO,INV_DT, RECEIPT_DT, AC_CODE
	,FORM_ID,WS_PRICE,BARCODE_CODING_SCHEME,PRODUCT_NAME,HSN_CODE,alternate_uom_code,alt_uom_conversion_factor,VENDOR_EAN_NO,purchaseLocId,FIX_MRP )  
	   
	SELECT distinct a.PRODUCT_CODE, a.ARTICLE_CODE, a.PARA1_CODE, a.PARA2_CODE, a.PARA3_CODE,a.PARA4_CODE, a.PARA5_CODE, 
	a.PARA6_CODE,a.PURCHASE_PRICE, a.MRP,@dLastUpdate as LAST_UPDATE,'' as INV_NO,'' as INV_DT,'' as  RECEIPT_DT,
	b.AC_CODE,'0000000' as FORM_ID,a.wholesale_price as WS_PRICE,c.CODING_SCHEME,C.ARTICLE_NAME  as PRODUCT_NAME,
	a.HSN_CODE,a.alternate_uom_code,a.alt_uom_conversion_factor,a.VENDOR_EAN_NO,@LOCID as Depr_id,a.Fix_mrp 
	FROM PO_POD01106_UPLOAD A (NOLOCK)   
	JOIN PO_POM01106_UPLOAD B (NOLOCK) ON A.SP_ID = B.SP_ID    
	JOIN ARTICLE C (NOLOCK) ON A.ARTICLE_CODE = C.ARTICLE_CODE    
	JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=C.SUB_SECTION_CODE
	JOIN (SELECT DISTINCT pid_row_id FROM GENBARCODE_ROWS a (NOLOCK) WHERE sp_id=@nSpId) d ON d.PID_ROW_ID=a.row_id
	WHERE B.SP_ID = @nSpId  AND ISNULL(A.PRODUCT_CODE,'')<>''  

     INSERT SKU_OH( PRODUCT_CODE, DISCOUNT_AMOUNT, TAX_AMOUNT, FREIGHT, OTHER_CHARGES, ROUND_OFF, VALUE_ADD,EXCISE_DUTY_AMOUNT )    
		   SELECT DISTINCT a.PRODUCT_CODE,0 AS  DISCOUNT_AMOUNT, 0 AS TAX_AMOUNT,0 AS  FREIGHT,
		   0 AS OTHER_CHARGES, 0 AS ROUND_OFF,0 AS  VALUE_ADD,0 AS  EXCISE_DUTY_AMOUNT  
	 FROM PO_POD01106_UPLOAD  a 
	 left join  sku_oh b (NOLOCK) ON a.product_code=b.product_CODE
	 WHERE a.SP_ID = @nSpId  AND ISNULL(A.PRODUCT_CODE,'')<>'' and   b.product_code IS NULL
	


END TRY     
     
BEGIN CATCH    
	
	
  SET @CERRORMSG = 'PROCEDURE SAVETRAN_GENBARCODES_PO : STEP- ' + LTRIM(@cstep) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()    
    
END CATCH    
     
END_PROC:    
     
END 
