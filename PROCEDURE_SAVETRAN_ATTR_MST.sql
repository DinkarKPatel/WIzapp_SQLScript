CREATE PROCEDURE SAVETRAN_ATTR_MST  
(  
 @SOURCE  VARCHAR(100),  
 @SOURCE1 VARCHAR(100),  
 @DEST  VARCHAR(100),  
 @CONFIG  VARCHAR(100),  
 @OPENKEY BIT,
 @LOC VARCHAR(10)
 
)    
AS    
BEGIN    
DECLARE @CCMD NVARCHAR(MAX),@TABLE_NAME VARCHAR(100),@SNO VARCHAR(2),@ERROR VARCHAR(MAX)='',@STEP FLOAT    
,@PRINT_ON BIT=1,@CODE_LEN INT=15,@MAX VARCHAR(15) 
SET NOCOUNT ON    
    
BEGIN TRY    
BEGIN TRANSACTION    
SET @STEP=0    
SET @CCMD='DELETE ['+@SOURCE+'] WHERE ISNULL(KEY_NAME,'''')='''';'    
IF @PRINT_ON=1 PRINT @CCMD  
EXEC SP_EXECUTESQL @CCMD    
    
SET @STEP=1    
SET @CCMD='IF NOT EXISTS(SELECT TOP 1 COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME=''GEN_KEY_CODE'' AND TABLE_NAME='''+@SOURCE+''')    
ALTER TABLE ['+@SOURCE+'] ADD GEN_KEY_CODE VARCHAR('+CAST(@CODE_LEN AS VARCHAR)+');'  
PRINT  @CCMD   
EXEC SP_EXECUTESQL @CCMD    
    
SET @STEP=1.1    

UPDATE CONFIG_ATTR SET TABLE_CAPTION=@CONFIG,OPEN_KEY=@OPENKEY WHERE TABLE_NAME=@DEST  
    
SET @STEP=2.0  
SET @CCMD=';WITH CTE AS  
(SELECT M.SUB_SECTION_CODE,R=ROW_NUMBER()OVER(PARTITION BY M.SUB_SECTION_CODE ORDER BY M.SUB_SECTION_CODE)   
FROM ['+@SOURCE1+'] M)
DELETE FROM CTE WHERE R>1'  
IF @PRINT_ON=1 PRINT '2.0--'+CHAR(13)+@CCMD    
EXEC(@CCMD)    
  
SET @STEP=20    
SET @CCMD='MERGE SD_ATTR_AVATAR D    
USING (SELECT CHK,SUB_SECTION_CODE FROM ['+@SOURCE1+']) S ON D.SUB_SECTION_CODE=S.SUB_SECTION_CODE    
WHEN MATCHED THEN UPDATE SET '+@DEST+'=ISNULL(S.CHK,0)    
WHEN NOT MATCHED THEN INSERT (SUB_SECTION_CODE,'+@DEST+') VALUES (S.SUB_SECTION_CODE,ISNULL(S.CHK,0));'    

print @CCMD    
EXEC SP_EXECUTESQL @CCMD   
 

    
SET @STEP=3    
SET @SNO=SUBSTRING(@DEST,5,CHARINDEX('_',@DEST)-5)    
IF @PRINT_ON=1 PRINT '3--'+CHAR(13)+@SNO    
    
--SET @STEP=4    
--SET @CCMD='SELECT @MAX=MAX(ATTR'+@SNO+'_KEY_CODE) FROM ['+@DEST+']'    
--EXEC SP_EXECUTESQL @CCMD,N'@MAX VARCHAR(15) OUTPUT',@MAX OUTPUT    
--SET @MAX=ISNULL(@MAX,REPLICATE('0',@CODE_LEN))    
--IF @PRINT_ON=1 PRINT '4--'+CHAR(13)+@MAX    
    
--SET @STEP=5    
--SET @CCMD='WITH CTE AS     
--(SELECT *,NEW_CODE=RIGHT(REPLICATE(''0'','+CAST(@CODE_LEN AS VARCHAR)+')+'''+@MAX+'''+CAST(ROW_NUMBER()OVER(PARTITION BY TABLE_NAME ORDER BY KEY_NAME) AS VARCHAR),'+CAST(@CODE_LEN AS VARCHAR)+')     
-- FROM ['+@SOURCE+'] S     
-- WHERE (LEN(ISNULL(KEY_CODE,''''))>'+CAST(@CODE_LEN AS VARCHAR)+' AND ISNULL(KEY_NAME,'''') <>'''') OR ISNULL(KEY_CODE,'''') LIKE ''%-%''    
--)    
--UPDATE S SET GEN_KEY_CODE=C.NEW_CODE FROM ['+@SOURCE+'] S JOIN CTE C ON S.KEY_CODE=C.KEY_CODE AND (LEN(S.KEY_CODE)>'+CAST(@CODE_LEN AS VARCHAR)+' OR ISNULL(S.KEY_CODE,'''') LIKE ''%-%'')'    
--IF @PRINT_ON=1 PRINT '5--'--+CHAR(13)+@CCMD    
----EXEC SP_EXECUTESQL @CCMD    
  
  
DECLARE @CNEWKEYVAL VARCHAR(100),@TAB VARCHAR(100),@NAME VARCHAR(100),@CODE VARCHAR(100),@ID VARCHAR(100)  


IF ISNULL(@LOC,'')=''
 BEGIN
    SET @ERROR =  ' LOCATION ID CAN NOT BE BLANK  '  
	GOTO END_PROC    
 END

IF OBJECT_ID('tempdb..##ATTR') IS NOT NULL DROP TABLE ##ATTR  
SET @CCMD=N'SELECT * INTO ##ATTR FROM ['+@SOURCE+'] WHERE KEY_CODE LIKE ''LATER%'''  
EXEC(@CCMD)  
  
DECLARE ATTR CURSOR FOR SELECT TABLE_NAME,KEY_NAME,KEY_CODE FROM ##ATTR  
OPEN ATTR  
FETCH NEXT FROM ATTR INTO @TAB,@NAME,@CODE  
WHILE @@FETCH_STATUS=0  
  BEGIN  
     SET @ID=REPLACE(@TAB,'_MST','_KEY_CODE')  
     EXEC GETNEXTKEY @TAB,@ID,7,@LOC,1,'',1,@CNEWKEYVAL OUTPUT    
     SET @CCMD=N'UPDATE ['+@SOURCE+'] SET GEN_KEY_CODE='''+@CNEWKEYVAL+''' WHERE KEY_CODE='''+@CODE+''''  
  EXEC(@CCMD)       
     FETCH NEXT FROM ATTR INTO @TAB,@NAME,@CODE  
  END  
CLOSE ATTR  
DEALLOCATE ATTR  
    
--SET @CCMD=N'SELECT ''VISHAL'',* FROM ['+@SOURCE+'];  
--SELECT KEY_CODE=CASE WHEN KEY_CODE LIKE ''LATER%'' OR KEY_CODE LIKE ''%-%'' THEN GEN_KEY_CODE ELSE KEY_CODE END,KEY_NAME,GEN_KEY_CODE,KEY_ALIAS,ISNULL(INACTIVE,0)INACTIVE FROM ['+@SOURCE+']'  
----EXEC(@CCMD)  
  
SET @STEP=6    
SET @CCMD='MERGE ['+@DEST+'] D '+CHAR(13)    
SET @CCMD+='USING (SELECT KEY_CODE=CASE WHEN KEY_CODE LIKE ''LATER%'' OR KEY_CODE LIKE ''%-%'' THEN GEN_KEY_CODE ELSE KEY_CODE END,KEY_NAME,GEN_KEY_CODE,KEY_ALIAS,ISNULL(INACTIVE,0)INACTIVE FROM ['+@SOURCE+']) S ON D.ATTR'+@SNO+'_KEY_CODE=S.KEY_CODE '+CHAR(13)    
SET @CCMD+='WHEN MATCHED THEN UPDATE SET D.ATTR'+@SNO+'_KEY_NAME=S.KEY_NAME,D.ATTR'+@SNO+'_ALIAS=S.KEY_ALIAS,D.ATTR'+@SNO+'_INACTIVE=S.INACTIVE '+CHAR(13)    
SET @CCMD+='WHEN NOT MATCHED THEN INSERT (ATTR'+@SNO+'_KEY_CODE,ATTR'+@SNO+'_KEY_NAME,ATTR'+@SNO+'_ALIAS,ATTR'+@SNO+'_INACTIVE) VALUES(S.KEY_CODE,S.KEY_NAME,S.KEY_ALIAS,S.INACTIVE);'    
IF @PRINT_ON=1 PRINT '6--'+CHAR(13)+@CCMD    
EXEC SP_EXECUTESQL @CCMD    
    
    
SET @STEP=7    
SET @CCMD='IF OBJECT_ID('''+@SOURCE+''') IS NOT NULL DROP TABLE ['+@SOURCE+'];'    
IF @PRINT_ON=1 PRINT '7--'+CHAR(13)+@CCMD    
EXEC SP_EXECUTESQL @CCMD    
END TRY    
    
BEGIN CATCH    
  SET @ERROR='PROCEDURE SAVETRAN_ATTR_MST: STEP- ' + LTRIM(CAST(@STEP AS VARCHAR)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()    
END CATCH    
      
END_PROC:    
SET @CCMD='SELECT SUB_SECTION_CODE,'+@DEST+' FROM SD_ATTR_AVATAR WHERE SUB_SECTION_CODE IN (SELECT SUB_SECTION_CODE FROM ['+@SOURCE1+'] WHERE CHK=1)'    
--PRINT @CCMD    
IF @@TRANCOUNT>0 AND @ERROR=''    
   COMMIT    
ELSE    
   ROLLBACK    
SELECT @ERROR ERR_MSG          
--REPLACE(REPLACE(@DEST,'ATTR',''),'_MST','')    
SET NOCOUNT OFF    
END--PROC    