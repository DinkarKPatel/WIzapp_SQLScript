CREATE PROCEDURE SP3S_GETMBO_BARCODEWISESTK 
@CLOCID VARCHAR(5),
@NIMPORTMODE INT
AS
BEGIN
	DECLARE @CSTEP VARCHAR(10),@CEANCOLUMN VARCHAR(20),@CCMD NVARCHAR(MAX),@BSTOCKNOTFOUND BIT,@CERRORMSG VARCHAR(MAX)
	
	BEGIN TRY
		
		SET @CSTEP=5
	
		IF OBJECT_ID('TEMPDB..#SLS_EXCHANGE','U') IS NOT NULL
			DROP TABLE #SLS_EXCHANGE

		IF OBJECT_ID('TEMPDB..#SLS_EAN','U') IS NOT NULL
			DROP TABLE #SLS_EAN
							
		SELECT PRODUCT_CODE AS EAN_NO,SUM(QUANTITY) AS SOLD_QTY	INTO #SLS_EXCHANGE FROM SLS_MBODATA 
		WHERE DEPT_ID=@CLOCID GROUP BY PRODUCT_CODE
		HAVING SUM(QUANTITY)=0
			
		SET @CSTEP=10
		SELECT PRODUCT_CODE AS EAN_NO,SUM(QUANTITY) AS SOLD_QTY
		INTO #SLS_EAN FROM SLS_MBODATA 
		WHERE QUANTITY>0 AND DEPT_ID=@CLOCID GROUP BY PRODUCT_CODE
		--HAVING SUM(QUANTITY)>0
		UNION
		SELECT PRODUCT_CODE AS EAN_NO,SUM(QUANTITY) AS SOLD_QTY
		FROM SLS_MBODATA 
		WHERE DEPT_ID=@CLOCID AND QUANTITY<0 GROUP BY PRODUCT_CODE
		
		
		
		SET @CEANCOLUMN=(CASE WHEN @NIMPORTMODE=1 THEN 'PRODUCT_CODE' WHEN @NIMPORTMODE=2 THEN 'VENDOR_EAN_NO' 
							  ELSE 'ONLINE_PRODUCT_CODE' END)
		
		SET @CSTEP=30
		SET @CCMD=N'SELECT A.'+@CEANCOLUMN+',A.PRODUCT_CODE,SUM(CASE WHEN XN_TYPE IN (''CHI'',''SLR'') THEN XN_QTY WHEN XN_TYPE 
					IN (''CHO'',''SLS'') THEN -XN_QTY ELSE 0 END) AS STOCK_QTY,0 AS SOLD_QTY FROM 
					(SELECT SKU.'+@CEANCOLUMN+',A.PRODUCT_CODE,SUM(QUANTITY) AS XN_QTY,''CHI'' AS XN_TYPE
					FROM IND01106 A (NOLOCK) JOIN INM01106 B (NOLOCK) ON A.INV_ID=B.INV_ID
					JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
					JOIN #SLS_EAN C ON C.EAN_NO=SKU.'+@CEANCOLUMN+'
					WHERE B.PARTY_DEPT_ID='''+@CLOCID+''' AND CANCELLED=0 AND C.SOLD_QTY>0
					GROUP BY SKU.'+@CEANCOLUMN+',A.PRODUCT_CODE
					UNION ALL
					SELECT SKU.'+@CEANCOLUMN+',A.PRODUCT_CODE,SUM(QUANTITY) AS XN_QTY,''CHO'' AS XN_TYPE
					FROM CND01106 A (NOLOCK) JOIN CNM01106 B (NOLOCK) ON A.CN_ID=B.CN_ID
					JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
					JOIN #SLS_EAN C ON C.EAN_NO=SKU.'+@CEANCOLUMN+'
					WHERE B.PARTY_DEPT_ID='''+@CLOCID+''' AND CANCELLED=0 AND C.SOLD_QTY>0
					GROUP BY SKU.'+@CEANCOLUMN+',A.PRODUCT_CODE
					UNION ALL
					SELECT SKU.'+@CEANCOLUMN+',A.PRODUCT_CODE,SUM(QUANTITY) AS XN_QTY,''SLS'' AS XN_TYPE
					FROM CMD01106 A (NOLOCK) JOIN CMM01106 B (NOLOCK) ON A.CM_ID=B.CM_ID
					JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
					JOIN #SLS_EAN C ON C.EAN_NO=SKU.'+@CEANCOLUMN+'
					
					LEFT OUTER JOIN 
					(SELECT MEMO_NO,''01''+DBO.FN_GETFINYEAR(MEMO_DT) AS FIN_YEAR FROM SLS_MBODATA
					 WHERE DEPT_ID='''+@CLOCID+''') D ON A.DEPT_ID+''-''+D.MEMO_NO=B.REF_NO 
					AND B.FIN_YEAR=D.FIN_YEAR
					WHERE B.location_code ='''+@CLOCID+''' AND CANCELLED=0 AND D.MEMO_NO IS  NULL
					AND C.SOLD_QTY>0
					GROUP BY SKU.'+@CEANCOLUMN+',A.PRODUCT_CODE
					) A GROUP BY '+@CEANCOLUMN+',PRODUCT_CODE
					HAVING SUM(CASE WHEN XN_TYPE IN (''CHI'',''SLR'') THEN XN_QTY
					WHEN XN_TYPE IN (''CHO'',''SLS'') THEN -XN_QTY ELSE 0 END)>0'
		
		
		PRINT @CCMD
		
			
		INSERT #VEAN_PMT (EAN_NO,PRODUCT_CODE,STOCK_QTY,SOLD_QTY)
		EXEC SP_EXECUTESQL @CCMD

		--SELECT * FROM #VEAN_PMT
		
		SET @CSTEP=40
		SET @CCMD=N'SELECT '+@CEANCOLUMN+',A.PRODUCT_CODE,SUM(QUANTITY) AS SOLD_QTY,0 AS STOCK_QTY FROM 
					CMD01106 A (NOLOCK) JOIN CMM01106 B (NOLOCK) ON A.CM_ID=B.CM_ID
					JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
					JOIN #SLS_EAN C ON C.EAN_NO=SKU.'+@CEANCOLUMN+'
					LEFT OUTER JOIN 
					(SELECT MEMO_NO,''01''+DBO.FN_GETFINYEAR(MEMO_DT) AS FIN_YEAR FROM SLS_MBODATA
					 WHERE DEPT_ID='''+@CLOCID+''') D ON A.DEPT_ID+''-''+D.MEMO_NO=B.REF_NO 
					AND B.FIN_YEAR=D.FIN_YEAR
					WHERE B.location_code ='''+@CLOCID+''' AND CANCELLED=0 AND D.MEMO_NO IS  NULL
					AND C.SOLD_QTY<0 AND A.QUANTITY>0
					GROUP BY SKU.'+@CEANCOLUMN+',A.PRODUCT_CODE'
			
		PRINT @CCMD
					
		INSERT #VEAN_PMT (EAN_NO,PRODUCT_CODE,SOLD_QTY,STOCK_QTY)
		EXEC SP_EXECUTESQL @CCMD 
		
				
		SET @CSTEP=40
		SET @CCMD=N'SELECT '+@CEANCOLUMN+',SKU.PRODUCT_CODE,SUM(CASE WHEN A.SOLD_QTY > 0 THEN A.SOLD_QTY ELSE 0 END) AS SOLD_QTY,0 AS STOCK_QTY FROM 
		          #SLS_EAN A 
					JOIN SKU (NOLOCK) ON  A.EAN_NO=SKU.'+@CEANCOLUMN+'
					JOIN #SLS_EAN D ON D.EAN_NO=A.EAN_NO
					LEFT OUTER JOIN #VEAN_PMT C ON C.EAN_NO=A.EAN_NO AND C.SOLD_QTY > 0 
										
				    WHERE  C.EAN_NO IS  NULL
					AND A.SOLD_QTY>0 AND D.SOLD_QTY < 0
					GROUP BY SKU.'+@CEANCOLUMN+',SKU.PRODUCT_CODE'
			
		PRINT @CCMD
					
		INSERT #VEAN_PMT (EAN_NO,PRODUCT_CODE,SOLD_QTY,STOCK_QTY)
		EXEC SP_EXECUTESQL @CCMD 
				
		
		GOTO END_PROC   
	END TRY
	
	BEGIN CATCH
		SET @CERRORMSG='PROCEDURE FOR STOCK SP3S_GETMBO_BARCODEWISESTK : STEP #'+@CSTEP+' '+ERROR_MESSAGE()
		GOTO END_PROC
	END CATCH    

END_PROC:	
	 SET @BSTOCKNOTFOUND=0

	IF ISNULL(@CERRORMSG,'')=''
	BEGIN
		SELECT TOP 1 @CERRORMSG='STOCK NOT FOUND',@BSTOCKNOTFOUND=1 FROM 
		(SELECT PRODUCT_CODE,SUM(QUANTITY) AS SOLD_QTY FROM SLS_MBODATA A
		WHERE A.DEPT_ID=@CLOCID GROUP BY PRODUCT_CODE
		HAVING SUM(QUANTITY)>0) A
		LEFT OUTER JOIN
		(SELECT EAN_NO,SUM(STOCK_QTY) AS STOCK_QTY FROM  #VEAN_PMT
		 GROUP BY EAN_NO) B ON B.EAN_NO=A.PRODUCT_CODE
		LEFT OUTER JOIN #SLS_EXCHANGE C ON C.EAN_NO=A.PRODUCT_CODE
		WHERE ISNULL(A.SOLD_QTY,0)>ISNULL(B.STOCK_QTY,0) AND C.EAN_NO IS NULL
	END
	
	DECLARE @CSTOCKNOTFOUND VARCHAR(2)
	SET @CSTOCKNOTFOUND=(CASE WHEN @BSTOCKNOTFOUND=1 THEN '1' ELSE '0' END)
	
	PRINT 'STOCK NOT FOUND :'+@CSTOCKNOTFOUND
	IF ISNULL(@BSTOCKNOTFOUND,0)=1
		INSERT #TERROR
		SELECT DISTINCT A.PRODUCT_CODE,'STOCK NOT FOUND :(SOLD:'+LTRIM(RTRIM(STR(ISNULL(A.SOLD_QTY,0))))+',STOCK:'+LTRIM(RTRIM(STR(ISNULL(B.STOCK_QTY,0))))+')' AS ERRMSG
		FROM 
		(SELECT PRODUCT_CODE,SUM(QUANTITY) AS SOLD_QTY FROM SLS_MBODATA A
		 WHERE A.DEPT_ID=@CLOCID GROUP BY PRODUCT_CODE
		 HAVING SUM(QUANTITY)>0) A
		LEFT OUTER JOIN 
		(SELECT EAN_NO,SUM(STOCK_QTY) AS STOCK_QTY FROM  #VEAN_PMT
		 GROUP BY EAN_NO) B ON B.EAN_NO=A.PRODUCT_CODE
		LEFT OUTER JOIN #SLS_EXCHANGE C ON C.EAN_NO=A.PRODUCT_CODE
		WHERE ISNULL(A.SOLD_QTY,0)>ISNULL(B.STOCK_QTY,0) AND C.EAN_NO IS NULL
	ELSE
		INSERT #TERROR
		SELECT '' AS PRODUCT_CODE,ISNULL(@CERRORMSG,'') AS ERRMSG	
END
