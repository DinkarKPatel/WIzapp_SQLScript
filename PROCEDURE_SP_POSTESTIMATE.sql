CREATE PROCEDURE SP_POSTESTIMATE
(
	@DTFROM		DATETIME ='',
	@DTTO		DATETIME='',
	@CDEPT_ID VARCHAR(4)=''
)

AS
BEGIN
--(dinkar) Replace  left(memoid,2) to Location_code 
DECLARE @PRODUCT_CODE TABLE (SR_NO NUMERIC(10),PRODUCT_CODE VARCHAR(100),MRP NUMERIC(14,2))
--DECLARE @PRICE_STOCK_NA TABLE (SR_NO NUMERIC(5),PRICE NUMERIC(14,2))

INSERT INTO @PRODUCT_CODE
SELECT ROW_NUMBER() OVER(ORDER BY PRODUCT_CODE) ,PRODUCT_CODE,A.MRP
FROM SKU A
JOIN ARTICLE B ON A.ARTICLE_CODE=B.ARTICLE_CODE
WHERE B.STOCK_NA=1 AND A.MRP>0
ORDER BY PRODUCT_CODE



DECLARE @CMM TABLE  
 (  
	[CM_NO] [CHAR](15),
	[CM_DT] [DATETIME] ,
	[CM_MODE] [NUMERIC](1, 0) ,
	[SUBTOTAL] [NUMERIC](10, 2) ,
	[SUBTOTAL_R] [NUMERIC](10, 2) ,
	[DISCOUNT_PERCENTAGE] [NUMERIC](7, 3),
	[DISCOUNT_AMOUNT] [NUMERIC](10, 3) ,
	[NET_AMOUNT] [NUMERIC](10, 2) ,
	[CUSTOMER_CODE] [CHAR](12) ,
	[CANCELLED] [BIT] ,
	[REMARKS] [VARCHAR](254) NULL,
	[USER_CODE] [CHAR](7) ,
	[LAST_UPDATE] [DATETIME] ,
	[EXEMPTED] [BIT] ,
	[COMPUTER_NAME] [VARCHAR](50) ,
	[SENT_TO_HO] [BIT] ,
	[CM_TIME] [DATETIME] ,
	[CM_ID] [VARCHAR](22) ,
	[REF_CM_ID] [VARCHAR](22) ,
	[FIN_YEAR] [VARCHAR](10) ,
	[ATD_CHARGES] [NUMERIC](10, 2) ,
	[COPIES_PTD] [INT] ,
	[ROUND_OFF] [NUMERIC](10, 2) ,
	[MEMO_TYPE] [NUMERIC](1, 0) ,
	[PAY_MODE] [INT] ,
	[POSTEDINAC] [BIT],
	[FC_RATE] [NUMERIC](10,2),
	[DT_CODE] [VARCHAR](20),
	[BIN_ID] [VARCHAR](20),
	[PARTY_STATE_CODE][CHAR](2)
 )  
  
  
 DECLARE @CMD TABLE   
 (  
	[CM_ID] [VARCHAR](22) ,
	[RFNET] [NUMERIC](10, 2) NULL,
	[TAX_TYPE] [NUMERIC](5, 0) ,
	[TAX_METHOD] [NUMERIC](5, 0) ,
	[PRODUCT_CODE] [VARCHAR](50) ,
	[QUANTITY] [NUMERIC](10, 2) ,
	[MRP] [NUMERIC](10, 2) ,
	[NET] [NUMERIC](10, 2) ,
	[DISCOUNT_PERCENTAGE] [NUMERIC](7, 3) ,
	[DISCOUNT_AMOUNT] [NUMERIC](10, 2) ,
	[CARD_DISCOUNT_PERCENTAGE] [NUMERIC](7, 3) ,
	[CARD_DISCOUNT_AMOUNT] [NUMERIC](10, 2) ,
	[BASIC_DISCOUNT_PERCENTAGE] [NUMERIC](7, 3) ,
	[BASIC_DISCOUNT_AMOUNT] [NUMERIC](10, 2) ,		
	[ROW_ID] [VARCHAR](40) ,
	[LAST_UPDATE] [DATETIME] ,
	[TS] [TIMESTAMP] ,
	[TAX_PERCENTAGE] [NUMERIC](10, 2) ,
	[TAX_AMOUNT] [NUMERIC](10, 2) NULL,
	[EMP_CODE] [CHAR](7) NULL,
	[SLSDET_ROW_ID] [VARCHAR](50) ,
	[BIN_ID] [VARCHAR](20),
	[DEPT_ID] [VARCHAR](5),
	REF_CMD_ROW_ID VARCHAR(40),
	MANUAL_DISCOUNT BIT,
	ITEM_ROUND_OFF NUMERIC(10,2),
	CMM_DISCOUNT_AMOUNT NUMERIC(10,3),
	REF_SLS_MEMO_NO VARCHAR(40),
	REF_SLS_MEMO_DT DATETIME
 )
 
 DECLARE @PAYMODE_XN_DET TABLE 
 (
	[MEMO_ID] [VARCHAR](40) ,
	[XN_TYPE] [VARCHAR](10) ,
	[PAYMODE_CODE] [CHAR](7) ,
	[REMARKS] [VARCHAR](100) ,
	[ROW_ID] [VARCHAR](40) ,
	[AMOUNT] [NUMERIC](10, 2) ,
	[LAST_UPDATE] [DATETIME] ,
	[TS] [TIMESTAMP] ,
	[REF_NO] [VARCHAR](100) ,
	[ADJ_MEMO_ID] [VARCHAR](22) ,
	[CURRENCY_CONVERSION_RATE] [NUMERIC](10, 2)
)  



IF OBJECT_ID('TEMDB..#TMPCMD','U') IS NOT NULL
	DROP TABLE #TMPCMD
	
DECLARE @CCMD NVARCHAR(MAX),@NCMMDISCAMT NUMERIC(10,3)


SELECT ROW_ID INTO #TMPCMD FROM CMD01106 WHERE 1=2

DECLARE @DTCM_DT DATETIME,@NCTR NUMERIC(5),@NBILLCNT INT,@CCURLOCID VARCHAR(5)

SET @NCTR=1

DECLARE CURESTIMATE CURSOR
FOR
SELECT CM_DT,COUNT(*) AS CNT 
FROM CMM01106 A (NOLOCK) 
WHERE CM_ID IN 
(SELECT A.CM_ID FROM CMD01106 A JOIN CMM01106 B ON A.CM_ID=B.CM_ID
 JOIN PID01106 C ON C.PRODUCT_CODE=A.PRODUCT_CODE
 JOIN PIM01106 D ON D.MRR_ID=C.MRR_ID
 WHERE B.CM_DT BETWEEN @DTFROM AND @DTTO AND B.CANCELLED=0 AND B.MEMO_TYPE=1
 AND D.MEMO_TYPE=2)
 AND a.location_Code =@CDEPT_ID 
 GROUP BY CM_DT
 
OPEN CURESTIMATE
FETCH NEXT FROM CURESTIMATE INTO @DTCM_DT,@NBILLCNT
WHILE @@FETCH_STATUS=0
BEGIN
	
	
	INSERT INTO @CMM (CM_NO,CM_ID,CM_DT,NET_AMOUNT,SUBTOTAL,SUBTOTAL_R,DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT,CM_MODE,CUSTOMER_CODE,ATD_CHARGES,ROUND_OFF,MEMO_TYPE,BIN_ID,PARTY_STATE_CODE)
	SELECT 'LATER-'+LTRIM(RTRIM(STR(@NCTR))),'LATER-'+LTRIM(RTRIM(STR(@NCTR))),@DTCM_DT,SUM(B.NET) AS NET_AMOUNT,
	SUM(CASE WHEN QUANTITY>0 THEN B.NET ELSE 0 END)  AS SUBTOTAL,SUM(CASE WHEN QUANTITY<0 THEN B.NET ELSE 0 END)  AS SUBTOTAL_R,
	0,0,3,'000000000000',0,0,2 AS MEMO_TYPE,'000' AS BIN_ID,
	A.PARTY_STATE_CODE
	FROM CMM01106 A
	JOIN CMD01106 B ON B.CM_ID=A.CM_ID
	WHERE A.CANCELLED=0 AND CM_MODE=1  AND (A.CM_DT BETWEEN @DTFROM AND @DTTO)
	AND B.PRODUCT_CODE IN (SELECT PRODUCT_CODE  
	FROM PID01106 A1 
	JOIN PIM01106 B1 ON B1.MRR_ID=A1.MRR_ID WHERE A.MEMO_TYPE=1 AND B1.MEMO_TYPE=2)
	AND A.CM_DT=@DTCM_DT
	AND a.location_Code =@CDEPT_ID 
	GROUP BY A.CM_DT,A.PARTY_STATE_CODE

	INSERT INTO @CMD (CM_ID,ROW_ID,PRODUCT_CODE,MRP,QUANTITY,DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT,BASIC_DISCOUNT_PERCENTAGE,BASIC_DISCOUNT_AMOUNT,
	CARD_DISCOUNT_PERCENTAGE,CARD_DISCOUNT_AMOUNT,NET,EMP_CODE,BIN_ID,DEPT_ID,REF_CMD_ROW_ID,TAX_PERCENTAGE,TAX_AMOUNT,TAX_METHOD,CMM_DISCOUNT_AMOUNT,
	ITEM_ROUND_OFF,REF_SLS_MEMO_NO,REF_SLS_MEMO_DT)
	SELECT 'LATER-'+LTRIM(RTRIM(STR(@NCTR))),'LATER' AS ROW_ID,B.PRODUCT_CODE,B.MRP,B.QUANTITY,B.DISCOUNT_PERCENTAGE,
	B.DISCOUNT_AMOUNT,BASIC_DISCOUNT_PERCENTAGE,BASIC_DISCOUNT_AMOUNT,
	CARD_DISCOUNT_PERCENTAGE,CARD_DISCOUNT_AMOUNT,B.NET,B.EMP_CODE ,B.BIN_ID,LEFT(A.CM_ID,2),B.ROW_ID AS REF_CMD_ROW_ID,
	B.TAX_PERCENTAGE,B.TAX_AMOUNT,B.TAX_METHOD,0 AS CMM_DISCOUNT_AMOUNT,B.ITEM_ROUND_OFF,B.REF_SLS_MEMO_NO,B.REF_SLS_MEMO_DT
	FROM CMM01106 A
	JOIN CMD01106 B ON B.CM_ID=A.CM_ID
	WHERE A.CANCELLED=0 AND A.MEMO_TYPE=1  AND (A.CM_DT BETWEEN @DTFROM AND @DTTO)
	AND B.PRODUCT_CODE IN (SELECT PRODUCT_CODE  
	FROM PID01106 A1 
	JOIN PIM01106 B1 ON B1.MRR_ID=A1.MRR_ID WHERE B1.MEMO_TYPE=2)
	AND A.CM_DT=@DTCM_DT 
	AND a.location_Code =@CDEPT_ID 

	SET @NCTR=@NCTR+1
	FETCH NEXT FROM CURESTIMATE INTO @DTCM_DT,@NBILLCNT
END
CLOSE CURESTIMATE
DEALLOCATE CURESTIMATE

--select 'check @cmd-1',CM_ID,* from @CMd where CM_id='0101119000000100-05536'

--select 'check @cmm-1',* from @CMM where CM_NO='0100-05536'

INSERT INTO @PAYMODE_XN_DET(MEMO_ID ,XN_TYPE ,PAYMODE_CODE,REMARKS,ROW_ID,AMOUNT,	LAST_UPDATE,REF_NO,	ADJ_MEMO_ID ,CURRENCY_CONVERSION_RATE)
SELECT CM_ID,'SLS','0000000','',CM_ID,NET_AMOUNT,GETDATE(),'','',1 
FROM @CMM

INSERT INTO @CMM (CM_NO,CM_ID,CM_DT,NET_AMOUNT,SUBTOTAL,DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT,CM_MODE,CUSTOMER_CODE,ATD_CHARGES,ROUND_OFF,MEMO_TYPE,BIN_ID,PARTY_STATE_CODE,CM_TIME)
SELECT DISTINCT A.CM_NO,A.CM_ID,A.CM_DT,A.NET_AMOUNT,A.SUBTOTAL,A.DISCOUNT_PERCENTAGE,A.DISCOUNT_AMOUNT,
A.CM_MODE,A.CUSTOMER_CODE,A.ATD_CHARGES,A.ROUND_OFF,1 AS MEMO_TYPE,A.BIN_ID,A.PARTY_STATE_CODE,A.CM_TIME
FROM CMM01106 A 
JOIN CMD01106 B ON B.CM_ID=A.CM_ID 
WHERE A.CANCELLED=0  AND MEMO_TYPE=1  AND (A.CM_DT BETWEEN @DTFROM AND @DTTO)
AND B.PRODUCT_CODE IN (SELECT PRODUCT_CODE FROM PID01106 A1 
JOIN PIM01106 B1 ON B1.MRR_ID=A1.MRR_ID WHERE B1.MEMO_TYPE=2)
AND a.location_Code =@CDEPT_ID 

--select 'check @cmm-2',@DTFROM,@DTto,CM_ID,* from @CMM where CM_NO='0100-05536'

INSERT INTO @CMD (CM_ID,ROW_ID,PRODUCT_CODE,MRP,QUANTITY,DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT,BASIC_DISCOUNT_PERCENTAGE,BASIC_DISCOUNT_AMOUNT,
	CARD_DISCOUNT_PERCENTAGE,CARD_DISCOUNT_AMOUNT,NET,EMP_CODE,TAX_AMOUNT,TAX_METHOD,TAX_PERCENTAGE,TAX_TYPE,BIN_ID,DEPT_ID,REF_CMD_ROW_ID,ITEM_ROUND_OFF,
	CMM_DISCOUNT_AMOUNT,REF_SLS_MEMO_NO,REF_SLS_MEMO_DT)
SELECT A.CM_ID,A.ROW_ID,A.PRODUCT_CODE,A.MRP,A.QUANTITY,A.DISCOUNT_PERCENTAGE,A.DISCOUNT_AMOUNT,BASIC_DISCOUNT_PERCENTAGE,BASIC_DISCOUNT_AMOUNT,
	CARD_DISCOUNT_PERCENTAGE,CARD_DISCOUNT_AMOUNT,A.NET,A.EMP_CODE,A.TAX_AMOUNT,A.TAX_METHOD,A.TAX_PERCENTAGE,A.TAX_TYPE,A.BIN_ID,LEFT(A.CM_ID,2),A.ROW_ID AS REF_CMD_ROW_ID,
	A.ITEM_ROUND_OFF,CMM_DISCOUNT_AMOUNT,REF_SLS_MEMO_NO,REF_SLS_MEMO_DT
FROM CMD01106 A
JOIN @CMM B ON B.CM_ID=A.CM_ID
WHERE A.ROW_ID NOT IN (SELECT REF_CMD_ROW_ID FROM @CMD)


--select 'check @cmd-2',CM_ID,* from @CMd where CM_id='0101119000000100-05536'

INSERT INTO @PAYMODE_XN_DET(MEMO_ID ,XN_TYPE ,PAYMODE_CODE,REMARKS,ROW_ID,AMOUNT,	LAST_UPDATE,REF_NO,	ADJ_MEMO_ID ,CURRENCY_CONVERSION_RATE)
SELECT A.MEMO_ID ,A.XN_TYPE,A.PAYMODE_CODE,A.REMARKS,A.ROW_ID,A.AMOUNT,	A.LAST_UPDATE,A.REF_NO,A.ADJ_MEMO_ID,A.CURRENCY_CONVERSION_RATE
FROM PAYMODE_XN_DET A
JOIN CMM01106 B ON B.CM_ID=A.MEMO_ID
WHERE B.CM_ID IN (SELECT CM_ID FROM @CMM)
AND A.XN_TYPE='SLS'
AND B.location_Code =@CDEPT_ID 


--SELECT 'BEFORE',ROW_ID,* FROM @CMD

DECLARE XYZ CURSOR FOR 
SELECT A.CM_ID,A.BIN_ID,A.NET_AMOUNT
FROM @CMM A
WHERE LEFT(A.CM_ID,5)<>'LATER'

OPEN XYZ
DECLARE @CPRODUCTCODE VARCHAR(100),@CPRODUCTCODE_OLD VARCHAR(100),@CCM_ID VARCHAR(100), 
		@NROWCOUNT_PRODUCTCODE NUMERIC(4),@NROWCOUNT_PRICE NUMERIC(14,2),@CCMDROWID VARCHAR(40),
		@NCTR1 NUMERIC(10),@NPRICE_OLD NUMERIC(14,2),@NPRICE NUMERIC(14,2),@CBIN_ID VARCHAR(5),
	    @BTRUE BIT,@NLOOPCNT INT,@NCASHAMOUNT NUMERIC(10,2),@NNETAMOUNT NUMERIC(10,2)

SET @NCTR1=0
SELECT  @NROWCOUNT_PRODUCTCODE=COUNT(*) FROM @PRODUCT_CODE

SET @CPRODUCTCODE=''
SET @CPRODUCTCODE_OLD=''
SET @NPRICE_OLD=0.00
SET @NPRICE=0.00
DECLARE @NRANDOMNO INT,@BLOOP BIT

FETCH NEXT FROM XYZ INTO @CCM_ID,@CBIN_ID,@NNETAMOUNT
WHILE @@FETCH_STATUS=0
BEGIN
	
	SELECT @NCTR1=0,@NCASHAMOUNT=0
	
	SELECT @NCASHAMOUNT=SUM(A.AMOUNT) FROM @PAYMODE_XN_DET A
	JOIN PAYMODE_MST B ON A.PAYMODE_CODE=B.PAYMODE_CODE
	WHERE A.MEMO_ID=@CCM_ID AND A.XN_TYPE='SLS' AND PAYMODE_GRP_CODE='0000001'
	
	DELETE FROM #TMPCMD
	
		
	SELECT @NCTR1=COUNT(*) FROM @CMD WHERE CM_ID=@CCM_ID
	
	--SELECT @CCM_ID,@NCASHAMOUNT,@NNETAMOUNT,@NCTR1
	
	IF ISNULL(@NCTR1,0)=0 OR ISNULL(@NCASHAMOUNT,0)<>@NNETAMOUNT
	BEGIN 
		PRINT 'ENTER BAR CODE FILLING FOR :'+@CCM_ID
		
		IF ISNULL(@NCASHAMOUNT,0)=@NNETAMOUNT AND ISNULL(@NCTR1,0)=0
			INSERT #TMPCMD
			SELECT 'LATER' AS ROW_ID
		ELSE
			INSERT #TMPCMD
			SELECT ROW_ID
			FROM CMD01106 A
			LEFT OUTER JOIN 
			(SELECT REF_CMD_ROW_ID FROM @CMD WHERE CM_ID=@CCM_ID) B ON A.ROW_ID=B.REF_CMD_ROW_ID
			WHERE A.CM_ID=@CCM_ID AND  B.REF_CMD_ROW_ID IS NULL  
		
		
		--IF @CCM_ID='WH0111700000WH00-00054'
		--	SELECT 'CEHCK ',* FROM #TMPCMD
		
		SET @BLOOP=0
						
		WHILE @BLOOP=0
		BEGIN		
			SET @CCMDROWID=''
			SELECT TOP 1 @CCMDROWID=ROW_ID FROM #TMPCMD
			
			IF ISNULL(@CCMDROWID,'')=''
				BREAK
			
			SET @CPRODUCTCODE=''	
			SET  @NRANDOMNO =ISNULL(@NRANDOMNO ,1)  
			SET @BTRUE=1
			WHILE @BTRUE=1
			BEGIN
			   SELECT @CPRODUCTCODE=PRODUCT_CODE,@NPRICE=MRP FROM @PRODUCT_CODE WHERE SR_NO= @NRANDOMNO
			   SET @BTRUE=0 
			   SET @NRANDOMNO=@NRANDOMNO+1
			   IF(@NRANDOMNO > @NROWCOUNT_PRODUCTCODE)
					SET @NRANDOMNO=1
			END
			
			
			--SELECT 'RANDOM PC',@CPRODUCTCODE
			
			IF @CCMDROWID='LATER'
				INSERT INTO @CMD (CM_ID,ROW_ID,PRODUCT_CODE,MRP,QUANTITY,DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT,NET,EMP_CODE,BIN_ID,DEPT_ID)
				SELECT @CCM_ID,'LATER',@CPRODUCTCODE,@NPRICE,1,0,0,@NPRICE,'0000000',@CBIN_ID,@CCURLOCID
			ELSE
				INSERT INTO @CMD (CM_ID,ROW_ID,PRODUCT_CODE,MRP,QUANTITY,DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT,NET,EMP_CODE,BIN_ID,DEPT_ID,
								  BASIC_DISCOUNT_PERCENTAGE,BASIC_DISCOUNT_AMOUNT,CARD_DISCOUNT_PERCENTAGE,CARD_DISCOUNT_AMOUNT,ITEM_ROUND_OFF,CMM_DISCOUNT_AMOUNT,
								  TAX_PERCENTAGE,TAX_AMOUNT,MANUAL_DISCOUNT,REF_SLS_MEMO_NO,REF_SLS_MEMO_DT)
				SELECT CM_ID,ROW_ID,@CPRODUCTCODE AS PRODUCT_CODE,MRP,QUANTITY,DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT,NET,EMP_CODE,BIN_ID,DEPT_ID,
				BASIC_DISCOUNT_PERCENTAGE,BASIC_DISCOUNT_AMOUNT,CARD_DISCOUNT_PERCENTAGE,CARD_DISCOUNT_AMOUNT,ITEM_ROUND_OFF,CMM_DISCOUNT_AMOUNT,
				TAX_PERCENTAGE,TAX_AMOUNT,MANUAL_DISCOUNT,REF_SLS_MEMO_NO,REF_SLS_MEMO_DT
				FROM CMD01106 WHERE ROW_ID=@CCMDROWID
			
			
			
			DELETE FROM #TMPCMD	WHERE ROW_ID=@CCMDROWID
		END	
	END
	
	declare @CROUNDBILLLEVEL varchar(1)
	SELECT TOP 1 @CROUNDBILLLEVEL=VALUE FROM CONFIG WHERE CONFIG_OPTION='ROUND_BILL_LEVEL' 

	DECLARE @NSUBTOTAL NUMERIC(14,2),@NSUBTOTAL_R NUMERIC(14,2),@NSUBTOTAL_PAY NUMERIC(14,2),@NNET_AMOUNT NUMERIC(14,2)
	SELECT @NSUBTOTAL=SUM(CASE WHEN QUANTITY>0 THEN A.NET ELSE 0 END),@NSUBTOTAL_R=SUM(CASE WHEN QUANTITY<0 THEN A.NET ELSE 0 END)
	FROM @CMD A
	WHERE A.CM_ID=@CCM_ID
	
	--if @CCM_ID='0101119000000100-05536'
	--begin
	--	select @CCMDROWID as CCMDROWID,@NCASHAMOUNT as NCASHAMOUNT,@Nnetamount as Nnetamount,SUM(CASE WHEN QUANTITY>0 THEN NET ELSE 0 END) from @CMD where CM_ID=@CCM_ID
	--	select * from @CMD where CM_ID=@CCM_ID
	--end	
	SELECT @NSUBTOTAL_PAY=ISNULL(SUM(A.AMOUNT),0)
	FROM @PAYMODE_XN_DET A
	WHERE A.MEMO_ID=@CCM_ID AND A.XN_TYPE='SLS'
	
	print 'Update subtotal of cm_id:'+@CCM_ID+' '+str(@NSUBTOTAL)+'SR:'+STR(@NSUBTOTAL_R)
	
	UPDATE A SET  A.SUBTOTAL=@NSUBTOTAL,A.SUBTOTAL_R=@NSUBTOTAL_R,
	A.DISCOUNT_AMOUNT=ROUND((@NSUBTOTAL+@NSUBTOTAL_R) * A.DISCOUNT_PERCENTAGE/100,2),
	A.NET_AMOUNT=(A.ATD_CHARGES+@NSUBTOTAL+@NSUBTOTAL_R)-((@NSUBTOTAL+@NSUBTOTAL_R) * A.DISCOUNT_PERCENTAGE/100)
	FROM @CMM A
	WHERE A.CM_ID=@CCM_ID
	
	--if @CCM_ID='0101119000000100-05756'
	--	SELECT 'CHECK NETAMT',NET_AMOUNT FROM @CMM A WHERE A.CM_ID=@CCM_ID
		
	UPDATE @CMM SET ROUND_OFF= (CASE WHEN ISNULL(@CROUNDBILLLEVEL,'')='2' THEN ROUND(NET_AMOUNT/5,0)*5-NET_AMOUNT
	WHEN ISNULL(@CROUNDBILLLEVEL,'')='3' THEN CEILING(NET_AMOUNT/5)*5-NET_AMOUNT 
	WHEN ISNULL(@CROUNDBILLLEVEL,'')='4' THEN 0 ELSE ROUND(NET_AMOUNT,0)-NET_AMOUNT  END)
	where CM_ID=@CCM_ID
	 
	UPDATE @CMM set NET_AMOUNT=NET_AMOUNT+ROUND_OFF where CM_ID=@CCM_ID

	--if @CCM_ID='0101119000000100-05756'
	--	SELECT 'CHECK NETAMT1',NET_AMOUNT FROM @CMM A WHERE A.CM_ID=@CCM_ID
			
	--PRINT 'CM_ID : '+@CCM_ID
	SELECT @NNET_AMOUNT=A.NET_AMOUNT
	FROM @CMM A
	WHERE A.CM_ID=@CCM_ID
	
	--SELECT @CCM_ID,@NNET_AMOUNT,@NSUBTOTAL_PAY
	IF @NNET_AMOUNT<>@NSUBTOTAL_PAY
	BEGIN
		DECLARE @CROW_ID VARCHAR(50)
		SET @CROW_ID=''
		SELECT @CROW_ID=ISNULL(ROW_ID,'') FROM @PAYMODE_XN_DET WHERE MEMO_ID=@CCM_ID AND PAYMODE_CODE='0000000'
		IF(LTRIM(RTRIM(ISNULL(@CROW_ID,'')))='')
		BEGIN
			INSERT INTO @PAYMODE_XN_DET(MEMO_ID ,XN_TYPE ,PAYMODE_CODE,REMARKS,ROW_ID,AMOUNT,	LAST_UPDATE,REF_NO,	ADJ_MEMO_ID ,CURRENCY_CONVERSION_RATE)
			SELECT @CCM_ID ,'SLS' AS XN_TYPE,'0000000' AS PAYMODE_CODE,'' AS REMARKS,'LATER' AS ROW_ID,
			(@NNET_AMOUNT-@NSUBTOTAL_PAY) AS AMOUNT,GETDATE() AS LAST_UPDATE,'' AS REF_NO,	'' AS ADJ_MEMO_ID ,
			1 AS CURRENCY_CONVERSION_RATE
		END
		ELSE
			UPDATE @PAYMODE_XN_DET SET AMOUNT=AMOUNT+(@NNET_AMOUNT-@NSUBTOTAL_PAY) WHERE MEMO_ID=@CCM_ID AND PAYMODE_CODE='0000000' AND ROW_ID=@CROW_ID
	END	
	
	SELECT TOP 1 @NCMMDISCAMT=discount_amount FROM @CMM WHERE CM_ID=@CCM_ID
	
	SET @NSUBTOTAL=@NSUBTOTAL+@NSUBTOTAL_R
	UPDATE @CMD SET CMM_DISCOUNT_AMOUNT=(CASE WHEN @NCMMDISCAMT<>0 AND @NSUBTOTAL<>0 THEN 
	(@NCMMDISCAMT/@NSUBTOTAL)*NET ELSE 0 END)  WHERE CM_ID=@CCM_ID	
	
	FETCH NEXT FROM XYZ INTO @CCM_ID,@CBIN_ID,@NNETAMOUNT
END
CLOSE XYZ
DEALLOCATE XYZ

DECLARE @NCTR3 NUMERIC(5)
SET @NCTR3=0

UPDATE @CMD SET ROW_ID=CM_ID+'-'+CAST(@NCTR3 AS VARCHAR(5)),@NCTR3=@NCTR3+1 WHERE LEFT(CM_ID,5)='LATER'

			

SELECT *,ROW_NUMBER() OVER (ORDER BY CM_MODE,CM_DT) AS SRNO,CAST(1 AS BIT) AS CHECKED 
FROM @CMM 
ORDER BY SRNO,CM_DT,CM_MODE


SELECT  A.*,ROW_NUMBER() OVER (PARTITION BY A.CM_ID ORDER BY A.TS) AS SRNO,  
'' AS EMP_NAME, A.PRODUCT_CODE, B.ARTICLE_CODE, B.ARTICLE_NO, B.ARTICLE_NAME, S.PARA1_CODE,  
   C.PARA1_NAME, S.PARA2_CODE, D.PARA2_NAME, S.PARA3_CODE, F.PARA3_NAME, E.UOM_NAME,     
   A.DEPT_ID  AS DEPT_ID, S.BARCODE_CODING_SCHEME AS CODING_SCHEME,  B.INACTIVE, 0 AS QUANTITY_IN_STOCK,  
   S.PURCHASE_PRICE,  S.MRP,S.WS_PRICE,  '' AS SCHEME_ID, SM.SECTION_NAME, SD.SUB_SECTION_NAME,  
   S.PARA4_CODE,S.PARA5_CODE,S.PARA6_CODE,  
   PARA4_NAME,PARA5_NAME,PARA6_NAME,E.UOM_CODE,ISNULL(E.UOM_TYPE,0) AS [UOM_TYPE],  
   B.DT_CREATED AS [ART_DT_CREATED],F.DT_CREATED AS [PARA3_DT_CREATED],S.DT_CREATED AS [SKU_DT_CREATED],  
   B.STOCK_NA,CONVERT (BIT,(CASE WHEN A.QUANTITY <0 THEN 1 ELSE 0 END)) AS SALERETURN ,CAST(1 AS BIT) AS CREDIT_REFUND,  
'' AS HOLD_ID,'' AS CMD_HOLD_ROW_ID,REF_SLS_MEMO_NO,REF_SLS_MEMO_DT
FROM @CMD A
JOIN SKU S ON A.PRODUCT_CODE = S.PRODUCT_CODE   
JOIN ARTICLE B ON S.ARTICLE_CODE = B.ARTICLE_CODE    
JOIN SECTIOND SD ON B.SUB_SECTION_CODE = SD.SUB_SECTION_CODE  
JOIN SECTIONM SM ON SD.SECTION_CODE = SM.SECTION_CODE  
JOIN PARA1 C ON S.PARA1_CODE = C.PARA1_CODE    
JOIN PARA2 D ON S.PARA2_CODE = D.PARA2_CODE    
JOIN PARA3 F ON S.PARA3_CODE = F.PARA3_CODE    
JOIN PARA4 G ON S.PARA4_CODE = G.PARA4_CODE    
JOIN PARA5 H ON S.PARA5_CODE = H.PARA5_CODE    
JOIN PARA6 I ON S.PARA6_CODE = I.PARA6_CODE    
JOIN UOM   E ON B.UOM_CODE = E.UOM_CODE   
JOIN EMPLOYEE EMP ON A.EMP_CODE = EMP.EMP_CODE   
ORDER BY CM_ID

SELECT A.*,B.PAYMODE_NAME,C.* ,CAST(0 AS BIT ) AS DELETED,        
  (CASE WHEN A.CURRENCY_CONVERSION_RATE> 0 THEN       
  CAST(A.AMOUNT/A.CURRENCY_CONVERSION_RATE AS NUMERIC(10,2)) ELSE A.AMOUNT END ) AS BASIC_AMOUNT,  
  ISNULL(S.CM_DT,ISNULL(R.ADV_REC_DT,'')) AS ADJ_MEMO_DT, ROW_NUMBER() OVER (PARTITION BY A.MEMO_ID ORDER BY A.TS) AS SRNO     
  FROM @PAYMODE_XN_DET A        
  JOIN PAYMODE_MST B ON B.PAYMODE_CODE=A.PAYMODE_CODE        
  JOIN PAYMODE_GRP_MST C ON C.PAYMODE_GRP_CODE=B.PAYMODE_GRP_CODE        
  LEFT OUTER JOIN CMM01106 S ON S.CM_ID=A.ADJ_MEMO_ID AND SUBSTRING(S.CM_NO,5,1)='N'  
  LEFT OUTER JOIN ARC01106 R ON R.ADV_REC_ID=A.ADJ_MEMO_ID AND R.ARC_TYPE=2
ORDER BY A.MEMO_ID
	
END
-------- END OF PROCEDURE SP_POSTESTIMATE
