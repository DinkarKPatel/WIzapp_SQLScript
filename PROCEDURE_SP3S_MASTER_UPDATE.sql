CREATE PROCEDURE SP3S_MASTER_UPDATE
(
 @NMODE INT=0, --0 FOR FETHCH RECORE 1 FOR INSERT UPDATE
 @CCOLUMNNAME VARCHAR (100)='',
 @NSPID INT=''
)
--WITH ENCRYPTION
AS
BEGIN
   DECLARE @DTSQL NVARCHAR(MAX),@CTABLENAME VARCHAR(100),@CTEMPTABLE VARCHAR(100),@BPARACONT BIT,
           @CSTEP VARCHAR(10),@TABLENAME VARCHAR(100),@CCOLUPDATE VARCHAR(50),@CMASTERTABLENAME VARCHAR(100),
           @CHODEPT_ID VARCHAR(5),@NEW_PARA_CODE VARCHAR(100),@PARA_CODE VARCHAR(100)
           DECLARE  @TBLERRMSG TABLE(ERRMSG VARCHAR(100))
           
  SELECT TOP 1 @CHODEPT_ID= VALUE  FROM CONFIG WHERE CONFIG_OPTION ='HO_LOCATION_ID' 
  
 IF @NMODE=0
   BEGIN
   
   IF @CCOLUMNNAME='SECTION_NAME'
   GOTO LBLSECTION_EXPORT
   IF @CCOLUMNNAME='SUB_SECTION_NAME'
   GOTO LBLSUB_SECTION_EXPORT
   IF @CCOLUMNNAME='ARTICLE_NAME'
   GOTO LBLARTICLE_EXPORT
   IF @CCOLUMNNAME='PARA1_NAME'
   GOTO LBLPARA1_EXPORT
   IF @CCOLUMNNAME='PARA2_NAME'
   GOTO LBLPARA2_EXPORT
   IF @CCOLUMNNAME='PARA3_NAME'
   GOTO LBLPARA3_EXPORT
   IF @CCOLUMNNAME='PARA4_NAME'
   GOTO LBLPARA4_EXPORT
   IF @CCOLUMNNAME='PARA5_NAME'
   GOTO LBLPARA5_EXPORT
   IF @CCOLUMNNAME='PARA6_NAME'
   GOTO LBLPARA6_EXPORT
   IF LEFT(@CCOLUMNNAME,5)='ATTRM'
   GOTO LBLATTRM_EXPORT 
   IF @CCOLUMNNAME='PREFIX_NAME'
   GOTO LBLPREFIX_EXPORT 
   IF @CCOLUMNNAME='ARTICLE_NO'
   GOTO LBLARTICLENO_EXPORT 
   IF @CCOLUMNNAME='ONLINE_PRODUCT_CODE'
   GOTO LBLONLINEPC
   IF @CCOLUMNNAME='AC_NAME'
   GOTO LBLACNAME   
   IF @CCOLUMNNAME='USER_CUSTOMER_CODE'
   GOTO LBLCUSTOMER
   IF @CCOLUMNNAME='HSN_CODE'
   GOTO LBLHSN


  END
  ELSE 
	GOTO UPDATETABLE
 

   
  LBLSECTION_EXPORT:
      
      SELECT * FROM 
     (
      SELECT SECTION_CODE AS PARA_CODE,SECTION_NAME AS OLD_PARA_NAME ,NEW_PARA_NAME=CAST('' AS VARCHAR(100)),
       SR=ROW_NUMBER() OVER (PARTITION BY SECTION_NAME ORDER BY SECTION_NAME,CASE WHEN @CHODEPT_ID=LEFT(SECTION_NAME,2) THEN 1 ELSE 0 END)
      FROM SECTIONM A WHERE SECTION_CODE <>'0000000' AND INACTIVE=0
     ) A WHERE SR=1
     ORDER BY OLD_PARA_NAME
      
  GOTO END_PROC
  
  LBLSUB_SECTION_EXPORT:
  
   SELECT * FROM 
  (
      SELECT SUB_SECTION_CODE AS PARA_CODE,SUB_SECTION_NAME + '(' + B.SECTION_NAME + ')' AS OLD_PARA_NAME ,NEW_PARA_NAME=CAST('' AS VARCHAR(100)),
             SR=ROW_NUMBER() OVER (PARTITION BY SUB_SECTION_NAME + '(' + B.SECTION_NAME + ')' ORDER BY SUB_SECTION_NAME + '(' + B.SECTION_NAME + ')',CASE WHEN @CHODEPT_ID=LEFT(SUB_SECTION_CODE,2) THEN 1 ELSE 0 END)
      FROM SECTIOND A 
      JOIN SECTIONM B ON A.SECTION_CODE= B.SECTION_CODE 
      WHERE SUB_SECTION_CODE <>'0000000' AND A.INACTIVE=0
   ) A --WHERE SR=1
   ORDER BY OLD_PARA_NAME
      
 GOTO END_PROC
 
 LBLARTICLE_EXPORT:
      
      SELECT * FROM 
      (
        SELECT ARTICLE_CODE AS PARA_CODE,ARTICLE_NAME AS OLD_PARA_NAME ,NEW_PARA_NAME=CAST('' AS VARCHAR(100)),
         SR=ROW_NUMBER() OVER (PARTITION BY ARTICLE_NAME ORDER BY ARTICLE_NAME,CASE WHEN @CHODEPT_ID=LEFT(ARTICLE_CODE,2) THEN 1 ELSE 0 END)
        FROM ARTICLE A WHERE ARTICLE_CODE  <>'0000000' AND INACTIVE=0
      ) A WHERE SR=1
      ORDER BY OLD_PARA_NAME 
  
 GOTO END_PROC
 
 LBLPARA1_EXPORT:    
      
       SELECT * FROM 
      (
         SELECT PARA1_CODE AS PARA_CODE,PARA1_NAME AS OLD_PARA_NAME ,NEW_PARA_NAME=CAST('' AS VARCHAR(100)),
         SR=ROW_NUMBER() OVER (PARTITION BY PARA1_NAME ORDER BY PARA1_NAME,CASE WHEN @CHODEPT_ID=LEFT(PARA1_CODE,2) THEN 1 ELSE 0 END)    
         FROM PARA1  A WHERE PARA1_CODE  <>'000000000' AND INACTIVE=0
      ) A WHERE SR=1
      ORDER BY OLD_PARA_NAME 
      
 GOTO END_PROC
 
 LBLPARA2_EXPORT:
 
      SELECT * FROM 
      (
          SELECT PARA2_CODE AS PARA_CODE,PARA2_NAME AS OLD_PARA_NAME ,NEW_PARA_NAME=CAST('' AS VARCHAR(100)),
          SR=ROW_NUMBER() OVER (PARTITION BY PARA2_NAME ORDER BY PARA2_NAME,CASE WHEN @CHODEPT_ID=LEFT(PARA2_CODE,2) THEN 1 ELSE 0 END)    
          FROM PARA2  A WHERE PARA2_CODE  <>'000000000' AND INACTIVE=0
      ) A WHERE SR=1
       ORDER BY OLD_PARA_NAME 
      
 GOTO END_PROC
 
 LBLPARA3_EXPORT:  
      
      SELECT * FROM 
      (
        SELECT PARA3_CODE AS PARA_CODE,PARA3_NAME AS OLD_PARA_NAME ,NEW_PARA_NAME=CAST('' AS VARCHAR(100)),
        SR=ROW_NUMBER() OVER (PARTITION BY PARA3_NAME ORDER BY PARA3_NAME,CASE WHEN @CHODEPT_ID=LEFT(PARA3_CODE,2) THEN 1 ELSE 0 END)    
        FROM PARA3  A WHERE PARA3_CODE  <>'000000000' AND INACTIVE=0
      ) A WHERE SR=1
       ORDER BY OLD_PARA_NAME 
 GOTO END_PROC
 
 
 LBLPARA4_EXPORT:  
      
       SELECT * FROM 
      (
        SELECT PARA4_CODE AS PARA_CODE,PARA4_NAME AS OLD_PARA_NAME ,NEW_PARA_NAME=CAST('' AS VARCHAR(100)),
        SR=ROW_NUMBER() OVER (PARTITION BY PARA4_NAME ORDER BY PARA4_NAME,CASE WHEN @CHODEPT_ID=LEFT(PARA4_CODE,2) THEN 1 ELSE 0 END)    
        FROM PARA4  A WHERE PARA4_CODE  <>'000000000' AND INACTIVE=0
       
      ) A WHERE SR=1
       ORDER BY OLD_PARA_NAME 
      
 GOTO END_PROC
 
 LBLPARA5_EXPORT:    
      
       SELECT * FROM 
      (
		  SELECT PARA5_CODE AS PARA_CODE,PARA5_NAME AS OLD_PARA_NAME ,NEW_PARA_NAME=CAST('' AS VARCHAR(100)),
		  SR=ROW_NUMBER() OVER (PARTITION BY PARA5_NAME ORDER BY PARA5_NAME,CASE WHEN @CHODEPT_ID=LEFT(PARA5_CODE,2) THEN 1 ELSE 0 END)    
		  FROM PARA5  A WHERE PARA5_CODE  <>'000000000' AND INACTIVE=0
      ) A WHERE SR=1
       ORDER BY OLD_PARA_NAME 
       
      
 GOTO END_PROC
 
 LBLPARA6_EXPORT:
       
        SELECT * FROM 
      (
		  SELECT PARA6_CODE AS PARA_CODE,PARA6_NAME AS OLD_PARA_NAME ,NEW_PARA_NAME=CAST('' AS VARCHAR(100)),
		  SR=ROW_NUMBER() OVER (PARTITION BY PARA6_NAME ORDER BY PARA6_NAME,CASE WHEN @CHODEPT_ID=LEFT(PARA6_CODE,2) THEN 1 ELSE 0 END)    
          FROM PARA6  A WHERE PARA6_CODE  <>'000000000' AND INACTIVE=0
      ) A WHERE SR=1
       ORDER BY OLD_PARA_NAME
      
 GOTO END_PROC
 
 LBLATTRM_EXPORT:
 
       DECLARE @COLNAME VARCHAR(50),@TBLNAME NVARCHAR(40),@KEY_NAME NVARCHAR(40),@KEY_CODE NVARCHAR(40),
      @CCMD NVARCHAR(MAX),@INACTIVE NVARCHAR(10)
      SET @COLNAME=''
      SET @COLNAME=SUBSTRING(@CCOLUMNNAME,7,LEN(@CCOLUMNNAME))
      SELECT @TBLNAME =TABLE_NAME , @KEY_NAME=COLUMN_NAME,
      @KEY_CODE=REPLACE(COLUMN_NAME,'NAME','CODE'),
      @INACTIVE=SUBSTRING(@KEY_NAME,0,CHARINDEX('_',@KEY_NAME)+1) FROM CONFIG_ATTR WHERE TABLE_CAPTION=LTRIM(RTRIM(@COLNAME))
      
      
      
      SET @CCMD=N'  
      SELECT * FROM 
      (
		 SELECT '+@KEY_CODE+' AS PARA_CODE,'+@KEY_NAME+' AS OLD_PARA_NAME ,NEW_PARA_NAME=CAST('''' AS VARCHAR(100)),
		 SR=ROW_NUMBER() OVER (PARTITION BY '+@KEY_NAME+' ORDER BY '+@KEY_NAME+',
		 CASE WHEN '''+@CHODEPT_ID+'''=LEFT('+@KEY_CODE+',2) THEN 1 ELSE 0 END)    
         FROM '+@TBLNAME+'  A WHERE '+@KEY_CODE+'  <>''0000000'' AND ISNULL('+@INACTIVE+'INACTIVE,0)=0
        
      ) A WHERE SR=1
       ORDER BY OLD_PARA_NAME'
       PRINT @CCMD
       EXEC SP_EXECUTESQL @CCMD
      
      
    
   
 GOTO END_PROC
 
 LBLPREFIX_EXPORT:
       
       
        SELECT * FROM 
      (
		  SELECT PREFIX_CODE AS PARA_CODE,PREFIX_NAME AS OLD_PARA_NAME ,NEW_PARA_NAME=CAST('' AS VARCHAR(100)),
		  SR=ROW_NUMBER() OVER (PARTITION BY PREFIX_NAME ORDER BY PREFIX_NAME,CASE WHEN @CHODEPT_ID=LEFT(PREFIX_CODE,2) THEN 1 ELSE 0 END)    
          FROM PREFIX  A WHERE PREFIX_CODE  <>'00000' 
      ) A WHERE SR=1
       ORDER BY OLD_PARA_NAME
       
 
 GOTO END_PROC
 
  LBLARTICLENO_EXPORT:
     
       SELECT * FROM 
      (
		  SELECT ARTICLE_CODE AS PARA_CODE,ARTICLE_NO AS OLD_PARA_NAME ,NEW_PARA_NAME=CAST('' AS VARCHAR(100)),
		  SR=ROW_NUMBER() OVER (PARTITION BY ARTICLE_NO ORDER BY ARTICLE_NO,CASE WHEN @CHODEPT_ID=LEFT(ARTICLE_NO,2) THEN 1 ELSE 0 END)    
          FROM ARTICLE A WHERE ARTICLE_CODE  <>'000000000' AND INACTIVE=0
      ) A WHERE SR=1
       ORDER BY OLD_PARA_NAME
       
 
 GOTO END_PROC
 
 LBLONLINEPC:

	  SELECT ARTICLE_CODE AS PARA_CODE,ARTICLE_NO AS OLD_PARA_NAME ,NEW_PARA_NAME=CAST('' AS VARCHAR(100)),
	  SR=ROW_NUMBER() OVER (PARTITION BY ARTICLE_NO ORDER BY ARTICLE_NO,CASE WHEN @CHODEPT_ID=LEFT(ARTICLE_NO,2) THEN 1 ELSE 0 END)    
      FROM ARTICLE A WHERE 1=2
      GOTO END_PROC
 
 LBLACNAME:
       
      SELECT * FROM 
      (
		  SELECT AC_CODE AS PARA_CODE,AC_NAME AS OLD_PARA_NAME ,NEW_PARA_NAME=CAST('' AS VARCHAR(100)),
		  SR=ROW_NUMBER() OVER (PARTITION BY AC_NAME ORDER BY AC_NAME,CASE WHEN @CHODEPT_ID=LEFT(AC_CODE,2) THEN 1 ELSE 0 END)    
          FROM LM01106  A WHERE AC_CODE  <>'0000000000' AND INACTIVE=0
      ) A WHERE SR=1
       ORDER BY OLD_PARA_NAME
       GOTO END_PROC
 
LBLCUSTOMER:

		SELECT * FROM 
		(
		SELECT CUSTOMER_CODE AS PARA_CODE,USER_CUSTOMER_CODE  + ' (' + customer_code + ')' AS OLD_PARA_NAME ,NEW_PARA_NAME=CAST('' AS VARCHAR(100)),
		SR=ROW_NUMBER() OVER (PARTITION BY USER_CUSTOMER_CODE ORDER BY USER_CUSTOMER_CODE,CASE WHEN @CHODEPT_ID=LEFT(CUSTOMER_CODE,2) THEN 1 ELSE 0 END)    
		FROM CUSTDYM  A WHERE CUSTOMER_CODE  <>'000000000000' AND INACTIVE=0
		) A 
		--WHERE SR=1
		ORDER BY OLD_PARA_NAME
		
		GOTO END_PROC

LBLHSN:

  SELECT * FROM 
		(
		SELECT HSN_CODE AS PARA_CODE,HSN_CODE AS OLD_PARA_NAME ,NEW_PARA_NAME=CAST('' AS VARCHAR(100)),
		SR=ROW_NUMBER() OVER (PARTITION BY HSN_CODE ORDER BY HSN_CODE)    
		FROM HSN_MST  A WHERE HSN_CODE  <>'000000000000' AND INACTIVE=0
		) A 
		
		ORDER BY OLD_PARA_NAME
		
		GOTO END_PROC

	
 UPDATETABLE:
 ------------@NMODEL ---1----------UPDATE MASTERS
    DECLARE @CERRORMSG VARCHAR(MAX)
     BEGIN TRANSACTION  
	 BEGIN TRY 
	 SET @CSTEP=0
	 SET @CTEMPTABLE = 'TEMP_TABLE_'+LTRIM(RTRIM(STR(@NSPID)))
	 SET @CERRORMSG=''         

	 
	 SET @CSTEP=10
	 IF OBJECT_ID ('TEMPDB..#TMPSECTIONM','U') IS NOT NULL
	    DROP TABLE #TMPSECTIONM
	       
	 SELECT PARA_CODE=CAST('' AS VARCHAR(100)),OLD_PARA_NAMEE=CAST('' AS VARCHAR(100)) ,
	 NEW_PARA_NAME=CAST('' AS VARCHAR(100))
	        ,NEW_PARA_CODE=CAST('' AS VARCHAR(100))
	        INTO #TMPSECTIONM
     FROM SECTIONM A WHERE 1=2
            
      
	 IF @CCOLUMNNAME='SECTION_NAME'
	 BEGIN   
	     SET @CSTEP=20    
		 SET @DTSQL=N'(SELECT ''NEW SECTION_NAME :- ''+ NEW_PARA_NAME+ ''  DOES NOT EXISTS'' AS NEW_PARA_NAME  FROM '+@CTEMPTABLE+' WHERE NEW_PARA_NAME NOT IN
						(SELECT SECTION_NAME FROM SECTIONM ) AND NEW_PARA_NAME<>'''')'
		 PRINT @DTSQL
		 INSERT INTO @TBLERRMSG
		 EXEC SP_EXECUTESQL @DTSQL
		
		
		 IF (SELECT COUNT(*) FROM @TBLERRMSG)>0
		 BEGIN
			SET @CERRORMSG='NEW PARA_NAME DOES NOT EXIST'
			GOTO END_PROC
		 END

	 
	    SET @CSTEP=30
	    SET @DTSQL =N'SELECT A.PARA_CODE,A.OLD_PARA_NAME,A.NEW_PARA_NAME,B.SECTION_CODE AS NEW_PARA_CODE 
	                  FROM '+@CTEMPTABLE+' A 
	                  JOIN SECTIONM B ON A.NEW_PARA_NAME=B.SECTION_NAME 
	                  WHERE A.NEW_PARA_NAME<>'''''
	     PRINT @DTSQL
	     INSERT INTO #TMPSECTIONM
	     EXEC SP_EXECUTESQL @DTSQL
	     
	        
	     SET @CMASTERTABLENAME='SECTIONM'
	     SET @CCOLUPDATE='SECTION_CODE'
	     
	  
	     
	    
	     
	      IF OBJECT_ID ('TEMPDB..#TMP','U') IS NOT NULL
	      DROP TABLE #TMPSECTIONM
	      
	      
	      
	      
	  SELECT SUB_SECTION_NAME  INTO #TMP FROM SECTIOND WHERE SECTION_CODE IN (SELECT NEW_PARA_CODE FROM #TMPSECTIONM)
	 
	 DECLARE @BLOOP BIT,@NCNT INT,@SUB_SECTION_NAME VARCHAR(100)
		 SET @BLOOP=0
		 SET @NCNT=1

		WHILE @BLOOP=0
		BEGIN
			
			SET @SUB_SECTION_NAME=''	
			SET @NCNT=@NCNT+1
			SELECT TOP 1 @SUB_SECTION_NAME=SUB_SECTION_NAME FROM #TMP
			
			IF ISNULL(@SUB_SECTION_NAME,'')=''
				BREAK
				
		UPDATE SECTIOND SET SUB_SECTION_NAME=SUB_SECTION_NAME+''+SECTION_CODE
		WHERE SUB_SECTION_NAME=''+@SUB_SECTION_NAME+'' AND SECTION_CODE IN (SELECT PARA_CODE FROM #TMPSECTIONM)
	
		DELETE  FROM #TMP WHERE SUB_SECTION_NAME=''+@SUB_SECTION_NAME+''		
				
		 END	
	     

		  UPDATE A SET A.SECTION_CODE=B.NEW_PARA_CODE FROM SECTIOND(NOLOCK) A JOIN
		  SECTIONM(NOLOCK) S ON S.SECTION_CODE=A.SECTION_CODE
		  JOIN  #TMPSECTIONM(NOLOCK) B ON A.SECTION_CODE=B.PARA_CODE
		  WHERE A.SECTION_CODE IN ( SELECT PARA_CODE FROM #TMPSECTIONM(NOLOCK)) 
	
	     
	    
	 END 
	 	
		    
	
	 IF @CCOLUMNNAME='SUB_SECTION_NAME'
	  BEGIN
	     SET @CSTEP=35
	     SET @DTSQL=N'(SELECT ''NEW SUB_SECTION_NAME :- ''+ NEW_PARA_NAME+ '' DOES NOT EXISTS'' AS NEW_PARA_NAME  FROM '+@CTEMPTABLE+' WHERE NEW_PARA_NAME NOT IN
						(SELECT SUB_SECTION_NAME FROM SECTIOND ) AND NEW_PARA_NAME<>'''')'
		 PRINT @DTSQL
		 INSERT INTO @TBLERRMSG
		 EXEC SP_EXECUTESQL @DTSQL
		 
		 IF (SELECT COUNT(*) FROM @TBLERRMSG)>0
		 BEGIN
			SET @CERRORMSG='NEW PARA_NAME DOES NOT EXIST'
			GOTO END_PROC
		 END   
	  
	  
	     SET @CSTEP=40 
	     SET @DTSQL =N'SELECT A.PARA_CODE,A.OLD_PARA_NAME,A.NEW_PARA_NAME,B.SUB_SECTION_CODE AS NEW_PARA_CODE 
	                   FROM '+@CTEMPTABLE+' A 
	                   JOIN SECTIOND B ON A.NEW_PARA_NAME=B.SUB_SECTION_NAME AND B.SUB_SECTION_CODE<>A.PARA_CODE
	                   WHERE A.NEW_PARA_NAME<>''''' 
	     PRINT @DTSQL
	     INSERT INTO #TMPSECTIONM
	     EXEC SP_EXECUTESQL @DTSQL
	     
	     
	      UPDATE A SET A.SUB_SECTION_CODE=B.NEW_PARA_CODE FROM ARTICLE(NOLOCK) A JOIN
		  SECTIOND(NOLOCK) S ON S.SUB_SECTION_CODE=A.SUB_SECTION_CODE
		  JOIN  #TMPSECTIONM(NOLOCK) B ON A.SUB_SECTION_CODE=B.PARA_CODE
		  WHERE A.SUB_SECTION_CODE IN ( SELECT PARA_CODE FROM #TMPSECTIONM(NOLOCK)) 
	       
	     SET @CMASTERTABLENAME='SECTIOND'
	     SET @CCOLUPDATE='SUB_SECTION_CODE'
	  END
	  
	
	 IF @CCOLUMNNAME='PARA1_NAME'
	  BEGIN
	      
		 SET @CSTEP=45
	     SET @DTSQL=N'(SELECT ''NEW PARA1_NAME :- ''+ NEW_PARA_NAME+ '' DOES NOT EXISTS'' AS NEW_PARA_NAME  FROM '+@CTEMPTABLE+' WHERE NEW_PARA_NAME NOT IN
						(SELECT PARA1_NAME FROM PARA1 ) AND NEW_PARA_NAME<>'''')'
		 PRINT @DTSQL
		 INSERT INTO @TBLERRMSG
		 EXEC SP_EXECUTESQL @DTSQL
		 
		 IF (SELECT COUNT(*) FROM @TBLERRMSG)>0
		 BEGIN
			SET @CERRORMSG='NEW PARA_NAME DOES NOT EXIST'
			GOTO END_PROC
		 END   
	  
	     SET @CSTEP=50
	     SET @DTSQL =N'SELECT A.PARA_CODE,A.OLD_PARA_NAME,A.NEW_PARA_NAME,B.PARA1_CODE AS NEW_PARA_CODE 
	                   FROM '+@CTEMPTABLE+' A 
	                   JOIN PARA1 B ON A.NEW_PARA_NAME=B.PARA1_NAME AND B.PARA1_CODE<>A.PARA_CODE
	                   WHERE A.NEW_PARA_NAME<>'''''
	     PRINT @DTSQL
	     INSERT INTO #TMPSECTIONM
	     EXEC SP_EXECUTESQL @DTSQL
	     
	      UPDATE A SET A.PARA1_CODE=B.NEW_PARA_CODE FROM SKU(NOLOCK) A JOIN
		  PARA1(NOLOCK) S ON S.PARA1_CODE=A.PARA1_CODE
		  JOIN  #TMPSECTIONM(NOLOCK) B ON A.PARA1_CODE=B.PARA_CODE
		  WHERE A.PARA1_CODE IN ( SELECT PARA_CODE FROM #TMPSECTIONM(NOLOCK))
	       
	     SET @CMASTERTABLENAME='PARA1'
	     SET @CCOLUPDATE='PARA1_CODE'
	  END
	  
	  IF @CCOLUMNNAME='PARA2_NAME'
	  BEGIN
	      
		 SET @CSTEP=55
	     SET @DTSQL=N'(SELECT ''NEW PARA2_NAME :- ''+ NEW_PARA_NAME+ '' DOES NOT EXISTS'' AS NEW_PARA_NAME  FROM '+@CTEMPTABLE+' WHERE NEW_PARA_NAME NOT IN
						(SELECT PARA2_NAME FROM PARA2 ) AND NEW_PARA_NAME<>'''')'
		 PRINT @DTSQL
		 INSERT INTO @TBLERRMSG
		 EXEC SP_EXECUTESQL @DTSQL
		 
		 IF (SELECT COUNT(*) FROM @TBLERRMSG)>0
		 BEGIN
			SET @CERRORMSG='NEW PARA_NAME DOES NOT EXIST'
			GOTO END_PROC
		 END   
	  
	     SET @CSTEP=60
	     SET @DTSQL =N'SELECT A.PARA_CODE,A.OLD_PARA_NAME,A.NEW_PARA_NAME,B.PARA2_CODE AS NEW_PARA_CODE 
	                   FROM '+@CTEMPTABLE+' A 
	                   JOIN PARA2 B ON A.NEW_PARA_NAME=B.PARA2_NAME AND B.PARA2_CODE<>A.PARA_CODE
	                   WHERE A.NEW_PARA_NAME<>'''''
	     PRINT @DTSQL
	     
	     INSERT INTO #TMPSECTIONM
	     EXEC SP_EXECUTESQL @DTSQL
	     
	      UPDATE A SET A.PARA2_CODE=B.NEW_PARA_CODE FROM SKU(NOLOCK) A JOIN
		  PARA2(NOLOCK) S ON S.PARA2_CODE=A.PARA2_CODE
		  JOIN  #TMPSECTIONM(NOLOCK) B ON A.PARA2_CODE=B.PARA_CODE
		  WHERE A.PARA2_CODE IN ( SELECT PARA_CODE FROM #TMPSECTIONM(NOLOCK))
	       
	     SET @CMASTERTABLENAME='PARA2'
	     SET @CCOLUPDATE='PARA2_CODE'
	  END
	  
	  IF @CCOLUMNNAME='PARA3_NAME'
	  BEGIN
	      
		 SET @CSTEP=65
	     SET @DTSQL=N'(SELECT ''NEW PARA3_NAME :- ''+ NEW_PARA_NAME+ '' DOES NOT EXISTS'' AS NEW_PARA_NAME  FROM '+@CTEMPTABLE+' WHERE NEW_PARA_NAME NOT IN
						(SELECT PARA3_NAME FROM PARA3 ) AND NEW_PARA_NAME<>'''')'
		 PRINT @DTSQL
		 INSERT INTO @TBLERRMSG
		 EXEC SP_EXECUTESQL @DTSQL
		 
		 IF (SELECT COUNT(*) FROM @TBLERRMSG)>0
		 BEGIN
			SET @CERRORMSG='NEW PARA_NAME DOES NOT EXIST'
			GOTO END_PROC
		 END   
		 
	     SET @CSTEP=70
	     SET @DTSQL =N'SELECT A.PARA_CODE,A.OLD_PARA_NAME,A.NEW_PARA_NAME,B.PARA3_CODE AS NEW_PARA_CODE 
	                   FROM '+@CTEMPTABLE+' A 
	                   JOIN PARA3 B ON A.NEW_PARA_NAME=B.PARA3_NAME AND B.PARA3_CODE<>A.PARA_CODE
	                   WHERE A.NEW_PARA_NAME<>'''''
	     PRINT @DTSQL
	     INSERT INTO #TMPSECTIONM
	     EXEC SP_EXECUTESQL @DTSQL
	     
	     
	     UPDATE A SET A.PARA3_CODE=B.NEW_PARA_CODE FROM SKU(NOLOCK) A JOIN
		  PARA3(NOLOCK) S ON S.PARA3_CODE=A.PARA3_CODE
		  JOIN  #TMPSECTIONM(NOLOCK) B ON A.PARA3_CODE=B.PARA_CODE
		  WHERE A.PARA3_CODE IN ( SELECT PARA_CODE FROM #TMPSECTIONM(NOLOCK))
	     
	    
	     SET @CMASTERTABLENAME='PARA3'
	     SET @CCOLUPDATE='PARA3_CODE'
	  END
	  
	  ---FOR PARA4 
	  IF @CCOLUMNNAME='PARA4_NAME'
	  BEGIN
	      
		 SET @CSTEP=75
	     SET @DTSQL=N'(SELECT ''NEW PARA4_NAME :- ''+ NEW_PARA_NAME+ '' DOES NOT EXISTS'' AS NEW_PARA_NAME  FROM '+@CTEMPTABLE+' WHERE NEW_PARA_NAME NOT IN
						(SELECT PARA4_NAME FROM PARA4 ) AND NEW_PARA_NAME<>'''')'
		 PRINT @DTSQL
		 INSERT INTO @TBLERRMSG
		 EXEC SP_EXECUTESQL @DTSQL
		 
		 IF (SELECT COUNT(*) FROM @TBLERRMSG)>0
		 BEGIN
			SET @CERRORMSG='NEW PARA_NAME DOES NOT EXIST'
			GOTO END_PROC
		 END   
		 
	     SET @CSTEP=80
	     SET @DTSQL =N'SELECT A.PARA_CODE,A.OLD_PARA_NAME,A.NEW_PARA_NAME,B.PARA4_CODE AS NEW_PARA_CODE 
	                   FROM '+@CTEMPTABLE+' A 
	                   JOIN PARA4 B ON A.NEW_PARA_NAME=B.PARA4_NAME AND B.PARA4_CODE<>A.PARA_CODE
	                   WHERE A.NEW_PARA_NAME<>'''''
	     PRINT @DTSQL
	     INSERT INTO #TMPSECTIONM
	     EXEC SP_EXECUTESQL @DTSQL
	     
	      UPDATE A SET A.PARA4_CODE=B.NEW_PARA_CODE FROM SKU(NOLOCK) A JOIN
		  PARA4(NOLOCK) S ON S.PARA4_CODE=A.PARA4_CODE
		  JOIN  #TMPSECTIONM(NOLOCK) B ON A.PARA4_CODE=B.PARA_CODE
		  WHERE A.PARA4_CODE IN ( SELECT PARA_CODE FROM #TMPSECTIONM(NOLOCK))
	       
	     SET @CMASTERTABLENAME='PARA4'
	     SET @CCOLUPDATE='PARA4_CODE'
	  END
	  
	  
	 -- FOR --PARA5
	  
	  IF @CCOLUMNNAME='PARA5_NAME'
	  BEGIN
	      
		 SET @CSTEP=90
	     SET @DTSQL=N'(SELECT ''NEW PARA5_NAME :- ''+ NEW_PARA_NAME+ '' DOES NOT EXISTS'' AS NEW_PARA_NAME  FROM '+@CTEMPTABLE+' WHERE NEW_PARA_NAME NOT IN
						(SELECT PARA5_NAME FROM PARA5 ) AND NEW_PARA_NAME<>'''')'
		 PRINT @DTSQL
		 INSERT INTO @TBLERRMSG
		 EXEC SP_EXECUTESQL @DTSQL
		 
		 IF (SELECT COUNT(*) FROM @TBLERRMSG)>0
		 BEGIN
			SET @CERRORMSG='NEW PARA_NAME DOES NOT EXIST'
			GOTO END_PROC
		 END   
		 
	     SET @CSTEP=95
	     SET @DTSQL =N'SELECT A.PARA_CODE,A.OLD_PARA_NAME,A.NEW_PARA_NAME,B.PARA5_CODE AS NEW_PARA_CODE 
	                   FROM '+@CTEMPTABLE+' A 
	                   JOIN PARA5 B ON A.NEW_PARA_NAME=B.PARA5_NAME AND B.PARA5_CODE<>A.PARA_CODE
	                   WHERE A.NEW_PARA_NAME<>'''''
	     PRINT @DTSQL
	     INSERT INTO #TMPSECTIONM
	     EXEC SP_EXECUTESQL @DTSQL
	     
	      UPDATE A SET A.PARA5_CODE=B.NEW_PARA_CODE FROM SKU(NOLOCK) A JOIN
		  PARA5(NOLOCK) S ON S.PARA5_CODE=A.PARA5_CODE
		  JOIN  #TMPSECTIONM(NOLOCK) B ON A.PARA5_CODE=B.PARA_CODE
		  WHERE A.PARA5_CODE IN ( SELECT PARA_CODE FROM #TMPSECTIONM(NOLOCK))
	       
	     SET @CMASTERTABLENAME='PARA5'
	     SET @CCOLUPDATE='PARA5_CODE'
	  END
	  
	  --FOR PARA6--
	  IF @CCOLUMNNAME='PARA6_NAME'
	  BEGIN
	      
		 SET @CSTEP=100
	     SET @DTSQL=N'(SELECT ''NEW PARA6_NAME :- ''+ NEW_PARA_NAME+ '' DOES NOT EXISTS'' AS NEW_PARA_NAME  FROM '+@CTEMPTABLE+' WHERE NEW_PARA_NAME NOT IN
						(SELECT PARA6_NAME FROM PARA6 ) AND NEW_PARA_NAME<>'''')'
		 PRINT @DTSQL
		 INSERT INTO @TBLERRMSG
		 EXEC SP_EXECUTESQL @DTSQL
		 
		 IF (SELECT COUNT(*) FROM @TBLERRMSG)>0
		 BEGIN
			SET @CERRORMSG='NEW PARA_NAME DOES NOT EXIST'
			GOTO END_PROC
		 END   
		 
	     SET @CSTEP=105
	     SET @DTSQL =N'SELECT A.PARA_CODE,A.OLD_PARA_NAME,A.NEW_PARA_NAME,B.PARA6_CODE AS NEW_PARA_CODE 
	                   FROM '+@CTEMPTABLE+' A 
	                   JOIN PARA6 B ON A.NEW_PARA_NAME=B.PARA6_NAME AND B.PARA6_CODE<>A.PARA_CODE
	                   WHERE A.NEW_PARA_NAME<>'''''
	     PRINT @DTSQL
	     INSERT INTO #TMPSECTIONM
	     EXEC SP_EXECUTESQL @DTSQL
	     
	      UPDATE A SET A.PARA6_CODE=B.NEW_PARA_CODE FROM SKU(NOLOCK) A JOIN
		  PARA6(NOLOCK) S ON S.PARA6_CODE=A.PARA6_CODE
		  JOIN  #TMPSECTIONM(NOLOCK) B ON A.PARA6_CODE=B.PARA_CODE
		  WHERE A.PARA6_CODE IN ( SELECT PARA_CODE FROM #TMPSECTIONM(NOLOCK))
	       
	     SET @CMASTERTABLENAME='PARA6'
	     SET @CCOLUPDATE='PARA6_CODE'
	  END
	  
	  --FOR AC_NAME
	  
	  
	  IF @CCOLUMNNAME='AC_NAME'
	  BEGIN
	      
		 SET @CSTEP=100
	     SET @DTSQL=N'(SELECT ''NEW AC NAME :- ''+ NEW_PARA_NAME+ '' DOES NOT EXISTS'' AS NEW_PARA_NAME  FROM '+@CTEMPTABLE+' WHERE NEW_PARA_NAME NOT IN
						(SELECT AC_NAME FROM LM01106 ) AND NEW_PARA_NAME<>'''')'
		 PRINT @DTSQL
		 INSERT INTO @TBLERRMSG
		 EXEC SP_EXECUTESQL @DTSQL
		 
		 IF (SELECT COUNT(*) FROM @TBLERRMSG)>0
		 BEGIN
			SET @CERRORMSG='NEW PARA_NAME DOES NOT EXIST'
			GOTO END_PROC
		 END   
		 
	     SET @CSTEP=105
	     SET @DTSQL =N'SELECT A.PARA_CODE,A.OLD_PARA_NAME,A.NEW_PARA_NAME,B.AC_CODE AS NEW_PARA_CODE 
	                   FROM '+@CTEMPTABLE+' A 
	                   JOIN LM01106 B ON A.NEW_PARA_NAME=B.AC_NAME AND B.AC_CODE<>A.PARA_CODE
	                   WHERE A.NEW_PARA_NAME<>'''''
	     PRINT @DTSQL
	     INSERT INTO #TMPSECTIONM
	     EXEC SP_EXECUTESQL @DTSQL
	     
	      UPDATE A SET A.AC_CODE=B.NEW_PARA_CODE FROM SKU(NOLOCK) A JOIN
		  LM01106(NOLOCK) S ON S.AC_CODE=A.AC_CODE
		  JOIN  #TMPSECTIONM(NOLOCK) B ON A.AC_CODE=B.PARA_CODE
		  WHERE A.AC_CODE IN ( SELECT PARA_CODE FROM #TMPSECTIONM(NOLOCK))
	       
	     SET @CMASTERTABLENAME='LM01106'
	     SET @CCOLUPDATE='AC_CODE'
	  END
	  
	  --FOR ATTRM
	  IF LEFT(@CCOLUMNNAME,5)='ATTRM'
	  BEGIN
	      
		 SET @CSTEP=110
	     SET @DTSQL=N'(SELECT ''NEW KEY NAME :- ''+ NEW_PARA_NAME+ '' DOES NOT EXISTS'' AS NEW_PARA_NAME  FROM '+@CTEMPTABLE+' WHERE NEW_PARA_NAME NOT IN
						(SELECT KEY_NAME FROM ATTR_KEY ) AND NEW_PARA_NAME<>'''')'
		 PRINT @DTSQL
		 INSERT INTO @TBLERRMSG
		 EXEC SP_EXECUTESQL @DTSQL
		 
		 IF (SELECT COUNT(*) FROM @TBLERRMSG)>0
		 BEGIN
			SET @CERRORMSG='NEW PARA_NAME DOES NOT EXIST'
			GOTO END_PROC
		 END   
		 
	     SET @CSTEP=115
	     SET @DTSQL =N'SELECT A.PARA_CODE,A.OLD_PARA_NAME,A.NEW_PARA_NAME,B.KEY_CODE AS NEW_PARA_CODE 
	                   FROM '+@CTEMPTABLE+' A 
	                   JOIN ATTR_KEY B ON A.NEW_PARA_NAME=B.KEY_NAME AND B.KEY_CODE<>A.PARA_CODE
	                   WHERE A.NEW_PARA_NAME<>''''' 
	     PRINT @DTSQL
	     INSERT INTO #TMPSECTIONM
	     EXEC SP_EXECUTESQL @DTSQL
	       
	     SET @CMASTERTABLENAME='ATTR_KEY'
	     SET @CCOLUPDATE='KEY_CODE'
	  END
	  
	  
	   --FOR ARTICLE
	  IF @CCOLUMNNAME='ARTICLE_NAME'
	  BEGIN
	      
		 SET @CSTEP=120
	     SET @DTSQL=N'(SELECT ''NEW ARTICLE_NAME :- ''+ NEW_PARA_NAME+ '' DOES NOT EXISTS'' AS NEW_PARA_NAME  FROM '+@CTEMPTABLE+' WHERE NEW_PARA_NAME NOT IN
						(SELECT ARTICLE_NAME FROM ARTICLE ) AND NEW_PARA_NAME<>'''')'
		 PRINT @DTSQL
		 INSERT INTO @TBLERRMSG
		 EXEC SP_EXECUTESQL @DTSQL
		 
		 IF (SELECT COUNT(*) FROM @TBLERRMSG)>0
		 BEGIN
			SET @CERRORMSG='NEW PARA_NAME DOES NOT EXIST'
			GOTO END_PROC
		 END   
		 
	     SET @CSTEP=125
	     SET @DTSQL =N'SELECT A.PARA_CODE,A.OLD_PARA_NAME,A.NEW_PARA_NAME,B.ARTICLE_CODE AS NEW_PARA_CODE 
	                   FROM '+@CTEMPTABLE+' A 
	                   JOIN ARTICLE B ON A.NEW_PARA_NAME=B.ARTICLE_NAME AND B.ARTICLE_CODE<>A.PARA_CODE
	                   WHERE A.NEW_PARA_NAME<>'''''
	     PRINT @DTSQL
	     INSERT INTO #TMPSECTIONM
	     EXEC SP_EXECUTESQL @DTSQL

		  UPDATE A SET A.ARTICLE_CODE=B.NEW_PARA_CODE FROM SKU(NOLOCK) A JOIN 
		  ARTICLE(NOLOCK) S ON S.ARTICLE_CODE=A.ARTICLE_CODE
		  JOIN #TMPSECTIONM(NOLOCK) B ON A.ARTICLE_CODE=B.PARA_CODE
		  WHERE A.ARTICLE_CODE IN (SELECT PARA_CODE FROM #TMPSECTIONM(NOLOCK))
	     
	       
	     SET @CMASTERTABLENAME='ARTICLE'
	     SET @CCOLUPDATE='ARTICLE_CODE'
	  END
	  
	  
	    --FOR ARTICLENO
	  IF @CCOLUMNNAME='ARTICLE_NO'
	  BEGIN
	      
		 SET @CSTEP=130
	     SET @DTSQL=N'(SELECT ''NEW ARTICLE_NO :- ''+ NEW_PARA_NAME+ '' DOES NOT EXISTS'' AS NEW_PARA_NAME  FROM '+@CTEMPTABLE+' WHERE NEW_PARA_NAME NOT IN
						(SELECT ARTICLE_NO FROM ARTICLE ) AND NEW_PARA_NAME<>'''')'
		 PRINT @DTSQL
		 INSERT INTO @TBLERRMSG
		 EXEC SP_EXECUTESQL @DTSQL
		 
		 IF (SELECT COUNT(*) FROM @TBLERRMSG)>0
		 BEGIN
			SET @CERRORMSG='NEW PARA_NAME DOES NOT EXIST'
			GOTO END_PROC
		 END   
		 
	     SET @CSTEP=135
	     SET @DTSQL =N'SELECT A.PARA_CODE,A.OLD_PARA_NAME,A.NEW_PARA_NAME,B.ARTICLE_CODE AS NEW_PARA_CODE 
	                   FROM '+@CTEMPTABLE+' A 
	                   JOIN ARTICLE B ON A.NEW_PARA_NAME=B.ARTICLE_NO  AND B.ARTICLE_CODE<>A.PARA_CODE
	                   WHERE A.NEW_PARA_NAME<>'''''
	     PRINT @DTSQL
	     INSERT INTO #TMPSECTIONM
	     EXEC SP_EXECUTESQL @DTSQL
	     
	      UPDATE A SET A.ARTICLE_CODE=B.NEW_PARA_CODE FROM SKU(NOLOCK) A JOIN 
		  ARTICLE(NOLOCK) S ON S.ARTICLE_CODE=A.ARTICLE_CODE
		  JOIN #TMPSECTIONM(NOLOCK) B ON A.ARTICLE_CODE=B.PARA_CODE
		  WHERE A.ARTICLE_CODE IN (SELECT PARA_CODE FROM #TMPSECTIONM(NOLOCK))
	       
	     SET @CMASTERTABLENAME='ARTICLE'
	     SET @CCOLUPDATE='ARTICLE_CODE'
	  END
	  
	  
	  IF @CCOLUMNNAME='PREFIX_NAME'
	  BEGIN
	      
		 SET @CSTEP=130
	     SET @DTSQL=N'(SELECT ''NEW PREFIX_NAME :- ''+ NEW_PARA_NAME+ '' DOES NOT EXISTS'' AS NEW_PARA_NAME  FROM '+@CTEMPTABLE+' WHERE NEW_PARA_NAME NOT IN
						(SELECT PREFIX_NAME FROM PREFIX ) AND NEW_PARA_NAME<>'''')'
		 PRINT @DTSQL
		 INSERT INTO @TBLERRMSG
		 EXEC SP_EXECUTESQL @DTSQL
		 
		 IF (SELECT COUNT(*) FROM @TBLERRMSG)>0
		 BEGIN
			SET @CERRORMSG='NEW PARA_NAME DOES NOT EXIST'
			GOTO END_PROC
		 END   
		 
	     SET @CSTEP=135
	     SET @DTSQL =N'SELECT A.PARA_CODE,A.OLD_PARA_NAME,A.NEW_PARA_NAME,B.PREFIX_CODE AS NEW_PARA_CODE 
	                   FROM '+@CTEMPTABLE+' A 
	                   JOIN PREFIX B ON A.NEW_PARA_NAME=B.PREFIX_NAME  AND B.PREFIX_CODE<>A.PARA_CODE
	                   WHERE A.NEW_PARA_NAME<>'''''
	     PRINT @DTSQL
	     INSERT INTO #TMPSECTIONM
	     EXEC SP_EXECUTESQL @DTSQL
	       
	     SET @CMASTERTABLENAME='PREFIX'
	     SET @CCOLUPDATE='PREFIX_CODE'
	  END

	  IF @CCOLUMNNAME='ONLINE_PRODUCT_CODE'
	  BEGIN
	      
		 SET @CSTEP=130
		 SET @DTSQL =N'UPDATE SKU SET ONLINE_PRODUCT_CODE=B.NEW_PARA_NAME FROM '+@CTEMPTABLE+' B
					   WHERE B.OLD_PARA_NAME=SKU.ONLINE_PRODUCT_CODE	 
	                   AND B.NEW_PARA_NAME<>'''''
	     EXEC SP_EXECUTESQL @DTSQL
		 
		 GOTO END_PROC
	  END
	  
	  
	  UPDATEMAINTABLE: 
	       SET @CSTEP=140
	       IF CURSOR_STATUS ('GLOBAL','CUR_UPDATETABLE') IN (0,1)
	       BEGIN
	           CLOSE CUR_UPDATETABLE
	           DEALLOCATE CUR_UPDATETABLE
	       END
	       
	       DECLARE CUR_UPDATETABLE CURSOR
	       FOR
	       SELECT B.NAME FROM SYS.COLUMNS A
	       JOIN SYS.TABLES B ON A.OBJECT_ID =B.OBJECT_ID 
	       WHERE A.NAME=@CCOLUPDATE AND B.NAME<>@CMASTERTABLENAME AND B.NAME NOT LIKE 'TEMP%'
	       AND B.NAME NOT IN ('CAMPAIGN_SECTIONM','CAMPAIGN_SECTIOND')
	       
	       OPEN   CUR_UPDATETABLE 
	       FETCH NEXT FROM CUR_UPDATETABLE INTO @TABLENAME
	       WHILE @@FETCH_STATUS =0
	       BEGIN
	       
			   IF @TABLENAME='SD_ATTR' AND @CCOLUPDATE='SUB_SECTION_CODE'
			   BEGIN	       
					DELETE A FROM SD_ATTR A 
					JOIN #TMPSECTIONM B ON A.SUB_SECTION_CODE  =B.PARA_CODE 
					AND ATTRIBUTE_CODE IN
					(
					SELECT ATTRIBUTE_CODE FROM SD_ATTR A
					JOIN #TMPSECTIONM B ON A.SUB_SECTION_CODE=B.NEW_PARA_CODE  
					)
			   END
	           
			   ELSE 
			   IF @TABLENAME='ART_ATTR'
				  SELECT @NEW_PARA_CODE=ATTRIBUTE_CODE FROM ART_ATTR A 
				  JOIN #TMPSECTIONM B ON A.ARTICLE_CODE =B.NEW_PARA_CODE 
				  
			   SELECT @PARA_CODE=ATTRIBUTE_CODE FROM ART_ATTR A
			   JOIN #TMPSECTIONM B ON A.ARTICLE_CODE  =B.PARA_CODE  
				  
			   IF @NEW_PARA_CODE<>@PARA_CODE
			   BEGIN
				   SET @CSTEP=145
				   SET @DTSQL=N'UPDATE A SET '+@CCOLUPDATE+'=B.NEW_PARA_CODE FROM '+@TABLENAME+' A 
								JOIN #TMPSECTIONM B ON A.'+@CCOLUPDATE+'=B.PARA_CODE'
			       
				   PRINT @DTSQL
				   EXEC SP_EXECUTESQL @DTSQL
			   END
			   	   
			   FETCH NEXT FROM CUR_UPDATETABLE INTO @TABLENAME
	       END
	       CLOSE CUR_UPDATETABLE
	       DEALLOCATE CUR_UPDATETABLE
	       
	       SET @CSTEP=150
	    IF @CCOLUMNNAME<>'PREFIX_NAME'   
	    BEGIN
	       SET @DTSQL =N'UPDATE A SET INACTIVE=1 
	                   FROM '+@CMASTERTABLENAME+' A 
	                   JOIN #TMPSECTIONM B ON A.'+@CCOLUPDATE+'=B.PARA_CODE 
	                   WHERE B.NEW_PARA_NAME<>'''''
	     PRINT @DTSQL
	     EXEC SP_EXECUTESQL @DTSQL
	    END 
	    
	    ---UPDATE OLD VALUE TO NEW VALUE TO ALL FOREIGN KEY TABLE WHICH RELATED TO @CMASTERTABLENAME TABLE
	   -- SELECT  @CMASTERTABLENAME,@CCOLUMNNAME,@CCOLUPDATE
	   -- EXEC CHANGED_FOREIGN_KEY_COLUMN_DATA @CMASTERTABLENAME, @CCOLUPDATE ,@CTEMPTABLE
	    
	      
	 END TRY  
	 BEGIN CATCH  
		SET @CERRORMSG = 'PROCEDURE SP3S_MASTER_UPDATE: STEP- '+@CSTEP+' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()  
		GOTO END_PROC  
	 END CATCH  
	 
   END_PROC:  

  IF @@TRANCOUNT>0   
	BEGIN  
	     IF ISNULL(@CERRORMSG,'')=''
	     BEGIN
		 COMMIT TRANSACTION  
		
		SET @DTSQL=N'IF OBJECT_ID('''+@CTEMPTABLE+''',''U'') IS NOT NULL
		            DROP TABLE '+@CTEMPTABLE+''	
		PRINT @DTSQL
		EXEC SP_EXECUTESQL @DTSQL 
	     END	 
		 ELSE
		 ROLLBACK  
	END	 
	
 
	IF (SELECT COUNT(*)  FROM @TBLERRMSG )=0
		 SELECT @CERRORMSG AS ERRMSG
	ELSE
		 SELECT *  FROM @TBLERRMSG 

END
--END OF PROCEDURE SP3S_MASTER_UPDATE
