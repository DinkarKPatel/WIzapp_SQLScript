CREATE PROCEDURE SP3S_CALTOTALS_SLS--(LocId 3 digit change by Sanjay:04-11-2024)
@NSPID VARCHAR(40),
@BGSTBILL BIT,
@DCMDT DATETIME,
@CLOCATIONID varCHAR(4),
@CUSERCODE CHAR(7),
@BSALESSETUPDISABLED BIT,
@NLOGINSPID	VARCHAR(40)='',
@CERRORMSG VARCHAR(MAX) OUTPUT,
@NUPDATEMODE INT
AS
BEGIN
	DECLARE @CSTEP VARCHAR(10),@CTEXT VARCHAR(50),@NCMMDISCAMT NUMERIC(10,2),@BGSTCOLSMAPPED BIT,
	@NPAYMODETOTAMT NUMERIC(10,2),@CPICKLASTSLSTAX VARCHAR(4),@CGSTSLRTAXPICKINGMODE VARCHAR(4),
	@BAPPLYEXCLTAXONDISCITEMSLOC BIT,@NEXCLTAXTODISC NUMERIC(10,2),@NATDCHARGES NUMERIC(10,2),@CREFNO VARCHAR(50)

BEGIN TRY
	SELECT TOP 1 @CREFNO=REF_NO FROM SLS_CMM01106_UPLOAD WHERE SP_ID=@NSPID

	--IF @@SPID=86 --AND @CREFNO='S/03829/MAR-22'
	--BEGIN
	--	SELECT 'BEFORE APPLYING GST',@CREFNO,SISLOC_GST_PERCENTAGE,SISLOC_TAXABLE_VALUE,XN_VALUE_WITHOUT_GST,NET,SIS_NET, * FROM  SLS_CMD01106_UPLOAD WHERE SP_ID=@NSPID
	--END

	SET @CSTEP = 361.10	
	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1

	PRINT 'ENTER CALTOTALS_SLS'
	SET @CERRORMSG=''

	
	SELECT TOP 1 @CPICKLASTSLSTAX=LTRIM(RTRIM(VALUE)) FROM CONFIG WHERE  CONFIG_OPTION='PICK_LAST_SLS_TAX'

	SELECT TOP 1 @CGSTSLRTAXPICKINGMODE=VALUE FROM CONFIG WHERE CONFIG_OPTION='GST_SLR_TAXPICKINGMODE'
			
	IF ISNULL(@CGSTSLRTAXPICKINGMODE,'')=''
		SET @CGSTSLRTAXPICKINGMODE='1'
					
	SET @CPICKLASTSLSTAX = ISNULL(@CPICKLASTSLSTAX,'')


	SELECT TOP 1 @BAPPLYEXCLTAXONDISCITEMSLOC=ISNULL(EXCLUSIVE_VAT,0),
				 @NEXCLTAXTODISC=ISNULL(EXCLUSIVE_VAT_TO_DISC,0)	FROM LOCATION (NOLOCK) WHERE DEPT_ID=@CLOCATIONID
			
	SET @CSTEP = 361.12	
	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
	
	

	SET @CSTEP = 361.15	
	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
	UPDATE SLS_CMD01106_UPLOAD WITH (ROWLOCK)
	SET TAX_METHOD=0 WHERE SP_ID=@NSPID AND ISNULL(TAX_METHOD,0)<>0 AND ISNULL(MANUAL_TAX_METHOD,0)<>1
	
	DECLARE @BDONOTCALCEXCLGST BIT,@CEXCLUSERCODE VARCHAR(10)
	IF ISNULL(@BAPPLYEXCLTAXONDISCITEMSLOC,0)=1 OR EXISTS (SELECT TOP 1 CM_ID FROM  SLS_CMD01106_UPLOAD A (NOLOCK)
				JOIN  SCHEME_SETUP_DET B (NOLOCK) ON A.SLSDET_ROW_ID=B.ROW_ID
				WHERE SP_ID=@NSPID AND ISNULL(APPLY_EXCLUSIVE_TAX,0)=1)
	BEGIN
		SET @CSTEP = 361.25	
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1

		 SELECT TOP 1 @CEXCLUSERCODE=ISNULL(C.USER_CODE,A.USER_CODE) FROM SLS_CMM01106_UPLOAD A (NOLOCK) 
		 JOIN  SLS_CMD01106_UPLOAD B (NOLOCK) ON A.SP_ID=B.SP_ID
		 LEFT JOIN RPS_MST C (NOLOCK) ON C.CM_ID=B.PACK_SLIP_ID
		 WHERE A.SP_ID=@NSPID

		SET @CSTEP = 361.35	
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
		
		SET @BDONOTCALCEXCLGST=0
		IF EXISTS (SELECT B.USER_CODE FROM USER_ROLE_DET A (NOLOCK)
				   JOIN USERS B (NOLOCK) ON A.ROLE_ID=B.ROLE_ID
				   WHERE B.USER_CODE=@CEXCLUSERCODE AND  FORM_OPTION='DONOT_CALC_EXCLTAX_DISCITEMS'
				   AND VALUE='1' AND B.USER_CODE<>'0000000')
			SET @BDONOTCALCEXCLGST=1			   

		IF @BDONOTCALCEXCLGST=0 
		BEGIN
			SET @CSTEP = 361.45	
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1

			UPDATE  A WITH (ROWLOCK) SET TAX_METHOD=2 
			FROM SLS_CMD01106_UPLOAD A
			JOIN SCHEME_SETUP_DET D (NOLOCK) ON A.SLSDET_ROW_ID=D.ROW_ID
			WHERE SP_ID=@NSPID AND A.DISCOUNT_PERCENTAGE >=EXCLUSIVE_VAT_TO_DISC AND A.DISCOUNT_PERCENTAGE<>0 AND APPLY_EXCLUSIVE_TAX=1
			AND NOT (A.MANUAL_TAX_METHOD=1 AND A.TAX_METHOD<>0)

			SET @CSTEP = 361.55
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1

			IF @BAPPLYEXCLTAXONDISCITEMSLOC=1
				UPDATE A WITH (ROWLOCK) SET TAX_METHOD=2 
				FROM SLS_CMD01106_UPLOAD A 
				WHERE SP_ID=@NSPID AND ((A.CMM_DISCOUNT_AMOUNT<>0  AND ABS((A.DISCOUNT_AMOUNT+
				A.CMM_DISCOUNT_AMOUNT)/(A.MRP*A.QUANTITY))*100>=@NEXCLTAXTODISC)
				OR (A.CMM_DISCOUNT_AMOUNT=0 AND A.DISCOUNT_PERCENTAGE>=@NEXCLTAXTODISC))
				AND (@BSALESSETUPDISABLED=1 OR ISNULL(SLSDET_ROW_ID,'')='')
				AND NOT (A.MANUAL_TAX_METHOD=1 AND A.TAX_METHOD<>0)
			
		END
	END

	---COMMENTED THIS STEP AS IT IS RUNNING SLOW AT SUVIDHA (DATE:02-02-2022)
	--UPDATE SLS_CMD01106_UPLOAD SET TAX_METHOD=1(CASE WHEN ISNULL(A.FORM_ID,'') NOT IN ('','0000000') THEN 2
	--WHEN (A.MANUAL_TAX_METHOD=1 AND A.TAX_METHOD<>0) OR (@BGSTBILL=1 AND A.QUANTITY<0 AND A.REF_SLS_MEMO_DT>'2017-06-30' 
	--AND @CGSTSLRTAXPICKINGMODE='1') 
	--THEN A.TAX_METHOD  
	-- WHEN  T.USER_CODE IS NULL
	--AND  ((A.DISCOUNT_PERCENTAGE >=EXCLUSIVE_VAT_TO_DISC AND A.DISCOUNT_PERCENTAGE<>0 AND APPLY_EXCLUSIVE_TAX=1)
	--		OR (A.DISCOUNT_PERCENTAGE >= @NEXCLTAXTODISC AND @BAPPLYEXCLTAXONDISCITEMSLOC=1 
	--			AND (@BSALESSETUPDISABLED=1 OR ISNULL(A.SLSDET_ROW_ID,'')=''))
	--		OR ((A.CMM_DISCOUNT_AMOUNT<>0 AND @BAPPLYEXCLTAXONDISCITEMSLOC=1) AND ABS(((A.DISCOUNT_AMOUNT+
	--			A.CMM_DISCOUNT_AMOUNT)/A.MRP)*100) >=@NEXCLTAXTODISC ))
	--THEN 2 ELSE 1 END)
	--FROM SLS_CMD01106_UPLOAD A WITH (ROWLOCK)
	--JOIN SLS_CMM01106_UPLOAD B (NOLOCK) ON A.SP_ID=B.SP_ID
	--LEFT OUTER JOIN FORM (NOLOCK) ON FORM.FORM_ID=A.FORM_ID
	--LEFT OUTER JOIN RPS_MST R (NOLOCK) ON R.CM_ID=A.PACK_SLIP_ID
	--LEFT OUTER JOIN 
	--(
	--SELECT USER_CODE FROM USER_ROLE_DET A (NOLOCK)
	--JOIN USERS B (NOLOCK) ON A.ROLE_ID=B.ROLE_ID WHERE FORM_OPTION='DONOT_CALC_EXCLTAX_DISCITEMS'
	--AND VALUE='1' AND USER_CODE<>'0000000'
	--) T ON T.USER_CODE=ISNULL(R.USER_CODE,B.USER_CODE) 
	--LEFT OUTER JOIN SCHEME_SETUP_DET D (NOLOCK) ON A.SLSDET_ROW_ID=D.ROW_ID
	--WHERE A.SP_ID=@NSPID AND (A.QUANTITY>0 OR @CPICKLASTSLSTAX<>'1' OR DATEDIFF(DD,'2017-07-01',B.CM_DT)<=180 OR 
	--REF_SLS_MEMO_DT='')

	SET @CSTEP = 361.65	
	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
				
	UPDATE SLS_CMD01106_UPLOAD WITH (ROWLOCK)
	SET TAX_METHOD=1 WHERE SP_ID=@NSPID AND ISNULL(TAX_METHOD,0)=0
	

	SET @CSTEP = 361.17
	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1

	SELECT CM_DT,USER_CODE,PARTY_TYPE,PARTY_STATE_CODE,CUSTOMER_CODE,AC_CODE,NET_AMOUNT,OH_TAX_METHOD,OTHER_CHARGES_GST_PERCENTAGE,OTHER_CHARGES_HSN_CODE,
	OTHER_CHARGES_CGST_AMOUNT,OTHER_CHARGES_SGST_AMOUNT,OTHER_CHARGES_IGST_AMOUNT,OTHER_CHARGES_TAXABLE_VALUE,
	SUBTOTAL,SUBTOTAL_R,ATD_CHARGES,DISCOUNT_AMOUNT,ROUND_OFF,TOTAL_GST_CESS_AMOUNT,MANUAL_ROUNDOFF,manual_discount
	INTO #TSLSMSTTABLE FROM SLS_CMM01106_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID
	
	SET @CSTEP = 361.19
	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1

	SELECT PRODUCT_CODE,TAX_METHOD,MANUAL_TAX_METHOD,QUANTITY,A.DISCOUNT_PERCENTAGE,CMM_DISCOUNT_AMOUNT,NET,RFNET,A.ROW_ID,
	MRP,HSN_CODE,GST_PERCENTAGE,IGST_AMOUNT,CGST_AMOUNT,SGST_AMOUNT,XN_VALUE_WITH_GST,XN_VALUE_WITHOUT_GST,FORM_ID,
	PACK_SLIP_ID,REF_SLS_MEMO_DT,RFNET_WITH_OTHER_CHARGES,
	SLSDET_ROW_ID,A.DISCOUNT_AMOUNT,TAX_PERCENTAGE,TAX_AMOUNT,WEIGHTEDQTYBILLCOUNT,WEIGHTEDNRVBILLCOUNT,
	HOLD_FOR_ALTER,ALT_CHARGES_APPLICABLE,REALIZE_SALE,OLD_MRP,TAX_ROUND_OFF,ALT_JOB_RATE,ALT_VENDOR_JOB_RATE,
	GST_CESS_PERCENTAGE,GST_CESS_AMOUNT,A.SIS_NET,SISLOC_MRP
	INTO #TSLSDETTABLE FROM SLS_CMD01106_UPLOAD A (NOLOCK)
	WHERE SP_ID=@NSPID	
	

	SET @CSTEP = 361.21
	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
	UPDATE A SET SUBTOTAL=B.SUBTOTAL,SUBTOTAL_R=0 FROM #TSLSMSTTABLE A
	JOIN (SELECT SUM(NET) AS SUBTOTAL FROM #TSLSDETTABLE) B ON 1=1


		
	DECLARE @BSISLOC BIT,@CRETAINEXCELNRV VARCHAR(4),@NGSTCALCLOOP INT,
	@BLOCALBILL BIT,@CPARTYSTATECODE CHAR(7),@NNET_AMOUNT NUMERIC(12,2),@CALNETAMOUNT NUMERIC(12,2)

	SELECT @BSISLOC=ISNULL(SIS_LOC,0) FROM LOCATION (NOLOCK) WHERE DEPT_ID=@CLOCATIONID
	
	SET @BGSTCOLSMAPPED=0
	
	IF @BSISLOC=1
	BEGIN
		SELECT TOP 1 @CRETAINEXCELNRV=VALUE FROM CONFIG (NOLOCK)
		WHERE CONFIG_OPTION='RETAIN_EXCEL_NRV_SISLOC_SALEIMP'

		IF EXISTS (SELECT TOP 1 SP_ID FROM SLS_IMPORT_DATA_MAPPING (NOLOCK) WHERE SP_ID=@NSPID
					AND MASTER_COL IN('GST_PERCENTAGE','IGST_AMOUNT','CGST_AMOUNT','SGST_AMOUNT','XN_VALUE_WITHOUT_GST')
					AND MAPPED_COL<>'')
			SET @BGSTCOLSMAPPED=1
			
	END
	
	SET @CRETAINEXCELNRV=ISNULL(@CRETAINEXCELNRV,'')
	

	IF @BGSTBILL=1
	BEGIN
		
		SET @NGSTCALCLOOP = (CASE WHEN @BSISLOC=1 AND ISNULL(@BGSTCOLSMAPPED,0)=0 THEN 2 ELSE 1 END)

		WHILE @NGSTCALCLOOP>0
		BEGIN
			  SET @CSTEP = 361.23
			  EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1						

			  SELECT @NNET_AMOUNT=NET_AMOUNT FROM SLS_CMM01106_UPLOAD WHERE SP_ID =@NSPID
	      
			SELECT @CPARTYSTATECODE='',@BLOCALBILL=0
		

			SET @CSTEP = 361.25
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1		
			IF EXISTS (SELECT TOP 1 SP_ID FROM SLS_GST_TAXINFO_CALC (NOLOCK) WHERE SP_ID=@NSPID)
			BEGIN
				DELETE FROM SLS_GST_TAXINFO_CALC WITH (ROWLOCK) WHERE SP_ID=@NSPID
				DELETE FROM SLS_GST_TAXINFO_CALC WITH (ROWLOCK) WHERE SP_ID=(@NSPID+'ZZ')
			END				

			SET @CSTEP = 361.30	
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1


			INSERT SLS_GST_TAXINFO_CALC	(MEMO_DT, PRODUCT_CODE, SP_ID ,NET_VALUE,TAX_METHOD,ROW_ID,QUANTITY,MRP )  
			SELECT @DCMDT, A.PRODUCT_CODE,@NSPID AS SP_ID,((CASE WHEN @NGSTCALCLOOP=1 THEN  A.NET ELSE A.SIS_NET END)  -ISNULL(A.CMM_DISCOUNT_AMOUNT,0)) AS NET_VALUE,
			(CASE WHEN A.TAX_METHOD=2 THEN 1 ELSE 2 END) AS TAX_METHOD,A.ROW_ID,A.QUANTITY,
			(CASE WHEN @NGSTCALCLOOP=1 THEN A.MRP ELSE A.SISLOC_MRP END)
			FROM #TSLSDETTABLE A

			--IF @@SPID=382
			--	SELECT 'CHECK TM',TAX_METHOD,PRODUCT_CODE FROM SLS_CMD01106_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID
						
			SET @CSTEP = 361.32	
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1

			IF EXISTS(SELECT TOP 1 'U' FROM BATCHWISE_FIXCODE_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID)
			BEGIN
				INSERT SLS_GST_TAXINFO_CALC	WITH (ROWLOCK)(MEMO_DT,SOURCE_DEPT_ID,PRODUCT_CODE, SP_ID ,NET_VALUE,TAX_METHOD,ROW_ID,QUANTITY ,MRP)  
				SELECT @DCMDT,@CLOCATIONID AS DEPT_ID,B.PRODUCT_CODE,@NSPID AS SP_ID,
				((CASE WHEN @NGSTCALCLOOP=1 THEN  B.NET ELSE B.SIS_NET END)-ISNULL(B.CMM_DISCOUNT_AMOUNT,0)) AS NET_VALUE,
				(CASE WHEN A.TAX_METHOD=2 THEN 1 ELSE 2 END) AS TAX_METHOD,B.ROW_ID,B.QUANTITY,
				(CASE WHEN @NGSTCALCLOOP=1 THEN  B.MRP ELSE B.SISLOC_MRP END)
				FROM #TSLSDETTABLE  A
				JOIN SLS_CMD01106_UPLOAD B WITH (NOLOCK)ON A.ROW_ID=B.TEMP_ROW_ID
				JOIN SLS_CMM01106_UPLOAD CMM WITH (NOLOCK) ON B.SP_ID =CMM.SP_ID+'ZZ' 
				WHERE CMM.SP_ID=@NSPID  AND B.ROW_ID<>B.TEMP_ROW_ID 
			END

			SET @CSTEP = 361.35
			EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1	

			IF EXISTS (SELECT TOP 1 PRODUCT_CODE FROM SLS_GST_TAXINFO_CALC WITH (NOLOCK) WHERE SP_ID=@NSPID)
			BEGIN 			
		
				SET @CSTEP = 361.38
				EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
	
				DECLARE @CPARTY_GSTN_NO VARCHAR(20),@NPARTYTYPE INT
				SET @CPARTY_GSTN_NO = ''
				SELECT @NPARTYTYPE=PARTY_TYPE FROM #TSLSMSTTABLE
				IF @NPARTYTYPE=2
					SELECT @CPARTY_GSTN_NO=AC_GST_NO,@CPARTYSTATECODE=A.PARTY_STATE_CODE FROM #TSLSMSTTABLE A 
					JOIN LMP01106 B WITH (NOLOCK) ON A.AC_CODE=B.AC_CODE
				
				ELSE
					SELECT @CPARTY_GSTN_NO=ISNULL(B.CUS_GST_NO,''),@CPARTYSTATECODE=A.PARTY_STATE_CODE
					FROM #TSLSMSTTABLE A JOIN CUSTDYM B WITH (NOLOCK) ON A.CUSTOMER_CODE=B.CUSTOMER_CODE
		

				--DECLARE @BAUTOCALATDCHARGES BIT,@BRECALATDGST BIT
			
				--SELECT TOP 1 @BAUTOCALATDCHARGES=ISNULL(AUTO_CALCULATION_OF_ALTERATION_CHARGES,0) FROM LOCATION (NOLOCK)
				--WHERE DEPT_ID=@CLOCATIONID

				--IF ISNULL(@BAUTOCALATDCHARGES,0)=1
				--	SET @NATDCHARGES=0

					   			 			
			
					INSERT SLS_GST_TAXINFO_CALC_OH WITH (ROWLOCK)	( SP_ID,OTHER_CHARGES,OH_TAX_METHOD )
					SELECT @NSPID,ATD_CHARGES,OH_TAX_METHOD FROM #TSLSMSTTABLE WHERE ATD_CHARGES<>0
			
				SET @CSTEP = 361.40
				EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1

				EXEC SP3S_GST_TAX_CAL_SLS
				@CXN_TYPE='SLS',
				@CMEMO_ID='',
				@DMEMO_DT=@DCMDT,
				@NSPID=@NSPID,
				@CPARTYSTATE_CODE=@CPARTYSTATECODE,
				@BLOCALBILL= @BLOCALBILL,
				@CPARTY_GSTN_NO=@CPARTY_GSTN_NO,
				@CLOCATIONID=@CLOCATIONID,
				@CERRMSG=@CERRORMSG OUTPUT


				IF ISNULL(@CERRORMSG,'')<>''
					GOTO END_PROC
		

				SET @CSTEP = 361.43
				EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
				IF EXISTS(SELECT TOP 1 'U' FROM BATCHWISE_FIXCODE_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID)
				BEGIN
					IF @BGSTCOLSMAPPED=1 OR @NGSTCALCLOOP=1
						UPDATE A SET GST_PERCENTAGE=(CASE WHEN @CRETAINEXCELNRV='1' AND @BGSTCOLSMAPPED=1 THEN A.GST_PERCENTAGE ELSE  B.GST_PERCENTAGE END),
										IGST_AMOUNT=(CASE WHEN @CRETAINEXCELNRV='1' AND @BGSTCOLSMAPPED=1 THEN A.IGST_AMOUNT ELSE  B.IGST_AMOUNT END),
										CGST_AMOUNT=(CASE WHEN @CRETAINEXCELNRV='1' AND @BGSTCOLSMAPPED=1 THEN A.CGST_AMOUNT ELSE  B.CGST_AMOUNT END),
										SGST_AMOUNT=(CASE WHEN @CRETAINEXCELNRV='1' AND @BGSTCOLSMAPPED=1 THEN A.SGST_AMOUNT ELSE  B.SGST_AMOUNT END),
										XN_VALUE_WITHOUT_GST=(CASE WHEN @CRETAINEXCELNRV='1' AND @BGSTCOLSMAPPED=1 THEN A.XN_VALUE_WITHOUT_GST ELSE  B.XN_VALUE_WITHOUT_GST END),
										XN_VALUE_WITH_GST=(CASE WHEN @CRETAINEXCELNRV='1' AND @BGSTCOLSMAPPED=1 
										THEN A.XN_VALUE_WITHOUT_GST+A.IGST_AMOUNT+A.CGST_AMOUNT+A.SGST_AMOUNT 
										ELSE B.XN_VALUE_WITH_GST END),HSN_CODE=B.HSN_CODE,	GST_CESS_PERCENTAGE=B.GST_CESS_PERCENTAGE,
										GST_CESS_AMOUNT=B.GST_CESS_AMOUNT
						FROM SLS_CMD01106_UPLOAD A WITH (ROWLOCK)
						JOIN SLS_GST_TAXINFO_CALC B WITH (NOLOCK) ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.ROW_ID=A.ROW_ID AND B.SP_ID+'ZZ'=A.SP_ID
						WHERE B.SP_ID=@NSPID
				END


			--	SELECT * FROM SLS_GST_TAXINFO_CALC WHERE SP_ID=@NSPID

				SET @CSTEP = 361.432
				EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
				IF EXISTS (SELECT TOP 1 'U' FROM PSHBD_HOLD_BACK_DELIVER_MST_UPLOAD (NOLOCK) WHERE SP_ID=@NLOGINSPID )
				BEGIN

					SET @CSTEP = 361.45	
					EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
	            
					SELECT @NATDCHARGES=SUM(JOB_RATE*QUANTITY) 
					FROM PSHBD_HOLD_BACK_DELIVER_DET_UPLOAD WHERE SP_ID=@NLOGINSPID

					SET @NATDCHARGES=ISNULL(@NATDCHARGES,0)
					UPDATE A SET ATD_CHARGES=@NATDCHARGES FROM #TSLSMSTTABLE A

				
					IF @NATDCHARGES<>0
					BEGIN

						SET @CSTEP = 361.48
						EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
						INSERT SLS_GST_TAXINFO_CALC_OH WITH (ROWLOCK)	( SP_ID,OTHER_CHARGES,OH_TAX_METHOD )
						SELECT @NSPID,@NATDCHARGES,OH_TAX_METHOD FROM #TSLSMSTTABLE

						--- NEED TO CALL THE PROCEDURE AGAIN TO CALCULATE ATD CHARGES GST
						SET @CSTEP = 361.50	
						EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1

						EXEC SP3S_GST_TAX_CAL_SLS
						@CXN_TYPE='SLS',
						@CMEMO_ID='',
						@DMEMO_DT=@DCMDT,
						@NSPID=@NSPID,
						@CPARTYSTATE_CODE=@CPARTYSTATECODE,
						@BLOCALBILL= @BLOCALBILL,
						@CPARTY_GSTN_NO=@CPARTY_GSTN_NO,
						@CERRMSG=@CERRORMSG OUTPUT

					END
				END			
			END
		
			DECLARE @CALWAYS_PICK_GST_MODE_IN_RETAIL VARCHAR(10)
			SELECT @CALWAYS_PICK_GST_MODE_IN_RETAIL=VALUE  FROM CONFIG WHERE CONFIG_OPTION='ALWAYS_PICK_GST_MODE_IN_RETAIL_SALE_FROM_HSN_MASTER'



			
			IF @BGSTCOLSMAPPED=1 OR @NGSTCALCLOOP=1
			BEGIN
				SET @CSTEP = 361.53	
				EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1

				UPDATE A WITH (ROWLOCK) SET TAX_AMOUNT=0,TAX_PERCENTAGE=0,	HSN_CODE=B.HSN_CODE,
				GST_PERCENTAGE=(CASE WHEN @CRETAINEXCELNRV='1' AND @BGSTCOLSMAPPED=1 THEN A.GST_PERCENTAGE ELSE  B.GST_PERCENTAGE END),
				IGST_AMOUNT=(CASE WHEN @CRETAINEXCELNRV='1' AND @BGSTCOLSMAPPED=1  THEN A.IGST_AMOUNT ELSE  B.IGST_AMOUNT END),
				CGST_AMOUNT=(CASE WHEN @CRETAINEXCELNRV='1' AND @BGSTCOLSMAPPED=1 THEN A.CGST_AMOUNT ELSE  B.CGST_AMOUNT END),
				SGST_AMOUNT=(CASE WHEN @CRETAINEXCELNRV='1' AND @BGSTCOLSMAPPED=1 THEN A.SGST_AMOUNT ELSE  B.SGST_AMOUNT END),
				XN_VALUE_WITHOUT_GST=(CASE WHEN @CRETAINEXCELNRV='1' AND @BGSTCOLSMAPPED=1 
				THEN A.XN_VALUE_WITHOUT_GST ELSE  B.XN_VALUE_WITHOUT_GST END),
				XN_VALUE_WITH_GST=(CASE WHEN @CRETAINEXCELNRV='1' AND @BGSTCOLSMAPPED=1  
				THEN A.XN_VALUE_WITHOUT_GST+A.IGST_AMOUNT+A.CGST_AMOUNT+A.SGST_AMOUNT 
										ELSE B.XN_VALUE_WITH_GST END),
				GST_CESS_PERCENTAGE =B.GST_CESS_PERCENTAGE ,GST_CESS_AMOUNT =B.GST_CESS_AMOUNT ,
				TAX_METHOD= CASE WHEN ISNULL(@CALWAYS_PICK_GST_MODE_IN_RETAIL,'')='1' 
				THEN  (CASE WHEN B.TAX_METHOD=2 THEN 1 ELSE 2 END) 
				ELSE A.TAX_METHOD END
				FROM SLS_CMD01106_UPLOAD A JOIN SLS_GST_TAXINFO_CALC B  (NOLOCK) ON A.ROW_ID=B.ROW_ID AND A.SP_ID=B.SP_ID
				WHERE B.SP_ID=@NSPID
				
				SET @CSTEP = 361.55	
				EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1

					
				UPDATE SLS_CMD01106_UPLOAD WITH (ROWLOCK)  SET XN_VALUE_WITHOUT_GST=NET-CMM_DISCOUNT_AMOUNT,
				XN_VALUE_WITH_GST=NET-CMM_DISCOUNT_AMOUNT
				WHERE SP_ID=@NSPID AND QUANTITY<0 AND REF_SLS_MEMO_DT<'2017-07-01' AND ISNULL(REF_SLS_MEMO_DT,'')<>'' 
				AND ISNULL(XN_VALUE_WITHOUT_GST,0)=0				

				SET @CSTEP = 361.57	
				EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1

				UPDATE a SET igst_amount=b.igst_amount,cgst_amount=b.cgst_amount,sgst_amount=b.sgst_amount,xn_value_without_gst=b.xn_value_without_gst
				,xn_value_with_gst=b.xn_value_with_gst
				from #tslsdetTable a
				JOIN SLS_cmd01106_UPLOAD b (NOLOCK) ON a.ROW_ID=b.ROW_ID
				WHERE b.sp_id=@nSpid

			END


			IF (@BGSTCOLSMAPPED=0 AND @NGSTCALCLOOP=2) OR (@CRETAINEXCELNRV='1' AND @BGSTCOLSMAPPED=1) 
			BEGIN
				SET @CSTEP = 361.58	
				EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1	
				
				--IF  @@SPID=74 AND @CREFNO='05-S/07471/MAR-22'
				--	SELECT 'CHECK GST FROM  PROC',@CREFNO,* FROM SLS_GST_TAXINFO_CALC
				--	WHERE SP_ID=@NSPID

				UPDATE A  SET SISLOC_GST_PERCENTAGE= B.GST_PERCENTAGE,SISLOC_IGST_AMOUNT=B.IGST_AMOUNT,
				SISLOC_LGST_AMOUNT=(B.CGST_AMOUNT+B.SGST_AMOUNT),SISLOC_TAXABLE_VALUE=B.XN_VALUE_WITHOUT_GST
				FROM SLS_CMD01106_UPLOAD A WITH (ROWLOCK) JOIN SLS_GST_TAXINFO_CALC B  (NOLOCK) ON A.ROW_ID=B.ROW_ID AND A.SP_ID=B.SP_ID
				WHERE B.SP_ID=@NSPID

			END
			
			SET @NGSTCALCLOOP=@NGSTCALCLOOP-1
		END

		SET @CSTEP = 361.60
		EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
		--OVER HEADS UPDATE
		UPDATE A SET OTHER_CHARGES_GST_PERCENTAGE=ISNULL(B.OTHER_CHARGES_GST_PERCENTAGE,0),
		OTHER_CHARGES_HSN_CODE=CASE WHEN ISNULL(B.OTHER_CHARGES_HSN_CODE,'')='' THEN '0000000000' ELSE B.OTHER_CHARGES_HSN_CODE END ,
	    OTHER_CHARGES_IGST_AMOUNT=ROUND(CASE WHEN ISNULL(ISIGST,0)=1 THEN ISNULL(B.OTHER_CHARGES_GST_AMOUNT,0) ELSE 0 END,2),
		OTHER_CHARGES_CGST_AMOUNT=ROUND(CASE WHEN ISNULL(ISIGST,0)=1 THEN 0 ELSE ISNULL(B.OTHER_CHARGES_GST_AMOUNT,0) END/2,2),
	    OTHER_CHARGES_SGST_AMOUNT=ROUND(CASE WHEN ISNULL(ISIGST,0)=1 THEN 0 ELSE ISNULL(B.OTHER_CHARGES_GST_AMOUNT,0) END/2,2),
		OTHER_CHARGES_TAXABLE_VALUE=ISNULL(B.OTHER_CHARGES_TAXABLE_VALUE,0)
		FROM #TSLSMSTTABLE A 
		LEFT JOIN SLS_GST_TAXINFO_CALC_OH B  (NOLOCK) ON B.SP_ID=@NSPID
		

	END					

			
	SET @CSTEP = 361.62
	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
	DECLARE @CROUNDBILLLEVEL VARCHAR(4),@NEXCLTAX NUMERIC(10,2),@NTOTAL_GST_CESS_AMOUNT NUMERIC(10,2)
			
	SELECT @NEXCLTAX=SUM(TAX_AMOUNT+ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)),
	       @NTOTAL_GST_CESS_AMOUNT=SUM(ISNULL(GST_CESS_AMOUNT ,0))
	FROM SLS_cmd01106_UPLOAD (NOLOCK) A WHERE sp_id=@nSpId AND TAX_METHOD=2


	SELECT @NEXCLTAX=ISNULL(@NEXCLTAX,0)+
	(CASE WHEN OH_TAX_METHOD=2 THEN 0 ELSE ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_SGST_AMOUNT,0) END)
	FROM #TSLSMSTTABLE


		SET @CSTEP = 361.65	
	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
	UPDATE #TSLSMSTTABLE SET OTHER_CHARGES_HSN_CODE='0000000000' WHERE  ISNULL(OTHER_CHARGES_HSN_CODE,'')='' 
									
	UPDATE #TSLSMSTTABLE SET NET_AMOUNT=SUBTOTAL+SUBTOTAL_R+ATD_CHARGES+ISNULL(@NEXCLTAX,0)+ISNULL(@NTOTAL_GST_CESS_AMOUNT,0)-DISCOUNT_AMOUNT 

	

	DECLARE @CPICKROUNDITEMLEVELFROMLOC VARCHAR(4)
	SELECT TOP 1 @CPICKROUNDITEMLEVELFROMLOC = VALUE  FROM CONFIG WHERE  CONFIG_OPTION='PICK_SLS_ROUND_OFF_FROMLOC'
	
	IF ISNULL(@CPICKROUNDITEMLEVELFROMLOC,'')<>'1'
		SELECT TOP 1 @CROUNDBILLLEVEL=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='SLS_ROUND_BILL_LEVEL' 
	ELSE
		SELECT TOP 1 @CROUNDBILLLEVEL = SLS_ROUND_BILL_LEVEL  FROM LOCATION (NOLOCK) WHERE DEPT_ID=@CLOCATIONID


	

			
	DECLARE @bManualDiscount BIT,@BMANUALROUNDOFF BIT,@NBILLROUNDOFF NUMERIC(10,2)		
	SET @CSTEP = 361.67
	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
	SELECT @BMANUALROUNDOFF=ISNULL(MANUAL_ROUNDOFF,0),@bManualDiscount=(CASE WHEN discount_amount<>0 AND ISNULL(manual_discount,0)=1 THEN 1 ELSE 0 END), 
	@NBILLROUNDOFF= (CASE WHEN ISNULL(@CROUNDBILLLEVEL,'')='4' THEN 0
	WHEN ISNULL(@CROUNDBILLLEVEL,'')='2' THEN ROUND(NET_AMOUNT/5,0)*5-NET_AMOUNT
	WHEN ISNULL(@CROUNDBILLLEVEL,'')='3' THEN CEILING(NET_AMOUNT/5)*5-NET_AMOUNT  ELSE ROUND(NET_AMOUNT,0)-NET_AMOUNT  END)
	FROM #TSLSMSTTABLE
	

	IF @BMANUALROUNDOFF=0 
	BEGIN
		SET @CSTEP = 361.675
		UPDATE #TSLSMSTTABLE SET ROUND_OFF= @NBILLROUNDOFF
							
	END

	UPDATE #TSLSMSTTABLE SET NET_AMOUNT=SUBTOTAL+SUBTOTAL_R+ATD_CHARGES+ISNULL(@NEXCLTAX,0)+ISNULL(@NTOTAL_GST_CESS_AMOUNT,0)-DISCOUNT_AMOUNT+ROUND_OFF 				


	SET @CSTEP = 361.68	
	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
	EXEC SP_CHKXNSAVELOG 'SLS',@CSTEP,0,@NSPID,1

	DECLARE @NNEWNETAMOUNT NUMERIC(10,2),@CPAYMODEROWID VARCHAR(40),@CADJPAYMODECODE CHAR(7)
	SELECT @NPAYMODETOTAMT = SUM(AMOUNT) FROM SLS_PAYMODE_XN_DET_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID		
			
	SET @NPAYMODETOTAMT=ISNULL(@NPAYMODETOTAMT,0)
			
	SELECT @NNEWNETAMOUNT=NET_AMOUNT FROM #TSLSMSTTABLE
			
	IF ISNULL(@NPAYMODETOTAMT,0)<>@NNEWNETAMOUNT
	BEGIN
			SET @CSTEP = 361.70	
	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
		SELECT TOP 1 @CADJPAYMODECODE=PAYMODE_CODE,@CPAYMODEROWID=ROW_ID FROM SLS_PAYMODE_XN_DET_UPLOAD (NOLOCK)
		WHERE SP_ID=@NSPID AND PAYMODE_CODE='0000000'
				
		IF ISNULL(@CADJPAYMODECODE,'')=''
			SELECT TOP 1 @CADJPAYMODECODE=A.PAYMODE_CODE,@CPAYMODEROWID=ROW_ID
			FROM SLS_PAYMODE_XN_DET_UPLOAD A (NOLOCK)
			JOIN PAYMODE_MST B (NOLOCK) ON A.PAYMODE_CODE=B.PAYMODE_CODE
			WHERE SP_ID=@NSPID AND PAYMODE_GRP_CODE='0000002'					
								
			SET @CSTEP = 361.73	
	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
		IF ISNULL(@CADJPAYMODECODE,'')<>''
			UPDATE SLS_PAYMODE_XN_DET_UPLOAD WITH (ROWLOCK) SET AMOUNT=AMOUNT+(@NNEWNETAMOUNT-@NPAYMODETOTAMT) WHERE SP_ID=@NSPID AND ROW_ID=@CPAYMODEROWID		
	END				

		SET @CSTEP = 361.75	
	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
	PRINT 'CALL REPROCESS GST FOR SLS-1'
	EXEC SP3S_REPROCESS_GST_CALCULATION '','SLS',@NSPID,@CERRORMSG OUTPUT 
	IF ISNULL(@CERRORMSG,'')<>''
			GOTO END_PROC
			
	SET @CSTEP = 361.80	
	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
	EXEC SP3S_UPDATERFNET_SLS 
	@CERRORMSG=@CERRORMSG OUTPUT 
	
	IF ISNULL(@CERRORMSG,'')<>''
		GOTO END_PROC
	
	--IF @@SPID=245
	--	SELECT 'CHECK RFNET',RFNET,MRP,QUANTITY,DISCOUNT_AMOUNT, NET,CMM_DISCOUNT_AMOUNT FROM #TSLSDETTABLE

	SET @CSTEP = 361.83	
	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
	DECLARE @NTOTABSQTY NUMERIC(10,2),@NTOTABSRFNET NUMERIC(10,2)

	SELECT @NTOTABSQTY=SUM(ABS(QUANTITY)),@NTOTABSRFNET=SUM(ABS(RFNET)) FROM #TSLSDETTABLE 

	UPDATE #TSLSDETTABLE SET  WEIGHTEDQTYBILLCOUNT=  CONVERT(NUMERIC(6,2),CONVERT(NUMERIC(10,2),ABS(QUANTITY)) /
	CONVERT(NUMERIC(10,2),@NTOTABSQTY))

	-- as discuss with sanjiv sir SUM OF  WEIGHTEDQTYBILLCOUNT ALWAYS SHOULD BE 1 BOT COLUMN STORE ONLY TWO DIGIT DATA

	declare @ncalWEIGHTEDQTYBILLCOUNT numeric(6,2)
	select @ncalWEIGHTEDQTYBILLCOUNT=sum(WEIGHTEDQTYBILLCOUNT) from #TSLSDETTABLE 

	 if @ncalWEIGHTEDQTYBILLCOUNT<>1
	 begin
	      declare @crow_id varchar(50)
		  select top 1 @crow_id=row_id from #TSLSDETTABLE
		  update #TSLSDETTABLE set WEIGHTEDQTYBILLCOUNT=WEIGHTEDQTYBILLCOUNT+(1-@ncalWEIGHTEDQTYBILLCOUNT) where row_id =@crow_id

	 end


	
		SET @CSTEP = 361.86	
	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
	UPDATE #TSLSDETTABLE SET  WEIGHTEDNRVBILLCOUNT= (CASE WHEN @NTOTABSRFNET=0 THEN 0 ELSE  
	CONVERT(NUMERIC(6,2),CONVERT(NUMERIC(10,2),ABS(RFNET )) / CONVERT(NUMERIC(10,2),@NTOTABSRFNET)) END)
	
	--IF @@SPID=124
	--BEGIN
	--	SELECT  'CHK SUM NET', SUM(NET) FROM #TSLSDETTABLE
	--	SELECT  'CHK SUBTOTAL',SUBTOTAL FROM #TSLSMSTTABLE
	--END
	
	SET @CSTEP = 361.90	
	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
	UPDATE A SET PARTY_STATE_CODE=B.PARTY_STATE_CODE,NET_AMOUNT=B.NET_AMOUNT,OTHER_CHARGES_GST_PERCENTAGE=B.OTHER_CHARGES_GST_PERCENTAGE,
	OTHER_CHARGES_HSN_CODE=B.OTHER_CHARGES_HSN_CODE,OTHER_CHARGES_CGST_AMOUNT=B.OTHER_CHARGES_CGST_AMOUNT,
	OTHER_CHARGES_SGST_AMOUNT=B.OTHER_CHARGES_SGST_AMOUNT,OTHER_CHARGES_IGST_AMOUNT=B.OTHER_CHARGES_IGST_AMOUNT,
	OTHER_CHARGES_TAXABLE_VALUE=B.OTHER_CHARGES_TAXABLE_VALUE,SUBTOTAL=B.SUBTOTAL,SUBTOTAL_R=B.SUBTOTAL_R,DISCOUNT_AMOUNT=B.DISCOUNT_AMOUNT,
	ROUND_OFF=B.ROUND_OFF,ATD_CHARGES=B.ATD_CHARGES ,
	TOTAL_GST_CESS_AMOUNT=@NTOTAL_GST_CESS_AMOUNT
	FROM SLS_CMM01106_UPLOAD A WITH (ROWLOCK)
	JOIN #TSLSMSTTABLE B ON 1=1
	WHERE SP_ID=@NSPID

	SET @CSTEP = 361.95	
	EXEC SP_CHKXNSAVELOG 'SLS_TMP',@CSTEP,0,@NSPID,1
	UPDATE  A SET TAX_METHOD=(CASE WHEN ISNULL(B.TAX_METHOD,0)=0 THEN 1 ELSE B.TAX_METHOD END),RFNET=B.RFNET,
	RFNET_WITH_OTHER_CHARGES=B.RFNET_WITH_OTHER_CHARGES,
	REALIZE_SALE=B.REALIZE_SALE,OLD_MRP=B.OLD_MRP,ALT_JOB_RATE=B.ALT_JOB_RATE,
	ALT_VENDOR_JOB_RATE=B.ALT_VENDOR_JOB_RATE,WEIGHTEDQTYBILLCOUNT=B.WEIGHTEDQTYBILLCOUNT,WEIGHTEDNRVBILLCOUNT=B.WEIGHTEDNRVBILLCOUNT,
    TAX_ROUND_OFF=B.TAX_ROUND_OFF
	FROM  SLS_CMD01106_UPLOAD A WITH (ROWLOCK)
	JOIN #TSLSDETTABLE B ON A.ROW_ID=B.ROW_ID
	WHERE SP_ID=@NSPID

	--IF @@SPID=86
	--BEGIN
	--	SELECT 'AFTER APPLYING GST',@CREFNO,SISLOC_GST_PERCENTAGE,SISLOC_TAXABLE_VALUE,XN_VALUE_WITHOUT_GST,XN_VALUE_WITH_GST,NET,SIS_NET, * FROM  SLS_CMD01106_UPLOAD WHERE SP_ID=@NSPID
	--END


	GOTO END_PROC
END TRY

BEGIN CATCH
	SET @CERRORMSG='ERROR IN PROCEDURE SP3S_CALTOTALS_SLS AT STEP#'+@CSTEP+' '+ERROR_MESSAGE()
	GOTO END_PROC
END CATCH

END_PROC:

END