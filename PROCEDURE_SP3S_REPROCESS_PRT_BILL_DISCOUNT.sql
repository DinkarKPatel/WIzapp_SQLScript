CREATE PROCEDURE SP3S_REPROCESS_PRT_BILL_DISCOUNT
(
 @NSPID varchar(40)=''
,@ERRMSG VARCHAR(MAX) OUTPUT
)
AS
BEGIN
 BEGIN TRY
       
       DECLARE @CTMPMASTERTABLE VARCHAR(100),@CTMPDETAILTABLE VARCHAR(100),@cStep varchar(4),
       @NTOTAL_DISCOUNT_AMOUNT NUMERIC(10,2),@NITEM_DISCOUNT_AMOUNT NUMERIC(10,2),@DTSQL NVARCHAR(MAX),
       @NTOTALDIFF NUMERIC(10,2),@CIN_VALUE NUMERIC(10,2),
       @NNEWDIFF NUMERIC(10,2),@NPREVDIFF NUMERIC(10,2),@CTEMPDBNAME VARCHAR(100)

	   SET @CTEMPDBNAME = ''
       SET @NPREVDIFF=0
      
	  set @cStep=10
		--SET @CTMPMASTERTABLE	= @CTEMPDBNAME +'TEMP_RMM01106_'+LTRIM(RTRIM(STR(@NSPID)))
		--SET @CTMPDETAILTABLE	= @CTEMPDBNAME + 'TEMP_RMD01106_'+LTRIM(RTRIM(STR(@NSPID)))
    
		SELECT   @NTOTAL_DISCOUNT_AMOUNT= ISNULL(DISCOUNT_AMOUNT,0)  FROM #tPrtMstTable
	       
		LBLCALCULATE_PRT: 
	    
		set @cStep=20
	    SELECT  @NITEM_DISCOUNT_AMOUNT= SUM(ISNULL(RMMDISCOUNTAMOUNT,0))  FROM #tPrtDetTable
	      
		SET @NNEWDIFF=ABS( ISNULL(@NTOTAL_DISCOUNT_AMOUNT,0)-ISNULL(@NITEM_DISCOUNT_AMOUNT,0))
	        
		IF ISNULL(@NPREVDIFF,0)=ISNULL(@NNEWDIFF,0)
			GOTO END_PROC
	    
		set @cStep=30
		SET @NTOTALDIFF=ABS( ISNULL(@NTOTAL_DISCOUNT_AMOUNT,0)-ISNULL(@NITEM_DISCOUNT_AMOUNT,0))*100
	        
		IF (@NTOTAL_DISCOUNT_AMOUNT=0   OR @NTOTALDIFF=0)
		GOTO END_PROC
	      
	     
	     set @cStep=40 
		IF ISNULL(@NTOTAL_DISCOUNT_AMOUNT,0)>ISNULL(@NITEM_DISCOUNT_AMOUNT,0)
			SET @CIN_VALUE=.01
		ELSE
			SET @CIN_VALUE=-.01
	          
	     set @cStep=50 
		SET @DTSQL=N';WITH CTE AS
		(SELECT A.*,SR=ROW_NUMBER() OVER (ORDER BY ROW_ID)
			FROM  #tPrtDEtTable A
			) 
	         
			UPDATE CTE SET RMMDISCOUNTAMOUNT=RMMDISCOUNTAMOUNT+'+RTRIM(LTRIM(STR(@CIN_VALUE,10,2)))+' WHERE SR<='''+STR(@NTOTALDIFF)+''''
		EXEC SP_EXECUTESQL @DTSQL
		PRINT @DTSQL
	      
		  
		  GOTO END_PROC

END TRY

BEGIN CATCH
	print 'enter catch of SP3S_REPROCESS_PRT_BILL_DISCOUNT'
  SET @ERRMSG =' Step# '+LTRIM(RTRIM((@cStep)))+' || ERROR IN PROCEDURE || SP3S_REPROCESS_PRT_BILL_DISCOUNT ERROR MESSAGE || '+ ERROR_MESSAGE();
  GOTO END_PROC
END CATCH

END_PROC:
END