CREATE PROCEDURE SP3S_CUSTOMER_ANALYSIS--(LocId 3 digit change by Sanjay:04-11-2024)
(
  @DFM_DT DATETIME, 
  @DTODT DATETIME
)
--WITH ENCRYPTION
AS
BEGIN
     --CUSTOMER WITH MINIMUM SLS DATE WITH-OUT DATE FILTER
      IF OBJECT_ID('TEMPDB..#ALLCUSTOMER','U') IS NOT NULL
         DROP TABLE #ALLCUSTOMER
        
      SELECT a.location_Code AS DEPT_ID, A.CUSTOMER_CODE ,MIN(CM_DT) AS CM_DT
      INTO #ALLCUSTOMER
      FROM CMM01106 A
      WHERE CANCELLED =0
      GROUP BY A.CUSTOMER_CODE,a.location_Code
      
      
       IF OBJECT_ID('TEMPDB..#ALLCUSTOMEREMAIL','U') IS NOT NULL
          DROP TABLE #ALLCUSTOMEREMAIL
          
      SELECT A.*,CASE WHEN C.EMAIL='' THEN 0 ELSE 1 END AS EMAIL_FILLEDUP
      INTO #ALLCUSTOMEREMAIL 
      FROM #ALLCUSTOMER A
      JOIN CUSTDYM C ON C.CUSTOMER_CODE =A.CUSTOMER_CODE 
      
      
      --CUSTOMER WITH MINIMUM SLS DATE WITH DATE FILTER
      IF OBJECT_ID('TEMPDB..#CUSTOMER_CURRENT_PERIOD','U') IS NOT NULL
         DROP TABLE #CUSTOMER_CURRENT_PERIOD
      
      SELECT a.location_Code AS DEPT_ID, A.CUSTOMER_CODE ,MIN(CM_DT) AS CM_DT,COUNT(CM_NO) AS NO_OF_BILLS,
             SUM(CASE WHEN ISNULL(EMAIL,'')<>'' THEN 1 ELSE 0 END) AS  EMIL_FILLEDUP_BILL
      INTO #CUSTOMER_CURRENT_PERIOD
      FROM CMM01106 A
      JOIN CUSTDYM C ON C.CUSTOMER_CODE =A.CUSTOMER_CODE 
      WHERE CANCELLED =0
      AND CM_DT BETWEEN @DFM_DT AND @DTODT
      GROUP BY A.CUSTOMER_CODE,a.location_code
      
      --NEW CUSTOMER FIND IN CURRENR DATE IN NO OF BILLS AND EMAIL FILLED UP CUSTOMER 
     
       IF OBJECT_ID('TEMPDB..#NEW_CUSTOMER','U') IS NOT NULL
         DROP TABLE #NEW_CUSTOMER
         
      SELECT A.DEPT_ID, A.CUSTOMER_CODE
      INTO #NEW_CUSTOMER
      FROM #CUSTOMER_CURRENT_PERIOD A
      JOIN #ALLCUSTOMER B ON A.DEPT_ID=B.DEPT_ID AND A.CM_DT =B.CM_DT AND A.CUSTOMER_CODE =B.CUSTOMER_CODE 
      GROUP BY A.DEPT_ID, A.CUSTOMER_CODE
      
       IF OBJECT_ID('TEMPDB..#CURRENT_CUSTOMER_DETAILS','U') IS NOT NULL
         DROP TABLE #CURRENT_CUSTOMER_DETAILS
      
      SELECT A.DEPT_ID
			,SUM(CASE WHEN ISNULL(B.CUSTOMER_CODE,'000000000000')='000000000000' THEN 0 ELSE 1 END) AS NEW_CUSTOMER
			,SUM(A.NO_OF_BILLS) AS NO_OF_BILLS
			,SUM(CASE WHEN A.CUSTOMER_CODE='000000000000' THEN A.NO_OF_BILLS ELSE  0 END) AS WO_C_ID
			,SUM(ISNULL(A.EMIL_FILLEDUP_BILL,0)) AS EMAIL
			,CONVERT(NUMERIC(18,0),0) AS CN_AVE
		    ,CONVERT(NUMERIC(18,0),0) AS MAIL_AVE
		    ,CONVERT(NUMERIC(18,0),0) AS R_CUSTOMER
      INTO #CURRENT_CUSTOMER_DETAILS
      FROM #CUSTOMER_CURRENT_PERIOD A
      LEFT JOIN #NEW_CUSTOMER B ON A.DEPT_ID=B.DEPT_ID AND A.CUSTOMER_CODE=B.CUSTOMER_CODE
      GROUP BY A.DEPT_ID

     
     UPDATE #CURRENT_CUSTOMER_DETAILS
     SET CN_AVE=(CASE WHEN NO_OF_BILLS<>0 THEN ((NO_OF_BILLS-WO_C_ID)*100)/NO_OF_BILLS ELSE 0 END)
		,MAIL_AVE=(CASE WHEN NO_OF_BILLS<>0 THEN ((EMAIL)*100)/NO_OF_BILLS ELSE 0 END)
     
     UPDATE #CURRENT_CUSTOMER_DETAILS SET R_CUSTOMER=(NO_OF_BILLS-NEW_CUSTOMER)-WO_C_ID
      
      SELECT A.DEPT_ID,DEPT_NAME,NEW_CUSTOMER ,EMAIL ,NO_OF_BILLS ,WO_C_ID ,CN_AVE ,MAIL_AVE ,R_CUSTOMER  
      FROM #CURRENT_CUSTOMER_DETAILS A
      JOIN LOCATION L ON L.DEPT_ID =A.DEPT_ID
      
       --CN_AVE =TOTAL NO OF BILLS WITH CUSTOMER FILLED UP MULTIPLY BY 100 DEVIDED BY TOTAL NO OF BIILS 
      --MAIL AVE=TOTAL NO OF BILLS WITH EMAIL FILLED UP MULTIPLY BY 100 DEVIDED BY TOTAL NO OF BIILS  
      -- R_CUSTOMER=NO OF BILLS MINUS NO OF WITH OUT FILLED CUSTOMER BILLS MINUS WITH OUT CUSTOMER ID
END
