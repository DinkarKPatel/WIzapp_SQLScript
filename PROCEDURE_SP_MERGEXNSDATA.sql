create PROCEDURE SP_MERGEXNSDATA  
(  
 @CXNTYPE VARCHAR(20),  
 @NSPID INT,  
 @CDEPTID VARCHAR(4),  
 @CXNID VARCHAR(40)=''  
)  
--WITH ENCRYPTION
AS  
BEGIN  
   --(dinkar) Replace  left(memoid,2) to Location_code 
 DECLARE @CCURLOCID CHAR(4),@CHOLOCID CHAR(4),@CCMD NVARCHAR(MAX),@CERRORMSG VARCHAR(MAX),@CXNTYPEPARA VARCHAR(20),
		 @BMIRRORINGENABLED BIT,@CALLOWMASTERMERGING VARCHAR(2)  
 
 DECLARE @TRETMSG TABLE  (MEMO_ID VARCHAR(40),ERRMSG VARCHAR(MAX))
 
 IF EXISTS (SELECT TOP 1 CONFIG_OPTION FROM CONFIG WHERE 
			CONFIG_OPTION='MIRROR_SERVER_IP' AND VALUE<>'')
	SET @BMIRRORINGENABLED=1
 ELSE
	SET @BMIRRORINGENABLED=0

 IF @CXNTYPE IN('MSTACT','MSTINV','MSTWPAY','DOCMRP')  
	SET @BMIRRORINGENABLED=0
 
 IF @CXNTYPE IN ('MSTUSRROLE','MSTLOC','MSTEOSS') AND @BMIRRORINGENABLED=1	
 BEGIN
	SELECT TOP 1 @CALLOWMASTERMERGING=VALUE FROM CONFIG WHERE CONFIG_OPTION=@CXNTYPE+'_THRU_WIZCOM'
	
	IF ISNULL(@CALLOWMASTERMERGING,'')='1'
		SET @BMIRRORINGENABLED=0
 END

 IF @BMIRRORINGENABLED=1
	RETURN
    
 SELECT @CCURLOCID = VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='LOCATION_ID'  
 SELECT @CHOLOCID = VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='HO_LOCATION_ID'    
   
 IF LEFT(@CXNTYPE,3)='XNS' AND @CCURLOCID<>@CHOLOCID  
 BEGIN  
	  SET @CERRORMSG='TRANSACTION DATA CANNOT BE MERGED AT NON-HO LOCATION'  
	  SELECT @CXNTYPE AS MEMO_ID,@CERRORMSG AS ERRMSG  
	  RETURN  
 END  

 IF LEFT(@CXNTYPE,3)='MST' AND @CCURLOCID=@CHOLOCID  
 BEGIN  
	  SET @CERRORMSG='MASTERS DATA CANNOT BE MERGED AT HEAD OFFICE'  
	  SELECT @CXNTYPE AS MEMO_ID,@CERRORMSG AS ERRMSG  
	  RETURN  
 END  
 
	
 IF LEFT(@CXNTYPE,3)='DOC' AND @CCURLOCID=@CHOLOCID  AND @CXNTYPE NOT IN ('DOCCHO','DOCPRT','DOCPCO','DOCSKUREQ','DOCIRT')
 BEGIN  
  SET @CERRORMSG='DOCUMENT DATA CANNOT BE MERGED AT HO LOCATION'  
  SELECT @CXNTYPE AS MEMO_ID,@CERRORMSG AS ERRMSG  
  RETURN  
 END  
 
IF @CXNTYPE='DOCSKU'
BEGIN	
	EXEC SP_INSERTSKUFROMSKUMASTER @CXNID,@CERRORMSG OUTPUT
	
	SELECT @CXNID AS MEMO_ID,ISNULL(@CERRORMSG,'') AS ERRMSG
END
ELSE
IF @CXNTYPE='DOCBC'
BEGIN	
	RETURN
END

ELSE
IF @CXNTYPE='DOCSKURECDT'  
BEGIN  
  EXEC SP_PROCESS_SKURECDT 2
  RETURN   
END   

ELSE
 IF @CXNTYPE='XNSSLS'  
 BEGIN  
  EXEC SP_MERGESLSDATA @NSPID,@CDEPTID  
  RETURN   
 END   
 
    
 ELSE  
 IF @CXNTYPE='XNSOPS'  
 BEGIN  
  EXEC SP_MERGEXNSOPSDATA @NSPID,@CDEPTID  
  RETURN   
 END    

 ELSE   
 IF @CXNTYPE='DOCMRP'
 BEGIN
	EXEC SP_MERGELOCSKUSP @CXNID
	RETURN
 END	  
 ELSE   
 IF LEFT(@CXNTYPE,6)='DOCDTR'
 BEGIN
	SET @CXNTYPEPARA=SUBSTRING(@CXNTYPE,7,LEN(@CXNTYPE))
	EXEC SP_RESENDXNSDATA_REQ @CXNTYPEPARA,@CXNID
	RETURN
 END	  

 --ELSE   
 --IF @CXNTYPE='DOCPO_APP'
 --BEGIN
	--EXEC SP_MERGEXNSPODATA @NSPID,'DOCPO_APP',@CXNID
	--RETURN
 --END	  
 ELSE  
 IF @CXNTYPE='DOCXNRACK'
 BEGIN
	EXEC SP_PROCESS_XNRECONLOG 2
	RETURN
 END	 
  
 ELSE   
 IF LEFT(@CXNTYPE,3)='DOC' OR @CXNTYPE='MSTSKU'  
 BEGIN  
  SET @CCMD=N'EXEC SP_MERGE'+LTRIM(RTRIM(@CXNTYPE))+'DATA '''+@CXNID+''''  
  PRINT @CCMD
  EXEC SP_EXECUTESQL @CCMD  
 END    

 ELSE  
 IF @CXNTYPE IN ('MSTACT','MSTACT_REQ')  
 BEGIN  
	EXEC SP_MERGEMSTACTDATA @CXNTYPE,@NSPID
	RETURN   
 END
 
 ELSE  
 IF @CXNTYPE IN ('MSTEOSS')  
 BEGIN  
	EXEC SP_MERGEMSTEOSSDATA @NSPID
	RETURN   
 END  
 ELSE  
 IF @CXNTYPE IN ('MSTUSRROLE')  
 BEGIN  
	EXEC SP_MERGEMSTUSRDATA @NSPID
	RETURN   
 END   
 ELSE    
 BEGIN  
  SET @CCMD=N'EXEC SP_MERGE'+LTRIM(RTRIM(@CXNTYPE))+'DATA '+LTRIM(RTRIM(STR(@NSPID)))  
  EXEC SP_EXECUTESQL @CCMD  
 END    
END  
  
---- 'END OF CREATING PROCEDURE SP_MERGEXNSDATA'
