CREATE PROCEDURE SP3S_VALIDATE_MANUALBILL 
@NMODE INT=1,	--1.CALLED FROM BILL SAVE , 2.CALLED FROM AUTO SETTLEMENT OF MANUAL BILL
@CCMID VARCHAR(22),
@BCALLEDFROMSAVETRAN BIT=0,
@NSPID INT=0,
@CERRMSG VARCHAR(MAX) OUTPUT
AS
BEGIN
	
BEGIN TRY
		
	DECLARE @CSTEP VARCHAR(10)
	
	SET @CSTEP=10
		
	SET @CERRMSG=''
	
	IF @NMODE=2
		BEGIN TRANSACTION

	CREATE TABLE #TEOSSERROR (ERRORMSG VARCHAR(MAX))		
	IF NOT EXISTS (SELECT TOP 1 CM_ID FROM CMM01106 WHERE CM_ID=@CCMID	AND MANUAL_BILL=1)
		GOTO END_PROC
		
	DELETE A FROM CMD_MANUALBILL_ERRORS A JOIN CMD01106 B ON A.CMD_ROW_ID=B.ROW_ID
	WHERE B.CM_ID=@CCMID AND APPROVED=0
	
	SET @CSTEP=20	
	--- VALIDATE BAR CODE NOT FOUND ERROR
	INSERT CMD_MANUALBILL_ERRORS (CMD_ROW_ID,ERROR_CODE,APPROVED)
	SELECT distinct  A.ROW_ID,'01' AS ERROR_CODE,0
	FROM CMD01106 A
	LEFT OUTER JOIN 
	(SELECT A.PRODUCT_CODE FROM PID01106 A
	 JOIN PIM01106 B ON A.MRR_ID=B.MRR_ID
	 JOIN CMD01106 C ON C.PRODUCT_CODE=A.PRODUCT_CODE
	 WHERE C.CM_ID=@CCMID) B ON A.PRODUCT_CODE=B.PRODUCT_CODE
	LEFT OUTER JOIN 
	(SELECT A.PRODUCT_CODE FROM CND01106 A
	 JOIN CNM01106 B ON A.CN_ID=B.CN_ID
	 JOIN CMD01106 C ON C.PRODUCT_CODE=A.PRODUCT_CODE
	 WHERE C.CM_ID=@CCMID) C ON A.PRODUCT_CODE=C.PRODUCT_CODE
	
	WHERE A.CM_ID=@CCMID AND B.PRODUCT_CODE  IS NULL AND C.PRODUCT_CODE IS NULL
	
	SET @CSTEP=30
	--- VALIDATE BAR CODE NOT IN STOCK ERROR
	INSERT CMD_MANUALBILL_ERRORS (CMD_ROW_ID,ERROR_CODE,APPROVED)
	SELECT distinct  A.ROW_ID,'02' AS ERROR_CODE,0
	FROM CMD01106 A
	JOIN PMT01106 B ON A.PRODUCT_CODE=B.PRODUCT_CODE AND A.BIN_ID=B.BIN_ID
	WHERE A.CM_ID=@CCMID AND B.QUANTITY_IN_STOCK<0
	
	SET @CSTEP=40
	--- VALIDATE MRP MISMATCH WITH SKU
	INSERT CMD_MANUALBILL_ERRORS (CMD_ROW_ID,ERROR_CODE,APPROVED)
	SELECT A.ROW_ID,'04' AS ERROR_CODE,0
	FROM CMD01106 A
	JOIN SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE
	WHERE A.CM_ID=@CCMID AND A.MRP<>B.MRP


	SET @CSTEP=50
	--- VALIDATE [UNIQUE BARCODE QTY GOING MORE THAN 1] ERROR
	INSERT CMD_MANUALBILL_ERRORS (CMD_ROW_ID,ERROR_CODE,APPROVED)
	SELECT A.ROW_ID,'06' AS ERROR_CODE,0
	FROM CMD01106 A
	JOIN 
	(SELECT A.PRODUCT_CODE,A.BIN_ID,SUM(QUANTITY_IN_STOCK) AS QUANTITY_IN_STOCK FROM PMT01106 A
	 JOIN CMD01106 B ON A.PRODUCT_CODE=B.PRODUCT_CODE AND A.BIN_ID=B.BIN_ID
	 JOIN SKU C ON C.PRODUCT_CODE=A.PRODUCT_CODE
	 JOIN ARTICLE D ON D.ARTICLE_CODE=C.ARTICLE_CODE
	 WHERE CM_ID=@CCMID AND D.CODING_SCHEME=3 GROUP BY A.PRODUCT_CODE,A.BIN_ID)  B ON A.PRODUCT_CODE=B.PRODUCT_CODE 
	 AND A.BIN_ID=B.BIN_ID
	
	WHERE A.CM_ID=@CCMID AND A.QUANTITY<0 AND B.QUANTITY_IN_STOCK>1
	
	SET @CSTEP=60
	DECLARE @NCMMDISCAMT NUMERIC(10,2),@CUSERCODE CHAR(7),@CCUS_CODE CHAR(12),@DCMDT DATETIME,@BSALESSETUPINEFFECT BIT,
			@BDONOTCHKEOSSMISMATCH BIT
	
	SELECT @DCMDT=CM_DT,@NCMMDISCAMT=DISCOUNT_AMOUNT,@CUSERCODE=USER_CODE,@CCUS_CODE=CUSTOMER_CODE
	FROM CMM01106 (NOLOCK) WHERE CM_ID=@CCMID
	
	SET @CSTEP=70
	
	--- VALIDATE [EOSS DISCOUNT MISMATCH FOUND/TAX STRUCTURE NOT DEFINED] ERROR
	DECLARE @TCHKSLSSET TABLE (SALES_SETUP_EFFECTIVE BIT)
	
	IF @BDONOTCHKEOSSMISMATCH<>1
	BEGIN
		INSERT @TCHKSLSSET
		EXEC SP_WL_CHECKEFFECTIVESALESETUP	@DCMDT
		
		SELECT @BSALESSETUPINEFFECT=ISNULL(SALES_SETUP_EFFECTIVE,0) FROM @TCHKSLSSET
	END	
	ELSE
		SET @BSALESSETUPINEFFECT=0	
	
 	DECLARE @CTEMPCMDTABLE VARCHAR(100),@CCMD NVARCHAR(MAX)
 	
 	SET @CSTEP=80
 	SET @CTEMPCMDTABLE='TMPCMD_'+LTRIM(RTRIM(STR(@@SPID)))
 	
 	IF OBJECT_ID(@CTEMPCMDTABLE,'U') IS NOT NULL
 	BEGIN
 		SET @CCMD=N'DROP TABLE '+@CTEMPCMDTABLE
 		EXEC SP_EXECUTESQL @CCMD
 	END	
 	
 	SET @CCMD=N'SELECT PRODUCT_CODE,QUANTITY,DISCOUNT_PERCENTAGE,MRP,NET,ROW_ID,PACK_SLIP_ID,TAX_PERCENTAGE,
 				DISCOUNT_AMOUNT AS CMM_DISCOUNT_AMOUNT,DISCOUNT_AMOUNT,CARD_DISCOUNT,0 AS CESS_AMOUNT
 				INTO '+@CTEMPCMDTABLE+' FROM CMD01106 (NOLOCK) WHERE CM_ID='''+@CCMID+''''
 	EXEC SP_EXECUTESQL @CCMD
 	
 	SET @CSTEP=85
 	SET @CCMD=N' ALTER TABLE '+@CTEMPCMDTABLE+' ALTER COLUMN TAX_PERCENTAGE NUMERIC(7,3)'
 	EXEC SP_EXECUTESQL @CCMD
 	
 	SET @CSTEP=90


	EXEC SP_APPLY_SLSDISCTAX
	@CPRODUCTCODEPARA='',
	@DXNDT=@DCMDT,
	@BSALESSETUPINEFFECT=@BSALESSETUPINEFFECT,
	@NCMMDISCAMT=@NCMMDISCAMT,
	@NDISCPICKINGMODE=1,
	@CUSERCODE=@CUSERCODE,
	@CCUS_CODE=@CCUS_CODE,
	@BCALLEDFROMMANUALBILLVALIDATE=1,
	@BCALLEDFROMSAVETRAN=@BCALLEDFROMSAVETRAN,
	@NSPID=@NSPID
	
	
	IF @BSALESSETUPINEFFECT=1
	BEGIN
		SET @CSTEP=100
		
		SET @CCMD=N'SELECT A.ROW_ID,''03'' AS ERROR_CODE,0
		FROM CMD01106 A
		JOIN '+@CTEMPCMDTABLE+' B ON A.ROW_ID=B.ROW_ID
		WHERE A.CM_ID='''+@CCMID+''' AND (A.DISCOUNT_AMOUNT<>B.DISCOUNT_AMOUNT OR A.DISCOUNT_AMOUNT<>ISNULL(B.CMM_DISCOUNT_AMOUNT,0))'			
					
		INSERT CMD_MANUALBILL_ERRORS (CMD_ROW_ID,ERROR_CODE,APPROVED)
		EXEC SP_EXECUTESQL @CCMD
	END
	
	SET @CSTEP=110

	SET @CCMD=N'SELECT A.ROW_ID,''05'' AS ERROR_CODE,0
	FROM CMD01106 A
	JOIN '+@CTEMPCMDTABLE+' B ON A.ROW_ID=B.ROW_ID
	WHERE A.CM_ID='''+@CCMID+''' AND B.TAX_PERCENTAGE IS NULL'

	INSERT CMD_MANUALBILL_ERRORS (CMD_ROW_ID,ERROR_CODE,APPROVED)
	EXEC SP_EXECUTESQL @CCMD
		
	--- VALIDATE [MANUAL DISCOUNT GIVEN/USER LEVEL DISCOUNT RESTRICTION BYPASSED] ERROR
	IF @BSALESSETUPINEFFECT=0
	BEGIN	
		PRINT 'ENTER FOR MAKING MANUAL DISC ENTRY'
		SET @CSTEP=120
		DECLARE @CALLOWTOCHANGEDISC VARCHAR(5),@CSLSDISC VARCHAR(5),@CSLRDISC VARCHAR(5),@NDISCLIMIT NUMERIC(10,2)
		
		IF EXISTS (SELECT TOP 1 A.ROW_ID FROM CMD01106 A (NOLOCK)
				   LEFT OUTER JOIN CMD_MANUALBILL_ERRORS B (NOLOCK) ON B.CMD_ROW_ID=A.ROW_ID
				   WHERE A.CM_ID=@CCMID AND B.CMD_ROW_ID IS NULL)
		BEGIN
			
			SET @CSTEP=125		   
			SELECT TOP 1 @CSLSDISC=VALUE FROM USER_ROLE_DET A
			JOIN USERS B ON A.ROLE_ID=B.ROLE_ID WHERE FORM_NAME='FRMSALE'	
			AND USER_CODE=@CUSERCODE AND FORM_OPTION='DISC'
			
			SELECT TOP 1 @CSLRDISC=VALUE FROM USER_ROLE_DET A
			JOIN USERS B ON A.ROLE_ID=B.ROLE_ID WHERE FORM_NAME='FRMSALE'	
			AND USER_CODE=@CUSERCODE AND FORM_OPTION='SLR_DISC'
			
			SELECT @NDISCLIMIT=DISCOUNT_PERCENTAGE_LEVEL FROM USERS WHERE USER_CODE=@CUSERCODE
			
			SET @CSTEP=130
			INSERT CMD_MANUALBILL_ERRORS (CMD_ROW_ID,ERROR_CODE,APPROVED)
			SELECT A.ROW_ID,'07' AS ERROR_CODE,0
			FROM CMD01106 A
			LEFT OUTER JOIN 
			(SELECT CMD_ROW_ID FROM CMD_MANUALBILL_ERRORS A (NOLOCK)
			 JOIN CMD01106 B (NOLOCK) ON A.CMD_ROW_ID=B.ROW_ID WHERE CM_ID=@CCMID
			 AND A.ERROR_CODE='07' AND APPROVED=1 AND QUANTITY>0) B ON A.ROW_ID=B.CMD_ROW_ID
			 
			WHERE A.CM_ID=@CCMID AND A.DISCOUNT_AMOUNT<>0 AND ISNULL(@CSLSDISC,'')<>'1' AND A.QUANTITY>0
			AND B.CMD_ROW_ID IS NULL
			UNION
			SELECT A.ROW_ID,'08' AS ERROR_CODE,0
			FROM CMD01106 A
			LEFT OUTER JOIN 
			(SELECT CMD_ROW_ID FROM CMD_MANUALBILL_ERRORS A (NOLOCK)
			 JOIN CMD01106 B (NOLOCK) ON A.CMD_ROW_ID=B.ROW_ID WHERE CM_ID=@CCMID
			 AND A.ERROR_CODE='08' AND APPROVED=1 AND QUANTITY>0) B ON A.ROW_ID=B.CMD_ROW_ID
			 			
			WHERE A.CM_ID=@CCMID AND A.DISCOUNT_AMOUNT<>0 AND A.DISCOUNT_PERCENTAGE>@NDISCLIMIT AND @NDISCLIMIT<>0
			AND A.QUANTITY>0 AND B.CMD_ROW_ID IS NULL
			
			SET @CSTEP=140
			
			SET @CCMD=N'SELECT A.ROW_ID,''08'' AS ERROR_CODE,0
			FROM CMD01106 A
			JOIN '+@CTEMPCMDTABLE+' B ON A.ROW_ID=B.ROW_ID
			
			LEFT OUTER JOIN 
			(SELECT CMD_ROW_ID FROM CMD_MANUALBILL_ERRORS A (NOLOCK)
			 JOIN CMD01106 B (NOLOCK) ON A.CMD_ROW_ID=B.ROW_ID WHERE CM_ID='''+@CCMID+'''
			 AND A.ERROR_CODE=''08'' AND APPROVED=1 AND QUANTITY<0) C ON A.ROW_ID=C.CMD_ROW_ID			
			 
			WHERE A.CM_ID='''+@CCMID+''' AND A.QUANTITY<0 AND B.DISCOUNT_AMOUNT=0 
			AND A.DISCOUNT_PERCENTAGE>'+LTRIM(RTRIM(STR(@NDISCLIMIT)))+' AND C.CMD_ROW_ID IS NULL
			UNION
			SELECT A.ROW_ID,''07'' AS ERROR_CODE,0
			FROM CMD01106 A
			JOIN '+@CTEMPCMDTABLE+' B ON A.ROW_ID=B.ROW_ID

			LEFT OUTER JOIN 
			(SELECT CMD_ROW_ID FROM CMD_MANUALBILL_ERRORS A (NOLOCK)
			 JOIN CMD01106 B (NOLOCK) ON A.CMD_ROW_ID=B.ROW_ID WHERE CM_ID='''+@CCMID+'''
			 AND A.ERROR_CODE=''07'' AND APPROVED=1 AND QUANTITY<0) C ON A.ROW_ID=C.CMD_ROW_ID			
			 			
			WHERE A.CM_ID='''+@CCMID+''' AND A.DISCOUNT_AMOUNT<>0 AND '''+ISNULL(@CSLSDISC,'')+'''<>''1'' AND '''+
			ISNULL(@CSLRDISC,'')+'''<>''1'' AND A.DISCOUNT_AMOUNT<>B.DISCOUNT_AMOUNT
			AND A.QUANTITY<0 AND C.CMD_ROW_ID IS NULL'

			INSERT CMD_MANUALBILL_ERRORS (CMD_ROW_ID,ERROR_CODE,APPROVED)
			EXEC SP_EXECUTESQL @CCMD
		END		
	END
	
	IF @NMODE=2
	BEGIN
		SET @CSTEP=150
		IF NOT EXISTS (SELECT TOP 1 CMD_ROW_ID FROM CMD_MANUALBILL_ERRORS A (NOLOCK)
					   JOIN CMD01106 B (NOLOCK) ON A.CMD_ROW_ID=B.ROW_ID
					   WHERE CM_ID=@CCMID AND APPROVED=0)
			UPDATE CMM01106 SET MANUAL_BILL=0 WHERE CM_ID=@CCMID
	END	
	
	GOTO END_PROC	
END TRY

BEGIN CATCH
	PRINT 'ERROR IN CATCH BLOCK '
	SET @CERRMSG='P:SP3S_VALIDATE_MANUALBILL, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO END_PROC
END CATCH

END_PROC:
	
	IF @NMODE=2
	BEGIN
		IF @@TRANCOUNT>0
		BEGIN
			IF ISNULL(@CERRMSG,'')=''
				COMMIT
			ELSE
				ROLLBACK	
		END	
	END
				
END
