CREATE PROCEDURE SP_PRD_MATERIAL_REQUIREMENT
(
 @CFG_ARTICLE_NO VARCHAR(100)='',
 @CORDER_ID VARCHAR(100)=''
)
AS
BEGIN
    
  
IF OBJECT_ID('TEMPDB..#TMPGOODS','U') IS NOT NULL
   DROP TABLE #TMPGOODS


SELECT  MST.MEMO_ID AS ORDER_ID,
        MST.MEMO_NO AS ORDER_NO,
        MST.MEMO_DT AS ORDER_DT
        ,AR.ARTICLE_NO AS FG_ARTICLE_NO
       ,AR.ARTICLE_NAME AS FG_ARTICLE_NAME
       ,DET.QUANTITY AS WO_QTY
       ,C.ARTICLE_NO 
       ,C.ARTICLE_NAME
       ,A.PARA1_CODE
       ,P1.PARA1_NAME
       ,A.PARA2_CODE
       ,P2.PARA2_NAME
	   ,AVG_QTY
	   ,CONVERT(NUMERIC(12,2),AVG_QTY * DET.QUANTITY) AS REQUIRED_QTY   
	   ,QUANTITY_IN_STOCK
	   ,CASE WHEN QUANTITY_IN_STOCK>CONVERT(NUMERIC(12,2),AVG_QTY * DET.QUANTITY) THEN 0 
	    ELSE CONVERT(NUMERIC(12,2),AVG_QTY * DET.QUANTITY)-QUANTITY_IN_STOCK END AS PO_QTY
FROM PRD_WO_ART_BOM A (NOLOCK)      
JOIN PRD_WO_DET B (NOLOCK) ON A.REF_ROW_ID = B.ROW_ID
JOIN PRD_WO_MST MST (NOLOCK) ON B.MEMO_ID=MST.MEMO_ID
JOIN ARTICLE AR (NOLOCK) ON AR.ARTICLE_CODE =MST.ARTICLE_SET_CODE     
JOIN PARA1 P1 (NOLOCK) ON A.PARA1_CODE=P1.PARA1_CODE
JOIN PARA2 P2 (NOLOCK) ON A.PARA2_CODE=P2.PARA2_CODE
JOIN
(
 SELECT REF_ROW_ID,SUM(QUANTITY) AS QUANTITY 
 FROM PRD_WO_SUB_DET C
 GROUP BY REF_ROW_ID
) DET ON B.ROW_ID=DET.REF_ROW_ID
JOIN ARTICLE C (NOLOCK) ON A.BOM_ARTICLE_CODE = C.ARTICLE_CODE 
JOIN
(
 SELECT A.ARTICLE_CODE,SUM(QUANTITY_IN_STOCK) AS QUANTITY_IN_STOCK 
 FROM PRD_SKU A
 JOIN PRD_PMT B ON A.PRODUCT_UID=B.PRODUCT_UID
 WHERE  B.DEPARTMENT_ID ='DEF0000'   
 AND WORK_ORDER_ID='' 
 GROUP BY A.ARTICLE_CODE
)  PMT ON PMT.ARTICLE_CODE  =C.ARTICLE_CODE  
LEFT OUTER JOIN
(
 SELECT B.REF_WO_ID  FROM PRD_STK_TRANSFER_MST A
 JOIN PRD_STK_TRANSFER_DET B ON A.MEMO_ID =B.MEMO_ID 
 WHERE A.CANCELLED =0
 GROUP BY B.REF_WO_ID
) TRF ON TRF.REF_WO_ID =B.MEMO_ID 
WHERE TRF.REF_WO_ID IS NULL  
AND (@CFG_ARTICLE_NO='' OR  AR.ARTICLE_NO=@CFG_ARTICLE_NO)  
AND(@CORDER_ID='' OR MST.MEMO_ID=@CORDER_ID)      
ORDER BY CASE WHEN QUANTITY_IN_STOCK>CONVERT(NUMERIC(12,2),AVG_QTY * DET.QUANTITY) THEN 0 
	    ELSE CONVERT(NUMERIC(12,2),AVG_QTY * DET.QUANTITY)-QUANTITY_IN_STOCK END DESC

--SELECT ORDER_ID,
--       ORDER_NO,
--       ORDER_DT, 
--       FG_ARTICLE_NO,
--       FG_ARTICLE_NAME,
--       WO_QTY,
--       ARTICLE_NO,ARTICLE_NAME
--        ,PARA1_CODE
--       ,PARA1_NAME
--       ,PARA2_CODE
--       ,PARA2_NAME,
--       SUM(AVG_QTY) AS AVG_QTY,
--       SUM(REQUIRED_QTY) AS REQUIRED_QTY,
--       SUM(QUANTITY_IN_STOCK) AS QUANTITY_IN_STOCK,
--       SUM(PO_QTY) AS PO_QTY
-- FROM #TMPGOODS
-- GROUP BY ORDER_ID,
--      ORDER_NO,
--       ORDER_DT, 
--      FG_ARTICLE_NO,
--       FG_ARTICLE_NAME,
--       WO_QTY,
--       ARTICLE_NO,ARTICLE_NAME
--       ,PARA1_CODE
--       ,PARA1_NAME
--       ,PARA2_CODE
--       ,PARA2_NAME
-- ORDER BY SUM(PO_QTY) DESC
	
 
END
