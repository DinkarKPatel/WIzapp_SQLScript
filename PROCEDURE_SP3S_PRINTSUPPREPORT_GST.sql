CREATE PROCEDURE SP3S_PRINTSUPPREPORT_GST  
(  
   @CXN_TYPE VARCHAR(10)=''  
  ,@CXN_ID VARCHAR(100)=''  
  ,@BOX_NO VARCHAR(1000)=''  
)  
AS  
BEGIN  
SET NOCOUNT ON       
DECLARE @DTSQL NVARCHAR(MAX),@CCOLNAME VARCHAR(MAX),@CERRMSG VARCHAR(100),@NCALQTYSUM NUMERIC(10,3),  
        @NSTOREDQTY NUMERIC(10,3),@CSTEP VARCHAR(10)  
       ,@SNO BIT,@MRP_TOTAL VARCHAR(1000)  
SET @SNO=0  
IF EXISTS(SELECT * FROM GST_XN_DETAIL (NOLOCK) WHERE DISPLAYNAME='BARCODE' AND XN_TYPE='WSL' AND ISVISIBLE=1)  
   SET @SNO=1  
     
SET @CERRMSG=''  
SET @CSTEP=100  
BEGIN TRY  
          
    IF @CXN_TYPE='WSL'  
    BEGIN         
   SET @CSTEP=10             
  IF OBJECT_ID ('TEMPDB..#TRANSPORTER','U') IS NOT NULL  
     DROP TABLE #TRANSPORTER  
       
   SELECT A.PARCEL_MEMO_ID,  
    ANGM.ANGADIA_NAME AS TRANSPORTER_NAME,  
    A.BILTY_NO AS BILTY_NO,  
    b.BOX_NO  AS BOX_NO,  
    SUM(QTY) AS WGHT,  
    b.REF_MEMO_ID AS XN_ID,  
    A.VEHICLE_NO  
   INTO #TRANSPORTER  
   FROM PARCEL_MST A (NOLOCK)  
   JOIN PARCEL_DET B (NOLOCK) ON A.PARCEL_MEMO_ID =B.PARCEL_MEMO_ID   
   LEFT OUTER JOIN ANGM (NOLOCK) ON ANGM.ANGADIA_CODE =A.ANGADIA_CODE   
   WHERE A.XN_TYPE =@CXN_TYPE AND b.REF_MEMO_ID=@CXN_ID  
   GROUP BY ANGM.ANGADIA_NAME ,A.PARCEL_MEMO_ID ,A.BILTY_NO ,b.REF_MEMO_ID,A.VEHICLE_NO ,b.BOX_NO  
     
   ;WITH CTE AS   
   (  
     SELECT PARCEL_MEMO_ID ,  
      SR=ROW_NUMBER () OVER (ORDER BY PARCEL_MEMO_ID)   
     FROM #TRANSPORTER  
   )  
   DELETE FROM CTE WHERE SR>1  
     
         IF OBJECT_ID('TEMPDB..#DATASET1') IS NOT NULL  
       DROP TABLE #DATASET1  
         
   SELECT @MRP_TOTAL='MRP TOTAL: '+CAST(CAST(SUM(MRP*QUANTITY) AS DECIMAL(18,2))AS VARCHAR)  
   FROM INDSUPP (NOLOCK) WHERE INV_ID=@CXN_ID  
     
         SELECT TOP 1 CMP.COMPANY_NAME,CMP.ADDRESS1,CMP.ADDRESS2,CMP.CITY  
                  ,PHONES_FAX=CASE LEN(ISNULL(CMP.PHONES_FAX,'')) WHEN 0 THEN '' ELSE 'TEL: '+CMP.PHONES_FAX END  
                  ,TIN_NO=CASE LEN(ISNULL(CMP.TIN_NO,'')) WHEN 0 THEN '' ELSE 'TIN: '+CMP.TIN_NO END  
                  ,TAN_NO=CASE LEN(ISNULL(CMP.TAN_NO,'')) WHEN 0 THEN '' ELSE 'TAN: '+CMP.TAN_NO END   
                  ,CIN=CASE LEN(ISNULL(CMP.CIN,'')) WHEN 0 THEN '' ELSE 'CIN: '+CMP.CIN END  
      ,CMP.LOGO_PATH  
      ,LOC_GST_NO=CASE LEN(ISNULL(L.LOC_GST_NO,'')) WHEN 0 THEN '' ELSE 'GSTIN: '+L.LOC_GST_NO END   
      ,CAST(0 AS NUMERIC(10,2)) AS REVERSE_CHARGES,  
      CASE WHEN INM.INV_MODE=2 AND L.LOC_GST_NO=TL.LOC_GST_NO THEN 'CHALLAN NO: '   
           ELSE 'INV NO: 'END+INM.INV_NO AS INV_NO,  
      CASE WHEN INM.INV_MODE=2 AND L.LOC_GST_NO=TL.LOC_GST_NO THEN 'CHALLAN DT: '   
           ELSE 'INV DT: 'END+CONVERT(VARCHAR,INM.INV_DT,105) AS INV_DT,  
      ISNULL(LS.GST_STATE_NAME,'') AS LOC_GST_STATE_NAME,  
      LS.GST_STATE_CODE AS LOC_GST_STATE_CODE,  
      'RECEIVER:- '+CASE WHEN INV_MODE=1 THEN LM.AC_NAME ELSE TL.DEPT_NAME END   
      +CASE ISNULL(COM.IS_PARTY_ALIAS,0) WHEN 0 THEN ''   
              ELSE CASE WHEN INV_MODE=1 THEN ISNULL('-'+LM.ALIAS,'') ELSE ISNULL('-'+TL.DEPT_ALIAS,'') END  
             END  
      AS PARTY_NAME,  
        
      L.LOC_GST_NO AS LOCGST_NO,--12 MAR 2018  
      --TL.LOC_GST_NO AS PARTYGST_NO,--12 MAR 2018  
      PCOUNTRY.AC_GST_NO AS PARTYGST_NO, --16 MAR 2018  
      L.REGISTERED_GST AS REGISTERED_GST,--12 MAR 2018  
        
      CASE WHEN INV_MODE=1  
           THEN CASE LEN(ISNULL(LMP.ADDRESS0,'')) WHEN 0 THEN '' ELSE RTRIM(LTRIM(ISNULL(LMP.ADDRESS0,''))) END  
           ELSE CASE LEN(ISNULL(TL.ADDRESS1,'')) WHEN 0 THEN '' ELSE RTRIM(LTRIM(TL.ADDRESS1)) END  
      END  
      AS PARTY_ADDRESS1,  
        
      CASE WHEN INV_MODE=1  
           THEN CASE LEN(ISNULL(LMP.ADDRESS1,'')) WHEN 0 THEN '' ELSE RTRIM(LTRIM(ISNULL(LMP.ADDRESS1,''))) END  
           ELSE CASE LEN(ISNULL(TL.ADDRESS2,'')) WHEN 0 THEN '' ELSE RTRIM(LTRIM(TL.ADDRESS2)) END  
      END  
      AS PARTY_ADDRESS2,  
  
      CASE WHEN INV_MODE=1  
           THEN CASE LEN(ISNULL(LMP.ADDRESS2,'')) WHEN 0 THEN '' ELSE RTRIM(LTRIM(ISNULL(LMP.ADDRESS2,''))) END  
           ELSE ''--CASE LEN(ISNULL(TL.ADDRESS1,'')) WHEN 0 THEN '' ELSE 'RECEIVER: '+RTRIM(LTRIM(TL.ADDRESS1))  
      END  
      AS PARTY_ADDRESS3,  
              
      CASE WHEN INV_MODE=1  
           THEN RTRIM(LTRIM(CASE RIGHT(RTRIM(ISNULL(CUSAR.AREA_NAME,'')),1) WHEN ',' THEN LEFT(ISNULL(CUSAR.AREA_NAME,''),LEN(ISNULL(CUSAR.AREA_NAME,''))-1) ELSE ISNULL(CUSAR.AREA_NAME,'')END+CASE LEN(ISNULL(CUSCT.CITY,'')) WHEN 0 THEN '' ELSE ', ' END+ISNULL(CUSCT.CITY,'')+CASE LEN(ISNULL(CUSAR.PINCODE,'')) WHEN 0 THEN '' ELSE ', ' END+CUSAR.PINCODE))  
           ELSE RTRIM(LTRIM(ISNULL(TLAR.AREA_NAME,'')+CASE LEN(ISNULL(TLCT.CITY,'')) WHEN 0 THEN '' ELSE ', ' END+ISNULL(TLCT.CITY,'')+CASE LEN(ISNULL(TLAR.PINCODE,''))  WHEN 0 THEN '' ELSE ', ' END+TLAR.PINCODE))  
      END  
      +CASE WHEN ISNULL(LMP.PHONES_O,'')<> '' THEN ' PHONE- '+ISNULL(LMP.PHONES_O,'')  
            ELSE CASE WHEN ISNULL(LMP.PHONES_R,'')<> '' THEN ' PHONE- '+ISNULL(LMP.PHONES_R,'')  
                      ELSE CASE WHEN ISNULL(LMP.MOBILE,'')<> '' THEN ' MOBILE- '+ISNULL(LMP.MOBILE,'') ELSE '' END  
                 END  
       END       
      --CASE ISNULL(' '+LMP.MOBILE,'') WHEN '' THEN '' ELSE ' PHONE- '+LMP.MOBILE END  
      AS PARTY_CITY,  
      --31 JUL 2017  
        
      CASE WHEN INV_MODE=1 THEN LMP.AC_GST_NO ELSE TL.LOC_GST_NO END AS PARTY_GST_NO,  
      ISNULL(CASE WHEN INV_MODE=1 THEN CS.GST_STATE_NAME ELSE TS.GST_STATE_NAME END,'') AS PARTY_STATE_NAME,  
      ISNULL(CASE WHEN INV_MODE=1 THEN CS.GST_STATE_CODE ELSE TS.GST_STATE_CODE END,'') AS PARTY_STATE_CODE,  
      ISNULL(TR.TRANSPORTER_NAME,'') AS TRANSPORTER_NAME,  
      ISNULL(TR.BILTY_NO,'') AS BILTY_NO,  
      ISNULL(BOX_NO,0)   
      --CASE LEN(ISNULL(@BOX_NO,'')) WHEN 0 THEN 0 ELSE 1 END  
      AS BOX_NO,  
        
      ISNULL(WGHT,0) AS WGHT,  
      ISNULL(TR.VEHICLE_NO,'') AS VEHICLE_NO,  
      CASE WHEN INM.CANCELLED =1 THEN 'CANCELLED' ELSE '' END AS CANCELLED,  
        
      --CASE WHEN INM.INV_MODE=2 AND L.LOC_GST_NO=TL.LOC_GST_NO THEN 'DELIVERY CHALLAN'   
      --     WHEN INM.INV_MODE=2 AND L.LOC_GST_NO!=TL.LOC_GST_NO AND TL.REGISTERED_GST=2 THEN 'BILL OF SUPPLY' --12 MAR 2018  
      --     ELSE 'TAX INVOICE'   
      --END AS INVOICE_TYPE,  
        
      CASE --LOCATION UNREGISTERED  
        WHEN ISNULL(L.REGISTERED_GST,0)=0 THEN 'BILL OF SUPPLY'  
        --LOCATION COMPOSITE  
        WHEN L.REGISTERED_GST=2 AND L.LOC_GST_NO!=PCOUNTRY.AC_GST_NO THEN 'BILL OF SUPPLY'  
        --LOCATION REGISTERED  
           WHEN L.REGISTERED_GST=1 AND L.LOC_GST_NO=PCOUNTRY.AC_GST_NO THEN 'DELIVERY CHALLAN'  
           WHEN L.REGISTERED_GST=1 AND L.LOC_GST_NO!=PCOUNTRY.AC_GST_NO AND ISNULL(LCOUNTRY.COUNTRY_NAME,'') <> ISNULL(PCOUNTRY.COUNTRY_NAME,'')  THEN 'BILL OF SUPPLY'  
           WHEN L.REGISTERED_GST=1 AND L.LOC_GST_NO!=PCOUNTRY.AC_GST_NO AND ISNULL(LCOUNTRY.COUNTRY_NAME,'') =  ISNULL(PCOUNTRY.COUNTRY_NAME,'')  THEN 'TAX INVOICE'  
           --OLD  
           WHEN INM.INV_MODE=2 AND L.LOC_GST_NO=PCOUNTRY.AC_GST_NO THEN 'DELIVERY CHALLAN'  
      END AS INVOICE_TYPE,  
        
      ISNULL(LS.UT,0) AS UT,  
      (SELECT TOP 1 ISNULL(IS_ENABLED,0) FROM GST_TNC WHERE XN_TYPE=@CXN_TYPE)AS PRINT_TERM,  
      --31 JUL 2017  
      CASE ISNULL(INM.SHIPPING_ADDRESS,'') WHEN '' THEN '' ELSE 'SHIP TO:- '+ISNULL(INM.SHIPPING_ADDRESS,'') END AS SHIPPING_ADDRESS,  
      --31 JUL 2017  
      ISNULL(INM.SHIPPING_ADDRESS2,'') AS SHIPPING_ADDRESS2,  
      ISNULL(INM.SHIPPING_ADDRESS3,'') AS SHIPPING_ADDRESS3,  
      ISNULL(INM.SHIPPING_AREA_CODE,'') AS SHIPPING_AREA_CODE,  
      ISNULL(INM.SHIPPING_AREA_NAME,'') AS SHIPPING_AREA_NAME  ,  
      ISNULL(INM.SHIPPING_CITY_NAME,'') AS SHIPPING_CITY_NAME,  
      ISNULL(INM.SHIPPING_STATE_NAME,'') AS SHIPPING_STATE_NAME,  
      ISNULL(INM.SHIPPING_PIN,'') AS SHIPPING_PIN  
      --,(SELECT TOP 1 ISNULL(REGISTERED_ADD,'') FROM LOCATION L (NOLOCK) WHERE DEPT_ID=LEFT(@CXN_ID,2))REGISTERED_ADDRESS  
      ,ISNULL(L.REGISTERED_ADD,'')REGISTERED_ADDRESS  
      ,ISNULL(INM.REMARKS,'')REMARKS  
      --,BUYER_ORDER_NO=CASE ISNULL(BUYER_ORDER_NO,'') WHEN '' THEN '' ELSE 'P.O.NO: '+BUYER_ORDER_NO END  
      ,BUYER_ORDER_NO=CASE ISNULL(REF_INV_ID,'') WHEN '' THEN '' ELSE 'P.O.NO: '+REF_INV_ID END  
       
      --14 JUL 2017  
      ,COM.LOGO AS LOGO  
      ,COM.NAME AS NAME  
      ,COM.ADDRESS1 AS PRINT_ADDRESS1  
      ,COM.TELEPHONE1 AS TELEPHONE1  
      ,COM.CIN_NO AS CIN_NO  
      ,COM.DATE_WITH_TIME AS DATE_WITH_TIME  
                  ,COM.PRINT_WSL_MRP AS PRINT_WSL_MRP  
      ,COM.PRINT_BROKER_NAME AS PRINT_BROKER_NAME  
        
      --15 JUL 2017  
      ,ISNULL((SELECT SUM(XN_VALUE_WITHOUT_GST) FROM INDSUPP (NOLOCK) WHERE INV_ID=@CXN_ID),0)  
       +ISNULL(INM.FREIGHT,0)+ISNULL(INM.INSURANCE,0)+ISNULL(INM.PACKING,0)+ISNULL(INM.OTHER_CHARGES,0)  
       AS [TAXABLEVALUE]  
         
                  ,ISNULL((SELECT SUM(CGST_AMOUNT) FROM INDSUPP (NOLOCK) WHERE INV_ID=@CXN_ID),0)  
                   +ISNULL(INM.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(INM.FREIGHT_CGST_AMOUNT,0)+ISNULL(INM.INSURANCE_CGST_AMOUNT,0)+ISNULL(INM.PACKING_CGST_AMOUNT,0)  
                   AS [CGSTAMOUNT]   
                     
                  ,ISNULL((SELECT SUM(SGST_AMOUNT) FROM INDSUPP (NOLOCK) WHERE INV_ID=@CXN_ID),0)  
                   +ISNULL(INM.OTHER_CHARGES_SGST_AMOUNT,0)+ISNULL(INM.FREIGHT_SGST_AMOUNT,0)+ISNULL(INM.INSURANCE_SGST_AMOUNT,0)+ISNULL(INM.PACKING_SGST_AMOUNT,0)  
                   AS [SGSTAMOUNT]  
                     
                  ,ISNULL((SELECT SUM(IGST_AMOUNT) FROM INDSUPP (NOLOCK) WHERE INV_ID=@CXN_ID),0)  
                  +ISNULL(INM.OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(INM.FREIGHT_IGST_AMOUNT,0)+ISNULL(INM.INSURANCE_IGST_AMOUNT,0)+ISNULL(INM.PACKING_IGST_AMOUNT,0)  
                   AS [IGSTAMOUNT]  
                     
      ,ISNULL(INM.FREIGHT,0) AS FREIGHT  
      ,ISNULL(INM.INSURANCE,0) AS INSURANCE_AMOUNT  
      ,ISNULL(INM.PACKING,0) AS PACKING  
      ,ISNULL(INM.OTHER_CHARGES,0) AS OTHER_CHARGE  
      ,ISNULL(INM.NET_AMOUNT,0) AS NETAMOUNT  
      ,ISNULL(INM.ROUND_OFF,0) AS ROUND_OFF  
      ,ISNULL((SELECT SUM(CGST_AMOUNT+SGST_AMOUNT+IGST_AMOUNT) FROM INDSUPP(NOLOCK) WHERE INV_ID=@CXN_ID),0)  
      +ISNULL(INM.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(INM.FREIGHT_CGST_AMOUNT,0)+ISNULL(INM.INSURANCE_CGST_AMOUNT,0)+ISNULL(INM.PACKING_CGST_AMOUNT,0)  
      +ISNULL(INM.OTHER_CHARGES_SGST_AMOUNT,0)+ISNULL(INM.FREIGHT_SGST_AMOUNT,0)+ISNULL(INM.INSURANCE_SGST_AMOUNT,0)+ISNULL(INM.PACKING_SGST_AMOUNT,0)  
      +ISNULL(INM.OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(INM.FREIGHT_IGST_AMOUNT,0)+ISNULL(INM.INSURANCE_IGST_AMOUNT,0)+ISNULL(INM.PACKING_IGST_AMOUNT,0)  
      AS [GSTCOLLECTION]  
      --25 JUL 2017  
      ,(SELECT TOP 1 PHONES_O   FROM LMV01106 LMV (NOLOCK) WHERE LMV.AC_CODE=INM.AC_CODE)LANDLINE_OFFICE  
      ,(SELECT TOP 1 PHONES_R   FROM LMV01106 LMV (NOLOCK) WHERE LMV.AC_CODE=INM.AC_CODE)LANDLINE_RES  
      ,(SELECT TOP 1 PHONES_FAX FROM LMV01106 LMV (NOLOCK) WHERE LMV.AC_CODE=INM.AC_CODE)FAX  
      ,(SELECT TOP 1 MOBILE     FROM LMV01106 LMV (NOLOCK) WHERE LMV.AC_CODE=INM.AC_CODE)MOBILE  
     --01 AUG 2017  
      ,ROUTE_FORM1,ROUTE_FORM2  
     --10 AUG 2017  
      ,CASE ISNULL(BN.AC_NAME,'') WHEN '' THEN '' ELSE 'BROKER NAME: '+ISNULL(BN.AC_NAME,'') END AS BROKER_NAME  
     --22 AUG 2017  
      ,ISNULL(COM.PRINT_REF_NO,0) AS PRINT_REF_NO  
      ,CASE ISNULL(INM.MANUAL_INV_NO,'') WHEN '' THEN '' ELSE 'REF NO: '+INM.MANUAL_INV_NO END AS REF_NO  
      ,@MRP_TOTAL AS TOTAL_MRP  
      ,COMPANY_PAN_NO=CASE LTRIM(RTRIM(ISNULL(CMP.PAN_NO,''))) WHEN '' THEN '' ELSE 'PAN: '+LTRIM(RTRIM(ISNULL(CMP.PAN_NO,''))) END  
        
     --10 NOV 2017  
      ,COM.PRINT_WSL_ITEM_MRP AS PRINT_WSL_ITEM_MRP  
      ,COM.PRINT_WSL_ITEM_DISPER AS PRINT_WSL_ITEM_DISPER  
      ,COM.PRINT_WSL_ITEM_DISAMT AS PRINT_WSL_ITEM_DISAMT  
        
     --01 FEB 2018  
      ,ISNULL((SELECT TOP 1 PRINT_COPIES FROM GST_SLS_CUSTOMER_CONFIG (NOLOCK) WHERE XN_TYPE=@CXN_TYPE),1)AS PRINT_COPIES  
     --03 FEB 2018  
     ,ISNULL(COM.PRINT_AUTHORIZED_SIGNATURE,0) AS PRINT_AUTHORIZED_SIGNATURE    
                 --06 FEB 2018  
     ,ISNULL(COM.TOP_MARGIN,0.01) AS TOP_MARGIN  
     ,ISNULL(COM.BOTTOM_MARGIN,0.25) AS BOTTOM_MARGIN  
     ,ISNULL(COM.LEFT_MARGIN,0.30) AS LEFT_MARGIN  
     ,ISNULL(COM.RIGHT_MARGIN,0.25) AS RIGHT_MARGIN  
     ,ISNULL(COM.MRP,0)AS PRINT_WSL_SHOW_MRP  
     --23 FEB 2017  
     ,ISNULL(COM.PRINT_WSL_BOX_NO,0)AS PRINT_WSL_BOX_NO  
     --16 MAR 2018  
     ,'COUNTRY: '+ISNULL(PCOUNTRY.COUNTRY_NAME,'') PARTY_COUNTRY       
     ,ISNULL(LCOUNTRY.COUNTRY_NAME,'') AS LOC_COUNTRY  
       
     INTO #DATASET1        
   FROM INMSUPP INM (NOLOCK)    
   JOIN GST_COMPANY_CONFIG COM(NOLOCK) ON 1=1 AND XN_TYPE=@CXN_TYPE  
   LEFT JOIN COMPANY CMP (NOLOCK) ON CMP.COMPANY_CODE='01'  
   LEFT OUTER JOIN LOCATION L (NOLOCK) ON L.DEPT_ID =INM.location_code  
   LEFT JOIN LMV01106 LCOUNTRY (NOLOCK) ON L.DEPT_AC_CODE=LCOUNTRY.AC_CODE--16 MAR 2018  
   LEFT JOIN GST_STATE_MST LS (NOLOCK) ON LS.GST_STATE_CODE=L.GST_STATE_CODE  
   LEFT JOIN LMP01106 LMP (NOLOCK) ON LMP.AC_CODE=INM.AC_CODE  
   LEFT JOIN GST_STATE_MST CS (NOLOCK) ON CS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE  
   LEFT JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE=LMP.AC_CODE  
   LEFT JOIN LMV01106 PCOUNTRY (NOLOCK) ON LM.AC_CODE=PCOUNTRY.AC_CODE--16 MAR 2018  
   LEFT JOIN AREA CUSAR (NOLOCK) ON LMP.AREA_CODE=CUSAR.AREA_CODE  
   LEFT JOIN CITY CUSCT (NOLOCK) ON CUSAR.CITY_CODE=CUSCT.CITY_CODE  
   LEFT OUTER JOIN LOCATION TL (NOLOCK) ON TL.DEPT_ID=INM.PARTY_DEPT_ID  
   LEFT JOIN AREA TLAR (NOLOCK) ON TL.AREA_CODE=TLAR.AREA_CODE  
   LEFT JOIN CITY TLCT (NOLOCK) ON TLAR.CITY_CODE=TLCT.CITY_CODE  
   LEFT JOIN GST_STATE_MST TS (NOLOCK) ON TS.GST_STATE_CODE=TL.GST_STATE_CODE  
   LEFT OUTER JOIN #TRANSPORTER TR ON TR.XN_ID=INM.INV_ID  
   LEFT OUTER JOIN LM01106 BN (NOLOCK) ON INM.BROKER_AC_CODE=BN.AC_CODE  
   WHERE INM.INV_ID=@CXN_ID  
  
   UPDATE #DATASET1 SET ADDRESS1=REPLACE(ADDRESS1,'(WC)','')  
      ,ADDRESS2=REPLACE(ADDRESS2,'(WC)','')  
      ,CITY=REPLACE(CITY,'(WC)','')  
      ,PARTY_ADDRESS1=REPLACE(PARTY_ADDRESS1,'(WC)','')  
      ,PARTY_ADDRESS2=REPLACE(PARTY_ADDRESS2,'(WC)','')  
      ,PARTY_ADDRESS3=REPLACE(PARTY_ADDRESS3,'(WC)','')  
      ,PARTY_CITY=REPLACE(PARTY_CITY,'(WC)','')  
        
      SELECT * FROM #DATASET1   
        
        
      
    --04 AUG 2017  
   SET @CCOLNAME=''  
   IF ISNULL(@BOX_NO,'')!=''  
      SET @CCOLNAME='ISNULL(SKU.PRODUCT_CODE,'''')'  
   ELSE  
      BEGIN  
         SELECT @CCOLNAME=ISNULL(@CCOLNAME+'+','  ')+'ISNULL('+SOURCENAME+'.'+QUOTENAME(COLUMNNAME) +','''')+'+''''+COLUMNSEPARATOR+''''+' '  
         FROM GST_XN_DETAIL WHERE XN_TYPE =@CXN_TYPE AND ISVISIBLE=1  
         ORDER BY DISPLAYORDER  
         --04 AUG 2017  
         SET @CCOLNAME=RTRIM(@CCOLNAME)  
                  IF RIGHT(@CCOLNAME,4)='+'''+(SELECT TOP 1 COLUMNSEPARATOR FROM GST_XN_DETAIL WHERE XN_TYPE =@CXN_TYPE AND ISVISIBLE=1)+''''  
                     SET @CCOLNAME=LEFT(@CCOLNAME,LEN(@CCOLNAME)-4)  
                  IF LEFT(@CCOLNAME,1)='+'  
                     SET @CCOLNAME=SUBSTRING(@CCOLNAME,2,LEN(@CCOLNAME)-1)     
               END     
   --PRINT @CCOLNAME  
   IF OBJECT_ID ('TEMPDB..#TMPDETAILS','U') IS NOT NULL  
         DROP TABLE #TMPDETAILS  
            SELECT ROW_NUMBER() OVER (ORDER BY AUTO_SRNO) AS SR_NO,  CAST('' AS VARCHAR(MAX)) AS PARTICULARS ,  
          A.HSN_CODE,UOM.UOM_NAME,  
          CAST(A.QUANTITY AS NUMERIC(10,2)) AS QUANTITY,  
          A.RATE,  
          A.MRP,  
          CAST(A.QUANTITY*A.RATE AS NUMERIC(12,2)) AS AMOUNT,  
          CAST((A.QUANTITY*A.RATE )-ISNULL(XN_VALUE_WITHOUT_GST,0) AS NUMERIC(12,2))   
          AS LESS_DISCOUNT,  
          --31 JUL 2017  
          CAST((A.QUANTITY*A.RATE )-ISNULL(XN_VALUE_WITHOUT_GST,0) AS NUMERIC(12,2))   
          AS DISCOUNT_AMOUNT,  
          --31 JUL 2017  
          CAST(ISNULL(XN_VALUE_WITHOUT_GST,0) AS NUMERIC(12,2)) AS TAXABLE_VALUE,  
          CAST(CASE WHEN A.IGST_AMOUNT<>0 THEN A.GST_PERCENTAGE ELSE 0 END AS NUMERIC(12,0)) AS IGST_RATE,  
          A.IGST_AMOUNT,  
          CAST(CASE WHEN A.CGST_AMOUNT<>0 THEN (A.GST_PERCENTAGE)/2 ELSE 0 END AS NUMERIC(12,1)) AS CGST_RATE ,  
          A.CGST_AMOUNT,  
          CAST(CASE WHEN A.SGST_AMOUNT<>0 THEN (A.GST_PERCENTAGE)/2 ELSE 0 END AS NUMERIC(12,1)) AS SGST_RATE ,  
          A.SGST_AMOUNT,  
          A.XN_VALUE_WITH_GST AS TOTAL,  
          B.NET_AMOUNT ,B.ROUND_OFF  --MORE CHANGES IN REPORT URGENT REQUIRED FOR UPDATE CHANGES IN MASTER  
       ,A.BOX_NO AS ITEM_BOX_NO         
   INTO #TMPDETAILS            
   FROM INDSUPP A (NOLOCK)  
   JOIN INMSUPP B (NOLOCK) ON  A.INV_ID=B.INV_ID  
   LEFT JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =A.PRODUCT_CODE     
   LEFT JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE =SKU.ARTICLE_CODE      
   LEFT JOIN UOM UOM (NOLOCK) ON UOM.UOM_CODE=ARTICLE.UOM_CODE  
   LEFT OUTER JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE  
   WHERE 1=2  
     
   SET @SNO=0--ASKED BY SANJIV SIR ON 19 JAN 2018 TO ORDER ONLY ON PARTICULARS  
  
   --SET @DTSQL=N' SELECT ROW_NUMBER() OVER (ORDER BY '+ @CCOLNAME+' ) AS SR_NO, '+ @CCOLNAME+' AS PARTICULARS ,  
            SET @DTSQL=N' SELECT ROW_NUMBER() OVER (ORDER BY '+CASE @SNO WHEN 0 THEN @CCOLNAME ELSE 'A.AUTO_SRNO' END+' ) AS SR_NO, '+ @CCOLNAME+' AS PARTICULARS ,     
                 A.HSN_CODE,UOM.UOM_NAME,  
                 SUM(A.QUANTITY) AS QUANTITY,  
                 A.RATE,  
                 ISNULL(A.MRP,0)MRP,--06 FEB 2018  
                 CAST(SUM(A.QUANTITY*A.RATE) AS NUMERIC(12,2)) AS AMOUNT,  
                   
                 --CAST((SUM(A.QUANTITY)*A.RATE)-SUM(ISNULL(XN_VALUE_WITHOUT_GST,0)) AS NUMERIC(12,2))  
                 CAST(SUM(A.DISCOUNT_AMOUNT+ CASE WHEN B.SUBTOTAL>0 THEN ((B.DISCOUNT_AMOUNT/B.SUBTOTAL)*A.NET_RATE*A.INVOICE_QUANTITY) ELSE 0 END )   AS NUMERIC(12,2))   
                 AS LESS_DISCOUNT,  
                   
                 --31 JUL 2017  
                 0 AS DISCOUNT_AMOUNT,  
                 --31 JUL 2017  
                   
                 CAST(SUM(ISNULL(XN_VALUE_WITHOUT_GST,0)) AS NUMERIC(12,2)) AS TAXABLE_VALUE,  
    
                 CAST(CASE WHEN SUM(A.IGST_AMOUNT)<>0 THEN  A.GST_PERCENTAGE ELSE 0 END AS NUMERIC(12,0)) AS IGST_RATE,  
                 CAST(SUM(A.IGST_AMOUNT) AS NUMERIC(12,2)) AS IGST_AMOUNT,  
                 CAST(CASE WHEN SUM(A.CGST_AMOUNT)<>0 THEN  (A.GST_PERCENTAGE)/2 ELSE 0 END AS NUMERIC(12,1)) AS CGST_RATE,  
                 CAST(SUM(A.CGST_AMOUNT) AS NUMERIC(12,2)) AS CGST_AMOUNT,  
                 CAST(CASE WHEN SUM(A.SGST_AMOUNT)<>0 THEN  (A.GST_PERCENTAGE)/2 ELSE 0 END AS NUMERIC(12,1)) AS SGST_RATE,  
                 CAST(SUM(A.SGST_AMOUNT) AS NUMERIC(12,2)) AS SGST_AMOUNT,  
                 CAST(SUM(A.XN_VALUE_WITH_GST) AS NUMERIC(12,2)) AS TOTAL,  
                 B.NET_AMOUNT,  
                 B.ROUND_OFF,  
                 A.BOX_NO  
       FROM INDSUPP A (NOLOCK)  
       JOIN INMSUPP B (NOLOCK) ON  A.INV_ID=B.INV_ID  
       LEFT JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =A.PRODUCT_CODE     
       LEFT JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE =SKU.ARTICLE_CODE      
       LEFT JOIN UOM UOM (NOLOCK) ON UOM.UOM_CODE=ARTICLE.UOM_CODE  
       LEFT OUTER JOIN SECTIOND (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE  
       LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE  
       LEFT OUTER JOIN PARA1 ON PARA1.PARA1_CODE=SKU.PARA1_CODE  
       LEFT OUTER JOIN PARA2 ON PARA2.PARA2_CODE=SKU.PARA2_CODE  
       LEFT OUTER JOIN PARA3 ON PARA3.PARA3_CODE=SKU.PARA3_CODE  
       LEFT OUTER JOIN PARA4 ON PARA4.PARA4_CODE=SKU.PARA4_CODE  
       LEFT OUTER JOIN PARA5 ON PARA5.PARA5_CODE=SKU.PARA5_CODE  
       LEFT OUTER JOIN PARA6 ON PARA6.PARA6_CODE=SKU.PARA6_CODE  
       LEFT OUTER JOIN WPS_MST WPS_MST (NOLOCK) ON ISNULL(WPS_MST.PS_ID,'''')=ISNULL(A.PS_ID,'''')  
       WHERE A.INV_ID='''+@CXN_ID+''''  
       --16 AUG 2017 - BOX NO FILTER  
       +CASE ISNULL(@BOX_NO,'') WHEN '' THEN '' ELSE ' AND A.BOX_NO '+@BOX_NO END+  
       --16 AUG 2017 - BOX NO FILTER  
       'GROUP BY '  
       +/*10 AUG 2017 : ORDER ISSUE*/CASE @SNO WHEN 0 THEN '' ELSE 'A.AUTO_SRNO,' END/*10 AUG 2017 : ORDER ISSUE*/  
         + @CCOLNAME+',A.HSN_CODE,UOM.UOM_NAME,A.RATE,ISNULL(A.MRP,0)--06 FEB 2018  
         ,A.GST_PERCENTAGE ,B.NET_AMOUNT ,B.ROUND_OFF,A.BOX_NO  
       ORDER BY 1'--+ @CCOLNAME+''  
   PRINT @DTSQL  
   INSERT INTO #TMPDETAILS(SR_NO,PARTICULARS,HSN_CODE,UOM_NAME,QUANTITY,RATE,MRP,AMOUNT,LESS_DISCOUNT,DISCOUNT_AMOUNT,TAXABLE_VALUE,IGST_RATE,IGST_AMOUNT,CGST_RATE,CGST_AMOUNT,SGST_RATE,SGST_AMOUNT,TOTAL,NET_AMOUNT,ROUND_OFF,ITEM_BOX_NO)  
   EXEC SP_EXECUTESQL @DTSQL  
     
   --31 JUL 2017  
   UPDATE #TMPDETAILS SET DISCOUNT_AMOUNT=LESS_DISCOUNT  
   UPDATE #TMPDETAILS SET LESS_DISCOUNT=0  
   UPDATE #TMPDETAILS SET LESS_DISCOUNT=ROUND(DISCOUNT_AMOUNT/AMOUNT*100.0,2)  
   --31 JUL 2017  
     
   SELECT SR_NO,PARTICULARS,HSN_CODE,UOM_NAME,QUANTITY,RATE,MRP,AMOUNT,LESS_DISCOUNT,DISCOUNT_AMOUNT,TAXABLE_VALUE,IGST_RATE,  
          IGST_AMOUNT,CGST_RATE,CGST_AMOUNT,SGST_RATE,SGST_AMOUNT,TOTAL ,NET_AMOUNT,ROUND_OFF,ITEM_BOX_NO  
   FROM #TMPDETAILS   
   ORDER BY SR_NO   
     
   SELECT TNC_1,TNC_2,TNC_3,TNC_4,TNC_5,TNC_6,TNC_7,TNC_8   
   FROM GST_TNC WHERE XN_TYPE=@CXN_TYPE  
    
   SELECT B.PAYMODE_NAME+' '+CAST(SUM(A.AMOUNT) AS VARCHAR) AS PAYMODE_NAME  
   FROM PAYMODE_XN_DET A (NOLOCK)  
   JOIN PAYMODE_MST B (NOLOCK) ON A.PAYMODE_CODE=B.PAYMODE_CODE  
   WHERE A.XN_TYPE =@CXN_TYPE AND A.MEMO_ID=@CXN_ID  
   GROUP BY B.PAYMODE_NAME  
     
   SELECT @NCALQTYSUM=SUM(QUANTITY) FROM #TMPDETAILS  
   SELECT @NSTOREDQTY=SUM(QUANTITY) FROM INDSUPP WHERE INV_ID=@CXN_ID   
     
            --ADD NEW AS BLOCK FOR GST PERCENTAGE  
            SELECT *  
         ,[IGST_PER]=CASE ISNULL([IGST_AMOUNT],0) WHEN 0 THEN '0%' WHEN [GST_COLLECTION] THEN GST ELSE GST END  
         ,[CGST_PER]=CASE ISNULL([CGST_AMOUNT],0) WHEN 0 THEN '0%' ELSE DBO.CURR_GROUPING(ROUND(CAST(REPLACE([GST],'%','') AS DECIMAL(10,2))/2,2),'')+'%' END  
         ,[SGST_PER]=CASE ISNULL([SGST_AMOUNT],0) WHEN 0 THEN '0%' ELSE DBO.CURR_GROUPING(ROUND(CAST(REPLACE([GST],'%','') AS DECIMAL(10,2))/2,2),'')+'%' END  
         FROM  
      (  
        SELECT CAST(DBO.CURR_GROUPING(GST_PERCENTAGE,'') AS VARCHAR)+'%'[GST]  
    ,SUM(XN_VALUE_WITHOUT_GST)[TAXABLE_VALUES]  
    ,SUM(CGST_AMOUNT)[CGST_AMOUNT]   
    ,SUM(SGST_AMOUNT)[SGST_AMOUNT]   
    ,SUM(IGST_AMOUNT)[IGST_AMOUNT]  
    ,SUM(CGST_AMOUNT+SGST_AMOUNT+IGST_AMOUNT)[GST_COLLECTION]  
       FROM INDSUPP (NOLOCK) WHERE INV_ID=@CXN_ID  
       GROUP BY CAST(DBO.CURR_GROUPING(GST_PERCENTAGE,'') AS VARCHAR)  
      )GST  
        
           
   --GST_OH_CONFIG ON 15 JUL 2017  
   SELECT *   
   FROM  
   (  
    SELECT CASE OH_NAME WHEN 'OC' THEN 'OTHER CHARGES' ELSE OH_NAME END AS OH_NAME  
    ,HSN_CODE AS HSNSAC_CODE  
    ,OH_GST_PER=CASE OH_NAME WHEN 'FREIGHT' THEN FREIGHT_GST_PERCENTAGE WHEN 'OC' THEN OTHER_CHARGES_GST_PERCENTAGE  WHEN 'INSURANCE' THEN INSURANCE_GST_PERCENTAGE WHEN 'PACKING' THEN PACKING_GST_PERCENTAGE END  
    ,OH_SGST_AMOUNT=CASE OH_NAME WHEN 'OC' THEN ISNULL(OTHER_CHARGES_SGST_AMOUNT,0) WHEN 'FREIGHT' THEN ISNULL(FREIGHT_SGST_AMOUNT,0) WHEN 'INSURANCE' THEN ISNULL(INSURANCE_SGST_AMOUNT,0) WHEN 'PACKING' THEN ISNULL(PACKING_SGST_AMOUNT,0) END  
    ,OH_CGST_AMOUNT=CASE OH_NAME WHEN 'OC' THEN ISNULL(OTHER_CHARGES_CGST_AMOUNT,0) WHEN 'FREIGHT' THEN ISNULL(FREIGHT_CGST_AMOUNT,0) WHEN 'INSURANCE' THEN ISNULL(INSURANCE_CGST_AMOUNT,0) WHEN 'PACKING' THEN ISNULL(PACKING_CGST_AMOUNT,0) END  
    ,OH_IGST_AMOUNT=CASE OH_NAME WHEN 'OC' THEN ISNULL(OTHER_CHARGES_IGST_AMOUNT,0) WHEN 'FREIGHT' THEN ISNULL(FREIGHT_IGST_AMOUNT,0) WHEN 'INSURANCE' THEN ISNULL(INSURANCE_IGST_AMOUNT,0) WHEN 'PACKING' THEN ISNULL(PACKING_IGST_AMOUNT,0) END  
    FROM GST_OH_CONFIG,INMSUPP (NOLOCK)  
    WHERE INV_ID=@CXN_ID  
   )T  
   WHERE ISNULL(OH_GST_PER,0)<>0  
     
   IF ABS(@NCALQTYSUM-@NSTOREDQTY)>0  
      BEGIN  
        SET @CERRMSG='CALCULATED & STORED QTY DIFFERENCE PLEASE CHECK'  
      END  
   GOTO END_PROC  
  END --END OF WSL  
  END TRY    
  BEGIN CATCH    
  BEGIN  
   SELECT @CERRMSG='ERROR MESSAGE IN PROCEDURE SP3S_PRINTSUPPREPORT_GST STEP#'+@CSTEP+' '+CAST(ERROR_MESSAGE() AS VARCHAR(MAX))+ '||'+ERROR_PROCEDURE()    
   GOTO END_PROC  
  END  
  END CATCH     
     
END_PROC:  
  SELECT @CERRMSG AS ERRMSG  
  SET NOCOUNT OFF  
END
