CREATE PROCEDURE SP_SYNCH_MIRRORDATA_WSL_SINGLE
(
    @CLOCID VARCHAR(3)
   ,@CERRMSG VARCHAR(1000) OUTPUT
)
--WITH ENCRYPTION
AS
SET NOCOUNT ON
BEGIN

	/*
		208_2014_01_13 : THIS PROCEDURE WILL MERGE DATA FROM TEMPORARY TABLE TO ACTUAL TABLE.
						 TABLE NAMES AND ITS MERGING ORDER WILL BE FIXED AND WILL BE DEFINED HERE.	
						 
		NOTE : EMPLOYEE_HEAD WILL BE MERGED TO EMPLOYEE				 
	*/

DECLARE @CSTEP VARCHAR(100),@DTSQL NVARCHAR(MAX),@NMERGE_ORDER NUMERIC(5)
	   ,@CTABLENAME VARCHAR(200),@CTABLE_SUFFIX VARCHAR(50),@CKEYFIELD VARCHAR(200),@CDEL_ID VARCHAR(50),@CTMP_TABLENAME VARCHAR(200),@LINSERTONLY VARCHAR(1)
	   ,@CFILTERCONDITION VARCHAR(200),@CFILTERCONDITION2 VARCHAR(500),@LUPDATEONLY VARCHAR(1),@BALWAYSUPDATE VARCHAR(1),@FDEL CHAR(1)
	   ,@CERRMSGOUT VARCHAR(1000),@CTABLESSTR VARCHAR(MAX),@CMIRRORINGENABLED VARCHAR(5)
	   ,@CCURDEPTID VARCHAR(5),@CTEMPMASTERTABLE VARCHAR(200),@CTEMPDETAILTABLE1 VARCHAR(200),@CTEMPDETAILTABLE2 VARCHAR(200)
	   ,@CTEMPPAYMODETABLE VARCHAR(200),@CTEMPTABLE VARCHAR(100),@CDONOTRESETPOSTEDINAC VARCHAR(1)
	   ,@BADDMODE BIT,@CCUTOFFDATE VARCHAR(20),@CWHERECLAUSE VARCHAR(2000),@CMEMONOLEN VARCHAR(5),@NMEMONOLEN INT
	   ,@DMINMEMODT DATETIME,@DMAXMEMODT DATETIME,@CFINYEAR VARCHAR(5),@CMEMOPREFIX VARCHAR(10)
	   ,@CMINMEMONO VARCHAR(20),@CMAXMEMONO VARCHAR(20),@CSOURCEDB VARCHAR(200),@CMERGEDB VARCHAR(200)
	   ,@BMSTINSERTONLY BIT,@BSERIESMISMATCHFOUND BIT,@CMEMOID VARCHAR(40),@CPREVMEMONO VARCHAR(20)
	   ,@NPREVMEMONO NUMERIC(5,0),@NLENVALUE INT,@CPREVMEMONOSEARCH VARCHAR(20),@CMEMOIDSEARCH VARCHAR(40)
	   ,@CRETPRODUCTCODE VARCHAR(50),@NVERSIONNO INT,@CJOINSTR VARCHAR(MAX),@CTEMPSKUTABLE VARCHAR(500)
	   ,@CPARTYDEPTID VARCHAR(5),@NINVMODE INT,@CMRRID VARCHAR(40),@CDONOTSENDCHALLANWODISPATCHDETAILS VARCHAR(2)
	   ,@ERP_CONFIG VARCHAR(10),@BDONOTSENDCHALLANWITHOUTDISPATCH BIT,@CFILTERCONDITION1 VARCHAR(200)
	   ,@SLS_SYNC_AFTER DATETIME,@dLastUpdate DATETIME,@dMIrrorLastUpdate DATETIME,@cMissingRowId VARCHAR(50)
	   ,@cUpdatestr VARCHAR(2000),@BDonotInsCHALLAN BIT,@bServerLoc BIT,@nEntrymode NUMERIC(1,0),
	   @BIS_BIN_TRANSFER BIT

BEGIN TRY
	
	
	SET @CSTEP=4
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1

	SELECT @CSOURCEDB='',@CMERGEDB='',@BMSTINSERTONLY=1,@BSERIESMISMATCHFOUND=0
		
    SELECT TOP 1 @CCURDEPTID=VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'

   	SELECT @BDONOTSENDCHALLANWITHOUTDISPATCH=ISNULL(DONOTSENDCHALLANWITHOUTDISPATCH,0) FROM LOCATION WHERE DEPT_ID=@CLOCID 
 
	
	SELECT @CTEMPMASTERTABLE=@CSOURCEDB+'WSL_INM01106_MIRROR',
		   @CTEMPDETAILTABLE1=@CSOURCEDB+'WSL_IND01106_MIRROR',
		   @CTEMPDETAILTABLE2=@CSOURCEDB+'WSL_PAYMODE_XN_DET_MIRROR'
		   

	IF EXISTS (SELECT TOP 1 tablename FROM savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@@SPID)
		DELETE FROM savetran_updcols_updatestr WITH (ROWLOCK) WHERE sp_id=@@SpId

	INSERT savetran_updcols_updatestr (sp_id,tablename,updatestr)
	SELECT @@SPId as sp_id,tablename,'' from mirrorxnsinfo (NOLOCK)
	WHERE tablename IN ('inm01106','ind01106','paymode_xn_det','parcel_mst','parcel_det')

	IF OBJECT_ID('TEMPDB..#T','U') IS NOT NULL
		DROP TABLE #T
	
	select INV_id INTO #t FROM WSL_INM01106_mirror (NOLOCK) WHERE 1=2

	SET @cStep=7
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1

	DECLARE @DFREEZINGDATE DATETIME	
	EXEC SP3S_GETDATA_FREEZING_DATE 'WSL',@DFREEZINGDATE OUTPUT
	
	SET @SLS_SYNC_AFTER=''
	
	SELECT @SLS_SYNC_AFTER=ISNULL(VALUE, '') FROM CONFIG WHERE config_option='SLS_SYNC_AFTER'

	
LBLSTART:

	BEGIN TRANSACTION	
	
	SET @cStep=9
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1

	SET @BDonotInsCHALLAN=0
	
    SELECT @CMEMOID='',@NVERSIONNO=0

	
    SELECT TOP 1 @CMEMOID = B.INV_ID ,@NVERSIONNO=VERSION_NO,@NINVMODE=INV_MODE,@CPARTYDEPTID=PARTY_DEPT_ID,
	@dMirrorLastUpdate=b.last_update,@bServerLoc=ISNULL(SERVER_LOC,0),@nEntrymode=ISNULL(entry_mode,0),
	@BIS_BIN_TRANSFER=B.BIN_TRANSFER
    FROM WSL_INM01106_MIRROR B (NOLOCK)
    LEFT OUTER JOIN MIRROR_SYNCH_LOG C (NOLOCK) ON C.MEMO_ID=B.INV_ID AND C.XN_TYPE='WSL'
	LEFT OUTER JOIN Location loc (NOLOCK) ON loc.dept_id=b.party_dept_id
    WHERE LEFT(B.INV_ID,2)=@CLOCID 
    AND INV_DT>@DFREEZINGDATE and b.inv_dt > ISNULL(@SLS_SYNC_AFTER,'')
    AND C.MEMO_ID IS NULL
    ORDER BY B.INV_ID,VERSION_NO DESC
    
    IF ISNULL(@CMEMOID,'')=''
		GOTO EXIT_PROC

	
    SET @CFILTERCONDITION = 'B.INV_ID='''+@CMEMOID+''' AND B.VERSION_NO='+LTRIM(RTRIM(STR(@NVERSIONNO)))
     SET @CFILTERCONDITION1 = 'B.WSL_MEMO_ID='''+@CMEMOID+''' AND B.VERSION_NO='+LTRIM(RTRIM(STR(@NVERSIONNO)))
	

	SET @cStep=14
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1

	SET @CMEMOIDSEARCH=''
	SELECT TOP 1 @CMEMOIDSEARCH=A.INV_ID FROM INM01106 A (NOLOCK) WHERE A.INV_ID=@CMEMOID
	
	IF ISNULL(@CMEMOIDSEARCH,'')<>''
		SET @BADDMODE=0
	ELSE
		SET @BADDMODE=1

	
LBLMERGE:
	---DELETING EXISTING RECORD IF BILL COMES AGAIN FOR MERGING
	
	
	IF @BADDMODE=0
	BEGIN
	    SELECT @dLastUpdate=last_update FROM inm01106 (NOLOCK) WHERE inv_id=@CMEMOID

		print 'enter baddmode=0'
		SET @CSTEP=16
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1
	   
	   --select top 1 'chk wps_mst b4',a.wsl_inv_id,a.ps_id from wps_mst a 
	   --join ind01106 b on a.ps_id=b.ps_id where inv_id=@cMemoId

		IF @nEntrymode=2
			UPDATE wps_mst SET wsl_inv_id='' FROM IND01106 b (NOLOCK)
			WHERE b.ps_id=wps_mst.ps_id AND  b.inv_id=@cMemoId
		
		--select 'chk wps_mstafter',wsl_inv_id from wps_mst where ps_id='12011200000012-77'
		--print 'enter baddmode=0.1'

		SET @cStep=19
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1

		PRINT 'ADDMODE:N'
		EXEC SP3S_VERIFY_WSLDATA_MERGE_CHANGES
		@cMemoId=@cMemoId

	END
	
	IF @BADDMODE=0
	BEGIN

		SET @cStep=22
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1

		  IF @NENTRYMODE=3 AND ISNULL(@BIS_BIN_TRANSFER,0)<>1
		  BEGIN 					

		    EXEC SP3S_PROCESS_INV_QTY @CMEMOID,'',1,@CERRMSG  OUTPUT 
			 IF ISNULL(@CERRMSG,'')<>''
			  GOTO EXIT_PROC
				   
		 END	
							
		SELECT TOP 1 @cMissingRowId=a.row_id FROM ind01106 A (NOLOCK) 
		LEFT JOIN 
		(SELECT row_id FROM WSL_ind01106_MIRROR B (NOLOCK) WHERE inv_id=@cMEmoId) b
		 ON A.row_ID =B.row_ID WHERE A.inv_id =@CMEMOID AND b.row_id IS NULL

		IF ISNULL(@cMissingRowId,'')<>''
		BEGIN		
			SET @CSTEP=25
			EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1

			DELETE A FROM ind01106 A (NOLOCK) LEFT JOIN 
			(SELECT row_id FROM WSL_ind01106_MIRROR B (NOLOCK) WHERE inv_id=@cMEmoId) b
			ON A.row_ID =B.row_ID WHERE A.inv_id =@CMEMOID AND b.row_id IS NULL

		END

		SET @CSTEP=30
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1
		SELECT TOP 1 @cMissingRowId=a.row_id FROM PAYMODE_XN_DET A (NOLOCK) 
		LEFT JOIN 
		(SELECT row_id FROM WSL_PAYMODE_XN_DET_MIRROR B (NOLOCK) WHERE memo_id=@cMEmoId) b
		 ON A.row_ID =B.row_ID WHERE A.memo_id =@CMEMOID AND a.xn_type='WSL' AND b.row_id IS NULL


		  			
	
		IF ISNULL(@cMissingRowId,'')<>''
		BEGIN		
			SET @CSTEP=34
			EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1
			
			DELETE A FROM PAYMODE_XN_DET A (NOLOCK) LEFT JOIN 
			(SELECT row_id FROM WSL_PAYMODE_XN_DET_MIRROR B (NOLOCK) WHERE memo_id=@cMEmoId) b
			ON A.row_ID =B.row_ID WHERE A.memo_id =@CMEMOID AND a.xn_type='WSL' AND b.row_id IS NULL

	    END
	END

	---UPDATING TRANSACTION TABLES
	SET @CSTEP=38
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1

	SET @CTABLENAME='INM01106'
	SET @CTMP_TABLENAME='WSL_INM01106_MIRROR'
	SET @CKEYFIELD='INV_ID'

	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@@spid and Tablename='inm01106'
	SET @LUPDATEONLY = (CASE WHEN @BADDMODE=0 THEN 1 ELSE 0 END)	
	
	SET @cStep=42
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1

	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
							  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 
							  
	SET @CTABLENAME='IND01106'
	SET @CTMP_TABLENAME='WSL_IND01106_MIRROR'
	SET @CKEYFIELD='ROW_ID'

	SELECT @cMissingRowId='',@lUpdateonly=0
	IF @BADDMODE=0
	BEGIN
		SET @CSTEP=45
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1

		SELECT TOP 1 @cMissingRowId=b.row_id FROM 
		(SELECT row_id  FROM WSL_IND01106_MIRROR (NOLOCK) WHERE inv_id=(@cMemoId+LEFT(@cMemoId,2))) A
		RIGHT OUTER JOIN 
		(SELECT row_id FROM WSL_IND01106_MIRROR (NOLOCK) WHERE inv_id=@cMemoId) b ON 
		a.row_id=b.row_id WHERE a.row_id IS NULL

		--SELECT 'check @cMissingRowId of ind',@cMissingRowId

		IF ISNULL(@cMissingRowId,'')='' 
			SET @lUpdateonly=1
	END

	SET @CSTEP=48
    EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1
	
	--select 'check @lUpdateonly',@lUpdateonly as lUpdateonly

	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@@spid and  tablename='ind01106'	
		
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@lUpdateonly
							  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 

	
	  IF @NENTRYMODE=3 AND ISNULL(@BIS_BIN_TRANSFER,0)<>1
		BEGIN 					
              EXEC SP3S_PROCESS_INV_QTY @CMEMOID,'',1,@CERRMSG  OUTPUT 
		      IF ISNULL(@CERRMSG,'')<>''
			  GOTO EXIT_PROC
				   
		END	

	IF EXISTS (SELECT TOP 1 memo_id FROM WSL_PAYMODE_XN_DET_MIRROR (NOLOCK) WHERE memo_id=@cMemoId)
	BEGIN
		SET @cStep=51
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1

		SET @CTABLENAME='PAYMODE_XN_DET'
		SET @CTMP_TABLENAME='WSL_PAYMODE_XN_DET_MIRROR'
		SET @CKEYFIELD='MEMO_ID'

		SELECT @CFILTERCONDITION2=REPLACE(@CFILTERCONDITION,'INV_ID','MEMO_ID')+' AND B.XN_TYPE=''WSL'''
		   
		SELECT @cMissingRowId='',@lUpdateonly=0
		IF @BADDMODE=0
		BEGIN
			SET @CSTEP=55
			EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1

			SELECT TOP 1 @cMissingRowId=b.row_id FROM 
			(SELECT row_id  FROM WSL_PAYMODE_XN_DET_MIRROR (NOLOCK) WHERE memo_id=(@cMemoId+LEFT(@cMemoId,2))) A
			RIGHT OUTER JOIN 
			(SELECT row_id FROM WSL_PAYMODE_XN_DET_MIRROR (NOLOCK) WHERE memo_id=@cMemoId) b ON 
			a.row_id=b.row_id WHERE a.row_id IS NULL

			--SELECT 'check @cMissingRowId of pid',@cMissingRowId

			IF ISNULL(@cMissingRowId,'')='' 
				SET @lUpdateonly=1
		END

		SET @CSTEP=58
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1

		SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@@spid and tablename='PAYMODE_XN_DET'	

		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1='row_id',@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=@bAddmode,@CFILTERCONDITION=@CFILTERCONDITION2,@LUPDATEONLY=@lUpdateonly
								  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 	
	END						  
							  
	 --*********** PARCELS ENTRY **************************************

	DECLARE @bParcelAddmode BIT
	SET  @bParcelAddmode=1


	IF EXISTS (SELECT TOP 1 a.parcel_memo_id FROM parcel_mst a (NOLOCK) JOIN 
			WSL_PARCEL_MST_MIRROR b (NOLOCK) ON a.parcel_memo_id=b.parcel_memo_id
			WHERE wsl_memo_id=@cMemoId)
		SET  @bParcelAddmode=0

--  	select @NINVMODE,@BDonotInsCHALLAN,@dLastUpdate	,@dMIrrorLastUpdate			  											 					  

	IF @dLastUpdate=@dMIrrorLastUpdate AND @bParcelAddmode=0
		SET @BDonotInsCHALLAN=1

	IF EXISTS (SELECT TOP 1 wsl_memo_id FROM  WSL_PARCEL_MST_MIRROR B (NOLOCK) WHERE wsl_memo_id=@cMEmoId)
	BEGIN
	   	SET @cStep=62
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1


		SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@@spid and tablename='PARCEL_MST'
		SET @LUPDATEONLY = (CASE WHEN @bParcelAddmode=0 THEN 1 ELSE 0 END)		  	

		SET @CSTEP=1002
		SET @CTABLENAME='PARCEL_MST'
		SET @CTMP_TABLENAME='WSL_'+@CTABLENAME+'_MIRROR'
		SET @CKEYFIELD='PARCEL_MEMO_ID'
	
		SET @cStep=65
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1
		SELECT @CFILTERCONDITION2=REPLACE(@CFILTERCONDITION,'INV_ID','WSL_MEMO_ID')

		print 'inset parcel_mst'
		--select 'check parcel_mst', @CFILTERCONDITION,@CSOURCEDB,@CTMP_TABLENAME,@CMERGEDB,@CTABLENAME

		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@bParcelAddmode,@CFILTERCONDITION=@CFILTERCONDITION2,@LUPDATEONLY=@LUPDATEONLY
							  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 	
		
	
		
		IF @bParcelAddmode=0
		BEGIN
			SET @CSTEP=68
			EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1

			SELECT TOP 1 @cMissingRowId=a.row_id FROM PARCEL_DET A (NOLOCK) 
			LEFT JOIN 
			(SELECT row_id FROM WSL_PARCEL_DET_MIRROR B (NOLOCK) WHERE wsl_memo_id=@cMEmoId) b
				ON A.row_ID =B.row_ID 
			JOIN parcel_mst c (NOLOCK) ON c.parcel_memo_id=a.parcel_memo_id 
			WHERE A.REF_MEMO_ID =@CMEMOID AND c.xn_type='WSL' AND b.row_id IS NULL
						
			IF ISNULL(@cMissingRowId,'')<>''
			BEGIN		
				SET @CSTEP=71
				EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1

				DELETE A FROM PARCEL_DET A (NOLOCK) 
				LEFT JOIN 
				(SELECT row_id FROM WSL_PARCEL_DET_MIRROR B (NOLOCK) WHERE wsl_memo_id=@cMEmoId) b
					ON A.row_ID =B.row_ID 
				JOIN parcel_mst c (NOLOCK) ON c.parcel_memo_id=a.parcel_memo_id 
				WHERE A.REF_MEMO_ID =@CMEMOID AND c.xn_type='WSL' AND b.row_id IS NULL
			END
		END

	END

	SET @cStep=73
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1
	IF EXISTS (SELECT TOP 1 wsl_memo_id FROM  WSL_PARCEL_DET_MIRROR B (NOLOCK) WHERE wsl_memo_id=@cMEmoId)
	BEGIN
		SELECT @cMissingRowId='',@lUpdateonly=0
		IF @bParcelAddmode=0
		BEGIN
			SET @CSTEP=75
			EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1

			SELECT TOP 1 @cMissingRowId=b.row_id FROM 
			(SELECT row_id  FROM WSL_PARCEL_DET_MIRROR (NOLOCK) WHERE wsl_memo_id=(@cMemoId+LEFT(@cMemoId,2))) A
			RIGHT OUTER JOIN 
			(SELECT row_id FROM WSL_PARCEL_DET_MIRROR (NOLOCK) WHERE wsl_memo_id=@cMemoId) b ON 
			a.row_id=b.row_id WHERE a.row_id IS NULL

			--SELECT 'check @cMissingRowId of pid',@cMissingRowId

			IF ISNULL(@cMissingRowId,'')='' 
				SET @lUpdateonly=1
		END

		SET @CSTEP=78
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1				
		SET @CTABLENAME='PARCEL_DET'
		SET @CTMP_TABLENAME='WSL_'+@CTABLENAME+'_MIRROR'
		SET @CKEYFIELD='PARCEL_MEMO_ID'

		SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@@spid and tablename='PARCEL_DET'
		SELECT @CFILTERCONDITION2=REPLACE(@CFILTERCONDITION,'INV_ID','WSL_MEMO_ID')

		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								,@LINSERTONLY=@bParcelAddmode,@CFILTERCONDITION=@CFILTERCONDITION2,@LUPDATEONLY=@LUPDATEONLY
								,@BALWAYSUPDATE=1,@BUPDATEXNS=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 	
	END
				
  --******************************************************************	
    

	IF @NINVMODE=2 AND @BDonotInsCHALLAN=0
	BEGIN
		SET @CSTEP=90
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1		

		DECLARE @CDISPATCHDETAILS VARCHAR(1000),@DPURRECEIPTDT DATETIME
		
		SELECT @CDISPATCHDETAILS=PM.PARCEL_MEMO_ID  FROM INM01106 A  
        JOIN LOCATION L ON L.DEPT_ID=LEFT(A.INV_ID,2)          
		JOIN PARCEL_DET PB ON PB.REF_MEMO_ID=A.INV_ID    
	    JOIN PARCEL_MST PM ON PM.PARCEL_MEMO_ID=PB.PARCEL_MEMO_ID    
	    WHERE A.INV_ID= @CMEMOID AND  A.COMPLETED=1 AND A.APPROVED=(CASE WHEN L.STN_APPROVAL = 1 THEN 2 ELSE A.APPROVED END)     
        AND PM.XN_TYPE='WSL'
        		
		--select @CDISPATCHDETAILS,@BDONOTSENDCHALLANWITHOUTDISPATCH,@CPARTYDEPTID,@CCURDEPTID,@bServerLoc,
		--@CFILTERCONDITION as FILTERCONDITION

		IF ( ISNULL(@CDISPATCHDETAILS,'')='' AND ISNULL(@BDONOTSENDCHALLANWITHOUTDISPATCH,0)=1)
			GOTO LBLFINAL
		
		IF NOT (@CPARTYDEPTID=@CCURDEPTID OR @bServerLoc=1)
			GOTO LBLFINAL
		
		IF @bAddmode=0
		BEGIN
			DELETE FROM DOCWSL_IND01106_MIRROR WHERE inv_id=@CMEMOID
			DELETE FROM DOCWSL_INM01106_MIRROR WHERE inv_id=@CMEMOID
		END

		SET @CTABLENAME='DOCWSL_INM01106_MIRROR'
		SET @CTMP_TABLENAME='WSL_INM01106_MIRROR'
		SET @CKEYFIELD='INV_ID'

		SET @cStep=94
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1

		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='VERSION_NO',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1,@CSEARCHTABLE='INM01106',@BINSVERSIONNO=1
 


		SET @CTABLENAME='DOCWSL_IND01106_MIRROR'
		SET @CTMP_TABLENAME='WSL_IND01106_MIRROR'
		SET @CKEYFIELD='ROW_ID'
		 
		SET @cStep=98
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1
		
		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='VERSION_NO',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1,@CSEARCHTABLE='IND01106',@BINSVERSIONNO=1 
		
		
		GOTO LBLFINAL
			
	END
	
	--SELECT @NINVMODE, @CPARTYDEPTID,@CCURDEPTID,@BDONOTSENDCHALLANWITHOUTDISPATCH,@CMEMOID

LBLFINAL:

	SET @CSTEP=103
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1
	
	IF @nEntrymode=2
		UPDATE a SET wsl_inv_id=@cMemoId FROM wps_mst a WITH (ROWLOCK)
		JOIN WSL_IND01106_MIRROR b (NOLOCK) ON a.ps_id=b.ps_id
		JOIN WSL_INM01106_MIRROR c (NOLOCK) ON c.inv_id=b.inv_id
		WHERE c.inv_id=@cMemoId AND c.cancelled=0

	SET @CSTEP=105
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1

	EXEC SP3S_MERGE_LOCPMT  
	@cTempTable='WSL_PMT01106_MIRROR',  
	@cMemoIdCol='WSL_MEMO_ID',  
	@cMemoId =@CMEMOID
		
	set @CSTEP=110
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@CMEMOID,'',1
	
	EXEC SP3S_DELETE_WSL_MIRROR_TABLES @cMemoId

	--elect 'check pmodexn', * from PAYMODE_XN_DET where memo_id='0701120000007WS-000009'
	--select 'check DOCWSL_INM01106_MIRROR',*from DOCWSL_INM01106_MIRROR where inv_id='0701120000007JM-000034'

	--select 'chk wps_mst final',wsl_inv_id from wps_mst where ps_id='12011200000012-77'

	--SELECT 'CHK FINAL INM', CANCELLED,* FROM INM01106 WHERE INV_ID='120112012/19-20-000119'
	IF ISNULL(@CERRMSG,'')=''
		COMMIT
	ELSE
		GOTO EXIT_PROC

    GOTO LBLSTART

END TRY
BEGIN CATCH
	SET @CERRMSG='P:SP_SYNCH_MIRRORDATA_WSL_SINGLE,MEMO ID :'+@CMEMOID+' STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO EXIT_PROC
END CATCH

EXIT_PROC:

    
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRMSG,'')='' AND @BSERIESMISMATCHFOUND<>1
			COMMIT
		ELSE
			ROLLBACK
    END
END	
---END OF PROCEDURE - SP_SYNCH_MIRRORDATA_WSL_SINGLE

