create PROCEDURE SP_SEND_MIRROR_STREC_DATA_NEW
(
	 @CUPLOADEDXNID VARCHAR(50)
	,@CCURLOCID VARCHAR(5)
	,@BACKNOWLEDGE BIT=0
	,@CERRMSG VARCHAR(1000) OUTPUT
)
----WITH ENCRYPTION
AS
BEGIN
	DECLARE @DTSQL NVARCHAR(MAX),@NSPID INT,@CTEMPTABLE VARCHAR(500),@CTEMPSKUTABLE VARCHAR(500),
	@CMEMOID VARCHAR(50),@CTEMPARTICLETABLE VARCHAR(500),@CSTEP VARCHAR(5),
	@CTEMPEMPLOYEETABLE VARCHAR(200),@DMEMOLASTUPDATE DATETIME,@CTABLENAME VARCHAR(100),
	@BRECFOUND BIT,@CWHERECLAUSE VARCHAR(MAX),@CFILTERCONDITION VARCHAR(MAX),
	@CTEMPMASTERTABLE VARCHAR(200),@BGROUP_INVOICE BIT,@CTEMPDETAILTABLE VARCHAR(200),
	@CTEMPLMTABLE VARCHAR(200),@CTEMPLMPTABLE VARCHAR(200),@CTEMPAREATABLE VARCHAR(200),@CTEMPCITYTABLE VARCHAR(200),
	@CTEMPARTTABLE VARCHAR(200),@CTEMPSDTABLE VARCHAR(200),@CTEMPARTATTRTABLE VARCHAR(200),@CTEMPDETAILTABLE1 VARCHAR(200)
	
DECLARE @TXNSSENDINFO TABLE (ORG_TABLENAME VARCHAR(50),TMP_TABLENAME VARCHAR(50),XN_ID VARCHAR(40))  	
BEGIN TRY 
 SET @CSTEP=00
 
 DECLARE @CTEMPDBNAME VARCHAR(40)
	SET @CTEMPDBNAME=''
 
 SET @CSTEP=10 			
 SET @CFILTERCONDITION=''
	 
 SET @CSTEP=30
 
	--CHNAGE BY BAIJNATH
	SET @CMEMOID=@CUPLOADEDXNID
	
	---- IF NO MEMO FOUND , JUST END THE PROCESS
	IF ISNULL(@CMEMOID,'')=''
		GOTO END_PROC

	
	/*STK_RECON_HIST_MST,STK_RECON_HIST_DET*/	
	SET @CSTEP=110
	---- SEND THE RECONCILLATION MEMO MASTER TABLE
	SELECT A.*,'STREC_STMH01106_UPLOAD' AS TARGET_TABLENAME FROM stmh01106 A (NOLOCK) WHERE memo_id =@CMEMOID 

	SELECT A.*,'STREC_stockReconDetails_UPLOAD' AS TARGET_TABLENAME FROM stockReconDetails A (NOLOCK) WHERE Memo_Id  =@CMEMOID 

	
	GOTO END_PROC
	
END TRY
BEGIN CATCH
	SET @CERRMSG='P: SP_SEND_MIRROR_STREC_DATA_NEW, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO END_PROC
END CATCH 
		
END_PROC:


	
END	
---END OF PROCEDURE - SP_SEND_MIRROR_STREC_DATA_NEW
