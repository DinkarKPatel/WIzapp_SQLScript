create  PROCEDURE POSTACT_PRT   
(  
 @DTTO    DATETIME,  
 @CDEPTID CHAR(4)='',  
 @CACCODE CHAR(10)='',
 @DGSTCUTOFFDATE  DATETIME=''
)  
AS  
BEGIN  
   
   
   DECLARE @CSTEP VARCHAR(10),@BPOSTDISCOUNTSEPARATELY BIT,@CDISCACCODE VARCHAR(10),@BPOSTFREIGHTSEPARATELY BIT,@CFREIGHTACCODE VARCHAR(10),  
   @BPOSTOTHERCHARGESSEPARATELY BIT,@COTHERCHARGESACCODE VARCHAR(10),@BPOSTROUNDOFFSEPARATELY BIT,@CROUNDOFFACCODE VARCHAR(10),@NCTR NUMERIC(10,0),  
   @NSUBTOTAL NUMERIC(14,4),@NTAXAMOUNT NUMERIC(14,4), @CPURACCODE VARCHAR(50),@CTAXACCODE VARCHAR(100),  
   @LPOSTTAXSEPARATELY NUMERIC(14,4),@CRMID VARCHAR(50),@CRMNO VARCHAR(50),@LOUTSTATIONPARTY BIT,@TMPDR NUMERIC(14,4),  
   @TMPCR NUMERIC(14,4),@CCURSTATECODE VARCHAR(10),@CVMID VARCHAR(40),@CLOCATIONID CHAR(2),  
   @CLASTBILLNO VARCHAR(40),@DTMPVENDORBILLDT DATETIME,@CRMLIST VARCHAR(300),@NTMPCREDITDAYS NUMERIC(10),  
   @NTMPCRDISCOUNTPERCENTAGE NUMERIC(14,4),@DLASTINVDT DATETIME,@CVOUCHERCODE VARCHAR(10),  
   @COLDBILLTYPE VARCHAR(10),@CLASTACCODE VARCHAR(10),@CLASTPARTYNAME VARCHAR(100),@NTOTQUANTITY NUMERIC(14,4),  
   @NTOTNETAMOUNT NUMERIC(14,4),@CDEPTNAME VARCHAR(100),@CVOUCHERNO VARCHAR(10),@CPOSTBILLBYBILLREFTYPE VARCHAR(2),  
   @CSETOFFACCODE VARCHAR(10),@NDRNET NUMERIC(18,4),@NCRNET NUMERIC(18,4),@CEOSSDISCSHARINGAC CHAR(10),  
   @CCASHDISCOUNTAC VARCHAR(10),@DN_TYPE INT,@NVDCNT INT,@BLOOP BIT,@NCTRBB INT,@CBILLTYPE VARCHAR(10),@CSEARCHREFBILLTYPE VARCHAR(10),  
   @NENTRYID INT,@CRETREFBILLNO VARCHAR(100),@NLOOPCNTR INT,@DREFBILLDATE DATETIME,@CREFBILLNO VARCHAR(200),@BGSTBILL BIT ,
   @DRMDT DATETIME,@CLOCGSTSTATECODE VARCHAR(5),@CPARTYGSTSTATECODE VARCHAR(5),@CADJDIFFACCODE CHAR(10),@NFDNCD NUMERIC(10,2),
   @COLDRMID VARCHAR(40),@BNEWENTRY BIT,@NPURAMOUNT NUMERIC(10,2),@CREFMRRID VARCHAR(40),@CCREDITORHEADS VARCHAR(1000),
   @BMANUALROFF BIT,@NROLIMIT NUMERIC(7,3),@NEXCEPTIONTYPE NUMERIC(1,0)  
  
   SET @CSTEP=10  
   
   
   SET  @CCREDITORHEADS=DBO.FN_ACT_TRAVTREE('0000000021')
   
      
 DECLARE @CPARTYACCODE VARCHAR(10),@CPARTYSTATECODE VARCHAR(10),@NNETAMOUNT NUMERIC(14,4),  
   @NDISCAMOUNT NUMERIC(14,4),@NFREIGHT NUMERIC(14,4), @NOTHER NUMERIC(14,4),@NROUNDOFF NUMERIC(14,4),  
   @NDRTOTAL NUMERIC(14,4),@NCRTOTAL NUMERIC(14,4),@DCUTOFFDATE VARCHAR(20),@CXNTYPE VARCHAR(10)  
   ,@CVDID VARCHAR(40),@CPURBILLS VARCHAR(MAX)
   ,@BBILLBYBILL BIT,@CFINPRTAC VARCHAR(10),@CQTYNARRATION VARCHAR(200)  
   ,@BPOSTEXCISESEPARATELY BIT,@CEXCISEACCODE VARCHAR(10)  
        
   SET @CFREIGHTACCODE=''  
   SET @COTHERCHARGESACCODE=''  
   SET @CROUNDOFFACCODE=''  
      
   SET @CSTEP=20  
   
    --THIS TABLE VARIABLE STORE ERROR OF MEMO ID  
    DECLARE @ERRORS TABLE  
 (  
  XN_ID  VARCHAR(40),XN_TYPE VARCHAR(40),XN_NO VARCHAR(40),  
  XN_DT  DATETIME,XN_AMT NUMERIC(14,4),XN_AC VARCHAR(100),  
  ERR_DESC VARCHAR(500)  
 )     
      
    SET @CSTEP=30  
    DECLARE @VCHC TABLE   
 (  
  AC_CODE CHAR(10),NARRATION VARCHAR(200),XN_NO VARCHAR(40),  
  XN_DT DATETIME,DEPT_ID CHAR(4),AMOUNT NUMERIC(14,4),XN_ID VARCHAR(50),  
  REF_BILL_NO VARCHAR(50),REF_BILL_DATE DATETIME, ENTRY_ID INT,CRDAYS NUMERIC(5)  
 )  
   
 SET @CSTEP=40  
 DECLARE @VDC TABLE   
 (  
  VD_ID VARCHAR(50),    VM_ID VARCHAR(40),    AC_CODE CHAR(10),   
  NARRATION VARCHAR(MAX),   DEBIT_AMOUNT NUMERIC(14,4),  CREDIT_AMOUNT NUMERIC(14,4),  
  X_TYPE CHAR(2),     VS_AC_CODE CHAR(10),REF_BILL_NO VARCHAR(40),   
  CREDIT_DAYS NUMERIC(10),  CR_DISCOUNT_PERCENTAGE NUMERIC(14,4),    
  VAT_ENTRY BIT,REF_BILL_DATE DATETIME, AC_NAME VARCHAR(100),ADJ_REMARKS VARCHAR(200),REF_MRR_ID VARCHAR(40)
 )  
   
 SET @CSTEP=50  
 DECLARE @VMC TABLE  
 (  
  VM_ID VARCHAR(50),    VOUCHER_NO VARCHAR(400),   VOUCHER_DT DATETIME,   
  VOUCHER_CODE CHAR(100),   DEPT_ID CHAR(20),    BILL_TYPE VARCHAR(300),  
  BILL_NO VARCHAR(200),    BILL_ID VARCHAR(220),    BILL_DT DATETIME,   
  BILL_AC_CODE VARCHAR(100),  DRTOTAL NUMERIC(20,4),   CRTOTAL NUMERIC(20,4),   
  CASH_VOUCHER BIT,     SALE_VOUCHER BIT,     QUANTITY NUMERIC(20,2),   
  ANGADIA_CODE CHAR(70),    LR_NO VARCHAR(500),    LR_DT DATETIME,  
  PARTY_NAME VARCHAR(1000),  NET_AMOUNT NUMERIC(20,2),   BILL_STATUS VARCHAR(1000),  
  RM_LIST VARCHAR(MAX),   CANCELLED BIT,     DEPT_NAME VARCHAR(100),  
  VOUCHER_TYPE VARCHAR(100)   
 )  
   
 SET @CSTEP=60  
 DECLARE @VLINK TABLE  
 (  
  VM_ID VARCHAR(100),MEMO_ID VARCHAR(100),XN_TYPE VARCHAR(20),LAST_UPDATE DATETIME  
 )  
   
 DECLARE @TBILL_BY_BILL_REF TABLE(VM_ID VARCHAR(50),VD_ID VARCHAR(40),REF_NO VARCHAR(40),AMOUNT NUMERIC(18,4),LAST_UPDATE DATETIME,  
          X_TYPE VARCHAR(20),CR_DAYS NUMERIC(5),ADJ_REMARKS VARCHAR(500) )  
   
 SELECT TOP 1 @DCUTOFFDATE=CUTOFFDATE FROM PRTCONFIGMST  
   
 SET @DCUTOFFDATE=ISNULL(@DCUTOFFDATE,'')  
   
 SET @CSTEP=70  
 SET @CVOUCHERCODE = '0000000005'  
    BEGIN TRY  
     
   SET @CSTEP=80  
   IF OBJECT_ID('TEMPDB..#PRTTABLE','U') IS NOT NULL  
    DROP TABLE #PRTTABLE   
     
   SET @CSTEP=90  
   --THIS TABLE STORE ALL PENDING MEMO_ID   
   CREATE TABLE #PRTTABLE (MEMO_ID VARCHAR(40),MODE VARCHAR(10))  
     
   SET @CSTEP=92  
   IF OBJECT_ID('#APPROVALLOCATION','U') IS NOT NULL  
    DROP TABLE #APPROVALLOCATION  
     
   --GETTING LIST OF LOCATIONS ON WHICH APPROVAL PROCESS IS ENABLED  
   SELECT DISTINCT DEPT_ID   
   INTO #APPROVALLOCATION  
   FROM LOC_XNSAPPROVAL  
   WHERE XN_TYPE='PRT'  
     
   DECLARE @IMAXLEVEL INT  
     
   --GETTING THE MAX LEVEL OF APPROVAL FOR PURCHASE TRANSACTION  
   SELECT @IMAXLEVEL=MAX(LEVEL_NO) FROM XN_APPROVAL_CHECKLIST_LEVELS WHERE XN_TYPE='PRT' AND INACTIVE=0  
   
   IF EXISTS(SELECT TOP 1 'U' FROM XN_APPROVAL_CHECKLIST_LEVELS  WHERE XN_TYPE='PRT' AND INACTIVE=0 AND ISNULL(AC_POSTING,0)<>0)
	BEGIN
	    SELECT @IMAXLEVEL=LEVEL_NO
		FROM XN_APPROVAL_CHECKLIST_LEVELS 
		WHERE XN_TYPE='PRT' AND INACTIVE=0 AND ISNULL(AC_POSTING,0)<>0
	END
	
	  
   SET @IMAXLEVEL=ISNULL(@IMAXLEVEL,0)  
     
   SET @CSTEP=100  
   --GETTING LIST OF PURCHASE RETURNS THAT QUALIFY FOR VOUCHER POSTING  
   INSERT INTO #PRTTABLE (MEMO_ID,MODE)  
         SELECT A.RM_ID,'PRT' AS MODE   
         FROM RMM01106 A  
         JOIN #APPROVALLOCATION AL ON a.location_Code =AL.DEPT_ID  
         JOIN LOCATION SL ON a.location_Code =SL.DEPT_ID  
         LEFT JOIN LOCATION TL ON A.PARTY_DEPT_ID=TL.DEPT_ID  
         LEFT OUTER JOIN   
         (  
			SELECT B.MEMO_ID,B.LAST_UPDATE  
			FROM POSTACT_VOUCHER_LINK B   
			JOIN VM01106 C ON C.VM_ID = B.VM_ID   
			WHERE C.CANCELLED=0 AND B.XN_TYPE = 'PRT'   
		 )VM  ON A.RM_ID = VM.MEMO_ID    
         WHERE  
         -- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES
         (ISNULL(SL.LOC_TYPE,0)=1 OR ISNULL(SL.ACCOUNT_POSTING_AT_HO,0)=1) AND 
         A.APPROVEDLEVELNO>=@IMAXLEVEL AND A.MEMO_TYPE=1  
         /*PURCHASE RETURN IS NOT CANCELLED.*/  
         AND ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)    
         /*PURCHASE RETURN INV_DT IS LESS THAN THE SPECIFIED DATE.*/  
         AND A.RM_DT<=@DTTO   
	     AND (A.MODE<>2 OR (A.RM_DT>=@DGSTCUTOFFDATE AND SL.LOC_GST_NO<>TL.LOC_GST_NO))         
         /*IF CUTOFF DATE IS SPECIFIED, CONSIDER PURCHASE RETURN AFTER THE CUTOFF DATE*/  
         AND (ISNULL(@DCUTOFFDATE,'')='' OR A.RM_DT>@DCUTOFFDATE)  
         /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO THAT ELSE APPLY IT TO RM_NO FOR LOCATION.*/  
         AND (ISNULL(@CDEPTID,'')='' OR   
		(CASE WHEN ISNULL(A.ACCOUNTS_DEPT_ID,'')='' THEN a.location_Code  ELSE A.ACCOUNTS_DEPT_ID END)=@CDEPTID)  
         /*PURCHASE RETURN IS NOT GROUP/BRANCH PURCHASE RETURN*/  
         AND (ISNULL(A.PARTY_DEPT_ID,'')='' OR A.XFER_TYPE=1)     
         /*PURCHASE RETURN IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/  
         AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE)   
         AND (@CACCODE='' OR A.AC_CODE=@CACCODE)  
         
         UNION ALL  
         SELECT A.RM_ID,'PRT' AS MODE   
         FROM RMM01106 A  
         LEFT JOIN #APPROVALLOCATION AL ON a.location_Code =AL.DEPT_ID  
         JOIN LOCATION SL ON a.location_Code =SL.DEPT_ID  
        LEFT JOIN LOCATION TL ON A.PARTY_DEPT_ID=TL.DEPT_ID  
         LEFT OUTER JOIN   
         (  
			SELECT B.MEMO_ID,B.LAST_UPDATE  
			FROM POSTACT_VOUCHER_LINK B   
			JOIN VM01106 C ON C.VM_ID = B.VM_ID   
			WHERE C.CANCELLED=0 AND B.XN_TYPE = 'PRT'   
         )VM  ON A.RM_ID = VM.MEMO_ID    
         WHERE  A.MEMO_TYPE=1   
       -- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES
         AND (ISNULL(SL.LOC_TYPE,0)=1 OR ISNULL(SL.ACCOUNT_POSTING_AT_HO,0)=1)  
         /*PURCHASE RETURN IS NOT CANCELLED.*/  
         AND ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)     
         AND AL.DEPT_ID IS NULL   
         /*PURCHASE RETURN INV_DT IS LESS THAN THE SPECIFIED DATE.*/  
         AND A.RM_DT<=@DTTO   
	     AND (A.MODE<>2 OR (A.RM_DT>=@DGSTCUTOFFDATE AND SL.LOC_GST_NO<>TL.LOC_GST_NO))         
         /*IF CUTOFF DATE IS SPECIFIED, CONSIDER PURCHASE RETURN AFTER THE CUTOFF DATE*/  
         AND (ISNULL(@DCUTOFFDATE,'')='' OR A.RM_DT>@DCUTOFFDATE)  
         /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO THAT ELSE APPLY IT TO RM_NO FOR LOCATION.*/  
         AND (ISNULL(@CDEPTID,'')='' OR   
    (CASE WHEN ISNULL(A.ACCOUNTS_DEPT_ID,'')='' THEN a.location_Code  ELSE A.ACCOUNTS_DEPT_ID END)=@CDEPTID)  
         /*PURCHASE RETURN IS NOT GROUP/BRANCH PURCHASE RETURN*/  
         AND (ISNULL(A.PARTY_DEPT_ID,'')='' OR A.XFER_TYPE=1)     
         /*PURCHASE RETURN IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/  
         AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE)   
         AND (@CACCODE='' OR A.AC_CODE=@CACCODE)  
     
   UNION ALL  
         SELECT A.MEMO_ID,'EOSSPRT' AS MODE   
         FROM EOSSDNM A  
         JOIN LOCATION SL ON a.location_code  =SL.DEPT_ID  
         LEFT OUTER JOIN   
         (  
    SELECT B.MEMO_ID,B.LAST_UPDATE  
    FROM POSTACT_VOUCHER_LINK B   
    JOIN VM01106 C ON C.VM_ID = B.VM_ID   
    WHERE C.CANCELLED=0 AND B.XN_TYPE = 'EOSSPRT'   
         )VM  ON A.MEMO_ID = VM.MEMO_ID    
         WHERE  
          -- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES
          (ISNULL(SL.LOC_TYPE,0)=1 OR ISNULL(SL.ACCOUNT_POSTING_AT_HO,0)=1)  AND
         /*PURCHASE RETURN IS NOT CANCELLED.*/  
         ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)     
         /*PURCHASE RETURN INV_DT IS LESS THAN THE SPECIFIED DATE.*/  
         AND A.MEMO_DT<=@DTTO   
         /*IF CUTOFF DATE IS SPECIFIED, CONSIDER PURCHASE RETURN AFTER THE CUTOFF DATE*/  
         AND (ISNULL(@DCUTOFFDATE,'')='' OR A.MEMO_DT>@DCUTOFFDATE)  
         /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO THAT ELSE APPLY IT TO RM_NO FOR LOCATION.*/  
         AND (ISNULL(@CDEPTID,'')='' OR a.location_code =@CDEPTID)  
         /*PURCHASE RETURN IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/  
         AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE)   
         AND (@CACCODE='' OR A.AC_CODE=@CACCODE)  
  
	
	--SELECT 'POSTING DNS',* FROM #PRTTABLE
	              
         SET @CSTEP=109  
         SELECT @CFINPRTAC=FINPRTAC,@CEOSSDISCSHARINGAC=EOSSSHARINGACCODE FROM PRTCONFIGMST  
           
         SET @CSTEP=110  
         SELECT @BPOSTDISCOUNTSEPARATELY = POSTVATDISCSPRTLY FROM PRTCONFIGMST  
     
   SET @CSTEP=120  
   --IF NO ENTRY EXISTS IN CONFIG, CONSIDER 0  
   SET @BPOSTDISCOUNTSEPARATELY=ISNULL(@BPOSTDISCOUNTSEPARATELY,0)  
     
   SET @CSTEP=130  
   IF @BPOSTDISCOUNTSEPARATELY=1  
   BEGIN  
    SELECT @CDISCACCODE = POSTVATDISCAC FROM PRTCONFIGMST  
      
    SET @CDISCACCODE=ISNULL(@CDISCACCODE,'')  
    /*  
    IF DISCOUNT HAS TO BE POSTED SEPARATELY AND DISCOUNT ACCOUNT IS NOT DEFINED,   
    SEND ERROR MESSAGE TO USER  
    */  
    SET @CSTEP=140  
    IF @CDISCACCODE = '' OR @CDISCACCODE = '0000000000'  
    BEGIN  
     INSERT @ERRORS (XN_TYPE, ERR_DESC )   
     VALUES ( 'PRT', 'DISCOUNT ACCOUNT NOT SPECIFIED')  
 END  
   END  
     
         SET @CSTEP=150  
         --IF FREIGHT CONSIDERED AS PART OF STOCK THEN CLUB IT IN PURCHASE RETURN A/C OTHERWISE POST SEPARATELY  
   SELECT @BPOSTFREIGHTSEPARATELY = POSTFREIGHTSPRTLY FROM PRTCONFIGMST  
     
   SET @CSTEP=160  
   SET @BPOSTFREIGHTSEPARATELY=ISNULL(@BPOSTFREIGHTSEPARATELY,0)  
     
   SET @CSTEP=170  
   --GET THE ACCOUNT FOR FREIGHT AMOUNT POSTING  
   SELECT @CFREIGHTACCODE = FREIGHTAC FROM PRTCONFIGMST   
        
      SET @CFREIGHTACCODE=ISNULL(@CFREIGHTACCODE,'')  
        
      SELECT @BPOSTEXCISESEPARATELY=POSTEXCISESPRTLY FROM PRTCONFIGMST  
      SELECT @CEXCISEACCODE=EXCISEAC FROM PRTCONFIGMST  
        
      SET @BPOSTEXCISESEPARATELY=ISNULL(@BPOSTEXCISESEPARATELY,0)  
      SET @CEXCISEACCODE=ISNULL(@CEXCISEACCODE,'')  
        
      SET @CSTEP=175  
   --GET THE CASH DISCOUNT ACCOUNT FOR DISCOUNT AMOUNT POSTING AS PER LEDGER TERMS  
   SELECT @CCASHDISCOUNTAC = CASHDISCAC FROM PRTCONFIGMST  
        
      SET @CCASHDISCOUNTAC=ISNULL(@CCASHDISCOUNTAC,'')  
        
      SET @CSTEP=180  
      --IF OTHER CHARGES CONSIDERED AS PART OF STOCK THEN CLUB IT IN PURCHASE RETURN A/C OTHERWISE POST SEPARATELY  
   SELECT @BPOSTOTHERCHARGESSEPARATELY = POSTOCSPRTLY FROM PRTCONFIGMST  
  
   SET @CSTEP=190  
   SET @BPOSTOTHERCHARGESSEPARATELY=ISNULL(@BPOSTOTHERCHARGESSEPARATELY,0)  
  
   SET @CSTEP=200  
   SELECT @COTHERCHARGESACCODE = OCAC FROM PRTCONFIGMST   
       
   SET @COTHERCHARGESACCODE=ISNULL(@COTHERCHARGESACCODE,'')  
       
   SET @CSTEP = 210  
   --IF OTHER CHARGES CONSIDERED AS PART OF STOCK THEN CLUB IT IN PURCHASE RETURN A/C OTHERWISE POST SEPARATELY  
   SELECT @BPOSTROUNDOFFSEPARATELY = POSTROFFSPRTLY FROM PRTCONFIGMST  
  
   SET @CSTEP = 220  
   SET @BPOSTROUNDOFFSEPARATELY=ISNULL(@BPOSTROUNDOFFSEPARATELY,0)  
     
   SET @CSTEP = 230  
   SELECT @CROUNDOFFACCODE = ROFFAC FROM PRTCONFIGMST  
     
   SET @CROUNDOFFACCODE=ISNULL(@CROUNDOFFACCODE,'')  
    
   CREATE INDEX IX_TEMP_PRTTABLE_RM_ID ON #PRTTABLE(MEMO_ID)  
    
   SELECT @CPOSTBILLBYBILLREFTYPE=ISNULL(POST_BILL_BY_BILL_REFTYPE,1),
   @NEXCEPTIONTYPE=ISNULL(POST_BILL_BY_BILL_ADJ_EXCEPTION_TYPE,0)
   FROM PRTCONFIGMST  
     
   SET @CSTEP=240  

   DECLARE @BGPCCONFIGFOUND BIT			
   SET @BGPCCONFIGFOUND=0
   IF EXISTS (SELECT TOP 1 XN_TYPE FROM GST_POSTING_CONFIG WHERE XN_TYPE='PRT')
		SET @BGPCCONFIGFOUND=1
   
   ---GETTING LIST OF ALL ERROR FROM PURCHASE RETURN AND CONVERT MRN TO BILL  
   INSERT INTO @ERRORS(XN_ID,XN_NO ,XN_TYPE,XN_DT,ERR_DESC)  
   --GETTING ERROR LIST FROM PURCHASE RETURN BILLS  
   SELECT DISTINCT RMM.RM_ID,RMM.RM_NO,'PRT' AS XN_TYPE,RM_DT  
      ,(CASE   
	    WHEN RMD.ITEM_FORM_ID='0000000' AND RMM.RM_DT<@DGSTCUTOFFDATE
				THEN 'FORM NOT SPECIFIED'
		 WHEN ISNULL(RMD.HSN_CODE,'') IN ('','0000000000') AND RMM.RM_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND @DGSTCUTOFFDATE<>''
				AND (ISNULL(RMD.IGST_AMOUNT,0)+ISNULL(RMD.IGST_AMOUNT,0)+ISNULL(RMD.IGST_AMOUNT,0))<>0
				THEN 'HSN CODE NOT ATTACHED'								
		 WHEN (ISNULL(PAC.PURAC,'') = '' OR ISNULL(PAC.PURAC,'') = '0000000000')  AND RMM.RM_DT<@DGSTCUTOFFDATE
				THEN 'PURCHASE A/C NOT SPECIFIED'
		 WHEN (FM.POST_TAX_SEPARATELY=1 AND RMD.ITEM_TAX_PERCENTAGE<>0 AND (ISNULL(PAC.TAXAC,'')='' 
				OR PAC.TAXAC='0000000000')) AND RMM.RM_DT<@DGSTCUTOFFDATE
				THEN 'TAX A/C NOT SPECIFIED'

		 WHEN RMM.RM_DT>=@DGSTCUTOFFDATE  AND GPC.XN_TYPE IS NULL AND @BGPCCONFIGFOUND=1
				THEN 'GST A/C CONFIGURATION NOT FOUND FOR RELATED GST PERCENTAGE'								
		 WHEN RMM.RM_DT>=@DGSTCUTOFFDATE  AND @BGPCCONFIGFOUND=0
				THEN 'GST A/C CONFIGURATION NOT SETUP FOR PURCHASE RETURN'								
		 
		 WHEN (ISNULL(GPC.IGST_XN_AC_CODE,'') = '' OR ISNULL(GPC.IGST_XN_AC_CODE,'') = '0000000000')
				AND RMM.RM_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND @DGSTCUTOFFDATE<>'' AND IGST_AMOUNT<>0 THEN 'IGST DN A/C NOT SPECIFIED'
		 WHEN (ISNULL(GPC.LOCAL_GST_XN_AC_CODE,'') = '' OR ISNULL(GPC.LOCAL_GST_XN_AC_CODE,'') = '0000000000')
				AND RMM.RM_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND @DGSTCUTOFFDATE<>'' AND (CGST_AMOUNT+SGST_AMOUNT)<>0 THEN 'LOCAL DN A/C NOT SPECIFIED'
		 WHEN (ISNULL(GPC.IGST_TAX_AC_CODE,'') = '' OR ISNULL(GPC.IGST_TAX_AC_CODE,'') = '0000000000')
				AND RMM.RM_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND IGST_AMOUNT<>0 THEN 'IGST TAX A/C NOT SPECIFIED'
		 WHEN (ISNULL(GPC.CGST_TAX_AC_CODE,'') = '' OR ISNULL(GPC.CGST_TAX_AC_CODE,'') = '0000000000')
				AND RMM.RM_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND CGST_AMOUNT<>0 THEN 'CGST TAX A/C NOT SPECIFIED'
		 WHEN (ISNULL(GPC.SGST_TAX_AC_CODE,'') = '' OR ISNULL(GPC.SGST_TAX_AC_CODE,'') = '0000000000')
				AND RMM.RM_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND SGST_AMOUNT<>0 THEN 'SGST TAX NOT SPECIFIED'																								
				
		 WHEN (FM.POST_TAX_SEPARATELY=1 AND RMD.ITEM_TAX_PERCENTAGE<>0 AND (ISNULL(PAC.TAXAC,'')='' 
				OR PAC.TAXAC='0000000000')) AND RMM.RM_DT<@DGSTCUTOFFDATE
				THEN 'TAX A/C NOT SPECIFIED'
       WHEN (RMM.FREIGHT<>0 AND @BPOSTFREIGHTSEPARATELY=1  AND (@CFREIGHTACCODE = '' OR @CFREIGHTACCODE = '0000000000'))  
       THEN 'FREIGHT A/C NOT SPECIFIED'  
       WHEN (RMM.EXCISE_DUTY_AMOUNT<>0 AND @BPOSTEXCISESEPARATELY=1 AND (@CEXCISEACCODE = '' OR @CEXCISEACCODE = '0000000000'))  
       THEN 'EXCISE DUTY A/C NOT SPECIFIED'    
       WHEN (RMM.OTHER_CHARGES<>0 AND @BPOSTOTHERCHARGESSEPARATELY=1 
			 AND (@COTHERCHARGESACCODE='' OR @COTHERCHARGESACCODE='0000000000'))  
        THEN 'OTHER CHARGES A/C NOT SPECIFIED'   
       WHEN (RMM.ROUND_OFF<>0 AND (@BPOSTROUNDOFFSEPARATELY=1  OR (RMM.RM_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'')) AND (@CROUNDOFFACCODE = '' OR @CROUNDOFFACCODE = '0000000000'))  
        THEN 'ROUND OFF A/C NOT SPECIFIED'    
       WHEN (RMM.TOTAL_AMOUNT=0)           
        THEN 'ZERO VALUE PURCHASE RETURN'  
       ELSE 'UNIDENTIFIED ERROR' END) AS ERR_DESC    
   FROM RMM01106 RMM  
   JOIN RMD01106 RMD ON RMM.RM_ID=RMD.RM_ID  
   JOIN LOCATION SL ON SL.DEPT_ID =rmm.location_Code 
   JOIN #PRTTABLE TPT ON RMM.RM_ID=TPT.MEMO_ID AND TPT.MODE='PRT'  
   LEFT OUTER JOIN PRTCONFIGDET PAC ON RMD.ITEM_FORM_ID=PAC.FORMID  
   LEFT OUTER JOIN GST_POSTING_CONFIG GPC ON GPC.GST_PERCENTAGE=ISNULL(RMD.GST_PERCENTAGE,0) AND GPC.XN_TYPE='PRT'
   LEFT JOIN FORM FM ON FM.FORM_ID=RMD.ITEM_FORM_ID  
   WHERE   
    -- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES
    (ISNULL(SL.LOC_TYPE,0)=1 OR ISNULL(SL.ACCOUNT_POSTING_AT_HO,0)=1)  AND
   --GENERATE ERROR IF ITEM WITH INVALID FORM SELECTION IS FOUND.  
	((RMD.ITEM_FORM_ID='0000000' AND RMM.RM_DT<@DGSTCUTOFFDATE)
	OR (RMM.RM_DT>=@DGSTCUTOFFDATE  AND GPC.XN_TYPE IS NULL)	
	OR (ISNULL(RMD.HSN_CODE,'') IN ('','0000000000') AND RMM.RM_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>''
	    AND (ISNULL(RMD.IGST_AMOUNT,0)+ISNULL(RMD.IGST_AMOUNT,0)+ISNULL(RMD.IGST_AMOUNT,0))<>0)
	--GENERATE ERROR IF PURCHASE ACCOUNT IS NOT SPECIFIED.
	OR ((ISNULL(PAC.PURAC,'') = '' OR ISNULL(PAC.PURAC,'') = '0000000000') AND RMM.RM_DT<@DGSTCUTOFFDATE) 
	--GENERATE ERROR IF TAX IS TO BE POSTED SEPARATELY AND NO TAX ACCOUNT IS SPECIFIED.
	OR (FM.POST_TAX_SEPARATELY=1 AND RMD.ITEM_TAX_PERCENTAGE<>0 AND (ISNULL(PAC.TAXAC,'')='' 
		OR PAC.TAXAC='0000000000')  AND RMM.RM_DT<@DGSTCUTOFFDATE) 
   --GENERATE ERROR IF PURCHASE RETURN ACCOUNT IS NOT SPECIFIED.  
   OR (RMM.FREIGHT<>0 AND @BPOSTFREIGHTSEPARATELY=1 
		AND (@CFREIGHTACCODE = '' OR @CFREIGHTACCODE = '0000000000'))  
   OR (RMM.EXCISE_DUTY_AMOUNT<>0 AND @BPOSTEXCISESEPARATELY=1 AND (@CEXCISEACCODE = '' OR @CEXCISEACCODE = '0000000000'))  
   --GENERATE ERROR IF OTHER CHARGES SHOULD BE SEPARATELY POSTED AND OTHER CHARGES ACCOUNT IS NOT SPECIFIED.  
   OR (RMM.OTHER_CHARGES<>0 AND @BPOSTOTHERCHARGESSEPARATELY=1 
	   AND (@COTHERCHARGESACCODE='' OR @COTHERCHARGESACCODE='0000000000'))  
   --GENERATE ERROR IF ROUNDOFF SHOULD BE SEPARATELY POSTED AND ROUNDOFF ACCOUNT IS NOT SPECIFIED.  
   OR (RMM.ROUND_OFF<>0 AND (@BPOSTROUNDOFFSEPARATELY=1 OR (RMM.RM_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'')) AND (@CROUNDOFFACCODE = '' OR @CROUNDOFFACCODE = '0000000000'))  
   --GENERATE ERROR IF PURCHASE RETURN IS NOT CANCELLED AND IT HAS TOTAL AMOUNT=0  
   OR RMM.TOTAL_AMOUNT=0 )  
         UNION ALL  
         SELECT DISTINCT PIM.RM_ID,PIM.RM_NO,'PRT' AS XN_TYPE ,RM_DT 
      ,'CASH DISCOUNT AC NOT SPECIFIED.'  AS ERR_DESC    
   FROM RMM01106 PIM  
   JOIN #PRTTABLE TPT ON PIM.RM_ID=TPT.MEMO_ID AND TPT.MODE='PRT'  
   JOIN RMD01106 PD ON PIM.RM_ID=PD.RM_ID  
   LEFT OUTER JOIN GST_POSTING_CONFIG GPC ON GPC.GST_PERCENTAGE=ISNULL(PD.GST_PERCENTAGE,0) AND XN_TYPE='PRT'
   WHERE   
   ISNULL(PD.CASHDISCOUNTAMOUNT,0)<>0 AND (@CCASHDISCOUNTAC = '' OR @CCASHDISCOUNTAC = '0000000000')  
           
         UNION ALL  
         SELECT DISTINCT A.MEMO_ID,A.MEMO_NO,'EOSSPRT' AS XN_TYPE ,MEMO_DT 
      ,'EOSS DISCOUNT SHARING AC NOT SPECIFIED.'  AS ERR_DESC    
   FROM EOSSDNM A  
   JOIN #PRTTABLE TPT ON A.MEMO_ID=TPT.MEMO_ID AND TPT.MODE='EOSSPRT'  
   WHERE (@CEOSSDISCSHARINGAC = '' OR @CEOSSDISCSHARINGAC = '0000000000')  
             
         SET @CSTEP = 250  
         --DELETE RM_ID FROM TEPM TABLE WHICH HAVE SOME ERROR  
         DELETE A   
         FROM #PRTTABLE A   
         JOIN @ERRORS B ON A.MEMO_ID = B.XN_ID AND A.MODE=B.XN_TYPE  
           
         --SELECT COUNT(*) FROM #PRTTABLE  
         SET @CSTEP = 260  
         IF OBJECT_ID('TEMPDB..#V_PROCESS','U') IS NOT NULL  
    DROP TABLE #V_PROCESS  
     
   SET @CSTEP = 270  
   /*  
    BILL_LEVEL_TAX_METHOD : 1 IS EXCLUSIVE  
          2 IS INCLUSIVE  
                
   */  
   --A SINGLE PURCHASE RETURN MEMO CAN HAVE MULTIPLE PURCHASE RETURN AND TAX ACCOUNTS BASED ON MULTIPLE FORMS  
    SELECT   PM.RM_ID  
      ,PM.RM_NO  
      ,PM.RM_DT  
      ,PM.CREDIT_DAYS  
      ,(CASE WHEN ISNULL(PM.ACCOUNTS_DEPT_ID,'')='' THEN pm.location_Code 
        ELSE PM.ACCOUNTS_DEPT_ID END) AS DEPT_ID  
      ,PAC.PURAC  
      ,PAC.TAXAC  
	  ,'0000000000' AS IGST_XN_AC_CODE
	  ,'0000000000' AS IGST_TAX_AC_CODE
	  ,'0000000000' AS LOCAL_GST_XN_AC_CODE
	  ,'0000000000' AS CGST_TAX_AC_CODE
	  ,'0000000000' AS SGST_TAX_AC_CODE
      --FOR INCLUSIVE TAX DEDUCE THE AMOUNT FROM THE SUBTOTAL AS TAX WOULD BE POSTED SEPARATELY  
      ,FM.POST_TAX_SEPARATELY  
      ,PM.AC_CODE  
      ,PM.TOTAL_AMOUNT AS TOTAL_AMOUNT  
      ,SUM(ISNULL(FDN_RATE,0)*ISNULL(PD.QUANTITY,0)) AS DED_AMOUNT  
      ,(CASE WHEN ISNULL(PD.MRR_ID,'')<>'' THEN LTRIM(RTRIM(PIM.BILL_NO)) ELSE '' END) AS BILL_NO  
      ,(CASE WHEN ISNULL(PD.MRR_ID,'')<>'' THEN LTRIM(RTRIM(PIM.BILL_NO))+'/'+CONVERT(VARCHAR,PIM.INV_DT,112) ELSE '' END) AS BILL_NO_WITH_DATE  
      ,PM.CANCELLED  
      ,ROUND(SUM(CASE WHEN DN_TYPE=2 AND PD.RM_ID IS NULL THEN 0 ELSE (((PM.TOTAL_AMOUNT/PM.SUBTOTAL)*((PD.PURCHASE_PRICE*PD.QUANTITY)-(ISNULL(FDN_RATE,0)*PD.QUANTITY)))) END),2) AS BILL_AMOUNT  
      ,ROUND(SUM(CASE WHEN DN_TYPE=2 AND PD.RM_ID IS NULL THEN 0 ELSE (((PM.DISCOUNT_AMOUNT/PM.SUBTOTAL)*((PD.PURCHASE_PRICE*PD.QUANTITY)))) END),2) AS DISCOUNTAMOUNT  
      ,PM.FREIGHT  
      ,PM.OTHER_CHARGES AS OTHERCHARGES  
      ,ROUND(SUM(CASE WHEN DN_TYPE=2 AND PD.RM_ID IS NULL THEN 0 ELSE (((PM.EXCISE_DUTY_AMOUNT/PM.SUBTOTAL)*((PD.PURCHASE_PRICE*PD.QUANTITY)))) END),2) AS EXCISEDUTYAMOUNT  
      ,ROUND(SUM(CASE WHEN DN_TYPE=2 AND PD.RM_ID IS NULL THEN 0 ELSE (((PM.ROUND_OFF/PM.SUBTOTAL)*((PD.PURCHASE_PRICE*PD.QUANTITY)))+ISNULL(PD.TAX_ROUND_OFF,0)) END),2) AS ROUNDOFF  
      ,ROUND(SUM(CASE WHEN DN_TYPE=2 AND PD.RM_ID IS NULL THEN 0 ELSE ((PD.PURCHASE_PRICE*PD.QUANTITY)-
       (CASE WHEN PD.BILL_LEVEL_TAX_METHOD=2 THEN PD.ITEM_TAX_AMOUNT ELSE 0 END))   
       END),2) AS PURAMOUNT  
      ,ROUND(SUM(ISNULL(PD.CASHDISCOUNTRATE,0)*PD.QUANTITY),2) AS CASHDISCOUNTAMOUNT   
      ,ROUND(SUM(PD.ITEM_TAX_AMOUNT),2) AS TAXAMOUNT  
	  ,CONVERT(NUMERIC(10,2),0) AS IGST_AMOUNT
	  ,CONVERT(NUMERIC(10,2),0) AS CGST_AMOUNT
	  ,CONVERT(NUMERIC(10,2),0) AS SGST_AMOUNT
      ,SUM(PD.QUANTITY) AS QUANTITY  
      ,'PRT' AS XN_TYPE  
      ,PM.DN_TYPE   
		,CONVERT(NUMERIC(6,2),0) AS OTHER_CHARGES_GST_PERCENTAGE
	  ,CONVERT(NUMERIC(6,2),0) AS FREIGHT_GST_PERCENTAGE		
		,CONVERT(NUMERIC(10,2),0) AS FREIGHT_IGST_AMOUNT
		,CONVERT(NUMERIC(10,2),0) AS FREIGHT_CGST_AMOUNT
		,CONVERT(NUMERIC(10,2),0) AS FREIGHT_SGST_AMOUNT
		,CONVERT(NUMERIC(10,2),0) AS OTHER_CHARGES_IGST_AMOUNT
		,CONVERT(NUMERIC(10,2),0) AS OTHER_CHARGES_CGST_AMOUNT
		,CONVERT(NUMERIC(10,2),0) AS OTHER_CHARGES_SGST_AMOUNT

	  ,CONVERT(VARCHAR(5),'') AS LOC_GST_STATE_CODE
	  ,CONVERT(VARCHAR(5),'') AS PARTY_GST_STATE_CODE
       ,SUM(ISNULL(FDN_RATE,0)*PD.QUANTITY) AS PRTAMOUNT  
      ,SUM(RFNET) AS RMDNET,ISNULL(LT.CASHDISCOUNT,0) AS CD_PCT  
      ,CONVERT(NUMERIC(6,2),0) AS FREIGHT_RO
      ,CONVERT(NUMERIC(6,2),0) AS OTHER_CHARGES_RO 
      ,PD.MRR_ID AS REF_MRR_ID
      ,PM.ROUND_OFF,PM.MANUAL_ROUNDOFF
   INTO #V_PROCESS  
   FROM RMM01106 PM   
   LEFT JOIN RMD01106 PD ON PM.RM_ID=PD.RM_ID  
   JOIN #PRTTABLE PT ON PT.MEMO_ID = PM.RM_ID AND PT.MODE='PRT'  
   LEFT JOIN FORM FM ON PD.ITEM_FORM_ID = FM.FORM_ID  
   LEFT JOIN PRTCONFIGDET PAC ON FM.FORM_ID=PAC.FORMID  
   LEFT OUTER JOIN LEDGER_TERMS LT ON LT.TERMS_CODE=PD.TERMS_CODE  
   LEFT OUTER JOIN PIM01106 PIM ON PIM.MRR_ID=PD.MRR_ID
   WHERE (PM.RM_DT<@DGSTCUTOFFDATE OR @DGSTCUTOFFDATE='') AND PM.TOTAL_AMOUNT<>0   
      GROUP BY PM.RM_ID  
     ,PM.RM_NO  
     ,PM.RM_DT  
     ,PM.CREDIT_DAYS  
     ,(CASE WHEN ISNULL(PM.ACCOUNTS_DEPT_ID,'')='' THEN pm.location_Code 
        ELSE PM.ACCOUNTS_DEPT_ID END)  
      ,PAC.PURAC   
      ,PAC.TAXAC  
      ,FM.POST_TAX_SEPARATELY  
      ,PM.AC_CODE  
      ,PM.TOTAL_AMOUNT  
      ,(CASE WHEN ISNULL(PD.MRR_ID,'')<>'' THEN LTRIM(RTRIM(PIM.BILL_NO)) ELSE '' END)
      ,(CASE WHEN ISNULL(PD.MRR_ID,'')<>'' THEN LTRIM(RTRIM(PIM.BILL_NO))+'/'+CONVERT(VARCHAR,PIM.INV_DT,112) ELSE '' END)
      ,PM.CANCELLED  
      ,PM.TOTAL_AMOUNT  
      ,PM.DN_TYPE   
     ,ISNULL(LT.CASHDISCOUNT,0)  
     ,PM.FREIGHT  
     ,PM.OTHER_CHARGES
     ,PD.MRR_ID
     ,PM.ROUND_OFF,PM.MANUAL_ROUNDOFF
   UNION ALL  

   SELECT  PM.RM_ID  
      ,PM.RM_NO  
      ,PM.RM_DT  
      ,PM.CREDIT_DAYS  
      ,(CASE WHEN ISNULL(PM.ACCOUNTS_DEPT_ID,'')='' THEN pm.location_Code   
        ELSE PM.ACCOUNTS_DEPT_ID END) AS DEPT_ID  
      ,'' AS PURAC  
      ,'' AS TAXAC  
	  ,ISNULL(IGST_XN_AC_CODE,'')
	  ,ISNULL(IGST_TAX_AC_CODE,'')
	  ,ISNULL(LOCAL_GST_XN_AC_CODE,'')
	  ,ISNULL(CGST_TAX_AC_CODE,'')
	  ,ISNULL(SGST_TAX_AC_CODE,'')
      --FOR INCLUSIVE TAX DEDUCE THE AMOUNT FROM THE SUBTOTAL AS TAX WOULD BE POSTED SEPARATELY  
      ,0 AS POST_TAX_SEPARATELY  
      ,PM.AC_CODE  
      ,PM.TOTAL_AMOUNT AS TOTAL_AMOUNT  
      ,ROUND(SUM(ISNULL(FDN_RATE,0)*ISNULL(PD.QUANTITY,0)),2) AS DED_AMOUNT  
	  ,(CASE WHEN ISNULL(PD.MRR_ID,'')<>'' THEN LTRIM(RTRIM(PIM.BILL_NO)) ELSE '' END) AS BILL_NO        
      ,(CASE WHEN ISNULL(PD.MRR_ID,'')<>'' THEN LTRIM(RTRIM(PIM.BILL_NO))+'/'+CONVERT(VARCHAR,PIM.INV_DT,112) ELSE '' END) AS BILL_NO_WITH_DATE  
      ,PM.CANCELLED  
      ,ROUND(SUM(CASE WHEN DN_TYPE=2 AND PD.RM_ID IS NULL THEN 0 ELSE (((PM.TOTAL_AMOUNT/PM.SUBTOTAL)*((PD.PURCHASE_PRICE*PD.QUANTITY)-(ISNULL(FDN_RATE,0)*PD.QUANTITY)))) END),2) AS BILL_AMOUNT  
      ,ROUND(SUM(CASE WHEN DN_TYPE=2 AND PD.RM_ID IS NULL THEN 0 ELSE (((PM.DISCOUNT_AMOUNT/PM.SUBTOTAL)*((PD.PURCHASE_PRICE*PD.QUANTITY)))) END),2) AS DISCOUNTAMOUNT  
	  ,PM.FREIGHT_TAXABLE_VALUE AS FREIGHT
	  ,PM.OTHER_CHARGES_TAXABLE_VALUE AS OTHERCHARGES
      ,ROUND(SUM(CASE WHEN DN_TYPE=2 AND PD.RM_ID IS NULL THEN 0 ELSE (((PM.EXCISE_DUTY_AMOUNT/PM.SUBTOTAL)*((PD.PURCHASE_PRICE*PD.QUANTITY)))) END),2) AS EXCISEDUTYAMOUNT  
      ,ROUND(SUM(CASE WHEN DN_TYPE=2 AND PD.RM_ID IS NULL THEN 0 ELSE (((PM.ROUND_OFF/PM.SUBTOTAL)*((PD.PURCHASE_PRICE*PD.QUANTITY)))+ISNULL(PD.TAX_ROUND_OFF,0)) END),2) AS ROUNDOFF  
      ,SUM(CASE WHEN ISNULL(XN_VALUE_WITHOUT_GST,0)=0 THEN (CASE WHEN DN_TYPE=2 AND PD.RM_ID IS NULL THEN 0 
		ELSE (((PD.PURCHASE_PRICE)*PD.QUANTITY))-   --(-ISNULL(FDN_RATE,0))  
       (CASE WHEN PD.BILL_LEVEL_TAX_METHOD=2 THEN ISNULL(PD.ITEM_TAX_AMOUNT,0) ELSE 0 END)   
       END) ELSE XN_VALUE_WITHOUT_GST END) AS PURAMOUNT  
      ,ROUND(SUM(ISNULL(PD.CASHDISCOUNTRATE,0)*PD.QUANTITY),2) AS CASHDISCOUNTAMOUNT   
      ,ROUND(SUM(PD.ITEM_TAX_AMOUNT),2) AS TAXAMOUNT  
	  ,SUM(IGST_AMOUNT) AS IGST_AMOUNT
	  ,SUM(CGST_AMOUNT) AS CGST_AMOUNT
	  ,SUM(SGST_AMOUNT) AS SGST_AMOUNT
      ,SUM(PD.QUANTITY) AS QUANTITY  
      ,'PRT' AS XN_TYPE  
      ,PM.DN_TYPE   
	  ,PM.OTHER_CHARGES_GST_PERCENTAGE		 					     
	  ,PM.FREIGHT_GST_PERCENTAGE
 	  ,PM.FREIGHT_IGST_AMOUNT
	 ,PM.FREIGHT_CGST_AMOUNT
	 ,PM.FREIGHT_SGST_AMOUNT
	 ,PM.OTHER_CHARGES_IGST_AMOUNT
	 ,PM.OTHER_CHARGES_CGST_AMOUNT
	 ,PM.OTHER_CHARGES_SGST_AMOUNT
      ,LOC.GST_STATE_CODE AS LOC_GST_STATE_CODE
	  ,LMP.AC_GST_STATE_CODE AS PARTY_GST_STATE_CODE
      ,SUM(ISNULL(FDN_RATE,0)*PD.QUANTITY) AS PRTAMOUNT  
      ,SUM(RFNET) AS RMDNET,ISNULL(LT.CASHDISCOUNT,0) AS CD_PCT  
      ,(PM.FREIGHT_TAXABLE_VALUE+(CASE WHEN PM.OH_TAX_METHOD=2 THEN PM.FREIGHT_IGST_AMOUNT+PM.FREIGHT_CGST_AMOUNT+PM.FREIGHT_SGST_AMOUNT ELSE 0 END)-PM.FREIGHT) AS FREIGHT_RO
      ,(PM.OTHER_CHARGES_TAXABLE_VALUE+(CASE WHEN PM.OH_TAX_METHOD=2 THEN PM.OTHER_CHARGES_IGST_AMOUNT+PM.OTHER_CHARGES_CGST_AMOUNT+PM.OTHER_CHARGES_SGST_AMOUNT ELSE 0 END)-PM.OTHER_CHARGES) AS OTHER_CHARGES_RO       
      ,PD.MRR_ID AS REF_MRR_ID
      ,PM.ROUND_OFF,PM.MANUAL_ROUNDOFF
   FROM RMM01106 PM   
   LEFT JOIN RMD01106 PD ON PM.RM_ID=PD.RM_ID  
   JOIN #PRTTABLE PT ON PT.MEMO_ID = PM.RM_ID AND PT.MODE='PRT'  
   LEFT OUTER JOIN LEDGER_TERMS LT ON LT.TERMS_CODE=PD.TERMS_CODE  
   LEFT OUTER JOIN GST_POSTING_CONFIG GPC ON GPC.GST_PERCENTAGE=ISNULL(PD.GST_PERCENTAGE,0) AND GPC.XN_TYPE='PRT'
   JOIN LOCATION LOC ON LOC.DEPT_ID=pm.location_Code 
   JOIN LMP01106 LMP ON LMP.AC_CODE=PM.AC_CODE
   LEFT OUTER JOIN PIM01106 PIM ON PIM.MRR_ID=PD.MRR_ID
   WHERE PM.RM_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND PM.TOTAL_AMOUNT<>0   
   
      GROUP BY PM.RM_ID  
     ,PM.RM_NO  
     ,PM.RM_DT  
     ,PM.CREDIT_DAYS  
     ,(CASE WHEN ISNULL(PM.ACCOUNTS_DEPT_ID,'')='' THEN pm.location_Code 
        ELSE PM.ACCOUNTS_DEPT_ID END)  
	  ,ISNULL(IGST_XN_AC_CODE,'')
	  ,ISNULL(IGST_TAX_AC_CODE,'')
	  ,ISNULL(LOCAL_GST_XN_AC_CODE,'')
	  ,ISNULL(CGST_TAX_AC_CODE,'')
	  ,ISNULL(SGST_TAX_AC_CODE,'')
      ,PM.AC_CODE  
      ,PM.TOTAL_AMOUNT  
      ,(CASE WHEN ISNULL(PD.MRR_ID,'')<>'' THEN LTRIM(RTRIM(PIM.BILL_NO)) ELSE '' END) 
      ,(CASE WHEN ISNULL(PD.MRR_ID,'')<>'' THEN LTRIM(RTRIM(PIM.BILL_NO))+'/'+CONVERT(VARCHAR,PIM.INV_DT,112) ELSE '' END)
      ,PM.CANCELLED  
      ,PM.TOTAL_AMOUNT  
      ,PM.DN_TYPE   
     ,ISNULL(LT.CASHDISCOUNT,0)  
     ,PM.FREIGHT
     ,PM.OTHER_CHARGES
	 ,PM.FREIGHT_IGST_AMOUNT
	 ,PM.FREIGHT_CGST_AMOUNT
	 ,PM.FREIGHT_SGST_AMOUNT
	 ,PM.OTHER_CHARGES_IGST_AMOUNT
	 ,PM.OTHER_CHARGES_CGST_AMOUNT
	 ,PM.OTHER_CHARGES_SGST_AMOUNT
	 ,PM.OTHER_CHARGES_GST_PERCENTAGE		 					     
	 ,PM.FREIGHT_GST_PERCENTAGE
	 ,LOC.GST_STATE_CODE
	 ,LMP.AC_GST_STATE_CODE
	 ,PM.FREIGHT_TAXABLE_VALUE
	 ,PM.OTHER_CHARGES_TAXABLE_VALUE
	 ,PM.OH_TAX_METHOD
	 ,PD.MRR_ID
	 ,PM.ROUND_OFF,PM.MANUAL_ROUNDOFF
   UNION ALL  
      
    SELECT   PM.MEMO_ID  
      ,PM.MEMO_NO  
      ,PM.MEMO_DT  
      ,0 AS CREDIT_DAYS  
      ,pm.location_code   AS DEPT_ID  
      ,@CEOSSDISCSHARINGAC AS PURAC  
      ,'' AS TAXAC  
	  ,'0000000000' AS IGST_XN_AC_CODE
	  ,'0000000000' AS IGST_TAX_AC_CODE
	  ,'0000000000' AS LOCAL_GST_XN_AC_CODE
	  ,'0000000000' AS CGST_TAX_AC_CODE
	  ,'0000000000' AS SGST_TAX_AC_CODE      
      ,0 AS POST_TAX_SEPARATELY  
      ,PM.AC_CODE  
      ,PM.VENDOR_AMOUNT AS TOTAL_AMOUNT  
      ,0 AS DED_AMOUNT  
      ,'' AS BILL_NO  
      ,'' AS BILL_NO_WITH_DATE  
      ,PM.CANCELLED  
      ,0 AS BILL_AMOUNT  
      ,0 AS DISCOUNTAMOUNT  
      ,0 AS FREIGHT  
      ,0 AS OTHERCHARGES  
      ,0 AS EXCISEDUTYAMOUNT  
      ,0 AS ROUNDOFF  
      ,0 AS PURAMOUNT  
      ,0 AS CASHDISCOUNTAMOUNT   
      ,0 AS TAXAMOUNT  
	  ,CONVERT(NUMERIC(10,2),0) AS IGST_AMOUNT
	  ,CONVERT(NUMERIC(10,2),0) AS CGST_AMOUNT
	  ,CONVERT(NUMERIC(10,2),0) AS SGST_AMOUNT
      ,0 AS QUANTITY  
      ,'EOSSPRT' AS XN_TYPE  
      ,1 AS DN_TYPE   
	  ,0 AS OTHER_CHARGES_GST_PERCENTAGE		 					     
	  ,0 AS FREIGHT_GST_PERCENTAGE
		,CONVERT(NUMERIC(10,2),0) AS FREIGHT_IGST_AMOUNT
		,CONVERT(NUMERIC(10,2),0) AS FREIGHT_CGST_AMOUNT
		,CONVERT(NUMERIC(10,2),0) AS FREIGHT_SGST_AMOUNT
		,CONVERT(NUMERIC(10,2),0) AS OTHER_CHARGES_IGST_AMOUNT
		,CONVERT(NUMERIC(10,2),0) AS OTHER_CHARGES_CGST_AMOUNT
		,CONVERT(NUMERIC(10,2),0) AS OTHER_CHARGES_SGST_AMOUNT

	  ,CONVERT(VARCHAR(5),'') AS LOC_GST_STATE_CODE
	  ,CONVERT(VARCHAR(5),'') AS PARTY_GST_STATE_CODE
      ,0 AS PRTAMOUNT  
      ,PM.VENDOR_AMOUNT AS RMDNET,0 AS CD_PCT  
	  ,0 AS FREIGHT_RO
	  ,0 AS OTHER_CHARGES_RO
	  ,'' AS REF_MRR_ID
	  ,0 AS ROUND_OFF,0 AS MANUAL_ROUNDOFF
   FROM EOSSDNM PM   
   JOIN #PRTTABLE PT ON PT.MEMO_ID = PM.MEMO_ID AND PT.MODE='EOSSPRT'  
  WHERE PM.VENDOR_AMOUNT<>0      
   
 CREATE INDEX IX_V_PROCESS_RM_ID ON #V_PROCESS(RM_ID,XN_TYPE)  
   
 SET @NCTR=1  
 
 
 --SELECT 'CHECK VPROCESS',* FROM #V_PROCESS
 
 SET @COLDRMID=''
     
 SET @CSTEP = 280  
 WHILE EXISTS(SELECT TOP 1 'U' FROM #V_PROCESS ORDER BY RM_ID)  
 BEGIN  
  SET @CSTEP = 290  
    
  SELECT @CRMID='',@CXNTYPE='',@CPARTYACCODE='',@CREFBILLNO=''  
     
   
  SELECT TOP 1 @CRMID=RM_ID,@CRMNO=RM_NO,@CXNTYPE=XN_TYPE,@CPARTYACCODE=AC_CODE,@DN_TYPE=ISNULL(DN_TYPE,0),  
  @CBILLTYPE=XN_TYPE,@DRMDT=RM_DT,@CLOCGSTSTATECODE=LOC_GST_STATE_CODE,@CPARTYGSTSTATECODE=PARTY_GST_STATE_CODE,
  @NROUNDOFF=ROUND_OFF,@BMANUALROFF=ISNULL(MANUAL_ROUNDOFF,0)
  FROM #V_PROCESS  A
  
  IF @COLDRMID<>@CRMID
	   SET @BNEWENTRY=1
  ELSE
	   SET @BNEWENTRY=0

  
  SET @COLDRMID=@CRMID
     
  IF @DN_TYPE=2  
  BEGIN  
   IF EXISTS (SELECT TOP 1 PRODUCT_CODE FROM RMD01106 WHERE RM_ID=@CRMID)    
    SET @DN_TYPE=1  
  END  
	    
  SET @CSTEP = 300  

  SET @BGSTBILL=0
  IF @DRMDT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>''
		SET @BGSTBILL=1
  
  --PURCHASE RETURN ACCOUNT SHOULD BE CREDITED WITH THE RESPECTIVE SUBTOTAL  
  IF @BGSTBILL=0
	  INSERT @VCHC ( XN_ID,XN_NO,CRDAYS,AC_CODE,AMOUNT )   
	  SELECT RM_ID,RM_NO,CREDIT_DAYS,ISNULL(PURAC,@CFINPRTAC),-(CASE WHEN ISNULL(PURAMOUNT,0)=0 THEN TOTAL_AMOUNT ELSE PURAMOUNT END)  
	  FROM #V_PROCESS  
	  WHERE RM_ID=@CRMID AND (ISNULL(PURAMOUNT,0)<>0  OR (ISNULL(TOTAL_AMOUNT,0)<>0 AND XN_TYPE='EOSSPRT'))
  ELSE
	  INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT ) 
		SELECT @CRMID,IGST_XN_AC_CODE,-PURAMOUNT
		FROM #V_PROCESS
		WHERE RM_ID=@CRMID  AND @CLOCGSTSTATECODE<>@CPARTYGSTSTATECODE
		UNION ALL
		SELECT @CRMID,LOCAL_GST_XN_AC_CODE,-PURAMOUNT
		FROM #V_PROCESS
		WHERE RM_ID=@CRMID AND @CLOCGSTSTATECODE=@CPARTYGSTSTATECODE
		
  ----FOR FINANCIAL DEBIT NOTE   
  IF ISNULL(@DN_TYPE,0)=2 
  BEGIN  
	   INSERT @VCHC ( XN_ID,XN_NO,CRDAYS,AC_CODE,AMOUNT )   
	   SELECT RM_ID,RM_NO,CREDIT_DAYS,@CFINPRTAC,-TOTAL_AMOUNT  
	   FROM #V_PROCESS  
	   WHERE RM_ID=@CRMID AND FREIGHT+OTHERCHARGES=0   
	  
	   --SUPPLIER SHOULD BE DEBITED WITH TOTAL AMOUNT  
	   INSERT @VCHC ( XN_ID,XN_NO,CRDAYS,AC_CODE,AMOUNT )   
	   SELECT TOP 1 RM_ID,RM_NO,CREDIT_DAYS,AC_CODE,TOTAL_AMOUNT  
	   FROM #V_PROCESS  
	   WHERE RM_ID=@CRMID AND TOTAL_AMOUNT<>0  
	   
	   
  END  
      
  SET @CSTEP = 310  
  
  IF @BGSTBILL=0
		SELECT TOP 1 @CSETOFFACCODE=PURAC FROM #V_PROCESS WHERE RM_ID=@CRMID
  ELSE
		SELECT TOP 1 @CSETOFFACCODE=(CASE WHEN @CLOCGSTSTATECODE<>@CPARTYGSTSTATECODE 
		THEN IGST_XN_AC_CODE ELSE LOCAL_GST_XN_AC_CODE END)
		FROM #V_PROCESS WHERE RM_ID=@CRMID  		
		
  --TAX AMOUNT SHOULD BE CREDITED WITH THE RESPECTIVE TAX_AMOUNT    
  IF @BGSTBILL=0
	  INSERT @VCHC ( XN_ID,XN_NO,CRDAYS,AC_CODE,AMOUNT )   
	  SELECT RM_ID,RM_NO,CREDIT_DAYS,(CASE WHEN POST_TAX_SEPARATELY=1 THEN TAXAC ELSE PURAC END),-TAXAMOUNT  
	  FROM #V_PROCESS  
	  WHERE RM_ID=@CRMID AND TAXAMOUNT<>0
  ELSE
	  INSERT @VCHC ( XN_ID,XN_NO,CRDAYS,AC_CODE,AMOUNT )   
	  SELECT RM_ID,RM_NO,CREDIT_DAYS,IGST_TAX_AC_CODE,-IGST_AMOUNT  
	  FROM #V_PROCESS  
	  WHERE RM_ID=@CRMID AND IGST_AMOUNT<>0
	  UNION ALL
	  SELECT RM_ID,RM_NO,CREDIT_DAYS,CGST_TAX_AC_CODE,-CGST_AMOUNT  
	  FROM #V_PROCESS  
	  WHERE RM_ID=@CRMID AND CGST_AMOUNT<>0
	  UNION ALL
	  SELECT RM_ID,RM_NO,CREDIT_DAYS,SGST_TAX_AC_CODE,-SGST_AMOUNT  
	  FROM #V_PROCESS  
	  WHERE RM_ID=@CRMID AND SGST_AMOUNT<>0
	  	  	  		      
  SET @CSTEP = 320  
  --DISCOUNT AMOUNT SHOULD BE DEBITED  
  IF @BGSTBILL=0 AND @BNEWENTRY=1
	  INSERT @VCHC ( XN_ID,XN_NO,CRDAYS,AC_CODE,AMOUNT )   
	  SELECT RM_ID,RM_NO,CREDIT_DAYS,(CASE WHEN @BPOSTDISCOUNTSEPARATELY=1 THEN @CSETOFFACCODE ELSE PURAC END),DISCOUNTAMOUNT  
	  FROM #V_PROCESS  
	  WHERE RM_ID=@CRMID AND DISCOUNTAMOUNT<>0  
    
  SET @CSTEP = 330  

  IF @BNEWENTRY=1
  BEGIN	
	  --FREIGHT AMOUNT SHOULD BE CREDITED  
	  IF @BGSTBILL=1	
	  BEGIN
			  IF @BPOSTFREIGHTSEPARATELY=1	
				  INSERT @VCHC (XN_ID,XN_NO,AC_CODE,AMOUNT)   
				  SELECT TOP 1 RM_ID,RM_NO,@CFREIGHTACCODE,-FREIGHT
				  FROM #V_PROCESS  A
				  WHERE RM_ID=@CRMID AND FREIGHT<>0 
			  ELSE  
				  INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT )   
				  SELECT TOP 1 RM_ID,RM_NO,B.IGST_XN_AC_CODE,-FREIGHT  
				  FROM #V_PROCESS  A
				  JOIN GST_POSTING_CONFIG B ON A.FREIGHT_GST_PERCENTAGE=B.GST_PERCENTAGE
				  WHERE RM_ID=@CRMID AND FREIGHT<>0  AND 
				  ((@CLOCGSTSTATECODE<>@CPARTYGSTSTATECODE AND FREIGHT_CGST_AMOUNT=0) OR FREIGHT_IGST_AMOUNT<>0) AND B.XN_TYPE='PRT'
				  UNION ALL
				  SELECT TOP 1 RM_ID,RM_NO,B.LOCAL_GST_XN_AC_CODE,-FREIGHT  
				  FROM #V_PROCESS  A
				  JOIN GST_POSTING_CONFIG B ON A.FREIGHT_GST_PERCENTAGE=B.GST_PERCENTAGE
				  WHERE RM_ID=@CRMID AND FREIGHT<>0  
				  AND ((@CLOCGSTSTATECODE=@CPARTYGSTSTATECODE AND FREIGHT_IGST_AMOUNT=0) OR FREIGHT_CGST_AMOUNT<>0) AND B.XN_TYPE='PRT'
					  
			  INSERT @VCHC (XN_ID,XN_NO,AC_CODE,AMOUNT)   
			  SELECT TOP 1  RM_ID,RM_NO,B.IGST_TAX_AC_CODE,-FREIGHT_IGST_AMOUNT
			  FROM #V_PROCESS  A
			  JOIN GST_POSTING_CONFIG B ON A.FREIGHT_GST_PERCENTAGE=B.GST_PERCENTAGE
			  WHERE RM_ID=@CRMID AND FREIGHT_IGST_AMOUNT<>0 AND B.XN_TYPE='PRT'  				  
			  UNION ALL
			  SELECT TOP 1  RM_ID,RM_NO,B.CGST_TAX_AC_CODE,-FREIGHT_CGST_AMOUNT
			  FROM #V_PROCESS  A
			  JOIN GST_POSTING_CONFIG B ON A.FREIGHT_GST_PERCENTAGE=B.GST_PERCENTAGE
			  WHERE RM_ID=@CRMID AND FREIGHT_CGST_AMOUNT<>0 AND B.XN_TYPE='PRT' 				  
			  UNION ALL
			  SELECT TOP 1  RM_ID,RM_NO,B.SGST_TAX_AC_CODE,-FREIGHT_SGST_AMOUNT
			  FROM #V_PROCESS  A
			  JOIN GST_POSTING_CONFIG B ON A.FREIGHT_GST_PERCENTAGE=B.GST_PERCENTAGE
			  WHERE RM_ID=@CRMID AND FREIGHT_SGST_AMOUNT<>0 AND B.XN_TYPE='PRT'  				  
	   END
	   ELSE
	   IF @BGSTBILL=0	
			  INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT )   
			  SELECT TOP 1 RM_ID,RM_NO,(CASE WHEN @BPOSTFREIGHTSEPARATELY=1 THEN @CFREIGHTACCODE ELSE PURAC END),-FREIGHT  
			  FROM #V_PROCESS  A WHERE RM_ID=@CRMID AND FREIGHT<>0  
	  
	  SET @CSTEP = 340  
	  --OTHER CHARGES AMOUNT SHOULD BE CREDITED  
	  IF @BGSTBILL=1	
	  BEGIN
			  IF @BPOSTOTHERCHARGESSEPARATELY=1	
				  INSERT @VCHC (XN_ID,XN_NO,AC_CODE,AMOUNT)   
				  SELECT TOP 1 RM_ID,RM_NO,@COTHERCHARGESACCODE,-OTHERCHARGES
				  FROM #V_PROCESS  A
				  WHERE RM_ID=@CRMID AND OTHERCHARGES<>0 
			  ELSE  
	  			  INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT )   
				  SELECT TOP 1 RM_ID,RM_NO,B.IGST_XN_AC_CODE,-OTHERCHARGES  
				  FROM #V_PROCESS  A
				  JOIN GST_POSTING_CONFIG B ON A.OTHER_CHARGES_GST_PERCENTAGE=B.GST_PERCENTAGE
				  WHERE RM_ID=@CRMID AND OTHERCHARGES<>0  
				  AND ((@CLOCGSTSTATECODE<>@CPARTYGSTSTATECODE AND OTHER_CHARGES_CGST_AMOUNT=0) OR OTHER_CHARGES_IGST_AMOUNT<>0)
				  AND B.XN_TYPE='PRT'
				  UNION ALL
				  SELECT TOP 1 RM_ID,RM_NO,B.LOCAL_GST_XN_AC_CODE,-OTHERCHARGES
				  FROM #V_PROCESS  A
				  JOIN GST_POSTING_CONFIG B ON A.OTHER_CHARGES_GST_PERCENTAGE=B.GST_PERCENTAGE
				  WHERE RM_ID=@CRMID AND OTHERCHARGES<>0 
				  AND ((@CLOCGSTSTATECODE=@CPARTYGSTSTATECODE AND OTHER_CHARGES_IGST_AMOUNT=0) OR OTHER_CHARGES_CGST_AMOUNT<>0)
				  AND B.XN_TYPE='PRT'
			  
			  INSERT @VCHC (XN_ID,XN_NO,AC_CODE,AMOUNT)   
			  SELECT TOP 1  RM_ID,RM_NO,B.IGST_TAX_AC_CODE,-OTHER_CHARGES_IGST_AMOUNT
			  FROM #V_PROCESS  A
			  JOIN GST_POSTING_CONFIG B ON A.OTHER_CHARGES_GST_PERCENTAGE=B.GST_PERCENTAGE
			  WHERE RM_ID=@CRMID AND OTHER_CHARGES_IGST_AMOUNT<>0 AND B.XN_TYPE='PRT'  				  
			  UNION ALL
			  SELECT TOP 1  RM_ID,RM_NO,B.CGST_TAX_AC_CODE,-OTHER_CHARGES_CGST_AMOUNT
			  FROM #V_PROCESS  A
			  JOIN GST_POSTING_CONFIG B ON A.OTHER_CHARGES_GST_PERCENTAGE=B.GST_PERCENTAGE
			  WHERE RM_ID=@CRMID AND OTHER_CHARGES_CGST_AMOUNT<>0 AND B.XN_TYPE='PRT'  				  
			  UNION ALL
			  SELECT TOP 1  RM_ID,RM_NO,B.SGST_TAX_AC_CODE,-OTHER_CHARGES_SGST_AMOUNT
			  FROM #V_PROCESS  A
			  JOIN GST_POSTING_CONFIG B ON A.OTHER_CHARGES_GST_PERCENTAGE=B.GST_PERCENTAGE
			  WHERE RM_ID=@CRMID AND OTHER_CHARGES_SGST_AMOUNT<>0 AND B.XN_TYPE='PRT' 				  
	  END
	  ELSE
	  IF @BGSTBILL=0	
			  INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT )   
			  SELECT TOP 1 RM_ID,RM_NO,(CASE WHEN @BPOSTOTHERCHARGESSEPARATELY=1 THEN @COTHERCHARGESACCODE ELSE PURAC END),-OTHERCHARGES  
			  FROM #V_PROCESS  A WHERE RM_ID=@CRMID AND OTHERCHARGES<>0  
		        
	  SET @CSTEP = 350  
	  
	  SET @NROLIMIT=(CASE WHEN @BMANUALROFF=1 AND ABS(@NROUNDOFF)>.99 THEN ABS(@NROUNDOFF) ELSE 0.99 END)
		
		--IF @CRMID='HO0111800000HO00001999'
	 --  SELECT  A.RM_ID,A.RM_NO,(CASE WHEN @BPOSTROUNDOFFSEPARATELY=1 OR @BGSTBILL=1 THEN @CROUNDOFFACCODE ELSE PURAC END),
	   
		--SUM(PURAMOUNT-(CASE WHEN @BGSTBILL=0 THEN A.DISCOUNTAMOUNT ELSE 0 END)) AS PURAMOUNT,SUM(PRTAMOUNT) AS PRTAMOUNT,SUM(ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+
		--				 ISNULL(TAXAMOUNT,0)) AS TAX,
		--	 B.FREIGHT,SUM(A.EXCISEDUTYAMOUNT) AS EXCISE,(CASE WHEN B.OH_TAX_METHOD=1 THEN ISNULL(B.FREIGHT_IGST_AMOUNT,0)+ISNULL(B.FREIGHT_CGST_AMOUNT,0)+ISNULL(B.FREIGHT_SGST_AMOUNT,0) ELSE 0 END) AS FREIGHT_TAX,
		--	B.OTHER_CHARGES,(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(B.OTHER_CHARGES_IGST_AMOUNT,0)+
		--	ISNULL(B.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_SGST_AMOUNT,0) ELSE 0 END) AS OC_GST,B.TOTAL_AMOUNT,
		--	((SUM(PURAMOUNT+ISNULL(A.EXCISEDUTYAMOUNT,0)-(CASE WHEN @BGSTBILL=0 THEN A.DISCOUNTAMOUNT ELSE 0 END)+ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+
		--				 ISNULL(TAXAMOUNT,0))+
		--	B.FREIGHT+(CASE WHEN B.OH_TAX_METHOD=1 THEN ISNULL(B.FREIGHT_IGST_AMOUNT,0)+ISNULL(B.FREIGHT_CGST_AMOUNT,0)+ISNULL(B.FREIGHT_SGST_AMOUNT,0) ELSE 0 END)+
		--	B.OTHER_CHARGES+(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(B.OTHER_CHARGES_IGST_AMOUNT,0)+
		--	ISNULL(B.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_SGST_AMOUNT,0) ELSE 0 END))-B.TOTAL_AMOUNT
		--	) AS RO,@NROLIMIT AS RO_LIMIT
			
		--FROM #V_PROCESS A
		--JOIN RMM01106 B ON A.RM_ID=B.RM_ID
		--WHERE A.RM_ID=@CRMID
		--GROUP BY (CASE WHEN @BPOSTROUNDOFFSEPARATELY=1 OR @BGSTBILL=1 THEN @CROUNDOFFACCODE ELSE PURAC END),A.RM_ID,A.RM_NO,B.FREIGHT,B.OTHER_CHARGES,B.OH_TAX_METHOD,
		--B.FREIGHT_IGST_AMOUNT,B.FREIGHT_CGST_AMOUNT,B.FREIGHT_SGST_AMOUNT,
		--B.OTHER_CHARGES_IGST_AMOUNT,B.OTHER_CHARGES_CGST_AMOUNT,B.OTHER_CHARGES_SGST_AMOUNT,B.TOTAL_AMOUNT,B.EXCISE_DUTY_AMOUNT
				  
	  --ROUNDOFF AMOUNT SHOULD BE CREDITED  
	  INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT )   
		SELECT A.RM_ID,A.RM_NO,(CASE WHEN @BPOSTROUNDOFFSEPARATELY=1 OR @BGSTBILL=1 THEN @CROUNDOFFACCODE ELSE PURAC END),
		((SUM(PURAMOUNT+ISNULL(A.EXCISEDUTYAMOUNT,0)-(CASE WHEN @BGSTBILL=0 THEN A.DISCOUNTAMOUNT ELSE 0 END)+ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+
						 ISNULL(TAXAMOUNT,0))+
			B.FREIGHT+(CASE WHEN B.OH_TAX_METHOD=1 THEN ISNULL(B.FREIGHT_IGST_AMOUNT,0)+ISNULL(B.FREIGHT_CGST_AMOUNT,0)+ISNULL(B.FREIGHT_SGST_AMOUNT,0) ELSE 0 END)+
			B.OTHER_CHARGES+(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(B.OTHER_CHARGES_IGST_AMOUNT,0)+
			ISNULL(B.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_SGST_AMOUNT,0) ELSE 0 END))-B.TOTAL_AMOUNT
			) AS AMOUNT
		FROM #V_PROCESS A
		JOIN RMM01106 B ON A.RM_ID=B.RM_ID
		WHERE A.RM_ID=@CRMID
		GROUP BY (CASE WHEN @BPOSTROUNDOFFSEPARATELY=1 OR @BGSTBILL=1 THEN @CROUNDOFFACCODE ELSE PURAC END),A.RM_ID,A.RM_NO,B.FREIGHT,B.OTHER_CHARGES,B.OH_TAX_METHOD,
		B.FREIGHT_IGST_AMOUNT,B.FREIGHT_CGST_AMOUNT,B.FREIGHT_SGST_AMOUNT,
		B.OTHER_CHARGES_IGST_AMOUNT,B.OTHER_CHARGES_CGST_AMOUNT,B.OTHER_CHARGES_SGST_AMOUNT,B.TOTAL_AMOUNT,B.EXCISE_DUTY_AMOUNT
		HAVING 
		ABS((SUM(PURAMOUNT+ISNULL(A.EXCISEDUTYAMOUNT,0)-(CASE WHEN @BGSTBILL=0 THEN A.DISCOUNTAMOUNT ELSE 0 END)+ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+
						 ISNULL(TAXAMOUNT,0))+
			B.FREIGHT+(CASE WHEN B.OH_TAX_METHOD=1 THEN ISNULL(B.FREIGHT_IGST_AMOUNT,0)+ISNULL(B.FREIGHT_CGST_AMOUNT,0)+ISNULL(B.FREIGHT_SGST_AMOUNT,0) ELSE 0 END)+
			B.OTHER_CHARGES+(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(B.OTHER_CHARGES_IGST_AMOUNT,0)+
			ISNULL(B.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_SGST_AMOUNT,0) ELSE 0 END))-B.TOTAL_AMOUNT
			)<=@NROLIMIT 
		UNION ALL
		SELECT TOP 1 RM_ID,RM_NO,(CASE WHEN @BPOSTROUNDOFFSEPARATELY=1 OR @BGSTBILL=1 THEN @CROUNDOFFACCODE ELSE PURAC END),
		FREIGHT_RO+OTHER_CHARGES_RO FROM #V_PROCESS
		WHERE  RM_ID=@CRMID AND  (FREIGHT_RO+OTHER_CHARGES_RO)<>0
  
 	  SET @CSTEP = 370  
	  SET @CVMID = ''  
	  SELECT @CVMID = A.VM_ID   
	   FROM POSTACT_VOUCHER_LINK A  
		JOIN VM01106 B ON A.VM_ID=B.VM_ID  
		 WHERE B.CANCELLED=0 AND A.MEMO_ID = @CRMID AND A.XN_TYPE=@CXNTYPE  
	    
	    
	    
	  SET @CSTEP = 380  
	  IF ISNULL(@CVMID,'') = ''  
	  BEGIN  
		  SET @CVMID = 'LATER-'+RTRIM(LTRIM(CONVERT(VARCHAR,@NCTR)))  
	   SET @NCTR = @NCTR+1  
	  END  
	    
	  SET @CSTEP = 390  
	  INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )  
	  SELECT @CVMID,@CRMID,@CXNTYPE,LAST_UPDATE FROM RMM01106 WHERE RM_ID = @CRMID AND @CBILLTYPE='PRT'  
	  UNION  
	  SELECT @CVMID,@CRMID,@CXNTYPE,LAST_UPDATE FROM EOSSDNM WHERE MEMO_ID = @CRMID AND @CBILLTYPE='EOSSPRT'  
  END
 
  SET @CSTEP = 360  
  --EXCISEDUTY AMOUNT SHOULD BE CREDITED TO PURCHASE RETURN ACCOUNT  
  INSERT @VCHC ( XN_ID,XN_NO,CRDAYS,AC_CODE,AMOUNT )   
  SELECT RM_ID,RM_NO,CREDIT_DAYS,(CASE WHEN @BPOSTEXCISESEPARATELY=1 THEN @CEXCISEACCODE ELSE PURAC END),-EXCISEDUTYAMOUNT  
  FROM #V_PROCESS  
  WHERE RM_ID=@CRMID AND EXCISEDUTYAMOUNT<>0
    
   	    
  --GET THE CONCATENATED BILL NOS FOR THE DEBITNOTE  
  SET @CPURBILLS=NULL  
  SELECT @CPURBILLS=ISNULL(@CPURBILLS+',','')+BILL_NO  
  FROM #V_PROCESS  
  WHERE RM_ID=@CRMID  
    
  SELECT @CQTYNARRATION=(CASE WHEN @CBILLTYPE='EOSSPRT' THEN '' ELSE  ' (QTY:'+LTRIM(RTRIM(STR(SUM(QUANTITY))))+')' END)  
  FROM #V_PROCESS  
  WHERE RM_ID=@CRMID  
    
  SET @NTMPCRDISCOUNTPERCENTAGE=0   
    
  --IF @CRMID='HO0111700000HO00004024'  
  -- SELECT 'CHECK @VCHC',* FROM @VCHC WHERE XN_ID = @CRMID  
  
   
  SET @CSTEP = 410  
  INSERT @VDC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE,   
       CR_DISCOUNT_PERCENTAGE,AC_NAME)  
  SELECT @CVMID  
   , 'LATER-'+LEFT(CONVERT(VARCHAR(40),NEWID()),34) AS VD_ID  
   , A.AC_CODE  
   , (CASE WHEN @DN_TYPE =2 THEN RM.REMARKS  ELSE 
    (CASE WHEN  @CBILLTYPE='EOSSPRT' THEN 'EOSS ' ELSE '' END)+'D/N# ' + @CRMNO END)  
   +(CASE WHEN ISNULL(@CPURBILLS,'')='' THEN '' ELSE ' AGAINST BILL# '+@CPURBILLS END)+ISNULL(@CQTYNARRATION,'') AS NARRATION  
   ,(CASE WHEN SUM(AMOUNT)>0 THEN SUM(AMOUNT) ELSE 0 END) AS DEBIT_AMOUNT  
   ,(CASE WHEN SUM(AMOUNT)<0 THEN ABS(SUM(AMOUNT)) ELSE 0 END) AS CREDIT_AMOUNT  
   ,(CASE WHEN SUM(AMOUNT) > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE  
   ,@NTMPCRDISCOUNTPERCENTAGE  
   ,B.AC_NAME  
    FROM @VCHC A  
    LEFT JOIN RMM01106 RM ON A.XN_ID =RM.RM_ID 
    JOIN LMV01106 B ON A.AC_CODE = B.AC_CODE  
    WHERE A.XN_ID = @CRMID  
    GROUP BY A.AC_CODE,B.AC_NAME,RM.REMARKS
    ORDER BY X_TYPE,ABS(SUM(AMOUNT)) DESC  
  
   --SELECT * FROM @VDC
   --RETURN
  SET @CVDID=''  
  SET @CSTEP =415   
     
  SELECT @NVDCNT=1
      
  SET @CSTEP =420  
  
  IF ISNULL(@DN_TYPE,0)=2
	SELECT @NFDNCD=(DBO.FN3SREADLEDGERTERMS(C.TERMS,4)/100.00)*A.TOTAL_AMOUNT FROM #V_PROCESS A
	JOIN RMM01106 B ON A.RM_ID=B.RM_ID
	JOIN PIM01106 C ON C.MRR_ID=B.REFMEMOID
	WHERE B.RM_ID=@CRMID
  ELSE
	SET @NFDNCD=0
	
  --CREATING VOUCHERS FOR CASH DISCOUNT IF SPECIFIED IN LEDGER TERMS...  
  INSERT @VDC ( VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE,   
	  CR_DISCOUNT_PERCENTAGE,AC_NAME)  
  SELECT @CVMID,'LATER-'+LTRIM(RTRIM(STR(@NVDCNT+1))) AS VD_ID,@CCASHDISCOUNTAC  
	 ,'(CD REVERSAL) D/N# ' + @CRMNO
	+(CASE WHEN ISNULL(@CPURBILLS,'')='' THEN '' ELSE ' AGAINST BILL# '+ISNULL(@CPURBILLS,'') END)+
	ISNULL(@CQTYNARRATION,'') AS NARRATION  
	 ,(CASE WHEN @NFDNCD=0 THEN SUM(A.CASHDISCOUNTAMOUNT) ELSE @NFDNCD END),0,'DR',@NTMPCRDISCOUNTPERCENTAGE  
	 ,B.AC_NAME      
  FROM #V_PROCESS A  
  JOIN LM01106 B ON B.AC_CODE=@CCASHDISCOUNTAC  
  WHERE A.RM_ID=@CRMID  
  GROUP BY A.RM_NO,B.AC_NAME  
  HAVING SUM(A.CASHDISCOUNTAMOUNT)<>0  OR @NFDNCD<>0
  
  SET @CVDID=''  
  SET @CSTEP =425   
    
  IF ISNULL(@DN_TYPE,0)<>2  
   INSERT @VDC ( VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE,   
       CR_DISCOUNT_PERCENTAGE,AC_NAME,ADJ_REMARKS,REF_MRR_ID)  
   SELECT @CVMID,'LATER-'+LTRIM(RTRIM(STR(@NVDCNT+2))) AS VD_ID,@CPARTYACCODE AS AC_CODE  
      ,(CASE WHEN  @CBILLTYPE='EOSSPRT' THEN 'EOSS ' ELSE '(RMDNET)' END)+'D/N# ' + @CRMNO  
     +(CASE WHEN ISNULL(@CPURBILLS,'')='' THEN '' ELSE ' AGAINST BILL# '+@CREFBILLNO END)+@CQTYNARRATION AS NARRATION  
      ,SUM(ISNULL(A.RMDNET,0)),0,'DR',0,B.AC_NAME,'DEBIT NOTE' AS ADJ_REMARKS,ISNULL(A.REF_MRR_ID,'') AS REF_MRR_ID
   FROM #V_PROCESS A  
   JOIN LM01106 B ON B.AC_CODE= @CPARTYACCODE  
   WHERE A.RM_ID=@CRMID  
   GROUP BY A.RM_NO,B.AC_NAME,ISNULL(A.REF_MRR_ID,'')  
   HAVING SUM(ISNULL(A.RMDNET,0))<>0  
        
  --CREATING VOUCHERS DETAIL FOR SUPPLIER ACCOUNT FOR DN AMOUNT DEBITED/CASH DISCOUNT CREDITED/PRTAMOUNT CREDITED  
  INSERT @VDC ( VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE,   
     CR_DISCOUNT_PERCENTAGE,AC_NAME,REF_MRR_ID,ADJ_REMARKS)  
  SELECT @CVMID,'LATER-'+LTRIM(RTRIM(STR(@NVDCNT+3))) AS VD_ID, @CPARTYACCODE AS AC_CODE  
     ,'(CD REVERSAL) D/N# ' + @CRMNO  
    +(CASE WHEN ISNULL(@CPURBILLS,'')='' THEN '' ELSE ' AGAINST BILL# '+@CREFBILLNO END)+@CQTYNARRATION AS NARRATION  
     ,0,SUM(A.CASHDISCOUNTAMOUNT),'CR',0  
     ,B.AC_NAME,ISNULL(A.REF_MRR_ID,'') AS REF_MRR_ID,'(CD REVERSAL)' AS ADJ_REMARKS
  FROM #V_PROCESS A  
  JOIN LM01106 B ON B.AC_CODE= @CPARTYACCODE  
  WHERE A.RM_ID=@CRMID  
  GROUP BY A.RM_NO,B.AC_NAME,ISNULL(A.REF_MRR_ID,'')  
  HAVING SUM(A.CASHDISCOUNTAMOUNT)<>0  

  UNION ALL  
  SELECT @CVMID,'LATER-'+LTRIM(RTRIM(STR(@NVDCNT+6))) AS VD_ID, @CPARTYACCODE AS AC_CODE  
     ,'(CD REVERSAL AGST. TERMS) D/N# ' + @CRMNO  +(CASE WHEN ISNULL(@CPURBILLS,'')='' THEN '' ELSE ' AGAINST BILL# '+@CREFBILLNO END)+
    ISNULL(@CQTYNARRATION,'') AS NARRATION  
     ,0,@NFDNCD,'CR',0  
     ,B.AC_NAME,ISNULL(A.REF_MRR_ID,'') AS REF_MRR_ID,'(CD REVERSAL AGST. TERMS)' AS ADJ_REMARKS      
  FROM #V_PROCESS A  
  JOIN LM01106 B ON B.AC_CODE= @CPARTYACCODE  
  WHERE A.RM_ID=@CRMID AND @NFDNCD<>0 
  GROUP BY A.RM_NO,B.AC_NAME,ISNULL(A.REF_MRR_ID,'')  
  
  
  UNION ALL
 
  SELECT @CVMID,'LATER-'+LTRIM(RTRIM(STR(@NVDCNT+4))) AS VD_ID, @CPARTYACCODE AS AC_CODE  
     ,'D/N# ' + @CRMNO
    +'(FDN AMOUNT)'+(CASE WHEN ISNULL(@CPURBILLS,'')='' THEN '' ELSE ' AGAINST BILL# '+@CREFBILLNO END)+@CQTYNARRATION AS NARRATION  
     ,0,SUM(A.PRTAMOUNT),'CR',0  
     ,B.AC_NAME,ISNULL(A.REF_MRR_ID,'') AS REF_MRR_ID,'(FDN AMOUNT)' AS ADJ_REMARKS      
  FROM #V_PROCESS A  
  JOIN LM01106 B ON B.AC_CODE= @CPARTYACCODE  
  WHERE A.RM_ID=@CRMID  
  GROUP BY A.RM_NO,B.AC_NAME,ISNULL(A.REF_MRR_ID,'')  
  HAVING SUM(A.PRTAMOUNT)<>0  
  UNION ALL  
  SELECT @CVMID,'LATER-'+LTRIM(RTRIM(STR(@NVDCNT+5))) AS VD_ID,ISNULL(@CFINPRTAC,@CSETOFFACCODE) AS AC_CODE  
     ,'D/N# ' + @CRMNO  
    +'(FDN AMOUNT)'+(CASE WHEN ISNULL(@CPURBILLS,'')='' THEN '' ELSE ' AGAINST BILL# '+@CREFBILLNO END)+@CQTYNARRATION AS NARRATION  
     ,SUM(A.PRTAMOUNT),0,'DR',0  
     ,B.AC_NAME,'' AS REF_MRR_ID,'' AS ADJ_REMARKS      
  FROM #V_PROCESS A  
  JOIN LM01106 B ON B.AC_CODE= ISNULL(@CFINPRTAC,@CSETOFFACCODE)  
  WHERE A.RM_ID=@CRMID  
  GROUP BY A.RM_NO,B.AC_NAME  
  HAVING SUM(A.PRTAMOUNT)<>0     
         
                 
     SET @CSTEP = 430  
     SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC  
     WHERE VM_ID = @CVMID  
                   
     SET @CSTEP = 440  
     SET @NTOTQUANTITY= 0  
     SET @NTOTNETAMOUNT = 0  
       
     SET @CSTEP = 450      
        SET @CVOUCHERNO = ''   
        SELECT TOP 1 @CVOUCHERNO = VOUCHER_NO FROM VM01106 WHERE VM_ID = @CVMID  
        IF ISNULL(@CVOUCHERNO,'') = ''  
   SET @CVOUCHERNO = @CVMID  
    
        SET @CSTEP = 460  
        INSERT @VMC ( VM_ID,VOUCHER_NO,VOUCHER_DT, VOUCHER_CODE, DEPT_ID,   
       BILL_TYPE, BILL_NO, BILL_ID, BILL_DT, BILL_AC_CODE,   
       PARTY_NAME, QUANTITY, NET_AMOUNT, RM_LIST, CANCELLED,DRTOTAL,CRTOTAL  
       ,VOUCHER_TYPE,DEPT_NAME,BILL_STATUS )  
  SELECT @CVMID,@CVOUCHERNO,A.RM_DT,@CVOUCHERCODE,A.DEPT_ID,@CBILLTYPE,A.RM_NO,A.RM_ID,A.RM_DT,A.AC_CODE  
     ,B.AC_NAME,SUM(A.QUANTITY),A.TOTAL_AMOUNT-SUM(A.DED_AMOUNT),ISNULL(@CPURBILLS,''),A.CANCELLED,  
     @NDRTOTAL,@NCRTOTAL,'DEBIT NOTE',C.DEPT_NAME,'NEW'  
  FROM #V_PROCESS A  
  JOIN LM01106 B ON A.AC_CODE=B.AC_CODE  
  JOIN LOCATION C ON A.DEPT_ID=C.DEPT_ID  
  WHERE A.RM_ID=@CRMID    
  GROUP BY A.RM_DT,A.DEPT_ID,A.RM_NO,A.RM_ID,A.RM_DT,A.AC_CODE  
     ,B.AC_NAME,A.TOTAL_AMOUNT,C.DEPT_NAME,A.CANCELLED  
    

  --IF @CRMID='GH0111800000GH00000007'
  --BEGIN
  --		SELECT @CRMID,IGST_XN_AC_CODE,-PURAMOUNT
		--FROM #V_PROCESS
		--WHERE RM_ID=@CRMID AND @CLOCGSTSTATECODE<>@CPARTYGSTSTATECODE
  --	SELECT AC_NAME,A.* FROM  @VCHC A LEFT OUTER JOIN LM01106 B ON A.AC_CODE=B.AC_CODE
  --END	

     
	 SET @CSTEP = 460  
	 DELETE @VCHC  
	  
  
     
     PRINT 'POSTING FOR PURCHASE RETURN -5.9:('+@CRMID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE
     	
     DELETE FROM #V_PROCESS WHERE RM_ID = @CRMID AND XN_TYPE=@CXNTYPE	 
 END         
 
 ------- START OF WORKING OF BILL BY BILL ENTRIES POSTING    
 
  IF ISNULL(@DN_TYPE,0)=2 OR @CPOSTBILLBYBILLREFTYPE='2' 
   BEGIN   
		PRINT 'POSTING FOR PURCHASE RETURN -5.0.1:('+@CRMID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE
		SET @CSTEP = 500
	    INSERT @TBILL_BY_BILL_REF  
		(VM_ID,VD_ID,REF_NO,AMOUNT,LAST_UPDATE,X_TYPE,CR_DAYS,ADJ_REMARKS)  
	      
		SELECT A.VM_ID,VD_ID,DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,LTRIM(RTRIM(B.BILL_NO)),B.BILL_DT,'DR',@CVMID) AS REF_NO,  
		SUM(DEBIT_AMOUNT-CREDIT_AMOUNT) AS AMOUNT,GETDATE(),'' AS X_TYPE,
		A.CREDIT_DAYS,ADJ_REMARKS  
		FROM @VDC   A 
		JOIN @VMC B ON A.VM_ID=B.VM_ID
		JOIN LMP01106 C ON C.AC_CODE=A.AC_CODE
		WHERE BILL_BY_BILL=1
		GROUP BY A.VM_ID,A.VD_ID,A.CREDIT_DAYS,ADJ_REMARKS,A.AC_CODE,B.BILL_NO,B.BILL_DT  
   END  
   ELSE 
   BEGIN  
	 SET @CSTEP = 465  
	 IF OBJECT_ID('TEMPDB..#TMPMEMOS','U') IS NOT NULL
		DROP TABLE #TMPMEMOS
	 
	 SELECT A.VM_ID,B.MEMO_ID,A.AC_CODE,DN_TYPE,RM_NO,RM_DT,D.REF_NO,ISNULL(A.REF_MRR_ID,'') AS REF_MRR_ID INTO #TMPMEMOS FROM @VDC A 
	 JOIN POSTACT_VOUCHER_LINK VL ON A.REF_MRR_ID=VL.MEMO_ID
	 JOIN VD01106 C ON C.VM_ID=VL.VM_ID AND C.AC_CODE=A.AC_CODE
	 JOIN BILL_BY_BILL_REF D ON D.VD_ID=C.VD_ID
	 JOIN VM01106 E ON E.VM_ID=C.VM_ID
	 JOIN @VLINK B ON B.VM_ID=A.VM_ID
	 JOIN RMM01106 F ON F.RM_ID=B.MEMO_ID
	 JOIN LMP01106 LMP ON LMP.AC_CODE=A.AC_CODE
	 WHERE ISNULL(A.REF_MRR_ID,'')<>'' AND VL.XN_TYPE='PUR' AND E.CANCELLED=0 AND LMP.BILL_BY_BILL=1
	 AND  B.XN_TYPE='PRT' AND ISNULL(A.REF_MRR_ID,'')<>''
	 GROUP BY A.VM_ID,B.MEMO_ID,A.AC_CODE,DN_TYPE,RM_NO,RM_DT,D.REF_NO,ISNULL(A.REF_MRR_ID,'')
	 UNION
	 SELECT A.VM_ID,B.MEMO_ID,A.AC_CODE,DN_TYPE,RM_NO,RM_DT,'' AS REF_NO,ISNULL(A.REF_MRR_ID,'') FROM @VDC A 
	 LEFT OUTER JOIN 
	 (SELECT C.REF_MRR_ID FROM POSTACT_VOUCHER_LINK VL
	  JOIN VD01106 B ON B.VM_ID=VL.VM_ID
	  JOIN @VDC C ON C.AC_CODE=B.AC_CODE AND C.REF_MRR_ID=VL.MEMO_ID
	  JOIN VM01106 D ON D.VM_ID=B.VM_ID
	  WHERE VL.XN_TYPE='PUR' AND CANCELLED=0) C ON C.REF_MRR_ID=A.REF_MRR_ID    
	  JOIN @VLINK B ON B.VM_ID=A.VM_ID
	 JOIN RMM01106 F ON F.RM_ID=B.MEMO_ID
	 JOIN LMP01106 LMP ON LMP.AC_CODE=A.AC_CODE
	 WHERE LMP.BILL_BY_BILL=1 AND  B.XN_TYPE='PRT' AND C.REF_MRR_ID IS NULL
	 GROUP BY A.VM_ID,B.MEMO_ID,A.AC_CODE,DN_TYPE,RM_NO,RM_DT,ISNULL(A.REF_MRR_ID,'')
	 
	 
	 --SELECT 'MEMOS CHECK',* FROM #TMPMEMOS 
	 SET @CSTEP = 470  
	  	
	 DECLARE @BMAINLOOP BIT
	 
	 SET @BMAINLOOP=0 
	 WHILE @BMAINLOOP=0
	 BEGIN
	   
	   SET @CSTEP = 480  
	   SET @CRMID=''
	   		
	   SELECT TOP 1 @CVMID=VM_ID,@CPARTYACCODE=AC_CODE,@CRMID=MEMO_ID,@CPARTYACCODE=AC_CODE,
					@DN_TYPE=DN_TYPE,@CRMNO=RM_NO,@DRMDT=RM_DT,@CREFMRRID=REF_MRR_ID,@CREFBILLNO=REF_NO FROM #TMPMEMOS
	   
	   
	   IF ISNULL(@CRMID,'')=''
			BREAK
	   
	   PRINT 'POSTING FOR PURCHASE RETURN -5.0:('+@CRMID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE
	   
	   BEGIN  
			SELECT @BLOOP=0
			PRINT 'POSTING FOR PURCHASE RETURN -5.1:('+@CRMID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE+' REF BILL#'+@CREFBILLNO
      		 SET @NPURAMOUNT=0
			
			 --SELECT 'BEFORE CHECKING BILLS',* FROM @VDC WHERE VM_ID=@CVMID
					 
			 SET @CSTEP = 520
			 SELECT @NPURAMOUNT=SUM(DEBIT_AMOUNT-CREDIT_AMOUNT) FROM @VDC WHERE VM_ID=@CVMID AND AC_CODE=@CPARTYACCODE
			 AND REF_MRR_ID=@CREFMRRID
			 
			 SELECT @NCTRBB=1,@CSEARCHREFBILLTYPE='PUR'
		        
			 WHILE @NCTRBB<=(CASE WHEN @NEXCEPTIONTYPE<>2 THEN 2 ELSE 1 END) 
			 BEGIN  
				  SELECT @CRETREFBILLNO=''  
			      
				  SET @CSTEP = 530
				  PRINT 'POSTING FOR PURCHASE RETURN -5.2:('+@CRMID+')'+CONVERT(VARCHAR,GETDATE(),113)+' REF BILL#'+@CREFBILLNO+' FOR AMOUNT:'+STR(@NPURAMOUNT,10,2)      
			      
			              
				  SELECT TOP 1 @CRETREFBILLNO=A.REF_NO FROM BILL_BY_BILL_REF A   
				  JOIN VD01106 B WITH  (INDEX=IND_VD_AC_CODE)  ON A.VD_ID=B.VD_ID  
				  JOIN VM01106 C ON C.VM_ID=B.VM_ID  
			  
				  LEFT OUTER JOIN   
				  (SELECT A.REF_NO, SUM( CASE WHEN A.X_TYPE = 'CR' THEN -A.AMOUNT ELSE A.AMOUNT END) AS ADJ_AMT  
				  FROM BILL_BY_BILL_REF A  
				  JOIN VD01106 B WITH  (INDEX=IND_VD_AC_CODE) ON A.VD_ID = B.VD_ID  
				  JOIN VM01106 C ON B.VM_ID = C.VM_ID  
				  WHERE B.AC_CODE=@CPARTYACCODE AND C.CANCELLED = 0 AND A.X_TYPE='DR'
				  GROUP BY A.REF_NO) E ON E.REF_NO=A.REF_NO  
				  LEFT OUTER JOIN   
				  (  
				   SELECT REF_BILL_NO,SUM(ADJ_AMT) AS ADJ_AMT FROM   
				  (SELECT A.REF_BILL_NO AS REF_BILL_NO,SUM(DEBIT_AMOUNT-CREDIT_AMOUNT) AS ADJ_AMT  
				   FROM @VDC A  
				   WHERE A.AC_CODE=@CPARTYACCODE AND  A.VM_ID=@CVMID AND A.REF_MRR_ID=@CREFMRRID
				   GROUP BY A.REF_BILL_NO  
				   UNION ALL  
				   SELECT A.REF_NO,SUM(AMOUNT) AS ADJ_AMT  
				   FROM @TBILL_BY_BILL_REF A  
				   JOIN @VDC B ON A.VD_ID=B.VD_ID  
				   WHERE B.AC_CODE=@CPARTYACCODE AND B.VM_ID<>@CVMID  
				   GROUP BY A.REF_NO) A GROUP BY REF_BILL_NO   
				   )  F ON F.REF_BILL_NO=A.REF_NO  
			             
				  WHERE B.AC_CODE=@CPARTYACCODE AND ((@NCTRBB=1 AND A.REF_NO=@CREFBILLNO)   
				  OR (@NCTRBB=2 AND A.REF_NO<>@CREFBILLNO))    
				  AND (C.BILL_TYPE=@CSEARCHREFBILLTYPE OR LEFT(C.VM_ID,2)='OB') AND C.CANCELLED=0   
				  AND (A.AMOUNT-ISNULL(E.ADJ_AMT,0)-ISNULL(F.ADJ_AMT,0))>=@NPURAMOUNT  
			      
			      
				  SET @CSTEP = 540     
				  SET @NCTRBB=@NCTRBB+1  

				  PRINT 'POSTING FOR PURCHASE RETURN -5.3:('+@CRMID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE+'RETREFBILL#'+@CRETREFBILLNO		            
			        
				  IF ISNULL(@CRETREFBILLNO,'')<>''  
					BREAK  
			      

		        
			 END  
		       
			 PRINT 'POSTING FOR PURCHASE RETURN -5.4:('+@CRMID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE
			        
			 ---- END CHANGE ON 28-06-2016  
		     
			 SET @CSTEP = 550
			 --CREATING BILL BY BILL DETAIL FOR SUPPLIER ACCOUNT FOR DN AMOUNT DEBITED/CASH DISCOUNT CREDITED/PRTAMOUNT CREDITED        
			 INSERT @TBILL_BY_BILL_REF  
			 (VM_ID,VD_ID,REF_NO,AMOUNT,LAST_UPDATE,X_TYPE,CR_DAYS,ADJ_REMARKS)  
			 SELECT @CVMID,VD_ID,(CASE WHEN @CPOSTBILLBYBILLREFTYPE='1' AND @CRETREFBILLNO<>'' 
				THEN @CRETREFBILLNO   
				ELSE DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,LTRIM(RTRIM(@CRMNO)),@DRMDT,'DR',@CVMID) END) AS REF_NO,  
				(DEBIT_AMOUNT-CREDIT_AMOUNT) AS BILL_AMOUNT,GETDATE(),
			 (CASE WHEN (DEBIT_AMOUNT-CREDIT_AMOUNT)>0 THEN 'DR' ELSE 'CR' END),
			 A.CREDIT_DAYS,ADJ_REMARKS  
			 FROM @VDC A  
			 WHERE A.VM_ID=@CVMID AND AC_CODE=@CPARTYACCODE AND A.REF_MRR_ID=@CREFMRRID
			 
			 SET @CSTEP = 555
			 UPDATE @VMC SET BILL_STATUS=(CASE WHEN @CPOSTBILLBYBILLREFTYPE='1' AND @CRETREFBILLNO<>''  THEN 'ADJUST'   
					   ELSE 'NEW' END)  WHERE VM_ID=@CVMID
		                    
			  
			 PRINT 'POSTING FOR PURCHASE RETURN -5.5:('+@CRMID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE
			  
			  SET @CPURBILLS=NULL  
			  SELECT @CPURBILLS=ISNULL(@CPURBILLS+',','')+REF_NO
			  FROM @TBILL_BY_BILL_REF A
			  WHERE VM_ID=@CVMID
			  
			 SET @CSTEP = 560
			  IF ISNULL(@CPURBILLS,'')<>''
				  UPDATE @VDC SET NARRATION='D/N# ' +RIGHT(@CRMID,10)+' AGAINST BILL# '+@CPURBILLS
				  WHERE VM_ID=@CVMID AND ISNULL(NARRATION,'')=''
			 
			 PRINT 'POSTING FOR PURCHASE RETURN -5.6:('+@CRMID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE
			 --SELECT @CRETREFBILLNO AS BILL_NO,@CRMID,* FROM @TBILL_BY_BILL_REF   
		     
		 END ---- END OF ISNULL(@DN_TYPE,0)=2  
		
		 DELETE FROM #TMPMEMOS WHERE MEMO_ID =  @CRMID AND (REF_MRR_ID=@CREFMRRID OR @CPOSTBILLBYBILLREFTYPE='2')

	     	 
	  END ----- END OF @BMAINLOOP=0

  END
  
  SET @CSTEP = 565
  UPDATE A SET DEBIT_AMOUNT=B.DEBIT_AMOUNT,CREDIT_AMOUNT=B.CREDIT_AMOUNT FROM @VDC A
  JOIN (SELECT VM_ID,VD_ID,NARRATION,SUM(DEBIT_AMOUNT) AS DEBIT_AMOUNT,SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT
	   FROM @VDC GROUP BY VM_ID,VD_ID,NARRATION) B ON A.VM_ID=B.VM_ID AND A.VD_ID=B.VD_ID
	 
  SET @CSTEP = 570
	 DELETE A FROM @VDC A
	 JOIN LMP01106 LMP ON LMP.AC_CODE=A.AC_CODE
	 JOIN LM01106 LM ON LM.AC_CODE=A.AC_CODE
	 WHERE A.REF_MRR_ID<>(SELECT TOP 1 REF_MRR_ID FROM @VDC B WHERE B.VM_ID=A.VM_ID AND ISNULL(REF_MRR_ID,'')<>''
							AND B.NARRATION=A.NARRATION)
	 AND (BILL_BY_BILL=1 OR CHARINDEX(HEAD_CODE,@CCREDITORHEADS)>0)		   

SET @CSTEP = 575
  UPDATE A SET DRTOTAL=B.DEBIT_AMOUNT,CRTOTAL=B.CREDIT_AMOUNT FROM @VMC A
  JOIN (SELECT VM_ID,SUM(DEBIT_AMOUNT) AS DEBIT_AMOUNT,SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT
	   FROM @VDC GROUP BY VM_ID) B ON A.VM_ID=B.VM_ID

	SET @CSTEP =580
  IF OBJECT_ID('TEMPDB..#TMPBB','U') IS NOT NULL
	DROP TABLE #TMPBB
  
    SELECT  VM_ID,VD_ID,REF_NO,  
	SUM(AMOUNT) AS AMOUNT,GETDATE() AS LAST_UPDATE,X_TYPE, 
	CR_DAYS,ADJ_REMARKS  
	INTO #TMPBB FROM @TBILL_BY_BILL_REF A  
	GROUP BY VM_ID,VD_ID,REF_NO,CR_DAYS,ADJ_REMARKS,X_TYPE
	
	UPDATE #TMPBB SET X_TYPE=(CASE WHEN AMOUNT<0 THEN 'CR' ELSE 'DR' END),AMOUNT=ABS(AMOUNT)
	WHERE X_TYPE=''
	 
	DELETE FROM @TBILL_BY_BILL_REF
	 
	SET @CSTEP = 585   		
	 INSERT @TBILL_BY_BILL_REF  
	 (VM_ID,VD_ID,REF_NO,AMOUNT,LAST_UPDATE,X_TYPE,CR_DAYS,ADJ_REMARKS)  
	 SELECT VM_ID,VD_ID,REF_NO,ABS(AMOUNT),LAST_UPDATE,X_TYPE,CR_DAYS,ADJ_REMARKS
	 FROM #TMPBB 
  ------- END OF WORKING OF BILL BY BILL ENTRIES POSTING        
  
 SET @CSTEP = 590  
 PRINT 'POSTING FOR PURCHASE RETURN -5.10'
  
 INSERT @ERRORS (XN_ID,XN_TYPE,XN_NO,XN_DT,XN_AMT,XN_AC,ERR_DESC)  
 SELECT '' AS XN_ID,'PRT' AS XN_TYPE,XN_NO,XN_DT,0 AS XN_AMT,AC_NAME AS XN_AC,  
 'MISMATCH BETWEEN DEBIT TOTALS :'+LTRIM(RTRIM(STR(A.DEBIT_AMOUNT,10,2)))+' & CREDIT TOTALS :'+LTRIM(RTRIM(STR(A.CREDIT_AMOUNT,10,2)))+' LOC ID :'+A.DEPT_ID AS ERR_DESC  
 FROM (SELECT DEPT_ID,F.AC_NAME,RM_NO AS XN_NO,RM_DT AS XN_DT,SUM(DEBIT_AMOUNT) AS DEBIT_AMOUNT,SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT  
    FROM @VDC A JOIN @VMC B ON A.VM_ID=B.VM_ID  
    JOIN @VLINK D ON D.VM_ID=B.VM_ID  
    JOIN RMM01106 E ON E.RM_ID=D.MEMO_ID  
    JOIN LM01106 F ON F.AC_CODE=E.AC_CODE  
    GROUP BY DEPT_ID,RM_NO,RM_DT,F.AC_NAME  
    HAVING SUM(DEBIT_AMOUNT-CREDIT_AMOUNT)<>0) A  
	
	DELETE FROM @VDC WHERE DEBIT_AMOUNT=0 AND CREDIT_AMOUNT=0
	   
    SELECT * FROM @VMC ORDER BY BILL_NO-- BILL_DT,BILL_ID  
    SELECT * FROM @VDC ORDER BY VM_ID  
    SELECT * FROM @ERRORS  
    SELECT * FROM @VLINK ORDER BY VM_ID  
 
 
	SELECT A.*,A.REF_NO AS BILL_NO  
	FROM @TBILL_BY_BILL_REF A  
	ORDER BY VM_ID,VD_ID  
	      
 END TRY  
 
 BEGIN CATCH  
	  SELECT 'STEP:- '+@CSTEP+' '+ERROR_MESSAGE()AS  ERRMSG  
 END CATCH  
           
END  
--END OF PROCEDURE - POSTACT_PRT
