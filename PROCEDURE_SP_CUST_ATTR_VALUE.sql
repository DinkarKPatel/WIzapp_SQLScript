CREATE PROCEDURE SP_CUST_ATTR_VALUE
--WITH ENCRYPTION
AS
BEGIN
	DECLARE @CATTRIBUTECODE VARCHAR(7), @CATTRIBUTENAME VARCHAR(50), 
			@NCTR NUMERIC(10), @CALIASC VARCHAR(10), @CALIASD VARCHAR(10),
			@CATTRCOLNAME VARCHAR(MAX), 
			@CATTRJOINSTR VARCHAR(MAX), 
			@CATTRJOINSTRGRP VARCHAR(MAX), 
			@CCMD NVARCHAR(MAX), 
			@CCMD1 NVARCHAR(MAX), 
			@CCMD2 NVARCHAR(MAX), 
			@CCREATEALTER VARCHAR(10),
			@CCMDCRTATTRGRPVIEW NVARCHAR(MAX), 
			@CCMDCRTATTRVALUE NVARCHAR(MAX),
			@CDATABASE VARCHAR(50), 
			@CVALUE VARCHAR(50), 
			@CCMDCRTRFVIEW NVARCHAR(MAX),
			@CCMDALIAS NVARCHAR(MAX), 
			@CATTRCOLNAMEALIAS VARCHAR(MAX), 
			@CCMDCRTATTRALIASVALUE NVARCHAR(MAX),
			@CATTREXPR VARCHAR(MAX),@NATTRMODE INT

	DECLARE ABC CURSOR FOR
	SELECT ATTRIBUTE_CODE, ATTRIBUTE_NAME,ISNULL(ATTRIBUTE_MODE,0) AS ATTRIBUTE_MODE 
	FROM ATTRM WHERE ATTRIBUTE_TYPE = 3 AND ATTRIBUTE_CODE<>'0000000'
	AND ATTRIBUTE_NAME<>''
	
	SET @NCTR = 1
	SET @CCMD = N''
	SET @CCMD1= N''
	SET @CCMD2= N''
	SET @CCMDALIAS = N''
	
	OPEN ABC
	FETCH NEXT FROM ABC INTO @CATTRIBUTECODE, @CATTRIBUTENAME ,@NATTRMODE 
	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @CALIASC	= 'C' + CONVERT(VARCHAR(10), @NCTR)
		SET @CALIASD	= 'D' + CONVERT(VARCHAR(10), @NCTR)

		SET @CCMD = @CCMD + 
					(CASE WHEN @CCMD<>'' THEN ', '+CHAR(13) ELSE '' END) +
						N'(CASE WHEN  '+ @CALIASC + '.ATTRIBUTE_CODE = ''' + @CATTRIBUTECODE + ''' 
								AND '+LTRIM(RTRIM(STR(@NATTRMODE)))+'<>2							
					  THEN ISNULL('+@CALIASD+'.KEY_NAME,'''')
							    WHEN  '+ @CALIASC + '.ATTRIBUTE_CODE = ''' + @CATTRIBUTECODE + ''' 
								AND '+LTRIM(RTRIM(STR(@NATTRMODE)))+'=2							
					  THEN ISNULL('+@CALIASC+'.KEY_NAME,'''') ELSE '''' END) AS [' + @CATTRIBUTENAME+']'

		SET @CCMDALIAS = @CCMDALIAS + 
					(CASE WHEN @CCMDALIAS<>'' THEN ', '+CHAR(13) ELSE '' END) +
						N'(CASE WHEN  '+ @CALIASC + '.ATTRIBUTE_CODE = ''' + @CATTRIBUTECODE + '''
					  THEN '+ISNULL(@CALIASD,'')+ '.KEY_ALIAS ELSE '''' END ) AS [' + @CATTRIBUTENAME+'_ALIAS]'
					  		

		SET @CCMD1 = @CCMD1 + 
					(CASE WHEN @CCMD1<>'' THEN ' '+CHAR(13) ELSE '' END) +
					   N' LEFT OUTER JOIN CUST_ATTR ' + @CALIASC + ' ON A.CUSTOMER_CODE = ' 
					   + @CALIASC + '.CUSTOMER_CODE AND ' + @CALIASC + '.ATTRIBUTE_CODE = ''' + @CATTRIBUTECODE + ''' 
					   LEFT OUTER JOIN ATTR_KEY ' + @CALIASD + ' ON ' + @CALIASC + '.KEY_CODE = ' + @CALIASD + '.KEY_CODE '

		SET @CCMD2 = @CCMD2 + 
					(CASE WHEN @CCMD2<>'' THEN ' '+CHAR(13) ELSE '' END) +
					 N' LEFT OUTER JOIN ART_GRP_ATTR ' + @CALIASC + ' ON A.ARTICLE_GROUP_CODE = ' + @CALIASC + 
					 '.ARTICLE_GROUP_CODE AND ' + @CALIASC + '.ATTRIBUTE_CODE = ''' + @CATTRIBUTECODE + '''
					 LEFT OUTER JOIN ATTR_KEY ' + @CALIASD + ' ON ' + @CALIASC + '.KEY_CODE = ' + @CALIASD + '.KEY_CODE '
		
		SET @NCTR = @NCTR + 1

		FETCH NEXT FROM ABC INTO @CATTRIBUTECODE, @CATTRIBUTENAME,@NATTRMODE 
	END
	CLOSE ABC
	DEALLOCATE ABC
	SET @CATTRCOLNAME		= @CCMD
	SET @CATTRCOLNAMEALIAS	= @CCMDALIAS
	SET @CATTRJOINSTR		= @CCMD1
	SET @CATTRJOINSTRGRP	= @CCMD2
	
	
	PRINT 'CREATING VIEW CUST_ATTR_VALUE...'

	SET @CCREATEALTER = ''

	IF EXISTS( SELECT NAME FROM SYSOBJECTS WHERE NAME = 'CUST_ATTR_VALUE' )
		SET @CCREATEALTER = 'ALTER'
	ELSE
		SET @CCREATEALTER = 'CREATE'
	
	SET @CATTREXPR=' SELECT ' + @CATTRCOLNAME + 
				  (CASE WHEN @CATTRCOLNAME<>'' THEN ', ' ELSE '' END) + 
				  ' A.CUSTOMER_CODE AS CUST_CODE ' + 
				  ' FROM CUSTDYM A '+ @CATTRJOINSTR

	SET @CCMDCRTATTRVALUE = @CCREATEALTER + ' VIEW CUST_ATTR_VALUE ' + CHAR(13)+
							  ' AS ' + CHAR(13)+ @CATTREXPR
	
	PRINT @CCMDCRTATTRVALUE
	EXEC SP_EXECUTESQL @CCMDCRTATTRVALUE
	
	DELETE FROM CUST_ATTR_VALUE_STR
	
	INSERT CUST_ATTR_VALUE_STR (COLUMNS_LIST,JOINSTR) 
	SELECT @CATTRCOLNAME,@CATTRJOINSTR
END		
--************************ END OF PROCEDURE SP_CUST_ATTR_VALUE
