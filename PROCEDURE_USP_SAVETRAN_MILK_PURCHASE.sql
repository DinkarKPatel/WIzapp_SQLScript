
/*
CREATE BY  : JAI RAM KUMAR
CREATE DATE: 12-JAN-2017

PURPOSE :- INSERT AND UPDATE MILK PURCHASE DETAILS
LOGIC:-    
         1:-PASS MODE TUPE IS INTEGER
            1 :- INSERT 
            2 :-UPDATE
         2:-FIRST GET PRODUCT CODE OF MILK, FSN AND FAT FROM CONFIG TABLE. IF IT IS NOT AVAILABLE 
            THEN STATEMENT SHOULD BE TERMINATE
         3:-WHEN WE INSERT NEW RECORDS FIRST WE GENERATE MEMO_ID AND MEMO_NO
            FROM GETNEXTKEY KEY PROCEDURE, IF IT IS NOT GENERATED, STATEMENT SHOULD BE TERMINATE
         4:-USING TRANSACTION ITS MENDATORY BECAUSE WE INSERT AND UPDATE STOCK
         5:-FIRST INSERT OR UPDATE DATA FROM MILK_PURCHASE_MST. AFTER THAT INSERT OR UPDATE INTO 
            MILK_PURCHASE_DET TABLE AND FINALY INSERT OR UPDATE INTO STOCK TABLE PMT01106
         6:-TRANSACTION COMMITED OR ROLLBACK 
         7:USE TRY CATCH 
         8:-SEND CONFIRMATION MEMO_ID INTO OUTPUT PARAMATER FOR DETAILS SAVED SUCESSFULLY.
         
*/
CREATE PROCEDURE DBO.USP_SAVETRAN_MILK_PURCHASE
(
 @MODE           INT      
,@MEMO_ID        VARCHAR(100)=''
,@NSPID			 INT = 0
,@CFINYEAR        VARCHAR(50)
,@CDEPT_ID        VARCHAR(2)=''
)
----WITH ENCRYPTION
AS
 BEGIN TRY
   --DECLARE LOCAL VARIABLE
   DECLARE @MILK_PRODUCT_CODE VARCHAR(100)
          ,@FSN_PRODUCT_CODE  VARCHAR(100)
          ,@FAT_PRODUCT_CODE  VARCHAR(100)
          ,@CLOCATION         VARCHAR(100)
          ,@CMEMO_NO          VARCHAR(20)
          ,@CMEMO_NO_FIELD    VARCHAR(20)
          ,@CMEMO_NO_PREFIXE  VARCHAR(20)
          ,@NMEMO_NO_LENGTH   NUMERIC(20,0)
          ,@NSAVETRANLOOP     INT
          ,@CMASTERTABLENAME  VARCHAR(200)
          ,@CDETAILSTABLES    VARCHAR(200)
          ,@UPLOADMASTERTABLE VARCHAR(200)
          ,@UPLOADDETAILTABLE VARCHAR(200)
          ,@CDBSOURCE         VARCHAR(100)
          ,@FILTER            VARCHAR(200)
          ,@CMEMONOVAL        VARCHAR(50)
          ,@STRQUERY          NVARCHAR(MAX)
          ,@CLOCATIONID       VARCHAR(100)
          ,@CMEMO_ID_NEW      VARCHAR(100)
          ,@MILK_QTY          DECIMAL(9,3)  
     	  ,@FSN_QTY           DECIMAL(9,3)  
		  ,@FAT_QTY           DECIMAL(9,3)  
		  ,@FIN_YEAR          VARCHAR(20)
		  ,@REP_ID            CHAR(10)
		  ,@DEPT_ID           CHAR(2)
		  ,@BIN_ID            CHAR(3)
		  ,@CKEYFIELD1        VARCHAR(100)
		  ,@CMEMO_NO_EDIT     VARCHAR(100)
		  ,@STEP              VARCHAR(10)
		  ,@ERROR_MSG         VARCHAR(MAX)
		  ,@OLD_MILK_QTY DECIMAL(9,3)
          ,@OLD_FSN_QTY  DECIMAL(9,3)
          ,@OLD_FAT_QTY  DECIMAL(9,3)
          ,@NEW_MILK_QTY DECIMAL(9,3)
          ,@NEW_FSN_QTY  DECIMAL(9,3)
          ,@NEW_FAT_QTY  DECIMAL(9,3)
   SET @STEP=1		  
   SET @ERROR_MSG='';
   

   SELECT @MILK_PRODUCT_CODE=VALUE FROM CONFIG WHERE CONFIG_OPTION='MILKPRODUCTCODE'
   SELECT @FSN_PRODUCT_CODE=VALUE FROM CONFIG WHERE CONFIG_OPTION='FSNPRODUCTCODE' 
   SELECT @FAT_PRODUCT_CODE=VALUE FROM CONFIG WHERE CONFIG_OPTION='FATPRODUCTCODE' 

   SET @CMASTERTABLENAME='MILK_PURCHASE_MST'
   SET @CDETAILSTABLES='MILK_PURCHASE_DET'
   SET @UPLOADMASTERTABLE='MLK_MILK_PURCHASE_MST_UPLOAD'
   SET @UPLOADDETAILTABLE='MLK_MILK_PURCHASE_DET_UPLOAD'
   SET @CDBSOURCE= ''
   SET @CKEYFIELD1='MEMO_ID'
   SET @CMEMO_NO_FIELD='MEMO_NO'
   SET @NMEMO_NO_LENGTH=10
   
   ------SELECT LOCATION VALUES------------
   SET @STEP=2
   IF ISNULL(@CDEPT_ID,'')=''
   SELECT @CLOCATIONID=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
   ELSE
   SET @CLOCATIONID=@CDEPT_ID

   SET @CMEMO_NO_PREFIXE=@CLOCATIONID;
  
   --SELECT QTY FROM DETAILS TABLE FOR FURTHER USED -------------
   SET @STEP=3
   SELECT @MILK_QTY=ISNULL(MILK_QTY,0),@FSN_QTY=ISNULL(FSN_QTY,0),@FAT_QTY=ISNULL(FAT_QTY ,0)
   FROM DBO.MLK_MILK_PURCHASE_DET_UPLOAD WITH(NOLOCK) WHERE SP_ID=@NSPID
   --SELECT FIN YEAR FROM MASTER TABLE OF UPLOAD------
   SELECT @CMEMO_NO_EDIT=MEMO_NO FROM DBO.MLK_MILK_PURCHASE_MST_UPLOAD WITH(NOLOCK) WHERE SP_ID=@NSPID
   
   SET @FIN_YEAR=@CFINYEAR;
   
   IF ISNULL(@NSPID,0)=0
      BEGIN
       SET @STEP=4
       SET @ERROR_MSG='ERROR || PLEASE PROVIDE SPID';
       GOTO PROC_END;
      END
   IF ISNULL(@CLOCATIONID,'')=''
      BEGIN
       SET @STEP=5
       SET @ERROR_MSG='ERROR || LOCATION ID IS NOT EXISTS INTO CONFIG TABLE';
       GOTO PROC_END;
      END
   IF ISNULL(@MODE,0)= 0
      BEGIN
       SET @STEP=6
       SET @ERROR_MSG='ERROR || PLEASE PROVIDE MODE FOR ACTION MODE VALE NULL OR 0 IS NOT ACEPTABLE';
       GOTO PROC_END;
      END
   IF ISNULL(@MILK_PRODUCT_CODE,'')='' OR ISNULL(@FSN_PRODUCT_CODE,'')='' OR ISNULL(@FAT_PRODUCT_CODE,'')=''
      BEGIN
       SET @STEP=7
       SET @ERROR_MSG='ERROR || PRODUCT CODE ARE NOT EXISTS INTO CONFIG TABLE';
       GOTO PROC_END;
      END
   IF @MODE=1  -- FOR INSERT NEW RECORDS
     BEGIN
       --GENERATE NEW MEMO_NO--
       --IF NEWLY GENERATED MEMO_NO ALREADY EXISTS INTO MASTER TABLE THEN ITS GENERATED ANOTHER
       --MEMO_NO TILL ITS NOT DIFFERENCE FROM MASTER TABLE
       SET @STEP=8
       SET @NSAVETRANLOOP = 0
        WHILE @NSAVETRANLOOP = 0
         BEGIN
           SET @STEP=9
           EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMO_NO_FIELD, @NMEMO_NO_LENGTH, @CMEMO_NO_PREFIXE, 1,
                @FIN_YEAR,0, @CMEMONOVAL OUTPUT 
           -- BELOW QUERY CHECKED NEWLY GENERATED MEMO_NO ARE EXIST IN MASTER TABLE 
           --IF EXIST THEN RE-GENERATE NEW MEMO_NO
           SET @STEP=10
           SET @STRQUERY=N'IF EXISTS ( SELECT '+@CMEMO_NO_FIELD+' FROM '+@CMASTERTABLENAME+' 
                      WHERE '+@CMEMO_NO_FIELD+'='''+@CMEMONOVAL+'''
                      AND FIN_YEAR = '''+@FIN_YEAR+''' )
                       SET @NLOOPOUTPUT=0
                      ELSE
                       SET @NLOOPOUTPUT=1'
          -- PRINT @STRQUERY
           SET @STEP=11
           EXEC SP_EXECUTESQL @STRQUERY, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT 
           SET @CMEMO_NO=@CMEMONOVAL;
         END
      IF ISNULL(@CMEMONOVAL,'')=''
         BEGIN
           SET @STEP=12
           SET @ERROR_MSG='ERROR || MEMO NO NOT GENERATED SOMTHING WRONG IN INPUT PARAMATER';
           GOTO PROC_END;
         END
      SET @CMEMO_ID_NEW = @CLOCATIONID + @FIN_YEAR+ REPLICATE('0', 15-LEN(LTRIM(RTRIM(@CMEMONOVAL)))) + LTRIM(RTRIM(@CMEMONOVAL))
      IF ISNULL(@CMEMO_ID_NEW,'')=''
         BEGIN
          SET @STEP=13
          SET @ERROR_MSG='ERROR || MEMO ID IS NOT GENERATED KINDLY CEHECKED INPUT PARAMATERS';
          GOTO PROC_END;
         END
       --UPDATE MEMO_ID AND MEMO_NO INTO MASTER TABLE OF UPLOAD------
       SET @STEP=14
       SET @STRQUERY=N'UPDATE ['+@UPLOADMASTERTABLE+'] SET MEMO_ID='''+@CMEMO_ID_NEW+''' 
                       ,MEMO_NO='''+@CMEMO_NO+''',CANCELED=0 WHERE SP_ID='''+CAST(@NSPID AS VARCHAR(10))+'''   '
       EXEC SP_EXECUTESQL @STRQUERY
       --UPDATE MEMO_ID  INTO DETAILS TABLE OF UPLOAD------
       SET @STEP=15
       SET @STRQUERY =N'UPDATE ['+@UPLOADDETAILTABLE+'] SET MEMO_ID='''+@CMEMO_ID_NEW+''' WHERE SP_ID='+CAST(@NSPID AS VARCHAR(10))+''
       EXEC SP_EXECUTESQL @STRQUERY
       
       BEGIN TRANSACTION
        ----INSERT DETAILS INTO MILK_PURCHASE_MST TABLE-------------------- 
        SET @STEP=16
		SET @FILTER=' B.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
        EXEC UPDATEMASTERXN 
				  @CSOURCEDB	= @CDBSOURCE
				, @CSOURCETABLE = @UPLOADMASTERTABLE
				, @CDESTDB		= ''
				, @CDESTTABLE	= @CMASTERTABLENAME
				, @CKEYFIELD1	= @CKEYFIELD1
				, @BALWAYSUPDATE = 1
				, @CFILTERCONDITION=@FILTER
      ----INSERT DETAILS INTO MILK_PURCHASE_DET TABLE-------------------- 
          SET @STEP=17
          EXEC UPDATEMASTERXN 
				  @CSOURCEDB	= @CDBSOURCE
				, @CSOURCETABLE = @UPLOADDETAILTABLE
				, @CDESTDB		= ''
				, @CDESTTABLE	= @CDETAILSTABLES
				, @CKEYFIELD1	= @CKEYFIELD1
				, @BALWAYSUPDATE = 1
				, @CFILTERCONDITION=@FILTER
      -------INSERT AND UPDATE MILK STOCK INTO PMT01106 TABLE-------------
      IF ISNULL(@MILK_QTY,0)<> 0
         BEGIN
          SET @STEP=18
          IF NOT EXISTS(SELECT * FROM DBO.PMT01106 L WITH(NOLOCK) WHERE L.PRODUCT_CODE = @MILK_PRODUCT_CODE)
             INSERT INTO DBO.PMT01106(LAST_UPDATE,REP_ID,PRODUCT_CODE,QUANTITY_IN_STOCK,DEPT_ID,BIN_ID)
             VALUES(GETDATE(),@REP_ID,@MILK_PRODUCT_CODE,@MILK_QTY,@DEPT_ID,@BIN_ID)
          ELSE
             UPDATE DBO.PMT01106  SET QUANTITY_IN_STOCK=QUANTITY_IN_STOCK+ISNULL(@MILK_QTY,0)
             WHERE PRODUCT_CODE=@MILK_PRODUCT_CODE
           
         END
       -------INSERT AND UPDATE FSN STOCK INTO PMT01106 TABLE-------------
      IF ISNULL(@FSN_QTY,0)<> 0
         BEGIN
          SET @STEP=19
          IF NOT EXISTS(SELECT * FROM DBO.PMT01106 L WITH(NOLOCK) WHERE L.PRODUCT_CODE = @FSN_PRODUCT_CODE)
             INSERT INTO DBO.PMT01106(LAST_UPDATE,REP_ID,PRODUCT_CODE,QUANTITY_IN_STOCK,DEPT_ID,BIN_ID)
             VALUES(GETDATE(),@REP_ID,@FSN_PRODUCT_CODE,@FSN_QTY,@DEPT_ID,@BIN_ID)
          ELSE
             UPDATE DBO.PMT01106  SET QUANTITY_IN_STOCK=QUANTITY_IN_STOCK+ISNULL(@FSN_QTY,0)
             WHERE PRODUCT_CODE=@FSN_PRODUCT_CODE
           
         END
      -------INSERT AND UPDATE FAT STOCK INTO PMT01106 TABLE-------------
      IF ISNULL(@FAT_QTY,0)<> 0
         BEGIN
          SET @STEP=20
          IF NOT EXISTS(SELECT * FROM DBO.PMT01106 L WITH(NOLOCK) WHERE L.PRODUCT_CODE = @FAT_PRODUCT_CODE)
             INSERT INTO DBO.PMT01106(LAST_UPDATE,REP_ID,PRODUCT_CODE,QUANTITY_IN_STOCK,DEPT_ID,BIN_ID)
             VALUES(GETDATE(),@REP_ID,@FAT_PRODUCT_CODE,@FAT_QTY,@DEPT_ID,@BIN_ID)
          ELSE
             UPDATE DBO.PMT01106  SET QUANTITY_IN_STOCK=QUANTITY_IN_STOCK+ISNULL(@FAT_QTY,0)
             WHERE PRODUCT_CODE=@FAT_PRODUCT_CODE
           
         END 
       SET @STEP=21
       COMMIT TRANSACTION;    
         
        SELECT @ERROR_MSG AS [ERRMSG],@CMEMO_ID_NEW AS [MEMO_ID] 
     END
   IF @MODE = 2 --FOR UPDATE DETAILS
     BEGIN
      IF ISNULL(@MEMO_ID,'')=''
         BEGIN
          SET @STEP=22
          SET @ERROR_MSG='ERROR || MEMO ID IS NOT NULL, KINDLY PROVIDE MEMO ID';
          GOTO PROC_END;
         END
	  IF ISNULL(@CMEMO_NO_EDIT,'')=''
		 BEGIN
		  SET @STEP=23
		  SET @ERROR_MSG='ERROR || MEMO NO NOT EXIST IN UPLOAD TABLE KINDLY UPDATE';
		  GOTO PROC_END;
		 END
	    
	    SET @NEW_MILK_QTY = 0
	    SET @NEW_FSN_QTY  = 0
	    SET @NEW_FAT_QTY  = 0
	   
	   SET @STEP=24
	   BEGIN TRANSACTION
	    SET @STEP=25
	  
	       
	    --SELECT @NEW_MILK_QTY,@NEW_FSN_QTY,@NEW_FAT_QTY
	          
	     
	    SET @STEP=26
	    --GET OLD QUANTITY OF MILK , FAS AND FAT FROM MAIN TABLE
	    SELECT @OLD_MILK_QTY=MILK_QTY,@OLD_FSN_QTY=FSN_QTY,@OLD_FAT_QTY=FAT_QTY  
	    FROM DBO.MILK_PURCHASE_DET WITH(NOLOCK) WHERE MEMO_ID=@MEMO_ID 
	    
	    SET @STEP=27  
	    --GET NEW QUANTITY OF MILK , FAS AND FAT FROM UPLOAD TABLE
        SELECT @NEW_MILK_QTY=MILK_QTY,@NEW_FSN_QTY=FSN_QTY,@NEW_FAT_QTY=FAT_QTY  
	    FROM DBO.MLK_MILK_PURCHASE_DET_UPLOAD WITH(NOLOCK) WHERE MEMO_ID=@MEMO_ID AND SP_ID=@NSPID
	    
	      ----CALCULATE INCREASE OR DECREASE QUANTITY OF MILK-----
	    IF(ISNULL(@OLD_MILK_QTY,0) > ISNULL(@NEW_MILK_QTY,0))
	       SET @NEW_MILK_QTY= ISNULL(@NEW_MILK_QTY,0) - ISNULL(@OLD_MILK_QTY,0)
	    ELSE IF(ISNULL(@OLD_MILK_QTY,0) < ISNULL(@NEW_MILK_QTY,0))
	       SET @NEW_MILK_QTY=ISNULL(@NEW_MILK_QTY,0) - ISNULL(@OLD_MILK_QTY,0)
	    ELSE
	       SET @NEW_MILK_QTY=0     
	    ----CALCULATE INCREASE OR DECREASE QUANTITY OF FSN-----
	    IF(ISNULL(@OLD_FSN_QTY,0) > ISNULL(@NEW_FSN_QTY,0))
	       SET @NEW_FSN_QTY= ISNULL(@NEW_FSN_QTY,0) - ISNULL(@OLD_FSN_QTY,0)
	    ELSE IF(ISNULL(@OLD_FSN_QTY,0) < ISNULL(@NEW_FSN_QTY,0))
	       SET @NEW_FSN_QTY=ISNULL(@NEW_FSN_QTY,0) - ISNULL(@OLD_FSN_QTY,0)
	    ELSE
	       SET @NEW_FSN_QTY=0
	    ----CALCULATE INCREASE OR DECREASE QUANTITY OF FAT-----   
	    IF(ISNULL(@OLD_FAT_QTY,0) > ISNULL(@NEW_FAT_QTY,0))
	       SET @NEW_FAT_QTY= ISNULL(@NEW_FAT_QTY,0) - ISNULL(@OLD_FAT_QTY,0)
	    ELSE IF(ISNULL(@OLD_FAT_QTY,0) < ISNULL(@NEW_FAT_QTY,0))
	       SET @NEW_FAT_QTY=ISNULL(@NEW_FAT_QTY,0) - ISNULL(@OLD_FAT_QTY,0)
	    ELSE
	       SET @NEW_FAT_QTY=0
	        
       
      ------UPDATE DETAILS INTO MILK_PURCHASE_MST TABLE-------------------- 
        SET @STEP=28
		SET @FILTER=' B.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
        EXEC UPDATEMASTERXN 
				  @CSOURCEDB	= @CDBSOURCE
				, @CSOURCETABLE = @UPLOADMASTERTABLE
				, @CDESTDB		= ''
				, @CDESTTABLE	= @CMASTERTABLENAME
				, @CKEYFIELD1	= @CKEYFIELD1
				, @BALWAYSUPDATE = 1
				, @CFILTERCONDITION=@FILTER
      ----INSERT UPDATE INTO MILK_PURCHASE_DET TABLE-------------------- 
          SET @STEP=29
          EXEC UPDATEMASTERXN 
				  @CSOURCEDB	= @CDBSOURCE
				, @CSOURCETABLE = @UPLOADDETAILTABLE
				, @CDESTDB		= ''
				, @CDESTTABLE	= @CDETAILSTABLES
				, @CKEYFIELD1	= @CKEYFIELD1
				, @BALWAYSUPDATE = 1
				, @CFILTERCONDITION=@FILTER
	  SET @STEP=30
	  -------UPDATE MILK STOCK INTO PMT01106 TABLE-------------
	  
      IF ISNULL(@NEW_MILK_QTY,0)<> 0
         BEGIN
          SET @STEP=31
          UPDATE DBO.PMT01106  SET QUANTITY_IN_STOCK=QUANTITY_IN_STOCK+ISNULL(@NEW_MILK_QTY,0)
          WHERE PRODUCT_CODE=@MILK_PRODUCT_CODE 
         END
       -------UPDATE FSN STOCK INTO PMT01106 TABLE-------------
      IF ISNULL(@NEW_FSN_QTY,0)<> 0
         BEGIN
          SET @STEP=32
          UPDATE DBO.PMT01106  SET QUANTITY_IN_STOCK=QUANTITY_IN_STOCK+ISNULL(@NEW_FSN_QTY,0)
          WHERE PRODUCT_CODE=@FSN_PRODUCT_CODE
         END
      -------UPDATE FAT STOCK INTO PMT01106 TABLE-------------
      IF ISNULL(@NEW_FAT_QTY,0)<> 0
         BEGIN
          SET @STEP=33
          UPDATE DBO.PMT01106  SET QUANTITY_IN_STOCK=QUANTITY_IN_STOCK+ISNULL(@NEW_FAT_QTY,0)
          WHERE PRODUCT_CODE=@FAT_PRODUCT_CODE
         END 
	  COMMIT TRANSACTION;
	   
	  SELECT @ERROR_MSG AS [ERRMSG],@MEMO_ID AS [MEMO_ID]
	  
     END
   IF @MODE = 3
     BEGIN
      
      IF ISNULL(@MEMO_ID,'') = ''
         BEGIN
           SET @STEP=34;
           SET @ERROR_MSG='MEMO ID IS NOT NULL, KINDLY PASS MEMO ID';
           GOTO PROC_END;
         END
        BEGIN TRANSACTION
        SET @STEP=35;
		SELECT @NEW_MILK_QTY=MILK_QTY,@NEW_FSN_QTY=FSN_QTY,@NEW_FAT_QTY=FAT_QTY
		FROM DBO.MILK_PURCHASE_DET WITH(NOLOCK) 
		WHERE MEMO_ID=@MEMO_ID
        
       -- SELECT @NEW_MILK_QTY,@NEW_FSN_QTY,@NEW_FAT_QTY
        
        SET @STEP=36;
        UPDATE DBO.MILK_PURCHASE_MST SET CANCELED=1 WHERE MEMO_ID=@MEMO_ID
         -------UPDATE MILK STOCK INTO PMT01106 TABLE-------------
        IF ISNULL(@NEW_MILK_QTY,0) <> 0
           BEGIN
             SET @STEP=37;
             UPDATE DBO.PMT01106 SET QUANTITY_IN_STOCK=QUANTITY_IN_STOCK-ISNULL(@NEW_MILK_QTY,0)
             WHERE PRODUCT_CODE=@MILK_PRODUCT_CODE
           END
         -------UPDATE FSN STOCK INTO PMT01106 TABLE-------------
        IF ISNULL(@NEW_FSN_QTY,0) <>  0
           BEGIN
             SET @STEP=38;
             UPDATE DBO.PMT01106 SET QUANTITY_IN_STOCK=QUANTITY_IN_STOCK-ISNULL(@NEW_FSN_QTY,0)
             WHERE PRODUCT_CODE=@FSN_PRODUCT_CODE
           END
        -------UPDATE FAT STOCK INTO PMT01106 TABLE-------------
        IF ISNULL(@NEW_FAT_QTY,0) <> 0
           BEGIN
             SET @STEP=39;
             UPDATE DBO.PMT01106 SET QUANTITY_IN_STOCK=QUANTITY_IN_STOCK-ISNULL(@NEW_FAT_QTY,0)
             WHERE PRODUCT_CODE=@FAT_PRODUCT_CODE
           END
        SET @STEP=40;
        COMMIT TRANSACTION;
      SELECT @ERROR_MSG AS [ERRMSG],@MEMO_ID AS [MEMO_ID]
      
      DELETE  FROM MLK_MILK_PURCHASE_MST_UPLOAD WHERE SP_ID=@NSPID
       DELETE  FROM MLK_MILK_PURCHASE_DET_UPLOAD WHERE SP_ID=@NSPID
     END
        
  PROC_END:
  IF ISNULL(@MEMO_ID,'')=''
      SELECT @ERROR_MSG AS [ERRMSG],'' AS [MEMO_ID]
  
 END TRY
 BEGIN CATCH
	 IF @@TRANCOUNT > 0
		ROLLBACK;
	  SET @ERROR_MSG=@ERROR_MSG+' || ERROR IN USP_SAVETRAN_MILK_PURCHASE || ' + 'ON STEP || '+CAST(@STEP AS VARCHAR(5))+ 'ERROR MESSAGE || '+ ERROR_MESSAGE();
	  SELECT @ERROR_MSG AS [ERRMSG],@MEMO_ID AS [MEMO_ID]
 END CATCH
 
