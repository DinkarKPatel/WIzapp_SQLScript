-- PROCEDURE TO SAVE A RETAIL SALE APPROVAL MEMO
CREATE PROCEDURE SAVETRAN_APP
(
	@NUPDATEMODE		NUMERIC(1,0),
	@NSPID				INT,
	@CFINYEAR			VARCHAR(10),
	@CMACHINENAME		VARCHAR(100)='',
	@CWINDOWUSERNAME	VARCHAR(100)='',
	@CWIZAPPUSERCODE	VARCHAR(10)='0000000',
	@CMEMOID			VARCHAR(40)=''
	

)
--WITH ENCRYPTION
AS
BEGIN
	-- @NUPDATEMODE:	1- NEW APPROVAL MEMO ADDED, 
	--					2- EDITING OF APPROVAL MEMO, 
	--					3- CURRENT STOCK ADJUSTMENT MEMO CANCELLED, 
	--					4- TAKE RETURN OF APPROVAL ITEMS
	--					5- TAKE RETURN OF APPROVAL ITEMS AGAINST BILL RAISED FROM APPROVAL

	DECLARE @CTEMPDBNAME			VARCHAR(100),
			@CMASTERTABLENAME		VARCHAR(100),
			@CDETAILTABLENAME		VARCHAR(100),
			@CTEMPMASTERTABLENAME	VARCHAR(100),
			@CTEMPDETAILTABLENAME	VARCHAR(100),
			@CTEMPMASTERTABLE		VARCHAR(300),
			@CTEMPDETAILTABLE		VARCHAR(300),
			@CERRORMSG				VARCHAR(500),
			@LDONOTUPDATESTOCK		BIT,
			@CKEYFIELD1				VARCHAR(50),
			@CKEYFIELDVAL1			VARCHAR(50),
			@CMEMONO				VARCHAR(20),
			@NMEMONOLEN				NUMERIC(20,0),
			@CMEMONOVAL				VARCHAR(50),
			@CLOCATIONID			VARCHAR(4),
			@CHODEPTID				VARCHAR(4),
			@CCMD					NVARCHAR(4000),
			@CCMDOUTPUT				NVARCHAR(4000),
			@NSAVETRANLOOP			BIT,
			@NSTEP					INT,
			@BNEGSTOCKFOUND BIT,
			@CUSERALIAS	VARCHAR(5),@CMEMONOPREFIX VARCHAR(10),
			@CEXPRERRORMSG	VARCHAR(MAX),
			@BALLOWNEGSTOCK BIT,@CLOCID VARCHAR(4)
			

	DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))

	SET @NSTEP = 0		-- SETTTING UP ENVIRONMENT
	
	-- TEMPORARY DATABASE Discarded now onwards as per Meeting on 30-10-2020 mentioned in Client issues List
	SET @CTEMPDBNAME = ''

	SET @CMASTERTABLENAME	= 'APM01106'
	SET @CDETAILTABLENAME	= 'APD01106'

	SET @CTEMPMASTERTABLENAME	= 'APP_APM01106_UPLOAD'
	SET @CTEMPDETAILTABLENAME	= 'APP_APD01106_UPLOAD'
--+LTRIM(RTRIM(STR(@NSPID)))
	SET @CTEMPMASTERTABLE	= @CTEMPDBNAME + @CTEMPMASTERTABLENAME
	SET @CTEMPDETAILTABLE	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME

	
	SET @CERRORMSG			= ''
	SET @LDONOTUPDATESTOCK	= 0
	SET @CKEYFIELD1			= 'MEMO_ID'
	SET @CMEMONO			= 'MEMO_NO'
	SET @NMEMONOLEN			= 10
    
    
	IF @NUPDATEMODE<>3
		SELECT @CLOCID=LOCATION_CODE FROM APP_APM01106_UPLOAD (NOLOCK) WHERE SP_ID =@NSPID 
	else
		SELECT @CLOCID=LOCATION_CODE FROM apm01106 (NOLOCK) WHERE memo_id=@CMEMOID
	
		SELECT @CLOCATIONID=@CLOCID
	
	SELECT @CHODEPTID		= [VALUE] FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'		

	SET @NSTEP = 10		-- GETTING DEPTID INFO FROM TEMP TABLE
	
	BEGIN TRY

		IF OBJECT_ID('TEMPDB..#TMPPMT','U') IS NOT NULL
			DROP TABLE #TMPPMT
		
		SELECT PRODUCT_CODE INTO #TMPPMT FROM SKU WHERE 1=2

		IF OBJECT_ID('TEMPDB..#TMPXNSTK','U') IS NOT NULL
			DROP TABLE #TMPXNSTK						   
		
		SELECT PRODUCT_CODE,QUANTITY_IN_STOCK AS XN_STOCK INTO #TMPXNSTK FROM PMT01106 WHERE 1=2

		IF @NUPDATEMODE NOT IN (1,2,3)
			GOTO END_PROC
	
		BEGIN TRANSACTION
        
         PRINT 'START NORMALIZE_FIX_PRODUCT_CODE '
		IF @NUPDATEMODE<>3
		BEGIN
		   

		  EXEC SP3S_NORMALIZE_FIX_PRODUCT_CODE 'APP',@NSPID,@NUPDATEMODE,
		  @CTEMPDETAILTABLENAME,@CMEMOID,@CERRORMSG OUTPUT,'',@CLOCID
		  IF ISNULL(@CERRORMSG,'')<>''
		  BEGIN
			   SET @CERRORMSG='ERROR IN NORMALIZATION'+@CERRORMSG
			   GOTO END_PROC
		  END
		END  
        
						
		IF @NUPDATEMODE<>3
		BEGIN
			EXEC SP_VALIDATEXN_BEFORESAVE 'APP',@NSPID,'0000000',@NUPDATEMODE,@CCMDOUTPUT OUTPUT,@BNEGSTOCKFOUND OUTPUT
			IF ISNULL(@CCMDOUTPUT,'') <> ''
			BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' DATA VALIDATION ON TEMP DATA FAILED : ' + @CCMDOUTPUT + '...'
				GOTO END_PROC
			END
		END
		
		
		IF @NUPDATEMODE = 3 AND ISNULL(@CMEMOID,'') = ''
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' MEMO ID REQUIRED IF CALLED FROM CANCELLATION'
			GOTO END_PROC  		
		END


		IF @NUPDATEMODE<>3
		BEGIN

			  IF EXISTS(SELECT TOP 1 A.MEMO_ID FROM  APP_APM01106_UPLOAD  A (NOLOCK)
			   JOIN CUSTDYM B (NOLOCK) ON A.CUSTOMER_CODE =B.CUSTOMER_CODE
			   WHERE A.SP_ID =LTRIM(RTRIM(STR(@NSPID)))  AND B.INACTIVE=1)        
			 BEGIN  

				  SET @CERRORMSG='ITEM CAN NOT BE APPROVAL ISUUE FOR INACTIVE CUSTOMER.. '
				  GOTO END_PROC  

			 END 

		END
 
		SELECT @BALLOWNEGSTOCK =VALUE FROM USER_ROLE_DET A (NOLOCK)--ADDED
		JOIN USERS B (NOLOCK)--ADDED
		ON A.ROLE_ID=B.ROLE_ID 
		WHERE USER_CODE=@CWIZAPPUSERCODE 
		AND FORM_NAME='FRMSALE' 
		AND FORM_OPTION='ALLOW_NEG_STOCK'		
	
		SET @BALLOWNEGSTOCK =ISNULL(@BALLOWNEGSTOCK,0)
		
		-- START UPDATING XN TABLES	
		IF @NUPDATEMODE = 1 -- ADDMODE	
		BEGIN	
			
			SET @NSTEP=15
			
			SET @CCMD=N'SELECT @CUSERALIASOUT=USER_ALIAS FROM USERS A JOIN '+ @CTEMPMASTERTABLE +' B
						ON A.USER_CODE=B.USER_CODE 
						WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' '
			EXEC SP_EXECUTESQL @CCMD,N'@CUSERALIASOUT VARCHAR(5) OUTPUT',@CUSERALIASOUT=@CUSERALIAS OUTPUT
			
			SET @CUSERALIAS=(CASE WHEN ISNULL(@CUSERALIAS,'')='' THEN @CLOCATIONID ELSE @CUSERALIAS  END)
			
			SET @CMEMONOPREFIX=@CLOCATIONID+@CUSERALIAS+'A-'
			
			set @NMEMONOLEN=LEN(@CMEMONOPREFIX)+4
		
			SET @NSTEP = 20		-- GENERATING NEW KEY
			
			-- GENERATING NEW JOB ORDER NO		
			SET @NSAVETRANLOOP=0
			WHILE @NSAVETRANLOOP=0
			BEGIN
				EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1, 
								@CFINYEAR,0, @CMEMONOVAL OUTPUT   
				
				PRINT @CMEMONOVAL
				SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+' 
										WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' 
										AND FIN_YEAR = '''+@CFINYEAR+''' )
								SET @NLOOPOUTPUT=0
							ELSE
								SET @NLOOPOUTPUT=1'
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
			END

			IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'	
				  GOTO END_PROC  		
			END

			SET @NSTEP = 30		-- GENERATING NEW ID

			-- GENERATING NEW JOB ORDER ID
			SET @CKEYFIELDVAL1 = @CLOCATIONID + @CFINYEAR+REPLICATE('0', (22-LEN(@CLOCATIONID + @CFINYEAR))-LEN(LTRIM(RTRIM(@CMEMONOVAL))))  + LTRIM(RTRIM(@CMEMONOVAL)) 
			IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
				  -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'
				  GOTO END_PROC
			END

			SET @NSTEP = 40		-- UPDATING NEW ID INTO TEMP TABLES

			-- UPDATING NEWLY GENERATED JOB ORDER NO AND JOB ORDER ID IN PIM AND PID TEMP TABLES
			SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' + 
						@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''', DEPT_ID='''+@CLOCATIONID+''' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
		
			SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD

		END					-- END OF ADDMODE
		ELSE				-- CALLED FROM EDITMODE
		BEGIN				-- START OF EDITMODE
		
			SET @NSTEP = 50		-- GETTING ID INFO FROM TEMP TABLE

			
			-- GETTING MEMO ID WHICH IS BEING EDITED
			SET @CCMD = 'SELECT @CKEYFIELDVAL1 = ' + @CKEYFIELD1 + ', @CMEMONOVAL = ' + @CMEMONO + ' FROM '
						+ (CASE WHEN @NUPDATEMODE=3 THEN @CMASTERTABLENAME + ' WHERE MEMO_ID = ''' + @CMEMOID + ''''
								ELSE @CTEMPMASTERTABLE +' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+'''' END )
			
			EXEC SP_EXECUTESQL @CCMD, N'@CKEYFIELDVAL1 VARCHAR(50) OUTPUT, @CMEMONOVAL VARCHAR(50) OUTPUT', 
							   @CKEYFIELDVAL1 OUTPUT, @CMEMONOVAL OUTPUT
							   
			IF (@CKEYFIELDVAL1 IS NULL ) OR (@CMEMONOVAL IS NULL )
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'
				  GOTO END_PROC  		
			END

			SET @NSTEP = 55		-- STORING OLD STATUS OF BARCODES 

			EXEC SP3SBuildAPP
			@cXnID=@CKEYFIELDVAL1
			,@nUpdateMode=3
			,@cErrMsg=@CERRORMSG OUTPUT  
			
			IF ISNULL(@CERRORMSG,'')<>''
				GOTO END_PROC
			
			IF @NUPDATEMODE = 3			
			BEGIN
				SET @NSTEP = 60
				-- UPDATING SENTTOHO FLAG
				SET @CCMD = N'UPDATE ' + @CMASTERTABLENAME + ' SET CANCELLED = 1,LAST_UPDATE=GETDATE() ' + 
							N' WHERE ' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + ''''
				EXEC SP_EXECUTESQL @CCMD
			END
			
			ELSE
			BEGIN

				SET @NSTEP = 65		-- UPDATING SENT_TO_HO FLAG TEMP TABLE
				-- UPDATING SENTTOHO FLAG
				SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' SET SENT_TO_HO = 0,LAST_UPDATE=GETDATE() WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
				EXEC SP_EXECUTESQL @CCMD
				
				

			END

			-- REVERTING BACK THE STOCK OF PMT W.R.T CURRENT ISSUE
			SET @NSTEP = 80		-- REVERTING STOCK

			EXEC UPDATEPMT 
				  @CXNTYPE			= 'APP' 
				, @CXNNO			= @CMEMONOVAL
				, @CXNID			= @CKEYFIELDVAL1
				, @NREVERTFLAG		= 1
				, @NALLOWNEGSTOCK	= 0
				, @NCHKDELBARCODES	= 1
				, @NUPDATEMODE		= @NUPDATEMODE				
				, @CCMD				= @CCMDOUTPUT OUTPUT
			
			IF (@NUPDATEMODE = 3) 
			BEGIN
				IF @CCMDOUTPUT <> ''
				BEGIN
					SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR UPDATING THE STOCK STATUS IN PMT....'
					SET @BNEGSTOCKFOUND=1					
					EXEC SP_EXECUTESQL @CCMDOUTPUT
				END	

			EXEC SP3S_upd_qty_lastupdate
			@nUpdateMode=3,
			@cXnType='APP',
			@cMasterTable='apm01106',
			@cMemoIdCol='Memo_id',
			@cMemoId=@CKEYFIELDVAL1,
			@cXnDtCol='MEMO_DT',
			@CERRORMSG=@CERRORMSG OUTPUT

			GOTO END_PROC
			END
		END					-- END OF EDITMODE

		SET @NSTEP = 95
		
		-- RECHECKING IF ID IS STILL LATER
		IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR GETTING NEXT MEMO ID....'
			GOTO END_PROC
		END

		IF @NUPDATEMODE <> 3
		BEGIN
			
			SET @NSTEP=100
			
			SET @CCMD=N'UPDATE '+@CTEMPMASTERTABLE+' SET AC_CODE=(CASE WHEN MEMO_TYPE=1 THEN ''0000000000'' ELSE AC_CODE END), 			
						CUSTOMER_CODE=(CASE WHEN MEMO_TYPE=2 THEN ''000000000000'' ELSE CUSTOMER_CODE END)
						WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' '

			EXEC SP_EXECUTESQL @CCMD						

			SET @NSTEP = 105		-- UPDATING MASTER TABLE


         DECLARE @CWHERECLAUSE VARCHAR(1000)

		 	SET @CWHERECLAUSE=' AND SP_ID='''+ LTRIM(RTRIM((@NSPID)))+''''

			PRINT 'NOW VALIDATE SECTION ITEM TYPE'

			EXEC SP3S_VALIDATEXN_ITEMTYPE
			@CTEMPMASTERTABLE='APP_APM01106_UPLOAD',
			@CTEMPDETAILTABLE='APP_APD01106_UPLOAD',
			@CWHERECLAUSE=@CWHERECLAUSE,
			@CERRORMSG=@CERRORMSG OUTPUT


			IF ISNULL(@CERRORMSG,'')<>''
				GOTO END_PROC

            SET @CWHERECLAUSE = ' SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''

			IF @NUPDATEMODE IN (1,2)
			BEGIN
				SET @nSTEP = 107
				UPDATE a SET total_quantity=b.total_quantity FROM app_apm01106_UPLOAD A WITH (ROWLOCK) 
				JOIN (SELECT sp_id,sum(quantity) as total_quantity FROM app_apd01106_UPLOAD b (NOLOCK)  
						WHERE sp_id=LTRIM(RTRIM(STR(@NSPID))) GROUP BY sp_id) b ON a.sp_id=b.sp_id

				EXEC SP3S_upd_qty_lastupdate
				@nUpdateMode=@NUPDATEMODE,
				@cXnType='APP',
				@nSpId=@nSpid,
				@cMasterTable='apm01106',
				@cMemoIdCol='Memo_id',
				@cMemoId=@CKEYFIELDVAL1,
				@cXnDtCol='MEMO_DT',
				@CERRORMSG=@CERRORMSG OUTPUT

			

				IF ISNULL(@CERRORMSG,'')<>''
				   GOTO END_PROC

			END		

			SET @nSTEP = 109
			EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN 
				  @CSOURCEDB	= @CTEMPDBNAME
				, @CSOURCETABLE = @CTEMPMASTERTABLENAME
				, @CDESTDB		= ''
				, @CDESTTABLE	= @CMASTERTABLENAME
				, @CKEYFIELD1	= @CKEYFIELD1
				,@BALWAYSUPDATE = 1
                ,@CFILTERCONDITION=@CWHERECLAUSE
                
			-- UPDATING TRANSACTION TABLE (PID01106) FROM TEMP TABLE
			SET @NSTEP = 110		-- UPDATING TRANSACTION TABLE

				-- UPDATING ROW_ID IN TEMP TABLES
				SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE + ' SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(40), NEWID())
							  WHERE LEFT(ROW_ID,5) = ''LATER'' AND  SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
				EXEC SP_EXECUTESQL @CCMD

				-- DELETING EXISTING ENTRIES FROM PID01106 TABLE WHERE ROW_ID NOT FOUND IN TEMPTABLE
				SET @NSTEP = 114		-- UPDATING TRANSACTION TABLE - DELETING EXISTING ENTRIES

				SET @CCMD = N'DELETE FROM ' + @CDETAILTABLENAME + ' 
							WHERE ' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''
							AND ROW_ID IN 
							(
								SELECT A.ROW_ID 
								FROM ' + @CDETAILTABLENAME + ' A 
								LEFT OUTER JOIN ' + @CTEMPDETAILTABLE + ' B ON A.ROW_ID = B.ROW_ID AND  SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+'''
								WHERE A.' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''
								AND   B.ROW_ID IS NULL
							)'
				EXEC SP_EXECUTESQL @CCMD

				-- INSERTING/UPDATING THE ENTRIES IN PRD_JID TABLE FROM TEMPTABLE
				SET @NSTEP = 116		-- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES

				EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN 
					  @CSOURCEDB	= @CTEMPDBNAME
					, @CSOURCETABLE = @CTEMPDETAILTABLENAME
					, @CDESTDB		= ''
					, @CDESTTABLE	= @CDETAILTABLENAME
					, @CKEYFIELD1	= 'ROW_ID'
					,@BALWAYSUPDATE = 1
					,@CFILTERCONDITION=@CWHERECLAUSE

			-- UPDATING STOCK OF PMT W.R.T. CURRENT MEMO
			SET @NSTEP = 130		-- UPDATING PMT TABLE

			EXEC UPDATEPMT 
				  @CXNTYPE			= 'APP' 
				, @CXNNO			= @CMEMONOVAL
				, @CXNID			= @CKEYFIELDVAL1
				, @NREVERTFLAG		= 0
				, @NALLOWNEGSTOCK	= @BALLOWNEGSTOCK
				, @NCHKDELBARCODES	= 1
				, @NUPDATEMODE		= @NUPDATEMODE				
				, @CCMD				= @CCMDOUTPUT OUTPUT
			
			IF @CCMDOUTPUT <> ''
			BEGIN
				PRINT @CCMDOUTPUT
				
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR UPDATING THE STOCK STATUS IN PMT....'
				SET @BNEGSTOCKFOUND=1				
				EXEC SP_EXECUTESQL @CCMDOUTPUT
				GOTO END_PROC
			END
		END
		
		
		UPDATE A SET  SUBTOTAL =ISNULL( B.SUBTOTAL ,0 )
		FROM APM01106 A WITH (ROWLOCK)
		JOIN
		( 	
			SELECT	MEMO_ID, SUM(NET) AS SUBTOTAL
			FROM APD01106 WITH (NOLOCK)
			WHERE MEMO_ID = @CKEYFIELDVAL1
		   GROUP BY MEMO_ID  
		) B ON  A.MEMO_ID = B.MEMO_ID  
		WHERE A.MEMO_ID = @CKEYFIELDVAL1

       UPDATE  APM01106 SET NET_AMOUNT =ROUND(SUBTOTAL -DISCOUNT_AMOUNT+atd_charges,0)  WHERE MEMO_ID = @CKEYFIELDVAL1
		
		
		EXEC UPDATERFNET 'APP',@CKEYFIELDVAL1
		
		-- VALIDATING ENTRIES 
		SET @NSTEP = 150		-- VALIDATING ENTRIES

		EXEC VALIDATEXN
			  @CXNTYPE	= 'APP'  
			, @CXNID	= @CKEYFIELDVAL1
			, @NUPDATEMODE = @NUPDATEMODE			
			, @CCMD		= @CCMDOUTPUT OUTPUT

		IF @CCMDOUTPUT <> ''
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' DATA VALIDATION FAILED : ' + @CCMDOUTPUT + '...'
			GOTO END_PROC
		END


		

		set @NSTEP=160
		EXEC SP3S_UPDATE_PMTLOCS_REBUILD_STARTDATE
		@cXnType='APP',
		@cMemoId=@CKEYFIELDVAL1 

	END TRY
	
	BEGIN CATCH
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		-- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG, '''' AS MEMO_ID'
		
		GOTO END_PROC
	END CATCH
	
END_PROC:
	
	update apm01106 set last_update=getdate() where memo_id=@cKeyfieldval1
	
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')='' AND ISNULL(@BNEGSTOCKFOUND,0)=0
		BEGIN
			
			UPDATE APM01106 SET LAST_UPDATE=GETDATE(),reconciled=0 WHERE MEMO_ID=@CKEYFIELDVAL1
			UPDATE XNLOG SET LAST_UPDATE=GETDATE() WHERE TABLENAME='APM01106'
			UPDATE apm01106 SET HO_SYNCH_LAST_UPDATE='' WHERE memo_id=@CKEYFIELDVAL1
			commit TRANSACTION
		END	
		ELSE
			ROLLBACK
	END
	
	IF ISNULL(@BNEGSTOCKFOUND,0)=0
	BEGIN
		INSERT @OUTPUT ( ERRMSG, MEMO_ID)
				VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )

		SELECT * FROM @OUTPUT	
	END	
	
	
	DELETE FROM APP_APM01106_UPLOAD WHERE SP_ID =LTRIM(RTRIM(STR(@NSPID))) 
	DELETE FROM APP_APD01106_UPLOAD WHERE SP_ID =LTRIM(RTRIM(STR(@NSPID))) 

END						-- SAVETRAN_APP
------------------------------------------------------ END OF PROCEDURE SAVETRAN_APP
