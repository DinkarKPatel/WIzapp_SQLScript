create PROC SAVETRAN_LEDGER_TERMS
(

	@NSPID	INT ,
	@TERMS_CODE VARCHAR(100)=''              
)
--WITH ENCRYPTION
AS
BEGIN
  DECLARE @CMASTERTABLENAME VARCHAR(100),
          @CTEMPMASTERTABLE VARCHAR(100),
          @CTEMPMASTERTABLENAME VARCHAR(100),
          @CLMTABLENAME VARCHAR(100),
          @CTEMPLMTABLE VARCHAR(100),
          @CTEMPLMTABLENAME VARCHAR(100),
		  @CTEMPDBNAME VARCHAR(100),		
		  @NSTEP VARCHAR(10),
		  @CERRORMSG VARCHAR(500),
		  @CKEYFIELD VARCHAR(22),
		  @CMEMONOVAL VARCHAR(22),	
	      @CCMD NVARCHAR(MAX),
	      @NLOOPOUTPUT BIT,
	      @CHODEPT_ID VARCHAR(4)
	      
	      SELECT TOP 1 @CHODEPT_ID=VALUE  FROM CONFIG WHERE CONFIG_OPTION ='HO_LOCATION_ID'
	      
		  DECLARE @OUTPUT TABLE(ERRMSG VARCHAR(2000),CAT_ID VARCHAR(22))
          SET @NSTEP = 0		-- SETTTING UP ENVIRONMENT		
			 SET @CTEMPDBNAME = ''			  
	         SET @CMASTERTABLENAME ='LEDGER_TERMS'	
	         SET @CLMTABLENAME ='LM_TERMS'		
		
		     SET @CTEMPMASTERTABLE  ='TEMP_LEDGER_TERMS_'+LTRIM(RTRIM(STR(@NSPID)))
		     SET @CTEMPLMTABLE  ='TEMP_LM_TERMS_'+LTRIM(RTRIM(STR(@NSPID)))	
		     		
		     SET @CTEMPMASTERTABLENAME = @CTEMPDBNAME + @CTEMPMASTERTABLE
		     SET @CTEMPLMTABLENAME = @CTEMPDBNAME + @CTEMPLMTABLE
		     
             SET @CKEYFIELD='TERMS_CODE'
         BEGIN TRY
	     BEGIN TRANSACTION
	          SET @NSTEP = 60	-- UPDATING NEW ID INTO TEMP TABLES
	     
	     IF @TERMS_CODE='LATER'
	     BEGIN
	     
          EXEC  GETNEXTKEY 
	       @CTABLENAME=@CMASTERTABLENAME,
	       @CCOLNAME=@CKEYFIELD,
	       @NWIDTH=5,
	       @CPREFIX='',
	       @NLZEROS=1,
	       @CFINYEAR='',
           @NROWCOUNT=1,
           @CNEWKEYVAL=@CMEMONOVAL OUTPUT    
       
           PRINT @CMEMONOVAL  
       
		IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
		BEGIN  
		   SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'   
		   GOTO END_PROC      
		END 
		 
       END   
       
	    IF OBJECT_ID (@CTEMPMASTERTABLENAME,'U') IS NOT NULL
		    BEGIN
			  SET @CCMD=N'UPDATE '+@CTEMPMASTERTABLENAME+' SET  LAST_UPDATE=GETDATE()'
			  PRINT @CCMD 
			  EXEC SP_EXECUTESQL @CCMD 
			  
			  IF @TERMS_CODE='LATER'
			  BEGIN
			       SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLENAME + ' SET ' + @CKEYFIELD+'=''' + @CMEMONOVAL+''' WHERE TERMS_CODE=''LATER'''  
                   EXEC SP_EXECUTESQL @CCMD  
			  END
			  
		      SET @NSTEP = 80
		      
			  EXEC UPDATEMASTERXN 
					 @CSOURCEDB	= @CTEMPDBNAME
					, @CSOURCETABLE = @CTEMPMASTERTABLE
					, @CDESTDB		= ''
					, @CDESTTABLE	= @CMASTERTABLENAME
					, @CKEYFIELD1	= @CKEYFIELD
					, @BALWAYSUPDATE = 1
		 END
					
		  IF OBJECT_ID (@CTEMPLMTABLENAME,'U') IS NOT NULL
		     BEGIN
			      
			    SET @NSTEP = 90
			    IF @TERMS_CODE='LATER'
			    BEGIN
			       SET @CCMD = 'UPDATE ' + @CTEMPLMTABLENAME + ' SET ' + @CKEYFIELD+'=''' + @CMEMONOVAL+''' WHERE TERMS_CODE=''LATER'''  
                   EXEC SP_EXECUTESQL @CCMD  
			    END
			    
			    IF @TERMS_CODE<>'LATER'  
			    BEGIN
			     SET @CCMD = 'UPDATE ' + @CTEMPLMTABLENAME + ' SET ' + @CKEYFIELD+'=''' + @TERMS_CODE+''' WHERE TERMS_CODE=''LATER'''  
                 EXEC SP_EXECUTESQL @CCMD  
                   
			    SET @CCMD =N'DELETE A FROM LM_TERMS A JOIN LEDGER_TERMS B ON A.TERMS_CODE=B.TERMS_CODE  WHERE 
			                 TERMS_CODE_CODE 
			    A.TERMS_CODE='''+@TERMS_CODE+''''
			    PRINT @CCMD
			    EXEC SP_EXECUTESQL @CCMD
		        END
			         EXEC UPDATEMASTERXN 
					  @CSOURCEDB	= @CTEMPDBNAME
					, @CSOURCETABLE = @CTEMPLMTABLE
					, @CDESTDB		= ''
					, @CDESTTABLE	= @CLMTABLENAME
					, @CKEYFIELD1	= @CKEYFIELD
					, @BALWAYSUPDATE = 1
			  
			  END		
				
	     END TRY
         BEGIN CATCH
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
				GOTO END_PROC
        END CATCH
END_PROC:
		IF @@TRANCOUNT>0
		BEGIN
			IF ISNULL(@CERRORMSG,'')=''
				COMMIT TRANSACTION
			ELSE
			ROLLBACK 	
		END 

		IF ISNULL(@CERRORMSG,'')=''
		BEGIN
					SET @CCMD = N'IF OBJECT_ID('''+@CTEMPMASTERTABLENAME+''',''U'') IS NOT NULL
											DROP TABLE '+@CTEMPMASTERTABLENAME+'
											
								IF OBJECT_ID('''+@CTEMPLMTABLENAME+''',''U'') IS NOT NULL
											DROP TABLE '+@CTEMPLMTABLENAME+''
					PRINT @CCMD
					EXEC SP_EXECUTESQL @CCMD 
		END		
		  
		SELECT ISNULL(@CERRORMSG,'') AS ERRMSG
		   		     

END
--END OF PROCEDURE SAVETRAN_LEDGER_TERMS
