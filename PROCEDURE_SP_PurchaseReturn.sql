CREATE PROCEDURE SP_PURCHASERETURN    
@NQUERYID NUMERIC(2,0),    
@CFROMDATE NVARCHAR(50),    
@CTODATE NVARCHAR(50),    
@CWHERE  NVARCHAR(MAX),    
@CWHERE1 VARCHAR(MAX)='' ,
@CMODE NUMERIC(1)=0,  
@CWHERE2 VARCHAR(MAX)='',
@NESTIMATEMODE INT=1  ,
@IENTRYMODE NUMERIC(1)=0

--WITH ENCRYPTION
AS    
BEGIN    
    
DECLARE @CCMD NVARCHAR(MAX)    
    
IF @NQUERYID = 1    
GOTO LBLRMMLIST    
    
ELSE IF @NQUERYID = 2    
GOTO LBLREPORT    
    
ELSE IF @NQUERYID = 3    
GOTO LBLSUPPLIERSLOV    
    
ELSE IF @NQUERYID = 4    
GOTO LBLGETMST    
    
ELSE IF @NQUERYID = 5    
GOTO LBLGETDETAILS    
    
ELSE IF @NQUERYID = 6    
GOTO LBLGETBILL    
    
ELSE IF @NQUERYID = 7    
GOTO LBLGETBILLMASTER    
    
ELSE IF @NQUERYID = 8    
GOTO LBLGETBILLDET    
  
ELSE IF @NQUERYID =9      
GOTO LBLPSMST    
  
ELSE IF @NQUERYID = 10   
GOTO LBLPSDET       

ELSE IF @NQUERYID = 11   
GOTO LBLXNBOXDETAILS  
    
ELSE    
GOTO LAST    

LBLXNBOXDETAILS:

	SELECT *,CAST('' AS VARCHAR(50)) AS SP_ID FROM xnBoxDetails WHERE xn_type='PRT' AND Ref_memo_id=@CWHERE
GOTO LAST
       
LBLRMMLIST:    
    
 SET @CCMD = N'SELECT CAST( 0 AS BIT) AS [CHECK], FORM.FORM_NAME , USERS.USERNAME,  C.AC_NAME AS SUPP_NAME,    
 RMM01106.RM_NO, (CASE WHEN RMM01106.CANCELLED = 0 THEN SUM(RMD01106.QUANTITY) ELSE 0 END) AS QUANTITY,    
 (CASE WHEN RMM01106.CANCELLED = 0 THEN RMM01106.TOTAL_AMOUNT ELSE 0 END) AS TOTAL_AMOUNT,    
 CONVERT(CHAR(10),CASE WHEN RM_DT='''' THEN '''' ELSE RM_DT END ,105)  AS RM_DT,    
 (CASE WHEN RMM01106.CANCELLED = 1 THEN ''CANCELLED'' ELSE '''' END) AS [STATUS],    
 (CASE WHEN RMM01106.CANCELLED = 1 THEN 0 WHEN FORM.POST_TAX_SEPARATELY = 1    
 THEN (RMM01106.TOTAL_AMOUNT- RMM01106.TAX_AMOUNT) ELSE RMM01106.TOTAL_AMOUNT END ) AS TOTAL_AMT_WO,    
  RMM01106.RM_ID,RMM01106.BATCH_NO,    
 (CASE WHEN RMM01106.DN_TYPE =1 THEN ''REGULAR'' ELSE ''FINIANCIAL'' END) AS DN_TYPE,RMM01106.AC_CODE    
 FROM RMM01106 (NOLOCK)   
 JOIN FORM (NOLOCK)ON RMM01106.FORM_ID = FORM.FORM_ID    
 JOIN USERS (NOLOCK)ON RMM01106.USER_CODE = USERS.USER_CODE    
 JOIN LMV01106 C (NOLOCK)ON RMM01106.AC_CODE = C.AC_CODE    
 JOIN RMD01106 (NOLOCK)ON RMD01106.RM_ID = RMM01106.RM_ID    
 JOIN SKU (NOLOCK)ON SKU.PRODUCT_CODE = RMD01106.PRODUCT_CODE    
 WHERE (RMM01106.RM_DT BETWEEN '''+@CFROMDATE +''' AND '''+@CTODATE +''') '+@CWHERE+'    
 GROUP BY FORM.FORM_NAME , USERS.USERNAME,  C.AC_NAME , RMM01106.RM_NO,RM_DT,RMM01106.TOTAL_AMOUNT,    
 RMM01106.CANCELLED,FORM.POST_TAX_SEPARATELY,RMM01106.TAX_AMOUNT,SKU.INV_NO,RMM01106.RM_ID,    
 RMM01106.BATCH_NO,RMM01106.DN_TYPE,RMM01106.AC_CODE    
 ORDER BY RMM01106.RM_NO'    
     
 PRINT @CCMD    
 EXECUTE SP_EXECUTESQL @CCMD    
     
 GOTO LAST    
     
 LBLREPORT:    
     
    
 SET @CCMD =N'SELECT C.AC_NAME AS SUPP_NAME, T0.RM_NO, RMD01106.QUANTITY,T0.TOTAL_AMOUNT,    
 CONVERT(CHAR(10),CASE WHEN RM_DT='''' THEN NULL ELSE RM_DT END ,105)AS RM_DT,    
 FORM.FORM_NAME,USERS.USERNAME,ISNULL(BATCH_NO,'''') AS BATCH_NO,     
 (CASE WHEN T0.CANCELLED = 1 THEN ''CANCELLED'' ELSE '''' END) AS [STATUS],    
 (CASE WHEN FORM.POST_TAX_SEPARATELY = 1 THEN (T0.TOTAL_AMOUNT- T0.TAX_AMOUNT) ELSE T0.TOTAL_AMOUNT END ) AS TOTAL_AMT_WO ,    
 ARTICLE.ARTICLE_DESC,ARTICLE.ARTICLE_NO,SKU.INV_DT,SKU.INV_NO,RMD01106.PURCHASE_PRICE,RMD01106.PRODUCT_CODE,    
 (RMD01106.QUANTITY*RMD01106.PURCHASE_PRICE) AS NETRATE,    
 (RMD01106.QUANTITY*RMD01106.PURCHASE_PRICE) AS AMOUNT,     
 T0.AC_CODE,C.ADDRESS0+'' ''+C.ADDRESS1+'' ''+C.ADDRESS2 +'' ''+AREA.AREA_NAME+'' ''+CITY.CITY+'' ''+STATE.STATE+''-''+C.PINCODE AS [ADDRESS],    
 T0.DISCOUNT_AMOUNT AS MST_DISCOUNT_AMOUNT,T0.DISCOUNT_PERCENTAGE,T0.OTHER_CHARGES,T0.FREIGHT,    
 T0.TAX_PERCENTAGE,T0.ROUND_OFF,T0.EXCISE_EDU_CESS_AMOUNT,T0.EXCISE_HEDU_CESS_AMOUNT,    
 T0.EXCISE_DUTY_AMOUNT,PARA1.PARA1_NAME,PARA2.PARA2_NAME,PARA3.PARA3_NAME,T0.TAX_AMOUNT AS TOTAL_TAX_AMOUNT,    
 RMD01106.RFNET,SECD.SUB_SECTION_NAME,SECM.SECTION_NAME,C.PHONES_R+(CASE WHEN PHONES_R<>'''' AND PHONES_O<>''''     
 THEN '','' ELSE '''' END)+PHONES_O+(CASE WHEN (PHONES_R<>'''' OR PHONES_O<>'''') AND PHONES_FAX<>''''     
 THEN '','' ELSE '''' END)+PHONES_FAX AS PHONES,RMD01106.SRNO, RMD01106.DEPT_ID,   
 PARA4.PARA4_NAME,PARA5.PARA5_NAME,PARA6.PARA6_NAME,ARTICLE.ALIAS AS ARTICLE_ALIAS, C.*    
     
 FROM RMM01106 T0 (NOLOCK)  
 JOIN RMD01106 (NOLOCK)ON RMD01106.RM_ID = T0.RM_ID    
 JOIN FORM (NOLOCK)ON RMD01106.ITEM_FORM_ID = FORM.FORM_ID      
 JOIN USERS (NOLOCK)ON T0.USER_CODE = USERS.USER_CODE     
 JOIN LMV01106 C (NOLOCK)ON T0.AC_CODE = C.AC_CODE    
 JOIN SKU (NOLOCK)ON SKU.PRODUCT_CODE = RMD01106.PRODUCT_CODE     
 JOIN ARTICLE (NOLOCK)ON SKU.ARTICLE_CODE= ARTICLE.ARTICLE_CODE     
 LEFT OUTER JOIN AREA (NOLOCK)ON C.AREA_CODE = AREA.AREA_CODE     
 JOIN PARA1 (NOLOCK)ON SKU.PARA1_CODE = PARA1.PARA1_CODE     
 JOIN PARA2 (NOLOCK)ON SKU.PARA2_CODE = PARA2.PARA2_CODE     
 JOIN PARA3 (NOLOCK)ON SKU.PARA3_CODE = PARA3.PARA3_CODE     
 JOIN PARA4 (NOLOCK)ON SKU.PARA4_CODE = PARA4.PARA4_CODE     
 JOIN PARA5 (NOLOCK)ON SKU.PARA5_CODE = PARA5.PARA5_CODE     
 JOIN PARA6 (NOLOCK)ON SKU.PARA6_CODE = PARA6.PARA6_CODE     
 LEFT OUTER JOIN CITY (NOLOCK)ON C.CITY_CODE = CITY.CITY_CODE     
 LEFT OUTER JOIN STATE (NOLOCK)ON CITY.STATE_CODE = STATE.STATE_CODE     
 JOIN SECTIOND SECD (NOLOCK)ON SECD.SUB_SECTION_CODE = ARTICLE.SUB_SECTION_CODE    
 JOIN SECTIONM SECM (NOLOCK)ON SECM.SECTION_CODE = SECD.SECTION_CODE    
 '+@CWHERE+'    
 ORDER BY C.AC_NAME, T0.RM_NO'    
     
 PRINT @CCMD    
 EXECUTE SP_EXECUTESQL @CCMD    
      
 GOTO LAST    
    
LBLSUPPLIERSLOV:    

    DECLARE @CHEADCODE VARCHAR(MAX),@CHEADCODE1 VARCHAR(MAX),@CHEADCODE2 VARCHAR(4000),@CHEADCODE3 VARCHAR(4000) 
    SET @CHEADCODE=DBO.FN_ACT_TRAVTREE(@CWHERE)
    SELECT  A.AC_CODE, A.AC_NAME, ISNULL(A.CREDIT_DAYS, 0) AS CREDIT_DAYS,       
    ISNULL(A.DISCOUNT_PERCENTAGE, 0) AS DISCOUNT_PERCENTAGE,      
    ISNULL(A.ADDRESS0,'') + ' ' +  ISNULL(A.ADDRESS1,'') + ' ' + ISNULL(A.ADDRESS2,'') + ', ' + A.AREA_NAME + ' ' + A.CITY + ' ' +       
    A.STATE AS 'SUPP_ADDRESS', AC_NAME AS REPCOLNAME ,  A.FORM_ID,A.ALIAS AS SUPP_ALIAS,A.BROKER_AC_CODE ,
    A.INV_RATE_TYPE,A.DEFAULT_RATE_TYPE  ,A.STATE_CODE     ,ISNULL(A.ON_HOLD,0) AS ON_HOLD  ,A.Ac_gst_no AS PARTY_GST_NO   
	,A.registered_gst_dealer,A.ac_gst_state_code
    FROM lmv01106 A WITH (NOLOCK)      
    WHERE ( CHARINDEX ( HEAD_CODE,@CHEADCODE ) > 0  OR ALLOW_CREDITOR_DEBTOR = 1 )       
            AND INACTIVE = 0 AND A.AC_NAME <> ''     
    UNION ALL      
    SELECT A.AC_CODE, ALIAS, ISNULL(A.CREDIT_DAYS, 0) AS CREDIT_DAYS,       
    ISNULL(A.DISCOUNT_PERCENTAGE, 0) AS DISCOUNT_PERCENTAGE,       
    ISNULL(A.ADDRESS0,'') + ' ' + ISNULL(A.ADDRESS1,'') + ' ' + ISNULL(A.ADDRESS2,'') + ', ' + A.AREA_NAME + ' ' + A.CITY + ' ' +       
    A.STATE AS 'SUPP_ADDRESS', AC_NAME AS REPCOLNAME ,  A.FORM_ID,A.ALIAS AS SUPP_ALIAS,A.BROKER_AC_CODE , 
    A.INV_RATE_TYPE,A.DEFAULT_RATE_TYPE    ,A.STATE_CODE   ,ISNULL(A.ON_HOLD,0) AS ON_HOLD     ,A.Ac_gst_no AS PARTY_GST_NO     
	,A.registered_gst_dealer,A.ac_gst_state_code
    FROM LMV01106 A   WITH (NOLOCK)     
    WHERE ( CHARINDEX ( HEAD_CODE, @CHEADCODE) > 0  OR ALLOW_CREDITOR_DEBTOR = 1 )       
    AND INACTIVE = 0 AND A.ALIAS <> ''     
    ORDER BY A.AC_NAME       
        
    GOTO LAST    
    
LBLGETMST:   
  
    SELECT 
	/*
		@Rohit 24-03-2021 : On the requst of Arunji and instructed by Sir
		CAST((CASE WHEN RMM01106.XN_ITEM_TYPE IN (1,4) THEN ISNULL(LOC.Enable_EInvoice,0) ELSE 0 END) AS BIT) AS Enable_EInvoice
	*/
	CAST(0 AS BIT) AS Enable_EInvoice,ISNULL(LOC.loc_gst_no,'') AS loc_gst_no,
	 (CASE WHEN RMM01106.mode=2 THEN ISNULL(LOCATION.loc_gst_no,'') ELSE ISNULL(C.Ac_gst_no,'') END) AS [PARTY_GST_NO]
	,CONVERT(NUMERIC(10,2), 0 )AS TAX_AMOUNT_EXCLUSIVE,CONVERT(NUMERIC(10,2), 0 )AS TAX_AMOUNT_INCLUSIVE,
           USERS.USERNAME,  C.AC_NAME AS SUPP_NAME,C.ALIAS AS SUPP_ALIAS,     
           C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + C.AREA_NAME + ' ' + C.CITY + ' ' + C.STATE AS 'SUPP_ADDRESS',
            ISNULL(T7.AC_NAME,'') AS BROKER_AC_NAME ,BIN.BIN_NAME,   
           RMM01106.*, CONVERT(CHAR(10),CASE WHEN RM_DT='' THEN NULL ELSE RM_DT END ,105)  AS RM_DT1 ,
           LOCATION.DEPT_NAME , ISNULL(L.DEPT_NAME,'') AS ACCOUNTS_DEPT_NAME,C.DEFAULT_RATE_TYPE,
           ISNULL(PIM.MRR_NO,'') AS MRR_NO  , ST.GST_STATE_NAME AS PARTY_STATE_NAME,C.E_MAIL,CAST('' AS VARCHAR(40)) AS SP_ID,
          ISNULL(EMP.EMP_NAME,'') AS EMP_NAME,ISNULL(SHIP.AC_NAME,'') AS SHIPPING_AC_NAME
           ,C.Ac_gst_no AS [GST_NO]  ,TD1.TDS_Name AS BROKER_TDS_NAME
		    ,ISNULL(RMM01106.FREIGHT_CGST_AMOUNT,0)+ISNULL(RMM01106.FREIGHT_SGST_AMOUNT,0) +ISNULL(RMM01106.FREIGHT_IGST_AMOUNT,0) AS  FREIGHT_GST_AMT,
     ISNULL(RMM01106.FREIGHT,0)+CASE WHEN 1=1 THEN
     ISNULL(RMM01106.FREIGHT_CGST_AMOUNT,0)+ISNULL(RMM01106.FREIGHT_SGST_AMOUNT,0) +ISNULL(RMM01106.FREIGHT_IGST_AMOUNT,0) 
      ELSE 0 END AS FREIGHT_TOTAL,ISNULL(RMM01106.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(RMM01106.OTHER_CHARGES_SGST_AMOUNT,0) +ISNULL(RMM01106.OTHER_CHARGES_IGST_AMOUNT,0) AS  OTHER_CHARGES_GST_AMT,
     ISNULL(RMM01106.OTHER_CHARGES,0)+CASE WHEN 1=1 THEN
     ISNULL(RMM01106.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(RMM01106.OTHER_CHARGES_SGST_AMOUNT,0) +ISNULL(RMM01106.OTHER_CHARGES_IGST_AMOUNT,0)
     ELSE 0 END AS OTHER_CHARGES_TOTAL,
	 OEM.AC_NAME AS OEM_AC_NAME,OEM.Ac_gst_no AS OEM_GST_NO
    FROM RMM01106 (NOLOCK)
	JOIN LOCATION LOC  (NOLOCK) ON LOC.dept_id=RMM01106.location_Code
    JOIN USERS (NOLOCK) ON RMM01106.USER_CODE = USERS.USER_CODE  
    LEFT OUTER JOIN BIN (NOLOCK) ON BIN.BIN_ID=RMM01106.TARGET_BIN_ID     
    JOIN LMV01106 C (NOLOCK) ON RMM01106.AC_CODE = C.AC_CODE   
    LEFT OUTER JOIN LMV01106 T7 (NOLOCK) ON T7.AC_CODE = RMM01106.BROKER_AC_CODE     
    LEFT OUTER JOIN LOCATION (NOLOCK) ON RMM01106.PARTY_DEPT_ID = LOCATION.DEPT_ID  
    LEFT OUTER JOIN LOCATION L (NOLOCK) ON RMM01106.ACCOUNTS_DEPT_ID = L.DEPT_ID   
    LEFT OUTER JOIN PIM01106 PIM(NOLOCK) ON PIM.MRR_ID=RMM01106.REFMEMOID
    LEFT OUTER JOIN GST_STATE_MST ST ON RMM01106.PARTY_STATE_CODE=ST.GST_STATE_CODE
    LEFT OUTER JOIN EMPLOYEE EMP(NOLOCK) ON EMP.emp_code=rmm01106.EMP_CODE
	LEFT OUTER JOIN LM01106 SHIP(NOLOCK) ON SHIP.AC_CODE=rmm01106.SHIPPING_AC_CODE
	LEFT OUTER JOIN LMV01106 OEM(NOLOCK) ON OEM.AC_CODE=rmm01106.OEM_AC_CODE
	LEFT OUTER JOIN TDS_SECTION TD1(NOLOCK) ON RMM01106.BROKER_TDS_CODE= TD1.TDS_CODE
    WHERE RMM01106.RM_ID =@CWHERE    
        
     GOTO LAST    
    
LBLGETDETAILS:    

		SELECT 		CONVERT(NUMERIC(18,2)
		,((A.xn_value_without_gst+a.igst_amount+a.cgst_amount+a.sgst_amount+A.EXCISE_DUTY_AMOUNT)
		 -COALESCE(((pid.xn_value_without_gst+pid.igst_amount+pid.cgst_amount+pid.sgst_amount-PID.PIMPOSTTAXDISCOUNTAMOUNT
			       +PID.PIMEXCISEDUTYAMOUNT)/pid.invoice_quantity)*a.quantity,A.QUANTITY*(S.PURCHASE_PRICE+ISNULL(F.EXCISE_DUTY_AMOUNT,0)
					+ isnull(F.TAX_AMOUNT ,0)
					)))
		) AS DIFFAMOUNT,
		A.*,B.UOM_CODE,CAST((A.PURCHASE_PRICE*A.QUANTITY) AS NUMERIC(10,2)) AS AMOUNT,   
		(CASE WHEN A.BILL_LEVEL_TAX_METHOD = 1 THEN 'EXCLUSIVE' ELSE 'INCLUSIVE' END) AS TAX_METHOD_NAME  ,    
		RMM.CANCELLED,B.DISCON,E.UOM_TYPE, RMM.RM_NO,  B.ARTICLE_CODE,       
		B.ARTICLE_NO, B.ARTICLE_NAME, B.ARTICLE_DESC, C.PARA1_CODE,       
		C.PARA1_NAME, D.PARA2_CODE, D.PARA2_ORDER, D.PARA2_NAME, E.UOM_CODE, E.UOM_NAME, I.AC_CODE,        
		CONVERT(VARCHAR, S.INV_DT, 105) AS 'INV_DT', S.RECEIPT_DT, S.CHALLAN_NO , E.UOM_TYPE,  
		G.SUB_SECTION_NAME, H.PARA3_CODE,B.STOCK_NA,     
		H.PARA3_NAME, I.AC_NAME, J.SECTION_NAME, S.MRP, S.BARCODE_CODING_SCHEME AS CODING_SCHEME, '' AS BRAND_NAME,     
		'' AS GROUP_NAME, Q.DEPT_NAME, X.PARA4_NAME, X.PARA4_CODE, Y.PARA5_NAME, Y.PARA5_CODE,     
		Z.PARA6_NAME, Z.PARA6_CODE, 0 AS FREIGHT_PERCENTAGE, 0 AS OC_PERCENTAGE, R.FORM_NAME,     
		A.QUANTITY AS 'OLD_QUANTITY', ISNULL(B.DT_CREATED,'') AS [ART_DT_CREATED],ISNULL(H.DT_CREATED,'') AS [PARA3_DT_CREATED],    
		ISNULL(S.DT_CREATED,'') AS [SKU_DT_CREATED],I.CITY  ,S.PRODUCT_NAME,S.FIX_MRP,BIN.BIN_NAME,    
		CAST(0 AS NUMERIC(10,2)) AS FREIGHT,CAST(0 AS NUMERIC(10,2)) AS OTHER_CHARGES, RIGHT(A.W8_CHALLAN_ID,10) AS CHALLAN_NO ,
		--CAST(0 AS NUMERIC(10,2)) AS EXCISE_DUTY_AMOUNT,  
		
        CAST((A.EXCISE_DUTY_AMOUNT*A.QUANTITY) AS NUMERIC(10,2)) AS TOTAL_EXCISE_DUTY_AMOUNT, 
		CAST(0 AS NUMERIC(10,2)) AS ROUND_OFF,CAST(0 AS NUMERIC(10,2)) AS VALUE_ADD,  
		S.ER_FLAG,S.MRP,S.WS_PRICE,PSM.PS_NO,PSM.PS_DT,PSM.PS_ID,B.ALIAS AS ARTICLE_ALIAS 
		,COALESCE(A.QUANTITY*(PID.PURCHASE_PRICE-PID.PIMDISCOUNTAMOUNT-PID.PIMPOSTTAXDISCOUNTAMOUNT
			       +PID.PIMEXCISEDUTYAMOUNT),A.QUANTITY*(S.PURCHASE_PRICE-ISNULL(F.DISCOUNT_AMOUNT,0)+
					ISNULL(F.EXCISE_DUTY_AMOUNT,0))) AS PURCHASEAMOUNT
		,S.ONLINE_PRODUCT_CODE AS ONLINE_BAR_CODE,	CAST(0 AS NUMERIC(10,2)) AS LOT_NO,
		''  AS PUR_FORM_NAME	,CAST(0 AS NUMERIC(10,3)) AS QUANTITY_IN_STOCK	,
		CAST('' AS VARCHAR(40)) AS SP_ID,A.product_code As ORG_PRODUCT_CODE
		  ,AT1.ATTR1_KEY_NAME,AT2.ATTR2_KEY_NAME,AT3.ATTR3_KEY_NAME,AT4.ATTR4_KEY_NAME,AT5.ATTR5_KEY_NAME,AT6.ATTR6_KEY_NAME,
   AT7.ATTR7_KEY_NAME,AT8.ATTR8_KEY_NAME,AT9.ATTR9_KEY_NAME,AT10.ATTR10_KEY_NAME,AT11.ATTR11_KEY_NAME,AT12.ATTR12_KEY_NAME,
   AT13.ATTR13_KEY_NAME,AT14.ATTR14_KEY_NAME,AT15.ATTR15_KEY_NAME,AT16.ATTR16_KEY_NAME,AT17.ATTR17_KEY_NAME,AT18.ATTR18_KEY_NAME,
   AT19.ATTR19_KEY_NAME,AT20.ATTR20_KEY_NAME,AT21.ATTR21_KEY_NAME,AT22.ATTR22_KEY_NAME,AT23.ATTR23_KEY_NAME,AT24.ATTR24_KEY_NAME,
	AT25.ATTR25_KEY_NAME ,CAST(0 AS NUMERIC(14,2)) AS XNITEMWEIGHT,S.VENDOR_EAN_NO
		
		FROM RMD01106 A (NOLOCK)       
		JOIN RMM01106 RMM  (NOLOCK) ON A.RM_ID = RMM.RM_ID  
		LEFT JOIN PID01106 PID(NOLOCK) ON  A.MRR_ID=PID.MRR_ID AND PID.row_id=a.pid_row_id
		LEFT OUTER JOIN PIM01106 PIM (NOLOCK) ON PIM.MRR_ID =PID.MRR_ID 
		JOIN SKU S (NOLOCK) ON A.PRODUCT_CODE = S.PRODUCT_CODE   
		--LEFT OUTER JOIN PMT01106 P (NOLOCK) ON A.PRODUCT_CODE = P.PRODUCT_CODE AND P.DEPT_ID=A.DEPT_ID  AND P.BIN_ID=A.BIN_ID     
		LEFT OUTER JOIN SKU_OH F(NOLOCK) ON S.PRODUCT_CODE = F.PRODUCT_CODE      
		JOIN ARTICLE B (NOLOCK) ON S.ARTICLE_CODE = B.ARTICLE_CODE        
		JOIN PARA1 C (NOLOCK)ON S.PARA1_CODE = C.PARA1_CODE        
		JOIN PARA2 D (NOLOCK)ON S.PARA2_CODE = D.PARA2_CODE       
		JOIN PARA3 H (NOLOCK)ON S.PARA3_CODE = H.PARA3_CODE        
		JOIN PARA4 X (NOLOCK)ON S.PARA4_CODE = X.PARA4_CODE        
		JOIN PARA5 Y (NOLOCK)ON S.PARA5_CODE = Y.PARA5_CODE        
		JOIN PARA6 Z (NOLOCK)ON S.PARA6_CODE = Z.PARA6_CODE       
		JOIN UOM E (NOLOCK)ON B.UOM_CODE = E.UOM_CODE       
		JOIN SECTIOND G (NOLOCK)ON B.SUB_SECTION_CODE = G.SUB_SECTION_CODE        
		JOIN LMV01106 I (NOLOCK)ON S.AC_CODE = I.AC_CODE    
		JOIN SECTIONM J (NOLOCK)ON G.SECTION_CODE = J.SECTION_CODE       
		JOIN LOCATION Q (NOLOCK)ON Q.DEPT_ID = RMM.location_Code
		LEFT JOIN FORM R (NOLOCK)ON A.ITEM_FORM_ID = R.FORM_ID   
		LEFT OUTER JOIN BIN (NOLOCK) ON BIN.BIN_ID=ISNULL(A.BIN_ID,'000')   
		LEFT OUTER JOIN DNPS_MST PSM (NOLOCK) ON PSM.PS_ID= A.PS_ID
		LEFT OUTER JOIN ARTICLE_FIX_ATTR ATTR  (NOLOCK) ON B.ARTICLE_CODE = ATTR.ARTICLE_CODE 
LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE
LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE
LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE
LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE
LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE
LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE
LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE
LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE
LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE
LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE
LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE
LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE
LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE
LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE
LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE
LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE
LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE
LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE
LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE
LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE
LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE
LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE
LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE
LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE
LEFT OUTER JOIN ATTR25_MST AT25(NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE      

		WHERE A.RM_ID =@CWHERE    
        ORDER BY AUTO_SRNO 
        
     GOTO LAST              
    LBLGETBILL:    
        
      SELECT A.MRR_ID,COUNT(B.MRR_NO) AS ITEMCOUNT    
      FROM PID01106 A (NOLOCK)    
      JOIN PIM01106 B (NOLOCK) ON A.MRR_ID = B.MRR_ID     
      JOIN ARTICLE C (NOLOCK)ON A.ARTICLE_CODE = C.ARTICLE_CODE      
      WHERE PRODUCT_CODE =@CWHERE1   
      AND B.MEMO_TYPE=@CMODE 
      GROUP BY  A.MRR_ID    
        
     GOTO LAST    
     LBLGETBILLMASTER:    
         
      SELECT DISTINCT CAST('' AS NVARCHAR(10)) AS SRNO, CAST(0 AS BIT) AS BILLCHECK,       
                      A.MRR_ID,A.MRR_NO,A.INV_DT,A.TOTAL_AMOUNT , C.AC_NAME ,A.AC_CODE, A.BILL_NO AS INV_NO
                  
      FROM PIM01106  A (NOLOCK)    
      JOIN PID01106 B (NOLOCK) ON A.MRR_ID=B.MRR_ID     
      JOIN LMV01106 C (NOLOCK) ON A.AC_CODE = C.AC_CODE     
      WHERE A.CANCELLED = 0  AND B.QUANTITY > 0  
      AND A.MEMO_TYPE=@CMODE
      AND A.AC_CODE= CASE WHEN @CWHERE='' THEN A.AC_CODE ELSE @CWHERE END     
      AND B.PRODUCT_CODE=@CWHERE1    
      
      GOTO LAST    
         
 LBLGETBILLDET:          
	SELECT  PM.AC_CODE, F.UOM_TYPE, H.SECTION_NAME, G.SUB_SECTION_NAME, PD.PRODUCT_CODE,        
	CONVERT(VARCHAR, PM.INV_DT, 105) AS INV_DT,PM.BILL_NO AS BILL_NO,PM.INV_NO AS CHALLAN_NO, LM.AC_NAME,          
    PD.MRP, B.ARTICLE_CODE, B.ARTICLE_NO, B.ARTICLE_NAME, B.ARTICLE_DESC,PM.MEMO_TYPE,    
	C.PARA1_NAME, D.PARA2_NAME,  E.PARA3_NAME, P4.PARA4_NAME, P5.PARA5_NAME , P6.PARA6_NAME,     
	F.UOM_CODE, F.UOM_NAME, J.FREIGHT, PD.TAX_AMOUNT, PD.FORM_ID,         
	I.FORM_NAME, J.OTHER_CHARGES, PD.TAX_PERCENTAGE, 0 AS QUANTITY_IN_STOCK,        
    ISNULL(B.DT_CREATED,'') AS [ART_DT_CREATED],ISNULL(E.DT_CREATED,'') AS [PARA3_DT_CREATED],    
	ISNULL(SKU.DT_CREATED,'') AS [SKU_DT_CREATED], PM.MRR_NO ,SKU.BARCODE_CODING_SCHEME AS CODING_SCHEME,B.DISCON,'' AS CITY,PM.MRR_ID,    
	CAST( 0  AS BIT) AS BILLCHECK,PD.QUANTITY,  
	PD.GROSS_PURCHASE_PRICE,
	PD .DISCOUNT_PERCENTAGE AS [PUR_DISCOUNT_PERCENTAGE],
	(CASE WHEN PD.INVOICE_QUANTITY>0 THEN     
    CAST(PD.DISCOUNT_AMOUNT/PD.INVOICE_QUANTITY AS NUMERIC(14,2)) ELSE 0 END) AS [PUR_DISCOUNT_AMOUNT], 
    PD.PURCHASE_PRICE,
    PM.DISCOUNT_PERCENTAGE AS [DISCOUNT_PERCENTAGE],
    CAST((PD.PURCHASE_PRICE * PM.DISCOUNT_PERCENTAGE/100) AS NUMERIC(14,2)) AS [DISCOUNT_AMOUNT], 
    (CASE WHEN PM.DISCOUNT_PERCENTAGE=0 THEN PD.PURCHASE_PRICE ELSE (PD.PURCHASE_PRICE-(PD.PURCHASE_PRICE *PM.DISCOUNT_PERCENTAGE/100)) END) AS INV_RATE ,       
     (CASE WHEN PM.DISCOUNT_PERCENTAGE=0 THEN PD.PURCHASE_PRICE ELSE (PD.PURCHASE_PRICE-(PD.PURCHASE_PRICE *PM.DISCOUNT_PERCENTAGE/100)) END) AS RATE ,       
    (CASE WHEN PM.BILL_LEVEL_TAX_METHOD = 1 THEN 'EXCLUSIVE' ELSE 'INCLUSIVE' END) AS TAX_METHOD_NAME , 
    PD.PURCHASE_PRICE AS PUR_PURCHASE_PRICE, J.EXCISE_DUTY_AMOUNT,PM.BILL_LEVEL_TAX_METHOD,
    B.ALIAS AS ARTICLE_ALIAS,PM.BIN_ID,B1.BIN_NAME, PM.TERMS,PD.CASHDISCOUNTAMOUNT
   ,(PD.INVOICE_QUANTITY*(ISNULL(PD.PURCHASE_PRICE,0)-ISNULL(PD.PIMDISCOUNTAMOUNT,0)-ISNULL(PD.PIMPOSTTAXDISCOUNTAMOUNT,0)
	 +ISNULL(PD.PIMEXCISEDUTYAMOUNT,0))) AS PURCHASEAMOUNT 
   ,CONVERT(NUMERIC(18,2),0) AS DIFFAMOUNT	 
  FROM PID01106 PD (NOLOCK)      
  JOIN PIM01106 PM (NOLOCK)ON PD.MRR_ID = PM.MRR_ID           
  JOIN ARTICLE B (NOLOCK) ON PD.ARTICLE_CODE = B.ARTICLE_CODE              
  JOIN PARA1 C (NOLOCK) ON PD.PARA1_CODE = C.PARA1_CODE              
  JOIN PARA2 D (NOLOCK) ON PD.PARA2_CODE = D.PARA2_CODE             
  JOIN PARA3 E (NOLOCK) ON PD.PARA3_CODE = E.PARA3_CODE              
  JOIN PARA4 P4 (NOLOCK) ON PD.PARA4_CODE = P4.PARA4_CODE              
  JOIN PARA5 P5 (NOLOCK) ON PD.PARA5_CODE = P5.PARA5_CODE              
  JOIN PARA6 P6 (NOLOCK) ON PD.PARA6_CODE = P6.PARA6_CODE               
  JOIN UOM F (NOLOCK) ON B.UOM_CODE = F.UOM_CODE             
  JOIN SECTIOND G (NOLOCK) ON B.SUB_SECTION_CODE = G.SUB_SECTION_CODE              
  JOIN SECTIONM H (NOLOCK) ON G.SECTION_CODE = H.SECTION_CODE             
  JOIN FORM I (NOLOCK) ON PD.FORM_ID = I.FORM_ID             
  JOIN SKU_OH J (NOLOCK) ON PD.PRODUCT_CODE = J.PRODUCT_CODE   
  JOIN SKU SKU (NOLOCK) ON PD.PRODUCT_CODE = SKU.PRODUCT_CODE        
  JOIN LM01106 LM (NOLOCK) ON PM.AC_CODE = LM.AC_CODE   
  JOIN BIN B1 (NOLOCK) ON B1.BIN_ID=PM.BIN_ID   
  WHERE PM.CANCELLED = 0 AND PD.QUANTITY > 0  AND PM.MEMO_TYPE=@CMODE
  AND PM.AC_CODE= CASE WHEN @CWHERE='' THEN PM.AC_CODE ELSE @CWHERE END             
  AND  PD.PRODUCT_CODE=@CWHERE1      
          
  GOTO LAST    
  
LBLPSMST:    
     
    IF OBJECT_ID('TEMPDB..#TMPWPS','U') IS NOT NULL    
    DROP TABLE #TMPWPS    
      
    SELECT DISTINCT ISNULL(A.PS_ID,'') AS PS_ID 
    INTO #TMPWPS 
    FROM RMD01106 A (NOLOCK) 
    JOIN RMM01106 B (NOLOCK) ON A.RM_ID=B.RM_ID      
    WHERE (B.AC_CODE=@CWHERE OR @CWHERE='' ) --AND (B.PARTY_DEPT_ID=@CWHERE1 OR @CWHERE1='' )  
     AND B.MODE=@CMODE AND CANCELLED=0  
      
    SELECT CAST(0 AS BIT) AS BILLCHECK, B.PS_ID,B.PS_NO,B.PS_DT,   
    SUM(QUANTITY) AS TOTAL_QTY,      
    CAST('' AS NVARCHAR(10)) AS SRNO ,B.REMARKS    
    FROM DNPS_DET A (NOLOCK)      
    JOIN DNPS_MST B (NOLOCK) ON A.PS_ID= B.PS_ID       
    LEFT OUTER JOIN #TMPWPS C (NOLOCK) ON C.PS_ID=B.PS_ID    
    WHERE (B.AC_CODE=@CWHERE OR @CWHERE='' ) 
     AND (((B.PARTY_DEPT_ID=@CWHERE1 OR B.AC_CODE=@CWHERE) AND  b.location_Code=@CWHERE2  AND @CMODE=2) 
		OR (b.location_Code= @CWHERE1 AND @CMODE=1))
    AND B.PS_MODE=@CMODE   and isnull(B.bill_challan_mode,0) =@IENTRYMODE
	AND ISNULL(B.MEMO_TYPE,1)= @NESTIMATEMODE 
    AND CANCELLED=0 AND C.PS_ID IS NULL    
    GROUP BY  B.PS_ID,B.PS_NO,B.PS_DT ,B.REMARKS         
    ORDER BY PS_ID     
    
 GOTO LAST    
     
LBLPSDET:    
    
   DECLARE @CQRY1 NVARCHAR(MAX)          
   SET @CQRY1=N' SELECT        
   CAST(0 AS BIT) AS BILLCHECK      
  ,W1.PS_ID      
  ,W2.PS_NO      
  ,W2.PS_DT      
  ,W1.PRODUCT_CODE      
  ,W1.QUANTITY 
  ,W1.BIN_ID
  ,BIN.BIN_NAME           
   FROM DNPS_DET  W1 (NOLOCK)       
   JOIN DNPS_MST W2 (NOLOCK) ON W1.PS_ID= W2.PS_ID 
   JOIN BIN BIN (NOLOCK) ON BIN.BIN_ID=W1.BIN_ID                  
   WHERE W2.PS_ID IN ('+@CWHERE1+')  
   ORDER BY W2.PS_NO '    
     
       
   PRINT @CQRY1      
   EXEC SP_EXECUTESQL @CQRY1        
     
   GOTO LAST  
        
LAST:    
  
END
