create PROCEDURE SP_SYNCH_MIRRORDATA_PUR_SINGLE
(
    @CLOCID VARCHAR(3)
   ,@CERRMSG VARCHAR(1000) OUTPUT
)
--WITH ENCRYPTION
AS
SET NOCOUNT ON
BEGIN


	/*
		208_2014_01_13 : THIS PROCEDURE WILL MERGE DATA FROM TEMPORARY TABLE TO ACTUAL TABLE.
						 TABLE NAMES AND ITS MERGING ORDER WILL BE FIXED AND WILL BE DEFINED HERE.	
						 
		NOTE : EMPLOYEE_HEAD WILL BE MERGED TO EMPLOYEE				 
	*/

DECLARE @CSTEP VARCHAR(100),@DTSQL NVARCHAR(MAX),@NMERGE_ORDER NUMERIC(5),@cUpdatestr VARCHAR(4000)
	   ,@CTABLENAME VARCHAR(200),@CTABLE_SUFFIX VARCHAR(50),@CKEYFIELD VARCHAR(200),@CDEL_ID VARCHAR(50),@CTMP_TABLENAME VARCHAR(200),@LINSERTONLY VARCHAR(1)
	   ,@CFILTERCONDITION VARCHAR(200),@LUPDATEONLY VARCHAR(1),@BALWAYSUPDATE VARCHAR(1),@FDEL CHAR(1)
	   ,@CERRMSGOUT VARCHAR(1000),@CTABLESSTR VARCHAR(MAX),@CMIRRORINGENABLED VARCHAR(5)
	   ,@CCURDEPTID VARCHAR(5),@CTEMPMASTERTABLE VARCHAR(200),@CTEMPDETAILTABLE1 VARCHAR(200),@CTEMPDETAILTABLE2 VARCHAR(200)
	   ,@CTEMPPAYMODETABLE VARCHAR(200),@CTEMPTABLE VARCHAR(100),@CDONOTRESETPOSTEDINAC VARCHAR(1)
	   ,@BADDMODE BIT,@CCUTOFFDATE VARCHAR(20),@CWHERECLAUSE VARCHAR(2000),@CMEMONOLEN VARCHAR(5),@NMEMONOLEN INT
	   ,@DMINMEMODT DATETIME,@DMAXMEMODT DATETIME,@CFINYEAR VARCHAR(5),@CMEMOPREFIX VARCHAR(10)
	   ,@CMINMEMONO VARCHAR(20),@CMAXMEMONO VARCHAR(20),@CSOURCEDB VARCHAR(200),@CMERGEDB VARCHAR(200)
	   ,@BMSTINSERTONLY BIT,@BSERIESMISMATCHFOUND BIT,@CMEMOID VARCHAR(40),@CPREVMEMONO VARCHAR(20)
	   ,@NPREVMEMONO NUMERIC(5,0),@NLENVALUE INT,@CPREVMEMONOSEARCH VARCHAR(20),@CMEMOIDSEARCH VARCHAR(40)
	   ,@CRETPRODUCTCODE VARCHAR(50),@NVERSIONNO INT,@CJOINSTR VARCHAR(MAX),@CTEMPSKUTABLE VARCHAR(500)
	   ,@CPARTYDEPTID VARCHAR(5),@CTEMPIMPTABLE VARCHAR(200),@CFILTERCONDITION3 VARCHAR(500),
	   @CCMD NVARCHAR(MAX),@CKEYFIELD1 VARCHAR(200),@SLS_SYNC_AFTER DATETIME,@CWHERE varchar(100)
	

BEGIN TRY
	   
	
	 
	SELECT @CSOURCEDB='',@CMERGEDB='',@BMSTINSERTONLY=1,@BSERIESMISMATCHFOUND=0
	
    	
    SELECT TOP 1 @CCURDEPTID=VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'

	SELECT @CTEMPMASTERTABLE=@CSOURCEDB+'PUR_PIM01106_MIRROR',
		   @CTEMPDETAILTABLE1=@CSOURCEDB+'PUR_PID01106_MIRROR'

	IF EXISTS (SELECT TOP 1 tablename FROM savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@@SPID)
		DELETE FROM savetran_updcols_updatestr WITH (ROWLOCK) WHERE sp_id=@@SpId

	INSERT savetran_updcols_updatestr (sp_id,tablename,updatestr)
	SELECT @@SPId as sp_id,tablename,'' from mirrorxnsinfo (NOLOCK)
	WHERE tablename IN ('pim01106','pid01106','DAILOGFILE','sku')

	IF OBJECT_ID('TEMPDB..#T','U') IS NOT NULL
		DROP TABLE #T
	
	select mrr_id INTO #t FROM pur_pim01106_mirror (NOLOCK) WHERE 1=2
			
LBLSTART:
    
    BEGIN TRANSACTION


    SELECT @CMEMOID='',@NVERSIONNO=0
    
    SET @SLS_SYNC_AFTER=''
	SELECT @SLS_SYNC_AFTER=ISNULL(VALUE, '') FROM CONFIG WHERE config_option='SLS_SYNC_AFTER'

		
	DECLARE @DFREEZINGDATE DATETIME	
	EXEC SP3S_GETDATA_FREEZING_DATE 'PUR',@DFREEZINGDATE OUTPUT

	SELECT TOP 1 @CMEMOID = B.MRR_ID ,@NVERSIONNO=VERSION_NO
    FROM PUR_PIM01106_MIRROR B (NOLOCK)
    LEFT OUTER JOIN MIRROR_SYNCH_LOG C (NOLOCK) ON C.MEMO_ID=B.MRR_ID AND C.XN_TYPE='PUR'
    WHERE LEFT(B.MRR_ID,2)=@CLOCID AND DATEDIFF(SS,B.VERSION_LAST_UPDATE,GETDATE())>60 AND C.MEMO_ID IS NULL
    AND INV_MODE=1 AND RECEIPT_DT>@DFREEZINGDATE
    AND B.MRR_DT > @SLS_SYNC_AFTER
    ORDER BY B.MRR_ID,VERSION_NO DESC
    
    IF ISNULL(@CMEMOID,'')=''
		GOTO EXIT_PROC
		
	SET @CSTEP=17
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1
		
    SET @CFILTERCONDITION = 'B.MRR_ID='''+@CMEMOID+''' AND B.VERSION_NO='+LTRIM(RTRIM(STR(@NVERSIONNO)))
	

	
	SET @CMEMOIDSEARCH=''
	SELECT TOP 1 @CMEMOIDSEARCH=A.MRR_ID FROM PIM01106 A (NOLOCK) WHERE A.MRR_ID=@CMEMOID

	SET @CSTEP=19
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

	

	
	IF ISNULL(@CMEMOIDSEARCH,'')<>''
		SET @BADDMODE=0
	ELSE
		SET @BADDMODE=1

	SET @CSTEP=21
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

	IF @BADDMODE=0
	BEGIN

		SET @CSTEP=23
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1
		
		EXEC SP3S_VERIFY_PURDATA_merge_CHANGES
		@cMemoId=@cMemoId
	END

	DECLARE @cMissingRowId VARCHAR(40)

	IF @BADDMODE=0
	BEGIN	
	     
		 --donot overwrite approval level no  
		 UPDATE A SET APPROVEDLEVELNO=B.APPROVEDLEVELNO FROM PUR_PIM01106_UPLOAD A (NOLOCK) 
		 JOIN PIM01106  B (NOLOCK) ON A.MRR_ID =B.MRR_ID 
		 JOIN LOCATION L (NOLOCK) ON A.PUR_FOR_DEPT_ID =L.DEPT_ID 
		 WHERE A.MRR_ID =@CMEMOID AND  ISNULL(L.ALLOW_PURCHASE_AT_HO,0)=1
		 AND A.APPROVEDLEVELNO<>B.APPROVEDLEVELNO

		SET @CSTEP=27
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

		SELECT TOP 1 @cMissingRowId=a.row_id FROM PID01106 A (NOLOCK) 
		LEFT JOIN 
		(SELECT row_id FROM PUR_PID01106_MIRROR B (NOLOCK) WHERE mrr_id=@cMEmoId) b
		ON A.row_ID =B.row_ID WHERE A.MRR_ID =@CMEMOID AND b.row_id IS NULL

		IF ISNULL(@cMissingRowId,'')<>''
		BEGIN		
			SET @CSTEP=30
			EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

			DELETE A FROM PID01106 A (NOLOCK) LEFT JOIN 
			(SELECT row_id FROM PUR_PID01106_MIRROR B (NOLOCK) WHERE mrr_id=@cMEmoId) b
			ON A.row_ID =B.row_ID WHERE A.MRR_ID =@CMEMOID AND b.row_id IS NULL
		END

		SET @CSTEP=32
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

		SELECT TOP 1 @cMissingRowId=a.ROWID FROM DAILOGFILE A (NOLOCK) 
		LEFT JOIN 
		(SELECT ROWID FROM PUR_DAILOGFILE_MIRROR B (NOLOCK) WHERE MEMONO=@cMEmoId) b
		ON A.ROWID =B.ROWID WHERE A.MEMONO =@CMEMOID AND b.ROWID IS NULL

		
		IF ISNULL(@cMissingRowId,'')<>''
		BEGIN		
			SET @CSTEP=35
		    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

			DELETE A FROM DAILOGFILE A LEFT JOIN 
			(SELECT ROWID FROM PUR_DAILOGFILE_MIRROR B (NOLOCK) WHERE MEMONO=@cMEmoId) b
			ON A.ROWID =B.ROWID WHERE A.MEMONO =@CMEMOID AND b.ROWID IS NULL
		END
	END
	
LBLMERGE:
	---DELETING EXISTING RECORD IF BILL COMES AGAIN FOR MERGING
	
	--SELECT @CTEMPMASTERTABLE,@CFILTERCONDITION

	SET @CSTEP=37
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1
	
	EXEC SP3S_REMOVE_MIRROR_DULICATE_MSTERS @CMEMOID,@NVERSIONNO,'PUR'
	
	SET @CSTEP=40
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

	SET @CFILTERCONDITION = REPLACE(@CFILTERCONDITION,'MRR_ID','PUR_MEMO_ID')
	
	SET @CWHERE=' AND A.PUR_MEMO_ID='''+@CMEMOID+''' AND A.VERSION_NO='+LTRIM(RTRIM(STR(@NVERSIONNO)))

	SET @CTABLENAME='SECTIONM'
	SET @CTMP_TABLENAME='PUR_SECTIONM_MIRROR'
	SET @CKEYFIELD='SECTION_CODE'

	EXEC SP3S_INACTIVE_MASTERS @CTEMPTABLE=@CTMP_TABLENAME,@CTABLENAME=@CTABLENAME,@CCOLNAME='SECTION_NAME',@CCOLKEYNAME=@CKEYFIELD,@CWHERE=@CWHERE,@CWHERE=@CWHERE
	
	SET @CSTEP=45
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
							  ,@BALWAYSUPDATE=1 

	SET @CTABLENAME='SECTIOND'
	SET @CTMP_TABLENAME='PUR_SECTIOND_MIRROR'
	SET @CKEYFIELD='SUB_SECTION_CODE'

	
	SET @CSTEP=50

	EXEC SP3S_INACTIVE_MASTERS @CTEMPTABLE=@CTMP_TABLENAME,@CTABLENAME=@CTABLENAME,@CCOLNAME='SUB_SECTION_NAME',@CCOLKEYNAME=@CKEYFIELD,@CWHERE=@CWHERE

   EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
							  ,@BALWAYSUPDATE=1 
							  
   	SET @CSTEP=55
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

	SET @CTABLENAME='SD_ATTR_AVATAR'
	SET @CTMP_TABLENAME='PUR_'+@CTABLENAME+'_MIRROR'
	SET @CKEYFIELD='SUB_SECTION_CODE'
	

	
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB        
         ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''        
         ,@LINSERTONLY=@BMSTINSERTONLY,@CJOINSTR='',@LUPDATEONLY=0        
         ,@BALWAYSUPDATE=1,@CFILTERCONDITION=@CFILTERCONDITION 
	
	
								  
	SET @CSTEP=60
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1


	SET @CTABLENAME='ARTICLE'
	SET @CTMP_TABLENAME='PUR_ARTICLE_MIRROR'
	SET @CKEYFIELD='ARTICLE_CODE'

	EXEC SP3S_INACTIVE_MASTERS @CTEMPTABLE=@CTMP_TABLENAME,@CTABLENAME=@CTABLENAME,@CCOLNAME='ARTICLE_NO',@CCOLKEYNAME=@CKEYFIELD,@CWHERE=@CWHERE

	IF EXISTS (SELECT TOP 1 a.article_code FROM PUR_ARTICLE_MIRROR a LEFT OUTER JOIN article b ON a.article_code=b.article_code
			   WHERE a.PUR_MEMO_ID=@cMemoId AND b.article_code IS NULL)	
		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
								  ,@BALWAYSUPDATE=1 
							  
							  
	DECLARE @NCOUNT INT,@BLOOP INT,@CCMD1 NVARCHAR(MAX),@bExists bit
	SET @NCOUNT=25
	SET @BLOOP=1
	WHILE (@BLOOP <=@NCOUNT )
	BEGIN

			SET @CSTEP=65
			EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1
	      
			DECLARE @CATTR_KEY_NAME VARCHAR(100)

		  
			SET @CTABLENAME='ATTR'+RTRIM(LTRIM(STR(@BLOOP)))+'_MST'
			SET @CTMP_TABLENAME='PUR_ATTR'+RTRIM(LTRIM(STR(@BLOOP)))+'_MST_MIRROR'
			SET @CKEYFIELD='ATTR'+RTRIM(LTRIM(STR(@BLOOP)))+'_KEY_CODE'
			
			SET @cCmd=N'IF EXISTS (SELECT TOP 1 '+@CKEYFIELD+' FROM '+@CTMP_TABLENAME+'(NOLOCK) WHERE pur_memo_id='''+@cMemoId+''')
							SET @bExists=1
						ELSE
							SET @bExists=0'
			EXEC SP_EXECUTESQL @cCmd,N'@bExists BIT OUTPUT' ,@bExists=@bExists OUTPUT

		  	----FOR DUPLICATE ATTRIBUTE 
			
			IF @bExists=1
			BEGIN
				SET @CSTEP=70
				EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

				SET @CATTR_KEY_NAME ='ATTR'+RTRIM(LTRIM(STR(@BLOOP)))+'_KEY_NAME'
					
				SET @CSTEP=72
				EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

				SET @cCmd=N'IF EXISTS (SELECT TOP 1 a.'+@CKEYFIELD+' FROM '+@CTMP_TABLENAME+' a (NOLOCK)
									   LEFT OUTER JOIN '+@CTABLENAME+' b ON a.'+@CKEYFIELD+'=b.'+@CKEYFIELD+'
									   WHERE pur_memo_id='''+@cMemoId+''' AND b.'+@CKEYFIELD+' IS NULL)
							SET @bExists=1
						ELSE
							SET @bExists=0'
				EXEC SP_EXECUTESQL @cCmd,N'@bExists BIT OUTPUT' ,@bExists=@bExists OUTPUT

				SET @CSTEP=75
				EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1
				
				IF @bExists=1
					 EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB        
					 ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''        
					 ,@LINSERTONLY=1,@CJOINSTR='',@LUPDATEONLY=0        
					 ,@BALWAYSUPDATE=1
					 ,@CFILTERCONDITION=@CFILTERCONDITION 

			END
			
		

	       
		   SET @BLOOP=@BLOOP +1  			
	END
    
	IF EXISTS (SELECT TOP 1 a.article_code FROM PUR_ARTICLE_FIX_ATTR_MIRROR a LEFT OUTER JOIN 
			   ARTICLE_FIX_ATTR b (NOLOCK) ON a.article_code=b.article_code
			   WHERE a.PUR_MEMO_ID=@cMemoId AND b.article_code IS NULL)
	BEGIN
		SET @CSTEP=80
	    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

		SET @CTABLENAME='ARTICLE_FIX_ATTR'
		SET @CTMP_TABLENAME='PUR_'+@CTABLENAME+'_MIRROR'
		SET @CKEYFIELD='ARTICLE_CODE'
		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB        
			 ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='ARTICLE_CODE',@CKEYFIELD3=''        
			 ,@LINSERTONLY=1,@CJOINSTR='',@LUPDATEONLY=0        
			 ,@BALWAYSUPDATE=1,@CFILTERCONDITION=@CFILTERCONDITION        
    END            							  
	
	SET @CSTEP=82
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1
	
	IF EXISTS (SELECT TOP 1 a.para1_code FROM PUR_PARA1_MIRROR a LEFT OUTER JOIN 
			   PARA1 b (NOLOCK) ON a.para1_code=b.para1_code
			   WHERE a.PUR_MEMO_ID=@cMemoId AND b.PARA1_code IS NULL AND A.para1_code<>'0000000')
	BEGIN
		SET @CSTEP=85
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

		SET @CTABLENAME='PARA1'
		SET @CTMP_TABLENAME='PUR_PARA1_MIRROR'
		SET @CKEYFIELD='PARA1_CODE'

		EXEC SP3S_INACTIVE_MASTERS @CTEMPTABLE=@CTMP_TABLENAME,@CTABLENAME=@CTABLENAME,@CCOLNAME='PARA1_NAME',@CCOLKEYNAME=@CKEYFIELD,@CWHERE=@CWHERE
	
		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
								  ,@BALWAYSUPDATE=1 
	END

	SET @CSTEP=90
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

	IF EXISTS (SELECT TOP 1 a.para2_code FROM PUR_PARA2_MIRROR a LEFT OUTER JOIN 
			   PARA2 b (NOLOCK) ON a.para2_code=b.para2_code
			   WHERE a.PUR_MEMO_ID=@cMemoId AND b.PARA2_code IS NULL AND A.para2_code<>'0000000')
	BEGIN
		SET @CSTEP=95
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

		SET @CTABLENAME='PARA2'
		SET @CTMP_TABLENAME='PUR_PARA2_MIRROR'
		SET @CKEYFIELD='PARA2_CODE'

	EXEC SP3S_INACTIVE_MASTERS @CTEMPTABLE=@CTMP_TABLENAME,@CTABLENAME=@CTABLENAME,@CCOLNAME='PARA2_NAME',@CCOLKEYNAME=@CKEYFIELD,@CWHERE=@CWHERE
		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
								  ,@BALWAYSUPDATE=1 
	END

	SET @CSTEP=100
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

	IF EXISTS (SELECT TOP 1 a.para3_code FROM PUR_PARA3_MIRROR a LEFT OUTER JOIN 
			   PARA3 b (NOLOCK) ON a.para3_code=b.para3_code
			   WHERE a.PUR_MEMO_ID=@cMemoId AND b.PARA3_code IS NULL AND A.para3_code<>'0000000')
	BEGIN
		SET @CSTEP=105
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

		SET @CTABLENAME='PARA3'
		SET @CTMP_TABLENAME='PUR_PARA3_MIRROR'
		SET @CKEYFIELD='PARA3_CODE'

		EXEC SP3S_INACTIVE_MASTERS @CTEMPTABLE=@CTMP_TABLENAME,@CTABLENAME=@CTABLENAME,@CCOLNAME='PARA3_NAME',@CCOLKEYNAME=@CKEYFIELD,@CWHERE=@CWHERE
	
		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
								  ,@BALWAYSUPDATE=1 
	END

	SET @CSTEP=110
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

	IF EXISTS (SELECT TOP 1 a.para4_code FROM PUR_PARA4_MIRROR a LEFT OUTER JOIN 
			   PARA4 b (NOLOCK) ON a.para4_code=b.para4_code
			   WHERE a.PUR_MEMO_ID=@cMemoId AND b.PARA4_code IS NULL AND A.para4_code<>'0000000')
	BEGIN
		SET @CTABLENAME='PARA4'
		SET @CTMP_TABLENAME='PUR_PARA4_MIRROR'
		SET @CKEYFIELD='PARA4_CODE'
SET @CSTEP=115
		EXEC SP3S_INACTIVE_MASTERS @CTEMPTABLE=@CTMP_TABLENAME,@CTABLENAME=@CTABLENAME,@CCOLNAME='PARA4_NAME',@CCOLKEYNAME=@CKEYFIELD,@CWHERE=@CWHERE
	
		
	    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
								  ,@BALWAYSUPDATE=1 
	END

	SET @CSTEP=120
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

	IF EXISTS (SELECT TOP 1 a.para5_code FROM PUR_PARA5_MIRROR a LEFT OUTER JOIN 
			   PARA5 b (NOLOCK) ON a.para5_code=b.para5_code
			   WHERE a.PUR_MEMO_ID=@cMemoId AND b.PARA5_code IS NULL AND A.para5_code<>'0000000')
	BEGIN
		SET @CTABLENAME='PARA5'
		SET @CTMP_TABLENAME='PUR_PARA5_MIRROR'
		SET @CKEYFIELD='PARA5_CODE'

	
		SET @CSTEP=125

		EXEC SP3S_INACTIVE_MASTERS @CTEMPTABLE=@CTMP_TABLENAME,@CTABLENAME=@CTABLENAME,@CCOLNAME='PARA5_NAME',@CCOLKEYNAME=@CKEYFIELD,@CWHERE=@CWHERE
	    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
								  ,@BALWAYSUPDATE=1 
	END

	SET @CSTEP=130
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

	IF EXISTS (SELECT TOP 1 a.para6_code FROM PUR_PARA6_MIRROR a LEFT OUTER JOIN 
			   PARA6 b (NOLOCK) ON a.para6_code=b.para6_code
			   WHERE a.PUR_MEMO_ID=@cMemoId AND b.PARA6_code IS NULL AND A.para6_code<>'0000000')
	BEGIN
		SET @CTABLENAME='PARA6'
		SET @CTMP_TABLENAME='PUR_PARA6_MIRROR'
		SET @CKEYFIELD='PARA6_CODE'

	
		SET @CSTEP=135
		
		EXEC SP3S_INACTIVE_MASTERS @CTEMPTABLE=@CTMP_TABLENAME,@CTABLENAME=@CTABLENAME,@CCOLNAME='PARA6_NAME',@CCOLKEYNAME=@CKEYFIELD,@CWHERE=@CWHERE
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
								  ,@BALWAYSUPDATE=1 
	END

	SET @CSTEP=140
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1
	
	DECLARE @CINSERTSKUONLY INT 
	SET @CINSERTSKUONLY=1
	
	IF EXISTS (SELECT TOP 1 'U' FROM PUR_PIM01106_MIRROR WHERE MRR_ID =@CMEMOID  AND CANCELLED=0)
	BEGIN

	    SET @CINSERTSKUONLY=0
	END

	SET @CSTEP=145
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1
	
    IF EXISTS (SELECT TOP 1 'U' FROM PUR_SKU_MIRROR A (NOLOCK) JOIN IRD01106 B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
			   JOIN IRM01106 C (NOLOCK) ON B.IRM_MEMO_ID=C.IRM_MEMO_ID 
			   WHERE PUR_MEMO_ID=@CMEMOID AND C.TYPE IN (1,3,4) AND ISNULL(b.new_product_code,'')='')
    BEGIN
		SET @CSTEP=150
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

      SET @CINSERTSKUONLY=1
      UPDATE A SET ARTICLE_CODE=B.ARTICLE_CODE,PARA1_CODE=B.PARA1_CODE,PARA2_CODE=B.PARA2_CODE,
                 PARA3_CODE=B.PARA3_CODE,PARA4_CODE=B.PARA4_CODE,PARA5_CODE=B.PARA5_CODE,
                 PARA6_CODE=B.PARA6_CODE ,MRP=B.MRP,ws_price=b.ws_price 
                 FROM PUR_SKU_MIRROR A 
                 JOIN SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE
                 JOIN IRD01106 C ON C.product_code=A.product_code
                 JOIN irm01106 D ON D.irm_memo_id=C.irm_memo_id
                 WHERE  PUR_MEMO_ID=@CMEMOID AND D.TYPE IN (1,3,4) AND ISNULL(c.new_product_code,'')=''
    END
    
	SET @CSTEP=155
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

	SELECT @cMissingRowId='',@lUpdateonly=0
	IF @BADDMODE=0 AND @CINSERTSKUONLY=0
	BEGIN
		SET @CSTEP=185
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

		SELECT TOP 1 @cMissingRowId=b.product_code FROM 
		(SELECT product_code  FROM PUR_SKU_MIRROR (NOLOCK) WHERE pur_memo_id=(@cMemoId+LEFT(@cMemoId,2))) A
		RIGHT OUTER JOIN 
		(SELECT product_code FROM PUR_SKU_MIRROR (NOLOCK) WHERE pur_memo_id=@cMemoId) b ON 
		a.product_code=b.product_code WHERE a.product_code IS NULL

		--SELECT 'check @cMissingRowId of pid',@cMissingRowId

		IF ISNULL(@cMissingRowId,'')='' 
			SET @lUpdateonly=1
	END

	SET @CSTEP=157
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1
	
	SET @CTABLENAME='SKU'
	SET @CTMP_TABLENAME='PUR_SKU_MIRROR'
	SET @CKEYFIELD='PRODUCT_CODE'
	
	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@@spid and tablename='sku'

	IF @LUPDATEONLY=1 OR EXISTS (SELECT TOP 1 a.product_code FROM PUR_SKU_MIRROR a LEFT OUTER JOIN 
			   sku b (NOLOCK) ON a.product_code=b.product_code
			   WHERE a.PUR_MEMO_ID=@cMemoId AND b.product_code IS NULL) 
		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=@CINSERTSKUONLY,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
								  ,@BALWAYSUPDATE=1,@bUpdateXns=0,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1  

	IF EXISTS (SELECT TOP 1 a.product_code FROM PUR_SKU_OH_MIRROR a LEFT OUTER JOIN 
			   sku_oh b (NOLOCK) ON a.product_code=b.product_code
			   WHERE a.PUR_MEMO_ID=@cMemoId AND b.product_code IS NULL) 
	BEGIN
		SET @CSTEP=160
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

		SET @CTABLENAME='SKU_OH'
		SET @CTMP_TABLENAME='PUR_SKU_OH_MIRROR'
		SET @CKEYFIELD='PRODUCT_CODE'

	
		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1 
	END
								  

LBLDELETETEMPDATA:
 
	IF @BADDMODE=0
		PRINT 'ADDMODE:N'
	ELSE
		PRINT 'ADDMODE:Y'	
	
	SET @CSTEP=165
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

	---UPDATING TRANSACTION TABLES
	SET @CTABLENAME='PIM01106'
	SET @CTMP_TABLENAME='PUR_PIM01106_MIRROR'
	SET @CKEYFIELD='MRR_ID'

	SET @CFILTERCONDITION = 'B.MRR_ID='''+@CMEMOID+''' AND B.VERSION_NO='+LTRIM(RTRIM(STR(@NVERSIONNO)))

	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@@spid and tablename='pim01106'
	SET @LUPDATEONLY = (CASE WHEN @BADDMODE=0 THEN 1 ELSE 0 END)	

	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
							  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1  


	SET @CSTEP=170
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

    --PMT EFFECT IN CASE OF PUR AT HO LOCATION
	DECLARE @CHODEP_ID VARCHAR(2)
	SELECT @CHODEP_ID=value  FROM CONFIG (NOLOCK)  WHERE config_option ='HO_LOCATION_ID'
	IF ISNULL(@BADDMODE,0)=0 AND LEFT(@CMEMOID,2)=@CHODEP_ID
	BEGIN

		SET @CSTEP=175
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1
	   
		EXEC UPDATEPMT   
			   @CXNTYPE   = 'PUR'    
			 , @CXNNO   = ''
			 , @CXNID   = @CMEMOID
			 , @NUPDATEMODE  = 1
			 , @CCMD    = ''  --@CERRMSG
			 ,@NREVERTFLAG=1
			 ,@NALLOWNEGSTOCK=1


	END

	SET @CSTEP=180
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

	SET @CTABLENAME='PID01106'
	SET @CTMP_TABLENAME='PUR_PID01106_MIRROR'
	SET @CKEYFIELD='ROW_ID'
	
	
	SELECT @cMissingRowId='',@lUpdateonly=0
	IF @BADDMODE=0
	BEGIN
		SET @CSTEP=185
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

		SELECT TOP 1 @cMissingRowId=b.row_id FROM 
		(SELECT row_id  FROM PUR_PID01106_MIRROR (NOLOCK) WHERE MRR_id=(@cMemoId+LEFT(@cMemoId,2))) A
		RIGHT OUTER JOIN 
		(SELECT row_id FROM PUR_PID01106_MIRROR (NOLOCK) WHERE MRR_id=@cMemoId) b ON 
		a.row_id=b.row_id WHERE a.row_id IS NULL

		--SELECT 'check @cMissingRowId of pid',@cMissingRowId

		IF ISNULL(@cMissingRowId,'')='' 
			SET @lUpdateonly=1
	END

	SET @CSTEP=190
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

	
	--select 'check @lUpdateonly',@lUpdateonly as lUpdateonly

	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@@spid and tablename='pid01106'

	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@lUpdateonly
							  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 


	
	

	IF  LEFT(@CMEMOID,2)=@CHODEP_ID
	BEGIN
		SET @CSTEP=195
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1
	   
		EXEC UPDATEPMT   
			   @CXNTYPE   = 'PUR'    
			 , @CXNNO   = ''
			 , @CXNID   = @CMEMOID
			 , @NUPDATEMODE  = 1
			 , @CCMD    = '' 


	END

	SET @CSTEP=200
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

	DECLARE @CBOXM_FILTERCONDITION VARCHAR(100)
	SET @CBOXM_FILTERCONDITION = 'B.PUR_MEMO_ID='''+@CMEMOID+''' AND B.VERSION_NO='+LTRIM(RTRIM(STR(@NVERSIONNO)))
	

	IF EXISTS (SELECT TOP 1 BOX_ID FROM boxm (NOLOCK) WHERE REF_MRR_ID =@CMEMOID)
	BEGIN
		SET @CSTEP=205
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

		--DELETING BOX ENTRY FIRST IF ALREADY AVAILABLE
		DELETE A FROM  BOXD A (NOLOCK)
		JOIN BOXM B (NOLOCK) ON A.BOX_ID =B.BOX_ID 
		WHERE B.REF_MRR_ID =@CMEMOID

		DELETE B  FROM BOXM B (NOLOCK) WHERE B.REF_MRR_ID =@CMEMOID
	END

	SET @CSTEP=210
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

	IF EXISTS (SELECT TOP 1 BOX_ID FROM pur_boxm_mirror (NOLOCK) WHERE REF_MRR_ID =@CMEMOID)
	BEGIN
		--START: ADDED ON 20 JAN 2018
		SET @CSTEP=215							  
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

		SET @CTABLENAME='BOXM'
		SET @CTMP_TABLENAME='PUR_BOXM_MIRROR'
		SET @CKEYFIELD='BOX_ID'
	
		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CBOXM_FILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1 
		SET @CSTEP=220
	    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1
		
		SET @CTABLENAME='BOXD'
		SET @CTMP_TABLENAME='PUR_BOXD_MIRROR'
		SET @CKEYFIELD='BOX_ID'
	
		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='ROW_ID',@CKEYFIELD3=''
								  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CBOXM_FILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
								  ,@BALWAYSUPDATE=1 
		--END: ADDED ON 20 JAN 2018
	END

	SET @CSTEP=225
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

	SET @CTABLENAME='DAILOGFILE'
	SET @CTMP_TABLENAME='PUR_DAILOGFILE_MIRROR'
	SET @CKEYFIELD='MEMONO'

	SELECT @cMissingRowId='',@lUpdateonly=0
	IF @BADDMODE=0
	BEGIN
		SELECT TOP 1 @cMissingRowId=b.rowid FROM 
		(SELECT rowid  FROM PUR_dailogfile_MIRROR (NOLOCK) WHERE Memono=(@cMemoId+LEFT(@cMemoId,2))) A
		RIGHT OUTER JOIN 
		(SELECT rowid FROM PUR_dailogfile_MIRROR (NOLOCK) WHERE Memono=@cMemoId) b ON 
		a.rowid=b.rowid WHERE a.rowid IS NULL

		IF ISNULL(@cMissingRowId,'')='' 
			SET @lUpdateonly=1
	END

	SET @CSTEP=230
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

	IF EXISTS (SELECT TOP 1 rowid FROM PUR_DAILOGFILE_MIRROR (NOLOCK) WHERE Memono =@CMEMOID)
	BEGIN	
	
		SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@@spid and tablename='DAILOGFILE'
	
		SET @CFILTERCONDITION3 = REPLACE(@CFILTERCONDITION,'MRR_ID','MEMONO')
		SET @CSTEP=222

		SET @CSTEP=235
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1
	
		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION3,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 
	END
	
	SET @CSTEP=240
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

	EXEC SP3S_MERGE_LOCPMT  
	@cTempTable='PUR_PMT01106_MIRROR',  
	@cMemoIdCol='PUR_MEMO_ID',  
	@cMemoId =@CMEMOID


	SET @CSTEP=245
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1
	
	EXEC SP3S_DELETE_PUR_MIRROR_TABLES @cMemoId
		
		   
	DECLARE @NUPDATEMODE INT
	
	IF ISNULL(@CERRMSG,'')=''
		COMMIT
	ELSE
		GOTO EXIT_PROC
	
    GOTO LBLSTART

END TRY
BEGIN CATCH
	SET @CERRMSG='P:SP_SYNCH_MIRRORDATA_PUR_SINGLE, MEMO ID :'+@CMEMOID+' STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO EXIT_PROC
END CATCH

EXIT_PROC:

	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRMSG,'')='' AND @BSERIESMISMATCHFOUND<>1
			commit
		ELSE
			ROLLBACK
    END
	
END	
---END OF PROCEDURE - SP_SYNCH_MIRRORDATA_PUR_SINGLE