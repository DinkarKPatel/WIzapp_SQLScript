create PROCEDURE SP_POS_SALEANDSETTLEMENTS
(  
	 
	 @NMODE			       INT=2, --- 1 FOR DATETIME --2 FOR MONTH OF @TODATE AND 3 FOR FA YEAR
	 @DTODATE 			   VARCHAR(50)='2019-08-20', --DATE PASS OF FILTER
	 @CCONVERSIONFACTOR	   INT=1,--1 FOR DIVIDE BY THOUSAND 2 FOR 10 THOUSAND 3 FOR LAKH   
	 @LASTYEARCOMPERISION  INT=1,--0 FOR CURRENT YEAR VALUE AND 1 FOR CUR YEAR PREV YEAR AND CONVERSION FACTOR
	 @CDEPTID              VARCHAR(10)='',--LOCATION FILTER
	 @NDIPLAYMODE          INT=1,--1 CLUBBED 2 LOC WISE
	 @BINACTIVE_LOC        INT=0, --0 FOR ACTIVE LOCATION 1 FOR ALL 
	 @BNRV_QUANTITY        INT=0,---0 FOR NRV WISE COMPERISION 1 FOR QUANTITY WISE COMPERISION
	 @SALE_TYPE            INT=1,--0 FOR ALL 1 FOR RETAIL SALE 2 FOR WSL,
	 @CUSER_CODE VARCHAR(7)='0000000'

) 
--WITH ENCRYPTION
AS
BEGIN
--(dinkar) Replace  left(memoid,2) to Location_code 
   -- SET @CDEPTID=''
    DECLARE @CURRENTYEAR VARCHAR(10),@DTSQL NVARCHAR(MAX),@CFILTER VARCHAR(MAX),@NCONVERSIONAMOUNT NUMERIC(18,0),
    @CINV_FILTER VARCHAR(MAX), @CCN_FILTER VARCHAR(MAX)
    SET @CFILTER=''
  
    DECLARE @CMTEMP TABLE ( CURRENTYEAR VARCHAR(20),ID VARCHAR(10),ABSS NUMERIC(12,2),ATS NUMERIC(12,2), TOTAL_BILLS NUMERIC(12,2),   
                            TOTAL_SALE NUMERIC(12,2),QUANTITY NUMERIC(12,2),INRAMOUNT NUMERIC(12,2),CC_AMOUNT NUMERIC(12,2),
                            CREDITAMOUNT NUMERIC(12,2),ADVANCEADJUSTMENT NUMERIC(12,2),CN_ADJ NUMERIC(12,2),ASP NUMERIC(12,2))
    
      DECLARE @CMTEMP1 TABLE ( CURRENTYEAR VARCHAR(20),ID VARCHAR(10),ABSS NUMERIC(12,2),ATS NUMERIC(12,2),TOTAL_BILLS NUMERIC(12,2),   
                               TOTAL_SALE NUMERIC(12,2),QUANTITY NUMERIC(12,2),INRAMOUNT NUMERIC(12,2),CC_AMOUNT NUMERIC(12,2),
                               CREDITAMOUNT NUMERIC(12,2),ADVANCEADJUSTMENT NUMERIC(12,2),CN_ADJ NUMERIC(12,2),ASP NUMERIC(12,2))
     

	 DECLARE @CHODEPT_ID VARCHAR(4),@donotfilterlocid int

	 SELECT @CHODEPT_ID=VALUE FROM config WHERE config_option='HO_LOCATION_ID'

	
	 set @donotfilterlocid=0
	 IF OBJECT_ID ('TEMPDB..#TMPLOCUSER','U') IS NOT NULL
	    DROP TABLE #TMPLOCUSER
	 SELECT DEPT_ID INTO #TMPLOCUSER  FROM LOCUSERS WHERE user_code = @CUSER_CODE 

	 IF EXISTS (SELECT TOP 1 'U' FROM #TMPLOCUSER  WHERE DEPT_ID=@CHODEPT_ID) 
	 SET @DONOTFILTERLOCID=1


	 


    IF @CCONVERSIONFACTOR=1
       SET @NCONVERSIONAMOUNT=1000
    ELSE IF @CCONVERSIONFACTOR=2
       SET @NCONVERSIONAMOUNT=100000
    ELSE IF @CCONVERSIONFACTOR=3
       SET @NCONVERSIONAMOUNT=10000000
    
    IF @DTODATE=''
    SET @DTODATE=(SELECT GETDATE())
    
    SET @CURRENTYEAR=(SELECT '01'+ DBO.FN_GETFINYEAR(@DTODATE))
    
     SET @CFILTER= (CASE WHEN @NMODE = 1 THEN ' A.CM_DT = '''+CONVERT(VARCHAR(11),@DTODATE,120)+''' '    
                        WHEN @NMODE = 2 THEN ' MONTH(A.CM_DT) = MONTH('''+@DTODATE+''') AND A.FIN_YEAR='''+@CURRENTYEAR+''' AND A.CM_DT <= '''+CONVERT(VARCHAR(11),@DTODATE,120)+''' '    
                        WHEN @NMODE = 3 THEN ' A.FIN_YEAR='''+@CURRENTYEAR+'''' ELSE ''  END)    
    
     IF @NMODE=3
     SET @CFILTER=@CFILTER+ 'AND  A.CM_DT <= '''+CONVERT(VARCHAR(11),@DTODATE,120)+''' '
     
     IF @CDEPTID<>''
     SET @CFILTER=@CFILTER+' AND a.location_code='''+@CDEPTID+''''
     
     IF @CFILTER<>''
     SET @CFILTER=' AND '+@CFILTER
     
     
     --*********FOR WSL INVOICE **********NEW ADD 
     SET @CINV_FILTER=''
      SET @CINV_FILTER= (CASE WHEN @NMODE = 1 THEN ' A.INV_DT = '''+CONVERT(VARCHAR(11),@DTODATE,120)+''' '    
                        WHEN @NMODE = 2 THEN ' MONTH(A.INV_DT) = MONTH('''+@DTODATE+''') AND A.FIN_YEAR='''+@CURRENTYEAR+''' AND A.INV_DT <= '''+CONVERT(VARCHAR(11),@DTODATE,120)+''' '    
                        WHEN @NMODE = 3 THEN ' A.FIN_YEAR='''+@CURRENTYEAR+'''' ELSE ''  END)    
    
     IF @NMODE=3
     SET @CINV_FILTER=@CINV_FILTER+ 'AND  A.INV_DT <= '''+CONVERT(VARCHAR(11),@DTODATE,120)+''' '
     
     IF @CDEPTID<>''
     SET @CINV_FILTER=@CINV_FILTER+' AND a.location_code='''+@CDEPTID+''''
     
     IF @CINV_FILTER<>''
     SET @CINV_FILTER=' AND '+@CINV_FILTER
     
     
      --*********END WSL INVOICE **********NEW ADD 
     
    --*********FOR WSL CREDIT NOTE **********NEW ADD 
     SET @CCN_FILTER=''
     SET @CCN_FILTER= (CASE WHEN @NMODE = 1 THEN ' A.RECEIPT_DT = '''+CONVERT(VARCHAR(11),@DTODATE,120)+''' '    
                        WHEN @NMODE = 2 THEN ' MONTH(A.RECEIPT_DT) = MONTH('''+@DTODATE+''') AND A.FIN_YEAR='''+@CURRENTYEAR+''' AND A.RECEIPT_DT <= '''+CONVERT(VARCHAR(11),@DTODATE,120)+''' '    
                        WHEN @NMODE = 3 THEN ' A.FIN_YEAR='''+@CURRENTYEAR+'''' ELSE ''  END)    
    
     IF @NMODE=3
     SET @CCN_FILTER=@CCN_FILTER+ 'AND  A.RECEIPT_DT <= '''+CONVERT(VARCHAR(11),@DTODATE,120)+''' '
     
     IF @CDEPTID<>''
     SET @CCN_FILTER=@CCN_FILTER+' AND a.location_code='''+@CDEPTID+''''
     
     IF @CCN_FILTER<>''
     SET @CCN_FILTER=' AND '+@CCN_FILTER
     
     
      --*********END WSL INVOICE **********NEW ADD 
     
       
IF @NDIPLAYMODE=1    
 BEGIN         
  --IF @BINACTIVE_LOC=0
  --SET @CFILTER=@CFILTER+ 'AND LOC.INACTIVE=''0'''
	     
 SET @DTSQL=N' SELECT ''CURRENTYEAR'' AS CURRENTYEAR,
	        1 AS ID,
	        CONVERT(NUMERIC(18,2),SUM(QUANTITY)/CASE WHEN SUM(CNT) =0 THEN 1 ELSE SUM(CNT) END ) AS ABSS,
	        CONVERT(NUMERIC(18,2),SUM(NET) /CASE WHEN  SUM(CNT) =0 THEN 1 ELSE SUM(CNT) END) AS ATS, 
	        SUM(CNT) AS TOTAL_BILLS ,
	        SUM(NET) AS TOTAL_SALE ,SUM(QUANTITY) AS QUANTITY,
		    SUM(INR) AS INR,SUM(CC) AS CC, SUM(CREDIT) AS CREDIT ,SUM([ADV_ADJ]) AS [ADV_ADJ],SUM([C/N ADJ]) AS [C/N ADJ],
		    0 AS ASP
	FROM 
	(
	SELECT SUM(NET_AMOUNT-ISNULL(ATD_CHARGES,0)) AS NET,COUNT(*) AS CNT,0 AS  QUANTITY,
		   0 AS INR, 0 AS CC,0 AS CREDIT,0 AS ADV_ADJ,0 AS [C/N ADJ] 
	FROM CMM01106  A (NOLOCK)
	LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
	WHERE   CANCELLED= 0  
	AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
	AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=1 ) '+ @CFILTER +'
	UNION  
	SELECT 0 AS NET, 0 AS CNT,SUM(QUANTITY) AS QUANTITY,
		   0 AS INR, 0 AS CC,0 AS CREDIT,0 AS ADV_ADJ,0 AS [C/N ADJ]  
	FROM CMD01106 B  (NOLOCK)
	JOIN CMM01106 A  (NOLOCK) ON A.CM_ID=B.CM_ID 
	LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
	WHERE A.CANCELLED =0 
	AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
	AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=1 ) '+ @CFILTER +'
	UNION

	SELECT  0 AS NET ,0 AS CNT ,0 AS QUANTITY,      
		  CONVERT(NUMERIC(12,2),SUM(CASE WHEN C.PAYMODE_GRP_CODE =''0000001'' THEN AMOUNT ELSE 0 END)) AS INR,
		  CONVERT(NUMERIC(12,2),SUM(CASE WHEN C.PAYMODE_GRP_CODE =''0000002'' THEN AMOUNT ELSE 0 END)) AS CC,
		  CONVERT(NUMERIC(12,2),SUM(CASE WHEN C.PAYMODE_GRP_CODE =''0000004'' THEN AMOUNT ELSE 0 END)) AS CREDIT,
		  CONVERT(NUMERIC(12,2),SUM(CASE WHEN C.PAYMODE_CODE =''0000002'' THEN AMOUNT ELSE 0 END)) AS [ADV_ADJ],
		  CONVERT(NUMERIC(12,2),SUM(CASE WHEN C.PAYMODE_CODE =''0000001'' THEN AMOUNT ELSE 0 END)) AS [C/N ADJ] 

	FROM 
	CMM01106 A(NOLOCK)
	JOIN PAYMODE_XN_DET B (NOLOCK)  ON A.CM_ID=B.MEMO_ID AND XN_TYPE=''SLS''
	JOIN PAYMODE_MST C (NOLOCK) ON B.PAYMODE_CODE=C.PAYMODE_CODE
	JOIN PAYMODE_GRP_MST D (NOLOCK) ON C.PAYMODE_GRP_CODE=D.PAYMODE_GRP_CODE
	LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
	WHERE A.CANCELLED =0 
	AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
	AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=1 ) '+ @CFILTER +'
	
	UNION ALL
	--FOR WSL INVOICE
	
	
	SELECT SUM(NET_AMOUNT-(ISNULL(OTHER_CHARGES,0)+isnull(freight,0)+isnull(insurance,0)+isnull(packing,0))) AS NET,COUNT(*) AS CNT,0 AS  QUANTITY,
		   0 AS INR, 0 AS CC,0 AS CREDIT,0 AS ADV_ADJ,0 AS [C/N ADJ] 
	FROM INM01106 (NOLOCK) A
	LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
	WHERE  A.INV_MODE=1 AND CANCELLED= 0 
	AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
	AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 ) '+ @CINV_FILTER +'
	UNION  
	SELECT 0 AS NET, 0 AS CNT,SUM(QUANTITY) AS QUANTITY,
		   0 AS INR, 0 AS CC,0 AS CREDIT,0 AS ADV_ADJ,0 AS [C/N ADJ]  
	FROM IND01106 B  (NOLOCK)
	LEFT JOIN #TMPLOCUSER L on b.location_code=l.dept_id
	JOIN INM01106 A  (NOLOCK) ON A.INV_ID=B.INV_ID 
	WHERE  A.INV_MODE=1 AND A.CANCELLED =0 
	AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
	AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 ) '+ @CINV_FILTER +'
	UNION

	SELECT  0 AS NET ,0 AS CNT ,0 AS QUANTITY,      
		  CONVERT(NUMERIC(12,2),SUM(CASE WHEN A.PAY_MODE=1 THEN NET_AMOUNT-(ISNULL(OTHER_CHARGES,0)+isnull(freight,0)+isnull(insurance,0)+isnull(packing,0)) ELSE 0 END)) AS INR,
		  CONVERT(NUMERIC(12,2),SUM(CASE WHEN A.PAY_MODE=2 THEN NET_AMOUNT-(ISNULL(OTHER_CHARGES,0)+isnull(freight,0)+isnull(insurance,0)+isnull(packing,0)) ELSE 0 END)) AS CC,
		  CONVERT(NUMERIC(12,2),SUM(CASE WHEN A.PAY_MODE NOT IN(1,2) THEN NET_AMOUNT-(ISNULL(OTHER_CHARGES,0)+isnull(freight,0)+isnull(insurance,0)+isnull(packing,0)) ELSE 0 END)) AS CREDIT,
		  CONVERT(NUMERIC(12,2),0) AS [ADV_ADJ],
		  CONVERT(NUMERIC(12,2),0) AS [C/N ADJ] 

	FROM 
	INM01106 A(NOLOCK)
	LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
	WHERE  A.INV_MODE=1 AND A.CANCELLED =0 
	AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
	AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 ) '+ @CINV_FILTER +'
	--END OF WSL INVOICE
	
	--WSL CREDIT NOTE
	UNION ALL
	
	SELECT -1*SUM(TOTAL_AMOUNT-(ISNULL(OTHER_CHARGES,0)+isnull(freight,0)+isnull(insurance,0)) ) AS NET,COUNT(*) AS CNT,0 AS  QUANTITY,
		   0 AS INR, 0 AS CC,0 AS CREDIT,0 AS ADV_ADJ,0 AS [C/N ADJ] 
	FROM CNM01106 (NOLOCK) A
	LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
	WHERE  A.mode=1 AND CANCELLED= 0 
	AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
	AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 ) '+ @Ccn_FILTER +'
	UNION  
	SELECT 0 AS NET, 0 AS CNT,-1*SUM(QUANTITY) AS QUANTITY,
		   0 AS INR, 0 AS CC,0 AS CREDIT,0 AS ADV_ADJ,0 AS [C/N ADJ]  
	FROM CNd01106 B  (NOLOCK)
	JOIN CNM01106 A  (NOLOCK) ON A.cn_id=B.cn_id 
	LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
	WHERE  A.mode=1 AND A.CANCELLED =0 
	AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
	AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 ) '+ @Ccn_FILTER +'
	UNION

	SELECT  0 AS NET ,0 AS CNT ,0 AS QUANTITY,      
		  CONVERT(NUMERIC(12,2),-1*SUM(CASE WHEN A.PAY_MODE=1 THEN TOTAL_AMOUNT-(ISNULL(OTHER_CHARGES,0)+isnull(freight,0)+isnull(insurance,0))  ELSE 0 END)) AS INR,
		  CONVERT(NUMERIC(12,2),-1*SUM(CASE WHEN A.PAY_MODE=2 THEN TOTAL_AMOUNT-(ISNULL(OTHER_CHARGES,0)+isnull(freight,0)+isnull(insurance,0))  ELSE 0 END)) AS CC,
		  CONVERT(NUMERIC(12,2),-1*SUM(CASE WHEN A.PAY_MODE NOT IN(1,2) THEN TOTAL_AMOUNT-(ISNULL(OTHER_CHARGES,0)+isnull(freight,0)+isnull(insurance,0))  ELSE 0 END)) AS CREDIT,
		  CONVERT(NUMERIC(12,2),0) AS [ADV_ADJ],
		  CONVERT(NUMERIC(12,2),0) AS [C/N ADJ] 

	FROM 
	cnm01106 A(NOLOCK)
	LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
	WHERE  A.mode=1 
	AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
	AND A.CANCELLED =0 AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=1 ) '+ @Ccn_FILTER +'
	
) A '
PRINT @DTSQL
INSERT INTO @CMTEMP
EXEC SP_EXECUTESQL @DTSQL

 UPDATE @CMTEMP SET ASP=TOTAL_SALE/CASE WHEN ISNULL(QUANTITY,0)=0 THEN 1 ELSE QUANTITY END

	IF @LASTYEARCOMPERISION<>0
	 BEGIN
	      SET @DTODATE=(SELECT DATEADD(YEAR,-1,@DTODATE))
	      SET @CURRENTYEAR=(SELECT '01'+ DBO.FN_GETFINYEAR(@DTODATE))
	      
		  SET @CFILTER = (CASE WHEN @NMODE = 1 THEN ' A.CM_DT = '''+CONVERT(VARCHAR(11),@DTODATE,120)+''' AND  A.FIN_YEAR='''+@CURRENTYEAR+''''    
							   WHEN @NMODE = 2 THEN ' MONTH(A.CM_DT) = MONTH('''+@DTODATE+''') AND  A.FIN_YEAR='''+@CURRENTYEAR+''' AND A.CM_DT <= '''+CONVERT(VARCHAR(11),@DTODATE,120)+''' '    
							   WHEN @NMODE = 3 THEN ' A.FIN_YEAR='''+@CURRENTYEAR+''''  ELSE '' END) 
		
							   
		  SET @CINV_FILTER = (CASE WHEN @NMODE = 1 THEN ' A.INV_DT = '''+CONVERT(VARCHAR(11),@DTODATE,120)+''' AND  A.FIN_YEAR='''+@CURRENTYEAR+''''    
							   WHEN @NMODE = 2 THEN ' MONTH(A.INV_DT) = MONTH('''+@DTODATE+''') AND  A.FIN_YEAR='''+@CURRENTYEAR+''' AND A.INV_DT <= '''+CONVERT(VARCHAR(11),@DTODATE,120)+''' '    
							   WHEN @NMODE = 3 THEN ' A.FIN_YEAR='''+@CURRENTYEAR+''''  ELSE '' END) 
							   
		  SET @CCN_FILTER = (CASE WHEN @NMODE = 1 THEN ' A.RECEIPT_DT = '''+CONVERT(VARCHAR(11),@DTODATE,120)+''' AND  A.FIN_YEAR='''+@CURRENTYEAR+''''    
							   WHEN @NMODE = 2 THEN ' MONTH(A.RECEIPT_DT) = MONTH('''+@DTODATE+''') AND  A.FIN_YEAR='''+@CURRENTYEAR+''' AND A.RECEIPT_DT <= '''+CONVERT(VARCHAR(11),@DTODATE,120)+''' '    
							   WHEN @NMODE = 3 THEN ' A.FIN_YEAR='''+@CURRENTYEAR+''''  ELSE '' END) 
	       
		 IF @NMODE=3
		 BEGIN
		 
		 SET @CFILTER=@CFILTER+ 'AND  A.CM_DT <= '''+CONVERT(VARCHAR(11),@DTODATE,120)+''' '
		 
		 SET @CINV_FILTER=@CINV_FILTER+ 'AND  A.INV_DT <= '''+CONVERT(VARCHAR(11),@DTODATE,120)+''' '
		 
		 SET @CCN_FILTER=@CCN_FILTER+ 'AND  A.RECEIPT_DT <= '''+CONVERT(VARCHAR(11),@DTODATE,120)+''' '
		 
	     END
	     
	     --IF @BINACTIVE_LOC=0
	     --SET @CFILTER=@CFILTER+ 'AND LOC.INACTIVE=''0'''
	     
	      IF @CDEPTID<>''
          SET @CFILTER=@CFILTER+' AND a.location_code='''+@CDEPTID+''''
     
		 IF @CFILTER<>''
		 SET @CFILTER=' AND '+@CFILTER
		 
		 --*****WSL INVOICE******
		 IF @CDEPTID<>''
          SET @CINV_FILTER=@CINV_FILTER+' AND a.location_code='''+@CDEPTID+''''
     
		 IF @CINV_FILTER<>''
		 SET @CINV_FILTER=' AND '+@CINV_FILTER
		 
		 
     	
     	--****END****
     	
     	--*****WSL CREDIT NOTE******
		 IF @CDEPTID<>''
          SET @CCN_FILTER=@CCN_FILTER+' AND a.location_code='''+@CDEPTID+''''
     
		 IF @CCN_FILTER<>''
		 SET @CCN_FILTER=' AND '+@CCN_FILTER
     	
     	--****END****
				          
		 SET @DTSQL=N' SELECT ''PREVIOUSYEAR'' AS PREVIOUSYEAR,
					1 AS ID,
					  CONVERT(NUMERIC(18,2),SUM(QUANTITY)/CASE WHEN SUM(CNT) =0 THEN 1 ELSE SUM(CNT) END ) AS ABSS,
	                  CONVERT(NUMERIC(18,2),SUM(NET) /CASE WHEN  SUM(CNT) =0 THEN 1 ELSE SUM(CNT) END) AS ATS, 
			        SUM(CNT) AS TOTAL_BILLS,
					SUM(NET) AS TOTAL_SALE  ,SUM(QUANTITY) AS QUANTITY,
					SUM(INR) AS INR,SUM(CC) AS CC, SUM(CREDIT) AS CREDIT ,SUM([ADV_ADJ]) AS [ADV_ADJ],SUM([C/N ADJ]) AS [C/N ADJ],
					0 AS ASP
			FROM 
			(
			SELECT SUM(NET_AMOUNT-ISNULL(ATD_CHARGES,0)) AS NET,COUNT(*) AS CNT,0 AS  QUANTITY,
				   0 AS INR, 0 AS CC,0 AS CREDIT,0 AS ADV_ADJ,0 AS [C/N ADJ] 
			FROM CMM01106 (NOLOCK) A
			LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
			WHERE   CANCELLED= 0 
			AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
			AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=1 ) '+ @CFILTER +'
			UNION  
			SELECT 0 AS NET, 0 AS CNT,SUM(QUANTITY) AS QUANTITY,
				   0 AS INR, 0 AS CC,0 AS CREDIT,0 AS ADV_ADJ,0 AS [C/N ADJ]  
			FROM CMD01106 B  (NOLOCK)
			JOIN CMM01106 A  (NOLOCK) ON A.CM_ID=B.CM_ID 
			LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
			WHERE A.CANCELLED =0 
			AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
			AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=1 ) '+ @CFILTER +'
			UNION

			SELECT  0 AS NET ,0 AS CNT ,0 AS QUANTITY,      
				  CONVERT(NUMERIC(12,2),SUM(CASE WHEN C.PAYMODE_GRP_CODE =''0000001'' THEN AMOUNT ELSE 0 END)) AS INR,
				  CONVERT(NUMERIC(12,2),SUM(CASE WHEN C.PAYMODE_GRP_CODE =''0000002'' THEN AMOUNT ELSE 0 END)) AS CC,
				  CONVERT(NUMERIC(12,2),SUM(CASE WHEN C.PAYMODE_GRP_CODE =''0000004'' THEN AMOUNT ELSE 0 END)) AS CREDIT,
				  CONVERT(NUMERIC(12,2),SUM(CASE WHEN C.PAYMODE_CODE =''0000002'' THEN AMOUNT ELSE 0 END)) AS [ADV_ADJ],
				  CONVERT(NUMERIC(12,2),SUM(CASE WHEN C.PAYMODE_CODE =''0000001'' THEN AMOUNT ELSE 0 END)) AS [C/N ADJ] 

			FROM 
			CMM01106 A(NOLOCK)
			LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
			JOIN PAYMODE_XN_DET B (NOLOCK)  ON A.CM_ID=B.MEMO_ID AND XN_TYPE=''SLS''
			JOIN PAYMODE_MST C (NOLOCK) ON B.PAYMODE_CODE=C.PAYMODE_CODE
			JOIN PAYMODE_GRP_MST D (NOLOCK) ON C.PAYMODE_GRP_CODE=D.PAYMODE_GRP_CODE
			WHERE A.CANCELLED =0 
			AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
			AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=1 ) '+ @CFILTER +'
			UNION ALL
			
			--WSL INVOICE
			
			SELECT SUM(NET_AMOUNT-(ISNULL(OTHER_CHARGES,0)+isnull(freight,0)+isnull(insurance,0)+isnull(packing,0))) AS NET,COUNT(*) AS CNT,0 AS  QUANTITY,
				   0 AS INR, 0 AS CC,0 AS CREDIT,0 AS ADV_ADJ,0 AS [C/N ADJ] 
			FROM INM01106 (NOLOCK) A
			LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
			WHERE  A.INV_MODE=1 
			AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
			AND CANCELLED= 0 AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 ) '+ @CINV_FILTER +'
			UNION  
			SELECT 0 AS NET, 0 AS CNT,SUM(QUANTITY) AS QUANTITY,
				   0 AS INR, 0 AS CC,0 AS CREDIT,0 AS ADV_ADJ,0 AS [C/N ADJ]  
			FROM IND01106 B  (NOLOCK)
			JOIN INM01106 A  (NOLOCK) ON A.INV_ID=B.INV_ID 
			LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
			WHERE A.INV_MODE=1 
			AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
			AND A.CANCELLED =0 AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 ) '+ @CINV_FILTER +'
			UNION

			SELECT  0 AS NET ,0 AS CNT ,0 AS QUANTITY,      
				   CONVERT(NUMERIC(12,2),SUM(CASE WHEN A.PAY_MODE=1 THEN NET_AMOUNT-(ISNULL(OTHER_CHARGES,0)+isnull(freight,0)+isnull(insurance,0)+isnull(packing,0)) ELSE 0 END)) AS INR,
		           CONVERT(NUMERIC(12,2),SUM(CASE WHEN A.PAY_MODE=2 THEN NET_AMOUNT-(ISNULL(OTHER_CHARGES,0)+isnull(freight,0)+isnull(insurance,0)+isnull(packing,0)) ELSE 0 END)) AS CC,
		           CONVERT(NUMERIC(12,2),SUM(CASE WHEN A.PAY_MODE NOT IN(1,2) THEN NET_AMOUNT-(ISNULL(OTHER_CHARGES,0)+isnull(freight,0)+isnull(insurance,0)+isnull(packing,0)) ELSE 0 END)) AS CREDIT,
		           CONVERT(NUMERIC(12,2),0) AS [ADV_ADJ],
		           CONVERT(NUMERIC(12,2),0) AS [C/N ADJ] 
			FROM INM01106 A (NOLOCK)
			LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
			WHERE A.INV_MODE=1 AND  A.CANCELLED =0 
			AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
			AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 ) '+ @CINV_FILTER +'
			
			UNION ALL
			
			--WSL CREDIT NOTE
			
			SELECT -1* SUM(TOTAL_AMOUNT-(ISNULL(OTHER_CHARGES,0)+isnull(freight,0)+isnull(insurance,0)) ) AS NET,COUNT(*) AS CNT,0 AS  QUANTITY,
				   0 AS INR, 0 AS CC,0 AS CREDIT,0 AS ADV_ADJ,0 AS [C/N ADJ] 
			FROM CNM01106 (NOLOCK) A
			LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
			WHERE  A.MODE=1 AND CANCELLED= 0 
			AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
			AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 ) '+ @CCN_FILTER +'
			UNION  
			SELECT 0 AS NET, 0 AS CNT,-1*SUM(QUANTITY) AS QUANTITY,
				   0 AS INR, 0 AS CC,0 AS CREDIT,0 AS ADV_ADJ,0 AS [C/N ADJ]  
			FROM CND01106 B  (NOLOCK)
			JOIN CNM01106 A  (NOLOCK) ON A.CN_ID=B.CN_ID
			LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
			WHERE A.MODE=1 AND A.CANCELLED =0 
			AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
			AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 ) '+ @CCN_FILTER  +'
			UNION

			SELECT  0 AS NET ,0 AS CNT ,0 AS QUANTITY,      
				   CONVERT(NUMERIC(12,2),-1*SUM(CASE WHEN A.PAY_MODE=1 THEN TOTAL_AMOUNT-(ISNULL(OTHER_CHARGES,0)+isnull(freight,0)+isnull(insurance,0))  ELSE 0 END)) AS INR,
		           CONVERT(NUMERIC(12,2),-1*SUM(CASE WHEN A.PAY_MODE=2 THEN TOTAL_AMOUNT-(ISNULL(OTHER_CHARGES,0)+isnull(freight,0)+isnull(insurance,0))  ELSE 0 END)) AS CC,
		           CONVERT(NUMERIC(12,2),-1*SUM(CASE WHEN A.PAY_MODE NOT IN(1,2) THEN TOTAL_AMOUNT-(ISNULL(OTHER_CHARGES,0)+isnull(freight,0)+isnull(insurance,0))  ELSE 0 END)) AS CREDIT,
		           CONVERT(NUMERIC(12,2),0) AS [ADV_ADJ],
		           CONVERT(NUMERIC(12,2),0) AS [C/N ADJ] 
			FROM CNM01106 A (NOLOCK)
			LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
			WHERE A.MODE=1 
			AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
			AND  A.CANCELLED =0 AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 )  '+ @CCN_FILTER +'
			
		) A '
		PRINT @DTSQL
		INSERT INTO @CMTEMP1
		EXEC SP_EXECUTESQL @DTSQL
	  
	
	         
	  UPDATE @CMTEMP SET INRAMOUNT =INRAMOUNT /@NCONVERSIONAMOUNT,
						 CC_AMOUNT =CC_AMOUNT/ @NCONVERSIONAMOUNT,
						 CREDITAMOUNT=CREDITAMOUNT/@NCONVERSIONAMOUNT,
						 ADVANCEADJUSTMENT=ADVANCEADJUSTMENT/@NCONVERSIONAMOUNT,
						 CN_ADJ=CN_ADJ/@NCONVERSIONAMOUNT,
						 TOTAL_SALE =TOTAL_SALE /@NCONVERSIONAMOUNT
	                     
	                     
	   UPDATE @CMTEMP1 SET ASP=TOTAL_SALE/CASE WHEN ISNULL(QUANTITY,0)=0 THEN 1 ELSE QUANTITY END
	   UPDATE @CMTEMP1 SET INRAMOUNT =INRAMOUNT /@NCONVERSIONAMOUNT,
						 CC_AMOUNT =CC_AMOUNT/ @NCONVERSIONAMOUNT,
						 CREDITAMOUNT=CREDITAMOUNT/@NCONVERSIONAMOUNT,
						 ADVANCEADJUSTMENT=ADVANCEADJUSTMENT/@NCONVERSIONAMOUNT,
						 CN_ADJ=CN_ADJ/@NCONVERSIONAMOUNT,
						
						 TOTAL_SALE =TOTAL_SALE /@NCONVERSIONAMOUNT
	                                        
	  SELECT * FROM @CMTEMP
	  SELECT * FROM @CMTEMP1  
	       
	  SELECT 
	  COALESCE(CAST((CAST((C.ABSS-P.ABSS)AS FLOAT)/NULLIF((P.ABSS),0)*100)AS INT),0)  AS VAR_ABSS,
	  COALESCE(CAST((CAST((C.ATS-P.ATS) AS FLOAT)/NULLIF((P.ATS),0)*100)AS INT),0)  AS VAR_ATS,
	  COALESCE(CAST((CAST((C.TOTAL_BILLS-P.TOTAL_BILLS) AS FLOAT)/NULLIF((P.TOTAL_BILLS),0)*100)AS INT),0)  AS VAR_TOTAL_BILLS,
	  COALESCE(CAST((CAST((C.TOTAL_SALE-P.TOTAL_SALE) AS FLOAT)/NULLIF((P.TOTAL_SALE),0)*100)AS INT),0)  AS VAR_TOTAL_SALE,
	  COALESCE(CAST((CAST((C.QUANTITY-P.QUANTITY) AS FLOAT)/NULLIF((P.QUANTITY),0)*100)AS NUMERIC(10,0)),0)  AS VAR_QUANTITY,
	  COALESCE(CAST((CAST((C.INRAMOUNT-P.INRAMOUNT) AS FLOAT)/NULLIF((P.INRAMOUNT),0)*100)AS INT),0)  AS VAR_INRAMOUNT,
	  COALESCE(CAST((CAST((C.CC_AMOUNT-P.CC_AMOUNT) AS FLOAT)/NULLIF((P.CC_AMOUNT),0)*100)AS INT),0)  AS VAR_CC_AMOUNT,
	  COALESCE(CAST((CAST((C.CREDITAMOUNT-P.CREDITAMOUNT) AS FLOAT)/NULLIF((P.CREDITAMOUNT),0)*100)AS INT),0)  AS VAR_CREDITAMOUNT,
	  COALESCE(CAST((CAST((C.ADVANCEADJUSTMENT-P.ADVANCEADJUSTMENT) AS FLOAT)/NULLIF((P.ADVANCEADJUSTMENT),0)*100)AS INT),0)  AS VAR_ADVANCEADJUSTMENT,
	  COALESCE(CAST((CAST((C.CN_ADJ-P.CN_ADJ) AS FLOAT)/NULLIF((P.CN_ADJ),0)*100)AS INT),0)  AS VAR_CN_ADJ,
	  COALESCE(CAST((CAST((C.ASP-P.ASP) AS FLOAT)/NULLIF((P.ASP),0)*100)AS INT),0)  AS VAR_ASP
	  
	  FROM @CMTEMP C JOIN @CMTEMP1 P ON C.ID=P.ID
	  GOTO END_PROC       
	 END        


  UPDATE @CMTEMP SET INRAMOUNT =INRAMOUNT /@NCONVERSIONAMOUNT,
						 CC_AMOUNT =CC_AMOUNT/ @NCONVERSIONAMOUNT,
						 CREDITAMOUNT=CREDITAMOUNT/@NCONVERSIONAMOUNT,
						 ADVANCEADJUSTMENT=ADVANCEADJUSTMENT/@NCONVERSIONAMOUNT,
						 CN_ADJ=CN_ADJ/@NCONVERSIONAMOUNT,
						 TOTAL_SALE =TOTAL_SALE /@NCONVERSIONAMOUNT
	                     
	                     
   SELECT * FROM @CMTEMP
   GOTO END_PROC      


	 END        

IF @NDIPLAYMODE=2
 BEGIN
      
      
      DECLARE @TNRV NUMERIC(12,2),@TQTY AS NUMERIC(12,2)
      DECLARE @TMPLOCWISW TABLE (DEPT_ALIAS VARCHAR(20),NRV NUMERIC(12,2),NRV_CONT_PER NUMERIC(10,0),QUANTITY NUMERIC(12,2),QUANTITY_CONT_PER NUMERIC(10,0))
      
IF @LASTYEARCOMPERISION=0
 BEGIN     
	  SET @DTSQL=N'SELECT LOC.DEPT_ALIAS, NRV=SUM(ISNULL(NET,0)) ,QUANTITY=SUM(ISNULL(QUANTITY,0)) 
	   FROM 
	   (
		SELECT LEFT (A.CM_ID,2) AS DEPT_ID, SUM(NET_AMOUNT-ISNULL(ATD_CHARGES,0)) AS NET,0 AS QUANTITY
		FROM CMM01106 (NOLOCK) A
		LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
		WHERE   CANCELLED= 0 
		AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
		AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=1 ) '+ @CFILTER +'
		GROUP BY a.location_code
		UNION
		SELECT a.location_code AS DEPT_ID, 0 AS NET,SUM(QUANTITY) AS QUANTITY
		FROM CMM01106 (NOLOCK) A
		JOIN CMD01106 (NOLOCK) B ON A.CM_ID=B.CM_ID 
		LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
		WHERE   CANCELLED= 0 
		AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
		AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=1 ) '+ @CFILTER +'
		GROUP BY a.location_code
		
		UNION ALL
		SELECT a.location_code AS DEPT_ID, SUM(NET_AMOUNT-(ISNULL(OTHER_CHARGES,0)+isnull(freight,0)+isnull(insurance,0)+isnull(packing,0))) AS NET,0 AS QUANTITY
		FROM INM01106 (NOLOCK) A
		LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
		WHERE A.INV_MODE=1 AND   CANCELLED= 0 
		AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
		AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 ) '+ @CINV_FILTER +'
		GROUP BY LEFT a.location_code
		UNION
		SELECT a.location_code AS DEPT_ID, 0 AS NET,SUM(QUANTITY) AS QUANTITY
		FROM INM01106 (NOLOCK) A
		JOIN IND01106 (NOLOCK) B ON A.INV_ID=B.INV_ID 
		LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
		WHERE  A.INV_MODE=1 AND  CANCELLED= 0 
		AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
		AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 ) '+ @CINV_FILTER +'
		GROUP BY a.location_code
		
		UNION ALL
		SELECT LEFT a.location_code AS DEPT_ID, -1*SUM(TOTAL_AMOUNT-(ISNULL(OTHER_CHARGES,0)+isnull(freight,0)+isnull(insurance,0)) ) AS NET,0 AS QUANTITY
		FROM CNM01106 (NOLOCK) A
		LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
		WHERE A.MODE=1 AND   CANCELLED= 0 
		AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
		AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 ) '+ @CCN_FILTER +'
		GROUP BY LEFT a.location_code
		UNION
		SELECT a.location_code AS DEPT_ID, 0 AS NET,-1*SUM(QUANTITY) AS QUANTITY
		FROM CNM01106 (NOLOCK) A
		JOIN CND01106 (NOLOCK) B ON A.CN_ID=B.CN_ID 
		LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
		WHERE  A.MODE=1 AND  CANCELLED= 0 
		AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
		AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 ) '+ @CCN_FILTER +'
		GROUP BY a.location_code
		
	  ) B 
	  JOIN LOCATION LOC (NOLOCK) ON B.DEPT_ID=LOC.DEPT_ID 
	  GROUP BY LOC.DEPT_ALIAS' 
	  
    -- WHERE A.INACTIVE=(CASE WHEN '''+RTRIM(LTRIM(STR(@BINACTIVE_LOC)))+'''=''0'' THEN 0 ELSE A.INACTIVE END)
     PRINT @DTSQL
     INSERT INTO @TMPLOCWISW(DEPT_ALIAS,NRV ,QUANTITY )
     EXEC SP_EXECUTESQL @DTSQL
    -- AND ('''+@CDEPTID+'''='''' OR LEFT(CM_ID,2)='''+@CDEPTID+''')'+ @CFILTER +'
     
     SELECT @TNRV=SUM(ISNULL(NRV,0)),@TQTY=SUM(ISNULL(QUANTITY,0)) FROM @TMPLOCWISW	  
     UPDATE @TMPLOCWISW SET NRV_CONT_PER =(NRV*100)/CASE WHEN @TNRV=0 THEN 1 ELSE @TNRV END
	 UPDATE @TMPLOCWISW SET QUANTITY_CONT_PER =(QUANTITY*100)/CASE WHEN @TQTY=0 THEN 1 ELSE @TQTY END 
	 UPDATE @TMPLOCWISW SET NRV =NRV/@NCONVERSIONAMOUNT
	     
     SELECT A.DEPT_ALIAS ,ISNULL(NRV,0) AS NRV,ISNULL(NRV_CONT_PER,0) AS NRV_CONT_PER  ,QUANTITY ,ISNULL(QUANTITY_CONT_PER,0) AS QUANTITY_CONT_PER 
	 FROM @TMPLOCWISW A
	 ORDER BY ISNULL(NRV_CONT_PER,0) DESC

	 GOTO END_PROC 
  END
  ELSE
  BEGIN
         
       DECLARE @TMPLOCWISW_VAR TABLE (DEPT_ID VARCHAR(5),DEPT_ALIAS VARCHAR(20),INACTIVE BIT,CY_NRV NUMERIC(12,2),PY_NRV NUMERIC(12,2),CY_QTY NUMERIC(12,2),PY_QTY NUMERIC(12,2),VAR_PER NUMERIC(10,0))
       DECLARE @DTODATE_PREV VARCHAR(20), @PREVYEAR VARCHAR(10),@CFILTER_PREV NVARCHAR(MAX),
       @CINV_FILTER_PREV NVARCHAR(MAX),@CCN_FILTER_PREV NVARCHAR(MAX)
      
       --------LAST YEAR -------
          SET @DTODATE_PREV=(SELECT DATEADD(YEAR,-1,@DTODATE))
        
	      SET @PREVYEAR=(SELECT '01'+ DBO.FN_GETFINYEAR(@DTODATE_PREV))
	      
		  SET @CFILTER_PREV = (CASE WHEN @NMODE = 1 THEN ' A.CM_DT = '''+CONVERT(VARCHAR(11),@DTODATE_PREV,120)+''' AND  A.FIN_YEAR='''+@PREVYEAR+''''    
							   WHEN @NMODE = 2 THEN ' MONTH(A.CM_DT) = MONTH('''+@DTODATE_PREV+''') AND  A.FIN_YEAR='''+@PREVYEAR+''' AND A.CM_DT <= '''+CONVERT(VARCHAR(11),@DTODATE_PREV,120)+''' '    
							   WHEN @NMODE = 3 THEN ' A.FIN_YEAR='''+@PREVYEAR+''''  ELSE '' END) 
		 
		   SET @CINV_FILTER_PREV = (CASE WHEN @NMODE = 1 THEN ' A.INV_DT = '''+CONVERT(VARCHAR(11),@DTODATE_PREV,120)+''' AND  A.FIN_YEAR='''+@PREVYEAR+''''    
							   WHEN @NMODE = 2 THEN ' MONTH(A.INV_DT) = MONTH('''+@DTODATE_PREV+''') AND  A.FIN_YEAR='''+@PREVYEAR+''' AND A.INV_DT <= '''+CONVERT(VARCHAR(11),@DTODATE_PREV,120)+''' '    
							   WHEN @NMODE = 3 THEN ' A.FIN_YEAR='''+@PREVYEAR+''''  ELSE '' END) 
							   
		 SET @CCN_FILTER_PREV = (CASE WHEN @NMODE = 1 THEN ' A.RECEIPT_DT = '''+CONVERT(VARCHAR(11),@DTODATE_PREV,120)+''' AND  A.FIN_YEAR='''+@PREVYEAR+''''    
							   WHEN @NMODE = 2 THEN ' MONTH(A.RECEIPT_DT) = MONTH('''+@DTODATE_PREV+''') AND  A.FIN_YEAR='''+@PREVYEAR+''' AND A.RECEIPT_DT <= '''+CONVERT(VARCHAR(11),@DTODATE_PREV,120)+''' '    
							   WHEN @NMODE = 3 THEN ' A.FIN_YEAR='''+@PREVYEAR+''''  ELSE '' END) 
	       
	       
		 IF @NMODE=3
		 BEGIN
		 SET @CFILTER_PREV=@CFILTER_PREV+ 'AND  A.CM_DT <= '''+CONVERT(VARCHAR(11),@DTODATE_PREV,120)+''' '
		 SET @CINV_FILTER_PREV=@CINV_FILTER_PREV+ 'AND  A.INV_DT <= '''+CONVERT(VARCHAR(11),@DTODATE_PREV,120)+''' '
		 SET @CCN_FILTER_PREV=@CCN_FILTER_PREV+ 'AND  A.RECEIPT_DT <= '''+CONVERT(VARCHAR(11),@DTODATE_PREV,120)+''' '
	     END
	      IF @CFILTER_PREV<>''
		  SET @CFILTER_PREV=' AND '+@CFILTER_PREV
		  
		   IF @CINV_FILTER_PREV<>''
		   SET @CINV_FILTER_PREV=' AND '+@CINV_FILTER_PREV
		   
		    IF @CCN_FILTER_PREV<>''
		   SET @CCN_FILTER_PREV=' AND '+@CCN_FILTER_PREV
	    
	   
	   IF @BNRV_QUANTITY=0
	   BEGIN
	   SET @DTSQL=N'SELECT LOC.DEPT_ALIAS,NRV=SUM(ISNULL(NET,0)), PY_NRV=SUM(ISNULL(PY_NRV,0)) 
	   FROM 
	   (
		SELECT a.location_code AS DEPT_ID, SUM(NET_AMOUNT-ISNULL(ATD_CHARGES,0)) AS NET,0 AS PY_NRV
		FROM CMM01106 (NOLOCK) A
		LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
		WHERE   CANCELLED= 0 
		AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
		AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=1 ) '+ @CFILTER +'
		GROUP BY a.location_code
		UNION 
		SELECT a.location_code AS DEPT_ID, 0 AS NET,SUM(NET_AMOUNT-ISNULL(ATD_CHARGES,0)) AS PY_NRV
		FROM CMM01106 (NOLOCK) A
		LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
		WHERE   CANCELLED= 0 
		AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
		AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=1 ) '+ @CFILTER_PREV +'
		GROUP BY a.location_code
		UNION ALL
		
		SELECT a.location_code AS DEPT_ID, SUM(NET_AMOUNT-(ISNULL(OTHER_CHARGES,0)+isnull(freight,0)+isnull(insurance,0)+isnull(packing,0))) AS NET,0 AS PY_NRV
		FROM INM01106 (NOLOCK) A
		LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
		WHERE A.INV_MODE=1 AND  CANCELLED= 0 
		AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
		AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 ) '+ @CINV_FILTER +'
		GROUP BY  a.location_code
		UNION 
		SELECT a.location_code AS DEPT_ID, 0 AS NET,SUM(NET_AMOUNT-(ISNULL(OTHER_CHARGES,0)+isnull(freight,0)+isnull(insurance,0)+isnull(packing,0))) AS PY_NRV
		FROM INM01106 (NOLOCK) A
		LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
		WHERE  A.INV_MODE=1 AND  CANCELLED= 0 
		AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
		AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 ) '+ @CINV_FILTER_PREV +'
		GROUP BY a.location_code
		
		UNION ALL
		
		SELECT a.location_code AS DEPT_ID,-1* SUM(TOTAL_AMOUNT-(ISNULL(OTHER_CHARGES,0)+isnull(freight,0)+isnull(insurance,0)) ) AS NET,0 AS PY_NRV
		FROM CNM01106 (NOLOCK) A
		LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
		WHERE A.MODE=1 AND  CANCELLED= 0 
		AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
		AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 ) '+ @CCN_FILTER +'
		GROUP BY a.location_code
		UNION 
		SELECT a.location_code AS DEPT_ID, 0 AS NET,-1*SUM(TOTAL_AMOUNT-(ISNULL(OTHER_CHARGES,0)+isnull(freight,0)+isnull(insurance,0)) ) AS PY_NRV
		FROM CNM01106 (NOLOCK) A
		LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
		WHERE  A.MODE=1 AND  CANCELLED= 0 
		AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
		AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 ) '+ @CCN_FILTER_PREV +'
		GROUP BY a.location_code
		
		
	  ) B 
	  JOIN LOCATION LOC (NOLOCK) ON B.DEPT_ID=LOC.DEPT_ID 
	  GROUP BY LOC.DEPT_ALIAS
	  '
	    --WHERE A.INACTIVE=(CASE WHEN '''+RTRIM(LTRIM(STR(@BINACTIVE_LOC)))+'''=''0'' THEN 0 ELSE A.INACTIVE END)
     PRINT @DTSQL
     INSERT INTO @TMPLOCWISW_VAR(DEPT_ALIAS ,CY_NRV,PY_NRV)
     EXEC SP_EXECUTESQL @DTSQL
     
     
  
      UPDATE @TMPLOCWISW_VAR SET VAR_PER=COALESCE(CAST((CAST((ISNULL(CY_NRV,0)-ISNULL(PY_NRV,0))AS FLOAT)/NULLIF((PY_NRV),0)*100)AS INT),0) 
      UPDATE @TMPLOCWISW_VAR SET CY_NRV =CY_NRV /@NCONVERSIONAMOUNT,PY_NRV=PY_NRV/@NCONVERSIONAMOUNT
      
      FROM @TMPLOCWISW_VAR
	  SELECT a.DEPT_ALIAS ,ISNULL(CY_NRV,0) AS CY_NRV ,ISNULL(PY_NRV,0) AS PY_NRV ,ISNULL(VAR_PER,0) AS VAR_PER 
	  FROM @TMPLOCWISW_VAR A  --WHERE ISNULL(CY_NRV,0)<>0 OR ISNULL(PY_NRV,0)<>0
	  ORDER BY ISNULL(VAR_PER,0) DESC


	   GOTO END_PROC 
	 END
	 ELSE
	 BEGIN
	     
	    SET @DTSQL=N'SELECT LOC.DEPT_ALIAS,QTY=SUM(ISNULL(QUANTITY,0)), PY_NRV=SUM(ISNULL(PY_QUANTITY,0)) 
	    FROM 
	   (
		SELECT a.location_code AS DEPT_ID, SUM(QUANTITY) AS QUANTITY,0 AS PY_QUANTITY
		FROM CMM01106 A (NOLOCK)
		JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID
		LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
		WHERE   CANCELLED= 0 
		AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
		AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=1 ) '+ @CFILTER +'
		GROUP BY a.location_code
		UNION 
		SELECT a.location_code AS DEPT_ID, 0 AS QUANTITY,SUM(QUANTITY) AS PY_QUANTITY
		FROM CMM01106 (NOLOCK) A
		JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID
		LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
		WHERE   CANCELLED= 0 
		AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
		AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=1 ) '+ @CFILTER_PREV +'
		GROUP BY a.location_code
		
		UNION ALL
		SELECT a.location_code AS DEPT_ID, SUM(QUANTITY) AS QUANTITY,0 AS PY_QUANTITY
		FROM INM01106 A (NOLOCK)
		JOIN IND01106 B (NOLOCK) ON A.INV_ID=B.INV_ID
		LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
		WHERE  A.INV_MODE=1 AND  CANCELLED= 0 
		AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
		AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 ) '+ @CINV_FILTER +'
		GROUP BY a.location_code
		UNION 
		SELECT a.location_code AS DEPT_ID, 0 AS QUANTITY,SUM(QUANTITY) AS PY_QUANTITY
		FROM INM01106 (NOLOCK) A
		JOIN IND01106 B (NOLOCK) ON A.INV_ID=B.INV_ID
		LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
		WHERE A.INV_MODE=1 AND  CANCELLED= 0 
		AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
		AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 ) '+ @CINV_FILTER_PREV +'
		GROUP BY a.location_code
		
		UNION ALL
		SELECT a.location_code AS DEPT_ID,-1* SUM(QUANTITY) AS QUANTITY,0 AS PY_QUANTITY
		FROM CNM01106 A (NOLOCK)
		JOIN CND01106 B (NOLOCK) ON A.CN_ID=B.CN_ID
		LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
		WHERE  A.MODE=1 AND  CANCELLED= 0 
		AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
		AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 ) '+ @CCN_FILTER +'
		GROUP BY a.location_code
		UNION 
		SELECT a.location_code AS DEPT_ID, 0 AS QUANTITY,-1*SUM(QUANTITY) AS PY_QUANTITY
		FROM CNM01106 (NOLOCK) A
		JOIN CND01106 B (NOLOCK) ON A.INV_ID=B.INV_ID
		LEFT JOIN #TMPLOCUSER L on a.location_code=l.dept_id
		WHERE A.MODE=1 AND  CANCELLED= 0 
		AND (L.DEPT_ID IS NOT NULL OR '''+RTRIM(LTRIM(STR(@DONOTFILTERLOCID)))+'''=1)
		AND ('+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=0 OR '+RTRIM(LTRIM(STR(@SALE_TYPE)))+'=2 ) '+ @CCN_FILTER_PREV +'
		GROUP BY a.location_code
	  ) B 
	  JOIN LOCATION LOC (NOLOCK) ON B.DEPT_ID=LOC.DEPT_ID 
	  GROUP BY LOC.DEPT_ALIAS
	  '
	  --A.INACTIVE=(CASE WHEN '''+RTRIM(LTRIM(STR(@BINACTIVE_LOC)))+'''=''0'' THEN 0 ELSE A.INACTIVE END)
	    
     PRINT @DTSQL
     INSERT INTO @TMPLOCWISW_VAR(DEPT_ALIAS ,CY_QTY,PY_QTY)
     EXEC SP_EXECUTESQL @DTSQL
	 
	 UPDATE @TMPLOCWISW_VAR SET VAR_PER=COALESCE(CAST((CAST((ISNULL(CY_QTY,0)-ISNULL(PY_QTY,0))AS FLOAT)/NULLIF((PY_QTY),0)*100)AS INT),0) 
     --UPDATE @TMPLOCWISW_VAR SET CY_NRV =CY_NRV /@NCONVERSIONAMOUNT,PY_NRV=PY_NRV/@NCONVERSIONAMOUNT
      
      FROM @TMPLOCWISW_VAR
      
	  SELECT a.DEPT_ALIAS,ISNULL(CY_QTY,0) AS CY_QTY ,ISNULL(PY_QTY,0) AS PY_QTY ,ISNULL(VAR_PER,0) AS VAR_PER 
	  FROM @TMPLOCWISW_VAR A  --WHERE ISNULL(CY_QTY,0)<>0 OR ISNULL(PY_QTY,0)<>0
	  ORDER BY ISNULL(VAR_PER,0) DESC
	   GOTO END_PROC 
	 
	 END  
	   
	   
 END

END

   
 END_PROC:
  
 END
