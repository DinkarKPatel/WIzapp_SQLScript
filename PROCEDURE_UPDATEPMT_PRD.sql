CREATE PROCEDURE UPDATEPMT_PRD
		@CXNTYPE VARCHAR(10),
		@CXNNO VARCHAR(40),
		@CXNID VARCHAR(40),
		@NREVERTFLAG BIT = 0,
		@NALLOWNEGSTOCK BIT = 0,
		@NCHKDELBARCODES BIT = 0,
		@NUPDATEMODE INT=0,	
		@CCMD NVARCHAR(4000) OUTPUT

		--*** PARAMETERS :
		--*** @CXNTYPE - TRANSACTION TYPE (MODULE SPECIFIC)
		--*** @CXNNO - TRANSACTION NO ( MEMO NO OF MASTER TABLE )
		--*** @CXNID - TRANSACTION ID ( MEMO ID OF MASTER TABLE )
		--*** @NREVERTFLAG - A FLAG TO INDICATE WHETHER THIS PROCEDURE IS CALLED TO REVERT STOCK
		--*** @NALLOWNEGSTOCK - FLAG TO INDICATE WHETHER OR NOT ALLOW NEGATIVE STOCK
		--*** @NRETVAL - OUTPUT PARAMETER RETURNED BY THIS PROCEDURE (BIT 1-SUCCESS, 0-UNSUCCESS)
----WITH ENCRYPTION
AS
BEGIN



	DECLARE @NOUTFLAG INT, @NRETVAL BIT,@CXNTABLE VARCHAR(50),@CEXPR NVARCHAR(500),@CXNIDPARA VARCHAR(50),
			@BCANCELLED BIT
	
	SET @NRETVAL = 0
	SET @CCMD = ''

		
	--*** STARTING STOCK UPDATION FOR PURCHASE 
	IF @CXNTYPE IN ('PUR')				-- PURCHASE INVOICE
	BEGIN
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = 1
		ELSE
			SET @NOUTFLAG = -1
			 
        	
		UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_UID, C.DEPARTMENT_ID, SUM(QUANTITY) AS QUANTITY 
				FROM PRD_PID01106 B
				JOIN PRD_PIM01106 C ON B.MRR_ID = C.MRR_ID
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MRR_ID = @CXNID 
				GROUP BY B.PRODUCT_UID, C.DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID
        
			
        
		SET @NRETVAL = 1		--*** SUCCESS
		
	
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_PIM01106 WHERE MRR_ID=@CXNID
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 ) OR @BCANCELLED=1 OR @NUPDATEMODE IN (4,5)
		BEGIN
			--PRINT 'CHECKING FOR NEGATIVE STOCK'
			PRINT 'PMT NEGATIVE START'
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(SELECT B.PRODUCT_UID,C.DEPARTMENT_ID , SUM(B.QUANTITY) AS QUANTITY 
						FROM PRD_PID01106 B
						JOIN PRD_PIM01106 C ON C.MRR_ID=B.MRR_ID
						JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
						JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
						WHERE B.MRR_ID = @CXNID AND E.STOCK_NA=0
						GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK FROM PRD_PMT A  JOIN
						(SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
						FROM PRD_PID01106 B
						JOIN PRD_PIM01106 C ON C.MRR_ID=B.MRR_ID
						JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
						JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
						WHERE B.MRR_ID = '''+@CXNID+''' AND E.STOCK_NA=0
						GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID) B ON B.PRODUCT_UID=A.PRODUCT_UID 
						AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 '
			END
			
		END	
	END			-- END OF LABEL PURCHASE INVOICE
	
	
	ELSE
	IF @CXNTYPE IN ('WSL')		-- WHOLESALE INVOICE 
	BEGIN
		PRINT 'ENTER WSL STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = -1
		ELSE
			SET @NOUTFLAG = 1
		
		
				
		DECLARE @NENTRYMODE INT 
		SELECT @NENTRYMODE=ENTRY_MODE FROM PRD_INM01106 WHERE INV_ID=@CXNID
		
		---- DO NOT UPDATE STOCK OF INVOICES WHICH ARE RAISED AGAINST PACKING SLIP
		---- BECAUSE IT IS ALREADY UPDATED BY PACKINJG SLIP MODULES
		IF ISNULL(@NENTRYMODE,0)=2 
			RETURN
	
				

		PRINT 'ENTER WSL STOCK UPDATE-2'
		UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_IND01106 B
				JOIN PRD_INM01106 C ON C.INV_ID=B.INV_ID
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.INV_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID


		SET @NRETVAL = 1		--*** SUCCESS

PRINT 'ENTER WSL STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_INM01106 WHERE INV_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER WSL STOCK UPDATE-4'
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
						FROM PRD_IND01106 B
						JOIN PRD_INM01106 C ON C.INV_ID=B.INV_ID
						JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
						JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
						WHERE B.INV_ID = @CXNID AND E.STOCK_NA=0
						GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS

				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK FROM PRD_PMT A  JOIN
						(SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
						FROM PRD_IND01106 B
						JOIN PRD_INM01106 C ON C.INV_ID=B.INV_ID
						JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
						JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
						WHERE B.INV_ID = '''+@CXNID+''' AND E.STOCK_NA=0
						GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 '
			END
				--PRINT @CCMD
		END	
	END		--		END OF WHOLESALE INVOICE ENDS
	
  ELSE  
 IF @CXNTYPE IN ('IRR')    -- ITEM RATE/MASTERS REVISION  
 BEGIN  
  IF @NREVERTFLAG = 1  
   SET @NOUTFLAG = -1  
  ELSE  
   SET @NOUTFLAG = 1  

  	IF EXISTS (SELECT TOP 1 A.MEMO_ID FROM PRD_STMH01106 A JOIN PRD_PMT  B ON A.REP_ID=B.REP_ID
			   JOIN PRD_IRD01106 C ON C.PRODUCT_UID=B.PRODUCT_UID AND C.DEPARTMENT_ID=B.DEPARTMENT_ID
			   WHERE C.IRM_MEMO_ID=@CXNID AND C.NEW_PRODUCT_CODE<>'')
	BEGIN
			SET @CCMD = N'SELECT DISTINCT C.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE PART OF STOCK RECONCILIATION'' AS ERRMSG
						  FROM PRD_STMH01106 A JOIN PRD_PMT B ON A.REP_ID=B.REP_ID
						  JOIN IRD01106 C ON C.PRODUCT_UID=B.PRODUCT_UID AND C.DEPARTMENT_ID=B.DEPARTMENT_ID
						  WHERE C.IRM_MEMO_ID='''+@CXNID+'''  AND C.NEW_PRODUCT_CODE<>'''''		
			RETURN					
	END	       
	    
	PRINT 'IRR STOCK UPDATE-1'  
    
  PRINT 'IRR STOCK UPDATE-2'  
  --*** UPDATING THE QUANTITY IN STOCK FROM PMT FOR THE GIVEN MEMO  
  UPDATE A   
   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )  
   FROM  PRD_PMT  A
   JOIN 
   ( SELECT B.PRODUCT_UID, B.DEPARTMENT_ID  , SUM(QUANTITY) AS QUANTITY   
    FROM PRD_IRD01106 B  
    JOIN PRD_SKU C ON B.PRODUCT_UID=C.PRODUCT_UID  
    JOIN ARTICLE D ON C.ARTICLE_CODE=D.ARTICLE_CODE  
    JOIN PRD_IRM01106 E ON E.IRM_MEMO_ID=B.IRM_MEMO_ID  
    WHERE B.IRM_MEMO_ID = @CXNID 
    AND  ISNULL(B.NEW_PRODUCT_CODE,'')<>'' AND E.TYPE IN (1,4) 
    GROUP BY B.PRODUCT_UID, B.DEPARTMENT_ID
   ) B  ON A.PRODUCT_UID = B.PRODUCT_UID   
   AND A.DEPARTMENT_ID = B.DEPARTMENT_ID  

  
  UPDATE PRD_PMT   
   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK + ( @NOUTFLAG * B.QUANTITY )  
   FROM   
   ( SELECT B.NEW_PRODUCT_UID AS PRODUCT_UID, B.DEPARTMENT_ID , SUM(QUANTITY) AS QUANTITY   
    FROM PRD_IRD01106 B  
    JOIN PRD_SKU C ON B.PRODUCT_UID=C.PRODUCT_UID  
    JOIN ARTICLE D ON C.ARTICLE_CODE=D.ARTICLE_CODE  
    JOIN PRD_IRM01106 E ON E.IRM_MEMO_ID=B.IRM_MEMO_ID  
    WHERE B.IRM_MEMO_ID = @CXNID 
    AND ISNULL(B.NEW_PRODUCT_UID,'')<>'' 
    GROUP BY B.NEW_PRODUCT_UID , B.DEPARTMENT_ID  
   ) B  
   WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID   
   AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID  
 
    
  SET @NRETVAL = 1  --*** SUCCESS  
    
  PRINT 'IRR STOCK UPDATE-4'  
    
  IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT  A JOIN  
      (SELECT B.PRODUCT_UID,B.DEPARTMENT_ID , SUM(B.QUANTITY) AS QUANTITY   
      FROM PRD_IRD01106 B  
      JOIN PRD_IRM01106 C ON C.IRM_MEMO_ID=B.IRM_MEMO_ID  
      JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID  
      JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.IRM_MEMO_ID = @CXNID AND ISNULL(B.NEW_PRODUCT_CODE,'')<>''
      GROUP BY B.PRODUCT_UID,B.DEPARTMENT_ID
      ) B ON B.PRODUCT_UID =A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID  
      WHERE A.QUANTITY_IN_STOCK < 0)  
  BEGIN  
   SET @NRETVAL = 0  --*** UNSUCCESS  
   SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A  JOIN  
     (SELECT B.PRODUCT_UID,B.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY   
     FROM PRD_IRD01106 B  
     JOIN PRD_IRM01106 C ON C.IRM_MEMO_ID=B.IRM_MEMO_ID  
     JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID  
     JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE  
     WHERE B.IRM_MEMO_ID = '''+@CXNID+'''  AND ISNULL(B.NEW_PRODUCT_CODE,'')<>''
     GROUP BY B.PRODUCT_UID,B.DEPARTMENT_ID) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID 
     WHERE A.QUANTITY_IN_STOCK < 0 '  
  END  
     
    
 END   -- END OF ITEM RATE REVISION  
  
  
	
	ELSE
	IF @CXNTYPE IN ('WPS')		-- WHOLESALE PACK SLIP 
	BEGIN
		PRINT 'ENTER WPS STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = -1
		ELSE
			SET @NOUTFLAG = 1
		
				
					

		PRINT 'ENTER WPS STOCK UPDATE-2'
		UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_PS_DET B
				JOIN PRD_PS_MST C ON C.PS_ID=B.PS_ID
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.PS_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID


		SET @NRETVAL = 1		--*** SUCCESS

        PRINT 'ENTER WPS STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_PS_MST WHERE PS_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER WPS STOCK UPDATE-4'
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(
							SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_PS_DET B
							JOIN PRD_PS_MST C ON C.PS_ID=B.PS_ID
							JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.PS_ID = @CXNID AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS

				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK FROM PRD_PMT A  JOIN
						(
							SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_PS_DET B
							JOIN PRD_PS_MST C ON C.PS_ID=B.PS_ID
							JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.PS_ID = '''+@CXNID+''' AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 '
			END
				--PRINT @CCMD
		END	
	END		--		END OF WHOLESALE PACK SLIP ENDS	

	
	ELSE
	IF @CXNTYPE IN ('MIS')		-- MATERIAL ISSUE 
	BEGIN
		PRINT 'ENTER MIS STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = -1
		ELSE
			SET @NOUTFLAG = 1
		
		
	
		PRINT 'ENTER MIS STOCK UPDATE-2'
		UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_ISSUE_MATERIAL_DET B
				JOIN PRD_ISSUE_MATERIAL_MST C ON C.MEMO_ID=B.MEMO_ID
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0 AND B.TYPE=0
				GROUP BY B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.SOURCE_DEPARTMENT_ID



       PRINT 'ENTER MIS STOCK UPDATE-2'
		UPDATE PRD_PMT 
			SET WIP = ISNULL(WIP,0) - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_ISSUE_MATERIAL_DET B
				JOIN PRD_ISSUE_MATERIAL_MST C ON C.MEMO_ID=B.MEMO_ID
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0 AND B.TYPE=1
				GROUP BY B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.SOURCE_DEPARTMENT_ID




		SET @NRETVAL = 1		--*** SUCCESS

PRINT 'ENTER MIS STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_ISSUE_MATERIAL_MST WHERE MEMO_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER MIS STOCK UPDATE-4'
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(SELECT B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
						FROM PRD_ISSUE_MATERIAL_DET B
						JOIN PRD_ISSUE_MATERIAL_MST C ON C.MEMO_ID=B.MEMO_ID
						JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
						JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
						WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
						GROUP BY B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.SOURCE_DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE (A.QUANTITY_IN_STOCK < 0 OR ISNULL(WIP,0)<0))
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS

				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK FROM PRD_PMT A  JOIN
						(SELECT B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
						FROM PRD_ISSUE_MATERIAL_DET B
						JOIN PRD_ISSUE_MATERIAL_MST C ON C.MEMO_ID=B.MEMO_ID
						JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
						JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
						WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
						GROUP BY B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID) B ON B.PRODUCT_UID=A.PRODUCT_UID 
						AND B.SOURCE_DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE (A.QUANTITY_IN_STOCK < 0  OR ISNULL(WIP,0)<0) '
			END
				--PRINT 'END'
		END		
		
		
		
	END		--		END OF MATERIAL ISSUE
	
	
	
	ELSE
	IF @CXNTYPE IN ('MREC')		-- MATERIAL RECEIVE 
	BEGIN
		PRINT 'ENTER MREC STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = 1
		ELSE
			SET @NOUTFLAG = -1
		
		
				
	
		PRINT 'ENTER MREC STOCK UPDATE-2'
		UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT F.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_MATERIAL_RECEIPT_DET B
				JOIN PRD_MATERIAL_RECEIPT_MST C ON C.MEMO_ID=B.MEMO_ID
				JOIN PRD_ISSUE_MATERIAL_DET F ON B.REF_ROW_ID= F.ROW_ID 
				JOIN PRD_ISSUE_MATERIAL_MST G ON C.REF_PRD_MATERIAL_ISSUE_MEMOID = G.MEMO_ID  
				JOIN PRD_SKU D ON F.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0 AND F.TYPE=0
				GROUP BY F.PRODUCT_UID,C.DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID
			
			
			
			
		UPDATE PRD_PMT 
			SET WIP = ISNULL(WIP,0) - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT F.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_MATERIAL_RECEIPT_DET B
				JOIN PRD_MATERIAL_RECEIPT_MST C ON C.MEMO_ID=B.MEMO_ID
				JOIN PRD_ISSUE_MATERIAL_DET F ON B.REF_ROW_ID= F.ROW_ID 
				JOIN PRD_ISSUE_MATERIAL_MST G ON C.REF_PRD_MATERIAL_ISSUE_MEMOID = G.MEMO_ID  
				JOIN PRD_SKU D ON F.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0 AND F.TYPE=1
				GROUP BY F.PRODUCT_UID,C.DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID	


		SET @NRETVAL = 1		--*** SUCCESS

PRINT 'ENTER MIS STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_MATERIAL_RECEIPT_MST WHERE MEMO_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER MIS STOCK UPDATE-4'
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(
							SELECT F.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_MATERIAL_RECEIPT_DET B
							JOIN PRD_MATERIAL_RECEIPT_MST C ON C.MEMO_ID=B.MEMO_ID
							JOIN PRD_ISSUE_MATERIAL_DET F ON B.REF_ROW_ID= F.ROW_ID 
				            JOIN PRD_ISSUE_MATERIAL_MST G ON C.REF_PRD_MATERIAL_ISSUE_MEMOID = G.MEMO_ID  
							JOIN PRD_SKU D ON F.PRODUCT_UID = D.PRODUCT_UID
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
							GROUP BY F.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE (A.QUANTITY_IN_STOCK < 0 OR ISNULL(WIP,0)<0))
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS

				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK FROM PRD_PMT A  JOIN
						(
							SELECT F.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_ISSUE_MATERIAL_DET B
							JOIN PRD_ISSUE_MATERIAL_MST C ON C.MEMO_ID=B.MEMO_ID
							JOIN PRD_ISSUE_MATERIAL_DET F ON B.REF_ROW_ID= F.ROW_ID 
				            JOIN PRD_ISSUE_MATERIAL_MST G ON C.REF_PRD_MATERIAL_ISSUE_MEMOID = G.MEMO_ID  
							JOIN PRD_SKU D ON F.PRODUCT_UID = D.PRODUCT_UID
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
							GROUP BY F.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE (A.QUANTITY_IN_STOCK < 0  OR ISNULL(WIP,0)<0)'
			END
				--PRINT 'END'
		END	
	END		--		END OF MATERIAL RECCEIVE
	
	
	
	ELSE
	IF @CXNTYPE IN ('DOC')		-- CODE CONVERSION 
	BEGIN
		PRINT 'ENTER DOC STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = 1
		ELSE
			SET @NOUTFLAG = -1
		
		
	
		PRINT 'ENTER DOC STOCK UPDATE-2'
		
		UPDATE PRD_PMT 
			SET WIP = ISNULL(WIP,0) - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_DEPARTMENT_OUTPUT_DET B
				JOIN PRD_DEPARTMENT_OUTPUT_MST C ON C.MEMO_ID=B.MEMO_ID			
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID
			
			
			
		PRINT 'UPDATE STOCK STATUS FOR CONSUME ITEM'
												
		
		UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK + ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_DEPARTMENT_RMCONSUMPTION_DET B
				JOIN PRD_DEPARTMENT_OUTPUT_MST C ON C.MEMO_ID=B.MEMO_ID			
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID
	
			


		SET @NRETVAL = 1		--*** SUCCESS

        PRINT 'ENTER DOC STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_DEPARTMENT_OUTPUT_MST WHERE MEMO_ID=@CXNID
		--SELECT @NOUTFLAG		
				
		--IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		IF (@NOUTFLAG <=0) OR @BCANCELLED=1
		BEGIN
		
			PRINT 'ENTER DOC STOCK UPDATE-4'
			
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(
							SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_DEPARTMENT_RMCONSUMPTION_DET B
							JOIN PRD_DEPARTMENT_OUTPUT_MST C ON C.MEMO_ID=B.MEMO_ID							
							JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE (ISNULL(A.WIP,0) < 0 OR A.QUANTITY_IN_STOCK < 0 ))
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS
				
				

				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, ISNULL(A.QUANTITY_IN_STOCK,0) FROM PRD_PMT A  JOIN
						(
							SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_DEPARTMENT_RMCONSUMPTION_DET B
							JOIN PRD_DEPARTMENT_OUTPUT_MST C ON C.MEMO_ID=B.MEMO_ID							
							JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE (ISNULL(A.WIP,0) < 0  OR A.QUANTITY_IN_STOCK < 0)'
			END
				--PRINT 'END'
		END	
	END		--		END OF CODE CONVERSION
		
	
	ELSE
	IF @CXNTYPE IN ('OMC')		-- MATERIAL ISSUE 
	BEGIN
		PRINT 'ENTER OMC STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = -1
		ELSE
			SET @NOUTFLAG = 1
		
		
		DECLARE @IMEMOTYPE INT
		SELECT @IMEMOTYPE=MODE FROM PRD_OP_MATERIAL_CON_MST WHERE MEMO_ID=@CXNID
		
		
		--PRINT 'ENTER OMC STOCK UPDATE-2'
		--PRINT @IMEMOTYPE
		IF @IMEMOTYPE =1 
		BEGIN
			--PRINT 'ENTER O TYPE'
			RETURN
		END
				
		UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_OP_MATERIAL_CON_RWM_DET B
				JOIN PRD_OP_MATERIAL_CON_MST C ON C.MEMO_ID=B.MEMO_ID
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.SOURCE_DEPARTMENT_ID


		SET @NRETVAL = 1		--*** SUCCESS

PRINT 'ENTER OMC STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_OP_MATERIAL_CON_MST WHERE MEMO_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER MIS STOCK UPDATE-4'
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(SELECT B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
						FROM PRD_OP_MATERIAL_CON_RWM_DET B
						JOIN PRD_OP_MATERIAL_CON_MST C ON C.MEMO_ID=B.MEMO_ID
						JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
						JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
						WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
						GROUP BY B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.SOURCE_DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS

				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK FROM PRD_PMT A  JOIN
						(SELECT B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
						FROM PRD_OP_MATERIAL_CON_RWM_DET B
						JOIN PRD_OP_MATERIAL_CON_MST C ON C.MEMO_ID=B.MEMO_ID
						JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
						JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
						WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
						GROUP BY B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.SOURCE_DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 '
			END
				--PRINT 'END'
		END	
	END		--		END OF OUT PUT
	
			
	
	ELSE
	IF @CXNTYPE IN ('WSR')		--WHOLESALE INVOICE CREDIT NOTE
	BEGIN
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = -1
		ELSE
			SET @NOUTFLAG = 1

		IF @NREVERTFLAG = 0
			INSERT PRD_PMT (PRODUCT_UID,  QUANTITY_IN_STOCK, DEPARTMENT_ID,LAST_UPDATE )
			SELECT B.PRODUCT_UID,0 AS QUANTITY_IN_STOCK,C.DEPARTMENT_ID,GETDATE() AS LAST_UPDATE
					FROM PRD_CND01106 B
					JOIN PRD_CNM01106 C ON C.CN_ID=B.CN_ID
					JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
					JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
					LEFT OUTER JOIN PRD_PMT PMT ON PMT.PRODUCT_UID = B.PRODUCT_UID 
					AND PMT.DEPARTMENT_ID  = C.DEPARTMENT_ID
			WHERE B.CN_ID = @CXNID AND PMT.PRODUCT_UID IS NULL
				
		PRINT 'CHECK WSR UPDATESTOCK-1'	
		--*** UPDATING THE QUANTITY IN STOCK FROM PMT FOR THE GIVEN MEMO
		UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK + ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(QUANTITY) AS QUANTITY 
				FROM PRD_CND01106 B
				JOIN PRD_CNM01106 C ON C.CN_ID=B.CN_ID
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.CN_ID = @CXNID
				GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID

		SET @NRETVAL = 1		--*** SUCCESS
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_CNM01106 WHERE CN_ID=@CXNID
		
		PRINT 'CHECK WSR UPDATESTOCK-2'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'CHECK WSR UPDATESTOCK-3'
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
						FROM PRD_CND01106 B
						JOIN PRD_CNM01106 C ON C.CN_ID=B.CN_ID
						JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
						JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
						WHERE B.CN_ID = @CXNID AND E.STOCK_NA=0
						GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK FROM PRD_PMT A  JOIN
						(SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
						FROM PRD_CND01106 B
						JOIN PRD_CNM01106 C ON C.CN_ID=B.CN_ID
						JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
						JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
						WHERE B.CN_ID = '''+@CXNID+''' AND E.STOCK_NA=0
						GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 '
			END

		END	
	END	
	
	ELSE
	IF @CXNTYPE IN ('XFR')		-----------STOCK TRANSFER
	BEGIN
		PRINT 'ENTER XFR STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = 1
		ELSE
			SET @NOUTFLAG = -1
		
		 				

		PRINT 'ENTER XFR STOCK UPDATE-2'
	
			    
		
		UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.NEW_PRODUCT_UID,C.TARGET_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_STK_TRANSFER_DET B
				JOIN PRD_STK_TRANSFER_MST C ON C.MEMO_ID=B.MEMO_ID
				JOIN PRD_SKU D ON B.NEW_PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.NEW_PRODUCT_UID,C.TARGET_DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.NEW_PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.TARGET_DEPARTMENT_ID
		
		
		
		UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_UID,C.TARGET_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_STK_TRANSFER_DET B
				JOIN PRD_STK_TRANSFER_MST C ON C.MEMO_ID=B.MEMO_ID
				JOIN PRD_SKU D ON B.NEW_PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_UID,C.TARGET_DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.TARGET_DEPARTMENT_ID
			
					
		
		
		 UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK + ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_STK_TRANSFER_DET B
				JOIN PRD_STK_TRANSFER_MST C ON C.MEMO_ID=B.MEMO_ID
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.SOURCE_DEPARTMENT_ID
		
			
			
			
		  SET @NRETVAL = 1		--*** SUCCESS

       PRINT 'ENTER XFR STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_STK_TRANSFER_MST WHERE MEMO_ID=@CXNID
		
		
		IF (@NOUTFLAG <= 1) OR @BCANCELLED=1		
		
		--IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
		
			PRINT 'ENTER XFR STOCK UPDATE-4'
			
						
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(
							SELECT B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_STK_TRANSFER_DET B
							JOIN PRD_STK_TRANSFER_MST C ON C.MEMO_ID=B.MEMO_ID
							JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.SOURCE_DEPARTMENT_ID =A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS
				
				
				PRINT 'ENTER XFR STOCK UPDATE-5'
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK FROM PRD_PMT A  JOIN
						(
							SELECT B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_STK_TRANSFER_DET B
							JOIN PRD_STK_TRANSFER_MST C ON C.MEMO_ID=B.MEMO_ID
							JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.SOURCE_DEPARTMENT_ID =A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 '
			END
				--PRINT @CCMD
		END		
			
				
			
		--MAIN PMT	
		
		--DECLARE @IMEMOTYPE1 INT
		--SELECT @IMEMOTYPE1=SOURCE_TYPE  FROM PRD_STK_TRANSFER_MST WHERE MEMO_ID=@CXNID
		
				
		--IF ISNULL(@IMEMOTYPE1,0) =2 
		--BEGIN
			
		--	RETURN
		--END
		
		
		--PRINT 'ENTER XFR STOCK UPDATE MAIN PMT '
		
		--UPDATE PMT01106 
		--	SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK + ( @NOUTFLAG * B.QUANTITY )
		--	FROM 
		--	(	SELECT B.PRODUCT_CODE,C.DEPT_ID, SUM(B.QUANTITY) AS QUANTITY 
		--		FROM PRD_STK_TRANSFER_DET B
		--		JOIN PRD_STK_TRANSFER_MST C ON C.MEMO_ID=B.MEMO_ID
		--		JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
		--		JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
		--		WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
		--		GROUP BY B.PRODUCT_CODE,C.DEPT_ID
		--	) B
		--	WHERE PMT01106.PRODUCT_CODE = B.PRODUCT_CODE 
		--	AND PMT01106.DEPT_ID = B.DEPT_ID

					


	  SET @NRETVAL = 1		--*** SUCCESS

      PRINT 'ENTER XFR STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_STK_TRANSFER_MST WHERE MEMO_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER XFR STOCK UPDATE-4'
			
			IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A JOIN
						(
							SELECT B.PRODUCT_CODE,C.DEPT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_STK_TRANSFER_DET B
							JOIN PRD_STK_TRANSFER_MST C ON C.MEMO_ID=B.MEMO_ID
							JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_CODE,C.DEPT_ID
						) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID =A.DEPT_ID
						WHERE A.QUANTITY_IN_STOCK < 0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS
				
				
				PRINT 'ENTER XFR STOCK UPDATE-5'
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK FROM PMT01106 A  JOIN
						(
							SELECT B.PRODUCT_CODE,C.DEPT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_STK_TRANSFER_DET B
							JOIN PRD_STK_TRANSFER_MST C ON C.MEMO_ID=B.MEMO_ID
							JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_CODE,C.DEPT_ID
						) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID =A.DEPT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 '
			END
				--PRINT @CCMD
		END	
	END		--		-----END STOCK TRANSFER
	
	
	ELSE
	IF @CXNTYPE IN ('XFR_PEN')		-----------STOCK TRANSFER PENDING
	BEGIN
		PRINT 'ENTER XFR STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = 1
		ELSE
			SET @NOUTFLAG = -1
		
		 				

		PRINT 'ENTER XFR STOCK UPDATE-2'
	
			    
		
		UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.NEW_PRODUCT_UID,C.TARGET_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_STK_TRANSFER_DET_PENDING B
				JOIN PRD_STK_TRANSFER_MST_PENDING C ON C.MEMO_ID=B.MEMO_ID
				JOIN PRD_SKU D ON B.NEW_PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.NEW_PRODUCT_UID,C.TARGET_DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.NEW_PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.TARGET_DEPARTMENT_ID
		
		
		
		UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_UID,C.TARGET_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_STK_TRANSFER_DET_PENDING B
				JOIN PRD_STK_TRANSFER_MST_PENDING C ON C.MEMO_ID=B.MEMO_ID
				JOIN PRD_SKU D ON B.NEW_PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_UID,C.TARGET_DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.TARGET_DEPARTMENT_ID
			
					
		
		
		 UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK + ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_STK_TRANSFER_DET_PENDING B
				JOIN PRD_STK_TRANSFER_MST_PENDING C ON C.MEMO_ID=B.MEMO_ID
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.SOURCE_DEPARTMENT_ID
		
			
			
			
	  SET @NRETVAL = 1		--*** SUCCESS

       PRINT 'ENTER XFR STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_STK_TRANSFER_MST_PENDING WHERE MEMO_ID=@CXNID
		
		
		IF (@NOUTFLAG <= 1) OR @BCANCELLED=1		
		
		--IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
		
			PRINT 'ENTER XFR STOCK UPDATE-4'
			
						
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(
							SELECT B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_STK_TRANSFER_DET_PENDING B
							JOIN PRD_STK_TRANSFER_MST_PENDING C ON C.MEMO_ID=B.MEMO_ID
							JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.SOURCE_DEPARTMENT_ID =A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS
				
				
				PRINT 'ENTER XFR STOCK UPDATE-5'
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK FROM PRD_PMT A  JOIN
						(
							SELECT B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_STK_TRANSFER_DET_PENDING B
							JOIN PRD_STK_TRANSFER_MST_PENDING C ON C.MEMO_ID=B.MEMO_ID
							JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.SOURCE_DEPARTMENT_ID =A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 '
			END
				--PRINT @CCMD
		END		
			
				
			


	  SET @NRETVAL = 1		--*** SUCCESS

      PRINT 'ENTER XFR STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_STK_TRANSFER_MST WHERE MEMO_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER XFR STOCK UPDATE-4'
			
			IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A JOIN
						(
							SELECT B.PRODUCT_CODE,C.DEPT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_STK_TRANSFER_DET_PENDING B
							JOIN PRD_STK_TRANSFER_MST_PENDING C ON C.MEMO_ID=B.MEMO_ID
							JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_CODE,C.DEPT_ID
						) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID =A.DEPT_ID
						WHERE A.QUANTITY_IN_STOCK < 0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS
				
				
				PRINT 'ENTER XFR STOCK UPDATE-5'
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK FROM PMT01106 A  JOIN
						(
							SELECT B.PRODUCT_CODE,C.DEPT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_STK_TRANSFER_DET_PENDING B
							JOIN PRD_STK_TRANSFER_MST_PENDING C ON C.MEMO_ID=B.MEMO_ID
							JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_CODE,C.DEPT_ID
						) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID =A.DEPT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 '
			END
				--PRINT @CCMD
		END	
	END		--		-----END STOCK TRANSFER
	 
    ELSE
	IF @CXNTYPE IN ('XREC')		-----------STOCK RECEIVE
	BEGIN
		PRINT 'ENTER XFR STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = 1
		ELSE
			SET @NOUTFLAG = -1
	
		PRINT 'ENTER XFR STOCK UPDATE-2'
	
		
		UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.NEW_PRODUCT_UID,C.TARGET_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_STK_RECEIVE_DET B
				JOIN PRD_STK_RECEIVE_MST C ON C.MEMO_ID=B.MEMO_ID
				JOIN PRD_SKU D ON B.NEW_PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.NEW_PRODUCT_UID,C.TARGET_DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.NEW_PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.TARGET_DEPARTMENT_ID
			
	
		
		 UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK + ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_STK_RECEIVE_DET B
				JOIN PRD_STK_RECEIVE_MST C ON C.MEMO_ID=B.MEMO_ID
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.SOURCE_DEPARTMENT_ID
		
		  SET @NRETVAL = 1		--*** SUCCESS

       PRINT 'ENTER XFR STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_STK_RECEIVE_MST WHERE MEMO_ID=@CXNID
		
		
		IF (@NOUTFLAG <= 1) OR @BCANCELLED=1		
		
		--IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
		
			PRINT 'ENTER XFR STOCK UPDATE-4'
			
						
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(
							SELECT B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_STK_RECEIVE_DET B
							JOIN PRD_STK_RECEIVE_MST C ON C.MEMO_ID=B.MEMO_ID
							JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.SOURCE_DEPARTMENT_ID =A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS
				
				
				PRINT 'ENTER XFR STOCK UPDATE-5'
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK FROM PRD_PMT A  JOIN
						(
							SELECT B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_STK_RECEIVE_DET B
							JOIN PRD_STK_RECEIVE_MST C ON C.MEMO_ID=B.MEMO_ID
							JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.SOURCE_DEPARTMENT_ID =A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 '
			END
				--PRINT @CCMD
		END		
			
	  SET @NRETVAL = 1		--*** SUCCESS

      PRINT 'ENTER XFR STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_STK_RECEIVE_MST WHERE MEMO_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER XFR STOCK UPDATE-4'
			
			IF EXISTS ( SELECT A.PRODUCT_CODE FROM PRD_PMT A JOIN
						(
							SELECT B.NEW_PRODUCT_UID,C.TARGET_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_STK_RECEIVE_DET B
							JOIN PRD_STK_RECEIVE_MST C ON C.MEMO_ID=B.MEMO_ID
							JOIN PRD_SKU D ON B.NEW_PRODUCT_UID = D.PRODUCT_UID
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
							GROUP BY B.NEW_PRODUCT_UID,C.TARGET_DEPARTMENT_ID
						) B ON B.NEW_PRODUCT_UID=A.PRODUCT_UID AND B.TARGET_DEPARTMENT_ID =A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS
				
				
				PRINT 'ENTER XFR STOCK UPDATE-5'
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK FROM PMT01106 A  JOIN
						(
							SELECT B.NEW_PRODUCT_UID,C.TARGET_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_STK_RECEIVE_DET B
							JOIN PRD_STK_RECEIVE_MST C ON C.MEMO_ID=B.MEMO_ID
							JOIN PRD_SKU D ON B.NEW_PRODUCT_UID = D.PRODUCT_UID
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
							GROUP BY B.NEW_PRODUCT_UID,C.TARGET_DEPARTMENT_ID,
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.TARGET_DEPARTMENT_ID =A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 '
			END
				--PRINT @CCMD
		END	
	END		--		--END STOCK RECEIVE
	
----*-------
	ELSE
	IF @CXNTYPE IN ('BFP')		-----------STOCK TRANSFER
	BEGIN
		PRINT 'ENTER XFR STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = -1
		ELSE
			SET @NOUTFLAG = 1
		
		 				

		PRINT 'ENTER BFP STOCK UPDATE-2'
		
		UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_STK_TRANSFER_DTM_DET B
				JOIN PRD_STK_TRANSFER_DTM_MST C ON C.MEMO_ID=B.MEMO_ID
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.SOURCE_DEPARTMENT_ID
			
		---MAIN PMT	
		
		PRINT 'ENTER BFP STOCK UPDATE MAIN PMT '
		
		UPDATE PMT01106 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK + ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_CODE,C.DEPT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_STK_TRANSFER_DTM_DET B
				JOIN PRD_STK_TRANSFER_DTM_MST C ON C.MEMO_ID=B.MEMO_ID
				JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_CODE,C.DEPT_ID
			) B
			WHERE PMT01106.PRODUCT_CODE = B.PRODUCT_CODE 
			AND PMT01106.DEPT_ID = B.DEPT_ID

					


	  SET @NRETVAL = 1		--*** SUCCESS

      PRINT 'ENTER BFP STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_STK_TRANSFER_MST WHERE MEMO_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER XFR STOCK UPDATE-4'
			
			IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A JOIN
						(
							SELECT B.PRODUCT_CODE,C.DEPT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_STK_TRANSFER_DTM_DET B
							JOIN PRD_STK_TRANSFER_DTM_MST C ON C.MEMO_ID=B.MEMO_ID
							JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_CODE,C.DEPT_ID
						) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID =A.DEPT_ID
						WHERE A.QUANTITY_IN_STOCK < 0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS
				
				
				PRINT 'ENTER XFR STOCK UPDATE-5'
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK FROM PMT01106 A  JOIN
						(
							SELECT B.PRODUCT_CODE,C.DEPT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_STK_TRANSFER_DTM_DET B
							JOIN PRD_STK_TRANSFER_DTM_MST C ON C.MEMO_ID=B.MEMO_ID
							JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_CODE,C.DEPT_ID
						) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID =A.DEPT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 '
			END
				--PRINT @CCMD
		END	
	END		--		-----END XFR
	
	
	--------------------TRANSFER TO MAIN
	ELSE
	IF @CXNTYPE IN ('TTM')		-----------STOCK TRANSFER
	BEGIN
		PRINT 'ENTER XFR STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = -1
		ELSE
			SET @NOUTFLAG = 1
		
		 				

		PRINT 'ENTER BFP STOCK UPDATE-2'
		
		UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_TRANSFER_MAIN_SUB_DET B
				JOIN PRD_TRANSFER_MAIN_MST C ON C.MEMO_ID=B.MEMO_ID
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.SOURCE_DEPARTMENT_ID
		
		
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_TRANSFER_MAIN_MST WHERE MEMO_ID=@CXNID
		
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1 
		BEGIN
			--PRINT 'CHECKING FOR NEGATIVE STOCK'
			PRINT 'PMT NEGATIVE START'
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(SELECT B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID AS DEPARTMENT_ID , SUM(B.QUANTITY) AS QUANTITY 
						FROM PRD_TRANSFER_MAIN_SUB_DET B
						JOIN PRD_TRANSFER_MAIN_MST C ON C.MEMO_ID=B.MEMO_ID
						JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
						JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
						WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
						GROUP BY B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK FROM PRD_PMT A  JOIN
						(SELECT B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID AS DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
						FROM PRD_TRANSFER_MAIN_SUB_DET B
						JOIN PRD_TRANSFER_MAIN_MST C ON C.MEMO_ID=B.MEMO_ID
						JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
						JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
						WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
						GROUP BY B.PRODUCT_UID,C.SOURCE_DEPARTMENT_ID) B ON B.PRODUCT_UID=A.PRODUCT_UID 
						AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 '
			END
		END	
	   
	   IF ISNULL(@CCMD,'')<>''
	   GOTO END_PROC
		---MAIN PMT	
		
		PRINT 'ENTER TTM STOCK UPDATE MAIN PMT '
		
		UPDATE PMT01106 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK + ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_CODE,LEFT(C.MEMO_ID,2) AS DEPT_ID, SUM(B.QTY) AS QUANTITY 
				FROM PRD_TRANSFER_MAIN_DET B
				JOIN PRD_TRANSFER_MAIN_MST C ON C.MEMO_ID=B.MEMO_ID
				JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_CODE,LEFT(C.MEMO_ID,2)
			) B
			WHERE PMT01106.PRODUCT_CODE = B.PRODUCT_CODE 
			AND PMT01106.DEPT_ID = B.DEPT_ID



	  SET @NRETVAL = 1		--*** SUCCESS

      PRINT 'ENTER BFP STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_TRANSFER_MAIN_MST WHERE MEMO_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER XFR STOCK UPDATE-4'
			
			IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A JOIN
						(
							SELECT B.PRODUCT_CODE,LEFT(C.MEMO_ID,2) AS DEPT_ID, SUM(B.QTY) AS QUANTITY 
							FROM PRD_TRANSFER_MAIN_DET B
							JOIN PRD_TRANSFER_MAIN_MST C ON C.MEMO_ID=B.MEMO_ID
							JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_CODE,LEFT(C.MEMO_ID,2)
						) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID =A.DEPT_ID
						WHERE A.QUANTITY_IN_STOCK < 0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS
				
				
				PRINT 'ENTER XFR STOCK UPDATE-5'
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK FROM PMT01106 A  JOIN
						(
							SELECT B.PRODUCT_CODE,LEFT(C.MEMO_ID,2) AS DEPT_ID, SUM(B.QTY) AS QUANTITY 
							FROM PRD_TRANSFER_MAIN_DET B
							JOIN PRD_TRANSFER_MAIN_MST C ON C.MEMO_ID=B.MEMO_ID
							JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_CODE,LEFT(C.MEMO_ID,2)
						) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID =A.DEPT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 '
			END
				--PRINT @CCMD
		END	
	END		--		-----END  TRANSFER TO MAIN ------
	

	ELSE
	IF @CXNTYPE IN ('FGP')		-- FGP CONVERSION 
	BEGIN
		PRINT 'ENTER FGP STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = 1
		ELSE
			SET @NOUTFLAG = -1
		
		
	
		PRINT 'ENTER FGP STOCK UPDATE-2'
		
		UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_FINISH_DET B
				JOIN PRD_FINISH_MST C ON C.MEMO_ID=B.MEMO_ID			
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID
			
			
			
			--UPDATE PRD_PMT 
			--SET WIP = ISNULL(WIP,0) - ( @NOUTFLAG * B.QUANTITY )
			--FROM 
			--(	SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
			--	FROM PRD_FINISH_DET B
			--	JOIN PRD_FINISH_MST C ON C.MEMO_ID=B.MEMO_ID			
			--	JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
			--	JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
			--	WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
			--	GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
			--) B
			--WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			--AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID
			
			
			--SELECT * FROM PRD_FINISH_CONSUMPTION_DET
			--SELECT * FROM PRD_FINISH_DET
			
		PRINT 'UPDATE WIP STOCK STATUS FOR CONSUME ITEM'
												
		
		UPDATE PRD_PMT 
			SET WIP = ISNULL(WIP,0) + ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_FINISH_CONSUMPTION_DET B
				JOIN PRD_FINISH_MST C ON C.MEMO_ID=B.MEMO_ID			
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID
	
			


		SET @NRETVAL = 1		--*** SUCCESS

        PRINT 'ENTER FGP STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_FINISH_MST WHERE MEMO_ID=@CXNID
					
				
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER FGP STOCK UPDATE-4'
			
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(
							SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_FINISH_DET B
							JOIN PRD_FINISH_MST C ON C.MEMO_ID=B.MEMO_ID							
							JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE (ISNULL(A.WIP,0) < 0 OR A.QUANTITY_IN_STOCK < 0 ))
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS

				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, ISNULL(A.WIP,0) FROM PRD_PMT A  JOIN
						(
							SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_FINISH_DET B
							JOIN PRD_FINISH_MST C ON C.MEMO_ID=B.MEMO_ID							
							JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
							GROUP BY D.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE (ISNULL(A.WIP,0) < 0  OR A.QUANTITY_IN_STOCK < 0)'
			END
				--PRINT 'END'
		END	
	END		--		END OF FGP	
	
	ELSE
	IF @CXNTYPE IN ('AMIS')		-- AGENCY_ISSUE_MATERIAL
	BEGIN
		PRINT 'ENTER AMIS STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = -1
		ELSE
			SET @NOUTFLAG = 1	
								
	
		 --SELECT  * FROM  PRD_AGENCY_ISSUE_MATERIAL_MST 
		 --SELECT  * FROM  PRD_AGENCY_ISSUE_MATERIAL_DET 		

		PRINT 'ENTER AMIS STOCK UPDATE-2'
		UPDATE PRD_PMT 
			--SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			SET QUANTITY_IN_STOCK =  (CASE WHEN B.STOCK_TYPE =1 THEN QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY ) ELSE QUANTITY_IN_STOCK END),
        WIP =  (CASE WHEN B.STOCK_TYPE =2 THEN ISNULL(WIP,0) - ( @NOUTFLAG * B.QUANTITY ) ELSE WIP END)
   
			FROM 
			(	SELECT B.PRODUCT_UID,C.DEPARTMENT_ID,B.STOCK_TYPE ,SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_AGENCY_ISSUE_MATERIAL_DET B
				JOIN PRD_AGENCY_ISSUE_MATERIAL_MST C ON C.MEMO_ID=B.MEMO_ID
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID,B.STOCK_TYPE
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID


		SET @NRETVAL = 1		--*** SUCCESS

        PRINT 'ENTER AMIS STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_AGENCY_ISSUE_MATERIAL_MST WHERE MEMO_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER WSL STOCK UPDATE-4'
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
						FROM PRD_AGENCY_ISSUE_MATERIAL_DET B
						JOIN PRD_AGENCY_ISSUE_MATERIAL_MST C ON C.MEMO_ID=B.MEMO_ID
						JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
						JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
						WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
						GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 OR ISNULL(A.WIP,0) <0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS

				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK 
				              FROM PRD_PMT A  JOIN
							(
								SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
								FROM PRD_AGENCY_ISSUE_MATERIAL_DET B
								JOIN PRD_AGENCY_ISSUE_MATERIAL_MST C ON C.MEMO_ID=B.MEMO_ID
								JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
								JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
								WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
								GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
							) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
							WHERE A.QUANTITY_IN_STOCK < 0 OR ISNULL(A.WIP,0) <0 '
			END
				--PRINT @CCMD
		END	
	END		--		END OF MATRIAL ISSUE OUT SOURCE
	
	---------PENDING ISSUE MATERIAL
	ELSE
	IF @CXNTYPE IN ('AMIS_PEN')		-- AGENCY_ISSUE_MATERIAL PENDING
	BEGIN
		PRINT 'ENTER AMIS STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = -1
		ELSE
			SET @NOUTFLAG = 1	
								
	
		 --SELECT  * FROM  PRD_AGENCY_ISSUE_MATERIAL_MST_PENDING 
		 --SELECT  * FROM  PRD_AGENCY_ISSUE_MATERIAL_DET_PENDING		

		PRINT 'ENTER AMIS STOCK UPDATE-2'
		UPDATE PRD_PMT 
			--SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			SET QUANTITY_IN_STOCK =  (CASE WHEN B.STOCK_TYPE =1 THEN QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY ) ELSE QUANTITY_IN_STOCK END),
        WIP =  (CASE WHEN B.STOCK_TYPE =2 THEN ISNULL(WIP,0) - ( @NOUTFLAG * B.QUANTITY ) ELSE WIP END)
   
			FROM 
			(	SELECT B.PRODUCT_UID,C.DEPARTMENT_ID,B.STOCK_TYPE ,SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_AGENCY_ISSUE_MATERIAL_DET_PENDING B
				JOIN PRD_AGENCY_ISSUE_MATERIAL_MST_PENDING C ON C.MEMO_ID=B.MEMO_ID
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID,B.STOCK_TYPE
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID


		SET @NRETVAL = 1		--*** SUCCESS

        PRINT 'ENTER AMIS STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_AGENCY_ISSUE_MATERIAL_MST_PENDING WHERE MEMO_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER WSL STOCK UPDATE-4'
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
						FROM PRD_AGENCY_ISSUE_MATERIAL_DET_PENDING B
						JOIN PRD_AGENCY_ISSUE_MATERIAL_MST_PENDING C ON C.MEMO_ID=B.MEMO_ID
						JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
						JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
						WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
						GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 OR ISNULL(A.WIP,0) <0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS

				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK 
				              FROM PRD_PMT A  JOIN
							(
								SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
								FROM PRD_AGENCY_ISSUE_MATERIAL_DET_PENDING B
								JOIN PRD_AGENCY_ISSUE_MATERIAL_MST_PENDING C ON C.MEMO_ID=B.MEMO_ID
								JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
								JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
								WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
								GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
							) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
							WHERE A.QUANTITY_IN_STOCK < 0 OR ISNULL(A.WIP,0) <0 '
			END
				--PRINT @CCMD
		END	
	END		--		END OF MATRIAL ISSUE OUT SOURCE
	-------------------	
	ELSE
	IF @CXNTYPE IN ('AMRC')		-- AGENCY_RECEIVE_MATERIAL
	BEGIN
		PRINT 'ENTER AMRC STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = 1
		ELSE
			SET @NOUTFLAG = -1	
									 		

		PRINT 'ENTER AMRC STOCK UPDATE-2'
		
		UPDATE PRD_PMT 
			
			 SET QUANTITY_IN_STOCK =  (CASE WHEN B.STOCK_TYPE =1 THEN QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY ) ELSE QUANTITY_IN_STOCK END),
                 WIP =  (CASE WHEN B.STOCK_TYPE =2 THEN ISNULL(WIP,0) - ( @NOUTFLAG * B.QUANTITY ) ELSE WIP END)
  			FROM 
			(	SELECT D.PRODUCT_CODE , B.XN_PRODUCT_UID,C.DEPARTMENT_ID,B.STOCK_TYPE, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_AGENCY_MATERIAL_RECEIPT_DET B
				JOIN PRD_AGENCY_MATERIAL_RECEIPT_MST C ON C.MEMO_ID=B.MEMO_ID			
				JOIN PRD_SKU D ON B.XN_PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID
				AND E.STOCK_NA=0
				GROUP BY D.PRODUCT_CODE,B.XN_PRODUCT_UID,C.DEPARTMENT_ID ,B.STOCK_TYPE
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.XN_PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID 


		SET @NRETVAL = 1		--*** SUCCESS

        PRINT 'ENTER AMRC STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_AGENCY_MATERIAL_RECEIPT_MST WHERE MEMO_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER AMRC STOCK UPDATE-4'
			
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(
							SELECT B.XN_PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_AGENCY_MATERIAL_RECEIPT_DET B
							JOIN PRD_AGENCY_MATERIAL_RECEIPT_MST C ON C.MEMO_ID=B.MEMO_ID
							--JOIN PRD_AGENCY_ISSUE_MATERIAL_DET R ON B.REF_ROW_ID = R.ROW_ID 
							JOIN PRD_SKU D ON B.XN_PRODUCT_UID = D.PRODUCT_UID
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
							GROUP BY B.XN_PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.XN_PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 OR ISNULL(A.WIP,0) <0)
			
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS

				
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK 
				              FROM PRD_PMT A  JOIN
							(
								SELECT B.XN_PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
								FROM PRD_AGENCY_MATERIAL_RECEIPT_DET B
								JOIN PRD_AGENCY_MATERIAL_RECEIPT_MST C ON C.MEMO_ID=B.MEMO_ID
								--JOIN PRD_AGENCY_ISSUE_MATERIAL_DET R ON B.REF_ROW_ID = R.ROW_ID 
								JOIN PRD_SKU D ON B.XN_PRODUCT_UID = D.PRODUCT_UID
								JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
								WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
								GROUP BY B.XN_PRODUCT_UID,C.DEPARTMENT_ID
							) B ON B.XN_PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
							WHERE A.QUANTITY_IN_STOCK < 0 OR ISNULL(A.WIP,0) <0'
			END
				--PRINT @CCMD
		END	
	END		--		END OF MATRIAL RECEIVE OUT SOURCE
	
	
	ELSE
	IF @CXNTYPE IN ('RMRET')		-- RM RETURN
	BEGIN
		PRINT 'ENTER AMRC STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = 1
		ELSE
			SET @NOUTFLAG = -1	
									 		

		PRINT 'ENTER AMRC STOCK UPDATE-2'
		
		
		
		UPDATE PRD_PMT 
			
			 SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )    
  			FROM 
			(	SELECT C.DEPARTMENT_ID, B.PRODUCT_UID,SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_AGENCY_RM_RETURN_DET B
				JOIN PRD_AGENCY_RM_RETURN_MST C ON C.MEMO_ID=B.MEMO_ID			
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID
				AND E.STOCK_NA=0
				GROUP BY C.DEPARTMENT_ID,B.PRODUCT_UID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID 


		SET @NRETVAL = 1		--*** SUCCESS

        PRINT 'ENTER AMRC STOCK UPDATE-3'
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_AGENCY_MATERIAL_RECEIPT_MST WHERE MEMO_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER AMRC STOCK UPDATE-4'
			
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(
							SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_AGENCY_RM_RETURN_DET B
							JOIN PRD_AGENCY_RM_RETURN_MST C ON C.MEMO_ID=B.MEMO_ID
							JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 )
			
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS

				
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK 
				              FROM PRD_PMT A  JOIN
							(
								SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
								FROM PRD_AGENCY_RM_RETURN_DET B
								JOIN PRD_AGENCY_RM_RETURN_MST C ON C.MEMO_ID=B.MEMO_ID
								JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
								JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
								WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
								GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
							) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
							WHERE A.QUANTITY_IN_STOCK < 0 '
			END
				--PRINT @CCMD
		END	
	END		--		END OF RM RETURN
	
	
	ELSE
	IF @CXNTYPE IN ('RE_ISSUE')		-- AGENCY_RE_ISSUE
	BEGIN
		PRINT 'ENTER AMIS STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = -1
		ELSE
			SET @NOUTFLAG = 1	
								
		PRINT 'ENTER RE ISSUE STOCK UPDATE-2'
		UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK =  QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_UID,C.DEPARTMENT_ID,SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_AGENCY_RE_ISSUE_DET B
				JOIN PRD_AGENCY_RE_ISSUE_MST C ON C.MEMO_ID=B.MEMO_ID
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID


		SET @NRETVAL = 1		--*** SUCCESS

        PRINT 'ENTER AMIS STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_AGENCY_RE_ISSUE_MST WHERE MEMO_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER WSL STOCK UPDATE-4'
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
						FROM PRD_AGENCY_RE_ISSUE_DET B
						JOIN PRD_AGENCY_RE_ISSUE_MST C ON C.MEMO_ID=B.MEMO_ID
						JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
						JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
						WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
						GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 )
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS

				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK 
				              FROM PRD_PMT A  JOIN
							(
								SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
								FROM PRD_AGENCY_RE_ISSUE_DET B
								JOIN PRD_AGENCY_RE_ISSUE_MST C ON C.MEMO_ID=B.MEMO_ID
								JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
								JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
								WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
								GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
							) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
							WHERE A.QUANTITY_IN_STOCK < 0  '
			END
				--PRINT @CCMD
		END	
	END		--		END OF MATRIAL RE_ISSUE OUT SOURCE
	
	
	ELSE
	IF @CXNTYPE IN ('JW_REISS')		--  JOBWORK _RE_ISSUE
	BEGIN
		PRINT 'ENTER AMIS STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = -1
		ELSE
			SET @NOUTFLAG = 1	
								
		PRINT 'ENTER RE ISSUE STOCK UPDATE-2'
		UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK =  QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_UID,C.DEPARTMENT_ID,SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_JOBWORK_RE_ISSUE_DET B
				JOIN PRD_JOBWORK_RE_ISSUE_MST C ON C.ISSUE_ID=B.ISSUE_ID
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.ISSUE_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID


		SET @NRETVAL = 1		--*** SUCCESS

        PRINT 'ENTER AMIS STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_JOBWORK_RE_ISSUE_MST WHERE ISSUE_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER WSL STOCK UPDATE-4'
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
						FROM PRD_JOBWORK_RE_ISSUE_DET  B
						JOIN PRD_JOBWORK_RE_ISSUE_MST C ON C.ISSUE_ID=B.ISSUE_ID
						JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
						JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
						WHERE B.ISSUE_ID = @CXNID AND E.STOCK_NA=0
						GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 )
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS

				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK 
				              FROM PRD_PMT A  JOIN
							(
								SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
								FROM PRD_JOBWORK_RE_ISSUE_DET B
								JOIN PRD_JOBWORK_RE_ISSUE_MST C ON C.ISSUE_ID=B.ISSUE_ID
								JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
								JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
								WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
								GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
							) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
							WHERE A.QUANTITY_IN_STOCK < 0  '
			END
				--PRINT @CCMD
		END	
	END		--		END OF JOBWORK REISSUE
	
	
	ELSE
	IF @CXNTYPE IN ('RE_REC')		-- AGENCY_RE RECEIVE_MATERIAL
	BEGIN
		PRINT 'ENTER AMRC STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = 1
		ELSE
			SET @NOUTFLAG = -1							 		
		PRINT 'ENTER AMRC STOCK UPDATE-2'
		
		UPDATE PRD_PMT 
			 SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
  			FROM 
			(	SELECT D.PRODUCT_CODE , B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_AGENCY_RE_RECEIPT_DET B
				JOIN PRD_AGENCY_RE_RECEIPT_MST C ON C.MEMO_ID=B.MEMO_ID			
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID
				AND E.STOCK_NA=0
				GROUP BY D.PRODUCT_CODE,B.PRODUCT_UID,C.DEPARTMENT_ID 
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID 


		SET @NRETVAL = 1		--*** SUCCESS

        PRINT 'ENTER AMRC STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_AGENCY_RE_RECEIPT_MST WHERE MEMO_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER AMRC STOCK UPDATE-4'
			
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(
							SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_AGENCY_RE_RECEIPT_DET B
							JOIN PRD_AGENCY_RE_RECEIPT_MST C ON C.MEMO_ID=B.MEMO_ID
							JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 )
			
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS

				
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK 
				              FROM PRD_PMT A  JOIN
							(
								SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
								FROM PRD_AGENCY_RE_RECEIPT_DET B
								JOIN PRD_AGENCY_RE_RECEIPT_MST C ON C.MEMO_ID=B.MEMO_ID
								JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
								JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
								WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
								GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
							) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
							WHERE A.QUANTITY_IN_STOCK < 0 '
			END
				--PRINT @CCMD
		END	
	END		--		END OF MATRIAL RE RECEIVE OUT SOURCE
	
	ELSE
	IF @CXNTYPE IN ('JW_REREC')		-- AGENCY_RE RECEIVE_MATERIAL
	BEGIN
		PRINT 'ENTER AMRC STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = 1
		ELSE
			SET @NOUTFLAG = -1							 		
		PRINT 'ENTER AMRC STOCK UPDATE-2'
		
		UPDATE PRD_PMT 
			 SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
  			FROM 
			(	SELECT D.PRODUCT_CODE , B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_JOBWORK_RE_RECEIPT_DET B
				JOIN PRD_JOBWORK_RE_RECEIPT_MST C ON C.RECEIPT_ID=B.RECEIPT_ID			
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.RECEIPT_ID = @CXNID
				AND E.STOCK_NA=0
				GROUP BY D.PRODUCT_CODE,B.PRODUCT_UID,C.DEPARTMENT_ID 
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID 


		SET @NRETVAL = 1		--*** SUCCESS

        PRINT 'ENTER AMRC STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_JOBWORK_RE_RECEIPT_MST WHERE RECEIPT_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER AMRC STOCK UPDATE-4'
			
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(
							SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_JOBWORK_RE_RECEIPT_DET B
							JOIN PRD_JOBWORK_RE_RECEIPT_MST C ON C.RECEIPT_ID=B.RECEIPT_ID
							JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.RECEIPT_ID = @CXNID AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 )
			
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS

				
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK 
				              FROM PRD_PMT A  JOIN
							(
								SELECT B.XN_PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
								FROM PRD_JOBWORK_RE_RECEIPT_DET B
								JOIN PRD_JOBWORK_RE_RECEIPT_MST C ON C.RECEIPT_ID=B.RECEIPT_ID
								JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
								JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
								WHERE B.RECEIPT_ID = '''+@CXNID+''' AND E.STOCK_NA=0
								GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
							) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
							WHERE A.QUANTITY_IN_STOCK < 0 '
			END
				--PRINT @CCMD
		END	
	END		--		END OF MATRIAL RE RECEIVE OUT SOURCE
	---------0---
	ELSE
	IF @CXNTYPE IN ('PRD_APP')		-- PRD APPROVAL ISSUE
	BEGIN
		PRINT 'ENTER AMIS STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = -1
		ELSE
			SET @NOUTFLAG = 1	
								
	
		 --SELECT  * FROM  PRD_APM01106
		 --SELECT  * FROM  PRD_APD1106		

		PRINT 'ENTER PRD_APP STOCK UPDATE-2'
		UPDATE PRD_PMT 
			--SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			SET QUANTITY_IN_STOCK =  QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
   
			FROM 
			(	SELECT B.PRODUCT_UID,C.DEPARTMENT_ID,SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_APD01106 B
				JOIN PRD_APM01106 C ON C.MEMO_ID=B.MEMO_ID
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID


		SET @NRETVAL = 1		--*** SUCCESS

        PRINT 'ENTER AMIS STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_APM01106 WHERE MEMO_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER WSL STOCK UPDATE-4'
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
						FROM PRD_APD01106 B
						JOIN PRD_APM01106 C ON C.MEMO_ID=B.MEMO_ID
						JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
						JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
						WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
						GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 )
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS

				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK 
				              FROM PRD_PMT A  JOIN
							(
								SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
								FROM PRD_APD01106 B
								JOIN PRD_APM01106 C ON C.MEMO_ID=B.MEMO_ID
								JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
								JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
								WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
								GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
							) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
							WHERE A.QUANTITY_IN_STOCK < 0  '
			END
				--PRINT @CCMD
		END	
	END		--		END OF MATRIAL ISSUE OUT SOURCE
	
		
	ELSE
	IF @CXNTYPE IN ('PRD_APR')		-- APPROVAL RETURN
	BEGIN
		PRINT 'ENTER AMRC STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = 1
		ELSE
			SET @NOUTFLAG = -1	
									 		

		PRINT 'ENTER AMRC STOCK UPDATE-2'
	
		UPDATE PRD_PMT 
			 SET QUANTITY_IN_STOCK =  QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
  			FROM 
			(	SELECT D.PRODUCT_CODE , B.PRODUCT_UID,C.DEPARTMENT_ID,SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_APPROVAL_RETURN_DET B
				JOIN PRD_APPROVAL_RETURN_MST  C ON C.MEMO_ID=B.MEMO_ID			
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID
				AND E.STOCK_NA=0
				GROUP BY D.PRODUCT_CODE,B.PRODUCT_UID,C.DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID 


		SET @NRETVAL = 1		--*** SUCCESS

        PRINT 'ENTER AMRC STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_APPROVAL_RETURN_MST WHERE MEMO_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER AMRC STOCK UPDATE-4'
			
			
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(
							SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_APPROVAL_RETURN_DET B
							JOIN PRD_APPROVAL_RETURN_MST  C ON C.MEMO_ID=B.MEMO_ID
				        	JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0) 
			
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS

				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK 
				              FROM PRD_PMT A  JOIN
							(
								SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
								FROM PRD_APPROVAL_RETURN_DET B
								JOIN PRD_APPROVAL_RETURN_MST C ON C.MEMO_ID=B.MEMO_ID
								JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
								JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
								WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
								GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
							) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
							WHERE A.QUANTITY_IN_STOCK < 0 '
			END
				--PRINT @CCMD
		END	
	END		--		END OF MATRIAL RECEIVE OUT SOURCE
	
	
	------------
	
					
	ELSE	
	--*** STARTING STOCK UPDATION FOR PURCHASE RETURN
	IF @CXNTYPE IN ('PRT')		-- PURCHASE RETURN
	BEGIN
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = -1
		ELSE
			SET @NOUTFLAG = 1

		--*** UPDATING THE QUANTITY IN STOCK FROM PMT FOR THE GIVEN MEMO
		UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_UID, C.DEPARTMENT_ID, SUM(QUANTITY) AS QUANTITY 
				FROM PRD_RMD01106 B
				JOIN PRD_RMM01106 C ON C.RM_ID=B.RM_ID
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.RM_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_UID, C.DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID

		SET @NRETVAL = 1		--*** SUCCESS

		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1)
		BEGIN
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
						FROM PRD_RMD01106 B
						JOIN PRD_RMM01106 C ON C.RM_ID=B.RM_ID
						JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
						JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
						WHERE B.RM_ID = @CXNID AND E.STOCK_NA=0
						GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK FROM PRD_PMT A  JOIN
						(SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
						FROM PRD_RMD01106 B
						JOIN PRD_RMM01106 C ON C.RM_ID=B.RM_ID
						JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
						JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
						WHERE B.RM_ID = '''+@CXNID+''' AND E.STOCK_NA=0
						GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID) B ON B.PRODUCT_UID=A.PRODUCT_UID 
						AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 '
			END

		END	
	END		--		END OF PURCHASE RETURN
	
ELSE	
 IF @CXNTYPE IN ('RMR')  -- READYMADE RECEIVE    
 BEGIN      
 PRINT 'ENTER RMR STOCK UPDATE-1'      
   IF @NREVERTFLAG = 1      
    SET @NOUTFLAG = 1      
   ELSE      
    SET @NOUTFLAG = -1      
            
       
   PRINT 'ENTER RMR STOCK UPDATE-2'      
   UPDATE PRD_PMT       
    SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )      
    FROM       
    ( SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY       
  FROM PRD_READY_RECEIVE_DET B      
  JOIN PRD_READY_RECEIVE_MST C ON C.MEMO_ID=B.MEMO_ID      
  JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID      
  JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE      
  WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0      
  GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID      
    ) B      
    WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID       
    AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID      
       
       
   SET @NRETVAL = 1  --*** SUCCESS      
       
   PRINT 'ENTER RMR STOCK UPDATE-3'      
   --*** CHECKING FOR NEGATIVE STOCK      
   --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT      
         
   SELECT @BCANCELLED=CANCELLED FROM PRD_READY_RECEIVE_MST WHERE MEMO_ID=@CXNID      
         
   IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1      
   BEGIN      
    PRINT 'ENTER RMR STOCK UPDATE-4'      
    IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN      
    (      
     SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY       
     FROM PRD_READY_RECEIVE_DET B      
     JOIN PRD_READY_RECEIVE_MST C ON C.MEMO_ID=B.MEMO_ID      
     JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID      
     JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE      
     WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0      
     GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID      
    ) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID      
    WHERE A.QUANTITY_IN_STOCK < 0)      
    BEGIN      
  SET @NRETVAL = 0  --*** UNSUCCESS      
       
  SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK FROM PRD_PMT A  JOIN      
    (      
     SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY       
     FROM PRD_READY_RECEIVE_DET B      
     JOIN PRD_READY_RECEIVE_MST C ON C.MEMO_ID=B.MEMO_ID      
     JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID      
     JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE      
     WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0      
     GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID      
    ) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID      
    WHERE A.QUANTITY_IN_STOCK < 0 '      
    END      
  --PRINT @CCMD      
   END       
 END  --  END OF READY MADE RECEIVE ENDS         
 
 ELSE
  IF @CXNTYPE IN ('PRDCNC','PRDUNC')  -- PRODUCTION CANCELLATION
  
 BEGIN      
 PRINT 'ENTER PRDCNC STOCK UPDATE-1'      
   IF @NREVERTFLAG = 1      
    SET @NOUTFLAG = 1      
   ELSE      
    SET @NOUTFLAG = -1      
       
   PRINT 'ENTER PRDCNC STOCK UPDATE-2'   
        
   UPDATE PRD_PMT       
    SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )      
    FROM       
    ( SELECT B.PRODUCT_UID,C.DEPARTMENT_ID,SUM(B.QUANTITY) AS QUANTITY       
	  FROM PRD_ICD01106 B      
	  JOIN PRD_ICM01106 C ON C.CNC_MEMO_ID=B.CNC_MEMO_ID      
	  JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID AND D.WORK_ORDER_ID=''     
	  JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE      
	  WHERE B.CNC_MEMO_ID = @CXNID AND E.STOCK_NA=0      
	  GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID      
    ) B      
    WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID       
    AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID      
    
    --SELECT * FROM PRD_PMT  WHERE PRODUCT_UID='E25A1C65-26FF-4967-81A9-039D45D10537' 
       
   SET @NRETVAL = 1  --*** SUCCESS      
       
   PRINT 'ENTER PRDCNC STOCK UPDATE-3'      
   --*** CHECKING FOR NEGATIVE STOCK      
   --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT      
         
   SELECT @BCANCELLED=CANCELLED FROM PRD_ICM01106 WHERE CNC_MEMO_ID=@CXNID      
         
   IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1      
   BEGIN      
    PRINT 'ENTER RMR STOCK UPDATE-4'      
    IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN      
    (      
     SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY       
     FROM PRD_ICD01106 B      
     JOIN PRD_ICM01106 C ON C.CNC_MEMO_ID=B.CNC_MEMO_ID      
     JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID      AND D.WORK_ORDER_ID=''
     JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE      
     WHERE B.CNC_MEMO_ID = @CXNID AND E.STOCK_NA=0      
     GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID      
    ) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID      
    WHERE A.QUANTITY_IN_STOCK < 0)      
    BEGIN      
  SET @NRETVAL = 0  --*** UNSUCCESS      
       
  SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK FROM PRD_PMT A  JOIN      
    (      
     SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY       
     FROM PRD_ICD01106 B      
     JOIN PRD_ICM01106 C ON C.CNC_MEMO_ID=B.CNC_MEMO_ID      
     JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID AND D.WORK_ORDER_ID=''''     
     JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE      
     WHERE B.CNC_MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0      
     GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID      
    ) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID      
    WHERE A.QUANTITY_IN_STOCK < 0 '      
    END      
  
   END       
 END  --  END OF CANCELLATION / UNCANCALLATION ENDS    
 
 
 ---------0---
	ELSE
	IF @CXNTYPE IN ('ISS_SAMPLE')		-- PRD SAMPLE ISSUE
	BEGIN
		PRINT 'ENTER AMIS STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = -1
		ELSE
			SET @NOUTFLAG = 1	
								
	
		 --SELECT  * FROM  PRD_AGENCY_ISSUE_MATERIAL_MST_SAMPLE
		 --SELECT  * FROM  PRD_AGENCY_ISSUE_MATERIAL_DET_SAMPLE		

		PRINT 'ENTER PRD_APP STOCK UPDATE-2'
		UPDATE PRD_PMT 
			--SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			SET QUANTITY_IN_STOCK =  QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
   
			FROM 
			(	SELECT B.PRODUCT_UID,C.DEPARTMENT_ID,SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_AGENCY_ISSUE_MATERIAL_DET_SAMPLE B
				JOIN PRD_AGENCY_ISSUE_MATERIAL_MST_SAMPLE C ON C.MEMO_ID=B.MEMO_ID
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0 AND B.PRODUCT_CODE_TYPE=2
				GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID


		SET @NRETVAL = 1		--*** SUCCESS

        PRINT 'ENTER AMIS STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_AGENCY_ISSUE_MATERIAL_MST_SAMPLE WHERE MEMO_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER WSL STOCK UPDATE-4'
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
						FROM PRD_AGENCY_ISSUE_MATERIAL_DET_SAMPLE B
						JOIN PRD_AGENCY_ISSUE_MATERIAL_MST_SAMPLE C ON C.MEMO_ID=B.MEMO_ID
						JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
						JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
						WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0 AND B.PRODUCT_CODE_TYPE=2
						GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 )
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS

				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK 
				              FROM PRD_PMT A  JOIN
							(
								SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
								FROM PRD_AGENCY_ISSUE_MATERIAL_DET_SAMPLE B
								JOIN PRD_AGENCY_ISSUE_MATERIAL_MST_SAMPLE C ON C.MEMO_ID=B.MEMO_ID
								JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
								JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
								WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
								GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
							) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
							WHERE A.QUANTITY_IN_STOCK < 0  '
			END
				--PRINT @CCMD
		END	
		
	----FOR READY STOCK
	
	UPDATE A   
   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )  
	FROM  PMT01106 A
   JOIN 
   ( 
	    SELECT B.PRODUCT_CODE,LEFT( C.MEMO_ID,2) AS DEPT_ID,C.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
		FROM PRD_AGENCY_ISSUE_MATERIAL_DET_SAMPLE B  
		JOIN PRD_AGENCY_ISSUE_MATERIAL_MST_SAMPLE C ON C.MEMO_ID=B.MEMO_ID  
		JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE  
		JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE 
		WHERE B.MEMO_ID = @CXNID  AND E.STOCK_NA=0  AND PRODUCT_CODE_TYPE=1 
		GROUP BY B.PRODUCT_CODE,LEFT( C.MEMO_ID,2)  ,C.BIN_ID
   ) B  ON A.PRODUCT_CODE = B.PRODUCT_CODE   
   AND A.DEPT_ID = B.DEPT_ID  
   AND A.BIN_ID = B.BIN_ID 
  
  
  SET @NRETVAL = 1  --*** SUCCESS  
    
  --*** CHECKING FOR NEGATIVE STOCK  
  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT  
  IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1  
  BEGIN  
   IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A JOIN  
      (SELECT B.PRODUCT_CODE,LEFT( C.MEMO_ID,2) AS DEPT_ID,C.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
      FROM PRD_AGENCY_ISSUE_MATERIAL_DET_SAMPLE B  
      JOIN PRD_AGENCY_ISSUE_MATERIAL_MST_SAMPLE C ON C.MEMO_ID=B.MEMO_ID  
      JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE  
      JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE  
      WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0  AND PRODUCT_CODE_TYPE=1
      GROUP BY B.PRODUCT_CODE,LEFT( C.MEMO_ID,2)  ,C.BIN_ID
      ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  AND A.BIN_ID=B.BIN_ID
      WHERE A.QUANTITY_IN_STOCK < 0)  
   BEGIN  
    SET @NRETVAL = 0  --*** UNSUCCESS  
  
    SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A  JOIN  
				  (
					  SELECT B.PRODUCT_CODE,LEFT( C.MEMO_ID,2) AS DEPT_ID,C.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
					  FROM PRD_AGENCY_ISSUE_MATERIAL_DET_SAMPLE B  
					  JOIN PRD_AGENCY_ISSUE_MATERIAL_MST_SAMPLE C ON C.MEMO_ID=B.MEMO_ID  
					  JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE  
					  JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE  
					  WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0   AND PRODUCT_CODE_TYPE=1
					  GROUP BY B.PRODUCT_CODE,LEFT( C.MEMO_ID,2),C.BIN_ID
				  ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE 
				  AND B.DEPT_ID=A.DEPT_ID  
				  AND B.BIN_ID=A.BIN_ID  
				  WHERE A.QUANTITY_IN_STOCK < 0 '  
   END  
    --PRINT @CCMD  
  END   
				
  END		--		END OF MATRIAL ISSUE SAMPLE
	
  ELSE
	IF @CXNTYPE IN ('REC_SAMPLE')		-- AGENCY_RECEIVE_MATERIAL
	BEGIN
		PRINT 'ENTER AMRC STOCK UPDATE-1'
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = 1
		ELSE
			SET @NOUTFLAG = -1	
									 		

		PRINT 'ENTER AMRC STOCK UPDATE-1'
		
		UPDATE PRD_PMT 
			SET QUANTITY_IN_STOCK =  QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
  			FROM 
			(	SELECT D.PRODUCT_CODE , B.PRODUCT_UID,C.DEPARTMENT_ID,SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_AGENCY_MATERIAL_RECEIPT_DET_SAMPLE B
				JOIN PRD_AGENCY_MATERIAL_RECEIPT_MST_SAMPLE C ON C.MEMO_ID=B.MEMO_ID
				JOIN [PRD_AGENCY_ISSUE_MATERIAL_DET_SAMPLE] DET ON DET.ROW_ID=B.ISSUE_ROW_ID  
                JOIN [PRD_AGENCY_ISSUE_MATERIAL_MST_SAMPLE] MST ON MST.MEMO_ID=DET.MEMO_ID  			
				JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND DET.PRODUCT_CODE_TYPE=2
				AND E.STOCK_NA=0
				GROUP BY D.PRODUCT_CODE,B.PRODUCT_UID,C.DEPARTMENT_ID 
			) B
			WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID 
			AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID 

		SET @NRETVAL = 1		--*** SUCCESS

        PRINT 'ENTER AMRC STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_AGENCY_MATERIAL_RECEIPT_MST_SAMPLE WHERE MEMO_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER AMRC STOCK UPDATE-4'
			
			IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN
						(
							SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PRD_AGENCY_MATERIAL_RECEIPT_DET_SAMPLE B
							JOIN PRD_AGENCY_MATERIAL_RECEIPT_MST_SAMPLE C ON C.MEMO_ID=B.MEMO_ID
							JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
						) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 )
			
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS

				
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK 
				              FROM PRD_PMT A  JOIN
							(
								SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY 
								FROM PRD_AGENCY_MATERIAL_RECEIPT_DET_SAMPLE B
								JOIN PRD_AGENCY_MATERIAL_RECEIPT_MST_SAMPLE C ON C.MEMO_ID=B.MEMO_ID
								JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID
								JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
								WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
								GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID
							) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID
							WHERE A.QUANTITY_IN_STOCK < 0 '
			END
				--PRINT @CCMD
		END	
		
	--------UPDATE FOR READY STOCK-----------	
		PRINT 'ENTER AMRC STOCK UPDATE-2'
		
		UPDATE PMT01106 
			SET QUANTITY_IN_STOCK =  QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
  			FROM 
			(	SELECT D.PRODUCT_CODE ,LEFT(C.MEMO_ID,2) AS DEPT_ID,C.BIN_ID,SUM(B.QUANTITY) AS QUANTITY 
				FROM PRD_AGENCY_MATERIAL_RECEIPT_DET_SAMPLE B
				JOIN PRD_AGENCY_MATERIAL_RECEIPT_MST_SAMPLE C ON C.MEMO_ID=B.MEMO_ID
				JOIN [PRD_AGENCY_ISSUE_MATERIAL_DET_SAMPLE] DET ON DET.ROW_ID=B.ISSUE_ROW_ID  
                JOIN [PRD_AGENCY_ISSUE_MATERIAL_MST_SAMPLE] MST ON MST.MEMO_ID=DET.MEMO_ID  			
				JOIN SKU D ON DET.PRODUCT_CODE = D.PRODUCT_CODE
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND DET.PRODUCT_CODE_TYPE=1
				AND E.STOCK_NA=0
				GROUP BY D.PRODUCT_CODE ,LEFT(C.MEMO_ID,2) ,C.BIN_ID
			) B
			WHERE PMT01106.PRODUCT_CODE = B.PRODUCT_CODE 
			AND PMT01106.DEPT_ID = B.DEPT_ID 
			AND PMT01106.BIN_ID = B.BIN_ID 

		SET @NRETVAL = 1		--*** SUCCESS

        PRINT 'ENTER AMRC STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		
		SELECT @BCANCELLED=CANCELLED FROM PRD_AGENCY_MATERIAL_RECEIPT_MST_SAMPLE WHERE MEMO_ID=@CXNID
		
		 IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1  
		  BEGIN  
		   IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A JOIN  
			  (SELECT DET.PRODUCT_CODE,LEFT( C.MEMO_ID,2) AS DEPT_ID,C.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
			  FROM PRD_AGENCY_MATERIAL_RECEIPT_DET_SAMPLE B  
			  JOIN PRD_AGENCY_MATERIAL_RECEIPT_MST_SAMPLE C ON C.MEMO_ID=B.MEMO_ID 
			  JOIN [PRD_AGENCY_ISSUE_MATERIAL_DET_SAMPLE] DET ON DET.ROW_ID=B.ISSUE_ROW_ID  
              JOIN [PRD_AGENCY_ISSUE_MATERIAL_MST_SAMPLE] MST ON MST.MEMO_ID=DET.MEMO_ID   
			  JOIN SKU D ON DET.PRODUCT_CODE = D.PRODUCT_CODE  
			  JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE  
			  WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0  AND DET.PRODUCT_CODE_TYPE=1
			  GROUP BY DET.PRODUCT_CODE,LEFT( C.MEMO_ID,2)  ,C.BIN_ID
			  ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID  AND A.BIN_ID=B.BIN_ID
			  WHERE A.QUANTITY_IN_STOCK < 0)  
		   BEGIN  
			SET @NRETVAL = 0  --*** UNSUCCESS  
		  
			SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG FROM PMT01106 A  JOIN  
						  (
							  SELECT B.PRODUCT_CODE,LEFT( C.MEMO_ID,2) AS DEPT_ID,C.BIN_ID, SUM(B.QUANTITY) AS QUANTITY   
							  FROM PRD_AGENCY_MATERIAL_RECEIPT_DET_SAMPLE B  
							  JOIN PRD_AGENCY_MATERIAL_RECEIPT_MST_SAMPLE C ON C.MEMO_ID=B.MEMO_ID 
							  JOIN [PRD_AGENCY_ISSUE_MATERIAL_DET_SAMPLE] DET ON DET.ROW_ID=B.ISSUE_ROW_ID  
							  JOIN [PRD_AGENCY_ISSUE_MATERIAL_MST_SAMPLE] MST ON MST.MEMO_ID=DET.MEMO_ID   
							  JOIN SKU D ON DET.PRODUCT_CODE = D.PRODUCT_CODE  
							  JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE 
							  WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0   AND DET.PRODUCT_CODE_TYPE=1
							  GROUP BY B.PRODUCT_CODE,LEFT( C.MEMO_ID,2),C.BIN_ID
						  ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE 
						  AND B.DEPT_ID=A.DEPT_ID  
						  AND B.BIN_ID=A.BIN_ID  
						  WHERE A.QUANTITY_IN_STOCK < 0 '  
		   END  
			--PRINT @CCMD  
		  END   
		
		
	END		--		END OF MATRIAL RECEIVE AGENCY
	
	
	
	ELSE
	IF @CXNTYPE IN ('RMR')  -- READYMADE RECEIVE  
	BEGIN    
	PRINT 'ENTER RMR STOCK UPDATE-1'    
	  IF @NREVERTFLAG = 1    
	   SET @NOUTFLAG = 1    
	  ELSE    
	   SET @NOUTFLAG = -1    
	         
	    
	  PRINT 'ENTER RMR STOCK UPDATE-2'    
	  UPDATE PRD_PMT     
	   SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )    
	   FROM     
	   ( SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY     
		FROM PRD_READY_RECEIVE_DET B    
		JOIN PRD_READY_RECEIVE_MST C ON C.MEMO_ID=B.MEMO_ID    
		JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID    
		JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE    
		WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0    
		GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID    
	   ) B    
	   WHERE PRD_PMT.PRODUCT_UID = B.PRODUCT_UID     
	   AND PRD_PMT.DEPARTMENT_ID = B.DEPARTMENT_ID    
	    
	    
	  SET @NRETVAL = 1  --*** SUCCESS    
	    
			PRINT 'ENTER RMR STOCK UPDATE-3'    
	  --*** CHECKING FOR NEGATIVE STOCK    
	  --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT    
	      
	  SELECT @BCANCELLED=CANCELLED FROM PRD_PS_MST WHERE PS_ID=@CXNID    
	      
	  IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1    
	  BEGIN    
	   PRINT 'ENTER RMR STOCK UPDATE-4'    
	   IF EXISTS ( SELECT A.PRODUCT_UID FROM PRD_PMT A JOIN    
		  (    
		   SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY     
		   FROM PRD_READY_RECEIVE_DET B    
		   JOIN PRD_READY_RECEIVE_MST C ON C.MEMO_ID=B.MEMO_ID    
		   JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID    
		   JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE    
		   WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0    
		   GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID    
		  ) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID    
		  WHERE A.QUANTITY_IN_STOCK < 0)    
	   BEGIN    
		SET @NRETVAL = 0  --*** UNSUCCESS    
	    
		SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK FROM PRD_PMT A  JOIN    
		  (    
		   SELECT B.PRODUCT_UID,C.DEPARTMENT_ID, SUM(B.QUANTITY) AS QUANTITY     
		   FROM PRD_READY_RECEIVE_DET B    
		   JOIN PRD_READY_RECEIVE_MST C ON C.MEMO_ID=B.MEMO_ID    
		   JOIN PRD_SKU D ON B.PRODUCT_UID = D.PRODUCT_UID    
		   JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE    
		   WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0    
		   GROUP BY B.PRODUCT_UID,C.DEPARTMENT_ID    
		  ) B ON B.PRODUCT_UID=A.PRODUCT_UID AND B.DEPARTMENT_ID=A.DEPARTMENT_ID    
		  WHERE A.QUANTITY_IN_STOCK < 0 '    
	   END    
		--PRINT @CCMD    
	  END     
 END  --  END OF READY MADE RECEIVE ENDS     
 
END_PROC:
	
	IF @CCMD<>''
	BEGIN
		DECLARE @NSPID INT
		SET @NSPID=@@SPID
		DELETE FROM NEGPMTMSG WHERE SP_ID=@@SPID
		
		INSERT NEGPMTMSG (PRODUCT_UID,QUANTITY_IN_STOCK)
		EXEC SP_EXECUTESQL @CCMD
		
		
		UPDATE NEGPMTMSG SET SP_ID=@@SPID WHERE SP_ID IS NULL
		
		SET @CCMD=N'SELECT ARTICLE_NO,PARA1_NAME,PARA2_NAME,QUANTITY_IN_STOCK FROM 
					NEGPMTMSG A (NOLOCK)
					JOIN PRD_SKU B (NOLOCK) ON A.PRODUCT_UID=B.PRODUCT_UID
					JOIN ARTICLE C (NOLOCK) ON C.ARTICLE_CODE=B.ARTICLE_CODE
					JOIN PARA1 D (NOLOCK) ON D.PARA1_CODE=B.PARA1_CODE
					JOIN PARA2 E (NOLOCK) ON E.PARA2_CODE=B.PARA2_CODE
					WHERE SP_ID='+LTRIM(RTRIM(STR(@NSPID)))+
			    'UNION ALL
			    SELECT ARTICLE_NO,PARA1_NAME,PARA2_NAME,QUANTITY_IN_STOCK FROM 
					NEGPMTMSG A (NOLOCK)
					JOIN SKU B (NOLOCK) ON A.PRODUCT_UID=B.PRODUCT_CODE
					JOIN ARTICLE C (NOLOCK) ON C.ARTICLE_CODE=B.ARTICLE_CODE
					JOIN PARA1 D (NOLOCK) ON D.PARA1_CODE=B.PARA1_CODE
					JOIN PARA2 E (NOLOCK) ON E.PARA2_CODE=B.PARA2_CODE
					WHERE SP_ID='+LTRIM(RTRIM(STR(@NSPID)))
					
	END

END
