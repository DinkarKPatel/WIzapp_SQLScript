CREATE PROCEDURE SPDB_PENDING_SUMMARY
(
  @CUSTOMER_CODE VARCHAR(20)='',
  @MEMO_DATE DATETIME='',
  @LOC_ID VARCHAR(10)='',
  @BESTIMATEENABLED BIT = 1,
  @NAGEING INT =0,
  @BADVANCES BIT=0,
  @BAPPROVAL BIT=0,
  @BCREDIT_ISSUE BIT=0,
  @BCREDIT_NOTE BIT=0,
  @BGIT BIT=1
)
AS
BEGIN
    
    IF @MEMO_DATE=''
		SET @MEMO_DATE=CONVERT(DATE,GETDATE())
    
    DECLARE @BFLAG BIT,@CDEPTID CHAR(2)
    
    SET @BFLAG=0
    
    IF OBJECT_ID('TEMPDB..#PENDING_SUMMARY','U') IS NOT NULL
		DROP TABLE #PENDING_SUMMARY
	
	SELECT DOC_TYPE=CAST('' AS VARCHAR(50)),TOTAL_MEMOS=CAST(0 AS NUMERIC(18,0)),
	       AMOUNT=CAST(0 AS NUMERIC(18,2)),QUANTITY=CAST(0 AS NUMERIC(18,0))
	INTO #PENDING_SUMMARY
	WHERE 1=2

	IF OBJECT_ID('TEMPDB..#TMPLOC','U') IS NOT NULL
		DROP TABLE #TMPLOC
		
	SELECT DEPT_ID INTO  #TMPLOC FROM LOCATION WHERE 1=2
	
	--1. CREDIT NOTES	
	IF ISNULL(@BCREDIT_NOTE,1)=1	
	BEGIN

		 INSERT #TMPLOC
		 SELECT DEPT_ID FROM LOCATION WHERE INACTIVE=0		
		 		 
		 WHILE @BFLAG=0
		 BEGIN
			 SET @CDEPTID=''
			   	
   			 SELECT TOP 1 @CDEPTID=DEPT_ID FROM #TMPLOC
			   
			 IF ISNULL(@CDEPTID,'')=''
				BREAK
			 
			 DELETE FROM #PENDING_SUMMARY
			 
			 INSERT INTO #PENDING_SUMMARY(DOC_TYPE,TOTAL_MEMOS,AMOUNT,QUANTITY)  		
			 EXEC SP_DSR_PENDING_CREDITNOTES
			  @CUSTOMER_CODE ='',
			  @MEMO_DATE =@MEMO_DATE,
			  @BSHOW =1,
			  @LOC_ID =@CDEPTID,
			  @BCALLEDFROMAPI =1,
			  @NAGEING  =10,
			  @SUMMARY =1
			  
			  INSERT INTO DB_PENDING_SUMMARY (DEPT_ID,DOC_TYPE,TOTAL_MEMOS,AMOUNT,QUANTITY)  		
			  SELECT @CDEPTID AS DEPT_ID,DOC_TYPE,TOTAL_MEMOS,AMOUNT,QUANTITY
			  FROM #PENDING_SUMMARY WHERE ISNULL(TOTAL_MEMOS,0)>0
			  
			  DELETE FROM #TMPLOC WHERE DEPT_ID=@CDEPTID
         END 
     END
     
       --2. CREDIT ISSUE
     IF ISNULL(@BCREDIT_ISSUE,0)=1
     BEGIN
		
		 INSERT #TMPLOC
		 SELECT DEPT_ID FROM LOCATION WHERE INACTIVE=0		
		 
		 WHILE @BFLAG=0
		 BEGIN
			   SET @CDEPTID=''
			   	
   			   SELECT TOP 1 @CDEPTID=DEPT_ID FROM #TMPLOC
			   
			   IF ISNULL(@CDEPTID,'')=''
					BREAK		 
			   DELETE FROM #PENDING_SUMMARY
			   	
			   INSERT INTO #PENDING_SUMMARY(DOC_TYPE,TOTAL_MEMOS,AMOUNT,QUANTITY)    
			   EXEC SP_DSR_PENDING_CREDITISSUE
			   @DTODT=@MEMO_DATE,
			   @CCUSTOMERCODE ='',
			   @NMODE  = 1,
			   @BSHOW =1,
			   @LOC_ID =@CDEPTID,
			   @BCALLEDFROMAPI=1,
			   @NAGEING  =@NAGEING,
			   @NSUMMARY =1 

			  INSERT INTO DB_PENDING_SUMMARY (DEPT_ID,DOC_TYPE,TOTAL_MEMOS,AMOUNT,QUANTITY)  		
			  SELECT @CDEPTID AS DEPT_ID,DOC_TYPE,TOTAL_MEMOS,AMOUNT,QUANTITY
			  FROM #PENDING_SUMMARY WHERE ISNULL(TOTAL_MEMOS,0)>0
			  
			  DELETE FROM #TMPLOC WHERE DEPT_ID=@CDEPTID			   
		 END	   
	 END
	   
	 --3. CREDIT PENDING_ADVANCES
	 IF ISNULL(@BADVANCES,0)=1
	 BEGIN
	
		 INSERT #TMPLOC
		 SELECT DEPT_ID FROM LOCATION WHERE INACTIVE=0		
		 
		 WHILE @BFLAG=0
		 BEGIN
			   SET @CDEPTID=''
			   	
   			   SELECT TOP 1 @CDEPTID=DEPT_ID FROM #TMPLOC
			   
			   IF ISNULL(@CDEPTID,'')=''
					BREAK		 
					
			   DELETE FROM #PENDING_SUMMARY

			   INSERT INTO #PENDING_SUMMARY(DOC_TYPE,TOTAL_MEMOS,AMOUNT,QUANTITY) 
			   EXEC SP_DSR_PENDING_ADVANCES
			   @DTODT =@MEMO_DATE,
			   @CCUSTOMERCODE ='',
			   @BESTIMATEENABLED  = 1,
			   @BSHOW =1,
			   @LOC_ID =@CDEPTID,
			   @BCALLEDFROMAPI =1,
			   @NAGEING  =@NAGEING,
			   @NSUMMARY =1 

			  INSERT INTO DB_PENDING_SUMMARY (DEPT_ID,DOC_TYPE,TOTAL_MEMOS,AMOUNT,QUANTITY)  		
			  SELECT @CDEPTID AS DEPT_ID,DOC_TYPE,TOTAL_MEMOS,AMOUNT,QUANTITY
			  FROM #PENDING_SUMMARY WHERE ISNULL(TOTAL_MEMOS,0)>0
			  
			  DELETE FROM #TMPLOC WHERE DEPT_ID=@CDEPTID			   			   
		  END	   
	 END 
	  
	  --3. CREDIT PENDING_GIT
	  IF ISNULL(@BGIT,0)=1
	  BEGIN
		   INSERT INTO DB_PENDING_SUMMARY (DEPT_ID,DOC_TYPE,TOTAL_MEMOS,AMOUNT,QUANTITY)
		   EXEC SP_GET_PENDING_GIT @BLOCWISESUMMARY=1
      END
      
      IF ISNULL(@BAPPROVAL,0)=1
	  BEGIN	
		 
		 INSERT INTO DB_PENDING_SUMMARY (DEPT_ID,DOC_TYPE,TOTAL_MEMOS,AMOUNT,QUANTITY)
		 SELECT LEFT(A.MEMO_ID,2) AS DEPT_ID,'APPROVAL' AS DOC_TYPE,COUNT(*) AS TOTAL_MEMOS,SUM(A.APP_AMOUNT-
		 ISNULL(B.APR_AMOUNT,0)) AS AMOUNT,SUM(A.APP_QTY-ISNULL(B.APR_QTY,0)) AS QUANTITY
		 FROM 
		 (SELECT A.MEMO_ID,SUM(QUANTITY) AS APP_QTY,SUM(MRP*QUANTITY) AS APP_AMOUNT
		  FROM APD01106 A (NOLOCK)
		  JOIN APM01106 B (NOLOCK) ON A.MEMO_ID=B.MEMO_ID
		  GROUP BY A.MEMO_ID
		  ) A
		  LEFT OUTER JOIN 
		  (SELECT D.MEMO_ID,SUM(A.QUANTITY) AS APR_QTY,SUM(C.MRP*A.QUANTITY) AS APR_AMOUNT
		   FROM APPROVAL_RETURN_DET A (NOLOCK)
		   JOIN APPROVAL_RETURN_MST B (NOLOCK) ON A.MEMO_ID=B.MEMO_ID
		   JOIN APD01106 C (NOLOCK) ON C.ROW_ID=A.APD_ROW_ID
		   JOIN APM01106 D (NOLOCK) ON D.MEMO_ID=C.MEMO_ID
		   WHERE B.CANCELLED=0 AND D.CANCELLED=0
		   GROUP BY D.MEMO_ID
		  ) B ON A.MEMO_ID=B.MEMO_ID   	
		  WHERE (A.APP_QTY-ISNULL(B.APR_QTY,0))>0
		  GROUP BY LEFT(A.MEMO_ID,2)
      END
END
------------ END OF SPDB_PENDING_SUMMARY
