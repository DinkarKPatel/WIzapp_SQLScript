CREATE PROCEDURE SAVETRAN_GV_SCHEME
(
   @NSPID     INT,
   @NUPDATEMODE INT,
   @CSCHEME_CODE CHAR(5),
   @cLocId CHAR(4)=''
)
AS
BEGIN
        DECLARE @CCMD NVARCHAR(MAX),
        @CTEMPMASTERTABLE VARCHAR(100),
        @CTEMPLOCTABLE VARCHAR(100),
        @CTEMPDETAILTABLE VARCHAR(100),
        @CDESTDB VARCHAR(1000),
        @LENABLETEMPDATABASE BIT,
        @CTEMPDBNAME VARCHAR(100),
        @NSTEP INT,
        @CSTEP VARCHAR(10),
        @CERRORMSG NVARCHAR(MAX)
        ,@CMEMONOVAL VARCHAR(50),
        @CKEYFIELD1 VARCHAR(50),
        @CKEYFIELDVAL VARCHAR(50),
        @CLOCATIONID VARCHAR(4),
        @NSAVETRANLOOP BIT,
        @CKEYFIELDVAL1 VARCHAR(50),
        @CMASTERTABLENAME VARCHAR(100),
        @CFINYEAR VARCHAR(10),
        @CMEMONOPREFIX VARCHAR(50),@CMEMONO VARCHAR(20),@NMEMONOLEN NUMERIC(20,0),@CDET_ROW_ID VARCHAR(50),
        @CDETAILTABLENAME VARCHAR(100),@CLOCTABLENAME VARCHAR(100),@CKEYFIELD VARCHAR(50),
        @CTEMPMASTERTABLENAME VARCHAR(1000),@CTEMPDETAILTABLENAME VARCHAR(1000),@CTEMPLOCTABLENAME VARCHAR(1000)
        
    
    BEGIN TRY
    BEGIN TRANSACTION    
 
	SELECT @NSTEP = 0	
	
	
   SET @CDESTDB = DB_NAME()+'.DBO.'  
	SET @CTEMPDBNAME = ''
	
	SET	@NSTEP = 2
	
	SET @CMASTERTABLENAME   = 'GV_SCHEME_MST'        
    SET @CDETAILTABLENAME   = 'GV_SCHEME_1'  
    SET @CLOCTABLENAME      = 'GV_SCHEME_LOCS'
     
SET @CKEYFIELD='SCHEME_CODE'
    
    
    SET @CSTEP = 60  
   SET @CTEMPMASTERTABLENAME  = 'TEMP_'+@CMASTERTABLENAME+'_'+LTRIM(RTRIM(STR(@NSPID)))        
   SET @CTEMPDETAILTABLENAME  = 'TEMP_'+@CDETAILTABLENAME+'_'+LTRIM(RTRIM(STR(@NSPID)))  
   SET @CTEMPLOCTABLENAME    = 'TEMP_'+@CLOCTABLENAME+'_'+LTRIM(RTRIM(STR(@NSPID)))  
   
   SET @CSTEP = 80          
      SET @CTEMPMASTERTABLE   = @CTEMPDBNAME + @CTEMPMASTERTABLENAME        
      SET @CTEMPDETAILTABLE   = @CTEMPDBNAME + @CTEMPDETAILTABLENAME     
      SET @CTEMPLOCTABLE      = @CTEMPDBNAME + @CTEMPLOCTABLENAME
    
   
 
		SET @CLOCATIONId=@cLocId
   

 

   SET  @NMEMONOLEN=7
						
   SET @CSTEP = 130  --GENERATING NEW KEY        
   SET @CCMD=N'SELECT TOP 1 @CKEYFIELDVAL = ISNULL('+@CKEYFIELD+',''LATER'') FROM '+@CTEMPMASTERTABLE+' 
				WHERE ISNULL('+@CKEYFIELD+',''LATER'')=''LATER'''    
   PRINT @CCMD  
   EXEC SP_EXECUTESQL @CCMD,N'@CKEYFIELDVAL VARCHAR(10) OUTPUT',@CKEYFIELDVAL OUTPUT    

   IF (@NUPDATEMODE = 1) 
   BEGIN
        IF ISNULL(@CLOCATIONID,'')=''
		 BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' LOCATION ID CAN NOT BE BLANK  '  
			GOTO END_PROC    
		 END
       
		SET @CSTEP = 150   
		SET @NMEMONOLEN		= 5
		
		SET @CMEMONOPREFIX=@CLOCATIONID
		SET @CFINYEAR ='01'+ DBO.FN_GETFINYEAR(GETDATE())
		
	    EXEC GETNEXTKEY @CMASTERTABLENAME, '', @NMEMONOLEN, @CMEMONOPREFIX,1,
							@CFINYEAR,0, @CMEMONOVAL OUTPUT 
	    BEGIN
			SET @NSTEP =  40 
			SET @CKEYFIELDVAL1 =  REPLICATE('0', 5-LEN(LTRIM(RTRIM(@CMEMONOVAL)))) + LTRIM(RTRIM(@CMEMONOVAL)) 
		END
		
    
    
	   SET @CSTEP=240  
	   
       --UPDATE TEMP MASTER TABLE  
       SET @CCMD = N'UPDATE '+@CTEMPMASTERTABLE+' SET '+@CKEYFIELD+' = '''+@CKEYFIELDVAL1+''''  
       PRINT @CCMD  
       EXEC SP_EXECUTESQL @CCMD      
         
       SET @CSTEP=250  
       --UPDATE TEMP DETAIL TABLE   
       SET @CCMD = N'UPDATE '+@CTEMPDETAILTABLE+' SET '+@CKEYFIELD+' = '''+@CKEYFIELDVAL1+''',  
       ROW_ID = NEWID()'  
       PRINT @CCMD  
       EXEC SP_EXECUTESQL @CCMD  		
				
	      
		SET @CSTEP=280  
        --UPDATE TEMP LOC TABLE  
        SET @CCMD = N'UPDATE '+@CTEMPLOCTABLE+' SET '+@CKEYFIELD+' = '''+@CKEYFIELDVAL1+''''  
        PRINT @CCMD  
        EXEC SP_EXECUTESQL @CCMD  		
				
	SET @CSTEP=400  
       SET @CCMD = N'UPDATE '+@CTEMPDETAILTABLE+ ' SET ROW_ID = NEWID()   
       WHERE LEFT(ROW_ID,5) = ''LATER'' '    
       PRINT @CCMD  
       EXEC SP_EXECUTESQL @CCMD
     END
     ELSE
      BEGIN
       SET @CSTEP=400 
       
       SET @CCMD=N'SELECT TOP 1 @CKEYFIELDVAL1 = '+@CKEYFIELD+' FROM '+@CTEMPMASTERTABLE+'' 
       PRINT @CCMD  
       EXEC SP_EXECUTESQL @CCMD,N'@CKEYFIELDVAL1 VARCHAR(10) OUTPUT',@CKEYFIELDVAL1 OUTPUT    

        
       SET @CCMD = N'UPDATE '+@CTEMPDETAILTABLE+ ' SET ROW_ID = NEWID(),'+@CKEYFIELD+' = '''+@CKEYFIELDVAL1+'''   
       WHERE LEFT(ROW_ID,5) = ''LATER'' '    
       PRINT @CCMD  
       EXEC SP_EXECUTESQL @CCMD
       
       
       SET @CCMD = N'UPDATE '+@CTEMPLOCTABLE+ ' SET '+@CKEYFIELD+' = '''+@CKEYFIELDVAL1+''''    
       PRINT @CCMD  
       EXEC SP_EXECUTESQL @CCMD
       
       SET @CCMD=N'DELETE FROM '+@CLOCTABLENAME+' WHERE '+@CKEYFIELD+' = '''+@CKEYFIELDVAL1+'''' 
       PRINT @CCMD
       EXEC SP_EXECUTESQL @CCMD
      
      END
    
       
       
IF((@NUPDATEMODE=1 ) OR (@NUPDATEMODE=2 ) ) 
 
     BEGIN
            SET @CSTEP=150  -- UPDATE MASTER
            BEGIN
            	EXEC UPDATEMASTERXN   
				@CSOURCEDB = @CTEMPDBNAME,  
				@CSOURCETABLE = @CTEMPMASTERTABLENAME,  
				@CDESTDB = @CDESTDB,  
				@CDESTTABLE = @CMASTERTABLENAME,  
				@CKEYFIELD1 = @CKEYFIELD,  
				@CKEYFIELD2 = '',  
				@CKEYFIELD3 = '',  
				@LINSERTONLY= 0,  
				@CFILTERCONDITION = '',  
				@LUPDATEXNS = 0,  
				@CXNTYPE = '',  
				@LUPDATEONLY = 0,  
				@CUSERID = '',  
				@BALWAYSUPDATE = 1  
            END
		      
		    SET @CSTEP=760   -- UPDATE DETAILS
		     
		    EXEC UPDATEMASTERXN  
		     @CSOURCEDB = @CTEMPDBNAME,  
		     @CSOURCETABLE = @CTEMPDETAILTABLENAME ,  
		     @CDESTDB = @CDESTDB,  
		     @CDESTTABLE = @CDETAILTABLENAME,  
		     @CKEYFIELD1 = @CKEYFIELD,  
		     @CKEYFIELD2 = 'ROW_ID',  
		     @CKEYFIELD3 = '',  
		     @LINSERTONLY= 0,  
		     @CFILTERCONDITION = '',  
		     @LUPDATEXNS = 0,  
		     @CXNTYPE = '',  
		     @LUPDATEONLY = 0,  
		     @CUSERID = '',  
		     @BALWAYSUPDATE = 1 

		    SET @CSTEP=500  -- UPDATE LOCS
		    
          BEGIN
	
				EXEC UPDATEMASTERXN   
				@CSOURCEDB = @CTEMPDBNAME,  
				@CSOURCETABLE = @CTEMPLOCTABLENAME ,  
				@CDESTDB = @CDESTDB,  
				@CDESTTABLE = @CLOCTABLENAME,  
				@CKEYFIELD1 = @CKEYFIELD,  
				@CKEYFIELD2 = 'DEPT_ID',  
				@CKEYFIELD3 = '',  
				@LINSERTONLY= 1,  
				@CFILTERCONDITION = '',  
				@LUPDATEXNS = 0,  
				@CXNTYPE = '',  
				@LUPDATEONLY = 0,  
				@CUSERID = '',  
				@BALWAYSUPDATE = 0 
        END		    
		    
		    	
    END
    END TRY  
    BEGIN CATCH  
     SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()  
    END CATCH  
END_PROC:
 IF @@TRANCOUNT>0  
	 BEGIN  
	    
	  IF ISNULL(@CERRORMSG,'')='' 
	  BEGIN 
	   COMMIT TRANSACTION  
	  END  
	  ELSE  
	   ROLLBACK  
	 END  
	  
    SELECT @CERRORMSG AS ERRMSG,@CKEYFIELDVAL1 AS SCHEME_CODE 
  
END	
  ----------------------------------------------------- END OF PROCEDURE SAVETRAN_GV_SCHEME
