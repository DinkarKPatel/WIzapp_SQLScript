CREATE PROCEDURE SP3S_SYNCH_UPLOADDATA_RPS_OPT
(
    @NSPID VARCHAR(50)
   ,@CERRMSG VARCHAR(1000) OUTPUT
)
--WITH ENCRYPTION
AS
SET NOCOUNT ON
BEGIN
	/*
		208_2014_01_13 : THIS PROCEDURE WILL MERGE DATA FROM TEMPORARY TABLE TO ACTUAL TABLE.
						 TABLE NAMES AND ITS MERGING ORDER WILL BE FIXED AND WILL BE DEFINED HERE.	
						 
	*/

DECLARE @CSTEP VARCHAR(100),@DTSQL NVARCHAR(MAX),@NMERGE_ORDER NUMERIC(5)
	   ,@CTABLENAME VARCHAR(200),@CTABLE_SUFFIX VARCHAR(50),@CKEYFIELD VARCHAR(200),@CDEL_ID VARCHAR(50),@CTMP_TABLENAME VARCHAR(200),@LINSERTONLY VARCHAR(1)
	   ,@CFILTERCONDITION VARCHAR(200),@CFILTERCONDITION2 VARCHAR(500),@LUPDATEONLY VARCHAR(1),@BALWAYSUPDATE VARCHAR(1),@FDEL CHAR(1)
	   ,@CERRMSGOUT VARCHAR(1000),@CTABLESSTR VARCHAR(MAX),@CMIRRORINGENABLED VARCHAR(5)
	   ,@CCURDEPTID VARCHAR(5),@CTEMPMASTERTABLE VARCHAR(200),@CTEMPDETAILTABLE1 VARCHAR(200)
	   ,@CTEMPDETAILTABLE2 VARCHAR(200),@CTEMPDETAILTABLE3 VARCHAR(200)
	   ,@CTEMPPAYMODETABLE VARCHAR(200),@CTEMPTABLE VARCHAR(100),@CDONOTRESETPOSTEDINAC VARCHAR(1)
	   ,@BADDMODE BIT,@CCUTOFFDATE VARCHAR(20),@CWHERECLAUSE VARCHAR(2000),@CMEMONOLEN VARCHAR(5),@NMEMONOLEN INT
	   ,@DMINMEMODT DATETIME,@DMAXMEMODT DATETIME,@CFINYEAR VARCHAR(5),@CMEMOPREFIX VARCHAR(10)
	   ,@CMINMEMONO VARCHAR(20),@CMAXMEMONO VARCHAR(20),@CSOURCEDB VARCHAR(200),@CMERGEDB VARCHAR(200)
	   ,@BMSTINSERTONLY BIT,@BSERIESMISMATCHFOUND BIT,@CMEMOID VARCHAR(40),@CPREVMEMONO VARCHAR(20)
	   ,@NPREVMEMONO NUMERIC(5,0),@NLENVALUE INT,@CPREVMEMONOSEARCH VARCHAR(20),@CMEMOIDSEARCH VARCHAR(40)
	   ,@CRETPRODUCTCODE VARCHAR(50),@NVERSIONNO INT,@CJOINSTR VARCHAR(MAX),@cMissingRowId VARCHAR(50)
	   ,@cUpdatestr VARCHAR(2000),@cLocId varchar(5)
	

BEGIN TRY
	
	
	SET @CSTEP=5
	EXEC SP_CHKXNSAVELOG 'RPSMERGE',@CSTEP,0,@CMEMOID,'',1

	SELECT @CSOURCEDB='',@CMERGEDB='',@BMSTINSERTONLY=1,@BSERIESMISMATCHFOUND=0
	
	SET @CSTEP=10
	EXEC SP_CHKXNSAVELOG 'RPSMERGE',@CSTEP,0,@CMEMOID,'',1

	SET @NMEMONOLEN=10

	
    SELECT TOP 1 @CDONOTRESETPOSTEDINAC=VALUE FROM CONFIG WHERE CONFIG_OPTION='DONOT_RESET_ACCOUNTS_POSTEDINAC'
    
    SET @CDONOTRESETPOSTEDINAC=ISNULL(@CDONOTRESETPOSTEDINAC,'')
		

	SELECT @CTEMPMASTERTABLE=@CSOURCEDB+'RPS_RPS_MST_upload',
		   @CTEMPDETAILTABLE1=@CSOURCEDB+'RPS_RPS_DET_upload'
		
	IF EXISTS (SELECT TOP 1 tablename FROM savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@NSPID )
		DELETE FROM savetran_updcols_updatestr WITH (ROWLOCK) WHERE sp_id=@NSPID

	INSERT savetran_updcols_updatestr (sp_id,tablename,updatestr)
	SELECT @NSPID as sp_id,tablename,'' from mirrorxnsinfo (NOLOCK)
	WHERE tablename IN ('rps_mst','rps_det')

	SET @CSTEP=15
	EXEC SP_CHKXNSAVELOG 'RPSMERGE',@CSTEP,0,@CMEMOID,'',1

	DECLARE @DFREEZINGDATE DATETIME	
	EXEC SP3S_GETDATA_FREEZING_DATE 'RPS',@DFREEZINGDATE OUTPUT
		     

LBLSTART:
    BEGIN TRANSACTION 	
	SET @CSTEP=20
	EXEC SP_CHKXNSAVELOG 'RPSMERGE',@CSTEP,0,@CMEMOID,'',1

    SELECT @CMEMOID='',@NVERSIONNO=0

    SELECT TOP 1 @CMEMOID = CM_ID ,@cLocId = B.location_Code 
    FROM RPS_RPS_MST_UPLOAD B (NOLOCK)
    WHERE  CM_DT>@DFREEZINGDATE
    AND SP_ID=@NSPID 
    
    IF ISNULL(@CMEMOID,'')=''
		GOTO EXIT_PROC

		
		
    SET @CFILTERCONDITION = 'B.SP_ID='''+@NSPID +''''
	
	SET @CSTEP=30
	EXEC SP_CHKXNSAVELOG 'RPSMERGE',@CSTEP,0,@CMEMOID,'',1

	SET @CMEMOIDSEARCH=''
	SELECT TOP 1 @CMEMOIDSEARCH=A.CM_ID FROM RPS_MST A (NOLOCK) WHERE A.CM_ID=@CMEMOID
	
	IF ISNULL(@CMEMOIDSEARCH,'')<>''
		SET @BADDMODE=0
	ELSE
		SET @BADDMODE=1

	

--LBLMERGE:
	---DELETING EXISTING RECORD IF BILL COMES AGAIN FOR MERGING
	
	--SELECT @CTEMPMASTERTABLE,@CFILTERCONDITION
	IF @BADDMODE=0
		PRINT 'ADDMODE:N'
	ELSE
		PRINT 'ADDMODE:Y'	
	
	IF @BADDMODE=0
	BEGIN	
		SET @CSTEP=34
		EXEC SP_CHKXNSAVELOG 'RPSMERGE',@CSTEP,0,@CMEMOID,'',1

		EXEC SP3S_VERIFY_RPSDATA_merge_CHANGES
		@NSPID =@NSPID,
		@cMemoId=@cMemoId
		
		SET @CSTEP=38
		EXEC SP_CHKXNSAVELOG 'RPSMERGE',@CSTEP,0,@CMEMOID,'',1
		SELECT TOP 1 @cMissingRowId=a.row_id FROM RPS_det A (NOLOCK) 
		LEFT JOIN 
		(SELECT row_id FROM RPS_RPS_det_UPLOAD B (NOLOCK) WHERE SP_ID=@NSPID) b
		ON A.row_ID =B.row_ID WHERE A.cm_id =@CMEMOID AND b.row_id IS NULL

		IF ISNULL(@cMissingRowId,'')<>''
		BEGIN		
			SET @CSTEP=40
			EXEC SP_CHKXNSAVELOG 'RPSMERGE',@CSTEP,0,@CMEMOID,'',1

			DELETE A FROM RPS_DET A (NOLOCK) LEFT JOIN 
			(SELECT row_id FROM RPS_RPS_det_UPLOAD B (NOLOCK) WHERE SP_ID=@NSPID ) b
			ON A.row_ID =B.row_ID WHERE A.cm_id =@CMEMOID AND b.row_id IS NULL

		END
	END
	
	---UPDATING TRANSACTION TABLES
	SET  @CSTEP=50
	EXEC SP_CHKXNSAVELOG 'RPSMERGE',@CSTEP,0,@CMEMOID,'',1

	SET @CTABLENAME='RPS_MST'
	SET @CTMP_TABLENAME='RPS_RPS_MST_UPLOAD'
	SET @CKEYFIELD='CM_ID'
	
	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@NSPID AND tablename='rps_mst'
	SET @LUPDATEONLY = (CASE WHEN @BADDMODE=0 THEN 1 ELSE 0 END)	


	SET  @CSTEP=60
	EXEC SP_CHKXNSAVELOG 'RPSMERGE',@CSTEP,0,@CMEMOID,'',1

	EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
							  ,@BALWAYSUPDATE=1,@lUpdateXns=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1  

							  
	SET @CTABLENAME='RPS_DET'
	SET @CTMP_TABLENAME='RPS_RPS_DET_UPLOAD'
	SET @CKEYFIELD='ROW_ID'
	 
	SELECT @cMissingRowId='',@lUpdateonly=0
	IF @BADDMODE=0
	BEGIN
		SET @CSTEP=65
		EXEC SP_CHKXNSAVELOG 'RPSMERGE',@CSTEP,0,@CMEMOID,'',1

		SELECT TOP 1 @cMissingRowId=b.row_id FROM 
		(SELECT row_id  FROM RPS_RPS_DET_UPLOAD (NOLOCK) WHERE SP_ID=(@NSPID+@cLocId)) A
		RIGHT OUTER JOIN 
		(SELECT row_id FROM RPS_RPS_DET_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID) b ON 
		a.row_id=b.row_id WHERE a.row_id IS NULL


		IF ISNULL(@cMissingRowId,'')='' 
			SET @lUpdateonly=1
	END

	SET @CSTEP=60
    EXEC SP_CHKXNSAVELOG 'RPSMERGE',@CSTEP,0,@CMEMOID,'',1


	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@NSPID  AND  tablename='rps_det'
	
    EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@lUpdateonly
							  ,@BALWAYSUPDATE=1,@lUpdateXns=@BADDMODE,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 



	SET @CSTEP=70 
	EXEC SP_CHKXNSAVELOG 'RPSMERGE',@CSTEP,0,@CMEMOID,'',1

	EXEC SP3S_MERGE_LOCPMT  
	@cTempTable='RPS_PMT01106_UPLOAD',  
	@cMemoIdCol='SP_ID',  
	@cMemoId =@NSPID

	IF ISNULL(@cErrmsg,'')=''
	BEGIN
		SET @CSTEP=75
		EXEC SP_CHKXNSAVELOG 'RPSMERGE',@CSTEP,0,@CMEMOID,'',1

		EXEC SP3S_VALIDATE_DATAMERGED_SINGLECHANNEL
		@cMasterTable='rps_mst',
		@cDetTable='rps_det',
		@cMemoIdCol='cm_id',
		@cMemoId=@cMemoId,
		@cUploadTable='rps_rps_mst_upload',
		@nSpId=@nSpId,
		@cErrormsg=@CERRMSG OUTPUT

		IF ISNULL(@cErrmsg,'')=''
			GOTO EXIT_PROC
    END
	    
    SET @CSTEP=80
    
    
		
END TRY
BEGIN CATCH
	SET @CERRMSG='P:SP3S_SYNCH_UPLOADDATA_RPS_OPT, MEMO ID :'+@CMEMOID+' STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO EXIT_PROC
END CATCH

EXIT_PROC:

	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRMSG,'')='' AND @BSERIESMISMATCHFOUND<>1
			COMMIT
		ELSE
			ROLLBACK
    END

	EXEC SP3S_DELETE_UPLOAD_RPSMERGE_TABLES @NSPID, @cMemoId 	
END	
---END OF PROCEDURE - SP3S_SYNCH_UPLOADDATA_RPS_OPT