CREATE PROCEDURE SP3S_MD_POS_ANALYSIS
(
	  @DPROCESS DATETIME=''	
	 ,@CREPID VARCHAR(10)
	 ,@BREPROCESS BIT=0
	 ,@BPROCESSONLY BIT=0 /*UNMERGED*/
)	
--WITH ENCRYPTION
AS
/*
208: 
CREATION DATE:
DESCRIPTION:
	THIS PROCEDURE PREPARES REPORT DATA FOR HO'S MANAGEMENT DASHBOARD'S POS ANALYSIS METRICS FOR ALL ACTIVE LOCATIONS.
	METRICS:
	1. SALE ANALYSIS WITH REPECT TO TARGET ASSIGNED TO LOCATIONS
*/
BEGIN
	DECLARE @CCURFINYEAR VARCHAR(10),@DFROMDT DATETIME,@CERRORMSG VARCHAR(1000),@CERRORMSGOUT VARCHAR(1000)
		   ,@CPREFINYEAR VARCHAR(10),@DPREFROMDT DATETIME,@DPRECURRENTDT DATETIME
		   ,@CSTEP VARCHAR(5),@NDIVFACTOR NUMERIC(18,4),@CDIVFACTOR VARCHAR(18),@NCURMONTH NUMERIC(2)
		   ,@NPREMONTH NUMERIC(2),@NCURYEAR NUMERIC(4),@NPREYEAR NUMERIC(4)
		   ,@NEXPENSES NUMERIC(18,4),@NTOTALSALE NUMERIC(18,4),@NTOTALGM NUMERIC(18,4),@NTOTALSALEDAYS NUMERIC(4),@NDAYS NUMERIC(3)
		   ,@CDSID VARCHAR(50),@CEXID VARCHAR(50),@CSAID VARCHAR(50),@CADID VARCHAR(50),@CAGEID VARCHAR(50),@CPROCESSID VARCHAR(50),@CREPORT_TYPE NUMERIC(1)
		   ,@CTSQL NVARCHAR(MAX),@CFILTER VARCHAR(1000),@CALERT VARCHAR(100)
	BEGIN TRY	   
	--DATE CONSIDERED FOR DATA PROCESSING	   
	SET @CSTEP=10
	SET @CREPORT_TYPE=1
	IF @DPROCESS=''
		SELECT @DPROCESS=DBO.FN3S_GETDBCONFIG('RUN_DATE')
	SET @CSTEP=20
		SELECT @NDIVFACTOR=DBO.FN3S_GETDBCONFIG('MGMT_DIV_FACTOR')
	
	SET @CSTEP=30
	SET @DPROCESS=DATEADD(DD,0,DATEDIFF(DD,0,@DPROCESS))	
	SET @CSTEP=40
	 IF ISNULL(@DPROCESS,'')=''
	 BEGIN
			SET @CERRORMSG='PLEASE DEFINE DATE OF PROCESSING....'
			SELECT @CERRORMSG
			RETURN
	 END
	 
	 SET @CSTEP=50
	 SET @CCURFINYEAR='01'+DBO.FN_GETFINYEAR(@DPROCESS)  
	 SET @NCURMONTH=DATEPART(MM,@DPROCESS)  
	 SET @NCURYEAR=DATEPART(YY,@DPROCESS)   
	 SET @NPREYEAR=@NCURYEAR-1
	   
	 SET @CPREFINYEAR=@CCURFINYEAR-1  
	 SET @CPREFINYEAR='0'+@CPREFINYEAR  
	 SET @NPREMONTH=(CASE WHEN @NCURMONTH=1 THEN 12 ELSE @NCURMONTH-1 END)  
	
	SET @CSTEP=60
	--GETTING STARTING DATE FOR THE CURRENT FIN YEAR
	SELECT @DFROMDT=DBO.FN_GETFINYEARDATE(@CCURFINYEAR,1)
	SELECT @DPRECURRENTDT=DATEADD(YY,-1,@DPROCESS)
	SELECT @DPREFROMDT=DATEADD(YY,-1,@DFROMDT)
	
	SET @CSTEP=70
	SET @NDAYS=DATEDIFF(DD,@DFROMDT,@DPROCESS)
		
		SET @CSTEP=90
		SELECT @CPROCESSID=PROCESS_ID FROM POS_ANALYSIS WHERE PROCESS_DT=@DPROCESS	
		
		SET @CSTEP=100
		IF @BREPROCESS=1 AND ISNULL(@CPROCESSID,'')<>''
		BEGIN
			SET @CSTEP=110
			DELETE POS_ANALYSIS WHERE PROCESS_ID=@CPROCESSID
			
			SET @CSTEP=120
			EXEC SP3S_PROCESS_PA @DPROCESS,@BREPROCESS,@CPROCESSID OUTPUT,@CERRORMSGOUT OUTPUT
			
			SET @CSTEP=130
			IF ISNULL(@CERRORMSGOUT,'')<>''
			BEGIN
				SET @CERRORMSG=@CERRORMSGOUT
			END 
			
			GOTO EXIT_PROC
		END
		ELSE IF @BREPROCESS=0 AND ISNULL(@CPROCESSID,'')=''
		BEGIN
			SET @CSTEP=140
			SET @CALERT='POS ANALYSIS IS NOT BUILT FOR THIS DATE!! WOULD YOU LIKE TO PROCESS IT NOW?'
			SELECT @CALERT AS ALERT
			GOTO EXIT_PROC
		END
		ELSE IF ISNULL(@CPROCESSID,'')<>'' AND @BREPROCESS=0
			GOTO EXIT_PROC
		ELSE IF ISNULL(@CPROCESSID,'')='' AND @BREPROCESS=1
		BEGIN
			SET @CSTEP=150
			EXEC SP3S_PROCESS_PA @DPROCESS,0,@CPROCESSID OUTPUT,@CERRORMSGOUT OUTPUT
			IF ISNULL(@CERRORMSGOUT,'')<>''
			BEGIN
				SET @CERRORMSG=@CERRORMSGOUT
			END 
			GOTO EXIT_PROC
		END	
		
	END TRY
	BEGIN CATCH
		SET @CERRORMSG='P:SP3S_MD_POS_ANALYSIS,STEP: '+@CSTEP+', MESSAGE : '+ERROR_MESSAGE()
	END CATCH		   
	
EXIT_PROC:
	IF ISNULL(@CERRORMSG,'')<>''
		SELECT @CERRORMSG AS ERRMSG
	ELSE
	BEGIN
		IF ISNULL(@CPROCESSID,'')<>''
		BEGIN
			SELECT @CFILTER=FILTER FROM MGMT_REPS WHERE REP_ID=@CREPID AND REPORT_TYPE=@CREPORT_TYPE
			SET @CFILTER=ISNULL(@CFILTER,'')
		
		SET @CDIVFACTOR=@NDIVFACTOR			
		SET @CTSQL=N'SELECT PA.DEPT_ID,PA.DEPT_NAME,PA.DEPT_AREA,PA.DEPT_CITY,PA.DEPT_STATE,PA.DEPT_REGION
			,CONVERT(NUMERIC(18),ISNULL(PA.CM_TARGET,0)/'+@CDIVFACTOR+') AS CM_TARGET,CONVERT(NUMERIC(18),ISNULL(PA.CM_SALE,0)/'+@CDIVFACTOR+') AS CM_SALE,CONVERT(NUMERIC(18),ISNULL(PA.CM_ACHIEVEDP,0)) AS CM_ACHIEVEDP
			,CONVERT(NUMERIC(18),ISNULL(PA.CM_CNTRP,0)) AS CM_CNTRP
			,DENSE_RANK() OVER(ORDER BY ISNULL(PA.CM_CNTRP,0) DESC) AS CM_RANK
			,CONVERT(NUMERIC(18),ISNULL(PA.CM_GM,0)/'+@CDIVFACTOR+') AS CM_GM
			,CONVERT(NUMERIC(18),ISNULL(PA.CM_GM_CNTRP,0)) AS CM_GM_CNTRP
			,DENSE_RANK() OVER(ORDER BY ISNULL(PA.CM_GM_CNTRP,0) DESC) AS CM_GM_RANK
			,CONVERT(NUMERIC(18),ISNULL(PA.CUM_TARGET,0)/'+@CDIVFACTOR+') AS CUM_TARGET,CONVERT(NUMERIC(18),ISNULL(PA.CUM_SALE,0)/'+@CDIVFACTOR+') AS CUM_SALE,CONVERT(NUMERIC(18),ISNULL(PA.CUM_ACHIEVEDP,0)) AS CUM_ACHIEVEDP
			,CONVERT(NUMERIC(18),ISNULL(PA.CUM_CNTRP,0)) AS CUM_CNTRP
			,DENSE_RANK() OVER(ORDER BY ISNULL(PA.CUM_CNTRP,0) DESC) AS CUM_RANK
			,CONVERT(NUMERIC(18),ISNULL(PA.CUM_GM,0)/'+@CDIVFACTOR+') AS CUM_GM
			,CONVERT(NUMERIC(18),ISNULL(PA.CUM_GM_CNTRP,0)) AS CUM_GM_CNTRP
			,DENSE_RANK() OVER(ORDER BY ISNULL(PA.CUM_GM_CNTRP,0) DESC) AS CUM_GM_RANK
			,CONVERT(NUMERIC(18),ISNULL(PA.CUM_PSPD,0)/'+@CDIVFACTOR+') AS PSPD
			,DENSE_RANK() OVER(ORDER BY ISNULL(PA.CUM_PSPD,0) DESC) AS PSPD_RANK
			,CONVERT(NUMERIC(18),ISNULL(PA.CUM_TPY,0)/'+@CDIVFACTOR+') AS TPY
			,DENSE_RANK() OVER(ORDER BY ISNULL(PA.CUM_TPY,0) DESC) AS TPY_RANK
			,CONVERT(NUMERIC(18),ISNULL(PA.CUM_ADI,0)/'+@CDIVFACTOR+') AS ADI
			,DENSE_RANK() OVER(ORDER BY ISNULL(PA.CUM_ADI,0) DESC) AS ADI_RANK
			,CONVERT(NUMERIC(18),ISNULL(PA.CUM_GMROI,0)) AS GMROI
			,DENSE_RANK() OVER(ORDER BY ISNULL(PA.CUM_GMROI,0) DESC) AS GMROI_RANK
			,CONVERT(NUMERIC(18),ISNULL(PA.CUM_EXPENSE,0)/'+@CDIVFACTOR+') AS EXPENSE
			,CONVERT(NUMERIC(18),ISNULL(PA.CUM_EXPENSE_CNTRP,0)) AS EXPENSE_CNTRP
			,DENSE_RANK() OVER(ORDER BY ISNULL(PA.CUM_EXPENSE,0) DESC) AS EXPENSE_RANK
			,CONVERT(NUMERIC(18),ISNULL(PA.CUM_EXPENSE_PSF,0)/'+@CDIVFACTOR+') AS EXPENSE_PSF
			,CONVERT(NUMERIC(18),ISNULL(PA.CUM_DISC_SALE_RT,0)) AS DISC_SALE_RT
			,CONVERT(NUMERIC(18),ISNULL(PA.CUM_AVG_BILL,0)/'+@CDIVFACTOR+') AS AVG_BILL
			,CONVERT(NUMERIC(18),ISNULL(PA.CUM_DOS,0)) AS DOS
			,CONVERT(NUMERIC(18),ISNULL(PA.CUM_AGE1,0)/'+@CDIVFACTOR+') AS AGE1
			,CONVERT(NUMERIC(18),ISNULL(PA.CUM_AGE2,0)/'+@CDIVFACTOR+') AS AGE2
			,CONVERT(NUMERIC(18),ISNULL(PA.CUM_AGE3,0)/'+@CDIVFACTOR+') AS AGE3
			,CONVERT(NUMERIC(18),ISNULL(PA.CUM_AGE4,0)/'+@CDIVFACTOR+') AS AGE4
			FROM POS_ANALYSIS PA (NOLOCK)
			JOIN LOC_VIEW (NOLOCK) ON PA.DEPT_ID=LOC_VIEW.DEPT_ID
			WHERE PROCESS_ID='''+@CPROCESSID+''''+(CASE WHEN @CFILTER='' THEN '' ELSE ' AND'+@CFILTER END)
			PRINT @CTSQL
			IF @BPROCESSONLY=0
				EXEC SP_EXECUTESQL @CTSQL /*UNMERGED*/
			
		END
	END		
	
END
---END OF PROCEDURE - SP3S_MD_POS_ANALYSIS
