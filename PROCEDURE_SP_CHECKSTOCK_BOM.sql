create PROCEDURE SP_CHECKSTOCK_BOM    
 @CPRODUCTCODE VARCHAR(50),    
 @BDONOTCHECKSTOCK BIT=0,    
 @CDEPT_ID  VARCHAR(7)='',  /*THIS IS BIN_ID,DONOT GET CONFUSED BY PARAMETER NAME.*/
 @CWHERE VARCHAR(40)='',  
 @NQTY NUMERIC(14,2)=0,  
 @CUSERCODE VARCHAR(10),
 @NRATEREVISION INT =0,
 @CXNTYPE VARCHAR(5)='',
 @NMRPWS NUMERIC(1)=1,
 @BESTIMATEMODE BIT=0,
 @XN_ITEM_TYPE NUMERIC(2,0)=1,
 @cLOC varchar(5)='',
 @corder_id varchar(50)=''

-- WITH ENCRYPTION
AS    
BEGIN    
	 DECLARE @NSTKQTY NUMERIC(10,3),@CPRDCODE VARCHAR(100),@CLOC_ID  VARCHAR(5),@CDONOTCHECKSTOCK VARCHAR(5),@BSTOCKNA BIT,
	  @NITEMTYPE NUMERIC(2,0),@nCodingscheme int,@CCMD nvarchar(max)
	        
	        
	 IF @cLOC='' 
	   	 SELECT TOP 1 @CLOC_ID=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
     ELSE
	   SELECT @CLOC_ID= @cLOC
	   
	   IF @CXNTYPE='WSR'
	   SET @BDONOTCHECKSTOCK=1
	            


	 
	 SELECT @NITEMTYPE=ITEM_TYPE,@nCodingscheme=ISNULL(barcode_coding_scheme,b.coding_scheme) FROM SKU A(NOLOCK)
	 JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE=B.ARTICLE_CODE
	 JOIN SECTIOND C(NOLOCK) ON C.SUB_SECTION_CODE=B.SUB_SECTION_CODE
	 JOIN SECTIONM D(NOLOCK) ON D.SECTION_CODE=C.SECTION_CODE
	 WHERE PRODUCT_CODE=@CPRODUCTCODE
	 
	 IF ISNULL(@NITEMTYPE,0)>0 
	 BEGIN
	      IF  @XN_ITEM_TYPE<>@NITEMTYPE
	      BEGIN
	         SELECT CASE WHEN  @XN_ITEM_TYPE=1 AND @NITEMTYPE=2 THEN 'CONSUMABLE ITEM NOT ALLOWED IN INVENTORY TRANSCTION'
	                     WHEN  @XN_ITEM_TYPE=1 AND @NITEMTYPE=3 THEN 'ASSESTS    ITEM NOT ALLOWED IN INVENTORY TRANSCTION'
	                     WHEN  @XN_ITEM_TYPE=1 AND @NITEMTYPE=4 THEN 'SERVICE    ITEM NOT ALLOWED IN INVENTORY TRANSCTION'
	                     
	                     WHEN  @XN_ITEM_TYPE=2 AND @NITEMTYPE=1 THEN 'INVENTORY  ITEM NOT ALLOWED IN CONSUMBLE TRANSCTION'
	                     WHEN  @XN_ITEM_TYPE=2 AND @NITEMTYPE=3 THEN 'ASSESTS    ITEM NOT ALLOWED IN CONSUMBLE TRANSCTION'
	                     WHEN  @XN_ITEM_TYPE=2 AND @NITEMTYPE=4 THEN 'SERVICE    ITEM NOT ALLOWED IN CONSUMBLE TRANSCTION'
	                     
	                     WHEN  @XN_ITEM_TYPE=3 AND @NITEMTYPE=1 THEN 'INVENTORY  ITEM NOT ALLOWED IN ASSESTS   TRANSCTION'
	                     WHEN  @XN_ITEM_TYPE=3 AND @NITEMTYPE=2 THEN 'CONSUMABLE ITEM NOT ALLOWED IN ASSESTS   TRANSCTION'
	                     WHEN  @XN_ITEM_TYPE=3 AND @NITEMTYPE=4 THEN 'SERVICE    ITEM NOT ALLOWED IN ASSESTS   TRANSCTION'
	                     
	                     
	                     WHEN  @XN_ITEM_TYPE=4 AND @NITEMTYPE=1 THEN 'INVENTORY  ITEM NOT ALLOWED IN SERVICE   TRANSCTION'
	                     WHEN  @XN_ITEM_TYPE=4 AND @NITEMTYPE=2 THEN 'CONSUMBLE  ITEM NOT ALLOWED IN SERVICE   TRANSCTION'
	                     WHEN  @XN_ITEM_TYPE=4 AND @NITEMTYPE=3 THEN 'ASSESTS    ITEM NOT ALLOWED IN SERVICE   TRANSCTION '
	          END      
		      RETURN
	      END
	 END
	 
	 --GET THE PRODUCT_CODE FROM EAN_SYNC,IF EXISTS ELSE GET FROM SKU
	 IF @BESTIMATEMODE<>1  
		SELECT TOP 1 @CPRDCODE=PRODUCT_CODE FROM EAN_SYNC (NOLOCK) WHERE EAN=@CPRODUCTCODE   
	 ELSE	
		SELECT TOP 1 @CPRDCODE=A.PRODUCT_CODE FROM EAN_SYNC A (NOLOCK) JOIN SKU (NOLOCK) 
		ON A.PRODUCT_CODE=SKU.PRODUCT_CODE WHERE EAN=@CPRODUCTCODE AND ER_FLAG=2  	  	

	 DECLARE @CALLOWWSLINACTIVESTOCKNAARTICLES VARCHAR(2)
	 SELECT TOP 1 @CALLOWWSLINACTIVESTOCKNAARTICLES= VALUE FROM CONFIG (NOLOCK) WHERE 
	 CONFIG_OPTION='ALLOW_WSL_INACTIVESTOCKNA_ARTICLES'
	 	 
	 IF @CPRDCODE IS NULL  
	 BEGIN
		 IF @BESTIMATEMODE<>1  
			SELECT @CPRDCODE=PRODUCT_CODE FROM SKU (NOLOCK)
			JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE= ARTICLE.ARTICLE_CODE
			WHERE PRODUCT_CODE=@CPRODUCTCODE  
			AND (ISNULL(ARTICLE.STOCK_NA,0)= 0  OR ISNULL(ARTICLE.INACTIVE,0)= 0 OR ISNULL(@CALLOWWSLINACTIVESTOCKNAARTICLES,'')='1')
		 ELSE	
			SELECT @CPRDCODE=PRODUCT_CODE FROM SKU (NOLOCK)
			JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE= ARTICLE.ARTICLE_CODE
			WHERE PRODUCT_CODE=@CPRODUCTCODE AND ER_FLAG=2
			AND (ISNULL(ARTICLE.STOCK_NA,0)= 0  OR ISNULL(ARTICLE.INACTIVE,0)= 0 OR ISNULL(@CALLOWWSLINACTIVESTOCKNAARTICLES,'')='1')
	 END		
	 
	 IF @CPRDCODE IS NULL 
	 BEGIN     
		 SELECT 'SELECTED BARCODE NOT FOUND....PLEASE CHECK' AS RETMSG  
		 RETURN
	 END
	 
	 IF ISNULL(@CPRDCODE,'')=''
		SET @CPRDCODE=@CPRODUCTCODE
	 
	  DECLARE @ALLOW_ACCESS BIT ,@BINSTOCK numeric(10,3)  ,@MAINTAIN_UNQ_QTY BIT
	 
	 ---VALIDATION FOR UNIQUR BARCODE----
	SELECT  TOP 1 @MAINTAIN_UNQ_QTY=VALUE FROM CONFIG WHERE CONFIG_OPTION='MAINTAIN_01_QTY_UNQ_CODING' 
	
	IF @CXNTYPE='WSR' AND ISNULL(@MAINTAIN_UNQ_QTY,1)=1	
	BEGIN
	 IF EXISTS(	SELECT TOP 1 'U' FROM PMT01106 A (NOLOCK) 
		JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
		JOIN ARTICLE C (NOLOCK) ON C.ARTICLE_CODE=B.ARTICLE_CODE
		WHERE A.PRODUCT_CODE=@CPRDCODE AND A.QUANTITY_IN_STOCK >0 AND C.CODING_SCHEME=3)
		BEGIN 
			 SELECT 'UNIQUE BARCODE HAS ALREADY IN STOCK....PLEASE CHECK' AS RETMSG  
			 RETURN
		END
	END	
	
		
	
	 --CHECK IF USER HAS ACCESS TO THE BIN
	 SELECT TOP 1 @ALLOW_ACCESS=1 FROM BINUSERS (NOLOCK) WHERE USER_CODE=@CUSERCODE AND BIN_ID =@CDEPT_ID
	 
	 DECLARE @BINNAME VARCHAR(1000),@CUSERNAME VARCHAR(1000),@USER_AUTH VARCHAR(100),@BMBO_COUNTER BIT
	 --GET THE USERNAME AND BIN_NAME
	 SET @CUSERNAME=(SELECT TOP 1 USERNAME FROM USERS WHERE USER_CODE=@CUSERCODE )
	 SET @BINNAME=(SELECT TOP 1 BIN_NAME FROM BIN WHERE BIN_ID =@CDEPT_ID )
     
     /*IF THE BIN IS MARKED AS MBO_COUNTER THAN ONLY THE BIN STOCK SHOULD BE CONSIDERED AND ONLY ITS STOCK 
      SHOULD BE RETURNED, IRRESPECTIVE OF THE BINS THE USER HAS ACCESS TO*/
     SELECT @BMBO_COUNTER=ISNULL(MBO_COUNTER,0) FROM BIN(NOLOCK) WHERE BIN_ID=@CDEPT_ID
     
      SET @CCMD=N'SELECT @BINSTOCK=SUM(PMT.QUANTITY_IN_STOCK) 
     FROM PMT01106 PMT (NOLOCK)
     JOIN BIN (NOLOCK) ON BIN.BIN_ID=PMT.BIN_ID
     JOIN BINUSERS B (NOLOCK) ON BIN.MAJOR_BIN_ID =B.BIN_ID      
     WHERE '+(CASE WHEN ( @nCodingscheme=1 and 
     CHARINDEX ('@',@CPRDCODE)=0) THEN 
     '(PMT.PRODUCT_CODE in('''+@CPRDCODE+''') OR  CHARINDEX('''+@CPRDCODE+'@'',PMT.PRODUCT_CODE)>0)'
     ELSE 'pmt.product_code='''+@CPRDCODE+'''' END)+'
     AND (B.USER_CODE='''+@CUSERCODE+''') AND (PMT.DEPT_ID='''+@cLOC_ID+''')
	 and pmt.QUANTITY_IN_STOCK>0
	 and pmt.bin_id<>''999'' ' 
     PRINT @CCMD
     EXEC SP_EXECUTESQL @CCMD,N'@BINSTOCK NUMERIC(10,3) OUTPUT',@BINSTOCK OUTPUT
     
	
  --   SELECT @BINSTOCK=SUM(PMT.QUANTITY_IN_STOCK) 
  --   FROM PMT01106 PMT (NOLOCK)
  --   JOIN BIN (NOLOCK) ON BIN.BIN_ID=PMT.BIN_ID
  --   JOIN BINUSERS B (NOLOCK) ON BIN.MAJOR_BIN_ID =B.BIN_ID 
  --   WHERE PMT.PRODUCT_CODE =@CPRDCODE 
	 --AND PMT.DEPT_ID=@CLOC_ID 
  --   AND (B.USER_CODE=@CUSERCODE)

    
  	PRINT CONVERT(VARCHAR,@BINSTOCK)
  	 /*SELECTED BARCODE SHOULD NOT BE PART OF STOCK RECONCILLATION*/
	 IF EXISTS (SELECT TOP 1 MEMO_ID FROM STMH01106 A JOIN PMT01106 B ON A.REP_ID=B.REP_ID
				WHERE B.PRODUCT_CODE=@CPRDCODE AND B.BIN_ID=@CDEPT_ID AND B.DEPT_ID= @CLOC_ID )
	 BEGIN
		 SELECT 'SELECTED BARCODE IS PART OF STOCK RECONCILIATION....PLEASE CHECK' AS RETMSG      
		 RETURN
	 END			
 
	 IF @BDONOTCHECKSTOCK=0    
		 SELECT @BDONOTCHECKSTOCK = STOCK_NA 
		 FROM SKU A   (NOLOCK)  
		 JOIN ARTICLE B  (NOLOCK) ON B.ARTICLE_CODE=A.ARTICLE_CODE
		 WHERE  A.PRODUCT_CODE=@CPRDCODE    
	 
	 SELECT @BSTOCKNA=STOCK_NA FROM SKU A (NOLOCK)
	 JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE=B.ARTICLE_CODE		 
	 WHERE A.PRODUCT_CODE=@CPRDCODE
	 
	 IF @BDONOTCHECKSTOCK=0
	 BEGIN
			SELECT TOP 1 @CDONOTCHECKSTOCK =VALUE FROM USER_ROLE_DET A
			JOIN USERS B ON A.ROLE_ID=B.ROLE_ID
			WHERE USER_CODE=@CUSERCODE AND USER_CODE<>'0000000'
			AND FORM_NAME='FRMSALE' 
			AND FORM_OPTION='ALLOW_NEG_STOCK'		
			
			IF ISNULL(@CDONOTCHECKSTOCK,'')='1'
				SET @BDONOTCHECKSTOCK = 1
	 END  
	 
	 IF @CXNTYPE='WSL'
	 BEGIN
			SELECT TOP 1 @CDONOTCHECKSTOCK =VALUE FROM USER_ROLE_DET A
			JOIN USERS B ON A.ROLE_ID=B.ROLE_ID
			WHERE USER_CODE=@CUSERCODE 
			AND FORM_NAME='FRMWSLINVOICE' 
			AND FORM_OPTION='ALLOW_NEG_STOCK'		
			
			IF ISNULL(@CDONOTCHECKSTOCK,'')='1'
				SET @BDONOTCHECKSTOCK = 1
			ELSE
			SET @BDONOTCHECKSTOCK=0
	 END    
	    
	 IF @CPRDCODE IS NULL      
		 SELECT 'SELECTED BARCODE NOT FOUND....PLEASE CHECK' AS RETMSG      
	 ELSE IF  ISNULL(@ALLOW_ACCESS,0)<>1  AND @CUSERCODE<>'0000000'
 		 SELECT '''USER -'+@CUSERNAME+' NOT ALLOW TO ACCESS BIN- '+@BINNAME+''' ' AS RETMSG 
	 ELSE IF ISNULL(@BINSTOCK,0)=0 AND @NQTY>0 AND @BDONOTCHECKSTOCK=0 
	  SELECT 'BARCODE NOT IN STOCK....PLEASE CHECK' AS RETMSG     	       	 
	 ELSE        
	 BEGIN  
		  SELECT @NSTKQTY =@BINSTOCK
		    
		  PRINT 'TOTAL STK QTY : '+ CONVERT(VARCHAR,@NSTKQTY)

		  
		  IF ISNULL(@NSTKQTY,0)>0 AND @BDONOTCHECKSTOCK=0      
			 SELECT '' AS RETMSG      
		  ELSE
		  IF @BDONOTCHECKSTOCK=1 OR @NQTY<0 
			 SELECT '' AS RETMSG      
		  ELSE      
			 SELECT 'BARCODE NOT IN STOCK....PLEASE CHECK' AS RETMSG      
		  
		  IF OBJECT_ID('TEMPDB..#SP_CHECKSTOCK0','U') IS NOT NULL   
			DROP TABLE #SP_CHECKSTOCK0  
		        
		  IF OBJECT_ID('TEMPDB..#SP_CHECKSTOCK','U') IS NOT NULL   
			DROP TABLE #SP_CHECKSTOCK  
			
		  IF OBJECT_ID('TEMPDB..#SP_CHECKSTOCK1','U') IS NOT NULL   
			DROP TABLE #SP_CHECKSTOCK1 

			
		 
		  IF @NRATEREVISION IN (0,1,3) AND @NQTY>=0
		  BEGIN
		        
				
		
				SELECT  A.PRODUCT_CODE, A.ARTICLE_CODE, B.ARTICLE_NO, B.ARTICLE_NAME, A.PARA1_CODE,      
				C.PARA1_NAME, A.PARA2_CODE, D.PARA2_NAME, A.PARA3_CODE, F.PARA3_NAME, 
				ISNULL(PMT.DEPT_ID, @CLOC_ID) AS DEPT_ID, A.BARCODE_CODING_SCHEME AS CODING_SCHEME,  B.INACTIVE,
				A.PURCHASE_PRICE,
				--(CASE WHEN @NQTY<0 THEN ISNULL(Z1.OLD_MRP,A.MRP) ELSE ISNULL(Z.MRP,A.MRP) END)AS [MRP], 
				(CASE WHEN @NMRPWS  IN (0,1) THEN ISNULL(Z.MRP,A.MRP) 
				   WHEN @NMRPWS =2 THEN ISNULL(Z.WS_PRICE,A.WS_PRICE) ELSE 0 END
				)AS [MRP],    
				ISNULL(Z.WS_PRICE,A.WS_PRICE) AS WS_PRICE,       
				'' AS SCHEME_ID, SM.SECTION_NAME, SD.SUB_SECTION_NAME,      
				A.PARA4_CODE,A.PARA5_CODE,A.PARA6_CODE,      
				PARA4_NAME,PARA5_NAME,PARA6_NAME,B.UOM_CODE,ISNULL(E.UOM_TYPE,0) AS [UOM_TYPE],      
				B.DT_CREATED AS [ART_DT_CREATED],F.DT_CREATED AS [PARA3_DT_CREATED],A.DT_CREATED AS [SKU_DT_CREATED],      
				B.STOCK_NA,(CASE  WHEN @CPRDCODE=@CPRODUCTCODE THEN '' ELSE @CPRODUCTCODE END) AS EAN,  
				F1.FORM_ID,F1.FORM_NAME,F1.TAX_PERCENTAGE , A.PRODUCT_NAME,  
				ISNULL(Z.MRP,A.MRP) AS RATE,A.ER_FLAG,ISNULL(A.FIX_MRP,0) AS [FIX_MRP] ,LM.AC_NAME  
				,A.INV_DT,A.RECEIPT_DT ,A.AC_CODE,B.ALIAS AS [ARTICLE_ALIAS],
				ISNULL(PMT.BIN_ID, @CDEPT_ID) AS [BIN_ID],ISNULL(BIN.BIN_NAME, '') AS [BIN_NAME],'' AS [WIP_UID],
				(A.PURCHASE_PRICE+ISNULL(SKU_OH.TAX_AMOUNT,0)+ ISNULL(SKU_OH.OTHER_CHARGES,0) +   
				ISNULL(SKU_OH.ROUND_OFF,0) + ISNULL(SKU_OH.FREIGHT,0)- ISNULL(SKU_OH.DISCOUNT_AMOUNT,0) +
				ISNULL(SKU_OH.EXCISE_DUTY_AMOUNT,0)) AS LANDED_COST,A.ONLINE_PRODUCT_CODE AS ONLINE_BAR_CODE,
				A.VENDOR_EAN_NO,(CASE WHEN ISNULL(A.HSN_CODE,'')='' THEN B.HSN_CODE ELSE A.HSN_CODE END) AS HSN_CODE,
				SM.ITEM_TYPE,isnull(pmt.bo_order_id ,'') as BOM_ORDER_ID ,
				 E.UOM_NAME AS STOCK_UOM,
				 CONVERT(NUMERIC(14,2), ISNULL(PMT.QUANTITY_IN_STOCK,0)) AS QUANTITY_IN_STOCK,
				 ISNULL(BU.CONVERSION_UOM_NAME,E.UOM_NAME) AS UOM_NAME,         
				 uc.Conversion_Value 
				INTO #SP_CHECKSTOCK0  
				FROM SKU A   (NOLOCK)     
				LEFT OUTER JOIN SKU_OH  (NOLOCK) ON SKU_OH.PRODUCT_CODE=A.PRODUCT_CODE    								
				LEFT OUTER JOIN  PMT01106 PMT  (NOLOCK) ON A.PRODUCT_CODE=PMT.PRODUCT_CODE  And PMT.dept_id= @CLOC_ID
				LEFT OUTER JOIN BIN (NOLOCK) ON BIN.BIN_ID=ISNULL(PMT.BIN_ID, @CDEPT_ID)
				JOIN ARTICLE B  (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE        
				JOIN SECTIOND SD  (NOLOCK) ON B.SUB_SECTION_CODE = SD.SUB_SECTION_CODE      
				JOIN SECTIONM SM  (NOLOCK) ON SD.SECTION_CODE = SM.SECTION_CODE      
				JOIN PARA1 C  (NOLOCK) ON A.PARA1_CODE = C.PARA1_CODE        
				JOIN PARA2 D  (NOLOCK) ON A.PARA2_CODE = D.PARA2_CODE        
				JOIN PARA3 F  (NOLOCK) ON A.PARA3_CODE = F.PARA3_CODE        
				JOIN PARA4 G  (NOLOCK) ON A.PARA4_CODE = G.PARA4_CODE        
				JOIN PARA5 H  (NOLOCK) ON A.PARA5_CODE = H.PARA5_CODE        
				JOIN PARA6 I  (NOLOCK) ON A.PARA6_CODE = I.PARA6_CODE     
				JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE = A.AC_CODE         
				LEFT OUTER JOIN UOM E  (NOLOCK) ON B.UOM_CODE = E.UOM_CODE 
				LEFT OUTER JOIN UOM_CONVERSION UC ON UC.UOM_CODE=E.UOM_CODE
                LEFT OUTER JOIN BOM_UOM BU ON BU.CONVERSION_UOM_CODE=UC.CONVERSION_UOM_CODE   
				JOIN FORM F1  (NOLOCK) ON A.FORM_ID=F1.FORM_ID       
				LEFT OUTER JOIN       
				(      
					SELECT TOP 1 PRODUCT_CODE,MRP,WS_PRICE         
					FROM LOCSKUSP  (NOLOCK)       
					WHERE PRODUCT_CODE=@CPRDCODE AND DEPT_ID=@CLOC_ID  AND ( FROM_DT <= @CWHERE OR @CWHERE ='')       
					ORDER BY FROM_DT DESC          
				)Z ON Z.PRODUCT_CODE=A.PRODUCT_CODE    
				LEFT OUTER JOIN BINUSERS LOC (NOLOCK) ON  LOC.USER_CODE=@CUSERCODE AND LOC.BIN_ID=ISNULL(BIN.MAJOR_BIN_ID,LOC.BIN_ID) -- AND LOC.BIN_ID=ISNULL(PMT.BIN_ID,@CDEPT_ID) 
				WHERE  A.PRODUCT_CODE=@CPRDCODE  
				AND (ISNULL(PMT.QUANTITY_IN_STOCK,0)>0 OR @BDONOTCHECKSTOCK=1 OR B.STOCK_NA=1 or @nCodingscheme=1)
				
				IF ISNULL(@corder_id,'')<>''
				DELETE FROM #SP_CHECKSTOCK0 WHERE ISNULL(BOM_ORDER_ID,'')<>@corder_id


				if @nCodingscheme=1
				UPDATE #SP_CHECKSTOCK0 SET QUANTITY_IN_STOCK=@NSTKQTY 
				
				--SELECT * FROM #SP_CHECKSTOCK0
				
				UPDATE #SP_CHECKSTOCK0 SET ER_FLAG=1 WHERE ISNULL(ER_FLAG,0)=0
				
				IF @BDONOTCHECKSTOCK=1  AND @CXNTYPE<>'WSR' ---- DOING THIS BECAUSE APPLICATION RECHECKS THE QUANTITY IN STOCK BASED UPON QUANTITY & STOCK_NA COLUMN
				BEGIN
					IF @BSTOCKNA=0 AND @CXNTYPE<>'IRR' 
						UPDATE #SP_CHECKSTOCK0 SET QUANTITY_IN_STOCK=99999 WHERE CODING_SCHEME<>3
					
					IF EXISTS (SELECT DEPT_ID FROM #SP_CHECKSTOCK0 WHERE BIN_ID=@CDEPT_ID  )
					 SELECT TOP 1 * FROM #SP_CHECKSTOCK0  WHERE  BIN_ID=@CDEPT_ID 
					ELSE
					SELECT TOP 1 * FROM #SP_CHECKSTOCK0 
					ORDER BY QUANTITY_IN_STOCK DESC
				END	
				ELSE  
					SELECT A.* FROM #SP_CHECKSTOCK0 A
					JOIN BINUSERS LOC (NOLOCK) ON  LOC.USER_CODE=@CUSERCODE AND LOC.BIN_ID=A.BIN_ID
					ORDER BY QUANTITY_IN_STOCK DESC 
					
		  END
		  ELSE IF @NRATEREVISION IN (0,1,3) AND @NQTY<0
		  BEGIN
				SELECT  A.PRODUCT_CODE, A.ARTICLE_CODE, B.ARTICLE_NO, B.ARTICLE_NAME, A.PARA1_CODE,      
				C.PARA1_NAME, A.PARA2_CODE, D.PARA2_NAME, A.PARA3_CODE, F.PARA3_NAME, E.UOM_NAME,         
				ISNULL(PMT.DEPT_ID, @CLOC_ID) AS DEPT_ID, A.BARCODE_CODING_SCHEME AS CODING_SCHEME,  B.INACTIVE, PMT.QUANTITY_IN_STOCK,      
				A.PURCHASE_PRICE,
				--(CASE WHEN @NQTY<0 THEN ISNULL(Z1.OLD_MRP,A.MRP) ELSE ISNULL(Z.MRP,A.MRP) END)AS [MRP], 
				(CASE WHEN @NMRPWS in (0,1) THEN CASE WHEN @NQTY<0 THEN ISNULL(Z1.OLD_MRP,A.MRP) ELSE ISNULL(Z.MRP,A.MRP) END
				   WHEN @NMRPWS =2 THEN CASE WHEN @NQTY<0 THEN ISNULL(Z1.OLD_MRP,A.WS_PRICE) ELSE ISNULL(Z.WS_PRICE,A.WS_PRICE) END ELSE 0 END
				)AS [MRP],    
				ISNULL(Z.WS_PRICE,A.WS_PRICE) AS WS_PRICE,       
				'' AS SCHEME_ID, SM.SECTION_NAME, SD.SUB_SECTION_NAME,      
				A.PARA4_CODE,A.PARA5_CODE,A.PARA6_CODE,      
				PARA4_NAME,PARA5_NAME,PARA6_NAME,B.UOM_CODE,ISNULL(E.UOM_TYPE,0) AS [UOM_TYPE],      
				B.DT_CREATED AS [ART_DT_CREATED],F.DT_CREATED AS [PARA3_DT_CREATED],A.DT_CREATED AS [SKU_DT_CREATED],      
				B.STOCK_NA,(CASE  WHEN @CPRDCODE=@CPRODUCTCODE THEN '' ELSE @CPRODUCTCODE END) AS EAN,  
				F1.FORM_ID,F1.FORM_NAME,F1.TAX_PERCENTAGE , A.PRODUCT_NAME,  
				ISNULL(Z.MRP,A.MRP) AS RATE,A.ER_FLAG     ,ISNULL(A.FIX_MRP,0) AS [FIX_MRP] ,LM.AC_NAME  
				,A.INV_DT,A.RECEIPT_DT ,A.AC_CODE,B.ALIAS AS [ARTICLE_ALIAS],
				ISNULL(PMT.BIN_ID, @CDEPT_ID) AS [BIN_ID],ISNULL(BIN.BIN_NAME, '') AS [BIN_NAME],'' AS [WIP_UID],
				(A.PURCHASE_PRICE+ISNULL(SKU_OH.TAX_AMOUNT,0)+ ISNULL(SKU_OH.OTHER_CHARGES,0) +   
				ISNULL(SKU_OH.ROUND_OFF,0) + ISNULL(SKU_OH.FREIGHT,0)- ISNULL(SKU_OH.DISCOUNT_AMOUNT,0) +
				ISNULL(SKU_OH.EXCISE_DUTY_AMOUNT,0)) AS LANDED_COST,A.ONLINE_PRODUCT_CODE AS ONLINE_BAR_CODE
				,A.VENDOR_EAN_NO,(CASE WHEN ISNULL(A.HSN_CODE,'')='' THEN B.HSN_CODE ELSE A.HSN_CODE END) AS HSN_CODE	,SM.ITEM_TYPE			
				INTO #SP_CHECKSTOCK1  
				FROM SKU A   (NOLOCK)     
				LEFT OUTER JOIN SKU_OH  (NOLOCK) ON SKU_OH.PRODUCT_CODE=A.PRODUCT_CODE    												
				LEFT OUTER JOIN  PMT01106 PMT  (NOLOCK) ON A.PRODUCT_CODE=PMT.PRODUCT_CODE  
				LEFT OUTER JOIN BIN (NOLOCK) ON BIN.BIN_ID=ISNULL(PMT.BIN_ID, @CDEPT_ID)
				JOIN ARTICLE B  (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE        
				JOIN SECTIOND SD  (NOLOCK) ON B.SUB_SECTION_CODE = SD.SUB_SECTION_CODE      
				JOIN SECTIONM SM  (NOLOCK) ON SD.SECTION_CODE = SM.SECTION_CODE      
				JOIN PARA1 C  (NOLOCK) ON A.PARA1_CODE = C.PARA1_CODE        
				JOIN PARA2 D  (NOLOCK) ON A.PARA2_CODE = D.PARA2_CODE        
				JOIN PARA3 F  (NOLOCK) ON A.PARA3_CODE = F.PARA3_CODE        
				JOIN PARA4 G  (NOLOCK) ON A.PARA4_CODE = G.PARA4_CODE        
				JOIN PARA5 H  (NOLOCK) ON A.PARA5_CODE = H.PARA5_CODE        
				JOIN PARA6 I  (NOLOCK) ON A.PARA6_CODE = I.PARA6_CODE     
				JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE = A.AC_CODE         
				LEFT OUTER JOIN UOM E  (NOLOCK) ON B.UOM_CODE = E.UOM_CODE   
				JOIN FORM F1  (NOLOCK) ON A.FORM_ID=F1.FORM_ID       
				LEFT OUTER JOIN       
				(      
					SELECT TOP 1 PRODUCT_CODE,MRP,WS_PRICE         
					FROM LOCSKUSP  (NOLOCK)       
					WHERE PRODUCT_CODE=@CPRDCODE AND DEPT_ID=@CLOC_ID  AND ( FROM_DT <= @CWHERE OR @CWHERE ='')       
					ORDER BY FROM_DT DESC          
				)Z ON Z.PRODUCT_CODE=A.PRODUCT_CODE    
				LEFT OUTER JOIN       
				(      
					SELECT TOP 1 A.PRODUCT_CODE,(CASE WHEN ISNULL(B.PATCHUP_RUN,0)=0 AND ISNULL(A.OLD_MRP,0)=0 THEN A.MRP ELSE A.OLD_MRP END ) AS [OLD_MRP]
					FROM CMD01106 A  (NOLOCK)       
					JOIN CMM01106 B (NOLOCK) ON B.CM_ID=A.CM_ID  
					WHERE A.QUANTITY>0 AND PRODUCT_CODE=@CPRDCODE 
					AND ISNULL(B.BIN_ID,'000')=@CDEPT_ID   
					ORDER BY B.CM_DT DESC          
				)Z1 ON Z1.PRODUCT_CODE=A.PRODUCT_CODE   
				LEFT OUTER JOIN BINUSERS LOC (NOLOCK) ON LOC.BIN_ID=ISNULL(BIN.MAJOR_BIN_ID,@CDEPT_ID) AND LOC.USER_CODE=@CUSERCODE  
				WHERE  A.PRODUCT_CODE=@CPRDCODE  And PMT.dept_id= @CLOC_ID AND 
				(B.STOCK_NA=1 OR (@CUSERCODE=(CASE WHEN @CUSERCODE='0000000' OR @NQTY<0 THEN @CUSERCODE ELSE LOC.USER_CODE END)))  
				AND ISNULL(PMT.BIN_ID, @CDEPT_ID)=(CASE WHEN @BMBO_COUNTER=0 THEN ISNULL(PMT.BIN_ID, @CDEPT_ID) ELSE @CDEPT_ID END)
				
				UPDATE #SP_CHECKSTOCK1 SET ER_FLAG=1 WHERE ISNULL(ER_FLAG,0)=0
				
				IF @BDONOTCHECKSTOCK=1
				BEGIN
				    IF EXISTS (SELECT DEPT_ID FROM #SP_CHECKSTOCK1 WHERE BIN_ID=@CDEPT_ID )
					 SELECT TOP 1 * FROM #SP_CHECKSTOCK1  WHERE  BIN_ID=@CDEPT_ID 
					 ELSE
					SELECT TOP 1 * FROM #SP_CHECKSTOCK1 ORDER BY QUANTITY_IN_STOCK DESC
			    END 
				ELSE IF EXISTS (SELECT DEPT_ID FROM #SP_CHECKSTOCK1 WHERE QUANTITY_IN_STOCK>0 AND ((DEPT_ID=@CDEPT_ID)  OR BIN_ID =@CDEPT_ID) )
					SELECT TOP 1 * FROM #SP_CHECKSTOCK1 WHERE (DEPT_ID=@CDEPT_ID    OR BIN_ID =@CDEPT_ID)  AND QUANTITY_IN_STOCK>0 
				ELSE IF EXISTS (SELECT DEPT_ID FROM #SP_CHECKSTOCK1 WHERE QUANTITY_IN_STOCK>0 AND ((DEPT_ID<>@CDEPT_ID) AND BIN_ID <>@CDEPT_ID) )  
					SELECT * FROM #SP_CHECKSTOCK1 WHERE DEPT_ID<>@CDEPT_ID    AND BIN_ID <>@CDEPT_ID AND QUANTITY_IN_STOCK>0 
				ELSE  
					SELECT TOP 1 * FROM #SP_CHECKSTOCK1 ORDER BY QUANTITY_IN_STOCK DESC 
					
		  END
		  ELSE IF @NRATEREVISION = 2 
		  BEGIN
				SELECT  A.PRODUCT_CODE, A.ARTICLE_CODE, B.ARTICLE_NO, B.ARTICLE_NAME, A.PARA1_CODE,      
				C.PARA1_NAME, A.PARA2_CODE, D.PARA2_NAME, A.PARA3_CODE, F.PARA3_NAME, E.UOM_NAME,         
				ISNULL(PMT.DEPT_ID, @CLOC_ID) AS DEPT_ID, A.BARCODE_CODING_SCHEME AS CODING_SCHEME,  B.INACTIVE, PMT.QUANTITY_IN_STOCK,      
				A.PURCHASE_PRICE,
				--(CASE WHEN @NQTY<0 THEN ISNULL(Z1.OLD_MRP,A.MRP) ELSE ISNULL(Z.MRP,A.MRP) END)AS [MRP], 
				(CASE WHEN @NMRPWS in (0,1) THEN CASE WHEN @NQTY<0 THEN ISNULL(Z1.OLD_MRP,A.MRP) ELSE ISNULL(Z.MRP,A.MRP) END
				   WHEN @NMRPWS =2 THEN  CASE WHEN @NQTY<0 THEN ISNULL(A.WS_PRICE,0) ELSE ISNULL(Z.WS_PRICE,A.WS_PRICE) END ELSE 0 END
				)AS [MRP],    
				ISNULL(Z.WS_PRICE,A.WS_PRICE) AS WS_PRICE,       
				'' AS SCHEME_ID, SM.SECTION_NAME, SD.SUB_SECTION_NAME,      
				A.PARA4_CODE,A.PARA5_CODE,A.PARA6_CODE,      
				PARA4_NAME,PARA5_NAME,PARA6_NAME,B.UOM_CODE,ISNULL(E.UOM_TYPE,0) AS [UOM_TYPE],      
				B.DT_CREATED AS [ART_DT_CREATED],F.DT_CREATED AS [PARA3_DT_CREATED],A.DT_CREATED AS [SKU_DT_CREATED],      
				B.STOCK_NA,(CASE  WHEN @CPRDCODE=@CPRODUCTCODE THEN '' ELSE @CPRODUCTCODE END) AS EAN,  
				F1.FORM_ID,F1.FORM_NAME,F1.TAX_PERCENTAGE , A.PRODUCT_NAME,  
				ISNULL(Z.MRP,A.MRP) AS RATE,A.ER_FLAG     ,ISNULL(A.FIX_MRP,0) AS [FIX_MRP] ,LM.AC_NAME  
				,A.INV_DT,A.RECEIPT_DT ,A.AC_CODE,B.ALIAS AS [ARTICLE_ALIAS],
				ISNULL(PMT.BIN_ID, @CDEPT_ID) AS [BIN_ID],ISNULL(BIN.BIN_NAME, '') AS [BIN_NAME],'' AS [WIP_UID],
				ISNULL(HH.OLD_MRP,A.MRP ) AS OLD_MRP,
				(A.PURCHASE_PRICE+ISNULL(SKU_OH.TAX_AMOUNT,0)+ ISNULL(SKU_OH.OTHER_CHARGES,0) +   
				ISNULL(SKU_OH.ROUND_OFF,0) + ISNULL(SKU_OH.FREIGHT,0)- ISNULL(SKU_OH.DISCOUNT_AMOUNT,0) +
				ISNULL(SKU_OH.EXCISE_DUTY_AMOUNT,0)) AS LANDED_COST,A.ONLINE_PRODUCT_CODE AS ONLINE_BAR_CODE,
				A.VENDOR_EAN_NO,(CASE WHEN ISNULL(A.HSN_CODE,'')='' THEN B.HSN_CODE ELSE A.HSN_CODE END) AS HSN_CODE
				,SM.ITEM_TYPE			
				INTO #SP_CHECKSTOCK  
				FROM SKU A   (NOLOCK)  
				LEFT OUTER JOIN SKU_OH  (NOLOCK) ON SKU_OH.PRODUCT_CODE=A.PRODUCT_CODE    												
				LEFT OUTER JOIN  PMT01106 PMT  (NOLOCK) ON A.PRODUCT_CODE=PMT.PRODUCT_CODE  
				LEFT OUTER JOIN BIN (NOLOCK) ON BIN.BIN_ID=ISNULL(PMT.BIN_ID, @CDEPT_ID)
				JOIN ARTICLE B  (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE        
				JOIN SECTIOND SD  (NOLOCK) ON B.SUB_SECTION_CODE = SD.SUB_SECTION_CODE      
				JOIN SECTIONM SM  (NOLOCK) ON SD.SECTION_CODE = SM.SECTION_CODE      
				JOIN PARA1 C  (NOLOCK) ON A.PARA1_CODE = C.PARA1_CODE        
				JOIN PARA2 D  (NOLOCK) ON A.PARA2_CODE = D.PARA2_CODE        
				JOIN PARA3 F  (NOLOCK) ON A.PARA3_CODE = F.PARA3_CODE        
				JOIN PARA4 G  (NOLOCK) ON A.PARA4_CODE = G.PARA4_CODE        
				JOIN PARA5 H  (NOLOCK) ON A.PARA5_CODE = H.PARA5_CODE        
				JOIN PARA6 I  (NOLOCK) ON A.PARA6_CODE = I.PARA6_CODE     
				JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE = A.AC_CODE         
				LEFT OUTER JOIN UOM E  (NOLOCK) ON B.UOM_CODE = E.UOM_CODE   
				JOIN FORM F1  (NOLOCK) ON A.FORM_ID=F1.FORM_ID       
				LEFT OUTER JOIN       
				(      
				SELECT TOP 1 PRODUCT_CODE,OLD_MRP         
				FROM IRD01106 AA (NOLOCK) 
				JOIN IRM01106 (NOLOCK) LL ON AA.IRM_MEMO_ID= LL.IRM_MEMO_ID AND LL.TYPE=1
				WHERE PRODUCT_CODE=@CPRDCODE  
				ORDER BY IRM_MEMO_DT  DESC ,LL.LAST_UPDATE DESC         
				)HH ON HH.PRODUCT_CODE=A.PRODUCT_CODE    
				LEFT OUTER JOIN       
				(      
				SELECT TOP 1 PRODUCT_CODE,MRP,WS_PRICE         
				FROM LOCSKUSP  (NOLOCK)       
				WHERE PRODUCT_CODE=@CPRDCODE AND DEPT_ID=@CLOC_ID  AND ( FROM_DT <= @CWHERE OR @CWHERE ='')       
				ORDER BY FROM_DT DESC          
				)Z ON Z.PRODUCT_CODE=A.PRODUCT_CODE    
				LEFT OUTER JOIN       
				(      
					SELECT TOP 1 A.PRODUCT_CODE,(CASE WHEN ISNULL(B.PATCHUP_RUN,0)=0 THEN A.MRP ELSE A.OLD_MRP END ) AS [OLD_MRP]  
					FROM CMD01106 A  (NOLOCK)       
					JOIN CMM01106 B (NOLOCK) ON B.CM_ID=A.CM_ID  
					WHERE A.QUANTITY>0 AND PRODUCT_CODE=@CPRDCODE 
					AND ISNULL(B.BIN_ID,'000')=@CDEPT_ID   
					ORDER BY B.CM_DT DESC          
				)Z1 ON Z1.PRODUCT_CODE=A.PRODUCT_CODE   
				LEFT OUTER JOIN BINUSERS LOC (NOLOCK) ON LOC.BIN_ID=ISNULL(BIN.MAJOR_BIN_ID,@CDEPT_ID) AND LOC.USER_CODE=@CUSERCODE  
				WHERE  A.PRODUCT_CODE=@CPRDCODE AND  PMT.DEPT_ID=@CLOC_ID   AND
				(B.STOCK_NA=1 OR (@CUSERCODE=(CASE WHEN @CUSERCODE='0000000' OR @NQTY<0 THEN @CUSERCODE ELSE LOC.USER_CODE END)))  
				AND ISNULL(PMT.BIN_ID, @CDEPT_ID)=(CASE WHEN @BMBO_COUNTER=0 THEN ISNULL(PMT.BIN_ID, @CDEPT_ID) ELSE @CDEPT_ID END)
				
				UPDATE #SP_CHECKSTOCK SET ER_FLAG=1 WHERE ISNULL(ER_FLAG,0)=0
				
				IF @BDONOTCHECKSTOCK=1 
				 BEGIN
				    IF EXISTS (SELECT DEPT_ID FROM #SP_CHECKSTOCK WHERE BIN_ID=@CDEPT_ID )
					 SELECT TOP 1 * FROM #SP_CHECKSTOCK  WHERE  BIN_ID=@CDEPT_ID 
					 ELSE
					SELECT TOP 1 * FROM #SP_CHECKSTOCK ORDER BY QUANTITY_IN_STOCK DESC
			     END 
				ELSE IF EXISTS (SELECT DEPT_ID FROM #SP_CHECKSTOCK WHERE QUANTITY_IN_STOCK>0 AND ((DEPT_ID=@CDEPT_ID)  OR BIN_ID =@CDEPT_ID) )
					SELECT TOP 1 * FROM #SP_CHECKSTOCK WHERE (DEPT_ID=@CDEPT_ID    OR BIN_ID =@CDEPT_ID)  AND QUANTITY_IN_STOCK>0 
				ELSE IF EXISTS (SELECT DEPT_ID FROM #SP_CHECKSTOCK WHERE QUANTITY_IN_STOCK>0 AND ((DEPT_ID<>@CDEPT_ID) AND BIN_ID <>@CDEPT_ID) )  
					SELECT * FROM #SP_CHECKSTOCK WHERE DEPT_ID<>@CDEPT_ID    AND BIN_ID <>@CDEPT_ID AND QUANTITY_IN_STOCK>0 
				ELSE  
					SELECT TOP 1 * FROM #SP_CHECKSTOCK  ORDER BY QUANTITY_IN_STOCK DESC
		  END
	 END 
 
END  
--END OF PROCEDURE - SP_CHECKSTOCK
