CREATE PROCEDURE SPSIS_SYNCH_UPLOADDATA_WSL_OPT
(
    @nSpId VARCHAR(50),
	@CDEPTID VARCHAR(5)/*Rohit 30-10-2024*/,
	@CSISDEPTID VARCHAR(5)/*Rohit 30-10-2024*/,
   @CERRMSG VARCHAR(1000) OUTPUT
)
--WITH ENCRYPTION
AS
SET NOCOUNT ON
BEGIN

DECLARE @CSTEP VARCHAR(100),@DTSQL NVARCHAR(MAX),@NMERGE_ORDER NUMERIC(5)
	   ,@CTABLENAME VARCHAR(200),@CTABLE_SUFFIX VARCHAR(50),@CKEYFIELD VARCHAR(200),@CDEL_ID VARCHAR(50),@CTMP_TABLENAME VARCHAR(200),@LINSERTONLY VARCHAR(1)
	   ,@CFILTERCONDITION VARCHAR(200),@CFILTERCONDITION2 VARCHAR(500),@LUPDATEONLY VARCHAR(1),@BALWAYSUPDATE VARCHAR(1),@FDEL CHAR(1)
	   ,@CERRMSGOUT VARCHAR(1000),@CTABLESSTR VARCHAR(MAX),@CMIRRORINGENABLED VARCHAR(5),@cMemoId VARCHAR(40)
	   ,@CCURDEPTID VARCHAR(5),@CTEMPMASTERTABLE VARCHAR(200),@CTEMPDETAILTABLE1 VARCHAR(200),@CTEMPDETAILTABLE2 VARCHAR(200)
	   ,@CTEMPPAYMODETABLE VARCHAR(200),@CTEMPTABLE VARCHAR(100),@CDONOTRESETPOSTEDINAC VARCHAR(1)
	   ,@BADDMODE BIT,@CCUTOFFDATE VARCHAR(20),@CWHERECLAUSE VARCHAR(2000),@CMEMONOLEN VARCHAR(5),@NMEMONOLEN INT
	   ,@DMINMEMODT DATETIME,@DMAXMEMODT DATETIME,@CFINYEAR VARCHAR(5),@CMEMOPREFIX VARCHAR(10)
	   ,@CMINMEMONO VARCHAR(20),@CMAXMEMONO VARCHAR(20),@CSOURCEDB VARCHAR(200),@CMERGEDB VARCHAR(200)
	   ,@BMSTINSERTONLY BIT,@BSERIESMISMATCHFOUND BIT,@CPREVMEMONO VARCHAR(20)
	   ,@NPREVMEMONO NUMERIC(5,0),@NLENVALUE INT,@CPREVMEMONOSEARCH VARCHAR(20),@CMEMOIDSEARCH VARCHAR(40)
	   ,@CRETPRODUCTCODE VARCHAR(50),@NVERSIONNO INT,@CJOINSTR VARCHAR(MAX),@CTEMPSKUTABLE VARCHAR(500)
	   ,@CPARTYDEPTID VARCHAR(5),@NINVMODE INT,@CMRRID VARCHAR(40),@CDONOTSENDCHALLANWODISPATCHDETAILS VARCHAR(2)
	   ,@ERP_CONFIG VARCHAR(10),@BDONOTSENDCHALLANWITHOUTDISPATCH BIT
	   ,@SLS_SYNC_AFTER DATETIME,@dLastUpdate DATETIME,@dMIrrorLastUpdate DATETIME,@cMissingRowId VARCHAR(50)
	   ,@cUpdatestr VARCHAR(2000),@BDonotInsCHALLAN BIT,@bServerLoc BIT,@nEntrymode NUMERIC(1,0),
	   @BIS_BIN_TRANSFER BIT,@dInvDt DATETIME,@bCancelled bit

BEGIN TRY
	
	set @cerrmsg=''
	SET @CSTEP='4'
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

	SELECT @CSOURCEDB='',@CMERGEDB='',@BMSTINSERTONLY=1,@BSERIESMISMATCHFOUND=0
   		

	
	SELECT @CTEMPMASTERTABLE=@CSOURCEDB+'WSL_INM01106_UPLOAD',
		   @CTEMPDETAILTABLE1=@CSOURCEDB+'WSL_IND01106_UPLOAD'
		 
		   

	SET @cStep='7'
	
	
LBLSTART:

	BEGIN TRANSACTION	
	
	SET @cStep='9'
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

	SET @BDonotInsCHALLAN=0
	
    SELECT @CMEMOID=''
	--SOME MANDETORY COLUMNS UPDATE IN UPLOAD TABLES
	UPDATE A SET memo_type =1,
	             AC_CODE ='0000000000',
				 USER_CODE ='0000000',
				 EDT_USER_CODE='0000000',
				 PARTY_STATE_CODE='00',
				 BIN_ID='000',
				 INV_ID=@CDEPTID+SUBSTRING(INV_ID,LEN(@CDEPTID)+1 ,LEN(INV_ID))/*SUBSTRING(INV_ID,3,LEN(INV_ID))Rohit 30-10-2024*/ ,
				 INV_NO=@CDEPTID+SUBSTRING(INV_ID,LEN(@CDEPTID)+1 ,LEN(INV_ID))/*SUBSTRING(INV_NO,3,LEN(INV_NO))Rohit 30-10-2024*/,
				 COMPANY_CODE ='00',
				 dept_id =@CDEPTID,
				 TARGET_BIN_ID ='000',
				 freight_hsn_code ='0000000000',
				 other_charges_hsn_code ='0000000000',
				 Insurance_hsn_code ='0000000000',
				 packing_hsn_code ='0000000000',
				 location_Code =@CDEPTID
	FROM WSL_INM01106_UPLOAD A (NOLOCK)
	WHERE SP_ID =@nSpId

	UPDATE A SET party_dept_id =@CSISDEPTID
	FROM WSL_INM01106_UPLOAD A (NOLOCK)
	WHERE SP_ID =@nSpId AND INV_MODE=2


	UPDATE A SET BIN_ID ='000',
	          INV_ID=@CDEPTID+SUBSTRING(INV_ID,LEN(@CDEPTID)+1,LEN(INV_ID))/*Rohit 30-10-2024*/ ,
			  DEPT_ID=@CDEPTID,
			  hsn_code ='0000000000',
			  emp_code ='0000000',
			  emp_code1 ='0000000',
			  emp_code2 ='0000000'
	FROM WSL_IND01106_UPLOAD A (NOLOCK)
	WHERE SP_ID =@nSpId

	

	
	 UPDATE A SET PRODUCT_CODE=LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE )))  
	 FROM WSL_IND01106_UPLOAD A (NOLOCK)	WHERE SP_ID=@NSPID
	 AND CHARINDEX('@',PRODUCT_CODE)<>0

	
    SELECT TOP 1 @CMEMOID = B.INV_ID ,@bCancelled=cancelled
    FROM WSL_INM01106_UPLOAD B (NOLOCK)
    WHERE b.sp_id=@nSpid


	
    SET @CFILTERCONDITION = 'B.SP_ID='''+@nSpId+''''
	

	SET @cStep='14'
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

	SET @CMEMOIDSEARCH=''
	SELECT TOP 1 @CMEMOIDSEARCH=A.INV_ID FROM INM01106 A (NOLOCK) WHERE A.INV_ID=@CMEMOID
	
	IF ISNULL(@CMEMOIDSEARCH,'')<>''
		SET @BADDMODE=0
	ELSE
		SET @BADDMODE=1

	
LBLMERGE:
	---DELETING EXISTING RECORD IF BILL COMES AGAIN FOR MERGING
	
	IF @BADDMODE=1 AND NOT EXISTS (SELECT TOP 1 'U' FROM WSL_ind01106_UPLOAD WHERE SP_ID =@NSPID)
	    GOTO EXIT_PROC
    IF @BADDMODE=0 AND NOT EXISTS (SELECT TOP 1 'U' FROM WSL_ind01106_UPLOAD WHERE SP_ID =@NSPID)
		 SET @BCANCELLED=1
	
	IF @BADDMODE=0
	BEGIN
	  
		print 'enter baddmode=0'
		SET @CSTEP='16'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1


		IF EXISTS (SELECT TOP 1 tablename FROM savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nSPID)
			DELETE FROM savetran_updcols_updatestr WITH (ROWLOCK) WHERE sp_id=@nSpId

		INSERT savetran_updcols_updatestr (sp_id,tablename,updatestr)
		SELECT @nSPId as sp_id,tablename,'' from mirrorxnsinfo (NOLOCK)
		WHERE tablename IN ('inm01106','ind01106')

		SET @cStep='19'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

		PRINT 'ADDMODE:N'
		EXEC SP3S_VERIFY_WSLDATA_MERGE_CHANGES
		@cMemoId=@cMemoId,
		@nSpId=@nSpid


	END
	
	IF @BADDMODE=0
	BEGIN
	    
		
		 INSERT SAVETRAN_BARCODE_NETQTY	( BIN_ID, DEPT_ID, PRODUCT_CODE, sp_id, XN_QTY ) 
		 SELECT 	'000'  BIN_ID,@CDEPTID /*Rohit 30-10-2024*/DEPT_ID, PRODUCT_CODE,@nSpId SP_ID,A.quantity AS XN_QTY 
		 FROM ind01106 A (NOLOCK)
		 WHERE A.inv_id =@CMEMOID
		 union all
		  SELECT 	'000'  BIN_ID,@CDEPTID /*Rohit 30-10-2024*/DEPT_ID, PRODUCT_CODE,@nSpId SP_ID,-1*A.quantity AS XN_QTY 
		  FROM ind01106 A (NOLOCK)
		  WHERE A.inv_id =@CMEMOID and isnull(a.ps_id,'')<>''



		IF @bCancelled=1 
		BEGIN
			UPDATE inm01106 WITH (ROWLOCK) SET cancelled=1 WHERE inv_id=@cMemoid
			GOTO lblupdatepmt
		END


		SET @cStep='22'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

							
		SELECT TOP 1 @cMissingRowId=a.row_id FROM ind01106 A (NOLOCK) 
		LEFT JOIN 
		(SELECT row_id FROM WSL_ind01106_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId) b
		 ON A.row_ID =B.row_ID WHERE A.inv_id =@CMEMOID AND b.row_id IS NULL

		IF ISNULL(@cMissingRowId,'')<>''
		BEGIN		
			SET @CSTEP='25'
			EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

			DELETE A FROM ind01106 A (NOLOCK) LEFT JOIN 
			(SELECT row_id FROM WSL_ind01106_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId) b
			ON A.row_ID =B.row_ID WHERE A.inv_id =@CMEMOID AND b.row_id IS NULL

		END


		IF @nEntrymode=2
		BEGIN
			SET @CSTEP='27'
			EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

			UPDATE wps_mst SET wsl_inv_id='' WHERE wsl_inv_id=@cMemoId AND ps_id NOT IN 
			(SELECT DISTINCT ps_id FROM wsl_ind01106_upload (NOLOCK) WHERE sp_id=@nSpId)
		END

		SET @CSTEP='30'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

	END

	---UPDATING TRANSACTION TABLES
	SET @CSTEP='38'
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

	SET @CTABLENAME='INM01106'
	SET @CTMP_TABLENAME='WSL_INM01106_UPLOAD'
	SET @CKEYFIELD='INV_ID'

	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nspid and Tablename='inm01106'
	SET @LUPDATEONLY = (CASE WHEN @BADDMODE=0 THEN 1 ELSE 0 END)	
	
	SET @cStep='42'
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

	
	EXEC UPDATEMASTERXN_OPT @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
							  ,@BALWAYSUPDATE=1,@lUPDATEXNS=@bAddmode,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 



      SELECT a.product_code as new_product_code into #tmpbarcode FROM WSL_IND01106_UPLOAD A (NOLOCK)
		LEFT JOIN SKU B (nolock) ON A.PRODUCT_CODE =B.PRODUCT_CODE 
		WHERE A.SP_ID=@nSpId AND B.PRODUCT_CODE IS NULL
		group by a.product_code

		IF EXISTS (SELECT TOP 1 'U' FROM #tmpbarcode)
		BEGIN
			SET @CSTEP=84.2
			EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

			 EXEC SPSIS_INSERTSKUBARCODE @NSPID, 'SLS',@CERRMSG OUTPUT

			 if isnull(@cErrmsg,'')<>''
			    goto EXIT_PROC

          end

							  
	SET @CTABLENAME='IND01106'
	SET @CTMP_TABLENAME='WSL_IND01106_UPLOAD'
	SET @CKEYFIELD='ROW_ID'

	SELECT @cMissingRowId='',@lUpdateonly=0
	IF @BADDMODE=0
	BEGIN
		SET @CSTEP='45'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

		SELECT TOP 1 @cMissingRowId=b.row_id FROM 
		(SELECT row_id  FROM WSL_IND01106_UPLOAD (NOLOCK) WHERE sp_id=(LEFT(@nSPId,38)+LEFT(@cMemoId,2))) A
		RIGHT OUTER JOIN 
		(SELECT row_id FROM WSL_IND01106_UPLOAD (NOLOCK) WHERE sp_id=@nSpId) b ON 
		a.row_id=b.row_id WHERE a.row_id IS NULL

		IF ISNULL(@cMissingRowId,'')='' 
			SET @lUpdateonly=1
	END

	SET @CSTEP='48'
    EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1
	
	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nspid and  tablename='ind01106'	

	SET @CSTEP='48.5'
    EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1		
	EXEC updatemasterxn_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@lUpdateonly
							  ,@BALWAYSUPDATE=1,@lUPDATEXNS=@bAddmode,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 

	


	 INSERT SAVETRAN_BARCODE_NETQTY	( BIN_ID, DEPT_ID, PRODUCT_CODE, sp_id, XN_QTY ) 
	  SELECT 	'000'  BIN_ID,@CDEL_ID /*Rohit 30-10-2024*/DEPT_ID, PRODUCT_CODE,@nSpId SP_ID,-1*A.quantity AS XN_QTY 
	  FROM ind01106 A (NOLOCK)
	  WHERE A.inv_id =@CMEMOID
	  union all
	  SELECT 	'000'  BIN_ID,@CDEPTID/*Rohit 30-10-2024*/ DEPT_ID, PRODUCT_CODE,@nSpId SP_ID,A.quantity AS XN_QTY 
	  FROM ind01106 A (NOLOCK)
	  WHERE A.inv_id =@CMEMOID and isnull(a.ps_id,'')<>''

	 lblupdatepmt:
	EXEC SPSIS_UPDATEPMT @NSPID


END TRY
BEGIN CATCH
	SET @CERRMSG='P:SPSIS_SYNCH_UPLOADDATA_WSL_OPT,spid:'+@nSpId+' MEMO ID :'+@CMEMOID+' STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO EXIT_PROC
END CATCH

EXIT_PROC:
    
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRMSG,'')='' AND @BSERIESMISMATCHFOUND<>1
			commit

		ELSE
			ROLLBACK
    END
	DECLARE @nSpidCopy VARCHAR(50)
	SET @nSpIdCopy=LEFT(@nSPId,38)+LEFT(@cMemoId,2)

	set @CSTEP='132'
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

	EXEC SP3S_DELETE_UPLOAD_WSLMERGE_TABLES @nSpId

		set @CSTEP='134'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

	IF @bAddmode=0
		EXEC SP3S_DELETE_UPLOAD_WSLMERGE_TABLES @nSpIdCopy

	declare @cText VARCHAR(20)
	set @cText=ISNULL(@CMEMOID,'')+':'+(CASE WHEN @BADDMODE=1 THEN 'ADDMODE' ELSE 'EDITMODE' END)
		set @CSTEP='136'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,@cText,1


END	
---END OF PROCEDURE - SP3S_SYNCH_UPLOADDATA_WSL_OPT
