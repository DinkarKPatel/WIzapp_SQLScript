CREATE PROCEDURE SP_PRD_CUTTING_SUMMARY
(
  @DFM_DT DATETIME='',
  @TO_DT DATETIME=''
  
)
AS
BEGIN
 
 
      IF OBJECT_ID('TEMPDB..#TMPORDER','U') IS NOT NULL
         DROP TABLE #TMPORDER
     
    SELECT  MST.MEMO_ID AS ORDER_ID
			,MST.MEMO_NO AS ORDER_NO
			,MST.MEMO_DT  AS ORDER_DT
			,MST.ARTICLE_SET_CODE
		    ,DET1.QUANTITY AS WO_QTY
		    ,B.ARTICLE_CODE AS COMPONENT_CODE ,
		    A.BOM_ARTICLE_CODE 
			
	INTO #TMPORDER  
	FROM PRD_WO_ART_BOM A (NOLOCK)      
	JOIN PRD_WO_DET B (NOLOCK) ON A.REF_ROW_ID = B.ROW_ID
	JOIN PRD_WO_MST MST (NOLOCK) ON B.MEMO_ID=MST.MEMO_ID
	JOIN
	(
	 SELECT  REF_ROW_ID,SUM(QUANTITY) AS QUANTITY 
	 FROM PRD_WO_SUB_DET C
	 GROUP BY REF_ROW_ID
	) DET1 ON B.ROW_ID=DET1.REF_ROW_ID
	WHERE MST.CANCELLED =0
	GROUP BY MST.MEMO_ID ,MST.MEMO_NO ,MST.MEMO_DT ,MST.ARTICLE_SET_CODE,DET1.QUANTITY
	,B.ARTICLE_CODE ,A.BOM_ARTICLE_CODE  
	
	
	
	 IF OBJECT_ID('TEMPDB..#TMPCUTTING','U') IS NOT NULL
         DROP TABLE #TMPCUTTING
	
	SELECT REF_WO_ID,D.COMPONENT_CODE ,D.COM_PARA1_CODE ,D.COM_PARA2_CODE ,
	       S.ARTICLE_CODE ,M.MEMO_DT ,D.QUANTITY
	INTO #TMPCUTTING
	FROM PRD_STK_TRANSFER_DET D          
	JOIN PRD_STK_TRANSFER_MST M ON D.MEMO_ID = M.MEMO_ID           
	JOIN PRD_SKU S ON D.PRODUCT_UID = S.PRODUCT_UID      
	WHERE  M.CANCELLED =0    AND M.MEMO_DT BETWEEN @DFM_DT AND @TO_DT   
	UNION ALL 
	SELECT REF_WO_ID,D.COMPONENT_CODE ,D.COM_PARA1_CODE ,D.COM_PARA2_CODE ,S.ARTICLE_CODE ,M.MEMO_DT ,
		   D.QUANTITY
	FROM PRD_STK_TRANSFER_DET_PENDING  D          
	JOIN PRD_STK_TRANSFER_MST_PENDING M ON D.MEMO_ID = M.MEMO_ID           
	JOIN PRD_SKU S ON D.PRODUCT_UID = S.PRODUCT_UID      
	WHERE M.CANCELLED =0   AND M.MEMO_DT BETWEEN @DFM_DT AND @TO_DT 
	
     IF OBJECT_ID('TEMPDB..#TMPSUMMARY','U') IS NOT NULL
         DROP TABLE #TMPSUMMARY
    
    SELECT A.ORDER_ID , A.ARTICLE_SET_CODE,A.WO_QTY,A.COMPONENT_CODE,A.BOM_ARTICLE_CODE,B.MEMO_DT AS CUTTING_DT,
           SR=ROW_NUMBER () OVER (PARTITION BY A.ORDER_ID ORDER BY A.ORDER_ID),B.CUTTING_QTY
    INTO #TMPSUMMARY     
    FROM #TMPORDER A
    JOIN
    (
      
      SELECT A.MEMO_DT, A.REF_WO_ID ,A.COMPONENT_CODE ,A.ARTICLE_CODE,SUM(QUANTITY) AS  CUTTING_QTY 
      FROM #TMPCUTTING A
      GROUP BY A.MEMO_DT,A.REF_WO_ID ,A.COMPONENT_CODE ,A.ARTICLE_CODE
    
    ) B ON A.ORDER_ID =B.REF_WO_ID AND A.COMPONENT_CODE=B.COMPONENT_CODE 
    AND A.BOM_ARTICLE_CODE =B.ARTICLE_CODE
    
   UPDATE #TMPSUMMARY SET WO_QTY =0 WHERE SR>1
   
   SELECT ART.ARTICLE_NO AS FG_ARTICLE_NO,
          SUM(WO_QTY) AS  WO_QTY ,
          ART1.ARTICLE_NO AS COMPONENT_NO,
          ART2.ARTICLE_NO AS BOM_ARTICLE_NO,
          A.CUTTING_DT ,
          SUM(A.CUTTING_QTY) AS CUTTING_QTY,
          UOM.UOM_NAME
   FROM #TMPSUMMARY A
   JOIN ARTICLE ART ON A.ARTICLE_SET_CODE =ART.ARTICLE_CODE 
   JOIN ARTICLE ART1 ON A.COMPONENT_CODE =ART1.ARTICLE_CODE 
   JOIN ARTICLE ART2 ON A.BOM_ARTICLE_CODE =ART2.ARTICLE_CODE 
   JOIN UOM ON UOM.UOM_CODE =ART2.UOM_CODE 
   GROUP BY A.CUTTING_DT ,ART.ARTICLE_NO,ART1.ARTICLE_NO,
   ART2.ARTICLE_NO,UOM.UOM_NAME
   ORDER BY ART.ARTICLE_NO,SUM(WO_QTY) DESC
 
 END
