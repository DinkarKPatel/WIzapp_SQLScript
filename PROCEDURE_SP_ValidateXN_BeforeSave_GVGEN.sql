CREATE PROCEDURE SP_VALIDATEXN_BEFORESAVE_GVGEN--(LocId 3 digit change by Sanjay:30-10-2024)
(
	@NSPID			NUMERIC(5),
	@CUSERCODE		NVARCHAR(10),
	@NUPDATEMODE	INT,
	@CRETVAL		NVARCHAR(MAX) OUTPUT
)
--WITH ENCRYPTION
AS
BEGIN
BEGIN TRY
DECLARE @CCMD			NVARCHAR(MAX),
		@CTEMPMASTERTABLE		NVARCHAR(MAX),
		@CTEMPDETAILTABLE		NVARCHAR(MAX),
		@CTEMPDBNAME	VARCHAR(100),
		@NSTEP	INT	

SET @NSTEP=0
SET @CTEMPDBNAME = (SELECT DBO.FN_GETTEMPDBNAME())
SET @NSTEP=1		



SET @CTEMPMASTERTABLE=@CTEMPDBNAME+'TEMP_GV_GEN_MST_'+LTRIM(RTRIM(STR(@NSPID)))
SET @CTEMPDETAILTABLE=@CTEMPDBNAME+'TEMP_GV_GEN_DET_'+LTRIM(RTRIM(STR(@NSPID)))


SET @CRETVAL=''

--VALIDATING RECORD COUNT
SET @CCMD=N'IF (SELECT COUNT(*) FROM '+@CTEMPMASTERTABLE+')=0
				SET @CRETVAL1=''NO RECORD FOUND AT MASTER LEVEL..... CANNOT PROCEED'''

EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
GOTO ATLAST

--VALIDATING FINYEAR
SET @CCMD=N'SELECT @CRETVAL1=(CASE WHEN ''01'' + LTRIM(RTRIM((DBO.FN_GETFINYEAR(MEMO_DT))))=FIN_YEAR THEN '''' 
			ELSE ''MEMO DATE IS NOT IN CURRENT FINANCIAL YEAR...CAN NOT PROCEED'' END)
			FROM '+ @CTEMPMASTERTABLE 
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
GOTO ATLAST

--VALIDATING USER CODE
IF @NUPDATEMODE=1
BEGIN
	SET @CCMD=N'UPDATE '+ @CTEMPMASTERTABLE + N' SET USER_CODE='''+@CUSERCODE+''' WHERE LTRIM(RTRIM(USER_CODE)) = '''''
	EXEC SP_EXECUTESQL @CCMD
END

SET @CCMD=N'IF EXISTS (SELECT TOP 1 A.USER_CODE FROM '+ @CTEMPMASTERTABLE + N' A 
						LEFT OUTER JOIN USERS B ON B.USER_CODE=A.USER_CODE
						WHERE B.USER_CODE IS NULL)
				SET @CRETVAL1=''INVALID USER DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	GOTO ATLAST
	
--**************************************************VALIDATION FOR PED01106*****************************************************

--VALIDATING RECORD COUNT
SET @CCMD=N'IF NOT EXISTS (SELECT TOP 1 GV_SRNO FROM '+@CTEMPDETAILTABLE+') OR 
				NOT EXISTS	(SELECT TOP 1 GV_SRNO FROM '+ @CTEMPDETAILTABLE + ' WHERE LTRIM(RTRIM(GV_SRNO))<>'''')
				SET @CRETVAL1=''BLANK DETAILS CAN NOT BE SAVED..... PLEASE CHECK'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
GOTO ATLAST


SET @CRETVAL=''

ATLAST:

IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	SET @CRETVAL=ISNULL(@CRETVAL,'') +'(SP_VALIDATEXN_BEFORESAVE_GVGEN)'
ELSE
BEGIN
	IF OBJECT_ID('TEMPDB..#TMPGVGENERR','U') IS NOT NULL
		DROP TABLE #TMPGVGENERR	
		
	SELECT XN_DESC AS ERRMSG INTO #TMPGVGENERR FROM XNSINFO	WHERE 1=2
	
	DECLARE @nGvType NUMERIC(1,0),@nValidationSource NUMERIC(1,0)

	SET @cCmd=N'SELECT TOP 1 @nGvType=mode,@nValidationSource=validation_source FROM '+@CTEMPMASTERTABLE
	EXEC SP_EXECUTESQL @cCmd,N'@nGvType NUMERIC(1,0) OUTPUT,@nValidationSource NUMERIC(1,0) OUTPUT',
	@nGvType OUTPUT,@nValidationSource OUTPUT

	EXEC SP_VALIDATE_IMPORTDATA
	@CXNTYPE='GV',
	@CTEMPTABLEPARA=@CTEMPDETAILTABLE,
	@nGvtype=@nGvType,
	@nValidationSource=@nValidationSource


	
	
	IF EXISTS (SELECT TOP 1 * FROM #TMPGVGENERR)
		SET @CRETVAL='SOME ERROR FOUND IN DATA (SP_VALIDATEXN_BEFORESAVE_GVGEN)'
END	

END TRY
BEGIN CATCH
	SET @CRETVAL=N'ERROR FOUND IN PROCEDURE : SP_VALIDATEXN_BEFORESAVE_GVGEN '+ISNULL(ERROR_PROCEDURE(),'NULL P')+' AT LINE NO. :'+  
	  ISNULL(LTRIM(RTRIM(STR(ERROR_LINE()))),'NULL LINE')+' MSG :'+ISNULL(ERROR_MESSAGE(),'NULL MSG')  
END CATCH
END
