CREATE FUNCTION FN_ACT_BANK_OPENING ( @CACCODE VARCHAR(20), @CDEPTID VARCHAR(5), @DOPENINGDT DATETIME, @CFINYEAR VARCHAR(10), @cSPID VARCHAR(50) )
RETURNS NUMERIC(14,2)
--WITH ENCRYPTION
AS 
BEGIN
	DECLARE @NOPENING NUMERIC(14,2) 
	
			
	-- TEMP TABLE TO STORED THE LIST OF LOCATIONS CURRENTLY SELECTED
	-- JOIN THIS TABLE IN EACH QUERY TO GET THE RESULT FOR SINGLE, MULTIPLE OR ALL LOCATIONS
	DECLARE @LOCLISTC TABLE ( DEPT_ID CHAR(5) )
	if ISNULL(@cSPID,'')=''
		SET @cSPID=CONVERT(VARCHAR(50),@@SPID)

	IF @CDEPTID <> ''
		INSERT @LOCLISTC VALUES ( @CDEPTID )
	ELSE
	BEGIN
		IF EXISTS ( SELECT TOP 1 DEPT_ID FROM ACT_FILTER_LOC WHERE SP_ID = @cSPID AND dept_id<>'')
			INSERT @LOCLISTC
			SELECT DEPT_ID FROM ACT_FILTER_LOC WHERE SP_ID = @cSPID AND dept_id<>''
		ELSE
			INSERT @LOCLISTC
			SELECT DEPT_ID FROM LOCATION WHERE LOC_TYPE=1 AND INACTIVE=0 AND DEPT_ID=MAJOR_DEPT_ID
	END


	SET @NOPENING = 0

		IF EXISTS(SELECT * FROM BANK_OP_CHQ WHERE BANK_AC_CODE =@CACCODE AND CHQ_AMT<>0)
		BEGIN
			SELECT @NOPENING = SUM((CASE WHEN CHQ_AMT_TYPE ='DR' THEN 1 ELSE -1 END) * CHQ_AMT)*-1
			FROM BANK_OP_CHQ WHERE BANK_AC_CODE =@CACCODE AND (RECON_DT='' OR RECON_DT>@DOPENINGDT)
		END 
		ELSE
			BEGIN
				IF @CDEPTID <> ''
					BEGIN
										
							SELECT @CFINYEAR = DBO.FN_GETMINFINYEARLOCOB(@CDEPTID, @CACCODE)
							IF @CFINYEAR IS NULL
								GOTO NEXT_PROC

							SELECT @NOPENING = SUM(CASE WHEN OPENING_BALANCE_CR_DR='CR' THEN -1 ELSE 1 END * OPENING_BALANCE)
								FROM LOCOB WHERE AC_CODE = @CACCODE 
								AND DEPT_ID = @CDEPTID
								AND FIN_YEAR = @CFINYEAR
						   
					END
				ELSE
				BEGIN	
					SELECT @NOPENING = SUM(CASE WHEN OPENING_BALANCE_CR_DR='CR' THEN -1 ELSE 1 END * OPENING_BALANCE)
					FROM LOCOB 
					JOIN 
					(
						SELECT LOC.DEPT_ID, DBO.FN_GETMINFINYEARLOCOB(LOC.DEPT_ID, @CACCODE) AS FIN_YEAR 
						FROM LOCATION LOC
						JOIN @LOCLISTC LOCLIST ON LOC.DEPT_ID = LOCLIST.DEPT_ID
						WHERE LOC.LOC_TYPE = 1
						AND DBO.FN_GETMINFINYEARLOCOB(LOC.DEPT_ID, @CACCODE) IS NOT NULL
					) FIRST_FIN_YEAR
					ON LOCOB.DEPT_ID = FIRST_FIN_YEAR.DEPT_ID AND LOCOB.FIN_YEAR = FIRST_FIN_YEAR.FIN_YEAR
					WHERE AC_CODE = @CACCODE 
				END
			END 

NEXT_PROC:

	IF @DOPENINGDT <> '' -- AND ( CHARINDEX( @CHEADCODE, @CSTOCKINHANDTREE ) = 0 )
	BEGIN
		---- ADDING FROM TRANSACTIONS
		--SELECT @NOPENING = ISNULL(@NOPENING,0) + ISNULL( SUM(A.DEBIT_AMOUNT) - SUM(A.CREDIT_AMOUNT), 0 )
		--FROM VD01106 A
		--JOIN VM01106 B ON B.VM_ID = A.VM_ID
		--WHERE A.AC_CODE = @CACCODE
		--AND B.CANCELLED = 0 AND ( ISNULL(B.OP_ENTRY,0)=0 OR @CFINYEAR > B.FIN_YEAR )
		--AND A.COMPANY_CODE = @CCOMPANYCODE 
		---- AND B.FIN_YEAR = @CFINYEAR
		--AND B.VOUCHER_DT < @DOPENINGDT
		--AND B.DEPT_ID = ( CASE WHEN @CDEPTID <> '' THEN @CDEPTID ELSE B.DEPT_ID END )
		
		SELECT @NOPENING = ISNULL(@NOPENING,0) + ISNULL((SUM(CASE WHEN VA.RECON_DT<@DOPENINGDT THEN  DEBIT_AMOUNT ELSE 0 END) -
			SUM(CASE WHEN VA.RECON_DT<@DOPENINGDT THEN  CREDIT_AMOUNT ELSE 0 END))  ,0)
		FROM VD01106 VA 
		JOIN VM01106 VB ON VA.VM_ID=VB.VM_ID 
		JOIN @LOCLISTC LOCLIST ON va.cost_center_dept_id = LOCLIST.DEPT_ID
		WHERE VB.CANCELLED = 0  
		AND VA.RECON_DT<@DOPENINGDT
		AND VA.AC_CODE=@CACCODE AND  VA.RECON_DT<>'' 
		-- AND VB.DEPT_ID = ( CASE WHEN @CDEPTID <> '' THEN @CDEPTID ELSE VB.DEPT_ID END )
		GROUP BY VA.AC_CODE 
	
	
		---- GETTING OPENING AMOUNT OF OPENING CHEQUES
	--SELECT  @NOPENING =   ISNULL(@NOPENING,0) + 
	--ISNULL(CASE WHEN OP_BALANCE_TYPE ='DR' THEN 1 ELSE -1 END * OP_BALANCE  ,0) 
	--FROM BANK_OP_BALANCE  
	--JOIN LM01106 B ON BANK_OP_BALANCE .BANK_AC_CODE = B.AC_CODE 
	--WHERE BANK_AC_CODE = @CACCODE
	
		---- GETTING OPENING AMOUNT OF OPENING CHEQUES
		--SELECT  @NOPENING =  ISNULL(@NOPENING,0) + 
		--ISNULL(CASE WHEN CHQ_AMT_TYPE ='DR' THEN 1 ELSE -1 END * CHQ_AMT  ,0) 
		--FROM BANK_OP_CHQ  
		--JOIN LM01106 B ON BANK_OP_CHQ.BANK_AC_CODE = B.AC_CODE 
		--WHERE BANK_AC_CODE = @CACCODE AND RECON_DT <> '' AND RECON_DT <@DOPENINGDT
	
	END


END_PROC:
	RETURN ISNULL(@NOPENING,0)
END