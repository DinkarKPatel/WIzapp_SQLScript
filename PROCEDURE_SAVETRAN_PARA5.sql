CREATE PROCEDURE [DBO].[SAVETRAN_PARA5]   
(  
 @PARA5_CODE    VARCHAR(10) = '',  
 @PARA5_NAME    VARCHAR(300)='',  
 @ALIAS       VARCHAR(50) = '',  
 @INACTIVE      BIT = 0,       
 @REMARKS      VARCHAR(500) = '',  
 @ERRMSG_OUT    VARCHAR(MAX) OUT ,
 @BDELETE BIT=0 
)  
AS  
BEGIN  
 DECLARE @CSTEP INT ,@CERRMSG VARCHAR(1000) 
 DECLARE @TEMP_PARA5_CODE VARCHAR(9) = ''  
   
 BEGIN TRY  
 BEGIN TRANSACTION
 SET @ERRMSG_OUT = ''  
 SET @CERRMSG=''
 SET @CSTEP=''
 
 IF @BDELETE=1
	BEGIN
	 IF @PARA5_CODE='0000000'
	   BEGIN
		   SET @CERRMSG='DEFAULT PARA5 CAN NOT BE DELETED'
		   GOTO END_PROC
	   END
	   DELETE FROM PARA5 WHERE PARA5_CODE =@PARA5_CODE
	   GOTO END_PROC
	END	
	
  IF (RTRIM(LTRIM(@PARA5_CODE)) = '')  
  BEGIN  
   IF EXISTS(SELECT [PARA5_NAME] FROM [PARA5] WHERE [PARA5_NAME] = @PARA5_NAME)  
   BEGIN  
    SET @CSTEP=5  
    SET @ERRMSG_OUT = 'PARA5 NAME: '+@PARA5_NAME + ' ALREADY EXIST.'  
    PRINT @ERRMSG_OUT  
    SET @CERRMSG=@ERRMSG_OUT
   END  
   ELSE  
   BEGIN  
    SET @CSTEP=10  
    EXEC DBO.GETNEXTKEY 'PARA5', 'PARA5_CODE', 7, '00', 1, '', 2, @TEMP_PARA5_CODE OUTPUT   
      
    PRINT 'PARA5 CODE: ' + @TEMP_PARA5_CODE  
      
    SET @CSTEP=15  
    INSERT PARA5 (PARA5_CODE, PARA5_NAME, LAST_UPDATE, ALIAS, INACTIVE, REMARKS, LAST_MODIFIED_ON)  
    VALUES (@TEMP_PARA5_CODE, @PARA5_NAME, GETDATE(), @ALIAS, @INACTIVE, @REMARKS, GETDATE())  
      
    SET @ERRMSG_OUT = 'PARA5: '+ @PARA5_NAME +' CREATED SUCCESSFULLY.'  
    PRINT @ERRMSG_OUT  
   END  
  END  
  ELSE  
  BEGIN  
   SET @TEMP_PARA5_CODE = @PARA5_CODE  
   IF NOT EXISTS(SELECT [PARA5_CODE] FROM [PARA5] WHERE [PARA5_CODE] = @PARA5_CODE)  
   BEGIN  
    IF EXISTS(SELECT [PARA5_NAME] FROM [PARA5] WHERE [PARA5_NAME] = @PARA5_NAME)  
    BEGIN  
     SET @CSTEP=20  
     SET @ERRMSG_OUT = 'PARA5 NAME: '+@PARA5_NAME + ' ALREADY EXIST.'  
     PRINT @ERRMSG_OUT  
     SET @CERRMSG=@ERRMSG_OUT
    END  
    ELSE  
    BEGIN  
     SET @CSTEP=25  
     EXEC DBO.GETNEXTKEY 'PARA5', 'PARA5_CODE', 7, '00', 1, '', 2, @TEMP_PARA5_CODE OUTPUT   
       
     PRINT 'PARA5 CODE: ' + @TEMP_PARA5_CODE  
       
     SET @CSTEP=30  
     INSERT PARA5 (PARA5_CODE, PARA5_NAME, LAST_UPDATE, ALIAS, INACTIVE, REMARKS, LAST_MODIFIED_ON)  
     VALUES (@TEMP_PARA5_CODE, @PARA5_NAME, GETDATE(), @ALIAS, @INACTIVE, @REMARKS, GETDATE())  
       
     SET @ERRMSG_OUT = 'PARA5: '+ @PARA5_NAME +' CREATED SUCCESSFULLY.'  
     PRINT @ERRMSG_OUT  
    END  
   END  
   ELSE  
   BEGIN  
    SET @CSTEP=35  
    PRINT 'PARA5 CODE: ' + @TEMP_PARA5_CODE  
    IF EXISTS(SELECT [PARA5_NAME] FROM [PARA5] WHERE [PARA5_NAME] = @PARA5_NAME AND PARA5_CODE <> @TEMP_PARA5_CODE)
	BEGIN
		SET @CSTEP=20
		SET @ERRMSG_OUT = 'PARA5 NAME: '+@PARA5_NAME + ' ALREADY EXIST.'
		SET @CERRMSG=@ERRMSG_OUT
					
	END
	ELSE
	BEGIN 
    UPDATE [PARA5]  
    SET [PARA5_NAME] = @PARA5_NAME,   
      LAST_UPDATE = GETDATE(),   
      ALIAS = @ALIAS,   
      INACTIVE = @INACTIVE,   
      REMARKS = @REMARKS,   
      LAST_MODIFIED_ON = GETDATE()  
    WHERE PARA5_CODE = @TEMP_PARA5_CODE  
      
    SET @ERRMSG_OUT = 'PARA5: '+ @PARA5_NAME +' UPDTED SUCCESSFULLY.'  
    PRINT @ERRMSG_OUT  
   END  
  END 
  END 
 END TRY  
BEGIN CATCH  
     SET @ERRMSG_OUT='ERROR: [P]: SAVETRAN_PARA5, [STEP]: '+CAST(@CSTEP AS VARCHAR(5))+', [MESSAGE]: ' + ERROR_MESSAGE()
	PRINT @ERRMSG_OUT
	SET @CERRMSG=@ERRMSG_OUT
	GOTO END_PROC  
END CATCH   
END_PROC:
	
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL( @CERRMSG,'')='' 
			COMMIT TRANSACTION
		ELSE
			ROLLBACK
	END

	SELECT @CERRMSG AS ERRMSG
   
END
