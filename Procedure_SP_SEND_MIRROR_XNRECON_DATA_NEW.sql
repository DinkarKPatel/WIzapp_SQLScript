create PROCEDURE SP_SEND_MIRROR_XNRECON_DATA_NEW
(	
	 @CUPLOADEDXNID VARCHAR(50)
	,@CCURLOCID VARCHAR(5)
	,@BACKNOWLEDGE BIT=0
	,@CERRMSG VARCHAR(1000) OUTPUT
)	
--WITH ENCRYPTION
AS

BEGIN
	DECLARE @CMEMOID VARCHAR(50),@CLOCID VARCHAR(2),@HODEPT_ID VARCHAR(2),@CSTEP varchar(20),@bserverloc bit

	
BEGIN TRY 

      SELECT @CLOCID=value  FROM CONFIG WHERE CONFIG_OPTION ='LOCATION_ID'
	  SELECT @HODEPT_ID=value FROM CONFIG WHERE CONFIG_OPTION ='HO_LOCATION_ID'

	  select @bserverloc=server_loc  from location where dept_id =@CLOCID


	  IF (@CLOCID=@HODEPT_ID OR ISNULL(@BSERVERLOC,0)=1)
	  GOTO END_PROC
	
	set @CSTEP='10'
	set @CMEMOID=@CUPLOADEDXNID

	---- IF NO MEMO FOUND , JUST END THE PROCESS
	IF ISNULL(@CMEMOID,'')=''
		GOTO END_PROC
	
	set @CSTEP='20'

    SELECT DISTINCT XNRECON_HIST_MST.*,'XNRECON_XNRECON_HIST_MST_UPLOAD' AS TARGET_TABLENAME FROM XNRECON_HIST_MST WHERE recon_id =@CMEMOID

	SELECT DISTINCT XNRECON_HIST_det.*,'XNRECON_XNRECON_HIST_DET_UPLOAD' AS TARGET_TABLENAME FROM XNRECON_HIST_det WHERE recon_id=@CMEMOID
	
	GOTO END_PROC
	
END TRY
BEGIN CATCH
	SET @CERRMSG='P: SP_SEND_MIRROR_XNRECON_DATA_NEW, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO END_PROC
END CATCH 		
END_PROC:
	
END



