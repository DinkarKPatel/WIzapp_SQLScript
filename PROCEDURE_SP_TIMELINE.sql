CREATE PROC SP_TIMELINE
(
	@NHOUR INT ,
	@NMINUTE INT ,
	@CDAYSTART VARCHAR(10),
	@CDAYEND VARCHAR(10),
	@CFROMDT VARCHAR(10),
	@CTODT VARCHAR(10),
	@CJOIN VARCHAR(MAX),
	@CFILTER VARCHAR(MAX)
)
--WITH ENCRYPTION
AS
BEGIN


			DECLARE @DSDATE DATETIME, @DEDATE DATETIME, @DDATECTR DATETIME, @DSTIME DATETIME   
			DECLARE @CCMD NVARCHAR(MAX)
			SET @DSDATE = @CFROMDT
			SET @DDATECTR = @DSDATE 
			SET @DEDATE = DATEADD(SS, -1, DATEADD(DD, 1, @DSDATE ))

			IF OBJECT_ID('TEMPDB..#TBLTIME','U') IS NOT NULL
					DROP TABLE #TBLTIME
			CREATE TABLE #TBLTIME ( DSTIME DATETIME, DETIME DATETIME )  

			SET @DSTIME = @DSDATE 
			SET @DDATECTR = DATEADD(HH, CAST(LEFT(@CDAYSTART,2) AS INT), @DSDATE)
			SET @DDATECTR = DATEADD(MI, CAST(SUBSTRING(@CDAYSTART,3,2) AS INT), @DDATECTR)

			INSERT INTO #TBLTIME
			SELECT DATEADD(SS, 1, @DSTIME), @DDATECTR


			WHILE @DDATECTR <= @DEDATE
			BEGIN
						SET @DSTIME = @DDATECTR
						IF @NHOUR > 0 
							SET @DDATECTR = DATEADD(HH, @NHOUR, @DDATECTR)

						IF @NMINUTE > 0  
							SET @DDATECTR = DATEADD(MI, @NMINUTE, @DDATECTR)

						IF LEFT(DBO.FN_GETTIME( @DDATECTR ),4) > @CDAYEND 
							BREAK
						ELSE
							INSERT INTO #TBLTIME SELECT DATEADD(SS, 1, @DSTIME), @DDATECTR 
			END 
			
			INSERT INTO #TBLTIME SELECT DATEADD(SS, 1, @DSTIME), @DEDATE 

			IF OBJECT_ID('TEMPDB..#SLSRF','U')IS NOT NULL
				DROP TABLE #SLSRF
			CREATE TABLE #SLSRF ( XN_DT DATETIME, XN_TIME DATETIME, XN_ID VARCHAR(40), XN_QTY NUMERIC(10,2), XN_NET NUMERIC(10,2) ) 
			
			SET @CCMD=N'SELECT CM_DT,CM_TIME, D.CM_ID, 
					 SUM(QUANTITY) AS XN_QTY,  
					 SUM(RFNET) AS XN_NET
			FROM CMD01106 A (NOLOCK)
			JOIN CMM01106  D (NOLOCK) ON A.CM_ID = D.CM_ID'  
			+ISNULL(@CJOIN,'')+' WHERE D.CM_DT BETWEEN '''+@CFROMDT+''' AND '''+@CTODT+''' '+ISNULL(@CFILTER,'')+'
			GROUP BY CM_DT, CM_TIME, D.CM_ID'

			PRINT @CCMD
			INSERT INTO #SLSRF ( XN_DT, XN_TIME, XN_ID, XN_QTY, XN_NET ) 
			EXEC SP_EXECUTESQL @CCMD


			SELECT XN_DT,DATENAME(DW,XN_DT)AS DT_NAME,  
				   LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)AS TIMELINE, 
				   SUM(CASE WHEN DBO.FN_GETTIME( XN_TIME ) BETWEEN DBO.FN_GETTIME( DSTIME ) AND DBO.FN_GETTIME( DETIME ) THEN 1 ELSE 0 END ) AS BILL_COUNT,
				   SUM(CASE WHEN DBO.FN_GETTIME( XN_TIME ) BETWEEN DBO.FN_GETTIME( DSTIME ) AND DBO.FN_GETTIME( DETIME ) THEN XN_QTY ELSE 0 END ) AS BILL_QTY,
				   SUM(CASE WHEN DBO.FN_GETTIME( XN_TIME ) BETWEEN DBO.FN_GETTIME( DSTIME ) AND DBO.FN_GETTIME( DETIME ) THEN XN_NET ELSE 0 END ) AS BILL_AMOUNT
			FROM #SLSRF, #TBLTIME
			GROUP BY XN_DT, DSTIME, DETIME

			SELECT XN_DT,DATENAME(DW,XN_DT)AS DT_NAME,
				   LEFT(DBO.FN_GETTIME( DETIME ),4)AS TIMELINE,  
				   SUM(CASE WHEN DBO.FN_GETTIME( XN_TIME ) <= DBO.FN_GETTIME( DETIME ) THEN 1 ELSE 0 END ) AS BILL_COUNT, 
				   SUM(CASE WHEN DBO.FN_GETTIME( XN_TIME ) <= DBO.FN_GETTIME( DETIME ) THEN XN_QTY ELSE 0 END ) AS BILL_QTY,
				   SUM(CASE WHEN DBO.FN_GETTIME( XN_TIME ) <= DBO.FN_GETTIME( DETIME ) THEN XN_NET ELSE 0 END ) AS BILL_AMOUNT
			FROM #SLSRF, #TBLTIME
			GROUP BY XN_DT, DSTIME, DETIME 

END
