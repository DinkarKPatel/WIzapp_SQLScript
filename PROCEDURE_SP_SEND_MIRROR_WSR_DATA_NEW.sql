CREATE PROCEDURE SP_SEND_MIRROR_WSR_DATA_NEW  --(LocId 3 digit change only increased the parameter width by Sanjay:01-11-2024)
  @CUPLOADEDXNID VARCHAR(50)  
 ,@CCURLOCID VARCHAR(4)    
 ,@BDONOTCHKPENDINGLM BIT=0
 ,@BACKNOWLEDGE BIT=0  
 ,@CERRMSG VARCHAR(1000) OUTPUT  
--WITH ENCRYPTION   
AS  
/*  
 SP_SEND_MIRROR_WSR_DATA_NEW_208_29_1_14 : THIS PROCEDURE WILL SEND WHOLESALE DATA FROM LOCATION TO HO.  
*/  
BEGIN  
 DECLARE @CMEMOID VARCHAR(50),@BRECFOUND BIT,@CSTEP VARCHAR(5),@BSENDOFFLINE BIT   
   
BEGIN TRY    
 IF ISNULL(@CUPLOADEDXNID,'')=''  
  GOTO END_PROC  
    
 SET @CMEMOID = @CUPLOADEDXNID  
   
 IF NOT EXISTS (SELECT TOP 1 * FROM CNM01106 WHERE CN_ID=@CMEMOID)  
 BEGIN  
  SET @CERRMSG='INVALID MEMO ID :'+@CMEMOID  
  GOTO END_PROC  
 END  

 DECLARE @BPENDINGMSTFOUND BIT
 SET @BPENDINGMSTFOUND=0
	
	IF @BDONOTCHKPENDINGLM=0
	BEGIN
		DECLARE @nInvMode NUMERIC(1,0)
		SELECT @nInvMode=mode FROM cnm01106 (NOLOCK) WHERE cn_id=@CUPLOADEDXNID

		IF @nInvMode<>2
			EXEC SP_SEND_MIRROR_XNSMST_DATA_NEW 'WSR',@CMEMOID,@CCURLOCID,@BDONOTCHKPENDINGLM
			,@BPENDINGMSTFOUND OUTPUT
			,@CERRMSG OUTPUT
	END

	PRINT (CASE WHEN @BPENDINGMSTFOUND=1 THEN 'PMST-Y' ELSE 'PMST-N' END)
	
	IF ISNULL(@BPENDINGMSTFOUND,0)=1
	BEGIN
		PRINT 'PENDING MASTER FOUND'
		GOTO END_PROC
	END
	
LBLTABLEINFO:  
 SET @CSTEP=50  
   
 IF @BACKNOWLEDGE=1  
  GOTO END_PROC  
  
 SET @CSTEP=55  
  
 ---- SEND THE WHOLESALE MEMO MASTER TABLE  
 SELECT DISTINCT 'WSR_CNM01106_MIRROR' AS TARGET_TABLENAME,A.*,@CMEMOID AS XN_ID   
 FROM CNM01106 A (NOLOCK) WHERE A.CN_ID=@CMEMOID  
   
 SET @CSTEP=60  
 ---- SEND THE WHOLESALE MEMO DETAIL TABLE  
 SELECT DISTINCT 'WSR_CND01106_MIRROR' AS TARGET_TABLENAME,A.* FROM CND01106 A (NOLOCK)  
 JOIN CNM01106 B (NOLOCK) ON A.CN_ID=B.CN_ID   
 WHERE A.CN_ID=@CMEMOID  
 SET @CSTEP=70 
 ---- SEND THE WHOLESALE MEMO DETAIL TABLE  
 SELECT DISTINCT 'WSR_PMT01106_MIRROR' AS TARGET_TABLENAME,@CMEMOID AS wsr_memo_ID,A.DEPT_ID,A.product_code,A.BIN_ID,A.quantity_in_stock FROM PMT01106 A (NOLOCK)  
 JOIN cnd01106 B(NOLOCK) ON B.product_code=A.product_code 
 WHERE B.cn_id=@CMEMOID

 SELECT 'WSR_XN_AUDIT_TRIAL_DET_MIRROR' AS TARGET_TABLENAME,A.*,@CMEMOID AS WSR_MEMO_ID FROM XN_AUDIT_TRIAL_DET A WHERE XN_TYPE ='WSR' AND XN_ID=@CMEMOID

 SELECT DISTINCT 'WSR_PAYMODE_XN_DET_MIRROR' AS TARGET_TABLENAME,A.* FROM PAYMODE_XN_DET A (NOLOCK)
 WHERE A.XN_TYPE='WSR' AND  A.MEMO_ID=@CMEMOID 
	
  
END TRY  
BEGIN CATCH  
 SET @CERRMSG='P: SP_SEND_MIRROR_WSR_DATA_NEW, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()  
 GOTO END_PROC  
END CATCH     
  
END_PROC:  
END  
---END OF PROCEDURE - SP_SEND_MIRROR_WSR_DATA_NEW  



