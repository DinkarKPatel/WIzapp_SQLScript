create PROCEDURE SP3S_PRINT_BUYER_ORDER_STOCK
(  
  @ORDER_ID VARCHAR(50),  
  @STKTRF INT=0 ,
  @CLOCID varchar(5)='',
  @NSPID VARCHAR(40)=''
 )  
AS  
BEGIN  
   SET NOCOUNT ON  
   
   	 DECLARE @CARTICLE_CODE VARCHAR(10),@CPARA1_CODE VARCHAR(10),@PARA2_CODE VARCHAR(10),
	@NQTY NUMERIC(10,0),@CORG_PRODUCT_CODE VARCHAR(100),@DTSQL NVARCHAR(MAX)
	
    DECLARE @CCONSIDER_DEFAULT_BIN_STOCK VARCHAR(5)
    SELECT TOP 1 @CCONSIDER_DEFAULT_BIN_STOCK=VALUE FROM CONFIG WHERE CONFIG_OPTION ='CONSIDER_DEFAULT_BIN_STOCK' 
 
 
IF @STKTRF IN(1,2)
   GOTO LBLSTKTRF  
ELSE IF @STKTRF=3
   GOTO LBLORDER
ELSE IF @STKTRF=4
   GOTO LBLBINSTK
   
		   IF OBJECT_ID ('TEMPDB..#TEMP0','U') IS NOT NULL  
			  DROP TABLE #TEMP0  

		   IF OBJECT_ID ('TEMPDB..#TEMP1','U') IS NOT NULL  
			  DROP TABLE #TEMP1   
		        
		   IF OBJECT_ID ('TEMPDB..#T1','U') IS NOT NULL  
			  DROP TABLE #T1 
		  
		   IF OBJECT_ID ('TEMPDB..#DIFF','U') IS NOT NULL  
			  DROP TABLE #DIFF  

		SELECT T.ORDER_NO,T.ORDER_DT,T.DELIVERY_DT
		,T.ARTICLE_CODE
		,T.AC_CODE,S.PRODUCT_CODE PRODUCT_CODE,T.QUANTITY ORDERED_QTY
		,T.PARA1_CODE,T.PARA2_CODE
		,P.BIN_ID,P.QUANTITY_IN_STOCK STOCK_QTY,P.ORDERING,CAST(0 AS INT)SNO
		INTO #TEMP0
		FROM
		(	SELECT M.ORDER_NO,M.ORDER_DT,M.DELIVERY_DT
			,D.ARTICLE_CODE
			,M.AC_CODE,D.PARA1_CODE,D.PARA2_CODE,SUM(D.QUANTITY)QUANTITY
			FROM BUYER_ORDER_MST M (NOLOCK)  
			JOIN BUYER_ORDER_DET D (NOLOCK) ON M.ORDER_ID=D.ORDER_ID  
			WHERE M.ORDER_ID=@ORDER_ID
			GROUP BY M.ORDER_NO,M.ORDER_DT,M.DELIVERY_DT,D.ARTICLE_CODE,M.AC_CODE,D.PARA1_CODE,D.PARA2_CODE
		)T
		JOIN SKU_AT S  (NOLOCK) ON S.ARTICLE_CODE=T.ARTICLE_CODE AND S.PARA1_CODE=T.PARA1_CODE AND S.PARA2_CODE=T.PARA2_CODE  
								AND (@ORDER_ID=@ORDER_ID 
								--AND S.PRODUCT_CODE NOT IN ('8904318346435','PIKKSCDCROCOR6041')
								)

		JOIN (SELECT LEFT(P.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',P.PRODUCT_CODE)-1,-1),LEN(P.PRODUCT_CODE ))) AS PRODUCT_CODE
			  ,BIN_ID
			  ,ORDERING=CASE WHEN CHARINDEX('@',ISNULL(P.PRODUCT_CODE,''))=0 THEN 0  
							 ELSE CAST(RIGHT(SUBSTRING(ISNULL(P.PRODUCT_CODE,''),CHARINDEX('@',ISNULL(P.PRODUCT_CODE,''))+1,100),4) AS INT)  
						END  
			 ,SUM(QUANTITY_IN_STOCK)QUANTITY_IN_STOCK 
			 FROM PMT01106 P (NOLOCK) 
			 JOIN SKU (NOLOCK) ON sku.product_code=p.product_code
			 WHERE P.QUANTITY_IN_STOCK>0 AND ISNULL(ER_FLAG,0) IN (0,1)
			 and DEPT_ID=@CLOCID
			 GROUP BY LEFT(P.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',P.PRODUCT_CODE)-1,-1),LEN(P.PRODUCT_CODE )))
					 ,BIN_ID
					 ,CASE WHEN CHARINDEX('@',ISNULL(P.PRODUCT_CODE,''))=0 THEN 0  
						   ELSE CAST(RIGHT(SUBSTRING(ISNULL(P.PRODUCT_CODE,''),CHARINDEX('@',ISNULL(P.PRODUCT_CODE,''))+1,100),4) AS INT)  
					  END							
			 )P ON ISNULL(S.PRODUCT_CODE,'')=ISNULL(P.PRODUCT_CODE,'')
		 
		 ;WITH CTE AS (SELECT *,R=ROW_NUMBER()OVER(PARTITION BY ARTICLE_CODE,PARA1_CODE,PARA2_CODE ORDER BY ARTICLE_CODE,PARA1_CODE,PARA2_CODE,ORDERING,BIN_ID,PRODUCT_CODE) FROM #TEMP0)
		 UPDATE T SET T.SNO=C.R 
		 FROM #TEMP0 T JOIN CTE C ON T.ARTICLE_CODE=C.ARTICLE_CODE AND T.PARA1_CODE=C.PARA1_CODE AND T.PARA2_CODE=C.PARA2_CODE 
		 AND T.PRODUCT_CODE=C.PRODUCT_CODE AND T.ORDERING=C.ORDERING AND T.BIN_ID=C.BIN_ID
		 
		 SELECT T1.ORDER_NO,T1.ORDER_DT,T1.DELIVERY_DT,T1.ARTICLE_CODE,T1.AC_CODE,T1.PRODUCT_CODE,T1.ORDERED_QTY
		 ,T1.PARA1_CODE,T1.PARA2_CODE,T1.BIN_ID,T1.ORDERING,T1.SNO,T1.STOCK_QTY
		 ,(SELECT SUM(T2.STOCK_QTY) FROM #TEMP0 T2 WHERE T1.ARTICLE_CODE=T2.ARTICLE_CODE AND T1.PARA1_CODE=T2.PARA1_CODE AND T1.PARA2_CODE=T2.PARA2_CODE AND T2.SNO<=T1.SNO)CUMM_QTY
		 INTO #T1
		 FROM #TEMP0 T1 
		 ORDER BY T1.ARTICLE_CODE,T1.PARA1_CODE,T1.PARA2_CODE,T1.SNO 
		 
		 SELECT T.ORDER_NO,T.ORDER_DT,T.DELIVERY_DT,T.ARTICLE_CODE,T.AC_CODE,T.PRODUCT_CODE,T.ORDERED_QTY
		 ,T.BIN_ID,T.ORDERING,T.STOCK_QTY,T.SNO,T.CUMM_QTY,T.PARA1_CODE,T.PARA2_CODE
		 INTO #TEMP1
		 FROM #T1 AS T
		 WHERE T.CUMM_QTY<=T.ORDERED_QTY
		 
		 UPDATE #TEMP1 SET ORDERED_QTY=0 WHERE SNO>1
		 
		 INSERT INTO #TEMP1
		 SELECT M.ORDER_NO,M.ORDER_DT,M.DELIVERY_DT,B.ARTICLE_CODE,M.AC_CODE,''PRODUCT_CODE
		 ,B.QUANTITY,'' BIN_ID,0 ORDERING,0 STOCK_QTY,0 SNO,0 CUMM_QTY,B.PARA1_CODE,B.PARA2_CODE
		 FROM BUYER_ORDER_MST M (NOLOCK) JOIN BUYER_ORDER_DET B (NOLOCK) ON M.ORDER_ID=B.ORDER_ID
		 LEFT JOIN #TEMP1 T ON T.ARTICLE_CODE=B.ARTICLE_CODE AND T.PARA1_CODE=B.PARA1_CODE AND T.PARA2_CODE=B.PARA2_CODE
		 WHERE T.ARTICLE_CODE IS NULL AND B.ORDER_ID=@ORDER_ID
		 
		  


		SELECT C.COMPANY_NAME,C.ADDRESS9 ADDRESS1,C.ADDRESS1 ADDRESS2,C.ADDRESS2 ADDRESS3,C.CITY,C.PIN,C.GST_NO  
			   ,LMV.AC_NAME,LMV.PRINT_NAME,T1.ORDER_NO,T1.ORDER_DT,T1.DELIVERY_DT,A.ARTICLE_NO,T1.ARTICLE_CODE,P1.PARA1_NAME COLOR,P2.PARA2_NAME SIZE  
			   ,T1.PRODUCT_CODE,T1.ORDERED_QTY,ISNULL(B.BIN_NAME,'')BIN_NAME,T1.STOCK_QTY,T1.ORDERING--,T1.BIN_ID  
		 FROM #TEMP1 T1  
		 JOIN ARTICLE A (NOLOCK) ON T1.ARTICLE_CODE=A.ARTICLE_CODE
		 JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE=T1.PARA1_CODE
		 JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE=T1.PARA2_CODE
		 JOIN LMV01106 LMV (NOLOCK) ON LMV.AC_CODE=T1.AC_CODE  
		 JOIN (SELECT TOP 1 COMPANY_NAME,ADDRESS9,ADDRESS1,ADDRESS2,CITY,PIN,GST_NO FROM COMPANY WHERE ISNULL(GST_NO,'')<>'' OR ISNULL(MOBILE,'')<>'')C ON 1=1  
		 LEFT JOIN BIN B (NOLOCK) ON B.BIN_ID=T1.BIN_ID  
		 ORDER BY T1.ARTICLE_CODE,P1.PARA1_NAME,P2.PARA2_NAME,T1.ORDERING,T1.BIN_ID  
		 GOTO END_PROC
		 
  
LBLSTKTRF:		
		 
		 DECLARE @BARCODEWISEPICKLIST INT 
		 SET @BARCODEWISEPICKLIST=0
		 IF EXISTS(SELECT TOP 1 'U' FROM BUYER_ORDER_DET (NOLOCK) WHERE ORDER_ID =@ORDER_ID AND ISNULL(PRODUCT_CODE,'')<>'')
		 SET @BARCODEWISEPICKLIST=1
	
	IF ISNULL(@BARCODEWISEPICKLIST,0)=1
	BEGIN	
		   
		 IF OBJECT_ID ('TEMPDB..#TMPORDER','U') IS NOT NULL
			DROP TABLE #TMPORDER
						   
		 SELECT @ORDER_ID ORDER_ID,T.ORDER_NO,T.ORDER_DT,T.DELIVERY_DT,A.ARTICLE_NO,T.ARTICLE_CODE,P1.PARA1_NAME,P2.PARA2_NAME 
			   ,T.AC_CODE,T.PARA1_CODE,T.PARA2_CODE,t.PRODUCT_CODE ,
			   SUM(T.ORDERED_QTY) ORDER_QTY,
			   CAST(0 AS NUMERIC(10,0)) AS QUANTITY
		 INTO #TMPORDER
		 FROM (SELECT M.ORDER_NO,M.ORDER_DT,M.DELIVERY_DT,D.ARTICLE_CODE,M.AC_CODE,D.PARA1_CODE,D.PARA2_CODE,
		       isnull(D.PRODUCT_CODE,'') as  PRODUCT_CODE,
		       SUM(D.QUANTITY-ISNULL(d.adj_qty,0)) ORDERED_QTY
			   FROM BUYER_ORDER_MST M (NOLOCK)  
			   JOIN BUYER_ORDER_DET D (NOLOCK) ON M.ORDER_ID=D.ORDER_ID  
			   WHERE M.ORDER_ID=@ORDER_ID
			   AND ISNULL(D.PRODUCT_CODE,'')=''
			   GROUP BY M.ORDER_NO,M.ORDER_DT,M.DELIVERY_DT,D.ARTICLE_CODE,M.AC_CODE,D.PARA1_CODE,D.PARA2_CODE,isnull(D.PRODUCT_CODE,'')
			   UNION
			   SELECT M.ORDER_NO,M.ORDER_DT,M.DELIVERY_DT,SKU.ARTICLE_CODE,M.AC_CODE,SKU.PARA1_CODE,SKU.PARA2_CODE,
			   D.PRODUCT_CODE ,
		       SUM(D.QUANTITY-ISNULL(d.adj_qty,0)) ORDERED_QTY
			   FROM BUYER_ORDER_MST M (NOLOCK)  
			   JOIN BUYER_ORDER_DET D (NOLOCK) ON M.ORDER_ID=D.ORDER_ID 
			   JOIN SKU (NOLOCK) ON D.product_code =SKU.product_code  
			   WHERE M.ORDER_ID=@ORDER_ID
			   AND ISNULL(D.PRODUCT_CODE,'')<>''
			   GROUP BY M.ORDER_NO,M.ORDER_DT,M.DELIVERY_DT,SKU.ARTICLE_CODE,M.AC_CODE,SKU.PARA1_CODE,SKU.PARA2_CODE,
			   D.PRODUCT_CODE 
			   
			  )T
		 JOIN ARTICLE A (NOLOCK) ON A.ARTICLE_CODE=T.ARTICLE_CODE  
		 JOIN PARA1 P1  (NOLOCK) ON P1.PARA1_CODE=T.PARA1_CODE  
		 JOIN PARA2 P2  (NOLOCK) ON P2.PARA2_CODE=T.PARA2_CODE  
		 GROUP BY T.ORDER_NO,T.ORDER_DT,T.DELIVERY_DT,A.ARTICLE_NO,T.ARTICLE_CODE,P1.PARA1_NAME,
		 P2.PARA2_NAME,T.AC_CODE,T.PARA1_CODE,T.PARA2_CODE,T.PRODUCT_CODE
		 					
		 UPDATE A SET QUANTITY =ISNULL(ORDER_QTY,0)-ISNULL(PICKLIST_QTY,0)
		 FROM #TMPORDER A
		 LEFT JOIN (SELECT ISNULL(B.ORDER_ID  ,'') AS ORDER_ID,C.ARTICLE_CODE ,C.PARA1_CODE ,C.PARA2_CODE,SUM(A.QUANTITY) AS  PICKLIST_QTY
					FROM FLOOR_ST_DET A (NOLOCK)
					JOIN FLOOR_ST_MST B (NOLOCK) ON A.MEMO_ID =B.MEMO_ID 
					JOIN SKU C ON A.PRODUCT_CODE =C.PRODUCT_CODE 
					WHERE B.CANCELLED =0 AND ISNULL(B.ORDER_ID,'')=@ORDER_ID
					GROUP BY ISNULL(B.ORDER_ID,''),C.ARTICLE_CODE ,C.PARA1_CODE ,C.PARA2_CODE
					)B ON A.ORDER_ID =B.ORDER_ID AND A.ARTICLE_CODE =B.ARTICLE_CODE AND A.PARA1_CODE =B.PARA1_CODE AND A.PARA2_CODE =B.PARA2_CODE 
		 WHERE ISNULL(A.PRODUCT_CODE ,'')=''
		  
		 UPDATE A SET QUANTITY =ISNULL(ORDER_QTY,0)-ISNULL(PICKLIST_QTY,0)
		 FROM #TMPORDER A
		 LEFT JOIN (SELECT ISNULL(B.ORDER_ID  ,'') AS ORDER_ID,
		            LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE ))) AS PRODUCT_CODE ,
		            SUM(A.QUANTITY) AS  PICKLIST_QTY
					FROM FLOOR_ST_DET A (NOLOCK)
					JOIN FLOOR_ST_MST B (NOLOCK) ON A.MEMO_ID =B.MEMO_ID 
					JOIN SKU C ON A.PRODUCT_CODE =C.PRODUCT_CODE 
					WHERE B.CANCELLED =0 
					AND ISNULL(B.ORDER_ID,'')=@ORDER_ID
					GROUP BY ISNULL(B.ORDER_ID,''),
					LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE )))
					)B ON A.ORDER_ID =B.ORDER_ID 
					AND A.PRODUCT_CODE=b.PRODUCT_CODE 
		  WHERE ISNULL(A.PRODUCT_CODE ,'')<>''
		               
		 DELETE FROM #TMPORDER WHERE ISNULL(QUANTITY,0)<=0
		         
		         
         DECLARE @CDISPATCHBIN VARCHAR(7)
         
         
        SELECT TOP 1 @CDISPATCHBIN=VALUE  FROM CONFIG WHERE CONFIG_OPTION ='DEFAULT_ZONE'
		              
		IF OBJECT_ID ('TEMPDB..#TMPSTK','U') IS NOT NULL
		   DROP TABLE #TMPSTK
		
		
		SELECT A.* ,
		SR=ROW_NUMBER() OVER(PARTITION BY A.ORDER_ID ,A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE,A.ORG_PRODUCT_CODE 
		ORDER BY A.ORDER_ID ,A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE,A.ORG_PRODUCT_CODE),
		CAST(0 AS NUMERIC(10,0)) AS CUMM_SUM
		INTO #TMPSTK
		FROM
		(				  
		SELECT T.ORDER_ID ,T.ARTICLE_CODE,T.PARA1_CODE,T.PARA2_CODE ,T.QUANTITY AS ORD_QTY,
		QUANTITY_IN_STOCK,P.PRODUCT_CODE,P.BIN_ID,T.PRODUCT_CODE ORG_PRODUCT_CODE
		FROM #TMPORDER T
		JOIN 
		(
		 SELECT SKU.ARTICLE_CODE ,SKU.PARA1_CODE ,SKU.PARA2_CODE,P.PRODUCT_CODE AS PRODUCT_CODE,
		 P.BIN_ID,
		 SUM(QUANTITY_IN_STOCK)QUANTITY_IN_STOCK 
		 FROM PMT01106 P (NOLOCK) 
		 JOIN SKU (NOLOCK) ON P.PRODUCT_CODE =SKU.PRODUCT_CODE
		 JOIN BIN (NOLOCK) ON P.BIN_ID =BIN .BIN_ID  
		 WHERE P.QUANTITY_IN_STOCK>0
		 and p.DEPT_ID=@CLOCID
		 AND BIN.MAJOR_BIN_ID  IN('000')
		 AND(ISNULL(@CCONSIDER_DEFAULT_BIN_STOCK,'') ='1' OR  BIN.BIN_ID<>'000')
		 AND ISNULL(er_flag,0) IN (0,1)
		 GROUP BY SKU.ARTICLE_CODE ,SKU.PARA1_CODE ,SKU.PARA2_CODE,P.PRODUCT_CODE ,P.BIN_ID
		)P ON T.ARTICLE_CODE =P.ARTICLE_CODE AND T.PARA1_CODE =P.PARA1_CODE AND T.PARA2_CODE =P.PARA2_CODE 
		WHERE ISNULL(T.PRODUCT_CODE,'')=''
        UNION 
        SELECT T.ORDER_ID ,T.ARTICLE_CODE,T.PARA1_CODE,T.PARA2_CODE ,T.QUANTITY AS ORD_QTY,
		QUANTITY_IN_STOCK,P.PRODUCT_CODE,P.BIN_ID,T.PRODUCT_CODE ORG_PRODUCT_CODE
		FROM #TMPORDER T
		JOIN 
		(
		 SELECT P.PRODUCT_CODE AS PRODUCT_CODE,
		 LEFT(P.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',P.PRODUCT_CODE)-1,-1),LEN(P.PRODUCT_CODE ))) AS ORG_PRODUCT_CODE,
		 P.BIN_ID,SUM(QUANTITY_IN_STOCK)QUANTITY_IN_STOCK 
		 FROM PMT01106 P (NOLOCK) 
		 JOIN SKU (NOLOCK) ON P.PRODUCT_CODE =SKU.PRODUCT_CODE
		 JOIN BIN (NOLOCK) ON P.BIN_ID =BIN .BIN_ID  
		 WHERE P.QUANTITY_IN_STOCK>0
		 and p.DEPT_ID=@CLOCID
		 AND BIN.MAJOR_BIN_ID IN('000') AND ISNULL(er_flag,0) IN (0,1)
		 AND(ISNULL(@CCONSIDER_DEFAULT_BIN_STOCK,'') ='1' OR  BIN.BIN_ID<>'000')
		 GROUP BY P.PRODUCT_CODE,LEFT(P.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',P.PRODUCT_CODE)-1,-1),LEN(P.PRODUCT_CODE ))),
		 P.BIN_ID
		)P ON T.PRODUCT_CODE =P.ORG_PRODUCT_CODE
		WHERE ISNULL(T.PRODUCT_CODE,'')<>''
		
		) A




				IF OBJECT_ID ('TEMPDB..#TMPSTKDETAILS','U') IS NOT NULL
				   DROP TABLE #TMPSTKDETAILS
				   
				 
				 SELECT A.ORG_PRODUCT_CODE, A.ORDER_ID ,A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE ,A.ORD_QTY,
				 A.PRODUCT_CODE,A.QUANTITY_IN_STOCK ,A.SR,A.BIN_ID,
				 SUM(B.QUANTITY_IN_STOCK) AS RUNNINGTOTAL
				 INTO #TMPSTKDETAILS
				  FROM #TMPSTK A
				 JOIN #TMPSTK B ON A.ORDER_ID =B.ORDER_ID AND A.ARTICLE_CODE =B.ARTICLE_CODE 
				 AND A.PARA1_CODE =B.PARA1_CODE AND A.PARA2_CODE =B.PARA2_CODE AND A.ORG_PRODUCT_CODE =B.ORG_PRODUCT_CODE 
				 AND B.SR <=A.SR 
				 GROUP BY A.ORDER_ID ,A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE ,A.ORD_QTY,A.PRODUCT_CODE,
				 A.QUANTITY_IN_STOCK,A.SR,A.BIN_ID,A.ORG_PRODUCT_CODE
				
				
			IF @STKTRF=1
			BEGIN
	
			
				 
				 WHILE EXISTS (SELECT TOP 1 'U' FROM #TMPORDER)
				 BEGIN
				      
				      
					SELECT TOP 1  @CARTICLE_CODE=ARTICLE_CODE ,@CPARA1_CODE=PARA1_CODE ,@PARA2_CODE=PARA2_CODE ,
					@NQTY=QUANTITY ,@CORG_PRODUCT_CODE=PRODUCT_CODE 
					FROM #TMPORDER
				      
					DELETE  FROM #TMPSTKDETAILS
					WHERE RUNNINGTOTAL>(SELECT TOP 1 RUNNINGTOTAL FROM #TMPSTKDETAILS 
					WHERE RUNNINGTOTAL >=@NQTY AND  ARTICLE_CODE=@CARTICLE_CODE AND PARA1_CODE=@CPARA1_CODE AND PARA2_CODE =@PARA2_CODE 
					AND ORG_PRODUCT_CODE=@CORG_PRODUCT_CODE   ORDER BY RUNNINGTOTAL)
					AND ARTICLE_CODE=@CARTICLE_CODE AND PARA1_CODE=@CPARA1_CODE AND PARA2_CODE =@PARA2_CODE
					AND ORG_PRODUCT_CODE=@CORG_PRODUCT_CODE 
					            
				 
					         
					UPDATE  #TMPSTKDETAILS
					SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK+(ORD_QTY -RUNNINGTOTAL)
					WHERE RUNNINGTOTAL >@NQTY
				    AND ARTICLE_CODE=@CARTICLE_CODE AND PARA1_CODE=@CPARA1_CODE AND PARA2_CODE =@PARA2_CODE
				    AND ORG_PRODUCT_CODE=@CORG_PRODUCT_CODE 
				 
				   DELETE FROM #TMPORDER WHERE ARTICLE_CODE=@CARTICLE_CODE AND PARA1_CODE=@CPARA1_CODE AND PARA2_CODE =@PARA2_CODE
				   AND PRODUCT_CODE=@CORG_PRODUCT_CODE 
				 
				 END
				 
				 
				
		 
		 
		   SELECT DISTINCT  MEMO_ID=CAST('LATER' AS VARCHAR(50)),
		          MEMO_NO=CAST('LATER' AS VARCHAR(20)),
                  MEMO_DT=CAST(CONVERT (VARCHAR(10),GETDATE(),121) AS DATETIME),
                  LAST_UPDATE=GETDATE(),
                  FIN_YEAR='',
                  CANCELLED=CAST(0 AS BIT),
                  REMARKS=CAST('' AS VARCHAR(MAX)),
                  RECEIPT_DT=CAST(CONVERT (VARCHAR(10),GETDATE(),121) AS DATETIME),
                  BIN_ID=CAST('' AS VARCHAR(7)),
                  TARGET_BIN_ID=CAST('' AS VARCHAR(7)),
                  MODE=CAST(0 AS NUMERIC(1,0)),
                  @ORDER_ID AS ORDER_ID,
                  CAST('' AS VARCHAR(100)) AS SP_ID,
                  RECONCILED=CAST(0 AS BIT),
				  CAST(0 AS NUMERIC(10,0)) AS TOTAL_QUANTITY,				
                  GETDATE() AS auto_posreco_last_update,
				  GETDATE() AS OLAP_SYNCH_LAST_UPDATE,
				  CAST('' AS VARCHAR(100)) AS INV_ID,
				  CAST('' AS VARCHAR(100)) AS PS_ID,
				  cast ( 0 as bit) as COMPLETED,
			      cast ( '' as varchar(100)) as COMPLETED_BY,
				  cast (getdate() as datetime) as COMPLETED_ON,
				  cast ( '' as varchar(10)) as User_code,
				  cast ( '' as varchar(10)) as recon_id


                FROM #TMPSTKDETAILS T1
                
                  SELECT MEMO_ID=CAST('LATER' AS VARCHAR(50)),
                  LAST_UPDATE=GETDATE (),
                  ROW_ID=CONVERT(VARCHAR(100),NEWID()) ,
                  T1.PRODUCT_CODE,
                  T1.QUANTITY_IN_STOCK  AS QUANTITY,
                  T1.BIN_ID  AS SOURCE_BIN_ID,
                  PRINT_LABEL=CAST(0 AS BIT),
                  ITEM_TARGET_BIN_ID=CAST('' AS VARCHAR(7)),
                  BOX_NO=CAST(0 AS NUMERIC(5,0)),
                  CAST('' AS VARCHAR(100)) AS SP_ID,
                  RECONCILED=CAST(0 AS BIT),
				  CAST('' AS VARCHAR(100)) as pick_list_id,
				  CAST(b.mrp  AS NUMERIC(14,2)) AS FCO_MRP
                  FROM #TMPSTKDETAILS T1
                  join sku b on t1.PRODUCT_CODE =b.product_code 
              
              
              END
              ELSE
              BEGIN
                  
               -- select * into TMPSTK1 from #TMPSTK
                  
                  SELECT SM.SECTION_NAME ,SD.SUB_SECTION_NAME , 
                  A.ARTICLE_NO,A.PRODUCT_CODE AS PRODUCT_CODE ,A.PARA1_NAME ,A.PARA2_NAME  ,A.QUANTITY AS PENDING_ORD_QTY,
                  CONVERT(NUMERIC(10,2),CASE WHEN ISNULL(STK.QUANTITY_IN_STOCK,0)>=A.QUANTITY THEN A.QUANTITY ELSE ISNULL(STK.QUANTITY_IN_STOCK,0) END) AS PICKLIST_QTY,
                  PENDING_PICKLIST_QTY=CONVERT(NUMERIC(10,2),A.QUANTITY-CASE WHEN ISNULL(STK.QUANTITY_IN_STOCK,0)>=A.QUANTITY THEN A.QUANTITY ELSE ISNULL(STK.QUANTITY_IN_STOCK,0) END),
                  ISNULL(STK.QUANTITY_IN_STOCK,0) AS QUANTITY_IN_STOCK,
                  QUANTITY_IN_STOCK_RECEIPT_BIN=CAST(CASE WHEN ISNULL(STK.QUANTITY_IN_STOCK,0)>=A.QUANTITY THEN 0 ELSE ISNULL(STKR.QUANTITY_IN_STOCK_RECEIPT_BIN,0) END AS NUMERIC(10,2)),
                  0 AS OTHER_PEND_QTY,A.ARTICLE_CODE ,A.PARA1_CODE ,A.PARA2_CODE 
                  FROM #TMPORDER A
                  JOIN ARTICLE ART (NOLOCK) ON A.ARTICLE_CODE =ART.ARTICLE_CODE 
                  JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE =ART.SUB_SECTION_CODE 
                  JOIN SECTIONM SM (NOLOCK) ON SM.SECTION_CODE =SD.SECTION_CODE 
                  JOIN PARA1 P1 (NOLOCK) ON A.PARA1_CODE =P1.PARA1_CODE 
                  JOIN PARA2 P2 (NOLOCK) ON A.PARA2_CODE =P2.PARA2_CODE 
                  LEFT JOIN
                  (
                    
                    SELECT ARTICLE_CODE ,PARA1_CODE ,PARA2_CODE ,ORG_PRODUCT_CODE,
                    SUM(QUANTITY_IN_STOCK) AS  QUANTITY_IN_STOCK
                    FROM #TMPSTK
                    GROUP BY ARTICLE_CODE ,PARA1_CODE ,PARA2_CODE,ORG_PRODUCT_CODE
                  
                  ) STK ON STK.ARTICLE_CODE =A.ARTICLE_CODE AND STK.PARA1_CODE =A.PARA1_CODE 
                  and a.PRODUCT_CODE =stk.ORG_PRODUCT_CODE
                  left join
                  (
                   SELECT ARTICLE_CODE ,PARA1_CODE ,PARA2_CODE
                   ,LEFT(p.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',p.PRODUCT_CODE)-1,-1),LEN(p.PRODUCT_CODE ))) AS PRODUCT_CODE 
                   ,SUM(QUANTITY_IN_STOCK) QUANTITY_IN_STOCK_RECEIPT_BIN 
		           FROM PMT01106 P (NOLOCK) 
		           JOIN SKU (NOLOCK) ON P.PRODUCT_CODE =SKU.PRODUCT_CODE
		           JOIN BIN (NOLOCK) ON P.BIN_ID =BIN .BIN_ID  
		           WHERE P.QUANTITY_IN_STOCK>0
		           AND BIN.MAJOR_BIN_ID IN('PP02908')
		           and DEPT_ID=@CLOCID AND ISNULL(er_flag,0) IN (0,1)
		           group by ARTICLE_CODE ,PARA1_CODE ,PARA2_CODE,
		           LEFT(p.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',p.PRODUCT_CODE)-1,-1),LEN(p.PRODUCT_CODE ))) 
		          )stkr on STKR.ARTICLE_CODE =A.ARTICLE_CODE AND STKR.PARA1_CODE =A.PARA1_CODE 
                  AND STK.PARA2_CODE =A.PARA2_CODE and a.PRODUCT_CODE =stkr .PRODUCT_CODE 
                  WHERE QUANTITY >0
                  
   
                  
              END   

	
	END
	ELSE
	BEGIN --(WITH OUT BARCODE WISE PICK LIST GENERATION CONSIDER WITH DEFAULT BIN)
	
	   

        
	        IF OBJECT_ID ('TEMPDB..#TMPORDERNEW','U') IS NOT NULL
			DROP TABLE #TMPORDERNEW
						   
		 SELECT @ORDER_ID ORDER_ID,M.ORDER_NO,M.ORDER_DT,M.DELIVERY_DT,A.ARTICLE_NO,D.ARTICLE_CODE,
		        P1.PARA1_NAME,P2.PARA2_NAME ,P3.PARA3_NAME ,P4.PARA4_NAME ,P5.PARA5_NAME ,P6.PARA6_NAME 
			   ,M.AC_CODE,D.PARA1_CODE,D.PARA2_CODE,D.PARA3_CODE ,D.PARA4_CODE ,D.PARA5_CODE ,D.PARA6_CODE ,
			   (D.QUANTITY-ISNULL(d.adj_qty,0)) ORDER_QTY,
			   CAST(0 AS NUMERIC(10,0)) AS QUANTITY,
			   CAST(0 AS NUMERIC(14,0)) AS OTHER_PEND_QTY
			   	,ISNULL(A1.ATTR1_KEY_NAME,'') as ATTR1_KEY_NAME   ,ISNULL(A2.ATTR2_KEY_NAME,'')  as ATTR2_KEY_NAME
				,ISNULL(A3.ATTR3_KEY_NAME,'') as ATTR3_KEY_NAME  ,ISNULL(A4.ATTR4_KEY_NAME,'') as ATTR4_KEY_NAME
				,ISNULL(A5.ATTR5_KEY_NAME,'') as ATTR5_KEY_NAME,ISNULL(A6.ATTR6_KEY_NAME,'') as ATTR6_KEY_NAME
				,ISNULL(A7.ATTR7_KEY_NAME,'')  ATTR7_KEY_NAME ,ISNULL(A8.ATTR8_KEY_NAME,'')  ATTR8_KEY_NAME
				,ISNULL(A9.ATTR9_KEY_NAME,'')  ATTR9_KEY_NAME ,ISNULL(A10.ATTR10_KEY_NAME,'') ATTR10_KEY_NAME
				,ISNULL(A11.ATTR11_KEY_NAME,'') ATTR11_KEY_NAME,ISNULL(A12.ATTR12_KEY_NAME,'') ATTR12_KEY_NAME
				,ISNULL(A13.ATTR13_KEY_NAME,'') ATTR13_KEY_NAME ,ISNULL(A14.ATTR14_KEY_NAME,'') ATTR14_KEY_NAME
				,ISNULL(A15.ATTR15_KEY_NAME,'') ATTR15_KEY_NAME     
				,ISNULL(A16.ATTR16_KEY_NAME,'') ATTR16_KEY_NAME,ISNULL(A17.ATTR17_KEY_NAME,'') ATTR17_KEY_NAME
				,ISNULL(A18.ATTR18_KEY_NAME,'') ATTR18_KEY_NAME,ISNULL(A19.ATTR19_KEY_NAME,'') ATTR19_KEY_NAME
				,ISNULL(A20.ATTR20_KEY_NAME,'')  ATTR20_KEY_NAME  ,ISNULL(A21.ATTR21_KEY_NAME,'') ATTR21_KEY_NAME
				 ,ISNULL(A22.ATTR22_KEY_NAME,'') as ATTR22_KEY_NAME,ISNULL(A23.ATTR23_KEY_NAME,'') as ATTR23_KEY_NAME
				 ,ISNULL(A24.ATTR24_KEY_NAME,'') ATTR24_KEY_NAME,ISNULL(A25.ATTR25_KEY_NAME,'')  ATTR25_KEY_NAME     	  
				 ,d.ATTR1_KEY_CODE,d.ATTR2_KEY_CODE,d.ATTR3_KEY_CODE,d.ATTR4_KEY_CODE,d.ATTR5_KEY_CODE
				 ,d.ATTR6_KEY_CODE,d.ATTR7_KEY_CODE,d.ATTR8_KEY_CODE,d.ATTR9_KEY_CODE,d.ATTR10_KEY_CODE
				 ,d.ATTR11_KEY_CODE,d.ATTR12_KEY_CODE,d.ATTR13_KEY_CODE,d.ATTR14_KEY_CODE,d.ATTR15_KEY_CODE
				 ,d.ATTR16_KEY_CODE,d.ATTR17_KEY_CODE,d.ATTR18_KEY_CODE,d.ATTR19_KEY_CODE,d.ATTR20_KEY_CODE
				 ,d.ATTR21_KEY_CODE,d.ATTR22_KEY_CODE,d.ATTR23_KEY_CODE,d.ATTR24_KEY_CODE,d.ATTR25_KEY_CODE
				 ,d.SUB_SECTION_CODE,d.SECTION_CODE,d.From_mrp,d.to_mrp,sd.sub_section_name ,sm.section_name ,
				 D.row_id
		 INTO #TMPORDERNEW
		 FROM  BUYER_ORDER_MST M (NOLOCK)  
		 JOIN BUYER_ORDER_DET D (NOLOCK) ON M.ORDER_ID=D.ORDER_ID  
		 JOIN ARTICLE A (NOLOCK) ON A.ARTICLE_CODE=D.ARTICLE_CODE  
		 JOIN PARA1 P1  (NOLOCK) ON P1.PARA1_CODE=D.PARA1_CODE  
		 JOIN PARA2 P2  (NOLOCK) ON P2.PARA2_CODE=D.PARA2_CODE  
		 JOIN PARA3 P3  (NOLOCK) ON P3.PARA3_CODE=D.PARA3_CODE
		 JOIN PARA4 P4  (NOLOCK) ON P4.PARA4_CODE=D.PARA4_CODE
		 JOIN PARA5 P5  (NOLOCK) ON P5.PARA5_CODE=D.PARA5_CODE
		 JOIN PARA6 P6  (NOLOCK) ON P6.PARA6_CODE=D.PARA6_CODE
		 LEFT JOIN ATTR1_MST A1 (NOLOCK) ON A1.ATTR1_KEY_CODE=d.attr1_KEY_CODE      
		LEFT JOIN ATTR2_MST A2 (NOLOCK) ON A2.ATTR2_KEY_CODE=d.attr2_KEY_CODE      
		LEFT JOIN ATTR3_MST A3 (NOLOCK) ON A3.ATTR3_KEY_CODE=d.attr3_KEY_CODE      
		LEFT JOIN ATTR4_MST A4 (NOLOCK) ON A4.ATTR4_KEY_CODE=d.attr4_KEY_CODE      
		LEFT JOIN ATTR5_MST A5 (NOLOCK) ON A5.ATTR5_KEY_CODE=d.attr5_KEY_CODE      
		LEFT JOIN ATTR6_MST A6 (NOLOCK) ON A6.ATTR6_KEY_CODE=d.attr6_KEY_CODE      
		LEFT JOIN ATTR7_MST A7 (NOLOCK) ON A7.ATTR7_KEY_CODE=d.attr7_KEY_CODE      
		LEFT JOIN ATTR8_MST A8 (NOLOCK) ON A8.ATTR8_KEY_CODE=d.attr8_KEY_CODE      
		LEFT JOIN ATTR9_MST A9 (NOLOCK) ON A9.ATTR9_KEY_CODE=d.attr9_KEY_CODE      
		LEFT JOIN ATTR10_MST A10 (NOLOCK) ON A10.ATTR10_KEY_CODE=d.attr10_KEY_CODE      
		LEFT JOIN ATTR11_MST A11 (NOLOCK) ON A11.ATTR11_KEY_CODE=d.attr11_KEY_CODE      
		LEFT JOIN ATTR12_MST A12 (NOLOCK) ON A12.ATTR12_KEY_CODE=d.attr12_KEY_CODE      
		LEFT JOIN ATTR13_MST A13 (NOLOCK) ON A13.ATTR13_KEY_CODE=d.attr13_KEY_CODE      
		LEFT JOIN ATTR14_MST A14 (NOLOCK) ON A14.ATTR14_KEY_CODE=d.attr14_KEY_CODE      
		LEFT JOIN ATTR15_MST A15 (NOLOCK) ON A15.ATTR15_KEY_CODE=d.attr15_KEY_CODE      
		LEFT JOIN ATTR16_MST A16 (NOLOCK) ON A16.ATTR16_KEY_CODE=d.attr16_KEY_CODE      
		LEFT JOIN ATTR17_MST A17 (NOLOCK) ON A17.ATTR17_KEY_CODE=d.attr17_KEY_CODE      
		LEFT JOIN ATTR18_MST A18 (NOLOCK) ON A18.ATTR18_KEY_CODE=d.attr18_KEY_CODE      
		LEFT JOIN ATTR19_MST A19 (NOLOCK) ON A19.ATTR19_KEY_CODE=d.attr19_KEY_CODE      
		LEFT JOIN ATTR20_MST A20 (NOLOCK) ON A20.ATTR20_KEY_CODE=d.attr20_KEY_CODE      
		LEFT JOIN ATTR21_MST A21 (NOLOCK) ON A21.ATTR21_KEY_CODE=d.attr21_KEY_CODE      
		LEFT JOIN ATTR22_MST A22 (NOLOCK) ON A22.ATTR22_KEY_CODE=d.attr22_KEY_CODE      
		LEFT JOIN ATTR23_MST A23 (NOLOCK) ON A23.ATTR23_KEY_CODE=d.attr23_KEY_CODE      
		LEFT JOIN ATTR24_MST A24 (NOLOCK) ON A24.ATTR24_KEY_CODE=d.attr24_KEY_CODE      
		LEFT JOIN ATTR25_MST A25 (NOLOCK) ON A25.ATTR25_KEY_CODE=d.ATTR25_KEY_CODE 
		left join sectiond sd (nolock) on sd.sub_section_code =d.SUB_SECTION_CODE 
		left join sectionm sm (nolock) on sm.section_code =d.SECTION_CODE 
		WHERE M.order_id=@ORDER_ID

	


		    DECLARE @CBDJOIN varchar(max),@ccolumn_code varchar(1000)
              
         
			  set @CBDJOIN=''
           

			  IF OBJECT_ID('TEMPDB..#TMPCONFIG','U') IS NOT NULL
			     DROP TABLE #TMPCONFIG

			  SELECT COLUMN_NAME , 
			  CASE WHEN LEFT(COLUMN_NAME,4)='ATTR' THEN  REPLACE(COLUMN_NAME,'KEY_NAME','MST')
			       WHEN LEFT(COLUMN_NAME,4)='PARA' THEN  REPLACE(COLUMN_NAME,'_NAME','')
				   WHEN COLUMN_NAME='ARTICLE_NO' THEN  'ARTICLE'
				   WHEN COLUMN_NAME='SECTION_NAME' THEN  'SECTIONM'
				   WHEN COLUMN_NAME='SUB_SECTION_NAME' THEN  'SECTIOND'
			  ELSE COLUMN_NAME END  AS TABLENAME,
			  CASE WHEN COLUMN_NAME='ARTICLE_NO' THEN  'ARTICLE_CODE'
			       ELSE REPLACE(COLUMN_NAME,'_NAME','_CODE' ) END AS COLUMN_CODE ,
			 CAST('' AS VARCHAR(1000)) AS JOINS,
			 CAST('' AS VARCHAR(1000)) AS bdJOINS
			  INTO #TMPCONFIG
			  FROM CONFIG_BUYERORDER
			  WHERE COLUMN_NAME NOT IN('PRODUCT_CODE','MRP_FROM_TO')
			  AND ISNULL(OPEN_KEY,0)=1


		

			UPDATE #TMPCONFIG SET BDJOINS ='bd'+'.'+COLUMN_CODE + '=SKU'+'.'+COLUMN_CODE+''
			SELECT @CBDJOIN =ISNULL(@CBDJOIN+' and  ','')+BDJOINS  FROM #TMPCONFIG 
			
			IF EXISTS (SELECT TOP 1'U' FROM CONFIG_BUYERORDER WHERE COLUMN_NAME ='MRP_FROM_TO' AND ISNULL(OPEN_KEY,0)=1)
			   SET @CBDJOIN=@CBDJOIN+' and SKU.MRP BETWEEN  BD.From_mrp AND BD.to_mrp '

			

			
			   	   if object_id ('tempdb..#tmpsku','u') is not null
				      drop table #tmpsku


			   select   b.order_id, A.PRODUCT_CODE ,SKU.ARTICLE_CODE  ,SKU.PARA1_CODE ,SKU.PARA2_CODE ,SKU.PARA3_CODE,sku.para4_code ,sku.para5_code,sku.para6_code ,
						  attr1_key_code,attr2_key_code,attr3_key_code,attr4_key_code,attr5_key_code,
						  attr6_key_code,attr7_key_code,attr8_key_code,attr9_key_code,attr10_key_code,
                          attr11_key_code,attr12_key_code,attr13_key_code,attr14_key_code,attr15_key_code,
                          attr16_key_code,attr17_key_code,attr18_key_code,attr19_key_code,attr20_key_code,
                          attr21_key_code ,attr22_key_code,attr23_key_code,attr24_key_code,attr25_key_code,
						  SECTIOND.sub_section_code,SECTIONM.section_code,sku.mrp ,a.QUANTITY
                into #tmpsku
			   	FROM FLOOR_ST_DET A (NOLOCK)
				JOIN FLOOR_ST_MST B (NOLOCK) ON A.MEMO_ID =B.MEMO_ID 
				JOIN SKU (nolock) ON A.PRODUCT_CODE =sku.PRODUCT_CODE 
				JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE=SKU.ARTICLE_CODE
				JOIN SECTIOND (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE 
				JOIN SECTIONM (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE 
				LEFT JOIN ARTICLE_FIX_ATTR (NOLOCK) ON  ARTICLE_FIX_ATTR.ARTICLE_CODE=ARTICLE.ARTICLE_CODE
				WHERE B.CANCELLED =0 AND ISNULL(B.ORDER_ID,'')=@ORDER_ID
      
	     SELECT @CCOLUMN_CODE=ISNULL(@CCOLUMN_CODE+',','')+COLUMN_CODE 
			   FROM #TMPCONFIG


		 					
		SET @DTSQL=	N' UPDATE BD SET QUANTITY =ISNULL(ORDER_QTY,0)-ISNULL(PICKLIST_QTY,0)
		 FROM #TMPORDERNEW BD
		 LEFT JOIN
		  (
		     SELECT ORDER_ID, '+@CCOLUMN_CODE+',
			 SUM(QUANTITY) AS PICKLIST_QTY
			 FROM #tmpsku 
			 GROUP BY ORDER_ID ,'+@CCOLUMN_CODE+'  
          )SKU ON BD.ORDER_ID =SKU.ORDER_ID'+@CBDJOIN
		
		PRINT @DTSQL
		EXEC SP_EXECUTESQL @DTSQL

		
		               
	 DELETE FROM #TMPORDERNEW WHERE ISNULL(QUANTITY,0)<=0


	 SET @CCOLUMN_CODE=NULL
	      SELECT @CCOLUMN_CODE=ISNULL(@CCOLUMN_CODE+',','')+  
		           CASE WHEN LEFT(COLUMN_NAME,4)='ATTR' THEN  'ARTICLE_FIX_ATTR'
			       WHEN LEFT(COLUMN_NAME,4)='PARA' THEN  'SKU'
				   WHEN COLUMN_NAME='ARTICLE_NO' THEN  'ARTICLE'
				   WHEN COLUMN_NAME='SECTION_NAME' THEN  'SECTIONM'
				   WHEN COLUMN_NAME='SUB_SECTION_NAME' THEN  'SECTIOND'  ELSE '' END +
			   '.'+COLUMN_CODE 
			   FROM #TMPCONFIG


         DECLARE @CDISPATCHBIN_NEW VARCHAR(7)
         
        SELECT TOP 1 @CDISPATCHBIN_NEW=VALUE  FROM CONFIG WHERE CONFIG_OPTION ='DEFAULT_ZONE'
		 
		 
		 
		              
		IF OBJECT_ID ('TEMPDB..##TMPSTKNEW','U') IS NOT NULL
		   DROP TABLE ##TMPSTKNEW
		
		
				  
		SET @DTSQL=	N'SELECT BD.ORDER_ID ,BD.ARTICLE_CODE,BD.PARA1_CODE,BD.PARA2_CODE ,BD.PARA3_CODE,BD.PARA4_CODE ,BD.PARA5_CODE ,BD.PARA6_CODE ,
		       BD.QUANTITY AS ORD_QTY,
		       QUANTITY_IN_STOCK,SKU.PRODUCT_CODE,SKU.BIN_ID,BD.ROW_ID,
			   SR=ROW_NUMBER() OVER (PARTITION BY BD.ROW_ID ORDER BY BD.ROW_ID)
		INTO ##TMPSTKNEW
		FROM #TMPORDERNEW BD
		JOIN 
		(
			 SELECT LEFT(p.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX (''@'',p.PRODUCT_CODE)-1,-1),LEN(p.PRODUCT_CODE ))) AS PRODUCT_CODE,
			 P.BIN_ID,'+@CCOLUMN_CODE+',
			 SUM(QUANTITY_IN_STOCK)QUANTITY_IN_STOCK 
			 FROM PMT01106 P (NOLOCK) 
			 JOIN SKU (NOLOCK) ON P.PRODUCT_CODE =SKU.PRODUCT_CODE
			 JOIN BIN (NOLOCK) ON P.BIN_ID =BIN .BIN_ID  
			 JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE=SKU.ARTICLE_CODE
			 JOIN SECTIOND (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE 
			 JOIN SECTIONM (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE 
			 LEFT JOIN ARTICLE_FIX_ATTR (NOLOCK) ON  ARTICLE_FIX_ATTR.ARTICLE_CODE=ARTICLE.ARTICLE_CODE
			 WHERE P.QUANTITY_IN_STOCK>0
			 AND BIN.MAJOR_BIN_ID  IN(''000'')
			 and p.DEPT_ID='''+@CLOCID+''' AND ISNULL(er_flag,0) IN (0,1)
			 GROUP BY LEFT(p.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX (''@'',p.PRODUCT_CODE)-1,-1),LEN(p.PRODUCT_CODE ))) ,P.BIN_ID,'+@CCOLUMN_CODE+'
			 
		) SKU  ON 1=1  '+@CBDJOIN +' WHERE SKU.PRODUCT_CODE<>'''''
		PRINT @DTSQL
		EXEC SP_EXECUTESQL @DTSQL



	--	SELECT * FROM #TMPORDERNEW


		IF OBJECT_ID ('TEMPDB..#TMPSTKDETAILSNEW','U') IS NOT NULL
		    DROP TABLE #TMPSTKDETAILSNEW
				   
		SELECT  A.ORDER_ID ,A.ROW_ID ,A.SR,A.BIN_ID,A.QUANTITY_IN_STOCK,A.ORD_QTY,A.PRODUCT_CODE,
				SUM(B.QUANTITY_IN_STOCK) AS RUNNINGTOTAL
			  INTO #TMPSTKDETAILSNEW
		FROM ##TMPSTKNEW A
		JOIN ##TMPSTKNEW B ON A.ORDER_ID =B.ORDER_ID AND A.ROW_ID =B.ROW_ID 
		AND B.SR <=A.SR 
		GROUP BY A.ORDER_ID ,A.ROW_ID ,A.SR,A.BIN_ID,A.QUANTITY_IN_STOCK,A.ORD_QTY,A.PRODUCT_CODE
	       
      
	  
		IF EXISTS (SELECT TOP 1 'U' FROM wsl_item_details WHERE SP_ID=@NSPID)
		BEGIN
		    
			update #TMPORDERNEW set QUANTITY=0
			UPDATE A SET  QUANTITY=B.QUANTITY FROM  
			#TMPORDERNEW A
			JOIN WSL_ITEM_DETAILS B ON A.ROW_ID=B.row_id
			WHERE B.SP_ID =@NSPID

			DELETE FROM  #TMPORDERNEW WHERE  QUANTITY=0


			delete a from #TMPSTKDETAILSNEW a
			left join #TMPORDERNEW b on a.row_id=b.row_id 
			where b.row_id is null
			
              
            update  a set ORD_QTY=b.QUANTITY  from #TMPSTKDETAILSNEW a
			join #TMPORDERNEW b on a.row_id=b.row_id 
			
			delete from WSL_ITEM_DETAILS where sp_id=@NSPID

		END
		
		   DECLARE @CROW_ID VARCHAR(100)
		
	
	
		IF @STKTRF=1
			BEGIN
	
				
				 WHILE EXISTS (SELECT TOP 1 'U' FROM #TMPORDERNEW )
				 BEGIN
				 
				
				      
				      
					SELECT TOP 1 @CROW_ID= ROW_ID ,
					@NQTY=QUANTITY  
					FROM #TMPORDERNEW
					
					
					DELETE  FROM #TMPSTKDETAILSNEW
					WHERE RUNNINGTOTAL>(SELECT TOP 1 RUNNINGTOTAL FROM #TMPSTKDETAILSNEW
					WHERE RUNNINGTOTAL >=@NQTY AND  ROW_ID =@CROW_ID
					ORDER BY RUNNINGTOTAL)
					AND ROW_ID=@CROW_ID
					
					
					
					UPDATE  #TMPSTKDETAILSNEW 
					SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK+(ORD_QTY -RUNNINGTOTAL)
					WHERE RUNNINGTOTAL >@NQTY
				    AND ROW_ID=@CROW_ID
				   
				 
				   DELETE FROM #TMPORDERNEW  WHERE ROW_ID =@CROW_ID
				   
				 
			 END
			 

				 
				
		 
		   SELECT DISTINCT  MEMO_ID=CAST('LATER' AS VARCHAR(50)),
		          MEMO_NO=CAST('LATER' AS VARCHAR(20)),
                  MEMO_DT=CAST(CONVERT (VARCHAR(10),GETDATE(),121) AS DATETIME),
                  LAST_UPDATE=GETDATE(),
                  FIN_YEAR='',
                  CANCELLED=CAST(0 AS BIT),
                  REMARKS=CAST('' AS VARCHAR(MAX)),
                  RECEIPT_DT=CAST(CONVERT (VARCHAR(10),GETDATE(),121) AS DATETIME),
                  BIN_ID=CAST('000' AS VARCHAR(7)),
                  TARGET_BIN_ID=CAST('000' AS VARCHAR(7)),
                  MODE=CAST(0 AS NUMERIC(1,0)),
                  @ORDER_ID AS ORDER_ID,
                  CAST('' AS VARCHAR(100)) AS SP_ID,
                  reconciled=CAST(0 AS BIT),
				  CAST(0 AS NUMERIC(10,0)) AS TOTAL_QUANTITY,				    
                  GETDATE() AS auto_posreco_last_update,
			  	  GETDATE()  AS  OLAP_SYNCH_LAST_UPDATE,
				  CAST('' AS VARCHAR(100)) AS INV_ID,
				  CAST('' AS VARCHAR(100)) AS PS_ID,
				  cast ( 0 as bit) as COMPLETED,
			      cast ( '' as varchar(100)) as COMPLETED_BY,
				  cast (getdate() as datetime) as COMPLETED_ON,
				  cast ( '' as varchar(10)) as User_code

                  
                FROM #TMPSTKDETAILSNEW T1
                
                  SELECT MEMO_ID=CAST('LATER' AS VARCHAR(50)),
                  LAST_UPDATE=GETDATE (),
                  ROW_ID=CONVERT(VARCHAR(100),NEWID()) ,
                  T1.PRODUCT_CODE,
				   CONVERT(NUMERIC(10,2),CASE WHEN ISNULL(t1.QUANTITY_IN_STOCK,0)>=t1.ORD_QTY  THEN t1.ORD_QTY ELSE ISNULL(t1.QUANTITY_IN_STOCK,0) END) AS QUANTITY,
                  --T1.QUANTITY_IN_STOCK  AS QUANTITY,
                  T1.BIN_ID  AS SOURCE_BIN_ID,
                  PRINT_LABEL=CAST(0 AS BIT),
                  ITEM_TARGET_BIN_ID=CAST('' AS VARCHAR(7)),
                  BOX_NO=CAST(0 AS NUMERIC(5,0)),
                  CAST('' AS VARCHAR(100)) AS SP_ID,
                  reconciled=CAST(0 AS BIT),
				  CAST(0 AS NUMERIC(10,0)) AS FCO_MRP,
                  BO_ROW_ID=ROW_ID 
				 

                  FROM #TMPSTKDETAILSNEW  T1
              
              
              END
              ELSE
              BEGIN
                  
               -- select * into TMPSTK1 from #TMPSTK
         
            
                  
                  
                  SELECT SM.SECTION_NAME ,SD.SUB_SECTION_NAME , 
                  A.ARTICLE_NO,'' AS PRODUCT_CODE ,A.PARA1_NAME ,A.PARA2_NAME  ,
				  A.PARA3_NAME ,A.PARA4_NAME,A.PARA5_NAME,A.para6_name ,				 
				  A.ORDER_QTY  AS PENDING_ORD_QTY,
                  CONVERT(NUMERIC(10,2),CASE WHEN ISNULL(STK.QUANTITY_IN_STOCK,0)>=A.QUANTITY THEN A.QUANTITY ELSE ISNULL(STK.QUANTITY_IN_STOCK,0) END) AS PICKLIST_QTY,
                  PENDING_PICKLIST_QTY=CONVERT(NUMERIC(10,2),A.QUANTITY),
                  ISNULL(STK.QUANTITY_IN_STOCK,0) AS QUANTITY_IN_STOCK,
                  QUANTITY_IN_STOCK_RECEIPT_BIN=0,
                  ISNULL(OTHER_PEND_QTY,0) AS OTHER_PEND_QTY,
                  A.ARTICLE_CODE ,A.PARA1_CODE ,A.PARA2_CODE ,
                  BO_ROW_ID=A.ROW_ID 
                  FROM #TMPORDERNEW  A
                  JOIN ARTICLE ART (NOLOCK) ON A.ARTICLE_CODE =ART.ARTICLE_CODE 
                  JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE =ART.SUB_SECTION_CODE 
                  JOIN SECTIONM SM (NOLOCK) ON SM.SECTION_CODE =SD.SECTION_CODE 
                --  JOIN PARA1 P1 (NOLOCK) ON A.PARA1_CODE =P1.PARA1_CODE 
                 -- JOIN PARA2 P2 (NOLOCK) ON A.PARA2_CODE =P2.PARA2_CODE 
                  LEFT JOIN
                  (
                    
                    SELECT A.ROW_ID ,
                    SUM(QUANTITY_IN_STOCK) AS  QUANTITY_IN_STOCK
                    FROM #TMPSTKDETAILSNEW  A
                    GROUP BY A.ROW_ID
                  
                  ) STK ON A.ROW_ID=STK.ROW_ID 
               
                  

              END   

	
	END
	
	
	
	GOTO END_PROC
	
	LBLORDER:
	    
	    SELECT A.MEMO_ID, A.MEMO_NO ,A.MEMO_DT ,
	          ''  AS BIN_NAME,
	           SUM(B.QUANTITY) AS QUANTITY
	    FROM FLOOR_ST_MST A
	    JOIN FLOOR_ST_DET B ON A.MEMO_ID =B.MEMO_ID 
	    JOIN BIN ON BIN.BIN_ID =B.SOURCE_BIN_ID 
	    WHERE ISNULL(ORDER_ID,'') =@ORDER_ID  AND CANCELLED =0
	    GROUP BY A.MEMO_ID,A.MEMO_NO ,A.MEMO_DT
	    ORDER BY A.MEMO_ID,A.MEMO_NO ,A.MEMO_DT
	
	
	GOTO END_PROC
	
	
	LBLBINSTK:
	   SELECT BIN.BIN_NAME AS BIN_NAME,
	           ART.ARTICLE_NO ,
	           P1.PARA1_NAME ,
	           P2.PARA2_NAME ,
	           LEFT(B.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',B.PRODUCT_CODE)-1,-1),LEN(B.PRODUCT_CODE ))) as product_code,
	           SUM(B.QUANTITY) AS QUANTITY,
	           MST.ORDER_NO ,MST.ORDER_DT ,LM.AC_NAME,A.MEMO_NO,A.MEMO_DT 
	           ,LM.AC_NAME ,A.MEMO_NO,A.MEMO_DT
	           ,P2.PARA2_ORDER,
			   SD.SUB_SECTION_NAME ,
			   SM.SECTION_NAME,
			   LOC.ADDRESS1 ,LOC.ADDRESS2 ,LOC.PAN_NO ,LOC.TIN_NO ,LOC.TAN_NO ,LOC.PHONE ,
			   LOC.AREA_NAME ,LOC.CITY ,LOC.STATE ,LOC.DEPT_NAME ,lm.AC_NAME ,
			   MST.ORDER_NO ,MST.ORDER_DT ,
			   LM.ADDRESS0 ,LM.ADDRESS1 ,LM.ADDRESS2 ,
			   LM.AREA_NAME ,LM.CITY ,LM.STATE ,LM.PINCODE ,LM.AC_GST_NO ,sku.mrp,sku.ws_price
			   ,MST.REMARKS AS BO_REMARKS
	    FROM FLOOR_ST_MST A (NOLOCK)
	    JOIN FLOOR_ST_DET B (NOLOCK) ON A.MEMO_ID =B.MEMO_ID 
	    JOIN BIN (NOLOCK) ON BIN.BIN_ID =B.SOURCE_BIN_ID 
	    JOIN SKU  (NOLOCK) ON SKU.PRODUCT_CODE =B.PRODUCT_CODE 
	    JOIN ARTICLE ART (NOLOCK) ON SKU.ARTICLE_CODE =ART.ARTICLE_CODE 
        JOIN PARA1 P1 (NOLOCK) ON SKU.PARA1_CODE =P1.PARA1_CODE 
        JOIN PARA2 P2 (NOLOCK) ON SKU.PARA2_CODE =P2.PARA2_CODE 
        JOIN BUYER_ORDER_MST MST (NOLOCK) ON MST.ORDER_ID=A.ORDER_ID
        JOIN LMV01106 LM (NOLOCK) ON LM.AC_CODE=MST.AC_CODE
		JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE =ART.SUB_SECTION_CODE 
		JOIN SECTIONM SM (NOLOCK) ON SM.SECTION_CODE =SD.SECTION_CODE 
		JOIN LOC_VIEW  LOC (NOLOCK) ON LOC.DEPT_ID =A.location_Code
	
	    WHERE A.MEMO_ID = @ORDER_ID 
	    GROUP BY BIN.BIN_NAME ,ART.ARTICLE_NO ,P1.PARA1_NAME ,
        P2.PARA2_NAME , LEFT(B.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',B.PRODUCT_CODE)-1,-1),LEN(B.PRODUCT_CODE ))),
        MST.ORDER_NO ,MST.ORDER_DT ,LM.AC_NAME
        ,A.MEMO_NO,A.MEMO_DT ,LM.AC_NAME ,A.MEMO_NO,A.MEMO_DT,P2.PARA2_ORDER,
		SD.SUB_SECTION_NAME ,SM.SECTION_NAME,
	    LOC.ADDRESS1 ,LOC.ADDRESS2 ,LOC.PAN_NO ,LOC.TIN_NO ,LOC.TAN_NO ,LOC.PHONE ,
		LOC.AREA_NAME ,LOC.CITY ,LOC.STATE  ,LOC.DEPT_NAME ,LM.ADDRESS0 ,LM.ADDRESS1 ,LM.ADDRESS2 ,
			   LM.AREA_NAME ,LM.CITY ,LM.STATE ,LM.PINCODE ,LM.AC_GST_NO ,sku.mrp,sku.ws_price
			   ,MST.REMARKS
		ORDER BY 1,2,3,15


	GOTO END_PROC
	
	END_PROC:
	
SET NOCOUNT OFF  
END
--new