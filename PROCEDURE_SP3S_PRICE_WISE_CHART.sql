CREATE PROCEDURE SP3S_PRICE_WISE_CHART
(
    @NMODE			       INT=1, --- 1 FOR NRV --2 FOR QUANTITY AND 3 FOR GROSS MARGIN
	@DTODATE 			   VARCHAR(50)='', --DATE PASS OF FILTER
	@CCONVERSIONFACTOR	   INT=1,--1 FOR DIVIDE BY THOUSAND 2 FOR 10 THOUSAND 3 FOR LAKH   
	@LASTYEARCOMPERISION   INT=0,--0 FOR CURRENT YEAR VALUE AND 1 FOR CUR YEAR PREV YEAR AND CONVERSION FACTOR
	@CDEPTID               VARCHAR(5)='',--LOCATION FILTER
	@CGROUP_CODE           VARCHAR(50)
	
)
AS
BEGIN

	DECLARE @DSDATE DATETIME, @DEDATE DATETIME, @DDATECTR DATETIME, @DSTIME DATETIME,@TNRV NUMERIC(18,2),
        @NCONVERSIONAMOUNT NUMERIC(10,0),@TQTY NUMERIC(18,2),@TGM NUMERIC(10,2),@TPREVGM NUMERIC(10,2)
    
	SELECT @DSDATE=DATEADD(DD,0, DATEDIFF(DD,0, DATEADD( MM, -(((12 + DATEPART(M, @DTODATE)) - 4)%12), 
	@DTODATE ) - DATEPART(D,DATEADD(	MM,	-(((12 + DATEPART(M, @DTODATE)) - 4)%12),@DTODATE ))+1 ) )
    
    
    IF @CCONVERSIONFACTOR=0
    SET @CCONVERSIONFACTOR=1
    IF @CCONVERSIONFACTOR=1
       SET @NCONVERSIONAMOUNT=1000
    ELSE IF @CCONVERSIONFACTOR=2
       SET @NCONVERSIONAMOUNT=100000
    ELSE IF @CCONVERSIONFACTOR=3
       SET @NCONVERSIONAMOUNT=10000000
       

    IF @NMODE<>3
    BEGIN
        IF OBJECT_ID ('TEMPDB..#TMP_CUR_YEAR','U') IS NOT NULL
           DROP TABLE #TMP_CUR_YEAR
           
		SELECT GROUP_NAME,FROMN,TON,
		CONVERT(NUMERIC(18,2),SUM(RFNET)) AS CUR_TOTAL_AMT,
		CONVERT(NUMERIC(18,2),SUM(QUANTITY )) CUR_TOTAL_QTY,
		CONVERT(NUMERIC(18,2),0) AS PREV_TOTAL_AMT,
		CONVERT(NUMERIC(18,2),0) PREV_TOTAL_QTY
		INTO #TMP_CUR
		FROM CMM01106 A (NOLOCK)
		JOIN CMD01106 B (NOLOCK) ON A.CM_ID =B.CM_ID 
		JOIN
		(
		SELECT B.GROUP_NAME, FROMN,TON
		FROM CATGRPDET A  (NOLOCK) 
		JOIN CATGRPMST B(NOLOCK) ON A.GROUP_CODE=B.GROUP_CODE    
		WHERE A.GROUP_CODE = @CGROUP_CODE   
		) C ON B.MRP BETWEEN C.FROMN AND C.TON 
		JOIN LOCATION D (NOLOCK) ON A.location_Code =D.DEPT_ID
		WHERE A.CANCELLED =0 AND D.INACTIVE=0
		AND A.CM_DT BETWEEN @DSDATE AND @DTODATE
		GROUP BY GROUP_NAME,FROMN,TON
	
	 
	  IF @LASTYEARCOMPERISION=1
	  BEGIN
	     SET @DSDATE=(SELECT DATEADD(YEAR,-1,@DSDATE))
         SET @DTODATE=CONVERT(VARCHAR(11),(SELECT DATEADD(YEAR,-1,@DTODATE)),120)
         
	    INSERT INTO #TMP_CUR 
	    SELECT GROUP_NAME,FROMN,TON,
	    0 AS CUR_TOTAL_AMT,
	    0 AS CUR_TOTAL_QTY,
	    SUM(RFNET) AS PREV_TOTAL_AMT,
	    SUM(QUANTITY ) PREV_TOTAL_QTY
		FROM CMM01106 A (NOLOCK)
		JOIN CMD01106 B (NOLOCK) ON A.CM_ID =B.CM_ID 
		JOIN
		(
		SELECT B.GROUP_NAME, FROMN,TON
		FROM CATGRPDET A  (NOLOCK) 
		JOIN CATGRPMST B(NOLOCK) ON A.GROUP_CODE=B.GROUP_CODE    
		WHERE A.GROUP_CODE = @CGROUP_CODE   
		) C ON B.MRP BETWEEN C.FROMN AND C.TON 
		JOIN LOCATION D (NOLOCK) ON A.location_Code =D.DEPT_ID
		WHERE A.CANCELLED =0 AND D.INACTIVE=0
		AND A.CM_DT BETWEEN @DSDATE AND @DTODATE
		GROUP BY GROUP_NAME,FROMN,TON
	  END
	
	  IF OBJECT_ID ('TEMPDB..#TMP_CATGRP','U') IS NOT NULL
           DROP TABLE #TMP_CATGRP
	
	  
	  SELECT GROUP_NAME,FROMN,TON,
	        SUM(ISNULL(CUR_TOTAL_AMT,0)) AS  CUR_YEAR_NRV,
	        SUM(ISNULL(CUR_TOTAL_QTY,0)) AS  CUR_YEAR_QTY,
	        SUM(ISNULL(PREV_TOTAL_AMT,0)) AS PREV_YEAR_NRV,
	        SUM(ISNULL(PREV_TOTAL_QTY,0)) AS PREV_YEAR_QTY,
	        CONVERT(NUMERIC(18,2),0) AS CUR_CONT_PER,
	        CONVERT(NUMERIC(18,2),0) AS PREV_CONT_PER
	  INTO #TMP_CATGRP
	  FROM #TMP_CUR
	  GROUP BY GROUP_NAME,FROMN,TON
	  
	  IF @NMODE=1
	  BEGIN
	   SELECT @TNRV=SUM(ISNULL(CUR_YEAR_NRV ,0)) FROM #TMP_CATGRP
	   UPDATE #TMP_CATGRP SET CUR_CONT_PER =(CUR_YEAR_NRV *100)/CASE WHEN @TNRV=0 THEN 1 ELSE @TNRV END  
	   UPDATE #TMP_CATGRP SET CUR_YEAR_NRV=CUR_YEAR_NRV/@NCONVERSIONAMOUNT
	   
	   
	  IF @LASTYEARCOMPERISION=1
	  BEGIN  
       SELECT @TNRV=SUM(ISNULL(PREV_YEAR_NRV ,0)) FROM #TMP_CATGRP
	   UPDATE #TMP_CATGRP SET PREV_CONT_PER =(PREV_YEAR_NRV *100)/CASE WHEN @TNRV=0 THEN 1 ELSE @TNRV END  
	   UPDATE #TMP_CATGRP SET PREV_YEAR_NRV=PREV_YEAR_NRV/@NCONVERSIONAMOUNT
         
       SELECT A.GROUP_NAME,FROMN,TON,ISNULL(CUR_YEAR_NRV,0) AS CUR_YEAR_NRV ,
       ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER,
       ISNULL(PREV_YEAR_NRV,0) AS PREV_YEAR_NRV ,
       ISNULL(PREV_CONT_PER ,0) AS PREV_CONT_PER
       FROM #TMP_CATGRP A
       ORDER BY ISNULL(PREV_CONT_PER ,0) DESC
       
       GOTO END_PROC
     END
       
       SELECT A.GROUP_NAME,FROMN,TON,ISNULL(CUR_YEAR_NRV,0) AS CUR_YEAR_NRV ,
       ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER
       FROM #TMP_CATGRP A
       ORDER BY ISNULL(CUR_CONT_PER ,0) DESC
       GOTO END_PROC
     
	 END
	 ELSE
	 BEGIN
	     
	   SELECT @TQTY =SUM(ISNULL(CUR_YEAR_QTY ,0)) FROM #TMP_CATGRP
	   UPDATE #TMP_CATGRP SET CUR_CONT_PER =(CUR_YEAR_QTY *100)/CASE WHEN @TQTY=0 THEN 1 ELSE @TQTY END  
	  
	   
	  IF @LASTYEARCOMPERISION=1
	  BEGIN  
       SELECT @TQTY=SUM(ISNULL(PREV_YEAR_QTY ,0)) FROM #TMP_CATGRP
	   UPDATE #TMP_CATGRP SET PREV_CONT_PER =(PREV_YEAR_QTY *100)/CASE WHEN @TQTY=0 THEN 1 ELSE @TQTY END  
         
       SELECT A.GROUP_NAME,FROMN,TON,
       ISNULL(CUR_YEAR_QTY,0) AS CUR_YEAR_QTY ,
       ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER,
       ISNULL(PREV_YEAR_QTY,0) AS PREV_YEAR_QTY ,
       ISNULL(PREV_CONT_PER ,0) AS PREV_CONT_PER
       FROM #TMP_CATGRP A
       ORDER BY ISNULL(PREV_CONT_PER ,0) DESC
       
       GOTO END_PROC
     END
       
       SELECT A.GROUP_NAME,FROMN,TON,
       ISNULL(CUR_YEAR_QTY,0) AS CUR_YEAR_QTY ,
       ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER
       FROM #TMP_CATGRP A
       ORDER BY ISNULL(CUR_CONT_PER ,0) DESC
       
       GOTO END_PROC
	 
	 END
    END	
    ELSE
    BEGIN
    
     IF OBJECT_ID ('TEMPDB..#TMP_CUR_YEAR_GM','U') IS NOT NULL
           DROP TABLE #TMP_CUR_YEAR_GM
           
     SELECT GROUP_NAME,FROMN,TON,
	 CONVERT(NUMERIC(18,2),SUM(RFNET)) AS SALE_VALUE,
	 SUM(B.QUANTITY*(SKU.PURCHASE_PRICE+(CASE WHEN FORM.POST_TAX_SEPARATELY=0 
			         THEN ISNULL(SKU_OH.TAX_AMOUNT,0) ELSE 0 END)-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0))) AS SOLD_PURCHASE_VALUE,
	 CONVERT(NUMERIC(18,2),0) AS PREV_SALE_VALUE,
	 CONVERT(NUMERIC(18,2),0) PREV_SOLD_PURCHASE_VALUE,
	 CUR_CONT_PER=CONVERT(NUMERIC(18,2),0),
	 PREV_CONT_PER=CONVERT(NUMERIC(18,2),0),
	 CUR_GROSS_MARGIN=CONVERT(NUMERIC(18,2),0),
	 PREV_GROSS_MARGIN= CONVERT(NUMERIC(18,2),0)
	 INTO #TMP_CUR_YEAR_GM
	 FROM CMM01106 A (NOLOCK)
	 JOIN CMD01106 B (NOLOCK) ON A.CM_ID =B.CM_ID 
	 JOIN
	 (
		SELECT B.GROUP_NAME, FROMN,TON
		FROM CATGRPDET A  (NOLOCK) 
		JOIN CATGRPMST B(NOLOCK) ON A.GROUP_CODE=B.GROUP_CODE    
		WHERE A.GROUP_CODE = @CGROUP_CODE   
	  ) C ON B.MRP BETWEEN C.FROMN AND C.TON 
	JOIN LOCATION D (NOLOCK) ON A.location_Code =D.DEPT_ID
	JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =B.PRODUCT_CODE 
	LEFT JOIN SKU_OH (NOLOCK) ON SKU.PRODUCT_CODE =SKU_OH .PRODUCT_CODE 
	JOIN FORM (NOLOCK) ON SKU.FORM_ID=FORM.FORM_ID
	WHERE A.CANCELLED =0 AND D.INACTIVE=0
	AND A.CM_DT BETWEEN @DSDATE AND @DTODATE
	GROUP BY GROUP_NAME,FROMN,TON
		
	
	IF @LASTYEARCOMPERISION=1
	  BEGIN
	     SET @DSDATE=(SELECT DATEADD(YEAR,-1,@DSDATE))
         SET @DTODATE=CONVERT(VARCHAR(11),(SELECT DATEADD(YEAR,-1,@DTODATE)),120)
         
	     INSERT INTO #TMP_CUR_YEAR_GM 
	     SELECT GROUP_NAME,FROMN,TON,
	     CONVERT(NUMERIC(18,2),0) AS SALE_VALUE,
		 CONVERT(NUMERIC(18,2),0) SOLD_PURCHASE_VALUE,
		 CONVERT(NUMERIC(18,2),SUM(RFNET)) AS PREV_SALE_VALUE,
		 SUM(B.QUANTITY*(SKU.PURCHASE_PRICE+(CASE WHEN FORM.POST_TAX_SEPARATELY=0 
						 THEN ISNULL(SKU_OH.TAX_AMOUNT,0) ELSE 0 END)-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0))) AS PREV_SOLD_PURCHASE_VALUE,
		 0 AS CUR_CONT_PER,
	     0 AS PREV_CONT_PER,
	     0 AS CUR_GROSS_MARGIN,
	     0 AS PREV_GROSS_MARGIN
		 FROM CMM01106 A (NOLOCK)
		 JOIN CMD01106 B (NOLOCK) ON A.CM_ID =B.CM_ID 
		 JOIN
		 (
			SELECT B.GROUP_NAME, FROMN,TON
			FROM CATGRPDET A  (NOLOCK) 
			JOIN CATGRPMST B(NOLOCK) ON A.GROUP_CODE=B.GROUP_CODE    
			WHERE A.GROUP_CODE = @CGROUP_CODE   
		  ) C ON B.MRP BETWEEN C.FROMN AND C.TON 
		JOIN LOCATION D (NOLOCK) ON A.location_Code =D.DEPT_ID
		JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =B.PRODUCT_CODE 
		LEFT JOIN SKU_OH (NOLOCK) ON SKU.PRODUCT_CODE =SKU_OH .PRODUCT_CODE 
		JOIN FORM (NOLOCK) ON SKU.FORM_ID=FORM.FORM_ID
		WHERE A.CANCELLED =0 AND D.INACTIVE=0
		AND A.CM_DT BETWEEN @DSDATE AND @DTODATE
		GROUP BY GROUP_NAME,FROMN,TON
	  END
		
     
	   UPDATE 	#TMP_CUR_YEAR_GM SET CUR_GROSS_MARGIN=SALE_VALUE-SOLD_PURCHASE_VALUE     
	   WHERE SALE_VALUE>SOLD_PURCHASE_VALUE	
	   
	  SELECT @TGM=SUM(ISNULL(CUR_GROSS_MARGIN ,0)) FROM #TMP_CUR_YEAR_GM
	  
	  UPDATE #TMP_CUR_YEAR_GM SET CUR_CONT_PER =(CUR_GROSS_MARGIN *100)/CASE WHEN @TGM=0 THEN 1 ELSE @TGM END 
	  UPDATE #TMP_CUR_YEAR_GM SET CUR_GROSS_MARGIN=CUR_GROSS_MARGIN/@NCONVERSIONAMOUNT
      
      IF @LASTYEARCOMPERISION=1
	  BEGIN
	  UPDATE 	#TMP_CUR_YEAR_GM SET PREV_GROSS_MARGIN=PREV_SALE_VALUE-PREV_SOLD_PURCHASE_VALUE
	  WHERE PREV_SALE_VALUE>PREV_SOLD_PURCHASE_VALUE
	   
      SELECT @TPREVGM=SUM(ISNULL(PREV_GROSS_MARGIN ,0)) FROM #TMP_CUR_YEAR_GM
      UPDATE #TMP_CUR_YEAR_GM SET PREV_CONT_PER =(PREV_GROSS_MARGIN *100)/CASE WHEN @TPREVGM=0 THEN 1 ELSE @TPREVGM END 
	  UPDATE #TMP_CUR_YEAR_GM SET PREV_GROSS_MARGIN=PREV_GROSS_MARGIN/@NCONVERSIONAMOUNT
	       
      SELECT  GROUP_NAME,FROMN,TON,ISNULL(CUR_GROSS_MARGIN,0) AS CUR_GROSS_MARGIN,ISNULL(CUR_CONT_PER,0) AS CUR_CONT_PER ,
              ISNULL(PREV_GROSS_MARGIN,0) AS PREV_GROSS_MARGIN,ISNULL(PREV_CONT_PER,0) AS PREV_CONT_PER 
      FROM #TMP_CUR_YEAR_GM A
      ORDER BY ISNULL(PREV_CONT_PER,0) DESC
     END
     ELSE
     BEGIN
      SELECT  GROUP_NAME,FROMN,TON,ISNULL(CUR_GROSS_MARGIN,0) AS CUR_GROSS_MARGIN,ISNULL(CUR_CONT_PER,0) AS CUR_CONT_PER         
      FROM #TMP_CUR_YEAR_GM A
      ORDER BY ISNULL(CUR_CONT_PER,0) DESC
     
     END
     
	GOTO END_PROC	
    
  END
    
    
END_PROC:
END
