CREATE PROCEDURE SAVETRAN_XNRECON
(
	 @NUPDATEMODE NUMERIC(1,0)
	,@NSPID			   VARCHAR(50)=''
	,@CMEMONOPREFIX VARCHAR(50)
	,@CFINYEAR VARCHAR(10)
	,@CMEMOID			VARCHAR(40)=''
    ,@NBOXNO			VARCHAR(20)=''

)	
--WITH ENCRYPTION
AS
BEGIN
--changes in location id varchar(4)..Dinkar
	-- @NUPDATEMODE:	1- ADD CASE 
	--							2- EDIT CASE
	 	DECLARE	@CMASTERTABLE		VARCHAR(100),
					@CDETAILTABLENAME1		VARCHAR(100),
					@CDETAILTABLENAME2		VARCHAR(100),
					@CDETAILTABLENAME3		VARCHAR(100),
					@CTEMPMASTERTABLE_NAME		VARCHAR(100),
					@CTEMPDETAILTABLE1_NAME		VARCHAR(100),
					@CTEMPDETAILTABLE2_NAME		VARCHAR(100),
					@CTEMPDETAILTABLE3_NAME		VARCHAR(100),
					@CTEMPMASTERTABLE		VARCHAR(100),
					@CTEMPDETAILTABLE1		VARCHAR(100),
					@CTEMPDETAILTABLE2		VARCHAR(100),
					@CTEMPDETAILTABLE3		VARCHAR(100),
					@CERRORMSG					VARCHAR(500),
					@CKEYFIELD1				VARCHAR(50),
					@CKEYFIELDVAL1			VARCHAR(50),
					@CMEMONO					VARCHAR(20),
					@NMEMONOLEN				NUMERIC(20,0),
					@CMEMONOVAL				VARCHAR(50),
					@CCMD						NVARCHAR(4000),
					@CCMDOUTPUT				NVARCHAR(4000),
					@NSTEP					varchar(10) ,
					@NSAVETRANLOOP			BIT,
					@CLOCATIONID			VARCHAR(4),
					@CLOCID			VARCHAR(4),
					@CTEMPDBNAME			VARCHAR(100)
	DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))
	SET @CTEMPDBNAME = ''
	
	set @nStep=5
    EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	

	SET @CMASTERTABLE	= 'XNRECONM'
	SET @CDETAILTABLENAME1	= 'XNRECONP'
	SET @CDETAILTABLENAME2	= 'XNRECONC'
	SET @CDETAILTABLENAME3	= 'XNRECONMEMO'
	
	SET @CTEMPMASTERTABLE_NAME	= 'XNR_XNRECONM_UPLOAD'
	SET @CTEMPDETAILTABLE1_NAME	= 'XNR_XNRECONP_UPLOAD'
	SET @CTEMPDETAILTABLE2_NAME	= 'XNR_XNRECONC_UPLOAD'
	SET @CTEMPDETAILTABLE3_NAME	= 'XNR_XNRECONMEMO_UPLOAD'
	
	SET @CTEMPMASTERTABLE	= @CTEMPDBNAME +@CTEMPMASTERTABLE_NAME
	SET @CTEMPDETAILTABLE1	= @CTEMPDBNAME +@CTEMPDETAILTABLE1_NAME
	SET @CTEMPDETAILTABLE2	= @CTEMPDBNAME +@CTEMPDETAILTABLE2_NAME
	SET @CTEMPDETAILTABLE3	= @CTEMPDBNAME +@CTEMPDETAILTABLE3_NAME
	
	SET @CERRORMSG			= ''
	SET @CKEYFIELD1			= 'RECON_ID'
	SET @CMEMONO			= 'RECON_NO'
	SET @NMEMONOLEN			= 10

	set @nStep=10
    EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	  
    
    SELECT @CLOCID=LOCATION_CODE FROM XNR_XNRECONM_UPLOAD WHERE SP_ID=@NSPID       	
	
	IF ISNULL(@CLOCID,'')=''
		SELECT @CLOCATIONID		=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
	ELSE
		SET @CLOCATIONID=@CLOCID

		 IF ISNULL(@CLOCATIONID,'')=''
		 BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' LOCATION ID CAN NOT BE BLANK  '  
			GOTO END_PROC    
		 END

	
	BEGIN TRY
		BEGIN TRANSACTION
			set @nStep=15
		    EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	

		IF @NUPDATEMODE=4 AND ISNULL(@NBOXNO,'')=''
			BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' BOX NO. REQUIRED .....CANNOT PROCEED'
				GOTO END_PROC  		
			END
			
			IF @NUPDATEMODE=4
			BEGIN


				IF EXISTS(SELECT TOP 1 BOX_NO FROM XNRECONP WHERE RECON_ID=@CMEMOID AND BOX_NO=@NBOXNO)
				BEGIN
					set @nStep=20
					EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	
				
					SET @CCMD = N'DELETE FROM XNRECONP WITH (ROWLOCK) WHERE RECON_ID = ''' +@CMEMOID + ''' AND
								  BOX_NO='''+LTRIM(RTRIM(ISNULL(@NBOXNO,'')))+''''
					PRINT @CCMD			  
					EXEC SP_EXECUTESQL @CCMD
					
					SET @CCMD = N'UPDATE XNRECONM WITH (ROWLOCK) SET LAST_UPDATE = GETDATE() WHERE RECON_ID = ''' +@CMEMOID + ''''
					PRINT @CCMD
					EXEC SP_EXECUTESQL @CCMD
					GOTO END_PROC
					
				END
				ELSE
				BEGIN
					SET @CERRORMSG='INVALID BOX NO. PROVIDED.....PLEASE CHECK'
					GOTO END_PROC
				END	
			END
			set @nStep=22
			EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1
				        	
			--blank row remove
			IF EXISTS (SELECT TOP 1 sp_id FROM XNR_XNRECONP_UPLOAD WITH (NOLOCK) WHERE SP_ID=@NSPID AND isnull(PRODUCT_CODE,'')='')
				DELETE  FROM XNR_XNRECONP_UPLOAD WITH (ROWLOCK) WHERE SP_ID=@NSPID AND isnull(PRODUCT_CODE,'')=''

		IF @NUPDATEMODE = 1 -- ADDMODE	
		BEGIN	

			-- GENERATING NEW TRANSACTION NUMBER
			SET @NSAVETRANLOOP=0
			WHILE @NSAVETRANLOOP=0
			BEGIN
				set @nStep=25
				EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	
				EXEC GETNEXTKEY @CMASTERTABLE, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,@CFINYEAR,0, @CMEMONOVAL OUTPUT   
				PRINT @CMEMONOVAL
				set @nStep=27
				EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	
				SET @CCMD=N'IF EXISTS ( SELECT TOP 1 '+@CMEMONO+' FROM '+@CMASTERTABLE+' (nolock)
										WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' 
										AND FIN_YEAR = '''+@CFINYEAR+''' )
								SET @NLOOPOUTPUT=0
							ELSE
								SET @NLOOPOUTPUT=1'
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
			END
			
			IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'	
				  GOTO END_PROC  		
			END
			SET @NSTEP = 30		-- GENERATING NEW ID
		    EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	
			-- GENERATING NEW TRANSACTION ID
			SET @CKEYFIELDVAL1 = @CLOCATIONID + RIGHT(@CFINYEAR,2)+REPLICATE('0', (22-LEN(@CLOCATIONID + RIGHT(@CFINYEAR,2)))-LEN(LTRIM(RTRIM(@CMEMONOVAL))))  + LTRIM(RTRIM(@CMEMONOVAL))
			
			IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
				  GOTO END_PROC
			END
			ELSE 
			BEGIN
				set @nStep=33
				EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	

				SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' + @CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE  SP_ID ='''+LTRIM(RTRIM((@NSPID)))+''' '
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD
				
				set @nStep=35
				EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	
				SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE SP_ID ='''+LTRIM(RTRIM((@NSPID)))+'''' 
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD

				set @nStep=38
				EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	
				SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE2  + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE SP_ID ='''+LTRIM(RTRIM((@NSPID)))+''''
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD

				set @nStep=40
				EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	
				SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE3  + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE SP_ID ='''+LTRIM(RTRIM((@NSPID)))+''''
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD
				SET @CMEMOID=@CKEYFIELDVAL1
			END
		END
		ELSE  IF @NUPDATEMODE = 2 --CASE OF EDIT	
		BEGIN
			set @nStep=40
			EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	
			SET @CKEYFIELDVAL1=@CMEMOID
			SET @CCMD = N'DELETE FROM ' + @CDETAILTABLENAME1 + ' WHERE RECON_ID = ''' + @CMEMOID + ''' ' 
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD 

			set @nStep=42
			EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	
			SET @CCMD = N'DELETE FROM ' + @CDETAILTABLENAME2 + ' WHERE RECON_ID = ''' + @CMEMOID + ''' ' 
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD 

			set @nStep=44
			EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	
			SET @CCMD = N'DELETE FROM ' + @CDETAILTABLENAME3 + ' WHERE RECON_ID = ''' + @CMEMOID + ''' ' 
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD 
		END

		set @nStep=47
		EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	
		--UPDATING ROW_IDS IN DETAIL TABLES
		SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(40), NEWID()),RECON_ID = ''' + @CMEMOID + '''
					WHERE LEFT(ROW_ID,5) = ''LATER'' AND SP_ID ='''+LTRIM(RTRIM((@NSPID)))+''''
		EXEC SP_EXECUTESQL @CCMD

		set @nStep=49
		EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	
		SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE2 + ' SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(40), NEWID()),RECON_ID = ''' + @CMEMOID + '''
					WHERE LEFT(ROW_ID,5) = ''LATER'' AND SP_ID ='''+LTRIM(RTRIM((@NSPID)))+''''
		EXEC SP_EXECUTESQL @CCMD

		set @nStep=51
		EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	

		SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE3 + ' SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(40), NEWID()),RECON_ID = ''' + @CMEMOID + '''
					WHERE LEFT(ROW_ID,5) = ''LATER'' AND SP_ID ='''+LTRIM(RTRIM((@NSPID)))+''''
		EXEC SP_EXECUTESQL @CCMD

		 DECLARE @CWHERECLAUSE VARCHAR(1000)
        SET @CWHERECLAUSE = ' SP_ID='''+LTRIM(RTRIM((@NSPID)))+''''


	set @nStep=53
    EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	
				EXEC UPDATEMASTERXN_MIRROR 
				  @CSOURCEDB	  = @CTEMPDBNAME
				, @CSOURCETABLE   = @CTEMPMASTERTABLE_NAME
				, @CDESTDB		  = ''
				, @CDESTTABLE	  = @CMASTERTABLE
				, @CKEYFIELD1	  = @CKEYFIELD1
				,@CFILTERCONDITION=@CWHERECLAUSE

	set @nStep=55
    EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	
				EXEC UPDATEMASTERXN_MIRROR 
				@CSOURCEDB		  = @CTEMPDBNAME
				, @CSOURCETABLE   = @CTEMPDETAILTABLE1_NAME
				, @CDESTDB		  = ''
				, @CDESTTABLE	  = @CDETAILTABLENAME1
				, @CKEYFIELD1	  = 'ROW_ID'
				,@CFILTERCONDITION=@CWHERECLAUSE
				
	set @nStep=58
    EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	
				EXEC UPDATEMASTERXN_MIRROR 
				  @CSOURCEDB	  = @CTEMPDBNAME
				, @CSOURCETABLE   = @CTEMPDETAILTABLE2_NAME
				, @CDESTDB		  = ''
				, @CDESTTABLE	  = @CDETAILTABLENAME2
				, @CKEYFIELD1	  = 'ROW_ID'
				,@CFILTERCONDITION=@CWHERECLAUSE
				
	set @nStep=61
    EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	
				EXEC UPDATEMASTERXN_MIRROR 
				  @CSOURCEDB	  = @CTEMPDBNAME
				, @CSOURCETABLE   = @CTEMPDETAILTABLE3_NAME
				, @CDESTDB		  = ''
				, @CDESTTABLE	  = @CDETAILTABLENAME3
				, @CKEYFIELD1	  = 'ROW_ID'
				,@CFILTERCONDITION=@CWHERECLAUSE
				
				
							
	set @nStep=65
    EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	
			DECLARE @CRECONNO VARCHAR(100)
			
			IF @NUPDATEMODE=1
				SET @CMEMOID=@CKEYFIELDVAL1
			ELSE
			begin
				set @cCmd=N'SELECT TOP 1 @cMemoId=recon_id FROM '+@CTEMPMASTERTABLE +' WHERE  SP_ID ='''+LTRIM(RTRIM((@NSPID)))+''''
				EXEC SP_EXECUTESQL @cCmd,N'@cMemoId varchar(40) output',@CMEMOID OUTPUT
			end	

	set @nStep=68
    EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	
			SELECT TOP 1 @CRECONNO=B.RECON_NO  FROM 
			(
			SELECT B.XN_ID ,A.XN_TYPE,A.RECON_ID   FROM XNRECONM A (NOLOCK)
			JOIN XNRECONMEMO B (NOLOCK) ON A.RECON_ID =B.RECON_ID 
			WHERE A.RECON_ID=@CMEMOID 
			) A
			JOIN
			(
			 SELECT B.XN_ID ,A.XN_TYPE,A.RECON_NO    FROM XNRECONM A (NOLOCK)
			 JOIN XNRECONMEMO B (NOLOCK) ON A.RECON_ID =B.RECON_ID 
			 WHERE A.RECON_ID<>@CMEMOID 
			) B ON A.XN_TYPE =B.XN_TYPE AND A.XN_ID  =B.XN_ID 

			IF ISNULL(@CRECONNO,'')<>''
			BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' GIT HAS ALREADY RECONCILED MEMO NO...'+@CRECONNO
				GOTO END_PROC
			END

			  if not  exists (select top 1 'u' from XNRECONMEMO a  WHERE A.RECON_ID=@CMEMOID   )
		   begin
			  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + 'Blank challan can not be saved...'+@CRECONNO  
			  GOTO END_PROC  

		   end
  

	set @nStep=70
    EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	
			DECLARE @cXNTYPE VARCHAR(20)
			SELECT @cXNTYPE =XN_TYPE FROM XNRECONM WHERE recon_id=@CMEMOID
			IF @cXNTYPE='PUR'
				UPDATE T1 SET T1.SOURCE_MEMO_NO=T2.BILL_NO
				FROM XNRECONMEMO T1
				JOIN XNRECONM B ON B.recon_id=T1.recon_id
				JOIN PIM01106 T2 (NOLOCK)  ON T2.mrr_id=T1.XN_ID
				WHERE B.XN_TYPE='PUR' AND b.recon_id=@cMemoId
			ELSE if @cXNTYPE='PRT'
				UPDATE T1 SET T1.SOURCE_MEMO_NO=''
				FROM XNRECONMEMO T1
				JOIN XNRECONM B ON B.recon_id=T1.recon_id
				JOIN RMM01106 T2 (NOLOCK)  ON T2.RM_ID=T1.XN_ID
				WHERE B.XN_TYPE='PRT' AND b.recon_id=@cMemoId
			ELSE if @cXNTYPE='WSI'
				UPDATE T1 SET T1.SOURCE_MEMO_NO=''
				FROM XNRECONMEMO T1
				JOIN XNRECONM B ON B.recon_id=T1.recon_id
				JOIN INM01106 T2 (NOLOCK)  ON T2.INV_ID=T1.XN_ID
				WHERE B.XN_TYPE='WSI' AND b.recon_id=@cMemoId
			ELSE if @cXNTYPE='WSR'
				UPDATE T1 SET T1.SOURCE_MEMO_NO=(CASE WHEN T2.MODE=2 THEN T2.MANUAL_DN_NO ELSE T2.CN_NO END)
				FROM XNRECONMEMO T1
				JOIN XNRECONM B ON B.recon_id=T1.recon_id
				JOIN CNM01106 T2 (NOLOCK)  ON T2.CN_ID=T1.XN_ID
				WHERE B.XN_TYPE='WSR' AND b.recon_id=@cMemoId
			ELSE if @cXNTYPE='DCO'
				UPDATE T1 SET T1.SOURCE_MEMO_NO=T2.MEMO_NO
				FROM XNRECONMEMO T1
				JOIN XNRECONM B ON B.recon_id=T1.recon_id
				JOIN FLOOR_ST_MST T2 (NOLOCK)  ON T2.MEMO_ID=T1.XN_ID
				WHERE B.XN_TYPE='DCO' AND b.recon_id=@cMemoId
			
		set @nStep=74
		EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        				
	END TRY
	BEGIN CATCH
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
	END CATCH
END_PROC:
	IF @@TRANCOUNT>0 and isnull(@CERRORMSG,'')=''
	BEGIN
		commit TRANSACTION
	END	
	ELSE
	BEGIN
			ROLLBACK
	END		
		INSERT @OUTPUT ( ERRMSG, MEMO_ID)
		VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )
		
	SELECT * FROM @OUTPUT	

	set @nStep=77
    EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        	
	DELETE A FROM XNR_XNRECONM_UPLOAD A (NOLOCK) WHERE SP_ID=LTRIM(RTRIM((@NSPID)))
	DELETE A FROM XNR_XNRECONP_UPLOAD A (NOLOCK) WHERE SP_ID=LTRIM(RTRIM((@NSPID)))
	DELETE A FROM XNR_XNRECONC_UPLOAD A (NOLOCK) WHERE SP_ID=LTRIM(RTRIM((@NSPID)))
	DELETE A FROM XNR_XNRECONMEMO_UPLOAD A (NOLOCK) WHERE SP_ID=LTRIM(RTRIM((@NSPID)))

	set @nStep=80
    EXEC SP_CHKXNSAVELOG 'xnr',@nStep,1,@nSpId,'',1	        		
	
END

