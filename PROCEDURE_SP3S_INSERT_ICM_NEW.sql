CREATE PROCEDURE SP3S_INSERT_ICM_NEW
 @CTODATE VARCHAR(10),
 @CDEPT_ID VARCHAR(5)=''
AS
BEGIN

   DECLARE @CLOCID VARCHAR(5),@CMEMOPREFIX VARCHAR(50),@CMEMO_DT DATETIME,@CTEMPDBNAME VARCHAR(100),
           @CTEMPMASTERTABLENAME VARCHAR(100),@CTEMPDETAILTABLENAME VARCHAR(100), @CTEMPMASTERTABLE VARCHAR(100),
           @CTEMPDETAILTABLE VARCHAR(100),@NSPID INT,@CCMD  NVARCHAR(MAX),@CERRORMSG NVARCHAR(MAX),@CSTEP INT,
           @NSAVETRANLOOP	BIT,@CMASTERTABLENAME VARCHAR(100),@CDETAILTABLENAME VARCHAR(100),@CMEMONO	VARCHAR(20),
		   @NMEMONOLEN	NUMERIC(20,0),@CMEMONOPREFIX VARCHAR(50),@CMEMONOVAL	VARCHAR(50),@CKEYFIELDVAL1 VARCHAR(50),
		   @CLOCATIONID VARCHAR(5),@CFINYEAR VARCHAR(10),@APPROVAL_LASTKEYVAL VARCHAR(40),@APM_LASTKEYVAL VARCHAR(40)
    
           

   IF @CDEPT_ID=''
    SELECT @CLOCID =DEPT_ID FROM NEW_APP_LOGIN_INFO (NOLOCK) WHERE SPID=@@SPID 
	ELSE 
	SET @CLOCID=@CDEPT_ID

   SET @CLOCATIONID=@CLOCID
    
 
    
    DECLARE @TABLE TABLE(MEMO_ID VARCHAR(50),MEMO_DT DATETIME)
    DECLARE @TABLE1 TABLE(MEMO_ID VARCHAR(50),MEMO_DT DATETIME)
   

 
 ------------ FROM  RETURN----------------
 

BEGIN TRY

            
    INSERT INTO @TABLE (MEMO_ID,MEMO_DT)
    SELECT MEMO_ID,MEMO_DT FROM APPROVAL_RETURN_MST WHERE location_code=@CLOCID AND MEMO_DT <=@CTODATE
    

    INSERT INTO @TABLE1 (MEMO_ID,MEMO_DT)
    SELECT MEMO_ID,MEMO_DT FROM APM01106 WHERE location_code=@CLOCID AND MEMO_DT <=@CTODATE
    
    SELECT @APPROVAL_LASTKEYVAL=MAX(MEMO_NO) FROM APPROVAL_RETURN_MST
    SELECT @APM_LASTKEYVAL=MAX(MEMO_NO) FROM APM01106

     SET @CSTEP = 10		
       
    DECLARE @BLOOP BIT,@NCNT INT,@CMEMO_ID VARCHAR(100),@DMEMODT DATETIME
	SET @BLOOP=0
	SET @NCNT=1

	WHILE @BLOOP=0
	BEGIN
		
		SET @CMEMO_ID=''	
		SET @NCNT=@NCNT+1
		SELECT TOP 1 @CMEMO_ID=MEMO_ID,@DMEMODT=MEMO_DT FROM @TABLE
		
		IF ISNULL(@CMEMO_ID,'')=''
			BREAK
			
		BEGIN TRANSACTION	
			
		SET @CMASTERTABLENAME	= 'ICM01106'
		SET @CDETAILTABLENAME	= 'ICD01106'
		SET @CMEMONO			= 'CNC_MEMO_NO'	
		SET @NMEMONOLEN			= 10
		SELECT @CFINYEAR = '01'+DBO.FN_GETFINYEAR(@DMEMODT)
		SELECT @CMEMONOPREFIX =(VALUE + '' +'U-' ) FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'
	
    						
			 SET @CSTEP = 20
			SET @NSAVETRANLOOP=0
			WHILE @NSAVETRANLOOP=0
			BEGIN
				EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,
								@CFINYEAR,0, @CMEMONOVAL OUTPUT   
				
				PRINT ISNULL(@CMEMONOVAL,'NULL ICM MEMONO')
				SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+' 
										WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' 
										AND FIN_YEAR = '''+@CFINYEAR+''' )
								SET @NLOOPOUTPUT=0
							ELSE
								SET @NLOOPOUTPUT=1'
				
				PRINT ISNULL(@CCMD,'NULL CMD OF ICM MEMO')
				
				EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
			END
			
			

			IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@CSTEP)) + ' ERROR CREATING NEXT MEMO NO....'	
				  GOTO END_PROC  		
			END
       
			SET @CSTEP = 30	

			SET @CKEYFIELDVAL1 = @CLOCATIONID + @CFINYEAR+ REPLICATE('0', 15-LEN(LTRIM(RTRIM(@CMEMONOVAL)))) + LTRIM(RTRIM(@CMEMONOVAL))
			IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@CSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
				  GOTO END_PROC
			END
			
			

	    SET @CSTEP=40		
		
	    SET @CCMD=N' INSERT ICM01106	( CNC_MEMO_NO, CNC_MEMO_DT, CANCELLED, CNC_TYPE, TOTAL_AMOUNT, DEPT_ID, LAST_UPDATE, 
					 USER_CODE, APPROVED, SENT_TO_HO, CNC_MEMO_ID, FIN_YEAR, UPLOADED_TO_ACTIVSTREAM, REF_MEMO_ID, 
					 REF_XN_TYPE, FROM_STOCKAUDIT, EDT_USER_CODE, CNC_TIME, STOCK_ADJ_NOTE, CNC_DT, RFOPT_UPDATED, 
					 REMARKS, SENT_FOR_RECON, BIN_ID )
					 SELECT '''+@CMEMONOVAL+''' AS CNC_MEMO_NO,MEMO_DT AS CNC_MEMO_DT,CANCELLED AS CANCELLED,2 AS CNC_TYPE, 0 AS TOTAL_AMOUNT,DEPT_ID AS DEPT_ID,
					 GETDATE() AS LAST_UPDATE,''0000000'' AS USER_CODE,0 AS APPROVED,0 AS  SENT_TO_HO,'''+@CKEYFIELDVAL1+''' AS CNC_MEMO_ID,
					 FIN_YEAR AS FIN_YEAR,0 AS UPLOADED_TO_ACTIVSTREAM,
					 MEMO_ID AS  REF_MEMO_ID,'''' AS  REF_XN_TYPE, 0 AS FROM_STOCKAUDIT,''0000000'' AS  EDT_USER_CODE,MEMO_TIME AS CNC_TIME
					  ,0 AS  STOCK_ADJ_NOTE,GETDATE() AS CNC_DT,0 AS RFOPT_UPDATED,MEMO_NO AS  REMARKS, 0 AS SENT_FOR_RECON,''000'' AS  BIN_ID
					  FROM APPROVAL_RETURN_MST WHERE MEMO_ID='''+ @CMEMO_ID +''' AND LOCATION_CODE ='''+ @CLOCID +''''
	    
	   PRINT @CCMD
	    EXEC SP_EXECUTESQL @CCMD
	 
	   
	  
	    SET @CSTEP=50 

	    SET @CCMD=N'INSERT ICD01106	( CNC_MEMO_NO, PRODUCT_CODE, QUANTITY, DEPT_ID, ROW_ID, LAST_UPDATE, CNC_MEMO_ID, 
					  FIN_YEAR, RATE, ADJ_PERCENTAGE, BIN_ID )  
					  SELECT '''+@CMEMONOVAL+''' AS CNC_MEMO_NO,APD.PRODUCT_CODE AS PRODUCT_CODE, DET.QUANTITY AS QUANTITY,
					  MST.DEPT_ID AS  DEPT_ID,NEWID() AS  ROW_ID,GETDATE() AS  LAST_UPDATE,'''+@CKEYFIELDVAL1+''' AS  CNC_MEMO_ID, MST.FIN_YEAR AS FIN_YEAR,
					  0 AS RATE, 0 AS ADJ_PERCENTAGE, ''000'' AS BIN_ID 
					  FROM APPROVAL_RETURN_DET DET JOIN APPROVAL_RETURN_MST MST ON MST.MEMO_ID=DET.MEMO_ID
					  JOIN APD01106 APD ON DET.APD_ROW_ID=APD.ROW_ID
					  WHERE MST.MEMO_ID='''+ @CMEMO_ID +''' AND MST.LOCATION_CODE ='''+ @CLOCID +''''
		   PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
    			
		SET @CSTEP=60
		
		DELETE FROM @TABLE WHERE MEMO_ID=@CMEMO_ID
		
		DELETE  A FROM APPROVAL_RETURN_DET A JOIN APPROVAL_RETURN_MST B ON A.MEMO_ID=B.MEMO_ID 
		WHERE A.MEMO_ID=@CMEMO_ID
		
		DELETE  FROM APPROVAL_RETURN_MST WHERE MEMO_ID=@CMEMO_ID
		
		IF NOT EXISTS(SELECT * FROM APPROVAL_RETURN_MST WHERE MEMO_NO=@APPROVAL_LASTKEYVAL)
		BEGIN
		DELETE FROM KEYS WHERE TABLENAME='APPROVAL_RETURN_MST' AND FINYEAR=@CFINYEAR
		END

		IF ISNULL(@CERRORMSG,'')=''
		COMMIT 
		
	END  
   
   
 ------------ FROM  ISSUE----------------
 
	SET @CSTEP=70

	SET @BLOOP=0
	SET @NCNT=1

	WHILE @BLOOP=0
	BEGIN
		
	   SET @CMEMO_ID=''	
	   SET @NCNT=@NCNT+1
	   SELECT TOP 1 @CMEMO_ID=MEMO_ID,@DMEMODT=MEMO_DT FROM @TABLE1
		
	   IF ISNULL(@CMEMO_ID,'')=''
			BREAK
	   
	   BEGIN TRANSACTION
	   	SET @CMASTERTABLENAME	= 'ICM01106'
		SET @CDETAILTABLENAME	= 'ICD01106'
		SET @CMEMONO			= 'CNC_MEMO_NO'	
		SET @NMEMONOLEN			= 10
		SELECT @CMEMONOPREFIX =(VALUE + '' +'C-' ) FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'
	
		 SELECT @CFINYEAR = '01'+DBO.FN_GETFINYEAR(@DMEMODT)
    
			SET @CSTEP=80
			SET @NSAVETRANLOOP=0
			WHILE @NSAVETRANLOOP=0
			BEGIN
				EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,
								@CFINYEAR,0, @CMEMONOVAL OUTPUT   
				
				PRINT ISNULL(@CMEMONOVAL,'NULL CNC MEMO NO-1')+':'+@CMEMONOPREFIX
				SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+' 
										WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' 
										AND FIN_YEAR = '''+@CFINYEAR+''' )
								SET @NLOOPOUTPUT=0
							ELSE
								SET @NLOOPOUTPUT=1'
				PRINT ISNULL(@CCMD,'NULL CNC MEMO CMD:')+@CMEMO_ID
				
				EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
			END

			IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@CSTEP)) + ' ERROR CREATING NEXT MEMO NO....'	
				  GOTO END_PROC  		
			END

			SET @CSTEP = 90		

			SET @CKEYFIELDVAL1 = @CLOCATIONID + @CFINYEAR+ REPLICATE('0', 15-LEN(LTRIM(RTRIM(@CMEMONOVAL)))) + LTRIM(RTRIM(@CMEMONOVAL))
			IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@CSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
				  GOTO END_PROC
			END
    
	   
	   SET @CSTEP=100		
	   SET @CCMD=N' INSERT ICM01106	( CNC_MEMO_NO, CNC_MEMO_DT, CANCELLED, CNC_TYPE, TOTAL_AMOUNT, DEPT_ID, LAST_UPDATE, 
				 USER_CODE, APPROVED, SENT_TO_HO, CNC_MEMO_ID, FIN_YEAR, UPLOADED_TO_ACTIVSTREAM, REF_MEMO_ID, REF_XN_TYPE,
				  FROM_STOCKAUDIT, EDT_USER_CODE, CNC_TIME, STOCK_ADJ_NOTE, CNC_DT, RFOPT_UPDATED, REMARKS, 
				  SENT_FOR_RECON, BIN_ID )  
				  SELECT 	'''+@CMEMONOVAL+''' AS   CNC_MEMO_NO,MEMO_DT AS  CNC_MEMO_DT, CANCELLED AS CANCELLED,1 AS  CNC_TYPE,
				  0 AS  TOTAL_AMOUNT, DEPT_ID AS DEPT_ID,GETDATE() AS  LAST_UPDATE,''0000000'' AS  USER_CODE,
				  0 AS APPROVED,0 AS  SENT_TO_HO, '''+@CKEYFIELDVAL1+''' AS CNC_MEMO_ID, FIN_YEAR AS FIN_YEAR,0 AS  UPLOADED_TO_ACTIVSTREAM,
				  MEMO_ID AS  REF_MEMO_ID,'''' AS  REF_XN_TYPE, 
				  0 AS  FROM_STOCKAUDIT,''0000000'' AS  EDT_USER_CODE,GETDATE() AS  CNC_TIME, 0 AS  STOCK_ADJ_NOTE,
				  GETDATE() AS  CNC_DT,0 AS  RFOPT_UPDATED,MEMO_NO AS  REMARKS,0 AS SENT_FOR_RECON,
				  ''000'' AS  BIN_ID FROM APM01106 WHERE MEMO_ID='''+@CMEMO_ID+'''AND location_code ='''+ @CLOCID +''''
	   PRINT @CCMD
	   EXEC SP_EXECUTESQL @CCMD

	 
	   SET @CSTEP=110
	   SET @CCMD=N'INSERT ICD01106	( CNC_MEMO_NO, PRODUCT_CODE, QUANTITY, DEPT_ID, ROW_ID, LAST_UPDATE, CNC_MEMO_ID,
				  FIN_YEAR, RATE, ADJ_PERCENTAGE, BIN_ID ) 
				  SELECT 	'''+@CMEMONOVAL+''' AS CNC_MEMO_NO, PRODUCT_CODE AS PRODUCT_CODE, QUANTITY AS QUANTITY, APD.DEPT_ID AS DEPT_ID,
				  NEWID() AS  ROW_ID,GETDATE() AS  LAST_UPDATE, 
				 '''+@CKEYFIELDVAL1+''' AS  CNC_MEMO_ID,APM.FIN_YEAR AS FIN_YEAR, 0 AS RATE, 0 AS ADJ_PERCENTAGE, ''000'' AS BIN_ID
				  FROM APD01106 APD JOIN APM01106 APM ON APD.MEMO_ID=APM.MEMO_ID
		          WHERE APM.MEMO_ID='''+@CMEMO_ID+'''AND APM.location_code='''+ @CLOCID +''''
		
	    PRINT @CCMD
	   EXEC SP_EXECUTESQL @CCMD
	   

	   SET @CSTEP=120
	   
	   DELETE FROM @TABLE1	WHERE MEMO_ID=@CMEMO_ID
	   
	   DELETE  A FROM APD01106 A JOIN APM01106 B ON A.MEMO_ID=B.MEMO_ID WHERE B.MEMO_ID=@CMEMO_ID
	   
	   DELETE  FROM APM01106 WHERE MEMO_ID=@CMEMO_ID
	   
	   
	   IF NOT EXISTS(SELECT * FROM APM01106 WHERE MEMO_NO=@APM_LASTKEYVAL)
		BEGIN
		DELETE FROM KEYS WHERE TABLENAME='APM01106' AND FINYEAR=@CFINYEAR
		END
	
		IF ISNULL(@CERRORMSG,'')=''
		COMMIT 
		 
	END

END TRY 
BEGIN CATCH
   SET @CERRORMSG = 'SP3S_INSERT_ICM_NEW STEP- ' + LTRIM(STR(@CSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
   GOTO END_PROC
END CATCH  

END_PROC:
   IF @@TRANCOUNT  > 0
   BEGIN
        IF ISNULL(@CERRORMSG,'')<>''
        BEGIN
			PRINT 'ROLLBACK'
            ROLLBACK TRAN SAVEPOINT1
        END
   END         
   
   
   SELECT ISNULL(@CERRORMSG,'') AS ERRMSG
END						-- 
---------------------------------------- END OF PROCEDURE SP3S_INSERT_ICM
