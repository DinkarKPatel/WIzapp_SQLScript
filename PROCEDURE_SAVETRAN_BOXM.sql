create PROCEDURE SAVETRAN_BOXM
(
	@NUPDATEMODE		NUMERIC(2,0),
	@NSPID				varchar(40)='',
	@NBOXNO             varchar(40)='',
	@CFINYEAR          VARCHAR(5),
	@MRR_ID            VARCHAR(22) ='',
	@BCALLEDFROMSAVETRAN BIT=0,
	@CERRORMSG VARCHAR(MAX) OUTPUT
	
)
AS
BEGIN
    DECLARE  @LENABLETEMPDATABASE	BIT,@CTEMPDBNAME VARCHAR(100),@NSTEP INT,
             @CMASTERTABLENAME VARCHAR(100),@CDETAILTABLENAME VARCHAR(100),
             @CTEMPMASTERTABLENAME VARCHAR(100),@CTEMPDETAILTABLENAME VARCHAR(100),
             @CTEMPMASTERTABLE VARCHAR(100),@CTEMPDETAILTABLE VARCHAR(100),
             @CKEYFIELD1 VARCHAR(100),@CMEMONO VARCHAR(10),
             @NMEMONOLEN INT,@CCMD NVARCHAR(MAX),@NSAVETRANLOOP INT,@CMEMONOVAL VARCHAR(20),
             @TMP_BOX_NO VARCHAR(100),@CKEYFIELDVAL1 VARCHAR(100),@CMEMONOPREFIX VARCHAR(20),
             @BOX_ID_FIN_YEAR VARCHAR(2),@CHODEPT_ID VARCHAR(2),@CPREFIX VARCHAR(10),@CLOCATIONID VARCHAR(4)
    
	SET @CTEMPDBNAME = ''
	
	SET	@NSTEP = 2
	
	SET @CMASTERTABLENAME	= 'BOXM'
	SET @CDETAILTABLENAME	= 'BOXD'
		
	SET @CTEMPMASTERTABLENAME	= 'BOX_BOXM_UPLOAD'
	SET @CTEMPDETAILTABLENAME	= 'BOX_BOXD_UPLOAD'
			
	SET @CTEMPMASTERTABLE	= @CTEMPDBNAME + @CTEMPMASTERTABLENAME
	SET @CTEMPDETAILTABLE	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME
	
	SET @CKEYFIELD1			= 'BOX_ID'
	SET @CMEMONO			= 'BOX_NO'

   
	BEGIN TRY	
    IF @BCALLEDFROMSAVETRAN<>1
	BEGIN TRANSACTION

	IF @NUPDATEMODE=3 AND  @BCALLEDFROMSAVETRAN=0  
	BEGIN
	     IF ISNULL(@MRR_ID,'')=''
		 BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + 'BOX ID CAN NOT BE BLANK FOR CANCELATION'
			GOTO END_PROC
		END
	   UPDATE BOXM SET CANCELLED=1 WHERE BOX_ID=@MRR_ID
      GOTO END_PROC
	END
	
	IF @BCALLEDFROMSAVETRAN=1
	BEGIN

	     IF NOT EXISTS (SELECT TOP 1 'U'  FROM BOXM WHERE REF_MRR_ID =@MRR_ID AND BOX_NO=@NBOXNO )
            SET @NUPDATEMODE=1
			  
			  DELETE A FROM BOX_BOXM_UPLOAD A (NOLOCK) WHERE SP_ID=@NSPID
	          DELETE A FROM BOX_BOXD_UPLOAD A (NOLOCK) WHERE SP_ID=@NSPID
      
        IF @NUPDATEMODE=1
        BEGIN
            
            -- SELECT 1,@CTEMPMASTERTABLE
             SET @CCMD = N' INSERT ' + @CTEMPMASTERTABLE + '	( BOX_ID, BOX_NO, BOX_DT, LAST_UPDATE, FIN_YEAR, REF_MRR_ID,SP_ID,location_code ) 
              SELECT 	''LATER'' AS   BOX_ID,'''+STR(RTRIM(LTRIM(@NBOXNO)))+''' AS  BOX_NO,MRR_DT AS  BOX_DT,GETDATE() LAST_UPDATE, A.FIN_YEAR,A.MRR_ID REF_MRR_ID ,
			  '''+@NSPID+''' AS SP_ID,a.location_code
              FROM PIM01106 (NOLOCK)  A
              WHERE MRR_ID ='''+@MRR_ID+''' '
              PRINT @CCMD+'TEST'
              EXEC SP_EXECUTESQL @CCMD 
              
        END
        ELSE
        BEGIN
            
			
              SET @CCMD = N' INSERT ' + @CTEMPMASTERTABLE + '	( BOX_ID, BOX_NO, BOX_DT, LAST_UPDATE, FIN_YEAR, REF_MRR_ID,SP_ID ,location_code) 
              SELECT 	BOX_ID,BOX_NO,BOX_DT,LAST_UPDATE, A.FIN_YEAR,A.REF_MRR_ID ,
			  '''+@NSPID+''' AS SP_ID,a.location_code
              FROM BOXM (NOLOCK)  A
              WHERE REF_MRR_ID ='''+@MRR_ID+'''
			  AND BOX_NO= '''+RTRIM(LTRIM(STR(@NBOXNO)))+''''
			  print @CCMD
              EXEC SP_EXECUTESQL @CCMD 
        
        END


         
			 SET @CCMD = N' INSERT ' + @CTEMPDETAILTABLE + '	( BOX_ID, PRODUCT_CODE, ROW_ID,QUANTITY,SP_ID ) 
			 SELECT 	''LATER'' AS  BOX_ID, PRODUCT_CODE,''LATER'' AS  ROW_ID ,QUANTITY, '''+@NSPID+''' AS SP_ID
			 FROM PID01106 (NOLOCK) 
			 WHERE MRR_ID ='''+@MRR_ID+''' 
			 AND  BOX_NO= '''+RTRIM(LTRIM(STR(@NBOXNO)))+''' '
			 EXEC SP_EXECUTESQL @CCMD 

			
			
    END
	IF @BCALLEDFROMSAVETRAN=0
	      UPDATE BOX_BOXM_UPLOAD SET BOX_NO=1  WHERE SP_ID=@NSPID
	

	SELECT TOP 1 @CLOCATIONID		= LOCATION_CODE FROM BOX_BOXM_UPLOAD WHERE SP_ID =@NSPID 
	SELECT @CHODEPT_ID=VALUE  FROM CONFIG WHERE CONFIG_OPTION ='HO_LOCATION_ID'
   
   	IF ISNULL(@CLOCATIONID,'')=''
	BEGIN
	   SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + 'LOCATION IS CAN NOT BE BLANK'
	    GOTO END_PROC

	END
   
		IF @NUPDATEMODE = 1 -- ADDMODE	
		BEGIN	
			SET @NSTEP = 20		-- GENERATING NEW KEY

			IF @BCALLEDFROMSAVETRAN=1
			begin

				IF EXISTS (select TOP 1 'U' FROM CONFIG WHERE CONFIG_OPTION ='PREFIX_BOX_BANDAL' AND isnull(VALUE,'') <>'')
					SELECT TOP 1 @CPREFIX=VALUE FROM CONFIG WHERE CONFIG_OPTION ='PREFIX_BOX_BANDAL'
				ELSE 
				   SET @CPREFIX='BOX'

				   IF EXISTS (select TOP 1 'U' FROM CONFIG WHERE CONFIG_OPTION ='ADD_PREFIX_BOX_BANDAL' AND isnull(VALUE,'') ='1')
					SET @BOX_ID_FIN_YEAR=RIGHT(@CFINYEAR,2)
				ELSE 
				   SET @BOX_ID_FIN_YEAR=''


				IF @CLOCATIONID<>@CHODEPT_ID 
				BEGIN
				  SET @CMEMONOPREFIX=@CLOCATIONID+@BOX_ID_FIN_YEAR+@CPREFIX--+'BOX'
				END
				ELSE
				SET @CMEMONOPREFIX=@BOX_ID_FIN_YEAR+@CPREFIX

          end
		  Else
		  begin
		       
			   SELECT @CMEMONOPREFIX=MEMO_PREFIX FROM BOX_BOXM_UPLOAD A (NOLOCK) WHERE SP_ID=@NSPID 

			   if ISNULL (@CMEMONOPREFIX,'')=''
			   begin
			      
				    SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + 'MEMO_PREFIX CAN NOT BE BLANK'
	                GOTO END_PROC

			   end


		  end



			 SET @NMEMONOLEN			= 30
			

			
			SET @NSAVETRANLOOP=0
			WHILE @NSAVETRANLOOP=0
			BEGIN
				EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 0,
								'',0, @CMEMONOVAL OUTPUT   
				
				SET @NSTEP = 30
				
				PRINT @CMEMONOVAL
				SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+' 
										WHERE '+@CKEYFIELD1+'='''+@CMEMONOVAL+''' )
								SET @NLOOPOUTPUT=0
							ELSE
								SET @NLOOPOUTPUT=1'
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
			END
            
              
            SET @NSTEP = 40
            SET @CKEYFIELDVAL1 = @CMEMONOVAL  
            IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
				  GOTO END_PROC
			END
            
			-- UPDATING NEWLY GENERATED JOB ORDER NO AND JOB ORDER ID IN PIM AND PID TEMP TABLES
			SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CKEYFIELD1+'=''' + @CKEYFIELDVAL1+''' WHERE  SP_ID='''+@NSPID+''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
		
      

		END					-- END OF ADDMODE
		ELSE				-- CALLED FROM EDITMODE
		BEGIN				-- START OF EDITMODE
		
			SET @NSTEP = 50		-- GETTING ID INFO FROM TEMP TABLE

			-- GETTING JOB ORDER ID WHICH IS BEING EDITED
			SET @CCMD = 'SELECT @CKEYFIELDVAL1 = ' + @CKEYFIELD1 + ', @CMEMONOVAL = ' + @CMEMONO + ' FROM '
						+ @CTEMPMASTERTABLE +' WHERE  SP_ID='''+@NSPID+''' '
			
			EXEC SP_EXECUTESQL @CCMD, N'@CKEYFIELDVAL1 VARCHAR(50) OUTPUT, @CMEMONOVAL VARCHAR(50) OUTPUT', 
							   @CKEYFIELDVAL1 OUTPUT, @CMEMONOVAL OUTPUT
			IF (@CKEYFIELDVAL1 IS NULL ) OR (@CMEMONOVAL IS NULL )
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'
				  GOTO END_PROC  		
			END
		
		END					-- END OF EDITMODE

		SET @NSTEP = 95
		
		-- RECHECKING IF ID IS STILL LATER
		IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
			GOTO END_PROC
		END
		 DECLARE @CWHERECLAUSE VARCHAR(100)
         SET @CWHERECLAUSE = ' b.SP_ID='''+LTRIM(RTRIM((@NSPID)))+''''

		-- UPDATING MASTER TABLE (PIM01106) FROM TEMP TABLE
		SET @NSTEP = 100		-- UPDATING MASTER TABLE

		IF @NUPDATEMODE <> 3
		BEGIN
		
			EXEC UPDATEMASTERXN_OPT 
				  @CSOURCEDB	= @CTEMPDBNAME
				, @CSOURCETABLE = @CTEMPMASTERTABLENAME
				, @CDESTDB		= ''
				, @CDESTTABLE	= @CMASTERTABLENAME
				, @CKEYFIELD1	= @CKEYFIELD1
				, @BALWAYSUPDATE = 1
				,@CFILTERCONDITION=@CWHERECLAUSE

			-- UPDATING TRANSACTION TABLE (PID01106) FROM TEMP TABLE
			SET @NSTEP = 110		-- UPDATING TRANSACTION TABLE

			-- UPDATING ROW_ID IN TEMP TABLES - PAYMODE_XN_DET
			SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE + ' SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(40), NEWID())
						  WHERE LEFT(ROW_ID,5) = ''LATER'' AND   SP_ID='''+@NSPID+''' '
			EXEC SP_EXECUTESQL @CCMD

			SET @NSTEP = 115                                                                                                                     
			
            SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE + ' SET ' + @CKEYFIELD1+'=''' + @CKEYFIELDVAL1+''' WHERE  SP_ID='''+@NSPID+''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			
			-- PAYMODE_XN_DET
			SET @CCMD = N'DELETE FROM ' + @CDETAILTABLENAME + ' WHERE BOX_ID='''+@CKEYFIELDVAL1+''' '
			EXEC SP_EXECUTESQL @CCMD

			-- INSERTING/UPDATING THE ENTRIES IN PRD_JID TABLE FROM TEMPTABLE
			SET @NSTEP = 117		-- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES

		
			-- PAYMODE_XN_DET
			EXEC UPDATEMASTERXN_OPT 
				  @CSOURCEDB	= @CTEMPDBNAME
				, @CSOURCETABLE = @CTEMPDETAILTABLENAME
				, @CDESTDB		= ''
				, @CDESTTABLE	= @CDETAILTABLENAME
				, @CKEYFIELD1	= 'ROW_ID'
				, @BALWAYSUPDATE = 1			
				,@CFILTERCONDITION=@CWHERECLAUSE	

		END
       
       --BOX ID UPDATE IN PURCHASE
	   IF @BCALLEDFROMSAVETRAN=1
	   BEGIN

		   UPDATE A SET BOX_ID =B.BOX_ID  FROM PID01106 A (NOLOCK)
		   JOIN BOXM B (NOLOCK) ON A.MRR_ID=B.REF_MRR_ID AND A.BOX_NO=B.BOX_NO
		   WHERE A.MRR_ID=@MRR_ID

	   END
	
	END TRY
	BEGIN CATCH
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		GOTO END_PROC
	END CATCH

	
END_PROC:
    
    IF @@TRANCOUNT>0 AND @BCALLEDFROMSAVETRAN<>1
	BEGIN
		IF ISNULL(@CERRORMSG,'')='' 
		BEGIN
			commit TRANSACTION
		END	
		ELSE
		    ROLLBACK	
	END	

	IF @BCALLEDFROMSAVETRAN=0
	BEGIN
	   SELECT @CERRORMSG AS ERRMSG,@CKEYFIELDVAL1 AS MEMO_ID

	END
	  DELETE A FROM BOX_BOXM_UPLOAD A (NOLOCK) WHERE SP_ID=@NSPID
	  DELETE A FROM BOX_BOXD_UPLOAD A (NOLOCK) WHERE SP_ID=@NSPID

END
