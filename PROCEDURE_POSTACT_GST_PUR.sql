CREATE PROCEDURE POSTACT_GST_PUR
(
	@DTTO DATETIME,
	@CDEPTID CHAR(4)='',
	@CACCODE CHAR(10)='',
	@CXNTYPEPARA VARCHAR(10)='',
	@NXNITEMTYPE NUMERIC(1,0),
	@NLOOP NUMERIC(1,0),
	@BLOC BIT=0	
)
AS
BEGIN

    DECLARE @CSTEP VARCHAR(10),@CDISCACCODE VARCHAR(10),@CFREIGHTACCODE VARCHAR(10),
			@COTHERCHARGESACCODE VARCHAR(10),@CROUNDOFFACCODE VARCHAR(10),@NCTR NUMERIC(10,0),
			@NSUBTOTAL NUMERIC(14,4),@NTAXAMOUNT NUMERIC(14,4), @CPURACCODE VARCHAR(50),@CTAXACCODE VARCHAR(100),
			@CMRRID VARCHAR(50),@LOUTSTATIONPARTY BIT,@TMPDR NUMERIC(14,4),
			@TMPCR NUMERIC(14,4),@CCURSTATECODE	VARCHAR(10),@CLOCATIONID CHAR(2),
			@CVOUCHERCODE VARCHAR(10),@DCUTOFFDATE DATETIME,@CXNTYPE VARCHAR(10)
			,@NCREDITDAYS NUMERIC(5),@CCASHDISCOUNTAC VARCHAR(10)
			,@CSUPPLIER CHAR(10),@DGSTCUTOFFDATE  DATETIME,@CCMD NVARCHAR(MAX),@BPOSTHOASCOSTCENTER BIT
			,@CPREVMRRID VARCHAR(50),@CPREVXNTYPE VARCHAR(50),@CSETOFFACCODE CHAR(10),@BGSTBILL BIT
			,@CLOCGSTSTATECODE VARCHAR(5),@CPARTYGSTSTATECODE VARCHAR(5),
			 @CFIN_YEAR VARCHAR(5),@NOHTAXMETHOD NUMERIC(1,0),@CADJDIFFACCODE CHAR(10),@CVDID VARCHAR(50),
			 @DFROMDT DATETIME,@CPREVREFMEMOID VARCHAR(40),@BCANCELLED BIT,@BOLDCANCELLED BIT,
			 @NDIFFLIMIT NUMERIC(2,0),@NCDPCT NUMERIC(7,2),@CCREDITORHEADS VARCHAR(MAX),@CERRORMSG VARCHAR(MAX),
			 @BMANUALROFF BIT,@NROLIMIT NUMERIC(14,3),@BPOSTONRECEIPTDT BIT,@BDONOTPOSTCDENTRY BIT,@NGSTPOSTINGBASIS NUMERIC(1,0),@BBLANKACFOUND BIT,
			 @BDONOTALLOWPIPOSTINGWITHOUTBARCODES BIT,@CPOSTINGXNTYPE VARCHAR(20),@nPimMode NUMERIC(1,0),@dDueDt DATETIME,
			 @bPostRemarksInNarration BIT,@cRemarks VARCHAR(MAX),@cHoLocId VARCHAR(2),@bPostCdEntry BIT,
			 @cTcsACCODE CHAR(10),@nSpId VARCHAR(40),@cCustomDutyPayableAcCode char(10)
	
	set @nSpId=ltrim(rtrim(str(@@spid)))
			
	set @cStep=10
	EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 
				
			SET @CCREDITORHEADS = DBO.FN_ACT_TRAVTREE( '0000000021' ) 
			SELECT @DFROMDT=DBO.FN_GETFINYEARDATE('01'+DBO.FN_GETFINYEAR(@DTTO),1)
		    
		    SELECT @CFIN_YEAR='01'+CAST(DBO.FN_GETFINYEAR (@DTTO) AS VARCHAR(5))

			SET @CFREIGHTACCODE=''
			SET @COTHERCHARGESACCODE=''
			SET @CROUNDOFFACCODE=''
			
			SET @CERRORMSG=''


    --SELECT @NXNITEMTYPE AS NXNITEMTYPE
	SET @CPOSTINGXNTYPE=(CASE WHEN @NXNITEMTYPE=3 THEN 'PUR_AST' WHEN @NXNITEMTYPE=4 THEN 'PUR_SRV'
								 WHEN @NXNITEMTYPE=2 THEN 'PUR_CON' ELSE 'PUR' END)
		
			    
    SET @CSTEP=20
	EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 
    CREATE TABLE #ERRORS 
	(
		XN_TYPE VARCHAR(10),SOURCE_TABLE VARCHAR(200),COLUMNNAME VARCHAR(200),GST_PERCENTAGE NUMERIC(6,2),
		SECTION_CODE CHAR(7),SUB_SECTION_CODE CHAR(7),
		ERR_DESC VARCHAR(2000)
	)   
    
    SET @CSTEP=30
    DECLARE @VCHC TABLE 
	(
		vm_id VARCHAR(40),AC_CODE CHAR(10),NARRATION VARCHAR(4000),XN_NO VARCHAR(30),remarks VARCHAR(MAX),
		XN_DT DATETIME,DEPT_ID CHAR(4),AMOUNT NUMERIC(14,4),AMOUNT_Forex NUMERIC(14,4),XN_ID VARCHAR(50),totalamt_entry bit,
		REF_BILL_NO VARCHAR(50),REF_BILL_DATE DATETIME,	ENTRY_ID INT,TDS_ENTRY BIT,supplier_entry BIT,supplier_tds_entry BIT
	)
	
	
	
	SET @CSTEP=40
		EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 
	DECLARE @VDC TABLE 
	(
		VD_ID VARCHAR(60),				VM_ID VARCHAR(40),				AC_CODE CHAR(10), 
		NARRATION VARCHAR(4000),DEBIT_AMOUNT NUMERIC(14,4),		CREDIT_AMOUNT NUMERIC(14,4),
		DEBIT_AMOUNT_Forex NUMERIC(14,4),CREDIT_AMOUNT_Forex NUMERIC(14,4),
		X_TYPE CHAR(2), 				VS_AC_CODE CHAR(10),	 		REF_BILL_NO VARCHAR(40),ref_memo_id VARCHAR(50), 
		CREDIT_DAYS NUMERIC(10),		CR_DISCOUNT_PERCENTAGE NUMERIC(14,4),		
		VAT_ENTRY BIT,REF_BILL_DATE DATETIME, AC_NAME VARCHAR(100)
		,CHK_RECON BIT,RECON_DT DATETIME,LAST_UPDATE DATETIME,COMPANY_CODE CHAR(2)
		,AUTOENTRY BIT,CONTROL_AC BIT,SECONDARY_NARRATION VARCHAR(2000)
		,COST_CENTER_AC_CODE CHAR(15),COST_CENTER_DEPT_ID CHAR(4) ,cd_posted BIT ,cd_base_amount NUMERIC(10,2)
		,cd_pct NUMERIC(6,2),OLD_VD_ID varchar(60)
	)

	SET @CSTEP=50
	DECLARE @VMC TABLE
	(
		VM_ID VARCHAR(400), 			VOUCHER_NO VARCHAR(400), 		VOUCHER_DT DATETIME, 
		VOUCHER_CODE CHAR(10), 		    DEPT_ID CHAR(4),				BILL_TYPE VARCHAR(300),
		BILL_NO VARCHAR(200), 			BILL_ID VARCHAR(220), 			BILL_DT DATETIME, 
		BILL_AC_CODE VARCHAR(100),		DRTOTAL NUMERIC(20,2),			CRTOTAL NUMERIC(20,2), 
		drtotal_Forex NUMERIC(10,2),CRTOTAL_Forex NUMERIC(10,2),
		CASH_VOUCHER BIT, 				SALE_VOUCHER BIT, 				QUANTITY NUMERIC(20,2), 
		ANGADIA_CODE CHAR(70), 			LR_NO VARCHAR(500), 			LR_DT DATETIME,
		PARTY_NAME VARCHAR(1000),		NET_AMOUNT NUMERIC(20,2), 		BILL_STATUS VARCHAR(1000),
		MRR_LIST VARCHAR(3000), 		CANCELLED BIT,					DEPT_NAME VARCHAR(100),
		VOUCHER_TYPE VARCHAR(100),VM_ORDER NUMERIC(1),posted_vendor_bill_dt DATETIME
	)
	
	SET @CSTEP=60
		EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 
	DECLARE @VLINK TABLE
	(
		VM_ID VARCHAR(100),dept_id CHAR(4),MEMO_ID VARCHAR(100),XN_TYPE VARCHAR(20),
		LAST_UPDATE DATETIME,memo_dt datetime,REF_BILL_DATE DATETIME,ref_bill_no varchar(100),
		BILL_AC_CODE CHAR(10),PARTY_NAME VARCHAR(500),QUANTITY numeric(10,2),NET_AMOUNT NUMERIC(14,2),NET_AMOUNT_Forex NUMERIC(14,2),
		DEPT_NAME VARCHAR(200),drtotal NUMERIC(10,2),CRTOTAL NUMERIC(10,2),drtotal_Forex NUMERIC(10,2),CRTOTAL_Forex NUMERIC(10,2),due_dt DATETIME,
		vendor_bill_dt DATETIME,credit_days NUMERIC(5,0),memo_no varchar(50),fin_year VARCHAR(10),pur_tds_amount numeric(10,2)
	)

	DECLARE @TBILL_BY_BILL_REF TABLE(VD_ID VARCHAR(60),REF_NO VARCHAR(100),AMOUNT NUMERIC(18,4),AMOUNT_Forex NUMERIC(18,4),X_TYPE VARCHAR(20),
									 CR_DAYS NUMERIC(5),ADJ_REMARKS VARCHAR(200),LAST_UPDATE DATETIME,VM_ID VARCHAR(40),
									 CD_PERCENTAGE NUMERIC(6,2),cd_base_amount NUMERIC(10,2),CD_AMOUNT NUMERIC(10,2),PUR_VENDOR_BILL_DT DATETIME,
									 due_dt DATETIME,cd_posted BIT,pur_mrr_id VARCHAR(40),ignore_cd_base_amount NUMERIC(10,2),
									 pur_tds_amount numeric(10,2),org_bill_taxable_value numeric(10,2))  

	
	SET @DGSTCUTOFFDATE='2017-07-01'
			
			
	SELECT TOP 1 @DCUTOFFDATE=CUTOFFDATE,@BDONOTPOSTCDENTRY=ISNULL(DONOT_POST_CD_PURCHASE,0),@bPostRemarksInNarration=ISNULL(post_remarks_in_narration,0),
	@BDONOTALLOWPIPOSTINGWITHOUTBARCODES=DONOT_ALLOW_PIPOSTING_WITHOUTBARCODES,@BPOSTHOASCOSTCENTER=ISNULL(POST_TDS_AC_AT_HO,0)
	FROM GST_ACCOUNTS_CONFIG_MST (NOLOCK) WHERE XN_TYPE=@CPOSTINGXNTYPE

	DECLARE @CCURLOCID CHAR(2)
	SELECT TOP 1 @CCURLOCID=value FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'
	SELECT TOP 1 @cHoLocId=VALUE FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'

	SET @DCUTOFFDATE=ISNULL(@DCUTOFFDATE,'')
	
	
	SET @CVOUCHERCODE = (CASE WHEN @nXnItemType=4 THEN  '0000000001' ELSE '0000000006' END)
    BEGIN TRY
			
	
		SET @CSTEP=70
		EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 

			--THIS TABLE STORE ALL PENDING MEMO_ID 
			CREATE TABLE #PURTABLE (MEMO_ID VARCHAR(50),MODE VARCHAR(10),REF_BILL_NO VARCHAR(200),REF_BILL_DT DATETIME)
						
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 

			--GETTING LIST OF LOCATIONS ON WHICH APPROVAL PROCESS IS ENABLED
			SELECT DISTINCT DEPT_ID 
			INTO #APPROVALLOCATION
			FROM LOC_XNSAPPROVAL
			WHERE XN_TYPE='PUR'
			
			DECLARE @IMAXLEVEL INT
			
			--GETTING THE MAX LEVEL OF APPROVAL FOR PURCHASE TRANSACTION
			SELECT @IMAXLEVEL=MAX(LEVEL_NO) 
			FROM XN_APPROVAL_CHECKLIST_LEVELS 
			WHERE XN_TYPE='PUR' AND INACTIVE=0

--SELECT @NXNITEMTYPE AS NXNITEMTYPE,@IMAXLEVEL AS IMAXLEVEL
			
			IF EXISTS(SELECT TOP 1 'U' FROM XN_APPROVAL_CHECKLIST_LEVELS  WHERE XN_TYPE='PUR' AND INACTIVE=0 AND ISNULL(AC_POSTING,0)<>0)
			BEGIN
			    SELECT @IMAXLEVEL=LEVEL_NO
				FROM XN_APPROVAL_CHECKLIST_LEVELS 
				WHERE XN_TYPE='PUR' AND INACTIVE=0 AND ISNULL(AC_POSTING,0)<>0
			END
						
			SET @IMAXLEVEL=ISNULL(@IMAXLEVEL,0)
			
			----Temporarily removed this because of Purchase posting pattern changed 
			----and shall be reinforced after discussion with sir (16-09-2021)
			--set @cStep=80
			--	EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 
			--EXEC SP3S_REP_ACCOUNTSRECO
			--@dRecoDate=@dFromDt,
			--@cXnType='PUR',
			--@BUpdateLupd=1

			--SELECT @DFROMDT AS DFROMDT,@CFIN_YEAR AS CFIN_YEAR,@BPOSTONRECEIPTDT AS BPOSTONRECEIPTDT,@DCUTOFFDATE AS DCUTOFFDATE,
			--@DTTO AS DTTO,@CFIN_YEAR AS CFINYEAR,@CDEPTID AS CDEPTID,@CACCODE AS CACCODE,@NXNITEMTYPE AS NXNITEMTYPE

			
	SET @CSTEP=85
	EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 

			INSERT INTO #PURTABLE (MEMO_ID,MODE,REF_BILL_NO,REF_BILL_DT)
	        SELECT DISTINCT A.MRR_ID,'PUR' AS MODE,A.BILL_NO,A.bill_DT
	        FROM PIM01106 A (NOLOCK)
	        JOIN LOCATION LA (NOLOCK) ON a.dept_id=LA.DEPT_ID 
			LEFT JOIN LOCATION LB (NOLOCK) ON a.pur_for_dept_id=LB.DEPT_ID 
	        LEFT JOIN #APPROVALLOCATION AL ON a.location_Code =AL.DEPT_ID
	        LEFT JOIN INM01106 INM (NOLOCK) ON INM.INV_ID =A.inv_id 
	        LEFT OUTER JOIN LOCATION LS (NOLOCK) ON LS.DEPT_ID=INM.location_Code 
	        LEFT OUTER JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=A.DEPT_ID
			LEFT JOIN lmp01106 lmp (NOLOCK) ON lmp.ac_code=a.ac_code
			LEFT JOIN loc_accounting_company lac1 (NOLOCK) ON lac1.pan_no=la.PAN_NO
			LEFT JOIN loc_accounting_company lac2 (NOLOCK) ON lac2.pan_no=SUBSTRING(la.loc_gst_no,3,10)
			LEFT JOIN loc_accounting_company lac3 (NOLOCK) ON lac3.pan_no=lb.PAN_NO
			LEFT JOIN loc_accounting_company lac4 (NOLOCK) ON lac4.pan_no=SUBSTRING(lb.loc_gst_no,3,10)
	        LEFT OUTER JOIN 
	        (SELECT A.memo_id,a.LAST_UPDATE FROM  postact_voucher_link A (NOLOCK)
	         JOIN VM01106 b (NOLOCK) ON b.VM_ID=a.VM_ID
	         WHERE a.XN_TYPE='PUR' AND cancelled=0) vl on vl.memo_id=a.mrr_id
	        WHERE  A.MEMO_TYPE=1 AND
			((A.CANCELLED=1 AND VL.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)
	         -- LOC TYPE 1 OR FRANCHIES LOCATION MARK 1 
	        /*LOCATIONS WHERE APPROVAL IS NOT ENABLED*/
	        AND (AL.DEPT_ID IS NULL OR A.APPROVEDLEVELNO>=@IMAXLEVEL)
	        /*PURCHASE IS FINAL BILL FOR SUPPLIER.*/
	        /*PURCHASE INV_DT IS LESS THAN THE SPECIFIED DATE.*/
			AND (ISNULL(A.XN_ITEM_TYPE,0)=@NXNITEMTYPE OR (ISNULL(A.XN_ITEM_TYPE,0) IN (0,1) AND @NXNITEMTYPE=1))				 
	        /*IF CUTOFF DATE IS SPECIFIED, CONSIDER PURCHASE AFTER THE CUTOFF DATE*/
	        AND (ISNULL(@DCUTOFFDATE,'')='' OR A.bill_dt>@DCUTOFFDATE)
	        /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO THAT ELSE APPLY IT TO MRR_NO FOR LOCATION.*/
	        AND (ISNULL(@CDEPTID,'')='' OR 
				(CASE WHEN ISNULL(A.ACCOUNTS_DEPT_ID,'')='' AND ISNULL(LOC.ALLOW_PURCHASE_AT_HO,0)=0
					  THEN A.location_Code  WHEN ISNULL(LOC.ALLOW_PURCHASE_AT_HO,0)=1 THEN A.DEPT_ID 
					ELSE A.ACCOUNTS_DEPT_ID END)=@CDEPTID)
			AND (@CACCODE='' OR A.AC_CODE=@CACCODE)						
	        /*PURCHASE IS NOT GROUP/BRANCH PURCHASE*/
	        AND (A.INV_MODE<>2 AND A.BILL_CHALLAN_MODE=0) 
	        AND(ISNULL(a.rcm_applicable,0)=0 OR ISNULL(rcm_memo_no,'')<>'') 
	        AND a.bill_dt between @dFromDt AND @DTTO
	        AND (vl.memo_id IS NULL OR vl.last_update<>a.last_update)

			AND ((ISNULL(a.xn_item_type,0) IN (0,1) AND (ISNULL(LOC.LOC_GST_NO,'')<>ISNULL(LMP.AC_GST_NO,'')  OR ISNULL(LOC.LOC_GST_NO,'')='')---- DO NOT PROCESS INVOICES FOR PARTIES HAVING SAME GST NO. AS THAT OF LOCATION
			AND SUBSTRING(ISNULL(Loc.LOC_GST_NO,''),3,10)<>ISNULL(LMP.PAN_NO,'')
			AND (ISNULL(Loc.pan_NO,'')<>ISNULL(LMP.PAN_NO,'') OR ISNULL(lmp.pan_no,'')='')
			AND (lac1.pan_no IS NOT NULL OR lac2.pan_no IS NOT NULL))

			OR (ISNULL(a.xn_item_type,0) NOT IN (0,1) AND (ISNULL(LB.LOC_GST_NO,'')<>ISNULL(LMP.AC_GST_NO,'')  OR ISNULL(LOC.LOC_GST_NO,'')='')---- DO NOT PROCESS INVOICES FOR PARTIES HAVING SAME GST NO. AS THAT OF LOCATION
			AND SUBSTRING(ISNULL(Lb.LOC_GST_NO,''),3,10)<>ISNULL(LMP.PAN_NO,'')
			AND (ISNULL(Lb.pan_NO,'')<>ISNULL(LMP.PAN_NO,'') OR ISNULL(lmp.pan_no,'')='')
			AND (lac3.pan_no IS NOT NULL OR lac4.pan_no IS NOT NULL)))
	        /*PURCHASE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/
	      
	        

	SET @CSTEP=90
	EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 

	     IF ISNULL(@BDONOTALLOWPIPOSTINGWITHOUTBARCODES,0)=1
	        BEGIN
				DELETE A FROM #PURTABLE A JOIN PID01106 B (NOLOCK) ON A.MEMO_ID=B.MRR_ID
				WHERE ISNULL(B.PRODUCT_CODE,'')=''
	        END
	        
			--if @@spid=69
	  --      SELECT 'CHECK PUR TABLE-2',@NXNITEMTYPE,* FROM #PURTABLE
	        
	        IF @NXNITEMTYPE=1
	        BEGIN
				
				SET @CSTEP=100
				EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 

				--INSERT INTO PPC TABLES
				INSERT INTO #PURTABLE (MEMO_ID,MODE,REF_BILL_NO,REF_BILL_DT)
		     
				SELECT A.MRR_ID,'PPC_PUR' AS MODE,A.BILL_NO,A.RECEIPT_DT
				FROM PPC_PIM01106  A
				JOIN LOCATION LA ON A.LOCATION_CODE  =LA.DEPT_ID 
				LEFT JOIN loc_accounting_company lac1 (NOLOCK) ON lac1.pan_no=la.PAN_NO
				LEFT JOIN loc_accounting_company lac2 (NOLOCK) ON lac2.pan_no=SUBSTRING(la.loc_gst_no,3,10)
				JOIN #APPROVALLOCATION AL ON A.LOCATION_CODE=AL.DEPT_ID
				LEFT OUTER JOIN 
				(
					SELECT B.MEMO_ID,B.LAST_UPDATE
					FROM POSTACT_VOUCHER_LINK B 
					JOIN VM01106 C ON C.VM_ID = B.VM_ID 
					WHERE C.CANCELLED=0 AND B.XN_TYPE = 'PPC_PUR' 
				)VM  ON A.MRR_ID = VM.MEMO_ID  
				LEFT OUTER JOIN LOCATION LOC ON LOC.DEPT_ID=A.DEPT_ID
				WHERE  
				-- LOC TYPE 1 OR FRANCHIES LOCATION MARK 1 
				/*PURCHASE IS NOT CANCELLED OR PURCHASE IS CANCELLED AND VOUCHER IS NOT CANCELLED.*/
				 ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)	 
				/*PURCHASE IS FINAL BILL FOR SUPPLIER.*/
				/*PURCHASE INV_DT IS LESS THAN THE SPECIFIED DATE.*/
				 AND (A.RECEIPT_DT BETWEEN @DFROMDT AND @DTTO) 
				/*IF CUTOFF DATE IS SPECIFIED, CONSIDER PURCHASE AFTER THE CUTOFF DATE*/
				AND (ISNULL(@DCUTOFFDATE,'')='' OR (A.RECEIPT_DT>@DCUTOFFDATE  ) )
				/*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO THAT ELSE APPLY IT TO MRR_NO FOR LOCATION.*/
				AND (ISNULL(@CDEPTID,'')='' OR A.LOCATION_CODE=@CDEPTID)
				/*PURCHASE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/
				AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE) 
				AND (@CACCODE='' OR A.AC_CODE=@CACCODE)
				AND (lac1.pan_no IS NOT NULL OR lac2.pan_no IS NOT NULL)
				--GETTING LIST OF PURCHASES THAT QUALIFY FOR VOUCHER POSTING FOR APPROVAL  NOT ENABLED LOCATIONS

				UNION ALL
				SELECT A.MRR_ID,'PPC_PUR' AS MODE,A.BILL_NO,A.RECEIPT_DT
				FROM PPC_PIM01106  A
				JOIN LOCATION LA ON A.LOCATION_CODE =LA.DEPT_ID 
				LEFT JOIN loc_accounting_company lac1 (NOLOCK) ON lac1.pan_no=la.PAN_NO
				LEFT JOIN loc_accounting_company lac2 (NOLOCK) ON lac2.pan_no=SUBSTRING(la.loc_gst_no,3,10)
				LEFT JOIN #APPROVALLOCATION AL ON A.LOCATION_CODE=AL.DEPT_ID
				LEFT OUTER JOIN 
				(
					SELECT B.MEMO_ID,B.LAST_UPDATE
					FROM POSTACT_VOUCHER_LINK B 
					JOIN VM01106 C ON C.VM_ID = B.VM_ID 
					WHERE C.CANCELLED=0 AND B.XN_TYPE = 'PPC_PUR' 
				)VM  ON A.MRR_ID = VM.MEMO_ID  
				LEFT OUTER JOIN LOCATION LOC ON LOC.DEPT_ID=A.DEPT_ID
				WHERE  
				/*PURCHASE IS NOT CANCELLED OR PURCHASE IS CANCELLED AND VOUCHER IS NOT CANCELLED.*/
				((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)
				/*LOCATIONS WHERE APPROVAL IS NOT ENABLED*/
				AND AL.DEPT_ID IS NULL 
				/*PURCHASE IS FINAL BILL FOR SUPPLIER.*/
				/*PURCHASE INV_DT IS LESS THAN THE SPECIFIED DATE.*/
				 AND (A.RECEIPT_DT BETWEEN @DFROMDT AND @DTTO)
				/*IF CUTOFF DATE IS SPECIFIED, CONSIDER PURCHASE AFTER THE CUTOFF DATE*/
				AND (ISNULL(@DCUTOFFDATE,'')='' OR (A.RECEIPT_DT>@DCUTOFFDATE  ) )
				/*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO THAT ELSE APPLY IT TO MRR_NO FOR LOCATION.*/
				AND (ISNULL(@CDEPTID,'')='' OR A.LOCATION_CODE=@CDEPTID )
				AND (@CACCODE='' OR A.AC_CODE=@CACCODE)						
				/*PURCHASE IS NOT GROUP/BRANCH PURCHASE*/
				/*PURCHASE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/
				AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE) 
				AND (lac1.pan_no IS NOT NULL OR lac2.pan_no IS NOT NULL)
			END	        
	   --END OF PPC

	        --SELECT 'check #PURTABLE',* FROM #PURTABLE
	        
	        
			SET @CSTEP=110
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 

	        SELECT @CDISCACCODE=VALUE  FROM GST_ACCOUNTS_CONFIG_DET_OTHERS WHERE XN_TYPE =@CPOSTINGXNTYPE AND COLUMNNAME ='CASH_DISC_AC_CODE'
			SET @CDISCACCODE=ISNULL(@CDISCACCODE,'')

		   
			--IF OTHER CHARGES CONSIDERED AS PART OF STOCK THEN CLUB IT IN PURCHASE A/C 
			
			SELECT @CROUNDOFFACCODE=VALUE  FROM GST_ACCOUNTS_CONFIG_DET_OTHERS (NOLOCK) WHERE XN_TYPE =@CPOSTINGXNTYPE AND COLUMNNAME ='ROFF_AC_CODE'
			SET @CROUNDOFFACCODE=ISNULL(@CROUNDOFFACCODE,'')

			SELECT @cCustomDutyPayableAcCode=VALUE  FROM GST_ACCOUNTS_CONFIG_DET_OTHERS (NOLOCK) WHERE XN_TYPE =@CPOSTINGXNTYPE 
			AND COLUMNNAME ='CUSTOM_DUTY_PAYABLE_AC_CODE'
			SET @cCustomDutyPayableAcCode=ISNULL(@cCustomDutyPayableAcCode,'')

			SET @CSTEP=115
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 

			SELECT @cTcsACCODE=VALUE  FROM GST_ACCOUNTS_CONFIG_DET_OTHERS (NOLOCK) WHERE XN_TYPE =@CPOSTINGXNTYPE AND COLUMNNAME ='TCS_AC_CODE'
			SET @cTcsACCODE=ISNULL(@cTcsACCODE,'')


			CREATE INDEX IX_TEMP_PURTABLE_MRR_ID ON #PURTABLE(MEMO_ID)
					
	        	        
			
	SET @CSTEP=120
	EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 

			
	       
	        --SELECT COUNT(*) FROM #PURTABLE
	        /*
				BILL_LEVEL_TAX_METHOD : 1 IS EXCLUSIVE
										2 IS INCLUSIVE
														
			*/
			
					

		    SELECT PM.MRR_ID
		 			,'' AS PURAC
		 			,'' AS TAXAC
		 			,'PUR' AS XN_TYPE
		 			,@CPOSTINGXNTYPE  AS POSTING_XN_TYPE
		 			,PM.CANCELLED
					,ISNULL(pd.ref_mrr_id,'') REF_mrr_id
		 			,PM.BILL_NO AS REF_BILL_NO
		 			,pm.bill_dt AS REF_BILL_DT
		 			,PM.MRR_ID AS REF_MEMO_ID
		 			, '0000000000' AS IGST_REVENUE_AC_CODE
					, '0000000000' AS LGST_REVENUE_AC_CODE
					, '0000000000'  AS IGST_TAX_AC_CODE
					, '0000000000'   AS CGST_TAX_AC_CODE
					, '0000000000' AS SGST_TAX_AC_CODE
					, '0000000000' AS GST_CESS_AC_CODE
						
					, '0000000000' AS FREIGHT_IGST_REVENUE_AC_CODE
					, '0000000000' AS FREIGHT_LGST_REVENUE_AC_CODE
					, '0000000000'  AS FREIGHT_SGST_TAX_AC_CODE
					, '0000000000' AS FREIGHT_CGST_TAX_AC_CODE
					, '0000000000' AS FREIGHT_IGST_TAX_AC_CODE
					
					, '0000000000'  AS OTHER_CHARGES_IGST_REVENUE_AC_CODE
					, '0000000000' AS OTHER_CHARGES_LGST_REVENUE_AC_CODE
					,'0000000000' AS OTHER_CHARGES_SGST_TAX_AC_CODE
					, '0000000000'AS OTHER_CHARGES_CGST_TAX_AC_CODE
					, '0000000000' AS OTHER_CHARGES_IGST_TAX_AC_CODE
					,'0000000000' custom_duty_expense_ac_code
					,'0000000000' custom_duty_tax_ac_code
					,pm.fin_year
		 			--FOR INCLUSIVE TAX DEDUCE THE AMOUNT FROM THE SUBTOTAL AS TAX WOULD BE POSTED SEPARATELY
		 			,PM.AC_CODE
		 			,ISNULL(PM.POSTTAXDISCOUNTAMOUNT,0) AS DISCOUNTAMOUNT
					,(CASE WHEN ISNULL(FRIGHT_PAY_MODE,0)<>2 THEN ISNULL(FREIGHT_TAXABLE_VALUE,0) ELSE 0 END) AS FREIGHT
		 			,ISNULL(OTHER_CHARGES_TAXABLE_VALUE,0) AS OTHERCHARGES
		 			,ROUND(SUM(((PM.EXCISE_DUTY_AMOUNT/PM.SUBTOTAL)*(PD.PURCHASE_PRICE*PD.INVOICE_QUANTITY))),2) AS EXCISEDUTYAMOUNT
		 			,SUM(ISNULL(PD.TAX_ROUND_OFF,0)) AS TAX_ROUND_OFF	
		 			,SUM(XN_VALUE_WITHOUT_GST) AS PURAMOUNT
					,SUM(Forex_xn_value_without_gst) AS PURAMOUNT_FOREX
		 			,0 AS TAXAMOUNT
		 			,SUM(IGST_AMOUNT) AS IGST_AMOUNT
		 			,SUM(CGST_AMOUNT) AS CGST_AMOUNT
		 			,SUM(SGST_AMOUNT) AS SGST_AMOUNT
					,SUM(GST_CESS_AMOUNT) AS GST_CESS_AMOUNT
		 			,SUM(Forex_IGST_AMOUNT) AS Forex_IGST_AMOUNT
					,SUM(Forex_customdutyamt) AS Forex_customdutyamt
					,SUM(RFNET) AS PIDNET
					,SUM(Forex_RFNET) AS Forex_PIDNET
		 			,GST_PERCENTAGE
					,isnull(forex_GST_PERCENTAGE,0) forex_GST_PERCENTAGE
					,GST_CESS_PERCENTAGE
		 			,FREIGHT_GST_PERCENTAGE
 					,OTHER_CHARGES_GST_PERCENTAGE
 					,FREIGHT_IGST_AMOUNT
 					,FREIGHT_CGST_AMOUNT
 					,FREIGHT_SGST_AMOUNT
 					,OTHER_CHARGES_IGST_AMOUNT
 					,OTHER_CHARGES_CGST_AMOUNT
 					,OTHER_CHARGES_SGST_AMOUNT
 					,LOC.GST_STATE_CODE AS LOC_GST_STATE_CODE
		 			,LMP.AC_GST_STATE_CODE AS PARTY_GST_STATE_CODE
 			        ,(CASE WHEN ISNULL(FRIGHT_PAY_MODE,0)<>2 THEN 
 			         PM.FREIGHT-(ISNULL(PM.FREIGHT_TAXABLE_VALUE,0)+(CASE WHEN PM.OH_TAX_METHOD=2 THEN PM.FREIGHT_IGST_AMOUNT+PM.FREIGHT_CGST_AMOUNT+PM.FREIGHT_SGST_AMOUNT ELSE 0 END))
 			         ELSE 0 END) AS FREIGHT_RO
			        ,PM.OTHER_CHARGES-(ISNULL(PM.OTHER_CHARGES_TAXABLE_VALUE,0)+(CASE WHEN PM.OH_TAX_METHOD=2 THEN PM.OTHER_CHARGES_IGST_AMOUNT+PM.OTHER_CHARGES_CGST_AMOUNT+PM.OTHER_CHARGES_SGST_AMOUNT ELSE 0 END)) AS OTHER_CHARGES_RO       
					,isnull(PM.CR_DISCOUNT_PERCENTAGE,0) AS CD_PCT					
					,pm.terms
					,CONVERT(BIT,1) applycdontotal
					,PM.ROUND_OFF
					,PM.MANUAL_ROUNDOFF
					,PM.GST_ROUND_OFF,EXCISE_DUTY_AMOUNT,PM.TDS_AMOUNT,PM.GOODS_TDS_AMOUNT
					,ISNULL(TDS.PAYABLE_AC_CODE,'') AS TDS_AC_CODE
					,'0000000000' AS GOODS_TDS_AC_CODE
					,ISNULL(FRIGHT_PAY_MODE,0) AS FRIGHT_PAY_MODE,BILL_LEVEL_TAX_METHOD,POSTTAXDISCOUNTAMOUNT,TOTAL_AMOUNT
					,SECTION_CODE,ART.SUB_SECTION_CODE,ISNULL(PD.SRV_NARRATION,'') AS NARRATION,
					pim_mode,pm.remarks,
					ISNULL(pm.tcs_amount,0) tcs_amount,pm.Pur_For_Dept_id,pm.dept_id,
					pm.inv_dt as vendor_bill_dt,pm.CREDIT_DAYS,pm.bill_dt due_dt,pm.last_update,mrr_no memo_no,total_quantity,
					Forex_total_amount,pm.Forex_Discount_amount,Forex_OTHER_CHARGES_TAXABLE_VALUE,Forex_other_charges_igst_amount,Forex_FREIGHT_TAXABLE_VALUE,
					Forex_freight_igst_amount
			INTO  #V_PROCESS
			FROM PIM01106 PM (NOLOCK)
			JOIN PID01106 PD (NOLOCK) ON PM.MRR_ID=PD.MRR_ID
			JOIN #PURTABLE B ON B.MEMO_ID=PM.MRR_ID
			JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=PD.ARTICLE_CODE
			JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE
			JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=PM.DEPT_ID
			LEFT JOIN LOCATION LB (NOLOCK) ON pm.pur_for_dept_id=LB.DEPT_ID 
			JOIN LMP01106 LMP (NOLOCK) ON LMP.AC_CODE=PM.AC_CODE
			LEFT OUTER JOIN TDS_SECTION TDS (NOLOCK) ON TDS.TDS_CODE=PM.TDS_CODE
		    WHERE pm.bill_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND PM.SUBTOTAL<>0 
			
		    GROUP BY PM.MRR_ID
					,PM.BILL_NO
					,ISNULL(pd.ref_mrr_id,'') 
					,PM.CANCELLED
					,pm.bill_dt
		 			,PM.AC_CODE
		 			,FREIGHT
		 			,FRIGHT_PAY_MODE
		 			,OTHER_CHARGES
					,GST_PERCENTAGE
					,isnull(forex_GST_PERCENTAGE,0)
					,GST_CESS_PERCENTAGE
					,FREIGHT_GST_PERCENTAGE
 					,OTHER_CHARGES_GST_PERCENTAGE
 					,FREIGHT_TAXABLE_VALUE
 					,OTHER_CHARGES_TAXABLE_VALUE
 					,FREIGHT_IGST_AMOUNT
 					,FREIGHT_CGST_AMOUNT
 					,FREIGHT_SGST_AMOUNT
 					,OTHER_CHARGES_IGST_AMOUNT
 					,OTHER_CHARGES_CGST_AMOUNT
 					,OTHER_CHARGES_SGST_AMOUNT
		 			,LOC.GST_STATE_CODE
		 			,LMP.AC_GST_STATE_CODE		 			
		 			,OH_TAX_METHOD,total_quantity
					,PM.CR_DISCOUNT_PERCENTAGE
					,pm.terms
		 			,PM.ROUND_OFF
		 			,PM.MANUAL_ROUNDOFF,ISNULL(pm.tcs_amount,0)
		 			,ISNULL(PM.POSTTAXDISCOUNTAMOUNT,0)
		 			,PM.GST_ROUND_OFF,ISNULL(FRIGHT_PAY_MODE,0),BILL_LEVEL_TAX_METHOD,POSTTAXDISCOUNTAMOUNT,TOTAL_AMOUNT,
		 			EXCISE_DUTY_AMOUNT,PM.TDS_AMOUNT,PM.GOODS_TDS_AMOUNT,ISNULL(TDS.PAYABLE_AC_CODE,''),SECTION_CODE,ART.SUB_SECTION_CODE
					,ISNULL(PD.SRV_NARRATION,''),pim_mode,pm.last_update
		 			,pm.remarks,Pur_For_Dept_id,pm.dept_id,inv_dt,pm.CREDIT_DAYS,mrr_no
		 			,pm.fin_year,Forex_total_amount,pm.Forex_Discount_amount,Forex_OTHER_CHARGES_TAXABLE_VALUE,Forex_other_charges_igst_amount,Forex_FREIGHT_TAXABLE_VALUE,
					Forex_freight_igst_amount
		          UNION ALL
		 	    SELECT
					 PM.MRR_ID
		 			,'' AS PURAC
		 			,'' AS TAXAC
		 			,'PPC_PUR' AS XN_TYPE
		 			,'PUR' AS POSTING_XN_TYPE
		 			,PM.CANCELLED
					,'' REF_mrr_id
		 			,PM.BILL_NO AS REF_BILL_NO
		 			,PM.BILL_DT AS REF_BILL_DT		 					 			
		 			,PM.MRR_ID AS REF_MEMO_ID
					, (CASE WHEN IGST_AMOUNT<>0 OR LOC.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE THEN '0000000000' ELSE '' END) AS IGST_REVENUE_AC_CODE
					, (CASE WHEN CGST_AMOUNT<>0 OR LOC.GST_STATE_CODE=LMP.AC_GST_STATE_CODE THEN '0000000000' ELSE '' END) AS LGST_REVENUE_AC_CODE
					, (CASE WHEN IGST_AMOUNT<>0  THEN '0000000000' ELSE '' END) AS IGST_TAX_AC_CODE
					, (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)  AS CGST_TAX_AC_CODE
					, (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)  AS SGST_TAX_AC_CODE
					, '0000000000' AS GST_CESS_AC_CODE
					, (CASE WHEN (ISNULL(FREIGHT_CGST_AMOUNT,0)<>0 OR LOC.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE) AND FREIGHT<>0
						    THEN '0000000000' ELSE '' END)  AS FREIGHT_IGST_REVENUE_AC_CODE
					, (CASE WHEN (ISNULL(FREIGHT_CGST_AMOUNT,0)<>0 OR LOC.GST_STATE_CODE=LMP.AC_GST_STATE_CODE) AND FREIGHT<>0
						    THEN '0000000000' ELSE '' END) AS FREIGHT_LGST_REVENUE_AC_CODE
					, (CASE WHEN ISNULL(FREIGHT_SGST_AMOUNT,0)<>0 AND FREIGHT<>0
						    THEN '0000000000' ELSE '' END)  AS FREIGHT_SGST_TAX_AC_CODE
					, (CASE WHEN ISNULL(FREIGHT_CGST_AMOUNT,0)<>0 AND FREIGHT<>0
						    THEN '0000000000' ELSE '' END)  AS FREIGHT_CGST_TAX_AC_CODE
					, (CASE WHEN ISNULL(FREIGHT_SGST_AMOUNT,0)<>0  AND FREIGHT<>0
						    THEN '0000000000' ELSE '' END)  AS FREIGHT_IGST_TAX_AC_CODE
					
					, (CASE WHEN (ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)<>0 OR LOC.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE) AND OTHER_CHARGES<>0
						    THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_IGST_REVENUE_AC_CODE
					, (CASE WHEN (ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)<>0 OR LOC.GST_STATE_CODE=LMP.AC_GST_STATE_CODE) AND OTHER_CHARGES<>0
						    THEN '0000000000' ELSE '' END) AS OTHER_CHARGES_LGST_REVENUE_AC_CODE
					, (CASE WHEN ISNULL(OTHER_CHARGES_SGST_AMOUNT,0)<>0 AND OTHER_CHARGES<>0
						    THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_SGST_TAX_AC_CODE
					, (CASE WHEN ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)<>0 AND OTHER_CHARGES<>0
						    THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_CGST_TAX_AC_CODE
					, (CASE WHEN ISNULL(OTHER_CHARGES_SGST_AMOUNT,0)<>0  AND OTHER_CHARGES<>0
						    THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_IGST_TAX_AC_CODE
					,'0000000000' custom_duty_expense_ac_code
					,'0000000000' custom_duty_tax_ac_code
					,pm.fin_year
		 			,PM.AC_CODE
		 			,0 AS DISCOUNTAMOUNT
					,ISNULL(FREIGHT_TAXABLE_VALUE,0) AS FREIGHT
		 			,ISNULL(OTHER_CHARGES_TAXABLE_VALUE,0) AS OTHERCHARGES
		 			,0 AS EXCISEDUTYAMOUNT
		 			,SUM(ISNULL(PD.TAX_ROUND_OFF,0)) AS TAX_ROUND_OFF	
		 			,SUM(XN_VALUE_WITHOUT_GST) AS PURAMOUNT
					,0 AS PURAMOUNT_fOREX
		 			,0 AS TAXAMOUNT
		 			,SUM(IGST_AMOUNT) AS IGST_AMOUNT
		 			,SUM(CGST_AMOUNT) AS CGST_AMOUNT
		 			,SUM(SGST_AMOUNT) AS SGST_AMOUNT
		 			,0 as gst_cess_amount
					,0 AS Forex_IGST_AMOUNT
					,0 as Forex_customdutyamt
					,SUM(RFNET) AS PIDNET
					,0 forex_pidnet
					,GST_PERCENTAGE
					,0 forex_GST_PERCENTAGE
					,0 GST_CESS_PERCENTAGE
					,FREIGHT_GST_PERCENTAGE
 					,OTHER_CHARGES_GST_PERCENTAGE
 					,FREIGHT_IGST_AMOUNT
 					,FREIGHT_CGST_AMOUNT
 					,FREIGHT_SGST_AMOUNT
 					,OTHER_CHARGES_IGST_AMOUNT
 					,OTHER_CHARGES_CGST_AMOUNT
 					,OTHER_CHARGES_SGST_AMOUNT
 					,LOC.GST_STATE_CODE AS LOC_GST_STATE_CODE
		 			,LMP.AC_GST_STATE_CODE AS PARTY_GST_STATE_CODE
 			        ,(
 			         PM.FREIGHT-(ISNULL(PM.FREIGHT_TAXABLE_VALUE,0)+(CASE WHEN PM.OH_TAX_METHOD=2 THEN PM.FREIGHT_IGST_AMOUNT+PM.FREIGHT_CGST_AMOUNT+PM.FREIGHT_SGST_AMOUNT ELSE 0 END))
 			         ) AS FREIGHT_RO
			        ,PM.OTHER_CHARGES-(ISNULL(PM.OTHER_CHARGES_TAXABLE_VALUE,0)+(CASE WHEN PM.OH_TAX_METHOD=2 THEN PM.OTHER_CHARGES_IGST_AMOUNT+PM.OTHER_CHARGES_CGST_AMOUNT+PM.OTHER_CHARGES_SGST_AMOUNT ELSE 0 END)) AS OTHER_CHARGES_RO       
					,0  AS CD_PCT
					,'' terms
					,0 applycdontotal
					,PM.ROUND_OFF
					,0 AS MANUAL_ROUNDOFF
					,0 AS GST_ROUND_OFF,0 AS EXCISE_DUTY_AMOUNT,0 AS  TDS_AMOUNT,0 as GOODS_TDS_AMOUNT,'' AS TDS_AC_CODE,'0000000000' AS GOODS_TDS_AC_CODE
					,0 AS FRIGHT_PAY_MODE,BILL_LEVEL_TAX_METHOD,0 AS POSTTAXDISCOUNTAMOUNT,TOTAL_AMOUNT,SECTION_CODE,ART.SUB_SECTION_CODE
					,'' AS NARRATION,1 as pim_mode,pm.remarks,0 tcs_amount,
					'' Pur_For_Dept_id,pm.dept_id,bill_dt as vendor_bill_dt,0 credit_days,
					pm.bill_dt due_dt,pm.last_update,mrr_no memo_no,0 total_quantity,
					0 Forex_total_amount,0 Forex_Discount_amount,0 Forex_OTHER_CHARGES_TAXABLE_VALUE,0 Forex_other_charges_igst_amount,
					0 Forex_FREIGHT_TAXABLE_VALUE,0	Forex_freight_igst_amount
			FROM PPC_PIM01106 PM (NOLOCK) 
			JOIN PPC_PID01106 PD (NOLOCK) ON PM.MRR_ID=PD.MRR_ID
			JOIN HSN_MST HSN (NOLOCK) ON HSN.HSN_CODE=PD.HSN_CODE
			JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=PD.ARTICLE_CODE
			JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE
			JOIN 
			(SELECT B.CANCELLED,MEMO_ID AS REF_MEMO_ID,MEMO_ID AS MRR_ID,'PPC_PUR' AS XN_TYPE
			 FROM  #PURTABLE A
			 JOIN PPC_PIM01106  B (NOLOCK) ON B.MRR_ID=A.MEMO_ID WHERE MODE='PPC_PUR'
			 ) TPT ON PM.MRR_ID=TPT.MRR_ID 
			JOIN LOCATION LOC ON LOC.DEPT_ID=PM.LOCATION_CODE 
			JOIN LMP01106 LMP ON LMP.AC_CODE=PM.AC_CODE
		    WHERE (RECEIPT_DT>=@DGSTCUTOFFDATE) AND @DGSTCUTOFFDATE<>'' AND PM.SUBTOTAL<>0 
		    GROUP BY 
					 PM.MRR_ID
					,PM.CANCELLED 
					,TPT.XN_TYPE
					,PM.BILL_NO
					,PM.BILL_DT
					,TPT.CANCELLED
		 			,PM.AC_CODE
		 			,FREIGHT
		 			,OTHER_CHARGES
		 			,GST_PERCENTAGE
					,FREIGHT_GST_PERCENTAGE
 					,OTHER_CHARGES_GST_PERCENTAGE
 					,FREIGHT_TAXABLE_VALUE
 					,OTHER_CHARGES_TAXABLE_VALUE
 					,FREIGHT_IGST_AMOUNT
 					,FREIGHT_CGST_AMOUNT
 					,FREIGHT_SGST_AMOUNT
 					,OTHER_CHARGES_IGST_AMOUNT
 					,OTHER_CHARGES_CGST_AMOUNT
 					,OTHER_CHARGES_SGST_AMOUNT
		 			,LOC.GST_STATE_CODE
		 			,LMP.AC_GST_STATE_CODE		 			
		 			,OH_TAX_METHOD
		 			,PM.ROUND_OFF
		 			,BILL_LEVEL_TAX_METHOD,TOTAL_AMOUNT
		 			,SECTION_CODE,ART.SUB_SECTION_CODE
					, (CASE WHEN IGST_AMOUNT<>0 OR LOC.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE THEN '0000000000' ELSE '' END)
					, (CASE WHEN CGST_AMOUNT<>0 OR LOC.GST_STATE_CODE=LMP.AC_GST_STATE_CODE THEN '0000000000' ELSE '' END)
					, (CASE WHEN IGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)
					, (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)
					, (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)
					
					, (CASE WHEN (ISNULL(FREIGHT_CGST_AMOUNT,0)<>0 OR LOC.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE) AND FREIGHT<>0
						    THEN '0000000000' ELSE '' END)
					, (CASE WHEN (ISNULL(FREIGHT_CGST_AMOUNT,0)<>0 OR LOC.GST_STATE_CODE=LMP.AC_GST_STATE_CODE) AND FREIGHT<>0
						    THEN '0000000000' ELSE '' END)
					, (CASE WHEN ISNULL(FREIGHT_SGST_AMOUNT,0)<>0 AND FREIGHT<>0
						    THEN '0000000000' ELSE '' END)
					, (CASE WHEN ISNULL(FREIGHT_CGST_AMOUNT,0)<>0 AND FREIGHT<>0
						    THEN '0000000000' ELSE '' END)
					, (CASE WHEN ISNULL(FREIGHT_SGST_AMOUNT,0)<>0  AND FREIGHT<>0
						    THEN '0000000000' ELSE '' END)
					
					, (CASE WHEN (ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)<>0 OR LOC.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE) AND OTHER_CHARGES<>0
						    THEN '0000000000' ELSE '' END)
					, (CASE WHEN (ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)<>0 OR LOC.GST_STATE_CODE=LMP.AC_GST_STATE_CODE) AND OTHER_CHARGES<>0
						    THEN '0000000000' ELSE '' END)
					, (CASE WHEN ISNULL(OTHER_CHARGES_SGST_AMOUNT,0)<>0 AND OTHER_CHARGES<>0
						    THEN '0000000000' ELSE '' END)
					, (CASE WHEN ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)<>0 AND OTHER_CHARGES<>0
						    THEN '0000000000' ELSE '' END)
					, (CASE WHEN ISNULL(OTHER_CHARGES_SGST_AMOUNT,0)<>0  AND OTHER_CHARGES<>0
						    THEN '0000000000' ELSE '' END),pm.remarks,pm.dept_id,
					pm.bill_dt,pm.last_update,mrr_no,pm.last_update,pm.fin_year

	SET @CSTEP=125
	EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 
						    		
		CREATE INDEX IX_V_PROCESS_MRR_ID ON #V_PROCESS(MRR_ID,XN_TYPE)


		SET @CSTEP=127
		EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 

		UPDATE a SET terms=b.terms FROM #v_process a
		JOIN pim01106 b (NOLOCK) ON b.mrr_id=a.ref_mrr_id

		SET @CSTEP=129
		EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 
			
		UPDATE #v_process SET cd_pct=substring(terms,dbo.CHARINDEX_NTH('-',terms,1,5)+1,
			dbo.CHARINDEX_NTH('-',terms,1,6)-dbo.CHARINDEX_NTH('-',terms,1,5)-1),
			applycdontotal=(CASE WHEN SUBSTRING(terms,DBO.CHARINDEX_NTH('-',Terms,1,10)+1,1)='N' THEN 0 ELSE 1 END)
		WHERE ISNULL(terms,'')<>''

		UPDATE a SET applycdontotal=(case when ISNULL(cd_calc_based_on,1)<>2 THEN 0 ELSE 1 END) 
		FROM #v_process a JOIN lmp01106 b ON a.ac_code=B.AC_CODE
		where ISNULL(terms,'')=''

		UPDATE a SET goods_tds_ac_code=ISNULL((SELECT TOP 1 tcs_receivable_ac_code FROM TCS_MST (NOLOCK)
										WHERE ISNULL(tcs_type,0)=1 AND wef<=a.REF_BILL_DT ORDER BY wef DESC),'')
		FROM #V_PROCESS a
		WHERE ISNULL(goods_tds_amount,0)<>0

		SET @CSTEP=132
		EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 

		UPDATE a SET dept_id=(CASE WHEN ISNULL(XN_ITEM_TYPE,0)<>1 AND ISNULL(b.PUR_FOR_DEPT_ID,'')<>'' 
		THEN b.PUR_FOR_DEPT_ID  WHEN ISNULL(ACCOUNTS_DEPT_ID,'')='' AND ISNULL(c.ALLOW_PURCHASE_AT_HO,0)=0 
		THEN B.location_Code  WHEN ISNULL(c.ALLOW_PURCHASE_AT_HO,0)=1 THEN A.DEPT_ID
							ELSE ACCOUNTS_DEPT_ID END)
		FROM #V_PROCESS a 
		JOIN pim01106 b (NOLOCK) ON a.mrr_id=b.mrr_id
		JOIN location c (NOLOCK) ON c.dept_id=b.dept_id
		WHERE xn_type='PUR'
	
		UPDATE a SET LOC_GST_STATE_CODE=b.gst_state_code	FROM #V_PROCESS a 
		JOIN location b (NOLOCK) ON b.dept_id=a.DEPT_ID

		SET @CSTEP=132.5
		EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 
		--SELECT @CPOSTINGXNTYPE AS CPOSTINGXNTYPE	
		SELECT TOP 1 @CPOSTINGXNTYPE AS XN_TYPE,'CASH_DISC_AC_CODE' AS  COLUMNNAME,'DISCOUNT A/C' AS COLUMNDESC
		INTO #V_PROCESS_OTHERS FROM #V_PROCESS WHERE (CD_PCT>0 AND @BDONOTPOSTCDENTRY=0 AND fin_year<'01122' ) 
		OR DISCOUNTAMOUNT<>0
		UNION ALL
		SELECT TOP  1 @CPOSTINGXNTYPE AS  XN_TYPE,'ROFF_AC_CODE' AS  COLUMNNAME,'ROUND OFF A/C' AS COLUMNDESC
		FROM #V_PROCESS
		UNION ALL
		SELECT TOP  1 @CPOSTINGXNTYPE AS  XN_TYPE,'CUSTOM_DUTY_PAYABLE_AC_CODE' AS  COLUMNNAME,'CUSTOM DUTY PAYABLE A/C' AS COLUMNDESC
		FROM #V_PROCESS
		UNION ALL
		SELECT TOP  1 @CPOSTINGXNTYPE AS  XN_TYPE,'TCS_AC_CODE' AS  COLUMNNAME,'TCS A/C' AS COLUMNDESC
		FROM #V_PROCESS WHERE isnull(tcs_amount,0)<>0


	SET @CSTEP=135
	EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 



		SELECT    B.rcm_memo_NO
				, A.MRR_ID
				, B.BILL_DT
				, B.AC_CODE
				, B.REMARKS
				, (CASE WHEN RCM_IGST_AMOUNT<>0  THEN '0000000000' ELSE '' END) AS IGST_TAX_AC_CODE
				, (CASE WHEN RCM_CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)  AS CGST_TAX_AC_CODE
				, (CASE WHEN RCM_SGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)  AS SGST_TAX_AC_CODE
	 			, SUM(RCM_IGST_AMOUNT) AS IGST_AMOUNT
	 			, SUM(RCM_CGST_AMOUNT) AS CGST_AMOUNT
	 			, SUM(RCM_SGST_AMOUNT) AS SGST_AMOUNT					
				, B.FIN_YEAR
				, B.CANCELLED
				, b.bill_no
				, b.dept_id
				, a.rcm_gst_percentage AS gst_percentage
				, CONVERT(VARCHAR(15),'RCM_INPUT') AS POSTING_XN_TYPE
				, SECTION_CODE,ART.SUB_SECTION_CODE,b.total_amount,LM.AC_NAME 			  	  					
				
		INTO #V_PROCESS_RCM
		FROM PID01106 A (NOLOCK)
		JOIN PIM01106 B (NOLOCK) ON a.mrr_id=b.mrr_id 
		JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=a.ARTICLE_CODE
		JOIN lm01106 LM (NOLOCK) ON B.AC_CODE=LM.AC_CODE
		JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE			
		JOIN #PURTABLE pst ON pst.MEMO_ID=b.MRR_ID	
		WHERE ISNULL(rcm_applicable,0)=1
		
		GROUP BY B.rcm_memo_NO
				, A.MRR_ID
				, B.BILL_DT
				, B.AC_CODE
				, B.REMARKS
				, B.FIN_YEAR
				, B.CANCELLED
				, b.bill_no
				, b.dept_id
				, (CASE WHEN RCM_IGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)
				, (CASE WHEN RCM_CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)
				, (CASE WHEN RCM_SGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)					
				, a.rcm_gst_percentage
				, SECTION_CODE,ART.SUB_SECTION_CODE,b.total_amount,LM.AC_NAME 
		HAVING SUM(RCM_IGST_AMOUNT)<>0 OR SUM(RCM_CGST_AMOUNT)<>0
				
		UNION ALL
		SELECT    B.rcm_memo_NO
				, A.MRR_ID
				, B.BILL_DT
				, B.AC_CODE
				, B.REMARKS
				, (CASE WHEN RCM_IGST_AMOUNT<>0  THEN '0000000000' ELSE '' END) AS IGST_TAX_AC_CODE
				, (CASE WHEN RCM_CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)  AS CGST_TAX_AC_CODE
				, (CASE WHEN RCM_SGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)  AS SGST_TAX_AC_CODE
	 			,SUM(RCM_IGST_AMOUNT) AS IGST_AMOUNT
	 			,SUM(RCM_CGST_AMOUNT) AS CGST_AMOUNT
	 			,SUM(RCM_SGST_AMOUNT) AS SGST_AMOUNT					
				, B.FIN_YEAR
				, B.CANCELLED
				,b.bill_no
				,b.dept_id
				,a.rcm_gst_percentage AS gst_percentage
				,CONVERT(VARCHAR(15),'RCM_OUTPUT') AS POSTING_XN_TYPE
		  	  	,SECTION_CODE,ART.SUB_SECTION_CODE,b.total_amount,LM.AC_NAME 				
		FROM PID01106 A (NOLOCK)
		JOIN PIM01106 B (NOLOCK) ON a.mrr_id=b.mrr_id 
		JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=a.ARTICLE_CODE
		JOIN lm01106 LM (NOLOCK) ON B.AC_CODE=LM.AC_CODE
		JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE			
		JOIN #PURTABLE pst ON pst.MEMO_ID=b.MRR_ID	
		WHERE ISNULL(rcm_applicable,0)=1
		
		GROUP BY B.rcm_memo_NO
				, A.MRR_ID
				, B.BILL_DT
				, B.AC_CODE
				, B.REMARKS
				, B.FIN_YEAR
				, B.CANCELLED
				,b.bill_no	
				
				,b.dept_id
				, (CASE WHEN RCM_IGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)
				, (CASE WHEN RCM_CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)
				, (CASE WHEN RCM_SGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)
				,a.rcm_gst_percentage
				,SECTION_CODE,ART.SUB_SECTION_CODE,b.total_amount, LM.AC_NAME
		HAVING SUM(RCM_IGST_AMOUNT)<>0 OR SUM(RCM_CGST_AMOUNT)<>0
					

	SET @CSTEP=140
	EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 

		--select 'check vprocess tcs',@cTcsAcCode, * FROM #V_PROCESS a
		--		JOIN  pim01106 b (NOLOCK) ON a.mrr_id=b.mrr_id
		--where a.tcs_amount<>0
		
		print 'check posting accounts'    		
		EXEC SP3S_GET_POSTING_BLANKAC
			@CXNTYPE=@CPOSTINGXNTYPE,
			@NLOOP=@NLOOP,
			@CERRORMSG=@CERRORMSG OUTPUT,
			@BBLANKACFOUND=@BBLANKACFOUND OUTPUT		
		
		IF @BBLANKACFOUND=1 OR @CERRORMSG<>'' OR @NLOOP=0
			GOTO END_PROC

print 'done check posting accounts'
	SET @CSTEP=150
	EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 
		
	print 'running step#'+@cStep									
		SELECT @CPREVMRRID='',@CPREVXNTYPE=''
		
		
		SELECT AC_CODE,puramount as cd_base_amount,puramount as vd_amount,puramount as vd_amount_forex,REF_MEMO_ID,XN_TYPE,cd_pct,
		fin_year vch_fin_year,puramount,ref_bill_no,remarks,CONVERT(BIT,0) supplier_tds_entry,convert(numeric(10,2),0) taxable_value
		INTO #V_PROCESS_VCH FROM #V_PROCESS WHERE 1=2
		
	
		alter table #V_PROCESS_VCH add row_id int identity(1,1)

		SELECT @CMRRID='',@CXNTYPE='',@CSUPPLIER='',@BOLDCANCELLED=0
		
	SET @CSTEP=155
	EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 
		
		SET @CSTEP=160
		EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 

		print 'running step#'+@cStep
		INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT,Amount_forex,TDS_ENTRY,narration,totalamt_entry ) 
		SELECT DISTINCT ref_memo_id,AC_CODE,-TOTAL_AMOUNT,-Forex_total_amount,0 AS TDS_ENTRY,'' as narration,1 totalamt_entry
		FROM #V_PROCESS



		INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT,TDS_ENTRY,supplier_tds_entry,narration ) 
		SELECT DISTINCT ref_memo_id,AC_CODE,TDS_AMOUNT,0 AS TDS_ENTRY,1 supplier_tds_entry,'Tds Debited against ' 
		FROM #V_PROCESS WHERE tds_amount<>0
		UNION ALL					
		SELECT DISTINCT ref_memo_id,TDS_AC_CODE,-ISNULL(TDS_AMOUNT,0),1 AS TDS_ENTRY,0 supplier_tds_entry,'Tds against '  as narration
		FROM #V_PROCESS	WHERE  tds_amount<>0
		UNION ALL					
		SELECT DISTINCT ref_memo_id,GOODS_TDS_AC_CODE,-ISNULL(goods_TDS_AMOUNT,0),1 AS TDS_ENTRY,0 supplier_tds_entry,'Goods Tds against ' as narration
		FROM #V_PROCESS	WHERE  ISNULL(GOODS_tds_amount,0)<>0
		UNION ALL
		SELECT DISTINCT ref_memo_id,AC_CODE,goods_TDS_AMOUNT,0 AS TDS_ENTRY,1 as supplier_tds_entry,'Goods Tds Debited against ' 
		FROM #V_PROCESS WHERE ISNULL(GOODS_tds_amount,0)<>0
		
			SET @CSTEP=180
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 
			print 'running step#'+@cStep
			--PURCHASE ACCOUNT SHOULD BE DEBITED WITH THE RESPECTIVE SUBTOTAL
			INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT,AMOUNT_Forex,NARRATION ) 
			SELECT ref_memo_id,IGST_REVENUE_AC_CODE,PURAMOUNT,PURAMOUNT_forex,NARRATION
			FROM #V_PROCESS
			WHERE LOC_GST_STATE_CODE<>PARTY_GST_STATE_CODE
			UNION ALL
			SELECT ref_memo_id,LGST_REVENUE_AC_CODE,PURAMOUNT,0 amount_forex,NARRATION
			FROM #V_PROCESS
			WHERE  LOC_GST_STATE_CODE=PARTY_GST_STATE_CODE

			--SELECT 'check revenure a/c',ref_memo_id,IGST_REVENUE_AC_CODE,PURAMOUNT,NARRATION
			--FROM #V_PROCESS
			--WHERE LOC_GST_STATE_CODE<>PARTY_GST_STATE_CODE
			--UNION ALL
			--SELECT 'check revenure a/c',ref_memo_id,LGST_REVENUE_AC_CODE,PURAMOUNT,NARRATION
			--FROM #V_PROCESS
			--WHERE  LOC_GST_STATE_CODE=PARTY_GST_STATE_CODE
			
			--if @@spid=331
			--	select 'check FROM #V_PROCESS_RCM',* FROM #V_PROCESS_RCM

			SET @CSTEP=190
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 
			--TAX AMOUNT SHOULD BE DEBITED WITH THE RESPECTIVE TAX_AMOUNT
				INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT,AMOUNT_Forex, narration ) 
				SELECT  ref_memo_id,IGST_TAX_AC_CODE,IGST_AMOUNT,forex_igst_amount, '' as narration
				FROM #V_PROCESS
				WHERE IGST_AMOUNT<>0


				INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT,narration ) 
				SELECT  ref_memo_id,CGST_TAX_AC_CODE,CGST_AMOUNT,'' as narration
				FROM #V_PROCESS
				WHERE CGST_AMOUNT<>0
				UNION ALL
				SELECT  ref_memo_id,SGST_TAX_AC_CODE,SGST_AMOUNT,'' as narration
				FROM #V_PROCESS
				WHERE SGST_AMOUNT<>0
				UNION ALL
				SELECT  mrr_id,IGST_TAX_AC_CODE,(CASE WHEN POSTING_XN_TYPE='RCM_INPUT' THEN 1 ELSE -1 END)*IGST_AMOUNT,
				(CASE WHEN POSTING_XN_TYPE='RCM_INPUT' THEN 'Input ' ELSE 'Output ' END)+'Rcm#'+rcm_memo_no+' agst. ' as narration
				FROM #V_PROCESS_RCM
				WHERE IGST_AMOUNT<>0
				UNION ALL
				SELECT  mrr_id,CGST_TAX_AC_CODE,(CASE WHEN POSTING_XN_TYPE='RCM_INPUT' THEN 1 ELSE -1 END)*CGST_AMOUNT,
				(CASE WHEN POSTING_XN_TYPE='RCM_INPUT' THEN 'Input ' ELSE 'Output ' END)+'Rcm#'+rcm_memo_no+' agst. '
				FROM #V_PROCESS_RCM
				WHERE CGST_AMOUNT<>0
				UNION ALL
				SELECT  mrr_id,SGST_TAX_AC_CODE,(CASE WHEN POSTING_XN_TYPE='RCM_INPUT' THEN 1 ELSE -1 END)*SGST_AMOUNT,
				(CASE WHEN POSTING_XN_TYPE='RCM_INPUT' THEN 'Input ' ELSE 'Output ' END)+'Rcm#'+rcm_memo_no+' agst. ' as narration
				FROM #V_PROCESS_RCM
				WHERE SGST_AMOUNT<>0				
				UNION ALL
				SELECT DISTINCT ref_memo_id,@cTcsAcCode,a.TCS_AMOUNT,'Tcs amount against Mrr#'+memo_no as narration
				FROM #V_PROCESS a
				WHERE ISNULL(a.TCS_AMOUNT,0)<>0
				UNION ALL
				SELECT DISTINCT ref_memo_id,gst_cess_ac_code,a.gst_cess_AMOUNT,'GST Cess amount against Mrr#'+memo_no as narration
				FROM #V_PROCESS a
				WHERE ISNULL(a.gst_cess_AMOUNT,0)<>0

			SET @CSTEP=195
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 

			INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT, narration ) 
			SELECT  ref_memo_id,custom_duty_expense_ac_code,Forex_customdutyamt, 'Custom duty Expense against Mrr#'+memo_no as narration
			FROM #V_PROCESS
			WHERE isnull(Forex_customdutyamt,0)<>0
			UNION ALL
			SELECT  ref_memo_id,custom_duty_tax_ac_code,Forex_IGST_AMOUNT, 'Custom duty GST against Mrr#'+memo_no as narration
			FROM #V_PROCESS
			WHERE isnull(Forex_IGST_AMOUNT,0)<>0
			UNION ALL
			SELECT  ref_memo_id,@cCustomDutyPayableAcCode,(Forex_customdutyamt+isnull(Forex_IGST_AMOUNT,0))*-1, 'Custom duty payable against Mrr#'+memo_no as narration
			FROM #V_PROCESS
			WHERE isnull(Forex_customdutyamt,0)<>0
			
			SET @CSTEP=200
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 
			
			INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT,AMOUNT_Forex ) 
			SELECT DISTINCT ref_memo_id,@CDISCACCODE,-DISCOUNTAMOUNT,-Forex_discount_amount
			FROM #V_PROCESS
			WHERE DISCOUNTAMOUNT<>0
			

			
			SET @CSTEP=210
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 

			--FREIGHT AMOUNT SHOULD BE CREDITED  
			
			
			--IF @CMRRID='010111900000001-000025'
			--	SELECT * FROM #V_PROCESS  A  WHERE MRR_ID=@CMRRID
			
					  				  
			INSERT @VCHC (XN_ID,XN_NO,AC_CODE,AMOUNT,AMOUNT_Forex)   
			SELECT DISTINCT  REF_MEMO_ID,REF_BILL_NO,(CASE WHEN ISNULL(FREIGHT_IGST_AMOUNT,0)<>0 THEN 
			FREIGHT_IGST_REVENUE_AC_CODE ELSE FREIGHT_LGST_REVENUE_AC_CODE END) AS AC_CODE,freight,Forex_FREIGHT_TAXABLE_VALUE  
			FROM #V_PROCESS  A
			WHERE  FREIGHT<>0 
				
			INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT,AMOUNT_Forex )   
			SELECT DISTINCT  REF_MEMO_ID,REF_BILL_NO,FREIGHT_IGST_TAX_AC_CODE AS AC_CODE,FREIGHT_IGST_AMOUNT,Forex_freight_igst_amount
			FROM #V_PROCESS  A
			WHERE FREIGHT_IGST_AMOUNT<>0
			
			INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT )   
			SELECT DISTINCT REF_MEMO_ID,REF_BILL_NO,FREIGHT_CGST_TAX_AC_CODE,FREIGHT_CGST_AMOUNT
			FROM #V_PROCESS  A
			WHERE FREIGHT_CGST_AMOUNT<>0
			UNION ALL
			SELECT DISTINCT  REF_MEMO_ID,REF_BILL_NO,FREIGHT_SGST_TAX_AC_CODE,FREIGHT_SGST_AMOUNT
			FROM #V_PROCESS  A
			WHERE FREIGHT_SGST_AMOUNT<>0
				 
				 
				   				  
   		
			SET @CSTEP=220
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 
			--OTHER CHARGES AMOUNT SHOULD BE CREDITED  
			
			INSERT @VCHC (XN_ID,XN_NO,AC_CODE,AMOUNT,AMOUNT_Forex)   
			SELECT DISTINCT  REF_MEMO_ID,REF_BILL_NO,(CASE WHEN ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)<>0 THEN 
			OTHER_CHARGES_IGST_REVENUE_AC_CODE ELSE OTHER_CHARGES_LGST_REVENUE_AC_CODE END),OTHERCHARGES,Forex_OTHER_CHARGES_TAXABLE_VALUE
			FROM #V_PROCESS  A
			WHERE OTHERCHARGES<>0 
		
			SET @CSTEP=225
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		

			INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT,AMOUNT_Forex )   
			SELECT DISTINCT REF_MEMO_ID,REF_BILL_NO,OTHER_CHARGES_IGST_TAX_AC_CODE,OTHER_CHARGES_IGST_AMOUNT,Forex_other_charges_igst_amount
			FROM #V_PROCESS  A
			WHERE OTHER_CHARGES_IGST_AMOUNT<>0
			
			INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT )   
			SELECT DISTINCT REF_MEMO_ID,REF_BILL_NO,OTHER_CHARGES_CGST_TAX_AC_CODE,OTHER_CHARGES_CGST_AMOUNT
			FROM #V_PROCESS  A
			WHERE OTHER_CHARGES_CGST_AMOUNT<>0
			UNION ALL
			SELECT DISTINCT REF_MEMO_ID,REF_BILL_NO,OTHER_CHARGES_SGST_TAX_AC_CODE,OTHER_CHARGES_SGST_AMOUNT
			FROM #V_PROCESS  A
			WHERE  OTHER_CHARGES_SGST_AMOUNT<>0

		              
		          
		        
	  			
			SET @CSTEP=235
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		

			--ROUNDOFF AMOUNT SHOULD BE DEBITED
			INSERT @VCHC (XN_ID,AC_CODE,AMOUNT) 
			SELECT DISTINCT ref_memo_id,@CROUNDOFFACCODE,ISNULL(GST_ROUND_OFF,0)+isnull(round_off,0)
			FROM #V_PROCESS WHERE (ISNULL(GST_ROUND_OFF,0)+isnull(round_off,0))<>0
						
			--EXCISEDUTY AMOUNT SHOULD BE DEBITED TO PURCHASE ACCOUNT
			INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT ) 
			SELECT DISTINCT ref_memo_id,(CASE WHEN LOC_GST_STATE_CODE<>PARTY_GST_STATE_CODE
				THEN IGST_REVENUE_AC_CODE ELSE LGST_REVENUE_AC_CODE END) ac_code,EXCISEDUTYAMOUNT
			FROM #V_PROCESS
			WHERE  EXCISEDUTYAMOUNT<>0
			
			SET @CSTEP=238
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		
			UPDATE a SET supplier_entry=1 FROM @vchC a JOIN pim01106 b (NOLOCK)  
			ON a.xn_id=b.mrr_id AND a.ac_code=b.ac_code
			
					
			SET @CSTEP=240
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		
			print 'INSERT #V_PROCESS_VCH with cd '	
			INSERT #V_PROCESS_VCH (vch_fin_year,AC_CODE,Cd_base_amount,vd_amount,vd_amount_forex, REF_MEMO_ID,XN_TYPE,
			cd_pct,REF_BILL_NO,remarks,supplier_tds_entry,taxable_value)
			SELECT a.fin_year,a.AC_CODE,
			(CASE WHEN isnull(ApplyCDOnTotal,1)=1 THEN SUM(a.pidnet) else sum(a.puramount) end) cd_base_amount,
			SUM(a.pidnet)*-1 vd_amount,SUM(a.forex_pidnet)*-1 vd_amount_forex,
			REF_MEMO_ID,XN_TYPE,cd_pct,a.REF_BILL_NO,''  remarks,0 supplier_tds_entry,sum(a.puramount) taxable_value
			FROM #V_PROCESS a 
			GROUP BY a.fin_year,a.ac_code,REF_MEMO_ID,XN_TYPE,cd_pct,isnull(ApplyCDOnTotal,1),a.REF_BILL_NO
			
			UNION ALL
			SELECT b.fin_year,a.AC_CODE,0 cd_base_amount,SUM(a.amount) vd_amount,0 vd_amount_forex,
			xn_id,'PUR' xn_type,0 cd_pct, b.bill_no REF_BILL_NO,isnull(a.narration,'') remarks,
			ISNULL(supplier_tds_entry,0),0 taxable_value
			FROM @vchC a JOIN pim01106 b (NOLOCK) ON a.xn_id=b.mrr_id
			  WHERE supplier_entry=1 AND ISNULL(totalamt_entry,0)=0
			GROUP BY b.fin_year,a.ac_code,xn_ID,a.narration,b.BILL_NO,ISNULL(supplier_tds_entry,0)


			--if @@spid=254
			--	select 'check vch for cd', * from  #V_PROCESS_VCH where ref_memo_id='HO011210000HO00-000007'
			--if @@spid=633
			--	select 'check cd bills', * from #V_PROCESS_VCH WHERE REF_MEMO_ID IN (SELECT ref_memo_id FROM #V_PROCESS_VCH GROUP BY ref_memo_id
			--	HAVING COUNT(DISTINCT REF_mrr_id)>1)

			SET @CSTEP=240
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		
			UPDATE #V_PROCESS_VCH SET ref_bill_no=ref_bill_no+'/'+
			(CASE WHEN ROUND(cd_pct,0)<>cd_pct THEN LTRIM(RTRIM(STR(cd_pct,7,2))) 
									  ELSE LTRIM(RTRIM(STR(cd_pct))) END)+'%'
			WHERE REF_MEMO_ID IN (SELECT ref_memo_id FROM #V_PROCESS_VCH WHERE ISNULL(cd_pct,0)<>0
								  GROUP BY ref_memo_id  HAVING COUNT(DISTINCT cd_pct)>1)
			
			--;WITH cteVch
			--AS
			--(SELECT ref_memo_id,ref_bill_no,ref_mrr_id,ROW_NUMBER() over (partition by ref_memo_id ORDER BY ref_bill_no) rno
			-- FROM #V_PROCESS_VCH
			--)

			--select *  FROM cteVch WHERE rno>1
			--UPDATE a SET ref_bill_no=a.ref_bill_no+'/'+ltrim(rtrim(str(rno))) FROM 
			--#V_PROCESS_VCH a,cteVch b 
			--WHERE a.REF_MEMO_ID=b.ref_memo_id AND a.REF_mrr_id=b.REF_mrr_id
			--AND a.REF_MEMO_ID IN (SELECT ref_memo_id FROM cteVch WHERE rno>1)




			--select 'check bill no.', * from  #V_PROCESS_VCH where REF_MEMO_ID='H1011220000H1AK-000454'

			SET @CSTEP=245
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		
						
			UPDATE a SET remarks=b.Remarks FROM @VCHC a JOIN #V_PROCESS b ON a.XN_ID=b.ref_memo_id
					
				 			
			SET @CSTEP=250
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		
						
			INSERT INTO @VLINK(VM_ID ,MEMO_ID,memo_dt,XN_TYPE,LAST_UPDATE,dept_id,REF_BILL_DATE,
			ref_bill_no,bill_ac_code,party_name,net_amount,quantity,vendor_bill_dt,credit_days,memo_no,due_dt,FIN_YEAR,pur_tds_amount )
			SELECT DISTINCT 'LATER' VM_ID,ref_memo_id,REF_BILL_DT memo_dt,
			xn_type,a.last_update,dept_id,REF_BILL_DT,REF_BILL_NO,a.ac_code,b.ac_name party_name,
			total_amount,a.total_quantity,vendor_bill_dt,credit_days,a.memo_no,a.REF_BILL_DT as due_dt,
			a.fin_year,(isnull(a.tds_amount,0)+isnull(a.goods_tds_amount,0)) pur_tds_amount FROM #v_process a
			JOIN lm01106 b (NOLOCK) ON a.ac_code=b.ac_code
			
			
			SET @NCTR=1
			SET @CSTEP=252
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		
			UPDATE @vLink SET vm_id = 'LATERPUR-'+RTRIM(LTRIM(CONVERT(VARCHAR,@NCTR))),
			@NCTR=@NCTR+1


			SET @CSTEP=255
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		
			UPDATE a SET vm_id=b.vm_id FROM @vLink a 
			JOIN POSTACT_VOUCHER_LINK b (NOLOCK) ON a.memo_id=b.MEMO_ID AND a.XN_TYPE=b.XN_TYPE
			JOIN VM01106 c (NOLOCK) ON c.VM_ID=B.VM_ID
			WHERE c.CANCELLED=0 


			SET @CSTEP=259
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 			
			UPDATE a SET due_dt=isnull(d.due_dt,a.due_dt) FROM @VLINK a
			LEFT JOIN 
			(SELECT REF_CONVERTED_MRR_ID,MAX(a.memo_dt) due_dt from GRN_PS_MST a (NOLOCK)
			 JOIN  @VLINK b ON a.REF_CONVERTED_MRR_ID=b.memo_id
			 WHERE a.cancelled=0
			 GROUP BY REF_CONVERTED_MRR_ID) d ON d.REF_CONVERTED_MRR_ID=a.memo_id

			SET @CSTEP=259.5
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 
					    

			SET @CSTEP=262
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		


			INSERT @VDC (REF_MEMO_ID, VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT,DEBIT_AMOUNT_Forex,CREDIT_AMOUNT_Forex, X_TYPE, 
							CREDIT_DAYS, AC_NAME,COST_CENTER_DEPT_ID)
			SELECT A.XN_ID, d.vm_id
				, 'LATERPUR-'+CONVERT(VARCHAR,ROW_NUMBER() OVER(ORDER BY A.AC_CODE)+2) AS VD_ID
				, A.AC_CODE
				,(CASE WHEN ISNULL(A.NARRATION,'')<>'' THEN A.NARRATION ELSE '' END)+
						('BILL# ' + d.ref_bill_no + ' DT. ' + CONVERT(VARCHAR(10),d.vendor_bill_dt ,105 ) + 
					' MRR# ' + d.memo_no)+
					(CASE WHEN @bPostRemarksInNarration=1 THEN  ' '+a.remarks ELSE '' END) AS NARRATION
				,(CASE WHEN SUM(AMOUNT)>0 THEN SUM(AMOUNT) ELSE 0 END) AS DEBIT_AMOUNT
				,(CASE WHEN SUM(AMOUNT)<0 THEN ABS(SUM(AMOUNT)) ELSE 0 END) AS CREDIT_AMOUNT
				,(CASE WHEN SUM(ISNULL(AMOUNT_Forex,0))>0 THEN SUM(AMOUNT_FOREX) ELSE 0 END) AS DEBIT_AMOUNT_forex
				,(CASE WHEN SUM(ISNULL(AMOUNT_Forex,0))<0 THEN ABS(SUM(AMOUNT_Forex)) ELSE 0 END) AS CREDIT_AMOUNT_forex
				,(CASE WHEN SUM(AMOUNT) > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE
				,(CASE WHEN ISNULL(@NCREDITDAYS,0)=0 THEN B.CREDIT_DAYS ELSE @NCREDITDAYS END)
				,c.AC_NAME
				,(CASE WHEN @BPOSTHOASCOSTCENTER=1 AND ISNULL(TDS_ENTRY,0)=1  THEN @CCURLOCID ELSE '' END) AS COST_CENTER_DEPT_ID
			FROM @VCHC A
			LEFT JOIN LMP01106 B (NOLOCK) ON A.AC_CODE = B.AC_CODE
			JOIN LM01106 c (NOLOCK) ON A.AC_CODE = c.AC_CODE
			JOIN @vLink d ON d.MEMO_ID=a.XN_ID
			WHERE AMOUNT<>0 AND ISNULL(supplier_entry,0)=0
			GROUP BY  A.XN_ID, d.vm_id,A.AC_CODE,c.AC_NAME,B.CREDIT_DAYS,fin_year,
			(CASE WHEN ISNULL(A.NARRATION,'')<>'' THEN A.NARRATION ELSE '' END)+
						('BILL# ' + d.ref_bill_no + ' DT. ' + CONVERT(VARCHAR(10),d.vendor_bill_dt ,105 ) + 
					' MRR# ' + d.memo_no)+
					(CASE WHEN @bPostRemarksInNarration=1 THEN  ' '+a.remarks ELSE '' END)
			,(CASE WHEN @BPOSTHOASCOSTCENTER=1 AND ISNULL(TDS_ENTRY,0)=1  THEN @CCURLOCID ELSE '' END)
			ORDER BY X_TYPE,ABS(SUM(AMOUNT)) DESC
					
			SET @CSTEP=265
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		
			
			--if @@spid=105
			--	select 'check bb', 	a.*		FROM #V_PROCESS_VCH A
			--JOIN LMP01106 B (NOLOCK) ON A.AC_CODE = B.AC_CODE
			--JOIN LM01106 c (NOLOCK) ON A.AC_CODE = c.AC_CODE
			--JOIN @vLink d ON d.MEMO_ID=a.REF_MEMO_ID
			--where LEN('LATERPUR-'+a.ref_memo_id+'_'+ltrim(rtrim(str(a.row_id))))>40

			INSERT @VDC (REF_MEMO_ID, VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT,DEBIT_AMOUNT_Forex, CREDIT_AMOUNT_Forex, X_TYPE, 
							CREDIT_DAYS, AC_NAME)
			SELECT A.ref_memo_ID, d.vm_id
				, 'LATERPUR-'+a.ref_memo_id+'_'+ltrim(rtrim(str(a.row_id))) AS VD_ID
				, A.AC_CODE
				,(CASE WHEN ISNULL(A.remarks,'')<>'' THEN A.remarks ELSE '' END)+
						('BILL# ' + d.ref_bill_no + ' DT. ' + CONVERT(VARCHAR(10),d.vendor_bill_dt ,105 ) + 

					' MRR# ' + d.memo_no)+
					(CASE WHEN @bPostRemarksInNarration=1 THEN  ' '+pm.remarks ELSE '' END) AS NARRATION,
				(CASE WHEN vd_amount>0 THEN vd_amount ELSE 0 END) aS DEBIT_AMOUNT,
				(CASE WHEN vd_amount<0 THEN ABS(vd_amount) ELSE 0 END) aS CREDIT_AMOUNT,
				(CASE WHEN ISNULL(vd_amount_forex,0)>0 THEN vd_amount_forex ELSE 0 END) aS DEBIT_AMOUNT_forex,
				(CASE WHEN ISNULL(vd_amount_forex,0)<0 THEN ABS(vd_amount_forex) ELSE 0 END) aS CREDIT_AMOUNT_forex,
				(case when vd_amount<0 then 'CR' else 'DR' end) AS X_TYPE
				,(CASE WHEN ISNULL(@NCREDITDAYS,0)=0 THEN B.CREDIT_DAYS ELSE @NCREDITDAYS END)
				,c.AC_NAME
					
			FROM #V_PROCESS_VCH A
			JOIN LMP01106 B (NOLOCK) ON A.AC_CODE = B.AC_CODE
			JOIN LM01106 c (NOLOCK) ON A.AC_CODE = c.AC_CODE
			JOIN @vLink d ON d.MEMO_ID=a.REF_MEMO_ID
			JOIN pim01106 pm (NOLOCK) ON pm.mrr_id=a.ref_memo_id

				IF ISNULL(@BDONOTPOSTCDENTRY,0)=0
				BEGIN
					SET @CSTEP=270
					EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		
					
					--CREATING VOUCHERS FOR CASH DISCOUNT IF SPECIFIED IN LEDGER TERMS...
					INSERT @VDC (ref_memo_id, VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE, 
						  CREDIT_DAYS, AC_NAME,cd_posted,cd_pct)
					SELECT a.REF_MEMO_ID, d.vm_id ,'LATERPUR-1' AS VD_ID,A.AC_CODE,
					('BILL# ' + d.ref_bill_no + ' DT. ' + CONVERT(VARCHAR(10),d.vendor_bill_dt ,105 ) + 
					' MRR#(CD1) ' + d.memo_no) AS NARRATION						  
						  ,SUM(A.Cd_base_amount*a.cd_pct/100),0,'DR',ISNULL(@NCREDITDAYS,0),B.AC_NAME,1 as cd_posted,a.CD_PCT
					FROM #V_PROCESS_VCH A
					JOIN LM01106 B (NOLOCK) ON A.AC_CODE=B.AC_CODE
					JOIN @vLink d ON d.MEMO_ID=a.REF_MEMO_ID
					WHERE vch_fin_year<'01122' AND isnull(a.cd_pct,0)<>0
					GROUP BY a.ref_memo_id, d.vm_id,A.AC_CODE,B.AC_NAME,d.ref_bill_no,d.vendor_bill_dt,
						d.memo_no ,a.cd_pct
					UNION ALL
					SELECT a.ref_memo_id,d.vm_id,'LATERPUR-2' AS VD_ID,@CDISCACCODE
						  ,('BILL# ' + d.ref_bill_no + ' DT. ' + CONVERT(VARCHAR(10),d.vendor_bill_dt ,105 ) + 
							' MRR#(CD2) ' + d.memo_no) AS NARRATION						  
						  ,0,SUM(A.Cd_base_amount*a.cd_pct/100),'CR',ISNULL(@NCREDITDAYS,0)
						  ,B.AC_NAME,0 as cd_posted,0 cd_pct
					FROM #V_PROCESS_VCH A
					JOIN LM01106 B (NOLOCK) ON B.AC_CODE=@CDISCACCODE
					JOIN @vLink d ON d.MEMO_ID=a.REF_MEMO_ID
					WHERE vch_fin_year<'01122' AND isnull(a.cd_pct,0)<>0
					GROUP BY a.REF_MEMO_ID, d.vm_id,B.AC_NAME,d.ref_bill_no,d.vendor_bill_dt,d.memo_no  

				END
								
				
				SET @CSTEP=275
				EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		

				INSERT @VDC (VM_ID, VD_ID, AC_CODE,ac_name, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE)
				SELECT a.vm_id,'later-roff' as vd_id,@CROUNDOFFACCODE as ac_code,b.ac_name,
				'Round Off' narration,
				(CASE WHEN SUM(debit_amount-credit_amount)>0 then 0 else ABS(SUM(debit_amount-credit_amount)) END) AS DEBIT_AMOUNT,
				(CASE WHEN (SUM(debit_amount-credit_amount))<0 then 0 else (SUM(debit_amount-credit_amount)) END) AS CREDIT_AMOUNT,
				(CASE WHEN (SUM(debit_amount-credit_amount))<0 then 'Dr' ELSE 'Cr' END) AS x_type
				FROM @vdC a JOIN lm01106 b (NOLOCK) on @CROUNDOFFACCODE=b.ac_code
				GROUP BY a.vm_id,b.ac_name 
				HAVING SUM(debit_amount-credit_amount)<>0 AND  ABS(SUM(debit_amount-credit_amount))<=1


			SET @CSTEP=277
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		
			UPDATE a SET drtotal=b.drtotal,crtotal=b.crtotal
			FROM @vLink a JOIN (SELECT vm_id,SUM(DEBIT_AMOUNT) DRTOTAL,SUM(CREDIT_AMOUNT) CRTOTAL
				  FROM  @vdC GROUP BY vm_id) b ON a.vm_id=b.vm_id	
																				
			SET @CSTEP=280
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		

				INSERT @VMC	( VM_ID,VOUCHER_NO,VOUCHER_DT, VOUCHER_CODE, DEPT_ID, 
								  BILL_TYPE, BILL_NO, BILL_ID, BILL_DT, BILL_AC_CODE, 
								  PARTY_NAME, QUANTITY, NET_AMOUNT, MRR_LIST, CANCELLED,DRTOTAL,CRTOTAL
								  ,VOUCHER_TYPE,DEPT_NAME,BILL_STATUS,VM_ORDER,posted_vendor_bill_dt )
				SELECT a.VM_ID,isnull(b.VOUCHER_NO,'') voucher_no,a.memo_dt AS VOUCHER_DT,@CVOUCHERCODE, 
				 a.dept_id,a.xn_type, a.ref_bill_no bill_no,a.MEMO_ID AS BILL_ID,
				 A.REF_BILL_DATE BILL_DT,A.BILL_AC_CODE,A.PARTY_NAME,A.QUANTITY,A.NET_AMOUNT, 
				 a.memo_no MRR_LIST,d.CANCELLED,a.DRTOTAL,a.CRTOTAL
				,'PURCHASE',c.dept_name,'NEW',1,a.vendor_bill_dt
				FROM @vLink a
				LEFT JOIN vm01106 b (NOLOCK) ON a.vm_id=b.vm_id								  
				JOIN location c (NOLOCK) ON c.dept_id=a.dept_id
				JOIN pim01106 d (NOLOCK) ON d.mrr_id=a.MEMO_ID

			SET @CSTEP=305
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		

				
				--select 'check vprocess',cd_pct,* from  #v_process where ref_memo_id='HO01122HO/21-22-000082'
				--select 'check cd in bb',cd_pct, a.* from 		
				--@VDC A   where ref_memo_id='HO01122HO/21-22-000082'

				--BILL BY BILL REF  
				INSERT @TBILL_BY_BILL_REF  
				(VD_ID,REF_NO,AMOUNT,AMOUNT_Forex,X_TYPE,CR_DAYS,ADJ_REMARKS,LAST_UPDATE,VM_ID,CD_PERCENTAGE,
				 CD_base_AMOUNT,org_bill_taxable_value,due_dt,cd_posted,pur_mrr_id,ignore_cd_base_amount,pur_tds_amount,PUR_VENDOR_BILL_DT)  
				   SELECT 'LATERPUR-'+a.ref_memo_id+'_'+ltrim(rtrim(str(a.row_id))) AS VD_ID
					  ,DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,a.ref_bill_no,d.ref_bill_date,'CR',d.vm_id)
					  ,ABS(SUM(a.vd_amount)) amount,ABS(SUM(a.vd_amount_forex)) amount_forex,
					  (CASE WHEN SUM(a.vd_amount)<0 THEN 'CR' ELSE 'Dr' END) AS X_TYPE  
					  ,(CASE WHEN d.credit_days=0 THEN ISNULL(c.credit_days,0) else D.credit_days end) as CREDIT_DAYS,'PURCHASE' AS ADJ_REMARKS,GETDATE(),d.vm_id AS VM_ID,
					  cd_pct AS CD_PERCENTAGE,
					  SUM(ISNULL(a.cd_base_amount,0)) AS CD_base_AMOUNT,SUM(a.taxable_value) AS org_bill_taxable_value,
					  d.due_dt+(CASE WHEN d.credit_days=0 THEN ISNULL(c.credit_days,0) else D.credit_days end) AS due_dt,
					  (CASE WHEN  ISNULL(a.cd_pct,0)<>0 AND @BDONOTPOSTCDENTRY=0  AND fin_year<'01122' THEN 1 ELSE 0 END) as cd_posted
					  ,d.memo_id,SUM(CASE WHEN  isnull(supplier_tds_entry,0)=1 then a.vd_amount ELSE 0 END)	as ignore_cd_base_amount				   						  				 
					  ,isnull(D.pur_tds_amount,0) pur_tds_amount,d.vendor_bill_dt
				FROM #V_PROCESS_VCH A   
				JOIN LM01106 B (NOLOCK) ON A.AC_CODE=B.AC_CODE  
				JOIN LMP01106 C (NOLOCK) ON C.AC_CODE=B.AC_CODE
				JOIN @VLINK d ON d.MEMO_ID=a.ref_memo_id
				JOIN @vmC e ON e.vm_id=d.vm_id
				WHERE (CHARINDEX(B.HEAD_CODE,@CCREDITORHEADS)>0 OR ISNULL(C.ALLOW_CREDITOR_DEBTOR,0)=1)
				GROUP BY  A.REF_MEMO_ID,a.row_id, d.vm_id,A.AC_CODE,
				(CASE WHEN d.credit_days=0 THEN ISNULL(c.credit_days,0) else D.credit_days end),a.CD_PCT,d.memo_id,a.REF_BILL_NO,ref_bill_date,
				due_dt,fin_year,isnull(D.pur_tds_amount,0),d.vendor_bill_dt
				
				UNION ALL
				SELECT 'LATERPUR-1' AS VD_ID
					,DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,a.ref_bill_no,d.ref_bill_date,'CR',d.vm_id)
					,ABS(SUM(A.Cd_base_amount*a.cd_pct/100)) amount,0 amount_forex,
					'Dr' AS X_TYPE,(CASE WHEN d.credit_days=0 THEN ISNULL(c.credit_days,0) else D.credit_days end) as CREDIT_DAYS,'CD@'+(CASE WHEN ROUND(a.cd_pct,0)<>a.cd_pct THEN LTRIM(RTRIM(STR(a.cd_pct,7,2))) 
									ELSE LTRIM(RTRIM(STR(a.cd_pct))) END)+'%' AS ADJ_REMARKS,GETDATE(),d.vm_id AS VM_ID,
					cd_pct AS CD_PERCENTAGE,
					SUM(ISNULL(a.cd_base_amount,0)) AS CD_base_AMOUNT,sum(a.taxable_value) org_bill_taxable_value,
					d.due_dt+(CASE WHEN d.credit_days=0 THEN ISNULL(c.credit_days,0) else D.credit_days end) AS due_dt,
					1 as cd_posted,d.memo_id,0 as ignore_cd_base_amount,0 pur_tds_amount,d.vendor_bill_dt
					  
				FROM #V_PROCESS_VCH A   
				JOIN LM01106 B (NOLOCK) ON A.AC_CODE=B.AC_CODE  
				JOIN LMP01106 C (NOLOCK) ON C.AC_CODE=B.AC_CODE
				JOIN @VLINK d ON d.MEMO_ID=a.ref_memo_id
				JOIN @vmC e ON e.vm_id=d.vm_id
				WHERE a.cd_pct<>0 AND a.vch_fin_year<'01122' AND isnull(a.cd_pct,0)<>0
				GROUP BY  A.REF_MEMO_ID, d.vm_id,A.AC_CODE,(CASE WHEN d.credit_days=0 THEN ISNULL(c.credit_days,0) else D.credit_days end),a.CD_PCT,d.memo_id,a.REF_BILL_NO,ref_bill_date,
				due_dt,fin_year,d.vendor_bill_dt
				

			SET @CSTEP=310
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		


    UPDATE @VDC SET DEBIT_AMOUNT =CASE WHEN DEBIT_AMOUNT <>0 THEN DEBIT_AMOUNT ELSE NULL END,
                    CREDIT_AMOUNT =CASE WHEN CREDIT_AMOUNT <>0 THEN CREDIT_AMOUNT ELSE NULL END
	
	--select 'check @vchc',* from @vchC where xn_id='HO011210000HO00-001746'
	--select 'check @vdc', * from @vdc where vm_id='HO2B7D115F-427B-45F5-BA61-50E907065600'

	--if @@spid=440
	--select 'check @vdc',* from @vdc where vm_id='014EDF487F-FB38-4407-8E1F-8BE663894F86'
	
	--SELECT ltrim(rtrim(b.dept_id))+convert(varchar,b.voucher_dt,112)+ltrim(rtrim(a.ac_code)) FROM 
	--  @vdC a JOIN @VMC b ON a.vm_id=b.vm_id

	SET @CSTEP=320
	EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		
	  
	SELECT A.vm_id,A.CREDIT_AMOUNT,A.DEBIT_AMOUNT,B.CREDIT_AMOUNT AS ORG_CRAMT,B.DEBIT_AMOUNT AS ORG_DRAMT,
	convert(bit,0) as bb_diff,convert(varchar(200),'') ref_no,convert(date,'') due_dt INTO #DIFFVMS FROM 
	(SELECT a.vm_id,b.cancelled,SUM(ISNULL(CREDIT_AMOUNT,0)) AS CREDIT_AMOUNT,SUM(ISNULL(DEBIT_AMOUNT,0)) AS DEBIT_AMOUNT
	 FROM @VDC A JOIN @VMC B ON A.VM_ID=B.VM_ID 
	 GROUP BY a.vm_id,b.cancelled) A
	 LEFT OUTER JOIN 						  
	(SELECT a.vm_id,SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT,SUM(DEBIT_AMOUNT) AS DEBIT_AMOUNT
	 FROM VD01106 A (NOLOCK) JOIN VM01106 B (NOLOCK) ON A.VM_ID=B.VM_ID
	 JOIN  @VMC c ON c.vm_id=b.vm_id
	 WHERE B.BILL_TYPE='PUR' AND B.CANCELLED=0 
	 GROUP BY a.vm_id) B ON A.vm_id=b.vm_id
	 WHERE (ABS(ISNULL(A.CREDIT_AMOUNT+A.DEBIT_AMOUNT,0)-ISNULL(B.DEBIT_AMOUNT+B.CREDIT_AMOUNT,0))>=1) or a.cancelled=1

	--if @@spid=69
	--	select 'check diffvm', * from  #DIFFVMS a join @VLINK b on a.VM_ID=b.vm_id

		--if @@spid=	86
		--SELECT 'DIFFVMS-1', * FROM #DIFFVMS

	 --WHERE Voucher_dt='2019-04-05 00:00:00.000' and dept_id='ho' and ac_code='HO00001032'
			SET @CSTEP=320
			EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		

	SET @CSTEP=325
	EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		
		
	
	--select 'check @vmc',* from @vmc	
	INSERT #DIFFVMS (vm_id,CREDIT_AMOUNT,DEBIT_AMOUNT,ORG_CRAMT,org_DRAMT,bb_diff,ref_no,due_dt)
	SELECT A.vm_id,A.CREDIT_AMOUNT,A.DEBIT_AMOUNT,B.CREDIT_AMOUNT AS ORG_CRAMT,B.DEBIT_AMOUNT as org_DRAMT,
	1 as bb_diff,a.ref_no,a.due_dt FROM 
	(SELECT bb.due_dt,b.vm_id,BB.REF_NO,SUM(CASE WHEN BB.X_TYPE='CR' THEN AMOUNT ELSE 0 END) AS CREDIT_AMOUNT,
	 SUM(CASE WHEN BB.X_TYPE='DR' THEN AMOUNT ELSE 0 END) AS DEBIT_AMOUNT
	 FROM @TBILL_BY_BILL_REF BB JOIN @VDC A ON A.VD_ID=BB.VD_ID AND A.VM_ID=BB.VM_ID
	 JOIN @VMC B ON A.VM_ID=B.VM_ID 
	 JOIN lmp01106 c (NOLOCK) on c.ac_code=a.ac_code
	 WHERE bill_by_bill=1
	 GROUP BY bb.due_dt,B.vm_id,bb.ref_no) A
	 LEFT OUTER JOIN 						  
	(SELECT b.vm_id,bb.due_dt,bb.ref_no,SUM(CASE WHEN BB.X_TYPE='CR' THEN AMOUNT ELSE 0 END) AS CREDIT_AMOUNT,
	 SUM(CASE WHEN BB.X_TYPE='DR' THEN AMOUNT ELSE 0 END) AS DEBIT_AMOUNT
	 FROM VD01106 A (NOLOCK) JOIN VM01106 B (NOLOCK) ON A.VM_ID=B.VM_ID
	 JOIN BILL_BY_BILL_REF BB (NOLOCK) ON BB.VD_ID=A.VD_ID
	 JOIN @VMC C ON C.vm_id=a.vm_id
	 JOIN lmp01106 lm on lm.ac_code=a.ac_code
	 WHERE B.BILL_TYPE='PUR' AND B.CANCELLED=0 AND lm.bill_by_bill=1	 
	 GROUP BY  bb.due_dt, b.vm_id,bb.ref_no) B ON A.vm_id=b.vm_id and a.ref_no=b.ref_no 
	 and b.due_dt=a.due_dt
	 WHERE ABS(ISNULL(A.CREDIT_AMOUNT+A.DEBIT_AMOUNT,0)-
	 ISNULL(B.DEBIT_AMOUNT+B.CREDIT_AMOUNT,0))>=1

	--if @@spid=254
	--	select 'check diffvm bb', * from  #DIFFVMS a join @VLINK b on a.VM_ID=b.vm_id
	--	where memo_id='HO011210000HO00-000007'		

	SET @CSTEP=330
	EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		

	PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	
	--if @@spid=	86
	--	SELECT 'DIFFVMS-2', * FROM #DIFFVMS

	--SELECT 'check pending to be deleted',A.vm_id,a.voucher_dt FROM @VMC A 
	
	--SELECT 'check pending to be deleted-2',A.vm_id,a.voucher_dt FROM @VMC A 
	--LEFT OUTER JOIN #DIFFVMS B ON A.vm_id=b.vm_id
	--WHERE B.vm_ID IS NULL
	
	SET @CSTEP=335
	EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		


	UPDATE a SET last_update=b.last_update FROM postact_voucher_link a WITH (ROWLOCK)
	JOIN @VLINK b ON a.vm_id=b.VM_ID AND a.memo_id=b.MEMO_ID
	LEFT OUTER JOIN #DIFFVMS c ON A.vm_id=c.vm_id
	WHERE a.xn_type='PUR' and C.VM_ID IS NULL
	
	SET @CSTEP=340
	EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		


	print 'delete balanced posted entries-1'
 	DELETE A FROM @VMC A LEFT OUTER JOIN  #DIFFVMS B ON A.vm_id=b.vm_id
	WHERE B.vm_ID IS NULL
	
	print 'delete balanced posted entries-2'
	DELETE a FROM @vdC a LEFT OUTER JOIN @vmC b ON a.vm_id=b.vm_id WHERE b.vm_id IS NULL
	
	SET @CSTEP=350
	EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 		

    
	UPDATE @vdC SET old_vd_id=vd_id,vd_id='LATER'+LEFT(CONVERT(VARCHAR(38),NEWID()),35)

	UPDATE a SET vd_id=b.vd_id FROM @TBILL_BY_BILL_REF a
	JOIN  @vdC b ON a.vd_id=b.OLD_VD_ID

	SET @CSTEP=360
	EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 	
	
	DELETE FROM ACT_VM01106_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_VD01106_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_BILL_BY_BILL_REF_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_POSTACT_VOUCHER_LINK_UPLOAD WHERE SP_ID=@NSPID
	
	SET @CSTEP = 370
	
	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
    INSERT ACT_VM01106_UPLOAD	( ANGADIA_CODE, APPROVED, APPROVEDLEVELNO, ATTACHMENT_FILE, AUDITED_DT, 
    AUDITED_USER_CODE, BILL_AC_CODE, BILL_DT, BILL_ID, BILL_NO, BILL_TYPE, CANCELLED, CASH_VOUCHER, COMPANY_CODE, 
    CRTOTAL, DEPT_ID, DRTOTAL, EDT_USER_CODE, FIN_YEAR, FREEZE, LAST_UPDATE, LR_DT, LR_NO, MEMO, MRR_LIST, OP_ENTRY,
    QUANTITY, REF_NO, REF_VM_ID, REMINDER_DAYS, SALE_VOUCHER, SENT_FOR_RECON, SENT_TO_HO, SMS_SENT, SR_NO, 
    UPLOADED_TO_ACTIVSTREAM, USER_CODE, VM_ID, VM_NO, VOUCHER_CODE, VOUCHER_DT, VOUCHER_NO, SP_ID,TEMP_VM_ID,posted_vendor_bill_dt )  
    SELECT 	  ANGADIA_CODE,0 AS APPROVED,0 AS APPROVEDLEVELNO,'' AS ATTACHMENT_FILE,'' AS AUDITED_DT, 
    '' AS AUDITED_USER_CODE, BILL_AC_CODE,BILL_DT, ISNULL(BILL_ID,'') AS BILL_ID,ISNULL( BILL_NO,'') AS BILL_NO,
     BILL_TYPE,a.CANCELLED, 
    0 AS CASH_VOUCHER, '01' AS COMPANY_CODE, CRTOTAL, DEPT_ID, DRTOTAL,'' AS EDT_USER_CODE,
	('01'+dbo.FN_GETFINYEAR(voucher_dt)) FIN_YEAR, 
    0 AS FREEZE,GETDATE() AS  LAST_UPDATE,'' AS LR_DT,'' AS LR_NO,0 AS MEMO,'' AS MRR_LIST,0 AS  OP_ENTRY,
    QUANTITY, '' AS REF_NO,'' AS REF_VM_ID,0 AS  REMINDER_DAYS,1 AS SALE_VOUCHER,0 AS  SENT_FOR_RECON,0 AS SENT_TO_HO, 
    0 AS SMS_SENT,0 AS SR_NO,0 AS UPLOADED_TO_ACTIVSTREAM,'0000000' AS USER_CODE,
    VM_ID,'' AS VM_NO, VOUCHER_CODE, VOUCHER_DT,VOUCHER_NO, @NSPID AS SP_ID,'' AS TEMP_VM_ID,a.posted_vendor_bill_dt
    FROM @vmC A 
    
	
	SET @CSTEP = 380


	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_VD01106_UPLOAD	( AC_CODE, AUTOENTRY, CHK_RECON, COMPANY_CODE, CONTROL_AC, COST_CENTER_AC_CODE, COST_CENTER_DEPT_ID, 
	CREDIT_AMOUNT, DEBIT_AMOUNT,credit_amount_forex,debit_amount_forex, LAST_UPDATE, NARRATION, RECON_DT, SECONDARY_NARRATION, VAT_ENTRY, VD_ID, VM_ID, VS_AC_CODE, X_TYPE, SP_ID,TEMP_VD_ID )
	SELECT AC_CODE,0 AS AUTOENTRY,0 AS CHK_RECON,'01' AS COMPANY_CODE,0 AS CONTROL_AC,'0000000000' AS COST_CENTER_AC_CODE, 
	ISNULL(cost_center_Dept_id,@CDEPTID) AS COST_CENTER_DEPT_ID,CREDIT_AMOUNT, DEBIT_AMOUNT,CREDIT_AMOUNT_forex, DEBIT_AMOUNT_forex,GETDATE() AS LAST_UPDATE,ISNULL(NARRATION,'') AS NARRATION,'' AS RECON_DT, 
	'' AS SECONDARY_NARRATION, 0 AS VAT_ENTRY,VD_ID,A.VM_ID,ISNULL(VS_AC_CODE,'0000000000') AS VS_AC_CODE,
	X_TYPE, @NSPID AS SP_ID,'' AS TEMP_VD_ID 
	FROM @vdC A
	JOIN @vmC B ON A.VM_ID=B.VM_ID
    WHERE (DEBIT_AMOUNT<>0 OR CREDIT_AMOUNT<>0)

	
	SET @CSTEP = 390
	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_BILL_BY_BILL_REF_UPLOAD	( ADJ_REMARKS, AMOUNT, amount_forex, BB_ROW_ID, CR_DAYS, LAST_UPDATE, PAYMENT_ADJ_REF_NO, 
	REF_NO,  REMARKS, VD_ID, X_TYPE, SP_ID ,VM_ID,cd_percentage,cd_base_amount,ignore_cd_base_amount,
	due_dt,cd_posted,pur_mrr_id,org_bill_amount,org_bill_taxable_value,org_bill_amount_forex, org_bill_dt,org_bill_no,pur_tds_amount,PUR_VENDOR_BILL_DT)  

	SELECT '' AS ADJ_REMARKS,AMOUNT,amount_forex,'' AS BB_ROW_ID,a.CR_DAYS,GETDATE() AS LAST_UPDATE,'' AS PAYMENT_ADJ_REF_NO, 
	REF_NO, '' AS REMARKS,A.VD_ID,A.X_TYPE,@NSPID AS SP_ID,A.VM_ID,
	cd_percentage,a.cd_base_amount,ignore_cd_base_amount,due_dt,a.cd_posted,pur_mrr_id,
	(CASE WHEN a.cd_posted=1 THEN d.total_amount ELSE  a.amount  END) as org_bill_amount,org_bill_taxable_value,
	d.forex_total_amount,d.BILL_DT org_bill_dt,d.bill_no org_bill_no,
	a.pur_tds_amount,a.PUR_VENDOR_BILL_DT FROM @TBILL_BY_BILL_REF A
    JOIN @vdC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID
    JOIN @vmC C ON B.VM_ID=C.VM_ID
	LEFT JOIN pim01106 d ON d.mrr_id=a.pur_mrr_id
    WHERE A.AMOUNT<>0
	
	SET @CSTEP = 400
	
	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_POSTACT_VOUCHER_LINK_UPLOAD	( LAST_UPDATE, MEMO_ID, VM_ID, XN_TYPE, SP_ID )  
	SELECT 	LAST_UPDATE, MEMO_ID, A.VM_ID, A.XN_TYPE, @NSPID AS SP_ID 
	FROM @vlink A
    JOIN @vmC B ON A.VM_ID=B.VM_ID

	SELECT @nSpId as sp_id, CONVERT(BIT,1) AS CHK,CONVERT(BIT,1) optimized,A.*,(CASE WHEN B.VM_ID IS NOT NULL 
    THEN CONVERT(BIT,1) ELSE CONVERT(BIT,0) END) AS ERROR_FLAG,
    (CASE WHEN B.VM_ID IS NOT NULL THEN CONVERT(VARCHAR(500),'DEBIT & CREDIT TOTAL MISMATCH') ELSE CONVERT(VARCHAR(500),'') END) AS ERROR_DESC
    FROM @VMC A
    LEFT OUTER JOIN 
    (SELECT VM_ID,SUM(DEBIT_AMOUNT) AS DRTOTAL,SUM(CREDIT_AMOUNT) AS CRTOTAL
	 FROM @VDC GROUP BY VM_ID
		 HAVING SUM(DEBIT_AMOUNT)<>SUM(CREDIT_AMOUNT)) B ON A.VM_ID=B.VM_ID
	 ORDER BY BILL_DT,BILL_ID,VM_ORDER
	
	SET @CSTEP=410
	EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 	

    SELECT * FROM @VDC ORDER BY VM_ID
    
    SELECT * FROM #ERRORS
    
    SELECT * FROM @VLINK ORDER BY VM_ID

	SELECT B.AC_NAME,A.*,A.REF_NO AS BILL_NO,d.bill_no org_bill_no,d.bill_dt org_bill_dt,
	(CASE WHEN a.cd_posted=1 THEN d.total_amount ELSE  a.amount  END) AS org_bill_amount
	FROM @TBILL_BY_BILL_REF A
	JOIN @VDC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID
	JOIN @VLINK C ON B.VM_ID=C.VM_ID
	LEFT JOIN pim01106 d ON d.mrr_id=a.pur_mrr_id

	GOTO END_PROC
END TRY
BEGIN CATCH
	SET @CERRORMSG='ERROR IN PROCEDURE POSTACT_GST_PUR AT STEP#'+@CSTEP+' '+ERROR_MESSAGE()
END CATCH

END_PROC:

	IF @CERRORMSG<>''
		SELECT @CERRORMSG AS ERRMSG
END
--END OF PROCEDURE - POSTACT_GST_PUR