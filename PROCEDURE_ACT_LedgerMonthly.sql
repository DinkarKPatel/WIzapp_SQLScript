create PROCEDURE ACT_LEDGERMONTHLY 
(	
		@CACCODE VARCHAR(20) = '', 
		@CDEPTID VARCHAR(4), 
		@DOPENINGDT DATETIME, 
		@DCLOSINGDT DATETIME,
		@CFINYEAR VARCHAR(10), 
		@CCOMPANYCODE VARCHAR(2), 
		@NDIVFACTOR NUMERIC(14) = 1,
		@LHALF BIT = 0, 
		@LPROJECTED BIT = 0, 
		@LCLOSINGONLY BIT = 0, 
		@NCLOSINGOUT NUMERIC(14,2) = 0 OUTPUT
)
--WITH ENCRYPTION
AS
BEGIN
	-- DECLARING AND SETTING UP VARIABLES
	DECLARE @CTMPACCODE VARCHAR(20), 
			@NOPENING NUMERIC(14,2),
			@NCLOSING NUMERIC(14,2), 
			@NAVGTRAN NUMERIC(14,2)

	IF @NDIVFACTOR <= 0 
		SET @NDIVFACTOR = 1

	DECLARE @LEDGERC TABLE ( AC_CODE VARCHAR(20), MONTH_NAME VARCHAR(20), HALF VARCHAR(20), DEBIT NUMERIC(14,2), 
							 CREDIT NUMERIC(14,2), CLOSING NUMERIC(14,2), CLOSING_CR_DR CHAR(2), MONTH_NO INT, 
							 MONTH_SRNO INT, PROJECTED BIT )

	-- GETTING NAMES OF ALL MONTHS IN A FIN-YEAR
	DECLARE @MONTHC TABLE ( MONTH_NAME VARCHAR(20), HALF VARCHAR(20), MONTH_NO INT, MONTH_SRNO INT )
	DECLARE	@DTEMPDATE DATETIME, 
			@NCTR INT

	-- TEMP TABLE TO STORED THE LIST OF LOCATIONS CURRENTLY SELECTED
	-- JOIN THIS TABLE IN EACH QUERY TO GET THE RESULT FOR SINGLE, MULTIPLE OR ALL LOCATIONS
	DECLARE @LOCLISTC TABLE ( DEPT_ID CHAR(4) )
	
	IF @CDEPTID <> ''
		INSERT @LOCLISTC VALUES ( @CDEPTID )
	ELSE
	BEGIN
		IF EXISTS ( SELECT TOP 1 DEPT_ID FROM ACT_FILTER_LOC WHERE SP_ID = @@SPID )
			INSERT @LOCLISTC
			SELECT DEPT_ID FROM ACT_FILTER_LOC WHERE SP_ID = @@SPID
		ELSE
			INSERT @LOCLISTC
			SELECT DEPT_ID FROM LOCATION WHERE LOC_TYPE=1 AND DEPT_ID=MAJOR_DEPT_ID
	END
	
	SET @DTEMPDATE = '2001-04-01'
	SET @NCTR = 1

	WHILE @NCTR <= 12
	BEGIN
		IF @LHALF = 0
		BEGIN
			INSERT @MONTHC 
			SELECT DATENAME(MM, @DTEMPDATE ) AS MONTH_NAME, '' AS HALF, DATEPART(MM, @DTEMPDATE) AS MONTH_NO, @NCTR AS MONTH_SRNO
		END
		ELSE
		BEGIN
			INSERT @MONTHC 
			SELECT DATENAME(MM, @DTEMPDATE ) AS MONTH_NAME, '1ST HALF' AS HALF, DATEPART(MM, @DTEMPDATE) AS MONTH_NO, @NCTR AS MONTH_SRNO
			INSERT @MONTHC 
			SELECT DATENAME(MM, @DTEMPDATE ) AS MONTH_NAME, '2ND HALF' AS HALF, DATEPART(MM, @DTEMPDATE) AS MONTH_NO, @NCTR AS MONTH_SRNO
		END

		SET @DTEMPDATE = DATEADD( MM, 1, @DTEMPDATE) 

		SET @NCTR = @NCTR + 1
	END
	-- END OF DECLARING AND SETTING UP VARIABLES

	IF @CACCODE = ''		-- IN CASE THE SUPPLIED AC_CODE IS EMPTY THEN IT IS IN MULTI LEDGER MODE
	BEGIN
		DECLARE MULTILEDGER CURSOR FOR
		SELECT AC_CODE FROM LM01106 WHERE PRINT_LEDGER = 1
	END
	ELSE
	BEGIN
		DECLARE MULTILEDGER CURSOR FOR
		SELECT @CACCODE
	END

	OPEN MULTILEDGER
	FETCH NEXT FROM MULTILEDGER INTO @CTMPACCODE 
	WHILE @@FETCH_STATUS = 0
	BEGIN
		SELECT  @NOPENING = 0, 
				@NCLOSING = 0, 
				@NAVGTRAN = 0

		--*** TO GET OPENING BALANCE OF A GIVEN ACCOUNT
		SELECT @NOPENING = DBO.FN_ACT_OPENING( @CTMPACCODE, @CDEPTID, @DOPENINGDT, @CFINYEAR, @CCOMPANYCODE )

		-- INSERTING DEBIT AND CREDIT ENTERIES IN @LEDGERC TABLE 
		INSERT @LEDGERC (  AC_CODE, MONTH_NAME, HALF, MONTH_NO, MONTH_SRNO, DEBIT, CREDIT, CLOSING, CLOSING_CR_DR, PROJECTED )
		SELECT @CTMPACCODE AS AC_CODE, X.MONTH_NAME, X.HALF, X.MONTH_NO, X.MONTH_SRNO, ISNULL(Y.DEBIT,0) AS DEBIT, ISNULL(Y.CREDIT,0) AS CREDIT, 
			   ISNULL(Y.CLOSING,0) AS CLOSING, ISNULL(Y.CLOSING_CR_DR,'') AS CLOSING_CR_DR, 0 AS PROJECTED
		FROM @MONTHC X
		LEFT OUTER JOIN
		(
				SELECT DATENAME(MM, B.VOUCHER_DT) AS MONTH_NAME, 
				( CASE WHEN @LHALF=0 THEN SPACE(8) 
					   ELSE ( CASE WHEN DATENAME(DD, B.VOUCHER_DT)<16 THEN '1ST HALF' ELSE '2ND HALF' END ) 
				END ) AS HALF, 
				SUM(A.DEBIT_AMOUNT) AS DEBIT, 
				SUM(A.CREDIT_AMOUNT) AS CREDIT, 0 AS CLOSING, SPACE(2) AS CLOSING_CR_DR, DATEPART(MM, B.VOUCHER_DT) AS MONTH_NO
				FROM VD01106 A
				JOIN VM01106 B ON B.VM_ID = A.VM_ID
				JOIN @LOCLISTC LOCLIST ON B.location_code  = LOCLIST.DEPT_ID
				WHERE A.AC_CODE = @CTMPACCODE
				AND B.VOUCHER_DT BETWEEN @DOPENINGDT AND @DCLOSINGDT
				AND B.CANCELLED = 0 AND ISNULL(B.OP_ENTRY,0)=0  AND ISNULL(B.MEMO,0)=0 
				AND A.COMPANY_CODE = @CCOMPANYCODE 
				AND B.FIN_YEAR = @CFINYEAR
				-- AND B.DEPT_ID = ( CASE WHEN @CDEPTID <> '' THEN @CDEPTID ELSE B.DEPT_ID END )					-- IGNORE THIS LINE IF DEPTID IS NOT PROVIDED
				GROUP BY DATENAME(MM, B.VOUCHER_DT), DATEPART(MM, B.VOUCHER_DT),
				( CASE WHEN @LHALF=0 THEN SPACE(8) 
						ELSE ( CASE WHEN DATENAME(DD, B.VOUCHER_DT)<16 THEN '1ST HALF' ELSE '2ND HALF' END ) 
				END )
		) Y ON ( X.MONTH_NAME = Y.MONTH_NAME AND X.HALF = Y.HALF AND X.MONTH_NO = Y.MONTH_NO )
		ORDER BY X.MONTH_SRNO

		-- ANALYSING PROJECTED STATUS 
		IF @LPROJECTED = 1 
		BEGIN
			SELECT @NAVGTRAN = AVG(DEBIT - CREDIT) FROM @LEDGERC WHERE NOT ( DEBIT = 0 AND CREDIT = 0 )
			AND AC_CODE = @CTMPACCODE
			
			UPDATE @LEDGERC SET 
				DEBIT = (CASE WHEN @NAVGTRAN>0 THEN @NAVGTRAN ELSE 0 END ), 
				CREDIT = (CASE WHEN @NAVGTRAN<0 THEN ABS(@NAVGTRAN) ELSE 0 END ), 
				PROJECTED = 1
			WHERE DEBIT = 0 AND CREDIT = 0
			AND AC_CODE = @CTMPACCODE
		END

		-- UPDATING CLOSING BALANCE
		UPDATE @LEDGERC SET @NCLOSING = CLOSING = ( @NCLOSING + DEBIT - CREDIT )
		WHERE AC_CODE = @CTMPACCODE		

		UPDATE @LEDGERC SET CLOSING = ABS(CLOSING + @NOPENING), CLOSING_CR_DR = (CASE WHEN (CLOSING + @NOPENING)>0 THEN 'DR' ELSE 'CR' END )
		WHERE AC_CODE = @CTMPACCODE

		-- APPLYING DIVISION FACTOR (IF ANY)
		IF @NDIVFACTOR > 1
			UPDATE @LEDGERC SET DEBIT = ROUND( DEBIT/@NDIVFACTOR, 2 ), 
				CREDIT = ROUND( CREDIT/@NDIVFACTOR, 2 ),
				CLOSING = ROUND( CLOSING/@NDIVFACTOR, 2 )
			WHERE AC_CODE = @CTMPACCODE

		FETCH NEXT FROM MULTILEDGER INTO @CTMPACCODE 
	END						-- END OF MULTILEDGER SCOPE
	CLOSE MULTILEDGER
	DEALLOCATE MULTILEDGER

	-- PRODUCING OUTPUT
	IF @LCLOSINGONLY = 0 OR @CACCODE = ''
		SELECT A.*, B.AC_NAME, B.ADDRESS0, B.ADDRESS1, B.ADDRESS2, B.AREA_NAME, B.PINCODE, B.CITY, B.STATE
		FROM @LEDGERC A JOIN LMV01106 B ON A.AC_CODE = B.AC_CODE ORDER BY B.AC_NAME, A.MONTH_SRNO
	ELSE
		SELECT @NCLOSINGOUT = CLOSING * (CASE WHEN CLOSING_CR_DR='CR' THEN -1 ELSE 1 END) FROM @LEDGERC WHERE MONTH_NO = 3
END
