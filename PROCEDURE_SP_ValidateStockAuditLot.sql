CREATE PROCEDURE SP_VALIDATESTOCKAUDITLOT  
(  
 @CLOTNO VARCHAR(10) ,
 @CBINID VARCHAR(10) 
) 
--WITH ENCRYPTION
AS 
DECLARE @CREPID VARCHAR(20),
@CMEMOID VARCHAR(20)    

SELECT  @CREPID=  REP_ID,@CMEMOID= A.MEMO_ID 
FROM STMH01106   A  
JOIN STLM01106 B ON A.MEMO_ID = B.MEMO_ID  
WHERE B.LOT_NO =@CLOTNO   
  
  
INSERT PMT01106 ( LAST_UPDATE,  REP_ID, PRODUCT_CODE, QUANTITY_IN_STOCK, DEPT_ID )  
SELECT GETDATE() AS LAST_UPDATE, @CREPID AS REP_ID, A.PRODUCT_CODE,0 AS  QUANTITY_IN_STOCK, A.DEPT_ID   
FROM STLD01106 A   
LEFT OUTER JOIN PMT01106 B ON A.PRODUCT_CODE = B.PRODUCT_CODE   AND A.DEPT_ID = B.DEPT_ID AND B.BIN_ID= @CBINID 
WHERE A.LOT_NO =@CLOTNO AND B.PRODUCT_CODE  IS NULL  
  
  
--UPDATE PMT01106 SET   
--  PHYSICAL_QTY = (CASE WHEN ( ISNULL(PHYSICAL_QTY,0) + B.QUANTITY ) > QUANTITY_IN_STOCK    
--       THEN QUANTITY_IN_STOCK ELSE ( ISNULL(PHYSICAL_QTY,0) + B.QUANTITY ) END ),  
--  EXCESS_QTY =   (CASE WHEN ( (B.QUANTITY + ISNULL(PHYSICAL_QTY,0) + ISNULL(EXCESS_QTY,0))-QUANTITY_IN_STOCK) > 0    
--       THEN (B.QUANTITY + ISNULL(PHYSICAL_QTY,0) + ISNULL(EXCESS_QTY,0))-QUANTITY_IN_STOCK ELSE 0 END )    
--FROM   
--(   
-- SELECT A.PRODUCT_CODE,A.DEPT_ID, SUM(A.QUANTITY) AS QUANTITY   
-- FROM STLD01106 A (NOLOCK)  
-- JOIN STLM01106 B (NOLOCK) ON A.LOT_NO= B.LOT_NO AND B.MEMO_ID= @CMEMOID
-- WHERE A.LOT_NO =@CLOTNO  
-- GROUP BY A.PRODUCT_CODE,A.DEPT_ID   
--) B   
--WHERE B.PRODUCT_CODE = PMT01106.PRODUCT_CODE  AND B.DEPT_ID = PMT01106.DEPT_ID AND PMT01106.BIN_ID = @CBINID   
--AND PMT01106.REP_ID =(
--SELECT REP_ID FROM STMH01106   A  
--JOIN STLM01106 B ON A.MEMO_ID = B.MEMO_ID   
--WHERE B.LOT_NO =@CLOTNO)  
 
  
  
-- SELECT X.PRODUCT_CODE, X.PHYSICAL_QTY, X.EXCESS_QTY, Y.SCAN_QTY  
-- FROM PMT01106 X  
-- JOIN   
-- (  
--	  SELECT A.PRODUCT_CODE, A.DEPT_ID, SUM(A.QUANTITY) AS SCAN_QTY  
--	  FROM STLD01106 A  
--	  JOIN STLM01106 C (NOLOCK) ON A.LOT_NO= C.LOT_NO AND C.MEMO_ID= @CMEMOID
--  JOIN   
--  (  
--	   SELECT DISTINCT PRODUCT_CODE   
--	   FROM STLD01106  A
--	   JOIN STLM01106 B (NOLOCK) ON A.LOT_NO= B.LOT_NO AND B.MEMO_ID= @CMEMOID
--	   WHERE A.LOT_NO = @CLOTNO  
--  ) B ON A.PRODUCT_CODE = B.PRODUCT_CODE  
--  GROUP BY A.PRODUCT_CODE, A.DEPT_ID  
-- ) Y  
-- ON  X.PRODUCT_CODE = Y.PRODUCT_CODE   
-- AND X.DEPT_ID = Y.DEPT_ID AND X.BIN_ID = @CBINID 
-- WHERE ((X.PHYSICAL_QTY + X.EXCESS_QTY) <> Y.SCAN_QTY)
