CREATE PROCEDURE SAVETRAN_PPC_USER_MODULE
(
	@NUPDATEMODE		NUMERIC(1,0),
	@NSPID				INT,
	@ROLE_ID			VARCHAR(7)=''
	
)
--WITH ENCRYPTION
AS
BEGIN
	DECLARE @CTEMPDBNAME			VARCHAR(100),
			@CMASTERTABLENAME		VARCHAR(100),
			@CDETAILTABLENAME		VARCHAR(100),
			@CTEMPMASTERTABLENAME	VARCHAR(100),
			@CTEMPDETAILTABLENAME	VARCHAR(100),
			@CTEMPMASTERTABLE		VARCHAR(100),
			@CTEMPDETAILTABLE		VARCHAR(100),
			@CERRORMSG				VARCHAR(500),
			@LDONOTUPDATESTOCK		BIT,
			@CKEYFIELD1				VARCHAR(50),
			@CKEYFIELDVAL1			VARCHAR(50),
			@CMEMONO				VARCHAR(20),
			@NMEMONOLEN				NUMERIC(20,0),
			@CMEMONOVAL				VARCHAR(50),
			@CMEMODEPTID			VARCHAR(2),
			@CLOCATIONID			VARCHAR(2),
			@CHODEPTID				VARCHAR(2),
			@CCMD					NVARCHAR(4000),
			@CCMDOUTPUT				NVARCHAR(4000),
			@NSTEP					INT,
			@LENABLETEMPDATABASE	BIT,@BNEGSTOCKFOUND BIT,
			@BPURTHROUGHIMPORT	BIT,@CMSG VARCHAR(200)
			
			DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))

	BEGIN TRY
		
		BEGIN TRANSACTION
			SET @NSTEP = 10	-- SETTTING UP ENVIRONMENT

			SELECT @LENABLETEMPDATABASE = CAST([VALUE] AS BIT) FROM CONFIG WHERE CONFIG_OPTION = 'ENABLE_TEMP_DATABASE'
			IF @LENABLETEMPDATABASE IS NULL
				SET @LENABLETEMPDATABASE = 0

			IF @LENABLETEMPDATABASE = 1
				SET @CTEMPDBNAME = DB_NAME() + '_TEMP.DBO.'
			ELSE
				SET @CTEMPDBNAME = ''

			SET @CMASTERTABLENAME	= 'USER_ROLE_MST'
			SET @CDETAILTABLENAME	= 'USER_ROLE_DET'
			
			SET @CTEMPMASTERTABLENAME	= 'MST_USER_ROLE_MST_UPLOAD'
			SET @CTEMPDETAILTABLENAME	= 'MST_USER_ROLE_DET_UPLOAD'
			
			SET @CTEMPMASTERTABLE	= @CTEMPDBNAME + @CTEMPMASTERTABLENAME
			SET @CTEMPDETAILTABLE	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME
			
			SET @CERRORMSG			= ''
			SET @CKEYFIELD1			= 'ROLE_ID'
			
		    SET @NSTEP = 20	
		    SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE + ' SET ROW_ID =  CONVERT(VARCHAR(40), NEWID())
						  WHERE   SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
		    PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD


			 DECLARE @FILTER VARCHAR(MAX)
	         SET @FILTER=' B.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
		     SET @NSTEP = 150
		     
			EXEC UPDATEMASTERXN 
				  @CSOURCEDB	= @CTEMPDBNAME
				, @CSOURCETABLE = @CTEMPMASTERTABLENAME
				, @CDESTDB		= ''
				, @CDESTTABLE	= @CMASTERTABLENAME
				, @CKEYFIELD1	= @CKEYFIELD1
				, @BALWAYSUPDATE = 1
				,@CFILTERCONDITION=@FILTER
			
			SET @NSTEP = 140		-- UPDATING TRANSACTION TABLE
             
             
		
			DELETE A FROM USER_ROLE_DET A
			JOIN MST_USER_ROLE_DET_UPLOAD B ON A.ROLE_ID =B.ROLE_ID AND A.DISPLAY_FORM_NAME =B.DISPLAY_FORM_NAME
			AND A.GROUP_NAME =B.GROUP_NAME
			WHERE B.SP_ID =RTRIM(LTRIM(STR(@NSPID )))
            
			
			-- INSERTING/UPDATING THE ENTRIES IN USER ROLE DET TABLE FROM TEMPTABLE
			SET @NSTEP = 170		-- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES

			EXEC UPDATEMASTERXN 
				  @CSOURCEDB	= @CTEMPDBNAME
				, @CSOURCETABLE = @CTEMPDETAILTABLENAME
				, @CDESTDB		= ''
				, @CDESTTABLE	= @CDETAILTABLENAME
				, @CKEYFIELD1	= @CKEYFIELD1
				, @CKEYFIELD2	= 'DISPLAY_FORM_NAME'
				, @BALWAYSUPDATE = 1
				,@CFILTERCONDITION=@FILTER
		
	
		
		END TRY
		BEGIN CATCH
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		GOTO END_PROC
		END CATCH
	
END_PROC:

	IF @@TRANCOUNT>0
	BEGIN
		
		IF ISNULL(@CERRORMSG,'')='' 
		BEGIN
			COMMIT TRANSACTION
			 SET @CCMD='DELETE FROM ' +@CTEMPMASTERTABLE + ' WHERE SP_ID = '+CONVERT(VARCHAR(5),@NSPID)
			 PRINT @CCMD
			 EXEC SP_EXECUTESQL @CCMD
			 SET @CCMD='DELETE FROM ' +@CTEMPDETAILTABLENAME + ' WHERE SP_ID = '+CONVERT(VARCHAR(5),@NSPID)
			 PRINT @CCMD
			 EXEC SP_EXECUTESQL @CCMD
			
			
		END
		ELSE
			ROLLBACK
	END
	
		INSERT @OUTPUT ( ERRMSG, MEMO_ID)
		VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )

		SELECT * FROM @OUTPUT	
	
END
