
create PROCEDURE SP3S_UPDATEPMT_HBD
@cErrormsg VARCHAR(MAX) OUTPUT
AS
BEGIN


BEGIN TRY
	  
	  Declare @cStep varchar(100)

	  set @cStep='10'

	  SELECT A.DEPT_ID ,A.BIN_ID ,A.PRODUCT_CODE ,
	         sum(CASE WHEN XN_TYPE IN('PSHBD','PUR','PSJWR','CHI') THEN 1 ELSE -1 END*XN_QTY ) as cbsQty
			 into #PMTCBS
	  FROM VW_XNSREPS_HBD A (nolock)
	  Group by A.DEPT_ID ,A.BIN_ID ,A.PRODUCT_CODE
	
	set @cStep='20'

	UPDATE A SET QUANTITY_IN_STOCK = ISNULL(C.CBSQTY,0),LAST_UPDATE=GETDATE()  FROM PMT01106 A WITH (ROWLOCK)
	LEFT JOIN #PMTCBS C ON A.DEPT_ID=C.DEPT_ID AND A.BIN_ID =C.BIN_ID AND A.PRODUCT_CODE =C.PRODUCT_CODE 
	WHERE A.QUANTITY_IN_STOCK <>ISNULL(C.CBSQTY,0) AND A.BIN_ID='999'

	set @cStep='30'

	INSERT PMT01106	( BIN_ID, DEPT_ID, LAST_UPDATE, PRODUCT_CODE, QUANTITY_IN_STOCK  )  
	SELECT 	 A. BIN_ID,A. DEPT_ID,GETDATE() LAST_UPDATE,A. PRODUCT_CODE,
				A.CBSQTY QUANTITY_IN_STOCK 				
	 FROM #PMTCBS A
	 JOIN LOCATION L (NOLOCK) ON A.DEPT_ID =L.DEPT_ID 
	 LEFT JOIN PMT01106 B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE AND A.DEPT_ID =B.DEPT_ID AND A.BIN_ID=B.BIN_ID   
	 WHERE B.PRODUCT_CODE IS NULL and a.BIN_ID ='999'

	 set @cStep='40'

	END TRY
	BEGIN CATCH
		SET @CERRORMSG = 'Error in Procedure SP3S_UPDATEPMT_HBD at Step#'+@cStep+ ' ' + ERROR_MESSAGE()
		GOTO END_PROC
	END CATCH
	
END_PROC:
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')='' 
		BEGIN
			COMMIT TRANSACTION
		END	
		ELSE
			ROLLBACK
	END

END
