CREATE PROCEDURE SP3S_SYNCH_UPLOADDATA_CNC_OPT
(
    @CSPID VARCHAR(50)
   ,@CERRMSG VARCHAR(1000) OUTPUT
)
--WITH ENCRYPTION
AS
SET NOCOUNT ON
BEGIN

DECLARE @CSTEP VARCHAR(100),@DTSQL NVARCHAR(MAX)
	   ,@CTABLENAME VARCHAR(200),@CKEYFIELD VARCHAR(200),@CTMP_TABLENAME VARCHAR(200),@LINSERTONLY VARCHAR(1)
	   ,@CFILTERCONDITION VARCHAR(200),@LUPDATEONLY VARCHAR(1),@BALWAYSUPDATE VARCHAR(1),@CCURDEPTID VARCHAR(5),
	    @CTEMPMASTERTABLE VARCHAR(200),@CTEMPDETAILTABLE VARCHAR(200),@NMEMONOLEN INT,@CFINYEAR VARCHAR(5),@CMEMOPREFIX VARCHAR(10)
	   ,@CSOURCEDB VARCHAR(200),@CMERGEDB VARCHAR(200)
	   ,@BMSTINSERTONLY BIT,@BSERIESMISMATCHFOUND BIT,@CMEMOID VARCHAR(40),@CPREVMEMONO VARCHAR(20)
	   ,@NPREVMEMONO NUMERIC(5,0),@NLENVALUE INT,@CPREVMEMONOSEARCH VARCHAR(20),@CMEMOIDSEARCH VARCHAR(40)
	   ,@CRETPRODUCTCODE VARCHAR(50),@NVERSIONNO INT,@BADDMODE BIT,@CTEMPDETAILTABLE1 VARCHAR(200)
	   ,@nUpdateMode numeric(1,0),@bcancelled bit
	

BEGIN TRY
	
	
	SET @CSTEP=10

	SELECT @CSOURCEDB='',@CMERGEDB='',@BMSTINSERTONLY=1,@BSERIESMISMATCHFOUND=0
	
	SET @CSTEP=15
    	
    SELECT TOP 1 @CCURDEPTID=VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'

	SELECT @CTEMPMASTERTABLE=@CSOURCEDB+'CNC_ICM01106_UPLOAD',
		   @CTEMPDETAILTABLE=@CSOURCEDB+'CNC_ICD01106_UPLOAD',
		   @CTEMPDETAILTABLE1=@CSOURCEDB+'CNC_PMT01106_UPLOAD'
	
	
LBLSTART:


	BEGIN TRANSACTION 	     

    
    SELECT @CMEMOID='',@NVERSIONNO=0

	DECLARE @DFREEZINGDATE DATETIME	
	EXEC SP3S_GETDATA_FREEZING_DATE 'CNC',@DFREEZINGDATE OUTPUT
	
    SELECT TOP 1 @CMEMOID = B.CNC_MEMO_ID ,@bcancelled=cancelled
    FROM  CNC_ICM01106_UPLOAD B (NOLOCK)
    WHERE SP_ID=@CSPID AND B.cnc_memo_dt>=@DFREEZINGDATE

    IF ISNULL(@CMEMOID,'')=''
		GOTO EXIT_PROC
		
    SET @CFILTERCONDITION = ' B.SP_ID='''+LTRIM(RTRIM((@CSPID)))+''''
	
	
	SET @CMEMOPREFIX=LEFT(RIGHT(@CMEMOID,@NMEMONOLEN),4)
	
	SET @NLENVALUE=@NMEMONOLEN-LEN(@CMEMOPREFIX)
	
	SET @NPREVMEMONO=CONVERT(NUMERIC(5,0),RIGHT(@CMEMOID,@NMEMONOLEN-LEN(@CMEMOPREFIX)))
	
	IF @NPREVMEMONO>1
	BEGIN
		SET @NPREVMEMONO=@NPREVMEMONO-1
		
		SELECT @CFINYEAR=FIN_YEAR FROM CNC_ICM01106_UPLOAD (NOLOCK) WHERE CNC_MEMO_ID=@CMEMOID
		
		SET @CPREVMEMONO=@CMEMOPREFIX+REPLICATE('0',@NLENVALUE-LEN(LTRIM(RTRIM(STR(@NPREVMEMONO)))))+LTRIM(RTRIM(STR(@NPREVMEMONO)))
		
		SET @CPREVMEMONOSEARCH=''
		SELECT TOP 1 @CPREVMEMONOSEARCH=CNC_MEMO_NO FROM ICM01106(NOLOCK) WHERE CNC_MEMO_NO=@CPREVMEMONO AND FIN_YEAR=@CFINYEAR
		
		IF ISNULL(@CPREVMEMONOSEARCH,'')=''
		BEGIN
			SET @CERRMSG='PREVIOUS MEMO NO. :'+@CPREVMEMONO+' NOT FOUND...CANNOT MERGE'
			SET @BSERIESMISMATCHFOUND=1
			GOTO EXIT_PROC
		END	
	END
	

	SET @CSTEP=110
	SET @CMEMOIDSEARCH=''
	SELECT TOP 1 @CMEMOIDSEARCH=A.CNC_MEMO_ID FROM ICM01106 A (NOLOCK) WHERE A.CNC_MEMO_ID=@CMEMOID
	
	IF ISNULL(@CMEMOIDSEARCH,'')<>''
		SET @BADDMODE=0
	ELSE
		SET @BADDMODE=1

	
LBLMERGE:
	---DELETING EXISTING RECORD IF BILL COMES AGAIN FOR MERGING
	
	--SELECT @CTEMPMASTERTABLE,@CFILTERCONDITION
	IF @BADDMODE=0
		PRINT 'ADDMODE:N'
	ELSE
		PRINT 'ADDMODE:Y'	
	

	SET @nUpdateMode=(CASE WHEN @BADDMODE=1 THEN 1 WHEN @bCancelled=1 THEN 3 ELSE 2 END)

	EXEC SP3S_upd_qty_lastupdate
	@nUpdateMode=@NUPDATEMODE,
	@cXnType='cnc',
	@nSpId=@CSPID,
	@cMasterTable='icm01106',
	@cMemoIdCol='cnc_memo_id',
	@cXnDtCol='cnc_memo_dt',
	@cMemoId=@CMEMOIDSEARCH,
	@bCalledfromMerging=1,
	@CERRORMSG=@CERRMSG OUTPUT

	IF ISNULL(@cErrmsg,'')<>''
		GOTO EXIT_PROC
	IF @BADDMODE=0
	BEGIN	

				
		SET @CSTEP=115
		SET @DTSQL=N'DELETE A FROM ICD01106 A JOIN '+@CTEMPMASTERTABLE+' B (NOLOCK) ON A.CNC_MEMO_ID=B.CNC_MEMO_ID
					 LEFT OUTER JOIN 
					 (SELECT ROW_ID FROM '+@CTEMPDETAILTABLE+' B WHERE '+@CFILTERCONDITION+') C ON A.ROW_ID = C.ROW_ID 
					 WHERE C.ROW_ID IS NULL AND '+@CFILTERCONDITION
		PRINT @DTSQL
		EXEC SP_EXECUTESQL @DTSQL
	END
	
	---UPDATING TRANSACTION TABLES
	SET @CSTEP=250
	SET @CTABLENAME='ICM01106'
	SET @CTMP_TABLENAME='CNC_ICM01106_UPLOAD'
	SET @CKEYFIELD='CNC_MEMO_ID'
	
	SET @DTSQL = N'UPDATE '+@CSOURCEDB+@CTMP_TABLENAME+' WITH (ROWLOCK)  SET CNC_MEMO_DT = CONVERT(DATETIME,CONVERT(VARCHAR(10),CNC_MEMO_DT,120))
	WHERE SP_ID='''+LTRIM(RTRIM((@CSPID)))+''' '
	PRINT @DTSQL
	EXEC SP_EXECUTESQL @DTSQL
	
	SET @CSTEP=260
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
							  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1 
							  
	SET @CTABLENAME='ICD01106'
	SET @CTMP_TABLENAME='CNC_ICD01106_UPLOAD'
	SET @CKEYFIELD='ROW_ID'
	
	PRINT 'MERGE ICD01106 FOR MEMO ID :'+@CMEMOID 
	SET @CSTEP=280
	
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
							  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1 


	SET @CSTEP=290 

	EXEC SP3S_MERGE_LOCPMT  
	@cTempTable='CNC_PMT01106_UPLOAD',  
	@cMemoIdCol='SP_ID',  
	@cMemoId =@CSPID
	  

	IF ISNULL(@cErrmsg,'')=''
	BEGIN
		SET @CSTEP=295
		EXEC SP_CHKXNSAVELOG 'CNCMERGE',@CSTEP,0,@CMEMOID,'',1

		EXEC SP3S_VALIDATE_DATAMERGED_SINGLECHANNEL
		@cMasterTable='icm01106',
		@cDetTable='icd01106',
		@cMemoIdCol='cnc_memo_id',
		@cMemoId=@cMemoId,
		@cUploadTable='cnc_icm01106_upload',
		@nSpId=@CSpId,
		@cErrormsg=@CERRMSG OUTPUT

		IF ISNULL(@cErrmsg,'')=''
			GOTO EXIT_PROC
    END    
  
		SET @CSTEP=340
	    		
		DELETE A FROM CNC_ICM01106_UPLOAD A WHERE A.SP_ID=@CSPID
		DELETE A FROM CNC_ICD01106_UPLOAD A WHERE A.SP_ID=@CSPID
		DELETE A FROM CNC_PMT01106_UPLOAD A WHERE A.SP_ID=@CSPID
	
	   IF EXISTS (SELECT TOP 1 'U' FROM icm01106 (NOLOCK) WHERE CNC_MEMO_ID=@CMEMOID AND cnc_type=2)
		BEGIN 
		     EXEC SP3S_UPD_SKUXFPNEW 'CNC',@CMEMOID,0

		END

END TRY
BEGIN CATCH
	SET @CERRMSG='P:SP_SYNCH_MIRRORDATA_CNC_SINGLE, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO EXIT_PROC
END CATCH

EXIT_PROC:

	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRMSG,'')='' AND @BSERIESMISMATCHFOUND<>1
			COMMIT
		ELSE
			ROLLBACK
    END
	
END	
---END OF PROCEDURE - SP_SYNCH_MIRRORDATA_CNC_SINGLE
