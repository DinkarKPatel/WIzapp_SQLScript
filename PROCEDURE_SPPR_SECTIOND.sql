CREATE PROCEDURE [DBO].[SPPR_SECTIOND]     
(    
 @NMODE        INT, --(1) - VIEW FILTER DATA (2) - VIEW SUB_SECTION_CODE WISE    
 @SUB_SECTION_CODE   VARCHAR(7)='',    
 @SUB_SECTION_NAME   VARCHAR(300)='',    
 @SECTION_CODE     VARCHAR(7)='',    
 @MFG_CATEGORY    VARCHAR(10)='',    
 @EXCISABLE      VARCHAR(5)='',    
 @INACTIVE       VARCHAR(5)='',    
 @ERRMSG_OUT      VARCHAR(MAX) OUT    
)    
AS    
BEGIN    
 DECLARE @CSTEP INT, @CCMD NVARCHAR(MAX)    
     
 BEGIN TRY    
  SET @ERRMSG_OUT = ''    
      
  SET @CSTEP = 10    
  IF (@NMODE=1)    
  BEGIN    
   SET @CCMD=N'SELECT SUB_SECTION_CODE, ALIAS, SUB_SECTION_NAME, SECTION_CODE, SECTION_NAME, MFG_CATEGORY, EXCISABLE, REMARKS, INACTIVE FROM (    
         SELECT SD.SUB_SECTION_CODE, SD.ALIAS, SD.SUB_SECTION_NAME, SD.SECTION_CODE, SM.SECTION_NAME,    
         CASE WHEN ISNULL(SD.MFG_CATEGORY, 0) = 1 THEN ''RAW'' WHEN ISNULL(SD.MFG_CATEGORY, 0) = 2 THEN ''FINISHED'' ELSE '''' END AS MFG_CATEGORY,     
         CASE WHEN ISNULL(SD.EXCISABLE, 0) = 0 THEN ''NO'' ELSE ''YES'' END AS EXCISABLE, SD.REMARKS,     
         CASE WHEN ISNULL(SD.INACTIVE, 0) = 0 THEN ''NO'' ELSE ''YES'' END AS INACTIVE    
         FROM SECTIOND SD INNER JOIN SECTIONM SM ON SD.SECTION_CODE = SM.SECTION_CODE    
         WHERE ISNULL(SM.INACTIVE, 0) = 0 ) AS SS_SECTIOND    
         WHERE SUB_SECTION_NAME LIKE ''%' + @SUB_SECTION_NAME + '%''    
         AND SECTION_CODE LIKE ''%' + @SECTION_CODE + '%''     
         AND MFG_CATEGORY LIKE ''%' + @MFG_CATEGORY + '%''     
         AND EXCISABLE LIKE ''%' + @EXCISABLE + '%''     
         AND INACTIVE LIKE ''%' + @INACTIVE + '%''    
         ORDER BY SUB_SECTION_CODE DESC '    
   PRINT @CCMD    
   EXEC SP_EXECUTESQL @CCMD    
  END    
      
  SET @CSTEP = 20    
  IF (@NMODE=2)    
  BEGIN    
   SET @CCMD=N'SELECT SUB_SECTION_CODE, ALIAS, SUB_SECTION_NAME, SECTION_CODE, SECTION_NAME, MFG_CATEGORY, EXCISABLE, REMARKS, INACTIVE FROM (    
         SELECT SD.SUB_SECTION_CODE, SD.ALIAS, SD.SUB_SECTION_NAME, SD.SECTION_CODE, SM.SECTION_NAME,    
         CASE WHEN ISNULL(SD.MFG_CATEGORY, 0) = 1 THEN ''RAW'' WHEN ISNULL(SD.MFG_CATEGORY, 0) = 2 THEN ''FINISHED'' ELSE '''' END AS MFG_CATEGORY,     
         CASE WHEN ISNULL(SD.EXCISABLE, 0) = 0 THEN ''NO'' ELSE ''YES'' END AS EXCISABLE, SD.REMARKS,     
         CASE WHEN ISNULL(SD.INACTIVE, 0) = 0 THEN ''NO'' ELSE ''YES'' END AS INACTIVE    
         FROM SECTIOND SD INNER JOIN SECTIONM SM ON SD.SECTION_CODE = SM.SECTION_CODE) AS SS_SECTIOND    
         WHERE SUB_SECTION_CODE = ''' + @SUB_SECTION_CODE + ''' '    
   PRINT @CCMD    
   EXEC SP_EXECUTESQL @CCMD    
  END    
      
 END TRY      
 BEGIN CATCH      
  SET @ERRMSG_OUT='ERROR: [P]: SPPR_SECTIOND, [STEP]: '+CAST(@CSTEP AS VARCHAR(5))+', [MESSAGE]: ' + ERROR_MESSAGE()    
  PRINT @ERRMSG_OUT    
      
  GOTO END_PROC      
 END CATCH       
    
 END_PROC:      
  IF  ISNULL(@ERRMSG_OUT,'')=''     
   SET @ERRMSG_OUT = ''    
END
