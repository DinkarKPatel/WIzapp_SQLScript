CREATE PROCEDURE SP3S_EOSS_DISCOUNT_CONFIGBASED
(
 @CCMDPRODUCTCODE VARCHAR(100),
 @NXNQTY NUMERIC(10,3)
)
AS
BEGIN 
    DECLARE @CERRORMSG VARCHAR(100),@NSTEP NUMERIC(5,0),@NMRP NUMERIC(10,2),@CARTICLE_CODE VARCHAR(100),
            @CSCHEMEDETROWID VARCHAR(100),@DISC_FIGURE NUMERIC(10,2),@DISC_METHOD INT,@NNET NUMERIC(14,2),
            @NDISCPCT NUMERIC(7,3),@NDISC NUMERIC(10,2)
    SET @CERRORMSG=''
    BEGIN TRY    
    
    IF NOT EXISTS (SELECT TOP 1 'U' FROM CONFIG WHERE CONFIG_OPTION ='PICK_EOSS_DISC_ARTICLE' AND VALUE =1)
    BEGIN
        
        SET @CERRORMSG='EOSS_DISCOUNT CONFIGURATION NOT DEFINE PLEASE CHECK'
        GOTO END_PROC
    END
    
    SELECT @CARTICLE_CODE=A.ARTICLE_CODE,
           @NMRP=MRP 
    FROM SKU A
    WHERE A.PRODUCT_CODE =@CCMDPRODUCTCODE
    

     SELECT  TOP 1 @DISC_FIGURE=C.DISCOUNT_FIGURE,@DISC_METHOD=C.DISCOUNT_MODE
     FROM SCHEME_SETUP_MST A
	 JOIN SCHEME_SETUP_DET B ON A.MEMO_NO =B.MEMO_NO 
	 JOIN SCHEME_SETUP_SLSART C ON B.ROW_ID=C.SCHEME_SETUP_DET_ROW_ID
	 WHERE A.INACTIVE =0
	 AND C.ARTICLE_CODE =@CARTICLE_CODE
	 ORDER BY MEMO_PROCESSING_ORDER,B.MEMO_NO DESC,PROCESSING_ORDER
	 
	 
	
	
	 SELECT @NNET = (CASE WHEN ISNULL(@DISC_METHOD,0)=1 THEN @NMRP-(@NMRP*@DISC_FIGURE/100)
									 WHEN ISNULL(@DISC_METHOD,0)=2 THEN 
									 (CASE WHEN ISNULL(@DISC_FIGURE,0)>@NMRP THEN @NMRP ELSE ISNULL(@DISC_FIGURE,0) END)
									 ELSE (CASE WHEN ISNULL(@DISC_FIGURE,0)>@NMRP THEN 0 ELSE @NMRP-ISNULL(@DISC_FIGURE,0) END) END)*@NXNQTY

				SET @NDISC = (@NMRP*@NXNQTY)-@NNET
				
		
								
				IF @DISC_METHOD=1
					SET @NDISCPCT=@DISC_FIGURE
				ELSE
				   SET @NDISCPCT = CASE WHEN (ISNULL(@NMRP,0)*ABS(ISNULL(@NXNQTY,0)))>0 THEN (@NDISC/(@NMRP*@NXNQTY))*100 ELSE 0 END
					--SET @NDISCPCT = (@NDISC/(@NMRP*@NXNQTY))*100
					
					
            
               SELECT @CCMDPRODUCTCODE AS PRODUCT_CODE,
                      @NMRP AS MRP,
                      @NXNQTY AS QUANTITY,
                      @NDISCPCT AS DISCOUNT_PERCENTAGE,
                      @NDISC AS DISCOUNT_AMOUNT,
                      @NNET AS NET,
                      0 AS MANUAL_DISCOUNT
				
    
    END TRY
	     BEGIN CATCH
				 SET @CERRORMSG = 'P:SP3S_EOSS_DISCOUNT_CONFIGBASED, SPID :'+LTRIM(RTRIM(STR(@NSTEP)))+' , MESSAGE: '+ ERROR_MESSAGE()    
				 GOTO END_PROC
	     END CATCH

END_PROC:
		
	
		
	    IF @@TRANCOUNT > 0 
	    BEGIN
			IF ISNULL(@CERRORMSG,'') = ''
			  COMMIT
			ELSE		
				ROLLBACK
	    END
	    
	    SELECT @CERRORMSG AS ERRMSG
		

END
