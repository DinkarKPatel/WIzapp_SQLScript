CREATE PROCEDURE RESTOREDATABASE
(
	@RESTORE_DATABASENAME VARCHAR(500) ,
    @BACKUP_DATABASENAME VARCHAR(500)
)
--WITH ENCRYPTION
AS
BEGIN
	DECLARE      
    @BACKUPFILE NVARCHAR(260),
    @RESTORE_DATAFILE NVARCHAR(260) ,
    @RESTORE_LOGFILE NVARCHAR(260) ,
    @BACKUP_DATAFILE NVARCHAR(260) ,
    @BACKUP_LOGFILE NVARCHAR(260) ,
    @TMP NVARCHAR(MAX),
    @PHYSICAL_DEVICE_NAME VARCHAR(1000),
    @BACKUP_SET_ID_FULL INT;
    
    DECLARE @FILELIST TABLE
    (
		LOGICALNAME NVARCHAR(128) NOT NULL,
		PHYSICALNAME NVARCHAR(260) NOT NULL,
		TYPE CHAR(1) NOT NULL,
		FILEGROUPNAME NVARCHAR(120) NULL,
		SIZE NUMERIC(20,0) NOT NULL,
		MAXSIZE NUMERIC(20,0) NOT NULL,
		FILEID BIGINT NULL,
		CREATELSN NUMERIC(25,0) NULL,
		DROPLSN NUMERIC(25,0) NULL,
		UNIQUEID UNIQUEIDENTIFIER NULL,
		READONLYLSN NUMERIC(25,0) NULL ,
		READWRITELSN NUMERIC(25,0) NULL,
		BACKUPSIZEINBYTES BIGINT NULL,
		SOURCEBLOCKSIZE INT NULL,
		FILEGROUPID INT NULL,
		LOGGROUPGUID UNIQUEIDENTIFIER NULL,
		DIFFERENTIALBASELSN NUMERIC(25,0)NULL,
		DIFFERENTIALBASEGUID UNIQUEIDENTIFIER NULL,
		ISREADONLY BIT NULL,
		ISPRESENT BIT NULL,
		TDETHUMBPRINT VARBINARY(32) NULL
	);

	DECLARE @TRANBACKUPLIST TABLE
	(
		ID INT IDENTITY(1,1) NOT NULL,
		PHYSICALNAME NVARCHAR(260) NOT NULL
	);	

	---GETTING MDF AND LDF FILENAMES OF THE DATABASE ON WHICH BACKUP WILL GET RESTORED
	SELECT 
		@RESTORE_DATAFILE=F.FILENAME
	FROM MASTER..SYSALTFILES F
		INNER JOIN MASTER..SYSDATABASES D
		ON F.DBID = D.DBID
	WHERE D.NAME = @RESTORE_DATABASENAME
	AND F.FILEID=1

	SELECT 
		@RESTORE_LOGFILE=F.FILENAME
		FROM MASTER..SYSALTFILES F
		INNER JOIN MASTER..SYSDATABASES D
		ON F.DBID = D.DBID
	WHERE D.NAME = @RESTORE_DATABASENAME
	AND F.FILEID=2

	-- SETTING DATABASE IN SINGLE USER MODE
	SET @TMP = N'ALTER DATABASE '+ @RESTORE_DATABASENAME +' SET SINGLE_USER WITH ROLLBACK IMMEDIATE;';
	EXEC SP_EXECUTESQL @TMP;

	SELECT @PHYSICAL_DEVICE_NAME=PHYSICAL_DEVICE_NAME
		  ,@BACKUP_SET_ID_FULL=BACKUP_SET_ID
	FROM MASTER..BACKUP_INFO WHERE BACKUP_SET_ID=	     	
	(SELECT MAX(BACKUP_SET_ID) FROM MASTER..BACKUP_INFO WHERE TYPE='D' AND DATABASE_NAME=@BACKUP_DATABASENAME)

	-- GET MDF AND LDF INFO FROM BACKUP FILE NAME
	SET @TMP = N'RESTORE FILELISTONLY
		  FROM DISK=N''' + @PHYSICAL_DEVICE_NAME + ''' WITH FILE=1' ;
	INSERT INTO @FILELIST
		  EXEC SP_EXECUTESQL @TMP;
	--MDF 
	SELECT @BACKUP_DATAFILE=LOGICALNAME
	FROM @FILELIST
	WHERE [TYPE]='D';
	--LDF
	SELECT @BACKUP_LOGFILE=LOGICALNAME
	FROM @FILELIST
	WHERE [TYPE]='L';

	PRINT 'RESTORING FULL DATABASE BACKUP'
	--RESTORE LAST FULL BACKUP
	RESTORE DATABASE @RESTORE_DATABASENAME
	FROM DISK = @PHYSICAL_DEVICE_NAME 
	WITH MOVE @BACKUP_DATAFILE TO @RESTORE_DATAFILE ,
	MOVE @BACKUP_LOGFILE TO @RESTORE_LOGFILE,
	REPLACE,
	NORECOVERY, STATS = 10;

	----------------------------------------------------------------------------
	--GET ALL TRANSACTION LOG BACKUP LIST 
	----------------------------------------------------------------------------
	INSERT INTO @TRANBACKUPLIST
	SELECT  PHYSICAL_DEVICE_NAME
	FROM MASTER..BACKUP_INFO
	WHERE BACKUP_SET_ID>(@BACKUP_SET_ID_FULL)
	AND DATABASE_NAME = @BACKUP_DATABASENAME 
	AND TYPE = 'L'
	ORDER BY BACKUP_SET_ID ASC

	----------------------------------------------------------------------------
	--RESTORE TRANSACTION LOG 
	----------------------------------------------------------------------------
	DECLARE @FLAG INT
	DECLARE @ROWCOUNT INT
	SELECT @ROWCOUNT=COUNT(*) FROM @TRANBACKUPLIST;

	SET @FLAG = 1
	WHILE (@FLAG <=@ROWCOUNT)
	BEGIN
		PRINT 'RESTORING TRANSACTION LOG BACKUPS'
		SELECT @BACKUPFILE=PHYSICALNAME
		FROM @TRANBACKUPLIST
		WHERE ID=@FLAG;
	    
		RESTORE LOG @RESTORE_DATABASENAME
		FROM DISK = @BACKUPFILE
		WITH FILE = 1, NORECOVERY, STATS = 10 ;
	    
		SET @FLAG = @FLAG + 1
	END

	-- SET DATABASE IN NORMAL MODE
	RESTORE DATABASE @RESTORE_DATABASENAME
	   WITH RECOVERY;

	-- SET DATABASE IN MULTI USER MODE
	SET @TMP = N'ALTER DATABASE '+ @RESTORE_DATABASENAME +' SET MULTI_USER;';
	EXEC SP_EXECUTESQL @TMP;

END
