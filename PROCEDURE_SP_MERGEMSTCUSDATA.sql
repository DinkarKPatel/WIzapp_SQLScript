create PROCEDURE SP_MERGEMSTCUSDATA
(
	@NSPID INT
)
--WITH ENCRYPTION
AS
BEGIN
	--(dinkar) Replace  left(memoid,2) to Location_code 
	BEGIN TRY
		
		DECLARE @CERRORMSG VARCHAR(1000),@CCURDEPTID CHAR(4),@CHODEPTID CHAR(4),@CCMD NVARCHAR(MAX),
				@CXNMASTERTABLENAME VARCHAR(100),@BPROCEED BIT,@CTABLENAME VARCHAR(100),@CMASTERKEYFIELD VARCHAR(100),
				@CKEYFIELD VARCHAR(100),@CPARENTTABLENAME VARCHAR(100),@CPARENTPARANAME VARCHAR(100),@CCHILDPARANAME VARCHAR(100),
				@CWHERECLAUSE VARCHAR(100),@CJOINSTR VARCHAR(1000),@CMEMOID VARCHAR(100),@CFINYEAR VARCHAR(100),
				@NGRPCHARS INT,@NSERIESCHARS INT,@BSERIESBROKEN BIT,@CPREVMEMOID VARCHAR(40),@CMERGETABLENAME VARCHAR(50),
				@CFIRSTMEMOID VARCHAR(40),@NPREVMEMOID INT,@NMEMONOLEN INT,@CRETCMD NVARCHAR(MAX),
				@CDELCHILDTABLENAME VARCHAR(100),@CDELCHILDPARANAME VARCHAR(100),@CDELPARENTPARANAME VARCHAR(100),
				@CORIGINALTABLENAME VARCHAR(100),@NLOCTYPE INT,@BDONOTMERGE BIT,@CRFXNTYPE VARCHAR(10),
				@BINSERTONLY BIT,@BLINKEDMASTER BIT,@BPURLOC BIT,@CSOURCELOCID CHAR(2),@BSOURCEPURLOC BIT,
				@CMISSINGMEMOID VARCHAR(40),@CGRPCODE VARCHAR(20),@BRETVAL BIT,@NPREVNO INT,@CPREVNO VARCHAR(20),
				@BEMPHEADSUPDATED BIT,@CFILTERCONDITION VARCHAR(100),@CTABLEPREFIX VARCHAR(100),@CXNTYPE VARCHAR(10),
				@NXNSMERGINGORDER INT,@NSTEP INT,@CUNQCOLUMNNAME1 VARCHAR(100),@CUNQCOLUMNNAME2 VARCHAR(100),
				@CTEMPMASTERTABLENAME VARCHAR(100),@bWIZCLIPENABLED BIT
		
		
		SET @NSTEP=10
		
		DECLARE @TRETMSG TABLE  (MEMO_ID VARCHAR(40),ERRMSG VARCHAR(MAX))
		
		BEGIN TRANSACTION
			
		SELECT @CERRORMSG='',@BPROCEED=1,@NMEMONOLEN=10,@CRETCMD='',@CMEMOID='',@CXNTYPE='MSTCUS',@BEMPHEADSUPDATED=0
		
		SET @CTABLEPREFIX='TMP_MSTCUS'
		
		SET @NSTEP=20
		
		SET @CFILTERCONDITION=''

		SELECT @CCURDEPTID = VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'
						
		SELECT @NLOCTYPE=LOC_TYPE,@BPURLOC=PUR_LOC FROM LOCATION WHERE DEPT_ID=@CCURDEPTID
		
		SELECT TOP 1 @bWIZCLIPENABLED=ISNULL(wizclip,0) FROM location (nolock) WHERE dept_id=@CCURDEPTID
		
		IF @bWIZCLIPENABLED=1
		BEGIN 
			SET @CERRORMSG='CUSTOMER MASTERS MERGING NOT ALLOWED IN CAMPAIGN SYSTEM'
			GOTO LBLLAST
		END
				
		SET @CMEMOID='MSTCUS'
		
	LBLMERGEBEFORE:
		
		--- DELETE SOME ENTRIES FROM THE TARGET TABLES & SOURCE TABLES BEFORE PROCEEDING FOR MERGING
		
		SET @NSTEP=30		
		
		SET @CTEMPMASTERTABLENAME='TMP_MSTCUS_CUSTDYM_'+ LTRIM(RTRIM(STR(@NSPID)))
		
		SET @CCMD=N'IF OBJECT_ID('''+@CTEMPMASTERTABLENAME+''',''U'') IS NOT NULL	AND
					   NOT EXISTS (SELECT A.NAME FROM SYSCOLUMNS A (NOLOCK) JOIN SYSOBJECTS B (NOLOCK)
					   ON A.ID=B.ID WHERE B.NAME='''+@CTEMPMASTERTABLENAME+''' AND A.NAME=''AREA_CODE'')	 
							ALTER TABLE '+@CTEMPMASTERTABLENAME+' ADD AREA_CODE CHAR(7)'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @NSTEP=40		
		SET @CCMD=N'IF OBJECT_ID('''+@CTEMPMASTERTABLENAME+''',''U'') IS NOT NULL
						UPDATE A SET AREA_CODE=ISNULL(B.AREA_CODE,''0000000'') FROM '+@CTEMPMASTERTABLENAME+' A 
						LEFT OUTER JOIN CUSTDYM B ON A.CUSTOMER_CODE = B.CUSTOMER_CODE 
						WHERE A.AREA_CODE IS NULL'
		EXEC SP_EXECUTESQL @CCMD
		
		SET @NSTEP=50		
		SET @CCMD=N'IF OBJECT_ID('''+@CTEMPMASTERTABLENAME+''',''U'') IS NOT NULL AND
					   NOT EXISTS (SELECT A.NAME FROM SYSCOLUMNS A (NOLOCK) JOIN SYSOBJECTS B (NOLOCK)
					   ON A.ID=B.ID WHERE B.NAME='''+@CTEMPMASTERTABLENAME+''' AND A.NAME=''REF_CUSTOMER_CODE'')	 
							ALTER TABLE '+@CTEMPMASTERTABLENAME+' ADD REF_CUSTOMER_CODE CHAR(12)'
		EXEC SP_EXECUTESQL @CCMD
		
		SET @NSTEP=60		
		SET @CCMD=N'IF OBJECT_ID('''+@CTEMPMASTERTABLENAME+''',''U'') IS NOT NULL
						UPDATE '+@CTEMPMASTERTABLENAME+' SET REF_CUSTOMER_CODE = ''000000000000'' 
						WHERE REF_CUSTOMER_CODE IS NULL'
		EXEC SP_EXECUTESQL @CCMD
		
		SET @NSTEP=70		
		SET @CCMD=N'IF OBJECT_ID('''+@CTEMPMASTERTABLENAME+''',''U'') IS NOT NULL AND
						NOT EXISTS (SELECT A.NAME FROM SYSCOLUMNS A (NOLOCK) JOIN SYSOBJECTS B (NOLOCK)
						ON A.ID=B.ID WHERE B.NAME='''+@CTEMPMASTERTABLENAME+''' AND A.NAME=''COMPANY_CODE'')	 
						ALTER TABLE '+@CTEMPMASTERTABLENAME+' ADD COMPANY_CODE CHAR(2)'
		EXEC SP_EXECUTESQL @CCMD
		
		SET @NSTEP=80		
		SET @CCMD=N'IF OBJECT_ID('''+@CTEMPMASTERTABLENAME+''',''U'') IS NOT NULL
						UPDATE '+@CTEMPMASTERTABLENAME+' SET COMPANY_CODE = ''01'' 
						WHERE COMPANY_CODE IS NULL'
		EXEC SP_EXECUTESQL @CCMD
		
		SET @NSTEP=90		
		SET @CTEMPMASTERTABLENAME='TMP_MSTCUS_GV_MST_'+ LTRIM(RTRIM(STR(@NSPID)))
		
		SET @CCMD=N'IF OBJECT_ID('''+@CTEMPMASTERTABLENAME+''',''U'') IS NOT NULL
						UPDATE A SET REF_CM_ID=B.REF_CM_ID FROM '+@CTEMPMASTERTABLENAME+' A 
						JOIN GV_MST B ON A.GV_NO = B.GV_NO WHERE B.REF_CM_ID <> '''' AND A.REF_CM_ID = '''''
		EXEC SP_EXECUTESQL @CCMD
		
		SET @NSTEP=100		
		SET @CTEMPMASTERTABLENAME='TMP_MSTCUS_CRM_CUSTPOINTS_'+ LTRIM(RTRIM(STR(@NSPID)))
		
		SET @CCMD=N'IF OBJECT_ID('''+@CTEMPMASTERTABLENAME+''',''U'') IS NOT NULL
						DELETE FROM CRM_CUSTPOINTS WHERE ROW_ID NOT IN ( SELECT ROW_ID FROM '+@CTEMPMASTERTABLENAME+')'
		EXEC SP_EXECUTESQL @CCMD
			
	LBLMERGE:
	
		SET @NSTEP=110
		
		--- NOW, UPDATE TRANSACTIONS DATA ONE BY ONE
		DECLARE MERGECUR CURSOR FOR 
		SELECT  DISTINCT TABLENAME, KEYFIELD,LINKED_MASTER,XNS_MERGING_ORDER 
		FROM XNSINFO 
		WHERE XN_TYPE = @CXNTYPE 
		AND   XNS_MERGING_ORDER <> 99 
		ORDER BY XNS_MERGING_ORDER
		
		OPEN MERGECUR
		FETCH NEXT FROM MERGECUR INTO @CTABLENAME,@CKEYFIELD,@BLINKEDMASTER,@NXNSMERGINGORDER		
		WHILE @@FETCH_STATUS=0
		BEGIN
			
			SET @NSTEP=120	
			
			LBLSTARTMERGE:
			SET @BPROCEED=1
			
			SET @CCMD=N'IF NOT EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME=''TMP_' + @CXNTYPE + '_' + @CTABLENAME + '_' + LTRIM(RTRIM(STR(@NSPID)))+''')
							SET @BPROCEEDOUT=0'
			
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD,N'@BPROCEEDOUT BIT OUTPUT',@BPROCEEDOUT=@BPROCEED OUTPUT
			
			SET @NSTEP=130	
			
			IF @BPROCEED=0
				GOTO LBLMERGENEXT
		
		
			IF EXISTS (SELECT TABLENAME FROM MST_UNQ (NOLOCK) WHERE TABLENAME=@CTABLENAME)
			BEGIN
				SELECT @CUNQCOLUMNNAME1=PRIMARY_COLUMNNAME FROM MST_UNQ  (NOLOCK) WHERE TABLENAME=@CTABLENAME 
				SELECT @CUNQCOLUMNNAME2=SECONDARY_COLUMNNAME FROM MST_UNQ  (NOLOCK) WHERE TABLENAME=@CTABLENAME
				
				SET @NSTEP=140	
				
				SET @CCMD=N'UPDATE '+@CTABLENAME+' SET '+@CUNQCOLUMNNAME1+'='+@CTABLENAME+'.'+@CUNQCOLUMNNAME1+'+''_''+'+
							@CTABLENAME+'.'+@CKEYFIELD+' FROM [TMP_'+@CXNTYPE + '_' + @CTABLENAME + '_' +
							 LTRIM(RTRIM(STR(@NSPID)))+'] B 	WHERE B.'+@CUNQCOLUMNNAME1+'='+@CTABLENAME+'.'+
							 @CUNQCOLUMNNAME1+(CASE WHEN @CUNQCOLUMNNAME2<>'' THEN ' AND B.'+@CUNQCOLUMNNAME2+
							 '='+@CTABLENAME+'.'+@CUNQCOLUMNNAME2 ELSE '' END)+' AND B.'+@CKEYFIELD+'<>'+@CTABLENAME+'.'+@CKEYFIELD
				PRINT @CCMD				  
				EXEC SP_EXECUTESQL @CCMD				   	
			END
			
			SET @BINSERTONLY=0
			
			SET @NSTEP=150			
			
			SET @CCMD='EXEC UPDATEMASTERXN_MERGING '''','''+@CTABLEPREFIX+'_' + @CTABLENAME + '_' + LTRIM(RTRIM(STR(@NSPID)))+''','''',
					   '''+@CTABLENAME+''','''+@CKEYFIELD+''','''','''','+
					   (CASE WHEN @BINSERTONLY=1 THEN '1' ELSE '0' END)+',0,1,'''+@CFILTERCONDITION+''',@CERRORMSGOUT OUTPUT'
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD,N'@CERRORMSGOUT VARCHAR(1000) OUTPUT',@CERRORMSGOUT=@CERRORMSG OUTPUT
			
			IF @CERRORMSG<>''
				BREAK
			
			SET @NSTEP=160
			
			LBLMERGENEXT:
			
			FETCH NEXT FROM MERGECUR INTO @CTABLENAME,@CKEYFIELD,@BLINKEDMASTER,@NXNSMERGINGORDER		
		END
		CLOSE MERGECUR
		DEALLOCATE MERGECUR
			
		SET @NSTEP=170	
		
		-- DELETING FROM TEMP TABLES
		
		EXEC SP_DROPTEMPTABLES_XNS @CXNTYPE,@NSPID
		
		SET @CRETCMD='SELECT '''+@CMEMOID+''' AS MEMO_ID,'''+@CERRORMSG+''' AS ERRMSG'	
			
		
	LBLLAST:
		
		SET @NSTEP=180
		
		--- ON SUCCESSFUL MERGING , DELETE ENTRY FROM XN HISTORY 		
		IF @CERRORMSG=''
		BEGIN
			
			IF @@TRANCOUNT>0
			BEGIN
				PRINT 'SUCCESS'
				COMMIT TRANSACTION
			END	
		END
		ELSE
		BEGIN
			IF @@TRANCOUNT>0
				ROLLBACK 	
		END	
		
		SET @NSTEP=190
	
			
		INSERT @TRETMSG
		SELECT 'MSTCUS',@CERRORMSG
		
		SELECT * FROM @TRETMSG
		
		
	END TRY

	BEGIN CATCH
		
		PRINT 'UNTRAPPED ERROR'		
		SELECT @CERRORMSG='PROCEDURE : '+ISNULL(ERROR_PROCEDURE(),'NULL P')+'STEP: '+STR(@NSTEP)+' LINE NO. :'+
		ISNULL(LTRIM(RTRIM(STR(ERROR_LINE()))),'NULL LINE')+'MSG :'+ISNULL(ERROR_MESSAGE(),'NULL MSG')
		
		SET @CRETCMD='SELECT '''' AS MEMO_ID,'''''+@CERRORMSG+''''' AS ERRMSG'
		
		PRINT 'RETURN VALUE : '+ISNULL(@CRETCMD,'NULL RETCMD')+@CMEMOID
		--EXEC SP_EXECUTESQL @CRETCMD
		
		INSERT @TRETMSG
		SELECT 'MSTCUS',@CERRORMSG
		
		SELECT * FROM @TRETMSG
		
		
		IF @@TRANCOUNT>0
			ROLLBACK		

		IF CURSOR_STATUS('GLOBAL','MSTCUR') IN (0,1)
		BEGIN
			CLOSE MSTCUR
			DEALLOCATE MSTCUR
		END

		IF CURSOR_STATUS('GLOBAL','MERGECUR') IN (0,1)
		BEGIN
			CLOSE MERGECUR
			DEALLOCATE MERGECUR
		END
		
		EXEC SP_DROPTEMPTABLES_XNS @CXNTYPE,@NSPID		
	END CATCH
		
END
--- END OF CREATING PROCEDURE SP_MERGEMSTCUSDATA
