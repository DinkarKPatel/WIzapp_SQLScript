CREATE PROCEDURE SP3S_GEN_MGDBDATA
(
	 @DTODATE		DATETIME	
	,@CAGE_LIMIT1	VARCHAR(10)
	,@CAGE_LIMIT2	VARCHAR(10)
	,@CAGE_LIMIT3	VARCHAR(10)
	,@CFILTERCOLS	VARCHAR(MAX)
	,@CLAYOUTCOLS	VARCHAR(1000)
)
--WITH ENCRYPTION
AS
BEGIN
/**
	THIS PROCEDURE PROCESSES DATA FOR A REPORT AND RETURNS DATA TO CALLING PROCEDURE
**/
	SET NOCOUNT ON
	DECLARE  @CCMD NVARCHAR(MAX),@CTODATE VARCHAR(20),@CCURDB VARCHAR(100)
			,@CRFDB VARCHAR(100),@CFROMDATE VARCHAR(20),@CFINYEAR VARCHAR(5)
			,@NDAYSCNT NUMERIC(3),@CWHERECLAUSE VARCHAR(MAX)
			,@NTOTALPURCHASE NUMERIC(18,2),@NTOTALSALE NUMERIC(18,2)
			,@NTOTALGM NUMERIC(18,2),@NSALEDAYSCNT NUMERIC(4,0),@DEPT BIT,@NMODE NUMERIC(1);
BEGIN TRY
	SET @CCURDB=DB_NAME();
	SET @CRFDB=@CCURDB+'_RFOPT.DBO.RF_OPT';	
	--SET @CRFDB=@CCURDB+'.DBO.VW_XNSREPS';	
	SET @CWHERECLAUSE='';

	SET @DTODATE=DATEADD(DD,0,DATEDIFF(DD,0,@DTODATE))
	SET @CTODATE=CONVERT(VARCHAR,@DTODATE,110)
	
	SET @CFINYEAR='01'+DBO.FN_GETFINYEAR(@DTODATE)
	
	SET @CFROMDATE=CONVERT(VARCHAR,DBO.FN_GETFINYEARDATE(@CFINYEAR,1),110)
	
	IF CHARINDEX('DEPT_ID',@CLAYOUTCOLS)<>0
	BEGIN	
		SET @DEPT=1
		SET @NMODE=0
	END
	ELSE
	BEGIN	
		SET @DEPT=0
		SET @NMODE=1
	END	
	
	IF OBJECT_ID('TEMPBM..#TPURCHASEVALUE','U') IS NOT NULL
		DROP TABLE #TPURCHASEVALUE
	CREATE TABLE #TPURCHASEVALUE 
	(
	   LAYOUTCOL VARCHAR(1000) NOT NULL DEFAULT 0
	  ,PURCHASE_VALUE NUMERIC(18,2) NOT NULL DEFAULT 0
	  ,PUR_CNTR NUMERIC(10,2) NOT NULL DEFAULT 0	
	  ,SALE_VALUE NUMERIC(18,2) NOT NULL DEFAULT 0
	  ,SOLD_PURCHASE_VALUE NUMERIC(18,2) NOT NULL DEFAULT 0
	  ,SALE_DAYS NUMERIC(4,0) NOT NULL DEFAULT 0
	  ,AVG_DAILY_SALE NUMERIC(18,2) NOT NULL DEFAULT 0
	  ,CBS_VALUE_PP NUMERIC(18,2) NOT NULL DEFAULT 0
	  ,DIH NUMERIC(10) NOT NULL DEFAULT 0
	  ,SALE_CNTR NUMERIC(10,2) NOT NULL DEFAULT 0
	  ,GROSS_MARGIN NUMERIC(18,2) NOT NULL DEFAULT 0
	  ,GM_CNTR NUMERIC(10,2) NOT NULL DEFAULT 0
	  ,ADI NUMERIC(18,2) NOT NULL DEFAULT 0
	  ,TPY NUMERIC(18,2) NOT NULL DEFAULT 0
	  ,PSPD NUMERIC(18,2) NOT NULL DEFAULT 0
	  ,GMROI NUMERIC(18,2) NOT NULL DEFAULT 0
	  ,ASD NUMERIC(18,2) NOT NULL DEFAULT 0
	  ,AGE1 NUMERIC(18,2) NOT NULL DEFAULT 0
	  ,AGE2 NUMERIC(18,2) NOT NULL DEFAULT 0
	  ,AGE3 NUMERIC(18,2) NOT NULL DEFAULT 0
	  ,AGE4 NUMERIC(18,2) NOT NULL DEFAULT 0
	  ,DAYS NUMERIC(4,0) NOT NULL DEFAULT 0
	)
	
	PRINT 'CALCULATING PURCHASE VALUE'
	PRINT GETDATE()
	
	IF OBJECT_ID('#PURCHASE_VALUE','U') IS NOT NULL
		DROP TABLE #PURCHASE_VALUE 
	
	CREATE TABLE #PURCHASE_VALUE(LAYOUTCOL VARCHAR(500),PURCHASE_VALUE NUMERIC(18,2))
	
	SET @CWHERECLAUSE=' WHERE XN_DT < '''+@CFROMDATE+''''+(CASE WHEN ISNULL(@CFILTERCOLS,'')='' THEN '' ELSE ' AND ' END)
					 +@CFILTERCOLS
		
	SET @CCMD=N'SELECT '+@CLAYOUTCOLS+' 
		,SUM(CASE WHEN A.XN_TYPE IN (''OPS'',''PUR'',''CHI'',''SLR'',''UNC'',''APR'',''WSR'',''PFI'',''BCG'',''MRP'',''DCI'',''PSB'',''JWR'') 
			 THEN A.XN_QTY*(SKU.PURCHASE_PRICE-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0)+(CASE WHEN FORM.POST_TAX_SEPARATELY=1 THEN 0
			 ELSE ISNULL(SKU_OH.TAX_AMOUNT,0) END)) 
		 WHEN A.XN_TYPE IN (''PRT'',''CHO'',''SLS'',''CNC'',''APP'',''WSL'',''CIP'',''DCO'',''MIP'',''CSB'',''JWI'',''DLM'') 
		 THEN -A.XN_QTY*(SKU.PURCHASE_PRICE-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0)+(CASE WHEN FORM.POST_TAX_SEPARATELY=1 THEN 0
		 ELSE  ISNULL(SKU_OH.TAX_AMOUNT,0) END)) ELSE 0 END) AS PURCHASE_VALUE 
		FROM '+@CRFDB+' A (NOLOCK)
		JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE
		JOIN LOCATION (NOLOCK) ON A.DEPT_ID=LOCATION.DEPT_ID
		LEFT JOIN SKU_OH (NOLOCK) ON SKU_OH.PRODUCT_CODE=A.PRODUCT_CODE
		JOIN FORM (NOLOCK) ON FORM.FORM_ID=SKU.FORM_ID
		JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE=ARTICLE.ARTICLE_CODE
		JOIN PARA1 (NOLOCK) ON SKU.PARA1_CODE=PARA1.PARA1_CODE
		JOIN PARA2 (NOLOCK) ON SKU.PARA2_CODE=PARA2.PARA2_CODE
		JOIN PARA3 (NOLOCK) ON SKU.PARA3_CODE=PARA3.PARA3_CODE
		JOIN PARA4 (NOLOCK) ON SKU.PARA4_CODE=PARA4.PARA4_CODE
		JOIN PARA5 (NOLOCK) ON SKU.PARA5_CODE=PARA5.PARA5_CODE
		JOIN PARA6 (NOLOCK) ON SKU.PARA6_CODE=PARA6.PARA6_CODE
		LEFT OUTER JOIN ARTICLE_FIX_ATTR ATTR  (NOLOCK) ON ARTICLE.ARTICLE_CODE = ATTR.ARTICLE_CODE 
		LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE
		LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE
		LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE
		LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE
		LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE
		LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE
		LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE
		LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE
		LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE
		LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE
		LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE
		LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE
		LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE
		LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE
		LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE
		LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE
		LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE
		LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE
		LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE
		LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE
		LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE
		LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE
		LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE
		LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE
		LEFT OUTER JOIN ATTR25_MST AT25(NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE
		JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE=SECTIOND.SUB_SECTION_CODE
		JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE=SECTIONM.SECTION_CODE
		JOIN LMV01106 (NOLOCK) ON SKU.AC_CODE=LMV01106.AC_CODE
		JOIN LOC_VIEW (NOLOCK) ON A.DEPT_ID=LOC_VIEW.DEPT_ID
		JOIN BIN (NOLOCK) ON A.BIN_ID=BIN.BIN_ID
		'+@CWHERECLAUSE+'
		GROUP BY '+@CLAYOUTCOLS 
	
	PRINT @CCMD
	INSERT #PURCHASE_VALUE
	EXEC SP_EXECUTESQL @CCMD
		
	PRINT 'CALCULATING 2ND PURCHASE VALUE'
	PRINT GETDATE()	
	
	SET @CWHERECLAUSE=' WHERE PIM01106.INV_MODE=1 AND PIM01106.CANCELLED=0 
		AND PIM01106.FIN_YEAR='''+@CFINYEAR+''' AND PIM01106.RECEIPT_DT<='''+@CTODATE+''''
		+(CASE WHEN ISNULL(@CFILTERCOLS,'')='' THEN '' ELSE ' AND ' END)
		+@CFILTERCOLS
		
		SET @CCMD=N'SELECT '+@CLAYOUTCOLS+'
					  ,SUM(PID01106.INVOICE_QUANTITY*((SKU.PURCHASE_PRICE-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0)+(CASE WHEN POST_TAX_SEPARATELY=1 THEN 0
					   ELSE ISNULL(SKU_OH.TAX_AMOUNT,0) END)))) AS PURCHASE_VALUE
		FROM PIM01106 (NOLOCK)
		JOIN PID01106 (NOLOCK) ON PIM01106.MRR_ID=PID01106.MRR_ID
		JOIN SKU (NOLOCK) ON PID01106.PRODUCT_CODE=SKU.PRODUCT_CODE
		LEFT JOIN SKU_OH (NOLOCK) ON SKU.PRODUCT_CODE=SKU_OH.PRODUCT_CODE
		JOIN FORM (NOLOCK) ON SKU.FORM_ID=FORM.FORM_ID
		JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE=ARTICLE.ARTICLE_CODE
		JOIN PARA1 (NOLOCK) ON SKU.PARA1_CODE=PARA1.PARA1_CODE
		JOIN PARA2 (NOLOCK) ON SKU.PARA2_CODE=PARA2.PARA2_CODE
		JOIN PARA3 (NOLOCK) ON SKU.PARA3_CODE=PARA3.PARA3_CODE
		JOIN PARA4 (NOLOCK) ON SKU.PARA4_CODE=PARA4.PARA4_CODE
		JOIN PARA5 (NOLOCK) ON SKU.PARA5_CODE=PARA5.PARA5_CODE
		JOIN PARA6 (NOLOCK) ON SKU.PARA6_CODE=PARA6.PARA6_CODE
		LEFT OUTER JOIN ARTICLE_FIX_ATTR ATTR  (NOLOCK) ON ARTICLE.ARTICLE_CODE = ATTR.ARTICLE_CODE 
		LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE
		LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE
		LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE
		LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE
		LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE
		LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE
		LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE
		LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE
		LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE
		LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE
		LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE
		LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE
		LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE
		LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE
		LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE
		LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE
		LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE
		LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE
		LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE
		LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE
		LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE
		LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE
		LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE
		LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE
		LEFT OUTER JOIN ATTR25_MST AT25(NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE
		JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE=SECTIOND.SUB_SECTION_CODE
		JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE=SECTIONM.SECTION_CODE
		JOIN LMV01106 (NOLOCK) ON SKU.AC_CODE=LMV01106.AC_CODE
		JOIN LOC_VIEW (NOLOCK) ON PIM01106.DEPT_ID=LOC_VIEW.DEPT_ID
		JOIN BIN (NOLOCK) ON PIM01106.BIN_ID=BIN.BIN_ID
		'+@CWHERECLAUSE+'
		GROUP BY '+@CLAYOUTCOLS
	
	PRINT @CCMD
	INSERT #PURCHASE_VALUE
	EXEC SP_EXECUTESQL @CCMD
	
	PRINT 'INSERTING PURCHASE VALUE'
	PRINT GETDATE()
	
	---CLOSING PURCHASE VALUE FOR EACH SUPPLIER
	INSERT #TPURCHASEVALUE(LAYOUTCOL,PURCHASE_VALUE)
	SELECT LAYOUTCOL,SUM(PURCHASE_VALUE)
	FROM #PURCHASE_VALUE
	GROUP BY LAYOUTCOL
	HAVING SUM(PURCHASE_VALUE)>0
	ORDER BY LAYOUTCOL
	
	PRINT 'CALCULATING SALEVALUE.....'
	PRINT GETDATE()
	
	IF OBJECT_ID('#SALEVALUE','U') IS NOT NULL
		DROP TABLE #SALEVALUE
	
	CREATE TABLE #SALEVALUE( LAYOUTCOL VARCHAR(500),SALE_VALUE NUMERIC(18,2)
							,SOLD_PURCHASE_VALUE NUMERIC(18,2),SALE_DAYS NUMERIC(4,0))
	
	SET @CWHERECLAUSE=' WHERE CMM01106.FIN_YEAR='''+@CFINYEAR+''''+' AND CMM01106.CM_DT<='''+@CTODATE+''' 
						AND CMM01106.CANCELLED=0 AND CMM01106.CM_MODE=1 '
					 	+(CASE WHEN ISNULL(@CFILTERCOLS,'')='' THEN '' ELSE ' AND ' END)
					   +@CFILTERCOLS		
	
	SET @CCMD=N'SELECT '+@CLAYOUTCOLS+'
		   ,SUM(CMD01106.RFNET) AS SALE_VALUE
		   ,SUM(CMD01106.QUANTITY*(SKU.PURCHASE_PRICE+(CASE WHEN FORM.POST_TAX_SEPARATELY=0 
			THEN ISNULL(SKU_OH.TAX_AMOUNT,0) ELSE 0 END)-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0)))
			AS SOLD_PURCHASE_VALUE
		   ,COUNT(DISTINCT CM_DT) AS SALE_DAYS							
	FROM CMM01106 (NOLOCK)
	JOIN CMD01106 (NOLOCK) ON CMM01106.CM_ID=CMD01106.CM_ID
	JOIN SKU (NOLOCK) ON CMD01106.PRODUCT_CODE=SKU.PRODUCT_CODE
	LEFT JOIN SKU_OH (NOLOCK) ON SKU.PRODUCT_CODE=SKU_OH.PRODUCT_CODE
	JOIN FORM (NOLOCK) ON SKU.FORM_ID=FORM.FORM_ID
	JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE=ARTICLE.ARTICLE_CODE
	JOIN PARA1 (NOLOCK) ON SKU.PARA1_CODE=PARA1.PARA1_CODE
	JOIN PARA2 (NOLOCK) ON SKU.PARA2_CODE=PARA2.PARA2_CODE
	JOIN PARA3 (NOLOCK) ON SKU.PARA3_CODE=PARA3.PARA3_CODE
	JOIN PARA4 (NOLOCK) ON SKU.PARA4_CODE=PARA4.PARA4_CODE
	JOIN PARA5 (NOLOCK) ON SKU.PARA5_CODE=PARA5.PARA5_CODE
	JOIN PARA6 (NOLOCK) ON SKU.PARA6_CODE=PARA6.PARA6_CODE
	LEFT OUTER JOIN ARTICLE_FIX_ATTR ATTR  (NOLOCK) ON ARTICLE.ARTICLE_CODE = ATTR.ARTICLE_CODE 
		LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE
		LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE
		LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE
		LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE
		LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE
		LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE
		LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE
		LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE
		LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE
		LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE
		LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE
		LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE
		LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE
		LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE
		LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE
		LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE
		LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE
		LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE
		LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE
		LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE
		LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE
		LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE
		LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE
		LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE
		LEFT OUTER JOIN ATTR25_MST AT25(NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE
	JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE=SECTIOND.SUB_SECTION_CODE
	JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE=SECTIONM.SECTION_CODE
	JOIN LMV01106 (NOLOCK) ON SKU.AC_CODE=LMV01106.AC_CODE
	JOIN LOC_VIEW (NOLOCK) ON LEFT(CMM01106.CM_ID,2)=LOC_VIEW.DEPT_ID
	JOIN BIN (NOLOCK) ON CMM01106.BIN_ID=BIN.BIN_ID
	'+@CWHERECLAUSE+'
	GROUP BY '+@CLAYOUTCOLS+'
	HAVING SUM(CMD01106.RFNET)>0'
	
	PRINT @CCMD
	
	INSERT #SALEVALUE(LAYOUTCOL,SALE_VALUE,SOLD_PURCHASE_VALUE,SALE_DAYS)
	EXEC SP_EXECUTESQL @CCMD
	
	PRINT 'UPDATING SALEVALUE.....'
	PRINT GETDATE()
	
	---UPDATING SALE VALUE FOR ALL SUPPLIERS
	UPDATE A SET  SALE_VALUE=ISNULL(S.SALE_VALUE,0)
				 ,SOLD_PURCHASE_VALUE=ISNULL(S.SOLD_PURCHASE_VALUE,0)
				 ,SALE_DAYS=ISNULL(S.SALE_DAYS,0)
	FROM #TPURCHASEVALUE A
	LEFT JOIN #SALEVALUE S
	ON A.LAYOUTCOL=S.LAYOUTCOL

	INSERT #TPURCHASEVALUE(LAYOUTCOL,PURCHASE_VALUE,SALE_VALUE,SOLD_PURCHASE_VALUE,SALE_DAYS)
	SELECT A.LAYOUTCOL,0,A.SALE_VALUE,A.SOLD_PURCHASE_VALUE,A.SALE_DAYS FROM #SALEVALUE A
	LEFT JOIN #TPURCHASEVALUE B ON A.LAYOUTCOL=B.LAYOUTCOL
	WHERE B.LAYOUTCOL IS NULL
	
	PRINT 'UPDATING GROSS MARGIN'
	PRINT GETDATE()
	---CALCULATING GM
	UPDATE 	#TPURCHASEVALUE SET GROSS_MARGIN=SALE_VALUE-SOLD_PURCHASE_VALUE
	WHERE SALE_VALUE>SOLD_PURCHASE_VALUE
	
	PRINT 'PROCESS COMPLETE'
	PRINT GETDATE()
	
	---CALCULATING SUPPLIERWISE ADI
	IF OBJECT_ID('#TMPADI3','U') IS NOT NULL
		DROP TABLE #TMPADI3		
	
	SELECT CONVERT(VARCHAR(1000),'') AS PARA_NAME,WS_PRICE AS ADI INTO #TMPADI3 
	FROM SKU WHERE 1=2
	
	SELECT CONVERT(VARCHAR(1000),'') AS PARA_NAME,WS_PRICE AS CBS_VALUE INTO #TMPCBSPP
	FROM SKU WHERE 1=2
	
	PRINT 'CALCULATING ADI'
	EXEC SPCALCULATE_ADI @CFROMDATE,@CTODATE,@CFILTERCOLS,@NMODE,@CLAYOUTCOLS
	PRINT 'ADI CALCULATION COMPLETE..'
	
	--UPDATING ADI
	UPDATE A SET ADI=B.ADI
	FROM #TPURCHASEVALUE A
	JOIN #TMPADI3 B ON A.LAYOUTCOL=B.PARA_NAME
	
	---UPDAING CBS_VALUE
	UPDATE A SET CBS_VALUE_PP=B.CBS_VALUE
	FROM #TPURCHASEVALUE A
	JOIN #TMPCBSPP B ON A.LAYOUTCOL=B.PARA_NAME
	
	--CALCULATING AVERAGE DAILY SALE
	UPDATE #TPURCHASEVALUE SET AVG_DAILY_SALE=SOLD_PURCHASE_VALUE/SALE_DAYS 
	WHERE SALE_DAYS>0
		
	---CALCULATING DAYS OF INVENTORY IN HAND
	UPDATE #TPURCHASEVALUE SET DIH=CBS_VALUE_PP/AVG_DAILY_SALE 
	WHERE AVG_DAILY_SALE>0
	
	SELECT @NDAYSCNT=DATEDIFF(DD,@CFROMDATE,@CTODATE)
	
	IF ISNULL(@NDAYSCNT,0)=0
		SET @NDAYSCNT=1
	
	UPDATE #TPURCHASEVALUE SET GMROI=(GROSS_MARGIN*365/(ADI*@NDAYSCNT))*100
	WHERE ADI<>0
	
	---CALCULATING TPY IN CASE LAYOUT CONTAINS DEPT_ID
	UPDATE #TPURCHASEVALUE SET TPY=(CASE WHEN ADI=0 OR @DEPT<>1 THEN 0 ELSE (SALE_VALUE*365)/(ADI*@NDAYSCNT) END)
	
	---CALCULATING PSPD IN CASE LAYOUT CONTAINS DEPT_ID
	UPDATE #TPURCHASEVALUE SET PSPD=(CASE WHEN (SALE_DAYS=0 OR AREA_COVERED=0 OR @DEPT<>1) THEN 0 ELSE (SALE_VALUE/(SALE_DAYS*AREA_COVERED)) END)
	FROM LOCATION LOC WHERE #TPURCHASEVALUE.LAYOUTCOL=LOC.DEPT_ID
	
	IF (@CAGE_LIMIT1=0 OR @CAGE_LIMIT2=0 OR @CAGE_LIMIT3=0) 
	BEGIN
		SELECT 'PLEASE DEFINE THE AGEING RANGE VALUES...' AS ERRORMSG
		GOTO END_PROC
	END
	
	SET @CWHERECLAUSE=' WHERE ARTICLE.STOCK_NA=0 '+(CASE WHEN ISNULL(@CFILTERCOLS,'')='' THEN '' ELSE ' AND ' END)
					  +@CFILTERCOLS
	
	DECLARE @AGEING TABLE(LAYOUTCOL VARCHAR(500),AGE1 NUMERIC(18,2)
			,AGE2 NUMERIC(18,2),AGE3 NUMERIC(18,2),AGE4 NUMERIC(18,2))
			
	SET @CCMD=N'SELECT '+@CLAYOUTCOLS+'
					,CAST(SUM((CASE  WHEN DATEDIFF(DD,SKU.RECEIPT_DT,'''+@CTODATE+''')<='+@CAGE_LIMIT1+' THEN
					 (CASE WHEN A.XN_TYPE IN (''OPS'',''PUR'',''CHI'',''SLR'',''UNC'',''APR'',''WSR'',''PFI'',''BCG'',''MRP'',''DCI'',''PSB'',''JWR'') 
										  THEN 1 WHEN A.XN_TYPE IN (''PRT'',''CHO'',''SLS'',''CNC'',''APP'',''WSL'',''CIP'',''DCO'',''MIP'',''CSB'',''JWI'',''DLM'') 
										  THEN -1 ELSE 0 END) ELSE 0 END)
					* (XN_QTY*(SKU.PURCHASE_PRICE-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0)+(CASE WHEN FORM.POST_TAX_SEPARATELY=1 THEN 0
					  ELSE ISNULL(SKU_OH.TAX_AMOUNT,0) END)))) AS NUMERIC(14,2)) AS VALUE1
					,CAST(SUM((CASE  WHEN DATEDIFF(DD,SKU.RECEIPT_DT,'''+@CTODATE+''') BETWEEN '+LTRIM(RTRIM(STR(@CAGE_LIMIT1+1)))+' AND '+@CAGE_LIMIT2+' THEN
					 (CASE WHEN A.XN_TYPE IN (''OPS'',''PUR'',''CHI'',''SLR'',''UNC'',''APR'',''WSR'',''PFI'',''BCG'',''MRP'',''DCI'',''PSB'',''JWR'') 
										  THEN 1 WHEN A.XN_TYPE IN (''PRT'',''CHO'',''SLS'',''CNC'',''APP'',''WSL'',''CIP'',''DCO'',''MIP'',''CSB'',''JWI'',''DLM'') 
										  THEN -1 ELSE 0 END) ELSE 0 END)
					* (XN_QTY*(SKU.PURCHASE_PRICE-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0)+(CASE WHEN FORM.POST_TAX_SEPARATELY=1 THEN 0
					  ELSE ISNULL(SKU_OH.TAX_AMOUNT,0) END)))) AS NUMERIC(14,2)) AS VALUE2
                    ,CAST(SUM((CASE  WHEN DATEDIFF(DD,SKU.RECEIPT_DT,'''+@CTODATE+''') BETWEEN '+LTRIM(RTRIM(STR(@CAGE_LIMIT2+1)))+' AND '+@CAGE_LIMIT3+' THEN
					 (CASE WHEN A.XN_TYPE IN (''OPS'',''PUR'',''CHI'',''SLR'',''UNC'',''APR'',''WSR'',''PFI'',''BCG'',''MRP'',''DCI'',''PSB'',''JWR'') 
										  THEN 1 WHEN A.XN_TYPE IN (''PRT'',''CHO'',''SLS'',''CNC'',''APP'',''WSL'',''CIP'',''DCO'',''MIP'',''CSB'',''JWI'',''DLM'') 
										  THEN -1 ELSE 0 END) ELSE 0 END)
					* (XN_QTY*(SKU.PURCHASE_PRICE-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0)+(CASE WHEN FORM.POST_TAX_SEPARATELY=1 THEN 0
					  ELSE ISNULL(SKU_OH.TAX_AMOUNT,0) END)))) AS NUMERIC(14,2)) AS VALUE3
					,CAST(SUM((CASE  WHEN DATEDIFF(DD,SKU.RECEIPT_DT,'''+@CTODATE+''')>'+@CAGE_LIMIT3+' THEN
					 (CASE WHEN A.XN_TYPE IN (''OPS'',''PUR'',''CHI'',''SLR'',''UNC'',''APR'',''WSR'',''PFI'',''BCG'',''MRP'',''DCI'',''PSB'',''JWR'') 
										  THEN 1 WHEN A.XN_TYPE IN (''PRT'',''CHO'',''SLS'',''CNC'',''APP'',''WSL'',''CIP'',''DCO'',''MIP'',''CSB'',''JWI'',''DLM'') 
										  THEN -1 ELSE 0 END) ELSE 0 END)
					* (XN_QTY*(SKU.PURCHASE_PRICE-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0)+(CASE WHEN FORM.POST_TAX_SEPARATELY=1 THEN 0
					  ELSE ISNULL(SKU_OH.TAX_AMOUNT,0) END)))) AS NUMERIC(14,2)) AS VALUE4					  					    
        FROM '+@CRFDB+' A  (NOLOCK) 
        JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE 
        LEFT JOIN SKU_OH (NOLOCK) ON SKU.PRODUCT_CODE=SKU_OH.PRODUCT_CODE
        JOIN FORM (NOLOCK) ON SKU.FORM_ID=FORM.FORM_ID
        JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE=ARTICLE.ARTICLE_CODE
		JOIN PARA1 (NOLOCK) ON SKU.PARA1_CODE=PARA1.PARA1_CODE
		JOIN PARA2 (NOLOCK) ON SKU.PARA2_CODE=PARA2.PARA2_CODE
		JOIN PARA3 (NOLOCK) ON SKU.PARA3_CODE=PARA3.PARA3_CODE
		JOIN PARA4 (NOLOCK) ON SKU.PARA4_CODE=PARA4.PARA4_CODE
		JOIN PARA5 (NOLOCK) ON SKU.PARA5_CODE=PARA5.PARA5_CODE
		JOIN PARA6 (NOLOCK) ON SKU.PARA6_CODE=PARA6.PARA6_CODE
		LEFT OUTER JOIN ARTICLE_FIX_ATTR ATTR  (NOLOCK) ON ARTICLE.ARTICLE_CODE = ATTR.ARTICLE_CODE 
		LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE
		LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE
		LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE
		LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE
		LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE
		LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE
		LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE
		LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE
		LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE
		LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE
		LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE
		LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE
		LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE
		LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE
		LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE
		LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE
		LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE
		LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE
		LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE
		LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE
		LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE
		LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE
		LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE
		LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE
		LEFT OUTER JOIN ATTR25_MST AT25(NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE
		JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE=SECTIOND.SUB_SECTION_CODE
		JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE=SECTIONM.SECTION_CODE
		JOIN LMV01106 (NOLOCK) ON SKU.AC_CODE=LMV01106.AC_CODE
		JOIN LOC_VIEW (NOLOCK) ON A.DEPT_ID=LOC_VIEW.DEPT_ID
		JOIN BIN (NOLOCK) ON A.BIN_ID=BIN.BIN_ID
		'+@CWHERECLAUSE+'
        GROUP BY '+@CLAYOUTCOLS			
	
	PRINT ISNULL(@CCMD,'NULL AGEING COMMAND')	               
    INSERT @AGEING(LAYOUTCOL,AGE1,AGE2,AGE3,AGE4) 
    EXEC SP_EXECUTESQL @CCMD

	UPDATE A SET AGE1=B.AGE1
				,AGE2=B.AGE2	
				,AGE3=B.AGE3	
				,AGE4=B.AGE4	
	FROM #TPURCHASEVALUE A
	JOIN @AGEING B ON A.LAYOUTCOL=B.LAYOUTCOL

	SELECT @NTOTALPURCHASE=SUM(PURCHASE_VALUE),@NTOTALSALE=SUM(SALE_VALUE)
		  ,@NTOTALGM=SUM(GROSS_MARGIN) FROM #TPURCHASEVALUE	
	
	UPDATE #TPURCHASEVALUE SET PUR_CNTR=(CASE WHEN @NTOTALPURCHASE=0 THEN 0 ELSE (PURCHASE_VALUE*100/@NTOTALPURCHASE) END)
	,SALE_CNTR=(CASE WHEN @NTOTALSALE=0 THEN 0 ELSE (SALE_VALUE*100/@NTOTALSALE) END)	
	,GM_CNTR=(CASE WHEN @NTOTALGM=0 THEN 0 ELSE (GROSS_MARGIN*100/@NTOTALGM) END)

	UPDATE #TPURCHASEVALUE SET DAYS=@NDAYSCNT
	
	IF OBJECT_ID('TEMPDB..#PURCHASEVALUE','U') IS NOT NULL
	BEGIN
		INSERT #PURCHASEVALUE
		(
		  LAYOUTCOL,PURCHASE_VALUE,PUR_CNTR,SALE_VALUE,SOLD_PURCHASE_VALUE,SALE_DAYS,AVG_DAILY_SALE
		 ,CBS_VALUE_PP,DIH,SALE_CNTR,GROSS_MARGIN,GM_CNTR,ADI,GMROI,ASD,AGE1,AGE2,AGE3,AGE4,DAYS 
		 ,TPY,PSPD
		)
		SELECT LAYOUTCOL,PURCHASE_VALUE,PUR_CNTR,SALE_VALUE,SOLD_PURCHASE_VALUE,SALE_DAYS,AVG_DAILY_SALE
			  ,CBS_VALUE_PP,DIH,SALE_CNTR,GROSS_MARGIN,GM_CNTR,ADI,GMROI,ASD,AGE1,AGE2,AGE3,AGE4,DAYS 
			  ,TPY,PSPD
		FROM #TPURCHASEVALUE
	END
	ELSE
	BEGIN
		SELECT LAYOUTCOL,PURCHASE_VALUE,PUR_CNTR,SALE_VALUE,SOLD_PURCHASE_VALUE,SALE_DAYS,AVG_DAILY_SALE
			  ,CBS_VALUE_PP,DIH,SALE_CNTR,GROSS_MARGIN,GM_CNTR,ADI,TPY,GMROI,ASD,AGE1,AGE2,AGE3,AGE4,DAYS 
			  ,TPY,PSPD
		FROM #TPURCHASEVALUE
	END
END TRY
BEGIN CATCH
	SELECT 'ERROR - '+ ERROR_MESSAGE()
	GOTO END_PROC
END CATCH		
END_PROC:
END	
--END OF PROCEDURE - SP3S_GEN_MGDBDATA
