CREATE PROCEDURE VALIDATEXN_PUR_PRD  
 @CXNID VARCHAR(50),   
 @NUPDATEMODE INT,      
 @CERRORMSG VARCHAR(200) OUTPUT  
-- WITH ENCRYPTION  
AS  
BEGIN  
 DECLARE @CCMD NVARCHAR(4000),@NSUMPIDNET NUMERIC(14,2),@NSUBTOTAL NUMERIC(14,2),@NCALCTOTALAMOUNT NUMERIC(14,2),  
 @NMSTTOTALAMOUNT NUMERIC(14,2), @NTAXVAL NUMERIC(14,2),@NCALCTAXVAL NUMERIC(14,2),  
 @NMRPVAL NUMERIC(14,2),@NCALCDISCOUNTAMT NUMERIC(14,2),@NDISCOUNTAMT NUMERIC(14,2),  
 @CITEMNAME VARCHAR(100),@CBATCHNO VARCHAR(20),@NCALCPURAMOUNT NUMERIC(14,2),@NPURAMOUNT NUMERIC(14,2),  
 @CEXPRERRORMSG VARCHAR(MAX),@NTAX NUMERIC(10,2)  
     
 SET @CERRORMSG=''  
   
   
 DECLARE @CPIMTABLE TABLE ( MRR_ID VARCHAR(22), MRR_NO VARCHAR(10), RECEIPT_DT DATETIME,   
          INV_DT DATETIME, AC_CODE VARCHAR(10), FIN_YEAR VARCHAR(10),  
          CANCELLED BIT, SUBTOTAL NUMERIC(14,2), DISCOUNT_AMOUNT NUMERIC(10,2),  
          TAX_AMOUNT NUMERIC(10,2), FREIGHT NUMERIC(10,2), OTHER_CHARGES NUMERIC(10,2),  
          ROUND_OFF NUMERIC(10,2), TOTAL_AMOUNT NUMERIC(14,2), FORM_ID CHAR(7),  
           DISCOUNT_PERCENTAGE NUMERIC(10,2), TAX_PERCENTAGE NUMERIC(10,2),  
           EXCISE_DUTY_AMOUNT NUMERIC(10,2) )  
   
 DECLARE @CPIDTABLE TABLE ( MRR_ID VARCHAR(22), PRODUCT_CODE VARCHAR(50), PURCHASE_PRICE NUMERIC(10,2),  
          INVOICE_QUANTITY NUMERIC(10,3),TAX_AMOUNT NUMERIC(10,2)
          )  
   
 INSERT @CPIMTABLE  
 SELECT MRR_ID, MRR_NO, RECEIPT_DT, INV_DT, AC_CODE, FIN_YEAR, CANCELLED, SUBTOTAL, DISCOUNT_AMOUNT,  
   TAX_AMOUNT, FREIGHT, OTHER_CHARGES, ROUND_OFF, TOTAL_AMOUNT, FORM_ID, DISCOUNT_PERCENTAGE, TAX_PERCENTAGE,  
   EXCISE_DUTY_AMOUNT  
 FROM PRD_PIM01106 WHERE MRR_ID = @CXNID  
   
 INSERT @CPIDTABLE   
 SELECT MRR_ID, PRODUCT_UID, PURCHASE_PRICE, INVOICE_QUANTITY,TAX_AMOUNT 
 FROM PRD_PID01106 WHERE MRR_ID = @CXNID  
   
   
 IF @NUPDATEMODE <>1  
 BEGIN  
  EXEC VALIDATEXN_PUR_BEFORE_EDIT_PRD @CXNID,0,@CERRORMSG OUTPUT,@CEXPRERRORMSG OUTPUT  
    
  IF ISNULL(@CERRORMSG,'')<>''  
  BEGIN  
     
   IF ISNULL(@CEXPRERRORMSG,'')<>''  
    EXEC SP_EXECUTESQL @CEXPRERRORMSG  
     
   RETURN  
  END  
 END  
  
   
 -- IF CANCELLED MEMO THEN RETURN   
 IF EXISTS(SELECT A.AC_CODE FROM @CPIMTABLE A WHERE  CANCELLED=1)  
  RETURN  
   
    
 IF EXISTS (SELECT MRR_ID FROM @CPIMTABLE WHERE FIN_YEAR<>SUBSTRING(MRR_ID,3,5))  
 BEGIN  
  SET @CERRORMSG='MISMATCH BETWEEN MRR ID & FIN YEAR ..... PLEASE CHECK'  
  RETURN  
 END   
    
 -- BILL LEVEL SUBTOTAL VALIDATION  
 SELECT @NSUMPIDNET=SUM(PURCHASE_PRICE*INVOICE_QUANTITY)  
    FROM @CPIDTABLE   
   
 SELECT @NSUBTOTAL =SUBTOTAL FROM @CPIMTABLE   
      
    PRINT STR(ISNULL(@NSUMPIDNET,0))+STR(ISNULL(@NSUBTOTAL,0))  
 IF ABS(ISNULL(@NSUMPIDNET,0)-ISNULL(@NSUBTOTAL,0))>2  
 BEGIN  
  SET @CERRORMSG='MISMATCH BETWEEN ITEM WISE TOTAL ('+LTRIM(RTRIM(STR(ISNULL(@NSUMPIDNET,0),10,2)))+') &  
         BILL LEVEL SUBTOTAL ('+LTRIM(RTRIM(STR(ISNULL(@NSUBTOTAL,0),10,2)))+')..... CANNOT SAVE '  
  RETURN  
 END  
   
 -- CHECKING DISCOUNT AMOUNT AND DISCOUNT PERCENTAGE  
 SELECT @NCALCDISCOUNTAMT = ROUND(SUBTOTAL*ROUND(DISCOUNT_PERCENTAGE,2)/100,2) FROM @CPIMTABLE  
   
 SELECT @NDISCOUNTAMT = DISCOUNT_AMOUNT FROM @CPIMTABLE  
    
 IF  ABS(@NDISCOUNTAMT-ISNULL(@NCALCDISCOUNTAMT,0))>1  
 BEGIN  
  SET @CERRORMSG='MISMATCH BETWEEN EXPECTED DISCOUNT AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NCALCDISCOUNTAMT,0),10,2)))+') &  
      UPDATED DISCOUNT AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NDISCOUNTAMT,0),10,2)))+')..... CANNOT SAVE '  
  
  RETURN  
 END  
   
   
 -- CHECKING  MISMATCH BETWEEN FOR NET AMOUNT  
   
   
 SELECT @NTAX=SUM(TAX_AMOUNT) FROM @CPIDTABLE  
 --SELECT @NTAX=ISNULL(@NTAX,0)+SUM(ISNULL (CGST_AMOUNT,0)+ISNULL (SGST_AMOUNT,0)+ISNULL (IGST_AMOUNT,0) ) FROM @CPIDTABLE
 SELECT @NCALCTOTALAMOUNT = (SUBTOTAL +ISNULL(@NTAX,0) + ROUND_OFF + OTHER_CHARGES + EXCISE_DUTY_AMOUNT+ FREIGHT ) - DISCOUNT_AMOUNT  
 FROM @CPIMTABLE    
  
 SELECT @NMSTTOTALAMOUNT = TOTAL_AMOUNT FROM @CPIMTABLE WHERE MRR_ID=@CXNID  
   
 IF ABS(ISNULL(@NMSTTOTALAMOUNT,0)-ISNULL(@NCALCTOTALAMOUNT,0))>0  
 BEGIN  
  SET @CERRORMSG = ' MISMATCH BETWEEN EXPECTED NET AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NCALCTOTALAMOUNT,0),14,4)))+')  
      & EXISTING BILL LEVEL NET AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NMSTTOTALAMOUNT,0),14,4))) +')..... CANNOT SAVE '  
  RETURN  
 END   
END   
--**************************************** END OF PROCEDURE VALIDATEXN_PUR
