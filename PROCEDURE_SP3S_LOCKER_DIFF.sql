create PROCEDURE SP3S_LOCKER_DIFF    
(  
   @DFROMDT DATETIME  
  ,@CLOC VARCHAR(5)=''
  ,@DTODT DATETIME  
) 
--WITH ENCRYPTION    
AS    
BEGIN 
 
  IF OBJECT_ID ('TEMPDB..#TMPLOCKER_DT','U') IS NOT NULL    
     DROP TABLE #TMPLOCKER_DT    
  CREATE TABLE #TMPLOCKER_DT(MEMO_DT DATETIME)          

  IF @CLOC=''  
    INSERT #TMPLOCKER_DT(MEMO_DT)
	SELECT DISTINCT MEMO_DT    
	FROM TILL_LIFTS (NOLOCK)   
	WHERE TRANSFERMODE =3 AND CANCELLED =0    
	UNION     
	SELECT DISTINCT MEMO_DT    
	FROM TILL_BANK_TRANSFER (NOLOCK)  A    
	WHERE  (ISNULL(REFLIFTID, '')='' or ( transfermode=2 and ISNULL(REFLIFTID, '')<>''))   
	AND CANCELLED =0    
  ELSE
	INSERT #TMPLOCKER_DT(MEMO_DT)
	SELECT DISTINCT MEMO_DT    
	FROM TILL_LIFTS (NOLOCK)   
	WHERE TRANSFERMODE =3 AND CANCELLED =0 AND location_code=@CLOC
	UNION     
	SELECT DISTINCT MEMO_DT    
	FROM TILL_BANK_TRANSFER (NOLOCK)  A    
	WHERE  (ISNULL(REFLIFTID, '')='' or ( transfermode=2 and ISNULL(REFLIFTID, '')<>'')) 
	AND CANCELLED =0 AND location_code=@CLOC
      
  IF OBJECT_ID ('TEMPDB..#TMPCUMM_SUM','U') IS NOT NULL    
     DROP TABLE #TMPCUMM_SUM    
            
  SELECT A.MEMO_DT ,ISNULL(LIFT_AMOUNT,0) AS LOCKER_IN,ISNULL(AMOUNT,0) AS LOCKER_OUT     
  INTO #TMPCUMM_SUM    
  FROM #TMPLOCKER_DT A    
  LEFT JOIN    
  (    
    SELECT MEMO_DT,SUM(LIFT_AMOUNT) AS LIFT_AMOUNT    
    FROM TILL_LIFTS A (NOLOCK)    
    WHERE TRANSFERMODE =3  AND CANCELLED =0    
    GROUP BY MEMO_DT    
  ) B ON A.MEMO_DT =B.MEMO_DT     
  LEFT OUTER JOIN    
  (    
    SELECT MEMO_DT,SUM(AMOUNT) AS AMOUNT    
    FROM TILL_BANK_TRANSFER (NOLOCK)  A    
    WHERE  (ISNULL(REFLIFTID, '')='' or ( transfermode=2 and ISNULL(REFLIFTID, '')<>'')) AND CANCELLED =0    
    GROUP BY MEMO_DT    
  ) C ON A.MEMO_DT =C.MEMO_DT     
      
      
  SELECT A.MEMO_DT,A.LOCKER_IN,A.LOCKER_OUT,    
  SUM (B.LOCKER_IN) AS CUMM_LOCKER_IN,    
  SUM (B.LOCKER_OUT) AS CUMM_LOCKER_OUT,    
  DIFF_AMT=SUM (B.LOCKER_IN)-SUM (B.LOCKER_OUT)       
  FROM #TMPCUMM_SUM A    
  JOIN #TMPCUMM_SUM B ON B.MEMO_DT <=A.MEMO_DT 
  WHERE  A.MEMO_DT BETWEEN @DFROMDT AND @DTODT    
  GROUP BY A.MEMO_DT,A.LOCKER_IN ,A.LOCKER_OUT     
  ORDER BY A.MEMO_DT     
      
END
