create PROCEDURE POSTACT_BTF 
(
	@DTTO DATETIME,
	@CDEPTID CHAR(4)=''
)
AS
BEGIN
    DECLARE @CSTEP VARCHAR(10),@BPOSTDISCOUNTSEPARATELY BIT,@CDISCACCODE VARCHAR(10),@BPOSTFREIGHTSEPARATELY	BIT
			,@CPETTYCASHACCODE VARCHAR(10),@BPOSTOCTROISEPARATELY BIT,@COCTROIACCODE VARCHAR(10),
			@BPOSTINSURANCESEPARATELY BIT,@CINSURANCEACCODE VARCHAR(10),
			@BPOSTOTHERCHARGESSEPARATELY BIT,@COTHERCHARGESACCODE VARCHAR(10),@BPOSTROUNDOFFSEPARATELY BIT,@CROUNDOFFACCODE VARCHAR(10),@NCTR NUMERIC(10,0),
			@NSUBTOTAL NUMERIC(14,2),@NTAXAMOUNT NUMERIC(14,2), @CPURACCODE VARCHAR(50),@CTAXACCODE VARCHAR(100),
			@LPOSTTAXSEPARATELY NUMERIC(14,2),@CMEMOID VARCHAR(50),@LOUTSTATIONPARTY BIT,@TMPDR NUMERIC(14,2),
			@TMPCR NUMERIC(14,2),@CCURSTATECODE	VARCHAR(10),@CVMID	VARCHAR(40),@CLOCATIONID CHAR(2),
			@CLASTBILLNO VARCHAR(40),@DTMPVENDORBILLDT DATETIME,@CRMLIST VARCHAR(300),@NTMPCREDITDAYS NUMERIC(10),
			@NTMPCRDISCOUNTPERCENTAGE NUMERIC(14,2),@DLASTINVDT	DATETIME,@CVOUCHERCODE VARCHAR(10),
			@COLDBILLTYPE VARCHAR(10),@CLASTACCODE VARCHAR(10),@CLASTPARTYNAME VARCHAR(100),@NTOTQUANTITY NUMERIC(14,2),
			@NTOTNETAMOUNT NUMERIC(14,2),@CDEPTNAME VARCHAR(100),@CVOUCHERNO VARCHAR(10),@CCASHAC VARCHAR(10)
	SET @CSTEP=10
	DECLARE @CPARTYACCODE VARCHAR(10),@CPARTYSTATECODE VARCHAR(10),@NNETAMOUNT NUMERIC(14,2),
			@NDISCAMOUNT NUMERIC(14,2),@NFREIGHT NUMERIC(14,2),	@NOTHER NUMERIC(14,2),@NROUNDOFF NUMERIC(14,2),
			@NDRTOTAL NUMERIC(14,2),@NCRTOTAL NUMERIC(14,2),@CCUTOFFDATE VARCHAR(20),@CXNTYPE VARCHAR(10)
			,@CAC_CODE VARCHAR(20),@CVDID VARCHAR(40),@CCASHACCODE VARCHAR(10)
    
    SET @CPETTYCASHACCODE=''
    SET @CROUNDOFFACCODE=''
    
    SET @CSTEP=20
    --THIS TABLE VARIABLE STORE ERROR OF OF MEMO ID
    DECLARE @ERRORS TABLE
	(
		XN_ID	VARCHAR(40),XN_TYPE VARCHAR(30),XN_NO VARCHAR(40),
		XN_DT DATETIME,XN_AMT NUMERIC(14,2),XN_AC VARCHAR(100),
		ERR_DESC VARCHAR(500)
	)   
    
    SET @CSTEP=30
    DECLARE @VCHC TABLE 
	(
		AC_CODE CHAR(10),NARRATION VARCHAR(200),XN_NO VARCHAR(30),
		XN_DT DATETIME,DEPT_ID CHAR(4),AMOUNT NUMERIC(14,4),XN_ID VARCHAR(22),
		REF_BILL_NO VARCHAR(50),REF_BILL_DATE DATETIME,	ENTRY_ID INT
		,CRDAYS NUMERIC(5),REMARKS VARCHAR(MAX)
	)
	
	SET @CSTEP=40
	DECLARE @VDC TABLE 
	(
		VD_ID VARCHAR(50),				VM_ID VARCHAR(40),				AC_CODE CHAR(10), 
		NARRATION VARCHAR(200),			DEBIT_AMOUNT NUMERIC(14,4),		CREDIT_AMOUNT NUMERIC(14,4),
		X_TYPE CHAR(2), 				VS_AC_CODE CHAR(10),	 		REF_BILL_NO VARCHAR(40), 
		CREDIT_DAYS NUMERIC(10),		CR_DISCOUNT_PERCENTAGE NUMERIC(14,2),		
		VAT_ENTRY BIT,REF_BILL_DATE DATETIME, AC_NAME VARCHAR(100)
	)
	
	SET @CSTEP=50
	DECLARE @VMC TABLE
	(
		VM_ID VARCHAR(400), 			VOUCHER_NO VARCHAR(400), 		VOUCHER_DT DATETIME, 
		VOUCHER_CODE CHAR(100), 		DEPT_ID CHAR(20),				BILL_TYPE VARCHAR(300),
		BILL_NO VARCHAR(200), 			BILL_ID VARCHAR(220), 			BILL_DT DATETIME, 
		BILL_AC_CODE VARCHAR(100),		DRTOTAL NUMERIC(20,2),			CRTOTAL NUMERIC(20,2), 
		CASH_VOUCHER BIT, 				SALE_VOUCHER BIT, 				QUANTITY NUMERIC(20,2), 
		ANGADIA_CODE CHAR(70), 			LR_NO VARCHAR(500), 			LR_DT DATETIME,
		PARTY_NAME VARCHAR(1000),		NET_AMOUNT NUMERIC(20,2), 		BILL_STATUS VARCHAR(1000),
		RM_LIST VARCHAR(3000), 		CANCELLED BIT,					DEPT_NAME VARCHAR(100),
		VOUCHER_TYPE VARCHAR(100)	
	)
	
	SET @CSTEP=60
	DECLARE @VLINK TABLE
	(
		VM_ID VARCHAR(100),MEMO_ID VARCHAR(100),XN_TYPE VARCHAR(20),LAST_UPDATE DATETIME
	)
	
	DECLARE @TBILL_BY_BILL_REF TABLE(VD_ID VARCHAR(40),REF_NO VARCHAR(40),AMOUNT NUMERIC(18,4),LAST_UPDATE DATETIME
								,X_TYPE VARCHAR(20),CR_DAYS NUMERIC(5),REF_TYPE VARCHAR(10))
	
	SELECT TOP 1 @CCUTOFFDATE=CUTOFFDATE
	FROM BTCCONFIGMST
	
	SET @CCUTOFFDATE=ISNULL(@CCUTOFFDATE,'')
	
	SET @CSTEP=70
	SET @CVOUCHERCODE = '0000000008'
    BEGIN TRY
			
			SET @CSTEP=80
			IF OBJECT_ID('TEMPDB..#POSTS','U') IS NOT NULL
				DROP TABLE #POSTS 
			
			SET @CSTEP=90
			--THIS TABLE STORE ALL PENDING MEMO_ID 
			CREATE TABLE #POSTS (MEMO_ID VARCHAR(30),MODE VARCHAR(10))
			
			SET @CSTEP=100
			--GETTING LIST OF PETTYCASH EXPENSE INVOICES THAT QUALIFY FOR VOUCHER POSTING
			INSERT INTO #POSTS (MEMO_ID,MODE)
	        SELECT A.MEMO_ID,'BTF' AS MODE 
	        FROM TILL_BANK_TRANSFER A
	        JOIN LOCATION SL ON SL.DEPT_ID =a.location_code
	        LEFT OUTER JOIN 
	        ( 
				SELECT B.MEMO_ID,B.LAST_UPDATE
				FROM POSTACT_VOUCHER_LINK B 
				JOIN VM01106 C ON C.VM_ID = B.VM_ID 
				WHERE C.CANCELLED=0 AND B.XN_TYPE = 'BTF' 
	        )VM  ON A.MEMO_ID = VM.MEMO_ID  
	        WHERE  
	         -- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES
            (ISNULL(SL.LOC_TYPE,0)=1 OR ISNULL(SL.ACCOUNT_POSTING_AT_HO,0)=1) AND 
	        /*PETTYCASH EXPENSE IS NOT CANCELLED.*/
	        ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)	 	
	        /*PETTYCASH EXPENSE INV_DT IS LESS THAN THE SPECIFIED DATE.*/
	        AND A.MEMO_DT <= @DTTO
	        /*IF CUTOFF DATE IS SPECIFIED, CONSIDER PETTYCASH EXPENSE AFTER THE CUTOFF DATE*/
	        AND (ISNULL(@CCUTOFFDATE,'')='' OR A.MEMO_DT>@CCUTOFFDATE)
	        /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/
	        AND (ISNULL(@CDEPTID,'')='' OR a.location_code=@CDEPTID)
	        /*PETTYCASH EXPENSE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/
	        AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE) 
	        
	        SET @CSTEP=150
	        -- POSTING FOR BANK TRANSFER
			INSERT @ERRORS ( XN_ID,XN_TYPE, XN_NO, XN_DT, XN_AMT, XN_AC, ERR_DESC )
			SELECT TBT.MEMO_ID AS XN_ID,'BTF' AS XN_TYPE,TBT.MEMO_NO AS XN_NO,TBT.MEMO_DT AS XN_DT
			,TBT.AMOUNT AS XN_AMT,'' AS XN_AC
			  ,'A/C NOT SPECIFIED FOR TILL.PLEASE DEFINE A/C.'	
			FROM TILL_BANK_TRANSFER TBT
			JOIN #POSTS PST ON TBT.MEMO_ID=PST.MEMO_ID	
			 JOIN TILL_LIFTS TL ON TBT.REFLIFTID=TL.MEMO_ID
			  JOIN TILL_SHIFT_MST TSM ON TL.SHIFT_ID=TSM.SHIFT_ID	
			   JOIN TILL_MST TM ON TSM.TILL_ID=TM.TILL_ID
					WHERE ISNULL(TM.AC_CODE,'0000000000')='0000000000'
			
			--FOR DIRECT BANK TRANSFER WHICH ARE DONE USING BANK TRANSFER MODULE, LOCKER AC MUST BE DEFINED
			SELECT @CCASHACCODE=ISNULL(CASH_AC_CODE,'')
			FROM TILLCONFIGMST
			
			SET @CCASHACCODE=ISNULL(@CCASHACCODE,'0000000000')				 
			
			IF @CCASHACCODE IN ('','0000000000')
			BEGIN
			INSERT @ERRORS ( XN_ID,XN_TYPE, XN_NO, XN_DT, XN_AMT, XN_AC, ERR_DESC )
			SELECT TBT.MEMO_ID AS XN_ID,'BTF' AS XN_TYPE,TBT.MEMO_NO AS XN_NO,TBT.MEMO_DT AS XN_DT
				  ,TBT.AMOUNT AS XN_AMT,'' AS XN_AC
					  ,'CASH A/C NOT SPECIFIED.PLEASE DEFINE A/C.'	
			FROM TILL_BANK_TRANSFER TBT
				JOIN #POSTS PST ON TBT.MEMO_ID=PST.MEMO_ID	
					WHERE ISNULL(TBT.REFLIFTID,'')=''
			END
					
			SET @CSTEP = 330
			CREATE INDEX IX_TEMP_BTFTABLE_RM_ID ON #POSTS(MEMO_ID)
		
	        SET @CSTEP = 350
	        --DELETE MEMO_ID FROM TEPM TABLE WHICH HAVE SOME ERROR
	        DELETE A 
	        FROM #POSTS A 
	        JOIN @ERRORS B ON A.MEMO_ID = B.XN_ID AND A.MODE=B.XN_TYPE
	        
	        --SELECT COUNT(*) FROM #POSTS
	        SET @CSTEP = 360
	        IF OBJECT_ID('TEMPDB..#V_PROCESS','U') IS NOT NULL
				DROP TABLE #V_PROCESS
			
			SET @CSTEP = 370
			SELECT    A.MEMO_NO
			, A.MEMO_ID
			, A.MEMO_DT
			, @CCASHACCODE AS SOURCEACCODE
			, C.AC_CODE
			, A.REMARKS + CASE WHEN REFLIFTID <>'' THEN ' (TILL TO BANK)' ELSE ' (LOCKER TO BANK)' END AS REMARKS
			, A.AMOUNT AS MEMO_AMOUNT
			, A.FIN_YEAR
			, C.AC_NAME AS PARTY_NAME
			, A.CANCELLED
			INTO #V_PROCESS
			FROM TILL_BANK_TRANSFER A 
			JOIN #POSTS PST ON A.MEMO_ID=PST.MEMO_ID
			LEFT JOIN TILL_LIFTS TL ON A.REFLIFTID=TL.MEMO_ID
			LEFT JOIN TILL_SHIFT_MST TSM ON TL.SHIFT_ID=TSM.SHIFT_ID
			JOIN LM01106 C ON A.AC_CODE = C.AC_CODE
	
		
		CREATE INDEX IX_V_PROCESS_RM_ID ON #V_PROCESS(MEMO_ID)
		
		SELECT @CMEMOID='',@CXNTYPE='BTF',@CAC_CODE='',@NCTR=1
		SET @CSTEP = 380
		WHILE EXISTS(SELECT TOP 1 'U' FROM #V_PROCESS)
		BEGIN
			SET @CSTEP = 390
			SELECT TOP 1 @CMEMOID=MEMO_ID,@CAC_CODE=AC_CODE FROM #V_PROCESS
			
			SET @CSTEP = 400
			--BANK A/C SHOULD BE DEBITED
			INSERT @VCHC ( AC_CODE, AMOUNT,XN_NO,XN_ID,REMARKS)
			SELECT AC_CODE,MEMO_AMOUNT,MEMO_NO,MEMO_ID,REMARKS
			FROM #V_PROCESS
			WHERE MEMO_ID=@CMEMOID
			
			--TILL A/C SHOULD BE CREDITED
			INSERT @VCHC ( AC_CODE, AMOUNT,XN_NO,XN_ID,REMARKS )
			SELECT SOURCEACCODE,-MEMO_AMOUNT,MEMO_NO,MEMO_ID,REMARKS
			FROM #V_PROCESS
			WHERE MEMO_ID=@CMEMOID
					
			SET @CSTEP = 500
			SET @CVMID = ''
			SELECT @CVMID = A.VM_ID 
			FROM POSTACT_VOUCHER_LINK A
			 JOIN VM01106 B ON A.VM_ID=B.VM_ID
			  WHERE B.CANCELLED=0 AND A.MEMO_ID = @CMEMOID AND A.XN_TYPE=@CXNTYPE
			
			SET @CSTEP = 510
			IF ISNULL(@CVMID,'') = ''
			BEGIN
			    SET @CVMID = 'LATER-'+RTRIM(LTRIM(CONVERT(VARCHAR,@NCTR)))
				SET @NCTR = @NCTR+1
			END
			
			SET @CSTEP = 520
			INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )
			SELECT @CVMID,@CMEMOID,'BTF',LAST_UPDATE FROM TILL_BANK_TRANSFER WHERE MEMO_ID = @CMEMOID
			
			SET @CSTEP = 530
			INSERT @VDC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE, 
						  CREDIT_DAYS, CR_DISCOUNT_PERCENTAGE,AC_NAME)
			SELECT @CVMID
				,'LATER-'+CONVERT(VARCHAR,ROW_NUMBER() OVER(ORDER BY A.AC_CODE)) AS VD_ID
				, A.AC_CODE
				,' MEMO#'+A.XN_NO+' '+ REMARKS AS NARRATION
				,(CASE WHEN SUM(AMOUNT)>0 THEN SUM(AMOUNT) ELSE 0 END) AS DEBIT_AMOUNT
				,(CASE WHEN SUM(AMOUNT)<0 THEN ABS(SUM(AMOUNT)) ELSE 0 END) AS CREDIT_AMOUNT
				,(CASE WHEN SUM(AMOUNT) > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE
				,A.CRDAYS
				,0
				,B.AC_NAME
	        FROM @VCHC A
	        JOIN LMV01106 B ON A.AC_CODE = B.AC_CODE
	        WHERE XN_ID = @CMEMOID
	        GROUP BY A.AC_CODE,A.XN_NO,B.AC_NAME,A.CRDAYS,REMARKS
	        ORDER BY X_TYPE,ABS(SUM(AMOUNT)) DESC
			
	        SET @CSTEP = 540
	        SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC
		    WHERE VM_ID = @CVMID
		    
		    SET @CSTEP = 550    
	        SET @CVOUCHERNO = '' 
	        SELECT TOP 1 @CVOUCHERNO = VOUCHER_NO FROM VM01106 WHERE VM_ID = @CVMID
	        IF ISNULL(@CVOUCHERNO,'') = ''
				SET @CVOUCHERNO = @CVMID
	        
	        SET @CSTEP = 560
	        INSERT @VMC	( VM_ID, VOUCHER_DT, VOUCHER_CODE, DEPT_ID, 
					  BILL_TYPE, BILL_NO, BILL_ID, BILL_DT, 
					  PARTY_NAME, QUANTITY, NET_AMOUNT, CANCELLED,VOUCHER_TYPE )
			SELECT TOP 1 @CVMID,MEMO_DT,@CVOUCHERCODE,@CDEPTID
					,'BTF',MEMO_NO,MEMO_ID,MEMO_DT,'',0,0,CANCELLED,'CONTRA'
			FROM #V_PROCESS
			WHERE MEMO_ID=@CMEMOID
			
			SET @CSTEP = 570
			DELETE @VCHC
		    DELETE FROM #V_PROCESS WHERE MEMO_ID = @CMEMOID 
		END			 			

ENDPROC:
    
    SET @CSTEP = 580
    SELECT * FROM @VMC ORDER BY VM_ID
    SELECT * FROM @VDC ORDER BY VM_ID
    SELECT * FROM @ERRORS
    SELECT * FROM @VLINK ORDER BY VM_ID
    
    END TRY
	BEGIN CATCH
			SELECT 'STEP:- '+@CSTEP+' '+ERROR_MESSAGE()AS  ERRMSG
	END CATCH
	        
END
--END OF PROCEDURE - POSTACT_BTF
