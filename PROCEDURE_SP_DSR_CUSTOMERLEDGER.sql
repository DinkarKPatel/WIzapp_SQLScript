CREATE PROCEDURE SP_DSR_CUSTOMERLEDGER --CHANGE
(										--PARAMETERS
	@DFROMDT	DATETIME,				--1. REPORT FROM DT
	@DTODT		DATETIME,				--2. REPORT TO DT
	@CCUSTCODE	VARCHAR(20),				--3. CUSTOMER CODE 
	@BESTIMATEENABLED BIT = 1--CHANGE
)
--WITH ENCRYPTION
AS
BEGIN 
	
		DECLARE @NTEMPOPBAL NUMERIC(15,2),@NTEMPCLBAL NUMERIC(15,2), @NTOTDEBIT NUMERIC(15,2), 
				@NTOTCREDIT NUMERIC(15,2), @CXN_TYPE VARCHAR(5),@CXN_ID VARCHAR(25),
				@NOP_BAL NUMERIC(15,2), @NCL_BAL NUMERIC(15, 2)
		
		--IF OBJECT_ID('TEMPDB..#TMPCUSTBAL','U') IS NOT NULL
		--	DROP TABLE #TMPCUSTBAL
		--IF OBJECT_ID('TEMPDB..#TMPCUSTBAL1','U') IS NOT NULL
		--	DROP TABLE #TMPCUSTBAL1
		--IF OBJECT_ID('TEMPDB..#TMPCUSTBAL2','U') IS NOT NULL
		--	DROP TABLE #TMPCUSTBAL2
		
		SELECT *,(CASE WHEN XN_TYPE='WOD' THEN 1 WHEN XN_TYPE='SLS' THEN 2 ELSE 3 END) AS XN_ORDER
		INTO #TMPCUSTBAL FROM CUSTDBXN 
		WHERE CUSTOMER_CODE = @CCUSTCODE AND XN_DT BETWEEN @DFROMDT AND @DTODT
		AND (MEMO_TYPE IN (0,1,2) OR @BESTIMATEENABLED = 1)  --CHANGE
		ORDER BY XN_DT,XN_ORDER,XN_NO
		 
	--	ALTER TABLE #TMPCUSTBAL ADD ID INT IDENTITY
	 ALTER TABLE #TMPCUSTBAL ADD  ID INT

	 
				
	 ;WITH CTE AS
	(
	SELECT *,row_number() over (order by XN_DT,XN_NO,DR_AMOUNT,CR_AMOUNT) AS SR  FROM #TMPCUSTBAL
	)
	UPDATE  CTE SET ID=SR
								 
		
		SELECT @NOP_BAL=SUM(DR_AMOUNT - CR_AMOUNT)
		FROM CUSTDBXN	WHERE CUSTOMER_CODE = @CCUSTCODE
		AND XN_DT < @DFROMDT 
		AND (MEMO_TYPE IN (0,1,2) OR @BESTIMATEENABLED = 1)  --CHANGE
		
		SET @NOP_BAL=ISNULL(@NOP_BAL,0)
		
		SELECT @NTOTDEBIT=SUM(DR_AMOUNT),@NTOTCREDIT=SUM(CR_AMOUNT) 
		FROM #TMPCUSTBAL
		
		SET @NCL_BAL=ISNULL(@NOP_BAL,0)+ISNULL(@NTOTDEBIT,0)-ISNULL(@NTOTCREDIT,0)
		
		SET @NTEMPOPBAL=ISNULL(@NOP_BAL,0)
		
		IF EXISTS(SELECT 'U' FROM #TMPCUSTBAL)
		BEGIN
			SELECT * ,(SELECT @NOP_BAL+SUM(DR_AMOUNT-CR_AMOUNT)
					   FROM #TMPCUSTBAL B WHERE B.ID<=A.ID) AS [CB_BAL_RUNNING], @NTOTDEBIT AS [TOTAL_DEBIT], @NTOTCREDIT AS [TOTCREDIT],
					ISNULL(@NOP_BAL,0) AS [OPENING_BAL],ISNULL(@NCL_BAL,0) AS [CLOSING_BAL],CAST('' AS VARCHAR(50)) [CB_BAL_RUNNING_STR]
			INTO #TMPCUSTBAL1
			FROM #TMPCUSTBAL A
			order by A.ID 

			UPDATE #TMPCUSTBAL1 SET [CB_BAL_RUNNING_STR]=CONVERT(VARCHAR(50),ABS([CB_BAL_RUNNING]))+(CASE WHEN [CB_BAL_RUNNING]<0 THEN 'Cr' ELSE 'Dr' END)

			SELECT *
			FROM #TMPCUSTBAL1 A
			order by A.ID 

		END
		ELSE
		BEGIN
		;WITH OP_ONLY
		AS
		(
				SELECT @NOP_BAL AS [CB_BAL_RUNNING], @NTOTDEBIT AS [TOTAL_DEBIT], @NTOTCREDIT AS [TOTCREDIT],
				ISNULL(@NOP_BAL,0) AS [OPENING_BAL],ISNULL(@NCL_BAL,0) AS [CLOSING_BAL],CAST('' AS VARCHAR(50)) [CB_BAL_RUNNING_STR]
		)
		,OP
		AS
		(
			SELECT * FROM CUSTDBXN WHERE 1=2
		)
		SELECT B.*,A.* 
		INTO #TMPCUSTBAL2
		FROM  OP_ONLY A
		LEFT OUTER JOIN OP B ON 1=1

		UPDATE #TMPCUSTBAL2 SET [CB_BAL_RUNNING_STR]=CONVERT(VARCHAR(50),ABS([CB_BAL_RUNNING]))+(CASE WHEN [CB_BAL_RUNNING]<0 THEN 'Cr' ELSE 'Dr' END)

		SELECT *
		FROM #TMPCUSTBAL2 A
--		order by A.ID 

		END

		
END
--******************************************* END OF PROCEDURE SP_DSR_CUSTOMERLEDGER




/*
CREATE PROCEDURE SP_DSR_CUSTOMERLEDGER --CHANGE
(										--PARAMETERS
	@DFROMDT	DATETIME,				--1. REPORT FROM DT
	@DTODT		DATETIME,				--2. REPORT TO DT
	@CCUSTCODE	VARCHAR(20),				--3. CUSTOMER CODE 
	@BESTIMATEENABLED BIT = 1--CHANGE
)
--WITH ENCRYPTION
AS
BEGIN 
	
		DECLARE @NTEMPOPBAL NUMERIC(15,2),@NTEMPCLBAL NUMERIC(15,2), @NTOTDEBIT NUMERIC(15,2), 
				@NTOTCREDIT NUMERIC(15,2), @CXN_TYPE VARCHAR(5),@CXN_ID VARCHAR(25),
				@NOP_BAL NUMERIC(15,2), @NCL_BAL NUMERIC(15, 2)
		
		IF OBJECT_ID('TEMPDB..#TMPCUSTBAL','U') IS NOT NULL
			DROP TABLE #TMPCUSTBAL
		IF OBJECT_ID('TEMPDB..#TMPCUSTBAL1','U') IS NOT NULL
			DROP TABLE #TMPCUSTBAL1
		
		SELECT *,(CASE WHEN XN_TYPE='WOD' THEN 1 WHEN XN_TYPE='SLS' THEN 2 ELSE 3 END) AS XN_ORDER
		INTO #TMPCUSTBAL FROM CUSTDBXN 
		WHERE CUSTOMER_CODE = @CCUSTCODE AND XN_DT BETWEEN @DFROMDT AND @DTODT
		AND (MEMO_TYPE IN (0,1,2) OR @BESTIMATEENABLED = 1)  --CHANGE
		ORDER BY XN_DT,XN_ORDER,XN_NO
		 
	--	ALTER TABLE #TMPCUSTBAL ADD ID INT IDENTITY
	 ALTER TABLE #TMPCUSTBAL ADD  ID INT

				
	 ;WITH CTE AS
	(
	SELECT *,row_number() over (order by XN_DT,XN_NO,DR_AMOUNT,CR_AMOUNT) AS SR  FROM #TMPCUSTBAL
	)
	UPDATE  CTE SET ID=SR
								 
		
		SELECT @NOP_BAL=SUM(DR_AMOUNT - CR_AMOUNT)
		FROM CUSTDBXN	WHERE CUSTOMER_CODE = @CCUSTCODE
		AND XN_DT < @DFROMDT 
		AND (MEMO_TYPE IN (0,1,2) OR @BESTIMATEENABLED = 0)  --CHANGE
		
		SET @NOP_BAL=ISNULL(@NOP_BAL,0)
		
		SELECT @NTOTDEBIT=SUM(DR_AMOUNT),@NTOTCREDIT=SUM(CR_AMOUNT) 
		FROM #TMPCUSTBAL
		
		SET @NCL_BAL=ISNULL(@NOP_BAL,0)+ISNULL(@NTOTDEBIT,0)-ISNULL(@NTOTCREDIT,0)
		
		SET @NTEMPOPBAL=ISNULL(@NOP_BAL,0)
		
		SELECT * ,(SELECT @NOP_BAL+SUM(DR_AMOUNT-CR_AMOUNT)
				   FROM #TMPCUSTBAL B WHERE B.ID<=A.ID) AS [CB_BAL_RUNNING], @NTOTDEBIT AS [TOTAL_DEBIT], @NTOTCREDIT AS [TOTCREDIT],
				ISNULL(@NOP_BAL,0) AS [OPENING_BAL],ISNULL(@NCL_BAL,0) AS [CLOSING_BAL],CAST('' AS VARCHAR(50)) [CB_BAL_RUNNING_STR]
		INTO #TMPCUSTBAL1
		FROM #TMPCUSTBAL A
		order by A.ID 

		UPDATE #TMPCUSTBAL1 SET [CB_BAL_RUNNING_STR]=CONVERT(VARCHAR(50),ABS([CB_BAL_RUNNING]))+(CASE WHEN [CB_BAL_RUNNING]<0 THEN 'Cr' ELSE 'Dr' END)

		SELECT *
		FROM #TMPCUSTBAL1 A
		order by A.ID 
END
--******************************************* END OF PROCEDURE SP_DSR_CUSTOMERLEDGER


*/