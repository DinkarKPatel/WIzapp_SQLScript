create PROCEDURE SP_HOLDBACK_PENDING_FOR_ISSUE
(
	@CFM_DT DATETIME='' ,
	@CTO_DT DATETIME='',
	@CCUST_CODE VARCHAR(100)='',
	@CMEMO_ID VARCHAR(100)='',
	@CDEPT_ID CHAR(4)='',
	@cUSER_CODE	VARCHAr(10)='',
	@CAGENCY_CODE	VARCHAr(10)=''
)
--WITH ENCRYPTION
AS
BEGIN      
--(dinkar) Replace  left(memoid,2) to Location_code 

--select @@SPID as sp into temp



--drop table ISSUEDFROMAPPROVED
--SELECT @@SPID as spid INTO ISSUEDFROMAPPROVED 


		--IF OBJECT_ID('TEMPDB..#LOGGEDUSER','U') IS NOT NULL
	 --       DROP TABLE #LOGGEDUSER

		--	CREATE TABLE #LOGGEDUSER (USERNAME VARCHAR(20))


		--	 DECLARE @cTempTableName VARCHAR(100),@cCMD NVARCHAR(MAX)
      
  --    SET @cTempTableName='##'+DB_NAME()+'_TMP_LOGIN_' + LTRIM(RTRIM(CAST(@@SPID AS NVARCHAR)))

	 -- SET @cCMD=N'IF OBJECT_ID(''TEMPDB..'+@cTempTableName+''',''U'') IS NOT NULL
		--BEGIN
		--	SELECT  LOGIN_NAME FROM '+@cTempTableName+
		--' 
		--END
		--ELSE 
		--SELECT  '''' AS LOGIN_NAME 
		--'
		--PRINT @cCMD
	 -- INSERT INTO #LOGGEDUSER
	 -- EXEC SP_EXECUTESQL @cCMD
	 -- if @cUSER_CODE=''
	 -- BEGIN
		--SELECT @cUSER_CODE=USER_CODE FROM USERS(NOLOCK) WHERE username in(select USERNAME from #LOGGEDUSER)
	 -- END
	 -- SET @cUSER_CODE=ISNULL(@cUSER_CODE,'')

		IF OBJECT_ID('TEMPDB..#NOTISSUED','U') IS NOT NULL
			DROP TABLE #NOTISSUED


		SELECT B.HBD_MEMO_ID AS MEMO_ID,B.HBD_ROW_ID AS  ROW_ID,B.REF_CMD_ROW_ID,RIGHT(B.HBD_MEMO_ID,10) MEMO_NO,
		CAST(B.DELIVERED AS BIT) DELIVERED ,A.REMARKS,B.JOB_CODE ,A.LAST_UPDATE,B.DELIVERY_DT,
				B.PRODUCT_CODE,A.CUSTOMER_CODE,A.MEMO_DT,MODE,(CASE WHEN MODE=2 THEN 'REPAIR ITEMS' ELSE 'SOLD ITEMS' END) AS HOLD_TYPE ,
				A.BIN_ID,
				CAST(0 AS NUMERIC(10,2)) AS JOB_RATE,
				HD.JOB_RATE AS CHARGED_FROM_CUSTOMER,
				ISNULL(hd.TOTAL_PAID_TO_VENDOR,0) AS TOTAL_PAID_TO_VENDOR,
				CAST(0 AS NUMERIC(10,2)) as DIFFERENCES,
				CAST(0 AS INT) AS REISSUE,B.PRODUCT_CODE AS CMD_PRODUCT_CODE
		INTO #NOTISSUED
		FROM ITEM_STATUS B (NOLOCK)
		JOIN HOLD_BACK_DELIVER_MST A (NOLOCK) ON A.MEMO_ID=B.HBD_MEMO_ID
		JOIN HOLD_BACK_DELIVER_DET HD (NOLOCK) ON A.MEMO_ID=HD.MEMO_ID AND B.HBD_ROW_ID=HD.row_id
		JOIN PMT01106 PMT (NOLOCK) ON B.PRODUCT_CODE=PMT.PRODUCT_CODE AND A.BIN_ID =PMT.BIN_ID
		WHERE 1=2

		
    IF OBJECT_ID ('TEMPDB..#ISSUEDFROMAPPROVED','U') IS NOT NULL
	   begin
	     
		 SET @CMEMO_ID='LATER'

		 INSERT INTO #NOTISSUED(MEMO_ID,ROW_ID,REF_CMD_ROW_ID, MEMO_NO,DELIVERED ,A.REMARKS,B.JOB_CODE ,A.LAST_UPDATE,B.DELIVERY_DT,
				PRODUCT_CODE,CUSTOMER_CODE,MEMO_DT,MODE, HOLD_TYPE ,BIN_ID,JOB_RATE,CHARGED_FROM_CUSTOMER,TOTAL_PAID_TO_VENDOR,DIFFERENCES,
				REISSUE,CMD_PRODUCT_CODE)

		SELECT B.HBD_MEMO_ID AS MEMO_ID,B.HBD_ROW_ID AS  ROW_ID,B.REF_CMD_ROW_ID,RIGHT(B.HBD_MEMO_ID,10) MEMO_NO,
		CAST(B.DELIVERED AS BIT) DELIVERED ,A.REMARKS,HD.JOB_CODE ,A.LAST_UPDATE,B.DELIVERY_DT,
				B.PRODUCT_CODE,A.CUSTOMER_CODE,A.MEMO_DT,MODE,(CASE WHEN MODE=2 THEN 'REPAIR ITEMS' ELSE 'SOLD ITEMS' END) AS HOLD_TYPE ,
				A.BIN_ID,
				CAST(0 AS NUMERIC(10,2)) AS JOB_RATE,
				HD.JOB_RATE AS CHARGED_FROM_CUSTOMER,
				ISNULL(hd.TOTAL_PAID_TO_VENDOR,0) AS TOTAL_PAID_TO_VENDOR,
				CAST(0 AS NUMERIC(10,2)) as DIFFERENCES,
				CASE WHEN ISNULL(B.ISSUE_ID,'')<>'' THEN 1 ELSE 0 END REISSUE,TMP.CMD_PRODUCT_CODE
		FROM ITEM_STATUS B (NOLOCK)
		JOIN HOLD_BACK_DELIVER_MST A (NOLOCK) ON A.MEMO_ID=B.HBD_MEMO_ID
		JOIN HOLD_BACK_DELIVER_DET HD (NOLOCK) ON A.MEMO_ID=HD.MEMO_ID AND B.HBD_ROW_ID=HD.row_id
		JOIN PMT01106 PMT (NOLOCK) ON B.PRODUCT_CODE=PMT.PRODUCT_CODE AND A.BIN_ID =PMT.BIN_ID AND PMT.DEPT_ID =@CDEPT_ID
		JOIN #ISSUEDFROMAPPROVED TMP ON B.HBD_ROW_ID =TMP.ROW_ID
		WHERE ISNULL(B.DELIVER_MEMO_ID,'') ='' 
		AND (ISNULL(B.ISSUE_ID,'')='' OR ISNULL(B.RECEIPT_ID,'')<>'')
		--and left(a.memo_id,2)=@CDEPT_ID
		AND PMT.QUANTITY_IN_STOCK>0

	   end 
	   else 
	   begin
	    
		INSERT INTO #NOTISSUED(MEMO_ID,ROW_ID,REF_CMD_ROW_ID, MEMO_NO,DELIVERED ,A.REMARKS,B.JOB_CODE ,A.LAST_UPDATE,B.DELIVERY_DT,
				PRODUCT_CODE,CUSTOMER_CODE,MEMO_DT,MODE, HOLD_TYPE ,BIN_ID,JOB_RATE,CHARGED_FROM_CUSTOMER,TOTAL_PAID_TO_VENDOR,DIFFERENCES,REISSUE,CMD_PRODUCT_CODE)

		SELECT B.HBD_MEMO_ID AS MEMO_ID,B.HBD_ROW_ID AS  ROW_ID,B.REF_CMD_ROW_ID,RIGHT(B.HBD_MEMO_ID,10) MEMO_NO,
		CAST(B.DELIVERED AS BIT) DELIVERED ,A.REMARKS,HD.JOB_CODE ,A.LAST_UPDATE,B.DELIVERY_DT,
				B.PRODUCT_CODE,A.CUSTOMER_CODE,A.MEMO_DT,MODE,(CASE WHEN MODE=2 THEN 'REPAIR ITEMS' ELSE 'SOLD ITEMS' END) AS HOLD_TYPE ,
				A.BIN_ID,
				CAST(0 AS NUMERIC(10,2)) AS JOB_RATE,
				HD.JOB_RATE AS CHARGED_FROM_CUSTOMER,
				ISNULL(hd.TOTAL_PAID_TO_VENDOR,0) AS TOTAL_PAID_TO_VENDOR,
				CAST(0 AS NUMERIC(10,2)) as DIFFERENCES,
				CASE WHEN ISNULL(B.ISSUE_ID,'')<>'' THEN 1 ELSE 0 END REISSUE,B.PRODUCT_CODE AS CMD_PRODUCT_CODE
		FROM ITEM_STATUS B (NOLOCK)
		JOIN HOLD_BACK_DELIVER_MST A (NOLOCK) ON A.MEMO_ID=B.HBD_MEMO_ID
		JOIN HOLD_BACK_DELIVER_DET HD (NOLOCK) ON A.MEMO_ID=HD.MEMO_ID AND B.HBD_ROW_ID=HD.row_id
		JOIN PMT01106 PMT (NOLOCK) ON B.PRODUCT_CODE=PMT.PRODUCT_CODE AND A.BIN_ID =PMT.BIN_ID AND PMT.DEPT_ID=@CDEPT_ID
		WHERE ISNULL(B.DELIVER_MEMO_ID,'') ='' 
		AND (ISNULL(B.ISSUE_ID,'')='' OR ISNULL(B.RECEIPT_ID,'')<>'')
		--and left(a.memo_id,2)=@CDEPT_ID
		AND PMT.QUANTITY_IN_STOCK>0
		--AND A.memo_id='H10112200000H1V1-00096'
		--SELECT 'RAMAN'
     
	 end 
		

		
		UPDATE A SET JOB_RATE=agency_jobs.job_rate from #NOTISSUED a
		join agency_jobs (nolock) on a.JOB_CODE =agency_jobs.job_code 
		where agency_code=@CAGENCY_CODE


		UPDATE A SET JOB_RATE=ALT.VENDOR_RATE FROM #NOTISSUED A
		JOIN SKU (NOLOCK) ON  A.PRODUCT_CODE=SKU.product_code
		JOIN ARTICLE ART (NOLOCK) ON SKU.article_code =ART.ARTICLE_CODE 
		JOIN SECTIOND SD (NOLOCK) ON SD.sub_section_code =ART.sub_section_code
		JOIN SECTIONM SM (NOLOCK) ON SM.section_code=SD.section_code 
		JOIN ALTERATIONSETUP ALT (NOLOCK) ON ALT.JOB_CODE =A.JOB_CODE 
		AND ALT.SUB_SECTION_CODE =SD.sub_section_code AND ALT.SECTION_CODE =SM.section_code 
		AND a.customer_code =ALT.DEPT_ID and isnull(JOB_RATE,0)=0



		update #NOTISSUED set DIFFERENCES=(isnull(CHARGED_FROM_CUSTOMER,0)-ISNULL(TOTAL_PAID_TO_VENDOR,0))-isnull(JOB_RATE,0)


		IF OBJECT_ID('TEMPDB..#TMPPENDINGFORISSUE','U') IS NOT NULL
			DROP TABLE #TMPPENDINGFORISSUE
			
		  
			;WITH CMM
			AS
			(
				SELECT issue.ROW_ID, CMM.CM_ID,CMM.CM_NO, CMM.CM_DT ,
				CMM.SUBTOTAL,CMM.NET_AMOUNT
				,CMM.CUSTOMER_CODE,ISNULL(CUST.CUSTOMER_FNAME,'') + ' '+ ISNULL(CUST .CUSTOMER_LNAME,'')  AS CUSTOMER_NAME,USER_CUSTOMER_CODE
				,CMM.USER_CODE,CMM.ROUND_OFF,CMM.MEMO_TYPE,CANCELLED,CMM.PARTY_TYPE,CMM.AC_CODE,CMD.HOLD_FOR_ALTER,CMD.DISCOUNT_PERCENTAGE,CMD.DISCOUNT_AMOUNT
				,CMD.MRP,CMM.FIN_YEAR,CMD.PRODUCT_CODE,EMP.emp_name,CUST.mobile,AC_NAME,ISSUE.CMD_PRODUCT_CODE
				FROM #NOTISSUED ISSUE 
				JOIN CMD01106 CMD (NOLOCK) ON ISSUE.REF_CMD_ROW_ID=CMD.ROW_ID
				JOIN CMM01106 CMM (NOLOCK) ON CMM.CM_ID =CMD.CM_ID 
				LEFT OUTER JOIN CUSTDYM CUST (NOLOCK) ON CUST.CUSTOMER_CODE = isnull(CMM.CUSTOMER_CODE,ISSUE.customer_code)
				LEFT OUTER JOIN EMPLOYEE EMP (NOLOCK)ON CMD.EMP_CODE = EMP.EMP_CODE 
				LEFT OUTER JOIN EMPLOYEE EMP1  (NOLOCK) ON CMD.EMP_CODE1 = EMP1.EMP_CODE     
				LEFT OUTER JOIN EMPLOYEE EMP2  (NOLOCK) ON CMD.EMP_CODE2 = EMP2.EMP_CODE 
				left JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE =CMM.AC_CODE 
				WHERE (@CMEMO_ID <>'' OR  CMM.CM_DT BETWEEN @CFM_DT AND @CTO_DT ) --CMM.CM_DT BETWEEN @CFM_DT AND @CTO_DT 
				AND (@CCUST_CODE='' OR CMM.CUSTOMER_CODE=@CCUST_CODE)
				-- AND (@CDEPT_ID='' OR LEFT (CMM.CM_NO,2)=@CDEPT_ID)
				AND (@CMEMO_ID IN('','LATER') OR CMM.CM_ID LIKE @CMEMO_ID)
				AND isnull(CMM.CANCELLED,0)=0 
				UNION ALL
				SELECT CMD.ROW_ID, ISSUE.MEMO_ID CM_ID,ISSUE.MEMO_NO CM_NO,ISSUE.memo_dt  CM_DT ,
				CMM.TOTAL_AMOUNT  SUBTOTAL,CMM.TOTAL_AMOUNT NET_AMOUNT
				,CMM.CUSTOMER_CODE,ISNULL(CUST.CUSTOMER_FNAME,'') + ' '+ ISNULL(CUST .CUSTOMER_LNAME,'')  AS CUSTOMER_NAME,USER_CUSTOMER_CODE
				,'' USER_CODE,0 ROUND_OFF,1 MEMO_TYPE,CANCELLED,1 PARTY_TYPE,'' AC_CODE,1 HOLD_FOR_ALTER,0 DISCOUNT_PERCENTAGE,0 DISCOUNT_AMOUNT
				,cmd.JOB_RATE MRP,CMM.FIN_YEAR,CMD.PRODUCT_CODE,'' emp_name,CUST.mobile,'' AC_NAME,ISSUE.CMD_PRODUCT_CODE
				FROM #NOTISSUED ISSUE 
				JOIN hold_back_deliver_det CMD (NOLOCK) ON ISSUE.ROW_ID=CMD.ROW_ID
				JOIN hold_back_deliver_mst CMM (NOLOCK) ON CMM.memo_id =CMD.memo_id
				LEFT OUTER JOIN CUSTDYM CUST (NOLOCK) ON CUST.CUSTOMER_CODE = isnull(CMM.CUSTOMER_CODE,ISSUE.customer_code)
				WHERE (@CMEMO_ID <>'' OR  CMM.memo_dt BETWEEN @CFM_DT AND @CTO_DT ) --CMM.CM_DT BETWEEN @CFM_DT AND @CTO_DT 
				AND (@CCUST_CODE='' OR CMM.CUSTOMER_CODE=@CCUST_CODE)
				-- AND (@CDEPT_ID='' OR LEFT (CMM.CM_NO,2)=@CDEPT_ID)
				AND (@CMEMO_ID IN('','LATER') OR CMM.memo_id LIKE @CMEMO_ID)
				AND isnull(CMM.CANCELLED,0)=0 
				and isnull(cmd.ref_cmd_row_id,'')=''
			)
			
				SELECT CMM.CM_ID,CMM.CM_NO, CMM.CM_DT ,
                 CMM.SUBTOTAL,CMM.NET_AMOUNT
				 ,CMM.CUSTOMER_CODE,CMM.CUSTOMER_NAME
				 ,USER_CUSTOMER_CODE 
				 ,CANCELLED,
				  CMM.USER_CODE,CMM.ROUND_OFF,CMM.MEMO_TYPE,
		          ISSUE .REF_CMD_ROW_ID,ISSUE.ROW_ID AS REF_HBD_ROW_ID,ISSUE .MEMO_NO AS HBD_MEMO_NO,
		          CMM.PARTY_TYPE,CMM.AC_CODE,CMM.AC_NAME ,
				  ISSUE.BIN_ID,B1.BIN_NAME ,
			      ISSUE.MEMO_ID,DELIVERED,ISSUE.REMARKS,ISSUE.LAST_UPDATE,DELIVERY_DT ,JOB_NAME,ISSUE.JOB_CODE
				  --,JOB_CODE,HD.LAST_UPDATE,HD.REMARKS,DELIVERY_DT
				 ,ISSUE.PRODUCT_CODE 
				 ,ISNULL(CMM.HOLD_FOR_ALTER,0) AS CHKDELEVER ,
				 CMM.DISCOUNT_PERCENTAGE,CMM.DISCOUNT_AMOUNT, 
				 CAST('1.00' AS NUMERIC(10,2)) AS QUANTITY,CMM.MRP,        
				 ART.ARTICLE_CODE, ART.ARTICLE_NO, ART.ARTICLE_NAME, P1.PARA1_CODE,      
				 PARA1_NAME, P2.PARA2_CODE,PARA2_NAME,P3.PARA3_CODE,PARA3_NAME,UOM_NAME,         
				 CODING_SCHEME,CONVERT(NUMERIC(10,2),0) AS QUANTITY_IN_STOCK,SKU.PURCHASE_PRICE,    
				 SKU.WS_PRICE,   M.SECTION_NAME, D.SUB_SECTION_NAME,      
				 P4.PARA4_CODE,P5.PARA5_CODE,P6.PARA6_CODE,      
				 PARA4_NAME,PARA5_NAME,PARA6_NAME,UOM.UOM_CODE,ISNULL(UOM.UOM_TYPE,0) AS [UOM_TYPE],      
				 ART.DT_CREATED AS [ART_DT_CREATED],P3.DT_CREATED AS [PARA3_DT_CREATED],SKU.DT_CREATED AS [SKU_DT_CREATED],      
				 ART.STOCK_NA,CMM.EMP_NAME ,
				 --JOBRATE AS JOB_RATE,
				 CMM.FIN_YEAR ,CMM.CUSTOMER_NAME AS CUST_NAME,CMM.MOBILE,
				 ART.ALIAS AS ARTICLE_ALIAS,HOLD_TYPE,issue.memo_no AS SOURCE_MEMO_NO,issue.memo_id AS SOURCE_MEMO_ID ,
				 ISSUE.JOB_RATE,
				 JOB_NAME as HOLD_BACK_JOB_NAME,ISSUE.JOB_CODE AS HBD_JOB_CODE,
				 CHARGED_FROM_CUSTOMER,TOTAL_PAID_TO_VENDOR,
				 DIFFERENCES,CMM.CMD_PRODUCT_CODE,CMM.PRODUCT_CODE AS OLD_PRODUCT_CODE,ISSUE.MEMO_NO,
				 ISSUE .REISSUE
		  INTO #TMPPENDINGFORISSUE
		  FROM #NOTISSUED ISSUE 
		  JOIN CMM ON ISSUE.ROW_ID=CMM.ROW_ID
		  JOIN BIN B1 (NOLOCK) ON B1.BIN_ID =ISSUE.BIN_ID 
          JOIN SKU (NOLOCK) SKU ON SKU.PRODUCT_CODE =ISSUE.PRODUCT_CODE 
		  JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =SKU.ARTICLE_CODE 
		  JOIN SECTIOND D (NOLOCK) ON D.SUB_SECTION_CODE=ART.SUB_SECTION_CODE 
		  JOIN SECTIONM M (NOLOCK) ON M.SECTION_CODE =D.SECTION_CODE
		  JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE =SKU.PARA1_CODE 
		  JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE =SKU.PARA2_CODE 
		  JOIN PARA3 P3 (NOLOCK) ON P3.PARA3_CODE =SKU.PARA3_CODE 
		  JOIN PARA4 P4 (NOLOCK) ON P4.PARA4_CODE =SKU.PARA4_CODE 
		  JOIN PARA5 P5 (NOLOCK) ON P5.PARA5_CODE =SKU.PARA5_CODE 
		  JOIN PARA6 P6 (NOLOCK) ON P6.PARA6_CODE =SKU.PARA6_CODE 
		  JOIN UOM(NOLOCK) ON UOM.UOM_CODE =ART.UOM_CODE   
		  JOIN JOBS L (NOLOCK) ON ISSUE.JOB_CODE=L.JOB_CODE 
		  --left JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE =CMM.AC_CODE 
		  --LEFT OUTER JOIN CUSTDYM CUST (NOLOCK) ON CUST.CUSTOMER_CODE = isnull(CMM.CUSTOMER_CODE,ISSUE.customer_code)
          --WHERE (@CMEMO_ID <>'' OR  CMM.CM_DT BETWEEN @CFM_DT AND @CTO_DT ) --CMM.CM_DT BETWEEN @CFM_DT AND @CTO_DT 
		 -- AND (@CCUST_CODE='' OR CMM.CUSTOMER_CODE=@CCUST_CODE)
		 ---- AND (@CDEPT_ID='' OR LEFT (CMM.CM_NO,2)=@CDEPT_ID)
		 -- AND (@CMEMO_ID IN('','LATER') OR CMM.CM_ID LIKE @CMEMO_ID)
		 -- AND isnull(CMM.CANCELLED,0)=0 
		 
		
		
	 IF OBJECT_ID ('TEMPDB..#ISSUEDFROMAPPROVED','U') IS  NULL
	   begin  
		  SELECT SOURCE_MEMO_NO,SOURCE_MEMO_ID,CMM.CM_NO,CONVERT(VARCHAR,CMM.CM_DT,105) AS CM_DT,CMM.CM_ID,
		    QUANTITY=SUM(CMM.QUANTITY)
		   ,CMM.SUBTOTAL,CMM.NET_AMOUNT
		   ,CMM.CUSTOMER_CODE,CMM.CUSTOMER_NAME
		   ,USER_CUSTOMER_CODE 
		   ,CANCELLED
		   ,CMM.USER_CODE
		   ,CMM.FIN_YEAR,CMM.ROUND_OFF,CMM.MEMO_TYPE,CMM.REMARKS
		   ,CMM.PARTY_TYPE,CMM.AC_CODE,CMM.AC_NAME ,CMM.BIN_ID,CMM.BIN_NAME ,HOLD_TYPE,CMM.MEMO_NO
          FROM #TMPPENDINGFORISSUE CMM
          GROUP BY SOURCE_MEMO_NO,SOURCE_MEMO_ID,CMM.CM_NO,CMM.CM_DT,CMM.CM_ID
		   ,CMM.SUBTOTAL,CMM.NET_AMOUNT
		   ,CMM.CUSTOMER_CODE,CMM.CUSTOMER_NAME
		   ,USER_CUSTOMER_CODE 
		   ,CMM.CANCELLED
		   ,CMM.USER_CODE
		   ,CMM.FIN_YEAR,CMM.ROUND_OFF,CMM.MEMO_TYPE,CMM.REMARKS
		   ,CMM.PARTY_TYPE,CMM.AC_CODE,CMM.AC_NAME ,CMM.BIN_ID,CMM.BIN_NAME,HOLD_TYPE,CMM.MEMO_NO
		 END 
		   
		 SELECT  * FROM #TMPPENDINGFORISSUE
		   
END
