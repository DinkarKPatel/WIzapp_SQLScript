CREATE PROCEDURE SP_PROCESS_XNRECONLOG
@NMODE INT
--WITH ENCRYPTION
AS  
BEGIN  
       
	 DECLARE @CERRORMSG VARCHAR(1000), @CCURDEPTID CHAR(2), @CHODEPTID CHAR(2),@NSTEP INT, 
			 @CCMD NVARCHAR(MAX),@BPROCEED BIT, @CTARGETTABLENAME VARCHAR(100),@BDONOTSEND BIT,
			 @NRECCOUNT INT,@CTEMPTARGETTABLENAME VARCHAR(500),@CXNTYPE	VARCHAR(MAX),@CDEPTID VARCHAR(5)
	 
	 
	 SET @NSTEP=10
	 	    
	 SELECT @CERRORMSG='',@BPROCEED=1,@CXNTYPE='DOCXNRACK'
	   
	 SELECT TOP 1 @CCURDEPTID = [VALUE] FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='LOCATION_ID'  
	 
	 SELECT TOP 1 @CHODEPTID = [VALUE] FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='HO_LOCATION_ID'  
	   
	 DECLARE @TXNSSENDINFO TABLE (ORG_TABLENAME VARCHAR(50),TMP_TABLENAME VARCHAR(50),XN_ID VARCHAR(MAX),  
			 DEPT_ID VARCHAR(10),MEMO_LAST_UPDATE DATETIME)  
	 
	 SET @NSTEP=20
	 

BEGIN TRY

	 IF @NMODE=1 AND @CCURDEPTID<>@CHODEPTID
		GOTO LBLLAST

	 IF @NMODE=2 AND @CCURDEPTID=@CHODEPTID
		GOTO LBLLAST

	 IF @NMODE=3 AND @CCURDEPTID<>@CHODEPTID
		GOTO LBLLAST
			 
	 IF @NMODE IN (2,3)
		GOTO LBLMERGE
		
LBLSEND:  

	 SELECT TOP 1 @CDEPTID=DEPT_ID  FROM XNRECON_LOG (NOLOCK) WHERE SENT_TO_LOC=0
	 
	 IF ISNULL(@CDEPTID,'')=''
		GOTO LBLLAST
	 
	 SET @NSTEP=30	 
 	 PRINT 'START SEND ROHIT' 
 	 SET @CTARGETTABLENAME = 'XNRECON_LOG'
 	 PRINT @CTARGETTABLENAME  
 	 SET @CTEMPTARGETTABLENAME = 'TMP_'+@CTARGETTABLENAME+'_'+LTRIM(RTRIM(STR(@@SPID))) 
 	 PRINT @CTEMPTARGETTABLENAME  
 	 
 	 SET @NSTEP=40
 	 SET @CCMD =N'IF OBJECT_ID('''+@CTEMPTARGETTABLENAME+ ''',''U'') IS NOT NULL 
 					DROP TABLE ' +@CTEMPTARGETTABLENAME
 	 EXEC SP_EXECUTESQL @CCMD  
 	 
	 SET @CCMD =N'SELECT DEPT_ID,RECON_ID INTO '+@CTEMPTARGETTABLENAME+ 
				 ' FROM  XNRECON_LOG'
 
	 PRINT @CCMD  
	 EXEC SP_EXECUTESQL @CCMD  
	 
	 SET @NSTEP=50 	  
	 INSERT @TXNSSENDINFO(ORG_TABLENAME,TMP_TABLENAME,XN_ID,DEPT_ID ,MEMO_LAST_UPDATE ) 
	 VALUES (@CTARGETTABLENAME,@CTEMPTARGETTABLENAME ,'XNRECON','',GETDATE())  

	 GOTO LBLLAST  
	    
LBLMERGE:  
	 
	 BEGIN TRANSACTION
	 
	 IF @NMODE=3
		GOTO LBLSETFLAG
				 
	 SET @CCMD=N'UPDATE XNRECON_LOG SET RECON_ID=B.RECON_ID FROM TMP_DOCXNRACK_XNRECON_LOG_XNRECON B
				 WHERE B.DEPT_ID=XNRECON_LOG.DEPT_ID'
	 PRINT @CCMD
	 EXEC SP_EXECUTESQL @CCMD
	 
	 SET @CCMD=N' DROP TABLE TMP_DOCXNRACK_XNRECON_LOG_XNRECON'
	 EXEC SP_EXECUTESQL @CCMD
	 
	 GOTO LBLLAST

LBLSETFLAG:
	UPDATE XNRECON_LOG SET SENT_TO_LOC=1
	GOTO LBLLAST
	
END TRY


BEGIN CATCH
	SELECT @CERRORMSG='PROCEDURE SP_PROCESS_XNRECONLOG : STEP: '+STR(@NSTEP)+' LINE NO. :'+
	ISNULL(LTRIM(RTRIM(STR(ERROR_LINE()))),'NULL LINE')+'MSG :'+ISNULL(ERROR_MESSAGE(),'NULL MSG')
			
	GOTO LBLLAST
END CATCH
	     
LBLLAST:  
   
   IF @@TRANCOUNT>0
   BEGIN
		IF ISNULL(@CERRORMSG,'')=''
			COMMIT TRANSACTION
		ELSE
			ROLLBACK		
   END
   
   IF @NMODE=1 AND ISNULL(@CERRORMSG,'')=''
		SELECT * FROM @TXNSSENDINFO
   ELSE
		SELECT 'DOCXNRACK' AS MEMO_ID,ISNULL(@CERRORMSG,'') AS ERRMSG
END  
--********************************************** END OF PROCEDURE SP_PROCESS_XNRECONLOG
