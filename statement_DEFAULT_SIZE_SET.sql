
IF EXISTS (SELECT  TOP 1 'U' FROM SIZE_SET_MST)
return

IF OBJECT_ID('TEMPDB..#SIZE_SET_MST','U') IS NOT NULL
DROP TABLE #SIZE_SET_MST
IF OBJECT_ID('TEMPDB..#SIZE_SET_DET','U') IS NOT NULL
DROP TABLE #SIZE_SET_DET

;WITH PARA2_SET
AS
(
	SELECT DISTINCT PARA2_SET FROM PARA2 WHERE ISNULL(PARA2_SET,'')<>''
)
SELECT A.para2_set AS SIZE_SET_NAME,'DEF'+CONVERT(VARCHAR(5),ROW_NUMBER() OVER (ORDER BY  A.para2_set)) AS SIZE_SET_CODE
INTO #SIZE_SET_MST
FROM PARA2_SET A
LEFT OUTER JOIN SIZE_SET_MST B ON B.SIZE_SET_NAME=A.para2_set
WHERE B.SIZE_SET_NAME IS NULL


;WITH PARA2_SET_DET
AS
(
	SELECT DISTINCT PARA2_SET,para2_code FROM PARA2 WHERE ISNULL(PARA2_SET,'')<>''
)
SELECT DISTINCT A.para2_code,B.SIZE_SET_CODE  AS SIZE_SET_CODE--,NEWID() AS ROW_ID,ROW_NUMBER() OVER (PARTITION BY  A.para2_set ORDER BY  A.para2_set)  AS SIZE_ORDER
INTO #SIZE_SET_DET
FROM PARA2_SET_DET A
JOIN #SIZE_SET_MST B ON B.SIZE_SET_NAME=A.para2_set


IF EXISTS(SELECT TOP 1 'U' FROM #SIZE_SET_MST)
BEGIN
INSERT SIZE_SET_MST	( SIZE_SET_CODE, SIZE_SET_INACTIVE, SIZE_SET_LAST_UPDATE, SIZE_SET_NAME )  
SELECT 	  SIZE_SET_CODE, 0 AS SIZE_SET_INACTIVE,GETDATE() SIZE_SET_LAST_UPDATE, SIZE_SET_NAME 
FROM #SIZE_SET_MST

INSERT SIZE_SET_DET	( PARA2_CODE, ROW_ID, SIZE_ORDER, SIZE_SET_CODE, SIZE_SET_LAST_UPDATE )  
SELECT 	  A.PARA2_CODE,NEWID() AS ROW_ID,ROW_NUMBER() OVER (PARTITION BY  A.SIZE_SET_CODE ORDER BY  A.SIZE_SET_CODE)  AS SIZE_ORDER, A.SIZE_SET_CODE,GETDATE() SIZE_SET_LAST_UPDATE 
FROM #SIZE_SET_DET A
JOIN #SIZE_SET_MST B ON B.SIZE_SET_CODE=A.SIZE_SET_CODE
--WHERE SIZE_SET_CODE IN (SELECT SIZE_SET_CODE FROM SIZE_SET_MST)

END