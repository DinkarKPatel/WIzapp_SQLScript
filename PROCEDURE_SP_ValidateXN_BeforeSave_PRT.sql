CREATE PROCEDURE SP_VALIDATEXN_BEFORESAVE_PRT--(LocId 3 digit change by Sanjay:30-10-2024)
(
	@NSPID			NUMERIC(5),
	@CUSERCODE		NVARCHAR(10),
	@NUPDATEMODE	INT,
	@CRETVAL		NVARCHAR(MAX) OUTPUT,
	@BNEGSTOCKFOUND BIT OUTPUT
)
--WITH ENCRYPTION
AS
BEGIN

BEGIN TRY

DECLARE @CCMD			NVARCHAR(MAX),
		@CTEMPRMM		NVARCHAR(MAX),
		@CTEMPRMD		NVARCHAR(MAX),
		@NSTEP			INT,
		@CERRPRODUCTCODE	VARCHAR(50),
		@CTEMPDBNAME	VARCHAR(50),
		@CSTATECODE CHAR(7),@CLOCSSTMEMOID VARCHAR(40),@CCMDSUBSECTION VARCHAR(100),@CCURLOCID VARCHAR(4),
		@CSTATENAME VARCHAR(100),@CERREMPCODE CHAR(7),@NCMMDISCOUNT NUMERIC(6,2),@NCRDISCOUNTPCT NUMERIC(10,2),
		@NCRDAYS INT,@NDISCOUNTAMT NUMERIC(10,2),@NTAXAMT NUMERIC(10,2),@NDISCOUNTPCT NUMERIC(6,2),@NTAXPCT NUMERIC(6,2),
		@CERRARTICLENO VARCHAR(100),@CERRPARA1NAME VARCHAR(50),@CERRPARA2NAME VARCHAR(50)


SET @NSTEP=0

SET @CTEMPDBNAME=''
SET @CTEMPDBNAME = (SELECT DBO.FN_GETTEMPDBNAME())

SET @NSTEP=1

SET @CTEMPRMM=@CTEMPDBNAME+ 'TEMP_RMM01106_'+LTRIM(RTRIM(STR(@NSPID)))
SET @CTEMPRMD=@CTEMPDBNAME+ 'TEMP_RMD01106_'+LTRIM(RTRIM(STR(@NSPID)))
SET @CRETVAL=''

SET @NSTEP=2
--********************************************VALIDATION FOR CMM01106****************************************************
--VALIDATING RECORD COUNT
SET @CCMD=N'IF (SELECT COUNT(*) FROM '+@CTEMPRMM+')=0
				SET @CRETVAL1=''NO RECORD FOUND AT MASTER LEVEL..... CANNOT PROCEED'''

EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
GOTO ATLAST


SET @NSTEP=4
--VALIDATING FINYEAR
SET @CCMD=N'SELECT @LRETVAL1=(CASE WHEN ''01'' + LTRIM(RTRIM((DBO.FN_GETFINYEAR(RM_DT))))=FIN_YEAR THEN '''' 
			ELSE ''MEMO DATE IS NOT IN CURRENT FINANCIAL YEAR...CAN NOT PROCEED'' END)
			FROM '+ @CTEMPRMM 
EXEC SP_EXECUTESQL @CCMD,N'@LRETVAL1 NVARCHAR(MAX) OUTPUT',@LRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
GOTO ATLAST

SET @NSTEP=5

--VALIDATING DISCOUNT AMOUNT
SET @CCMD=N'SELECT TOP 1 @NDISCOUNTAMTOUT=DISCOUNT_AMOUNT FROM '+@CTEMPRMM+' WHERE DISCOUNT_AMOUNT<0'
EXEC SP_EXECUTESQL @CCMD,N'@NDISCOUNTAMTOUT NUMERIC(10,2) OUTPUT',@NDISCOUNTAMTOUT=@NDISCOUNTAMT OUTPUT

IF ISNULL(@NDISCOUNTAMT,0)<>0
BEGIN
	SET @CRETVAL='BILL LEVEL DISCOUNT AMOUNT SHOULD BE MORE THAN OR EQUAL TO ZERO..... CANNOT PROCEED'
	GOTO ATLAST
END

SET @NSTEP=8
--VALIDATING TAX AMOUNT
SET @CCMD=N'SELECT TOP 1 @NTAXAMTOUT=TAX_AMOUNT FROM '+@CTEMPRMM+' WHERE TAX_AMOUNT<0'
EXEC SP_EXECUTESQL @CCMD,N'@NTAXAMTOUT NUMERIC(10,2) OUTPUT',@NTAXAMTOUT=@NTAXAMT OUTPUT

IF ISNULL(@NTAXAMT,0)<>0
BEGIN
	SET @CRETVAL='BILL LEVEL TAX AMOUNT SHOULD BE MORE THAN OR EQUAL TO ZERO..... CANNOT PROCEED'
	GOTO ATLAST
END

SET @NSTEP=10
--VALIDATING DISCOUNT PERCENTAGE
SET @CCMD=N'SELECT TOP 1 @NDISCOUNTPCTOUT=DISCOUNT_PERCENTAGE FROM '+@CTEMPRMM+' WHERE 
			DISCOUNT_PERCENTAGE NOT BETWEEN 0 AND 100'
EXEC SP_EXECUTESQL @CCMD,N'@NDISCOUNTPCTOUT NUMERIC(6,2) OUTPUT',@NDISCOUNTPCTOUT=@NDISCOUNTPCT OUTPUT

IF ISNULL(@NDISCOUNTPCT,0)<>0
BEGIN
	SET @CRETVAL='DISCOUNT PERCENTAGE SHOULD BE BETWEEN 0 AND 100..... CANNOT PROCEED'
	GOTO ATLAST
END


SET @NSTEP=12
--VALIDATING TAX PERCENTAGE
SET @CCMD=N'SELECT TOP 1 @NTAXPCTOUT=TAX_PERCENTAGE FROM '+@CTEMPRMM+' WHERE 
			TAX_PERCENTAGE NOT BETWEEN 0 AND 100'
EXEC SP_EXECUTESQL @CCMD,N'@NTAXPCTOUT NUMERIC(6,2) OUTPUT',@NTAXPCTOUT=@NTAXPCT OUTPUT

IF ISNULL(@NTAXPCT,0)<>0
BEGIN
	SET @CRETVAL='TAX PERCENTAGE SHOULD BE BETWEEN 0 AND 100..... CANNOT PROCEED'
	GOTO ATLAST
END


--VALIDATING USER CODE
IF @NUPDATEMODE=1
BEGIN
	SET @NSTEP=15
	
	SET @CCMD=N'UPDATE '+ @CTEMPRMM + N' SET USER_CODE='''+@CUSERCODE+''' WHERE LTRIM(RTRIM(USER_CODE)) = '''''
	EXEC SP_EXECUTESQL @CCMD

END

SET @NSTEP=17
SET @CCMD=N'IF EXISTS (SELECT TOP 1 A.USER_CODE FROM '+ @CTEMPRMM + N' A 
						LEFT OUTER JOIN USERS B ON B.USER_CODE=A.USER_CODE
						WHERE B.USER_CODE IS NULL)
				SET @CRETVAL1=''INVALID USER DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	GOTO ATLAST

IF @NUPDATEMODE=1
BEGIN
	SET @NSTEP=20
	
	SET @CCMD=N'UPDATE '+ @CTEMPRMM + N' SET EDT_USER_CODE='''+@CUSERCODE+''' WHERE LTRIM(RTRIM(EDT_USER_CODE)) = '''''
	EXEC SP_EXECUTESQL @CCMD

END

SET @NSTEP=22
SET @CCMD=N'IF EXISTS (SELECT TOP 1 A.USER_CODE FROM '+ @CTEMPRMM + N' A 
						LEFT OUTER JOIN USERS B ON B.USER_CODE=A.EDT_USER_CODE
						WHERE B.USER_CODE IS NULL)
				SET @CRETVAL1=''INVALID EDITING USER DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	GOTO ATLAST


 DECLARE @DMEMO_DT DATETIME,@DINV_DT DATETIME,@CGSTCUTOFFDATE VARCHAR(10),@CRM_DT DATETIME,@GSTDATE DATETIME,
         @BCALCULATEGSTPRT BIT
   SELECT @CGSTCUTOFFDATE=VALUE FROM CONFIG WHERE CONFIG_OPTION ='GST_CUT_OFF_DATE'
 
 SET @BCALCULATEGSTPRT=0
 IF ISNULL(@CGSTCUTOFFDATE,'')<>''
 BEGIN  
	 SELECT @GSTDATE=CAST(@CGSTCUTOFFDATE AS DATETIME)
	 
	   SET @CCMD=N'SELECT TOP 1 @DMEMO_DT=MEMO_DT FROM '+@CTEMPRMM  
	   EXEC SP_EXECUTESQL @CCMD,N'@DMEMO_DT DATETIME OUTPUT ',@DMEMO_DT OUTPUT
	
       SET @CCMD=N'SELECT TOP 1 @DINV_DT=BILL_DT FROM '+@CTEMPRMD 
	   EXEC SP_EXECUTESQL @CCMD,N'@DINV_DT DATETIME OUTPUT ',@DINV_DT OUTPUT
	   
	   IF @DINV_DT BETWEEN '2017-01-01' AND '2017-06-30' AND @DMEMO_DT BETWEEN '2017-07-01' AND '2017-12-31'
		SET @BCALCULATEGSTPRT =0
		ELSE
		SET @BCALCULATEGSTPRT =1
	 
END


		  
--VALIDATING FORM NAME
SET @NSTEP=25
IF @BCALCULATEGSTPRT=0
BEGIN
SET @CCMD=N'UPDATE '+ @CTEMPRMM + N' SET FORM_ID=''0000000'' WHERE ISNULL(FORM_ID,'''')='''''
EXEC SP_EXECUTESQL @CCMD

SET @NSTEP=27
SET @CCMD=N'IF EXISTS (SELECT TOP 1 A.ITEM_FORM_ID FROM '+ @CTEMPRMD + N' A 
						LEFT OUTER JOIN FORM B ON B.FORM_ID=A.ITEM_FORM_ID
						WHERE (B.FORM_ID IS NULL OR A.ITEM_FORM_ID=''0000000'') AND A.PRODUCT_CODE<>'''' )
				SET @CRETVAL1=''INVALID FORM NAME FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	GOTO ATLAST

END
--VALIDATING SUPPLIER
SET @NSTEP=29
SET @CCMD=N'IF EXISTS (SELECT TOP 1 A.AC_CODE FROM '+ @CTEMPRMM + N' A 
						LEFT OUTER JOIN LM01106 B ON B.AC_CODE=A.AC_CODE WHERE B.AC_CODE IS NULL
						OR A.AC_CODE IN ('''',''0000000000''))
				SET @CRETVAL1=''INVALID SUPPLIER DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	GOTO ATLAST

SET @NSTEP=35
--VALIDATING RECORD COUNT
SET @CCMD=N'IF NOT EXISTS (SELECT TOP 1 PRODUCT_CODE FROM '+@CTEMPRMD+')
				SET @CRETVAL1=''BLANK DETAILS CAN NOT BE SAVED..... PLEASE CHECK'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD

IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
GOTO ATLAST


SET @NSTEP=39
--VALIDATING RECORD COUNT
SET @CCMD=N'IF (SELECT COUNT(*) FROM '+@CTEMPRMD+')=0
				SET @CRETVAL1=''NO RECORD FOUND AT DETAIL LEVEL..... CANNOT PROCEED'''

EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD

SET @NSTEP=41

--VALIDATING NEGATIVE VALUES OF QUANTITY
SET @CCMD=N'SELECT TOP 1 @CERRPRODUCTCODE=PRODUCT_CODE FROM '+@CTEMPRMD+' A  WHERE A.QUANTITY<0'
				
EXEC SP_EXECUTESQL @CCMD,N'@CERRPRODUCTCODE VARCHAR(50) OUTPUT',@CERRPRODUCTCODE OUTPUT


IF ISNULL(@CERRPRODUCTCODE,'')<>'' OR ISNULL(@CERRARTICLENO,'')<>''
	SET @CRETVAL='QUANTITY CANNOT BE NEGATIVE FOR ITEM CODE: '+@CERRPRODUCTCODE+'........ CANNOT PROCEED'
IF ISNULL(@CRETVAL,'')<>''
GOTO ATLAST

SET @NSTEP=45
--VALIDATING PRODUCT CODE
SET @CCMD=N'SELECT TOP 1 @CERRPRODUCTCODE=A.PRODUCT_CODE FROM '+@CTEMPRMD+' A
			LEFT OUTER JOIN SKU B ON B.PRODUCT_CODE=A.PRODUCT_CODE WHERE B.PRODUCT_CODE IS NULL'
EXEC SP_EXECUTESQL @CCMD,N'@CERRPRODUCTCODE VARCHAR(50) OUTPUT',@CERRPRODUCTCODE OUTPUT

IF ISNULL(@CERRPRODUCTCODE,'')<>''
	SET @CRETVAL='INVALID ITEM CODE '+@CERRPRODUCTCODE+' FOUND..... CANNOT PROCEED'


IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
GOTO ATLAST

IF @NUPDATEMODE=2
BEGIN
	SET @NSTEP=60
	
	IF OBJECT_ID('TEMPDB..#TMPSTOCKCHECK','U') IS NOT NULL 
		DROP TABLE #TMPSTOCKCHECK
	
	SELECT PRODUCT_CODE,QUANTITY_IN_STOCK INTO #TMPSTOCKCHECK FROM PMT01106 WHERE 1=2
		
	SET @CCMD=N'SELECT A.PRODUCT_CODE,(A.QUANTITY_IN_STOCK-B.QUANTITY) AS QUANTITY_IN_STOCK FROM PMT01106 A
				JOIN RMD01106 B ON A.PRODUCT_CODE=B.PRODUCT_CODE
				JOIN '+@CTEMPRMM+' C ON C.RM_ID=B.RM_ID
				JOIN SKU D ON D.PRODUCT_CODE=A.PRODUCT_CODE
				JOIN ARTICLE E ON E.ARTICLE_CODE=D.ARTICLE_CODE
				WHERE B.PRODUCT_CODE NOT IN 
				(SELECT PRODUCT_CODE FROM '+@CTEMPRMD+') AND A.DEPT_ID = c.location_code
				AND (A.QUANTITY_IN_STOCK-B.QUANTITY)<0 AND E.STOCK_NA=0
				UNION ALL
				SELECT A.PRODUCT_CODE,(A.QUANTITY_IN_STOCK+B.QUANTITY-C.QUANTITY) AS QUANTITY_IN_STOCK
				FROM PMT01106 A JOIN RMD01106 B ON A.PRODUCT_CODE=B.PRODUCT_CODE
				JOIN '+@CTEMPRMD+' C ON C.RM_ID=B.RM_ID AND C.PRODUCT_CODE=B.PRODUCT_CODE
				JOIN '+@cTempRmm+' m ON m.rm_id=c.rm_id
				JOIN SKU D ON D.PRODUCT_CODE=A.PRODUCT_CODE
				JOIN ARTICLE E ON E.ARTICLE_CODE=D.ARTICLE_CODE
				WHERE	A.DEPT_ID = m.location_code
				AND (A.QUANTITY_IN_STOCK+B.QUANTITY-C.QUANTITY)<0 AND E.STOCK_NA=0'
	PRINT @CCMD
	INSERT #TMPSTOCKCHECK 
	EXEC SP_EXECUTESQL @CCMD
	
	IF EXISTS (SELECT TOP 1 PRODUCT_CODE FROM #TMPSTOCKCHECK) 			
	BEGIN
		SET @CRETVAL='STOCK GOING NEGATIVE FOR FOLLOWING BARCODES....CAN NOT PROCEED'							
		SELECT *,@CRETVAL AS  ERRMSG FROM #TMPSTOCKCHECK
		SET @BNEGSTOCKFOUND=1
	END	
END


			
SET @CRETVAL=''

ATLAST:

IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	SET @CRETVAL=ISNULL(@CRETVAL,'') +'(SP_VALIDATEXN_BEFORESAVE_PRT)'
		
END TRY

BEGIN CATCH
	SET @CRETVAL=N'ERROR FOUND IN '+ISNULL(ERROR_PROCEDURE(),'SP_VALIDATEXN_BEFORESAVE_PRT ')+
	  'STEP :'+LTRIM(RTRIM(STR(@NSTEP)))  +' MSG :'+ISNULL(ERROR_MESSAGE(),'NULL MSG')  
	  
END CATCH

---------  END OF PROCEDURE SP_VALIDATEXN_BEFORESAVE_PRT
END
