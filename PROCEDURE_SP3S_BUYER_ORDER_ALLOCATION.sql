
create PROCEDURE SP3S_BUYER_ORDER_ALLOCATION  
(  
 @NQUERYID INT=0,  
 @CARTICLE_CODE VARCHAR(50)='',  
 @CPARA1_CODE VARCHAR(10)='',  
 @CPARA2_CODE VARCHAR(10)='',  
 @CORDER_ID VARCHAR(100)='',  
 @CMEMO_ID VARCHAR(50)='',  
 @NNAVMODE INT=0,  
 @CWHERE VARCHAR(MAX)='',  
 @CFINYEAR VARCHAR(5)=''  
)  
AS  
BEGIN  
  
 DECLARE @DTSQL NVARCHAR(MAX)  
----FILTER IN HOUSE BUYER ORDER NOT IN TRANSFER TO TRADING  
--**************  
 IF @NQUERYID IN (4,6)  
 BEGIN       
  
   IF OBJECT_ID('TEMPDB..#TMPWO','U') IS NOT NULL    
     DROP TABLE #TMPWO    
   
   SELECT A.ROW_ID,A.ORDER_NO,A.ORDER_DT, A.AC_CODE, A.ORDER_ID,A.MEMO_ID ,A.ARTICLE_CODE,A.PARA1_CODE,
   A.PARA2_CODE,A.ITEM_MERCHANT_CODE, SUM(A.QUANTITY) AS QUANTITY,  SUM(A.PRD_QUANTITY) AS PRD_QUANTITY  
   INTO #TMPWO 
   FROM 
   (
	   SELECT A.ROW_ID, B.ORDER_NO,B.ORDER_DT,B.AC_CODE,B.ORDER_ID,
	   A.ARTICLE_CODE,A.PARA1_CODE ,A.PARA2_CODE ,A.QUANTITY ,
	   ISNULL(C.MEMO_ID,'') AS MEMO_ID ,ISNULL(C.QUANTITY,0) AS PRD_QUANTITY,A.ITEM_MERCHANT_CODE
	   FROM BUYER_ORDER_DET A (NOLOCK)
	   JOIN BUYER_ORDER_MST B (NOLOCK) ON A.ORDER_ID =B.ORDER_ID 
	   join LMP01106 lmp (nolock) on B.ac_code=lmp.AC_CODE 
	   LEFT OUTER JOIN
	   (
		 SELECT A.WOD_ROW_ID ,A.MEMO_ID ,SUM(A.QUANTITY ) AS QUANTITY
		 FROM ORD_PLAN_DET A
		 JOIN ORD_PLAN_MST B ON A.MEMO_ID =B.MEMO_ID 
		 WHERE B.CANCELLED =0
		 AND ISNULL(A.WOD_ROW_ID,'')<>'' AND B.CANCELLED =0
		 GROUP BY A.WOD_ROW_ID ,A.MEMO_ID 
	   
	   ) C ON A.ROW_ID =C.WOD_ROW_ID 
	   WHERE B.CANCELLED =0 
	   AND isnull(lmp.allow_allocation_wip_stk,0)   =1
	   AND A.ARTICLE_CODE=@CARTICLE_CODE
	   AND A.PARA1_CODE=@CPARA1_CODE
	   AND A.PARA2_CODE=@CPARA2_CODE 
  )  A  
  GROUP BY A.ROW_ID,A.ORDER_NO,A.ORDER_DT, A.AC_CODE, A.ORDER_ID,A.MEMO_ID ,A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE ,A.ITEM_MERCHANT_CODE   
   
         
    
         
  
  IF OBJECT_ID('TEMPDB..#TMPTRANSFER','U') IS NOT NULL    
     DROP TABLE #TMPTRANSFER    
      
  SELECT A.*,ISNULL(TRF_QTY,0) AS TRF_QTY    
  INTO #TMPTRANSFER    
  FROM     
             
   ( 
     SELECT A.ORDER_ID,A.MEMO_ID,A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE,A.ITEM_MERCHANT_CODE,         
     SUM(A.QUANTITY) AS QUANTITY, SUM(A.PRD_QUANTITY) AS PRD_QUANTITY       
     FROM  #TMPWO A    
     GROUP BY A.ORDER_ID,A.MEMO_ID,A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE   ,A.ITEM_MERCHANT_CODE
   ) A    
   JOIN    
   (    
	   SELECT C.ORDER_ID ,C.MEMO_ID , A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE ,
	   SUM(A.QUANTITY) AS TRF_QTY
	   FROM TRANSFER_TO_TRADING_DET  A (NOLOCK)
	   JOIN TRANSFER_TO_TRADING_MST  B (NOLOCK) ON A.MEMO_ID =B.MEMO_ID  
	   JOIN 
	   (
			SELECT A.PRODUCT_CODE  ,B.MEMO_ID ,MST.ORDER_ID 
			FROM  ORD_PLAN_BARCODE_DET A (NOLOCK)
			JOIN ORD_PLAN_DET B (NOLOCK) ON A.REFROW_ID=B.ROW_ID
			JOIN ORD_PLAN_MST C (NOLOCK) ON B.MEMO_ID =C.MEMO_ID 
			JOIN BUYER_ORDER_DET DET ON DET.ROW_ID =B.WOD_ROW_ID 
			JOIN BUYER_ORDER_MST MST ON MST.ORDER_ID =DET.ORDER_ID
			WHERE C.CANCELLED =0 AND MST.CANCELLED =0
			GROUP BY A.PRODUCT_CODE  ,B.MEMO_ID ,MST.ORDER_ID
		)C ON A.PRODUCT_CODE =C.PRODUCT_CODE 
	   WHERE B.CANCELLED =0 
	   GROUP BY C.ORDER_ID ,C.MEMO_ID , A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE 
   ) B ON A.MEMO_ID=B.MEMO_ID   
   AND A.ORDER_ID=B.ORDER_ID 
   AND A.ARTICLE_CODE=B.ARTICLE_CODE    
   AND A.PARA1_CODE=B.PARA1_CODE    
   AND A.PARA2_CODE=B.PARA2_CODE   
   
  
     
  IF OBJECT_ID('TEMPDB..#TMPALLOCATEORD','U') IS NOT NULL    
     DROP TABLE #TMPALLOCATEORD    
      
      
    SELECT A.*,ISNULL(TRF_QTY,0) AS TRF_QTY ,  
     A.QUANTITY-(ISNULL(TRF_QTY,0)+ISNULL(al.CNT,0)) AS PENDING_QTY  
    INTO #TMPALLOCATEORD  
    FROM #TMPWO A  
    LEFT OUTER JOIN    
   (    
    SELECT A.ORDER_ID,A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE, A.ITEM_MERCHANT_CODE,   
     SUM(TRF_QTY) AS TRF_QTY    
    FROM #TMPTRANSFER A    
    GROUP BY A.ORDER_ID,A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE    ,A.ITEM_MERCHANT_CODE
   ) C ON A.ORDER_ID=C.ORDER_ID    
   AND A.ARTICLE_CODE=C.ARTICLE_CODE    
   AND A.PARA1_CODE=C.PARA1_CODE    
   AND A.PARA2_CODE=C.PARA2_CODE    
   LEFT OUTER JOIN  
   (  
    SELECT C.WOD_ROW_ID,
    COUNT(*) AS CNT 
    FROM JOBWORK_PMT A
    JOIN ORD_PLAN_BARCODE_DET B ON A.PRODUCT_CODE=B.PRODUCT_CODE
    JOIN ORD_PLAN_DET C ON B.REFROW_ID=C.ROW_ID
    JOIN ORD_PLAN_MST MST ON MST.MEMO_ID=C.MEMO_ID
    left join(
    
       select PRODUCT_CODE  FROM TRANSFER_TO_TRADING_DET  A (NOLOCK)
	   JOIN TRANSFER_TO_TRADING_MST  B (NOLOCK) ON A.MEMO_ID =B.MEMO_ID 
	   where b.CANCELLED =0
    ) tr on a.PRODUCT_CODE=tr.product_code 
    WHERE ISNULL(A.ORDER_ID,'')<>'' AND MST.CANCELLED=0
    and tr.PRODUCT_CODE is null
    GROUP BY C.WOD_ROW_ID
   ) AL ON A.row_id =AL.WOD_ROW_ID
   --AL.MEMO_ID =A.MEMO_ID   
   --AND AL.PARA1_CODE=A.PARA1_CODE  
   --AND AL.PARA2_CODE=A.PARA2_CODE 
   --AND AL.ARTICLE_CODE =A.ARTICLE_CODE   
  -- AND AL.ITEM_MERCHANT_CODE=A.ITEM_MERCHANT_CODE
   WHERE A.QUANTITY-(ISNULL(TRF_QTY,0)+isnull(CNT,0))>0  
   ORDER BY ORDER_ID    
   
   
     
     
   
  
  
 END      
   
--*************  
  
IF @NQUERYID=1  
   GOTO LBLART  
ELSE IF @NQUERYID=2  
   GOTO LBLCOLOR  
ELSE IF @NQUERYID=3  
   GOTO LBLSIZE  
ELSE IF @NQUERYID=4  
   GOTO LBLINHOUSEORDE  
ELSE IF @NQUERYID=5  
   GOTO LBLSPECIFICBUYER  
ELSE IF @NQUERYID=6  
   GOTO LBLFGBARCODE  
ELSE IF @NQUERYID=7  
   GOTO LBLMSTVIEW  
ELSE IF @NQUERYID=8  
   GOTO LBLDETVIEW  
ELSE IF @NQUERYID=9  
   GOTO LBLMST  
ELSE IF @NQUERYID=10  
   GOTO NAVIGATE  
ELSE   
   GOTO END_PROC  
     
   LBLART:  
        
      SELECT B.ARTICLE_CODE,C.ARTICLE_NO,C.ARTICLE_NAME   
      FROM BUYER_ORDER_MST A  
      JOIN BUYER_ORDER_DET B ON A.ORDER_ID=B.ORDER_ID  
	  join LMP01106 lmp (nolock) on a.ac_code=lmp.AC_CODE 
      JOIN ARTICLE C ON C.ARTICLE_CODE=B.ARTICLE_CODE  
      WHERE A.CANCELLED =0 
	  and isnull(lmp.allow_allocation_wip_stk ,0)=1
	 -- AND A.ORDER_STATUS<>2  
      GROUP BY B.ARTICLE_CODE,C.ARTICLE_NO,C.ARTICLE_NAME   
     
   GOTO END_PROC  
     
   LBLCOLOR:  
       
      SELECT B.PARA1_CODE,C.PARA1_NAME  
      FROM BUYER_ORDER_MST A  
      JOIN BUYER_ORDER_DET B ON A.ORDER_ID=B.ORDER_ID  
      JOIN PARA1 C ON C.PARA1_CODE=B.PARA1_CODE  
      WHERE A.CANCELLED =0   
      AND B.ARTICLE_CODE=@CARTICLE_CODE  
      GROUP BY B.PARA1_CODE,C.PARA1_NAME  
         
     
   GOTO END_PROC  
     
     
    LBLSIZE:  
       
      SELECT D.PARA2_NAME,D.PARA2_CODE   
      FROM BUYER_ORDER_MST A  
      JOIN BUYER_ORDER_DET B ON A.ORDER_ID=B.ORDER_ID  
      JOIN PARA2 D ON D.PARA2_CODE=B.PARA2_CODE  
      WHERE A.CANCELLED =0   
      AND B.ARTICLE_CODE=@CARTICLE_CODE  
      AND B.PARA1_CODE=@CPARA1_CODE  
      GROUP BY D.PARA2_NAME,D.PARA2_CODE  
         
     
   GOTO END_PROC  
      
    LBLINHOUSEORDE:  
      
      
   
	  
	 SELECT CAST(0 AS BIT) AS CHK, B.ARTICLE_CODE,C.ARTICLE_NO,C.ARTICLE_NAME,  
	 B.PARA1_CODE,P1.PARA1_NAME,P2.PARA2_NAME,P2.PARA2_CODE,B.ORDER_ID AS INHOUSE_ORDER_ID,    
	 B.ORDER_ID,B.ORDER_NO,B.ORDER_DT,B.QUANTITY  AS ORD_QTY,  
	 SUM(B.PENDING_QTY) AS PENDING_QTY,  
	 CAST(CAST('LATER' AS VARCHAR(5))+CAST(NEWID()  AS VARCHAR(40)) AS VARCHAR(40)) AS ROW_ID,  
	 CAST('LATER' AS VARCHAR(100)) AS MEMO_ID,  
	 CAST(0 AS NUMERIC(10,0)) AS QUANTITY  
	 FROM #TMPALLOCATEORD B  
	 JOIN ARTICLE C ON C.ARTICLE_CODE=B.ARTICLE_CODE  
	 JOIN PARA1 P1 ON B.PARA1_CODE=P1.PARA1_CODE  
	 JOIN PARA2 P2 ON B.PARA2_CODE=P2.PARA2_CODE 
	 where b.MEMO_ID <>'' 
	 --WHERE  B.ARTICLE_CODE=@CARTICLE_CODE  
	 --AND B.PARA1_CODE=@CPARA1_CODE  
	 --AND B.PARA2_CODE=@CPARA2_CODE  
	 GROUP BY B.ARTICLE_CODE,C.ARTICLE_NO,C.ARTICLE_NAME,  
	 B.PARA1_CODE,P1.PARA1_NAME,P2.PARA2_NAME,P2.PARA2_CODE,    
	 B.ORDER_ID,B.ORDER_NO,B.ORDER_DT,B.QUANTITY  
	 ORDER BY B.ORDER_NO,B.ORDER_DT  
   
GOTO END_PROC  
   
 LBLSPECIFICBUYER:  
      
      
       
    --DECLARE @DTSQL NVARCHAR(MAX)  
    IF OBJECT_ID('TEMPDB..#TMPSPECIFICBO','U') IS NOT NULL    
     DROP TABLE #TMPSPECIFICBO    
         
     SELECT M.ORDER_NO,M.ORDER_DT, M.AC_CODE, B.ORDER_ID,B.ARTICLE_CODE,B.PARA1_CODE,B.PARA2_CODE,         
     ITEM_MERCHANT_CODE ,B.QUANTITY AS QUANTITY 
     INTO #TMPSPECIFICBO     
     FROM    BUYER_ORDER_DET B              
     JOIN BUYER_ORDER_MST M ON M.ORDER_ID=B.ORDER_ID         
     WHERE  1=2    
  
         
         
  SET @DTSQL=N'SELECT M.ORDER_NO,M.ORDER_DT,M.AC_CODE,B.ORDER_ID,B.ARTICLE_CODE,B.PARA1_CODE,B.PARA2_CODE,B.ITEM_MERCHANT_CODE ,
    SUM(B.QUANTITY-(ISNULL(CNT,0)+ISNULL(ORD_QTY,0))) AS QUANTITY      
   FROM BUYER_ORDER_DET B     
   JOIN BUYER_ORDER_MST M ON M.ORDER_ID=B.ORDER_ID 
   JOIN lmp01106 lmp (NOLOCK) ON m.AC_CODE=LMP.AC_CODE 
   LEFT JOIN    
   (    
     SELECT A.WOD_ROW_ID ,SUM(A.QUANTITY) AS ORD_QTY  
     FROM ORD_PLAN_DET A (NOLOCK)
     JOIN ORD_PLAN_MST B (NOLOCK) ON A.MEMO_ID=B.MEMO_ID
     WHERE B.CANCELLED=0
     GROUP BY A.WOD_ROW_ID
     
   ) A  ON B.ROW_ID=A.WOD_ROW_ID 
   LEFT OUTER JOIN  
   (  
		SELECT A.ORDER_ID,C.ARTICLE_CODE,C.PARA1_CODE,C.PARA2_CODE,A.ITEM_MERCHANT_CODE ,
		COUNT(*) AS CNT 
		FROM JOBWORK_PMT A
		JOIN ORD_PLAN_BARCODE_DET B ON A.PRODUCT_CODE=B.PRODUCT_CODE
		JOIN ORD_PLAN_DET C ON B.REFROW_ID=C.ROW_ID
		JOIN ORD_PLAN_MST MST ON MST.MEMO_ID=C.MEMO_ID
		WHERE ISNULL(A.ORDER_ID,'''')<>'''' AND MST.CANCELLED=0
		GROUP BY A.ORDER_ID,C.ARTICLE_CODE,C.PARA1_CODE,C.PARA2_CODE,A.ITEM_MERCHANT_CODE
   ) AL ON AL.ORDER_ID=B.ORDER_ID  
   AND AL.ARTICLE_CODE=B.ARTICLE_CODE
   AND AL.PARA1_CODE=B.PARA1_CODE  
   AND AL.PARA2_CODE=B.PARA2_CODE      
   AND AL.ITEM_MERCHANT_CODE=B.ITEM_MERCHANT_CODE      
   WHERE  M.CANCELLED=0 
  -- and isnull(lmp.allow_allocation_wip_stk,0) not in(1)    --dinkarji  
  -- AND M.ORDER_STATUS NOT IN(1)  
   AND B.ARTICLE_CODE='''+@CARTICLE_CODE+'''  
   AND B.PARA1_CODE='''+@CPARA1_CODE+'''  
   AND B.PARA2_CODE='''+@CPARA2_CODE+''' 
   GROUP BY M.ORDER_NO,M.ORDER_DT,M.AC_CODE,B.ORDER_ID,B.ARTICLE_CODE,B.PARA1_CODE,B.PARA2_CODE,B.ITEM_MERCHANT_CODE 
   HAVING SUM(B.QUANTITY-(ISNULL(CNT,0)+ISNULL(ORD_QTY,0)))>0 '    
   PRINT @DTSQL    
  INSERT INTO #TMPSPECIFICBO    
  EXEC SP_EXECUTESQL @DTSQL    
  
          
        SELECT A.ARTICLE_CODE,B.ARTICLE_NO, CAST(0 AS BIT) AS CHK, A.AC_CODE AS AC_CODE,  
        LM.AC_NAME AS AC_NAME,  
        A.ORDER_ID,A.ORDER_NO,A.ORDER_DT,P1.PARA1_NAME,A.PARA1_CODE,P2.PARA2_NAME,A.PARA2_CODE ,A.QUANTITY,  
        A.ORDER_ID AS BUYER_ORDER_ID,  
        CAST(CAST('LATER' AS VARCHAR(5))+CAST(NEWID()  AS VARCHAR(40)) AS VARCHAR(40)) AS ROW_ID,  
        CAST('LATER' AS VARCHAR(40)) AS REF_ROW_ID,  
        ALLOCATE_QTY=CAST(0 AS NUMERIC(10,0)),  
         PENDING_QTY=CAST(0 AS NUMERIC(10,0))  ,A.ITEM_MERCHANT_CODE,EMP.emp_name AS [ITEM_MERCHANT_NAME]
        FROM #TMPSPECIFICBO A  
        JOIN ARTICLE B ON A.ARTICLE_CODE=B.ARTICLE_CODE  
        JOIN PARA1 P1 ON P1.PARA1_CODE=A.PARA1_CODE  
        JOIN PARA2 P2 ON P2.PARA2_CODE=A.PARA2_CODE  
        JOIN LM01106 LM ON LM.AC_CODE =A.AC_CODE
        JOIN EMPLOYEE EMP ON EMP.emp_code=A.ITEM_MERCHANT_CODE  
     
   
 GOTO END_PROC  
   
 LBLFGBARCODE:  
        
        
      
       
    -- SELECT * INTO TMPALLOCATEORD FROM #TMPALLOCATEORD A  
      SELECT CAST(0 AS BIT) AS CHK,   
      A.ORDER_ID,A.MEMO_ID ,A.ARTICLE_CODE,ART.ARTICLE_NO,ART.ARTICLE_NAME,P1.PARA1_NAME,
      A.PARA1_CODE,P2.PARA2_NAME,A.PARA2_CODE,  
      B.PRODUCT_CODE,B.JOB_CODE,  
     CASE WHEN ISNULL(B.JOB_CODE,'')='' THEN 'IN WORK_ORDER' ELSE JOBS.JOB_NAME END AS STATUS,  
      CAST('' AS VARCHAR(50)) AS BO_ORDER_ID,  
      CAST('LATER' AS VARCHAR(40)) AS ROW_ID,  
      CAST('LATER' AS VARCHAR(40)) AS REF_ROW_ID,  
      CAST(0 AS NUMERIC(10,2)) AS QUANTITY,  
 CAST('' AS VARCHAR(100)) AS BUYER_NAME,  
       ROW_NUMBER() OVER (ORDER BY A.ORDER_ID) AS NEW_ROW_ID,
       JOBS.JOB_NAME  ,ISNULL(EMP.EMP_NAME ,'') AS MERCHANT_NAME,A.ITEM_MERCHANT_CODE 
      FROM #TMPALLOCATEORD A  
      JOIN
      (
		   SELECT C.WOD_ROW_ID ,A.PRODUCT_CODE, A.JOB_CODE ,A.ORDER_ID 
		   FROM JOBWORK_PMT A
		   JOIN ORD_PLAN_BARCODE_DET B ON A.PRODUCT_CODE=B.PRODUCT_CODE
		   JOIN ORD_PLAN_DET C ON B.REFROW_ID=C.ROW_ID
		   JOIN ORD_PLAN_MST MST ON MST.MEMO_ID=C.MEMO_ID
		   WHERE  MST.CANCELLED=0 AND ISNULL(A.ORDER_ID,'')=''
		   
		   GROUP BY C.WOD_ROW_ID ,A.PRODUCT_CODE, A.JOB_CODE,A.ORDER_ID  
      ) B ON A.row_id =B.WOD_ROW_ID 
      JOIN ARTICLE ART ON ART.ARTICLE_CODE=A.ARTICLE_CODE  
      JOIN PARA1 P1 ON P1.PARA1_CODE=A.PARA1_CODE  
      JOIN PARA2 P2 ON P2.PARA2_CODE=A.PARA2_CODE  
      LEFT JOIN JOBS ON JOBS.JOB_CODE=B.JOB_CODE      
      LEFT JOIN EMPLOYEE EMP ON EMP.EMP_CODE=A.ITEM_MERCHANT_CODE      
      LEFT OUTER JOIN  
      (    
		   SELECT A.PRODUCT_CODE  FROM TRANSFER_TO_TRADING_DET  A  
		   JOIN TRANSFER_TO_TRADING_MST  B ON A.MEMO_ID =B.MEMO_ID   
		   WHERE B.CANCELLED =0  
      ) TR ON TR.PRODUCT_CODE =B.PRODUCT_CODE   
      WHERE A.ORDER_ID=@CORDER_ID 
      AND ISNULL(B.ORDER_ID,'')=''   
      AND TR.PRODUCT_CODE IS NULL  
      AND ISNULL(B.ORDER_ID,'') =''  
     
               
 GOTO END_PROC  
   
 LBLMSTVIEW:  
       
       
     SELECT A.FIN_YEAR,A.MEMO_ID,A.MEMO_NO,A.MEMO_DT,  
            A.ARTICLE_CODE,ART.ARTICLE_NO,ART.ARTICLE_NAME,  
            A.PARA1_CODE,P1.PARA1_NAME,  
            A.PARA2_CODE,P2.PARA2_NAME  ,A.CANCELLED
        FROM BUYER_ORDER_ALLOCATE_MST A  
        JOIN ARTICLE ART ON ART.ARTICLE_CODE=A.ARTICLE_CODE  
     JOIN PARA1 P1 ON P1.PARA1_CODE=A.PARA1_CODE  
     JOIN PARA2 P2 ON P2.PARA2_CODE=A.PARA2_CODE  
     WHERE A.MEMO_ID=@CMEMO_ID  
     ORDER BY MEMO_DT,MEMO_NO  
   
 GOTO END_PROC  
   
 LBLDETVIEW:  
       
       
     SELECT A.MEMO_ID,A.MEMO_NO,A.MEMO_DT,  
            A.ARTICLE_CODE,ART.ARTICLE_NO,ART.ARTICLE_NAME,  
            A.PARA1_CODE,P1.PARA1_NAME,  
            A.PARA2_CODE,P2.PARA2_NAME,  
            MST.ORDER_NO AS ORDER_NO,MST.ORDER_DT AS ORDER_DT,--INHOUSE  
            BR.PRODUCT_CODE AS UPC,  
            SD.AC_CODE,LM.AC_NAME,  
            MST1.ORDER_NO AS SP_ORDER_NO,MST1.ORDER_DT AS SP_ORDER_DT,DET.ROW_ID,  
            CASE WHEN ISNULL(JOBS.JOB_CODE,'')='' THEN 'IN WORK_ORDER' ELSE JOBS.JOB_NAME END AS STATUS1
            ,  ISNULL(EMP.EMP_NAME ,'') AS MERCHANT_NAME,PMT.ITEM_MERCHANT_CODE 
    FROM BUYER_ORDER_ALLOCATE_MST A  
    JOIN BUYER_ORDER_ALLOCATE_DET DET ON A.MEMO_ID=DET.MEMO_ID  
    JOIN BUYER_ORDER_ALLOCATE_SUB_DET SD ON DET.ROW_ID=SD.REF_ROW_ID  
    JOIN BUYER_ORDER_ALLOCATE_BARCODE BR ON BR.REF_ROW_ID=SD.ROW_ID  
    JOIN ARTICLE ART ON ART.ARTICLE_CODE=A.ARTICLE_CODE  
     JOIN PARA1 P1 ON P1.PARA1_CODE=A.PARA1_CODE  
     JOIN PARA2 P2 ON P2.PARA2_CODE=A.PARA2_CODE  
     JOIN BUYER_ORDER_MST MST ON MST.ORDER_ID=DET.INHOUSE_ORDER_ID  
     JOIN BUYER_ORDER_MST MST1 ON MST1.ORDER_ID=SD.BUYER_ORDER_ID  
     JOIN LM01106 LM ON LM.AC_CODE=SD.AC_CODE  
     JOIN JOBWORK_PMT  PMT ON PMT.PRODUCT_CODE=BR.PRODUCT_CODE  
     LEFT JOIN JOBS ON JOBS.JOB_CODE=PMT.JOB_CODE 
     LEFT JOIN EMPLOYEE EMP ON EMP.EMP_CODE=PMT.ITEM_MERCHANT_CODE  
     WHERE A.MEMO_ID=@CMEMO_ID  
     ORDER BY MEMO_DT,MEMO_NO  
   
 GOTO END_PROC  
   
 LBLMST:--FOR BIND  
     
   SELECT A.FIN_YEAR, A.MEMO_ID,A.MEMO_NO,A.MEMO_DT,  
             A.ARTICLE_CODE,ART.ARTICLE_NO,ART.ARTICLE_NAME,  
             A.PARA1_CODE,P1.PARA1_NAME,  
             A.PARA2_CODE,P2.PARA2_NAME,  
             A.LAST_UPDATE  ,A.CANCELLED 
      FROM BUYER_ORDER_ALLOCATE_MST A  
      JOIN ARTICLE ART ON ART.ARTICLE_CODE=A.ARTICLE_CODE  
      JOIN PARA1 P1 ON P1.PARA1_CODE=A.PARA1_CODE  
      JOIN PARA2 P2 ON P2.PARA2_CODE=A.PARA2_CODE  
     WHERE A.MEMO_ID=@CMEMO_ID  
   
 GOTO END_PROC  
   
   NAVIGATE:  
     
    EXEC SP_NAVIGATE  'BUYER_ORDER_ALLOCATE_MST',@NNAVMODE,@CWHERE,@CFINYEAR,'MEMO_NO','MEMO_DT','MEMO_ID',''    
    GOTO END_PROC  
     
      
END_PROC:   
END

