create PROCEDURE SP3S_UPDATEPMT_WSLCHI  
  @CXNID VARCHAR(40),  
  @NREVERTFLAG BIT = 0,  
  @NALLOWNEGSTOCK BIT = 0,  
  @cErrmsg VARCHAR(MAX) OUTPUT,
  @CCMD NVARCHAR(4000) OUTPUT  
  --*** PARAMETERS :  
  --*** @CXNTYPE		- TRANSACTION TYPE (MODULE SPECIFIC)  
  --*** @CXNNO			- TRANSACTION NO ( MEMO NO OF MASTER TABLE )  
  --*** @CXNID			- TRANSACTION ID ( MEMO ID OF MASTER TABLE )  
  --*** @NREVERTFLAG	- A FLAG TO INDICATE WHETHER THIS PROCEDURE IS CALLED TO REVERT STOCK  
  --*** @NALLOWNEGSTOCK - FLAG TO INDICATE WHETHER OR NOT ALLOW NEGATIVE STOCK  
  --*** @NRETVAL		- OUTPUT PARAMETER RETURNED BY THIS PROCEDURE (BIT 1-SUCCESS, 0-UNSUCCESS)  
--WITH ENCRYPTION
AS  
BEGIN  
 BEGIN TRY
	 DECLARE @NOUTFLAG INT, @NRETVAL BIT,@CXNTABLE VARCHAR(50),@CEXPR NVARCHAR(500),@CXNIDPARA VARCHAR(50),  
			@BCANCELLED BIT,@NENTRYMODE INT  ,@CHECK_UNIQUE_STOCK INT ,@CUSERCODE VARCHAR(10),@BBIN_TRANSFER BIT
			,@BSLRRECONREQD BIT,@cStep VARCHAR(10)
	 
	 SET @CSTEP=390.2	
	 EXEC SP_CHKXNSAVELOG 'wSLCHI',@cStep,0,@CXNID,'',1   

	 	
	 SET @NRETVAL = 0  
	 SET @CCMD = ''  
	 --*** CHECKING FOR NEGATIVE STOCK OF BAR CODES WHICH R REMOVED FROM DETAIL FILE  
	 --*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK   
 
	 SELECT @CHECK_UNIQUE_STOCK = ISNULL(VALUE,1) FROM CONFIG WHERE CONFIG_OPTION ='ALLOW_STOCK_UNIQUE>1' 
  
	  IF @NREVERTFLAG = 1  
			SET @NOUTFLAG =  1  
	  ELSE  
			SET @NOUTFLAG = -1  

	 SET @CSTEP=390.4	
	 EXEC SP_CHKXNSAVELOG 'wSLCHI',@cStep,0,@CXNID,'',1     

	  INSERT PMT01106 (PRODUCT_CODE,  QUANTITY_IN_STOCK, DEPT_ID,BIN_ID, LAST_UPDATE )  
	  SELECT DISTINCT B.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,A.PARTY_DEPT_ID,A.TARGET_BIN_ID,GETDATE() AS LAST_UPDATE  
	  FROM DOCWSL_IND01106_MIRROR B WITH (NOLOCK)  
	  JOIN DOCWSL_INM01106_MIRROR A WITH (NOLOCK) ON A.INV_ID=B.INV_ID
	  JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
	  JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
	  LEFT OUTER JOIN PMT01106 PMT WITH (NOLOCK) ON PMT.PRODUCT_CODE = B.PRODUCT_CODE 
	  AND PMT.DEPT_ID = A.PARTY_DEPT_ID AND PMT.BIN_ID = A.TARGET_BIN_ID
	  WHERE A.INV_ID = @CXNID AND PMT.PRODUCT_CODE IS NULL 
	 
	 IF EXISTS (SELECT TOP 1 product_code FROM SAVETRAN_BARCODE_NETQTY (NOLOCK) WHERE sp_id=@cXnId)
		DELETE FROM SAVETRAN_BARCODE_NETQTY WITH (ROWLOCK)  WHERE sp_id=@cXnId
      
	

     IF @NREVERTFLAG=1
	 		INSERT SAVETRAN_BARCODE_NETQTY	( BIN_ID, bin_transfer, DEPT_ID, new_entry, PRODUCT_CODE, sp_id, XN_QTY )  
			SELECT  b.BIN_ID, 0 bin_transfer, b.DEPT_ID, 0 new_entry, a.PRODUCT_CODE,@CXNID sp_id, SUM(quantity) XN_QTY 
			FROM pid01106 a (NOLOCK) JOIN pim01106 b (NOLOCK) ON a.mrr_id=b.mrr_id
			WHERE B.INV_ID = @CXNID 
			GROUP BY a.PRODUCT_CODE,b.DEPT_ID, b.BIN_ID
	 ELSE
	 		INSERT SAVETRAN_BARCODE_NETQTY	( BIN_ID, bin_transfer, DEPT_ID, new_entry, PRODUCT_CODE, sp_id, XN_QTY )  
			SELECT  b.target_BIN_ID, 0 bin_transfer, b.party_DEPT_ID, 0 new_entry, a.PRODUCT_CODE,@CXNID sp_id, 
			SUM(quantity) XN_QTY 
			FROM DOCWSL_IND01106_MIRROR a WITH (NOLOCK)  
			JOIN DOCWSL_INM01106_MIRROR b WITH (NOLOCK) ON B.INV_ID = a.INV_ID  
			WHERE B.INV_ID = @CXNID 
			GROUP BY a.PRODUCT_CODE,b.party_DEPT_ID, b.target_BIN_ID  

		
	 
	 
	 SET @CSTEP=390.6	
	 EXEC SP_CHKXNSAVELOG 'wSLCHI',@cStep,0,@CXNID,'',1     

	  IF EXISTS (SELECT TOP 1 A.MEMO_ID FROM STMH01106 A WITH (NOLOCK) 
				 JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID AND B.BIN_ID=A.RECON_BIN_ID AND a.dept_id=b.dept_id
				 JOIN DOCWSL_IND01106_MIRROR C (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE
				 JOIN DOCWSL_INM01106_MIRROR D (NOLOCK) ON D.INV_ID=C.INV_ID AND D.TARGET_BIN_ID=B.BIN_ID 
				 AND d.party_dept_id=b.dept_id
				 WHERE D.INV_ID=@CXNID)
	  BEGIN
			SET @CCMD = N'SELECT DISTINCT ''PUR'' AS XN_TYPE
						  ,'''+@cXnId+''' AS MEMO_NO,
						  C.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE PART OF STOCK RECONCILIATION'' AS ERRMSG
					 
						  FROM STMH01106 A WITH (NOLOCK)  JOIN PMT01106 B WITH (NOLOCK) ON A.REP_ID=B.REP_ID
						  AND B.BIN_ID=A.RECON_BIN_ID AND a.dept_id=b.dept_id
						  JOIN DOCWSL_IND01106_MIRROR C ON C.PRODUCT_CODE=B.PRODUCT_CODE
						  JOIN DOCWSL_INM01106_MIRROR D ON D.INV_ID=C.INV_ID AND D.TARGET_BIN_ID=B.BIN_ID AND d.party_dept_id=b.dept_id
						  WHERE D.INV_ID='''+@CXNID+''''		
			RETURN					
	  END	  
	  
	  --*** UPDATING THE QUANTITY IN STOCK FROM PMT FOR THE GIVEN MEMO  
	  --,   
	  --  QUANTITY_PURCHASED = QUANTITY_PURCHASED - ( @NOUTFLAG * B.QUANTITY )  
	  --AND E.STOCK_NA = 0
	 SET @CSTEP=390.8	
	 EXEC SP_CHKXNSAVELOG 'wSLCHI',@cStep,0,@CXNID,'',1   
     
	  UPDATE A SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * b.xn_qty )  
	   FROM   PMT01106 A WITH (ROWLOCK)
	   JOIN 
	   (select PRODUCT_CODE ,DEPT_ID ,BIN_ID ,
	           SUM(xn_qty) AS xn_qty
	     from SAVETRAN_BARCODE_NETQTY b (NOLOCK) 
		  WHERE sp_ID=@cXnId
		 GROUP BY PRODUCT_CODE ,DEPT_ID ,BIN_ID
		 ) b ON a.PRODUCT_CODE=B.PRODUCT_CODE
	   AND a.BIN_ID=B.BIN_ID AND a.dept_id=b.dept_id 
	 

	 SET @CSTEP=391.1	
	 EXEC SP_CHKXNSAVELOG 'wSLCHI',@cStep,0,@CXNID,'',1     
	  SET @NRETVAL = 1  --*** SUCCESS  
    
	  SELECT @BCANCELLED=CANCELLED,@CUSERCODE=USER_CODE FROM DOCWSL_INM01106_MIRROR (NOLOCK) WHERE INV_ID=@CXNID  
	  ---NEGATIVE STOCK SHOULD NOT BE ALLOWED FOR SUPER USER
	  IF @CUSERCODE='0000000'
		SET @NALLOWNEGSTOCK=0
    
	--as per discussion with sanjiv sir in chi entry no check pmt stock as on 23-11-2020
	  --IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1 
	  --BEGIN  
		 -- SET @CSTEP=391.3	
		 -- EXEC SP_CHKXNSAVELOG 'wSLCHI',@cStep,0,@CXNID,'',1     

		 --  IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A (NOLOCK)
			--		   JOIN SAVETRAN_BARCODE_NETQTY b (NOLOCK) ON a.PRODUCT_CODE=B.PRODUCT_CODE
			--		   AND a.BIN_ID=B.BIN_ID AND a.dept_id=b.dept_id 
			--		   JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
			--		  JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
			--		   WHERE sp_ID=@cXnId AND A.QUANTITY_IN_STOCK < 0 AND stock_na=0
			--		 )  
		 --  BEGIN  
			--	SET @NRETVAL = 0  --*** UNSUCCESS  
			--	SET @CCMD = N'SELECT DISTINCT ''PUR'' AS XN_TYPE,'''' as MEMO_NO,A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''FOLLOWING BAR CODES ARE GOING NEGATIVE STOCK'' AS ERRMSG
			--				  FROM PMT01106 A WITH (NOLOCK)  J
			--				  JOIN SAVETRAN_BARCODE_NETQTY b (NOLOCK) ON a.PRODUCT_CODE=B.PRODUCT_CODE
			--				  AND a.BIN_ID=B.BIN_ID AND a.dept_id=b.dept_id 
			--				  JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
			--				  JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
			--				  WHERE sp_ID='''+@cXnId+''' AND A.QUANTITY_IN_STOCK < 0 AND stock_na=0 '  
		 --  END  
	  --END   
   
	  IF ISNULL(@CHECK_UNIQUE_STOCK,1)<>1
	  BEGIN
	 SET @CSTEP=391.5	
	 EXEC SP_CHKXNSAVELOG 'wSLCHI',@cStep,0,@CXNID,'',1     
		   IF EXISTS(SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK FROM PMT01106 A WITH (NOLOCK)  
		   			JOIN SAVETRAN_BARCODE_NETQTY b (NOLOCK) ON a.PRODUCT_CODE=B.PRODUCT_CODE
					AND a.BIN_ID=B.BIN_ID AND a.dept_id=b.dept_id 
					JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
					JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
					WHERE sp_ID=@cXnId AND E.STOCK_NA=0  AND d.barcode_coding_scheme  = 3 
				    AND A.QUANTITY_IN_STOCK > 1)
		  SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK,''UNique BAR CODES Stock is going more than 1'' AS ERRMSG 
				  FROM PMT01106 A WITH (NOLOCK)
				  JOIN SAVETRAN_BARCODE_NETQTY b (NOLOCK) ON a.PRODUCT_CODE=B.PRODUCT_CODE
				  AND a.BIN_ID=B.BIN_ID AND a.dept_id=b.dept_id 
				  JOIN SKU D WITH (NOLOCK) ON B.PRODUCT_CODE = D.PRODUCT_CODE  
				  JOIN ARTICLE E WITH (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE  
				  WHERE sp_ID='''+@cXnId+''' AND E.STOCK_NA=0  AND d.barcode_coding_scheme = 3 
				  AND A.QUANTITY_IN_STOCK > 1 '  
	   END

	   GOTO END_PROC
END TRY   

BEGIN CATCH

  PRINT 'CATCH START of SP3S_UPDATEPMT_WSLCHI'       
  SET @CERRMSG='P:SP3S_UPDATEPMT_WSLCHI, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()        
  GOTO END_PROC

END CATCH
   
END_PROC:  
   
END