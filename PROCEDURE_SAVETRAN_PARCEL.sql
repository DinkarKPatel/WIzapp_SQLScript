create PROCEDURE SAVETRAN_PARCEL--(LocId 3 digit change by Sanjay:06-11-2024)
(
	@NUPDATEMODE		NUMERIC(1,0),
	@NSPID				varchar(50),
	@CMEMONOPREFIX		VARCHAR(50),
	@CFINYEAR			VARCHAR(10),	
	@CMACHINENAME		VARCHAR(100)='',
	@CWINDOWUSERNAME	VARCHAR(100)='',
	@CWIZAPPUSERCODE	VARCHAR(10)='0000000',
	@CXNMEMOID			VARCHAR(40)='',
	@NAPPROVEMODE		NUMERIC(1,0)=0,
	@CCOMPUTERIP		VARCHAR(20)='',
	@bCalledFromOtherModule	BIT=0,
	@CCHALLANMEMONOPREFIX VARCHAR(50)=''
)

AS
BEGIN
	-- @NUPDATEMODE:	1- ADD 
	--					2- EDIT 
	--					3- CANCELLED 

	DECLARE @CTEMPDBNAME			VARCHAR(100),
			@CMASTERTABLENAME		VARCHAR(100),
			@CDETAILTABLENAME1		VARCHAR(100),
			
			@CTEMPMASTERTABLENAME	VARCHAR(100),
			@CTEMPDETAILTABLENAME1	VARCHAR(100),
			@CTEMPDETAILTABLENAME2	VARCHAR(100),
			@CTEMPDETAILTABLENAME3	VARCHAR(100),
			
			@CTEMPMASTERTABLE		VARCHAR(100),
			@CTEMPDETAILTABLE1		VARCHAR(100),
			@CTEMPDETAILTABLE2		VARCHAR(100),
			@CTEMPDETAILTABLE3		VARCHAR(100),
			
			@CERRORMSG				VARCHAR(500),
			@LDONOTUPDATESTOCK		BIT,
			@CKEYFIELD1				VARCHAR(50),
			@CKEYFIELDVAL1			VARCHAR(50),
			@CMEMONO				VARCHAR(20),
			@NMEMONOLEN				NUMERIC(20,0),
			@CMEMONOVAL				VARCHAR(50),
			@CMEMODEPTID			VARCHAR(4),
			@CLOCATIONID			VARCHAR(4),
			@CHODEPTID				VARCHAR(4),
			@CCMD					NVARCHAR(4000),
			@CCMDOUTPUT				NVARCHAR(4000),
			@NSAVETRANLOOP			BIT,
			@NSTEP					varchar(10),
			@BRECFOUND              BIT,@nXnSpId VARCHAR(40),
		    @XN_TYPE VARCHAR(10),@REF_MEMO_ID VARCHAR(40),@DOCXN_TYPE VARCHAR(10),@nEntryCnt INT,
		    @PARCEL_AMOUNT_ENTRY_MODE NUMERIC(2,0),@DRECEIPTDT datetime,
			@BNEGSTOCKFOUND BIT,@CMRRID AS VARCHAR(50) ,@CKEYSTABLE varchar(100),@cchallanIn_dept_id varchar(5)
		   
	SET @nXnSpId=CONVERT(VARCHAR(40),NEWID())

	DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))
	DECLARE @OUTPUT1 TABLE ( PO_ID VARCHAR(50), PO_QUANTITY NUMERIC(10,3),PARCEL_QTY NUMERIC(10,3))

	set @BNEGSTOCKFOUND=0
	SET @NSTEP = 0		-- SETTTING UP ENVIRONMENT
	EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
	
	IF NOT EXISTS (SELECT TOP 1 xn_type FROM  xnsinfo (NOLOCK) WHERE TABLENAME='PARCEL_SUB_DET' 
	and isnull(insertstr,'')<>'')
	BEGIN	
		SET @CERRORMSG='Saving string not found ..Cannot save'
		GOTO END_PROC
	END

	-- Discarded Temp Database reference as per discussion on 29-10-2020 mentioned in CLient issues List
	SET @CTEMPDBNAME = ''

	SET @CMASTERTABLENAME	= 'PARCEL_MST'
	SET @CDETAILTABLENAME1	= 'PARCEL_DET'


	SET @CTEMPMASTERTABLENAME	= 'PRCL_PARCEL_MST_UPLOAD'
	SET @CTEMPDETAILTABLENAME1	= 'PRCL_PARCEL_DET_UPLOAD'
	
	SET @CTEMPDETAILTABLENAME2	= 'PRCL_PARCEL_SUB_DET_UPLOAD'
	SET @CTEMPDETAILTABLENAME3	= 'PRCL_PARCEL_BLOCK_PO_DETAILS_UPLOAD'

	
	SET @CTEMPMASTERTABLE	= @CTEMPDBNAME + @CTEMPMASTERTABLENAME
	SET @CTEMPDETAILTABLE1	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME1
	SET @CTEMPDETAILTABLE2	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME2
	SET @CTEMPDETAILTABLE3	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME3
	
	SET @CERRORMSG			= ''
	SET @LDONOTUPDATESTOCK	= 0
	SET @CKEYFIELD1			= 'PARCEL_MEMO_ID'
	SET @CMEMONO			= 'PARCEL_MEMO_NO'
	SET @NMEMONOLEN			= 10
	
	set @nStep='10'
	EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
	
	

  IF @NUPDATEMODE IN (1,2)
	SELECT @CLOCATIONID =LOCATION_CODE  FROM PRCL_PARCEL_MST_UPLOAD (NOLOCK) WHERE sp_id=@NSPID
  ELSE
    SELECT @CLOCATIONID =LOCATION_CODE  FROM PARCEL_MST (NOLOCK) WHERE parcel_memo_id=@CXNMEMOID
	
	SELECT @CHODEPTID		= [VALUE] FROM CONFIG WHERE  CONFIG_OPTION='HO_LOCATION_ID'		
	
	IF ISNULL(@CMEMONOPREFIX,'')=''
	SET @CMEMONOPREFIX=@CLOCATIONID

	DELETE A FROM PRCL_FREIGHT_UPLOAD A WHERE SP_ID=@NSPID

	BEGIN TRY
		
		BEGIN TRANSACTION
		
					
		IF @NUPDATEMODE = 3			
		BEGIN
			SET @NSTEP = '20'
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid

			IF @CXNMEMOID=''
			BEGIN
				SET @CERRORMSG='MEMO ID REQUIRED FOR CANCELLATION........CANNOT PROCEED'
				GOTO END_PROC
			END

			Exec VALIDATEXN_PRCL_BEFORE_Cancel @CXNMEMOID,@CERRORMSG output 
			

			if isnull(@CERRORMSG,'')<>''
			GOTO END_PROC

			SET @NSTEP = 13
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid

			-- UPDATING SENTTOHO FLAG
			SET @CCMD = N' UPDATE ' + @CMASTERTABLENAME + ' with (rowlock) SET CANCELLED = 1,LAST_UPDATE=GETDATE() ' + 
						N' WHERE ' + @CKEYFIELD1 + ' = ''' + @CXNMEMOID + '''  '
			EXEC SP_EXECUTESQL @CCMD
			
			SET @CKEYFIELDVAL1=@CXNMEMOID

			IF EXISTS (SELECT TOP 1 'U' FROM PARCEL_DET WITH (NOLOCK) WHERE PARCEL_MEMO_ID=@CKEYFIELDVAL1 AND ( REF_MEMO_ID<>'' or PARTY_INV_NO<>'') )
			BEGIN
			     UPDATE A SET REF_MEMO_ID ='', REF_MEMO_NO ='' ,PARTY_INV_NO=''
				 FROM PARCEL_DET A WITH (NOLOCK) WHERE PARCEL_MEMO_ID=@CKEYFIELDVAL1
			END


			SELECT @DOCXN_TYPE = XN_TYPE FROM parcel_mst (NOLOCK) WHERE parcel_memo_id=@CKEYFIELDVAL1

			IF @DOCXN_TYPE='WSL'
				UPDATE inm01106 WITH (ROWLOCk) SET docwsl_parcel_memo_id='' WHERE docwsl_parcel_memo_id=@CKEYFIELDVAL1
			ELSE
			IF @DOCXN_TYPE='PRT'
				UPDATE rmm01106 WITH (ROWLOCk) SET docprt_parcel_memo_id='' WHERE docprt_parcel_memo_id=@CKEYFIELDVAL1

			IF EXISTS (SELECT TOP 1 'U' FROM PARCEL_DET A (nolock) where parcel_memo_id=@CKEYFIELDVAL1 and  isnull(REF_MEMO_ID,'') <>'' and isnull(FREIGHT_AMOUNT,0)<>0)
			begin

			  if @NSPID=''
			    set @NSPID=@nXnSpId
				
				INSERT INTO PRCL_FREIGHT_UPLOAD (XN_TYPE,FREIGHT_AMOUNT,FREIGHT_HSN_CODE,FREIGHT_GST_PERCENTAGE,REF_MEMO_ID,CANCELLED,NEWENTRY,SP_ID,location_code )
				SELECT  B.XN_TYPE,(A.FREIGHT_AMOUNT),A.HSN_CODE FREIGHT_HSN_CODE,
						A.GST_PERCENTAGE FREIGHT_GST_PERCENTAGE,A.REF_MEMO_ID ,B.CANCELLED ,
						0 AS NEWENTRY,@NSPID AS SP_ID,b.location_code 
				FROM PARCEL_DET A
				JOIN PARCEL_MST B ON A.PARCEL_MEMO_ID =B.PARCEL_MEMO_ID
				WHERE A.PARCEL_MEMO_ID=@CKEYFIELDVAL1
				AND ISNULL(A.FREIGHT_AMOUNT,0)<>0 AND XN_TYPE IN('PRT','WSL')
				AND ISNULL(A.REF_MEMO_ID,'')<>''

				goto LBLcalFreight

			end



			GOTO END_PROC
		END

		--blank row Remove
        DELETE A  FROM PRCL_PARCEL_DET_UPLOAD A (NOLOCK) WHERE SP_ID=@NSPID AND ISNULL(QUANTITY,0)  =0
	
		SET @NSTEP=15
		EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
		
		-- GETTING DEPT_ID FROM TEMP MASTER TABLE
		SET @CCMD = 'SELECT @PARCEL_AMOUNT_ENTRY_MODE=PARCEL_AMOUNT_ENTRY_MODE,@CMEMODEPTID = DEPT_ID, @CKEYFIELDVAL1 = PARCEL_MEMO_ID,@XN_TYPE=ISNULL(XN_TYPE,'''')
		         
					 FROM ' + @CTEMPMASTERTABLE +'  (nolock) where  sp_id ='''+@NSPID+''''
		EXEC SP_EXECUTESQL @CCMD, N'@CMEMODEPTID VARCHAR(4) OUTPUT, @CKEYFIELDVAL1 VARCHAR(50) OUTPUT,
								  @XN_TYPE VARCHAR(10) OUTPUT,@PARCEL_AMOUNT_ENTRY_MODE NUMERIC(2,0) OUTPUT ',
								  @CMEMODEPTID OUTPUT, @CKEYFIELDVAL1 OUTPUT,@XN_TYPE OUTPUT,
								  @PARCEL_AMOUNT_ENTRY_MODE OUTPUT
		IF (@CMEMODEPTID IS NULL )
		BEGIN
			  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE SAVED...'
			  --SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'
			  GOTO END_PROC  		
		END
		
		IF @XN_TYPE IN ('WSL','PRT') AND @bCalledFromOtherModule=1
		BEGIN
			SET @NSTEP=17
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
			SET @CCMD=N'SELECT @nEntryCnt=COUNT(*) FROM '+@CTEMPDETAILTABLE1  +'  (nolock) where  sp_id ='''+@NSPID+''''
			EXEC SP_EXECUTESQL @cCmd,N'@nEntryCnt INT OUTPUT',@nEntryCnt OUTPUT
			
			IF @nEntryCnt>1
			BEGIN
				SET @CERRORMSG='Multiple entries not allowed in Case of outward Parcels'
				GOTO END_PROC
			END
		END
	
		
		SET @NSTEP=19
		EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
		DECLARE @cPartyInvNo VARCHAR(50),@cParcelMemoNo VARCHAR(50),@dParcelMemoDt DATETIME
		
		SET @cCmd=N'SELECT TOP 1 @cPartyInvNo=a.party_inv_no FROM '+ @CTEMPDETAILTABLE1+' a  (nolock)
					JOIN '+@CTEMPDETAILTABLE1+' b (nolock) ON a.party_inv_no=b.party_inv_no AND a.sp_id=b.sp_id and 
					''01''+dbo.fn_getfinyear(a.party_inv_dt)=''01''+dbo.fn_getfinyear(b.party_inv_dt) 
					WHERE a.sp_id ='''+@NSPID+''' and a.row_id<>b.row_id'
					
		EXEC SP_EXECUTESQL @cCmd,N'@cPartyInvNo VARCHAR(50) OUTPUT',@cPartyInvNo OUTPUT			
		
		IF ISNULL(@cPartyInvNo,'')<>''
		BEGIN
			SET @cErrormsg='Duplicate bill no.#'+@cPartyInvNo+' not allowed...Please check'
			GOTO END_PROC
		END
		
		SET @NSTEP=21
		EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
		SET @cPartyInvNo=''
		
		SET @cCmd=N'SELECT TOP 1 @cPartyInvNo=a.party_inv_no,@cParcelMemoNo=d.parcel_memo_no,
					@dParcelMemodt=d.parcel_memo_dt FROM '+ @CTEMPDETAILTABLE1+' a (nolock)
					JOIN '+@CTEMPMASTERTABLE+' b (nolock) ON a.parcel_memo_id=b.parcel_memo_id and a.sp_id=b.sp_id 
					JOIN parcel_det c (NOLOCK) ON c.party_inv_no=a.party_inv_no AND
					''01''+dbo.fn_getfinyear(a.party_inv_dt)=''01''+dbo.fn_getfinyear(c.party_inv_dt)
					AND c.ac_code=a.ac_code
					JOIN parcel_mst d (NOLOCK) ON d.parcel_memo_id=c.parcel_memo_id
					WHERE a.sp_id ='''+@NSPID+''' AND d.xn_type='''+@XN_TYPE+''' AND d.cancelled=0 AND a.row_id<>c.row_id 
					'
		EXEC SP_EXECUTESQL @cCmd,N'@cPartyInvNo VARCHAR(50) OUTPUT,@cParcelMemoNo VARCHAR(50) OUTPUT,@dParcelMemoDt DATETIME OUTPUT',
		@cPartyInvNo OUTPUT,@cParcelMemoNo OUTPUT,@dParcelMemoDt OUTPUT					
		
		IF ISNULL(@cPartyInvNo,'')<>''
		BEGIN
			SET @cErrormsg='Bill no.#'+@cPartyInvNo+' already attached in other Parcel Memo#'+@cParcelMemoNo+' Dated:'+CONVERT(VARCHAR,@dParcelMemoDt,105)+'...Please check'
			GOTO END_PROC
		END
				
		-- START UPDATING XN TABLES	
		IF @NUPDATEMODE = 1 -- ADDMODE	
		BEGIN	

		     IF ISNULL(@CLOCATIONID,'')=''
			 BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' LOCATION ID CAN NOT BE BLANK  '  
				GOTO END_PROC    
			 END

			SET @NSTEP = 25		-- GENERATING NEW KEY
		 EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
		 DECLARE @MAINTAIN_IN_OUT_SEREIES_IN_PARCEL VARCHAR(10)
		 SELECT TOP 1 @MAINTAIN_IN_OUT_SEREIES_IN_PARCEL=value FROM config (NOLOCK) WHERE config_option ='MAINTAIN_IN_OUT_SEREIES_IN_PARCEL'
		 IF ISNULL(@MAINTAIN_IN_OUT_SEREIES_IN_PARCEL,'')='1'
		 BEGIN
		    
			 IF @XN_TYPE IN('WSL','PRT')
			  SET @CMEMONOPREFIX=@CMEMONOPREFIX+'O'
			 ELSE IF @XN_TYPE IN('PUR','MIS','WSR','GRN')
			  SET @CMEMONOPREFIX=@CMEMONOPREFIX+'I'
		 END

		 	SET @NSTEP = '26'		-- SETTTING UP ENVIRONMENT
        	EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid

			
			SET @CKEYSTABLE='KEYS_PRCL_'+LTRIM(RTRIM(@CLOCATIONID))
			
			IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
			BEGIN
				-- GENERATING NEW MRR_NO		
				SET @NSAVETRANLOOP=0
				WHILE @NSAVETRANLOOP=0
				BEGIN
					EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid

					--EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,
					--				@CFINYEAR,0, @CMEMONOVAL OUTPUT   

					EXEC GETNEXTKEY_XNS @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,
								@CFINYEAR,0, @CKEYSTABLE,@CMEMONOVAL OUTPUT   
					
					SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+'  (NOLOCK)
											WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' 
											AND FIN_YEAR = '''+@CFINYEAR+''' )
									SET @NLOOPOUTPUT=0
								ELSE
									SET @NLOOPOUTPUT=1'
					PRINT @CCMD
					EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
				END

				IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'	
					  -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'
					  GOTO END_PROC  		
				END

				SET @NSTEP = 30		-- GENERATING NEW ID
				EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
				-- GENERATING NEW PO ID
				SET @CKEYFIELDVAL1 = @CLOCATIONID + RIGHT(@CFINYEAR,2)+REPLICATE('0', (22-LEN(@CLOCATIONID + RIGHT(@CFINYEAR,2)))-LEN(LTRIM(RTRIM(@CMEMONOVAL))))  + LTRIM(RTRIM(@CMEMONOVAL))
				
				IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
					  GOTO END_PROC
				END
				
				SET @NSTEP = 35
				EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
				-- CHECK WETHER THE MEMO ID IS STILL LATER
				IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
					  GOTO END_PROC
				END

				SET @NSTEP = 40		-- UPDATING NEW ID INTO TEMP TABLES
				EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
				-- UPDATING NEWLY GENERATED PO NO AND PO ID IN POM AND POD TEMP TABLES
				SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' WITH (ROWLOCK) SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' + 
							@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' ,FIN_YEAR='''+ @CFINYEAR +''' where  sp_id ='''+@NSPID+''''
				EXEC SP_EXECUTESQL @CCMD
			
				SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE1 + ' WITH (ROWLOCK)
							 SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' where  sp_id ='''+@NSPID+''''
				EXEC SP_EXECUTESQL @CCMD
				
				
			
			END
			
			
			
			

		END					-- END OF ADDMODE
		ELSE				-- CALLED FROM EDITMODE
		BEGIN				-- START OF EDITMODE
		
			SET @NSTEP = 50		-- GETTING ID INFO FROM TEMP TABLE
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
			-- GETTING PO_ID WHICH IS BEING EDITED
			SET @CCMD = 'SELECT @CKEYFIELDVAL1 = PARCEL_MEMO_ID, @CMEMONOVAL = PARCEL_MEMO_NO FROM ' + @CTEMPMASTERTABLE +' (NOLOCK)
						 where  sp_id ='''+@NSPID+''' '
			EXEC SP_EXECUTESQL @CCMD, N'@CKEYFIELDVAL1 VARCHAR(50) OUTPUT, @CMEMONOVAL VARCHAR(50) OUTPUT', 
							   @CKEYFIELDVAL1 OUTPUT, @CMEMONOVAL OUTPUT
			IF (@CKEYFIELDVAL1 IS NULL ) OR (@CMEMONOVAL IS NULL )
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'
				  -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'
				  
				  GOTO END_PROC  		
			END
			
			SET @NSTEP = 60		-- UPDATING SENT_TO_HO FLAG TEMP TABLE
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
				SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE1 + ' with (rowlock) SET PARCEL_MEMO_ID='''+@CKEYFIELDVAL1+'''  where  sp_id ='''+@NSPID+''''
				EXEC SP_EXECUTESQL @CCMD

			
			-- UPDATING SENTTOHO FLAG
			SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' WITH (ROWLOCK) SET LAST_UPDATE=GETDATE()  where sp_id ='''+@NSPID+''' '
			EXEC SP_EXECUTESQL @CCMD


			IF EXISTS (SELECT TOP 1 'U' FROM PARCEL_DET A (nolock) where parcel_memo_id=@CKEYFIELDVAL1 and  isnull(REF_MEMO_ID,'') <>'' and isnull(FREIGHT_AMOUNT,0)<>0)
			begin

				INSERT INTO PRCL_FREIGHT_UPLOAD (XN_TYPE,FREIGHT_AMOUNT,FREIGHT_HSN_CODE,FREIGHT_GST_PERCENTAGE,REF_MEMO_ID,CANCELLED,NEWENTRY,SP_ID)
				SELECT  B.XN_TYPE,(A.FREIGHT_AMOUNT),A.HSN_CODE FREIGHT_HSN_CODE,
						A.GST_PERCENTAGE FREIGHT_GST_PERCENTAGE,A.REF_MEMO_ID ,B.CANCELLED ,
						0 AS NEWENTRY,@NSPID AS SP_ID
				FROM PARCEL_DET A
				JOIN PARCEL_MST B ON A.PARCEL_MEMO_ID =B.PARCEL_MEMO_ID
				WHERE A.PARCEL_MEMO_ID=@CKEYFIELDVAL1
				AND ISNULL(A.FREIGHT_AMOUNT,0)<>0 AND XN_TYPE IN('PRT','WSL')
				AND ISNULL(A.REF_MEMO_ID,'')<>''


			end
				
				
		END					-- END OF EDITMODE
	

		SET @NSTEP = 65
		EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
		-- CHECK WETHER THE MEMO ID IS STILL LATER
		IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
			GOTO END_PROC
		END

		-- AS PER ROHIT SIR

		UPDATE A SET AC_CODE=B.PARCEL_AC_CODE  
		FROM PRCL_PARCEL_DET_UPLOAD A (NOLOCK)
		JOIN PRCL_PARCEL_MST_UPLOAD B ON A.SP_ID =B.SP_ID 
		WHERE A.SP_ID =@NSPID 

		-- UPDATING MASTER TABLE (PIM01106) FROM TEMP TABLE
		SET @NSTEP = 70		-- UPDATING MASTER TABLE
		EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
		DECLARE @CWHERECLAUSE VARCHAR(1000)
		SET @CWHERECLAUSE='  SP_ID='''+ LTRIM(RTRIM((@NSPID)))+''''

		EXEC UPDATEMASTERXN_opt 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPMASTERTABLENAME
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CMASTERTABLENAME
			, @CKEYFIELD1	= @CKEYFIELD1
			, @BALWAYSUPDATE = 1
			,@CFILTERCONDITION=@CWHERECLAUSE
			
		-- UPDATING TRANSACTION TABLE (PID01106) FROM TEMP TABLE
		SET @NSTEP = 80		-- UPDATING TRANSACTION TABLE
		EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
		
			-- UPDATING ROW_ID IN TEMP TABLES
			SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE1 + ' with (rowlock) SET OLD_ROW_ID = ROW_ID,
			COMPANY_CODE=''01'' where sp_id ='''+@NSPID+''''
			EXEC SP_EXECUTESQL @CCMD

		SET @NSTEP = 90				
		EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
			-- UPDATING ROW_ID IN TEMP TABLES
			SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE1 + ' WITH (ROWLOCK) SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(40), NEWID())
						  WHERE sp_id ='''+@NSPID+''' and LEFT(ROW_ID,5) = ''LATER'' '
			EXEC SP_EXECUTESQL @CCMD
			
				-- DELETING EXISTING ENTRIES FROM PID01106 TABLE WHERE ROW_ID NOT FOUND IN TEMPTABLE
			SET @NSTEP = 95		-- UPDATING TRANSACTION TABLE - DELETING EXISTING ENTRIES
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
			SET @CCMD = N'DELETE a FROM parcel_det a with (rowlock) 
						LEFT OUTER JOIN '+@CTEMPDETAILTABLE1+' b (nolock) ON a.row_id=b.row_id
						WHERE a.' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + ''' AND b.row_id IS NULL' 
			EXEC SP_EXECUTESQL @CCMD

			-- INSERTING/UPDATING THE ENTRIES IN PID01106 TABLE FROM TEMPTABLE
			SET @NSTEP = 98		-- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
			EXEC UPDATEMASTERXN_opt 
				  @CSOURCEDB	= @CTEMPDBNAME
				, @CSOURCETABLE = @CTEMPDETAILTABLENAME1
				, @CDESTDB		= ''
				, @CDESTTABLE	= @CDETAILTABLENAME1
				, @CKEYFIELD1	= 'ROW_ID'
				, @BALWAYSUPDATE = 1
				,@CFILTERCONDITION=@CWHERECLAUSE

		SET @NSTEP = 102
		-- DELETING EXISTING ENTRIES FROM PID01106 TABLE WHERE ROW_ID NOT FOUND IN TEMPTABLE
		EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid

		SET @CCMD = N'DELETE a FROM parcel_sub_det a with (rowlock)  
					JOIN parcel_det b (nolock) ON a.parcel_det_row_id=b.row_id
					WHERE parcel_memo_id = ''' + @CKEYFIELDVAL1 + '''' 
		EXEC SP_EXECUTESQL @CCMD
		
		
	
		SET @NSTEP = 120		-- UPDATING TRANSACTION TABLE - DELETING EXISTING ENTRIES
		EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
			-- UPDATING ROW_ID IN TEMP TABLES
			SET @CCMD = N'UPDATE a with (rowlock)  SET parcel_det_ROW_ID = b.row_id FROM '+@CTEMPDETAILTABLE2+' a
						  JOIN '+@CTEMPDETAILTABLE1+' b (NOLOCK) ON a.parcel_det_ROW_ID=b.old_row_id and a.sp_id =b.sp_id 
						  where a.sp_id ='''+@NSPID+''' '
			EXEC SP_EXECUTESQL @CCMD


		
			SET @NSTEP = 121		-- UPDATING TRANSACTION TABLE - DELETING EXISTING ENTRIES
		EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
			-- UPDATING ROW_ID IN TEMP TABLES
			SET @CCMD = N'UPDATE '+@CTEMPDETAILTABLE2+' with (rowlock)  
						  SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(40), NEWID())
						  WHERE LEFT(ROW_ID,5) = ''LATER'' and sp_id ='''+@NSPID+''''
			print @CCMD
			EXEC SP_EXECUTESQL @CCMD

			

				
			-- INSERTING/UPDATING THE ENTRIES IN PID01106 TABLE FROM TEMPTABLE
			SET @NSTEP = 130		-- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
			EXEC UPDATEMASTERXN_opt 
				  @CSOURCEDB	= @CTEMPDBNAME
				, @CSOURCETABLE = @CTEMPDETAILTABLENAME2
				, @CDESTDB		= ''
				, @CDESTTABLE	= 'parcel_sub_det'
				, @CKEYFIELD1	= 'ROW_ID'
				, @BALWAYSUPDATE = 1
				,@CFILTERCONDITION=@CWHERECLAUSE
	
		

		SET @NSTEP = 140
	EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
	
		    
		    SET @CCMD = N'DELETE a FROM PARCEL_BLOCK_PO_DETAILS a with (rowlock)  
			JOIN parcel_det b (nolock) ON a.parcel_det_row_id=b.row_id
		    WHERE parcel_memo_id = ''' + @CKEYFIELDVAL1 + '''' 
		    EXEC SP_EXECUTESQL @CCMD
		
			SET @NSTEP = 145		
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
			-- UPDATING ROW_ID IN TEMP TABLES
			SET @CCMD = N'UPDATE a SET PARCEL_DET_ROW_ID = b.row_id FROM '+@CTEMPDETAILTABLE3+' a with (rowlock) 
						  JOIN '+@CTEMPDETAILTABLE1+' b (NOLOCK) ON a.parcel_det_ROW_ID=b.old_row_id and a.sp_id=b.sp_id 
						  where a.sp_id ='''+@NSPID+''' '
			EXEC SP_EXECUTESQL @CCMD

			SET @NSTEP = 147		-- UPDATING TRANSACTION TABLE - DELETING EXISTING ENTRIES
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
			-- UPDATING ROW_ID IN TEMP TABLES
			SET @CCMD = N'UPDATE '+@CTEMPDETAILTABLE3+' with (rowlock)  SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(40), NEWID())
						  WHERE LEFT(ROW_ID,5) = ''LATER'' and sp_id ='''+@NSPID+''' '
			EXEC SP_EXECUTESQL @CCMD

			-- INSERTING/UPDATING THE ENTRIES IN PID01106 TABLE FROM TEMPTABLE
			SET @NSTEP = 150		-- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid

			EXEC UPDATEMASTERXN_opt 
				  @CSOURCEDB	= @CTEMPDBNAME
				, @CSOURCETABLE = @CTEMPDETAILTABLENAME3
				, @CDESTDB		= ''
				, @CDESTTABLE	= 'PARCEL_BLOCK_PO_DETAILS'
				, @CKEYFIELD1	= 'ROW_ID'
				, @BALWAYSUPDATE = 1
				,@CFILTERCONDITION=@CWHERECLAUSE
			
				
		

		IF @XN_TYPE='GRN'
		BEGIN
			SET @NSTEP=155
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
			IF EXISTS( SELECT TOP 1 PO_ID,TOTAL_QUANTITY ,ISNULL(PARCEL_QTY,0)PARCEL_QTY FROM PARCEL_MST A(NOLOCK) 
						JOIN PARCEL_DET B(NOLOCK) ON A.PARCEL_MEMO_ID=B.PARCEL_MEMO_ID
						JOIN POM01106 C(NOLOCK) ON C.PO_ID=B.REF_MEMO_ID
						LEFT JOIN 
						(
							SELECT B.REF_MEMO_ID,SUM(B.QUANTITY) AS PARCEL_QTY 
							FROM PARCEL_MST A (nolock) 
							JOIN PARCEL_DET B (nolock) ON A.PARCEL_MEMO_ID=B.PARCEL_MEMO_ID
							JOIN  (SELECT distinct REF_MEMO_ID FROM parcel_det (nolock)
							WHERE parcel_memo_id=@CKEYFIELDVAL1)  c ON c.ref_memo_id=b.ref_memo_id
							WHERE A.xn_type='GRN' AND A.CANCELLED=0 
							GROUP BY  B.REF_MEMO_ID
						)Z ON Z.REF_MEMO_ID=C.PO_ID
					 	WHERE A.PARCEL_MEMO_ID=@CKEYFIELDVAL1 AND A.CANCELLED=0 AND C.CANCELLED=0 AND A.xn_type='GRN'
						AND  PARCEL_QTY > TOTAL_QUANTITY 
		   
					   )
			BEGIN
					INSERT INTO @OUTPUT1  (PO_ID,PO_QUANTITY,PARCEL_QTY) 
					SELECT distinct PO_ID,TOTAL_QUANTITY ,ISNULL(PARCEL_QTY,0)PARCEL_QTY FROM PARCEL_MST A(NOLOCK) 
						JOIN PARCEL_DET B(NOLOCK) ON A.PARCEL_MEMO_ID=B.PARCEL_MEMO_ID
						JOIN POM01106 C(NOLOCK) ON C.PO_ID=B.REF_MEMO_ID
							LEFT JOIN 
							(
							   SELECT B.REF_MEMO_ID,SUM(B.QUANTITY) AS PARCEL_QTY 
							   FROM PARCEL_MST A (nolock) 
							   JOIN PARCEL_DET B (nolock) ON A.PARCEL_MEMO_ID=B.PARCEL_MEMO_ID
							   JOIN  (SELECT distinct REF_MEMO_ID FROM parcel_det (nolock)
							   WHERE parcel_memo_id=@CKEYFIELDVAL1)  c ON c.ref_memo_id=b.ref_memo_id
							   WHERE A.CANCELLED=0 AND a.xn_type='GRN'
							   GROUP BY  B.REF_MEMO_ID
							)Z ON Z.REF_MEMO_ID=C.PO_ID
						
						WHERE A.PARCEL_MEMO_ID=@CKEYFIELDVAL1 AND A.CANCELLED=0 AND C.CANCELLED=0 AND A.xn_type='GRN'
						AND  PARCEL_QTY > TOTAL_QUANTITY 
		   
							
						SET @CERRORMSG = 'QUANTITY GOING NEGATIVE FOR THIS PO'
						GOTO END_PROC
			END
	   END		
		
		
		

		
	  
		
		
		IF @PARCEL_AMOUNT_ENTRY_MODE =1
		BEGIN
			set @nStep=160
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
			DECLARE @TOTAL_QTY NUMERIC(10,2),@TOTAL_AMT NUMERIC(10,2)
		
			SELECT @TOTAL_QTY= SUM(quantity) FROM PARCEL_DET (nolock) WHERE parcel_memo_id=@CKEYFIELDVAL1

			UPDATE B SET AMOUNT= CONVERT(NUMERIC(10,2),(TOTAL_AMOUNT / @TOTAL_QTY) * quantity)
			FROM PARCEL_MST A WITH (ROWLOCK)
			JOIN PARCEL_DET B (nolock) ON A.PARCEL_MEMO_ID=B.PARCEL_MEMO_ID
			WHERE A.PARCEL_MEMO_ID=@CKEYFIELDVAL1
	   END
	   IF @PARCEL_AMOUNT_ENTRY_MODE =2
	   BEGIN
			set @nStep=170
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid		
			--UPDATE  A SET total_amount=AMT
			--FROM PARCEL_MST A with (rowlock)
			--JOIN
			--(
			--	SELECT PARCEL_MEMO_ID,SUM(AMOUNT) AS AMT
			--	FROM PARCEL_DET (nolock) WHERE PARCEL_MEMO_ID=@CKEYFIELDVAL1
			--	GROUP BY PARCEL_MEMO_ID
		 --  )B ON A.PARCEL_MEMO_ID=B.PARCEL_MEMO_ID
		 --  WHERE A.parcel_memo_id=@CKEYFIELDVAL1
		
	   END		
		
		set @nStep=175
		EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid

		 DECLARE @STR VARCHAR(1000)

		 IF EXISTS(SELECT TOP 1 'U' FROM PARCEL_MST A with (rowlock) WHERE A.PARCEL_MEMO_ID=@CKEYFIELDVAL1 AND A.xn_type='PUR')
		 BEGIN
			SELECT   @STR =  COALESCE(@STR +  ',', '' ) +rtrim( ltrim( a.PARTY_INV_NO  ))+'/'+rtrim( ltrim(CONVERT(VARCHAR(20), a.PARTY_INV_DT,105)))+'('+rtrim( ltrim( a.REF_MEMO_NO  )) +')'
			FROM PARCEL_DET A  (nolock)
			WHERE A.PARCEL_MEMO_ID=@CKEYFIELDVAL1
		 END
		 ELSE
		 BEGIN
			 SELECT   @STR =  COALESCE(@STR +  ',', '' ) +rtrim( ltrim( a.REF_MEMO_NO  )) 
			 FROM PARCEL_DET A  (nolock)
			 WHERE A.PARCEL_MEMO_ID=@CKEYFIELDVAL1
		END

		
		UPDATE  A SET TOT_QUANTITY=B.TOT_QUANTITY,
		              TOT_QTY=B.TOT_QTY,
		              TOT_BOXES=b.TOT_BOXES,
					  XN_NO_LIST=isnull(@STR,'')
		FROM PARCEL_MST A with (rowlock)
		JOIN
		(
		  SELECT PARCEL_MEMO_ID ,SUM(QTY) AS TOT_QTY,
		         SUM(QUANTITY) AS TOT_QUANTITY,
		         SUM(BOX_NO) AS TOT_BOXES
		  FROM PARCEL_DET A (nolock)
		  WHERE A.PARCEL_MEMO_ID=@CKEYFIELDVAL1
		  GROUP BY PARCEL_MEMO_ID
		) B ON A.PARCEL_MEMO_ID =B.PARCEL_MEMO_ID 
		WHERE A.PARCEL_MEMO_ID=@CKEYFIELDVAL1

	 DECLARE @Cbilty_no VARCHAR(100),@Cfin_year VARCHAR(10),@Cangadia_code VARCHAR(20)

	 --CHECK CONSTRAINT DROP AND APPLY VALIDATION
	 SELECT @Cbilty_no=bilty_no,@Cfin_year=fin_year,@Cangadia_code=angadia_code 
	 FROM parcel_mst (NOLOCK) WHERE  PARCEL_MEMO_ID=@CKEYFIELDVAL1
	 
	IF EXISTS(SELECT TOP 1 'U' FROM parcel_mst  A (NOLOCK) WHERE a.cancelled =0 and   angadia_code=@Cangadia_code AND isnull(bilty_no,'')<>'' 
	    and bilty_no=@Cbilty_no and fin_year=@Cfin_year and a.parcel_memo_id<>@CKEYFIELDVAL1 AND location_code=@CLOCATIONID ) 
	BEGIN
	    SET @CERRORMSG = 'Duplicate bilty no found for this angadia Please check  '
	    GOTO END_PROC
	END
	

	
	DECLARE @dlastUpdate datetime,@CINV_ID VARCHAR(50),@CParcelDetails varchar(1000)

	SET @dLastUpdate=DATEADD(MI,2,getdate())

	IF OBJECT_ID ('TEMPDB..#TMPPARCEL','U') IS NOT NULL
	   drop table #TMPPARCEL

	 SELECT  REF_MEMO_ID into #TMPPARCEL 
	 FROM  PARCEL_DET a (NOLOCK)
     join parcel_mst b (NOLOCK) on a.parcel_memo_id =b.parcel_memo_id 
	 WHERE a.PARCEL_MEMO_ID=@CKEYFIELDVAL1 and b.cancelled =0 AND ISNULL(REF_MEMO_ID,'')<>''
	 group by REF_MEMO_ID

	 while exists (select top 1 'u' from #TMPPARCEL)
	 begin
	     
		SELECT TOP 1 @CINV_ID=REF_MEMO_ID FROM #TMPPARCEL

	      SELECT @XN_TYPE=ISNULL(XN_TYPE,''),@REF_MEMO_ID=ISNULL(REF_MEMO_ID,''),
		        @DOCXN_TYPE=xn_type, @DRECEIPTDT=a.parcel_memo_dt 
		   FROM PARCEL_MST A with (nolock)
		   JOIN PARCEL_DET B with (nolock) ON A.PARCEL_MEMO_ID=B.PARCEL_MEMO_ID
		   WHERE A.PARCEL_MEMO_ID=@CKEYFIELDVAL1 AND B.REF_MEMO_ID=@CINV_ID
		   
		

		 if @Xn_type='PRT' and exists (select top 1 rm_id from rmm01106 (nolock) where rm_id=@REF_MEMO_ID and mode=2)
			SET @DOCXN_TYPE='docprt'
		ELSE
		if @Xn_type='WSL' and exists (select top 1 inv_id from inm01106 (nolock) where inv_id=@REF_MEMO_ID and inv_mode=2)
			SET @DOCXN_TYPE='docwsl'
			
			
		  SELECT @CPARCELDETAILS=Angadia_name    FROM angm (nolock)  WHERE Angadia_code   =@Cangadia_code
		  set @CParcelDetails=isnull(@CParcelDetails,'')+','+isnull(@Cbilty_no,'')
		  
		  if @Xn_type='PRT' 
             UPDATE rmm01106 WITH (ROWLOCk) SET ParcelDetails =@CParcelDetails WHERE rm_id=@REF_MEMO_ID
          ELSE IF @XN_TYPE='WSL' 
              UPDATE INM01106  WITH (ROWLOCk) SET ParcelDetails =@CParcelDetails WHERE INV_ID =@REF_MEMO_ID
              
		 set @nStep=180
		 EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid	
		 
		    declare @CDONOT_CALCULATE_GST_SOR_LOC varchar(10)
		 	IF EXISTS (SELECT TOP 1 'U' FROM LOCATION (NOLOCK) A WHERE DEPT_ID=@ClocationId and SOR_LOC =1) 
			 SELECT TOP 1 @CDONOT_CALCULATE_GST_SOR_LOC=VALUE FROM CONFIG WHERE CONFIG_OPTION ='DONOT_CALCULATE_GST_FOR_SOR_LOCATION'
				

		DECLARE @BENALE_EINVOICE BIT
	    SELECT @benale_einvoice=Enable_EInvoice FROM LOCATION WHERE DEPT_ID=@ClocationId
		if isnull(@benale_einvoice,0)=1 and ISNULL(@CDONOT_CALCULATE_GST_SOR_LOC,'')<>'1'
		BEGIN
		   
		  IF EXISTS (SELECT TOP 1 'U'
		   FROM INM01106 A (NOLOCK) 
		   JOIN LMP01106 LMP (NOLOCK) ON A.ac_code =LMP.AC_CODE 
		   WHERE A.INV_ID =@CINV_ID AND ISNULL(LMP.registered_gst_dealer ,0)=1)
		   BEGIN

				EXEC VALIDATEXN_EINVOICE @CXNID=@CINV_ID,@CDEPT_ID=@ClocationId,@CXN_TYPE='PRCL',@CERRMSG= @CERRORMSG OUTPUT
				IF ISNULL(@CERRORMSG,'')<>''
				 GOTO END_PROC

		   END
	     
	    END

		  SET @NSTEP = '190'		-- SETTTING UP ENVIRONMENT
		  EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid

		IF @DOCXN_TYPE='DOCWSL'
		BEGIN

			SET @NSTEP = '195'		-- SETTTING UP ENVIRONMENT
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid

			IF EXISTS( SELECT TOP 1 'U' FROM   INM01106 A (NOLOCK) JOIN LOCATION L (NOLOCK) ON a.location_Code=L.DEPT_ID 
				JOIN LOCATION L1 (NOLOCK) ON A.PARTY_DEPT_ID  =L1.DEPT_ID 
				WHERE A.INV_ID=@REF_MEMO_ID AND ISNULL(L.SERVER_LOC,0)=1  AND ISNULL(L1.SERVER_LOC,0)=1 
				AND (ISNULL(L1.SIS_LOC ,0)=1 OR ISNULL(L.SIS_LOC ,0)=1 ) AND A.INV_MODE =2
			)
 		   BEGIN
				SET @NSTEP = 200		-- SETTTING UP ENVIRONMENT
				EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
				EXEC SP3S_INS_DOC_MIRROR_TABLES  1, @REF_MEMO_ID    
				
				
				select @cchallanIn_dept_id=party_dept_id  from DOCWSL_INM01106_MIRROR (nolock) where INV_ID =@REF_MEMO_ID
				

				SET @NSTEP = 205		-- SETTTING UP ENVIRONMENT
				EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
				EXEC SAVETRAN_MERGE_MIRROR_DOCWSL_DATA 
				@CMEMOID = @REF_MEMO_ID,  
				@DRECEIPTDT = @DRECEIPTDT, 
				@DLOGINDT = @DRECEIPTDT, 
				@CLOCID=@cchallanIn_dept_id,
				@CMEMONOPREFIX = @CCHALLANMEMONOPREFIX, 
				@CWIZAPPUSERCODE = '0000000', 
				@CERRMSG = @CERRORMSG OUTPUT, 
				@BNEGSTOCKFOUND = @BNEGSTOCKFOUND OUTPUT, 
				@CMRRID = @CMRRID OUTPUT ,
				@BCALLEDFORSISLOC=1

		
		   END   


		   IF @nUpdatemode=2
			UPDATE inm01106 WITH (ROWLOCk) SET docwsl_parcel_memo_id='' WHERE docwsl_parcel_memo_id=@CKEYFIELDVAL1 AND  inv_id<>@REF_MEMO_ID

			set @nStep=268.5
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
	
		    UPDATE inm01106 WITH (ROWLOCk) SET last_update=@dLastUpdate,docwsl_parcel_memo_id=@CKEYFIELDVAL1 WHERE inv_id=@REF_MEMO_ID

			set @nStep=270
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
			
			IF EXISTS(SELECT TOP 1 'U' FROM LOCATION(NOLOCK) WHERE DEPT_ID=@ClocationId AND SERVER_LOC=1 and isnull(SIS_LOC ,0)=0 )
			 AND EXISTS(SELECT TOP 1 'U' FROM location A(NOLOCK) JOIN INM01106 B(NOLOCK) ON A.dept_id=B.party_dept_id
			            WHERE SERVER_LOC=1 AND INV_ID=@REF_MEMO_ID and isnull(a.SIS_LOC ,0)=0 )
			     EXEC SP3S_INS_DOC_MIRROR_TABLES  1, @REF_MEMO_ID     
				 
		END
		ELSE IF @DOCXN_TYPE='DOCPRT'
		BEGIN

			SET @NSTEP =220		-- SETTTING UP ENVIRONMENT
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid

			IF EXISTS( SELECT TOP 1 'U' FROM   RMM01106 A (NOLOCK) JOIN LOCATION L (NOLOCK) ON a.location_Code=L.DEPT_ID 
				JOIN LOCATION L1 (NOLOCK) ON A.PARTY_DEPT_ID  =L1.DEPT_ID 
				WHERE A.RM_ID=@REF_MEMO_ID AND ISNULL(L.SERVER_LOC,0)=1  AND ISNULL(L1.SERVER_LOC,0)=1 
				AND (ISNULL(L1.SIS_LOC ,0)=1 OR ISNULL(L.SIS_LOC ,0)=1 ) AND A.MODE  =2
			)
			BEGIN
				SET @NSTEP =225		-- SETTTING UP ENVIRONMENT
				EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
				EXEC SP3S_INS_DOC_MIRROR_TABLES  2, @REF_MEMO_ID   
				
				select @cchallanIn_dept_id=party_dept_id  from DOCprt_rmm01106_MIRROR where rm_id  =@REF_MEMO_ID 

				SET @NSTEP = 230		-- SETTTING UP ENVIRONMENT
				EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
				EXEC SAVETRAN_MERGE_MIRROR_DOCPRT_DATA 
				@CMEMOID = @REF_MEMO_ID,  
				@DRECEIPTDT = @DRECEIPTDT, 
				@DLOGINDT = @DRECEIPTDT, 
				@CMEMONOPREFIX = @CCHALLANMEMONOPREFIX, 
				@CLOCID=@cchallanIn_dept_id,
				@CWIZAPPUSERCODE = '0000000', 
				@CERRMSG = @CERRORMSG OUTPUT, 
				@BNEGSTOCKFOUND = @BNEGSTOCKFOUND OUTPUT, 
				@CCNID = @CMRRID OUTPUT ,
				@BCALLEDFORSISLOC=1

		
			END   


			IF @nUpdatemode=2
			   UPDATE rmm01106 WITH (ROWLOCk) SET docprt_parcel_memo_id='' WHERE docprt_parcel_memo_id=@CKEYFIELDVAL1 AND  rm_id<>@REF_MEMO_ID
				
				set @nStep=269.3
				EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
				UPDATE rmm01106 WITH (ROWLOCk) SET last_update=@dLastUpdate,docprt_parcel_memo_id=@CKEYFIELDVAL1 WHERE rm_id=@REF_MEMO_ID


		    set @nStep=272
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid 
            IF EXISTS(SELECT TOP 1 'U' FROM LOCATION(NOLOCK) WHERE DEPT_ID=@ClocationId AND SERVER_LOC=1  and isnull(SIS_LOC ,0)=0)
				 AND EXISTS(SELECT TOP 1 'U' FROM location A(NOLOCK) JOIN RMM01106 B(NOLOCK) ON A.dept_id=B.party_dept_id
				            WHERE SERVER_LOC=1 AND RM_ID=@REF_MEMO_ID and isnull(a.SIS_LOC ,0)=0 )
			     EXEC SP3S_INS_DOC_MIRROR_TABLES  2, @REF_MEMO_ID    

		END

			
			

          DELETE FROM #TMPPARCEL WHERE REF_MEMO_ID =@CINV_ID

	end

	-- as Discuss with Sanjiv sir (11012023) Freight Amount add In Wsl Invoice and Debit note)

	  set @nStep=280
	    IF EXISTS (SELECT TOP 1 'U' FROM PARCEL_DET A (nolock) where parcel_memo_id=@CKEYFIELDVAL1 and  isnull(REF_MEMO_ID,'') <>'' and isnull(FREIGHT_AMOUNT,0)<>0)
			begin

				INSERT INTO PRCL_FREIGHT_UPLOAD (location_code , XN_TYPE,FREIGHT_AMOUNT,FREIGHT_HSN_CODE,FREIGHT_GST_PERCENTAGE,REF_MEMO_ID,CANCELLED,NEWENTRY,SP_ID)
				SELECT b.location_code,  B.XN_TYPE,(A.FREIGHT_AMOUNT),A.HSN_CODE FREIGHT_HSN_CODE,
						A.GST_PERCENTAGE FREIGHT_GST_PERCENTAGE,A.REF_MEMO_ID ,B.CANCELLED ,
						1 AS NEWENTRY,@NSPID AS SP_ID
				FROM PARCEL_DET A
				JOIN PARCEL_MST B ON A.PARCEL_MEMO_ID =B.PARCEL_MEMO_ID
				WHERE A.PARCEL_MEMO_ID=@CKEYFIELDVAL1
				AND ISNULL(A.FREIGHT_AMOUNT,0)<>0 AND XN_TYPE IN('PRT','WSL')
				AND ISNULL(A.REF_MEMO_ID,'')<>''


			end
			else if EXISTS (SELECT TOP 1 'U' FROM PARCEL_DET A (nolock) where parcel_memo_id=@CKEYFIELDVAL1 and  isnull(REF_MEMO_ID,'') <>'' and isnull(FREIGHT_AMOUNT,0)=0) and @NUPDATEMODE =2
			begin
			      DECLARE @NGRPFREIGHT  NUMERIC (10,2)
			     IF @XN_TYPE='PRT'
			        SELECT @NGRPFREIGHT=NET_AMOUNT FROM INM01106 WHERE INV_ID=@CINV_ID 
			     ELSE IF @XN_TYPE='WSL'
			        SELECT @NGRPFREIGHT=NET_AMOUNT FROM INM01106 WHERE INV_ID=@CINV_ID 
			        
			        if @NGRPFREIGHT<>0
			        begin
			            
			        INSERT INTO PRCL_FREIGHT_UPLOAD (location_code , XN_TYPE,FREIGHT_AMOUNT,FREIGHT_HSN_CODE,FREIGHT_GST_PERCENTAGE,REF_MEMO_ID,CANCELLED,NEWENTRY,SP_ID)
					SELECT b.location_code,  B.XN_TYPE,(A.FREIGHT_AMOUNT),A.HSN_CODE FREIGHT_HSN_CODE,
							A.GST_PERCENTAGE FREIGHT_GST_PERCENTAGE,A.REF_MEMO_ID ,B.CANCELLED ,
							1 AS NEWENTRY,@NSPID AS SP_ID
					FROM PARCEL_DET A
					JOIN PARCEL_MST B ON A.PARCEL_MEMO_ID =B.PARCEL_MEMO_ID
					WHERE A.PARCEL_MEMO_ID=@CKEYFIELDVAL1
					AND XN_TYPE IN('PRT','WSL')
					AND ISNULL(A.REF_MEMO_ID,'')<>''
			        
			        end
			        
			        
			end

			set @nStep=290
			LBLcalFreight:

			IF EXISTS (SELECT TOP 1 'U' FROM PRCL_FREIGHT_UPLOAD A (NOLOCK) WHERE SP_ID=@NSPID)
			BEGIN
			     
				 exec Sp3s_Cal_FreightAmount
					 @cPARCEL_MEMO_ID=@CKEYFIELDVAL1,
					 @NSPID=@NSPID,
					 @CERRORMSG=@CERRORMSG output 

				if isnull(@CERRORMSG,'')<>''
				  GOTO END_PROC

			END






	GOTO END_PROC

		
	END TRY
	BEGIN CATCH
		SET @CERRORMSG = 'STEP- ' + LTRIM(rtrim(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
				
		GOTO END_PROC
	END CATCH
	
END_PROC:
	
	 set @nStep=260
	 EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid

      UPDATE PARCEL_MST with (rowlock) SET last_update =GETDATE() WHERE parcel_memo_id=@CKEYFIELDVAL1
	  UPDATE PARCEL_MST with (rowlock) SET HO_SYNCH_LAST_UPDATE ='' WHERE parcel_memo_id=@CKEYFIELDVAL1
	
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')='' and isnull(@BNEGSTOCKFOUND,0)=0
		 COMMIT TRANSACTION
		 			
		ELSE
			ROLLBACK
	END

    set @nStep=262
	EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid

	INSERT @OUTPUT ( ERRMSG, MEMO_ID)
			VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )

	SELECT * FROM @OUTPUT
	
	IF EXISTS(SELECT TOP 1 'U'  FROM @OUTPUT1)
	SELECT * FROM  @OUTPUT1
		
 --delete upload tables 

 			set @nStep=264
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
			 DELETE A FROM PRCL_PARCEL_MST_UPLOAD A with (rowlock) WHERE SP_ID =@NSPID 
			 DELETE A FROM PRCL_PARCEL_DET_UPLOAD A with (rowlock)WHERE SP_ID =@NSPID 
			 DELETE A FROM PRCL_PARCEL_SUB_DET_UPLOAD A with (rowlock) WHERE SP_ID =@NSPID 
			 DELETE A FROM PRCL_PARCEL_BLOCK_PO_DETAILS_UPLOAD A with (rowlock) WHERE SP_ID =@NSPID 

 			set @nStep=266
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid

	
	IF ISNULL(@CERRORMSG,'')='' 
    BEGIN	
			
			set @nStep=268
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid
			
			
			set @nStep=269.5
			EXEC SP_CHKXNSAVELOG 'prcl',@nStep,0,@nXnSpid

			IF EXISTS (SELECT TOP 1 memo_id FROM postact_voucher_link a (NOLOCK) JOIN vm01106 b (NOLOCK) ON A.VM_ID=B.VM_ID
					   WHERE a.memo_id=@REF_MEMO_ID AND ((a.xn_type IN ('WSLCHO') AND  @XN_TYPE='WSL') OR
					   (a.xn_type IN ('PRTCHO') AND  @XN_TYPE='PRT')) AND b.cancelled=0)
			BEGIN
				UPDATE a  WITH (ROWLOCK) SET last_update=@dLastUpdate FROM  postact_voucher_link a 
				JOIN vm01106 b (NOLOCK) ON A.VM_ID=B.VM_ID
				WHERE a.memo_id=@REF_MEMO_ID AND ((a.xn_type IN ('WSL','WSLCHO') AND  @XN_TYPE='WSL') OR
				(a.xn_type IN ('PRT','PRTCHO') AND  @XN_TYPE='PRT')) AND b.cancelled=0
			END	

			 
    END  
	
-------------------------------------------
last:

	
END