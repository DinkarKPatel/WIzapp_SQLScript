CREATE PROCEDURE SAVETRAN_PS_JWR--(LocId 3 digit change by Sanjay:06-11-2024)
(
	@NUPDATEMODE		NUMERIC(1,0),
	@NSPID				INT,
	@CFINYEAR			VARCHAR(10),
	@CMACHINENAME		VARCHAR(100)='',
	@CWINDOWUSERNAME	VARCHAR(100)='',
	@CWIZAPPUSERCODE	VARCHAR(10)='0000000',
	@CMEMOID			VARCHAR(40)='',
	@CPREFIX			VARCHAR(5)=''
)
--WITH ENCRYPTION
AS
BEGIN
	-- @NUPDATEMODE:	1- NEW MEMO ADDED, 
	--					2- EDITING OF MEMO, 
	--					3- CURRENT MEMO CANCELLED, 

	DECLARE @CTEMPDBNAME			VARCHAR(100),
			@CMASTERTABLENAME		VARCHAR(100),
			@CDETAILTABLENAME1		VARCHAR(100),
			@CDETAILTABLENAME2		VARCHAR(100),
			@CTEMPMASTERTABLENAME	VARCHAR(100),
			@CTEMPDETAILTABLENAME1	VARCHAR(100),
			@CTEMPDETAILTABLENAME2	VARCHAR(100),
			@CTEMPMASTERTABLE		VARCHAR(300),
			@CTEMPDETAILTABLE1		VARCHAR(300),
			@CTEMPDETAILTABLE2		VARCHAR(300),
			@CERRORMSG				VARCHAR(500),
			@LDONOTUPDATESTOCK		BIT,
			@CKEYFIELD1				VARCHAR(50),
			@CKEYFIELDVAL1			VARCHAR(50),
			@CMEMONO				VARCHAR(20),
			@NMEMONOLEN				NUMERIC(20,0),
			@CMEMONOVAL				VARCHAR(50),
			@CLOCATIONID			VARCHAR(4),
			@CHODEPTID				VARCHAR(4),
			@CCMD					NVARCHAR(4000),
			@CCMDOUTPUT				NVARCHAR(4000),
			@NSAVETRANLOOP			BIT,
			@NSTEP					INT,
			@BNEGSTOCKFOUND BIT,
			@CUSERALIAS	VARCHAR(5),@CMEMONOPREFIX VARCHAR(10),
			@CEXPRERRORMSG	VARCHAR(MAX)		

	DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))


	SET @NSTEP = 0		-- SETTTING UP ENVIRONMENT
	-- TEMPORARY DATABASE Discarded now onwards as per Meeting on 30-10-2020 mentioned in Client issues List
	SET @CTEMPDBNAME = ''

	
	SET @CMASTERTABLENAME	= 'POST_SALES_JOBWORK_RECEIPT_MST'
	SET @CDETAILTABLENAME1	= 'POST_SALES_JOBWORK_RECEIPT_DET'
	/***CHANGE 1 - 6THJULY2012:JOBWORK_RECEIPT_CON_DET NOT IN USE***/
	--SET @CDETAILTABLENAME2	= 'JOBWORK_RECEIPT_CON_DET'
	/***CHANGE 1 - 6THJULY2012:JOBWORK_RECEIPT_CON_DET NOT IN USE***/
	
	
	SET @CTEMPMASTERTABLENAME	= 'TEMP_'+@CMASTERTABLENAME+'_'+LTRIM(RTRIM(STR(@NSPID)))
	SET @CTEMPDETAILTABLENAME1	= 'TEMP_'+@CDETAILTABLENAME1+'_'+LTRIM(RTRIM(STR(@NSPID)))
	/***CHANGE 1 - 6THJULY2012:JOBWORK_RECEIPT_CON_DET NOT IN USE***/
	--SET @CTEMPDETAILTABLENAME2	= 'TEMP_'+@CDETAILTABLENAME2+'_'+LTRIM(RTRIM(STR(@NSPID)))
	/***CHANGE 1 - 6THJULY2012:JOBWORK_RECEIPT_CON_DET NOT IN USE***/
	
	SET @CTEMPMASTERTABLE	= @CTEMPDBNAME + @CTEMPMASTERTABLENAME
	SET @CTEMPDETAILTABLE1	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME1
	/***CHANGE 1 - 6THJULY2012:JOBWORK_RECEIPT_CON_DET NOT IN USE***/
	--SET @CTEMPDETAILTABLE2	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME2
	/***CHANGE 1 - 6THJULY2012:JOBWORK_RECEIPT_CON_DET NOT IN USE***/
	
	SET @CERRORMSG			= ''
	SET @LDONOTUPDATESTOCK	= 0
	SET @CKEYFIELD1			= 'RECEIPT_ID'
	SET @CMEMONO			= 'RECEIPT_NO'
	SET @NMEMONOLEN			= 10

	
	
	SELECT @CHODEPTID		= [VALUE] FROM CONFIG WHERE  CONFIG_OPTION='HO_LOCATION_ID'		

	SET @NSTEP = 10		-- GETTING DEPTID INFO FROM TEMP TABLE
	
		
	
	BEGIN TRY

	
		BEGIN TRANSACTION

						
		IF @NUPDATEMODE<>3
		BEGIN
		
			SET @cCmd=N'SELECT TOP 1 @cLocationId=location_code FROM '+@CTEMPMASTERTABLE
			EXEC SP_EXECUTESQL @cCmd,N'@cLocationId varchar(4) output',@cLocationId OUTPUT

			EXEC SP_VALIDATEXN_BEFORESAVE 'JWR',@NSPID,'0000000',@NUPDATEMODE,@CCMDOUTPUT OUTPUT,@BNEGSTOCKFOUND OUTPUT
			IF ISNULL(@CCMDOUTPUT,'') <> ''
			BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' DATA VALIDATION ON TEMP DATA FAILED : ' + @CCMDOUTPUT + '...'
				GOTO END_PROC
			END
		END
		ELSE
		BEGIN
	
			SELECT TOP 1 @cLocationId=location_code FROM POST_SALES_JOBWORK_RECEIPT_MST (nolock) where receipt_id=@cMemoId

			EXEC VALIDATEXN_BEFORE_EDIT 'JWR',@CMEMOID,0,@CWIZAPPUSERCODE,@CERRORMSG OUTPUT,@CEXPRERRORMSG OUTPUT,@CLOCATIONID
			
			IF ISNULL(@CERRORMSG,'')<>''
				GOTO END_PROC
		END
		
		IF @NUPDATEMODE = 3 AND ISNULL(@CMEMOID,'') = ''
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' MEMO ID REQUIRED IF CALLED FROM CANCELLATION'
			GOTO END_PROC  		
		END
		

		-- START UPDATING XN TABLES	
		IF @NUPDATEMODE = 1 -- ADDMODE	
		BEGIN	
			IF ISNULL(@CLOCATIONID,'')=''
			 BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' LOCATION ID CAN NOT BE BLANK  '  
				GOTO END_PROC    
			 END

			SET @NSTEP=15

 
			SET @CMEMONOPREFIX=@CLOCATIONID
			
		
			SET @NSTEP = 20		-- GENERATING NEW KEY
			
			-- GENERATING NEW JOB ORDER NO		
			SET @NSAVETRANLOOP=0
			
			WHILE @NSAVETRANLOOP=0
			BEGIN
				EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CPREFIX, 1, 
								@CFINYEAR,0, @CMEMONOVAL OUTPUT   
				
				PRINT @CMEMONOVAL
				SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+' 
										WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' 
										AND FIN_YEAR = '''+@CFINYEAR+''' )
								SET @NLOOPOUTPUT=0
							ELSE
								SET @NLOOPOUTPUT=1'
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
				
			END
			
			IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'	
				  GOTO END_PROC  		
			END

			SET @NSTEP = 30		-- GENERATING NEW ID

			-- GENERATING NEW JOB ORDER ID
			SET @CKEYFIELDVAL1 = @CLOCATIONID + @CFINYEAR+ REPLICATE('0', 10-LEN(LTRIM(RTRIM(@CMEMONOVAL)))) + LTRIM(RTRIM(@CMEMONOVAL)) 
			IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
				  -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'
				  GOTO END_PROC
			END

			SET @NSTEP = 40		-- UPDATING NEW ID INTO TEMP TABLES

			-- UPDATING NEWLY GENERATED JOB ORDER NO AND JOB ORDER ID IN PIM AND PID TEMP TABLES			
			SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' + 
						@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''',BIN_ID=''999'' '
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
		    
		    
			SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			
		END					-- END OF ADDMODE
		ELSE				-- CALLED FROM EDITMODE
		BEGIN				-- START OF EDITMODE
		
			SET @NSTEP = 50		-- GETTING ID INFO FROM TEMP TABLE

			
			-- GETTING MEMO ID WHICH IS BEING EDITED
			SET @CCMD = 'SELECT @CKEYFIELDVAL1 = ' + @CKEYFIELD1 + ', @CMEMONOVAL = ' + @CMEMONO + ' FROM '
						+ (CASE WHEN @NUPDATEMODE=3 THEN @CMASTERTABLENAME + ' WHERE RECEIPT_ID = ''' + @CMEMOID + ''''
								ELSE @CTEMPMASTERTABLE END )
			print @CCMD
			EXEC SP_EXECUTESQL @CCMD, N'@CKEYFIELDVAL1 VARCHAR(50) OUTPUT, @CMEMONOVAL VARCHAR(50) OUTPUT', 
							   @CKEYFIELDVAL1 OUTPUT, @CMEMONOVAL OUTPUT
							   
			IF (@CKEYFIELDVAL1 IS NULL ) OR (@CMEMONOVAL IS NULL )
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'
				  GOTO END_PROC  		
			END
		    
		    
		  
			SET @NSTEP = 55		-- STORING OLD STATUS OF BARCODES 

			
			IF @NUPDATEMODE = 3			
			BEGIN
				SET @NSTEP = 60
				-- UPDATING SENTTOHO FLAG
				SET @CCMD = N'UPDATE ' + @CMASTERTABLENAME + ' SET CANCELLED = 1 ' + 
							N' WHERE ' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + ''''
				EXEC SP_EXECUTESQL @CCMD
			END
			
			ELSE
			BEGIN

				SET @NSTEP = 65		-- UPDATING SENT_TO_HO FLAG TEMP TABLE
				-- UPDATING SENTTOHO FLAG
				
				SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' SET SENT_TO_HO = 0,LAST_UPDATE=GETDATE()'
				EXEC SP_EXECUTESQL @CCMD

				EXEC SP3S_UPDATEPMT_ALTERATION
				 @CXN_TYPE='PSJWR'
				 ,@CXNID   = @CKEYFIELDVAL1  
				, @NREVERTFLAG  = 1  
				, @NALLOWNEGSTOCK = 1    
				, @CCMD    = @CCMDOUTPUT OUTPUT  


				
				IF @CCMDOUTPUT <> ''
				BEGIN
					SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR UPDATING THE STOCK STATUS IN PMT....'
					SET @BNEGSTOCKFOUND=1					
					EXEC SP_EXECUTESQL @CCMDOUTPUT
				    GOTO END_PROC
				END	
				
				
				
			END
			-- REVERTING BACK THE STOCK OF PMT W.R.T CURRENT ISSUE
			SET @NSTEP = 80		-- REVERTING STOCK
			
			IF (@NUPDATEMODE = 3) 
			BEGIN

			   

				EXEC SP3S_UPDATEPMT_ALTERATION
				 @CXN_TYPE='PSJWR'
				 ,@CXNID   = @CKEYFIELDVAL1  
				, @NREVERTFLAG  = 1  
				, @NALLOWNEGSTOCK = 0    
				, @CCMD    = @CCMDOUTPUT OUTPUT  

				IF @CCMDOUTPUT <> ''
				BEGIN
					SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR UPDATING THE STOCK STATUS IN PMT....'
					SET @BNEGSTOCKFOUND=1					
					EXEC SP_EXECUTESQL @CCMDOUTPUT
				    GOTO END_PROC
				END	

				GOTO END_PROC
			END
		END					-- END OF EDITMODE

		SET @NSTEP = 95
		
		-- RECHECKING IF ID IS STILL LATER
		IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR GETTING NEXT MEMO ID....'
			GOTO END_PROC
		END

		IF @NUPDATEMODE <> 3
		BEGIN
			
			SET @NSTEP = 105		-- UPDATING MASTER TABLE
		
			EXEC UPDATEMASTERXN_OPT 
				  @CSOURCEDB	= @CTEMPDBNAME
				, @CSOURCETABLE = @CTEMPMASTERTABLENAME
				, @CDESTDB		= ''
				, @CDESTTABLE	= @CMASTERTABLENAME
				, @CKEYFIELD1	= @CKEYFIELD1
				,@BALWAYSUPDATE = 1
				/*
			--UPDATE1:TEMP MASTERTABLE NOT IN USE*/
			-- UPDATING TRANSACTION TABLE (PID01106) FROM TEMP TABLE
			SET @NSTEP = 110		-- UPDATING TRANSACTION TABLE
			
			SET @CCMD=N'ALTER TABLE '+@CTEMPDETAILTABLE1+' ADD OLD_ROW_ID VARCHAR(40)'
			EXEC SP_EXECUTESQL @CCMD
			
			SET @NSTEP = 112
			
			-- UPDATING ROW_ID IN TEMP TABLES
			
			SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET OLD_ROW_ID=ROW_ID,ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(38), NEWID()),
			               HSN_CODE=''0000000000''
						  WHERE LEFT(ROW_ID,5) = ''LATER'''
			EXEC SP_EXECUTESQL @CCMD
			
			-- DELETING EXISTING ENTRIES FROM DETAIL TABLE WHERE ROW_ID NOT FOUND IN TEMPTABLE
			/*--UPDATE1:TEMP MASTERTABLE NOT IN USE*/
			SET @NSTEP = 114		-- UPDATING TRANSACTION TABLE - DELETING EXISTING ENTRIES

			SET @CCMD = N'DELETE FROM ' + @CDETAILTABLENAME1 + ' 
						WHERE ' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''
						AND ROW_ID IN 
						(
							SELECT A.ROW_ID 
							FROM ' + @CDETAILTABLENAME1 + ' A 
							LEFT OUTER JOIN ' + @CTEMPDETAILTABLE1 + ' B ON A.ROW_ID = B.ROW_ID
							WHERE A.' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''
							AND   B.ROW_ID IS NULL
						)'
			EXEC SP_EXECUTESQL @CCMD
			
			SET @NSTEP=117
			
				SET @CCMD = N'UPDATE A SET  HSN_CODE= B.HSN_CODE  FROM '  + @CTEMPDETAILTABLE1 + ' A  
				         JOIN ARTICLE B ON A.ARTICLE_CODE=B.ARTICLE_CODE 
						WHERE ISNULL(A.HSN_CODE,'''') IN ( '''',''0000000000'')'
			PRINT @CCMD			 
			EXEC SP_EXECUTESQL @CCMD
			
			
			SET @NSTEP=120
			
		
			EXEC UPDATEMASTERXN_OPT 
				  @CSOURCEDB	= @CTEMPDBNAME
				, @CSOURCETABLE = @CTEMPDETAILTABLENAME1
				, @CDESTDB		= ''
				, @CDESTTABLE	= @CDETAILTABLENAME1
				, @CKEYFIELD1	= 'ROW_ID'
				,@BALWAYSUPDATE = 1
			
			SET @NSTEP = 135

			IF @CCMDOUTPUT <> ''
			BEGIN
				PRINT @CCMDOUTPUT
				
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR UPDATING THE STOCK STATUS IN PMT....'
				SET @BNEGSTOCKFOUND=1				
				EXEC SP_EXECUTESQL @CCMDOUTPUT
				GOTO END_PROC
			END
		END
		
		--GST CALCULATION
    DECLARE @CPARTYSTATECODE VARCHAR(4),@BGSTBILL BIT,@DMEMO_DT DATETIME,
    @CPARTY_GSTN_NO VARCHAR(20),@BREGISTERED INT,@CGSTCUTOFFDATE VARCHAR(10),@NTAX NUMERIC(12,2)
    SELECT @CGSTCUTOFFDATE=VALUE FROM CONFIG WHERE CONFIG_OPTION ='GST_CUT_OFF_DATE'
  
  SET @BGSTBILL=0
  IF ISNULL(@CGSTCUTOFFDATE,'')<>''
  BEGIN	
      SELECT TOP 1 @CPARTY_GSTN_NO=AC_GST_NO,@CPARTYSTATECODE=LM.AC_GST_STATE_CODE ,
	  @DMEMO_DT=A.RECEIPT_DT,
	  @BREGISTERED=ISNULL(REGISTERED_GST_DEALER,0)
	  FROM POST_SALES_JOBWORK_RECEIPT_MST A
	  JOIN PRD_AGENCY_MST B ON A.AGENCY_CODE =B.AGENCY_CODE 
	  JOIN LMP01106 LM ON LM.AC_CODE=B.AC_CODE  WHERE A.RECEIPT_ID =@CKEYFIELDVAL1	
      
      IF @DMEMO_DT>'2017-06-30'
      SET @BGSTBILL=1
     
  END
	
	
  --CALCULATE GST AMOUNT
  IF @BGSTBILL=1
	BEGIN
			SET @NSTEP=187
			DELETE FROM GST_TAXINFO_CALC WITH (ROWLOCK) WHERE SP_ID=RTRIM(LTRIM(STR(@NSPID)))
			DELETE FROM GST_TAXINFO_CALC_OH WITH (ROWLOCK) WHERE SP_ID=RTRIM(LTRIM(STR(@NSPID)))
		    
			INSERT GST_TAXINFO_CALC	WITH (ROWLOCK) ( HSN_CODE,PRODUCT_CODE, SP_ID ,NET_VALUE,TAX_METHOD,ROW_ID,QUANTITY,TARGET_DEPT_ID,SOURCE_DEPT_ID,MRP)  
			SELECT HSN_CODE,PRODUCT_CODE,@NSPID AS SP_ID,
			A.JOB_RATE AS NET_VALUE
            ,ISNULL(B.BILL_LEVEL_TAX_METHOD ,2) AS TAX_METHOD,
			ROW_ID,A.QUANTITY,LEFT (A.RECEIPT_ID,2) AS PARTY_DEPT_ID ,LEFT (A.RECEIPT_ID,2) AS  DEPT_ID,A.MRP 
			FROM POST_SALES_JOBWORK_RECEIPT_DET  A
			JOIN POST_SALES_JOBWORK_RECEIPT_MST B ON A.RECEIPT_ID =B.RECEIPT_ID
			WHERE A.RECEIPT_ID =@CKEYFIELDVAL1
	
								
			SET @NSTEP=188
			EXEC SP3S_GST_TAX_CAL
				@CXN_TYPE='PSJWR',
				@CMEMO_ID='',
				@DMEMO_DT=@DMEMO_DT,
				@NSPID=@NSPID,
				@CPARTYSTATE_CODE=@CPARTYSTATECODE,
				@BPARTYREGISTERED=@BREGISTERED,
				@CPARTY_GSTN_NO=@CPARTY_GSTN_NO,
				@CERRMSG=@CERRORMSG OUTPUT,
				@cLocationId=@cLocationId
			  
			IF ISNULL(@CERRORMSG,'')<>''
				 GOTO END_PROC
		
		  	UPDATE A SET HSN_CODE=B.HSN_CODE,GST_PERCENTAGE=B.GST_PERCENTAGE,IGST_AMOUNT=B.IGST_AMOUNT,
			CGST_AMOUNT=B.CGST_AMOUNT,SGST_AMOUNT=B.SGST_AMOUNT,
			XN_VALUE_WITHOUT_GST=B.XN_VALUE_WITHOUT_GST,XN_VALUE_WITH_GST=B.XN_VALUE_WITH_GST
			FROM POST_SALES_JOBWORK_RECEIPT_DET A
			JOIN GST_TAXINFO_CALC B ON A.ROW_ID =B.ROW_ID 
			WHERE A.RECEIPT_ID =@CKEYFIELDVAL1
			AND B.SP_ID=RTRIM(LTRIM(STR(@NSPID)))
			
		  SELECT @NTAX=ROUND(SUM(ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)),3) FROM POST_SALES_JOBWORK_RECEIPT_DET WHERE RECEIPT_ID =@CKEYFIELDVAL1  
		  	
		  UPDATE POST_SALES_JOBWORK_RECEIPT_MST SET ROUND_OFF=ROUND((NET_AMOUNT + (CASE WHEN ISNULL(BILL_LEVEL_TAX_METHOD,2) = 2 THEN 0 ELSE ISNULL(@NTAX,0) END)) ,0)-
		  (NET_AMOUNT+ (CASE WHEN ISNULL(BILL_LEVEL_TAX_METHOD,2) = 2 THEN 0 ELSE ISNULL(@NTAX,0) END))
		  WHERE RECEIPT_ID =@CKEYFIELDVAL1 


		  UPDATE POST_SALES_JOBWORK_RECEIPT_MST SET NET_AMOUNT=ROUND(NET_AMOUNT +CASE WHEN ISNULL(BILL_LEVEL_TAX_METHOD,2) = 2 THEN 0 ELSE ISNULL(@NTAX,0) END  ,0)
		  WHERE RECEIPT_ID =@CKEYFIELDVAL1  
  
	END
		
		

		EXEC SP3S_UPDATEPMT_ALTERATION
				 @CXN_TYPE='PSJWR'
				 ,@CXNID   = @CKEYFIELDVAL1  
				, @NREVERTFLAG  = 0  
				, @NALLOWNEGSTOCK = 0    
				, @CCMD    = @CCMDOUTPUT OUTPUT  


				
				IF @CCMDOUTPUT <> ''
				BEGIN
					SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR UPDATING THE STOCK STATUS IN PMT....'
					SET @BNEGSTOCKFOUND=1					
					EXEC SP_EXECUTESQL @CCMDOUTPUT
				    GOTO END_PROC
				END	
		-- VALIDATING ENTRIES 
		SET @NSTEP = 150		-- VALIDATING ENTRIES

		EXEC VALIDATEXN
			  @CXNTYPE	= 'JWR'  
			, @CXNID	= @CKEYFIELDVAL1
			, @CCMD		= @CCMDOUTPUT OUTPUT

		IF @CCMDOUTPUT <> ''
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' DATA VALIDATION FAILED : ' + @CCMDOUTPUT + '...'
			GOTO END_PROC
		END

		-- AFTER SUCCESSFUL SAVING , JUST DROP THE TEMP TABLES CREATED BY APPLICATION
		SET @NSTEP = 170
		
	
	END TRY
	
	BEGIN CATCH
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		-- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG, '''' AS MEMO_ID'
		
		GOTO END_PROC
	END CATCH
	
END_PROC:
    
	UPDATE post_sales_jobwork_receipt_mst WITH (ROWLOCk) SET last_update=getdate() WHERE receipt_id=@CKEYFIELDVAL1
	
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')='' AND ISNULL(@BNEGSTOCKFOUND,0)=0
		BEGIN
		   	UPDATE post_sales_jobwork_receipt_mst WITH (ROWLOCk) SET HO_SYNCH_LAST_UPDATE='' WHERE receipt_id=@CKEYFIELDVAL1
			commit TRANSACTION
			exec SP3S_INSUPDATE_ITEM_STATUS 'PSJWR',@CKEYFIELDVAL1,@NUPDATEMODE
		END
		ELSE
			ROLLBACK
	END
	
	IF ISNULL(@BNEGSTOCKFOUND,0)=0
	BEGIN
		INSERT @OUTPUT ( ERRMSG, MEMO_ID)
		VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )

		SELECT * FROM @OUTPUT	
	END	
	
	

	EXEC SP_DROPTEMPTABLES_XNS 'XNSPSJWR',@NSPID	
END		
------------------------------------------------------ END OF PROCEDURE SAVETRAN_PS_JWR
