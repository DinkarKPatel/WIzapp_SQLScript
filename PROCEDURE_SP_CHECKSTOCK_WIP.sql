CREATE PROCEDURE SP_CHECKSTOCK_WIP    
 @CPRODUCTCODE VARCHAR(50),    
 @CDEPT_ID  VARCHAR(5)='',  
 @CWHERE VARCHAR(40)='',  
 @CUSERCODE VARCHAR(10),
 @CWIP_UID VARCHAR(MAX) ,
 @CLOCID	VARCHAR(4)='' 
-- WITH ENCRYPTION
AS    
BEGIN  
 --(dinkar) Replace  left(memoid,2) to Location_code  
 DECLARE @NSTKQTY NUMERIC(10,3),@CPRDCODE VARCHAR(100)      ,@CLOC_ID  VARCHAR(5)

  
   IF ISNULL(@CLOCID,'')=''
		SELECT @CLOC_ID	=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
	ELSE
		SELECT @CLOC_ID=@CLOCID
    
    
    
    
 SELECT TOP 1 @CPRDCODE=PRODUCT_CODE FROM EAN_SYNC WHERE EAN=@CPRODUCTCODE   
     
 IF @CPRDCODE IS NULL  
  SELECT @CPRDCODE=PRODUCT_CODE FROM wip_pmt WHERE PRODUCT_CODE=@CPRODUCTCODE      
     
     
 IF @CPRDCODE IS NULL      
  SELECT 'SELECTED BARCODE NOT FOUND....PLEASE CHECK' AS RETMSG      
 ELSE        
 BEGIN  
  SELECT @NSTKQTY = QUANTITY_IN_STOCK   
  FROM WIP_PMT PMT (NOLOCK)  
  LEFT OUTER JOIN  BINUSERS LOC(NOLOCK) ON LOC.BIN_ID=PMT.BIN_ID  
  WHERE  PRODUCT_CODE=@CPRDCODE 
  AND (@CUSERCODE=(CASE WHEN @CUSERCODE='0000000' THEN @CUSERCODE ELSE LOC.USER_CODE END))  
  AND (ISNULL(@CWIP_UID,'')=(CASE WHEN ISNULL(@CWIP_UID,'')='' THEN ISNULL(@CWIP_UID,'') ELSE PMT.WIP_UID END))  
  AND QUANTITY_IN_STOCK> 0
  
   
  IF ISNULL(@NSTKQTY,0)>0 
   SELECT '' AS RETMSG      
  ELSE      
   SELECT 'BARCODE NOT IN STOCK....PLEASE CHECK' AS RETMSG      
        
  IF OBJECT_ID('TEMPDB..#SP_CHECKSTOCK','U') IS NOT NULL   
   DROP TABLE #SP_CHECKSTOCK  

   --value addion already add BASE_PRICE in VALUE_ADDITION
  
  SELECT  PMT.PRODUCT_CODE, PMT.ARTICLE_CODE, B.ARTICLE_NO, B.ARTICLE_NAME, PMT.PARA1_CODE,      
  C.PARA1_NAME, PMT.PARA2_CODE, D.PARA2_NAME, PMT.PARA3_CODE, F.PARA3_NAME, E.UOM_NAME,         
  ISNULL(PMT.DEPT_ID, @CLOC_ID) AS DEPT_ID, 1  CODING_SCHEME,  
  B.INACTIVE, PMT.QUANTITY_IN_STOCK,PMT.BASE_PRICE AS PURCHASE_PRICE,PMT.BASE_PRICE+PMT.VALUE_ADDITION AS [MRP],0 AS WS_PRICE,       
  '' AS SCHEME_ID, SM.SECTION_NAME, SD.SUB_SECTION_NAME,PMT.PARA4_CODE,PMT.PARA5_CODE,PMT.PARA6_CODE,      
  PARA4_NAME,PARA5_NAME,PARA6_NAME,B.UOM_CODE,ISNULL(E.UOM_TYPE,0) AS [UOM_TYPE],      
  B.DT_CREATED AS [ART_DT_CREATED],F.DT_CREATED AS [PARA3_DT_CREATED],'' AS [SKU_DT_CREATED],      
  B.STOCK_NA,(CASE  WHEN @CPRDCODE=@CPRODUCTCODE THEN '' ELSE @CPRODUCTCODE END) AS EAN,  
  '0000000' FORM_ID,'' FORM_NAME,0 TAX_PERCENTAGE , '' PRODUCT_NAME, PMT.BASE_PRICE+PMT.VALUE_ADDITION AS RATE,0 ER_FLAG     ,
  0 AS [FIX_MRP] ,'' as AC_NAME,'' INV_DT,'' RECEIPT_DT ,'0000000000' AC_CODE,B.ALIAS AS [ARTICLE_ALIAS],
  ISNULL(PMT.BIN_ID, @CDEPT_ID) AS [BIN_ID],ISNULL(BIN.BIN_NAME, '') AS [BIN_NAME],PMT.WIP_UID,
  CONVERT(BIT ,1) AS WIP,JB.JOB_CODE,JB.JOB_NAME,
  PMT.BASE_PRICE AS [PREV_JOB_RATE],--+PMT.VALUE_ADDITION
  0 as value_add ,b.HSN_CODE
  INTO #SP_CHECKSTOCK  
  FROM   WIP_PMT PMT  (NOLOCK) 
  LEFT OUTER JOIN BIN (NOLOCK) ON BIN.BIN_ID=ISNULL(PMT.BIN_ID, @CDEPT_ID)
  JOIN ARTICLE B  (NOLOCK) ON PMT.ARTICLE_CODE = B.ARTICLE_CODE        
  JOIN SECTIOND SD  (NOLOCK) ON B.SUB_SECTION_CODE = SD.SUB_SECTION_CODE      
  JOIN SECTIONM SM  (NOLOCK) ON SD.SECTION_CODE = SM.SECTION_CODE      
  JOIN PARA1 C  (NOLOCK) ON PMT.PARA1_CODE = C.PARA1_CODE        
  JOIN PARA2 D  (NOLOCK) ON PMT.PARA2_CODE = D.PARA2_CODE        
  JOIN PARA3 F  (NOLOCK) ON PMT.PARA3_CODE = F.PARA3_CODE        
  JOIN PARA4 G  (NOLOCK) ON PMT.PARA4_CODE = G.PARA4_CODE        
  JOIN PARA5 H  (NOLOCK) ON PMT.PARA5_CODE = H.PARA5_CODE        
  JOIN PARA6 I  (NOLOCK) ON PMT.PARA6_CODE = I.PARA6_CODE         
  JOIN UOM E  (NOLOCK) ON B.UOM_CODE = E.UOM_CODE   
  JOIN JOBS    JB (NOLOCK) ON JB.JOB_CODE=PMT.JOB_CODE
  LEFT OUTER JOIN BINUSERS LOC (NOLOCK) ON LOC.BIN_ID=PMT.BIN_ID AND LOC.USER_CODE=@CUSERCODE  
  WHERE  PMT.PRODUCT_CODE=@CPRDCODE AND   
  (@CUSERCODE=(CASE WHEN @CUSERCODE='0000000' THEN @CUSERCODE ELSE LOC.USER_CODE END)) 
  AND (ISNULL(@CWIP_UID,'')=(CASE WHEN ISNULL(@CWIP_UID,'')='' THEN ISNULL(@CWIP_UID,'') ELSE PMT.WIP_UID END))   
  AND PMT.DEPT_ID= @CLOC_ID   
  --IF EXISTS (SELECT DEPT_ID FROM #SP_CHECKSTOCK WHERE QUANTITY_IN_STOCK>0 AND ((DEPT_ID=@CDEPT_ID)  OR BIN_ID =@CDEPT_ID) AND WIP_UID=@CWIP_UID )
  -- SELECT * FROM #SP_CHECKSTOCK WHERE DEPT_ID=@CDEPT_ID    OR BIN_ID =@CDEPT_ID  AND QUANTITY_IN_STOCK>0
  --ELSE IF EXISTS (SELECT DEPT_ID FROM #SP_CHECKSTOCK WHERE QUANTITY_IN_STOCK>0 AND (BIN_ID <>@CDEPT_ID) )  
  -- SELECT * FROM #SP_CHECKSTOCK WHERE DEPT_ID<>@CDEPT_ID    AND BIN_ID <>@CDEPT_ID AND QUANTITY_IN_STOCK>0
  --ELSE  
   SELECT * FROM #SP_CHECKSTOCK WHERE QUANTITY_IN_STOCK>0  --DUE TO ERROR IN APPLICATION LEVEL
   SELECT *,CAST(1 as bit) AS CHK FROM #SP_CHECKSTOCK WHERE QUANTITY_IN_STOCK>0 
 END      
END
