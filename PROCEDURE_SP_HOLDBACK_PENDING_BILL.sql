CREATE PROCEDURE SP_HOLDBACK_PENDING_BILL  
(  
 @CFM_DT DATETIME='',  
 @CTO_DT DATETIME='',  
 @CCUST_CODE VARCHAR(100)='',  
 @CMEMO_ID VARCHAR(100)='',  
 @CDEPT_ID CHAR(4)='',
 @CPRODUCT_CODE VARCHAR(100)=''
)  
--WITH ENCRYPTION  
AS  
BEGIN  
--(dinkar) Replace  left(memoid,2) to Location_code 
  
 IF (@CCUST_CODE='' AND @CMEMO_ID='')
		SET @CCUST_CODE='LATER'

  DECLARE @CVALCASHE CHAR(2),@CDONOTCHECKDSM CHAR(2)  
  SELECT @CVALCASHE = VALUE FROM CONFIG WHERE CONFIG_OPTION = 'OPEN_CASHIER_FOR_CASHMEMOS'  
    SELECT @CDONOTCHECKDSM=VALUE FROM CONFIG WHERE  CONFIG_OPTION='DO_NOT_CHECK_DSM_IN_HOLD_BACK'  
  SET  @CVALCASHE= ISNULL(@CVALCASHE,0)  
  SET @CDONOTCHECKDSM=ISNULL(@CDONOTCHECKDSM,0)  

	IF @CFM_DT='' AND @CMEMO_ID=''  
		SET @CMEMO_ID='RETURN_BLANK_ROW' 
	ELSE IF @CFM_DT='' AND @CMEMO_ID<>''       
		SELECT @CFM_DT=CM_DT,@CTO_DT=CM_DT  FROM CMM01106 WHERE CM_ID=@CMEMO_ID

	--IF(@CCUST_CODE='')
	--BEGIN
	--	SELECT @CCUST_CODE=customer_code FROM custdym WHERE user_customer_code=@CCUST_CODE
	--	SET @CCUST_CODE=ISNULL(@CCUST_CODE,'')
	--END

	

     IF ISNULL(@CPRODUCT_CODE,'')<>''
        GOTO LBLBARCODEDETAILS

--SET @CDONOTCHECKDSM=1
     
 IF (@CVALCASHE= 0)   
 BEGIN   
      IF OBJECT_ID('TEMPDB..#TMPCMD','U') IS NOT NULL
         DROP TABLE #TMPCMD
 
       SELECT CMM.CM_ID ,CMD.ROW_ID ,CMD.QUANTITY ,
              CMD.PRODUCT_CODE,CMD.MRP,CMD.NET  
             ,CMD.DISCOUNT_PERCENTAGE,CMD.DISCOUNT_AMOUNT 
             ,ISNULL(CMD.HOLD_FOR_ALTER,0) AS CHKDELEVER    
             ,CMD.TAX_PERCENTAGE,CMD.TAX_AMOUNT,CMD.EMP_CODE  
             ,CMD.DEPT_ID,CMD.TAX_TYPE,CMD.TAX_METHOD,CMD.EMP_CODE1  
             ,CMD.EMP_CODE2  
             ,CMD.ITEM_DESC  
             ,CMD.WEIGHTED_AVG_DISC_PCT  
             ,CMD.WEIGHTED_AVG_DISC_AMT  
             ,CMD.MANUAL_DISCOUNT  
             ,CMD.FIX_MRP  
             ,CMD.SR_NO  
             ,CMD.PACK_SLIP_ID  
             ,CMD.XN_TYPE  
             ,CMD.REPEAT_PUR_ORDER  
             ,CMD.BIN_ID   
             ,CMD.REF_ORDER_ID  
             ,CMD.FOC_QUANTITY  
             ,CMD.CMM_DISCOUNT_AMOUNT  
             ,CMD.NRM_ID  
       INTO #TMPCMD
       FROM CMM01106 CMM (NOLOCK)    
       JOIN CMD01106 CMD WITH (INDEX(ind_cmd01106_cmid), NOLOCK) ON CMM.CM_ID=CMD.CM_ID 
	   LEFT OUTER join 
	   (
	    SELECT IT.CM_ID   FROM ITEM_STATUS IT (NOLOCK) 
	    JOIN HOLD_BACK_DELIVER_MST MST ON IT.HBD_MEMO_ID =MST.MEMO_ID
		 WHERE  ISNULL(MST.CANCELLED,0)=0
		GROUP BY IT.CM_ID 
		) it ON IT.CM_ID=CMM.cm_id 
    --JOIN CUSTDYM DYM (NOLOCK) ON DYM.CUSTOMER_CODE=CMM.CUSTOMER_CODE    
       WHERE 
       --NOT EXISTS (       
       --  SELECT TOP 1 HD.REF_CMD_ROW_ID       
       --  FROM HOLD_BACK_DELIVER_DET HD WITH(INDEX =IX_HOLD_BACK_DELIVER_DET_MEMO_ID,NOLOCK)        
       --  JOIN HOLD_BACK_DELIVER_MST HM (NOLOCK) ON HD.MEMO_ID =HM.MEMO_ID       
       --  WHERE LEFT(HM.MEMO_ID,2)=@CDEPT_ID AND HM.CANCELLED=0  AND CMD.ROW_ID=REF_CMD_ROW_ID      
       --  )   
       IT.CM_ID IS NULL
		 --AND               (@CMEMO_ID='' OR CMM.CM_ID LIKE @CMEMO_ID  )      
       AND (@CCUST_CODE='' OR CMM.CUSTOMER_CODE=@CCUST_CODE)      
       AND (@CDEPT_ID='' OR cmm.location_Code =@CDEPT_ID)         
       AND CMM.CANCELLED=0      
       --AND CMM.SUBTOTAL>0      
    AND CMD.QUANTITY>0    
       AND (( CMM.CM_DT BETWEEN @CFM_DT AND @CTO_DT ))   
       AND (@CMEMO_ID ='' OR CMM.CM_ID LIKE @CMEMO_ID )     


    
 --SELECT * FROM #TMPCMD
       CREATE INDEX  IX_REF_CMD_ROW_ID_HBD   ON #TMPCMD(CM_ID)
      
      
      SELECT CMM.CM_NO,CONVERT(VARCHAR,CMM.CM_DT,105) AS CM_DT,CMM.CM_ID,QUANTITY=SUM(QUANTITY)  
      ,CMM.SUBTOTAL,CMM.DISCOUNT_PERCENTAGE,CMM.DISCOUNT_AMOUNT,CMM.NET_AMOUNT  
      ,CMM.CUSTOMER_CODE,CUSTOMER_NAME=C.CUSTOMER_TITLE +' '+C.CUSTOMER_FNAME + ' '+C.CUSTOMER_LNAME  
      ,USER_CUSTOMER_CODE   
      ,CANCELLED=CASE WHEN CMM.CANCELLED =0 THEN '' ELSE 'CANCELLED' END  
      ,CMM.USER_CODE  
      ,CMM.FIN_YEAR,CMM.ROUND_OFF,CMM.MEMO_TYPE,CMM.REMARKS  
      ,CMM.PARTY_TYPE,CMM.AC_CODE,LM.AC_NAME ,CMM.BIN_ID,BIN.BIN_NAME,CMM.CM_NO AS SOURCE_MEMO_NO,CMM.CM_ID AS SOURCE_MEMO_ID   
       FROM CMM01106 CMM (NOLOCK)  
       JOIN #TMPCMD CMD (NOLOCK) ON CMM.CM_ID=CMD.CM_ID  
       JOIN CUSTDYM C (NOLOCK) ON C.CUSTOMER_CODE=CMM.CUSTOMER_CODE   
       JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE =CMM.AC_CODE   
       JOIN BIN (NOLOCK) ON BIN.BIN_ID =CMM.BIN_ID   
      -- LEFT JOIN  
      -- ( SELECT HD.REF_CMD_ROW_ID FROM HOLD_BACK_DELIVER_DET HD (NOLOCK)   
      --   JOIN HOLD_BACK_DELIVER_MST HM (NOLOCK) ON HD.MEMO_ID =HM.MEMO_ID   
      --   WHERE HM.CANCELLED=0  
      -- ) HD ON HD.REF_CMD_ROW_ID=CMD.ROW_ID   
      -- JOIN CUSTDYM C (NOLOCK) ON C.CUSTOMER_CODE=CMM.CUSTOMER_CODE   
      -- JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE =CMM.AC_CODE   
      -- JOIN BIN (NOLOCK) ON BIN.BIN_ID =CMM.BIN_ID  
      -- WHERE   
      --(@CMEMO_ID='' OR CMM.CM_ID LIKE @CMEMO_ID  )  
      -- AND (@CCUST_CODE='' OR CMM.CUSTOMER_CODE=@CCUST_CODE)  
      -- AND (@CDEPT_ID='' OR LEFT (CMM.CM_ID,2)=@CDEPT_ID)     
      -- AND CMM.CANCELLED=0  AND HD.REF_CMD_ROW_ID IS NULL  
      -- AND CMM.SUBTOTAL>0  
      --  AND ((CMM.CM_DT BETWEEN @CFM_DT AND @CTO_DT ) OR CMM.CM_ID LIKE @CMEMO_ID )  
       GROUP BY  
       CMM.CM_NO,CMM.CM_DT,CMM.CM_ID  
      ,CMM.SUBTOTAL,CMM.DISCOUNT_PERCENTAGE,CMM.DISCOUNT_AMOUNT,CMM.NET_AMOUNT  
      ,CMM.CUSTOMER_CODE  
      ,CMM.CANCELLED  
      ,CMM.USER_CODE,CMM.LAST_UPDATE  
      ,CMM.FIN_YEAR,CMM.ROUND_OFF,CMM.MEMO_TYPE,CMM.REMARKS  
      ,CMM.PARTY_TYPE,CMM.AC_CODE,CMM.BIN_ID,BIN.BIN_NAME,  
      C.CUSTOMER_TITLE ,C.CUSTOMER_FNAME,C.CUSTOMER_LNAME,LM.AC_NAME,USER_CUSTOMER_CODE    
      --HAVING SUM(QUANTITY)>0  
      ORDER BY CMM.CM_DT,CMM.CM_ID  
      
      
     SELECT CMD.CM_ID,CMM.CM_NO,CMD.PRODUCT_CODE,CMD.QUANTITY,CMD.MRP,CMD.NET  
     ,CMD.DISCOUNT_PERCENTAGE,CMD.DISCOUNT_AMOUNT,CMD.ROW_ID   
     ,SKU.SECTION_NAME,SKU.SUB_SECTION_NAME ,SKU.ARTICLE_NO,SKU.ARTICLE_NAME    
     ,SKU.PARA1_NAME ,SKU.PARA2_NAME ,SKU.PARA3_NAME ,SKU.PARA4_NAME ,SKU.PARA5_NAME ,SKU.PARA6_NAME,
      CAST('' AS VARCHAR(100)) AS UOM_NAME,SKU.SN_Uom_type as UOM_TYPE  
     ,ISNULL(CMD.CHKDELEVER,0) AS CHKDELEVER    
     ,CMD.TAX_PERCENTAGE,CMD.TAX_AMOUNT,CMD.EMP_CODE  
     ,CMD.DEPT_ID,CMD.TAX_TYPE,CMD.TAX_METHOD,CMD.EMP_CODE1  
     ,CMD.EMP_CODE2  
     ,CMD.ITEM_DESC  
     ,CMD.WEIGHTED_AVG_DISC_PCT  
     ,CMD.WEIGHTED_AVG_DISC_AMT  
     ,CMD.MANUAL_DISCOUNT  
     ,CMD.FIX_MRP  
     ,CMD.SR_NO  
     ,CMD.PACK_SLIP_ID  
     ,CMD.XN_TYPE  
     ,CMD.REPEAT_PUR_ORDER  
     ,CMD.BIN_ID   
     ,CMD.REF_ORDER_ID  
     ,CMD.FOC_QUANTITY  
     ,CMD.CMM_DISCOUNT_AMOUNT  
     ,CMD.NRM_ID   
     ,EMP.EMP_NAME  
     ,EMP1.EMP_NAME AS EMP_NAME1 ,EMP2.EMP_NAME AS EMP_NAME2,CMM.CM_ID AS SOURCE_MEMO_ID,
	 s.ARTICLE_CODE ,CMD.PRODUCT_CODE AS [OLD_PRODUCT_CODE]
	 ,s.para1_code,s.para2_code,s.para3_code,s.para4_code,s.para5_code,s.para6_code,CMM.CM_DT
      FROM #TMPCMD CMD (NOLOCK)  
      JOIN CMM01106 CMM (NOLOCK) ON CMD.CM_ID =CMM.CM_ID 
      JOIN SKU_NAMES (NOLOCK) SKU ON SKU.PRODUCT_CODE =CMD.PRODUCT_CODE   
	  join sku s on s.product_code=cmd.PRODUCT_CODE
	  --JOIN ARTICLE ART (NOLOCK) ON SKU.ARTICLE_NO=ART.ARTICLE_NO
      LEFT OUTER JOIN EMPLOYEE EMP (NOLOCK) ON CMD.EMP_CODE = EMP.EMP_CODE   
      LEFT OUTER JOIN EMPLOYEE EMP1  (NOLOCK) ON CMD.EMP_CODE1 = EMP1.EMP_CODE       
      LEFT OUTER JOIN EMPLOYEE EMP2  (NOLOCK) ON CMD.EMP_CODE2 = EMP2.EMP_CODE     
      WHERE  CMM.CANCELLED=0 
      AND CMD.QUANTITY>0   
      --AND (CMM.SUBTOTAL+ISNULL(CMM.SUBTOTAL_R,0))>0  
      --AND CMM.SUBTOTAL>0  
      ORDER BY CMM.CM_DT,CMM.CM_ID  
     
     GOTO END_PROC
  END  
  ELSE  
  BEGIN 
       SELECT CMM.CM_NO,CONVERT(VARCHAR,CMM.CM_DT,105) AS CM_DT,CMM.CM_ID,QUANTITY=SUM(QUANTITY)  
      ,CMM.SUBTOTAL,CMM.DISCOUNT_PERCENTAGE,CMM.DISCOUNT_AMOUNT,CMM.NET_AMOUNT  
      ,CMM.CUSTOMER_CODE,CUSTOMER_NAME=C.CUSTOMER_TITLE +' '+C.CUSTOMER_FNAME + ' '+C.CUSTOMER_LNAME  
      ,USER_CUSTOMER_CODE   
      ,CANCELLED=CASE WHEN CMM.CANCELLED =0 THEN '' ELSE 'CANCELLED' END  
      ,CMM.USER_CODE  
      ,CMM.FIN_YEAR,CMM.ROUND_OFF,CMM.MEMO_TYPE,CMM.REMARKS  
      ,CMM.PARTY_TYPE,CMM.AC_CODE,LM.AC_NAME ,CMM.BIN_ID,BIN.BIN_NAME,CMM.CM_NO AS SOURCE_MEMO_NO,CMM.CM_ID AS SOURCE_MEMO_ID 
	  ,HD.HBD_MEMO_NO
       FROM CMM01106 CMM (NOLOCK)  
      LEFT JOIN 
	  (	SELECT DISTINCT CM_ID 
		FROM DSD01106 DSD (NOLOCK) 
		JOIN DSM01106 DSM (NOLOCK)   ON DSD.DS_ID = DSM.DS_ID WHERE DSM.CANCELLED = 0 
	  )DS   ON DS.CM_ID = CMM.CM_ID  
       JOIN CMD01106 CMD (NOLOCK) ON CMM.CM_ID=CMD.CM_ID   
       LEFT JOIN  
       (   
         SELECT HD.REF_CMD_ROW_ID,HM.memo_no AS HBD_MEMO_NO FROM HOLD_BACK_DELIVER_DET HD (NOLOCK)   
         JOIN HOLD_BACK_DELIVER_MST HM (NOLOCK) ON HD.MEMO_ID =HM.MEMO_ID   
         WHERE HM.CANCELLED=0  
        ) HD ON HD.REF_CMD_ROW_ID=CMD.ROW_ID   
       JOIN CUSTDYM C (NOLOCK) ON C.CUSTOMER_CODE=CMM.CUSTOMER_CODE   
       JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE =CMM.AC_CODE   
       JOIN BIN (NOLOCK) ON BIN.BIN_ID =CMM.BIN_ID  
       WHERE   
     --  --((@CMEMO_ID='' AND CMM.CM_DT BETWEEN @CFM_DT AND @CTO_DT)  
     --  --OR  CMM.CM_ID LIKE @CMEMO_ID)  
     --  --12 JUL 2018  
     --  --(@CMEMO_ID<>'' OR CMM.CM_DT BETWEEN @CFM_DT AND @CTO_DT )  
     --  (  
     --(@CMEMO_ID='' AND CMM.CM_DT BETWEEN @CFM_DT AND @CTO_DT)  
     --OR  
     --(@CMEMO_ID<>'' AND CMM.CM_ID LIKE @CMEMO_ID)  
     --  )  
     --  --12 JUL 2018  
     --  AND (@CMEMO_ID='' OR CMM.CM_ID LIKE @CMEMO_ID)  
      (@CDONOTCHECKDSM='1' OR DS.CM_ID IS NOT NULL)  
      AND (@CMEMO_ID='' OR CMM.CM_ID LIKE @CMEMO_ID  )  
       AND (@CCUST_CODE='' OR CMM.CUSTOMER_CODE=@CCUST_CODE)  
       AND (@CDEPT_ID='' OR cmm.CUSTOMER_CODE =@CDEPT_ID)  
        
       AND CMM.CANCELLED=0  AND HD.REF_CMD_ROW_ID IS NULL  
       --AND (CMM.SUBTOTAL+ISNULL(CMM.SUBTOTAL_R,0))>0   
       --AND CMM.SUBTOTAL>0  

	   --AND CMM.CM_ID LIKE @CMEMO_ID 
	   AND CMD.QUANTITY>0
       AND ((CMM.CM_DT BETWEEN @CFM_DT AND @CTO_DT ) AND CMM.CM_ID LIKE @CMEMO_ID ) 
      
       GROUP BY  
       CMM.CM_NO,CMM.CM_DT,CMM.CM_ID  
      ,CMM.SUBTOTAL,CMM.DISCOUNT_PERCENTAGE,CMM.DISCOUNT_AMOUNT,CMM.NET_AMOUNT  
      ,CMM.CUSTOMER_CODE  
      ,CMM.CANCELLED  
      ,CMM.USER_CODE,CMM.LAST_UPDATE  
      ,CMM.FIN_YEAR,CMM.ROUND_OFF,CMM.MEMO_TYPE,CMM.REMARKS  
      ,CMM.PARTY_TYPE,CMM.AC_CODE,CMM.BIN_ID,BIN.BIN_NAME,  
       C.CUSTOMER_TITLE ,C.CUSTOMER_FNAME,C.CUSTOMER_LNAME,LM.AC_NAME,USER_CUSTOMER_CODE 
	   ,HD.HBD_MEMO_NO
      -- HAVING SUM(QUANTITY)>0    
       ORDER BY CMM.CM_DT,CMM.CM_ID  
         
           SELECT CMD.CM_ID,CMM.CM_NO,CMD.PRODUCT_CODE,CMD.QUANTITY,CMD.MRP,CMD.NET  
     ,CMD.DISCOUNT_PERCENTAGE,CMD.DISCOUNT_AMOUNT,CMD.ROW_ID   
     ,M.SECTION_NAME,D.SUB_SECTION_NAME ,ART.ARTICLE_NO,ART.ARTICLE_NAME    
     ,P1.PARA1_NAME ,P2.PARA2_NAME ,P3.PARA3_NAME ,P4.PARA4_NAME ,P5.PARA5_NAME ,P6.PARA6_NAME,UOM.UOM_NAME,UOM_TYPE  
     ,ISNULL(CMD.HOLD_FOR_ALTER,0) AS CHKDELEVER    
     ,CMD.TAX_PERCENTAGE,CMD.TAX_AMOUNT,CMD.EMP_CODE  
     ,CMD.DEPT_ID,CMD.TAX_TYPE,CMD.TAX_METHOD,CMD.EMP_CODE1  
     ,CMD.EMP_CODE2  
     ,CMD.ITEM_DESC  
     ,CMD.WEIGHTED_AVG_DISC_PCT  
     ,CMD.WEIGHTED_AVG_DISC_AMT  
     ,CMD.MANUAL_DISCOUNT  
     ,CMD.FIX_MRP  
     ,CMD.SR_NO  
     ,CMD.PACK_SLIP_ID  
     ,CMD.XN_TYPE  
     ,CMD.REPEAT_PUR_ORDER  
     ,CMD.BIN_ID   
     ,CMD.REF_ORDER_ID  
     ,CMD.FOC_QUANTITY  
     ,CMD.CMM_DISCOUNT_AMOUNT  
     ,CMD.NRM_ID ,EMP.EMP_NAME  
     ,EMP1.EMP_NAME AS EMP_NAME1 ,EMP2.EMP_NAME AS EMP_NAME2,CMM.CM_ID AS SOURCE_MEMO_ID   ,HD.HBD_MEMO_NO
	 ,CMD.PRODUCT_CODE AS [OLD_PRODUCT_CODE]
	  ,sku.para1_code,sku.para2_code,sku.para3_code,sku.para4_code,sku.para5_code,sku.para6_code,CMM.CM_DT
      FROM CMD01106 CMD (NOLOCK)  
      JOIN CMM01106 CMM ON CMD.CM_ID =CMM.CM_ID   
      LEFT OUTER JOIN EMPLOYEE EMP (NOLOCK)ON CMD.EMP_CODE = EMP.EMP_CODE   
      LEFT OUTER JOIN EMPLOYEE EMP1  (NOLOCK) ON CMD.EMP_CODE1 = EMP1.EMP_CODE       
      LEFT OUTER JOIN EMPLOYEE EMP2  (NOLOCK) ON CMD.EMP_CODE2 = EMP2.EMP_CODE      
      LEFT JOIN (SELECT DISTINCT CM_ID FROM DSD01106 DSD (NOLOCK) JOIN DSM01106 DSM (NOLOCK)   
      ON DSD.DS_ID = DSM.DS_ID WHERE DSM.CANCELLED = 0 )DS  
      ON DS.CM_ID = CMM.CM_ID  
      JOIN SKU (NOLOCK) SKU ON SKU.PRODUCT_CODE =CMD.PRODUCT_CODE   
      JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =SKU.ARTICLE_CODE   
      JOIN SECTIOND D (NOLOCK) ON D.SUB_SECTION_CODE=ART.SUB_SECTION_CODE   
      JOIN SECTIONM M (NOLOCK) ON M.SECTION_CODE =D.SECTION_CODE  
      JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE =SKU.PARA1_CODE   
      JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE =SKU.PARA2_CODE   
      JOIN PARA3 P3 (NOLOCK) ON P3.PARA3_CODE =SKU.PARA3_CODE   
      JOIN PARA4 P4 (NOLOCK) ON P4.PARA4_CODE =SKU.PARA4_CODE   
      JOIN PARA5 P5 (NOLOCK) ON P5.PARA5_CODE =SKU.PARA5_CODE   
      JOIN PARA6 P6 (NOLOCK) ON P6.PARA6_CODE =SKU.PARA6_CODE   
      JOIN UOM(NOLOCK) ON UOM.UOM_CODE =ART.UOM_CODE  
      LEFT JOIN  
         (   
       SELECT HD.REF_CMD_ROW_ID,Hm.memo_no AS HBD_MEMO_NO FROM HOLD_BACK_DELIVER_DET HD (NOLOCK)   
       JOIN HOLD_BACK_DELIVER_MST HM (NOLOCK) ON HD.MEMO_ID =HM.MEMO_ID   
       WHERE HM.CANCELLED=0  
      ) HD ON HD.REF_CMD_ROW_ID=CMD.ROW_ID   
      WHERE   
      ----((@CMEMO_ID='' AND CMM.CM_DT BETWEEN @CFM_DT AND @CTO_DT)  
      ----OR   CMM.CM_ID LIKE @CMEMO_ID)  
      --   --12 JUL 2018  
      --   --(@CMEMO_ID<>'' OR CMM.CM_DT BETWEEN @CFM_DT AND @CTO_DT )  
      --   (  
      --  (@CMEMO_ID='' AND CMM.CM_DT BETWEEN @CFM_DT AND @CTO_DT)  
      --  OR  
      --  (@CMEMO_ID<>'' AND CMM.CM_ID LIKE @CMEMO_ID)  
      --   )  
      --   --12 JUL 2018  
      --AND (@CMEMO_ID='' OR CMM.CM_ID LIKE @CMEMO_ID)  
      (@CDONOTCHECKDSM='1' OR DS.CM_ID IS NOT NULL)  
        
       AND(@CMEMO_ID='' OR CMM.CM_ID LIKE @CMEMO_ID  )  
      AND (@CCUST_CODE='' OR CMM.CUSTOMER_CODE=@CCUST_CODE)  
      AND (@CDEPT_ID='' OR cmm.CUSTOMER_CODE =@CDEPT_ID)  
      AND CMM.CANCELLED=0 AND HD.REF_CMD_ROW_ID IS NULL  
      AND CMD.QUANTITY>0  
         
      --AND (CMM.SUBTOTAL+ISNULL(CMM.SUBTOTAL_R,0))>0  
     --AND CMM.SUBTOTAL>0  
     AND ((CMM.CM_DT BETWEEN @CFM_DT AND @CTO_DT ) AND CMM.CM_ID LIKE @CMEMO_ID )  
     ORDER BY CMM.CM_DT,CMM.CM_ID  
     GOTO END_PROC
  END 
  
  
  LBLBARCODEDETAILS:  
  
  IF NOT EXISTS (SELECT * FROM SKU WHERE PRODUCT_CODE =@CPRODUCT_CODE)-- and BARCODE_CODING_SCHEME=3)
  begin
       SELECT 'BARCODE  SCAN ONLY UNIQUE ITEM' AS ERRMSG
       RETURN
  end 
  
 IF (@CVALCASHE= 0)   
 BEGIN   
    
      IF OBJECT_ID('TEMPDB..#TMPCMD','U') IS NOT NULL
         DROP TABLE #TMPCMD
 
       SELECT CMM.CM_ID ,CMD.ROW_ID ,CMD.QUANTITY ,
              CMD.PRODUCT_CODE,CMD.MRP,CMD.NET  
             ,CMD.DISCOUNT_PERCENTAGE,CMD.DISCOUNT_AMOUNT 
             ,ISNULL(CMD.HOLD_FOR_ALTER,0) AS CHKDELEVER    
             ,CMD.TAX_PERCENTAGE,CMD.TAX_AMOUNT,CMD.EMP_CODE  
             ,CMD.DEPT_ID,CMD.TAX_TYPE,CMD.TAX_METHOD,CMD.EMP_CODE1  
             ,CMD.EMP_CODE2  
             ,CMD.ITEM_DESC  
             ,CMD.WEIGHTED_AVG_DISC_PCT  
             ,CMD.WEIGHTED_AVG_DISC_AMT  
             ,CMD.MANUAL_DISCOUNT  
             ,CMD.FIX_MRP  
             ,CMD.SR_NO  
             ,CMD.PACK_SLIP_ID  
             ,CMD.XN_TYPE  
             ,CMD.REPEAT_PUR_ORDER  
             ,CMD.BIN_ID   
             ,CMD.REF_ORDER_ID  
             ,CMD.FOC_QUANTITY  
             ,CMD.CMM_DISCOUNT_AMOUNT  
             ,CMD.NRM_ID 
             ,CMD.TS 
       INTO #TMPCMDPRODUCT
       FROM CMM01106 CMM (NOLOCK)    
       JOIN CMD01106 CMD WITH (INDEX(ind_cmd01106_cmid), NOLOCK) ON CMM.CM_ID=CMD.CM_ID 
       WHERE NOT EXISTS ( 
         SELECT TOP 1 HD.REF_CMD_ROW_ID 
         FROM HOLD_BACK_DELIVER_DET HD WITH(INDEX =IX_HOLD_BACK_DELIVER_DET_MEMO_ID,NOLOCK)  
         JOIN HOLD_BACK_DELIVER_MST HM (NOLOCK) ON HD.MEMO_ID =HM.MEMO_ID 
         WHERE HM.CANCELLED=0  AND CMD.ROW_ID=REF_CMD_ROW_ID
         ) 
       AND (@CDEPT_ID='' OR cmm.CUSTOMER_CODE =@CDEPT_ID)     
       AND CMM.CANCELLED=0  
       --AND CMM.SUBTOTAL>0 
	   AND cmd.QUANTITY>0
       AND CMD.PRODUCT_CODE =@CPRODUCT_CODE 
       
    
 
       CREATE INDEX  IX_REF_CMD_ROW_ID_HBD   ON #TMPCMDPRODUCT(CM_ID)
      
      
     SELECT CMD.CM_ID,CMM.CM_NO,CMD.PRODUCT_CODE,CMD.QUANTITY,CMD.MRP,CMD.NET  
     ,CMD.DISCOUNT_PERCENTAGE,CMD.DISCOUNT_AMOUNT,CMD.ROW_ID   
     ,SKU.SECTION_NAME,SKU.SUB_SECTION_NAME ,SKU.ARTICLE_NO,SKU.ARTICLE_NAME    
     ,SKU.PARA1_NAME ,SKU.PARA2_NAME ,SKU.PARA3_NAME ,SKU.PARA4_NAME ,SKU.PARA5_NAME ,SKU.PARA6_NAME,
      CAST('' AS VARCHAR(100)) AS UOM_NAME,CAST(0 AS tinyint) as UOM_TYPE  
     ,ISNULL(CMD.CHKDELEVER,0) AS CHKDELEVER    
     ,CMD.TAX_PERCENTAGE,CMD.TAX_AMOUNT,CMD.EMP_CODE  
     ,CMD.DEPT_ID,CMD.TAX_TYPE,CMD.TAX_METHOD,CMD.EMP_CODE1  
     ,CMD.EMP_CODE2  
     ,CMD.ITEM_DESC  
     ,CMD.WEIGHTED_AVG_DISC_PCT  
     ,CMD.WEIGHTED_AVG_DISC_AMT  
     ,CMD.MANUAL_DISCOUNT  
     ,CMD.FIX_MRP  
     ,CMD.SR_NO  
     ,CMD.PACK_SLIP_ID  
     ,CMD.XN_TYPE  
     ,CMD.REPEAT_PUR_ORDER  
     ,CMD.BIN_ID   
     ,CMD.REF_ORDER_ID  
     ,CMD.FOC_QUANTITY  
     ,CMD.CMM_DISCOUNT_AMOUNT  
     ,CMD.NRM_ID   
     ,EMP.EMP_NAME  
     ,EMP1.EMP_NAME AS EMP_NAME1 ,EMP2.EMP_NAME AS EMP_NAME2,CMM.CM_ID AS SOURCE_MEMO_ID  
     ,CUST .CUSTOMER_FNAME +' '+CUST.CUSTOMER_LNAME AS CUSTOMER_NAME
     --defalut column required for grid binding
      , CAST(1 AS BIT) AS CHKDELIVER
      , CAST(''  AS VARCHAR(22)) AS MEMO_ID
      ,CMD.ROW_ID AS REF_CMD_ROW_ID
      , CAST(1 AS BIT) AS DELIVERED
      , CAST(''  AS VARCHAR(10)) AS JOB_CODE
      ,GETDATE() AS LAST_UPDATE
      ,CMD.TS
      ,'' AS REMARKS,
      getdate() AS DELIVERY_DT,
      getdate() AS DELIVERY_TIME,
      SKU.ARTICLE_NAME ,
      S .ARTICLE_CODE ,
      SKU.ARTICLE_NO,
      '' AS DESCRIPTION,
      CMD.PRODUCT_CODE AS PRODUCT_CODE1,
      CMD.QUANTITY AS QUANTITY1,
      s.ARTICLE_CODE AS ARTICLE_CODE1,
      s.PARA1_CODE,PARA1_NAME, s.PARA2_CODE,PARA2_NAME,s.PARA3_CODE,PARA3_NAME,'' as UOM_NAME,   
      s.barcode_coding_scheme  as CODING_SCHEME,CONVERT(NUMERIC(10,2),0) AS QUANTITY_IN_STOCK,s.PURCHASE_PRICE,            
	  CONVERT(NUMERIC(10,2),0) AS QUANTITY_IN_STOCK,s.PURCHASE_PRICE,      
	  SKU.MRP,SKU.WS_PRICE,   sku.SECTION_NAME, sku.SUB_SECTION_NAME,        
	  s.PARA4_CODE,s.PARA5_CODE,s.PARA6_CODE  ,      
	  PARA4_NAME,PARA5_NAME,PARA6_NAME,'' as UOM_CODE,''  AS [UOM_TYPE],        
	  '' as DT_CREATED,'' AS [ART_DT_CREATED],''  AS [PARA3_DT_CREATED],''  AS [SKU_DT_CREATED] ,       
	  0 as STOCK_NA,'' as JOB_NAME ,'' as JOB_CODE,  
	  Cmd.EMP_CODE,'' as EMP_NAME,Cmd.DISCOUNT_AMOUNT,Cmd.NET,
	  '' AS ARTICLE_ALIAS ,EMP1.EMP_NAME AS EMP_NAME1 ,EMP2.EMP_NAME AS EMP_NAME2 
      ,CMD.PRODUCT_CODE AS [OLD_PRODUCT_CODE]
	   ,s.para1_code,s.para2_code,s.para3_code,s.para4_code,s.para5_code,s.para6_code,CMM.CM_DT
      FROM #TMPCMDPRODUCT CMD (NOLOCK)  
      JOIN CMM01106 CMM (NOLOCK) ON CMD.CM_ID =CMM.CM_ID 
      JOIN SKU S (NOLOCK) ON S.product_code =CMD.PRODUCT_CODE   
      JOIN SKU_NAMES (NOLOCK) SKU ON SKU.PRODUCT_CODE =CMD.PRODUCT_CODE   
      LEFT OUTER JOIN EMPLOYEE EMP (NOLOCK) ON CMD.EMP_CODE = EMP.EMP_CODE   
      LEFT OUTER JOIN EMPLOYEE EMP1  (NOLOCK) ON CMD.EMP_CODE1 = EMP1.EMP_CODE       
      LEFT OUTER JOIN EMPLOYEE EMP2  (NOLOCK) ON CMD.EMP_CODE2 = EMP2.EMP_CODE  
      JOIN custdym CUST (NOLOCK) ON CUST .customer_code =CMM.CUSTOMER_CODE    
      WHERE  CMM.CANCELLED=0 
      AND CMD.QUANTITY>0   
      --AND (CMM.SUBTOTAL+ISNULL(CMM.SUBTOTAL_R,0))>0  
      --AND CMM.SUBTOTAL>0  
      ORDER BY CMM.CM_DT,CMM.CM_ID  
     GOTO END_PROC
     
  END  
  ELSE  
  BEGIN  
       
         
     SELECT CMD.CM_ID,CMM.CM_NO,CMD.PRODUCT_CODE,CMD.QUANTITY,CMD.MRP,CMD.NET  
     ,CMD.DISCOUNT_PERCENTAGE,CMD.DISCOUNT_AMOUNT,CMD.ROW_ID   
     ,M.SECTION_NAME,D.SUB_SECTION_NAME ,ART.ARTICLE_NO,ART.ARTICLE_NAME    
     ,P1.PARA1_NAME ,P2.PARA2_NAME ,P3.PARA3_NAME ,P4.PARA4_NAME ,P5.PARA5_NAME ,P6.PARA6_NAME,UOM.UOM_NAME,UOM_TYPE  
     ,ISNULL(CMD.HOLD_FOR_ALTER,0) AS CHKDELEVER    
     ,CMD.TAX_PERCENTAGE,CMD.TAX_AMOUNT,CMD.EMP_CODE  
     ,CMD.DEPT_ID,CMD.TAX_TYPE,CMD.TAX_METHOD,CMD.EMP_CODE1  
     ,CMD.EMP_CODE2  
     ,CMD.ITEM_DESC  
     ,CMD.WEIGHTED_AVG_DISC_PCT  
     ,CMD.WEIGHTED_AVG_DISC_AMT  
     ,CMD.MANUAL_DISCOUNT  
     ,CMD.FIX_MRP  
     ,CMD.SR_NO  
     ,CMD.PACK_SLIP_ID  
     ,CMD.XN_TYPE  
     ,CMD.REPEAT_PUR_ORDER  
     ,CMD.BIN_ID   
     ,CMD.REF_ORDER_ID  
     ,CMD.FOC_QUANTITY  
     ,CMD.CMM_DISCOUNT_AMOUNT  
     ,CMD.NRM_ID ,EMP.EMP_NAME  
     ,EMP1.EMP_NAME AS EMP_NAME1 ,EMP2.EMP_NAME AS EMP_NAME2,CMM.CM_ID AS SOURCE_MEMO_ID  
     ,CUST .CUSTOMER_FNAME +' '+CUST.CUSTOMER_LNAME AS CUSTOMER_NAME 
      , CAST(1 AS BIT) AS CHKDELIVER
      , CAST(''  AS VARCHAR(22)) AS MEMO_ID
      ,CMD.ROW_ID AS REF_CMD_ROW_ID
      , CAST(1 AS BIT) AS DELIVERED
      , CAST(''  AS VARCHAR(10)) AS JOB_CODE
      ,GETDATE() AS LAST_UPDATE
      ,CMD.TS
      ,'' AS REMARKS,
      CAST('' AS DATETIME) AS DELIVERY_DT,
      CAST('' AS DATETIME) AS DELIVERY_TIME,
      art.ARTICLE_NAME ,
      art .ARTICLE_CODE ,
      art.ARTICLE_NO,
      '' AS DESCRIPTION,
      CMD.PRODUCT_CODE AS PRODUCT_CODE1,
      CMD.QUANTITY AS QUANTITY1,
      art.ARTICLE_CODE AS ARTICLE_CODE1,
      p1.PARA1_CODE,PARA1_NAME, p2.PARA2_CODE,PARA2_NAME,p3.PARA3_CODE,PARA3_NAME,'' as UOM_NAME,   
      sku.barcode_coding_scheme  as CODING_SCHEME,CONVERT(NUMERIC(10,2),0) AS QUANTITY_IN_STOCK,
      sku.PURCHASE_PRICE,            
	  CONVERT(NUMERIC(10,2),0) AS QUANTITY_IN_STOCK,sku.PURCHASE_PRICE,      
	  SKU.MRP,SKU.WS_PRICE,   m.SECTION_NAME, d.SUB_SECTION_NAME,        
	  p4.PARA4_CODE,p5.PARA5_CODE,p6.PARA6_CODE  ,      
	  PARA4_NAME,PARA5_NAME,PARA6_NAME,'' as UOM_CODE,''  AS [UOM_TYPE],        
	  '' as DT_CREATED,'' AS [ART_DT_CREATED],''  AS [PARA3_DT_CREATED],''  AS [SKU_DT_CREATED] ,       
	  0 as STOCK_NA,'' as JOB_NAME ,'' as JOB_CODE,  
	  Cmd.EMP_CODE,'' as EMP_NAME,Cmd.DISCOUNT_AMOUNT,Cmd.NET,
	  '' AS ARTICLE_ALIAS ,EMP1.EMP_NAME AS EMP_NAME1 ,EMP2.EMP_NAME AS EMP_NAME2 
      ,HD.HBD_MEMO_NO,CMD.PRODUCT_CODE AS [OLD_PRODUCT_CODE]
	   ,sku.para1_code,sku.para2_code,sku.para3_code,sku.para4_code,sku.para5_code,sku.para6_code,CMM.CM_DT
      FROM CMD01106 CMD (NOLOCK)  
      JOIN CMM01106 CMM ON CMD.CM_ID =CMM.CM_ID   
      LEFT OUTER JOIN EMPLOYEE EMP (NOLOCK)ON CMD.EMP_CODE = EMP.EMP_CODE   
      LEFT OUTER JOIN EMPLOYEE EMP1  (NOLOCK) ON CMD.EMP_CODE1 = EMP1.EMP_CODE       
      LEFT OUTER JOIN EMPLOYEE EMP2  (NOLOCK) ON CMD.EMP_CODE2 = EMP2.EMP_CODE      
      LEFT JOIN (SELECT DISTINCT CM_ID FROM DSD01106 DSD (NOLOCK) JOIN DSM01106 DSM (NOLOCK)   
      ON DSD.DS_ID = DSM.DS_ID WHERE DSM.CANCELLED = 0 )DS  
      ON DS.CM_ID = CMM.CM_ID  
      JOIN SKU (NOLOCK) SKU ON SKU.PRODUCT_CODE =CMD.PRODUCT_CODE   
      JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =SKU.ARTICLE_CODE   
      JOIN SECTIOND D (NOLOCK) ON D.SUB_SECTION_CODE=ART.SUB_SECTION_CODE   
      JOIN SECTIONM M (NOLOCK) ON M.SECTION_CODE =D.SECTION_CODE  
      JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE =SKU.PARA1_CODE   
      JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE =SKU.PARA2_CODE   
      JOIN PARA3 P3 (NOLOCK) ON P3.PARA3_CODE =SKU.PARA3_CODE   
      JOIN PARA4 P4 (NOLOCK) ON P4.PARA4_CODE =SKU.PARA4_CODE   
      JOIN PARA5 P5 (NOLOCK) ON P5.PARA5_CODE =SKU.PARA5_CODE   
      JOIN PARA6 P6 (NOLOCK) ON P6.PARA6_CODE =SKU.PARA6_CODE   
      JOIN UOM(NOLOCK) ON UOM.UOM_CODE =ART.UOM_CODE  
      LEFT JOIN  
         (   
       SELECT HD.REF_CMD_ROW_ID,HM.memo_no AS HBD_MEMO_NO FROM HOLD_BACK_DELIVER_DET HD (NOLOCK)   
       JOIN HOLD_BACK_DELIVER_MST HM (NOLOCK) ON HD.MEMO_ID =HM.MEMO_ID   
       WHERE HM.CANCELLED=0  
      ) HD ON HD.REF_CMD_ROW_ID=CMD.ROW_ID   
       JOIN custdym CUST (NOLOCK) ON CUST .customer_code =CMM.CUSTOMER_CODE 
      WHERE   
      
      (@CDONOTCHECKDSM='1' OR DS.CM_ID IS NOT NULL)  
      AND (@CDEPT_ID='' OR cmm.CUSTOMER_CODE =@CDEPT_ID)  
      AND CMM.CANCELLED=0 AND HD.REF_CMD_ROW_ID IS NULL  
      AND CMD.QUANTITY>0  
         
      --AND (CMM.SUBTOTAL+ISNULL(CMM.SUBTOTAL_R,0))>0  
     --AND CMM.SUBTOTAL>0 
     AND  CMD.PRODUCT_CODE =@CPRODUCT_CODE
     ORDER BY CMM.CM_DT,CMM.CM_ID  
     
     GOTO END_PROC
  END 
  
  
  
  END_PROC:
  
   
END  
--END OF PROCEDURE - SP_HOLDBACK_PENDING_BILL 


