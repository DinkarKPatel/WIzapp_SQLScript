create PROCEDURE SP_GETPOS_RECEIVABLES
@DMEMODT DATETIME 
--WITH ENCRYPTION
AS
BEGIN
--(dinkar) Replace  left(memoid,2) to Location_code 
	DECLARE @TREPS TABLE (DEPT_ID CHAR(2),ORDER_ID VARCHAR(40), DEPT_ALIAS VARCHAR(20),DEPT_NAME VARCHAR(200),EMP_NAME VARCHAR(100),ORDER_NO VARCHAR(20),
						  ORDER_DT DATETIME,EXPECTED_DELIVERY_DT DATETIME,DELIVERED_ON DATETIME,DELIVERED_BY VARCHAR(300),
						  DUE_DAYS INT,ORDER_AMOUNT NUMERIC(10,2),CUSTOMER_NAME VARCHAR(200),ADVANCE_RECEIVED NUMERIC(10,2),
						  ORDER_PENDING_AMOUNT NUMERIC(10,2),BILL_NO VARCHAR(40),BILL_DT DATETIME,BILL_AMOUNT NUMERIC(10,2),
						  BILL_AMOUNT_RECEIVED NUMERIC(10,2),BILL_PENDING_AMOUNT NUMERIC(10,2),
						  OS_RECEIVED_AMOUNT NUMERIC(10,2),FINAL_PENDING_AMOUNT NUMERIC(10,2),RECEIVABLE_AGEING INT,MODE INT)

	IF OBJECT_ID('TEMPDB..#TMPPENDINGSLS','U') IS NOT NULL
		DROP TABLE #TMPPENDINGSLS
		
	IF OBJECT_ID('TEMPDB..#TMPSLSORD','U') IS NOT NULL
		DROP TABLE #TMPSLSORD
	
	SELECT DISTINCT CMM.CM_ID,ISNULL(REF_ORDER_ID,'') AS ORDER_ID INTO #TMPSLSORD 
	FROM CMD01106 CMD
	JOIN CMM01106 CMM ON CMD.CM_ID=CMM.CM_ID
	WHERE ISNULL(REF_ORDER_ID,'')<>'' AND CMM.CANCELLED=0
	
	SELECT DISTINCT A.CM_ID,ISNULL(B.REF_ORDER_ID,'') AS ORDER_ID,D.RECEIVED_AMOUNT
	INTO #TMPPENDINGSLS 
	FROM CMM01106 A 
	JOIN CMD01106 B ON A.CM_ID=B.CM_ID
	JOIN PAYMODE_XN_DET C ON C.MEMO_ID=A.CM_ID
	LEFT OUTER JOIN 
	(
		 SELECT B.CM_ID,SUM(AMOUNT) AS RECEIVED_AMOUNT FROM ARC01106 A (NOLOCK)
		 JOIN CMM_CREDIT_RECEIPT B (NOLOCK) ON A.ADV_REC_ID=B.ADV_REC_ID
		 WHERE A.ADV_REC_DT<=@DMEMODT AND A.CANCELLED=0 GROUP BY B.CM_ID
	 ) D ON D.CM_ID=A.CM_ID 
	 WHERE A.CM_DT<=@DMEMODT AND A.CANCELLED=0 AND C.XN_TYPE='SLS' AND C.PAYMODE_CODE='0000004'
	 AND ISNULL(C.AMOUNT,0)-ISNULL(D.RECEIVED_AMOUNT,0)>0

	IF OBJECT_ID('TEMPDB..#TMPPENDINGORD','U') IS NOT NULL
		DROP TABLE #TMPPENDINGORD
	
	SELECT A.ORDER_ID
	INTO #TMPPENDINGORD FROM WSL_ORDER_MST A 
	WHERE A.ORDER_DT<=@DMEMODT AND A.CANCELLED=0
		
	------ INSERT ENTRIES OF BUYER ORDER RECEIPTS
	INSERT @TREPS (ORDER_ID,DEPT_ID,DEPT_ALIAS,DEPT_NAME,EMP_NAME,ORDER_NO,ORDER_DT,EXPECTED_DELIVERY_DT,DELIVERED_ON,DELIVERED_BY,
				   DUE_DAYS,ORDER_AMOUNT,CUSTOMER_NAME,ADVANCE_RECEIVED,ORDER_PENDING_AMOUNT,BILL_NO,BILL_DT,
				   BILL_AMOUNT,BILL_AMOUNT_RECEIVED,BILL_PENDING_AMOUNT,OS_RECEIVED_AMOUNT,FINAL_PENDING_AMOUNT,
				   RECEIVABLE_AGEING,MODE)
	SELECT DISTINCT A.ORDER_ID,a.location_Code  AS DEPT_ID,DEPT_ALIAS,DEPT_NAME,EMP_ORD.EMP_NAME,ORDER_NO,ORDER_DT,DELIVERY_DT AS EXPECTED_DELIVERY_DT,
	CMM.CM_DT AS DELIVERED_ON,EMP_SLS.EMP_NAME AS DELIVERED_BY,DATEDIFF(DD,A.DELIVERY_DT,CMM.CM_DT) AS DUE_DAYS,
	TOTAL_AMOUNT AS ORDER_AMOUNT,(CASE WHEN ISNULL(A.CUSTOMER_CODE,'') IN ('','000000000000','0000000000') THEN AC_NAME ELSE CUSTOMER_FNAME+' '+CUSTOMER_LNAME END) AS CUSTOMER_NAME,
	ISNULL(F.ADVANCE_RECEIVED,0),(A.TOTAL_AMOUNT-ISNULL(F.ADVANCE_RECEIVED,0)) AS ORDER_PENDING_AMOUNT,
	CMM.CM_NO,CMM.CM_DT,CMM.NET_AMOUNT,J.BILL_AMOUNT_RECEIVED,J.BILL_PENDING_AMOUNT,E.RECEIVED_AMOUNT AS OS_RECEIVED_AMOUNT,
	(A.TOTAL_AMOUNT-ISNULL(F.ADVANCE_RECEIVED,0)+J.BILL_PENDING_AMOUNT-E.RECEIVED_AMOUNT) AS FINAL_PENDING_AMOUNT,
	DATEDIFF(DD,CMM.CM_DT,@DMEMODT) AS RECEIVABLE_AGEING,1 AS MODE
	FROM WSL_ORDER_MST A 
	LEFT OUTER JOIN EMPLOYEE EMP_ORD ON A.EMP_CODE=EMP_ORD.EMP_CODE 
	JOIN LOCATION C ON C.DEPT_ID=a.location_Code 
	JOIN #TMPSLSORD D ON D.ORDER_ID=A.ORDER_ID
	--JOIN SLS_BO_REF D (NOLOCK) ON D.ORDER_ID=A.ORDER_ID
	JOIN #TMPPENDINGSLS  E ON E.CM_ID=D.CM_ID
	LEFT OUTER JOIN 
	(
		SELECT D.ORDER_ID,SUM(A.AMOUNT) AS ADVANCE_RECEIVED
		FROM PAYMODE_XN_DET A 
		JOIN WSL_ORDER_ADV_RECEIPT C ON C.ADV_REC_ID=A.MEMO_ID
		JOIN WSL_ORDER_MST D ON D.ORDER_ID=C.ORDER_ID
		JOIN #TMPSLSORD  E ON  E.ORDER_ID=D.ORDER_ID
		--JOIN CMD01106 E (NOLOCK) ON E.ORDER_ID=D.ORDER_ID
		WHERE XN_TYPE='ARC' AND D.ORDER_ID IN (SELECT ORDER_ID FROM #TMPPENDINGSLS WHERE ORDER_ID<>'')
		GROUP BY D.ORDER_ID
	 ) F ON F.ORDER_ID=A.ORDER_ID
    
	LEFT OUTER JOIN CUSTDYM G ON G.CUSTOMER_CODE=A.CUSTOMER_CODE
	JOIN LM01106 H ON H.AC_CODE=A.AC_CODE
	JOIN CMM01106 CMM ON CMM.CM_ID=D.CM_ID
	JOIN EMPLOYEE EMP_SLS ON EMP_SLS.EMP_CODE=DBO.FN_GETFIRSTEMPCODE(CMM.CM_ID)
	LEFT OUTER JOIN 
	(	 SELECT B.CM_ID,SUM(CASE WHEN A.PAYMODE_CODE<>'0000004' THEN A.AMOUNT ELSE 0 END) AS BILL_AMOUNT_RECEIVED,
		 SUM(CASE WHEN A.PAYMODE_CODE='0000004' THEN A.AMOUNT ELSE 0 END) AS BILL_PENDING_AMOUNT
		 FROM PAYMODE_XN_DET A 
		 JOIN CMM01106 B ON A.MEMO_ID=B.CM_ID
		 --JOIN SLS_BO_REF C ON C.CM_ID=B.CM_ID
		 JOIN #TMPSLSORD C ON C.CM_ID=B.CM_ID
		 JOIN #TMPPENDINGSLS D ON D.CM_ID=B.CM_ID
		 WHERE A.XN_TYPE='SLS' GROUP BY B.CM_ID
     ) J ON J.CM_ID=CMM.CM_ID
    WHERE A.ORDER_DT<=@DMEMODT AND A.ORDER_ID IN (SELECT ORDER_ID FROM #TMPPENDINGSLS WHERE ORDER_ID<>'')
	

	UPDATE A SET FINAL_PENDING_AMOUNT=B.FINAL_PENDING_AMOUNT FROM @TREPS A
	JOIN  (SELECT ORDER_ID,ORDER_AMOUNT+SUM(-ISNULL(ADVANCE_RECEIVED,0)+BILL_PENDING_AMOUNT-ISNULL(OS_RECEIVED_AMOUNT,0))
		   AS FINAL_PENDING_AMOUNT FROM @TREPS
		   GROUP BY ORDER_ID,ORDER_AMOUNT) B ON B.ORDER_ID=A.ORDER_ID	

	------ INSERT ENTRIES OF DIRECT BILLS W/O BUYER ORDER
	INSERT @TREPS (DEPT_ID,DEPT_ALIAS,DEPT_NAME,DELIVERED_BY,CUSTOMER_NAME,BILL_NO,BILL_DT,
				   BILL_AMOUNT,BILL_AMOUNT_RECEIVED,BILL_PENDING_AMOUNT,OS_RECEIVED_AMOUNT,FINAL_PENDING_AMOUNT,
				   RECEIVABLE_AGEING,MODE)
	SELECT DISTINCT a.location_Code  AS DEPT_ID,DEPT_ALIAS,DEPT_NAME,'' AS DELIVERED_BY,
	(CASE WHEN A.PARTY_TYPE=2 THEN AC_NAME ELSE CUSTOMER_FNAME+' '+CUSTOMER_LNAME END) AS CUSTOMER_NAME,
	A.CM_NO,A.CM_DT,A.NET_AMOUNT,J.BILL_AMOUNT_RECEIVED,J.BILL_PENDING_AMOUNT,ISNULL(C.RECEIVED_AMOUNT,0) AS OS_RECEIVED_AMOUNT,
	(J.BILL_PENDING_AMOUNT-ISNULL(C.RECEIVED_AMOUNT,0)) AS FINAL_PENDING_AMOUNT,
	DATEDIFF(DD,A.CM_DT,@DMEMODT) AS RECEIVABLE_AGEING,2 AS MODE
	FROM CMM01106 A 
	JOIN LOCATION B ON B.DEPT_ID=a.location_Code 
	JOIN #TMPPENDINGSLS C ON  C.CM_ID=A.CM_ID
	JOIN CUSTDYM G ON G.CUSTOMER_CODE=A.CUSTOMER_CODE
	LEFT OUTER JOIN LM01106 H ON H.AC_CODE=A.AC_CODE
	JOIN EMPLOYEE EMP_SLS ON EMP_SLS.EMP_CODE=DBO.FN_GETFIRSTEMPCODE(A.CM_ID)
	
	LEFT OUTER JOIN 
	(SELECT B.CM_ID,SUM(CASE WHEN A.PAYMODE_CODE<>'0000004' THEN A.AMOUNT ELSE 0 END) AS BILL_AMOUNT_RECEIVED,
	 SUM(CASE WHEN A.PAYMODE_CODE='0000004' THEN A.AMOUNT ELSE 0 END) AS BILL_PENDING_AMOUNT
     FROM PAYMODE_XN_DET A 
     JOIN CMM01106 B ON A.MEMO_ID=B.CM_ID
     JOIN #TMPPENDINGSLS D ON D.CM_ID=B.CM_ID
     WHERE A.XN_TYPE='SLS' AND D.ORDER_ID='' GROUP BY B.CM_ID) J ON J.CM_ID=A.CM_ID
     WHERE A.CM_DT<=@DMEMODT AND C.ORDER_ID=''

		
	------ INSERT ENTRIES OF ORDERS ON HAND
	INSERT @TREPS (ORDER_ID,DEPT_ID,DEPT_ALIAS,DEPT_NAME,EMP_NAME,ORDER_NO,ORDER_DT,EXPECTED_DELIVERY_DT,
				   DUE_DAYS,ORDER_AMOUNT,CUSTOMER_NAME,ADVANCE_RECEIVED,ORDER_PENDING_AMOUNT,FINAL_PENDING_AMOUNT,
				   RECEIVABLE_AGEING,MODE)
	SELECT DISTINCT A.ORDER_ID,a.location_Code  AS DEPT_ID,DEPT_ALIAS,DEPT_NAME,EMP_ORD.EMP_NAME,ORDER_NO,ORDER_DT,DELIVERY_DT AS EXPECTED_DELIVERY_DT,
	DATEDIFF(DD,A.DELIVERY_DT,@DMEMODT) AS DUE_DAYS,TOTAL_AMOUNT AS ORDER_AMOUNT,
	(CASE WHEN ISNULL(A.CUSTOMER_CODE,'') IN ('','000000000000','0000000000') THEN AC_NAME ELSE CUSTOMER_FNAME+' '+CUSTOMER_LNAME END) AS CUSTOMER_NAME,
	ISNULL(F.ADVANCE_RECEIVED,0),(A.TOTAL_AMOUNT-ISNULL(F.ADVANCE_RECEIVED,0)) AS ORDER_PENDING_AMOUNT,
	(A.TOTAL_AMOUNT-ISNULL(F.ADVANCE_RECEIVED,0)) AS FINAL_PENDING_AMOUNT,
	DATEDIFF(DD,A.DELIVERY_DT,@DMEMODT) AS RECEIVABLE_AGEING,3 AS MODE
	FROM WSL_ORDER_MST A 
	LEFT OUTER JOIN EMPLOYEE EMP_ORD ON A.EMP_CODE=EMP_ORD.EMP_CODE 
	JOIN LOCATION C ON C.DEPT_ID=a.location_Code 
	JOIN #TMPPENDINGORD D (NOLOCK) ON D.ORDER_ID=A.ORDER_ID
	
	LEFT OUTER JOIN 
	(SELECT D.ORDER_ID,SUM(A.AMOUNT) AS ADVANCE_RECEIVED
    FROM PAYMODE_XN_DET A 
    JOIN WSL_ORDER_ADV_RECEIPT C ON C.ADV_REC_ID=A.MEMO_ID
    JOIN WSL_ORDER_MST D ON D.ORDER_ID=C.ORDER_ID
    --JOIN SLS_BO_REF E (NOLOCK) ON E.ORDER_ID=D.ORDER_ID
    JOIN #TMPSLSORD E ON E.ORDER_ID=D.ORDER_ID
    WHERE XN_TYPE='ARC' AND D.ORDER_ID IN (SELECT ORDER_ID FROM #TMPPENDINGSLS WHERE ORDER_ID<>'')
    GROUP BY D.ORDER_ID) F ON F.ORDER_ID=A.ORDER_ID
    
	LEFT OUTER JOIN CUSTDYM G ON G.CUSTOMER_CODE=A.CUSTOMER_CODE
	JOIN LM01106 H ON H.AC_CODE=A.AC_CODE
		
	SELECT (CASE WHEN MODE=3 THEN 2 ELSE 1 END) AS GROUP_ID,* FROM @TREPS ORDER BY MODE,DEPT_ALIAS,EMP_NAME ASC	 	 
END	
---END OF PROCEDURE - SP_GETPOS_RECEIVABLES
