
create PROCEDURE SP3S_REP_PAYMODE_DETAILS  
(  
 @NMODE INT=1,-- 1 FOR WITH GST% 2 FOR WITHOUT GST%  
 @DFM_DT DATETIME='',  
 @DTO_DT DATETIME='',  
 @CDEPT_ID VARCHAR(5)='',  
 @CCOLNAME VARCHAR(MAX)='',  
 @NPAYMENT INT=1,
 @BfromtoBillNO bit=0  
)  
AS  
BEGIN   
   DECLARE @DONOT_CAL_GST_ADV_RECE VARCHAR(10)  
   SELECT TOP 1 @DONOT_CAL_GST_ADV_RECE=VALUE  FROM CONFIG WHERE CONFIG_OPTION='DONOT_CALCULATE_GST_ADV_RECEIPT'  
   
BEGIN  
     --IF @DFM_DT<='2017-06-30'  
     --   RETURN  
      DECLARE @TBLDETAILS1 TABLE (ORD_SR INT,DEPT_ID VARCHAR(5),TRANSACTIONS_TYPE VARCHAR(50),  
      TRANSACTIONS VARCHAR(50),BILL_NO VARCHAR(100),BILL_DT DATETIME,NET_AMOUNT NUMERIC(12,2),ROUND_OFF NUMERIC(8,2),GST_ROUND_OFF NUMERIC(8,2),CUSTOMER_CODE VARCHAR(100),  
      TYP VARCHAR(100),MODE INT,TAXABLE_VALUE NUMERIC(12,2),GST_AMOUNT NUMERIC(12,2),PARTY_TYPE INT,ORD INT,TRANSACTION_MODE VARCHAR(100),PARTY_GST_NO VARCHAR(25),USER_CODE VARCHAR(10))  
        
      --1.RETAIL SALE  
      INSERT INTO @TBLDETAILS1(ORD_SR,DEPT_ID ,TRANSACTIONS_TYPE ,TRANSACTIONS ,BILL_NO ,BILL_DT ,NET_AMOUNT ,ROUND_OFF,GST_ROUND_OFF ,CUSTOMER_CODE ,TYP ,MODE ,TAXABLE_VALUE ,GST_AMOUNT,PARTY_TYPE,TRANSACTION_MODE,PARTY_GST_NO ,USER_CODE )  
            SELECT 1 AS ORDSR, a.location_Code  AS DEPT_ID ,  
       'GST PAYABLE' AS TRANSACTIONS_TYPE,  
      'RETAIL SALE' AS TRANSACTIONS,  
      A.CM_NO AS BILL_NO,  
      A.CM_DT AS BILL_DT,  
      A.NET_AMOUNT,  
      A.ROUND_OFF,  
      a.GST_ROUND_OFF,  
      A.CUSTOMER_CODE,  
      C.PAYMODE_NAME AS TYP,  
     -- CASE WHEN SUBSTRING(CM_NO,5,1)='N' THEN 'CREDIT NOTES' ELSE C.PAYMODE_NAME  END  AS TYP,  
      CAST(2 AS INT) AS MODE,  
      SUM(ISNULL(B.AMOUNT,0)) AS TAXABLE_VALUE,  
      0 AS GST_AMOUNT,  
      1 AS PARTY_TYPE,  
      CASE WHEN A.PARTY_STATE_CODE <>L.GST_STATE_CODE THEN 'INTER STATE' ELSE 'LOCAL' END  AS TRANSACTION_MODE,  
      A.PARTY_GST_NO  ,A.USER_CODE 
      FROM CMM01106 A (NOLOCK)  
      JOIN LOCATION L (NOLOCK) ON a.location_Code =L.DEPT_ID   
   JOIN CUSTDYM CUST (NOLOCK) ON CUST.CUSTOMER_CODE =A.CUSTOMER_CODE  
      left JOIN PAYMODE_XN_DET B (NOLOCK) ON A.CM_ID=B.MEMO_ID  
      left JOIN PAYMODE_MST C (NOLOCK) ON B.PAYMODE_CODE=C.PAYMODE_CODE  
   WHERE A.CANCELLED=0 AND A.CM_DT BETWEEN @DFM_DT AND @DTO_DT     
   AND isnull(B.XN_TYPE,'SLS')='SLS'  
   AND A.MEMO_TYPE IN(0,1)  
   GROUP BY  a.location_Code  ,A.CM_NO,A.CM_DT,A.NET_AMOUNT,A.ROUND_OFF, A.CUSTOMER_CODE,  
   --CASE WHEN SUBSTRING(CM_NO,5,1)='N' THEN 'CREDIT NOTES' ELSE C.PAYMODE_NAME  END  ,  
   C.PAYMODE_NAME,a.GST_ROUND_OFF,  
   CASE WHEN A.PARTY_STATE_CODE <>L.GST_STATE_CODE THEN 'INTER STATE' ELSE 'LOCAL' END,A.PARTY_GST_NO ,A.USER_CODE  
     
     
   
  --2 WHOSALE INVOICE  
    
    
   INSERT INTO @TBLDETAILS1(ORD_SR,DEPT_ID ,TRANSACTIONS_TYPE ,TRANSACTIONS ,BILL_NO ,BILL_DT ,NET_AMOUNT ,ROUND_OFF,GST_ROUND_OFF ,CUSTOMER_CODE ,TYP ,MODE ,TAXABLE_VALUE ,GST_AMOUNT,PARTY_TYPE ,TRANSACTION_MODE,PARTY_GST_NO,USER_CODE  )  
         SELECT 2, DEPT_ID ,TRANSACTIONS_TYPE ,TRANSACTIONS ,BILL_NO ,BILL_DT ,  
              NET_AMOUNT ,ROUND_OFF,GST_ROUND_OFF ,CUSTOMER_CODE ,TYP ,MODE ,  
              SUM(TAXABLE_VALUE) AS TAXABLE_VALUE ,SUM(GST_AMOUNT) AS GST_AMOUNT,  
              2 AS PARTY_TYPE,  
              TRANSACTION_MODE ,  
     PARTY_GST_NO  ,USer_CODE
         FROM   
  (  
    
     
    SELECT 1 AS ORDSR, a.location_Code  AS DEPT_ID ,  
      CASE WHEN ISNULL(CASE WHEN A.INV_MODE =1 THEN  LMP.AC_GST_NO ELSE TL.LOC_GST_NO  END,'')=ISNULL(LOC.LOC_GST_NO ,'')  
               THEN 'BILL OF SUPPLY' ELSE 'GST PAYABLE' END AS TRANSACTIONS_TYPE,  
       CASE WHEN A.INV_MODE =1 THEN 'PARTY INVOICE' ELSE 'GROUP INVOICE' END AS TRANSACTIONS,  
      A.INV_NO AS BILL_NO,  
      A.INV_DT AS BILL_DT,  
      A.NET_AMOUNT,  
      A.ROUND_OFF,  
      a.GST_ROUND_OFF,  
      A.AC_CODE AS CUSTOMER_CODE ,  
      C.PAYMODE_NAME AS TYP,  
      CAST(2 AS INT) AS MODE,  
      SUM(ISNULL(B.AMOUNT,0)) AS TAXABLE_VALUE,  
      0 AS GST_AMOUNT,  
      2 AS PARTY_TYPE,  
      CASE WHEN A.PARTY_STATE_CODE <>LOC.GST_STATE_CODE THEN 'INTER STATE' ELSE 'LOCAL' END  AS TRANSACTION_MODE,  
      CASE WHEN A.INV_MODE =1 THEN LMP.AC_GST_NO ELSE TL.LOC_GST_NO END AS PARTY_GST_NO  ,A.USER_CODE 
      FROM INM01106  A (NOLOCK)  
      JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID =a.location_Code  
         LEFT JOIN LOCATION TL (NOLOCK) ON TL.DEPT_ID =A.PARTY_DEPT_ID   
         LEFT JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE =A.AC_CODE   
         LEFT OUTER JOIN LMP01106 LMP (NOLOCK) ON LMP.AC_CODE =LM.AC_CODE   
      JOIN PAYMODE_XN_DET B (NOLOCK) ON A.INV_ID =B.MEMO_ID   
      JOIN PAYMODE_MST C (NOLOCK) ON B.PAYMODE_CODE=C.PAYMODE_CODE  
   WHERE A.CANCELLED=0 AND A.INV_DT  BETWEEN @DFM_DT AND @DTO_DT     
   AND B.XN_TYPE='WSL'  
   AND A.MEMO_TYPE IN(0,1)  
   AND A.INV_DT BETWEEN @DFM_DT AND @DTO_DT    
   GROUP BY  a.location_Code  ,A.INV_NO,A.INV_DT,A.NET_AMOUNT,A.ROUND_OFF,a.GST_ROUND_OFF, A.AC_CODE ,C.PAYMODE_NAME,  
    CASE WHEN A.INV_MODE =1 THEN 'PARTY INVOICE' ELSE 'GROUP INVOICE' END ,  
    CASE WHEN ISNULL(CASE WHEN A.INV_MODE =1 THEN  LMP.AC_GST_NO ELSE TL.LOC_GST_NO  END,'')=ISNULL(LOC.LOC_GST_NO ,'')  
               THEN 'BILL OF SUPPLY' ELSE 'GST PAYABLE' END ,  
               CASE WHEN A.PARTY_STATE_CODE <>LOC.GST_STATE_CODE THEN 'INTER STATE' ELSE 'LOCAL' END,  
       CASE WHEN A.INV_MODE =1 THEN LMP.AC_GST_NO ELSE TL.LOC_GST_NO END  ,A.USER_CODE  
  ) A  
  GROUP BY DEPT_ID ,TRANSACTIONS_TYPE ,TRANSACTIONS ,BILL_NO ,BILL_DT ,  
        NET_AMOUNT ,ROUND_OFF,a.GST_ROUND_OFF ,CUSTOMER_CODE ,TYP ,MODE,TRANSACTION_MODE , PARTY_GST_NO  ,USER_CODE
          
          
  
        --4 ADVANCES  
        --@DONOT_CAL_GST_ADV_RECE  
          
       INSERT INTO @TBLDETAILS1(ORD_SR,DEPT_ID ,TRANSACTIONS_TYPE ,TRANSACTIONS ,BILL_NO ,BILL_DT ,NET_AMOUNT ,ROUND_OFF,GST_ROUND_OFF ,CUSTOMER_CODE ,TYP ,MODE ,TAXABLE_VALUE ,GST_AMOUNT,PARTY_TYPE ,TRANSACTION_MODE,PARTY_GST_NO,USER_CODE  )  
      
       SELECT 3 AS ORDSR, a.location_Code  AS DEPT_ID ,  
      CASE WHEN A.ARCT =1 THEN  'GST NOT AFFECTED'   
                    WHEN A.ARCT =2 AND ISNULL(@DONOT_CAL_GST_ADV_RECE,'')='1' THEN 'GST NOT AFFECTED'  
                     ELSE 'GST PAYABLE' END AS  TRANSACTIONS_TYPE ,  
              CASE WHEN A.ARCT IN (1,2) THEN 'ADVANCE / OTHER RECEIPTS'   
              ELSE 'ADVANCE / OTHER RECEIPTS' END   AS TRANSACTIONS ,   
      A.ADV_REC_NO AS BILL_NO,  
      A.ADV_REC_DT AS BILL_DT,  
       (CASE WHEN A.ARC_TYPE =1 THEN  A.NET_AMOUNT  
                      WHEN A.ARC_TYPE =2 THEN  '-1'* A.NET_AMOUNT END )NET_AMOUNT ,  
      0 AS ROUND_OFF,0 as GST_ROUND_OFF,  
      CASE WHEN ISNULL(A.CUSTOMER_CODE ,'000000000000') ='000000000000' THEN A.AC_CODE  ELSE A.CUSTOMER_CODE  END AS CUSTOMER_CODE ,  
      C.PAYMODE_NAME AS TYP,  
      CAST(2 AS INT) AS MODE,  
       SUM(CASE WHEN A.ARC_TYPE =1 THEN  ISNULL(B.AMOUNT,0)  
               WHEN A.ARC_TYPE =2 THEN  '-1'* ISNULL(B.AMOUNT,0) END ) AS TAXABLE_VALUE,  
      0 AS GST_AMOUNT,  
      CASE WHEN ISNULL(A.CUSTOMER_CODE ,'000000000000') ='000000000000' THEN 2  ELSE 1 END AS PARTY_TYPE,  
      CAST(CASE WHEN  ISNULL(A.IGST_AMOUNT ,0)>0 THEN 'INTER STATE' ELSE 'LOCAL' END AS VARCHAR(100)) AS TRANSACTION_MODE   ,  
      CUST.CUS_GST_NO   ,A.user_code 
      FROM ARC01106   A (NOLOCK)  
      JOIN PAYMODE_XN_DET B (NOLOCK) ON A.ADV_REC_ID  =B.MEMO_ID   
      JOIN PAYMODE_MST C (NOLOCK) ON B.PAYMODE_CODE=C.PAYMODE_CODE  
   JOIN CUSTDYM CUST (NOLOCK) ON CUST.CUSTOMER_CODE =A.CUSTOMER_CODE  
   WHERE A.CANCELLED=0 AND A.ADV_REC_DT   BETWEEN @DFM_DT AND @DTO_DT     
   AND B.XN_TYPE='ARC'  
   AND A.ADV_REC_DT BETWEEN @DFM_DT AND @DTO_DT    
    AND ARC_TYPE IN (1,2) AND  ARCT IN(1,2,3,4,5)  
   GROUP BY  a.location_Code   ,  
    (CASE WHEN A.ARC_TYPE =1 THEN  A.NET_AMOUNT  
                WHEN A.ARC_TYPE =2 THEN  '-1'* A.NET_AMOUNT END ) ,  
   CASE WHEN A.ARCT =1 THEN  'GST NOT AFFECTED'   
                    WHEN A.ARCT =2 AND ISNULL(@DONOT_CAL_GST_ADV_RECE,'')='1' THEN 'GST NOT AFFECTED'  
                     ELSE 'GST PAYABLE' END   ,  
              CASE WHEN A.ARCT IN (1,2) THEN  'ADVANCE / OTHER RECEIPTS'  
              ELSE 'ADVANCE / OTHER RECEIPTS' END  ,A.ADV_REC_NO ,  
  A.ADV_REC_DT , CASE WHEN ISNULL(A.CUSTOMER_CODE ,'000000000000') ='000000000000' THEN A.AC_CODE  ELSE A.CUSTOMER_CODE  END  
   ,C.PAYMODE_NAME, CASE WHEN ISNULL(A.CUSTOMER_CODE ,'000000000000') ='000000000000' THEN 2  ELSE 1 END ,  
   CAST(CASE WHEN  ISNULL(A.IGST_AMOUNT ,0)>0 THEN 'INTER STATE' ELSE 'LOCAL' END AS VARCHAR(100)) ,   CUST.CUS_GST_NO   ,A.USER_CODE
         
  
    update  @TBLDETAILS1 set typ=replace(replace( REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(  
       REPLACE(REPLACE(REPLACE(REPLACE(typ,  
        '!',''),'@',''),'#',''),'$',''),'%',''),  
        '^',''),'&',''),'*',''),' ',''),'_',''),'-','')  where mode=2  
         
    --update  @TBLDETAILS1 set typ= REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(  
    --   REPLACE(REPLACE(REPLACE(REPLACE(typ,  
    --    '!',''),'@',''),'#',''),'$',''),'%',''),  
    --    '^',''),'&',''),'*',''),' ','') where mode=2  
  
      
        IF OBJECT_ID ('TEMPDB..#TMPSUMMARY1','U') IS NOT NULL  
    DROP TABLE #TMPSUMMARY1  
         
  ;WITH CTE AS  
  (  
   SELECT *,SR=ROW_NUMBER () OVER(PARTITION BY BILL_NO,BILL_DT,TRANSACTIONS ORDER BY BILL_NO,BILL_DT) ,  
           cast(0 as numeric(14,2)) as Gst_cess_Amount  
   FROM @TBLDETAILS1  
   WHERE (@CDEPT_ID='' OR DEPT_ID =@CDEPT_ID)  
  )  
  SELECT A.* ,  
  COLDESC1=REPLACE(REPLACE(TYP,'GST','TAXABLE_VALUE'),'VAT','TAXABLE_VALUE'),  
  --CASE WHEN MODE=1 THEN REPLACE(REPLACE(TYP,'GST','TAXABLE_VALUE'),'VAT','TAXABLE_VALUE')  
  --         ELSE 'PYMT_'+TYP END ,  
  COLDESC2=CASE WHEN MODE=1 THEN REPLACE(REPLACE(TYP,'GST','GST_AMT'),'VAT','GST_AMT') ELSE '' END,  
  CASE WHEN PARTY_TYPE=1 THEN ISNULL(CUST.CUSTOMER_FNAME,'')+' '+ ISNULL(CUST.CUSTOMER_LNAME,'')    
  ELSE LM.AC_NAME END AS PARTY ,L.DEPT_NAME,L.DEPT_ALIAS ,U.USERNAME   
  INTO #TMPSUMMARY1 FROM CTE A  
  JOIN LOCATION L ON L.DEPT_ID=A.DEPT_ID  
  LEFT JOIN CUSTDYM CUST (NOLOCK) ON CUST.CUSTOMER_CODE =A.CUSTOMER_CODE  
  LEFT JOIN LM01106  LM (NOLOCK) ON LM.AC_CODE  =A.CUSTOMER_CODE  
   LEFT JOIN USERS  U (NOLOCK) ON  A.USER_CODE  =U.USER_CODE  
       
  UPDATE #TMPSUMMARY1 SET NET_AMOUNT =0 ,ROUND_OFF =0 WHERE SR>1       
       
     UPDATE #TMPSUMMARY1 SET   
     ORD=CASE WHEN REPLACE(RIGHT(COLDESC1, CHARINDEX ('_', REVERSE(COLDESC1))),'_','') ='' THEN 1000.00   
     ELSE --REPLACE(RIGHT(COLDESC1, CHARINDEX ('_', REVERSE(COLDESC1))),'_','')   
      LEFT(SUBSTRING(REPLACE(RIGHT(COLDESC1, CHARINDEX ('_', REVERSE(COLDESC1))),'_',''), PATINDEX('%[0-9.-]%', REPLACE(RIGHT(COLDESC1, CHARINDEX ('_', REVERSE(COLDESC1))),'_','')), 8000),  
      PATINDEX('%[^0-9.-]%', SUBSTRING(REPLACE(RIGHT(COLDESC1, CHARINDEX ('_', REVERSE(COLDESC1))),'_',''), PATINDEX('%[0-9.-]%', REPLACE(RIGHT(COLDESC1, CHARINDEX ('_', REVERSE(COLDESC1))),'_','')), 8000) + 'X') -1)  
     END,  
        --COLDESC1=CASE WHEN MODE =2 THEN 'PYMT_' ELSE '' END+COLDESC1  
        COLDESC1=CASE WHEN MODE =2 THEN 'PYMT_' ELSE '' END+REPLACE(COLDESC1,'-','')   
       
  IF ISNULL(@CCOLNAME,'')=''     
  SET @CCOLNAME='DEPT_ID,TRANSACTIONS_TYPE,ROUND_OFF,TRANSACTIONS,BILL_NO,BILL_DT,NET_AMOUNT'    
  
  DECLARE @DTSQL1 NVARCHAR(MAX),@CTYPE1 VARCHAR(MAX),  
    @COLUMN12 VARCHAR(MAX),@COLUMN21 VARCHAR(MAX),@COLDESC12 VARCHAR(MAX),@COLDESC21 VARCHAR(MAX),  
    @CGROUPCOLNAME1 VARCHAR(MAX)  
            
  SELECT   @COLUMN12=ISNULL(@COLUMN12+',','')+QUOTENAME(COLDESC1)  
    FROM #TMPSUMMARY1 WHERE COLDESC1<>''  
    AND  (@NPAYMENT=0 OR MODE=@NPAYMENT)  
    GROUP BY COLDESC1  
  
  SELECT   @COLUMN21=ISNULL(@COLUMN21+',','')+QUOTENAME(COLDESC2)  
    FROM #TMPSUMMARY1 WHERE COLDESC2<>''  
    AND  (@NPAYMENT=0 OR MODE=@NPAYMENT)  
    GROUP BY COLDESC2  
      
  SELECT   @COLDESC12=ISNULL(@COLDESC12+',','')+'SUM('+QUOTENAME(COLDESC1)+') AS'+  REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(QUOTENAME(COLDESC1),'(',''),')',''),'/',''),'\',''),'%','')  
  +CASE WHEN MODE=1 THEN   
  ','+ISNULL(@COLDESC21+',','')+'SUM('+QUOTENAME(COLDESC2)+') AS'+   REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(QUOTENAME(COLDESC2),'(',''),')',''),'/',''),'\',''),'%','') ELSE '' END  
    FROM #TMPSUMMARY1   
    WHERE  (@NPAYMENT=0 OR MODE=@NPAYMENT)  
    GROUP BY COLDESC1,MODE,COLDESC2,ORD  
    ORDER BY MODE,ORD   
  
  SET @CGROUPCOLNAME1=@CCOLNAME  
  SET @CCOLNAME=REPLACE(@CCOLNAME,'NET_AMOUNT',' SUM(NET_AMOUNT) AS NET_AMOUNT')  
  
  SET @CCOLNAME=REPLACE(@CCOLNAME,'Gst_ROUND_OFF',' SUM(Gst_ROUND_OFF) AS Gst_ROUND_OFF')  
  SET @CCOLNAME=REPLACE(@CCOLNAME,',ROUND_OFF',' ,SUM(ROUND_OFF) AS ROUND_OFF')  
  
  
  SET @CGROUPCOLNAME1=REPLACE(@CGROUPCOLNAME1,',NET_AMOUNT','')  
  SET @CGROUPCOLNAME1=REPLACE(@CGROUPCOLNAME1,',ROUND_OFF','')  
  SET @CGROUPCOLNAME1=REPLACE(@CGROUPCOLNAME1,',Gst_ROUND_OFF','')  
  
   if @BfromtoBillNO=1
	begin
	set @CGROUPCOLNAME1=@CGROUPCOLNAME1+',(CASE WHEN CHARINDEX(''-'',BILL_NO)>0 THEN  LEFT(BILL_NO, CHARINDEX(''-'',BILL_NO)-1) ELSE BILL_NO END  )'
    set @CCOLNAME=@CCOLNAME+',MIN(BILL_NO) AS [FROM_BILL],MAX(BILL_NO) AS [TO_BILL] '
	end
			
  
       
      IF ISNULL(@CCOLNAME,'')<>''  
      BEGIN  
  SET @DTSQL1=N'SELECT  '+@CCOLNAME+' ,'+@COLDESC12+'  
  FROM #TMPSUMMARY1 A   
  PIVOT (SUM(TAXABLE_VALUE) FOR COLDESC1 IN('+@COLUMN12+')) AS P  
  
  GROUP BY '+@CGROUPCOLNAME1+' '  
  PRINT @DTSQL1  
  EXEC SP_EXECUTESQL @DTSQL1  
    
      END  
END      
END  