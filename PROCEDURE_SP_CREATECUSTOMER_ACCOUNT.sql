CREATE PROCEDURE SP_CREATECUSTOMER_ACCOUNT  
 (  
 @CAC_CODE  VARCHAR(50),  
 @CFINYEAR  VARCHAR(50),  
 @CDEPTID  VARCHAR(5)  
 )  
 --(dinkar) Replace  left(memoid,2) to Location_code 
-- WITH ENCRYPTION
 AS  
 BEGIN  
 DECLARE @CNEWKEYVAL VARCHAR(100)  
 DECLARE @CSTR VARCHAR(2000)  
 SET @CSTR=''  
 SET @CNEWKEYVAL=''  
 SELECT @CNEWKEYVAL=USER_CUSTOMER_CODE FROM CUSTDYM WHERE AC_CODE=@CAC_CODE  
 IF ISNULL(@CNEWKEYVAL,'')<>''  
 BEGIN  
  SET @CSTR='CUSTOMER FOUND FOR THIS LEDGER AS '''+@CNEWKEYVAL+''''  
  GOTO ATLAST  
 END  
 BEGIN TRANSACTION   
  BEGIN TRY  
  
  
  EXEC GETNEXTKEY @CTABLENAME='CUSTDYM',  
      @CCOLNAME='CUSTOMER_CODE',  
      @NWIDTH=12,  
      @CPREFIX=@CDEPTID,  
      @NLZEROS=1,  
      @CFINYEAR='',  
      @NROWCOUNT=2,  
      @CNEWKEYVAL=@CNEWKEYVAL OUTPUT  
  PRINT @CNEWKEYVAL +' GENERATED'  
  INSERT CUSTDYM (  DT_BIRTH, DT_ANNIVERSARY,    
        SENT_TO_HO,   INACTIVE,  AREA_CODE,   
         LOCATION_ID, REF_CUSTOMER_CODE,    
        ADDRESS9,   CUSTOMER_CODE,   
        USER_CUSTOMER_CODE, CUSTOMER_TITLE, CUSTOMER_FNAME, CUSTOMER_LNAME, ADDRESS1, ADDRESS2, 
         PHONE1, PHONE2, MOBILE, EMAIL,  OPENING_BALANCE, LAST_UPDATE,   
        CARD_NO, PRIVILEGE_CUSTOMER,  AC_CODE,    
        DT_CARD_ISSUE, DT_CARD_EXPIRY,BILL_BY_BILL )    
  SELECT   '' AS DT_BIRTH,'' AS DT_ANNIVERSARY,   
      0 AS SENT_TO_HO,0 AS INACTIVE, AREA_CODE,   
      @CDEPTID AS  LOCATION_ID,'000000000000' AS REF_CUSTOMER_CODE,   
      ADDRESS0+' '+ADDRESS1+' ' +ADDRESS2 AS ADDRESS9,@CNEWKEYVAL AS CUSTOMER_CODE,   
      AC_NAME+'('+AC_CODE+')' AS USER_CUSTOMER_CODE,'' AS CUSTOMER_TITLE,AC_NAME AS CUSTOMER_FNAME,'' AS CUSTOMER_LNAME, ADDRESS1, ADDRESS2,
      PHONES_O AS PHONE1,PHONES_R AS PHONE2, MOBILE,E_MAIL AS EMAIL, 0 AS OPENING_BALANCE,GETDATE() AS LAST_UPDATE,   
      '' AS CARD_NO,0 AS PRIVILEGE_CUSTOMER , AC_CODE,   
      '' AS DT_CARD_ISSUE,'' AS DT_CARD_EXPIRY ,CAST(1 AS BIT) AS BILL_BY_BILL
  FROM LMV01106 WHERE AC_CODE=@CAC_CODE  
  PRINT 'UPDATING LMV0110'  
  UPDATE LMV01106 SET CUSTOMER_CODE=@CNEWKEYVAL WHERE AC_CODE=@CAC_CODE  
  COMMIT TRANSACTION  
    
  SELECT @CNEWKEYVAL=USER_CUSTOMER_CODE FROM CUSTDYM WHERE AC_CODE=@CAC_CODE  
  SET @CSTR='CUSTOMER CREATED SUCCESSFULLY AS '''+@CNEWKEYVAL+''''  
 END TRY  
 BEGIN CATCH   
   
  ROLLBACK TRANSACTION  
  SELECT @CSTR=ISNULL(ERROR_PROCEDURE(),'NULL P')+ 'LINE NO : '+ISNULL(LTRIM(RTRIM(STR(ERROR_LINE()))),'NULL LINE')+    
   ' ERROR MESSAGE : '+ISNULL(ERROR_MESSAGE(),'NULL MSG')   
  --SET @CSTR='CUSTOMER NOT CREATED!' +   
 END CATCH  
 ATLAST:  
 SELECT @CSTR AS [ERRORMSG]  
END  
--CREATE PROCEDURE SP_CREATECUSTOMER_ACCOUNT  
-- (  
-- @CAC_CODE  VARCHAR(50),  
-- @CFINYEAR  VARCHAR(50),  
-- @CDEPTID  VARCHAR(5)  
-- )  
-- AS  
-- BEGIN  
-- DECLARE @CNEWKEYVAL VARCHAR(100)  
-- DECLARE @CSTR VARCHAR(2000)  
-- SET @CSTR=''  
-- SET @CNEWKEYVAL=''  
-- SELECT @CNEWKEYVAL=USER_CUSTOMER_CODE FROM CUSTDYM WHERE AC_CODE=@CAC_CODE  
-- IF ISNULL(@CNEWKEYVAL,'')<>''  
-- BEGIN  
--  SET @CSTR='CUSTOMER FOUND FOR THIS LEDGER AS '''+@CNEWKEYVAL+''''  
--  GOTO ATLAST  
-- END  
-- BEGIN TRANSACTION   
--  BEGIN TRY  
  
  
--  EXEC GETNEXTKEY @CTABLENAME='CUSTDYM',  
--      @CCOLNAME='CUSTOMER_CODE',  
--      @NWIDTH=12,  
--      @CPREFIX=@CDEPTID,  
--      @NLZEROS=1,  
--      @CFINYEAR=@CFINYEAR,  
--      @NROWCOUNT=0,  
--      @CNEWKEYVAL=@CNEWKEYVAL OUTPUT  
--  PRINT @CNEWKEYVAL +' GENERATED'  
--  INSERT CUSTDYM ( FORM_NO, DT_BIRTH, DT_ANNIVERSARY, TOTAL_PURCHASES, TOTAL_POINTS, BONUS_POINTS,   
--        SENT_TO_HO, SENT_TO_LOC, ORIGINAL_CARD_ISSUED, REMARKS, ADDRESS0, INACTIVE, PRINT_LABEL, AREA_CODE,   
--        LABEL_PRINTED, LOCATION_ID, REF_CUSTOMER_CODE, DISC_APPLICABILITY_MODE, UPLOADED_TO_ACTIVSTREAM,   
--        ADDRESS9, ADDRESS_REMARKS, STATUS_ID, DND, ADD_ON_CARD, FROM_CASHMEMO, OPENING_POINTS, CUSTOMER_CODE,   
--        USER_CUSTOMER_CODE, CUSTOMER_TITLE, CUSTOMER_FNAME, CUSTOMER_LNAME, ADDRESS1, ADDRESS2, AREA, CITY,   
--        PIN, STATE, COUNTRY, PHONE1, PHONE2, MOBILE, EMAIL, COMPANY_CODE, OPENING_BALANCE, LAST_UPDATE,   
--        CARD_NO, PRIVILEGE_CUSTOMER, CREDIT_LIMIT, REF_NO, LASTBILLSRNO, POINTS_CREDITED, AC_CODE, STATUS,   
--        CALC_STATUS, LASTCM_NO, AMOUNT_CREDITED, DISC_PERCENTAGE, PLAN_ID, DT_CARD_ISSUE, DT_CARD_EXPIRY,   
--        MEMBERSHIP_FEE, DT_MEMBERSHIP, WIZCLIP_LAST_UPDATE )    
--  SELECT   '' AS FORM_NO,'' AS DT_BIRTH,'' AS DT_ANNIVERSARY,0 AS TOTAL_PURCHASES,0 AS TOTAL_POINTS,0 AS BONUS_POINTS,   
--      0 AS SENT_TO_HO,0 AS SENT_TO_LOC,0 AS ORIGINAL_CARD_ISSUED,'' AS REMARKS,ADDRESS0,0 AS INACTIVE,0 AS  PRINT_LABEL, AREA_CODE,   
--      0 AS LABEL_PRINTED,LEFT(AC_CODE,2) AS  LOCATION_ID,'000000000000' AS REF_CUSTOMER_CODE,0 AS DISC_APPLICABILITY_MODE,0 AS UPLOADED_TO_ACTIVSTREAM,   
--      ADDRESS0+' '+ADDRESS1+' ' +ADDRESS2 AS ADDRESS9,'' AS ADDRESS_REMARKS,'' AS STATUS_ID,0 AS DND,0 AS ADD_ON_CARD,0 AS FROM_CASHMEMO,0 AS OPENING_POINTS,@CNEWKEYVAL AS CUSTOMER_CODE,   
--      AC_NAME+'('+AC_CODE+')' AS USER_CUSTOMER_CODE,'' AS CUSTOMER_TITLE,AC_NAME AS CUSTOMER_FNAME,AC_CODE AS CUSTOMER_LNAME, ADDRESS1, ADDRESS2,AREA_NAME AS AREA, CITY,   
--      PINCODE AS PIN, STATE,'' AS COUNTRY,PHONES_O AS PHONE1,PHONES_R AS PHONE2, MOBILE,E_MAIL AS EMAIL, COMPANY_CODE,0 AS OPENING_BALANCE,GETDATE() AS LAST_UPDATE,   
--      '' AS CARD_NO,0 AS PRIVILEGE_CUSTOMER, CREDIT_LIMIT,'' AS REF_NO,0 AS  LASTBILLSRNO,0 AS POINTS_CREDITED, AC_CODE,'' AS STATUS,   
--      '' AS CALC_STATUS,'' AS LASTCM_NO,0 AS AMOUNT_CREDITED,DISCOUNT_PERCENTAGE AS DISC_PERCENTAGE,'' AS PLAN_ID,'' AS DT_CARD_ISSUE,'' AS DT_CARD_EXPIRY,   
--      0 AS MEMBERSHIP_FEE,'' AS DT_MEMBERSHIP,'' AS WIZCLIP_LAST_UPDATE   
--  FROM LMV01106 WHERE AC_CODE=@CAC_CODE  
--  PRINT 'UPDATING LMV0110'  
--  UPDATE LMV01106 SET CUSTOMER_CODE=@CNEWKEYVAL WHERE AC_CODE=@CAC_CODE  
--  COMMIT TRANSACTION  
    
--  SELECT @CNEWKEYVAL=USER_CUSTOMER_CODE FROM CUSTDYM WHERE AC_CODE=@CAC_CODE  
--  SET @CSTR='CUSTOMER CREATED SUCCESSFULLY AS '''+@CNEWKEYVAL+''''  
-- END TRY  
-- BEGIN CATCH   
   
--  ROLLBACK TRANSACTION  
--  SELECT @CSTR=ISNULL(ERROR_PROCEDURE(),'NULL P')+ 'LINE NO : '+ISNULL(LTRIM(RTRIM(STR(ERROR_LINE()))),'NULL LINE')+    
--   ' ERROR MESSAGE : '+ISNULL(ERROR_MESSAGE(),'NULL MSG')   
--  --SET @CSTR='CUSTOMER NOT CREATED!' +   
-- END CATCH  
-- ATLAST:  
-- SELECT @CSTR AS [ERRORMSG]  
--END
