CREATE  PROCEDURE SP3S_BOX_DETAILS
(
 @CBOX_ID VARCHAR(50)='',
 @CBIN_ID VARCHAR(50)='000',
 @CXNTYPE VARCHAR(50)='',
 @nQty		NUMERIC(5,0)=1
)
AS
BEGIN
    
    --SELECT A.BOX_NO, A.BOX_ID,B.PRODUCT_CODE,C.QUANTITY_IN_STOCK ,B.QUANTITY ,
    --       ERRMSG=CASE WHEN @CXNTYPE IN ('WSR','WSR_PS') THEN '' 
				--	   WHEN ISNULL(QUANTITY_IN_STOCK,0) <B.QUANTITY THEN ' STOCK GOING NEGATIVE' ELSE '' END 
    --FROM BOXM A
    --JOIN BOXD B ON A.BOX_ID=B.BOX_ID
    --LEFT JOIN PMT01106 C ON B.PRODUCT_CODE=C.PRODUCT_CODE 
    --WHERE A.BOX_ID=@CBOX_ID AND C.BIN_ID= @CBIN_ID
    --ORDER BY A.BOX_ID,B.PRODUCT_CODE
    SELECT X.BOX_NO, X.BOX_ID,X.PRODUCT_CODE,0 as QUANTITY_IN_STOCK ,X.QUANTITY ,  
           ERRMSG=CASE WHEN @CXNTYPE IN ('WSR','WSR_PS') THEN ''   
        WHEN sku.product_code is null THEN ' BARCODE NOT FOUND ' ELSE '' END          
    FROM 
    (
		SELECT A.BOX_NO, A.BOX_ID,B.PRODUCT_CODE,SUM(@nQty * B.QUANTITY) AS QUANTITY
		FROM BOXM A  
		JOIN BOXD B ON A.BOX_ID=B.BOX_ID 
		WHERE A.BOX_ID=@CBOX_ID  and isnull(a.CANCELLED ,0)=0
		GROUP BY A.BOX_NO, A.BOX_ID,B.PRODUCT_CODE
    )X 
	left join sku (nolock) on sku.product_code =x.PRODUCT_CODE
    --LEFT JOIN PMT01106 C ON X.PRODUCT_CODE=C.PRODUCT_CODE   
    WHERE X.BOX_ID=@CBOX_ID 
	--AND C.BIN_ID= @CBIN_ID  
    ORDER BY X.BOX_ID,X.PRODUCT_CODE  

END
