CREATE PROCEDURE UPDATEPMT_TRANSFER_TO_TRADING
		@CXNTYPE VARCHAR(10),
		@CXNNO VARCHAR(40),
		@CXNID VARCHAR(40),
		@NREVERTFLAG BIT = 0,
		@NALLOWNEGSTOCK BIT = 0,
		@NCHKDELBARCODES BIT = 0,
		@NUPDATEMODE INT=0,	
		@CCMD NVARCHAR(4000) OUTPUT

		--*** PARAMETERS :
		--*** @CXNTYPE - TRANSACTION TYPE (MODULE SPECIFIC)
		--*** @CXNNO - TRANSACTION NO ( MEMO NO OF MASTER TABLE )
		--*** @CXNID - TRANSACTION ID ( MEMO ID OF MASTER TABLE )
		--*** @NREVERTFLAG - A FLAG TO INDICATE WHETHER THIS PROCEDURE IS CALLED TO REVERT STOCK
		--*** @NALLOWNEGSTOCK - FLAG TO INDICATE WHETHER OR NOT ALLOW NEGATIVE STOCK
		--*** @NRETVAL - OUTPUT PARAMETER RETURNED BY THIS PROCEDURE (BIT 1-SUCCESS, 0-UNSUCCESS)
----WITH ENCRYPTION
AS
BEGIN



	DECLARE @NOUTFLAG INT, @NRETVAL BIT,@CXNTABLE VARCHAR(50),@CEXPR NVARCHAR(500),@CXNIDPARA VARCHAR(50),
			@BCANCELLED BIT
	
	SET @NRETVAL = 0
	SET @CCMD = ''
	--*********TRANSFER TO TRADING**********--
	
	   --DECLARE @JOB_CARD_TYPE VARCHAR(10),@CERRMSG VARCHAR(100)-- 1 FOR COMPONENT BASED 2 FOR RM BASED
    --   SELECT TOP 1 @JOB_CARD_TYPE=VALUE  FROM CONFIG WHERE CONFIG_OPTION ='JOB_CARD_COMPONENT_BASED' 

	IF @CXNTYPE IN ('TTM')	
	BEGIN
	    
	    --IF ISNULL(@JOB_CARD_TYPE,'')='1'
	    --BEGIN
			PRINT 'ENTER XFR STOCK UPDATE-1'
			IF @NREVERTFLAG = 1
				SET @NOUTFLAG = -1
			ELSE
				SET @NOUTFLAG = 1
			
			PRINT 'ENTER BFP STOCK UPDATE COMPONENT'
			
			   UPDATE JOBWORK_PMT 
				SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
				FROM 
				(	SELECT C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ as dept_id,B.BIN_ID,B.PRODUCT_CODE, SUM(B.QUANTITY) AS QUANTITY 
					FROM TRANSFER_TO_TRADING_SUB_DET B
					JOIN TRANSFER_TO_TRADING_MST C ON C.MEMO_ID=B.MEMO_ID
					JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
					JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
					WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
					GROUP BY C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/,B.BIN_ID,B.PRODUCT_CODE
				) B
				WHERE JOBWORK_PMT.PRODUCT_CODE = B.PRODUCT_CODE 
				AND JOBWORK_PMT.BIN_ID = B.BIN_ID 
				AND JOBWORK_PMT.DEPT_ID = B.DEPT_ID 
			
			SELECT @BCANCELLED=CANCELLED FROM TRANSFER_TO_TRADING_MST WHERE MEMO_ID=@CXNID

			--*** CHECKING FOR NEGATIVE STOCK
			--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
			IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1 
			BEGIN
				--PRINT 'CHECKING FOR NEGATIVE STOCK'
				PRINT 'PMT NEGATIVE START'
				IF EXISTS ( SELECT A.PRODUCT_CODE  FROM JOBWORK_PMT A JOIN
							(SELECT B.PRODUCT_CODE,B.BIN_ID, C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ as Dept_id, SUM(B.QUANTITY) AS QUANTITY 
							FROM TRANSFER_TO_TRADING_SUB_DET B
							JOIN TRANSFER_TO_TRADING_MST C ON C.MEMO_ID=B.MEMO_ID
							JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_CODE,B.BIN_ID,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/
							) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID=A.DEPT_ID
							AND B.BIN_ID=A.BIN_ID
							WHERE A.QUANTITY_IN_STOCK < 0)
				BEGIN
					SET @NRETVAL = 0		--*** UNSUCCESS
					SET @CCMD = N'SELECT DISTINCT A.PRODUCT_UID, A.QUANTITY_IN_STOCK FROM JOBWORK_PMT A  JOIN
							(SELECT B.PRODUCT_CODE,B.BIN_ID,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ as Dept_id , SUM(B.QUANTITY) AS QUANTITY 
							FROM TRANSFER_TO_TRADING_SUB_DET B
							JOIN TRANSFER_TO_TRADING_MST C ON C.MEMO_ID=B.MEMO_ID
							JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_CODE,B.BIN_ID,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ ) B ON B.PRODUCT_CODE=A.PRODUCT_CODE 
							AND B.BIN_ID=A.BIN_ID
							AND B.DEPT_ID=A.DEPT_ID
							WHERE A.QUANTITY_IN_STOCK < 0 '
				END
			END	
		   
		   IF ISNULL(@CCMD,'')<>''
		   GOTO END_PROC
			---MAIN PMT	
			
			 INSERT PMT01106	( LAST_UPDATE, REP_ID, PRODUCT_CODE, QUANTITY_IN_STOCK, DEPT_ID, BIN_ID )  
			 SELECT 	DISTINCT  GETDATE () AS  LAST_UPDATE,'' AS  REP_ID, 
			 B.PRODUCT_CODE,0 AS  QUANTITY_IN_STOCK, C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/, B.BIN_ID 
			 FROM TRANSFER_TO_TRADING_DET B (NOLOCK)
			 JOIN TRANSFER_TO_TRADING_MST C (NOLOCK) ON C.MEMO_ID=B.MEMO_ID
			 LEFT OUTER JOIN PMT01106 PMT (NOLOCK) ON PMT.PRODUCT_CODE = B.PRODUCT_CODE 
			 AND PMT.DEPT_ID = C.Location_code/*C.Dept_id*//*Rohit 06-11-2024*/ AND PMT.BIN_ID = B.BIN_ID
			 WHERE C.MEMO_ID=@CXNID AND  PMT.PRODUCT_CODE IS NULL

			
			
			
		     	PRINT 'ENTER TTM STOCK UPDATE MAIN PMT '
			
			    UPDATE PMT01106 
				SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK + ( @NOUTFLAG * B.QUANTITY )
				FROM 
				(	SELECT B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ as dept_id,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY 
					FROM TRANSFER_TO_TRADING_DET B
					JOIN TRANSFER_TO_TRADING_MST C ON C.MEMO_ID=B.MEMO_ID
					JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
					JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
					WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
					GROUP BY B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/,B.BIN_ID
				) B
				WHERE PMT01106.PRODUCT_CODE = B.PRODUCT_CODE 
				AND PMT01106.DEPT_ID = B.DEPT_ID
				AND PMT01106.BIN_ID = B.BIN_ID
				
		       PRINT 'ENTER TRANSFER STOCK UPDATE MAIN PMT '
			
			--*** CHECKING FOR NEGATIVE STOCK
			--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
			
			SELECT @BCANCELLED=CANCELLED FROM TRANSFER_TO_TRADING_MST WHERE MEMO_ID=@CXNID
			
			IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
			BEGIN
				PRINT 'ENTER XFR STOCK UPDATE-4'
				
				IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A JOIN
							(
								SELECT B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ as DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY 
								FROM TRANSFER_TO_TRADING_DET B
								JOIN TRANSFER_TO_TRADING_MST C ON C.MEMO_ID=B.MEMO_ID
								JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
								JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
								WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
								GROUP BY B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/,B.BIN_ID
							) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID =A.DEPT_ID AND B.BIN_ID =A.BIN_ID
							WHERE A.QUANTITY_IN_STOCK < 0)
				BEGIN
					SET @NRETVAL = 0		--*** UNSUCCESS
					
					
					PRINT 'ENTER XFR STOCK UPDATE-5'
					SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK ,
					''STOCK GOING NEGATIVE'' AS RESON
					  FROM PMT01106 A  JOIN
							(
								SELECT B.PRODUCT_CODE,C.DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY 
								FROM TRANSFER_TO_TRADING_DET B
								JOIN TRANSFER_TO_TRADING_MST C ON C.MEMO_ID=B.MEMO_ID
								JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
								JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
								WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
								GROUP BY B.PRODUCT_CODE,C.DEPT_ID,B.BIN_ID
							) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID =A.DEPT_ID  AND B.BIN_ID =A.BIN_ID
							WHERE A.QUANTITY_IN_STOCK < 0 
					'
				END
				
			END	
			
			
			  IF ISNULL(@CCMD,'')<>''
		      GOTO END_PROC
			    PRINT 'UPDATE JOB WORK PMT FOR INDIVISUAL ARTICLE '
			
			    UPDATE JOBWORK_PMT  
				SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
				FROM 
				(	SELECT B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY 
					FROM TRANSFER_TO_TRADING_DET B
					JOIN TRANSFER_TO_TRADING_MST C ON C.MEMO_ID=B.MEMO_ID
					JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
					JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
					WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
					AND E.ARTICLE_PRD_MODE=1
					GROUP BY B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/,B.BIN_ID
				) B
				WHERE JOBWORK_PMT.PRODUCT_CODE = B.PRODUCT_CODE 
				AND JOBWORK_PMT.DEPT_ID = B.DEPT_ID
				AND JOBWORK_PMT.BIN_ID = B.BIN_ID

			    
			    IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
			    BEGIN
				PRINT 'ENTER XFR STOCK UPDATE-4'
				
				IF EXISTS ( SELECT A.PRODUCT_CODE FROM JOBWORK_PMT  A JOIN
							(
								SELECT B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY 
								FROM TRANSFER_TO_TRADING_DET B
								JOIN TRANSFER_TO_TRADING_MST C ON C.MEMO_ID=B.MEMO_ID
								JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
								JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
								WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
								AND E.ARTICLE_PRD_MODE=1
								GROUP BY B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/,B.BIN_ID
							) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID =A.DEPT_ID AND B.BIN_ID =A.BIN_ID
							WHERE A.QUANTITY_IN_STOCK < 0)
				BEGIN
					SET @NRETVAL = 0		--*** UNSUCCESS
					
					
					PRINT 'ENTER XFR STOCK UPDATE-5'
					SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK ,
					''STOCK GOING NEGATIVE'' AS RESON
					  FROM JOBWORK_PMT A  JOIN
							(
								SELECT B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/ AS DEPT_ID,B.BIN_ID, SUM(B.QUANTITY) AS QUANTITY 
								FROM TRANSFER_TO_TRADING_DET B
								JOIN TRANSFER_TO_TRADING_MST C ON C.MEMO_ID=B.MEMO_ID
								JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
								JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
								WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
								AND E.ARTICLE_PRD_MODE=1
								GROUP BY B.PRODUCT_CODE,C.Location_code/*C.DEPT_ID*//*Rohit 06-11-2024*/,B.BIN_ID
							) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID =A.DEPT_ID  AND B.BIN_ID =A.BIN_ID
							WHERE A.QUANTITY_IN_STOCK < 0 
					'
				END
				
			END	
			
			
			
	   -- END
	END		--		-----END  TRANSFER TO MAIN ------
	
END_PROC:


END
