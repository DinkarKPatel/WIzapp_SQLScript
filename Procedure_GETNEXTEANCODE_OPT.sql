create PROCEDURE GETNEXTEANCODE_OPT
(
 	@CERRORMSG VARCHAR(MAX) OUTPUT  
)
AS
BEGIN
    
	DECLARE @NSTEP NUMERIC(5,0), @CEANPREFIX VARCHAR(100),@NEANROWS   BIGINT, @CNEXTEANPRODUCTCODE VARCHAR(50),
	        @NEANLENGTH  NUMERIC(4,0),@NNEXTEANKEYVALUE NUMERIC(10,0),@CEANLENGTH VARCHAR(5),@CCMD NVARCHAR(MAX),
			@CKEYSTABLE VARCHAR(10),@CTABLENAME VARCHAR(100),@CCOLNAME VARCHAR(20),@CFINYEAR VARCHAR(5),
			@NNEXTKEYVALUE VARCHAR(20),@cdept_id varchar(4)
 


	BEGIN TRY
	  
	  SET @NSTEP=10
	  
	    SET @CKEYSTABLE='KEYS_PMT'
		SET @CTABLENAME ='SKU'
		SET @CCOLNAME='PRODUCT_CODE'
		SET @CFINYEAR=''
		
		
		
		select @cdept_id=value  from config where config_option ='location_id'

		--rows remove if barcode available in sku 

		IF EXISTS (SELECT TOP 1 'U' from  #BARCODES_EAN A
		 JOIN SKU B (NOLOCK) ON A.ARTICLE_CODE =B.ARTICLE_CODE AND A.PARA1_CODE=B.PARA1_CODE AND A.PARA2_CODE=B.PARA2_CODE 
		 WHERE B.PRODUCT_CODE <>'')
		 BEGIN

			 DELETE A FROM #BARCODES_EAN A
			 JOIN SKU B (NOLOCK) ON A.ARTICLE_CODE =B.ARTICLE_CODE AND A.PARA1_CODE=B.PARA1_CODE AND A.PARA2_CODE=B.PARA2_CODE 
			 WHERE B.PRODUCT_CODE <>''
		end

		SELECT EAN_PREFIX INTO #TMPEAN FROM #BARCODES_EAN
        GROUP BY EAN_PREFIX

		 IF EXISTS (SELECT TOP 1'U' FROM #TMPEAN WHERE isnull(EAN_PREFIX,'')='')
		 begin
		     SET @CERRORMSG='ean prefix can not be blank' 
			  goto end_proc

		 end

		 SELECT TOP 1 @CEANLENGTH=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='EAN_LENGTH'   
	     
		 SET @NSTEP=20

		 IF ISNULL(@CEANLENGTH,'')=''    
			SET @NEANLENGTH=12    
		 ELSE    
			SET @NEANLENGTH=CONVERT(INT,@CEANLENGTH)   
		
		 WHILE EXISTS(SELECT TOP 1 'U' FROM #TMPEAN)
		 BEGIN
              
			  SET @NSTEP=30
			  SELECT TOP 1 @CEANPREFIX=EAN_PREFIX FROM #TMPEAN

			SELECT @NEANROWS=COUNT(*) FROM #TMPEAN WHERE EAN_PREFIX =@CEANPREFIX
      
			EXEC GETNEXTKEY_SKU @NEANLENGTH, @CEANPREFIX, 1, '', @NEANROWS,@CNEXTEANPRODUCTCODE OUTPUT     
			
			IF @CNEXTEANPRODUCTCODE IS NULL  
			begin
			   SET @CERRORMSG='ERROR IN next EAN GENERATION' 
			   goto end_proc
			end
	   
			SET @NNEXTEANKEYVALUE = CONVERT(NUMERIC(30,0),RIGHT(LTRIM(RTRIM(@CNEXTEANPRODUCTCODE)),LEN(@CNEXTEANPRODUCTCODE)-LEN(@CEANPREFIX)))    

			SET @NSTEP=40
			UPDATE A SET PRODUCT_CODE=@CEANPREFIX+REPLICATE(0,12-LEN(LTRIM(RTRIM((@CEANPREFIX))))-
			LEN(LTRIM(RTRIM(STR(@NNEXTEANKEYVALUE)))))+
			LTRIM(RTRIM(CONVERT(VARCHAR(40),@NNEXTEANKEYVALUE)))+
			RTRIM(LTRIM(DBO.FN_CREATECHECKDIGIT(@CEANPREFIX+REPLICATE(0,12-LEN(LTRIM(RTRIM((@CEANPREFIX))))-
			LEN(LTRIM(RTRIM(STR(@NNEXTEANKEYVALUE)))))+
			LTRIM(RTRIM(CONVERT(VARCHAR(40),@NNEXTEANKEYVALUE)))))),
			@NNEXTEANKEYVALUE=@NNEXTEANKEYVALUE+1
			FROM #BARCODES_EAN A WHERE A.EAN_PREFIX=@CEANPREFIX

			SET @NSTEP=50

			IF EXISTS (SELECT TOP 1 'U' FROM #BARCODES_EAN A (NOLOCK)
			JOIN SKU_NAMES (NOLOCK) B ON A.PRODUCT_CODE =B.PRODUCT_CODE WHERE A.EAN_PREFIX=@CEANPREFIX)
			BEGIN 
			    
				UPDATE A SET PRODUCT_CODE =''
				FROM #BARCODES_EAN A (NOLOCK)
			    JOIN SKU_NAMES (NOLOCK) B ON A.PRODUCT_CODE =B.PRODUCT_CODE 
				WHERE A.EAN_PREFIX=@CEANPREFIX

			END
			
			SET @NSTEP=60

				IF NOT EXISTS (SELECT TOP 1 'U' FROM #BARCODES_EAN A WHERE A.EAN_PREFIX=@CEANPREFIX AND  PRODUCT_CODE ='')
				BEGIN

				    DELETE FROM #TMPEAN WHERE EAN_PREFIX =@CEANPREFIX

					IF @NNEXTEANKEYVALUE IS NOT NULL 
					BEGIN
				
		                SET  @NNEXTKEYVALUE=@CEANPREFIX+LTRIM(RTRIM(CONVERT(VARCHAR(40),@NNEXTEANKEYVALUE-1)))

						 PRINT 'GETNEXTEAN-9'
						 SET @CCMD = N' UPDATE ' + @CKEYSTABLE + '
										SET LASTKEYVAL  = ''' + @NNEXTKEYVALUE + '''  
										WHERE TABLENAME = ''' + @CTABLENAME + '''  
										AND COLUMNNAME	= ''' + @CCOLNAME + '''  
										AND PREFIX		= ''' + @CEANPREFIX + '''  
										AND FINYEAR		= ''' + @CFINYEAR + ''''  

						  EXEC SP_EXECUTESQL @CCMD     
					END
				END


		 END

		 SET @NSTEP=70

		  IF EXISTS (SELECT TOP 1 'U' FROM #BARCODES_EAN A WHERE isnull(a.PRODUCT_CODE,'')='')
		  BEGIN
		       SET @CERRORMSG='error in ean generation' 
			   goto end_proc

		  END

	      UPDATE A SET PRODUCT_CODE=B.PRODUCT_CODE  
	      FROM #TMPMASTERSENC A
	      JOIN #BARCODES_EAN B ON A.ARTICLE_CODE =B.ARTICLE_CODE AND A.PARA1_CODE=B.PARA1_CODE AND A.PARA2_CODE= B.PARA2_CODE
	      WHERE A.PRODUCT_CODE<>B.PRODUCT_CODE 

	      
		 SET @CCMD=N'INSERT SKU ( PRODUCT_CODE,PRODUCT_NAME,ARTICLE_CODE, PARA1_CODE, PARA2_CODE, PARA3_CODE,PARA4_CODE, PARA5_CODE, PARA6_CODE,  
		 PURCHASE_PRICE, MRP, WS_PRICE,LAST_UPDATE,INV_NO,INV_DT, RECEIPT_DT, AC_CODE,FORM_ID,BARCODE_CODING_SCHEME,hsn_code,purchaseLocId)  
		  SELECT DISTINCT A.PRODUCT_CODE,C.ARTICLE_NAME,C.ARTICLE_CODE, P1.PARA1_CODE, P2.PARA2_CODE, 
		        isnull(P3.PARA3_CODE,''0000000'') as PARA3_CODE, isnull(P4.PARA4_CODE,''0000000'') as PARA4_CODE, 
				isnull(P5.PARA5_CODE,''0000000'') as PARA5_CODE, isnull(P6.PARA6_CODE,''0000000'') as PARA6_CODE,  
			    A.PURCHASE_PRICE AS PURCHASE_PRICE, A.MRP AS MRP, A.WS_PRICE AS WS_PRICE, GETDATE() AS LAST_UPDATE,   
			   '''' AS INV_NO,'''' AS INV_DT,'''' AS RECEIPT_DT,''0000000000'' AS AC_CODE,
			   ''0000000'' AS FORM_ID,C.CODING_SCHEME  ,A.HSN_CODE,'''+@cdept_id+''' purchaseLocId
		  FROM #TMPMASTERSENC A  
		  JOIN ARTICLE C (NOLOCK) ON A.ARTICLE_CODE = C.ARTICLE_CODE
		  JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE=A.PARA1_CODE
		  JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE=A.PARA2_CODE
		  LEFT JOIN PARA3 P3 (NOLOCK) ON P3.PARA3_NAME=A.PARA3_NAME
		  LEFT JOIN PARA4 P4 (NOLOCK) ON P4.PARA4_NAME=A.PARA4_NAME
		  LEFT JOIN PARA5 P5 (NOLOCK) ON P5.PARA5_NAME=A.PARA5_NAME
		  LEFT JOIN PARA6 P6 (NOLOCK) ON P6.PARA6_NAME=A.PARA6_NAME 
		  LEFT OUTER JOIN SKU D (NOLOCK) ON A.PRODUCT_CODE = D.PRODUCT_CODE
		  WHERE D.PRODUCT_CODE IS NULL' 
		  print @CCMD
		  exec sp_executesql @CCMD

	           
		 INSERT SKU_OH	( CustomdutyAmt, depreciation, discount_amount, excise_duty_amount, freight, Gst_Cess_Amount, last_modified_on, other_charges, product_code, round_off, tax_amount, value_add ) 
		 SELECT 	DISTINCT  0 CustomdutyAmt,0 depreciation,0 discount_amount,0 excise_duty_amount,0 freight,0 Gst_Cess_Amount,getdate() last_modified_on,
					  0 other_charges, a.product_code,0 round_off,0 tax_amount,0 value_add 
		 FROM  #BARCODES_EAN a (nolock)
		 left join SKU_OH b (nolock) on a.product_code =b.product_code  
		 where b.product_code is null


		   IF EXISTS (SELECT TOP 1 'U' FROM #BARCODES_EAN A 
		       LEFT JOIN SKU_NAMES  B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE AND B.PRODUCT_CODE <>''
		   WHERE B.PRODUCT_CODE IS NULL )
		  BEGIN
		       SET @CERRORMSG='ean barcode not found in sku ' 
			   GOTO END_PROC

		  END
		 
		 
			

   
	END TRY
	BEGIN CATCH
		PRINT 'CATCH IN GETNEXTEANCODE_OPT AT STEP#'+LTRIM(STR(@NSTEP))+' '+ERROR_MESSAGE()
		SET @CERRORMSG = 'PROCEDURE GETNEXTEANCODES : STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
	END CATCH

	end_proc:

END