CREATE PROC SP_SLS_FILTER--(LocId 3 digit change by Sanjay:30-10-2024)
(
	@CCUSTOMERCODE	NVARCHAR(20)='',
	@DTFROM			VARCHAR(15)	='',
	@DTTO			VARCHAR(15)	='',
	@CMEMOTYPE		VARCHAR(3)	='0',
	@CMEMOSTATUS	NUMERIC(3)	=0,
	@CDEPTID		VARCHAR(5)	='',
	@BCANCELLED		NUMERIC(1)	=0,
	@NORDERTYPE		NUMERIC(3)=0,
	@CSALESPERSON VARCHAR(10)='',
	@NHOLDBACK NUMERIC(1)=0,	 /*0 FOR ALL, 1 FOR WITHOUT HOLDBACK AND 2 FOR WITH HOLDBACK*/
	@NEST NUMERIC(1)=0,
	@LOC VARCHAR(4)='',
	@CUSER_CODE VARCHAR(7)='',
	@CPAYMODE_NAME VARCHAR(100)=''
)  
AS  
BEGIN  
  DECLARE @QUERY NVARCHAR(MAX)  ,@QUERY1 NVARCHAR(MAX),@CPAYMODE_filter varchar(1000)

  if @CUSER_CODE=''
  set @CUSER_CODE='0000000'

  set @CPAYMODE_filter=''
  if @CPAYMODE_NAME<>''
     set @CPAYMODE_filter=' and ['+@CPAYMODE_NAME+']<>0'

	 DECLARE @CAllowPatchedView BIT,@CPatchedViewFilter varchar(1000),@CPatchedpaymodeFilter varchar(1000)
	SELECT @CAllowPatchedView =VALUE FROM USER_ROLE_DET A (NOLOCK)--ADDED
				JOIN USERS B (NOLOCK)--ADDED
				ON A.ROLE_ID=B.ROLE_ID 
				WHERE USER_CODE=@CUSER_CODE 
				AND FORM_NAME='FRMSALE' 
				AND FORM_OPTION='ALLOW_VIEW_PATCH_DATA'	
        set @CPatchedViewFilter=''
		set @CPatchedpaymodeFilter=''
	
		if isnull(@CAllowPatchedView,'')<>'1'
		Begin
		    
			set @CPatchedViewFilter=' and ISNULL(a.patchup_run,0)=0 '
			set @CPatchedpaymodeFilter=' and ISNULL(cmm.patchup_run,0)=0 '
		end
		
		
     -- select dept_id into #tmpReportingLoc from LocRepUser where user_code='0000080'
   DECLARE @CHODEPTID VARCHAR(4)
   SELECT @CHODEPTID=value  FROM CONFIG WHERE CONFIG_OPTION ='HO-LOCATION_ID' 

  IF OBJECT_ID('TEMPDB..#SP_SLS_FILTER','U') IS NOT NULL
	DROP TABLE #SP_SLS_FILTER
  
  SELECT CM_ID INTO #SP_SLS_FILTER FROM CMM01106 WHERE 1=2

DECLARE @CCMD NVARCHAR(MAX) ,@CFILTER NVARCHAR(MAX)

--view data only Reportin location as per arun ji change (20240723)
 IF OBJECT_ID ('TEMPDB..#TMPLOCUSER','U') IS NOT NULL
      DROP TABLE #TMPLOCUSER
      
       SELECT DISTINCT  DEPT_ID AS USR_DEPT_ID INTO #TMPLOCUSER FROM LOCREPUSER WHERE 1=2
  
  IF (@CHODEPTID=@LOC or @LOC='')
  BEGIN    
  
   INSERT INTO #TMPLOCUSER(USR_DEPT_ID)
   SELECT DISTINCT  DEPT_ID AS USR_DEPT_ID FROM LOCREPUSER WHERE USER_CODE =@CUSER_CODE
   SET @LOC=''
   
  END
  else
  begin
       INSERT INTO #TMPLOCUSER(USR_DEPT_ID)
       select @LOC as DEPT_ID
  end
   
      
  -- SELECT DISTINCT  DEPT_ID AS USR_DEPT_ID INTO #TMPLOCUSER FROM LOCUSERS WHERE USER_CODE =@CUSER_CODE

--SET @CFILTER=''
--  IF @NEST=1
--  SET @CFILTER='AND  A.CM_DT BETWEEN CONVERT(VARCHAR(10),'''+@DTFROM+''',110) AND CONVERT(VARCHAR(10),'''+@DTTO+''',110)'
--  IF @NEST=0
--  SET @CFILTER='AND A.MEMO_TYPE=1 AND  A.CM_DT BETWEEN CONVERT(VARCHAR(10),'''+@DTFROM+''',110) AND CONVERT(VARCHAR(10),'''+@DTTO+''',110)'


IF OBJECT_ID('TEMPDB..#HOLDBILLS','U') IS NOT NULL
	DROP TABLE #HOLDBILLS

SELECT CM_ID INTO #HOLDBILLS FROM CMM01106 WHERE 1=2


IF OBJECT_ID('TEMPDB..#SALEPERSONBILLS','U') IS NOT NULL
	DROP TABLE #SALEPERSONBILLS

SELECT CM_ID INTO #SALEPERSONBILLS FROM CMM01106 WHERE 1=2


IF ISNULL(@CSALESPERSON,'')<>''
BEGIN
    
	INSERT INTO #SALEPERSONBILLS
	 SELECT  B.CM_ID AS MEMO_ID  
	 FROM  CMM01106 B (NOLOCK)
	 JOIN CMD01106 A (NOLOCK) ON A.CM_ID = B.CM_ID      
	 WHERE B.CANCELLED=0 AND B.CM_DT BETWEEN @DTFROM AND @DTTO
	 AND (A.EMP_CODE=@CSALESPERSON OR A.EMP_CODE1=@CSALESPERSON OR A.EMP_CODE2=@CSALESPERSON)
	 GROUP BY B.CM_ID


END

IF @NHOLDBACK=1 --WITHOUT HOLDBACK
BEGIN
	INSERT #HOLDBILLS
	SELECT DISTINCT CMM.CM_ID 
	FROM CMM01106 CMM(NOLOCK)
	LEFT JOIN 
	( 
	  --HOLD BACK BILLS
	  SELECT DISTINCT CMD.CM_ID
	  FROM CMD01106 CMD(NOLOCK) 
	  JOIN (
				SELECT DISTINCT REF_CMD_ROW_ID 
				FROM HOLD_BACK_DELIVER_DET HCMD(NOLOCK) 
				JOIN HOLD_BACK_DELIVER_MST HCMM(NOLOCK) ON HCMD.MEMO_ID=HCMM.MEMO_ID			
				WHERE HCMM.CANCELLED=0
		   )HDB ON CMD.ROW_ID=HDB.REF_CMD_ROW_ID
	)HB ON CMM.CM_ID=HB.CM_ID
	WHERE CMM.CANCELLED=0 AND HB.CM_ID IS NULL
END
ELSE IF @NHOLDBACK=2 --WITH HOLDBACK
BEGIN
	INSERT #HOLDBILLS
	SELECT DISTINCT CMM.CM_ID 
	FROM CMM01106 CMM(NOLOCK)
	JOIN 
	( 
	  --HOLD BACK BILLS
	  SELECT DISTINCT CMD.CM_ID
	  FROM CMD01106 CMD(NOLOCK) 
	  JOIN (
				SELECT DISTINCT REF_CMD_ROW_ID 
				FROM HOLD_BACK_DELIVER_DET HCMD(NOLOCK) 
				JOIN HOLD_BACK_DELIVER_MST HCMM(NOLOCK) ON HCMD.MEMO_ID=HCMM.MEMO_ID			
				WHERE HCMM.CANCELLED=0
		   )HDB ON CMD.ROW_ID=HDB.REF_CMD_ROW_ID
	)HB ON CMM.CM_ID=HB.CM_ID
	WHERE CMM.CANCELLED=0 
END

IF @CMEMOSTATUS<>0
BEGIN
	  IF /*@CMEMOTYPE=4 OR*/ @CPAYMODE_NAME='PYMT_CREDITISSUED'---- CREDIT NOTES
	  BEGIN
		 SET @CCMD=N'INSERT INTO #SP_SLS_FILTER
			SELECT DISTINCT B.CM_ID AS MEMO_ID  
			 FROM PAYMODE_XN_DET A  (NOLOCK)     
			 JOIN CMM01106 B (NOLOCK) ON A.MEMO_ID = B.CM_ID      
			 LEFT OUTER JOIN      
			 (      
				  SELECT P.ADJ_MEMO_ID       
				  FROM PAYMODE_XN_DET P (NOLOCK)     
				  JOIN CMM01106 Q (NOLOCK) ON P.MEMO_ID = Q.CM_ID      
				  WHERE P.PAYMODE_CODE = ''0000001''      
				  AND   Q.CANCELLED = 0      
				  UNION ALL  
				  SELECT P.ADJ_MEMO_ID       
				  FROM PAYMODE_XN_DET P (NOLOCK)     
				  JOIN ARC01106 Q (NOLOCK) ON P.MEMO_ID = Q.ADV_REC_ID      
				  WHERE P.PAYMODE_CODE = ''0000001''      
				  AND   Q.CANCELLED = 0      
			 ) X ON B.CM_ID = X.ADJ_MEMO_ID      
			 WHERE B.CUSTOMER_CODE ='+(CASE WHEN ISNULL(@CCUSTOMERCODE,'')='' THEN ' B.CUSTOMER_CODE ' ELSE ''''+@CCUSTOMERCODE +''' ' END)+
			 ' AND SUBSTRING(B.CM_NO,len(B.location_code)+3,1)=''N'' 
			 AND A.PAYMODE_CODE = ''0000004''      
			 AND B.CANCELLED = 0  
			 AND A.AMOUNT < 0      
			 AND X.ADJ_MEMO_ID IS '+(CASE WHEN @CMEMOSTATUS=1 THEN ' ' ELSE ' NOT ' END)+ ' NULL '
	   END		 
	   --ELSE
	   IF /*@CMEMOTYPE=3  OR*/ @CPAYMODE_NAME='PYMT_CREDITISSUED'---- CREDIT ISSUES
	   BEGIN
			 SET @CCMD=N'INSERT INTO #SP_SLS_FILTER
				SELECT DISTINCT B.CM_ID AS MEMO_ID  
				 FROM PAYMODE_XN_DET A  (NOLOCK)     
				 JOIN CMM01106 B (NOLOCK) ON A.MEMO_ID = B.CM_ID      
				 LEFT OUTER JOIN      
				 (    
					  SELECT   RCT.CM_ID,SUM(RECEIPT_AMOUNT) AS RECEIPT_AMOUNT 
					  FROM 
					  (
					  SELECT A.CM_ID,SUM(A.RECEIPT_AMOUNT) AS RECEIPT_AMOUNT FROM CMM_CREDIT_RECEIPT A
					  JOIN ARC01106 B ON A.ADV_REC_ID=B.ADV_REC_ID
					  WHERE B.CANCELLED = 0 GROUP BY A.CM_ID
					  UNION ALL
					  SELECT B.CM_ID,SUM(A.AMOUNT) AS RECEIPT_AMOUNT FROM PAYMODE_XN_DET A
					  JOIN CMM01106 B ON A.MEMO_ID=B.CM_ID
					  WHERE B.CANCELLED = 0 AND PAYMODE_CODE=''CMR0001''  GROUP BY B.CM_ID					  
					  ) RCT GROUP BY RCT.CM_ID
					        
				 ) X ON B.CM_ID = X.CM_ID
				 WHERE B.CUSTOMER_CODE ='+(CASE WHEN ISNULL(@CCUSTOMERCODE,'')='' THEN ' B.CUSTOMER_CODE ' ELSE ''''+@CCUSTOMERCODE +''' ' END)+
				 ' AND SUBSTRING(B.CM_NO,len(B.location_code)+3,1)<>''N'' 
				 AND A.PAYMODE_CODE = ''0000004''      
				 AND B.CANCELLED = 0  
				 AND (A.AMOUNT-ISNULL(X.RECEIPT_AMOUNT,0)) '+(CASE WHEN @CMEMOSTATUS=1 THEN ' > 0 ' ELSE ' = 0 ' END)
	   END
	   
	   PRINT ISNULL(@CCMD,'@CCMD : NULL QUERY,THUS NO RESULT.')
	   EXEC SP_EXECUTESQL @CCMD  

END
--SELECT * FROM  #SP_SLS_FILTER
IF @NORDERTYPE<>0
BEGIN
/*
Taiga : #490 LIST OF CASH MEMO FILTER
in LIST OF Cash Memo ,OPTION order status (Against order) status showing NO RECORD. Ticket no 0924-00822
SET @CCMD=N'INSERT INTO #SP_SLS_FILTER
		SELECT DISTINCT B.CM_ID AS MEMO_ID  
	 FROM  CMM01106 B (NOLOCK)
	 JOIN CMD01106 A (NOLOCK) ON A.CM_ID = B.CM_ID      
	 LEFT OUTER JOIN SKU_BO BO (NOLOCK) ON BO.PRODUCT_CODE=A.PRODUCT_CODE
	 LEFT OUTER JOIN #SP_SLS_FILTER DUP (NOLOCK) ON DUP.CM_ID=A.CM_ID
	 WHERE B.CANCELLED=0 AND B.CM_DT BETWEEN '''+@DTFROM+''' AND '''+@DTTO+''' AND ' +
	 (CASE WHEN @NORDERTYPE=2 THEN ' BO.PRODUCT_CODE IS NOT NULL ' ELSE ' BO.PRODUCT_CODE IS NULL ' END)+
	 ' AND DUP.CM_ID IS NULL '
*/
SET @CCMD=N'INSERT INTO #SP_SLS_FILTER
		SELECT DISTINCT B.CM_ID AS MEMO_ID  
	 FROM  CMM01106 B (NOLOCK)
	 JOIN CMD01106 A (NOLOCK) ON A.CM_ID = B.CM_ID      
	 LEFT OUTER JOIN #SP_SLS_FILTER DUP (NOLOCK) ON DUP.CM_ID=A.CM_ID
	 WHERE B.CANCELLED=0 AND B.CM_DT BETWEEN '''+@DTFROM+''' AND '''+@DTTO+''' AND ' +
	 (CASE WHEN @NORDERTYPE=2 THEN ' ISNULL(A.RBO_PRODUCT_CODE,'''')<>'''' ' ELSE '  ISNULL(A.RBO_PRODUCT_CODE,'''')=''''  ' END)+
	 ' AND DUP.CM_ID IS NULL '	 
	   PRINT ISNULL(@CCMD,'@CCMD : NULL QUERY,THUS NO RESULT.')
	   EXEC SP_EXECUTESQL @CCMD  

END
  
  DECLARE @CUSERFILTER NVARCHAR(MAX),@bAllowAccessRetailSaleAllUsers BIT
 SELECT @bAllowAccessRetailSaleAllUsers = ISNULL(Allow_access_retail_sale_All_users,0) FROM users (NOLOCK)
 WHERE USER_CODE=@CUSER_CODE 


	SET @CUSERFILTER = (CASE WHEN @CUSER_CODE = '0000000' OR @bAllowAccessRetailSaleAllUsers=1 THEN  N''    
	ELSE  N' AND A.USER_CODE IN (Select distinct xns_user_code from user_xns_filter WHERE USER_CODE= '''+@CUSER_CODE+''' 
			 UNION 
			 SELECT '''+@CUSER_CODE+''' AS xns_user_code)' END)    
 
    --for Payment mode Cross tab

	  
		select A.memo_id ,B.PAYMODE_NAME,
			   A.AMOUNT AS AMOUNT
		into #TMPPAYMODE
		FROM PAYMODE_XN_DET A
		JOIN PAYMODE_MST B ON A.PAYMODE_CODE=B.PAYMODE_CODE
		where 1=2

		declare @cpaymodename varchar(max),@cDisplayPaymodename varchar(max)
		SET @QUERY = N'insert into #TMPPAYMODE(MEMO_ID,PAYMODE_NAME,AMOUNT)
				SELECT MEMO_ID,''PYMT_''+REPLACE(REPLACE(B.PAYMODE_NAME,''.'',''''),'' '',''''),
					   SUM(CAST((CASE WHEN cmm.CANCELLED=1 THEN 0 ELSE isnull(amount,0) END) AS NUMERIC(18,2)) ) AS AMOUNT
				FROM PAYMODE_XN_DET A
				JOIN CMM01106 cmm (NOLOCK) ON A.MEMO_ID=cmm.CM_ID
				JOIN PAYMODE_MST B ON A.PAYMODE_CODE=B.PAYMODE_CODE
				WHERE XN_TYPE = ''SLS'' 
				'+@CPatchedpaymodeFilter +'
				AND  cmm.CM_DT BETWEEN CONVERT(VARCHAR(10),'''+@DTFROM+''',110) AND CONVERT(VARCHAR(10),'''+@DTTO+''',110)
				and cmm.CUSTOMER_CODE ='+(CASE WHEN ISNULL(@CCUSTOMERCODE,'')='' THEN ' cmm.CUSTOMER_CODE ' ELSE ''''+@CCUSTOMERCODE +''' ' END)+' and 
				cmm.location_code='+
				  +(CASE WHEN ISNULL(@CDEPTID,'')='' THEN ' cmm.location_code ' ELSE ''''+@CDEPTID+'''' END) +
				'GROUP BY MEMO_ID,B.PAYMODE_NAME'

		PRINT @QUERY
		EXEC SP_EXECUTESQL @QUERY


		if isnull(@CAllowPatchedView,'')<>'1' 
		Begin
		   

			SET @QUERY = N'insert into #TMPPAYMODE(MEMO_ID,PAYMODE_NAME,AMOUNT)
				SELECT MEMO_ID,''PYMT_''+REPLACE(REPLACE(B.PAYMODE_NAME,''.'',''''),'' '',''''),
					   SUM(CAST((CASE WHEN cmm.CANCELLED=1 THEN 0 ELSE isnull(OLd_amount,0) END) AS NUMERIC(18,2)) ) AS AMOUNT
				FROM PAYMODE_XN_DET A
				JOIN CMM01106 cmm (NOLOCK) ON A.MEMO_ID=cmm.CM_ID
				JOIN PAYMODE_MST B ON A.PAYMODE_CODE=B.PAYMODE_CODE
				WHERE XN_TYPE = ''SLS'' 
				and ISNULL(cmm.patchup_run,0)=1
				AND  cmm.CM_DT BETWEEN CONVERT(VARCHAR(10),'''+@DTFROM+''',110) AND CONVERT(VARCHAR(10),'''+@DTTO+''',110)
				and cmm.CUSTOMER_CODE ='+(CASE WHEN ISNULL(@CCUSTOMERCODE,'')='' THEN ' cmm.CUSTOMER_CODE ' ELSE ''''+@CCUSTOMERCODE +''' ' END)+' and 
				cmm.location_code='+
				  +(CASE WHEN ISNULL(@CDEPTID,'')='' THEN ' cmm.location_code ' ELSE ''''+@CDEPTID+'''' END) +
				'GROUP BY MEMO_ID,B.PAYMODE_NAME'

		PRINT @QUERY
		EXEC SP_EXECUTESQL @QUERY

		

		end


		--DECLARE @CCASH VARCHAR(100),@ccashfilter varchar(100)

		--set @ccashfilter=' 1=1'
		
		--if @CMEMOTYPE ='2'
		--begin
		--  SELECT @CCASH=PAYMODE_NAME FROM PAYMODE_MST WHERE PAYMODE_CODE ='0000000'
		--  IF EXISTS (SELECT TOP 1 'U' FROM #TMPPAYMODE WHERE PAYMODE_NAME=@CCASH)
		--    SET @CCASHFILTER=QUOTENAME (@CCASH)+'<>0'
		  
		--END


		SELECT   @cDisplayPaymodename=ISNULL(@cDisplayPaymodename+',','')+'isnull('+QUOTENAME(PAYMODE_NAME)+',0) as '+QUOTENAME(PAYMODE_NAME),
				 @cpaymodename=ISNULL(@cpaymodename+',','')+QUOTENAME(PAYMODE_NAME)
		FROM #TMPPAYMODE WHERE PAYMODE_NAME<>''
		group by PAYMODE_NAME

		if isnull(@cDisplayPaymodename,'')=''
		    set @cDisplayPaymodename=''
		if isnull(@cpaymodename,'')=''
		     set @cpaymodename='INR'

		if @cDisplayPaymodename<>''
		   set @cDisplayPaymodename=','+@cDisplayPaymodename

	--end Of Paymode Cross tab
	if  ISNULL(@CPAYMODE_NAME,'')<>'' AND CHARINDEX(@CPAYMODE_NAME,@cDisplayPaymodename)=0
		SET @CPAYMODE_filter =' AND 1=2 '


  SET @QUERY = N'SELECT 
             A.FIN_YEAR,CM_NO,CM_DT,
           CAST((CASE WHEN CANCELLED=1 THEN 0 ELSE SUBTOTAL END) AS NUMERIC(18,2)) AS SUBTOTAL ,
           CAST((CASE WHEN CANCELLED=1 THEN 0 ELSE A.DISCOUNT_PERCENTAGE END) AS NUMERIC(18,2)) AS DISCOUNT_PERCENTAGE ,
           CAST((CASE WHEN CANCELLED=1 THEN 0 ELSE DISCOUNT_AMOUNT END) AS NUMERIC(18,2)) AS DISCOUNT_AMOUNT ,
           CAST((CASE WHEN CANCELLED=1 THEN 0 ELSE NET_AMOUNT END) AS NUMERIC(18,2)) AS NET_AMOUNT , 
		  (CASE WHEN CANCELLED=1 THEN ''CANCELLED'' ELSE '''' END) AS CANCELLED ,A.REMARKS,  
		  A.CM_ID AS MEMO_ID,ROUND_OFF,MEMO_TYPE,
		  B.CUSTOMER_FNAME+''''+B.CUSTOMER_LNAME AS CUSTOMER_NAME,C.USERNAME, '''' AS ADDRESS,      
		  ISNULL(ST.STATE,'''') AS [STATE],ISNULL(AR.AREA_NAME,'''') AS  AREA,      
		  ISNULL(CI.CITY,'''') AS CITY,ISNULL(AR.PINCODE,'''') AS PINCODE,      
		  ISNULL(D.USERNAME,'''') AS [EDT_USERNAME]  ,B.MOBILE,  
		  CONVERT(VARCHAR(10),(CASE WHEN D1.MEMO_ID IS NULL THEN ''NO'' ELSE ''YES'' END)) AS [DOCUMENT_ATTACHED],
		  CAST((CASE WHEN CANCELLED=1 THEN 0 ELSE ISNULL(A.TOTAL_QUANTITY,0) END) AS NUMERIC(18,2)) AS SLS_QUANTITY , 
		  CAST(0 AS NUMERIC(18,2)) AS SLR_QUANTITY 
		   ,A.ATD_CHARGES ,A.TOTAL_QUANTITY_STR,
		   (CASE WHEN ISNULL(EDIT_COUNT,0)>0 THEN ''EDITED ('' + RTRIM(LTRIM(STR(EDIT_COUNT)))+ '')'' ELSE '''' END ) AS EDIT_COUNT ,
		   a.Total_Gst_Cess_Amount,A.EINV_IRN_NO,ISNULL(B.cus_gst_no,'''')+ISNULL(LMP.Ac_gst_no,'''') AS [PARTY_GST_NO]
		   ,ISNULL(LOC.Enable_EInvoice,0) AS Enable_EInvoice,CN_ADJ.ADJ_CM_NO,CN_ADJ.ADJ_CM_DT,A.ref_no,A.EINV_IRN_NO,A.ACH_NO,A.ACH_DT,ISNULL(D11.username,'''') AS validation_bypassed_user_name
		   ,A.copies_ptd,A.ecoupon_id,PAY.*
		  FROM CMM01106 A  (NOLOCK) 
		  JOIN LOCATION LOC  (NOLOCK) ON LOC.dept_id=a.location_code    
		  JOIN #TMPLOCUSER LU ON LU.USR_DEPT_ID=a.location_code
		  LEFT OUTER JOIN 
		  ( 
			SELECT memo_id '+@cDisplayPaymodename+'
			FROM #TMPPAYMODE 
			PIVOT (SUM(AMOUNT) FOR PAYMODE_NAME IN('+@cpaymodename+')) AS P
			)  PAY ON A.CM_ID = PAY. MEMO_ID
			LEFT OUTER JOIN 
			( 
				SELECT A.MEMO_ID,A.REF_NO,A.ADJ_MEMO_ID ,B.CM_NO AS ADJ_CM_NO,B.CM_DT AS ADJ_CM_DT
				FROM PAYMODE_XN_DET A (NOLOCK)
				JOIN CMM01106 B (NOLOCK) ON A.MEMO_ID=B.CM_ID 
				 WHERE PAYMODE_CODE=''0000001'' AND XN_TYPE=''SLS'' 
				 AND B.CANCELLED=0
			)  CN_ADJ ON A.CM_ID = CN_ADJ.adj_memo_id
		     '+
		  (CASE WHEN @CMEMOSTATUS<>0 OR @NORDERTYPE<>0 THEN ' JOIN #SP_SLS_FILTER ADJCM ON ADJCM.CM_ID=A.CM_ID ' ELSE '' END)
		  +(CASE WHEN @NHOLDBACK<>0 THEN ' JOIN #HOLDBILLS HB ON HB.CM_ID=A.CM_ID ' ELSE '' END)
		  +(CASE WHEN ISNULL(@CSALESPERSON,'')<>'' THEN ' JOIN #SALEPERSONBILLS sp ON sp.CM_ID=A.CM_ID ' ELSE '' END)
		  
		 SET @QUERY1=N' JOIN CUSTDYM B  (NOLOCK) ON B.CUSTOMER_CODE=A.CUSTOMER_CODE       
		  JOIN LM01106 B1  (NOLOCK) ON B1.AC_CODE=A.AC_CODE     
		  LEFT OUTER JOIN LMP01106 LMP  (NOLOCK) ON B1.AC_CODE=LMP.AC_CODE     
		  JOIN DTM  (NOLOCK) ON DTM.DT_CODE=A.DT_CODE    
		  LEFT OUTER JOIN AREA AR  (NOLOCK) ON AR.AREA_CODE=B.AREA_CODE      
		  LEFT OUTER JOIN CITY CI  (NOLOCK) ON CI.CITY_CODE=AR.CITY_CODE      
		  LEFT OUTER JOIN STATE ST  (NOLOCK) ON ST.STATE_CODE=CI.STATE_CODE           
		  JOIN USERS C  (NOLOCK) ON C.USER_CODE=A.USER_CODE      
		  LEFT OUTER JOIN USERS D  (NOLOCK) ON D.USER_CODE=A.EDT_USER_CODE       
		  LEFT OUTER JOIN USERS D11  (NOLOCK) ON D11.USER_CODE=A.validation_bypassed_user_code       
		  LEFT OUTER JOIN IMAGE_XN_DET D1  (NOLOCK) ON D1.MEMO_ID=A.CM_ID AND D1.XN_TYPE=''SLS''
		  WHERE  ISNULL(duplicate_version,0)=0  
		  '+@CPatchedViewFilter+'
		  and ' + (CASE WHEN ISNULL(@CCUSTOMERCODE,'')='' THEN ' A.CUSTOMER_CODE=A.CUSTOMER_CODE ' ELSE '(A.CUSTOMER_CODE='''+ @CCUSTOMERCODE +''' OR A.AC_CODE='''+@CCUSTOMERCODE+''')' END)+
		  @CUSERFILTER+
		  'AND A.CANCELLED = '+(CASE WHEN @BCANCELLED = 2 THEN 'A.CANCELLED'
										WHEN @BCANCELLED = 1 THEN '1'
										WHEN @BCANCELLED = 0 THEN '0' END )+

		  ' AND  A.CM_DT BETWEEN CONVERT(VARCHAR(10),'''+@DTFROM+''',110) AND CONVERT(VARCHAR(10),'''+@DTTO+''',110) AND '
			+isnull((CASE WHEN @CMEMOTYPE = '2' THEN ' 1=1 '--PAY.[CASH] < 0
				   WHEN @CMEMOTYPE = '3' THEN ' 1=1' --PAY.[CREDIT_ISSUED]<> 0 AND SUBSTRING(A.CM_NO,5,1)<>''N''
				   WHEN @CMEMOTYPE = '4' THEN '  SUBSTRING(A.CM_NO,len(A.location_code)+3,1)=''N''' 
				   WHEN @CMEMOTYPE = '0' THEN ' 1=1'  END ),' 1=1')+
		    @CPAYMODE_filter+
			' AND A.MEMO_TYPE= '+ (CASE WHEN @NEST=0 THEN '1' ELSE '2' END) +'  AND a.location_code=  '
					   +(CASE WHEN ISNULL(@CDEPTID,'')='' THEN ' a.location_code ' ELSE ''''+@CDEPTID+'''' END) +
					   ' AND ('''+@LOC+'''='''' OR a.location_code= ''' +@LOC +''')	'

            
			Declare @QUERY_patchup_run NVARCHAR(MAX),@QUERY_patchup_run1 NVARCHAR(MAX)

		IF EXISTS (SELECT TOP 1 'U' FROM CMM01106 A  (NOLOCK) WHERE   A.CM_DT BETWEEN CONVERT(VARCHAR(10),@DTFROM,110) AND CONVERT(VARCHAR(10),@DTTO,110) and isnull(a.patchup_run,0)=1 ) and isnull(@CAllowPatchedView,'')<>'1'
		begin
     
	        
			SET @QUERY_patchup_run = N' UNION ALL SELECT 
				 A.FIN_YEAR,CM_NO,CM_DT,
			   CAST((CASE WHEN CANCELLED=1 THEN 0 ELSE OLD_SUBTOTAL END) AS NUMERIC(18,2)) AS SUBTOTAL ,
			   CAST((CASE WHEN CANCELLED=1 THEN 0 ELSE A.old_DISCOUNT_PERCENTAGE END) AS NUMERIC(18,2)) AS DISCOUNT_PERCENTAGE ,
			   CAST((CASE WHEN CANCELLED=1 THEN 0 ELSE old_DISCOUNT_AMOUNT END) AS NUMERIC(18,2)) AS DISCOUNT_AMOUNT ,
			   CAST((CASE WHEN CANCELLED=1 THEN 0 ELSE old_NET_AMOUNT END) AS NUMERIC(18,2)) AS NET_AMOUNT , 
			  (CASE WHEN CANCELLED=1 THEN ''CANCELLED'' ELSE '''' END) AS CANCELLED ,A.REMARKS,  
			  A.CM_ID AS MEMO_ID,old_ROUND_OFF,MEMO_TYPE,
			  B.CUSTOMER_FNAME+''''+B.CUSTOMER_LNAME AS CUSTOMER_NAME,C.USERNAME, '''' AS ADDRESS,      
			  ISNULL(ST.STATE,'''') AS [STATE],ISNULL(AR.AREA_NAME,'''') AS  AREA,      
			  ISNULL(CI.CITY,'''') AS CITY,ISNULL(AR.PINCODE,'''') AS PINCODE,      
			  ISNULL(D.USERNAME,'''') AS [EDT_USERNAME]  ,B.MOBILE,  
			  CONVERT(VARCHAR(10),(CASE WHEN D1.MEMO_ID IS NULL THEN ''NO'' ELSE ''YES'' END)) AS [DOCUMENT_ATTACHED],
			  CAST((CASE WHEN CANCELLED=1 THEN 0 ELSE ISNULL(A.TOTAL_QUANTITY,0) END) AS NUMERIC(18,2)) AS SLS_QUANTITY , 
			  CAST(0 AS NUMERIC(18,2)) AS SLR_QUANTITY 
			   ,A.ATD_CHARGES ,A.TOTAL_QUANTITY_STR,
			   (CASE WHEN ISNULL(EDIT_COUNT,0)>0 THEN ''EDITED ('' + RTRIM(LTRIM(STR(EDIT_COUNT)))+ '')'' ELSE '''' END ) AS EDIT_COUNT ,
			   a.Total_Gst_Cess_Amount,A.EINV_IRN_NO,ISNULL(B.cus_gst_no,'''')+ISNULL(LMP.Ac_gst_no,'''') AS [PARTY_GST_NO]
			   ,ISNULL(LOC.Enable_EInvoice,0) AS Enable_EInvoice,CN_ADJ.ADJ_CM_NO,CN_ADJ.ADJ_CM_DT,A.ref_no,A.EINV_IRN_NO,A.ACH_NO,A.ACH_DT,ISNULL(D11.username,'''') AS validation_bypassed_user_name
			   ,A.copies_ptd,A.ecoupon_id,PAY.*
			  FROM CMM01106 A  (NOLOCK) 
			  JOIN LOCATION LOC  (NOLOCK) ON LOC.dept_id=a.location_code    
			  JOIN #TMPLOCUSER LU ON LU.USR_DEPT_ID=a.location_code
			  LEFT OUTER JOIN 
			  ( 
				SELECT memo_id '+@cDisplayPaymodename+'
				FROM #TMPPAYMODE 
				PIVOT (SUM(AMOUNT) FOR PAYMODE_NAME IN('+@cpaymodename+')) AS P
				)  PAY ON A.CM_ID = PAY. MEMO_ID
				LEFT OUTER JOIN 
				( 
					SELECT A.MEMO_ID,A.REF_NO,A.ADJ_MEMO_ID ,B.CM_NO AS ADJ_CM_NO,B.CM_DT AS ADJ_CM_DT
					FROM PAYMODE_XN_DET A (NOLOCK)
					JOIN CMM01106 B (NOLOCK) ON A.MEMO_ID=B.CM_ID 
					 WHERE PAYMODE_CODE=''0000001'' AND XN_TYPE=''SLS'' 
					 AND B.CANCELLED=0
				)  CN_ADJ ON A.CM_ID = CN_ADJ.adj_memo_id
				 '+
			  (CASE WHEN @CMEMOSTATUS<>0 OR @NORDERTYPE<>0 THEN ' JOIN #SP_SLS_FILTER ADJCM ON ADJCM.CM_ID=A.CM_ID ' ELSE '' END)
			  +(CASE WHEN @NHOLDBACK<>0 THEN ' JOIN #HOLDBILLS HB ON HB.CM_ID=A.CM_ID ' ELSE '' END)
			  +(CASE WHEN ISNULL(@CSALESPERSON,'')<>'' THEN ' JOIN #SALEPERSONBILLS sp ON sp.CM_ID=A.CM_ID ' ELSE '' END)
		  
			 SET @QUERY_patchup_run1=N' JOIN CUSTDYM B  (NOLOCK) ON B.CUSTOMER_CODE=A.CUSTOMER_CODE       
			  JOIN LM01106 B1  (NOLOCK) ON B1.AC_CODE=A.AC_CODE     
			  LEFT OUTER JOIN LMP01106 LMP  (NOLOCK) ON B1.AC_CODE=LMP.AC_CODE     
			  JOIN DTM  (NOLOCK) ON DTM.DT_CODE=A.DT_CODE    
			  LEFT OUTER JOIN AREA AR  (NOLOCK) ON AR.AREA_CODE=B.AREA_CODE      
			  LEFT OUTER JOIN CITY CI  (NOLOCK) ON CI.CITY_CODE=AR.CITY_CODE      
			  LEFT OUTER JOIN STATE ST  (NOLOCK) ON ST.STATE_CODE=CI.STATE_CODE           
			  JOIN USERS C  (NOLOCK) ON C.USER_CODE=A.USER_CODE      
			  LEFT OUTER JOIN USERS D  (NOLOCK) ON D.USER_CODE=A.EDT_USER_CODE       
			  LEFT OUTER JOIN USERS D11  (NOLOCK) ON D11.USER_CODE=A.validation_bypassed_user_code       
			  LEFT OUTER JOIN IMAGE_XN_DET D1  (NOLOCK) ON D1.MEMO_ID=A.CM_ID AND D1.XN_TYPE=''SLS''
			  WHERE ISNULL(duplicate_version,0)=0 AND   isnull(a.patchup_run,0)=1 and  ' + (CASE WHEN ISNULL(@CCUSTOMERCODE,'')='' THEN ' A.CUSTOMER_CODE=A.CUSTOMER_CODE ' ELSE '(A.CUSTOMER_CODE='''+ @CCUSTOMERCODE +''' OR A.AC_CODE='''+@CCUSTOMERCODE+''')' END)+
			  @CUSERFILTER+
			  'AND A.CANCELLED = '+(CASE WHEN @BCANCELLED = 2 THEN 'A.CANCELLED'
											WHEN @BCANCELLED = 1 THEN '1'
											WHEN @BCANCELLED = 0 THEN '0' END )+

			  ' AND  A.CM_DT BETWEEN CONVERT(VARCHAR(10),'''+@DTFROM+''',110) AND CONVERT(VARCHAR(10),'''+@DTTO+''',110) AND '
				+isnull((CASE WHEN @CMEMOTYPE = '2' THEN ' 1=1 '--PAY.[CASH] < 0
					   WHEN @CMEMOTYPE = '3' THEN ' 1=1' 
					   WHEN @CMEMOTYPE = '4' THEN '  SUBSTRING(A.CM_NO,len(A.location_code)+3,1)=''N''' 
					   WHEN @CMEMOTYPE = '0' THEN ' 1=1'  END ),' 1=1')+
				@CPAYMODE_filter+
				' AND A.MEMO_TYPE= '+ (CASE WHEN @NEST=0 THEN '1' ELSE '2' END) +'  AND a.location_code=  '
						   +(CASE WHEN ISNULL(@CDEPTID,'')='' THEN ' a.location_code ' ELSE ''''+@CDEPTID+'''' END) +
						   ' AND ('''+@LOC+'''='''' OR a.location_code= ''' +@LOC +''')	'

                    PRINT ISNULL(@QUERY_patchup_run,'NULL QUERY,THUS NO RESULT.')
                    PRINT ISNULL(@QUERY_patchup_run1,'NULL QUERY1,THUS NO RESULT.')

		end

		
  
  PRINT ISNULL(@QUERY,'NULL QUERY,THUS NO RESULT.')
  PRINT ISNULL(@QUERY1,'NULL QUERY1,THUS NO RESULT.')

  DECLARE @QUERY_ALL NVARCHAR(MAX)
  SET @QUERY_ALL=ISNULL(@QUERY,'') + ISNULL(@QUERY1,'')+iSNULL(@QUERY_patchup_run,'')+iSNULL(@QUERY_patchup_run1,'')
  EXEC SP_EXECUTESQL @QUERY_ALL
    
END  
--END OF PROCEDURE - SP_SLS_FILTER
