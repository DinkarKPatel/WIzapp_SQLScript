create PROCEDURE SP3S_CALPARTYDN_RATES--(LocId 3 digit change  by Sanjay:04-11-2024)
(  
    @CACCODE      VARCHAR(10)=''  
   ,@NAGAINSTPACKSLIP NUMERIC(1,0)=0
   ,@nBillLevelTaxmethod NUMERIC(1,0)=0
   ,@nBillChallanMode NUMERIC(1,0)
   ,@ninv_mode NUMERIC(1,0)=1
   ,@CLOC_ID VARCHAR(4)	  	 
   ,@CSP_ID VARCHAR(40)
   ,@cErrormsg VARCHAR(MAX) OUTPUT
   ,@BPASTE BIT=0
   ,@DRM_DT DATETIME=''  
   ,@bmultipledn int=0
   ,@BFINANCIALDN BIT=0
   ,@CUSERCODE VARCHAR(10)='0000000'
   ,@CSHIPPINGAc_CODE varchar(15)=''
   ,@nshippintMode int=0
   ,@BAgainstProforma bit=0
   ,@BALLOWNEGSTOCK bit=0
)  
AS   
BEGIN  


	 DECLARE @DLASTPURCHASEDATE DATETIME,@CPURCHASEDAYS VARCHAR(5),@DFROMDATE DATETIME,@CSTEP VARCHAR(20),  
	 @CSEARCHPRODUCTCODE VARCHAR(100),@CCURLOCID VARCHAR(5),@CSTATECODE CHAR(7),@CLOCSSTMEMOID VARCHAR(40),
	 @CTMPTABLE VARCHAR(40),@BVATFOUND BIT,@CFORMID CHAR(7),@BLOCALDEBITNOTE BIT,@bDonotValidateBillChallanMode BIT,
	 @CMRRID VARCHAR(40),@CCMD NVARCHAR(MAX),@NBILL_CHALLAN_MODE INT,@CHECK_SUPPLIER_DN VARCHAR(4),
	 @cDbName VARCHAR(max),@cpREVDbName VARCHAR(200),@cDnPc varchar(50),@NQTYBEFORESAVE NUMERIC(10,3),@NQTYAFTERSAVE NUMERIC(10,3),
	 @CPRDCODE VARCHAR(100),@nmpr numeric(12,3),@benablebatchcode bit , @DEXPIRYDT DATETIME,
	 @bmultiplemrp bit,@BDONOTCHECKSTOCK BIT,@CDONOTCHECKSTOCK varchar(10)  

	  SET @BMULTIPLEMRP=0
	  set @benablebatchcode=0
	  set @CSHIPPINGAc_CODE=isnull(@CSHIPPINGAc_CODE,'')
	 

BEGIN TRY

       SET @CSTEP=5
    		
       set @BDONOTCHECKSTOCK=0
	   SELECT TOP 1 @CDONOTCHECKSTOCK =VALUE FROM USER_ROLE_DET A(NOLOCK)    
	   JOIN USERS B(NOLOCK) ON A.ROLE_ID=B.ROLE_ID    
	   WHERE USER_CODE=@CUSERCODE --AND USER_CODE<>'0000000'    
	   AND FORM_NAME='FRMSALE'     
	   AND FORM_OPTION='ALLOW_NEG_STOCK'      
	       
	   IF ISNULL(@CDONOTCHECKSTOCK,'')='1'    
		SET @BDONOTCHECKSTOCK = 1    
		
	DECLARE @CCHECK_OEM_NAME_IN_DN VARCHAR(10)
	SELECT @CCHECK_OEM_NAME_IN_DN=VALUE  FROM CONFIG WHERE CONFIG_OPTION='CHECK_OEM_NAME_IN_DN'

	IF ISNULL(@CCHECK_OEM_NAME_IN_DN,'')<>'1'
	   SET @NSHIPPINTMODE=0

	IF ISNULL(@NSHIPPINTMODE,0)<>3
	   SET @CSHIPPINGAC_CODE=''

	if isnull(@nshippintMode,0)=3 and isnull(@CSHIPPINGAc_CODE,'') in('','0000000000')
	begin

	  SET @CERRORMSG= 'OEM Supplier Can not be blank' 
	  RETURN

	end

	SET @CSTEP=10
   SELECT @NQTYBEFORESAVE=SUM(QUANTITY) FROM #TMPPURDETAILS
  
   SELECT  TOP 1 @CHECK_SUPPLIER_DN=VALUE FROM CONFIG WHERE CONFIG_OPTION ='CHECK_SUPPLIER_DN'

   SET @bDonotValidateBillChallanMode=0

    IF @NINV_MODE=2
	   SELECT  TOP 1 @CHECK_SUPPLIER_DN=VALUE FROM CONFIG WHERE CONFIG_OPTION ='GROUP_DN_CHECK_SUPPLIER'

   IF (@CACCODE in('0000000000','')  OR @BFINANCIALDN=1)
      SELECT @CHECK_SUPPLIER_DN='',@bDonotValidateBillChallanMode=1

      SET @CHECK_SUPPLIER_DN=ISNULL(@CHECK_SUPPLIER_DN,'')


   IF @BPASTE=0 AND @NAGAINSTPACKSLIP=0 
	 BEGIN
		SET @CSTEP=15
				SELECT TOP 1 @CPRDCODE=A.PRODUCT_CODE,@nmpr=B.MRP 
				FROM #TMPPURDETAILS A  (NOLOCK) 
				JOIN SKU B (NOLOCK)  ON A.PRODUCT_CODE =B.PRODUCT_CODE 
				join article art (nolock) on art.article_code =b.article_code 
				WHERE CHARINDEX ('@',A.PRODUCT_CODE)=0
				AND B.barcode_coding_scheme =1 and art.stock_na =0 
	
			
				IF ISNULL(@CPRDCODE,'')<>''
				BEGIN
				    
					SELECT A.PRODUCT_CODE,ISNULL(BARCODE_CODING_SCHEME,0) AS CODING_SCHEME 
					INTO #SKUCHECK
					FROM sku  a (NOLOCK)
					where a.product_code like @CPRDCODE+'@%' 
					UNION 
					SELECT @CPRDCODE AS PRODUCT_CODE,1 AS CODING_SCHEME

				
				    SET @CSTEP=15.7
					IF  EXISTS (SELECT TOP 1 PRODUCT_CODE FROM #SKUCHECK )
					BEGIN
					    
						--INSERT INTO PRT_ITEM_DETAILS(SP_ID,PRODUCT_CODE ,BIN_ID ,DEPT_ID )
						
						SELECT  A.PRODUCT_CODE,PMT.BIN_ID ,@CLOC_ID AS DEPT_ID ,
								ISNULL(EXPIRY_DT,'') AS EXPIRY_DT,
								PMT.QUANTITY_IN_STOCK,ISNULL(BATCH_NO,'') AS BATCH_NO,CONVERT(VARCHAR(36),NEWID()) AS BATCH_ROW_ID,
								PERISHABLE,a.mrp 
					        	into #SP_CHECKSTOCK0
						FROM SKU A (NOLOCK)
						JOIN ARTICLE B  (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE        
						LEFT JOIN PMT01106 PMT (NOLOCK) ON A.PRODUCT_CODE=PMT.PRODUCT_CODE  AND PMT.DEPT_ID=@CLOC_ID AND PMT.BIN_ID not in('999','888')
						JOIN #SKUCHECK C ON C.PRODUCT_CODE=A.PRODUCT_CODE
						LEFT JOIN BIN(NOLOCK) ON BIN.BIN_ID=PMT.BIN_ID   
						WHERE ((ISNULL(PMT.QUANTITY_IN_STOCK,0)>0  AND  PMT.DEPT_ID= @CLOC_ID)) 
						
						

						DECLARE @NLENPC INT,@NCNTEXPIRED NUMERIC(3,0),@NEXPIRYDTCOUNT NUMERIC(2,0),@NCNT int
						SET @NLENPC=LEN(@CPRDCODE)
					
						SET @NCNT=0
					
					    SET @CSTEP=16.2
						SELECT @NCNT=COUNT(PRODUCT_CODE) FROM #SP_CHECKSTOCK0
						SELECT @NCNTEXPIRED=COUNT(PRODUCT_CODE) FROM #SP_CHECKSTOCK0 
						WHERE EXPIRY_DT<@DRM_DT AND PERISHABLE=1

						if isnull(@NCNTEXPIRED,0)>0
						begin
						    
							IF NOT EXISTS (SELECT TOP 1 'U'  FROM #SP_CHECKSTOCK0 
						    WHERE EXPIRY_DT>@DRM_DT AND PERISHABLE=1)
							BEGIN

							  select top 1 @DEXPIRYDT=EXPIRY_DT from #SP_CHECKSTOCK0
							  SET @CERRORMSG= 'THIS BATCH OF ITEM EXPIRED ON :'+CONVERT(VARCHAR,@DEXPIRYDT,105)+'....PLEASE CHECK' 
							  RETURN

							END

							DELETE  FROM #SP_CHECKSTOCK0 
						    WHERE EXPIRY_DT<@DRM_DT AND PERISHABLE=1


						end
						
						--if @@spid=176
						--	select 'check sp_checkstock0',BATCH_ROW_ID ,@CPRDCODE PRODUCT_CODE ,CAST('' AS VARCHAR(100)) AS DBNAME,  
						--		   MRR_ID =CAST('' AS VARCHAR(50)),BILL_CHALLAN_MODE=CAST(0 AS INT),  
						--           1 AS QUANTITY  ,''  AS PS_ID,ISNULL(A.BIN_ID,'') AS BIN_ID,BM.BIN_NAME ,''  PS_NO, ''  PS_DT,
						--	      CAST('' AS VARCHAR(50)) AS PID_ROW_ID ,A.MRP,'' AS AC_CODE,
						--		   a.product_code
						--  FROM #SP_CHECKSTOCK0 A  
						--  LEFT JOIN BIN BM (NOLOCK) ON A.BIN_ID= BM.BIN_ID 

						IF EXISTS (SELECT TOP 1 'U' FROM #SP_CHECKSTOCK0)
						BEGIN
						     
							SET @CSTEP=17.4
						   DELETE FROM  #TMPPURDETAILS
                           INSERT INTO #TMPPURDETAILS(ROW_ID,PRODUCT_CODE,DBNAME,MRR_ID,BILL_CHALLAN_MODE,QUANTITY,PS_ID,BIN_ID,BIN_NAME,PS_NO,PS_DT,
						   PID_ROW_ID,MRP,AC_CODE,STOCK_PRODUCT_CODE)

							SELECT  BATCH_ROW_ID ,@CPRDCODE PRODUCT_CODE ,CAST('' AS VARCHAR(100)) AS DBNAME,  
								   MRR_ID =CAST('' AS VARCHAR(50)),BILL_CHALLAN_MODE=CAST(0 AS INT),  
						           1 AS QUANTITY  ,''  AS PS_ID,ISNULL(A.BIN_ID,'') AS BIN_ID,BM.BIN_NAME ,''  PS_NO, ''  PS_DT,
							      CAST('' AS VARCHAR(50)) AS PID_ROW_ID ,A.MRP,'' AS AC_CODE,
								   a.product_code
						  FROM #SP_CHECKSTOCK0 A  
						  LEFT JOIN BIN BM (NOLOCK) ON A.BIN_ID= BM.BIN_ID 

                          SET @BENABLEBATCHCODE=1

						  SELECT TOP 1 @NMPR=MRP FROM #SP_CHECKSTOCK0
						  if exists (select top 1 'u' from #SP_CHECKSTOCK0 where mrp <>@NMPR)
						   set @bmultiplemrp=1
    

						END
					END
				END		
END


  
  IF ISNULL(@NAGAINSTPACKSLIP,0)=0
   BEGIN
     SET @CSTEP=18.2
     DECLARE @CAC_CODEFILTER VARCHAR(1000),@cmrpfilter varchar(1000)
      set @CAC_CODEFILTER=''
	  SET @CMRPFILTER=''

   IF @CHECK_SUPPLIER_DN=1
      SET @CAC_CODEFILTER=' AND A.AC_CODE='''+@CACCODE+''' '
    if @bmultiplemrp =1
	set @CMRPFILTER=' and b.MRP=C.MRP '



     -- AND A.AC_CODE =@CACCODE
       print 'Update purchase details-1:'+convert(varchar,getdate(),113)

    SET @CSTEP=18.6

	SET @CCMD=N'; ;WITH CTE AS  
	  (  
	  SELECT a.SHIPPING_FROM_AC_CODE, A.AC_CODE , C.ROW_ID, C.PRODUCT_CODE,A.MRR_ID , ISNULL(A.BILL_CHALLAN_MODE,0) BILL_CHALLAN_MODE,B.ROW_ID AS PID_ROW_ID,  
			 DBNAME=DB_NAME()+''.DBO.'',
			 SR=ROW_NUMBER () OVER (PARTITION BY C.PRODUCT_CODE,c.mrp ORDER BY  CASE WHEN A.AC_CODE ='''+@CACCODE+''' THEN 0 ELSE 1 END ,
			 CASE WHEN ISNULL(A.BILL_CHALLAN_MODE,0)='+RTRIM(LTRIM(STR(@NBILLCHALLANMODE)))+' THEN 0 ELSE 1 END, A.RECEIPT_DT DESC,
			 A.LAST_UPDATE DESC),C.MRP
	  FROM PIM01106 A(NOLOCK)    
	  JOIN PID01106 B(NOLOCK) ON A.MRR_ID=B.MRR_ID   
	  JOIN #TMPPURDETAILS C ON  C.PRODUCT_CODE=LEFT(B.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX (''@'',B.PRODUCT_CODE)-1,-1),LEN(B.PRODUCT_CODE )))
	  '+@CMRPFILTER+'
	  WHERE A.INV_MODE='+rtrim(ltrim(str(@ninv_mode)))+' AND A.CANCELLED=0 AND A.DEPT_ID ='''+@CLOC_ID +'''
	  AND CHARINDEX(''@'',C.PRODUCT_CODE)=0 '
	  +@CAC_CODEFILTER+'
	  
	  )  
  
    
	   UPDATE B SET MRR_ID =C.MRR_ID ,DBNAME=C.DBNAME  ,BILL_CHALLAN_MODE =C.BILL_CHALLAN_MODE ,PID_ROW_ID=C.PID_ROW_ID ,ac_code=C.ac_code ,
	               shipping_ac_code=C.SHIPPING_FROM_AC_CODE
	   FROM #TMPPURDETAILS B  
	   JOIN CTE C ON B.PRODUCT_CODE =C.PRODUCT_CODE    '+@CMRPFILTER+'
	   and ('''+@CSHIPPINGAc_CODE+'''='''' or C.SHIPPING_FROM_AC_CODE='''+@CSHIPPINGAc_CODE+''')
	   WHERE C.SR=1 '

	  print @cCmd   
	 EXEC SP_EXECUTESQL @cCmd


   END

   SET @CSTEP=19.5

	print 'Update purchase details-2:'+convert(varchar,getdate(),113)
  
	   ;WITH CTE AS  
	  (  
	  SELECT a.SHIPPING_FROM_AC_CODE, A.AC_CODE , C.ROW_ID, C.PRODUCT_CODE,A.MRR_ID , ISNULL(A.BILL_CHALLAN_MODE,0) BILL_CHALLAN_MODE,B.ROW_ID AS PID_ROW_ID,  
			 DBNAME=DB_NAME()+'.DBO.',
			 SR=ROW_NUMBER () OVER (PARTITION BY C.PRODUCT_CODE ORDER BY  CASE WHEN A.AC_CODE =@CACCODE THEN 0 ELSE 1 END,
			 CASE WHEN ISNULL(A.BILL_CHALLAN_MODE,0)=@NBILLCHALLANMODE THEN 0 ELSE 1 END,
			 A.RECEIPT_DT DESC ,A.LAST_UPDATE DESC)
	  FROM PIM01106 A(NOLOCK)    
	  JOIN PID01106 B(NOLOCK) ON A.MRR_ID=B.MRR_ID   
	  JOIN #TMPPURDETAILS C ON  c.PRODUCT_CODE=B.PRODUCT_CODE
	  WHERE A.INV_MODE=@NINV_MODE AND A.CANCELLED=0 AND A.DEPT_ID =@CLOC_ID 
	  AND ISNULL(C.PID_ROW_ID,'')=''
	 -- and ISNULL(A.BILL_CHALLAN_MODE,0)=@nBillChallanMode
	  )  
  
	    
	   UPDATE A SET MRR_ID =B.MRR_ID ,DBNAME=B.DBNAME  ,BILL_CHALLAN_MODE =B.BILL_CHALLAN_MODE ,PID_ROW_ID=B.PID_ROW_ID  ,ac_code=b.ac_code,
	          shipping_ac_code=b.SHIPPING_FROM_AC_CODE
	   FROM #TMPPURDETAILS A  
	   JOIN CTE B ON A.PRODUCT_CODE =B.PRODUCT_CODE   AND ((@CHECK_SUPPLIER_DN ='1' AND b.AC_CODE=@CACCODE ) OR ISNULL(@CHECK_SUPPLIER_DN,'')<>'1')
	   and (@CSHIPPINGAc_CODE='' or b.SHIPPING_FROM_AC_CODE=@CSHIPPINGAc_CODE)
	   WHERE B.SR=1 

 
     print 'Update purchase details-3:'+convert(varchar,getdate(),113)
  
 
	
  print 'check pur details-4:'+convert(varchar,getdate(),113)
--  select 'check purdetails', * from #TMPPURDETAILS
  SET @CSTEP=30  
    
  IF EXISTS (SELECT TOP 1 'U' FROM #TMPPURDETAILS WHERE ISNULL(MRR_ID,'')='')  
  BEGIN  
	  set @CSTEP=40  
	  DECLARE @dPrevDate DATETIME,@cCutOffdate VARCHAR(15),@bFound BIT  
	  select top 1 @cCutOffdate=value FROM config WHERE config_option='NEW_DATA_ARCHIVING_DATE'  
	  IF ISNULL(@cCutOffdate,'')<>''  
	  BEGIN  
		   set @CSTEP=50  
		   set @dPrevDate=CONVERT(DATE,@cCutOffdate)  
		   SET @dPrevDate=DATEADD(DD,-1,@dPrevDate)  
     
		   SET @bFound=1  
		   WHILE @bFound=1  
		   BEGIN  
				set @CSTEP=60  
      
				SET @cPrevDbName=DB_NAME()+'_01'+DBO.FN_GETFINYEAR(@dPrevDate)  
      
				IF DB_ID(@cPrevDbName) IS NULL  
				 BREAK  
      
				SET @cPrevDbName=@cPrevDbName+'.dbo.'   
      
				set @CSTEP=70   

				-- and ISNULL(A.BILL_CHALLAN_MODE,0)='+rtrim(ltrim(str(@nBillChallanMode)))+'
				 
			   IF ISNULL(@NAGAINSTPACKSLIP,0)=0
			   BEGIN
			       	SET @CCMD=N';WITH CTE AS  
				( SELECT a.SHIPPING_FROM_AC_CODE,A.AC_CODE, c.PRODUCT_CODE,A.MRR_ID ,   
						  ISNULL(A.BILL_CHALLAN_MODE,0) AS BILL_CHALLAN_MODE,B.ROW_ID AS PID_ROW_ID,  
					 SR=ROW_NUMBER () OVER (PARTITION BY C.PRODUCT_CODE ORDER BY CASE WHEN A.AC_CODE ='''+@CACCODE+''' THEN 0 ELSE 1 END , 
					 CASE WHEN ISNULL(A.BILL_CHALLAN_MODE,0)='+RTRIM(LTRIM(STR(@NBILLCHALLANMODE)))+' THEN 0 ELSE 1 END,
					 a.RECEIPT_DT DESC ,a.LAST_UPDATE DESC)
				 FROM '+@cPrevDbName+'PIM01106 A(NOLOCK)    
				 JOIN '+@cPrevDbName+'PID01106 B(NOLOCK) ON A.MRR_ID=B.MRR_ID   
				 JOIN #TMPPURDETAILS C ON  C.PRODUCT_CODE=LEFT(B.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX (''@'',B.PRODUCT_CODE)-1,-1),LEN(B.PRODUCT_CODE )))
				 WHERE A.INV_MODE='+rtrim(ltrim(str(@ninv_mode)))+' AND A.CANCELLED=0   
				 AND ISNULL(C.MRR_ID,'''')='''' AND ( A.DEPT_ID='''+@CLOC_ID+''')  
				 AND CHARINDEX(''@'',C.PRODUCT_CODE)=0
				

				 )  
				  UPDATE A SET MRR_ID =B.mrr_id ,DbNAME='''+@cPrevDbName+'''  ,BILL_CHALLAN_MODE =B.BILL_CHALLAN_MODE ,PID_ROW_ID=B.PID_ROW_ID ,ac_code=b.ac_code ,
				               shipping_ac_code=b.SHIPPING_FROM_AC_CODE
				  FROM #TMPPURDETAILS A  
				  JOIN CTE B ON A.PRODUCT_CODE =B.product_code   and (('''+rtrim(ltrim(str(@CHECK_SUPPLIER_DN)))+''' =''1'' and b.AC_CODE='''+@CACCODE+''' ) or '''+rtrim(ltrim(str(@CHECK_SUPPLIER_DN)))+'''<>''1'')
				  WHERE  ISNULL(a.MRR_ID,'''')=''''  
				  and ('''+rtrim(ltrim(@CSHIPPINGAc_CODE))+'''='''' or b.SHIPPING_FROM_AC_CODE='''+@CSHIPPINGAc_CODE+''')
				 '      
				 print @cCmd   
				 EXEC SP_EXECUTESQL @cCmd

			   END

              set @CSTEP=75
				SET @CCMD=N';WITH CTE AS  
				( SELECT a.SHIPPING_FROM_AC_CODE, A.AC_CODE, c.PRODUCT_CODE,A.MRR_ID ,   
						  ISNULL(A.BILL_CHALLAN_MODE,0) AS BILL_CHALLAN_MODE,B.ROW_ID AS PID_ROW_ID,    
					 SR=ROW_NUMBER () OVER (PARTITION BY C.PRODUCT_CODE ORDER BY CASE WHEN A.AC_CODE ='''+@CACCODE+''' THEN 0 ELSE 1 END , 
					 CASE WHEN ISNULL(A.BILL_CHALLAN_MODE,0)='+RTRIM(LTRIM(STR(@NBILLCHALLANMODE)))+' THEN 0 ELSE 1 END,a.RECEIPT_DT DESC ,a.LAST_UPDATE DESC)
				 FROM '+@cPrevDbName+'PIM01106 A(NOLOCK)    
				 JOIN '+@cPrevDbName+'PID01106 B(NOLOCK) ON A.MRR_ID=B.MRR_ID   
				 JOIN #TMPPURDETAILS C ON B.product_code =C.PRODUCT_CODE
				 WHERE A.INV_MODE='+rtrim(ltrim(str(@ninv_mode)))+' AND A.CANCELLED=0   
				 AND ISNULL(C.MRR_ID,'''')='''' AND ( A.DEPT_ID='''+@CLOC_ID+''')  
				
   
				 )  
				  UPDATE A SET MRR_ID =B.mrr_id ,DbNAME='''+@cPrevDbName+'''  ,BILL_CHALLAN_MODE =B.BILL_CHALLAN_MODE,PID_ROW_ID=B.PID_ROW_ID ,ac_code=b.ac_code   ,
				               shipping_ac_code=b.SHIPPING_FROM_AC_CODE
				  FROM #TMPPURDETAILS A  
				  JOIN CTE B ON A.PRODUCT_CODE =B.product_code   and (('''+rtrim(ltrim(str(@CHECK_SUPPLIER_DN)))+''' =''1'' and b.AC_CODE='''+@CACCODE+''' ) or '''+rtrim(ltrim(str(@CHECK_SUPPLIER_DN)))+'''<>''1'')
				  WHERE  ISNULL(a.MRR_ID,'''')=''''  
				  and ('''+rtrim(ltrim(@CSHIPPINGAc_CODE))+'''='''' or b.SHIPPING_FROM_AC_CODE='''+@CSHIPPINGAc_CODE+''')
				 '      
				 print @cCmd   
				 EXEC SP_EXECUTESQL @cCmd

				 UPDATE  #TMPPURDETAILS SET DbNAME =DB_NAME ()+'.DBO.' WHERE DBNAME=''


	
				set @CSTEP=80  
				IF EXISTS (SELECT TOP 1'U' FROM #TMPPURDETAILS WHERE ISNULL(MRR_ID,'')<>'')  
				begin       
				 set @cDbName=@cPrevDbName  
				 break  
				end   
      
				SET @dPrevDate=DATEADD(YY,-1,@dPrevDate)  
		   END  
	 END
   END
  
 
 

  IF @BENABLEBATCHCODE=1 AND ISNULL(@CHECK_SUPPLIER_DN,'')='1'
  BEGIN
      
	  DELETE FROM #TMPPURDETAILS WHERE ac_code<>@CACCODE 
	  --and ISNULL(ac_code,'')<>''
	  

	  if @CSHIPPINGAc_CODE<>''
	     DELETE FROM #TMPPURDETAILS WHERE shipping_AC_CODE<>@CSHIPPINGAc_CODE 
	     --and ISNULL(shipping_AC_CODE,'')<>''
	     
	  
	  
	  IF NOT EXISTS(SELECT TOP 1'U' FROM #TMPPURDETAILS )
	  BEGIN
	    SET  @CERRORMSG='1. NO PURCHASE DETAILS FOUND FOR THE BARCODE AGAINST THE SELECTED SUPPLIER.TRY AGAINST OTHER SUPPLIERS.'    
	    RETURN
	  END
	
	  SELECT @NCNT=COUNT(*) FROM #TMPPURDETAILS
	  IF @NCNT=1
	     UPDATE #TMPPURDETAILS SET product_code =@CPRDCODE 

  END
  ELSE   IF @BENABLEBATCHCODE=1 
  BEGIN
  
     DELETE A FROM #TMPPURDETAILS A WHERE A.ROW_ID<>(SELECT TOP 1 B.ROW_ID FROM #TMPPURDETAILS B 
	 WHERE  A.BIN_ID=B.BIN_ID AND A.MRP=B.MRP  AND A.AC_CODE=B.AC_CODE order by b.mrr_id)
	 
	 SELECT @NCNT=COUNT(*) FROM #TMPPURDETAILS
	  IF @NCNT=1
	   UPDATE #TMPPURDETAILS SET PRODUCT_CODE =@CPRDCODE 

  END
  

  --check Purchase challn mode 

  IF EXISTS (SELECT TOP 1'U' FROM #TMPPURDETAILS WHERE MRR_ID <>'' AND BILL_CHALLAN_MODE<>@NBILLCHALLANMODE) and @ninv_mode=1
  BEGIN
        
		SET  @CERRORMSG='2. Purchase available on ' +CASE WHEN @NBILLCHALLANMODE=0 THEN 'challan' ELSE 'bill' END +' mode you can not make Debit note on ' +
		CASE WHEN @NBILLCHALLANMODE=1 THEN 'challan' ELSE 'bill' END+' mode'

		UPDATE A SET ERRMSG =@CERRORMSG,pur_bill_challan_mode=b.BILL_CHALLAN_MODE
		FROM PRT_ITEM_DETAILS A (NOLOCK)
		JOIN  #TMPPURDETAILS B ON a.ROW_ID =B.ROW_ID
	    WHERE A.SP_ID =@CSP_ID

	    RETURN

  END



  declare @cCmd1 nvarchar(max)

  
 while exists(select top 1'u' from #TMPPURDETAILS where ISNULL(mrr_id,'')<>'')   
 begin  
 
	   SELECT TOP 1 @CDBNAME=DBNAME FROM #TMPPURDETAILS  where ISNULL(mrr_id,'')<>''
  
		PRINT 'RETURN DETAILS FROM PURCHASE'    
 
		SET @cCmd=N';WITH CTE AS  
		(SELECT CAST(0 AS NUMERIC(10)) AS SRNO    
		, CAST(0 AS BIT) AS BILLCHECK    
		,a.row_id as pid_row_id
		,PIM.MRR_ID AS MRR_ID    
		,PIM.MRR_NO AS MRR_NO    
		,CONVERT(VARCHAR,PIM.INV_DT,105) AS INV_DT      
		, B.AC_NAME AS AC_NAME    
		,PIM.AC_CODE AS AC_CODE    
		, PIM.INV_NO AS CHALLAN_NO    
		, PIM.BILL_NO AS BILL_NO   
		, PIM.BILL_NO AS INV_NO    
		,PIM.INV_DT AS BILL_DT    
		,PIM.MEMO_TYPE AS MEMO_TYPE    
		, UOM.UOM_TYPE AS UOM_TYPE    
		, SM.SECTION_NAME AS SECTION_NAME    
		, SD.SUB_SECTION_NAME AS SUB_SECTION_NAME    
		, TMP.PRODUCT_CODE AS PRODUCT_CODE , A.MRP AS MRP    
		, A.ARTICLE_CODE AS ARTICLE_CODE,ART.ARTICLE_NO AS ARTICLE_NO , ART.ARTICLE_NAME AS ARTICLE_NAME , ART.ARTICLE_DESC AS ARTICLE_DESC    
		,P1.PARA1_NAME AS PARA1_NAME,P2.PARA2_NAME AS PARA2_NAME ,P3.PARA3_NAME AS PARA3_NAME,P4.PARA4_NAME AS PARA4_NAME    
		,P5.PARA5_NAME AS PARA5_NAME    
		,P6.PARA6_NAME AS PARA6_NAME    
		,UOM.UOM_CODE AS UOM_CODE    
		,UOM.UOM_NAME AS UOM_NAME     
		,ISNULL(PMT.QUANTITY_IN_STOCK,0) AS QUANTITY_IN_STOCK    
		,ISNULL(ART.DT_CREATED,'''') AS ART_DT_CREATED    
		,ISNULL(P3.DT_CREATED,'''') AS PARA3_DT_CREATED    
		,ISNULL(SKU.DT_CREATED,'''') AS SKU_DT_CREATED    
		,SKU.BARCODE_CODING_SCHEME AS CODING_SCHEME    
		,ART.DISCON AS DISCON    
		,TMP.QUANTITY AS QUANTITY    
		,(CASE WHEN PIM.BILL_LEVEL_TAX_METHOD = 1 THEN ''EXCLUSIVE'' ELSE ''INCLUSIVE'' END) AS TAX_METHOD_NAME     
		,PIM.BILL_LEVEL_TAX_METHOD AS BILL_LEVEL_TAX_METHOD    
		,ART.ALIAS AS ARTICLE_ALIAS    
		,BIN.BIN_NAME AS BIN_NAME,BIN.BIN_ID  AS BIN_ID    
		,ISNULL(pim_ch.terms,PIM.TERMS) AS TERMS    
		,ISNULL(PIM.CR_DISCOUNT_PERCENTAGE,0) pur_cd_percentage
		,A.CASHDISCOUNTAMOUNT AS CASHDISCOUNTRATE    
		,CONVERT(NUMERIC(10,2),0) AS FDN_RATE  
		,(CASE WHEN ISNULL(TMP.ROW_ID,'''')='''' THEN 
		 CAST(''LATER''+CAST(NEWID() AS VARCHAR(40)) AS VARCHAR(40)) ELSE tmp.row_id END) AS ROW_ID    
		,A.PRTAMOUNT,A.PRTAMOUNT_CREDITED  
		,A.FORM_ID AS ITEM_FORM_ID ,FM.FORM_NAME  
		,A.GROSS_PURCHASE_PRICE  
		,(a.xn_value_without_gst/(CASE ISNULL(A.INVOICE_QUANTITY,0) when 0 then 1 else a.invoice_quantity end)) pur_taxable_value
		,CONVERT(NUMERIC(7,3),0) AS DN_DISCOUNT_PERCENTAGE     --- ---- Dn_discount columns need not to be picked as these columns will be changed by User as per Anil statement (Sanjay:08-01-2021)
       
		,CONVERT(NUMERIC(10,2),0) AS DN_DISCOUNT_AMOUNT  '  
       
	SET @CCMD1=N',CONVERT(NUMERIC(10,2),(A.PURCHASE_PRICE-(A.PURCHASE_PRICE*PIM.DISCOUNT_PERCENTAGE/100))) AS PURCHASE_PRICE    
      
		,A.TAX_PERCENTAGE AS ITEM_TAX_PERCENTAGE  
      
		,CONVERT(NUMERIC(12,4),A.TAX_AMOUNT/CASE ISNULL(A.INVOICE_QUANTITY,0) WHEN 0 THEN 1 ELSE A.INVOICE_QUANTITY END) AS ITEM_TAX_AMOUNT  
      
		 ,CONVERT(NUMERIC(6,2),(CASE WHEN ISNULL(A.ITEM_EXCISE_DUTY_PERCENTAGE,0)<>0 THEN A.ITEM_EXCISE_DUTY_PERCENTAGE    
				 ELSE CASE WHEN ISNULL(PIM.SUBTOTAL,0) <> 0 THEN  
					  (PIM.EXCISE_DUTY_AMOUNT/CASE (PIM.SUBTOTAL-PIM.DISCOUNT_AMOUNT) WHEN 0 THEN 1 ELSE (PIM.SUBTOTAL-PIM.DISCOUNT_AMOUNT) END)*100   
				 ELSE 0 END  
				 END)) AS ITEM_EXCISE_DUTY_PERCENTAGE     
             
				,CONVERT(NUMERIC(10,2),(CASE WHEN ISNULL(A.ITEM_EXCISE_DUTY_PERCENTAGE,0)<>0 THEN A.ITEM_EXCISE_DUTY_AMOUNT/CASE ISNULL(A.INVOICE_QUANTITY,0) WHEN 0 THEN 1 ELSE ISNULL(A.INVOICE_QUANTITY,0) END    
				 ELSE CASE WHEN ISNULL(A.PURCHASE_PRICE,0) <> 0 THEN  
				 (PIM.EXCISE_DUTY_AMOUNT/CASE (PIM.SUBTOTAL-PIM.DISCOUNT_AMOUNT) WHEN 0 THEN 1 ELSE (PIM.SUBTOTAL-PIM.DISCOUNT_AMOUNT) END)*A.PURCHASE_PRICE*A.INVOICE_QUANTITY   
				 ELSE 0 END  
				 END)) AS EXCISE_DUTY_AMOUNT    
		,A.FORM_ID AS PUR_FORM_ID  
		,FM.FORM_NAME AS PUR_FORM_NAME  
		,A.GROSS_PURCHASE_PRICE AS PUR_GROSS_PURCHASE_PRICE  
		,CONVERT(NUMERIC(10,2),CASE WHEN '''+RTRIM(LTRIM(STR(@ninv_mode)))+'''=''2'' THEN (ISNULL(A.discount_amount,0)+ISNULL(A.PIMDiscountAmount,0))/A.QUANTITY  
		  ELSE SO.DISCOUNT_AMOUNT END ) AS PUR_DISCOUNT_AMOUNT   
		,(CASE WHEN  a.gross_purchase_price=0 THEN 0 ELSE ((CONVERT(NUMERIC(10,2),
		CASE WHEN '''+RTRIM(LTRIM(STR(@ninv_mode)))+'''=''2'' THEN (ISNULL(A.discount_amount,0)+ISNULL(A.PIMDiscountAmount,0))/A.QUANTITY  
		  ELSE SO.DISCOUNT_AMOUNT END
		)* 100)/ a.gross_purchase_price) END) AS PUR_DISCOUNT_PERCENTAGE

		,CONVERT(NUMERIC(10,2),(a.xn_value_without_gst/(CASE ISNULL(A.INVOICE_QUANTITY,0) when 0 then 1 else a.invoice_quantity end))) AS PUR_PURCHASE_PRICE    
      
		,A.TAX_PERCENTAGE+A.GST_PERCENTAGE AS PUR_TAX_PERCENTAGE  
      
		,CONVERT(NUMERIC(12,4),(CASE WHEN a.tax_amount<>0 THEN A.TAX_AMOUNT ELSE a.igst_amount+a.cgst_amount+a.sgst_amount END)/
			  (CASE ISNULL(A.INVOICE_QUANTITY,0) WHEN 0 THEN 1 ELSE ISNULL(A.INVOICE_QUANTITY,0) END))
				AS PUR_TAX_AMOUNT

	   ,CONVERT(NUMERIC(6,2),(CASE WHEN ISNULL(A.ITEM_EXCISE_DUTY_PERCENTAGE,0)<>0 THEN A.ITEM_EXCISE_DUTY_PERCENTAGE    
			 ELSE CASE WHEN ISNULL(PIM.SUBTOTAL,0) <> 0 THEN  
			 (PIM.EXCISE_DUTY_AMOUNT/CASE (PIM.SUBTOTAL-PIM.DISCOUNT_AMOUNT) WHEN 0 THEN 1 ELSE (PIM.SUBTOTAL-PIM.DISCOUNT_AMOUNT) END)*100   
			 ELSE 0 END  
			 END)) AS PUR_EXCISE_DUTY_RATE     
          
			,CONVERT(NUMERIC(10,2),  
				  (CASE WHEN ISNULL(A.ITEM_EXCISE_DUTY_PERCENTAGE,0)<>0 THEN A.ITEM_EXCISE_DUTY_AMOUNT/CASE ISNULL(A.INVOICE_QUANTITY,0) WHEN 0 THEN 1 ELSE (PIM.SUBTOTAL-PIM.DISCOUNT_AMOUNT) END    
			 ELSE  CASE WHEN ISNULL(A.PURCHASE_PRICE,0)<> 0 THEN 
				 (PIM.EXCISE_DUTY_AMOUNT/CASE (PIM.SUBTOTAL-PIM.DISCOUNT_AMOUNT) WHEN 0 THEN 1 ELSE (PIM.SUBTOTAL-PIM.DISCOUNT_AMOUNT) END)*A.PURCHASE_PRICE*A.INVOICE_QUANTITY   
				  ELSE 0 END  
			 END  
				  )) AS PUR_EXCISE_DUTY_AMOUNT,    
		 ISNULL(PMT.QUANTITY_IN_STOCK,0) AS PMT_STOCK,  
		SR=ROW_NUMBER() OVER (PARTITION BY TMP.ROW_ID ORDER BY PIM.RECEIPT_DT DESC ,PIM.LAST_UPDATE DESC) ,
		TMP.PS_ID ,TMP.PS_NO,TMP.PS_DT,pim.bill_challan_mode pur_bill_challan_mode,SKU.ER_FLAG,SKU.WS_PRICE,sku.EXPIRY_DT,SKU.BATCH_NO,ART.PERISHABLE,ART.STOCK_NA,
		TMP.SHIPPING_AC_CODE,TMP.PRODUCT_CODE as batch_product_code
		 FROM '+@cDbName+'PIM01106 PIM(NOLOCK)     
		JOIN '+@cDbName+'PID01106 A(NOLOCK) ON PIM.MRR_ID=A.MRR_ID    
		LEFT JOIN '+@cDbName+'PIM01106 PIM_CH(NOLOCK) ON pim_ch.mrr_id=a.ref_mrr_id
		join #TMPPURDETAILS tmp on tmp.mrr_id=a.mrr_id AND  A.ROW_ID =TMP.PID_ROW_ID
		JOIN  '+@cDbName+'SKU (NOLOCK) ON A.PRODUCT_CODE=SKU.PRODUCT_CODE   
		LEFT  JOIN '+@cDbName+'LM01106 B(NOLOCK) ON PIM.AC_CODE=B.AC_CODE    
		JOIN  '+@cDbName+'ARTICLE ART(NOLOCK) ON SKU.ARTICLE_CODE=ART.ARTICLE_CODE    
		JOIN  '+@cDbName+'PARA1 P1(NOLOCK) ON SKU.PARA1_CODE=P1.PARA1_CODE    
		JOIN  '+@cDbName+'PARA2 P2(NOLOCK) ON SKU.PARA2_CODE=P2.PARA2_CODE     
		JOIN  '+@cDbName+'PARA3 P3(NOLOCK) ON SKU.PARA3_CODE=P3.PARA3_CODE     
		JOIN  '+@cDbName+'PARA4 P4(NOLOCK) ON SKU.PARA4_CODE=P4.PARA4_CODE     
		JOIN  '+@cDbName+'PARA5 P5(NOLOCK) ON SKU.PARA5_CODE=P5.PARA5_CODE     
		JOIN  '+@cDbName+'PARA6 P6(NOLOCK) ON SKU.PARA6_CODE=P6.PARA6_CODE     
		JOIN  '+@cDbName+'UOM (NOLOCK) ON ART.UOM_CODE=UOM.UOM_CODE    
		JOIN  '+@cDbName+'SECTIOND SD(NOLOCK) ON ART.SUB_SECTION_CODE=SD.SUB_SECTION_CODE    
		JOIN  '+@cDbName+'SECTIONM SM(NOLOCK) ON SD.SECTION_CODE=SM.SECTION_CODE    
		LEFT  JOIN '+@cDbName+'SKU_OH SO(NOLOCK) ON A.PRODUCT_CODE=SO.PRODUCT_CODE    
		left JOIN  '+@cDbName+'FORM FM(NOLOCK) ON A.FORM_ID=FM.FORM_ID    
		JOIN  '+@cDbName+'BIN(NOLOCK) ON BIN.BIN_ID  =CASE WHEN ISNULL(TMP.BIN_ID,'''')<>''''  THEN TMP.BIN_ID ELSE pim.BIN_ID END  
		LEFT JOIN  PMT01106 PMT ON PMT.PRODUCT_CODE =A.PRODUCT_CODE  and pmt.DEPT_ID =pim.DEPT_ID and pmt.BIN_ID =pim.BIN_ID   
		 WHERE    PIM.CANCELLED=0 
		AND PIM.INV_MODE='+rtrim(ltrim(str(@ninv_mode))) +'  
	   )   
     
	   SELECT SRNO,pid_row_id,BILLCHECK,MRR_ID,MRR_NO,INV_DT,AC_NAME,AC_CODE,CHALLAN_NO,BILL_NO,INV_NO,BILL_DT,  
	  MEMO_TYPE,UOM_TYPE,SECTION_NAME,SUB_SECTION_NAME,PRODUCT_CODE,MRP,ARTICLE_CODE,ARTICLE_NO,ARTICLE_NAME,ARTICLE_DESC,PARA1_NAME,PARA2_NAME,PARA3_NAME,PARA4_NAME,PARA5_NAME,PARA6_NAME,UOM_CODE,UOM_NAME,  
	  QUANTITY_IN_STOCK,ART_DT_CREATED,PARA3_DT_CREATED,SKU_DT_CREATED,CODING_SCHEME,DISCON,  
	  QUANTITY,QUANTITY,TAX_METHOD_NAME,BILL_LEVEL_TAX_METHOD,ARTICLE_ALIAS,BIN_NAME,BIN_ID,TERMS,
	  pur_cd_percentage,CASHDISCOUNTRATE,FDN_RATE,  
	  ROW_ID ,PRTAMOUNT,PRTAMOUNT_CREDITED,ITEM_FORM_ID,FORM_NAME,GROSS_PURCHASE_PRICE,DN_DISCOUNT_PERCENTAGE,DN_DISCOUNT_AMOUNT,PURCHASE_PRICE,ITEM_TAX_PERCENTAGE,ITEM_TAX_AMOUNT,
	  ITEM_EXCISE_DUTY_PERCENTAGE,ISNULL(EXCISE_DUTY_AMOUNT,0) AS EXCISE_DUTY_AMOUNT,PUR_FORM_ID,PUR_FORM_NAME,PUR_GROSS_PURCHASE_PRICE,PUR_DISCOUNT_AMOUNT,PUR_DISCOUNT_PERCENTAGE,PUR_PURCHASE_PRICE,PUR_TAX_PERCENTAGE,
	  PUR_TAX_AMOUNT,PUR_EXCISE_DUTY_RATE,PUR_EXCISE_DUTY_AMOUNT,PMT_STOCK,  
	  '''+@CSP_ID+''' AS SP_ID  ,PS_ID,
	   PS_NO,PS_DT,pur_taxable_value,(PURCHASE_PRICE*quantity) as Amount,pur_bill_challan_mode,ER_FLAG,WS_PRICE,
	   '''+@CLOC_ID+''' AS DEPT_ID,0 AS tax_percentage,PUR_FORM_ID FORM_ID,EXPIRY_DT,BATCH_NO,PERISHABLE,
	   STOCK_NA,SHIPPING_AC_CODE,batch_product_code 
	   FROM CTE WHERE SR=1 '  
	      
	   SET @CSTEP=150  
	   PRINT @CCMD+@CCMD1  
      	set @CCMD=@CCMD+@CCMD1
	  INSERT INTO PRT_ITEM_DETAILS ( SRNO,pid_row_id,BILLCHECK,MRR_ID,MRR_NO,INV_DT,AC_NAME,AC_CODE,CHALLAN_NO,BILL_NO,INV_NO,BILL_DT,  
	  MEMO_TYPE,UOM_TYPE,SECTION_NAME,SUB_SECTION_NAME,PRODUCT_CODE,MRP,ARTICLE_CODE,ARTICLE_NO,ARTICLE_NAME,ARTICLE_DESC,PARA1_NAME,PARA2_NAME,PARA3_NAME,PARA4_NAME,PARA5_NAME,PARA6_NAME,UOM_CODE,UOM_NAME,  
	  QUANTITY_IN_STOCK,ART_DT_CREATED,PARA3_DT_CREATED,SKU_DT_CREATED,CODING_SCHEME,DISCON,  
	  QUANTITY,INVOICE_QUANTITY,TAX_METHOD_NAME,BILL_LEVEL_TAX_METHOD,ARTICLE_ALIAS,BIN_NAME,BIN_ID,TERMS,pur_cd_percentage,CASHDISCOUNTRATE,FDN_RATE,  
	  ROW_ID ,PRTAMOUNT,PRTAMOUNT_CREDITED,ITEM_FORM_ID,FORM_NAME,GROSS_PURCHASE_PRICE,DN_DISCOUNT_PERCENTAGE,DN_DISCOUNT_AMOUNT,PURCHASE_PRICE,ITEM_TAX_PERCENTAGE,ITEM_TAX_AMOUNT,
	  ITEM_EXCISE_DUTY_PERCENTAGE,EXCISE_DUTY_AMOUNT,PUR_FORM_ID,PUR_FORM_NAME,PUR_GROSS_PURCHASE_PRICE,PUR_DISCOUNT_AMOUNT,PUR_DISCOUNT_PERCENTAGE,PUR_PURCHASE_PRICE,PUR_TAX_PERCENTAGE,
	  PUR_TAX_AMOUNT,PUR_EXCISE_DUTY_RATE,PUR_EXCISE_DUTY_AMOUNT,PMT_STOCK,SP_ID,PS_id,PS_NO,PS_DT,pur_taxable_value,Amount,pur_bill_challan_mode,ER_FLAG,WS_PRICE,DEPT_ID,tax_percentage,FORM_ID,EXPIRY_DT,
	  BATCH_NO,PERISHABLE,STOCK_NA,SHIPPING_AC_CODE,batch_product_code)  
		
		
	
	   EXEC SP_EXECUTESQL @CCMD  
  

	   DELETE FROM #TMPPURDETAILS WHERE ISNULL(MRR_ID,'')<>'' AND DBNAME =@CDBNAME  
    
  END  
  
  
 -- if @@spid=176
	--select 'check #TMPPURDETAILS',* from #TMPPURDETAILS

  IF exists(select top 1'u' from #TMPPURDETAILS where ISNULL(mrr_id,'')='')   
  BEGIN
    
  IF @ninv_mode=1
  BEGIN

    PRINT 'RETURN DETAILS FROM sku party'    

		SET @cCmd=N'   
		SELECT  CAST(0 AS NUMERIC(10)) AS SRNO    
		 , CAST(0 AS BIT) AS BILLCHECK   ,'''' AS MRR_ID   ,'''' AS MRR_NO    
		 ,CONVERT(VARCHAR,A.INV_DT,105) AS INV_DT  
		 , B.AC_NAME AS AC_NAME ,A.AC_CODE AS AC_CODE    
		 ,A.INV_NO AS CHALLAN_NO  ,A.INV_NO AS BILL_NO  
		 ,A.INV_NO AS INV_NO   ,A.INV_DT AS BILL_DT ,A.ER_FLAG AS MEMO_TYPE    
		 , UOM.UOM_TYPE AS UOM_TYPE  , SM.SECTION_NAME AS SECTION_NAME    
		 , SD.SUB_SECTION_NAME AS SUB_SECTION_NAME  , tmp.PRODUCT_CODE  , A.MRP AS MRP    
		 , A.ARTICLE_CODE,ART.ARTICLE_NO  , ART.ARTICLE_NAME , ART.ARTICLE_DESC  
		 ,P1.PARA1_NAME ,P2.PARA2_NAME  ,P3.PARA3_NAME ,P4.PARA4_NAME ,P5.PARA5_NAME,P6.PARA6_NAME  
		 ,UOM.UOM_CODE ,UOM.UOM_NAME  ,0 AS QUANTITY_IN_STOCK    
		 ,ISNULL(ART.DT_CREATED,'''') AS ART_DT_CREATED    
		 ,ISNULL(P3.DT_CREATED,'''') AS PARA3_DT_CREATED    
		 ,ISNULL(A.DT_CREATED,'''') AS SKU_DT_CREATED    
		 ,A.BARCODE_CODING_SCHEME AS CODING_SCHEME    
		 ,ART.DISCON AS DISCON   ,TMP.QUANTITY AS QUANTITY    
		 ,TMP.QUANTITY AS INVOICE_QUANTITY  
		 ,''EXCLUSIVE'' AS TAX_METHOD_NAME     
	   ,1 AS BILL_LEVEL_TAX_METHOD  ,ART.ALIAS AS ARTICLE_ALIAS    
	   ,bin.bin_name AS BIN_NAME ,bin.bin_id AS BIN_ID   ,'''' AS TERMS    
	   ,0 AS CASHDISCOUNTRATE  ,0 AS FDN_RATE  
		,(CASE WHEN ISNULL(TMP.ROW_ID,'''')='''' THEN 
		 CAST(''LATER''+CAST(NEWID() AS VARCHAR(40)) AS VARCHAR(40)) ELSE tmp.row_id END) AS ROW_ID    
	   ,0 AS PRT_AMOUNT ,0 PRT_AMOUNT_CREDITED ,A.FORM_ID AS ITEM_FORM_ID ,FM.FORM_NAME  
		,(A.PURCHASE_PRICE) AS GROSS_PURCHASE_PRICE  
		,(A.PURCHASE_PRICE) AS pur_taxable_value
		  ,0  AS DN_DISCOUNT_PERCENTAGE      ---- Dn_discount columns need not to be picked as these columns will be changed by User as per Anil statement (Sanjay:08-01-2021)
	   ,0 AS DN_DISCOUNT_AMOUNT    
	   ,A.PURCHASE_PRICE  
	   ,0 AS ITEM_TAX_PERCENTAGE ,0 AS ITEM_TAX_AMOUNT ,0 AS EXCISE_DUTY_RATE ,0 AS EXCISE_DUTY_AMOUNT  
	   ,''0000000'' AS PUR_FORM_ID   
	   ,'''' AS PUR_FORM_NAME  
	  ,CASE WHEN ISNULL(A.BASIC_PURCHASE_PRICE,0)=0 THEN 
	    ISNULL(a.purchase_price,0)+ISNULL(SO.DISCOUNT_AMOUNT,0) ELSE A.BASIC_PURCHASE_PRICE END
	   AS PUR_GROSS_PURCHASE_PRICE  
	  ,SO.DISCOUNT_AMOUNT AS PUR_DISCOUNT_AMOUNT  
	  ,(CASE WHEN  a.basic_purchase_price=0 THEN 0 ELSE ((CONVERT(NUMERIC(10,2),SO.DISCOUNT_AMOUNT)* 100)/ 
			a.basic_purchase_price) END) AS PUR_DISCOUNT_PERCENTAGE
		,a.purchase_price AS PUR_PURCHASE_PRICE    
	   ,0 AS PUR_TAX_PERCENTAGE ,0 AS PUR_TAX_AMOUNT,0 AS PUR_EXCISE_DUTY_RATE ,0 AS PUR_EXCISE_DUTY_AMOUNT ,0 AS PMT_STOCK  
	   ,'''+@CSP_ID+''' AS SP_ID  ,
	   tmp.ps_id ,
	   TMP.PS_NO,TMP.PS_DT,(a.PURCHASE_PRICE*TMP.QUANTITY) as Amount,0 pur_bill_challan_mode,A.ER_FLAG,A.WS_PRICE
	   ,  '''+@CLOC_ID+''' AS DEPT_ID,0 AS tax_percentage,A.FORM_ID FORM_ID,a.EXPIRY_DT,a.BATCH_NO,ART.PERISHABLE,ART.STOCK_NA,
	   a.SHIPPING_FROM_AC_CODE,tmp.PRODUCT_CODE as batch_product_code
	   FROM SKU A(NOLOCK)    
	   join #TMPPURDETAILS tmp on a.product_code =ISNULL(NULLIF(TMP.STOCK_PRODUCT_CODE,''''),TMP.PRODUCT_CODE)
	   LEFT JOIN LM01106 B(NOLOCK) ON A.AC_CODE=B.AC_CODE    
	   JOIN ARTICLE ART(NOLOCK) ON A.ARTICLE_CODE=ART.ARTICLE_CODE    
	   JOIN PARA1 P1(NOLOCK) ON A.PARA1_CODE=P1.PARA1_CODE    
	   JOIN PARA2 P2(NOLOCK) ON A.PARA2_CODE=P2.PARA2_CODE     
	   JOIN PARA3 P3(NOLOCK) ON A.PARA3_CODE=P3.PARA3_CODE     
	   JOIN PARA4 P4(NOLOCK) ON A.PARA4_CODE=P4.PARA4_CODE     
	   JOIN PARA5 P5(NOLOCK) ON A.PARA5_CODE=P5.PARA5_CODE     
	   JOIN PARA6 P6(NOLOCK) ON A.PARA6_CODE=P6.PARA6_CODE     
	   JOIN UOM (NOLOCK) ON ART.UOM_CODE=UOM.UOM_CODE    
	   JOIN SECTIOND SD(NOLOCK) ON ART.SUB_SECTION_CODE=SD.SUB_SECTION_CODE    
	   JOIN SECTIONM SM(NOLOCK) ON SD.SECTION_CODE=SM.SECTION_CODE    
	   LEFT JOIN SKU_OH SO(NOLOCK) ON A.PRODUCT_CODE=SO.PRODUCT_CODE    
	   left JOIN FORM FM(NOLOCK) ON A.FORM_ID=FM.FORM_ID    
	   JOIN BIN(NOLOCK) ON BIN.BIN_ID  =CASE WHEN ISNULL(TMP.BIN_ID,'''')<>'''' THEN TMP.BIN_ID ELSE ''000'' END  
	   '  

	   END
	   ELSE 
	   BEGIN
	      PRINT 'RETURN DETAILS FROM sku group'    

		   ;with cte as
			(
			SELECT A.PRODUCT_CODE ,GROUP_INV_NO,GROUP_INV_dt,dept_id,xfer_price_igst_amount,
			xfer_price_cgst_amount,
			xfer_price_sgst_amount,
			SR=ROW_NUMBER() OVER(PARTITION BY A.PRODUCT_CODE ORDER BY CASE WHEN A.PRODUCT_CODE=B.PRODUCT_CODE THEN 0 ELSE 1 END , B.RECEIPT_DT DESC )
			FROM #TMPPURDETAILS A
			JOIN SKU_XFP B ON LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE )))
			=LEFT(B.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',B.PRODUCT_CODE)-1,-1),LEN(B.PRODUCT_CODE )))
			WHERE b.dept_id=@CLOC_ID AND ISNULL(GROUP_INV_NO,'')<>''
			)

	     select * into #tmpskuxfp from cte where sr=1

		 SET @cCmd=N' SELECT   CAST(0 AS NUMERIC(10)) AS SRNO , CAST(0 AS BIT) AS BILLCHECK   ,'''' AS MRR_ID    ,'''' AS MRR_NO    
		 ,CONVERT(VARCHAR,XFP.group_inv_dt,105) AS INV_DT, B.AC_NAME AS AC_NAME  ,A.AC_CODE AS AC_CODE    
		 ,isnull(XFP.group_inv_no,'''') AS CHALLAN_NO ,isnull(XFP.group_inv_no,'''') AS BILL_NO,isnull(XFP.group_inv_no,'''') AS INV_NO    
		 ,isnull(XFP.group_inv_dt,'''') AS BILL_DT ,A.ER_FLAG AS MEMO_TYPE  , UOM.UOM_TYPE AS UOM_TYPE  , SM.SECTION_NAME AS SECTION_NAME    
		 , SD.SUB_SECTION_NAME AS SUB_SECTION_NAME , tmp.PRODUCT_CODE , A.MRP AS MRP  , A.ARTICLE_CODE,ART.ARTICLE_NO , ART.ARTICLE_NAME , ART.ARTICLE_DESC  
		 ,P1.PARA1_NAME ,P2.PARA2_NAME ,P3.PARA3_NAME,P4.PARA4_NAME ,P5.PARA5_NAME ,P6.PARA6_NAME  ,UOM.UOM_CODE,UOM.UOM_NAME  ,0 AS QUANTITY_IN_STOCK    
		 ,ISNULL(ART.DT_CREATED,'''') AS ART_DT_CREATED   ,ISNULL(P3.DT_CREATED,'''') AS PARA3_DT_CREATED  ,ISNULL(A.DT_CREATED,'''') AS SKU_DT_CREATED    
		 ,A.BARCODE_CODING_SCHEME AS CODING_SCHEME ,ART.DISCON AS DISCON  ,TMP.QUANTITY AS QUANTITY  ,TMP.QUANTITY AS INVOICE_QUANTITY  
		 ,''EXCLUSIVE'' AS TAX_METHOD_NAME  ,1 AS BILL_LEVEL_TAX_METHOD   ,ART.ALIAS AS ARTICLE_ALIAS    
	     ,bin.bin_name AS BIN_NAME ,bin.bin_id AS BIN_ID  ,'''' AS TERMS  ,0 AS CASHDISCOUNTRATE  ,0 AS FDN_RATE  ,(CASE WHEN ISNULL(TMP.ROW_ID,'''')='''' THEN 
		 CAST(''LATER''+CAST(NEWID() AS VARCHAR(40)) AS VARCHAR(40)) ELSE tmp.row_id END) AS ROW_ID    ,0 AS PRT_AMOUNT  ,0 PRT_AMOUNT_CREDITED ,A.FORM_ID AS ITEM_FORM_ID  ,FM.FORM_NAME  
		,CAST(0 AS NUMERIC(14,2)) AS GROSS_PURCHASE_PRICE ,CAST(0 AS NUMERIC(14,2)) AS pur_taxable_value
		,0  AS DN_DISCOUNT_PERCENTAGE      ---- Dn_discount columns need not to be picked as these columns will be changed by User as per Anil statement (Sanjay:08-01-2021)
		,0 AS DN_DISCOUNT_AMOUNT ,A.PURCHASE_PRICE ,0 AS ITEM_TAX_PERCENTAGE  ,0 AS ITEM_TAX_AMOUNT ,0 AS EXCISE_DUTY_RATE ,0 AS EXCISE_DUTY_AMOUNT  ,''0000000'' AS PUR_FORM_ID   ,'''' AS PUR_FORM_NAME  
	  ,CAST(0 AS NUMERIC(14,2)) AS PUR_GROSS_PURCHASE_PRICE  ,CAST(0 AS NUMERIC(14,2)) AS PUR_DISCOUNT_AMOUNT  
	  ,CAST(0 AS NUMERIC(14,2)) AS PUR_DISCOUNT_PERCENTAGE,CAST(0 AS NUMERIC(14,2)) AS PUR_PURCHASE_PRICE  ,0 AS PUR_TAX_PERCENTAGE  
	   ,isnull(xfp.xfer_price_igst_amount,0)+isnull(xfp.xfer_price_cgst_amount,0)+isnull(xfp.xfer_price_sgst_amount,0) AS PUR_TAX_AMOUNT  
	   ,0 AS PUR_EXCISE_DUTY_RATE  ,0 AS PUR_EXCISE_DUTY_AMOUNT ,0 AS PMT_STOCK  ,'''+@CSP_ID+''' AS SP_ID  ,tmp.ps_id ,
	   TMP.PS_NO,TMP.PS_DT,CAST(0 AS NUMERIC(14,2)) as Amount,0 pur_bill_challan_mode,A.ER_FLAG,A.WS_PRICE
	    ,  '''+@CLOC_ID+''' AS DEPT_ID,0 AS tax_percentage,A.FORM_ID FORM_ID,a.EXPIRY_DT,a.BATCH_NO,ART.PERISHABLE,ART.STOCK_NA,a.SHIPPING_FROM_AC_CODE,tmp.PRODUCT_CODE  as batch_product_code
	   FROM SKU A(NOLOCK)    
	   join #TMPPURDETAILS tmp on a.product_code =ISNULL(NULLIF(TMP.STOCK_PRODUCT_CODE,''''),TMP.PRODUCT_CODE)
	   LEFT JOIN LM01106 B (NOLOCK) ON A.AC_CODE=B.AC_CODE    
	   JOIN ARTICLE ART(NOLOCK) ON A.ARTICLE_CODE=ART.ARTICLE_CODE    
	   JOIN PARA1 P1(NOLOCK) ON A.PARA1_CODE=P1.PARA1_CODE    
	   JOIN PARA2 P2(NOLOCK) ON A.PARA2_CODE=P2.PARA2_CODE     
	   JOIN PARA3 P3(NOLOCK) ON A.PARA3_CODE=P3.PARA3_CODE     
	   JOIN PARA4 P4(NOLOCK) ON A.PARA4_CODE=P4.PARA4_CODE     
	   JOIN PARA5 P5(NOLOCK) ON A.PARA5_CODE=P5.PARA5_CODE     
	   JOIN PARA6 P6(NOLOCK) ON A.PARA6_CODE=P6.PARA6_CODE     
	   JOIN UOM (NOLOCK) ON ART.UOM_CODE=UOM.UOM_CODE    
	   JOIN SECTIOND SD(NOLOCK) ON ART.SUB_SECTION_CODE=SD.SUB_SECTION_CODE    
	   JOIN SECTIONM SM(NOLOCK) ON SD.SECTION_CODE=SM.SECTION_CODE    
	   LEFT JOIN #tmpskuxfp XFP (NOLOCK) ON tmp.PRODUCT_CODE=xfp.PRODUCT_CODE   AND XFP.DEPT_ID='''+@CLOC_ID+''' 
	   left JOIN FORM FM(NOLOCK) ON A.FORM_ID=FM.FORM_ID    
	   JOIN BIN(NOLOCK) ON BIN.BIN_ID  =CASE WHEN ISNULL(TMP.BIN_ID,'''')<>'''' THEN TMP.BIN_ID ELSE ''000'' END  
	   '  

	   END
    
	  set @CSTEP=130  
	  print @cCmd  
  
	   INSERT INTO PRT_ITEM_DETAILS ( SRNO,BILLCHECK,MRR_ID,MRR_NO,INV_DT,AC_NAME,AC_CODE,CHALLAN_NO,BILL_NO,INV_NO,BILL_DT,  
	  MEMO_TYPE,UOM_TYPE,SECTION_NAME,SUB_SECTION_NAME,PRODUCT_CODE,MRP,ARTICLE_CODE,ARTICLE_NO,ARTICLE_NAME,ARTICLE_DESC,PARA1_NAME,PARA2_NAME,PARA3_NAME,PARA4_NAME,PARA5_NAME,PARA6_NAME,UOM_CODE,UOM_NAME,  
	  QUANTITY_IN_STOCK,ART_DT_CREATED,PARA3_DT_CREATED,SKU_DT_CREATED,CODING_SCHEME,DISCON,  
	  QUANTITY,INVOICE_QUANTITY,TAX_METHOD_NAME,BILL_LEVEL_TAX_METHOD,ARTICLE_ALIAS,BIN_NAME,BIN_ID,TERMS,CASHDISCOUNTRATE,FDN_RATE,  
	  ROW_ID ,PRTAMOUNT,PRTAMOUNT_CREDITED,ITEM_FORM_ID,FORM_NAME,GROSS_PURCHASE_PRICE,pur_taxable_value,DN_DISCOUNT_PERCENTAGE,DN_DISCOUNT_AMOUNT,PURCHASE_PRICE,ITEM_TAX_PERCENTAGE,ITEM_TAX_AMOUNT,
	  ITEM_EXCISE_DUTY_PERCENTAGE,EXCISE_DUTY_AMOUNT,PUR_FORM_ID,PUR_FORM_NAME,PUR_GROSS_PURCHASE_PRICE,PUR_DISCOUNT_AMOUNT,PUR_DISCOUNT_PERCENTAGE,PUR_PURCHASE_PRICE,PUR_TAX_PERCENTAGE,
	  PUR_TAX_AMOUNT,PUR_EXCISE_DUTY_RATE,PUR_EXCISE_DUTY_AMOUNT,PMT_STOCK,SP_ID,ps_id,PS_NO,PS_DT,Amount,pur_bill_challan_mode,ER_FLAG,WS_PRICE,DEPT_ID,tax_percentage,FORM_ID,EXPIRY_DT,BATCH_NO,
	  PERISHABLE,STOCK_NA,shipping_ac_code ,batch_product_code  )  
  
	  EXEC SP_EXECUTESQL @cCmd  
 END
 

 
  set @CSTEP=130.5
 IF EXISTS (SELECT TOP 1 SP_ID FROM PRT_ITEM_DETAILS (NOLOCK) WHERE SP_ID=@CSP_ID)
	DELETE FROM PRT_ITEM_DETAILS WITH (ROWLOCK) WHERE SP_ID=@CSP_ID AND SRNO IS NULL


	IF @BAGAINSTPROFORMA=1
	BEGIN
	     
		UPDATE C SET DNPF_ROW_ID=A.ROW_ID ,DNPF_QTY=A.QUANTITY 
		FROM DEBITNOTE_PROFORMA_DET A WITH (NOLOCK)
		JOIN DEBITNOTE_PROFORMA_MST B WITH (NOLOCK) ON A.MEMO_ID =B.MEMO_ID 
		JOIN PRT_ITEM_DETAILS C WITH (NOLOCK) ON A.PRODUCT_CODE =LEFT(C.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',C.PRODUCT_CODE)-1,-1),LEN(C.PRODUCT_CODE )))
		WHERE B.CANCELLED =0 and SP_ID=@CSP_ID
		AND A.QUANTITY -ISNULL(A.DN_QTY,0)>0


	if exists (select top 1 'u' from prt_item_details  with (rowlock) where sp_id=@CSP_ID and isnull(DNPF_ROW_ID,'')='')
	begin

	  SET @CERRORMSG= 'DEBIT NOTE PROFORMA NOT FOUNDS' 
	  UPDATE A SET ERRMSG=@CERRORMSG FROM PRT_ITEM_DETAILS A  WITH (ROWLOCK) WHERE SP_ID=@CSP_ID AND ISNULL(DNPF_ROW_ID,'')=''
	  RETURN

	end


	END
	
	
	IF @BPASTE=0 and isnull(@NAGAINSTPACKSLIP,0)=0
	BEGIN
	
	IF ISNULL(@CPRDCODE,'')=''
	   SELECT TOP 1 @CPRDCODE=PRODUCT_CODE FROM PRT_ITEM_DETAILS (NOLOCK) WHERE SP_ID =@CSP_ID

		SELECT  A.PRODUCT_CODE,A.DEPT_ID ,  QUANTITY_IN_STOCK =isnull(B.quantity_in_stock,0) ,
		       BIN_ID =isnull(b.bin_id,ISNULL(a.bin_id,'000')),bin_name=isnull(bin.bin_name,ISNULL(a.bin_name,'')),
			   SR=ROW_NUMBER () OVER (PARTITION BY A.PRODUCT_CODE  ORDER BY CASE WHEN A.BIN_ID =B.BIN_ID THEN 0 ELSE 1 END)
			   iNTO #TMPSTOCK
		FROM PRT_ITEM_DETAILS A (NOLOCK)
		left JOIN pmt01106 B (NOLOCK) ON A.PRODUCT_CODE =B.product_code AND A.dept_id =B.DEPT_ID and b.bin_id not in('999','888')
		left JOIN BIN  (NOLOCK) ON BIN.BIN_ID=B.BIN_ID
		left JOIN BINUSERS C ON C.BIN_ID=BIN.MAJOR_BIN_ID AND C.USER_CODE=@CUSERCODE
		WHERE (A.CODING_SCHEME <>1 OR CHARINDEX ('@',A.PRODUCT_CODE)>0)
		AND SP_ID=@CSP_ID  and isnull(b.QUANTITY_IN_STOCK ,0)>0 AND isnull(A.QUANTITY_IN_STOCK ,0)=0
		
		

		UPDATE A SET QUANTITY_IN_STOCK =B.QUANTITY_IN_STOCK,BIN_ID =B.BIN_ID ,BIN_NAME =B.bin_name 
		FROM PRT_ITEM_DETAILS a (NOLOCK)
		JOIN #TMPSTOCK B ON A.dept_id =B.dept_id AND A.PRODUCT_CODE =B.PRODUCT_CODE 
		WHERE SP_ID=@CSP_ID AND B.SR =1
		

 
  
		
		IF ISNULL(@CPRDCODE,'')<>''
		BEGIN


			UPDATE A SET QUANTITY_IN_STOCK =isnull(B.QUANTITY_IN_STOCK,0) ,a.BIN_ID =isnull(b.bin_id,ISNULL(a.bin_id,'')),bin_name=isnull(b.bin_name,ISNULL(a.bin_name,''))
			FROM PRT_ITEM_DETAILS A (NOLOCK)
			left JOIN
			(
			  SELECT b.mrp, A.DEPT_ID ,A.BIN_ID,BIN.BIN_NAME , LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE ))) AS PRODUCT_CODE,
					 SUM(QUANTITY_IN_STOCK) AS QUANTITY_IN_STOCK
			  FROM PMT01106 A (NOLOCK)
			  join sku_names b (nolock) on a.product_code =b.product_Code 
			  JOIN BIN  (NOLOCK) ON BIN.BIN_ID=A.BIN_ID
	          JOIN BINUSERS C ON C.BIN_ID=BIN.MAJOR_BIN_ID AND C.USER_CODE=@CUSERCODE
			  WHERE LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE ))) =@CPRDCODE
			  AND A.BIN_ID not in('999','888') and a.DEPT_ID = @CLOC_ID 
			  and a.quantity_in_stock >= (case when  @BDONOTCHECKSTOCK=1 then  a.quantity_in_stock  else 0 end  )
			  GROUP BY b.mrp,A.DEPT_ID ,A.BIN_ID,BIN.BIN_NAME , LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE ))) 
			) B ON A.PRODUCT_CODE =B.PRODUCT_CODE and a.dept_id =b.DEPT_ID and a.BIN_ID =b.bin_id and a.MRP =b.mrp 
			WHERE (A.CODING_SCHEME =1 AND  CHARINDEX ('@',A.PRODUCT_CODE)=0)
			AND SP_ID=@CSP_ID  
			
			if Exists (select top 1 'U' FROM PRT_ITEM_DETAILS A (NOLOCK) where SP_ID =@CSP_ID and isnull(QUANTITY_IN_STOCK,0) <0 and ISNULL(STOCK_NA ,0)=0 ) and @BFINANCIALDN=0 and @BALLOWNEGSTOCK=0
			begin
			    UPDATE A SET ERRMSG ='stock not available'  FROM PRT_ITEM_DETAILS A (NOLOCK) 
			    WHERE SP_ID =@CSP_ID AND ISNULL(QUANTITY_IN_STOCK,0) <0 AND ISNULL(STOCK_NA ,0)=0 
			    SET @CERRORMSG='quntity not in stock Please check'+STR(ISNULL(@NQTYBEFORESAVE,0))+' '+STR(ISNULL(@NQTYAFTERSAVE,0))
	            GOTO END_PROC
			end
			
			

		END

	END



 
 IF @nInv_mode=1 AND @bDonotValidateBillChallanMode=0
 BEGIN
	 set @CSTEP=131
	 EXEC SP3S_VALIDATE_PRT_BILLCHALLANMODE
	 @nBillChallanMode=@nBillChallanMode,
	 @cSourceTable='prt_item_details',
	 @cSpid=@CSP_ID,
	 @cErrormsg=@cErrormsg OUTPUT

	 IF ISNULL(@cErrormsg,'')<>''
		GOTO END_PROC

 END
   
   set @CSTEP=132 

	SELECT @NQTYAFTERSAVE=SUM(QUANTITY) FROM PRT_ITEM_DETAILS with (rowlock) where sp_id=@CSP_ID


	IF ISNULL(@NQTYBEFORESAVE,0)<>ISNULL(@NQTYAFTERSAVE,0) and @BPASTE=1
	BEGIN
	   SET @CERRORMSG='Quntity Mismatch at the time of Get Item Details Please check'+STR(ISNULL(@NQTYBEFORESAVE,0))+' '+STR(ISNULL(@NQTYAFTERSAVE,0))
	   GOTO END_PROC
	END


	if isnull(@nshippintMode,0)=3 and exists (select top 1 'u' from prt_item_details  with (rowlock) where sp_id=@CSP_ID and isnull(shipping_ac_code,'')<>@CSHIPPINGAc_CODE)
	begin

	  SET @CERRORMSG= 'Barcode does not belong to given OEM supplier' 
	  RETURN

	end



	--if @@spid=88
	--	select 'check btm', bill_level_tax_method,* from prt_item_details where sp_id=@CSP_ID

	set @CSTEP=135
	UPDATE prt_item_details with (rowlock) SET pur_bill_level_tax_method=bill_level_tax_method,
	bill_level_tax_method=(CASE WHEN ISNULL(@nBilllevelTaxMethod,0)=0 then 1 else @nBilllevelTaxMethod END) 
	where sp_id=@csp_id


	UPDATE PRT_ITEM_DETAILS SET 
	TAX_METHOD_NAME=CASE WHEN BILL_LEVEL_TAX_METHOD=2 THEN 'INCLUSIVE' ELSE  'EXCLUSIVE' END 
	WHERE SP_ID=@CSP_ID

	set @CSTEP=137
	UPDATE prt_item_details with (rowlock) SET 	pur_cd_percentage=substring(terms,dbo.CHARINDEX_NTH('-',terms,1,5)+1,
					  dbo.CHARINDEX_NTH('-',terms,1,6)-dbo.CHARINDEX_NTH('-',terms,1,5)-1)
	where sp_id=@csp_id AND ISNULL(terms,'')<>''
	
	  --if location un registered or composite and party registered gst will add in rate
	 if @ninv_mode =1
	 begin
	      
		 if exists (select top 1 'U' from location (nolock) where dept_id =@CLOC_ID and isnull(registered_gst,0) <>1 )
		 and exists ( select top 1 'U' from LMP01106 (nolock) where AC_CODE =@CACCODE and isnull(registered_gst_dealer,0)  =1 )
		begin
	    
		 UPDATE A SET pur_taxable_value =isnull(pur_taxable_value,0)+ isnull(PUR_TAX_AMOUNT ,0)
		 FROM  PRT_ITEM_DETAILS A (nolock)  
		 WHERE SP_ID=@CSP_ID  

		end 
	 
	 end

	

	--- Changes done according to Google sheet [		
	set @CSTEP=140
	UPDATE prt_item_details with (rowlock) SET gross_purchase_price=
	(CASE WHEN pur_bill_level_tax_method=1 and bill_level_tax_method=1 THEN pur_taxable_value 
			WHEN bill_level_tax_method=2 AND pur_bill_level_tax_method=2 THEN pur_taxable_value+pur_tax_amount 
			WHEN bill_level_tax_method=2 AND pur_bill_level_tax_method=1 THEN pur_taxable_value+pur_tax_amount 
			WHEN bill_level_tax_method=1 AND pur_bill_level_tax_method=2 THEN pur_taxable_value END)  
			where sp_id=@csp_id

	 UPDATE prt_item_details with (rowlock) SET gross_purchase_price=PURCHASE_PRICE 
	 where sp_id=@csp_id  and isnull(BILL_DT,'') <'2017-07-01' and isnull(BILL_DT,'')<>''
	 and isnull(gross_purchase_price,0)=0


	 --DISCUSS WITH ROHIT SIR FRONTEND PURCHASE PRICE COLUMN BIND TO NET RATE 
	--SO update purchase price with gross purchase - dn_discount_amount //26022022
	UPDATE A SET PURCHASE_PRICE=GROSS_PURCHASE_PRICE-(ISNULL(DN_DISCOUNT_AMOUNT,0)/quantity) 
	FROM  PRT_ITEM_DETAILS A (nolock)
	WHERE SP_ID=@CSP_ID
	

	     
       
    set @CSTEP=150  
    UPDATE a with (rowlock) SET FDN_RATE=ISNULL(A.PRTAMOUNT_CREDITED,0) 
	FROM prt_item_details A  
    JOIN RMM01106 B ON B.REFMEMOID=A.MRR_ID  
    WHERE sp_id=@csp_id AND B.CANCELLED=0 AND B.DN_TYPE=2
      
    set @CSTEP=160   
    UPDATE prt_item_details with (rowlock)  SET EXCISE_DUTY_AMOUNT=PURCHASE_PRICE*ITEM_EXCISE_DUTY_PERCENTAGE/100,  
    PUR_EXCISE_DUTY_AMOUNT=PURCHASE_PRICE*ITEM_EXCISE_DUTY_PERCENTAGE/100  where sp_id=@csp_id

	
	    DECLARE @CALLOW_BLANK_BILLDETAILS VARCHAR(10)
		SELECT @CALLOW_BLANK_BILLDETAILS=VALUE  FROM CONFIG WHERE CONFIG_OPTION ='ALLOW_BLANK_BILLDETAILS'

			
	    DECLARE @CBYPASS_DAYS_RESTRICTION_DN VARCHAR(1000)
		SELECT @CBYPASS_DAYS_RESTRICTION_DN=VALUE  FROM CONFIG WHERE CONFIG_OPTION='BYPASS_DAYS_RESTRICTION_DN'

	
         --donot call in financial debit note
		IF ISNULL( @CBYPASS_DAYS_RESTRICTION_DN,'') NOT IN('','0') and ISNULL(@CALLOW_BLANK_BILLDETAILS,'')<>'1' and ISNULL(@BFINANCIALDN,0)=0
		BEGIN
				
		IF EXISTS (SELECT TOP 1 'U' FROM prt_item_details WHERE DATEDIFF (DD,BILL_DT,@DRM_DT)>@CBYPASS_DAYS_RESTRICTION_DN and  sp_id=@csp_id)
		BEGIN
		  
			SET @CERRORMSG='This Item is not Eligible For Return Due to More Than'+RTRIM(LTRIM(STR(@CBYPASS_DAYS_RESTRICTION_DN))) +' Days Restriction'
				
			update a set errmsg='This Item is not Eligible For Return Due to More Than'+RTRIM(LTRIM(STR(@CBYPASS_DAYS_RESTRICTION_DN))) +' Days Restriction Not Allow To Create DN.'
			FROM prt_item_details  a (nolock) WHERE DATEDIFF (DD,BILL_DT,@DRM_DT)>@CBYPASS_DAYS_RESTRICTION_DN  and sp_id=@csp_id
			RETURN

		END

	    END



END TRY

BEGIN CATCH
	SET @CERRORMSG='PROCEDURE SP3S_CALPARTYDN_RATES STEP#'+@CSTEP+ERROR_MESSAGE()
	GOTO END_PROC  
END CATCH

END_PROC:

print 'last step of SP3S_CALPARTYDN_RATES :'+@cStep
END