
-- PROCEDURE TO GET CLOSING STOCK VALUE FROM RF_OPT TABLES
-- USED IN PROCEDURE CLOSINGSTOCKINVENTORY

CREATE PROCEDURE SP_CH555_BANKREPORT_CBSVALUE
(
	@CDEPTID VARCHAR(4),
	@DTODT DATETIME
)
--WITH ENCRYPTION
AS
BEGIN	
--(dinkar) Replace  left(memoid,2) to Location_code 
	IF EXISTS ( SELECT [VALUE] FROM CONFIG WHERE CONFIG_OPTION = 'ENABLE_OPT_REPORTS' AND [VALUE] = '1' )
	BEGIN
		EXEC SP_CH555_BANKREPORT_CBSVALUE_RFOPT @CDEPTID, @DTODT
	END
	ELSE
	BEGIN
		IF OBJECT_ID('TEMPDB..#TMPLOCLIST','U') IS NOT NULL
			DROP TABLE #TMPLOCLIST
			
		SELECT DEPT_ID INTO #TMPLOCLIST FROM LOCATION WHERE 1=2

		IF @CDEPTID <> ''
			INSERT #TMPLOCLIST VALUES ( @CDEPTID )
		ELSE
		BEGIN
			IF EXISTS ( SELECT TOP 1 DEPT_ID FROM ACT_FILTER_LOC WHERE SP_ID = @@SPID )
				INSERT #TMPLOCLIST
				SELECT DEPT_ID FROM ACT_FILTER_LOC WHERE SP_ID = @@SPID
			ELSE
				INSERT #TMPLOCLIST
				SELECT DEPT_ID FROM LOCATION WHERE LOC_TYPE=1  AND DEPT_ID=MAJOR_DEPT_ID
		END

		 DECLARE @BPICKFREIGHT BIT,@BPICKOC BIT,@BPICKRO BIT,@NSTOCKADJVALUE NUMERIC(10,2),@COHSTR VARCHAR(1000),@CCMD NVARCHAR(MAX)
		 
		 SELECT TOP 1 @BPICKFREIGHT=VALUE FROM CONFIG WHERE CONFIG_OPTION='FIXREPS_PICK_FREIGHT'   
		 
		 SELECT TOP 1 @BPICKOC=VALUE FROM CONFIG WHERE CONFIG_OPTION='FIXREPS_PICK_OTHER_CHARGES'   
		 
		 SELECT TOP 1 @BPICKRO=VALUE FROM CONFIG WHERE CONFIG_OPTION='FIXREPS_PICK_ROUND_OFF'   


		IF OBJECT_ID('TEMPDB..#SAU_ADJ_CBS','U') IS NOT NULL
			DROP TABLE #SAU_ADJ_CBS
			
		SELECT PRODUCT_CODE ,SUM(CASE WHEN B.CNC_TYPE=1 THEN  -A.RATE ELSE A.RATE END) AS STKADJ 
		INTO #SAU_ADJ_CBS
		FROM ICD01106 A (NOLOCK)
		JOIN ICM01106 B ON A.CNC_MEMO_ID=B.CNC_MEMO_ID
		WHERE STOCK_ADJ_NOTE=1 AND CANCELLED=0
		AND CNC_MEMO_DT <=@DTODT
		GROUP BY PRODUCT_CODE


		IF OBJECT_ID('TEMPDB..#SAU_CBS','U') IS NOT NULL
			DROP TABLE #SAU_CBS
			
		SELECT A.PRODUCT_CODE ,MAJOR_DEPT_ID,B.STKADJ+C.BASIC_COST AS BASIC_COST
		INTO #SAU_CBS
		FROM RF01106 A (NOLOCK)
		JOIN #SAU_ADJ_CBS B ON A.PRODUCT_CODE=B.PRODUCT_CODE
		JOIN VW_STOCKVALUE C ON C.PRODUCT_CODE=A.PRODUCT_CODE
		WHERE XN_DT <=@DTODT
		GROUP BY A.PRODUCT_CODE,MAJOR_DEPT_ID,B.STKADJ,C.BASIC_COST 
		HAVING (SUM((CASE WHEN A.XN_TYPE='OPS' OR (A.XN_TYPE IN ('OPS', 'PUR', 'CHI', 'SLR','UNC','APR', 
						  'WSR', 'PFI', 'PFG', 'BCG','MRP','DCI','PSB','JWR') ) THEN 1 
						  WHEN A.XN_TYPE IN ('PRT','CHO','SLS','CNC','APP','WSL','CIP', 'CRM', 'DCO','MIP','CSB','JWI','DLM') 
						   THEN -1 ELSE 0 END) * (XN_QTY))> 0)
		
		
		SET @COHSTR=(CASE WHEN @BPICKFREIGHT=1 THEN	'+ISNULL(B.FREIGHT,0) ' ELSE '' END )+
					(CASE WHEN @BPICKOC=1 THEN '+ISNULL(B.OTHER_CHARGES,0) ' ELSE '' END )+
					(CASE WHEN @BPICKRO=1 THEN '+ISNULL(B.ROUND_OFF,0) ' ELSE '' END )		
		
		IF OBJECT_ID('TEMPDB..#TMPCBS','U') IS NOT NULL
			DROP TABLE #TMPCBS
			
		SELECT A.PRODUCT_CODE,A.MAJOR_DEPT_ID,SUM(CASE WHEN XN_TYPE IN ('OPS', 'PUR', 'CHI', 'SLR','UNC','APR', 'WSR', 'PFI','PFG', 'BCG','MRP','DCI','PSB','JWR')
		THEN XN_QTY	WHEN XN_TYPE IN ('PRT','CHO','SLS','CNC','APP','WSL','CIP', 'CRM','DCO','MIP','CSB','JWI','DLM') 
		THEN -XN_QTY ELSE 0 END) AS CBSQTY INTO #TMPCBS FROM RF01106 A
		JOIN #TMPLOCLIST  LOCLIST ON A.MAJOR_DEPT_ID = LOCLIST.DEPT_ID
		WHERE XN_DT<=@DTODT
		GROUP BY A.PRODUCT_CODE,A.MAJOR_DEPT_ID HAVING SUM((CASE WHEN XN_TYPE='OPS' OR 
		XN_TYPE IN ('OPS', 'PUR', 'CHI', 'SLR','UNC','APR', 'WSR', 'PFI','PFG', 'BCG','MRP','DCI','PSB','JWR')
		THEN XN_QTY	WHEN XN_TYPE IN ('PRT','CHO','SLS','CNC','APP','WSL','CIP', 'CRM','DCO','MIP','CSB','JWI','DLM') 
		THEN -XN_QTY END))<>0
					
		SET @CCMD=N'SELECT	A.MAJOR_DEPT_ID,A.MAJOR_DEPT_ID + '' '' + LOC.DEPT_NAME AS DEPT_NAME,SECTION_NAME, 
				SUM(((CBSQTY*(CASE WHEN C.PRODUCT_CODE IS NOT NULL THEN C.BASIC_COST ELSE B.BASIC_COST END)'+@COHSTR+'))) AS CBP
		FROM #TMPCBS A (NOLOCK) 
		JOIN SKU (NOLOCK) ON A.PRODUCT_CODE=SKU.PRODUCT_CODE  
		JOIN ARTICLE ART (NOLOCK) ON SKU.ARTICLE_CODE = ART.ARTICLE_CODE
		JOIN SECTIOND SD (NOLOCK) ON ART.SUB_SECTION_CODE = SD.SUB_SECTION_CODE
		JOIN SECTIONM SM (NOLOCK) ON SD.SECTION_CODE = SM.SECTION_CODE
		JOIN LOCATION LOC (NOLOCK) ON A.MAJOR_DEPT_ID = LOC.DEPT_ID
		JOIN VW_STOCKVALUE B ON A.PRODUCT_CODE = B.PRODUCT_CODE
		LEFT OUTER JOIN #SAU_CBS C ON C.PRODUCT_CODE=A.PRODUCT_CODE AND C.MAJOR_DEPT_ID=A.MAJOR_DEPT_ID
		GROUP BY A.MAJOR_DEPT_ID, LOC.DEPT_NAME,SECTION_NAME
		ORDER BY MAJOR_DEPT_ID,DEPT_NAME,SECTION_NAME'
		
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		
	END
END
--***************************************** END OF PROCEDURE SP_CH555_BANKREPORT_CBSVALUE
