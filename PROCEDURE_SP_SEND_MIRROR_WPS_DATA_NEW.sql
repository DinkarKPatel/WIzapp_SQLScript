create PROCEDURE SP_SEND_MIRROR_WPS_DATA_NEW
	 @CUPLOADEDXNID VARCHAR(50)
	,@CCURLOCID VARCHAR(5)	
	 ,@BACKNOWLEDGE BIT =0
	,@CERRMSG VARCHAR(1000) OUTPUT
--WITH ENCRYPTION	
AS
/*
	SP_SEND_MIRROR_WPS_DATA_NEW_208_29_1_14 : THIS PROCEDURE WILL SEND WHOLESALE DATA FROM LOCATION TO HO.
*/
BEGIN
	DECLARE @DTSQL NVARCHAR(MAX),@NSPID INT,@CTEMPTABLE VARCHAR(500),@CMEMOID VARCHAR(50),
	@CTEMPEMPLOYEETABLE VARCHAR(200),@DMEMOLASTUPDATE DATETIME,@CTABLENAME VARCHAR(100),
	@BRECFOUND BIT,@CSTEP VARCHAR(5),@CFILTERCONDITION VARCHAR(MAX),
	@CTEMPDETAILTABLE VARCHAR(200),@CTEMPMASTERTABLE VARCHAR(200),@CTEMPLMTABLE VARCHAR(200),
	@CTEMPLMPTABLE VARCHAR(200),@CTEMPAREATABLE VARCHAR(200),@CTEMPCITYTABLE VARCHAR(200)
	
	
	DECLARE @TXNSSENDINFO TABLE (ORG_TABLENAME VARCHAR(50),TMP_TABLENAME VARCHAR(50),XN_ID VARCHAR(40))  	

BEGIN TRY 	
	---- CALL ACKNOWLEDGEMENT OF MEMO SUCCESSFUL MERGING AT MIRRORING SERVER
	
	SET @CSTEP=0
	DECLARE @CTEMPDBNAME1 VARCHAR(40),@CTEMPDBNAME VARCHAR(40)
	
	SET @CTEMPDBNAME=''
    
    
    --CHNAGE BY BAIJNATH	
	SET @CMEMOID=@CUPLOADEDXNID
	SET @CSTEP=40
	---- IF NO MEMO FOUND , JUST END THE PROCESS
	IF ISNULL(@CMEMOID,'')=''
		GOTO END_PROC

LBLTABLEINFO:
	SET @CSTEP=50
	---- POPULATE LIST OF TABLES 

	SELECT DISTINCT 'WPS_WPS_MST_UPLOAD'  AS TARGET_TABLENAME,A.* ,@CMEMOID AS XN_ID FROM WPS_MST A WHERE A.PS_ID=@CMEMOID  
   
	SET @CSTEP=240
	---- SEND THE WHOLESALE MEMO DETAIL TABLE
	SELECT DISTINCT 'WPS_WPS_DET_UPLOAD'  AS TARGET_TABLENAME,A.* ,@CMEMOID AS XN_ID FROM WPS_DET A WHERE A.PS_ID=@CMEMOID  

	SELECT DISTINCT 'WPS_BUYER_ORDER_WPS_LINK_UPLOAD'  AS TARGET_TABLENAME,A.* ,@CMEMOID AS XN_ID 
	FROM BUYER_ORDER_WPS_LINK A (nolock) 
	join wps_det b (nolock) on a.WPS_DET_ROW_ID =b.ROW_ID 
	WHERE b.PS_ID=@CMEMOID  
   
		
	SET @CSTEP=241
	SELECT  DISTINCT 'WPS_PMT01106_UPLOAD'  AS TARGET_TABLENAME, A.DEPT_ID,A.product_code,A.BIN_ID,A.quantity_in_stock,@CMEMOID AS WPS_MEMO_ID  FROM PMT01106 A
				JOIN  WPS_DET B ON B.PRODUCT_CODE=A.PRODUCT_CODE
				WHERE B.ps_id=@CMEMOID
	
	GOTO END_PROC

END TRY
BEGIN CATCH
	SET @CERRMSG='P: SP_SEND_MIRROR_WPS_DATA_NEW, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO END_PROC
END CATCH 		

END_PROC:
	
END
---END OF PROCEDURE - SP_SEND_MIRROR_WPS_DATA_NEW


