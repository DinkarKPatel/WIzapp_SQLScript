create PROCEDURE SP_BUYERSORDER_WSL_30
@CMEMOID VARCHAR(40),  
@CWHERE VARCHAR(500),  
@CFINYEAR VARCHAR(10),  
@NNAVMODE NUMERIC(2,0),
@CARTICLECODE CHAR(9)='',  
@CPARA2CODE CHAR(7)='',
@DTWHERE DATETIME ='',
@cLocId VARCHAR(5)=''
--WITH ENCRYPTION
 
AS    
BEGIN 
DECLARE @DTSQL NVARCHAR(MAX),@CCOLS NVARCHAR(MAX),@CDEPT_ID VARCHAR(2)

IF @cLocId=''
	SELECT @CDEPT_ID		= DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
ELSE
	SET @CDEPT_ID=@cLocId

IF OBJECT_ID('TEMPDB..#ARTPARAS','U') IS NOT NULL
	DROP TABLE #ARTPARAS
	
IF OBJECT_ID('TEMPDB..#ARTPARAS_DUP','U') IS NOT NULL
	DROP TABLE #ARTPARAS_DUP	

IF OBJECT_ID('TEMPDB..#SIZES','U') IS NOT NULL
	DROP TABLE #SIZES

IF OBJECT_ID('TEMPDB..#PICKLIST_QTY','U') IS NOT NULL
	DROP TABLE #PICKLIST_QTY

--SET @CARTICLECODE='010000008'
SELECT X.ARTICLE_CODE,X.PARA1_CODE,X.PARA2_CODE
	  ,SUM(X.PICK_LIST_QTY+X.ADD_QTY-ISNULL(Y.QTY,0)) AS PICKLIST_QTY
INTO #PICKLIST_QTY	  
FROM WSL_PICKLIST_DET X
LEFT OUTER JOIN 
(
	SELECT A.ROW_ID AS PICKLIST_ROW_ID,SUM(B.QUANTITY) AS QTY 
	FROM WSL_PICKLIST_DET A 
    JOIN IND01106 B ON A.PICK_LIST_ID=B.PICK_LIST_ID AND A.ARTICLE_CODE=B.PICKLIST_ARTICLE_CODE
	AND A.PARA1_CODE=B.PICKLIST_PARA1_CODE AND A.PARA2_CODE=B.PICKLIST_PARA2_CODE
	JOIN INM01106 C ON B.INV_ID = C.INV_ID
	WHERE C.CANCELLED = 0 
	GROUP BY A.ROW_ID
)Y ON X.ROW_ID = Y.PICKLIST_ROW_ID
JOIN WSL_PICKLIST_MST Z ON X.PICK_LIST_ID = Z.PICK_LIST_ID
WHERE Z.CANCELLED = 0 AND X.PICK_LIST_QTY+X.ADD_QTY > ISNULL(Y.QTY,0)
AND X.ARTICLE_CODE=@CARTICLECODE
GROUP BY X.ARTICLE_CODE,X.PARA1_CODE,X.PARA2_CODE

SELECT AP.ARTICLE_CODE,P1.PARA1_CODE,P1.PARA1_NAME,P2.PARA2_ORDER,P2.PARA2_NAME
,SUM(ISNULL(P.QUANTITY_IN_STOCK,0))-ISNULL(PQ.PICKLIST_QTY,0) AS QUANTITY
INTO #ARTPARAS
FROM 
(
	---CARTESIAN PRODUCT OF MATCHING ARTICLES 
	SELECT DISTINCT AP1.ARTICLE_CODE,AP1.PARA1_CODE,AP2.PARA2_CODE
	FROM ART_PARA1 AP1(NOLOCK)
	JOIN ART_DET AP2(NOLOCK) ON AP1.ARTICLE_CODE=AP2.ARTICLE_CODE
	WHERE AP1.ARTICLE_CODE=@CARTICLECODE
	UNION
	---DETAILS FOR MISSING ARTICLES IN ART_DET
	SELECT DISTINCT AP1.ARTICLE_CODE,AP1.PARA1_CODE,'0000000' AS PARA2_CODE
	FROM ART_PARA1 AP1(NOLOCK)
	LEFT JOIN ART_DET AP2(NOLOCK) ON AP1.ARTICLE_CODE=AP2.ARTICLE_CODE
	WHERE AP2.ARTICLE_CODE IS NULL AND AP1.ARTICLE_CODE=@CARTICLECODE
	UNION
	---DETAILS FOR MISSING ARTICLES IN ART_PARA1
	SELECT DISTINCT AP2.ARTICLE_CODE,'0000000' AS PARA1_CODE,AP2.PARA2_CODE
	FROM ART_DET AP2(NOLOCK)
	LEFT JOIN ART_PARA1 AP1(NOLOCK) ON AP1.ARTICLE_CODE=AP2.ARTICLE_CODE
	WHERE AP1.ARTICLE_CODE IS NULL AND AP2.ARTICLE_CODE=@CARTICLECODE
)AP
JOIN PARA1 P1(NOLOCK) ON P1.PARA1_CODE=AP.PARA1_CODE
JOIN PARA2 P2(NOLOCK) ON P2.PARA2_CODE=AP.PARA2_CODE
LEFT JOIN SKU S(NOLOCK) ON S.ARTICLE_CODE=AP.ARTICLE_CODE AND S.PARA1_CODE=AP.PARA1_CODE AND S.PARA2_CODE=AP.PARA2_CODE
LEFT JOIN PMT01106 P(NOLOCK) ON S.PRODUCT_CODE=P.PRODUCT_CODE AND P.DEPT_ID=@CDEPT_ID
LEFT JOIN #PICKLIST_QTY PQ ON AP.ARTICLE_CODE=PQ.ARTICLE_CODE AND AP.PARA1_CODE=PQ.PARA1_CODE AND AP.PARA2_CODE=PQ.PARA2_CODE
GROUP BY AP.ARTICLE_CODE,P1.PARA1_CODE,P1.PARA1_NAME,P2.PARA2_ORDER,P2.PARA2_NAME,ISNULL(PQ.PICKLIST_QTY,0)

--SELECT * FROM #ARTPARAS 
SELECT DISTINCT UPPER(PARA2_NAME) AS PARA2_NAME ,PARA2_ORDER INTO #SIZES FROM #ARTPARAS  

ALTER TABLE #ARTPARAS DROP COLUMN PARA2_ORDER 

SELECT @CCOLS=ISNULL(@CCOLS+',','')+QUOTENAME(PARA2_NAME)
FROM #SIZES
ORDER BY PARA2_ORDER ASC
--SELECT @CCOLS

SELECT * INTO #ARTPARAS_DUP FROM #ARTPARAS
UPDATE #ARTPARAS_DUP SET QUANTITY=null

--select * from #ARTPARAS_DUP
SET @DTSQL=N'SELECT PARA1_CODE AS COLOR_CODE,PARA1_NAME AS COLOR,CAST(0 AS NUMERIC(14,2)) AS TOTAL,'+@CCOLS+',0 AS IS_ENTRYCOL ,CAST(0 AS BIT) AS IS_MANUAL 
			 FROM #ARTPARAS 
			 PIVOT(SUM(QUANTITY) FOR PARA2_NAME IN ('+@CCOLS+')) AS PTABLE
			 UNION ALL
			 SELECT PARA1_CODE AS COLOR_CODE,PARA1_NAME AS COLOR,CAST(0 AS NUMERIC(14,2)) AS TOTAL,'+@CCOLS+',1 AS IS_ENTRYCOL  ,CAST(0 AS BIT) AS IS_MANUAL 
			 FROM #ARTPARAS_DUP 
			 PIVOT(SUM(QUANTITY) FOR PARA2_NAME IN ('+@CCOLS+')) AS PTABLE
			 ORDER BY PARA1_NAME,IS_ENTRYCOL ASC'
PRINT @DTSQL
EXEC SP_EXECUTESQL @DTSQL	
END

