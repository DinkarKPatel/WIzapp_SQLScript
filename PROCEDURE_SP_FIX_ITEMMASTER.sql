CREATE PROCEDURE SP_FIX_ITEMMASTER  
@NQUERYID NUMERIC(3,0),    
@CWHERE  VARCHAR(500),    
@CFINYEAR VARCHAR(5),    
@NNAVMODE NUMERIC(1,0),    
@CMEMOID VARCHAR(40)    
--WITH ENCRYPTION    
AS      
BEGIN      
     
DECLARE @CCMD NVARCHAR(4000)     
    
    
IF @NQUERYID=1    
GOTO LBLNAVIGATE      
ELSE IF @NQUERYID=2    
GOTO LBLMEMOMASTER     
ELSE IF @NQUERYID=3    
GOTO LBLPARA1     
ELSE IF @NQUERYID=4    
GOTO LBLPARA2   
ELSE IF @NQUERYID=5    
GOTO LBLPARA3   
ELSE IF @NQUERYID=6   
GOTO LBLPARA4   
ELSE IF @NQUERYID=7    
GOTO LBLPARA5   
ELSE IF @NQUERYID=8    
GOTO LBLPARA6   
ELSE IF @NQUERYID=9    
GOTO LBLARTICLE   
ELSE IF @NQUERYID=10    
GOTO LBLSUPP  
  
  
    
ELSE    
GOTO LAST    
    
LBLNAVIGATE:    
    
   SELECT A.PRODUCT_CODE ,A.ARTICLE_CODE, A.BARCODE_CODING_SCHEME AS CODING_SCHEME
   FROM SKU A   
   JOIN ARTICLE B ON  A.ARTICLE_CODE= B.ARTICLE_CODE   
   ORDER BY ARTICLE_NO  
    
 GOTO LAST     
    
LBLMEMOMASTER:   
   
   SELECT A.*,B.*,D.SECTION_NAME,C.SUB_SECTION_NAME,E.PARA1_NAME,ISNULL(NULL,0) AS QUANTITY_IN_STOCK,  
         F.PARA2_NAME,G.PARA3_NAME,H.PARA4_NAME,I.PARA5_NAME,J.PARA6_NAME, K.AC_NAME  
         ,B.DT_CREATED AS ART_DT_CREATED,G.DT_CREATED AS PARA3_DT_CREATED ,A.DT_CREATED AS SKU_DT_CREATED ,
         ABS((CASE WHEN ISNULL(POST_TAX_SEPARATELY,0)=0 
               THEN  ISNULL(SKU_OH.TAX_AMOUNT,0) ELSE 0 END) - ISNULL(SKU_OH.DISCOUNT_AMOUNT,0) + 
         ISNULL(SKU_OH.VALUE_ADD,0)  + ISNULL(SKU_OH.EXCISE_DUTY_AMOUNT,0)  + 
         ISNULL(SKU_OH.FREIGHT,0)  + ISNULL(SKU_OH.OTHER_CHARGES,0)  +  ISNULL(SKU_OH.ROUND_OFF,0)) AS OH          
   FROM SKU A   
   LEFT OUTER JOIN SKU_OH ON A.PRODUCT_CODE=SKU_OH.PRODUCT_CODE   
   JOIN FORM  (NOLOCK) ON FORM.FORM_ID=A.FORM_ID   
   JOIN ARTICLE B ON  A.ARTICLE_CODE= B.ARTICLE_CODE     
   JOIN SECTIOND C ON B.SUB_SECTION_CODE= C.SUB_SECTION_CODE    
   JOIN SECTIONM D ON C.SECTION_CODE= D.SECTION_CODE    
   JOIN PARA1 E ON A.PARA1_CODE= E.PARA1_CODE    
   JOIN PARA2 F ON A.PARA2_CODE= F.PARA2_CODE    
   JOIN PARA3 G ON A.PARA3_CODE= G.PARA3_CODE    
   JOIN PARA4 H ON A.PARA4_CODE= H.PARA4_CODE    
   JOIN PARA5 I ON A.PARA5_CODE= I.PARA5_CODE    
   JOIN PARA6 J ON A.PARA6_CODE= J.PARA6_CODE    
   JOIN LMV01106  K ON A.AC_CODE= K.AC_CODE  
   --LEFT OUTER JOIN PMT01106 PMT ON A.PRODUCT_CODE = PMT.PRODUCT_CODE       
   WHERE A.PRODUCT_CODE= @CWHERE    
    
GOTO LAST    
    
LBLPARA1:    
    
   SELECT PARA1_CODE,PARA1_NAME,ALIAS FROM PARA1 WHERE 1=@CWHERE  
     GOTO LAST
LBLPARA2:    
    
   SELECT PARA2_CODE,PARA2_NAME,ALIAS FROM PARA2 WHERE 1=@CWHERE  
     GOTO LAST
LBLPARA3:    
    
   SELECT PARA3_CODE,PARA3_NAME,ALIAS FROM PARA3 WHERE 1=@CWHERE  
     GOTO LAST
LBLPARA4:    
    
   SELECT PARA4_CODE,PARA4_NAME,ALIAS FROM PARA4 WHERE 1=@CWHERE  
     GOTO LAST
LBLPARA5:    
    
   SELECT PARA5_CODE,PARA5_NAME,ALIAS FROM PARA5  WHERE 1=@CWHERE   
    GOTO LAST
LBLPARA6:    
    
   SELECT PARA6_CODE,PARA6_NAME,ALIAS FROM PARA6 WHERE 1=@CWHERE  
  GOTO LAST
LBLARTICLE:  
  
	 SELECT A.*,C.SECTION_NAME,B.SUB_SECTION_NAME,  
			E.PARA1_NAME,F.PARA2_NAME,G.PARA3_NAME,H.PARA4_NAME,I.PARA5_NAME,  
			J.PARA6_NAME,C.SECTION_CODE  
	 FROM ARTICLE A  
	 JOIN SECTIOND B ON A.SUB_SECTION_CODE= B.SUB_SECTION_CODE  
	 JOIN SECTIONM C ON B.SECTION_CODE= C.SECTION_CODE  
	 JOIN PARA1 E ON A.PARA1_CODE= E.PARA1_CODE  
	 JOIN PARA2 F ON A.PARA2_CODE= F.PARA2_CODE  
	 JOIN PARA3 G ON A.PARA3_CODE= G.PARA3_CODE  
	 JOIN PARA4 H ON A.PARA4_CODE= H.PARA4_CODE  
	 JOIN PARA5 I ON A.PARA5_CODE= I.PARA5_CODE  
	 JOIN PARA6 J ON A.PARA6_CODE= J.PARA6_CODE  
	 WHERE A.CODING_SCHEME=1  AND A.INACTIVE=0   
	 ORDER BY A.ARTICLE_NO,C.SECTION_NAME,B.SUB_SECTION_NAME 
  --   SELECT A.*,C.SECTION_NAME,B.SUB_SECTION_NAME,  
		--	X.PARA1_NAME,X.PARA2_NAME,G.PARA3_NAME,H.PARA4_NAME,I.PARA5_NAME,  
		--	J.PARA6_NAME,C.SECTION_CODE,X.PARA1_CODE AS P1_CODE,X.PARA2_CODE AS P2_CODE  
	 --FROM ARTICLE A  
	 --JOIN SECTIOND B ON A.SUB_SECTION_CODE= B.SUB_SECTION_CODE  
	 --JOIN SECTIONM C ON B.SECTION_CODE= C.SECTION_CODE  
	 --JOIN 
	 --(
		--SELECT ISNULL(A.ARTICLE_CODE,B.ARTICLE_CODE) AS [ARTICLE_CODE],A.PARA1_CODE, PARA1_NAME,B.PARA2_CODE ,PARA2_NAME 
		--FROM 
		--(
		--	SELECT A.ARTICLE_CODE,B.PARA1_NAME,A.PARA1_CODE
		--	FROM  ART_PARA1 A 
		--	JOIN PARA1 B ON A.PARA1_CODE=B.PARA1_CODE
		--) A
		--FULL OUTER JOIN 
		--(
		--	SELECT A.ARTICLE_CODE,B.PARA2_NAME,A.PARA2_CODE
		--	FROM  ART_DET A 
		--	JOIN PARA2 B ON A.PARA2_CODE=B.PARA2_CODE
		--) B ON A.ARTICLE_CODE=B.ARTICLE_CODE
	 --)X ON X.ARTICLE_CODE=A.ARTICLE_CODE
	 --JOIN PARA3 G ON A.PARA3_CODE= G.PARA3_CODE  
	 --JOIN PARA4 H ON A.PARA4_CODE= H.PARA4_CODE  
	 --JOIN PARA5 I ON A.PARA5_CODE= I.PARA5_CODE  
	 --JOIN PARA6 J ON A.PARA6_CODE= J.PARA6_CODE  
	 --WHERE A.CODING_SCHEME=1  AND A.INACTIVE=0   
	 --ORDER BY A.ARTICLE_NO,C.SECTION_NAME,B.SUB_SECTION_NAME,X.PARA1_NAME,X.PARA2_NAME 
     GOTO LAST   
 
 LBLSUPP:
 
 -----NEW LABLE
 
	DECLARE @CCODE VARCHAR(4000) 
	SELECT  @CCODE = DBO.FN_ACT_TRAVTREE('0000000021') 
	SELECT B.AC_CODE, B.AC_NAME,B.ALIAS,(B.ADDRESS0 + ' '+ B.ADDRESS1 +' ' + B.ADDRESS2) AS ADDRESS_F,
	B.AREA_NAME ,B.CITY,B.STATE,B.MOBILE 
	FROM LMV01106 B WHERE CHARINDEX(HEAD_CODE,@CCODE)>0   
  
   GOTO LAST   
     
LAST:      
END
