create PROCEDURE SAVETRAN_TERM    
(    
 @CLOCID VARCHAR(10),          
 @NMODE INT=0      ,    
 @CSPID VARCHAR(50)  ,
 @cID VARCHAR(50)=''
)    
AS   
	--changes by Dinkar in location id varchar(4)..       
BEGIN          
  DECLARE @DSEARCHXNDT DATETIME,@CSOURCEDB VARCHAR(200),@CTEMPTABLENAME VARCHAR(200),@CTEMPTABLE VARCHAR(200),          
  @CCMD NVARCHAR(MAX),@CSTEP VARCHAR(10),@CERRMSG VARCHAR(MAX),@CUSER_CODE CHAR(7),@DMEMODT DATETIME,          
  @CAPPLYSALESSETUP VARCHAR(2),@CBINSALES VARCHAR(10),@CGENVENDOREANCODES VARCHAR(2),@NIMPORTMODE INT,          
  @BSTOCKNOTFOUND BIT,@BLOOP BIT,@CEANNO VARCHAR(50),@CROWID VARCHAR(40),@NPENDINGQTY NUMERIC(10,2),@CBILLNO VARCHAR(50),          
  @CPRODUCTCODE VARCHAR(50),@CFINYEAR VARCHAR(10),@NQTY NUMERIC(10,2),@CAPPLYMINDISCOUNT VARCHAR(2)          
           DECLARE @cMemoNo VARCHAR(50),@cMemoID VARCHAR(50)     
BEGIN TRY          
  SET @CUSER_CODE = '0000000'          
            
  DECLARE @TERRORDETAILS TABLE          
  (          
   PRODUCT_CODE VARCHAR(50),          
   REF_NO VARCHAR(15),          
   DEPT_ID CHAR(4),          
   ERROR_MSG VARCHAR(1000)           
  )       
            
  SET @CSTEP=5       
      
   
           
  IF OBJECT_ID('TEMPDB..#TERROR','U') IS NOT NULL          
   DROP TABLE #TERROR          
            
      
      
                 
  IF OBJECT_ID('TEMPDB..#SLSIMPORT','U') IS NOT NULL          
   DROP TABLE #SLSIMPORT          
             
  IF OBJECT_ID('TEMPDB..#SLSTMP','U') IS NOT NULL          
   DROP TABLE #SLSTMP          
    
 IF OBJECT_ID('TEMPDB..#SLSIMPORT_CUSTDYM','U') IS NOT NULL          
   DROP TABLE #SLSIMPORT_CUSTDYM      
           
  SET @CSTEP=10          
            
  CREATE TABLE #SLSIMPORT          
  (          
	MEMO_ID			VARCHAR(100),
	ROW_ID			VARCHAR(100),
	REMARKS			VARCHAR(100),
	SR_NO			NUMERIC(5),
  )          
  CREATE TABLE #SLSIMPORT_CUSTDYM          
  (          
	MEMO_ID		VARCHAR(100),
	MEMO_NO		VARCHAR(100),
	MEMO_DT		DATETIME,
	FIN_YEAR	VARCHAR(100),
	LAST_UPDATE	DATETIME,
	JOB_CODE 	VARCHAR(100),
	XN_TYPE 	VARCHAR(100),
	TERM_NAME 	VARCHAR(100),
	CANCELLED   BIT,
 )    
    
   
BEGIN TRANSACTION          

IF ISNULL(@nmode,0) IN (1,2)
BEGIN
    
	DELETE FROM PPC_PPC_TERM_CONDITION_DET_UPLOAD WHERE  SP_ID=@CSPID AND ISNULL(remarks,'')=''

 --INSERT INTO #SLSIMPORT_CUSTDYM(MEMO_ID,MEMO_NO,MEMO_DT,FIN_YEAR,LAST_UPDATE,JOB_CODE,XN_TYPE,TERM_NAME,CANCELLED)
 --SELECT TOP 1 MEMO_ID,MEMO_NO,MEMO_DT,FIN_YEAR,LAST_UPDATE,JOB_CODE,XN_TYPE,TERM_NAME,CANCELLED    
 --FROM PPC_TERM_CONDITION_UPLOAD  (NOLOCK)         
 --WHERE SP_ID=@CSPID 
 
 
    
 SELECT TOP 1 @cMemoNo=memo_no,@cMemoID =MEMO_ID FROM  PPC_PPC_TERM_CONDITION_MST_UPLOAD  (NOLOCK)   WHERE SP_ID=@CSPID 
    
    
 IF NOT EXISTS(SELECT MEMO_ID FROM PPC_TERM_CONDITION_MST(NOLOCK) WHERE MEMO_ID=@cMemoID)
 BEGIN    
	EXEC GETNEXTKEY_OPT 'PPC_TERM_CONDITION_MST', 'MEMO_NO', 7, @CLOCID, 1,'',0, '',@cMemoNo OUTPUT         
    
	UPDATE PPC_PPC_TERM_CONDITION_MST_UPLOAD SET MEMO_NO =@cMemoNo ,MEMO_DT=GETDATE()   WHERE SP_ID=@CSPID 
	UPDATE PPC_PPC_TERM_CONDITION_MST_UPLOAD SET FIN_YEAR='01'+DBO.FN_GETFINYEAR(MEMO_DT)      WHERE SP_ID=@CSPID 
	UPDATE PPC_PPC_TERM_CONDITION_MST_UPLOAD SET MEMO_ID=LTRIM(RTRIM(@CLOCID))+FIN_YEAR+REPLICATE('0',15-LEN(LTRIM(RTRIM(MEMO_NO))))+LTRIM(RTRIM(MEMO_NO))       WHERE SP_ID=@CSPID      
 END 
 ELSE
 BEGIN
	UPDATE A SET A.MEMO_NO =B.MEMO_NO,A.MEMO_DT=B.MEMO_DT,A.MEMO_ID=B.MEMO_ID
	FROM  PPC_PPC_TERM_CONDITION_MST_UPLOAD  A
	JOIN PPC_TERM_CONDITION_MST B ON B.MEMO_ID=A.MEMO_ID
	   WHERE A.SP_ID=@CSPID 
 END

 SELECT TOP 1 @cMemoNo=memo_no,@cMemoID =MEMO_ID FROM PPC_TERM_CONDITION_UPLOAD     WHERE SP_ID=@CSPID 

 DELETE FROM PPC_TERM_CONDITION_MST WHERE MEMO_ID=@cMemoID
 DELETE FROM PPC_TERM_CONDITION_DET WHERE MEMO_ID=@cMemoID


INSERT INTO PPC_TERM_CONDITION_MST(MEMO_ID,MEMO_NO,MEMO_DT,FIN_YEAR,LAST_UPDATE,JOB_CODE,XN_TYPE,TERM_NAME,CANCELLED)
SELECT TOP 1 MEMO_ID,MEMO_NO,MEMO_DT,FIN_YEAR,GETDATE() LAST_UPDATE,JOB_CODE,XN_TYPE,TERM_NAME,CANCELLED    
FROM PPC_TERM_CONDITION_UPLOAD  (NOLOCK)         
WHERE SP_ID=@CSPID 

INSERT INTO PPC_TERM_CONDITION_DET(MEMO_ID,ROW_ID,REMARKS,SR_NO)
SELECT MEMO_ID,CAST(NEWID() AS VARCHAR(40)) ROW_ID,REMARKS,SR_NO  
FROM PPC_TERM_CONDITION_UPLOAD  (NOLOCK)         
WHERE SP_ID=@CSPID 
END
ELSE IF ISNULL(@nMODE,0)=3
BEGIN
	IF NOT EXISTS(SELECT MEMO_ID FROM PPC_TERM_CONDITION_MST(NOLOCK) WHERE MEMO_ID=@cID)
	BEGIN 
	SELECT @cMemoNo=memo_no,@cMemoID =MEMO_ID FROM PPC_TERM_CONDITION_MST     WHERE MEMO_ID=@cID
		UPDATE PPC_TERM_CONDITION_MST SET CANCELLED=1 WHERE MEMO_ID=@cMemoID

	END
END

            
GOTO END_PROC          
            
END TRY          
           
BEGIN CATCH         
  PRINT 'ENTER CATCH BLOCK'       
  SET @CERRMSG='SAVETRAN_TERM  : AT STEP - '+@CSTEP+', MESSAGE - '+ERROR_MESSAGE()    
  PRINT       @CERRMSG    
  GOTO END_PROC           
END CATCH          
           
END_PROC:          
            
  IF @@TRANCOUNT>0          
  BEGIN          
   IF ISNULL(@CERRMSG,'')<>''            
   BEGIN          
    PRINT 'ROLLBACK TRANSACTION'          
    ROLLBACK          
   END           
   ELSE          
   BEGIN          
    PRINT 'COMMIT'          
    COMMIT            
   END           
             
  END       
            
	        
    SELECT  ISNULL(@CERRMSG,'') AS ERRMSG         ,ISNULL(@cMemoNo,'') AS MEMO_NO ,ISNULL(@cMemoID,'') AS MEMO_ID     
           
END
