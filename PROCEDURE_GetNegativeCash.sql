create PROCEDURE GETNEGATIVECASH
(
	@DFROMDT DATETIME, 
	@DTODT DATETIME, 
	@CFINYEAR VARCHAR(10), 
	@CCOMPANYCODE VARCHAR(2)
)
--WITH ENCRYPTION
AS 
BEGIN

	DECLARE @CCASHINHANDTREE VARCHAR(2000),
			@CACCODE VARCHAR(10),
			@CACNAME VARCHAR(200),
			@CDEPTID VARCHAR(4),
			@CDEPTNAME VARCHAR(200),
			@NOPENING NUMERIC(14,2)

	DECLARE @TMPVD TABLE ( DEPT_ID VARCHAR(4), VOUCHER_DT DATETIME, DEBIT_AMOUNT NUMERIC(14,2), CREDIT_AMOUNT NUMERIC(14,2), CLOSING NUMERIC(14,2) )
			
	DECLARE @TMPOUTPUT TABLE ( AC_CODE VARCHAR(10), AC_NAME VARCHAR(200), DEPT_ID VARCHAR(4), VOUCHER_DT DATETIME, DEBIT_AMOUNT NUMERIC(14,2), CREDIT_AMOUNT NUMERIC(14,2), CLOSING NUMERIC(14,2) )

	SELECT @CCASHINHANDTREE = DBO.FN_ACT_TRAVTREE( '0000000014' )

	DECLARE LM_CUR CURSOR FOR
	SELECT TOP 1 AC_CODE, AC_NAME
	FROM LM01106 
	WHERE ( CHARINDEX( HEAD_CODE, @CCASHINHANDTREE ) > 0 )

	OPEN LM_CUR

	FETCH NEXT FROM LM_CUR INTO @CACCODE, @CACNAME
	WHILE @@FETCH_STATUS = 0
	BEGIN

		PRINT 'PROCESSING ACCOUNT ' + @CACNAME

		DECLARE LOC_CUR CURSOR FOR
		SELECT DEPT_ID, DEPT_NAME FROM LOCATION 
		WHERE LOC_TYPE = 1
		AND DEPT_ID = MAJOR_DEPT_ID

		OPEN LOC_CUR

		FETCH NEXT FROM LOC_CUR INTO @CDEPTID, @CDEPTNAME
		WHILE @@FETCH_STATUS = 0
		BEGIN

			PRINT 'PROCESSING LOCATION ' + @CDEPTID + ' ' + @CDEPTNAME

			DELETE FROM @TMPVD

			SELECT @NOPENING = DBO.FN_ACT_OPENING( @CACCODE, @CDEPTID, @DFROMDT, @CFINYEAR, @CCOMPANYCODE )


			INSERT @TMPVD ( DEPT_ID, VOUCHER_DT, DEBIT_AMOUNT, CREDIT_AMOUNT )
			SELECT  B.location_code  DEPT_ID, B.VOUCHER_DT, 
					SUM(A.DEBIT_AMOUNT) AS DEBIT_AMOUNT,
					SUM(A.CREDIT_AMOUNT) AS CREDIT_AMOUNT
			FROM VD01106 A 
			JOIN VM01106 B ON A.VM_ID = B.VM_ID
			WHERE A.AC_CODE = @CACCODE
			AND B.VOUCHER_DT BETWEEN @DFROMDT AND @DTODT
			AND B.DEPT_ID = @CDEPTID
			AND B.CANCELLED = 0
			GROUP BY B.location_code, B.VOUCHER_DT
			ORDER BY B.location_code, B.VOUCHER_DT

			UPDATE @TMPVD SET @NOPENING = CLOSING = ( @NOPENING + DEBIT_AMOUNT - CREDIT_AMOUNT )

			INSERT @TMPOUTPUT ( AC_CODE, AC_NAME, DEPT_ID, VOUCHER_DT, DEBIT_AMOUNT, CREDIT_AMOUNT, CLOSING )
			SELECT TOP 1 @CACCODE, @CACNAME, DEPT_ID, VOUCHER_DT, DEBIT_AMOUNT, CREDIT_AMOUNT, CLOSING
			FROM @TMPVD
			WHERE CLOSING <0

			FETCH NEXT FROM LOC_CUR INTO @CDEPTID, @CDEPTNAME
		END
		CLOSE LOC_CUR
		DEALLOCATE LOC_CUR

		FETCH NEXT FROM LM_CUR INTO @CACCODE, @CACNAME
	END
	CLOSE LM_CUR
	DEALLOCATE LM_CUR

	SELECT AC_CODE, AC_NAME, DEPT_ID, VOUCHER_DT , DEBIT_AMOUNT, CREDIT_AMOUNT,
	ABS(CLOSING) AS CLOSING, CASE WHEN CLOSING>=0 THEN 'DR' ELSE 'CR' END  AS CLOSING_CR_DR FROM @TMPOUTPUT
END
