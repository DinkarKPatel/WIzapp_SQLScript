CREATE PROCEDURE SP3S_RMOTB_SHEET
(
 @DASONDATE DATETIME='2018-11-29'
)
AS
BEGIN
     
     
     DECLARE @DTSQL NVARCHAR(MAX)
     
     IF OBJECT_ID('TEMPDB..#TMPRMREQ','U') IS NOT NULL
        DROP TABLE #TMPRMREQ
     
     SELECT C.ARTICLE_CODE,C.PARA1_CODE,C.PARA2_CODE,
     CONVERT(NUMERIC(14,2),SUM(C.QUANTITY*(C.AVG_QUANTITY+ISNULL(C.ADD_AVG_QUANTITY,0)))) AS REQ_QTY
     INTO #TMPRMREQ
     FROM ORD_PLAN_MST  A (NOLOCK)
     JOIN ORD_PLAN_DET B (NOLOCK) ON A.MEMO_ID =B.MEMO_ID
     JOIN ORD_PLAN_BOM_DET  C (NOLOCK) ON B.ROW_ID =C .REF_ROW_ID
     WHERE A.CANCELLED =0
     AND A.MEMO_DT <=@DASONDATE
     GROUP BY C.ARTICLE_CODE,C.PARA1_CODE,C.PARA2_CODE
     
      IF OBJECT_ID('TEMPDB..#TMPPOQTY','U') IS NOT NULL
        DROP TABLE #TMPPOQTY
     
     
     SELECT ART.ARTICLE_CODE,SKU .PARA1_CODE ,SKU.PARA2_CODE ,
     SUM(B.QUANTITY) AS PO_QTY,
     SUM(ISNULL(POD.PI_QTY,0)) AS PI_QTY 
     INTO #TMPPOQTY
     FROM POM01106 A
     JOIN POD01106 B ON A.PO_ID=B.PO_ID
     JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =B.PRODUCT_CODE 
     JOIN ARTICLE ART (NOLOCK) ON SKU.ARTICLE_CODE =ART.ARTICLE_CODE 
     JOIN #TMPRMREQ TMP ON ART.ARTICLE_CODE =TMP.ARTICLE_CODE 
     LEFT JOIN
     (
      SELECT PO_ROW_ID ,SUM(A.QUANTITY) AS PI_QTY
      FROM PID01106 A
      JOIN PIM01106 B ON A.MRR_ID =B.MRR_ID 
      WHERE B.CANCELLED=0
      AND PO_ROW_ID <>''
      GROUP BY PO_ROW_ID
     ) POD ON POD.PO_ROW_ID=B.ROW_ID 
     WHERE A.CANCELLED=0 
     AND ISNULL(B.PRODUCT_CODE,'') <>''
     --AND POD.PO_ROW_ID IS NULL
     GROUP BY ART.ARTICLE_CODE,SKU .PARA1_CODE ,SKU.PARA2_CODE 
     
     IF OBJECT_ID('TEMPDB..#TMPWHSTOCK','U') IS NOT NULL
        DROP TABLE #TMPWHSTOCK
     
     SELECT ART.ARTICLE_CODE ,SKU.PARA1_CODE,SKU.PARA2_CODE,
     SUM(PMT.QUANTITY_IN_STOCK) AS WH_STOCK
     INTO #TMPWHSTOCK
     FROM PMT01106 PMT (NOLOCK)
     JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =PMT.PRODUCT_CODE 
     JOIN ARTICLE ART (NOLOCK) ON SKU.ARTICLE_CODE =ART.ARTICLE_CODE 
     JOIN #TMPRMREQ TMP ON ART.ARTICLE_CODE =TMP.ARTICLE_CODE 
     GROUP BY ART.ARTICLE_CODE,SKU.PARA1_CODE,SKU.PARA2_CODE
    
  
	    SET @DTSQL=' SELECT SM.SECTION_NAME,SD.SUB_SECTION_NAME ,ART.ARTICLE_NO,
	    P1.PARA1_NAME,P2.PARA2_NAME,
	    A.REQ_QTY,ISNULL(B.PO_QTY,0) AS PO_QTY,
	    ISNULL(PI_QTY,0) AS GRN_QTY,
	    CONVERT(NUMERIC(10,2),ISNULL(B.PO_QTY,0)-ISNULL(PI_QTY,0)) AS PENDING_PO_QTY,
	    CONVERT(NUMERIC(10,2),ISNULL(C.WH_STOCK,0)) AS WH_STOCK,
	    CONVERT(NUMERIC(14,2),CASE WHEN A.REQ_QTY-((ISNULL(B.PO_QTY,0)-ISNULL(PI_QTY,0))+ISNULL(C.WH_STOCK,0))>=0
	    THEN A.REQ_QTY-((ISNULL(B.PO_QTY,0)-ISNULL(PI_QTY,0))+ISNULL(C.WH_STOCK,0)) ELSE
	    0 END ) AS PENDING_QTY,
	     ABS(CONVERT(NUMERIC(14,2),CASE WHEN A.REQ_QTY-((ISNULL(B.PO_QTY,0)-ISNULL(PI_QTY,0))+ISNULL(C.WH_STOCK,0))<0
	    THEN A.REQ_QTY-((ISNULL(B.PO_QTY,0)-ISNULL(PI_QTY,0))+ISNULL(C.WH_STOCK,0)) ELSE
	    0 END )) AS ACCESS_QTY,
	    (CONVERT(NUMERIC(18,2),ART.PURCHASE_PRICE*
	     CONVERT(NUMERIC(14,2),CASE WHEN A.REQ_QTY-((ISNULL(B.PO_QTY,0)-ISNULL(PI_QTY,0))+ISNULL(C.WH_STOCK,0))>=0
	    THEN A.REQ_QTY-((ISNULL(B.PO_QTY,0)-ISNULL(PI_QTY,0))+ISNULL(C.WH_STOCK,0)) ELSE
	    0 END )
	    )) AS OTB_VALUE,
	    ART.PURCHASE_PRICE
	    FROM #TMPRMREQ A
	    JOIN ARTICLE ART (NOLOCK) ON A.ARTICLE_CODE=ART.ARTICLE_CODE
	    JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE=A.PARA1_CODE
	    JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE=A.PARA2_CODE
	    JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE
	    JOIN SECTIONM SM (NOLOCK) ON SD.SECTION_CODE=SM.SECTION_CODE
	    LEFT JOIN #TMPPOQTY B ON  A.ARTICLE_CODE=B.ARTICLE_CODE AND A.PARA1_CODE=B.PARA1_CODE AND A.PARA2_CODE=B.PARA2_CODE 
	    LEFT JOIN #TMPWHSTOCK C ON  A.ARTICLE_CODE=C.ARTICLE_CODE AND A.PARA1_CODE=C.PARA1_CODE AND A.PARA2_CODE=C.PARA2_CODE '
	    PRINT @DTSQL
	    EXEC SP_EXECUTESQL @DTSQL
	    
	   
END
