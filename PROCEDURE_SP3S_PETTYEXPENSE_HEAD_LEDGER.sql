create PROCEDURE SP3S_PETTYEXPENSE_HEAD_LEDGER
(  
  @CDEPT_ID VARCHAR(5)=''  
 ,@DFROM_DT DATETIME=''   
 ,@DTO_DT DATETIME=''  
 ,@CAC_CODE VARCHAR(10)=''  
 ,@iSortMode int= 0  -- 0For Date Wise 1 For Credit Amount Debit Amount  
)  
--WITH ENCRYPTION  
AS  
/*EXEC SP3S_PETTYEXPENSE_HEAD_LEDGER '01','2013-04-01','2014-11-25'  
  EXEC SP3S_PETTYCASH_DETAILS 1,'','2013-04-01','2014-11-25'  
  EXEC SP3S_PETTYCASH_DETAILS 2,'','2013-11-12','2015-03-31'  
  EXEC SP3S_PETTYCASH_DETAILS 3,'','2013-11-12','2015-03-31'  
  EXEC SP3S_PETTYCASH_DETAILS 4,'','2013-11-12','2015-03-31'   
*/  
BEGIN  
 DECLARE @CCONSIDERALLCASHXN VARCHAR(1)  
  
 SELECT TOP 1 @CCONSIDERALLCASHXN=VALUE FROM CONFIG(NOLOCK) WHERE CONFIG_OPTION='CONSIDER_ALL_CASH_RECEIPTS'  
  
 SET @CCONSIDERALLCASHXN=ISNULL(@CCONSIDERALLCASHXN,0)    
   
 IF OBJECT_ID('TEMPDB..#LOC_EFF_DATES','U') IS NOT NULL  
  DROP TABLE #LOC_EFF_DATES  
   
 CREATE TABLE #LOC_EFF_DATES(DEPT_ID VARCHAR(5),EFF_DATE DATETIME,DOP_DATE DateTime)     
   
 INSERT #LOC_EFF_DATES(DEPT_ID,EFF_DATE)   
 SELECT DEPT_ID,MAX(OPENING_CASH_DATE) FROM LOC_REQ   
 WHERE (DEPT_ID=@CDEPT_ID OR @CDEPT_ID='')  
 GROUP BY DEPT_ID  
  
 IF NOT EXISTS(SELECT TOP 1 'U' FROM #LOC_EFF_DATES) OR @CDEPT_ID=''  
 BEGIN  
  INSERT #LOC_EFF_DATES(DEPT_ID,EFF_DATE)  
  SELECT a.dept_id,@DFROM_DT FROM  location a (NOLOCK)   
  LEFT JOIN #LOC_EFF_DATES b ON a.dept_id=b.dept_id  
  WHERE (a.dept_id=@CDEPT_ID OR @CDEPT_ID='')  
  AND b.DEPT_ID IS NULL  
 END  
   
 DECLARE @TBLOP_BAL TABLE(Dept_id varchar(5),OP_BAL NUMERIC(18,2))  
 DECLARE @TBLCL_BAL TABLE(Dept_id varchar(5),CL_BAL NUMERIC(18,2))  
 DECLARE @DOP_DATE DATETIME  
  
 CREATE TABLE #PETTYLEDGER (dept_id varCHAR(5),XN_ORDER NUMERIC(2,0),MEMO_DT DATETIME,AC_NAME VARCHAR(500),  
   NARRATION VARCHAR(500),DR_AMOUNT NUMERIC(18,2),CR_AMOUNT NUMERIC(18,2))  
   
 --WHILE EXISTS (SELECT TOP 1 DEPT_ID FROM  #LOC_EFF_DATES)  
 --BEGIN  
 -- SELECT TOP 1  @CDEPT_ID=dept_id FROM #LOC_EFF_DATES  
  
  Update a set  DOP_DATE=(CASE WHEN EFF_DATE<@DFROM_DT THEN @DFROM_DT-1 ELSE EFF_DATE-1 END)  
  FROM #LOC_EFF_DATES A  
   
  DELETE @TBLOP_BAL  
  DELETE @TBLCL_BAL  
  
  
  INSERT @TBLOP_BAL (Dept_id,OP_BAL)  
  select a.dept_id,a.ClosingBalance from PettyCashClosing A (nolock)  
  join #LOC_EFF_DATES b on a.dept_id=b.dept_id and a.closingDate=b.DOP_DATE  
  
  INSERT @TBLCL_BAL  (Dept_id,CL_BAL)  
  select a.dept_id,a.ClosingBalance   
  from PettyCashClosing A (nolock)  
  join #LOC_EFF_DATES b on a.dept_id=b.dept_id and a.closingDate=@DTO_DT  
  
  
   
  --OPENING BALANCE   
  INSERT INTO #PETTYLEDGER (dept_id,xn_order,memo_dt,ac_name,narration,dr_amount,cr_amount)  
  SELECT  a.dept_id, 0 AS XN_ORDER,DOP_DATE+1 AS MEMO_DT,'' AS AC_NAME,'OPENING CASH' AS NARRATION  
     ,(CASE WHEN OP_BAL>0 THEN OP_BAL ELSE 0 END) AS DR_AMOUNT  
     ,(CASE WHEN OP_BAL<0 THEN ABS(OP_BAL) ELSE 0 END) AS CR_AMOUNT  
  FROM @TBLOP_BAL a  
  join #LOC_EFF_DATES b on a.dept_id=b.dept_id  
  UNION ALL  
  --PETTY CASH IN FROM HEAD OFFICE  
  SELECT m.source_location_code dept_id, 1 AS XN_ORDER,M.receipt_dt ,'' AS AC_NAME,   
  'CASH FROM HO'  AS NARRATION  
     ,SUM(M.AMOUNT) AS DR_AMOUNT,0 AS CR_AMOUNT   
  FROM PCI_MST M (NOLOCK)  
  JOIN #LOC_EFF_DATES LED(NOLOCK) ON M.location_Code=LED.dept_id AND M.MEMO_DT>=LED.EFF_DATE  
  WHERE M.receipt_dt BETWEEN @DFROM_DT AND @DTO_DT  
  --AND SUBSTRING(M.MEMO_NO,3,2)=@CDEPT_ID   
  AND ISNULL(REFLIFTID,'')=''  
  AND M.CANCELLED =0  
  GROUP BY m.source_location_code,M.receipt_dt  --SUBSTRING(M.MEMO_NO,3,2)
  UNION ALL  
   
  SELECT  m.source_location_code dept_id,1 AS XN_ORDER,M.receipt_dt,'' AS AC_NAME,   
  'CASH FROM TILL'  AS NARRATION  
     ,SUM(M.AMOUNT) AS DR_AMOUNT,0 AS CR_AMOUNT   
  FROM PCI_MST M (NOLOCK)  
  JOIN #LOC_EFF_DATES LED(NOLOCK) ON M.location_Code=LED.dept_id AND M.MEMO_DT>=LED.EFF_DATE  
  WHERE M.receipt_dt BETWEEN @DFROM_DT AND @DTO_DT  
  --AND SUBSTRING(M.MEMO_NO,3,2)=@CDEPT_ID   
  AND ISNULL(REFLIFTID,'')<>''  
  AND M.CANCELLED =0  
  GROUP BY m.source_location_code,M.receipt_dt  
  UNION ALL  
   
  --PETTY CASH OUT TO HEAD OFFICE  
  SELECT  m.location_Code  dept_id,2 AS XN_ORDER,M.MEMO_DT,'' AS AC_NAME,'CASH TO HO' AS NARRATION  
      ,0 AS DR_AMOUNT,SUM(M.AMOUNT) AS CR_AMOUNT  
  FROM PCO_MST M (NOLOCK)  
  JOIN #LOC_EFF_DATES LED(NOLOCK) ON M.location_Code=LED.dept_id AND M.MEMO_DT>=LED.EFF_DATE  
  WHERE M.MEMO_DT BETWEEN @DFROM_DT AND @DTO_DT  
  --AND SUBSTRING(M.MEMO_NO,1,2)=@CDEPT_ID  
  GROUP BY m.location_Code ,M.MEMO_DT   
   
   
  UNION ALL  
     
    --RECEIPTS FROM SALES   
    SELECT  A.location_Code dept_id,3 AS XN_ORDER,A.CM_DT AS MEMO_DT,'' AS AC_NAME,'CASH FROM SALES' AS NARRATION  
     ,SUM(D.CASH_AMOUNT) AS DR_AMOUNT,0 AS CR_AMOUNT  
    FROM CMM01106 A    
    JOIN VW_BILL_PAYMODE D ON A.CM_ID = D.MEMO_ID AND D.XN_TYPE = 'SLS'    
    JOIN #LOC_EFF_DATES LED(NOLOCK) ON A.location_Code=LED.dept_id AND A.CM_DT>=LED.EFF_DATE  
    WHERE A.CANCELLED = 0 AND A.CM_DT BETWEEN @DFROM_DT AND @DTO_DT AND @CCONSIDERALLCASHXN=1  
   -- AND  LEFT(A.CM_NO,2) = @CDEPT_ID  
    AND   ISNULL(D.CASH_AMOUNT,0) <> 0   
    GROUP BY A.location_Code, A.CM_DT    
   
    UNION ALL    
     
    --NET CASH FROM WHOLE SALE TRANSACTION  
    SELECT  A.location_Code  dept_id,4 AS XN_ORDER,A.INV_DT AS MEMO_DT,'' AS AC_NAME,'CASH FROM WSL' AS NARRATION  
    ,SUM(D.CASH_AMOUNT) AS DR_AMOUNT,0 AS CR_AMOUNT  
    FROM INM01106 A    
    JOIN VW_BILL_PAYMODE D ON A.INV_ID = D.MEMO_ID AND D.XN_TYPE = 'WSL'    
    JOIN #LOC_EFF_DATES LED(NOLOCK) ON A.location_Code=LED.dept_id AND A.INV_DT>=LED.EFF_DATE  
    WHERE A.CANCELLED = 0 AND INV_DT BETWEEN @DFROM_DT AND @DTO_DT AND @CCONSIDERALLCASHXN=1  
    AND D.CASH_AMOUNT <> 0    
  --  AND LEFT(A.INV_ID,2) = @CDEPT_ID  
    GROUP BY A.location_Code , A.INV_DT    
   
    UNION ALL     
     
    --NET CASH OUT FROM WHOLE SALE RETURN TRANSACTION  
    SELECT  A.location_Code  dept_id,5 AS XN_ORDER,A.CN_DT AS MEMO_DT,'' AS AC_NAME,'CASH OUT WSR' AS NARRATION  
    ,0 AS DR_AMOUNT,SUM(D.CASH_AMOUNT) AS CR_AMOUNT  
    FROM CNM01106 A    
    JOIN VW_BILL_PAYMODE D ON A.CN_ID = D.MEMO_ID AND D.XN_TYPE = 'WSR'    
    JOIN #LOC_EFF_DATES LED(NOLOCK) ON A.location_Code=LED.dept_id AND A.CN_DT>=LED.EFF_DATE  
    WHERE D.CASH_AMOUNT <> 0    
    AND CANCELLED = 0    
    --AND LEFT(A.CN_ID,2) = @CDEPT_ID  
    AND CN_DT BETWEEN @DFROM_DT AND @DTO_DT AND @CCONSIDERALLCASHXN=1  
    GROUP BY A.location_Code,A.CN_DT  
           
    UNION ALL  
      
    --CASH FROM ADVANCES/OS RCT  
    SELECT  A.location_Code dept_id,6 AS XN_ORDER,A.ADV_REC_DT AS MEMO_DT,'' AS AC_NAME,'RECEIPTS/PAYMENTS' AS NARRATION  
    ,(CASE WHEN SUM(CASE WHEN ARC_TYPE=1 THEN D.CASH_AMOUNT ELSE -D.CASH_AMOUNT END)>0 THEN SUM(CASE WHEN ARC_TYPE=1 THEN D.CASH_AMOUNT ELSE -D.CASH_AMOUNT END)  
   ELSE 0 END) AS DR_AMOUNT  
    ,(CASE WHEN SUM(CASE WHEN ARC_TYPE=1 THEN D.CASH_AMOUNT ELSE -D.CASH_AMOUNT END)<0 THEN ABS(SUM(CASE WHEN ARC_TYPE=1 THEN D.CASH_AMOUNT ELSE -D.CASH_AMOUNT END))  
   ELSE 0 END) AS CR_AMOUNT  
    FROM ARC01106 A    
    JOIN VW_BILL_PAYMODE D ON A.ADV_REC_ID = D.MEMO_ID AND D.XN_TYPE = 'ARC'    
    JOIN #LOC_EFF_DATES LED(NOLOCK) ON A.location_Code=LED.dept_id AND A.ADV_REC_DT>=LED.EFF_DATE  
    WHERE A.CANCELLED = 0  AND D.CASH_AMOUNT <> 0    
    --AND  LEFT(A.ADV_REC_NO,2) = @CDEPT_ID   
    AND   A.ADV_REC_DT BETWEEN @DFROM_DT AND @DTO_DT AND @CCONSIDERALLCASHXN=1  
    GROUP BY A.location_Code ,A.ADV_REC_DT       
      
    UNION ALL  
    ---CASH EXPENSES AND RECEIPTS   
    SELECT  PEM.location_Code dept_id,7 AS XN_ORDER,PEM.PEM_MEMO_DT AS MEMO_DT,LM.AC_NAME,PED.NARRATION  
     ,SUM(CASE WHEN PED.XN_TYPE='CR' THEN XN_AMOUNT ELSE 0 END) AS DR_AMOUNT  
     ,SUM(CASE WHEN PED.XN_TYPE='DR' THEN XN_AMOUNT ELSE 0 END) AS CR_AMOUNT  
  FROM PEM01106 PEM  
  JOIN PED01106 PED ON PEM.PEM_MEMO_ID=PED.PEM_MEMO_ID     
  JOIN LM01106 LM ON PED.AC_CODE=LM.AC_CODE  
  JOIN #LOC_EFF_DATES LED(NOLOCK) ON PEM.location_Code=LED.dept_id AND PEM.PEM_MEMO_DT>=LED.EFF_DATE  
  WHERE PEM.CANCELLED=0 AND PEM.PEM_MEMO_DT BETWEEN @DFROM_DT AND @DTO_DT  
  --AND LEFT(PEM.PEM_MEMO_ID,2)=@CDEPT_ID  
  AND (@CAC_CODE='' OR PED.AC_CODE=@CAC_CODE)  
  GROUP BY PEM.location_Code,PEM.PEM_MEMO_DT,LM.AC_NAME,PED.NARRATION  
  ORDER BY MEMO_DT,XN_ORDER  
  
 -- DELETE FROM #LOC_EFF_DATES WHERE dept_id=@CDEPT_ID  
 --END  
  
 ALTER TABLE #PETTYLEDGER ADD ID INT   
  
 ;with cte as  
 (  
   select *,sr=row_number() over(partition by dept_id ORDER BY (CASE WHEN NARRATION= 'OPENING CASH' THEN 0 ELSE 1 END),  
         MEMO_DT,CR_AMOUNT ,DR_AMOUNT  )  
   from #PETTYLEDGER  
 )  
  
 update cte set ID=sr  
  
   
 SELECT dept_id,CONVERT(VARCHAR,MEMO_DT,105) AS XN_DT,AC_NAME,NARRATION,DR_AMOUNT,CR_AMOUNT   
    ,(SELECT SUM(DR_AMOUNT-CR_AMOUNT) FROM #PETTYLEDGER B WHERE b.dept_id=a.dept_id AND B.ID<=A.ID) AS CLOSING,  
    CASE WHEN DR_AMOUNT>0 THEN 'RECEIPT'ELSE 'PAYMENT' END PAY_TYPE  
 FROM #PETTYLEDGER A  
 ORDER BY  dept_id,(CASE WHEN NARRATION= 'OPENING CASH' THEN 0 ELSE 1 END),MEMO_DT,CR_AMOUNT ,DR_AMOUNT    
 --order by MEMO_DT,CR_AMOUNT ,CR_AMOUNT   
   
 --UNION ALL    
 --CLOSING BALANCE   
 --SELECT 8 AS XN_ORDER,@DTO_DT AS MEMO_DT,'' AS AC_NAME,'CLOSING CASH' AS NARRATION  
 --   ,(CASE WHEN CL_BAL>0 THEN CL_BAL ELSE 0 END) AS DR_AMOUNT  
 --   ,(CASE WHEN CL_BAL<0 THEN ABS(CL_BAL) ELSE 0 END) AS CR_AMOUNT  
 --FROM @TBLCL_BAL     
 --ORDER BY MEMO_DT,XN_ORDER    
END  
--END OF PROCEDURE - SP3S_PETTYEXPENSE_HEAD_LEDGER