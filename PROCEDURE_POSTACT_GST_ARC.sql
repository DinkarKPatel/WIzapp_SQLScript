CREATE PROCEDURE POSTACT_GST_ARC     --(LocId 3 digit change by Sanjay:26-11-2024 left changes by concerned developer)
(    
 @DTTO DATETIME,    
 @CDEPTID VARCHAR(4)='',
 @NLOOP NUMERIC(1,0),
 @BLOC BIT=0,
 @nSpId NUMERIC(10)=0
)    
AS    
BEGIN    
	
	--SET TRANSACTION ISOLATION LEVEL READ COMMITTED    
	 
   DECLARE @CSTEP VARCHAR(10),@BPOSTDISCOUNTSEPARATELY BIT,@CDISCACCODE VARCHAR(10),@BPOSTFREIGHTSEPARATELY BIT,
   @CCASHACCODE VARCHAR(10),@BPOSTOCTROISEPARATELY BIT,@dFromDt DATETIME,@cFinYear VARCHAR(5),
   @BPOSTINSURANCESEPARATELY BIT,@CINSURANCEACCODE VARCHAR(10),    
   @BPOSTOTHERCHARGESSEPARATELY BIT,@BPOSTROUNDOFFSEPARATELY BIT,    
   @CCUSTOMERCONTROLACCODESALE CHAR(10),@CCUSTOMERCONTROLACCODECN CHAR(10),@NCTR NUMERIC(10,0),    
   @NSUBTOTAL NUMERIC(14,2),@NTAXAMOUNT NUMERIC(14,2), @CPURACCODE VARCHAR(50),@CTAXACCODE VARCHAR(100),    
   @LPOSTTAXSEPARATELY NUMERIC(14,2),@CADV_REC_ID VARCHAR(50),@LOUTSTATIONPARTY BIT,@TMPDR NUMERIC(14,2),    
   @TMPCR NUMERIC(14,2),@CCURSTATECODE VARCHAR(10),
   @CLASTBILLNO VARCHAR(40),@DTMPVENDORBILLDT DATETIME,@CRMLIST VARCHAR(300),@NTMPCREDITDAYS NUMERIC(10),    
   @NTMPCRDISCOUNTPERCENTAGE NUMERIC(14,2),@DLASTINVDT DATETIME,@CVOUCHERCODE VARCHAR(10),    
   @COLDBILLTYPE VARCHAR(10),@CLASTACCODE VARCHAR(10),@CLASTPARTYNAME VARCHAR(100),@NTOTQUANTITY NUMERIC(14,2),    
   @NTOTNETAMOUNT NUMERIC(14,2),@CDEPTNAME VARCHAR(100),@CVOUCHERNO VARCHAR(10),@cHoLocId VARCHAR(4),    
   @BBILLBYBILL BIT,@CROUNDOFFACCODE CHAR(10),@CXNNO VARCHAR(50),@DXNDT DATETIME,@BBLANKACFOUND BIT,@cPostingonCustCode VARCHAR(2),
   @CERRORMSG VARCHAR(MAX), @CHEAD_CODE VARCHAR(MAX) ,@cNewAcname varchar(500),@cFirstName varchar(500),
   @cLastName varchar(500),@cUserCustCode VARCHAR(50),@cMobile VARCHAR(50),@cCREATELEDGERFORCUSTOMER varchar(2),@bRetainCustomerLedger bit,@cRetainCustomerLedger VARCHAR(2)
     
   SET @CSTEP=10    
   
   DECLARE @CPARTYACCODE VARCHAR(10),@CPARTYSTATECODE VARCHAR(10),@NNETAMOUNT NUMERIC(14,2),    
   @NDISCAMOUNT NUMERIC(14,2),@NFREIGHT NUMERIC(14,2), @NOTHER NUMERIC(14,2),@NROUNDOFF NUMERIC(14,2),    
   @NDRTOTAL NUMERIC(14,2),@NCRTOTAL NUMERIC(14,2),@CCUTOFFDATE VARCHAR(20),@CXNTYPE VARCHAR(10)    
   ,@CAC_CODE VARCHAR(20),@CVDID VARCHAR(40),@BCREATELEDGERFORCUSTOMER BIT
   ,@BPOSTCONTROLACENTRIESBILLBYBILL BIT,@CLASTVDID INT,@NARCT INT    
   ,@CPOSTACCODE VARCHAR(20),@NARCTYPE NUMERIC(2),@CNARRATION VARCHAR(500),@CFEECHARGESACCODE CHAR(10),@CGIFTVOUCHERACCODE CHAR(10),@CDISCOUNTCARDACCODE CHAR(10),
   @CADVANCERECEIVEGSTAC CHAR(10),@CADVANCESALEGSTAC CHAR(10)     
     
 SET @CCASHACCODE=''    
 SELECT @CCUSTOMERCONTROLACCODESALE='',@CCUSTOMERCONTROLACCODECN=''    

	
	
	SELECT TOP 1 @cPostingonCustCode=VALUE FROM config (NOLOCK) 
	WHERE config_option='sls_posting_on_custcode'

	SET @cPostingonCustCode=isnull(@cPostingonCustCode,'')

 IF OBJECT_ID('TEMPDB..#ERRORS','U') IS NOT NULL
	DROP TABLE #ERRORS        
 
 	DECLARE @tAdjLocs TABLE (loc_mode NUMERIC(1,0))

	INSERT @tAdjLocs
	SELECT 1 --- Source Loc dR
	UNION
	SELECT 2 --- Target Loc cR
	UNION
	SELECT 3 --- Target Loc DR

    SET @CSTEP=20    
    --THIS TABLE VARIABLE STORE ERROR OF OF MEMO ID    
    CREATE TABLE #ERRORS
	(
		XN_TYPE VARCHAR(10),SOURCE_TABLE VARCHAR(200),COLUMNNAME VARCHAR(200),GST_PERCENTAGE NUMERIC(6,2),ERR_DESC VARCHAR(500)
	)   

        
    SET @CSTEP=30    
 DECLARE @VCHC TABLE     
 (    
  AC_CODE CHAR(10),NARRATION VARCHAR(200),XN_NO VARCHAR(30),    
  XN_DT DATETIME,DEPT_ID VARCHAR(4),AMOUNT NUMERIC(14,4),XN_ID VARCHAR(50),    
  REF_BILL_NO VARCHAR(50),REF_BILL_DATE DATETIME, ENTRY_ID INT    
  ,CRDAYS NUMERIC(5),CANCELLED BIT,location_code varchar(4)  
 )    
     
	 
 SET @CSTEP=40    
 DECLARE @VDC TABLE     
 (    
  VD_ID VARCHAR(60),    VM_ID VARCHAR(40),    AC_CODE CHAR(10),     
  NARRATION VARCHAR(200),   DEBIT_AMOUNT NUMERIC(14,4),  CREDIT_AMOUNT NUMERIC(14,4),    
  X_TYPE CHAR(2),     VS_AC_CODE CHAR(10),    REF_BILL_NO VARCHAR(40),     
  CREDIT_DAYS NUMERIC(10),  CR_DISCOUNT_PERCENTAGE NUMERIC(14,2),      
  VAT_ENTRY BIT,REF_BILL_DATE DATETIME, AC_NAME VARCHAR(100),RECON_DT DATETIME,cost_center_dept_id VARCHAR(4) ,bank_ac_charindex NUMERIC(10,0)   
 )    
     
 SET @CSTEP=50    
 DECLARE @VMC TABLE    
 (    
  VM_ID VARCHAR(400),    VOUCHER_NO VARCHAR(400),   VOUCHER_DT DATETIME,     
  VOUCHER_CODE CHAR(10),   DEPT_ID VARCHAR(4),    BILL_TYPE VARCHAR(300),    
  BILL_NO VARCHAR(200),    BILL_ID VARCHAR(220),    BILL_DT DATETIME,     
  BILL_AC_CODE VARCHAR(100),  DRTOTAL NUMERIC(20,2),   CRTOTAL NUMERIC(20,2),     
  CASH_VOUCHER BIT,     SALE_VOUCHER BIT,     QUANTITY NUMERIC(20,2),     
  ANGADIA_CODE CHAR(70),    LR_NO VARCHAR(500),    LR_DT DATETIME,    
  PARTY_NAME VARCHAR(1000),  NET_AMOUNT NUMERIC(20,2),   BILL_STATUS VARCHAR(1000),    
  RM_LIST VARCHAR(3000),   CANCELLED BIT,     DEPT_NAME VARCHAR(100),    
  VOUCHER_TYPE VARCHAR(100)     
 )    
     
 SET @CSTEP=60    
 PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)
 DECLARE @VLINK TABLE    
 (    
  VM_ID VARCHAR(100),location_code VARCHAR(4), MEMO_ID VARCHAR(100),XN_TYPE VARCHAR(20),LAST_UPDATE DATETIME,memo_dt DATETIME ,memo_no VARCHAR(20) ,cancelled BIT,voucher_code VARCHAR(10)   
 )    
     
 DECLARE @TBILL_BY_BILL_REF TABLE(VD_ID VARCHAR(50),REF_NO VARCHAR(40),AMOUNT NUMERIC(18,4),LAST_UPDATE DATETIME    
        ,X_TYPE VARCHAR(20),CR_DAYS NUMERIC(5),VM_ID VARCHAR(40))    
     
 SELECT TOP 1 @CCUTOFFDATE=CUTOFFDATE FROM GST_ACCOUNTS_CONFIG_MST WHERE XN_TYPE='ARC'

 SELECT TOP 1 @CADVANCERECEIVEGSTAC=VALUE FROM GST_ACCOUNTS_CONFIG_DET_OTHERS 
 WHERE XN_TYPE='ARC' AND COLUMNNAME='GST_ADVANCE_RECEIVED_AC_CODE'
		    
 SELECT @CROUNDOFFACCODE=VALUE
 FROM GST_ACCOUNTS_CONFIG_DET_OTHERS WHERE XN_TYPE='ARC' AND COLUMNNAME='ROFF_AC_CODE'
 
 SELECT @cHoLocId=value FROM  config(NOLOCK) WHERE config_option='ho_location_id'

 SET @cFinYear='01'+DBO.FN_GETFINYEAR(@DTTO)      

 SET @dFromDt=dbo.FN_GETFINYEARDATE(@cFinYear,1)

     
 SET @CCUTOFFDATE=ISNULL(@CCUTOFFDATE,'')    
     
 SET @CSTEP=70    
 
 
BEGIN TRY    
       
   SET @CSTEP=80    
   IF OBJECT_ID('TEMPDB..#ARCTABLE','U') IS NOT NULL    
    DROP TABLE #ARCTABLE     
       
   SET @CSTEP=90    
 PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)
   --THIS TABLE STORE ALL PENDING MEMO_ID     
   CREATE TABLE #ARCTABLE(MEMO_ID VARCHAR(30),MODE VARCHAR(10),last_update DATETIME,customer_ac_code CHAR(10),arc_customer_code VARCHAR(15))    
   
   --SELECT @CCUTOFFDATE,@CDEPTID    
   
 --  SET @CCUTOFFDATE='2018-01-20'
   
   SET @CSTEP=100    
   --GETTING LIST OF RECEIPTS/PAYMENTS THAT QUALIFY FOR VOUCHER POSTING    
         INSERT INTO #ARCTABLE (MEMO_ID,MODE,last_update,arc_customer_code)    
         SELECT A.ADV_REC_ID,'ARC' AS MODE,a.last_update,a.customer_code arc_customer_code     
         FROM ARC01106 A    
         JOIN LOCATION SL ON SL.DEPT_ID =a.location_Code    
		 LEFT JOIN loc_accounting_company lac1 (NOLOCK) ON lac1.pan_no=sl.PAN_NO
		 LEFT JOIN loc_accounting_company lac2 (NOLOCK) ON lac2.pan_no=SUBSTRING(sl.loc_gst_no,3,10)         
		 LEFT OUTER JOIN     
         (    
			SELECT B.MEMO_ID,B.LAST_UPDATE    
			FROM POSTACT_VOUCHER_LINK B     
			JOIN VM01106 C ON C.VM_ID = B.VM_ID     
			WHERE C.CANCELLED=0 AND B.XN_TYPE = 'ARC'     
         )VM  ON A.ADV_REC_ID = VM.MEMO_ID      
         WHERE     
          -- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES    
         ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)      
         /*RECEIPTS/PAYMENTS ADV_REC_DT IS LESS THAN THE SPECIFIED DATE.*/    
         AND A.ADV_REC_DT <= @DTTO    
         /*IF CUTOFF DATE IS SPECIFIED, CONSIDER RECEIPTS/PAYMENTS AFTER THE CUTOFF DATE*/    
         AND (ISNULL(@CCUTOFFDATE,'')='' OR A.ADV_REC_DT>@CCUTOFFDATE)    
         /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/    
         AND (ISNULL(@CDEPTID,'')='' OR a.location_Code=@CDEPTID)    
         /*RECEIPTS/PAYMENTS IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/    
         AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE)     
		 AND a.adv_rec_dt BETWEEN @dFromDt AND @DTTO
         AND (lac1.pan_no IS NOT NULL OR lac2.pan_no IS NOT NULL)    
	
	--if @@spid=110
	--		SELECT 'check arctable', * FROM #ARCTABLE ORDER BY MEMO_ID    

			
	             
   SET @CSTEP=120    
   SELECT @CDISCACCODE = VALUE
   FROM GST_ACCOUNTS_CONFIG_DET_OTHERS WHERE XN_TYPE='ARC' AND COLUMNNAME='DISCOUNT_AC_CODE'
   
   SELECT @CCASHACCODE = VALUE
   FROM GST_ACCOUNTS_CONFIG_DET_PAYMODES WHERE COLUMNNAME='CASH_AC_CODE'
    

		   

	SELECT @CCUSTOMERCONTROLACCODESALE = VALUE
	FROM config (nolock) WHERE config_option='CUSTOMER_CONTROL_AC_CODE'

	SET @CCUSTOMERCONTROLACCODECN = @CCUSTOMERCONTROLACCODESALE
    	
	SET @BCREATELEDGERFORCUSTOMER=0
	
    SELECT TOP 1 @cCREATELEDGERFORCUSTOMER= value  FROM config (NOLOCK) WHERE config_option='CREATE_LEDGER_FOR_EACHCUSTOMER'

	IF ISNULL(@cCREATELEDGERFORCUSTOMER,'')='1'
		SET @BCREATELEDGERFORCUSTOMER=1
		   
	SET @bRetainCustomerLedger=0
	IF @BCREATELEDGERFORCUSTOMER=0
	BEGIN
		SELECT TOP 1 @cRetainCustomerLedger=value FROM config (NOLOCK) WHERE config_option='RetainCustomerLedgerInPosting'
		IF ISNULL(@cRetainCustomerLedger,'')='1'
		BEGIN
			SET @bRetainCustomerLedger=1
			UPDATE a SET customer_ac_code=b.ac_code FROM #ARCTABLE a JOIN custdym b (NOLOCK) ON b.customer_code=a.arc_customer_code
			WHERE ISNULL(b.ac_code,'') NOT IN ('','0000000000')

			UPDATE a SET customer_ac_code=b.ac_code FROM #ARCTABLE a
			JOIN lmp01106 b (NOLOCK) ON b.CUSTOMER_CODE=a.arc_customer_code
			WHERE ISNULL(b.customer_code,'') NOT IN ('','0000000000','000000000000')
		END
	END
   
   SELECT @CFEECHARGESACCODE=VALUE   
   FROM GST_ACCOUNTS_CONFIG_DET_OTHERS WHERE XN_TYPE='ARC' AND COLUMNNAME='FEE_CHARGES_AC_CODE' 
   
   SELECT @CGIFTVOUCHERACCODE=VALUE
   FROM GST_ACCOUNTS_CONFIG_DET_OTHERS WHERE XN_TYPE='ARC' AND COLUMNNAME='GIFT_VOUCHER_AC_CODE' 
   
   SELECT @CDISCOUNTCARDACCODE=VALUE
   FROM GST_ACCOUNTS_CONFIG_DET_OTHERS WHERE XN_TYPE='ARC' AND COLUMNNAME='DISCOUNT_CARD_AC_CODE' 
			       
   SET @CSTEP=130    
   SELECT @CDISCACCODE=ISNULL(@CDISCACCODE,''),    
      @CCASHACCODE=ISNULL(@CCASHACCODE,''),    
    @CCUSTOMERCONTROLACCODESALE=ISNULL(@CCUSTOMERCONTROLACCODESALE,'')   
   ,@CCUSTOMERCONTROLACCODECN=ISNULL(@CCUSTOMERCONTROLACCODECN,'')    
   ,@CFEECHARGESACCODE=ISNULL(@CFEECHARGESACCODE,'')    
   ,@CGIFTVOUCHERACCODE=ISNULL(@CGIFTVOUCHERACCODE,'')    
   ,@CDISCOUNTCARDACCODE=ISNULL(@CDISCOUNTCARDACCODE,'')    
       
          
      /*    
    IF CREATE LEDGER FOR EACH CUSTOMER IS SELECTED, THEN LEDGER ACCOUNT FOR EACH CUSTOMER WOULD BE     
    POSTED WITH ACCOUNT ELSE CUSTOMER CONTROL ACCOUNT WOULD BE POSTED.SO, IF CREATE LEDGER FOR    
    EACH CUSTOMER IS FALSE, DONOT PROCEED IF CUSTOMER CONTROL ACCOUNT IS NOT DEFINED.    
   */    
   SET @CSTEP=140    
   PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)
          
   SET @BPOSTCONTROLACENTRIESBILLBYBILL=0    
       
   IF @BCREATELEDGERFORCUSTOMER<>1    
   BEGIN    
		SELECT @BPOSTCONTROLACENTRIESBILLBYBILL=BILL_BY_BILL FROM LMV01106    
		WHERE AC_CODE=@CCUSTOMERCONTROLACCODESALE
   END    
          
   SET @CSTEP = 150    
   CREATE INDEX IX_TEMP_ARCTABLE_RM_ID ON #ARCTABLE(MEMO_ID)    

   IF OBJECT_ID('TEMPDB..#V_PROCESS_PAYMODES','U') IS NOT NULL
		DROP TABLE #V_PROCESS_PAYMODES		
   		   		   
   SELECT A.PAYMODE_CODE, PAYMODE_GRP_CODE,
   CONVERT(VARCHAR(50),A.PAYMODE_CODE+'_DOC') AS COLUMNNAME,
   '0000000000' AS AC_CODE,CONVERT(VARCHAR(200),' A/C') AS COLUMNDESC 
   INTO #V_PROCESS_PAYMODES FROM PAYMODE_XN_DET A
   JOIN #ARCTABLE B ON A.MEMO_ID=B.MEMO_ID
   JOIN PAYMODE_MST C ON C.PAYMODE_CODE=A.PAYMODE_CODE
   WHERE A.XN_TYPE='ARC' AND A.PAYMODE_CODE NOT IN('0000001','0000004','CMR0001') AND C.PAYMODE_GRP_CODE NOT IN ('WCGV001','0000001')
   GROUP BY A.PAYMODE_CODE,PAYMODE_GRP_CODE
  
  	
   SET @CSTEP = 160   
   PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113) 	
   INSERT #V_PROCESS_PAYMODES (PAYMODE_CODE, COLUMNNAME,PAYMODE_GRP_CODE,AC_CODE,COLUMNDESC)
   SELECT PAYMODE_CODE,PAYMODE_CODE+'_COMM' AS COLUMNNAME,PAYMODE_GRP_CODE,'0000000000' AS AC_CODE,
   ' COMMISSION A/C'
   FROM #V_PROCESS_PAYMODES A WHERE PAYMODE_GRP_CODE='0000002'
	
   SET @CSTEP = 165
   
   INSERT #V_PROCESS_PAYMODES (PAYMODE_CODE,PAYMODE_GRP_CODE,COLUMNNAME,COLUMNDESC,AC_CODE)
   SELECT TOP 1 '' AS PAYMODE_CODE,'' AS PAYMODE_GRP_CODE,
   'CASH_AC_CODE' AS COLUMNNAME,'CASH A/C' AS COLUMNDESC,'0000000000' AS AC_CODE 
   FROM PAYMODE_XN_DET A
   JOIN #ARCTABLE B ON A.MEMO_ID=B.MEMO_ID
   JOIN PAYMODE_MST C ON C.PAYMODE_CODE=A.PAYMODE_CODE
   WHERE A.XN_TYPE='ARC' AND C.PAYMODE_GRP_CODE='0000000'
  
   
   SET @CSTEP=170
   PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)

   IF OBJECT_ID('TEMPDB..#V_PROCESS_OTHERS','U') IS NOT NULL
		DROP TABLE #V_PROCESS_OTHERS



	SELECT TOP 1 'ARC' AS XN_TYPE,'DISCOUNT_AC_CODE' AS  COLUMNNAME,'DISCOUNT A/C' AS COLUMNDESC
	INTO #V_PROCESS_OTHERS FROM ARC01106 A 
	JOIN #ARCTABLE B ON A.ADV_REC_ID=B.MEMO_ID
	WHERE DISCOUNT_AMOUNT<>0
	UNION ALL
	SELECT TOP  1 'ARC' AS  XN_TYPE,'FEE_CHARGES_AC_CODE' AS  COLUMNNAME,'FEE/CHARGES A/C' AS COLUMNDESC
	FROM ARC01106 A 
	JOIN #ARCTABLE B ON A.ADV_REC_ID=B.MEMO_ID AND ARCT=3
	UNION ALL
	SELECT TOP  1 'ARC' AS  XN_TYPE,'GIFT_VOUCHER_AC_CODE' AS  COLUMNNAME,'GIFT VOUCHER A/C' AS COLUMNDESC
	FROM ARC01106 A 
	JOIN #ARCTABLE B ON A.ADV_REC_ID=B.MEMO_ID AND ARCT=4
	UNION ALL
	SELECT TOP  1 'ARC' AS  XN_TYPE,'DISCOUNT_CARD_AC_CODE' AS  COLUMNNAME,'DISCOUNT CARD A/C' AS COLUMNDESC
	FROM ARC01106 A 
	JOIN #ARCTABLE B ON A.ADV_REC_ID=B.MEMO_ID AND ARCT=5
	UNION ALL
	SELECT TOP  1 'ARC' AS  XN_TYPE,'ROFF_AC_CODE' AS  COLUMNNAME,'ROUND OFF A/C' AS COLUMNDESC
	FROM ARC01106 A 
	JOIN #ARCTABLE B ON A.ADV_REC_ID=B.MEMO_ID 
	UNION ALL
	SELECT TOP  1 'ARC' AS  XN_TYPE,'GST_ADVANCE_RECEIVED_AC_CODE' AS  COLUMNNAME,'ADVANCE RECEIVED A/C' AS COLUMNDESC
	FROM ARC01106 A 
	JOIN #ARCTABLE B ON A.ADV_REC_ID=B.MEMO_ID
	WHERE ARC_TYPE=1 AND ARCT=2
			      
   SET @CSTEP = 185    
   PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)   
   ---GETTING LIST OF ALL ERROR FROM RECEIPTS/PAYMENTS AND CONVERT MRN TO BILL    
   IF OBJECT_ID('TEMPDB..#V_PROCESS','U') IS NOT NULL
		DROP TABLE #V_PROCESS	

   SELECT '' AS SECTION_CODE,'' AS SUB_SECTION_CODE, 'ARC' AS POSTING_XN_TYPE, GST_PERCENTAGE,'0000000000' AS IGST_REVENUE_AC_CODE
				   ,'0000000000' AS IGST_TAX_AC_CODE
				  ,'0000000000' AS LGST_REVENUE_AC_CODE
				  ,'0000000000' AS CGST_TAX_AC_CODE
				  ,'0000000000' AS SGST_TAX_AC_CODE,
				  '0000000000' AS OTHER_CHARGES_IGST_REVENUE_AC_CODE
				   ,'0000000000' AS OTHER_CHARGES_IGST_TAX_AC_CODE
				  ,'0000000000' AS OTHER_CHARGES_LGST_REVENUE_AC_CODE
				  ,'0000000000' AS OTHER_CHARGES_CGST_TAX_AC_CODE
				  ,'0000000000' AS OTHER_CHARGES_SGST_TAX_AC_CODE
				  ,0 AS OTHERCHARGES
				  ,0 AS OTHER_CHARGES_GST_PERCENTAGE		
				  ,0 gst_cess_percentage,'' gst_cess_ac_code,0 cancelled
   INTO #V_PROCESS	
   FROM ARC01106 A 
   JOIN #ARCTABLE B ON A.ADV_REC_ID=B.MEMO_ID
   WHERE ISNULL(A.CGST_AMOUNT,0)<>0 OR ISNULL(A.SGST_AMOUNT,0)<>0 OR ISNULL(A.IGST_AMOUNT,0)<>0
   GROUP BY GST_PERCENTAGE
   UNION
   SELECT '' AS SECTION_CODE,'' AS SUB_SECTION_CODE, 'ARC' AS POSTING_XN_TYPE, GST_PERCENTAGE,'0000000000' AS IGST_REVENUE_AC_CODE
				   ,'0000000000' AS IGST_TAX_AC_CODE
				  ,'0000000000' AS LGST_REVENUE_AC_CODE
				  ,'0000000000' AS CGST_TAX_AC_CODE
				  ,'0000000000' AS SGST_TAX_AC_CODE,
				  '0000000000' AS OTHER_CHARGES_IGST_REVENUE_AC_CODE
				   ,'0000000000' AS OTHER_CHARGES_IGST_TAX_AC_CODE
				  ,'0000000000' AS OTHER_CHARGES_LGST_REVENUE_AC_CODE
				  ,'0000000000' AS OTHER_CHARGES_CGST_TAX_AC_CODE
				  ,'0000000000' AS OTHER_CHARGES_SGST_TAX_AC_CODE
				  ,0 AS OTHERCHARGES
				  ,0 AS OTHER_CHARGES_GST_PERCENTAGE		
				  ,0 gst_cess_percentage,'' gst_cess_ac_code,0 cancelled
   FROM paymode_xn_det A (NOLOCK) 
   JOIN #ARCTABLE B ON A.memo_id=B.MEMO_ID
   JOIN arc01106 c (NOLOCK) ON c.adv_rec_id=a.adj_memo_id
   WHERE a.xn_type='ARC' AND a.PAYMODE_CODE='0000002' AND  ISNULL(c.CGST_AMOUNT,0)<>0 OR ISNULL(c.SGST_AMOUNT,0)<>0 OR ISNULL(c.IGST_AMOUNT,0)<>0
   GROUP BY GST_PERCENTAGE
   
   --SELECT 'BEFORE APPLYING ACCOUNT CODES',* FROM #V_PROCESS	
   			
   EXEC SP3S_GET_POSTING_BLANKAC
	@CXNTYPE='ARC',
	@NLOOP=@NLOOP,
	@CERRORMSG=@CERRORMSG OUTPUT,
	@BBLANKACFOUND=@BBLANKACFOUND OUTPUT		

	IF @BBLANKACFOUND=1 OR @CERRORMSG<>'' OR @NLOOP=0
		GOTO END_PROC

   
   --SELECT 'AFTER APPLYING ACCOUNT CODES',* FROM #V_PROCESS	
   --SELECT 'CHECK V_PROCESS_PAYMODES',* FROM #V_PROCESS_PAYMODES           
   /*IF CREATE LEDGER FOR EACH CUSTOMER OPTION IS SELECTED, THEN CREATE LEDGER FOR EACH CUSTOMERS WHOSE    
       LEDGER IS NOT CREATED FOR THE QUALIFIED RECEIPTS/PAYMENTS MEMOS*/    
   IF @BCREATELEDGERFORCUSTOMER=1    
   BEGIN    
		--START OF LEDGER CREATION FOR NEW CUSTOMERS    
		SET @CSTEP=190    
		PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)
		--CHECK IF ANY CUSTOMER EXISTS WHOSE LEDGER CREATION IS PENDING    
		IF OBJECT_ID('TEMPDB..#NEWCUSTOMERS','U') IS NOT NULL    
		 DROP TABLE #NEWCUSTOMERS    
	        
		SELECT ARC.CUSTOMER_CODE    
		INTO #NEWCUSTOMERS    
		FROM ARC01106 ARC    
		JOIN #ARCTABLE TPT ON ARC.ADV_REC_ID=TPT.MEMO_ID AND TPT.MODE='ARC'    
		JOIN CUSTDYM B ON B.CUSTOMER_CODE=ARC.CUSTOMER_CODE
		LEFT OUTER JOIN LMP01106 D ON D.CUSTOMER_CODE=b.CUSTOMER_CODE
		WHERE ARC.CUSTOMER_CODE NOT IN ('','000000000000') AND ISNULL(B.AC_CODE,'') IN ('','0000000000')
		AND isnull(D.AC_CODE,'') in ('','0000000000')
	    

		IF @cPostingonCustCode<>'1'
			delete A FROM #NEWCUSTOMERS a 
			JOIN custdym B ON A.CUSTOMER_CODE=B.CUSTOMER_CODE
			JOIN custdym c ON c.mobile=b.mobile
			WHERE c.customer_code<>b.customer_code AND isnull(c.ac_code,'') not in  ('','0000000000')
			AND c.mobile<>''

	    UPDATE A SET AC_CODE=C.AC_CODE FROM CUSTDYM A
		JOIN ARC01106 B ON B.CUSTOMER_CODE=A.CUSTOMER_CODE
	    JOIN #ARCTABLE TPT ON b.ADV_REC_ID=TPT.MEMO_ID AND TPT.MODE='ARC' 							
	    JOIN LMP01106 C ON C.CUSTOMER_CODE=A.CUSTOMER_CODE
	    WHERE A.AC_CODE<>C.AC_CODE AND ISNULL(a.ac_code,'') NOT IN ('','0000000000')
		
		SET @CSTEP=192	         
		DECLARE @CNEWCUSTOMER VARCHAR(20),@CNEWACCODE VARCHAR(20)    
	    
		
		IF @cPostingonCustCode<>'1'
			UPDATE A SET AC_CODE=C.AC_CODE FROM CUSTDYM A
			JOIN ARC01106 B ON B.CUSTOMER_CODE=A.CUSTOMER_CODE
			JOIN #ARCTABLE TS ON B.CM_ID=TS.MEMO_ID AND TS.MODE='ARC' 							
			JOIN custdym d (NOLOCK) ON d.mobile=a.mobile
			JOIN LMP01106 C ON C.CUSTOMER_CODE=D.CUSTOMER_CODE
			WHERE A.AC_CODE<>C.AC_CODE AND ISNULL(c.ac_code,'') NOT IN ('','0000000000')			    
			AND d.customer_code<>a.customer_code AND ISNULL(a.mobile,'')<>''

			    
		--NOW PROCEED FOR GENERATION LEDGER FOR EACH CUSTOMER    
		WHILE EXISTS(SELECT TOP 1 'U' FROM #NEWCUSTOMERS)    
		BEGIN    
			 SELECT @CNEWCUSTOMER='',@CNEWACCODE=''    
			 SELECT TOP 1 @CNEWCUSTOMER=CUSTOMER_CODE FROM #NEWCUSTOMERS    
		     
			 SET @CSTEP=194    
			 PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)
			 GENKEY:    
			 EXEC GETNEXTKEY     
				  @CTABLENAME='LMV01106'    
				 ,@CCOLNAME='AC_CODE'    
				 ,@NWIDTH=10    
				 ,@CPREFIX=@cHoLocId    
				 ,@NLZEROS=1    
				 ,@CFINYEAR=@cFinYear    
				 ,@NROWCOUNT=0    
				 ,@CNEWKEYVAL=@CNEWACCODE OUTPUT    
		         
			 IF EXISTS(SELECT TOP 1 'B' FROM LM01106 WHERE AC_CODE=@CNEWACCODE)    
			  GOTO GENKEY    
		     
			 SET @CSTEP=196    
			 IF ISNULL(@CNEWACCODE,'')=''    
			 BEGIN    
				  INSERT #ERRORS(XN_TYPE,ERR_DESC)    
				  SELECT 'ARC','ERROR GENERATING LEDGER FOR CUSTOMERS.'    
				  GOTO END_PROC    
			 END    
		    
			SET @CSTEP=196.2    
			SELECT @cFirstName=CUSTOMER_FNAME,@cLastName=CUSTOMER_LNAME,@cUserCustCode=ISNULL(user_customer_code,''),
			@cMobile=isnull(mobile,'') FROM custdym (NOLOCK)
			WHERE CUSTOMER_CODE = @CNEWCUSTOMER

			SET @CSTEP=196.4
			SET @cNewAcname=@cFirstName+' '+@cLastName
					
			IF @cPostingonCustCode<>'1'
			BEGIN
				SET @CSTEP=196.6
				IF EXISTS (SELECT TOP 1 ac_code FROM lm01106 (NOLOCK) WHERE ac_name=@cNewAcname)
					AND @cMobile<>''
					SET @cNewAcname=@cFirstName+' '+@cLastName+' ('+@cMobile+')'

				IF EXISTS (SELECT TOP 1 ac_code FROM lm01106 (NOLOCK) WHERE ac_name=@cNewAcname)
					AND @cUserCustCode<>''
					SET @cNewAcname=@cFirstName+' '+@cLastName+' ('+@cUserCustCode+')'
			END

			SET @CSTEP=196.8
			IF EXISTS (SELECT TOP 1 ac_code FROM lm01106 (NOLOCK) WHERE ac_name=@cNewAcname)
				OR @cPostingonCustCode='1'
				SET @cNewAcname=@cFirstName+' '+@cLastName+' ('+@CNEWCUSTOMER+')'
			 	     

			 SET @CSTEP=197.2    
			 PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)
			 INSERT LMV01106 ( AC_CODE, AC_NAME, ALIAS, HEAD_CODE, CLOSING_BALANCE, CLOSING_BALANCE_CR_DR    
				 , PRINT_LEDGER,LAST_UPDATE, PRINT_NAME, ADDRESS0, ADDRESS1, ADDRESS2, AREA_CODE    
				 , AREA_NAME, PINCODE,CITY_CODE, CITY, STATE, CST_NO, CST_DT, SST_NO, SST_DT    
				 , TIN_NO, TIN_DT, PHONES_R,PHONES_O, PHONES_FAX, MOBILE, E_MAIL, TAX_CODE    
				 , CREDIT_DAYS, DISCOUNT_PERCENTAGE,BILL_BY_BILL, ON_HOLD, THROUGH_BROKER    
				 , BROKER_AC_CODE, BROKER_COMM_PERCENT,CREDIT_LIMIT, ALLOW_CREDITOR_DEBTOR    
				 , DPWEF_DT,CST_PERCENTAGE, PAN_NO, FORM_ID, CUSTOMER_CODE,GLN_NO    
				 , MP_PERCENTAGE, MRP_CALC_MODE,TDS_CODE, INACTIVE,OUTSTATION_PARTY    
				 ,INV_RATE_TYPE,COMPANY_CODE,MAJOR_AC_CODE,ac_gst_no,ac_gst_state_code)       
			 SELECT @CNEWACCODE AS AC_CODE, @cNewAcName AS AC_NAME    
				,'' AS ALIAS, '0000000018' AS HEAD_CODE, 0 AS CLOSING_BALANCE, '' AS CLOSING_BALANCE_CR_DR    
				, 0 AS PRINT_LEDGER,GETDATE() AS LAST_UPDATE, CUSTOMER_FNAME+' '+CUSTOMER_LNAME AS PRINT_NAME    
				, '' AS ADDRESS0, ADDRESS1,ADDRESS2, '0000000' AS AREA_COCE, '' AS AREA_NAME, '' AS PINCODE    
				, '0000000' AS CITY_CODE,'' AS CITY, '' AS STATE, '' AS CST_NO, '' AS CST_DT, '' AS SST_NO    
				, '' AS SST_DT,'' AS TIN_NO, '' AS TIN_DT, left(PHONE1,50)  AS PHONES_R, left(PHONE2,50)  AS PHONES_O    
				, '' AS PHONES_FAX,MOBILE, EMAIL AS E_MAIL, '0000000' AS TAX_CODE, 0 AS CREDIT_DAYS    
				, 0 AS DISCOUNT_PERCENTAGE,ISNULL(BILL_BY_BILL,0) AS BILL_BY_BILL, 0 AS ON_HOLD, 0 AS THROUGH_BROKER, '0000000000' AS BROKER_AC_CODE    
				, 0 AS BROKER_COMM_PERCENT,0 AS CREDIT_LIMIT, 0 AS ALLOW_CREDITOR_DEBTOR    
				, '' AS DPWEF_DT, 0 AS CST_PERCENTAGE, '' AS PAN_NO, '0000000' AS FORM_ID    
				, CUSTOMER_CODE, '' AS GLN_NO,0 AS MP_PERCENTAGE, 0 AS MRP_CALC_MODE,'0000000' AS TDS_CODE    
				, 0 AS INACTIVE,0 AS OUTSTATION_PARTY,1 AS INV_RATE_TYPE,'01' AS COMPANY_CODE,
				@CNEWACCODE AS MAJOR_AC_CODE,cus_gst_no,cus_gst_state_code
			 FROM CUSTDYM       
			 WHERE CUSTOMER_CODE = @CNEWCUSTOMER    
			 
			 SET @CSTEP=198.4
		     UPDATE CUSTDYM SET AC_CODE=@CNEWACCODE WHERE CUSTOMER_CODE=@CNEWCUSTOMER
		     
			 SET @CSTEP=198.6    
			 DELETE #NEWCUSTOMERS WHERE CUSTOMER_CODE=@CNEWCUSTOMER    
	   END    
   
    --END OF LEDGER CREATION FOR NEW CUSTOMERS    
   END    
    
   SET @CSTEP = 200         
   PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)
     --- CREDIT CARD RECEIPTS      
     INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID, XN_ID,CANCELLED,location_code)       
     SELECT V.AC_CODE AS BANKAC,D.AMOUNT -      
    ROUND(((D.AMOUNT*E.COMMISSION_PERCENTAGE/100) +       
     (D.AMOUNT*E.COMMISSION_PERCENTAGE/100) *      
      E.SERVICE_TAX_PERCENTAGE/100),2) AS AMOUNT,      
    (CASE WHEN A.ARCT=1 THEN 'O/S RECEIPT '       
       WHEN A.ARCT=2 THEN 'AV/GV '
       ELSE 'CHARGES/FEES ' END) + '(CC)' AS NARRATION,       
    A.ADV_REC_NO AS XN_NO, A.ADV_REC_DT AS XN_DT,      
    @CDEPTID AS DEPT_ID, A.ADV_REC_ID        
    ,A.CANCELLED    ,a.location_Code
     FROM ARC01106 A (NOLOCK)      
     JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'     
     JOIN PAYMODE_XN_DET D (NOLOCK) ON D.MEMO_ID = A.ADV_REC_ID     
     JOIN PAYMODE_MST E (NOLOCK) ON E.PAYMODE_CODE= D.PAYMODE_CODE     
     JOIN #V_PROCESS_PAYMODES V ON V.COLUMNNAME=D.PAYMODE_CODE+'_DOC'
     WHERE ISNULL(A.ARC_TYPE,1) = 1
     AND D.XN_TYPE='ARC'  AND E.PAYMODE_GRP_CODE='0000002' AND D.AMOUNT<>0       
       
       
       --SELECT * FROM @VCHC
       --RETURN
   --SELECT '4',COUNT(*) FROM @VCHC    


   SET @CSTEP = 210             
    --- MISC IN RECEIPT/PAYMENT      
   INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID, XN_ID,CANCELLED,location_code )    
   SELECT V.AC_CODE AS AC_CODE,C.AMOUNT*(CASE WHEN ARC_TYPE=1 THEN 1 ELSE -1 END) AS AMOUNT,      
   D.PAYMODE_NAME+ (CASE WHEN ARC_TYPE=1 THEN ' RECEIPT ' ELSE 'PAYMENT' END)+' MISC ' AS NARRATION,      
   ADV_REC_NO AS [ADV_REC_NO], ADV_REC_DT, @CDEPTID  AS DEPT_ID ,ADV_REC_ID      
   ,A.CANCELLED,a.location_Code
   FROM ARC01106 A    
   JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'     
   JOIN PAYMODE_XN_DET C (NOLOCK) ON A.ADV_REC_ID=C.MEMO_ID AND C.XN_TYPE='ARC'    
   JOIN PAYMODE_MST D (NOLOCK) ON C.PAYMODE_CODE= D.PAYMODE_CODE       
   JOIN #V_PROCESS_PAYMODES V ON V.COLUMNNAME=D.PAYMODE_CODE+'_DOC'
   WHERE (A.ARC_TYPE=1 OR C.PAYMODE_CODE NOT IN ('0000001','0000002')) AND D.PAYMODE_CODE<>'0000002'
   AND NOT (A.ARC_TYPE=1 AND (D.PAYMODE_GRP_CODE='0000002' OR D.PAYMODE_CODE='0000001')) 
    
    
   SET @CSTEP = 220                 
   PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)
           
   --SELECT '5',COUNT(*) FROM @VCHC    
   --- CREDIT CARD COMMISSION ( PLUS SERVICE TAX ON COMMISSION )      
    INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID, XN_ID,CANCELLED,location_Code  )       
    SELECT V.AC_CODE AS COMMAC,      
   ROUND(((C.CC_AMOUNT*E.COMMISSION_PERCENTAGE/100) +       
    (C.CC_AMOUNT*E.COMMISSION_PERCENTAGE/100) *      
     E.SERVICE_TAX_PERCENTAGE/100),2) AS AMOUNT,      
   (CASE WHEN ARCT=1 THEN 'O/S RECEIPT '       
      WHEN ARCT=2 THEN 'AV/GV '       
      ELSE 'CHARGES/FEES ' END) + '(CC COMMISSION)' +       
   (CASE WHEN ARCT=1 AND ADJ_BILL_ID<>''       
      THEN ' AGAINST BILL NO. ' + ISNULL(B.CM_NO,'')       
      ELSE '' END) AS NARRATION,       
   ADV_REC_NO AS XN_NO, ADV_REC_DT AS XN_DT,      
   @CDEPTID AS DEPT_ID, ADV_REC_ID   
   ,A.CANCELLED  ,a.location_Code       
    FROM ARC01106 A       
    JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'     
    LEFT OUTER JOIN CMM01106 B ON A.ADJ_BILL_ID=B.CM_ID       
    JOIN VW_BILL_PAYMODE C (NOLOCK) ON C.MEMO_ID=A.ADV_REC_ID      
    JOIN PAYMODE_XN_DET D (NOLOCK) ON D.MEMO_ID = C.MEMO_ID AND D.XN_TYPE = C.XN_TYPE      
    JOIN PAYMODE_MST E (NOLOCK) ON E.PAYMODE_CODE= D.PAYMODE_CODE     
    JOIN #V_PROCESS_PAYMODES V ON V.COLUMNNAME=D.PAYMODE_CODE+'_COMM'
    WHERE ISNULL(A.ARC_TYPE,1) = 1      
    AND C.XN_TYPE='ARC'  AND E.PAYMODE_GRP_CODE='0000002' AND C.CC_AMOUNT<>0 AND E.COMMISSION_PERCENTAGE>0       
       
    --SELECT '6',COUNT(*) FROM @VCHC     
    
    --SELECT 'CHECK VPAYMODE',* FROM #V_PROCESS_PAYMODES    
        
		      
    SET @CSTEP = 230             
	PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)
    --- CASH RECEIPTS/PAYMENTS      
    INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID, XN_ID,CANCELLED,location_Code )       
    SELECT @CCASHACCODE AS AC_CODE,      
   ISNULL(E.CASH_AMOUNT,0)*(CASE WHEN ISNULL(A.ARC_TYPE,1) = 1  THEN 1 ELSE -1 END)    
     AS AMOUNT,      
   (CASE WHEN ARCT=1 THEN (CASE WHEN ARC_TYPE=1 THEN 'O/S RECEIPT ' ELSE 'PAYMENT' END)      
      WHEN ARCT=2 THEN 'AV/GV '      
      ELSE 'CHARGES/FEES ' END ) + '(CASH)' AS NARRATION,      
   A.ADV_REC_NO AS XN_NO, A.ADV_REC_DT AS XN_DT,      
   @CDEPTID AS DEPT_ID, A.ADV_REC_ID,A.CANCELLED ,a.location_Code
    FROM ARC01106 A (NOLOCK)      
    JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'    
    JOIN VW_BILL_PAYMODE E (NOLOCK) ON A.ADV_REC_ID = E.MEMO_ID     
    WHERE  E.XN_TYPE = 'ARC' AND E.CASH_AMOUNT <> 0    
       
    --- O/S RECEIPT TAKEN AGAINST BILLS     
    IF @BCREATELEDGERFORCUSTOMER = 1      
    BEGIN     
		  SET @CSTEP = 240         
		  PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)
		  INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID, XN_ID,REF_BILL_NO,REF_BILL_DATE,CANCELLED,location_Code  )       
		  SELECT isnull(e.ac_code,D.AC_CODE),      
		  B.RECEIPT_AMOUNT*-1 AS AMOUNT,       
		 (CASE WHEN ARCT=1 THEN 'O/S RECEIPT '       
		 WHEN ARCT=2 THEN 'AV/GV '       
		 ELSE 'CHARGES/FEES ' END) + ' (BILLREC) AGAINST BILL NO. ' + G.CM_NO AS NARRATION,      
		 A.ADV_REC_NO AS XN_NO, ADV_REC_DT AS XN_DT,      
		 @CDEPTID AS DEPT_ID, A.ADV_REC_ID,LTRIM(RTRIM(G.CM_NO)),G.CM_DT
		 ,A.CANCELLED   ,a.location_Code  
		  FROM ARC01106 A (NOLOCK)      
		  JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'     
		  JOIN CMM_CREDIT_RECEIPT B (NOLOCK) ON A.ADV_REC_ID=B.ADV_REC_ID    
		  JOIN CMM01106 G (NOLOCK) ON G.CM_ID=B.CM_ID    
		  JOIN CUSTDYM D (NOLOCK) ON D.CUSTOMER_CODE=A.CUSTOMER_CODE      
		  LEFT OUTER JOIN lmp01106 e (NOLOCK) ON e.customer_code=d.customer_code
		  WHERE ISNULL(A.ARC_TYPE,1) = 1 AND b.receipt_amount<>0     
    END        
    ELSE    
    BEGIN       
	  
	  SET @CSTEP = 250          
	  PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)	
      INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID, XN_ID,REF_BILL_NO,REF_BILL_DATE,CANCELLED,location_Code)     
      SELECT ISNULL(customer_ac_code,@CCUSTOMERCONTROLACCODESALE) ac_code,    
     B.RECEIPT_AMOUNT*-1 AS AMOUNT,     
     (CASE WHEN A.ARCT=1 THEN 'O/S RECEIPT '     
        WHEN A.ARCT=2 THEN 'AV/GV '     
        ELSE 'CHARGES/FEES ' END)  + ' (BILLREC) AGAINST BILL NO. ' + G.CM_NO AS NARRATION,      
     A.ADV_REC_NO AS XN_NO, A.ADV_REC_DT AS XN_DT,    
     @CDEPTID AS DEPT_ID, A.ADV_REC_ID,LTRIM(RTRIM(G.CM_NO)),G.CM_DT
     ,A.CANCELLED ,a.location_Code    
      FROM ARC01106 A (NOLOCK)      
      JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'     
      JOIN CMM_CREDIT_RECEIPT B (NOLOCK) ON A.ADV_REC_ID=B.ADV_REC_ID    
      JOIN CMM01106 G (NOLOCK) ON G.CM_ID=B.CM_ID    
      WHERE ISNULL(A.ARC_TYPE,1) = 1 AND b.receipt_amount<>0     
        
      --SELECT '8',COUNT(*) FROM @VCHC     
      --POPULATE BILL_BY_BILL CURSOR HERE....    
           
   END    
    
   SET @CSTEP = 260         
   PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)
      INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID, XN_ID,REF_BILL_NO,REF_BILL_DATE,CANCELLED,location_Code)     
      SELECT G.AC_CODE,    
    B.RECEIPT_AMOUNT*-1 AS AMOUNT,     
    (CASE WHEN A.ARCT=1 THEN 'O/S RECEIPT '     
       WHEN A.ARCT=2 THEN 'AV/GV '     
       ELSE 'CHARGES/FEES ' END)  + ' (WSLREC)  AGAINST BILL NO. ' + G.INV_NO AS NARRATION,      
    A.ADV_REC_NO AS XN_NO, A.ADV_REC_DT AS XN_DT,    
    @CDEPTID AS DEPT_ID, A.ADV_REC_ID,LTRIM(RTRIM(G.INV_NO)),G.INV_DT
    ,A.CANCELLED   ,a.location_Code  
      FROM ARC01106 A (NOLOCK)      
      JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'     
      JOIN WSL_CREDIT_RECEIPT B (NOLOCK) ON A.ADV_REC_ID=B.ADV_REC_ID    
      JOIN INM01106 G (NOLOCK) ON G.INV_ID=B.INV_ID    
      WHERE ISNULL(A.ARC_TYPE,1) = 1      
      
                    
          
    --- CREDIT NOTE ADJUSTMENT IN RECEIPTS      
    IF @BCREATELEDGERFORCUSTOMER = 1     
    BEGIN     
      
      SET @CSTEP = 270     
	  PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)    
      INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID, XN_ID,CANCELLED,ref_bill_no,ref_bill_date,location_Code  )       
      SELECT ISNULL(e.AC_CODE,D.AC_CODE),      
     p.AMOUNT*(CASE WHEN loc_mode=2 THEN -1 ELSE 1 END) AS AMOUNT,       
     (CASE WHEN ARCT=1 THEN 'O/S RECEIPT '       
     WHEN ARCT=2 THEN 'AV/GV '       
     ELSE 'CHARGES/FEES ' END) + '(CREDIT NOTE ADJUSTMENT AGAINST :'+Cmm.CM_NO+')' AS NARRATION,   
     A.ADV_REC_NO AS XN_NO, ADV_REC_DT AS XN_DT,      
     @CDEPTID AS DEPT_ID, ADV_REC_ID       
     ,A.CANCELLED,cmm.cm_no as ref_bill_no,cmm.cm_Dt as ref_bill_date,(CASE WHEN loc_mode IN(2,3) THEN a.location_Code ELSE p.adj_location_Code END) 
	 AS location_code    
      FROM ARC01106 A (NOLOCK)     
      JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'      
      LEFT OUTER JOIN CMM01106 B (NOLOCK) ON A.ADJ_BILL_ID=B.CM_ID       
      JOIN CUSTDYM D (NOLOCK) ON D.CUSTOMER_CODE=A.CUSTOMER_CODE      
      LEFT OUTER JOIN lmp01106 e (NOLOCK) ON e.customer_code=d.customer_code
      JOIN PAYMODE_XN_DET p ON A.ADV_REC_ID=p.MEMO_ID
	  JOIN cmm01106 cmm (NOLOCK) ON cmm.cm_id=p.adj_memo_id,@tAdjLocs tal      
      WHERE p.PAYMODE_CODE='0000001'  AND (tal.loc_mode=1 OR p.adj_location_Code<>a.location_Code)     
      	  
      --SELECT '10',COUNT(*) FROM @VCHC    
    END
             
    ELSE IF @BPOSTCONTROLACENTRIESBILLBYBILL=1    
    BEGIN    
		  SET @CSTEP = 280         
		  PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)
		  INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID, XN_ID,REF_BILL_NO,REF_BILL_DATE,CANCELLED,
		  location_code   )     
		  SELECT ISNULL(customer_ac_code,@CCUSTOMERCONTROLACCODECN) ac_code,    
		  B.AMOUNT*(CASE WHEN loc_mode=2 THEN -1 ELSE 1 END) AS AMOUNT,    
		  (CASE WHEN A.ARCT=1 THEN 'O/S RECEIPT '     
			 WHEN A.ARCT=2 THEN 'AV/GV '     
			 ELSE 'CHARGES/FEES ' END) + '(CREDIT NOTE ADJUSTMENT AGAINST :'+C.CM_NO+')' AS NARRATION,    
		  A.ADV_REC_NO AS XN_NO, A.ADV_REC_DT AS XN_DT,    
		  @CDEPTID AS DEPT_ID, A.ADV_REC_ID,LTRIM(RTRIM(C.CM_NO)),C.CM_DT
		  ,A.CANCELLED,(CASE WHEN loc_mode IN(2,3) THEN a.location_Code ELSE b.adj_location_Code END) AS location_code     
		FROM ARC01106 A     
		JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'       
		JOIN PAYMODE_XN_DET B ON A.ADV_REC_ID=B.MEMO_ID    
		JOIN CMM01106 C ON B.ADJ_MEMO_ID=C.CM_ID,@tAdjLocs tal     
		WHERE B.PAYMODE_CODE='0000001'
		AND (tal.loc_mode=1 OR b.adj_location_Code<>a.location_Code)     
    END      
    
    ELSE IF ISNULL(@BPOSTCONTROLACENTRIESBILLBYBILL,0)=0     
    BEGIN    
     
     SET @CSTEP = 290        
	 PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113) 
     INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID, XN_ID,CANCELLED,location_code )       
     SELECT ISNULL(customer_ac_code,@CCUSTOMERCONTROLACCODECN),      
     p.AMOUNT*(CASE WHEN loc_mode=2 THEN -1 ELSE 1 END) AS AMOUNT,      
     (CASE WHEN ARCT=1 THEN 'O/S RECEIPT '       
     WHEN ARCT=2 THEN 'AV/GV '       
     ELSE 'CHARGES/FEES ' END) + '(CN ADJUSTMENT#2)' +       
     (CASE WHEN ARCT=1 AND ADJ_BILL_ID<>''       
     THEN ' AGAINST BILL NO. ' + ISNULL(B.CM_NO,'')       
     ELSE '' END) AS NARRATION,      
     A.ADV_REC_NO AS XN_NO, ADV_REC_DT AS XN_DT,      
     @CDEPTID AS DEPT_ID, ADV_REC_ID       
     ,A.CANCELLED ,(CASE WHEN loc_mode IN(2,3) THEN a.location_Code ELSE p.adj_location_Code END) AS location_code   
      FROM ARC01106 A (NOLOCK)    
      JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'      
      LEFT OUTER JOIN CMM01106 B (NOLOCK) ON A.ADJ_BILL_ID=B.CM_ID       
      JOIN PAYMODE_XN_DET p ON A.ADV_REC_ID=p.MEMO_ID  ,@tAdjLocs tal      
      WHERE p.PAYMODE_CODE='0000001' AND (tal.loc_mode=1 OR p.adj_location_Code<>a.location_Code)       
          
      --SELECT '12',COUNT(*) FROM @VCHC    
    END    
   
        
    --- ADVANCE ADJUSTMENT IN RECEIPTS      
    IF @BCREATELEDGERFORCUSTOMER = 1    
    BEGIN      
	  
      SET @CSTEP = 300      
	  PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)   
      INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID, XN_ID,CANCELLED,location_code,
	   REF_BILL_NO,REF_BILL_DATE )       
      SELECT  isnull(E.AC_CODE,D.AC_CODE),      
     p.AMOUNT*(CASE WHEN loc_mode=2 THEN -1 ELSE 1 END),      
     (CASE WHEN a.ARCT=1 THEN 'O/S RECEIPT '       
     WHEN a.ARCT=2 THEN 'AV/GV '       
     ELSE 'CHARGES/FEES ' END) + '(AV/GV ADJUSTMENT)' +       
     (CASE WHEN a.ARCT=1 AND a.ADJ_BILL_ID<>''       
     THEN ' AGAINST BILL NO. ' + ISNULL(B.CM_NO,'')       
     ELSE '' END) AS NARRATION,      
     A.ADV_REC_NO AS XN_NO, a.ADV_REC_DT AS XN_DT,       
     @CDEPTID AS DEPT_ID, a.ADV_REC_ID       
     ,A.CANCELLED,(CASE WHEN loc_mode IN(2,3) THEN a.location_Code ELSE p.adj_location_Code END) AS location_code,
	 arc.adv_rec_no as ref_bill_no,arc.adv_rec_dt as REF_BILL_DATE
      FROM ARC01106 A        
      JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'      
      LEFT OUTER JOIN CMM01106 B ON A.ADJ_BILL_ID=B.CM_ID       
      JOIN CUSTDYM D ON D.CUSTOMER_CODE=A.CUSTOMER_CODE      
      LEFT OUTER JOIN lmp01106 e (NOLOCK) ON e.customer_code=d.customer_code
      JOIN PAYMODE_XN_DET p ON A.ADV_REC_ID=p.MEMO_ID
	  JOIN arc01106 arc (NOLOCK) ON p.ADJ_MEMO_ID=arc.adv_rec_ID,@tAdjLocs tal  
      WHERE p.paymode_code='0000002' AND xn_type='ARC' AND (tal.loc_mode=1 OR p.adj_location_Code<>a.location_Code)  
      AND A.CUSTOMER_CODE<>'000000000000'

          
         
      --SELECT '13',COUNT(*) FROM @VCHC    
    END         
   
    ELSE IF @BPOSTCONTROLACENTRIESBILLBYBILL=1    
    BEGIN    
	    
		SET @CSTEP = 310        
		PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)  
		INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID, XN_ID,REF_BILL_NO,REF_BILL_DATE,CANCELLED,location_code )     
		SELECT ISNULL(customer_ac_code,@CCUSTOMERCONTROLACCODESALE) ac_code,    
		  B.AMOUNT*(CASE WHEN loc_mode=2 THEN -1 ELSE 1 END) AS AMOUNT,    
		  (CASE WHEN A.ARCT=1 THEN 'O/S RECEIPT '     
			 WHEN A.ARCT=2 THEN 'AV/GV '     
			 ELSE 'CHARGES/FEES ' END) + '(AV/GV ADJUSTMENT AGAINST :'+C.ADV_REC_NO+')'  AS NARRATION,    
		  A.ADV_REC_NO AS XN_NO, A.ADV_REC_DT AS XN_DT,    
		  @CDEPTID AS DEPT_ID, A.ADV_REC_ID,LTRIM(RTRIM(C.ADV_REC_NO)),C.ADV_REC_DT
		  ,A.CANCELLED,(CASE WHEN loc_mode IN(2,3) THEN a.location_Code ELSE b.adj_location_Code END) AS location_code    
		FROM ARC01106 A    
		JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'       
		JOIN PAYMODE_XN_DET B ON A.ADV_REC_ID=B.MEMO_ID    
		JOIN ARC01106 C ON B.ADJ_MEMO_ID=C.ADV_REC_ID,@tAdjLocs tal     
		WHERE B.PAYMODE_CODE='0000002' AND A.CUSTOMER_CODE<>'000000000000' AND xn_type='ARC'
		AND (tal.loc_mode=1 OR b.adj_location_Code<>a.location_Code)

	         
		--SELECT '14',COUNT(*) FROM @VCHC    
    END      
    ELSE IF ISNULL(@BPOSTCONTROLACENTRIESBILLBYBILL,0)=0     
    BEGIN    
    
      SET @CSTEP = 320     
	  PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)    
      INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID, XN_ID,CANCELLED,location_code )       
      SELECT ISNULL(customer_ac_code,@CCUSTOMERCONTROLACCODESALE) ac_code,      
     p.amount*(CASE WHEN loc_mode=2 THEN -1 ELSE 1 END) AS AMOUNT,      
     (CASE WHEN ARCT=1 THEN 'O/S RECEIPT '       
     WHEN ARCT=2 THEN 'AV/GV '       
     ELSE 'CHARGES/FEES ' END) + '(AV/GV ADJUSTMENT)' +       
     (CASE WHEN ARCT=1 AND ADJ_BILL_ID<>''       
     THEN ' AGAINST BILL NO. ' + ISNULL(B.CM_NO,'')       
     ELSE '' END) AS NARRATION,      
     A.ADV_REC_NO AS XN_NO, ADV_REC_DT AS XN_DT,      
     @CDEPTID AS DEPT_ID, ADV_REC_ID       
     ,A.CANCELLED,(CASE WHEN loc_mode IN(2,3) THEN a.location_Code ELSE p.adj_location_Code END) AS location_code    
      FROM ARC01106 A       
      JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'        
      LEFT OUTER JOIN CMM01106 B ON A.ADJ_BILL_ID=B.CM_ID       
      JOIN PAYMODE_XN_DET p ON A.ADV_REC_ID=p.MEMO_ID,@tAdjLocs tal      
      WHERE p.PAYMODE_CODE='0000002' AND xn_type='ARC' AND (tal.loc_mode=1 OR p.adj_location_Code<>a.location_Code)      
     AND A.CUSTOMER_CODE<>'000000000000'
          
      --SELECT '15',COUNT(*) FROM @VCHC    
    END         

	SET @CSTEP = 330             
	PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)
    INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID, XN_ID,CANCELLED,location_code,
	REF_BILL_NO,REF_BILL_DATE )       
    SELECT A.AC_CODE,      
    B.ADVANCE_AMOUNT_ADJUSTED AS AMOUNT,      
    (CASE WHEN ARCT=1 THEN 'O/S RECEIPT '       
    WHEN ARCT=2 THEN 'AV/GV '       
    ELSE 'CHARGES/FEES ' END) + '(AV/GV ADJUSTMENT)' +       
    (CASE WHEN ARCT=1 AND ADJ_BILL_ID<>''       
    THEN 'ADVANCE ADJUSTED AGAINST BILL NO. ' + ISNULL(B.BILL_NO,'')       
   ELSE '' END) AS NARRATION, 
    A.ADV_REC_NO AS XN_NO,A.ADV_REC_DT AS XN_DT,       
    @CDEPTID AS DEPT_ID, ADV_REC_ID       
    ,A.CANCELLED,a.location_Code,LTRIM(RTRIM(B.BILL_NO)),B.BILL_DT
     FROM ARC01106 A        
     JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'      
     JOIN     
     (SELECT A.MEMO_ID,C.ADV_REC_NO AS BILL_NO,C.ADV_REC_DT AS BILL_DT,
	  (CASE WHEN loc_mode IN(2,3) THEN b.location_Code ELSE a.adj_location_Code END) AS location_code,
	  A.AMOUNT*(CASE WHEN loc_mode=2 THEN -1 ELSE 1 END) AS ADVANCE_AMOUNT_ADJUSTED FROM PAYMODE_XN_DET A    
      JOIN #ARCTABLE TARC ON A.MEMO_ID=TARC.MEMO_ID AND TARC.MODE='ARC'      
      JOIN ARC01106 B ON B.ADV_REC_ID=A.MEMO_ID    
      JOIN ARC01106 C ON C.ADV_REC_ID=A.ADJ_MEMO_ID,@tAdjLocs tal    
      WHERE A.XN_TYPE='ARC' AND B.AC_CODE<>'0000000000' AND PAYMODE_CODE='0000002'    
	  AND (tal.loc_mode=1 OR a.adj_location_Code<>b.location_Code)           
      ) B ON B.MEMO_ID=A.ADV_REC_ID    
    --SELECT '16',COUNT(*) FROM @VCHC    
          
    SET @CSTEP = 340    
	PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)              
    --- DISCOUNT AMOUNT IN RECEIPTS      
    INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID, XN_ID,CANCELLED,location_code )       
    SELECT @CDISCACCODE AS AC_CODE,      
   A.DISCOUNT_AMOUNT*(CASE WHEN arc_type=1 THEN 1 ELSE -1 END) AS AMOUNT,       
   (CASE WHEN ARCT=1 THEN 'O/S RECEIPT '       
      WHEN ARCT=2 THEN 'AV/GV '      
    ELSE 'CHARGES/FEES ' END) + '(DISCOUNT)' +       
   (CASE WHEN ARCT=1 AND ADJ_BILL_ID<>''       
      THEN ' AGAINST BILL NO. ' + ISNULL(B.CM_NO,'')       
      ELSE '' END) AS NARRATION,       
   A.ADV_REC_NO AS XN_NO, ADV_REC_DT AS XN_DT,      
   @CDEPTID AS DEPT_ID, ADV_REC_ID       
   ,A.CANCELLED    ,a.location_code
    FROM ARC01106 A     
    JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'       
    LEFT OUTER JOIN CMM01106 B ON A.ADJ_BILL_ID=B.CM_ID       
    WHERE A.DISCOUNT_AMOUNT<>0       
	
   
   SET @CSTEP = 350  
   PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)            
    --SELECT ARCT,* FROM ARC01106 WHERE ADV_REC_DT>='2017-10-11'     
    --SELECT '17',COUNT(*) FROM @VCHC    
  -- PARTY ACCOUNT CREDITED/DEBITED    
  INSERT INTO @VCHC (location_code, AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID, XN_ID,REF_BILL_NO,CANCELLED)     
  SELECT a.location_Code,(CASE WHEN A.ARCT=4 THEN @CGIFTVOUCHERACCODE    
               WHEN A.ARCT=3 THEN @CFEECHARGESACCODE    
               WHEN A.ARCT=5 THEN @CDISCOUNTCARDACCODE    
               WHEN @BCREATELEDGERFORCUSTOMER=1 THEN ISNULL(d.AC_CODE,C.AC_CODE)
      ELSE ISNULL(customer_ac_code,@CCUSTOMERCONTROLACCODESALE) END) AS AC_CODE,    
    (((CASE WHEN ISNULL(A.TAXABLE_VALUE,0)<>0 AND ARCT<>2 AND ARC_TYPE=1 
		   THEN A.TAXABLE_VALUE+A.DISCOUNT_AMOUNT 
		   ELSE A.AMOUNT END))* ----isnull(tadj.ADJ_AMT,0) Removed this as it is causing problem in case of O/s receipt in which credit note is adjusted
		   (CASE WHEN ARC_TYPE=1 THEN -1 ELSE 1 END))
		   -(CASE WHEN arc_type=2 THEN  isnull(tadj.ADJ_AMT,0) else 0 end)--Again had to reconsider this as it is causing problem in case of O/s Payment in which credit note is adjusted and less payment is done (cn:199 cash paid:190)
		   AS AMOUNT,     
    'AV/GV(Party(s)) ' + A.ADV_REC_NO AS NARRATION,      
    A.ADV_REC_NO AS XN_NO, A.ADV_REC_DT AS XN_DT,    
    @CDEPTID AS DEPT_ID, A.ADV_REC_ID,'' AS REF_BILL_NO     
    ,A.CANCELLED     
  FROM ARC01106 A (NOLOCK)      
  JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'     
  JOIN CUSTDYM C ON C.CUSTOMER_CODE=A.CUSTOMER_CODE      
  LEFT OUTER JOIN LMP01106 D ON D.CUSTOMER_CODE=a.customer_code
  LEFT OUTER JOIN CMM_CREDIT_RECEIPT CCR (NOLOCK) ON A.ADV_REC_ID=CCR.ADV_REC_ID    
  LEFT OUTER JOIN WSL_CREDIT_RECEIPT WCR (NOLOCK) ON A.ADV_REC_ID=WCR.ADV_REC_ID    
  LEFT OUTER JOIN 
  (
	SELECT a.memo_id,SUM(a.amount) as adj_amt 
	FROM paymode_xn_det a (NOLOCK)
   JOIN #ARCTABLE tarc on tarc.memo_id=a.memo_id
   JOIN arc01106 c on c.adv_rec_id=tarc.memo_id
   WHERE paymode_code IN ('0000001','0000002') and xn_type='ARC' AND (arct=1 OR arc_type=2)
   --WHERE paymode_code IN ('0000001') and xn_type='ARC' (Done above change as per ticket #10-0539 of CTC 
   ---- w.r.t Payment of cash to Customer against his advance)
   GROUP BY a.memo_id) tadj on  tadj.memo_id=a.adv_rec_id
  WHERE CCR.ADV_REC_ID IS NULL AND WCR.ADV_REC_ID IS NULL    
  AND (A.PARTY_TYPE<>2 OR A.ARCT IN (3,4,5)) 
  AND (arc_type<>2 OR ((CASE WHEN ISNULL(A.TAXABLE_VALUE,0)<>0 AND ARCT<>2 AND ARC_TYPE=1 THEN A.TAXABLE_VALUE+A.DISCOUNT_AMOUNT 
			  ELSE A.AMOUNT END)-isnull(tadj.ADJ_AMT,0)<>0))
  ---- Changed this code for Suvidha Receipt memoId#0201120000000202004410 which was having Discount Card receipt
  ---- against Advance adjustment without any cash paid by Customer (08-07-2020 Ticket #07-0307)
  --AND  (AMOUNT+A.DISCOUNT_AMOUNT-isnull(tadj.ADJ_AMT,0))<>0
  ---- This is Older condition changed

	 ---- This is layout Column changed
  --  ((CASE WHEN arc_type=2 THEN a.amount WHEN ISNULL(A.TAXABLE_VALUE,0)<>0 AND ARCT<>2 AND ARC_TYPE=1 THEN A.TAXABLE_VALUE+A.DISCOUNT_AMOUNT ELSE A.AMOUNT END)
	 ---isnull(tadj.ADJ_AMT,0)) *(CASE WHEN ARC_TYPE=1 THEN -1 ELSE 1 END)	AS AMOUNT,     
   	  
  UNION ALL
  SELECT a.location_code, C.AC_CODE,
    (((CASE WHEN ISNULL(A.TAXABLE_VALUE,0)<>0 AND ARCT<>2 AND ARC_TYPE=1 
		   THEN A.TAXABLE_VALUE+A.DISCOUNT_AMOUNT 
		   ELSE A.AMOUNT END)-isnull(tadj.ADJ_AMT,0))*
		   (CASE WHEN ARC_TYPE=1 THEN -1 ELSE 1 END)) AS AMOUNT,     
    'AV/GV ' + A.ADV_REC_NO AS NARRATION,      
    A.ADV_REC_NO AS XN_NO, A.ADV_REC_DT AS XN_DT,    
    @CDEPTID AS DEPT_ID, A.ADV_REC_ID,'' AS REF_BILL_NO     
    ,A.CANCELLED     
  FROM ARC01106 A (NOLOCK)      
  JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'     
  JOIN LM01106 C ON C.AC_CODE=A.AC_CODE
  LEFT OUTER JOIN CMM_CREDIT_RECEIPT CCR (NOLOCK) ON A.ADV_REC_ID=CCR.ADV_REC_ID    
  LEFT OUTER JOIN WSL_CREDIT_RECEIPT WCR (NOLOCK) ON A.ADV_REC_ID=WCR.ADV_REC_ID    
  LEFT OUTER JOIN 
  (SELECT a.memo_id,SUM(a.amount) as adj_amt FROM paymode_xn_det a (NOLOCK)
   JOIN #ARCTABLE tarc on tarc.memo_id=a.memo_id
   JOIN arc01106 c on c.adv_rec_id=tarc.memo_id
   WHERE paymode_code IN ('0000002','0000001') and arc_type=1
   GROUP BY a.memo_id) TADJ ON  tadj.memo_id=a.adv_rec_id
  WHERE CCR.ADV_REC_ID IS NULL AND WCR.ADV_REC_ID IS NULL    
  AND A.PARTY_TYPE=2 AND A.ARCT NOT IN (3,4,5)  
  AND (arc_type<>2 OR ((CASE WHEN ISNULL(A.TAXABLE_VALUE,0)<>0 AND ARCT<>2 AND ARC_TYPE=1 THEN A.TAXABLE_VALUE+A.DISCOUNT_AMOUNT ELSE A.AMOUNT END)
	 -isnull(tadj.ADJ_AMT,0))<>0)


  SET @CSTEP = 360         
  PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)
  ------ MAKE THREE MORE ENTRIES FOR ADVANCES RECEIVED IN GST REGIME
  INSERT INTO @VCHC (location_code, AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID, XN_ID,REF_BILL_NO,CANCELLED)     
  SELECT a.location_code,@CADVANCERECEIVEGSTAC AS AC_CODE,A.AMOUNT,'ADVANCE RECEIVED ' AS NARRATION,      
  A.ADV_REC_NO AS XN_NO, A.ADV_REC_DT AS XN_DT,@CDEPTID AS DEPT_ID, A.ADV_REC_ID,'' AS REF_BILL_NO,A.CANCELLED   
  FROM ARC01106 A (NOLOCK)      
  JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'     
  WHERE ARCT=2 AND  ISNULL(IGST_AMOUNT+CGST_AMOUNT+SGST_AMOUNT,0)<>0
  UNION ALL
  SELECT a.location_code,GPC.LGST_REVENUE_AC_CODE AS AC_CODE,(A.TAXABLE_VALUE*-1) AS AMOUNT,
  'ADVANCE SALE ' AS NARRATION,      
  A.ADV_REC_NO AS XN_NO, A.ADV_REC_DT AS XN_DT,@CDEPTID AS DEPT_ID, A.ADV_REC_ID,'' AS REF_BILL_NO,A.CANCELLED     
  FROM ARC01106 A (NOLOCK)      
  JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'     
  JOIN #V_PROCESS GPC ON GPC.GST_PERCENTAGE=A.GST_PERCENTAGE
  WHERE ARCT=2 AND ISNULL(CGST_AMOUNT,0)<>0
  UNION ALL
  SELECT a.location_code, GPC.IGST_REVENUE_AC_CODE AC_CODE,(A.TAXABLE_VALUE)*-1 AS AMOUNT,
  'ADVANCE SALE ' AS NARRATION,      
  A.ADV_REC_NO AS XN_NO, A.ADV_REC_DT AS XN_DT,@CDEPTID AS DEPT_ID, A.ADV_REC_ID,'' AS REF_BILL_NO,A.CANCELLED     
  FROM ARC01106 A (NOLOCK)      
  JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'     
  JOIN #V_PROCESS GPC ON GPC.GST_PERCENTAGE=A.GST_PERCENTAGE
  WHERE ARCT=2 AND ISNULL(IGST_AMOUNT,0)<>0
  UNION ALL
  SELECT a.location_code,GPC.CGST_TAX_AC_CODE AS AC_CODE,A.CGST_AMOUNT*-1 AS AMOUNT,
  (CASE WHEN ARCT=2 THEN 'ADVANCE' ELSE '' END)+' GST ' AS NARRATION,      
  A.ADV_REC_NO AS XN_NO, A.ADV_REC_DT AS XN_DT,@CDEPTID AS DEPT_ID, A.ADV_REC_ID,'' AS REF_BILL_NO,A.CANCELLED     
  FROM ARC01106 A (NOLOCK)      
  JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'     
  JOIN #V_PROCESS GPC ON GPC.GST_PERCENTAGE=A.GST_PERCENTAGE
  WHERE ISNULL(CGST_AMOUNT,0)<>0
  UNION ALL
  SELECT a.location_code,GPC.SGST_TAX_AC_CODE AS AC_CODE,A.SGST_AMOUNT*-1 AS AMOUNT,
  (CASE WHEN ARCT=2 THEN 'ADVANCE' ELSE '' END)+' GST ' AS NARRATION,      
  A.ADV_REC_NO AS XN_NO, A.ADV_REC_DT AS XN_DT,@CDEPTID AS DEPT_ID, A.ADV_REC_ID,'' AS REF_BILL_NO,A.CANCELLED     
  FROM ARC01106 A (NOLOCK)      
  JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'     
  JOIN #V_PROCESS GPC ON GPC.GST_PERCENTAGE=A.GST_PERCENTAGE
  WHERE ISNULL(SGST_AMOUNT,0)<>0
  UNION ALL
  SELECT a.location_code,GPC.IGST_TAX_AC_CODE AS AC_CODE,A.IGST_AMOUNT*-1 AS AMOUNT,
  (CASE WHEN ARCT=2 THEN 'ADVANCE' ELSE '' END)+' GST ' AS NARRATION,      
  A.ADV_REC_NO AS XN_NO, A.ADV_REC_DT AS XN_DT,@CDEPTID AS DEPT_ID, A.ADV_REC_ID,'' AS REF_BILL_NO,A.CANCELLED     
  FROM ARC01106 A (NOLOCK)      
  JOIN #ARCTABLE TARC ON A.ADV_REC_ID=TARC.MEMO_ID AND TARC.MODE='ARC'     
  JOIN #V_PROCESS GPC ON GPC.GST_PERCENTAGE=A.GST_PERCENTAGE
  WHERE ISNULL(IGST_AMOUNT,0)<>0   
  
  SET @CSTEP = 370  
  PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)       
  ------ MAKE THREE MORE ENTRIES FOR ADVANCES SALE GST REVERSAL IN RECEIPT/PAYMENT IF ADVANCE ADJUSTED
  INSERT INTO @VCHC (location_code, AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID, XN_ID,REF_BILL_NO,CANCELLED)     
  SELECT a.location_code,@CADVANCERECEIVEGSTAC AS AC_CODE,A.AMOUNT*-1,'ADVANCE ADJUSTED REVERSAL ' AS NARRATION,      
  C.ADV_REC_NO AS XN_NO, C.ADV_REC_DT AS XN_DT,@CDEPTID AS DEPT_ID, C.ADV_REC_ID,'' AS REF_BILL_NO,C.CANCELLED   
  FROM ARC01106 A (NOLOCK)      
  JOIN PAYMODE_XN_DET B (NOLOCK) ON B.ADJ_MEMO_ID=A.ADV_REC_ID
  JOIN #ARCTABLE TARC ON B.MEMO_ID=TARC.MEMO_ID AND TARC.MODE='ARC'     
  JOIN ARC01106 C (NOLOCK) ON C.ADV_REC_ID=B.MEMO_ID
  WHERE B.PAYMODE_CODE='0000002' AND  ISNULL(A.IGST_AMOUNT+A.CGST_AMOUNT+A.SGST_AMOUNT,0)<>0
   
  UNION ALL
  SELECT a.location_code,GPC.LGST_REVENUE_AC_CODE AS AC_CODE,(A.TAXABLE_VALUE) AS AMOUNT,
  'ADVANCE SALE REVERSAL ' AS NARRATION,      
  C.ADV_REC_NO AS XN_NO, C.ADV_REC_DT AS XN_DT,@CDEPTID AS DEPT_ID, C.ADV_REC_ID,'' AS REF_BILL_NO,C.CANCELLED   
  FROM ARC01106 A (NOLOCK)      
  JOIN PAYMODE_XN_DET B (NOLOCK) ON B.ADJ_MEMO_ID=A.ADV_REC_ID
  JOIN #ARCTABLE TARC ON B.MEMO_ID=TARC.MEMO_ID AND TARC.MODE='ARC'     
  JOIN #V_PROCESS GPC ON GPC.GST_PERCENTAGE=A.GST_PERCENTAGE
  JOIN ARC01106 C (NOLOCK) ON C.ADV_REC_ID=B.MEMO_ID
  WHERE B.PAYMODE_CODE='0000002'  AND ISNULL(A.CGST_AMOUNT,0)<>0
  
  UNION ALL
  SELECT a.location_code,GPC.IGST_REVENUE_AC_CODE  AS AC_CODE,(A.TAXABLE_VALUE) AS AMOUNT,
  'ADVANCE SALE REVERSAL ' AS NARRATION,      
  C.ADV_REC_NO AS XN_NO, C.ADV_REC_DT AS XN_DT,@CDEPTID AS DEPT_ID, C.ADV_REC_ID,'' AS REF_BILL_NO,C.CANCELLED        
  FROM ARC01106 A (NOLOCK)      
  JOIN PAYMODE_XN_DET B (NOLOCK) ON B.ADJ_MEMO_ID=A.ADV_REC_ID
  JOIN #ARCTABLE TARC ON B.MEMO_ID=TARC.MEMO_ID AND TARC.MODE='ARC'     
  JOIN #V_PROCESS GPC ON GPC.GST_PERCENTAGE=A.GST_PERCENTAGE
  JOIN ARC01106 C (NOLOCK) ON C.ADV_REC_ID=B.MEMO_ID
  WHERE B.PAYMODE_CODE='0000002' AND ISNULL(A.IGST_AMOUNT,0)<>0
  
  UNION ALL
  SELECT a.location_code,GPC.CGST_TAX_AC_CODE  AS AC_CODE,A.CGST_AMOUNT AS AMOUNT,
  'ADVANCE GST REVERSAL ' AS NARRATION,      
  C.ADV_REC_NO AS XN_NO, C.ADV_REC_DT AS XN_DT,@CDEPTID AS DEPT_ID, C.ADV_REC_ID,'' AS REF_BILL_NO,C.CANCELLED     
  FROM ARC01106 A (NOLOCK)      
  JOIN PAYMODE_XN_DET B (NOLOCK) ON B.ADJ_MEMO_ID=A.ADV_REC_ID
  JOIN #ARCTABLE TARC ON B.MEMO_ID=TARC.MEMO_ID AND TARC.MODE='ARC'     
  JOIN #V_PROCESS GPC ON GPC.GST_PERCENTAGE=A.GST_PERCENTAGE
  JOIN ARC01106 C (NOLOCK) ON C.ADV_REC_ID=B.MEMO_ID
  WHERE B.PAYMODE_CODE='0000002' AND ISNULL(A.CGST_AMOUNT,0)<>0
  
  UNION ALL
  SELECT a.location_code,GPC.SGST_TAX_AC_CODE AS AC_CODE,A.SGST_AMOUNT AS AMOUNT,
  'ADVANCE GST REVERSAL ' AS NARRATION,      
  C.ADV_REC_NO AS XN_NO, C.ADV_REC_DT AS XN_DT,@CDEPTID AS DEPT_ID, C.ADV_REC_ID,'' AS REF_BILL_NO,C.CANCELLED     
  FROM ARC01106 A (NOLOCK)      
  JOIN PAYMODE_XN_DET B (NOLOCK) ON B.ADJ_MEMO_ID=A.ADV_REC_ID
  JOIN #ARCTABLE TARC ON B.MEMO_ID=TARC.MEMO_ID AND TARC.MODE='ARC'       
  JOIN #V_PROCESS GPC ON GPC.GST_PERCENTAGE=A.GST_PERCENTAGE
  JOIN ARC01106 C (NOLOCK) ON C.ADV_REC_ID=B.MEMO_ID
  WHERE B.PAYMODE_CODE='0000002' AND ISNULL(A.SGST_AMOUNT,0)<>0
  
  UNION ALL
  SELECT a.location_code,GPC.IGST_TAX_AC_CODE AS AC_CODE,A.IGST_AMOUNT AS AMOUNT,
  'ADVANCE GST REVERSAL ' AS NARRATION,      
  C.ADV_REC_NO AS XN_NO, C.ADV_REC_DT AS XN_DT,@CDEPTID AS DEPT_ID, C.ADV_REC_ID,'' AS REF_BILL_NO,C.CANCELLED     
  FROM ARC01106 A (NOLOCK)      
  JOIN PAYMODE_XN_DET B (NOLOCK) ON B.ADJ_MEMO_ID=A.ADV_REC_ID
  JOIN #ARCTABLE TARC ON B.MEMO_ID=TARC.MEMO_ID AND TARC.MODE='ARC'       
  JOIN #V_PROCESS GPC ON GPC.GST_PERCENTAGE=A.GST_PERCENTAGE
  JOIN ARC01106 C (NOLOCK) ON C.ADV_REC_ID=B.MEMO_ID
  WHERE B.PAYMODE_CODE='0000002' AND ISNULL(A.IGST_AMOUNT,0)<>0
  
  --SELECT 'CHECK VCHC',* FROM @VCHC WHERE XN_ID='0101118000000100000003'
          	  
  SELECT @CADV_REC_ID='',@CXNTYPE='ARC',@CAC_CODE='',@NCTR=1    
  SET @CSTEP = 380    
  PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)


  
	INSERT INTO @vlink(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE,memo_dt,memo_no,cancelled,voucher_code,location_code )
	SELECT ISNULL(B.VM_ID,'LATER-'+A.MEMO_ID) AS VM_ID,A.MEMO_ID,'ARC',a.LAST_UPDATE ,arc.adv_rec_dt,arc.adv_rec_no,arc.cancelled,
	(CASE WHEN arc.arc_type=2 THEN '0000000002' ELSE '0000000003' END) voucher_code,ARC.location_Code
	FROM #ARCTABLE A
	LEFT OUTER JOIN 
	(SELECT A.MEMO_ID,A.VM_ID FROM POSTACT_VOUCHER_LINK A (NOLOCK) 
		JOIN VM01106 VM (NOLOCK) ON A.VM_ID=VM.VM_ID
		JOIN #ARCTABLE B ON A.MEMO_ID=B.MEMO_ID
		WHERE VM.CANCELLED=0 AND A.XN_TYPE='ARC'
	) B ON B.MEMO_ID=A.MEMO_ID
	JOIN arc01106 arc (NOLOCK) ON arc.adv_rec_id=a.MEMO_ID
       

   --select 'check cn adj entry',* from @vchC where xn_id='01250000000001PRT-0003'

	       
	   SET @CSTEP = 390   
	   PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113) 
	   INSERT @VDC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE,     
			CREDIT_DAYS, VS_AC_CODE,AC_NAME,REF_BILL_NO,REF_BILL_DATE,cost_center_dept_id,bank_ac_charindex )    
	   SELECT vl.vm_id    
		,'LATER-'+LEFT(LTRIM(RTRIM(CONVERT(VARCHAR(40),NEWID()))),28) AS VD_ID    
		, A.AC_CODE    
		,A.NARRATION  +' (Memo#'+VL.MEMO_no+ ' Dated :'+convert(varchar,VL.MEMO_dt,105)+')'  
		,(CASE WHEN AMOUNT>0 THEN AMOUNT ELSE 0 END) AS DEBIT_AMOUNT    
		,(CASE WHEN AMOUNT<0 THEN ABS(AMOUNT) ELSE 0 END) AS CREDIT_AMOUNT    
		,(CASE WHEN AMOUNT>0 THEN 'DR' ELSE 'CR' END) AS X_TYPE    
		,B.CREDIT_DAYS    
		,'0000000000'    
		,B.AC_NAME    
		,A.REF_BILL_NO,A.REF_BILL_DATE ,a.location_code ,CHARINDEX(b.HEAD_CODE,@CHEAD_CODE)
		FROM @VCHC A    
		JOIN LMV01106 B ON A.AC_CODE = B.AC_CODE    
		JOIN @VLINK vl ON vl.memo_id=a.XN_ID
		
		 
	   
	  -- if @CADV_REC_ID='02011190000002P-000006'
			--select 'check @vdc',* from @vdc where vm_id=@cVmId

	   /*    
		NEED TO CREATE AN ADDITIONAL ENTRY FOR BALANCING THE DEBITED OR CREDIT AMOUNT IN THE     
		PREVIOUS STEP    
	   */    
	       

		SET @CSTEP = 400
		PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)   
		INSERT @TBILL_BY_BILL_REF    
		 (VD_ID,REF_NO,AMOUNT,LAST_UPDATE,X_TYPE,CR_DAYS,VM_ID)    
		SELECT VD_ID    
		   ,(CASE WHEN ISNULL(A.REF_BILL_NO,'')='' THEN 
		   DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,v.memo_no,v.memo_dt,A.X_TYPE,a.vm_id)
		   ELSE DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,A.REF_BILL_NO,A.REF_BILL_DATE,A.X_TYPE,a.vm_id) END) AS REF_NO    
		   ,ABS(SUM(A.CREDIT_AMOUNT+A.DEBIT_AMOUNT)),GETDATE()    
		   ,A.X_TYPE,0    
		   ,a.VM_ID    
		FROM @VDC A     
		JOIN LMP01106 C ON C.AC_CODE=A.AC_CODE
		JOIN @VLINK v on v.vm_id=a.vm_id
		WHERE  C.BILL_BY_BILL=1    
		GROUP BY a.vm_id, A.VD_ID,(CASE WHEN ISNULL(A.REF_BILL_NO,'')='' THEN 
		   DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE, v.memo_no,v.memo_dt  ,A.X_TYPE,a.vm_id)
		   ELSE DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,A.REF_BILL_NO,A.REF_BILL_DATE,A.X_TYPE,a.vm_id) END),A.X_TYPE
		    
	
	       
		
		SELECT a.VM_ID,SUM(DEBIT_AMOUNT) AS DRTOTAL,SUM(CREDIT_AMOUNT) AS CRTOTAL
		INTO #TMPVDDIFF
		FROM @vdC a
		GROUP BY a.VM_ID
		HAVING ABS(SUM(DEBIT_AMOUNT-CREDIT_AMOUNT))<=1 AND SUM(DEBIT_AMOUNT-CREDIT_AMOUNT)<>0
		
		SET @CSTEP = 410
		PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)
						
		INSERT @vdC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE, 
							  CREDIT_DAYS, CR_DISCOUNT_PERCENTAGE,AC_NAME,REF_BILL_NO)
		SELECT A.VM_ID
			, 'LATER-'+@CROUNDOFFACCODE AS VD_ID
			, @CROUNDOFFACCODE AS AC_CODE
			,'ARC (ROUND OFF) '
			,(CASE WHEN (DRTOTAL-CRTOTAL)<0 THEN ABS(DRTOTAL-CRTOTAL) ELSE 0 END) AS DEBIT_AMOUNT
			,(CASE WHEN (DRTOTAL-CRTOTAL)>0 THEN (DRTOTAL-CRTOTAL) ELSE 0 END) AS CREDIT_AMOUNT
			,(CASE WHEN (DRTOTAL-CRTOTAL) > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE
			,0 AS CRDAYS
			,0
			,AC_NAME,'' AS REF_BILL_NO
			    
	    FROM #TMPVDDIFF A
	    JOIN LM01106 B ON B.AC_CODE=@CROUNDOFFACCODE
	             
		 SET @CSTEP = 420  
		 PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)
		   
		INSERT @vmC	( VM_ID, VOUCHER_NO, VOUCHER_DT, VOUCHER_CODE, DEPT_ID,   
					  BILL_TYPE, BILL_NO, BILL_DT, DRTOTAL, CRTOTAL, CASH_VOUCHER,   
					  SALE_VOUCHER, QUANTITY, ANGADIA_CODE, LR_NO, LR_DT, CANCELLED, PARTY_NAME)
		SELECT  VL.VM_ID,ISNULL(VM.VOUCHER_NO,'LATER') AS VOUCHER_NO,vl.memo_dt voucher_dt,vl.voucher_code,
				vl.location_code DEPT_ID,'ARC',vl.memo_no bill_NO,vl.memo_dt  bill_dt
			  ,SUM(DEBIT_AMOUNT) AS DRTOTAL,SUM(CREDIT_AMOUNT) AS CRTOTAL,0,0,0,'0000000', '', '', vl.cancelled,vt.VOUCHER_TYPE party_name
			  
		FROM @VDC A 
		JOIN @vlink VL ON VL.vm_id=a.vm_id
		LEFT OUTER JOIN VM01106 VM ON VM.VM_ID=VL.VM_ID
		JOIN vchtype vt (NOLOCK) ON vt.VOUCHER_CODE=vl.voucher_code
		GROUP BY VL.VM_ID,vl.memo_dt,vl.memo_no, vl.location_code,vl.voucher_code,ISNULL(VM.VOUCHER_NO,'LATER'),vl.cancelled,vt.VOUCHER_TYPE
	       
	            
  
  
  --SELECT 'check #v-process',* from #V_PROCESS
  
  SET @CSTEP = 430
  PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)
  SET  @CHEAD_CODE = DBO.FN_ACT_TRAVTREE('0000000013')  ----ADD VARIABLE BY GAURI ON 17/4/2019	
   
  UPDATE A SET RECON_DT=D.RECON_DT FROM @VDC A
  JOIN @VLINK B ON A.VM_ID=B.VM_ID
  JOIN POSTACT_VOUCHER_LINK C (NOLOCK) ON C.MEMO_ID=B.MEMO_ID
  JOIN VD01106 D (NOLOCK) ON D.VM_ID=C.VM_ID AND D.AC_CODE=A.AC_CODE
  JOIN VM01106 E (NOLOCK) ON E.VM_ID=D.VM_ID
  JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE=D.AC_CODE
  WHERE C.XN_TYPE='ARC' AND ISNULL(bank_ac_charindex,0)>0 AND  D.RECON_DT<>'' ---REPLACE VARIABLE FROM FUNCTION BY GAURI ON 17/4/2019
  
      
    SET @CSTEP = 440    
    PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)
	  
	UPDATE @VDC SET DEBIT_AMOUNT=(CASE WHEN DEBIT_AMOUNT<>0 THEN DEBIT_AMOUNT ELSE NULL END),
	CREDIT_AMOUNT=(CASE WHEN CREDIT_AMOUNT<>0 THEN CREDIT_AMOUNT ELSE NULL END)


	SET @cStep=450
	PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)
		  
	SELECT A.vm_id,A.CREDIT_AMOUNT,A.DEBIT_AMOUNT,B.CREDIT_AMOUNT AS ORG_CRAMT,B.DEBIT_AMOUNT AS ORG_DRAMT,
	convert(bit,0) as bb_diff,a.ac_Code,convert(varchar(100),'') ref_no INTO #DIFFVMS FROM 
	(SELECT voucher_dt, a.vm_id,b.cancelled,a.ac_code,SUM(ISNULL(CREDIT_AMOUNT,0)) AS CREDIT_AMOUNT,SUM(ISNULL(DEBIT_AMOUNT,0)) AS DEBIT_AMOUNT
	 FROM @VDC A JOIN @VMC B ON A.VM_ID=B.VM_ID 
	 GROUP BY voucher_dt,a.vm_id,a.ac_code,b.cancelled) A
	 LEFT OUTER JOIN 						  
	(SELECT b.voucher_dt,a.vm_id,a.ac_code,SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT,SUM(DEBIT_AMOUNT) AS DEBIT_AMOUNT
	 FROM VD01106 A (NOLOCK) JOIN VM01106 B (NOLOCK) ON A.VM_ID=B.VM_ID
	 JOIN  @VMC c ON c.vm_id=b.vm_id
	 WHERE B.BILL_TYPE='ARC' AND B.CANCELLED=0 
	 GROUP BY b.voucher_dt,a.vm_id,a.ac_code) B ON A.vm_id=b.vm_id AND a.ac_code=b.ac_code and a.voucher_dt=b.voucher_dt
	 WHERE (ABS(ISNULL(A.CREDIT_AMOUNT+A.DEBIT_AMOUNT,0)-ISNULL(B.DEBIT_AMOUNT+B.CREDIT_AMOUNT,0))>=1) or a.cancelled=1

	SET @CSTEP=455
	EXEC SP_CHKXNSAVELOG 'ARCPOST',@cStep,1,@nSpId,'',1	 		

	INSERT #DIFFVMS (vm_id,ac_code,ref_no,bb_diff,DEBIT_AMOUNT,CREDIT_AMOUNT,ORG_CRAMT,ORG_DRAMT)
	SELECT A.vm_id,a.ac_code,a.ref_no,1 bb_dif,A.DEBIT_AMOUNT,a.CREDIT_AMOUNT, B.CREDIT_AMOUNT AS ORG_CRAMT,B.DEBIT_AMOUNT AS ORG_DRAMT FROM 
	(SELECT b.vm_id,BB.REF_NO,ac_code,SUM(CASE WHEN BB.X_TYPE='CR' THEN AMOUNT ELSE 0 END) AS CREDIT_AMOUNT,
	 SUM(CASE WHEN BB.X_TYPE='DR' THEN AMOUNT ELSE 0 END) AS DEBIT_AMOUNT
	 FROM @TBILL_BY_BILL_REF BB JOIN @vdC A ON A.VD_ID=BB.VD_ID AND A.VM_ID=BB.VM_ID
	 JOIN @vmC B ON A.VM_ID=B.VM_ID 
	 
	 GROUP BY BB.REF_NO,b.vm_id,ac_code) A
	 LEFT OUTER JOIN 						  
	(SELECT AC_CODE,B.vm_id,BB.REF_NO,SUM(CASE WHEN BB.X_TYPE='CR' THEN AMOUNT ELSE 0 END) AS CREDIT_AMOUNT,
	 SUM(CASE WHEN BB.X_TYPE='DR' THEN AMOUNT ELSE 0 END) AS DEBIT_AMOUNT
	 FROM VD01106 A (NOLOCK) JOIN VM01106 B (NOLOCK) ON A.VM_ID=B.VM_ID
	 JOIN BILL_BY_BILL_REF BB (NOLOCK) ON BB.VD_ID=A.VD_ID
	 JOIN @vmC C ON  c.vm_id=a.vm_id
	 WHERE B.BILL_TYPE='ARC' AND B.CANCELLED=0 
	 GROUP BY BB.REF_NO,AC_CODE,B.VM_ID) B ON A.AC_CODE=B.AC_CODE AND A.VM_ID=B.vm_id
	 AND A.REF_NO=B.REF_NO WHERE ABS(ISNULL(A.CREDIT_AMOUNT+A.DEBIT_AMOUNT,0)-
	 ISNULL(B.DEBIT_AMOUNT+B.CREDIT_AMOUNT,0))>=1

	 
	-- if @@spid=58
	-- begin
	--		select 'check diffvm',* from #DIFFVMS where ref_no='17A-000001/20190217'

	--		SELECT 'check bb', AC_CODE,B.vm_id,BB.REF_NO,SUM(CASE WHEN BB.X_TYPE='CR' THEN AMOUNT ELSE 0 END) AS CREDIT_AMOUNT,
	--	 SUM(CASE WHEN BB.X_TYPE='DR' THEN AMOUNT ELSE 0 END) AS DEBIT_AMOUNT
	--	 FROM  @vdC A JOIN @vmC B  ON A.VM_ID=B.VM_ID
	--	 JOIN @TBILL_BY_BILL_REF BB ON BB.VD_ID=A.VD_ID
	--	 	 WHERE B.BILL_TYPE='ARC' AND B.CANCELLED=0  and bb.ref_no='17A-000001/20190217'
	--	 GROUP BY BB.REF_NO,
	--	 AC_CODE,B.VM_ID

	--		SELECT 'check bb', AC_CODE,B.vm_id,BB.REF_NO,SUM(CASE WHEN BB.X_TYPE='CR' THEN AMOUNT ELSE 0 END) AS CREDIT_AMOUNT,
	--	 SUM(CASE WHEN BB.X_TYPE='DR' THEN AMOUNT ELSE 0 END) AS DEBIT_AMOUNT
	--	 FROM VD01106 A (NOLOCK) JOIN VM01106 B (NOLOCK) ON A.VM_ID=B.VM_ID
	--	 JOIN BILL_BY_BILL_REF BB (NOLOCK) ON BB.VD_ID=A.VD_ID
	--	 JOIN @vmC C ON  c.vm_id=a.vm_id
	--	 WHERE B.BILL_TYPE='ARC' AND B.CANCELLED=0  and bb.ref_no='17A-000001/20190217'
	--	 GROUP BY BB.REF_NO,
	--	 AC_CODE,B.VM_ID
	--end

	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

	UPDATE a SET last_update=b.last_update FROM postact_voucher_link a WITH (ROWLOCK)
	JOIN @VLINK b ON a.vm_id=b.VM_ID AND a.memo_id=b.MEMO_ID
	LEFT OUTER JOIN #DIFFVMS c ON A.vm_id=c.vm_id
	WHERE a.xn_type='ARC' and C.VM_ID IS NULL
	
	SET @CSTEP=470
	EXEC SP_CHKXNSAVELOG 'ARCPOST',@cStep,1,@nSpId,'',1	 		
	PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)


	--print 'delete balanced posted entries-1'
 --	DELETE A FROM @VMC A LEFT OUTER JOIN  #DIFFVMS B ON A.vm_id=b.vm_id
	--WHERE B.vm_ID IS NULL
	
	--print 'delete balanced posted entries-2'
	--DELETE a FROM @vdC a LEFT OUTER JOIN @vmC b ON a.vm_id=b.vm_id WHERE b.vm_id IS NULL

	SET @cStep=480
	PRINT 'Running Arc Posting Step#'+@cStep+':'+convert(varchar,getdate(),113)

    IF @NSPID=0
		SET @NSPID=@@SPID
	
	DELETE FROM ACT_VM01106_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_VD01106_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_BILL_BY_BILL_REF_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_POSTACT_VOUCHER_LINK_UPLOAD WHERE SP_ID=@NSPID
	
	SET @CSTEP = 490
	
	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
    INSERT ACT_VM01106_UPLOAD	( ANGADIA_CODE, APPROVED, APPROVEDLEVELNO, ATTACHMENT_FILE, AUDITED_DT, 
    AUDITED_USER_CODE, BILL_AC_CODE, BILL_DT, BILL_ID, BILL_NO, BILL_TYPE, CANCELLED, CASH_VOUCHER, COMPANY_CODE, 
    CRTOTAL, DEPT_ID, DRTOTAL, EDT_USER_CODE, FIN_YEAR, FREEZE, LAST_UPDATE, LR_DT, LR_NO, MEMO, MRR_LIST, OP_ENTRY,
    QUANTITY, REF_NO, REF_VM_ID, REMINDER_DAYS, SALE_VOUCHER, SENT_FOR_RECON, SENT_TO_HO, SMS_SENT, SR_NO, 
    UPLOADED_TO_ACTIVSTREAM, USER_CODE, VM_ID, VM_NO, VOUCHER_CODE, VOUCHER_DT, VOUCHER_NO, SP_ID,TEMP_VM_ID )  
    SELECT 	  ANGADIA_CODE,0 AS APPROVED,0 AS APPROVEDLEVELNO,'' AS ATTACHMENT_FILE,'' AS AUDITED_DT, 
    '' AS AUDITED_USER_CODE, BILL_AC_CODE,BILL_DT, ISNULL(BILL_ID,'') AS BILL_ID,ISNULL( BILL_NO,'') AS BILL_NO,
     BILL_TYPE,a.CANCELLED, 
    0 AS CASH_VOUCHER, '01' AS COMPANY_CODE, CRTOTAL, DEPT_ID, DRTOTAL,'' AS EDT_USER_CODE,
	('01'+dbo.FN_GETFINYEAR(voucher_dt)) FIN_YEAR, 
    0 AS FREEZE,GETDATE() AS  LAST_UPDATE,'' AS LR_DT,'' AS LR_NO,0 AS MEMO,'' AS MRR_LIST,0 AS  OP_ENTRY,
    QUANTITY, '' AS REF_NO,'' AS REF_VM_ID,0 AS  REMINDER_DAYS,1 AS SALE_VOUCHER,0 AS  SENT_FOR_RECON,0 AS SENT_TO_HO, 
    0 AS SMS_SENT,0 AS SR_NO,0 AS UPLOADED_TO_ACTIVSTREAM,'0000000' AS USER_CODE,
    VM_ID,'' AS VM_NO, VOUCHER_CODE, VOUCHER_DT,VOUCHER_NO, @NSPID AS SP_ID,'' AS TEMP_VM_ID 
    FROM @vmC A 
    
	
	SET @CSTEP = 500


	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_VD01106_UPLOAD	( AC_CODE, AUTOENTRY, CHK_RECON, COMPANY_CODE, CONTROL_AC, COST_CENTER_AC_CODE, COST_CENTER_DEPT_ID, 
	CREDIT_AMOUNT, DEBIT_AMOUNT, LAST_UPDATE, NARRATION, RECON_DT, SECONDARY_NARRATION, VAT_ENTRY, VD_ID, VM_ID, VS_AC_CODE, X_TYPE, SP_ID,TEMP_VD_ID )
	SELECT AC_CODE,0 AS AUTOENTRY,0 AS CHK_RECON,'01' AS COMPANY_CODE,0 AS CONTROL_AC,'0000000000' AS COST_CENTER_AC_CODE, 
	ISNULL(cost_center_Dept_id,@CDEPTID) AS COST_CENTER_DEPT_ID,CREDIT_AMOUNT, DEBIT_AMOUNT,GETDATE() AS LAST_UPDATE,ISNULL(NARRATION,'') AS NARRATION,'' AS RECON_DT, 
	'' AS SECONDARY_NARRATION, 0 AS VAT_ENTRY,VD_ID,A.VM_ID,ISNULL(VS_AC_CODE,'0000000000') AS VS_AC_CODE,
	X_TYPE, @NSPID AS SP_ID,'' AS TEMP_VD_ID 
	FROM @vdC A
	JOIN @vmC B ON A.VM_ID=B.VM_ID
    WHERE (DEBIT_AMOUNT<>0 OR CREDIT_AMOUNT<>0)

	
	SET @CSTEP = 515
	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_BILL_BY_BILL_REF_UPLOAD	( ADJ_REMARKS, AMOUNT, BB_ROW_ID, CR_DAYS, LAST_UPDATE, PAYMENT_ADJ_REF_NO, 
	REF_NO,  REMARKS, VD_ID, X_TYPE, SP_ID ,VM_ID)  
	SELECT '' AS ADJ_REMARKS,AMOUNT,'' AS BB_ROW_ID,0 AS CR_DAYS,GETDATE() AS LAST_UPDATE,'' AS PAYMENT_ADJ_REF_NO, 
	REF_NO, '' AS REMARKS,A.VD_ID,A.X_TYPE,@NSPID AS SP_ID,A.VM_ID FROM @TBILL_BY_BILL_REF A
    JOIN @vdC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID
    JOIN @vmC C ON B.VM_ID=C.VM_ID
    WHERE A.AMOUNT<>0
	
	SET @CSTEP = 525

	
	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_POSTACT_VOUCHER_LINK_UPLOAD	( LAST_UPDATE, MEMO_ID, VM_ID, XN_TYPE, SP_ID )  
	SELECT 	LAST_UPDATE, MEMO_ID, A.VM_ID, A.XN_TYPE, @NSPID AS SP_ID 
	FROM @vlink A
    JOIN @vmC B ON A.VM_ID=B.VM_ID


    

    SELECT  @nSpId sp_id, CONVERT(BIT,1) AS CHK,CONVERT(BIT,1) optimized,*,CONVERT(BIT,0) AS ERROR_FLAG,CONVERT(VARCHAR(500),'') AS ERROR_DESC
    FROM @VMC 
	ORDER BY voucher_dt   

    SELECT  * FROM @vdC
	ORDER BY VM_ID    
    
	SELECT * FROM #ERRORS  WHERE 1=2   
    SELECT * FROM @VLINK
	ORDER BY VM_ID    

	SELECT b.AC_NAME,A.*,A.REF_NO AS BILL_NO FROM @TBILL_BY_BILL_REF A
	JOIN @vdC B  ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID


         
    END TRY    
 BEGIN CATCH    
   SET @CERRORMSG='PROCEDURE POSTACT_GST_ARC STEP:- '+@CSTEP+' '+ERROR_MESSAGE()
   GOTO END_PROC
 END CATCH    

END_PROC:
	IF ISNULL(@CERRORMSG,'')<>''
		SELECT @CERRORMSG AS ERRMSG             
END    
--END OF PROCEDURE - POSTACT_GST_ARC