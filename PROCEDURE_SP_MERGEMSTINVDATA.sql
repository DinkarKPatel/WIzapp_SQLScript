CREATE PROCEDURE SP_MERGEMSTINVDATA
(
	@NSPID INT
)
--WITH ENCRYPTION
AS
BEGIN
	
	
	BEGIN TRY
		
		DECLARE @CERRORMSG VARCHAR(1000),@CCURDEPTID CHAR(2),@CHODEPTID CHAR(2),@CCMD NVARCHAR(MAX),
				@CXNMASTERTABLENAME VARCHAR(100),@BPROCEED BIT,@CTABLENAME VARCHAR(100),@CMASTERKEYFIELD VARCHAR(100),
				@CKEYFIELD VARCHAR(100),@CPARENTTABLENAME VARCHAR(100),@CPARENTPARANAME VARCHAR(100),@CCHILDPARANAME VARCHAR(100),
				@CWHERECLAUSE VARCHAR(100),@CJOINSTR VARCHAR(1000),@CMEMOID VARCHAR(100),@CFINYEAR VARCHAR(100),
				@NGRPCHARS INT,@NSERIESCHARS INT,@BSERIESBROKEN BIT,@CPREVMEMOID VARCHAR(40),@CMERGETABLENAME VARCHAR(50),
				@CFIRSTMEMOID VARCHAR(40),@NPREVMEMOID INT,@NMEMONOLEN INT,@CRETCMD NVARCHAR(MAX),
				@CDELCHILDTABLENAME VARCHAR(100),@CDELCHILDPARANAME VARCHAR(100),@CDELPARENTPARANAME VARCHAR(100),
				@CORIGINALTABLENAME VARCHAR(100),@NLOCTYPE INT,@BDONOTMERGE BIT,@CRFXNTYPE VARCHAR(10),
				@BINSERTONLY BIT,@BLINKEDMASTER BIT,@BPURLOC BIT,@CSOURCELOCID CHAR(2),@BSOURCEPURLOC BIT,
				@CMISSINGMEMOID VARCHAR(40),@CGRPCODE VARCHAR(20),@BRETVAL BIT,@NPREVNO INT,@CPREVNO VARCHAR(20),
				@BEMPHEADSUPDATED BIT,@CFILTERCONDITION VARCHAR(100),@CTABLEPREFIX VARCHAR(100),@CXNTYPE VARCHAR(10),
				@NXNSMERGINGORDER INT,@NSTEP INT,@CUNQCOLUMNNAME1 VARCHAR(100),@CUNQCOLUMNNAME2 VARCHAR(100),
				@CKEYFIELD2 VARCHAR(100)
		
		
		SET @NSTEP=10
		
		DECLARE @TRETMSG TABLE  (MEMO_ID VARCHAR(40),ERRMSG VARCHAR(MAX))

		BEGIN TRANSACTION
			
		SELECT @CERRORMSG='',@BPROCEED=1,@NMEMONOLEN=10,@CRETCMD='',@CMEMOID='',@CXNTYPE='MSTINV',@BEMPHEADSUPDATED=0
		
		SET @CTABLEPREFIX='TMP_MSTINV'
		
		SET @NSTEP=20
		
		SET @CFILTERCONDITION=''

		SELECT @CCURDEPTID = VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='LOCATION_ID'
						
		SELECT @NLOCTYPE=LOC_TYPE,@BPURLOC=PUR_LOC FROM LOCATION (NOLOCK) WHERE DEPT_ID=@CCURDEPTID
		
		SET @CMEMOID='MSTINV'
	
	LBLMERGEBEFORE:
		
		--- DELETE SOME ENTRIES FROM THE TARGET TABLES & SOURCE TABLES BEFORE PROCEEDING FOR MERGING
		
		SET @NSTEP=30		
		
		IF CURSOR_STATUS('GLOBAL','MSTCUR') IN (0,1)  
		BEGIN  
		   CLOSE MSTCUR  
			DEALLOCATE MSTCUR  
		END  


		DECLARE MSTCUR CURSOR FOR SELECT TABLENAME,KEYFIELD FROM XNSINFO
		WHERE XN_TYPE=@CXNTYPE AND TABLENAME IN ('ART_ATTR','ART_DET','ART_PARA1','SD_ATTR')
		
		OPEN MSTCUR
		FETCH NEXT FROM MSTCUR INTO @CTABLENAME,@CKEYFIELD
		WHILE @@FETCH_STATUS=0
		BEGIN
				
			IF @CTABLENAME<>'SD_ATTR'
			BEGIN
				SET @NSTEP=32	
				SET @CCMD=N'IF OBJECT_ID(''TMP_'+@CXNTYPE+'_'+@CTABLENAME+'_'+LTRIM(RTRIM(STR(@NSPID)))+''',''U'') IS NOT NULL	
							BEGIN
							IF OBJECT_ID(''TEMPDB..#TMPARTICLE1'','' U'') IS NOT NULL 
							   DROP TABLE #TMPARTICLE1
							   
							SELECT A.ARTICLE_CODE INTO #TMPARTICLE1 FROM TMP_'+@CXNTYPE+'_ARTICLE_'+LTRIM(RTRIM(STR(@NSPID)))+
								' A JOIN ARTICLE B ON A.ARTICLE_CODE=B.ARTICLE_CODE	WHERE B.LAST_UPDATE<=CONVERT(DATETIME,A.LAST_UPDATE)
								
								IF OBJECT_ID(''TEMPDB..#TMPARTICLE2'','' U'')  IS NOT NULL
							   DROP TABLE #TMPARTICLE2
							   
								SELECT A.ARTICLE_CODE INTO #TMPARTICLE2 FROM TMP_'+@CXNTYPE+'_ARTICLE_'+LTRIM(RTRIM(STR(@NSPID)))+
								' A JOIN ARTICLE B ON A.ARTICLE_CODE=B.ARTICLE_CODE	WHERE B.LAST_UPDATE>CONVERT(DATETIME,A.LAST_UPDATE)
								
								DELETE A FROM '+@CTABLENAME+(CASE WHEN @BPURLOC=0 THEN ' A ' ELSE
								' A JOIN #TMPARTICLE1  B ON A.ARTICLE_CODE=B.ARTICLE_CODE ' END)+' 

								DELETE A FROM TMP_'+@CXNTYPE+'_'+@CTABLENAME+'_'+LTRIM(RTRIM(STR(@NSPID)))+
								(CASE WHEN @BPURLOC=0 THEN ' A WHERE 1=2 ' ELSE
								 ' A JOIN #TMPARTICLE2  B ON A.ARTICLE_CODE=B.ARTICLE_CODE ' END)+' 
							END'							
			END
			ELSE				
			BEGIN
				SET @NSTEP=33	
				SET @CCMD=N'IF OBJECT_ID(''TMP_'+@CXNTYPE+'_'+@CTABLENAME+'_'+LTRIM(RTRIM(STR(@NSPID)))+''',''U'') IS NOT NULL	
							BEGIN
								DELETE FROM '+@CTABLENAME+(CASE WHEN @BPURLOC=0 THEN '' ELSE
								' WHERE SUB_SECTION_CODE IN (SELECT A.SUB_SECTION_CODE FROM TMP_'+@CXNTYPE+'_SECTIOND_'+LTRIM(RTRIM(STR(@NSPID)))+
								' A JOIN SECTIOND B ON A.SUB_SECTION_CODE=B.SUB_SECTION_CODE WHERE B.LAST_UPDATE<=CONVERT(DATETIME,A.LAST_UPDATE))' END)+'

								DELETE FROM TMP_'+@CXNTYPE+'_'+@CTABLENAME+'_'+LTRIM(RTRIM(STR(@NSPID)))+(CASE WHEN @BPURLOC=0 THEN ' WHERE 1=2 ' ELSE
								' WHERE SUB_SECTION_CODE IN (SELECT A.SUB_SECTION_CODE FROM TMP_'+@CXNTYPE+'_SECTIOND_'+LTRIM(RTRIM(STR(@NSPID)))+
								' A JOIN SECTIOND B ON A.SUB_SECTION_CODE=B.SUB_SECTION_CODE WHERE B.LAST_UPDATE>CONVERT(DATETIME,A.LAST_UPDATE))' END)+'
							END'	

			END
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
							
			FETCH NEXT FROM MSTCUR INTO @CTABLENAME,@CKEYFIELD
		END
		CLOSE MSTCUR
		DEALLOCATE MSTCUR

		SET @NSTEP=35
		DELETE FROM MBQ_DET WITH (ROWLOCK)
		DELETE FROM ARTICLE_MEASUREMENTS WITH (ROWLOCK)
		DELETE FROM MEASUREMENT_MST WITH (ROWLOCK)
		
		SET @CCMD=N'IF OBJECT_ID(''TMP_MSTINV_MBQ_DET_'+LTRIM(RTRIM(STR(@NSPID)))+''',''U'') IS NOT NULL	
						DELETE FROM TMP_MSTINV_MBQ_DET_'+LTRIM(RTRIM(STR(@NSPID)))+' WITH (ROWLOCK) WHERE DEPT_ID<>'''+@CCURDEPTID+''''
		EXEC SP_EXECUTESQL @CCMD
		
	LBLMERGE:
		SET @NSTEP=40

		IF @NLOCTYPE=2
		BEGIN
			SET @CCMD=N'IF OBJECT_ID(''TMP_MSTINV_SKU_'+LTRIM(RTRIM(STR(@NSPID)))+''',''U'') IS NOT NULL	
							UPDATE A SET AC_CODE=ISNULL(B.AC_CODE,''0000000000''),FORM_ID=''0000000'' FROM TMP_MSTINV_SKU_'+LTRIM(RTRIM(STR(@NSPID)))+' A
							LEFT OUTER JOIN SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE'
			EXEC SP_EXECUTESQL @CCMD
		END	
				
		IF CURSOR_STATUS('GLOBAL','MERGECUR') IN (0,1)  
		BEGIN  
		   CLOSE MERGECUR  
			DEALLOCATE MERGECUR  
		END  
		
		--- NOW, UPDATE TRANSACTIONS DATA ONE BY ONE
		DECLARE MERGECUR CURSOR FOR 
		SELECT  DISTINCT TABLENAME, KEYFIELD,LINKED_MASTER,XNS_MERGING_ORDER 
		FROM XNSINFO 
		WHERE XN_TYPE = @CXNTYPE 
		AND   XNS_MERGING_ORDER <> 99 
		ORDER BY XNS_MERGING_ORDER
		
		OPEN MERGECUR
		FETCH NEXT FROM MERGECUR INTO @CTABLENAME,@CKEYFIELD,@BLINKEDMASTER,@NXNSMERGINGORDER		
		WHILE @@FETCH_STATUS=0
		BEGIN
			
			SET @NSTEP=50	
			
			LBLSTARTMERGE:
			SET @BPROCEED=1
			
			SET @CCMD=N'IF NOT EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME=''TMP_' + @CXNTYPE + '_' + @CTABLENAME + '_' + LTRIM(RTRIM(STR(@NSPID)))+''')
							SET @BPROCEEDOUT=0'
			
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD,N'@BPROCEEDOUT BIT OUTPUT',@BPROCEEDOUT=@BPROCEED OUTPUT
			
			
			SET @NSTEP=60
			
			IF @BPROCEED=0
				GOTO LBLMERGENEXT
		

			IF @CTABLENAME='EAN_SYNC'
				DELETE FROM EAN_SYNC WITH (ROWLOCK)
			
			IF EXISTS (SELECT TABLENAME FROM MST_UNQ (NOLOCK) WHERE TABLENAME=@CTABLENAME)
			BEGIN
				SELECT @CUNQCOLUMNNAME1=PRIMARY_COLUMNNAME FROM MST_UNQ  (NOLOCK) WHERE TABLENAME=@CTABLENAME 
				SELECT @CUNQCOLUMNNAME2=SECONDARY_COLUMNNAME FROM MST_UNQ  (NOLOCK) WHERE TABLENAME=@CTABLENAME
				
				SET @NSTEP=65	
				
				SET @CCMD=N'UPDATE '+@CTABLENAME+' SET '+@CUNQCOLUMNNAME1+'='+@CTABLENAME+'.'+@CUNQCOLUMNNAME1+'+''_''+'+
							@CTABLENAME+'.'+@CKEYFIELD+' FROM [TMP_'+@CXNTYPE + '_' + @CTABLENAME + '_' +
							 LTRIM(RTRIM(STR(@NSPID)))+'] B 	WHERE B.'+@CUNQCOLUMNNAME1+'='+@CTABLENAME+'.'+
							 @CUNQCOLUMNNAME1+(CASE WHEN @CUNQCOLUMNNAME2<>'' THEN ' AND B.'+@CUNQCOLUMNNAME2+
							 '='+@CTABLENAME+'.'+@CUNQCOLUMNNAME2 ELSE '' END)+' AND B.'+@CKEYFIELD+'<>'+@CTABLENAME+'.'+@CKEYFIELD
				PRINT @CCMD				  
				EXEC SP_EXECUTESQL @CCMD				   	
			END
			
			SET @BINSERTONLY=0
			
			SET @NSTEP=70		
			
			IF @CTABLENAME='ART_ATTR'
				SELECT @CKEYFIELD='ARTICLE_CODE',@CKEYFIELD2='ATTRIBUTE_CODE'
			ELSE
				SELECT @CKEYFIELD2=''
					
			SET @CCMD='EXEC UPDATEMASTERXN_MERGING '''','''+@CTABLEPREFIX+'_' + @CTABLENAME + '_' + LTRIM(RTRIM(STR(@NSPID)))+''','''',
					   '''+@CTABLENAME+''','''+@CKEYFIELD+''','''','''','+
					   (CASE WHEN @BINSERTONLY=1 THEN '1' ELSE '0' END)+',0,1,'''+@CFILTERCONDITION+''',@CERRORMSGOUT OUTPUT'
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD,N'@CERRORMSGOUT VARCHAR(1000) OUTPUT',@CERRORMSGOUT=@CERRORMSG OUTPUT
			
			IF @CERRORMSG<>''
				BREAK
			
			SET @NSTEP=80
			
			LBLMERGENEXT:
			
			FETCH NEXT FROM MERGECUR INTO @CTABLENAME,@CKEYFIELD,@BLINKEDMASTER,@NXNSMERGINGORDER		
		END
		CLOSE MERGECUR
		DEALLOCATE MERGECUR
			
		SET @NSTEP=90
		
		-- DELETING FROM TEMP TABLES
		
		EXEC SP_DROPTEMPTABLES_XNS @CXNTYPE,@NSPID
		
		SET @CRETCMD='SELECT '''+@CMEMOID+''' AS MEMO_ID,'''+@CERRORMSG+''' AS ERRMSG'	
			
		
	LBLLAST:
		
		SET @NSTEP=100
		
		--- ON SUCCESSFUL MERGING , DELETE ENTRY FROM XN HISTORY 		
		IF @CERRORMSG=''
		BEGIN
			
			IF @@TRANCOUNT>0
			BEGIN
				PRINT 'SUCCESS'
				COMMIT TRANSACTION
			END	
		END
		ELSE
		BEGIN
			IF @@TRANCOUNT>0
				ROLLBACK 	
		END	
		
		SET @NSTEP=110
		
		INSERT @TRETMSG
		SELECT 'MSTINV',@CERRORMSG
		
		SELECT * FROM @TRETMSG
		
		
	END TRY

	BEGIN CATCH
		
		PRINT 'UNTRAPPED ERROR'		
		SELECT @CERRORMSG='PROCEDURE : '+ISNULL(ERROR_PROCEDURE(),'NULL P')+'STEP: '+STR(@NSTEP)+' LINE NO. :'+
		ISNULL(LTRIM(RTRIM(STR(ERROR_LINE()))),'NULL LINE')+'MSG :'+ISNULL(ERROR_MESSAGE(),'NULL MSG')
		
		SET @CRETCMD='SELECT '''' AS MEMO_ID,'''''+@CERRORMSG+''''' AS ERRMSG'
		
		PRINT 'RETURN VALUE : '+ISNULL(@CRETCMD,'NULL RETCMD')+@CMEMOID
		--EXEC SP_EXECUTESQL @CRETCMD
		
		INSERT @TRETMSG
		SELECT 'MSTINV',@CERRORMSG
		
		SELECT * FROM @TRETMSG
		
		
		IF @@TRANCOUNT>0
			ROLLBACK		

		IF CURSOR_STATUS('GLOBAL','MSTCUR') IN (0,1)
		BEGIN
			CLOSE MSTCUR
			DEALLOCATE MSTCUR
		END

		IF CURSOR_STATUS('GLOBAL','MERGECUR') IN (0,1)
		BEGIN
			CLOSE MERGECUR
			DEALLOCATE MERGECUR
		END
		
		EXEC SP_DROPTEMPTABLES_XNS @CXNTYPE,@NSPID		
	END CATCH
		
END
--- END OF CREATING PROCEDURE SP_MERGEMSTINVDATA
