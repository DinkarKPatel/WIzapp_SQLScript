CREATE PROCEDURE POSTACT_GST_WSL --(LocId 3 digit change by Sanjay:26-11-2024 left changes by concerned developer)
(
	@DTTO DATETIME,
	@CDEPTID CHAR(4)='',
	@CACCODE CHAR(10)='',
	@CXNTYPEPARA VARCHAR(10),
	@NXNITEMTYPE NUMERIC(1,0),
	@NLOOP NUMERIC(1,0),
	@BLOC BIT=0
)
AS
BEGIN

    DECLARE @CSTEP VARCHAR(10),@CDISCACCODE VARCHAR(10),@CFREIGHTACCODE VARCHAR(10),@CINSURANCEACCODE VARCHAR(10),
			@COTHERCHARGESACCODE VARCHAR(10),@CROUNDOFFACCODE VARCHAR(10),@NCTR NUMERIC(10,0),
			@NSUBTOTAL NUMERIC(14,2),@NTAXAMOUNT NUMERIC(14,2), @CPURACCODE VARCHAR(50),@CTAXACCODE VARCHAR(100),
			@CINVID VARCHAR(50),@LOUTSTATIONPARTY BIT,@TMPDR NUMERIC(14,2),
			@TMPCR NUMERIC(14,2),@CCURSTATECODE	VARCHAR(10),@CVMID	VARCHAR(40),@CLOCATIONID CHAR(2),
			@CLASTBILLNO VARCHAR(40),@DTMPVENDORBILLDT DATETIME,@CRMLIST VARCHAR(300),@NTMPCREDITDAYS NUMERIC(10),
			@NTMPCRDISCOUNTPERCENTAGE NUMERIC(14,2),@DLASTINVDT	DATETIME,@CVOUCHERCODE VARCHAR(10),
			@COLDBILLTYPE VARCHAR(10),@CLASTACCODE VARCHAR(10),@CLASTPARTYNAME VARCHAR(100),@NTOTQUANTITY NUMERIC(14,2),
			@NTOTNETAMOUNT NUMERIC(14,2),@CDEPTNAME VARCHAR(100),@CVOUCHERNO VARCHAR(10),
			@NDIFFAMT NUMERIC(14,4),@CINVNO VARCHAR(50),@BGSTBILL BIT,@CCASHACCODE CHAR(10),
			@CSLOCGSTSTATECODE VARCHAR(5),@CTLOCGSTSTATECODE VARCHAR(5),@CPARTYGSTSTATECODE VARCHAR(5),@NINVMODE NUMERIC(1,0),
			@CSETOFFACCODE CHAR(10),@CADJDIFFACCODE CHAR(10),@BMANUALROFF BIT,@NROLIMIT NUMERIC(7,3),
			@DGSTCUTOFFDATE DATETIME,@CERRORMSG VARCHAR(MAX),@BBLANKACFOUND BIT ,@cRemarks VARCHAR(MAX),
			@bPostRemarksInNarration BIT,@cTcsAcCode CHAR(10),@nPaymode NUMERIC(1,0),@nSpId VARCHAR(40),
			@nManualRoff NUMERIC(6,2)
	
   
  
   SET @CSTEP=10  
   set @nSpId=ltrim(rtrim(str(@@spid)))  
			
	DECLARE @CPARTYACCODE VARCHAR(10),@CPARTYSTATECODE VARCHAR(10),@NNETAMOUNT NUMERIC(14,2),
			@NDISCAMOUNT NUMERIC(14,2),@NFREIGHT NUMERIC(14,2),	@NOTHER NUMERIC(14,2),@NROUNDOFF NUMERIC(14,2),
			@NDRTOTAL NUMERIC(14,4),@NCRTOTAL NUMERIC(14,4),@CCUTOFFDATE VARCHAR(20),@CXNTYPE VARCHAR(10)
			,@CAC_CODE VARCHAR(20),@CVDID VARCHAR(40)

	DECLARE @CCURLOCID varCHAR(5),@cHoLocId varchar(5)

	SELECT TOP 1 @CCURLOCID=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
	SELECT TOP 1 @cHoLocId=VALUE FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'
	
    SET @CFREIGHTACCODE=''
    SET @CROUNDOFFACCODE=''
	
	SET @CERRORMSG=''    
    SET @CSTEP=20
    --THIS TABLE VARIABLE STORE ERROR OF OF MEMO ID
    
    IF OBJECT_ID('TEMPDB..#ERRORS','U') IS NOT NULL
		DROP TABLE #ERRORS
		
    CREATE TABLE #ERRORS
	(
		XN_TYPE VARCHAR(10),SOURCE_TABLE VARCHAR(200),COLUMNNAME VARCHAR(200),GST_PERCENTAGE NUMERIC(6,2),ERR_DESC VARCHAR(500)
	)   

    
    SET @CSTEP=30
    DECLARE @VCHC TABLE 
	(
		AC_CODE CHAR(10),NARRATION VARCHAR(200),XN_NO VARCHAR(30),
		XN_DT DATETIME,DEPT_ID CHAR(4),AMOUNT NUMERIC(14,4),XN_ID VARCHAR(50),
		REF_BILL_NO VARCHAR(50),REF_BILL_DATE DATETIME,	ENTRY_ID INT
		,CRDAYS NUMERIC(5)
	)
	
	SET @CSTEP=40
	DECLARE @VDC TABLE 
	(
		VD_ID VARCHAR(50),				VM_ID VARCHAR(40),				AC_CODE CHAR(10), 
		NARRATION VARCHAR(2000),			DEBIT_AMOUNT NUMERIC(14,4),		CREDIT_AMOUNT NUMERIC(14,4),
		X_TYPE CHAR(2), 				VS_AC_CODE CHAR(10),	 		REF_BILL_NO VARCHAR(40), 
		CREDIT_DAYS NUMERIC(10),		CR_DISCOUNT_PERCENTAGE NUMERIC(14,2),		
		VAT_ENTRY BIT,REF_BILL_DATE DATETIME, AC_NAME VARCHAR(100),cd_base_amount NUMERIC(10,2),
		cd_pct NUMERIC(6,2)
	)
	
	SET @CSTEP=50
	DECLARE @VMC TABLE
	(
		VM_ID VARCHAR(400), 			VOUCHER_NO VARCHAR(400), 		VOUCHER_DT DATETIME, 
		VOUCHER_CODE CHAR(10),	 		DEPT_ID CHAR(4),				BILL_TYPE VARCHAR(300),
		BILL_NO VARCHAR(200), 			BILL_ID VARCHAR(220), 			BILL_DT DATETIME, 
		BILL_AC_CODE VARCHAR(100),		DRTOTAL NUMERIC(20,2),			CRTOTAL NUMERIC(20,2), 
		CASH_VOUCHER BIT, 				SALE_VOUCHER BIT, 				QUANTITY NUMERIC(20,2), 
		ANGADIA_CODE CHAR(70), 			LR_NO VARCHAR(500), 			LR_DT DATETIME,
		PARTY_NAME VARCHAR(1000),		NET_AMOUNT NUMERIC(20,2), 		BILL_STATUS VARCHAR(1000),
		RM_LIST VARCHAR(3000), 		CANCELLED BIT,					DEPT_NAME VARCHAR(100),
		VOUCHER_TYPE VARCHAR(100),ERROR_FLAG BIT	
	)
	
	SET @CSTEP=60
	DECLARE @VLINK TABLE
	(
		VM_ID VARCHAR(100),MEMO_ID VARCHAR(100),XN_TYPE VARCHAR(20),LAST_UPDATE DATETIME
	)
	
	DECLARE @TBILL_BY_BILL_REF TABLE(VD_ID VARCHAR(40),BILL_NO VARCHAR(40),AMOUNT NUMERIC(18,4),LAST_UPDATE DATETIME
								,X_TYPE VARCHAR(20),CR_DAYS NUMERIC(5),VM_ID VARCHAR(40),CD_PERCENTAGE NUMERIC(6,2),cd_base_amount NUMERIC(10,2))
	
	
	SELECT TOP 1 @CCUTOFFDATE=CUTOFFDATE,@bPostRemarksInNarration=ISNULL(post_remarks_in_narration,0) FROM GST_ACCOUNTS_CONFIG_MST WHERE XN_TYPE =@CXNTYPEPARA
	
	SET @CCUTOFFDATE=ISNULL(@CCUTOFFDATE,'')
	
	SET @DGSTCUTOFFDATE='2017-07-01'
	
	SET @CSTEP=70
	SET @CVOUCHERCODE = '0000000007'
    BEGIN TRY
			
			DECLARE @IMAXLEVEL INT
			
			--GETTING THE MAX LEVEL OF APPROVAL FOR PURCHASE TRANSACTION
			SELECT @IMAXLEVEL=MAX(LEVEL_NO) 
			FROM XN_APPROVAL_CHECKLIST_LEVELS 
			WHERE XN_TYPE='WSL' AND INACTIVE=0
			
			IF EXISTS(SELECT TOP 1 'U' FROM XN_APPROVAL_CHECKLIST_LEVELS  WHERE XN_TYPE='WSL' AND INACTIVE=0 AND ISNULL(AC_POSTING,0)<>0)
			BEGIN
			    SELECT @IMAXLEVEL=LEVEL_NO
				FROM XN_APPROVAL_CHECKLIST_LEVELS 
				WHERE XN_TYPE='WSL' AND INACTIVE=0 AND ISNULL(AC_POSTING,0)<>0
			END
			
			
			SET @IMAXLEVEL=ISNULL(@IMAXLEVEL,0)
			
			
			SET @CSTEP=80
			IF OBJECT_ID('TEMPDB..#WSLTABLE','U') IS NOT NULL
				DROP TABLE #WSLTABLE 
			
			SET @CSTEP=90
			--THIS TABLE STORE ALL PENDING MEMO_ID 
			CREATE TABLE #WSLTABLE (MEMO_ID VARCHAR(30),MODE VARCHAR(10),ERROR_FLAG BIT)
			
			SET @CSTEP=100
			--GETTING LIST OF WHOLESALE INVOICES THAT QUALIFY FOR VOUCHER POSTING
			INSERT INTO #WSLTABLE (MEMO_ID,MODE)
	        SELECT A.INV_ID,'WSL' AS MODE 
	        FROM INM01106 A
	        JOIN LOCATION SL ON a.location_Code =SL.DEPT_ID
	        LEFT JOIN LOCATION TL ON A.PARTY_DEPT_ID=TL.DEPT_ID
	        JOIN LMP01106 LMP ON LMP.AC_CODE=A.AC_CODE
			LEFT JOIN loc_accounting_company lac1 (NOLOCK) ON lac1.pan_no=sl.PAN_NO
			LEFT JOIN loc_accounting_company lac2 (NOLOCK) ON lac2.pan_no=SUBSTRING(sl.loc_gst_no,3,10)	        
			LEFT OUTER JOIN 
	        (
				SELECT B.MEMO_ID,B.LAST_UPDATE
				FROM POSTACT_VOUCHER_LINK B 
				JOIN VM01106 C ON C.VM_ID = B.VM_ID 
				WHERE C.CANCELLED=0 AND B.XN_TYPE = 'WSL' 
	        )VM  ON A.INV_ID = VM.MEMO_ID  
	        WHERE  A.INV_MODE =1 AND 
	        ISNULL(A.APPROVEDLEVELNO,0)>=@IMAXLEVEL 
	          -- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES
		
	        AND ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)	 
	        /*WHOLESALE INV_DT IS LESS THAN THE SPECIFIED DATE.*/
	        AND A.INV_DT <= @DTTO
	        /*IF CUTOFF DATE IS SPECIFIED, CONSIDER WHOLESALE AFTER THE CUTOFF DATE*/
	        AND (ISNULL(@CCUTOFFDATE,'')='' OR A.INV_DT>@CCUTOFFDATE)
	        /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/
	        AND (ISNULL(@CDEPTID,'')='' OR a.location_Code =@CDEPTID)
	        /*WHOLESALE IS NOT GROUP/BRANCH WHOLESALE*/
	        AND INV_DT>=@DGSTCUTOFFDATE
			AND (ISNULL(A.XN_ITEM_TYPE,0)=@NXNITEMTYPE OR (ISNULL(A.XN_ITEM_TYPE,0) IN (0,1) AND @NXNITEMTYPE=1))
	        /*WHOLESALE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/
	        AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE) 
	        AND (@CACCODE='' OR A.AC_CODE=@CACCODE)
			AND (ISNULL(SL.LOC_GST_NO,'')<>ISNULL(LMP.AC_GST_NO,'')  OR ISNULL(SL.LOC_GST_NO,'')='')---- DO NOT PROCESS INVOICES FOR PARTIES HAVING SAME GST NO. AS THAT OF LOCATION
			AND SUBSTRING(ISNULL(SL.LOC_GST_NO,''),3,10)<>ISNULL(LMP.PAN_NO,'')
			AND (ISNULL(SL.pan_NO,'')<>ISNULL(LMP.PAN_NO,'') OR ISNULL(sl.pan_no,'')='')
			AND (lac1.pan_no IS NOT NULL OR lac2.pan_no IS NOT NULL)
		   SELECT @CCASHACCODE = VALUE
		   FROM GST_ACCOUNTS_CONFIG_DET_PAYMODES WHERE COLUMNNAME='CASH_AC_CODE'
			
			SET @CCASHACCODE = ISNULL(@CCASHACCODE,'')
			
            SELECT @CDISCACCODE=VALUE  FROM GST_ACCOUNTS_CONFIG_DET_OTHERS WHERE XN_TYPE =@CXNTYPEPARA AND COLUMNNAME ='DISCOUNT_AC_CODE'
			
			SET @CDISCACCODE=ISNULL(@CDISCACCODE,'')
				/*
				IF DISCOUNT HAS TO BE POSTED SEPARATELY AND DISCOUNT ACCOUNT IS NOT DEFINED, 
				SEND ERROR MESSAGE TO USER
				*/
		    
		    SET @CSTEP=180
		    --IF OTHER CHARGES CONSIDERED AS PART OF STOCK THEN CLUB IT IN WHOLESALE A/C OTHERWISE POST SEPARATELY

			SET @CSTEP=250
		   
			SET @CSTEP = 290
			--IF ROUND OFF IS CONSIDERED AS PART OF STOCK THEN CLUB IT IN WHOLESALE A/C OTHERWISE POST SEPARATELY
			
			SELECT @CROUNDOFFACCODE=VALUE  FROM GST_ACCOUNTS_CONFIG_DET_OTHERS WHERE XN_TYPE =@CXNTYPEPARA AND COLUMNNAME ='ROFF_AC_CODE'
			SELECT @cTcsAcCode=VALUE  FROM GST_ACCOUNTS_CONFIG_DET_OTHERS WHERE XN_TYPE =@CXNTYPEPARA AND COLUMNNAME ='TCS_AC_CODE'

			SET @CSTEP = 320
			SET @CROUNDOFFACCODE=ISNULL(@CROUNDOFFACCODE,'')

			SET @CSTEP = 330
			CREATE INDEX IX_TEMP_WSLTABLE_RM_ID ON #WSLTABLE(MEMO_ID)

			DECLARE @BGPCCONFIGFOUND BIT			
			SET @BGPCCONFIGFOUND=0
			IF EXISTS (SELECT TOP 1 XN_TYPE FROM GST_ACCOUNTS_CONFIG_MST WHERE XN_TYPE=@CXNTYPEPARA)
				SET @BGPCCONFIGFOUND=1
		
			SET @CSTEP=340
			---GETTING LIST OF ALL ERROR FROM WHOLESALE AND CONVERT MRN TO BILL
			/*
				INV_TYPE = 2 FOR LOCAL WHOLESALE INVOICE
				INV_TYPE = 1 FOR OUTSTATION WHOLESALE INVOICE
			*/
			
	   
	   DECLARE @CPOSTINGXNTYPE VARCHAR(10)	
		SET @CPOSTINGXNTYPE=(CASE WHEN @NXNITEMTYPE=3 THEN 'WSL_AST' WHEN @NXNITEMTYPE=4 THEN 'WSL_SRV'
							 WHEN @NXNITEMTYPE=2 THEN 'WSL_CON' ELSE 'WSL' END)

     
	        --SELECT COUNT(*) FROM #WSLTABLE
	        SET @CSTEP = 360
	        IF OBJECT_ID('TEMPDB..#V_PROCESS','U') IS NOT NULL
				DROP TABLE #V_PROCESS
			
			SET @CSTEP = 370
			/*
				BILL_LEVEL_TAX_METHOD : 1 IS EXCLUSIVE
										2 IS INCLUSIVE
														
			*/
						
			--A SINGLE WHOLESALE MEMO CAN HAVE MULTIPLE WHOLESALE AND TAX ACCOUNTS BASED ON MULTIPLE FORMS
		 	SELECT   PM.INV_ID
		 			--FOR INCLUSIVE TAX DEDUCE THE AMOUNT FROM THE SUBTOTAL AS TAX WOULD BE POSTED SEPARATELY
		 			,PM.AC_CODE
		 			,PM.NET_AMOUNT AS TOTAL_AMOUNT
		 			,PM.INV_NO
		 			,PM.INV_DT
		 			,pm.location_Code  AS DEPT_ID 
		 			,PM.CREDIT_DAYS
		 			,PM.CANCELLED
		 			,INV_MODE
		 			,SUM(PD.QUANTITY) AS QUANTITY
		 			,SUM(PD.DISCOUNT_AMOUNT+((CONVERT(NUMERIC(18,4),PM.DISCOUNT_AMOUNT)/PM.SUBTOTAL)*(PD.NET_RATE*PD.QUANTITY))) 
		 			 AS DISCOUNTAMOUNT
					,ISNULL(FREIGHT_TAXABLE_VALUE,0) AS FREIGHT
		 			,ISNULL(PM.OTHER_CHARGES_TAXABLE_VALUE,0) AS OTHERCHARGES
		 			,SUM(((CONVERT(NUMERIC(18,4),PM.OCTROI_AMOUNT)/PM.SUBTOTAL)*(PD.NET_RATE*PD.QUANTITY))) AS OCTROIAMOUNT
		 			,ISNULL(PM.INSURANCE_TAXABLE_VALUE,0) AS INSURANCE
		 			,SUM(PD.ITEM_EXCISE_DUTY_AMOUNT) AS EXCISEDUTYAMOUNT
		 			,SUM((CASE WHEN PD.DISCOUNT_AMOUNT<>0 THEN ISNULL(ITEM_ROUND_OFF,0) ELSE 0 END)*-1) AS ROUNDOFF
		 			,SUM(XN_VALUE_WITHOUT_GST) AS WSLAMOUNT
					,CONVERT(NUMERIC(10,2),0) AS WSLAMOUNT_SUBTOTAL		 							 			
		 			,SUM(PD.ITEM_TAX_AMOUNT) AS TAXAMOUNT
		 			,'WSL' AS XN_TYPE
		 			,@cPostingxnType AS POSTING_XN_TYPE
		 			,SUM(IGST_AMOUNT) AS IGST_AMOUNT
		 			,SUM(CGST_AMOUNT) AS CGST_AMOUNT
		 			,SUM(SGST_AMOUNT) AS SGST_AMOUNT
					,ISNULL(TCS_AMOUNT,0) AS TCS_AMOUNT
					,SUM(GST_CESS_AMOUNT) AS GST_CESS_AMOUNT
					,pd.GST_CESS_PERCENTAGE
					,ISNULL(PD.GST_PERCENTAGE,0) AS GST_PERCENTAGE
		 			,FREIGHT_GST_PERCENTAGE
		 			,OTHER_CHARGES_GST_PERCENTAGE
		 			,INSURANCE_GST_PERCENTAGE
		 			,FREIGHT_IGST_AMOUNT
		 			,FREIGHT_CGST_AMOUNT
		 			,FREIGHT_SGST_AMOUNT
		 			,OTHER_CHARGES_IGST_AMOUNT
		 			,OTHER_CHARGES_CGST_AMOUNT
		 			,OTHER_CHARGES_SGST_AMOUNT		 	
		 			,INSURANCE_IGST_AMOUNT
		 			,INSURANCE_CGST_AMOUNT
		 			,INSURANCE_SGST_AMOUNT		 			 					
		 			,LOCS.GST_STATE_CODE AS LOCS_GST_STATE_CODE
		 			,LMP.AC_GST_STATE_CODE AS PARTY_GST_STATE_CODE		 			
		 			,LOCT.GST_STATE_CODE AS LOCT_GST_STATE_CODE		 					 					 			
 			        ,(PM.FREIGHT_TAXABLE_VALUE+(CASE WHEN PM.OH_TAX_METHOD=2 THEN PM.FREIGHT_IGST_AMOUNT+PM.FREIGHT_CGST_AMOUNT+PM.FREIGHT_SGST_AMOUNT ELSE 0 END)-PM.FREIGHT) AS FREIGHT_RO
			        ,(PM.OTHER_CHARGES_TAXABLE_VALUE+(CASE WHEN PM.OH_TAX_METHOD=2 THEN PM.OTHER_CHARGES_IGST_AMOUNT+PM.OTHER_CHARGES_CGST_AMOUNT+PM.OTHER_CHARGES_SGST_AMOUNT ELSE 0 END)-PM.OTHER_CHARGES) AS OTHER_CHARGES_RO       
			        ,(PM.INSURANCE_TAXABLE_VALUE+(CASE WHEN PM.OH_TAX_METHOD=2 THEN PM.INSURANCE_IGST_AMOUNT+PM.INSURANCE_CGST_AMOUNT+PM.INSURANCE_SGST_AMOUNT ELSE 0 END)-PM.INSURANCE) AS INSURANCE_RO
			        ,ROUND_OFF,MANUAL_ROUNDOFF,ISNULL(PT.ERROR_FLAG,0) AS ERROR_FLAG,GST_ROUND_OFF,NET_AMOUNT
					, (CASE WHEN IGST_AMOUNT<>0 OR LOCS.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE THEN '0000000000' ELSE '' END) AS IGST_REVENUE_AC_CODE
					, (CASE WHEN CGST_AMOUNT<>0 OR LOCS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE THEN '0000000000' ELSE '' END) AS LGST_REVENUE_AC_CODE
					, (CASE WHEN IGST_AMOUNT<>0  THEN '0000000000' ELSE '' END) AS IGST_TAX_AC_CODE
					, (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)  AS CGST_TAX_AC_CODE
					, (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)  AS SGST_TAX_AC_CODE
					, '0000000000' AS GST_CESS_AC_CODE
					, (CASE WHEN (ISNULL(PM.FREIGHT_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE) 
							AND PM.FREIGHT<>0 AND ISNULL(PM.FREIGHT_GST_PERCENTAGE,0)<>0
							THEN '0000000000' ELSE '' END)  AS FREIGHT_IGST_REVENUE_AC_CODE
					, (CASE WHEN (ISNULL(PM.FREIGHT_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE OR ISNULL(PM.FREIGHT_GST_PERCENTAGE,0)=0) 
							AND PM.FREIGHT<>0
							THEN '0000000000' ELSE '' END) AS FREIGHT_LGST_REVENUE_AC_CODE
					, (CASE WHEN ISNULL(PM.FREIGHT_SGST_AMOUNT,0)<>0 AND PM.FREIGHT<>0
							THEN '0000000000' ELSE '' END)  AS FREIGHT_SGST_TAX_AC_CODE
					, (CASE WHEN ISNULL(PM.FREIGHT_CGST_AMOUNT,0)<>0 AND PM.FREIGHT<>0
							THEN '0000000000' ELSE '' END)  AS FREIGHT_CGST_TAX_AC_CODE
					, (CASE WHEN ISNULL(PM.FREIGHT_IGST_AMOUNT,0)<>0  AND PM.FREIGHT<>0
							THEN '0000000000' ELSE '' END)  AS FREIGHT_IGST_TAX_AC_CODE
					
					, (CASE WHEN (ISNULL(PM.OTHER_CHARGES_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE) AND PM.OTHER_CHARGES<>0  AND ISNULL(PM.OTHER_CHARGES_GST_PERCENTAGE,0)<>0
							THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_IGST_REVENUE_AC_CODE
					, (CASE WHEN (ISNULL(PM.OTHER_CHARGES_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE OR ISNULL(PM.OTHER_CHARGES_GST_PERCENTAGE,0)=0 ) AND PM.OTHER_CHARGES<>0
							THEN '0000000000' ELSE '' END) AS OTHER_CHARGES_LGST_REVENUE_AC_CODE
					, (CASE WHEN ISNULL(PM.OTHER_CHARGES_SGST_AMOUNT,0)<>0 AND PM.OTHER_CHARGES<>0
							THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_SGST_TAX_AC_CODE
					, (CASE WHEN ISNULL(PM.OTHER_CHARGES_CGST_AMOUNT,0)<>0 AND PM.OTHER_CHARGES<>0
							THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_CGST_TAX_AC_CODE
					, (CASE WHEN ISNULL(PM.OTHER_CHARGES_IGST_AMOUNT,0)<>0  AND PM.OTHER_CHARGES<>0
							THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_IGST_TAX_AC_CODE			               

					, (CASE WHEN (ISNULL(PM.INSURANCE_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE) AND PM.INSURANCE<>0  AND ISNULL(PM.INSURANCE_GST_PERCENTAGE,0)<>0
							THEN '0000000000' ELSE '' END)  AS INSURANCE_IGST_REVENUE_AC_CODE
					, (CASE WHEN (ISNULL(PM.INSURANCE_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE OR ISNULL(PM.INSURANCE_GST_PERCENTAGE,0)=0 ) AND PM.INSURANCE<>0
							THEN '0000000000' ELSE '' END) AS INSURANCE_LGST_REVENUE_AC_CODE
					, (CASE WHEN ISNULL(PM.INSURANCE_SGST_AMOUNT,0)<>0 AND PM.INSURANCE<>0
							THEN '0000000000' ELSE '' END)  AS INSURANCE_SGST_TAX_AC_CODE
					, (CASE WHEN ISNULL(PM.INSURANCE_CGST_AMOUNT,0)<>0 AND PM.INSURANCE<>0
							THEN '0000000000' ELSE '' END)  AS INSURANCE_CGST_TAX_AC_CODE
					, (CASE WHEN ISNULL(PM.INSURANCE_IGST_AMOUNT,0)<>0  AND PM.INSURANCE<>0
							THEN '0000000000' ELSE '' END)  AS INSURANCE_IGST_TAX_AC_CODE			               

					, (CASE WHEN (ISNULL(PM.PACKING_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE) AND PM.PACKING<>0  AND ISNULL(PM.PACKING_GST_PERCENTAGE,0)<>0
							THEN '0000000000' ELSE '' END)  AS PACKING_IGST_REVENUE_AC_CODE
					, (CASE WHEN (ISNULL(PM.PACKING_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE OR ISNULL(PM.PACKING_GST_PERCENTAGE,0)=0 ) AND PM.PACKING<>0
							THEN '0000000000' ELSE '' END) AS PACKING_LGST_REVENUE_AC_CODE
					, (CASE WHEN ISNULL(PM.PACKING_SGST_AMOUNT,0)<>0 AND PM.PACKING<>0
							THEN '0000000000' ELSE '' END)  AS PACKING_SGST_TAX_AC_CODE
					, (CASE WHEN ISNULL(PM.PACKING_CGST_AMOUNT,0)<>0 AND PM.PACKING<>0
							THEN '0000000000' ELSE '' END)  AS PACKING_CGST_TAX_AC_CODE
					, (CASE WHEN ISNULL(PM.PACKING_IGST_AMOUNT,0)<>0  AND PM.PACKING<>0
							THEN '0000000000' ELSE '' END)  AS PACKING_IGST_TAX_AC_CODE
					,SECTION_CODE,ART.SUB_SECTION_CODE,0 AS CASHDISCOUNTAMOUNT
					,pm.remarks									
					,pm.pay_mode,isnull(PM.LEDGER_DISCOUNT_PERCENTAGE,0) AS CD_PCT											
	 		INTO #V_PROCESS
			FROM INM01106 PM 
			JOIN IND01106 PD ON PM.INV_ID=PD.INV_ID
			JOIN #WSLTABLE PT ON PT.MEMO_ID = PM.INV_ID AND PT.MODE='WSL'
			JOIN LOCATION LOCS ON LOCS.DEPT_ID=pm.location_Code 
			JOIN AREA AR ON LOCS.AREA_CODE=AR.AREA_CODE
			JOIN CITY CT ON AR.CITY_CODE=CT.CITY_CODE
			--LEFT OUTER JOIN WSLCONFIGMST PACMST ON 1=1
			LEFT OUTER JOIN LOCATION LOCT ON LOCT.DEPT_ID=PM.PARTY_DEPT_ID
			JOIN LMP01106 LMP ON LMP.AC_CODE=PM.AC_CODE
			JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=PD.PRODUCT_CODE
			JOIN ARTICLE ART(NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE
			JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE
			WHERE PM.NET_AMOUNT<>0 	AND PM.INV_DT>=@DGSTCUTOFFDATE /*OUTSTAION INVOICE*/	
		    GROUP BY PM.INV_ID
		 			 ,pm.location_code
		 			,PM.AC_CODE
		 			,PM.NET_AMOUNT
		 			,PM.INV_NO 
		 			,PM.INV_DT
		 			,PM.CREDIT_DAYS
		 			,PM.CANCELLED
		 			,INV_MODE
		 			,FREIGHT
		 			,OTHER_CHARGES
		 			,INSURANCE
					,FREIGHT_TAXABLE_VALUE
		 			,OTHER_CHARGES_TAXABLE_VALUE
		 			,INSURANCE_TAXABLE_VALUE
		 			,PD.GST_PERCENTAGE
					,pd.GST_CESS_PERCENTAGE
		 			,FREIGHT_GST_PERCENTAGE
		 			,INSURANCE_GST_PERCENTAGE
		 			,OTHER_CHARGES_GST_PERCENTAGE
		 			,FREIGHT_IGST_AMOUNT
		 			,FREIGHT_CGST_AMOUNT
		 			,FREIGHT_SGST_AMOUNT
		 			,OTHER_CHARGES_IGST_AMOUNT
		 			,OTHER_CHARGES_CGST_AMOUNT
		 			,OTHER_CHARGES_SGST_AMOUNT		 			
		 			,INSURANCE_IGST_AMOUNT
		 			,INSURANCE_CGST_AMOUNT
		 			,INSURANCE_SGST_AMOUNT		 			 							 			
		 			,LOCS.GST_STATE_CODE
		 			,LMP.AC_GST_STATE_CODE
		 			,LOCT.GST_STATE_CODE
	 				,OH_TAX_METHOD,pm.pay_mode
					,ISNULL(tcs_AMOUNT,0)
	 				,ROUND_OFF,MANUAL_ROUNDOFF,ISNULL(PT.ERROR_FLAG,0),GST_ROUND_OFF,NET_AMOUNT

					, (CASE WHEN IGST_AMOUNT<>0 OR LOCS.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE THEN '0000000000' ELSE '' END)
					, (CASE WHEN CGST_AMOUNT<>0 OR LOCS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE THEN '0000000000' ELSE '' END)
					, (CASE WHEN IGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)
					, (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)
					, (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)
					
					, (CASE WHEN (ISNULL(PM.FREIGHT_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE) 
							AND PM.FREIGHT<>0 AND ISNULL(PM.FREIGHT_GST_PERCENTAGE,0)<>0
							THEN '0000000000' ELSE '' END)
					, (CASE WHEN (ISNULL(PM.FREIGHT_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE OR ISNULL(PM.FREIGHT_GST_PERCENTAGE,0)=0) 
							AND PM.FREIGHT<>0
							THEN '0000000000' ELSE '' END)
					, (CASE WHEN ISNULL(PM.FREIGHT_SGST_AMOUNT,0)<>0 AND PM.FREIGHT<>0
							THEN '0000000000' ELSE '' END)
					, (CASE WHEN ISNULL(PM.FREIGHT_CGST_AMOUNT,0)<>0 AND PM.FREIGHT<>0
							THEN '0000000000' ELSE '' END)
					, (CASE WHEN ISNULL(PM.FREIGHT_IGST_AMOUNT,0)<>0  AND PM.FREIGHT<>0
							THEN '0000000000' ELSE '' END)
					
					, (CASE WHEN (ISNULL(PM.OTHER_CHARGES_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE) AND PM.OTHER_CHARGES<>0  AND ISNULL(PM.OTHER_CHARGES_GST_PERCENTAGE,0)<>0
							THEN '0000000000' ELSE '' END)
					, (CASE WHEN (ISNULL(PM.OTHER_CHARGES_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE OR ISNULL(PM.OTHER_CHARGES_GST_PERCENTAGE,0)=0 ) AND PM.OTHER_CHARGES<>0
							THEN '0000000000' ELSE '' END)
					, (CASE WHEN ISNULL(PM.OTHER_CHARGES_SGST_AMOUNT,0)<>0 AND PM.OTHER_CHARGES<>0
							THEN '0000000000' ELSE '' END)
					, (CASE WHEN ISNULL(PM.OTHER_CHARGES_CGST_AMOUNT,0)<>0 AND PM.OTHER_CHARGES<>0
							THEN '0000000000' ELSE '' END)
					, (CASE WHEN ISNULL(PM.OTHER_CHARGES_IGST_AMOUNT,0)<>0  AND PM.OTHER_CHARGES<>0
							THEN '0000000000' ELSE '' END)

					, (CASE WHEN (ISNULL(PM.INSURANCE_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE) AND PM.INSURANCE<>0  AND ISNULL(PM.INSURANCE_GST_PERCENTAGE,0)<>0
							THEN '0000000000' ELSE '' END)
					, (CASE WHEN (ISNULL(PM.INSURANCE_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE OR ISNULL(PM.INSURANCE_GST_PERCENTAGE,0)=0 ) AND PM.INSURANCE<>0
							THEN '0000000000' ELSE '' END)
					, (CASE WHEN ISNULL(PM.INSURANCE_SGST_AMOUNT,0)<>0 AND PM.INSURANCE<>0
							THEN '0000000000' ELSE '' END)
					, (CASE WHEN ISNULL(PM.INSURANCE_CGST_AMOUNT,0)<>0 AND PM.INSURANCE<>0
							THEN '0000000000' ELSE '' END)
					, (CASE WHEN ISNULL(PM.INSURANCE_IGST_AMOUNT,0)<>0  AND PM.INSURANCE<>0
							THEN '0000000000' ELSE '' END)

					, (CASE WHEN (ISNULL(PM.PACKING_IGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE) AND PM.PACKING<>0  AND ISNULL(PM.PACKING_GST_PERCENTAGE,0)<>0
							THEN '0000000000' ELSE '' END)
					, (CASE WHEN (ISNULL(PM.PACKING_CGST_AMOUNT,0)<>0 OR LOCS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE OR ISNULL(PM.PACKING_GST_PERCENTAGE,0)=0 ) AND PM.PACKING<>0
							THEN '0000000000' ELSE '' END)
					, (CASE WHEN ISNULL(PM.PACKING_SGST_AMOUNT,0)<>0 AND PM.PACKING<>0
							THEN '0000000000' ELSE '' END)
					, (CASE WHEN ISNULL(PM.PACKING_CGST_AMOUNT,0)<>0 AND PM.PACKING<>0
							THEN '0000000000' ELSE '' END)
					, (CASE WHEN ISNULL(PM.PACKING_IGST_AMOUNT,0)<>0  AND PM.PACKING<>0
							THEN '0000000000' ELSE '' END)
					,SECTION_CODE,ART.SUB_SECTION_CODE,pm.remarks,isnull(PM.LEDGER_DISCOUNT_PERCENTAGE,0)
													               	 				
		CREATE INDEX IX_V_PROCESS_RM_ID ON #V_PROCESS(INV_ID,XN_TYPE)
		
		SET @CSTEP = 372
		IF OBJECT_ID('TEMPDB..#V_PROCESS_OTHERS','U') IS NOT NULL
			DROP TABLE #V_PROCESS_OTHERS
			
		SELECT TOP 1 @cPostingxnType AS XN_TYPE,'DISCOUNT_AC_CODE' AS  COLUMNNAME,'DISCOUNT A/C' AS COLUMNDESC
		INTO #V_PROCESS_OTHERS FROM #V_PROCESS WHERE ISNULL(CASHDISCOUNTAMOUNT,0)<>0
		UNION ALL
		SELECT TOP  1 @cPostingxnType AS  XN_TYPE,'ROFF_AC_CODE' AS  COLUMNNAME,'ROUND OFF A/C' AS COLUMNDESC
		FROM #V_PROCESS WHERE ROUND_OFF+isnull(gst_round_off,0)<>0
		UNION ALL
		SELECT TOP  1 @cPostingxnType AS  XN_TYPE,'TCS_AC_CODE' AS  COLUMNNAME,'TCS A/C' AS COLUMNDESC
		FROM #V_PROCESS WHERE ISNULL(tcs_amount,0)<>0
					
	   SET @CSTEP = 375
	   
	   IF OBJECT_ID('TEMPDB..#V_PROCESS_PAYMODES','U') IS NOT NULL
			DROP TABLE #V_PROCESS_PAYMODES		
	   		   		   
	   SELECT A.PAYMODE_CODE, PAYMODE_GRP_CODE,
	   CONVERT(VARCHAR(50),A.PAYMODE_CODE+'_DOC') AS COLUMNNAME,
	   '0000000000' AS AC_CODE,CONVERT(VARCHAR(200),' A/C') AS COLUMNDESC 
	   INTO #V_PROCESS_PAYMODES FROM PAYMODE_XN_DET A
	   JOIN #V_PROCESS B ON A.MEMO_ID=B.INV_ID
	   JOIN PAYMODE_MST C ON C.PAYMODE_CODE=A.PAYMODE_CODE
	   WHERE A.XN_TYPE='WSL' AND A.PAYMODE_CODE NOT IN('0000001','0000004') AND C.PAYMODE_GRP_CODE NOT IN ('WCGV001','0000001')
	   GROUP BY A.PAYMODE_CODE,PAYMODE_GRP_CODE
	  
	  	
	   SET @CSTEP = 380
	   INSERT #V_PROCESS_PAYMODES (PAYMODE_CODE, COLUMNNAME,PAYMODE_GRP_CODE,AC_CODE,COLUMNDESC)
	   SELECT PAYMODE_CODE,PAYMODE_CODE+'_COMM' AS COLUMNNAME,PAYMODE_GRP_CODE,'0000000000' AS AC_CODE,
	   ' COMMISSION A/C'
	   FROM #V_PROCESS_PAYMODES A WHERE PAYMODE_GRP_CODE='0000002'
		
	   SET @CSTEP = 382
	   
   	   INSERT #V_PROCESS_PAYMODES (PAYMODE_CODE,PAYMODE_GRP_CODE,COLUMNNAME,COLUMNDESC,AC_CODE)
	   SELECT TOP 1 '' AS PAYMODE_CODE,'' AS PAYMODE_GRP_CODE,
	   'CASH_AC_CODE' AS COLUMNNAME,'CASH A/C' AS COLUMNDESC,'0000000000' AS AC_CODE 
	   FROM PAYMODE_XN_DET A
	   JOIN #V_PROCESS B ON A.MEMO_ID=B.INV_ID
	   JOIN PAYMODE_MST C ON C.PAYMODE_CODE=A.PAYMODE_CODE
	   WHERE A.XN_TYPE='WSL' AND C.PAYMODE_GRP_CODE='0000001'
	   
	   
	   --SELECT 'CHCK VPAYMODES', * FROM #V_PROCESS_PAYMODES 
	   
	   SET @CSTEP = 385			
	   
	   
		EXEC SP3S_GET_POSTING_BLANKAC
		@CXNTYPE=@CPOSTINGXNTYPE,
		@NLOOP=@NLOOP,
		@CERRORMSG=@CERRORMSG OUTPUT,
		@BBLANKACFOUND=@BBLANKACFOUND OUTPUT		
	
	IF @BBLANKACFOUND=1 OR @CERRORMSG<>'' OR @NLOOP=0
		GOTO END_PROC

		SELECT AC_CODE,WSLAMOUNT as cd_base_amount,INV_ID,cd_pct
		INTO #V_PROCESS_VCH FROM #V_PROCESS WHERE 1=2
		
		
		SELECT DISTINCT inv_id,inv_no,ac_code,credit_days into #v_process_invoices from #v_process

		SELECT @CINVID='',@CXNTYPE='',@CAC_CODE='',@NCTR=1
		SET @CSTEP = 390
		
		WHILE EXISTS(SELECT TOP 1 'U' FROM #V_PROCESS)
		BEGIN
			SELECT TOP 1 @CINVNO=INV_NO,@DLASTINVDT=INV_DT, @CINVID=INV_ID,@CXNTYPE=XN_TYPE,@CAC_CODE=AC_CODE,
						 @CSLOCGSTSTATECODE=LOCS_GST_STATE_CODE,@CTLOCGSTSTATECODE=LOCT_GST_STATE_CODE,
						 @CPARTYGSTSTATECODE=PARTY_GST_STATE_CODE,@NINVMODE=INV_MODE,@cRemarks=ISNULL(remarks,''),
						 @NROUNDOFF=ROUND_OFF,@BMANUALROFF=ISNULL(MANUAL_ROUNDOFF,0),@nPaymode=pay_mode
						 FROM #V_PROCESS
			
			SET @CSTEP = 400

			SET @BGSTBILL=0
			IF @DLASTINVDT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>''
				SET @BGSTBILL=1
			
			--WHOLESALE ACCOUNT SHOULD BE CREDITED WITH THE RESPECTIVE SUBTOTAL
			
				INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT ) 
				SELECT INV_ID,IGST_REVENUE_AC_CODE,-WSLAMOUNT
				FROM #V_PROCESS
				WHERE INV_ID=@CINVID AND ((@NINVMODE=1 AND @CSLOCGSTSTATECODE<>@CPARTYGSTSTATECODE) )	
				UNION ALL
				SELECT INV_ID,LGST_REVENUE_AC_CODE,-WSLAMOUNT
				FROM #V_PROCESS
				WHERE INV_ID=@CINVID AND ((@NINVMODE=1 AND @CSLOCGSTSTATECODE=@CPARTYGSTSTATECODE) )
					
					
			SET @CSTEP = 410
			--TAX AMOUNT SHOULD BE CREDITED WITH THE RESPECTIVE TAX_AMOUNT
				INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT ) 
				SELECT INV_ID,IGST_TAX_AC_CODE,-IGST_AMOUNT
				FROM #V_PROCESS
				WHERE INV_ID=@CINVID AND ((@NINVMODE=1 AND IGST_AMOUNT<>0) )	
				UNION ALL
				SELECT INV_ID,CGST_TAX_AC_CODE,-CGST_AMOUNT
				FROM #V_PROCESS
				WHERE INV_ID=@CINVID AND (@NINVMODE=1 AND CGST_AMOUNT<>0)
				UNION ALL
				SELECT INV_ID,SGST_TAX_AC_CODE,-SGST_AMOUNT
				FROM #V_PROCESS
				WHERE INV_ID=@CINVID AND SGST_AMOUNT<>0
				UNION ALL
				SELECT INV_ID,gst_cess_ac_code,-a.gst_cess_AMOUNT
				FROM #V_PROCESS a
				WHERE INV_ID=@CINVID AND ISNULL(a.gst_cess_AMOUNT,0)<>0			

			SET @CSTEP = 420
				INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT,narration ) 
				SELECT TOP 1 INV_ID,@cTcsAcCode AC_CODE,-TCS_AMOUNT,'Tcs amount against Invoice#'+inv_no
				FROM #V_PROCESS
				WHERE INV_ID=@CINVID AND ISNULL(TCS_AMOUNT,0)<>0			
			
			SET @CSTEP = 430
			
			--IF @CINVID='01011180001000519'
			--	SELECT 'CHECK FREIGHT',* FROM  #V_PROCESS WHERE INV_ID=@CINVID
				
			--FREIGHT AMOUNT SHOULD BE CREDITED
			INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT,CRDAYS ) 
			SELECT TOP 1 INV_ID,INV_NO,(CASE WHEN ISNULL(FREIGHT_IGST_AMOUNT,0)<>0 THEN 
					  FREIGHT_IGST_REVENUE_AC_CODE ELSE FREIGHT_LGST_REVENUE_AC_CODE END) AS AC_CODE,-FREIGHT
			,CREDIT_DAYS
			FROM #V_PROCESS
			WHERE INV_ID=@CINVID AND FREIGHT<>0 
			
			SET @CSTEP = 440
			--OTHER CHARGES AMOUNT SHOULD BE CREDITED
			INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT,CRDAYS ) 
			SELECT TOP 1 INV_ID,INV_NO,(CASE WHEN ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)<>0 THEN 
					  OTHER_CHARGES_IGST_REVENUE_AC_CODE ELSE OTHER_CHARGES_LGST_REVENUE_AC_CODE END) AS AC_CODE,-OTHERCHARGES
			,CREDIT_DAYS
			FROM #V_PROCESS
			WHERE INV_ID=@CINVID AND OTHERCHARGES<>0 
		
			SET @CSTEP = 450
			--INSURANCE AMOUNT SHOULD BE CREDITED
			INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT,CRDAYS ) 
			SELECT TOP 1 INV_ID,INV_NO,(CASE WHEN ISNULL(INSURANCE_IGST_AMOUNT,0)<>0 THEN 
					  INSURANCE_IGST_REVENUE_AC_CODE ELSE INSURANCE_LGST_REVENUE_AC_CODE END) AS AC_CODE
				  ,-INSURANCE,CREDIT_DAYS
			FROM #V_PROCESS
			WHERE INV_ID=@CINVID AND INSURANCE<>0 
						
		
			SET @nManualRoff=(CASE WHEN @BMANUALROFF=1 AND ABS(@NROUNDOFF)>.99 THEN ABS(@NROUNDOFF) ELSE 0 END)

		
			SET @CSTEP = 465
			
		 --  IF @CINVID='HO01118HOCM000001'
			--	SELECT 'CHECK RO',A.INV_ID,A.INV_NO,@CROUNDOFFACCODE,
			--	SUM(WSLAMOUNT) AS WSLAMT,SUM(ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+
			--					 ISNULL(TAXAMOUNT,0)) AS TAX,
			--		ISNULL(B.GST_ROUND_OFF,0) AS GST_RO,B.FREIGHT,
			--		(CASE WHEN B.OH_TAX_METHOD<>2 THEN ISNULL(B.FREIGHT_IGST_AMOUNT,0)+ISNULL(B.FREIGHT_CGST_AMOUNT,0)+ISNULL(B.FREIGHT_SGST_AMOUNT,0) ELSE 0 END) AS FREIGHT_GST,
			--		B.OTHER_CHARGES,(CASE WHEN OH_TAX_METHOD<>2 THEN ISNULL(B.OTHER_CHARGES_IGST_AMOUNT,0)+
			--		ISNULL(B.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_SGST_AMOUNT,0) ELSE 0 END) AS OC_GST,
			--		B.INSURANCE,(CASE WHEN B.OH_TAX_METHOD<>2 THEN ISNULL(B.INSURANCE_IGST_AMOUNT,0)+ISNULL(B.INSURANCE_CGST_AMOUNT,0)+
			--		ISNULL(B.INSURANCE_SGST_AMOUNT,0) ELSE 0 END) AS INSURANCE_GST,B.NET_AMOUNT,
			--		((SUM(WSLAMOUNT +ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+
			--					 ISNULL(TAXAMOUNT,0))+
			--		ISNULL(B.GST_ROUND_OFF,0)+B.FREIGHT+(CASE WHEN B.OH_TAX_METHOD<>2 THEN ISNULL(B.FREIGHT_IGST_AMOUNT,0)+ISNULL(B.FREIGHT_CGST_AMOUNT,0)+ISNULL(B.FREIGHT_SGST_AMOUNT,0) ELSE 0 END)+
			--		B.OTHER_CHARGES+(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(B.OTHER_CHARGES_IGST_AMOUNT,0)+
			--		ISNULL(B.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_SGST_AMOUNT,0) ELSE 0 END)+
			--		B.INSURANCE+(CASE WHEN B.OH_TAX_METHOD=1 THEN ISNULL(B.INSURANCE_IGST_AMOUNT,0)+ISNULL(B.INSURANCE_CGST_AMOUNT,0)+ISNULL(B.INSURANCE_SGST_AMOUNT,0) ELSE 0 END))-B.NET_AMOUNT
			--		) AS AMOUNT
			--	FROM #V_PROCESS A
			--	JOIN INM01106 B ON A.INV_ID=B.INV_ID
			--	WHERE A.INV_ID=@CINVID
			--	GROUP BY A.INV_ID,A.INV_NO,B.FREIGHT,B.OTHER_CHARGES,B.INSURANCE,B.OH_TAX_METHOD,
			--	B.FREIGHT_IGST_AMOUNT,B.FREIGHT_CGST_AMOUNT,B.FREIGHT_SGST_AMOUNT,
			--	B.GST_ROUND_OFF,B.OTHER_CHARGES_IGST_AMOUNT,B.OTHER_CHARGES_CGST_AMOUNT,B.OTHER_CHARGES_SGST_AMOUNT,
			--	B.INSURANCE_IGST_AMOUNT,B.INSURANCE_CGST_AMOUNT,B.INSURANCE_SGST_AMOUNT,B.NET_AMOUNT

			--- Just removed
			--SELECT A.INV_ID,A.INV_NO,@CROUNDOFFACCODE,
			--(SUM(WSLAMOUNT +ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+
			--				 ISNULL(TAXAMOUNT,0))+
			--	ISNULL(A.GST_ROUND_OFF,0)+ISNULL(A.FREIGHT,0)+ISNULL(A.FREIGHT_IGST_AMOUNT,0)+ISNULL(A.FREIGHT_CGST_AMOUNT,0)+ISNULL(A.FREIGHT_SGST_AMOUNT,0)+
			--	ISNULL(A.OTHERCHARGES,0)+ISNULL(A.OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(A.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(A.OTHER_CHARGES_SGST_AMOUNT,0)+
			--	ISNULL(A.INSURANCE,0)+ISNULL(A.INSURANCE_IGST_AMOUNT,0)+ISNULL(A.INSURANCE_CGST_AMOUNT,0)+ISNULL(A.INSURANCE_SGST_AMOUNT,0)-A.NET_AMOUNT
			--	) AS AMOUNT
			--FROM #V_PROCESS A
			--WHERE A.INV_ID=@CINVID
			--GROUP BY A.INV_ID,A.INV_NO,A.FREIGHT,A.OTHERCHARGES,A.INSURANCE,
			--A.GST_ROUND_OFF,A.FREIGHT_IGST_AMOUNT,A.FREIGHT_CGST_AMOUNT,A.FREIGHT_SGST_AMOUNT,
			--A.OTHER_CHARGES_IGST_AMOUNT,A.OTHER_CHARGES_CGST_AMOUNT,A.OTHER_CHARGES_SGST_AMOUNT,
			--A.INSURANCE_IGST_AMOUNT,A.INSURANCE_CGST_AMOUNT,A.INSURANCE_SGST_AMOUNT,A.NET_AMOUNT
			--HAVING 
			--ABS(SUM(WSLAMOUNT +ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+
			--				 ISNULL(TAXAMOUNT,0))+
			--	ISNULL(A.GST_ROUND_OFF,0)+ISNULL(A.FREIGHT,0)+ISNULL(A.FREIGHT_IGST_AMOUNT,0)+ISNULL(A.FREIGHT_CGST_AMOUNT,0)+ISNULL(A.FREIGHT_SGST_AMOUNT,0)+
			--	ISNULL(A.OTHERCHARGES,0)+ISNULL(A.OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(A.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(A.OTHER_CHARGES_SGST_AMOUNT,0)+
			--	ISNULL(A.INSURANCE,0)+ISNULL(A.INSURANCE_IGST_AMOUNT,0)+ISNULL(A.INSURANCE_CGST_AMOUNT,0)+ISNULL(A.INSURANCE_SGST_AMOUNT,0)-A.NET_AMOUNT
			--	)<=@NROLIMIT
			
			--UNION ALL
	
			--ROUNDOFF AMOUNT SHOULD BE CREDITED
			INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT ) 
			SELECT A.INV_ID,A.INV_NO,@CROUNDOFFACCODE,(ISNULL(GST_ROUND_OFF,0)+@nManualRoff)*-1
			FROM INM01106 A WHERE INV_ID=@CINVID AND (ISNULL(GST_ROUND_OFF,0)+@nManualRoff)<>0

			SET @CSTEP = 470
		

			IF @BGSTBILL=1	
			BEGIN
				SET @CSTEP = 475
				
				DECLARE @NOHGSTPCT NUMERIC(6,2),@COHIGSTTAXACCODE CHAR(10),@COHCGSTTAXACCODE CHAR(10),@COHSGSTTAXACCODE CHAR(10),
				@COHIGSTACCODE CHAR(10),@COHLOCALGSTACCODE CHAR(10)
				
				SELECT TOP 1 @NOHGSTPCT=(CASE WHEN ISNULL(FREIGHT_GST_PERCENTAGE,0)<>0 THEN FREIGHT_GST_PERCENTAGE
				WHEN ISNULL(OTHER_CHARGES_GST_PERCENTAGE,0)<>0 THEN OTHER_CHARGES_GST_PERCENTAGE
				ELSE ISNULL(INSURANCE_GST_PERCENTAGE,0) END ) FROM #V_PROCESS  A 
				WHERE INV_ID=@CINVID
					
			  
			  	SET @CSTEP = 485						
				INSERT @VCHC (XN_ID,XN_NO,AC_CODE,AMOUNT) 	
			  	  SELECT TOP 1 INV_ID,INV_NO,FREIGHT_IGST_TAX_AC_CODE AS AC_CODE,-FREIGHT_IGST_AMOUNT
				  FROM #V_PROCESS  A
				  WHERE INV_ID=@CINVID AND  FREIGHT_IGST_AMOUNT<>0
				  
				  UNION ALL
				  SELECT TOP 1  INV_ID,INV_NO,FREIGHT_CGST_TAX_AC_CODE,-FREIGHT_CGST_AMOUNT
				  FROM #V_PROCESS  A
				  WHERE INV_ID=@CINVID AND FREIGHT_CGST_AMOUNT<>0
				  
				  UNION ALL
				  SELECT TOP 1  INV_ID,INV_NO,FREIGHT_SGST_TAX_AC_CODE,-FREIGHT_SGST_AMOUNT
				  FROM #V_PROCESS  A
				  WHERE INV_ID=@CINVID AND FREIGHT_SGST_AMOUNT<>0
				  
				  				  
				  UNION ALL
				  SELECT TOP 1  INV_ID,INV_NO,OTHER_CHARGES_IGST_TAX_AC_CODE,-OTHER_CHARGES_IGST_AMOUNT
				  FROM #V_PROCESS  A
				  WHERE INV_ID=@CINVID AND OTHER_CHARGES_IGST_AMOUNT<>0
				  
				  UNION ALL
				  SELECT TOP 1  INV_ID,INV_NO,OTHER_CHARGES_CGST_TAX_AC_CODE,-OTHER_CHARGES_CGST_AMOUNT
				  FROM #V_PROCESS  A
				  WHERE INV_ID=@CINVID AND OTHER_CHARGES_CGST_AMOUNT<>0
				  
				  UNION ALL
				  SELECT TOP 1  INV_ID,INV_NO,OTHER_CHARGES_SGST_TAX_AC_CODE,-OTHER_CHARGES_SGST_AMOUNT
				  FROM #V_PROCESS  A
				  WHERE INV_ID=@CINVID AND OTHER_CHARGES_SGST_AMOUNT<>0
				  

				  UNION ALL
				  SELECT TOP 1  INV_ID,INV_NO,INSURANCE_IGST_TAX_AC_CODE,-INSURANCE_IGST_AMOUNT
				  FROM #V_PROCESS  A
				  WHERE INV_ID=@CINVID AND INSURANCE_IGST_AMOUNT<>0
				  
				  UNION ALL
				  SELECT TOP 1  INV_ID,INV_NO,INSURANCE_CGST_TAX_AC_CODE,-INSURANCE_CGST_AMOUNT
				  FROM #V_PROCESS  A
				  WHERE INV_ID=@CINVID AND INSURANCE_CGST_AMOUNT<>0
				  
				  UNION ALL
				  SELECT TOP 1  INV_ID,INV_NO,INSURANCE_SGST_TAX_AC_CODE,-INSURANCE_SGST_AMOUNT
				  FROM #V_PROCESS  A
				  WHERE INV_ID=@CINVID AND INSURANCE_SGST_AMOUNT<>0
				  
			END
			
						
			SET @CSTEP = 490
						
			
			DECLARE @COTHERPAYMODECODE VARCHAR(10),@NPAYMODECNT NUMERIC(2,0)
			SELECT TOP 1 @COTHERPAYMODECODE=PAYMODE_CODE FROM PAYMODE_XN_DET (NOLOCK) 
			WHERE MEMO_ID=@CINVID AND XN_TYPE='WSL'	AND PAYMODE_CODE<>'0000004'
			
			SELECT @NPAYMODECNT=COUNT(*) FROM PAYMODE_XN_DET (NOLOCK) WHERE MEMO_ID=@CINVID AND XN_TYPE='WSL'
			
			--SELECT @COTHERPAYMODECODE,@CINVID AS INVID ,@NPAYMODECNT AS NPAYMODECNT
			--PARTY SHOULD BE DEBITED WITH TOTAL AMOUNT
			
			IF NOT EXISTS (SELECT TOP 1 paymode_code FROM PAYMODE_XN_DET (NOLOCK) WHERE memo_id=@CINVID AND xn_type='WSL')
				INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT,CRDAYS ) 
				SELECT TOP 1 INV_ID,INV_NO,AC_CODE,TOTAL_AMOUNT,CREDIT_DAYS
				FROM #V_PROCESS 
				WHERE INV_ID=@CINVID AND TOTAL_AMOUNT<>0
			ELSE
			BEGIN

			
			

				INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT,CRDAYS,REF_BILL_NO ) 
				SELECT  INV_ID,INV_NO,AC_CODE,B.AMOUNT,CREDIT_DAYS,'' AS REF_BILL_NO
				FROM PAYMODE_XN_DET b (NOLOCK) JOIN #v_process_invoices a ON a.inv_id=b.memo_id
				WHERE memo_ID=@CINVID AND B.PAYMODE_CODE IN ('0000004') AND b.xn_type='WSL'
				UNION 
				SELECT TOP 1 INV_ID,INV_NO,@CCASHACCODE AS AC_CODE,B.AMOUNT,CREDIT_DAYS,'' AS REF_BILL_NO
				FROM PAYMODE_XN_DET B (NOLOCK) JOIN #v_process_invoices a ON a.inv_id=b.memo_id
				WHERE memo_ID=@CINVID AND B.PAYMODE_CODE='0000000'  AND b.xn_type='WSL'
				
				UNION 
				SELECT  INV_ID,INV_NO,V.AC_CODE,B.AMOUNT-ROUND(( (B.AMOUNT*D.COMMISSION_PERCENTAGE/100) +   
						(B.AMOUNT*D.COMMISSION_PERCENTAGE/100) * D.SERVICE_TAX_PERCENTAGE/100 ),2),CREDIT_DAYS,'' AS REF_BILL_NO
				FROM #v_process_invoices A JOIN PAYMODE_XN_DET B ON A.INV_ID=B.MEMO_ID
				JOIN PAYMODE_MST D ON D.PAYMODE_CODE=B.PAYMODE_CODE
				JOIN #V_PROCESS_PAYMODES V ON V.COLUMNNAME=D.PAYMODE_CODE+'_DOC'
				WHERE INV_ID=@CINVID AND D.PAYMODE_GRP_CODE='0000002' AND b.xn_type='WSL'
				UNION 
				SELECT INV_ID,INV_NO,V.AC_CODE,ROUND(( (B.AMOUNT*D.COMMISSION_PERCENTAGE/100) +   
						(B.AMOUNT*D.COMMISSION_PERCENTAGE/100) * D.SERVICE_TAX_PERCENTAGE/100 ),2) AS AMOUNT,CREDIT_DAYS,'' AS REF_BILL_NO
				FROM #v_process_invoices A JOIN PAYMODE_XN_DET B ON A.INV_ID=B.MEMO_ID
				JOIN #V_PROCESS_PAYMODES V ON V.COLUMNNAME=B.PAYMODE_CODE+'_COMM'
				JOIN PAYMODE_MST D ON D.PAYMODE_CODE=B.PAYMODE_CODE
				WHERE INV_ID=@CINVID AND D.PAYMODE_GRP_CODE='0000002'  AND D.COMMISSION_PERCENTAGE<>0 AND b.xn_type='WSL'												
				UNION 
				SELECT INV_ID,INV_NO,A.AC_CODE AS AC_CODE,B.AMOUNT,CREDIT_DAYS,
				LTRIM(RTRIM(C.ADV_REC_NO)) AS REF_BILL_NO
				FROM #v_process_invoices A JOIN PAYMODE_XN_DET B ON A.INV_ID=B.MEMO_ID
				JOIN ARC01106 C ON C.ADV_REC_ID=B.ADJ_MEMO_ID
				WHERE INV_ID=@CINVID AND B.PAYMODE_CODE='0000002' AND b.xn_type='WSL'

				INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT,CRDAYS,REF_BILL_NO ) 
				SELECT INV_ID,INV_NO,V.AC_CODE,B.AMOUNT,CREDIT_DAYS,'' AS REF_BILL_NO
				FROM #v_process_invoices A JOIN PAYMODE_XN_DET B ON A.INV_ID=B.MEMO_ID
				JOIN PAYMODE_MST D ON D.PAYMODE_CODE=B.PAYMODE_CODE
				JOIN #V_PROCESS_PAYMODES V ON V.COLUMNNAME=D.PAYMODE_CODE+'_DOC'
				WHERE INV_ID=@CINVID AND D.PAYMODE_GRP_CODE NOT IN ('0000001','0000002','0000004') AND b.AMOUNT<>0 
				AND b.PAYMODE_CODE NOT IN ('0000002','0000001') AND b.xn_type='WSL'

				
			END			

			

			----SETTLING MINOR DIFFERENCES IN DEBIT AND CREDIT TOTAL
			--INSERT @VCHC(XN_ID,XN_NO,AC_CODE,AMOUNT,CRDAYS)
			--SELECT MAX(XN_ID),MAX(XN_NO),MAX(AC_CODE),(CASE WHEN SUM(AMOUNT)>0 THEN -SUM(AMOUNT) ELSE SUM(AMOUNT) END) 
			--	   ,MAX(CRDAYS)
			--FROM @VCHC
			--HAVING SUM(AMOUNT)<>0 AND ABS(SUM(AMOUNT))<0.1
						
			SET @CSTEP = 500
			INSERT #V_PROCESS_VCH (AC_CODE,Cd_base_amount,Inv_ID,cd_pct)
			SELECT a.AC_CODE,(CASE WHEN isnull(cd_calc_based_on,1)=2 THEN a.TOTAL_AMOUNT else sum(a.wslamount) end),
			inv_id,cd_pct 
			FROM #V_PROCESS a
			JOIN  lmp01106 b ON a.ac_code=b.ac_code
			WHERE a.inv_id=@CINVID
			GROUP BY a.ac_code,inv_ID,cd_pct,a.total_amount,isnull(cd_calc_based_on,1)

			SET @CSTEP = 505
			SET @CVMID = ''
			SELECT @CVMID = A.VM_ID 
			 FROM POSTACT_VOUCHER_LINK A
			  JOIN VM01106 B ON A.VM_ID=B.VM_ID
			   WHERE B.CANCELLED=0 AND A.MEMO_ID = @CINVID AND A.XN_TYPE=@CXNTYPE
			
			SET @CSTEP = 510
			IF ISNULL(@CVMID,'') = ''
			BEGIN
			    SET @CVMID = 'LATERWSL-'+RTRIM(LTRIM(CONVERT(VARCHAR,@NCTR)))
				SET @NCTR = @NCTR+1
			END
			
			SET @CSTEP = 520
			INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )
			SELECT @CVMID,@CINVID,@CXNTYPE,LAST_UPDATE FROM INM01106 WHERE INV_ID = @CINVID
			
			
			--SELECT 'CHECK VCHC',* FROM @VCHC WHERE XN_ID = @CINVID
			
			SET @CSTEP = 530
			INSERT @VDC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE, 
						  CREDIT_DAYS, CR_DISCOUNT_PERCENTAGE,AC_NAME,REF_BILL_NO,cd_base_amount,cd_pct)
			SELECT @CVMID
				, 'LATERWSL-'+CONVERT(VARCHAR,ROW_NUMBER() OVER(ORDER BY A.AC_CODE)) AS VD_ID
				, A.AC_CODE
				,(CASE WHEN ISNULL(a.narration,'')='' THEN 'INVOICE# ' + @CINVNO ELSE a.narration END) 
				+(CASE WHEN @bPostRemarksInNarration=1 THEN ' '+@cRemarks ELSE '' END)  AS NARRATION
				,(CASE WHEN SUM(AMOUNT)>0 THEN SUM(AMOUNT) ELSE 0 END) AS DEBIT_AMOUNT
				,(CASE WHEN SUM(AMOUNT)<0 THEN ABS(SUM(AMOUNT)) ELSE 0 END) AS CREDIT_AMOUNT
				,(CASE WHEN SUM(AMOUNT) > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE
				,A.CRDAYS
				,0
				,B.AC_NAME,ISNULL(A.REF_BILL_NO,''),ISNULL(c.cd_base_amount,0) cd_base_amount,isnull(c.cd_pct,0) cd_pct
	        FROM @VCHC A
	        JOIN LMV01106 B ON A.AC_CODE = B.AC_CODE
			LEFT OUTER JOIN #V_PROCESS_VCH C ON c.inv_id=a.xn_id
	        WHERE XN_ID = @CINVID AND AMOUNT<>0
	        GROUP BY A.AC_CODE,B.AC_NAME,A.CRDAYS,ISNULL(A.REF_BILL_NO,''),
			(CASE WHEN ISNULL(a.narration,'')='' THEN 'INVOICE# ' + @CINVNO ELSE a.narration END),
			ISNULL(c.cd_base_amount,0),isnull(c.cd_pct,0)
	        ORDER BY X_TYPE,ABS(SUM(AMOUNT)) DESC
			
	        SET @CSTEP = 540
	        SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC
		    WHERE VM_ID = @CVMID
			
			IF @nDrTotal<>@nCrTotal AND ABS(@nDrTotal-@nCrTotal)<=1
			BEGIN
					INSERT @VDC (VM_ID, VD_ID, AC_CODE,ac_name, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE)
					SELECT TOP 1 @cVmId as vm_id,'later-roff' as vd_id,@CROUNDOFFACCODE as ac_code,b.ac_name,narration,
					(CASE WHEN (@NDRTOTAL-@NCRTOTAL)>0 then 0 else ABS(@NDRTOTAL-@NCRTOTAL) END) AS DEBIT_AMOUNT,
					(CASE WHEN (@NDRTOTAL-@NCRTOTAL)<0 then 0 else (@NDRTOTAL-@NCRTOTAL) END) AS CREDIT_AMOUNT,
					(CASE WHEN (@NDRTOTAL-@NCRTOTAL)<0 then 'Dr' ELSE 'Cr' END) AS x_type
					FROM @vdC a JOIN lm01106 b on @CROUNDOFFACCODE=b.ac_code
					where vm_id=@cVmId
				
					SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC
					WHERE VM_ID = @CVMID
			END

			PRINT 'AFTER R/O TOTALS:'+STR(ABS(ISNULL(@NDRTOTAL,0)),10,2)+'-'+STR(ISNULL(@NCRTOTAL,0),10,2)
		    		    
		    SET @CSTEP = 550    
			SET @CVOUCHERNO = '' 
			
	        SELECT TOP 1 @CVOUCHERNO = VOUCHER_NO FROM VM01106 WHERE VM_ID = @CVMID
	        IF ISNULL(@CVOUCHERNO,'') = ''
				SET @CVOUCHERNO= @CVMID
	        
	        SET @CSTEP = 560
	        INSERT @VMC	( VM_ID,VOUCHER_NO,VOUCHER_DT, VOUCHER_CODE, DEPT_ID, 
							  BILL_TYPE, BILL_NO, BILL_ID, BILL_DT, BILL_AC_CODE, 
							  PARTY_NAME, QUANTITY, NET_AMOUNT, RM_LIST, CANCELLED,DRTOTAL,CRTOTAL
							  ,VOUCHER_TYPE,DEPT_NAME,BILL_STATUS,ERROR_FLAG )
			SELECT @CVMID,@CVOUCHERNO,A.INV_DT,@CVOUCHERCODE,A.DEPT_ID,'WSL',A.INV_NO,A.INV_ID,A.INV_DT
				  ,A.AC_CODE,B.AC_NAME,SUM(A.QUANTITY),A.TOTAL_AMOUNT,A.INV_NO,A.CANCELLED,@NDRTOTAL,@NCRTOTAL
				  ,'WHOLESALE',C.DEPT_NAME,'NEW',A.ERROR_FLAG  	
			FROM #V_PROCESS A
			JOIN LM01106 B ON A.AC_CODE=B.AC_CODE
			JOIN LOCATION C ON a.DEPT_ID =C.DEPT_ID
			WHERE A.INV_ID=@CINVID
			GROUP BY A.INV_DT,A.DEPT_ID,A.INV_NO,A.INV_ID,A.INV_DT
				  ,A.AC_CODE,B.AC_NAME,A.TOTAL_AMOUNT,A.INV_NO,C.DEPT_NAME
				  ,A.CANCELLED,A.ERROR_FLAG

			SET @CSTEP = 565
			
			INSERT @TBILL_BY_BILL_REF
				(VD_ID,BILL_NO,AMOUNT,LAST_UPDATE,X_TYPE,CR_DAYS,VM_ID,CD_PERCENTAGE,cd_base_amount)
			SELECT VD_ID
				  ,(CASE WHEN ISNULL(A.REF_BILL_NO,'')<>'' THEN A.REF_BILL_NO ELSE 
				   DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,LTRIM(RTRIM(@CINVNO)),@DLASTINVDT,'CR',@CVMID) END)
				  ,ABS(SUM(A.CREDIT_AMOUNT+A.DEBIT_AMOUNT)),GETDATE()
				  ,A.X_TYPE,(CASE WHEN ISNULL(D.CREDIT_DAYS,0)=0 THEN C.CREDIT_DAYS ELSE D.CREDIT_DAYS END)
				  ,@CVMID AS VM_ID,cd_pct AS CD_PERCENTAGE,SUM(ISNULL(a.cd_base_amount,0)) AS CD_base_AMOUNT

			FROM @VDC A 
			JOIN LMP01106 C ON C.AC_CODE=A.AC_CODE
			JOIN INM01106 D ON 1=1
			WHERE A.VM_ID=@CVMID AND C.BILL_BY_BILL=1 AND D.INV_ID=@CINVID
			GROUP BY A.VD_ID,A.X_TYPE,A.REF_BILL_NO,CD_PCT,
			(CASE WHEN ISNULL(D.CREDIT_DAYS,0)=0 THEN C.CREDIT_DAYS ELSE D.CREDIT_DAYS END),
			(CASE WHEN ISNULL(A.REF_BILL_NO,'')<>'' THEN A.REF_BILL_NO ELSE 
				   DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,LTRIM(RTRIM(@CINVNO)),@DLASTINVDT,'CR',@CVMID) END)
			
									
			SET @CSTEP = 570
			DELETE @VCHC
		    DELETE FROM #V_PROCESS WHERE INV_ID = @CINVID AND XN_TYPE=@CXNTYPE

			DELETE FROM #V_PROCESS_vch
		END			 			
    

	SET @CSTEP=571.2
	EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 	
	
	DELETE FROM ACT_VM01106_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_VD01106_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_BILL_BY_BILL_REF_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_POSTACT_VOUCHER_LINK_UPLOAD WHERE SP_ID=@NSPID
	
	SET @CSTEP = 571.5
	
	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
    INSERT ACT_VM01106_UPLOAD	( ANGADIA_CODE, APPROVED, APPROVEDLEVELNO, ATTACHMENT_FILE, AUDITED_DT, 
    AUDITED_USER_CODE, BILL_AC_CODE, BILL_DT, BILL_ID, BILL_NO, BILL_TYPE, CANCELLED, CASH_VOUCHER, COMPANY_CODE, 
    CRTOTAL, DEPT_ID, DRTOTAL, EDT_USER_CODE, FIN_YEAR, FREEZE, LAST_UPDATE, LR_DT, LR_NO, MEMO, MRR_LIST, OP_ENTRY,
    QUANTITY, REF_NO, REF_VM_ID, REMINDER_DAYS, SALE_VOUCHER, SENT_FOR_RECON, SENT_TO_HO, SMS_SENT, SR_NO, 
    UPLOADED_TO_ACTIVSTREAM, USER_CODE, VM_ID, VM_NO, VOUCHER_CODE, VOUCHER_DT, VOUCHER_NO, SP_ID,TEMP_VM_ID )  
    SELECT 	  ANGADIA_CODE,0 AS APPROVED,0 AS APPROVEDLEVELNO,'' AS ATTACHMENT_FILE,'' AS AUDITED_DT, 
    '' AS AUDITED_USER_CODE, BILL_AC_CODE,BILL_DT, ISNULL(BILL_ID,'') AS BILL_ID,ISNULL( BILL_NO,'') AS BILL_NO,
     BILL_TYPE,CANCELLED, 
    0 AS CASH_VOUCHER, '01' AS COMPANY_CODE, CRTOTAL, DEPT_ID, DRTOTAL,'' AS EDT_USER_CODE,
	('01'+dbo.FN_GETFINYEAR(voucher_dt)) FIN_YEAR, 
    0 AS FREEZE,GETDATE() AS  LAST_UPDATE,'' AS LR_DT,'' AS LR_NO,0 AS MEMO,'' AS MRR_LIST,0 AS  OP_ENTRY,
    QUANTITY, '' AS REF_NO,'' AS REF_VM_ID,0 AS  REMINDER_DAYS,1 AS SALE_VOUCHER,0 AS  SENT_FOR_RECON,0 AS SENT_TO_HO, 
    0 AS SMS_SENT,0 AS SR_NO,0 AS UPLOADED_TO_ACTIVSTREAM,'0000000' AS USER_CODE,
    VM_ID,'' AS VM_NO, VOUCHER_CODE, VOUCHER_DT,VOUCHER_NO, @NSPID AS SP_ID,'' AS TEMP_VM_ID 
    FROM @vmC A 
    
	
	SET @CSTEP = 571.8


	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_VD01106_UPLOAD	( AC_CODE, AUTOENTRY, CHK_RECON, COMPANY_CODE, CONTROL_AC, COST_CENTER_AC_CODE, COST_CENTER_DEPT_ID, 
	CREDIT_AMOUNT, DEBIT_AMOUNT, LAST_UPDATE, NARRATION, RECON_DT, SECONDARY_NARRATION, VAT_ENTRY, VD_ID, VM_ID, VS_AC_CODE, X_TYPE, SP_ID,TEMP_VD_ID )
	SELECT AC_CODE,0 AS AUTOENTRY,0 AS CHK_RECON,'01' AS COMPANY_CODE,0 AS CONTROL_AC,'0000000000' AS COST_CENTER_AC_CODE, 
	ISNULL(b.Dept_id,@CDEPTID) AS COST_CENTER_DEPT_ID,CREDIT_AMOUNT, DEBIT_AMOUNT,GETDATE() AS LAST_UPDATE,ISNULL(NARRATION,'') AS NARRATION,'' AS RECON_DT, 
	'' AS SECONDARY_NARRATION, 0 AS VAT_ENTRY,VD_ID,A.VM_ID,ISNULL(VS_AC_CODE,'0000000000') AS VS_AC_CODE,
	X_TYPE, @NSPID AS SP_ID,'' AS TEMP_VD_ID 
	FROM @vdC A
	JOIN @vmC B ON A.VM_ID=B.VM_ID
    WHERE (DEBIT_AMOUNT<>0 OR CREDIT_AMOUNT<>0)

	
	SET @CSTEP = 572.2
	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_BILL_BY_BILL_REF_UPLOAD	( ADJ_REMARKS, AMOUNT, BB_ROW_ID, CR_DAYS, LAST_UPDATE, PAYMENT_ADJ_REF_NO, 
	REF_NO,  REMARKS, VD_ID, X_TYPE, SP_ID ,VM_ID,cd_percentage,cd_base_amount,ignore_cd_base_amount,
	cd_posted,org_bill_amount,org_bill_dt,org_bill_no)  
	SELECT '' AS ADJ_REMARKS,AMOUNT,'' AS BB_ROW_ID,0 AS CR_DAYS,GETDATE() AS LAST_UPDATE,'' AS PAYMENT_ADJ_REF_NO, 
	a.bill_no ref_no, '' AS REMARKS,A.VD_ID,A.X_TYPE,@NSPID AS SP_ID,A.VM_ID,
	a.cd_percentage,a.cd_base_amount,0 ignore_cd_base_amount,0 cd_posted,d.net_amount as org_bill_amount,
	d.inv_DT org_bill_dt,d.inv_no org_bill_no FROM @TBILL_BY_BILL_REF A
    JOIN @vdC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID
    JOIN @vmC C ON B.VM_ID=C.VM_ID
	JOIN @vLink v ON v.VM_ID=c.VM_ID
	LEFT JOIN inm01106 d ON d.inv_id=v.MEMO_ID
    WHERE A.AMOUNT<>0
	
	SET @CSTEP = 572.5
	
	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_POSTACT_VOUCHER_LINK_UPLOAD	( LAST_UPDATE, MEMO_ID, VM_ID, XN_TYPE, SP_ID )  
	SELECT 	LAST_UPDATE, MEMO_ID, A.VM_ID, A.XN_TYPE, @NSPID AS SP_ID 
	FROM @vlink A
    JOIN @vmC B ON A.VM_ID=B.VM_ID

    SET @CSTEP = 580

	SELECT @nSpId sp_id, CONVERT(BIT,1) AS CHK,CONVERT(BIT,1) optimized, A.*,(CASE WHEN B.VM_ID IS NOT NULL 
    THEN CONVERT(BIT,1) ELSE CONVERT(BIT,0) END) AS ERROR_FLAG,
    (CASE WHEN B.VM_ID IS NOT NULL THEN CONVERT(VARCHAR(500),'DEBIT & CREDIT TOTAL MISMATCH') ELSE CONVERT(VARCHAR(500),'') END) AS ERROR_DESC
    FROM @VMC A
    LEFT OUTER JOIN 
    (SELECT VM_ID,SUM(DEBIT_AMOUNT) AS DRTOTAL,SUM(CREDIT_AMOUNT) AS CRTOTAL
     FROM @VDC GROUP BY VM_ID
     HAVING SUM(DEBIT_AMOUNT)<>SUM(CREDIT_AMOUNT)) B ON A.VM_ID=B.VM_ID
    
    SELECT * FROM @VDC ORDER BY VM_ID
    SELECT * FROM #ERRORS WHERE 1=2
    SELECT * FROM @VLINK ORDER BY VM_ID

	SELECT B.AC_NAME,A.*,BILL_NO AS REF_NO,d.inv_no org_bill_no,d.inv_dt org_bill_dt,d.net_amount org_bill_amount
	FROM @TBILL_BY_BILL_REF A
	JOIN @VDC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID
	JOIN @VLINK C ON B.VM_ID=C.VM_ID
	JOIN inm01106 d ON d.inv_id=c.MEMO_ID
    
END TRY

BEGIN CATCH
	SET @CERRORMSG='ERROR IN PROCEDURE POSTACT_GST_WSL AT STEP#'+@CSTEP+' '+ERROR_MESSAGE()
	GOTO END_PROC	
END CATCH

END_PROC:
	IF @CERRORMSG<>''
		SELECT @CERRORMSG AS ERRMSG
END
--END OF PROCEDURE - POSTACT_GST_WSL