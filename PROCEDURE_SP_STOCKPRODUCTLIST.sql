CREATE PROCEDURE SP_STOCKPRODUCTLIST      --(LocId 3 digit change only increased the parameter width by Sanjay:01-11-2024)
(        
	 @CPRODUCTCODE VARCHAR(50),              
	 @BDONOTCHECKSTOCK BIT=0,              
	 @CDEPT_ID  VARCHAR(4)='',
	 @CUSERCODE VARCHAR(20)='',
	 @CBIN_ID VARCHAR(20)='000',
	 @CXNTYPE VARCHAR(10)='' 
)         
--WITH ENCRYPTION     
AS         
BEGIN              
 DECLARE @NSTKQTY NUMERIC(10,3),@CPRDCODE VARCHAR(100) ,@CQUERY NVARCHAR(MAX),@ALLOW_ACCESS BIT ,
         @TERROR VARCHAR(100),@CDONOTCHECKSTOCK VARCHAR(5),@BMBO_COUNTER BIT
    
    SET @CDONOTCHECKSTOCK=''
    
    ---- NEGATIVE STOCK SHOULD NOT BE ALLOWED IF USER IS SUPER : 13-01-15 (SANJAY)
    IF @CUSERCODE<>'0000000'    
    BEGIN
	   --CHECK CHECK STOCK IN MODULES --16.10.14 CREATED BY DINKAR
		SELECT TOP 1 @CDONOTCHECKSTOCK =VALUE FROM USER_ROLE_DET A
		JOIN USERS B ON A.ROLE_ID=B.ROLE_ID
		WHERE USER_CODE=@CUSERCODE AND FORM_NAME='FRMSALE' 
		AND FORM_OPTION='ALLOW_NEG_STOCK'	
			
		SET @CDONOTCHECKSTOCK =ISNULL(@CDONOTCHECKSTOCK,'') 
	END
	
	IF OBJECT_ID('TEMPDB..#TMPERROR','U')  IS NOT NULL
	   DROP TABLE #TMPERROR
	CREATE TABLE  #TMPERROR(PRODUCT_CODE VARCHAR(100),ERR_MSG VARCHAR(MAX)) 
 
 SELECT TOP 1 @ALLOW_ACCESS=1 FROM BINUSERS (NOLOCK) WHERE USER_CODE=@CUSERCODE AND BIN_ID =@CBIN_ID  
 DECLARE @BINNAME VARCHAR(1000),@CUSERNAME VARCHAR(1000)
   
   SET @CUSERNAME=(SELECT TOP 1 USERNAME FROM USERS WHERE USER_CODE=@CUSERCODE )
   SET @BINNAME=(SELECT TOP 1 BIN_NAME FROM BIN WHERE BIN_ID =@CBIN_ID )
   SELECT @BMBO_COUNTER=ISNULL(MBO_COUNTER,0) FROM BIN WHERE BIN_ID=@CBIN_ID
   
 IF ISNULL(@ALLOW_ACCESS,0)<>1 AND @CUSERCODE<>'0000000'
 BEGIN
 	 SET @CQUERY = N'SELECT PRODUCT_CODE,''USER -'+@CUSERNAME+' NOT ALLOW TO ACCESS BIN- '+@BINNAME+'''  FROM #TEMP_PCODE_'+@CPRODUCTCODE+''
	 PRINT @CQUERY
	 INSERT INTO #TMPERROR       
	 EXECUTE SP_EXECUTESQL @CQUERY  
END   
 ELSE IF ISNULL(@CUSERCODE,'')=''
 BEGIN
	 SET @CQUERY = N'SELECT PRODUCT_CODE,''ENTERED USER CAN NOT BE BLANK'' FROM #TEMP_PCODE_'+@CPRODUCTCODE+''
	 PRINT @CQUERY      
	 INSERT INTO #TMPERROR 
	 EXECUTE SP_EXECUTESQL @CQUERY   
 END	
 ELSE IF ISNULL(@CBIN_ID,'')=''
 BEGIN
	 SET @CQUERY = N'SELECT PRODUCT_CODE,''ENTERED BIN_ID CAN NOT BE BLANK'' FROM #TEMP_PCODE_'+@CPRODUCTCODE+''
	 PRINT @CQUERY
	 INSERT INTO #TMPERROR       
	 EXECUTE SP_EXECUTESQL @CQUERY   
 END
 ELSE 
 BEGIN
	SET @CQUERY = N'SELECT DISTINCT  T.PRODUCT_CODE,
	ERR_MSG=CASE WHEN PMT.STOCK_NA=1 OR '''+@CDONOTCHECKSTOCK+'''=''1''  THEN ''''
	WHEN (ISNULL(PMT.PRODUCT_CODE,'''')='''' OR (ISNULL(PMT.PRODUCT_CODE,'''')<>'''' AND QTY>ISNULL(QUANTITY_IN_STOCK,0)) ) 
	THEN ''NO STOCK AVAILABLE FOR BIN- '+@BINNAME+'  OF USER- '+@CUSERNAME+'''
				  ELSE '''' END
	FROM  #TEMP_PCODE_'+@CPRODUCTCODE+' T 
	LEFT OUTER JOIN 
		(SELECT  PMT.PRODUCT_CODE,SUM(QUANTITY_IN_STOCK) AS QUANTITY_IN_STOCK,DEPT_ID,ART.STOCK_NA  
		 FROM PMT01106 PMT (NOLOCK)
		 JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=PMT.PRODUCT_CODE
		 JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE
		 JOIN BINUSERS BU (NOLOCK) ON BU.BIN_ID =PMT.BIN_ID 
		 JOIN #TEMP_PCODE_'+@CPRODUCTCODE+' T ON T.PRODUCT_CODE=PMT.PRODUCT_CODE
		 WHERE '''+@CUSERCODE+'''=(CASE WHEN '''+@CUSERCODE+'''=''0000000'' 
		 THEN '''+@CUSERCODE+''' ELSE  BU.USER_CODE END) AND ISNULL(PMT.QUANTITY_IN_STOCK,0)>0
		 GROUP BY PMT.PRODUCT_CODE,DEPT_ID,ART.STOCK_NA )PMT ON PMT.PRODUCT_CODE =T.PRODUCT_CODE'
     PRINT @CQUERY
	 INSERT INTO #TMPERROR       
	 EXECUTE SP_EXECUTESQL @CQUERY        
END  

DECLARE @CBINFILTER VARCHAR(MAX)
IF @CDONOTCHECKSTOCK='1' OR @CUSERCODE='0000000'
SET @CBINFILTER='PMT.BIN_ID'
ELSE 
BEGIN
SELECT @CBINFILTER=ISNULL(@CBINFILTER+'',' ')+ ' WHEN PMT.BIN_ID='''+ BIN_ID +'''' +' AND PMT.QUANTITY_IN_STOCK >=PASTE.P_QTY THEN PMT.BIN_ID'  FROM BINUSERS 
WHERE USER_CODE =@CUSERCODE
ORDER BY BIN_ID 
SET @CBINFILTER='CASE '+@CBINFILTER+' ELSE '''' END  '
END

 SET @CQUERY = N'SELECT DISTINCT A.PRODUCT_CODE, A.ARTICLE_CODE, B.ARTICLE_NO, B.ARTICLE_NAME, A.PARA1_CODE,              
 C.PARA1_NAME, A.PARA2_CODE, D.PARA2_NAME, A.PARA3_CODE, F.PARA3_NAME, E.UOM_NAME,                 
 PMT.DEPT_ID, A.BARCODE_CODING_SCHEME AS CODING_SCHEME,  B.INACTIVE, PMT.QUANTITY_IN_STOCK,              
 A.PURCHASE_PRICE,(CASE WHEN ISNULL(Z.MRP,0)=0 THEN A.MRP ELSE Z.MRP END) AS MRP,A.WS_PRICE,            
 '''+ +''' AS SCHEME_ID, SM.SECTION_NAME, SD.SUB_SECTION_NAME,              
 A.PARA4_CODE,A.PARA5_CODE,A.PARA6_CODE,              
 PARA4_NAME,PARA5_NAME,PARA6_NAME,B.UOM_CODE,ISNULL(E.UOM_TYPE,0) AS [UOM_TYPE],              
 B.DT_CREATED AS [ART_DT_CREATED],F.DT_CREATED AS [PARA3_DT_CREATED],A.DT_CREATED AS [SKU_DT_CREATED],              
 STOCK_NA=CASE WHEN '''+ @CDONOTCHECKSTOCK +'''=''1'' THEN 1 ELSE  B.STOCK_NA END  ,A.FIX_MRP,A.PRODUCT_NAME ,
 PASTE.P_QTY,A.AC_CODE   ,
 CASE WHEN B.STOCK_NA=1 THEN PMT.BIN_ID ELSE '+@CBINFILTER+' END AS BIN_ID,
 B2.BIN_NAME,B.ALIAS AS [ARTICLE_ALIAS] ,FR.TAX_PERCENTAGE,FR.FORM_ID     
 FROM PMT01106 PMT (NOLOCK)               
 JOIN SKU A (NOLOCK) ON A.PRODUCT_CODE=PMT.PRODUCT_CODE            
 JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE                
 JOIN SECTIOND SD (NOLOCK) ON B.SUB_SECTION_CODE = SD.SUB_SECTION_CODE              
 JOIN SECTIONM SM (NOLOCK) ON SD.SECTION_CODE = SM.SECTION_CODE              
 JOIN PARA1 C (NOLOCK) ON A.PARA1_CODE = C.PARA1_CODE                
 JOIN PARA2 D (NOLOCK) ON A.PARA2_CODE = D.PARA2_CODE                
 JOIN PARA3 F (NOLOCK) ON A.PARA3_CODE = F.PARA3_CODE                
 JOIN PARA4 G (NOLOCK) ON A.PARA4_CODE = G.PARA4_CODE                
 JOIN PARA5 H (NOLOCK) ON A.PARA5_CODE = H.PARA5_CODE                
 JOIN PARA6 I (NOLOCK) ON A.PARA6_CODE = I.PARA6_CODE                
 LEFT OUTER JOIN UOM E (NOLOCK) ON B.UOM_CODE = E.UOM_CODE
 LEFT OUTER JOIN FORM FR (NOLOCK) ON A.FORM_ID = FR.FORM_ID                   
 LEFT OUTER JOIN             
 (            
  SELECT A.PRODUCT_CODE,MAX(A.MRP) AS MRP            
  FROM LOCSKUSP A (NOLOCK)
  JOIN #TEMP_PCODE_'+@CPRODUCTCODE+'  B ON  A.PRODUCT_CODE= B.PRODUCT_CODE                   
  WHERE DEPT_ID='''+@CDEPT_ID+'''            
  GROUP BY A.PRODUCT_CODE            
 )Z ON Z.PRODUCT_CODE=PMT.PRODUCT_CODE      
 LEFT OUTER JOIN EAN_SYNC EN (NOLOCK) ON A.PRODUCT_CODE = EN.PRODUCT_CODE   
 JOIN   
 (
  SELECT PRODUCT_CODE,SUM(QTY) AS P_QTY FROM #TEMP_PCODE_'+@CPRODUCTCODE+'   
  GROUP BY PRODUCT_CODE  
 ) PASTE ON A.PRODUCT_CODE= PASTE.PRODUCT_CODE  

JOIN BIN B2 ON B2.BIN_ID=PMT.BIN_ID    
 JOIN BINUSERS BU (NOLOCK) ON BU.BIN_ID =B2.BIN_ID     
LEFT OUTER JOIN #TMPERROR T ON T.PRODUCT_CODE=PMT.PRODUCT_CODE
 WHERE '''+@CUSERCODE+'''=(CASE WHEN '''+@CUSERCODE+'''=''0000000'' 
		 THEN '''+@CUSERCODE+''' ELSE  BU.USER_CODE END) AND (PMT.QUANTITY_IN_STOCK>0 OR 
		 (B.STOCK_NA=1 OR '''+@CDONOTCHECKSTOCK+'''=''1'')) AND  ISNULL(T.ERR_MSG,'''')=''''
         AND  PMT.BIN_ID= CASE WHEN B.STOCK_NA=1 OR '''+@CDONOTCHECKSTOCK+'''=1 THEN '''+@CBIN_ID+''' ELSE PMT.BIN_ID END' 
PRINT @CQUERY       
EXECUTE SP_EXECUTESQL @CQUERY  

SELECT * FROM #TMPERROR WHERE ERR_MSG <>'' 
SET @CQUERY = N'IF OBJECT_ID(''#TEMP_PCODE_'+@CPRODUCTCODE+''',''U'')  IS NOT NULL
	   DROP TABLE #TEMP_PCODE_'+@CPRODUCTCODE+'' 
       PRINT @CQUERY       
       EXECUTE SP_EXECUTESQL @CQUERY  
    
END
