create  PROCEDURE POSTACT_WSR     
(    
 @DTTO DATETIME,    
 @CDEPTID CHAR(4)='',    
 @CACCODE CHAR(10)='',
 @DGSTCUTOFFDATE DATETIME    
)    
AS    
BEGIN    
	 
	 DECLARE @CSTEP VARCHAR(10),@BPOSTDISCOUNTSEPARATELY BIT,@CDISCACCODE VARCHAR(10),@BPOSTFREIGHTSEPARATELY BIT,@CFREIGHTACCODE VARCHAR(10),    
	   @BPOSTOTHERCHARGESSEPARATELY BIT,@COTHERCHARGESACCODE VARCHAR(10),@BPOSTROUNDOFFSEPARATELY BIT    
	   ,@CROUNDOFFACCODE VARCHAR(10),@NCTR NUMERIC(10,0),    
	   @NSUBTOTAL NUMERIC(14,2),@NTAXAMOUNT NUMERIC(14,2), @CPURACCODE VARCHAR(50),@CTAXACCODE VARCHAR(100),    
	   @LPOSTTAXSEPARATELY NUMERIC(14,2),@CCNNO VARCHAR(50),@CCNID VARCHAR(50),@LOUTSTATIONPARTY BIT,@TMPDR NUMERIC(14,2),    
	   @TMPCR NUMERIC(14,2),@CCURSTATECODE VARCHAR(10),@CVMID VARCHAR(40),@CLOCATIONID CHAR(2),    
	   @CLASTBILLNO VARCHAR(40),@DTMPVENDORBILLDT DATETIME,@CRMLIST VARCHAR(300),@NTMPCREDITDAYS NUMERIC(10),    
	   @NTMPCRDISCOUNTPERCENTAGE NUMERIC(14,2),@DLASTINVDT DATETIME,@CVOUCHERCODE VARCHAR(10),    
	   @COLDBILLTYPE VARCHAR(10),@CLASTACCODE VARCHAR(10),@CLASTPARTYNAME VARCHAR(100),@NTOTQUANTITY NUMERIC(14,2),    
	   @NTOTNETAMOUNT NUMERIC(14,2),@CDEPTNAME VARCHAR(100),@CVOUCHERNO VARCHAR(10)    
	   ,@BPOSTINSURANCESEPARATELY BIT,@CINSURANCEACCODE VARCHAR(10),@NMODE INT,@BNEWENTRY BIT,@CREFINVID VARCHAR(40)
	   ,@CPOSTBILLBYBILLREFTYPE VARCHAR(2),@NVDID INT,@NROLIMIT NUMERIC(7,3),@BMANUALROFF BIT
	       
	 SET @CSTEP=10    
	 DECLARE @CPARTYACCODE VARCHAR(10),@CPARTYSTATECODE VARCHAR(10),@NNETAMOUNT NUMERIC(14,2),    
	   @NDISCAMOUNT NUMERIC(14,2),@NFREIGHT NUMERIC(14,2), @NOTHER NUMERIC(14,2),@NROUNDOFF NUMERIC(14,2),    
	   @NDRTOTAL NUMERIC(14,4),@NCRTOTAL NUMERIC(14,4),@CCUTOFFDATE VARCHAR(20),@CXNTYPE VARCHAR(10),    
	   @CAC_CODE VARCHAR(20),@CVDID VARCHAR(40),@CWSLBILLS VARCHAR(MAX),@BBILLBYBILL BIT,@CSETOFFACCODE CHAR(10),  
	   @POST_BILL_BY_BILL_REFTYPE INT,@BGSTBILL BIT,@CSLOCGSTSTATECODE VARCHAR(5),@CTLOCGSTSTATECODE VARCHAR(5),
	   @CPARTYGSTSTATECODE VARCHAR(5),@CADJDIFFACCODE CHAR(10),@COLDCNID VARCHAR(40)
	        
		SET @COTHERCHARGESACCODE=''    
		SET @CFREIGHTACCODE=''    
		SET @CROUNDOFFACCODE=''    
	        
		SET @CSTEP=20    
		--THIS TABLE VARIABLE STORE ERROR OF OF MEMO ID    
		DECLARE @ERRORS TABLE    
	 (    
	  XN_ID VARCHAR(40),XN_TYPE VARCHAR(30),XN_NO VARCHAR(40),    
	  XN_DT DATETIME,XN_AMT NUMERIC(14,2),XN_AC VARCHAR(100),    
	  ERR_DESC VARCHAR(500)    
	 )       
	        
		SET @CSTEP=30    
		DECLARE @VCHC TABLE     
	 (    
	  AC_CODE CHAR(10),NARRATION VARCHAR(200),XN_NO VARCHAR(30),    
	  XN_DT DATETIME,DEPT_ID CHAR(4),AMOUNT NUMERIC(14,4),XN_ID VARCHAR(50),    
	  REF_BILL_NO VARCHAR(50),REF_BILL_DATE DATETIME, ENTRY_ID INT    
	  , CRDAYS NUMERIC(5)    
	 )    
	     
	 SET @CSTEP=40    
	 DECLARE @VDC TABLE     
	 (    
	  VD_ID VARCHAR(50),    VM_ID VARCHAR(40),    AC_CODE CHAR(10),     
	  NARRATION VARCHAR(MAX),   DEBIT_AMOUNT NUMERIC(14,4),  CREDIT_AMOUNT NUMERIC(14,4),    
	  X_TYPE CHAR(2),     VS_AC_CODE CHAR(10),    REF_BILL_NO VARCHAR(40),     
	  CREDIT_DAYS NUMERIC(10),  CR_DISCOUNT_PERCENTAGE NUMERIC(14,2),      
	  VAT_ENTRY BIT,REF_BILL_DATE DATETIME, AC_NAME VARCHAR(100),NEW_VD_ID VARCHAR(50)    
	 )    
	     
	 SET @CSTEP=50    
	 DECLARE @VMC TABLE    
	 (    
	  VM_ID VARCHAR(400),    VOUCHER_NO VARCHAR(400),   VOUCHER_DT DATETIME,     
	  VOUCHER_CODE CHAR(100),   DEPT_ID CHAR(20),    BILL_TYPE VARCHAR(300),    
	  BILL_NO VARCHAR(200),    BILL_ID VARCHAR(220),    BILL_DT DATETIME,     
	  BILL_AC_CODE VARCHAR(100),  DRTOTAL NUMERIC(20,2),   CRTOTAL NUMERIC(20,2),     
	  CASH_VOUCHER BIT,     SALE_VOUCHER BIT,     QUANTITY NUMERIC(20,2),     
	  ANGADIA_CODE CHAR(70),    LR_NO VARCHAR(500),    LR_DT DATETIME,    
	  PARTY_NAME VARCHAR(1000),  NET_AMOUNT NUMERIC(20,2),   BILL_STATUS VARCHAR(1000),    
	  RM_LIST VARCHAR(MAX),  CANCELLED BIT,     DEPT_NAME VARCHAR(100),    
	  VOUCHER_TYPE VARCHAR(100)     
	 )    
	     
	 SET @CSTEP=60    
	 DECLARE @VLINK TABLE    
	 (    
	  VM_ID VARCHAR(100),MEMO_ID VARCHAR(100),XN_TYPE VARCHAR(20),LAST_UPDATE DATETIME    
	 ) 
	     
	 DECLARE @TBILL_BY_BILL_REF TABLE(VM_ID VARCHAR(50),VD_ID VARCHAR(40),REF_NO VARCHAR(40),AMOUNT NUMERIC(18,4),LAST_UPDATE DATETIME    
			,X_TYPE VARCHAR(20),CR_DAYS NUMERIC(5))    
	     
	 SELECT TOP 1 @CCUTOFFDATE=CUTOFFDATE,@POST_BILL_BY_BILL_REFTYPE=ISNULL(POST_BILL_BY_BILL_REFTYPE,0)   
	 FROM WSRCONFIGMST    
	 SET @CCUTOFFDATE=ISNULL(@CCUTOFFDATE,'')    
	     
	 SET @CSTEP=70    
	 SET @CVOUCHERCODE = '0000000004'    
		BEGIN TRY    
	       
	   SET @CSTEP=80    
	   IF OBJECT_ID('TEMPDB..#WSRTABLE','U') IS NOT NULL    
		DROP TABLE #WSRTABLE     
	       
	   SET @CSTEP=90     --THIS TABLE STORE ALL PENDING MEMO_ID     
	   CREATE TABLE #WSRTABLE (MEMO_ID VARCHAR(30),MODE VARCHAR(10))    
	       
	   SET @CSTEP=100    

	   

	   --GETTING LIST OF PURCHASE RETURNS THAT QUALIFY FOR VOUCHER POSTING    
	   INSERT INTO #WSRTABLE (MEMO_ID,MODE)    
			 SELECT A.CN_ID,'WSR' AS MODE     
			 FROM CNM01106 A    
			 JOIN LOCATION SL ON a.location_Code =SL.DEPT_ID    
			 LEFT JOIN LOCATION TL ON A.PARTY_DEPT_ID=TL.DEPT_ID    
			 LEFT OUTER JOIN     
			 (    
		SELECT B.MEMO_ID,B.LAST_UPDATE    
		FROM POSTACT_VOUCHER_LINK B     
		JOIN VM01106 C ON C.VM_ID = B.VM_ID     
		WHERE C.CANCELLED=0 AND B.XN_TYPE = 'WSR'     
			 )VM  ON A.CN_ID = VM.MEMO_ID      
			 WHERE      
			   -- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES    
				(ISNULL(SL.LOC_TYPE,0)=1 OR ISNULL(SL.ACCOUNT_POSTING_AT_HO,0)=1) AND     
			 /*CREDITNOTE IS NOT CANCELLED.*/    
			 ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)      
			 /*CREDITNOTE INV_DT IS LESS THAN THE SPECIFIED DATE.*/    
			 AND A.CN_DT <= @DTTO    
			 /*IF CUTOFF DATE IS SPECIFIED, CONSIDER CREDITNOTE AFTER THE CUTOFF DATE*/    
			 AND (ISNULL(@CCUTOFFDATE,'')='' OR A.CN_DT>@CCUTOFFDATE)    
			 /*APPLY FILTER TO LOCATION.*/    
			 AND (ISNULL(@CDEPTID,'')='' OR a.location_Code =@CDEPTID)    
			 /*CREDITNOTE IS NOT GROUP/BRANCH CREDITNOTE*/    
			 AND (((A.MODE<>2 OR A.XFER_TYPE=1) AND CN_DT<@DGSTCUTOFFDATE) OR
				 ((A.MODE<>2 OR TL.LOC_TYPE=2) AND CN_DT<@DGSTCUTOFFDATE))
			 /*CREDITNOTE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/    
			 AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE)     
			 AND (@CACCODE='' OR A.AC_CODE=@CACCODE) 
			
	             
			 SET @CSTEP=110    
			 SELECT @BPOSTDISCOUNTSEPARATELY = POSTDISCSPRTLY    
			 FROM WSRCONFIGMST    
		
		--SELECT 'CHECK WSRTABLE',* FROM #WSRTABLE	       
		
	   SET @CSTEP=120    
	   --IF NO ENTRY EXISTS IN CONFIG, CONSIDER 0    
	   SET @BPOSTDISCOUNTSEPARATELY=ISNULL(@BPOSTDISCOUNTSEPARATELY,0)    
	       
	   SET @CSTEP=130    
	   IF @BPOSTDISCOUNTSEPARATELY=1    
	   BEGIN    
		SELECT @CDISCACCODE = DISCAC    
		FROM WSRCONFIGMST    
	        
		SET @CDISCACCODE=ISNULL(@CDISCACCODE,'')    
		/*    
		IF DISCOUNT HAS TO BE POSTED SEPARATELY AND DISCOUNT ACCOUNT IS NOT DEFINED,     
		SEND ERROR MESSAGE TO USER    
		*/    
		SET @CSTEP=140    
		IF @CDISCACCODE = '' OR @CDISCACCODE = '0000000000'    
		BEGIN    
		 INSERT @ERRORS (XN_TYPE, ERR_DESC )     
		 VALUES ( 'WSL', 'CONFIG: DISCOUNT ACCOUNT NOT SPECIFIED')    
		END    
	   END    
	       
			 SET @CSTEP=150    
			 --IF FREIGHT CONSIDERED AS PART OF STOCK THEN CLUB IT IN CREDITNOTE A/C OTHERWISE POST SEPARATELY    
	   SELECT @BPOSTFREIGHTSEPARATELY = POSTFREIGHTSPRTLY    
	   FROM WSRCONFIGMST    
	       
	   SET @CSTEP=160    
	   SET @BPOSTFREIGHTSEPARATELY=ISNULL(@BPOSTFREIGHTSEPARATELY,0)    
	       
	   SET @CSTEP=170    
	   --GET THE ACCOUNT FOR FREIGHT AMOUNT POSTING    
	   SELECT @CFREIGHTACCODE = ISNULL(FREIGHTAC, '')    
	   FROM WSRCONFIGMST    
	          
		  SET @CFREIGHTACCODE=ISNULL(@CFREIGHTACCODE,'')    
	          
		  SET @CSTEP=180    
	   --IF OTHER CHARGES CONSIDERED AS PART OF STOCK THEN CLUB IT IN CREDITNOTE A/C OTHERWISE POST SEPARATELY    
	   SELECT @BPOSTOTHERCHARGESSEPARATELY = POSTOCSPRTLY    
	   FROM WSRCONFIGMST    
	    
	   SET @CSTEP=190    
	   SET @BPOSTOTHERCHARGESSEPARATELY=ISNULL(@BPOSTOTHERCHARGESSEPARATELY,0)    
	    
	   SET @CSTEP=200    
	   SELECT @COTHERCHARGESACCODE = ISNULL(OCAC,'')    
	   FROM WSRCONFIGMST    
	         
	   SET @COTHERCHARGESACCODE=ISNULL(@COTHERCHARGESACCODE,'')    
	         
	   SET @CSTEP=202    
		  --IF INSURANCE IS CONSIDERED AS PART OF STOCK THEN CLUB IT IN WHOLESALE A/C OTHERWISE POST SEPARATELY    
	   SELECT @BPOSTINSURANCESEPARATELY = ISNULL(POSTINSSPRTLY,0)    
	   FROM WSRCONFIGMST    
	         
	   SET @CSTEP=204    
	   SET @BPOSTINSURANCESEPARATELY=ISNULL(@BPOSTINSURANCESEPARATELY,0)    
	    
	   SET @CSTEP=206    
	   SELECT @CINSURANCEACCODE = ISNULL(INSAC,'')    
	   FROM WSRCONFIGMST    
	         
	   SET @CSTEP=208    
	   SET @CINSURANCEACCODE=ISNULL(@CINSURANCEACCODE,'')    
	         
	   SET @CSTEP = 210    
	   --IF OTHER CHARGES CONSIDERED AS PART OF STOCK THEN CLUB IT IN CREDITNOTE A/C OTHERWISE POST SEPARATELY    
	   SELECT @BPOSTROUNDOFFSEPARATELY = ISNULL(POSTROFFSPRTLY,0)    
	   FROM WSRCONFIGMST    
	    
	   SET @CSTEP = 220    
	   SET @BPOSTROUNDOFFSEPARATELY=ISNULL(@BPOSTROUNDOFFSEPARATELY,0)    
	       
	   SET @CSTEP = 230    
	   SELECT @CROUNDOFFACCODE = ISNULL(ROFFAC,'')    
	   FROM WSRCONFIGMST    
	       
	   SET @CROUNDOFFACCODE=ISNULL(@CROUNDOFFACCODE,'')    
	      
	   CREATE INDEX IX_TEMP_WSRTABLE_RM_ID ON #WSRTABLE(MEMO_ID)    

		DECLARE @BGPCCONFIGFOUND BIT			
		SET @BGPCCONFIGFOUND=0
		IF EXISTS (SELECT TOP 1 XN_TYPE FROM GST_POSTING_CONFIG WHERE XN_TYPE='WSR')
			SET @BGPCCONFIGFOUND=1
	      
	   SET @CSTEP=240    
	   ---GETTING LIST OF ALL ERROR FROM CREDITNOTE AND CONVERT MRN TO BILL    
	   INSERT INTO @ERRORS(XN_ID,XN_NO ,XN_DT,XN_TYPE,ERR_DESC)    
	   --GETTING ERROR LIST FROM CREDITNOTE BILLS    
	   SELECT DISTINCT CNM.CN_ID,CNM.CN_NO,CN_DT,'WSR' AS XN_TYPE    
		  ,(CASE     
			 WHEN CND.ITEM_FORM_ID='0000000' AND CNM.CN_DT<@DGSTCUTOFFDATE
					THEN 'FORM NOT SPECIFIED'
			 WHEN (ISNULL(PAC.WSRAC,'') = '' OR ISNULL(PAC.WSRAC,'') = '0000000000')  AND CNM.CN_DT<@DGSTCUTOFFDATE
					THEN 'WHOLESALE A/C NOT SPECIFIED'
			 WHEN (CND.ITEM_TAX_PERCENTAGE<>0 AND (ISNULL(PAC.TAXAC,'')='' OR PAC.TAXAC='0000000000'))  AND CNM.CN_DT<@DGSTCUTOFFDATE 
					THEN 'TAX A/C NOT SPECIFIED'

			 WHEN CNM.CN_DT>=@DGSTCUTOFFDATE  AND GPC.XN_TYPE IS NULL AND @BGPCCONFIGFOUND=1
								THEN 'GST A/C CONFIGURATION NOT FOUND FOR RELATED GST PERCENTAGE'								
			 WHEN CNM.CN_DT>=@DGSTCUTOFFDATE  AND @BGPCCONFIGFOUND=0
					THEN 'GST A/C CONFIGURATION NOT SETUP FOR WHOLESALE RETURN'								
			 
			 WHEN (ISNULL(GPC.IGST_XN_AC_CODE,'') = '' OR ISNULL(GPC.IGST_XN_AC_CODE,'') = '0000000000')
					AND CNM.CN_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND IGST_AMOUNT<>0 THEN 'IGST WSR A/C NOT SPECIFIED'
			 WHEN (ISNULL(GPC.LOCAL_GST_XN_AC_CODE,'') = '' OR ISNULL(GPC.LOCAL_GST_XN_AC_CODE,'') = '0000000000')
					AND CNM.CN_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND CGST_AMOUNT<>0 THEN 'LOCAL WSR A/C NOT SPECIFIED'
			 
			 WHEN (ISNULL(GPC.IGST_TAX_AC_CODE,'') = '' OR ISNULL(GPC.IGST_TAX_AC_CODE,'') = '0000000000')
					AND CNM.CN_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND IGST_AMOUNT<>0 THEN 'IGST TAX A/C NOT SPECIFIED'
			 WHEN (ISNULL(GPC.CGST_TAX_AC_CODE,'') = '' OR ISNULL(GPC.CGST_TAX_AC_CODE,'') = '0000000000')
					AND CNM.CN_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND CGST_AMOUNT<>0 THEN 'CGST TAX A/C NOT SPECIFIED'
			 WHEN (ISNULL(GPC.SGST_TAX_AC_CODE,'') = '' OR ISNULL(GPC.SGST_TAX_AC_CODE,'') = '0000000000')
					AND CNM.CN_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND SGST_AMOUNT<>0 THEN 'SGST TAX NOT SPECIFIED'																								
				
			 WHEN (CNM.FREIGHT<>0 AND @BPOSTFREIGHTSEPARATELY=1
					 AND (@CFREIGHTACCODE = '' OR @CFREIGHTACCODE = '0000000000'))
					THEN 'FREIGHT A/C NOT SPECIFIED'
			 WHEN (CNM.OTHER_CHARGES<>0 AND @BPOSTOTHERCHARGESSEPARATELY=1
					 AND (@COTHERCHARGESACCODE='' OR @COTHERCHARGESACCODE='0000000000'))
					THEN 'OTHER CHARGES A/C NOT SPECIFIED' 
			 WHEN (CNM.INSURANCE<>0 AND @BPOSTINSURANCESEPARATELY=1
					 AND (@CINSURANCEACCODE='' OR @CINSURANCEACCODE='0000000000'))
					THEN 'INSURANCE A/C NOT SPECIFIED' 				
			 WHEN (CNM.ROUND_OFF<>0 AND (@BPOSTROUNDOFFSEPARATELY=1 OR  CNM.CN_DT>=@DGSTCUTOFFDATE) AND (@CROUNDOFFACCODE = '' OR @CROUNDOFFACCODE = '0000000000'))
					THEN 'ROUND OFF A/C NOT SPECIFIED'		

		   WHEN (CNM.TOTAL_AMOUNT=0)             
			THEN 'ZERO VALUE CREDITNOTE'    
		   ELSE 'UNIDENTIFIED ERROR' END) AS ERR_DESC      
	   FROM CNM01106 CNM    
	   JOIN CND01106 CND ON CNM.CN_ID=CND.CN_ID    
	   JOIN #WSRTABLE TPT ON CNM.CN_ID=TPT.MEMO_ID AND TPT.MODE='WSR'    
	   LEFT OUTER JOIN WSRCONFIGDET PAC ON CND.ITEM_FORM_ID=PAC.FORMID     
	   LEFT JOIN FORM FM ON FM.FORM_ID=CND.ITEM_FORM_ID    
	   LEFT OUTER JOIN GST_POSTING_CONFIG GPC ON GPC.GST_PERCENTAGE=ISNULL(CND.GST_PERCENTAGE,0) AND GPC.XN_TYPE='WSR'
	   
	   WHERE     
	   --GENERATE ERROR IF ITEM WITH INVALID FORM SELECTION IS FOUND.    
		((CND.ITEM_FORM_ID='0000000' AND  CNM.CN_DT<@DGSTCUTOFFDATE)
		OR (CNM.CN_DT>=@DGSTCUTOFFDATE  AND GPC.XN_TYPE IS NULL)	
		--GENERATE ERROR IF WHOLESALE ACCOUNT IS NOT SPECIFIED.
		OR ((ISNULL(PAC.WSRAC,'') = '' OR ISNULL(PAC.WSRAC,'') = '0000000000')  AND  CNM.CN_DT<@DGSTCUTOFFDATE)	
		--GENERATE ERROR IF TAX IS TO BE POSTED SEPARATELY AND NO TAX ACCOUNT IS SPECIFIED.
		OR (CND.ITEM_TAX_PERCENTAGE<>0  AND  CNM.CN_DT<@DGSTCUTOFFDATE 
			AND ((ISNULL(PAC.TAXAC,'')='' OR PAC.TAXAC='0000000000'))) 
		--GENERATE ERROR IF FREIGHT SHOULD BE SEPARATELY POSTED AND FREIGHT ACCOUNT IS NOT SPECIFIED.
		OR (CNM.FREIGHT<>0 AND @BPOSTFREIGHTSEPARATELY=1
			 AND (@CFREIGHTACCODE = '' OR @CFREIGHTACCODE = '0000000000'))
		--GENERATE ERROR IF OTHER CHARGES SHOULD BE SEPARATELY POSTED AND OTHER CHARGES ACCOUNT IS NOT SPECIFIED.
		OR (CNM.OTHER_CHARGES<>0 AND @BPOSTOTHERCHARGESSEPARATELY=1
			 AND (@COTHERCHARGESACCODE='' OR @COTHERCHARGESACCODE='0000000000'))
		--GENERATE ERROR IF INSURANCE SHOULD BE SEPARATELY POSTED AND OTHER INSURANCE ACCOUNT IS NOT SPECIFIED.
		OR (CNM.INSURANCE<>0 AND @BPOSTINSURANCESEPARATELY=1
			 AND (@CINSURANCEACCODE='' OR @CINSURANCEACCODE='0000000000'))
		--GENERATE ERROR IF ROUNDOFF SHOULD BE SEPARATELY POSTED AND ROUNDOFF ACCOUNT IS NOT SPECIFIED.
		OR (CNM.ROUND_OFF<>0 AND (@BPOSTROUNDOFFSEPARATELY=1 OR  CNM.CN_DT>=@DGSTCUTOFFDATE) AND (@CROUNDOFFACCODE = '' OR @CROUNDOFFACCODE = '0000000000'))
	   --GENERATE ERROR IF CREDITNOTE IS NOT CANCELLED AND IT HAS TOTAL AMOUNT=0    
	   OR CNM.TOTAL_AMOUNT=0)     
	            
	   SET @CSTEP = 250    
	   --DELETE CN_ID FROM TEPM TABLE WHICH HAVE SOME ERROR    
	  
	     
	             
	   --SELECT COUNT(*) FROM #WSRTABLE    
	   SET @CSTEP = 260    
	   IF OBJECT_ID('TEMPDB..#V_PROCESS','U') IS NOT NULL    
			DROP TABLE #V_PROCESS    
	       
	   SET @CSTEP = 270    
	   /*    
		BILL_LEVEL_TAX_METHOD : 1 IS EXCLUSIVE    
			  2 IS INCLUSIVE    
	                  
	   */    
	   --A SINGLE CREDITNOTE MEMO CAN HAVE MULTIPLE CREDITNOTE AND TAX ACCOUNTS BASED ON MULTIPLE FORMS    
		SELECT   PM.CN_ID    
		  ,PM.CN_NO    
		  ,PM.CN_DT    
		  ,PM.CREDIT_DAYS    
		  ,pm.location_Code  AS DEPT_ID    
		  ,INV_DT
		  ,PAC.WSRAC AS WSRAC    
		  ,PAC.TAXAC AS TAXAC    
		  --FOR INCLUSIVE TAX DEDUCE THE AMOUNT FROM THE SUBTOTAL AS TAX WOULD BE POSTED SEPARATELY    
		  ,FM.POST_TAX_SEPARATELY    
		  ,PM.AC_CODE    
		  ,PM.TOTAL_AMOUNT    
		  ,PD.INV_NO AS BILL_NO     
		  ,PM.CANCELLED    
		  ,SUM(PD.RFNET) AS BILL_AMOUNT    
		  ,SUM(ROUND((PM.DISCOUNT_AMOUNT/PM.SUBTOTAL)*((PD.RATE*PD.QUANTITY)-PD.DISCOUNT_AMOUNT),2)) AS DISCOUNTAMOUNT    
		  ,FREIGHT_TAXABLE_VALUE AS FREIGHT
		  ,PM.OTHER_CHARGES_TAXABLE_VALUE AS OTHERCHARGES
		  ,PM.INSURANCE_TAXABLE_VALUE AS INSURANCE
		  ,SUM((PM.ROUND_OFF/PM.SUBTOTAL)*(PD.RATE*PD.QUANTITY-PD.DISCOUNT_AMOUNT)) AS ROUNDOFF    
		  ,SUM(ROUND((((PD.NET_RATE*PD.INVOICE_QUANTITY)-(CASE WHEN PD.BILL_LEVEL_TAX_METHOD=2 
					THEN PD.ITEM_TAX_AMOUNT ELSE 0 END)))-(PD.NET_RATE*PD.INVOICE_QUANTITY*PM.DISCOUNT_PERCENTAGE/100) ,2)
		    			 ) AS WSRAMOUNT
			,SUM(PD.ITEM_TAX_AMOUNT) AS TAXAMOUNT
			,SUM(IGST_AMOUNT) AS IGST_AMOUNT
			,SUM(CGST_AMOUNT) AS CGST_AMOUNT
			,SUM(SGST_AMOUNT) AS SGST_AMOUNT
			,FREIGHT_GST_PERCENTAGE
			,OTHER_CHARGES_GST_PERCENTAGE
			,INSURANCE_GST_PERCENTAGE
			,FREIGHT_IGST_AMOUNT
			,FREIGHT_CGST_AMOUNT
			,FREIGHT_SGST_AMOUNT
			,OTHER_CHARGES_IGST_AMOUNT
			,OTHER_CHARGES_CGST_AMOUNT
			,OTHER_CHARGES_SGST_AMOUNT		 	
			,INSURANCE_IGST_AMOUNT
			,INSURANCE_CGST_AMOUNT
			,INSURANCE_SGST_AMOUNT		 			 					
			,LOCS.GST_STATE_CODE AS LOCS_GST_STATE_CODE
			,'' AS PARTY_GST_STATE_CODE		 			
			,LOCT.GST_STATE_CODE AS LOCT_GST_STATE_CODE		 					 					 			
			,'' AS IGST_XN_AC_CODE
			,'' AS LOCAL_GST_XN_AC_CODE
			,'' AS IGST_TAX_AC_CODE
			,'' AS CGST_TAX_AC_CODE
			,'' AS SGST_TAX_AC_CODE
			,SUM(PD.QUANTITY) AS QUANTITY    
			,'WSR' AS XN_TYPE
			,PM.MODE    
			,SUM(XN_VALUE_WITHOUT_GST) AS XN_VALUE_WITHOUT_GST
			,PM.FREIGHT-(PM.FREIGHT_TAXABLE_VALUE+(CASE WHEN PM.OH_TAX_METHOD=2 THEN PM.FREIGHT_IGST_AMOUNT+PM.FREIGHT_CGST_AMOUNT+PM.FREIGHT_SGST_AMOUNT ELSE 0 END)) AS FREIGHT_RO
			,PM.OTHER_CHARGES-(PM.OTHER_CHARGES_TAXABLE_VALUE+(CASE WHEN PM.OH_TAX_METHOD=2 THEN PM.OTHER_CHARGES_IGST_AMOUNT+PM.OTHER_CHARGES_CGST_AMOUNT+PM.OTHER_CHARGES_SGST_AMOUNT ELSE 0 END)) AS OTHER_CHARGES_RO       
			,PM.INSURANCE-(PM.INSURANCE_TAXABLE_VALUE+(CASE WHEN PM.OH_TAX_METHOD=2 THEN PM.INSURANCE_IGST_AMOUNT+PM.INSURANCE_CGST_AMOUNT+PM.INSURANCE_SGST_AMOUNT ELSE 0 END)) AS INSURANCE_RO       
			,REF_INV_ID   
			,ROUND_OFF,MANUAL_ROUNDOFF
			     
	   INTO #V_PROCESS    
	   FROM CNM01106 PM     
	   JOIN CND01106 PD ON PM.CN_ID=PD.CN_ID    
	   JOIN #WSRTABLE PT ON PT.MEMO_ID = PM.CN_ID AND PT.MODE='WSR'    
	   JOIN FORM FM ON PD.ITEM_FORM_ID = FM.FORM_ID    
	   LEFT OUTER JOIN WSRCONFIGDET PAC ON FM.FORM_ID=PAC.FORMID     
	   JOIN LM01106 LMP ON LMP.AC_CODE=PM.AC_CODE
	   JOIN LOCATION LOCS ON LOCS.DEPT_ID=pm.location_Code 
	   LEFT OUTER JOIN LOCATION LOCT ON LOCT.DEPT_ID=PM.PARTY_DEPT_ID
	   
	   WHERE PM.TOTAL_AMOUNT<>0       
			GROUP BY PM.CN_ID    
			,PM.CN_NO    
			,PM.CN_DT    
			,PM.CREDIT_DAYS    
			,PAC.WSRAC    
			,PAC.TAXAC    
			,FM.POST_TAX_SEPARATELY    
			,PM.AC_CODE    
			,PM.TOTAL_AMOUNT    
			,PD.INV_NO    
			,PM.CANCELLED    
			,INV_DT
			,FREIGHT_TAXABLE_VALUE
			,PM.OTHER_CHARGES_TAXABLE_VALUE
			,PM.INSURANCE_TAXABLE_VALUE           
			,FREIGHT_GST_PERCENTAGE
			,OTHER_CHARGES_GST_PERCENTAGE
			,INSURANCE_GST_PERCENTAGE
			,FREIGHT_IGST_AMOUNT
			,FREIGHT_CGST_AMOUNT
			,FREIGHT_SGST_AMOUNT
			,OTHER_CHARGES_IGST_AMOUNT
			,OTHER_CHARGES_CGST_AMOUNT
			,OTHER_CHARGES_SGST_AMOUNT		 	
			,INSURANCE_IGST_AMOUNT
			,INSURANCE_CGST_AMOUNT
			,INSURANCE_SGST_AMOUNT		 			 					
			,LOCS.GST_STATE_CODE
			,LOCT.GST_STATE_CODE
			,PM.MODE
			,PM.FREIGHT
			,PM.OTHER_CHARGES
			,PM.INSURANCE
			,OH_TAX_METHOD
			,REF_INV_ID
			,ROUND_OFF,MANUAL_ROUNDOFF
			
	  CREATE INDEX IX_V_PROCESS_RM_ID ON #V_PROCESS(CN_ID,XN_TYPE)    
	  
	  
	  --SELECT 'CHECK #V_PROCESS',* FROM #V_PROCESS --  WHERE CN_ID='0101118000000100000006'
	  
	  SELECT @CCNID='',@CXNTYPE='',@CAC_CODE='',@NCTR=1,@COLDCNID=''    
	  
	  SET @CSTEP = 280    
	  WHILE EXISTS(SELECT TOP 1 'U' FROM #V_PROCESS ORDER BY CN_ID)    
	  BEGIN    
	  	   SET @CSTEP = 290    
		   SELECT TOP 1 @CCNID=CN_ID,@CCNNO=CN_NO,@CXNTYPE=XN_TYPE,@CAC_CODE=AC_CODE,@DLASTINVDT=CN_DT,
		   				@CSLOCGSTSTATECODE=LOCS_GST_STATE_CODE,@CTLOCGSTSTATECODE=LOCT_GST_STATE_CODE,
						@CPARTYGSTSTATECODE=PARTY_GST_STATE_CODE,@NMODE=MODE,@CCNNO=CN_NO,
						@NROUNDOFF=ROUND_OFF,@BMANUALROFF=ISNULL(MANUAL_ROUNDOFF,0) FROM #V_PROCESS
		   
		   
		   					
		   SELECT @BGSTBILL=0,@COLDCNID=@CCNID
		   

		  IF @BGSTBILL=0
				SELECT TOP 1 @CSETOFFACCODE=WSRAC FROM #V_PROCESS WHERE CN_ID=@CCNID
		  ELSE
				SELECT TOP 1 @CSETOFFACCODE=(CASE WHEN (@NMODE=1 AND @CSLOCGSTSTATECODE<>@CPARTYGSTSTATECODE) OR
				(@NMODE=2 AND @CSLOCGSTSTATECODE<>@CTLOCGSTSTATECODE) THEN IGST_XN_AC_CODE ELSE LOCAL_GST_XN_AC_CODE END)
				FROM #V_PROCESS WHERE CN_ID=@CCNID  		

		   SET @CSTEP = 300    
		   --CREDITNOTE ACCOUNT SHOULD BE DEBITED WITH THE RESPECTIVE SUBTOTAL    
		   IF @BGSTBILL=0 
			   INSERT @VCHC ( XN_ID,XN_NO,CRDAYS,AC_CODE,AMOUNT )     
			   SELECT CN_ID,CN_NO,CREDIT_DAYS,WSRAC,SUM(WSRAMOUNT) AS AMOUNT    
			   FROM #V_PROCESS    
			   WHERE CN_ID=@CCNID AND WSRAMOUNT<>0
			   GROUP BY CN_ID,CN_NO,CREDIT_DAYS,WSRAC
		   ELSE
			   INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT ) 
				SELECT CN_ID,IGST_XN_AC_CODE,SUM(WSRAMOUNT) AS AMOUNT
				FROM #V_PROCESS
				WHERE CN_ID=@CCNID AND ((@NMODE=1 AND @CSLOCGSTSTATECODE<>@CPARTYGSTSTATECODE) OR
										  (@NMODE=2 AND @CSLOCGSTSTATECODE<>@CTLOCGSTSTATECODE)) 
				GROUP BY CN_ID,IGST_XN_AC_CODE 									  
				
				UNION ALL
				SELECT CN_ID,LOCAL_GST_XN_AC_CODE,SUM(WSRAMOUNT) AS AMOUNT
				FROM #V_PROCESS
				WHERE CN_ID=@CCNID AND ((@NMODE=1 AND @CSLOCGSTSTATECODE=@CPARTYGSTSTATECODE) OR
										 (@NMODE=2 AND @CSLOCGSTSTATECODE=@CTLOCGSTSTATECODE))
				GROUP BY CN_ID,LOCAL_GST_XN_AC_CODE
										  		
		   SET @CSTEP = 310    

		   --FREIGHT AMOUNT SHOULD BE DEBITED    
		   INSERT @VCHC ( XN_ID,XN_NO,CRDAYS,AC_CODE,AMOUNT )     
		   SELECT TOP 1 CN_ID,CN_NO,CREDIT_DAYS,(CASE WHEN @BPOSTFREIGHTSEPARATELY=1 THEN @CFREIGHTACCODE ELSE WSRAC END),FREIGHT    
		   FROM #V_PROCESS    
		   WHERE CN_ID=@CCNID AND FREIGHT<>0 AND (@BPOSTFREIGHTSEPARATELY=1 OR @BGSTBILL=0)   
		       
		   SET @CSTEP = 335    
		   --OTHER CHARGES AMOUNT SHOULD BE DEBITED    
		   INSERT @VCHC ( XN_ID,XN_NO,CRDAYS,AC_CODE,AMOUNT )     
		   SELECT TOP 1 CN_ID,CN_NO,CREDIT_DAYS,(CASE WHEN @BPOSTOTHERCHARGESSEPARATELY=1 THEN @COTHERCHARGESACCODE ELSE WSRAC END),OTHERCHARGES    
		   FROM #V_PROCESS    
		   WHERE CN_ID=@CCNID AND OTHERCHARGES<>0 AND (@BPOSTOTHERCHARGESSEPARATELY=1 OR @BGSTBILL=0)       
		       
		   SET @CSTEP = 338    
		   --INSURANCE AMOUNT SHOULD BE DEBITED    
		   INSERT @VCHC ( XN_ID,XN_NO,CRDAYS,AC_CODE,AMOUNT )     
		   SELECT TOP 1 CN_ID,CN_NO,CREDIT_DAYS,(CASE WHEN @BPOSTINSURANCESEPARATELY=1  THEN @CINSURANCEACCODE     
			   ELSE WSRAC END),INSURANCE    
		   FROM #V_PROCESS    
		   WHERE CN_ID=@CCNID AND INSURANCE<>0 AND (@BPOSTINSURANCESEPARATELY=1 OR @BGSTBILL=0)           
		       
		   SET @CSTEP = 341    
			
		   SET @NROLIMIT=(CASE WHEN @BMANUALROFF=1 AND ABS(@NROUNDOFF)>.99 THEN ABS(@NROUNDOFF) ELSE 0.99 END)
		   	
		   --ROUNDOFF AMOUNT SHOULD BE DEBITED    
		   INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT )     
		   SELECT A.CN_ID,A.CN_NO,(CASE WHEN @BPOSTROUNDOFFSEPARATELY=1 OR @BGSTBILL=1 THEN @CROUNDOFFACCODE ELSE WSRAC END),
			(B.TOTAL_AMOUNT-(SUM(XN_VALUE_WITHOUT_GST+ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+
							 ISNULL(TAXAMOUNT,0))+
				B.FREIGHT+(CASE WHEN B.OH_TAX_METHOD=1 THEN ISNULL(B.FREIGHT_IGST_AMOUNT,0)+ISNULL(B.FREIGHT_CGST_AMOUNT,0)+ISNULL(B.FREIGHT_SGST_AMOUNT,0) ELSE 0 END)+
				B.OTHER_CHARGES+(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(B.OTHER_CHARGES_IGST_AMOUNT,0)+
				ISNULL(B.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_SGST_AMOUNT,0) ELSE 0 END)+
				B.INSURANCE+(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(B.INSURANCE_IGST_AMOUNT,0)+
				ISNULL(B.INSURANCE_CGST_AMOUNT,0)+ISNULL(B.INSURANCE_SGST_AMOUNT,0) ELSE 0 END)			)
				) AS AMOUNT
			FROM #V_PROCESS A
			JOIN CNM01106 B ON A.CN_ID=B.CN_ID
			WHERE A.CN_ID=@CCNID
			GROUP BY A.CN_ID,A.CN_NO,B.FREIGHT,B.OTHER_CHARGES,B.OH_TAX_METHOD,
			B.FREIGHT_IGST_AMOUNT,B.FREIGHT_CGST_AMOUNT,B.FREIGHT_SGST_AMOUNT,
			B.OTHER_CHARGES_IGST_AMOUNT,B.OTHER_CHARGES_CGST_AMOUNT,B.OTHER_CHARGES_SGST_AMOUNT,B.TOTAL_AMOUNT,
			B.INSURANCE,B.INSURANCE_IGST_AMOUNT,B.INSURANCE_CGST_AMOUNT,B.INSURANCE_SGST_AMOUNT,WSRAC
			HAVING 
			ABS(B.TOTAL_AMOUNT-(SUM(XN_VALUE_WITHOUT_GST+ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+
							 ISNULL(TAXAMOUNT,0))+
				B.FREIGHT+(CASE WHEN B.OH_TAX_METHOD=1 THEN ISNULL(B.FREIGHT_IGST_AMOUNT,0)+ISNULL(B.FREIGHT_CGST_AMOUNT,0)+ISNULL(B.FREIGHT_SGST_AMOUNT,0) ELSE 0 END)+
				B.OTHER_CHARGES+(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(B.OTHER_CHARGES_IGST_AMOUNT,0)+
				ISNULL(B.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_SGST_AMOUNT,0) ELSE 0 END)+
				B.INSURANCE+(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(B.INSURANCE_IGST_AMOUNT,0)+
				ISNULL(B.INSURANCE_CGST_AMOUNT,0)+ISNULL(B.INSURANCE_SGST_AMOUNT,0) ELSE 0 END)			)
				)<=@NROLIMIT
			UNION ALL
			SELECT TOP 1 CN_ID,CN_NO,(CASE WHEN @BPOSTROUNDOFFSEPARATELY=1 OR @BGSTBILL=1 THEN @CROUNDOFFACCODE ELSE WSRAC END),
			FREIGHT_RO+OTHER_CHARGES_RO+INSURANCE_RO FROM #V_PROCESS
			WHERE  CN_ID=@CCNID AND (FREIGHT_RO+OTHER_CHARGES_RO+INSURANCE_RO)<>0


		  --TAX AMOUNT SHOULD BE CREDITED WITH THE RESPECTIVE TAX_AMOUNT    
		  IF @BGSTBILL=0
			  INSERT @VCHC ( XN_ID,XN_NO,CRDAYS,AC_CODE,AMOUNT )   
			  SELECT CN_ID,CN_NO,CREDIT_DAYS,(CASE WHEN POST_TAX_SEPARATELY=1 THEN TAXAC ELSE WSRAC END),TAXAMOUNT  
			  FROM #V_PROCESS  
			  WHERE CN_ID=@CCNID AND TAXAMOUNT<>0
		  ELSE
			  INSERT @VCHC ( XN_ID,XN_NO,CRDAYS,AC_CODE,AMOUNT )   
			  SELECT CN_ID,CN_NO,CREDIT_DAYS,IGST_TAX_AC_CODE,IGST_AMOUNT  
			  FROM #V_PROCESS  
			  WHERE CN_ID=@CCNID AND IGST_AMOUNT<>0
			  UNION ALL
			  SELECT CN_ID,CN_NO,CREDIT_DAYS,CGST_TAX_AC_CODE,CGST_AMOUNT  
			  FROM #V_PROCESS  
			  WHERE CN_ID=@CCNID AND CGST_AMOUNT<>0
			  UNION ALL
			  SELECT CN_ID,CN_NO,CREDIT_DAYS,SGST_TAX_AC_CODE,SGST_AMOUNT  
			  FROM #V_PROCESS  
			  WHERE CN_ID=@CCNID AND SGST_AMOUNT<>0
	  
		  SET @CSTEP = 360
		  INSERT @VCHC ( XN_ID,XN_NO,CRDAYS,AC_CODE,AMOUNT )   
		  SELECT CN_ID,CN_NO,CREDIT_DAYS,(CASE WHEN @BPOSTDISCOUNTSEPARATELY=1 THEN @CSETOFFACCODE ELSE WSRAC END),DISCOUNTAMOUNT  
		  FROM #V_PROCESS  
		  WHERE CN_ID=@CCNID AND DISCOUNTAMOUNT<>0  
	  			       
		   SET @CSTEP = 365    
		   --SUPPLIER SHOULD BE CREDITED WITH TOTAL AMOUNT    
		   INSERT @VCHC ( XN_ID,XN_NO,CRDAYS,AC_CODE,AMOUNT,REF_BILL_NO )     
		   SELECT CN_ID,CN_NO,CREDIT_DAYS,AC_CODE,SUM(BILL_AMOUNT)*-1 AS AMOUNT,REF_INV_ID    
		   FROM #V_PROCESS    
		   WHERE CN_ID=@CCNID
		   GROUP BY REF_INV_ID,CN_ID,CN_NO,CREDIT_DAYS,AC_CODE
		   	
		   SET @CSTEP = 370    
		   SET @CVMID = ''    
		   SELECT @CVMID = A.VM_ID     
			FROM POSTACT_VOUCHER_LINK A    
			 JOIN VM01106 B ON A.VM_ID=B.VM_ID    
			  WHERE B.CANCELLED=0 AND A.MEMO_ID = @CCNID AND A.XN_TYPE=@CXNTYPE    
		       
		   SET @CSTEP = 380    
		   IF ISNULL(@CVMID,'') = ''    
		   BEGIN    
			   SET @CVMID = 'LATER-'+RTRIM(LTRIM(CONVERT(VARCHAR,@NCTR)))    
			SET @NCTR = @NCTR+1    
		   END    
		       
		   SET @CSTEP = 390    
		   INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )    
		   SELECT @CVMID,@CCNID,@CXNTYPE,LAST_UPDATE FROM CNM01106 WHERE CN_ID = @CCNID    
		       
		   --GET THE CONCATENATED BILL NOS FOR THE DEBITNOTE    
		   SET @CWSLBILLS=NULL    
		   SELECT @CWSLBILLS=ISNULL(@CWSLBILLS+',','')+BILL_NO    
		   FROM #V_PROCESS    
		   WHERE CN_ID=@CCNID    
	             
		   SET @CSTEP = 450        
		   SET @CVOUCHERNO = ''    
 		   SELECT TOP 1 @CVOUCHERNO = VOUCHER_NO FROM VM01106 WHERE VM_ID = @CVMID    
		   
		   IF ISNULL(@CVOUCHERNO,'') = ''    
				SET @CVOUCHERNO = @CVMID    
			             
			       

			SET @CSTEP = 470    
			INSERT @VMC ( VM_ID,VOUCHER_NO,VOUCHER_DT, VOUCHER_CODE, DEPT_ID,     
					BILL_TYPE, BILL_NO, BILL_ID, BILL_DT, BILL_AC_CODE,     
					PARTY_NAME, QUANTITY, NET_AMOUNT, RM_LIST, CANCELLED,DRTOTAL,CRTOTAL    
					,VOUCHER_TYPE,DEPT_NAME,BILL_STATUS )    
			   SELECT @CVMID,@CVOUCHERNO,A.CN_DT,@CVOUCHERCODE,A.DEPT_ID,'WSR',A.CN_NO,A.CN_ID,A.CN_DT,A.AC_CODE    
				  ,B.AC_NAME,SUM(A.QUANTITY),A.TOTAL_AMOUNT,ISNULL(@CWSLBILLS,''),A.CANCELLED,@NDRTOTAL ,@NCRTOTAL    
				  ,'CREDIT NOTE',C.DEPT_NAME,'NEW'    
			   FROM #V_PROCESS A    
			   JOIN LM01106 B ON A.AC_CODE=B.AC_CODE    
			   JOIN LOCATION C ON A.DEPT_ID=C.DEPT_ID    
			   WHERE A.CN_ID=@CCNID      
			   GROUP BY A.CN_DT,A.DEPT_ID,A.CN_NO,A.CN_ID,A.CN_DT,A.AC_CODE    
				  ,B.AC_NAME,A.TOTAL_AMOUNT,C.DEPT_NAME,A.CANCELLED    


			
		   SET @NVDID=1
		   		 				
		   SET @CSTEP = 410    
		   INSERT @VDC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE,     
					    CREDIT_DAYS, CR_DISCOUNT_PERCENTAGE,AC_NAME,REF_BILL_NO)    
		   SELECT @CVMID    
			, 'LATER-'+CONVERT(VARCHAR,ROW_NUMBER() OVER(ORDER BY A.AC_CODE)+@NVDID) AS VD_ID    
			, A.AC_CODE    
			,'C/N# ' + @CCNNO
			+(CASE WHEN ISNULL(@CWSLBILLS,'')='' THEN '' ELSE ' AGAINST WSL# '+@CWSLBILLS END) AS NARRATION    
			,(CASE WHEN SUM(AMOUNT)>0 THEN SUM(AMOUNT) ELSE 0 END) AS DEBIT_AMOUNT    
			,(CASE WHEN SUM(AMOUNT)<0 THEN ABS(SUM(AMOUNT)) ELSE 0 END) AS CREDIT_AMOUNT    
			,(CASE WHEN SUM(AMOUNT) > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE    
			,0 AS CRDAYS    
			,@NTMPCRDISCOUNTPERCENTAGE    
			,B.AC_NAME,ISNULL(REF_BILL_NO,'')    
		   FROM @VCHC A    
		   JOIN LMV01106 B ON A.AC_CODE = B.AC_CODE    
		   WHERE A.XN_ID = @CCNID AND AMOUNT<>0   
		   GROUP BY A.AC_CODE,B.AC_NAME,ISNULL(REF_BILL_NO,'')    
		   ORDER BY X_TYPE,ABS(SUM(AMOUNT)) DESC    
		       
		       
		   SET @CVDID=''    
		   SET @CSTEP =415     

		   SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC
		   WHERE VM_ID = @CVMID

			--SETTING OFF THE DIFFERENCE AMOUNT TO PURCHASE ACCOUNT
			IF ABS(@NDRTOTAL-@NCRTOTAL)<=1 AND (@NDRTOTAL-@NCRTOTAL)<>0
			BEGIN
				IF EXISTS (SELECT TOP 1 AC_CODE FROM @VDC WHERE VM_ID=@CVMID AND AC_CODE=@CROUNDOFFACCODE)
				BEGIN	
					SELECT TOP 1 @CVDID=VD_ID FROM @VDC WHERE VM_ID=@CVMID AND AC_CODE=@CROUNDOFFACCODE
							
					UPDATE @VDC SET DEBIT_AMOUNT=DEBIT_AMOUNT-(@NDRTOTAL-@NCRTOTAL)
					WHERE VM_ID=@CVMID AND VD_ID=@CVDID AND DEBIT_AMOUNT<>0

					UPDATE @VDC SET CREDIT_AMOUNT=CREDIT_AMOUNT+(@NDRTOTAL-@NCRTOTAL)
					WHERE VM_ID=@CVMID AND VD_ID=@CVDID AND CREDIT_AMOUNT<>0
					
					IF EXISTS (SELECT * FROM @VDC WHERE VM_ID=@CVMID AND VD_ID=@CVDID AND CREDIT_AMOUNT<0 OR DEBIT_AMOUNT<0)
					BEGIN
						UPDATE @VDC SET CREDIT_AMOUNT=ABS(DEBIT_AMOUNT),DEBIT_AMOUNT=0 WHERE VM_ID=@CVMID AND VD_ID=@CVDID AND DEBIT_AMOUNT<0
						UPDATE @VDC SET DEBIT_AMOUNT=ABS(CREDIT_AMOUNT),CREDIT_AMOUNT=0 WHERE VM_ID=@CVMID AND VD_ID=@CVDID AND CREDIT_AMOUNT<0
					END
				END
				ELSE
					INSERT @VDC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE, 
								  CREDIT_DAYS, CR_DISCOUNT_PERCENTAGE,AC_NAME,REF_BILL_NO)
					SELECT @CVMID
						, 'LATER-'+@CROUNDOFFACCODE AS VD_ID
						, @CROUNDOFFACCODE AS AC_CODE
						,'ROUND OFF' AS NARRATION
						,(CASE WHEN (@NDRTOTAL-@NCRTOTAL)<0 THEN ABS(@NDRTOTAL-@NCRTOTAL) ELSE 0 END) AS DEBIT_AMOUNT
						,(CASE WHEN (@NDRTOTAL-@NCRTOTAL)>0 THEN (@NDRTOTAL-@NCRTOTAL) ELSE 0 END) AS CREDIT_AMOUNT
						,(CASE WHEN (@NDRTOTAL-@NCRTOTAL) > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE
						,0 AS CRDAYS
						,0
						,AC_NAME,'' AS REF_BILL_NO
					FROM LM01106 WHERE AC_CODE=	@CROUNDOFFACCODE		
			END

		   SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC
		   WHERE VM_ID = @CVMID
		   	
		   UPDATE @VMC SET DRTOTAL=@NDRTOTAL,CRTOTAL=@NCRTOTAL	
				               
		   DELETE @VCHC    
		   DELETE FROM #V_PROCESS WHERE CN_ID = @CCNID

	  END           
  
	  SET @CSTEP =420     
--	  SELECT 'BEFORE UPDATING NEW VD ID',* FROM @VDC
	   
	  UPDATE A SET NEW_VD_ID=(SELECT TOP 1 C.VD_ID FROM @VDC C
					  JOIN @VMC D ON D.VM_ID=C.VM_ID 
					  WHERE C.AC_CODE=D.BILL_AC_CODE AND C.VM_ID=A.VM_ID
					  ) FROM @VDC A
	  JOIN @VMC D ON D.VM_ID=A.VM_ID AND A.AC_CODE=D.BILL_AC_CODE
	  
--	  SELECT 'AFTER UPDATING NEW VD ID',* FROM @VDC


	  SET @CSTEP = 425 
	  INSERT @TBILL_BY_BILL_REF    
	   (VM_ID,VD_ID,REF_NO,AMOUNT,LAST_UPDATE,X_TYPE,CR_DAYS)    
	   SELECT A.VM_ID,NEW_VD_ID,(CASE WHEN @POST_BILL_BY_BILL_REFTYPE=1 AND ISNULL(D.REF_NO,'')<>'' AND ISNULL(C.BILL_BY_BILL,0)=1
	   THEN ISNULL(D.REF_NO,'')  ELSE  DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,LTRIM(RTRIM(B.BILL_NO)),B.BILL_DT,'CR',A.VM_ID) END) AS REF_NO,
	   SUM(A.CREDIT_AMOUNT) AS AMOUNT,GETDATE(),'CR',A.CREDIT_DAYS    
	   FROM @VDC A
	   JOIN @VMC B ON A.VM_ID=B.VM_ID
	   JOIN LMP01106 C ON C.AC_CODE=A.AC_CODE
	   LEFT OUTER JOIN 
	   (SELECT A.REF_NO,E.REF_BILL_NO,B.AC_CODE,E.VM_ID FROM BILL_BY_BILL_REF A 
	    JOIN VD01106 B ON A.VD_ID=B.VD_ID
	    JOIN VM01106 C ON C.VM_ID=B.VM_ID
	    JOIN POSTACT_VOUCHER_LINK D ON D.VM_ID=C.VM_ID
	    JOIN @VDC E ON E.REF_BILL_NO=D.MEMO_ID
	    WHERE C.CANCELLED=0 AND D.XN_TYPE='WSL'
	   ) D ON D.REF_BILL_NO=A.REF_BILL_NO AND D.AC_CODE=A.AC_CODE AND D.VM_ID=A.VM_ID
	   WHERE C.BILL_BY_BILL=1
	   GROUP BY A.VM_ID,NEW_VD_ID,(CASE WHEN @POST_BILL_BY_BILL_REFTYPE=1 AND ISNULL(D.REF_NO,'')<>'' AND ISNULL(C.BILL_BY_BILL,0)=1
	   THEN ISNULL(D.REF_NO,'')  ELSE  DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,LTRIM(RTRIM(B.BILL_NO)),B.BILL_DT,'CR',A.VM_ID) END),
	   A.CREDIT_DAYS
	   
	  SET @CSTEP = 430
	  UPDATE A SET DEBIT_AMOUNT=B.DEBIT_AMOUNT,CREDIT_AMOUNT=B.CREDIT_AMOUNT FROM @VDC A
	  JOIN (SELECT A.VM_ID,A.AC_CODE,SUM(DEBIT_AMOUNT) AS DEBIT_AMOUNT,SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT
		   FROM @VDC A
		   JOIN @VMC B ON A.AC_CODE=B.BILL_AC_CODE AND A.VM_ID=B.VM_ID GROUP BY A.VM_ID,AC_CODE) B 
		   ON A.VM_ID=B.VM_ID AND A.AC_CODE=B.AC_CODE
		 
	  SET @CSTEP = 435
	  DELETE FROM @VDC WHERE ISNULL(NEW_VD_ID,'')<>VD_ID AND ISNULL(NEW_VD_ID,'')<>''	    					  
	            
		SET @CSTEP = 480    
		SELECT * FROM @VMC ORDER BY VM_ID    
		SELECT * FROM @VDC ORDER BY VM_ID    
		SELECT * FROM @ERRORS    
		SELECT * FROM @VLINK ORDER BY VM_ID    
	    SELECT *,REF_NO AS BILL_NO FROM @TBILL_BY_BILL_REF ORDER BY VD_ID    
        
 END TRY    
 
 BEGIN CATCH    
   SELECT 'STEP:- '+@CSTEP+' '+ERROR_MESSAGE()AS  ERRMSG    
 END CATCH    
             
END   
--END OF PROCEDURE - POSTACT_WSR
