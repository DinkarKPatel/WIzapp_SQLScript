CREATE PROCEDURE SP_REUPDATE_DNRATES   --(LocId 3 digit change  by Sanjay:01-11-2024)
--WITH ENCRYPTION  
AS  
BEGIN  
    
 DECLARE @CCURDEPTID VARCHAR(5),@CHODEPTID VARCHAR(5),@CCMD NVARCHAR(MAX),@NSTEP INT,@CERRORMSG VARCHAR(MAX),  
 @DFROMDT DATETIME,@DTODT DATETIME,@NRATE NUMERIC(10,2),@NDISC NUMERIC(7,3),  
 @CRMID VARCHAR(40),@DRMDT DATETIME,@CPRODUCTCODE VARCHAR(50),@CROWID VARCHAR(40),@CFORMID CHAR(7),  
 @NGROSSPP NUMERIC(10,2),@NDISCPCT NUMERIC(6,2),@NPURDISCPCT NUMERIC(6,2),@NPURDISCAMT NUMERIC(10,2),  
 @NTAXPCT NUMERIC(6,2),@NNETPP NUMERIC(10,2),@CPIDPC VARCHAR(50)  
  
   
  
 DECLARE @TRETMSG TABLE  (ERRMSG VARCHAR(MAX))       
 BEGIN TRY  
    
  SET @CERRORMSG=''  
    
  BEGIN TRANSACTION  
    
  SET @NSTEP = 10  
    
  SELECT TOP 1 @CCURDEPTID=VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'  
  SELECT TOP 1 @CHODEPTID=VALUE FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'   
    
  IF @CCURDEPTID=@CHODEPTID  
   GOTO LBLLAST  
       
  IF CURSOR_STATUS('GLOBAL','RMMCUR') IN (0,1)  
  BEGIN  
   CLOSE RMMCUR  
   DEALLOCATE RMMCUR  
  END  
      
  DECLARE RMMCUR CURSOR FOR SELECT A.RM_ID,RM_DT,A.PRODUCT_CODE,A.ROW_ID FROM RMD01106 A  
  JOIN RMM01106 B ON A.RM_ID=B.RM_ID WHERE MODE=2  
  OPEN RMMCUR  
  FETCH NEXT FROM RMMCUR INTO @CRMID,@DRMDT,@CPRODUCTCODE,@CROWID  
  WHILE @@FETCH_STATUS=0  
  BEGIN  
   SET @NSTEP = 15  
   SET @CPIDPC=''  
     
           
    SELECT TOP 1 @CPIDPC=A.PRODUCT_CODE,  
    @NGROSSPP=ISNULL(X.GROSS_PURCHASE_PRICE,(CASE WHEN LOC.XFER_ACT=3 THEN A.PURCHASE_PRICE WHEN LOC.XFER_ACT=1       
    THEN  A.MRP ELSE A.WS_PRICE END)),     
    @NDISCPCT=(CASE WHEN ISNULL(X.DISCOUNT_PERCENTAGE,0)=0 AND  ISNULL(X.PUR_DISCOUNT_PERCENTAGE,0)=0  
        THEN LOC.LOC_DISCOUNT_PERCENTAGE ELSE ISNULL(X.DISCOUNT_PERCENTAGE,0) END),  
    @NPURDISCPCT=ISNULL(X.PUR_DISCOUNT_PERCENTAGE,0),  
    @NPURDISCAMT=ISNULL(X.PUR_DISCOUNT_AMOUNT,0) ,  
    @CFORMID=ISNULL(X.FORM_ID,A.FORM_ID),  
    @NTAXPCT=ISNULL(X.TAX_PERCENTAGE,B.TAX_PERCENTAGE)  
    FROM SKU A  
       
    LEFT OUTER JOIN       
    (      
    SELECT TOP 1 B.PRODUCT_CODE--,A.TAX_TYPE      
    ,B.GROSS_PURCHASE_PRICE,B.PURCHASE_PRICE,B.MRP,B.WHOLESALE_PRICE,       
    B.DISCOUNT_PERCENTAGE AS [PUR_DISCOUNT_PERCENTAGE],B.DISCOUNT_AMOUNT AS [PUR_DISCOUNT_AMOUNT],      
    A.DISCOUNT_PERCENTAGE AS [DISCOUNT_PERCENTAGE],      
    A.DISCOUNT_AMOUNT,A.AC_CODE ,FRM.FORM_ID,FRM.TAX_PERCENTAGE  
    FROM PIM01106 A       
    JOIN PID01106 B (NOLOCK) ON B.MRR_ID=A.MRR_ID      
    JOIN FORM FRM (NOLOCK) ON FRM.FORM_ID=B.FORM_ID      
    WHERE B.PRODUCT_CODE = @CPRODUCTCODE  AND a.location_Code=@CCURDEPTID    
    AND A.RECEIPT_DT<=@DRMDT AND A.CANCELLED=0  
    ORDER BY A.INV_DT DESC      
    )X ON X.PRODUCT_CODE=A.PRODUCT_CODE       
      
    JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=@CCURDEPTID  
    JOIN FORM B ON A.FORM_ID=B.FORM_ID  
   WHERE A.PRODUCT_CODE=@CPRODUCTCODE  
    
   SET @NSTEP = 17  
     
   IF ISNULL(@CPIDPC,'')<>''  
   BEGIN  
    PRINT ISNULL(STR(@NNETPP,10,2),'NULL')+'-'+ISNULL(STR(@NDISCPCT,6,2),'NULL')  
    UPDATE RMD01106 SET GROSS_PURCHASE_PRICE=@NGROSSPP,PUR_DISCOUNT_PERCENTAGE=@NPURDISCPCT,  
    PUR_DISCOUNT_AMOUNT=@NPURDISCAMT,DISCOUNT_PERCENTAGE=@NDISCPCT,  
    PUR_PURCHASE_PRICE=@NGROSSPP-(@NGROSSPP*@NPURDISCPCT/100),  
    ITEM_FORM_ID=@CFORMID  
    WHERE ROW_ID=@CROWID  
  
    UPDATE RMD01106 SET PURCHASE_PRICE=PUR_PURCHASE_PRICE-(PUR_PURCHASE_PRICE*DISCOUNT_PERCENTAGE/100)  
    WHERE ROW_ID=@CROWID  
   END   
   FETCH NEXT FROM RMMCUR INTO @CRMID,@DRMDT,@CPRODUCTCODE,@CROWID  
  END  
    
  CLOSE RMMCUR  
  DEALLOCATE RMMCUR  
    
    
  SET @NSTEP=27  
  UPDATE RMD01106 SET DISCOUNT_AMOUNT=QUANTITY*PURCHASE_PRICE*DISCOUNT_PERCENTAGE/100  
    
  UPDATE RMD01106 SET AMOUNT=PURCHASE_PRICE*INVOICE_QUANTITY,DN_DISCOUNT_PERCENTAGE=0,  
  DN_DISCOUNT_AMOUNT=0  
  
  UPDATE RMM01106 SET SUBTOTAL=B.SUBTOTAL FROM   
        (SELECT  RM_ID,SUM(RMD.QUANTITY*RMD.PURCHASE_PRICE) AS SUBTOTAL  
      FROM RMD01106 RMD GROUP BY RMD.RM_ID)B  
  WHERE B.RM_ID=RMM01106.RM_ID  
    
  SET @NSTEP=30  
  --UPDATING ITEM_TAX_AMOUNT IN DETAIL TABLE   
  --TAX AMOUNT CAN BE INCLUSIVE OR EXCLUSIVE DEPENDING ON TAX_TYPE IN RMM01106  
  UPDATE RMD01106 SET INV_RATE=PURCHASE_PRICE,RATE=PURCHASE_PRICE  
  FROM RMM01106 B WHERE B.RM_ID=RMD01106.RM_ID AND MODE=2  
  
  UPDATE RMD01106 SET ITEM_TAX_PERCENTAGE=B.TAX_PERCENTAGE FROM   
  FORM B WHERE B.FORM_ID=RMD01106.ITEM_FORM_ID  
  
  UPDATE RMD01106 SET ITEM_TAX_AMOUNT = (((PURCHASE_PRICE*INVOICE_QUANTITY)-(PURCHASE_PRICE*INVOICE_QUANTITY*  
  B.DISCOUNT_PERCENTAGE/100)+RMD01106.EXCISE_DUTY_AMOUNT))*RMD01106.ITEM_TAX_PERCENTAGE/  
  (100+(CASE WHEN BILL_LEVEL_TAX_METHOD=1 THEN 0 ELSE ISNULL(RMD01106.ITEM_TAX_PERCENTAGE,0) END))  
  FROM RMM01106 B WHERE PURCHASE_PRICE<>0 AND INVOICE_QUANTITY<>0    
    
  SET @NSTEP=40  
    
  SET @NSTEP=50  
  UPDATE RMM01106 SET DISCOUNT_AMOUNT=SUBTOTAL*DISCOUNT_PERCENTAGE/100  
    
  SET @NSTEP=55  
  UPDATE RMM01106 SET ROUND_OFF=ROUND((SUBTOTAL +ISNULL(B.TAX_AMOUNT,0) +  OTHER_CHARGES +   
   EXCISE_DUTY_AMOUNT+FREIGHT) - DISCOUNT_AMOUNT,0)-  
   (SUBTOTAL+ISNULL(B.TAX_AMOUNT,0)+OTHER_CHARGES+FREIGHT+EXCISE_DUTY_AMOUNT-DISCOUNT_AMOUNT)  
  FROM RMM01106 A LEFT OUTER JOIN  
  (SELECT RM_ID,SUM(ITEM_TAX_AMOUNT) AS TAX_AMOUNT FROM RMD01106 WHERE BILL_LEVEL_TAX_METHOD IN (0,1)  
   GROUP BY RM_ID) B ON B.RM_ID=A.RM_ID     
  SET @NSTEP=60  
  --UPDATING TOTAL_AMOUNT IN MASTER TABLE  
  UPDATE A SET TOTAL_AMOUNT=(SUBTOTAL +ISNULL(B.TAX_AMOUNT,0) +  OTHER_CHARGES +   
            EXCISE_DUTY_AMOUNT+FREIGHT  - DISCOUNT_AMOUNT+ROUND_OFF)   
    
  FROM RMM01106 A LEFT OUTER JOIN  
  (SELECT RM_ID,SUM(ITEM_TAX_AMOUNT) AS TAX_AMOUNT FROM RMD01106 WHERE BILL_LEVEL_TAX_METHOD IN (0,1)  
   GROUP BY RM_ID) B ON B.RM_ID=A.RM_ID  
  
    
  UPDATE RMM01106 SET LAST_UPDATE=GETDATE(),UPLOADED_TO_ACTIVSTREAM=0  
 END TRY  
   
 BEGIN CATCH  
    
  PRINT 'UNTRAPPED ERROR'    
  SELECT @CERRORMSG='PROCEDURE SP_REUPDATE_DNRATES : '+ISNULL(ERROR_PROCEDURE(),'NULL P')+'STEP :'+STR(ISNULL(@NSTEP,0))+ ' LINE NO. :'+  
  ISNULL(LTRIM(RTRIM(STR(ERROR_LINE()))),'NULL LINE')+'MSG :'+ISNULL(ERROR_MESSAGE(),'NULL MSG')  
    
  GOTO LBLLAST  
 END CATCH  
  
LBLLAST:  
 IF @@TRANCOUNT>0  
 BEGIN  
  IF ISNULL(@CERRORMSG,'')=''  
   COMMIT TRANSACTION  
  ELSE  
   ROLLBACK    
 END   
  
   
   INSERT @TRETMSG      
   SELECT @CERRORMSG      
                 
   SELECT * FROM @TRETMSG      
   
END  
--- 'END OF CREATING PROCEDURE SP_REUPDATE_DNRATES'  