CREATE PROCEDURE SP3s_SYNCH_UPLOADDATA_SLSNEW_OPT
(
    @nSpId VARCHAR(40),
	@cErrmsg VARCHAR(MAX) output

)
AS
BEGIN
		
		
	/*
		208_2014_01_13 : THIS PROCEDURE WILL MERGE DATA FROM TEMPORARY TABLE TO @nSpId TABLE.
						 TABLE NAMES AND ITS MERGING ORDER WILL BE FIXED AND WILL BE DEFINED HERE.	
						 
	*/


	
	
DECLARE @CSTEP VARCHAR(100),@DTSQL NVARCHAR(MAX),@NMERGE_ORDER NUMERIC(5),@CDtCode CHAR(5)
	   ,@CTABLENAME VARCHAR(200),@CTABLE_SUFFIX VARCHAR(50),@CKEYFIELD VARCHAR(200),@CDEL_ID VARCHAR(50),@CTMP_TABLENAME VARCHAR(200),@LINSERTONLY VARCHAR(1)
	   ,@CFILTERCONDITION VARCHAR(200),@CFILTERCONDITION2 VARCHAR(500),@LUPDATEONLY VARCHAR(1),@BALWAYSUPDATE VARCHAR(1),@FDEL CHAR(1)
	   ,@CERRMSGOUT VARCHAR(1000),@CTABLESSTR VARCHAR(MAX),@CMIRRORINGENABLED VARCHAR(5)
	   ,@CCURDEPTID VARCHAR(5),@CTEMPMASTERTABLE VARCHAR(200),@CTEMPDETAILTABLE VARCHAR(200)
	   ,@CTEMPPAYMODETABLE VARCHAR(200),@CTEMPTABLE VARCHAR(100),@CDONOTRESETPOSTEDINAC VARCHAR(1)
	   ,@BADDMODE BIT,@CCUTOFFDATE VARCHAR(20),@CWHERECLAUSE VARCHAR(2000),@CMEMONOLEN VARCHAR(5),@NMEMONOLEN INT
	   ,@DMINMEMODT DATETIME,@DMAXMEMODT DATETIME,@CFINYEAR VARCHAR(5),@CMEMOPREFIX VARCHAR(10)
	   ,@CMINMEMONO VARCHAR(20),@CMAXMEMONO VARCHAR(20),@CSOURCEDB VARCHAR(200),@CMERGEDB VARCHAR(200)
	   ,@BMSTINSERTONLY BIT,@BSERIESMISMATCHFOUND BIT,@CPREVMEMONO VARCHAR(20),@CINSSPID VARCHAR(50)
	   ,@NPREVMEMONO NUMERIC(12,0),@NLENVALUE INT,@CPREVMEMONOSEARCH VARCHAR(20),@CCMIDSEARCH VARCHAR(40)
	   ,@CRETPRODUCTCODE VARCHAR(50),@NVERSIONNO INT,@CJOINSTR VARCHAR(MAX),@CDONOTCHECKSERIES VARCHAR(2)
	   ,@NUPDATEMODE NUMERIC(2),@CPREVMEMOID VARCHAR(50),@CREQMEMOID VARCHAR(50),@BMANUALBILL BIT,@CVALIDATIONERRMSG VARCHAR(MAX)
	   ,@CTEMPDAILOGFILETABLE VARCHAR(200),@CFILTERCONDITION3 VARCHAR(500),@CENABLEONLINECNREDEMPTION VARCHAR(2)
	   ,@CMEMONO VARCHAR(40),@CFILTERCONDITIONCUS VARCHAR(1000),@DCM_DT DATETIME,@TOTAL_AMOUNT NUMERIC(10,2),@cPackSlipId VARCHAR(40)
	   ,@BTOTAL_AMOUNT NUMERIC(10,2),@CSHOWLIVESALE VARCHAR(10),@CSERVERDATE DATETIME,@SLS_SYNC_AFTER DATETIME,@nPrefixLen NUMERIC(2,0)
	   ,@cXnTypeLog varchar(20),@nMemoUpdated NUMERIC(4,0),@CMEMOID VARCHAR(40),
	   @CcUSTcODE char(12),@bCancelled BIT,@cLocId varchar(5)

BEGIN TRY
	
	
	SET @CSTEP=2
	
	SET @CERRMSG=''
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
	

	SET @nMemoUpdated=0
	SELECT @CSOURCEDB='',@CMERGEDB='',@BMSTINSERTONLY=1,@BSERIESMISMATCHFOUND=0,@CSERVERDATE=''
	SET @CSERVERDATE=CAST(GETDATE() AS DATE)
	
	SELECT  TOP 1 @CMEMOID=cm_id,@cMemoNo=cm_no,@cFinYear=fin_year,@CcUSTcODE=customer_code,
	@NMEMONOLEN=LEN(CM_NO),@BMANUALBILL=MANUAL_BILL,@DCM_DT =CAST(CM_DT AS DATE),@CDtCode=dt_code,
    @TOTAL_AMOUNT=(CASE WHEN CANCELLED=0 THEN NET_AMOUNT ELSE 0 END),
	@nPrefixLen=CHARINDEX('-',cm_no),@bCancelled=cancelled,@cLocId = location_Code 
	FROM SLS_CMM01106_UPLOAD (NOLOCK) WHERE SP_ID=@nSpId

	if isnull(@CMEMOID,'')=''
	   GOTO EXIT_PROC

	set @CINSSPID=@nSpId+@cLocId 

	SET @CSTEP=4
    EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1

    SELECT TOP 1 @CCURDEPTID=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='LOCATION_ID'
    
    SELECT TOP 1 @CDONOTRESETPOSTEDINAC=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='DONOT_RESET_ACCOUNTS_POSTEDINAC'
    
    SELECT TOP 1 @CSHOWLIVESALE=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='ENABLE_SHOW_LIVE_SALE'
        
    SET @CDONOTRESETPOSTEDINAC=ISNULL(@CDONOTRESETPOSTEDINAC,'')
    
    SELECT TOP 1 @CENABLEONLINECNREDEMPTION=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='ONLINE_REDEMPTIONS_CN'
    
	SET @CSTEP=5
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1

	SELECT @CTEMPMASTERTABLE=@CSOURCEDB+'SLS_CMM01106_UPLOAD',
		   @CTEMPDETAILTABLE=@CSOURCEDB+'SLS_CMD01106_UPLOAD',
		   @CTEMPPAYMODETABLE=@CSOURCEDB+'SLS_PAYMODE_XN_DET_UPLOAD',
		   @CTEMPDAILOGFILETABLE=@CSOURCEDB+'SLS_DAILOGFILE_UPLOAD'
	
	DECLARE @tMissingCm TABLE (cm_id VARCHAR(50))

	SET @SLS_SYNC_AFTER=''
	
	SELECT @SLS_SYNC_AFTER=ISNULL(VALUE, '') FROM CONFIG (NOLOCK) WHERE config_option='SLS_SYNC_AFTER'
	
	SET @CSTEP=8
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
	IF ISNULL(@SLS_SYNC_AFTER,'')<>''
	BEGIN  
		IF @DCM_DT<=@SLS_SYNC_AFTER
			GOTO EXIT_PROC
	END

	SET @CSTEP=8.5
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1

	IF EXISTS (SELECT TOP 1 'U' FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION ='UPDATE_REF_NO_FROM_CM_NO' AND VALUE =1) --changes For Puma(03-08-2022
	BEGIN

		IF EXISTS (SELECT 'U' FROM SLS_CMM01106_UPLOAD A WITH (NOLOCK) WHERE SP_ID=@NSPID AND ISNULL(REF_NO,'')='')
		   UPDATE A SET REF_NO=CM_NO  FROM SLS_CMM01106_UPLOAD A WITH (NOLOCK) WHERE SP_ID=@NSPID AND ISNULL(REF_NO,'')=''

	END

	IF EXISTS (SELECT TOP 1 tablename FROM savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nSpId)
		DELETE FROM savetran_updcols_updatestr WITH (ROWLOCK) WHERE sp_id=@nSpId

	
	SET @CSTEP=8.7
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1

	INSERT savetran_updcols_updatestr (sp_id,tablename,updatestr)
	SELECT @nSpId as sp_id,tablename,'' from mirrorxnsinfo (NOLOCK)
	WHERE tablename IN ('cmm01106','cmd01106','paymode_xn_det','coupon_redemption_info','DAILOGFILE','custdym','cmd_cons')
	
	
LBLSTART:
	
	SET @CSTEP=9.2
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1

	SET @CCMIDSEARCH=''
	SELECT TOP 1 @CCMIDSEARCH=A.CM_ID FROM CMM01106 A (NOLOCK) WHERE A.CM_ID=@CMEMOID
	
	IF ISNULL(@CCMIDSEARCH,'')<>''
		SET @BADDMODE=0
	ELSE
		SET @BADDMODE=1


	SET @nUpdateMode=(CASE WHEN @BADDMODE=1 THEN 1 WHEN @bCancelled=1 THEN 3 ELSE 2 END)	
	SET @CSTEP=9.4
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1

	EXEC SP3S_upd_qty_lastupdate
	@nUpdateMode=@NUPDATEMODE,
	@cXnType='SLS',
	@nSpId=@nSpId,
	@cMasterTable='cmm01106',
	@cMemoIdCol='cm_id',
	@cXnDtCol='cm_dt',
	@cMemoId=@CCMIDSEARCH,
	@bCalledfromMerging=1,
	@CERRORMSG=@CERRMSG OUTPUT

	IF ISNULL(@cErrmsg,'')<>''
		GOTO EXIT_PROC

	SET @CSTEP=11
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1

	BEGIN TRANSACTION 	     
	
	IF @BADDMODE=0
		EXEC SP3S_VERIFY_SLSDATA_CHANGES_merge
		@cMemoId=@cMemoId,
		@nSpId=@nSpId
	
	declare @cStepMsg VARCHAR(100)
	set @cStepMsg=(case when @BADDMODE=0 then '@BADDMODE=0:' else '@BADDMODE=1:' end)+@cMemoId
	
	SET @CSTEP=18
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,@cStepMsg,1

	DECLARE @cMaxCmno varchar(15),@nNextMemono NUMERIC(7,0),@nCurMemono NUMERIC(7,0),
	@nMemoLen NUMERIC(2,0)
		
		
	SELECT TOP 1 @cMaxCmno=max_cm_no from loc_memo_series a (NOLOCK)
	WHERE dept_id=@cLocId  and fin_year=@cFinYear and prefix=LEFT(@cMemoNo,@nPrefixLen)
		
	IF ISNULL(@cMaxCmno,'')=''
	BEGIN
		SET @CSTEP=21
		EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1

		INSERT loc_memo_series	( fin_year, prefix , xn_type, dept_id, min_cm_no ,max_cm_no)
		select @cFinYear,LEFT(@cMemoNo,@nPrefixLen) as prefix,'SLS' AS xn_type,@cLocId  as dept_id,
		@cMemono,@cMemono
			
		SET @cMaxCmno=@cMemoNo
	END
		
	DECLARE @cNextCmno VARCHAR(30),@bInsLocMemoSeries BIT
	
	IF @BADDMODE=1
	BEGIN	
		SELECT @nCurMemono=SUBSTRING(@cMemoNo,@nPrefixLen+1,LEN(@cMemoNo)) 
		SELECT @nNextMemono=CONVERT(NUMERIC(7,0),SUBSTRING(@cMaxCmno,@nPrefixLen+1,LEN(@cMaxCmno)))+1
				

		IF @nCurMemono-@nNextMemono>0
		BEGIN
			SET @CSTEP=25
			EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
			SELECT @nMemoLen=LEN(LTRIM(RTRIM(@cMaxCmno)))			
			
			WHILE @nNextMemono<@nCurMemono
			BEGIN
				SET @cPrevMemono=LEFT(@cMaxCmno,@nPrefixLen)+REPLICATE('0',@nMemoLen-@nPrefixLen-LEN(LTRIM(RTRIM(STR(@nNextMemono)))))+
				LTRIM(RTRIM(STR(@nNextMemono)))

				SET @CPREVMEMOID = @cLocId +@CFINYEAR+REPLICATE('0',22-@nMemoLen-7) +@CPREVMEMONO
				
				INSERT @tMissingCm (cm_id)
				SELECT @CPREVMEMOID

				SET @nNextMemono=@nNextMemono+1

			END

			if not exists (select top 1 'u' from cmm01106 (nolock) where cm_id=@CPREVMEMOID)
			begin
				declare @bNotfound bit
				
				set @bNotfound=1
				
				IF LEN(ltrim(rtrim(@cMaxCmno)))=10 and LEN(ltrim(rtrim(@cMemoNo)))=12
				BEGIN
					set @CPREVMEMONO=replace(@CPREVMEMONO,'-','-00')
					
					set @cPrevMemoId=@cLocId +@CFINYEAR+REPLICATE('0',22-@nMemoLen-9)+
					@CPREVMEMONO
					if exists (select top 1 'u' from cmm01106 (nolock) where cm_id=@CPREVMEMOID)
						set @bNotfound=0
				end	
				
				if @bNotfound=1
				begin			
					SET @CERRMSG='Previous memo no. :'+@cPrevMemono+' not found in merging Bill Id:'+@CMEMOID
					SET @BSERIESMISMATCHFOUND=1
					GOTO EXIT_PROC
				end
				
			end

			
		END

		IF @nCurMemono-@nNextMemono>=0
			SET @bInsLocMemoSeries=1
	END
	ELSE
	BEGIN
		SET @CSTEP=28
		EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
		
		IF @cMemono>@cMaxCmno
			SET @bInsLocMemoSeries=1
	END

	if @bInsLocMemoSeries=1
	begin
		SET @CSTEP=30
		EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
		
		UPDATE loc_memo_series SET max_cm_no=@cMemoNo 
		where dept_id=@cLocId  and fin_year=@cFinYear and prefix=LEFT(@cMemoNo,@nPrefixLen)

	end
	
	
	SET @CSTEP=33
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
		    
    



lblUpdLocStatus:
   
   SET @cStep=36
   EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
    
	
   SET @CFILTERCONDITION = ' B.SP_ID='''+LTRIM(RTRIM(@nSpId))+''''
		
	/*
	SET @CMEMOPREFIX=(CASE WHEN SUBSTRING(RIGHT(@CMEMOID,@NMEMONOLEN),5,1)='N' THEN LEFT(RIGHT(@CMEMOID,@NMEMONOLEN),6) ELSE 
						   LEFT(RIGHT(@CMEMOID,@NMEMONOLEN),5) END) 	
	
	
	
	SET @NPREVMEMONO=CONVERT(NUMERIC(12,0),RIGHT(@CMEMOID,@NMEMONOLEN-LEN(@CMEMOPREFIX)))
	*/
	
	DECLARE @CFIRSTMEMONO VARCHAR(20)
	
	
	SET @CSTEP=40
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
	
LBLMERGE:
	---DELETING EXISTING RECORD IF BILL COMES AGAIN FOR MERGING
	
	--SELECT @CTEMPMASTERTABLE,@CFILTERCONDITION
	IF @BADDMODE=0
		PRINT 'ADDMODE:N'
	ELSE
		PRINT 'ADDMODE:Y'	
	
	DECLARE @cMissingRowId VARCHAR(50)

	IF @BADDMODE=0
	BEGIN	
				
		SET @CSTEP=45
		EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
		
		SET @cMissingRowId=''

		SELECT TOP 1 @cMissingRowId=a.row_id FROM 
		(SELECT row_id FROM sls_paymode_xn_det_upload A  (NOLOCK)  WHERE sp_id=@cInsSpId) A
		LEFT OUTER JOIN 
		(SELECT row_id FROM sls_paymode_xn_det_upload (NOLOCK) WHERE sp_id=@nSpId) b ON 
		a.row_id=b.row_id WHERE b.row_id IS NULL

		IF @cMissingRowId<>''
		BEGIN
			SET @CSTEP=47
			EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1

			SET @DTSQL=N'DELETE A FROM PAYMODE_XN_DET A  WITH (ROWLOCK)  
						 JOIN '+@CTEMPMASTERTABLE+' B (NOLOCK) ON A.MEMO_ID=B.CM_ID
						 LEFT OUTER JOIN 
						(SELECT row_id FROM sls_paymode_xn_det_upload (NOLOCK) WHERE sp_id='''+@nSpId+''') c ON 
						a.row_id=c.row_id WHERE memo_id='''+@cMemoId+''' AND XN_TYPE=''SLS'' AND c.row_id IS NULL'
			PRINT @DTSQL
			EXEC SP_EXECUTESQL @DTSQL
		END
		
		SET @CSTEP=50
		EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
		SET @cMissingRowId=''
		SELECT TOP 1 @cMissingRowId=a.rowid FROM 
		(SELECT rowid FROM sls_DAILOGFILE_upload  (NOLOCK)  WHERE sp_id=@cInsSpId) A
		LEFT OUTER JOIN 
		(SELECT rowid FROM sls_DAILOGFILE_upload (NOLOCK) WHERE sp_id=@nSpId) b ON 
		a.rowid=b.rowid WHERE b.rowid IS NULL

		IF @cMissingRowId<>''
		BEGIN
			SET @CSTEP=54
			EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
			SET @DTSQL=N'DELETE A FROM DAILOGFILE A  WITH (ROWLOCK)  JOIN '+@CTEMPMASTERTABLE+' B (NOLOCK) ON A.MEMONO=B.CM_ID
						 WHERE '+@CFILTERCONDITION+' AND MODULENAME=''FRMSALE'''
			PRINT @DTSQL
			EXEC SP_EXECUTESQL @DTSQL
		END

		SET @CSTEP=58
		EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
		SET @cMissingRowId=''
		SELECT TOP 1 @cMissingRowId=a.row_id FROM 
		(SELECT row_id FROM sls_CMD01106_upload (NOLOCK) WHERE sp_id=@cInsSpId) A
		LEFT OUTER JOIN 
		(SELECT row_id FROM sls_CMD01106_upload (NOLOCK) WHERE sp_id=@nSpId) b ON 
		a.row_id=b.row_id WHERE b.row_id IS NULL

		--select 'check ',@cInsSpId as insspid,@cMissingRowId as cMissingRowId

		IF @cMissingRowId<>''
		BEGIN
			SET @CSTEP=62
			EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
			SET @DTSQL=N'DELETE A FROM CMD01106  A WITH (ROWLOCK) 
						 JOIN '+@CTEMPMASTERTABLE+' B (NOLOCK) ON A.CM_ID=B.CM_ID		 
							 LEFT OUTER JOIN
							 (SELECT ROW_ID FROM '+@CTEMPDETAILTABLE+' B (NOLOCK) WHERE '+@CFILTERCONDITION+') C ON A.ROW_ID=C.ROW_ID
							 WHERE '+@CFILTERCONDITION+' AND C.ROW_ID IS NULL' 
			PRINT @DTSQL
			EXEC SP_EXECUTESQL @DTSQL
		END
	END
	
	---- Removed this code after discussion in Zoom meeting with Sir & confirmation by Anil	
	---- that this code was written 2 years back (14-10-2020)
	--SET @CSTEP=65
	--EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
	----- Need to do this because of step running slow at Cobb
	-----UPDATING TRANSACTION TABLES
	--IF NOT EXISTS (sELECT TOP 1 CUSTOMER_CODE FROM CUSTDYM(NOLOCK) WHERE CUSTOMER_CODE=@CcUSTcODE)
	--BEGIN
	--	SET @CSTEP=67
	--	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
	--	SET @CTABLENAME='CUSTDYM'
	--	SET @CTMP_TABLENAME='SLS_CUSTDYM_UPLOAD'
	--	SET @CKEYFIELD='CUSTOMER_CODE'
	
	--	UPDATE a  SET AREA_CODE='0000000' from SLS_CUSTDYM_UPLOAD a (NOLOCK)
	--	left outer join area b (NOLOCK) on a.area_code=b.area_code
	--	WHERE sp_id=@nSpId AND b.area_code is null
	
	--	SET @CSTEP=69
	--	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
	--	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
	--							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
	--							  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
	--							  ,@BALWAYSUPDATE=1,@BUPDATEXNS=0
	-- END							  

	SET @CSTEP=71
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
	--- Need to do this because of step running slow at Cobb
	---UPDATING TRANSACTION TABLES
	IF NOT EXISTS (sELECT TOP 1 dt_CODE FROM dtm(NOLOCK) WHERE dt_code=@CDtCode)
	BEGIN
		SET @CSTEP=73

		EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
		SET @CTABLENAME='DTM'
		SET @CTMP_TABLENAME='SLS_DTM_UPLOAD'
		SET @CKEYFIELD='DT_CODE'
	
		SET @CSTEP=75
		EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1,@BUPDATEXNS=0
	 END							  
		
	SET @CSTEP=77
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
	SET @CTABLENAME='CMM01106'
	SET @CTMP_TABLENAME='SLS_CMM01106_UPLOAD'
	SET @CKEYFIELD='CM_ID'


	DECLARE @cUpdatestr VARCHAR(4000)

	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK)  WHERE SP_ID=@nSpId AND tablename='cmm01106'


	SET @CSTEP=79
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1		
	SET @LUPDATEONLY = (CASE WHEN @BADDMODE=0 THEN 1 ELSE 0 END)	
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION
							  ,@LUPDATEONLY=@LUPDATEONLY,@BALWAYSUPDATE=1,@BUPDATEXNS=1,@cUpdatestrPara=@cUpdatestr
							  ,@bThruUpdatestrPara=1 

	SET @CSTEP=81
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1		
	
	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK)  WHERE SP_ID=@nSpId AND tablename='cmd01106'

	SET @CTABLENAME='CMD01106'
	SET @CTMP_TABLENAME='SLS_CMD01106_UPLOAD'
	SET @CKEYFIELD='ROW_ID'
	 
	


	SELECT @cMissingRowId='',@lUpdateonly=0
	IF @BADDMODE=0
	BEGIN
		SET @CSTEP=83
		EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1

		SELECT TOP 1 @cMissingRowId=b.row_id FROM 
		(SELECT row_id  FROM sls_CMD01106_upload (NOLOCK) WHERE sp_id=@cInsSpId) A
		RIGHT OUTER JOIN 
		(SELECT row_id FROM sls_cmd01106_upload (NOLOCK) WHERE sp_id=@nSpId) b ON 
		a.row_id=b.row_id WHERE a.row_id IS NULL


		--select 'check @cMissingRowId of cmd',@cMissingRowId

		IF ISNULL(@cMissingRowId,'')='' 
			SET @lUpdateonly=1
	END


	SET @CSTEP=83.5
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
	
		SELECT a.product_code as new_product_code into #tmpbarcode FROM SLS_CMD01106_UPLOAD A (NOLOCK)
		LEFT JOIN SKU B (nolock) ON A.PRODUCT_CODE =B.PRODUCT_CODE 
		WHERE A.SP_ID=@nSpId AND B.PRODUCT_CODE IS NULL

		IF EXISTS (SELECT TOP 1 'U' FROM #tmpbarcode)
		BEGIN
			SET @CSTEP=84.2
			EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1

			declare @cNEW_DATA_ARCHIVING_DATE varchar(10),@cskudbname varchar(50)
			select @cNEW_DATA_ARCHIVING_DATE=value  from CONFIG where  config_option='NEW_DATA_ARCHIVING_DATE'

			if isnull(@cNEW_DATA_ARCHIVING_DATE,'')<>''
			begin

			SELECT @CSKUDBNAME='_01'+DBO.FN_GETFINYEAR (CAST(@CNEW_DATA_ARCHIVING_DATE AS DATETIME )-1)
			SET @CSKUDBNAME=DB_NAME()+@CSKUDBNAME+'.DBO.'
	
				declare @cinserstr varchar(max)
				SELECT @CINSERSTR=INSERTSTR FROM MIRRORXNSINFO WHERE TABLENAME ='SKU_BKP' and  INSERTSTR<>''
				SET @dtsql= N'INSERT INTo SKU ('+@CINSERSTR+') 
				SELECT  '+@CINSERSTR+' FROM '+@CSKUDBNAME+' SKU_BKP  A  (nolock) 
				JOIN #TMPBARCODE B ON A.PRODUCT_CODE=B.NEW_PRODUCT_CODE '
				print @dtsql
				exec sp_executesql @dtsql

            end



		END


	SET @CSTEP=85
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
	
	--select 'cmd01106', @cUpdatestr as cUpdatestr,@BADDMODE as BADDMODE,@lUpdateonly as lUpdateonly

	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@lUpdateonly
							  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 
	
	
	--update cm id references in  packslip tables 
 
  SET @CSTEP=85.2
  EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
 
  IF EXISTS (SELECT TOP 1 rm.ref_cm_id FROM  sls_rps_mst_upload RM (NOLOCK)   
			 WHERE SP_ID=@nSpId AND RM.REF_CM_ID =@cMemoId)           		
  BEGIN
	  SET @CSTEP=85.6
	  EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1

	  UPDATE RM SET REF_CM_ID =CMM.CM_ID        
	  FROM  RPS_MST RM (NOLOCK)   
	  JOIN RPS_DET RD(NOLOCK) ON RM.CM_ID=RD.CM_ID               
	  JOIN CMD01106 C (NOLOCK) ON C.PACK_SLIP_ROW_ID=RD.ROW_ID 
	  JOIN CMM01106 CMM (NOLOCK) ON CMM.CM_ID=C.CM_ID 
	  WHERE RM.REF_CM_ID =@cMemoId AND CMM.CANCELLED=0           
  END  
	-- end pack slip link table update



  SET @CSTEP=85.9
  EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1



	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK)  WHERE SP_ID=@nSpId AND tablename='DAILOGFILE'
	SET @CTABLENAME='DAILOGFILE'
	SET @CTMP_TABLENAME='SLS_DAILOGFILE_UPLOAD'
	SET @CKEYFIELD='MEMONO'
	 

	SELECT @cMissingRowId='',@lUpdateonly=0
	IF @BADDMODE=0
	BEGIN
		SET @CSTEP=88
		EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1

		SELECT TOP 1 @cMissingRowId=b.rowid FROM 
		(SELECT rowid FROM sls_DAILOGFILE_upload A  (NOLOCK)  WHERE sp_id=@cInsSpId) A
		RIGHT OUTER JOIN 
		(SELECT rowid FROM sls_DAILOGFILE_upload (NOLOCK) WHERE sp_id=@nSpId) b ON 
		a.rowid=b.rowid WHERE a.rowid IS NULL

		IF ISNULL(@cMissingRowId,'')=''
			SET @lUpdateonly=1
	END

	SET @CSTEP=90
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
	
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@lUpdateonly
							  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 	

	



	SELECT @cMissingRowId='',@lUpdateonly=0
	IF @BADDMODE=0
	BEGIN
		SET @CSTEP=91
		EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
	   	SELECT TOP 1 @cMissingRowId=b.row_id FROM 
		(SELECT row_id FROM sls_paymode_xn_det_upload A  (NOLOCK)  WHERE sp_id=@cInsSpId) A
		RIGHT OUTER JOIN 
		(SELECT row_id FROM sls_paymode_xn_det_upload (NOLOCK) WHERE sp_id=@nSpId) b ON 
		a.row_id=b.row_id WHERE a.row_id IS NULL

		IF ISNULL(@cMissingRowId,'')=''
			SET @lUpdateonly=1
	END

	SET @CSTEP=92
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
	
	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK)  WHERE SP_ID=@nSpId AND tablename='PAYMODE_XN_DET'
	
	SET @CTABLENAME='PAYMODE_XN_DET'
	SET @CTMP_TABLENAME='SLS_PAYMODE_XN_DET_UPLOAD'
	SET @CKEYFIELD='ROW_ID'
	
	SET @CSTEP=95
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
	--select 'paymode_xn_det',@lUpdateonly as lUpdateonly

	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='XN_TYPE',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@lUpdateonly
							  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1
							  							   							   	
	
	SET @CSTEP=98
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
	
	SET @CTABLENAME='CMD_CONS'
	SET @CTMP_TABLENAME='SLS_CMD_CONS_UPLOAD'
	SET @CKEYFIELD='ROW_ID'
	
	IF @bAddmode=0
	BEGIN
		SET @CSTEP=105
		EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
		SET @DTSQL= N'DELETE A FROM  CMD_CONS A WITH (ROWLOCK) JOIN '+@CTEMPMASTERTABLE+' B (NOLOCK) ON 
						A.CM_ID=B.CM_ID WHERE '+@CFILTERCONDITION
		EXEC SP_EXECUTESQL @DTSQL	
	END

	SET @CSTEP=112
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
	
	SET @CSTEP=115
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
	
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
							  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1


	SET @CSTEP=120	
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
	SET @CTABLENAME='CMD_MANUALBILL_ERRORS'
	SET @CTMP_TABLENAME='SLS_CMD_MANUALBILL_ERRORS_UPLOAD'
	SET @CKEYFIELD='CMD_ROW_ID'

	SELECT @cMissingRowId='',@lUpdateonly=0

	SELECT TOP 1 @cMissingRowId=b.cmd_row_id FROM 
	(SELECT cmd_row_id FROM CMD_MANUALBILL_ERRORS A  (NOLOCK)
	 JOIN cmd01106 b (NOLOCK) ON a.cmd_row_id=b.row_id WHERE cm_id=@cMemoId) A
	RIGHT OUTER JOIN 
	(SELECT cmd_row_id FROM SLS_CMD_MANUALBILL_ERRORS_UPLOAD (NOLOCK) WHERE sp_id=@nSpId) b ON 
	a.cmd_row_id=b.cmd_row_id WHERE a.cmd_row_id IS NULL
	
	IF ISNULL(@cMissingRowId,'')<>'' 
	BEGIN
		SET @CSTEP=125
		EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
		SELECT @CFILTERCONDITION2=REPLACE(@CFILTERCONDITION,'B.','C.')+' AND B.APPROVED=0',
			   @CJOINSTR=' JOIN SLS_CMD01106_UPLOAD C (NOLOCK) ON C.ROW_ID=B.CMD_ROW_ID'	
    
		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='ERROR_CODE',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION2,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1,@CJOINSTR=@CJOINSTR 
   
    END
    SET @CSTEP=130
    EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
    

	IF @BADDMODE=0
	BEGIN		
		SET @CSTEP=135
		EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1

		SET @cMissingRowId=''
		SELECT TOP 1 @cMissingRowId=a.row_id FROM 
		(SELECT row_id FROM sls_COUPON_REDEMPTION_INFO_upload A  (NOLOCK)  WHERE sp_id=@cInsSpId) A
		LEFT OUTER JOIN 
		(SELECT row_id FROM sls_COUPON_REDEMPTION_INFO_upload (NOLOCK) WHERE sp_id=@nSpId) b ON 
		a.row_id=b.row_id WHERE b.row_id IS NULL

		IF @cMissingRowId<>''
		BEGIN
			SET @CSTEP=140
			EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
			SET @DTSQL= N'DELETE A FROM  COUPON_REDEMPTION_INFO A WITH (ROWLOCK) JOIN '+@CTEMPMASTERTABLE+' B (NOLOCK) ON 
						  A.CM_ID=B.CM_ID WHERE '+@CFILTERCONDITION
			EXEC SP_EXECUTESQL @DTSQL
		END
	END

	SET @CSTEP=145
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1	
	SET @CKEYFIELD='ROW_ID'


	SELECT @cMissingRowId='',@lUpdateonly=0

	IF @BADDMODE=0
	BEGIN
		SELECT TOP 1 @cMissingRowId=b.row_id FROM 
		(SELECT row_id FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD A  (NOLOCK)  WHERE sp_id=@cInsSpId AND row_id<>'') A
		RIGHT OUTER JOIN 
		(SELECT row_id FROM SLS_COUPON_REDEMPTION_INFO_UPLOAD (NOLOCK) WHERE sp_id=@nSpId AND row_id<>'') b ON 
		a.row_id=b.row_id WHERE a.row_id IS NULL

		IF ISNULL(@cMissingRowId,'')=''
			SET @lUpdateonly=1
	END

	SET @CSTEP=150
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1	
	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK)  WHERE SP_ID=@nSpId AND tablename='COUPON_REDEMPTION_INFO'
	SET @CTABLENAME='COUPON_REDEMPTION_INFO'
	SET @CTMP_TABLENAME='SLS_COUPON_REDEMPTION_INFO_UPLOAD'

	
	SET @CFILTERCONDITION2=@CFILTERCONDITION+' AND b.row_id<>'''''

	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION2,@LUPDATEONLY=@lUpdateonly
							  ,@BALWAYSUPDATE=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1					  
	
	SET @CSTEP=152.5
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1

	SELECT @cMissingRowId=''

	SELECT TOP 1 @cMissingRowId=b.CM_ID FROM 
	(SELECT A.CM_ID  FROM RPS_MST A  (NOLOCK)  WHERE REF_cm_id=@cMemoId) A
	RIGHT OUTER JOIN 
	(SELECT CM_ID,REF_CM_ID FROM SLS_RPS_MST_UPLOAD (NOLOCK) WHERE sp_id=@nSpId) b ON 
	a.CM_ID=b.CM_ID 
	WHERE a.CM_ID  IS NULL
	
	--if @@spid=133
	--	select 'check @cMissingRowId for rps',@cMissingRowId

	IF ISNULL(@cMissingRowId,'')<>''
	BEGIN
	
		SET @CSTEP=154
		EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
		SET @CTABLENAME='RPS_MST'
		SET @CTMP_TABLENAME='SLS_RPS_MST_UPLOAD'
		SET @CKEYFIELD='CM_ID'
		
		--if @@spid=133
		--	select 'enter rps merging'
		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=0,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1 							  
	
	END

	SET @CSTEP=155
	IF EXISTS (SELECT TOP 1'U' FROM SLS_XN_AUDIT_TRIAL_DET_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID)
	BEGIN
	    
		
		DELETE A FROM SLS_XN_AUDIT_TRIAL_DET_UPLOAD A (NOLOCK) 
		JOIN XN_AUDIT_TRIAL_DET B (NOLOCK) ON A.XN_TYPE =B.XN_TYPE AND A.XN_ID =B.XN_ID AND A.ID=B.ID 
		WHERE A.SP_ID =@nSpId 

	    SET @CTABLENAME='XN_AUDIT_TRIAL_DET'
		SET @CTMP_TABLENAME='SLS_XN_AUDIT_TRIAL_DET_UPLOAD'
		SET @CKEYFIELD='XN_ID'

		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1,@BUPDATEXNS =1						  
	

	END
	
	SET @CSTEP=157
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
	
	IF EXISTS (SELECT TOP 1 PAYMODE_CODE FROM sls_PAYMODE_XN_DET_upload (nolock) where sp_id=@nSpId and PAYMODE_CODE='GVC0001')
		INSERT GV_MST_REDEMPTION  WITH (ROWLOCK) ( GV_SRNO, REDEEMED_AT_DEPT_ID, REDEEMED_ON, REDEMPTION_CM_ID ) 
		SELECT A.GV_SRNO,B.location_Code  AS REDEEMED_AT_DEPT_ID,A.LAST_UPDATE AS  REDEEMED_ON,
		A.MEMO_ID AS REDEMPTION_CM_ID 
		FROM sls_PAYMODE_XN_DET_upload A (NOLOCK) 
		JOIN sls_cmm01106_upload B (NOLOCK) ON B.CM_ID=A.MEMO_ID
		LEFT OUTER JOIN GV_MST_REDEMPTION C (NOLOCK) ON C.REDEEMED_AT_DEPT_ID=B.location_Code  AND C.GV_SRNO=A.GV_SRNO
		
		WHERE a.sp_id=@nSpId AND A.XN_TYPE='SLS' AND C.GV_SRNO IS NULL
		AND A.PAYMODE_CODE='GVC0001' AND ISNULL(A.GV_SRNO,'')<>''
	
	
	------ INSERT ENTRY IN ONLINE CN TABLE FOR THE CREDIT NOTE ISSUE TO BE REFERRED WHILE 
	------ REDEMPTION AT POS 
	IF @CENABLEONLINECNREDEMPTION='1'
	BEGIN
		SET @CSTEP=375
		EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
				
		DECLARE @CCNISSUEPAYMODECODE CHAR(7),@CCNADJPAYMODECODE CHAR(7)
			
		SELECT TOP 1 @CCNISSUEPAYMODECODE=PAYMODE_CODE 
		FROM SLS_PAYMODE_XN_DET_UPLOAD A (NOLOCK)
		JOIN SLS_CMM01106_UPLOAD B (NOLOCK) ON A.SP_ID=B.SP_ID 
		WHERE a.SP_ID=@nSpId AND  PAYMODE_CODE='0000004' AND AMOUNT<0 
		AND SUBSTRING(B.CM_NO,5,1)='N' AND B.CANCELLED=0
		
		IF ISNULL(@CCNISSUEPAYMODECODE,'')<>''
		BEGIN
			IF NOT EXISTS (SELECT TOP 1 CN_ID FROM ONLINE_CN_REDEEMPTION (NOLOCK) WHERE CN_ID=@CMEMOID)
				INSERT ONLINE_CN_REDEEMPTION WITH (ROWLOCK) (CN_ID,LAST_UPDATED)
				SELECT @CMEMOID AS CN_ID,GETDATE() AS LAST_UPDATED
		END		
		
		SET @CSTEP=378
		EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
				
		SELECT TOP 1 @CCNADJPAYMODECODE=PAYMODE_CODE 
		FROM SLS_PAYMODE_XN_DET_UPLOAD A (NOLOCK)
		JOIN SLS_CMM01106_UPLOAD B (NOLOCK) ON A.SP_ID=B.SP_ID
		WHERE a.SP_ID=@nSpId  AND PAYMODE_CODE='0000001' 
		AND B.CANCELLED=0
		
		IF ISNULL(@CCNADJPAYMODECODE,'')<>''
			UPDATE A SET REDEEMPTION_BILL_NO=C.CM_NO,REDEEMPTION_BILL_DATE=C.CM_DT
			FROM ONLINE_CN_REDEEMPTION A  WITH (ROWLOCK) 
			JOIN SLS_PAYMODE_XN_DET_UPLOAD B (NOLOCK) ON A.CN_ID=B.ADJ_MEMO_ID
			JOIN SLS_CMM01106_UPLOAD C  (NOLOCK) ON C.SP_ID=B.SP_ID
			WHERE B.SP_ID=@CMEMOID
			AND B.PAYMODE_CODE='0000001' AND ISNULL(A.REDEEMPTION_BILL_NO,'')=''
		
	END
	
	SET @CSTEP=380
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
	EXEC SP3S_MERGE_LOCPMT  
	@cTempTable='SLS_PMT01106_UPLOAD',  
	@cMemoIdCol='sp_id',  
	@cMemoId =@nSpId

	--@cMemoIdCol='SLS_MEMO_ID',  
	--@cMemoId =@CMEMOID

	--sp_id=@nSpId

	IF EXISTS (SELECT TOP 1'U' FROM SLS_CMD01106_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID AND QUANTITY_IN_STOCK <0)
	EXEC SP3S_UPD_SKUXFPNEW 'SLR',@NSPID

	
	IF @CSHOWLIVESALE=1  AND @DCM_DT =@CSERVERDATE
	BEGIN
		IF  @BADDMODE=0
		BEGIN
			SET @CSTEP=382
			EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
			
			IF EXISTS(SELECT TOP 1 'U' FROM POS_NRV  (NOLOCK) WHERE DEPT_ID=@cLocId ) 
			BEGIN
				  UPDATE A SET NRV=NRV-@BTOTAL_AMOUNT FROM POS_NRV A WHERE DEPT_ID=@cLocId 
				  UPDATE A SET NRV=NRV+@TOTAL_AMOUNT FROM POS_NRV A WHERE DEPT_ID=@cLocId 
			      
			END
		END
		
		SET @CSTEP=385
		EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
		
		IF EXISTS(SELECT TOP 1 'U' FROM POS_NRV (NOLOCK) WHERE DEPT_ID=@cLocId ) AND @BADDMODE=1
			UPDATE A SET NRV=NRV+@TOTAL_AMOUNT FROM POS_NRV A WHERE DEPT_ID=@cLocId 
		
		IF NOT EXISTS(SELECT TOP 1 'U' FROM POS_NRV  (NOLOCK) WHERE DEPT_ID=@cLocId ) AND @BADDMODE=1 
			INSERT INTO POS_NRV(DEPT_ID,NRV) SELECT @cLocId ,@TOTAL_AMOUNT 
		    
		GOTO EXIT_PROC    
	END	
		
	
	
END TRY

BEGIN CATCH
	SELECT @CERRMSG='P:SP_SYNCH_UPLOADDATA_SLSNEW_OPT Memo Id:'+isnull(@cMemoId,'')+' STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO EXIT_PROC
END CATCH

EXIT_PROC:


	IF ISNULL(@cErrmsg,'')='' 
	BEGIN
			SET @CSTEP=388
			EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1

			EXEC SP3S_VALIDATE_DATAMERGED_SINGLECHANNEL
			@cMasterTable='cmm01106',
			@cDetTable='cmd01106',
			@cMemoIdCol='cm_id',
			@cMemoId=@cMemoId,
			@cUploadTable='sls_cmm01106_upload',
			@nSpId=@nSpId,
			@cErrormsg=@CERRMSG OUTPUT

			
	END	

	SET @CSTEP=388.5
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1

	--select * from paymode_xn_det where memo_id='07011200000007CM-00022'
	--SELECT @CERRMSG,@BSERIESMISMATCHFOUND
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRMSG,'')='' 
			COMMIT
		ELSE
			ROLLBACK
    END
	
	IF @BSERIESMISMATCHFOUND=1
		INSERT tblMissingMemos (sp_id,memo_id)
		SELECT @nSpId,cm_id FROM @tMissingCm 


	SET @CSTEP=389
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1	
	
	
	EXEC SP3S_DELETEUPLOAD_CMM @nSpId

	
	IF @BADDMODE=0
	BEGIN
		SET @CSTEP=392
		EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1	

		SET @cInsSpId=@nSpId+@cLocId 

		EXEC SP3S_DELETEUPLOAD_CMM @cInsSpId
	END

	SET @CSTEP=394
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1	

	IF ISNULL(@cErrmsg,'')<>''
	BEGIN
		IF NOT EXISTS (SELECT TOP 1 xn_type FROM mirror_synch_log (NOLOCK) WHERE xn_type='SLSmerge' AND dept_id=@cLocId )
			INSERT mirror_synch_log (XN_TYPE,dept_id,memo_id,ERRMSG,last_update)
			SELECT 'SLSmerge',@cLocId ,@cMemoId, @CERRMSG,GETDATE() as last_update
		ELSE
			update mirror_synch_log set errmsg=@cErrmsg,memo_id=@cMemoId WHERE xn_type='SLSmerge' AND dept_id=@cLocId 
	END

	SET @CSTEP=396
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
	IF EXISTS (SELECT TOP 1 sp_id FROM savetran_updcols_updatestr with (rowlock) where sp_id=@nSpId)
		DELETE FROM savetran_updcols_updatestr with (rowlock) where sp_id=@nSpId

		
	IF EXISTS (SELECT TOP 1 xn_type FROM mirror_synch_log (NOLOCK) WHERE xn_type='SLSmerge' AND dept_id=@cLocId )
	BEGIN
		SET @CSTEP=398
		EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1
		iF ISNULL(@cErrmsg,'')=''
			DelETE FROM mirror_synch_log WITH (ROWLOCK)  WHERE xn_type='SLSmerge' AND dept_id=@cLocId 			
	ENd

	SET @CSTEP=400
	EXEC SP_CHKXNSAVELOG 'SLSMERGE',@CSTEP,0,@nSpId,'',1	

END	
---END OF PROCEDURE - SP3s_SYNCH_UPLOADDATA_SLSNEW_OPT


