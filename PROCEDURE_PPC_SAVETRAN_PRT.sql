CREATE PROCEDURE PPC_SAVETRAN_PRT
(
	@NUPDATEMODE		NUMERIC(2,0),
	@NSPID				INT=0,
	@CMEMONOPREFIX		VARCHAR(50)='',
	@CFINYEAR			VARCHAR(10)='',
	@CMEMOID			VARCHAR(40)='',
	@NPRTMODE			INT=1,-- 1.SINGLE DEBIT NOTE,2.MULTIPLE DEBIT NOTE
	@CLOCID				VARCHAR(2)=''
)
AS
BEGIN
   
	DECLARE @COL VARCHAR(MAX)
	
	DECLARE @CTEMPDBNAME			VARCHAR(100),
			@CMASTERTABLENAME		VARCHAR(100),
			@CDETAILTABLENAME		VARCHAR(100),
			@CTEMPMASTERTABLENAME	VARCHAR(100),
			@CTEMPDETAILTABLENAME	VARCHAR(100),
			@CTEMPMASTERTABLE		VARCHAR(100),
			@CTEMPDETAILTABLE		VARCHAR(100),
			@CTEMPMULTIDNTABLENAME	VARCHAR(200),
			@CTEMPPARCELADJTABLENAME VARCHAR(200), 
			@CERRORMSG				VARCHAR(500),
			@LDONOTUPDATESTOCK		BIT,
			@NRFUPDATEMODE INT,
			@CKEYFIELD1				VARCHAR(50),
			@CKEYFIELDVAL1			VARCHAR(50),
			@CMEMONO				VARCHAR(20),
			@NMEMONOLEN				NUMERIC(20,0),
			@CMEMONOVAL				VARCHAR(50),
			@CMEMODEPTID			VARCHAR(2),
			@CLOCATIONID			VARCHAR(2),
			@CHODEPTID				VARCHAR(2),
			@CCMD					NVARCHAR(MAX),
			@CCMDOUTPUT				NVARCHAR(MAX),
			@NSAVETRANLOOP			BIT,
			@NSTEP					INT,
			@LENABLETEMPDATABASE	BIT,@NLOTNO INT,
			@BNEGSTOCKFOUND BIT,
			@CPSID VARCHAR(22),
			@CNEXTACCODE CHAR(10),@CNEXTBILLNO VARCHAR(30),@CSTATUSMSG VARCHAR(1000),
			@CFIRSTDNNO VARCHAR(20),@CLASTDNNO VARCHAR(20),@NMULTIDNCNT INT,@CNEXTFORMID CHAR(7),@CCURLOCID VARCHAR(5),
			@CBATCHNOVAL VARCHAR(10),@CDNACCODE CHAR(10),@NOPENINGBAL NUMERIC(14,2),@DDNDATE DATETIME,
			@NDNSUPPLIERAMOUNT NUMERIC(10,2),@BDRACCOUNTSTATUSCHECKED BIT,@BCANCELLED BIT,@NTAXFLAG INT,
			@CCHECKACSTATUS BIT, @IDNTYPE INT,@NERFLAG INT,@CMEMONOPREFIX_ES VARCHAR(50),@NMEMO_TYPE NUMERIC(1,0),
			@BGENERATEAUTOSERIES BIT,@CTARGETLOCID CHAR(2),@NTARGETLOCTYPE INT,@NSOURCELOCTYPE INT,@NMODE INT,
			@BTARGETPURLOC BIT,@BPURLOC BIT,@BENFORCEBILLINGRULES BIT,@DSTARTTIME DATETIME,@NDN_TYPE INT,
			@CFILTERMULTIDN VARCHAR(500),@NEXCISEDUTY NUMERIC(14,4),@ERP_CONFIG VARCHAR(10),@BDONOTSENDCHALLANWITHOUTDISPATCH BIT  
    
    DECLARE @CTEMPDETAILTABLE_PRT VARCHAR(100)
	DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100),STATUSMSG VARCHAR(1000))
	DECLARE @STOCKCHECKC TABLE ( PRODUCT_CODE VARCHAR(50), DEPT_ID VARCHAR(2), QUANTITY NUMERIC(10,3),PRODUCT_UID VARCHAR(100) )
    DECLARE @FILTER_SPID VARCHAR(50)
	SET @FILTER_SPID=' B.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
		
	SELECT @NSTEP = 0,@NMULTIDNCNT=0	-- SETTTING UP ENVIRONMENT

	SET @CTEMPDBNAME = ''
	
	SET	@NSTEP = 2
	
	SET @CMASTERTABLENAME	= 'PPC_RMM01106'
	SET @CDETAILTABLENAME	= 'PPC_RMD01106'
		
	SET @CTEMPMASTERTABLENAME	= 'PRT_PPC_RMM01106_UPLOAD'
	SET @CTEMPDETAILTABLENAME	= 'PRT_PPC_RMD01106_UPLOAD'
			
	SET @CTEMPMASTERTABLE	= @CTEMPDBNAME + @CTEMPMASTERTABLENAME
	SET @CTEMPDETAILTABLE	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME

	SET	@NSTEP = 3

	IF ISNULL(@CLOCID,'')=''
		SELECT TOP 1 @CLOCATIONID	= [VALUE] FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'
	ELSE
		SELECT @CLOCATIONID=@CLOCID
		
	SELECT TOP 1 @CHODEPTID = [VALUE] FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'		
	
	SELECT TOP 1 @CCHECKACSTATUS=VALUE FROM CONFIG WHERE  CONFIG_OPTION='CHECK_SUPPLIER_BALANCE'
	SET @CCHECKACSTATUS=ISNULL(@CCHECKACSTATUS,'')
	
	BEGIN TRY	

		BEGIN TRANSACTION

		IF @NUPDATEMODE=4
			GOTO LBLAPPROVEPRT
						
		 IF @NUPDATEMODE <> 3
			BEGIN		 			 
			SET @CCMD=N'SELECT TOP 1 @NDN_TYPE=DN_TYPE FROM '+@CTEMPMASTERTABLE +' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			EXEC SP_EXECUTESQL @CCMD,N'@NDN_TYPE INT OUTPUT',@NDN_TYPE OUTPUT
		 END  
      
		IF @NPRTMODE=2
			SET @CMEMONOPREFIX_ES=@CMEMONOPREFIX		
	
		IF @NUPDATEMODE = 3					
			GOTO LBLSTART

	
					
		IF OBJECT_ID('TEMPDB..#TMPDNSUPPLIER','U') IS NOT NULL
			DROP TABLE #TMPDNSUPPLIER
		
		SELECT AC_CODE,CONVERT(BIT,0) AS CANCELLED INTO #TMPDNSUPPLIER FROM LM01106 WHERE 1=2	
		
		SET @CCMD=N'DELETE FROM '+@CTEMPDETAILTABLE+' WHERE PRODUCT_CODE='''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
				
			
		LBLGENMULTIDN:
		DECLARE @CPRTCONFIGMODE VARCHAR(10)
		SET @CPRTCONFIGMODE=''
		SELECT TOP 1 @CPRTCONFIGMODE=VALUE FROM CONFIG WHERE CONFIG_OPTION='DN_TYPE'
		
		SET @CPRTCONFIGMODE=ISNULL(@CPRTCONFIGMODE,'')
		
		IF @NPRTMODE=2
		BEGIN	
			IF ISNULL(@CNEXTACCODE,'')=''
			BEGIN
				SET	@NSTEP = 4
				
									
				SET @CTEMPMULTIDNTABLENAME	= 'TEMP_RMD01106_MULTI_'+LTRIM(RTRIM(STR(@NSPID)))
					
				SET @CCMD=N'IF OBJECT_ID('''+@CTEMPDBNAME+@CTEMPMULTIDNTABLENAME+''',''U'') IS NOT NULL
								DROP TABLE 	'+@CTEMPDBNAME+@CTEMPMULTIDNTABLENAME
				EXEC SP_EXECUTESQL @CCMD

				SET @CCMD=N'IF OBJECT_ID('''+@CTEMPDBNAME+@CTEMPMULTIDNTABLENAME+'_ORG'',''U'') IS NOT NULL
								DROP TABLE 	'+@CTEMPDBNAME+@CTEMPMULTIDNTABLENAME+'_ORG'
				EXEC SP_EXECUTESQL @CCMD
								
				SET	@NSTEP = 5
				
				SET @CCMD=N'SELECT * INTO '+@CTEMPDBNAME+@CTEMPMULTIDNTABLENAME+' FROM '+@CTEMPDETAILTABLE +' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' '
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD

				SET @CCMD=N'SELECT * INTO '+@CTEMPDBNAME+@CTEMPMULTIDNTABLENAME+'_ORG FROM '+@CTEMPDETAILTABLE +' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' '
				EXEC SP_EXECUTESQL @CCMD

				-- GENERATING NEW MULTIPLE DEBIT NOTE BATCH NO		
				SET @NSAVETRANLOOP=0
				WHILE @NSAVETRANLOOP=0
				BEGIN
					SET	@NSTEP = 7
					EXEC GETNEXTKEY @CMASTERTABLENAME,'BATCH_NO',7,@CLOCATIONID, 1,@CFINYEAR,2, @CBATCHNOVAL OUTPUT   
					
					SET	@NSTEP = 10
					SET @CCMD=N'IF EXISTS ( SELECT BATCH_NO FROM PPC_RMM01106 WHERE BATCH_NO='''+@CBATCHNOVAL+''' 
											AND FIN_YEAR = '''+@CFINYEAR+''' )
									SET @NLOOPOUTPUT=0
								ELSE
									SET @NLOOPOUTPUT=1'
					PRINT @CCMD
					EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
				END

				IF @CBATCHNOVAL IS NULL  
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT BATCH NO....'	
					  GOTO END_PROC  		
				END

				SET @CCMD=N'SELECT DISTINCT B.AC_CODE,0 AS CANCELLED FROM '+@CTEMPDBNAME+@CTEMPMULTIDNTABLENAME+' A 
							JOIN SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE'
							
				INSERT #TMPDNSUPPLIER			
				EXEC SP_EXECUTESQL @CCMD			
			END
			
			SET	@NSTEP = 12
			
			SET @CNEXTACCODE=''
				
			SET @CCMD=N' SELECT TOP 1 @CNEXTACCODEOUT=B.AC_CODE,@CNEXTBILLNOOUT=B.INV_NO,@CNEXTFORMIDOUT=B.FORM_ID,
						 @NERFLAGOUT=B.ER_FLAG,@NLOTNO=A.LOT_NO
						 FROM '+@CTEMPDBNAME+@CTEMPMULTIDNTABLENAME+' A JOIN SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE'				
			EXEC SP_EXECUTESQL @CCMD,N'@CNEXTACCODEOUT CHAR(10) OUTPUT,@CNEXTBILLNOOUT VARCHAR(30) OUTPUT,
							   @CNEXTFORMIDOUT CHAR(7) OUTPUT,@NERFLAGOUT INT OUTPUT,@NLOTNO INT OUTPUT',@CNEXTACCODEOUT=@CNEXTACCODE OUTPUT,
							   @CNEXTBILLNOOUT=@CNEXTBILLNO OUTPUT,@CNEXTFORMIDOUT=@CNEXTFORMID OUTPUT,
							   @NERFLAGOUT=@NERFLAG OUTPUT,@NLOTNO=@NLOTNO OUTPUT
			
			IF ISNULL(@CNEXTACCODE,'')=''
			BEGIN
				SET @CLASTDNNO=@CMEMONOVAL
				
				-- AFTER SUCCESSFUL SAVING , JUST DROP THE TEMP TABLES CREATED BY APPLICATION
				SET @NSTEP = 14
				DELETE FROM PRT_RMM01106_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
				DELETE FROM PRT_RMD01106_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
				
				GOTO END_PROC
			END
			
			SET	@NSTEP = 15
			
			SET @NMULTIDNCNT=@NMULTIDNCNT+1
					
			SET @CCMD=N'DROP TABLE '+@CTEMPDETAILTABLE
			EXEC SP_EXECUTESQL @CCMD
			
			SET	@NSTEP = 17
			
			SET @CFILTERMULTIDN=(CASE WHEN @CPRTCONFIGMODE<>'2' THEN ' AND B.INV_NO='''+@CNEXTBILLNO+'''' ELSE ' AND B.FORM_ID='''+@CNEXTFORMID+'''' END)
			
			
			SET @CCMD=N'IF OBJECT_ID('''+@CTEMPDETAILTABLE_PRT+''',''U'') IS NOT NULL
								DROP TABLE 	'''+@CTEMPDETAILTABLE_PRT+''''
			EXEC SP_EXECUTESQL @CCMD

			SET @CCMD=N'SELECT A.* INTO '+@CTEMPDETAILTABLE_PRT+' FROM '+@CTEMPDBNAME+@CTEMPMULTIDNTABLENAME+' A 
						JOIN PPC_SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE
						WHERE B.AC_CODE='''+@CNEXTACCODE+''' AND ((ER_FLAG IN (0,1) AND '+LTRIM(STR(@NERFLAG))+' IN (0,1)) OR 
						ER_FLAG='+LTRIM(RTRIM(STR(@NERFLAG)))+')'+@CFILTERMULTIDN 
			PRINT @CCMD			
			EXEC SP_EXECUTESQL @CCMD
			
			EXEC UPDATEMASTERXN
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPDETAILTABLE_PRT
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CTEMPDETAILTABLENAME
			, @CKEYFIELD1	= @CKEYFIELD1
			, @BALWAYSUPDATE = 1
			,@CFILTERCONDITION=@FILTER_SPID
			
			SET	@NSTEP = 19
			
			SET @CCMD=N' DELETE FROM '+@CTEMPDBNAME+@CTEMPMULTIDNTABLENAME+' WHERE PRODUCT_CODE IN (SELECT PRODUCT_CODE FROM '+
					     @CTEMPDETAILTABLE+' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' )'
			EXEC SP_EXECUTESQL @CCMD
			
			SET	@NSTEP = 21
		
			
			IF ISNULL(@NDN_TYPE,0)<>2
			BEGIN
			SET @CCMD=N'UPDATE '+@CTEMPMASTERTABLE+' SET AC_CODE='''+@CNEXTACCODE+''',
						BATCH_NO='''+@CBATCHNOVAL+''',SUBTOTAL=B.SUBTOTAL,
						MEMO_TYPE='+LTRIM(RTRIM(STR(@NERFLAG)))+',
						OTHER_CHARGES=B.OTHER_CHARGES,
						TOTAL_AMOUNT=B.SUBTOTAL+B.OTHER_CHARGES,
						LOT_NO='+STR(@NLOTNO)+'  
 						FROM (SELECT SUM(A.RATE*INVOICE_QUANTITY) AS SUBTOTAL,SUM(QUANTITY) AS QUANTITY,
							  SUM(ISNULL(C.OTHER_CHARGES,0)*A.INVOICE_QUANTITY) AS OTHER_CHARGES
							  FROM '+@CTEMPDETAILTABLE+' A JOIN SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE
							  LEFT OUTER JOIN SKU_OH C ON C.PRODUCT_CODE=B.PRODUCT_CODE 
							   WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' ) B
							   WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' '						  						
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			END
		END
		ELSE
		BEGIN
			SET @CCMD=N'SELECT A.AC_CODE,0 AS CANCELLED FROM '+@CTEMPMASTERTABLE+' A  WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' '
						
			INSERT #TMPDNSUPPLIER			
			EXEC SP_EXECUTESQL @CCMD			
		END
		
		---- CHECK FOR OVERALL DEBIT BALANCE OF SUPPLIER BASED UPON WHICH 
		---- THAT SUPPLIER'S DEBIT NOTE WILL BE SAVED AS CANCELLED IN CASE OF MULTIPLE DEBITNOTES
		---- AND NOT ALLOWED TO SAVE IN CASE OF SINGLE DEBIT NOTE
		
		IF @CCHECKACSTATUS<>'1'  OR @BDRACCOUNTSTATUSCHECKED=1
			GOTO LBLSTART
			 
		SET @CCMD=N'SELECT TOP 1 @DDNDATEOUT=RM_DT FROM '+@CTEMPMASTERTABLE +'  WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
		EXEC SP_EXECUTESQL @CCMD,N'@DDNDATEOUT DATETIME OUTPUT',@DDNDATEOUT=@DDNDATE OUTPUT
		
		DECLARE SUPPLIERCUR CURSOR FOR SELECT AC_CODE FROM #TMPDNSUPPLIER
		OPEN SUPPLIERCUR
		FETCH NEXT FROM SUPPLIERCUR INTO @CDNACCODE
		WHILE @@FETCH_STATUS=0
		BEGIN
			SET @NOPENINGBAL=0
			
			IF @NPRTMODE=2
				
				SET @CCMD=N'SELECT @NDNSUPPLIERAMOUNTOUT= B.SUBTOTAL+B.TAX_AMOUNT+B.OTHER_CHARGES
							FROM (SELECT SUM(A.RATE*INVOICE_QUANTITY) AS SUBTOTAL,SUM(QUANTITY) AS QUANTITY,
							  SUM(ISNULL(A.ITEM_TAX_AMOUNT,0)+ISNULL(A.IGST_AMOUNT,0)+ISNULL(A.CGST_AMOUNT,0)+ISNULL(A.SGST_AMOUNT,0)) AS TAX_AMOUNT,
							  SUM(ISNULL(C.OTHER_CHARGES,0)*A.INVOICE_QUANTITY) AS OTHER_CHARGES
							  FROM '+@CTEMPDBNAME+@CTEMPMULTIDNTABLENAME+'_ORG A JOIN SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE
							  LEFT OUTER JOIN SKU_OH C ON C.PRODUCT_CODE=B.PRODUCT_CODE
							  WHERE B.AC_CODE='''+@CDNACCODE+''') B'						  						
			ELSE
				SET @CCMD=N'SELECT @NDNSUPPLIERAMOUNTOUT= TOTAL_AMOUNT FROM '+@CTEMPMASTERTABLE +'  WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			
			EXEC SP_EXECUTESQL @CCMD,N'@NDNSUPPLIERAMOUNTOUT NUMERIC(14,2) OUTPUT',@NDNSUPPLIERAMOUNTOUT=@NDNSUPPLIERAMOUNT OUTPUT			  
			
			IF @NOPENINGBAL+@NDNSUPPLIERAMOUNT>0
			BEGIN
				IF @NPRTMODE=2
					UPDATE #TMPDNSUPPLIER SET CANCELLED=1 WHERE AC_CODE=@CDNACCODE
				ELSE
				BEGIN
					SET @CERRORMSG='A/C BALANCE OF SUPPLIER GOING NEGATIVE :'+ISNULL(@CDNACCODE,'NULL DNACCODE')+'-'+
									ISNULL(@CLOCATIONID,'NULLLOCID')+'-'+
									ISNULL(CONVERT(VARCHAR,@DDNDATE,110),'NULLDATE')+'-'+LTRIM(RTRIM(STR(@NOPENINGBAL)))+'-'+
									LTRIM(RTRIM(STR(@NDNSUPPLIERAMOUNT)))+' .....CANNOT PROCEED' 	
					GOTO END_PROC
				END	
			END
			
			SET @BDRACCOUNTSTATUSCHECKED=1
			FETCH NEXT FROM SUPPLIERCUR INTO @CDNACCODE
		END
		CLOSE SUPPLIERCUR
		DEALLOCATE SUPPLIERCUR
		
		LBLSTART:
		
		SET @CERRORMSG			= ''
		SET @LDONOTUPDATESTOCK	= 0
		SET @CKEYFIELD1			= 'RM_ID'
		SET @CMEMONO			= 'RM_NO'
		SET @NMEMONOLEN			= LEN(@CMEMONOPREFIX)+6
		

LBLCHKCANCEL:	
		
		IF @NUPDATEMODE = 3 AND ISNULL(@CMEMOID,'') = ''
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' MEMO ID REQUIRED IF CALLED FROM CANCELLATION'
			GOTO END_PROC  		
		END
		
		SET @NSTEP = 26
		-- GETTING DEPT_ID FROM TEMP MASTER TABLE
		SET @CCMD = 'SELECT @CMEMODEPTID = LEFT(RM_NO,2) FROM ' 
					+ (CASE WHEN @NUPDATEMODE=3 THEN @CMASTERTABLENAME ELSE @CTEMPMASTERTABLE+' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+'''' END )
		EXEC SP_EXECUTESQL @CCMD, N'@CMEMODEPTID VARCHAR(2) OUTPUT', 
						   @CMEMODEPTID OUTPUT
		PRINT @CCMD
		IF (@CMEMODEPTID IS NULL )
		BEGIN
			  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE SAVED... INCORRECT PARAMETER'
			  GOTO END_PROC  		
		END
		
		SELECT @BGENERATEAUTOSERIES=0,@BENFORCEBILLINGRULES=0
		
		-- START UPDATING XN TABLES	
		IF @NUPDATEMODE = 1 -- ADDMODE	
		BEGIN	
			
			SET @NMODE=1
			SET @CTARGETLOCID=''
			
			
			IF @NPRTMODE=2
			BEGIN
				SET @CMEMONOPREFIX=@CMEMONOPREFIX_ES
			END
						
			-- GENERATING NEW DEBIT NOTE NO		
			SET @NSAVETRANLOOP=0
			WHILE @NSAVETRANLOOP=0
			BEGIN
				
				SET @NSTEP = 28		-- GENERATING NEW KEY

				EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX,1,
								@CFINYEAR,0, @CMEMONOVAL OUTPUT   
				
				PRINT @CMEMONOVAL
				SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+' 
										WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' 
										AND FIN_YEAR = '''+@CFINYEAR+''' )
								SET @NLOOPOUTPUT=0
							ELSE
								SET @NLOOPOUTPUT=1'
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
			END

			IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'	
				  GOTO END_PROC  		
			END

			SET @NSTEP = 30		-- GENERATING NEW ID

			-- GENERATING NEW JOB ORDER ID
			SET @CKEYFIELDVAL1 = @CLOCATIONID + @CFINYEAR+ REPLICATE('0',15-LEN(LTRIM(RTRIM(@CMEMONOVAL)))) + LTRIM(RTRIM(@CMEMONOVAL))
			IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
				  -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'
				  GOTO END_PROC
			END

			SET @NSTEP = 40		-- UPDATING NEW ID INTO TEMP TABLES

			-- UPDATING NEWLY GENERATED JOB ORDER NO AND JOB ORDER ID IN PIM AND PID TEMP TABLES
			SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' + 
						@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			EXEC SP_EXECUTESQL @CCMD
		
			SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			EXEC SP_EXECUTESQL @CCMD
			
			IF @NPRTMODE=2 AND ISNULL(@CFIRSTDNNO,'')=''
				SET @CFIRSTDNNO=@CMEMONOVAL

		END					-- END OF ADDMODE
		ELSE				-- CALLED FROM EDITMODE
		BEGIN				-- START OF EDITMODE
		
			SET @NSTEP = 50		-- GETTING ID INFO FROM TEMP TABLE

			-- GETTING JOB ORDER ID WHICH IS BEING EDITED
			SET @CCMD = 'SELECT @CKEYFIELDVAL1 = ' + @CKEYFIELD1 + ', @CMEMONOVAL = ' + @CMEMONO + ' FROM ' 
						+ (CASE WHEN @NUPDATEMODE=3 THEN @CMASTERTABLENAME + ' WHERE RM_ID = ''' + @CMEMOID + '''' 
								ELSE @CTEMPMASTERTABLE+' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+'''' END )

			EXEC SP_EXECUTESQL @CCMD, N'@CKEYFIELDVAL1 VARCHAR(50) OUTPUT, @CMEMONOVAL VARCHAR(50) OUTPUT', 
							   @CKEYFIELDVAL1 OUTPUT, @CMEMONOVAL OUTPUT
			IF (@CKEYFIELDVAL1 IS NULL ) OR (@CMEMONOVAL IS NULL )
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'
				  GOTO END_PROC  		
			END
			
			SET @NSTEP = 55		-- STORING OLD STATUS OF BARCODES 

			INSERT @STOCKCHECKC ( PRODUCT_CODE, DEPT_ID, QUANTITY,PRODUCT_UID )
			SELECT A.PRODUCT_CODE,LEFT( B.RM_NO,2) AS DEPT_ID, SUM(A.QUANTITY) AS QUANTITY ,A.PRODUCT_UID
			FROM PPC_RMD01106 A 
			JOIN PPC_RMM01106 B ON B.RM_ID=A.RM_ID
			JOIN PPC_SKU C ON C.PRODUCT_CODE =A.PRODUCT_CODE 
			JOIN ARTICLE D ON D.ARTICLE_CODE = C.ARTICLE_CODE 
			WHERE B.RM_ID = @CKEYFIELDVAL1 AND D.STOCK_NA = 0
			GROUP BY A.PRODUCT_CODE, LEFT( B.RM_NO,2),A.PRODUCT_UID
			
			IF @NUPDATEMODE = 3			
			BEGIN
			
				SET @NSTEP = 60
			
				-- UPDATING SENTTOHO FLAG
				SET @CCMD = N'UPDATE ' + @CMASTERTABLENAME + ' SET CANCELLED = 1,
							   LAST_UPDATE=GETDATE() 
							  WHERE ' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + ''''
				EXEC SP_EXECUTESQL @CCMD
	
			END
			
			ELSE
			BEGIN	
				SET @NSTEP = 65
				-- UPDATING SENTTOHO FLAG
				SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' SET LAST_UPDATE=GETDATE() WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
				EXEC SP_EXECUTESQL @CCMD
								
				
			END
			
			-- REVERTING BACK THE STOCK OF PMT W.R.T CURRENT ISSUE
			SET @NSTEP = 80		-- REVERTING STOCK
			
			PRINT 'DEBIT NOTE ID :'+@CKEYFIELDVAL1
			SET @IDNTYPE=1
						
			IF ISNULL(@IDNTYPE,1) <> 2
			BEGIN	
					
				EXEC UPDATEPMT_PPC 
					  @CXNTYPE			= 'PPC_PRT'
					, @CXNNO			= @CMEMONOVAL
					, @CXNID			= @CKEYFIELDVAL1
					, @NREVERTFLAG		= 1
					, @NALLOWNEGSTOCK	= 0
					, @NCHKDELBARCODES	= 1
					, @NUPDATEMODE		= @NUPDATEMODE
					, @CCMD				= @CCMDOUTPUT OUTPUT
					
				
		   END
			
			IF (@NUPDATEMODE = 3) 
			BEGIN
				IF @CCMDOUTPUT <> ''
				BEGIN
					SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR UPDATING THE STOCK STATUS IN PMT....'
					SET @BNEGSTOCKFOUND=1				
					EXEC SP_EXECUTESQL @CCMDOUTPUT
				END
					
				GOTO LBLVALIDATE
			END
		END					-- END OF EDITMODE

		SET @NSTEP = 95
		
		-- RECHECKING IF ID IS STILL LATER
		IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
			GOTO END_PROC
		END

		
		-- UPDATING MASTER TABLE (PIM01106) FROM TEMP TABLE
		SET @NSTEP = 100		-- UPDATING MASTER TABLE
			
		SET @CCMD=N'UPDATE '+@CTEMPMASTERTABLE+' SET DN_TYPE=1 WHERE DN_TYPE NOT IN (1,2) AND  SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
		EXEC SP_EXECUTESQL @CCMD

		SET @NSTEP=105
		
		SET @CCMD=N'UPDATE A  SET CANCELLED=B.CANCELLED,REMARKS=(CASE WHEN B.CANCELLED=1 THEN
					''CANCELLED IN MULTIPLE DEBIT NOTE SAVING DUE TO NET DEBIT BALANCE STANDING...'' ELSE REMARKS END)
					 FROM '+@CTEMPMASTERTABLE+' A
					JOIN #TMPDNSUPPLIER B ON A.AC_CODE=B.AC_CODE 
					WHERE A.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
		EXEC SP_EXECUTESQL @CCMD						
		
		SET @NSTEP=110
		
		SET @CCMD=N'SELECT @BCANCELLEDOUT=CANCELLED FROM '+@CTEMPMASTERTABLE+' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
		EXEC SP_EXECUTESQL @CCMD,N'@BCANCELLEDOUT BIT OUTPUT',@BCANCELLEDOUT=@BCANCELLED OUTPUT
		
		SET @NSTEP=125
		
		
		SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE + ' SET RM_ID = ''' + @CKEYFIELDVAL1 + ''' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' '
		EXEC SP_EXECUTESQL @CCMD
		
	    SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE + ' SET HSN_CODE=''0000000000'',GST_PERCENTAGE=0,IGST_AMOUNT=0,CGST_AMOUNT=0,SGST_AMOUNT=0,XN_VALUE_WITHOUT_GST=0,XN_VALUE_WITH_GST=0  WHERE ISNULL(HSN_CODE,'''')='''' AND  SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''  
		EXEC SP_EXECUTESQL @CCMD 
		
		SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' SET FREIGHT_HSN_CODE= CASE WHEN ISNULL(FREIGHT_HSN_CODE,'''')='''' THEN ''0000000000'' ELSE FREIGHT_HSN_CODE END,
		              OTHER_CHARGES_HSN_CODE= CASE WHEN ISNULL(OTHER_CHARGES_HSN_CODE,'''')='''' THEN ''0000000000'' ELSE OTHER_CHARGES_HSN_CODE END 
		              WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' '  
		EXEC SP_EXECUTESQL @CCMD 
			
		SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET PARTY_STATE_CODE=''00'' WHERE ISNULL(PARTY_STATE_CODE,'''')='''' AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
		EXEC SP_EXECUTESQL @CCMD 
		
		
		SET @NSTEP=126	
		SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE + ' SET BILL_LEVEL_TAX_METHOD=2 WHERE BILL_LEVEL_TAX_METHOD=0 AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
		EXEC SP_EXECUTESQL @CCMD
		
		
	  SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' SET 
	              OTHER_CHARGES_HSN_CODE=CASE WHEN OTHER_CHARGES=0 THEN ''0000000000'' ELSE OTHER_CHARGES_HSN_CODE END,
	              FREIGHT_HSN_CODE=CASE WHEN FREIGHT=0 THEN ''0000000000'' ELSE FREIGHT_HSN_CODE END
	              WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' '
	  EXEC SP_EXECUTESQL @CCMD
	  
	  SET @NSTEP=130
       
        SET @CCMD = N'UPDATE A SET RMMDISCOUNTAMOUNT=ROUND((CASE WHEN B.SUBTOTAL=0 THEN 0 ELSE (B.DISCOUNT_AMOUNT/B.SUBTOTAL)*(A.PURCHASE_PRICE*A.INVOICE_QUANTITY) END),2)
	    FROM ' + @CTEMPDETAILTABLE + ' A
	    JOIN '+@CTEMPMASTERTABLE+' B ON A.RM_ID=B.RM_ID AND A.SP_ID=B.SP_ID 
	    WHERE A.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' '
	    EXEC SP_EXECUTESQL @CCMD  
	    
		DECLARE @NTOTAL_DISCOUNT_AMOUNT NUMERIC(10,2)
		  SET @CCMD=N' SELECT   @NTOTAL_DISCOUNT_AMOUNT= ISNULL(DISCOUNT_AMOUNT,0)  FROM '+@CTEMPMASTERTABLE+' A  WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
		  EXEC SP_EXECUTESQL @CCMD,N'@NTOTAL_DISCOUNT_AMOUNT NUMERIC(10,2) OUTPUT ',@NTOTAL_DISCOUNT_AMOUNT=@NTOTAL_DISCOUNT_AMOUNT OUTPUT
		  PRINT @CCMD
   
		 IF ISNULL(@NTOTAL_DISCOUNT_AMOUNT,0)<>0
		  BEGIN
		               
			 DECLARE  @NITEM_DISCOUNT_AMOUNT NUMERIC(10,2),@DTSQL NVARCHAR(MAX),
			 @NTOTALDIFF NUMERIC(10,2),@CIN_VALUE NUMERIC(10,2),
			 @NNEWDIFF NUMERIC(10,2),@NPREVDIFF NUMERIC(10,2)
		        
			 SET @CCMD=N' SELECT  @NITEM_DISCOUNT_AMOUNT= SUM(ISNULL(RMMDISCOUNTAMOUNT,0))  FROM '+@CTEMPDETAILTABLE+' A WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			 EXEC SP_EXECUTESQL @CCMD,N'@NITEM_DISCOUNT_AMOUNT NUMERIC(10,2) OUTPUT ',@NITEM_DISCOUNT_AMOUNT=@NITEM_DISCOUNT_AMOUNT OUTPUT
			 PRINT @CCMD   
				        
			SET @NNEWDIFF=ABS( ISNULL(@NTOTAL_DISCOUNT_AMOUNT,0)-ISNULL(@NITEM_DISCOUNT_AMOUNT,0))
	        
			SET @NTOTALDIFF=ABS( ISNULL(@NTOTAL_DISCOUNT_AMOUNT,0)-ISNULL(@NITEM_DISCOUNT_AMOUNT,0))*100
	   
			IF ISNULL(@NTOTAL_DISCOUNT_AMOUNT,0)>ISNULL(@NITEM_DISCOUNT_AMOUNT,0)
			    SET @CIN_VALUE=.01
			ELSE
				SET @CIN_VALUE=-.01
				          
				       
			SET @CCMD=N';WITH CTE AS
			(SELECT A.*,SR=ROW_NUMBER() OVER (ORDER BY ROW_ID)
			 FROM  '+@CTEMPDETAILTABLE+' A WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+'''
			 ) 
				         
			UPDATE CTE SET RMMDISCOUNTAMOUNT=RMMDISCOUNTAMOUNT+'+RTRIM(LTRIM(STR(@CIN_VALUE,10,2)))+' WHERE SR<='''+STR(@NTOTALDIFF)+''''
		    EXEC SP_EXECUTESQL @CCMD
			PRINT @CCMD
				       
			       
		END  
		
		SET @NSTEP=135
		 
		-- SELECT @FILTER_SPID
		EXEC UPDATEMASTERXN
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPMASTERTABLENAME
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CMASTERTABLENAME
			, @CKEYFIELD1	= @CKEYFIELD1
			, @BALWAYSUPDATE = 1
			,@CFILTERCONDITION=@FILTER_SPID

		-- UPDATING TRANSACTION TABLE (PID01106) FROM TEMP TABLE
		SET @NSTEP = 140		-- UPDATING TRANSACTION TABLE

		-- UPDATING ROW_ID IN TEMP TABLES
		SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE + ' SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(40), NEWID())
					  WHERE LEFT(ROW_ID,5) = ''LATER'' AND  SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
		EXEC SP_EXECUTESQL @CCMD
		
		
	
		
		-- DELETING EXISTING ENTRIES FROM PID01106 TABLE WHERE ROW_ID NOT FOUND IN TEMPTABLE
		SET @NSTEP = 145		-- UPDATING TRANSACTION TABLE - DELETING EXISTING ENTRIES

		SET @CCMD = N'DELETE FROM ' + @CDETAILTABLENAME + ' 
					WHERE ' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''
					AND ROW_ID IN 
					(
						SELECT A.ROW_ID 
						FROM ' + @CDETAILTABLENAME + ' A 
						LEFT OUTER JOIN ' + @CTEMPDETAILTABLE + ' B ON A.ROW_ID = B.ROW_ID
						WHERE A.' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''
						AND  B.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+'''
						AND   B.ROW_ID IS NULL
					)'
		EXEC SP_EXECUTESQL @CCMD

		-- INSERTING/UPDATING THE ENTRIES IN PRD_JID TABLE FROM TEMPTABLE
		SET @NSTEP = 150		-- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES
		
		

		EXEC UPDATEMASTERXN
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPDETAILTABLENAME
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CDETAILTABLENAME
			, @CKEYFIELD1	= 'ROW_ID'
			, @BALWAYSUPDATE = 1
			,@CFILTERCONDITION=@FILTER_SPID

		SET @NSTEP=160

	
	
	
	
	DECLARE @CGSTCUTOFFDATE DATETIME,@GSTDATE DATETIME,@DMEMO_DT DATETIME
     SET @CGSTCUTOFFDATE='2017-07-01'
     
     SELECT @DMEMO_DT=RM_DT FROM PPC_RMM01106 WHERE RM_ID=@CKEYFIELDVAL1
    
	
    IF @CGSTCUTOFFDATE<>''
        SELECT @GSTDATE=CAST(@CGSTCUTOFFDATE AS DATETIME)
    
	IF @DMEMO_DT>=@GSTDATE
	BEGIN
	
	
	
		 DELETE FROM GST_TAXINFO_CALC WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
		 DELETE FROM GST_TAXINFO_CALC_OH WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
			--ARTICLE WISE
		 INSERT GST_TAXINFO_CALC	( PRODUCT_CODE, SP_ID, NET_VALUE,ROW_ID,TAX_METHOD,QUANTITY,HSN_CODE,MRP) 
		 SELECT '' AS PRODUCT_CODE
		, SP_ID=LTRIM(RTRIM(STR(@NSPID))),
		  NET_VALUE=(((A.RATE*A.QUANTITY )-(ISNULL(A.RMMDISCOUNTAMOUNT,0))					 ))  ,
		A.ROW_ID,A.BILL_LEVEL_TAX_METHOD,A.QUANTITY,
		CASE WHEN ISNULL(A.HSN_CODE,'') IN('','0000000000') THEN  ISNULL(SKU.HSN_CODE,'000000000') ELSE ISNULL(A.HSN_CODE,'000000000') END AS HSN_CODE,SKU.MRP
		FROM PPC_RMD01106 A 
		JOIN PPC_RMM01106 B ON A.RM_ID =B.RM_ID 
		JOIN PPC_SKU SKU ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
		AND B.RM_ID=@CKEYFIELDVAL1
					
					--FOR OVER HEADS
		INSERT GST_TAXINFO_CALC_OH	( SP_ID, FREIGHT, OTHER_CHARGES, INSURANCE, PACKING,OH_TAX_METHOD,DO_NOT_CALC_GST_OH)
		SELECT 	 SP_ID=LTRIM(RTRIM(STR(@NSPID))) ,A.FREIGHT , A.OTHER_CHARGES, 0 AS INSURANCE, 0 AS  PACKING ,ISNULL(OH_TAX_METHOD,0) ,ISNULL(DO_NOT_CALC_GST_OH,0)
		FROM PPC_RMM01106  A 
		WHERE A.RM_ID=@CKEYFIELDVAL1
		
		
		
		DECLARE @CPARTY_GSTN_NO VARCHAR(20),@BREGISTERED BIT,@CPARTYSTATECODE VARCHAR(10)	
		
		SELECT TOP 1 @CPARTY_GSTN_NO=AC_GST_NO,@CPARTYSTATECODE=B.AC_GST_STATE_CODE,@BREGISTERED=REGISTERED_GST_DEALER
		FROM PPC_RMM01106  A JOIN LMP01106 B ON A.AC_CODE=B.AC_CODE 
		WHERE A.RM_ID=@CKEYFIELDVAL1	
		
		UPDATE PPC_RMM01106 SET PARTY_STATE_CODE=@CPARTYSTATECODE WHERE RM_ID=@CKEYFIELDVAL1
		 
		 
		EXEC SP3S_GST_TAX_CAL 'PPC_PRT','',@DMEMO_DT,@NSPID,@CPARTYSTATECODE,0,@BREGISTERED,@CPARTY_GSTN_NO,@CERRORMSG OUTPUT 
		IF ISNULL(@CERRORMSG,'')<>''
		   GOTO END_PROC  
		   
	     UPDATE   A SET HSN_CODE=B.HSN_CODE,GST_PERCENTAGE=B.GST_PERCENTAGE,IGST_AMOUNT=B.IGST_AMOUNT,
	     CGST_AMOUNT=B.CGST_AMOUNT,SGST_AMOUNT=B.SGST_AMOUNT,
		 XN_VALUE_WITHOUT_GST=B.XN_VALUE_WITHOUT_GST,XN_VALUE_WITH_GST=B.XN_VALUE_WITH_GST
		 FROM  PPC_RMD01106  A
		 JOIN PPC_RMM01106 RMM ON A.RM_ID =RMM.RM_ID 
		 JOIN GST_TAXINFO_CALC B ON   A.ROW_ID=B.ROW_ID	
		 WHERE  RMM.RM_ID =@CKEYFIELDVAL1
		 AND B.SP_ID=@NSPID
			
			SET @NSTEP=200
			UPDATE A SET  FREIGHT_HSN_CODE=ISNULL(B.FREIGHT_HSN_CODE,'0000000000'),
			OTHER_CHARGES_HSN_CODE=ISNULL(B.OTHER_CHARGES_HSN_CODE,'0000000000'),
			FREIGHT_GST_PERCENTAGE=ISNULL(B.FREIGHT_GST_PERCENTAGE,0),OTHER_CHARGES_GST_PERCENTAGE=ISNULL(B.OTHER_CHARGES_GST_PERCENTAGE,0),
	
			FREIGHT_TAXABLE_VALUE=B.FREIGHT_TAXABLE_VALUE,
			FREIGHT_IGST_AMOUNT=(CASE WHEN ISNULL(ISIGST,0)=1 THEN B.FREIGHT_GST_AMOUNT ELSE 0 END),
			FREIGHT_CGST_AMOUNT=(CASE WHEN ISNULL(ISIGST,0)=0 THEN B.FREIGHT_GST_AMOUNT/2 ELSE 0 END),
			FREIGHT_SGST_AMOUNT=(CASE WHEN ISNULL(ISIGST,0)=0 THEN B.FREIGHT_GST_AMOUNT/2 ELSE 0 END),
			
			OTHER_CHARGES_TAXABLE_VALUE=B.OTHER_CHARGES_TAXABLE_VALUE,
			OTHER_CHARGES_IGST_AMOUNT=(CASE WHEN ISNULL(ISIGST,0)=1 THEN B.OTHER_CHARGES_GST_AMOUNT ELSE 0 END),
			OTHER_CHARGES_CGST_AMOUNT=(CASE WHEN ISNULL(ISIGST,0)=0 THEN B.OTHER_CHARGES_GST_AMOUNT/2 ELSE 0 END),
			OTHER_CHARGES_SGST_AMOUNT=(CASE WHEN ISNULL(ISIGST,0)=0 THEN B.OTHER_CHARGES_GST_AMOUNT/2 ELSE 0 END)
			FROM PPC_RMM01106  A WITH (NOLOCK)
			LEFT OUTER JOIN
			(SELECT @CKEYFIELDVAL1	AS RM_ID,* FROM  GST_TAXINFO_CALC_OH (NOLOCK) WHERE SP_ID=@NSPID) B ON A.RM_ID =B.RM_ID
			WHERE A.RM_ID=@CKEYFIELDVAL1	
		   
	END
	
	
		LBLUPDATEPMT:		
		IF @BCANCELLED=0
		BEGIN		
			-- UPDATING STOCK OF PMT W.R.T. CURRENT MEMO
				
				SET @NSTEP = 170		-- UPDATING PMT TABLE
				EXEC UPDATEPMT_PPC 
					  @CXNTYPE			= 'PRT'
					, @CXNNO			= @CMEMONOVAL
					, @CXNID			= @CKEYFIELDVAL1
					, @NREVERTFLAG		= 0
					, @NALLOWNEGSTOCK	= 0
					, @NCHKDELBARCODES	= 1
					, @NUPDATEMODE		= @NUPDATEMODE
					, @CCMD				= @CCMDOUTPUT OUTPUT					
				
		  
			IF @CCMDOUTPUT <> ''
			BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR UPDATING THE STOCK STATUS IN PMT....'
				PRINT @CCMDOUTPUT
				EXEC SP_EXECUTESQL @CCMDOUTPUT
				SET @BNEGSTOCKFOUND=1
				GOTO END_PROC
			END
			
			-- RECHECKING FOR NEGATIVE STOCK FOR OLD BARCODES
			IF @NUPDATEMODE <> 1
			BEGIN
				SET @NSTEP = 180		
				IF EXISTS ( SELECT A.PRODUCT_CODE FROM PPC_PMT A
							JOIN @STOCKCHECKC B ON A.PRODUCT_CODE = B.PRODUCT_CODE
												AND A.PRODUCT_UID = B.PRODUCT_UID
							WHERE A.QUANTITY_IN_STOCK < 0 )
				BEGIN
					SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR UPDATING THE STOCK STATUS IN PMT (DELETED ITEMS)...'
					GOTO END_PROC
				END
			END
		END

LBLRECALAMOUNT:
	
			
		SET @NSTEP = 190
		DECLARE @NSUBTOTAL NUMERIC(14,2),@NEXCLTAX NUMERIC(10,2)
							
		SET @NSTEP = 200
		-- UPDATING TOTALS IN RMM TABLE
		UPDATE A SET SUBTOTAL = ISNULL(B.SUBTOTAL,0),
		             TOTAL_QUANTITY=ISNULL(B.INVOICE_QUANTITY,0)
		FROM PPC_RMM01106 A LEFT OUTER JOIN
		( 	
			SELECT	RM_ID, SUM((CONVERT(NUMERIC(18,4),PURCHASE_PRICE)*INVOICE_QUANTITY)) AS SUBTOTAL, ---(INVOICE_QUANTITY*CONVERT(NUMERIC(18,4),FDN_RATE,0)))
			               SUM(QUANTITY) AS INVOICE_QUANTITY
			FROM PPC_RMD01106 
			WHERE RM_ID = @CKEYFIELDVAL1
			GROUP BY RM_ID  
		) B ON  A.RM_ID = B.RM_ID  
		WHERE A.RM_ID = @CKEYFIELDVAL1

		UPDATE PPC_RMM01106 SET DISCOUNT_AMOUNT =(SUBTOTAL*DISCOUNT_PERCENTAGE/100) WHERE RM_ID= @CKEYFIELDVAL1
		
		SET @NSTEP = 210
		SELECT @NSUBTOTAL=SUBTOTAL FROM PPC_RMM01106 WHERE RM_ID= @CKEYFIELDVAL1

		SELECT @NEXCLTAX=SUM(ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)) FROM PPC_RMD01106 WHERE RM_ID=@CKEYFIELDVAL1
		AND BILL_LEVEL_TAX_METHOD=1
		
		SET @NSTEP = 220		
		UPDATE PPC_RMM01106 SET ROUND_OFF=( (ROUND((SUBTOTAL +ISNULL(@NEXCLTAX,0) +  OTHER_CHARGES + 
		            CASE WHEN OH_TAX_METHOD=2 THEN 0 ELSE  ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_SGST_AMOUNT,0)+ISNULL(FREIGHT_IGST_AMOUNT,0)+ISNULL(FREIGHT_CGST_AMOUNT,0)+ISNULL(FREIGHT_SGST_AMOUNT,0) END +
					 FREIGHT ) - DISCOUNT_AMOUNT,0)-
					 (SUBTOTAL+ISNULL(@NEXCLTAX,0)+OTHER_CHARGES+
					 CASE WHEN OH_TAX_METHOD=2 THEN 0 ELSE ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_SGST_AMOUNT,0)+ISNULL(FREIGHT_IGST_AMOUNT,0)+ISNULL(FREIGHT_CGST_AMOUNT,0)+ISNULL(FREIGHT_SGST_AMOUNT,0) END +
					 FREIGHT-DISCOUNT_AMOUNT))
					 )
		WHERE RM_ID=@CKEYFIELDVAL1
			
		SET @NSTEP=230
			
			
		UPDATE PPC_RMM01106 SET TOTAL_AMOUNT=(SUBTOTAL +ISNULL(@NEXCLTAX,0) +  OTHER_CHARGES + 
		CASE WHEN OH_TAX_METHOD=2 THEN 0 ELSE  ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_SGST_AMOUNT,0)+ISNULL(FREIGHT_IGST_AMOUNT,0)+ISNULL(FREIGHT_CGST_AMOUNT,0)+ISNULL(FREIGHT_SGST_AMOUNT,0) END +
					 FREIGHT+ROUND_OFF) - DISCOUNT_AMOUNT
		WHERE RM_ID=@CKEYFIELDVAL1
	
LBLVALIDATE:		
		-- VALIDATING ENTRIES 
		SET @NSTEP = 240		-- VALIDATING ENTRIES
        
        IF @NUPDATEMODE IN(1,2)
		EXEC VALIDATEXN_PPC_PRT
			 @CXNID	= @CKEYFIELDVAL1
			, @CERRORMSG		= @CCMDOUTPUT OUTPUT

		IF @CCMDOUTPUT <> ''
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' DATA VALIDATION FAILED : ' + @CCMDOUTPUT + '...'
			GOTO END_PROC
		END
		SET @NSTEP = 250
		IF @NPRTMODE=2
		BEGIN	
			GOTO LBLGENMULTIDN
		END
		
		GOTO END_PROC
		
LBLAPPROVEPRT:
		
		SET @NSTEP = 260
		
		DECLARE @NAPPROVALSTATUS NUMERIC(1,0)
		
		SELECT @BPURLOC=PUR_LOC FROM LOCATION WHERE DEPT_ID=@CLOCATIONID
		
		IF @CMEMOID=''
		BEGIN
			SET @CERRORMSG='MEMO ID REQUIRED FOR DEBIT NOTE APPROVAL......CANNOT PROCEED'
			GOTO END_PROC
		END	
		SET @NSTEP = 270	
		IF @CLOCATIONID<>@CHODEPTID
		BEGIN
		
			SET @NSTEP = 280
			SELECT @NAPPROVALSTATUS=APPROVED FROM PPC_RMM01106 WHERE RM_ID=@CMEMOID
			
			IF @NAPPROVALSTATUS<>0
				SET @CERRORMSG='DEBIT NOTE IS ALREADY '+(CASE WHEN @NAPPROVALSTATUS=1 THEN ' MARKED FOR REQUEST OF APPROVAL FROM HO ' 
								WHEN @NAPPROVALSTATUS=2 THEN 'APPROVED BY HO' ELSE 'DISAPPROVED BY HO' END)
			ELSE					
				UPDATE PPC_RMM01106 SET  APPROVED=1,LAST_UPDATE=GETDATE()
			    WHERE RM_ID=@CMEMOID
			
		END		
 		SET @CKEYFIELDVAL1=@CMEMOID
		GOTO END_PROC

	END TRY
	BEGIN CATCH
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		
		GOTO END_PROC
	END CATCH

	
END_PROC:


	PRINT 'LAST STEP : '+STR(@NSTEP)	
	IF @NPRTMODE=2
		SET @CSTATUSMSG=LTRIM(RTRIM(STR(@NMULTIDNCNT)))+' NO. OF DEBIT NOTES ('+@CFIRSTDNNO+'-'+@CLASTDNNO+') GENERATED'
			
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')=''
		BEGIN
			UPDATE PPC_RMM01106 SET LAST_UPDATE=GETDATE() WHERE RM_ID=@CKEYFIELDVAL1
			COMMIT TRANSACTION
		END	
		ELSE
		    ROLLBACK	
	END	
	
	IF CURSOR_STATUS('GLOBAL','SUPPLIERCUR') IN (0,1)
	BEGIN
		CLOSE SUPPLIERCUR
		DEALLOCATE SUPPLIERCUR
	END
	
		INSERT @OUTPUT ( ERRMSG, MEMO_ID,STATUSMSG)
				VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,''),ISNULL(@CSTATUSMSG,'') )

		SELECT * FROM @OUTPUT	
		IF ISNULL(@CERRORMSG,'')=''
		BEGIN
			DELETE FROM PRT_PPC_RMM01106_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
			DELETE FROM PRT_PPC_RMD01106_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
		END
	
END--SAVETRAN_PRT
------------------------------------------------------ END OF PROCEDURE SAVETRAN_PRT
