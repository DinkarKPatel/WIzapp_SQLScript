CREATE  PROCEDURE SAVETRAN_ARC
(
	@NUPDATEMODE		NUMERIC(1,0),
	@NSPID				varchar(40),
	@CMEMONOPREFIX		VARCHAR(50),
	@CFINYEAR			VARCHAR(10),
	@CMACHINENAME		VARCHAR(100)='',
	@CWINDOWUSERNAME	VARCHAR(100)='',
	@CWIZAPPUSERCODE	VARCHAR(10)='0000000',
	@CMEMOID			VARCHAR(40)='',
	@DMEMODTPARA        DATETIME ='',
	@CXN_TYPE varchar(10)='',
	@bcheckcreditlimit bit=0
)
--WITH ENCRYPTION
AS
BEGIN
	-- @NUPDATEMODE:	1- NEW RETAIL SALE ADDED, 
	--					2- NOT APPLICABLE, 
	--					3- CURRENT RETAIL SALE CANCELLED, 
	--					4- EXISTING RETAIL SALE EDITED
	-- @CMEMOID:		MEMOID IS REQUIRED IF @NUPDATEMODE IS 3 (FROM CANCELLATION)
	
	DECLARE @CTEMPDBNAME			VARCHAR(100),
			@CMASTERTABLENAME		VARCHAR(100),
			@CDETAILTABLENAME2		VARCHAR(100),
			@CDETAILTABLENAME4		VARCHAR(100),
			@CDETAILTABLENAME5		VARCHAR(100),
			@CTEMPMASTERTABLENAME	VARCHAR(1000),
			@CTEMPDETAILTABLENAME2	VARCHAR(1000),
			@CTEMPDETAILTABLENAME3	VARCHAR(1000),
			@CTEMPDETAILTABLENAME4	VARCHAR(1000),
			@CTEMPDETAILTABLENAME5	VARCHAR(1000),
			@CTEMPDETAILTABLENAME6	VARCHAR(1000),
			@CTEMPDETAILTABLENAME7	VARCHAR(1000),
			@CTEMPMASTERTABLE		VARCHAR(1000),
			@CTEMPDETAILTABLE2		VARCHAR(1000),
			@CTEMPDETAILTABLE3		VARCHAR(100),
			@CTEMPDETAILTABLE4		VARCHAR(1000),
			@CTEMPDETAILTABLE5		VARCHAR(1000),
			@CTEMPDETAILTABLE6		VARCHAR(100),
			@CTEMPDETAILTABLE7		VARCHAR(100),
			@CERRORMSG				VARCHAR(500),
			@CKEYFIELD1				VARCHAR(50),
			@CKEYFIELDVAL1			VARCHAR(50),
			@CKEYFIELD1_DETAIL2		VARCHAR(50),
			@CMEMONO				VARCHAR(20),
			@NMEMONOLEN				NUMERIC(20,0),
			@CMEMONOVAL				VARCHAR(50),
			@CMEMODEPTID			VARCHAR(4),
			@CLOCATIONID			VARCHAR(4),
			@CHODEPTID				VARCHAR(4),
			@CCMD					NVARCHAR(4000),
			@CCMDOUTPUT				NVARCHAR(4000),
			@NSAVETRANLOOP			BIT,
			@NSTEP					varchar(10),
			@BNEGSTOCKFOUND			BIT,
			@CVALUSERARC			CHAR(2),
			@ARCTYPE                INT,
			@ARCT                   INT,
			@DMEMODT                DATETIME,
			@bFlag BIT,@bValidateGvThruWizclip BIT,@bValidateGvThruHO BIT,@bValidategvLocal BIT,@bValidationGvLocalFailed BIT,
			@CKEYSTABLE varchar(100),@EDIT_CLICKED int,@COL varchar(max),@CWHERECLAUSE VARCHAR(200),@CLOCID	VARCHAR(2)

	DECLARE @NCREDIT_LIMIT NUMERIC(10,2),@NCUSTBAL NUMERIC(14,2),@NBILLBALANCE NUMERIC(10,2),@NFINALBALANCE NUMERIC(14,2),
		        @CCUSTOMERCODE VARCHAR(25),@BCREDITLIMITCROSSED BIT
	
	SELECT @bValidateGvThruWizclip=0,@bValidateGvThruHO=0,@bValidategvLocal=0,@bValidationGvLocalFailed=0

	DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))
	
	DECLARE @nXnSpId VARCHAR(40)
	set @EDIT_CLICKED=0

	if @NUPDATEMODE IN (2,3)
	  set @EDIT_CLICKED=1

	SET @nXnSpId=convert(varchar(40),newid())

	SET @NSTEP = 5		-- SETTTING UP ENVIRONMENT
	EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 

	-- TEMPORARY DATABASE Discarded now onwards as per Meeting on 30-10-2020 mentioned in Client issues List
	SET @CTEMPDBNAME = ''
		
	SET @CMASTERTABLENAME	= 'ARC01106'
	SET @CDETAILTABLENAME2	= 'PAYMODE_XN_DET'
	SET @CDETAILTABLENAME4	= 'WSL_ORDER_ADV_RECEIPT'
	SET @CDETAILTABLENAME5	= 'ARC_GVSALE_DETAILS'

	SET @CTEMPMASTERTABLENAME	= 'ARC_ARC01106_UPLOAD'
	SET @CTEMPDETAILTABLENAME2	= 'ARC_paymode_xn_det_UPLOAD'
	SET @CTEMPDETAILTABLENAME3	='ARC_cmm_credit_receipt_UPLOAD'
	SET @CTEMPDETAILTABLENAME4	='ARC_WSL_ORDER_ADV_RECEIPT_UPLOAD'
	SET @CTEMPDETAILTABLENAME5	='ARC_arc_gvsale_details_UPLOAD'
	SET @CTEMPDETAILTABLENAME6	='ARC_WSL_CREDIT_RECEIPT_UPLOAD'
	
	
	

	SET @CTEMPMASTERTABLE	= @CTEMPDBNAME + @CTEMPMASTERTABLENAME
	SET @CTEMPDETAILTABLE2	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME2
	SET @CTEMPDETAILTABLE3	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME3
	SET @CTEMPDETAILTABLE4	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME4
	SET @CTEMPDETAILTABLE5	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME5
	SET @CTEMPDETAILTABLE6	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME6
	
	IF @CXN_TYPE='HBD'
	   SET @CDETAILTABLENAME4='HBD_RECEIPT'
	
	
	SET @CERRORMSG			= ''
	--SET @LDONOTUPDATESTOCK	= 0
	SET @CKEYFIELD1			= 'ADV_REC_ID'

	SET @CKEYFIELD1_DETAIL2	= 'MEMO_ID'

	SET @CMEMONO			= 'ADV_REC_NO'
	SET @NMEMONOLEN			= 10
	
	SET @BNEGSTOCKFOUND = 0
	
   SELECT @CLOCATIONID=location_Code  FROM ARC_ARC01106_UPLOAD WHERE SP_ID=@NSPID 
   SET @CLOCID=@CLOCATIONID
		
	SELECT @CHODEPTID		= [VALUE] FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'		

	SET @NSTEP = 10		-- GETTING DEPTID INFO FROM TEMP TABLE
	EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 
	BEGIN TRY
		
 
	IF @EDIT_CLICKED=1	
	 BEGIN
		   IF @CMEMOID=''
		   SELECT @CMEMOID=ADV_REC_ID FROM ARC_ARC01106_UPLOAD WHERE SP_ID=@NSPID 

			SET @COL='IF OBJECT_ID(''tempdb..[##ARC_'+@NSPID+'_'+@CMEMOID+']'',''U'') IS NOT NULL'+CHAR(13)+' DROP TABLE [##ARC_'+@NSPID+'_'+@CMEMOID+'];'+CHAR(13)+'SELECT ADV_REC_ID OLD_ADV_REC_ID,ADV_REC_ID NEW_ADV_REC_ID,'
			SELECT @COL=COALESCE(@COL,'')+FIELD_NAME+' OLD_'+FIELD_NAME+','+FIELD_NAME+' NEW_'+FIELD_NAME+',' FROM XN_AUDIT_TRIAL_MST (NOLOCK) WHERE TABLE_NAME='ARC01106' AND TRIG='UPDATE' ORDER BY ORDER_ID
			SET @COL=LEFT(@COL,LEN(@COL)-1)+CHAR(13)+'INTO [##ARC_'+@NSPID+'_'+@CMEMOID+']'+CHAR(13)+'FROM ARC01106 (NOLOCK) WHERE Adv_rec_id='''+@CMEMOID+''';'
			PRINT @COL
			EXEC(@COL)
			
	END
		

	
	IF @NUPDATEMODE= 5	
			GOTO MEMODATE_UPDATE		
	else
	IF @NUPDATEMODE= 4
			GOTO UPDATE_PAYMODEONLY		


		SET @nStep=10.2
		IF EXISTS (SELECT TOP 1 adv_rec_id FROM  ARC_ARC01106_UPLOAD (NOLOCK) WHERE sp_id=@nSpId
			AND arc_type=2 AND arct<>1)
			UPDATE ARC_ARC01106_UPLOAD WITH (ROWLOCK) SET arct=1 WHERE sp_id=@nSpId
			AND arc_type=2 AND arct<>1

		IF @CWIZAPPUSERCODE <> '0000000' AND @NUPDATEMODE<>3
		BEGIN
			
			set @nStep=10.5
			EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 
			SELECT @CVALUSERARC= VALUE FROM USER_ROLE_DET A
			JOIN USERS B ON A.ROLE_ID=B.ROLE_ID WHERE FORM_NAME = 'FRMADVREC' AND FORM_OPTION = 'DO_NOT_ALLOW_EMPTY_BILL_NO' AND USER_CODE = @CWIZAPPUSERCODE

			IF ISNULL(@CVALUSERARC,'0')  = '1'
			BEGIN
				SET @CCMD = N'IF EXISTS (SELECT TOP 1 * FROM '+@CTEMPDBNAME+@CTEMPMASTERTABLENAME+' WHERE ARCT=1 AND ARC_TYPE=1 and sp_id='''+@NSPID +''' )
							  BEGIN
									IF EXISTS (SELECT TOP 1 * FROM '+@CTEMPDETAILTABLE3+' where sp_id='''+@NSPID +''')
										SET @CERRORMSG = ''''
									ELSE 
										SET @CERRORMSG = ''CAN NOT TAKE OUTSTANDING WITHOUT BILL''
									END
							  ELSE
									SET @CERRORMSG = '''''
					
				EXEC SP_EXECUTESQL @CCMD,N'@CERRORMSG VARCHAR(MAX) OUTPUT',@CERRORMSG OUTPUT
				
				IF ISNULL(@CERRORMSG,'') <> ''
					GOTO END_PROC
			END
		END

		IF @CWIZAPPUSERCODE <> '0000000' AND @NUPDATEMODE<>3 AND  OBJECT_ID(@CTEMPDETAILTABLENAME6,'U') IS NOT NULL
		BEGIN
			SET @NSTEP = 20
			EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

			SELECT @CVALUSERARC= VALUE FROM USER_ROLE_DET A
			JOIN USERS B ON A.ROLE_ID=B.ROLE_ID WHERE FORM_NAME = 'FRMADVREC' AND FORM_OPTION = 'DO_NOT_ALLOW_EMPTY_BILL_NO' AND USER_CODE = @CWIZAPPUSERCODE
			IF ISNULL(@CVALUSERARC,'0')  = '1'
			BEGIN
				SET @CCMD = N'IF EXISTS (SELECT TOP 1 * FROM '+@CTEMPDBNAME+@CTEMPMASTERTABLENAME+' WHERE ARCT=1 AND ARC_TYPE=1 AND ISNULL(AC_CODE,'''')<> ''0000000000'' and sp_id='''+@NSPID +''')
							  BEGIN
									IF EXISTS (SELECT TOP 1 * FROM '+@CTEMPDETAILTABLE6+' where sp_id='''+@NSPID +''')
										SET @CERRORMSG = ''''
									ELSE 
										SET @CERRORMSG = ''CAN NOT TAKE OUTSTANDING WITHOUT BILL''
									END
							  ELSE
									SET @CERRORMSG = '''''
					
				EXEC SP_EXECUTESQL @CCMD,N'@CERRORMSG VARCHAR(MAX) OUTPUT',@CERRORMSG OUTPUT
				
				IF ISNULL(@CERRORMSG,'') <> ''
					GOTO END_PROC
			END
		END	

					
		IF @NUPDATEMODE<>3
		BEGIN

      
			SET @NSTEP = 23
			EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
			IF EXISTS (SELECT TOP 1 adv_rec_id FROM ARC_arc_gvsale_details_UPLOAD A WITH (ROWLOCK) 
					   JOIN sku_gv_mst b (NOLOCK) ON a.gv_srno=b.gv_srno
					   WHERE sp_id=@nSpId AND LEFT(a.gv_srno,2)='WC')
				SET @bValidateGvThruWizclip=1	

			IF EXISTS (SELECT TOP 1 adv_rec_id FROM ARC_arc_gvsale_details_UPLOAD A WITH (ROWLOCK) 
					   JOIN sku_gv_mst b (NOLOCK) ON a.gv_srno=b.gv_srno
					   WHERE sp_id=@nSpId AND LEFT(a.gv_srno,2)<>'WC' AND ISNULL(a.gv_srno,'')<>'')
				SET @bValidateGvThruHO=1	
			
			IF @bValidateGvThruHO=1 AND @bValidateGvThruWizclip=1
			BEGIN
				SET @cErrormsg='Wizclip and Non-Wizcllip Gv(s) cannot be sold in One Memo..'
				GOTO END_PROC
			END
			
			IF @bValidateGvThruHO=1 
			BEGIN
				SET @NSTEP = 23.2
				EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
				IF EXISTS (SELECT dept_id FROM location (NOLOCK) WHERE dept_id=@CLOCATIONID AND 
						   (dept_id=@CHODEPTID OR isnull(server_loc,0)=1))
				BEGIN
					SET @NSTEP = 23.5
					EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
					SET @bValidategvLocal=1

					INSERT validate_arc_gvsale_upload	( gv_srno, sp_id ) 
					SELECT gv_srno, sp_id 
					FROM ARC_arc_gvsale_details_UPLOAD (NOLOCK) WHERE sp_id=@nSpId

					SET @NSTEP = 23.7
					EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

					EXEC SP3S_VALIDATE_GVSELLING_SINGLECHANNEL
					@NSPID=@nSpid,
					@bCalledfromSaveTran=1

					IF EXISTS (SELECT TOP 1 gv_srno FROM validate_arc_gvsale_upload (NOLOCK) 
							   WHERE sp_id=@nSpId AND ISNULL(errmsg,'')<>'')
					BEGIN
						SELECT TOP 1 @cErrormsg=errmsg FROM validate_arc_gvsale_upload (NOLOCK) 
						WHERE sp_id=@nSpId AND ISNULL(errmsg,'')<>''

						set @bValidationGvLocalFailed=1

						select * from validate_arc_gvsale_upload (NOLOCK) WHERE sp_id=@nSpId
						GOTO END_PROC
					END
				END
			END

				
			SET @NSTEP = 30
			EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

			EXEC SP_VALIDATEXN_BEFORESAVE 'ARC',@NSPID,'0000000',@NUPDATEMODE,@CCMDOUTPUT OUTPUT,@BNEGSTOCKFOUND OUTPUT
			IF ISNULL(@CCMDOUTPUT,'') <> ''
			BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' DATA VALIDATION ON TEMP DATA FAILED : ' + @CCMDOUTPUT + '...'
				GOTO END_PROC
			END

			if EXISTS (SELECT ADV_REC_ID FROM ARC_ARC01106_UPLOAD  a join custdym b (nolock) on a.CUSTOMER_CODE=b.customer_code where b.inactive =1 and sp_id=@NSPID)
			begin
			     SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + '  Inactive Customer can not  Allowed.. '
	            GOTO END_PROC  	
			end
		END

		SET @NSTEP = 32
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
		
		IF @NUPDATEMODE = 3 AND ISNULL(@CMEMOID,'') = ''
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' MEMO ID REQUIRED IF CALLED FROM CANCELLATION'
			GOTO END_PROC  		
		END
		
		IF @NUPDATEMODE = 5 AND ( ISNULL(@CMEMOID,'') = '' OR ISNULL(@DMEMODTPARA,'')='')
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' MEMO ID REQUIRED IF CALLED FROM CHANGED MEMO DATE'
			GOTO END_PROC  		
		END
		
		SET @NSTEP = 35
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

		-- GETTING DEPT_ID FROM TEMP MASTER TABLE
		SET @CCMD = 'SELECT @CMEMODEPTID = location_code  FROM ' 
					+ (CASE WHEN @NUPDATEMODE=3 THEN @CMASTERTABLENAME ELSE @CTEMPMASTERTABLE +' where sp_id ='''+@NSPID +''' ' END )
		EXEC SP_EXECUTESQL @CCMD, N'@CMEMODEPTID VARCHAR(4) OUTPUT', 
						   @CMEMODEPTID OUTPUT
		IF (@CMEMODEPTID IS NULL )
		BEGIN
			  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE SAVED... INCORRECT PARAMETER'
			  GOTO END_PROC  		
		END



			 --CHANGES ON 17.3.15
			DECLARE @PREFIX_USER_ALIAS_OS BIT,@USER_ALIAS CHAR(2),@USER_CODE CHAR(7)

         --CHANGES ON 17.3.15
         IF @NUPDATEMODE <> 3
          BEGIN
			SET @NSTEP = 40
			EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

             		SET @CCMD = 'SELECT @ARCTYPE = ARC_TYPE,@ARCT=ARCT,@DMEMODT=ADV_REC_DT,@USER_CODE=USER_CODE FROM ' 
					+ @CTEMPMASTERTABLE +' where sp_id ='''+@NSPID+''' ' 
		           EXEC SP_EXECUTESQL @CCMD, N'@ARCTYPE INT OUTPUT,@ARCT INT OUTPUT,@DMEMODT DATETIME OUTPUT,@USER_CODE CHAR(7) OUTPUT ', 
						   @ARCTYPE OUTPUT,@ARCT OUTPUT,@DMEMODT OUTPUT, @USER_CODE OUTPUT

          END
	
	

		-- START UPDATING XN TABLES	
		IF @NUPDATEMODE = 1 -- ADDMODE	
		BEGIN	

			SET @NSTEP = 42
			EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

			IF ISNULL(@CLOCATIONID,'')=''
			 BEGIN
				SET @CERRORMSG =' LOCATION ID CAN NOT BE BLANK  '  
				GOTO END_PROC    
			 END

		
			SET @CKEYSTABLE='KEYS_ARC_'+LTRIM(RTRIM(@CLOCID))

							   
			SELECT 	@PREFIX_USER_ALIAS_OS=ISNULL(PREFIX_USER_ALIAS_OS,0),@USER_ALIAS=ISNULL(USER_ALIAS,'') FROM USERS WHERE USER_CODE=@USER_CODE				   
		
			IF @ARCTYPE=1 AND @DMEMODT>='2015-04-01'
			BEGIN
				SET @NSTEP = 45
				EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
	            
				IF @ARCT=1
				BEGIN
				 IF @PREFIX_USER_ALIAS_OS=1 
					SET @CMEMONOPREFIX=@CLOCATIONID+'R'+@USER_ALIAS+'-'
					ELSE
					SET @CMEMONOPREFIX=@CLOCATIONID+'R-'
				END
	             
				ELSE
				IF @ARCT=2
				BEGIN
					 IF @PREFIX_USER_ALIAS_OS=1 
                 		SET @CMEMONOPREFIX=@CLOCATIONID+'A'+@USER_ALIAS+'-'
					 ELSE
                 		SET @CMEMONOPREFIX=@CLOCATIONID+'A-'
				END
			
				ELSE
				IF @ARCT=3
				BEGIN
					/*Rohit 05-12-2022 Against Ticket No : 12-0239 Pankaj Assigned with following remarks : 
					As discussed with sir , 
					Jab Repair from Customer ke through Other Changes lete hai to uske series mein S aana chaea, 
					abhi direct creation mein O aata hai Anydesk ID:-Pankaj
					*/

					--IF @PREFIX_USER_ALIAS_OS=1 
					--  SET @CMEMONOPREFIX=@CLOCATIONID+'O'+@USER_ALIAS+'-'
					--ELSE
					--  SET @CMEMONOPREFIX=@CLOCATIONID+'O-'


					IF @PREFIX_USER_ALIAS_OS=1 
					BEGIN
						IF @CXN_TYPE='HBD'
						BEGIN
							SET @CMEMONOPREFIX=@CLOCATIONID+'S'+@USER_ALIAS+'-'
						END
						ELSE
						BEGIN
							SET @CMEMONOPREFIX=@CLOCATIONID+'O'+@USER_ALIAS+'-'
						END
					END
					ELSE
					BEGIN
						IF @CXN_TYPE='HBD'
						BEGIN
							SET @CMEMONOPREFIX=@CLOCATIONID+'S-'
						END
						ELSE
						BEGIN
							SET @CMEMONOPREFIX=@CLOCATIONID+'O-'
						END
					END


				END
					
				ELSE
				IF @ARCT=4
				BEGIN
				   IF @PREFIX_USER_ALIAS_OS=1
				   SET @CMEMONOPREFIX=@CLOCATIONID+'G'+@USER_ALIAS+'-'
				   ELSE
				   SET @CMEMONOPREFIX=@CLOCATIONID+'G-'
				END
					
			END 
			IF @ARCTYPE=2 AND @DMEMODT>='2015-04-01'
			BEGIN
			 IF @PREFIX_USER_ALIAS_OS=1
				 SET @CMEMONOPREFIX=@CLOCATIONID+'P'+@USER_ALIAS+'-'
			 ELSE
				 SET @CMEMONOPREFIX=@CLOCATIONID+'P-'
			END
	         

				
				-- GENERATING NEW JOB ORDER NO		
				SET @NSAVETRANLOOP=0
				WHILE @NSAVETRANLOOP=0
				BEGIN
					SET @NSTEP = 50
					EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

					--EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,
					--				@CFINYEAR,0, @CMEMONOVAL OUTPUT   

					EXEC GETNEXTKEY_XNS @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,
								@CFINYEAR,0, @CKEYSTABLE,@CMEMONOVAL OUTPUT   

				
					PRINT @CMEMONOVAL
					SET @NSTEP = 52
					EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

					SET @CCMD=N'IF EXISTS ( SELECT TOP 1 '+@CMEMONO+' FROM '+@CMASTERTABLENAME+' (NOLOCK)
											WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' 
											AND FIN_YEAR = '''+@CFINYEAR+''' )
									SET @NLOOPOUTPUT=0
								ELSE
									SET @NLOOPOUTPUT=1'
					PRINT @CCMD
					EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
				END


				IF @CMEMONOVAL IS NULL OR @CMEMONOVAL LIKE '%LATER%'
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'	
					  GOTO END_PROC  		
				END

			SET @NSTEP = 55
			EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		


				-- GENERATING NEW JOB ORDER ID
				SET @CKEYFIELDVAL1 = @CLOCATIONID + RIGHT(@CFINYEAR,2)+REPLICATE('0', (22-LEN(@CLOCATIONID + RIGHT(@CFINYEAR,2)))-LEN(LTRIM(RTRIM(@CMEMONOVAL))))  + LTRIM(RTRIM(@CMEMONOVAL))

				IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
					  -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'
					  GOTO END_PROC
				END

				SET @NSTEP = 60
				EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

				-- UPDATING NEWLY GENERATED JOB ORDER NO AND JOB ORDER ID IN PIM AND PID TEMP TABLES
			
				SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' + 
							@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' where sp_id ='''+@NSPID+''''
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD
			
				--SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''''
				--PRINT @CCMD
				--EXEC SP_EXECUTESQL @CCMD

							SET @NSTEP = 65
			EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

				SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE2 + ' SET '+@CKEYFIELD1_DETAIL2+' = '''+@CKEYFIELDVAL1+''' where sp_id ='''+@NSPID+''''
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD

				SET @CCMD = 'UPDATE '+@CTEMPDETAILTABLE3+' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' where sp_id ='''+@NSPID+''''
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD
				
				IF OBJECT_ID(@CTEMPDETAILTABLENAME6,'U') IS NOT NULL
					BEGIN
		 		
						SET @NSTEP = 70
						EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

						SET @CCMD = 'UPDATE '+@CTEMPDETAILTABLE6+' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' where sp_id ='''+@NSPID+''''
						PRINT @CCMD
						EXEC SP_EXECUTESQL @CCMD
					END
		
				
			SET @NSTEP = 72
			EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

				SET @CCMD = 'UPDATE '+ @CTEMPDETAILTABLE4 +' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' where sp_id ='''+@NSPID+''''
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD

				SET @CCMD = 'UPDATE '+ @CTEMPDETAILTABLE5 +' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' where sp_id ='''+@NSPID+''''
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD
						
		END					-- END OF ADDMODE
		ELSE				-- CALLED FROM EDITMODE
		BEGIN				-- START OF EDITMODE
		
			SET @NSTEP = 75
			EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

			-- GETTING JOB ORDER ID WHICH IS BEING EDITED
			SET @CCMD = 'SELECT @CKEYFIELDVAL1 = ' + @CKEYFIELD1 + ', @CMEMONOVAL = ' + @CMEMONO + ' FROM '
						+ (CASE WHEN @NUPDATEMODE=3 THEN @CMASTERTABLENAME + ' WHERE ADV_REC_ID = ''' + @CMEMOID + '''' 
								ELSE @CTEMPMASTERTABLE +' where sp_id ='''+@NSPID+'''' END )
			
			EXEC SP_EXECUTESQL @CCMD, N'@CKEYFIELDVAL1 VARCHAR(50) OUTPUT, @CMEMONOVAL VARCHAR(50) OUTPUT', 
							   @CKEYFIELDVAL1 OUTPUT, @CMEMONOVAL OUTPUT
			IF (@CKEYFIELDVAL1 IS NULL ) OR (@CMEMONOVAL IS NULL )
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'
				  GOTO END_PROC  		
			END
			
			SET @NSTEP = 80
			EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

			--REVERT CREDIT balance

			 EXEC SP3S_UPDATE_CUSTOMERBALANCES @CKEYFIELDVAL1,'ARC',@CERRORMSG OUTPUT ,1

			
			EXEC UPDATEPMT_GV   
			   @CXNTYPE   = 'GVSLS'    
			 , @CXNID   = @CKEYFIELDVAL1  
			 , @NREVERTFLAG = 1
			 , @NUPDATEMODE = @NUPDATEMODE
			 , @CCMD    = @CCMDOUTPUT OUTPUT  

			
			IF @NUPDATEMODE = 3			
			BEGIN
				SET @NSTEP = 85
				EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

				-- UPDATING SENTTOHO FLAG
				SET @CCMD = N'UPDATE ' + @CMASTERTABLENAME + ' SET CANCELLED = 1,CARD_NO='''',CARD_ISSUE_DT= '''',LAST_UPDATE=GETDATE() ' + 
							N' WHERE ' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + ''''
				EXEC SP_EXECUTESQL @CCMD
				
				SET @NSTEP = 90
				EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

					---DELETING FROM WSL_ORDER_ADV_RECEIPT

				SET @CCMD=N'DELETE FROM '+@CDETAILTABLENAME4+' WHERE '+@CKEYFIELD1+'='''+@CKEYFIELDVAL1+''''
				EXEC SP_EXECUTESQL @CCMD

				UPDATE SKU_GV_MST WITH (ROWLOCK) SET DT_EXPIRY='' FROM ARC_GVSALE_DETAILS B 
				WHERE B.ADV_REC_ID=@CKEYFIELDVAL1 AND B.GV_SRNO=SKU_GV_MST.GV_SRNO 
											
				SET @NSTEP = 95
				EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
				
				UPDATE A SET DT_CARD_ISSUE='',DT_CARD_EXPIRY=''	,CARD_NO=''			  
                FROM CUSTDYM A
                JOIN ARC01106 B ON A.CUSTOMER_CODE =B.CUSTOMER_CODE 
                WHERE ADV_REC_ID= @CKEYFIELDVAL1 AND arct=5

			SET @NSTEP = 100
			EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
                         
				
				/*UNMERGED TILL MGMT*/	
				--REVERT THE CASH AMOUNT FOR THIS TRANSACTION IN TILL AMOUNT
				EXEC SP3S_UPDATESHIFT_AMOUNT
						 @CXN_TYPE='ARC'
						,@CXN_ID=@CKEYFIELDVAL1
						,@NMODE=2
						,@NUPDATEMODE=@NUPDATEMODE
						,@NSPID=@NSPID
						,@CERRMSGOUT=@CERRORMSG OUTPUT
										
				GOTO lblChkGv
			END
			
			ELSE
			BEGIN

			SET @NSTEP = 105
			EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
			
				-- UPDATING SENTTOHO FLAG
				DELETE FROM CMM_CREDIT_RECEIPT WHERE ADV_REC_ID=@CKEYFIELDVAL1

			SET @NSTEP = 110
			EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

				-- UPDATING SENTTOHO FLAG
				SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' SET SENT_TO_HO = 0, POSTEDINAC = 0,LAST_UPDATE=GETDATE()  where sp_id ='''+@NSPID+''''
				EXEC SP_EXECUTESQL @CCMD

			SET @NSTEP = 112
			EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
							
				/*UNMERGED TILL MGMT*/	
				--REVERT THE CASH AMOUNT FOR THIS TRANSACTION IN TILL AMOUNT
				EXEC SP3S_UPDATESHIFT_AMOUNT
						 @CXN_TYPE='ARC'
						,@CXN_ID=@CKEYFIELDVAL1
						,@NMODE=2		
						,@NUPDATEMODE=@NUPDATEMODE
						,@NSPID=@NSPID
						,@CERRMSGOUT=@CERRORMSG OUTPUT
						
				IF ISNULL(@CERRORMSG,'')<>''
					GOTO END_PROC	
			END

		END	
		
						-- END OF EDITMODE
						
			SET @NSTEP = 115
			EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

		
		-- RECHECKING IF ID IS STILL LATER
		IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
			GOTO END_PROC
		END

		/*UPDATING SHIFT ID TO NULL WHERE SHIFT ID IS BLANK, FOR CASES WHERE TILL BASED CASH MANAGEMENT 
		  SYSTEM IS NOT ENABLES....NO NEED TO CHECK OTHER CONDITIONS AS IT IS ALREADY BEING VALIDATED BY APPLICATION 
		  AS WELL AS SAVETRAN FOR ADD MODE*/
		SET @CCMD=N'UPDATE '+@CTEMPMASTERTABLE+' SET SHIFT_ID=(CASE WHEN ISNULL(SHIFT_ID,'''')='''' THEN NULL ELSE SHIFT_ID END),
					HSN_CODE=(CASE WHEN ISNULL(HSN_CODE,'''')='''' THEN ''0000000000'' ELSE HSN_CODE END) where sp_id ='''+@NSPID+''' '
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD		
		----- CALCULATE GST IF ADVANCE IS BEING TAKEN AGAINST ORDER

		

		IF ((@ARCTYPE=1 AND  @ARCT<>1) or @CXN_TYPE='HBD')
		BEGIN
			DECLARE @CGSTCUTOFFDATE VARCHAR(20),@DGSTDATE DATETIME,@BGSTMEMO BIT,@CORDERID VARCHAR(40)
			
			SET @NSTEP = 120
			EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

			SET @BGSTMEMO=0
			SELECT @CGSTCUTOFFDATE=VALUE FROM CONFIG WHERE CONFIG_OPTION ='GST_CUT_OFF_DATE'
		    
			IF @CGSTCUTOFFDATE<>''
			BEGIN
				SELECT @DGSTDATE=CAST(@CGSTCUTOFFDATE AS DATETIME)
			    
				IF @DMEMODT>=@DGSTDATE
					SET @BGSTMEMO=1
			END
			
			--AFTER DISCUSS WITH ARUN JI 12022022 GST CALCULATE ON HBD RECEIPT
			IF @BGSTMEMO=1 --AND @CXN_TYPE<>'HBD'
			BEGIN		
				SET @NSTEP = 125
				EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

				DECLARE @NPARTYTYPE INT ,@DORDERDT DATETIME,@CPARTYSTATECODE CHAR(2),@CPARTY_GSTN_NO VARCHAR(20)
				
				DELETE FROM GST_TAXINFO_CALC WHERE SP_ID=RTRIM(LTRIM(STR(@NSPID)))
				
				SET @NSTEP = 130
				EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

				
				SET @CCMD=N'SELECT TOP 1 @CORDERID=B.ORDER_ID FROM '+@CTEMPMASTERTABLE+' A
							JOIN '+@CTEMPDETAILTABLE4+' B ON A.ADV_REC_ID=B.ADV_REC_ID and a.sp_id=b.sp_id 
							where A.sp_id ='''+@NSPID+''' '			
				EXEC SP_EXECUTESQL @CCMD,N'@CORDERID VARCHAR(40) OUTPUT',@CORDERID OUTPUT			
				
				
				SET @NSTEP = 135
				EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

				--IN ADVANCE GST CALCULATE BEFORE DISCOUNT
				SET @CCMD=N'SELECT TOP 1 '''' AS PRODUCT_CODE,'+LTRIM(RTRIM(STR(@NSPID)))+' AS SP_ID,A.HSN_CODE,
				CASE WHEN A.ARC_TYPE=1 AND A.ARCT=2 THEN  A.AMOUNT ELSE A.NET_AMOUNT END AS NET_VALUE,
				OH_TAX_METHOD AS TAX_METHOD,A.ADV_REC_ID AS ROW_ID,1 AS QUANTITY,A.GST_PERCENTAGE FROM '+@CTEMPMASTERTABLE+' A
				where a.sp_id ='''+@NSPID+''' '
				
				INSERT GST_TAXINFO_CALC	( PRODUCT_CODE, SP_ID ,HSN_CODE,NET_VALUE,TAX_METHOD,ROW_ID,QUANTITY,GST_PERCENTAGE )  
				EXEC SP_EXECUTESQL @CCMD

				

				

				SET @NSTEP = 140
				EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
			
				----- GENERATE HSN CODE AND GST% IF BARCODES ARE GENERATED FOR ALL ENTRIES
				IF @CORDERID<>''
				BEGIN
					SET @CCMD=N'SELECT @NPARTYTYPE=C.MODE,@DORDERDT=C.ORDER_DT FROM '+@CTEMPMASTERTABLE+' A
								JOIN '+@CTEMPDETAILTABLE4+' B ON A.ADV_REC_ID=B.ADV_REC_ID and a.sp_id =b.sp_id 
								JOIN WSL_ORDER_MST C ON C.ORDER_ID=B.ORDER_ID 
								where a.sp_id ='''+@NSPID+''''
					EXEC SP_EXECUTESQL @CCMD,N'@NPARTYTYPE INT OUTPUT,@DORDERDT DATETIME OUTPUT',@NPARTYTYPE OUTPUT,@DORDERDT OUTPUT								
				END				
				ELSE
				BEGIN
					SET @CCMD=N'SELECT @NPARTYTYPE=(CASE WHEN A.AC_CODE NOT IN ('''',''0000000000'') THEN 1 ELSE 2 END) FROM '+@CTEMPMASTERTABLE+' A where a.sp_id ='''+@NSPID+''' '
					EXEC SP_EXECUTESQL @CCMD,N'@NPARTYTYPE INT OUTPUT',@NPARTYTYPE OUTPUT
				END
												
				SET @NSTEP = 91
				IF @CORDERID<>''
				BEGIN
					SET @NSTEP = 145
					EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

					IF @DORDERDT<@DGSTDATE
					BEGIN
						SET @CERRORMSG='CANNOT LINK ADVANCES WITH ORDERS PRIOR TO :'+@DGSTDATE
						GOTO END_PROC
					END
				END
				
				SET @NSTEP = 150
				EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
				
				IF @NPARTYTYPE=1
					SET @CCMD=N'SELECT @CPARTY_GSTN_NO=AC_GST_NO,@CPARTYSTATECODE=A.PARTY_STATE_CODE FROM '+@CTEMPMASTERTABLE+' A
								JOIN LMP01106 B ON A.AC_CODE=B.AC_CODE
								where a.sp_id ='''+@NSPID+''''
				ELSE
					SET @CCMD=N'SELECT @CPARTY_GSTN_NO=ISNULL(CUS_GST_NO,''''),@CPARTYSTATECODE=A.PARTY_STATE_CODE FROM '+@CTEMPMASTERTABLE+' A 
								JOIN CUSTDYM B ON A.CUSTOMER_CODE=B.CUSTOMER_CODE 
								where a.sp_id ='''+@NSPID+''' '
				
				EXEC SP_EXECUTESQL @CCMD,N'@CPARTY_GSTN_NO VARCHAR(50) OUTPUT,@CPARTYSTATECODE CHAR(2) OUTPUT',@CPARTY_GSTN_NO OUTPUT,@CPARTYSTATECODE OUTPUT
				
				--SELECT @DORDERDT,@CPARTYSTATECODE,@CPARTY_GSTN_NO
				
				SET @NSTEP = 152
				EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
				
							
			DECLARE @DONOT_CALCULATE_GST_ADV_RECEIPT VARCHAR(10),@NDONOTCALGST INT
			SET @NDONOTCALGST=0
			SELECT TOP 1 @DONOT_CALCULATE_GST_ADV_RECEIPT=VALUE  FROM CONFIG WHERE CONFIG_OPTION='DONOT_CALCULATE_GST_ADV_RECEIPT'
			
			IF ISNULL(@DONOT_CALCULATE_GST_ADV_RECEIPT,'')='1'
			BEGIN
				 IF ISNULL(@ARCTYPE,0)=1 AND ISNULL(@ARCT,0) IN (2,4)
				 BEGIN
				  SET @NDONOTCALGST=1
				 END
			END
				
				
			IF ISNULL(@NDONOTCALGST,0)=0
			BEGIN	
				SET @NSTEP = 154
				EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

				EXEC SP3S_GST_TAX_CAL
				@CXN_TYPE='ARC',
				@CMEMO_ID='',
				@DMEMO_DT=@DMEMODT,
				@NSPID=@NSPID,
				@CPARTYSTATE_CODE=@CPARTYSTATECODE,
				@CPARTY_GSTN_NO=@CPARTY_GSTN_NO,
				@CERRMSG=@CERRORMSG OUTPUT,
				@cLocationId=@CLOCID
				
				IF ISNULL(@CERRORMSG,'')<>''
					GOTO END_PROC
				
			END
						
				SET @NSTEP = 156
				EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

				SET @CCMD=N'UPDATE A SET GST_PERCENTAGE=B.GST_PERCENTAGE,IGST_AMOUNT=B.IGST_AMOUNT,CGST_AMOUNT=B.CGST_AMOUNT,SGST_AMOUNT=B.SGST_AMOUNT,
				                         TAXABLE_VALUE=CASE WHEN ISNULL(B.XN_VALUE_WITHOUT_GST,0)>0 THEN XN_VALUE_WITHOUT_GST ELSE B.NET_VALUE END
							FROM '+@CTEMPMASTERTABLE+' A
							JOIN GST_TAXINFO_CALC B ON A.ADV_REC_ID=B.ROW_ID and a.sp_id =b.sp_id 
							WHERE B.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
				EXEC SP_EXECUTESQL @CCMD
			END
		END
		
		SET @NSTEP = 158
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
		
		SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET HSN_CODE=''000000000'' WHERE ISNULL(HSN_CODE,'''')='''' and sp_id ='''+@NSPID+''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD

		SET @NSTEP = 160
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
		
		SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET TAXABLE_VALUE=NET_AMOUNT WHERE ISNULL(TAXABLE_VALUE,0)=0 AND ADV_REC_DT>=''2017-06-30'' and sp_id ='''+@NSPID+''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD	
		
		SET @CWHERECLAUSE='  SP_ID='''+ LTRIM(RTRIM((@NSPID)))+''''
						
		SET @NSTEP = 162
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

		EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPMASTERTABLENAME
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CMASTERTABLENAME
			, @CKEYFIELD1	= @CKEYFIELD1
			, @BALWAYSUPDATE = 1
			,@CFILTERCONDITION=@CWHERECLAUSE
			

		-- UPDATING TRANSACTION TABLE (PID01106) FROM TEMP TABLE
		SET @NSTEP = 165
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
		-- UPDATING TRANSACTION TABLE

		---- UPDATING ROW_ID IN TEMP TABLES - ARC_GVSALE_DETAILS
		SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE5 + ' SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(50), NEWID())
					  WHERE LEFT(ROW_ID,5) = ''LATER'' and sp_id ='''+@NSPID+''''
		EXEC SP_EXECUTESQL @CCMD

		SET @NSTEP = 167
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
		-- UPDATING TRANSACTION TABLE - PAYMODE_XN_DET

		-- UPDATING ROW_ID IN TEMP TABLES - PAYMODE_XN_DET
		SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE2 + ' SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(40), NEWID())
					  WHERE LEFT(ROW_ID,5) = ''LATER'' and  sp_id ='''+@NSPID+''''
		EXEC SP_EXECUTESQL @CCMD


		SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE2 + ' SET memo_id ='''+@CKEYFIELDVAL1+'''
					  WHERE MEMO_ID IN( ''LATER'','''') and  sp_id ='''+@NSPID+''''
		EXEC SP_EXECUTESQL @CCMD


		SET @NSTEP = 170
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
		-- DELETING FROM TRANSACTION TABLE - ARC_GVSALE_DETAILS
		
		---- ARC_GVSALE_DETAILS
		SET @CCMD = N'DELETE A FROM ' + @CDETAILTABLENAME5 + ' A WITH (ROWLOCK) 
					  LEFT OUTER JOIN ' + @CTEMPDETAILTABLE5 + ' B ON A.ROW_ID = B.ROW_ID and  B.sp_id ='''+@NSPID+'''
					  WHERE A.ADV_REC_ID = ''' + @CKEYFIELDVAL1 + '''
					  AND   B.ROW_ID IS NULL'
		EXEC SP_EXECUTESQL @CCMD

		SET @NSTEP = 172
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		


		UPDATE A SET DT_EXPIRY=DATEADD(DD,A.VALIDITY_DAYS,C.ADV_REC_DT) FROM SKU_GV_MST A 
		JOIN ARC_GVSALE_DETAILS B ON A.GV_SRNO=B.GV_SRNO 
		JOIN ARC01106 C ON C.ADV_REC_ID=B.ADV_REC_ID
		WHERE B.ADV_REC_ID=@CKEYFIELDVAL1
		
		SET @NSTEP = 175
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

		UPDATE A WITH (ROWLOCK) SET denomination=(CASE WHEN a.denomination=0 THEN b.denomination 
		ELSE a.denomination END)
		FROM SKU_GV_MST A 
		JOIN ARC_arc_gvsale_details_UPLOAD B (NOLOCK) ON A.GV_SRNO=B.GV_SRNO 
		JOIN ARC01106 C (NOLOCK) ON C.ADV_REC_ID=B.ADV_REC_ID
		WHERE B.ADV_REC_ID=@CKEYFIELDVAL1

		SET @NSTEP = 177
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		


		-- PAYMODE_XN_DET
		SET @CCMD = N'DELETE A FROM PAYMODE_XN_DET A 
					  LEFT OUTER JOIN ' + @CTEMPDETAILTABLE2 + ' B ON A.ROW_ID = B.ROW_ID and  sp_id ='''+@NSPID+'''
					  WHERE A.MEMO_ID = ''' + @CKEYFIELDVAL1 + '''
					  AND A.XN_TYPE=''ARC'' AND B.ROW_ID IS NULL'
		EXEC SP_EXECUTESQL @CCMD
		
		SET @NSTEP = 180
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
		-- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES
		
		-----UPDATE CUSTDYM NEW 22.6.15
		--@CTEMPMASTERTABLE
		
		SET @CCMD = N'UPDATE A SET 
					  CARD_NO=B.CARD_NO,DT_CARD_ISSUE=B.CARD_ISSUE_DT,
					  DT_CARD_EXPIRY=DATEADD (MONTH,EXP_MONTH_NO,B.CARD_ISSUE_DT),
					  CARD_CODE=B.CARD_CODE,
					  FLAT_DISC_PERCENTAGE_DURING_SALES=C.EOSS_DISC_PER,FLAT_DISC_PERCENTAGE=C.NORMAL_DISC_PER
                      FROM CUSTDYM A
                      JOIN ' + @CTEMPMASTERTABLE + ' B ON A.CUSTOMER_CODE =B.CUSTOMER_CODE 
                      JOIN BWD_MST C  ON C.MEMO_ID=B.CARD_CODE 
                      WHERE b.arct=5 and  b.sp_id ='''+@NSPID+''''
        PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD

		
		
		
		SET @NSTEP = 183
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

		-- ARC_GVSALE_DETAILS
		EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPDETAILTABLENAME5
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CDETAILTABLENAME5
			, @CKEYFIELD1	= 'ADV_REC_ID'
			, @CKEYFIELD2	= 'GV_SRNO'
			, @BALWAYSUPDATE = 1
			,@CFILTERCONDITION=@CWHERECLAUSE
	

		SET @NSTEP = 186
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		


	
		-- PAYMODE_XN_DET
		EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPDETAILTABLENAME2
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CDETAILTABLENAME2
			, @CKEYFIELD1	= 'ROW_ID'
			, @BALWAYSUPDATE = 1
			,@CFILTERCONDITION=@CWHERECLAUSE

		SET @NSTEP = 187
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
		
		IF EXISTS (SELECT TOP 1 ADV_REC_ID FROM ARC_cmm_credit_receipt_UPLOAD (NOLOCK) WHERE sp_id=@nspId
				   AND receipt_amount=0) 
			DELETE  FROM ARC_cmm_credit_receipt_UPLOAD with (ROWLOCK) WHERE sp_id=@nspId
			AND receipt_amount=0

		IF  EXISTS (SELECT TOP 1 a.ADV_REC_ID FROM ARC_cmm_credit_receipt_UPLOAD A (NOLOCK)
				   JOIN ARC_ARC01106_UPLOAD b (NOLOCK) ON  a.sp_id=b.sp_id	 WHERE a.sp_id=@nspId	
				   AND NOT (b.arct=1 AND b.arc_type=1)) 
			DELETE  FROM ARC_cmm_credit_receipt_UPLOAD with (ROWLOCK) WHERE sp_id=@nspId

		-- CREDIT BILLS ADJUSTMENT
		SET @NSTEP = 189
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

		EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN 
		  @CSOURCEDB	= @CTEMPDBNAME
		, @CSOURCETABLE = @CTEMPDETAILTABLENAME3 
		, @CDESTDB		= ''
		, @CDESTTABLE	= 'CMM_CREDIT_RECEIPT'
		, @CKEYFIELD1	= 'ADV_REC_ID'
		, @LINSERTONLY = 1
		,@CFILTERCONDITION=@CWHERECLAUSE
		
		
		IF OBJECT_ID(@CTEMPDETAILTABLENAME6,'U') IS NOT NULL
		BEGIN
		
		-- CREDIT BILLS ADJUSTMENT
		SET @NSTEP = 192
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

		EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN 
		  @CSOURCEDB	= @CTEMPDBNAME
		, @CSOURCETABLE = @CTEMPDETAILTABLENAME6 
		, @CDESTDB		= ''
		, @CDESTTABLE	= 'WSL_CREDIT_RECEIPT'
		, @CKEYFIELD1	= 'ADV_REC_ID'
		, @LINSERTONLY = 1
		,@CFILTERCONDITION=@CWHERECLAUSE
		
		END
				
		-- WSL_ORDER_ADV_RECEIPT


		IF @CXN_TYPE<>'HBD'
		BEGIN
			SET @NSTEP = 195
			EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

			EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPDETAILTABLENAME4 
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CDETAILTABLENAME4
			, @CKEYFIELD1	= @CKEYFIELD1
			, @BALWAYSUPDATE = 1
			,@CFILTERCONDITION=@CWHERECLAUSE

		END
		ELSE 
		BEGIN

			SET @NSTEP = 197
			EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
		    
			IF OBJECT_ID(@CTEMPDETAILTABLENAME4,'U') IS NOT NULL
			BEGIN
			   SET @CCMD = N'INSERT INTO HBD_RECEIPT(MEMO_ID,ADV_REC_ID,LAST_UPDATE)
			   SELECT ORDER_ID AS MEMO_ID,ADV_REC_ID,LAST_UPDATE
			   FROM '+@CTEMPDETAILTABLENAME4+' where sp_id ='''+@NSPID+''' '
			   PRINT @CCMD
			   EXEC SP_EXECUTESQL @CCMD

			END

		END
	
		
		SET @NSTEP = 200
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

		SET @CCMDOUTPUT = ''


	
		
		EXEC UPDATEPMT_GV   
		   @CXNTYPE   = 'GVSLS'    
		 , @CXNID   = @CKEYFIELDVAL1  
		 , @NUPDATEMODE = @NUPDATEMODE
		 , @CCMD    = @CCMDOUTPUT OUTPUT  

 
		
		IF ISNULL(@CCMDOUTPUT,'') <> ''  
		BEGIN  
			 PRINT @CCMDOUTPUT  
		       
			SET @NSTEP = 203
			EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

   
			 SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR UPDATING THE STOCK STATUS IN PMT....'  
			
			 SET @BNEGSTOCKFOUND=1      
			
			 EXEC SP_EXECUTESQL @CCMDOUTPUT  
			 GOTO END_PROC  
		END  
				 
		-- VALIDATING ENTRIES 
		SET @NSTEP = 205
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		


		

		EXEC VALIDATEXN
			  @CXNTYPE	= 'ARC'
			, @CXNID	= @CKEYFIELDVAL1
			, @NUPDATEMODE = @NUPDATEMODE			
			, @CCMD		= @CCMDOUTPUT OUTPUT
			,@CDEPT_ID=@CLOCATIONID 


		IF @CCMDOUTPUT <> ''
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' DATA VALIDATION FAILED : ' + @CCMDOUTPUT + '...'
			GOTO END_PROC
		END


		
		DECLARE @tBal TABLE (CUSTOMER_CODE VARCHAR(20),balance NUMERIC(14,2))

		INSERT @tBal (CUSTOMER_CODE,balance)
		EXEC SP3S_UPDATE_CUSTOMERBALANCES @CKEYFIELDVAL1,'ARC',@CERRORMSG output ,0

		SELECT @NBILLBALANCE=BALANCE FROM @TBAL

		IF @BCHECKCREDITLIMIT=1 and isnull(@nBillBalance,0)<>0
		BEGIN

			SELECT @CCUSTOMERCODE=A.CUSTOMER_CODE ,@NCREDIT_LIMIT=CUST_CREDIT_LIMIT,
				   @NCUSTBAL=CUST_BAL
			FROM CUSTDYM A (NOLOCK) 
			JOIN arc01106 B (NOLOCK) ON A.CUSTOMER_CODE=B.CUSTOMER_CODE
			WHERE b.adv_rec_id=@CKEYFIELDVAL1
		
			IF ISNULL(@NCREDIT_LIMIT,0)<>0
			BEGIN
		   

				
					set @nFinalbalance=@NCUSTBAL+isnull(@nBillBalance,0)

				   IF  @NCREDIT_LIMIT< @nFinalbalance and isnull(@nBillBalance,0)<>0
					 BEGIN
						   SET @BCREDITLimitCrossed=1
						   SET @CERRORMSG='PARTY CREDIT LIMIT IS BEING VIOLATED LIMIT : '+ltrim(rtrim(STR(@NCREDIT_LIMIT)))+
						   'Customer Balance :'+ltrim(rtrim(str(@NCUSTBAL)))+
						   'Current Bill Balance :'+ltrim(rtrim(str(@nBillBalance)))

					 GOTO END_PROC

				 END


		END
    END



		
		-- AFTER SUCCESSFUL SAVING , JUST DROP THE TEMP TABLES CREATED BY APPLICATION
		SET @NSTEP = 208
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

		--REVERT THE CASH AMOUNT FOR THIS TRANSACTION IN TILL AMOUNT
		EXEC SP3S_UPDATESHIFT_AMOUNT
				 @CXN_TYPE='ARC'
				,@CXN_ID=@CKEYFIELDVAL1
				,@NMODE=1
				,@NUPDATEMODE=@NUPDATEMODE
				,@NSPID=@NSPID
				,@CERRMSGOUT=@CERRORMSG OUTPUT
				
		IF ISNULL(@CERRORMSG,'')<>''
			GOTO END_PROC
			
		SET @NSTEP = 210
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

		UPDATE A SET DT_EXPIRY=DATEADD(DD,A.VALIDITY_DAYS,C.ADV_REC_DT) FROM SKU_GV_MST A 
		JOIN ARC_GVSALE_DETAILS B ON A.GV_SRNO=B.GV_SRNO 
		JOIN ARC01106 C ON C.ADV_REC_ID=B.ADV_REC_ID
		WHERE B.ADV_REC_ID=@CKEYFIELDVAL1 AND B.GV_SRNO=A.GV_SRNO 
			
		IF ISNULL(@CERRORMSG,'')<>''
			GOTO END_PROC
			
			
			       
		SET @NSTEP = 215
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
        
		UPDATE A SET FirstCardIssueDt=adv_rec_dt	  
        FROM CUSTDYM A
        JOIN ARC01106 B ON A.CUSTOMER_CODE =B.CUSTOMER_CODE 
        WHERE ADV_REC_ID= @CKEYFIELDVAL1 AND arct=5
        AND ISNULL(FirstCardIssueDt,'')=''

    
lblChkGv:

	SET @NSTEP = 220
	EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

    DECLARE @cGvMode VARCHAR(2),@cGvSrno VARCHAR(50)

	IF @NUPDATEMODE IN (1,2,3)
	BEGIN	
        
		IF @bValidateGvThruWizclip=1 OR @bValidateGvThruHO=1
		BEGIN
			SET @NSTEP = 225
			EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
			
			DELETE FROM wc_gv_validate WITH (ROWLOCK) WHERE memo_id=@CKEYFIELDVAL1 AND mode IN (1,2)
			
			INSERT INTO wc_gv_validate (gv_srno,mode,memo_id,customer_code,denomination,usage_type,memo_no,
										memo_dt,Dt_expiry,gv_AMOUNT)
			SELECT a.gv_srno,(CASE WHEN @NUPDATEMODE IN (1,2) THEN 1 ELSE 2 END) as mode,
			@CKEYFIELDVAL1 as memo_id,d.customer_code,b.denomination,ISNULL(c.gv_usage_type,1) as usage_type,
			c.adv_rec_no,c.adv_rec_dt,Dt_expiry ,a.denomination as gv_amount
			FROM arc_gvsale_details a (nolock)
			JOIN sku_gv_mst b (NOLOCK) ON a.gv_srno=b.gv_srno
			JOIN ARC01106 c (NOLOCK) ON c.adv_rec_id=a.adv_rec_id
			JOIN custdym d (NOLOCK) ON d.customer_code=c.customer_code
			WHERE a.adv_Rec_id=@CKEYFIELDVAL1 
		END

	END
		
MEMODATE_UPDATE:
	IF @NUPDATEMODE = 5	
	BEGIN
		SET @NSTEP = 227
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
		
		UPDATE ARC01106 SET ADV_REC_DT=@DMEMODTPARA WHERE ADV_REC_ID=@CMEMOID
	    SET @CKEYFIELDVAL1=@CMEMOID
		
		SET @CERRORMSG=''
	    EXEC VALIDATE_XN_DATA_FREEZE  'ARC',@CWIZAPPUSERCODE,@CMEMOID ,@DMEMODTPARA,@CERRORMSG OUTPUT
    
    	IF ISNULL(@CERRORMSG,'')<>''
			GOTO END_PROC
		
	END

UPDATE_PAYMODEONLY:
	IF @NUPDATEMODE=4
	BEGIN
		SET @NSTEP = 230
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

		SET @CWHERECLAUSE='  SP_ID='''+ LTRIM(RTRIM((@NSPID)))+''''

		SELECT TOP 1 @CKEYFIELDVAL1=adv_rec_id FROM ARC_ARC01106_UPLOAD (NOLOCK)
		WHERE sp_id=@nSpId

		SET @NSTEP = 230.5
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

		-- UPDATING ROW_ID IN TEMP TABLES - PAYMODE_XN_DET
		SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE2 + ' SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(40), NEWID())
						WHERE sp_id ='''+@NSPID+''' AND LEFT(ROW_ID,5) = ''LATER'''
		EXEC SP_EXECUTESQL @CCMD


		SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE2 + ' SET memo_id ='''+@CKEYFIELDVAL1+'''
						WHERE sp_id ='''+@NSPID+''' AND  MEMO_ID IN( ''LATER'','''')'
		EXEC SP_EXECUTESQL @CCMD

		-- PAYMODE_XN_DET
		SET @NSTEP = 233
		SET @CCMD = N'DELETE A FROM PAYMODE_XN_DET A 
					  LEFT OUTER JOIN ' + @CTEMPDETAILTABLE2 + ' B ON A.ROW_ID = B.ROW_ID and  sp_id ='''+@NSPID+'''
					  WHERE A.MEMO_ID = ''' + @CKEYFIELDVAL1 + '''
					  AND A.XN_TYPE=''ARC'' AND B.ROW_ID IS NULL'
		EXEC SP_EXECUTESQL @CCMD

		SET @NSTEP = 235
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

		-- PAYMODE_XN_DET
		EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPDETAILTABLENAME2
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CDETAILTABLENAME2
			, @CKEYFIELD1	= 'ROW_ID'
			, @BALWAYSUPDATE = 1
			,@CFILTERCONDITION=@CWHERECLAUSE

		SET @NSTEP = 237
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
			   

		EXEC VALIDATEXN
			  @CXNTYPE	= 'ARC'
			, @CXNID	= @CKEYFIELDVAL1
			, @NUPDATEMODE = @NUPDATEMODE			
			, @CCMD		= @CCMDOUTPUT OUTPUT


		IF @CCMDOUTPUT <> ''
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' DATA VALIDATION FAILED : ' + @CCMDOUTPUT + '...'
			GOTO END_PROC
		END

	END
	
END TRY
BEGIN CATCH
	SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
	-- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG, '''' AS MEMO_ID'
	
	GOTO END_PROC
END CATCH
	
END_PROC:

	
	IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')=''
	BEGIN
		SET @NSTEP = 240
		EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 
		
		IF @EDIT_CLICKED=1 
            EXEC SP3S_CAPTURE_AUDIT_TRAIL 'ARC',@CKEYFIELDVAL1,'','',@NSPID,@CMACHINENAME,@CWINDOWUSERNAME,@CWIZAPPUSERCODE,0,'1900-01-01',@EDIT_CLICKED

		UPDATE arc01106 WITH (ROWLOCk) SET last_update=getdate() WHERE adv_rec_id=@CKEYFIELDVAL1
		UPDATE arc01106 WITH (ROWLOCk) SET HO_SYNCH_LAST_UPDATE='' WHERE adv_rec_id=@CKEYFIELDVAL1
	END	
	
	IF ISNULL(@BNEGSTOCKFOUND,0)=0 and @bValidationGvLocalFailed=0
	BEGIN
		INSERT @OUTPUT ( ERRMSG, MEMO_ID)
			VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )

		SELECT *,ISNULL(@bValidateGvThruWizclip,0) ValidateGvThruWizclip
		,ISNULL(@bValidateGvThruHO,0) ValidateGvThruHO,isnull(@BCREDITLimitCrossed,0) as CREDITLIMITCROSSED FROM @OUTPUT	
	END	

	SET @NSTEP = 245
	EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		

	DELETE A FROM ARC_ARC01106_UPLOAD A WITH (ROWLOCK) WHERE A.SP_ID =@NSPID 
	DELETE A FROM ARC_paymode_xn_det_UPLOAD A WITH (ROWLOCK) WHERE A.SP_ID =@NSPID 
	DELETE A FROM ARC_cmm_credit_receipt_UPLOAD A WITH (ROWLOCK) WHERE A.SP_ID =@NSPID 
	DELETE A FROM ARC_WSL_ORDER_ADV_RECEIPT_UPLOAD A WITH (ROWLOCK) WHERE A.SP_ID =@NSPID 
	DELETE A FROM ARC_arc_gvsale_details_UPLOAD A WITH (ROWLOCK) WHERE A.SP_ID =@NSPID 
	DELETE A FROM ARC_WSL_CREDIT_RECEIPT_UPLOAD A WITH (ROWLOCK) WHERE A.SP_ID =@NSPID 
	delete from ARC_CMM_CREDIT_RECEIPT_UPLOAD where sp_id=@NSPID
	SET @NSTEP = 250
	EXEC SP_CHKXNSAVELOG 'ARC',@nStep,1,@nXnSpId,'',1	 		
	
END						-- SAVETRAN_ARC
------------------------------------------------------ END OF PROCEDURE SAVETRAN_ARC