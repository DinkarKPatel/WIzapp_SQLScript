CREATE PROCEDURE VALIDATEXN_PRT
 @CXNID VARCHAR(50),	
 @NUPDATEMODE INT,	
 @BCALLEDFORPRINT BIT=0, 		 
 @CERRORMSG VARCHAR(200) OUTPUT,
 @CDEPT_ID VARCHAR(5)/**//*Rohit 07-11-2024*/=''
-- WITH ENCRYPTION
 
AS
BEGIN
	DECLARE @CCMD NVARCHAR(4000),@NSUMPIDNET NUMERIC(14,2),@NSUBTOTAL NUMERIC(14,2),@NCALCTOTALAMOUNT NUMERIC(14,2),
	@NMSTTOTALAMOUNT NUMERIC(14,2), @NTAXVAL NUMERIC(14,2),@NCALCTAXVAL NUMERIC(14,2),@CPRODUCTCODE VARCHAR(50),
	@NCALCDISCOUNTAMT NUMERIC(14,2),@NDISCOUNTAMT NUMERIC(14,2),@CITEMNAME VARCHAR(100),
	@NCALCPURAMOUNT NUMERIC(14,2),@NPURAMOUNT NUMERIC(14,2),@NSUMSMTOTAL NUMERIC(14,2),@NSUMMMTOTAL	NUMERIC(14,2),
	@CCMDERRORMSG VARCHAR(2000),@NEXCISEDUTYAMOUNT NUMERIC(10,2),@CERRORPC VARCHAR(100),@DN_TYPE INT ,
	@NGstCessAmount NUMERIC(14,2),@bmanual_discount bit	
		
		
	DECLARE @CRMMTABLE TABLE ( RM_ID VARCHAR(50), RM_NO VARCHAR(50), RM_DT DATETIME, 
						   AC_CODE VARCHAR(10), FIN_YEAR VARCHAR(10), CANCELLED BIT,
						   SUBTOTAL NUMERIC(10,2), DISCOUNT_AMOUNT NUMERIC(10,2),
						   FREIGHT NUMERIC(10,2), OTHER_CHARGES NUMERIC(10,2),
						   ROUND_OFF NUMERIC(10,2), TOTAL_AMOUNT NUMERIC(10,2) ,
						   DISCOUNT_PERCENTAGE NUMERIC(10,2),MODE NUMERIC(1),DN_TYPE INT,MEMO_TYPE INT,
						   OTHER_CHARGES_IGST_AMOUNT NUMERIC(10,2),OTHER_CHARGES_CGST_AMOUNT  NUMERIC(10,2),OTHER_CHARGES_SGST_AMOUNT NUMERIC(10,2),
						   FREIGHT_IGST_AMOUNT  NUMERIC(10,2),FREIGHT_CGST_AMOUNT NUMERIC(10,2),FREIGHT_SGST_AMOUNT  NUMERIC(10,2),OH_TAX_METHOD NUMERIC(5,0),
						   shipping_ac_code varchar(10),SHIPPING_MODE int,manual_discount bit
						  
						   )
						   
   DECLARE @CRMDTABLE TABLE ( RM_ID VARCHAR(50), PRODUCT_CODE VARCHAR(50), GROSS_PURCHASE_PRICE NUMERIC(14,4),PURCHASE_PRICE NUMERIC(14,4),
							   QUANTITY NUMERIC(10,3), AMOUNT NUMERIC(14,4),ITEM_FORM_ID CHAR(7),ITEM_TAX_AMOUNT NUMERIC(14,4),
							   DISCOUNT_PERCENTAGE NUMERIC(10,2), DISCOUNT_AMOUNT NUMERIC(10,2),
							   EXCISE_DUTY_AMOUNT NUMERIC(10,2),BILL_LEVEL_TAX_METHOD INT,INVOICE_QUANTITY NUMERIC(10,3)
							   ,MRR_ID VARCHAR(50),FDN_RATE  NUMERIC(10,2),
							   IGST_AMOUNT NUMERIC(14,4),
							   CGST_AMOUNT NUMERIC(14,4),
                               SGST_AMOUNT NUMERIC(14,4) ,
                               BILL_DT DATETIME,
                               CESS_AMOUNT NUMERIC(14,4),
							   rfnet NUMERIC(14,4),
							   Gst_CESS_AMOUNT NUMERIC(14,4)
							   )


	IF ISNULL(@BCALLEDFORPRINT,0)=0 AND @NUPDATEMODE<>3
	BEGIN	
	   
	  declare @bdonotcheckdate bit
	  set @bdonotcheckdate=0

	  IF @NUPDATEMODE =2 
	  begin 
	   IF EXISTS (SELECT TOP 1 'U' FROM RMM01106 WHERE RM_ID=@CXNID AND CHARINDEX ('-',RM_NO)=0) 
	      SET @BDONOTCHECKDATE=1
	  end

		PRINT 'VALIDATING MEMO DATE'

		IF @BDONOTCHECKDATE=0
		EXEC SP_VALIDATE_MEMODATE_OPT
			@CXNTYPE='PRT',
			@CXNID=@CXNID,
			@CERRORMSG=@CERRORMSG OUTPUT
			
			IF @CERRORMSG<>''
				RETURN
	END		
	
		END_PROC:	
	END	
	   
	IF @NUPDATEMODE<>1	 
	BEGIN
		EXEC VALIDATEXN_PRT_BEFORE_EDIT @CXNID,0,@CCMD OUTPUT,@CCMDERRORMSG OUTPUT
		
		IF ISNULL(@CCMD,'')<>''
		BEGIN
			SET @CERRORMSG=@CCMD
			
			IF ISNULL(@CCMDERRORMSG,'')<>''
				EXEC SP_EXECUTESQL @CCMDERRORMSG
			
			GOTO END_PROC	
		END
	END
    
 
    
	INSERT @CRMMTABLE
	SELECT	RM_ID, RM_NO, RM_DT, AC_CODE, FIN_YEAR, CANCELLED, SUBTOTAL, DISCOUNT_AMOUNT,
			FREIGHT, OTHER_CHARGES, ROUND_OFF, TOTAL_AMOUNT, DISCOUNT_PERCENTAGE,MODE,DN_TYPE,MEMO_TYPE,
			OTHER_CHARGES_IGST_AMOUNT,OTHER_CHARGES_CGST_AMOUNT,OTHER_CHARGES_SGST_AMOUNT,
			FREIGHT_IGST_AMOUNT,FREIGHT_CGST_AMOUNT,FREIGHT_SGST_AMOUNT,OH_TAX_METHOD ,shipping_ac_code,SHIPPING_MODE,manual_discount
	FROM RMM01106 WHERE RM_ID = @CXNID
	
	

	INSERT @CRMDTABLE 
	SELECT	RM_ID, PRODUCT_CODE, GROSS_PURCHASE_PRICE, PURCHASE_PRICE, QUANTITY ,(INVOICE_QUANTITY*PURCHASE_PRICE) AS AMOUNT,
	ITEM_FORM_ID,ITEM_TAX_AMOUNT,DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT,EXCISE_DUTY_AMOUNT,BILL_LEVEL_TAX_METHOD
	,INVOICE_QUANTITY,MRR_ID ,FDN_RATE,
    IGST_AMOUNT,CGST_AMOUNT,SGST_AMOUNT,BILL_DT,CESS_AMOUNT,rfnet,Gst_CESS_AMOUNT
	FROM RMD01106 WHERE RM_ID = @CXNID 
			
			
	SET @CERRORMSG=''
	
	 IF @NUPDATEMODE<>3
    BEGIN
    
    
       DECLARE @DMEMO_DT DATETIME,@DINV_DT DATETIME,@CGSTCUTOFFDATE VARCHAR(10),@GSTDATE DATETIME,@BCALCULATEGSTPRT BIT
        SELECT @CGSTCUTOFFDATE=VALUE FROM CONFIG WHERE CONFIG_OPTION ='GST_CUT_OFF_DATE'
        
        SET @BCALCULATEGSTPRT=0
        SELECT @DMEMO_DT=RM_DT FROM @CRMMTABLE
		SELECT TOP 1 @DINV_DT=BILL_DT FROM @CRMDTABLE  
			 
        IF @CGSTCUTOFFDATE<>''
           SELECT @GSTDATE=CAST(@CGSTCUTOFFDATE AS DATETIME)
          
        
        IF @DMEMO_DT>'2017-06-30'
		SET @BCALCULATEGSTPRT =0
		ELSE
		SET @BCALCULATEGSTPRT =1
		
		--VALIDATE CALLING FOR GST
		IF @BCALCULATEGSTPRT=1
		BEGIN
		   EXEC SP3S_VALIDATE_GSTCALC 'PRT',@CXNID,@CERRORMSG OUTPUT,@CDEPT_ID
		   IF ISNULL(@CERRORMSG,'')<>''		
			RETURN
		END

		DECLARE @CALLOW_BLANK_BILLDETAILS VARCHAR(10)
		SELECT @CALLOW_BLANK_BILLDETAILS=VALUE  FROM CONFIG WHERE CONFIG_OPTION ='ALLOW_BLANK_BILLDETAILS'

			
			
		DECLARE @CBYPASS_DAYS_RESTRICTION_DN VARCHAR(10)
		SELECT @CBYPASS_DAYS_RESTRICTION_DN=VALUE  FROM CONFIG WHERE CONFIG_OPTION='BYPASS_DAYS_RESTRICTION_DN'
		IF ISNULL( @CBYPASS_DAYS_RESTRICTION_DN,'') NOT IN('','0') and ISNULL(@CALLOW_BLANK_BILLDETAILS,'')<>'1'
		BEGIN
		    
		IF EXISTS (SELECT TOP 1 'U' 	FROM @CRMDTABLE A JOIN @CRMMTABLE B ON A.RM_ID =B.RM_ID  WHERE DATEDIFF (DD,BILL_DT,RM_DT)>@CBYPASS_DAYS_RESTRICTION_DN)
		BEGIN
		   
			SET @CERRORMSG='This Item is not Eligible For Return Due to More Than'+RTRIM(LTRIM(STR(@CBYPASS_DAYS_RESTRICTION_DN))) +' Days Restriction'

			SELECT Product_Code,Quantity ,B.RM_DT,A.BILL_DT  ,@CBYPASS_DAYS_RESTRICTION_DN  AS DAYS_RESTRICTION_DN,
			       DATEDIFF (DD,BILL_DT,RM_DT) AS CALCUlATE_DAYS,
				   'This Item is not Eligible For Return Due to More Than'+RTRIM(LTRIM(STR(@CBYPASS_DAYS_RESTRICTION_DN))) +' Days Restriction Not Allow To Create DN.' AS ERRMSG
			FROM @CRMDTABLE A JOIN @CRMMTABLE B ON A.RM_ID =B.RM_ID  WHERE DATEDIFF (DD,BILL_DT,RM_DT)>@CBYPASS_DAYS_RESTRICTION_DN
			RETURN

		END

	    END

    END
    
	SELECT TOP 1 @DN_TYPE=DN_TYPE FROM @CRMMTABLE
	/*VALIDATING THAT IF MRR_ID IN RMD01106 IS BLANK,THEN PRODUCT_CODE SHOULD NOT EXISTS IN PID01106*/
	--IF EXISTS(SELECT TOP 1 'U' FROM @CRMDTABLE WHERE ISNULL(MRR_ID,'')='')
	--BEGIN
	--	IF EXISTS(SELECT TOP 1 'U' 
	--				FROM PIM01106 A
	--				 JOIN PID01106 B ON A.MRR_ID=B.MRR_ID
	--				  JOIN @CRMDTABLE C ON B.PRODUCT_CODE=C.PRODUCT_CODE
	--				   JOIN @CRMMTABLE D ON C.RM_ID=D.RM_ID AND D.MODE=A.INV_MODE
	--				   WHERE A.CANCELLED=0 AND D.MODE=1 AND A.INV_MODE=1 ) 
	--	SET @CERRORMSG='BARCODE FOUND IN PURCHASE,SO PURCHASE DETAILS CANNOT BE BLANK.PLEASE CHECK'
	--	RETURN 			
				
	--END
	IF ISNULL(@BCALLEDFORPRINT,0)=0
	BEGIN
	-- IF CANCELLED MEMO THEN RETURN	
	IF EXISTS(SELECT A.AC_CODE FROM @CRMMTABLE A WHERE  CANCELLED=1)
		RETURN
END		

	-- CHECKING IF PARTY IS BLANK OF INACTIVE
	IF ISNULL(@BCALLEDFORPRINT,0)=0
	BEGIN
	  IF EXISTS(SELECT A.AC_CODE FROM @CRMMTABLE A JOIN LMV01106  B ON A.AC_CODE=B.AC_CODE
			  WHERE   (B.AC_NAME='' OR B.INACTIVE=1) )
	BEGIN
		SET @CERRORMSG='BLANK OR INACTIVE PARTY NAME NOT ALLOWED....PLEASE CHECK'
		RETURN
	END
	END
	
	DECLARE @CHECK_SUPPLIER_DN VARCHAR(10)
	SELECT TOP 1 @CHECK_SUPPLIER_DN= value  FROM CONFIG WHERE   config_option='CHECK_SUPPLIER_DN' 
	
	IF ISNULL(@CHECK_SUPPLIER_DN,'')='1'
	BEGIN
	    
	    IF EXISTS( SELECT TOP 1 'U' FROM @CRMDTABLE A
	    JOIN @CRMMTABLE B ON A.RM_ID =B.RM_ID 
	    JOIN SKU (NOLOCK) ON A.PRODUCT_CODE =SKU.product_code 
	    WHERE B.AC_CODE <>SKU.ac_code and b.MODE =1 and isnull(DN_TYPE,0) IN(0,1) )
	    BEGIN
	        SET @CERRORMSG='Different Supplier of barcode Return NOT ALLOWED....PLEASE CHECK'
		    RETURN
	    END
	END	   
	

	IF EXISTS (SELECT TOP 1 'U' FROM @CRMMTABLE WHERE SHIPPING_MODE=3)  
 BEGIN  
    
	
   IF EXISTS( SELECT TOP 1 'U' FROM @CRMDTABLE A  
     JOIN @CRMMTABLE B ON A.RM_ID =B.RM_ID   
     JOIN SKU (NOLOCK) ON A.PRODUCT_CODE =SKU.product_code   
     WHERE B.SHIPPING_AC_CODE <>SKU.SHIPPING_FROM_AC_CODE and isnull(DN_TYPE,0) IN(0,1) )  
     BEGIN  

	      declare @cMissing_barcode varchar(max)
      
		   SELECT  @cMissing_barcode=ISNULL(@cMissing_barcode+',','')+QUOTENAME(a.Product_code)   FROM @CRMDTABLE A  
			 JOIN @CRMMTABLE B ON A.RM_ID =B.RM_ID   
			 JOIN SKU (NOLOCK) ON A.PRODUCT_CODE =SKU.product_code   
			 WHERE B.SHIPPING_AC_CODE <>SKU.SHIPPING_FROM_AC_CODE and isnull(DN_TYPE,0) IN(0,1) 
       
         SET @CERRORMSG='('+@cMissing_barcode+') Different OEM Supplier of barcode Return NOT ALLOWED....PLEASE CHECK'  
      RETURN  
     END  
  
 END  

	
	IF ISNULL(@BCALLEDFORPRINT,0)=0		AND @NUPDATEMODE IN (1,2)
	BEGIN
		-- CHECKING IF NOT RECORDS TO SAVE IN DETAIL
		IF NOT EXISTS(SELECT TOP 1 RM_ID FROM @CRMDTABLE ) AND NOT EXISTS (SELECT DN_TYPE FROM @CRMMTABLE WHERE DN_TYPE=2)
  		BEGIN
			SET @CERRORMSG='BLANK MEMO DETAILS CANNOT BE SAVED.....PLEASE CHECK'
			RETURN
		END 	
	
		IF EXISTS (SELECT RM_ID FROM @CRMMTABLE WHERE FIN_YEAR<>'01'+DBO.FN_GETFINYEAR(RM_DT))
  		BEGIN
			SET @CERRORMSG='MISMATCH BETWEEN RECEIPT DATE & FIN YEAR .....PLEASE CHECK'
			RETURN
		END 	
		
	END	

	-- BILL LEVEL SUBTOAL VALIDATION
	SELECT @NSUMMMTOTAL=SUM(PURCHASE_PRICE*INVOICE_QUANTITY) FROM @CRMDTABLE ---SUM(INVOICE_QUANTITY*ISNULL(FDN_RATE,0))
	SELECT @NSUBTOTAL =SUBTOTAL FROM @CRMMTABLE 
    
   
	-- CHECKING DISCOUNT AMOUNT AND DISCOUNT PERCENTAGE
	SELECT @NCALCDISCOUNTAMT = ROUND(SUBTOTAL*DISCOUNT_PERCENTAGE/100,0) FROM @CRMMTABLE
	
	SELECT @NDISCOUNTAMT = DISCOUNT_AMOUNT,@bmanual_discount=manual_discount FROM @CRMMTABLE
	
	IF 	ABS(@NDISCOUNTAMT-ISNULL(@NCALCDISCOUNTAMT,0))>1 and isnull(@bmanual_discount,0)=0
	BEGIN
		SET @CERRORMSG='MISMATCH BETWEEN EXPECTED DISCOUNT AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NCALCDISCOUNTAMT,0),10,2)))+') &
						UPDATED DISCOUNT AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NDISCOUNTAMT,0),10,2)))+')..... CANNOT SAVE '

		RETURN
	END
		
		---(INVOICE_QUANTITY*ISNULL(FDN_RATE,0))
		---(INVOICE_QUANTITY*ISNULL(FDN_RATE,0))
	--CHECKING TAX PERCENTAGE AND TAX AMOUNT
	IF EXISTS (SELECT TOP 1 RM_ID FROM @CRMMTABLE WHERE SUBTOTAL<>0)
	BEGIN
		DECLARE @TRMDTAX TABLE (PRODUCT_CODE VARCHAR(50),ITEM_TAX_VAL NUMERIC(10,2),CALC_TAX_VAL NUMERIC(10,2))
		
		INSERT @TRMDTAX
		SELECT A.PRODUCT_CODE,A.ITEM_TAX_AMOUNT,(((PURCHASE_PRICE*INVOICE_QUANTITY))-(((PURCHASE_PRICE*INVOICE_QUANTITY))*
		B.DISCOUNT_PERCENTAGE/100)+A.EXCISE_DUTY_AMOUNT)*A.ITEM_TAX_PERCENTAGE/
		(100+(CASE WHEN A.BILL_LEVEL_TAX_METHOD=1 THEN 0 ELSE ISNULL(A.ITEM_TAX_PERCENTAGE,0) END))
		FROM RMD01106 A JOIN RMM01106 B ON A.RM_ID=B.RM_ID
		WHERE A.RM_ID=@CXNID 
		--SELECT A.PRODUCT_CODE,A.ITEM_TAX_AMOUNT,((PURCHASE_PRICE*INVOICE_QUANTITY)-(PURCHASE_PRICE*INVOICE_QUANTITY*
		--B.DISCOUNT_PERCENTAGE/100)+A.EXCISE_DUTY_AMOUNT)*A.ITEM_TAX_PERCENTAGE/
		--(100+(CASE WHEN A.BILL_LEVEL_TAX_METHOD=1 THEN 0 ELSE ISNULL(A.ITEM_TAX_PERCENTAGE,0) END))
		--FROM RMD01106 A JOIN RMM01106 B ON A.RM_ID=B.RM_ID
		--WHERE A.RM_ID=@CXNID 
		
		

		IF EXISTS (SELECT TOP 1 PRODUCT_CODE FROM @TRMDTAX WHERE ABS(CALC_TAX_VAL-ITEM_TAX_VAL)>1)
		BEGIN
			SELECT TOP 1 @CPRODUCTCODE=PRODUCT_CODE,@NCALCTAXVAL=CALC_TAX_VAL,@NTAXVAL=ITEM_TAX_VAL
			FROM @TRMDTAX WHERE CALC_TAX_VAL<>ITEM_TAX_VAL
			
			SET @CERRORMSG='MISMATCH BETWEEN EXPECTED TAX AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NCALCTAXVAL,0),10,2)))+') &
							EXISTING TAX AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NTAXVAL,0),10,2)))+') FOR ITEM CODE :'+@CPRODUCTCODE+'..... CANNOT SAVE '

			RETURN
		END
	END

IF ISNULL(@BCALLEDFORPRINT,0)=0
	BEGIN
	-- CHECKING FOR ER_FLAG MARK W.R.T MASTER
	IF EXISTS(SELECT TOP 1 A.RM_ID FROM @CRMDTABLE A JOIN @CRMMTABLE B ON  A.RM_ID=B.RM_ID
			  JOIN SKU ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
			  WHERE(ISNULL(B.MEMO_TYPE,0)<>2 AND ISNULL(SKU.ER_FLAG,0)=2) OR (ISNULL(B.MEMO_TYPE,0)=2 AND ISNULL(SKU.ER_FLAG,0)<>2))
	BEGIN
		
		
		SELECT TOP 1 @CERRORPC=A.PRODUCT_CODE FROM @CRMDTABLE A JOIN @CRMMTABLE B ON  A.RM_ID=B.RM_ID
 	    JOIN SKU ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
		WHERE(ISNULL(B.MEMO_TYPE,0)<>2 AND ISNULL(SKU.ER_FLAG,0)=2) OR (ISNULL(B.MEMO_TYPE,0)=2 AND ISNULL(SKU.ER_FLAG,0)<>2)
			  
		SET @CERRORMSG='MEMO TYPE OF ITEM CODE :'+@CERRORPC+' DOES NOT MATCH WITH THAT OF MEMO....PLEASE CHECK'
		RETURN
	END
END
	-- CHECKING  MISMATCH BETWEEN FOR NET AMOUNT
	
	DECLARE @nSumRfNet NUMERIC(14,4)
	IF EXISTS (SELECT TOP 1 * FROM @CRMDTABLE)
	BEGIN
		SELECT @NTAXVAL=SUM(CASE WHEN BILL_LEVEL_TAX_METHOD=1 THEN ITEM_TAX_AMOUNT+ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CESS_AMOUNT,0) ELSE 0 END),
		@NEXCISEDUTYAMOUNT=SUM(EXCISE_DUTY_AMOUNT),@nSumRfNet = sum(rfnet) ,
		@NGstCessAmount=SUM(CASE WHEN BILL_LEVEL_TAX_METHOD=1 THEN ISNULL(GST_cess_amount,0)ELSE 0 END)
		FROM @CRMDTABLE
		
		SELECT @NCALCTOTALAMOUNT = (@NEXCISEDUTYAMOUNT+SUBTOTAL + ISNULL(@NTAXVAL,0) +isnull(@NGstCessAmount,0)+ ROUND_OFF + OTHER_CHARGES + FREIGHT) - DISCOUNT_AMOUNT
		 +CASE WHEN ISNULL(OH_TAX_METHOD,0)=2 THEN 0 ELSE (ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_SGST_AMOUNT,0))
	     +( ISNULL(FREIGHT_IGST_AMOUNT,0)+ISNULL(FREIGHT_CGST_AMOUNT,0)+ISNULL(FREIGHT_SGST_AMOUNT,0)) END 
		FROM @CRMMTABLE 

		SELECT @NMSTTOTALAMOUNT = TOTAL_AMOUNT FROM @CRMMTABLE 
		
		
		IF ABS(ISNULL(@NMSTTOTALAMOUNT,0)-ISNULL(@NCALCTOTALAMOUNT,0))>1
		BEGIN
			SET @CERRORMSG = ' MISMATCH BETWEEN EXPECTED NET AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NCALCTOTALAMOUNT,0),14,4)))+')
						 & EXISTING BILL LEVEL NET AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NMSTTOTALAMOUNT,0),14,4))) +')..... CANNOT SAVE '
			RETURN
		END	


		--rfnet calculate after saving
		--IF ABS(ISNULL(@NMSTTOTALAMOUNT,0)-ISNULL(@nSumRfNet,0))>0
		--BEGIN
		--	SET @CERRORMSG = ' MISMATCH BETWEEN SUM OF ITEM RFNET ('+LTRIM(RTRIM(STR(ISNULL(@nSumRfNet,0),14,4)))+')
		--				 & EXISTING BILL LEVEL NET AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NMSTTOTALAMOUNT,0),14,4))) +')..... CANNOT SAVE '
		--	RETURN
		--END	

	END

--******************************************** END OF PROCEDURE VALIDATEXN_PRT