CREATE PROCEDURE SP_APPLY_SLSDISCTAX
(
	@CPRODUCTCODEPARA   VARCHAR(50),
	@DXNDT			DATETIME,
	@BSALESSETUPINEFFECT BIT=0,
	@BESTEXMPTSALES BIT=0,
	@NCMMDISCAMT NUMERIC(10,2)=0.00,
	@NDISCPICKINGMODE INT=0,
	@CUSERCODE CHAR(7)='',
	@BAGSTPACKSLIP BIT=0,
	@CCUS_CODE VARCHAR(12)='',
	@BUPDATETAX BIT=0,
	@NWSLTAXMETHOD INT=0,
	@BCALLEDFROMMANUALBILLVALIDATE BIT=0,
	@CDTCODE CHAR(7)='',
	@BCALLEDFROMSAVETRAN BIT=0,
	@NSPID INT=0,
	@BCARDDISCOUNT BIT=0,
	@BCALLEDFROMPACKSLIP BIT=0,
	@cLocationId CHAR(4)=''
)
--WITH ENCRYPTION
AS 
BEGIN
--(dinkar) Replace  left(memoid,2) to Location_code 

	DECLARE @CFILTER				NVARCHAR(MAX),
			--@CCURFILTER			NVARCHAR(MAX),
			@CROWFILTER				NVARCHAR(MAX),
			@CCMD					NVARCHAR(MAX),
			@DISC_METHOD			NUMERIC(2),
			@DISCOUNT_PERCENTAGE	NUMERIC(10,2), 
			@DISCOUNT_PERCENTAGE2	NUMERIC(10,2),
			@DISCOUNT_PERCENTAGE3	NUMERIC(10,2),
			@EFFECTIVE_DISCOUNT		NUMERIC(10,2),
			@DISCOUNT_AMOUNT		NUMERIC(10,2),
			@NET_PRICE				NUMERIC(10,2),
			@FILTER_MODE			NUMERIC(2),
			@D_FILTER				NVARCHAR(MAX),
			@ROW_ID					VARCHAR(100),
			@LRETVAL				BIT,
			@CCMDPRODUCTCODE		VARCHAR(50),
			@NXNQTY					NUMERIC(10,2),
			@CBUNDLEID				VARCHAR(20),
			@CSLSTITLE				VARCHAR(50),
			@NMRP					NUMERIC(10,2),
			@NQTY					NUMERIC(10,2),
			@NNET					NUMERIC(10,2),
			@NDISCPCT NUMERIC(6,2),@NDISC NUMERIC(10,2),
			@NTAXCALCBASIS INT,@CLOCSSTMEMOID VARCHAR(40),@CSUBSECTIONCODE CHAR(7),@NBASEVALUE NUMERIC(10,2),
			@CFILTERJOINSTR VARCHAR(MAX),@CCMDROWID VARCHAR(50),@CTOPVARIABLE VARCHAR(100),@CCONFVAL VARCHAR(2),
			@COUTPUTVAR VARCHAR(50),@CAPPLYDISCTITLEWISE VARCHAR(2),@CCURDEPTID VARCHAR(5),@CHODEPTID VARCHAR(5),
			@CPRODUCTCODE VARCHAR(50),@CDENYEXCLTAX VARCHAR(10),@CUSERCODEPARA CHAR(7),@NAGEDAYS1 INT,@NAGEDAYS2 INT,
			@CADDFILTER VARCHAR(MAX),@CJOINEXPR VARCHAR(MAX),@DSLSFROMDT DATETIME,
			@BEXCHANGEBILL BIT,@BDONOTPROCESSFLATDISC BIT,@BSKIPVALUEBASEDSCHEME BIT,
			@CROUNDITEMLEVEL VARCHAR(2),@CROUNDITEMLEVEL1 VARCHAR(2),@CROUNDITEMLEVEL2 VARCHAR(2),
			@CAPPLYNEWEOSS VARCHAR(5)
	
	SELECT TOP 1 @CAPPLYNEWEOSS=VALUE FROM CONFIG (NOLOCK) WHERE  CONFIG_OPTION='APPLY_NEW_EOSS'
	
	IF @BUPDATETAX=0
		SET @CAPPLYNEWEOSS = '1' --- DATE : 22-09-15 NOW, ONWARDS NEW EOSS WILL BE ENFORCED AFTER IMPLEMENTATION OF NEW SAVETRAN_SLS_BEFORESAVE/AFTERSAVE
	ELSE
		SET @CAPPLYNEWEOSS = ''
	
	IF ISNULL(@CAPPLYNEWEOSS,'')='1'
	BEGIN
		
		PRINT 'ENTER EOSS APPLY DISC'
		
		EXEC SP3S_EOSS_APPLY_SLSDISCTAX
		@CPRODUCTCODEPARA=@CPRODUCTCODEPARA,
		@DXNDT=@DXNDT,
		@BSALESSETUPINEFFECT=@BSALESSETUPINEFFECT,
		@BESTEXMPTSALES=@BESTEXMPTSALES,
		@NCMMDISCAMT=@NCMMDISCAMT,
		@NDISCPICKINGMODE=@NDISCPICKINGMODE,
		@CUSERCODE=@CUSERCODE,
		@BAGSTPACKSLIP=@BAGSTPACKSLIP,
		@CCUSTOMERCODE=@CCUS_CODE,
		@CDTCODE=@CDTCODE,
		@BCALLEDFROMSAVETRAN=@BCALLEDFROMSAVETRAN,
		@NSPID=@NSPID,
		@BCARDDISCOUNT=@BCARDDISCOUNT,
		@BCALLEDFROMPACKSLIP=@BCALLEDFROMPACKSLIP,
		@cLocationId=@cLocationId
			
		RETURN
	END	
			
	
	DECLARE @CAPPLY_CUSTOMER_DISCOUNT VARCHAR(2),@CAPPLY_DISCOUNT_LEVEL VARCHAR(2),@NCUST_DISCONT NUMERIC(6,2)
	
	SELECT @BEXCHANGEBILL = 0,@BDONOTPROCESSFLATDISC=0
	 
	SET @CPRODUCTCODE=@CPRODUCTCODEPARA

	SET @CFILTERJOINSTR='JOIN SKU (NOLOCK) ON A.PRODUCT_CODE=SKU.PRODUCT_CODE
						 JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE
						 JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE
						 JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE
						 JOIN PARA1 (NOLOCK) ON SKU.PARA1_CODE = PARA1.PARA1_CODE
						 JOIN PARA2 (NOLOCK) ON SKU.PARA2_CODE = PARA2.PARA2_CODE
						 JOIN PARA3 (NOLOCK) ON SKU.PARA3_CODE = PARA3.PARA3_CODE
						 JOIN PARA4 (NOLOCK) ON SKU.PARA4_CODE = PARA4.PARA4_CODE
						 JOIN PARA5 (NOLOCK) ON SKU.PARA5_CODE = PARA5.PARA5_CODE
						 JOIN PARA6 (NOLOCK) ON SKU.PARA6_CODE = PARA6.PARA6_CODE
						 JOIN LMV01106 (NOLOCK) ON SKU.AC_CODE = LMV01106.AC_CODE
						 LEFT OUTER JOIN ARTICLE_FIX_ATTR ATTR  (NOLOCK) ON SKU.ARTICLE_CODE = ATTR.ARTICLE_CODE 
						LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE
						LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE
						LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE
						LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE
						LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE
						LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE
						LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE
						LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE
						LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE
						LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE
						LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE
						LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE
						LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE
						LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE
						LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE
						LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE
						LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE
						LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE
						LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE
						LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE
						LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE
						LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE
						LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE
						LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE
						LEFT OUTER JOIN ATTR25_MST AT25(NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE'

	PRINT 'SLSDISC-1'
	SET @CFILTER = N''

	SET @CROWFILTER = N' WHERE SKU.PRODUCT_CODE = ''' + @CPRODUCTCODE + ''''

	SELECT TOP 1 @CCONFVAL=LTRIM(RTRIM(VALUE)) FROM CONFIG WHERE CONFIG_OPTION='PICK_LAST_SLS_DISC'
	
	SELECT TOP 1 @CROUNDITEMLEVEL = VALUE  FROM CONFIG WHERE CONFIG_OPTION='SLS_ROUND_ITEM_NET'
	
	SET @CROUNDITEMLEVEL=ISNULL(@CROUNDITEMLEVEL,'')	
	
	DECLARE @OUTPUTC TABLE ( PRODUCT_CODE			VARCHAR(50),
							 SUB_SECTION_CODE		CHAR(7),
							 MRPVAL					NUMERIC(10,2),
							 ROW_ID					VARCHAR(50),
							 SLS_TITLE				VARCHAR(500),
							 SCHEME_ID				VARCHAR(20),
							 DISCOUNT_PERCENTAGE	NUMERIC(6,2),
							 DISCOUNT_AMOUNT		NUMERIC(10,2),
							 NET					NUMERIC(10,2),
							 TAX_PERCENTAGE			NUMERIC(7,3),
							 TAX_AC_CODE			CHAR(10),
							 SALE_AC_CODE			CHAR(10),
							 TAX_METHOD				INT,
							 CMD_ROW_ID				VARCHAR(50),
							 USER_CODE				CHAR(7),
							 TAX_AMOUNT				NUMERIC(10,2),
							 CMM_DISCOUNT_AMOUNT	NUMERIC(10,2),
							 RFNET					NUMERIC(10,2),
							 BILL_LEVEL_DISCOUNT_PERCENTAGE NUMERIC(7,3),
							 WEIGHTED_AVG_DISC_PCT NUMERIC(10,3),
							 WEIGHTED_AVG_DISC_AMT NUMERIC(10,2),
							 ITEM_ROUND_OFF NUMERIC(10,2)							 
						   )

	IF OBJECT_ID('TEMPDB..#CMDITV','U') IS NOT NULL
		DROP TABLE #CMDITV


	IF OBJECT_ID('TEMPDB..#TMPCMD','U') IS NOT NULL
		DROP TABLE #TMPCMD

	
	DECLARE @TDENYEXCLTAX TABLE (USER_CODE CHAR(7))		 		

	PRINT 'SLSDISC-2'
	
	SELECT PRODUCT_CODE,CONVERT(CHAR(7),'') AS SUB_SECTION_CODE,QUANTITY,DISCOUNT_AMOUNT,QUANTITY AS SCHEME_APPLIED_QTY,
	DISCOUNT_AMOUNT AS SCHEME_APPLIED_AMOUNT,SLSDET_ROW_ID,SLSDET_ROW_ID AS SCHEME_ID,
	DISCOUNT_PERCENTAGE,MRP,NET,ROW_ID AS CMD_ROW_ID,PACK_SLIP_ID,CONVERT(CHAR(7),'') AS USER_CODE,
	DISCOUNT_PERCENTAGE AS  WEIGHTED_AVG_DISC_PCT,DISCOUNT_AMOUNT AS WEIGHTED_AVG_DISC_AMT
	INTO #TMPCMD FROM CMD01106 WHERE 1=2
				
	IF @CPRODUCTCODE<>''
	BEGIN
		INSERT #TMPCMD SELECT PRODUCT_CODE,B.SUB_SECTION_CODE,1 AS QUANTITY,0 AS DISCOUNT_AMOUNT,0 AS SCHEME_APPLIED_QTY,
					0 AS SCHEME_APPLIED_AMOUNT,'''' AS SLSDET_ROW_ID,'''' AS SCHEME_ID,
					0 AS DISCOUNT_PERCENTAGE,A.MRP,A.MRP AS NET,NEWID() AS CMD_ROW_ID,'' AS PACK_SLIP_ID,'' AS USER_CODE,
					0 AS WEIGHTED_AVG_DISC_PCT,0 AS WEIGHTED_AVG_DISC_AMT
					FROM SKU A
					JOIN ARTICLE B ON A.ARTICLE_CODE=B.ARTICLE_CODE
					WHERE PRODUCT_CODE=@CPRODUCTCODE
		
		IF @NDISCPICKINGMODE<>1
			GOTO LBLPICKLASTDISC				
	END				
    ELSE
    BEGIN
			SET @CCMD=N'INSERT #TMPCMD SELECT A.PRODUCT_CODE,C.SUB_SECTION_CODE,QUANTITY,0 AS DISCOUNT_AMOUNT,0 AS SCHEME_APPLIED_QTY,
						0 AS SCHEME_APPLIED_AMOUNT,'''' AS SLSDET_ROW_ID,'''' AS SCHEME_ID,'+
						(CASE WHEN @BSALESSETUPINEFFECT=1 THEN ' 0 ' ELSE ' A.DISCOUNT_PERCENTAGE ' END)+'
						AS DISCOUNT_PERCENTAGE,A.MRP,A.NET,A.ROW_ID'+(CASE WHEN @BAGSTPACKSLIP=1 THEN ',A.PACK_SLIP_ID' ELSE ',''''' END)+' AS PACK_SLIP_ID'+
						(CASE WHEN @BAGSTPACKSLIP=1 THEN ',ISNULL(D.USER_CODE,'''+@CUSERCODE+''')' ELSE ',''''' END)+' AS USER_CODE,
						0 AS WEIGHTED_AVG_DISC_PCT,0 AS WEIGHTED_AVG_DISC_AMT
						FROM '+(CASE WHEN @BCALLEDFROMSAVETRAN=1 THEN 'SLS_CMD01106_UPLOAD' ELSE 'TMPCMD_'+LTRIM(RTRIM(STR(@@SPID))) END)+' A
						JOIN SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE
						JOIN ARTICLE C ON C.ARTICLE_CODE=B.ARTICLE_CODE'+
						(CASE WHEN @BAGSTPACKSLIP=1 THEN ' LEFT OUTER JOIN RPS_MST D ON D.CM_ID=A.PACK_SLIP_ID' ELSE '' END)+
						(CASE WHEN @BCALLEDFROMSAVETRAN=1 THEN ' WHERE SP_ID='+LTRIM(RTRIM(STR(@NSPID))) ELSE '' END)
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD			
    END		

	IF @cLocationId=''
	 SELECT TOP 1 @CCURDEPTID=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
	ELSE 
	SET @CCURDEPTID=@cLocationId


	SELECT TOP 1 @CHODEPTID=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='HO_LOCATION_ID'
		
	PRINT 'SLSDISC-3'	
	IF @BSALESSETUPINEFFECT=0  
		GOTO LBLTAXCALC
	
	UPDATE #TMPCMD SET DISCOUNT_PERCENTAGE=0,DISCOUNT_AMOUNT=0,
	NET=(CASE WHEN QUANTITY<0  THEN -MRP ELSE MRP END)*ABS(QUANTITY)
	
	
	SELECT A.PRODUCT_CODE INTO #CMDITV FROM SKU A JOIN #TMPCMD B ON A.PRODUCT_CODE=B.PRODUCT_CODE
	
	SELECT TOP 1 @CAPPLYDISCTITLEWISE=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='APPLY_SLSSET_TITLE_WISE'
	
	SET @CAPPLYDISCTITLEWISE=ISNULL(@CAPPLYDISCTITLEWISE,'')
		
	--- APPLY BAR CODE WISE DISCOUNTS  IF ANY	
	
	SET @CTOPVARIABLE=''
	SELECT TOP 1 @CTOPVARIABLE=A.PRODUCT_CODE FROM SLSBC A JOIN SLSMST B ON A.SLS_MEMO_NO= B.SLS_MEMO_NO
    JOIN #TMPCMD C ON C.PRODUCT_CODE=A.PRODUCT_CODE
    JOIN SLSDET D ON D.ROW_ID=A.SLSDET_ROW_ID
    LEFT OUTER JOIN LOCSLSSET G ON G.SLS_MEMO_NO=D.SLS_MEMO_NO
    WHERE (G.DEPT_ID=@CCURDEPTID OR @CCURDEPTID<>@CHODEPTID) AND @DXNDT BETWEEN B.SLS_FROM_DT AND B.SLS_TO_DT AND D.FILTER_MODE=2
    AND (C.QUANTITY>0 OR ISNULL(@CCONFVAL,'') IN ('','0'))
	AND D.SETUP_TYPE<>2
			   
	IF ISNULL(@CTOPVARIABLE,'')<>'' 
	BEGIN
		IF CURSOR_STATUS('GLOBAL','CMDCUR') IN (0,1)
		BEGIN
			CLOSE CMDCUR
			DEALLOCATE CMDCUR
		END
		
		PRINT 'ENTER DISC-1'		
		
		DECLARE CMDCUR CURSOR FOR SELECT DISTINCT T.PRODUCT_CODE,T.SUB_SECTION_CODE,T.MRP,T.QUANTITY,T.CMD_ROW_ID,
		ISNULL(H.USER_CODE,@CUSERCODE) FROM
		#TMPCMD T JOIN SLSBC A  ON T.PRODUCT_CODE=A.PRODUCT_CODE
		JOIN SLSMST B ON A.SLS_MEMO_NO= B.SLS_MEMO_NO
	    JOIN SLSDET D ON D.ROW_ID=A.SLSDET_ROW_ID
		LEFT OUTER JOIN LOCSLSSET G ON G.SLS_MEMO_NO=D.SLS_MEMO_NO
		LEFT OUTER JOIN RPS_MST H ON H.CM_ID=T.PACK_SLIP_ID
		WHERE (G.DEPT_ID=@CCURDEPTID OR @CCURDEPTID<>@CHODEPTID)
		AND @DXNDT BETWEEN B.SLS_FROM_DT AND B.SLS_TO_DT	
	    AND D.FILTER_MODE=2 
	    AND (T.QUANTITY>0 OR ISNULL(@CCONFVAL,'') IN ('','0'))
		AND D.SETUP_TYPE<>2
				
		OPEN CMDCUR
		FETCH NEXT FROM CMDCUR INTO @CCMDPRODUCTCODE,@CSUBSECTIONCODE,@NMRP,@NXNQTY,@CCMDROWID,@CUSERCODEPARA
		WHILE @@FETCH_STATUS=0
		BEGIN
			PRINT 'ENTER DISC-2'
			
			SELECT @DISCOUNT_PERCENTAGE=0,@DISCOUNT_PERCENTAGE2=0,@DISCOUNT_PERCENTAGE3=0,
				   @DISCOUNT_AMOUNT=0,@NET_PRICE=0,@DISC_METHOD=0,@ROW_ID='',@CSLSTITLE=''
			
			SELECT TOP 1 @DISCOUNT_PERCENTAGE=A.DISCOUNT_PERCENTAGE,@DISCOUNT_PERCENTAGE2=0,
						 @DISCOUNT_PERCENTAGE3=0,@DISCOUNT_AMOUNT=A.DISCOUNT_AMOUNT,
						 @NET_PRICE=A.NET_PRICE,@DISC_METHOD=C.DISC_METHOD,
						 @ROW_ID=C.ROW_ID,@CSLSTITLE=C.SLS_TITLE FROM SLSBC A
						 JOIN SLSMST B ON A.SLS_MEMO_NO= B.SLS_MEMO_NO
						 JOIN SLSDET C ON C.ROW_ID=A.SLSDET_ROW_ID
						 WHERE A.PRODUCT_CODE=@CCMDPRODUCTCODE AND @DXNDT BETWEEN B.SLS_FROM_DT AND B.SLS_TO_DT
						 AND C.FILTER_MODE=2 ORDER BY B.SLS_MEMO_NO DESC,C.SLS_ORDER 
			
			PRINT 'ENTER DISC-3'			 
			SET @EFFECTIVE_DISCOUNT	=ISNULL(@DISCOUNT_PERCENTAGE,0)
			
			IF(ISNULL(@DISCOUNT_PERCENTAGE2,0)>0)
				SET @EFFECTIVE_DISCOUNT	=@EFFECTIVE_DISCOUNT+((100-@EFFECTIVE_DISCOUNT) * @DISCOUNT_PERCENTAGE2/100)
				
			IF(ISNULL(@DISCOUNT_PERCENTAGE3,0)>0)
				SET @EFFECTIVE_DISCOUNT	=@EFFECTIVE_DISCOUNT+((100-@EFFECTIVE_DISCOUNT) * @DISCOUNT_PERCENTAGE3/100)
		
		
			SELECT @NNET = (CASE WHEN ISNULL(@DISC_METHOD,0)=1 THEN @NMRP-(@NMRP*@EFFECTIVE_DISCOUNT/100)
								 WHEN ISNULL(@DISC_METHOD,0)=2 THEN ISNULL(@NET_PRICE,0)
								 ELSE @NMRP-ISNULL(@DISCOUNT_AMOUNT,0) END)*@NXNQTY
			
			PRINT 'ENTER DISC-4'
			
			SET @NDISC = (@NMRP*@NXNQTY)-@NNET
			
			IF @DISC_METHOD=1
				SET @NDISCPCT=@EFFECTIVE_DISCOUNT
			ELSE
				SET @NDISCPCT = (CASE WHEN (@NMRP*@NXNQTY)=0 THEN 0 ELSE (@NDISC/(@NMRP*@NXNQTY))*100 END)
			
			PRINT 'ENTER DISC-5'
			
			UPDATE #TMPCMD SET DISCOUNT_PERCENTAGE=@NDISCPCT,DISCOUNT_AMOUNT=@NDISC,
			SLSDET_ROW_ID=@ROW_ID
			WHERE CMD_ROW_ID=@CCMDROWID
				
			INSERT INTO @OUTPUTC ( PRODUCT_CODE,SUB_SECTION_CODE,ROW_ID,SLS_TITLE,MRPVAL,DISCOUNT_PERCENTAGE,
								   DISCOUNT_AMOUNT,NET,CMD_ROW_ID,USER_CODE )
						VALUES   ( @CCMDPRODUCTCODE,@CSUBSECTIONCODE,ISNULL(@ROW_ID,''),@CSLSTITLE,
								   @NMRP*@NXNQTY,@NDISCPCT,ISNULL(@NDISC,0),ISNULL(@NNET,0),@CCMDROWID,@CUSERCODEPARA )

			PRINT 'SLS-5.4-'+@CCMDPRODUCTCODE			
			FETCH NEXT FROM CMDCUR INTO @CCMDPRODUCTCODE,@CSUBSECTIONCODE,@NMRP,@NXNQTY,@CCMDROWID,@CUSERCODEPARA
		END
		
		CLOSE CMDCUR
		DEALLOCATE CMDCUR
		
	END
	
	--SELECT 'CHECK OUTPUT',* FROM @OUTPUTC
	
	PRINT 'SLSART-0 ENTER'
	
	IF NOT EXISTS (SELECT A.PRODUCT_CODE FROM #TMPCMD A LEFT OUTER JOIN @OUTPUTC B
				   ON A.CMD_ROW_ID=B.CMD_ROW_ID WHERE B.PRODUCT_CODE IS NULL)
		GOTO LBLTAXCALC
	
	PRINT 'SLSART-0 CHECK'
	--- APPLY ARTICLE WISE DISCOUNTS  IF ANY	
	SET @CTOPVARIABLE=''
	SELECT TOP 1 @CTOPVARIABLE=A.PRODUCT_CODE FROM #TMPCMD A 
    JOIN SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE
    JOIN ARTICLE C ON C.ARTICLE_CODE=B.ARTICLE_CODE
    JOIN SLSART D ON D.ARTICLE_NO=C.ARTICLE_NO
    JOIN SLSMST E ON E.SLS_MEMO_NO=D.SLS_MEMO_NO
    JOIN SLSDET F ON F.ROW_ID=D.SLSDET_ROW_ID
    LEFT OUTER JOIN LOCSLSSET G ON G.SLS_MEMO_NO=D.SLS_MEMO_NO
    WHERE (G.DEPT_ID=@CCURDEPTID OR @CCURDEPTID<>@CHODEPTID) AND @DXNDT BETWEEN E.SLS_FROM_DT AND E.SLS_TO_DT AND F.FILTER_MODE=3
    AND (A.QUANTITY>0 OR ISNULL(@CCONFVAL,'') IN ('','0')) AND A.SLSDET_ROW_ID=''
    AND F.SETUP_TYPE<>2
			   
	IF ISNULL(@CTOPVARIABLE,'')<>'' AND @CAPPLYDISCTITLEWISE<>'1'
	BEGIN
		IF CURSOR_STATUS('GLOBAL','SLSBCCUR') IN (0,1)
		BEGIN
			CLOSE SLSBCCUR
			DEALLOCATE SLSBCCUR
		END
		
		PRINT 'SLSART-1'
		
		DECLARE CMDCUR CURSOR FOR SELECT DISTINCT A.PRODUCT_CODE,A.SUB_SECTION_CODE,A.MRP,A.QUANTITY,A.CMD_ROW_ID,
		ISNULL(H.USER_CODE,@CUSERCODE)
		FROM #TMPCMD A  
	    JOIN SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE
	    JOIN ARTICLE C ON C.ARTICLE_CODE=B.ARTICLE_CODE
	    JOIN SLSART D ON D.ARTICLE_NO=C.ARTICLE_NO
	    JOIN SLSMST E ON E.SLS_MEMO_NO=D.SLS_MEMO_NO
	    JOIN SLSDET F ON F.ROW_ID=D.SLSDET_ROW_ID
		LEFT OUTER JOIN LOCSLSSET G ON G.SLS_MEMO_NO=D.SLS_MEMO_NO
		LEFT OUTER JOIN RPS_MST H ON H.CM_ID=A.PACK_SLIP_ID
		WHERE (G.DEPT_ID=@CCURDEPTID OR @CCURDEPTID<>@CHODEPTID) AND @DXNDT BETWEEN E.SLS_FROM_DT AND E.SLS_TO_DT AND F.FILTER_MODE=3
	    AND (A.QUANTITY>0 OR ISNULL(@CCONFVAL,'') IN ('','0')) AND A.SLSDET_ROW_ID=''
		AND F.SETUP_TYPE<>2
				
		OPEN CMDCUR
		FETCH NEXT FROM CMDCUR INTO @CCMDPRODUCTCODE,@CSUBSECTIONCODE,@NMRP,@NXNQTY,@CCMDROWID,@CUSERCODEPARA
		WHILE @@FETCH_STATUS=0
		BEGIN
			PRINT 'SLSART-2'+@CCMDPRODUCTCODE					
			SELECT @DISCOUNT_PERCENTAGE=0,@DISCOUNT_PERCENTAGE2=0,@DISCOUNT_PERCENTAGE3=0,
				   @DISCOUNT_AMOUNT=0,@NET_PRICE=0,@DISC_METHOD=0,@ROW_ID='',@CSLSTITLE=''
			
			SELECT TOP 1 @DISCOUNT_PERCENTAGE=D.DISCOUNT_PERCENTAGE,
						 @NET_PRICE=D.NET_PRICE,@DISC_METHOD=F.DISC_METHOD,
						 @ROW_ID=F.ROW_ID,@CSLSTITLE=F.SLS_TITLE
						 FROM #TMPCMD A 
						 JOIN SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE
						 JOIN ARTICLE C ON C.ARTICLE_CODE=B.ARTICLE_CODE
						 JOIN SLSART D ON D.ARTICLE_NO=C.ARTICLE_NO
						 JOIN SLSMST E ON E.SLS_MEMO_NO= D.SLS_MEMO_NO
						 JOIN SLSDET F ON F.ROW_ID=D.SLSDET_ROW_ID
						 WHERE A.PRODUCT_CODE=@CCMDPRODUCTCODE AND @DXNDT BETWEEN E.SLS_FROM_DT AND E.SLS_TO_DT
						 AND F.FILTER_MODE=3 ORDER BY E.SLS_MEMO_NO DESC,F.SLS_ORDER
			
			PRINT 'SLSART-3'+@CCMDPRODUCTCODE								 
			SET @EFFECTIVE_DISCOUNT	=ISNULL(@DISCOUNT_PERCENTAGE,0)
			
			IF(ISNULL(@DISCOUNT_PERCENTAGE2,0)>0)
				SET @EFFECTIVE_DISCOUNT	=@EFFECTIVE_DISCOUNT+((100-@EFFECTIVE_DISCOUNT) * @DISCOUNT_PERCENTAGE2/100)
				
			IF(ISNULL(@DISCOUNT_PERCENTAGE3,0)>0)
				SET @EFFECTIVE_DISCOUNT	=@EFFECTIVE_DISCOUNT+((100-@EFFECTIVE_DISCOUNT) * @DISCOUNT_PERCENTAGE3/100)
		
			SELECT @NNET = (CASE WHEN ISNULL(@DISC_METHOD,0)=1 THEN @NMRP-(@NMRP*@EFFECTIVE_DISCOUNT/100)
								 WHEN ISNULL(@DISC_METHOD,0)=2 THEN ISNULL(@NET_PRICE,0)
								 ELSE @NMRP-ISNULL(@DISCOUNT_AMOUNT,0) END)*@NXNQTY

			PRINT 'SLSART-4'+@CCMDPRODUCTCODE	
							
			SET @NDISC = (@NMRP*@NXNQTY)-@NNET
			
			IF @DISC_METHOD=1
				SET @NDISCPCT=@EFFECTIVE_DISCOUNT
			ELSE
				SET @NDISCPCT =(CASE WHEN (@NMRP*@NXNQTY)=0 THEN 0 ELSE (@NDISC/(@NMRP*@NXNQTY))*100 END)
			
			PRINT 'SLSART-5'+@CCMDPRODUCTCODE					
			
			UPDATE #TMPCMD SET DISCOUNT_PERCENTAGE=@NDISCPCT,SLSDET_ROW_ID=@ROW_ID,DISCOUNT_AMOUNT=@NDISC
			WHERE CMD_ROW_ID=@CCMDROWID
				
			INSERT INTO @OUTPUTC ( PRODUCT_CODE,SUB_SECTION_CODE,ROW_ID,SLS_TITLE,MRPVAL,DISCOUNT_PERCENTAGE,
								   DISCOUNT_AMOUNT,NET,CMD_ROW_ID,USER_CODE )
						VALUES   ( @CCMDPRODUCTCODE,@CSUBSECTIONCODE,ISNULL(@ROW_ID,''),@CSLSTITLE,
								   @NMRP*@NXNQTY,@NDISCPCT,ISNULL(@NDISC,0),ISNULL(@NNET,0),@CCMDROWID ,@CUSERCODEPARA)

			PRINT 'SLSART-6'+@CCMDPRODUCTCODE			
			
			FETCH NEXT FROM CMDCUR INTO @CCMDPRODUCTCODE,@CSUBSECTIONCODE,@NMRP,@NXNQTY,@CCMDROWID,@CUSERCODEPARA
		END
		
		CLOSE CMDCUR
		DEALLOCATE CMDCUR
		
	END
	
	--SELECT 'CHECK OUTPUT',* FROM @OUTPUTC
	
	IF NOT EXISTS (SELECT A.PRODUCT_CODE FROM #TMPCMD A LEFT OUTER JOIN @OUTPUTC B
				   ON A.PRODUCT_CODE=B.PRODUCT_CODE WHERE B.PRODUCT_CODE IS NULL)
		GOTO LBLTAXCALC
			
	IF CURSOR_STATUS('GLOBAL','FILTER_CUR') IN (0,1)
	BEGIN
		CLOSE FILTER_CUR
		DEALLOCATE FILTER_CUR
	END
	

    DECLARE @BAPPLYEXCLTAXONDISCITEMS BIT
	SELECT TOP 1 @BAPPLYEXCLTAXONDISCITEMS=ISNULL(EXCLUSIVE_VAT,0) FROM LOCATION WHERE DEPT_ID=@CCURDEPTID
	
	--- APPLY SCHEMES & FLAT DISCOUNTS BASED UPON FILTER CRITERIA  IF ANY									 
	DECLARE FILTER_CUR CURSOR FOR
	SELECT  SLS_TITLE,A.DISC_METHOD,A.DISCOUNT_AMOUNT,A.NET_PRICE,A.FILTER_MODE,A.D_FILTER,A.ROW_ID,
	ISNULL(A.SCHEME_ID,'') AS BUNDLE_ID,A.AGE_DAYS1,A.AGE_DAYS2,B.SLS_FROM_DT
	FROM SLSDET A 
	JOIN SLSMST B ON A.SLS_MEMO_NO= B.SLS_MEMO_NO
    LEFT OUTER JOIN LOCSLSSET G ON G.SLS_MEMO_NO=A.SLS_MEMO_NO
    WHERE (G.DEPT_ID=@CCURDEPTID OR @CCURDEPTID<>@CHODEPTID) AND @DXNDT BETWEEN B.SLS_FROM_DT AND B.SLS_TO_DT
    AND (((A.D_FILTER <> '' OR A.AGE_DAYS1<>0) AND A.FILTER_MODE=1) OR (A.SCHEME_ID<>'' AND ISNULL(@CPRODUCTCODEPARA,'')='') 
	OR (@CAPPLYDISCTITLEWISE='1' AND A.FILTER_MODE IN (2,3)))
	ORDER BY B.SLS_MEMO_NO DESC,A.SLS_ORDER
	
	PRINT 'SLSDISC-4'
	
	OPEN FILTER_CUR

	FETCH NEXT FROM FILTER_CUR INTO @CSLSTITLE,@DISC_METHOD,@DISCOUNT_AMOUNT,@NET_PRICE, @FILTER_MODE, @D_FILTER,
	@ROW_ID,@CBUNDLEID,@NAGEDAYS1,@NAGEDAYS2,@DSLSFROMDT
	
	WHILE @@FETCH_STATUS = 0
	BEGIN

	PRINT 'PROCESSING SALES TITLE : '+@CSLSTITLE 
		IF @CBUNDLEID<>''
		BEGIN
			
			IF @CPRODUCTCODEPARA<>''
				GOTO NEXT_SLSSET
				
			IF @BSKIPVALUEBASEDSCHEME=1 AND EXISTS (SELECT TOP 1 BUNDLE_ID FROM BUNDLEM
				WHERE BUNDLE_ID=@CBUNDLEID AND BUY_DISC_APP_MODE=2)
				GOTO NEXT_SLSSET 

			IF OBJECT_ID('TEMPDB..#TEMPCMDNORMALIZED','U') IS NOT NULL
				DROP TABLE #TEMPCMDNORMALIZED
			
			SELECT PRODUCT_CODE,MRP,NET,SLSDET_ROW_ID ,DISCOUNT_AMOUNT,CONVERT(BIT,0) AS DISCAMTCHANGED,
				   DISCOUNT_AMOUNT AS SCHEME_APPLIED_AMOUNT,DISCOUNT_AMOUNT AS OLD_SCHEME_APPLIED_AMOUNT,
				   CONVERT(BIT,0) AS NETAMTCHANGED,DISCOUNT_AMOUNT AS DISCOUNT_FIGURE,
				   ROW_ID AS SCHEME_ID,ROW_ID AS BUNDLE_ROW_ID,ROW_ID,ROW_ID AS CMD_ROW_ID
			INTO #TEMPCMDNORMALIZED	FROM CMD01106 WHERE 1=2   

PRINT 'SLS-2'					 
			EXEC SP_APPLYSCHEMES @CBUNDLEID,@ROW_ID,1,0,@CFILTERJOINSTR
			
			IF ISNULL(@CCONFVAL,'')<>'1'
			BEGIN
				PRINT 'ENTER POWER SCHEME FOR SALE RETURN-1'
				SET @COUTPUTVAR=''
				SELECT TOP 1 @COUTPUTVAR=PRODUCT_CODE FROM #TMPCMD WHERE QUANTITY<0
				
				IF ISNULL(@COUTPUTVAR,'')<>''
				BEGIN
					PRINT 'ENTER POWER SCHEME FOR SALE RETURN-2'
					EXEC SP_APPLYSCHEMES @CBUNDLEID,@ROW_ID,2,0,@CFILTERJOINSTR
				END	
			END
					
			EXEC SP_UPDATESCHEME_WTDDISC @CBUNDLEID
			
			DELETE A FROM @OUTPUTC A JOIN #TMPCMD B ON A.CMD_ROW_ID=B.CMD_ROW_ID	
			WHERE B.DISCOUNT_AMOUNT<>0 OR B.SCHEME_ID<>''
PRINT 'SLS-3.2'			

--SELECT 'CHECK OUTPUT TMPCMD AFTER SCHEME',* FROM #TMPCMD

		
			INSERT INTO @OUTPUTC ( PRODUCT_CODE,SUB_SECTION_CODE,MRPVAL,DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT,NET,
								   ROW_ID,SLS_TITLE,SCHEME_ID,CMD_ROW_ID,USER_CODE,WEIGHTED_AVG_DISC_PCT,WEIGHTED_AVG_DISC_AMT)
		    SELECT D.PRODUCT_CODE,C.SUB_SECTION_CODE,SUM(D.MRP*D.QUANTITY)
		    ,(CASE WHEN SUM(D.MRP)=0 THEN 0 ELSE ABS(ROUND((SUM(D.DISCOUNT_AMOUNT)/SUM(D.MRP))*100,2)) END)
			AS DISCOUNT_PERCENTAGE,SUM(D.DISCOUNT_AMOUNT),SUM(ABS(D.MRP*D.QUANTITY)-ABS(D.DISCOUNT_AMOUNT)) AS NET,@ROW_ID,@CSLSTITLE,
			@CBUNDLEID AS SCHEME_ID,D.CMD_ROW_ID,@CUSERCODE AS USER_CODE,
			0 AS WEIGHTED_AVG_DISC_PCT,SUM(D.WEIGHTED_AVG_DISC_AMT) FROM 
			#TMPCMD D JOIN SKU B ON D.PRODUCT_CODE=B.PRODUCT_CODE
			JOIN ARTICLE C ON C.ARTICLE_CODE=B.ARTICLE_CODE
			WHERE (D.DISCOUNT_AMOUNT<>0 OR D.SCHEME_ID<>'')
			GROUP BY D.PRODUCT_CODE,C.SUB_SECTION_CODE,D.CMD_ROW_ID
			
			IF EXISTS (SELECT TOP 1 A.ROW_ID FROM @OUTPUTC A JOIN BUNDLEM B ON A.SCHEME_ID=B.BUNDLE_ID
					   WHERE BUY_DISC_APP_MODE=2 AND DONOT_APPLYDISCON_MULTISETS=1)
				SET @BSKIPVALUEBASEDSCHEME=1
					   	
			GOTO NEXT_SLSSET
		END			
		

		IF @BDONOTPROCESSFLATDISC=1
			GOTO NEXT_SLSSET

--SELECT 'CHECK OUTPUT',* FROM @OUTPUTC
			
		PRINT 'PROCESSING SALES TITLE : '+@CSLSTITLE 

		SET @CFILTER = N' AND   ' + (CASE WHEN @D_FILTER<>'' THEN '( ' + @D_FILTER+ ' ) ' ELSE '1=1' END)
		
		PRINT 'SLS-4'
		
		IF CURSOR_STATUS('GLOBAL','CMDCUR') IN (0,1)
		BEGIN
			CLOSE CMDCUR
			DEALLOCATE CMDCUR
		END
				
		DECLARE CMDCUR CURSOR FOR SELECT A.PRODUCT_CODE,A.SUB_SECTION_CODE,A.MRP,A.QUANTITY,A.CMD_ROW_ID,
		ISNULL(B.USER_CODE,@CUSERCODE)
		FROM #TMPCMD A
		LEFT OUTER JOIN RPS_MST B ON B.CM_ID=A.PACK_SLIP_ID
		WHERE A.DISCOUNT_PERCENTAGE=0 AND A.SLSDET_ROW_ID='' 
		AND (QUANTITY>0 OR ISNULL(@CCONFVAL,'') IN ('','0'))
		
		
		OPEN CMDCUR
		FETCH NEXT FROM CMDCUR INTO @CCMDPRODUCTCODE,@CSUBSECTIONCODE,@NMRP,@NXNQTY,@CCMDROWID,@CUSERCODEPARA
		WHILE @@FETCH_STATUS=0
		BEGIN
		PRINT 'SLS-5.1-'+@CCMDPRODUCTCODE
			SET @LRETVAL = 0
			
			IF @NAGEDAYS1<>0 AND @NAGEDAYS2<>0
				SELECT @CADDFILTER=' AND DATEDIFF(DD,SKURECDT.RECEIPT_DT,'''+CONVERT(VARCHAR,@DSLSFROMDT,110)+''') BETWEEN '+
								LTRIM(RTRIM(STR(@NAGEDAYS1)))+' AND '+LTRIM(RTRIM(STR(@NAGEDAYS2))),
					   @CJOINEXPR=' JOIN '+(CASE WHEN @CCURDEPTID=@CHODEPTID THEN 'SKU' ELSE 'SKU_RECEIPT_DATES' END)+
								  ' SKURECDT ON SKURECDT.PRODUCT_CODE=A.PRODUCT_CODE'

			ELSE
				SELECT @CADDFILTER='',@CJOINEXPR=''		   			 
				
			IF @FILTER_MODE=1
			BEGIN
				SET @CCMD=N'SELECT @LRETVALOUTPUT=1,@NDISCPCTOUT=B.DISCOUNT_PERCENTAGE,@NDISCPCT2OUT=B.DISCOUNT_PERCENTAGE2,
						    @NDISCPCT3OUT=B.DISCOUNT_PERCENTAGE3 FROM #CMDITV A '+@CFILTERJOINSTR+
						   ' JOIN SLSDET B ON B.ROW_ID=B.ROW_ID '+@CJOINEXPR+' WHERE A.PRODUCT_CODE='''+@CCMDPRODUCTCODE+''''+
						   @CFILTER+' AND B.ROW_ID='''+@ROW_ID+''''+@CADDFILTER 
			END					
			ELSE
			IF @FILTER_MODE=2
			BEGIN
				SET @CCMD=N'SELECT @LRETVALOUTPUT=1,@NDISCPCTOUT=A.DISCOUNT_PERCENTAGE,@NDISCPCT2OUT=0,
						    @NDISCPCT3OUT=0 FROM SLSBC A  '+@CJOINEXPR+' 
							WHERE A.PRODUCT_CODE='''+@CCMDPRODUCTCODE+''' AND A.SLSDET_ROW_ID='''+@ROW_ID+''''+@CADDFILTER
			END	
			ELSE
			IF @FILTER_MODE=3
			BEGIN
				SET @CCMD=N'SELECT @LRETVALOUTPUT=1,@NDISCPCTOUT=C.DISCOUNT_PERCENTAGE,@NDISCPCT2OUT=0,
						    @NDISCPCT3OUT=0 FROM #CMDITV A
						    JOIN SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE
						    JOIN ARTICLE D ON D.ARTICLE_CODE=B.ARTICLE_CODE
						    JOIN SLSART C ON C.ARTICLE_NO=D.ARTICLE_NO '+@CJOINEXPR+' 
							WHERE A.PRODUCT_CODE='''+@CCMDPRODUCTCODE+''' AND C.SLSDET_ROW_ID='''+@ROW_ID+''''+@CADDFILTER
			END	
								
			PRINT @CCMD						
			EXEC SP_EXECUTESQL @CCMD,N'@LRETVALOUTPUT BIT OUTPUT,@NDISCPCTOUT NUMERIC(6,2) OUTPUT,
			@NDISCPCT2OUT NUMERIC(6,2) OUTPUT,@NDISCPCT3OUT NUMERIC(6,2) OUTPUT',@LRETVALOUTPUT=@LRETVAL OUTPUT,
			@NDISCPCTOUT=@DISCOUNT_PERCENTAGE OUTPUT,@NDISCPCT2OUT=@DISCOUNT_PERCENTAGE2 OUTPUT,
			@NDISCPCT3OUT=@DISCOUNT_PERCENTAGE3 OUTPUT
			
			IF @LRETVAL=1
			BEGIN
				SET @EFFECTIVE_DISCOUNT	=ISNULL(@DISCOUNT_PERCENTAGE,0)

PRINT 'SLS-5.2-'+@CCMDPRODUCTCODE				
				IF(ISNULL(@DISCOUNT_PERCENTAGE2,0)>0)
					SET @EFFECTIVE_DISCOUNT	=@EFFECTIVE_DISCOUNT+((100-@EFFECTIVE_DISCOUNT) * @DISCOUNT_PERCENTAGE2/100)
					
				IF(ISNULL(@DISCOUNT_PERCENTAGE3,0)>0)
					SET @EFFECTIVE_DISCOUNT	=@EFFECTIVE_DISCOUNT+((100-@EFFECTIVE_DISCOUNT) * @DISCOUNT_PERCENTAGE3/100)
			
			
				SELECT @NNET = (CASE WHEN ISNULL(@DISC_METHOD,0)=1 THEN @NMRP-(@NMRP*@EFFECTIVE_DISCOUNT/100)
									 WHEN ISNULL(@DISC_METHOD,0)=2 THEN ISNULL(@NET_PRICE,0)
									 ELSE @NMRP-ISNULL(@DISCOUNT_AMOUNT,0) END)*@NXNQTY

PRINT 'SLS-5.3-'+@CCMDPRODUCTCODE+' MRP :'+STR(@NMRP)+' NET :'+STR(@NNET)
				
				SET @NDISC = (@NMRP*@NXNQTY)-@NNET
				
				IF @DISC_METHOD=1
					SET @NDISCPCT=@EFFECTIVE_DISCOUNT
				ELSE
					SET @NDISCPCT =(CASE WHEN (@NMRP*@NXNQTY)=0 THEN 0 ELSE (@NDISC/(@NMRP*@NXNQTY))*100 END)
				
				UPDATE #TMPCMD SET DISCOUNT_PERCENTAGE=@NDISCPCT,SLSDET_ROW_ID=@ROW_ID,
				DISCOUNT_AMOUNT=(CASE WHEN @NXNQTY=0 THEN 0 ELSE @NDISC/@NXNQTY END)

				WHERE CMD_ROW_ID=@CCMDROWID
				
				--SELECT * FROM @OUTPUTC	
				INSERT INTO @OUTPUTC ( PRODUCT_CODE,SUB_SECTION_CODE,ROW_ID,SLS_TITLE,MRPVAL,DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT,NET,CMD_ROW_ID,USER_CODE )
							VALUES   ( @CCMDPRODUCTCODE,@CSUBSECTIONCODE,ISNULL(@ROW_ID,''),@CSLSTITLE,
									   @NMRP*@NXNQTY,@NDISCPCT,ISNULL(@NDISC,0),ISNULL(@NNET,0),@CCMDROWID,@CUSERCODEPARA )
				--SELECT * FROM @OUTPUTC										   
			END
			
			PRINT 'SLS-5.4-'+@CCMDPRODUCTCODE			
			FETCH NEXT FROM CMDCUR INTO @CCMDPRODUCTCODE,@CSUBSECTIONCODE,@NMRP,@NXNQTY,@CCMDROWID,@CUSERCODEPARA
		END
		
		CLOSE CMDCUR
		DEALLOCATE CMDCUR

--SELECT 'CHECK OUTPUT',* FROM @OUTPUTC
		
		IF NOT EXISTS (SELECT A.PRODUCT_CODE FROM #TMPCMD A LEFT OUTER JOIN @OUTPUTC B
					   ON A.CMD_ROW_ID=B.CMD_ROW_ID WHERE B.PRODUCT_CODE IS NULL)
			SET @BDONOTPROCESSFLATDISC=1
		
		
		NEXT_SLSSET:					   	
		
		FETCH NEXT FROM FILTER_CUR INTO @CSLSTITLE,@DISC_METHOD,@DISCOUNT_AMOUNT, @NET_PRICE, @FILTER_MODE, @D_FILTER,
		@ROW_ID,@CBUNDLEID,@NAGEDAYS1,@NAGEDAYS2,@DSLSFROMDT
	END
	
	END_SLSSET:
	CLOSE FILTER_CUR
	DEALLOCATE FILTER_CUR
	
	
LBLTAXCALC:

PRINT 'TAXCALC-1'

PRINT 'TAXCALC-2'	 


     DECLARE @BAPPLYEXCLTAX BIT,@BAPPLYEXCLTAXPARA BIT,@NTAXMETHOD INT
   
	 IF @BSALESSETUPINEFFECT=1
	 BEGIN
		
		 SET @COUTPUTVAR=''
		 SELECT TOP 1 @COUTPUTVAR=PRODUCT_CODE FROM #TMPCMD WHERE QUANTITY<0 AND ISNULL(@CCONFVAL,'')='1'
				
		 IF  ISNULL(@COUTPUTVAR,'')<>''
		 BEGIN
			----PRINT 'TEST'
			
			DECLARE @TPRODUCTDISCOUNT TABLE (DISCOUNT_PERCENTAGE NUMERIC(6,2),TAX_METHOD INT)	
			/*FOREACH PRODUCT WITH -VE QUANTITY, GET THE LAST DISCOUNT DETAILS */
			IF CURSOR_STATUS('GLOBAL','CURNEGQTY') IN (0,1)
			BEGIN
				CLOSE CURNEGQTY
				DEALLOCATE CURNEGQTY
			END
			
			DECLARE CURNEGQTY CURSOR FOR SELECT PRODUCT_CODE,SUB_SECTION_CODE,CMD_ROW_ID,QUANTITY,MRP FROM #TMPCMD WHERE QUANTITY<0
			OPEN CURNEGQTY
			FETCH NEXT FROM CURNEGQTY INTO @CPRODUCTCODE,@CSUBSECTIONCODE,@CCMDROWID,@NXNQTY,@NMRP
			WHILE @@FETCH_STATUS=0
			BEGIN
				IF @CPRODUCTCODE<>''
				BEGIN
					INSERT @TPRODUCTDISCOUNT
					EXEC SP_WL_PICKLASTDISCOUNT @CPRODUCTCODE
					
					SELECT @NDISCPCT=DISCOUNT_PERCENTAGE,@NTAXMETHOD=TAX_METHOD FROM @TPRODUCTDISCOUNT
					
					IF ISNULL(@NDISCPCT,0)<>0
					BEGIN
						UPDATE #TMPCMD SET DISCOUNT_PERCENTAGE=@NDISCPCT,
						DISCOUNT_AMOUNT=(MRP*@NDISCPCT/100)	WHERE CMD_ROW_ID=@CCMDROWID
						
						INSERT INTO @OUTPUTC ( PRODUCT_CODE,SUB_SECTION_CODE,ROW_ID,SLS_TITLE,MRPVAL,
											   DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT,NET,CMD_ROW_ID,TAX_METHOD,USER_CODE )
								VALUES   ( @CPRODUCTCODE,@CSUBSECTIONCODE,@ROW_ID,'',
										   @NMRP*@NXNQTY,ISNULL(@NDISCPCT,0),@NMRP*@NXNQTY*@NDISCPCT/100,
										   @NMRP*@NXNQTY-(@NMRP*@NXNQTY*@NDISCPCT/100),@CCMDROWID,@NTAXMETHOD,@CUSERCODE )
					END				   
					DELETE @TPRODUCTDISCOUNT
				END				
				FETCH NEXT FROM CURNEGQTY INTO @CPRODUCTCODE,@CSUBSECTIONCODE,@CCMDROWID,@NXNQTY,@NMRP
			END	
			CLOSE CURNEGQTY	
			DEALLOCATE CURNEGQTY
		 END
	 

--SELECT 'CHECK OUTPUT',* FROM @OUTPUTC
	 
		 INSERT INTO @OUTPUTC ( PRODUCT_CODE,SUB_SECTION_CODE,MRPVAL,DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT,NET,CMD_ROW_ID,USER_CODE)
		 SELECT A.PRODUCT_CODE,A.SUB_SECTION_CODE,A.MRP*A.QUANTITY AS MRPVAL,A.DISCOUNT_PERCENTAGE,(A.MRP*A.QUANTITY)-A.NET,
		 (A.MRP*A.QUANTITY) AS NET,A.CMD_ROW_ID,A.USER_CODE FROM #TMPCMD A
		 LEFT OUTER JOIN @OUTPUTC B ON A.CMD_ROW_ID=B.CMD_ROW_ID
		 WHERE B.PRODUCT_CODE IS NULL

--SELECT 'CHECK OUTPUT',* FROM @OUTPUTC
		 
	 END	 
	 ELSE
	 BEGIN
		 INSERT INTO @OUTPUTC ( PRODUCT_CODE,SUB_SECTION_CODE,MRPVAL,DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT,NET,CMD_ROW_ID,USER_CODE)
		 SELECT A.PRODUCT_CODE,A.SUB_SECTION_CODE,A.MRP*A.QUANTITY ,A.DISCOUNT_PERCENTAGE,((A.MRP*A.QUANTITY)-A.NET) AS DISCOUNT_AMOUNT,
		 A.NET,A.CMD_ROW_ID,A.USER_CODE FROM #TMPCMD A
		 LEFT OUTER JOIN @OUTPUTC B ON A.CMD_ROW_ID=B.CMD_ROW_ID
		 WHERE B.PRODUCT_CODE IS NULL
	 END

--SELECT 'CHECK OUTPUT',* FROM @OUTPUTC

	 IF @BESTEXMPTSALES=1
	 BEGIN
		UPDATE @OUTPUTC SET TAX_PERCENTAGE=0,TAX_AC_CODE='0000000000',
		SALE_AC_CODE='0000000000',TAX_METHOD=0,TAX_AMOUNT=0
		 
		GOTO LBLLAST
		
	 END
		
	 IF OBJECT_ID('TEMPDB..#TMPCMDTAX','U') IS NOT NULL
		DROP TABLE #TMPCMDTAX

PRINT 'TAXCALC-4'	 	 

	 DECLARE @CSTATECODE VARCHAR(10)

	IF @cLocationId=''
	 SELECT TOP 1 @CCURDEPTID=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
	ELSE 
	SET @CCURDEPTID=@cLocationId

	 
	 SELECT @CSTATECODE=A.STATE_CODE
	 FROM STATE A
	 JOIN CITY B ON B.STATE_CODE=A.STATE_CODE
	 JOIN AREA C ON C.CITY_CODE=B.CITY_CODE
	 JOIN LOCATION D ON D.AREA_CODE=C.AREA_CODE
	 WHERE D.DEPT_ID=@CCURDEPTID

	 SET @CSTATECODE=ISNULL(@CSTATECODE,'0000000')

   	 SELECT TOP 1 @CLOCSSTMEMOID = MEMO_ID FROM LOCSST_MST 
   	 WHERE FROM_DT<=@DXNDT AND STATE_CODE=@CSTATECODE ORDER BY FROM_DT DESC

	 IF ISNULL(@CLOCSSTMEMOID,'') = ''  
		GOTO LBLLAST
		 	  
	 SELECT C.ROW_ID,SUB_SECTION_CODE,C.TAX_PERCENTAGE,A.TAX_AC_CODE,C.TAX_METHOD,C.NET,
	 C.MRP,C.QUANTITY,B.USER_CODE,C.TAX_AMOUNT,C.PRODUCT_CODE,C.CMM_DISCOUNT_AMOUNT,
	 CONVERT(VARCHAR(40),'') AS PACK_SLIP_ID,C.DISCOUNT_PERCENTAGE,CONVERT(BIT,0) AS APPLY_EXCLUSIVE_TAX
	 ,CONVERT(NUMERIC(10,2),0) AS EXCLUSIVE_VAT_TO_DISC,C.DISCOUNT_AMOUNT AS CMD_DISCOUNT_AMOUNT,'' AS FORM_ID
	 
	 INTO #TMPCMDTAX 
	 FROM LOCSST A JOIN CMM01106 B ON 1=2
	 JOIN CMD01106 C ON 1=2
	 
	 IF @BCALLEDFROMMANUALBILLVALIDATE=1
	 	 ALTER TABLE #TMPCMDTAX ALTER COLUMN TAX_PERCENTAGE NUMERIC(7,3)
	 
	 DECLARE @NBILLDISCOUNTPCT NUMERIC(7,3),@CSLSDETROWID VARCHAR(40),@NBILLAMOUNT NUMERIC(10,2)	 
	
	 IF @BSALESSETUPINEFFECT=1
	 BEGIN	
		 IF EXISTS (SELECT TOP 1 A.ROW_ID FROM SLSDET A JOIN SLSMST B ON A.SLS_MEMO_NO=B.SLS_MEMO_NO
					WHERE SCHEME_ID='SLS-002' AND @DXNDT BETWEEN SLS_FROM_DT AND SLS_TO_DT)
		 BEGIN		
			
			SELECT @NBILLAMOUNT=SUM((MRP*QUANTITY)-(MRP*QUANTITY*DISCOUNT_PERCENTAGE/100)) 
			FROM #TMPCMD

			SELECT TOP 1 @CSLSDETROWID=A.ROW_ID FROM SLSDET A JOIN SLSMST B ON A.SLS_MEMO_NO=B.SLS_MEMO_NO
			WHERE  SCHEME_ID='SLS-002' AND @DXNDT BETWEEN SLS_FROM_DT AND SLS_TO_DT
			ORDER BY B.SLS_MEMO_NO DESC
				    
			SELECT TOP 1 @NBILLDISCOUNTPCT=DISCOUNT_PERCENTAGE FROM SCHEME_HH WHERE 
			SLSDET_ROW_ID=@CSLSDETROWID AND CONVERT(DATETIME,'1900-01-01 '+LTRIM(RTRIM(STR(DATEPART(HH,GETDATE()))))+':'+
			LTRIM(RTRIM(STR(DATEPART(MM,GETDATE()))))+':'+LTRIM(RTRIM(STR(DATEPART(SS,GETDATE())))))
			BETWEEN FROM_TIME AND TO_TIME AND @NBILLAMOUNT>=BILL_AMOUNT
			
			IF ISNULL(@NBILLDISCOUNTPCT,0)<>0
				UPDATE @OUTPUTC SET BILL_LEVEL_DISCOUNT_PERCENTAGE=@NBILLDISCOUNTPCT 
			ELSE
				UPDATE @OUTPUTC SET BILL_LEVEL_DISCOUNT_PERCENTAGE=0
				
			SELECT @NCMMDISCAMT	= @NBILLAMOUNT*@NBILLDISCOUNTPCT/100
		 END	
		 ELSE
		 IF EXISTS (SELECT TOP 1 A.ROW_ID FROM SLSDET A JOIN SLSMST B ON A.SLS_MEMO_NO=B.SLS_MEMO_NO
				WHERE SCHEME_ID='SLS-001' AND @DXNDT BETWEEN SLS_FROM_DT AND SLS_TO_DT)
		 BEGIN		
			
			SELECT @NBILLAMOUNT=SUM((MRP*QUANTITY)-(MRP*QUANTITY*DISCOUNT_PERCENTAGE/100)) 
			FROM #TMPCMD

			SELECT TOP 1 @CSLSDETROWID=A.ROW_ID FROM SLSDET A JOIN SLSMST B ON A.SLS_MEMO_NO=B.SLS_MEMO_NO
			WHERE  SCHEME_ID='SLS-001' AND @DXNDT BETWEEN SLS_FROM_DT AND SLS_TO_DT
			ORDER BY B.SLS_MEMO_NO DESC
				    
			SELECT TOP 1 @NBILLDISCOUNTPCT=DISCOUNT_PERCENTAGE FROM SCHEME_DET WHERE 
			SLSDET_ROW_ID=@CSLSDETROWID AND @NBILLAMOUNT BETWEEN PA_FROM AND PA_TO
			
			IF ISNULL(@NBILLDISCOUNTPCT,0)<>0
				UPDATE @OUTPUTC SET BILL_LEVEL_DISCOUNT_PERCENTAGE=@NBILLDISCOUNTPCT 
			ELSE
				UPDATE @OUTPUTC SET BILL_LEVEL_DISCOUNT_PERCENTAGE=0
				
			SELECT @NCMMDISCAMT	= @NBILLAMOUNT*@NBILLDISCOUNTPCT/100
		 END
		 
		 ---HERE CUSTOMER DISCOUNT IS TO BE UPDATED
		 IF @CCUS_CODE<>''
		 BEGIN
				DECLARE @CPICKCUSTOMERDISCOUNTMODE VARCHAR(5),@CDONOTAPPLYCUSTOMERDISCOUNT VARCHAR(5),@BFLATDISCCUSTOMER BIT
				---APPLY DISCOUNT DEFINED IN CUSTOMER MASTER
				--GET THE CONFIG VALUE FOR PICKING THE CUSTOMER MASTER DISCOUNT FOR CUSTOMER
				SELECT TOP 1 @CDONOTAPPLYCUSTOMERDISCOUNT=VALUE FROM CONFIG WHERE CONFIG_OPTION='PICK_CUSTOMER_DISCOUNTED_SALE'
			
				
				SET @CAPPLY_CUSTOMER_DISCOUNT=ISNULL(@CAPPLY_CUSTOMER_DISCOUNT,0)
				
				SELECT TOP 1 @BFLATDISCCUSTOMER=FLAT_DISC_CUSTOMER FROM CUSTDYM WHERE CUSTOMER_CODE=@CCUS_CODE
				
				/*
				IF PICK CUSTOMER MASTER DISCOUNT IS APPLICABLE,DO THE FOLLOWING STEPS
				1. CHECK IF DISCOUNT IS SPECIFIED FOR THIS CUSTOMER IN CUSTOMER MASTER.
				2. CHECK IF THE DISCOUNT IS TO BE APPLIED AT MASTER LEVEL OR ITEM LEVEL.
				*/
				IF @CDONOTAPPLYCUSTOMERDISCOUNT<>'1' AND @BFLATDISCCUSTOMER=1
				BEGIN 

					SELECT TOP 1 @CPICKCUSTOMERDISCOUNTMODE=VALUE FROM CONFIG WHERE CONFIG_OPTION='PICK_CUSTOMER_DISCOUNTED_SALE_CUSTDYM'
				
					
					SELECT @NCUST_DISCONT=(CASE WHEN @CPICKCUSTOMERDISCOUNTMODE=2 THEN FLAT_DISC_PERCENTAGE_DURING_SALES 
												ELSE FLAT_DISC_PERCENTAGE END)	
					FROM CUSTDYM WHERE CUSTOMER_CODE=@CCUS_CODE
					
					--IF NO DISCOUNT IS SPECIFIED FOR THIS CUSTOMER IN CUSTOMER MASTER THEN EXIT THIS PROCESS
					IF ISNULL(@NCUST_DISCONT,0)=0
						GOTO LBL_TAX
						
					--CHECK IF DISCOUNT IS TO BE APPLIED AT MASTER OR DETAIL LEVEL	
					SELECT TOP 1 @CAPPLY_DISCOUNT_LEVEL=VALUE FROM CONFIG WHERE CONFIG_OPTION='PICK_DISCOUNT_CUSTDYM_MODE'
					
					
					IF ISNULL(@CAPPLY_DISCOUNT_LEVEL,'') IN ('',0,1)
					---APPLY THE DISCOUNT AT BILL LEVEL
					BEGIN
						UPDATE @OUTPUTC SET BILL_LEVEL_DISCOUNT_PERCENTAGE=@NCUST_DISCONT 
						WHERE ISNULL(BILL_LEVEL_DISCOUNT_PERCENTAGE,0)=0
						AND ISNULL(DISCOUNT_PERCENTAGE,0)=0
					END
					ELSE 
					--APPLY THE DISCOUNT AT ITEM LEVEL
					BEGIN
						UPDATE @OUTPUTC SET DISCOUNT_PERCENTAGE=@NCUST_DISCONT,DISCOUNT_AMOUNT=(MRPVAL*@NCUST_DISCONT/100.00) 
										   ,NET=(MRPVAL-(MRPVAL*@NCUST_DISCONT/100.00))
						WHERE ISNULL(BILL_LEVEL_DISCOUNT_PERCENTAGE,0)=0
						AND ISNULL(DISCOUNT_PERCENTAGE,0)=0
					END
				END
		 END
	 END

LBL_TAX:

	IF @CROUNDITEMLEVEL=1	
	BEGIN
		UPDATE @OUTPUTC SET ITEM_ROUND_OFF=(CASE WHEN @CROUNDITEMLEVEL=1 THEN ROUND((MRPVAL-DISCOUNT_AMOUNT),0)-
											(MRPVAL-DISCOUNT_AMOUNT)  ELSE 0 END)

	END
	ELSE
		UPDATE @OUTPUTC SET ITEM_ROUND_OFF=0	
	

	UPDATE @OUTPUTC SET DISCOUNT_AMOUNT=(CASE WHEN MRPVAL<0 THEN -1 ELSE 1 END)*ABS(DISCOUNT_AMOUNT),
	NET=(CASE WHEN MRPVAL<0 THEN -1 ELSE 1 END)*ABS(NET)

	UPDATE @OUTPUTC SET NET=(MRPVAL-DISCOUNT_AMOUNT+ITEM_ROUND_OFF)
				 
	INSERT #TMPCMDTAX (ROW_ID,SUB_SECTION_CODE,TAX_PERCENTAGE,TAX_AC_CODE,TAX_METHOD,NET,
	MRP,QUANTITY,USER_CODE,TAX_AMOUNT,PRODUCT_CODE,CMM_DISCOUNT_AMOUNT,PACK_SLIP_ID,DISCOUNT_PERCENTAGE,CMD_DISCOUNT_AMOUNT,FORM_ID)
	 
	 SELECT A.CMD_ROW_ID,A.SUB_SECTION_CODE,(CASE WHEN @BCALLEDFROMMANUALBILLVALIDATE=1 THEN NULL ELSE 0 END) AS TAX_PERCETAGE,'' AS TAX_AC_CODE,0 AS TAX_METHOD,
	 A.NET,A.MRPVAL AS MRP,B.QUANTITY AS QTY,ISNULL(C.USER_CODE,@CUSERCODE) AS USER_CODE,
	 0 AS TAX_AMOUNT,A.PRODUCT_CODE,0 AS CMM_DISCOUNT_AMOUNT,B.PACK_SLIP_ID,A.DISCOUNT_PERCENTAGE,A.DISCOUNT_AMOUNT,'' AS FORM_ID
	 FROM @OUTPUTC A  
	 JOIN #TMPCMD B ON A.CMD_ROW_ID=B.CMD_ROW_ID
	 LEFT OUTER JOIN RPS_MST C ON C.CM_ID=B.PACK_SLIP_ID
	 
	PRINT 'TAXCALC-6'	 	
	
	DECLARE @TRETMSG TABLE  (ERRMSG VARCHAR(MAX))
	
	INSERT @TRETMSG
	EXEC SP_GETCMTAX
	@CUSERCODE=@CUSERCODE,
	@DXNDT=@DXNDT,
	@NBILLLEVELDISCAMT=@NCMMDISCAMT,
	@NWSLTAXMETHOD=@NWSLTAXMETHOD,
	@BCALLEDFROMCASHMEMO=1,
	@BSALESSETUPINEFFECT=@BSALESSETUPINEFFECT,
	@CDTCODE=@CDTCODE
	
	
	PRINT 'TAXCALC-6.5'	 	
	IF NOT EXISTS (SELECT TOP 1 * FROM @TRETMSG WHERE ERRMSG<>'')
		UPDATE A SET TAX_PERCENTAGE=B.TAX_PERCENTAGE,TAX_AMOUNT=B.TAX_AMOUNT,TAX_METHOD=B.TAX_METHOD,
		CMM_DISCOUNT_AMOUNT=B.CMM_DISCOUNT_AMOUNT,RFNET=(A.NET-B.CMM_DISCOUNT_AMOUNT)+
		(CASE WHEN B.TAX_METHOD=2 THEN B.TAX_AMOUNT ELSE 0 END)
		FROM @OUTPUTC A
		JOIN #TMPCMDTAX B ON A.CMD_ROW_ID=B.ROW_ID


		
	UPDATE A SET RFNET=(A.NET-A.CMM_DISCOUNT_AMOUNT)+(CASE WHEN A.TAX_METHOD=2 THEN A.TAX_AMOUNT ELSE 0 END)
	FROM @OUTPUTC A
	
	GOTO LBLLAST
	
LBLLAST:
		
	UPDATE @OUTPUTC SET WEIGHTED_AVG_DISC_AMT=ISNULL(WEIGHTED_AVG_DISC_AMT,0)
	
	UPDATE A SET WEIGHTED_AVG_DISC_PCT=(CASE WHEN (B.MRP*B.QUANTITY)=0 THEN 0 ELSE ROUND((A.WEIGHTED_AVG_DISC_AMT/(B.MRP*B.QUANTITY))*100,2) END)
	FROM  @OUTPUTC A JOIN #TMPCMD B ON A.CMD_ROW_ID=B.CMD_ROW_ID
			 		 	
	PRINT 'COME TO LAST-1'
	
	IF @BCALLEDFROMMANUALBILLVALIDATE=0
	BEGIN	
		IF @BUPDATETAX=0 
			SELECT * FROM @OUTPUTC ORDER BY PRODUCT_CODE
		ELSE
			INSERT #TAX(PRODUCT_CODE,TAX_PERCENTAGE) 
			SELECT PRODUCT_CODE,TAX_PERCENTAGE FROM @OUTPUTC
	END
	ELSE
	BEGIN
		SET @CCMD=N'UPDATE A SET DISCOUNT_AMOUNT=B.NET-B.MRP,
					CMM_DISCOUNT_AMOUNT=B.CMM_DISCOUNT_AMOUNT,TAX_PERCENTAGE=B.TAX_PERCENTAGE
					FROM TMPCMD_'+LTRIM(RTRIM(STR(@@SPID)))+' A JOIN #TMPCMDTAX B ON A.ROW_ID=B.ROW_ID'
		EXEC SP_EXECUTESQL @CCMD					
	END
		
	GOTO END_PROC
		
LBLPICKLASTDISC:
	PRINT 'COME TO PICKLASTDISC'
	IF EXISTS (SELECT TOP 1 CONFIG_OPTION FROM CONFIG WHERE  CONFIG_OPTION='PICK_LAST_SLS_DISC')
		EXEC SP_WL_PICKLASTDISCOUNT	@CPRODUCTCODE	
	ELSE	
		SELECT 0 AS DISCOUNT_PERCENTAGE	

END_PROC:
	IF @CPRODUCTCODEPARA='' AND @BCALLEDFROMMANUALBILLVALIDATE=0 AND @BCALLEDFROMSAVETRAN=0
	BEGIN
		SET @CCMD=N'DROP TABLE TMPCMD_'+LTRIM(RTRIM(STR(@@SPID)))	
		EXEC SP_EXECUTESQL @CCMD
	END	
END

