
create PROCEDURE SP3S_SYNCH_UPLOADDATA_IRR_OPT
(
   @nSpId VARCHAR(50),
   @CERRMSG VARCHAR(MAX) OUTPUT
)
--WITH ENCRYPTION
AS
BEGIN

DECLARE @CSTEP VARCHAR(100),@DTSQL NVARCHAR(MAX),@NMERGE_ORDER NUMERIC(5),@cUpdatestr VARCHAR(4000),@bCancelled BIT
	   ,@CTABLENAME VARCHAR(200),@CTABLE_SUFFIX VARCHAR(50),@CKEYFIELD VARCHAR(200),@CDEL_ID VARCHAR(50),@CTMP_TABLENAME VARCHAR(200),@LINSERTONLY VARCHAR(1)
	   ,@CFILTERCONDITION VARCHAR(200),@LUPDATEONLY VARCHAR(1),@BALWAYSUPDATE VARCHAR(1),@FDEL CHAR(1)
	   ,@CERRMSGOUT VARCHAR(1000),@CTABLESSTR VARCHAR(MAX),@CMIRRORINGENABLED VARCHAR(5)
	   ,@CCURDEPTID VARCHAR(5),@CTEMPMASTERTABLE VARCHAR(200),@CTEMPDETAILTABLE1 VARCHAR(200),@CTEMPDETAILTABLE2 VARCHAR(200)
	   ,@CTEMPPAYMODETABLE VARCHAR(200),@CTEMPTABLE VARCHAR(100)
	   ,@BADDMODE BIT,@CWHERECLAUSE VARCHAR(2000),@CMEMOIDSEARCH varchar(50)
	   ,@CSOURCEDB VARCHAR(200),@CMERGEDB VARCHAR(200)
	   ,@BMSTINSERTONLY BIT,@CMEMOID VARCHAR(40)
	   ,@NLENVALUE INT,@NVERSIONNO INT,@CTEMPSKUTABLE VARCHAR(500)
	   ,@CCMD NVARCHAR(MAX),@cLocId varchar(5)
	

BEGIN TRY
	   
     SELECT @CSOURCEDB='',@CMERGEDB='',@BMSTINSERTONLY=1,@CERRMSG=''
	 SELECT TOP 1 @CCURDEPTID=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='LOCATION_ID'

	SELECT @CTEMPMASTERTABLE=@CSOURCEDB+'Irr_Irm01106_Upload',
		   @CTEMPDETAILTABLE1=@CSOURCEDB+'Irr_Ird01106_Upload'

			
LBLSTART:
    
    BEGIN TRANSACTION
    SELECT @CMEMOID='',@NVERSIONNO=0
    
    
	SELECT TOP 1 @CMEMOID = B.irm_memo_id ,@cLocId= B.location_Code 
    FROM IRR_IRM01106_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId

	SET @CSTEP=17
  
    SET @CFILTERCONDITION = 'B.sp_ID='''+@nSpId+''''
		
	SET @CMEMOIDSEARCH=''
	SELECT TOP 1 @CMEMOIDSEARCH=A.irm_memo_id FROM irm01106 A (NOLOCK) WHERE A.irm_memo_id=@CMEMOID

	SET @CSTEP=19
  
		
	IF ISNULL(@CMEMOIDSEARCH,'')<>''
		SET @BADDMODE=0
	ELSE
		SET @BADDMODE=1


	IF @BADDMODE=0
	BEGIN

		SET @CSTEP=21

	
		IF EXISTS (SELECT TOP 1 TABLENAME FROM SAVETRAN_UPDCOLS_UPDATESTR (NOLOCK) WHERE SP_ID=@NSPID)
			DELETE FROM SAVETRAN_UPDCOLS_UPDATESTR WITH (ROWLOCK) WHERE SP_ID=@NSPID

		INSERT savetran_updcols_updatestr (sp_id,tablename,updatestr)
		SELECT @nSPId as sp_id,tablename,'' from mirrorxnsinfo (NOLOCK)
		WHERE tablename IN ('IRM01106','IRD01106')

		SET @CSTEP=23

		EXEC SP3S_VERIFY_IRRDATA_MERGE_CHANGES
		@nSpId=@nSpId,
		@CMEMOID=@CMEMOID
		
	END

	DECLARE @cMissingRowId VARCHAR(40)

	IF @BADDMODE=0
	BEGIN	

		SET @CSTEP=27

		SELECT TOP 1 @CMISSINGROWID=A.ROW_ID FROM ird01106 A (NOLOCK) 
		LEFT JOIN 
		(SELECT ROW_ID FROM IRR_IRD01106_UPLOAD B (NOLOCK) WHERE SP_ID=@NSPID) B
		ON A.ROW_ID =B.ROW_ID WHERE A.IRM_MEMO_ID  =@CMEMOID AND B.ROW_ID IS NULL

		IF ISNULL(@cMissingRowId,'')<>''
		BEGIN		
			SET @CSTEP=30

			 DELETE A FROM ird01106 A WITH (ROWLOCK) LEFT JOIN 
			(SELECT row_id FROM IRR_IRD01106_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId) b
			ON A.row_ID =B.row_ID WHERE A.IRM_MEMO_ID =@CMEMOID AND b.row_id IS NULL
		END

	
	END
	
LBLMERGE:

	SET @CFILTERCONDITION = 'B.sp_id='''+@nSpId+''''


	---UPDATING TRANSACTION TABLES
	SET @CTABLENAME='IRM01106'
	SET @CTMP_TABLENAME='IRR_IRM01106_UPLOAD'
	SET @CKEYFIELD='IRM_MEMO_ID'

	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nspid and tablename='IRM01106'
	SET @LUPDATEONLY = (CASE WHEN @BADDMODE=0 THEN 1 ELSE 0 END)	

	EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
							  ,@BALWAYSUPDATE=1,@lUpdateXns=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1  


	
	IF EXISTS (SELECT TOP 1 a.section_code FROM IRR_Sectionm_upload a (NOLOCK)
				LEFT OUTER JOIN sectionm b (NOLOCK) ON a.section_code=b.section_code
				WHERE a.sp_id=@nSpId AND b.section_code IS NULL)
	BEGIN
		SET @CSTEP=37

		SET @CTABLENAME='SECTIONM'
		SET @CTMP_TABLENAME='IRR_SECTIONM_upload'
		SET @CKEYFIELD='SECTION_CODE'
		SET @CSTEP=45

		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1 
	END

	IF EXISTS (SELECT TOP 1 a.section_code FROM IRR_Sectiond_upload a (NOLOCK)
			LEFT OUTER JOIN sectiond b (NOLOCK) ON a.sub_section_code=b.sub_section_code
			WHERE a.sp_id=@nSpId AND b.sub_section_code IS NULL)
	BEGIN

	
		SET @CSTEP=50

		SET @CTABLENAME='SECTIOND'
		SET @CTMP_TABLENAME='IRR_SECTIOND_UPLOAD'
		SET @CKEYFIELD='SUB_SECTION_CODE'

		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1 
	END						  

	IF EXISTS (SELECT TOP 1 a.article_code FROM IRR_ARTICLE_upload a (NOLOCK) 
				LEFT OUTER JOIN article b (NOLOCK) ON a.article_code=b.article_code
			    WHERE a.sp_id=@nSpId AND b.article_code IS NULL)	
	BEGIN

   		SET @CSTEP=55

		SET @CTABLENAME='ARTICLE'
		SET @CTMP_TABLENAME='IRR_ARTICLE_upload'
		SET @CKEYFIELD='ARTICLE_CODE'
		
		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
									,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
									,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
									,@BALWAYSUPDATE=1 
							  
	END
	
	DECLARE @nParaCnt NUMERIC(2,0),@cColName VARCHAR(20)							  

	DECLARE @NCOUNT INT,@BLOOP INT,@CCMD1 NVARCHAR(MAX),@bExists bit
	SET @NCOUNT=6
	SET @BLOOP=1
	WHILE (@BLOOP <=@NCOUNT )
	BEGIN
			SET @CSTEP=65

			SET @nParaCnt=@bLoop
			SET @CTABLENAME='PARA'+RTRIM(LTRIM(STR(@nParaCnt)))
			SET @CTMP_TABLENAME='IRR_PARA'+RTRIM(LTRIM(STR(@nParaCnt)))+'_upload'
			SET @CKEYFIELD='PARA'+RTRIM(LTRIM(STR(@nParaCnt)))+'_CODE'


			SET @cCmd=N'IF EXISTS (SELECT TOP 1 '+@CKEYFIELD+' FROM '+@CTMP_TABLENAME+'(NOLOCK) WHERE sp_id='''+@nSpId+'''
							AND '+@cKeyField+'<>''0000000'')
							SET @bExists=1
						ELSE
							SET @bExists=0'
			PRINT @cCmd
			EXEC SP_EXECUTESQL @cCmd,N'@bExists BIT OUTPUT' ,@bExists=@bExists OUTPUT

		  	----FOR DUPLICATE ATTRIBUTE 
			
			IF @bExists=1
			BEGIN
				SET @CSTEP=70
				

				SET @cCmd=N'IF EXISTS (SELECT TOP 1 a.'+@CKEYFIELD+' FROM '+@CTMP_TABLENAME+' a (NOLOCK)
									   LEFT OUTER JOIN '+@CTABLENAME+' b (NOLOCK) ON a.'+@CKEYFIELD+'=b.'+@CKEYFIELD+'
									   WHERE sp_id='''+@nSpId+''' AND b.'+@CKEYFIELD+' IS NULL)
							SET @bExists=1
						ELSE
							SET @bExists=0'
				EXEC SP_EXECUTESQL @cCmd,N'@bExists BIT OUTPUT' ,@bExists=@bExists OUTPUT

		
				IF @bExists=1
				BEGIN

					SET @CSTEP=75

					 EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB        
					 ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''        
					 ,@LINSERTONLY=1,@LUPDATEONLY=0        
					 ,@BALWAYSUPDATE=1
					 ,@CFILTERCONDITION=@CFILTERCONDITION 
				END
			END
			
		

	       
		   SET @BLOOP=@BLOOP +1  			
	END
    						  
	
	
	SET @CSTEP=140
 
	
	SET @CSTEP=157
	
	IF EXISTS (SELECT TOP 1 a.product_code FROM IRR_SKU_upload a (NOLOCK) LEFT OUTER JOIN 
			   sku b (NOLOCK) ON a.product_code=b.product_code
			   WHERE a.sp_ID=@nSpId AND b.product_code IS NULL) 
	BEGIN
		SET @CSTEP=160

		SET @CTABLENAME='SKU'
		SET @CTMP_TABLENAME='IRR_SKU_UPLOAD'
		SET @CKEYFIELD='PRODUCT_CODE'

	
		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1 
	END


	IF EXISTS (SELECT TOP 1 a.product_code FROM IRR_SKU_OH_upload a (NOLOCK) LEFT OUTER JOIN 
			   sku_oh b (NOLOCK) ON a.product_code=b.product_code
			   WHERE a.sp_ID=@nSpId AND b.product_code IS NULL) 
	BEGIN
		SET @CSTEP=160

		SET @CTABLENAME='SKU_OH'
		SET @CTMP_TABLENAME='IRR_SKU_OH_UPLOAD'
		SET @CKEYFIELD='PRODUCT_CODE'

	
		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1 
	END
								  

LBLDELETETEMPDATA:
 
	IF @BADDMODE=0
		PRINT 'ADDMODE:N'
	ELSE
		PRINT 'ADDMODE:Y'	
	
	SET @CSTEP=165
  
	SET @CTABLENAME='IRD01106'
	SET @CTMP_TABLENAME='IRR_IRD01106_UPLOAD'
	SET @CKEYFIELD='ROW_ID'
	
	
	SELECT @cMissingRowId='',@lUpdateonly=0
	IF @BADDMODE=0
	BEGIN
		SET @CSTEP=185

		SELECT TOP 1 @cMissingRowId=b.row_id FROM 
		(SELECT row_id  FROM IRR_IRD01106_UPLOAD (NOLOCK) WHERE sp_id=(@nSpId+@cLocId)) A
		RIGHT OUTER JOIN 
		(SELECT row_id FROM IRR_IRD01106_UPLOAD (NOLOCK) WHERE sp_id=@nSpId) b ON 
		a.row_id=b.row_id WHERE a.row_id IS NULL

		--SELECT 'check @cMissingRowId of pid',@cMissingRowId

		IF ISNULL(@cMissingRowId,'')='' 
		begin
			SET @lUpdateonly=1

		end
	END

	SET @CSTEP=190
 
	
	--select 'check @lUpdateonly',@lUpdateonly as lUpdateonly,@cMissingRowId as MissingRowId
   SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nspid and tablename='IRD01106'
  
	set @cUpdatestr=isnull(@cUpdatestr,'')
	EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@lUpdateonly
							  ,@BALWAYSUPDATE=1,@lUpdateXns=@BADDMODE,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 

lblUpdatePmt:

	SET @CSTEP=240
  
	EXEC SP3S_MERGE_LOCPMT  
	@cTempTable='IRR_PMT01106_upload',  
	@cMemoIdCol='sp_id',  
	@cMemoId =@nSpid


	SET @CSTEP=245
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1
	
	DECLARE @nSpIdCopy VARCHaR(50)

	SET @nSpIdCopy=@nSpId+@cLocId

	EXEC SP3S_DELETEUPLOAD_IRRMERGE_TABLES @NSPID,@NSPIDCOPY
		   
END TRY
BEGIN CATCH
	SET @CERRMSG='P:SP3s_SYNCH_UPLOADDATA_IRR_OPT, MEMO ID :'+@CMEMOID+' STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO EXIT_PROC
END CATCH

EXIT_PROC:

	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRMSG,'')='' 
			commit
		ELSE
			ROLLBACK
    END



	
END	

