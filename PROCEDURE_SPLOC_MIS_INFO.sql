CREATE  PROCEDURE SPLOC_MIS_INFO
(
	 @DPROCESS DATETIME=''
)	
--WITH ENCRYPTION
AS
BEGIN
	DECLARE @CFINYEAR VARCHAR(10),@DFROMDT DATETIME
		   ,@CPREFINYEAR VARCHAR(10),@DPREFROMDT DATETIME,@DPRECURRENTDT DATETIME
		   ,@CERRMSGOUT VARCHAR(500),@CSTEP VARCHAR(5)
		   ,@CCSAID VARCHAR(50),@CPSAID VARCHAR(50),@CMISID VARCHAR(50)
		   ,@CCSAIDOUT VARCHAR(50),@CPSAIDOUT VARCHAR(50),@CALERT VARCHAR(500) 
		   ,@CERRMSG VARCHAR(500) 

BEGIN TRY	
	SET @CSTEP=10
	IF @DPROCESS=''
		SELECT TOP 1 @DPROCESS=dbo.fn_getlastrundate()
	
	SET @CSTEP=20
	--GETTING CURRENT FINYEAR
	SELECT @CFINYEAR='01'+DBO.FN_GETFINYEAR(@DPROCESS)
	--GETTING STARTING DATE FOR THE CURRENT FIN YEAR
	SET @CSTEP=30
	SELECT @DFROMDT=DBO.FN_GETFINYEARDATE(@CFINYEAR,1)
	--GETTING PREVIOUS FINYEAR
	SET @CSTEP=40
	SELECT @CPREFINYEAR='0'+CONVERT(VARCHAR(10),(@CFINYEAR-1))
	SET @CSTEP=50
	SELECT @DPRECURRENTDT=DATEADD(YY,-1,@DPROCESS)
	SET @CSTEP=60
	SELECT @DPREFROMDT=DATEADD(YY,-1,@DFROMDT)
	SET @CSTEP=70
	
	SET @CSTEP=80 
	SELECT TOP 1 @CMISID=PROCESS_ID FROM LOC_MIS_MST WHERE PROCESS_DT=@DPROCESS
	
	SET @CSTEP=90
	IF ISNULL(@CMISID,'')<>'' 
	BEGIN
		DELETE LOC_MIS_INFO WHERE PROCESS_ID=@CMISID
		DELETE LOC_MIS_MST WHERE PROCESS_ID=@CMISID
	END  
	
	SET @CSTEP=100
	IF NOT EXISTS(SELECT TOP 1 'U' FROM POS_ANALYSIS WHERE PROCESS_DT=@DPROCESS)
	BEGIN	
		EXEC SP3S_PROCESS_PA @DPROCESS,1,@CCSAIDOUT,@CERRMSGOUT
		IF ISNULL(@CERRMSGOUT,'')<>''
		BEGIN 
			SET @CERRMSG=@CERRMSGOUT
			GOTO EXIT_PROC
		END
	END
	ELSE
		SELECT TOP 1 @CCSAIDOUT=PROCESS_ID FROM POS_ANALYSIS WHERE PROCESS_DT=@DPROCESS	
		
	IF NOT EXISTS(SELECT TOP 1 'U' FROM POS_ANALYSIS WHERE PROCESS_DT=@DPRECURRENTDT)
	BEGIN	
		EXEC SP3S_PROCESS_PA @DPRECURRENTDT,1,@CPSAIDOUT,@CERRMSGOUT
		IF ISNULL(@CERRMSGOUT,'')<>''
		BEGIN 
			SET @CERRMSG=@CERRMSGOUT
			GOTO EXIT_PROC
		END
	END
	ELSE
		SELECT TOP 1 @CPSAIDOUT=PROCESS_ID FROM POS_ANALYSIS WHERE PROCESS_DT=@DPRECURRENTDT
	
	IF OBJECT_ID('TEMPDB..#POSD','U') IS NOT NULL
		DROP TABLE #POSD
	
	SELECT 'CUR' AS XN_TYPE,DEPT_ID,CUM_PSPD AS PSPD,CUM_GMROI AS GMROI,CUM_TPY AS TPY 
	INTO #POSD
	FROM POS_ANALYSIS WHERE PROCESS_ID=@CCSAIDOUT
	UNION ALL
	SELECT 'PRE' AS XN_TYPE,DEPT_ID,CUM_PSPD AS PSPD,CUM_GMROI AS GMROI,CUM_TPY AS TPY 
	FROM POS_ANALYSIS WHERE PROCESS_ID=@CPSAIDOUT
	
	IF OBJECT_ID('TEMPDB..#LOC_MIS_INFO','U') IS NOT NULL
		DROP TABLE #LOC_MIS_INFO
	
	SELECT DEPT_ID, CURRENT_PSPD, PREVIOUS_PSPD, CURRENT_GMROI, PREVIOUS_GMROI, CURRENT_TPY, PREVIOUS_TPY INTO #LOC_MIS_INFO FROM LOC_MIS_INFO WHERE 1=2
	IF EXISTS(SELECT TOP 1 'U' FROM #POSD)
	BEGIN
		 INSERT #LOC_MIS_INFO(DEPT_ID)
		 SELECT DISTINCT DEPT_ID FROM #POSD
		 
		 UPDATE A SET CURRENT_PSPD=B.PSPD
					 ,CURRENT_GMROI=B.GMROI
					 ,CURRENT_TPY=B.TPY
		 FROM #LOC_MIS_INFO A
		 JOIN #POSD B ON A.DEPT_ID=B.DEPT_ID AND B.XN_TYPE='CUR'
		 
		 UPDATE A SET PREVIOUS_PSPD=B.PSPD
					 ,PREVIOUS_GMROI=B.GMROI
					 ,PREVIOUS_TPY=B.TPY
		 FROM #LOC_MIS_INFO A
		 JOIN #POSD B ON A.DEPT_ID=B.DEPT_ID AND B.XN_TYPE='PRE'
	END
	
	IF EXISTS(SELECT TOP 1 'U' FROM #LOC_MIS_INFO)
	BEGIN
		SET @CMISID='PD'+CONVERT(VARCHAR(40),NEWID())
		
		INSERT LOC_MIS_MST	( PROCESS_ID, PROCESS_DT, LAST_UPDATE )  
		SELECT 	@CMISID AS PROCESS_ID,@DPROCESS AS PROCESS_DT,GETDATE() AS LAST_UPDATE 
		
		INSERT LOC_MIS_INFO	(PROCESS_ID ,PROCESSEDDT, FIN_YEAR, DEPT_ID, CURRENT_PSPD, PREVIOUS_PSPD, CURRENT_GMROI, PREVIOUS_GMROI, CURRENT_TPY, PREVIOUS_TPY )  
		SELECT 	@CMISID AS PROCESS_ID,@DPROCESS AS PROCESSEDDT,@CFINYEAR AS FIN_YEAR, DEPT_ID, CURRENT_PSPD, PREVIOUS_PSPD, CURRENT_GMROI, PREVIOUS_GMROI, CURRENT_TPY, PREVIOUS_TPY 
		FROM #LOC_MIS_INFO
	END
	
END TRY
BEGIN CATCH
	SET @CERRMSG='P: SPLOC_MIS_INFO, STEP - '+@CSTEP+CHAR(13)+', MESSAGE : '+ERROR_MESSAGE() 
	GOTO EXIT_PROC
END CATCH

EXIT_PROC:
	IF ISNULL(@CERRMSG,'')<>''
	BEGIN
		INSERT ERROR_LOG(SOURCE,MESSAGE,REMARKS)
		SELECT 'SPLOC_MIS_INFO',@CERRMSG,'PROCESS DATE :'+CONVERT(VARCHAR(10),@DPROCESS,110)
	END

END
---END OF PROCEDURE - SPLOC_MIS_INFO
