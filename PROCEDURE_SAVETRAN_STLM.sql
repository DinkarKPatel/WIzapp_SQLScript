create PROCEDURE SAVETRAN_STLM  
(  
  @SPID INT  
 ,@CMEMONOPREFIX VARCHAR(50) 
 ,@CBIN_ID VARCHAR(7)='000' ,
 @CMEMO_ID VARCHAR(50),
 @CREP_ID VARCHAR(10),
 @CUSER_CODE CHAR(10),
 @CFIN_YEAR VARCHAR(5),
 @cLocId char(4)=''
)  
AS  
BEGIN  
	--changes by Dinkar in location id varchar(4)..
 --PETTY CASH IN
 DECLARE @CCMD NVARCHAR(MAX)  
   ,@NSTEP NUMERIC(5,0)  
   ,@CERRORMSG VARCHAR(MAX)  
   ,@NMEMONOLEN NUMERIC(20,0)  
   ,@CMEMONOVAL VARCHAR(50)  
   ,@CMEMOIDVAL VARCHAR(50)  
   ,@CLOCATIONID VARCHAR(4)  
   ,@BENABLETEMPDATABASE BIT     
   ,@CIDFIELD VARCHAR(50)
   ,@CTEMPTABLENAME VARCHAR(100) 
   
   
  
 BEGIN TRY  
  BEGIN TRANSACTION  
     SET @NMEMONOLEN=7
     SET @CERRORMSG=''
     
     SET @CTEMPTABLENAME='##TEMP_PCODE_'+RTRIM(LTRIM(STR(@SPID)))
    
     SET @NSTEP=10
     set @CCMD=N' UPDATE '+@CTEMPTABLENAME+' SET BIN_ID ='''+@CBIN_ID+''' WHERE ISNULL(BIN_ID,'''')='''''
     PRINT @CCMD
     EXEC SP_EXECUTESQL @CCMD
     
     SET @NSTEP=20
     set @CCMD=N' UPDATE A SET ERRMSG='' BARCODE NOT FOUND'' FROM '+@CTEMPTABLENAME+' A 
     LEFT JOIN SKU ON A.PRODUCT_CODE=SKU.PRODUCT_CODE 
     WHERE SKU.PRODUCT_CODE IS NULL '
     PRINT @CCMD
     EXEC SP_EXECUTESQL @CCMD
     
     --SET @NSTEP=25
     --SET @CCMD=N' UPDATE A SET ERRMSG='' BARCODE IS NOT PART OF RECONCILATION FILTER '' FROM '+@CTEMPTABLENAME+' A 
     --LEFT JOIN PMT01106 PMT ON A.PRODUCT_CODE=PMT.PRODUCT_CODE AND A.BIN_ID=PMT.BIN_ID AND PMT.REP_ID='''+@CREP_ID+'''
     --WHERE PMT.PRODUCT_CODE IS NULL '
     --PRINT @CCMD
     --EXEC SP_EXECUTESQL @CCMD
  SET @NSTEP=30  
  
 
 SET @CCMD=N'IF  EXISTS(SELECT TOP 1 ''U'' FROM '+@CTEMPTABLENAME+' WHERE ISNULL(ERRMSG,'''')<>'''')
		BEGIN
			SET @CERRORMSG=''INVALID ITEM...''
		END'
PRINT @CCMD
EXEC SP_EXECUTESQL @CCMD, N'@CERRORMSG VARCHAR(MAX) OUTPUT', @CERRORMSG OUTPUT
    
    
IF ISNULL(@CERRORMSG,'')<>''
GOTO END_PROC
	    
   	IF @cLocId=''
		SELECT @CLOCATIONID		= DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
    ELSE
		SET @CLOCATIONId=@cLocId

	 IF ISNULL(@CLOCATIONID,'')=''
	 BEGIN
		SET @CERRORMSG =' LOCATION ID CAN NOT BE BLANK  '  
		GOTO END_PROC    
	 END



     IF @CMEMONOPREFIX=''
     SET @CMEMONOPREFIX=@CLOCATIONID
SET @NSTEP=30
  --GENERATING MEMO_NO  
  EXEC GETNEXTKEY  @CTABLENAME='STLM01106'  
      ,@CCOLNAME='LOT_NO'  
      ,@NWIDTH=@NMEMONOLEN  
      ,@CPREFIX=@CMEMONOPREFIX  
      ,@NLZEROS=1  
      ,@CFINYEAR=@CFIN_YEAR  
      ,@NROWCOUNT=0  
      ,@CNEWKEYVAL=@CMEMONOVAL OUTPUT  
      
      SET @NSTEP=40
      IF ISNULL(@CMEMONOVAL,'')=''
      BEGIN
           SET @CERRORMSG='LOT NO GENERATION ERROR'
           set @CCMD=N' UPDATE A SET ERRMSG='' LOT NO GENERATION ERROR'' FROM '+@CTEMPTABLENAME+' A '
           EXEC SP_EXECUTESQL @CCMD
           GOTO END_PROC
      END
      
     INSERT STLM01106	( memo_id, lot_no, user_code, last_update, dept_id ) 
     SELECT @CMEMO_ID AS MEMO_ID,@CMEMONOVAL AS LOT_NO,@CUSER_CODE AS USER_CODE,
     GETDATE() AS LAST_UPDATE,@CLOCATIONID AS DEPT_ID
     
     SET @NSTEP=45
      SET @CCMD=N'  SELECT '''+@CMEMONOVAL+''' AS LOT_NO,A. PRODUCT_CODE, SUM(A.QUANTITY) AS QUANTITY,'''+@CLOCATIONID+''' DEPT_ID,
                   A.BIN_ID
      FROM '+@CTEMPTABLENAME+' A
      GROUP BY A.PRODUCT_CODE,A.BIN_ID '
       PRINT @CCMD
      INSERT STLD01106	( LOT_NO, PRODUCT_CODE, QUANTITY, DEPT_ID ,BIN_ID)  
      EXEC SP_EXECUTESQL @CCMD
    

 END TRY  
   
 BEGIN CATCH  
 END CATCH  
   
END_PROC:  
  --IF ISNULL(@CERRORMSG,'') <> ''  
  --BEGIN
	  set @CCMD=N' SELECT TOP 100 A.PRODUCT_CODE,ERRMSG FROM  '+@CTEMPTABLENAME+' A WHERE ISNULL(ERRMSG,'''')<>'''' '
	  PRINT @CCMD
	  EXEC SP_EXECUTESQL @CCMD
  --END
  
  
 IF @@TRANCOUNT>0  
 BEGIN  
	  IF ISNULL(@CERRORMSG,'') = ''  
	   BEGIN  
		COMMIT TRANSACTION  
	   END  
	  ELSE  
	  BEGIN  
		ROLLBACK  
	  END  
 END  
 


 
 
END   


--alter table STLD01106 add bin_id varchar(7)
