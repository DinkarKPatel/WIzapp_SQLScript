
CREATE PROCEDURE SP3S_REP_GSTR9
(
@DFMDATE	DATETIME='2020-02-01',
@DTODATE	DATETIME='2020-02-28',
@CGSTN_NO	VARCHAR(100)='',
@CLOC_TYPE	INT=0,
@CDEPT_ID	VARCHAR(5)=''
)
AS
BEGIN
     
	 
	  DECLARE @NYEAR INT 
     SET @NYEAR=(SELECT CASE WHEN MONTH(@DFMDATE)<=3  THEN   YEAR(@DFMDATE)-1
     ELSE YEAR(@DFMDATE) END )
     
	 SELECT @DFMDATE=CAST(@NYEAR AS VARCHAR(10))+'-'+'04-01'
	 SELECT @DTODATE=CAST(@NYEAR+1 AS VARCHAR(10))+'-'+'03-31'

	  IF OBJECT_ID ('TEMPDB..#TMP_DO_NOT_CONSIDER_FOR_GSTRREPS','U') is not null
	    drop table #TMP_DO_NOT_CONSIDER_FOR_GSTRREPS
     
	 IF OBJECT_ID('TEMPDB..#TMPALPHA','U') IS NOT NULL
	    DROP TABLE #TMPALPHA
	 
	 SELECT number, Char(number+65) as  [ALPHA]
	 into #TMPALPHA
     FROM master.dbo.spt_values
     WHERE name IS NULL AND 
     number < 26

	 SELECT A.user_code INTO #TMP_DO_NOT_CONSIDER_FOR_GSTRREPS FROM USERS A
	 WHERE ISNULL(DO_NOT_CONSIDER_FOR_GSTRREPS,0)=1

	  IF OBJECT_ID ('TEMPDB..#TMPWSLCDNUR','U') IS NOT NULL
             DROP TABLE #TMPWSLCDNUR
    
          SELECT A.CN_ID ,CASE WHEN ISNULL(A.RM_ID,'')='' THEN A.PARTY_DEPT_ID ELSE  a.location_Code  END AS DEPT_ID 
		  INTO #TMPWSLCDNUR FROM CNM01106 A (NOLOCK)
          LEFT JOIN LMP01106 B ON A.AC_CODE =B.AC_CODE 
		  LEFT JOIN LOCATION L ON L.DEPT_ID =CASE WHEN ISNULL(A.RM_ID,'')='' THEN A.PARTY_DEPT_ID ELSE  A.location_Code END 
		  LEFT JOIN LOCATION SL ON SL.DEPT_ID =A.location_Code 
          WHERE A.MODE =1 
          AND CANCELLED =0  AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
          AND  ISNULL(CASE WHEN A.MODE=1 THEN  ISNULL(B.AC_GST_NO,'') ELSE  L.LOC_GST_NO END ,'')=''
          --AND A.CN_TYPE=1
          AND A.TOTAL_AMOUNT>=250000 
          AND A.RECEIPT_DT BETWEEN @DFMDATE AND @DTODATE
          AND (@CGSTN_NO='' OR SL.LOC_GST_NO=@CGSTN_NO)
          AND (@CLOC_TYPE=0 OR ISNULL(SL.LOC_TYPE,0) =@CLOC_TYPE)
          AND (@CDEPT_ID='' OR A.location_Code =@CDEPT_ID)
	      and a.party_state_code <>sl.gst_state_code 
	      
		    IF OBJECT_ID ('TEMPDB..#TMPSLSCDNUR','U') IS NOT NULL
             DROP TABLE #TMPSLSCDNUR
             
          SELECT  CM_ID 
          INTO #TMPSLSCDNUR
          FROM  CMM01106 A (NOLOCK)
          JOIN CUSTDYM B (NOLOCK) ON A.CUSTOMER_CODE =B.CUSTOMER_CODE 
          JOIN LOCATION SL ON SL.DEPT_ID =A.location_Code 
		  LEFT JOIN #TMP_DO_NOT_CONSIDER_FOR_GSTRREPS U ON A.USER_CODE =U.user_code
          WHERE CANCELLED=0 AND ISNULL(A.Party_Gst_No,'')='' 
          AND NET_AMOUNT <0
          AND ABS(NET_AMOUNT)>=250000 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
          AND A.CM_DT BETWEEN @DFMDATE AND @DTODATE
          AND (@CGSTN_NO='' OR SL.LOC_GST_NO=@CGSTN_NO)
          AND (@CLOC_TYPE=0 OR ISNULL(SL.LOC_TYPE,0) =@CLOC_TYPE)
		  AND ISNULL(A.Party_Gst_No,'')=''
		  AND (@CDEPT_ID='' OR A.location_Code =@CDEPT_ID)
          and a.party_state_code <>sl.gst_state_code 
		  AND U.user_code IS NULL
         

	-- SELECT @NYEAR

	 SELECT @CGSTN_NO AS GSTIN, 
	 CAST(@NYEAR AS VARCHAR(10))+'-'+ CAST(RIGHT(@NYEAR,2)+1 AS VARCHAR(10)) AS [YEAR]
	 
EXEC SP3S_B2B_GSTR @DFMDATE , @DTODATE ,@CGSTN_NO ,@CLOC_TYPE ,@CDEPT_ID,1 
 
EXEC SP3S_B2C_GSTR @DFMDATE , @DTODATE ,@CGSTN_NO ,@CLOC_TYPE ,@CDEPT_ID,1 

EXEC SP3S_EXPORT_GSTR @DFMDATE , @DTODATE ,@CGSTN_NO ,@CLOC_TYPE ,@CDEPT_ID,1 

   DECLARE @TBLADVANCE TABLE (SR INT,RTYPE VARCHAR(10),XN_TYPE VARCHAR(100),PLACE_OF_SUPPLY VARCHAR(100),RATE NUMERIC(8,2),
                                 GROSS_ADVANCE_REC NUMERIC(12,2),CESS_AMOUNT NUMERIC(8,2),
								 CGST_AMOUNT NUMERIC(12,2),SGST_AMOUNT NUMERIC(12,2),IGST_AMOUNT NUMERIC(12,2))
      
      INSERT INTO @TBLADVANCE(SR ,RTYPE,XN_TYPE,PLACE_OF_SUPPLY,RATE,
	  GROSS_ADVANCE_REC,CESS_AMOUNT,cgst_amount,SGST_AMOUNT ,igst_amount)
      SELECT SR=CAST(1 AS INT),
             CAST('AT' AS VARCHAR(100)) AS RTYPE,
            CAST(CASE WHEN B.ARCT =2 THEN  'ADVANCE' 
                     WHEN B.ARCT =3 THEN  'GV VOUCHER' 
                     WHEN B.ARCT =4 THEN  'OTHER CHARGES'
                     WHEN B.ARCT =5 THEN  'DISC CARD'  
            ELSE '' END AS VARCHAR(100)) AS XN_TYPE ,
            LS.GST_STATE_CODE+'-'+LS.GST_STATE_NAME AS PLACE_OF_SUPPLY,
            GST_PERCENTAGE AS RATE,
            B.TAXABLE_VALUE AS GROSS_ADVANCE_REC,
            0 AS CESS_AMOUNT,
			b.cgst_amount,b.sgst_amount,b.igst_amount
      FROM ARC01106   B (NOLOCK) 
      JOIN LOCATION C (NOLOCK) ON C.DEPT_ID =B.location_Code 
      JOIN CUSTDYM CUST (NOLOCK) ON CUST.CUSTOMER_CODE =B.CUSTOMER_CODE 
      LEFT JOIN LMP01106 LMP (NOLOCK) ON LMP.AC_CODE=B.AC_CODE 
      LEFT JOIN GST_STATE_MST LS (NOLOCK) ON LS.GST_STATE_CODE =B.PARTY_STATE_CODE  
      JOIN GST_STATE_MST CS (NOLOCK) ON CS.GST_STATE_CODE =CUST.CUS_GST_STATE_CODE  
      LEFT JOIN
      ( 
        SELECT PX.ADJ_MEMO_ID
        FROM ARC01106   B (NOLOCK) 
	    JOIN PAYMODE_XN_DET PX (NOLOCK) ON PX.ADJ_MEMO_ID=B.ADV_REC_ID
	    JOIN CMM01106 CM (NOLOCK) ON CM.CM_ID=PX.MEMO_ID
	    JOIN LOCATION C (NOLOCK) ON C.DEPT_ID =B.location_Code 
	    WHERE B.CANCELLED =0 AND CM.CANCELLED=0 AND PAYMODE_CODE='0000002'
        AND ARC_TYPE =1 AND ARCT=2
        AND CM.CM_DT   BETWEEN @DFMDATE AND @DTODATE
        AND (@CGSTN_NO='' OR C.LOC_GST_NO=@CGSTN_NO)
        AND (@CLOC_TYPE=0 OR ISNULL(C.LOC_TYPE,0) =@CLOC_TYPE)
	    GROUP BY PX.ADJ_MEMO_ID
      ) ADJ ON B.ADV_REC_ID =ADJ.ADJ_MEMO_ID 
      WHERE B.CANCELLED =0
      AND ARC_TYPE =1 AND ARCT<>1
      AND B.ADV_REC_DT   BETWEEN @DFMDATE AND @DTODATE
      AND (@CGSTN_NO='' OR C.LOC_GST_NO=@CGSTN_NO)
      AND (@CLOC_TYPE=0 OR ISNULL(C.LOC_TYPE,0) =@CLOC_TYPE)
      AND ADJ.ADJ_MEMO_ID IS NULL
      AND ISNULL(GST_PERCENTAGE,0)>0
      AND  ISNULL(B.HSN_CODE ,'') NOT IN('','0000000000')
      AND (@CDEPT_ID='' OR B.location_Code=@CDEPT_ID)
   

   --advance adjusted

    DECLARE @TBLADVANCEADJ TABLE (SR INT,RTYPE VARCHAR(10),XN_TYPE VARCHAR(100),PLACE_OF_SUPPLY VARCHAR(100),RATE NUMERIC(8,2),
                                 GROSS_ADVANCE_ADJ NUMERIC(12,2),
								 CESS_AMOUNT NUMERIC(8,2),
								  CGST_AMOUNT NUMERIC(12,2),SGST_AMOUNT NUMERIC(12,2),IGST_AMOUNT NUMERIC(12,2))
       INSERT INTO @TBLADVANCEADJ(SR ,RTYPE,XN_TYPE,PLACE_OF_SUPPLY,RATE,GROSS_ADVANCE_ADJ,CESS_AMOUNT,
	                             CGST_AMOUNT ,SGST_AMOUNT ,IGST_AMOUNT )  
      SELECT SR=CAST(1 AS INT),
             CAST('ATADJ' AS VARCHAR(100)) AS RTYPE,
            'ADVANCE ADJUSTED' AS XN_TYPE ,
            LS.GST_STATE_CODE+'-'+LS.GST_STATE_NAME AS PLACE_OF_SUPPLY,
            GST_PERCENTAGE AS RATE,
            B.TAXABLE_VALUE AS GROSS_ADVANCE_ADJ,
            0 AS CESS_AMOUNT ,
			b.cgst_amount ,b.sgst_amount ,b.igst_amount 
      FROM ARC01106   B (NOLOCK) 
	  JOIN PAYMODE_XN_DET PX (NOLOCK) ON PX.ADJ_MEMO_ID=B.ADV_REC_ID
	  JOIN CMM01106 CM (NOLOCK) ON CM.CM_ID=PX.MEMO_ID
	  JOIN LOCATION C (NOLOCK) ON C.DEPT_ID =CM.location_Code
      JOIN CUSTDYM CUST (NOLOCK) ON CUST.CUSTOMER_CODE =B.CUSTOMER_CODE 
      LEFT JOIN LMP01106 LMP (NOLOCK) ON LMP.AC_CODE=B.AC_CODE 
      LEFT JOIN GST_STATE_MST LS (NOLOCK) ON LS.GST_STATE_CODE =B.PARTY_STATE_CODE  
      JOIN GST_STATE_MST CS (NOLOCK) ON CS.GST_STATE_CODE =CM.PARTY_STATE_CODE  
      LEFT JOIN
      (
        SELECT DISTINCT  B.ADV_REC_ID 
        FROM ARC01106   B (NOLOCK) 
        JOIN LOCATION C (NOLOCK) ON C.DEPT_ID =B.location_Code
        WHERE B.CANCELLED =0
        AND ARC_TYPE =1 AND ARCT<>1
        AND B.ADV_REC_DT   BETWEEN @DFMDATE AND @DTODATE
        AND (@CGSTN_NO='' OR C.LOC_GST_NO=@CGSTN_NO)
        AND (@CLOC_TYPE=0 OR ISNULL(C.LOC_TYPE,0) =@CLOC_TYPE)
      ) ADJ ON ADJ.ADV_REC_ID =B.ADV_REC_ID 
      WHERE B.CANCELLED =0 AND CM.CANCELLED=0 AND PAYMODE_CODE='0000002'
      AND ARC_TYPE =2 AND ARCT=2
      AND CM.CM_DT   BETWEEN @DFMDATE AND @DTODATE
      AND (@CGSTN_NO='' OR C.LOC_GST_NO=@CGSTN_NO)
   AND (@CLOC_TYPE=0 OR ISNULL(C.LOC_TYPE,0) =@CLOC_TYPE)
      AND ADJ.ADV_REC_ID IS NULL
      AND (ISNULL(B.CGST_AMOUNT ,0)+ ISNULL(B.SGST_AMOUNT ,0)+ ISNULL(B.IGST_AMOUNT ,0))<>0
      AND (@CDEPT_ID='' OR B.location_Code=@CDEPT_ID)
      
      
	  
 PRINT 'REPORT'

	 IF OBJECT_ID ('TEMPDB..#TMPREPORTS','U') IS NOT NULL
	    DROP TABLE #TMPREPORTS

	    SELECT  'A' as [4],
	          'Supplies made to un-registered persons (B2C)' as [Nature of Supplies],
              SUM(TAXABLE_VALUE) AS [Taxable Value (?)] ,
			  sum(CGST_AMOUNT) as [Central Tax],
			  sum(SGST_AMOUNT) as [State Tax / UT Tax],
			  SUM(IGST_AMOUNT) AS [Integrated Tax],
              SUM(isnull(CESS_AMOUNT,0)) AS [Cess],
             '' [Sheet Validation Errors]
	 INTO #TMPREPORTS
     FROM ##B2C A
	 union ALL
	 select  'B' as [4],
	          'Supplies made to registered persons (B2B)' as [Nature of Supplies],
              SUM(ISNULL(TAXABLE_VALUE,0)) AS [Taxable Value (?)] ,
			  sum(CGST_AMOUNT) as [Central Tax],
			  sum(SGST_AMOUNT) as [State Tax / UT Tax],
			  SUM(IGST_AMOUNT) AS [Integrated Tax],
              SUM(isnull(CESS_AMOUNT,0)) AS [Cess],
             '' [Sheet Validation Errors]
	 FROM ##B2B A
	 UNION ALL
	 SELECT 'C' as [4],
	          'Zero rated supply (Export) on payment of tax (except supplies to SEZs)' as [Nature of Supplies],
              SUM(isnull(TAXABLE_VALUE,0)) AS [Taxable Value (?)] ,
			  sum(isnull(CGST_AMOUNT,0)) as [Central Tax],
			  sum(isnull(SGST_AMOUNT,0)) as [State Tax / UT Tax],
			  SUM(isnull(IGST_AMOUNT,0)) AS [Integrated Tax],
              SUM(isnull(CESS_AMOUNT,0)) AS [Cess],
             '' [Sheet Validation Errors] 
	 FROM ##EXP
	 WHERE RATE=0
	 union all
	  SELECT 'D' as [4],
	          'Supply to SEZs on payment of tax	' as [Nature of Supplies],
              SUM(isnull(TAXABLE_VALUE,0)) AS [Taxable Value (?)] ,
			  sum(isnull(CGST_AMOUNT,0)) as [Central Tax],
			  sum(isnull(SGST_AMOUNT,0)) as [State Tax / UT Tax],
			  SUM(isnull(IGST_AMOUNT,0)) AS [Integrated Tax],
              SUM(isnull(CESS_AMOUNT,0)) AS [Cess],
             '' [Sheet Validation Errors] 
	 FROM ##EXP
	 WHERE RATE<>0
	 union all
	  SELECT 'E' as [4],
	          'Deemed Exports' as [Nature of Supplies],
              0 AS [Taxable Value (?)] ,
			  0 as [Central Tax],
			  0 as [State Tax / UT Tax],
			  0 AS [Integrated Tax],
              0 AS [Cess],
             '' [Sheet Validation Errors] 
     UNION ALL
      SELECT 'F' as [4],
	          'Advances on which tax has been paid but invoice has not been issued (not covered under (A) to (E) above)' as [Nature of Supplies],
              sum(ISNULL(GROSS_ADVANCE_REC,0)) AS [Taxable Value (?)] ,
			  sum(ISNULL(CGST_AMOUNT,0)) as [Central Tax],
			  sum(ISNULL(SGST_AMOUNT,0) ) as [State Tax / UT Tax],
			  sum(ISNULL(IGST_AMOUNT,0)) AS [Integrated Tax],
              0 AS [Cess],
             '' [Sheet Validation Errors]
      FROM @TBLADVANCE
     union all
	  SELECT 'G' as [4],
	          'Inward supplies on which tax is to be paid on reverse charge basis' as [Nature of Supplies],
              sum(ISNULL(GROSS_ADVANCE_ADJ,0)) AS [Taxable Value (?)] ,
			  sum(ISNULL(CGST_AMOUNT,0)) as [Central Tax],
			  sum(ISNULL(SGST_AMOUNT,0) ) as [State Tax / UT Tax],
			  sum(ISNULL(IGST_AMOUNT,0)) AS [Integrated Tax],
              0 AS [Cess],
             '' [Sheet Validation Errors]
      FROM @TBLADVANCEADJ

	  
	      DECLARE  @TBLCDNR TABLE(MEMO_ID VARCHAR(100),SR INT,RTYPE VARCHAR(10),XN_TYPE VARCHAR(100),GSTIN_UIN_RECIPIENT VARCHAR(100),INVOICE_NO VARCHAR(100),INVOICE_DT VARCHAR(15),
                            REF_VOUCHER_NO VARCHAR(100),REF_VOUCHER_DT VARCHAR(15),DOC_TYPE CHAR(1),REASON VARCHAR(1000),PLACE_OF_SUPPLY VARCHAR(100),
                            REF_VOUCHER_VALUE NUMERIC(12,2),RATE NUMERIC(8,2),TAXABLE_VALUE NUMERIC(12,2),CESS_AMOUNT NUMERIC(8,2),
                            PRE_GST CHAR(1),MEMO_DT DATETIME,RECEIVER_NAME VARCHAR(200),
							CGST_AMOUNT NUMERIC(12,2),SGST_AMOUNT NUMERIC(12,2),IGST_AMOUNT NUMERIC(12,2) )
     
 
	  
	    INSERT INTO @TBLCDNR (MEMO_ID,SR ,RTYPE ,XN_TYPE,GSTIN_UIN_RECIPIENT,INVOICE_NO ,INVOICE_DT ,REF_VOUCHER_NO ,REF_VOUCHER_DT ,
                           DOC_TYPE ,REASON ,PLACE_OF_SUPPLY ,REF_VOUCHER_VALUE ,RATE ,TAXABLE_VALUE ,CESS_AMOUNT ,PRE_GST,MEMO_DT,RECEIVER_NAME ,
						   CGST_AMOUNT,SGST_AMOUNT,IGST_AMOUNT)                                              
       SELECT 
             A.CN_ID,
             SR=CAST(1 AS INT),
            CAST('CDNR' AS VARCHAR(100)) AS RTYPE,
            'CN' AS XN_TYPE ,
            CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  B.LOC_GST_NO END AS GSTIN_UIN_RECIPIENT,
            '' AS INVOICE_NO,
            ''  AS INVOICE_DATE,
            A.CN_NO AS REF_VOUCHER_NO ,
            REPLACE(CONVERT(VARCHAR(11),A.CN_DT ,106),' ','-')  AS REF_VOUCHER_DT,
            'C' AS DOC_TYPE,
            ''   AS REASON,
            CASE WHEN A.MODE=1 THEN LMPS.GST_STATE_CODE+'-'+LMPS.GST_STATE_NAME ELSE  RMLS.GST_STATE_CODE+'-'+RMLS.GST_STATE_NAME END AS PLACE_OF_SUPPLY,
            A.TOTAL_AMOUNT AS REF_VOUCHER_VALUE,
            A.OTHER_CHARGES_GST_PERCENTAGE  ,
			A.OTHER_CHARGES_TAXABLE_VALUE   AS TAXABLE_VALUE,
          --  CND.XN_VALUE_WITHOUT_GST AS TAXABLE_VALUE,
            0 AS CESS_AMOUNT,
            'N' AS PRE_GST,
            A.CN_DT ,
            CASE WHEN A.MODE=1 THEN LM.AC_NAME ELSE  RML.DEPT_NAME  END AS RECEIVER_NAME,
			OTHER_CHARGES_CGST_AMOUNT,OTHER_CHARGES_SGST_AMOUNT,OTHER_CHARGES_IGST_AMOUNT
       FROM CNM01106 A (NOLOCK)
	   LEFT JOIN #TMPWSLCDNUR TMP ON A.CN_ID =TMP.CN_ID
       JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =A.location_Code 
	   JOIN GST_STATE_MST LS (NOLOCK)  ON LS.GST_STATE_CODE  =B.GST_STATE_CODE
	   LEFT JOIN LM01106 LM ON LM.AC_CODE =A.AC_CODE 
	   LEFT OUTER JOIN LMP01106 LMP (NOLOCK)  ON LMP.AC_CODE =A.AC_CODE
       LEFT JOIN GST_STATE_MST LMPS (NOLOCK)  ON LMPS.GST_STATE_CODE  =LMP.AC_GST_STATE_CODE
	   LEFT OUTER JOIN LOCATION RML (NOLOCK) ON RML.DEPT_ID =A.PARTY_DEPT_ID 
	   LEFT JOIN GST_STATE_MST RMLS (NOLOCK)  ON RMLS.GST_STATE_CODE  =RML.GST_STATE_CODE
      WHERE A.CANCELLED =0 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
      --AND A.CN_TYPE=1
	  AND A.RECEIPT_DT BETWEEN @DFMDATE AND @DTODATE
	  AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
	  AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
	  AND  (ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'') <>''
	  OR TMP.CN_ID IS NOT NULL)
      AND ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'')<>B.LOC_GST_NO
      AND ISNULL(A.OTHER_CHARGES_GST_PERCENTAGE,0)>0
       AND (@CDEPT_ID='' OR A.location_Code =@CDEPT_ID)
      UNION ALL
       SELECT 
             A.CN_ID,
             SR=CAST(1 AS INT),
            CAST('CDNR' AS VARCHAR(100)) AS RTYPE,
            'CN' AS XN_TYPE ,
            CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  RML.LOC_GST_NO END AS GSTIN_UIN_RECIPIENT,
            '' AS INVOICE_NO,
            ''  AS INVOICE_DATE,
            A.CN_NO AS REF_VOUCHER_NO ,
            REPLACE(CONVERT(VARCHAR(11),A.CN_DT ,106),' ','-')  AS REF_VOUCHER_DT,
            'C' AS DOC_TYPE,
            ''   AS REASON,
            CASE WHEN A.MODE=1 THEN LMPS.GST_STATE_CODE+'-'+LMPS.GST_STATE_NAME ELSE  RMLS.GST_STATE_CODE+'-'+RMLS.GST_STATE_NAME END AS PLACE_OF_SUPPLY,
            A.TOTAL_AMOUNT AS REF_VOUCHER_VALUE,
            A.FREIGHT_GST_PERCENTAGE  ,
			A.FREIGHT_TAXABLE_VALUE   AS TAXABLE_VALUE,
          --  CND.XN_VALUE_WITHOUT_GST AS TAXABLE_VALUE,
            0 AS CESS_AMOUNT,
            'N' AS PRE_GST,
            A.CN_DT ,
            CASE WHEN A.MODE=1 THEN LM.AC_NAME ELSE  RML.DEPT_NAME  END AS RECEIVER_NAME,
			FREIGHT_CGST_AMOUNT,FREIGHT_SGST_AMOUNT,FREIGHT_IGST_AMOUNT
       FROM CNM01106 A (NOLOCK)
	   LEFT JOIN #TMPWSLCDNUR TMP ON A.CN_ID =TMP.CN_ID
      JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =A.location_Code 
	   JOIN GST_STATE_MST LS (NOLOCK)  ON LS.GST_STATE_CODE  =B.GST_STATE_CODE
	   LEFT JOIN LM01106 LM ON LM.AC_CODE =A.AC_CODE 
	   LEFT OUTER JOIN LMP01106 LMP (NOLOCK)  ON LMP.AC_CODE =A.AC_CODE
       LEFT JOIN GST_STATE_MST LMPS (NOLOCK)  ON LMPS.GST_STATE_CODE  =LMP.AC_GST_STATE_CODE
	   LEFT OUTER JOIN LOCATION RML (NOLOCK) ON RML.DEPT_ID =A.PARTY_DEPT_ID 
	   LEFT JOIN GST_STATE_MST RMLS (NOLOCK)  ON RMLS.GST_STATE_CODE  =RML.GST_STATE_CODE
      WHERE A.CANCELLED =0 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
      --AND A.CN_TYPE=1
	  AND A.RECEIPT_DT BETWEEN @DFMDATE AND @DTODATE
	  AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
	  AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
	  AND  (ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'') <>''
	        OR TMP.CN_ID IS NOT NULL)
      AND ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'')<>B.LOC_GST_NO
      AND ISNULL(A.FREIGHT_GST_PERCENTAGE,0)>0
       AND (@CDEPT_ID='' OR A.location_Code =@CDEPT_ID)
      UNION ALL
       SELECT 
             A.CN_ID,
             SR=CAST(1 AS INT),
            CAST('CDNR' AS VARCHAR(100)) AS RTYPE,
            'CN' AS XN_TYPE ,
            CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  RML.LOC_GST_NO END AS GSTIN_UIN_RECIPIENT,
            '' AS INVOICE_NO,
            ''  AS INVOICE_DATE,
            A.CN_NO AS REF_VOUCHER_NO ,
            REPLACE(CONVERT(VARCHAR(11),A.CN_DT ,106),' ','-')  AS REF_VOUCHER_DT,
            'C' AS DOC_TYPE,
            ''   AS REASON,
           CASE WHEN A.MODE=1 THEN LMPS.GST_STATE_CODE+'-'+LMPS.GST_STATE_NAME ELSE  RMLS.GST_STATE_CODE+'-'+RMLS.GST_STATE_NAME END AS PLACE_OF_SUPPLY,
            A.TOTAL_AMOUNT AS REF_VOUCHER_VALUE,
            A.INSURANCE_GST_PERCENTAGE AS RATE  ,
			A.INSURANCE_TAXABLE_VALUE   AS TAXABLE_VALUE,
          --  CND.XN_VALUE_WITHOUT_GST AS TAXABLE_VALUE,
            0 AS CESS_AMOUNT,
            'N' AS PRE_GST,
            A.CN_DT ,
            CASE WHEN A.MODE=1 THEN LM.AC_NAME ELSE  RML.DEPT_NAME  END AS RECEIVER_NAME,
			INSURANCE_CGST_AMOUNT,INSURANCE_SGST_AMOUNT,INSURANCE_IGST_AMOUNT
       FROM CNM01106 A (NOLOCK)
	   LEFT JOIN #TMPWSLCDNUR TMP ON A.CN_ID =TMP.CN_ID
       JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =A.location_Code
	   JOIN GST_STATE_MST LS (NOLOCK)  ON LS.GST_STATE_CODE  =B.GST_STATE_CODE
	   LEFT JOIN LM01106 LM ON LM.AC_CODE =A.AC_CODE 
	   LEFT OUTER JOIN LMP01106 LMP (NOLOCK)  ON LMP.AC_CODE =A.AC_CODE
       LEFT JOIN GST_STATE_MST LMPS (NOLOCK)  ON LMPS.GST_STATE_CODE  =LMP.AC_GST_STATE_CODE
	   LEFT OUTER JOIN LOCATION RML (NOLOCK) ON RML.DEPT_ID =A.PARTY_DEPT_ID 
	   LEFT JOIN GST_STATE_MST RMLS (NOLOCK)  ON RMLS.GST_STATE_CODE  =RML.GST_STATE_CODE
      WHERE A.CANCELLED =0 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
      --AND A.CN_TYPE=1
	  AND A.RECEIPT_DT BETWEEN @DFMDATE AND @DTODATE
	  AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
	  AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
	  AND  (ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'') <>''
	       OR TMP.cn_id IS NOT NULL)
      AND ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'')<>B.LOC_GST_NO
      AND ISNULL(A.INSURANCE_GST_PERCENTAGE,0)>0
      AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
      UNION ALL
      SELECT 
             A.CN_ID,
             SR=CAST(1 AS INT),
            CAST('CDNR' AS VARCHAR(100)) AS RTYPE,
            'CN' AS XN_TYPE ,
            CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  RML.LOC_GST_NO END AS GSTIN_UIN_RECIPIENT,
           CND.BILL_NO AS INVOICE_NO,
         REPLACE(CONVERT(VARCHAR(11),CND.BILL_DT,106),' ','-')  AS INVOICE_DATE,
            A.CN_NO AS REF_VOUCHER_NO ,
            REPLACE(CONVERT(VARCHAR(11),A.CN_DT ,106),' ','-')  AS REF_VOUCHER_DT,
            'C' AS DOC_TYPE,
            ''   AS REASON,
            CASE WHEN A.MODE=1 THEN LMPS.GST_STATE_CODE+'-'+LMPS.GST_STATE_NAME ELSE  RMLS.GST_STATE_CODE+'-'+RMLS.GST_STATE_NAME END AS PLACE_OF_SUPPLY,
            A.TOTAL_AMOUNT AS REF_VOUCHER_VALUE,
            CND.RATE ,
			 CASE WHEN ISNULL(CND.RATE,0)>0 THEN  CND.XN_VALUE_WITHOUT_GST ELSE 0 END  AS TAXABLE_VALUE,
          --  CND.XN_VALUE_WITHOUT_GST AS TAXABLE_VALUE,
            CND.gst_cess_amount AS CESS_AMOUNT,
            CASE WHEN CND.BILL_DT BETWEEN '2017-01-01' AND '2017-06-30'  THEN 'Y' ELSE 'N' END AS PRE_GST,
            A.CN_DT ,
            CASE WHEN A.MODE=1 THEN LM.AC_NAME ELSE  RML.DEPT_NAME  END AS RECEIVER_NAME,
			CGST_AMOUNT,SGST_AMOUNT,IGST_AMOUNT
       FROM CNM01106 A (NOLOCK)
	   LEFT JOIN #TMPWSLCDNUR TMP ON A.CN_ID =TMP.CN_ID
       JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =A.location_Code
	   JOIN GST_STATE_MST LS (NOLOCK)  ON LS.GST_STATE_CODE  =B.GST_STATE_CODE
	   LEFT JOIN LM01106 LM ON LM.AC_CODE =A.AC_CODE 
	   LEFT OUTER JOIN LMP01106 LMP (NOLOCK)  ON LMP.AC_CODE =A.AC_CODE
       LEFT JOIN GST_STATE_MST LMPS (NOLOCK)  ON LMPS.GST_STATE_CODE  =LMP.AC_GST_STATE_CODE
       JOIN 
	   (
	     SELECT CN_ID ,CND.INV_NO AS BILL_NO,CND.INV_DT AS BILL_DT,
				   ISNULL(CND.GST_PERCENTAGE,0) AS RATE  ,
				   SUM(XN_VALUE_WITHOUT_GST) AS XN_VALUE_WITHOUT_GST,
				   SUM(XN_VALUE_WITH_GST) AS XN_VALUE_WITH_GST,
				   SUM(CGST_AMOUNT) AS CGST_AMOUNT,
				   SUM(SGST_AMOUNT) AS SGST_AMOUNT,
				   SUM(IGST_AMOUNT) AS IGST_AMOUNT,
				   SUM(isnull(gst_cess_amount,0)) as gst_cess_amount
		 FROM CND01106   CND (NOLOCK) 
		 WHERE ISNULL(CND.GST_PERCENTAGE,0)>0
		 GROUP BY CN_ID ,CND.INV_NO,CND.INV_DT,CND.GST_PERCENTAGE
	   )CND ON A.CN_ID =CND.CN_ID 
	   LEFT OUTER JOIN LOCATION RML (NOLOCK) ON RML.DEPT_ID =A.PARTY_DEPT_ID 
	   LEFT JOIN GST_STATE_MST RMLS (NOLOCK)  ON RMLS.GST_STATE_CODE  =RML.GST_STATE_CODE
      WHERE A.CANCELLED =0 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
      --AND A.CN_TYPE=1
	  AND A.RECEIPT_DT BETWEEN @DFMDATE AND @DTODATE
	  AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
	  AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
	  AND ( ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'') <>''
	        OR TMP.CN_ID IS NOT NULL)
      AND ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'')<>B.LOC_GST_NO
      AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
      
    

	--CREDIT NOTE
      
        INSERT INTO @TBLCDNR (MEMO_ID,SR ,RTYPE ,XN_TYPE,GSTIN_UIN_RECIPIENT,INVOICE_NO ,INVOICE_DT ,REF_VOUCHER_NO ,REF_VOUCHER_DT ,
                           DOC_TYPE ,REASON ,PLACE_OF_SUPPLY ,REF_VOUCHER_VALUE ,RATE ,TAXABLE_VALUE ,CESS_AMOUNT ,
                           PRE_GST,MEMO_DT,RECEIVER_NAME,CGST_AMOUNT,SGST_AMOUNT,IGST_AMOUNT )
         SELECT   A.CM_ID ,
             SR=CAST(1 AS INT),
            CAST('CDNR' AS VARCHAR(100)) AS RTYPE,
            'SLS' AS XN_TYPE ,
            A.Party_Gst_No  AS GSTIN_UIN_RECIPIENT,
           ''   AS INVOICE_NO,
            '' AS INVOICE_DATE,
            A.CM_NO  AS REF_VOUCHER_NO ,
            REPLACE(CONVERT(VARCHAR(11),A.CM_DT ,106),' ','-')  AS REF_VOUCHER_DT,
            'C' AS DOC_TYPE,
            ''   AS REASON,
             CS.GST_STATE_CODE+'-'+CS.GST_STATE_NAME AS PLACE_OF_SUPPLY,
            A.NET_AMOUNT  AS REF_VOUCHER_VALUE,
            A.OTHER_CHARGES_GST_PERCENTAGE ,
			( OTHER_CHARGES_TAXABLE_VALUE)   AS TAXABLE_VALUE,
          --  CND.XN_VALUE_WITHOUT_GST AS TAXABLE_VALUE,
            0 AS CESS_AMOUNT,
            'N'  AS PRE_GST,
            A.CM_DT ,
            ISNULL(CUST.CUSTOMER_FNAME ,'')+' '+ISNULL(CUSTOMER_LNAME,'') AS RECEIVER_NAME,
			OTHER_CHARGES_CGST_AMOUNT,OTHER_CHARGES_SGST_AMOUNT,OTHER_CHARGES_IGST_AMOUNT
     FROM CMM01106 A (NOLOCK)
	 LEFT JOIN #TMPSLSCDNUR TMP (NOLOCK) ON A.CM_ID =TMP.CM_ID 
     JOIN CUSTDYM CUST (NOLOCK) ON A.CUSTOMER_CODE =CUST.CUSTOMER_CODE
     JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =A.location_Code
     JOIN GST_STATE_MST C (NOLOCK)  ON B.GST_STATE_CODE =C.GST_STATE_CODE
     LEFT JOIN GST_STATE_MST CS (NOLOCK)  ON CS.GST_STATE_CODE =A.PARTY_STATE_CODE 
	  LEFT JOIN #TMP_DO_NOT_CONSIDER_FOR_GSTRREPS U ON A.USER_CODE =U.user_code
     WHERE A.CANCELLED =0 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
     AND A.CM_DT BETWEEN @DFMDATE AND @DTODATE
     AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
     AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
	 AND (ISNULL(A.Party_Gst_No,'')<>'' OR TMP.cm_id IS NOT NULL)
	 AND ISNULL(A.OTHER_CHARGES_GST_PERCENTAGE,0)>0
	 AND A.NET_AMOUNT<0 
	 AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
	 AND U.user_code IS NULL
	 UNION ALL
     SELECT  A.CM_ID ,
             SR=CAST(1 AS INT),
            CAST('CDNR' AS VARCHAR(100)) AS RTYPE,
            'SLS' AS XN_TYPE ,
             A.Party_Gst_No  AS GSTIN_UIN_RECIPIENT,
            '' AS INVOICE_NO,
            REPLACE(CONVERT(VARCHAR(11),'',106),' ','-')  AS INVOICE_DATE,
            A.CM_NO  AS REF_VOUCHER_NO ,
            REPLACE(CONVERT(VARCHAR(11),A.CM_DT  ,106),' ','-')  AS REF_VOUCHER_DT,
            'C' AS DOC_TYPE,
            ''   AS REASON,
             CS.GST_STATE_CODE+'-'+CS.GST_STATE_NAME AS PLACE_OF_SUPPLY,
            A.NET_AMOUNT AS REF_VOUCHER_VALUE,
            CMD.RATE ,
			 (CASE WHEN ISNULL(CMD.RATE,0)>0 THEN  CMD.XN_VALUE_WITHOUT_GST ELSE 0 END ) AS TAXABLE_VALUE,
          --  CND.XN_VALUE_WITHOUT_GST AS TAXABLE_VALUE,
            CMD.gst_cess_amount AS CESS_AMOUNT,
            CASE WHEN CMD.RATE<>0  THEN 'Y' ELSE 'N' END AS PRE_GST,
            A.CM_DT,
            ISNULL(CUST.CUSTOMER_FNAME ,'')+' '+ISNULL(CUSTOMER_LNAME,'') AS RECEIVER_NAME  ,
			CGST_AMOUNT,SGST_AMOUNT,IGST_AMOUNT
     FROM CMM01106 A (NOLOCK)
	 LEFT JOIN #TMPSLSCDNUR TMP (NOLOCK) ON A.CM_ID =TMP.CM_ID 
     JOIN 
      ( SELECT CM_ID ,CMD.GST_PERCENTAGE AS RATE  ,
               SUM(XN_VALUE_WITHOUT_GST) AS XN_VALUE_WITHOUT_GST,
               SUM(XN_VALUE_WITH_GST) AS XN_VALUE_WITH_GST,
               SUM(CGST_AMOUNT) AS CGST_AMOUNT,
			  SUM(SGST_AMOUNT) AS SGST_AMOUNT,
			  SUM(IGST_AMOUNT) AS IGST_AMOUNT,
			  SUM(isnull(gst_cess_amount,0)) as gst_cess_amount
        FROM CMD01106  CMD (NOLOCK) 
		JOIN HSN_MST HM ON HM.HSN_CODE =CMD.HSN_CODE 
        WHERE ISNULL(TAXABLE_ITEM,0)=1 AND 
        --ISNULL(CMD.HSN_CODE ,'') NOT IN('','0000000000') AND
        (CMD.GST_PERCENTAGE >0 OR  ISNULL(REF_SLS_MEMO_DT,'') >=CASE WHEN CMD.QUANTITY >=0 THEN ISNULL(REF_SLS_MEMO_DT,'') ELSE '2017-07-01' END)
        GROUP BY CM_ID,CMD.GST_PERCENTAGE , REF_SLS_MEMO_DT ,REF_SLS_MEMO_NO 
     )CMD ON A.CM_ID =CMD.CM_ID 
     JOIN CUSTDYM CUST (NOLOCK) ON A.CUSTOMER_CODE =CUST.CUSTOMER_CODE
     JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =A.location_Code
     JOIN GST_STATE_MST C (NOLOCK)  ON B.GST_STATE_CODE =C.GST_STATE_CODE
     LEFT JOIN GST_STATE_MST CS (NOLOCK)  ON CS.GST_STATE_CODE =A.PARTY_STATE_CODE 
	 LEFT JOIN #TMP_DO_NOT_CONSIDER_FOR_GSTRREPS U ON A.USER_CODE =U.user_code
     WHERE A.CANCELLED =0 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
     AND A.CM_DT BETWEEN @DFMDATE AND @DTODATE
     AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
     AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
	  AND (ISNULL(A.Party_Gst_No,'')<>'' OR TMP.cm_id IS NOT NULL)
	 AND A.NET_AMOUNT<0
	 AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
	 AND U.user_code IS NULL
	 

	 --DEBIT NOTE

	   --START FOR CDNR---
      
      if object_id ('tempdb..#TMPRMMOH','u') is not null
         drop table #TMPRMMOH
      
        SELECT 
             A.RM_ID,
             SR=CAST(1 AS INT),
            CAST('CDNR' AS VARCHAR(100)) AS RTYPE,
            'OC' AS XN_TYPE ,
            CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  B.LOC_GST_NO END AS GSTIN_UIN_RECIPIENT,
            '' AS INVOICE_NO,
            ''  AS INVOICE_DATE,
            A.RM_NO AS REF_VOUCHER_NO ,
            REPLACE(CONVERT(VARCHAR(9),A.RM_DT ,6),' ','-')  AS REF_VOUCHER_DT,
            'D' AS DOC_TYPE,
            ''   AS REASON,
            CASE WHEN A.MODE=1 THEN LMPS.GST_STATE_CODE+'-'+LMPS.GST_STATE_NAME ELSE  RMLS.GST_STATE_CODE+'-'+RMLS.GST_STATE_NAME END AS PLACE_OF_SUPPLY,
            A.TOTAL_AMOUNT AS REF_VOUCHER_VALUE,
            0 AS RATE  ,
			A.OTHER_CHARGES_TAXABLE_VALUE   AS TAXABLE_VALUE,
            0 AS CESS_AMOUNT,
            'N' AS PRE_GST,
            A.RM_DT ,
            A.OTHER_CHARGES_IGST_AMOUNT AS IGST_AMOUNT ,
            A.OTHER_CHARGES_CGST_AMOUNT AS CGST_AMOUNT ,
            A.OTHER_CHARGES_SGST_AMOUNT AS SGST_AMOUNT,
            B.LOC_GST_NO,
            b.registered_gst ,
            CASE WHEN A.PARTY_STATE_CODE <>ls.GST_STATE_CODE THEN 'Intra State' ELSE 'Inter State' END AS SUPPLY_TYPE
       into #TMPRMMOH     
       FROM RMM01106 A (NOLOCK)
       JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =CASE WHEN ISNULL(A.ACCOUNTS_DEPT_ID,'')<>'' THEN ISNULL(A.ACCOUNTS_DEPT_ID,'') ELSE   A.location_Code END 
	   JOIN GST_STATE_MST LS (NOLOCK)  ON LS.GST_STATE_CODE  =B.GST_STATE_CODE
	   LEFT JOIN LM01106 LM ON LM.AC_CODE =A.AC_CODE 
	   LEFT OUTER JOIN LMP01106 LMP (NOLOCK)  ON LMP.AC_CODE =A.AC_CODE
       LEFT JOIN GST_STATE_MST LMPS (NOLOCK)  ON LMPS.GST_STATE_CODE  =LMP.AC_GST_STATE_CODE
	   LEFT OUTER JOIN LOCATION RML (NOLOCK) ON RML.DEPT_ID =A.PARTY_DEPT_ID 
	   LEFT JOIN GST_STATE_MST RMLS (NOLOCK)  ON RMLS.GST_STATE_CODE  =RML.GST_STATE_CODE
       WHERE A.CANCELLED =0 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
       AND A.RM_DT BETWEEN @DFMDATE AND @DTODATE
	   AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
	   AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
	   --AND  ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'') <>''
    --   AND ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'')<>B.LOC_GST_NO
       AND ISNULL(A.OTHER_CHARGES_GST_PERCENTAGE,0)>0
	   and ISNULL(a.bill_challan_mode,0)=0
       AND (@CDEPT_ID='' OR b.dept_id=@CDEPT_ID)
      UNION ALL
      SELECT 
             A.RM_ID,
             SR=CAST(1 AS INT),
            CAST('CDNR' AS VARCHAR(100)) AS RTYPE,
            'FR' AS XN_TYPE ,
            CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  B.LOC_GST_NO END AS GSTIN_UIN_RECIPIENT,
            '' AS INVOICE_NO,
            ''  AS INVOICE_DATE,
            A.RM_NO AS REF_VOUCHER_NO ,
            REPLACE(CONVERT(VARCHAR(9),A.RM_DT ,6),' ','-')  AS REF_VOUCHER_DT,
            'D' AS DOC_TYPE,
            ''   AS REASON,
            CASE WHEN A.MODE=1 THEN LMPS.GST_STATE_CODE+'-'+LMPS.GST_STATE_NAME ELSE  RMLS.GST_STATE_CODE+'-'+RMLS.GST_STATE_NAME END AS PLACE_OF_SUPPLY,
            A.TOTAL_AMOUNT AS REF_VOUCHER_VALUE,
            0 AS freight_GST_PERCENTAGE  ,
			A.freight_TAXABLE_VALUE   AS TAXABLE_VALUE,
            0 AS CESS_AMOUNT,
            'N' AS PRE_GST,
            A.RM_DT ,
            A.freight_IGST_AMOUNT AS IGST_AMOUNT ,
            A.freight_CGST_AMOUNT AS CGST_AMOUNT ,
            A.freight_SGST_AMOUNT AS SGST_AMOUNT,
            B.LOC_GST_NO,
            b.registered_gst ,
            CASE WHEN A.PARTY_STATE_CODE <>ls.GST_STATE_CODE THEN 'Intra State' ELSE 'Inter State' END AS SUPPLY_TYPE
            
       FROM RMM01106 A (NOLOCK)
       JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =CASE WHEN ISNULL(A.ACCOUNTS_DEPT_ID,'')<>'' THEN ISNULL(A.ACCOUNTS_DEPT_ID,'') ELSE   A.location_Code END 
	   JOIN GST_STATE_MST LS (NOLOCK)  ON LS.GST_STATE_CODE  =B.GST_STATE_CODE
	   LEFT JOIN LM01106 LM ON LM.AC_CODE =A.AC_CODE 
	   LEFT OUTER JOIN LMP01106 LMP (NOLOCK)  ON LMP.AC_CODE =A.AC_CODE
       LEFT JOIN GST_STATE_MST LMPS (NOLOCK)  ON LMPS.GST_STATE_CODE  =LMP.AC_GST_STATE_CODE
	   LEFT OUTER JOIN LOCATION RML (NOLOCK) ON RML.DEPT_ID =A.PARTY_DEPT_ID 
	   LEFT JOIN GST_STATE_MST RMLS (NOLOCK)  ON RMLS.GST_STATE_CODE  =RML.GST_STATE_CODE
       WHERE A.CANCELLED =0 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
       AND A.RM_DT BETWEEN @DFMDATE AND @DTODATE
	   AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
	   AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
	   --AND  ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'') <>''
    --   AND ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'')<>B.LOC_GST_NO
       AND ISNULL(A.freight_GST_PERCENTAGE,0)>0
	   and ISNULL(a.bill_challan_mode,0)=0
       AND (@CDEPT_ID='' OR b.dept_id=@CDEPT_ID)
    
    
      
       DECLARE  @TBLDNR TABLE(MEMO_ID VARCHAR(100),SR INT,RTYPE VARCHAR(10),XN_TYPE VARCHAR(100),GSTIN_UIN_RECIPIENT VARCHAR(100),INVOICE_NO VARCHAR(100),INVOICE_DT VARCHAR(10),
                            REF_VOUCHER_NO VARCHAR(100),REF_VOUCHER_DT VARCHAR(10),DOC_TYPE CHAR(1),REASON VARCHAR(1000),PLACE_OF_SUPPLY VARCHAR(100),
                            REF_VOUCHER_VALUE NUMERIC(12,2),RATE NUMERIC(8,2),TAXABLE_VALUE NUMERIC(12,2),CESS_AMOUNT NUMERIC(8,2),
                            PRE_GST CHAR(1),MEMO_DT DATETIME,IGST_AMOUNT NUMERIC(12,2),CGST_AMOUNT NUMERIC(12,2),SGST_AMOUNT NUMERIC(12,2)
                            ,LOC_GST_NO VARCHAR(100),PARTY_REGISTERED INT,SUPPLY_TYPE VARCHAR(100))
     
 
      INSERT INTO @TBLDNR (MEMO_ID,SR ,RTYPE ,XN_TYPE,GSTIN_UIN_RECIPIENT,INVOICE_NO ,INVOICE_DT ,REF_VOUCHER_NO ,REF_VOUCHER_DT ,
                           DOC_TYPE ,REASON ,PLACE_OF_SUPPLY ,REF_VOUCHER_VALUE ,RATE ,TAXABLE_VALUE ,CESS_AMOUNT ,PRE_GST,MEMO_DT,
                           IGST_AMOUNT ,CGST_AMOUNT ,SGST_AMOUNT ,LOC_GST_NO,PARTY_REGISTERED,SUPPLY_TYPE )                                              
     
      SELECT 
       A.rm_id ,
             SR=CAST(1 AS INT),
             CAST('CDNR' AS VARCHAR(100)) AS RTYPE,
            'DN' AS XN_TYPE ,
            CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  RML.LOC_GST_NO END AS GSTIN_UIN_RECIPIENT,
            '' AS INVOICE_NO,
            ''  AS INVOICE_DATE,
            A.rm_NO AS REF_VOUCHER_NO ,
            REPLACE(CONVERT(VARCHAR(9),A.RM_DT ,6),' ','-')  AS REF_VOUCHER_DT,
            'D' AS DOC_TYPE,
            ''   AS REASON,
            CASE WHEN A.MODE=1 THEN LMPS.GST_STATE_CODE+'-'+LMPS.GST_STATE_NAME ELSE  RMLS.GST_STATE_CODE+'-'+RMLS.GST_STATE_NAME END AS PLACE_OF_SUPPLY,
            A.TOTAL_AMOUNT AS REF_VOUCHER_VALUE,
            0 AS RATE ,
			RMD.XN_VALUE_WITHOUT_GST +ISNULL(OH.TAXABLE_VALUE,0)+ISNULL(OH1.TAXABLE_VALUE,0) AS TAXABLE_VALUE,
          --  CND.XN_VALUE_WITHOUT_GST AS TAXABLE_VALUE,
            rmd.Gst_cess_amount AS CESS_AMOUNT,
            'N' AS PRE_GST,
            A.rm_dt  ,
            RMD.IGST_AMOUNT+ISNULL(OH.IGST_AMOUNT,0)+ISNULL(OH1.IGST_AMOUNT,0) AS IGST_AMOUNT ,
            RMD.CGST_AMOUNT+ISNULL(OH.CGST_AMOUNT,0)+ISNULL(OH1.CGST_AMOUNT,0) AS CGST_AMOUNT ,
            RMD.SGST_AMOUNT+ISNULL(OH.SGST_AMOUNT,0)+ISNULL(OH1.SGST_AMOUNT,0) AS SGST_AMOUNT,
            B.LOC_GST_NO,
            b.registered_gst ,
            CASE WHEN A.PARTY_STATE_CODE <>ls.GST_STATE_CODE THEN 'Intra State' ELSE 'Inter State' END AS SUPPLY_TYPE
            
       FROM rmm01106  A (NOLOCK)
       JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =CASE WHEN ISNULL(A.ACCOUNTS_DEPT_ID,'')<>'' THEN ISNULL(A.ACCOUNTS_DEPT_ID,'') ELSE   A.location_Code END 
	   JOIN GST_STATE_MST LS (NOLOCK)  ON LS.GST_STATE_CODE  =B.GST_STATE_CODE
	   LEFT JOIN LM01106 LM ON LM.AC_CODE =A.AC_CODE 
	   LEFT OUTER JOIN LMP01106 LMP (NOLOCK)  ON LMP.AC_CODE =A.AC_CODE
       LEFT JOIN GST_STATE_MST LMPS (NOLOCK)  ON LMPS.GST_STATE_CODE  =LMP.AC_GST_STATE_CODE
       JOIN 
	   (
	     SELECT rm_id,
				   SUM(XN_VALUE_WITHOUT_GST) AS XN_VALUE_WITHOUT_GST,
				   SUM(igst_amount ) AS igst_amount,
				   SUM(cgst_amount ) AS cgst_amount,
				   SUM(sgst_amount ) AS sgst_amount,
				  SUM(isnull(Gst_cess_amount,0)) as Gst_cess_amount
		 FROM rmd01106    rmd (NOLOCK) 
		 WHERE ISNULL(rmd.GST_PERCENTAGE,0)>0
		 GROUP BY rm_id  
	   )rmd ON A.rm_id =rmd.rm_id 
	   LEFT JOIN #TMPRMMOH OH ON  OH.rm_id =A.rm_id AND OH.XN_TYPE ='OC' 
       LEFT JOIN #TMPRMMOH OH1 ON  OH1.rm_id =A.rm_id AND OH1.XN_TYPE ='FR'  
	   LEFT OUTER JOIN LOCATION RML (NOLOCK) ON RML.DEPT_ID =A.PARTY_DEPT_ID 
	   LEFT JOIN GST_STATE_MST RMLS (NOLOCK)  ON RMLS.GST_STATE_CODE  =RML.GST_STATE_CODE
      WHERE A.CANCELLED =0 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
	  AND A.rm_dt  BETWEEN @DFMDATE AND @DTODATE
	  AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
	  AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
	  AND  ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'') <>''
      AND ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'')<>B.LOC_GST_NO
      AND (@CDEPT_ID='' OR b.dept_id=@CDEPT_ID)
	  and ISNULL(a.bill_challan_mode,0)=0
      
      IF OBJECT_ID ('TEMPDB..#TMPOUTWARD','U') IS NOT NULL
	     DROP TABLE #TMPOUTWARD
      
      SELECT * 
	  INTO #TMPOUTWARD
	  FROM #TMPREPORTS
	  UNION ALL
      SELECT 'H' as [4],
	          'Sub-total (A to G above)' as [Nature of Supplies],
              sum(ISNULL([Taxable Value (?)],0)) AS [Taxable Value (?)] ,
			  sum(ISNULL([Central Tax],0)) as [Central Tax],
			  sum(ISNULL([State Tax / UT Tax],0) ) as [State Tax / UT Tax],
			  sum(ISNULL([Integrated Tax],0)) AS [Integrated Tax],
              SUM(isnull(CESS,0)) AS [Cess],
             '' [Sheet Validation Errors] 
	  FROM #TMPREPORTS
	  UNION ALL
	   SELECT 'I' as [4],
	          'Credit Notes issued in respect of transactions specified in (B) to (E) above (-)' as [Nature of Supplies],
              sum(ISNULL(TAXABLE_VALUE ,0)) AS [Taxable Value (?)] ,
			  sum(ISNULL(CGST_AMOUNT,0)) as [Central Tax],
			  sum(ISNULL(SGST_AMOUNT,0) ) as [State Tax / UT Tax],
			  sum(ISNULL(IGST_AMOUNT,0)) AS [Integrated Tax],
              SUM(isnull(CESS_AMOUNT,0)) AS [Cess],
             '' [Sheet Validation Errors]
      FROM @TBLCDNR 
	  UNION ALL
	   SELECT 'J' as [4],
	          'Debit Notes issued in respect of transactions specified in (B) to (E) above (+)' as [Nature of Supplies],
             SUM(TAXABLE_VALUE) AS [TAXABLE VALUE] ,
             SUM(CGST_AMOUNT) AS [Central Tax Paid],
             SUM(SGST_AMOUNT) AS [State/UT Tax Paid],
			 SUM(IGST_AMOUNT) AS [Integrated Tax Paid],
			  SUM(isnull(CESS_AMOUNT,0)) AS [Cess],
             '' [Sheet Validation Errors]
          --   REASON AS [REASON FOR ISSUING DOCUMENT],
            
          ----   SUM(CESS_AMOUNT) AS [Cess Paid], 
          --   'Inputs' as [Eligibility For ITC],
          --   SUM(IGST_AMOUNT) as [Availed ITC Integrated Tax],
          --   SUM(CGST_AMOUNT)as [Availed ITC Central Tax],
          --   SUM(SGST_AMOUNT) as [Availed ITC State/UT Tax],
          --   0 as [Availed ITC Cess]
      FROM @TBLDNR A
      WHERE ISNULL(GSTIN_UIN_RECIPIENT,'')<>ISNULL(LOC_GST_NO,'') 
	  UNION ALL
	   SELECT 'K' as [4],
	          'Supplies / tax declared through Amendments (+)' as [Nature of Supplies],
             0 AS [TAXABLE VALUE] ,
             0 AS [Central Tax Paid],
             0 AS [State/UT Tax Paid],
			 0 AS [Integrated Tax Paid],
			 0 AS [Cess],
             '' [Sheet Validation Errors]
	  UNION ALL
	  SELECT 'L' as [4],
	          'Supplies / tax reduced through Amendments (-)' as [Nature of Supplies],
             0 AS [TAXABLE VALUE] ,
             0 AS [Central Tax Paid],
             0 AS [State/UT Tax Paid],
			 0 AS [Integrated Tax Paid],
			 0 AS [Cess],
             '' [Sheet Validation Errors]




      SELECT '4 Outward' AS TYP, [4],
	          [Nature of Supplies] AS [Nature_of_Supplies],
			  [Taxable Value (?)] AS [Taxable_ValuE],
			  [Central Tax] AS [Central_Tax],
			  [State Tax / UT Tax] AS [State_Tax],
			  [Integrated Tax] AS [Integrated_Tax],
			  [Cess],
			  [Sheet Validation Errors] AS [Sheet_Validation_Errors]
	  FROM #TMPOUTWARD
	  UNION ALL
	   SELECT '4 Outward' AS TYP,'M' as [4],
	          'Sub-total (I to L above)' as [Nature of Supplies],
              sum(ISNULL([Taxable Value (?)],0)) AS [Taxable Value (?)] ,
			  sum(ISNULL([Central Tax],0)) as [Central Tax],
			  sum(ISNULL([State Tax / UT Tax],0) ) as [State Tax / UT Tax],
			  sum(ISNULL([Integrated Tax],0)) AS [Integrated Tax],
               SUM(isnull(CESS,0)) AS [Cess],
             '' [Sheet Validation Errors] 
	  FROM #TMPOUTWARD
	  WHERE [4] IN('I','J','K','L')
	  UNION ALL
	   SELECT '4 Outward' AS TYP,'N' as [4],
	          'Supplies and advances on which tax is to be paid (H + M) above' as [Nature of Supplies],
              sum(ISNULL([Taxable Value (?)],0)) AS [Taxable Value (?)] ,
			  sum(ISNULL([Central Tax],0)) as [Central Tax],
			  sum(ISNULL([State Tax / UT Tax],0) ) as [State Tax / UT Tax],
			  sum(ISNULL([Integrated Tax],0)) AS [Integrated Tax],
               SUM(isnull(CESS,0)) AS [Cess],
             '' [Sheet Validation Errors] 
	  FROM #TMPOUTWARD
	  WHERE [4] IN('I','J','K','L','H')
      ORDER BY [4]
	 

	--****2ND PAGE****

	
 DECLARE @TBLEXEMP TABLE (MEMO_ID VARCHAR(100),SR INT,RTYPE VARCHAR(10),XN_TYPE VARCHAR(100),
                          CUS_GST_NO VARCHAR(100),ISIGST INT,TAXABLE_VALUE NUMERIC(10,2) ,NET_AMOUNT NUMERIC(10,2),
						  CGST_AMOUNT NUMERIC(12,2),SGST_AMOUNT NUMERIC(12,2),IGST_AMOUNT NUMERIC (12,2),CESS_AMOUNT NUMERIC (12,2))

 INSERT INTO @TBLEXEMP(MEMO_ID,SR ,RTYPE,XN_TYPE ,CUS_GST_NO ,ISIGST ,
 TAXABLE_VALUE ,NET_AMOUNT,CGST_AMOUNT,SGST_AMOUNT,IGST_AMOUNT,CESS_AMOUNT )
        SELECT A.CM_ID,
            SR=CAST(1 AS INT),
            CAST('EXEMP' AS VARCHAR(100)) AS RTYPE,
            'SLS' AS XN_TYPE,
            A.Party_Gst_No AS CUS_GST_NO,
            CASE WHEN A.PARTY_STATE_CODE <>B.GST_STATE_CODE THEN 1 ELSE 0 END AS ISIGST,
            ISNULL(A.OTHER_CHARGES_TAXABLE_VALUE  ,0) AS TAXABLE_VALUE,
            A.NET_AMOUNT
			,OTHER_CHARGES_CGST_AMOUNT,OTHER_CHARGES_SGST_AMOUNT,OTHER_CHARGES_IGST_AMOUNT
			,0 as CESS_AMOUNT
     FROM CMM01106 A (NOLOCK)
     JOIN CUSTDYM CUST (NOLOCK) ON A.CUSTOMER_CODE =CUST.CUSTOMER_CODE
     JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =A.location_Code
     JOIN GST_STATE_MST C (NOLOCK)  ON B.GST_STATE_CODE =C.GST_STATE_CODE
     LEFT JOIN GST_STATE_MST CS (NOLOCK)  ON CS.GST_STATE_CODE =A.PARTY_STATE_CODE 
	 LEFT JOIN #TMP_DO_NOT_CONSIDER_FOR_GSTRREPS U ON A.USER_CODE =U.user_code
     WHERE A.CANCELLED =0 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
     AND A.CM_DT BETWEEN @DFMDATE AND @DTODATE
     AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
     AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
	 AND ISNULL(A.OTHER_CHARGES_GST_PERCENTAGE,0)=0
	 AND ISNULL(A.ATD_CHARGES ,0)>0
	 AND (@CDEPT_ID='' OR location_Code=@CDEPT_ID)
	 AND U.user_code IS NULL
	 UNION ALL
     SELECT A.CM_ID,
            SR=CAST(1 AS INT),
            CAST('EXEMP' AS VARCHAR(100)) AS RTYPE,
            'SLS' AS XN_TYPE,
            A.Party_Gst_No AS CUS_GST_NO,
            CASE WHEN A.PARTY_STATE_CODE <>B.GST_STATE_CODE THEN 1 ELSE 0 END AS ISIGST,
            ISNULL(CMD.XN_VALUE_WITHOUT_GST  ,0) AS TAXABLE_VALUE,
            A.NET_AMOUNT,
			CGST_AMOUNT,SGST_AMOUNT,IGST_AMOUNT,
			CMD.Gst_cess_amount 
     FROM CMM01106 A (NOLOCK)
     JOIN 
      ( SELECT CM_ID ,CMD.GST_PERCENTAGE AS RATE  ,
	           ISNULL(TAXABLE_ITEM,0) AS TAXABLE_ITEM,
               SUM(XN_VALUE_WITHOUT_GST) AS XN_VALUE_WITHOUT_GST,
               SUM(XN_VALUE_WITH_GST) AS XN_VALUE_WITH_GST,
			   SUM(CGST_AMOUNT) AS CGST_AMOUNT,
			   SUM(isnull(Gst_cess_amount,0)) as Gst_cess_amount,
			   SUM(SGST_AMOUNT) AS SGST_AMOUNT,SUM(IGST_AMOUNT) AS IGST_AMOUNT 
        FROM CMD01106  CMD (NOLOCK) 
		JOIN HSN_MST HM ON HM.HSN_CODE =CMD.HSN_CODE 
        WHERE ISNULL(CMD.GST_PERCENTAGE,0)=0  AND 
        (CMD.GST_PERCENTAGE >0 OR  ISNULL(REF_SLS_MEMO_DT,'') >=CASE WHEN CMD.QUANTITY >=0 THEN ISNULL(REF_SLS_MEMO_DT,'') ELSE '2017-07-01' END)
        GROUP BY CM_ID,CMD.GST_PERCENTAGE ,ISNULL(TAXABLE_ITEM,0)
     )CMD ON A.CM_ID =CMD.CM_ID 
     JOIN CUSTDYM CUST (NOLOCK) ON A.CUSTOMER_CODE =CUST.CUSTOMER_CODE
     JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =A.location_Code
     JOIN GST_STATE_MST C (NOLOCK)  ON B.GST_STATE_CODE =C.GST_STATE_CODE
     LEFT JOIN GST_STATE_MST CS (NOLOCK)  ON CS.GST_STATE_CODE =A.PARTY_STATE_CODE 
	 LEFT JOIN #TMP_DO_NOT_CONSIDER_FOR_GSTRREPS U ON A.USER_CODE =U.user_code
     WHERE A.CANCELLED =0 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
     AND A.CM_DT BETWEEN @DFMDATE AND @DTODATE
     AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
     AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
     AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
	 AND U.user_code IS NULL
	
	

	IF OBJECT_ID('TEMPDB..#TMPOUTWARD2','U') IS NOT NULL
	   DROP TABLE #TMPOUTWARD2
	
	 SELECT 'A' as [5],
	          'Zero rated supply (Export) without payment of tax' as [Nature_of_Supplies],
              0 AS [Taxable_Value] ,
			  0 as [Central_Tax],
			  0 as [State_Tax],
			  0 AS [Integrated_Tax],
              0 AS [Cess],
             '' [Sheet_Validation_Errors] 
	 	INTO #TMPOUTWARD2
     union all
	  SELECT 'B' as [5],
	          'Supply to SEZs without payment of tax' as [Nature of Supplies],
              0 AS [Taxable Value (?)] ,
			  0 as [Central Tax],
			  0 as [State Tax / UT Tax],
			  0 AS [Integrated Tax],
              0 AS [Cess],
             '' [Sheet Validation Errors] 

	 UNION ALL
	  SELECT 'C' as [5],
	          'Supplies on which tax is to be paid by recipient on reverse charge basis' as [Nature of Supplies],
             0 AS [TAXABLE VALUE] ,
             0 AS [Central Tax Paid],
             0 AS [State/UT Tax Paid],
			 0 AS [Integrated Tax Paid],
			 0 AS [Cess],
             '' [Sheet Validation Errors]
    UNION ALL
    SELECT 'D' as [5],
	          'Exempted ' as [Nature_of_Supplies],
              SUM(TAXABLE_VALUE) AS [Taxable_Value] ,
			  SUM(CGST_AMOUNT) as [Central_Tax],
			  SUM(SGST_AMOUNT) as [State_Tax],
			  SUM(IGST_AMOUNT) AS [Integrated_Tax],
              sum(ISNULL(CESS_AMOUNT ,0)) AS [Cess],
             '' [Sheet_Validation_Errors]  
	FROM @TBLEXEMP
	 UNION ALL
    SELECT 'E' as [5],
	          'Nil Rated ' as [Nature_of_Supplies],
              0 AS [Taxable_Value] ,
			  0 as [Central_Tax],
			  0 as [State_Tax],
			  0 AS [Integrated_Tax],
              0 AS [Cess],
             '' [Sheet_Validation_Errors]  
       UNION ALL
	    SELECT 'F' as [5],
	          'Non-GST supply (includes no supply )' as [Nature_of_Supplies],
              0 AS [Taxable_Value] ,
			  0 as [Central_Tax],
			  0 as [State_Tax],
			  0 AS [Integrated_Tax],
              0 AS [Cess],
             '' [Sheet_Validation_Errors]  
    

--Sub-total (A to F above)
          
		  SELECT * 
		  FROM #TMPOUTWARD2
		 UNION ALL
		SELECT  'G' as [5],
	          'Sub-total (A to F above)' as [Nature_of_Supplies],
              SUM(Taxable_Value) AS [Taxable_Value] ,
			  SUM(Central_Tax) as [Central_Tax],
			  SUM(State_Tax) as [State_Tax],
			  SUM(Integrated_Tax) AS [Integrated_Tax],
              sum(ISNULL(cess ,0)) AS [Cess],
             '' [Sheet_Validation_Errors] 
        FROM #TMPOUTWARD2
		UNION ALL
     SELECT 'H' as [5],
	          'Credit Notes issued in respect of transactions specified in A to F above (-)' as [Nature_of_Supplies],
              0 AS [Taxable_Value] ,
			  0 as [Central_Tax],
			  0 as [State_Tax],
			  0 AS [Integrated_Tax],
              0 AS [Cess],
             '' [Sheet_Validation_Errors] 
	   UNION ALL
        SELECT 'I' as [5],
	          'Debit Notes issued in respect of transactions specified in A to F above (+)' as [Nature_of_Supplies],
              0 AS [Taxable_Value] ,
			  0 as [Central_Tax],
			  0 as [State_Tax],
			  0 AS [Integrated_Tax],
              0 AS [Cess],
             '' [Sheet_Validation_Errors] 
           UNION ALL
		   SELECT 'J' as [5],
	          'Supplies declared through Amendments (+)' as [Nature_of_Supplies],
              0 AS [Taxable_Value] ,
			  0 as [Central_Tax],
			  0 as [State_Tax],
			  0 AS [Integrated_Tax],
              0 AS [Cess],
             '' [Sheet_Validation_Errors] 
			 UNION ALL
			 SELECT 'K' as [5],
	          'Supplies reduced through Amendments (-)' as [Nature_of_Supplies],
             0 AS [Taxable_Value] ,
			  0 as [Central_Tax],
			  0 as [State_Tax],
			  0 AS [Integrated_Tax],
              0 AS [Cess],
             '' [Sheet_Validation_Errors] 

			  UNION ALL
			 SELECT 'L' as [5],
	          'Sub-Total (H to K above)' as [Nature_of_Supplies],
              0 AS [Taxable_Value] ,
			  0 as [Central_Tax],
			  0 as [State_Tax],
			  0 AS [Integrated_Tax],
              0 AS [Cess],
             '' [Sheet_Validation_Errors]
			  UNION ALL
			 SELECT  'M' as [5],
	          'Turnover on which tax is not to be paid  (G + L) above' as [Nature_of_Supplies],
              SUM(Taxable_Value) AS [Taxable_Value] ,
			  SUM(Central_Tax) as [Central_Tax],
			  SUM(State_Tax) as [State_Tax],
			  SUM(Integrated_Tax) AS [Integrated_Tax],
              sum(ISNULL(cess ,0)) AS [Cess],
             '' [Sheet_Validation_Errors] 
        FROM #TMPOUTWARD2
		UNION
		SELECT  'N' as [5],
	          'Total Turnover (including advances) (4N + 5M - 4G) above' as [Nature_of_Supplies],
              SUM(Taxable_Value) AS [Taxable_Value] ,
			  SUM(Central_Tax) as [Central_Tax],
			  SUM(State_Tax) as [State_Tax],
			  SUM(Integrated_Tax) AS [Integrated_Tax],
              sum(ISNULL(cess ,0)) AS [Cess],
             '' [Sheet_Validation_Errors] 
			 FROM
		(
		SELECT SUM(Taxable_Value) AS [Taxable_Value] ,
			  SUM(Central_Tax) as [Central_Tax],
			  SUM(State_Tax) as [State_Tax],
			  SUM(Integrated_Tax) AS [Integrated_Tax],
              sum(ISNULL(cess ,0)) AS [Cess],
             '' [Sheet_Validation_Errors] 
        FROM #TMPOUTWARD2
		UNION ALL
		SELECT  sum(ISNULL([Taxable Value (?)],0)) AS [Taxable Value (?)] ,
			  sum(ISNULL([Central Tax],0)) as [Central Tax],
			  sum(ISNULL([State Tax / UT Tax],0) ) as [State Tax / UT Tax],
			  sum(ISNULL([Integrated Tax],0)) AS [Integrated Tax],
              sum(ISNULL(cess ,0)) AS [Cess],
             '' [Sheet Validation Errors] 
	  FROM #TMPOUTWARD
	  WHERE [4] IN('I','J','K','L','H')
	  UNION ALL
	 SELECT  sum(ISNULL(GROSS_ADVANCE_ADJ,0)) AS [Taxable Value (?)] ,
			  sum(ISNULL(CGST_AMOUNT,0)) as [Central Tax],
			  sum(ISNULL(SGST_AMOUNT,0) ) as [State Tax / UT Tax],
			  sum(ISNULL(IGST_AMOUNT,0)) AS [Integrated Tax],
			  0 AS [Cess],
             '' [Sheet Validation Errors] 
            
      FROM @TBLADVANCEADJ
		) A
        ORDER BY [5]

--3RD PAGE---

--15
    
	--16 GOODS SEND FOR APPROVAL
	IF OBJECT_ID ('TEMPDB..#TMPJWI','U') IS NOT NULL
	   DROP TABLE #TMPJWI

	 
	  SELECT ISNULL(LMP.AC_GST_NO,'')  AS AC_GST_NO,
	         LMP.REGISTERED_GST_DEALER,
             'NON SEZ' AS [JOB WORKER'S TYPE],
             BM.issue_no  AS [CHALLAN NUMBER],
             CONVERT(VARCHAR(10),BM.ISSUE_DT,105) AS [CHALLAN DATE (DD-MM-YYYY)],
             'INPUTS' AS [TYPES OF GOODS],
             BD.XN_VALUE_WITH_GST,BD.CGST_AMOUNT ,BD.SGST_AMOUNT,BD.IGST_AMOUNT
      INTO #TMPJWI
      FROM  JOBWORK_ISSUE_MST   BM (NOLOCK)
      JOIN  JOBWORK_ISSUE_DET  BD (NOLOCK) ON BM.ISSUE_ID =BD.issue_id 
	  LEFT JOIN JOBWORK_RECEIPT_DET DET ON DET.ref_row_id =BD.row_id
	  LEFT JOIN JOBWORK_RECEIPT_MST MST ON MST.RECEIPT_ID =DET.RECEIPT_ID
      JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =BD.PRODUCT_CODE
      JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =SKU.ARTICLE_CODE
      JOIN UOM (NOLOCK) ON UOM.UOM_CODE =ART.UOM_CODE 
      JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =BM.location_Code
      JOIN prd_agency_mst AM ON AM.AGENCY_CODE=BM.AGENCY_CODE
      LEFT OUTER JOIN LMP01106 LMP (NOLOCK) ON LMP.AC_CODE =AM.AC_CODE 
      LEFT JOIN GST_STATE_MST C (NOLOCK)  ON LMP.ac_gst_state_code  =C.GST_STATE_CODE
      WHERE BM.CANCELLED =0 
      AND BM.ISSUE_DT BETWEEN @DFMDATE AND @DTODATE
      AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
      AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
	  AND ISNULL(MST.CANCELLED,0)=0
	  AND MST.receipt_id IS NULL
	  AND LMP.REGISTERED_GST_DEALER=2
	 
	 IF OBJECT_ID ('TEMPDB..#TMPJWR','U') IS NOT NULL
	   DROP TABLE #TMPJWR


       SELECT ISNULL(LMP.AC_GST_NO,'')  AS AC_GST_NO,
	         LMP.REGISTERED_GST_DEALER,
             'NON SEZ' AS [JOB WORKER'S TYPE],
             a.receipt_no,
             a.receipt_dt,
             'INPUTS' AS [TYPES OF GOODS],
             XN_VALUE_WITH_GST,CGST_AMOUNT ,SGST_AMOUNT,IGST_AMOUNT,CESS_AMOUNT 
      INTO #TMPJWR
      FROM JOBWORK_RECEIPT_MST  A (NOLOCK)
      JOIN JOBWORK_RECEIPT_DET DET (NOLOCK)  ON A.RECEIPT_ID=DET.RECEIPT_ID
      JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =A.location_Code
      JOIN prd_agency_mst AM ON AM.AGENCY_CODE=A.AGENCY_CODE
      LEFT OUTER JOIN LMP01106 LMP (NOLOCK) ON LMP.AC_CODE =AM.AC_CODE 
      LEFT JOIN GST_STATE_MST C (NOLOCK)  ON A.PARTY_STATE_CODE  =C.GST_STATE_CODE
      WHERE A.CANCELLED =0
	  AND ISNULL(A.BILL_CHALLAN_MODE,0)=0
      AND A.RECEIPT_DT BETWEEN @DFMDATE AND @DTODATE
      AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
      AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
	  AND LMP.REGISTERED_GST_DEALER=2
	  --AND ISNULL(DET.GST_PERCENTAGE,0)>0
    
	EXEC  SP3S_HSN_GSTR @DFMDATE,@DTODATE,@CGSTN_NO,@CLOC_TYPE,@CDEPT_ID,1--@@HSNSUMMARY

	
--Central Tax
--State/UT Tax

SELECT  SR=6,[alpha] as [6], '' AS Description	,
'' AS TYPE,
	        0 AS [Central_Tax],
			0 AS [State_Tax],
			0 AS [Integrated_Tax],
			0 AS Cess,
			'' AS Sheet_Validation_Errors
from #TMPALPHA	
where number  between 0 and 14
order by [alpha]

SELECT SR=7,[alpha] as [7], '' AS DETAILS,
	        0 AS [Central_Tax],
			0 AS [State_Tax],
			0 AS [Integrated_Tax],
			0 AS Cess,
			'' AS Sheet_Validation_Errors
from #TMPALPHA	
where number  between 0 and 9
order by [alpha]			


SELECT SR=8,[alpha] as [8], '' AS DETAILS,
	        0 AS [Central_Tax],
			0 AS [State_Tax],
			0 AS [Integrated_Tax],
			0 AS Cess,
			'' AS Sheet_Validation_Errors
from #TMPALPHA	
where number  between 0 and 10
order by [alpha]		


	SELECT SR=9,'A' as [9], 'Integrated_Tax' as Description,SUM(IGST_AMOUNT) As tax_paid,
	        0 as  [Paid_through_cash],
			0 AS [Central_Tax],
			0 AS [State_Tax],
			0 AS [Integrated_Tax],
			sum(ISNULL(cess ,0)) AS Cess,
			'' AS Sheet_Validation_Errors
	FROM ##HSNSUMMARY 
	union all
	SELECT SR=9,'B' as [9],'Central Tax',SUM(cGST_AMOUNT) As tax_paid,
	        0 as  [Paid_through_cash],
			0 AS [Central_Tax],
			0 AS [State_Tax],
			0 AS [Integrated_Tax],
			sum(ISNULL(cess ,0)) AS Cess,
			'' AS Sheet_Validation_Errors
	FROM ##HSNSUMMARY
	union all
	SELECT SR=9,'C' as [9],'State/UT Tax',SUM(sGST_AMOUNT) As tax_paid,
	        0 as  [Paid_through_cash],
			0 AS [Central_Tax],
			0 AS [State_Tax],
			0 AS [Integrated_Tax],
			sum(ISNULL(cess ,0)) AS Cess,
			'' AS Sheet_Validation_Errors
	FROM ##HSNSUMMARY
	UNION ALL
	SELECT SR=9,[ALPHA] as [9],'',0 As tax_paid,
	        0 as  [Paid_through_cash],
			0 AS [Central_Tax],
			0 AS [State_Tax],
			0 AS [Integrated_Tax],
			0 AS Cess,
			'' AS Sheet_Validation_Errors
from #TMPALPHA	
where number  between 2 and 7
order by [9]				

--	Description	Tax Payable (₹)	Paid through cash (₹)	Paid through ITC (₹)				Sheet Validation Errors
--			Central Tax	State Tax / UT Tax	Integrated Tax	Cess	



	SELECT SR=10,number AS [10], '' AS Description,
	        0 AS [Taxable_Value],
	        0 AS [Central_Tax],
			0 AS [State_Tax],
			0 AS [Integrated_Tax],
			0 AS Cess,
			'' AS Sheet_Validation_Errors
		from #TMPALPHA	
      where number  between 10 and 13
     order by number	
	

	SELECT SR=14,ALPHA AS [14], '' AS Description,
	        0 AS [Payable],
			0 AS [Paid],
			'' AS [Sheet_Validation_Errors]
	FROM  #TMPALPHA	
	where number  between 0 and 4
    order by [alpha]

	SELECT SR=15,ALPHA AS [15], '' AS DETAILS,
	        0 AS [Central_Tax],
			0 AS [State_Tax],
			0 AS [Integrated_Tax],
			0 AS Cess,
			0 AS Interest,
			0 AS Penalty
	FROM  #TMPALPHA	
	where number  between 0 and 6
    order by [alpha]




	SELECT sr=16, 'A' [16],Description='Supplies received from Composition taxpayers',
	SUM(XN_VALUE_WITH_GST) AS TAXABLE_VALUE,
	SUM(cgst_amount) AS cgst_amount,
	SUM(sgst_amount) AS sgst_amount,
	SUM(igst_amount) AS igst_amount,
	0 AS Cess	,
	'' AS [Sheet_Validation_Errors]
	FROM #TMPJWR
	UNION ALL
	SELECT sr=16, 'B' [16],'Deemed supply under section 143',
	0 AS TAXABLE_VALUE,
	0 AS cgst_amount,
	0 AS sgst_amount,
	0 AS igst_amount,
	0 AS Cess	,
	'' AS [Sheet Validation Errors]
	UNION ALL
	SELECT sr=16, 'C' [16],'Goods sent on approval basis but not returned',
	SUM(XN_VALUE_WITH_GST) AS TAXABLE_VALUE,
	SUM(cgst_amount) AS cgst_amount,
	SUM(sgst_amount) AS sgst_amount,
	SUM(igst_amount) AS igst_amount,
	0 AS Cess	,
	'' AS [Sheet_Validation_Errors]
	FROM #TMPJWI



	--18-HSN INWARD********************
	SELECT * FROM ##HSNSUMMARY
	
	
	--18-HSN INWARD
	  IF OBJECT_ID ('TEMPDB..#TMPGSTR3B1','U') IS NOT NULL
        DROP TABLE #TMPGSTR3B1
     
     SELECT CAST('' AS  VARCHAR(50)) AS XN_TYPE,
            CAST('' AS  VARCHAR(50)) AS MEMO_ID,
            CAST('' AS  VARCHAR(50)) AS UOM_NAME,
            CAST('' AS  VARCHAR(50)) AS HSN_CODE,
            CAST('' AS  VARCHAR(500)) AS DESCR,
            CAST(0 AS NUMERIC(10,2)) AS QTY,
             CAST(0 AS NUMERIC(14,2)) AS NET_AMOUNT,
            CAST(0 AS NUMERIC(14,2)) AS TAXABLE_VALUE,
            CAST(0 AS NUMERIC(14,2)) AS IGST_AMOUNT,
            CAST(0 AS NUMERIC(14,2)) AS CGST_AMOUNT,
            CAST(0 AS NUMERIC(14,2)) AS SGST_AMOUNT,
            CAST(0 AS NUMERIC(14,2)) AS CESS_AMOUNT,
            CAST('' AS  VARCHAR(50)) AS PRODUCT_CODE,
             CAST(0 AS INT) AS SR,
             CAST(0 AS INT) AS rcm_applicable,
			 CAST(0 AS NUMERIC(10,2)) AS RATE
            INTO #TMPGSTR3B1
            WHERE 1=2
      INSERT INTO #TMPGSTR3B1
      EXEC  SP3S_hsn_GSTR2 @DFMDATE,@DTODATE,@CGSTN_NO,@CLOC_TYPE,@CDEPT_ID,1
      

	  SELECT SR=18, HSN_CODE ,DESCR AS DESCRIPTION,
			   UOM_NAME AS UOQ,
			   SUM(QTY) AS [TOTAL_QUANTITY],
			   SUM(TAXABLE_VALUE) AS TAXABLE_VALUE,
			   '' AS IS_SUPPLY_APPLICABLE,
			   RATE ,
			   SUM(IGST_AMOUNT) AS IGST_AMOUNT,
			   SUM(CGST_AMOUNT) AS CGST_AMOUNT,
			   SUM(SGST_AMOUNT) AS SGST_AMOUNT,
			   0 AS CESS	,
			   '' AS [ACTION],
			   '' AS SHEET_VALIDATION_ERRORS,	
			   '' AS GST_PORTAL_VALIDATION_ERRORS
			    
	  FROM #TMPGSTR3B1
	  GROUP BY HSN_CODE,UOM_NAME,DESCR,RATE


END

