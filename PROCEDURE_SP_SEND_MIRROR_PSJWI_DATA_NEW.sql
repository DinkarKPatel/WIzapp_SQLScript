CREATE PROCEDURE SP_SEND_MIRROR_PSJWI_DATA_NEW
(	
	 @CUPLOADEDXNID VARCHAR(50)
	,@CCURLOCID VARCHAR(5)
	,@BACKNOWLEDGE BIT=0
	,@CERRMSG VARCHAR(1000) OUTPUT
)
--WITH ENCRYPTION
AS
BEGIN
     DECLARE @DTSQL NVARCHAR(MAX),@CSTEP VARCHAR(10),@CFILTERCONDITION VARCHAR(MAX),
             @CMEMOID VARCHAR(50),@DMEMOLASTUPDATE DATETIME,
             @CTABLENAME VARCHAR(100),@CTEMPTABLE VARCHAR(100),@CTEMPMASTERTABLE VARCHAR(100),
             @CTEMPDETAILTABLE VARCHAR(100),@BRECFOUND BIT
     
BEGIN TRY
     DECLARE @CTEMPDBNAME VARCHAR(100)
	
	 SET @CSTEP=20
	 --CHNAGE BY BAIJNATH
	 SET @CMEMOID=@CUPLOADEDXNID
		
    SET @CSTEP=40
	---- IF NO MEMO FOUND , JUST END THE PROCESS
	IF ISNULL(@CMEMOID,'')=''
		GOTO END_PROC

	
	SET @CSTEP=220
	---- SEND THE PSJWI MEMO MASTER TABLE
	SELECT DISTINCT A.* ,'PSJWI_POST_SALES_JOBWORK_ISSUE_MST_UPLOAD' AS TARGET_TABLENAME FROM POST_SALES_JOBWORK_ISSUE_MST A (NOLOCK) WHERE ISSUE_ID=@CMEMOID 
	
	SET @CSTEP=250
	---- SEND THE PSJWI MEMO DETAIL TABLE
	 SELECT DISTINCT A.* ,'PSJWI_POST_SALES_JOBWORK_ISSUE_DET_UPLOAD' AS TARGET_TABLENAME FROM POST_SALES_JOBWORK_ISSUE_DET A (NOLOCK) WHERE ISSUE_ID=@CMEMOID 
	
	
	GOTO END_PROC
	
	END TRY
BEGIN CATCH
	SET @CERRMSG='P: SP_SEND_MIRROR_PSJWI_DATA_NEW, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO END_PROC
END CATCH 	
	
END_PROC:
		
	
END
