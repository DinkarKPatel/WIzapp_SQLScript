CREATE PROCEDURE SP_MERGELOCSKUSP
@CDEPTID VARCHAR(5)
--WITH ENCRYPTION
AS
BEGIN
	DECLARE  @CTEMPDBNAME VARCHAR(100)
			,@CTEMPTABLENAME VARCHAR(100) 
			,@NSQLQUERY NVARCHAR(4000)
			,@CERRORMSG VARCHAR(500)
			,@CPRODUCT_CODE VARCHAR(50)
			,@CDEPT_ID CHAR(2),@NSTEP INT
			,@CTEMPTABLENAME_CURRENT VARCHAR(50)
	SELECT @CTEMPDBNAME='',@CTEMPTABLENAME = 'TMP_DOCMRP_LOCSKUSP_' + LTRIM(RTRIM(@CDEPTID)),
	@CTEMPTABLENAME_CURRENT = 'TMP_DOCMRP_LOCSKUSP_CURRENT_' + LTRIM(RTRIM(@CDEPTID))			
	DECLARE @TOUTPUT TABLE(ERRMSG VARCHAR(2000),MEMO_ID VARCHAR(10))
	
	BEGIN TRY
		
		SET @NSTEP=10
		IF NOT EXISTS (SELECT NAME FROM SYSOBJECTS (NOLOCK) WHERE NAME=@CTEMPTABLENAME)
		BEGIN
			SET @CERRORMSG='NO DOCMRP DATA FOUND FOR MERGING.....'
			GOTO END_PROC
		END	
		IF NOT EXISTS (SELECT NAME FROM SYSOBJECTS (NOLOCK) WHERE NAME=@CTEMPTABLENAME_CURRENT)
		BEGIN
			SET @CERRORMSG='NO DOCMRP DATA FOUND FOR MERGING.....'
			GOTO END_PROC
		END	
		BEGIN TRANSACTION
		
		SET @NSTEP=20
				
		--INSERT INTO SKU, THE PRODUCT_CODES THAT DONOT EXISTS IN THE SKU
		SET @NSQLQUERY=N'INSERT SKU( PRODUCT_CODE, ARTICLE_CODE, PARA1_CODE, PARA2_CODE,  PARA3_CODE,
						PARA4_CODE, PARA5_CODE, PARA6_CODE, FORM_ID,AC_CODE,PURCHASE_PRICE,MRP,INV_NO,
						WS_PRICE, IMAGE_NAME,TAX_AMOUNT, CHALLAN_NO,LAST_UPDATE ) 
						SELECT 
						DISTINCT TMP.PRODUCT_CODE 
							   ,''00000000'' AS ARTICLE_CODE
							   ,''0000000'' AS PARA1_CODE
							   ,''0000000'' AS PARA2_CODE
							   ,''0000000'' AS PARA3_CODE
							   ,''0000000'' AS PARA4_CODE
							   ,''0000000'' AS PARA5_CODE
							   ,''0000000'' AS PARA6_CODE
							   ,''0000000'' AS FORM_ID
							   ,''0000000000'' AS AC_CODE 
							   ,0 AS PURCHASE_PRICE
							   ,0 AS MRP
							   ,'''' AS INV_NO
							   ,0 AS WS_PRICE
							   ,'''' AS IMAGE_NAME
							   ,0 AS TAX_AMOUNT
							   ,'''' AS CHALLAN_NO
							   ,GETDATE() AS LAST_UPDATE
						FROM '+@CTEMPTABLENAME+' TMP LEFT OUTER JOIN SKU ON TMP.PRODUCT_CODE=SKU.PRODUCT_CODE 
						WHERE SKU.PRODUCT_CODE IS NULL' 
		--PRINT @NSQLQUERY
		EXEC SP_EXECUTESQL @NSQLQUERY
		
		SET @NSTEP=30
	    --GET THE DEPT_ID FOR THE LOCATION
	    SELECT @CDEPT_ID=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='LOCATION_ID'
	    IF ISNULL(@CDEPT_ID,'')=''
	    --ERROR
	    BEGIN
			SET @CERRORMSG='NO DEPARTMENT IS DEFINED FOR THE LOCATION'
			GOTO END_PROC
		END 
		
		SET @NSTEP=40
		SET @NSQLQUERY=N'DELETE FROM LOCSKUSP'
		EXEC SP_EXECUTESQL @NSQLQUERY
		
	    --INSERT LOCSKUSP, THE NEW PRODUCT_CODES
		SET @NSQLQUERY=N'INSERT LOCSKUSP( PRODUCT_CODE, DEPT_ID, MRP, WS_PRICE, SENT_TO_LOCATION ,FROM_DT,LAST_UPDATE)
						 SELECT DISTINCT     TMP.PRODUCT_CODE
											,TMP.DEPT_ID
											,TMP.MRP
											,TMP.WS_PRICE
											,TMP.SENT_TO_LOCATION ,ISNULL(TMP.FROM_DT,'''') AS FROM_DT,LAST_UPDATE 
						 FROM '+@CTEMPTABLENAME +' TMP  WHERE  TMP.DEPT_ID='''+@CDEPT_ID+''''						
		--PRINT @NSQLQUERY
		EXEC SP_EXECUTESQL @NSQLQUERY	
		
		
		SET @NSQLQUERY=N'DELETE FROM LOCSKUSP_CURRENT WHERE DEPT_ID='''+@CDEPT_ID+''''
		EXEC SP_EXECUTESQL @NSQLQUERY
		
		SET @NSQLQUERY=N'INSERT LOCSKUSP_CURRENT( PRODUCT_CODE, DEPT_ID, LOC_MRP)
						 SELECT DISTINCT     TMP.PRODUCT_CODE,TMP.DEPT_ID,TMP.LOC_MRP
											FROM '+@CTEMPTABLENAME_CURRENT +' TMP  WHERE  TMP.DEPT_ID='''+@CDEPT_ID+''''						
		--PRINT @NSQLQUERY
		
		EXEC SP_EXECUTESQL @NSQLQUERY	
	END TRY
	BEGIN CATCH
		SET @CERRORMSG = 'STEP '+STR(@NSTEP)+' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		GOTO END_PROC
	END CATCH

END_PROC:
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')='' 
			COMMIT TRANSACTION
		ELSE
			ROLLBACK
	END
	INSERT @TOUTPUT(ERRMSG,MEMO_ID)
	SELECT ISNULL(@CERRORMSG,''),'DOCMRP' 

	SELECT * FROM @TOUTPUT	
	
	--DROP THE TEMP TABLE
	EXEC SP_DROPTEMPTABLES_XNS 'DOCMRP',0,@CDEPTID,'TMP_DOCMRP'
END
--********************************************** END OF PROCEDURE SP_MERGELOCSKUSP
