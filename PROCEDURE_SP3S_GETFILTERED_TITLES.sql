CREATE PROCEDURE SP3S_GETFILTERED_TITLES
@NMODE INT, --1.GIT RECEIVE 2.FULL EOSS MERGING 3.INCREMENTAL EOSS MERGING  
@CLOCATIONID VARCHAR(5)='',  
@CXNTYPE VARCHAR(10)='',  
@CMEMOID VARCHAR(50)='',  
@cBatchId VARCHAR(20)='',
@dProcessDate DATETIME='',
@CERRORMSG VARCHAR(MAX) OUTPUT  
AS  
BEGIN  
   
	declare @NSTEP VARCHAR(10)  ,@nLogSpid varchar(50),@cSchemeId VARCHAR(10),@cJoinStr VARCHAR(MAX)

	set @nLogSpid=(CASE WHEN @cMemoId='' THEN convert(varchar(40),newid()) ELSE @cMemoid END)

    PRINT 'ENTER SP3S_GETFILTERED_TITLES-1 :'+convert(varchar,getdate(),113)      
    DECLARE @CENABLEOPTIMIZEDSCHEMES VARCHAR(2)
	
	IF @dProcessDate=''
		SET @dProcessDate=CONVERT(DATE,GETDATE())

	set @nStep=2.2
	EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@cMemoId,0  
	SELECT TOP 1 @CENABLEOPTIMIZEDSCHEMES=VALUE FROM CONFIG WHERE CONFIG_OPTION='ENABLE_OPTIMIZED_EOSS_SCHEMES'		
	
	IF @cBatchId='batch'
		SET @CENABLEOPTIMIZEDSCHEMES='1'

	IF ISNULL(@CENABLEOPTIMIZEDSCHEMES,'')<>'1'  ---Not required this Step as We are handling this at the time of making challan for Target Location
		GOTO EXIT_PROC

	set @nStep=2.4
	EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@cMemoId,0  

    IF @nMode=1 
    BEGIN
		set @nStep=2.6
		EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@cMemoId,0  

		IF @cMemoId=''
			GOTO EXIT_PROC

		set @nStep=2.8
		EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@cMemoId,0  
		
		DELETE a FROM #tmpcmd a  
		LEFT JOIN sku_active_titles b (NOLOCK) ON a.product_code=b.product_code
		LEFT JOIN sku_active_titles_get c (NOLOCK) ON a.product_code=c.product_code
		WHERE b.product_Code IS NOT NULL OR c.product_code IS NOT NULL

		set @nStep=2.10
		EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@cMemoId,0  

		IF NOT EXISTS (SELECT TOP 1 product_code FROM #tmpcmd)
			GOTO EXIT_PROC 
	END
  	
	IF @nMode=4
		SET @nMode=1
	
	set @nStep=4.2
	EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@cMemoId,0  

	PRINT 'ENTER SP3S_GETFILTERED_TITLES-2 :'+convert(varchar,getdate(),113)      
    DECLARE @COUTPUTVAR VARCHAR(100),@CPICKSLRDISCMODE VARCHAR(5),@CPRODUCTCODE VARCHAR(100),  
    @CSUBSECTIONCODE VARCHAR(10),@CCMDROWID VARCHAR(100),@NXNQTY NUMERIC(10,2),@NMRP NUMERIC(10,2),  
    @NDISCPCT NUMERIC(7,3),@CROUNDITEMLEVEL VARCHAR(5),@CCURDEPTID VARCHAR(5),@CHODEPTID VARCHAR(5),  
    @NORDER INT,@NFILTERMODE INT,@NGETFILTERMODE INT,@CJOINSTRBUY VARCHAR(MAX),@CJOINSTRGET VARCHAR(MAX),  
    @CADDFILTER VARCHAR(MAX),@BAPPLYEXCLTAXONDISCITEMS BIT,@CTOPVARIABLE VARCHAR(100),@NSCHEMEMODE INT,  
    @CCMDPRODUCTCODE VARCHAR(50),@DISC_METHOD INT,@NNET NUMERIC(14,2),@DISC_FIGURE NUMERIC(10,2),@NDISC NUMERIC(10,2),  
    @NSCHEMEQTY NUMERIC(10,3),@CSCHEMEDETROWID VARCHAR(100),@CBUNDLEID CHAR(7),@CSCHEMENAME VARCHAR(500),  
    @CCMD NVARCHAR(MAX),@CPROCNAME VARCHAR(200),@BRETVAL BIT,@CFILTERJOINSTR VARCHAR(MAX),@CFILTER VARCHAR(MAX),  
    @DISCOUNT_PERCENTAGE1 NUMERIC(7,3),@DISCOUNT_PERCENTAGE2 NUMERIC(7,3),@DISCOUNT_PERCENTAGE3 NUMERIC(7,3),  
	@NNETPRICE NUMERIC(10,2),@NDISCAMT NUMERIC(10,2),@D_FILTER VARCHAR(MAX),@NEFFECTIVEDISCPCT NUMERIC(7,3),  
	@CSCHEMEMEMONO VARCHAR(100),@BCHECKONLYVALUEBASEDSCHEME BIT,@BVALUEBASEDSCHEME BIT,@CPCFOUND VARCHAR(100),  
	@BBILLLEVELSCHEME BIT,@BDEBUGMODE BIT,@CSTR VARCHAR(200),@NBASEVALUE NUMERIC(10,2),  
	@BFOUND BIT,@NCURRENTDISCAMT NUMERIC(10,2),@NLASTSLRDISCPCT NUMERIC(6,2),@NLASTSLRDISCAMT NUMERIC(10,2),  
	@NADDNLDISCPCT NUMERIC(6,2),@NSUBTOTAL NUMERIC(10,2),@CPROMOTIONALSCHEMEID VARCHAR(10),@CGROUPCODE VARCHAR(20),  
	@CPARASEARCH VARCHAR(100),@COPTSEARCHPARANAME VARCHAR(100),@NMEMOORDER NUMERIC(4,0),@bServerloc BIT,  
	@BLOOP BIT,@CBUYFILTER VARCHAR(MAX),@CGETFILTER VARCHAR(MAX),@CSCHEMEROWID VARCHAR(50),@dStartTime datetime  
   
    set @BDEBUGMODE=1
    set @dStartTime=getdate() 

BEGIN TRY  
    
	set @nStep=4.6
	EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@cMemoId,0  

    SELECT TOP 1 @CCURDEPTID=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='LOCATION_ID'  
    SELECT TOP 1 @CHODEPTID=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='HO_LOCATION_ID'  
    
 IF @CLOCATIONID<>''  
  SET @CCURDEPTID=@CLOCATIONID  
    
     SET @NSTEP = 10  
     EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@cMemoId,@BDEBUGMODE  
  
    
   PRINT 'ENTER SP3S_GETFILTERED_TITLES-3 :'+convert(varchar,getdate(),113)       
  IF @NMODE=1  
  BEGIN  
	  IF OBJECT_ID('TEMPDB..#TMPFILTERCHANGE','U') IS NULL  
	   SELECT ROW_ID INTO #TMPFILTERCHANGE FROM SCHEME_SETUP_DET  (NOLOCK) WHERE 1=2  
  END  
  
  
    
  SELECT A.ROW_ID AS SCHEME_SETUP_DET_ROW_ID INTO #TMPSCHEMES FROM MSTEOSS_SCHEME_SETUP_DET_MIRROR A (NOLOCK)  
  WHERE 1=2  
 
  SELECT A.ROW_ID AS SCHEME_SETUP_DET_ROW_ID,promotional_scheme_id,scheme_name INTO #TMPParaSCHEMES FROM MSTEOSS_SCHEME_SETUP_DET_MIRROR A (NOLOCK)  
  WHERE 1=2  
  
  IF @NMODE=3  
  BEGIN  
	  INSERT #TMPSCHEMES  
	  SELECT ROW_ID FROM #TMPFILTERCHANGE   
  END  
  ELSE  
  IF @NMODE=2  
  BEGIN  
	  INSERT #TMPSCHEMES  
	  SELECT ROW_ID FROM MSTEOSS_SCHEME_SETUP_DET_MIRROR  
  END  
    
  PRINT 'ENTER SP3S_GETFILTERED_TITLES-4 :'+convert(varchar,getdate(),113)      
    
     SET @NSTEP = 35  
     EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@cMemoId,@BDEBUGMODE  
   
  IF @NMODE=1        
	   INSERT SKU_ACTIVE_TITLES    
	   SELECT DISTINCT A.PRODUCT_CODE,A.SCHEME_SETUP_DET_ROW_ID FROM SCHEME_SETUP_SLSBC A (NOLOCK)  
	   JOIN SCHEME_SETUP_DET B (NOLOCK) ON B.ROW_ID=A.SCHEME_SETUP_DET_ROW_ID  
	   JOIN SCHEME_SETUP_MST C (NOLOCK) ON  C.MEMO_NO= B.MEMO_NO  
	   LEFT OUTER JOIN SCHEME_SETUP_LOC G (NOLOCK) ON G.MEMO_NO=C.MEMO_NO  
	   JOIN #TMPCMD I ON I.PRODUCT_CODE=A.PRODUCT_CODE  
	   LEFT OUTER JOIN SKU_ACTIVE_TITLES SAT (NOLOCK) ON SAT.PRODUCT_CODE=A.PRODUCT_CODE AND SAT.SCHEME_SETUP_DET_ROW_ID=A.SCHEME_SETUP_DET_ROW_ID  
	   WHERE B.FILTER_MODE=2 AND C.INACTIVE=0   
	   AND SAT.PRODUCT_CODE IS NULL  
  ELSE  
	   INSERT SKU_ACTIVE_TITLES    
	   SELECT DISTINCT A.PRODUCT_CODE,A.SCHEME_SETUP_DET_ROW_ID FROM SCHEME_SETUP_SLSBC A (NOLOCK)  
	   JOIN SCHEME_SETUP_DET B (NOLOCK) ON B.ROW_ID=A.SCHEME_SETUP_DET_ROW_ID  
	   JOIN SCHEME_SETUP_MST C (NOLOCK) ON  C.MEMO_NO= B.MEMO_NO  
	   LEFT OUTER JOIN SCHEME_SETUP_LOC G (NOLOCK) ON G.MEMO_NO=C.MEMO_NO  
	   JOIN #TMPSCHEMES H ON H.SCHEME_SETUP_DET_ROW_ID=B.ROW_ID  
	   LEFT OUTER JOIN SKU_ACTIVE_TITLES SAT (NOLOCK) ON SAT.PRODUCT_CODE=A.PRODUCT_CODE AND SAT.SCHEME_SETUP_DET_ROW_ID=A.SCHEME_SETUP_DET_ROW_ID  
	   WHERE B.FILTER_MODE=2 AND C.INACTIVE=0 AND SAT.PRODUCT_CODE IS NULL  
     
   
     
     SET @NSTEP = 40  
     EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@cMemoId,@BDEBUGMODE  
  
   PRINT 'ENTER SP3S_GETFILTERED_TITLES-5 :'+convert(varchar,getdate(),113)       
  IF @NMODE=1        
	   INSERT SKU_ACTIVE_TITLES_GET    
	   SELECT DISTINCT A.PRODUCT_CODE,A.SCHEME_SETUP_DET_ROW_ID FROM SCHEME_SETUP_SLSBC_GET A (NOLOCK)  
	   JOIN SCHEME_SETUP_DET B (NOLOCK) ON B.ROW_ID=A.SCHEME_SETUP_DET_ROW_ID  
	   JOIN SCHEME_SETUP_MST C (NOLOCK) ON  C.MEMO_NO= B.MEMO_NO  
	   LEFT OUTER JOIN SCHEME_SETUP_LOC G (NOLOCK) ON G.MEMO_NO=C.MEMO_NO  
	   JOIN #TMPCMD I ON I.PRODUCT_CODE=A.PRODUCT_CODE  
	   LEFT OUTER JOIN SKU_ACTIVE_TITLES_get SAT (NOLOCK) ON SAT.PRODUCT_CODE=A.PRODUCT_CODE AND SAT.SCHEME_SETUP_DET_ROW_ID=A.SCHEME_SETUP_DET_ROW_ID  
	   WHERE B.GET_FILTER_MODE=2 AND C.INACTIVE=0 AND B.SCHEME_MODE=2   
	   AND SAT.PRODUCT_CODE IS NULL  
  ELSE  
	   INSERT SKU_ACTIVE_TITLES_get    
	   SELECT DISTINCT A.PRODUCT_CODE,A.SCHEME_SETUP_DET_ROW_ID FROM SCHEME_SETUP_SLSBC_GET A (NOLOCK)  
	   JOIN SCHEME_SETUP_DET B (NOLOCK) ON B.ROW_ID=A.SCHEME_SETUP_DET_ROW_ID  
	   JOIN SCHEME_SETUP_MST C (NOLOCK) ON  C.MEMO_NO= B.MEMO_NO  
	   LEFT OUTER JOIN SCHEME_SETUP_LOC G (NOLOCK) ON G.MEMO_NO=C.MEMO_NO  
	   JOIN #TMPSCHEMES H ON H.SCHEME_SETUP_DET_ROW_ID=B.ROW_ID  
	   LEFT OUTER JOIN SKU_ACTIVE_TITLES_get SAT (NOLOCK) ON SAT.PRODUCT_CODE=A.PRODUCT_CODE AND SAT.SCHEME_SETUP_DET_ROW_ID=A.SCHEME_SETUP_DET_ROW_ID  
	   WHERE  B.GET_FILTER_MODE=2 AND C.INACTIVE=0  AND B.SCHEME_MODE=2 AND SAT.PRODUCT_CODE IS NULL  
    
     SET @NSTEP = 50  
     EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@cMemoId,@BDEBUGMODE  
   
     SET @NSTEP = 60  
     EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@cMemoId,@BDEBUGMODE  
   
    
  SELECT DISTINCT A.ROW_ID,A.BUY_FILTER_CRITERIA,(CASE WHEN SCHEME_MODE=2 AND ISNULL(A.GET_FILTER_CRITERIA,'')<>''   
  THEN A.GET_FILTER_CRITERIA ELSE '' END) AS GET_FILTER_CRITERIA,SCHEME_NAME   
  INTO #TMPFILTERTITLES FROM SCHEME_SETUP_DET A (NOLOCK)  
  JOIN SCHEME_SETUP_MST D (NOLOCK) ON D.MEMO_NO=A.MEMO_NO  
  LEFT OUTER JOIN SCHEME_SETUP_LOC G (NOLOCK) ON G.MEMO_NO=D.MEMO_NO  
  LEFT OUTER JOIN  #TMPFILTERCHANGE TFC ON TFC.ROW_ID=A.ROW_ID  
  WHERE (A.FILTER_MODE=1 OR A.GET_FILTER_MODE=1)  
  AND 1=1  AND @dProcessDate BETWEEN applicable_from_dt AND applicable_to_dt
  AND ((@NMODE IN (2,3) AND TFC.ROW_ID IS NOT NULL) OR @NMODE=1)  
  AND D.INACTIVE=0  
  
   
   SELECT product_code,quantity_in_stock as qty_stk INTO #tmpPmtstk   
   FROM pmt01106 (NOLOCK) where 1=2 
    
  IF @NMODE=1  
  BEGIN  

     SET @NSTEP = 92  
     EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@cMemoId,@BDEBUGMODE  
	  
	  INSERT #tmpPmtstk
	  SELECT product_code,1 as qty from #TMPCMD
	 
   END  
   
   ELSE
   BEGIN	   
	   
        SET @NSTEP = 95  
        EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@cMemoId,@BDEBUGMODE  

	   INSERT #tmpPmtstk 
	   SELECT product_code,SUM(quantity_in_stock) as qty_stk  
	   FROM pmt01106 (NOLOCK) GROUP BY product_code  
	   HAVING SUM(quantity_in_stock)>0  



        SET @NSTEP = 97
        EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@cMemoId,@BDEBUGMODE  

		  INSERT #tmpPmtstk (product_code,qty_stk)  
		  SELECT DISTINCT a.product_code,0  
		  FROM rps_det A (NOLOCK)  
		  JOIN rps_mst b (NOLOCK) ON a.cm_id=b.cm_id  
		  LEFT OUTER JOIN #tmpPmtstk c (NOLOCK) ON a.PRODUCT_CODE=c.product_code  
		  WHERE CM_DT>=DATEADD(DD,-6,GETDATE())   AND c.product_code IS NULL
		
		  INSERT #tmpPmtstk (product_code,qty_stk)  
		  SELECT DISTINCT a.product_code,0  
		  FROM cmd01106 A (NOLOCK)  
		  JOIN cmm01106 b (NOLOCK) ON a.cm_id=b.cm_id  
		  LEFT OUTER JOIN #tmpPmtstk c (NOLOCK) ON a.PRODUCT_CODE=c.product_code  
		  WHERE CM_DT>=DATEADD(DD,-60,GETDATE())   AND c.product_code IS NULL

		  print 'Check baro codes on APproval not in stock'
		  INSERT #tmpPmtstk (product_code,qty_stk)  
		  SELECT DISTINCT a.product_code,0  
		  FROM apd01106 A (NOLOCK)  
		  JOIN apm01106 b (NOLOCK) ON a.memo_id=b.memo_id  
		  LEFT OUTER JOIN #tmpPmtstk c (NOLOCK) ON a.PRODUCT_CODE=c.product_code  
		  WHERE isnull(B.ref_cm_id,'')='' AND c.product_code IS NULL
	  

	  print 'Check baro codes in Git and not in stock'

	    INSERT #tmpPmtstk (product_code,qty_stk)  
			SELECT DISTINCT a.product_code,0  
			FROM docwsl_ind01106_mirror A (NOLOCK)  
			LEFT OUTER JOIN #tmpPmtstk c (NOLOCK) ON a.PRODUCT_CODE=c.product_code  
			WHERE  c.product_code IS NULL 	

			UNION
			SELECT DISTINCT a.product_code,0  
			FROM docprt_rmd01106_mirror A (NOLOCK)  
			LEFT OUTER JOIN #tmpPmtstk c (NOLOCK) ON a.PRODUCT_CODE=c.product_code  
			WHERE  c.product_code IS NULL 	

   END	      

	INSERT #tmpPmtstk (product_code,qty_stk)  
	SELECT DISTINCT LEFT(t.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',t.PRODUCT_CODE)-1,-1),LEN(t.PRODUCT_CODE ))) as product_code,
	0 qty_stk
	FROM #tmpPmtstk t 
	LEFT JOIN  #tmpPmtstk b ON LEFT(t.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',t.PRODUCT_CODE)-1,-1),LEN(t.PRODUCT_CODE )))=b.product_code
	WHERE b.product_code IS NULL

   SELECT distinct  A.PRODUCT_CODE,sku.mrp  INTO #tmpSkuFilter FROM #tmpPmtStk a 
   JOIN sku (NOLOCK) ON sku.product_code=a.product_code

   SET @NSTEP = '99.2'
   EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@cMemoId,@BDEBUGMODE  
	 


  PRINT 'ENTER SP3S_GETFILTERED_TITLES-6 :'+convert(varchar,getdate(),113)           

	INSERT #TMPParaSCHEMES (SCHEME_SETUP_DET_ROW_ID,promotional_scheme_id,scheme_name)    
	SELECT b.row_id,b.promotional_scheme_id as SCHEME_SETUP_DET_ROW_ID ,b.scheme_name
	FROM SCHEME_SETUP_DET B (NOLOCK)
	JOIN SCHEME_SETUP_MST C (NOLOCK) ON  C.MEMO_NO= B.MEMO_NO  
	WHERE (B.FILTER_MODE=6 OR (b.get_filter_mode=6 AND b.scheme_mode=2)) AND C.INACTIVE=0 
	AND @dProcessDate BETWEEN applicable_from_dt AND applicable_to_dt


	
	  DECLARE @nLoop INT

--	  select 'before processing paras', b.para3_code, a.* from sku_active_titles a join sku b on a.product_Code=b.product_code
--where scheme_setup_det_row_id in ('A3CEA472-A69D-46A0-8FB1-789F1366C51D',
--'E5C3A258-2C56-40F2-8BDB-D1A5094A5A58')

  WHILE EXISTS (SELECT TOP 1 SCHEME_SETUP_DET_ROW_ID FROM #TMPParaSCHEMES)
  BEGIN
	SET @NSTEP = '99.5'
	   EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@cMemoId,@BDEBUGMODE  

	   SELECT TOP 1 @CSCHEMEDETROWID=SCHEME_SETUP_DET_ROW_ID,@cSchemeId=promotional_scheme_id,@cSchemeName=scheme_name
	   FROM #TMPParaSCHEMES

	   
	   EXEC SP3S_EOSS_GETSCHEMES_PARA_COMBINATION
			@SCHEME_SETUP_DET_ROW_ID=@CSCHEMEDETROWID,
			@CJOINSTRBUY=@CJOINSTRBUY OUTPUT,
			@CJOINSTRGET=@CJOINSTRGET OUTPUT,
			@CERRORMSG=@CERRORMSG OUTPUT

	  IF ISNULL(@CERRORMSG,'')<>''
			GOTO END_PROC
	  

	  SET @nLoop=1
	  WHILE @nLoop<=2
	  BEGIN
	  SET @NSTEP = '99.7'
		  SET @cJoinStr = (CASE WHEN @nloop=1 THEN @cJOinstrBuy ELSE @cJOinstrGet END)
		  
		  SET @cStr='Insert para combination scheme bar codes for SCheme:'+@cSchemeName
		  print @cStr

		  IF @NMODE=1     
			   SET @cCmd=N'SELECT DISTINCT itv.PRODUCT_CODE,'''+@CSCHEMEDETROWID+''' SCHEME_SETUP_DET_ROW_ID FROM sku_names itv (NOLOCK) '+
			   ' JOIN #tmpcmd b ON b.product_code=itv.product_code '+ @cJoinStr+
			   ' LEFT OUTER JOIN SKU_ACTIVE_TITLES SAT (NOLOCK) ON SAT.PRODUCT_CODE=itv.PRODUCT_CODE '+
			   ' AND SAT.SCHEME_SETUP_DET_ROW_ID=sc. SCHEME_SETUP_DET_ROW_ID WHERE sc.scheme_Setup_det_row_id='''+@CSCHEMEDETROWID+'''
			     AND SAT.PRODUCT_CODE IS NULL '     
		  ELSE  
			   SET @cCmd=N'SELECT DISTINCT itv.PRODUCT_CODE,'''+@CSCHEMEDETROWID+''' SCHEME_SETUP_DET_ROW_ID FROM sku_names itv (NOLOCK) '+
			   ' JOIN sku b (NOLOCK) ON b.product_code=itv.product_code '+ @cJoinStr+
			   ' JOIN #tmpPmtstk pmt ON pmt.product_code=b.product_code'+
			   ' LEFT OUTER JOIN SKU_ACTIVE_TITLES SAT (NOLOCK) ON SAT.PRODUCT_CODE=itv.PRODUCT_CODE AND SAT.SCHEME_SETUP_DET_ROW_ID=sc.SCHEME_SETUP_DET_ROW_ID'+
			   ' WHERE sc.SCHEME_SETUP_DET_ROW_ID='''+@CSCHEMEDETROWID+''' AND SAT.PRODUCT_CODE IS NULL '     
	      
		  print @cCmd

		  INSERT SKU_ACTIVE_TITLES (PRODUCT_CODE,SCHEME_SETUP_DET_ROW_ID)  
		  EXEC SP_EXECUTESQL @cCmd

		  IF @cSchemeId<>'SCH0015'
			 BREAK

		  SET @nLoop=@nLoop+1	
	  END

	  
--	  select 'after processing paras', b.para3_code, a.* from sku_active_titles a join sku b on a.product_Code=b.product_code
--where scheme_setup_det_row_id in ('A3CEA472-A69D-46A0-8FB1-789F1366C51D',
--'E5C3A258-2C56-40F2-8BDB-D1A5094A5A58')
	  DELETE  FROM #TMPParaSCHEMES WHERE SCHEME_SETUP_DET_ROW_ID=@CSCHEMEDETROWID
  END
  	 
  SET @NSTEP = '100.2'
  CREATE TABLE #tmpCmdFiltered (product_code VARCHAR(50),mrp NUMERIC(10,2))

  SET @BLOOP=0  
  --SELECT 'FILTER TITLES', * FROM #TMPFILTERTITLES     
  WHILE @BLOOP=0  
  BEGIN  
	  
	  print 'ENTER SP3S_GETFILTERED_TITLES-7'
	  SET @NSTEP = 102  
	  EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@cMemoId,@BDEBUGMODE  
	    
	  SELECT TOP 1 @CSCHEMEROWID=ROW_ID,@CBUYFILTER=BUY_FILTER_CRITERIA,@CGETFILTER=GET_FILTER_CRITERIA,  
	  @CSCHEMENAME=SCHEME_NAME FROM #TMPFILTERTITLES  
	    
	  PRINT 'PROCESSING TITLE ID :'+@CSCHEMEROWID  

	  SET @NSTEP = 103.2  
	  EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@cMemoId,@BDEBUGMODE  
	  
	 IF @NMODE=1
		INSERT #tmpCmdFiltered (PRODUCT_CODE,mrp)
		SELECT a.product_code,sku.mrp from #TMPCMD a
		LEFT JOIN sku_active_titles b (NOLOCK) ON a.PRODUCT_CODE=b.PRODUCT_CODE   
		AND b.SCHEME_SETUP_DET_ROW_ID=@CSCHEMEROWID
		LEFT JOIN sku_active_titles_get c (NOLOCK) ON a.PRODUCT_CODE=c.PRODUCT_CODE   
		AND c.SCHEME_SETUP_DET_ROW_ID=@CSCHEMEROWID
		JOIN #tmpSkuFilter skuF (NOLOCK) ON skuF.product_code=a.product_code  
		JOIN sku (NOLOCK) ON sku.product_code=a.product_code
		WHERE b.product_Code IS NULL and  c.product_Code IS NULL

	  IF ISNULL(@CBUYFILTER,'')<>''  
	  BEGIN  
		  SET @NSTEP = 105  
		  EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@CSCHEMEROWID,@BDEBUGMODE  
		    
		   			  
		   PRINT 'iNSERT bUY FILTER PC :'+@CSCHEMENAME   
		   --SELECT @CSCHEMEROWID,@CBUYFILTER,@CGETFILTER    
		   SET @CCMD=N'INSERT SKU_ACTIVE_TITLES (PRODUCT_CODE,SCHEME_SETUP_DET_ROW_ID)    
			  SELECT ITV.PRODUCT_CODE,'''+@CSCHEMEROWID+''' FROM '+  
			  (CASE WHEN @NMODE<>1 THEN ' #tmpSkuFilter '  ELSE ' #tmpCmdFiltered ' END)+
			  ' ITV JOIN sku_names b (NOLOCK) ON itv.product_code=b.product_code '+
			  ' LEFT JOIN sku_active_titles sat (NOLOCK) ON b.PRODUCT_CODE=sat.PRODUCT_CODE   
				AND sat.SCHEME_SETUP_DET_ROW_ID='''+@CSCHEMEROWID+''''+
			  ' WHERE ' +replace(@CBUYFILTER,'a.product_code','itv.product_code') +
			  ' AND sat.product_code IS NULL GROUP BY ITV.PRODUCT_CODE '   
		        
		   PRINT @CCMD  
		   SET @NSTEP = 105.2 
		   EXEC SP_EXECUTESQL @CCMD  
	  END  
	      
	  IF @CGETFILTER<>''  
	  BEGIN  
		   IF @nMode=1
		   BEGIN
			    SET @NSTEP = 106.2 
				DELETE FROM #tmpCmdFiltered

				INSERT #tmpCmdFiltered (PRODUCT_CODE,mrp)
				SELECT a.product_code,sku.mrp from #TMPCMD a
				LEFT JOIN sku_active_titles_get b (NOLOCK) ON a.PRODUCT_CODE=b.PRODUCT_CODE   
				AND b.SCHEME_SETUP_DET_ROW_ID=@CSCHEMEROWID
				JOIN #tmpSkuFilter skuF (NOLOCK) ON skuF.product_code=a.product_code  
				JOIN sku (NOLOCK) ON sku.product_code=a.product_code
				WHERE b.product_Code IS NULL

				SET @NSTEP = 107.2 
				IF NOT EXISTS (SELECT TOP 1 product_code FROM #tmpCmdFiltered)
					GOTO lblNext
		   END
		   

		   SET @NSTEP = 110  
		   EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@cMemoId,@BDEBUGMODE  
		   
		   PRINT 'iNSERT GET FILTER PC :'+@CSCHEMENAME
		   SET @CCMD=N'INSERT SKU_ACTIVE_TITLES_GET (PRODUCT_CODE,SCHEME_SETUP_DET_ROW_ID)  
			  SELECT ITV.PRODUCT_CODE,'''+@CSCHEMEROWID+''' FROM '+  
			  (CASE WHEN @NMODE<>1 THEN ' #tmpSkuFilter '  ELSE ' #tmpCmdFiltered ' END)+
			  ' ITV JOIN sku_names b (NOLOCK) ON itv.product_code=b.product_code ' +
			  ' LEFT JOIN sku_active_titles_get sat (NOLOCK) ON b.PRODUCT_CODE=sat.PRODUCT_CODE   
				AND sat.SCHEME_SETUP_DET_ROW_ID='''+@CSCHEMEROWID+''''+
			 ' WHERE ' +replace(@CGETFILTER ,'a.product_code','itv.product_code') +
			 ' AND sat.product_code IS NULL GROUP BY ITV.PRODUCT_CODE '   
		   PRINT @cCmd
		   EXEC SP_EXECUTESQL @CCMD  
	  END     
	  
	  SET @NSTEP = 112  
	  EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@cMemoId,@BDEBUGMODE  

lblNext:
	  IF @nMode=1
		 DELETE FROM #tmpCmdFiltered

	    	        
	  DELETE FROM #TMPFILTERTITLES WHERE ROW_ID=@CSCHEMEROWID           


	  IF NOT EXISTS (SELECT TOP 1 ROW_ID FROM #TMPFILTERTITLES)  
		   BREAK  
 END   
          
END_PROC:  
   
 GOTO EXIT_PROC  
   
END TRY  
  
BEGIN CATCH  
 SET @CERRORMSG='ERROR IN PROC SP3S_GETFILTERED_TITLES AT STEP#'+LTRIM(RTRIM(STR(@NSTEP)))+' '+ERROR_MESSAGE()  
   
 PRINT 'ENTER CATCH BLOCK OF SP3S_GETFILTERED_TITLES '+@CERRORMSG  
  
 GOTO EXIT_PROC  
  
END CATCH  
  
  
EXIT_PROC:  
 
 if @nMode=3
	select top 1 @cMemoId=row_id from #TMPFILTERCHANGE
 
 
 --INSERT sat_log	(xn_type, end_time, memo_id, mode, start_time,errmsg ) 
 --SELECT 	@cXntype xn_type,getdate() as  end_time,@cMemoId as memo_id,@nMode as mode,@dStartTime as start_time ,@CERRORMSG as errmsg
  
 PRINT 'LAST STEP OF SP3S_GETFILTERED_TITLES :'+STR(@NSTEP)   
 EXEC SP_CHKXNSAVELOG 'SCH_GETFILTER',@NSTEP,0,@NlogSPID,@cMemoId,@BDEBUGMODE  
   
END  
---- 'END OF CREATING PROCEDURE SP3S_GETFILTERED_TITLES'  