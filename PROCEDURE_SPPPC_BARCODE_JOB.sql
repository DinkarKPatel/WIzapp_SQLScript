CREATE PROCEDURE SPPPC_BARCODE_JOB
(
 @CPRODUCT_CODE VARCHAR(100)='',
 @CJOB_ORDER INT=0,
 @NRETURN INT=0
)
AS
BEGIN

     DECLARE @CJOB_CODE VARCHAR(100),@CJOB_NAME VARCHAR(100),@CERRMSG VARCHAR(1000),
             @NCURJOB INT,@NPREVJOB INT
     		   
		SET @CERRMSG=''
	
	
	--1	PREV JOB CHECK
	IF ISNULL(@CJOB_ORDER,0)<>1
	BEGIN
	SELECT @CJOB_CODE=JOB_CODE,@CJOB_NAME=JOB_NAME FROM FN_JOBNAME(@CPRODUCT_CODE,@CJOB_ORDER-1)
	
	IF OBJECT_ID ('TEMPDB..#TMPCURBARCODE','U') IS NOT NULL
	   DROP TABLE #TMPBARCODE
	
	SELECT A.JOB_CODE, B.PRODUCT_CODE ,SUM(B.QUANTITY ) AS CNT 
	INTO #TMPCURBARCODE
	FROM PPC_AGENCY_REC_FG_MST A
	JOIN PPC_AGENCY_REC_FG_DET B ON A.MEMO_ID =B.MEMO_ID 
	WHERE A.CANCELLED=0 AND PRODUCT_CODE=@CPRODUCT_CODE AND A.JOB_CODE=@CJOB_CODE
	GROUP BY A.JOB_CODE,B.PRODUCT_CODE
	
	IF NOT EXISTS(SELECT TOP 1 'U' FROM #TMPCURBARCODE)
	BEGIN
	     SET @CERRMSG='1.BARCODE NOT AVAILABLE FOR THIS JOB WORK'
	     GOTO END_PROC
	END
	END
	--2.JOB NOT AVAILABLE	
	SELECT @CJOB_CODE=JOB_CODE,@CJOB_NAME=JOB_NAME FROM FN_JOBNAME(@CPRODUCT_CODE,@CJOB_ORDER)
	IF ISNULL(@CJOB_CODE,'')=''
	BEGIN
	   SET @CERRMSG='JOB NOT AVAILABLE  '
	   GOTO END_PROC	
	END
	
	--
	--FIN MAX JOB WORK REC
	DECLARE @LASTESTJOBORDER INT
	SET @LASTESTJOBORDER=0
	IF OBJECT_ID('TEMPDB..#TMPMAXREC','U') IS NOT NULL
	   DROP TABLE #TMPMAXREC
	   
	SELECT TOP 1 A.MEMO_ID ,A.JOB_CODE 
	INTO #TMPMAXREC   
	FROM PPC_AGENCY_REC_FG_MST A
	JOIN PPC_AGENCY_REC_FG_DET B ON A.MEMO_ID =B.MEMO_ID 
	WHERE A.CANCELLED=0 AND PRODUCT_CODE=@CPRODUCT_CODE
	ORDER BY MEMO_ID DESC
	
	SELECT TOP 1 @LASTESTJOBORDER=DET.JOB_ORDER,@CJOB_CODE =DET.JOB_CODE 
	FROM PPC_FGBCG_MST A
	JOIN PPC_FGBCG_DET B ON A.MEMO_ID =B.MEMO_ID 
	JOIN PPC_FG_SKU SKU ON SKU.PPC_FGBCG_DET_ROW_ID=B.ROW_ID 
	JOIN
	(
	 SELECT  JOBS.JOB_NAME,C.JOB_CODE,C.JOB_ORDER,
	 A.ROW_ID FROM PPC_BUYER_ORDER_DET A
	 JOIN PPC_BUYER_ORDER_MST B ON A.ORDER_ID=B.ORDER_ID
	 JOIN PPC_BO_ART_JOBS C ON A.ROW_ID=C.REF_ROW_ID
	 JOIN JOBS ON JOBS.JOB_CODE=C.JOB_CODE
	 WHERE B.CANCELLED=0
	 GROUP BY JOBS.JOB_NAME,C.JOB_CODE,C.JOB_ORDER,A.ROW_ID 
	 ) DET ON DET.ROW_ID=B.BO_DET_ROW_ID 
	 JOIN #TMPMAXREC REC ON REC.JOB_CODE =DET.JOB_CODE 
	  WHERE SKU.PRODUCT_CODE=@CPRODUCT_CODE 
	 ORDER BY JOB_ORDER
     
      -- IF REC AVAILABLE CHECK ONLY PREVIOUS ,CURRENT & NEXT JOB WORK 
     
     IF ISNULL(@LASTESTJOBORDER,0)<>0
     BEGIN
   --     IF @CJOB_ORDER NOT IN(@LASTESTJOBORDER ,@LASTESTJOBORDER-1,@LASTESTJOBORDER+1)
		 --BEGIN
			--  SET @CERRMSG='2.BARCODE NOT AVAILABLE FOR THIS JOB WORK'
			--  GOTO END_PROC
		 --END
		 
		 IF ISNULL(@NRETURN,0)=2
		 BEGIN
		      IF @CJOB_ORDER <>(@LASTESTJOBORDER+1)
		      BEGIN
		          SET @CERRMSG='2.BARCODE NOT AVAILABLE FOR THIS JOB WORK'
			      GOTO END_PROC
		      END
		 END
		 ELSE
		 BEGIN
		 
		      IF @CJOB_ORDER NOT IN (@LASTESTJOBORDER-1,@LASTESTJOBORDER)
		      BEGIN
		          SET @CERRMSG='2.BARCODE NOT AVAILABLE FOR THIS JOB WORK'
			      GOTO END_PROC
		      END
		 END 
		
     END

  --IF REC NOT AVAILABLE CHECK JOB ORDER ONLY ONE
	 IF ISNULL(@LASTESTJOBORDER,0)=0 AND  @CJOB_ORDER<>1
	 BEGIN
          SET @CERRMSG='3.BARCODE NOT AVAILABLE FOR THIS JOB WORK'
	      GOTO END_PROC
     END
	
	
	
	END_PROC:	    
	SELECT @CERRMSG AS ERRMSG	    
		    

END
