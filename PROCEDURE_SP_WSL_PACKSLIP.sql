CREATE PROCEDURE SP_WSL_PACKSLIP  --(LocId 3 digit change by Sanjay:04-11-2024)
(  
 @NQUERYID INT,  
 @CMEMOID VARCHAR(22)='',  
 @CWHERE1 VARCHAR(100)='',  
 @NNAVMODE INT,  
 @CWHERE2 VARCHAR(100)='',  
 @CLOCID varchar(4)=''  
)  
AS  
BEGIN  
  

  DECLARE @cStep VARCHAR(10),@nSpId VARCHAR(40)
  SET @nSpid=convert(varchar(40),newid())

	SET @CSTEP='4'
	EXEC SP_CHKXNSAVELOG 'WSLpackslip_module',@CSTEP,0,@nSpId,'',1  
     DECLARE @LEVEL_NO INT
	 SELECT TOP 1 @LEVEL_NO=LEVEL_NO  FROM XN_APPROVAL_CHECKLIST_LEVEL_USERS A  
		WHERE A.XN_TYPE ='WSLORD'	AND DEPT_ID =@CLOCID

	SET @CSTEP='7'
	EXEC SP_CHKXNSAVELOG 'WSLpackslip_module',@CSTEP,0,@nSpId,'',1  
  
IF @NQUERYID=1  
   GOTO LBLPENDING_BUYER_ORDERS_MST  
ELSE  
IF @NQUERYID=2  
   GOTO LBLPENDINGDET_BUYER_ORDERS_DET     
IF @NQUERYID=3  
   GOTO LBLPENDING_PICKLIST_MST  
ELSE  
IF @NQUERYID=4  
   GOTO LBLPENDINGDET_PICKLIST_DET    
ELSE  
IF @NQUERYID=5  
   GOTO SAVED_PACKSLIP_BOXENTRY   

 /*  
    @NNAVMODE : 1 IS FOR ADD MODE, RETURN ALL PENDING WSL ORDERS WHOSE PACK SLIP HAS NOT BEEN RAISED.  
       2 IS FOR EDIT MODE, RETURN ALL PENDING WSL ORDERS AND CURRENT PACK SLIP WSL ORDER DETAILS     
    @CMEMOID  : REQUIRED IF CALLED FOR EDIT MODE.  
 */  
LBLPENDING_BUYER_ORDERS_MST:  
  
 IF @NNAVMODE=1  
 BEGIN  
   SELECT DISTINCT CAST(0 AS BIT) AS CHK,A.ORDER_ID,A.ORDER_NO,A.ORDER_DT,A.ORDER_TIME,A.REF_NO,  
      B1.TOTAL_QUANTITY, CAST(0 AS NUMERIC(18,2)) AS RECEIVED_QTY,CAST(0 AS NUMERIC(18,2)) AS PENDING_QTY,  
      CASE WHEN A.MEMO_TYPE=1 THEN 'Direct' WHEN memo_type=2 THEN 'PickList' ELSE 'CUSTOMIZE' END AS TYPE  
   FROM BUYER_ORDER_MST A (NOLOCK)  
   JOIN   
   (  
    SELECT B.ORDER_ID,  
    SUM(CASE WHEN  memo_type<>2 THEN   B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END )-SUM(ISNULL(B.ADJ_QTY,0)) AS TOTAL_QUANTITY ,
	SUM(ISNULL(B.INV_QTY,0)) AS INVOICE_QTY
	FROM  
    BUYER_ORDER_DET B (NOLOCK) 
	JOIN  buyer_order_mst c (NOLOCK) ON b.order_id=c.order_id
	WHERE c.AC_CODE = @CWHERE1  
	GROUP BY B.ORDER_ID  
   )B1 ON B1.ORDER_ID =A.ORDER_ID   
 
   WHERE (A.MEMO_TYPE IN (1,2,3) AND A.CANCELLED = 0   
   AND A.AC_CODE = @CWHERE1  
   AND ( A.ApprovedLevelNo =99)
   AND B1.TOTAL_QUANTITY > ISNULL(B1.INVOICE_QTY,0) ) and (ISNULL(A.Short_close,0)  <> 1  OR a.memo_type<>1)
   AND (@CLOCID='' OR ISNULL(WBO_FOR_DEPT_ID,a.location_Code)=@CLOCID)  
   ORDER BY A.ORDER_DT,A.ORDER_ID  
     
 END  
 ELSE   
 BEGIN  
   SELECT DISTINCT (CASE WHEN C1.ORDER_ID IS NULL THEN 0 ELSE 1 END)  AS CHK,A.ORDER_ID,A.ORDER_NO,A.ORDER_DT,A.ORDER_TIME,A.REF_NO,  
    B1.TOTAL_QUANTITY,CAST(0 AS NUMERIC(18,2)) AS RECEIVED_QTY,CAST(0 AS NUMERIC(18,2)) AS PENDING_QTY,  
   CASE WHEN A.MEMO_TYPE=1 THEN 'Direct' WHEN memo_type=2 THEN 'PickList' ELSE 'CUSTOMIZE' END AS TYPE  
   FROM BUYER_ORDER_MST A  
   JOIN   
   (  
    SELECT B.ORDER_ID,  
    SUM(CASE WHEN  memo_type<>2 THEN   B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END)-SUM(ISNULL(B.ADJ_QTY,0)) AS TOTAL_QUANTITY ,
	SUM(ISNULL(B.INV_QTY,0)) AS INVOICE_QTY
	FROM  
    BUYER_ORDER_DET B
	JOIN  buyer_order_mst c (NOLOCK) ON b.order_id=c.order_id
	WHERE c.AC_CODE =@CWHERE1   
	GROUP BY B.ORDER_ID  
   )B1 ON B1.ORDER_ID =A.ORDER_ID   
   --LEFT OUTER JOIN  
   --(  
   -- SELECT B.ORDER_ID AS ORDER_ID,SUM(B.QUANTITY) AS INVOICE_QTY   
   -- FROM WPS_DET B   
   -- JOIN WPS_MST C ON B.PS_ID = C.PS_ID  
   -- WHERE C.CANCELLED=0  AND ISNULL(B.ORDER_ID,'')<>''   
   -- AND C.AC_CODE=@CWHERE1     
   -- GROUP  BY C.PS_ID,B.ORDER_ID  
   --)C ON A.ORDER_ID   = C.ORDER_ID  
   LEFT OUTER JOIN  
   (  
    SELECT DISTINCT B.ORDER_ID  
    FROM WPS_DET B   
    JOIN WPS_MST C ON B.PS_ID = C.PS_ID  
    WHERE C.CANCELLED=0  AND C.PS_ID=@CMEMOID  
   )C1 ON A.ORDER_ID   = C1.ORDER_ID  
   WHERE (A.MEMO_TYPE IN (1,2,3) AND A.CANCELLED = 0   
   AND A.AC_CODE =@CWHERE1   
   AND (B1.TOTAL_QUANTITY>ISNULL(B1.INVOICE_QTY,0) )) and (ISNULL(A.Short_close,0)  <> 1   OR a.memo_type<>1)
   AND (@CLOCID='' OR ISNULL(WBO_FOR_DEPT_ID,a.location_code)=@CLOCID)  
   ORDER BY A.ORDER_DT,A.ORDER_ID  
   
 END  
GOTO LAST   
  
LBLPENDINGDET_BUYER_ORDERS_DET:  

	SET @CSTEP='10'
	EXEC SP_CHKXNSAVELOG 'WSLpackslip_module',@CSTEP,0,@nSpId,'',1  

select order_id INTO #tmpBo FROM buyer_order_mst a
	WHERE A.MEMO_TYPE IN (1,2,3) AND A.CANCELLED = 0   
   AND A.AC_CODE = @CWHERE1  AND ( A.ApprovedLevelNo =99)
   AND (ISNULL(A.Short_close,0)  <> 1   OR a.memo_type<>1)
   AND (@CLOCID='' OR ISNULL(WBO_FOR_DEPT_ID,a.location_Code)=@CLOCID)  

  
IF @NNAVMODE=1  
BEGIN  
	
		SET @CSTEP='12'
	EXEC SP_CHKXNSAVELOG 'WSLpackslip_module',@CSTEP,0,@nSpId,'',1  

   SELECT CAST(0 AS BIT) AS CHK,0 AS ADD_QTY,D.ARTICLE_NAME  
   ,A.ORDER_ID,B.PARA1_CODE AS PACKSLIP_PARA1_CODE,B.PARA2_CODE AS PACKSLIP_PARA2_CODE  
   ,B.ROW_ID,B.LAST_UPDATE,B.WS_PRICE,B.RFNET,B.ARTICLE_CODE AS PACKSLIP_ARTICLE_CODE  
   ,B.GROSS_WSP,B.DISCOUNT_PERCENTAGE,B.DISCOUNT_AMOUNT,B.REMARKS,B.PRODUCT_CODE,B.MANUAL_DISCOUNT   
   ,SD.SUB_SECTION_NAME,SM.SECTION_NAME,D.ARTICLE_NO,P1.PARA1_NAME,P2.PARA2_NAME,
     ISNULL(P3.PARA3_NAME,'NA') AS PARA3_NAME   
    ,ISNULL(P4.PARA4_NAME,'NA')  AS PARA4_NAME,
    ISNULL(P5.PARA5_NAME,'NA') AS PARA5_NAME,
    ISNULL(P6.PARA6_NAME,'NA') AS PARA6_NAME,
    B.PARA3_CODE ,B.PARA4_CODE,B.PARA5_CODE,B.PARA6_CODE ,
    P1.PARA1_ORDER,P2.PARA2_ORDER  
    ,(CASE WHEN memo_type<>2 THEN  B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END*B.WS_PRICE) AS AMOUNT,  
     UOM.UOM_CODE,UOM.UOM_NAME,UOM.UOM_TYPE  
    ,D.DT_CREATED,D.CODING_SCHEME,D.PARA1_SET,D.PARA2_SET,D.ALIAS AS ARTICLE_ALIAS  
	,B.QUANTITY as order_qty,b.PL_QTY,ISNULL(B.INV_QTY,0) AS INVOICE_QTY,isnull(b.adj_qty,0) adj_qty
	,((CASE WHEN MEMO_TYPE<>2 THEN B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END)-ISNULL(b.INV_QTY,0)-isnull(b.adj_qty,0)) AS PENDING_invoice_Qty
	,((CASE WHEN MEMO_TYPE<>2 THEN B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END)-ISNULL(b.INV_QTY,0)-isnull(b.adj_qty,0)) AS PENDING_quantity
	,0 AS PENDING_quantity1 
	--- (Had to take these 2 columns pending_quantity,pending_quantity1 due to application refeering this for unknown REason by request of Anil (Date:20-08-2021)
	,(CASE WHEN MEMO_TYPE<>2 THEN 0 ELSE  B.QUANTITY-ISNULL(b.pl_qty,0) END) AS PENDING_pl_qty,0 AS XN_STOCK
    ,A.ORDER_NO,0 AS RECEIVE_QUANTITY,  
     CASE WHEN A.MEMO_TYPE=1 THEN 'DIRECT' ELSE 'CUSTOMIZE' END AS TYPE,  
     CAST(0 AS BIT) AS APPROVED ,

	 ISNULL(A1.ATTR1_KEY_NAME,'') as ATTR1_KEY_NAME   ,ISNULL(A2.ATTR2_KEY_NAME,'')  as ATTR2_KEY_NAME
	,ISNULL(A3.ATTR3_KEY_NAME,'') as ATTR3_KEY_NAME  ,ISNULL(A4.ATTR4_KEY_NAME,'') as ATTR4_KEY_NAME
	,ISNULL(A5.ATTR5_KEY_NAME,'') as ATTR5_KEY_NAME,ISNULL(A6.ATTR6_KEY_NAME,'') as ATTR6_KEY_NAME
	,ISNULL(A7.ATTR7_KEY_NAME,'')  ATTR7_KEY_NAME ,ISNULL(A8.ATTR8_KEY_NAME,'')  ATTR8_KEY_NAME
	,ISNULL(A9.ATTR9_KEY_NAME,'')  ATTR9_KEY_NAME ,ISNULL(A10.ATTR10_KEY_NAME,'') ATTR10_KEY_NAME
	,ISNULL(A11.ATTR11_KEY_NAME,'') ATTR11_KEY_NAME,ISNULL(A12.ATTR12_KEY_NAME,'') ATTR12_KEY_NAME
	,ISNULL(A13.ATTR13_KEY_NAME,'') ATTR13_KEY_NAME ,ISNULL(A14.ATTR14_KEY_NAME,'') ATTR14_KEY_NAME
	,ISNULL(A15.ATTR15_KEY_NAME,'') ATTR15_KEY_NAME     
	,ISNULL(A16.ATTR16_KEY_NAME,'') ATTR16_KEY_NAME,ISNULL(A17.ATTR17_KEY_NAME,'') ATTR17_KEY_NAME
	,ISNULL(A18.ATTR18_KEY_NAME,'') ATTR18_KEY_NAME,ISNULL(A19.ATTR19_KEY_NAME,'') ATTR19_KEY_NAME
	,ISNULL(A20.ATTR20_KEY_NAME,'')  ATTR20_KEY_NAME  ,ISNULL(A21.ATTR21_KEY_NAME,'') ATTR21_KEY_NAME
	 ,ISNULL(A22.ATTR22_KEY_NAME,'') as ATTR22_KEY_NAME,ISNULL(A23.ATTR23_KEY_NAME,'') as ATTR23_KEY_NAME
	 ,ISNULL(A24.ATTR24_KEY_NAME,'') ATTR24_KEY_NAME,ISNULL(A25.ATTR25_KEY_NAME,'')  ATTR25_KEY_NAME    
	 ,B.ATTR1_KEY_CODE,B.ATTR2_KEY_CODE,B.ATTR3_KEY_CODE,B.ATTR4_KEY_CODE,B.ATTR5_KEY_CODE
     ,B.ATTR6_KEY_CODE,B.ATTR7_KEY_CODE,B.ATTR8_KEY_CODE,B.ATTR9_KEY_CODE,B.ATTR10_KEY_CODE
	 ,B.ATTR11_KEY_CODE,B.ATTR12_KEY_CODE,B.ATTR13_KEY_CODE,B.ATTR14_KEY_CODE,B.ATTR15_KEY_CODE
     ,B.ATTR16_KEY_CODE,B.ATTR17_KEY_CODE,B.ATTR18_KEY_CODE,B.ATTR19_KEY_CODE,B.ATTR20_KEY_CODE
     ,B.ATTR21_KEY_CODE,B.ATTR22_KEY_CODE,B.ATTR23_KEY_CODE,B.ATTR24_KEY_CODE,B.ATTR25_KEY_CODE
     ,B.SUB_SECTION_CODE,B.SECTION_CODE,B.From_mrp,B.to_mrp

      
   FROM BUYER_ORDER_MST A (NOLOCK)  
   JOIN BUYER_ORDER_DET B (NOLOCK) ON A.ORDER_ID=B.ORDER_ID  
   JOIN #tmpBo c ON c.order_id=a.order_id
   JOIN ARTICLE D(NOLOCK) ON D.ARTICLE_CODE = B.ARTICLE_CODE  
   JOIN SECTIOND SD(NOLOCK) ON SD.SUB_SECTION_CODE  =CASE WHEN B.SUB_SECTION_CODE='0000000' THEN D.sub_section_code ELSE B.SUB_SECTION_CODE END
   JOIN SECTIONM SM(NOLOCK) ON SM.SECTION_CODE=CASE WHEN B.SECTION_CODE='0000000' THEN SD.section_code ELSE B.SECTION_CODE END   
   JOIN PARA1 P1(NOLOCK) ON B.PARA1_CODE=P1.PARA1_CODE  
   JOIN PARA2 P2(NOLOCK) ON B.PARA2_CODE=P2.PARA2_CODE 
   LEFT JOIN para3 P3 (NOLOCK) ON P3.para3_code =B.para3_code 
   LEFT JOIN para4 P4 (NOLOCK) ON P4.para4_code =B.para4_code 
   LEFT JOIN para5 P5 (NOLOCK) ON P5.para5_code =B.para5_code 
   LEFT JOIN para6 P6 (NOLOCK) ON P6.para6_code =B.para6_code 
    LEFT JOIN ATTR1_MST A1 (NOLOCK) ON A1.ATTR1_KEY_CODE=b.attr1_KEY_CODE      
	LEFT JOIN ATTR2_MST A2 (NOLOCK) ON A2.ATTR2_KEY_CODE=b.attr2_KEY_CODE      
	LEFT JOIN ATTR3_MST A3 (NOLOCK) ON A3.ATTR3_KEY_CODE=b.attr3_KEY_CODE      
	LEFT JOIN ATTR4_MST A4 (NOLOCK) ON A4.ATTR4_KEY_CODE=b.attr4_KEY_CODE      
	LEFT JOIN ATTR5_MST A5 (NOLOCK) ON A5.ATTR5_KEY_CODE=b.attr5_KEY_CODE      
	LEFT JOIN ATTR6_MST A6 (NOLOCK) ON A6.ATTR6_KEY_CODE=b.attr6_KEY_CODE      
	LEFT JOIN ATTR7_MST A7 (NOLOCK) ON A7.ATTR7_KEY_CODE=b.attr7_KEY_CODE      
	LEFT JOIN ATTR8_MST A8 (NOLOCK) ON A8.ATTR8_KEY_CODE=b.attr8_KEY_CODE      
	LEFT JOIN ATTR9_MST A9 (NOLOCK) ON A9.ATTR9_KEY_CODE=b.attr9_KEY_CODE      
	LEFT JOIN ATTR10_MST A10 (NOLOCK) ON A10.ATTR10_KEY_CODE=b.attr10_KEY_CODE      
	LEFT JOIN ATTR11_MST A11 (NOLOCK) ON A11.ATTR11_KEY_CODE=b.attr11_KEY_CODE      
	LEFT JOIN ATTR12_MST A12 (NOLOCK) ON A12.ATTR12_KEY_CODE=b.attr12_KEY_CODE      
	LEFT JOIN ATTR13_MST A13 (NOLOCK) ON A13.ATTR13_KEY_CODE=b.attr13_KEY_CODE      
	LEFT JOIN ATTR14_MST A14 (NOLOCK) ON A14.ATTR14_KEY_CODE=b.attr14_KEY_CODE      
	LEFT JOIN ATTR15_MST A15 (NOLOCK) ON A15.ATTR15_KEY_CODE=b.attr15_KEY_CODE      
	LEFT JOIN ATTR16_MST A16 (NOLOCK) ON A16.ATTR16_KEY_CODE=b.attr16_KEY_CODE      
	LEFT JOIN ATTR17_MST A17 (NOLOCK) ON A17.ATTR17_KEY_CODE=b.attr17_KEY_CODE      
	LEFT JOIN ATTR18_MST A18 (NOLOCK) ON A18.ATTR18_KEY_CODE=b.attr18_KEY_CODE      
	LEFT JOIN ATTR19_MST A19 (NOLOCK) ON A19.ATTR19_KEY_CODE=b.attr19_KEY_CODE      
	LEFT JOIN ATTR20_MST A20 (NOLOCK) ON A20.ATTR20_KEY_CODE=b.attr20_KEY_CODE      
	LEFT JOIN ATTR21_MST A21 (NOLOCK) ON A21.ATTR21_KEY_CODE=b.attr21_KEY_CODE      
	LEFT JOIN ATTR22_MST A22 (NOLOCK) ON A22.ATTR22_KEY_CODE=b.attr22_KEY_CODE      
	LEFT JOIN ATTR23_MST A23 (NOLOCK) ON A23.ATTR23_KEY_CODE=b.attr23_KEY_CODE      
	LEFT JOIN ATTR24_MST A24 (NOLOCK) ON A24.ATTR24_KEY_CODE=b.attr24_KEY_CODE      
	LEFT JOIN ATTR25_MST A25 (NOLOCK) ON A25.ATTR25_KEY_CODE=b.ATTR25_KEY_CODE 
    
   JOIN UOM (NOLOCK) ON D.UOM_CODE=UOM.UOM_CODE  
   WHERE ((CASE WHEN memo_type<>2 THEN  B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END-ISNULL(B.ADJ_QTY,0)) > 
   ISNULL(B.INV_QTY ,0))

   ORDER BY A.ORDER_ID
   
	SET @CSTEP='15'
	EXEC SP_CHKXNSAVELOG 'WSLpackslip_module',@CSTEP,0,@nSpId,'',1  

END  
ELSE  
BEGIN  

	SET @CSTEP='18'
	EXEC SP_CHKXNSAVELOG 'WSLpackslip_module',@CSTEP,0,@nSpId,'',1  

   
   SELECT (CASE WHEN ISNULL(B.INV_QTY,0)>0 AND ISNULL(C1.ORDER_ID,'')<>'' THEN 1 ELSE 0 END) AS CHK,0 AS ADD_QTY,D.ARTICLE_NAME  
   ,A.ORDER_ID,B.PARA1_CODE AS PACKSLIP_PARA1_CODE,B.PARA2_CODE AS PACKSLIP_PARA2_CODE  
   ,B.ROW_ID,B.LAST_UPDATE,B.WS_PRICE,B.RFNET,B.ARTICLE_CODE AS PACKSLIP_ARTICLE_CODE  
   ,B.GROSS_WSP,B.DISCOUNT_PERCENTAGE,B.DISCOUNT_AMOUNT,B.REMARKS,B.PRODUCT_CODE,B.MANUAL_DISCOUNT   
   ,SD.SUB_SECTION_NAME,SM.SECTION_NAME,D.ARTICLE_NO,P1.PARA1_NAME,P2.PARA2_NAME,
    ISNULL(P3.PARA3_NAME,'NA') AS PARA3_NAME,   
    ISNULL(P4.PARA4_NAME,'NA')  AS PARA4_NAME,
    ISNULL(P5.PARA5_NAME,'NA') AS PARA5_NAME,
    ISNULL(P6.PARA6_NAME,'NA') AS PARA6_NAME,
    B.PARA3_CODE ,B.PARA4_CODE,B.PARA5_CODE,B.PARA6_CODE ,
    P1.PARA1_ORDER,P2.PARA2_ORDER  
    ,(CASE WHEN memo_type<>2 THEN  B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END*B.WS_PRICE) AS AMOUNT,  
    UOM.UOM_CODE,UOM.UOM_NAME,UOM.UOM_TYPE  
    ,D.DT_CREATED,D.CODING_SCHEME,D.PARA1_SET,D.PARA2_SET,D.ALIAS AS ARTICLE_ALIAS  
	 ,B.QUANTITY as order_qty,b.PL_QTY,ISNULL(B.INV_QTY,0) AS INVOICE_QTY,isnull(b.adj_qty,0) adj_qty
	,((CASE WHEN MEMO_TYPE<>2 THEN B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END)-ISNULL(b.INV_QTY,0)-isnull(b.adj_qty,0)) AS PENDING_invoice_Qty
	,((CASE WHEN MEMO_TYPE<>2 THEN B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END)-ISNULL(b.INV_QTY,0)-isnull(b.adj_qty,0)) AS PENDING_quantity
	,0 as PENDING_quantity1 
	--- (Had to take this column due to application refeering this for unknown REason by request of Anil (Date:20-08-2021)
	,(CASE WHEN MEMO_TYPE<>2 THEN 0 ELSE  B.QUANTITY-ISNULL(b.pl_qty,0) END) AS PENDING_pl_qty,A.ORDER_NO,0 AS RECEIVE_QUANTITY,  
     CASE WHEN A.MEMO_TYPE=1 THEN 'DIRECT' ELSE 'CUSTOMIZE' END AS TYPE,  
     CAST(0 AS BIT) AS APPROVED  ,
	 
	 ISNULL(A1.ATTR1_KEY_NAME,'') as ATTR1_KEY_NAME   ,ISNULL(A2.ATTR2_KEY_NAME,'')  as ATTR2_KEY_NAME
	,ISNULL(A3.ATTR3_KEY_NAME,'') as ATTR3_KEY_NAME  ,ISNULL(A4.ATTR4_KEY_NAME,'') as ATTR4_KEY_NAME
	,ISNULL(A5.ATTR5_KEY_NAME,'') as ATTR5_KEY_NAME,ISNULL(A6.ATTR6_KEY_NAME,'') as ATTR6_KEY_NAME
	,ISNULL(A7.ATTR7_KEY_NAME,'')  ATTR7_KEY_NAME ,ISNULL(A8.ATTR8_KEY_NAME,'')  ATTR8_KEY_NAME
	,ISNULL(A9.ATTR9_KEY_NAME,'')  ATTR9_KEY_NAME ,ISNULL(A10.ATTR10_KEY_NAME,'') ATTR10_KEY_NAME
	,ISNULL(A11.ATTR11_KEY_NAME,'') ATTR11_KEY_NAME,ISNULL(A12.ATTR12_KEY_NAME,'') ATTR12_KEY_NAME
	,ISNULL(A13.ATTR13_KEY_NAME,'') ATTR13_KEY_NAME ,ISNULL(A14.ATTR14_KEY_NAME,'') ATTR14_KEY_NAME
	,ISNULL(A15.ATTR15_KEY_NAME,'') ATTR15_KEY_NAME     
	,ISNULL(A16.ATTR16_KEY_NAME,'') ATTR16_KEY_NAME,ISNULL(A17.ATTR17_KEY_NAME,'') ATTR17_KEY_NAME
	,ISNULL(A18.ATTR18_KEY_NAME,'') ATTR18_KEY_NAME,ISNULL(A19.ATTR19_KEY_NAME,'') ATTR19_KEY_NAME
	,ISNULL(A20.ATTR20_KEY_NAME,'')  ATTR20_KEY_NAME  ,ISNULL(A21.ATTR21_KEY_NAME,'') ATTR21_KEY_NAME
	 ,ISNULL(A22.ATTR22_KEY_NAME,'') as ATTR22_KEY_NAME,ISNULL(A23.ATTR23_KEY_NAME,'') as ATTR23_KEY_NAME
	 ,ISNULL(A24.ATTR24_KEY_NAME,'') ATTR24_KEY_NAME,ISNULL(A25.ATTR25_KEY_NAME,'')  ATTR25_KEY_NAME    
	 ,B.ATTR1_KEY_CODE,B.ATTR2_KEY_CODE,B.ATTR3_KEY_CODE,B.ATTR4_KEY_CODE,B.ATTR5_KEY_CODE
     ,B.ATTR6_KEY_CODE,B.ATTR7_KEY_CODE,B.ATTR8_KEY_CODE,B.ATTR9_KEY_CODE,B.ATTR10_KEY_CODE
	 ,B.ATTR11_KEY_CODE,B.ATTR12_KEY_CODE,B.ATTR13_KEY_CODE,B.ATTR14_KEY_CODE,B.ATTR15_KEY_CODE
     ,B.ATTR16_KEY_CODE,B.ATTR17_KEY_CODE,B.ATTR18_KEY_CODE,B.ATTR19_KEY_CODE,B.ATTR20_KEY_CODE
     ,B.ATTR21_KEY_CODE,B.ATTR22_KEY_CODE,B.ATTR23_KEY_CODE,B.ATTR24_KEY_CODE,B.ATTR25_KEY_CODE
     ,B.SUB_SECTION_CODE,B.SECTION_CODE,B.From_mrp,B.to_mrp


   FROM BUYER_ORDER_MST A (NOLOCK)  
   JOIN BUYER_ORDER_DET B (NOLOCK) ON A.ORDER_ID=B.ORDER_ID  
   JOIN #tmpBo c ON c.order_id=a.order_id
   LEFT OUTER JOIN  
   (  
    SELECT  B.ORDER_ID AS ORDER_ID 
    FROM WPS_DET B   
    JOIN WPS_MST C ON B.PS_ID = C.PS_ID  
    WHERE C.CANCELLED=0  AND C.PS_ID=@CMEMOID  
    AND C.AC_CODE=@CWHERE1     
    GROUP BY B.PS_ID,B.ORDER_ID
   )C1 ON  A.ORDER_ID = C1.ORDER_ID  
   JOIN ARTICLE D(NOLOCK) ON D.ARTICLE_CODE = B.ARTICLE_CODE  
   JOIN SECTIOND SD(NOLOCK) ON SD.SUB_SECTION_CODE  =CASE WHEN B.SUB_SECTION_CODE='0000000' THEN D.sub_section_code ELSE B.SUB_SECTION_CODE END
   JOIN SECTIONM SM(NOLOCK) ON SM.SECTION_CODE=CASE WHEN B.SECTION_CODE='0000000' THEN SD.section_code ELSE B.SECTION_CODE END   
   JOIN PARA1 P1(NOLOCK) ON B.PARA1_CODE=P1.PARA1_CODE  
   JOIN PARA2 P2(NOLOCK) ON B.PARA2_CODE=P2.PARA2_CODE  
   LEFT JOIN para3 P3 (NOLOCK) ON P3.para3_code =B.para3_code 
   LEFT JOIN para4 P4 (NOLOCK) ON P4.para4_code =B.para4_code 
   LEFT JOIN para5 P5 (NOLOCK) ON P5.para5_code =B.para5_code 
   LEFT JOIN para6 P6 (NOLOCK) ON P6.para6_code =B.para6_code 

    LEFT JOIN ATTR1_MST A1 (NOLOCK) ON A1.ATTR1_KEY_CODE=b.attr1_KEY_CODE      
	LEFT JOIN ATTR2_MST A2 (NOLOCK) ON A2.ATTR2_KEY_CODE=b.attr2_KEY_CODE      
	LEFT JOIN ATTR3_MST A3 (NOLOCK) ON A3.ATTR3_KEY_CODE=b.attr3_KEY_CODE      
	LEFT JOIN ATTR4_MST A4 (NOLOCK) ON A4.ATTR4_KEY_CODE=b.attr4_KEY_CODE      
	LEFT JOIN ATTR5_MST A5 (NOLOCK) ON A5.ATTR5_KEY_CODE=b.attr5_KEY_CODE      
	LEFT JOIN ATTR6_MST A6 (NOLOCK) ON A6.ATTR6_KEY_CODE=b.attr6_KEY_CODE      
	LEFT JOIN ATTR7_MST A7 (NOLOCK) ON A7.ATTR7_KEY_CODE=b.attr7_KEY_CODE      
	LEFT JOIN ATTR8_MST A8 (NOLOCK) ON A8.ATTR8_KEY_CODE=b.attr8_KEY_CODE      
	LEFT JOIN ATTR9_MST A9 (NOLOCK) ON A9.ATTR9_KEY_CODE=b.attr9_KEY_CODE      
	LEFT JOIN ATTR10_MST A10 (NOLOCK) ON A10.ATTR10_KEY_CODE=b.attr10_KEY_CODE      
	LEFT JOIN ATTR11_MST A11 (NOLOCK) ON A11.ATTR11_KEY_CODE=b.attr11_KEY_CODE      
	LEFT JOIN ATTR12_MST A12 (NOLOCK) ON A12.ATTR12_KEY_CODE=b.attr12_KEY_CODE      
	LEFT JOIN ATTR13_MST A13 (NOLOCK) ON A13.ATTR13_KEY_CODE=b.attr13_KEY_CODE      
	LEFT JOIN ATTR14_MST A14 (NOLOCK) ON A14.ATTR14_KEY_CODE=b.attr14_KEY_CODE      
	LEFT JOIN ATTR15_MST A15 (NOLOCK) ON A15.ATTR15_KEY_CODE=b.attr15_KEY_CODE      
	LEFT JOIN ATTR16_MST A16 (NOLOCK) ON A16.ATTR16_KEY_CODE=b.attr16_KEY_CODE      
	LEFT JOIN ATTR17_MST A17 (NOLOCK) ON A17.ATTR17_KEY_CODE=b.attr17_KEY_CODE      
	LEFT JOIN ATTR18_MST A18 (NOLOCK) ON A18.ATTR18_KEY_CODE=b.attr18_KEY_CODE      
	LEFT JOIN ATTR19_MST A19 (NOLOCK) ON A19.ATTR19_KEY_CODE=b.attr19_KEY_CODE      
	LEFT JOIN ATTR20_MST A20 (NOLOCK) ON A20.ATTR20_KEY_CODE=b.attr20_KEY_CODE      
	LEFT JOIN ATTR21_MST A21 (NOLOCK) ON A21.ATTR21_KEY_CODE=b.attr21_KEY_CODE      
	LEFT JOIN ATTR22_MST A22 (NOLOCK) ON A22.ATTR22_KEY_CODE=b.attr22_KEY_CODE      
	LEFT JOIN ATTR23_MST A23 (NOLOCK) ON A23.ATTR23_KEY_CODE=b.attr23_KEY_CODE      
	LEFT JOIN ATTR24_MST A24 (NOLOCK) ON A24.ATTR24_KEY_CODE=b.attr24_KEY_CODE      
	LEFT JOIN ATTR25_MST A25 (NOLOCK) ON A25.ATTR25_KEY_CODE=b.ATTR25_KEY_CODE 

   JOIN UOM (NOLOCK) ON D.UOM_CODE=UOM.UOM_CODE  
   
   WHERE ((CASE WHEN memo_type<>2 THEN  B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END-ISNULL(B.ADJ_QTY,0)) > 
   ISNULL(B.INV_QTY ,0))
   ORDER BY A.ORDER_ID  
  
	SET @CSTEP='20'
	EXEC SP_CHKXNSAVELOG 'WSLpackslip_module',@CSTEP,0,@nSpId,'',1  

END  
   
GOTO LAST  

LBLPENDING_PICKLIST_MST:  

 SELECT DISTINCT CAST(0 AS BIT) AS CHK,A.MEMO_ID AS ORDER_ID,A.MEMO_NO AS ORDER_NO,  
 A.MEMO_DT AS ORDER_DT,A.MEMO_DT AS ORDER_TIME,'' AS REF_NO,  
 b1.TOTAL_QUANTITY, CAST(0 AS NUMERIC(18,2)) AS RECEIVED_QTY,CAST(0 AS NUMERIC(18,2)) AS PENDING_QTY,  
 'DIRECT' AS TYPE  
 FROM PLM01106 A (NOLOCK)  
 JOIN   
 (  
  SELECT B.MEMO_ID ,Short_close,SUM(B.QUANTITY) AS TOTAL_QUANTITY   
  FROM PLD01106 B (NOLOCK)    
  JOIN BUYER_ORDER_DET B11 (NOLOCK) ON B11.ROW_ID=B.ORD_ROW_ID  
  JOIN BUYER_ORDER_MST B2 (NOLOCK) ON B2.ORDER_ID=B11.ORDER_ID AND B2.AC_CODE=@CWHERE1  
  GROUP BY B.MEMO_ID,Short_close  
 )B1 ON B1.MEMO_ID =A.MEMO_ID   
 LEFT OUTER JOIN  
 (  
  SELECT B.ORDER_ID AS ORDER_ID,SUM(B.QUANTITY) AS INVOICE_QTY   
  FROM WPS_DET B   
  JOIN WPS_MST C ON B.PS_ID = C.PS_ID  
  WHERE C.CANCELLED=0  AND ISNULL(B.ORDER_ID,'')<>''   
  AND ISNULL(B.PICK_LIST_ROW_ID,'')<>''   
  AND C.AC_CODE=@CWHERE1    
  GROUP BY B.ORDER_ID  
 )C ON  A.MEMO_ID = C.ORDER_ID  
 JOIN buyer_order_mst bo (NOLOCK) ON bo.order_id=a.order_id
 WHERE (A.CANCELLED = 0   
 AND B1.TOTAL_QUANTITY - ISNULL(C.INVOICE_QTY,0) >0) 
 and ISNULL(B1.Short_close,0)  =0 and  ISNULL(a.Short_close,0)  =0
 and bo.location_Code=@CLOCID

 ORDER BY A.MEMO_DT,A.MEMO_ID  
 GOTO LAST  
LBLPENDINGDET_PICKLIST_DET:  

 SELECT CAST(0 AS BIT) AS CHK,0 AS ADD_QTY,D.ARTICLE_NAME  
 ,A.MEMO_ID AS ORDER_ID,B1.PARA1_CODE AS PACKSLIP_PARA1_CODE,B1.PARA2_CODE AS PACKSLIP_PARA2_CODE  
 ,B.QUANTITY,B.ROW_ID,B.LAST_UPDATE,0 AS WS_PRICE,0 AS RFNET,B1.ARTICLE_CODE AS PACKSLIP_ARTICLE_CODE  
 ,0 AS GROSS_WSP,0 AS DISCOUNT_PERCENTAGE,0 AS DISCOUNT_AMOUNT,'' AS REMARKS,0 AS MANUAL_DISCOUNT   
 ,SD.SUB_SECTION_NAME,SM.SECTION_NAME,D.ARTICLE_NO,P1.PARA1_NAME,P2.PARA2_NAME,P3.PARA3_NAME   
  ,'NA' AS PARA4_NAME,'NA' AS PARA5_NAME,'NA' AS PARA6_NAME,P1.PARA1_ORDER,P2.PARA2_ORDER  
  ,(B.QUANTITY*0) AS AMOUNT,UOM.UOM_CODE,UOM.UOM_NAME,UOM.UOM_TYPE  
  ,D.DT_CREATED,D.CODING_SCHEME,D.PARA1_SET,D.PARA2_SET,D.ALIAS AS ARTICLE_ALIAS  
  ,ISNULL(C.INVOICE_QTY,0) AS INVOICE_QTY,(B.QUANTITY-ISNULL(C.INVOICE_QTY,0)) AS PENDING_QUANTITY  
  ,(B.QUANTITY-ISNULL(C.INVOICE_QTY,0)) AS PENDING_QUANTITY1,0 AS XN_STOCK  
  ,A.MEMO_NO AS ORDER_NO,0 AS RECEIVE_QUANTITY,  
   'DIRECT' AS TYPE,  
   CAST(0 AS BIT) AS APPROVED,B.PLD_Product_code  AS PRODUCT_CODE,
   B1.para3_code,B1.PARA4_CODE,B1.PARA5_CODE,B1.PARA6_CODE
 FROM PLM01106 A (NOLOCK)  
 JOIN PLD01106 B (NOLOCK) ON A.MEMO_ID=B.MEMO_ID  
 JOIN BUYER_ORDER_DET B1 (NOLOCK) ON B1.ROW_ID=B.ORD_ROW_ID  
 JOIN BUYER_ORDER_MST B2 (NOLOCK) ON B2.ORDER_ID=B1.ORDER_ID AND B2.AC_CODE=@CWHERE1  
 LEFT OUTER JOIN  
 (  
  SELECT B.ORDER_ID AS ORDER_ID,B.PACKSLIP_ARTICLE_CODE,B.PACKSLIP_PARA1_CODE,B.PACKSLIP_PARA2_CODE  
    ,ISNULL(B.PICK_LIST_ROW_ID,'') AS PICK_LIST_ROW_ID,SUM(B.QUANTITY) AS INVOICE_QTY   
  FROM WPS_DET B   
  JOIN WPS_MST C ON B.PS_ID = C.PS_ID  
  WHERE C.CANCELLED=0  AND ISNULL(B.ORDER_ID,'')<>''   
  AND ISNULL(B.PICK_LIST_ROW_ID,'')<>''   
  AND C.AC_CODE=@CWHERE1     
  GROUP BY B.ORDER_ID,ISNULL(B.PICK_LIST_ROW_ID,''),B.PACKSLIP_ARTICLE_CODE,B.PACKSLIP_PARA1_CODE,B.PACKSLIP_PARA2_CODE  
 )C ON  A.MEMO_ID = C.ORDER_ID AND B.ROW_ID=C.PICK_LIST_ROW_ID  
 JOIN ARTICLE D(NOLOCK) ON D.ARTICLE_CODE = B1.ARTICLE_CODE  
 JOIN SECTIOND SD(NOLOCK) ON D.SUB_SECTION_CODE=SD.SUB_SECTION_CODE  
 JOIN SECTIONM SM(NOLOCK) ON SD.SECTION_CODE=SM.SECTION_CODE   
 JOIN PARA1 P1(NOLOCK) ON B1.PARA1_CODE=P1.PARA1_CODE  
 JOIN PARA2 P2(NOLOCK) ON B1.PARA2_CODE=P2.PARA2_CODE  
 JOIN PARA3 P3(NOLOCK) ON B1.PARA3_CODE=P3.PARA3_CODE  --(donear use 
 JOIN UOM (NOLOCK) ON D.UOM_CODE=UOM.UOM_CODE  
 WHERE (A.CANCELLED = 0   
 AND (B.QUANTITY- ISNULL(C.INVOICE_QTY,0))>0 ) 
 and ISNULL(B2.Short_close,0)  =0 and ISNULL(a.Short_close,0)  =0
 and b2.location_Code=@CLOCID
 ORDER BY A.MEMO_ID  
 GOTO LAST  
 
 
 SAVED_PACKSLIP_BOXENTRY:
     

	 SELECT A.PS_ID ,A.BO_DET_ROW_ID ,
	        SUM(A.QUANTITY) AS QUANTITY
	 FROM WPS_DET  A (NOLOCK) 
	 JOIN WPS_MST B ON A.PS_ID =B.PS_ID 
	 WHERE A.PS_ID =@CMEMOID   AND B.CANCELLED =0
	 GROUP BY A.PS_ID ,A.BO_DET_ROW_ID


 GOTO LAST  
  
LAST:  
	SET @CSTEP='24'
	EXEC SP_CHKXNSAVELOG 'WSLpackslip_module',@CSTEP,0,@nSpId,'',1  

END  
