CREATE PROCEDURE SP3S_WEEKDAYWISE_CHART
(
    @NMODE			       INT=1, --- 1 FOR NRV --2 FOR QUANTITY AND 3 FOR GROSS MARGIN
	@DTODATE 			   VARCHAR(50)='', --DATE PASS OF FILTER
	@CCONVERSIONFACTOR	   INT=1,--1 FOR DIVIDE BY THOUSAND 2 FOR 10 THOUSAND 3 FOR LAKH   
	@LASTYEARCOMPERISION   INT=0,--0 FOR CURRENT YEAR VALUE AND 1 FOR CUR YEAR PREV YEAR AND CONVERSION FACTOR
	@CDEPTID               VARCHAR(5)=''--LOCATION FILTER
	
)
AS
BEGIN
      DECLARE @CURRENTYEAR VARCHAR(10),@DTSQL NVARCHAR(MAX),@DTSQL1 NVARCHAR(MAX),@CFILTER VARCHAR(MAX),@NCONVERSIONAMOUNT NUMERIC(18,0),
              @PREVYEAR VARCHAR(10),@TNRV NUMERIC(12,2),@DPREVTODATE VARCHAR(50),@TPREVNRV NUMERIC(12,2),
              @TQTY NUMERIC(12,2),@TPREVQTY NUMERIC(12,2),@TGM NUMERIC(12,2),@TPREVGM NUMERIC(12,2)
              
    DECLARE @TBLDAY TABLE (SR INT,DY_NAME VARCHAR(3))
    DECLARE @TMPNRV TABLE (DY_NAME VARCHAR(3),NOOFDAYS INT, CUR_YEAR_NRV NUMERIC(12,2),PER_DAY_NRV NUMERIC(12,2),CUR_CONT_PER NUMERIC(10,0),PREV_NOOFDAYS INT,PREV_YEAR_NRV NUMERIC(12,2),PREV_PER_DAY_NRV NUMERIC(12,2), PREV_CONT_PER NUMERIC(10,0))
    DECLARE @TMPQTY TABLE (DY_NAME VARCHAR(3),NOOFDAYS INT, CUR_YEAR_QTY NUMERIC(12,0),PER_DAY_QTY NUMERIC(12,0),CUR_CONT_PER NUMERIC(10,0),PREV_NOOFDAYS INT,PREV_YEAR_QTY NUMERIC(12,0),PREV_PER_DAY_QTY NUMERIC(12,0), PREV_CONT_PER NUMERIC(10,0))
     DECLARE @TMP_GROSS_MARGIN TABLE (DY_NAME VARCHAR(10),SALE_VALUE NUMERIC(12,2),SOLD_PURCHASE_VALUE NUMERIC(12,2),  CUR_GROSS_MARGIN NUMERIC(12,0),CUR_CONT_PER NUMERIC(10,0),PREV_SALE_VALUE NUMERIC(12,2),PREV_SOLD_PURCHASE_VALUE NUMERIC(12,2),PREV_GROSS_MARGIN NUMERIC(12,0),PREV_CONT_PER NUMERIC(10,0))
     
    SET @DTSQL1=''
    SET @CFILTER=''
    SET @CURRENTYEAR=(SELECT '01'+ DBO.FN_GETFINYEAR(@DTODATE))
    SET @NCONVERSIONAMOUNT=1
    SET @DPREVTODATE=(SELECT DATEADD(YEAR,-1,@DTODATE))
	SET @PREVYEAR=(SELECT '01'+ DBO.FN_GETFINYEAR(@DPREVTODATE))
	
	   INSERT INTO @TBLDAY(SR,DY_NAME) 
	   SELECT 1,'MON' UNION ALL
	   SELECT 2,'TUE' UNION ALL
	   SELECT 3,'WED' UNION ALL
	   SELECT 4,'THU' UNION ALL
	   SELECT 5,'FRI' UNION ALL
	   SELECT 6,'SAT' UNION ALL
	   SELECT 7,'SUN'  
	   
	IF @CDEPTID<>''
	SET @CFILTER=' AND a.LOCATION_CODE='''+RTRIM(LTRIM(@CDEPTID))+''''   
	           
    IF @CCONVERSIONFACTOR=1
       SET @NCONVERSIONAMOUNT=1000
    ELSE IF @CCONVERSIONFACTOR=2
       SET @NCONVERSIONAMOUNT=100000
    ELSE IF @CCONVERSIONFACTOR=3
       SET @NCONVERSIONAMOUNT=10000000

IF @NMODE=1
BEGIN
   
		   SET @DTSQL=N'SELECT LEFT(DATENAME (DW,CM_DT),3) AS DY_NAME,
		                SUM(ISNULL(CUR_YEAR_NRV,0)) AS CUR_YEAR_NRV,
		                SUM(ISNULL(CNT,0)) AS CNT,SUM(ISNULL(PREV_YEAR_NRV,0)) AS PREV_YEAR_NRV,
		                SUM(ISNULL(PREV_CNT,0)) AS PREV_CNT
		                FROM
		          (
		          SELECT CM_DT,
		          SUM(NET_AMOUNT) AS CUR_YEAR_NRV,1 AS CNT ,
		          0 AS PREV_YEAR_NRV, 
		          0 AS PREV_CNT
	              FROM CMM01106 A (NOLOCK) 
	              JOIN LOCATION B (NOLOCK) ON a.LOCATION_CODE=B.DEPT_ID 
	              WHERE A.CANCELLED=0 AND A.FIN_YEAR='''+@CURRENTYEAR+'''
				  AND A.CM_DT <='''+CONVERT(VARCHAR(11),@DTODATE,120)+'''
				  '+@CFILTER+'
				  AND B.INACTIVE=0
	              GROUP BY  CM_DT '
	              
	              
	    IF @LASTYEARCOMPERISION=1
		BEGIN		      
		SET @DTSQL1 =N' UNION ALL 
	              SELECT CM_DT AS DY_NAME,
	              0 AS CUR_YEAR_NRV,0 AS CNT,
		          SUM(NET_AMOUNT) AS PREV_YEAR_NRV,1 AS PREV_CNT 
	              FROM CMM01106 A (NOLOCK) 
	              JOIN LOCATION B (NOLOCK) ON a.LOCATION_CODE=B.DEPT_ID 
	              WHERE A.CANCELLED=0 AND A.FIN_YEAR='''+@PREVYEAR+'''
				  AND A.CM_DT <='''+CONVERT(VARCHAR(11),@DPREVTODATE,120)+'''
				  '+@CFILTER+'
				  AND B.INACTIVE=0
	              GROUP BY CM_DT '
	     END
	     SET @DTSQL1=@DTSQL1+') A
				      GROUP BY LEFT(DATENAME (DW,CM_DT),3)'
		 SET @DTSQL=@DTSQL+@DTSQL1       
	     PRINT @DTSQL         
		 INSERT INTO @TMPNRV(DY_NAME,CUR_YEAR_NRV,NOOFDAYS ,PREV_YEAR_NRV ,PREV_NOOFDAYS )	    
		 EXEC SP_EXECUTESQL @DTSQL
		 
		 UPDATE @TMPNRV SET PER_DAY_NRV =CASE WHEN NOOFDAYS =0 THEN 0 ELSE CUR_YEAR_NRV /NOOFDAYS  END
		 SELECT @TNRV=SUM(ISNULL(PER_DAY_NRV ,0)) FROM @TMPNRV
		 UPDATE @TMPNRV SET CUR_CONT_PER =(PER_DAY_NRV *100)/CASE WHEN @TNRV=0 THEN 1 ELSE @TNRV END  
		 UPDATE @TMPNRV SET CUR_YEAR_NRV=CUR_YEAR_NRV/@NCONVERSIONAMOUNT, PER_DAY_NRV=PER_DAY_NRV/@NCONVERSIONAMOUNT
         
        IF @LASTYEARCOMPERISION=1
		BEGIN
         UPDATE @TMPNRV SET PREV_PER_DAY_NRV =CASE WHEN PREV_NOOFDAYS=0 THEN 0 ELSE PREV_YEAR_NRV /PREV_NOOFDAYS END 
		 SELECT @TNRV=SUM(ISNULL(PREV_PER_DAY_NRV ,0)) FROM @TMPNRV
		 UPDATE @TMPNRV SET PREV_CONT_PER =(PREV_PER_DAY_NRV *100)/CASE WHEN @TNRV=0 THEN 1 ELSE @TNRV END  
		 UPDATE @TMPNRV SET PREV_YEAR_NRV=PREV_YEAR_NRV/@NCONVERSIONAMOUNT, PREV_PER_DAY_NRV=PREV_PER_DAY_NRV/@NCONVERSIONAMOUNT
         
         SELECT A.DY_NAME,ISNULL(NOOFDAYS,0) AS  NOOFDAYS,ISNULL(CUR_YEAR_NRV,0) AS CUR_YEAR_NRV ,
         ISNULL(PER_DAY_NRV,0) AS  PER_DAY_NRV,ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER,
         ISNULL(PREV_NOOFDAYS,0) AS  PREV_NOOFDAYS,ISNULL(PREV_YEAR_NRV,0) AS PREV_YEAR_NRV ,
         ISNULL(PREV_PER_DAY_NRV,0) AS  PREV_PER_DAY_NRV,ISNULL(PREV_CONT_PER ,0) AS PREV_CONT_PER
         FROM @TBLDAY A
		 LEFT JOIN @TMPNRV B ON A.DY_NAME =B.DY_NAME 
		 ORDER BY A.SR
		END
		ELSE
		BEGIN
		 SELECT A.DY_NAME,ISNULL(NOOFDAYS,0) AS  NOOFDAYS,ISNULL(CUR_YEAR_NRV,0) AS CUR_YEAR_NRV ,
         ISNULL(PER_DAY_NRV,0) AS  PER_DAY_NRV,ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER
         FROM @TBLDAY A
		 LEFT JOIN @TMPNRV B ON A.DY_NAME =B.DY_NAME 
		 ORDER BY A.SR
		
		END  
         GOTO END_PROC
		
END		
ELSE IF  @NMODE=2
BEGIN

     SET @DTSQL=N'SELECT LEFT(DATENAME (DW,CM_DT),3) AS DY_NAME,
		                SUM(ISNULL(CUR_YEAR_QTY,0)) AS CUR_YEAR_QTY,
		                SUM(ISNULL(CNT,0)) AS CNT,SUM(ISNULL(PREV_YEAR_QTY,0)) AS PREV_YEAR_QTY,
		                SUM(ISNULL(PREV_CNT,0)) AS PREV_CNT
		                FROM
		          (
		          SELECT CM_DT,
		          SUM(C.QUANTITY) AS CUR_YEAR_QTY,1 AS CNT ,
		          0 AS PREV_YEAR_QTY, 
		          0 AS PREV_CNT
	              FROM CMM01106 A (NOLOCK) 
	              JOIN LOCATION B (NOLOCK) ON a.LOCATION_CODE=B.DEPT_ID 
	              JOIN CMD01106 C (NOLOCK) ON A.CM_ID=C.CM_ID
	              WHERE A.CANCELLED=0 AND A.FIN_YEAR='''+@CURRENTYEAR+'''
				  AND A.CM_DT <='''+CONVERT(VARCHAR(11),@DTODATE,120)+'''
				  '+@CFILTER+'
				  AND B.INACTIVE=0
	              GROUP BY  CM_DT '
	              
	              
	    IF @LASTYEARCOMPERISION=1
		BEGIN		      
		SET @DTSQL1 =N' UNION ALL 
	              SELECT CM_DT AS DY_NAME,
	              0 AS CUR_YEAR_QTY,0 AS CNT,
		          SUM(C.QUANTITY) AS PREV_YEAR_QTY,1 AS PREV_CNT 
	              FROM CMM01106 A (NOLOCK) 
	              JOIN LOCATION B (NOLOCK) ON A.LOCATION_CODE=B.DEPT_ID 
	              JOIN CMD01106 C (NOLOCK) ON A.CM_ID=C.CM_ID
	              WHERE A.CANCELLED=0 AND A.FIN_YEAR='''+@PREVYEAR+'''
				  AND A.CM_DT <='''+CONVERT(VARCHAR(11),@DPREVTODATE,120)+'''
				  '+@CFILTER+'
				  AND B.INACTIVE=0
	              GROUP BY CM_DT '
	     END
	     SET @DTSQL1=@DTSQL1+') A
				      GROUP BY LEFT(DATENAME (DW,CM_DT),3)'
		 SET @DTSQL=@DTSQL+@DTSQL1       
	     PRINT @DTSQL         
		 INSERT INTO @TMPQTY(DY_NAME,CUR_YEAR_QTY,NOOFDAYS ,PREV_YEAR_QTY ,PREV_NOOFDAYS )	    
		 EXEC SP_EXECUTESQL @DTSQL
		 
		 UPDATE @TMPQTY SET PER_DAY_QTY =CASE WHEN NOOFDAYS =0 THEN 0 ELSE CUR_YEAR_QTY  /NOOFDAYS  END
		 SELECT @TQTY=SUM(ISNULL(PER_DAY_QTY ,0)) FROM @TMPQTY
		 UPDATE @TMPQTY SET CUR_CONT_PER =(PER_DAY_QTY *100)/CASE WHEN @TQTY=0 THEN 1 ELSE @TQTY END  
		
         
        IF @LASTYEARCOMPERISION=1
		BEGIN
         UPDATE @TMPQTY SET PREV_PER_DAY_QTY =CASE WHEN PREV_NOOFDAYS=0 THEN 0 ELSE PREV_YEAR_QTY /PREV_NOOFDAYS END 
		 SELECT @TQTY=SUM(ISNULL(PREV_PER_DAY_QTY ,0)) FROM @TMPQTY
		 UPDATE @TMPQTY SET PREV_CONT_PER =(PREV_PER_DAY_QTY *100)/CASE WHEN @TQTY=0 THEN 1 ELSE @TQTY END  
		
         SELECT A.DY_NAME,ISNULL(NOOFDAYS,0) AS  NOOFDAYS,ISNULL(CUR_YEAR_QTY,0) AS CUR_YEAR_QTY ,
         ISNULL(PER_DAY_QTY,0) AS  PER_DAY_QTY,ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER,
         ISNULL(PREV_NOOFDAYS,0) AS  PREV_NOOFDAYS,ISNULL(PREV_YEAR_QTY,0) AS PREV_YEAR_QTY ,
         ISNULL(PREV_PER_DAY_QTY,0) AS  PREV_PER_DAY_QTY,ISNULL(PREV_CONT_PER ,0) AS PREV_CONT_PER
         FROM @TBLDAY A
		 LEFT JOIN @TMPQTY B ON A.DY_NAME =B.DY_NAME 
		 ORDER BY A.SR
		END
		ELSE
		BEGIN
		 SELECT A.DY_NAME,ISNULL(NOOFDAYS,0) AS  NOOFDAYS,ISNULL(CUR_YEAR_QTY,0) AS CUR_YEAR_QTY ,
         ISNULL(PER_DAY_QTY,0) AS  PER_DAY_QTY,ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER
         FROM @TBLDAY A
		 LEFT JOIN @TMPQTY B ON A.DY_NAME =B.DY_NAME 
		 ORDER BY A.SR
		
		END 
		  
         GOTO END_PROC

END	
	
ELSE IF  @NMODE=3
BEGIN

     SET @DTSQL=N'SELECT LEFT(DATENAME (DW,CM_DT),3) AS DY_NAME,
		                SUM(ISNULL(SALE_VALUE,0)) AS SALE_VALUE,
		                SUM(ISNULL(SOLD_PURCHASE_VALUE,0)) AS SOLD_PURCHASE_VALUE,
		                SUM(ISNULL(PREV_SALE_VALUE,0)) AS PREV_SALE_VALUE,
		                SUM(ISNULL(PREV_SOLD_PURCHASE_VALUE,0)) AS PREV_SOLD_PURCHASE_VALUE
		                FROM
		          (
		          SELECT CM_DT
		          ,SUM(C.RFNET) AS SALE_VALUE 
	              ,SUM(C.QUANTITY*(SKU.PURCHASE_PRICE+(CASE WHEN FORM.POST_TAX_SEPARATELY=0 
			      THEN ISNULL(SKU_OH.TAX_AMOUNT,0) ELSE 0 END)-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0))) AS SOLD_PURCHASE_VALUE,
			      0 AS PREV_SALE_VALUE,
			      0 AS PREV_SOLD_PURCHASE_VALUE	
	              FROM CMM01106 A (NOLOCK) 
	              JOIN LOCATION B (NOLOCK) ON A.LOCATION_CODE=B.DEPT_ID 
	              JOIN CMD01106 C (NOLOCK) ON A.CM_ID=C.CM_ID
	              JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =C.PRODUCT_CODE 
	              LEFT JOIN SKU_OH (NOLOCK) ON SKU.PRODUCT_CODE =SKU_OH .PRODUCT_CODE
	              JOIN FORM (NOLOCK) ON SKU.FORM_ID=FORM.FORM_ID
	              WHERE A.CANCELLED=0 AND A.FIN_YEAR='''+@CURRENTYEAR+'''
				  AND A.CM_DT <='''+CONVERT(VARCHAR(11),@DTODATE,120)+'''
				  '+@CFILTER+'
				  AND B.INACTIVE=0
	              GROUP BY  CM_DT '
	              
	              
	    IF @LASTYEARCOMPERISION=1
		BEGIN		      
		SET @DTSQL1 =N' UNION ALL 
	              SELECT CM_DT AS CM_DT,
	              0 AS SALE_VALUE,
	              0 AS SOLD_PURCHASE_VALUE
		          ,SUM(C.RFNET) AS PREV_SALE_VALUE 
	              ,SUM(C.QUANTITY*(SKU.PURCHASE_PRICE+(CASE WHEN FORM.POST_TAX_SEPARATELY=0 
			      THEN ISNULL(SKU_OH.TAX_AMOUNT,0) ELSE 0 END)-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0))) AS PREV_SOLD_PURCHASE_VALUE
	              FROM CMM01106 A (NOLOCK) 
	              JOIN LOCATION B (NOLOCK) ON A.LOCATION_CODE=B.DEPT_ID 
	              JOIN CMD01106 C (NOLOCK) ON A.CM_ID=C.CM_ID
	              JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =C.PRODUCT_CODE 
	              LEFT JOIN SKU_OH (NOLOCK) ON SKU.PRODUCT_CODE =SKU_OH .PRODUCT_CODE
	              JOIN FORM (NOLOCK) ON SKU.FORM_ID=FORM.FORM_ID
	              WHERE A.CANCELLED=0 AND A.FIN_YEAR='''+@PREVYEAR+'''
				  AND A.CM_DT <='''+CONVERT(VARCHAR(11),@DPREVTODATE,120)+'''
				  '+@CFILTER+'
				  AND B.INACTIVE=0
	              GROUP BY CM_DT '
	     END
	     SET @DTSQL1=@DTSQL1+') A
				      GROUP BY LEFT(DATENAME (DW,CM_DT),3)'
		 SET @DTSQL=@DTSQL+@DTSQL1       
	     PRINT @DTSQL  
	    INSERT INTO @TMP_GROSS_MARGIN(DY_NAME,SALE_VALUE,SOLD_PURCHASE_VALUE,PREV_SALE_VALUE,PREV_SOLD_PURCHASE_VALUE)
		EXEC SP_EXECUTESQL @DTSQL
		
		
	   UPDATE 	@TMP_GROSS_MARGIN SET CUR_GROSS_MARGIN=SALE_VALUE-SOLD_PURCHASE_VALUE     
	   WHERE SALE_VALUE>SOLD_PURCHASE_VALUE	
	   
	   
	   UPDATE 	@TMP_GROSS_MARGIN SET PREV_GROSS_MARGIN=PREV_SALE_VALUE-PREV_SOLD_PURCHASE_VALUE
	   WHERE PREV_SALE_VALUE>PREV_SOLD_PURCHASE_VALUE
	   
	   
	  SELECT @TGM=SUM(ISNULL(CUR_GROSS_MARGIN ,0)) FROM @TMP_GROSS_MARGIN
	  
	  UPDATE @TMP_GROSS_MARGIN SET CUR_CONT_PER =(CUR_GROSS_MARGIN *100)/CASE WHEN @TGM=0 THEN 1 ELSE @TGM END 
	  UPDATE @TMP_GROSS_MARGIN SET CUR_GROSS_MARGIN=CUR_GROSS_MARGIN/@NCONVERSIONAMOUNT
      
     IF @LASTYEARCOMPERISION=1
	  BEGIN
		  SELECT @TPREVGM=SUM(ISNULL(PREV_GROSS_MARGIN ,0)) FROM @TMP_GROSS_MARGIN
		  UPDATE @TMP_GROSS_MARGIN SET PREV_CONT_PER =(PREV_GROSS_MARGIN *100)/CASE WHEN @TPREVGM=0 THEN 1 ELSE @TPREVGM END 
		  UPDATE @TMP_GROSS_MARGIN SET PREV_GROSS_MARGIN=PREV_GROSS_MARGIN/@NCONVERSIONAMOUNT
		       
		  SELECT  A.DY_NAME,ISNULL(CUR_GROSS_MARGIN,0) AS CUR_GROSS_MARGIN,ISNULL(CUR_CONT_PER,0) AS CUR_CONT_PER ,
				  ISNULL(PREV_GROSS_MARGIN,0) AS PREV_GROSS_MARGIN,ISNULL(PREV_CONT_PER,0) AS PREV_CONT_PER 
		  FROM  @TBLDAY A
		 LEFT JOIN @TMP_GROSS_MARGIN B ON A.DY_NAME =B.DY_NAME 
		 ORDER BY A.SR
		  
    END
    ELSE
    BEGIN
		  SELECT  A.DY_NAME,ISNULL(CUR_GROSS_MARGIN,0) AS CUR_GROSS_MARGIN,ISNULL(CUR_CONT_PER,0) AS CUR_CONT_PER       
		  FROM  @TBLDAY A
		 LEFT JOIN @TMP_GROSS_MARGIN B ON A.DY_NAME =B.DY_NAME 
		 ORDER BY A.SR
    END      
	GOTO END_PROC

END	


END_PROC:

END
