CREATE PROCEDURE DBO.SALEPERSON_INCENTIVE_REPORT
(
 @FROM_DTATE DATE
,@TO_DATE DATE
)
AS
 SET NOCOUNT ON;
BEGIN
    --DECLARE LOCAL VARIABLE
    DECLARE @STRQUERY NVARCHAR(MAX)
           ,@D_FILTER NVARCHAR(2000)
           ,@SLS_TITLE VARCHAR(500)
           ,@INC_BASE VARCHAR(100)
           ,@INC_RATE NUMERIC(10,2)
           ,@NSTEP VARCHAR(3)
           ,@LOOPEND INT
           ,@LOOPSTART INT
    ----CREATE TEMP TABLE #FILTERDETAILS FOR INSERT DATA--------
    IF OBJECT_ID('TEMPDB..#FILTERDETAILS') IS NOT NULL
       DROP TABLE #FILTERDETAILS
		CREATE TABLE #FILTERDETAILS
		(
		  ID INT IDENTITY(1,1)
		 ,SLS_TITLE VARCHAR(500)
		 ,SLS_MEMO_NO VARCHAR(100)
		 ,D_FILTER VARCHAR(MAX)
		 ,INC_BASE VARCHAR(100)
		 ,INC_RATE NUMERIC(10,2)
		 ,SLS_FROM_DT DATETIME
		 ,SLS_TO_DT DATETIME
		)
    ---INSERT SLS_TITLE WITH D_FILTER DATA WHICH ARE USED INTO FERTHER QUERY---
    INSERT INTO #FILTERDETAILS(SLS_TITLE,SLS_MEMO_NO,D_FILTER,INC_BASE,INC_RATE,SLS_FROM_DT,SLS_TO_DT)
	SELECT D.SLS_TITLE,M.SLS_MEMO_NO
	,CASE ISNULL(D.D_FILTER,'') WHEN '' 
		  THEN '(( (B.PRODUCT_CODE IN ('+(STUFF((SELECT ','''+S.PRODUCT_CODE+'''' FROM SLSBC S  WHERE S.SLS_MEMO_NO = D.SLS_MEMO_NO FOR XML PATH('')),1,1,''))+')) ))' 
		  ELSE D.D_FILTER 
	 END
    ,CASE 
        WHEN ISNULL(D.DISCOUNT_PERCENTAGE,'0.00') ='0.00' 
        THEN  'PER PCS' ELSE '%AGE' 
     END AS [INC BASE]
    ,CASE 
        WHEN ISNULL(D.DISCOUNT_PERCENTAGE,'0.00') ='0.00' 
        THEN  D.NET_PRICE ELSE D.DISCOUNT_PERCENTAGE
     END AS [INC RATE]
	,M.SLS_FROM_DT,M.SLS_TO_DT
	FROM SLSMST M WITH(NOLOCK)
	JOIN SLSDET D WITH(NOLOCK) ON M.SLS_MEMO_NO = D.SLS_MEMO_NO
    WHERE ((M.SLS_FROM_DT BETWEEN @FROM_DTATE AND @TO_DATE) OR 
           (M.SLS_TO_DT BETWEEN @FROM_DTATE AND @TO_DATE)
          )
     SET @LOOPEND   = @@ROWCOUNT;
   --CREATE TABLE FOR INSERT FINAL OUTPUT DATA----
    IF OBJECT_ID('TEMPDB..#INVOICE_DETAIL') IS NOT NULL
       DROP TABLE #INVOICE_DETAIL
  
		CREATE TABLE #INVOICE_DETAIL
		(
		 SALE_PERSON VARCHAR(200)
		,TITLE VARCHAR(100)
		,SALE_QTY INT
		,SALE_AMOUNT NUMERIC(10,2)
		,INC_BASE VARCHAR(100)
		,INC_RATE NUMERIC(10,2)
		,INC_AMOUNT NUMERIC(10,2)
		)
  --LOOP START FOR INSERTING DATA ONE BY ONE BECAUSE WE HAVE NOT ANY KEYFIELD TO JOIN TEMP TABLE AND 
  --BELOW USED TABLE-----------
  
   SET @LOOPSTART = 1
   WHILE @LOOPEND >= @LOOPSTART
      BEGIN
       SELECT @SLS_TITLE = SLS_TITLE,@D_FILTER = D_FILTER,@INC_BASE = INC_BASE,@INC_RATE = INC_RATE 
       FROM #FILTERDETAILS WHERE ID=@LOOPSTART
	   
        SET @STRQUERY =N'INSERT INTO #INVOICE_DETAIL(SALE_PERSON,TITLE,SALE_QTY,SALE_AMOUNT,INC_BASE,INC_RATE)
                       SELECT EMP_NAME,'''+@SLS_TITLE+''' AS  TITLE ,SUM(B.QUANTITY)AS QTY
                      ,SUM(B.MRP)AS SALE_AMT 
                      ,'''+@INC_BASE+''','''+CAST(@INC_RATE AS VARCHAR(20))+'''
					   FROM CMM01106 A(NOLOCK)
					   JOIN CMD01106 B(NOLOCK) ON A.CM_ID=B.CM_ID
					   JOIN SKU(NOLOCK) ON SKU.PRODUCT_CODE=B.PRODUCT_CODE
					   JOIN ARTICLE(NOLOCK) ON ARTICLE.ARTICLE_CODE=SKU.ARTICLE_CODE
					   JOIN PARA1(NOLOCK) ON PARA1.PARA1_CODE=SKU.PARA1_CODE
					   JOIN PARA2(NOLOCK) ON PARA2.PARA2_CODE=SKU.PARA2_CODE
					   JOIN PARA3(NOLOCK) ON PARA3.PARA3_CODE=SKU.PARA3_CODE
					   JOIN PARA4(NOLOCK) ON PARA4.PARA4_CODE=SKU.PARA4_CODE
					   JOIN PARA5(NOLOCK) ON PARA5.PARA5_CODE=SKU.PARA5_CODE
					   JOIN PARA6(NOLOCK) ON PARA6.PARA6_CODE=SKU.PARA6_CODE
					   JOIN EMPLOYEE ON EMPLOYEE.EMP_CODE=B.EMP_CODE
					   WHERE   '+@D_FILTER+' AND
					  CM_DT  BETWEEN CAST('''+CAST(@FROM_DTATE AS VARCHAR(10))+''' AS DATE) 
					  AND CAST('''+CAST(@TO_DATE AS VARCHAR(10))+''' AS DATE) 
					  GROUP BY B.EMP_CODE,EMP_NAME
					  '
	  PRINT @STRQUERY
	  EXEC SP_EXECUTESQL @STRQUERY
      SET @LOOPSTART = @LOOPSTART+1;
    END
   -----UPDATE INC_AMOUNT BASED ON INC_BASE-----------
	UPDATE #INVOICE_DETAIL SET INC_AMOUNT = (
		CASE INC_BASE 
			WHEN '%AGE' THEN (SALE_AMOUNT * INC_RATE)/100
			WHEN 'PER PCS' THEN SALE_QTY * INC_RATE
		END 
	   )

SELECT * FROM #INVOICE_DETAIL ORDER BY SALE_PERSON 

END
