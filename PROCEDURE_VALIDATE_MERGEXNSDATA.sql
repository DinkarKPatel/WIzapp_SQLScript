CREATE PROCEDURE VALIDATE_MERGEXNSDATA   
@CXNTYPE VARCHAR(10),@CMEMOID VARCHAR(40),  
@CERRORMSG VARCHAR(500) OUTPUT  
--WITH ENCRYPTION
AS  
BEGIN    
 DECLARE @NSUMRFNET NUMERIC(10,2),@NSUMQTY NUMERIC(10,2),@CXNMASTERTABLENAME VARCHAR(200),  
 @CKEYFIELD VARCHAR(100),@CCMD NVARCHAR(MAX),@CXNDETAILTABLENAME VARCHAR(100)  
    
 SET @CERRORMSG=''  
   
 IF LEFT(@CXNTYPE,3)='MST'  
  RETURN  
    
 SELECT TOP 1 @CXNMASTERTABLENAME=TABLENAME,@CKEYFIELD=KEYFIELD FROM XNSINFO (NOLOCK) WHERE XN_TYPE=@CXNTYPE  
 AND XNS_MERGING_ORDER NOT IN (0,99)  ORDER BY XNS_SENDING_ORDER  
   
 IF @CXNTYPE='XNSCHO'  
 BEGIN  
  IF NOT EXISTS (SELECT A.CHALLAN_ID FROM CID01106 A WHERE A.CHALLAN_ID=@CMEMOID)  
   SET @CERRORMSG='INCOMPLETE MEMO DETAILS CANNOT BE MERGED.....PLEASE CHECK'  
 END  
   
 ELSE    
 IF @CXNTYPE='XNSSLS'  
 BEGIN  
  SELECT @NSUMRFNET=SUM(RFNET) FROM CMD01106 (NOLOCK) WHERE CM_ID=@CMEMOID  
    
  IF EXISTS (SELECT A.CM_ID FROM CMM01106 A (NOLOCK) WHERE A.CM_ID=@CMEMOID AND ISNULL(@NSUMRFNET,0)<>(A.NET_AMOUNT-A.ATD_CHARGES))  
  BEGIN  
   EXEC UPDATERFNET 'SLS',@CMEMOID  
    
   SELECT @NSUMRFNET=SUM(RFNET) FROM CMD01106 (NOLOCK) WHERE CM_ID=@CMEMOID     
     
   IF EXISTS (SELECT A.CM_ID FROM CMM01106 A WHERE A.CM_ID=@CMEMOID AND ISNULL(@NSUMRFNET,0)<>(A.NET_AMOUNT-A.ATD_CHARGES))  
    SET @CERRORMSG='INCOMPLETE MEMO DETAILS CANNOT BE MERGED.....PLEASE CHECK'  
  END   
 END  
 
 
END  
------- 'END OF CREATING PROCEDURE VALIDATE_MERGEXNSDATA'
