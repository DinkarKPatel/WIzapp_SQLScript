CREATE PROCEDURE VALIDATEXN_MIRROR_IRR
@CLOCID VARCHAR(5),
@CXNID VARCHAR(50),
@CMERGEDB VARCHAR(200),
@CERRORMSG VARCHAR(MAX) OUTPUT
--WITH ENCRYPTION
AS
BEGIN

BEGIN TRY

DECLARE @DTSQL			NVARCHAR(MAX),
		@CTEMPIRR		NVARCHAR(MAX),
		@CTEMPIRD		NVARCHAR(MAX),
		@NSTEP			INT,
		@CERRPRODUCTCODE	VARCHAR(50),
		@CTEMPDBNAME	VARCHAR(50),
		@CSTATECODE CHAR(7),@CLOCSSTMEMOID VARCHAR(40),@DTSQLSUBSECTION VARCHAR(100),@CCURLOCID CHAR(2),
		@CSTATENAME VARCHAR(100),@CERREMPCODE CHAR(7),@NCMMDISCOUNT NUMERIC(6,2),@NCRDISCOUNTPCT NUMERIC(10,2),
		@NCRDAYS INT,@NDISCOUNTAMT NUMERIC(14,2),@NTAXAMT NUMERIC(14,2),@NDISCOUNTPCT NUMERIC(6,2),@NTAXPCT NUMERIC(6,2),
		@CERRARTICLENO VARCHAR(100),@CERRPARA1NAME VARCHAR(50),@CERRPARA2NAME VARCHAR(50),@CTEMPFORMTABLE VARCHAR(200),
		@CTEMPARTTABLE VARCHAR(200),@CTEMPP1TABLE VARCHAR(200),@CTEMPP2TABLE VARCHAR(200),
		@CTEMPP3TABLE VARCHAR(200),@CTEMPP4TABLE VARCHAR(200),@CTEMPP5TABLE VARCHAR(200),@CTEMPP6TABLE VARCHAR(200),
		@CTEMPLMTABLE VARCHAR(200),@NSUMIRDNET NUMERIC(10,2),@NSUBTOTAL NUMERIC(10,2),@CTEMPSKUTABLE VARCHAR(200),
		@CTEMPSKUOHTABLE VARCHAR(200)

SET @NSTEP=10
IF OBJECT_ID('TEMPDB..#TMPIRM','U') IS NOT NULL
	DROP TABLE #TMPIRM

IF OBJECT_ID('TEMPDB..#TMPIRD','U') IS NOT NULL
	DROP TABLE #TMPIRD
		
CREATE TABLE #TMPIRM ( IRM_MEMO_ID VARCHAR(22), IRM_MEMO_NO VARCHAR(10), IRM_MEMO_DT DATETIME )

CREATE TABLE #TMPIRD (IRM_MEMO_ID VARCHAR(22), PRODUCT_CODE VARCHAR(50),NEW_PRODUCT_CODE VARCHAR(50),
					  ARTICLE_CODE CHAR(9),PARA1_CODE CHAR(9),PARA2_CODE CHAR(9),PARA3_CODE CHAR(9),
					  PARA4_CODE CHAR(9),PARA5_CODE CHAR(9),PARA6_CODE CHAR(9))

SET @NSTEP=20
SELECT @CTEMPARTTABLE=' '+@CMERGEDB+'ARTICLE',	
	   @CTEMPP1TABLE=' '+@CMERGEDB+'PARA1',	
	   @CTEMPP2TABLE=' '+@CMERGEDB+'PARA2',	
	   @CTEMPP3TABLE=' '+@CMERGEDB+'PARA3',	
	   @CTEMPP4TABLE=' '+@CMERGEDB+'PARA4',	
	   @CTEMPP5TABLE=' '+@CMERGEDB+'PARA5',	
	   @CTEMPP6TABLE=' '+@CMERGEDB+'PARA6',	
	   @CTEMPSKUTABLE=' '+@CMERGEDB+'SKU',
	   @CTEMPSKUOHTABLE=' '+@CMERGEDB+'SKU_OH'	
  
SET @DTSQL=N'SELECT	IRM_MEMO_ID, IRM_MEMO_NO, IRM_MEMO_DT
		FROM IRM01106 WHERE IRM_MEMO_ID = '''+@CXNID+''''

INSERT #TMPIRM
EXEC SP_EXECUTESQL @DTSQL

SET @NSTEP=30
SET @DTSQL=N'SELECT IRM_MEMO_ID, PRODUCT_CODE,NEW_PRODUCT_CODE,ARTICLE_CODE AS ARTILCE_CODE,
			PARA1_CODE AS PARA1_CODE,PARA2_CODE,PARA3_CODE,PARA4_CODE,PARA5_CODE,
			PARA6_CODE	FROM IRD01106 WHERE IRM_MEMO_ID = '''+@CXNID+''''

INSERT #TMPIRD
EXEC SP_EXECUTESQL @DTSQL
	    	
SET @NSTEP=37

--VALIDATING RECORD COUNT
IF NOT EXISTS (SELECT TOP 1 * FROM #TMPIRD)
BEGIN
	SET @CERRORMSG='NO RECORD FOUND AT DETAIL LEVEL..... CANNOT PROCEED'
	GOTO ATLAST
END

--VALIDATING ARTICLES
SET @NSTEP=43
SET @DTSQL=N'IF EXISTS (SELECT TOP 1 A.ARTICLE_CODE FROM #TMPIRD   A 
						LEFT OUTER JOIN '+@CTEMPARTTABLE+'  B ON B.ARTICLE_CODE=A.ARTICLE_CODE WHERE B.ARTICLE_CODE IS NULL
						OR A.ARTICLE_CODE IN ('''',''0000000''))
				SET @CERRORMSG=''INVALID ARTICLE DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @DTSQL,N'@CERRORMSG NVARCHAR(MAX) OUTPUT',@CERRORMSG=@CERRORMSG OUTPUT
PRINT @DTSQL
IF LTRIM(RTRIM(ISNULL(@CERRORMSG,'')))<>''
	GOTO ATLAST

--VALIDATING PARA1
SET @NSTEP=45
SET @DTSQL=N'IF EXISTS (SELECT TOP 1 A.PARA1_CODE FROM #TMPIRD   A 
						LEFT OUTER JOIN '+@CTEMPP1TABLE+' B ON B.PARA1_CODE=A.PARA1_CODE WHERE B.PARA1_CODE IS NULL)
				SET @CERRORMSG=''INVALID PARA1 DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @DTSQL,N'@CERRORMSG NVARCHAR(MAX) OUTPUT',@CERRORMSG=@CERRORMSG OUTPUT
PRINT @DTSQL
IF LTRIM(RTRIM(ISNULL(@CERRORMSG,'')))<>''
	GOTO ATLAST

--VALIDATING PARA2
SET @NSTEP=47
SET @DTSQL=N'IF EXISTS (SELECT TOP 1 A.PARA2_CODE FROM #TMPIRD   A 
						LEFT OUTER JOIN '+@CTEMPP2TABLE+' B ON B.PARA2_CODE=A.PARA2_CODE WHERE B.PARA2_CODE IS NULL)
				SET @CERRORMSG=''INVALID PARA2 DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @DTSQL,N'@CERRORMSG NVARCHAR(MAX) OUTPUT',@CERRORMSG=@CERRORMSG OUTPUT
PRINT @DTSQL
IF LTRIM(RTRIM(ISNULL(@CERRORMSG,'')))<>''
	GOTO ATLAST

--VALIDATING PARA3
SET @NSTEP=49
SET @DTSQL=N'IF EXISTS (SELECT TOP 1 A.PARA3_CODE FROM #TMPIRD   A 
						LEFT OUTER JOIN '+@CTEMPP3TABLE+' B ON B.PARA3_CODE=A.PARA3_CODE WHERE B.PARA3_CODE IS NULL)
				SET @CERRORMSG=''INVALID PARA3 DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @DTSQL,N'@CERRORMSG NVARCHAR(MAX) OUTPUT',@CERRORMSG=@CERRORMSG OUTPUT
PRINT @DTSQL
IF LTRIM(RTRIM(ISNULL(@CERRORMSG,'')))<>''
	GOTO ATLAST

--VALIDATING PARA4
SET @NSTEP=51
SET @DTSQL=N'IF EXISTS (SELECT TOP 1 A.PARA4_CODE FROM #TMPIRD   A 
						LEFT OUTER JOIN '+@CTEMPP4TABLE+' B ON B.PARA4_CODE=A.PARA4_CODE WHERE B.PARA4_CODE IS NULL)
				SET @CERRORMSG=''INVALID PARA4 DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @DTSQL,N'@CERRORMSG NVARCHAR(MAX) OUTPUT',@CERRORMSG=@CERRORMSG OUTPUT
PRINT @DTSQL
IF LTRIM(RTRIM(ISNULL(@CERRORMSG,'')))<>''
	GOTO ATLAST

--VALIDATING PARA5
SET @NSTEP=53
SET @DTSQL=N'IF EXISTS (SELECT TOP 1 A.PARA5_CODE FROM #TMPIRD   A 
						LEFT OUTER JOIN '+@CTEMPP5TABLE+' B ON B.PARA5_CODE=A.PARA5_CODE WHERE B.PARA5_CODE IS NULL)
				SET @CERRORMSG=''INVALID PARA5 DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @DTSQL,N'@CERRORMSG NVARCHAR(MAX) OUTPUT',@CERRORMSG=@CERRORMSG OUTPUT
PRINT @DTSQL
IF LTRIM(RTRIM(ISNULL(@CERRORMSG,'')))<>''
	GOTO ATLAST

--VALIDATING PARA6
SET @NSTEP=55
SET @DTSQL=N'IF EXISTS (SELECT TOP 1 A.PARA6_CODE FROM #TMPIRD A 
						LEFT OUTER JOIN '+@CTEMPP6TABLE+' B ON B.PARA6_CODE=A.PARA6_CODE WHERE B.PARA6_CODE IS NULL)
				SET @CERRORMSG=''INVALID PARA6 DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @DTSQL,N'@CERRORMSG NVARCHAR(MAX) OUTPUT',@CERRORMSG=@CERRORMSG OUTPUT
PRINT @DTSQL

IF LTRIM(RTRIM(ISNULL(@CERRORMSG,'')))<>''
	GOTO ATLAST

--VALIDATING SKU
SET @NSTEP=60
SET @DTSQL=N'IF EXISTS (SELECT TOP 1 A.ARTICLE_CODE FROM #TMPIRD   A 
						LEFT OUTER JOIN '+@CTEMPSKUTABLE+' B ON B.PRODUCT_CODE=A.PRODUCT_CODE
						WHERE B.PRODUCT_CODE IS NULL AND ISNULL(A.PRODUCT_CODE,'''')<>'''')
				SET @CERRORMSG=''INVALID OLD BARCODE DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @DTSQL,N'@CERRORMSG NVARCHAR(MAX) OUTPUT',@CERRORMSG=@CERRORMSG OUTPUT
PRINT @DTSQL
IF LTRIM(RTRIM(ISNULL(@CERRORMSG,'')))<>''
	GOTO ATLAST

--VALIDATING SKU_OH
SET @NSTEP=65
SET @DTSQL=N'IF EXISTS (SELECT TOP 1 A.ARTICLE_CODE FROM #TMPIRD   A 
						LEFT OUTER JOIN '+@CTEMPSKUTABLE+' B ON B.PRODUCT_CODE=A.NEW_PRODUCT_CODE
						WHERE B.PRODUCT_CODE IS NULL AND ISNULL(A.NEW_PRODUCT_CODE,'''')<>'''')
				SET @CERRORMSG=''INVALID NEW BARCODE DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @DTSQL,N'@CERRORMSG NVARCHAR(MAX) OUTPUT',@CERRORMSG=@CERRORMSG OUTPUT
PRINT @DTSQL
IF LTRIM(RTRIM(ISNULL(@CERRORMSG,'')))<>''
	GOTO ATLAST


END TRY

BEGIN CATCH
	SET @CERRORMSG=N'ERROR FOUND IN '+ISNULL(ERROR_PROCEDURE(),'SP_VALIDATEXN_BEFORESAVE_IRR ')+
	  'STEP :'+LTRIM(RTRIM(STR(@NSTEP)))  +' MSG :'+ISNULL(ERROR_MESSAGE(),'NULL MSG')  
	
	GOTO ATLAST  
END CATCH

ATLAST:

IF LTRIM(RTRIM(ISNULL(@CERRORMSG,'')))<>''
	SET @CERRORMSG=ISNULL(@CERRORMSG,'') +'(VALIDATEXN_MIRROR_IRR)'
		


END
------   END OF PROCEDURE VALIDATEXN_MIRROR_IRR
