create PROCEDURE SP_BUYERSORDER    
@NQUERYID NUMERIC(2,0),    
@CMEMOID VARCHAR(40),    
@CWHERE VARCHAR(500),    
@CFINYEAR VARCHAR(10),    
@NNAVMODE NUMERIC(2,0),  
@CARTICLECODE CHAR(9)='',    
@CPARA2CODE CHAR(7)='',  
@DTWHERE DATETIME =''  
--WITH ENCRYPTION  
AS      
BEGIN      
   --(dinkar) Replace  left(memoid,2) to Location_code 
   
DECLARE @CCMD NVARCHAR(MAX),@cHEAD_CODE VARCHAR(MAX)      
      
IF @NQUERYID = 1      
GOTO LBLNAVIGATE      
      
ELSE IF @NQUERYID = 2      
GOTO LBLGETMASTER      
      
ELSE IF @NQUERYID = 3      
GOTO LBLGETDETAILS      --THIS ID IS ONLY FOR SHOWING PRODUCT DETAIL FOR NAV USE ID 99  
      
ELSE IF @NQUERYID = 4      
GOTO LBLGETPARA1LIST      
      
ELSE IF @NQUERYID = 5      
GOTO LBLGETPARA2LIST      
      
ELSE IF @NQUERYID = 6      
GOTO LBLGETPARA3LIST      
      
ELSE IF @NQUERYID = 7      
GOTO LBLGETPARA4LIST      
      
ELSE IF @NQUERYID = 8      
GOTO LBLGETPARA5LIST      
      
ELSE IF @NQUERYID = 9      
GOTO LBLGETPARA6LIST      
      
ELSE IF @NQUERYID = 10      
GOTO LBLCUSTOMER      
      
ELSE IF @NQUERYID = 11      
GOTO LBLARTICLELIST      
      
ELSE IF @NQUERYID = 12      
GOTO LBLARTICLEINFO      
      
ELSE IF @NQUERYID = 13      
GOTO LBLFORMNAME      
      
ELSE IF @NQUERYID = 14      
GOTO LBLARTICLESKUINFO      
      
ELSE IF @NQUERYID = 15      
GOTO LBLARTICLEPARA2LIST      
      
ELSE IF @NQUERYID = 16      
GOTO LBLARTICLEPARA1LIST      
      
ELSE IF @NQUERYID = 17      
GOTO LBLPOLIST      
      
ELSE IF @NQUERYID = 18      
GOTO LBLCUST        
      
ELSE IF @NQUERYID = 19      
GOTO LBLMEASUREMENTDET      
      
ELSE IF @NQUERYID = 20      
GOTO LBLGETREPORTSUMMARY      
      
ELSE IF @NQUERYID = 21      
GOTO LBLMEASUREMENTADD       
      
ELSE IF @NQUERYID = 22      
GOTO LBLGETBOLIST      
      
ELSE IF @NQUERYID = 23    
GOTO LBLGETARTICLEINFO      
  
ELSE IF @NQUERYID = 24    
GOTO LBLGETLINKADV  
  
ELSE IF @NQUERYID = 25    
GOTO LBLGETSALEPERSON  
  
ELSE IF @NQUERYID = 26      
GOTO LBLBOMDET   
  
ELSE IF @NQUERYID = 27      
GOTO LBLBOMPRODUCTDET   
  
ELSE IF @NQUERYID= 28  
 GOTO LBLGETTRIALDATA  
   
ELSE IF @NQUERYID= 29    
 GOTO LBLGETDELIVERYDATA  
   
ELSE IF @NQUERYID= 30    
 GOTO LBLGETIMGDETAILS  
  
   
ELSE IF @NQUERYID= 99    
 GOTO LBLDETNEW      
ELSE      
GOTO LAST      
      
LBLNAVIGATE:      
  
 SET @CCMD=N'SELECT ORDER_NO , ORDER_ID , ORDER_DT     
   FROM WSL_ORDER_MST (NOLOCK)       
   WHERE FIN_YEAR ='''+ @CFINYEAR +''''  
  
IF @CWHERE<>''   
SET @CCMD=@CCMD+@CWHERE  
  
SET @CCMD=@CCMD+' ORDER BY ORDER_DT ASC, ORDER_NO ASC'      
PRINT @CCMD  
EXEC SP_EXECUTESQL @CCMD      
GOTO LAST      
      
LBLGETMASTER:    
  
  --SELECT  A.*, 0.00 AS TOTAL_QTY,      
  --B.AC_NAME, C.DEPT_NAME,C.DEPT_ID , B.ADDRESS0,        
  --B.ADDRESS1, B.ADDRESS2, B.AREA_NAME, B.CITY, B.PINCODE, B.STATE, B.SST_NO,   
  --B.CITY, B.ADDRESS0 + ' ' + B.ADDRESS1 + ' ' + B.ADDRESS2 + ' ' + B.AREA_NAME + ' ' + B.CITY + ' ' + B.STATE + ' ' + B.MOBILE + ' ' AS SUPP_ADDRESS,       
  --B.SST_DT, B.TIN_NO, B.TIN_DT,D.USERNAME,E.USERNAME AS EDT_USERNAME,T1.FC_NAME,      
  --CONVERT(NUMERIC(14,2),A.TOTAL_AMOUNT * T1.FC_RATE) AS AMOUNT_IN_INR,T1.FC_RATE    
  --,ISNULL(T4.EMP_TITLE,'') + ' ' + ISNULL(T4.EMP_FNAME,'') + ' ' + ISNULL(T4.EMP_LNAME,'')  AS EMP_NAME    
  --,ISNULL(T4.REF_ID,'') AS REF_ID    
  --,CUST.USER_CUSTOMER_CODE  
  --,CUST.CUSTOMER_FNAME +' '+ CUST.CUSTOMER_LNAME AS CUSTOMER_NAME   
  --,CUST.ADDRESS1 AS CUST_ADDRESS1, CUST.ADDRESS2 AS CUST_ADDRESS2  
  --,CUST.AREA AS CUST_AREA, CUST.CITY AS CUST_CITY, CUST.PIN AS CUST_PIN  
  --,CUST.STATE AS CUST_STATE,CUST.REGION_NAME AS CUST_REGION,  
  --CUST.ADDRESS1 + ' ' + CUST.ADDRESS2 + ' ' + CUST.AREA + ' ' + CUST.CITY + ' ' + CUST.STATE + ' ' + CUST.MOBILE + ' ' AS CUST_ADDRESS  
  --,ISNULL(T5.EMP_NAME,'') AS SALE_PERSON_NAME  
  --FROM WSL_ORDER_MST A  (NOLOCK)       
  --JOIN LMV01106 B (NOLOCK)  ON A.AC_CODE = B.AC_CODE         
  --JOIN USERS D  (NOLOCK)  ON A.USER_CODE = D.USER_CODE         
  --JOIN USERS E (NOLOCK)  ON A.EDT_USER_CODE = E.USER_CODE         
  --JOIN LOCATION C (NOLOCK)  ON A.DEPT_ID = C.DEPT_ID         
  --JOIN FC T1 (NOLOCK)   ON A.FC_CODE = T1.FC_CODE     
  --JOIN  CUST (NOLOCK) ON A.CUSTOMER_CODE = CUST.CUSTOMER_CODE  
  --LEFT OUTER JOIN EMP_MST T4 ON A.EMP_CODE= T4.EMP_ID    
  --LEFT OUTER JOIN EMPLOYEE T5 ON A.SALE_EMP_CODE= T5.EMP_CODE   
  --WHERE A.ORDER_ID = @CMEMOID    
    
  SELECT  A.*, 0.00 AS TOTAL_QTY,      
  B.AC_NAME, C.DEPT_NAME,C.DEPT_ID , B.ADDRESS0,        
  B.ADDRESS1, B.ADDRESS2, B.AREA_NAME, B.CITY, B.PINCODE, B.STATE, B.SST_NO,   
  B.CITY, B.ADDRESS0 + ' ' + B.ADDRESS1 + ' ' + B.ADDRESS2 + ' ' + B.AREA_NAME + ' ' + B.CITY + ' ' + B.STATE + ' ' + B.MOBILE + ' ' AS SUPP_ADDRESS,       
  B.SST_DT, B.TIN_NO, B.TIN_DT,D.USERNAME,E.USERNAME AS EDT_USERNAME,T1.FC_NAME,      
  CONVERT(NUMERIC(14,2),A.TOTAL_AMOUNT * T1.FC_RATE) AS AMOUNT_IN_INR,T1.FC_RATE    
  ,ISNULL(T4.EMP_TITLE,'') + ' ' + ISNULL(T4.EMP_FNAME,'') + ' ' + ISNULL(T4.EMP_LNAME,'')  AS EMP_NAME    
  ,ISNULL(T4.REF_ID,'') AS REF_ID    
  ,CUST.USER_CUSTOMER_CODE,(CASE WHEN CUST.CUSTOMER_TITLE <> '' THEN CUST.CUSTOMER_TITLE ELSE ISNULL(TP.PREFIX_NAME,'') END ) AS CUSTOMER_TITLE,  
  CUST.CUSTOMER_FNAME +' '+ CUST.CUSTOMER_LNAME AS CUSTOMER_NAME   
  ,CUST.ADDRESS1 AS CUST_ADDRESS1, CUST.ADDRESS2 AS CUST_ADDRESS2  
  ,ar.AREA_name AS CUST_AREA, ct.CITY AS CUST_CITY, CUST.PIN AS CUST_PIN  
  ,st.STATE AS CUST_STATE,rg.REGION_NAME AS CUST_REGION,  
  CUST.ADDRESS1 + ' ' + CUST.ADDRESS2 + ' ' + ar.AREA_name + ' ' + ct.CITY + ' ' + st.STATE + ' ' + CUST.MOBILE + ' ' AS CUST_ADDRESS  
  ,ISNULL(T5.EMP_NAME,'') AS SALE_PERSON_NAME,ISNULL(ADV_AMOUNT,0) AS ADV_AMOUNT  
  FROM WSL_ORDER_MST A  (NOLOCK)       
  JOIN LMV01106 B (NOLOCK)  ON A.AC_CODE = B.AC_CODE         
  JOIN USERS D  (NOLOCK)  ON A.USER_CODE = D.USER_CODE         
  JOIN USERS E (NOLOCK)  ON A.EDT_USER_CODE = E.USER_CODE         
  JOIN LOCATION C (NOLOCK)  ON A.DEPT_ID = C.DEPT_ID         
  JOIN FC T1 (NOLOCK)   ON A.FC_CODE = T1.FC_CODE     

  JOIN custdym CUST (NOLOCK) ON A.CUSTOMER_CODE = CUST.CUSTOMER_CODE  
  JOIN AREA ar (nolock) ON Ar.AREA_CODE = CUST.AREA_CODE   
  JOIN CITY Ct (nolock) ON ar.CITY_CODE = Ct.CITY_CODE   
  JOIN STATE st (nolock) ON ct.STATE_CODE = st.STATE_CODE  
  JOIN REGIONM rg ON st.REGION_CODE = rg.REGION_CODE
  LEFT OUTER JOIN EMP_MST T4 ON A.EMP_CODE= T4.EMP_ID  
  LEFT OUTER JOIN PREFIX TP ON CUST.PREFIX_CODE= TP.PREFIX_CODE    
  LEFT OUTER JOIN EMPLOYEE T5 ON A.SALE_EMP_CODE= T5.EMP_CODE  
  LEFT OUTER JOIN   
  (  
   SELECT B.ORDER_ID, SUM(C.NET_AMOUNT) AS ADV_AMOUNT   
   FROM WSL_ORDER_ADV_RECEIPT B (NOLOCK)  
      JOIN ARC01106 C (NOLOCK) ON B.ADV_REC_ID = C.ADV_REC_ID  
      WHERE C.CANCELLED=0  
      GROUP BY B.ORDER_ID    
     ) T6 ON A.ORDER_ID= T6.ORDER_ID  
  WHERE A.ORDER_ID = @CMEMOID    
         
GOTO LAST      
      
LBLGETDETAILS:      
       
      DECLARE @NQUN NUMERIC(9,2)    
      
    IF OBJECT_ID('TEMPDB..#TEMP_PO_PI','U') IS NOT NULL  
  DROP TABLE #TEMP_PO_PI  
      
 CREATE TABLE #TEMP_PO_PI(PO_NO VARCHAR(50),PO_DT DATETIME,MRR_NO VARCHAR(50),RECEIPT_DT DATETIME,PRODUCT_CODE VARCHAR(50),MRR_DT DATETIME,AC_NAME VARCHAR(100))  
   
 IF OBJECT_ID('TEMPDB..#BUYERDET','U') IS NOT NULL  
  DROP TABLE #BUYERDET  
 CREATE TABLE #BUYERDET(MEMO_NO VARCHAR(100),XN_DATE DATETIME,QUANTITY NUMERIC(9,2),XN_TYPE VARCHAR(10))    
      
    IF OBJECT_ID('TEMPDB..#TEMP_ROW_IDWSL','U') IS NOT NULL  
   DROP TABLE #TEMP_ROW_IDWSL   
      
    SELECT PRODUCT_CODE  
	INTO #TEMP_ROW_IDWSL 
	FROM WSL_ORDER_DET 
	WHERE ORDER_TYPE<>1 AND ORDER_ID = @CMEMOID  AND (ROW_ID= @CWHERE OR ''=@CWHERE) 
	UNION ALL
	SELECT REF_PRODUCT_CODE  
	FROM WSL_ORDER_DET 
	WHERE ORDER_TYPE=1 AND ORDER_ID = @CMEMOID  AND (ROW_ID= @CWHERE OR ''=@CWHERE) 
	
	--INSERT INTO #TEMP_ROW_IDWSL
	--SELECT REF_PRODUCT_CODE AS PRODUCT_CODE INTO #TEMP_ROW_IDWSL FROM WSL_ORDER_DET WHERE ISNULL(REF_PRODUCT_CODE,'')<>'' AND ORDER_ID = @CMEMOID  AND (ROW_ID= @CWHERE OR ''=@CWHERE)

--SELECT * FROM  #TEMP_ROW_IDWSL
          
    DECLARE @PRODUCT_CODE VARCHAR(500),@PO_NO VARCHAR(100),@PO_DT VARCHAR(100),@MRR_NO VARCHAR(100),@RECEIPT_DT DATETIME,@MRR_DT DATETIME,@AC_NAME VARCHAR(100)  
      
		WHILE EXISTS (SELECT TOP 1 'A' FROM #TEMP_ROW_IDWSL)  
		BEGIN  
			SELECT TOP 1 @PRODUCT_CODE=PRODUCT_CODE FROM #TEMP_ROW_IDWSL           
			
			SELECT TOP 1 @PO_NO=ISNULL(B.PO_NO,''),@PO_DT=PO_DT,@AC_NAME=LM.AC_NAME  
			FROM POD01106 A   
			JOIN POM01106 B ON B.PO_ID =A.PO_ID  
			LEFT JOIN LM01106 LM(NOLOCK) ON B.AC_CODE=LM.AC_CODE     
			WHERE A.PRODUCT_CODE =@PRODUCT_CODE AND B.CANCELLED=0    
			ORDER BY B.PO_DT DESC  
     
			SELECT  @NQUN=SUM(A.QUANTITY)  
			FROM POD01106 A   
			JOIN POM01106 B ON B.PO_ID =A.PO_ID     
			WHERE A.PRODUCT_CODE =@PRODUCT_CODE AND B.CANCELLED=0    
    
			IF ISNULL(@PO_NO,'') <> ''   
			INSERT INTO #BUYERDET(MEMO_NO,XN_DATE,QUANTITY,XN_TYPE)  
			SELECT @PO_NO,@PO_DT,@NQUN,'PO'  
        
			SELECT TOP 1 @MRR_NO=E.MRR_NO,@RECEIPT_DT=E.RECEIPT_DT,@MRR_DT=MRR_DT,@AC_NAME =LM.AC_NAME    
			FROM PID01106 D  (NOLOCK)  --ON D.PRODUCT_CODE =A.PRODUCT_CODE         
			JOIN PIM01106 E  (NOLOCK)  ON D.MRR_ID=E.MRR_ID    
			JOIN LM01106 LM(NOLOCK) ON E.AC_CODE=LM.AC_CODE       
			WHERE D.PRODUCT_CODE =@PRODUCT_CODE AND E.CANCELLED=0   
			--AND E.INV_MODE=1 /*ONLY PARTY INVOICE*/    
			ORDER BY E.INV_MODE,E.RECEIPT_DT DESC 
     
     
			SELECT @NQUN = SUM(D.QUANTITY)  
			FROM PID01106 D  (NOLOCK)  --ON D.PRODUCT_CODE =A.PRODUCT_CODE          
			JOIN PIM01106 E  (NOLOCK)  ON D.MRR_ID=E.MRR_ID     
			WHERE D.PRODUCT_CODE =@PRODUCT_CODE AND E.CANCELLED=0   
			AND @MRR_NO=E.MRR_NO AND @RECEIPT_DT=E.RECEIPT_DT AND @MRR_DT=MRR_DT
			--AND E.INV_MODE=1 /*ONLY PARTY INVOICE*/ 
			--ORDER BY E.INV_MODE,E.RECEIPT_DT DESC 
		--	IF ISNULL(@MRR_NO,'')='' -- IF PURCHASE IS GROUP INVOICE  
		--	BEGIN  
         
		--	SELECT TOP 1 @MRR_NO=E.MRR_NO,@RECEIPT_DT=E.RECEIPT_DT,@MRR_DT=MRR_DT,@AC_NAME =LM.AC_NAME    
		--	FROM POD01106 A  (NOLOCK)   
		--	JOIN POM01106 B  (NOLOCK)  ON B.PO_ID =A.PO_ID  
		--	JOIN PID01106 D  (NOLOCK)  ON D.PRODUCT_CODE =A.PRODUCT_CODE         
		--	JOIN PIM01106 E  (NOLOCK)  ON D.MRR_ID=E.MRR_ID    
		--	JOIN LM01106 LM(NOLOCK) ON B.AC_CODE=LM.AC_CODE       
		--	WHERE A.PRODUCT_CODE =@PRODUCT_CODE AND B.CANCELLED=0 AND E.CANCELLED=0   
		--	AND E.INV_MODE=2 /*ONLY GROUP INVOICE*/    
		--	ORDER BY E.RECEIPT_DT DESC  
     
     
		--	SELECT @NQUN = SUM(D.QUANTITY)  
		--	FROM POD01106 A  (NOLOCK)   
		--	JOIN POM01106 B  (NOLOCK)  ON B.PO_ID =A.PO_ID  
		--	JOIN PID01106 D  (NOLOCK)  ON D.PRODUCT_CODE =A.PRODUCT_CODE          
		--	JOIN PIM01106 E  (NOLOCK)  ON D.MRR_ID=E.MRR_ID     
		--	WHERE A.PRODUCT_CODE =@PRODUCT_CODE AND B.CANCELLED=0 AND E.CANCELLED=0   
		--	AND E.INV_MODE=2 /*ONLY GROUP INVOICE*/   
       
		--END   
        
    
		IF ISNULL(@MRR_NO,'') <> ''   
		INSERT INTO #BUYERDET (MEMO_NO,XN_DATE,QUANTITY,XN_TYPE)  
		SELECT @MRR_NO,@RECEIPT_DT,@NQUN,'PUR'  

		--SELECT * FROM #BUYERDET
       
		INSERT #TEMP_PO_PI VALUES(@PO_NO,@PO_DT ,@MRR_NO,@RECEIPT_DT,@PRODUCT_CODE ,@MRR_DT,@AC_NAME )  
		DELETE  FROM #TEMP_ROW_IDWSL  WHERE PRODUCT_CODE =@PRODUCT_CODE  
     --SELECT * FROM #TEMP_PO_PI
		SET @PO_NO=''  
		SET @PO_DT=''  
		SET @MRR_NO=''  
		SET @RECEIPT_DT=''  
		SET @PRODUCT_CODE=''   
		SET @MRR_DT=''  
		SET @AC_NAME=''  
		END  
      
     IF OBJECT_ID ('TEMPDB..#ORDDLV','U') IS NOT NULL  
           DROP TABLE #ORDDLV  
             
     SELECT A.CUSTOMER_CODE  
     ,A.CM_NO   
     ,A.CM_DT   
     ,B.PRODUCT_CODE     
     ,B.QUANTITY  
  INTO #ORDDLV        
  FROM CMM01106 A (NOLOCK)   
  JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID  
  JOIN WSL_ORDER_DET WOD (NOLOCK) ON B.PRODUCT_CODE=  
       (CASE WHEN WOD.ORDER_TYPE=0 THEN WOD.PRODUCT_CODE ELSE WOD.REF_PRODUCT_CODE END)  
  JOIN WSL_ORDER_MST WOM (NOLOCK) ON  wom.order_id =wod.order_id
  WHERE A.CM_MODE = 1 AND B.RFNET>0   
  AND A.CANCELLED = 0 AND A.CUSTOMER_CODE <> '000000000000' AND WOM.CANCELLED=0 AND ISNULL(WOD.CANCELLED,0)=0  
  
  
  ;WITH CTE_REMOVEDUP AS  
  (  
   SELECT ROW_NUMBER() OVER(PARTITION BY PRODUCT_CODE,CUSTOMER_CODE ORDER BY CM_DT ASC,CM_NO ASC) AS SNO  
      ,CUSTOMER_CODE  
      ,CM_NO  
      ,PRODUCT_CODE  
      ,QUANTITY  
   FROM #ORDDLV     
  )  
  DELETE CTE_REMOVEDUP WHERE SNO<>1  
    
  CREATE INDEX IX_ORDDLV_PRODUCT_CODE  ON #ORDDLV(PRODUCT_CODE)  
  CREATE INDEX IX_ORDDLV_CUSTOMER_CODE ON #ORDDLV(CUSTOMER_CODE)  
  CREATE INDEX IX_ORDDLV_CM_NO ON #ORDDLV(CM_NO)     
      
 SELECT  B.ARTICLE_NAME,  0 AS SERIAL_NO,      
    (CASE WHEN A.ORDER_TYPE = 1 THEN 'READY STK' ELSE 'PO' END) AS ORDER_TYPE_VALUE,      
    B.ARTICLE_NO,C.PARA1_NAME,D.PARA2_NAME,E.PARA3_NAME, F.PARA4_NAME, G.PARA5_NAME, H.PARA6_NAME,      
    '' AS JRD_ROW_ID, '' AS JID_ROW_ID, '' AS JOD_ROW_ID,D.PARA2_ORDER,C.PARA1_ORDER ,    
    (A.QUANTITY * A.WS_PRICE) AS AMOUNT,UOM.UOM_CODE,UOM.UOM_NAME,1 AS UOM_TYPE,B.DT_CREATED    
    ,B.CODING_SCHEME,B.PARA1_SET,B.PARA2_SET,ISNULL(POD.WOD_ROW_ID,'') AS WOD_ROW_ID,  
    
    B.ALIAS AS ARTICLE_ALIAS--, PIM.MRR_NO AS PURCHASE_INVOICE,PIM.RECEIPT_DT AS PURCHASE_INV_DI USE WIZAPP3SRAJ  
    ,TMP.PO_NO,  
     PO_DT=CASE WHEN ISNULL(TMP.PO_DT,'')='1900-01-01' THEN  '' ELSE  CONVERT(VARCHAR,TMP.PO_DT,105) END  
    ,MRR_NO=ISNULL(TMP.MRR_NO,'')  
    ,MRR_DT=CASE WHEN ISNULL(TMP.MRR_DT,'')='1900-01-01' THEN '' ELSE CONVERT (VARCHAR,TMP.MRR_DT,105) END,  
    RECEIPT_DT=CASE WHEN ISNULL(TMP.RECEIPT_DT,'')='1900-01-01' THEN '' ELSE CONVERT (VARCHAR,TMP.RECEIPT_DT,105) END,  
    TMP.AC_NAME AS SUPPLIER,  
    CM_NO=ISNULL(SLS.CM_NO,'') ,  
    CM_DT=CASE WHEN ISNULL(SLS.CM_DT ,'')='1900-01-01' THEN '' ELSE CONVERT (VARCHAR,SLS.CM_DT ,105) END,  
    U.USERNAME AS CANCELLED_USER_NAME,  
    CANCELLED_DT=CASE WHEN ISNULL(A.CANCELLED_DATE,'')='1900-01-01' THEN '' ELSE   CONVERT(VARCHAR,A.CANCELLED_DATE,105) END,  
    A.*  
    FROM WSL_ORDER_DET A  (NOLOCK)        
    JOIN ARTICLE B (NOLOCK)  ON A.ARTICLE_CODE = B.ARTICLE_CODE        
    JOIN UOM(NOLOCK) ON B.UOM_CODE=UOM.UOM_CODE  
    JOIN PARA1 C (NOLOCK)  ON A.PARA1_CODE = C.PARA1_CODE        
    JOIN PARA2 D (NOLOCK)  ON A.PARA2_CODE = D.PARA2_CODE         
    JOIN PARA3 E (NOLOCK)  ON A.PARA3_CODE = E.PARA3_CODE         
    JOIN PARA4 F (NOLOCK)  ON A.PARA4_CODE = F.PARA4_CODE         
    JOIN PARA5 G (NOLOCK)  ON A.PARA5_CODE = G.PARA5_CODE         
    JOIN PARA6 H (NOLOCK) ON A.PARA6_CODE = H.PARA6_CODE      
    LEFT JOIN USERS U (NOLOCK) ON U.USER_CODE = A.CANCELLED_USER_CODE    
    JOIN WSL_ORDER_MST R ON R.ORDER_ID= A.ORDER_ID    
    LEFT OUTER JOIN #TEMP_PO_PI TMP ON TMP.PRODUCT_CODE=(CASE WHEN A.ORDER_TYPE=1 THEN A.REF_PRODUCT_CODE ELSE A.PRODUCT_CODE  END)
    LEFT OUTER JOIN   
    (  
      SELECT  POD.PRODUCT_CODE,WOD_ROW_ID    
      FROM POD01106 POD (NOLOCK)  
      JOIN WSL_ORDER_DET B  (NOLOCK)  ON POD.PRODUCT_CODE= B.PRODUCT_CODE  
      JOIN POM01106 C  (NOLOCK)  ON C.PO_ID =POD.PO_ID       
      WHERE B.ORDER_ID = @CMEMOID AND C.CANCELLED=0   
      AND ISNULL(POD.PRODUCT_CODE,'')<>''    
	  UNION ALL
	  SELECT  POD.PRODUCT_CODE,WOD_ROW_ID    
      FROM POD01106 POD (NOLOCK)  
      JOIN WSL_ORDER_DET B  (NOLOCK)  ON POD.PRODUCT_CODE= B.REF_PRODUCT_CODE  
      JOIN POM01106 C  (NOLOCK)  ON C.PO_ID =POD.PO_ID       
      WHERE B.ORDER_ID = @CMEMOID AND C.CANCELLED=0   
      AND ISNULL(POD.PRODUCT_CODE,'')<>'' 
     -- ORDER BY C.PO_DT  
    ) POD ON POD.PRODUCT_CODE = A.PRODUCT_CODE    
    LEFT JOIN   
    (  
     SELECT CMM.CM_NO,CMM.CM_DT,CMM.PRODUCT_CODE,CMM.CUSTOMER_CODE  
	FROM #ORDDLV CMM(NOLOCK)  
    ) SLS ON  SLS.PRODUCT_CODE=(CASE WHEN A.ORDER_TYPE=1 THEN A.REF_PRODUCT_CODE ELSE A.PRODUCT_CODE END)  
  AND SLS.CUSTOMER_CODE=R.CUSTOMER_CODE  
    WHERE A.ORDER_ID = @CMEMOID  AND (A.ROW_ID = @CWHERE OR '' =@CWHERE)  
    --AND R.CANCELLED =0    
    ORDER BY A.SERIAL_NO     
  
 --  INSERT INTO #BUYERDET (MEMO_NO,XN_DATE,QUANTITY,XN_TYPE)  
 --   SELECT C.CM_NO,C.CM_DT,B.QUANTITY,'SLS'AS XN_TYPE  FROM WSL_ORDER_DET A   
 --JOIN CMD01106 B ON  B.PRODUCT_CODE=CASE WHEN ISNULL(A.PRODUCT_CODE,'')<>'' THEN  A.PRODUCT_CODE ELSE A.REF_PRODUCT_CODE END   
 --JOIN CMM01106 C ON B.CM_ID = C.CM_ID  
 --JOIN  WSL_ORDER_MST D ON A.ORDER_ID = D.ORDER_ID  
 --WHERE C.CANCELLED = 0 AND D.CANCELLED = 0 AND A.CANCELLED =0 AND D.ORDER_ID = @CMEMOID  
     
 -- SELECT MEMO_NO,XN_DATE,SUM(QUANTITY) AS QUANTITY,XN_TYPE   FROM #BUYERDET  
 -- GROUP BY MEMO_NO,XN_DATE,XN_TYPE  
 -- ORDER BY XN_TYPE,XN_DATE  
    
  GOTO LAST       
    
       
      
LBLDETNEW:   
    
  SELECT  B.ARTICLE_NAME,  0 AS SERIAL_NO,      
(CASE WHEN A.ORDER_TYPE = 1 THEN 'READY STK' ELSE 'PO' END) AS ORDER_TYPE_VALUE,      
B.ARTICLE_NO,C.PARA1_NAME,D.PARA2_NAME,E.PARA3_NAME, F.PARA4_NAME, G.PARA5_NAME, H.PARA6_NAME,      
'' AS JRD_ROW_ID, '' AS JID_ROW_ID, '' AS JOD_ROW_ID,D.PARA2_ORDER,C.PARA1_ORDER ,    
(A.QUANTITY * A.WS_PRICE) AS AMOUNT,UOM.UOM_CODE,UOM.UOM_NAME,1 AS UOM_TYPE,B.DT_CREATED    
,B.CODING_SCHEME,B.PARA1_SET,B.PARA2_SET,  
B.ALIAS AS ARTICLE_ALIAS,    
U.USERNAME AS CANCELLED_USER_NAME,  
CANCELLED_DT=CASE WHEN ISNULL(A.CANCELLED_DATE,'')='1900-01-01' THEN '' ELSE    
CONVERT(VARCHAR,A.CANCELLED_DATE,105) END,  
E1.emp_name as emp1,E2.emp_name as emp2,E3.emp_name as emp3,
A.*  
FROM WSL_ORDER_DET A  (NOLOCK)        
JOIN ARTICLE B (NOLOCK)  ON A.ARTICLE_CODE = B.ARTICLE_CODE        
JOIN UOM(NOLOCK) ON B.UOM_CODE=UOM.UOM_CODE  
JOIN PARA1 C (NOLOCK)  ON A.PARA1_CODE = C.PARA1_CODE        
JOIN PARA2 D (NOLOCK)  ON A.PARA2_CODE = D.PARA2_CODE         
JOIN PARA3 E (NOLOCK)  ON A.PARA3_CODE = E.PARA3_CODE         
JOIN PARA4 F (NOLOCK)  ON A.PARA4_CODE = F.PARA4_CODE         
JOIN PARA5 G (NOLOCK)  ON A.PARA5_CODE = G.PARA5_CODE         
JOIN PARA6 H (NOLOCK) ON A.PARA6_CODE = H.PARA6_CODE      
LEFT JOIN USERS U (NOLOCK) ON U.USER_CODE = A.CANCELLED_USER_CODE    
LEFT OUTER JOIN EMPLOYEE E1 (NOLOCK) ON A.EMP_CODE= E1.EMP_CODE
LEFT OUTER JOIN EMPLOYEE E2 (NOLOCK) ON A.EMP_CODE1= E2.EMP_CODE
LEFT OUTER JOIN EMPLOYEE E3 (NOLOCK) ON A.EMP_CODE2= E3.EMP_CODE
JOIN WSL_ORDER_MST R ON R.ORDER_ID= A.ORDER_ID     
WHERE A.ORDER_ID = @CMEMOID    
ORDER BY A.SERIAL_NO     
    
    
GOTO LAST   
     
      
LBLGETPARA1LIST:      
      
 SELECT A.PARA1_CODE, A.PARA1_NAME FROM PARA1 A (NOLOCK)        
 WHERE PARA1_NAME <> '' AND INACTIVE = 0       
 ORDER BY A.PARA1_NAME       
      
GOTO LAST      
      
LBLGETPARA2LIST:      
      
 SELECT A.PARA2_CODE, A.PARA2_NAME, A.PARA2_ORDER FROM PARA2 A (NOLOCK)        
 WHERE A.PARA2_NAME <> '' AND INACTIVE = 0      
 ORDER BY A.PARA2_ORDER, A.PARA2_NAME     
      
GOTO LAST      
      
LBLGETPARA3LIST:      
      
 SELECT A.PARA3_CODE, A.PARA3_NAME FROM PARA3 A     
 WHERE A.PARA3_NAME <> '' AND INACTIVE = 0      
 ORDER BY A.PARA3_NAME      
      
GOTO LAST      
      
LBLGETPARA4LIST:      
      
 SELECT PARA4_CODE, PARA4_NAME FROM PARA4 (NOLOCK)    
 WHERE PARA4_NAME <> '' AND INACTIVE = 0       
 ORDER BY PARA4_NAME      
      
GOTO LAST      
      
LBLGETPARA5LIST:      
      
 SELECT PARA5_CODE, PARA5_NAME FROM PARA5 (NOLOCK)    
 WHERE PARA5_NAME <> ''   AND INACTIVE = 0    
 ORDER BY PARA5_NAME      
      
GOTO LAST      
      
LBLGETPARA6LIST:      
      
 SELECT PARA6_CODE, PARA6_NAME FROM PARA6 (NOLOCK)    
 WHERE PARA6_NAME <> ''   AND INACTIVE = 0    
 ORDER BY PARA6_NAME      
      
GOTO LAST      
      
LBLCUSTOMER:      
      
 SET   @cHEAD_CODE =  DBO.FN_ACT_TRAVTREE ('0000000018') ----ADD VARIABLE BY GAURI ON 17/4/2019  
   
 SELECT  A.AC_CODE, A.AC_NAME, ISNULL(E.CREDIT_DAYS, 0) AS CREDIT_DAYS,      
    ISNULL(E.DISCOUNT_PERCENTAGE, 0) AS DISCOUNT_PERCENTAGE, CITY, E.ADDRESS0 + ' ' +      
    E.ADDRESS1 + ' ' + E.ADDRESS2 + ' ' + AREA_NAME + ' ' + CITY + ' ' +      
    STATE + ' ' + E.MOBILE + ' ' AS SUPP_ADDRESS, AC_NAME AS REPCOLNAME      
    FROM LM01106 A  (NOLOCK)             
    JOIN LMP01106 E (NOLOCK) ON A.AC_CODE=E.AC_CODE  
 JOIN AREA B (NOLOCK) ON B.AREA_CODE=E.AREA_CODE  
 JOIN CITY C (NOLOCK) ON C.CITY_CODE=B.CITY_CODE  
 JOIN STATE D (NOLOCK) ON D.STATE_CODE=C.STATE_CODE  
    WHERE ( CHARINDEX ( HEAD_CODE,@cHEAD_CODE) > 0     ----REPLACE VARIABLE FROM FUNCTION BY GAURI ON 17/4/2019   
    OR ALLOW_CREDITOR_DEBTOR = 1 )   AND ISNULL(A.AC_NAME,'')<>''          
    AND A.INACTIVE = 0 AND A.AC_CODE <> '0000000000' AND A.HEAD_CODE = '0000000018'      
      
GOTO LAST      
      
LBLCUST:  
  SELECT  A.CUSTOMER_CODE,A.USER_CUSTOMER_CODE, (CASE WHEN A.CUSTOMER_TITLE <> '' THEN A.CUSTOMER_TITLE ELSE ISNULL(P.PREFIX_NAME,'') END ) AS CUSTOMER_TITLE,  
  A.CUSTOMER_FNAME +' '+ A.CUSTOMER_LNAME AS CUSTOMER_NAME ,   
  0 AS CREDIT_DAYS,0 AS DISCOUNT_PERCENTAGE,CITY,      
  A.ADDRESS1 + ' ' + A.ADDRESS2 + ' ' + AREA_NAME + ' ' + CITY + ' ' +      
  STATE + ' ' + A.MOBILE + ' ' AS CUST_ADDRESS, A.CUSTOMER_FNAME +' '+ A.CUSTOMER_LNAME AS REPCOLNAME ,  
  A.REF_CUSTOMER_CODE     
  FROM CUSTDYM A (NOLOCK)             
  JOIN AREA B (NOLOCK) ON A.AREA_CODE=B.AREA_CODE  
  JOIN CITY C (NOLOCK) ON C.CITY_CODE=B.CITY_CODE  
  JOIN STATE D (NOLOCK) ON D.STATE_CODE=C.STATE_CODE  
  LEFT OUTER JOIN  PREFIX P (NOLOCK) ON A.PREFIX_CODE= P.PREFIX_CODE  
  WHERE A.INACTIVE = 0 AND  A.CUSTOMER_CODE <> '000000000000'  
GOTO LAST     
  
LBLARTICLELIST:      
     
  SELECT  A.ARTICLE_CODE, A.ARTICLE_NO, A.ARTICLE_NAME ,       
       B.SUB_SECTION_NAME,B.SUB_SECTION_CODE,C.SECTION_CODE, C.SECTION_NAME,A.DT_CREATED   
       ,A.CODING_SCHEME   ,A.PARA1_SET,A.PARA2_SET,A.ALIAS AS ARTICLE_ALIAS      
  FROM ARTICLE A (NOLOCK)     
  JOIN SECTIOND B (NOLOCK) ON A.SUB_SECTION_CODE = B.SUB_SECTION_CODE        
  JOIN SECTIONM C (NOLOCK)  ON B.SECTION_CODE = C.SECTION_CODE     
  WHERE A.ARTICLE_NO <> '' AND A.ARTICLE_TYPE =1 AND ARTICLE_PRD_MODE <> 3  AND A.INACTIVE =0  AND A.ORDERITEM=1    
  AND ISNULL(C.ITEM_TYPE,1)=1   
  
  --UNION ALL  
  --SELECT  A.ARTICLE_CODE, A.ALIAS AS [ARTICLE_NO], A.ARTICLE_NAME ,       
  --     B.SUB_SECTION_NAME,B.SUB_SECTION_CODE,C.SECTION_CODE, C.SECTION_NAME,A.DT_CREATED   
  --     ,A.CODING_SCHEME   ,A.PARA1_SET,A.PARA2_SET,A.ALIAS AS ARTICLE_ALIAS      
  --FROM ARTICLE A (NOLOCK)     
  --JOIN SECTIOND B (NOLOCK) ON A.SUB_SECTION_CODE = B.SUB_SECTION_CODE        
  --JOIN SECTIONM C (NOLOCK)  ON B.SECTION_CODE = C.SECTION_CODE    
  --WHERE A.ARTICLE_TYPE =1 AND ARTICLE_PRD_MODE <> 3  AND A.INACTIVE =0   
  --ORDER BY ARTICLE_NO    
                                      
GOTO LAST      
      
LBLARTICLEINFO:      
      
      
    
     
 SELECT A.ARTICLE_CODE, A.ARTICLE_DESC, A.ARTICLE_NAME,     
         A.ARTICLE_NO, A.CODING_SCHEME,      
   A.PURCHASE_PRICE, A.MRP, A.WHOLESALE_PRICE AS WS_PRICE, A.CREATED_ON,     
         A.PARA1_SET, A.PARA2_SET, B.UOM_CODE,B.UOM_NAME, B.UOM_TYPE,A.DT_CREATED,  
         A.ALIAS AS ARTICLE_ALIAS,HSN_CODE      
         FROM ARTICLE A (NOLOCK)       
 JOIN UOM B (NOLOCK)  ON A.UOM_CODE = B.UOM_CODE      
 WHERE A.ARTICLE_TYPE =1 AND ARTICLE_PRD_MODE <> 3 AND  A.ARTICLE_CODE = @CWHERE  AND  A.INACTIVE =0     
     
      
GOTO LAST      
      
LBLFORMNAME:      
      
 SELECT FORM_ID, FORM_NAME, TAX_PERCENTAGE FROM FORM  (NOLOCK)        
 WHERE FORM_NAME <> ''       
 ORDER BY FORM_NAME      
       
GOTO LAST      
      
LBLARTICLESKUINFO:      
      
 SELECT TOP 1 A.PARA1_CODE, A.PARA2_CODE, A.PARA3_CODE, A.PARA4_CODE, A.PARA5_CODE,       
    A.PARA6_CODE, P1.PARA1_NAME, P2.PARA2_NAME, P3.PARA3_NAME, P4.PARA4_NAME,       
    P5.PARA5_NAME, P6.PARA6_NAME, ART.DT_CREATED AS [ART_DT_CREATED],       
    P3.DT_CREATED AS [PARA3_DT_CREATED],ISNULL(A.DT_CREATED,'''') AS [SKU_DT_CREATED],  
    ART.ALIAS AS ARTICLE_ALIAS       
    FROM SKU A (NOLOCK)       
    JOIN ARTICLE ART (NOLOCK)  ON ART.ARTICLE_CODE= A.ARTICLE_CODE       
    JOIN PARA1 P1(NOLOCK)  ON A.PARA1_CODE = P1.PARA1_CODE       
    JOIN PARA2 P2(NOLOCK)  ON A.PARA2_CODE = P2.PARA2_CODE       
    JOIN PARA3 P3(NOLOCK)  ON A.PARA3_CODE = P3.PARA3_CODE       
    JOIN PARA4 P4(NOLOCK)  ON A.PARA4_CODE = P4.PARA4_CODE       
    JOIN PARA5 P5(NOLOCK)  ON A.PARA5_CODE = P5.PARA5_CODE       
    JOIN PARA6 P6(NOLOCK)  ON A.PARA6_CODE = P6.PARA6_CODE       
    WHERE A.ARTICLE_CODE = @CWHERE      
          
GOTO LAST      
      
LBLARTICLEPARA2LIST:      
     
  SELECT DISTINCT A.ARTICLE_CODE, A.PARA2_CODE, B.PARA2_NAME,B.PARA2_ORDER  ,A.MRP,A.WS_PRICE  
  FROM ART_DET A (NOLOCK)       
  JOIN PARA2 B (NOLOCK)  ON A.PARA2_CODE = B.PARA2_CODE      
  WHERE A.ARTICLE_CODE = @CWHERE       
  ORDER BY B.PARA2_ORDER      
     
       
GOTO LAST      
      
LBLARTICLEPARA1LIST:      
  SELECT DISTINCT A.ARTICLE_CODE, A.PARA1_CODE, B.PARA1_NAME       
  FROM ART_PARA1 A (NOLOCK)       
  JOIN PARA1 B (NOLOCK)  ON A.PARA1_CODE = B.PARA1_CODE    
  WHERE A.ARTICLE_CODE = @CWHERE        
  ORDER BY B.PARA1_NAME       
      
GOTO LAST      
      
LBLPOLIST:      
      
 SET @CCMD = N'SELECT 0 AS SRNO, LM.AC_NAME, A.CHECKED_BY, A.DISCOUNT_AMOUNT, A.ORDER_DT, A.ORDER_ID,       
                      A.ORDER_NO,  A.REMARKS, A.SUBTOTAL, A.TOTAL_AMOUNT,       
                       SUM(B.QUANTITY) AS QUANTITY      
               FROM WSL_ORDER_MST A (NOLOCK)       
               JOIN LM01106 LM (NOLOCK) ON A.AC_CODE = LM.AC_CODE      
               JOIN WSL_ORDER_DET B (NOLOCK) ON A.ORDER_ID = B.ORDER_ID      
               WHERE A.CANCELLED = 0'+  @CWHERE +      
               'GROUP BY LM.AC_NAME, A.CHECKED_BY, A.DISCOUNT_AMOUNT, A.ORDER_DT, A.ORDER_ID, A.ORDER_NO, A.REMARKS,       
               A.SUBTOTAL, A.TOTAL_AMOUNT ORDER BY A.ORDER_NO'      
 PRINT @CCMD      
 EXECUTE SP_EXECUTESQL @CCMD      
      
GOTO LAST       
    
    
      
LBLGETREPORTSUMMARY:      
  
     DECLARE @QRY NVARCHAR(MAX), @CASHMODE VARCHAR(100),@TEMP_NAME VARCHAR(100),@AMOUNT NUMERIC(18,2)  
      
    IF OBJECT_ID ('TEMPDB..#TEMP_AMT_DET','U' ) IS NOT NULL   
       DROP TABLE #TEMP_AMT_DET   
         
         SELECT DISTINCT A.ORDER_ID  
      INTO  #TEMP_AMT_DET  
   FROM  WSL_ORDER_DET  A (NOLOCK)  
   JOIN WSL_ORDER_MST  B (NOLOCK) ON A.ORDER_ID =B.ORDER_ID   
   JOIN  
  (  
          SELECT CMD.PRODUCT_CODE,CMM.CUSTOMER_CODE  
   FROM CMM01106 CMM(NOLOCK)  
   JOIN CMD01106 CMD(NOLOCK) ON CMM.CM_ID=CMD.CM_ID  
   WHERE CMM.CANCELLED=0 AND ISNULL(CMD.PRODUCT_CODE,'')<>'' AND CMD.QUANTITY>0  
        ) SLS ON  SLS.PRODUCT_CODE=(CASE WHEN A.ORDER_TYPE=1 THEN A.REF_PRODUCT_CODE ELSE A.PRODUCT_CODE END)  
  AND SLS.CUSTOMER_CODE=B.CUSTOMER_CODE  
  WHERE   
  A.ORDER_ID = @CWHERE  AND  
  ISNULL(A.CANCELLED,0) =0  AND B.CANCELLED=0  
  
         IF OBJECT_ID ('TEMPDB..#TEMP_AMT_DET1','U' ) IS NOT NULL   
        DROP TABLE #TEMP_AMT_DET1   
             
         SELECT  GM.PAYMODE_GRP_CODE, --MM.PAYMODE_NAME,  
  'ZZ'+REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(CASE WHEN GM.PAYMODE_GRP_NAME='01. CURRENCY' THEN '01_CASH_AMOUNT'  
                                                       WHEN GM.PAYMODE_GRP_NAME='02. CREDIT/DEBIT CARDS' THEN '02_CC_AMOUNT'   
                                                            ELSE GM.PAYMODE_GRP_NAME END  
    ,' ','_'),'/','_'),'\','_'),'-','_'),'.','') AS COLUMN_NAME,SUM(AMOUNT) AS AMT  
   
   INTO #TEMP_AMT_DET1   
   FROM PAYMODE_XN_DET PP   
   JOIN PAYMODE_MST MM ON PP.PAYMODE_CODE = MM.PAYMODE_CODE   
   JOIN CMM01106 CMM ON CMM.CM_ID = PP.MEMO_ID   
   JOIN CMD01106 CMD ON CMM.CM_ID = CMD.CM_ID   
   JOIN  
  (  
   SELECT A.ORDER_ID, A.ORDER_TYPE , A.PRODUCT_CODE,B.CUSTOMER_CODE,A.REF_PRODUCT_CODE FROM WSL_ORDER_DET A (NOLOCK)  
   JOIN WSL_ORDER_MST B (NOLOCK) ON A.ORDER_ID =B.ORDER_ID   
   WHERE ISNULL(A.CANCELLED,0) =0  AND B.CANCELLED=0      
     ) ORD ON ORD.CUSTOMER_CODE =CMM.CUSTOMER_CODE   
       AND CMD.PRODUCT_CODE=(CASE WHEN ORD.ORDER_TYPE=1 THEN ORD.REF_PRODUCT_CODE ELSE ORD.PRODUCT_CODE END)  
   --JOIN SKU_BO SKU ON SKU.PRODUCT_CODE =CMD.PRODUCT_CODE  
   JOIN PAYMODE_GRP_MST GM ON GM.PAYMODE_GRP_CODE = MM.PAYMODE_GRP_CODE  
   WHERE PP.XN_TYPE ='SLS' AND ORD.ORDER_ID =@CWHERE  
   AND CMM.CANCELLED=0  
      GROUP BY GM.PAYMODE_GRP_CODE,GM.PAYMODE_GRP_NAME  
        
        
        
        IF CURSOR_STATUS('GLOBAL','CURR') IN (0,1)    
    BEGIN    
       CLOSE CURR    
       DEALLOCATE CURR    
    END  
      
    DECLARE CURR CURSOR FOR   
    SELECT * FROM #TEMP_AMT_DET1 ORDER BY COLUMN_NAME  
    OPEN CURR  
    FETCH NEXT FROM CURR INTO @CASHMODE,@TEMP_NAME,@AMOUNT  
    WHILE @@FETCH_STATUS =0  
    BEGIN  
      SET @QRY = N'ALTER TABLE #TEMP_AMT_DET ADD ['+@TEMP_NAME+'] NUMERIC(18,4)'  
      PRINT @QRY  
      EXEC SP_EXECUTESQL @QRY   
       
      SET @QRY = N' UPDATE #TEMP_AMT_DET SET ['+@TEMP_NAME+'] = '''+STR(@AMOUNT)+''''  
      PRINT @QRY  
      EXEC SP_EXECUTESQL @QRY   
     FETCH NEXT FROM CURR INTO @CASHMODE,@TEMP_NAME,@AMOUNT   
    END  
    CLOSE CURR  
    DEALLOCATE CURR   

	
	if object_id ('tempdb..#tmpmeasurement','u') is not null
	   drop table #tmpmeasurement

	  SELECT a.row_id, D.M_NAME+'-'+B.MEASURMENT AS MEASURMENT_NAME ,B.MEASURMENT ,B.PREV_MEASURE, B.TMD_ROW_ID,d.M_CODE AS ATTRIBUTE_CODE  
	  into #tmpmeasurement
	   FROM WSL_ORDER_DET (NOLOCK) A  
	   JOIN TDD01106 (NOLOCK) B ON B.TMD_ROW_ID = A.ROW_ID
	   JOIN MEASUREMENT_MST (NOLOCK) D ON B.attribute_code=D.M_CODE
	   WHERE D.INACTIVE = 0  
	   and a.order_id=@CWHERE
	   -- and a.order_id='1201120000001212000002'
      
  
  
    SET @CCMD =   N'SELECT DISTINCT T1.ORDER_DT,T1.ORDER_NO,T1.TAX_AMOUNT,T1.TAX_PERCENTAGE,T2.AC_NAME,T1.TOTAL_AMOUNT,   
     T1.FREIGHT AS FREIGHT,T1.OTHER_CHARGES AS OTHER_CHARGES,T1.DISCOUNT_AMOUNT AS MST_DISCOUNT_AMOUNT,        
     T1.SUBTOTAL AS AMOUNT_WO_TAX,PARA1.PARA1_NAME,PARA2.PARA2_NAME,PARA2.PARA2_ORDER,PARA3.PARA3_NAME, 
     PARA4.PARA4_NAME,PARA5.PARA5_NAME,PARA6.PARA6_NAME, UOM.UOM_NAME,  
     T3.*,T1.PAYMENT_DETAILS,SECTIOND.SUB_SECTION_NAME,SECTIONM.SECTION_NAME,ARTICLE.ARTICLE_NO,    
     T3.QUANTITY AS QTY  ,COM.COMPANY_CODE    
     ,T1.TRAIL_DT,T1.DELIVERY_DT  ,T2.ADDRESS0,T2.ADDRESS1,T2.ADDRESS2,T2.AREA_NAME,T2.CITY,T2.STATE,T2.PINCODE,  
     CUST.USER_CUSTOMER_CODE,CUST.CUSTOMER_FNAME,CUST.CUSTOMER_LNAME,  
     CUST.MOBILE  AS CUST_MOBILE ,CUST.ADDRESS1 AS CUST_ADDRESS1  
	 , CUST.ADDRESS2 AS CIST_ADDRESS2  ,ar.AREA_name AS CUST_AREA   
	 ,CUST.PIN AS CUST_PIN  
	 ,ct.CITY AS CUST_CITY  
	 ,st.STATE AS CUST_STATE  
	 ,rg.REGION_NAME AS CUST_REGION_NAME ,   
	  ARTICLE.DT_CREATED, EMP.EMP_NAME,T1.REF_NO,ISNULL(ADV.AMOUNT,0) AS AMOUNT,  
	  ARTICLE.ALIAS AS ARTICLE_ALIAS,D.ATTRIBUTE_NAME ,D.MEASURMENT ,D.PREV_MEASURE,  
	  BOM.PRODUCT_CODE AS PRODUCT_CODE_BOM,BOM.CONS_QTY_PER_PICE AS CONSUMPTION_QTY_BOM,  
	   LOC.DEPT_NAME, LOC.AREA_NAME AS LOC_AREA_NAME,LOC.CITY As LOC_CITY ,LOC.STATE AS LOC_STATE ,
	   LOC.ADDRESS1 AS LOC_ADDRESS1 ,LOC.ADDRESS2 As LOC_ADDRESS2 ,LOC.PINCODE  AS LOC_PINCODE,LOC.PHONE AS LOC_PHONE, 
	  TEMP.*  ,mv.MEASURMENT_VALUE,T1.REMARKS as Bill_remarks,img.prod_image
     FROM WSL_ORDER_MST T1        
     JOIN LMV01106 T2 ON T1.AC_CODE = T2.AC_CODE     
     JOIN custdym CUST (nolock) ON T1.CUSTOMER_CODE = CUST.CUSTOMER_CODE     
	 JOIN AREA ar (nolock) ON Ar.AREA_CODE = CUST.AREA_CODE   
	 JOIN CITY Ct (nolock) ON ar.CITY_CODE = Ct.CITY_CODE   
	 JOIN STATE st (nolock) ON st.STATE_CODE = ct.STATE_CODE  
	 JOIN REGIONM rg ON rg.REGION_CODE = st.REGION_CODE
     JOIN WSL_ORDER_DET T3 ON T3.ORDER_ID = T1.ORDER_ID AND ISNULL(T3.CANCELLED,0)=0     
     LEFT OUTER JOIN WSL_ORDER_BOM BOM ON BOM.REF_ROW_ID = T3.ROW_ID      
     JOIN ARTICLE ON ARTICLE.ARTICLE_CODE = T3.ARTICLE_CODE        
     JOIN SECTIOND ON SECTIOND.SUB_SECTION_CODE= ARTICLE.SUB_SECTION_CODE        
     JOIN SECTIONM ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE        
     JOIN PARA1 ON PARA1.PARA1_CODE = T3.PARA1_CODE        
     JOIN PARA2 ON PARA2.PARA2_CODE = T3.PARA2_CODE        
     JOIN PARA3 ON PARA3.PARA3_CODE = T3.PARA3_CODE   
     LEFT JOIN PARA4 (NOLOCK) ON PARA4.PARA4_CODE = T3.PARA4_CODE  
     LEFT JOIN PARA5 (NOLOCK) ON PARA5.PARA5_CODE = T3.PARA5_CODE  
     LEFT JOIN PARA6 (NOLOCK) ON PARA6.PARA6_CODE = T3.PARA6_CODE  
     JOIN UOM (NOLOCK) ON UOM.UOM_CODE=ARTICLE.UOM_CODE
     LEFT JOIN #TEMP_AMT_DET TEMP ON TEMP.ORDER_ID=T1.ORDER_ID    
     LEFT OUTER JOIN COMPANY COM ON 1=1 AND COM.COMPANY_CODE=''01''    
	 LEFT OUTER JOIN LOC_NAMES LOC ON T1.location_code= LOC.dept_id
     LEFT OUTER JOIN   
     (  
      SELECT B.ORDER_ID,SUM(C.AMOUNT) AS AMOUNT  
      FROM  WSL_ORDER_ADV_RECEIPT B   
      LEFT OUTER JOIN ARC01106 C ON B.ADV_REC_ID = C.ADV_REC_ID  
      GROUP BY B.ORDER_ID  
  )  ADV ON T1.ORDER_ID = ADV.ORDER_ID   
    
  LEFT OUTER JOIN    
 (  
   SELECT B.TMD_ROW_ID,C.ATTRIBUTE_CODE,C.ATTRIBUTE_NAME ,B.MEASURMENT ,B.PREV_MEASURE    
   FROM ATTRM (NOLOCK) C     
   JOIN TDD01106 (NOLOCK) B ON   C.ATTRIBUTE_CODE = B.ATTRIBUTE_CODE    
   JOIN WSL_ORDER_DET (NOLOCK) A ON B.TMD_ROW_ID = A.ROW_ID    
   WHERE C.ATTRIBUTE_TYPE = 5 AND C.INACTIVE = 0   
    
  ) D     
    ON T3.ROW_ID = D.TMD_ROW_ID       
  left outer join 
  (
  
	SELECT 	A.ROW_ID ,
	 MEASURMENT_VALUE=(SELECT STUFF((SELECT CASE WHEN ISNULL(MEASURMENT_NAME,'''') <> '''' THEN '' , '' ELSE '''' END +MEASURMENT_NAME FROM #TMPMEASUREMENT  B  WHERE A.row_id  =B.row_id 
	 GROUP BY MEASURMENT_NAME  FOR XML PATH('''')),1,2,''''))  					 
	FROM #TMPMEASUREMENT A
	group by A.ROW_ID
  ) mv on mv.row_id =t3.row_id
  LEFT OUTER JOIN EMPLOYEE EMP ON T1.SALE_EMP_CODE = EMP.EMP_CODE     
  Left JOIN SKU_NAMES SN (NOLOCK) ON SN.PRODUCT_CODE=T3.PRODUCT_CODE
  LEFT OUTER JOIN ' + DB_NAME()+ '_IMAGE..IMAGE_INFO IMG (NOLOCK) ON IMG.IMG_ID=sn.barcode_img_id    
     WHERE T1.CANCELLED = 0  AND T1.ORDER_ID='''+@CWHERE+'''         
     --GROUP BY T1.ORDER_DT,T1.ORDER_NO,T1.TAX_AMOUNT,T1.TAX_PERCENTAGE,T2.AC_NAME,T1.TOTAL_AMOUNT,T1.SUBTOTAL'        
     PRINT @CCMD        
     EXECUTE SP_EXECUTESQL @CCMD         
      
      
      
      
     GOTO LAST     
      
      
LBLGETBOLIST:      
      
 SELECT * FROM WSL_ORDER_MST      
       
 GOTO LAST      
    
LBLGETARTICLEINFO:    
 DECLARE @NCOUNT INT       
 SET @NCOUNT = 0     
    
     
 SELECT @NCOUNT = COUNT(*) FROM ART_DET A      
 WHERE A.ARTICLE_CODE = @CARTICLECODE AND A.PARA2_CODE = @CPARA2CODE      
         
 PRINT @NCOUNT      
         
 IF ( @NCOUNT > 0 )       
         
          
      SELECT TOP 1 A.PURCHASE_PRICE, A.MRP, A.WS_PRICE FROM ART_DET A       
      WHERE A.ARTICLE_CODE = @CARTICLECODE AND A.PARA2_CODE = @CPARA2CODE      
        
 ELSE      
        
    SELECT TOP 1 A.PURCHASE_PRICE, A.MRP, A.WHOLESALE_PRICE AS WS_PRICE    
    FROM  ARTICLE A     
    WHERE A.ARTICLE_CODE = @CARTICLECODE      
GOTO LAST  
  
LBLMEASUREMENTDET:   
 SET @CCMD = N'SELECT CONVERT(BIT,1) AS BILLCHECK,B.TMD_ROW_ID,C.ORDER_NO,C.M_CODE AS ATTRIBUTE_CODE,C.M_NAME AS ATTRIBUTE_NAME  
     --,C.ATTRIBUTE_GROUP   
     ,B.*  
  FROM MEASUREMENT_MST (NOLOCK) C   
  JOIN TDD01106 (NOLOCK) B ON   C.M_CODE = B.ATTRIBUTE_CODE  
  JOIN WSL_ORDER_DET (NOLOCK) A ON B.TMD_ROW_ID = A.ROW_ID  
  WHERE   
   A.ORDER_ID = '''+@CMEMOID+''''  
    
  IF @NNAVMODE = 1  
  BEGIN  
   SET @CCMD = @CCMD + N' UNION  
   SELECT CONVERT(BIT,CASE WHEN ISNULL(D.TMD_ROW_ID,'''') = '''' THEN 0 ELSE 1 END ) AS BILLCHECK,  
   A.ROW_ID AS TMD_ROW_ID,C.ORDER_NO,  
   C.M_CODE AS ATTRIBUTE_CODE,C.M_NAME AS ATTRIBUTE_NAME--,C.ATTRIBUTE_GROUP  
   ,B.*  
   FROM WSL_ORDER_DET (NOLOCK) A   
   LEFT OUTER JOIN TDD01106 (NOLOCK) B ON B.TMD_ROW_ID = A.ROW_ID AND 1=2  
   CROSS JOIN MEASUREMENT_MST (NOLOCK) C   
   LEFT OUTER JOIN  
    (SELECT B.TMD_ROW_ID,C.M_CODE   
     FROM MEASUREMENT_MST (NOLOCK) C   
     JOIN TDD01106 (NOLOCK) B ON   C.M_CODE = B.ATTRIBUTE_CODE  
     JOIN WSL_ORDER_DET (NOLOCK) A ON B.TMD_ROW_ID = A.ROW_ID  
     WHERE --C.ATTRIBUTE_TYPE = 5 AND   
     C.INACTIVE = 0  
     AND A.ORDER_ID = '''+@CMEMOID+''' ) D   
     ON A.ROW_ID = D.TMD_ROW_ID AND C.M_CODE = D.M_CODE  
   WHERE --C.ATTRIBUTE_TYPE = 5 AND   
   --C.INACTIVE = 0  AND   
   A.ORDER_ID = '''+@CMEMOID+''' AND   
   CONVERT(BIT,CASE WHEN ISNULL(D.TMD_ROW_ID,'''') = '''' THEN 0 ELSE 1 END ) = 0'  
  END  
    
 PRINT @CCMD        
    EXECUTE SP_EXECUTESQL @CCMD       
  
GOTO LAST  
LBLMEASUREMENTADD:  --CHANGE MADE ON --15-10-2019


  IF EXISTS (SELECT TOP 1 'U' FROM  ARTICLE_MEASUREMENTS WHERE ARTICLE_CODE=@CARTICLECODE )
  BEGIN
	  SELECT CONVERT(BIT,0) AS BILLCHECK,'' AS TMD_ROW_ID,D.ORDER_NO,C.M_CODE AS ATTRIBUTE_CODE,  
	  D.M_NAME AS ATTRIBUTE_NAME ,B.*  
	  FROM ARTICLE_MEASUREMENTS (NOLOCK) C   
	  JOIN MEASUREMENT_MST (NOLOCK) D ON C.M_CODE=D.M_CODE  
	  LEFT OUTER JOIN TDD01106 (NOLOCK) B ON   C.M_CODE = B.ATTRIBUTE_CODE    
	  WHERE D.INACTIVE = 0 AND   
	  C.ARTICLE_CODE=@CARTICLECODE   
	  ORDER BY D.ORDER_NO  
  END
  ELSE
  BEGIN
	  SELECT CONVERT(BIT,0) AS BILLCHECK,'' AS TMD_ROW_ID,D.ORDER_NO,D.M_CODE AS ATTRIBUTE_CODE,  
	  D.M_NAME AS ATTRIBUTE_NAME ,B.*  
	  FROM MEASUREMENT_MST (NOLOCK) D   
	  LEFT JOIN ARTICLE_MEASUREMENTS (NOLOCK) C ON C.M_CODE=D.M_CODE  
	  LEFT OUTER JOIN TDD01106 (NOLOCK) B ON   C.M_CODE = B.ATTRIBUTE_CODE    
	  WHERE D.INACTIVE = 0 
	 -- AND  C.ARTICLE_CODE=@CARTICLECODE   
	  ORDER BY D.ORDER_NO 
  END
GOTO LAST  
  
LBLGETLINKADV:  
 SELECT CONVERT(BIT,0) AS CHK, A.ORDER_ID,B.ADV_REC_ID,C.AMOUNT,A.ORDER_NO,C.ADV_REC_NO ,A.CUSTOMER_CODE,A.AC_CODE   
 FROM WSL_ORDER_MST A (NOLOCK)  
 JOIN WSL_ORDER_ADV_RECEIPT B (NOLOCK) ON A.ORDER_ID = B.ORDER_ID   
 JOIN ARC01106 C (NOLOCK) ON B.ADV_REC_ID = C.ADV_REC_ID   
 WHERE A.CANCELLED = 1 AND (A.CUSTOMER_CODE = @CWHERE OR A.AC_CODE = @CWHERE )  
  
 UNION ALL  
  
 SELECT CONVERT(BIT,0) AS CHK,'' AS ORDER_ID,C.ADV_REC_ID,C.AMOUNT,'' AS ORDER_NO,C.ADV_REC_NO ,C.CUSTOMER_CODE,C.AC_CODE   
 FROM ARC01106 C (NOLOCK)  
 LEFT OUTER JOIN WSL_ORDER_ADV_RECEIPT B (NOLOCK) ON C.ADV_REC_ID = B.ADV_REC_ID  
 WHERE C.ARCT<> 1 AND C.CANCELLED = 0 AND  ISNULL(B.ADV_REC_ID,'') = '' AND (C.CUSTOMER_CODE = @CWHERE OR C.AC_CODE = @CWHERE )  
GOTO LAST  
  
LBLGETSALEPERSON:  
 SELECT * FROM EMPLOYEE WHERE EMP_CODE <> '0000000' AND INACTIVE = 0  
GOTO LAST  
  
LBLBOMDET:  
  SELECT A.*,D.QUANTITY,A.CONS_QTY_PER_PICE * D.QUANTITY AS TOTAL_QTY,ART.ARTICLE_NO,S.MRP   
  FROM WSL_ORDER_BOM A (NOLOCK)   
  JOIN WSL_ORDER_DET D (NOLOCK) ON A.REF_ROW_ID = D.ROW_ID  
  JOIN WSL_ORDER_MST M (NOLOCK) ON D.ORDER_ID = M.ORDER_ID   
  JOIN SKU S (NOLOCK) ON S.PRODUCT_CODE = A.PRODUCT_CODE  
  JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE = S.ARTICLE_CODE   
  WHERE M.ORDER_ID = @CMEMOID  
      
GOTO LAST  
  
LBLBOMPRODUCTDET:  
  SELECT TOP 1 A.PRODUCT_CODE,A.ARTICLE_CODE,ART.ARTICLE_NO, ART.DT_CREATED AS [ART_DT_CREATED],   
  P3.DT_CREATED AS [PARA3_DT_CREATED],ISNULL(A.DT_CREATED,'') AS [SKU_DT_CREATED],A.WS_PRICE,A.PURCHASE_PRICE,  
  A.MRP,ART.ARTICLE_TYPE,ART.ALIAS AS ARTICLE_ALIAS    
  FROM SKU A (NOLOCK)   
  JOIN ARTICLE (NOLOCK) ART ON ART.ARTICLE_CODE= A.ARTICLE_CODE   
  JOIN PARA1 (NOLOCK) P1 ON A.PARA1_CODE = P1.PARA1_CODE   
  JOIN PARA2 (NOLOCK) P2 ON A.PARA2_CODE = P2.PARA2_CODE   
  JOIN PARA3 (NOLOCK) P3 ON A.PARA3_CODE = P3.PARA3_CODE   
  JOIN PARA4 (NOLOCK) P4 ON A.PARA4_CODE = P4.PARA4_CODE   
  JOIN PARA5 (NOLOCK) P5 ON A.PARA5_CODE = P5.PARA5_CODE   
  JOIN PARA6 (NOLOCK) P6 ON A.PARA6_CODE = P6.PARA6_CODE   
  WHERE A.PRODUCT_CODE =  @CWHERE AND ART.ARTICLE_TYPE = 2  
GOTO LAST  
  
LBLGETTRIALDATA:  
  
 SELECT  DISTINCT 0 AS CHK_SMS,A.ORDER_NO,A.ORDER_ID,CONVERT(VARCHAR(15),A.ORDER_DT,105) AS ORDER_DT,A.REF_NO  
 ,CONVERT(VARCHAR(15),A.TRAIL_DT,105) AS TRIAL_DT  
 ,(CASE WHEN A.AC_CODE='0000000000'   
 THEN (C.CUSTOMER_FNAME + ' ' + ISNULL(C.CUSTOMER_LNAME,'')) ELSE B.AC_NAME END) AS CUSTOMER_NAME  
 ,CONVERT(VARCHAR(15),A.DELIVERY_DT,105) AS DELIVERY_DT   
 FROM WSL_ORDER_MST A   
 JOIN WSL_ORDER_DET  DET ON A.ORDER_ID =DET.ORDER_ID   
 JOIN LMV01106 B ON A.AC_CODE = B.AC_CODE   
 --JOIN SKU_BO SBO ON SBO.ORDER_ID = A.ORDER_ID  
 JOIN CUSTDYM C ON A.CUSTOMER_CODE = C.CUSTOMER_CODE   
 LEFT OUTER JOIN  
 (  
  SELECT CMD.PRODUCT_CODE,CMM.CUSTOMER_CODE  
   FROM CMM01106 CMM(NOLOCK)  
   JOIN CMD01106 CMD(NOLOCK) ON CMM.CM_ID=CMD.CM_ID  
   WHERE CMM.CANCELLED=0 AND ISNULL(CMD.PRODUCT_CODE,'')<>'' AND CMD.QUANTITY>0  
    ) SLS ON  SLS.PRODUCT_CODE=(CASE WHEN A.ORDER_TYPE=1 THEN DET.REF_PRODUCT_CODE ELSE DET.PRODUCT_CODE END)  
  AND SLS.CUSTOMER_CODE=A.CUSTOMER_CODE  
 WHERE A.CANCELLED = 0 AND ISNULL(DET.CANCELLED,0)=0   
 AND A.APPROVED=1   
 AND SLS.PRODUCT_CODE IS NULL  
 AND CONVERT(VARCHAR(15),TRAIL_DT,101) <= @DTWHERE  
   
    GOTO LAST  
    
LBLGETDELIVERYDATA:  
   
  SELECT DISTINCT  0 AS CHK_SMS,A.ORDER_NO,A.ORDER_ID,CONVERT(VARCHAR(15),A.ORDER_DT,105) AS ORDER_DT,A.REF_NO  
 ,CONVERT(VARCHAR(15),A.TRAIL_DT,105) AS TRIAL_DT  
 ,(CASE WHEN A.AC_CODE='0000000000'   
 THEN (C.CUSTOMER_FNAME + ' ' + ISNULL(C.CUSTOMER_LNAME,'')) ELSE B.AC_NAME END) AS CUSTOMER_NAME  
 ,CONVERT(VARCHAR(15),A.DELIVERY_DT,105) AS DELIVERY_DT   
 FROM WSL_ORDER_MST A   
 JOIN WSL_ORDER_DET  DET ON A.ORDER_ID =DET.ORDER_ID   
 JOIN LMV01106 B ON A.AC_CODE = B.AC_CODE   
 --JOIN SKU_BO SBO ON SBO.ORDER_ID = A.ORDER_ID  
 JOIN CUSTDYM C ON A.CUSTOMER_CODE = C.CUSTOMER_CODE   
 LEFT OUTER JOIN  
 (  
  SELECT CMD.PRODUCT_CODE,CMM.CUSTOMER_CODE  
   FROM CMM01106 CMM(NOLOCK)  
   JOIN CMD01106 CMD(NOLOCK) ON CMM.CM_ID=CMD.CM_ID  
   WHERE CMM.CANCELLED=0 AND ISNULL(CMD.PRODUCT_CODE,'')<>'' AND CMD.QUANTITY>0  
    ) SLS ON  SLS.PRODUCT_CODE=(CASE WHEN A.ORDER_TYPE=1 THEN DET.REF_PRODUCT_CODE ELSE DET.PRODUCT_CODE END)  
  AND SLS.CUSTOMER_CODE=A.CUSTOMER_CODE  
 WHERE A.CANCELLED = 0  AND ISNULL(DET.CANCELLED,0)=0  
 AND A.APPROVED=1  
 AND SLS.PRODUCT_CODE  IS NULL   
 AND CONVERT(VARCHAR(15),DELIVERY_DT,101) <= @DTWHERE  
  
 GOTO LAST  
LBLGETIMGDETAILS:  
    DECLARE @DTCREATED VARCHAR(100)  
    IF  (SELECT TOP 1 'U' FROM SKU WHERE PRODUCT_CODE =@CWHERE ) IS NOT NULL  
    BEGIN  
        SELECT TOP 1 @DTCREATED=DT_CREATED  FROM SKU WHERE PRODUCT_CODE=@CWHERE  
        IF ISNULL(@DTCREATED,'')=''  
        BEGIN  
        SET @DTCREATED=(SELECT CONVERT(VARCHAR,GETDATE(),112))  
        UPDATE SKU SET DT_CREATED=@DTCREATED WHERE PRODUCT_CODE=@CWHERE   
        END  
         SELECT @DTCREATED AS DT_CREATED  
    END  
    ELSE   
    BEGIN  
     SET @DTCREATED=(SELECT CONVERT(VARCHAR,GETDATE(),112))  
      INSERT SKU ( PARA2_CODE, LAST_UPDATE, PURCHASE_PRICE, PARA3_CODE, INV_DT, INV_NO, AC_CODE, RECEIPT_DT, PARA4_CODE, PARA5_CODE, PARA6_CODE, FORM_ID, MRP, DT_CREATED, WS_PRICE, IMAGE_NAME, TAX_AMOUNT, CHALLAN_NO, FIX_MRP, PRODUCT_NAME, PRODUCT_CODE, ARTICLE_CODE, PARA1_CODE, ER_FLAG,  UPLOADED_TO_ACTIVSTREAM, BARCODE_CODING_SCHEME, EMP_CODE )    
      SELECT TOP 1 B.PARA2_CODE, LAST_UPDATE=GETDATE(), PURCHASE_PRICE=GROSS_WSP, B.PARA3_CODE  
      , INV_DT='1900-01-01', INV_NO='', AC_CODE, RECEIPT_DT=GETDATE(), B.PARA4_CODE, B.PARA5_CODE, B.PARA6_CODE  
      , FORM_ID='0000000', MRP, DT_CREATED=@DTCREATED, WS_PRICE, IMAGE_NAME='', TAX_AMOUNT, CHALLAN_NO=''  
      , FIX_MRP, PRODUCT_NAME='', PRODUCT_CODE, ART.ARTICLE_CODE, B.PARA1_CODE, ER_FLAG=1,   
       UPLOADED_TO_ACTIVSTREAM=0, BARCODE_CODING_SCHEME=CODING_SCHEME , A.EMP_CODE   
      FROM WSL_ORDER_MST A (NOLOCK)  
      JOIN WSL_ORDER_DET B (NOLOCK) ON A.ORDER_ID=B.ORDER_ID AND B.CANCELLED =0 AND B.ORDER_TYPE =0  
      JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =B.ARTICLE_CODE   
      WHERE A.CANCELLED =0 AND B.PRODUCT_CODE =@CWHERE  
        
     SELECT @DTCREATED AS DT_CREATED  
    END    
    IF ISNULL(@DTCREATED,'')=''  
    SELECT 'INVALID BARCODE' AS ERROR  
       
   GOTO LAST     
  
LAST:     
    
END  