CREATE PROCEDURE SP3S_PRINTDEBITNOTE_GST  
(  
 @CXN_TYPE VARCHAR(10)='',  
 @CXN_ID VARCHAR(100)='',  
 @MODE INT=0--0=SINGLE /1=MULTIPLE  
)  
AS  
BEGIN  
  SET NOCOUNT ON       
  DECLARE @DTSQL VARCHAR(MAX),@CCOLNAME VARCHAR(MAX),@CERRMSG VARCHAR(100),@NCALQTYSUM NUMERIC(10,3),  
          @NSTOREDQTY NUMERIC(10,3),@CSTEP VARCHAR(10),@MRR_EXISTS BIT,@BATCH VARCHAR(10) ,@NSHIPPING_MODE INT 
  
  set @CSTEP=2
 

  SET @CERRMSG=''  
  SET @CSTEP=5  
  SET @MRR_EXISTS=0  
  SET @CXN_TYPE=LTRIM(RTRIM(@CXN_TYPE))  
  IF @CXN_TYPE!='PRT'        
     RETURN  
       
    
  SELECT @BATCH=BATCH_NO ,@NSHIPPING_MODE=SHIPPING_MODE FROM RMM01106 (NOLOCK) WHERE RM_ID=@CXN_ID      
  SET @BATCH=LTRIM(RTRIM(ISNULL(@BATCH,'')))  
  IF @BATCH='' SET @BATCH='"'  
  IF @MODE=0  
  SET @BATCH='"'  
    
  BEGIN TRY  
    IF @CXN_TYPE='PRT'  
    BEGIN         
    SET @CSTEP=10             
    IF OBJECT_ID ('TEMPDB..#TRANSPORTER','U') IS NOT NULL  
       DROP TABLE #TRANSPORTER  
       
    SELECT A.PARCEL_MEMO_ID ,  
      ANGM.ANGADIA_NAME AS TRANSPORTER_NAME,  
     A.BILTY_NO AS BILTY_NO,
     A.RECEIPT_DT AS BILTY_DT,  
     b.BOX_NO AS BOX_NO,  
     SUM(QTY) AS WGHT,  
     b.REF_MEMO_ID AS XN_ID,  
     A.VEHICLE_NO  
    INTO #TRANSPORTER  
    FROM PARCEL_MST A  
    JOIN PARCEL_DET B ON A.PARCEL_MEMO_ID =B.PARCEL_MEMO_ID   
    LEFT OUTER JOIN ANGM ON ANGM.ANGADIA_CODE =A.ANGADIA_CODE   
    WHERE A.XN_TYPE =@CXN_TYPE AND b.REF_MEMO_ID=@CXN_ID  
    GROUP BY ANGM.ANGADIA_NAME ,A.PARCEL_MEMO_ID ,A.BILTY_NO,A.RECEIPT_DT ,b.REF_MEMO_ID,A.VEHICLE_NO,b.BOX_NO  
    
    SET @CSTEP=15  
    ;WITH CTE AS   
    (  
      SELECT PARCEL_MEMO_ID, SR=ROW_NUMBER () OVER (ORDER BY PARCEL_MEMO_ID)   
      FROM #TRANSPORTER  
    )  
    DELETE FROM CTE WHERE SR>1  


	 IF OBJECT_ID('TEMPDB..#TMPSHIPPING') IS NOT NULL  
       DROP TABLE #TMPSHIPPING  

	CREATE TABLE #TMPSHIPPING(SHIPPING_AC_NAME VARCHAR(100),SHIPPING_ADDRESS VARCHAR(500),SHIPPING_ADDRESS2 VARCHAR(500),SHIPPING_ADDRESS3 VARCHAR(500),
	                          SHIPPING_AREA_CODE VARCHAR(20),SHIPPING_AREA_NAME VARCHAR(100),SHIPPING_CITY_NAME VARCHAR(100),SHIPPING_STATE_NAME VARCHAR(100),
							  SHIPPING_PIN VARCHAR(10))

     IF ISNULL(@NSHIPPING_MODE,0) IN(0,3)
	 BEGIN
	      
		  INSERT INTO #TMPSHIPPING(SHIPPING_AC_NAME,SHIPPING_ADDRESS,SHIPPING_ADDRESS2,SHIPPING_ADDRESS3,SHIPPING_AREA_CODE,SHIPPING_AREA_NAME,SHIPPING_CITY_NAME,SHIPPING_STATE_NAME,SHIPPING_PIN)
		       SELECT TOP 1 LM.AC_NAME AS SHIPPING_AC_NAME,LM.ADDRESS0 AS  SHIPPING_ADDRESS,LM.ADDRESS1 AS SHIPPING_ADDRESS2,LM.ADDRESS2 AS SHIPPING_ADDRESS3,
							LM.AREA_CODE SHIPPING_AREA_CODE,LM.AREA_NAME SHIPPING_AREA_NAME,LM.CITY SHIPPING_CITY_NAME,LM.STATE SHIPPING_STATE_NAME,LM.PINCODE  SHIPPING_PIN
			   FROM RMM01106 A (NOLOCK)
			   JOIN LMV01106 LM (NOLOCK) ON A.SHIPPING_AC_CODE=LM.AC_CODE
			   WHERE A.RM_ID=@CXN_ID
	  END
	  ELSE IF ISNULL(@NSHIPPING_MODE,0)=2
	  BEGIN
	      
		  INSERT INTO #TMPSHIPPING(SHIPPING_AC_NAME,SHIPPING_ADDRESS,SHIPPING_ADDRESS2,SHIPPING_ADDRESS3,SHIPPING_AREA_CODE,SHIPPING_AREA_NAME,SHIPPING_CITY_NAME,SHIPPING_STATE_NAME,SHIPPING_PIN)
		       SELECT TOP 1 LM.AC_NAME AS SHIPPING_AC_NAME,LM.ADDRESS0 AS  SHIPPING_ADDRESS,LM.ADDRESS1 AS SHIPPING_ADDRESS2,LM.ADDRESS2 AS SHIPPING_ADDRESS3,
							LM.AREA_CODE SHIPPING_AREA_CODE,LM.AREA_NAME SHIPPING_AREA_NAME,LM.CITY SHIPPING_CITY_NAME,LM.STATE SHIPPING_STATE_NAME,LM.PINCODE  SHIPPING_PIN
			   FROM RMM01106 A (NOLOCK)
			   JOIN LMV01106 LM (NOLOCK) ON A.ac_code =LM.AC_CODE
			   WHERE A.RM_ID=@CXN_ID
	  END
	  ELSE IF ISNULL(@NSHIPPING_MODE,0)=1
	  BEGIN
	      
		  INSERT INTO #TMPSHIPPING(SHIPPING_AC_NAME,SHIPPING_ADDRESS,SHIPPING_ADDRESS2,SHIPPING_ADDRESS3,SHIPPING_AREA_CODE,SHIPPING_AREA_NAME,SHIPPING_CITY_NAME,SHIPPING_STATE_NAME,SHIPPING_PIN)
		       SELECT TOP 1 '' AS SHIPPING_AC_NAME,A.SHIPPING_ADDRESS ,A.SHIPPING_ADDRESS2 ,A.SHIPPING_ADDRESS3 ,
							A.SHIPPING_AREA_CODE ,A.SHIPPING_AREA_NAME ,A.SHIPPING_CITY_NAME ,A.SHIPPING_STATE_NAME ,A.SHIPPING_PIN 
			   FROM RMM01106 A (NOLOCK)
			   WHERE A.RM_ID=@CXN_ID
	  END

    
    SET @CSTEP=20   
    IF OBJECT_ID('TEMPDB..#DATASET1') IS NOT NULL  
       DROP TABLE #DATASET1  
    DECLARE @DEBIT_TOTAL_MRP DECIMAL(20,2)=0  
    SELECT @DEBIT_TOTAL_MRP=SUM(QUANTITY*sku.mrp)  
    FROM RMD01106 (NOLOCK)
	join sku (nolock) on rmd01106 .product_code =sku.product_code 
	WHERE RM_ID=@CXN_ID  
          
          SELECT CASE WHEN ISNULL(RMM.ACCOUNTS_DEPT_ID ,'')<>'' THEN RMM.ACCOUNTS_DEPT_ID ELSE RMM.location_Code  END as DEPT_ID,
          l.Dept_Print_Name as COMPANY_NAME  
          ,L.ADDRESS1--CMP.ADDRESS1  
          ,L.ADDRESS2--CMP.ADDRESS2  
          ,CLOC.CITY--CMP.CITY  
          ,PHONES_FAX=CASE LEN(ISNULL(l.phone,'')) WHEN 0 THEN '' ELSE 'TEL: '+REPLACE(l.phone,'TEL','') END  
          ,TIN_NO=CASE LEN(ISNULL(l.TIN_NO,'')) WHEN 0 THEN '' ELSE 'TIN: '+l.TIN_NO END  
          ,TAN_NO=CASE LEN(ISNULL(l.TAN_NO,'')) WHEN 0 THEN '' ELSE 'TIN: '+l.TAN_NO END  
    ,CIN=CASE LEN(ISNULL(CMP.CIN,'')) WHEN 0 THEN '' ELSE 'CIN: '+CMP.CIN END  
    ,CMP.LOGO_PATH  
    ,LOC_GST_NO=CASE LEN(ISNULL(L.LOC_GST_NO,'')) WHEN 0 THEN '' ELSE 'GSTIN: '+L.LOC_GST_NO END  
    ,CAST(0 AS NUMERIC(10,2)) AS REVERSE_CHARGES  
    --,(SELECT TOP 1 CAPTION FROM GST_XN_CAPTION WHERE XN_TYPE=@CXN_TYPE)+' NO: '+RMM.RM_NO AS RM_NO  
    --,(SELECT TOP 1 CAPTION FROM GST_XN_CAPTION WHERE XN_TYPE=@CXN_TYPE)+' DT: '+CONVERT(VARCHAR,RMM.RM_DT,105) AS RM_DT  
    ,'MEMO NO: '+RMM.RM_NO AS RM_NO  
    ,'MEMO DT: '+CONVERT(VARCHAR,RMM.RM_DT,105) AS RM_DT  
    ,ISNULL(LS.GST_STATE_NAME,'') AS LOC_GST_STATE_NAME  
    ,LS.GST_STATE_CODE AS LOC_GST_STATE_CODE  
    ,'RECEIVER:- '+CASE WHEN MODE=1 THEN LM.AC_NAME ELSE TL.DEPT_NAME END   
    +CASE (SELECT TOP 1 ISNULL(IS_PARTY_ALIAS,0) FROM GST_COMPANY_CONFIG WHERE XN_TYPE='PRT')  
       WHEN 0 THEN ''   
    ELSE CASE WHEN MODE=1 THEN ISNULL('-'+LM.ALIAS,'') ELSE ISNULL('-'+TL.DEPT_ALIAS,'') END  
     END  
    AS PARTY_NAME  
       
          --05 AUG 2017  
     --,CASE WHEN MODE=1 THEN RTRIM(LTRIM(LMP.ADDRESS0+' '+LMP.ADDRESS1+' '+LMP.ADDRESS2+' '+CUSAR.AREA_NAME +' '+CUSCT.CITY+' '+CUSAR.PINCODE ))   
    --                 ELSE RTRIM(LTRIM(TL.ADDRESS1+' '+TL.ADDRESS2+' '+' '+TLAR.AREA_NAME+TLCT .CITY+' '+TLAR .PINCODE))    
    --END AS PARTY_ADDRESS  
          ,CASE WHEN MODE=1  
    THEN CASE LEN(ISNULL(LMP.ADDRESS0,'')) WHEN 0 THEN '' ELSE RTRIM(LTRIM(ISNULL(LMP.ADDRESS0,''))) END  
    ELSE CASE LEN(ISNULL(TL.ADDRESS1,'')) WHEN 0 THEN '' ELSE RTRIM(LTRIM(TL.ADDRESS1)) END  
        END  
     AS PARTY_ADDRESS1  
        
       ,CASE WHEN MODE=1  
    THEN CASE LEN(ISNULL(LMP.ADDRESS1,'')) WHEN 0 THEN '' ELSE RTRIM(LTRIM(ISNULL(LMP.ADDRESS1,''))) END  
    ELSE CASE LEN(ISNULL(TL.ADDRESS2,'')) WHEN 0 THEN '' ELSE RTRIM(LTRIM(TL.ADDRESS2)) END  
     END  
     AS PARTY_ADDRESS2  
  
       ,CASE WHEN MODE=1  
    THEN CASE LEN(ISNULL(LMP.ADDRESS2,'')) WHEN 0 THEN '' ELSE RTRIM(LTRIM(ISNULL(LMP.ADDRESS2,''))) END  
    ELSE ''--CASE LEN(ISNULL(TL.ADDRESS1,'')) WHEN 0 THEN '' ELSE 'RECEIVER: '+RTRIM(LTRIM(TL.ADDRESS1))  
     END  
     AS PARTY_ADDRESS3  
              
       ,CASE WHEN MODE=1  
         THEN RTRIM(LTRIM(CASE RIGHT(RTRIM(ISNULL(CUSAR.AREA_NAME,'')),1)  
    WHEN ','   
         THEN LEFT(ISNULL(CUSAR.AREA_NAME,''),LEN(ISNULL(CUSAR.AREA_NAME,''))-1)  
                ELSE ISNULL(CUSAR.AREA_NAME,'')  
     END  
     +CASE LEN(ISNULL(CUSCT.CITY,'')) WHEN 0 THEN '' ELSE ', ' END  
     +ISNULL(CUSCT.CITY,'')  
     +CASE LEN(ISNULL(CUSAR.PINCODE,'')) WHEN 0 THEN '' ELSE ', ' END+CUSAR.PINCODE))  
           ELSE RTRIM(LTRIM(ISNULL(TLAR.AREA_NAME,'')+CASE LEN(ISNULL(TLCT.CITY,'')) WHEN 0 THEN '' ELSE ', ' END+ISNULL(TLCT.CITY,'')+CASE LEN(ISNULL(TLAR.PINCODE,''))  WHEN 0 THEN '' ELSE ', ' END+TLAR.PINCODE))  
   END  
     +CASE WHEN ISNULL(LMP.MOBILE,'')<>'' OR ISNULL(LMP.PHONES_R,'')<>'' OR ISNULL(LMP.PHONES_O,'')<>'' OR ISNULL(LMP.PHONES_FAX,'')<>''  
          THEN ' ;PHONE- '   
     ELSE ''   
            END  
     +CASE WHEN ISNULL(LMP.PHONES_O,'')<>'' THEN ISNULL(LMP.PHONES_O,'') ELSE '' END  
     +CASE WHEN ISNULL(LMP.PHONES_R,'')<>'' THEN CASE WHEN ISNULL(LMP.PHONES_O,'')<>'' THEN '/' ELSE '' END+ISNULL(LMP.PHONES_R,'') ELSE '' END  
     +CASE WHEN ISNULL(LMP.PHONES_FAX,'')<>'' THEN CASE WHEN ISNULL(LMP.PHONES_O,'')<>'' OR ISNULL(LMP.PHONES_R,'')<>'' THEN '/' ELSE '' END+ISNULL(LMP.PHONES_FAX,'') ELSE '' END  
     +CASE WHEN ISNULL(LMP.MOBILE,'')<>'' THEN CASE WHEN ISNULL(LMP.PHONES_O,'')<>'' OR ISNULL(LMP.PHONES_R,'')<>''  OR ISNULL(LMP.PHONES_FAX,'')<>'' THEN '/' ELSE '' END+ISNULL(LMP.MOBILE,'') ELSE '' END  
     AS PARTY_CITY  
     --05 AUG 2017  
       
    ,CASE WHEN MODE=1 THEN LMP.AC_GST_NO ELSE TL.LOC_GST_NO END AS PARTY_GST_NO  
    ,ISNULL(CASE WHEN MODE=1 THEN CS.GST_STATE_NAME ELSE TS.GST_STATE_NAME END,'') AS PARTY_STATE_NAME  
    ,ISNULL(CASE WHEN MODE=1 THEN CS.GST_STATE_CODE ELSE TS.GST_STATE_CODE END,'') AS PARTY_STATE_CODE  
    ,ISNULL(TR.TRANSPORTER_NAME,'') AS TRANSPORTER_NAME  
    ,ISNULL(TR.BILTY_NO,'') AS BILTY_NO  
    ,ISNULL(TR.BILTY_DT,'') AS BILTY_DT  
    ,ISNULL(BOX_NO,0) AS BOX_NO  
    ,ISNULL(WGHT,0) AS WGHT  
    ,ISNULL(TR.VEHICLE_NO,'') AS VEHICLE_NO  
    ,CASE WHEN RMM.CANCELLED =1 THEN 'CANCELLED' ELSE '' END AS CANCELLED  
      
    --'TAX INVOICE' AS INVOICE_TYPE,--25 JUL 2017  
    --,(SELECT TOP 1 CAPTION FROM GST_XN_CAPTION WHERE XN_TYPE='PRT')AS INVOICE_TYPE--05 AUG 2017--COMMENTED ON 12 APR 2018  
    --ADDED ON 12 APR 2018  
    ,CASE ISNULL(COM.TITLE_DEBIT_NOTE,'') WHEN '' THEN (SELECT TOP 1 CAPTION FROM GST_XN_CAPTION WHERE XN_TYPE='PRT')  
            ELSE COM.TITLE_DEBIT_NOTE   
     END AS INVOICE_TYPE     
    --ADDED ON 12 APR 2018  
      
    ,ISNULL(LS.UT,0) AS UT  
    ,(SELECT TOP 1 ISNULL(IS_ENABLED,0) FROM GST_TNC WHERE XN_TYPE=@CXN_TYPE)AS PRINT_TERM  

	
    ,ISNULL(SHLM.SHIPPING_AC_NAME ,'') AS SHIPPING_AC_NAME
    ,ISNULL(SHLM.SHIPPING_ADDRESS,'') AS SHIPPING_ADDRESS  
    ,ISNULL(SHLM.SHIPPING_ADDRESS2,'') AS SHIPPING_ADDRESS2  
    ,ISNULL(SHLM.SHIPPING_ADDRESS3,'') AS SHIPPING_ADDRESS3  
    ,ISNULL(SHLM.SHIPPING_AREA_CODE,'') AS SHIPPING_AREA_CODE  
    ,ISNULL(SHLM.SHIPPING_AREA_NAME,'') AS SHIPPING_AREA_NAME  
    ,ISNULL(SHLM.SHIPPING_CITY_NAME,'') AS SHIPPING_CITY_NAME  
    ,ISNULL(SHLM.SHIPPING_STATE_NAME,'') AS SHIPPING_STATE_NAME  
    ,ISNULL(SHLM.SHIPPING_PIN,'') AS SHIPPING_PIN  

    ,ISNULL(L.REGISTERED_ADD,'')REGISTERED_ADDRESS  
    ,ISNULL(RMM.REMARKS,'')REMARKS  
    --14 JUL 2017  
    ,COM.LOGO AS LOGO  
    ,COM.NAME AS NAME  
    ,COM.ADDRESS1 AS PRINT_ADDRESS1  
    ,COM.TELEPHONE1 AS TELEPHONE1  
    ,COM.CIN_NO AS CIN_NO  
    ,COM.DATE_WITH_TIME AS DATE_WITH_TIME  
    ,COM.MRP AS PRINT_MRP  
    ,COM.MD_PER AS PRINT_MD_PER  
    ,COM.GROSS_PP AS PRINT_GROSS_PP  
     --15 JUL 2017  
    ,ISNULL((SELECT SUM(XN_VALUE_WITHOUT_GST) FROM RMD01106 (NOLOCK) WHERE RM_ID=@CXN_ID),0)  
     --22 AUG 2017  
     +ISNULL(RMM.FREIGHT,0)  
     +ISNULL(RMM.OTHER_CHARGES,0)  
     --22 AUG 2017  
    AS [TAXABLEVALUE]  
          ,ISNULL((SELECT SUM(CGST_AMOUNT) FROM RMD01106 (NOLOCK) WHERE RM_ID=@CXN_ID),0)  
           +ISNULL(RMM.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(RMM.FREIGHT_CGST_AMOUNT,0)  
          AS [CGSTAMOUNT]  
          ,ISNULL((SELECT SUM(SGST_AMOUNT) FROM RMD01106 (NOLOCK) WHERE RM_ID=@CXN_ID),0)  
           +ISNULL(RMM.OTHER_CHARGES_SGST_AMOUNT,0)+ISNULL(RMM.FREIGHT_SGST_AMOUNT,0)   
          AS [SGSTAMOUNT]  
          ,ISNULL((SELECT SUM(IGST_AMOUNT) FROM RMD01106 (NOLOCK) WHERE RM_ID=@CXN_ID),0)  
           +ISNULL(RMM.OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(RMM.FREIGHT_IGST_AMOUNT,0)  
          AS [IGSTAMOUNT]  
          ,ISNULL(RMM.FREIGHT,0) AS FREIGHT  
          ,ISNULL(RMM.OTHER_CHARGES,0) AS OTHER_CHARGE  
    ,ISNULL(RMM.TOTAL_AMOUNT,0) AS NETAMOUNT  
    ,ISNULL(RMM.ROUND_OFF,0) AS ROUND_OFF  
    --17 JUL 2017  
    ,ISNULL((SELECT SUM(CGST_AMOUNT+SGST_AMOUNT+IGST_AMOUNT) FROM RMD01106 (NOLOCK) WHERE RMD01106.RM_ID=@CXN_ID),0)  
     +ISNULL(RMM.OTHER_CHARGES_IGST_AMOUNT,0)  
     +ISNULL(RMM.OTHER_CHARGES_CGST_AMOUNT,0)  
     +ISNULL(RMM.OTHER_CHARGES_SGST_AMOUNT,0)  
     +ISNULL(RMM.FREIGHT_IGST_AMOUNT,0)  
     +ISNULL(RMM.FREIGHT_CGST_AMOUNT,0)  
     +ISNULL(RMM.FREIGHT_SGST_AMOUNT,0)  
    AS [GSTCOLLECTION]  
    --03 FEB 2018  
    ,(SELECT TOP 1 ISNULL(PRINT_AUTHORIZED_SIGNATURE,0) FROM GST_COMPANY_CONFIG WHERE XN_TYPE=@CXN_TYPE)PRINT_AUTHORIZED_SIGNATURE    
          --06 FEB 2018  
    ,ISNULL(COM.TOP_MARGIN,0.01) TOP_MARGIN  
    ,ISNULL(COM.BOTTOM_MARGIN,0.25) BOTTOM_MARGIN  
    ,ISNULL(COM.LEFT_MARGIN,0.30) LEFT_MARGIN  
    ,ISNULL(COM.RIGHT_MARGIN,0.25) RIGHT_MARGIN  
    --08 FEB 2018  
    ,ISNULL((SELECT TOP 1 PRINT_COPIES FROM GST_SLS_CUSTOMER_CONFIG (NOLOCK) WHERE XN_TYPE=@CXN_TYPE),1)AS PRINT_COPIES  
    --27 FEB 2018  
    ,ISNULL(COM.PRINT_REF_NO_PRT,0) AS PRINT_REF_NO  
    --12 MAR 2018  
    ,ISNULL(COM.TOTAL_MRP,0)AS PRINT_TOTAL_MRP  
    ,'TOTAL MRP: '+CAST(@DEBIT_TOTAL_MRP AS VARCHAR(50))AS TOTAL_MRP  
    --27 MAR 2018  
    ,ISNULL(COM.PRINT_PUR_DIS_PER,0)PRINT_PUR_DIS_PER  
    ,ISNULL(COM.PRINT_DIS_PER,1)PRINT_DIS_PER  
    ,ISNULL(COM.RATE_PRT,1)RATE_PRT  
    --17 APR 2018  
    ,CAST(CASE ISNULL(RMM.OTHER_CHARGES,0)+ISNULL(RMM.FREIGHT,0) WHEN 0 THEN 0 ELSE 1 END AS BIT)AS PRINT_OH  
    ,CAST(1 AS BIT) AS PRINT_HSN_SUMMARY  
    --EWAY BILL ASKED TO PRINT : 31 AUG 2018 08-2364  
    ,ISNULL(RMM.ROUTE_FORM1,'')EWAY_NO1  
    ,ISNULL(RMM.ROUTE_FORM1,'')EWAY_NO2 
    ,ISNULL(LMV.AC_NAME,'') BROKER_NAME ,
	LMV.MOBILE,
	Total_Gst_Cess_Amount ,RMM.ROUTE_FORM1,RMM.ROUTE_FORM2
    INTO #DATASET1  
       FROM RMM01106 RMM (NOLOCK)    
       JOIN GST_COMPANY_CONFIG COM (NOLOCK) ON 1=1 AND XN_TYPE=@CXN_TYPE  
    LEFT JOIN COMPANY CMP (NOLOCK) ON CMP.COMPANY_CODE='01'    
    LEFT OUTER JOIN LOCATION L (NOLOCK) ON L.DEPT_ID =CASE WHEN ISNULL(RMM.ACCOUNTS_DEPT_ID ,'')<>'' THEN RMM.ACCOUNTS_DEPT_ID ELSE RMM.location_Code  END
    LEFT OUTER JOIN AREA ALOC(NOLOCK) ON ALOC.AREA_CODE=L.AREA_CODE  
    LEFT OUTER JOIN CITY CLOC(NOLOCK) ON ALOC.CITY_CODE=CLOC.CITY_CODE  
    LEFT JOIN GST_STATE_MST LS (NOLOCK) ON LS.GST_STATE_CODE =L.GST_STATE_CODE  
    LEFT JOIN LMP01106 LMP (NOLOCK) ON LMP.AC_CODE=RMM.AC_CODE 
    LEFT JOIN LMV01106 LMV (NOLOCK) ON LMV.AC_CODE=LMP.BROKER_AC_CODE     
    LEFT JOIN GST_STATE_MST CS (NOLOCK) ON CS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE  
    LEFT JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE=LMP.AC_CODE    
    LEFT JOIN AREA CUSAR (NOLOCK) ON LMP.AREA_CODE=CUSAR.AREA_CODE    
    LEFT JOIN CITY CUSCT (NOLOCK) ON CUSAR.CITY_CODE=CUSCT.CITY_CODE   
    LEFT OUTER JOIN LOCATION TL (NOLOCK) ON TL.DEPT_ID=RMM.PARTY_DEPT_ID   
    LEFT JOIN AREA TLAR (NOLOCK) ON TL.AREA_CODE=TLAR.AREA_CODE    
    LEFT JOIN CITY TLCT (NOLOCK) ON TLAR.CITY_CODE=TLCT.CITY_CODE   
    LEFT JOIN GST_STATE_MST TS (NOLOCK) ON TS.GST_STATE_CODE=TL.GST_STATE_CODE  
    LEFT OUTER JOIN #TRANSPORTER TR ON TR.XN_ID=RMM.RM_ID  
	LEFT JOIN #TMPSHIPPING SHLM (NOLOCK) ON 1=1

    WHERE RMM.RM_ID=@CXN_ID-- OR RMM.BATCH_NO=@BATCH  
    
    SET @CSTEP=25   
      
    UPDATE #DATASET1 SET   
     ADDRESS1=REPLACE(ADDRESS1,'(WC)','')  
    ,ADDRESS2=REPLACE(ADDRESS2,'(WC)','')  
    ,CITY=REPLACE(CITY,'(WC)','')  
    ,PARTY_ADDRESS1=REPLACE(PARTY_ADDRESS1,'(WC)','')  
    ,PARTY_ADDRESS2=REPLACE(PARTY_ADDRESS2,'(WC)','')  
    ,PARTY_ADDRESS3=REPLACE(PARTY_ADDRESS3,'(WC)','')  
    ,PARTY_CITY=REPLACE(PARTY_CITY,'(WC)','')  
    
    
    SET @CSTEP=30   
    SELECT *   
   ,V.DEPT_ID LOC_COMP_ID  
   ,V.ADDRESS1 LOC_COMP_ADD1  
   ,V.ADDRESS2 LOC_COMP_ADD2  
   ,V.TAN_NO LOC_COMP_TANNO  
   ,V.PAN_NO LOC_COMP_PANNO  
   ,V.TIN_NO LOC_COMP_TINNO  
   ,V.CITY LOC_COMP_CITY   
   ,V.PINCODE LOC_COMP_PINCODE  
   ,V.[STATE] LOC_COMP_STATE  
   ,V.PHONE LOC_COMP_PHONE  
   ,V.dept_name LOC_COMP_NAME  
       FROM #DATASET1   
       JOIN (  
      SELECT L.DEPT_ID,ADDRESS1,ADDRESS2,TAN_NO,PAN_NO,TIN_NO,C.CITY,A.PINCODE,S.STATE,L.PHONE,l.dept_name    
   FROM LOCATION L    
   LEFT JOIN AREA A ON A.AREA_CODE=L.AREA_CODE    
   LEFT JOIN CITY C ON A.CITY_CODE=C.CITY_CODE    
   LEFT JOIN STATE S ON S.STATE_CODE=C.STATE_CODE    
    )V ON V.dept_id=#DATASET1.DEPT_ID
  
    
    SET @CSTEP=40   
          --04 AUG 2017     
    SELECT @CCOLNAME=ISNULL(@CCOLNAME+'+','  ')+'ISNULL('+SOURCENAME+'.'+QUOTENAME(COLUMNNAME) +','''')+'+''''+COLUMNSEPARATOR+''''+' '  
    FROM GST_XN_DETAIL    
    WHERE XN_TYPE =@CXN_TYPE AND ISVISIBLE=1  
    ORDER BY DISPLAYORDER  
    --04 AUG 2017   
    SET @CCOLNAME=LTRIM(RTRIM(@CCOLNAME))  
      
          IF RIGHT(@CCOLNAME,4)='+'''+(SELECT TOP 1 COLUMNSEPARATOR FROM GST_XN_DETAIL WHERE XN_TYPE =@CXN_TYPE AND ISVISIBLE=1)+''''  
             SET @CCOLNAME=LEFT(@CCOLNAME,LEN(@CCOLNAME)-4)  
    PRINT @CCOLNAME  

	 IF EXISTS (SELECT TOP 1 'U'  FROM GST_XN_DETAIL WHERE XN_TYPE ='PRT' AND ISVISIBLE=1 AND COLUMNNAME ='PRODUCT_CODE') 
    BEGIN              
     SET @CCOLNAME=REPLACE (@CCOLNAME,'SKU.[PRODUCT_CODE]','LEFT(SKU.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX (''@'',SKU.[PRODUCT_CODE])-1,-1),LEN(SKU.[PRODUCT_CODE] )))')                          
    END  
    
    SET @CSTEP=50   
    IF OBJECT_ID ('TEMPDB..#TMPDETAILS','U') IS NOT NULL  
       DROP TABLE #TMPDETAILS  
          SELECT ROW_NUMBER() OVER (ORDER BY AUTO_SRNO) AS SR_NO,  CAST('' AS VARCHAR(MAX)) AS PARTICULARS ,  
           A.HSN_CODE,UOM.UOM_NAME,  
        CAST(A.QUANTITY AS NUMERIC(10,2)) AS QUANTITY,  
        A.RATE,  
                 CAST(A.QUANTITY*A.RATE AS NUMERIC(12,2)) AS AMOUNT,  
                 CAST((A.QUANTITY*A.RATE )-ISNULL(XN_VALUE_WITHOUT_GST,0) AS NUMERIC(12,2)) AS LESS_DISCOUNT,  
                 --24 JUL 2017  
                 CAST(A.QUANTITY AS NUMERIC(10,2)) AS DISCOUNT_PER,  
                 --24 JUL 2017  
                 CAST(ISNULL(XN_VALUE_WITHOUT_GST,0) AS NUMERIC(12,2)) AS TAXABLE_VALUE,  
                 CAST(CASE WHEN A.IGST_AMOUNT<>0 THEN A.GST_PERCENTAGE ELSE 0 END AS NUMERIC(12,0)) AS IGST_RATE ,  
                 A.IGST_AMOUNT,  
                 CAST(CASE WHEN A.CGST_AMOUNT<>0 THEN (A.GST_PERCENTAGE)/2 ELSE 0 END AS NUMERIC(12,1)) AS CGST_RATE ,  
                 A.CGST_AMOUNT,  
                 CAST(CASE WHEN A.SGST_AMOUNT<>0 THEN (A.GST_PERCENTAGE)/2 ELSE 0 END AS NUMERIC(12,1)) AS SGST_RATE ,  
                 A.SGST_AMOUNT,  
                 A.XN_VALUE_WITH_GST AS TOTAL,  
                 B.CN_AMOUNT NET_AMOUNT ,B.ROUND_OFF  --MORE CHANGES IN REPORT URGENT REQUIRED FOR UPDATE CHANGES IN MASTER  
                 --14 JUL 2017  
                 ,B.CN_AMOUNT OTHER_CHARGES  
                 ,B.CN_AMOUNT FREIGHT   
                 --24 JUL 2017  
                 ,A.RM_ID+'/'+CONVERT(VARCHAR,B.RM_DT,105) AS BILL_NO  
				 --24 JUL 2017  

        ,SKU.MRP                    
        ,A.GST_PERCENTAGE AS MD_PER  
        --31 JAN 2018  
        ,CAST('' AS VARCHAR(MAX)) AS [NRVN]  
        ,ISNULL(A.PUR_DISCOUNT_PERCENTAGE,0)PUR_DIS_PER  
        ,B.DISCOUNT_AMOUNT RMM_DISCOUNT  
        ,CAST('' AS VARCHAR)MEMO_ID2  
        ,A.BILL_NO AS GROUP_BILL  
		,sku.VENDOR_EAN_NO
		,a.Gst_Cess_Amount 
		,pur_gross_purchase_price 
		,PUR_DISCOUNT_AMOUNT 
		,A.pur_taxable_value
       INTO #TMPDETAILS            
       FROM RMD01106 A (NOLOCK)  
       JOIN RMM01106 B (NOLOCK) ON  A.RM_ID=B.RM_ID  
       LEFT JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =A.PRODUCT_CODE     
                LEFT JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE =SKU.ARTICLE_CODE      
       LEFT JOIN UOM UOM (NOLOCK) ON UOM.UOM_CODE=ARTICLE.UOM_CODE  
       LEFT OUTER JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE  
       WHERE 1=2  


   
   SET @CSTEP=55 
   IF NOT EXISTS(SELECT * FROM RMD01106(NOLOCK) WHERE RM_ID=@CXN_ID AND ISNULL(MRR_ID,'')='')  
      SET @MRR_EXISTS=1  
   --PRINT CASE @MRR_EXISTS WHEN 1 THEN 'PIM.INV_NO' ELSE 'RMD.BILL_NO' END   
   SET @DTSQL=' INSERT INTO #TMPDETAILS(SR_NO,PARTICULARS,HSN_CODE,UOM_NAME,QUANTITY,RATE,AMOUNT,LESS_DISCOUNT,DISCOUNT_PER,TAXABLE_VALUE,IGST_RATE,IGST_AMOUNT,CGST_RATE,CGST_AMOUNT,SGST_RATE,SGST_AMOUNT,TOTAL,
   NET_AMOUNT,ROUND_OFF,OTHER_CHARGES,FREIGHT,BILL_NO,MRP,MD_PER,[NRVN],PUR_DIS_PER,RMM_DISCOUNT,MEMO_ID2,GROUP_BILL,VENDOR_EAN_NO,Gst_Cess_Amount,pur_gross_purchase_price,PUR_DISCOUNT_AMOUNT,pur_taxable_value)'  
   SET @DTSQL+=' SELECT ROW_NUMBER() OVER (ORDER BY '+ @CCOLNAME+' ) AS SR_NO, '+ @CCOLNAME+' AS PARTICULARS ,  
                 A.HSN_CODE,UOM.UOM_NAME,  
                 SUM(A.QUANTITY) AS QUANTITY,  
                 A.GROSS_PURCHASE_PRICE AS RATE,  
                 CAST(SUM(A.QUANTITY*A.GROSS_PURCHASE_PRICE) AS NUMERIC(12,2))   
                 AS AMOUNT,  
                 --CAST((SUM(A.QUANTITY)*A.PUR_GROSS_PURCHASE_PRICE)-SUM(ISNULL(XN_VALUE_WITHOUT_GST,0)) AS NUMERIC(12,2))   
                 --CAST(SUM(A.DN_DISCOUNT_AMOUNT) AS NUMERIC(12,2))   
                 CAST(SUM(A.DN_DISCOUNT_AMOUNT+ CASE WHEN B.SUBTOTAL>0 THEN ((B.DISCOUNT_AMOUNT/B.SUBTOTAL)*A.GROSS_PURCHASE_PRICE*A.INVOICE_QUANTITY) ELSE 0 END )   AS NUMERIC(12,2)) --PUR_GROSS_PURCHASE_PRICE  
                 AS LESS_DISCOUNT,  
                 --24 JUL 2017  
                 0 AS LESS_DISCOUNT_PER,  
                 --24 JUL 2017  
                 CAST(SUM(ISNULL(A.XN_VALUE_WITHOUT_GST,0)) AS NUMERIC(12,2)) AS TAXABLE_VALUE,  
                 CAST(CASE WHEN SUM(A.IGST_AMOUNT)<>0 THEN  A.GST_PERCENTAGE ELSE 0 END AS NUMERIC(12,0)) AS IGST_RATE ,  
                 CAST(SUM(A.IGST_AMOUNT) AS NUMERIC(12,2)) AS IGST_AMOUNT,  
                 CAST(CASE WHEN SUM(A.CGST_AMOUNT)<>0 THEN  (A.GST_PERCENTAGE)/2 ELSE 0 END AS NUMERIC(12,1)) AS CGST_RATE,  
                 CAST(SUM(A.CGST_AMOUNT) AS NUMERIC(12,2)) AS CGST_AMOUNT,  
                 CAST(CASE WHEN SUM(A.SGST_AMOUNT)<>0 THEN  (A.GST_PERCENTAGE)/2 ELSE 0 END AS NUMERIC(12,1)) AS SGST_RATE,  
                 CAST(SUM(A.SGST_AMOUNT) AS NUMERIC(12,2)) AS SGST_AMOUNT,  
                 CAST(SUM(A.XN_VALUE_WITH_GST) AS NUMERIC(12,2)) AS TOTAL,  
                 --B.NET_AMOUNT   
                 B.TOTAL_AMOUNT  
                 ,B.ROUND_OFF  
              ,CAST(ISNULL(B.OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_SGST_AMOUNT,0) AS NUMERIC(12,2)) AS OTHER_CHARGE  
              ,CAST(ISNULL(B.FREIGHT_IGST_AMOUNT,0)+ISNULL(B.FREIGHT_CGST_AMOUNT,0)+ISNULL(B.FREIGHT_SGST_AMOUNT,0) AS NUMERIC(12,2)) AS FREIGHT  
              ,A.BILL_NO+CASE YEAR(ISNULL(A.BILL_DT,'''')) WHEN 1900 THEN '''' ELSE ''/''+CONVERT(VARCHAR,A.BILL_DT,105) END  
              --03 SEP 2017  
              ,SKU.MRP  
              ,A.DN_DISCOUNT_PERCENTAGE AS MD_PER  
              --31 JAN 2018  
              ,RTRIM(LTRIM(B.RM_NO))+''/''+RTRIM(LTRIM(A.BILL_NO))+''/''+REPLACE(CAST (A.GST_PERCENTAGE AS VARCHAR(10)),''.00'','''') AS [NRVN]  
              --27 MAR 2018  
              ,ISNULL(A.PUR_DISCOUNT_PERCENTAGE,0)PUR_DIS_PER  
              ,B.DISCOUNT_AMOUNT  
              ,B.RM_ID   
              ,A.BILL_NO  
			  ,sku.VENDOR_EAN_NO
			  ,sum(isnull(a.Gst_Cess_Amount ,0))
			  ,a.pur_gross_purchase_price
			  ,sum(PUR_DISCOUNT_AMOUNT*A.QUANTITY) as PUR_DISCOUNT_AMOUNT
			  ,sum(A.pur_taxable_value) as pur_taxable_value
       FROM RMD01106 A (NOLOCK)  
       JOIN RMM01106 B (NOLOCK) ON  A.RM_ID=B.RM_ID  
       LEFT JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =A.PRODUCT_CODE     
       LEFT JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE =SKU.ARTICLE_CODE      
       LEFT JOIN UOM UOM (NOLOCK) ON UOM.UOM_CODE=ARTICLE.UOM_CODE  
       LEFT OUTER JOIN SECTIOND (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE  
       LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE  
       LEFT OUTER JOIN PARA1 ON PARA1.PARA1_CODE=SKU.PARA1_CODE  
       LEFT OUTER JOIN PARA2 ON PARA2.PARA2_CODE=SKU.PARA2_CODE  
       LEFT OUTER JOIN PARA3 ON PARA3.PARA3_CODE=SKU.PARA3_CODE  
       LEFT OUTER JOIN PARA4 ON PARA4.PARA4_CODE=SKU.PARA4_CODE  
       LEFT OUTER JOIN PARA5 ON PARA5.PARA5_CODE=SKU.PARA5_CODE  
       LEFT OUTER JOIN PARA6 ON PARA6.PARA6_CODE=SKU.PARA6_CODE  
       WHERE (B.RM_ID='''+@CXN_ID+''' OR B.BATCH_NO='''+@BATCH+''')'  
       SET @DTSQL+=' GROUP BY '+ @CCOLNAME+',A.HSN_CODE,UOM.UOM_NAME  
       ,A.GROSS_PURCHASE_PRICE    ,a.pur_gross_purchase_price
       ,A.GST_PERCENTAGE ,B.TOTAL_AMOUNT ,B.ROUND_OFF  
    --14 JUL 2017  
       ,CAST(ISNULL(B.OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_SGST_AMOUNT,0) AS NUMERIC(12,2))   
    ,CAST(ISNULL(B.FREIGHT_IGST_AMOUNT,0)+ISNULL(B.FREIGHT_CGST_AMOUNT,0)+ISNULL(B.FREIGHT_SGST_AMOUNT,0) AS NUMERIC(12,2))   
    ,A.BILL_NO+CASE YEAR(ISNULL(A.BILL_DT,'''')) WHEN 1900 THEN '''' ELSE ''/''+CONVERT(VARCHAR,A.BILL_DT,105) END  
    --03 SEP 2017  
    ,SKU.MRP  
    ,A.DN_DISCOUNT_PERCENTAGE  
    --31 JAN 2018  
    ,RTRIM(LTRIM(B.RM_NO))+''/''+RTRIM(LTRIM(A.BILL_NO))+''/''+REPLACE(CAST (A.GST_PERCENTAGE AS VARCHAR(10)),''.00'','''')  
    ,ISNULL(A.PUR_DISCOUNT_PERCENTAGE,0)  
    ,B.DISCOUNT_AMOUNT  
    ,B.RM_ID  
    ,A.BILL_NO  
	,VENDOR_EAN_NO
       ORDER BY '+ @CCOLNAME+''  
   PRINT @DTSQL  
  
   --EXEC SP_EXECUTESQL @DTSQL  
   EXEC(@DTSQL)  

	SET @CSTEP=60 
   UPDATE #TMPDETAILS SET DISCOUNT_PER=CASE ISNULL(RMM_DISCOUNT,0) WHEN 0 THEN MD_PER ELSE ROUND(ISNULL(LESS_DISCOUNT,0)/CASE ISNULL(AMOUNT,0) WHEN 0 THEN 1 ELSE ISNULL(AMOUNT,0) END*100,2) END   
   --24 JUL 2017  
  
   SELECT MEMO_ID2,SR_NO,PARTICULARS,HSN_CODE,UOM_NAME,QUANTITY,RATE,AMOUNT,LESS_DISCOUNT,DISCOUNT_PER,TAXABLE_VALUE,IGST_RATE,  
          IGST_AMOUNT,CGST_RATE,CGST_AMOUNT,SGST_RATE,SGST_AMOUNT,TOTAL ,NET_AMOUNT,ROUND_OFF,OTHER_CHARGES,FREIGHT,BILL_NO,MRP,MD_PER  
          ,[NRVN],GROUP_BILL  ,VENDOR_EAN_NO,Gst_Cess_Amount,pur_gross_purchase_price,PUR_DISCOUNT_AMOUNT,pur_taxable_value,PUR_DIS_PER
   FROM #TMPDETAILS   
   ORDER BY SR_NO   
   
   SET @CSTEP=65   
   SELECT TNC_1,TNC_2,TNC_3,TNC_4,TNC_5,TNC_6   
   FROM GST_TNC WHERE XN_TYPE=@CXN_TYPE  
    
   SELECT --A.MEMO_ID MEMO_ID3,  
   B.PAYMODE_NAME   
   FROM PAYMODE_XN_DET A  
   JOIN PAYMODE_MST B ON A.PAYMODE_CODE=B.PAYMODE_CODE  
   WHERE A.XN_TYPE =@CXN_TYPE   
   AND A.MEMO_ID IN (SELECT RM_ID FROM RMM01106 WHERE (RM_ID=@CXN_ID OR BATCH_NO=@BATCH) AND CANCELLED=0)  
   GROUP BY --A.MEMO_ID,  
   B.PAYMODE_NAME  
   ORDER BY 1  
   
   SET @CSTEP=70   
   SELECT @NCALQTYSUM=SUM(QUANTITY) FROM #TMPDETAILS  
   SELECT @NSTOREDQTY=SUM(QUANTITY) FROM RMD01106 WHERE RM_ID=@CXN_ID   
     
   --ADD NEW AS BLOCK FOR GST PERCENTAGE  
            SELECT *  
         ,[IGST_PER]=CASE ISNULL([IGST_AMOUNT],0) WHEN 0 THEN '0%' WHEN [GST_COLLECTION] THEN GST ELSE GST END  
         ,[CGST_PER]=CASE ISNULL([CGST_AMOUNT],0) WHEN 0 THEN '0%' ELSE DBO.CURR_GROUPING(ROUND(CAST(REPLACE([GST],'%','') AS DECIMAL(10,2))/2,2),'')+'%' END  
         ,[SGST_PER]=CASE ISNULL([SGST_AMOUNT],0) WHEN 0 THEN '0%' ELSE DBO.CURR_GROUPING(ROUND(CAST(REPLACE([GST],'%','') AS DECIMAL(10,2))/2,2),'')+'%' END  
         FROM  
      (  
        SELECT CAST(DBO.CURR_GROUPING(GST_PERCENTAGE,'') AS VARCHAR)+'%'[GST]  
    ,SUM(XN_VALUE_WITHOUT_GST)[TAXABLE_VALUES]  
    ,SUM(CGST_AMOUNT)[CGST_AMOUNT]   
    ,SUM(SGST_AMOUNT)[SGST_AMOUNT]   
    ,SUM(IGST_AMOUNT)[IGST_AMOUNT]  
	,SUM(isnull(Gst_Cess_Amount,0)) [Gst_Cess_Amount]  
    ,SUM(CGST_AMOUNT+SGST_AMOUNT+IGST_AMOUNT)[GST_COLLECTION]  
       FROM RMD01106 (NOLOCK) WHERE RM_ID IN (SELECT RM_ID FROM RMM01106 WHERE (RM_ID=@CXN_ID OR BATCH_NO=@BATCH) AND CANCELLED=0)  
       GROUP BY CAST(DBO.CURR_GROUPING(GST_PERCENTAGE,'') AS VARCHAR)  
      )GST  
  
  SET @CSTEP=75 
   --GST_OH_CONFIG 15 JUL 2017  
   SELECT *   
   FROM  
   (  
   SELECT CASE OH_NAME WHEN 'OC' THEN 'OTHER CHARGES' ELSE OH_NAME END AS OH_NAME  
   ,HSN_CODE AS HSNSAC_CODE  
   ,OH_GST_PER=CASE OH_NAME WHEN 'FREIGHT' THEN FREIGHT_GST_PERCENTAGE WHEN 'OC' THEN OTHER_CHARGES_GST_PERCENTAGE  /*WHEN 'INSURANCE' THEN INSURANCE_GST_PERCENTAGE WHEN 'PACKING' THEN PACKING_GST_PERCENTAGE*/ END  
   ,OH_SGST_AMOUNT=CASE OH_NAME WHEN 'OC' THEN ISNULL(OTHER_CHARGES_SGST_AMOUNT,0) WHEN 'FREIGHT' THEN ISNULL(FREIGHT_SGST_AMOUNT,0) /*WHEN 'INSURANCE' THEN ISNULL(INSURANCE_SGST_AMOUNT,0) WHEN 'PACKING' THEN ISNULL(PACKING_SGST_AMOUNT,0)*/ END  
   ,OH_CGST_AMOUNT=CASE OH_NAME WHEN 'OC' THEN ISNULL(OTHER_CHARGES_CGST_AMOUNT,0) WHEN 'FREIGHT' THEN ISNULL(FREIGHT_CGST_AMOUNT,0) /*WHEN 'INSURANCE' THEN ISNULL(INSURANCE_CGST_AMOUNT,0) WHEN 'PACKING' THEN ISNULL(PACKING_CGST_AMOUNT,0)*/ END  
   ,OH_IGST_AMOUNT=CASE OH_NAME WHEN 'OC' THEN ISNULL(OTHER_CHARGES_IGST_AMOUNT,0) WHEN 'FREIGHT' THEN ISNULL(FREIGHT_IGST_AMOUNT,0) /*WHEN 'INSURANCE' THEN ISNULL(INSURANCE_IGST_AMOUNT,0) WHEN 'PACKING' THEN ISNULL(PACKING_IGST_AMOUNT,0)*/ END  
   ,OH_TAXABLE_VALUE=CASE OH_NAME WHEN 'FREIGHT' THEN FREIGHT_TAXABLE_VALUE  WHEN 'OC' THEN OTHER_CHARGES_TAXABLE_VALUE    END   
   FROM GST_OH_CONFIG,RMM01106 (NOLOCK)  
   WHERE RM_ID IN (SELECT RM_ID FROM RMM01106 WHERE (RM_ID=@CXN_ID OR BATCH_NO=@BATCH) AND CANCELLED=0)  
   )T  
   WHERE ISNULL(OH_GST_PER,0)<>0  
  
  SET @CSTEP=80 
   --STARTS: GST_HSNSASCODE ON 17 APR 2018  
   --SELECT HSN_CODE AS HSNSACCODE  
   --,CAST(AVG(IGST_RATE)AS DECIMAL(10,2))HSNIGSTPER ,SUM(IGST_AMOUNT)HSNIGSTAMOUNT  
   --,CAST(AVG(CGST_RATE)AS DECIMAL(10,2))HSNCGSTPER ,SUM(CGST_AMOUNT)HSNCGSTAMOUNT  
   --,CAST(AVG(SGST_RATE)AS DECIMAL(10,2))HSNSCGSTPER,SUM(SGST_AMOUNT)HSNSCGSTAMOUNT  
   --,SUM(TOTAL)HSNTOTALAMOUNT  
   --,SUM(QUANTITY)HSNQUANTITY  
   --FROM #TMPDETAILS  
   --GROUP BY HSN_CODE  
   SELECT HSN_CODE AS HSNSACCODE,SUM(TAXABLE_VALUE)TAXABLEVALUE  
   ,CAST(ISNULL(IGST_RATE,0) AS DECIMAL(10,2))HSNIGSTPER,SUM(IGST_AMOUNT)HSNIGSTAMOUNT  
   ,CAST(ISNULL(CGST_RATE,0) AS DECIMAL(10,2))HSNCGSTPER,SUM(CGST_AMOUNT)HSNCGSTAMOUNT  
   ,CAST(ISNULL(SGST_RATE,0) AS DECIMAL(10,2))HSNSCGSTPER,SUM(SGST_AMOUNT)HSNSCGSTAMOUNT  
   ,SUM(isnull(Gst_Cess_Amount,0) )GstCessAmount  
   ,SUM(TOTAL)HSNTOTALAMOUNT  
   ,SUM(QUANTITY)HSNQUANTITY  
   FROM #TMPDETAILS  
   GROUP BY HSN_CODE,CAST(ISNULL(IGST_RATE,0) AS DECIMAL(10,2)),CAST(ISNULL(CGST_RATE,0) AS DECIMAL(10,2)),CAST(ISNULL(SGST_RATE,0) AS DECIMAL(10,2))  
   ORDER BY 1  
   --ENDS: GST_HSNSASCODE ON 17 APR 2018  
     
     
   --IF ABS(@NCALQTYSUM-@NSTOREDQTY)>0  
            --SET @CERRMSG='CALCULATED & STORED QTY DIFFERENCE PLEASE CHECK'  
              
         GOTO END_PROC  
      END --END OF PRT  
        
      --SELECT MD_PER,GROSS_PP,MRP FROM GST_COMPANY_CONFIG WHERE XN_TYPE=@CXN_TYPE  
  END TRY    
  BEGIN CATCH    
  BEGIN  
	
    SELECT @CERRMSG='ERROR MESSAGE IN PROCEDURE SP3S_PRINTDEBITNOTE_GST STEP#'+@CSTEP+' '+CAST(ERROR_MESSAGE() AS VARCHAR(MAX))+ '||'+ERROR_PROCEDURE()    
    print 'catch in SP3S_PRINTDEBITNOTE_GST:'+ERROR_MESSAGE()
    GOTO END_PROC  
  END  
  END CATCH     
     
END_PROC:  
  SELECT @CERRMSG AS ERRMSG  
  SET NOCOUNT OFF  
END--PROCEDURE DEFINATION SP3S_PRINTDEBITNOTE_GST  