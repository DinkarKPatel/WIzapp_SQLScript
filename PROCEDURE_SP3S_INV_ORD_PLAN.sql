CREATE PROCEDURE SP3S_INV_ORD_PLAN  
(      
 @NQUERYID INT,  
 @CMEMOID VARCHAR(25),  
 @CWHERE  VARCHAR(500) = '' ,   
 @CWHERE1  VARCHAR(500) = ''    
)  
----WITH ENCRYPTION
AS  
BEGIN

DECLARE @CCMD NVARCHAR(MAX)
 
IF @NQUERYID = 1    
	GOTO LBLGETMASTER    
ELSE IF @NQUERYID = 2    
	GOTO LBLGETDETAIL    
ELSE IF @NQUERYID = 3    
	GOTO LBLGETSUBDETAIL      
ELSE IF @NQUERYID = 4    
	GOTO LBLGETBARCODEDETAIL 
ELSE IF	@NQUERYID = 5    
	GOTO LBLGETALLBARCODEDETAIL 
ELSE IF	@NQUERYID = 6    
	GOTO LBLARTICLELIST_BOM
ELSE IF	@NQUERYID = 7   
	GOTO LBLBUYERORDER_DETAILS	
ELSE IF	@NQUERYID = 8   
	GOTO LBLJOBWORK_DETAILS	
ELSE IF	@NQUERYID = 9   
	GOTO LBLGETBARCODEDETAIL_ALL
ELSE    
  GOTO LAST     
    
LBLGETMASTER:    
   
	 SELECT D.USERNAME AS 'CREATED_USERNAME', E.USERNAME AS 'MODIFIED_USERNAME',       
	  C.AC_NAME AS SUPP_NAME,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + C.AREA_NAME +       
	  ' ' + C.CITY + ' ' + C.STATE AS 'SUPP_ADDRESS',  A.* ,C.MRP_CALC_MODE , C.ALIAS,    
		 '' AS  FORM_NAME, '' AS FORM_ID,BIN.BIN_NAME,C.MP_PERCENTAGE ,
		 '' AS TERMS  
	 FROM ORD_PLAN_MST A  (NOLOCK)    
	 JOIN LMV01106 C (NOLOCK) ON A.AC_CODE = C.AC_CODE      
	 JOIN USERS D (NOLOCK) ON A.USER_CODE = D.USER_CODE      
	 JOIN USERS E (NOLOCK) ON A.EDT_USER_CODE = E.USER_CODE     
	 JOIN BIN (NOLOCK) ON BIN.BIN_ID = A.BIN_ID             
	 WHERE A.MEMO_ID = @CMEMOID      
	   
	 GOTO LAST   
    
LBLGETDETAIL:  
    
	 SELECT K.SECTION_NAME, J.SUB_SECTION_NAME, I.*, C.PARA1_NAME,CONVERT(VARCHAR(40),'') AS PRODUCT_CODE,        
	 D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,B.ARTICLE_NO,         
	 B.ARTICLE_NAME, B.CODING_SCHEME, A.*,A.PURCHASE_PRICE * A.QUANTITY AS 'AMOUNT'  ,      
	 ISNULL(B.DT_CREATED,'') AS [ART_DT_CREATED],ISNULL(E.DT_CREATED,'') AS [PARA3_DT_CREATED],      
	 '' AS [SKU_DT_CREATED],B.GEN_EAN_CODES,         
	 '' AS OTHER_XN_PRODUCT_CODE,D.PARA2_ORDER, B.SIZE_RATE_DIFF ,B.SIZE_CENTER_POINT,     
	 A.QUANTITY AS [ORG_QUANTITY],CAST(0 AS NUMERIC(10,2)) AS [STK_QUANTITY],B.STOCK_NA,    
	 B.FIX_MRP, '' AS PRODUCT_NAME,B.FIX_PRICE_ARTICLE,CONVERT(NUMERIC(2),0) AS  MODE,    
	 B.ALIAS AS ARTICLE_ALIAS  ,
	 A.PURCHASE_PRICE AS GROSS_PURCHASE_PRICE,B.DISCOUNT_PERCENTAGE ,B.DISCOUNT_AMOUNT ,
	 A.MRP ,A.WHOLESALE_PRICE ,A.WSP_PERCENTAGE ,A.MP_PERCENTAGE ,0 AS SIZE_RATE_DIFF,
	 0 AS BOX_NO
	 FROM ORD_PLAN_DET A (NOLOCK)       
	 JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE         
	 JOIN PARA1 C (NOLOCK) ON A.PARA1_CODE = C.PARA1_CODE        
	 JOIN PARA2 D (NOLOCK) ON A.PARA2_CODE = D.PARA2_CODE        
	 JOIN PARA3 E (NOLOCK) ON A.PARA3_CODE = E.PARA3_CODE        
	 JOIN PARA4 F (NOLOCK) ON A.PARA4_CODE = F.PARA4_CODE        
	 JOIN PARA5 G (NOLOCK) ON A.PARA5_CODE = G.PARA5_CODE        
	 JOIN PARA6 H (NOLOCK) ON A.PARA6_CODE = H.PARA6_CODE        
	 JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE        
	 JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE        
	 JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE     
	 WHERE A.MEMO_ID = @CMEMOID  
	 ORDER BY b.article_no ,c.para1_name ,d.para2_order         

	 GOTO LAST   
    
LBLGETSUBDETAIL:  
   

	 --SELECT DISTINCT CAST(1 AS BIT) AS CHK, K.SECTION_NAME, J.SUB_SECTION_NAME, I.*, C.PARA1_NAME,
	 --((T.QUANTITY)*T.PURCHASE_PRICE) AS AMOUNT,        
	 --D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,B.ARTICLE_NO,         
	 --B.ARTICLE_NAME, B.CODING_SCHEME, T.*,ISNULL(B.DT_CREATED,'') AS [ART_DT_CREATED],  
	 --ISNULL(E.DT_CREATED,'') AS [PARA3_DT_CREATED], '' AS [SKU_DT_CREATED],  
	 --B.GEN_EAN_CODES,  '' AS OTHER_XN_PRODUCT_CODE,D.PARA2_ORDER, B.SIZE_RATE_DIFF ,B.SIZE_CENTER_POINT,     
	 --CAST(0 AS NUMERIC(10,2)) AS [STK_QUANTITY],B.STOCK_NA,    
	 --B.FIX_MRP,  '' AS PRODUCT_NAME,B.FIX_PRICE_ARTICLE,CONVERT(NUMERIC(2),0) AS  MODE,    
	 --B.ALIAS AS ARTICLE_ALIAS,B1.BIN_NAME 
	 --FROM ORD_PLAN_BOM_DET T (NOLOCK)    
	 --JOIN ORD_PLAN_DET T1 (NOLOCK) ON  T.MEMO_ID=T1.MEMO_ID  
	 --JOIN ORD_PLAN_MST T2 (NOLOCK) ON  T1.MEMO_ID=T2.MEMO_ID  
	 --JOIN ARTICLE B (NOLOCK) ON T.ARTICLE_CODE = B.ARTICLE_CODE         
	 --JOIN PARA1 C (NOLOCK) ON T.PARA1_CODE = C.PARA1_CODE        
	 --JOIN PARA2 D (NOLOCK) ON T.PARA2_CODE = D.PARA2_CODE        
	 --JOIN PARA3 E (NOLOCK) ON T.PARA3_CODE = E.PARA3_CODE        
	 --JOIN PARA4 F (NOLOCK) ON T.PARA4_CODE = F.PARA4_CODE        
	 --JOIN PARA5 G (NOLOCK) ON T.PARA5_CODE = G.PARA5_CODE        
	 --JOIN PARA6 H (NOLOCK) ON T.PARA6_CODE = H.PARA6_CODE        
	 --JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE        
	 --JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE        
	 --JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE     
	 --JOIN BIN B1 ON B1.BIN_ID=ISNULL(T.BIN_ID,'000')       
	 --WHERE T2.MEMO_ID = @CMEMOID  AND ISNULL(T.REF_ROW_ID,'')= (CASE WHEN T2.ORD_PLAN_MODE=1 THEN ISNULL(T.REF_ROW_ID,'') ELSE T1.ROW_ID END)     
	 --UNION ALL
	 SELECT CAST((CASE WHEN T.ROW_ID IS NULL THEN 0 ELSE 1 END) AS BIT) AS CHK, K.SECTION_NAME, J.SUB_SECTION_NAME, I.*, 
	 C.PARA1_NAME,
	 CONVERT(NUMERIC(14,2), CASE WHEN ISNULL(UC.CONVERSION_VALUE,0) =0 THEN ISNULL(T.QUANTITY,0)
	 ELSE (ISNULL(T.QUANTITY,0))/ISNULL(UC.CONVERSION_VALUE,0) END*ISNULL(T.PURCHASE_PRICE,B.PURCHASE_PRICE)  ) AS AMOUNT,
	 D.PARA2_NAME,'' AS PARA3_NAME,'' AS PARA4_NAME,'' AS PARA5_NAME,
	 '' AS PARA6_NAME,B.ARTICLE_NO,B.ARTICLE_NAME, B.CODING_SCHEME, ISNULL(T.PARA4_CODE,'') AS PARA4_CODE, ISNULL(T.PARA5_CODE,'') AS PARA5_CODE, 
	 ISNULL(T.PARA6_CODE,'') AS PARA6_CODE, ISNULL(T.ARTICLE_CODE,BOM.BOM_ARTICLE_CODE) AS ARTICLE_CODE, ISNULL(T.PARA1_CODE,BOM.BOM_PARA1_CODE) AS PARA1_CODE
	,ISNULL(T.PARA2_CODE,BOM.BOM_PARA2_CODE) AS PARA2_CODE, ISNULL(T.PARA3_CODE,'') AS PARA3_CODE, 
	ISNULL(T.QUANTITY,0) AS QUANTITY, 
	ISNULL(T.ADD_AVG_QUANTITY,BOM.ADD_AVG_QTY) AS ADD_AVG_QUANTITY, 
	ISNULL(T.AVG_QUANTITY,BOM.AVG_QTY) AS AVG_QUANTITY, 
	ISNULL(T.PURCHASE_PRICE,B.PURCHASE_PRICE)AS PURCHASE_PRICE, ISNULL(T.BIN_ID,'000') AS BIN_ID, ISNULL(T.SRNO,0) AS SRNO, 
	ISNULL(T.AUTO_SRNO	,0) AS AUTO_SRNO, ISNULL(T.LAST_UPDATE,GETDATE()) AS LAST_UPDATE, ISNULL(T.ROW_ID,NEWID()) AS ROW_ID, 
	T1.MEMO_ID, T1.ROW_ID AS REF_ROW_ID, ISNULL(T.MANUAL_QTY,0) AS MANUAL_QTY,ISNULL(B.DT_CREATED,'') AS [ART_DT_CREATED],  
	 '' AS [PARA3_DT_CREATED], '' AS [SKU_DT_CREATED],B.GEN_EAN_CODES,  '' AS OTHER_XN_PRODUCT_CODE,D.PARA2_ORDER, 
	 B.SIZE_RATE_DIFF ,B.SIZE_CENTER_POINT,CAST(0 AS NUMERIC(10,2)) AS [STK_QUANTITY],B.STOCK_NA,    
	 B.FIX_MRP,  '' AS PRODUCT_NAME,B.FIX_PRICE_ARTICLE,CONVERT(NUMERIC(2),0) AS  MODE,    
	 B.ALIAS AS ARTICLE_ALIAS,'' AS BIN_NAME,
	 
	 CONVERT(NUMERIC(14,4), CASE WHEN ISNULL(UC.CONVERSION_VALUE,0) =0 THEN ISNULL(T.QUANTITY,0)
	 ELSE (ISNULL(T.QUANTITY,0))/ISNULL(UC.CONVERSION_VALUE,0) END  ) AS STOCK_QTY,
	 ISNULL(bu.CONVERSION_UOM_NAME,I.UOM_NAME) as BOM_UOM ,
	 CASE WHEN ISNULL(UC.CONVERSION_VALUE,0) =0 THEN 1 ELSE ISNULL(UC.CONVERSION_VALUE,0) END AS CONVERSION_VALUE,
	 JOBS.JOB_CODE ,
	 JOBS.JOB_NAME ,
	 ISNULL(T.TOL_PER,b.TOLERANCE_PERCENTAGE) as TOL_PER,
	 T2.MEMO_NO AS JOB_CARD_NO,
	 BM.Ref_no AS WSL_REF_NO
	 , '' AS FG_ARTICLE_NO,
	 '' AS FG_PARA1_NAME,
	 '' AS FG_PARA2_NAME,
	 '' AS FG_UOM_NAME

	 FROM ART_BOM BOM
	 JOIN ORD_PLAN_DET T1 (NOLOCK) ON  BOM.ARTICLE_CODE=T1.ARTICLE_CODE 
	 JOIN ORD_PLAN_MST T2 (NOLOCK) ON  T1.MEMO_ID=T2.MEMO_ID  
	 JOIN ARTICLE B (NOLOCK) ON BOM.BOM_ARTICLE_CODE = B.ARTICLE_CODE         
	 JOIN PARA1 C (NOLOCK) ON BOM.BOM_PARA1_CODE= C.PARA1_CODE        
	 JOIN PARA2 D (NOLOCK) ON BOM.BOM_PARA2_CODE = D.PARA2_CODE        
	 JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE        
	 JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE        
	 JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE 
	 LEFT OUTER JOIN ORD_PLAN_BOM_DET T (NOLOCK)    ON T.ARTICLE_CODE=BOM.BOM_ARTICLE_CODE AND T1.ROW_ID=T.REF_ROW_ID and bom.JOB_CODE =t.JOB_CODE 
	 LEFT OUTER JOIN UOM_CONVERSION UC ON UC.UOM_CODE=i.UOM_CODE
     LEFT OUTER JOIN BOM_UOM BU ON BU.CONVERSION_UOM_CODE=UC.CONVERSION_UOM_CODE   
     LEFT JOIN JOBS (NOLOCK) ON JOBS.JOB_CODE =BOM.JOB_CODE  
     LEFT JOIN BUYER_ORDER_DET BD (NOLOCK) ON BD.row_id =T1.WOD_ROW_ID 
     LEFT JOIN BUYER_ORDER_MST BM (NOLOCK) ON BM.order_id =BD.order_id 
     JOIN ARTICLE FG_ART (NOLOCK) ON FG_ART .article_code =T1.ARTICLE_CODE 
     JOIN para1 FG_P1 (NOLOCK) ON FG_P1 .para1_code =T1.PARA1_CODE   
     JOIN para2 FG_P2 (NOLOCK) ON FG_P2 .para2_code =T1.PARA2_CODE
     JOIN UOM FG_UOM (NOLOCK) ON FG_UOM .uom_code =FG_ART .uom_code   
	 WHERE T2.MEMO_ID = @CMEMOID
	 UNION ALL
	 SELECT CAST(1 AS BIT) AS CHK, K.SECTION_NAME, J.SUB_SECTION_NAME, I.*, 
	 C.PARA1_NAME,
	 CONVERT(NUMERIC(14,2), CASE WHEN ISNULL(UC.CONVERSION_VALUE,0) =0 THEN ISNULL(T.QUANTITY,0)
	 ELSE (ISNULL(T.QUANTITY,0))/ISNULL(UC.CONVERSION_VALUE,0) END*ISNULL(T.PURCHASE_PRICE,B.PURCHASE_PRICE)  ) AS AMOUNT,
	 D.PARA2_NAME,'' AS PARA3_NAME,'' AS PARA4_NAME,'' AS PARA5_NAME,
	 '' AS PARA6_NAME,B.ARTICLE_NO,B.ARTICLE_NAME, B.CODING_SCHEME, ISNULL(T.PARA4_CODE,'') AS PARA4_CODE, ISNULL(T.PARA5_CODE,'') AS PARA5_CODE, 
	 ISNULL(T.PARA6_CODE,'') AS PARA6_CODE, ISNULL(T.ARTICLE_CODE,BOM.BOM_ARTICLE_CODE) AS ARTICLE_CODE, ISNULL(T.PARA1_CODE,BOM.BOM_PARA1_CODE) AS PARA1_CODE
	,ISNULL(T.PARA2_CODE,BOM.BOM_PARA2_CODE) AS PARA2_CODE, ISNULL(T.PARA3_CODE,'') AS PARA3_CODE, 
	ISNULL(T.QUANTITY,0) AS QUANTITY, 
	ISNULL(T.ADD_AVG_QUANTITY,BOM.ADD_AVG_QTY) AS ADD_AVG_QUANTITY, 
	ISNULL(T.AVG_QUANTITY,BOM.AVG_QTY) AS AVG_QUANTITY, 
	ISNULL(T.PURCHASE_PRICE,B.PURCHASE_PRICE)AS PURCHASE_PRICE, ISNULL(T.BIN_ID,'000') AS BIN_ID, ISNULL(T.SRNO,0) AS SRNO, 
	ISNULL(T.AUTO_SRNO	,0) AS AUTO_SRNO, ISNULL(T.LAST_UPDATE,GETDATE()) AS LAST_UPDATE, ISNULL(T.ROW_ID,NEWID()) AS ROW_ID, 
	T1.MEMO_ID, T1.ROW_ID AS REF_ROW_ID, ISNULL(T.MANUAL_QTY,0) AS MANUAL_QTY,ISNULL(B.DT_CREATED,'') AS [ART_DT_CREATED],  
	 '' AS [PARA3_DT_CREATED], '' AS [SKU_DT_CREATED],B.GEN_EAN_CODES,  '' AS OTHER_XN_PRODUCT_CODE,D.PARA2_ORDER, 
	 B.SIZE_RATE_DIFF ,B.SIZE_CENTER_POINT,CAST(0 AS NUMERIC(10,2)) AS [STK_QUANTITY],B.STOCK_NA,    
	 B.FIX_MRP,  '' AS PRODUCT_NAME,B.FIX_PRICE_ARTICLE,CONVERT(NUMERIC(2),0) AS  MODE,    
	 B.ALIAS AS ARTICLE_ALIAS,'' AS BIN_NAME,
	 
	 CONVERT(NUMERIC(14,4), CASE WHEN ISNULL(UC.CONVERSION_VALUE,0) =0 THEN ISNULL(T.QUANTITY,0)
	 ELSE (ISNULL(T.QUANTITY,0))/ISNULL(UC.CONVERSION_VALUE,0) END  ) AS STOCK_QTY,
	 ISNULL(bu.CONVERSION_UOM_NAME,I.UOM_NAME) as BOM_UOM ,
	 CASE WHEN ISNULL(UC.CONVERSION_VALUE,0) =0 THEN 1 ELSE ISNULL(UC.CONVERSION_VALUE,0) END AS CONVERSION_VALUE,
	 JOBS.JOB_CODE ,
	 JOBS.JOB_NAME ,
	 ISNULL(T.TOL_PER,BOM.TOL_PER) as TOL_PER,
	 T2.MEMO_NO AS JOB_CARD_NO,
	 '' AS WSL_REF_NO
	 , '' AS FG_ARTICLE_NO,
	 '' AS FG_PARA1_NAME,
	 '' AS FG_PARA2_NAME,
	 '' AS FG_UOM_NAME 
	 FROM ORD_PLAN_BOM_DET T (NOLOCK)    
	 JOIN ORD_PLAN_DET T1 (NOLOCK) ON  T.MEMO_ID=T1.MEMO_ID  AND T.REF_ROW_ID =T1.ROW_ID
	 JOIN ORD_PLAN_MST T2 (NOLOCK) ON  T1.MEMO_ID=T2.MEMO_ID  
	 JOIN ARTICLE B (NOLOCK) ON T.ARTICLE_CODE = B.ARTICLE_CODE         
	 JOIN PARA1 C (NOLOCK) ON T.PARA1_CODE = C.PARA1_CODE        
	 JOIN PARA2 D (NOLOCK) ON T.PARA2_CODE = D.PARA2_CODE        
	 JOIN PARA3 E (NOLOCK) ON T.PARA3_CODE = E.PARA3_CODE        
	 JOIN PARA4 F (NOLOCK) ON T.PARA4_CODE = F.PARA4_CODE        
	 JOIN PARA5 G (NOLOCK) ON T.PARA5_CODE = G.PARA5_CODE        
	 JOIN PARA6 H (NOLOCK) ON T.PARA6_CODE = H.PARA6_CODE        
	 JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE        
	 JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE        
	 JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE     
	 JOIN BIN B1 ON B1.BIN_ID=ISNULL(T.BIN_ID,'000')      
	 LEFT OUTER JOIN UOM_CONVERSION UC ON UC.UOM_CODE=i.UOM_CODE
     LEFT OUTER JOIN BOM_UOM BU ON BU.CONVERSION_UOM_CODE=UC.CONVERSION_UOM_CODE  
	 JOIN ARTICLE FG_ART (NOLOCK) ON FG_ART .article_code =T1.ARTICLE_CODE  
	 JOIN UOM FG_UOM (NOLOCK) ON FG_UOM .uom_code =FG_ART .uom_code    
	 LEFT JOIN JOBS (NOLOCK) ON JOBS.JOB_CODE =T.JOB_CODE  
	 LEFT OUTER JOIN ART_BOM BOM (NOLOCK)    ON T.ARTICLE_CODE=BOM.BOM_ARTICLE_CODE and bom.JOB_CODE =t.JOB_CODE 
	 WHERE BOM.article_code IS NULL AND T.QUANTITY>0
	 AND T.MEMO_ID=@CMEMOID
	 ORDER BY T1.ROW_ID,B.ARTICLE_NO    
	  




    
	 GOTO LAST
LBLGETBARCODEDETAIL:
	    
     SELECT REFROW_ID,PRODUCT_CODE FROM ORD_PLAN_BARCODE_DET WHERE REFROW_ID=@CWHERE ORDER BY PRODUCT_CODE
     GOTO LAST
LBLGETBARCODEDETAIL_ALL:
	    
     SELECT A.PRODUCT_CODE,B.ARTICLE_NO,B.ARTICLE_NAME,C.PARA1_NAME,D.PARA2_NAME,E.PARA3_NAME ,
            f.para4_name,g.para5_name ,h.para6_name ,
     A.MRP,A.PURCHASE_PRICE,A.WS_PRICE,A.FIX_MRP
     FROM ORD_PLAN_BARCODE_DET A1 (NOLOCK)
     JOIN ORD_PLAN_DET A2 (NOLOCK) ON A2.ROW_ID=A1.REFROW_ID
     JOIN SKU A (NOLOCK) ON A.PRODUCT_CODE=A1.PRODUCT_CODE
	 JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE         
	 JOIN PARA1 C (NOLOCK) ON A.PARA1_CODE = C.PARA1_CODE        
	 JOIN PARA2 D (NOLOCK) ON A.PARA2_CODE = D.PARA2_CODE        
	 JOIN PARA3 E (NOLOCK) ON A.PARA3_CODE = E.PARA3_CODE        
	 JOIN PARA4 F (NOLOCK) ON A.PARA4_CODE = F.PARA4_CODE        
	 JOIN PARA5 G (NOLOCK) ON A.PARA5_CODE = G.PARA5_CODE        
	 JOIN PARA6 H (NOLOCK) ON A.PARA6_CODE = H.PARA6_CODE        
	 JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE        
	 JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE        
	 JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE     
	 WHERE A2.MEMO_ID = @CMEMOID  
	 ORDER BY A2.ROW_ID,A1.PRODUCT_CODE
     GOTO LAST     
LBLGETALLBARCODEDETAIL:     
     SELECT A.PRODUCT_CODE ,(CASE WHEN D.BARCODE_CODING_SCHEME=3 THEN 1 ELSE B.QUANTITY END ) AS [QUANTITY]
     FROM ORD_PLAN_BARCODE_DET A
     JOIN ORD_PLAN_DET B ON B.ROW_ID=A.REFROW_ID
     JOIN ORD_PLAN_MST C ON C.MEMO_ID=B.MEMO_ID
     JOIN SKU D ON D.PRODUCT_CODE=A.PRODUCT_CODE
     WHERE C.MEMO_ID=@CWHERE
     GOTO LAST

LBLARTICLELIST_BOM:

DECLARE @bPICK_BOM_RATE_FROM_ARTICLE_MASTER BIT
SELECT @bPICK_BOM_RATE_FROM_ARTICLE_MASTER=CAST(ISNULL(VALUE,0) AS BIT)	 FROM CONFIG WHERE config_option='PICK_BOM_RATE_FROM_ARTICLE_MASTER' 
SET @bPICK_BOM_RATE_FROM_ARTICLE_MASTER=ISNULL(@bPICK_BOM_RATE_FROM_ARTICLE_MASTER,0)
	IF OBJECT_ID('TEMPDB..#TEMP_SP3S_INV_ORD_PLAN_BOM','U') IS NOT NULL
		DROP TABLE #TEMP_SP3S_INV_ORD_PLAN_BOM

	SELECT CAST(1 AS BIT) AS CHK, K.SECTION_NAME, J.SUB_SECTION_NAME,  I.UOM_TYPE,I.UOM_CODE,I.UOM_NAME,
	C.PARA1_NAME,D.PARA2_NAME,B.ARTICLE_NO,B.ARTICLE_NAME, B.CODING_SCHEME, B1.ARTICLE_CODE,
	T.ARTICLE_CODE AS BOM_ARTICLE_CODE,T.AVG_QUANTITY AS AVG_QTY,
	T.PURCHASE_PRICE AS RATE,
	T.PARA1_CODE AS BOM_PARA1_CODE,T.PARA2_CODE AS BOM_PARA2_CODE,T.ADD_AVG_QUANTITY AS ADD_AVG_QTY,
	ISNULL(B.DT_CREATED,'') AS [ART_DT_CREATED],  
	'' AS [PARA3_DT_CREATED], '' AS [SKU_DT_CREATED],  
	B.GEN_EAN_CODES,  '' AS OTHER_XN_PRODUCT_CODE,D.PARA2_ORDER, B.SIZE_RATE_DIFF ,B.SIZE_CENTER_POINT,     
	CAST(0 AS NUMERIC(10,2)) AS [STK_QUANTITY],B.STOCK_NA,    
	B.FIX_MRP,  '' AS PRODUCT_NAME,B.FIX_PRICE_ARTICLE,CONVERT(NUMERIC(2),0) AS  MODE,    
	B.ALIAS AS ARTICLE_ALIAS,
	t.JOB_CODE ,jobs.job_name ,
	isnull(ab.TOL_PER,0) as TOL_PER,
	t.row_id 
	INTO #TEMP_SP3S_INV_ORD_PLAN_BOM
	FROM 
	(
		SELECT * FROM ORD_PLAN_BOM_DET(NOLOCK)
		WHERE  JOB_CODE IS NOT NULL AND @bPICK_BOM_RATE_FROM_ARTICLE_MASTER=0
	)T  
	JOIN
	(
		SELECT TOP 1 A.MEMO_ID,B.ARTICLE_CODE,B.PARA2_CODE, B.ROW_ID 
		FROM ORD_PLAN_MST A (NOLOCK)
		JOIN ORD_PLAN_DET B (NOLOCK) ON  A.MEMO_ID=B.MEMO_ID 
		WHERE  A.CANCELLED=0 AND ARTICLE_CODE=@CWHERE 
		AND (B.PARA2_CODE=@CWHERE1 OR @CWHERE1='')
		AND @bPICK_BOM_RATE_FROM_ARTICLE_MASTER=0
		ORDER BY A.MEMO_DT DESC,B.TS DESC
	)T2 ON T2.MEMO_ID=T.MEMO_ID AND T2.ROW_ID=T.REF_ROW_ID
	JOIN ARTICLE B1 (NOLOCK) ON T2.ARTICLE_CODE = B1.ARTICLE_CODE         
	JOIN ARTICLE B (NOLOCK) ON T.ARTICLE_CODE = B.ARTICLE_CODE         
	JOIN PARA1 C (NOLOCK) ON T.PARA1_CODE = C.PARA1_CODE        
	JOIN PARA2 D (NOLOCK) ON T.PARA2_CODE = D.PARA2_CODE  
	left join jobs (nolock) on jobs.job_code =t.JOB_CODE          
	JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE        
	JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE        
	JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE
	JOIN ART_BOM AB (NOLOCK) ON AB.article_code =T2.ARTICLE_CODE  AND AB.bom_article_code =T.ARTICLE_CODE --AND AB.avg_qty=T.AVG_QUANTITY
	

	--change for fix coding in material issue
 -- IF EXISTS (SELECT TOP 1 'U' FROM  ARTICLE WHERE ARTICLE_CODE=@CWHERE AND CODING_SCHEME =1)
 -- BEGIN
	--UPDATE A SET RATE =B.PURCHASE_PRICE 
	--FROM  #TEMP_SP3S_INV_ORD_PLAN_BOM A
	--JOIN
	--(
	-- SELECT A.ORD_PLAN_BOM_DET_ROW_ID,A.PURCHASE_PRICE 
	-- FROM BOM_ISSUE_DET A (NOLOCK)
	-- JOIN BOM_ISSUE_MST B (NOLOCK) ON A.ISSUE_ID =B.ISSUE_ID 
	-- WHERE B.CANCELLED =0
 --   ) B ON A.ROW_ID =B.ORD_PLAN_BOM_DET_ROW_ID 

	--END 
	--select * from BOM_ISSUE_DET  a
	--join BOM_ISSUE_MST b on a.issue_id =b.issue_id
	--where b.cancelled=0
	--IF ((SELECT COUNT(*) FROM #TEMP_SP3S_INV_ORD_PLAN_BOM)=0)
	--BEGIN
		----IF OBJECT_ID('TEMPDB..#TEMP_SP3S_INV_ORD_PLAN_BOM','U') IS NOT NULL
		--DROP TABLE #TEMP_SP3S_INV_ORD_PLAN_BOM
		SELECT CHK,  SECTION_NAME, SUB_SECTION_NAME, UOM_TYPE,T.UOM_CODE,UOM_NAME,
		PARA1_NAME,PARA2_NAME,ARTICLE_NO,ARTICLE_NAME, CODING_SCHEME, ARTICLE_CODE,
		BOM_ARTICLE_CODE,AVG_QTY,
		RATE,
		BOM_PARA1_CODE,BOM_PARA2_CODE,ADD_AVG_QTY,ART_DT_CREATED,  PARA3_DT_CREATED, SKU_DT_CREATED,  
		GEN_EAN_CODES,  OTHER_XN_PRODUCT_CODE,PARA2_ORDER, SIZE_RATE_DIFF ,SIZE_CENTER_POINT,     
		STK_QUANTITY,STOCK_NA,FIX_MRP,  PRODUCT_NAME,FIX_PRICE_ARTICLE,MODE,ARTICLE_ALIAS,
		ISNULL(bu.CONVERSION_UOM_NAME,T.UOM_NAME) as BOM_UOM ,
		ISNULL(UC.CONVERSION_VALUE,1) AS CONVERSION_VALUE,
		CONVERT(NUMERIC(14,4),(T.AVG_QTY+T.ADD_AVG_QTY)/CASE WHEN ISNULL(UC.CONVERSION_VALUE,0)=0 THEN 1
		ELSE  ISNULL(UC.CONVERSION_VALUE,1) END) AS STOCK_QTY,t.JOB_CODE ,t.job_name,
		isnull(t.TOL_PER,0) as TOL_PER 
		
		FROM #TEMP_SP3S_INV_ORD_PLAN_BOM T 
        LEFT OUTER JOIN UOM_CONVERSION UC ON UC.UOM_CODE=T.UOM_CODE
        LEFT OUTER JOIN BOM_UOM BU ON BU.CONVERSION_UOM_CODE=UC.CONVERSION_UOM_CODE  
		UNION ALL
		SELECT CAST(1 AS BIT) AS CHK, K.SECTION_NAME, J.SUB_SECTION_NAME, I.UOM_TYPE,I.UOM_CODE,I.UOM_NAME, 
		C.PARA1_NAME,D.PARA2_NAME,B.ARTICLE_NO,B.ARTICLE_NAME, B.CODING_SCHEME, T.ARTICLE_CODE,T.BOM_ARTICLE_CODE,
		T.AVG_QTY,T.RATE,T.BOM_PARA1_CODE,T.BOM_PARA2_CODE,T.ADD_AVG_QTY,
		ISNULL(B.DT_CREATED,'') AS [ART_DT_CREATED],  
		'' AS [PARA3_DT_CREATED], '' AS [SKU_DT_CREATED],  
		B.GEN_EAN_CODES,  '' AS OTHER_XN_PRODUCT_CODE,D.PARA2_ORDER, B.SIZE_RATE_DIFF ,B.SIZE_CENTER_POINT,     
		CAST(0 AS NUMERIC(10,2)) AS [STK_QUANTITY],B.STOCK_NA,    
		B.FIX_MRP,  '' AS PRODUCT_NAME,B.FIX_PRICE_ARTICLE,CONVERT(NUMERIC(2),0) AS  MODE,    
		B.ALIAS AS ARTICLE_ALIAS,
		ISNULL(bu.CONVERSION_UOM_NAME,I.UOM_NAME) as BOM_UOM ,
		ISNULL(UC.CONVERSION_VALUE,1) AS CONVERSION_VALUE,
		
		CONVERT(NUMERIC(14,4),(T.AVG_QTY+T.ADD_AVG_QTY)/CASE WHEN ISNULL(UC.CONVERSION_VALUE,0)=0 THEN 1
		ELSE  ISNULL(UC.CONVERSION_VALUE,1) END) AS STOCK_QTY,
		jobs.job_code,jobs.job_name ,
		isnull(t.TOL_PER,0) as TOL_PER
		FROM ART_BOM T (NOLOCK)    
		JOIN ARTICLE B1 (NOLOCK) ON T.ARTICLE_CODE = B1.ARTICLE_CODE         
		JOIN ARTICLE B (NOLOCK) ON T.BOM_ARTICLE_CODE = B.ARTICLE_CODE         
		JOIN PARA1 C (NOLOCK) ON T.BOM_PARA1_CODE = C.PARA1_CODE        
		JOIN PARA2 D (NOLOCK) ON T.BOM_PARA2_CODE = D.PARA2_CODE        
		--JOIN PARA3 E (NOLOCK) ON T.PARA3_CODE = E.PARA3_CODE        
		--JOIN PARA4 F (NOLOCK) ON T.PARA4_CODE = F.PARA4_CODE        
		--JOIN PARA5 G (NOLOCK) ON T.PARA5_CODE = G.PARA5_CODE        
		--JOIN PARA6 H (NOLOCK) ON T.PARA6_CODE = H.PARA6_CODE        
		JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE        
		JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE        
		JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE 
		LEFT OUTER JOIN #TEMP_SP3S_INV_ORD_PLAN_BOM Z ON Z.BOM_ARTICLE_CODE=T.BOM_ARTICLE_CODE AND Z.JOB_CODE =T.JOB_CODE
		LEFT OUTER JOIN UOM_CONVERSION UC ON UC.UOM_CODE=I.UOM_CODE
        LEFT OUTER JOIN BOM_UOM BU ON BU.CONVERSION_UOM_CODE=UC.CONVERSION_UOM_CODE  
        left join jobs (nolock) on jobs.job_code =t.JOB_CODE 
		WHERE Z.BOM_ARTICLE_CODE IS NULL AND T.ARTICLE_CODE=@CWHERE
		
		
	--END
	--ELSE
	--	SELECT * 
	--	FROM #TEMP_SP3S_INV_ORD_PLAN_BOM
	GOTO LAST
LBLBUYERORDER_DETAILS:
	SELECT A.ORDER_NO AS BUYER_ORDER_NO,A.ORDER_ID AS BUYER_ORDER_ID,REF_NO AS BUYER_ORDER_REF_NO
	FROM BUYER_ORDER_MST A
	JOIN BUYER_ORDER_DET B ON B.ORDER_ID=A.ORDER_ID
	JOIN ORD_PLAN_DET C ON C.WOD_ROW_ID=B.ROW_ID
	WHERE C.MEMO_ID=@CMEMOID
	GROUP BY A.ORDER_NO,A.ORDER_ID,REF_NO
	GOTO LAST
LBLJOBWORK_DETAILS:
	--SET @CWHERE=REPLACE(@CWHERE,',',''',''')
	--SET @CCMD=N'
	--SELECT CAST(ISNULL(X.CHK,0) AS BIT) AS CHK, Z.JOB_NAME,Z.JOB_CODE,ISNULL(X.JOB_ORDER,0) AS JOB_ORDER
	--,ISNULL(X.MEMO_ID,'''') AS MEMO_ID,ISNULL(X.ROW_ID,'''') AS ROW_ID,ISNULL(X.REF_ROW_ID,'''') AS REF_ROW_ID
	--FROM JOBS Z 
	--LEFT OUTER JOIN
	--(
	--	SELECT DISTINCT CAST(1 AS BIT) AS CHK, B.JOB_NAME,A.MEMO_ID,A.JOB_CODE,A.JOB_ORDER,A.ROW_ID,A.REF_ROW_ID
	--	FROM ORD_PLAN_JOB A
	--	JOIN JOBS B ON B.JOB_CODE=A.JOB_CODE
	--	WHERE A.MEMO_ID='''+@CMEMOID+''' 
	--	UNION
	--	SELECT DISTINCT CAST(1 AS BIT) AS CHK,B.JOB_NAME,'''' AS MEMO_ID,A.JOB_CODE,A.JOB_ORDER,'''' AS ROW_ID,'''' AS REF_ROW_ID
	--	FROM ART_JOBS A
	--	JOIN JOBS B ON B.JOB_CODE=A.JOB_CODE
	--	WHERE A.ARTICLE_CODE IN ('''+@CWHERE+''') 
	--)X ON Z.JOB_CODE=X.JOB_CODE
	--WHERE Z.JOB_NAME<>'''' AND (''''<>'''+@CMEMOID +''' OR ''''<>'''+@CWHERE+''')
	--ORDER BY JOB_ORDER, Z.JOB_NAME,Z.JOB_CODE'
	
	SET @CCMD=N'SELECT CAST(CASE WHEN C.JOB_CODE IS NULL THEN 0 ELSE 1 END AS BIT) AS CHK, A.JOB_NAME, B.MEMO_ID,
				A.JOB_CODE,ISNULL(C.JOB_ORDER,0) AS JOB_ORDER,ISNULL(C.ROW_ID,'''') AS ROW_ID,B.ARTICLE_CODE,
				ISNULL(C.TAT_DAYS,0) AS TAT_DAYS,CONVERT(DATETIME,B.MEMO_DT+ISNULL(C.TAT_DAYS,0)) AS TAT_DATE
				,ISNULL(C.JOB_RATE,0) AS JOB_RATE
				FROM JOBS A (NOLOCK) 
				JOIN 
				(
					SELECT A.MEMO_ID,B.MEMO_DT,A.ARTICLE_CODE 
					FROM ORD_PLAN_DET A (NOLOCK)
					JOIN  ORD_PLAN_MST B (NOLOCK) ON B.MEMO_ID=A.MEMO_ID
					WHERE A.MEMO_ID='''+@CMEMOID+''' 
					GROUP BY A.MEMO_ID,B.MEMO_DT,A.ARTICLE_CODE
				)B ON 1=1
				LEFT OUTER JOIN ORD_PLAN_JOB C (NOLOCK) ON C.JOB_CODE=A.JOB_CODE AND B.ARTICLE_CODE=C.ARTICLE_CODE AND B.MEMO_ID=C.MEMO_ID
				WHERE A.JOB_NAME<>'''' 
				UNION
				SELECT CAST(CASE WHEN B.JOB_CODE IS NULL THEN 0 ELSE 1 END AS BIT) AS CHK, A.JOB_NAME,'''' AS MEMO_ID,
				A.JOB_CODE,ISNULL(B.JOB_ORDER,0) AS JOB_ORDER,'''' AS ROW_ID,'''' AS ARTICLE_CODE
				,CONVERT(NUMERIC(5),0) AS TAT_DAYS,CONVERT(DATETIME,NULL) AS TAT_DATE,ISNULL(B.Job_rate,0) AS Job_rate
				FROM JOBS A (NOLOCK) 
				LEFT OUTER JOIN ART_JOBS B  (NOLOCK) ON B.JOB_CODE=A.JOB_CODE AND B.ARTICLE_CODE='''+@CWHERE+'''
				WHERE A.JOB_NAME<>'''' AND ''''<>'''+ @CWHERE +''' 
				ORDER BY 1 DESC, JOB_ORDER, JOB_NAME,JOB_CODE'
				--AND (B.ARTICLE_CODE IN ('''+REPLACE(@CWHERE,',',''',''')+''')   OR B.JOB_CODE IS NULL)
				--AND B.MEMO_ID='''+@CMEMOID+'''
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD
	--IF (@CMEMOID<>'')
	--BEGIN
	--	SELECT CAST((CASE WHEN X.JOB_CODE IS  NULL THEN 0 ELSE 1 END) AS BIT) AS CHK, 
	--	Z.JOB_NAME,Z.JOB_CODE,ISNULL(X.JOB_ORDER,999) AS JOB_ORDER,
	--	Y.ROW_ID AS REF_ROW_ID,ISNULL(X.ROW_ID,'LATER') AS ROW_ID,Y.MEMO_ID
	--	FROM JOBS Z 
	--	JOIN ORD_PLAN_DET Y ON 1=1 AND Y.MEMO_ID=@CMEMOID
	--	LEFT OUTER JOIN ORD_PLAN_JOB X ON Z.JOB_CODE=X.JOB_CODE AND Y.ROW_ID=X.REF_ROW_ID
	--	WHERE Z.JOB_NAME<>''
	--	ORDER BY JOB_ORDER, Y.ROW_ID,Z.JOB_NAME
	--END
	--ELSE
	--BEGIN
	--	SELECT CAST((CASE WHEN X.JOB_CODE IS  NULL THEN 0 ELSE 1 END) AS BIT) AS CHK, 
	--	Z.JOB_NAME,Z.JOB_CODE,ISNULL(X.JOB_ORDER,999) AS JOB_ORDER,
	--	'LATER' AS REF_ROW_ID,'LATER' AS ROW_ID,'LATER'  AS MEMO_ID
	--	FROM JOBS Z 
	--	LEFT OUTER JOIN ART_JOBS X ON Z.JOB_CODE=X.JOB_CODE AND X.ARTICLE_CODE=@CWHERE
	--	WHERE Z.JOB_NAME<>'' 
	--	ORDER BY JOB_ORDER, Z.JOB_NAME
	--END
	
	GOTO LAST
	
LAST:    


END
