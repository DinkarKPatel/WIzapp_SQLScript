
CREATE Procedure SP_PRD_RECON_JOBWORKPMT
AS
BEGIN


		UPDATE A SET QUANTITY_IN_STOCK=B.XN_QTY
		FROM JOBWORK_PMT A  (NOLOCK)
		JOIN
		(
		  SELECT DEPT_ID,BIN_ID ,PRODUCT_CODE ,SUM(XN_QTY) AS XN_QTY
		  FROM
		  (
			SELECT LEFT(C.MEMO_ID,2) AS DEPT_ID,C.BIN_ID , A.PRODUCT_CODE ,CAST(1 AS INT) AS XN_QTY 
			FROM ORD_PLAN_BARCODE_DET A (NOLOCK)
			JOIN ORD_PLAN_DET B  (NOLOCK) ON A.REFROW_ID =B.ROW_ID 
			JOIN ORD_PLAN_MST C (NOLOCK) ON B.MEMO_ID =C.MEMO_ID 
			WHERE C.CANCELLED =0 
			UNION ALL
			SELECT LEFT(B.ISSUE_ID,2) AS DEPT_ID,A.BIN_ID ,
			 A.PRODUCT_CODE  ,SUM(A.QUANTITY*(-1)) AS XN_QTY
			FROM JOBWORK_ISSUE_DET A (NOLOCK) 
			JOIN JOBWORK_ISSUE_MST B (NOLOCK) ON A.ISSUE_ID =B.ISSUE_ID 
			WHERE B.CANCELLED =0 AND ISNULL(B.ISSUE_MODE ,0)=1
			GROUP BY A.PRODUCT_CODE ,LEFT(B.ISSUE_ID,2) ,A.BIN_ID 
			UNION ALL
			SELECT LEFT(B.RECEIPT_ID ,2) AS DEPT_ID,A.BIN_ID ,
			A.PRODUCT_CODE  ,SUM(A.QUANTITY) AS XN_QTY
			FROM JOBWORK_RECEIPT_DET A (NOLOCK) 
			JOIN JOBWORK_RECEIPT_MST B (NOLOCK) ON A.RECEIPT_ID  =B.RECEIPT_ID 
			WHERE B.CANCELLED =0 AND ISNULL(B.RECEIVE_MODE  ,0)=1
			GROUP BY A.PRODUCT_CODE , LEFT(B.RECEIPT_ID ,2),A.BIN_ID 
			UNION ALL
			SELECT  LEFT(B.MEMO_ID ,2) AS DEPT_ID,A.BIN_ID ,
			A.PRODUCT_CODE  ,SUM(A.QUANTITY*(-1)) AS XN_QTY
			FROM TRANSFER_TO_TRADING_DET  A (NOLOCK) 
			JOIN TRANSFER_TO_TRADING_MST  B (NOLOCK) ON A.MEMO_ID   =B.MEMO_ID 
			WHERE B.CANCELLED =0 
			GROUP BY A.PRODUCT_CODE ,LEFT(B.MEMO_ID ,2) ,A.BIN_ID 
		  ) A
		  GROUP BY DEPT_ID,BIN_ID ,PRODUCT_CODE 
		  ) B   ON A.PRODUCT_CODE =B.PRODUCT_CODE AND A.DEPT_ID =B.DEPT_ID AND A.BIN_ID =B.BIN_ID 
          WHERE A.QUANTITY_IN_STOCK <>ISNULL(B.XN_QTY ,0)
        --  AND ISNULL(B.XN_QTY ,0) IN(0,1)

	
		
		   IF OBJECT_ID('TEMPDB..#TMPJOBS','U') IS NOT NULL
			  DROP TABLE #TMPJOBS

			SELECT PRODUCT_CODE ,JOB_CODE  
			INTO #TMPJOBS
			FROM JOBWORK_ISSUE_DET A (NOLOCK) 
			JOIN JOBWORK_ISSUE_MST B (NOLOCK) ON A.ISSUE_ID =B.ISSUE_ID 
			WHERE B.CANCELLED =0 
			AND ISNULL(B.ISSUE_MODE ,0)=1 
			--AND PRODUCT_CODE='LU700E#000171'

			;with cte as
			(
			SELECT A.PRODUCT_CODE ,D.JOB_CODE  ,D.JOB_ORDER  ,
			sr=row_number() over (partition by a.PRODUCT_CODE order by D.JOB_ORDER desc)
			FROM ORD_PLAN_BARCODE_DET A (NOLOCK)
			JOIN ORD_PLAN_DET B(NOLOCK) ON A.REFROW_ID =B.ROW_ID 
			JOIN ORD_PLAN_MST C (NOLOCK) ON C.MEMO_ID =B.MEMO_ID 
			JOIN ORD_PLAN_JOB D (NOLOCK) ON C.MEMO_ID =D.MEMO_ID 
			JOIN #TMPJOBS TMP ON TMP.PRODUCT_CODE =A.PRODUCT_CODE AND D.JOB_CODE =TMP.JOB_CODE 
			WHERE C.CANCELLED =0
			--AND A.PRODUCT_CODE='LU700E#000171'
			)


			UPDATE A SET JOB_CODE=B.JOB_CODE 
			FROM JOBWORK_PMT A (NOLOCK)
			JOIN CTE B ON A.PRODUCT_CODE =B.PRODUCT_CODE 
			WHERE B.SR=1 
			AND A.JOB_CODE <>B.JOB_CODE 

			--  IF OBJECT_ID('TEMPDB..#TMPJOBWORKRate','U') IS NOT NULL
	  --          DROP TABLE #TMPJOBWORKRate
	   				   
			--SELECT A.PRODUCT_CODE,SUM(A.JOB_RATE ) AS JOB_RATE
			--INTO #TMPJOBWORKRate
			--from  JOBWORK_RECEIPT_DET A (NOLOCK) 
			--JOIN JOBWORK_RECEIPT_MST  B (NOLOCK) ON A.RECEIPT_ID =B.RECEIPT_ID 
			--WHERE B.CANCELLED =0 
			--GROUP BY A.PRODUCT_CODE

			--UPDATE A SET FG_VALUE=ISNULL(TMP.JOB_RATE,0) 
			--FROM JOBWORK_PMT A (NOLOCK)
			--JOIN #TMPJOBWORKRate TMP ON A.PRODUCT_CODE =TMP.PRODUCT_CODE 



			-- IF OBJECT_ID('TEMPDB..#TMPPRODUCT','U') IS NOT NULL
		 --       DROP TABLE #TMPPRODUCT
		   
			--   SELECT DISTINCT  A.PRODUCT_CODE,A.QUANTITY ,A.job_code 
			--        INTO #TMPPRODUCT 
			--   FROM JOBWORK_ISSUE_DET  A (NOLOCK)
			--   JOIN JOBWORK_ISSUE_MST  B (NOLOCK) ON A.ISSUE_ID  =B.ISSUE_ID
			--   WHERE B.CANCELLED =0
					
				
			--	 IF OBJECT_ID ('TEMPDB..#TEMPISSUED','U') IS NOT NULL
   --               DROP TABLE #TEMPISSUED


			--	SELECT a1.MEMO_ID ,  a6.ORD_PLAN_BOM_DET_ROW_ID , A1.ARTICLE_CODE ,A1.PARA1_CODE ,A1.PARA2_CODE,
			--	A1.AVG_QUANTITY+ISNULL(A1.ADD_AVG_QUANTITY,0) AS  AVG_QUANTITY,
				
			--	SUM((case when isnull(a5.issue_type,0)=0 then 1  else -1 end )* (CASE WHEN ISNULL(UC.CONVERSION_VALUE,0) =0 THEN ISNULL(a6.QUANTITY,0)
	  --           ELSE (ISNULL(a6.QUANTITY,0))/ISNULL(UC.CONVERSION_VALUE,0) END)) qty,
			----	SUM(A6.QUANTITY) AS ISSUED_QTY,
			--	isnull(A4.PURCHASE_PRICE,0) AS RATE
			--	INTO #TEMPISSUED
			--	FROM BOM_ISSUE_DET A4 (NOLOCK) 
			--	JOIN BOM_ISSUE_MST A5  (NOLOCK) ON A5.ISSUE_ID=A4.ISSUE_ID
			--	JOIN BOM_ISSUE_REF A6  (NOLOCK) ON A5.ISSUE_ID=A6.BOM_ISSUE_ID AND A4.ROW_ID=A6.BOM_DET_ROW_ID
			--	JOIN ORD_PLAN_BOM_DET A1  (NOLOCK) ON A1.ROW_ID=A4.ORD_PLAN_BOM_DET_ROW_ID --and A1.JOB_CODE='DEF0002'
			--	JOIN SKU ON SKU.PRODUCT_CODE =A4.PRODUCT_CODE 
			--	JOIN article art  (NOLOCK) ON art.article_code   = a1.ARTICLE_CODE 
			--	LEFT OUTER JOIN UOM_CONVERSION UC (NOLOCK) ON UC.UOM_CODE=art.UOM_CODE
   --             LEFT OUTER JOIN BOM_UOM BU (NOLOCK) ON BU.CONVERSION_UOM_CODE=UC.CONVERSION_UOM_CODE  
			--	--WHERE  A5.ISSUE_ID  =@CKEYFIELDVAL1
			--	GROUP BY a1.MEMO_ID , a6.ORD_PLAN_BOM_DET_ROW_ID ,A1.ARTICLE_CODE ,A1.PARA1_CODE ,A1.PARA2_CODE,A1.AVG_QUANTITY+ISNULL(A1.ADD_AVG_QUANTITY,0),isnull(A4.PURCHASE_PRICE,0)
				
			--	 IF OBJECT_ID ('TEMPDB..#TEMPBOMVALUE','U') IS NOT NULL
   --               DROP TABLE #TEMPBOMVALUE

			--	SELECT A.MEMO_ID  ,SUM(QTY*RATE )/TOTAL_QTY AS Rate
			--	into #TEMPBOMVALUE
			--	FROM
			--	(
			--	SELECT D.MEMO_ID ,COUNT(*) AS TOTAL_QTY 
		 --      	FROM #TMPPRODUCT A
			--	JOIN ORD_PLAN_BARCODE_DET B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE 
			--	JOIN ORD_PLAN_DET C (NOLOCK) ON B.REFROW_ID =C.ROW_ID 
			--	JOIN ORD_PLAN_MST D (NOLOCK) ON C.MEMO_ID =D.MEMO_ID 
			--	WHERE D.CANCELLED =0
			--	GROUP BY D.MEMO_ID 
			--	) A
			--	JOIN #TEMPISSUED B ON A.MEMO_ID =B.MEMO_ID 
			--	GROUP BY A.MEMO_ID ,TOTAL_QTY



				
				
				
			--	IF EXISTS  (SELECT TOP 1 'U' FROM #TEMPBOMVALUE)
		 --       BEGIN
				
				--	 SELECT PMT.PRODUCT_CODE,BOM.RATE ,PMT.BOM_VALUE 
				--	  FROM JOBWORK_PMT PMT
				--	  JOIN #TMPPRODUCT P ON PMT.PRODUCT_CODE =P.PRODUCT_CODE
				--	  JOIN ORD_PLAN_BARCODE_DET B (NOLOCK) ON P.PRODUCT_CODE =B.PRODUCT_CODE 
				--	  JOIN ORD_PLAN_DET C (NOLOCK) ON B.REFROW_ID =C.ROW_ID 
				--	  JOIN ORD_PLAN_MST D (NOLOCK) ON C.MEMO_ID =D.MEMO_ID 
				--	  JOIN #TEMPBOMVALUE BOM ON BOM.MEMO_ID =D.MEMO_ID 
				--	  WHERE D.CANCELLED =0
				
					
			--	end

       
          
          
END






