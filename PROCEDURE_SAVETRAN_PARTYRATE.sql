CREATE PROCEDURE SAVETRAN_PARTYRATE--(LocId 3 digit change by Sanjay:06-11-2024)
(
	@NUPDATEMODE		NUMERIC(1,0),
	@NSPID				INT,
	@CMEMONOPREFIX		VARCHAR(50),
	@CFINYEAR			VARCHAR(10),
	@CMACHINENAME		VARCHAR(100)='',
	@CWINDOWUSERNAME	VARCHAR(100)='',
	@CWIZAPPUSERCODE	VARCHAR(10)='0000000',
	@CXNMEMOID			VARCHAR(40)=''	
)
--WITH ENCRYPTION
AS
BEGIN
	DECLARE @CTEMPDBNAME			VARCHAR(100),
			@CMASTERTABLENAME		VARCHAR(100),
			@CDETAILTABLENAME1		VARCHAR(100),
			@CDETAILTABLENAME2		VARCHAR(100),
			@CTEMPMASTERTABLENAME	VARCHAR(100),
			@CTEMPDETAILTABLENAME1	VARCHAR(100),
			@CTEMPDETAILTABLENAME2	VARCHAR(100),
			@CTEMPMASTERTABLE		VARCHAR(100),
			@CTEMPDETAILTABLE1		VARCHAR(100),
			@CTEMPDETAILTABLE2		VARCHAR(100),
			@CERRORMSG				VARCHAR(500),
			@LDONOTUPDATESTOCK		BIT,
			@CKEYFIELD1				VARCHAR(50),
			@CKEYFIELDVAL1			VARCHAR(50),
			@CMEMONO				VARCHAR(20),
			@NMEMONOLEN				NUMERIC(20,0),
			@CMEMONOVAL				VARCHAR(50),
			@CMEMODEPTID			VARCHAR(4),
			@CLOCATIONID			VARCHAR(4),
			@CHODEPTID				VARCHAR(4),
			@CCMD					NVARCHAR(4000),
			@CCMDOUTPUT				NVARCHAR(4000),
			@NSAVETRANLOOP			BIT,
			@NSTEP					INT
	DECLARE @OUTPUT TABLE (ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))

	SET @NSTEP = 10		-- SETTTING UP ENVIRONMENT
	-- TEMPORARY DATABASE Discarded now onwards as per Meeting on 30-10-2020 mentioned in Client issues List
	SET @CTEMPDBNAME = ''

	SET @CMASTERTABLENAME	= 'PARTY_RATE_MST'
	SET @CDETAILTABLENAME1	= 'PARTY_RATE_DET'
	--SET @CDETAILTABLENAME2	= 'PARTY_RATE_LOC'
	
	SET @CTEMPMASTERTABLENAME	= 'TEMP_PARTY_RATE_MST_'+LTRIM(RTRIM(STR(@NSPID)))
	SET @CTEMPDETAILTABLENAME1	= 'TEMP_PARTY_RATE_DET_'+LTRIM(RTRIM(STR(@NSPID)))
	--SET @CTEMPDETAILTABLENAME2	= 'TEMP_PARTY_RATE_LOC_'+LTRIM(RTRIM(STR(@NSPID)))
	
	
	SET @CTEMPMASTERTABLE	= @CTEMPDBNAME + @CTEMPMASTERTABLENAME
	SET @CTEMPDETAILTABLE1	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME1
	--SET @CTEMPDETAILTABLE2	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME2
	
	SET @CERRORMSG			= ''
	SET @LDONOTUPDATESTOCK	= 0
	SET @CKEYFIELD1			= 'MEMO_ID'
	SET @CMEMONO			= 'MEMO_NO'
	SET @NMEMONOLEN			= 10
	
	IF @NUPDATEMODE IN (1,2)
	BEGIN
		SET @cCmd=N'SELECT TOP 1 @cLocationId=location_code FROM '+@CTEMPMASTERTABLE
		EXEC SP_EXECUTESQL @cCmd,N'@cLocationId varchar(4) output',@cLocationId OUTPUT
	END
	ELSE
	BEGIN
		SELECT TOP 1 @cLocationId=location_code FROM PARTY_RATE_MST (NOLOCK) WHERE MEMO_ID=@CXNMEMOID
	END
		
	SELECT @CHODEPTID		= [VALUE] FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'		

	BEGIN TRANSACTION
	
	BEGIN TRY
		
		SET @NSTEP = 20

		IF ISNULL(@CXNMEMOID,'') = '' AND @NUPDATEMODE IN (3)
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' MEMO ID REQUIRED '
			GOTO END_PROC  		
		END
		
		IF @NUPDATEMODE=3 --DELETE MODE
		BEGIN
			SET @NSTEP = 30		
			DELETE FROM PARTY_RATE_DET WHERE MEMO_ID = @CXNMEMOID
			DELETE FROM PARTY_RATE_MST WHERE MEMO_ID = @CXNMEMOID
			DELETE FROM PARTY_RATE_LOC WHERE MEMO_ID = @CXNMEMOID
			GOTO END_PROC
		END
		
		SET @NSTEP = 40
		
		--GETTING DEPT_ID FROM TEMP MASTER TABLE
		SET @CCMD = 'SELECT  @CKEYFIELDVAL1 = '+@CKEYFIELD1+' FROM ' + @CTEMPMASTERTABLE
		EXEC SP_EXECUTESQL @CCMD, N'@CKEYFIELDVAL1 VARCHAR(50) OUTPUT',@CKEYFIELDVAL1 OUTPUT
		

		-- START UPDATING XN TABLES
		IF @NUPDATEMODE = 1 -- ADDMODE	
		BEGIN	
			SET @NSTEP = 50		-- GENERATING NEW KEY

			 IF ISNULL(@CLOCATIONID,'')=''
			 BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' LOCATION ID CAN NOT BE BLANK  '  
				GOTO END_PROC    
			 END
			
			IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
			BEGIN
			--	-- GENERATING NEW MRR_NO		
			--	SET @NSAVETRANLOOP=0
			--	WHILE @NSAVETRANLOOP=0
			--	BEGIN
			--		EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,
			--						@CFINYEAR,0, @CMEMONOVAL OUTPUT   
					
			--		SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+' 
			--								WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' 
			--								AND FIN_YEAR = '''+@CFINYEAR+''' )
			--						SET @NLOOPOUTPUT=0
			--					ELSE
			--						SET @NLOOPOUTPUT=1'
			--		PRINT @CCMD
			--		EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
			--	END

			--	IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
			--	BEGIN
			--		  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'	
			--		  GOTO END_PROC  		
			--	END

			--	SET @NSTEP = 60		-- GENERATING NEW ID

			--	-- GENERATING NEW ORDER ID
			--	SET @CKEYFIELDVAL1 = @CLOCATIONID + @CFINYEAR+ REPLICATE('0', 15-LEN(LTRIM(RTRIM(@CMEMONOVAL)))) + LTRIM(RTRIM(@CMEMONOVAL))
			--	IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
			--	BEGIN
			--		  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
			--		  GOTO END_PROC
			--	END
				
			--	SET @NSTEP = 70
			--	-- CHECK WETHER THE MEMO ID IS STILL LATER
			--	IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
			--	BEGIN
			--		  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
			--		  GOTO END_PROC
			--	END
			
			  SET @CKEYFIELDVAL1=''
			  SET @CKEYFIELDVAL1=@CHODEPTID+RTRIM(LTRIM(CONVERT(VARCHAR(40),NEWID())))
			  

				SET @NSTEP = 80		-- UPDATING NEW ID INTO TEMP TABLES

				-- UPDATING NEWLY GENERATED MEMO NO AND MEMO ID IN BUYER ORDER MST AND BUYER ORDER DET TEMP TABLES
				SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''''
				PRINT @CCMD		
				EXEC SP_EXECUTESQL @CCMD
				
				SET @NSTEP = 90
				SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE LEFT(MEMO_ID,5) = ''LATER'''
				PRINT @CCMD	
				EXEC SP_EXECUTESQL @CCMD
				
				SET @NSTEP = 100
				SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET ROW_ID = NEWID() WHERE LEFT(ROW_ID,5) = ''LATER'''
				PRINT @CCMD	
				EXEC SP_EXECUTESQL @CCMD
				
				
				SET @NSTEP = 90
				SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE2 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE MEMO_ID = ''LATER'''
				PRINT @CCMD	
				EXEC SP_EXECUTESQL @CCMD
				
				
			END
		END					-- END OF ADDMODE
		ELSE				-- CALLED FROM EDITMODE
		BEGIN				-- START OF EDITMODE
			
			SET @NSTEP = 110		-- GETTING ID INFO FROM TEMP TABLE
			
			SET @CKEYFIELDVAL1 = @CXNMEMOID
			
			IF (@CKEYFIELDVAL1 IS NULL ) 
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'
				  GOTO END_PROC  		
			END
			
			SET @NSTEP = 120		
			
			SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE LEFT(MEMO_ID,5) = ''LATER'''
			PRINT @CCMD	
			EXEC SP_EXECUTESQL @CCMD
			
			SET @NSTEP = 130
			SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET ROW_ID = NEWID() WHERE LEFT(ROW_ID,5) = ''LATER'''
			PRINT @CCMD	
			EXEC SP_EXECUTESQL @CCMD
			
			
				
			SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE2 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE MEMO_ID = ''LATER'''
			PRINT @CCMD	
			EXEC SP_EXECUTESQL @CCMD
			
			SET @NSTEP = 140
			
			DELETE FROM PARTY_RATE_DET WHERE MEMO_ID = @CKEYFIELDVAL1
			DELETE FROM PARTY_RATE_LOC WHERE MEMO_ID = @CKEYFIELDVAL1
			
	    END					-- END OF EDITMODE

		SET @NSTEP = 150
		EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPMASTERTABLENAME
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CMASTERTABLENAME
			, @CKEYFIELD1	= @CKEYFIELD1
			, @BALWAYSUPDATE = 1
			
		
		SET @NSTEP = 160		-- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES

		EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPDETAILTABLENAME1
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CDETAILTABLENAME1
			, @CKEYFIELD1	= 'ROW_ID'
			, @BALWAYSUPDATE = 1
			
			
			
			
		--EXEC UPDATEMASTERXN 
		--	  @CSOURCEDB	= @CTEMPDBNAME
		--	, @CSOURCETABLE = @CTEMPDETAILTABLENAME2
		--	, @CDESTDB		= ''
		--	, @CDESTTABLE	= @CDETAILTABLENAME2
		--	, @CKEYFIELD1	= @CKEYFIELD1
		--	, @BALWAYSUPDATE = 1
			
	END TRY
	BEGIN CATCH
		SET @CERRORMSG = 'P:- SAVETRAN_PARTYRATE STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		GOTO END_PROC
	END CATCH
	
END_PROC:
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')=''
			COMMIT TRANSACTION
		ELSE
			ROLLBACK
	END
	
	INSERT @OUTPUT ( ERRMSG, MEMO_ID)
		VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )

	SELECT * FROM @OUTPUT	
	
	
	IF ISNULL(@CERRORMSG,'') = ''
	BEGIN
		SET @CCMD = N'IF OBJECT_ID('''+@CTEMPMASTERTABLE+''',''U'') IS NOT NULL
					DROP TABLE '+@CTEMPMASTERTABLE+'
				IF OBJECT_ID('''+@CTEMPDETAILTABLE1+''',''U'') IS NOT NULL
					DROP TABLE '+@CTEMPDETAILTABLE1+'
					IF OBJECT_ID('''+@CTEMPDETAILTABLE2+''',''U'') IS NOT NULL
					DROP TABLE '+@CTEMPDETAILTABLE2+''
					
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
    END
END						
------------------------------------------------------ END OF PROCEDURE SAVETRAN_PICKLIST
