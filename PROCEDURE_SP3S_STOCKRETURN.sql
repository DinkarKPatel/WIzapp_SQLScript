CREATE PROCEDURE SP3S_STOCKRETURN
(  
  @NQUERYID INT,  
  @CMEMO_ID VARCHAR(50) ,
  @BCOMPLETEDCHECK BIT=0 
)  
AS  
BEGIN  
     

	 --Calling Procedure for Party Purchase
	 IF EXISTS (SELECT TOP 1 'U' FROM XNRECONM A (NOLOCK) WHERE A.RECON_ID =@CMEMO_ID AND XN_TYPE ='PUR_PARTY' )
	 BEGIN
	        
			EXEC SP3S_STOCKRETURN_PUR 
			@NQUERYID=@NQUERYID,
			@CMEMO_ID=@CMEMO_ID,
			@BCOMPLETEDCHECK=@BCOMPLETEDCHECK

			GOTO END_PROC  
	 END

--calling for All Git Related Transactions

	 DECLARE @XN_TYPE VARCHAR(10)  

SELECT CAST('' AS VARCHAR(50)) RECON_ID,CAST(0 AS NUMERIC(20,3))  AS QUANTITY,
          CAST(0 AS NUMERIC(20,3))  AS RECON_QTY ,
		  CAST(0 AS NUMERIC(20,3))   as SHORTAGE_QTY,
		  CAST(0 AS NUMERIC(20,3))   as Excess_QTY
   INTO #tmpRecoAll
   WHERE 1=2

IF @NQUERYID=4  
   GOTO LBLCHKCHALLANSTATUS
ELSE IF @NQUERYID=5  
    GOTO LBLCHALLAN



IF @NQUERYID<>2  
BEGIN  
	 
	 print 'step #1:'+convert(varchar,getdate(),113)	      
	      
	 SELECT MANUAL_INV_NO AS SOURCE_MEMO_NO, CN_NO AS MEMO_NO,RECON_ID=CAST('' AS VARCHAR(100)),CN_ID AS MEMO_ID,  
	 RECEIPT_DT  ,location_Code 
	 INTO #TMPMEMO  
	 FROM CNM01106   WHERE 1=2  
	   
	 print 'step #2:'+convert(varchar,getdate(),113)   
	 SELECT W8_CHALLAN_ID='',BILL_DT=inv_dt,CASHDISCOUNTAMOUNT=0,TERMS='',MRR_ID='',MRR_NO='',  
		 PRODUCT_CODE,QUANTITY,PURCHASE_PRICE=RATE,AMOUNT=(RATE*QUANTITY),ROW_ID,LAST_UPDATE,DEPT_ID,RM_ID='LATER',SRNO=CAST(0 AS INT),RFNET,RFNET_WOTAX  
		,UOM_CODE='',ITEM_FORM_ID,ITEM_TAX_PERCENTAGE,ITEM_TAX_AMOUNT,BILL_NO=inv_no,DISCOUNT_PERCENTAGE  
		,DISCOUNT_AMOUNT,GROSS_PURCHASE_PRICE=0,PS_ID='',PUR_DISCOUNT_PERCENTAGE=0,PUR_DISCOUNT_AMOUNT=0,PUR_PURCHASE_PRICE=0  
		,REMARKS='',INVOICE_QUANTITY,SCHEME_QUANTITY,MANUAL_DISCOUNT,MANUAL_RATE,BILL_LEVEL_TAX_METHOD,  
		 EXCISE_DUTY_AMOUNT=0,AUTO_SRNO,RATE,INV_RATE=0,DN_DISCOUNT_PERCENTAGE=0,DN_DISCOUNT_AMOUNT=0,BOX_NO=0,BOX_DT=NULL  
		,BIN_ID,PRTAMOUNT=0,PID_ROW_ID=''  
	 INTO #TMPRMDDETAILS  
	 FROM CND01106 WHERE 1=2  
	  
	  print 'step #3:'+convert(varchar,getdate(),113)       
	  SELECT INV_ID=cast('LATER' as varchar(50)), PRODUCT_CODE, QUANTITY, RATE, DISCOUNT_PERCENTAGE, DISCOUNT_AMOUNT, DEPT_ID, ROW_ID,   
	  LAST_UPDATE, PRINT_LABEL, RFNET, RFNET_WOTAX, COMPANY_CODE='01', NET_RATE, EMP_CODE, BOX_NO=0, MRP=RATE, BOX_DT=NULL,   
	  ITEM_TAX_PERCENTAGE, ITEM_TAX_AMOUNT, ITEM_FORM_ID, PS_ID='', EMP_CODE1, EMP_CODE2, INVOICE_QUANTITY, SCHEME_QUANTITY,   
	  MANUAL_DISCOUNT, AUTO_SRNO, PARTY_MRP=0, REMARKS='', WS_PRICE=RATE, BIN_ID, W8_CHALLAN_ID='', CUSTOM_DUTY_AMT,   
	  TOTAL_CUSTOM_DUTY_AMT, CVD_AMT, CVD_PER, CUSTOM_DUTY_PER, PICKLIST_ARTICLE_CODE='', PICKLIST_PARA1_CODE='',   
	  PICKLIST_PARA2_CODE='', PICK_LIST_ID='', MANUAL_RATE, ORDER_ID='', REF_WPS_DET_ROWID =''  
	  INTO #TMPINDDETAILS  
	  FROM CND01106 WHERE 1=2  
	    
    
    
    SELECT TOP 1 @XN_TYPE=XN_TYPE FROM XNRECONM A (NOLOCK) 
	WHERE (@BCOMPLETEDCHECK=1 OR RECONCILED=1) AND A.RECON_ID =@CMEMO_ID  
    

	--select 'check @XN_TYPE', @XN_TYPE xn_type  
    IF @XN_TYPE='WSR'   
    BEGIN  
		
		print 'step #4:'+convert(varchar,getdate(),113)
        INSERT INTO #TMPMEMO(SOURCE_MEMO_NO,MEMO_NO,RECON_ID,MEMO_ID,RECEIPT_DT,location_Code )  
        SELECT case when  isnull(B.MANUAL_dn_NO,'') <>'' then MANUAL_dn_NO else  b.manual_inv_no end  ,CN_NO,
		A.RECON_ID,CN_ID,B.RECEIPT_DT,B.location_Code  FROM XNRECONMEMO  (NOLOCK)A  
        JOIN CNM01106 (NOLOCK) B  ON A.XN_ID =B.CN_ID   
        WHERE A.RECON_ID =@CMEMO_ID  


	
  

	IF OBJECT_ID('TEMPDB..#TMPRECOWSR','U') IS NOT NULL
	   DROP TABLE #TMPRECOWSR
		
		print 'step #5:'+convert(varchar,getdate(),113)

       SELECT  a.memo_id,a.recon_id,
	   b.PRODUCT_CODE,b.gppval,b.ppval,
	   B.QUANTITY inwards_qty,ISNULL(C.QUANTITY,0) as scan_qty
	   INTO #TMPRECOWSR 
	   FROM #TMPMEMO A  
	   JOIN 
	   (SELECT   LEFT(b.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',b.PRODUCT_CODE)-1,-1),LEN(b.PRODUCT_CODE ))) AS PRODUCT_CODE,
	    sum(quantity) quantity,sum(net_rate *quantity) ppval,sum(rate*quantity) gppval
	    FROM cnd01106 b (NOLOCK)
		JOIN #TMPMEMO a ON b.CN_ID  =a.Memo_ID  
		GROUP BY LEFT(b.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',b.PRODUCT_CODE)-1,-1),LEN(b.PRODUCT_CODE )))
	   ) b on 1=1	
	   LEFT JOIN
	   (
	   SELECT B.RECON_ID ,
          LEFT(b.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',b.PRODUCT_CODE)-1,-1),LEN(b.PRODUCT_CODE ))) AS PRODUCT_CODE,
          SUM(B.QUANTITY) AS QUANTITY
       FROM  XNRECONP B (NOLOCK) 
	   WHERE RECON_ID =@CMEMO_ID  
       GROUP BY B.RECON_ID ,
       LEFT(b.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',b.PRODUCT_CODE)-1,-1),LEN(b.PRODUCT_CODE )))
	   
	  ) C  ON A.RECON_ID =C.RECON_ID 
	   and b.PRODUCT_CODE =c.PRODUCT_CODE 
	   WHERE  A.RECON_ID =@CMEMO_ID  





	  print 'step #5:'+convert(varchar,getdate(),113)    
    INSERT INTO #TMPRMDDETAILS   
       SELECT '' as W8_CHALLAN_ID, BILL_DT=GETDATE (), 0 CASHDISCOUNTAMOUNT, TERMS='', 
	   MRR_ID='',   
	   MRR_NO='',PRODUCT_CODE, 
	   SUM(a.inwards_qty-a.scan_qty) AS QUANTITY,0 PURCHASE_PRICE, 
	   AMOUNT=0,
	    ROW_ID='LATER',   
	   LAST_UPDATE=GETDATE (), DEPT_ID=b.location_Code ,   
	   RM_ID='LATER',0 SRNO,SUM((ppval/inwards_qty)*(a.inwards_qty-a.scan_qty)) RFNET,
	   SUM((ppval/inwards_qty)*(a.inwards_qty-a.scan_qty)) RFNET_WOTAX, 
	   UOM_CODE='',   
	   ITEM_FORM_ID='0000000',   
	   ITEM_TAX_PERCENTAGE=0,   
	   ITEM_TAX_AMOUNT=0, BILL_NO=manual_inv_no, 0 DISCOUNT_PERCENTAGE,0 DISCOUNT_AMOUNT, 
	   0 as gross_PURCHASE_PRICE,   
	   PS_ID='', PUR_DISCOUNT_PERCENTAGE=0, PUR_DISCOUNT_AMOUNT=0, PUR_PURCHASE_PRICE=0 , 
	   REMARKS='',   
	   SUM(a.inwards_qty-a.scan_qty) AS INVOICE_QUANTITY, CAST(0 AS NUMERIC(10,2)) AS SCHEME_QUANTITY, 
	   0 MANUAL_DISCOUNT, MANUAL_RATE=0, BILL_LEVEL_TAX_METHOD=1,   
	   EXCISE_DUTY_AMOUNT=0,0 AUTO_SRNO, RATE=0, INV_RATE=0, DN_DISCOUNT_PERCENTAGE=0,   
	   DN_DISCOUNT_AMOUNT=0,   
	   1 BOX_NO, BOX_DT=NULL,b.BIN_ID,0 as PRTAMOUNT , PID_ROW_ID =''  
	   FROM #TMPRECOWSR A  
	   JOIN cnm01106 b on a.MEMO_ID=b.cn_id 
       where (a.inwards_qty-a.scan_qty)>0
	   GROUP BY B.location_Code , product_code,bin_id,manual_inv_no


       
      print 'step #10:'+convert(varchar,getdate(),113)
	  UPDATE a SET purchase_price=b.ppval/inwards_qty,GROSS_PURCHASE_PRICE=b.ppval/inwards_qty
	  FROM #TMPRMDDETAILS a
	  JOIN  #TMPRECOWSR b ON a.product_code=b.PRODUCT_CODE



	 print 'step #6:'+convert(varchar,getdate(),113)	

     INSERT INTO #TMPINDDETAILS  
	  SELECT INV_ID='LATER', 
	  LEFT(b.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',b.PRODUCT_CODE)-1,-1),LEN(b.PRODUCT_CODE ))) as PRODUCT_CODE, 
	  SUM(B.QUANTITY)-SUM(ISNULL(C.QUANTITY,0)) AS QUANTITY,
	  RATE, DISCOUNT_PERCENTAGE, DISCOUNT_AMOUNT, DEPT_ID, ROW_ID='LATER',   
	  B.LAST_UPDATE, PRINT_LABEL, RFNET, RFNET_WOTAX, COMPANY_CODE='',
	   NET_RATE, 
	   EMP_CODE, BOX_NO=0, MRP=RATE, BOX_DT=NULL,   
	  ITEM_TAX_PERCENTAGE, ITEM_TAX_AMOUNT,   
	  ITEM_FORM_ID=CASE WHEN (ISNULL(ITEM_FORM_ID,'')='' OR ISNULL(ITEM_FORM_ID,'0000000')='0000000') THEN '8888888' ELSE ITEM_FORM_ID END,  
	  PS_ID='', EMP_CODE1, EMP_CODE2, SUM(B.QUANTITY)-SUM(ISNULL(C.QUANTITY,0)) AS INVOICE_QUANTITY, CAST(0 AS NUMERIC(10,2)) AS SCHEME_QUANTITY,
	  MANUAL_DISCOUNT, AUTO_SRNO, PARTY_MRP=0, REMARKS='', WS_PRICE=RATE, BIN_ID, W8_CHALLAN_ID='', CUSTOM_DUTY_AMT,   
	  TOTAL_CUSTOM_DUTY_AMT, CVD_AMT, CVD_PER, CUSTOM_DUTY_PER, PICKLIST_ARTICLE_CODE='', PICKLIST_PARA1_CODE='',   
	  PICKLIST_PARA2_CODE='', PICK_LIST_ID='', MANUAL_RATE, ORDER_ID='', REF_WPS_DET_ROWID =''    
	  FROM #TMPMEMO A  
	  JOIN CND01106 B (NOLOCK) ON A.MEMO_ID =B.CN_ID  
	  LEFT JOIN
	   (
	   SELECT B.RECON_ID ,
          LEFT(b.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',b.PRODUCT_CODE)-1,-1),LEN(b.PRODUCT_CODE ))) AS PRODUCT_CODE,
          SUM(B.QUANTITY) AS QUANTITY
       FROM  XNRECONP B (NOLOCK) 
	   WHERE RECON_ID =@CMEMO_ID 
       GROUP BY B.RECON_ID ,
       LEFT(b.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',b.PRODUCT_CODE)-1,-1),LEN(b.PRODUCT_CODE )))
	   
	  ) C  ON A.RECON_ID =C.RECON_ID 
	   and LEFT(b.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',b.PRODUCT_CODE)-1,-1),LEN(b.PRODUCT_CODE ))) =c.PRODUCT_CODE 
	   
	  --LEFT OUTER JOIN XNRECONP C (NOLOCK) ON A.RECON_ID =C.RECON_ID 
	  --AND LEFT(b.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',b.PRODUCT_CODE)-1,-1),LEN(b.PRODUCT_CODE ))) =LEFT(c.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',c.PRODUCT_CODE)-1,-1),LEN(c.PRODUCT_CODE )))   
	  --AND B.PRODUCT_CODE =C.PRODUCT_CODE   
	  WHERE  A.RECON_ID =@CMEMO_ID  
	  --AND C.RECON_ID IS NULL 
	  GROUP BY  LEFT(b.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',b.PRODUCT_CODE)-1,-1),LEN(b.PRODUCT_CODE ))), 
	  RATE, DISCOUNT_PERCENTAGE, DISCOUNT_AMOUNT, DEPT_ID,    
	  B.LAST_UPDATE, PRINT_LABEL, RFNET, RFNET_WOTAX,  NET_RATE, EMP_CODE,RATE,   
	  ITEM_TAX_PERCENTAGE, ITEM_TAX_AMOUNT,   
	  CASE WHEN (ISNULL(ITEM_FORM_ID,'')='' OR ISNULL(ITEM_FORM_ID,'0000000')='0000000') THEN '8888888' ELSE ITEM_FORM_ID END,  
	  EMP_CODE1, EMP_CODE2, INVOICE_QUANTITY, SCHEME_QUANTITY,   
	  MANUAL_DISCOUNT, AUTO_SRNO,RATE, BIN_ID,CUSTOM_DUTY_AMT,   
	  TOTAL_CUSTOM_DUTY_AMT, CVD_AMT, CVD_PER, CUSTOM_DUTY_PER,  
	  MANUAL_RATE
	  HAVING  SUM(B.QUANTITY)-SUM(ISNULL(C.QUANTITY,0))>0


	  print 'steps #7:'+convert(varchar,getdate(),113)  
	  UPDATE A SET PRODUCT_CODE= B.PRODUCT_CODE
	  FROM #TMPINDDETAILS A
	  JOIN
	  (
		 SELECT PRODUCT_CODE ,QUANTITY  FROM #TMPMEMO A  
		 JOIN CND01106 B (NOLOCK) ON A.MEMO_ID =B.CN_ID 
		 WHERE CHARINDEX('@',PRODUCT_CODE)<>0
	   ) B ON A.PRODUCT_CODE =LEFT(B.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',B.PRODUCT_CODE)-1,-1),LEN(B.PRODUCT_CODE )))
	  WHERE A.QUANTITY <=B.QUANTITY
  
  INSERT INTO #tmpRecoAll(RECON_ID,QUANTITY,RECON_QTY ,SHORTAGE_QTY,Excess_QTY)
SELECT RECON_ID,SUM(inwards_qty) AS QUANTITY,
          SUM(scan_qty) AS RECON_QTY ,
		  sum(case when inwards_qty-scan_qty>0 then inwards_qty-scan_qty else 0 end ) as SHORTAGE_QTY,
		  sum(case when inwards_qty-scan_qty<0 then abs(inwards_qty-scan_qty) else 0 end ) as Excess_QTY
   FROM #TMPRECOWSR A 
  -- where inwards_qty-isnull(scan_qty,0)>0
   group by RECON_ID
      
    END  
    ELSE IF @XN_TYPE='PUR'  
    BEGIN  
         
		 print 'step #8:'+convert(varchar,getdate(),113)
        INSERT INTO #TMPMEMO(SOURCE_MEMO_NO,MEMO_NO,RECON_ID,MEMO_ID ,RECEIPT_DT,location_Code )  
        SELECT (CASE WHEN B.inv_mode=2 then B.INV_NO else B.mrr_no END),MRR_NO,A.RECON_ID,B.MRR_ID,B.RECEIPT_DT ,b.challan_source_location_code 
		FROM XNRECONMEMO  (NOLOCK) A  
        JOIN PIM01106 (NOLOCK) B  ON A.XN_ID =B.MRR_ID   
        WHERE A.RECON_ID =@CMEMO_ID--'0101117000000100000019'  

		
         --select 'chk memo',* from #TMPMEMO 

		 IF OBJECT_ID('TEMPDB..#TMPRECO','U') IS NOT NULL
		    DROP TABLE #TMPRECO
		
		print 'step #9:'+convert(varchar,getdate(),113)
       SELECT  a.memo_id,a.recon_id,
	   b.PRODUCT_CODE,b.gppval,b.ppval,  
	   B.QUANTITY inwards_qty,ISNULL(C.QUANTITY,0) as scan_qty
	   INTO #tmpReco 
	   FROM #TMPMEMO A  
	   JOIN 
	   (SELECT   LEFT(b.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',b.PRODUCT_CODE)-1,-1),LEN(b.PRODUCT_CODE ))) AS PRODUCT_CODE,
	    sum(quantity) quantity,sum(purchase_price*quantity) ppval,sum(gross_purchase_price*quantity) gppval
	    FROM PID01106 b (NOLOCK)
		JOIN #TMPMEMO a ON b.mrr_ID =a.Memo_ID  
		GROUP BY LEFT(b.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',b.PRODUCT_CODE)-1,-1),LEN(b.PRODUCT_CODE )))
	   ) b on 1=1	
	   LEFT JOIN
	   (
	   SELECT B.RECON_ID ,
          LEFT(b.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',b.PRODUCT_CODE)-1,-1),LEN(b.PRODUCT_CODE ))) AS PRODUCT_CODE,
          SUM(B.QUANTITY) AS QUANTITY
       FROM  XNRECONP B (NOLOCK) 
	   WHERE RECON_ID =@CMEMO_ID  
       GROUP BY B.RECON_ID ,
       LEFT(b.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',b.PRODUCT_CODE)-1,-1),LEN(b.PRODUCT_CODE )))
	   
	  ) C  ON A.RECON_ID =C.RECON_ID and b.PRODUCT_CODE =c.PRODUCT_CODE 
	   WHERE  A.RECON_ID =@CMEMO_ID  


	  
	  


	   print 'step #9.5:'+convert(varchar,getdate(),113)         
       INSERT INTO #TMPRMDDETAILS   
       SELECT '' as W8_CHALLAN_ID, BILL_DT=GETDATE (), 0 CASHDISCOUNTAMOUNT, TERMS='', 
	   MRR_ID='',   
	   MRR_NO='',PRODUCT_CODE, 
	   SUM(a.inwards_qty-a.scan_qty) AS QUANTITY,0 PURCHASE_PRICE, 
	   AMOUNT=0,
	    ROW_ID='LATER',   
	   LAST_UPDATE=GETDATE (), DEPT_ID=LEFT(Memo_ID,2),   
	   RM_ID='LATER',0 SRNO,SUM((ppval/inwards_qty)*(a.inwards_qty-a.scan_qty)) RFNET,
	   SUM((ppval/inwards_qty)*(a.inwards_qty-a.scan_qty)) RFNET_WOTAX, 
	   UOM_CODE='',   
	   ITEM_FORM_ID='0000000',   
	   ITEM_TAX_PERCENTAGE=0,   
	   ITEM_TAX_AMOUNT=0, BILL_NO=b.inv_no , 0 DISCOUNT_PERCENTAGE,0 DISCOUNT_AMOUNT, 
	   0 as gross_PURCHASE_PRICE,   
	   PS_ID='', PUR_DISCOUNT_PERCENTAGE=0, PUR_DISCOUNT_AMOUNT=0, PUR_PURCHASE_PRICE=0 , 
	   REMARKS='',   
	   SUM(a.inwards_qty-a.scan_qty) AS INVOICE_QUANTITY, CAST(0 AS NUMERIC(10,2)) AS SCHEME_QUANTITY, 
	   0 MANUAL_DISCOUNT, MANUAL_RATE=0, BILL_LEVEL_TAX_METHOD=1,   
	   EXCISE_DUTY_AMOUNT=0,0 AUTO_SRNO, RATE=0, INV_RATE=0, DN_DISCOUNT_PERCENTAGE=0,   
	   DN_DISCOUNT_AMOUNT=0,   
	   1 BOX_NO, BOX_DT=NULL,b.BIN_ID,0 as PRTAMOUNT , PID_ROW_ID =''  
	   FROM #tmpReco A  
	   JOIN pim01106 b on a.MEMO_ID=b.mrr_id
       where (a.inwards_qty-a.scan_qty)>0
	   GROUP BY LEFT(Memo_ID,2), product_code,bin_id,b.inv_no
       
      print 'step #10:'+convert(varchar,getdate(),113)
	  UPDATE a SET purchase_price=b.ppval/inwards_qty,GROSS_PURCHASE_PRICE=b.ppval/inwards_qty
	  FROM #TMPRMDDETAILS a
	  JOIN  #tmpReco b ON a.product_code=b.PRODUCT_CODE



	  print 'step #11:'+convert(varchar,getdate(),113) 
	   --select 'chk #TMPRMDDETAILS',* from #TMPRMDDETAILS

	   --(PURCHASE_PRICE-DISCOUNT_AMOUNT)

	  
     INSERT INTO #TMPINDDETAILS  
     SELECT INV_ID='LATER',
     a.PRODUCT_CODE as  PRODUCT_CODE,
	 SUM(a.inwards_qty-a.scan_qty) as quantity,
      RATE=0,  --GROSS_PURCHASE_PRICE 
     0 as DISCOUNT_PERCENTAGE,0 as  DISCOUNT_AMOUNT, DEPT_ID=LEFT(Memo_ID,2), ROW_ID='LATER',   
     LAST_UPDATE=GETDATE(),0 PRINT_LABEL,0 RFNET,0 RFNET_WOTAX, COMPANY_CODE='01',  
     NET_RATE=0, EMP_CODE='0000000', 1 as BOX_NO,0 MRP, BOX_DT=NULL, ITEM_TAX_PERCENTAGE=0 ,   
     ITEM_TAX_AMOUNT=0 ,   --
     ITEM_FORM_ID='0000000' 
     , PS_ID='', EMP_CODE1='0000000', EMP_CODE2='0000000',   
     SUM(a.inwards_qty-a.scan_qty) AS INVOICE_QUANTITY, CAST(0 AS NUMERIC(10,2)) AS SCHEME_QUANTITY,0 MANUAL_DISCOUNT, 
	 row_number() over (order by product_code) as  AUTO_SRNO,   
     PARTY_MRP=0, REMARKS=0, WS_PRICE=0,'000' BIN_ID, '' as W8_CHALLAN_ID , CUSTOM_DUTY_AMT=0,   
     TOTAL_CUSTOM_DUTY_AMT=0, CVD_AMT=0, CVD_PER=0, CUSTOM_DUTY_PER=0, PICKLIST_ARTICLE_CODE='',   
     PICKLIST_PARA1_CODE='', PICKLIST_PARA2_CODE='', PICK_LIST_ID='', MANUAL_RATE='', ORDER_ID='',   
     REF_WPS_DET_ROWID =''  
     FROM #tmpReco A  
	 JOIN pim01106 b on a.MEMO_ID=b.mrr_id
     where (a.inwards_qty-a.scan_qty)>0
	 GROUP BY LEFT(Memo_ID,2), product_code,bin_id,b.inv_no

	  UPDATE a SET NET_RATE=b.ppval/inwards_qty,rate=b.ppval/inwards_qty
	  FROM #TMPINDDETAILS a
	  JOIN  #tmpReco b ON a.product_code=b.PRODUCT_CODE

	  

	
	

  print 'step #12:'+convert(varchar,getdate(),113)
  --select 'chk #TMPINDDETAILS',* from #TMPINDDETAILS

  INSERT INTO #tmpRecoAll(RECON_ID,QUANTITY,RECON_QTY ,SHORTAGE_QTY,Excess_QTY)
SELECT RECON_ID,SUM(inwards_qty) AS QUANTITY,
          SUM(scan_qty) AS RECON_QTY ,
		  sum(case when inwards_qty-scan_qty>0 then inwards_qty-scan_qty else 0 end ) as SHORTAGE_QTY,
		  sum(case when inwards_qty-scan_qty<0 then abs(inwards_qty-scan_qty) else 0 end ) as Excess_QTY
   FROM #tmpReco A 
  -- where inwards_qty-isnull(scan_qty,0)>0
   group by RECON_ID

    END  
END      
  
 
IF @NQUERYID=1  
   GOTO LBLMST  
ELSE IF @NQUERYID=2  
   GOTO LBLDET  
ELSE IF @NQUERYID=3  
   GOTO LBLDET_AMOUNT  
ELSE  
GOTO END_PROC    
  
  
LBLMST:    



/*	
if barcode different scan then Pending Quantity not show (02032022)

 SELECT A.XN_TYPE,A.RECON_NO,A.RECON_ID,A.FIN_YEAR ,  
 CONVERT(NUMERIC(10,2), (ISNULL(B.QUANTITY,0))) AS TOTAL_QTY,  
 CONVERT(NUMERIC(10,2),(ISNULL(C.QUANTITY,0))) AS RECON_QTY,  
 CONVERT(NUMERIC(10,2),(ISNULL(B.QUANTITY,0))-(ISNULL(C.QUANTITY,0))) AS SHORTAGE_QTY ,  
 D.SOURCE_MEMO_NO,D.MEMO_NO,  
 LEFT (D.SOURCE_MEMO_NO,2) AS PARTY_DEPT_ID,  
 E.DEPT_AC_CODE AS AC_CODE,
 D.MEMO_ID AS XN_ID,  
 --CASE WHEN D.RECEIPT_DT<>'' THEN 1 ELSE 0 END AS CHALLAN_REC  
 0 as  CHALLAN_REC --- as per anil , make this vallue as Zero w.r.t. Ticket #11-4800 of Suvidha (11-11-2020) in which Application was not calling savetran if this column value=1 even after asking for Yes/no
 INTO #TMPMST
 FROM XNRECONM A (NOLOCK)  
 JOIN   
 (  
   SELECT RECON_ID,SUM(QUANTITY) AS QUANTITY   
   FROM XNRECONC A (NOLOCK) WHERE RECON_ID =@CMEMO_ID  
   GROUP BY RECON_ID  
 ) B ON A.RECON_ID =B.RECON_ID   
 LEFT JOIN  
 (  
  SELECT RECON_ID,SUM(QUANTITY) AS QUANTITY   
  FROM XNRECONP A (NOLOCK) WHERE RECON_ID =@CMEMO_ID  
  GROUP BY RECON_ID  
 ) C ON A.RECON_ID =C.RECON_ID   
 JOIN #TMPMEMO D ON D.RECON_ID =A.RECON_ID   
 LEFT OUTER JOIN LOCATION E (NOLOCK) ON E.DEPT_ID =LEFT (D.SOURCE_MEMO_NO,2)   
 WHERE 1=1 AND (@BCOMPLETEDCHECK=1 OR RECONCILED=1) 
 AND A.RECON_ID =@CMEMO_ID 
 AND ISNULL(RETURN_CHALLAN_GENERATED,0)=0  
 AND (ISNULL(B.QUANTITY,0))-(ISNULL(C.QUANTITY,0))<>0  

 */

 
 
 SELECT A.XN_TYPE,A.RECON_NO,A.RECON_ID,A.FIN_YEAR ,  
 CONVERT(NUMERIC(10,2), (ISNULL(B.QUANTITY,0))) AS TOTAL_QTY,  
 CONVERT(NUMERIC(10,2),(ISNULL(b.RECON_QTY,0))) AS RECON_QTY,  
 CONVERT(NUMERIC(10,2),(SHORTAGE_QTY)) AS SHORTAGE_QTY ,  
 CONVERT(NUMERIC(10,2),(Excess_QTY)) AS Excess_QTY ,  
 D.SOURCE_MEMO_NO,D.MEMO_NO,  
 D.location_Code  AS PARTY_DEPT_ID,  
 ISNULL(E.DEPT_AC_CODE,'0000000000') AS AC_CODE,
 D.MEMO_ID AS XN_ID,  
 --CASE WHEN D.RECEIPT_DT<>'' THEN 1 ELSE 0 END AS CHALLAN_REC  
 0 as  CHALLAN_REC --- as per anil , make this vallue as Zero w.r.t. Ticket #11-4800 of Suvidha (11-11-2020) in which Application was not calling savetran if this column value=1 even after asking for Yes/no
 INTO #TMPMST
 FROM XNRECONM A (NOLOCK)  
 --JOIN   
 --(  

  -- SELECT RECON_ID,SUM(inwards_qty) AS QUANTITY,
  --        SUM(scan_qty) AS RECON_QTY ,
		--  sum(case when inwards_qty-scan_qty>0 then inwards_qty-scan_qty else 0 end ) as SHORTAGE_QTY,
		--  sum(case when inwards_qty-scan_qty<0 then abs(inwards_qty-scan_qty) else 0 end ) as Excess_QTY
  -- FROM #tmpReco A 
  ---- where inwards_qty-isnull(scan_qty,0)>0
  -- group by RECON_ID
-- ) B ON A.RECON_ID =B.RECON_ID   
JOIN #tmpRecoAll B ON B.RECON_ID=A.recon_ID
 JOIN #TMPMEMO D ON D.RECON_ID =A.RECON_ID   
 LEFT OUTER JOIN LOCATION E (NOLOCK) ON E.DEPT_ID =D.location_Code 
 WHERE 1=1 AND (@BCOMPLETEDCHECK=1 OR RECONCILED=1) 
 AND A.RECON_ID =@CMEMO_ID 
 AND ISNULL(RETURN_CHALLAN_GENERATED,0)=0  
 and isnull(SHORTAGE_QTY,0)>0
-- AND (ISNULL(B.QUANTITY,0))-(ISNULL(b.RECON_QTY,0))<>0  

 SELECT * FROM #TMPMST
   
   IF NOT  EXISTS (SELECT TOP 1 'U' FROM #TMPMST) --AS PER DISCUSS WITH ANIL SIR
    UPDATE  XNRECONM SET RECONCILED =1,COMPLETED_ON =GETDATE() WHERE RECON_ID=@CMEMO_ID

GOTO END_PROC   
   
LBLDET:   
   
 SELECT A.XN_TYPE,A.RECON_ID,  
        B.PRODUCT_CODE  as PRODUCT_CODE,
        SUM(B.QUANTITY) -SUM(ISNULL(C.QUANTITY,0)) AS QUANTITY
        ,NEWID() AS ROW_ID,  
        E.ARTICLE_CODE,E.ARTICLE_NAME,E.ARTICLE_NO,  
        F.SUB_SECTION_CODE,F.SUB_SECTION_NAME ,  
        G.SECTION_CODE ,G.SECTION_NAME ,  
        P1.PARA1_CODE ,P1.PARA1_NAME ,  
        P2.PARA2_CODE ,P2.PARA2_NAME ,  
        P3.PARA3_CODE ,P3.PARA3_NAME ,  
        P4.PARA4_CODE ,P4.PARA4_NAME ,  
        P5.PARA5_CODE ,P5.PARA5_NAME ,  
        P6.PARA6_CODE ,P6.PARA6_NAME  ,
		D.MRP, D.INV_NO AS BILL_NO,D.INV_DT AS BILL_DT
 FROM XNRECONM A (NOLOCK)  
 JOIN 
 (
   SELECT B.RECON_ID ,
          LEFT(b.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',b.PRODUCT_CODE)-1,-1),LEN(b.PRODUCT_CODE ))) AS PRODUCT_CODE,
          SUM(B.QUANTITY) AS QUANTITY
   FROM  XNRECONC B (NOLOCK) 
   GROUP BY B.RECON_ID ,
   LEFT(b.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',b.PRODUCT_CODE)-1,-1),LEN(b.PRODUCT_CODE )))
  ) b ON A.RECON_ID =B.RECON_ID     
 LEFT OUTER JOIN 
 (
   SELECT B.RECON_ID ,
          LEFT(b.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',b.PRODUCT_CODE)-1,-1),LEN(b.PRODUCT_CODE ))) AS PRODUCT_CODE,
          SUM(B.QUANTITY) AS QUANTITY
   FROM  XNRECONP B (NOLOCK) 
   GROUP BY B.RECON_ID ,
   LEFT(b.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',b.PRODUCT_CODE)-1,-1),LEN(b.PRODUCT_CODE )))
 
 ) c ON A.RECON_ID =C.RECON_ID 
 AND B.PRODUCT_CODE =C.PRODUCT_CODE 
 --XNRECONP C (NOLOCK) ON A.RECON_ID =C.RECON_ID 
 --AND B.PRODUCT_CODE =C.PRODUCT_CODE   
 JOIN SKU D ON D.PRODUCT_CODE =B.PRODUCT_CODE   
 JOIN ARTICLE E (NOLOCK) ON E.ARTICLE_CODE=D.ARTICLE_CODE  
 JOIN SECTIOND F (NOLOCK) ON F.SUB_SECTION_CODE =E.SUB_SECTION_CODE   
 JOIN SECTIONM G (NOLOCK) ON F.SECTION_CODE =G.SECTION_CODE   
 JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE=D.PARA1_CODE   
 JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE=D.PARA2_CODE   
 JOIN PARA3 P3 (NOLOCK) ON P3.PARA3_CODE=D.PARA3_CODE   
 JOIN PARA4 P4 (NOLOCK) ON P4.PARA4_CODE=D.PARA4_CODE   
 JOIN PARA5 P5 (NOLOCK) ON P5.PARA5_CODE=D.PARA5_CODE   
 JOIN PARA6 P6 (NOLOCK) ON P6.PARA6_CODE=D.PARA6_CODE   
 WHERE (@BCOMPLETEDCHECK=1 OR RECONCILED=1) AND A.RECON_ID =@CMEMO_ID 
 AND ISNULL(RETURN_CHALLAN_GENERATED,0)=0  
 --AND C.RECON_ID IS NULL  
 GROUP BY A.XN_TYPE,A.RECON_ID,b.PRODUCT_CODE,
        E.ARTICLE_CODE,E.ARTICLE_NAME,E.ARTICLE_NO,  
        F.SUB_SECTION_CODE,F.SUB_SECTION_NAME ,  
        G.SECTION_CODE ,G.SECTION_NAME ,  
        P1.PARA1_CODE ,P1.PARA1_NAME ,  
        P2.PARA2_CODE ,P2.PARA2_NAME ,  
        P3.PARA3_CODE ,P3.PARA3_NAME ,  
        P4.PARA4_CODE ,P4.PARA4_NAME ,  
        P5.PARA5_CODE ,P5.PARA5_NAME ,  
        P6.PARA6_CODE ,P6.PARA6_NAME ,
		D.MRP,D.INV_NO ,D.INV_DT 
        HAVING SUM(B.QUANTITY) -SUM(ISNULL(C.QUANTITY,0))>0
         
 
   
   
GOTO END_PROC   
   
LBLDET_AMOUNT:  
   
   print 'step #13:'+convert(varchar,getdate(),113)
   UPDATE #TMPRMDDETAILS SET ROW_ID =NEWID(),BOX_NO=1
   UPDATE #TMPINDDETAILS SET ROW_ID =NEWID(),BOX_NO=1
  
    SELECT * FROM #TMPRMDDETAILS  
        
    SELECT * FROM #TMPINDDETAILS  
	
	print 'step #14:'+convert(varchar,getdate(),113)
LBLCHKCHALLANSTATUS:
	
	DECLARE @CXNTYPE VARCHAR(20),@NMODE NUMERIC(1,0),@DRECEIPTDT DATETIME
	
	SELECT @DRECEIPTDT='',@NMODE=0
	
	SELECT TOP 1 @CXNTYPE=XN_TYPE FROM XNRECONM WHERE RECON_ID=@CMEMO_ID
	
	IF @CXNTYPE IN ('PUR','WSR')
	BEGIN
		IF @CXNTYPE IN ('PUR','PUR_PARTY')
			SELECT @NMODE=INV_MODE,@DRECEIPTDT=RECEIPT_DT FROM PIM01106 A 
			JOIN XNRECONMEMO B ON A.MRR_ID=B.XN_ID 
			WHERE RECON_ID=@CMEMO_ID
		ELSE
			SELECT @NMODE=MODE,@DRECEIPTDT=RECEIPT_DT FROM CNM01106 A 
			JOIN XNRECONMEMO B ON A.CN_ID=B.XN_ID 
			WHERE RECON_ID=@CMEMO_ID				
	END
	
	IF @NMODE=2 AND @DRECEIPTDT=''
		SELECT 'CHALLAN YET NOT RECEIVED.....CANNOT RECONCILE'  AS ERRMSG
	ELSE
		SELECT ''  AS ERRMSG	
GOTO END_PROC   


LBLCHALLAN:



     SELECT TOP 1 @CXNTYPE=XN_TYPE FROM XNRECONM WHERE RECON_ID=@CMEMO_ID

	IF @CXNTYPE IN ('PUR','WSR','PUR_PARTY')
	BEGIN
		IF @CXNTYPE IN ('PUR','PUR_PARTY')
			SELECT A.INV_ID AS CHALLAN_ID ,A.MRR_ID AS XN_ID,'PUR' AS XN_TYPE  FROM PIM01106 A 
			JOIN XNRECONMEMO B ON A.MRR_ID=B.XN_ID 
			WHERE RECON_ID=@CMEMO_ID  AND A.INV_MODE=2
			UNION
			SELECT A.MRR_ID AS CHALLAN_ID ,A.MRR_ID AS XN_ID,'PUR_PARTY' AS XN_TYPE  FROM PIM01106 A 
			JOIN XNRECONMEMO B ON A.MRR_ID=B.XN_ID 
			WHERE RECON_ID=@CMEMO_ID AND A.INV_MODE=1
		ELSE
			SELECT A.RM_ID AS CHALLAN_ID ,A.CN_ID AS XN_ID,'WSR' AS XN_TYPE FROM CNM01106 A 
			JOIN XNRECONMEMO B ON A.CN_ID=B.XN_ID 
			WHERE RECON_ID=@CMEMO_ID				
	END
	ELSE IF @CXNTYPE IN ('DCO')
	begin
	      
	        SELECT A.MEMO_ID AS CHALLAN_ID ,A.MEMO_ID AS XN_ID,'DCO' AS XN_TYPE FROM FLOOR_ST_MST A 
			JOIN XNRECONMEMO B ON A.MEMO_ID=B.XN_ID 
			WHERE b.RECON_ID=@CMEMO_ID	
	end
	ELSE
		SELECT '' AS CHALLAN_ID ,'' AS XN_ID,'' AS XN_TYPE  WHERE 1=2

  
GOTO END_PROC  

 END_PROC:    
    
END
