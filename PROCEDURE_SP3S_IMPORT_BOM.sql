     
CREATE PROCEDURE SP3S_IMPORT_BOM
(
 @CTABLENAME VARCHAR(100)
)
AS
BEGIN
    
    
    DECLARE @NSTEP INT,@DTSQL NVARCHAR(MAX), @CERRORMSG VARCHAR(1000)
   
    SET @CERRORMSG=''
    BEGIN TRANSACTION
	BEGIN TRY
	
	SET @NSTEP=00
	IF OBJECT_ID ('TEMPDB..#TMPIMPORTBOM','U') IS NOT NULL
	   DROP TABLE #TMPIMPORTBOM
	   
	   
	  SELECT ART.ARTICLE_NO ,ART1.ARTICLE_NO AS BOM_ARTICLE_NO,
          A.AVG_QTY,A.RATE,P1.PARA1_NAME AS BOM_PARA1_NAME,
          P2.PARA2_NAME AS BOM_PARA2_NAME,
          A.ADD_AVG_QTY,
          ISNULL(JOBS.JOB_NAME,'') AS JOB_NAME,
          ISNULL(A.TOL_PER,0) AS TOL_PER,
          A.ARTICLE_CODE ,A.BOM_ARTICLE_CODE ,A.BOM_PARA1_CODE ,A.BOM_PARA2_CODE,
          ISNULL(A.JOB_CODE,'0000000') AS JOB_CODE,
          a.row_id
          into #TMPIMPORTBOM
     FROM ART_BOM A (NOLOCK)
     JOIN ARTICLE ART (NOLOCK) ON A.ARTICLE_CODE =ART.ARTICLE_CODE 
     JOIN ARTICLE ART1 (NOLOCK) ON A.BOM_ARTICLE_CODE =ART1.ARTICLE_CODE 
     JOIN PARA1 P1 (NOLOCK) ON A.BOM_PARA1_CODE=P1.PARA1_CODE
     JOIN PARA2 P2 (NOLOCK) ON A.BOM_PARA2_CODE=P2.PARA2_CODE
     LEFT JOIN JOBS (NOLOCK) ON JOBS.JOB_CODE =A.JOB_CODE 
     where 1=2

	   
	SET @NSTEP=10
    SET @DTSQL=N' SELECT A.ARTICLE_NO ,A.BOM_ARTICLE_NO,
          A.AVG_QTY,A.RATE,A.BOM_PARA1_NAME,
          A. BOM_PARA2_NAME,A.ADD_AVG_QTY,A.JOB_NAME,
          A.TOL_PER,A.ARTICLE_CODE ,A.BOM_ARTICLE_CODE ,A.BOM_PARA1_CODE ,A.BOM_PARA2_CODE,
          A.JOB_CODE,
          A.ROW_ID
     FROM '+@CTABLENAME+' A '
     PRINT @DTSQL
     INSERT INTO #TMPIMPORTBOM(ARTICLE_NO,BOM_ARTICLE_NO,AVG_QTY,RATE,BOM_PARA1_NAME,BOM_PARA2_NAME,ADD_AVG_QTY,
     JOB_NAME,TOL_PER,ARTICLE_CODE,BOM_ARTICLE_CODE,BOM_PARA1_CODE,BOM_PARA2_CODE,JOB_CODE,row_id )
     EXEC (@DTSQL)
	
	SET @NSTEP=20
	
	IF EXISTS (SELECT TOP 1 'U' FROM  #TMPIMPORTBOM A
	LEFT JOIN ARTICLE ART ON A.ARTICLE_NO =ART.ARTICLE_NO 
	WHERE ISNULL(ART.ARTICLE_CODE,'')='')
	BEGIN
	   SET @CERRORMSG='BLANK ARTICLE FOUND PLEASE CHECK'
	   GOTO END_PROC
	END
	SET @NSTEP=30
	IF EXISTS (SELECT TOP 1 'U' FROM  #TMPIMPORTBOM A
	LEFT JOIN ARTICLE ART ON A.bom_ARTICLE_NO =ART.ARTICLE_NO 
	WHERE ISNULL(ART.ARTICLE_CODE,'')='')
	BEGIN
	   SET @CERRORMSG='BLANK BOM ARTICLE FOUND PLEASE CHECK'
	   GOTO END_PROC
	END
	
	SET @NSTEP=40
	IF EXISTS (SELECT TOP 1 'U' FROM  #TMPIMPORTBOM A
	LEFT JOIN jobs  ON A.JOB_NAME  =JOBS.JOB_NAME 
	WHERE ISNULL(JOBS.JOB_NAME,'')='')
	BEGIN
	   SET @CERRORMSG='BLANK JOB NAME FOUND PLEASE CHECK'
	   GOTO END_PROC
	END
	
	SET @NSTEP=50
	UPDATE A SET ARTICLE_CODE=B.ARTICLE_CODE  
	FROM #TMPIMPORTBOM A
	JOIN ARTICLE B ON A.ARTICLE_NO =B.ARTICLE_NO 
	WHERE A.ARTICLE_CODE <>B.ARTICLE_CODE 
	
	SET @NSTEP=60
	UPDATE A SET BOM_ARTICLE_CODE=B.ARTICLE_CODE  
	FROM #TMPIMPORTBOM A
	JOIN ARTICLE B ON A.BOM_ARTICLE_NO =B.ARTICLE_NO 
	WHERE A.BOM_ARTICLE_CODE <>B.ARTICLE_CODE 
	
	SET @NSTEP=70
	UPDATE A SET JOB_CODE =B.JOB_CODE  
	FROM #TMPIMPORTBOM A
	JOIN JOBS  B ON A.JOB_NAME  =B.JOB_NAME 
	WHERE A.JOB_CODE  <>B.JOB_CODE 
	
	SET @NSTEP=80
	UPDATE A SET BOM_PARA1_CODE =P1.PARA1_CODE  
	FROM #TMPIMPORTBOM A
	JOIN PARA1 P1 ON A.BOM_PARA1_NAME =P1.PARA1_NAME 
	WHERE BOM_PARA1_CODE <>P1.PARA1_CODE
	
	SET @NSTEP=90
	UPDATE A SET BOM_PARA2_CODE =P2.PARA2_CODE  
	FROM #TMPIMPORTBOM A
	JOIN PARA2 P2 ON A.BOM_PARA2_NAME =P2.PARA2_NAME 
	WHERE BOM_PARA2_CODE <>P2.PARA2_CODE
	
	
	SET @DTSQL=N' UPDATE A 
	SET ARTICLE_CODE=B.ARTICLE_CODE,
	BOM_ARTICLE_CODE=B.BOM_ARTICLE_CODE,
	JOB_CODE=B.JOB_CODE,
	BOM_PARA1_CODE=B.BOM_PARA1_CODE,
	BOM_PARA2_CODE=B.BOM_PARA2_CODE
	FROM '+@CTABLENAME+' A
	JOIN #TMPIMPORTBOM B ON A.ROW_ID=B.ROW_ID
	'
	print @DTSQL
	exec sp_executesql @DTSQL
    
    
    SET @CTABLENAME=REPLACE(REPLACE(@CTABLENAME,'[',''),']','')
	SET @NSTEP=100
	 EXEC UPDATEMASTERXN 
      @CSOURCEDB = ''  
    , @CSOURCETABLE = @CTABLENAME 
    , @CDESTDB  = ''  
    , @CDESTTABLE = 'ART_BOM'  
    , @CKEYFIELD1 = 'ROW_ID' 
    ,@BALWAYSUPDATE = 1  
  
	
	
	END TRY
	BEGIN CATCH
		SET @CERRORMSG = 'PROCEDURE SP3S_IMPORT_BOM: STEP- ' + LTRIM(STR(@NSTEP,10)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		GOTO END_PROC
	END CATCH
	
END_PROC:

	IF @@TRANCOUNT>0 
	BEGIN
		IF ISNULL(@CERRORMSG,'')='' 
		BEGIN
			commit  TRANSACTION
		END	
		ELSE
			ROLLBACK
	END       
	
	SELECT @CERRORMSG AS ERRMSG
   
	    SET @DTSQL = 'IF OBJECT_ID('''+@CTABLENAME+''',''U'') IS NOT NULL
						DROP TABLE  '+@CTABLENAME+''	
		PRINT @DTSQL
	    EXEC SP_EXECUTESQL @DTSQL	
END
