CREATE PROCEDURE DBO.PrAlter_ForeignKeyColumn
AS
BEGIN
 
 ---DECLARE LOCAL VARIABLE
 DECLARE @iLoopStart SMALLINT,@iLoopEnd SMALLINT,@sSQL NVARCHAR(2000),@cErrmsg NVARCHAR(2000)
 
 ---SET VALUE INTO LOCAL VARIABLE
 BEGIN TRY
 IF OBJECT_ID('TEMPDB..#tblTableList') IS NOT NULL
   DROP TABLE #tblTableList
 CREATE TABLE #tblTableList
 (
  CONSTRAINT_NAME varchar(150)
 ,TableName  VARCHAR(100)
 ,ColumnName VARCHAR(100)
 )
 INSERT INTO #TBLTABLELIST(CONSTRAINT_NAME,TABLENAME,COLUMNNAME)
 SELECT 
    C.CONSTRAINT_NAME [constraint_name] 
   ,C.TABLE_NAME [referencing_table_name] 
   ,KCU.COLUMN_NAME [referencing_column_name] 

 FROM  INFORMATION_SCHEMA.TABLE_CONSTRAINTS C 
         INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU ON C.CONSTRAINT_SCHEMA = KCU.CONSTRAINT_SCHEMA  AND C.CONSTRAINT_NAME = KCU.CONSTRAINT_NAME 
         INNER JOIN INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS RC  ON C.CONSTRAINT_SCHEMA = RC.CONSTRAINT_SCHEMA AND C.CONSTRAINT_NAME = RC.CONSTRAINT_NAME 
         INNER JOIN INFORMATION_SCHEMA.TABLE_CONSTRAINTS C2  ON RC.UNIQUE_CONSTRAINT_SCHEMA = C2.CONSTRAINT_SCHEMA AND RC.UNIQUE_CONSTRAINT_NAME = C2.CONSTRAINT_NAME 
         INNER JOIN INFORMATION_SCHEMA.KEY_COLUMN_USAGE KCU2 ON C2.CONSTRAINT_SCHEMA = KCU2.CONSTRAINT_SCHEMA 
            AND C2.CONSTRAINT_NAME = KCU2.CONSTRAINT_NAME AND KCU.ORDINAL_POSITION = KCU2.ORDINAL_POSITION 
 WHERE  C.CONSTRAINT_TYPE = 'FOREIGN KEY'
 ORDER BY C.CONSTRAINT_NAME
 
 IF OBJECT_ID('TEMPDB..#tblScriptList') IS NOT NULL
    DROP TABLE #tblScriptList
 CREATE TABLE #tblScriptList
 (
  SrNo    INT IDENTITY(1,1)
 ,Script  NVARCHAR(2000)
 ,Flag    TINYINT DEFAULT 0
 )

 INSERT INTO #tblScriptList(Script)
 SELECT 'ALTER TABLE '+C1.TABLE_NAME 
			+ ' ALTER COLUMN '+ C1.COLUMN_NAME
			+' '+ CASE WHEN C1.DATA_TYPE IN ('DECIMAL','NUMERIC') THEN C1.DATA_TYPE +' ('+ CAST(C1.NUMERIC_PRECISION AS VARCHAR)+','+CAST(C1.NUMERIC_SCALE AS VARCHAR)+')'
				WHEN C1.DATA_TYPE IN ('VARCHAR','CHAR','NVARCHAR','NCHAR') THEN C1.DATA_TYPE +' ('+ CASE C1.CHARACTER_MAXIMUM_LENGTH WHEN '-1' THEN 'MAX' ELSE CAST(C1.CHARACTER_MAXIMUM_LENGTH AS VARCHAR) END +')'
				ELSE C1.DATA_TYPE
				END
            +' NULL'
 FROM INFORMATION_SCHEMA.COLUMNS C1
 JOIN #tblTableList T ON T.TableName = C1.TABLE_NAME AND T.ColumnName = C1.COLUMN_NAME
 
 SET @iLoopEnd   = @@ROWCOUNT;
 SET @iLoopStart = 1;
 
 WHILE @iLoopEnd >= @iLoopStart
 BEGIN
    
    SELECT @sSQL = Script +'; ' FROM #tblScriptList WHERE SrNo = @iLoopStart
    
    EXEC(@sSQL)
    
    UPDATE #tblScriptList SET Flag = 1
    
    SET @iLoopStart = @iLoopStart+1;
    
 END
 
 END TRY
 BEGIN CATCH
   SET @cErrmsg = 'ERROR IN PROCEDURE || '+ERROR_MESSAGE()
 END CATCH
 
 SELECT @cErrmsg AS [Errmsg]
END



