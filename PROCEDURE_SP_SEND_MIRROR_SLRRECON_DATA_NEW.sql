create PROCEDURE SP_SEND_MIRROR_SLRRECON_DATA_NEW
(
	 @CUPLOADEDXNID VARCHAR(50)
	,@CCURLOCID VARCHAR(5)
	,@BACKNOWLEDGE BIT=0
	,@CERRMSG VARCHAR(1000) OUTPUT
)
--WITH ENCRYPTION
AS
BEGIN
	DECLARE @CMEMOID VARCHAR(50),@CSTEP VARCHAR(5)
BEGIN TRY 
 SET @CSTEP=00
 
 DECLARE @CTEMPDBNAME1 VARCHAR(40),@CTEMPDBNAME VARCHAR(40)
 
 --PRINT 'ENTER PURCHASE SENDING'	
 
 SET @CSTEP=10 			
 
  SET @CMEMOID=@CUPLOADEDXNID
	---- IF NO MEMO FOUND , JUST END THE PROCESS
	IF ISNULL(@CMEMOID,'')=''
		GOTO END_PROC

LBLTABLEINFO:
	SET @CSTEP=50

	IF @BACKNOWLEDGE=1
		GOTO END_PROC
		
	SET @CSTEP=55
	SELECT DISTINCT 'SLRRECON_SLR_RECON_MST_MIRROR' AS TARGET_TABLENAME,A.* ,@CMEMOID AS XN_ID FROM SLR_RECON_MST(NOLOCK) A WHERE A.MEMO_ID=@CMEMOID
	
	SET @CSTEP=60
	SELECT DISTINCT 'SLRRECON_SLR_RECON_DET_MIRROR' AS TARGET_TABLENAME,A.* FROM SLR_RECON_DET(NOLOCK) A WHERE A.MEMO_ID=@CMEMOID
	
	SET @CSTEP=65  
	SELECT DISTINCT 'SLRRECON_PMT01106_MIRROR' AS TARGET_TABLENAME,@CMEMOID AS SLRRECON_MEMO_ID,A.DEPT_ID,A.product_code,A.BIN_ID,A.quantity_in_stock  FROM PMT01106(NOLOCK) A  
	JOIN cmd01106 b (NOLOCK) ON b.PRODUCT_CODE=a.product_code
	JOIN SLR_RECON_DET c (NOLOCK) ON c.cmd_row_id=b.row_id
	WHERE c.MEMO_ID=@CMEMOID 
	
	SET @CSTEP=70
	SELECT DISTINCT 'SLRRECON_POSGRRECOS_MIRROR' AS TARGET_TABLENAME,A.* FROM POSGRRecos(NOLOCK) A 
	join SLR_RECON_DET b (nolock) on a.CMDRowId =b.cmd_row_id 
	WHERE b.MEMO_ID=@CMEMOID	
	
    
LBLCHECKDATA:

END TRY
BEGIN CATCH
	SET @CERRMSG='P: SP_SEND_MIRROR_SLRRECON_DATA_NEW, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO END_PROC
END CATCH 
	
END_PROC:

END	
---END OF PROCEDURE - SP_SEND_MIRROR_SLRRECON_DATA_NEW
