CREATE PROC SP_PRD_ARTICLEMASTER  
(      
 @CQUERYID INT,      
 @CVALUE1 VARCHAR(50) = '',      
 @CVALUE2 VARCHAR(50) = '',      
 @CVALUE3 VARCHAR(50) = '',  
 @CVALUE4 VARCHAR(50) = '' ,
 @CVALUE5 VARCHAR(10) = '1' --FOR ARTICLE TYPE 1. FOR TRADING 2. PRODUCTION
) 
-- WITH ENCRYPTION
     
 AS      
BEGIN      
      
DECLARE @CQUERY NVARCHAR(MAX),@CQUERY1 NVARCHAR(MAX),@CQUERY2 NVARCHAR(MAX),@CQUERY3 NVARCHAR(MAX),@CQUERY4 NVARCHAR(MAX),@CQUERY5 NVARCHAR(MAX),@CQUERY6 NVARCHAR(MAX)
,@cHEAD_CODE VARCHAR(MAX),@CTEMP VARCHAR(100)  
    
  
IF (@CQUERYID = 1)  --102
BEGIN      
--FOR PRODUCTION ARTICLE MASTER ( LOOK UP )  

IF @CVALUE5= 2 

SET @CQUERY= N' SELECT A.ARTICLE_CODE, A.ARTICLE_NAME, A.ARTICLE_NO, A.ARTICLE_DESC,  
                       B.SUB_SECTION_NAME, C.SECTION_NAME, B.MFG_CATEGORY         
             FROM ARTICLE A         
             JOIN SECTIOND B ON A.SUB_SECTION_CODE = B.SUB_SECTION_CODE        
             JOIN SECTIONM C ON B.SECTION_CODE = C.SECTION_CODE        
             WHERE A.ARTICLE_NO <> ''''  AND ISNULL(A.ARTICLE_TYPE,1)=2 AND A.INACTIVE=0
             ORDER BY A.ARTICLE_NO '
ELSE

SET @CQUERY= N' SELECT A.ARTICLE_CODE, A.ARTICLE_NAME, A.ARTICLE_NO, A.ARTICLE_DESC,  
                       B.SUB_SECTION_NAME, C.SECTION_NAME, B.MFG_CATEGORY         
             FROM ARTICLE A         
             JOIN SECTIOND B ON A.SUB_SECTION_CODE = B.SUB_SECTION_CODE        
             JOIN SECTIONM C ON B.SECTION_CODE = C.SECTION_CODE        
             WHERE A.ARTICLE_NO <> ''''  
             ORDER BY A.ARTICLE_NO '



END        
--------------------    
IF (@CQUERYID = 2)  --103
BEGIN      
-- ARTICLE MASTER ( SUB SECTION ATTRIBUTES )  

SET @CQUERY = N'SELECT DISTINCT B.ATTRIBUTE_NAME ,A.ATTRIBUTE_CODE,B.ATTRIBUTE_MODE 
              FROM SD_ATTR A    
              JOIN ATTRM B ON A.ATTRIBUTE_CODE = B.ATTRIBUTE_CODE     
              WHERE A.SUB_SECTION_CODE = '''+   @CVALUE1 + ''' 
              ORDER BY ATTRIBUTE_NAME '  
END        
--------------------    
IF (@CQUERYID = 104)  
BEGIN      
-- ARTICLE MASTER ( ATTRIBUTES KEYLIST )  
SET @CQUERY = N'SELECT * FROM ATTR_KEY WHERE ATTRIBUTE_CODE = '''+ @CVALUE1 +''' ORDER BY KEY_NAME '     
END        
--------------------    
IF (@CQUERYID = 3)  
BEGIN      
-- ARTICLE MASTER ( UOM LIST )  
SET @CQUERY = N'SELECT UOM_CODE,UOM_NAME AS UOM_NAME, UOM_TYPE ,
               (case when uom_type =1 then ''Discrete'' else ''Contiguous'' end ) as uom_type_name   
              FROM UOM WHERE INACTIVE=0 ORDER BY UOM_NAME'    
END        
--------------------    
IF (@CQUERYID = 4)  --106
BEGIN      
-- ARTICLE MASTER ( SUB SECTION LIST ) 


SET @CQUERY  =N' SELECT A.SUB_SECTION_CODE, A.SUB_SECTION_NAME, A.ALIAS AS SUB_SECTION_ALIAS, A.SECTION_CODE, 
			  B.SECTION_NAME,B.ALIAS AS SECTION_ALIAS, A.MFG_CATEGORY ,A.INACTIVE  ,B.ITEM_TYPE  ,A.SECTIOND_PACK_SIZE     
			  FROM SECTIOND A (NOLOCK)        
			  JOIN SECTIONM B (NOLOCK) ON A.SECTION_CODE = B.SECTION_CODE         
			  WHERE A.SUB_SECTION_CODE <> ''0000000''  AND A.INACTIVE =0 AND B.INACTIVE =0 ' +
			 (CASE WHEN  @CVALUE5= '2' THEN ' AND A.MFG_CATEGORY= '+@CVALUE1 +'' ELSE '' END)+				
			 'ORDER BY SECTION_NAME, SUB_SECTION_NAME'  

END        
--------------------    
IF (@CQUERYID = 5)  --107
BEGIN      
-- ARTICLE MASTER ( PARA1 LIST )  
SET @CQUERY = N'SELECT A.PARA1_CODE, A.PARA1_NAME, A.PARA1_SET    
              FROM PARA1 A  WHERE A.INACTIVE=0    
              ORDER BY A.PARA1_SET, A.PARA1_NAME '
              --WHERE A.PARA1_CODE <> ''0000000'' 
END        

IF (@CQUERYID = 55)  --107
BEGIN      
-- ARTICLE MASTER ( PARA1 LIST )  
SET @CQUERY = N'SELECT A.PARA1_CODE, A.PARA1_NAME, A.PARA1_SET    
              FROM PARA1 A  WHERE A.INACTIVE=0  AND isnull(replaceable,0)=1  
              ORDER BY A.PARA1_SET, A.PARA1_NAME '
              --WHERE A.PARA1_CODE <> ''0000000'' 
END        

--------------------    
IF (@CQUERYID = 6)  --108
BEGIN      
-- ARTICLE MASTER ( PARA2 LIST )  
SET @CQUERY = N'SELECT A.PARA2_CODE, A.PARA2_NAME, A.PARA2_ORDER, A.PARA2_SET     
              FROM PARA2 A 
			  WHERE A.INACTIVE=0         
              ORDER BY A.PARA2_ORDER, A.PARA2_NAME' --A.PARA2_CODE <> ''0000000''   AND  

END        
--------------------    
IF (@CQUERYID = 7)  --109
BEGIN      
-- ARTICLE MASTER ( BINDING ) 

 --CHANGES ISNULL(G.ARTICLE_NO,'') AS ARTICLE_SET_NAME 
 --CHANGES SECTION_NAME AND SUB_SECTION NAME IN BOM
 
SET @CQUERY1 = N'SELECT A.*,B.SUB_SECTION_NAME, B.ALIAS AS SUB_SECTION_ALIAS, B.MFG_CATEGORY,  
                       C.SECTION_NAME, C.ALIAS AS SECTION_ALIAS, D.UOM_NAME, E.USERNAME,  
                      F.USERNAME AS EDITUSERNAME ,ISNULL(G.ARTICLE_NO,'''') AS ARTICLE_SET_NAME ,LM.AC_NAME AS SUPP_AC_NAME,
                     A.DT_CREATED AS ART_DT_CREATED  ,D1.UOM_NAME AS alternate_uom_name,S.SEASON_NAME,SM.SIZE_SET_NAME,
					 (case when D.uom_type =1 then ''Discrete'' else ''Contiguous'' end ) as uom_type_name
              FROM ARTICLE A (NOLOCK)      
               JOIN SECTIOND B (NOLOCK) ON A.SUB_SECTION_CODE = B.SUB_SECTION_CODE       
              JOIN SECTIONM C (NOLOCK) ON B.SECTION_CODE = C.SECTION_CODE
              LEFT OUTER JOIN LMV01106 LM ON LM.AC_CODE=A.SUPP_AC_CODE        
              JOIN UOM D  (NOLOCK) ON A.UOM_CODE = D.UOM_CODE       
              LEFT JOIN USERS E (NOLOCK) ON A.USER_CODE  = E.USER_CODE       
              LEFT JOIN USERS F (NOLOCK) ON A.EDT_USER_CODE = F.USER_CODE  
              LEFT JOIN ARTICLE G (NOLOCK) ON A.ARTICLE_SET_CODE = G.ARTICLE_CODE AND ISNULL(G.ARTICLE_CODE,'''') <> ''''  
			  LEFT OUTER JOIN UOM D1  (NOLOCK) ON A.alternate_uom_code = D1.UOM_CODE       
			  LEFT OUTER JOIN SEASON_MST S ON A.SEASON_ID= S.SEASON_ID
			  LEFT OUTER JOIN SIZE_SET_MST SM ON A.SIZE_SET_CODE= SM.SIZE_SET_CODE
              WHERE A.ARTICLE_CODE = '''+ @CVALUE1    + ''''     
    
              ----DATATABLE ATTRIBUTE    
			  --SELECT * FROM art_names WHERE ARTICLE_CODE  = '''+ @CVALUE1    + '''
			  SET @CQUERY2 = N'SELECT ATTR.ARTICLE_CODE,AT1.ATTR1_KEY_NAME,AT2.ATTR2_KEY_NAME,AT3.ATTR3_KEY_NAME,AT4.ATTR4_KEY_NAME,AT5.ATTR5_KEY_NAME,AT6.ATTR6_KEY_NAME,AT7.ATTR7_KEY_NAME,AT8.ATTR8_KEY_NAME,AT9.ATTR9_KEY_NAME,AT10.ATTR10_KEY_NAME,AT11.ATTR11_KEY_NAME,AT12.ATTR12_KEY_NAME,AT13.ATTR13_KEY_NAME,AT14.ATTR14_KEY_NAME,
			        AT15.ATTR15_KEY_NAME,AT16.ATTR16_KEY_NAME,AT17.ATTR17_KEY_NAME,AT18.ATTR18_KEY_NAME,AT19.ATTR19_KEY_NAME,AT20.ATTR20_KEY_NAME,AT21.ATTR21_KEY_NAME,AT22.ATTR22_KEY_NAME,AT23.ATTR23_KEY_NAME,AT24.ATTR24_KEY_NAME,AT25.ATTR25_KEY_NAME 
                FROM ARTICLE_FIX_ATTR  ATTR (NOLOCK)    
                LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE 
				LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE
				LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE 
				LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE
				LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE 
				LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE
				LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE 
				LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE
				LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE 
				LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE
				LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE 
				LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE
				LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE 
				LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE
				LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE 
				LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE
				LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE
				LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE 
				LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE
				LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE 
				LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE
				LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE 
				LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE
				LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE 
				LEFT OUTER JOIN ATTR25_MST AT25(NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE  
                WHERE ATTR.ARTICLE_CODE= '''+ @CVALUE1    + ''''
				--IN (SELECT ARTICLE_CODE FROM ARTICLE 
				--WHERE  ARTICLE_SET_CODE  = '''+ @CVALUE1    + ''' 
				--OR ARTICLE_CODE  = '''+ @CVALUE1    + ''')'    
			 ----DATATABLE SIZE    
			 SET @CQUERY3 = N'SELECT A.*, B.PARA2_NAME, B.PARA2_ORDER    
			 FROM ART_DET A (NOLOCK)    
			 JOIN PARA2 B (NOLOCK) ON A.PARA2_CODE = B.PARA2_CODE     
			 WHERE A.ARTICLE_CODE = '''+ @CVALUE1    + '''    
			 ORDER BY B.PARA2_ORDER '   
    
			 ----DATATABLE COLOR    
			 SET @CQUERY4 = N'SELECT A.*, B.PARA1_NAME    ,B1.para1_name as replaceable_para1_name
			 FROM ART_PARA1 A (NOLOCK)    
			 JOIN PARA1 B  (NOLOCK) ON A.PARA1_CODE = B.PARA1_CODE       
			 LEFT OUTER JOIN PARA1 B1  (NOLOCK) ON A.replaceable_para1_code = B1.PARA1_CODE       
			 WHERE A.ARTICLE_CODE = '''+ @CVALUE1    + '''      
			 ORDER BY A.TS    '
    
             ----DATATABLE BOM PRINT NEW   
			SET @CQUERY5 = N' SELECT  A.*,
			         CAST(CASE WHEN ISNULL(UC.CONVERSION_VALUE,0)= 0 THEN 
			         ((A.AVG_QTY+ISNULL(A.ADD_AVG_QTY,0)) * A.RATE) 
			         ELSE (A.RATE/ISNULL(UC.CONVERSION_VALUE,0))*(A.AVG_QTY+ISNULL(A.ADD_AVG_QTY,0)) END AS NUMERIC(10,2)) AS TOTALCOST,     
			         D.ARTICLE_NO AS BOM_ARTICLE_NO,     
			         D.ARTICLE_NAME AS BOM_ARTICLE_NAME,     
			         E.UOM_NAME AS STK_UOM_NAME,BU.CONVERSION_UOM_NAME AS BOM_UOM_NAME, E.UOM_TYPE,
			         0 AS QUANTITY_IN_STOCK,F.SUB_SECTION_NAME,G.SECTION_NAME,H.PARA1_NAME AS BOM_PARA1_NAME,
			         I.PARA2_NAME AS BOM_PARA2_NAME  ,
			         CAST(ISNULL(UC.CONVERSION_VALUE,0) AS NUMERIC(12,4)) AS BOM_QTY,
                     ISNULL(BU.CONVERSION_UOM_NAME,'''') AS CONVERSION_UOM_NAME  ,
                     JOBS.JOB_NAME 
			 FROM ART_BOM A     
			 JOIN ARTICLE D ON A.BOM_ARTICLE_CODE = D.ARTICLE_CODE 
			 JOIN UOM E ON D.UOM_CODE = E.UOM_CODE     
			 JOIN SECTIOND F ON D.SUB_SECTION_CODE= F.SUB_SECTION_CODE
			 JOIN SECTIONM G ON F.SECTION_CODE= G.SECTION_CODE
			 JOIN PARA1 H ON A.BOM_PARA1_CODE= H.PARA1_CODE
			 JOIN PARA2 I ON A.BOM_PARA2_CODE= I.PARA2_CODE  
			 LEFT OUTER JOIN UOM_CONVERSION UC ON UC.UOM_CODE=E.UOM_CODE
             LEFT OUTER JOIN BOM_UOM BU ON BU.CONVERSION_UOM_CODE=UC.CONVERSION_UOM_CODE   
             LEFT JOIN JOBS (NOLOCK) ON JOBS.JOB_CODE=A.JOB_CODE
			 WHERE A.ARTICLE_CODE= '''+ @CVALUE1    + ''''    
    
			 ----DATATABLE JOBWORK    
			
			SET @CQUERY6 = N'SELECT 1 AS CHK,B.job_code,B.job_name,a.job_order,A.*
			FROM JOBS B
			JOIN ART_JOBS A ON b.job_code=a.job_code AND A.ARTICLE_CODE = '''+ @CVALUE1    + '''
			WHERE B.JOB_NAME<>''''
			UNION 
			SELECT 0 AS CHK,B.job_code,B.job_name,CAST(0 AS numeric(2)) as job_order,A.*
			FROM JOBS B
			LEFT OUTER JOIN ART_JOBS A ON b.job_code=a.job_code AND A.ARTICLE_CODE = '''+ @CVALUE1    + '''
			WHERE ISNULL(B.inactive,0) =0 AND B.JOB_NAME<>'''' AND A.job_code is null
			ORDER BY 4,3'
			/*
			 SELECT A.*,  B.JOB_NAME ,CAST(0 AS BIT) AS CHK   
			 FROM ART_JOBS A    
			 JOIN JOBS B ON A.JOB_CODE = B.JOB_CODE     
			 WHERE A.ARTICLE_CODE = '''+ @CVALUE1    + '''
			 ORDER BY A.JOB_ORDER
			*/
			SET @CQUERY = @CQUERY1+    @CQUERY2+@CQUERY3+@CQUERY4+@CQUERY5+@CQUERY6     
			 PRINT  @CQUERY
END  

--------------------    
IF (@CQUERYID = 8)  --150
BEGIN      
-- ARTICLE LIST ( SEARCH ARTICLE )  
SET @CQUERY= N'SELECT F.SUB_SECTION_NAME, F.SUB_SECTION_CODE, E.ARTICLE_NO, 
                     C.ATTRIBUTE_NAME, D.KEY_NAME,   
                     E.ARTICLE_CODE, C.ATTRIBUTE_CODE, D.KEY_CODE FROM ART_ATTR A (NOLOCK)      
           JOIN ATTRM C (NOLOCK) ON A.ATTRIBUTE_CODE = C.ATTRIBUTE_CODE        
           JOIN ATTR_KEY D (NOLOCK) ON A.KEY_CODE = D.KEY_CODE       
           JOIN ARTICLE E (NOLOCK) ON A.ARTICLE_CODE = E.ARTICLE_CODE  
           JOIN SECTIOND F (NOLOCK) ON E.SUB_SECTION_CODE = F.SUB_SECTION_CODE ' 
END        
--------------------

IF (@CQUERYID = 9)  --136
BEGIN      
-- BOM ( ARTICLE DETAIL ) 
--CHANGES REMOVE VIEW WITH QUERY  
SET @CQUERY = N'SELECT ARTICLE_NO, ARTICLE_NAME, UOM_NAME, A.UOM_CODE, UOM_TYPE, 
                ISNULL(S.PURCHASE_PRICE,A.PURCHASE_PRICE) AS PURCHASE_PRICE ,SECTION_NAME,
                SUB_SECTION_NAME,
                CAST(ISNULL(UC.CONVERSION_VALUE,0) AS NUMERIC(12,4)) AS BOM_QTY,
                ISNULL(BU.CONVERSION_UOM_NAME,'''') AS CONVERSION_UOM_NAME   
                FROM ARTICLE A 
                JOIN SECTIOND B ON A.SUB_SECTION_CODE= B.SUB_SECTION_CODE
                JOIN SECTIONM C ON B.SECTION_CODE= C.SECTION_CODE 
                JOIN UOM D ON A.UOM_CODE= D.UOM_CODE 
                LEFT OUTER JOIN
                (
                 SELECT TOP 1 ARTICLE_CODE,PURCHASE_PRICE 
                 FROM SKU 
                 WHERE ARTICLE_CODE = ''' + @CVALUE1 + '''
                 ORDER BY LAST_UPDATE DESC  
                )  S ON A.ARTICLE_CODE= S.ARTICLE_CODE   
                LEFT OUTER JOIN UOM_CONVERSION UC ON UC.UOM_CODE=D.UOM_CODE
                LEFT OUTER JOIN BOM_UOM BU ON BU.CONVERSION_UOM_CODE=UC.CONVERSION_UOM_CODE                       
                WHERE A.ARTICLE_CODE = ''' + @CVALUE1 + ''''  
END  

--------------------    
IF (@CQUERYID = 10)  --137
BEGIN      
-- BOM ( COLOR LIST )  
SET @CQUERY = N'SELECT A.PARA1_CODE, P1.PARA1_NAME FROM ART_PARA1 A  
               JOIN PARA1 P1 (NOLOCK) ON A.PARA1_CODE = P1.PARA1_CODE  
               WHERE ARTICLE_CODE = ''' + @CVALUE1 + ''' ORDER BY PARA1_NAME'  
END        
--------------------    
IF (@CQUERYID = 11)  --138
BEGIN      
-- BOM ( SIZE LIST )  
SET @CQUERY = N'SELECT A.PARA2_CODE, P2.PARA2_NAME FROM ART_DET A  
 JOIN PARA2 P2 (NOLOCK) ON A.PARA2_CODE = P2.PARA2_CODE  
                                WHERE ARTICLE_CODE = ''' + @CVALUE1 + ''' ORDER BY PARA2_NAME'  
END        
--------------------    
IF (@CQUERYID = 12)  --138
BEGIN      
-- JOB LIST   
SET @CQUERY = N'SELECT JOB_CODE, JOB_NAME    
              FROM JOBS     
              WHERE JOB_CODE <>''0000000''  AND INACTIVE=0   
              ORDER BY JOB_NAME '
END 



--CHANGES NEW ID
IF(@CQUERYID =13)
BEGIN

SET @CQUERY = N'SELECT A.*,C.ATTRIBUTE_NAME, D.KEY_NAME    
              FROM ART_ATTR A (NOLOCK)    
              JOIN ATTRM C (NOLOCK) ON A.ATTRIBUTE_CODE = C.ATTRIBUTE_CODE      
              JOIN ATTR_KEY D (NOLOCK) ON A.KEY_CODE = D.KEY_CODE     
              WHERE A.ARTICLE_CODE = '''+ @CVALUE1    + ''' '  
              
END  


--CHANGES NEW ID
IF(@CQUERYID =14)
BEGIN

SET @CQUERY = N' SELECT A.*, B.PARA2_NAME, B.PARA2_ORDER    
			     FROM ART_DET A (NOLOCK)    
			     JOIN PARA2 B (NOLOCK) ON A.PARA2_CODE = B.PARA2_CODE     
			     WHERE A.ARTICLE_CODE = '''+ @CVALUE1    + '''    
			     ORDER BY B.PARA2_ORDER'    
              
END                
                   
                
  
  --CHANGES NEW ID
IF(@CQUERYID =15)
BEGIN

SET @CQUERY = N'SELECT A.*, B.PARA1_NAME    
			  FROM ART_PARA1 A (NOLOCK)    
			  JOIN PARA1 B  (NOLOCK) ON A.PARA1_CODE = B.PARA1_CODE       
			  WHERE A.ARTICLE_CODE = '''+ @CVALUE1    + '''      
			  ORDER BY B.PARA1_NAME '    
              
END        
   
    
   --CHANGES NEW ID
IF(@CQUERYID =16)
BEGIN

SET @CQUERY = N'SELECT PARA1_CODE, PARA1_NAME FROM PARA1 
  ORDER BY PARA1_NAME'   
              
END   


   --CHANGES NEW ID
IF(@CQUERYID =17)
BEGIN

SET @CQUERY = N'SELECT *,CAST('''' AS VARCHAR(500)) AS PICT_PATH FROM PRD_ARTICLE_MULTI_IMG
                WHERE ARTICLE_CODE = '''+ @CVALUE1    + ''''      
			       
              
END  

   
IF(@CQUERYID =18)
BEGIN

SET @CQUERY =  N'SELECT A.*,  B.JOB_NAME ,CAST(0 AS BIT) AS CHK   
			     FROM ART_JOBS A    
			     JOIN JOBS B ON A.JOB_CODE = B.JOB_CODE     
			     WHERE A.ARTICLE_CODE = '''+ @CVALUE1    + '''
			     ORDER BY A.JOB_ORDER' 
			       
              
END       
 
 
 IF(@CQUERYID =19)
BEGIN
----	ISNULL((SELECT STUFF((SELECT '',''+ b.AC_NAME   from artsuppliers a join lm01106 b (nolock) on a.ac_code= b.ac_code  WHERE A.Article_Code  =ATTR.Article_Code  FOR XML PATH('''')),1,1,'''')),'''')
SET @CQUERY1 = N'SELECT A.*,B.SUB_SECTION_NAME, B.ALIAS AS SUB_SECTION_ALIAS, B.MFG_CATEGORY,
                C.SECTION_NAME, C.ALIAS AS SECTION_ALIAS, D.UOM_NAME, E.USERNAME,F.USERNAME AS EDITUSERNAME ,ISNULL(G.ARTICLE_NO,'''') AS ARTICLE_SET_NAME 
				,'''' AS IMAGEPATH1,'''' AS IMAGEPATH2,'''' AS IMAGEPATH3  ,
				ISNULL((SELECT STUFF((SELECT '',''+ b.AC_NAME   from artsuppliers art join lm01106 b (nolock) on art.ac_code= b.ac_code  WHERE A.Article_Code  =art.Article_Code  FOR XML PATH('''')),1,1,'''')),'''') as supplier_name
				FROM ARTICLE A (NOLOCK)    
				JOIN SECTIOND B (NOLOCK) ON A.SUB_SECTION_CODE = B.SUB_SECTION_CODE     
				JOIN SECTIONM C (NOLOCK) ON B.SECTION_CODE = C.SECTION_CODE     
				JOIN UOM D  (NOLOCK) ON A.UOM_CODE = D.UOM_CODE     
				LEFT JOIN USERS E (NOLOCK) ON A.USER_CODE  = E.USER_CODE     
				LEFT JOIN USERS F (NOLOCK) ON A.EDT_USER_CODE = F.USER_CODE
				LEFT JOIN ARTICLE G (NOLOCK) ON A.ARTICLE_SET_CODE = G.ARTICLE_CODE       
				WHERE A.ARTICLE_CODE IN 
				(SELECT ARTICLE_CODE FROM ARTICLE 
				WHERE  ARTICLE_SET_CODE  = '''+ @CVALUE1    + ''' 
				OR ARTICLE_CODE  = '''+ @CVALUE1    + ''') '    
              ----DATATABLE ATTRIBUTE    
SET @CQUERY2 = N'SELECT ATTR.ARTICLE_CODE,AT1.ATTR1_KEY_NAME,AT2.ATTR2_KEY_NAME,AT3.ATTR3_KEY_NAME,AT4.ATTR4_KEY_NAME,AT5.ATTR5_KEY_NAME,AT6.ATTR6_KEY_NAME,AT7.ATTR7_KEY_NAME,AT8.ATTR8_KEY_NAME,AT9.ATTR9_KEY_NAME,AT10.ATTR10_KEY_NAME,AT11.ATTR11_KEY_NAME,AT12.ATTR12_KEY_NAME,AT13.ATTR13_KEY_NAME,AT14.ATTR14_KEY_NAME,
			        AT15.ATTR15_KEY_NAME,AT16.ATTR16_KEY_NAME,AT17.ATTR17_KEY_NAME,AT18.ATTR18_KEY_NAME,AT19.ATTR19_KEY_NAME,AT20.ATTR20_KEY_NAME,AT21.ATTR21_KEY_NAME,AT22.ATTR22_KEY_NAME,AT23.ATTR23_KEY_NAME,AT24.ATTR24_KEY_NAME,AT25.ATTR25_KEY_NAME 
                FROM ARTICLE_FIX_ATTR  ATTR (NOLOCK)    
                LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE 
				LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE
				LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE 
				LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE
				LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE 
				LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE
				LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE 
				LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE
				LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE 
				LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE
				LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE 
				LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE
				LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE 
				LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE
				LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE 
				LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE
				LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE
				LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE 
				LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE
				LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE 
				LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE
				LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE 
				LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE
				LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE 
				LEFT OUTER JOIN ATTR25_MST AT25(NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE  
                WHERE ATTR.ARTICLE_CODE IN (SELECT ARTICLE_CODE FROM ARTICLE 
				WHERE  ARTICLE_SET_CODE  = '''+ @CVALUE1    + ''' 
				OR ARTICLE_CODE  = '''+ @CVALUE1    + ''')     ' 
    
			 ----DATATABLE SIZE    
SET @CQUERY3 = N'			 SELECT A.*, B.PARA2_NAME, B.PARA2_ORDER    
			 FROM ART_DET A (NOLOCK)    
			 JOIN PARA2 B (NOLOCK) ON A.PARA2_CODE = B.PARA2_CODE     
			 WHERE A.ARTICLE_CODE IN 
				(SELECT ARTICLE_CODE FROM ARTICLE 
				WHERE  ARTICLE_SET_CODE  = '''+ @CVALUE1    + ''' 
				OR ARTICLE_CODE  = '''+ @CVALUE1    + ''')    
			 ORDER BY B.PARA2_ORDER    '
    
			 ----DATATABLE COLOR    
SET @CQUERY4 = N'			 SELECT A.*, B.PARA1_NAME    
			 FROM ART_PARA1 A (NOLOCK)    
			 JOIN PARA1 B  (NOLOCK) ON A.PARA1_CODE = B.PARA1_CODE       
			 WHERE A.ARTICLE_CODE IN 
				(SELECT ARTICLE_CODE FROM ARTICLE 
				WHERE  ARTICLE_SET_CODE  = '''+ @CVALUE1    + ''' 
				OR ARTICLE_CODE  = '''+ @CVALUE1    + ''')       
			 ORDER BY B.PARA1_NAME '   
    
             ----DATATABLE BOM NEW PRINT ------------------------
                
SET @CQUERY5 = N'			 SELECT  A.*,(A.AVG_QTY * A.RATE) AS TOTALCOST,     
			         D.ARTICLE_NO AS BOM_ARTICLE_NO,     
			         D.ARTICLE_NAME AS BOM_ARTICLE_NAME,     
			         E.UOM_NAME AS STK_UOM_NAME,BU.CONVERSION_UOM_NAME AS BOM_UOM_NAME, E.UOM_TYPE,
			         0 AS QUANTITY_IN_STOCK,F.SUB_SECTION_NAME,G.SECTION_NAME,H.PARA1_NAME AS BOM_PARA1_NAME,
			         I.PARA2_NAME AS BOM_PARA2_NAME    
			 FROM ART_BOM A     
			 JOIN ARTICLE D ON A.BOM_ARTICLE_CODE = D.ARTICLE_CODE 
			 JOIN UOM E ON D.UOM_CODE = E.UOM_CODE     
			 JOIN SECTIOND F ON D.SUB_SECTION_CODE= F.SUB_SECTION_CODE
			 JOIN SECTIONM G ON F.SECTION_CODE= G.SECTION_CODE
			 JOIN PARA1 H ON A.BOM_PARA1_CODE= H.PARA1_CODE
			 JOIN PARA2 I ON A.BOM_PARA2_CODE= I.PARA2_CODE     
			 LEFT OUTER JOIN UOM_CONVERSION UC ON UC.UOM_CODE=E.UOM_CODE
             LEFT OUTER JOIN BOM_UOM BU ON BU.CONVERSION_UOM_CODE=UC.CONVERSION_UOM_CODE   
			 WHERE A.ARTICLE_CODE IN 
				(SELECT ARTICLE_CODE FROM ARTICLE 
				WHERE  ARTICLE_SET_CODE  = '''+ @CVALUE1    + ''' 
				OR ARTICLE_CODE  = '''+ @CVALUE1    + ''') '    
    
			 ----DATATABLE JOBWORK    
	SET @CQUERY6 = N'		 SELECT A.*,  B.JOB_NAME ,CAST(0 AS BIT) AS CHK   
			 FROM ART_JOBS A    
			 JOIN JOBS B ON A.JOB_CODE = B.JOB_CODE     
			 WHERE A.ARTICLE_CODE IN 
				(SELECT ARTICLE_CODE FROM ARTICLE 
				WHERE  ARTICLE_SET_CODE  = '''+ @CVALUE1    + ''' 
				OR ARTICLE_CODE  = '''+ @CVALUE1    + ''') 
				ORDER BY A.JOB_ORDER ' 
			       
     SET @CQUERY = @CQUERY1+    @CQUERY2+@CQUERY3+@CQUERY4+@CQUERY5+@CQUERY6   
			       
              
END 
      
        
IF(@CQUERYID =20)  
BEGIN  
  
	SET  @cHEAD_CODE =    DBO.FN_ACT_TRAVTREE ('0000000021') ----ADD VARIABLE BY GAURI ON 17/4/2019
  
	SELECT  A.AC_CODE, A.AC_NAME    FROM LMV01106 A     
    WHERE ( CHARINDEX ( HEAD_CODE, @cHEAD_CODE ) > 0  OR ALLOW_CREDITOR_DEBTOR = 1 ) ----REPLACE VARIABLE FROM FUNCTION BY GAURI ON 17/4/2019     
    AND INACTIVE = 0 AND A.AC_NAME <> ''   
              
                
END         


        
IF(@CQUERYID =21)  
BEGIN  
    
		    
		SELECT A.ARTICLE_CODE ,A.JOB_CODE  ,JOBS.JOB_NAME 
		FROM ART_JOBS A (NOLOCK)
		JOIN JOBS (NOLOCK) ON A.JOB_CODE =JOBS.JOB_CODE 
		WHERE ARTICLE_CODE=@CVALUE1
        RETURN
	
END         
IF(@CQUERYID =22)  
BEGIN  
 --   SELECT PARA2_SET 
	--FROM PARA2 
	--WHERE ISNULL(PARA2_SET,'')<>'' 
	--GROUP BY PARA2_SET

	SELECT SIZE_SET_NAME AS PARA2_SET ,SIZE_SET_CODE
	FROM SIZE_SET_MST 
	WHERE ISNULL(SIZE_SET_NAME,'')<>'' 
	AND ISNULL(SIZE_SET_INACTIVE,0)=0
    RETURN
	
END  
IF(@CQUERYID =23)  
BEGIN  
    SELECT PARA1_SET 
	FROM PARA1
	WHERE ISNULL(PARA1_SET,'')<>'' 
	GROUP BY PARA1_SET
    RETURN
	
END     
IF (@CQUERYID = 24)  --108
BEGIN      
SET @CQUERY = N'SELECT A.PARA2_CODE, A.PARA2_NAME, ISNULL(B.SIZE_ORDER, A.PARA2_ORDER) PARA2_ORDER, C.SIZE_SET_NAME PARA2_SET     
              FROM PARA2 A 
			  JOIN SIZE_SET_DET B ON B.PARA2_CODE=A.PARA2_CODE
			  JOIN SIZE_SET_MST C ON C.SIZE_SET_CODE=B.SIZE_SET_CODE
			  WHERE A.INACTIVE=0         
              ORDER BY ISNULL(B.SIZE_ORDER, A.PARA2_ORDER), A.PARA2_NAME' --A.PARA2_CODE <> ''0000000''   AND  

END        
 IF @CQUERY <> ''      
 BEGIN      
  PRINT @CQUERY      
  EXEC SP_EXECUTESQL @CQUERY      
 END      
      
END


