create PROCEDURE SP3S_UPDATEIRRMRP
AS
BEGIN
    
    BEGIN TRY  
	BEGIN TRANSACTION  
	
    DECLARE @CLOCDEPTID VARCHAR(5),@CHODEPTID VARCHAR(5),@CERRORMSG VARCHAR(100),@UPDATEIRRMRP VARCHAR(5)
    
    SET @CERRORMSG=''
    
    SELECT TOP 1 @CLOCDEPTID=VALUE  FROM CONFIG WHERE CONFIG_OPTION ='LOCATION_ID'
    SELECT TOP 1 @CHODEPTID=VALUE  FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'
    
    SELECT TOP 1 @UPDATEIRRMRP=VALUE  FROM CONFIG WHERE  CONFIG_OPTION='UPDATEIRRMRP'
    IF ISNULL(@UPDATEIRRMRP,'')<>'1'
    GOTO END_PROC
    
    IF ISNULL(@CLOCDEPTID,'')=ISNULL(@CHODEPTID,'')
    GOTO END_PROC
    
    IF OBJECT_ID('TEMPDB..#TMPIRR','U') IS NOT NULL
       DROP TABLE #TMPIRR
	       
	;WITH CTE AS
	(
		SELECT B.PRODUCT_CODE ,B.NEW_MRP,B.LAST_UPDATE,
		       SR=ROW_NUMBER () OVER (PARTITION BY  B.PRODUCT_CODE ORDER BY A.LAST_UPDATE DESC) 
		FROM IRM01106 A
		JOIN IRD01106 B ON A.IRM_MEMO_ID =B.IRM_MEMO_ID 
		WHERE B.OLD_MRP <>B.NEW_MRP 
		and isnull(b.new_product_code,'')=''
		AND ISNULL(A.TYPE,0)<>2 and A.location_Code =@CHODEPTID 
	)
    SELECT * INTO #TMPIRR FROM CTE WHERE SR=1
    ORDER BY PRODUCT_CODE 
    

    UPDATE A SET MRP=B.NEW_MRP  FROM SKU (NOLOCK) A
    JOIN #TMPIRR B ON A.PRODUCT_CODE =B.PRODUCT_CODE 
    WHERE ISNULL(A.MRP,0) <>ISNULL(B.NEW_MRP ,0)
    
    
    

END TRY  
 BEGIN CATCH  
  SET @CERRORMSG = 'STEP-  SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()       
  GOTO END_PROC  
 END CATCH  
   
END_PROC:  
	  IF @@TRANCOUNT>0  
	  BEGIN
	  IF ISNULL(@CERRORMSG,'')='' 
	   COMMIT TRANSACTION  
	  ELSE  
	   ROLLBACK  
	 END
	 
	 SELECT  @CERRORMSG AS ERRMSG
	   
END
