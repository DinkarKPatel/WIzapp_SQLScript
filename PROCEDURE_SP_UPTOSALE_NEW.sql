CREATE PROCEDURE SP_UPTOSALE_NEW--(LocId 3 digit change by Sanjay:06-11-2024)
(    
 @NMODE				NUMERIC(1)=1,    
 @CUSERCODE			VARCHAR(7)='0000000',    
 @DTODAYDATE		VARCHAR(10)='',    
 @CDEPTID			VARCHAR(10)='',    
 @BINCLUDEESTIMATE	BIT=0  
)    
--WITH ENCRYPTION
AS     
BEGIN     
    
	DECLARE @CMTEMP TABLE ( LOCATION_ID VARCHAR(10), TOTAL_BILLS NUMERIC(10),   
    TOTAL_SALE NUMERIC(12,2), LOCATION_NAME VARCHAR(100),     
    USER_ID VARCHAR(30), QUANTITY NUMERIC(12,3),USERNAME VARCHAR(MAX),TOTAL_SALE_RNDOFF NUMERIC(12,2),TOTAL_LOCATION NUMERIC(5) )    
         
	DECLARE @CMTEMP1 TABLE ( PAYMODE_NAME VARCHAR(200), USER_ID VARCHAR(30),TOTAL_AMOUNT NUMERIC(12,2),  
	TOTAL_BILLS NUMERIC(10),LOCATION_ID VARCHAR(10),USERNAME VARCHAR(MAX))  

	DECLARE @CMTEMP2 TABLE ( SUB_SECTION_NAME VARCHAR(200), USER_ID VARCHAR(30),TOTAL_AMOUNT NUMERIC(12,2),  
	TOTAL_QUANTITY NUMERIC(10),LOCATION_ID VARCHAR(10),USERNAME VARCHAR(MAX))  
    
    
	DECLARE @NDISPLAY_BILLS_CURRENT_USER_ONLY NUMERIC(1),    
   @NVIEW_DATA_AFTER_DFM NUMERIC(1),     
   @LVALID     NVARCHAR(254),     
   @CCMD     NVARCHAR(MAX),    
   @CLOCFILTER    NVARCHAR(MAX),    
   @CHOLOCID    VARCHAR(5),    
   @NLOCCOUNT    NUMERIC(5),    
   @NDFMFILTER    NUMERIC(5),    
   @CDFMFILTER    NVARCHAR(MAX),    
   @CUSERFILTER   NVARCHAR(MAX)    
     
 DECLARE @DFROMDT VARCHAR(10), @DTODT  VARCHAR(10) ,@FREEZED_DATEfilter varchar(100),@FREEZED_DATE DateTime   

   set @FREEZED_DATEfilter=''
   SELECT  @FREEZED_DATE=FREEZED_DATE FROM DBO.GET_DATAFREEZE_DATE(@CUSERCODE,'FRMSALE',@DTODAYDATE) where ALLOW_VIEW =1

   if isnull(@FREEZED_DATE,'')<>''
      set @FREEZED_DATEfilter=' and a.cm_dt >='''+CONVERT(VARCHAR(11),@FREEZED_DATE,120)+''' '


   --changes sale disply only user has to be access location
   IF OBJECT_ID ('TEMPDB..#TMPLOCUSER','U') IS NOT NULL
      DROP TABLE #TMPLOCUSER
   SELECT DISTINCT  DEPT_ID AS USR_DEPT_ID INTO #TMPLOCUSER FROM LOCUSERS WHERE USER_CODE =@CUSERCODE

    
 IF ISNULL(@DTODAYDATE,'') = ''    
  SET @DTODAYDATE = CONVERT(VARCHAR(11),GETDATE (),120)    
    
 SET @DTODT = @DTODAYDATE    
    
 SET @DFROMDT = CONVERT(VARCHAR,     
      CONVERT(VARCHAR(10), YEAR(@DTODT) - (CASE WHEN MONTH(@DTODT)<4 THEN 1 ELSE 0 END) )     
      + '-04-01')    


           
 --**************CHECKING VIEWING DATA OPTION    
 --SELECT @NDISPLAY_BILLS_CURRENT_USER_ONLY = CONVERT(NUMERIC(1),(CASE WHEN VALUE='' THEN '0' ELSE VALUE END ))    
 --FROM USER_ROLE_DET A JOIN USERS B ON A.ROLE_ID=B.ROLE_ID 
 --WHERE USER_CODE=@CUSERCODE AND FORM_NAME='FRMSALE'     
 --AND FORM_OPTION='DISPLAY_BILLS_ALL_USERS'  
 
 SELECT @NDISPLAY_BILLS_CURRENT_USER_ONLY = isnull(Allow_access_retail_sale_All_users,0) From users
 WHERE USER_CODE=@CUSERCODE      
  
    
 --**************CHECK FREEZING     
 SELECT @NVIEW_DATA_AFTER_DFM = VIEW_DATA_AFTER_DFM FROM USERS WHERE USER_CODE =@CUSERCODE    
    
 --**************CHECK NO OF LOCATION    
 SELECT @NLOCCOUNT = COUNT(*) FROM LOCATION WHERE DEPT_ID = MAJOR_DEPT_ID    
    
 --**************CHECK HO LOCATION    
 SELECT @CHOLOCID = VALUE FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'    
     
 IF ISNULL(@CDEPTID,'') = ''    
  SELECT @CDEPTID = DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID     
    
    DECLARE @CURRENTYEAR VARCHAR(10)
    SET @CURRENTYEAR=(SELECT '01'+ DBO.FN_GETFINYEAR(@DTODT))
 --SET @LVALID = (CASE WHEN @NMODE = 1     
 --      THEN ' A.CM_DT = @DTODT '    
 --     WHEN @NMODE = 2    
 --      THEN ' (MONTH(A.CM_DT) = MONTH(@DTODT) AND YEAR(A.CM_DT)=YEAR(@DTODT)) '    
 --     WHEN @NMODE = 3    
 --      THEN ' A.CM_DT BETWEEN @DFROMDT AND @DTODT '    
 --     ELSE ''    
 --    END)    
     SET @LVALID= (CASE WHEN @NMODE = 1 THEN ' A.CM_DT = '''+CONVERT(VARCHAR(11),@DTODT,120)+''' '    
                        WHEN @NMODE = 2 THEN ' MONTH(A.CM_DT) = MONTH('''+@DTODT+''') AND A.FIN_YEAR='''+@CURRENTYEAR+''' AND A.CM_DT <= '''+CONVERT(VARCHAR(11),@DTODT,120)+''' '    
                        WHEN @NMODE = 3 THEN ' A.FIN_YEAR='''+@CURRENTYEAR+'''' ELSE ''  END)    
    
     IF @NMODE=3
     SET @LVALID=@LVALID+ 'AND  A.CM_DT <= '''+CONVERT(VARCHAR(11),@DTODT,120)+''' '
        
 SET @CLOCFILTER = (CASE WHEN @NLOCCOUNT>1 AND @CHOLOCID=@CDEPTID THEN ''    
       ELSE N' AND a.location_code =  ''' + @CDEPTID + '''' END)    
    
 SET @NDFMFILTER = @NVIEW_DATA_AFTER_DFM    
     
 IF @NDFMFILTER=1 OR @CUSERCODE = '0000000'    
  SET @CDFMFILTER = N''    
 ELSE    
  SET @CDFMFILTER = N''-- AND CM_DT > ISNULL((SELECT FREEZING_DATE FROM DFMSETUP WHERE MODULE_NAME = ''SLS'' AND USER_CODE = '''+@CUSERCODE+'''),'''')'    
      
 
 --SET @NDISPLAY_BILLS_CURRENT_USER_ONLY=0     
 --SET @CUSERFILTER = (CASE WHEN @CUSERCODE = '0000000' OR @NDISPLAY_BILLS_CURRENT_USER_ONLY=1 THEN  N''    
 --       ELSE  N' AND A.USER_CODE = '''+ @CUSERCODE + '''' END)   
		 
SET @CUSERFILTER = (CASE WHEN @CUSERCODE = '0000000' OR @NDISPLAY_BILLS_CURRENT_USER_ONLY=1 THEN  N''    
ELSE  N' AND A.USER_CODE IN (Select distinct xns_user_code from user_xns_filter WHERE USER_CODE= '''+@CUSERCODE+''' UNION SELECT '''+@CUSERCODE+''' AS xns_user_code)' END)    
        
       
    
 SET @CCMD=  N' SELECT a.location_code AS LOCATION_ID,      
      SUM( CASE WHEN ' + @LVALID + ' THEN 1 ELSE 0 END) AS TOTAL_BILLS,    
      SUM( CASE WHEN ' + @LVALID + ' THEN A.NET_AMOUNT - A.ATD_CHARGES ELSE 0 END) AS TOTAL_SALE,     
	  B.DEPT_ID+''-''+B.DEPT_NAME  AS LOCATION_NAME,C.USER_CODE AS USER_ID,    
      SUM( ISNULL(CMD.QUANTITY,0) ) AS QUANTITY ,C.USERNAME,
      SUM( CASE WHEN ' + @LVALID + ' THEN A.NET_AMOUNT - (A.ATD_CHARGES+A.ROUND_OFF) ELSE 0 END) AS TOTAL_SALE_RNDOFF   
	  ,COUNT(DISTINCT a.location_code) AS TOTAL_LOCATION
      FROM CMM01106 A     
      LEFT OUTER JOIN VW_BILL_PAYMODE PAY ON A.CM_ID = PAY.MEMO_ID AND PAY.XN_TYPE = ''SLS''    
      LEFT OUTER JOIN     
      (    
		SELECT CM_ID, SUM(QUANTITY) AS QUANTITY FROM CMD01106    
		GROUP BY CM_ID    
      ) CMD ON CMD.CM_ID = A.CM_ID    
      JOIN LOCATION B ON a.location_code=B.DEPT_ID  
	  JOIN #TMPLOCUSER LU ON LU.USR_DEPT_ID=B.DEPT_ID
      JOIN USERS C ON A.USER_CODE=C.USER_CODE     
      LEFT OUTER JOIN DTM D ON A.DT_CODE=D.DT_CODE     
      WHERE '+@LVALID+' AND CANCELLED=0 AND CM_MODE<>2  AND (A.MEMO_TYPE=1 OR '+ STR(@BINCLUDEESTIMATE)+'=1) ' +     
      @CLOCFILTER +     
      @CDFMFILTER +     
      @CUSERFILTER +  
	  @FREEZED_DATEfilter +
      N' GROUP BY a.location_code,B.DEPT_ID, B.DEPT_ID + ''-'' + B.DEPT_NAME, C.USERNAME,C.USER_CODE '    
    
  PRINT '--121 '+CHAR(13)+@CCMD  
    
    
 INSERT @CMTEMP ( LOCATION_ID,  TOTAL_BILLS, TOTAL_SALE, LOCATION_NAME, USER_ID,QUANTITY,USERNAME ,TOTAL_SALE_RNDOFF,TOTAL_LOCATION)    
 EXEC SP_EXECUTESQL @CCMD, N'@DFROMDT DATETIME, @DTODT DATETIME',@DFROMDT, @DTODT    
    

SET @CCMD=N'SELECT a.location_code AS LOCATION_ID,   
(CASE WHEN SUBSTRING(A.CM_NO,len(a.location_code)+3,1)=''N'' and c.paymode_code =''0000004'' THEN ''CREDIT NOTE ISSUE''  ELSE B.PAYMODE_NAME END) AS PAYMODE_NAME,C1.USER_CODE AS [USER_ID],   
   SUM(C.AMOUNT) AS [TOTAL_AMOUNT],COUNT(A.CM_ID) AS [TOTAL_BILLS] ,C1.USERNAME  
  FROM PAYMODE_XN_DET C  
  JOIN PAYMODE_MST B ON B.PAYMODE_CODE=C.PAYMODE_CODE  
  JOIN CMM01106 A ON A.CM_ID=C.MEMO_ID  AND C.XN_TYPE=''SLS''  
  JOIN USERS C1 ON C1.USER_CODE=A.USER_CODE   
  JOIN #TMPLOCUSER LU ON LU.USR_DEPT_ID=a.location_code
  WHERE  '+ @LVALID +'  AND CANCELLED=0 AND CM_MODE<>2  AND (A.MEMO_TYPE=1 OR '+ STR(@BINCLUDEESTIMATE)+'=1) AND C.AMOUNT<>0 '+   @CUSERFILTER + @FREEZED_DATEfilter +  
  ' GROUP BY a.location_code, C1.USERNAME,(CASE WHEN SUBSTRING(A.CM_NO,len(a.location_code)+3,1)=''N'' and c.paymode_code =''0000004'' THEN ''CREDIT NOTE ISSUE'' ELSE B.PAYMODE_NAME END),C1.USER_CODE   
  ORDER BY (CASE WHEN SUBSTRING(A.CM_NO,len(a.location_code)+3,1)=''N'' and c.paymode_code =''0000004'' THEN ''CREDIT NOTE ISSUE'' ELSE B.PAYMODE_NAME END),USER_ID'   
    
   
 PRINT @CCMD  
   
INSERT @CMTEMP1 ( LOCATION_ID, PAYMODE_NAME , USER_ID ,TOTAL_AMOUNT , TOTAL_BILLS,USERNAME )    
EXEC SP_EXECUTESQL @CCMD  

  
IF (SELECT TOP 1 VALUE FROM CONFIG WHERE  CONFIG_OPTION='SHOW_SUB_SECTION_WISE_TOTALS_IN_SALES_FIGURE')='1'
BEGIN

SET @CCMD=N'SELECT A.USER_CODE,a.location_code AS DEPT_ID,E1.SECTION_NAME, U.USERNAME,
			SUM(B.QUANTITY) AS QTY,SUM((B.RFNET)) AS [VALUE]
			FROM CMD01106 B
			JOIN CMM01106 A ON B.CM_ID=A.CM_ID
			JOIN SKU C ON C.PRODUCT_CODE=B.PRODUCT_CODE
			JOIN ARTICLE D ON D.ARTICLE_CODE=C.ARTICLE_CODE
			JOIN SECTIOND E ON E.SUB_SECTION_CODE=D.SUB_SECTION_CODE
			JOIN SECTIONM E1 ON E1.SECTION_CODE=E.SECTION_CODE
			JOIN USERS U ON U.USER_CODE=A.USER_CODE
			JOIN #TMPLOCUSER LU ON LU.USR_DEPT_ID=a.location_code
			WHERE '+ @LVALID +'  AND  A.CANCELLED=0  AND CM_MODE<>2  AND (A.MEMO_TYPE=1 OR '+ STR(@BINCLUDEESTIMATE)+'=1) ' +
			@CLOCFILTER +     
			@CDFMFILTER +     
			@CUSERFILTER +   
			@FREEZED_DATEfilter +
			' GROUP BY a.location_code,A.USER_CODE,U.USERNAME, E1.SECTION_NAME
			ORDER BY A.USER_CODE,a.location_code,E1.SECTION_NAME'
   
 PRINT @CCMD  


	INSERT @CMTEMP2 ( USER_ID ,LOCATION_ID, SUB_SECTION_NAME,USERNAME , TOTAL_QUANTITY , TOTAL_AMOUNT )    
	EXEC SP_EXECUTESQL @CCMD,  
	 N'@DFROMDT DATETIME, @DTODT DATETIME',     
	  @DFROMDT, @DTODT     
END

--FIRST DATASET

 IF(@CUSERCODE = '0000000'  OR @NDISPLAY_BILLS_CURRENT_USER_ONLY=1)  
    BEGIN     

	
      --INSERT @CMTEMP ( LOCATION_ID,  TOTAL_BILLS, TOTAL_SALE, LOCATION_NAME, USER_ID,QUANTITY )    
	  SELECT ''  AS LOCATION_ID,   SUM(TOTAL_BILLS) AS [TOTAL_BILLS],SUM(TOTAL_SALE) AS [TOTALSALE],   
	  'ALL LOCATIONS'  AS LOCATION_NAME,    
      CONVERT(NUMERIC(12,2), (CASE WHEN ( SUM(TOTAL_BILLS ))>0  THEN SUM(TOTAL_SALE)/SUM( TOTAL_BILLS )   ELSE 0 END)) AS AVGSALE,  
      '' AS USER_ID  ,SUM(QUANTITY) AS[QUANTITY],'ALL USERS' AS USERNAME,SUM(TOTAL_SALE_RNDOFF) AS [TOTAL_SALE_RNDOFF]  ,COUNT(DISTINCT LOCATION_ID)AS TOTAL_LOCATION
      FROM @CMTEMP A  
      
      UNION ALL  
      SELECT LOCATION_ID,   SUM(TOTAL_BILLS) AS [TOTAL_BILLS],SUM(TOTAL_SALE) AS [TOTALSALE],   
      B.DEPT_ID+'-'+B.DEPT_NAME AS LOCATION_NAME,     
      CONVERT(NUMERIC(12,2), (CASE WHEN ( SUM(TOTAL_BILLS ))>0  THEN SUM(TOTAL_SALE)/SUM( TOTAL_BILLS )   ELSE 0 END)) AS AVGSALE,  
      '' AS USER_ID , SUM(QUANTITY) AS[QUANTITY],'ALL USERS' AS [USERNAME],SUM(TOTAL_SALE_RNDOFF) AS [TOTAL_SALE_RNDOFF]  ,COUNT(DISTINCT LOCATION_ID) AS TOTAL_LOCATION 
      FROM @CMTEMP A  
      JOIN LOCATION B ON B.DEPT_ID=A.LOCATION_ID  
      GROUP BY LOCATION_ID, B.DEPT_ID,B.DEPT_NAME  
      
      UNION ALL  
      SELECT LOCATION_ID,   TOTAL_BILLS, TOTAL_SALE AS TOTALSALE,  
      B.DEPT_ID+'-'+B.DEPT_NAME AS LOCATION_NAME,    
      CONVERT(NUMERIC(12,2), (CASE WHEN ( TOTAL_BILLS )>0  THEN TOTAL_SALE/( TOTAL_BILLS )   ELSE 0 END)) AS AVGSALE,     
      USER_ID  ,QUANTITY,USERNAME ,(TOTAL_SALE_RNDOFF) AS [TOTAL_SALE_RNDOFF]    ,TOTAL_LOCATION
      FROM @CMTEMP A  
      JOIN LOCATION B ON B.DEPT_ID=A.LOCATION_ID  
      
      UNION ALL  
      SELECT ''  AS LOCATION_ID,   SUM(TOTAL_BILLS) AS [TOTAL_BILLS],SUM(TOTAL_SALE) AS [TOTALSALE],   
      'ALL LOCATIONS'  AS LOCATION_NAME,    
      CONVERT(NUMERIC(12,2), (CASE WHEN ( SUM(TOTAL_BILLS ))>0  THEN SUM(TOTAL_SALE)/SUM( TOTAL_BILLS )   ELSE 0 END)) AS AVGSALE,  
      USER_ID  ,SUM(QUANTITY) AS[QUANTITY],USERNAME,SUM(TOTAL_SALE_RNDOFF) AS [TOTAL_SALE_RNDOFF]     ,COUNT(distinct LOCATION_ID) AS TOTAL_LOCATION
      FROM @CMTEMP A  
      GROUP BY USER_ID,USERNAME  
      ORDER BY 1,6
    END  
 ELSE  
    BEGIN  
       SELECT LOCATION_ID,   TOTAL_BILLS, TOTAL_SALE AS TOTALSALE,  
       B.DEPT_ID+'-'+B.DEPT_NAME AS LOCATION_NAME,    
       CONVERT(NUMERIC(12,2), (CASE WHEN ( TOTAL_BILLS )>0  THEN TOTAL_SALE/( TOTAL_BILLS) ELSE 0 END)) AS AVGSALE,     
       USER_ID  ,QUANTITY,USERNAME,(TOTAL_SALE_RNDOFF) AS [TOTAL_SALE_RNDOFF]     , TOTAL_LOCATION
       FROM @CMTEMP  A  
       JOIN LOCATION B ON B.DEPT_ID=A.LOCATION_ID  
       ORDER BY 1,6
 END  
 

--SECOND DATASET
 IF(@CUSERCODE = '0000000'  OR @NDISPLAY_BILLS_CURRENT_USER_ONLY=1)  
   BEGIN 
IF @CHOLOCID=@CDEPTID
        SELECT LOCATION_ID ,PAYMODE_NAME , USER_ID  AS [USER_ID] ,USERNAME,SUM(TOTAL_AMOUNT) AS [TOTAL_AMOUNT] , SUM(TOTAL_BILLS) AS [TOTAL_BILLS]    
        FROM @CMTEMP1   
        GROUP BY PAYMODE_NAME,LOCATION_ID,USERNAME,USER_ID  
     --ADDED FILTER FOR CURRENT LOCATION(IF NOT HO)
     ELSE   
        SELECT LOCATION_ID ,PAYMODE_NAME , USER_ID  AS [USER_ID] ,USERNAME,SUM(TOTAL_AMOUNT) AS [TOTAL_AMOUNT] , SUM(TOTAL_BILLS) AS [TOTAL_BILLS]    
        FROM @CMTEMP1   
        WHERE LOCATION_ID=@CDEPTID
        GROUP BY PAYMODE_NAME,LOCATION_ID,USERNAME,USER_ID  
   END  
 ELSE  
    BEGIN  
      SELECT * FROM @CMTEMP1 WHERE TOTAL_AMOUNT<>0  
    END 
  
  
 --THIRD DATASET 
 IF (SELECT COUNT(*) FROM @CMTEMP2)>0
   BEGIN
	 IF(@CUSERCODE = '0000000' OR @NDISPLAY_BILLS_CURRENT_USER_ONLY=1)  
		BEGIN     
		  SELECT LOCATION_ID ,SUB_SECTION_NAME , USER_ID  AS [USER_ID] ,USERNAME,SUM(TOTAL_AMOUNT) AS [TOTAL_AMOUNT] , SUM(TOTAL_QUANTITY) AS [TOTAL_QUANTITY]    
		  FROM @CMTEMP2   
		  GROUP BY SUB_SECTION_NAME,LOCATION_ID,USERNAME ,USER_ID
		END 
		ELSE
		  SELECT * FROM @CMTEMP2 
   END 
 ELSE 
	SELECT * FROM @CMTEMP2  
 --END OF PROCEDURE    
END     
--*****************END OF SP_UPTOSALE_NEW

