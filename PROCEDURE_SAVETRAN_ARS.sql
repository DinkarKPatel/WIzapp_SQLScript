create PROCEDURE SAVETRAN_ARS  
(  
 @NUPDATEMODE NUMERIC(1,0),  --@NUPDATEMODE 1 FOR ADD,2 FOR EDIT   
 @NSPID INT,                  
 @CMEMONOPREFIX VARCHAR(5)=  '',  
 @CFINYEAR VARCHAR(5)='',  
 @CMEMO_ID VARCHAR(22)=''   --@CTEMPLATE_ID CODE REQUIRED FOR EDIT MODE  
)  
----WITH ENCRYPTION  
AS  
BEGIN  
  DECLARE @CMASTERTABLENAME VARCHAR(100),  
          @CTEMPMASTERTABLENAME VARCHAR(100),  
          @CDETAILTABLENAME VARCHAR(100),  
          @CTEMPDETAILTABLENAME VARCHAR(100),  
          @CDETAILTABLENAME1 VARCHAR(100),  
          @CTEMPDETAILTABLENAME1 VARCHAR(100),  
          @CDETAILTABLENAME2 VARCHAR(100),  
          @CTEMPDETAILTABLENAME2 VARCHAR(100),  
          @CDETAILTABLENAME3 VARCHAR(100),  
          @CTEMPDETAILTABLENAME3 VARCHAR(100),            
    @CTEMPDBNAME VARCHAR(100),    
    @NSTEP VARCHAR(10),  
    @CERRORMSG VARCHAR(500),  
    @NSAVETRANLOOP BIT,  
    @CCMD NVARCHAR(MAX),  
    @NMEMONOLEN VARCHAR(10),  
    @CMEMONOVAL VARCHAR(7),  
    @CMEMONO VARCHAR(100),  
          @CWHERE VARCHAR(100), @CLOC_ID VARCHAR(4)=''  
            
          SET @CWHERE=' SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''  
            
          SET @NSTEP = 0  -- SETTTING UP ENVIRONMENT    
    SET @CTEMPDBNAME = ''   
     
   SET @CMASTERTABLENAME ='ARS_MST'    
   SET @CTEMPMASTERTABLENAME = 'ARS_ARS_MST_UPLOAD'  
     
      SET @CDETAILTABLENAME ='ARS_STOCK_LEVEL_MST'   
      SET @CTEMPDETAILTABLENAME = 'ARS_ARS_STOCK_LEVEL_MST_UPLOAD'  
      --SET @CDETAILTABLENAME3 ='ARS_GENORDERS_BASE'   
      --SET @CTEMPDETAILTABLENAME3 = 'ARS_ARS_GENORDERS_BASE_UPLOAD'        
      SET @CDETAILTABLENAME1 ='ARS_DET'    
      SET @CTEMPDETAILTABLENAME1 = 'ARS_ARS_DET_UPLOAD'  
      --SET @CDETAILTABLENAME2 ='ARS_PERMISSIONS_DET'    
      --SET @CTEMPDETAILTABLENAME2 = 'ARS_ARS_PERMISSIONS_DET_UPLOAD'  
        
      SET @CERRORMSG   = ''  
	  SET @CMEMONO   = 'ARS_ID'  
	  SET @NMEMONOLEN   = 7  
     
  BEGIN TRY  
     BEGIN TRANSACTION  
        
      SET @NSTEP = 30  --CALL FROM ADD MODE  
       
  IF @NUPDATEMODE = 3
	BEGIN
		SET @CERRORMSG=''
		IF @CMEMO_ID='' SET @CERRORMSG='ARS_ID can not be blank'
		IF NOT EXISTS(SELECT TOP 1 ARS_ID FROM ARS_MST WHERE ARS_ID=@CMEMO_ID)
		   SET @CERRORMSG='ARS_ID not found'
		ELSE
		   UPDATE ARS_MST SET CANCELLED=1,LAST_UPDATE=GETDATE() WHERE ARS_ID=@CMEMO_ID
		GOTO END_PROC
	END
  
  IF @NUPDATEMODE = 1  
  BEGIN  
   SET @NSAVETRANLOOP=0  
   WHILE @NSAVETRANLOOP=0  
   BEGIN  
       EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,'',0, @CMEMONOVAL OUTPUT    
		SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+'   
         WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' )  
         SET @NLOOPOUTPUT=0  
         ELSE  
         SET @NLOOPOUTPUT=1'  
		PRINT @CCMD  
        EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT  
      END  
  
      IF @CMEMONOVAL IS NULL    
         BEGIN  
        SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'   
        GOTO END_PROC      
         END  
  
   SET @NSTEP = 30  -- GENERATING NEW ID  
     
   SET @NSTEP = 60 -- UPDATING NEW ID INTO TEMP TABLES  
   SET @CCMD=N'UPDATE '+@CTEMPMASTERTABLENAME+' SET '+@CMEMONO+'='''+@CMEMONOVAL+''',LAST_UPDATE=GETDATE() WHERE '+@CWHERE  
   PRINT @CCMD   
   EXEC SP_EXECUTESQL @CCMD   
     
   SET @NSTEP = 65 -- UPDATING NEW ID INTO TEMP TABLES  
   SET @CCMD=N'UPDATE '+@CTEMPDETAILTABLENAME+' SET '+@CMEMONO+'='''+@CMEMONOVAL+''' WHERE '+@CWHERE  
   PRINT @CCMD   
   EXEC SP_EXECUTESQL @CCMD   
     
   SET @CCMD=N'SELECT TOP 1* FROM '+@CTEMPDETAILTABLENAME1
   PRINT '1-'+@CCMD   
   --EXEC SP_EXECUTESQL @CCMD   



   SET @NSTEP = 68 -- remove dup enteries
   IF OBJECT_ID('tempdb..##COL') IS NOT NULL DROP TABLE ##COL
   CREATE TABLE ##COL(COL VARCHAR(1000))
   DECLARE @CODE VARCHAR(MAX)='DELETE ##COL;'+CHAR(13),@JN VARCHAR(MAX)=''
   SELECT @CODE=COALESCE(@CODE,'')+'IF EXISTS(SELECT TOP 1 '+COLUMN_NAME+' FROM '+@CTEMPDETAILTABLENAME1+' WHERE SP_ID='''+CAST(@NSPID AS VARCHAR)+''' AND CONVERT(INT,'+COLUMN_NAME+')<>0)
      INSERT ##COL SELECT '''+COLUMN_NAME+''';' +CHAR(13)
   FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=@CTEMPDETAILTABLENAME1 AND COLUMN_NAME LIKE '%CODE'
   --PRINT '67.1 '+@CODE
   EXEC(@CODE)
   SET @CODE=''
   SELECT @CODE=COALESCE(@CODE,'')+COL+',' FROM ##COL
   SET @CODE=RTRIM(@CODE)
   IF RIGHT(@CODE,1)=',' SET @CODE=LEFT(@CODE,LEN(@CODE)-1)
   
   IF OBJECT_ID('tempdb..##TGT') IS NOT NULL DROP TABLE ##TGT
   
   SET @CCMD=N'SELECT '+@CODE+',SUM(ISNULL(TARGET_DAILY_SALE,0))TARGET_DAILY_SALE
    INTO ##TGT
   FROM '+@CTEMPDETAILTABLENAME1+'
   WHERE '+@CWHERE+'
   GROUP BY '+@CODE  
   PRINT '67 '+@CCMD   
   EXEC SP_EXECUTESQL @CCMD   


   SET @JN='WHERE '
   SELECT @JN=COALESCE(@JN,'')+@CTEMPDETAILTABLENAME1+'.'+COL+'=##TGT.'+COL+' ; ' FROM ##COL
   SET @JN=RTRIM(@JN)
   IF @JN=LEFT(@JN,LEN(@JN)-1)
   PRINT 'B '+@JN
   SET @JN=REPLACE(@JN,';','AND')
   PRINT 'A '+@JN
   IF RIGHT(@JN,3)='AND'
    SET @JN=LEFT(@JN,LEN(@JN)-3)
   PRINT 'A1 '+@JN
   IF OBJECT_ID('tempdb..##COL') IS NOT NULL DROP TABLE ##COL
   
   SET @CCMD=N';WITH CTE AS (SELECT '+@CODE+',R=ROW_NUMBER()OVER(PARTITION BY '+@CODE+' ORDER BY ISNULL(TARGET_DAILY_SALE,0))
   FROM '+@CTEMPDETAILTABLENAME1
   +' WHERE '+@CWHERE+')
   DELETE FROM CTE WHERE R>1'  
   PRINT '67 '+@CCMD   
   EXEC SP_EXECUTESQL @CCMD   
   
   
   
   SET @NSTEP=69
   SET @CCMD=N'UPDATE '+@CTEMPDETAILTABLENAME1+' SET TARGET_DAILY_SALE=(SELECT ##TGT.TARGET_DAILY_SALE FROM ##TGT '+@JN+')
   WHERE '+@CWHERE
   PRINT '69 '+@CCMD   
   EXEC SP_EXECUTESQL @CCMD   
   IF OBJECT_ID('tempdb..##TGT') IS NOT NULL DROP TABLE ##TGT
   
   
   SET @NSTEP = 70 -- UPDATING NEW ID INTO TEMP TABLES  
   SET @CCMD=N'UPDATE '+@CTEMPDETAILTABLENAME1+' SET '+@CMEMONO+'='''+@CMEMONOVAL+''',ROW_ID=NEWID() WHERE '+@CWHERE  
   PRINT @CCMD   
   EXEC SP_EXECUTESQL @CCMD   
   
   --SET @NSTEP = 72 -- UPDATING NEW ID INTO TEMP TABLES  
   --SET @CCMD=N'UPDATE '+@CTEMPDETAILTABLENAME2+' SET '+@CMEMONO+'='''+@CMEMONOVAL+''',ROW_ID=NEWID() WHERE '+@CWHERE  
   --PRINT @CCMD   
   --EXEC SP_EXECUTESQL @CCMD   
  
   --SET @NSTEP = 77 -- UPDATING NEW ID INTO TEMP TABLES  
   --SET @CCMD=N'UPDATE '+@CTEMPDETAILTABLENAME3+' SET '+@CMEMONO+'='''+@CMEMONOVAL+''',ROW_ID=NEWID() WHERE '+@CWHERE  
   --PRINT @CCMD   
   --EXEC SP_EXECUTESQL @CCMD    
     
  END--END FROM ADD MODE  
       
     ELSE  
  BEGIN--CALL FROM EDIT AND CANCELLED MODE  
       SET @NSTEP = 80  -- GETTING MEMO ID FROM TEMP TABLE  
         
       SET @CCMD=N'SELECT @CMEMONOVAL='+@CMEMONO+' FROM ' +@CMASTERTABLENAME+ ' WHERE ARS_ID= '''+@CMEMO_ID+''''   
       PRINT @CCMD  
       EXEC SP_EXECUTESQL @CCMD,N'@CMEMONOVAL VARCHAR(7) OUTPUT',@CMEMONOVAL OUTPUT  
         
       SET @NSTEP = 90  
       IF @CMEMONO IS NULL OR @CMEMONO LIKE '%LATER%'    
       BEGIN  
      SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR PLEASE ENTER MEMO ID FOR UPDATING....'   
      GOTO END_PROC      
       END  
         
         
       SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLENAME + ' SET LAST_UPDATE=GETDATE()  WHERE ' + @CMEMONO + ' = ''' + @CMEMONOVAL + ''' AND '+@CWHERE  
       EXEC SP_EXECUTESQL @CCMD  
         
       SET @NSTEP = 100 -- UPDATING NEW ID INTO TEMP TABLES  
       SET @CCMD=N'UPDATE '+@CTEMPDETAILTABLENAME+' SET ROW_ID=NEWID() WHERE LEFT(row_id,5)=''LATER'' AND  '+@CWHERE  
       PRINT @CCMD   
       EXEC SP_EXECUTESQL @CCMD   
       
       SET @NSTEP = 105 -- UPDATING NEW ID INTO TEMP TABLES  
       SET @CCMD=N'UPDATE '+@CTEMPDETAILTABLENAME1+' SET ROW_ID=NEWID() WHERE LEFT(row_id,5)=''LATER'' AND  '+@CWHERE  
       PRINT @CCMD   
       EXEC SP_EXECUTESQL @CCMD   
  
       --SET @NSTEP = 107 -- UPDATING NEW ID INTO TEMP TABLES  
       --SET @CCMD=N'UPDATE '+@CTEMPDETAILTABLENAME2+' SET ROW_ID=NEWID() WHERE LEFT(row_id,5)=''LATER'' AND  '+@CWHERE  
       --PRINT @CCMD   
       --EXEC SP_EXECUTESQL @CCMD   
  
       --SET @NSTEP = 108 -- UPDATING NEW ID INTO TEMP TABLES  
       --SET @CCMD=N'UPDATE '+@CTEMPDETAILTABLENAME3+' SET ROW_ID=NEWID() WHERE LEFT(row_id,5)=''LATER'' AND  '+@CWHERE  
       --PRINT @CCMD   
       --EXEC SP_EXECUTESQL @CCMD             
        
  END  
    
  --SET @NSTEP = 110 -- UPDATING NEW ID INTO TEMP TABLES  
  --SET @CCMD=N'UPDATE '+@CTEMPDETAILTABLENAME2+' SET ROW_ID=NEWID() WHERE '+@CWHERE  
  --PRINT @CCMD   
  --EXEC SP_EXECUTESQL @CCMD   
  
  --SET @NSTEP = 120 -- UPDATING NEW ID INTO TEMP TABLES  
  --SET @CCMD=N'UPDATE '+@CTEMPDETAILTABLENAME3+' SET ROW_ID=NEWID() WHERE '+@CWHERE  
  --PRINT @CCMD   
  --EXEC SP_EXECUTESQL @CCMD   
         
  SET @NSTEP = 140  
     IF @CMEMONOVAL IS NULL OR @CMEMONOVAL LIKE '%LATER%'  
  BEGIN  
   SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'  
   GOTO END_PROC  
  END  
    
    
     -- UPDATING MASTER TABLE FROM TEMP TABLE  
  IF @NUPDATEMODE = 1 or @NUPDATEMODE = 2  
  BEGIN  
    SET @NSTEP = 160   
    EXEC UPDATEMASTERXN   
       @CSOURCEDB = @CTEMPDBNAME  
     , @CSOURCETABLE = @CTEMPMASTERTABLENAME   
     , @CDESTDB  = ''  
     , @CDESTTABLE = @CMASTERTABLENAME  
     , @CKEYFIELD1 = @CMEMONO  
     , @BALWAYSUPDATE = 1  
     ,@CFILTERCONDITION=@CWHERE   
         
  
       SET @NSTEP = 170     
             SET @CCMD = N'DELETE A FROM ARS_STOCK_LEVEL_MST A WHERE ARS_ID='''+@CMEMONOVAL+''''  
             PRINT @CCMD  
       EXEC SP_EXECUTESQL @CCMD  
         
       SET @NSTEP = 180   
       EXEC UPDATEMASTERXN   
         @CSOURCEDB = @CTEMPDBNAME  
       , @CSOURCETABLE = @CTEMPDETAILTABLENAME   
       , @CDESTDB  = ''  
       , @CDESTTABLE = @CDETAILTABLENAME  
       , @CKEYFIELD1 = @CMEMONO  
       , @BALWAYSUPDATE = 1  
       ,@CFILTERCONDITION=@CWHERE   
        
        
      SET @NSTEP = 190    
       
      SET @CCMD = N'DELETE A FROM ARS_DET A WHERE ARS_ID='''+@CMEMONOVAL+''';  
      UPDATE '+@CTEMPDETAILTABLENAME1+' SET ROW_ID=NEWID() WHERE SP_ID='+CAST(@NSPID AS VARCHAR)+' AND ROW_ID='''';'  
            PRINT @CCMD  
      EXEC SP_EXECUTESQL @CCMD  
        
      SET @NSTEP = 200    
     EXEC UPDATEMASTERXN   
       @CSOURCEDB = @CTEMPDBNAME  
     , @CSOURCETABLE = @CTEMPDETAILTABLENAME1  
     , @CDESTDB  = ''  
     , @CDESTTABLE = @CDETAILTABLENAME1  
     , @CKEYFIELD1 = @CMEMONO  
     , @BALWAYSUPDATE = 1  
     ,@CFILTERCONDITION=@CWHERE   
        
        
      --SET @NSTEP = 210    
      --SET @CCMD = N'delete  A from ars_permissions_det  A WHERE ARS_ID='''+@cMemonoVal+''''  
            --PRINT @CCMD  
      --EXEC SP_EXECUTESQL @CCMD  
      
      --SET @NSTEP = 220   
        
      --EXEC UPDATEMASTERXN   
     --  @CSOURCEDB = @CTEMPDBNAME  
     --, @CSOURCETABLE = @CTEMPDETAILTABLENAME2  
     --, @CDESTDB  = ''  
     --, @CDESTTABLE = @CDETAILTABLENAME2  
     --, @CKEYFIELD1 = 'ars_id'  
     --, @BALWAYSUPDATE = 1  
     --,@CFILTERCONDITION=@CWHERE   
      
     
     -- SET @NSTEP = 230    
     -- SET @CCMD = N'delete  A from ARS_GENORDERS_BASE  A WHERE ARS_ID='''+@cMemonoVal+''''  
           --PRINT @CCMD  
     --  EXEC SP_EXECUTESQL @CCMD  
      
     -- SET @NSTEP = 240   
        
     -- EXEC UPDATEMASTERXN   
     --  @CSOURCEDB = @CTEMPDBNAME  
     --, @CSOURCETABLE = @CTEMPDETAILTABLENAME3  
     --, @CDESTDB  = ''  
     --, @CDESTTABLE = @CDETAILTABLENAME3  
     --, @CKEYFIELD1 = 'ars_id'  
     --, @BALWAYSUPDATE = 1  
     --,@CFILTERCONDITION=@CWHERE   
      end  
      END TRY  
      
      BEGIN CATCH  
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()  
		GOTO END_PROC  
      END CATCH  
END_PROC:  
  
  IF @@TRANCOUNT>0  
  BEGIN  
   IF ISNULL(@CERRORMSG,'')=''  
    COMMIT TRANSACTION  
   ELSE  
    ROLLBACK    
  END   
    
  --DELETE FROM ARS_ARS_PERMISSIONS_DET_UPLOAD WHERE SP_ID=@NSPID   
  --DELETE FROM ARS_ARS_GENORDERS_BASE_UPLOAD WHERE SP_ID=@NSPID   
  
  DELETE FROM ARS_ARS_MST_UPLOAD WHERE SP_ID=@NSPID   
  DELETE FROM ARS_ARS_STOCK_LEVEL_MST_UPLOAD WHERE SP_ID=@NSPID   
  DELETE FROM ARS_ARS_DET_UPLOAD WHERE SP_ID=@NSPID   
 SELECT ISNULL(@CERRORMSG,'') AS ERRMSG,CASE @NUPDATEMODE WHEN 3 THEN @CMEMO_ID ELSE @CMEMONOVAL END AS MEMO_ID  
END