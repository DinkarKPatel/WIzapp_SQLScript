CREATE PROCEDURE SP3S_PATCHUP_SLSTAX
(
	 @DFROM_DT DATETIME
	,@DTO_DT DATETIME
	,@NOLD_TAXP NUMERIC(10,2)
	,@NNEW_TAXP NUMERIC(10,2)
	,@NQUERYID NUMERIC(2)
	,@NSPID INT=0
)
--WITH ENCRYPTION
AS
BEGIN
SET NOCOUNT ON
DECLARE @CSTEP VARCHAR(10),@CERRMSG VARCHAR(1000),@CCURLOCID VARCHAR(5),@CCMD NVARCHAR(MAX),@CTMPTABLE VARCHAR(500),
		@CTMPTABLENEW VARCHAR(500)

BEGIN TRY

SELECT TOP 1 @CCURLOCID=VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'

IF OBJECT_ID('TEMPDB..#CMS','U') IS NOT NULL
		DROP TABLE #CMS
SELECT CM_ID INTO #CMS FROM CMM01106 WHERE 1=2
		
SET @CSTEP='00'
IF @NQUERYID=1
	GOTO LBL_REPORTDATA
IF @NQUERYID=2
	GOTO LBL_CMTAX
IF @NQUERYID=3
	GOTO LBL_UPDCMTAX	
IF @NQUERYID=4  
	GOTO LBL_TAXTYPE 	
ELSE 
	GOTO EXIT_PROC		

LBL_REPORTDATA:
	
	SET @CSTEP=10

	SELECT 'T'+(CASE WHEN A.TAX_PERCENTAGE=0 THEN 'F' WHEN ROUND(A.TAX_PERCENTAGE,0)=A.TAX_PERCENTAGE THEN LTRIM(RTRIM(STR(A.TAX_PERCENTAGE)))
								 ELSE LTRIM(RTRIM(STR(A.TAX_PERCENTAGE,7,3))) END) AS DETAILS,
	SUM( TAX_AMOUNT ) AS NST,    
	SUM( (A.NET-(A.NET*B.DISCOUNT_PERCENTAGE/100)) - A.TAX_AMOUNT) AS NTS    
	FROM CMD01106 A    
	JOIN CMM01106 B ON A.CM_ID = B.CM_ID    
	WHERE B.location_Code =@CCURLOCID AND B.CANCELLED = 0
	AND B.CM_DT BETWEEN @DFROM_DT AND @DTO_DT AND A.TAX_METHOD=1
	GROUP BY (CASE WHEN A.TAX_PERCENTAGE=0 THEN 'F' WHEN ROUND(A.TAX_PERCENTAGE,0)=A.TAX_PERCENTAGE THEN LTRIM(RTRIM(STR(A.TAX_PERCENTAGE)))
								 ELSE LTRIM(RTRIM(STR(A.TAX_PERCENTAGE,7,3))) END)
	GOTO EXIT_PROC		
	
LBL_CMTAX:

	SET @CSTEP=20
	
	SET @CTMPTABLE='TMP_TAXPATCHUP_PROCESS_'+LTRIM(RTRIM(STR(@NSPID)))
	SET @CTMPTABLENEW='TMP_TAXPATCHUP_'+LTRIM(RTRIM(STR(@NSPID)))
	
	IF OBJECT_ID(@CTMPTABLE,'U') IS NOT NULL
	BEGIN
		SET @CCMD=N'DROP TABLE '+@CTMPTABLE
		EXEC SP_EXECUTESQL @CCMD	
	END

	IF OBJECT_ID(@CTMPTABLENEW,'U') IS NOT NULL
	BEGIN
		SET @CCMD=N'DROP TABLE '+@CTMPTABLENEW
		EXEC SP_EXECUTESQL @CCMD	
	END
		
	SET @CSTEP=30
	SET @CCMD=N'SELECT CONVERT(BIT,0) AS BCHK,CM.CM_NO,CM.CM_DT,CD.PRODUCT_CODE,CD.QUANTITY,(CD.NET-(CD.NET*CM.DISCOUNT_PERCENTAGE/100)-CD.TAX_AMOUNT) AS NET,
	CD.TAX_PERCENTAGE,'+LTRIM(RTRIM(STR(@NNEW_TAXP,6,2)))+' AS TAX_PER_NEW
	,CD.TAX_AMOUNT,CONVERT(NUMERIC(18,2),(((CD.NET-(CD.NET*CM.DISCOUNT_PERCENTAGE/100))*'+LTRIM(RTRIM(STR(@NNEW_TAXP)))+')/(100+'+
	LTRIM(RTRIM(STR(@NNEW_TAXP)))+'))) AS TAX_AMOUNT_NEW,ROW_ID,CM.CM_ID INTO '+@CTMPTABLE+' FROM CMM01106 CM
	JOIN CMD01106 CD ON CM.CM_ID=CD.CM_ID
	WHERE CM.location_Code='''+@CCURLOCID+''' AND CM.CM_DT BETWEEN '''+CONVERT(VARCHAR,@DFROM_DT,110)+'''
	AND '''+CONVERT(VARCHAR,@DTO_DT,110)+''' AND CD.TAX_PERCENTAGE='+LTRIM(RTRIM(STR(@NOLD_TAXP,6,2)))+'
	AND CD.TAX_METHOD=1	AND CANCELLED=0'
	
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD
	
	SET @CSTEP=40
	SET @CCMD=N'SELECT * FROM '+@CTMPTABLE
	EXEC SP_EXECUTESQL @CCMD
	
	SET @CCMD=N'SELECT * INTO '+@CTMPTABLENEW+' FROM '+@CTMPTABLE+' WHERE 1=2'
	EXEC SP_EXECUTESQL @CCMD
		
	GOTO EXIT_PROC			
	
LBL_UPDCMTAX:

	BEGIN TRANSACTION 	
	
	SET @CSTEP=50
	SET @CCMD=N'UPDATE CD SET  TAX_PERCENTAGE=B.TAX_PER_NEW,TAX_AMOUNT=B.TAX_AMOUNT_NEW
				FROM CMD01106 CD
				JOIN TMP_TAXPATCHUP_'+LTRIM(RTRIM(STR(@NSPID)))+' B ON B.ROW_ID=CD.ROW_ID
				WHERE B.BCHK=1'
	
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD
		
	SET @CSTEP=60	
	
	SET @CCMD=N'UPDATE CM SET POSTEDINAC=0 ,LAST_UPDATE=GETDATE(),PATCHUP_RUN=1
	FROM CMM01106 CM
	JOIN TMP_TAXPATCHUP_'+LTRIM(RTRIM(STR(@NSPID)))+' B ON B.CM_ID=CM.CM_ID
	WHERE B.BCHK=1'
	
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD
		
	GOTO EXIT_PROC			
	
LBL_TAXTYPE:
	 SELECT DISTINCT TAX_PERCENTAGE FROM LOCSST
	 GOTO EXIT_PROC	

END TRY

BEGIN CATCH
	SET @CERRMSG='P:SP3S_PATCHUP_SLSTAX, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
END CATCH

EXIT_PROC:
	IF ISNULL(@CERRMSG,'')<>''
		SELECT @CERRMSG AS ERRMSG
	
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRMSG,'')<>''
			ROLLBACK
		ELSE 
			COMMIT	
	END	
END
---END OF PROCEDURE - SP3S_PATCHUP_SLSTAX
