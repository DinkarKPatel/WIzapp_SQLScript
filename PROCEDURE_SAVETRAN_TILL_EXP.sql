CREATE PROCEDURE SAVETRAN_TILL_EXP  
(  
	 @NUPDATEMODE  NUMERIC(1,0),  
	 @NSPID    INT,  
	 @CMEMONOPREFIX  VARCHAR(50),  
	 @CFINYEAR   VARCHAR(10),  
	 @CMEMOID   VARCHAR(40)='' 
	 
)  
--WITH ENCRYPTION
AS  
		--changes by Dinkar in location id varchar(4)..
BEGIN  
 DECLARE @CTEMPDBNAME   VARCHAR(100),  
   @CMASTERTABLENAME  VARCHAR(100),  
   @CDETAILTABLENAME  VARCHAR(100),  
   @CTEMPMASTERTABLENAME VARCHAR(100),  
   @CTEMPDETAILTABLENAME VARCHAR(100),  
   @CTEMPMASTERTABLE  VARCHAR(100),  
   @CTEMPDETAILTABLE  VARCHAR(100),  
   @CERRMSG    VARCHAR(500),  
   @CKEYFIELD1    VARCHAR(50),  
   @CKEYFIELDVAL1   VARCHAR(50),  
   @CMEMONO    VARCHAR(20),  
   @NMEMONOLEN    NUMERIC(20,0),  
   @CMEMONOVAL    VARCHAR(50),  
   @CCMD     NVARCHAR(4000),  
   @CCMDOUTPUT    NVARCHAR(4000),  
   @NSAVETRANLOOP   BIT,  
   @NSTEP    INT,  
   @CLOCATIONID   VARCHAR(4),  
   @CMEMODEPTID   VARCHAR(4),
   @CPETYENABLE	  BIT,
   @CPETTYTYPE    VARCHAR(2),
   @CERRORMSG VARCHAR(MAX),
   @CHODEPTID VARCHAR(4)
     
  
  DECLARE @NTOTALPETTYDISC NUMERIC(14,2),@NPETTYDISC NUMERIC(14,2),@NMAXPETDISC NUMERIC(14,2),@NMONTHBUZ INT
		 ,@CAC_CODE VARCHAR(10),@BNEGSTOCKFOUND BIT,@NTILL_LIMIT NUMERIC(18,2),@CLOCID VARCHAR(4)
  
  DECLARE @OUTPUT TABLE (MEMO_ID VARCHAR(30),ERRMSG VARCHAR(500)) 
        
  DECLARE @CSHIFT_ID VARCHAR(15),@NRECEIPTS NUMERIC(18,2),@NISSUE NUMERIC(18,2)
  
 SET @NSTEP = 0  -- SETTTING UP ENVIRONMENT  

 -- TEMPORARY DATABASE Discarded now onwards as per Meeting on 30-10-2020 mentioned in Client issues List
 SET @CTEMPDBNAME = ''  
  
 SET @CMASTERTABLENAME = 'TILL_EXPENSE_MST'  
 SET @CDETAILTABLENAME = 'TILL_EXPENSE_DET'  
  
 SET @CTEMPMASTERTABLENAME = 'TEX_TILL_EXPENSE_MST_UPLOAD'
 SET @CTEMPDETAILTABLENAME = 'TEX_TILL_EXPENSE_DET_UPLOAD'
   
 SET @CTEMPMASTERTABLE = @CTEMPDBNAME + @CTEMPMASTERTABLENAME  
 SET @CTEMPDETAILTABLE = @CTEMPDBNAME + @CTEMPDETAILTABLENAME  
   
 SET @CERRMSG   = ''  
 SET @CKEYFIELD1   = 'MEMO_ID'  
  
 SET @CMEMONO   = 'MEMO_NO'  
 SET @NMEMONOLEN   = 10  
 
 SELECT @CLOCID=LOCATION_CODE FROM TEX_TILL_EXPENSE_MST_UPLOAD (nolock) WHERE SP_ID=@NSPID  

 IF ISNULL(@CLOCID,'')=''
	SELECT @CLOCATIONID	= DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
 ELSE
	SELECT @CLOCATIONID = @CLOCID

	SELECT @CHODEPTID	= [VALUE] FROM CONFIG WHERE  CONFIG_OPTION='HO_LOCATION_ID'
	
 
 BEGIN TRY  
  BEGIN TRANSACTION   
   IF @NUPDATEMODE = 3			
		BEGIN
			SET @NSTEP = 10
			
			IF @CMEMOID=''
			BEGIN
				SET @CERRMSG='MEMO ID REQUIRED FOR CANCELLATION........CANNOT PROCEED'
				GOTO END_PROC
			END
			
			SET @NSTEP = 20
			-- UPDATING SENTTOHO FLAG
			SET @CCMD = N' UPDATE ' + @CMASTERTABLENAME + ' SET CANCELLED = 1,LAST_UPDATE=GETDATE()' + 
						N' WHERE ' + @CKEYFIELD1 + ' = ''' + @CMEMOID + ''' and sp_id='''+@NSPID +''' '
			EXEC SP_EXECUTESQL @CCMD
			
			SET @NSTEP = 30
			/*IF THE TRANSACTION HAS BEEN MADE IN THE CURRENT SHIFT AND IS BEING CANCELLED IN THE SAME SHIFT,
			  ALTER THE RECEIPTS/ISSUES AMOUNT IN TILL_EXPENSE_MST*/
			EXEC SP3S_UPDATESHIFT_AMOUNT
					 @CXN_TYPE='TXP'
					,@CXN_ID=@CMEMOID
					,@NMODE=2
					,@NUPDATEMODE=@NUPDATEMODE
					,@CERRMSGOUT=@CERRMSG OUTPUT
					
			IF ISNULL(@CERRMSG,'')<>''
				GOTO END_PROC		
			
			SET @NSTEP = 40		
			SET @CKEYFIELDVAL1=@CMEMOID
			GOTO END_PROC
	END 
    
  -- START UPDATING XN TABLES   
  IF @NUPDATEMODE = 1 -- ADDMODE   
  BEGIN   
   SET @NSTEP = 50  -- GENERATING NEW KEY  

    IF ISNULL(@CLOCATIONID,'')=''
	 BEGIN
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' LOCATION ID CAN NOT BE BLANK  '  
		GOTO END_PROC    
	 END
     
   -- GENERATING NEW JOB ORDER NO    
   SET @NSAVETRANLOOP=0  
   WHILE @NSAVETRANLOOP=0  
   BEGIN  
    EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,  
        @CFINYEAR,0, @CMEMONOVAL OUTPUT     
      
    SET @NSTEP = 60  
    PRINT @CMEMONOVAL  
    SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+'   
          WHERE '+@CMEMONO+'='''+@CMEMONOVAL+'''   
          AND FIN_YEAR = '''+@CFINYEAR+''' )  
        SET @NLOOPOUTPUT=0  
       ELSE  
        SET @NLOOPOUTPUT=1'  
    PRINT @CCMD  
    EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT  
   END  
  
   SET @NSTEP = 70
   IF @CMEMONOVAL IS NULL OR @CMEMONOVAL LIKE '%LATER%'
   BEGIN  
      SET @CERRMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'   
      GOTO END_PROC      
   END  
  
   SET @NSTEP = 80    
   
   SET @CKEYFIELDVAL1 = @CLOCATIONID + RIGHT(@CFINYEAR,2)+REPLICATE('0', (22-LEN(@CLOCATIONID + RIGHT(@CFINYEAR,2)))-LEN(LTRIM(RTRIM(@CMEMONOVAL))))  + LTRIM(RTRIM(@CMEMONOVAL))
    
   IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'    
   BEGIN  
      SET @CERRMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'  
      GOTO END_PROC  
   END  
  
   SET @NSTEP = 90  -- UPDATING NEW ID INTO TEMP TABLES  
   SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' 
						 +@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' where sp_id='''+@NSPID +''''  
   PRINT @CCMD  
   EXEC SP_EXECUTESQL @CCMD  
   
   SET @NSTEP = 95 
   SET @CCMD = 'UPDATE '+ @CTEMPDETAILTABLE+ ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+'''
					      ,ROW_ID='''+@CLOCATIONID+'''+CONVERT(VARCHAR(40),NEWID())  where sp_id='''+@NSPID +''''  
   PRINT @CCMD  
   EXEC SP_EXECUTESQL @CCMD  
  
  END     -- END OF ADDMODE  
  ELSE    -- CALLED FROM EDITMODE  
  BEGIN    -- START OF EDITMODE  
    
   SET @NSTEP = 100  -- GETTING ID INFO FROM TEMP TABLE  
   -- GETTING JOB ORDER ID WHICH IS BEING EDITED  
   SET @CCMD = 'SELECT @CKEYFIELDVAL1 = ' + @CKEYFIELD1 + ', @CMEMONOVAL = ' + @CMEMONO + ',@CSHIFT_ID=SHIFT_ID FROM '  
      +@CMASTERTABLENAME + ' WHERE MEMO_ID='''+@CMEMOID+''''   
     
   EXEC SP_EXECUTESQL @CCMD, N'@CKEYFIELDVAL1 VARCHAR(50) OUTPUT, @CMEMONOVAL VARCHAR(50) OUTPUT,@CSHIFT_ID VARCHAR(15) OUTPUT',   
          @CKEYFIELDVAL1 OUTPUT, @CMEMONOVAL OUTPUT,@CSHIFT_ID OUTPUT  
   
   SET @NSTEP = 110       
   IF (@CKEYFIELDVAL1 IS NULL) OR (@CMEMONOVAL IS NULL)  
   BEGIN  
      SET @CERRMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'  
      GOTO END_PROC      
   END  
     
   SET @NSTEP = 120  -- STORING OLD STATUS OF BARCODES   
   --IF THE SHIFT IS CURRENTLY OPEN JUST REVERT THE AMOUNT FOR THIS MEMO
   EXEC SP3S_UPDATESHIFT_AMOUNT
					 @CXN_TYPE='TXP'
					,@CXN_ID=@CKEYFIELDVAL1
					,@NMODE=2
					,@NUPDATEMODE=@NUPDATEMODE
					,@CERRMSGOUT=@CERRMSG OUTPUT
					
	IF ISNULL(@CERRMSG,'')<>''
		GOTO END_PROC						
					
  END     -- END OF EDITMODE  
  
  SET @NSTEP = 130
  -- RECHECKING IF ID IS STILL LATER  
  IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
  BEGIN  
	 SET @CERRMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'  
	 GOTO END_PROC  
  END

   DECLARE @CWHERECLAUSE VARCHAR(1000)
  SET @CWHERECLAUSE = ' SP_ID='+LTRIM(RTRIM((@NSPID)))
  
  SET @NSTEP = 140  -- UPDATING MASTER TABLE  
  EXEC UPDATEMASTERXN   
      @CSOURCEDB = @CTEMPDBNAME  
    , @CSOURCETABLE = @CTEMPMASTERTABLENAME  
    , @CDESTDB  = ''  
    , @CDESTTABLE = @CMASTERTABLENAME  
    , @CKEYFIELD1 = @CKEYFIELD1  
    , @BALWAYSUPDATE = 1
	,@CFILTERCONDITION=@CWHERECLAUSE
    -- , @LUPDATEXNS = 1  
  
   SET @NSTEP = 150  -- UPDATING TRANSACTION TABLE  
   -- UPDATING ROW_ID IN TEMP TABLES - PAYMODE_XN_DET  
   SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE + ' SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(40), NEWID())  
				 WHERE LEFT(ROW_ID,5) = ''LATER'' and  sp_id='''+@NSPID +''''  
   EXEC SP_EXECUTESQL @CCMD  
  
   SET @NSTEP = 160
   SET @CCMD = N'DELETE FROM ' + @CDETAILTABLENAME + '   
				 WHERE ' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + ''' and  sp_id='''+@NSPID +''''  
   EXEC SP_EXECUTESQL @CCMD  
  

  
   -- INSERTING/UPDATING THE ENTRIES IN PRD_JID TABLE FROM TEMPTABLE  
   SET @NSTEP = 170  -- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES  
   EXEC UPDATEMASTERXN   
      @CSOURCEDB = @CTEMPDBNAME  
    , @CSOURCETABLE = @CTEMPDETAILTABLENAME  
    , @CDESTDB  = ''  
    , @CDESTTABLE = @CDETAILTABLENAME  
    , @CKEYFIELD1 = 'ROW_ID'  
    , @BALWAYSUPDATE = 1
	,@CFILTERCONDITION=@CWHERECLAUSE
   
   SET @NSTEP = 180
   EXEC SP3S_UPDATESHIFT_AMOUNT
					 @CXN_TYPE='TXP'
					,@CXN_ID=@CKEYFIELDVAL1
					,@NMODE=1
					,@NUPDATEMODE=@NUPDATEMODE
					,@CERRMSGOUT=@CERRMSG OUTPUT

   IF ISNULL(@CERRMSG,'')<>''
		GOTO END_PROC							
  
 END TRY  
 BEGIN CATCH  
    SET @CERRMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
 END CATCH 
   
END_PROC:  
    
	
	INSERT INTO @OUTPUT(MEMO_ID,ERRMSG)
	SELECT @CKEYFIELDVAL1,ISNULL(@CERRMSG,'') 
  
IF @@TRANCOUNT>0  
 BEGIN  
  IF ISNULL(@CERRMSG,'')='' 
  BEGIN
    UPDATE till_expense_mst WITH (ROWLOCk) SET last_update=getdate()  WHERE memo_id=@CKEYFIELDVAL1
	UPDATE till_expense_mst WITH (ROWLOCk) SET HO_SYNCH_LAST_UPDATE='' WHERE memo_id=@CKEYFIELDVAL1 
	COMMIT TRANSACTION 
  END
  ELSE  
	ROLLBACK  
  END  


  DELETE A FROM TEX_TILL_EXPENSE_MST_UPLOAD A (NOLOCK) WHERE SP_ID=@NSPID
  DELETE A FROM TEX_TILL_EXPENSE_DET_UPLOAD A (NOLOCK) WHERE SP_ID=@NSPID
	
				
	SELECT * FROM @OUTPUT

END        
--END OF PROCEDURE SAVETRAN_TILL_EXP
