CREATE PROCEDURE SP_SEND_MIRROR_PRT_DATA_NEW  
(   
  @CUPLOADEDXNID VARCHAR(50)  
 ,@CCURLOCID VARCHAR(5)  
 ,@BDONOTCHKPENDINGLM BIT=0
 ,@BACKNOWLEDGE BIT=0
 ,@CERRMSG VARCHAR(1000) OUTPUT  
)   
--WITH ENCRYPTION  
AS  
/*  
 SP_SEND_MIRROR_PRT_DATA_NEW_208_29_1_14 : THIS PROCEDURE WILL SEND DEBIT NOT DATA FROM LOCATION TO HO.  
*/  
BEGIN  
 DECLARE @DTSQL NVARCHAR(MAX),@NSPID INT,@CTEMPTABLE VARCHAR(500),@CMEMOID VARCHAR(50),  
 @CTEMPEMPLOYEETABLE VARCHAR(200),@DMEMOLASTUPDATE DATETIME,@CTABLENAME VARCHAR(100),  
 @BRECFOUND BIT,@CSTEP VARCHAR(5),@CFILTERCONDITION VARCHAR(MAX),  
 @CTEMPMASTERTABLE VARCHAR(200),@CTEMPDETAILTABLE VARCHAR(200),@CTEMPLMTABLE VARCHAR(200),  
 @CTEMPLMPTABLE VARCHAR(200),@CTEMPAREATABLE VARCHAR(200),@CTEMPCITYTABLE VARCHAR(200)  
 ,@CFILTERCHKAPP VARCHAR(MAX),@BSENDOFFLINE BIT,@CSTNAPP BIT  
   
  
 DECLARE @TXNSSENDINFO TABLE (ORG_TABLENAME VARCHAR(50),TMP_TABLENAME VARCHAR(50),XN_ID VARCHAR(40))     
BEGIN TRY    
 ---- CALL ACKNOWLEDGEMENT OF MEMO SUCCESSFUL MERGING AT MIRRORING SERVER  
 SET @CSTEP=0  
    
   SET @CFILTERCHKAPP=''    
 SELECT  @CSTNAPP= STN_APPROVAL FROM LOCATION WHERE DEPT_ID= @CCURLOCID   
 IF ISNULL(@CSTNAPP,0)=0  
  SET @CFILTERCHKAPP=' AND 1=1'  
 ELSE  
  SET @CFILTERCHKAPP=' AND (A.APPROVED IN (1,2,3) OR A.MODE=1)'  
   
  SET @CMEMOID = @CUPLOADEDXNID  
  IF ISNULL(@CMEMOID,'')=''  
     GOTO END_PROC  
  IF NOT EXISTS (SELECT TOP 1 * FROM RMM01106 WHERE RM_ID=@CMEMOID)  
  BEGIN  
   SET @CERRMSG='INVALID MEMO ID :'+@CMEMOID  
   GOTO END_PROC  
  END  

  DECLARE @BPENDINGMSTFOUND BIT
  SET @BPENDINGMSTFOUND=0
	
	IF @BDONOTCHKPENDINGLM=0
	BEGIN
		DECLARE @nInvMode NUMERIC(1,0)
		SELECT @nInvMode=mode FROM rmm01106 (NOLOCK) WHERE rm_id=@CUPLOADEDXNID

		IF @nInvMode<>2
			EXEC SP_SEND_MIRROR_XNSMST_DATA_NEW 'PRT',@CMEMOID,@CCURLOCID,@BDONOTCHKPENDINGLM
			,@BPENDINGMSTFOUND OUTPUT
			,@CERRMSG OUTPUT
	END

	PRINT (CASE WHEN @BPENDINGMSTFOUND=1 THEN 'PMST-Y' ELSE 'PMST-N' END)
	
	IF ISNULL(@BPENDINGMSTFOUND,0)=1
	BEGIN
		PRINT 'PENDING MASTER FOUND'
		GOTO END_PROC
	END
    
LBLTABLEINFO:  
 SET @CSTEP=50  
  
 /*RMM01106,RMD01106,RMM01106_AUDIT,RMD01106_AUDIT,FORM,LM01106,HD01106,LMP01106,AREA,CITY,STATE*/  
 SET @CSTEP=220  
   
 ---- SEND THE DEBITNOTE MEMO MASTER TABLE  
 SELECT DISTINCT 'PRT_RMM01106_MIRROR' TARGET_TABLENAME, A.*,@CMEMOID AS XN_ID FROM RMM01106 A (NOLOCK)  WHERE A.RM_ID=@CMEMOID  
   
 ---- SEND THE DEBITNOTE MEMO DETAIL TABLE  
 SELECT DISTINCT 'PRT_RMD01106_MIRROR' TARGET_TABLENAME, A.* FROM RMD01106 A  (NOLOCK)   
 WHERE A.RM_ID=@CMEMOID  
 
 SELECT DISTINCT 'PRT_PMT01106_MIRROR' TARGET_TABLENAME,@CMEMOID AS PRT_MEMO_ID ,A.DEPT_ID,A.product_code,A.BIN_ID,A.quantity_in_stock FROM PMT01106 A  (NOLOCK)   
 JOIN RMD01106 B(NOLOCK) ON B.PRODUCT_CODE=A.PRODUCT_CODE
 WHERE B.RM_ID=@CMEMOID 
   
 ---- SEND THE PARCEL_MST RELATED TO GIVEN WHOLESALE MEMO  
 SELECT  DISTINCT 'PRT_PARCEL_MST_MIRROR' AS TARGET_TABLENAME,A.*,@CMEMOID AS PRT_MEMO_ID FROM PARCEL_MST A (NOLOCK)  
 JOIN PARCEL_DET B (NOLOCK) ON B.PARCEL_MEMO_ID=A.PARCEL_MEMO_ID  
 WHERE B.REF_MEMO_ID=@CMEMOID AND A.XN_TYPE='PRT'  
     
 ---- SEND THE PARCEL_DET RELATED TO GIVEN WHOLESALE MEMO  
 SELECT  DISTINCT 'PRT_PARCEL_DET_MIRROR' AS TARGET_TABLENAME,A.*,@CMEMOID AS PRT_MEMO_ID FROM PARCEL_DET A (NOLOCK)  
 JOIN PARCEL_MST C (NOLOCK) ON C.PARCEL_MEMO_ID=A.PARCEL_MEMO_ID  
 WHERE A.REF_MEMO_ID=@CMEMOID AND C.XN_TYPE='PRT'  
   
 SELECT  DISTINCT 'PRT_ANGM_MIRROR' AS TARGET_TABLENAME,A.*,@CMEMOID AS PRT_MEMO_ID FROM ANGM A (NOLOCK)  
    JOIN PARCEL_MST C (NOLOCK) ON C.ANGADIA_CODE=A.ANGADIA_CODE  
 JOIN PARCEL_DET B (NOLOCK) ON B.PARCEL_MEMO_ID=C.PARCEL_MEMO_ID  
 WHERE B.REF_MEMO_ID=@CMEMOID AND C.XN_TYPE='PRT'  

  SET @CSTEP=250

  SELECT 'PRT_XN_AUDIT_TRIAL_DET_MIRROR' AS TARGET_TABLENAME,A.*,@CMEMOID AS PRT_MEMO_ID FROM XN_AUDIT_TRIAL_DET A WHERE XN_TYPE ='PRT' AND XN_ID=@CMEMOID


   
END TRY  
BEGIN CATCH  
 SET @CERRMSG='P: SP_SEND_MIRROR_PRT_DATA_NEW, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()  
 GOTO END_PROC  
END CATCH     
END_PROC:  
   
END  
---END OF PROCEDURE - SP_SEND_MIRROR_PRT_DATA_NEW  