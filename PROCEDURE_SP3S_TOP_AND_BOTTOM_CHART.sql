CREATE PROCEDURE SP3S_TOP_AND_BOTTOM_CHART    
(    
@NMODE          INT=1, --- 1 FOR NRV --2 FOR QUANTITY AND 3 FOR GROSS MARGIN    
@DFROMDATE             VARCHAR(50)='',-- FROM DATE PASS OF FILTER    
@DTODATE       VARCHAR(50)='', -- TO DATE PASS OF FILTER    
@CCONVERSIONFACTOR    INT=1,--1 FOR DIVIDE BY THOUSAND 2 FOR 10 THOUSAND 3 FOR LAKH       
@LASTYEARCOMPERISION   INT=0,--0 FOR CURRENT YEAR VALUE AND 1 FOR CUR YEAR PREV YEAR AND CONVERSION FACTOR    
@NFILTER               INT,       --------- TOP N BOTTOM FILTER 1 FOR TOP 2 FOR BOTTOM 3 FOR ALL    
@COUNTFILTER           INT, ---------- TOP N FILTER     
@CWHEREEFILTER         VARCHAR(MAX)='',-------- SET FILTER    
@CWHERE1               VARCHAR(MAX)--------NAME FILTER    
)    
AS     
BEGIN    

-- SP3S_TOP_AND_BOTTOM_CHART 2,'2016-08-03','2016-08-03',1,1,1,5,'','LOCATION.DEPT_NAME'     
      DECLARE @CURRENTYEAR VARCHAR(10),@DTSQL NVARCHAR(MAX),@DTSQL1 NVARCHAR(MAX), @CFILTER VARCHAR(MAX)    
            ,@NCONVERSIONAMOUNT NUMERIC(18,0),@CFILTER1 NVARCHAR(MAX),@CFILTER2 NVARCHAR(MAX),    
            @PREVYEAR VARCHAR(10),@TNRV NUMERIC(12,2),@DPREVFROMDATE VARCHAR(50),@DPREVTODATE VARCHAR(50),@TPREVNRV NUMERIC(12,2),    
            @TQTY NUMERIC(12,2),@TPREVQTY NUMERIC(12,2),@TGM NUMERIC(12,2),@TPREVGM NUMERIC(12,2)    
    
    DECLARE @TMPNRV TABLE (NAME VARCHAR(50), CUR_YEAR_NRV NUMERIC(12,2),PREV_YEAR_NRV NUMERIC(12,2))    
    DECLARE @TMPQTY TABLE (NAME VARCHAR(50), CUR_YEAR_QTY NUMERIC(12,0),PREV_YEAR_QTY NUMERIC(12,0))    
    DECLARE @TMP_GROSS_MARGIN TABLE (NAME VARCHAR(50),CUR_GROSS_MARGIN NUMERIC(12,0),PREV_GROSS_MARGIN NUMERIC(12,0))    
      
   SET @DTSQL1=''    
   IF @CCONVERSIONFACTOR=1    
       SET @NCONVERSIONAMOUNT=1000    
    ELSE IF @CCONVERSIONFACTOR=2    
       SET @NCONVERSIONAMOUNT=100000    
    ELSE IF @CCONVERSIONFACTOR=3    
       SET @NCONVERSIONAMOUNT=10000000    
           
       IF @LASTYEARCOMPERISION=1    
       SET @DPREVFROMDATE=CAST(DATEADD(YEAR,-1,@DFROMDATE) AS DATE)    
       SET @DPREVTODATE=CAST(DATEADD(YEAR,-1,@DTODATE) AS DATE)
       
       
       IF @CWHEREEFILTER=''
       SET @CWHEREEFILTER='1=1'
       ELSE
       SET @CWHEREEFILTER=@CWHEREEFILTER       
           
       SET @CFILTER2=''    
       IF @NMODE=1    
       SET @CFILTER2='CUR_YEAR_NRV'    
        IF @NMODE=2    
       SET @CFILTER2='CUR_YEAR_QTY'    
       IF @NMODE=3    
       SET @CFILTER2='CUR_GROSS_MARGIN'    
           
           
       SET @CFILTER1=''    
       IF @NFILTER=1    
       SET @CFILTER1='ORDER BY '+@CFILTER2+' DESC '    
       IF @NFILTER=2    
       SET @CFILTER1='ORDER BY '+@CFILTER2+' ASC '    
        
    IF @NMODE=1 -------FOR NRV--------    
    BEGIN
    
     IF @LASTYEARCOMPERISION=1    
    BEGIN            
     SET @DTSQL =N'SELECT A.NAME,SUM(ISNULL(CUR_YEAR_NRV,0)) AS CUR_YEAR_NRV,    
                SUM(ISNULL(B.PREV_YEAR_NRV,0)) AS PREV_YEAR_NRV    
                FROM     
                (    
                SELECT TOP '+CAST(@COUNTFILTER AS VARCHAR)+' '+@CWHERE1+' AS NAME,     
                SUM((NET - CMM_DISCOUNT_AMOUNT)) AS CUR_YEAR_NRV   
			    FROM CMM01106 A (NOLOCK)    
			    JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID     
			    JOIN SKU  (NOLOCK) ON SKU.PRODUCT_CODE=B.PRODUCT_CODE    
			    JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE=SKU.ARTICLE_CODE    
			    JOIN SECTIOND  (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE    
			    JOIN SECTIONM  (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE    
			    JOIN PARA1  (NOLOCK) ON PARA1.PARA1_CODE=SKU.PARA1_CODE    
			    JOIN PARA2  (NOLOCK) ON PARA2.PARA2_CODE=SKU.PARA2_CODE    
			    JOIN PARA3  (NOLOCK) ON PARA3.PARA3_CODE=SKU.PARA3_CODE    
			    JOIN PARA4  (NOLOCK) ON PARA4.PARA4_CODE=SKU.PARA4_CODE    
			    JOIN PARA5  (NOLOCK) ON PARA5.PARA5_CODE=SKU.PARA5_CODE    
			    JOIN PARA6  (NOLOCK) ON PARA6.PARA6_CODE=SKU.PARA6_CODE    
			    JOIN LOCATION  (NOLOCK) ON LOCATION.DEPT_ID=A.location_code   
			    JOIN LM01106  (NOLOCK) ON LM01106.AC_CODE=A.AC_CODE    
			    WHERE A.CANCELLED=0  AND A.CM_MODE=1 AND LOCATION.INACTIVE=0 AND  SKU.ER_FLAG IN (''0'' , ''1'' )    
			   AND '+@CWHEREEFILTER+' AND A.CM_DT BETWEEN '''+CONVERT(VARCHAR(11),@DFROMDATE,120)+'''AND '''+CONVERT(VARCHAR(11),@DTODATE,120)+'''    
			   GROUP BY '+@CWHERE1+'  '+@CFILTER1+')A     
			 LEFT  JOIN 
			 (   
			  SELECT '+@CWHERE1+' AS NAME,SUM((NET - CMM_DISCOUNT_AMOUNT)) AS PREV_YEAR_NRV            
			  FROM CMM01106 A (NOLOCK)    
			  JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID     
			  JOIN SKU  (NOLOCK) ON SKU.PRODUCT_CODE=B.PRODUCT_CODE    
			  JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE=SKU.ARTICLE_CODE    
			  JOIN SECTIOND  (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE    
			  JOIN SECTIONM  (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE    
			  JOIN PARA1  (NOLOCK) ON PARA1.PARA1_CODE=SKU.PARA1_CODE    
			  JOIN PARA2  (NOLOCK) ON PARA2.PARA2_CODE=SKU.PARA2_CODE    
			  JOIN PARA3  (NOLOCK) ON PARA3.PARA3_CODE=SKU.PARA3_CODE    
			  JOIN PARA4  (NOLOCK) ON PARA4.PARA4_CODE=SKU.PARA4_CODE    
			  JOIN PARA5  (NOLOCK) ON PARA5.PARA5_CODE=SKU.PARA5_CODE    
			  JOIN PARA6  (NOLOCK) ON PARA6.PARA6_CODE=SKU.PARA6_CODE    
			  JOIN LOCATION  (NOLOCK) ON LOCATION.DEPT_ID=A.location_code    
			  JOIN LM01106  (NOLOCK) ON LM01106.AC_CODE=A.AC_CODE    
			  WHERE A.CANCELLED=0  AND A.CM_MODE=1  AND LOCATION.INACTIVE=0 AND SKU.ER_FLAG IN (''0'' , ''1'' )    
			  AND '+@CWHEREEFILTER+' AND A.CM_DT BETWEEN '''+CONVERT(VARCHAR(11),@DPREVFROMDATE,120)+'''AND'''+CONVERT(VARCHAR(11),@DPREVTODATE,120)+'''    
			   GROUP BY '+@CWHERE1+')B ON A.NAME=B.NAME'   
   END 
   
   ELSE
   

    SET @DTSQL =N'SELECT NAME,SUM(ISNULL(CUR_YEAR_NRV,0)) AS CUR_YEAR_NRV,    
                SUM(ISNULL(PREV_YEAR_NRV,0)) AS PREV_YEAR_NRV    
                FROM     
                (    
                SELECT TOP '+CAST(@COUNTFILTER AS VARCHAR)+' '+@CWHERE1+' AS NAME,     
                SUM((NET - CMM_DISCOUNT_AMOUNT)) AS CUR_YEAR_NRV,    
                   0 AS  PREV_YEAR_NRV    
			  FROM CMM01106 A (NOLOCK)    
			  JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID     
			  JOIN SKU  (NOLOCK) ON SKU.PRODUCT_CODE=B.PRODUCT_CODE    
			  JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE=SKU.ARTICLE_CODE    
			  JOIN SECTIOND  (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE    
			  JOIN SECTIONM  (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE    
			  JOIN PARA1  (NOLOCK) ON PARA1.PARA1_CODE=SKU.PARA1_CODE    
			  JOIN PARA2  (NOLOCK) ON PARA2.PARA2_CODE=SKU.PARA2_CODE    
			  JOIN PARA3  (NOLOCK) ON PARA3.PARA3_CODE=SKU.PARA3_CODE    
			  JOIN PARA4  (NOLOCK) ON PARA4.PARA4_CODE=SKU.PARA4_CODE    
			  JOIN PARA5  (NOLOCK) ON PARA5.PARA5_CODE=SKU.PARA5_CODE    
			  JOIN PARA6  (NOLOCK) ON PARA6.PARA6_CODE=SKU.PARA6_CODE    
		      JOIN LOCATION  (NOLOCK) ON LOCATION.DEPT_ID=A.location_code   
			  JOIN LM01106  (NOLOCK) ON LM01106.AC_CODE=A.AC_CODE    
			  WHERE A.CANCELLED=0  AND A.CM_MODE=1 AND LOCATION.INACTIVE=0 AND  SKU.ER_FLAG IN (''0'' , ''1'' )    
			  AND '+@CWHEREEFILTER+' AND A.CM_DT BETWEEN '''+CONVERT(VARCHAR(11),@DFROMDATE,120)+'''AND     
			  '''+CONVERT(VARCHAR(11),@DTODATE,120)+'''    
			   GROUP BY '+@CWHERE1+' '+@CFILTER1+')A'  
      
   SET @DTSQL=@DTSQL+'   
        GROUP BY A.NAME '+@CFILTER1+''    
         
   PRINT @DTSQL 

   INSERT INTO @TMPNRV(NAME ,CUR_YEAR_NRV,PREV_YEAR_NRV )    
   EXEC SP_EXECUTESQL  @DTSQL    
       
   SELECT @TNRV=SUM(ISNULL(CUR_YEAR_NRV ,0)) FROM @TMPNRV    
   UPDATE @TMPNRV SET CUR_YEAR_NRV=CUR_YEAR_NRV/@NCONVERSIONAMOUNT    
       
   IF @LASTYEARCOMPERISION=1    
   BEGIN     
       
   SELECT @TPREVNRV=SUM(ISNULL(PREV_YEAR_NRV ,0)) FROM @TMPNRV    
   UPDATE @TMPNRV SET PREV_YEAR_NRV=PREV_YEAR_NRV/@NCONVERSIONAMOUNT    
   SELECT A.NAME,ISNULL(CUR_YEAR_NRV,0) AS CUR_YEAR_NRV, ISNULL(PREV_YEAR_NRV,0) AS PREV_YEAR_NRV  FROM @TMPNRV A    
             
   END    
   ELSE    
   BEGIN     
    SELECT A.NAME,ISNULL(CUR_YEAR_NRV,0) AS CUR_YEAR_NRV  FROM @TMPNRV A    
   END   
      
   GOTO END_PROC      
    
   END  
     
       
   ELSE IF @NMODE=2    
	BEGIN
  
	IF @LASTYEARCOMPERISION=1    
	BEGIN            
			SET @DTSQL =N'SELECT A.NAME,SUM(ISNULL(CUR_YEAR_QTY,0)) AS CUR_YEAR_QTY,    
                SUM(ISNULL(B.PREV_YEAR_QTY,0)) AS PREV_YEAR_QTY    
                FROM     
                (    
                SELECT TOP '+CAST(@COUNTFILTER AS VARCHAR)+' '+@CWHERE1+' AS NAME,     
                SUM(B.QUANTITY) AS CUR_YEAR_QTY,    
                   0 AS  PREV_YEAR_QTY    
              FROM CMM01106 A (NOLOCK)    
			  JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID     
			  JOIN SKU  (NOLOCK) ON SKU.PRODUCT_CODE=B.PRODUCT_CODE    
			  JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE=SKU.ARTICLE_CODE    
			  JOIN SECTIOND  (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE    
			  JOIN SECTIONM  (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE    
			  JOIN PARA1  (NOLOCK) ON PARA1.PARA1_CODE=SKU.PARA1_CODE    
			  JOIN PARA2  (NOLOCK) ON PARA2.PARA2_CODE=SKU.PARA2_CODE    
			  JOIN PARA3  (NOLOCK) ON PARA3.PARA3_CODE=SKU.PARA3_CODE    
			  JOIN PARA4  (NOLOCK) ON PARA4.PARA4_CODE=SKU.PARA4_CODE    
			  JOIN PARA5  (NOLOCK) ON PARA5.PARA5_CODE=SKU.PARA5_CODE    
			  JOIN PARA6  (NOLOCK) ON PARA6.PARA6_CODE=SKU.PARA6_CODE    
			  JOIN LOCATION  (NOLOCK) ON LOCATION.DEPT_ID=A.location_code    
			  JOIN LM01106  (NOLOCK) ON LM01106.AC_CODE=A.AC_CODE    
			  WHERE A.CANCELLED=0  AND A.CM_MODE=1 AND LOCATION.INACTIVE=0 AND SKU.ER_FLAG IN (''0'' , ''1'' )    
			  AND '+@CWHEREEFILTER+' AND A.CM_DT BETWEEN '''+CONVERT(VARCHAR(11),@DFROMDATE,120)+'''AND '''+CONVERT(VARCHAR(11),@DTODATE,120)+'''    
			   GROUP BY '+@CWHERE1+' '+@CFILTER1+')A
			   LEFT JOIN
             (     
			  SELECT '+@CWHERE1+' AS NAME,SUM(B.QUANTITY) AS PREV_YEAR_QTY     
			  FROM CMM01106 A (NOLOCK)    
			  JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID     
			  JOIN SKU  (NOLOCK) ON SKU.PRODUCT_CODE=B.PRODUCT_CODE    
			  JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE=SKU.ARTICLE_CODE    
			  JOIN SECTIOND  (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE    
			  JOIN SECTIONM  (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE    
			  JOIN PARA1  (NOLOCK) ON PARA1.PARA1_CODE=SKU.PARA1_CODE    
			  JOIN PARA2  (NOLOCK) ON PARA2.PARA2_CODE=SKU.PARA2_CODE    
			  JOIN PARA3  (NOLOCK) ON PARA3.PARA3_CODE=SKU.PARA3_CODE    
			  JOIN PARA4  (NOLOCK) ON PARA4.PARA4_CODE=SKU.PARA4_CODE    
			  JOIN PARA5  (NOLOCK) ON PARA5.PARA5_CODE=SKU.PARA5_CODE    
			  JOIN PARA6  (NOLOCK) ON PARA6.PARA6_CODE=SKU.PARA6_CODE    
			  JOIN LOCATION  (NOLOCK) ON LOCATION.DEPT_ID=A.location_code   
			  JOIN LM01106  (NOLOCK) ON LM01106.AC_CODE=A.AC_CODE    
			  WHERE A.CANCELLED=0  AND A.CM_MODE=1 AND LOCATION.INACTIVE=0 AND SKU.ER_FLAG IN (''0'' , ''1'' )    
			  AND '+@CWHEREEFILTER+' AND  A.CM_DT BETWEEN '''+CONVERT(VARCHAR(11),@DPREVFROMDATE,120)+'''AND'''+CONVERT(VARCHAR(11),@DPREVTODATE,120)+'''    
			   GROUP BY '+@CWHERE1+')B ON A.NAME=B.NAME'      
  END
  
  ELSE
        
  SET @DTSQL =N'SELECT NAME,SUM(ISNULL(CUR_YEAR_QTY,0)) AS CUR_YEAR_QTY,    
                SUM(ISNULL(PREV_YEAR_QTY,0)) AS PREV_YEAR_QTY    
                FROM     
                (    
                SELECT TOP '+CAST(@COUNTFILTER AS VARCHAR)+' '+@CWHERE1+' AS NAME,     
                SUM(B.QUANTITY) AS CUR_YEAR_QTY,0 AS  PREV_YEAR_QTY    
			  FROM CMM01106 A (NOLOCK)    
			  JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID     
			  JOIN SKU  (NOLOCK) ON SKU.PRODUCT_CODE=B.PRODUCT_CODE    
			  JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE=SKU.ARTICLE_CODE    
			  JOIN SECTIOND  (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE    
			  JOIN SECTIONM  (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE    
			  JOIN PARA1  (NOLOCK) ON PARA1.PARA1_CODE=SKU.PARA1_CODE    
			  JOIN PARA2  (NOLOCK) ON PARA2.PARA2_CODE=SKU.PARA2_CODE    
			  JOIN PARA3  (NOLOCK) ON PARA3.PARA3_CODE=SKU.PARA3_CODE    
			  JOIN PARA4  (NOLOCK) ON PARA4.PARA4_CODE=SKU.PARA4_CODE    
			  JOIN PARA5  (NOLOCK) ON PARA5.PARA5_CODE=SKU.PARA5_CODE    
			  JOIN PARA6  (NOLOCK) ON PARA6.PARA6_CODE=SKU.PARA6_CODE    
			  JOIN LOCATION  (NOLOCK) ON LOCATION.DEPT_ID=A.location_code    
			  JOIN LM01106  (NOLOCK) ON LM01106.AC_CODE=A.AC_CODE    
			  WHERE A.CANCELLED=0  AND A.CM_MODE=1 AND LOCATION.INACTIVE=0 AND SKU.ER_FLAG IN (''0'' , ''1'' )    
			  AND '+@CWHEREEFILTER+' AND A.CM_DT BETWEEN '''+CONVERT(VARCHAR(11),@DFROMDATE,120)+'''AND     
			  '''+CONVERT(VARCHAR(11),@DTODATE,120)+'''    
			   GROUP BY '+@CWHERE1+' '+@CFILTER1+')A'     
	      

        SET @DTSQL=@DTSQL+' GROUP BY A.NAME '+@CFILTER1+''    
      
   PRINT @DTSQL    
   INSERT INTO @TMPQTY(NAME , CUR_YEAR_QTY,PREV_YEAR_QTY )    
   EXEC SP_EXECUTESQL  @DTSQL    
       
   SELECT @TQTY=SUM(ISNULL(CUR_YEAR_QTY ,0)) FROM @TMPQTY     
      
  IF @LASTYEARCOMPERISION=1    
	  BEGIN        
		  SELECT @TPREVQTY=SUM(ISNULL(PREV_YEAR_QTY ,0)) FROM @TMPQTY    
		  SELECT A.NAME,ISNULL(CUR_YEAR_QTY,0) AS CUR_YEAR_QTY,ISNULL(PREV_YEAR_QTY,0) AS PREV_YEAR_QTY FROM @TMPQTY A    
	  END    
  ELSE    
	  BEGIN    
		 SELECT A.NAME,ISNULL(CUR_YEAR_QTY,0) AS CUR_YEAR_QTY FROM @TMPQTY A     
	  END    
  GOTO END_PROC    
 END     
     ELSE IF @NMODE=3    
       BEGIN  
       IF @LASTYEARCOMPERISION=1    
  BEGIN            
  SET @DTSQL =N'SELECT A.NAME,    
                    SUM(ISNULL(CUR_GROSS_MARGIN,0)) AS CUR_GROSS_MARGIN,
                    SUM(ISNULL(B.PREV_GROSS_MARGIN,0)) AS PREV_GROSS_MARGIN         
                    FROM      
                   (    
                   SELECT TOP '+CAST(@COUNTFILTER AS VARCHAR)+' '+@CWHERE1+' AS NAME,                
					ISNULL(SUM(B.RFNET) - SUM(B.QUANTITY*(SKU.PURCHASE_PRICE+(CASE WHEN FORM.POST_TAX_SEPARATELY=0     
					THEN ISNULL(SKU_OH.TAX_AMOUNT,0) ELSE 0 END)-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0))),0) AS CUR_GROSS_MARGIN,
					0 AS PREV_GROSS_MARGIN      
		                     
						   FROM CMM01106 A (NOLOCK)    
				  JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID     
				  JOIN SKU  (NOLOCK) ON SKU.PRODUCT_CODE=B.PRODUCT_CODE    
				  JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE=SKU.ARTICLE_CODE    
				  JOIN SECTIOND  (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE    
				  JOIN SECTIONM  (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE    
				  JOIN PARA1  (NOLOCK) ON PARA1.PARA1_CODE=SKU.PARA1_CODE    
				  JOIN PARA2  (NOLOCK) ON PARA2.PARA2_CODE=SKU.PARA2_CODE    
				  JOIN PARA3  (NOLOCK) ON PARA3.PARA3_CODE=SKU.PARA3_CODE    
				  JOIN PARA4  (NOLOCK) ON PARA4.PARA4_CODE=SKU.PARA4_CODE    
				  JOIN PARA5  (NOLOCK) ON PARA5.PARA5_CODE=SKU.PARA5_CODE    
				  JOIN PARA6  (NOLOCK) ON PARA6.PARA6_CODE=SKU.PARA6_CODE    
				  JOIN LOCATION  (NOLOCK) ON LOCATION.DEPT_ID=A.location_code   
				  JOIN LM01106  (NOLOCK) ON LM01106.AC_CODE=A.AC_CODE    
                  LEFT JOIN SKU_OH (NOLOCK) ON SKU.PRODUCT_CODE =SKU_OH.PRODUCT_CODE     
                  JOIN FORM (NOLOCK) ON SKU.FORM_ID=FORM.FORM_ID    
                  WHERE '+@CWHEREEFILTER+' AND A.CANCELLED=0  AND A.CM_MODE=1 AND LOCATION.INACTIVE=0 AND SKU.ER_FLAG IN (''0'' , ''1'' )    
					AND A.CM_DT BETWEEN '''+CONVERT(VARCHAR(11),@DFROMDATE,120)+'''AND'''+CONVERT(VARCHAR(11),@DTODATE,120)+'''    
				   GROUP BY '+@CWHERE1+'
				   HAVING  SUM(B.RFNET) > SUM(B.QUANTITY*(SKU.PURCHASE_PRICE+(CASE WHEN FORM.POST_TAX_SEPARATELY=0     
					THEN ISNULL(SKU_OH.TAX_AMOUNT,0) ELSE 0 END)-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0))) 
					 '+@CFILTER1+')A  
			   LEFT JOIN
			   (     
			  SELECT '+@CWHERE1+' AS NAME,   
			  ISNULL(SUM(B.RFNET) - SUM(B.QUANTITY*(SKU.PURCHASE_PRICE+(CASE WHEN FORM.POST_TAX_SEPARATELY=0     
			  THEN ISNULL(SKU_OH.TAX_AMOUNT,0) ELSE 0 END)-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0))),0) AS PREV_GROSS_MARGIN
			  FROM CMM01106 A (NOLOCK)    
			  JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID     
			  JOIN SKU  (NOLOCK) ON SKU.PRODUCT_CODE=B.PRODUCT_CODE    
			  JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE=SKU.ARTICLE_CODE    
			  JOIN SECTIOND  (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE    
			  JOIN SECTIONM  (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE    
			  JOIN PARA1  (NOLOCK) ON PARA1.PARA1_CODE=SKU.PARA1_CODE    
			  JOIN PARA2  (NOLOCK) ON PARA2.PARA2_CODE=SKU.PARA2_CODE    
			  JOIN PARA3  (NOLOCK) ON PARA3.PARA3_CODE=SKU.PARA3_CODE    
			  JOIN PARA4  (NOLOCK) ON PARA4.PARA4_CODE=SKU.PARA4_CODE    
			  JOIN PARA5  (NOLOCK) ON PARA5.PARA5_CODE=SKU.PARA5_CODE    
			  JOIN PARA6  (NOLOCK) ON PARA6.PARA6_CODE=SKU.PARA6_CODE    
			  JOIN LOCATION  (NOLOCK) ON LOCATION.DEPT_ID=A.location_code  
			  JOIN LM01106  (NOLOCK) ON LM01106.AC_CODE=A.AC_CODE    
			  LEFT JOIN SKU_OH (NOLOCK) ON SKU.PRODUCT_CODE =SKU_OH .PRODUCT_CODE     
			  JOIN FORM (NOLOCK) ON SKU.FORM_ID=FORM.FORM_ID    
			 WHERE '+@CWHEREEFILTER+' AND A.CANCELLED=0  AND A.CM_MODE=1 AND LOCATION.INACTIVE=0 AND SKU.ER_FLAG IN (''0'' , ''1'' )    
			  AND A.CM_DT BETWEEN '''+CONVERT(VARCHAR(11),@DPREVFROMDATE,120)+'''AND     
			  '''+CONVERT(VARCHAR(11),@DPREVTODATE,120)+'''    
			   GROUP BY '+@CWHERE1+')B ON A.NAME=B.NAME'   
  END
  ELSE
    
     SET @DTSQL =N'SELECT NAME,    
                   
                    SUM(ISNULL(CUR_GROSS_MARGIN,0)) AS CUR_GROSS_MARGIN,
                    SUM(ISNULL(PREV_GROSS_MARGIN,0)) AS PREV_GROSS_MARGIN      
                    FROM      
                   (    
                   SELECT TOP '+CAST(@COUNTFILTER AS VARCHAR)+' '+@CWHERE1+' AS NAME,    
					ISNULL(SUM(B.RFNET) - SUM(B.QUANTITY*(SKU.PURCHASE_PRICE+(CASE WHEN FORM.POST_TAX_SEPARATELY=0     
					THEN ISNULL(SKU_OH.TAX_AMOUNT,0) ELSE 0 END)-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0))),0) AS CUR_GROSS_MARGIN,
					0 AS PREV_GROSS_MARGIN    
				  FROM CMM01106 A (NOLOCK)    
				  JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID     
				  JOIN SKU  (NOLOCK) ON SKU.PRODUCT_CODE=B.PRODUCT_CODE    
		          
				  JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE=SKU.ARTICLE_CODE    
				  JOIN SECTIOND  (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE    
				  JOIN SECTIONM  (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE    
				  JOIN PARA1  (NOLOCK) ON PARA1.PARA1_CODE=SKU.PARA1_CODE    
				  JOIN PARA2  (NOLOCK) ON PARA2.PARA2_CODE=SKU.PARA2_CODE    
				  JOIN PARA3  (NOLOCK) ON PARA3.PARA3_CODE=SKU.PARA3_CODE    
				  JOIN PARA4  (NOLOCK) ON PARA4.PARA4_CODE=SKU.PARA4_CODE    
				  JOIN PARA5  (NOLOCK) ON PARA5.PARA5_CODE=SKU.PARA5_CODE    
				  JOIN PARA6  (NOLOCK) ON PARA6.PARA6_CODE=SKU.PARA6_CODE    
				  JOIN LOCATION  (NOLOCK) ON LOCATION.DEPT_ID=A.location_code   
				  JOIN LM01106  (NOLOCK) ON LM01106.AC_CODE=A.AC_CODE    
				  LEFT JOIN SKU_OH (NOLOCK) ON SKU.PRODUCT_CODE =SKU_OH.PRODUCT_CODE     
                  JOIN FORM (NOLOCK) ON SKU.FORM_ID=FORM.FORM_ID    
                  WHERE '+@CWHEREEFILTER+' AND A.CANCELLED=0  AND A.CM_MODE=1 AND LOCATION.INACTIVE=0 AND SKU.ER_FLAG IN (''0'' , ''1'' )    
                 AND A.CM_DT BETWEEN '''+CONVERT(VARCHAR(11),@DFROMDATE,120)+'''AND '''+CONVERT(VARCHAR(11),@DTODATE,120)+'''
              GROUP BY '+@CWHERE1+' HAVING  SUM(B.RFNET) > SUM(B.QUANTITY*(SKU.PURCHASE_PRICE+(CASE WHEN FORM.POST_TAX_SEPARATELY=0     
             THEN ISNULL(SKU_OH.TAX_AMOUNT,0) ELSE 0 END)-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0))) 
             '+@CFILTER1+')A'    
             
      
  SET @DTSQL=@DTSQL+' GROUP BY A.NAME '+@CFILTER1+''    
    
      
     PRINT @DTSQL    
     --INSERT INTO @TMP_GROSS_MARGIN(NAME,SALE_VALUE,SOLD_PURCHASE_VALUE,PREV_SALE_VALUE,PREV_SOLD_PURCHASE_VALUE) 
       INSERT INTO @TMP_GROSS_MARGIN(NAME,CUR_GROSS_MARGIN,PREV_GROSS_MARGIN)       
  EXEC SP_EXECUTESQL @DTSQL    
      
      
    --UPDATE  @TMP_GROSS_MARGIN SET CUR_GROSS_MARGIN=SALE_VALUE-SOLD_PURCHASE_VALUE         
    --WHERE SALE_VALUE>SOLD_PURCHASE_VALUE     
        
        
    --UPDATE  @TMP_GROSS_MARGIN SET PREV_GROSS_MARGIN=PREV_SALE_VALUE-PREV_SOLD_PURCHASE_VALUE    
    --WHERE PREV_SALE_VALUE>PREV_SOLD_PURCHASE_VALUE    
        
        
   SELECT @TGM=SUM(ISNULL(CUR_GROSS_MARGIN ,0)) FROM @TMP_GROSS_MARGIN    
       
   UPDATE @TMP_GROSS_MARGIN SET CUR_GROSS_MARGIN=CUR_GROSS_MARGIN/@NCONVERSIONAMOUNT    
          
      IF @LASTYEARCOMPERISION=1    
   BEGIN    
      SELECT @TPREVGM=SUM(ISNULL(PREV_GROSS_MARGIN ,0)) FROM @TMP_GROSS_MARGIN    
      UPDATE @TMP_GROSS_MARGIN SET PREV_GROSS_MARGIN=PREV_GROSS_MARGIN/@NCONVERSIONAMOUNT    
            
      SELECT  A.NAME,ISNULL(CUR_GROSS_MARGIN,0) AS CUR_GROSS_MARGIN ,    
              ISNULL(PREV_GROSS_MARGIN,0) AS PREV_GROSS_MARGIN FROM @TMP_GROSS_MARGIN A    
                  
         
     END    
     ELSE    
     BEGIN    
      SELECT  A.NAME,ISNULL(CUR_GROSS_MARGIN,0) AS CUR_GROSS_MARGIN  FROM @TMP_GROSS_MARGIN A    
         
     END    
 GOTO END_PROC     
     
  END       
     
END_PROC:
END
