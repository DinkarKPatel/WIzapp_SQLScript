create PROCEDURE SP3S_VALIDATE_GSTCALC
(
 @XN_TYPE VARCHAR(10)='',
 @CMEMO_ID VARCHAR(100)='',
 @CERRMSG VARCHAR(1000) OUTPUT ,
 @CDEPT_ID VARCHAR(5)='' 
)
AS
BEGIN
     BEGIN TRY 
 
    
     DECLARE @DMEMODT DATETIME,@CGSTCUTOFFDATE VARCHAR(10),@GSTDATE DATETIME,@CSTEP VARCHAR(10),
             @CCURDEPT_ID VARCHAR(5),@CCURSTATE_CODE VARCHAR(10),@CPARTYSTATE_CODE VARCHAR(10),
             @CPRODUCTCODE VARCHAR(50),@CCUSTOMERCODE CHAR(12),@BLOCALBILL BIT,@BGSTREGISTERED BIT
             
     SELECT @CGSTCUTOFFDATE=VALUE FROM CONFIG WHERE CONFIG_OPTION ='GST_CUT_OFF_DATE'
     SELECT @GSTDATE=CAST(@CGSTCUTOFFDATE AS DATETIME) 
     SET @CERRMSG=''
     SET @CCURDEPT_ID=''
     SET @CSTEP=00
	
	 SET @BLOCALBILL=0
	  
	  IF @CDEPT_ID=''    
         SELECT TOP 1 @CCURDEPT_ID=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID
	  ELSE
	      SET @CCURDEPT_ID=@CDEPT_ID
      
     DECLARE @TMPTABLEMST TABLE (MEMO_ID VARCHAR(100),MEMEO_DT DATETIME,PARTY_STATE_CODE VARCHAR(10))
     
     DECLARE @TMPTABLEDET TABLE 
     (MEMO_ID VARCHAR(100),ROW_ID VARCHAR(100),PRODUCT_CODE VARCHAR(100),TAX_METHOD NUMERIC(1,0),XN_VALUE_WITHOUT_GST NUMERIC(18,2),
     XN_VALUE_WITH_GST NUMERIC(18,2),GST_PERCENTAGE NUMERIC(6,2),IGST_AMOUNT NUMERIC(18,2),
     CGST_AMOUNT NUMERIC(18,2),SGST_AMOUNT NUMERIC(18,2),HSN_CODE VARCHAR(15),
     CAL_IGST_AMOUNT NUMERIC(18,2),CAL_CGST_AMOUNT NUMERIC(18,2),CAL_SGST_AMOUNT NUMERIC(18,2))
     
    SELECT TOP 1 @CCURSTATE_CODE=D.STATE_CODE,@BGSTREGISTERED=ISNULL(REGISTERED_GST,0)  FROM LOCATION A
    JOIN AREA B ON A.AREA_CODE =B.AREA_CODE 
    JOIN CITY C ON C.CITY_CODE= B.CITY_CODE
    JOIN STATE D ON D.STATE_CODE= C.STATE_CODE
    WHERE A.DEPT_ID =@CCURDEPT_ID
    
    
	IF @XN_TYPE='PUR'
	BEGIN
		SELECT TOP 1 @DMEMODT=INV_DT,@CPARTYSTATE_CODE=PARTY_STATE_CODE FROM PIM01106 WHERE MRR_ID=@CMEMO_ID
		
        INSERT INTO @TMPTABLEDET(MEMO_ID,ROW_ID ,PRODUCT_CODE ,XN_VALUE_WITHOUT_GST,XN_VALUE_WITH_GST,GST_PERCENTAGE ,
        IGST_AMOUNT,CGST_AMOUNT ,SGST_AMOUNT,TAX_METHOD,HSN_CODE)
        SELECT A.MRR_ID AS  MEMO_ID,ROW_ID ,PRODUCT_CODE,XN_VALUE_WITHOUT_GST,XN_VALUE_WITH_GST,
        GST_PERCENTAGE,IGST_AMOUNT,CGST_AMOUNT,SGST_AMOUNT,
        B.BILL_LEVEL_TAX_METHOD AS TAX_METHOD,HSN_CODE 
        FROM PID01106 A
        JOIN PIM01106 B ON A.MRR_ID =B.MRR_ID 
        WHERE A.MRR_ID=@CMEMO_ID  
	END    
	ELSE
	IF @XN_TYPE='PRT'
	BEGIN
		SELECT TOP 1 @DMEMODT=RM_DT,@CPARTYSTATE_CODE=PARTY_STATE_CODE FROM RMM01106 WHERE RM_ID=@CMEMO_ID
		
        INSERT INTO @TMPTABLEDET(MEMO_ID,ROW_ID ,PRODUCT_CODE ,XN_VALUE_WITHOUT_GST,XN_VALUE_WITH_GST,GST_PERCENTAGE ,
        IGST_AMOUNT,CGST_AMOUNT ,SGST_AMOUNT,TAX_METHOD,HSN_CODE)
        SELECT A.MRR_ID AS  MEMO_ID,ROW_ID ,PRODUCT_CODE,XN_VALUE_WITHOUT_GST,XN_VALUE_WITH_GST,
        GST_PERCENTAGE,IGST_AMOUNT,CGST_AMOUNT,SGST_AMOUNT,
        A.BILL_LEVEL_TAX_METHOD AS TAX_METHOD,HSN_CODE 
        FROM RMD01106 A
        JOIN RMM01106 B ON A.RM_ID =B.RM_ID WHERE A.RM_ID=@CMEMO_ID  
        
	END    
	ELSE
	IF @XN_TYPE='WSL'
	BEGIN
		SELECT TOP 1 @DMEMODT=INV_DT,@CPARTYSTATE_CODE=PARTY_STATE_CODE FROM INM01106 WHERE INV_ID=@CMEMO_ID
		
        INSERT INTO @TMPTABLEDET(MEMO_ID,ROW_ID ,PRODUCT_CODE ,XN_VALUE_WITHOUT_GST,XN_VALUE_WITH_GST,GST_PERCENTAGE ,
        IGST_AMOUNT,CGST_AMOUNT ,SGST_AMOUNT,TAX_METHOD,HSN_CODE)
        SELECT A.INV_ID AS  MEMO_ID,ROW_ID ,PRODUCT_CODE,XN_VALUE_WITHOUT_GST,XN_VALUE_WITH_GST,
        GST_PERCENTAGE,IGST_AMOUNT,CGST_AMOUNT,SGST_AMOUNT,
        B.BILL_LEVEL_TAX_METHOD AS TAX_METHOD,HSN_CODE 
        FROM IND01106 A
        JOIN INM01106 B ON A.INV_ID =B.INV_ID 
        WHERE A.INV_ID=@CMEMO_ID  
	END    
	ELSE
	IF @XN_TYPE='WSR'
	BEGIN
		SELECT TOP 1 @DMEMODT=CN_DT,@CPARTYSTATE_CODE=PARTY_STATE_CODE FROM CNM01106 WHERE CN_ID=@CMEMO_ID
		
        INSERT INTO @TMPTABLEDET(MEMO_ID,ROW_ID ,PRODUCT_CODE ,XN_VALUE_WITHOUT_GST,XN_VALUE_WITH_GST,GST_PERCENTAGE ,
        IGST_AMOUNT,CGST_AMOUNT ,SGST_AMOUNT,TAX_METHOD,HSN_CODE)
        SELECT A.CN_ID AS  MEMO_ID,ROW_ID ,PRODUCT_CODE,XN_VALUE_WITHOUT_GST,XN_VALUE_WITH_GST,
        GST_PERCENTAGE,IGST_AMOUNT,CGST_AMOUNT,SGST_AMOUNT,
        A.BILL_LEVEL_TAX_METHOD AS TAX_METHOD,HSN_CODE 
        FROM CND01106 A
        JOIN CNM01106 B ON A.CN_ID =B.CN_ID 
        WHERE A.CN_ID=@CMEMO_ID  
	END    
	ELSE
	IF @XN_TYPE='SLS'
	BEGIN
		SELECT TOP 1 @CCUSTOMERCODE=CUSTOMER_CODE,@DMEMODT=CM_DT,@CPARTYSTATE_CODE=PARTY_STATE_CODE FROM CMM01106 WHERE CM_ID=@CMEMO_ID
		
		IF @CCUSTOMERCODE IN ('','000000000000')
			SET @BLOCALBILL=1
			
        INSERT INTO @TMPTABLEDET(MEMO_ID,ROW_ID ,PRODUCT_CODE ,XN_VALUE_WITHOUT_GST,XN_VALUE_WITH_GST,GST_PERCENTAGE ,
        IGST_AMOUNT,CGST_AMOUNT ,SGST_AMOUNT,TAX_METHOD,HSN_CODE)
        SELECT A.CM_ID AS  MEMO_ID,ROW_ID ,PRODUCT_CODE,XN_VALUE_WITHOUT_GST,XN_VALUE_WITH_GST,
        GST_PERCENTAGE,IGST_AMOUNT,CGST_AMOUNT,SGST_AMOUNT,
        (CASE WHEN TAX_METHOD=2 THEN 1 ELSE 2 END) AS TAX_METHOD,HSN_CODE 
        FROM CMD01106 A
        JOIN CMM01106 B ON A.CM_ID =B.CM_ID 
        WHERE A.CM_ID=@CMEMO_ID  
	END    
	

	IF @DMEMODT<@CGSTCUTOFFDATE OR ISNULL(@CGSTCUTOFFDATE,'')=''
	BEGIN
		SELECT TOP 1 @CPRODUCTCODE=PRODUCT_CODE FROM @TMPTABLEDET WHERE ISNULL(IGST_AMOUNT,0)<>0 OR ISNULL(CGST_AMOUNT,0)<>0
		OR ISNULL(SGST_AMOUNT,0)<>0
		
		IF ISNULL(@CPRODUCTCODE,'')<>''
		BEGIN
			SET @CERRMSG = 'GST AMOUNT CANNOT BE STORED FOR THE TRANSACTIONS PRIOR TO :'+CONVERT(VARCHAR,CONVERT(DATE,@CGSTCUTOFFDATE),110)+
						   ' FOR ITEM CODE:'+@CPRODUCTCODE
			RETURN			   
		END
	END
	
	
	IF @DMEMODT<CONVERT(DATE,@CGSTCUTOFFDATE)
		RETURN
	
	IF @BLOCALBILL=0 AND @CPARTYSTATE_CODE=@CCURSTATE_CODE
		SET @BLOCALBILL=1 
		
	
	IF @XN_TYPE='SLS'
	BEGIN
			    
		DECLARE @CPRODUCT_CODE VARCHAR(100),@NGSTPERCENTAGE NUMERIC(18,2),@NHSN_GSTPERCENTAGE NUMERIC(18,2),
		@CLOCREGISTERED INT,@NCURGSTNO VARCHAR(100),@PARTYGSTNO VARCHAR(100),@BDONOTCALCULATEGST BIT,
		@bCUSTDYM_EXPORT_GST_PERCENTAGE_APPLICABLE bit,@NCUSTDYM_EXPORT_GST_PERCENTAGE NUMERIC(5,2)
		
		 SET @BDONOTCALCULATEGST=0

		

		SELECT @CLOCREGISTERED=L.REGISTERED_GST ,@NCURGSTNO=L.LOC_GST_NO ,@PARTYGSTNO=CUST.CUS_GST_NO ,
		       @bCUSTDYM_EXPORT_GST_PERCENTAGE_APPLICABLE=CUST.CUSTDYM_EXPORT_GST_PERCENTAGE_APPLICABLE,
			   @NCUSTDYM_EXPORT_GST_PERCENTAGE=CUST.CUSTDYM_EXPORT_GST_PERCENTAGE
		FROM CMM01106 A (NOLOCK)
		JOIN LOCATION L (NOLOCK) ON A.location_Code =L.DEPT_ID 
		JOIN CUSTDYM CUST (NOLOCK) ON CUST.CUSTOMER_CODE =A.CUSTOMER_CODE 
		WHERE A.CM_ID =@CMEMO_ID

		IF ISNULL(@BCUSTDYM_EXPORT_GST_PERCENTAGE_APPLICABLE,0)=1 AND ISNULL(@NCUSTDYM_EXPORT_GST_PERCENTAGE,0)=0
		   SET @BDONOTCALCULATEGST=1
		
		
		IF ISNULL(@CLOCREGISTERED,0)=1 AND ISNULL(@NCURGSTNO,'')<>ISNULL(@PARTYGSTNO,'') and @BDONOTCALCULATEGST=0
		BEGIN
			SELECT TOP 1 @CPRODUCT_CODE=PRODUCT_CODE ,@NGSTPERCENTAGE=A.GST_PERCENTAGE ,@NHSN_GSTPERCENTAGE=HM.TAX_PERCENTAGE 
			FROM CMD01106 A (NOLOCK)
			JOIN
			(
			 SELECT WEF, HSN_CODE,TAX_PERCENTAGE,RATE_CUTOFF,RATE_CUTOFF_TAX_PERCENTAGE,
			 SR=ROW_NUMBER () OVER (PARTITION BY HSN_CODE ORDER BY WEF DESC)
			 FROM HSN_DET
			 WHERE WEF<=@DMEMODT 
			) HM ON A.HSN_CODE =HM.HSN_CODE AND HM.SR=1
			WHERE A.QUANTITY >0 
			AND A.CM_ID=@CMEMO_ID  
			AND ISNULL(A.GST_PERCENTAGE,0)=0 AND ISNULL(HM.TAX_PERCENTAGE ,0)<>0
			AND (ISNULL(A.NET,0)-ISNULL(A.CMM_DISCOUNT_AMOUNT,0)) <>0

			IF ISNULL(@CPRODUCT_CODE,'')<>''
			BEGIN
				 SET @CERRMSG='MISMATCH BETWEEN GST PERCENTAGE (STORED) :'+LTRIM(RTRIM(STR(@NGSTPERCENTAGE,10,2)))+
				 ' AND GST PERCENTAGE (CALCULATED) : '+LTRIM(RTRIM(STR(@NHSN_GSTPERCENTAGE,10,2)))+' FOR ITEM CODE :'+@CPRODUCT_CODE				 
			 RETURN					 
			END 
		  END
	END		
				
	--UPDATE TMP SET CAL_IGST_AMOUNT =XN_VALUE_WITHOUT_GST*(CASE WHEN @BLOCALBILL=1 THEN 0 ELSE (TMP.GST_PERCENTAGE/100) END),
	--			   CAL_CGST_AMOUNT=(CASE WHEN @BLOCALBILL=1 THEN XN_VALUE_WITHOUT_GST*(TMP.GST_PERCENTAGE/100)/2 ELSE 0 END),
	--			   CAL_SGST_AMOUNT=(CASE WHEN @BLOCALBILL=1 THEN XN_VALUE_WITHOUT_GST*(TMP.GST_PERCENTAGE/100)/2 ELSE 0 END)
	--FROM @TMPTABLEDET TMP

      
 --   DECLARE @CAL_IGST_AMOUNT NUMERIC(18,2),@CAL_CGST_AMOUNT NUMERIC(18,2),@CAL_SGST_AMOUNT NUMERIC(18,2),
 --           @IGST_AMOUNT NUMERIC(18,2),@CGST_AMOUNT NUMERIC(18,2),@SGST_AMOUNT NUMERIC(18,2)
      
      
 --   SELECT TOP 1 @CPRODUCTCODE=PRODUCT_CODE,
	--		 @CAL_IGST_AMOUNT=CAL_IGST_AMOUNT ,
 --            @IGST_AMOUNT=IGST_AMOUNT,
 --            @CAL_CGST_AMOUNT=CAL_CGST_AMOUNT,
 --            @CGST_AMOUNT=CGST_AMOUNT,
 --            @CAL_SGST_AMOUNT=CAL_SGST_AMOUNT,
 --            @SGST_AMOUNT=SGST_AMOUNT
             
 --    FROM @TMPTABLEDET TMP
	-- WHERE (ISNULL(CAL_IGST_AMOUNT,0)<>ISNULL(IGST_AMOUNT,0) OR ISNULL(CAL_CGST_AMOUNT,0)<>ISNULL(CGST_AMOUNT,0) OR ISNULL(CAL_SGST_AMOUNT,0)<>ISNULL(SGST_AMOUNT,0))
      
 --    IF ABS(ISNULL(@IGST_AMOUNT,0)-ISNULL(@CAL_IGST_AMOUNT,0))>0
	-- BEGIN
	--	SET @CERRMSG = ' MISMATCH BETWEEN EXPECTED IGST AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@CAL_IGST_AMOUNT,0),14,4)))+')
	--				 & EXISTING IGST AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@IGST_AMOUNT,0),14,4))) +') FOR ITEM CODE:'+@CPRODUCTCODE+' ..... CANNOT SAVE '
	--	RETURN
	-- END	

 --    IF ABS(ISNULL(@CGST_AMOUNT,0)-ISNULL(@CAL_CGST_AMOUNT,0))>0
	-- BEGIN
	--	SET @CERRMSG = ' MISMATCH BETWEEN EXPECTED CGST AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@CAL_CGST_AMOUNT,0),14,4)))+')
	--				 & EXISTING CGST AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@CGST_AMOUNT,0),14,4))) +') FOR ITEM CODE:'+@CPRODUCTCODE+' ..... CANNOT SAVE '
	--	RETURN
	-- END	

 --    IF ABS(ISNULL(@SGST_AMOUNT,0)-ISNULL(@CAL_SGST_AMOUNT,0))>0
	-- BEGIN
	--	SET @CERRMSG = ' MISMATCH BETWEEN EXPECTED SGST AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@CAL_SGST_AMOUNT,0),14,4)))+')
	--				 & EXISTING SGST AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@SGST_AMOUNT,0),14,4))) +') FOR ITEM CODE:'+@CPRODUCTCODE+' ..... CANNOT SAVE '
	--	RETURN
	-- END		
	          	
	
    
  END TRY  
  BEGIN CATCH  
   SELECT @CERRMSG='ERROR MESSAGE IN PROCEDURE SP3S_GST_TAX_CAL STEP#'+@CSTEP+' '+CAST(ERROR_MESSAGE() AS VARCHAR(MAX))+ '||'+ERROR_PROCEDURE()  
  END CATCH  
END
