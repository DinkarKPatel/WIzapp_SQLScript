create  PROCEDURE SP_DSR_SALESSUMMARY_HSN  
(    --PARAMETERS  
	 @DFROMDT DATETIME,    --3. REPORT FROM DT  
	 @DTODT  DATETIME,    --4. REPORT TO DT  
	 @CDEPTID CHAR(4),    --5. DEPT ID (IF BLANK THIS PARAMETER THEN RUN THIS REPORT FOR ALL LOCATION  
	 @BESTIMATEENABLED BIT,
	 @CUSERCODE	VARCHAR(15),
	 @CBINID	VARCHAR(10),
	 @NSUMMARYTYPE INT=1,
	 @CLOGIN_USERCODE VARCHAR(12) = '',
     @NMODE NUMERIC(1,0) = 0  
)  
--WITH ENCRYPTION
AS  
BEGIN   
--(dinkar) Replace  left(memoid,2) to Location_code 
	   DECLARE @CMAJORDEPTID VARCHAR(5),@BDSM BIT,@CERRMSGOUT VARCHAR(500)
	   
	   DECLARE @USERALIAS VARCHAR(10), @MINCMNO VARCHAR(15), @MAXCMNO VARCHAR(15), @MINMAXSTR VARCHAR(3000),  
		@NCASH NUMERIC(15,2), @NCC NUMERIC(15,2), @NCHEQUE NUMERIC(15,2), @NCNADJ NUMERIC(15,2),   
		@NCRISS NUMERIC(15,2), @NCNISS NUMERIC(15,2), @NCRFISS NUMERIC(15,2), @NADVADJ NUMERIC(15,2),   
		@NATD NUMERIC(15,2), @NDISCAMT NUMERIC(15,2), @NGVADJ NUMERIC(15,2),   
		@NBANKCH NUMERIC(12,2), @NMISC NUMERIC(12,2) , @NRNDOFF NUMERIC(12,2),@NSCHEMEDISCAMT NUMERIC(10,2),
		@NCASH1 NUMERIC(15,2),@NCC1 NUMERIC(15,2),@NCRISS1 NUMERIC(15,2), 
		@NCNISS1 NUMERIC(15,2),@NCRFISS1 NUMERIC(15,2),@NCNADJ1  NUMERIC(15,2),@NGVADJ1 NUMERIC(15,2),
		@NADVADJ1 NUMERIC(15,2),@NATD1 NUMERIC(15,2),@NBANKCH1 NUMERIC(12,2), @NMISC1 NUMERIC(12,2) ,
		@NRNDOFF1 NUMERIC(12,2),@WSLCREDITISSUES NUMERIC(18,2),
		@NWALLET NUMERIC(12,2) ,@NWALLET1 NUMERIC(12,2) 


		--DECLARE @FREEZE_DT DATE='1900-01-01',@bALLOW_VIEW BIT=0
		----IF OBJECT_ID('TEMPDB..#FREEZED_DATE','U') IS NOT NULL
		----	DROP TABLE #FREEZED_DATE

		----CREATE TABLE #FREEZED_DATE  (FREEZED_DATE DATE, ALLOW_VIEW BIT)
		--;WITH FZ
		--AS
		--(
		--	SELECT  *  FROM DBO.GET_DATAFREEZE_DATE(@CUSERCODE,'FRMSALE',@DFROMDT)
		--)
		----INSERT INTO #FREEZED_DATE(FREEZED_DATE , ALLOW_VIEW)
		--SELECT @FREEZE_DT= FREEZED_DATE , @bALLOW_VIEW=ALLOW_VIEW
		--FROM FZ
		
		--SELECT  @bALLOW_VIEW=0


	   /*
			CALL THIS PROCEDURE TO CHECK IF SOME BILLS ARE PENDING FOR CASHER. EITHER FROM CASH MEMO TO CASHIER OR
			PACKSLIP TO CASHMEMO.	   
	   */
	   EXEC SP3S_CHECK_PENDING_BILLS 
		 @DFROM_DT=@DFROMDT
		,@DTO_DT=@DTODT
		,@CDEPT_ID=@CDEPTID
		,@BESTIMATEENABLED=@BESTIMATEENABLED
		,@CUSERCODE=@CUSERCODE
		,@CBINID=@CBINID
		,@CERRMSGOUT=@CERRMSGOUT OUTPUT

		
		 IF OBJECT_ID('TEMPDB..#TMPUSERS','U') IS NOT NULL
			DROP TABLE #TMPUSERS
		  SELECT DISTINCT XNS_USER_CODE INTO #TMPUSERS FROM USER_XNS_FILTER (NOLOCK) WHERE 1=2

  
	    	-- AS PER DISCUSS WITH PANKAJ SIR 
		 DECLARE @BALLOW_ACCESS_RETAIL_SALE_ALL_USERS VARCHAR(10)
		SELECT @BALLOW_ACCESS_RETAIL_SALE_ALL_USERS=ALLOW_ACCESS_RETAIL_SALE_ALL_USERS FROM USERS WHERE USER_CODE =@CLOGIN_USERCODE 

		
		  IF @CUSERCODE<>''
		  BEGIN
			    INSERT INTO #TMPUSERS
				SELECT @CUSERCODE
		  END
		  ELSE 
		  BEGIN

		       IF   ISNULL(@BALLOW_ACCESS_RETAIL_SALE_ALL_USERS,0)=1
			        SET @CUSERCODE=''
			   ELSE 
			   BEGIN

			      INSERT INTO #TMPUSERS
				  SELECT DISTINCT XNS_USER_CODE FROM USER_XNS_FILTER (NOLOCK) WHERE USER_CODE= @CLOGIN_USERCODE 
				  UNION 
				  SELECT @CLOGIN_USERCODE AS XNS_USER_CODE

				  SET @CUSERCODE=@CLOGIN_USERCODE

			   END


		  END
		  --SELECT @CUSERCODE
		
	--SELECT XNS_USER_CODE FROM #TMPUSERS

	

	   SET @MINMAXSTR = ''  
	  
	   DECLARE @SSRC TABLE (PRTORD NUMERIC(2, 0), HSN_CODE varchar(20),TRANSACTION_MODE varchar(100), DETAILS VARCHAR(100), GNS NUMERIC(15, 2),   
			GST NUMERIC(15, 2), GTS NUMERIC(15, 2), RNS NUMERIC(15, 2),   
			RST NUMERIC(15, 2), RTS NUMERIC(15, 2), NNS NUMERIC(15, 2),   
			NST NUMERIC(15, 2), NTS NUMERIC(15, 2), TQTY NUMERIC(15, 2),Gst_Cess_Amount NUMERIC(15, 2))  
	  
	   DECLARE @SSRMODEC TABLE (PRTORD NUMERIC(2, 0), DETAILS VARCHAR(100), AMOUNT NUMERIC(15, 2),  
			   ROUND_OFF NUMERIC(6,2), SUBDETAILS BIT, TOTAMOUNT NUMERIC(15,2),  
			   MINMAX VARCHAR(4000))  
			   
	   DECLARE @SSRMODECWSL TABLE (PRTORD NUMERIC(2, 0), DETAILS VARCHAR(100), AMOUNT NUMERIC(15, 2),  
			   ROUND_OFF NUMERIC(6,2), SUBDETAILS BIT, TOTAMOUNT NUMERIC(15,2),  
			   MINMAX VARCHAR(4000))		     
			   
       DECLARE @SSRWSL TABLE (PRTORD NUMERIC(2, 0), HSN_CODE varchar(20),TRANSACTION_MODE varchar(100),TYPE VARCHAR(100), DETAILS VARCHAR(100), GNS NUMERIC(15, 2),   
			GST NUMERIC(15, 2), GTS NUMERIC(15, 2), RNS NUMERIC(15, 2),   
			RST NUMERIC(15, 2), RTS NUMERIC(15, 2), NNS NUMERIC(15, 2),   
			NST NUMERIC(15, 2), NTS NUMERIC(15, 2), TQTY NUMERIC(15, 2))      
			
	   DECLARE @WSLRETURN TABLE (PRTORD NUMERIC(2, 0), HSN_CODE varchar(20),TRANSACTION_MODE varchar(100),TYPE VARCHAR(100),DETAIL VARCHAR(20),GNS NUMERIC(18,2),GST NUMERIC(18,2),GTS NUMERIC(18,2),RNS NUMERIC(18,2),RST NUMERIC(18,2),
	          RTS NUMERIC(18,2),NNS NUMERIC(18,2),NST NUMERIC(18,2),NTS NUMERIC(18,2))		
	   DECLARE @WSLRETURN1 TABLE (PRTORD NUMERIC(2, 0), HSN_CODE varchar(20),TRANSACTION_MODE varchar(100),TYPE VARCHAR(100),DETAIL VARCHAR(20),GNS NUMERIC(18,2),GST NUMERIC(18,2),GTS NUMERIC(18,2),RNS NUMERIC(18,2),RST NUMERIC(18,2),
	          RTS NUMERIC(18,2),NNS NUMERIC(18,2),NST NUMERIC(18,2),NTS NUMERIC(18,2), TQTY NUMERIC(15, 2))		   

	  INSERT INTO @SSRC (PRTORD,HSN_CODE,TRANSACTION_MODE, DETAILS, GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY ,Gst_Cess_Amount)  

  
		SELECT 1 AS PRTORD,A.HSN_CODE,CASE WHEN IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END as TRANSACTION_MODE,
		'G'+(CASE WHEN A.GST_PERCENTAGE=0 THEN 'F' WHEN ROUND(A.GST_PERCENTAGE,0)=A.GST_PERCENTAGE THEN LTRIM(RTRIM(STR(A.GST_PERCENTAGE)))
								 ELSE LTRIM(RTRIM(STR(A.GST_PERCENTAGE,7,3))) END) AS DETAILS,
	  --TAX_STATUS AS DETAILS,    
	   SUM(  CASE WHEN QUANTITY>0 THEN XN_VALUE_WITHOUT_GST  ELSE 0 END ) AS GNS,    
	   SUM( CASE WHEN QUANTITY>0 THEN IGST_AMOUNT+SGST_AMOUNT+CGST_AMOUNT ELSE 0 END) AS GST,    
	   SUM( CASE WHEN QUANTITY>0 THEN XN_VALUE_WITHOUT_GST+IGST_AMOUNT+SGST_AMOUNT+CGST_AMOUNT ELSE 0 END) AS GTS, 
	      
	   SUM(  CASE WHEN QUANTITY< 0 THEN ABS(XN_VALUE_WITHOUT_GST)  ELSE 0 END ) AS GNS,    
	   SUM( CASE WHEN QUANTITY<0 THEN ABS(IGST_AMOUNT+SGST_AMOUNT+CGST_AMOUNT) ELSE 0 END) AS GST,    
	   SUM( CASE WHEN QUANTITY< 0 THEN ABS(XN_VALUE_WITHOUT_GST+IGST_AMOUNT+SGST_AMOUNT+CGST_AMOUNT) ELSE 0 END) AS GTS, 
	    
	  
	   SUM(XN_VALUE_WITHOUT_GST)AS NNS,    
	   SUM( IGST_AMOUNT+SGST_AMOUNT+CGST_AMOUNT ) AS NST,    
	   SUM( XN_VALUE_WITHOUT_GST+IGST_AMOUNT+SGST_AMOUNT+CGST_AMOUNT  ) AS NTS,    
       SUM(A.QUANTITY) AS TQTY,
	   sum(ISNULL(a.GST_CESS_AMOUNT,0)) AS GST_CESS_AMOUNT
	  FROM CMD01106 A    
	  JOIN CMM01106 B ON A.CM_ID = B.CM_ID    
	  JOIN LOCATION C ON b.location_Code  = C.DEPT_ID 
	  JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	  
	  WHERE B.CANCELLED = 0  --AND B.CM_MODE = 1  
	  AND B.CM_DT BETWEEN @DFROMDT AND @DTODT   
	  AND b.location_Code  = (CASE WHEN @CDEPTID = '' THEN b.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  --AND (@DFROMDT>@FREEZE_DT AND @bALLOW_VIEW=0) 
	  --AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CB.CM_ID IS NOT NULL)) OR (@BDSM=0))	
	  GROUP BY (CASE WHEN A.GST_PERCENTAGE=0 THEN 'F' WHEN ROUND(A.GST_PERCENTAGE,0)=A.GST_PERCENTAGE THEN LTRIM(RTRIM(STR(A.GST_PERCENTAGE)))
								 ELSE LTRIM(RTRIM(STR(A.GST_PERCENTAGE,7,3))) END) ,
		A.HSN_CODE,CASE WHEN IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END

      --Gst cess Amount add
	      INSERT INTO @SSRC (PRTORD, DETAILS, GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY ) 
		  SELECT 1, 'CESS AMOUNT',
		        SUM(CASE WHEN GST_CESS_AMOUNT>0 THEN GST_CESS_AMOUNT ELSE 0 END ) GNS,
				0 as GST,
				SUM(CASE WHEN GST_CESS_AMOUNT>0 THEN GST_CESS_AMOUNT ELSE 0 END ) GTS,

				SUM(CASE WHEN GST_CESS_AMOUNT<0 THEN GST_CESS_AMOUNT ELSE 0 END )  RNS,
				0 as RNS,
				SUM(CASE WHEN GST_CESS_AMOUNT<0 THEN GST_CESS_AMOUNT ELSE 0 END )  RTS,

				sum(GST_CESS_AMOUNT) As NST,
				0 as NST,
				sum(GST_CESS_AMOUNT) As NTS,
				0 as TQTY
		  FROM @SSRC 
		  WHERE GST_CESS_AMOUNT <>0
	   --end of Gst Cess amount


	 DECLARE @CGSTROUNOFFDETAILS VARCHAR(10)
	 SELECT TOP 1 @CGSTROUNOFFDETAILS=DETAILS FROM @SSRC

	 update a set GNS=a.GNS +isnull(b.GNS,0),
	              GTS=a.GTS +isnull(b.GTS,0),
	              RNS=a.RNS +isnull(b.RNS,0),
	              RTS=a.RTS +isnull(b.RTS,0),
	              NNS=a.NNS +isnull(b.NNS,0),
	              NTS=a.NTS +isnull(b.NTS,0)
	  from @SSRC a
	 join
	 (
	 SELECT 1 AS PRTORD,@CGSTROUNOFFDETAILS AS DETAILS,
	  --TAX_STATUS AS DETAILS,    
	   SUM(  CASE WHEN b.gst_round_off >0 THEN GST_ROUND_OFF  ELSE 0 END ) AS GNS,      
	   SUM( CASE WHEN gst_round_off>0 THEN gst_round_off ELSE 0 END) AS GTS, 
	   SUM( CASE WHEN gst_round_off< 0 THEN ABS(gst_round_off)  ELSE 0 END ) AS RNS,    
	   SUM( CASE WHEN gst_round_off< 0 THEN ABS(gst_round_off) ELSE 0 END) AS RTS, 
	   SUM(gst_round_off)AS NNS,    
	   SUM( gst_round_off ) AS NTS   
  
	  FROM CMM01106 B  (nolock)   
	  JOIN LOCATION C ON b.location_Code  = C.DEPT_ID 
	  JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	  
	  WHERE B.CANCELLED = 0  --AND B.CM_MODE = 1  
	  AND B.CM_DT BETWEEN @DFROMDT AND @DTODT   
	  AND b.location_Code  = (CASE WHEN @CDEPTID = '' THEN b.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  --AND (B.CM_DT>@FREEZE_DT AND @bALLOW_VIEW=0) 
	  having SUM( gst_round_off )<>0 
	  ) b on a.DETAILS =b.DETAILS 
	  


	 ---
								 
								 
	--overhead 							
	  INSERT INTO @SSRC (PRTORD,HSN_CODE,TRANSACTION_MODE, DETAILS, GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY )         
	   SELECT 1 AS PRTORD,b.OTHER_CHARGES_HSN_CODE,CASE WHEN OTHER_CHARGES_IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END as TRANSACTION_MODE,
	   
	   'OHG'+(CASE WHEN isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0)=0 THEN 'F' WHEN ROUND(isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0),0)=isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0) THEN LTRIM(RTRIM(STR(isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0))))
								 ELSE LTRIM(RTRIM(STR(b.OTHER_CHARGES_GST_PERCENTAGE,7,3))) END) AS DETAILS,
	  --TAX_STATUS AS DETAILS,    
	   SUM(  CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0) >0 THEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)  ELSE 0 END ) AS GNS,    
	   SUM( CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)>0 THEN isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0) ELSE 0 END) AS GST,    
	   SUM( CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)>0 THEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)+isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0) ELSE 0 END) AS GTS, 
	      
	   SUM(  CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)< 0 THEN ABS(OTHER_CHARGES_TAXABLE_VALUE)  ELSE 0 END ) AS GNS,    
	   SUM( CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)<0 THEN ABS(isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0)) ELSE 0 END) AS GST,    
	   SUM( CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)< 0 THEN ABS(isnull(OTHER_CHARGES_TAXABLE_VALUE,0)+isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0)) ELSE 0 END) AS GTS, 
	    
	  
	   SUM(isnull(OTHER_CHARGES_TAXABLE_VALUE,0))AS NNS,    
	   SUM( isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0) ) AS NST,    
	   SUM( isnull(OTHER_CHARGES_TAXABLE_VALUE,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0)+isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)  ) AS NTS,    
       0 AS TQTY
	  FROM  CMM01106 B 
	  JOIN LOCATION C ON b.location_Code  = C.DEPT_ID 
	  JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  JOIN DTM ON DTM.DT_CODE=B.DT_CODE
	  WHERE B.CANCELLED = 0  --AND B.CM_MODE = 1  
	  AND B.CM_DT BETWEEN @DFROMDT AND @DTODT   
	  AND b.location_Code  = (CASE WHEN @CDEPTID = '' THEN b.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  and isnull(OTHER_CHARGES_TAXABLE_VALUE,0)<>0
	  --AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CB.CM_ID IS NOT NULL)) OR (@BDSM=0))	
	  	--AND (B.CM_DT>@FREEZE_DT AND @bALLOW_VIEW=0) 
	  GROUP BY (CASE WHEN isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0)=0 THEN 'F' WHEN ROUND(isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0),0)=isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0) THEN LTRIM(RTRIM(STR(isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0))))
								 ELSE LTRIM(RTRIM(STR(b.OTHER_CHARGES_GST_PERCENTAGE,7,3))) END),
	b.OTHER_CHARGES_HSN_CODE,CASE WHEN OTHER_CHARGES_IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END 
	
	  SELECT @NCASH = ROUND(SUM(ISNULL(B.CASH_AMOUNT,0)),2),   
	--	@NCC = ROUND(SUM(ISNULL(B.CC_AMOUNT,0)),2),   
		@NCHEQUE= 0,    
		@NCNADJ = ROUND(SUM(ISNULL(B.CN_AMOUNT,0)),2),   
		@NCRISS = ROUND(SUM(CASE WHEN ISNULL(B.CREDIT_AMOUNT,0)>0 THEN ISNULL(B.CREDIT_AMOUNT,0) ELSE 0 END ),2),   
		@NCNISS = ROUND(SUM(CASE WHEN ISNULL(B.CREDIT_AMOUNT,0)<0 AND SUBSTRING(CM_NO,5,1)='N' THEN ABS(ISNULL(B.CREDIT_AMOUNT,0)) ELSE 0 END),2),   
		@NCRFISS= ROUND(SUM(CASE WHEN ISNULL(B.CREDIT_REFUND_AMOUNT,0)<>0 THEN ABS(ISNULL(B.CREDIT_REFUND_AMOUNT,0)) ELSE 0 END),2),       
		@NADVADJ= ROUND(SUM(ISNULL(B.ADVANCE_AMOUNT_ADJUSTED,0)),2),   
		@NATD = ROUND(SUM(ISNULL(A.ATD_CHARGES,0)),2),      
		@NGVADJ = ROUND(SUM(ISNULL(B.OTHER_DOC_AMOUNT,0)),2),     
		@NBANKCH= ROUND(SUM(ISNULL(B.BANK_CHARGES,0)),2),   
		@NMISC  = ROUND(SUM(ISNULL(B.MISC_AMOUNT,0)),2),     
		@NRNDOFF  = ROUND(SUM(ISNULL(A.ROUND_OFF,0)),2), 
		@NWALLET = ROUND(SUM(ISNULL(B.WALLET,0)),2)    
	  FROM CMM01106 A   
	  LEFT OUTER JOIN DBO.VW_BILL_PAYMODE B ON A.CM_ID = B.MEMO_ID AND B.XN_TYPE = 'SLS'  
	  JOIN DTM C (NOLOCK) ON C.DT_CODE=A.DT_CODE

	  WHERE A.CANCELLED = 0 --AND A.CM_MODE = 1    
	  AND A.CM_DT BETWEEN @DFROMDT AND @DTODT AND (A.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)
	  AND a.location_Code  = (CASE WHEN @CDEPTID = '' THEN a.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(A.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(A.BIN_ID,'000') ELSE @CBINID END)  
	    AND (@CUSERCODE='' OR  A.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
			  --AND (A.CM_DT>@FREEZE_DT AND @bALLOW_VIEW=0) 
	  --AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CB.CM_ID IS NOT NULL)) OR (@BDSM=0))
	  
	INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT)
	  SELECT 2 ,PM.PAYMODE_NAME ,1 ,sum(b.amount) as amount   FROM CMM01106 A   
	  JOIN PAYMODE_XN_DET  B ON A.CM_ID = B.MEMO_ID AND B.XN_TYPE = 'SLS'  
	  JOIN PAYMODE_MST PM (NOLOCK) ON PM.PAYMODE_CODE = B.PAYMODE_CODE  
	  WHERE A.CANCELLED = 0 --AND A.CM_MODE = 1    
	  AND A.CM_DT BETWEEN @DFROMDT AND @DTODT AND (A.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)
	  AND a.location_Code  = (CASE WHEN @CDEPTID = '' THEN a.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(A.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(A.BIN_ID,'000') ELSE @CBINID END)  
	  AND (@CUSERCODE='' OR  A.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  AND PM.PAYMODE_GRP_CODE ='0000002'
	  --AND (A.CM_DT>@FREEZE_DT AND @bALLOW_VIEW=0) 
	  group by PM.PAYMODE_NAME


	 IF ABS(@NCASH) > 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'CASH',1, @NCASH)   
	  
	 --IF @NCC <> 0  
	 -- INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'CREDIT CARD',1, @NCC)   
	  
	 IF @NCRISS > 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'CREDIT ISSUE',1, @NCRISS )   
	    
	 IF @NCNISS > 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'C/N ISSUE',1, -@NCNISS )   
	   
	 IF @NCRFISS > 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'CRF ISSUE',1, -@NCRFISS )   
	   
	 IF @NCNADJ > 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'C/N ADJUSTED',1, @NCNADJ )   
	  
	 IF @NGVADJ <> 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'CHEQUE/DOCUMENTS',1, @NGVADJ )   
	  
	 IF @NADVADJ > 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'ADVANCE ADJUSTED',1, @NADVADJ )   
	    
	 IF @NATD <> 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'ATD/OTHER CHARGES',1, -@NATD )   
	    
	 IF @NBANKCH <> 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'BANK CHARGES',1, @NBANKCH )   
	  
	 IF @NMISC <> 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'MISC AMOUNT',1, @NMISC )    
  
	IF @NRNDOFF <> 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'ROUND OFF',1, -@NRNDOFF ) 
	  
	  
	IF @NWALLET <> 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'WALLET',1, @NWALLET )    
	  
	     

	INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT)
	SELECT '2',DT_NAME,1,SUM(DISCOUNT_AMOUNT) FROM CMM01106 A (NOLOCK) 
	JOIN DTM B ON A.DT_CODE=B.DT_CODE 
	WHERE A.CM_DT BETWEEN @DFROMDT AND @DTODT AND (A.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)
	AND A.CANCELLED = 0 AND UPDATE_AC=1
	AND a.location_Code  = (CASE WHEN @CDEPTID = '' THEN a.location_Code  ELSE @CDEPTID END)  
	AND ISNULL(A.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(A.BIN_ID,'000') ELSE @CBINID END)  
	AND (@CUSERCODE='' OR  A.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
		  --AND (A.CM_DT>@FREEZE_DT AND @bALLOW_VIEW=0)   
	GROUP BY DT_NAME
	
	
	------------------------WSL---------------------------------
	INSERT INTO @SSRWSL (PRTORD,HSN_CODE,TRANSACTION_MODE,TYPE, DETAILS, GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY )  
	   SELECT 2 AS PRTORD,A.HSN_CODE,CASE WHEN IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END as TRANSACTION_MODE,
	   'WHOLE SALE' AS TYPE,'G'+(CASE WHEN A.GST_PERCENTAGE=0 THEN 'F'
	   WHEN ROUND(A.GST_PERCENTAGE,0)=A.GST_PERCENTAGE
	   THEN LTRIM(RTRIM(STR(A.GST_PERCENTAGE)))
	   ELSE LTRIM(RTRIM(STR(A.GST_PERCENTAGE,7,3))) END) AS DETAILS,
	  
	  --TAX_STATUS AS DETAILS,    
	   SUM(  CASE WHEN QUANTITY>0 THEN XN_VALUE_WITHOUT_GST  ELSE 0 END ) AS GNS,    
	   SUM( CASE WHEN QUANTITY>0 THEN ISNULL(IGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0) ELSE 0 END) AS GST,      
	   SUM( CASE WHEN QUANTITY>0 THEN ISNULL(XN_VALUE_WITHOUT_GST,0)+ ISNULL(IGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0) ELSE 0 END) AS GTS,    
	   
	   SUM(  CASE WHEN QUANTITY<0 THEN XN_VALUE_WITHOUT_GST  ELSE 0 END ) AS RNS,    
	   SUM( CASE WHEN QUANTITY<0 THEN ISNULL(IGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0) ELSE 0 END) AS RST,    
	   SUM( CASE WHEN QUANTITY<0 THEN ISNULL(XN_VALUE_WITHOUT_GST,0)+ ISNULL(IGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0) ELSE 0 END) AS RTS,    
	   
	   SUM(XN_VALUE_WITHOUT_GST)AS NNS,    
	   SUM( IGST_AMOUNT+SGST_AMOUNT+CGST_AMOUNT ) AS NST,    
	   SUM( XN_VALUE_WITHOUT_GST+IGST_AMOUNT+SGST_AMOUNT+CGST_AMOUNT  ) AS NTS,    
       SUM(A.QUANTITY) AS TQTY
	  FROM IND01106 A    
	  JOIN INM01106 B ON A.INV_ID = B.INV_ID    
	  LEFT JOIN LOCATION C ON b.location_Code  = C.DEPT_ID 
	  LEFT JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  LEFT  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	  
	  WHERE B.CANCELLED = 0  --AND B.CM_MODE = 1  
	  AND B.INV_DT BETWEEN @DFROMDT AND @DTODT AND B.INV_MODE=1  
	  AND b.location_Code  = (CASE WHEN @CDEPTID = '' THEN b.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  --AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CB.CM_ID IS NOT NULL)) OR (@BDSM=0))	
	  GROUP BY 'G'+(CASE WHEN A.GST_PERCENTAGE=0 THEN 'F' 
	   WHEN ROUND(A.GST_PERCENTAGE,0)=A.GST_PERCENTAGE
	   THEN LTRIM(RTRIM(STR(A.GST_PERCENTAGE)))
	   ELSE LTRIM(RTRIM(STR(A.GST_PERCENTAGE,7,3))) END) --TAX_STATUS  
	 ,A.HSN_CODE,CASE WHEN IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END


	 
	   --wholeSale other charges---
	    INSERT INTO @SSRWSL (PRTORD,HSN_CODE,TRANSACTION_MODE,TYPE, DETAILS, GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY )         
	   SELECT 2 AS PRTORD,b.OTHER_CHARGES_HSN_CODE,CASE WHEN OTHER_CHARGES_IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END as TRANSACTION_MODE,
	   'WHOLE SALE' AS TYPE,'OHG'+(CASE WHEN isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0)=0 THEN 'F' WHEN ROUND(isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0),0)=isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0) THEN LTRIM(RTRIM(STR(isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0))))
								 ELSE LTRIM(RTRIM(STR(b.OTHER_CHARGES_GST_PERCENTAGE,7,3))) END) AS DETAILS,
	  --TAX_STATUS AS DETAILS,    
	   SUM(  CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0) >0 THEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)  ELSE 0 END ) AS GNS,    
	   SUM( CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)>0 THEN isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0) ELSE 0 END) AS GST,    
	   SUM( CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)>0 THEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)+isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0) ELSE 0 END) AS GTS, 
	      
	   0 AS GNS,    
	   0 AS GST,    
	   0 AS GTS, 
	    
	  
	   SUM(isnull(OTHER_CHARGES_TAXABLE_VALUE,0))AS NNS,    
	   SUM( isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0) ) AS NST,    
	   SUM( isnull(OTHER_CHARGES_TAXABLE_VALUE,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0)+isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)  ) AS NTS,    
       0 AS TQTY
	  FROM  INM01106 B 
	  LEFT JOIN LOCATION C ON b.location_Code  = C.DEPT_ID 
	  LEFT JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  LEFT  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	  
	  WHERE B.CANCELLED = 0  --AND B.CM_MODE = 1  
	  AND B.INV_DT BETWEEN @DFROMDT AND @DTODT AND B.INV_MODE=1  
	  AND b.location_Code  = (CASE WHEN @CDEPTID = '' THEN b.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  and isnull(b.other_charges,0)<>0
	  GROUP BY (CASE WHEN isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0)=0 THEN 'F' WHEN ROUND(isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0),0)=isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0) THEN LTRIM(RTRIM(STR(isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0))))
	 ELSE LTRIM(RTRIM(STR(b.OTHER_CHARGES_GST_PERCENTAGE,7,3))) END),
	 b.OTHER_CHARGES_HSN_CODE,CASE WHEN OTHER_CHARGES_IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END

	 INSERT INTO @SSRWSL (PRTORD,HSN_CODE,TRANSACTION_MODE, TYPE,DETAILS, GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY )         
	   SELECT 2 AS PRTORD,b.FREIGHT_HSN_CODE,CASE WHEN FREIGHT_IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END as TRANSACTION_MODE,
	   'WHOLE SALE' AS TYPE,'FREIGHT'+(CASE WHEN isnull(b.FREIGHT_GST_PERCENTAGE,0)=0 THEN 'F' WHEN ROUND(isnull(b.FREIGHT_GST_PERCENTAGE,0),0)=isnull(b.FREIGHT_GST_PERCENTAGE,0) THEN LTRIM(RTRIM(STR(isnull(b.FREIGHT_GST_PERCENTAGE,0))))
								 ELSE LTRIM(RTRIM(STR(b.FREIGHT_GST_PERCENTAGE,7,3))) END) AS DETAILS,
	  --TAX_STATUS AS DETAILS,    
	   SUM(  CASE WHEN isnull(FREIGHT_TAXABLE_VALUE,0) >0 THEN isnull(FREIGHT_TAXABLE_VALUE,0)  ELSE 0 END ) AS GNS,    
	   SUM( CASE WHEN isnull(FREIGHT_TAXABLE_VALUE,0)>0 THEN isnull(FREIGHT_IGST_AMOUNT,0)+isnull(FREIGHT_SGST_AMOUNT,0)+isnull(FREIGHT_CGST_AMOUNT,0) ELSE 0 END) AS GST,    
	   SUM( CASE WHEN isnull(FREIGHT_TAXABLE_VALUE,0)>0 THEN isnull(FREIGHT_TAXABLE_VALUE,0)+isnull(FREIGHT_IGST_AMOUNT,0)+isnull(FREIGHT_SGST_AMOUNT,0)+isnull(FREIGHT_CGST_AMOUNT,0) ELSE 0 END) AS GTS, 
	      
	   0 AS GNS,    
	   0 AS GST,    
	   0 AS GTS, 
	    	   SUM(isnull(FREIGHT_TAXABLE_VALUE,0))AS NNS,    
	   SUM( isnull(FREIGHT_IGST_AMOUNT,0)+isnull(FREIGHT_SGST_AMOUNT,0)+isnull(FREIGHT_CGST_AMOUNT,0) ) AS NST,    
	   SUM( isnull(FREIGHT_TAXABLE_VALUE,0)+isnull(FREIGHT_CGST_AMOUNT,0)+isnull(FREIGHT_IGST_AMOUNT,0)+isnull(FREIGHT_SGST_AMOUNT,0)  ) AS NTS,    
       0 AS TQTY
	  FROM  INM01106 B 
	  LEFT JOIN LOCATION C ON b.location_Code  = C.DEPT_ID 
	  LEFT JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  LEFT  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	  
	  WHERE B.CANCELLED = 0  --AND B.CM_MODE = 1  
	  AND B.INV_DT BETWEEN @DFROMDT AND @DTODT AND B.INV_MODE=1  
	  AND b.location_Code  = (CASE WHEN @CDEPTID = '' THEN b.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  and isnull(b.FREIGHT,0)<>0
	  GROUP BY (CASE WHEN isnull(b.FREIGHT_GST_PERCENTAGE,0)=0 THEN 'F' WHEN ROUND(isnull(b.FREIGHT_GST_PERCENTAGE,0),0)=isnull(b.FREIGHT_GST_PERCENTAGE,0) THEN LTRIM(RTRIM(STR(isnull(b.FREIGHT_GST_PERCENTAGE,0))))
	 ELSE LTRIM(RTRIM(STR(b.FREIGHT_GST_PERCENTAGE,7,3))) END),
	 b.FREIGHT_HSN_CODE,CASE WHEN FREIGHT_IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END


	 INSERT INTO @SSRWSL (PRTORD,HSN_CODE,TRANSACTION_MODE, TYPE,DETAILS, GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY )         
	   SELECT 2 AS PRTORD,b.PACKING_HSN_CODE,CASE WHEN Packing_IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END as TRANSACTION_MODE,
	   'WHOLE SALE' AS TYPE,'PCK'+(CASE WHEN isnull(b.Packing_GST_PERCENTAGE,0)=0 THEN 'F' WHEN ROUND(isnull(b.Packing_GST_PERCENTAGE,0),0)=isnull(b.Packing_GST_PERCENTAGE,0) THEN LTRIM(RTRIM(STR(isnull(b.Packing_GST_PERCENTAGE,0))))
								 ELSE LTRIM(RTRIM(STR(b.Packing_GST_PERCENTAGE,7,3))) END) AS DETAILS,
	  --TAX_STATUS AS DETAILS,    
	   SUM(  CASE WHEN isnull(Packing_TAXABLE_VALUE,0) >0 THEN isnull(Packing_TAXABLE_VALUE,0)  ELSE 0 END ) AS GNS,    
	   SUM( CASE WHEN isnull(Packing_TAXABLE_VALUE,0)>0 THEN isnull(Packing_IGST_AMOUNT,0)+isnull(Packing_SGST_AMOUNT,0)+isnull(Packing_CGST_AMOUNT,0) ELSE 0 END) AS GST,    
	   SUM( CASE WHEN isnull(Packing_TAXABLE_VALUE,0)>0 THEN isnull(Packing_TAXABLE_VALUE,0)+isnull(Packing_IGST_AMOUNT,0)+isnull(Packing_SGST_AMOUNT,0)+isnull(Packing_CGST_AMOUNT,0) ELSE 0 END) AS GTS, 
	      
	   0 AS GNS,    
	   0 AS GST,    
	   0 AS GTS, 
	  
	   SUM(isnull(Packing_TAXABLE_VALUE,0))AS NNS,    
	   SUM( isnull(Packing_IGST_AMOUNT,0)+isnull(Packing_SGST_AMOUNT,0)+isnull(Packing_CGST_AMOUNT,0) ) AS NST,    
	   SUM( isnull(Packing_TAXABLE_VALUE,0)+isnull(Packing_CGST_AMOUNT,0)+isnull(Packing_IGST_AMOUNT,0)+isnull(Packing_SGST_AMOUNT,0)  ) AS NTS,    
       0 AS TQTY
	  FROM  INM01106 B 
	  LEFT JOIN LOCATION C ON b.location_Code  = C.DEPT_ID 
	  LEFT JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  LEFT  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	  
	  WHERE B.CANCELLED = 0  --AND B.CM_MODE = 1  
	  AND B.INV_DT BETWEEN @DFROMDT AND @DTODT AND B.INV_MODE=1  
	  AND b.location_Code  = (CASE WHEN @CDEPTID = '' THEN b.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  and isnull(b.Packing,0)<>0
	  GROUP BY (CASE WHEN isnull(b.Packing_GST_PERCENTAGE,0)=0 THEN 'F' WHEN ROUND(isnull(b.Packing_GST_PERCENTAGE,0),0)=isnull(b.Packing_GST_PERCENTAGE,0) THEN LTRIM(RTRIM(STR(isnull(b.Packing_GST_PERCENTAGE,0))))
	 ELSE LTRIM(RTRIM(STR(b.Packing_GST_PERCENTAGE,7,3))) END),
	 b.PACKING_HSN_CODE,CASE WHEN Packing_IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END 

	  INSERT INTO @SSRWSL (PRTORD,HSN_CODE,TRANSACTION_MODE,TYPE, DETAILS, GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY )         
	   SELECT 2 AS PRTORD,b.INSURANCE_HSN_CODE,CASE WHEN INSURANCE_IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END as TRANSACTION_MODE,
	   'WHOLE SALE' AS TYPE,'INS'+(CASE WHEN isnull(b.Insurance_GST_PERCENTAGE,0)=0 THEN 'F' WHEN ROUND(isnull(b.Insurance_GST_PERCENTAGE,0),0)=isnull(b.Insurance_GST_PERCENTAGE,0) THEN LTRIM(RTRIM(STR(isnull(b.Insurance_GST_PERCENTAGE,0))))
								 ELSE LTRIM(RTRIM(STR(b.Insurance_GST_PERCENTAGE,7,3))) END) AS DETAILS,
	  --TAX_STATUS AS DETAILS,    
	   SUM(  CASE WHEN isnull(Insurance_TAXABLE_VALUE,0) >0 THEN isnull(Insurance_TAXABLE_VALUE,0)  ELSE 0 END ) AS GNS,    
	   SUM( CASE WHEN isnull(Insurance_TAXABLE_VALUE,0)>0 THEN isnull(Insurance_IGST_AMOUNT,0)+isnull(Insurance_SGST_AMOUNT,0)+isnull(Insurance_CGST_AMOUNT,0) ELSE 0 END) AS GST,    
	   SUM( CASE WHEN isnull(Insurance_TAXABLE_VALUE,0)>0 THEN isnull(Insurance_TAXABLE_VALUE,0)+isnull(Insurance_IGST_AMOUNT,0)+isnull(Insurance_SGST_AMOUNT,0)+isnull(Insurance_CGST_AMOUNT,0) ELSE 0 END) AS GTS, 
	      
	   0 AS GNS,    
	   0 AS GST,    
	   0 AS GTS, 
	    
	   SUM(isnull(Insurance_TAXABLE_VALUE,0))AS NNS,    
	   SUM( isnull(Insurance_IGST_AMOUNT,0)+isnull(Insurance_SGST_AMOUNT,0)+isnull(Insurance_CGST_AMOUNT,0) ) AS NST,    
	   SUM( isnull(Insurance_TAXABLE_VALUE,0)+isnull(Insurance_CGST_AMOUNT,0)+isnull(Insurance_IGST_AMOUNT,0)+isnull(Insurance_SGST_AMOUNT,0)  ) AS NTS,    
       0 AS TQTY
	  FROM  INM01106 B 
	  LEFT JOIN LOCATION C ON b.location_Code  = C.DEPT_ID 
	  LEFT JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  LEFT  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	  
	  WHERE B.CANCELLED = 0  --AND B.CM_MODE = 1  
	  AND B.INV_DT BETWEEN @DFROMDT AND @DTODT AND B.INV_MODE=1  
	  AND b.location_Code  = (CASE WHEN @CDEPTID = '' THEN b.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  and isnull(b.Insurance,0)<>0
	  GROUP BY (CASE WHEN isnull(b.Insurance_GST_PERCENTAGE,0)=0 THEN 'F' WHEN ROUND(isnull(b.Insurance_GST_PERCENTAGE,0),0)=isnull(b.Insurance_GST_PERCENTAGE,0) THEN LTRIM(RTRIM(STR(isnull(b.Insurance_GST_PERCENTAGE,0))))
	 ELSE LTRIM(RTRIM(STR(b.Insurance_GST_PERCENTAGE,7,3))) END),
	 b.INSURANCE_HSN_CODE,CASE WHEN INSURANCE_IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END



	   --END Of other charges
	 
	 
	
	 INSERT INTO @WSLRETURN (PRTORD,HSN_CODE,TRANSACTION_MODE,TYPE,DETAIL,GNS,GST,GTS,RNS, RST, RTS,NNS,NST,NTS)  
	 
	  SELECT 2,a.HSN_CODE,CASE WHEN IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END as TRANSACTION_MODE,
	  'WHOLE SALE','G'+(CASE WHEN A.GST_PERCENTAGE=0 THEN 'F' 
	   WHEN ROUND(A.GST_PERCENTAGE,0)=A.GST_PERCENTAGE
	   THEN LTRIM(RTRIM(STR(A.GST_PERCENTAGE)))
	   ELSE LTRIM(RTRIM(STR(A.GST_PERCENTAGE,7,3))) END) AS DETAILS,
	   SUM(RFNET - (ISNULL(IGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0))+ A.DISCOUNT_AMOUNT) AS GNS, 
	   SUM( ISNULL(IGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)) AS GST, 
	   SUM( RFNET+A.DISCOUNT_AMOUNT) AS GTS,      
	   SUM((ABS(RFNET) - ABS(ISNULL(IGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0))+ABS(INM_DISCOUNT_AMOUNT))) AS RNS,    
	   SUM( ABS(ISNULL(IGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0))) AS RST,    
	   SUM(ABS(RFNET)+INM_DISCOUNT_AMOUNT) AS RTS ,
	   SUM( RFNET - (ISNULL(IGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0))+(CASE WHEN UPDATE_AC=1 THEN INM_DISCOUNT_AMOUNT ELSE 0 END)) AS NNS,    
	   SUM( ISNULL(IGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0) ) AS NST,    
	   SUM( RFNET+(CASE WHEN UPDATE_AC=1 THEN INM_DISCOUNT_AMOUNT ELSE 0 END) ) AS NTS         
	  FROM CND01106 A    
	  JOIN CNM01106 B ON A.CN_ID = B.CN_ID    
	  LEFT JOIN LOCATION C ON b.location_Code  = C.DEPT_ID 
	  LEFT JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  LEFT  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	  
	  WHERE B.CANCELLED = 0  AND B.MODE = 1  
	  AND B.CN_DT BETWEEN @DFROMDT AND @DTODT  
	  AND b.location_Code  = (CASE WHEN @CDEPTID = '' THEN b.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  --AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CB.CM_ID IS NOT NULL)) OR (@BDSM=0))	
	  GROUP BY 'G'+(CASE WHEN A.GST_PERCENTAGE=0 THEN 'F'
	   WHEN ROUND(A.GST_PERCENTAGE,0)=A.GST_PERCENTAGE
	   THEN LTRIM(RTRIM(STR(A.GST_PERCENTAGE)))
	   ELSE LTRIM(RTRIM(STR(A.GST_PERCENTAGE,7,3))) END) ,--TAX_STATUS	
	   a.HSN_CODE,CASE WHEN IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END
	  

	
	
	  
	  SELECT @NCASH1 = ROUND(SUM(ISNULL(B.CASH_AMOUNT,0)),2),   
		@NCC1 = ROUND(SUM(ISNULL(B.CC_AMOUNT,0)),2),   
		@NCHEQUE= 0,    
		@NCNADJ1 = ROUND(SUM(ISNULL(B.CN_AMOUNT,0)),2),   
		--@NCRISS1 = ROUND(SUM( ISNULL(B.CREDIT_AMOUNT,0) ),2),   
		@NCNISS1 = ROUND(SUM( ABS(ISNULL(B.CREDIT_AMOUNT,0))),2),   
		@NCRFISS1= ROUND(SUM(ABS(ISNULL(B.CREDIT_REFUND_AMOUNT,0))),2),       
		@NADVADJ1= ROUND(SUM(ISNULL(B.ADVANCE_AMOUNT_ADJUSTED,0)),2),   
		@NATD1 = ROUND(SUM(ISNULL(A.OTHER_CHARGES,0)),2),      
		@NGVADJ1 = ROUND(SUM(ISNULL(B.OTHER_DOC_AMOUNT,0)),2),     
		@NBANKCH1= ROUND(SUM(ISNULL(B.BANK_CHARGES,0)),2),   
		@NMISC1  = ROUND(SUM(ISNULL(B.MISC_AMOUNT,0)),2),     
		@NRNDOFF1  = ROUND(SUM(ISNULL(A.ROUND_OFF,0)),2),
		@NWALLET1  = ROUND(SUM(ISNULL(B.WALLET,0)),2)     
	  FROM INM01106 A   
	  LEFT OUTER JOIN DBO.VW_BILL_PAYMODE B ON A.INV_ID = B.MEMO_ID AND B.XN_TYPE = 'WSL'  
	  LEFT JOIN DTM C (NOLOCK) ON C.DT_CODE=A.DT_CODE
	  WHERE A.CANCELLED = 0 --AND A.CM_MODE = 1    
	  AND A.INV_DT BETWEEN @DFROMDT AND @DTODT AND (A.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)
	  AND a.location_Code  = (CASE WHEN @CDEPTID = '' THEN a.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(A.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(A.BIN_ID,'000') ELSE @CBINID END)  
	  AND (@CUSERCODE='' OR  A.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  AND INV_MODE=1
	  --AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CB.CM_ID IS NOT NULL)) OR (@BDSM=0)) 
	   
	  IF ABS(@NCASH1) > 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) 
	  VALUES('3', 'CASH',1, @NCASH1)   
	  
	 IF @NCC1 <> 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'CREDIT CARD',1, @NCC1)   
	  
	 IF @NCRISS1 > 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'CREDIT ISSUE',1, @NCRISS)   
	    
	 IF @NCNISS1 > 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'WSL CREDIT ISSUE',1, @NCNISS1)   
	   
	 IF @NCRFISS1 > 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'CRF ISSUE',1, -@NCRFISS1)   
	   
	 IF @NCNADJ1 > 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'C/N ADJUSTED',1, @NCNADJ1)   
	  
	 IF @NGVADJ1 > 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'CHEQUE/DOCUMENTS',1, @NGVADJ1 )   
	  
	 IF @NADVADJ1 > 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'ADVANCE ADJUSTED',1, @NADVADJ1)   
	    
	 IF @NATD1 <> 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'ATD/OTHER CHARGES',1, -@NATD1)   
	    
	 IF @NBANKCH1 <> 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'BANK CHARGES',1, @NBANKCH1)   
	  
	 IF @NMISC1 <> 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'MISC AMOUNT',1, @NMISC1)  
	    
    IF @NRNDOFF1 <> 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'WSL ROUND OFF',1, -@NRNDOFF1)
	  
	IF @NWALLET1 <> 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'WALLET',1, @NWALLET1)        



    SELECT @WSLCREDITISSUES=SUM(RTS) FROM @WSLRETURN
	UPDATE @SSRMODECWSL SET AMOUNT=AMOUNT-@WSLCREDITISSUES WHERE DETAILS<>'WSL ROUND OFF' 

	--UPDATE A SET A.RNS=B.RNS,A.RST=B.RST,A.RTS=B.RTS ,
	-- A.NNS=A.NNS-B.NNS,
	-- A.NST=A.NST-B.NST,
	-- A.NTS=A.NTS-B.NTS
	-- FROM @SSRWSL A JOIN @WSLRETURN B ON A.DETAILS=B.DETAIL
 
	 INSERT INTO @WSLRETURN1 (PRTORD,HSN_CODE,TRANSACTION_MODE,TYPE,DETAIL,GNS,GST,GTS,RNS, RST, RTS,NNS,NST,NTS,TQTY )  
	 
	  SELECT 2,a.HSN_CODE,CASE WHEN IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END as TRANSACTION_MODE,
	  'WHOLE SALE','T'+(CASE WHEN A.GST_PERCENTAGE=0 THEN 'F'+'(WSL)' 
	   WHEN ROUND(A.GST_PERCENTAGE,0)=A.GST_PERCENTAGE
	   THEN LTRIM(RTRIM(STR(A.GST_PERCENTAGE)))+'(WSL)'
	   ELSE LTRIM(RTRIM(STR(A.GST_PERCENTAGE,7,3)))+'(WSL)' END) AS DETAILS,
	    0 AS GNS, 
	    0 AS GST, 
	    0 AS GTS,      
	   --SUM(NET_RATE) AS RNS,    
	   --SUM( ITEM_TAX_AMOUNT) AS RST,    
	   --SUM( NET_RATE+ITEM_TAX_AMOUNT) AS RTS ,
	   --0-SUM(NET_RATE) AS NNS,    
	   --0-SUM( ITEM_TAX_AMOUNT) AS NST,    
	   --0-SUM( NET_RATE+ITEM_TAX_AMOUNT) AS NTS 
	    --SUM(NET_RATE) AS RNS,    
	   --SUM( ITEM_TAX_AMOUNT) AS RST,    
	   --SUM( NET_RATE+ITEM_TAX_AMOUNT) AS RTS ,
	   (-1)*SUM((ABS(RFNET) - ABS(ISNULL(IGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0))+ABS(INM_DISCOUNT_AMOUNT))) AS RNS,    
	   (-1)*SUM( ABS(ISNULL(IGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0))) AS RST,    
	   (-1)*SUM(ABS(RFNET)+INM_DISCOUNT_AMOUNT) AS RTS ,
	   --0-SUM(NET_RATE) AS NNS,    
	   --0-SUM( ITEM_TAX_AMOUNT) AS NST,    
	   --0-SUM( NET_RATE+ITEM_TAX_AMOUNT) AS NTS 
	   (-1)*SUM( RFNET - (ISNULL(IGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0))+(CASE WHEN UPDATE_AC=1 THEN INM_DISCOUNT_AMOUNT ELSE 0 END)) AS NNS,    
	   (-1)*SUM( ISNULL(IGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0) ) AS NST,    
	   (-1)*SUM( RFNET+(CASE WHEN UPDATE_AC=1 THEN INM_DISCOUNT_AMOUNT ELSE 0 END) ) AS NTS,
	   (-1)*SUM(A.QUANTITY ) AS TQTY         
	  FROM CND01106 A    
	  JOIN CNM01106 B ON A.CN_ID = B.CN_ID    
	  LEFT JOIN LOCATION C ON b.location_Code  = C.DEPT_ID 
	  LEFT JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  LEFT  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	  
	  WHERE B.CANCELLED = 0  AND B.MODE = 1  
	  AND B.CN_DT BETWEEN @DFROMDT AND @DTODT  
	  AND b.location_Code  = (CASE WHEN @CDEPTID = '' THEN b.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  --AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CB.CM_ID IS NOT NULL)) OR (@BDSM=0))	
	  GROUP BY 'T'+(CASE WHEN A.GST_PERCENTAGE=0 THEN 'F'+'(WSL)' 
	   WHEN ROUND(A.GST_PERCENTAGE,0)=A.GST_PERCENTAGE
	   THEN LTRIM(RTRIM(STR(A.GST_PERCENTAGE)))+'(WSL)'
	   ELSE LTRIM(RTRIM(STR(A.GST_PERCENTAGE,7,3)))+'(WSL)' END), --TAX_STATUS	
	   a.HSN_CODE,CASE WHEN IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END




	     --wholeSale  other charges---
	    INSERT INTO @SSRWSL (PRTORD,HSN_CODE,TRANSACTION_MODE,TYPE, DETAILs, GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY )         
	   SELECT 2 AS PRTORD,b.OTHER_CHARGES_HSN_CODE,CASE WHEN OTHER_CHARGES_IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END as TRANSACTION_MODE,
	   'WHOLE SALE' AS TYPE,'OHG'+(CASE WHEN isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0)=0 THEN 'F' WHEN ROUND(isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0),0)=isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0) THEN LTRIM(RTRIM(STR(isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0))))
								 ELSE LTRIM(RTRIM(STR(b.OTHER_CHARGES_GST_PERCENTAGE,7,3))) END) AS DETAILS,
	    0 AS GNS, 0 AS GST, 0 AS GTS, 
	    
	  --TAX_STATUS AS DETAILS,    
	   (-1)*SUM(isnull(OTHER_CHARGES_TAXABLE_VALUE,0)) AS GNS,    
	   (-1)*SUM( isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0) )  AS GST,    
	   (-1)*SUM( isnull(OTHER_CHARGES_TAXABLE_VALUE,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0)+isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)  ) AS GTS, 

	   (-1)*SUM(isnull(OTHER_CHARGES_TAXABLE_VALUE,0))AS NNS,    
	   (-1)*SUM( isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0) ) AS NST,    
	   (-1)*SUM( isnull(OTHER_CHARGES_TAXABLE_VALUE,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0)+isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)  ) AS NTS,    
       0 AS TQTY
	  FROM  CNM01106 B 
	  LEFT JOIN LOCATION C ON b.location_Code  = C.DEPT_ID 
	  LEFT JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  LEFT  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	  
	  WHERE B.CANCELLED = 0  AND B.MODE = 1  
	  AND B.CN_DT BETWEEN @DFROMDT AND @DTODT  
	  AND b.location_Code  = (CASE WHEN @CDEPTID = '' THEN b.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  and isnull(b.other_charges,0)<>0
	  GROUP BY (CASE WHEN isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0)=0 THEN 'F' WHEN ROUND(isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0),0)=isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0) THEN LTRIM(RTRIM(STR(isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0))))
	 ELSE LTRIM(RTRIM(STR(b.OTHER_CHARGES_GST_PERCENTAGE,7,3))) END),
	 b.OTHER_CHARGES_HSN_CODE,CASE WHEN OTHER_CHARGES_IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END

	 INSERT INTO @SSRWSL (PRTORD,HSN_CODE,TRANSACTION_MODE, TYPE,DETAILs, GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY )         
	   SELECT 2 AS PRTORD,b.FREIGHT_HSN_CODE,CASE WHEN FREIGHT_IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END,
	   
	   'WHOLE SALE' AS TYPE,'FREIGHT'+(CASE WHEN isnull(b.FREIGHT_GST_PERCENTAGE,0)=0 THEN 'F' WHEN ROUND(isnull(b.FREIGHT_GST_PERCENTAGE,0),0)=isnull(b.FREIGHT_GST_PERCENTAGE,0) THEN LTRIM(RTRIM(STR(isnull(b.FREIGHT_GST_PERCENTAGE,0))))
								 ELSE LTRIM(RTRIM(STR(b.FREIGHT_GST_PERCENTAGE,7,3))) END) AS DETAILS,
	  --TAX_STATUS AS DETAILS,    

	   0 AS GNS,    0 AS GST,  0 AS GTS, 
	   (-1)*SUM(isnull(FREIGHT_TAXABLE_VALUE,0)) AS GNS,    
	  (-1)* SUM( isnull(FREIGHT_IGST_AMOUNT,0)+isnull(FREIGHT_SGST_AMOUNT,0)+isnull(FREIGHT_CGST_AMOUNT,0) ) AS GST,    
	   (-1)*SUM( isnull(FREIGHT_TAXABLE_VALUE,0)+isnull(FREIGHT_CGST_AMOUNT,0)+isnull(FREIGHT_IGST_AMOUNT,0)+isnull(FREIGHT_SGST_AMOUNT,0)  ) AS GTS, 
	      
	   (-1)*SUM(isnull(FREIGHT_TAXABLE_VALUE,0)) AS NNS,    
	   (-1)*SUM( isnull(FREIGHT_IGST_AMOUNT,0)+isnull(FREIGHT_SGST_AMOUNT,0)+isnull(FREIGHT_CGST_AMOUNT,0) ) AS NST,    
	  (-1)* SUM( isnull(FREIGHT_TAXABLE_VALUE,0)+isnull(FREIGHT_CGST_AMOUNT,0)+isnull(FREIGHT_IGST_AMOUNT,0)+isnull(FREIGHT_SGST_AMOUNT,0)  ) AS NTS,    
       0 AS TQTY
	  FROM  CNM01106 B 
	  LEFT JOIN LOCATION C ON b.location_Code  = C.DEPT_ID 
	  LEFT JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  LEFT  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	  
	  WHERE B.CANCELLED = 0  AND B.MODE = 1  
	  AND B.CN_DT BETWEEN @DFROMDT AND @DTODT  
	  AND b.location_Code  = (CASE WHEN @CDEPTID = '' THEN b.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  and isnull(b.FREIGHT,0)<>0
	  GROUP BY (CASE WHEN isnull(b.FREIGHT_GST_PERCENTAGE,0)=0 THEN 'F' WHEN ROUND(isnull(b.FREIGHT_GST_PERCENTAGE,0),0)=isnull(b.FREIGHT_GST_PERCENTAGE,0) THEN LTRIM(RTRIM(STR(isnull(b.FREIGHT_GST_PERCENTAGE,0))))
	 ELSE LTRIM(RTRIM(STR(b.FREIGHT_GST_PERCENTAGE,7,3))) END),
	 b.FREIGHT_HSN_CODE,CASE WHEN FREIGHT_IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END


	
	  INSERT INTO @SSRWSL (PRTORD,HSN_CODE,TRANSACTION_MODE,TYPE, DETAILs, GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY )         
	   SELECT 2 AS PRTORD,b.Insurance_HSN_CODE,CASE WHEN Insurance_IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END,
	   'WHOLE SALE' AS TYPE,'INS'+(CASE WHEN isnull(b.Insurance_GST_PERCENTAGE,0)=0 THEN 'F' WHEN ROUND(isnull(b.Insurance_GST_PERCENTAGE,0),0)=isnull(b.Insurance_GST_PERCENTAGE,0) THEN LTRIM(RTRIM(STR(isnull(b.Insurance_GST_PERCENTAGE,0))))
								 ELSE LTRIM(RTRIM(STR(b.Insurance_GST_PERCENTAGE,7,3))) END) AS DETAILS,
	  --TAX_STATUS AS DETAILS,   
	   0 AS GNS,    0 AS GST,    0 AS GTS, 
	    
       (-1)*SUM(isnull(Insurance_TAXABLE_VALUE,0)) AS GNS,    
	   (-1)*SUM( isnull(Insurance_IGST_AMOUNT,0)+isnull(Insurance_SGST_AMOUNT,0)+isnull(Insurance_CGST_AMOUNT,0) ) AS GST,    
	   (-1)*SUM( isnull(Insurance_TAXABLE_VALUE,0)+isnull(Insurance_CGST_AMOUNT,0)+isnull(Insurance_IGST_AMOUNT,0)+isnull(Insurance_SGST_AMOUNT,0)  ) AS GTS, 
	 
	   (-1)*SUM(isnull(Insurance_TAXABLE_VALUE,0))AS NNS,    
	   (-1)*SUM( isnull(Insurance_IGST_AMOUNT,0)+isnull(Insurance_SGST_AMOUNT,0)+isnull(Insurance_CGST_AMOUNT,0) ) AS NST,    
	   (-1)*SUM( isnull(Insurance_TAXABLE_VALUE,0)+isnull(Insurance_CGST_AMOUNT,0)+isnull(Insurance_IGST_AMOUNT,0)+isnull(Insurance_SGST_AMOUNT,0)  ) AS NTS,    
       0 AS TQTY
	  FROM  CNM01106 B 
	  LEFT JOIN LOCATION C ON b.location_Code  = C.DEPT_ID 
	  LEFT JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  LEFT  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	  
	  WHERE B.CANCELLED = 0  AND B.MODE = 1  
	  AND B.CN_DT BETWEEN @DFROMDT AND @DTODT  
	  AND b.location_Code  = (CASE WHEN @CDEPTID = '' THEN b.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  and isnull(b.Insurance,0)<>0
	  GROUP BY (CASE WHEN isnull(b.Insurance_GST_PERCENTAGE,0)=0 THEN 'F' WHEN ROUND(isnull(b.Insurance_GST_PERCENTAGE,0),0)=isnull(b.Insurance_GST_PERCENTAGE,0) THEN LTRIM(RTRIM(STR(isnull(b.Insurance_GST_PERCENTAGE,0))))
	 ELSE LTRIM(RTRIM(STR(b.Insurance_GST_PERCENTAGE,7,3))) END),
	 b.Insurance_HSN_CODE,CASE WHEN Insurance_IGST_AMOUNT>0 THEN 'OUTSTATION' ELSE 'LOCAL' END


	

	--------------------------------------------------------------
   IF @NSUMMARYTYPE=1
   GOTO LBL1
   ELSE IF @NSUMMARYTYPE=2
   GOTO LBL2
   ELSE IF @NSUMMARYTYPE=3
   GOTO LBL3
   
  
	
	LBL1:     
 
	 SELECT  PRTORD,TRANSACTION_MODE,HSN_CODE, DETAILS,[GNS],[GST],[GTS],[RNS],[RST],[RTS],[NNS],[NST],[NTS] 
	 FROM @SSRC  
	 (
		SELECT * FROM @SSRMODEC 
		  
		--UNION --all payment stored in misc
		--SELECT '2' AS PRTORD,C.PAYMODE_GRP_NAME AS DETAILS,SUM(A.AMOUNT) AS AMOUNT
		--, 0 AS ROUND_OFF,1 AS SUBDETAILS,0 AS TOTAMOUNT, 0 AS MINMAX
		--FROM CMM01106 CMM (NOLOCK) 
		--JOIN PAYMODE_XN_DET A (NOLOCK) ON CMM.CM_ID = A.MEMO_ID 
		--JOIN PAYMODE_MST	B (NOLOCK) ON A.PAYMODE_CODE = B.PAYMODE_CODE
		--JOIN PAYMODE_GRP_MST C (NOLOCK) ON B.PAYMODE_GRP_CODE = C.PAYMODE_GRP_CODE
		--WHERE XN_TYPE = 'SLS' AND B.PAYMODE_GRP_CODE NOT IN
		--('0000001','0000002','0000003','0000004','0000000','PYTGW01')
		--AND CMM.CANCELLED = 0     
		--AND CMM.CM_DT BETWEEN @DFROMDT AND @DTODT AND (CMM.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)
		--AND LEFT(CMM.CM_NO,2) = (CASE WHEN @CDEPTID = '' THEN LEFT(CMM.CM_NO,2) ELSE @CDEPTID END)  
		--AND ISNULL(CMM.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(CMM.BIN_ID,'000') ELSE @CBINID END)  
		--AND (@CUSERCODE='' OR  CMM.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
		----AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CB.CM_ID IS NOT NULL)) OR (@BDSM=0))		
		--GROUP BY C.PAYMODE_GRP_NAME 
	  ) 
	

	
	  
	--SELECT * INTO SSRC FROM @SSRC

	 SELECT COUNT(*) AS [TOTAL_PACK_SLIPS],
		ROUND(SUM(NET_AMOUNT),2) AS [TOTAL_AMOUNT],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')='' AND CANCELLED=1  THEN 1 ELSE 0 END),2) AS [CANCELLED_PACK_SLIPS],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')='' AND CANCELLED=1  THEN NET_AMOUNT ELSE 0 END),2) AS [CANCELLED_PACK_SLIPS_AMOUNT],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')='' AND CANCELLED=0  THEN 1 ELSE 0 END),2) AS [PENDING_PACK_SLIPS],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')='' AND CANCELLED=0  THEN NET_AMOUNT ELSE 0 END),2) AS [PENDING_PACK_SLIPS_AMOUNT],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')<>'' AND CANCELLED=0 THEN 1 ELSE 0 END),2) AS [BILLED_PACK_SLIPS],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')<>'' AND CANCELLED=0 THEN NET_AMOUNT ELSE 0 END),2) AS [BILLED_PACK_SLIPS_AMOUNT]
	 FROM RPS_MST A (NOLOCK)
	 WHERE A.CM_DT BETWEEN @DFROMDT AND @DTODT
	 AND a.location_Code  =(CASE WHEN @CDEPTID='' THEN a.location_Code  ELSE @CDEPTID END)
	 AND (@CUSERCODE='' OR  A.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
		
	SELECT CONVERT(DATETIME,'') AS [CM_DT], MIN(CM_NO) AS [FROM_BILL],MAX(CM_NO) AS [TO_BILL]  
	FROM CMM01106 CM
	WHERE CM.CANCELLED = 0 AND  CM_DT BETWEEN @DFROMDT AND @DTODT  
	AND cm.location_Code  = (CASE WHEN @CDEPTID = '' THEN cm.location_Code  ELSE @CDEPTID END)  
	AND ISNULL(BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(BIN_ID,'000') ELSE @CBINID END)  
	AND (MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)
	AND (@CUSERCODE='' OR  CM.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS))
		  --AND (CM.CM_DT>@FREEZE_DT AND @bALLOW_VIEW=0) 
	--AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CB.CM_ID IS NOT NULL)) OR (@BDSM=0))		
	GROUP BY LEFT(CM_NO,5)               
	ORDER BY CM_DT ASC
		
	 SELECT ARC_TYPE,(CASE WHEN ARC_TYPE=2 THEN 'PAYMENT' ELSE (CASE WHEN ARCT=1 THEN 'O/S RECEIPT' WHEN ARCT=2 THEN 'ADVANCE' ELSE 'FEE/OTHER CHARGES' END) END) AS RECEIPT_MODE,
	 ISNULL(SUM(NET_AMOUNT * (CASE WHEN ARC_TYPE=2 THEN -1 ELSE 1 END)),0) AS AMOUNT 
	 FROM ARC01106 
	 WHERE CANCELLED=0 --AND ARCT IN (1,2,3) 
	 AND ADV_REC_DT BETWEEN @DFROMDT AND @DTODT   
	 AND location_Code  =(CASE WHEN @CDEPTID='' THEN location_Code  ELSE @CDEPTID END)  
	 AND ISNULL(BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(BIN_ID,'000') ELSE @CBINID END)  
	 AND (@CUSERCODE='' OR  USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	 GROUP BY ARC_TYPE,(CASE WHEN ARC_TYPE=2 THEN 'PAYMENT' ELSE (CASE WHEN ARCT=1 THEN 'O/S RECEIPT' WHEN ARCT=2 THEN 'ADVANCE' ELSE 'FEE/OTHER CHARGES' END) END)

	 SELECT ISNULL(@CERRMSGOUT,'') AS ALERT_MESSAGE
	 
	 GOTO ENDPROC
	 
LBL2:
       
	 DELETE B 
	 FROM @SSRWSL A JOIN @WSLRETURN1 B ON A.DETAILS=B.DETAIL
	 
	 SELECT PRTORD,TRANSACTION_MODE,HSN_CODE,TYPE, DETAILS,
	 SUM(ISNULL(GNS,0)) [GNS],
	 SUM(ISNULL(GST,0)) [GST],
	 SUM(ISNULL(GTS,0)) [GTS],
	 SUM(ISNULL(RNS,0)) [RNS],
	 SUM(ISNULL(RST,0)) [RST],
	 SUM(ISNULL(RTS,0)) [RTS],
	 SUM(ISNULL(NNS,0)) [NNS],
	 SUM(ISNULL(NST,0)) [NST],
	 SUM(ISNULL(NTS,0)) [NTS] 
	 FROM @SSRWSL
	 GROUP BY PRTORD,TYPE, DETAILS,TRANSACTION_MODE,HSN_CODE
	 UNION ALL
	 SELECT PRTORD,TRANSACTION_MODE,HSN_CODE,TYPE, DETAIL,[GNS],[GST],[GTS],[RNS],[RST],[RTS],[NNS],[NST],[NTS] 
	 FROM @WSLRETURN1
	 order by TRANSACTION_MODE,HSN_CODE
	 
	 SELECT * FROM @SSRMODECWSL
	 
GOTO ENDPROC

	 
LBL3:
     DELETE B 
	 FROM @SSRWSL A JOIN @WSLRETURN1 B ON A.DETAILS=B.DETAIL
	 
	
	
	 SELECT PRTORD,TRANSACTION_MODE,HSN_CODE, DETAILS,[GNS],[GST],[GTS],[RNS],[RST],[RTS],[NNS],[NST],[NTS],
	 CASE WHEN ISNUMERIC(SUBSTRING(DETAILS,2,LEN(DETAILS)))=0 THEN 0 ELSE 
	 CONVERT(NUMERIC(14,3),SUBSTRING(DETAILS,2,LEN(DETAILS))) END AS ORD,
	 [TQTY]
	 FROM @SSRC  
	 UNION ALL
	 SELECT PRTORD,TRANSACTION_MODE,HSN_CODE, DETAILS,
	 SUM(ISNULL(GNS,0)) [GNS],
	 SUM(ISNULL(GST,0)) [GST],
	 SUM(ISNULL(GTS,0)) [GTS],
	 SUM(ISNULL(RNS,0)) [RNS],
	 SUM(ISNULL(RST,0))[RST],
	 SUM(ISNULL(RTS,0)) [RTS],
	 SUM(ISNULL(NNS,0)) [NNS],
	 SUM(ISNULL(NST,0)) [NST],
	 SUM(ISNULL(NTS,0)) [NTS] ,
	 CASE WHEN ISNUMERIC(SUBSTRING(DETAILS,2,LEN(DETAILS)))=0 THEN 0 ELSE 
	 CONVERT(NUMERIC(14,3),SUBSTRING(DETAILS,2,LEN(DETAILS))) END AS ORD,
	 SUM([TQTY]) AS [TQTY]
	 FROM @SSRWSL
	 GROUP BY PRTORD,TRANSACTION_MODE,HSN_CODE, DETAILS,CASE WHEN ISNUMERIC(SUBSTRING(DETAILS,2,LEN(DETAILS)))=0 THEN 0 ELSE 
	 CONVERT(NUMERIC(14,3),SUBSTRING(DETAILS,2,LEN(DETAILS))) END
	 

	 UNION ALL
	 SELECT PRTORD,TRANSACTION_MODE,HSN_CODE, DETAIL,[GNS],[GST],[GTS],[RNS],[RST],[RTS],[NNS],[NST],[NTS] ,
	 CASE WHEN ISNUMERIC(SUBSTRING(DETAIL,2,LEN(DETAIL)))=0 THEN 0 ELSE 
	 CONVERT(NUMERIC(14,3),SUBSTRING(DETAIL,2,LEN(DETAIL))) END AS ORD,
	 [TQTY]
	 FROM @WSLRETURN1
	 ORDER BY PRTORD,ORD ,TRANSACTION_MODE ;
	
	 (
		SELECT * FROM @SSRMODEC 
		
		--UNION 
		--SELECT '2' AS PRTORD,C.PAYMODE_GRP_NAME AS DETAILS,SUM(A.AMOUNT) AS AMOUNT
		--, 0 AS ROUND_OFF,1 AS SUBDETAILS,0 AS TOTAMOUNT, 0 AS MINMAX
		--FROM CMM01106 CMM (NOLOCK) 
		--JOIN PAYMODE_XN_DET A (NOLOCK) ON CMM.CM_ID = A.MEMO_ID 
		--JOIN PAYMODE_MST	B (NOLOCK) ON A.PAYMODE_CODE = B.PAYMODE_CODE
		--JOIN PAYMODE_GRP_MST C (NOLOCK) ON B.PAYMODE_GRP_CODE = C.PAYMODE_GRP_CODE
		--WHERE XN_TYPE = 'SLS' AND B.PAYMODE_GRP_CODE NOT IN
		--('0000001','0000002','0000003','0000004','0000000','PYTGW01')
		--AND CMM.CANCELLED = 0     
		--AND CMM.CM_DT BETWEEN @DFROMDT AND @DTODT AND (CMM.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)
		--AND LEFT(CMM.CM_NO,2) = (CASE WHEN @CDEPTID = '' THEN LEFT(CMM.CM_NO,2) ELSE @CDEPTID END)  
		--AND ISNULL(CMM.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(CMM.BIN_ID,'000') ELSE @CBINID END)  
		--AND (@CUSERCODE='' OR  CMM.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
		----AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CB.CM_ID IS NOT NULL)) OR (@BDSM=0))		
		--GROUP BY C.PAYMODE_GRP_NAME 
		
		UNION 
		SELECT * FROM @SSRMODECWSL
	  )
	 
	
	 
	 SELECT COUNT(*) AS [TOTAL_PACK_SLIPS],
		ROUND(SUM(NET_AMOUNT),2) AS [TOTAL_AMOUNT],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')='' AND CANCELLED=1  THEN 1 ELSE 0 END),2) AS [CANCELLED_PACK_SLIPS],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')='' AND CANCELLED=1  THEN NET_AMOUNT ELSE 0 END),2) AS [CANCELLED_PACK_SLIPS_AMOUNT],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')='' AND CANCELLED=0  THEN 1 ELSE 0 END),2) AS [PENDING_PACK_SLIPS],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')='' AND CANCELLED=0  THEN NET_AMOUNT ELSE 0 END),2) AS [PENDING_PACK_SLIPS_AMOUNT],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')<>'' AND CANCELLED=0 THEN 1 ELSE 0 END),2) AS [BILLED_PACK_SLIPS],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')<>'' AND CANCELLED=0 THEN NET_AMOUNT ELSE 0 END),2) AS [BILLED_PACK_SLIPS_AMOUNT]
	 FROM RPS_MST A (NOLOCK)
	 WHERE A.CM_DT BETWEEN @DFROMDT AND @DTODT
	 AND location_Code  =(CASE WHEN @CDEPTID='' THEN a.location_Code  ELSE @CDEPTID END)
	 AND (@CUSERCODE='' OR  A.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
		
	SELECT CONVERT(DATETIME,'') AS [CM_DT], MIN(CM_NO) AS [FROM_BILL],MAX(CM_NO) AS [TO_BILL]  
	FROM CMM01106 CM
	WHERE CM.CANCELLED = 0 AND  CM_DT BETWEEN @DFROMDT AND @DTODT  
	AND cm.location_Code  = (CASE WHEN @CDEPTID = '' THEN cm.location_Code  ELSE @CDEPTID END)  
	AND ISNULL(BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(BIN_ID,'000') ELSE @CBINID END)  
	AND (MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)
	AND (@CUSERCODE='' OR  CM.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
		  --AND (CM.CM_DT>@FREEZE_DT AND @bALLOW_VIEW=0) 
	--AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CB.CM_ID IS NOT NULL)) OR (@BDSM=0))		
	GROUP BY LEFT(CM_NO,5)               
	ORDER BY CM_DT ASC
		
	 SELECT ARC_TYPE,(CASE WHEN ARC_TYPE=2 THEN 'PAYMENT' ELSE (CASE WHEN ARCT=1 THEN 'O/S RECEIPT' WHEN ARCT=2 THEN 'ADVANCE' ELSE 'FEE/OTHER CHARGES' END) END) AS RECEIPT_MODE,
	 ISNULL(SUM(NET_AMOUNT * (CASE WHEN ARC_TYPE=2 THEN -1 ELSE 1 END)),0) AS AMOUNT 
	 FROM ARC01106 
	 WHERE CANCELLED=0 --AND ARCT IN (1,2,3) 
	 AND ADV_REC_DT BETWEEN @DFROMDT AND @DTODT   
	 AND location_Code  =(CASE WHEN @CDEPTID='' THEN location_Code  ELSE @CDEPTID END)  
	 AND ISNULL(BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(BIN_ID,'000') ELSE @CBINID END)  
	 AND (@CUSERCODE='' OR  USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	 GROUP BY ARC_TYPE,(CASE WHEN ARC_TYPE=2 THEN 'PAYMENT' ELSE (CASE WHEN ARCT=1 THEN 'O/S RECEIPT' WHEN ARCT=2 THEN 'ADVANCE' ELSE 'FEE/OTHER CHARGES' END) END)

	 SELECT ISNULL(@CERRMSGOUT,'') AS ALERT_MESSAGE
	 GOTO ENDPROC
	 
ENDPROC:
	 
END    
--******************************************* END OF PROCEDURE SP_DSR_SALESSUMMARY

