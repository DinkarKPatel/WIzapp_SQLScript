CREATE PROCEDURE SP_MERGE_MIRROR_ATD_DATA
(
	@CMEMOID VARCHAR(50)
   ,@CLOCID VARCHAR(3)
   ,@CSOURCEDB VARCHAR(200)
   ,@CMERGEDB VARCHAR(200)
   ,@BMSTINSERTONLY BIT
   ,@CERRMSG VARCHAR(1000) OUTPUT
)
--WITH ENCRYPTION
AS
SET NOCOUNT ON
BEGIN
	/*
		SP_MERGE_MIRROR_ATD_DATA_208_2014_02_04 : 
		THIS PROCEDURE WILL MERGE DATA FROM TEMPORARY TABLE TO ACTUAL TABLE.
		TABLE NAMES AND ITS MERGING ORDER WILL BE FIXED AND WILL BE DEFINED HERE.	
	*/
DECLARE @CSTEP VARCHAR(100),@DTSQL NVARCHAR(MAX),@NMERGE_ORDER NUMERIC(5)
	   ,@CTABLENAME VARCHAR(200),@CTABLE_SUFFIX VARCHAR(50),@CKEYFIELD VARCHAR(200),@CDEL_ID VARCHAR(50),@CTMP_TABLENAME VARCHAR(200),@LINSERTONLY VARCHAR(1)
	   ,@CFILTERCONDITION VARCHAR(200),@LUPDATEONLY VARCHAR(1),@BALWAYSUPDATE VARCHAR(1),@FDEL CHAR(1)
	   ,@CERRMSGOUT VARCHAR(1000),@CTABLESSTR VARCHAR(MAX),@CCMD NVARCHAR(MAX)
	   
BEGIN TRY
SET @CSTEP=10
	SET @CTABLE_SUFFIX=REPLACE(@CMEMOID,'-','_')
BEGIN TRANSACTION 
	SET @CSTEP=20
	SET @CTABLENAME='EMP_WPAYATT'
	SET @CTMP_TABLENAME='TMP_ATD_'+@CTABLENAME+'_'+LTRIM(RTRIM(@CTABLE_SUFFIX))
	SET @CKEYFIELD='ROW_ID'
	SET @CSTEP=50
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=0,@CFILTERCONDITION='',@LUPDATEONLY=0
							  ,@BALWAYSUPDATE=1 
	
			 				
							  
	
	SET @CSTEP=100
	SET @CTABLENAME='EMP_MST'
	SET @CTMP_TABLENAME='TMP_ATD_'+@CTABLENAME+'_'+LTRIM(RTRIM(@CTABLE_SUFFIX))
	SET @CKEYFIELD='EMP_ID'
	SET @CSTEP=150
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BMSTINSERTONLY,@CFILTERCONDITION='',@LUPDATEONLY=0
							  ,@BALWAYSUPDATE=1 
	
	---SCRIPT TO UPDATE EMP_ATTENDANCE TABLE
	
	-- DELETING BLANK ENTRIES
	SET @CTABLENAME='EMP_WPAYATT'
	SET @CTMP_TABLENAME='TMP_ATD_'+@CTABLENAME+'_'+LTRIM(RTRIM(@CTABLE_SUFFIX))
	SET @CSTEP=200
	SET @CCMD = N'DELETE A FROM EMP_ATTENDANCE A WITH (ROWLOCK) JOIN '+@CSOURCEDB+'['+@CTMP_TABLENAME+'] B (NOLOCK) ON
					A.EMP_ID = B.EMP_ID AND CONVERT(VARCHAR,A.ATTENDANCE_DT,110)=CONVERT(VARCHAR,B.IST_TIME,110)
					WHERE A.TIME_IN = '''' AND A.TIME_OUT='''''
	
	PRINT @CCMD 
	EXEC SP_EXECUTESQL @CCMD
	
	-- CHECKING IF ANY ROW EXISTS WITH SAME DATE AND TIME OUT IS BLANK 				
	SET @CSTEP=300
	SET @CCMD = N'UPDATE A 
				SET A.TIME_OUT = CONVERT(DATETIME,CONVERT(VARCHAR,B.IST_TIME,108)), 
				 A.EMPIMAGE_OUT=B.EMPIMAGE
				FROM EMP_ATTENDANCE A  WITH (ROWLOCK) JOIN '+@CSOURCEDB+'['+@CTMP_TABLENAME+'] B (NOLOCK)
				ON A.EMP_ID = B.EMP_ID AND CONVERT(VARCHAR,A.ATTENDANCE_DT,110)=CONVERT(VARCHAR,B.IST_TIME,110)
				WHERE A.TIME_OUT='''''
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD
	
	
	---INSERT NEW RECORD IN EMP_ATTENDANCE
	SET @CSTEP=400
	SET @CCMD = 'SELECT 
				CONVERT(VARCHAR(10),IST_TIME,111) AS ATTENDANCE_DT,
				A.EMP_ID, CONVERT(DATETIME, CONVERT(VARCHAR(20),IST_TIME,108)) AS TIME_IN, '''' AS TIME_OUT,
				2 AS  ENTRY_MODE,NEWID() AS ROW_ID,A.SHIFT_ID,D.SHIFT_TIME_IN,D.SHIFT_TIME_OUT,D.HALFDAY_CUTOFF,
				A.EMPIMAGE,A.LOCATION_ID,'''' AS  EMPIMAGE_OUT,0 AS MODIFIED,A.LOG_ABSENT_STATUS,GETDATE() AS LAST_UPDATE,
				'''' AS ATT_REMARKS, A.REMARKS, '''' AS REMARKS_OUT, 0 AS SYNC 
				FROM '+@CSOURCEDB+'['+@CTMP_TABLENAME+'] A LEFT OUTER JOIN  EMP_ATTENDANCE B ON A.EMP_ID = B.EMP_ID AND
				CONVERT(VARCHAR,B.ATTENDANCE_DT,110)=CONVERT(VARCHAR,A.IST_TIME,110)
				JOIN EMP_MST C ON A.EMP_ID = C.EMP_ID
				JOIN EMP_SHIFTS D ON D.SHIFT_ID = A.SHIFT_ID	
				WHERE B.EMP_ID IS NULL' 			
    
    PRINT @CCMD
    
     SET @CSTEP=430
     INSERT EMP_ATTENDANCE( ATTENDANCE_DT, EMP_ID, TIME_IN, TIME_OUT, ENTRY_MODE, ROW_ID, SHIFT_ID,
					 SHIFT_TIME_IN, SHIFT_TIME_OUT, HALFDAY_CUTOFF, EMPIMAGE, DEPT_ID, EMPIMAGE_OUT, 
					 MODIFIED, LOG_ABSENT_STATUS, LAST_UPDATE, ATT_REMARKS, REMARKS_IN, REMARKS_OUT, SYNC ) 
     EXEC SP_EXECUTESQL 	@CCMD	
		
     SET @CSTEP=450

     SET @CTABLESSTR='EMP_WPAYATT,EMP_MST,XNSTABLELIST'

    EXEC SP3S_DROPTEMPTABLES_MIRRORDATA
    @CXNTYPE='ATD',
    @CTABLESUFFIX=@CTABLE_SUFFIX,
    @CTABLESSTR=@CTABLESSTR
	
END TRY
BEGIN CATCH
	SET @CERRMSG='P:SP_MERGE_MIRROR_ATD_DATA, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
END CATCH
EXIT_PROC:
	IF ISNULL(@CERRMSG,'')='' AND @@TRANCOUNT>0
	BEGIN
		COMMIT
	END
	ELSE IF ISNULL(@CERRMSG,'')<>'' AND @@TRANCOUNT>0
		ROLLBACK
END	
---END OF PROCEDURE - SP_MERGE_MIRROR_ATD_DATA
