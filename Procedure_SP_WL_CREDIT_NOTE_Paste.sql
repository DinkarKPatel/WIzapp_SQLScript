create PROCEDURE SP_WL_CREDIT_NOTE_Paste --(LocId 3 digit change by Sanjay:06-11-2024)         
(
 @CWHERE  VARCHAR(500) = '',   
 @NNAVMODE NUMERIC(1,0) = 0,
 @NSPID varchar(50)=''
)
AS         
begin
       

	   ;WITH CTE_PUR AS
	   (
	   SELECT a.ROW_ID ,A.PRODUCT_CODE ,B.PRODUCT_CODE INV_PRODUT_CODE,A.QUANTITY,b.row_id as Inv_row_id,
	          SR=ROW_NUMBER() OVER(PARTITION BY A.ROW_ID ORDER BY C.INV_DT DESC,  C.INV_ID DESC)
	   FROM WSL_ITEM_DETAILS A (NOLOCK) 
	   JOIN IND01106 B (NOLOCK)  ON A.PRODUCT_CODE =LEFT(B.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',B.PRODUCT_CODE)-1,-1),LEN(B.PRODUCT_CODE )))
	   JOIN INM01106 C ON B.INV_ID =C.INV_ID 
	   WHERE c.INV_MODE=@NNAVMODE AND c.AC_CODE =@CWHERE AND C.CANCELLED =0
	   AND CHARINDEX('@',A.PRODUCT_CODE )=0 and a.sp_id=@NSPID
	   union all
	    SELECT a.ROW_ID ,A.PRODUCT_CODE ,B.PRODUCT_CODE INV_PRODUT_CODE,A.QUANTITY,b.row_id as Inv_row_id,
	          SR=ROW_NUMBER() OVER(PARTITION BY A.ROW_ID ORDER BY C.INV_DT DESC,  C.INV_ID DESC)
	   FROM WSL_ITEM_DETAILS A (NOLOCK) 
	   JOIN IND01106 B (NOLOCK)  ON A.PRODUCT_CODE =b.PRODUCT_CODE 
	   JOIN INM01106 C ON B.INV_ID =C.INV_ID 
	   WHERE c.INV_MODE=@NNAVMODE AND c.AC_CODE =@CWHERE AND C.CANCELLED =0
	   AND CHARINDEX('@',A.PRODUCT_CODE )<>0 and a.sp_id=@NSPID
	   )



	   select a.PRODUCT_CODE ,a.quantity,b.INV_PRODUT_CODE ,Inv_row_id ,a.row_id
	          into #tmpinvDetails
	   from WSL_ITEM_DETAILS A
	   left join CTE_PUR b on a.row_id=b.row_id and b.sr=1
	   where a.sp_id=@NSPID


 
     DECLARE @CRATEPICKINGMODE VARCHAR(4),@BPARTYRATEFOUND BIT,@CONFIG_VALUE INT 
	 
	 SET @BPARTYRATEFOUND=0
	 SELECT TOP 1 @CRATEPICKINGMODE=VALUE FROM CONFIG WHERE CONFIG_OPTION='RATE_PICKING_MODE'
	 
	 SET @CRATEPICKINGMODE=ISNULL(@CRATEPICKINGMODE,'1')
	 
	 IF OBJECT_ID('TEMPDB..#TMPSOLDDETAILS','U') IS NOT NULL
		DROP TABLE #TMPSOLDDETAILS
		
	 SELECT @CONFIG_VALUE= ISNULL(VALUE,0) FROM CONFIG WHERE CONFIG_OPTION ='DO_NOT_PICK_BILL_DISCOUNT'  
	 
	 SELECT IND.*,SKU.*	,cast('' as varchar(1000)) as ErrMsg
	 INTO #TMPSOLDDETAILS  FROM              
	 (SELECT tmp.PRODUCT_CODE AS PC, PM.INV_ID,PM.INV_DT,PM.AC_CODE,PD.MRP, 
	 CONVERT(VARCHAR, PM.INV_DT, 105) AS INV_DATE, PM.INV_NO,L.AC_NAME AS DEBTOR,                     
	 PD.ITEM_TAX_AMOUNT, PD.ITEM_FORM_ID,                   
	 PD.ITEM_TAX_PERCENTAGE, --PMT.QUANTITY_IN_STOCK,                  
	 PD.RATE AS GROSS_RATE ,
	 EMP.EMP_NAME, EMP1.EMP_NAME AS EMP_NAME1,              
	 EMP2.EMP_NAME AS EMP_NAME2,PD.EMP_CODE,PD.EMP_CODE1,            
	 PD.EMP_CODE2,              
	 '' AS CITY,              
	 PD.DISCOUNT_PERCENTAGE AS IND_DISCOUNT_PERCENTAGE,    
	 CAST(PD.DISCOUNT_AMOUNT/(CASE WHEN PD.INVOICE_QUANTITY=0 THEN 1 ELSE PD.INVOICE_QUANTITY END) AS NUMERIC(14,2)) AS IND_DISCOUNT_AMOUNT,           
	 CAST( 0  AS BIT) AS BILLCHECK,
	 PD.QUANTITY as wsl_QUANTITY ,          
	 I.FORM_NAME,CAST(1 AS INT) AS STK ,          
	 PD.INVOICE_QUANTITY as wsl_INVOICE_QUANTITY ,          
	 PD.SCHEME_QUANTITY as wsl_SCHEME_QUANTITY ,   	
	 PM.BILL_LEVEL_TAX_METHOD ,        
	 PD.NET_RATE AS IND_RATE,     
	 (CASE WHEN  PM.DISCOUNT_PERCENTAGE=0 OR ISNULL(@CONFIG_VALUE,0)=1 THEN PD.NET_RATE ELSE (PD.NET_RATE-(PD.NET_RATE*PM.DISCOUNT_PERCENTAGE/100)) END) 
	  AS INV_NET_RATE,   
	 
	  	 (CASE WHEN ISNULL(@CONFIG_VALUE,0)=1 THEN 0 ELSE PM.DISCOUNT_PERCENTAGE END) AS INM_DISCOUNT_PERCENTAGE,  
		 	 (CASE WHEN ISNULL(@CONFIG_VALUE,0)=1 THEN 0 ELSE (PD.INMDISCOUNTAMOUNT)/PD.INVOICE_QUANTITY  END) AS INM_DISCOUNT_AMOUNT,  

	 (CASE WHEN PM.BILL_LEVEL_TAX_METHOD = 1 THEN 'EXCLUSIVE' ELSE 'INCLUSIVE' END) AS TAX_METHOD_NAME ,PD.ROW_ID ,
	 PD.ORDER_NO,PD.ONLINE_BILL_REF_NO ,isnull(PD.BIN_ID,'000') as BIN_ID,bin.bin_name ,
	 tmp.row_id as tmpRow_id , ISNULL (PD.RATE,0) AS RATE ,
	 PD.DISCOUNT_PERCENTAGE DISCOUNT_PERCENTAGE ,
	 CAST(0 as numeric(14,2)) DISCOUNT_AMOUNT ,
	 CAST(0 as numeric(14,2)) NET_RATE 	                
	 FROM IND01106 PD (NOLOCK) 
	 join #tmpinvDetails tmp on pd.ROW_ID =tmp.Inv_row_id and pd.PRODUCT_CODE=tmp.INV_PRODUT_CODE
	 JOIN INM01106 PM (NOLOCK) ON PD.INV_ID = PM.INV_ID               
	 LEFT JOIN FORM I (NOLOCK) ON PD.ITEM_FORM_ID = I.FORM_ID     
	 JOIN LM01106 L (NOLOCK) ON PM.AC_CODE = L.AC_CODE                      
	 LEFT OUTER JOIN EMPLOYEE EMP (NOLOCK)ON PD.EMP_CODE= EMP.EMP_CODE                  
	 LEFT OUTER JOIN EMPLOYEE EMP1 (NOLOCK) ON PD.EMP_CODE1= EMP1.EMP_CODE                  
	 LEFT OUTER JOIN EMPLOYEE EMP2 (NOLOCK) ON PD.EMP_CODE2= EMP2.EMP_CODE   
	 left join bin (nolock) on isnull(PD.BIN_ID,'000') =bin.bin_id 
	 WHERE PM.CANCELLED = 0 AND PM.INV_MODE=@NNAVMODE 
	 AND PD.QUANTITY > 0                    
	 AND (PM.AC_CODE = @CWHERE OR @CWHERE='')          
	 ) IND
	 RIGHT OUTER JOIN 
	 (SELECT j.ARTICLE_CODE, sn.ARTICLE_NO, sn.ARTICLE_NAME, sn.sn_article_desc ARTICLE_DESC,sn.SECTION_NAME,sn.SUB_SECTION_NAME,
	  j.product_code AS PRODUCT_CODE, sn.PARA1_NAME, sn.PARA2_NAME,  sn.PARA3_NAME, sn.PARA4_NAME, sn.PARA5_NAME , sn.PARA6_NAME,               
	  b.UOM_CODE, sn.uom UOM_NAME,'' AS [ART_DT_CREATED],'' AS [PARA3_DT_CREATED],             
	  ISNULL(J.DT_CREATED,'') AS [SKU_DT_CREATED],B.ALIAS AS ARTICLE_ALIAS,J.BARCODE_CODING_SCHEME AS CODING_SCHEME,B.DISCON,LM.AC_NAME,
	   tmp.quantity ,tmp.quantity as INVOICE_QUANTITY,tmp.row_id  as tmp_sku_row_id  
	  FROM SKU J (nolock)
	  join #tmpinvDetails tmp on j.product_code =tmp.PRODUCT_CODE 
	  JOIN ARTICLE B (NOLOCK) ON J.ARTICLE_CODE = B.ARTICLE_CODE                        
	  JOIN SKU_NAMES SN (NOLOCK) ON J.PRODUCT_CODE =SN.PRODUCT_CODE
	  LEFT JOIN LM01106 LM (NOLOCK) ON J.AC_CODE = LM.AC_CODE                       
	 -- WHERE 
	  --(J.PRODUCT_CODE=@CWHERE1  OR J.PRODUCT_CODE LIKE @CWHERE1+'@%')
	 ) SKU ON IND.PC = SKU.PRODUCT_CODE and ind.tmpRow_id =sku.tmp_sku_row_id
	               
	 ORDER BY IND.INV_DT DESC,INV_ID  DESC     
	 
			 
		declare @cCHECK_SUPPLIER_WSR varchar(10)
		select @cCHECK_SUPPLIER_WSR=value  from config where config_option ='CHECK_SUPPLIER_WSR'     
	 
	 if ISNULL(@cCHECK_SUPPLIER_WSR,'')='1' 
	 begin
	 
	  IF   EXISTS (SELECT TOP 1 PRODUCT_CODE FROM #TMPSOLDDETAILS WHERE INV_ID IS  NULL)
	  begin
	      Update  #TMPSOLDDETAILS set Errmsg ='WSL Details Not found of this item Please check' WHERE INV_ID IS  NULL
	      goto end_proc 
	  end
	   
	 end
	
	 
	
	 IF  (((NOT EXISTS (SELECT TOP 1 PRODUCT_CODE FROM #TMPSOLDDETAILS WHERE INV_ID IS NOT NULL) ) AND @CWHERE<>'')  or ( @CRATEPICKINGMODE='2'))
	 BEGIN
		
		DECLARE @CCURLOCID VARCHAR(4),@CERRORMSG VARCHAR(MAX)
		
		DECLARE @TERRMSG TABLE (ERRMSG VARCHAR(MAX))
			
		
		IF  EXISTS (SELECT TOP 1 PARTY_RATE_MEMO_ID FROM WSL_INV_SETTINGS WHERE SP_ID=@NSPID AND ISNULL(PARTY_RATE_MEMO_ID,'')<>'')
		BEGIN
			
			Update wsl_item_details set INV_DT =convert(varchar(10),GETDATE(),121) where sp_id =@NSPID and ISNULL(INV_DT,'')=''
			
	       
			SET @BPARTYRATEFOUND=1		
			--DELETE FROM WSL_ITEM_DETAILS WHERE SP_ID=@NSPID
			
			--INSERT WSL_ITEM_DETAILS	(PRODUCT_CODE,SP_ID,INVOICE_QUANTITY,QUANTITY)
			--SELECT @CWHERE1,@NSPID,1,1

			EXEC SP3S_GETWSL_DATA
			@NSPID=@NSPID,
			@NMODE=1 ,
			@NUPDATEMODE=1,
			@CXNTYPE='WSR'
			
			PRINT 'UPDATE RATES FINALLY'
			
			IF EXISTS (SELECT TOP 1 'U' FROM WSL_ITEM_DETAILS WHERE SP_ID=@NSPID AND ISNULL(ERRMSG,'')<>'')
			BEGIN
			     SELECT * FROM WSL_ITEM_DETAILS WHERE SP_ID=@NSPID AND ISNULL(ERRMSG,'')<>''
			     RETURN
			
			END
						
			--SELECT DISCOUNT_PERCENTAGE FROM WSL_ITEM_DETAILS WHERE SP_ID=@NSPID
			
			UPDATE 	#TMPSOLDDETAILS SET  Rate =B.RATE,DISCOUNT_AMOUNT=B.DISCOUNT_AMOUNT,
			DISCOUNT_PERCENTAGE=B.DISCOUNT_PERCENTAGE,NET_RATE=B.NET_RATE
			FROM WSL_ITEM_DETAILS B WHERE B.PRODUCT_CODE=#TMPSOLDDETAILS.PRODUCT_CODE AND B.SP_ID=@NSPID
			
			--UPDATE 	#TMPSOLDDETAILS SET  GROSS_RATE=B.RATE,IND_RATE=B.RATE,IND_DISCOUNT_AMOUNT=B.DISCOUNT_AMOUNT,
			--IND_DISCOUNT_PERCENTAGE=B.DISCOUNT_PERCENTAGE,INV_NET_RATE=B.NET_RATE
			--FROM WSL_ITEM_DETAILS B WHERE B.PRODUCT_CODE=#TMPSOLDDETAILS.PRODUCT_CODE AND B.SP_ID=@NSPID
			
		END
	 END
	 
	IF  (@CRATEPICKINGMODE<>'2' AND NOT EXISTS (SELECT TOP 1 PRODUCT_CODE FROM #TMPSOLDDETAILS WHERE ISNULL(INV_ID,'')<>'' ))
	    OR (@CRATEPICKINGMODE='2' AND @BPARTYRATEFOUND=0 AND NOT EXISTS (SELECT TOP 1 PRODUCT_CODE FROM #TMPSOLDDETAILS WHERE ISNULL(INV_ID,'')<>'' ))
	BEGIN    
		PRINT 'REUPDATE GROSS RATE'
			UPDATE 	#TMPSOLDDETAILS SET GROSS_RATE=(CASE WHEN  B.WS_PRICE=0 THEN B.MRP ELSE B.WS_PRICE END),
			IND_RATE=(CASE WHEN  B.WS_PRICE=0 THEN B.MRP ELSE B.WS_PRICE END),
			INV_NET_RATE=(CASE WHEN  B.WS_PRICE=0 THEN B.MRP ELSE B.WS_PRICE END)
			FROM SKU B WHERE B.PRODUCT_CODE=#TMPSOLDDETAILS.PRODUCT_CODE
			and  ISNULL(INV_ID,'')=''
	END
	
	  UPDATE #TMPSOLDDETAILS SET ROW_ID=cast('LATER' +CONVERT(VARCHAR(38), NEWID()) as varchar(40))

END_PROC:

	    SELECT   *,RATE=INV_NET_RATE ,net_rate =INV_NET_RATE
		FROM #TMPSOLDDETAILS  
		order by INV_DT desc ,INV_ID desc   

	 -- delete A from WSL_ITEM_DETAILS A (nolock) where sp_id=@NSPID
	
	 
END