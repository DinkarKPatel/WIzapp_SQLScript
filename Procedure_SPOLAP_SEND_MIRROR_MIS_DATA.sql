create PROCEDURE SPOLAP_SEND_MIRROR_MIS_DATA
(  
  @CUPLOADEDXNID VARCHAR(50)  
 ,@BACKNOWLEDGE BIT=0  
 ,@CERRMSG VARCHAR(1000) OUTPUT  
)  
--WITH ENCRYPTION  
AS  
BEGIN  
 DECLARE @CMEMOID VARCHAR(50),@CSTEP VARCHAR(5)  
BEGIN TRY   
 SET @CSTEP=00  
   
 DECLARE @CTEMPDBNAME1 VARCHAR(40),@CTEMPDBNAME VARCHAR(40)  
   
 PRINT 'ENTER PURCHASE SENDING'   
   
 SET @CSTEP=10      
   
  SET @CMEMOID=@CUPLOADEDXNID  
 ---- IF NO MEMO FOUND , JUST END THE PROCESS  
 IF ISNULL(@CMEMOID,'')=''  
  GOTO END_PROC  
  
LBLTABLEINFO:  
 SET @CSTEP=50  
  
 IF @BACKNOWLEDGE=1  
  GOTO END_PROC  
    
 SET @CSTEP=55  
 SELECT DISTINCT 'MIS_BOM_ISSUE_MST_MIRROR' AS TARGET_TABLENAME,A.* ,@CMEMOID AS XN_ID FROM BOM_ISSUE_MST(NOLOCK) A WHERE A.ISSUE_ID=@CMEMOID  
   
 SET @CSTEP=60  
 SELECT DISTINCT 'MIS_BOM_ISSUE_DET_MIRROR' AS TARGET_TABLENAME,A.* FROM BOM_ISSUE_DET(NOLOCK) A WHERE A.ISSUE_ID=@CMEMOID  
   
 SET @CSTEP=65  
 SELECT DISTINCT 'MIS_BOM_ISSUE_REF_MIRROR' AS TARGET_TABLENAME,A.* , @CMEMOID AS PFI_MEMO_ID FROM BOM_ISSUE_REF A (NOLOCK)  WHERE A.BOM_ISSUE_ID=@CMEMOID  
 
 SET @CSTEP=66  
 SELECT DISTINCT 'OLAP_PMT01106_MIRROR' AS TARGET_TABLENAME,A.DEPT_ID,A.product_code,A.BIN_ID,A.quantity_in_stock,
 @CMEMOID as mis_memo_id FROM PMT01106 A (NOLOCK) 
   JOIN BOM_ISSUE_DET B (NOLOCK) ON B.PRODUCT_CODE=A.PRODUCT_CODE
   WHERE B.issue_id=@CMEMOID  
   
   
   
      
LBLCHECKDATA:  
  
END TRY  
BEGIN CATCH  
 SET @CERRMSG='P: SPOLAP_SEND_MIRROR_MIS_DATA, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()  
 GOTO END_PROC  
END CATCH   
   
END_PROC:  
  
END   
