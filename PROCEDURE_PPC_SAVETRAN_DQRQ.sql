CREATE PROCEDURE PPC_SAVETRAN_DQRQ
(
	@NUPDATEMODE		NUMERIC(1,0),
	@NSPID				INT,
	@CFINYEAR			VARCHAR(10),
	@CXNMEMOID			VARCHAR(40)='',
	@CLOCID				VARCHAR(2)=''	
)
--WITH ENCRYPTION
AS
BEGIN
	DECLARE @CTEMPDBNAME			VARCHAR(100),
			@CMASTERTABLENAME		VARCHAR(100),
			@CDETAILTABLENAME1		VARCHAR(100),
			@CDETAILTABLENAME2		VARCHAR(100),
			@CTEMPMASTERTABLENAME	VARCHAR(100),
			@CTEMPDETAILTABLENAME1	VARCHAR(100),
            @CTEMPDETAILTABLENAME2	VARCHAR(100),
			@CTEMPMASTERTABLE		VARCHAR(100),
			@CTEMPDETAILTABLE1		VARCHAR(100),
			@CTEMPDETAILTABLE2		VARCHAR(100),
			@CERRORMSG				VARCHAR(500),
			@LDONOTUPDATESTOCK		BIT,
			@CKEYFIELD1				VARCHAR(50),
			@CKEYFIELDVAL1			VARCHAR(50),
			@CMEMONO				VARCHAR(20),
			@NMEMONOLEN				NUMERIC(20,0),
			@CMEMONOVAL				VARCHAR(50),
			@CMEMODEPTID			VARCHAR(2),
			@CLOCATIONID			VARCHAR(2),
			@CHODEPTID				VARCHAR(2),
			@CCMD					NVARCHAR(4000),
			@CCMDOUTPUT				NVARCHAR(4000),
			@NSAVETRANLOOP			BIT,
			@NSTEP					INT,
			@LENABLETEMPDATABASE	BIT,
			@CMEMONOPREFIX VARCHAR(10)

	DECLARE @OUTPUT TABLE (ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))
	SET @CMEMONOPREFIX=@CLOCID
	SET @NSTEP = 10		-- SETTTING UP ENVIRONMENT

	
	SET @CTEMPDBNAME = ''

	SET @CMASTERTABLENAME	= 'PPC_DQRQ_MST'
	SET @CDETAILTABLENAME1	= 'PPC_DQ_DET'
	SET @CDETAILTABLENAME2	= 'PPC_RQ_DET'

	
	SET @CTEMPMASTERTABLENAME	= 'PPC_PPC_DQRQ_MST_UPLOAD'
	SET @CTEMPDETAILTABLENAME1	= 'PPC_PPC_DQ_DET_UPLOAD'
	SET @CTEMPDETAILTABLENAME2	= 'PPC_PPC_RQ_DET_UPLOAD'
	
	
	
	SET @CTEMPMASTERTABLE	=  @CTEMPMASTERTABLENAME
	SET @CTEMPDETAILTABLE1	=  @CTEMPDETAILTABLENAME1
	SET @CTEMPDETAILTABLE2	=  @CTEMPDETAILTABLENAME2

	
	SET @CERRORMSG			= ''
	SET @LDONOTUPDATESTOCK	= 0
	SET @CKEYFIELD1			= 'MEMO_ID'
	SET @CMEMONO			= 'MEMO_NO'
	SET @NMEMONOLEN			= LEN(@CMEMONOPREFIX)+6
	
	IF ISNULL(@CLOCID,'')=''
		SELECT @CLOCATIONID	= [VALUE] FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'
	ELSE
		SELECT @CLOCATIONID=@CLOCID
		
	SELECT @CHODEPTID		= [VALUE] FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'		

    
    DECLARE @CMEMO_TYPE INT
    SET @CCMD=N'SELECT TOP 1 @CMEMO_TYPE=ISNULL(MEMO_TYPE,0) FROM '+@CTEMPMASTERTABLE+' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD, N'@CMEMO_TYPE INT OUTPUT',@CMEMO_TYPE=@CMEMO_TYPE OUTPUT
	
	IF @CMEMO_TYPE NOT IN(1,2)
	BEGIN
	     SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' PLEASE CHECK...'
		GOTO END_PROC  	
	
	END

	IF 	@CMEMO_TYPE=1			
    SET @CMEMONOPREFIX=@CLOCID +'BA'
    ELSE
    SET @CMEMONOPREFIX=@CLOCID +'DA'
    
	BEGIN TRY
	BEGIN TRANSACTION
		--- IF PROCEDURE CALLED FROM CANCEL MEMO, THEN JUST DO RELATED VALIDATIONS BEFORE CANCEL
		--- AND THEN AFTER CANCELLING THE MEMO JUST PROCEED TOWARDS VALIDATIONS TO BE DONE AFTER CANCEL
		IF @NUPDATEMODE = 3
		BEGIN
		    IF (@CXNMEMOID IS NULL )
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE SAVED...'
				  GOTO END_PROC  		
			END
			
			SET @CCMD=N' UPDATE '+@CMASTERTABLENAME+' SET CANCELLED=1,LAST_UPDATE=GETDATE() WHERE '+@CKEYFIELD1+'='''+@CXNMEMOID+'''  '
	        EXEC SP_EXECUTESQL @CCMD
	        
			EXEC UPDATEPMT_PPC 
					  @CXNTYPE			= 'DQ'
					, @CXNNO			= ''
					, @CXNID			= @CXNMEMOID
					, @NREVERTFLAG		= 0
					, @NALLOWNEGSTOCK	= 0
					, @NCHKDELBARCODES	= 0
					, @CCMD				= @CCMDOUTPUT OUTPUT
			
			
			IF @CCMDOUTPUT <> ''
			BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR REVERTING THE STOCK STATUS IN PMT....'
				GOTO END_PROC
			END
			
			EXEC UPDATEPMT_PPC 
					  @CXNTYPE			= 'RQ'
					, @CXNNO			= ''
					, @CXNID			= @CXNMEMOID
					, @NREVERTFLAG		= 1
					, @NALLOWNEGSTOCK	= 0
					, @NCHKDELBARCODES	= 0
					, @CCMD				= @CCMDOUTPUT OUTPUT
			
			
			IF @CCMDOUTPUT <> ''
			BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR REVERTING THE STOCK STATUS IN PMT....'
				GOTO END_PROC
			END
			
			
			GOTO END_PROC
		END	
		
		-- START UPDATING XN TABLES	
		IF @NUPDATEMODE = 1 -- ADDMODE	
		BEGIN	
			SET @NSTEP = 20		-- GENERATING NEW KEY
			IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
			BEGIN
				-- GENERATING NEW MRR_NO		
				SET @NSAVETRANLOOP=0
				WHILE @NSAVETRANLOOP=0
				BEGIN
					SET @NSTEP = 23
					EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,
									@CFINYEAR,0, @CMEMONOVAL OUTPUT   
					SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+' 
											WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' 
											AND FIN_YEAR = '''+@CFINYEAR+''' )
									SET @NLOOPOUTPUT=0
								ELSE
									SET @NLOOPOUTPUT=1'
					PRINT @CCMD
					EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
				END

				IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'	
					  GOTO END_PROC  		
				END

				SET @NSTEP = 30		-- GENERATING NEW ID
				-- GENERATING NEW ORDER ID
				SET @CKEYFIELDVAL1 = @CLOCATIONID + @CFINYEAR+ REPLICATE('0', 15-LEN(LTRIM(RTRIM(@CMEMONOVAL)))) + LTRIM(RTRIM(@CMEMONOVAL))
				IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
					  GOTO END_PROC
				END
				
				SET @NSTEP = 35
				IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
					  GOTO END_PROC
				END

				SET @NSTEP = 40		-- UPDATING NEW ID INTO TEMP TABLES
				-- UPDATING NEWLY GENERATED WORK ORDER NO AND ID IN MASTER & DETAIL TABLES
				SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' + 
							@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
				EXEC SP_EXECUTESQL @CCMD
				
				SET @NSTEP = 50
				
				SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD
				
				
			END
		END					-- END OF ADDMODE
		ELSE				-- CALLED FROM EDITMODE
		BEGIN				-- START OF EDITMODE
			SET @NSTEP = 50		-- GETTING ID INFO FROM TEMP TABLE
			-- GETTING ORDER_ID WHICH IS BEING EDITED
			SET @CCMD = 'SELECT @CKEYFIELDVAL1 = MEMO_ID, @CMEMONOVAL = MEMO_NO FROM ' + @CTEMPMASTERTABLE +' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			EXEC SP_EXECUTESQL @CCMD, N'@CKEYFIELDVAL1 VARCHAR(50) OUTPUT, @CMEMONOVAL VARCHAR(50) OUTPUT', 
							   @CKEYFIELDVAL1 OUTPUT, @CMEMONOVAL OUTPUT
			IF (@CKEYFIELDVAL1 IS NULL ) OR (@CMEMONOVAL IS NULL )
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'
				  GOTO END_PROC  		
			END
			
			SET @NSTEP = 60		-- UPDATING SENT_TO_HO FLAG TEMP TABLE
			
				
			SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' AND '+@CKEYFIELD1+' = ''LATER'' '
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
				
			SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' SET LAST_UPDATE=GETDATE() WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' '
			EXEC SP_EXECUTESQL @CCMD
			
			SET @NSTEP = 70	
		
			--PRINT 'EXIT LOOP-0'								  
			--SET @NSTEP = 150		-- UPDATING STOCK
			--EXEC UPDATEPMT_PPC
			--	  @CXNTYPE			= 'AMIS'
			--	, @CXNNO			= @CMEMONOVAL
			--	, @CXNID			= @CKEYFIELDVAL1
			--	, @NREVERTFLAG		= 0
			--	, @NALLOWNEGSTOCK	= 0
			--	, @NCHKDELBARCODES	= 0
			--	, @CCMD				= @CCMDOUTPUT OUTPUT
			
			--IF (@CCMDOUTPUT <> '')
			--BEGIN
			--	SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR UPDATING THE STOCK STATUS IN PMT....'
			--	GOTO END_PROC
			--END
	    
			
					
				
		END	-- END OF EDITMODE

		SET @NSTEP = 95

		-- CHECK WETHER THE MEMO ID IS STILL LATER
		IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
			GOTO END_PROC
		END
        
		        
		UPDATE A SET A.PRODUCT_UID =B.PRODUCT_UID  FROM PPC_PPC_RQ_DET_UPLOAD A
		JOIN PPC_PPC_DQ_DET_UPLOAD B ON A.REF_ROW_ID =B.ROW_ID 
		WHERE A.SP_ID =LTRIM(RTRIM(STR(@NSPID)))

		SET @NSTEP = 100		-- UPDATING MASTER TABLE

            DECLARE @FILTER VARCHAR(MAX)
	        SET @FILTER=' B.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
		EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPMASTERTABLENAME
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CMASTERTABLENAME
			, @CKEYFIELD1	= @CKEYFIELD1
			, @BALWAYSUPDATE = 1
			,@CFILTERCONDITION=@FILTER
			
		IF OBJECT_ID('TEMPDB..#TMPPPC_DQ_DET','U') IS NOT NULL
		   DROP TABLE #TMPPPC_DQ_DET
		
		SELECT * INTO #TMPPPC_DQ_DET FROM PPC_PPC_DQ_DET_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))

        ----
        ALTER TABLE #TMPPPC_DQ_DET ADD OLD_ROW_ID VARCHAR(40)
        UPDATE #TMPPPC_DQ_DET SET OLD_ROW_ID = ROW_ID
        UPDATE #TMPPPC_DQ_DET SET ROW_ID =@CLOCATIONID+CONVERT(VARCHAR(38), NEWID()) WHERE LEFT(ROW_ID,5)='LATER'
       
        -- UPDATING ROW_ID IN TEMP TABLES
	
        SET @NSTEP = 222      
		
		 SET @CCMD = N'UPDATE B SET REF_ROW_ID=A.ROW_ID FROM #TMPPPC_DQ_DET A
		 JOIN ' + @CTEMPDETAILTABLE2 + ' B ON A.OLD_ROW_ID=B.REF_ROW_ID' 
		 PRINT @CCMD 
         EXEC SP_EXECUTESQL @CCMD 
         
         SET @NSTEP = 225
         SET @CCMD = N'UPDATE B SET ROW_ID=A.ROW_ID FROM #TMPPPC_DQ_DET A
		 JOIN ' + @CTEMPDETAILTABLE1 + ' B ON A.OLD_ROW_ID=B.ROW_ID' 
		 PRINT @CCMD 
         EXEC SP_EXECUTESQL @CCMD 
         SET @NSTEP = 226
         
         SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE2 + ' SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(38), NEWID())  
        WHERE LEFT(ROW_ID,5) = ''LATER'''
        PRINT @CCMD  
        EXEC SP_EXECUTESQL @CCMD  
        
        SET @NSTEP = 228
        
        SET @CCMD = N'DELETE B FROM ' + @CDETAILTABLENAME1 + '  A
                    JOIN ' + @CDETAILTABLENAME2 + ' B ON A.ROW_ID=B.REF_ROW_ID
					WHERE A.' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''
					AND A.ROW_ID IN 
					(
						SELECT A.ROW_ID 
						FROM ' + @CDETAILTABLENAME1 + ' A 
						LEFT OUTER JOIN ' + @CTEMPDETAILTABLENAME1 + ' B ON A.ROW_ID = B.ROW_ID AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+'''
						WHERE A.' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''
						AND B.ROW_ID IS NULL
					)'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
        ---
        

		-- DELETING EXISTING ENTRIES FROM PID01106 TABLE WHERE ROW_ID NOT FOUND IN TEMPTABLE
		SET @NSTEP = 230		-- UPDATING TRANSACTION TABLE - DELETING EXISTING ENTRIES

		SET @CCMD = N'DELETE FROM ' + @CDETAILTABLENAME1 + ' 
					WHERE ' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''
					AND ROW_ID IN 
					(
						SELECT A.ROW_ID 
						FROM ' + @CDETAILTABLENAME1 + ' A 
						LEFT OUTER JOIN ' + @CTEMPDETAILTABLENAME1 + ' B ON A.ROW_ID = B.ROW_ID AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+'''
						WHERE A.' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''
						AND B.ROW_ID IS NULL
					)'
		PRINT @CCMD
		
		EXEC SP_EXECUTESQL @CCMD
		
		SET @NSTEP = 240
       --SELECT * FROM TEMP_PRD_AGENCY_ISSUE_ROW_MATERIAL_DET_61
		
		EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPDETAILTABLENAME1
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CDETAILTABLENAME1
			, @CKEYFIELD1	= 'ROW_ID'
			, @BALWAYSUPDATE = 1
			,@CFILTERCONDITION=@FILTER
		
	SET @NSTEP = 250
		
	   EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPDETAILTABLENAME2
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CDETAILTABLENAME2
			, @CKEYFIELD1	= 'ROW_ID'
			, @BALWAYSUPDATE = 1
			,@CFILTERCONDITION=@FILTER
		
		SET @NSTEP = 260
		
		
		--EXEC PPC_SAVETRAN_DQRQ  1,'63','01117','','01'


		EXEC SAVETRAN_UPDSKU_PPC 'DQRQ',@CKEYFIELDVAL1,@CERRORMSG OUTPUT 
		IF ISNULL(@CERRORMSG,'')<>''
		GOTO END_PROC
		
		
		
   
		SET @NSTEP = 270
		EXEC UPDATEPMT_PPC 
			@CXNTYPE			= 'DQ'
		  , @CXNNO= ''
          , @CXNID= @CKEYFIELDVAL1
		  , @NREVERTFLAG		= 1
		  , @NALLOWNEGSTOCK	= 0
		  , @NCHKDELBARCODES	= 0
		  , @CCMD	= @CCMDOUTPUT OUTPUT
		
		-- SELECT * FROM PPC_PMT WHERE PRODUCT_CODE ='01108'
		
--EXEC PPC_SAVETRAN_DQRQ  1,'142','01117','','01'

			
			IF @CCMDOUTPUT <> ''
			BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR REVERTING THE STOCK STATUS IN PMT....'
				GOTO END_PROC
			END
			
		--EXEC PPC_SAVETRAN_DQRQ  1,'142','01117','','01'
  
			--  SELECT * FROM PPC_PMT WHERE PRODUCT_CODE ='01108'
			  
			EXEC UPDATEPMT_PPC 
					  @CXNTYPE			= 'RQ'
					, @CXNNO			= ''
					, @CXNID			= @CKEYFIELDVAL1
					, @NREVERTFLAG		= 0
					, @NALLOWNEGSTOCK	= 0
					, @NCHKDELBARCODES	= 0
					, @CCMD				= @CCMDOUTPUT OUTPUT
			--  SELECT * FROM PPC_PMT WHERE PRODUCT_CODE ='01108'
			
			 
			IF @CCMDOUTPUT <> ''
			BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR REVERTING THE STOCK STATUS IN PMT....'
				GOTO END_PROC
			END
	
	
	IF NOT EXISTS(SELECT TOP 1 'U' FROM PPC_DQ_DET WHERE MEMO_ID=@CKEYFIELDVAL1)	
	BEGIN
	   SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' DEALLOCATION RECORD NOT FOUD IN ....'
	   GOTO END_PROC
	
	END	
	
	IF NOT EXISTS(SELECT TOP 1 'U' FROM PPC_DQ_DET A
	JOIN PPC_RQ_DET B ON A.ROW_ID=B.REF_ROW_ID WHERE A.MEMO_ID=@CKEYFIELDVAL1)	
	BEGIN
	   SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' RE ALLOCATION RECORD NOT FOUD IN ....'
	   GOTO END_PROC
	
	END	
    
	END TRY
	BEGIN CATCH
		SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(STR(@NSTEP))) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
	END CATCH
	
END_PROC:

  --SELECT * FROM PPC_DQ_DET WHERE MEMO_ID='0101117000000100000004'
  --SELECT * FROM PPC_DQRQ_MST WHERE MEMO_ID='0101117000000100000004'
  
  --SELECT A.* FROM PPC_RQ_DET A
  --JOIN PPC_DQ_DET B ON A.REF_ROW_ID=B.ROW_ID 
  --WHERE B.MEMO_ID='0101117000000100000004'
  
  --SELECT SKU.* FROM PPC_RQ_DET A
  --JOIN PPC_DQ_DET B ON A.REF_ROW_ID=B.ROW_ID 
  --JOIN PPC_PMT SKU ON SKU.PRODUCT_UID =A.PRODUCT_UID
  --WHERE B.MEMO_ID='0101117000000100000004'
  
  --SELECT SKU.* FROM PPC_RQ_DET A
  --JOIN PPC_DQ_DET B ON A.REF_ROW_ID=B.ROW_ID 
  --JOIN PPC_SKU  SKU ON SKU.PRODUCT_UID =A.PRODUCT_UID
  --WHERE B.MEMO_ID='0101117000000100000004'
  
  
  --SELECT * FROM PPC_DQRQ_MST
  --SELECT * FROM PPC_DQ_DET 
  --SELECT * FROM PPC_RQ_DET 

  
  
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')=''
			COMMIT TRANSACTION
		ELSE
			ROLLBACK
	END
	
	INSERT @OUTPUT ( ERRMSG, MEMO_ID)
		VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )

	SELECT * FROM @OUTPUT	

	---DROPPING TEMP TABLES
	IF ISNULL(@CERRORMSG,'') = ''
	BEGIN
	   DELETE FROM PPC_PPC_DQRQ_MST_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
	   DELETE FROM PPC_PPC_DQ_DET_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))	
	   DELETE FROM PPC_PPC_RQ_DET_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
	  
    END
    
 
END						
------------- END OF PROCEDURE PPC_SAVETRAN_AGENCY_ISSUE_FIRST		-----------------------------------------
