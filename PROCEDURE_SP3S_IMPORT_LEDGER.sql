create PROCEDURE SP3S_IMPORT_LEDGER
(
	@CSPID VARCHAR(10),
	@CLOCID VARCHAR(5)=''
)
AS
BEGIN
	BEGIN TRY
		BEGIN TRANSACTION
		DECLARE @CCMD NVARCHAR(MAX),@CSTEP VARCHAR(100),@CIMPORTTABLE VARCHAR(50),@BALERT BIT,
				@CERRMSG VARCHAR(MAX),@LOCATINID VARCHAR(5),@CAC_CODEVAL VARCHAR(10),@STATE VARCHAR(50),
				@CCODE CHAR(2),
				@CCITY VARCHAR(50),@CAREA VARCHAR(50),@PINCODE VARCHAR(20),
				@CREFCODE VARCHAR(20),@CAC_NAME VARCHAR(100),
				@CHEAD_NAME VARCHAR(1000),@CDB_NAME VARCHAR(100)
		SET @CSTEP=10
		SET @CIMPORTTABLE='TEMP_LEDGER_'+@CSPID
		SET @CDB_NAME = DB_NAME()+'.DBO.'

		IF @CLOCID=''
		SELECT @LOCATINID = DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
		ELSE
		SET @LOCATINID=@CLOCID
		
		SET @CSTEP=20
		SET @CCODE='01'
		--SET @CCMD = N'IF EXISTS (SELECT TOP 1 * FROM '+@CIMPORTTABLE+' WHERE ISNULL(CODE,'''') = '''')
		--				SET  @BALERT = 1
		--			  ELSE 	
		--				SET  @BALERT = 0'
		--PRINT @CCMD
		--EXEC SP_EXECUTESQL  @CCMD,N'@BALERT BIT OUTPUT',@BALERT OUTPUT
		
		
		--SELECT @BALERT
		
		--IF	@BALERT = 1
		--BEGIN
		--	SELECT 'CAN NOT ACCEPT A BLANK CODE' AS ERRMSG
		--END			
		
		IF ISNULL(@LOCATINID,'')=''
	      BEGIN
			SET @CERRMSG =' LOCATION ID CAN NOT BE BLANK  '  
			GOTO EXIT_PROC    
		 END
		
		DECLARE @CHODEPT_ID VARCHAR(2)
		
		SELECT TOP 1 @CHODEPT_ID=VALUE  FROM CONFIG WHERE CONFIG_OPTION ='LOCATION_ID'
		
		SET @CSTEP=340
		SET @CCMD = N'UPDATE  A SET AC_CODE=B.AC_CODE
		             FROM '+@CIMPORTTABLE+' A 
		             JOIN
		             (
		              SELECT AC_CODE,AC_NAME 
		              FROM LM01106 		            
		              GROUP BY AC_CODE,AC_NAME 
		             ) B ON A.AC_NAME=B.AC_NAME
		             WHERE ISNULL(A.AC_CODE,'''')='''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @CSTEP=350
		--CHECK FOR INVALID HEAD NAME
		IF OBJECT_ID('#HEAD','U')IS NOT NULL
			DROP TABLE #HEAD
		CREATE TABLE #HEAD (HEAD_NAME VARCHAR(100))	
		
		SET @CSTEP=30
		SET @CCMD = N'SELECT DISTINCT A.HEAD_NAME FROM '+@CIMPORTTABLE+' A LEFT OUTER JOIN HD01106 B
					ON A.HEAD_NAME=B.HEAD_NAME WHERE B.HEAD_NAME IS NULL'
		PRINT @CCMD
		INSERT INTO #HEAD
		EXEC SP_EXECUTESQL @CCMD
		
		
		SET @CSTEP=50
		WHILE (SELECT TOP 1 'U' FROM #HEAD) = 'U'
		BEGIN
			
			SELECT TOP 1 @CHEAD_NAME = HEAD_NAME FROM #HEAD
			--SELECT @CHEAD_NAME
			LBLNEXTKEYHEAD:
				EXEC GETNEXTKEY 'HD01106','HEAD_CODE',10,@LOCATINID,1,'',2,@CAC_CODEVAL OUTPUT 
				SET @CSTEP=52
				IF ISNULL(@CAC_CODEVAL,'')=''
				BEGIN
						SET @CERRMSG = 'P:SP3S_IMPORT_LEDGER, STEP: '+@CSTEP+', MESSAGE: ERROR GENERATING HEAD_CODE.'    
						GOTO EXIT_PROC
				END
				SET @CSTEP=55
				
				IF EXISTS(SELECT TOP 1 'U' FROM HD01106 WHERE HEAD_CODE=@CAC_CODEVAL)
					GOTO LBLNEXTKEYHEAD
				
				SET @CSTEP=57
				INSERT INTO HD01106(HEAD_CODE,HEAD_NAME,MAJOR_HEAD_CODE,PHYSICAL,ALIAS,PRINT_HEAD,LAST_UPDATE,CREDITOR_DEBTOR_CODE,COMPANY_CODE,UPLOADED_TO_ACTIVSTREAM,INACTIVE)
				SELECT @CAC_CODEVAL,@CHEAD_NAME,@CAC_CODEVAL,0,'',0,GETDATE(),'','01',0,0
				
				DELETE FROM #HEAD WHERE HEAD_NAME = @CHEAD_NAME	
		END
		
		SET @CSTEP=70
		SET @CCMD = N'UPDATE A SET A.HEAD_CODE = B.HEAD_CODE FROM '+@CIMPORTTABLE+' A 
					JOIN HD01106 B ON A.HEAD_NAME = B.HEAD_NAME'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @CSTEP=90
		----INSERT NEW STATE
		IF OBJECT_ID ('#NEW_STATE','U') IS NOT NULL
			DROP TABLE #NEW_STATE
		
		CREATE TABLE #NEW_STATE ([STATE] VARCHAR(300))
		
		SET @CSTEP=110
	    SET @CCMD = N'INSERT INTO #NEW_STATE(STATE) SELECT DISTINCT A.STATE FROM '+@CIMPORTTABLE+' A LEFT OUTER JOIN STATE B
		ON A.STATE = B.STATE
		WHERE B.STATE IS NULL AND A.STATE <> '''''
		PRINT @CCMD 
		EXEC SP_EXECUTESQL @CCMD
		
		SET @CSTEP=130
		WHILE(SELECT TOP 1 'U' FROM #NEW_STATE) = 'U'
		BEGIN
			EXEC GETNEXTKEY 'STATE','STATE_CODE',7,@LOCATINID,1,'',2,@CAC_CODEVAL OUTPUT 
		    SET @STATE = (SELECT TOP 1 STATE FROM #NEW_STATE)
		    INSERT INTO [STATE](STATE_CODE,[STATE],LAST_UPDATE,REGION_CODE,OCTROI_PERCENTAGE,INACTIVE,COMPANY_CODE)
		    SELECT @CAC_CODEVAL AS STATE_CODE,@STATE AS STATE,GETDATE() LAST_UPDATE,'0000000' AS REGION_CODE,0 AS OCTROI_PERCENTAGE,
		    0 AS INACTIVE,@CCODE AS COMPANY_CODE
		    DELETE FROM #NEW_STATE WHERE [STATE] = @STATE
		END
		
		SET @CSTEP=140
		SET @CCMD = N'UPDATE A SET A.STATE_CODE = B.STATE_CODE FROM '+@CIMPORTTABLE+' A JOIN STATE B ON A.STATE=B.STATE'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @CSTEP=150
		SET @CCMD = N'UPDATE '+@CIMPORTTABLE+' SET STATE_CODE=''0000000'' WHERE ISNULL(STATE,'''')='''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
	----INSERT NEW CITY
	
	    SET @CSTEP=160
		IF OBJECT_ID ('#NEW_CITY','U') IS NOT NULL
			DROP TABLE #NEW_CITY
			
		CREATE TABLE #NEW_CITY(CITY VARCHAR(300),STATE_CODE VARCHAR(7))
		
		SET @CSTEP=180
		SET @CCMD = N'INSERT INTO #NEW_CITY(CITY,STATE_CODE)
					  SELECT DISTINCT A.CITY,C.STATE_CODE FROM '++@CIMPORTTABLE++' A
					  LEFT OUTER JOIN CITY B ON A.CITY = B.CITY LEFT OUTER JOIN STATE C ON C.STATE = A.STATE
					  WHERE B.CITY IS NULL AND A.CITY <> '''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @CSTEP=210
		WHILE(SELECT TOP 1 'U' FROM #NEW_CITY) = 'U'
		BEGIN
			EXEC GETNEXTKEY 'CITY','CITY_CODE',7,@LOCATINID,1,'',2,@CAC_CODEVAL OUTPUT 
		    SELECT TOP 1 @CCITY = CITY FROM #NEW_CITY
		    SELECT TOP 1 @STATE = STATE_CODE FROM #NEW_CITY
		    INSERT INTO CITY(CITY_CODE,CITY,LAST_UPDATE,STATE_CODE,INACTIVE,DISTT_CODE,COMPANY_CODE)
		    SELECT @CAC_CODEVAL AS CITY_CODE,@CCITY AS CITY,GETDATE() AS LAST_UPDATE, @STATE AS STATE_CODE,
		    0 AS INACTIVE,0 AS DISTT_CODE,@CCODE AS COMPANY_CODE
		    DELETE FROM #NEW_CITY WHERE CITY=@CCITY AND STATE_CODE = @STATE
		END
		
----INSERT NEW AREA
		SET @CSTEP=215
		SET @CCMD = N'UPDATE A SET A.CITY_CODE = B.CITY_CODE FROM '+@CIMPORTTABLE+' A JOIN CITY B ON A.CITY=B.CITY'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD

		SET @CSTEP=218
		SET @CCMD = N'UPDATE '+@CIMPORTTABLE+' SET CITY_CODE=''0000000'' WHERE ISNULL(CITY,'''')='''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @CSTEP =220
		IF OBJECT_ID ('#NEW_AREA','U') IS NOT NULL
			DROP TABLE #NEW_AREA
				
		CREATE TABLE #NEW_AREA(AREA_NAME VARCHAR(300),PINCODE VARCHAR(10),CITY_CODE VARCHAR(10))
		
		SET @CCMD = N'INSERT INTO #NEW_AREA(AREA_NAME,PINCODE,CITY_CODE)
					SELECT DISTINCT A.AREA_NAME,A.PINCODE,A.CITY_CODE  FROM '++@CIMPORTTABLE++' A
					LEFT OUTER JOIN AREA B ON A.AREA_NAME = B.AREA_NAME AND A.CITY_CODE=B.CITY_CODE 
					WHERE B.AREA_NAME IS NULL AND B.CITY_CODE IS NULL AND A.AREA_NAME <> '''''
		
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		---SELECT * FROM #NEW_AREA
		
		SET @CSTEP=240
		WHILE(SELECT TOP 1 'U' FROM #NEW_AREA) = 'U'
		BEGIN
			EXEC GETNEXTKEY 'AREA','AREA_CODE',7,@LOCATINID,1,'',2,@CAC_CODEVAL OUTPUT
			SELECT TOP 1 @CAREA = AREA_NAME, @PINCODE = PINCODE,@CCITY = CITY_CODE FROM #NEW_AREA
			INSERT INTO AREA(INACTIVE,COMPANY_CODE,AREA_CODE,AREA_NAME,PINCODE,CITY_CODE,LAST_UPDATE)
		    SELECT 0 AS INACTIVE,@CCODE AS COMPANY_CODE, @CAC_CODEVAL AS AREA_CODE,@CAREA AS AREA_NAME
		    ,@PINCODE AS PINCODE,@CCITY AS CITY_CODE,GETDATE() AS LAST_UPDATE
		    PRINT @CAREA
		    DELETE FROM #NEW_AREA WHERE AREA_NAME = @CAREA AND CITY_CODE = @CCITY AND PINCODE=@PINCODE
		END	
			
	    SET @CSTEP=250
	    SET @CCMD=N'UPDATE A SET A.AREA_CODE = B.AREA_CODE FROM '+@CIMPORTTABLE+' A
					JOIN AREA B ON A.AREA_NAME = B.AREA_NAME AND A.CITY_CODE = B.CITY_CODE'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @CSTEP=310
		SET @CCMD =N'UPDATE '+@CIMPORTTABLE+' SET AREA_CODE = ''0000000'' WHERE ISNULL(AREA_NAME,'''') = '''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		--LMP01106
		SET @CSTEP=320
		SET @CCMD =N'UPDATE '+@CIMPORTTABLE+' SET BROKER_AC_CODE = ''0000000000'' WHERE ISNULL(''BROKER_AC_CODE'','''') = '''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		
		----SET @CSTEP=330
		----SET @CCMD = N'UPDATE A SET A.AC_CODE = B.AC_CODE FROM '+@CIMPORTTABLE+' A JOIN LM01106_LINK B
		----			ON A.CODE=B.REF_CODE'
		----PRINT @CCMD
		----EXEC SP_EXECUTESQL @CCMD
		
		
		
		
		SET @CSTEP=350
		IF OBJECT_ID('#NEW_LEDGERS','U') IS NOT NULL
			DROP TABLE #NEW_LEDGERS
		CREATE TABLE #NEW_LEDGERS(CODE VARCHAR(10),AC_NAME VARCHAR(100))
		
		SET @CSTEP=380
		SET @CCMD = N'INSERT INTO #NEW_LEDGERS(CODE,AC_NAME) 
		              SELECT A.CODE,A.AC_NAME FROM '+@CIMPORTTABLE+'  A 
		              WHERE ISNULL(A.AC_CODE,'''')='''' '
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD

		SET @CSTEP=400
		WHILE (SELECT TOP 1 'U' FROM #NEW_LEDGERS) = 'U'
		BEGIN
			    SELECT TOP 1 @CAC_NAME =AC_NAME,@CREFCODE=CODE FROM #NEW_LEDGERS
				SET @CSTEP=410
				LBLNEXTKEY:
				EXEC GETNEXTKEY 'LM01106','AC_CODE',10,@LOCATINID,1,'',2,@CAC_CODEVAL OUTPUT     
				
				SET @CSTEP=430    
				IF ISNULL(@CAC_CODEVAL,'')=''
				BEGIN
						SET @CERRMSG = 'P:SP3S_IMPORT_LEDGER, STEP: '+@CSTEP+', MESSAGE: ERROR GENERATING AC_CODE...'    
						GOTO EXIT_PROC
				END
				     
				SET @CSTEP=440   
				IF EXISTS(SELECT TOP 1 'U' FROM LM01106 WHERE AC_CODE=@CAC_CODEVAL)
					GOTO LBLNEXTKEY
				
				SET @CSTEP=460
				SET @CCMD=N'UPDATE '+@CIMPORTTABLE+' SET AC_CODE='''+@CAC_CODEVAL+''' ,MAJOR_AC_CODE='''+@CAC_CODEVAL+'''
						    WHERE CODE = '''+@CREFCODE+'''
						    AND AC_NAME='''+@CAC_NAME+''' '
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD
				
				SET @CSTEP=480
				DELETE #NEW_LEDGERS WHERE AC_NAME = @CAC_NAME AND CODE = @CREFCODE
		END
		
		
		SET  @CSTEP=500
		SET @CCMD= N'INSERT INTO LM01106_LINK(REF_CODE,AC_CODE) SELECT A.CODE AS REF_CODE,A.AC_CODE FROM '+@CIMPORTTABLE+' A
					LEFT OUTER JOIN LM01106_LINK  B ON A.CODE = B.REF_CODE WHERE  B.REF_CODE IS NULL'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET  @CSTEP=505
		SET @CCMD =N'UPDATE '+@CIMPORTTABLE+' SET SALES_AC_CODE = ''0000000000'' WHERE ISNULL(SALES_AC_CODE,'''') = '''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET  @CSTEP=510
		IF OBJECT_ID('#AC_NAME','U') IS NOT NULL
			DROP TABLE #AC_NAME
		CREATE TABLE #AC_NAME(NAME VARCHAR(1000))
		
		SET @CCMD = N'INSERT INTO #AC_NAME(NAME) 
					SELECT AC_NAME AS NAME FROM '+@CIMPORTTABLE+' GROUP BY AC_NAME HAVING COUNT(AC_NAME) > 1'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET  @CSTEP=520
		SET @CCMD = 'UPDATE A SET A.AC_NAME = A.AC_NAME+'' ''+''(''+A.AC_CODE+'')'' FROM '+@CIMPORTTABLE+' A JOIN #AC_NAME B
					 ON A.AC_NAME = B.NAME'
		
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD	 

		SET @CCMD = ' Update a set MAJOR_AC_CODE=a.Ac_code  from  '+@CIMPORTTABLE+' A  where MAJOR_AC_CODE=''0000000000'' and AC_CODE<>''0000000000'''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD	 

		SET @CCMD = ' Update a set mrp_calc_mode=1  from  '+@CIMPORTTABLE+' A  where AC_CODE<>''0000000000'' AND ISNULL(mrp_calc_mode,0)<=0'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		--PUR_CAL_METHOD
		SET @CCMD = ' Update a set PUR_CAL_METHOD=1  from  '+@CIMPORTTABLE+' A  where AC_CODE<>''0000000000'' AND ISNULL(PUR_CAL_METHOD,0)<=0'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD

		--cd_calc_based_on
		SET @CCMD = ' Update a set cd_calc_based_on=1  from  '+@CIMPORTTABLE+' A  where AC_CODE<>''0000000000'' AND ISNULL(cd_calc_based_on,0)<=0'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
	
		SET  @CSTEP=550
		EXEC UPDATEMASTERXN 
			@CSOURCEDB = @CDB_NAME,
			@CSOURCETABLE = @CIMPORTTABLE,
			@CDESTDB = @CDB_NAME,
			@CDESTTABLE = 'LM01106',
			@CKEYFIELD1 = 'AC_CODE',
			@CKEYFIELD2 = '',
			@CKEYFIELD3 = '',
			@LINSERTONLY= 0,
			@CFILTERCONDITION = '',
			@LUPDATEXNS = 0,
			@CXNTYPE = '',
			@LUPDATEONLY = 0,
			@CUSERID = '',
			@BALWAYSUPDATE = 1
			
		SET  @CSTEP=600
		EXEC UPDATEMASTERXN 
			@CSOURCEDB = @CDB_NAME,
			@CSOURCETABLE = @CIMPORTTABLE,
			@CDESTDB = @CDB_NAME,
			@CDESTTABLE = 'LMP01106',
			@CKEYFIELD1 = 'AC_CODE',
			@CKEYFIELD2 = '',
			@CKEYFIELD3 = '',
			@LINSERTONLY= 0,
			@CFILTERCONDITION = '',
			@LUPDATEXNS = 0,
			@CXNTYPE = '',
			@LUPDATEONLY = 0,
			@CUSERID = '',
			@BALWAYSUPDATE = 1
			
		--ADDED ON 17 AUG 2018	
		SET @CSTEP=610
		SET @CCMD = N'INSERT LM_BANK_DETAIL (AC_CODE, BANK_NAME, ACCOUNT_NO, IFSC_CODE, LAST_UPDATE )  
		SELECT AC_CODE, BANK_NAME, ACCOUNT_NO, IFSC_CODE, GETDATE() FROM '+@CIMPORTTABLE+';'
		PRINT @CCMD  
		EXEC SP_EXECUTESQL @CCMD    

		SET @CSTEP=620
		SET @CCMD = N'INSERT CONTACT_PERSONS_MST (AC_CODE, CONTACT_PERSON_NAME, DESIGNATION, PHONES, EMAIL, ROW_ID, REFERENCE, WHATSAPP_NO)  
		SELECT AC_CODE, CONTACT_PERSON_NAME, DESIGNATION, PHONES, EMAIL, NEWID() ROW_ID, 0 REFERENCE, WHATSAPP_NO1 FROM '+@CIMPORTTABLE+';'
		PRINT @CCMD  
		EXEC SP_EXECUTESQL @CCMD  
  		--ADDED ON 17 AUG 2018
  			
	END TRY
	
	BEGIN CATCH
	   SET @CERRMSG='P: SP3S_IMPORT_LEDGER, STEP: '+@CSTEP+' MESSAGE: '+ERROR_MESSAGE()
	END CATCH
	
	EXIT_PROC:
	IF(@@TRANCOUNT>0 AND ISNULL(@CERRMSG,'') = '')
	   BEGIN
		 COMMIT TRANSACTION
		 SET @CCMD = 'IF OBJECT_ID('''+@CIMPORTTABLE+''',''U'') IS NOT NULL
					DROP TABLE  '+@CIMPORTTABLE+''
		 PRINT @CCMD
		 EXEC SP_EXECUTESQL @CCMD
		 SELECT '' AS ERRMSG
	   END
	ELSE
	   BEGIN
		 ROLLBACK TRANSACTION
		 SELECT @CERRMSG AS ERRMSG
	   END		
END




