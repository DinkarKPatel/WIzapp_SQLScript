CREATE PROCEDURE DBO.SP3S_GETSAP_INVOICEDATA      
(      
 @CPARTY_ERP_CODE VARCHAR(100)      
,@NINPUTMODE INT      
,@CINV_ID VARCHAR(100)=''      
)      
AS      
BEGIN      
      
BEGIN TRY      
   SET NOCOUNT ON;      
   BEGIN TRANSACTION      
 --DECLARE LOCAL VARIABLE      
   DECLARE @CAC_CODE VARCHAR(100),@CSENDPARA6 VARCHAR(200),@CINVID VARCHAR(100)      
          ,@CQUERY NVARCHAR(MAX),@ROW_COUNT INT      
          ,@CDESTINATIONDB VARCHAR(100)      
   SET @CDESTINATIONDB= DB_NAME()+'_TEMP..'      
 IF @NINPUTMODE = 1      
   BEGIN      
     --SELECT AC_CODE FROM LMP0106 TABLE BASED ON PARTY_ERP_CODE PASS THROUGH PROCEDURE PARAMATER      
     SELECT @CAC_CODE=AC_CODE FROM DBO.LMP01106 WITH(NOLOCK) WHERE PARTY_ERP_CODE = @CPARTY_ERP_CODE      
          
     ---SELECT TOP ONE INV_ID BASED ON AC_CODE AND INV_ID NOT EXISTS INTO ERP_INVOICE_LOG TABLE      
     SELECT TOP 1 @CINVID = INM.INV_ID FROM DBO.INM01106 INM WITH(NOLOCK)      
     LEFT JOIN DBO.ERP_INVOICE_LOG L WITH(NOLOCK)  ON INM.INV_ID=L.INV_ID      
     WHERE L.INV_ID IS  NULL AND INM.AC_CODE=@CAC_CODE      
          
    IF ISNULL(@CINVID,'') <> ''      
      BEGIN      
        --DELETE TABLE BEFOUR INSERT DATA      
        SET @CQUERY='IF OBJECT_ID('''+@CDESTINATIONDB+'TMP_WSLEXPORT_'+RTRIM(LTRIM(REPLACE(@CINVID,'-','_')))+''') IS NOT NULL       
                     DROP TABLE '+@CDESTINATIONDB+'[TMP_WSLEXPORT_'+RTRIM(LTRIM(REPLACE(@CINVID,'-','_')))+']'      
        PRINT(@CQUERY)      
        EXEC SP_EXECUTESQL @CQUERY      
        --SELECT ALL REQUIRED DETAILS AND INSERT INTO TEMP TABLE      
  SET @CQUERY =N'SELECT S1.PRODUCT_CODE,T1.RATE AS PURCHASE_PRICE,B1.ARTICLE_NO      
     ,S1.BARCODE_CODING_SCHEME AS CODING_SCHEME,D.SECTION_NAME,C1.SUB_SECTION_NAME,E.PARA1_NAME      
     ,F.PARA2_NAME ,G.PARA3_NAME,FR.FORM_NAME,H.PARA4_NAME,I.PARA5_NAME,      
     J.PARA6_NAME AS PARA6_NAME  ,B1.ARTICLE_DESC,B.MANUAL_INV_NO AS INV_NO,B.INV_DT,      
     UOM.UOM_NAME,T1.QUANTITY,S1.MRP,T1.RATE AS WS_PRICE,T1.DISCOUNT_PERCENTAGE,T1.DISCOUNT_AMOUNT,      
     B1.ALIAS AS ARTICLE_ALIAS,B1.ARTICLE_NAME,S1.ONLINE_PRODUCT_CODE,S1.VENDOR_EAN_NO,FIN_YEAR      
     , NEWID() AS ROW_ID,B1.STOCK_NA,S1.FIX_MRP      
     ,T1.ITEM_FORM_ID AS FORM_ID,S1.ARTICLE_CODE AS ARTICLE_CODE,S1.HSN_CODE AS HSN_CODE,
     HM.TAXABLE_ITEM,HM.HSN_TYPE,HM.GST_VARIATION ,HM.GST_CAL_BASIS,
     HD.TAX_PERCENTAGE,HD.RATE_CUTOFF,HD.RATE_CUTOFF_TAX_PERCENTAGE,HD.WEF
           
     INTO '+@CDESTINATIONDB+'[TMP_WSLEXPORT_'+RTRIM(LTRIM(REPLACE(@CINVID,'-','_')))+']      
     FROM IND01106 T1 (NOLOCK)      
     JOIN INM01106 B (NOLOCK)  ON B.INV_ID=T1.INV_ID       
     JOIN SKU S1 (NOLOCK) ON S1.PRODUCT_CODE=T1.PRODUCT_CODE         
     JOIN ARTICLE B1 (NOLOCK) ON B1.ARTICLE_CODE = S1.ARTICLE_CODE        
     JOIN SECTIOND C1 (NOLOCK) ON C1.SUB_SECTION_CODE = B1.SUB_SECTION_CODE        
     JOIN SECTIONM D (NOLOCK) ON D.SECTION_CODE = C1.SECTION_CODE        
     LEFT OUTER JOIN ARTICLE_FIX_ATTR ATTR  (NOLOCK) ON B1.ARTICLE_CODE = ATTR.ARTICLE_CODE 
LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE
LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE
LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE
LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE
LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE
LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE
LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE
LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE
LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE
LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE
LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE
LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE
LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE
LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE
LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE
LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE
LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE
LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE
LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE
LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE
LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE
LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE
LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE
LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE
LEFT OUTER JOIN ATTR25_MST AT25(NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE        
     JOIN PARA1 E (NOLOCK) ON E.PARA1_CODE = S1.PARA1_CODE        
     JOIN PARA2 F (NOLOCK) ON F.PARA2_CODE = S1.PARA2_CODE        
     JOIN PARA3 G (NOLOCK) ON G.PARA3_CODE = S1.PARA3_CODE        
     JOIN PARA4 H (NOLOCK) ON H.PARA4_CODE = S1.PARA4_CODE        
     JOIN PARA5 I (NOLOCK) ON I.PARA5_CODE = S1.PARA5_CODE        
     JOIN PARA6 J (NOLOCK) ON J.PARA6_CODE = S1.PARA6_CODE        
     JOIN LM01106 K (NOLOCK) ON K.AC_CODE=S1.AC_CODE         
     JOIN UOM (NOLOCK) ON UOM.UOM_CODE=B1.UOM_CODE      
     JOIN FORM FR (NOLOCK)ON T1.ITEM_FORM_ID= FR.FORM_ID       
     JOIN LM01106 L (NOLOCK) ON L.AC_CODE = S1.AC_CODE 
     JOIN HSN_MST HM(NOLOCK) ON HM.HSN_CODE=T1.HSN_CODE
     JOIN HSN_DET HD(NOLOCK) ON HD.HSN_CODE=HM.HSN_CODE      
     WHERE B.INV_ID = '''+@CINVID+''''      
       PRINT(@CQUERY)      
       EXEC SP_EXECUTESQL @CQUERY      
       SET @ROW_COUNT = @@ROWCOUNT    
           
      END      
          
      --IF RECORDS INSERT INTO TEMP TABLE      
      IF ISNULL(@ROW_COUNT,0) <> 0      
         BEGIN      
           SELECT 'TMP_WSLEXPORT_'+RTRIM(LTRIM(REPLACE(@CINVID,'-','_'))) AS [SOURCE_TABLE],'' AS [ERRMSG],@CINVID AS [INV_ID]      
         END      
      ELSE      
          BEGIN      
            SELECT '' AS [SOURCE_TABLE],'NO RECORDS FOUND' AS [ERRMSG],@CINVID AS [INV_ID]      
          END      
    END      
  --FOR ACKNOWLGEDMENT      
  IF @NINPUTMODE = 2      
    BEGIN      
         
      INSERT INTO DBO.ERP_INVOICE_LOG(INV_ID,LAST_SHINK_DATE)      
      SELECT @CINV_ID, GETDATE()      
            
      --SET @CQUERY= N'DROP TABLE '+@CDESTINATIONDB+'TMP_WSLEXPORT_'+@CINV_ID+''      
       SET @CQUERY= N'IF OBJECT_ID('''+@CDESTINATIONDB+'TMP_WSLEXPORT_'+RTRIM(LTRIM(REPLACE(@CINVID,'-','_')))+''') IS NOT NULL      
                      DROP TABLE '+@CDESTINATIONDB+'TMP_WSLEXPORT_'+RTRIM(LTRIM(REPLACE(@CINVID,'-','_')))+''      
      PRINT (@CQUERY)      
       EXEC SP_EXECUTESQL @CQUERY      
             
       SELECT '' AS SOURCE_TABLE ,'' AS ERRMSG , @CINV_ID AS [INV_ID]      
           
    END        
    COMMIT TRANSACTION;      
END TRY      
BEGIN CATCH      
   IF @@TRANCOUNT > 0      
      ROLLBACK;      
   SELECT '' AS [SOURCE_TABLE],'ERROR MESSAGE ||'+ERROR_MESSAGE()+ '||'+ERROR_PROCEDURE() AS [ERRMSG],'' AS [INV_ID]      
END CATCH      
END
