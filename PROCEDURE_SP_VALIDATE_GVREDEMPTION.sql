CREATE PROCEDURE SP_VALIDATE_GVREDEMPTION--(LocId 3 digit change by Sanjay:06-11-2024)
(
	@NSPID INT=0,
	@NMODE INT,	
	@CGVSRNO VARCHAR(50)='',
	@CGVSCRATCHNO VARCHAR(50)='',
	@BGVSOLD BIT=0,
	@CLOCID VARCHAR(4)='',
	@CMEMOID VARCHAR(40)='',
	@NBILLAMT NUMERIC(10,2)=0,
	@BCALLEDFROMBATCHMODE BIT=0
)
--WITH ENCRYPTION
AS
BEGIN

	---- @NMODE ---- 0. CALLED FROM CASHMEMO PAYMENT WINDOW Gv Scan
				---- 1. CALLED FROM CASHMEMO PAYMENT WINDOW FOR VALIDATING THE GV & GET THE DENOMINATION ALSO
				---- 2. CALLED FROM CASHMEMO SAVE CLICK TO FINALLY VALIDATE THE GV'S REDEEMED
				---- 3. CALLED FROM OUTSTANDING RECEIPT MODULE TO DISALLOW EDIT/CANCEL MEMO IN WHICH GV'S ARE SOLD
				----	AND ALSO NEED TO VALIDATE A NEW GV WHICH IS GOING TO BE SOLD WHETHERE REDEEMED OR NOT
	
	
	--SELECT @NSPID S,
	--@NMODE AS M,	
	--@CGVSRNO AS SR,
	--@CGVSCRATCHNO GVS,
	--@BGVSOLD BGV ,
	--@CLOCID CLOC ,
	--@CMEMOID MEMO,
	--@NBILLAMT BILL ,
	--@BCALLEDFROMBATCHMODE  FOR1
	--INTO TMPGV
	--RETURN
				
				
				
	DECLARE @CADJBILLNO VARCHAR(20),@DADJBILLDT DATETIME,@CERRORMSG VARCHAR(MAX),@CCURLOCID VARCHAR(5),
			@CHOLOCID VARCHAR(5),@CCMD NVARCHAR(MAX),@CSTEP VARCHAR(10),@CTEMPTABLE VARCHAR(500),
			@CGVSRNOSEARCH VARCHAR(50),@CVALIDATEGVTHRUAPI VARCHAR(5),@CGVSCHEMECODE VARCHAR(10)
	
	SET @CERRORMSG=''

BEGIN TRY
	
	SET @CSTEP=10
	
		
	SELECT TOP 1 @CCURLOCID = DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
	SELECT TOP 1 @CHOLOCID = [VALUE] FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='HO_LOCATION_ID'

	IF ISNULL(@CCURLOCID,'')=''
	 BEGIN
		SET @CERRORMSG =' LOCATION ID CAN NOT BE BLANK  '  
		GOTO END_PROC    
	 END

	
	SELECT TOP 1 @CVALIDATEGVTHRUAPI=VALUE FROM CONFIG WHERE CONFIG_OPTION='VALIDATE_GV_THRU_API'
	
	SET @CVALIDATEGVTHRUAPI=ISNULL(@CVALIDATEGVTHRUAPI,'')
	
	
	IF @CHOLOCID<>@CCURLOCID AND @CVALIDATEGVTHRUAPI<>'1'
		SET @CLOCID = @CCURLOCID
		
	SET @CSTEP=20
	
	IF OBJECT_ID('TEMPDB..#TMPGVREDEMPTION','U') IS NOT NULL
		DROP TABLE #TMPGVREDEMPTION
	
	SELECT A.GV_SRNO,B.GV_SCRATCH_NO,A.DENOMINATION,CONVERT(BIT,0) AS GV_SOLD,CONVERT(VARCHAR(MAX),'') AS ERRMSG,
	GV_TYPE,CONVERT(BIT,0) AS VALIDATE_THRU_API	INTO #TMPGVREDEMPTION 
	FROM SKU_GV_MST A
	JOIN GV_MST_INFO B ON A.GV_SRNO=B.GV_SRNO 
	WHERE 1=2
	
	SET @CSTEP=30		
	IF  @CGVSRNO=''
	BEGIN
		SET @CTEMPTABLE='TMP_GV_REDEEM_'+LTRIM(RTRIM(STR(@NSPID)))
		IF OBJECT_ID(@CTEMPTABLE,'U') IS NULL
		BEGIN
			SET @CERRORMSG='GV DETAILS DATA TABLE NOT AVAILABLE...PLEASE CHECK'
			GOTO END_PROC
		END
		
	
		SET @CCMD=N'INSERT #TMPGVREDEMPTION (GV_SRNO,GV_SCRATCH_NO,DENOMINATION,GV_SOLD,GV_TYPE)
					SELECT A.GV_SRNO,A.GV_SCRATCH_NO,0,A.GV_SOLD,ISNULL(B.GV_TYPE,1)
					FROM  TMP_GV_REDEEM_'+LTRIM(RTRIM(STR(@NSPID)))+' A
					LEFT OUTER JOIN SKU_GV_MST B ON A.GV_SRNO=B.GV_SRNO'
	END				
	ELSE
		SET @CCMD=N'INSERT #TMPGVREDEMPTION (GV_SRNO,GV_SCRATCH_NO,DENOMINATION,GV_SOLD,GV_TYPE)
				    SELECT '''+@CGVSRNO+''' AS GV_SRNO,'''+@CGVSCRATCHNO+''' AS GV_SCRATCH_NO,0,'+
				    (CASE WHEN @BGVSOLD=1 THEN '1' ELSE '0' END)+' AS GV_SOLD,0'
	PRINT ISNULL(@CCMD,'NULL CMD')				
	EXEC SP_EXECUTESQL @CCMD			

	IF @nMode=0
		GOTO LAST

	UPDATE A SET GV_TYPE=ISNULL(B.GV_TYPE,0) 
	FROM #TMPGVREDEMPTION A
	LEFT OUTER JOIN SKU_GV_MST B ON A.GV_SRNO=B.GV_SRNO
	
	IF @CHOLOCID<>@CCURLOCID OR @NMODE=3
	BEGIN
		SET @CSTEP=40	
		UPDATE A SET ERRMSG='GV HAS BEEN ADJUSTED IN THE BILL NO.:'+C.CM_NO+' DATED:'+CONVERT(VARCHAR,C.CM_DT,105)
		FROM #TMPGVREDEMPTION A 
		JOIN PAYMODE_XN_DET B ON A.GV_SRNO=B.GV_SRNO
		JOIN CMM01106 C ON B.MEMO_ID=C.CM_ID
		JOIN sku_gv_mst d ON d.gv_srno=a.gv_srno
		WHERE B.XN_TYPE='SLS' AND C.CANCELLED=0 AND C.CM_ID<>@CMEMOID 
	END
		
	IF EXISTS (SELECT TOP 1 GV_SRNO FROM #TMPGVREDEMPTION WHERE ISNULL(ERRMSG,'')<>'') OR @NMODE=3
		GOTO END_PROC
		
	
	
	SET @CSTEP=50
	IF EXISTS (SELECT TOP 1  GV_SRNO FROM #TMPGVREDEMPTION  WHERE ISNULL(GV_SOLD,0)=0 AND GV_TYPE=1)
	BEGIN
		UPDATE A  SET GV_SOLD=1 FROM #TMPGVREDEMPTION A
		JOIN ARC_GVSALE_DETAILS B (NOLOCK) ON A.GV_SRNO=B.GV_SRNO
		JOIN ARC01106 C (NOLOCK) ON B.ADV_REC_ID=C.ADV_REC_ID
		WHERE  C.CANCELLED=0
	END
	
	
	
	IF @CHOLOCID=@CCURLOCID OR @BCALLEDFROMBATCHMODE=1 OR @CVALIDATEGVTHRUAPI<>'1'
	BEGIN
		SET @CSTEP=60
		IF EXISTS (SELECT TOP 1 A.GV_SRNO FROM #TMPGVREDEMPTION A 
		           JOIN GV_MST_REDEMPTION B ON A.GV_SRNO=B.GV_SRNO
				   JOIN CMM01106 C ON C.CM_ID=B.REDEMPTION_CM_ID	
				   WHERE ISNULL(B.REDEMPTION_CM_ID,'')<>@CMEMOID 
				   AND ISNULL(B.REDEMPTION_CM_ID,'')<>'' AND C.CANCELLED=0)
		BEGIN
			UPDATE A SET ERRMSG='GV HAS BEEN ADJUSTED ON DATE :'+CONVERT(VARCHAR,REDEEMED_ON,105)+
								' AT LOCATION ID :'+c.location_Code
			FROM #TMPGVREDEMPTION A 
			JOIN GV_MST_REDEMPTION B ON A.GV_SRNO=B.GV_SRNO
			JOIN CMM01106 C ON C.CM_ID=B.REDEMPTION_CM_ID	
			JOIN sku_gv_mst d ON d.gv_srno=a.gv_srno
			WHERE ISNULL(B.REDEMPTION_CM_ID,'')<>@CMEMOID 
			AND ISNULL(B.REDEMPTION_CM_ID,'')<>'' AND C.CANCELLED=0
			
			GOTO END_PROC
		END				   
			
		SET @CSTEP=70
		IF EXISTS (SELECT TOP 1 A.GV_SRNO FROM #TMPGVREDEMPTION A JOIN GV_MST_REDEMPTION B ON A.GV_SRNO=B.GV_SRNO
				  JOIN cmm01106 cmm (NOLOCK) ON cmm.cm_id=b.redemption_cm_id
				   WHERE ISNULL(B.REDEMPTION_CM_ID,'')<>@CMEMOID AND ISNULL(B.REDEMPTION_CM_ID,'')<>''
			       AND ISNULL(B.REDEEMED_AT_DEPT_ID,'')<>@CLOCID)
		BEGIN
			UPDATE A SET ERRMSG='GV HAS BEEN BLOCKED ON DATE :'+CONVERT(VARCHAR,REDEEMED_ON,105)+
								' AT LOCATION ID :'+cmm.location_Code+'....CANNOT REDEEM'
			FROM #TMPGVREDEMPTION A 
			JOIN GV_MST_REDEMPTION B ON A.GV_SRNO=B.GV_SRNO
			JOIN cmm01106 cmm (NOLOCK) ON cmm.cm_id=b.redemption_cm_id
			WHERE ISNULL(B.REDEMPTION_CM_ID,'')<>@CMEMOID AND ISNULL(B.REDEMPTION_CM_ID,'')<>''
			AND ISNULL(B.REDEEMED_AT_DEPT_ID,'')<>@CLOCID
			
			GOTO END_PROC
		END				   				   
			
				   
		SET @CSTEP=80
		IF EXISTS (SELECT TOP 1 A.GV_SRNO FROM #TMPGVREDEMPTION A LEFT OUTER JOIN 
				   SKU_GV_MST B (NOLOCK) ON A.GV_SRNO=B.GV_SRNO
				   WHERE B.GV_SRNO IS NULL AND LEFT(a.gv_srno,2)<>'WC')
		BEGIN
			UPDATE A SET ERRMSG='INVALID GV NO.:'+GV_SRNO+' ENTERED....CANNOT REDEEM' FROM #TMPGVREDEMPTION A
			LEFT OUTER JOIN SKU_GV_MST B (NOLOCK) ON A.GV_SRNO=B.GV_SRNO
			WHERE B.GV_SRNO IS NULL
		
			GOTO END_PROC			
		END
		
		SET @CSTEP=90	
		IF EXISTS (SELECT TOP 1 GV_SRNO FROM #TMPGVREDEMPTION  WHERE ISNULL(GV_SOLD,0)=0 AND GV_TYPE=1)					
		BEGIN
			--select 'check ', * FROM #TMPGVREDEMPTION 
			UPDATE #TMPGVREDEMPTION SET ERRMSG='GV IS NOT SOLD TO ANY CUSTOMER ....CANNOT REDEEM'
			WHERE ISNULL(GV_SOLD,0)=0
		
			GOTO END_PROC			
		END
		
		SET @CSTEP=95
		IF EXISTS (SELECT TOP 1 A.GV_SRNO FROM #TMPGVREDEMPTION A
				   JOIN GV_MST_INFO B (NOLOCK) ON A.GV_SRNO=B.GV_SRNO
					JOIN sku_gv_mst d ON d.gv_srno=a.gv_srno
		   		   WHERE A.GV_SCRATCH_NO<>B.GV_SCRATCH_NO) AND  @CGVSRNO='' 
		BEGIN
			UPDATE A SET ERRMSG='WRONG COMBINATION OF GV NO.'+A.GV_SCRATCH_NO+' & SCRATCH NO. '+ B.GV_SCRATCH_NO+' ENTERED....CANNOT REDEEM'
			FROM #TMPGVREDEMPTION A
			JOIN GV_MST_INFO B (NOLOCK) ON A.GV_SRNO=B.GV_SRNO
			WHERE A.GV_SCRATCH_NO<>B.GV_SCRATCH_NO
			
			GOTO END_PROC			
		END	
		
	
		
		IF EXISTS (SELECT TOP 1 A.GV_SRNO FROM #TMPGVREDEMPTION A JOIN SKU_GV_MST B ON A.GV_SRNO=B.GV_SRNO
				   JOIN sku_gv_mst d ON d.gv_srno=a.gv_srno	
				   WHERE B.DT_EXPIRY<CONVERT(VARCHAR,GETDATE(),110) )
		BEGIN
			UPDATE A SET ERRMSG='GV IS EXPIRED ON DATE :'+CONVERT(VARCHAR,B.DT_EXPIRY,105)+'....CANNOT REDEEM'
			FROM #TMPGVREDEMPTION A 
			JOIN SKU_GV_MST B ON A.GV_SRNO=B.GV_SRNO
			WHERE B.DT_EXPIRY<CONVERT(VARCHAR,GETDATE(),110)
			
			GOTO END_PROC
		END				   				
	END

	IF @CHOLOCID<>@CCURLOCID 
	BEGIN
		IF EXISTS (SELECT TOP 1  GV_SRNO FROM #TMPGVREDEMPTION  WHERE GV_TYPE=2 AND ISNULL(ERRMSG,'')='')
		BEGIN
			UPDATE A SET ERRMSG='GV NO. : '+A.GV_SRNO+' NOT IN STOCK....PLEASE CHECK' 
			FROM #TMPGVREDEMPTION A 
			LEFT OUTER JOIN PMT_GV_MST B (NOLOCK) ON A.GV_SRNO=B.GV_SRNO
			LEFT OUTER JOIN 
			(SELECT GV_SRNO,SUM(QUANTITY) AS QUANTITY
			FROM 
			(SELECT GV_SRNO,COUNT(*) AS QUANTITY FROM PAYMODE_XN_DET 
			 WHERE MEMO_ID=@CMEMOID AND XN_TYPE='SLS' GROUP BY GV_SRNO
			 UNION
			 SELECT GV_SRNO,COUNT(*) AS QUANTITY FROM GV_MST_REDEMPTION
			 WHERE REDEMPTION_CM_ID=@CMEMOID GROUP BY GV_SRNO
			 ) A
			 GROUP BY GV_SRNO) C ON C.GV_SRNO=A.GV_SRNO
			WHERE GV_TYPE=2 AND ISNULL(B.QUANTITY_IN_STOCK,0)+ISNULL(C.QUANTITY,0) <=0 AND ISNULL(ERRMSG,'')=''
		END
	END

LBLFINALSTEP:
	SET @CSTEP=100
	
	IF EXISTS (SELECT TOP 1 * FROM #TMPGVREDEMPTION WHERE ISNULL(ERRMSG,'')<>'')
	BEGIN
		SELECT * FROM #TMPGVREDEMPTION  WHERE ISNULL(ERRMSG,'')<>''
	
		RETURN
	END	
	
	SET @CSTEP=105

	
	UPDATE #TMPGVREDEMPTION SET DENOMINATION=(CASE WHEN ISNULL(B.VALIDATE_WITH_EOSS,0)=1 THEN 0 ELSE B.DENOMINATION END)
	FROM #TMPGVREDEMPTION A
	JOIN SKU_GV_MST B ON A.GV_SRNO=B.GV_SRNO
	
	IF @CCURLOCID=@CHOLOCID OR (@BCALLEDFROMBATCHMODE=1 AND @CVALIDATEGVTHRUAPI<>'1') AND @CGVSRNO=''
	BEGIN
		SELECT TOP 1 @CGVSCHEMECODE=A.SCHEME_CODE FROM GV_SCHEME_MST A JOIN GV_SCHEME_LOCS B ON A.SCHEME_CODE=B.SCHEME_CODE
		WHERE B.DEPT_ID=@CCURLOCID AND CONVERT(VARCHAR,GETDATE(),110) BETWEEN APPLICABLE_FROM_DT AND APPLICABLE_TO_DT
		
		IF ISNULL(@CGVSCHEMECODE,'')<>''
		BEGIN
			EXEC SP3S_GETGVREDEMPTION_SCHEME_1 @CLOCID,@NBILLAMT 	 
		END	
	END	   
	
	IF @CCURLOCID<>@CHOLOCID
		GOTO END_PROC
		
LBLUPDATEREDEEMINFO:
	BEGIN TRAN
	
	SET @CSTEP=110
	
	SET @CCMD=N'INSERT GV_MST_REDEMPTION ( GV_SRNO, REDEEMED_AT_DEPT_ID, REDEEMED_ON, REDEMPTION_CM_ID ) 
				 SELECT A.GV_SRNO, '''+@CLOCID+''' AS REDEEMED_AT_DEPT_ID,GETDATE() AS REDEEMED_ON,
				 '''' AS REDEMPTION_CM_ID FROM #TMPGVREDEMPTION A
				 LEFT OUTER JOIN GV_MST_REDEMPTION B ON A.GV_SRNO=B.GV_SRNO
				 WHERE B.GV_SRNO IS NULL'
	PRINT @CCMD				 
	EXEC SP_EXECUTESQL @CCMD			 
	
END TRY

BEGIN CATCH
	SET @CERRORMSG = 'PROCEDURE SP_VALIDATE_GVREDEMPTION STEP- ' + @CSTEP + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
	PRINT 'ERROR IN CATCH BLOCK:'+@CERRORMSG
	GOTO END_PROC
END CATCH

END_PROC:
	
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')=''
			COMMIT
		ELSE
			ROLLBACK	
	END
	
	UPDATE #TMPGVREDEMPTION SET ERRMSG=ISNULL(@CERRORMSG,'') WHERE ISNULL(ERRMSG,'')=''
	UPDATE #TMPGVREDEMPTION SET VALIDATE_THRU_API=(CASE WHEN @CVALIDATEGVTHRUAPI='1' THEN 1 ELSE 0 END)
	
	IF ISNULL(@CERRORMSG,'')<>'' 
	BEGIN
		IF NOT EXISTS (SELECT TOP 1 * FROM #TMPGVREDEMPTION)
		BEGIN
			SET @CCMD=N'INSERT #TMPGVREDEMPTION (GV_SRNO,GV_SCRATCH_NO,DENOMINATION,GV_SOLD,ERRMSG,gv_type)
						SELECT '''+@CGVSRNO+''' AS GV_SRNO,'''+@CGVSCRATCHNO+''' AS GV_SCRATCH_NO,0,'+
						(CASE WHEN @BGVSOLD=1 THEN '1' ELSE '0' END)+' AS GV_SOLD,'''+
						ISNULL(@CERRORMSG,'')+''',1'
			PRINT @CCMD		    
			EXEC SP_EXECUTESQL @CCMD		
		END
	END

LAST:	
	SELECT a.*,isnull(b.scheme_id,'') as scheme_id  FROM #TMPGVREDEMPTION	a
	LEFT OUTER JOIN sku_gv_mst b ON a.gv_srno=b.gv_srno
	
	
	--IF ISNULL(@CERRORMSG,'')='' AND @NSPID<>0 AND @NMODE IN (1,2) AND @CGVSRNO=''
	--BEGIN
	--	SET @CCMD=N'DROP TABLE TMP_GV_REDEEM_'+LTRIM(RTRIM(STR(@NSPID)))
	--	EXEC SP_EXECUTESQL @CCMD
	--END	
END
--********************************* END OF PROCEDURE SP_VALIDATE_GVREDEMPTION