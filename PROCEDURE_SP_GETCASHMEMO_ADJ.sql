create PROCEDURE SP_GETCASHMEMO_ADJ
(    
	 @DTFROM		DATETIME =''    
	,@DTTO			DATETIME =''    
	,@CWHERE		VARCHAR(10)=''
	,@CFILTER		VARCHAR(MAX)=''    
	,@CUTOFF		FLOAT=0
	,@GST_FILTER	VARCHAR(MAX)=''
)
AS    
--(dinkar) Replace  left(memoid,2) to Location_code 
BEGIN    
SET NOCOUNT ON
 SET @CUTOFF=ISNULL(@CUTOFF,0)
 DECLARE @CCMD01106 VARCHAR(100),@CRPSDET VARCHAR(100)	

 IF OBJECT_ID('TEMPDB..#TABLECM_ID','U') IS NOT NULL
	DROP TABLE #TABLECM_ID
 
 IF OBJECT_ID('TEMPDB..#TABLEPRODUCT_CODE','U') IS NOT NULL
	DROP TABLE #TABLEPRODUCT_CODE
 
CREATE TABLE #TABLECM_ID(CM_ID VARCHAR(50),NET_AMOUNT NUMERIC(10,2))
DECLARE @CCMD VARCHAR(MAX)

IF ISNULL(@CFILTER,'')<>''
BEGIN
	CREATE TABLE #TABLEPRODUCT_CODE (PRODUCT_CODE VARCHAR(100))    
    

	SET @CCMD='SELECT DISTINCT SKU.PRODUCT_CODE 
				FROM  SKU WITH(NOLOCK) 
				JOIN ARTICLE WITH(NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE
				JOIN UOM WITH(NOLOCK)ON ARTICLE.UOM_CODE=UOM.UOM_CODE
				JOIN SECTIOND WITH(NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE
				JOIN SECTIONM WITH(NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE
				JOIN PARA1 WITH(NOLOCK) ON SKU.PARA1_CODE = PARA1.PARA1_CODE
				JOIN PARA2 WITH(NOLOCK) ON SKU.PARA2_CODE = PARA2.PARA2_CODE
				JOIN PARA3 WITH(NOLOCK) ON SKU.PARA3_CODE = PARA3.PARA3_CODE
				JOIN PARA4 WITH(NOLOCK) ON SKU.PARA4_CODE = PARA4.PARA4_CODE
				JOIN PARA5 WITH(NOLOCK) ON SKU.PARA5_CODE = PARA5.PARA5_CODE
				JOIN PARA6 WITH(NOLOCK) ON SKU.PARA6_CODE = PARA6.PARA6_CODE
				JOIN LMV01106 WITH(NOLOCK) ON SKU.AC_CODE = LMV01106.AC_CODE
				LEFT OUTER JOIN ARTICLE_FIX_ATTR ATTR (NOLOCK) ON SKU.ARTICLE_CODE = ATTR.ARTICLE_CODE 
				LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE
				LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE
				LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE
				LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE
				LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE
				LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE
				LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE
				LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE
				LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE
				LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE
				LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE
				LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE
				LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE
				LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE
				LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE
				LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE
				LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE
				LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE
				LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE
				LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE
				LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE
				LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE
				LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE
				LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE
				LEFT OUTER JOIN ATTR25_MST AT25(NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE				
				WHERE ' + (CASE WHEN @CFILTER='' THEN '1=1 '  ELSE @CFILTER END)

	INSERT INTO #TABLEPRODUCT_CODE
	EXEC (@CCMD)

	CREATE INDEX IX_TABLEPRODUCT_CODE ON #TABLEPRODUCT_CODE(PRODUCT_CODE)
END

--B.OLD_MRP=B.MRP OR 

SET @CCMD='SELECT A1.CM_ID,SUM(A1.NET_AMOUNT) AS  NET_AMOUNT 
FROM CMM01106 A1 (NOLOCK)     
JOIN CMD01106 B (NOLOCK) ON B.CM_ID=A1.CM_ID  
JOIN '+(CASE WHEN ISNULL(@CFILTER,'')='' THEN ' SKU ' ELSE ' #TABLEPRODUCT_CODE ' END)+' PC ON PC.PRODUCT_CODE=B.PRODUCT_CODE  
JOIN   
(    
  SELECT A.MEMO_ID,B.PAYMODE_GRP_CODE,SUM(A.AMOUNT) AS [AMOUNT]
  FROM PAYMODE_XN_DET A (NOLOCK)
  JOIN PAYMODE_MST B (NOLOCK) ON B.PAYMODE_CODE=A.PAYMODE_CODE
  JOIN PAYMODE_GRP_MST C (NOLOCK) ON C.PAYMODE_GRP_CODE=B.PAYMODE_GRP_CODE
  WHERE C.PAYMODE_GRP_CODE=''0000001'' AND A.XN_TYPE=''SLS''
  GROUP BY A.MEMO_ID,B.PAYMODE_GRP_CODE
)X ON X.MEMO_ID=A1.CM_ID  
WHERE (ISNULL(A1.PATCHUP_RUN,0)=0) AND A1.NET_AMOUNT=X.AMOUNT     
AND (A1.MEMO_TYPE = ''0'' OR A1.MEMO_TYPE = ''1'')    
AND (A1.CM_DT BETWEEN '''+CONVERT(VARCHAR,@DTFROM,110)+''' AND '''+CONVERT(VARCHAR,@DTTO,110)+''')    
AND A1.CANCELLED=0 AND A1.USER_CODE <> '''+@CWHERE+''' 
AND ISNULL(A1.SUBTOTAL_R,0)=0 
AND (A1.location_code=(SELECT VALUE FROM CONFIG WHERE  CONFIG_OPTION=''LOCATION_ID'')
OR A1.location_code IN (SELECT DEPT_ID FROM LOCATION WHERE  server_loc=1)) '
+CASE @GST_FILTER WHEN '' THEN '' ELSE CHAR(13)+' AND B.GST_PERCENTAGE '+@GST_FILTER END+'
GROUP BY A1.CM_ID '

PRINT @CCMD

INSERT INTO #TABLECM_ID    
EXEC (@CCMD)

CREATE INDEX IX_TABLECM_ID ON #TABLECM_ID(CM_ID)

DELETE T FROM #TABLECM_ID T JOIN CMM01106 C (NOLOCK) ON T.CM_ID=C.CM_ID WHERE C.NET_AMOUNT<=CAST(@CUTOFF AS FLOAT)

--DELETE #TABLECM_ID WHERE CM_ID IN (SELECT NET_AMOUNT FROM CMM01106 (NOLOCK) WHERE CM_DT BETWEEN AND  AND CANCELLED=0)<=CAST(@CUTOFF AS FLOAT)--SAVE 26 FEB 2019


SELECT '' AS CURSOR1,A.* 
FROM CMM01106 A
JOIN #TABLECM_ID B ON A.CM_ID=B.CM_ID     


SET @CCMD01106='TEMP_CMD01106_'+LTRIM(RTRIM(STR(@@SPID)))
SET @CCMD='IF OBJECT_ID('''+@CCMD01106+''' ,''U'') IS NOT NULL    
				DROP TABLE '+@CCMD01106
PRINT @CCMD
--EXECUTE SP_EXECUTESQL @CCMD
EXEC(@CCMD)
    

SET @CCMD='SELECT A.*,CAST((CASE WHEN PC.PRODUCT_CODE IS  NULL  THEN 0 ELSE 1 END) AS BIT) AS [APPLY_DISCOUNT] 
			INTO '+@CCMD01106+'
			FROM CMD01106 A    
			JOIN CMM01106 B (NOLOCK) ON B.CM_ID=A.CM_ID 
			JOIN #TABLECM_ID TCM ON B.CM_ID=TCM.CM_ID
			LEFT OUTER JOIN '+(CASE WHEN ISNULL(@CFILTER,'')='' THEN ' SKU ' ELSE ' #TABLEPRODUCT_CODE ' END)+' PC ON PC.PRODUCT_CODE=A.PRODUCT_CODE'     
+CASE @GST_FILTER WHEN '' THEN '' ELSE CHAR(13)+'WHERE B.CM_ID IN (SELECT DISTINCT CM_ID FROM CMD01106 (NOLOCK) WHERE gst_percentage '+@GST_FILTER+')' END						
PRINT @CCMD
EXEC (@CCMD)
     
SET @CCMD='UPDATE '+@CCMD01106+' SET OLD_MRP = (CASE WHEN OLD_MRP=0 THEN MRP ELSE OLD_MRP END),
                                     OLD_NET = (CASE WHEN ISNULL(OLD_NET,0)=0 THEN NET ELSE OLD_NET END)'      
PRINT @CCMD
EXEC (@CCMD)
    
SET @CCMD='CREATE INDEX IX_GETCASHMEMO_CMD01106_PRODUCT_CODE ON '+@CCMD01106+'(PRODUCT_CODE)'
PRINT @CCMD
EXEC (@CCMD)

SET @CCMD='SELECT '''' AS CURSOR2,TMP.*,A.MRP, A.PURCHASE_PRICE, A.WS_PRICE, B.ARTICLE_NO, B.ARTICLE_NAME, B.CODING_SCHEME,     
  B.DISCON,D.SECTION_CODE,SECTION_NAME,C.SUB_SECTION_CODE,SUB_SECTION_NAME, E.PARA1_CODE, E.PARA1_NAME, E.PARA1_ORDER, F.PARA2_CODE,     
  F.PARA2_NAME, F.PARA2_ORDER, G.PARA3_CODE, G.PARA3_NAME,  H.PARA4_CODE, H.PARA4_NAME,     
   I.PARA5_CODE, I.PARA5_NAME,  J.PARA6_CODE, J.PARA6_NAME,     
  B.ARTICLE_DESC,K.AC_NAME,A.INV_NO,A.INV_DT,A.CHALLAN_NO,K.ALIAS, G.INACTIVE AS PARA3_INACTIVE,    
  UOM.UOM_CODE,UOM.UOM_NAME,UOM.UOM_TYPE,A.FIX_MRP,A.PRODUCT_NAME,B.STOCK_NA
   ,AT1.attr1_key_name,AT2.attr2_key_name,AT3.attr3_key_name,AT4.attr4_key_name,AT5.attr5_key_name,AT6.attr6_key_name,
   AT7.attr7_key_name,AT8.attr8_key_name,AT9.attr9_key_name,AT10.attr10_key_name,AT11.attr11_key_name,AT12.attr12_key_name,
   AT13.attr13_key_name,AT14.attr14_key_name,AT15.attr15_key_name,AT16.attr16_key_name,AT17.attr17_key_name,AT18.attr18_key_name,
   AT19.attr19_key_name,AT20.attr20_key_name,AT21.attr21_key_name,AT22.attr22_key_name,AT23.attr23_key_name,AT24.attr24_key_name,
	AT25.attr25_key_name, 
  CONVERT(NUMERIC(14,3), TMP.QUANTITY * TMP.MRP) AS [NET_VALUE]     
FROM '+@CCMD01106+' TMP    
JOIN #TABLECM_ID TCMD ON TMP.CM_ID=TCMD.CM_ID
JOIN SKU A (NOLOCK) ON A.PRODUCT_CODE=TMP.PRODUCT_CODE    
JOIN ARTICLE B (NOLOCK) ON B.ARTICLE_CODE = A.ARTICLE_CODE    
JOIN SECTIOND C (NOLOCK) ON C.SUB_SECTION_CODE = B.SUB_SECTION_CODE    
JOIN SECTIONM D (NOLOCK) ON D.SECTION_CODE = C.SECTION_CODE    
LEFT OUTER JOIN ARTICLE_FIX_ATTR ATTR  (NOLOCK) ON A.ARTICLE_CODE = ATTR.ARTICLE_CODE 
LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE
LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE
LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE
LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE
LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE
LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE
LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE
LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE
LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE
LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE
LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE
LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE
LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE
LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE
LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE
LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE
LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE
LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE
LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE
LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE
LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE
LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE
LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE
LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE
LEFT OUTER JOIN ATTR25_MST AT25 (NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE
JOIN PARA1 E (NOLOCK) ON E.PARA1_CODE = A.PARA1_CODE    
JOIN PARA2 F (NOLOCK) ON F.PARA2_CODE = A.PARA2_CODE    
JOIN PARA3 G (NOLOCK) ON G.PARA3_CODE = A.PARA3_CODE    
JOIN PARA4 H (NOLOCK) ON H.PARA4_CODE = A.PARA4_CODE    
JOIN PARA5 I (NOLOCK) ON I.PARA5_CODE = A.PARA5_CODE    
JOIN PARA6 J (NOLOCK) ON J.PARA6_CODE = A.PARA6_CODE    
JOIN LM01106 K (NOLOCK) ON K.AC_CODE=A.AC_CODE     
JOIN UOM (NOLOCK) ON UOM.UOM_CODE=B.UOM_CODE'
+CASE @GST_FILTER WHEN '' THEN '' ELSE CHAR(13)+'WHERE TMP.GST_PERCENTAGE '+@GST_FILTER END   
print '--CURSOR 2 '+CHAR(13)+@CCMD+CHAR(13)
EXEC (@CCMD)



SET @CCMD='SELECT  '''' AS CURSOR3,A2.*,A3.*    
FROM PAYMODE_XN_DET A2 (NOLOCK)     
JOIN PAYMODE_MST A3 (NOLOCK) ON A3.PAYMODE_CODE=A2.PAYMODE_CODE     
JOIN CMM01106 A1 (NOLOCK) ON A1.CM_ID=A2.MEMO_ID    
JOIN #TABLECM_ID TCMD ON A1.CM_ID=TCMD.CM_ID
WHERE A2.XN_TYPE=''SLS''' 
+CASE @GST_FILTER WHEN '' THEN '' ELSE CHAR(13)+'AND TCMD.CM_ID IN (SELECT DISTINCT CM_ID FROM CMD01106 (NOLOCK) WHERE gst_percentage '+@GST_FILTER+')' END
EXEC(@CCMD)


SET @CCMD='SELECT '''' AS CURSOR4,A.*,A.REF_CM_ID AS [PACK_SLIP_REF_CM_ID],
A.REF_CM_ID AS [PACK_SLIP_ID]   
FROM RPS_MST A  
JOIN #TABLECM_ID TCMD ON A.REF_CM_ID=TCMD.CM_ID'
+CASE @GST_FILTER WHEN '' THEN '' ELSE CHAR(13)+'AND TCMD.CM_ID IN (SELECT DISTINCT CM_ID FROM CMD01106 (NOLOCK) WHERE gst_percentage '+@GST_FILTER+')' END
EXEC(@CCMD)


SET @CRPSDET='TEMP_RPS_'+LTRIM(RTRIM(STR(@@SPID)))
  
SET @CCMD='IF OBJECT_ID('''+@CRPSDET+''',''U'') IS NOT NULL    
				DROP TABLE '+@CRPSDET
EXEC (@CCMD)
    
SET @CCMD='SELECT A.*,B.REF_CM_ID AS [PACK_SLIP_REF_CM_ID] ,
	CAST((CASE WHEN PC.PRODUCT_CODE IS  NULL  THEN 0 ELSE 1 END) AS BIT) AS [APPLY_DISCOUNT]
	INTO '+@CRPSDET+'    
	FROM RPS_DET A    
	JOIN RPS_MST  B (NOLOCK) ON B.CM_ID=A.CM_ID    
	JOIN #TABLECM_ID TCMD ON B.REF_CM_ID=TCMD.CM_ID
	LEFT OUTER JOIN '+(CASE WHEN ISNULL(@CFILTER,'')='' THEN ' SKU' ELSE ' #TABLEPRODUCT_CODE ' END)+' PC ON PC.PRODUCT_CODE=A.PRODUCT_CODE'       
+CASE @GST_FILTER WHEN '' THEN '' ELSE CHAR(13)+'WHERE TCMD.CM_ID IN (SELECT DISTINCT CM_ID FROM CMD01106 (NOLOCK) WHERE gst_percentage '+@GST_FILTER+')' END	
EXEC (@CCMD)     

--UPDATE #GETCASHMEMO_RPS_DET SET OLD_MRP = (CASE WHEN OLD_MRP=0 THEN MRP ELSE OLD_MRP END)      

SET @CCMD='CREATE INDEX IX_GETCASHMEMO_RPS_DET_PRODUCT_CODE ON '+@CRPSDET+'(PRODUCT_CODE)'
EXEC (@CCMD) 
    
SET @CCMD='SELECT '''' AS CURSOR5,TMP.*,A.MRP, A.PURCHASE_PRICE, A.WS_PRICE, B.ARTICLE_NO, B.ARTICLE_NAME, B.CODING_SCHEME,     
  B.DISCON,D.SECTION_CODE,SECTION_NAME,C.SUB_SECTION_CODE,SUB_SECTION_NAME, E.PARA1_CODE, E.PARA1_NAME, E.PARA1_ORDER, F.PARA2_CODE,     
  F.PARA2_NAME, F.PARA2_ORDER, G.PARA3_CODE, G.PARA3_NAME,  H.PARA4_CODE, H.PARA4_NAME,     
   I.PARA5_CODE, I.PARA5_NAME,  J.PARA6_CODE, J.PARA6_NAME,     
  B.ARTICLE_DESC,K.AC_NAME,A.INV_NO,A.INV_DT,A.CHALLAN_NO,K.ALIAS, G.INACTIVE AS PARA3_INACTIVE,    
  UOM.UOM_CODE,UOM.UOM_NAME,UOM.UOM_TYPE,A.FIX_MRP,A.PRODUCT_NAME,B.STOCK_NA
   ,AT1.attr1_key_name,AT2.attr2_key_name,AT3.attr3_key_name,AT4.attr4_key_name,AT5.attr5_key_name,AT6.attr6_key_name,
   AT7.attr7_key_name,AT8.attr8_key_name,AT9.attr9_key_name,AT10.attr10_key_name,AT11.attr11_key_name,AT12.attr12_key_name,
   AT13.attr13_key_name,AT14.attr14_key_name,AT15.attr15_key_name,AT16.attr16_key_name,AT17.attr17_key_name,AT18.attr18_key_name,
   AT19.attr19_key_name,AT20.attr20_key_name,AT21.attr21_key_name,AT22.attr22_key_name,AT23.attr23_key_name,AT24.attr24_key_name,
	AT25.attr25_key_name    
FROM '+@CRPSDET+' TMP
JOIN SKU A ON A.PRODUCT_CODE=TMP.PRODUCT_CODE    
JOIN ARTICLE B ON B.ARTICLE_CODE = A.ARTICLE_CODE    
JOIN SECTIOND C ON C.SUB_SECTION_CODE = B.SUB_SECTION_CODE    
JOIN SECTIONM D ON D.SECTION_CODE = C.SECTION_CODE    
LEFT OUTER JOIN ARTICLE_FIX_ATTR ATTR  (NOLOCK) ON A.ARTICLE_CODE = ATTR.ARTICLE_CODE 
LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE
LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE
LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE
LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE
LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE
LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE
LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE
LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE
LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE
LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE
LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE
LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE
LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE
LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE
LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE
LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE
LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE
LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE
LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE
LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE
LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE
LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE
LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE
LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE
LEFT OUTER JOIN ATTR25_MST AT25(NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE
JOIN PARA1 E ON E.PARA1_CODE = A.PARA1_CODE    
JOIN PARA2 F ON F.PARA2_CODE = A.PARA2_CODE    
JOIN PARA3 G ON G.PARA3_CODE = A.PARA3_CODE    
JOIN PARA4 H ON H.PARA4_CODE = A.PARA4_CODE    
JOIN PARA5 I ON I.PARA5_CODE = A.PARA5_CODE    
JOIN PARA6 J ON J.PARA6_CODE = A.PARA6_CODE    
JOIN LM01106 K ON K.AC_CODE=A.AC_CODE     
JOIN UOM ON UOM.UOM_CODE=B.UOM_CODE'    
EXEC (@CCMD) 

SET @CCMD=' SELECT CURSOR6,MRP,SUM(QTY)QTY,SUM(DISC_PER)DISC_PER ,SUM(DISC_AMT)DISC_AMT FROM 

            (
				SELECT '''' AS CURSOR6,MRP,SUM(QUANTITY) AS  [QTY],
				CONVERT(NUMERIC(5,3),0) AS [DISC_PER],CONVERT(NUMERIC(14,3),0) AS [DISC_AMT]
				FROM '+@CCMD01106+'
				WHERE [APPLY_DISCOUNT]=1 
				GROUP BY MRP
				UNION
				SELECT '''' AS CURSOR6,MRP,SUM(QUANTITY) AS [QTY],CONVERT(NUMERIC(5,3),0) AS [DISC_PER],CONVERT(NUMERIC(14,3),0) AS [DISC_AMT]
				FROM '+@CRPSDET+'
				WHERE [APPLY_DISCOUNT]=1 
			    GROUP BY MRP
			)B
			WHERE ' + (CASE WHEN @CFILTER='' THEN '1=1 '  ELSE @CFILTER END)+'
			GROUP BY CURSOR6,MRP'
EXEC (@CCMD) 


SET @CCMD='SELECT '''' AS CURSOR7,B.*
FROM   RPS_MST B 
JOIN #TABLECM_ID TCMD ON B.REF_CM_ID=TCMD.CM_ID'
+CASE @GST_FILTER WHEN '' THEN '' ELSE CHAR(13)+'WHERE TCMD.CM_ID IN (SELECT DISTINCT CM_ID FROM CMD01106 (NOLOCK) WHERE gst_percentage '+@GST_FILTER+')' END	
EXEC(@CCMD)

SET @CCMD='IF OBJECT_ID('''+@CCMD01106+''' ,''U'') IS NOT NULL    
				DROP TABLE '+@CCMD01106
		   +' IF OBJECT_ID('''+@CRPSDET+''' ,''U'') IS NOT NULL    
				DROP TABLE '+@CRPSDET
PRINT @CCMD
--EXECUTE SP_EXECUTESQL @CCMD
EXEC (@CCMD)   
END
--END OF PROCEDURE - SP_GETCASHMEMO_ADJ
/*
EXEC SP_GETCASHMEMO_ADJ 
@DTFROM='2019-04-01',
@DTTO='2019-04-17',
@CWHERE='',
@CFILTER='',
@CUTOFF='0.00'
--,@GST_FILTER='IN (''5.00'',''12.00'')'
,@GST_FILTER=''
*/