CREATE PROCEDURE SP3S_SYNCH_UPLOADDATA_WSL_OPT ---- Do not overwrite in May2022 release
(
    @nSpId VARCHAR(50)
   ,@CERRMSG VARCHAR(1000) OUTPUT
)
--WITH ENCRYPTION
AS
SET NOCOUNT ON
BEGIN



	/*
		208_2014_01_13 : THIS PROCEDURE WILL MERGE DATA FROM TEMPORARY TABLE TO ACTUAL TABLE.
						 TABLE NAMES AND ITS MERGING ORDER WILL BE FIXED AND WILL BE DEFINED HERE.	
						 
		NOTE : EMPLOYEE_HEAD WILL BE MERGED TO EMPLOYEE				 
	*/
DECLARE @CSTEP VARCHAR(100),@DTSQL NVARCHAR(MAX),@NMERGE_ORDER NUMERIC(5),@cText VARCHAR(1200)
	   ,@CTABLENAME VARCHAR(200),@CTABLE_SUFFIX VARCHAR(50),@CKEYFIELD VARCHAR(200),@CDEL_ID VARCHAR(50),@CTMP_TABLENAME VARCHAR(200),@LINSERTONLY VARCHAR(1)
	   ,@CFILTERCONDITION VARCHAR(200),@CFILTERCONDITION2 VARCHAR(500),@LUPDATEONLY VARCHAR(1),@BALWAYSUPDATE VARCHAR(1),@FDEL CHAR(1)
	   ,@CERRMSGOUT VARCHAR(1000),@CTABLESSTR VARCHAR(MAX),@CMIRRORINGENABLED VARCHAR(5),@cMemoId VARCHAR(40)
	   ,@CCURDEPTID VARCHAR(5),@CTEMPMASTERTABLE VARCHAR(200),@CTEMPDETAILTABLE1 VARCHAR(200),@CTEMPDETAILTABLE2 VARCHAR(200)
	   ,@CTEMPPAYMODETABLE VARCHAR(200),@CTEMPTABLE VARCHAR(100),@CDONOTRESETPOSTEDINAC VARCHAR(1)
	   ,@BADDMODE BIT,@CCUTOFFDATE VARCHAR(20),@CWHERECLAUSE VARCHAR(2000),@CMEMONOLEN VARCHAR(5),@NMEMONOLEN INT
	   ,@DMINMEMODT DATETIME,@DMAXMEMODT DATETIME,@CFINYEAR VARCHAR(5),@CMEMOPREFIX VARCHAR(10)
	   ,@CMINMEMONO VARCHAR(20),@CMAXMEMONO VARCHAR(20),@CSOURCEDB VARCHAR(200),@CMERGEDB VARCHAR(200)
	   ,@BMSTINSERTONLY BIT,@BSERIESMISMATCHFOUND BIT,@CPREVMEMONO VARCHAR(20)
	   ,@NPREVMEMONO NUMERIC(5,0),@NLENVALUE INT,@CPREVMEMONOSEARCH VARCHAR(20),@CMEMOIDSEARCH VARCHAR(40)
	   ,@CRETPRODUCTCODE VARCHAR(50),@NVERSIONNO INT,@CJOINSTR VARCHAR(MAX),@CTEMPSKUTABLE VARCHAR(500)
	   ,@CPARTYDEPTID VARCHAR(5),@NINVMODE INT,@CMRRID VARCHAR(40),@CDONOTSENDCHALLANWODISPATCHDETAILS VARCHAR(2)
	   ,@ERP_CONFIG VARCHAR(10),@BDONOTSENDCHALLANWITHOUTDISPATCH BIT
	   ,@SLS_SYNC_AFTER DATETIME,@dLastUpdate DATETIME,@dMIrrorLastUpdate DATETIME,@cMissingRowId VARCHAR(50)
	   ,@cUpdatestr VARCHAR(2000),@BDonotInsCHALLAN BIT,@bServerLoc BIT,@nEntrymode NUMERIC(1,0)
	   ,@BIS_BIN_TRANSFER BIT,@dInvDt DATETIME,@nUpdateMode INT ,@bCancelled BIT,@cLocId varchar(5)

BEGIN TRY
	
	set @cerrmsg=''
	SET @CSTEP='4'
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

	SELECT @CSOURCEDB='',@CMERGEDB='',@BMSTINSERTONLY=1,@BSERIESMISMATCHFOUND=0
   		

    SELECT TOP 1 @CCURDEPTID=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='LOCATION_ID'

	
	SELECT @CTEMPMASTERTABLE=@CSOURCEDB+'WSL_INM01106_UPLOAD',
		   @CTEMPDETAILTABLE1=@CSOURCEDB+'WSL_IND01106_UPLOAD',
		   @CTEMPDETAILTABLE2=@CSOURCEDB+'WSL_PAYMODE_XN_DET_UPLOAD'
		   

	SET @cStep='7'
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

	DECLARE @DFREEZINGDATE DATETIME	
	EXEC SP3S_GETDATA_FREEZING_DATE 'WSL',@DFREEZINGDATE OUTPUT
	
	SET @SLS_SYNC_AFTER=''
	SELECT @SLS_SYNC_AFTER=ISNULL(VALUE, '') FROM CONFIG (NOLOCK) WHERE config_option='SLS_SYNC_AFTER'

	
LBLSTART:

	BEGIN TRANSACTION	
	
	SET @cStep='9'
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

	SET @BDonotInsCHALLAN=0
	
    SELECT @CMEMOID='',@NVERSIONNO=0

	
    SELECT TOP 1 @CMEMOID = B.INV_ID ,@NINVMODE=INV_MODE,@CPARTYDEPTID=PARTY_DEPT_ID,
	@bServerLoc=ISNULL(SERVER_LOC,0),@nEntrymode=ISNULL(entry_mode,0),
	@BIS_BIN_TRANSFER=B.BIN_TRANSFER,@dInvDt = inv_dt,@bCancelled=cancelled,
	@dMIrrorLastUpdate=b.last_update,@cLocId = B.location_Code 
    FROM WSL_INM01106_UPLOAD B (NOLOCK)
	LEFT OUTER JOIN Location loc (NOLOCK) ON loc.dept_id=b.party_dept_id
    WHERE b.sp_id=@nSpid

	
   	SELECT @BDONOTSENDCHALLANWITHOUTDISPATCH=ISNULL(DONOTSENDCHALLANWITHOUTDISPATCH,0) FROM LOCATION (NOLOCK) 
	WHERE DEPT_ID=@cLocId
 
    IF ISNULL(@CMEMOID,'')='' OR @dInvDt<@DFREEZINGDATE OR @dInvDt < ISNULL(@SLS_SYNC_AFTER,'')
		GOTO EXIT_PROC

	
    SET @CFILTERCONDITION = 'B.SP_ID='''+@nSpId+''''
	

	SET @cStep='14'
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

	SET @CMEMOIDSEARCH=''
	SELECT TOP 1 @CMEMOIDSEARCH=A.INV_ID FROM INM01106 A (NOLOCK) WHERE A.INV_ID=@CMEMOID
	
	IF ISNULL(@CMEMOIDSEARCH,'')<>''
		SET @BADDMODE=0
	ELSE
		SET @BADDMODE=1

	SET @nUpdateMode=(CASE WHEN @BADDMODE=1 THEN 1 WHEN @bCancelled=1 THEN 3 ELSE 2 END)	
	SET @CSTEP=14.2
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

	EXEC SP3S_upd_qty_lastupdate
	@nUpdateMode=@NUPDATEMODE,
	@cXnType='WSL',
	@nSpId=@nSpId,
	@cMasterTable='inm01106',
	@cMemoIdCol='inv_id',
	@cXnDtCol='inv_dt',
	@cMemoId=@CMEMOIDSEARCH,
	@bCalledfromMerging=1,
	@CERRORMSG=@CERRMSG OUTPUT

	IF ISNULL(@cErrmsg,'')<>''
		GOTO EXIT_PROC
	
LBLMERGE:
	---DELETING EXISTING RECORD IF BILL COMES AGAIN FOR MERGING
	
	
	IF @BADDMODE=0
	BEGIN
	    SELECT @dLastUpdate=last_update FROM inm01106 (NOLOCK) WHERE inv_id=@CMEMOID

		print 'enter baddmode=0'
		SET @CSTEP='16'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1


		IF EXISTS (SELECT TOP 1 tablename FROM savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nSPID)
			DELETE FROM savetran_updcols_updatestr WITH (ROWLOCK) WHERE sp_id=@nSpId

		INSERT savetran_updcols_updatestr (sp_id,tablename,updatestr)
		SELECT @nSPId as sp_id,tablename,'' from mirrorxnsinfo (NOLOCK)
		WHERE tablename IN ('inm01106','ind01106','paymode_xn_det','parcel_mst','parcel_det')

		SET @cStep='19'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

		PRINT 'ADDMODE:N'
		EXEC SP3S_VERIFY_WSLDATA_MERGE_CHANGES
		@cMemoId=@cMemoId,
		@nSpId=@nSpid


	END
	
	IF @BADDMODE=0
	BEGIN

		SET @cStep='22'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

		  IF @NENTRYMODE=3 AND ISNULL(@BIS_BIN_TRANSFER,0)<>1
		  BEGIN 					

		    EXEC SP3S_PROCESS_INV_QTY @CMEMOID,1,@CERRMSG  OUTPUT 
			 IF ISNULL(@CERRMSG,'')<>''
			  GOTO EXIT_PROC

			    DELETE A  FROM BUYER_ORDER_WSL_LINK A (NOLOCK)
				JOIN IND01106 B (NOLOCK) ON A.IND_ROW_ID =B.ROW_ID 
				WHERE B.INV_ID =@CMEMOID
				   
		 END	
							
		SELECT TOP 1 @cMissingRowId=a.row_id FROM ind01106 A (NOLOCK) 
		LEFT JOIN 
		(SELECT row_id FROM WSL_ind01106_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId) b
		 ON A.row_ID =B.row_ID WHERE A.inv_id =@CMEMOID AND b.row_id IS NULL

		IF ISNULL(@cMissingRowId,'')<>''
		BEGIN		
			SET @CSTEP='25'
			EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

			DELETE A FROM ind01106 A (NOLOCK) LEFT JOIN 
			(SELECT row_id FROM WSL_ind01106_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId) b
			ON A.row_ID =B.row_ID WHERE A.inv_id =@CMEMOID AND b.row_id IS NULL

		END


		IF @nEntrymode=2
		BEGIN
			SET @CSTEP='27'
			EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

			UPDATE wps_mst SET wsl_inv_id='' WHERE wsl_inv_id=@cMemoId AND ps_id NOT IN 
			(SELECT DISTINCT ps_id FROM wsl_ind01106_upload (NOLOCK) WHERE sp_id=@nSpId)
		END

		SET @CSTEP='30.5'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

	     SELECT TOP 1 @cMissingRowId=a.row_id FROM 
		(SELECT row_id  FROM WSL_PAYMODE_XN_DET_UPLOAD (NOLOCK) WHERE sp_id=(LEFT(@nSPId,38)+@cLocId)) A
		left OUTER JOIN 
		(SELECT row_id FROM WSL_PAYMODE_XN_DET_UPLOAD (NOLOCK) WHERE sp_id=@nSpId) b ON 
		a.row_id=b.row_id WHERE b.row_id IS NULL

	

		--SELECT TOP 1 @cMissingRowId=a.row_id FROM PAYMODE_XN_DET A (NOLOCK) 
		--LEFT JOIN 
		--(SELECT row_id FROM WSL_PAYMODE_XN_DET_UPLOAD B (NOLOCK) WHERE memo_id=@cMEmoId) b
		-- ON A.row_ID =B.row_ID WHERE A.memo_id =@CMEMOID AND a.xn_type='WSL' AND b.row_id IS NULL


		  			
	
		IF ISNULL(@cMissingRowId,'')<>''
		BEGIN		
			SET @CSTEP='32'
			EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1
			
			DELETE A FROM PAYMODE_XN_DET A (NOLOCK) LEFT JOIN 
			(SELECT row_id FROM WSL_PAYMODE_XN_DET_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId) b
			ON A.row_ID =B.row_ID WHERE A.memo_id =@CMEMOID AND a.xn_type='WSL' AND b.row_id IS NULL

	    END

		SET @CSTEP='34.2'

		---- Need to reset the column removed_from_git while merging of Doc entry
		---- to secure the source challan entry freezing
		UPDATE a SET doc_synch_last_update=b.doc_synch_last_update,removed_from_git=0
		FROM WSL_INM01106_UPLOAD a WITH (ROWLOCK)
		JOIN inm01106 b (NOLOCK) ON a.inv_id=b.inv_id

	END

	IF @nInvMode=2 
	BEGIN
		SET @CSTEP='34.5'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1
		IF EXISTS (SELECT TOP 1 inv_id FROM wsl_INM01106_upload (NOLOCK) where sp_id=@nSpId AND ISNULL(docwsl_parcel_memo_id,'')='')
		BEGIN
			SET @CSTEP='35.2'
			EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1
			UPDATE a SET docwsl_parcel_memo_id=pb.parcel_memo_id  FROM wsl_INM01106_upload A (NOLOCK)  
			JOIN WSL_PARCEL_DET_UPLOAD PB (NOLOCK) ON PB.REF_MEMO_ID=A.INV_ID AND pb.sp_id=a.sp_id   
			JOIN WSL_parcel_mst_UPLOAD PM (NOLOCK) ON PM.PARCEL_MEMO_ID=PB.PARCEL_MEMO_ID  AND pm.sp_id=a.sp_id   
			WHERE a.sp_id=@nSpId AND pm.cancelled=0
		END
	END
	---UPDATING TRANSACTION TABLES
	SET @CSTEP='38.5'
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

	SET @CTABLENAME='INM01106'
	SET @CTMP_TABLENAME='WSL_INM01106_UPLOAD'
	SET @CKEYFIELD='INV_ID'

	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nspid and Tablename='inm01106'
	SET @LUPDATEONLY = (CASE WHEN @BADDMODE=0 THEN 1 ELSE 0 END)	
	
	SET @cStep='42'
	
	set @cText=(case when @BADDMODE=1 then 'yes' else 'no' end)+@cUpdatestr
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,@cText,1
	
	
	---Temporarily done this for Cantabil Settlement after taking Major release update
	--- Shall check this later on (Sanjay : 18-08-2022)
	if charindex('docwsl_parcel_memo_id',@cUpdatestr)=0
		set @cUpdatestr=@cUpdatestr+(CASE WHEN @cUpdatestr='' then '' else ',' end)+'docwsl_parcel_memo_id=b.docwsl_parcel_memo_id'
	
	EXEC UPDATEMASTERXN_OPT @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
							  ,@BALWAYSUPDATE=1,@lUPDATEXNS=@bAddmode,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 
							  
	SET @CTABLENAME='IND01106'
	SET @CTMP_TABLENAME='WSL_IND01106_UPLOAD'
	SET @CKEYFIELD='ROW_ID'

	SELECT @cMissingRowId='',@lUpdateonly=0
	IF @BADDMODE=0
	BEGIN
		SET @CSTEP='45'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

		--SELECT 'chk row older', row_id  FROM WSL_IND01106_UPLOAD (NOLOCK) WHERE inv_id=(LEFT(@nSPId,38)+LEFT(@cMemoId,2))
		--SELECT 'chk row new',row_id FROM WSL_IND01106_UPLOAD (NOLOCK) WHERE sp_id=@nSpId

		SELECT TOP 1 @cMissingRowId=b.row_id FROM 
		(SELECT row_id  FROM WSL_IND01106_UPLOAD (NOLOCK) WHERE sp_id=(LEFT(@nSPId,38)+@cLocId)) A
		RIGHT OUTER JOIN 
		(SELECT row_id FROM WSL_IND01106_UPLOAD (NOLOCK) WHERE sp_id=@nSpId) b ON 
		a.row_id=b.row_id WHERE a.row_id IS NULL

		--SELECT 'check @cMissingRowId of ind',@cMissingRowId

		IF ISNULL(@cMissingRowId,'')='' 
			SET @lUpdateonly=1
	END

	SET @CSTEP='48'
    EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1
	
	--select 'check @lUpdateonly',@lUpdateonly as lUpdateonly,@cMissingRowId as missing_row_id,*
	--from savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nspid 

	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nspid and  tablename='ind01106'	

	SET @CSTEP='48.5'
    EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1		
	EXEC updatemasterxn_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@lUpdateonly
							  ,@BALWAYSUPDATE=1,@lUPDATEXNS=@bAddmode,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 

	


	  IF @NENTRYMODE=3 AND ISNULL(@BIS_BIN_TRANSFER,0)<>1
		BEGIN 					
			SET @CSTEP='49.2'
    EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1
		SET @CTABLENAME='BUYER_ORDER_WSL_LINK'
		SET @CTMP_TABLENAME='wsl_BUYER_ORDER_WSL_LINK_UPLOAD'
		SET @CKEYFIELD='IND_ROW_ID'


		  EXEC UPDATEMASTERXN_OPT @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION


			SET @CSTEP='49.5'
    EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1
              EXEC SP3S_PROCESS_INV_QTY @CMEMOID,0,@CERRMSG  OUTPUT 
		      IF ISNULL(@CERRMSG,'')<>''
			  GOTO EXIT_PROC
				   
		END	

	IF EXISTS (SELECT TOP 1 memo_id FROM WSL_PAYMODE_XN_DET_UPLOAD (NOLOCK) WHERE memo_id=@cMemoId)
	BEGIN
		SET @cStep='51'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

		SET @CTABLENAME='PAYMODE_XN_DET'
		SET @CTMP_TABLENAME='WSL_PAYMODE_XN_DET_UPLOAD'
		SET @CKEYFIELD='MEMO_ID'

		SELECT @CFILTERCONDITION2=REPLACE(@CFILTERCONDITION,'INV_ID','MEMO_ID')+' AND B.XN_TYPE=''WSL'''
		   
		SELECT @cMissingRowId='',@lUpdateonly=0
		IF @BADDMODE=0
		BEGIN
			SET @CSTEP=55
			EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

			SELECT TOP 1 @cMissingRowId=b.row_id FROM 
			(SELECT row_id  FROM WSL_PAYMODE_XN_DET_UPLOAD (NOLOCK) WHERE memo_id=(LEFT(@nSPId,38)+@cLocId)) A
			RIGHT OUTER JOIN 
			(SELECT row_id FROM WSL_PAYMODE_XN_DET_UPLOAD (NOLOCK) WHERE memo_id=@cMemoId) b ON 
			a.row_id=b.row_id WHERE a.row_id IS NULL

			--SELECT 'check @cMissingRowId of pid',@cMissingRowId

			IF ISNULL(@cMissingRowId,'')='' 
				SET @lUpdateonly=1
		END

		SET @CSTEP='58'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

		SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nspid and tablename='PAYMODE_XN_DET'	

		EXEC updatemasterxn_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1='row_id',@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=@bAddmode,@CFILTERCONDITION=@CFILTERCONDITION2,@LUPDATEONLY=@lUpdateonly
								  ,@BALWAYSUPDATE=1,@lUPDATEXNS=@bAddmode,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 	
	END						  
							  
	 --*********** PARCELS ENTRY **************************************

	DECLARE @bParcelAddmode BIT
	SET  @bParcelAddmode=1


	IF EXISTS (SELECT TOP 1 a.parcel_memo_id FROM parcel_mst a (NOLOCK) JOIN 
			WSL_PARCEL_MST_UPLOAD b (NOLOCK) ON a.parcel_memo_id=b.parcel_memo_id
			WHERE sp_id=@nSpId)
		SET  @bParcelAddmode=0

--  	select @NINVMODE,@BDonotInsCHALLAN,@dLastUpdate	,@dMIrrorLastUpdate			  											 					  

	IF @dLastUpdate=@dMIrrorLastUpdate AND @bParcelAddmode=0
		SET @BDonotInsCHALLAN=1

	IF EXISTS (SELECT TOP 1 sp_id FROM  WSL_PARCEL_MST_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId)
	BEGIN
	   	SET @cStep='62'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1


		SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nspid and tablename='PARCEL_MST'
		SET @LUPDATEONLY = (CASE WHEN @bParcelAddmode=0 THEN 1 ELSE 0 END)		  	

		SET @CSTEP='65'
		SET @CTABLENAME='PARCEL_MST'
		SET @CTMP_TABLENAME='WSL_'+@CTABLENAME+'_UPLOAD'
		SET @CKEYFIELD='PARCEL_MEMO_ID'
	
		update WSL_PARCEL_MST_UPLOAD set bilty_no=parcel_memo_no where sp_id=@nSpid and
	    isnull(bilty_no,'')=''

		SET @cStep='70'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

		print 'inset parcel_mst'

		EXEC updatemasterxn_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@bParcelAddmode,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
							  ,@BALWAYSUPDATE=1,@lUPDATEXNS=@bParcelAddmode,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 	
		
	
		
		IF @bParcelAddmode=0
		BEGIN
			SET @CSTEP='74'
			EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

			SELECT TOP 1 @cMissingRowId=a.row_id FROM PARCEL_DET A (NOLOCK) 
			LEFT JOIN 
			(SELECT row_id FROM WSL_PARCEL_DET_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId) b
				ON A.row_ID =B.row_ID 
			JOIN parcel_mst c (NOLOCK) ON c.parcel_memo_id=a.parcel_memo_id 
			WHERE A.REF_MEMO_ID =@CMEMOID AND c.xn_type='WSL' AND b.row_id IS NULL
						
			IF ISNULL(@cMissingRowId,'')<>''
			BEGIN		
				SET @CSTEP='80'
				EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

				DELETE A FROM PARCEL_DET A (NOLOCK) 
				LEFT JOIN 
				(SELECT row_id FROM WSL_PARCEL_DET_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId) b
					ON A.row_ID =B.row_ID 
				JOIN parcel_mst c (NOLOCK) ON c.parcel_memo_id=a.parcel_memo_id 
				WHERE A.REF_MEMO_ID =@CMEMOID AND c.xn_type='WSL' AND b.row_id IS NULL
			END
		END

	END

	SET @cStep='85'
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1
	IF EXISTS (SELECT TOP 1 sp_id FROM  WSL_PARCEL_DET_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId)
	BEGIN
		SELECT @cMissingRowId='',@lUpdateonly=0
		IF @bParcelAddmode=0	
		BEGIN
			SET @CSTEP='90'
			EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

			SELECT TOP 1 @cMissingRowId=b.row_id FROM 
			(SELECT row_id  FROM WSL_PARCEL_DET_UPLOAD (NOLOCK) WHERE sp_id=(LEFT(@nSPId,38)+@cLocId )) A
			RIGHT OUTER JOIN 
			(SELECT row_id FROM WSL_PARCEL_DET_UPLOAD (NOLOCK) WHERE sp_id=@nSpId) b ON 
			a.row_id=b.row_id WHERE a.row_id IS NULL

			--SELECT 'check @cMissingRowId of pid',@cMissingRowId

			IF ISNULL(@cMissingRowId,'')='' 
				SET @lUpdateonly=1
		END

		SET @CSTEP='95'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1				
		SET @CTABLENAME='PARCEL_DET'
		SET @CTMP_TABLENAME='WSL_'+@CTABLENAME+'_UPLOAD'
		SET @CKEYFIELD='PARCEL_MEMO_ID'

		SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nspid and tablename='PARCEL_DET'
		SELECT @CFILTERCONDITION2=REPLACE(@CFILTERCONDITION,'INV_ID','sp_id')

		EXEC updatemasterxn_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								,@LINSERTONLY=@bParcelAddmode,@CFILTERCONDITION=@CFILTERCONDITION2,@LUPDATEONLY=@LUPDATEONLY
								,@BALWAYSUPDATE=1,@lUPDATEXNS=@bParcelAddmode,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 	
	END
				
  --******************************************************************	


   IF EXISTS (SELECT TOP 1'U' FROM WSL_XN_AUDIT_TRIAL_DET_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID)
	BEGIN
	    

	
		
		DELETE A FROM WSL_XN_AUDIT_TRIAL_DET_UPLOAD A (NOLOCK) 
		JOIN XN_AUDIT_TRIAL_DET B (NOLOCK) ON A.XN_TYPE =B.XN_TYPE AND A.XN_ID =B.XN_ID AND A.ID=B.ID 
		WHERE A.SP_ID =@nSpId 

	    SET @CTABLENAME='XN_AUDIT_TRIAL_DET'
		SET @CTMP_TABLENAME='WSL_XN_AUDIT_TRIAL_DET_upload'
		SET @CKEYFIELD='XN_ID'


		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=0,@BUPDATEXNS =1						  
	

	END
    

	IF @NINVMODE=2 AND @BDonotInsCHALLAN=0
	BEGIN
		SET @CSTEP='98'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1		

		DECLARE @CDISPATCHDETAILS VARCHAR(1000),@DPURRECEIPTDT DATETIME
		
		SELECT @CDISPATCHDETAILS=PM.PARCEL_MEMO_ID  FROM INM01106 A (NOLOCK)  
        JOIN LOCATION L (NOLOCK) ON L.DEPT_ID=A.location_Code           
		JOIN PARCEL_DET PB (NOLOCK) ON PB.REF_MEMO_ID=A.INV_ID    
	    JOIN PARCEL_MST PM (NOLOCK) ON PM.PARCEL_MEMO_ID=PB.PARCEL_MEMO_ID    
	    WHERE A.INV_ID= @CMEMOID AND A.APPROVED=(CASE WHEN L.STN_APPROVAL = 1 THEN 2 ELSE A.APPROVED END)     
        AND PM.XN_TYPE='WSL'
        		
		--select @CDISPATCHDETAILS,@BDONOTSENDCHALLANWITHOUTDISPATCH,@CPARTYDEPTID,@CCURDEPTID,@bServerLoc,
		--@CFILTERCONDITION as FILTERCONDITION

		IF  ISNULL(@CDISPATCHDETAILS,'')='' 
			GOTO LBLFINAL
		
		IF NOT (@CPARTYDEPTID=@CCURDEPTID OR @bServerLoc=1)
			GOTO LBLFINAL
		
		SET @CSTEP='98.3'
		IF @bAddmode=0
		BEGIN
			DELETE FROM DOCWSL_IND01106_MIRROR WITH  (ROWLOCK) WHERE inv_id=@CMEMOID
			DELETE FROM DOCWSL_INM01106_MIRROR WITH  (ROWLOCK) WHERE inv_id=@CMEMOID
		END


		SET @CSTEP='99.5'
		SET @CTABLENAME='DOCWSL_INM01106_MIRROR'
		SET @CTMP_TABLENAME='WSL_INM01106_UPLOAD'
		SET @CKEYFIELD='INV_ID'

		SET @cStep='102'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

		EXEC updatemasterxn_mirror @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1,@bUPDATEXNS=1,@CSEARCHTABLE='INM01106'
 


		SET @CTABLENAME='DOCWSL_IND01106_MIRROR'
		SET @CTMP_TABLENAME='WSL_IND01106_UPLOAD'
		SET @CKEYFIELD='ROW_ID'
		 
		SET @cStep='105'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1
		
		EXEC updatemasterxn_mirror @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1,@bUPDATEXNS=1,@CSEARCHTABLE='IND01106'
		
		
		GOTO LBLFINAL
			
	END
	
	--SELECT @NINVMODE, @CPARTYDEPTID,@CCURDEPTID,@BDONOTSENDCHALLANWITHOUTDISPATCH,@CMEMOID

LBLFINAL:

	SET @CSTEP='115'
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1
	
	IF @nEntrymode=2
		UPDATE a SET wsl_inv_id=@cMemoId FROM wps_mst a WITH (ROWLOCK)
		JOIN WSL_IND01106_UPLOAD b (NOLOCK) ON a.ps_id=b.ps_id
		JOIN WSL_INM01106_UPLOAD c (NOLOCK) ON c.inv_id=b.inv_id
		WHERE c.sp_id=@nSpId AND c.cancelled=0

	SET @CSTEP='120'
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

	EXEC SP3S_MERGE_LOCPMT  
	@cTempTable='WSL_PMT01106_UPLOAD',  
	@cMemoIdCol='SP_ID',  
	@cMemoId =@nSpId
		
	set @CSTEP='125'
	EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1
	
	DECLARE @nSpidCopy VARCHAR(50)
	SET @nSpIdCopy=LEFT(@nSPId,38)+@cLocId 

	IF ISNULL(@cErrmsg,'')=''
	BEGIN

		EXEC SP3S_VALIDATE_DATAMERGED_SINGLECHANNEL
		@cMasterTable='inm01106',
		@cDetTable='ind01106',
		@cMemoIdCol='inv_id',
		@cMemoId=@cMemoId,
		@cUploadTable='wsl_inm01106_upload',
		@nSpId=@nSpId,
		@cErrormsg=@CERRMSG OUTPUT

		IF ISNULL(@CERRMSG,'')=''
			GOTO EXIT_PROC
    END
	

END TRY
BEGIN CATCH
	SET @CERRMSG='P:SP3s_SYNCH_UPLOADDATA_WSL_OPT,spid:'+@nSpId+' MEMO ID :'+@CMEMOID+' STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO EXIT_PROC
END CATCH

EXIT_PROC:
    
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRMSG,'')='' AND @BSERIESMISMATCHFOUND<>1 
			commit

		ELSE
			ROLLBACK
    END

		set @CSTEP='132'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1
	
	
	EXEC SP3S_DELETE_UPLOAD_WSLMERGE_TABLES @nSpId

		set @CSTEP='134'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,'',1

	IF @bAddmode=0
		EXEC SP3S_DELETE_UPLOAD_WSLMERGE_TABLES @nSpIdCopy

	
	set @cText=ISNULL(@CMEMOID,'')+':'+(CASE WHEN @BADDMODE=1 THEN 'ADDMODE' ELSE 'EDITMODE' END)
		set @CSTEP='136'
		EXEC SP_CHKXNSAVELOG 'WSLMERGE',@CSTEP,0,@nSpId,@cText,1


END	
---END OF PROCEDURE - SP3S_SYNCH_UPLOADDATA_WSL_OPT
