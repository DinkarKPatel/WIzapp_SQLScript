CREATE PROCEDURE SP_RETAILSALE_20--(LocId 3 digit change only increased the parameter width by Sanjay:30-10-2024)
(  
	 @CQUERYID			NUMERIC(2),  
	 @CWHERE			VARCHAR(MAX)='',  
	 @CFINYEAR			VARCHAR(100)='',  
	 @CDEPTID			VARCHAR(4)='',  
	 @NNAVMODE			NUMERIC(2)=1,  
	 @CWIZAPPUSERCODE	VARCHAR(10)='',  
	 @CREFMEMOID		VARCHAR(40)='',  
	 @CREFMEMODT		DATETIME='',  
	 @BINCLUDEESTIMATE	BIT=1,  
	 @CFROMDT			DATETIME='',  
	 @CTODT				VARCHAR(50)='',
	 @bCardDiscount		INT=0,
	 @cCustCode			VARCHAR(15)=''
) 
AS  
BEGIN 
--DECLARE @CWHERE			VARCHAR(MAX)='3877', @cCustCode VARCHAR(MAX)='',@CREFMEMOID		VARCHAR(40)='',@bCardDiscount		INT=0
DECLARE @CCMD NVARCHAR(MAX)=''
DECLARE @dtable TABLE (DBNAME VARCHAR(100),CHECKED BIT)
DECLARE @dtable_20 TABLE (SRNO INT,BILLCHECK BIT ,CM_NO VARCHAR(100),CM_DT DATETIME,
NET_AMOUNT NUMERIC(14,2),CUSTOMER_NAME VARCHAR(100),CUSTOMER_CODE VARCHAR(100),
REF_SLS_MEMO_ID VARCHAR(100),USER_CUSTOMER_CODE VARCHAR(100),CM_ID VARCHAR(100),
ref_sls_memo_no VARCHAR(100),ref_sls_memo_dt DATETIME,SR_NO INT,duplicatebill INT,MOBILE VARCHAR(100),
barcode_coding_scheme INT,CM_TIME DATETIME,LOCATION_CODE VARCHAR(10))
DECLARE @dbNAME VARCHAR(100),@BALLOWNEGSTOCK BIT,@LocLength VARCHAR(2)
SET @LocLength=CAST ((CASE WHEN LEN(@cdeptid)=0 THEN 2 ELSE LEN(@cDEPTID) END) as VARCHAR(2))

	SELECT @BALLOWNEGSTOCK =CAST(VALUE AS BIT) FROM USER_ROLE_DET A (NOLOCK)--ADDED
		JOIN USERS B (NOLOCK)--ADDED
		ON A.ROLE_ID=B.ROLE_ID 
		WHERE USER_CODE=@CWIZAPPUSERCODE 
		AND FORM_NAME='FRMSALE' 
		AND FORM_OPTION='ALLOW_NEG_STOCK'	

		SET @BALLOWNEGSTOCK=ISNULL(@BALLOWNEGSTOCK,0)


INSERT INTO @dtable(DBNAME,CHECKED)
SELECT DB_NAME() AS NAME,CAST(0 AS INT) AS CHECKED 
INSERT INTO @dtable(DBNAME,CHECKED)
SELECT NAME, CAST(0 AS INT) AS CHECKED 
FROM SYS.DATABASES 
WHERE (NAME LIKE DB_NAME()+'[_]011[0-9][0-9]')
ORDER BY CAST(RIGHT(NAME,3) AS INT) DESC


DECLARE @CPRODUCT_CODEFILTER VARCHAR(1000)

IF ISNULL(@CREFMEMOID,'')=''
BEGIN
	IF CHARINDEX('@',@CWHERE)>0
	SET @CPRODUCT_CODEFILTER=' AND M.PRODUCT_CODE='''+@CWHERE+''''
	ELSE 
	SET @CPRODUCT_CODEFILTER=' AND CASE WHEN CHARINDEX(''@'',M.PRODUCT_CODE)=0 THEN M.PRODUCT_CODE 
		                             ELSE SUBSTRING (M.PRODUCT_CODE,1, CHARINDEX(''@'',M.PRODUCT_CODE)-1) END ='''+@CWHERE+''' '
END
ELSE 
	SET @CPRODUCT_CODEFILTER=''

--SELECT * FROM @dtable
WHILE EXISTS (SELECT TOP 1 DBNAME FROM @dtable WHERE CHECKED=0)
BEGIN
	SELECT TOP 1 @dbNAME= DBNAME FROM @dtable WHERE CHECKED=0
	
	SET @cCMD=N'
	USE '+@dbNAME+';
	 WITH CTE AS
	 (
		SELECT  N.CM_ID ,N.CM_DT,N.CUSTOMER_CODE,N.CM_NO,(CASE WHEN ISNULL(N.patchup_run,0)=1 THEN N.OLD_NET_AMOUNT ELSE N.NET_AMOUNT END) AS NET_AMOUNT ,
		        ROW_NUMBER() OVER (ORDER BY cm_dt DESC,N.CM_ID) AS SR_NO,SKU.barcode_coding_scheme,CM_TIME,LEFT(N.CM_ID,'+@LocLength+') as location_code
		FROM CMM01106 N (NOLOCK)   
		JOIN CMD01106 M (NOLOCK) ON M.CM_ID = N.CM_ID
		JOIN CUSTDYM C (NOLOCK) ON N.CUSTOMER_CODE=C.CUSTOMER_CODE
		JOIN SKU (NOLOCK) ON SKU.product_code=M.product_code
		WHERE N.CANCELLED = 0 AND ISNULL(M.REF_SLS_MEMO_ID,'''')='''' 
		AND M.QUANTITY > 0  '+
		 @CPRODUCT_CODEFILTER +' 
		 AND (C.user_customer_code ='''+@cCustCode +''' OR ''''='''+@cCustCode+''' OR C.mobile='''+@cCustCode +''')
		 AND (N.CM_NO='''+ @CREFMEMOID +''' OR '''+@CREFMEMOID+'''='''')
		 GROUP BY N.CM_ID,N.CM_DT,LEFT(N.CM_ID,'+@LocLength+') ,N.CUSTOMER_CODE,N.CM_NO,N.NET_AMOUNT,SKU.barcode_coding_scheme,CM_TIME,N.patchup_run,N.OLD_NET_AMOUNT
	 )
	 SELECT TOP 10 CAST('''' AS NVARCHAR(10)) AS SRNO, CAST(0 AS BIT) AS BILLCHECK,   
		 A.CM_NO,A.CM_DT,A.NET_AMOUNT,  
		 (C.CUSTOMER_FNAME+C.CUSTOMER_LNAME)AS CUSTOMER_NAME ,A.CUSTOMER_CODE ,'''' AS REF_SLS_MEMO_ID ,
		 c.USER_CUSTOMER_CODE,A.cm_id,A.CM_NO as ref_sls_memo_no,A.CM_DT as ref_sls_memo_dt,SR_NO,1 AS duplicatebill, 
		 C.mobile,A.barcode_coding_scheme,CM_TIME ,LOCATION_CODE
	FROM CTE A
    JOIN CUSTDYM C (NOLOCK) ON A.CUSTOMER_CODE=C.CUSTOMER_CODE
	WHERE SR_NO >'+CAST(@bCardDiscount AS NVARCHAR(100)) + '
	ORDER BY A.CM_DT DESC 

	 '
	PRINT @cCMD
	 INSERT INTO @dtable_20(SRNO ,BILLCHECK ,CM_NO ,CM_DT ,NET_AMOUNT ,CUSTOMER_NAME ,CUSTOMER_CODE ,REF_SLS_MEMO_ID ,
				USER_CUSTOMER_CODE ,CM_ID ,ref_sls_memo_no ,ref_sls_memo_dt ,SR_NO ,duplicatebill ,MOBILE,barcode_coding_scheme,CM_TIME,LOCATION_CODE )
	 EXEC SP_EXECUTESQL @cCMD
	IF @@ROWCOUNT>0
		UPDATE @dtable SET CHECKED=1 
	ELSE
		UPDATE @dtable SET CHECKED=1 WHERE DBNAME=@dbNAME
END
if EXISTS(SELECT barcode_coding_scheme FROM @dtable_20 WHERE barcode_coding_scheme=3)
BEGIN
	if @BALLOWNEGSTOCK=1
		SELECT top 100 * FROM @dtable_20 ORDER BY CASE WHEN @CDEPTID=location_code THEN 0 ELSE 1 END,cm_dt DESC,CM_TIME desc
	else
		SELECT top 1 * FROM @dtable_20 ORDER BY CASE WHEN @CDEPTID=location_code THEN 0 ELSE 1 END,cm_dt DESC,CM_TIME desc
END
ELSE
BEGIN
	SELECT top 100 * FROM @dtable_20 ORDER BY CASE WHEN @CDEPTID=location_code THEN 0 ELSE 1 END,cm_dt DESC,CM_TIME desc
END
 --SELECT TOP 10 *
 --FROM 
 --(
	-- SELECT DISTINCT CAST('' AS NVARCHAR(10)) AS SRNO, CAST(0 AS BIT) AS BILLCHECK,   
	-- A.CM_NO,A.CM_DT,A.NET_AMOUNT,  
	-- (C.CUSTOMER_FNAME+C.CUSTOMER_LNAME)AS CUSTOMER_NAME ,A.CUSTOMER_CODE ,B.REF_SLS_MEMO_ID ,
	-- c.USER_CUSTOMER_CODE,A.cm_id,A.CM_NO as ref_sls_memo_no,A.CM_DT as ref_sls_memo_dt
	-- ,ROW_NUMBER() OVER (ORDER BY cm_dt DESC,A.CM_ID) AS SR_NO
	-- ,ROW_NUMBER() OVER (partition by a.cm_id ORDER BY cm_dt DESC,A.CM_ID) as duplicatebill
	-- FROM CMM01106  A (NOLOCK)    
	-- JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID    
	-- JOIN CUSTDYM C (NOLOCK) ON A.CUSTOMER_CODE=C.CUSTOMER_CODE 
	-- WHERE A.CANCELLED = 0 AND ISNULL(B.REF_SLS_MEMO_ID,'')='' AND B.QUANTITY > 0  
	-- AND (B.PRODUCT_CODE=@CWHERE or B.PRODUCT_CODE like @CWHERE+'@%') 
	-- ----AND (A.CM_DT BETWEEN @CFROMDT AND @CTODT) 
	-- AND (C.user_customer_code =@cCustCode OR C.mobile=@cCustCode OR ''=@cCustCode)
	-- AND (A.CM_NO= @CREFMEMOID OR @CREFMEMOID='')
 --)X
 --WHERE X.SR_NO>@bCardDiscount
 --and duplicatebill=1
 --ORDER BY X.cm_dt DESC  
end


