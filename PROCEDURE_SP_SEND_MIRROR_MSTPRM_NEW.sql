create PROCEDURE SP_SEND_MIRROR_MSTPRM_NEW
@CTARGETLOCID VARCHAR(5)
--WITH ENCRYPTION
AS
BEGIN
    DECLARE @DTSQL NVARCHAR(MAX),@CSTEP VARCHAR(10),@CFILTERCONDITION NVARCHAR(MAX),@DMEMOLASTUPDATE DATETIME
           ,@CXNTYPE VARCHAR(10),@CMEMOID VARCHAR(100),@CTABLENAME VARCHAR(100),@CTEMPTABLE VARCHAR(100)
           ,@CTEMPDBNAME VARCHAR(200),@CLOCMSTLUPD VARCHAR(20),@CCURDEPTID VARCHAR(5)
           ,@CHODEPTID VARCHAR(5),@NRECCOUNT INT,@CERRORMSG VARCHAR(MAX),@CREPLOCTABLE VARCHAR(500),@NLOCTYPE INT
		   ,@TEMP_TABLE VARCHAR(200),@CTEMPLMTABLE VARCHAR(500),@BDONOT_MERGE_PARTYRATE BIT
    DECLARE @TXNSSENDINFO TABLE (ORG_TABLENAME VARCHAR(100),TMP_TABLENAME VARCHAR(100),ERRMSG VARCHAR(MAX)) 
    
    BEGIN TRY
    
	SET @CSTEP=0

	SET @CTEMPDBNAME =''
	 
	SET @CSTEP=10
	
	PRINT @CSTEP+':'+CONVERT(VARCHAR,GETDATE(),113)
	SET @CFILTERCONDITION=''
	 
	SET @CSTEP=20

	SELECT @CCURDEPTID = VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'
	SELECT @CHODEPTID  = VALUE FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'		
	
	SELECT @NLOCTYPE=LOC_TYPE FROM LOCATION WHERE DEPT_ID=@CTARGETLOCID
	
	PRINT @CSTEP+':'+CONVERT(VARCHAR,GETDATE(),113)
	
	IF @CCURDEPTID<>@CHODEPTID
	   BEGIN
		  SELECT '' AS LAST_UPDATE,'' AS ERRMSG
		  GOTO END_PROC
	   END	
	   
   SELECT @BDONOT_MERGE_PARTYRATE=ISNULL(DONOT_MERGE_PARTYRATE,0) FROM LOCATION WHERE DEPT_ID=@CTARGETLOCID
   
   IF ISNULL(@BDONOT_MERGE_PARTYRATE,0)=1
   BEGIN
       SET @CERRORMSG='PARTY RATE CAN NOT ALLOW TO OVERWRITE FOR TARGET LOCATION '+@CTARGETLOCID +' PLEASE CHECK LOCATION MASTER'
       GOTO END_PROC
   END
   
    
	SET @CSTEP =30
	SET @CTABLENAME ='PARTY_RATE_MST'

	IF OBJECT_ID ('TEMPDB..#TMPPARTYRATEMEMO','U') IS NOT NULL
	   DROP TABLE #TMPPARTYRATEMEMO

	    SELECT PARTY_RATE_MST.MEMO_ID  INTO #TMPPARTYRATEMEMO  FROM PARTY_RATE_MST (NOLOCK)
		LEFT JOIN LOC_BILLING_RULES B(NOLOCK) ON PARTY_RATE_MST.MEMO_ID=B.PARTY_RATE_MEMO_ID
		WHERE PARTY_RATE_MST.PARTY_RATE_TYPE=1 OR (PARTY_RATE_MST.PARTY_RATE_TYPE=2 AND (B.TARGET_DEPT_ID=@CTARGETLOCID  OR B.SOURCE_DEPT_ID=@CTARGETLOCID))
		group by PARTY_RATE_MST.MEMO_ID


		SELECT DISTINCT  'MSTPRM_PARTY_RATE_MST_MIRROR' AS TARGET_TABLENAME,PARTY_RATE_MST.*,1 AS PICK_FROM_CURRENT_DB FROM PARTY_RATE_MST (NOLOCK)
		JOIN #TMPPARTYRATEMEMO TMP ON PARTY_RATE_MST.MEMO_ID =TMP.MEMO_ID 

	--SET @CSTEP =40
	----BELOW LINW ADDED ON 24-JUNE-2017 AS PER SUGGESTION OF SANJAY SIR
	--SET @DTSQL =N'UPDATE '+@TEMP_TABLE+' WITH (ROWLOCK)  SET EDT_USER_CODE=''0000000'', USER_CODE =''0000000'''
	--EXEC SP_EXECUTESQL @DTSQL
	
	SET @CSTEP =45
	SET @CTABLENAME ='PARTY_RATE_DET'

	SELECT DISTINCT  'MSTPRM_PARTY_RATE_DET_MIRROR' AS TARGET_TABLENAME,PARTY_RATE_DET.*,1 AS PICK_FROM_CURRENT_DB FROM PARTY_RATE_DET (NOLOCK)
	JOIN #TMPPARTYRATEMEMO TMP ON PARTY_RATE_DET.MEMO_ID =TMP.MEMO_ID 
	
	
	SET @CSTEP =50
	SET @CTABLENAME ='LM01106'

	SELECT DISTINCT  'MSTPRM_LM01106_MIRROR' AS TARGET_TABLENAME,LM01106.*,1 AS PICK_FROM_CURRENT_DB FROM LM01106 (NOLOCK)
	JOIN LMP01106 C (NOLOCK) ON LM01106.AC_CODE=C.AC_CODE
	JOIN #TMPPARTYRATEMEMO B ON B.MEMO_ID=C.PARTY_RATE_MEMO_ID


	SET @CSTEP =55
	SET @CTABLENAME ='HD01106'

	SELECT DISTINCT  'MSTPRM_HD01106_MIRROR' AS TARGET_TABLENAME,HD01106.*,1 AS PICK_FROM_CURRENT_DB FROM HD01106 (NOLOCK)
	JOIN LM01106 (NOLOCK) ON HD01106.HEAD_CODE =LM01106.HEAD_CODE
	JOIN LMP01106 C (NOLOCK) ON LM01106.AC_CODE=C.AC_CODE
	JOIN #TMPPARTYRATEMEMO B ON B.MEMO_ID=C.PARTY_RATE_MEMO_ID


	
	SET @CSTEP =65
	SET @CTABLENAME ='LMP01106'

	SELECT DISTINCT  'MSTPRM_LMP01106_MIRROR' AS TARGET_TABLENAME,LMP01106.*,1 AS PICK_FROM_CURRENT_DB FROM LMP01106 (NOLOCK)
	JOIN #TMPPARTYRATEMEMO B ON B.MEMO_ID=LMP01106.PARTY_RATE_MEMO_ID

	SET @CSTEP =70
	SET @CTABLENAME ='LOC_BILLING_RULES'

	SELECT DISTINCT  'MSTPRM_LOC_BILLING_RULES_MIRROR' AS TARGET_TABLENAME,LOC_BILLING_RULES.*,1 AS PICK_FROM_CURRENT_DB FROM LOC_BILLING_RULES (NOLOCK)
	JOIN #TMPPARTYRATEMEMO B ON B.MEMO_ID=LOC_BILLING_RULES.PARTY_RATE_MEMO_ID


	GOTO END_PROC

     
END TRY

BEGIN CATCH
	SET @CERRORMSG='P: SP_SEND_MIRROR_MSTPRM_NEW, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO END_PROC
END CATCH 	
	
END_PROC:

	SELECT ISNULL(@CERRORMSG,'') AS ERRMSG
END
------------- END OF PROCEDURE SP_SEND_MIRROR_MSTPRM
