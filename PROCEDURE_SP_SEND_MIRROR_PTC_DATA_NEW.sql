CREATE PROCEDURE SP_SEND_MIRROR_PTC_DATA_NEW
(	
	 @CUPLOADEDXNID VARCHAR(50)
	,@CCURLOCID VARCHAR(5)
	,@BACKNOWLEDGE BIT=0
	,@CERRMSG VARCHAR(1000) OUTPUT
)	
--WITH ENCRYPTION
AS
/*
	SP_SEND_MIRROR_PTC_DATA_NEW_208_05_02_14 : THIS PROCEDURE WILL SEND APPROVAL RETURN DATA FROM LOCATION TO HO.
*/
BEGIN
	DECLARE @DTSQL NVARCHAR(MAX),@CSPID VARCHAR(10),@CTEMPTABLE VARCHAR(500),@CMEMOID VARCHAR(50),
	@CTEMPMASTERTABLE VARCHAR(200),@CTEMPLMTABLE VARCHAR(200),@CTEMPLMPTABLE VARCHAR(200)
	,@CTEMPAREATABLE VARCHAR(200),@CTEMPCITYTABLE VARCHAR(200),@CTEMPCUSTABLE VARCHAR(200),@CTEMPEMPTABLE VARCHAR(200)
	,@CTEMPPAYTABLE VARCHAR(200),@CTEMPPMSTTABLE VARCHAR(200),@CTEMPDETAILTABLE VARCHAR(200),@CTEMPPTCBILLS VARCHAR(200)
	,@DMEMOLASTUPDATE DATETIME,@CTABLENAME VARCHAR(100),@BRECFOUND BIT,@CSTEP VARCHAR(5),@CFILTERCONDITION VARCHAR(MAX)
	,@CKEYFIELD VARCHAR(100)

	DECLARE @TXNSSENDINFO TABLE (ORG_TABLENAME VARCHAR(50),TMP_TABLENAME VARCHAR(50),XN_ID VARCHAR(40))  	

BEGIN TRY 
	
	---- CALL ACKNOWLEDGEMENT OF MEMO SUCCESSFUL MERGING AT MIRRORING SERVER
	DECLARE @CTEMPDBNAME VARCHAR(40)
	
	SET @CTEMPDBNAME=DB_NAME()+'_IMAGE'

	SET @CSTEP=30
	SET @CMEMOID=@CUPLOADEDXNID
	---- IF NO MEMO FOUND , JUST END THE PROCESS
	IF ISNULL(@CMEMOID,'')=''
		GOTO END_PROC
		
LBLTABLEINFO:
	SET @CSTEP=50
	---- POPULATE LIST OF TABLES 
/*PEM01106,LM01106,LMP01106,HD01106,CUSTDYM,AREA,CITY,STATE,EMPLOYEE,PAYMODE_XN_DET,PAYMODE_MST,PAYMODE_GRP_MST*/
	
	SET @CSTEP=110
	---- SEND THE PTC MEMO MASTER TABLE
	SELECT DISTINCT PEM01106.*,'PTC_PEM01106_UPLOAD' AS TARGET_TABLENAME FROM PEM01106 WHERE PEM_MEMO_ID=@CMEMOID
	
	SET @CSTEP=120
	SELECT DISTINCT PED01106.*,'PTC_PED01106_UPLOAD' AS TARGET_TABLENAME FROM PED01106 WHERE PEM_MEMO_ID=@CMEMOID
	
	SET @CSTEP=130
	SET @DTSQL=N'SELECT DISTINCT *,''PTC_IMAGE_INFO_DOC_UPLOAD'' AS TARGET_TABLENAME FROM '+@CTEMPDBNAME+'..IMAGE_INFO_DOC WHERE XN_TYPE=''frmPCExpense'' AND MEMO_ID='''+@CMEMOID+''''
	
	PRINT @DTSQL

	EXEC SP_EXECUTESQL @DTSQL

	GOTO END_PROC
	
END TRY
BEGIN CATCH
	SET @CERRMSG='P: SP_SEND_MIRROR_PTC_DATA_NEW, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO END_PROC
END CATCH 		
END_PROC:
	
END
---END OF PROCEDURE - SP_SEND_MIRROR_PTC_DATA_NEW
