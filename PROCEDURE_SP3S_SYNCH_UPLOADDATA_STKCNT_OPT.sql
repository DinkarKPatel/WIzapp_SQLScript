CREATE PROCEDURE SP3S_SYNCH_UPLOADDATA_STKCNT_OPT
(
    @NSPID VARCHAR(50)
   ,@CERRMSG VARCHAR(1000) OUTPUT
)
AS
SET NOCOUNT ON
BEGIN

	/*
		208_2014_01_13 : THIS PROCEDURE WILL MERGE DATA FROM TEMPORARY TABLE TO ACTUAL TABLE.
						 TABLE NAMES AND ITS MERGING ORDER WILL BE FIXED AND WILL BE DEFINED HERE.	
						 
		NOTE : EMPLOYEE_HEAD WILL BE MERGED TO EMPLOYEE				 
	*/

DECLARE @CSTEP VARCHAR(100),@DTSQL NVARCHAR(MAX),@CTMP_TABLENAME varchar(200)
	   ,@CTABLENAME VARCHAR(200),@CTABLE_SUFFIX VARCHAR(50),@CKEYFIELD VARCHAR(200),@LINSERTONLY VARCHAR(1)
	   ,@CFILTERCONDITION VARCHAR(200),@CFILTERCONDITION2 VARCHAR(500),@LUPDATEONLY VARCHAR(1),@BALWAYSUPDATE VARCHAR(1),@FDEL CHAR(1)
	   ,@CERRMSGOUT VARCHAR(1000),@CTABLESSTR VARCHAR(MAX),@CMIRRORINGENABLED VARCHAR(5)
	   ,@CCURDEPTID VARCHAR(5),@CTEMPMASTERTABLE VARCHAR(200),@CTEMPDETAILTABLE VARCHAR(200)
	   ,@CTEMPDETAILTABLE2 VARCHAR(200),@CTEMPDETAILTABLE3 VARCHAR(200)
	   ,@CTEMPPAYMODETABLE VARCHAR(200),@CTEMPTABLE VARCHAR(100),@CDONOTRESETPOSTEDINAC VARCHAR(1)
	   ,@BADDMODE BIT,@CCUTOFFDATE VARCHAR(20),@CWHERECLAUSE VARCHAR(2000),@CMEMONOLEN VARCHAR(5),@NMEMONOLEN INT
	   ,@DMINMEMODT DATETIME,@DMAXMEMODT DATETIME,@CFINYEAR VARCHAR(5),@CMEMOPREFIX VARCHAR(10)
	   ,@CMINMEMONO VARCHAR(20),@CMAXMEMONO VARCHAR(20),@CSOURCEDB VARCHAR(200),@CMERGEDB VARCHAR(200)
	   ,@BMSTINSERTONLY BIT,@BSERIESMISMATCHFOUND BIT,@CMEMOID VARCHAR(40),@CPREVMEMONO VARCHAR(20)
	   ,@NPREVMEMONO NUMERIC(5,0),@NLENVALUE INT,@CPREVMEMONOSEARCH VARCHAR(20),@CMEMOIDSEARCH VARCHAR(40)
	   ,@CRETPRODUCTCODE VARCHAR(50),@NVERSIONNO INT,@CJOINSTR VARCHAR(MAX),@cMissingRowId VARCHAR(50)
	   ,@cUpdatestr VARCHAR(2000),@CLOCID VARCHAR(5)
	

BEGIN TRY
	
	
	SET @CSTEP=10
	EXEC SP_CHKXNSAVELOG 'WPSMERGE',@CSTEP,0,@CMEMOID,'',1
	SELECT @CSOURCEDB='',@CMERGEDB='',@BMSTINSERTONLY=1,@BSERIESMISMATCHFOUND=0


	SELECT @CTEMPMASTERTABLE='stkcnt_MANUAL_STOCK_COUNT_XN_mst_upload',
		   @CTEMPDETAILTABLE='stkcnt_MANUAL_STOCK_COUNT_XN_det_upload'
		
LBLSTART:
    BEGIN TRANSACTION 	
	SET @CSTEP=18
	EXEC SP_CHKXNSAVELOG 'WPSMERGE',@CSTEP,0,@CMEMOID,'',1

    SELECT @CMEMOID='',@NVERSIONNO=0

    SELECT TOP 1 @CMEMOID = B.memo_ID ,@CCURDEPTID=B.location_code ,@CLOCID = B.location_code 
    FROM stkcnt_MANUAL_STOCK_COUNT_XN_mst_upload  B (NOLOCK)
	where SP_ID =@NSPID 
  
   
    IF ISNULL(@CMEMOID,'')=''
		GOTO EXIT_PROC

    SET @CFILTERCONDITION = 'B.Sp_ID='''+@nSpId+''''

	SET @CSTEP=20
	
	SET @CMEMOIDSEARCH=''
	SELECT TOP 1 @CMEMOIDSEARCH=A.memo_ID FROM MANUAL_STOCK_COUNT_XN_mst A (NOLOCK) WHERE memo_ID=@CMEMOID
	
	IF ISNULL(@CMEMOIDSEARCH,'')<>''
		SET @BADDMODE=0
	ELSE
		SET @BADDMODE=1
 
--LBLMERGE:
	---DELETING EXISTING RECORD IF BILL COMES AGAIN FOR MERGING
	
	SET @CSTEP=25
	--SELECT @CTEMPMASTERTABLE,@CFILTERCONDITION
	IF @BADDMODE=0
		DELETE a FROM MANUAL_STOCK_COUNT_XN_det a JOIN stkcnt_MANUAL_STOCK_COUNT_XN_mst_upload b ON a.memo_id=b.memo_id
		WHERE sp_id=@nSpId
	

	SET @CSTEP=45
	SET @CTABLENAME='MANUAL_STOCK_COUNT_XN_mst'
	SET @CTMP_TABLENAME='stkcnt_MANUAL_STOCK_COUNT_XN_mst_upload'
	SET @CKEYFIELD='MEMO_ID'

	SET @CSTEP=50
		
	EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
							  ,@BALWAYSUPDATE=1,@lUpdateXns=@BADDMODE
							  
	SET @CSTEP=60
	SET @CTABLENAME='MANUAL_STOCK_COUNT_XN_det'
	SET @CTMP_TABLENAME='stkcnt_MANUAL_STOCK_COUNT_XN_det_upload'
	SET @CKEYFIELD='ROW_ID'

	 EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@lUpdateonly
							  ,@BALWAYSUPDATE=1,@lUpdateXns=1

	SET @CSTEP=70
	DELETE FROM STKCNT_MANUAL_STOCK_COUNT_XN_mst_upload with (rowLOCK) WHERE sp_id=@nSpId
	DELETE FROM STKCNT_MANUAL_STOCK_COUNT_XN_det_upload with (rowLOCK) WHERE sp_id=@nSpId

    
END TRY
BEGIN CATCH
	SET @CERRMSG='P:SP3S_SYNCH_UPLOADDATA_STKCNT_OPT, MEMO ID :'+@CMEMOID+' STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO EXIT_PROC
END CATCH

EXIT_PROC:

	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRMSG,'')='' 
			COMMIT
		ELSE
			ROLLBACK
    END
	
END	