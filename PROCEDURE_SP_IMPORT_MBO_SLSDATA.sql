CREATE PROCEDURE SP_IMPORT_MBO_SLSDATA
(
@CTABLENAME VARCHAR(100)='',
@CFILEPATH VARCHAR(1000)=''
)
--WITH ENCRYPTION
AS
BEGIN
     DECLARE @CCMD NVARCHAR(MAX),@CFINYERA VARCHAR(100),@CLOCATIONID VARCHAR(10),
             @NSTEP VARCHAR(100),@CERRORMSG VARCHAR(1000),@CFINYEAR VARCHAR(100),
             @CNTBLANKROW INT
     
     SET @CERRORMSG=''        
    IF ISNULL(@CTABLENAME,'')='' AND ISNULL(@CFILEPATH,'')=''
    RETURN
             
    SET @CLOCATIONID=(SELECT TOP 1 VALUE  FROM CONFIG  WHERE CONFIG_OPTION ='LOCATION_ID')
    SET @CFINYEAR=(SELECT CASE WHEN MONTH (GETDATE())<=3  THEN '011'+ CAST(RIGHT(YEAR(GETDATE()),2) AS VARCHAR(100)) ELSE   '011'+ CAST(RIGHT(YEAR(GETDATE()),2)+1 AS VARCHAR(100)) END)
     BEGIN TRAN
    BEGIN TRY
    
   IF ISNULL(@CFILEPATH,'')<>''
   BEGIN
     
     IF OBJECT_ID ('TEMPDB..#TMPDATA','U') IS NOT NULL
        DROP TABLE #TMPDATA
     
     SELECT CMD.DEPT_ID,CMM.CM_NO,CMM.CM_DT,PRODUCT_CODE ,QUANTITY ,MRP ,CMD.DISCOUNT_AMOUNT ,NET INTO #TMPDATA FROM CMM01106 CMM JOIN CMD01106 CMD ON CMM.CM_ID =CMD.CM_ID   WHERE 1>2
     
     SET @CCMD=N'BULK INSERT #TMPDATA
		FROM '''+@CFILEPATH+'''
		WITH 
		(
			 FIRSTROW = 2,
			 FIELDTERMINATOR = '',''
			,ROWTERMINATOR=''\n''
		)'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD	
   
         SET @CTABLENAME='#TMPDATA'
   	     SET @NSTEP = 30
	     SET @CCMD=N'SELECT @CNTBLANKROW=COUNT(*) FROM ' +@CTABLENAME+ '' 
				   PRINT @CCMD
				   EXEC SP_EXECUTESQL @CCMD,N'@CNTBLANKROW INT OUTPUT',@CNTBLANKROW OUTPUT
	    
	    IF ISNULL(@CNTBLANKROW,0)=0
	    BEGIN
	         SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' FORMAT DOES NOT EXIST PLEASE CHECK'	
			 GOTO END_PROC  
	    END
   END
   
    IF ISNULL(@CTABLENAME,'')<>''
    BEGIN         
    SET @NSTEP = 10	     
	---IF ALREADY EXISTS DELETE FROM CMD01106
	PRINT 'DELETE CMD01106'
	SET @CCMD=N'DELETE A FROM CMD01106 A 
				CMM01106 B ON A.CM_ID=B.CM_ID
				JOIN '+ @CTABLENAME+' T ON CMM.CM_NO=T.CM_NO AND T.CM_DT=CMM.CM_DT'
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD
	
	PRINT 'INSERT CMD01106 EXIST DATA'
	SET @NSTEP = 10	  --INSERT INTO CMD DELETED DATA
	SET @CCMD=N'SELECT T.PRODUCT_CODE, T.QUANTITY, T.MRP, T.NET
	            ,DISCOUNT_PERCENTAGE=CAST((T.DISCOUNT_AMOUNT*100)/T.MRP AS NUMERIC(18,2)), 
				DISCOUNT_AMOUNT=T.DISCOUNT_AMOUNT, ROW_ID=NEWID(), LAST_UPDATE=GETDATE(), 
				TAX_PERCENTAGE=0, 
				TAX_AMOUNT=0,SKU.EMP_CODE, SLSDET_ROW_ID='''', DEPT_ID=T.DEPT_ID, 
				OLD_MRP=ISNULL(OLD_MRP,0) , REF_SLS_MEMO_ID='''', REALIZE_SALE=T.MRP, CM_ID=CMM.CM_ID, RFNET=T.MRP, 
				TAX_TYPE=1, TAX_METHOD=1, EAN='''', EMP_CODE1=''0000000'', EMP_CODE2=''0000000'', ITEM_DESC='''', WEIGHTED_AVG_DISC_PCT=0, 
				WEIGHTED_AVG_DISC_AMT=0, MANUAL_DISCOUNT, FIX_MRP, 
				SR_NO=ROW_NUMBER () OVER (PARTITION BY T.CM_NO ORDER BY T.CM_NO), 
				HOLD_FOR_ALTER=0, 
				PACK_SLIP_ID='''', XN_TYPE='''', REPEAT_PUR_ORDER=0, BIN_ID=''000'', REF_ORDER_ID='''', FOC_QUANTITY=0, 
				CMM_DISCOUNT_AMOUNT=0, NRM_ID=''0000000'' 
				FROM '+@CTABLENAME+' T
				JOIN CMM01106 CMM (NOLOCK) ON CMM.CM_NO=T.CM_NO
				JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =T.PRODUCT_CODE
				LEFT JOIN
				(SELECT TOP 1 OLD_MRP,NEW_PRODUCT_CODE  FROM IRD01106 IRD (NOLOCK) ORDER BY TS DESC 
					  ) IRD ON IRD.NEW_PRODUCT_CODE =T.PRODUCT_CODE'
					  
	PRINT @CCMD
	INSERT  CMD01106	( PRODUCT_CODE, QUANTITY, MRP, NET, DISCOUNT_PERCENTAGE, DISCOUNT_AMOUNT, ROW_ID, LAST_UPDATE, TAX_PERCENTAGE, TAX_AMOUNT, EMP_CODE, SLSDET_ROW_ID, DEPT_ID, OLD_MRP, REF_SLS_MEMO_ID, REALIZE_SALE, CM_ID, RFNET, TAX_TYPE, TAX_METHOD, EAN, EMP_CODE1, EMP_CODE2, ITEM_DESC, WEIGHTED_AVG_DISC_PCT, WEIGHTED_AVG_DISC_AMT, MANUAL_DISCOUNT, FIX_MRP, SR_NO, HOLD_FOR_ALTER, PACK_SLIP_ID, XN_TYPE, REPEAT_PUR_ORDER, BIN_ID, REF_ORDER_ID, FOC_QUANTITY, CMM_DISCOUNT_AMOUNT, NRM_ID )  
	EXEC SP_EXECUTESQL @CCMD
	
	SET @NSTEP = 20	  --INSERT INTO CMD01106 NEW ROW DATA
	
	PRINT 'INSERT CMM01106 NEW DATA'
		
 SET @CCMD=N'SELECT REMARKS='''', SENT_FOR_RECON=0, PARTY_TYPE=1, AC_CODE=''0000000000'' , MANUAL_DISCOUNT=0, MANUAL_ROUNDOFF=0, BIN_ID=''000'', 
	 PATCHUP_RUN=0, 
	 SUBTOTAL_R=CASE WHEN CONVERT(NUMERIC(10,2),SUM(QUANTITY*T.MRP)) <0 THEN CONVERT(NUMERIC(10,2),SUM(QUANTITY*T.MRP)) ELSE 0 END , 
	 PASSPORT_NO=0, TICKET_NO='''', FLIGHT_NO='''', MRP_WSP=1, MANUAL_BILL=0, FC_RATE=0, POSTEDINAC=0, CM_NO=T.CM_NO, CM_DT=T.CM_DT, 
	 CM_MODE=1, 
	 SUBTOTAL=CASE WHEN CONVERT(NUMERIC(10,2),SUM(QUANTITY*T.MRP)) >0 THEN CONVERT(NUMERIC(10,2),SUM(QUANTITY*T.MRP)) ELSE 0 END ,  
	 DT_CODE=''0000000'', 
	 DISCOUNT_PERCENTAGE=0, 
	 DISCOUNT_AMOUNT=0, 
	 NET_AMOUNT=CONVERT(NUMERIC(18,2),SUM(QUANTITY*T.MRP)),  CUSTOMER_CODE=''000000000000'', 
	 CANCELLED=0, USER_CODE=''0000000'', LAST_UPDATE=GETDATE (), EXEMPTED=0,  SENT_TO_HO=0, 
	 CM_TIME=GETDATE(),
	 CM_ID='''+@CLOCATIONID+''' + '''+@CFINYEAR+'''+ REPLICATE(''0'', 15-LEN(LTRIM(RTRIM(T.CM_NO)))) + LTRIM(RTRIM(T.CM_NO)), 
	 REF_CM_ID='''', 
	 FIN_YEAR='''+@CFINYEAR+''', ATD_CHARGES=0, COPIES_PTD=0, 
	 ROUND_OFF=RIGHT(SUM(QUANTITY*T.MRP),2), MEMO_TYPE=1, PAY_MODE=1, SMS_SENT=0, AUTOENTRY=0, CASH_TENDERED=0, PAYBACK=0, 
	 ECOUPON_ID='''', CAMPAIGN_GC_OTP='''', SALESSETUPINEFFECT=0, EDT_USER_CODE='''', GV_AMOUNT=0, 
	 REF_NO='''', SENT_FOR_GR=0 
	 FROM  '+@CTABLENAME+' T
	 JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =T.PRODUCT_CODE
	 LEFT JOIN CMM01106 CMM (NOLOCK) ON CMM.CM_NO=T.CM_NO
	 WHERE CMM.CM_NO IS NULL
	 GROUP BY T.CM_NO,T.CM_DT'
	
	PRINT @CCMD
	INSERT INTO CMM01106	( REMARKS, SENT_FOR_RECON, PARTY_TYPE, AC_CODE, MANUAL_DISCOUNT, MANUAL_ROUNDOFF, BIN_ID, PATCHUP_RUN, SUBTOTAL_R, PASSPORT_NO, TICKET_NO, FLIGHT_NO, MRP_WSP, MANUAL_BILL, FC_RATE, POSTEDINAC, CM_NO, CM_DT, CM_MODE, SUBTOTAL, DT_CODE, DISCOUNT_PERCENTAGE, DISCOUNT_AMOUNT, NET_AMOUNT, CUSTOMER_CODE, CANCELLED, USER_CODE, LAST_UPDATE, EXEMPTED,  SENT_TO_HO, CM_TIME, CM_ID, REF_CM_ID, FIN_YEAR, ATD_CHARGES, COPIES_PTD, ROUND_OFF, MEMO_TYPE, PAY_MODE, SMS_SENT, AUTOENTRY, CASH_TENDERED, PAYBACK, ECOUPON_ID, CAMPAIGN_GC_OTP, SALESSETUPINEFFECT, EDT_USER_CODE, GV_AMOUNT, REF_NO, SENT_FOR_GR ) 
	EXEC SP_EXECUTESQL @CCMD	
   
	PRINT 'INSERT CMD01106 NEW DATA'
 SET @CCMD=N'SELECT T.PRODUCT_CODE, T.QUANTITY, T.MRP, T.NET,DISCOUNT_PERCENTAGE=CASE WHEN T.MRP>0 THEN CAST((T.DISCOUNT_AMOUNT*100)/T.MRP AS NUMERIC(18,2)) ELSE 0 END, 
	DISCOUNT_AMOUNT=T.DISCOUNT_AMOUNT, ROW_ID=NEWID(), LAST_UPDATE=GETDATE(), 
	TAX_PERCENTAGE=0, 
	TAX_AMOUNT=0,SKU.EMP_CODE, SLSDET_ROW_ID='''', DEPT_ID=T.DEPT_ID, 
	OLD_MRP=ISNULL(IRD.OLD_MRP,0) , REF_SLS_MEMO_ID='''', REALIZE_SALE=T.MRP, 
	CM_ID='''+@CLOCATIONID+''' + '''+@CFINYEAR+'''+ REPLICATE(''0'', 15-LEN(LTRIM(RTRIM(T.CM_NO)))) + LTRIM(RTRIM(T.CM_NO)), 
	RFNET=T.MRP, 
	TAX_TYPE=1, TAX_METHOD=1, EAN='''', EMP_CODE1=''0000000'', EMP_CODE2=''0000000'', ITEM_DESC='''', WEIGHTED_AVG_DISC_PCT=0, 
	WEIGHTED_AVG_DISC_AMT=0, MANUAL_DISCOUNT=0, FIX_MRP=0, 
	SR_NO=ROW_NUMBER () OVER (PARTITION BY T.CM_NO ORDER BY T.CM_NO), 
	HOLD_FOR_ALTER=0, 
	PACK_SLIP_ID='''', XN_TYPE='''', REPEAT_PUR_ORDER=0, BIN_ID=''000'', REF_ORDER_ID='''', FOC_QUANTITY=0, 
	CMM_DISCOUNT_AMOUNT=0, NRM_ID=''0000000'' 
	FROM '+@CTABLENAME+' T
	LEFT JOIN CMM01106 CMM (NOLOCK) ON CMM.CM_NO=T.CM_NO
	LEFT JOIN CMD01106 CMD ON CMM.CM_ID=CMD.CM_ID 
	JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =T.PRODUCT_CODE
	LEFT JOIN
	(SELECT TOP 1 OLD_MRP,NEW_PRODUCT_CODE  FROM IRD01106 IRD (NOLOCK) ORDER BY TS DESC 
		  ) IRD ON IRD.NEW_PRODUCT_CODE =T.PRODUCT_CODE
		  WHERE CMD.CM_ID IS NULL' 

    PRINT @CCMD
	INSERT CMD01106	( PRODUCT_CODE, QUANTITY, MRP, NET, DISCOUNT_PERCENTAGE, DISCOUNT_AMOUNT, ROW_ID, LAST_UPDATE, TAX_PERCENTAGE, TAX_AMOUNT, EMP_CODE, SLSDET_ROW_ID, DEPT_ID, OLD_MRP, REF_SLS_MEMO_ID, REALIZE_SALE, CM_ID, RFNET, TAX_TYPE, TAX_METHOD, EAN, EMP_CODE1, EMP_CODE2, ITEM_DESC, WEIGHTED_AVG_DISC_PCT, WEIGHTED_AVG_DISC_AMT, MANUAL_DISCOUNT, FIX_MRP, SR_NO, HOLD_FOR_ALTER, PACK_SLIP_ID, XN_TYPE, REPEAT_PUR_ORDER, BIN_ID, REF_ORDER_ID, FOC_QUANTITY, CMM_DISCOUNT_AMOUNT, NRM_ID )  
	EXEC SP_EXECUTESQL @CCMD	
	
	GOTO END_PROC
   END
   
    END TRY
	BEGIN CATCH
		SET @CERRORMSG = 'PROCEDURE IMPORT_MBO_SLSDATA: STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		-- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG, '''' AS MEMO_ID'
		GOTO END_PROC
	END CATCH	
   END_PROC:
    IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')='' 
				COMMIT TRANSACTION
		ELSE
				ROLLBACK
				
	END
	
 SET @CCMD=N'SELECT DISTINCT  CM_NO,ISNULL('''+@CERRORMSG+''','''') AS ERROR_MSG FROM ' +@CTABLENAME+ '' 
				   PRINT @CCMD
				   EXEC SP_EXECUTESQL @CCMD
END
