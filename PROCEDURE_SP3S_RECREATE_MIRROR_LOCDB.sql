CREATE PROCEDURE SP3S_RECREATE_MIRROR_LOCDB
(
	@CDEPT_ID VARCHAR(5)='' 
)
--WITH ENCRYPTION
AS
BEGIN
	/*
		208_2014_01_13 : THIS PROCEDURE WILL CREATE MIRROR DATABASES CORRESPONDING TO ALL BRACHES AT HEAD OFFICE, 
						 IF IT DOESN'T EXISTS AND COPY ALL TABLE STRUCTURE TO THE NEW DATABASES FROM THE PARENT DATABASE.
	*/
	DECLARE @CCUR_DEPT_ID VARCHAR(5),@CHO_DEPT_ID VARCHAR(5),@CMAJOR_DEPT_ID VARCHAR(5),@CERRMSG VARCHAR(1000)
			,@CSTEP VARCHAR(5),@DTSQL NVARCHAR(MAX),@CFILEPATH VARCHAR(500),@CTARGETDBNAME VARCHAR(200)
			,@CCRT_DB VARCHAR(200),@CCRT_TABLE VARCHAR(200)
	SET @CSTEP=00			
	SELECT TOP 1 @CCUR_DEPT_ID=VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'	
	SELECT TOP 1 @CHO_DEPT_ID=VALUE FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'	
	IF @CCUR_DEPT_ID<>@CHO_DEPT_ID
	BEGIN
		SET @CERRMSG='P:SP3S_RECREATE_MIRROR_LOCDB,MESSAGE: THIS PROCEDURE CAN ONLY BE EXECUTED AT HEAD OFFICE....'
		GOTO EXIT_PROC
	END 

	SET @CSTEP=10
	SELECT @CFILEPATH=PHYSICAL_NAME FROM SYS.MASTER_FILES WHERE DATABASE_ID=DB_ID(DB_NAME()) AND TYPE_DESC='ROWS'
	SET @CFILEPATH=REVERSE(RIGHT(REVERSE(@CFILEPATH),(LEN(@CFILEPATH)-CHARINDEX('\',REVERSE(@CFILEPATH),1))+1))
	BEGIN TRY

		SET @CSTEP=15

		IF OBJECT_ID('TEMPDB..#CRT_DBS','U') IS NOT NULL
			DROP TABLE #CRT_DBS

		CREATE TABLE #CRT_DBS(DBNAME VARCHAR(200))

		SET @CSTEP=20
		IF CURSOR_STATUS('GLOBAL','CUR_ALL_DEPTS') IN (0,1)
		BEGIN
			CLOSE CUR_ALL_DEPTS
			DEALLOCATE CUR_ALL_DEPTS
		END
		
		SET @CSTEP=30
		DECLARE CUR_ALL_DEPTS CURSOR FOR SELECT DISTINCT LTRIM(RTRIM(MAJOR_DEPT_ID)) FROM LOCATION WHERE MAJOR_DEPT_ID<>@CHO_DEPT_ID AND (''=@CDEPT_ID OR MAJOR_DEPT_ID=@CDEPT_ID)
		OPEN CUR_ALL_DEPTS
		FETCH NEXT FROM CUR_ALL_DEPTS INTO @CMAJOR_DEPT_ID
		WHILE @@FETCH_STATUS=0
		BEGIN
			SET @CSTEP='40'
			SET @CTARGETDBNAME='WIZAPP3S_MIRROR_'+@CMAJOR_DEPT_ID
			
			SET @CSTEP='50 - '+@CMAJOR_DEPT_ID
			SET @DTSQL=N'IF NOT EXISTS(SELECT TOP 1 ''U'' FROM SYS.DATABASES WHERE NAME='''+@CTARGETDBNAME+''') 
			BEGIN
				CREATE DATABASE ' + @CTARGETDBNAME + ' ON '+
				' ( NAME = ' + @CTARGETDBNAME + ', ' + 
				'  FILENAME = ''' + @CFILEPATH  + @CTARGETDBNAME + '.MDF'' ) ' + 
				' LOG ON ' + 
				' ( NAME = ' + @CTARGETDBNAME + '_LOG, ' + 
				'  FILENAME = ''' + @CFILEPATH  + @CTARGETDBNAME + '_LOG.LDF'' )
			END'
			PRINT @DTSQL
			EXEC SP_EXECUTESQL @DTSQL
					
			INSERT #CRT_DBS(DBNAME)
			SELECT @CTARGETDBNAME
					
			FETCH NEXT FROM CUR_ALL_DEPTS INTO @CMAJOR_DEPT_ID		
		END
	CLOSE CUR_ALL_DEPTS
	DEALLOCATE CUR_ALL_DEPTS	

	SET @CSTEP=60
	IF OBJECT_ID('TEMPDB..#CRT_TABLES','U') IS NOT NULL
		DROP TABLE #CRT_TABLES

	SET @CSTEP=70
	SELECT NAME INTO #CRT_TABLES FROM SYS.TABLES WHERE NAME NOT LIKE 'TMP_%'
	SET @CSTEP=80
	IF CURSOR_STATUS('GLOBAL','CUR_DBS') IN (0,1)
	BEGIN
		CLOSE CUR_DBS
		DEALLOCATE CUR_DBS
	END

	SET @CSTEP=90
	IF CURSOR_STATUS('GLOBAL','CUR_TABLES') IN (0,1)
	BEGIN
		CLOSE CUR_TABLES
		DEALLOCATE CUR_TABLES
	END

	SET @CSTEP=100
	DECLARE CUR_DBS CURSOR FOR SELECT DBNAME FROM #CRT_DBS
	OPEN CUR_DBS
	FETCH NEXT FROM CUR_DBS INTO @CCRT_DB
	WHILE @@FETCH_STATUS=0
	BEGIN
		SET @CSTEP='110'+@CCRT_DB
		
		DECLARE CUR_TABLES CURSOR FOR SELECT NAME FROM #CRT_TABLES
		OPEN CUR_TABLES
		FETCH NEXT FROM CUR_TABLES INTO @CCRT_TABLE
		WHILE @@FETCH_STATUS=0
		BEGIN
			SET @CSTEP='120'+@CCRT_TABLE
			
			SET @DTSQL=N'SELECT * INTO '+@CCRT_DB+'.DBO.['+@CCRT_TABLE+'] FROM ['+@CCRT_TABLE+'] (NOLOCK) WHERE 1=2'
			PRINT @DTSQL
			EXEC SP_EXECUTESQL @DTSQL	
		FETCH NEXT FROM CUR_TABLES INTO @CCRT_TABLE
		END
		CLOSE CUR_TABLES
		DEALLOCATE CUR_TABLES
		SET @CTARGETDBNAME='WIZAPP3S_MIRROR_'+@CMAJOR_DEPT_ID
		
		SET @CSTEP='130'+@CCRT_DB
		SET @DTSQL=N'INSERT '+@CCRT_DB+'.DBO.CONFIG	( CONFIG_OPTION, VALUE, ROW_ID, LAST_UPDATE, DEPT_ID, REMARKS )  
		SELECT 	''PRIMARY_DBNAME'' AS CONFIG_OPTION,DB_NAME() AS VALUE,NEWID() AS ROW_ID,GETDATE() AS LAST_UPDATE,'''' AS DEPT_ID,''MIRROR_CONFIG'' AS REMARKS'
		PRINT @DTSQL
		EXEC SP_EXECUTESQL @DTSQL	
		
		FETCH NEXT FROM CUR_DBS INTO @CCRT_DB
	END
	CLOSE CUR_DBS
	DEALLOCATE CUR_DBS
	
END TRY

BEGIN CATCH
	SET @CERRMSG='P:SP3S_RECREATE_MIRROR_LOCDB, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
END CATCH

EXIT_PROC:
	IF ISNULL(@CERRMSG,'')<>''
		SELECT @CERRMSG AS MESSAGE

END	
---END OF PROCEDURE - SP3S_RECREATE_MIRROR_LOCDB
