CREATE PROCEDURE SP3S_GENEAN_ARTICLE
(
 @CARTICLE_code VARCHAR(10),
 @CFINYEAR VARCHAR(5)
)
AS
BEGIN
     
 DECLARE @NSTEP INT,@CERRORMSG VARCHAR(1000)
 DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), ARTICLE_NO VARCHAR(10)) 
 
 SET @CERRORMSG=''

BEGIN TRANSACTION         
BEGIN TRY   
    
    SET @NSTEP=10
    
   -- SELECT * FROM TMPMASTERSENC
   
   if OBJECT_ID ('TEMPDB..#TMPMASTERSENC','U') IS NOT NULL
      DROP TABLE #TMPMASTERSENC
   
    SELECT SECTION_NAME,SUB_SECTION_NAME,ARTICLE_NO,
           PARA1_NAME,PARA2_NAME,CAST('' AS VARCHAR(100)) AS PARA3_NAME,CAST('' AS VARCHAR(100)) AS PARA4_NAME,
           CAST('' AS VARCHAR(100)) AS PARA5_NAME,CAST('' AS VARCHAR(100)) AS PARA6_NAME,
           AP2.PURCHASE_PRICE AS PURCHASE_PRICE,
           AP2.MRP AS MRP,AP2.WS_PRICE AS WS_PRICE,ART.CODING_SCHEME,ISNULL(SKU.PRODUCT_CODE,'') AS PRODUCT_CODE,
           UOM.UOM_NAME,CAST('' AS VARCHAR(100)) AS AC_NAME,NEWID() AS  ROW_ID,STOCK_NA,
           ART.FIX_MRP AS FIX_MRP,ISNULL(SKU.PRODUCT_NAME,'') AS PRODUCT_NAME,ART.GEN_EAN_CODES,CAST('000' AS VARCHAR(7)) AS BIN_ID,
           ARTICLE_NAME,CAST('' AS VARCHAR(100)) AS FORM_NAME,ART.ALIAS AS  ARTICLE_ALIAS,
           SM.ALIAS AS SECTION_ALIAS,SD.ALIAS AS SUB_SECTION_ALIAS,
           ART.HSN_CODE,ART. PARA1_SET,ART.PARA2_SET,
           P1.PARA1_SET AS P1_SET,P2.PARA2_SET P2_SET ,art.EAN_PREFIX,
		   art.article_code,p1.para1_code,p2.para2_code,
		   AP2.WS_PRICE wholesale_price
    INTO #TMPMASTERSENC
    FROM ARTICLE ART (NOLOCK)
    JOIN ART_PARA1 AP1 (NOLOCK) ON ART.ARTICLE_CODE =AP1.ARTICLE_CODE 
    JOIN ART_DET AP2 (NOLOCK) ON ART.ARTICLE_CODE =AP2.ARTICLE_CODE 
    JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE =ART.SUB_SECTION_CODE 
    JOIN SECTIONM SM (NOLOCK) ON SM.SECTION_CODE =SD.SECTION_CODE  
    JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE =AP1.PARA1_CODE
    JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE =AP2.PARA2_CODE
    JOIN UOM (NOLOCK) ON UOM.UOM_CODE =ART.UOM_CODE 
    LEFT JOIN SKU (NOLOCK) ON SKU.ARTICLE_CODE =ART.ARTICLE_CODE AND SKU.PARA1_CODE=AP1.PARA1_CODE AND SKU.PARA2_CODE =AP2.PARA2_CODE 
    WHERE ART.ARTICLE_code=@CARTICLE_code AND SKU.PRODUCT_CODE IS NULL
   
     SET @NSTEP=20
    IF NOT EXISTS (SELECT TOP 1 'U' FROM #TMPMASTERSENC)
    BEGIN
       --set @CERRORMSG='EAN HAS ALREDY GENERATE'
	     set @CERRORMSG=''
       GOTO END_PROC
    END
    
	
  IF OBJECT_ID('TEMPDB..#TMPMASTERSENC','U') IS NOT NULL   
  BEGIN  
	 CREATE INDEX IX_#TMPMASTERSENC_ARTICLE_NO ON #TMPMASTERSENC(article_code)  
	 CREATE INDEX IX_#TMPMASTERSENC_PARA1_NAME ON #TMPMASTERSENC(para1_code)  
	 CREATE INDEX IX_#TMPMASTERSENC_PARA2_NAME ON #TMPMASTERSENC(para2_code) 
	 CREATE INDEX IX_#TMPMASTERSENC_PRODUCT_CODE ON #TMPMASTERSENC(PRODUCT_CODE)  
  END  
    
   
	SELECT ARTICLE_CODE,PARA1_CODE,PARA2_CODE,PRODUCT_CODE,CAST('' AS VARCHAR(10)) AS EAN_PREFIX 
		INTO #BARCODES_EAN 
	FROM SKU (NOLOCK)
	WHERE 1=2
 
	 INSERT INTO #BARCODES_EAN(ARTICLE_CODE,PARA1_CODE,PARA2_CODE,EAN_PREFIX,PRODUCT_CODE )
	 SELECT A.ARTICLE_CODE,A.PARA1_CODE ,A.PARA2_CODE ,A. EAN_PREFIX,
			A.PRODUCT_CODE
	 FROM #TMPMASTERSENC A 
	 GROUP BY A.ARTICLE_CODE,A.PARA1_CODE ,A.PARA2_CODE ,A. EAN_PREFIX,
			A.PRODUCT_CODE
	 
 

    EXEC GETNEXTEANCODE_OPT @CERRORMSG OUTPUT 
    IF ISNULL(@CERRORMSG,'')<>''  
    BEGIN  
	  SET @CERRORMSG=@CERRORMSG  
	  GOTO END_PROC  
	
    END


    
    
 
 END TRY  
   
 BEGIN CATCH  
  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()  
  GOTO END_PROC  
 END CATCH  
   
END_PROC:  
 
 IF @@TRANCOUNT>0  
 BEGIN  
  IF ISNULL(@CERRORMSG,'')='' 
  BEGIN
		commit TRANSACTION
  END	
  ELSE  
   ROLLBACK  
 END  
 
 IF ISNULL(@CERRORMSG,'')<>'' 
 BEGIN
    SELECT @CERRORMSG AS ERRMSG
 END
 ELSE
 BEGIN
     
     SELECT A.PRODUCT_CODE,ARTICLE_NO,SUB_SECTION_NAME ,SECTION_NAME ,PARA1_NAME ,PARA2_NAME ,
            A.MRP ,A.PURCHASE_PRICE ,A.WS_PRICE  
     FROM SKU A
     JOIN ARTICLE ART ON A.ARTICLE_CODE =ART.ARTICLE_CODE
     JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE =ART.SUB_SECTION_CODE 
     JOIN SECTIONM SM (NOLOCK) ON SM.SECTION_CODE =SD.SECTION_CODE  
     JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE =A.PARA1_CODE
     JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE =A.PARA2_CODE
     WHERE ART.article_code =@CARTICLE_code 
 
 END
 
 
  --INSERT @OUTPUT ( ERRMSG, ARTICLE_NO)  
  --VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CARTICLE_NO,'') )  
  
  --SELECT * FROM @OUTPUT   
END