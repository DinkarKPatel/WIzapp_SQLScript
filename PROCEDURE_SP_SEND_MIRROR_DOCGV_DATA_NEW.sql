CREATE PROCEDURE SP_SEND_MIRROR_DOCGV_DATA_NEW --(LocId 3 digit change by Sanjay:30-10-2024)
	 @CREQXNID VARCHAR(50)
	,@CTARGETLOCID VARCHAR(4)
	,@BACKNOWLEDGE BIT=0
	,@CERRMSG VARCHAR(1000) OUTPUT
AS
/*
	SP_SEND_MIRROR_DOCGV_DATA : THIS PROCEDURE USE TO SEND DOCGV DATA
*/
BEGIN
	DECLARE @DTSQL NVARCHAR(MAX),@NSPID INT,@CTEMPTABLE VARCHAR(500),@CMEMOID VARCHAR(50),
	@CTEMPEMPLOYEETABLE VARCHAR(200),@DMEMOLASTUPDATE DATETIME,@CTABLENAME VARCHAR(100),
	@BRECFOUND BIT,@CSTEP VARCHAR(5),@CFILTERCONDITION VARCHAR(MAX),@CCUTOFFDATE VARCHAR(20),
	@CTEMPMASTERTABLE VARCHAR(200),@CTEMPDETAILTABLE VARCHAR(200),@CTEMPLMTABLE VARCHAR(200),
	@CTEMPLMPTABLE VARCHAR(200),@CTEMPAREATABLE VARCHAR(200),@CTEMPCITYTABLE VARCHAR(200),
	@CTEMPPMODEXNTABLE VARCHAR(200),@CTEMPPMODETABLE VARCHAR(200),@CSTNAPPROVAL BIT,
	@CCLOCID VARCHAR(10),@CHOLOCID VARCHAR(10),@BSENDPURINFOLOC BIT,@CCURDEPTID VARCHAR(4),@CHODEPTID VARCHAR(4),
	@BPURLOC BIT,@BHOWH BIT,@CTEMPSKUGVTABLE VARCHAR(500),@CTEMPSKUOHTABLE VARCHAR(500),
	@NTARGETLOCTYPE INT,@BTARGETPURLOC BIT,@CTEMPSLSBCTABLE VARCHAR(500),@CTEMPSLSDETTABLE VARCHAR(500), 
	@CTEMPTABLEDB VARCHAR(100)
	
	DECLARE @TXNSSENDINFO TABLE (ORG_TABLENAME VARCHAR(50),TMP_TABLENAME VARCHAR(50),XN_ID VARCHAR(40))  
	SET @CTEMPTABLEDB = DB_NAME()+'_TEMP.DBO.'

BEGIN TRY 	
	
	SET @CSTEP=10
	---- IF NO MEMO FOUND , JUST END THE PROCESS
	SET @CMEMOID=@CREQXNID

LBLTABLEINFO:
	SET @CSTEP=50
	---- POPULATE LIST OF TABLES 

	SET @CTEMPMASTERTABLE='TMP_DOCGV_GV_STKXFER_MST_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))

	INSERT @TXNSSENDINFO (ORG_TABLENAME) VALUES ('GV_STKXFER_MST')
	INSERT @TXNSSENDINFO (ORG_TABLENAME) VALUES ('GV_STKXFER_DET')
	INSERT @TXNSSENDINFO (ORG_TABLENAME) VALUES ('SKU_GV_MST')
	INSERT @TXNSSENDINFO (ORG_TABLENAME) VALUES ('GV_MST_INFO')
	
	SET @CSTEP=60
	IF CURSOR_STATUS('GLOBAL','MIRRORDOCGVCUR') IN (0,1)	
	BEGIN
		CLOSE MIRRORDOCGVCUR
		DEALLOCATE MIRRORDOCGVCUR
	END
	
	SET @CSTEP=80
	---- DROP THE TEMPORARY TABLES ALREADY EXISTING
	DECLARE MIRRORDOCGVCUR CURSOR FOR SELECT ORG_TABLENAME FROM @TXNSSENDINFO
	OPEN MIRRORDOCGVCUR
	
	FETCH NEXT FROM MIRRORDOCGVCUR INTO @CTABLENAME
	WHILE @@FETCH_STATUS=0
	BEGIN
		SET @CSTEP=90
		SET @CTEMPTABLE='TMP_DOCGV_'+@CTABLENAME+'_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))
		SET @DTSQL=N'IF OBJECT_ID('''+@CTEMPTABLEDB+@CTEMPTABLE+''',''U'') IS NOT NULL  
						DROP TABLE '+@CTEMPTABLEDB+'['+@CTEMPTABLE+']'
		PRINT @DTSQL
		EXEC SP_EXECUTESQL @DTSQL		
	
		FETCH NEXT FROM MIRRORDOCGVCUR INTO @CTABLENAME
	END

	CLOSE MIRRORDOCGVCUR
	DEALLOCATE MIRRORDOCGVCUR

	SET @CSTEP=100
	
	IF @BACKNOWLEDGE=1
		GOTO END_PROC
		
	SET @DTSQL=N'SELECT GV_STKXFER_MST.* INTO '+@CTEMPTABLEDB+'['+@CTEMPMASTERTABLE+'] FROM GV_STKXFER_MST (NOLOCK)
			     WHERE MEMO_ID='''+@CMEMOID+''''
	PRINT @DTSQL
	EXEC SP_EXECUTESQL @DTSQL

	SET @CSTEP=240
	---- SEND THE WHOLESALE MEMO DETAIL TABLE
	SET @CTEMPDETAILTABLE='TMP_DOCGV_GV_STKXFER_DET_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))
	SET @DTSQL=N'SELECT  GV_STKXFER_DET.* INTO '+@CTEMPTABLEDB+'['+@CTEMPDETAILTABLE+'] FROM GV_STKXFER_DET
				 JOIN '+@CTEMPTABLEDB+@CTEMPMASTERTABLE+' B ON B.MEMO_ID=GV_STKXFER_DET.MEMO_ID'
	PRINT @DTSQL	
	EXEC SP_EXECUTESQL @DTSQL
	
	---- SEND SKU_GV TABLE       
	SET @CSTEP=250
	SET @CTEMPSKUGVTABLE='TMP_DOCGV_SKU_GV_MST_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))
	SET @DTSQL=N'SELECT A.* INTO '+@CTEMPTABLEDB+'['+@CTEMPSKUGVTABLE+'] FROM SKU_GV_MST A (NOLOCK) JOIN 
	'+@CTEMPTABLEDB+'TMP_DOCGV_GV_STKXFER_DET_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))+ ' B (NOLOCK) ON A.GV_SRNO = B.GV_SRNO' 
	PRINT @DTSQL	
	EXEC SP_EXECUTESQL @DTSQL
	
	SET @DTSQL=N'UPDATE '+@CTEMPTABLEDB+@CTEMPMASTERTABLE+' WITH (ROWLOCK) SET USER_CODE=''0000000'''	
	PRINT @DTSQL	
	EXEC SP_EXECUTESQL @DTSQL

	---- SEND SKU_GV TABLE       
	SET @CSTEP=260
	SET @CTEMPSKUGVTABLE='TMP_DOCGV_GV_MST_INFO_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))
	SET @DTSQL=N'SELECT A.* INTO '+@CTEMPTABLEDB+'['+@CTEMPSKUGVTABLE+'] FROM GV_MST_INFO A JOIN 
	'+@CTEMPTABLEDB+'TMP_DOCGV_GV_STKXFER_DET_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))+ ' B ON A.GV_SRNO = B.GV_SRNO' 
	PRINT @DTSQL	
	EXEC SP_EXECUTESQL @DTSQL

	SET @CSTEP=390
	DECLARE MIRRORDOCGVCUR CURSOR FOR SELECT ORG_TABLENAME FROM @TXNSSENDINFO
	OPEN MIRRORDOCGVCUR
	SET @CSTEP=400
	FETCH NEXT FROM MIRRORDOCGVCUR INTO @CTABLENAME
	WHILE @@FETCH_STATUS=0
	BEGIN
		SET @CSTEP=390
		SET @CTEMPTABLE='TMP_DOCGV_'+@CTABLENAME+'_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))
		SET @CSTEP=400
		
		SET @BRECFOUND = 0
		IF OBJECT_ID(@CTEMPTABLEDB+@CTEMPTABLE,'U') IS NOT NULL
		BEGIN
			BEGIN
				SET @DTSQL=N'IF EXISTS (SELECT TOP 1 * FROM '+@CTEMPTABLEDB+'['+@CTEMPTABLE+'])
								SET @BRECFOUND=1
							ELSE
								SET @BRECFOUND=0'
				EXEC SP_EXECUTESQL @DTSQL,N'@BRECFOUND BIT OUTPUT',@BRECFOUND OUTPUT
			END 
		END
		
		SET @CSTEP=410
		IF ISNULL(@BRECFOUND,0)=0
			DELETE FROM @TXNSSENDINFO WHERE ORG_TABLENAME=@CTABLENAME
			
		FETCH NEXT FROM MIRRORDOCGVCUR INTO @CTABLENAME	
	END			
	CLOSE MIRRORDOCGVCUR
	DEALLOCATE MIRRORDOCGVCUR
	
	SET @CSTEP=420
	UPDATE @TXNSSENDINFO SET TMP_TABLENAME='TMP_DOCGV_'+ORG_TABLENAME+'_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_'))),
	XN_ID=@CMEMOID
  
	GOTO END_PROC
	
END TRY

BEGIN CATCH
	SET @CERRMSG='P: SP_SEND_MIRROR_DOCGV_DATA_NEW, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO END_PROC
END CATCH 		

END_PROC:
	IF @BACKNOWLEDGE=0 AND ISNULL(@CERRMSG,'')=''
		SELECT * FROM @TXNSSENDINFO
		
END
---END OF PROCEDURE - SP_SEND_MIRROR_DOCGV_DATA_NEW
