create PROCEDURE VALIDATEXN_WSL
 @CXNID VARCHAR(50),	
 @NUPDATEMODE INT,	
 @BCALLEDFORPRINT BIT=0, 		  		 
 @CERRORMSG VARCHAR(200) OUTPUT,
 @CDEPT_ID VARCHAR(5)
--WITH ENCRYPTION
AS
BEGIN
	
	PRINT 'VALIDATE WSL-1'
	DECLARE @CPRODUCTCODE VARCHAR(50),@CCMD NVARCHAR(MAX),@NSUMINDNET NUMERIC(14,2),@NSUBTOTAL NUMERIC(14,2),
			@NCALCTOTALAMOUNT NUMERIC(14,2),@NINMTOTALAMOUNT NUMERIC(14,2),@NCALCDISCOUNTAMT NUMERIC(10,2),
			@NDISCOUNTAMT NUMERIC(10,2),@NCALCTAXAMT NUMERIC(14,2),@NTAXAMT NUMERIC(14,2),@NTOTALCUSTOMDUTY NUMERIC(10,2),
			@NSTEP INT,@NSPID INT,@BDEBUGMODE BIT,@Ngstcessamount NUMERIC(14,2)

SELECT @NSPID=@@SPID,@BDEBUGMODE=1

SET @NSTEP=10

	IF  ISNULL(@BCALLEDFORPRINT,0)=0 AND @nUpdatemode NOT IN(2,3)
	BEGIN
		EXEC SP_CHKXNSAVELOG 'WSL-VALID',@NSTEP,0,@NSPID,@BDEBUGMODE		

		PRINT 'VALIDATING MEMO DATE start'
		EXEC SP_VALIDATE_MEMODATE_OPT
		@CXNTYPE='WSL',
		@CXNID=@CXNID,
		@CERRORMSG=@CERRORMSG OUTPUT
	
	PRINT 'VALIDATING MEMO DATE end '
		IF @CERRORMSG<>''
			RETURN

		PRINT 'VALIDATING MEMO DATE finish'
	END	 					
	PRINT 'VALIDATE WSL-2'

SET @NSTEP=20
EXEC SP_CHKXNSAVELOG 'WSL-VALID',@NSTEP,0,@NSPID,@BDEBUGMODE	
       
	
	DECLARE @CPCCODE VARCHAR(100)
	SELECT TOP 1 @CPCCODE=A.PRODUCT_CODE 
	FROM IND01106 A (NOLOCK)
	JOIN INM01106 B (NOLOCK) ON A.INV_ID =B.INV_ID 
	JOIN SKU (NOLOCK) ON A.PRODUCT_CODE =SKU.PRODUCT_CODE 
	WHERE A.INV_ID =@CXNID
	AND CASE WHEN ISNULL(SKU.ER_FLAG ,0) IN(0,1) THEN 1 ELSE SKU.ER_FLAG END <>isnull(B.MEMO_TYPE ,0)

    IF ISNULL(@CPCCODE,'')<>''
	BEGIN
	    
			SELECT A.PRODUCT_CODE,
			     SKU_ERFLAG=  CASE WHEN ISNULL(SKU.ER_FLAG ,0) IN(0,1) THEN 1 ELSE SKU.ER_FLAG END ,
				 inm_MEMO_TYPE =B.MEMO_TYPE,
				 ERRMSG ='Mismatch Invoice between barcode Er flag'
			FROM IND01106 A (NOLOCK)
			JOIN INM01106 B (NOLOCK) ON A.INV_ID =B.INV_ID 
			JOIN SKU (NOLOCK) ON A.PRODUCT_CODE =SKU.PRODUCT_CODE 
			WHERE A.INV_ID =@CXNID
			AND CASE WHEN ISNULL(SKU.ER_FLAG ,0) IN(0,1) THEN 1 ELSE SKU.ER_FLAG END <>isnull(B.MEMO_TYPE ,0)

			SET @CERRORMSG = 'Mismatch Invoice between barcode Er flag' 
			RETURN

	END



	
	-- CHECKING DISCOUNT AMOUNT AT ITEM LEVEL
	SELECT TOP 1 @CPRODUCTCODE=PRODUCT_CODE,@NCALCDISCOUNTAMT=ROUND((INVOICE_QUANTITY*RATE)*DISCOUNT_PERCENTAGE/100,0),
	@NDISCOUNTAMT=DISCOUNT_AMOUNT FROM IND01106 WHERE INV_ID=@CXNID AND ISNULL(MANUAL_DISCOUNT,0)=0

	
			
	IF 	ABS(@NDISCOUNTAMT-ISNULL(@NCALCDISCOUNTAMT,0))>1
	BEGIN
		SET @CERRORMSG='MISMATCH BETWEEN ITEM LEVEL EXPECTED DISCOUNT AMOUNT ('+LTRIM(RTRIM(STR(
						ISNULL(@NCALCDISCOUNTAMT,0),10,2)))+') &
						UPDATED DISCOUNT AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NDISCOUNTAMT,0),10,2)))+') FOR ITEM CODE : '+
						@CPRODUCTCODE+'..... CANNOT SAVE '
		RETURN
	END

SET @NSTEP=30
EXEC SP_CHKXNSAVELOG 'WSL-VALID',@NSTEP,0,@NSPID,@BDEBUGMODE	

	SELECT @NSUBTOTAL =SUBTOTAL FROM INM01106 WHERE INV_ID=@CXNID

	SELECT @NSUMINDNET=SUM(A.NET_RATE*A.INVOICE_QUANTITY) FROM IND01106 A
	WHERE INV_ID=@CXNID
	

	IF ABS(ISNULL(@NSUMINDNET,0)-ISNULL(@NSUBTOTAL,0))>1
	BEGIN
		SET @CERRORMSG = 'MISMATCH BETWEEN ITEM LEVEL TOTAL AMOUNT :'+ltrim(rtrim(str(@NSUMINDNET,10,2)))+'
							& BILL LEVEL SUBTOTAL:'+ltrim(rtrim(str(@NSUBTOTAL,10,2)))+'.....' -- CANNOT SAVE '
		RETURN
	END

SET @NSTEP=40
EXEC SP_CHKXNSAVELOG 'WSL-VALID',@NSTEP,0,@NSPID,@BDEBUGMODE		
	PRINT 'VALIDATE WSL-3'
	-- CHECKING DISCOUNT AMOUNT AT BILL LEVEL
	
	IF EXISTS (SELECT TOP 1 'U' FROM INM01106 WHERE INV_ID=@CXNID AND ISNULL(INV_NO,'')='' )
	BEGIN
	    SET @CERRORMSG=' MEMO NO BLNAK INSERTED PLEASE CHECK'
	    RETURN
	END
	
	declare @bmanual_discount bit
		
	SELECT @NCALCDISCOUNTAMT = ROUND((CASE WHEN BILL_LEVEL_DISC_METHOD=2 THEN SUBTOTAL_mrp ELSE  SUBTOTAL END)*DISCOUNT_PERCENTAGE/100,0) 
	FROM INM01106 WHERE INV_ID=@CXNID
	
	SELECT @NDISCOUNTAMT = DISCOUNT_AMOUNT,@bmanual_discount=manual_discount  FROM  INM01106 WHERE INV_ID=@CXNID
		
	IF 	ABS(@NDISCOUNTAMT-ISNULL(@NCALCDISCOUNTAMT,0))>1 and isnull(@bmanual_discount,0)=0
	BEGIN
		SET @CERRORMSG='MISMATCH BETWEEN BILL LEVEL EXPECTED DISCOUNT AMOUNT ('+LTRIM(RTRIM(STR(
						ISNULL(@NCALCDISCOUNTAMT,0),10,2)))+') &
						UPDATED DISCOUNT AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NDISCOUNTAMT,0),10,2)))+')..... CANNOT SAVE '
		RETURN
	END

SET @NSTEP=50
EXEC SP_CHKXNSAVELOG 'WSL-VALID',@NSTEP,0,@NSPID,@BDEBUGMODE		
	DECLARE @BEXCISEINVOICE BIT,@NACCESSIBLEVALPCT NUMERIC(6,2),@NACCESSIBLEPCTFORM NUMERIC(6,2),@NTOTACCESSIBLEVALUPD NUMERIC(10,2),
	@NTOTACCESSIBLEVALCALC NUMERIC(10,2),@NEXCISEMRPVAL NUMERIC(10,2),@NEXCISEDUTYPCTUPD NUMERIC(6,2),
	@NEXCISEDUTYPCTFORM NUMERIC(6,2),@NCALEXCISEDUTY NUMERIC(10,2),@NUPDEXCISEDUTY NUMERIC(10,2),
	@NEXCISEEDUCESSPCTUPD NUMERIC(6,2),@NEXCISEEDUCESSPCTFORM NUMERIC(6,2),@NCALEDUCESS NUMERIC(10,2),@NUPDEDUCESS NUMERIC(10,2),
	@NEXCISEHEDUCESSPCTUPD NUMERIC(6,2),@NEXCISEHEDUCESSPCTFORM NUMERIC(6,2),@NCALHEDUCESS NUMERIC(10,2),@NUPDHEDUCESS NUMERIC(10,2),
	@NCALCTAXVAL NUMERIC(10,2),@NUPDTAXVAL NUMERIC(10,2),@NENTRYMODE INT,@COTHERINVNO VARCHAR(20),@CPSNO VARCHAR(20),
	@CERRITEMCODE VARCHAR(50),@NTOTEXCISEDUTY NUMERIC(12,4),@NINV_MODE int
	
	SELECT @NENTRYMODE=ENTRY_MODE,@NINV_MODE =inv_mode  FROM INM01106 A WHERE A.INV_ID=@CXNID 
	
	
	if @NINV_MODE=2
	begin
	     
	 SET @CPCCODE=''
	 
	 SELECT TOP 1 @CPCCODE=PRODUCT_CODE FROM IND01106 (NOLOCK) WHERE INV_ID=@CXNID AND INVOICE_QUANTITY <0

    IF ISNULL(@CPCCODE,'')<>''
	BEGIN
			SET @CERRORMSG =  'Negative Invoice Quantity can not be save in Group Challan barcode:' +@CPCCODE
			RETURN
	END
	
	SELECT TOP 1 @CPCCODE=PRODUCT_CODE FROM IND01106 (NOLOCK) WHERE INV_ID=@CXNID AND net_rate  <0
	 IF ISNULL(@CPCCODE,'')<>''
	BEGIN
			SET @CERRORMSG =  'Negative net Rate can not be save in Group Challan barcode:' +@CPCCODE
			RETURN
	END
	
	end
	
	IF EXISTS (SELECT TOP 1 INV_ID FROM IND01106 WHERE INV_ID=@CXNID AND ISNULL(ITEM_EXCISE_DUTY_AMOUNT,0)<>0)
		SET @BEXCISEINVOICE=1
		
	
	--- DO VALIDATIONS FOR EXCISE DUTY CALCULATION
	IF @BEXCISEINVOICE=1  
	BEGIN

SET @NSTEP=60
EXEC SP_CHKXNSAVELOG 'WSL-VALID',@NSTEP,0,@NSPID,@BDEBUGMODE	
		DECLARE @CMINEXCISABLEMRP VARCHAR(2),@NMINEXCISABLEMRP NUMERIC(10,2)
		SELECT TOP 1  @CMINEXCISABLEMRP=VALUE FROM CONFIG WHERE CONFIG_OPTION='MINIMUM_MRP_FOR_EXCISE'  
			
		IF ISNULL(@CMINEXCISABLEMRP,'') IN ('','0')  
			SET @NMINEXCISABLEMRP=1000  
		ELSE  
			SET @NMINEXCISABLEMRP=@CMINEXCISABLEMRP  
			
		PRINT 'VALIDATE WSL-3'
		IF  ISNULL(@BCALLEDFORPRINT,0)=0
		BEGIN

SET @NSTEP=70
EXEC SP_CHKXNSAVELOG 'WSL-VALID',@NSTEP,0,@NSPID,@BDEBUGMODE			
		    SELECT TOP 1 @CERRITEMCODE=A.PRODUCT_CODE,@NACCESSIBLEVALPCT=A.ITEM_EXCISE_ACCESSIBLE_PERCENTAGE,
		    @NACCESSIBLEPCTFORM=B.EXCISE_ACCESSIBLE_PERCENTAGE  FROM 
			IND01106 A JOIN FORM B ON A.ITEM_FORM_ID=B.FORM_ID
			WHERE A.INV_ID=@CXNID AND A.ITEM_EXCISE_ACCESSIBLE_PERCENTAGE<>B.EXCISE_ACCESSIBLE_PERCENTAGE			 
			AND ITEM_EXCISE_MRP>=@NMINEXCISABLEMRP
			
			IF ISNULL(@CERRITEMCODE,'')<>''
			BEGIN
				SET @CERRORMSG='ACCESSIBLE PERCENTAGE '+STR(@NACCESSIBLEVALPCT,6,2)+' IS NOT SAME AS
						   THAT STORED IN FORM MASTER : '+STR(@NACCESSIBLEPCTFORM,6,2)+' FOR ITEM CODE:'+@CERRITEMCODE+' ....... PLEASE CHECK'
				RETURN
			END
		END		
			
		SET @NSTEP=80
		
		EXEC SP_CHKXNSAVELOG 'WSL-VALID',@NSTEP,0,@NSPID,@BDEBUGMODE	
		SELECT TOP 1 @CERRITEMCODE=PRODUCT_CODE,@NTOTACCESSIBLEVALCALC=(INVOICE_QUANTITY*MRP*ITEM_EXCISE_ACCESSIBLE_PERCENTAGE/100),
		@NTOTACCESSIBLEVALUPD=ITEM_EXCISE_ACCESSIBLE_AMOUNT FROM IND01106 WHERE INV_ID=@CXNID
		AND (INVOICE_QUANTITY*MRP*ITEM_EXCISE_ACCESSIBLE_PERCENTAGE/100)<>ITEM_EXCISE_ACCESSIBLE_AMOUNT
		AND ITEM_EXCISE_MRP>=@NMINEXCISABLEMRP
		
		IF ISNULL(@CERRITEMCODE,'')<>''
		BEGIN
			SET @CERRORMSG='MISMATCH BETWEEN CALCULATED ACCESSIBLE VALUE ('+LTRIM(RTRIM(STR(ISNULL(@NTOTACCESSIBLEVALCALC,0),10,2)))+
					  ') & UPDATED ACCESSIBLE VALUE ('+LTRIM(RTRIM(STR(ISNULL(@NTOTACCESSIBLEVALUPD,0),10,2)))+') FOR ITEM CODE:'+@CERRITEMCODE+' ..... CANNOT SAVE '
			RETURN
		END
		
			 
		IF  ISNULL(@BCALLEDFORPRINT,0)=0
		BEGIN
			SET @NSTEP=90
			EXEC SP_CHKXNSAVELOG 'WSL-VALID',@NSTEP,0,@NSPID,@BDEBUGMODE	

		    SELECT TOP 1 @CERRITEMCODE=A.PRODUCT_CODE,@NEXCISEDUTYPCTUPD=A.ITEM_EXCISE_DUTY_PERCENTAGE,
		    @NEXCISEDUTYPCTFORM=B.EXCISE_DUTY_PERCENTAGE  FROM 
			IND01106 A JOIN FORM B ON A.ITEM_FORM_ID=B.FORM_ID
			WHERE A.INV_ID=@CXNID AND A.ITEM_EXCISE_DUTY_PERCENTAGE<>B.EXCISE_DUTY_PERCENTAGE
			AND ITEM_EXCISE_MRP>=@NMINEXCISABLEMRP	
			
			IF ISNULL(@NEXCISEDUTYPCTUPD,0)<>ISNULL(@NEXCISEDUTYPCTFORM,0)
			BEGIN
				SET @CERRORMSG='BILL LEVEL EXCISE DUTY PERCENTAGE '+LTRIM(RTRIM(STR(@NEXCISEDUTYPCTUPD,6,2)))+
						  ' IS NOT SAME AS THAT STORED IN FORM MASTER : '+LTRIM(RTRIM(STR(@NEXCISEDUTYPCTFORM,6,2)))+' ....... PLEASE CHECK'
				RETURN
			END
		END	
			
SET @NSTEP=100
EXEC SP_CHKXNSAVELOG 'WSL-VALID',@NSTEP,0,@NSPID,@BDEBUGMODE			
		SELECT TOP 1 @CERRITEMCODE=PRODUCT_CODE,@NCALEXCISEDUTY=(A.ITEM_EXCISE_ACCESSIBLE_AMOUNT*A.ITEM_EXCISE_DUTY_PERCENTAGE/100),
		@NUPDEXCISEDUTY=ITEM_EXCISE_DUTY_PERCENTAGE FROM IND01106 A WHERE INV_ID=@CXNID
		AND ABS((ITEM_EXCISE_ACCESSIBLE_AMOUNT*A.ITEM_EXCISE_DUTY_PERCENTAGE/100)-ITEM_EXCISE_DUTY_AMOUNT)>.1
		AND ITEM_EXCISE_MRP>=@NMINEXCISABLEMRP
		
		IF ISNULL(@CERRITEMCODE,'')<>''
		BEGIN
			SET @CERRORMSG='MISMATCH BETWEEN CALCULATED EXCISE DUTY AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NCALEXCISEDUTY,0),10,2)))+
					  ') & UPDATED EXCISE DUTY AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NUPDEXCISEDUTY,0),10,2)))+') FOR ITEM CODE:'+@CERRITEMCODE+' ..... CANNOT SAVE '

			RETURN
		END
		
	END	

SET @NSTEP=110
EXEC SP_CHKXNSAVELOG 'WSL-VALID',@NSTEP,0,@NSPID,@BDEBUGMODE	
	DECLARE @NTAXFLAG NUMERIC(1,0),@NOHGST NUMERIC(10,2)
	
	SELECT @NTAXFLAG=BILL_LEVEL_TAX_METHOD FROM INM01106 WHERE INV_ID=@CXNID

	
SET @NSTEP=120
EXEC SP_CHKXNSAVELOG 'WSL-VALID',@NSTEP,0,@NSPID,@BDEBUGMODE		
	SELECT @NTAXAMT=SUM(ITEM_TAX_AMOUNT+ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CESS_AMOUNT,0)),
	@NTOTALCUSTOMDUTY=SUM(TOTAL_CUSTOM_DUTY_AMT),@NTOTEXCISEDUTY=SUM(ITEM_EXCISE_DUTY_AMOUNT),
	@Ngstcessamount=sum(isnull(gst_cess_amount,0))
	FROM IND01106 WHERE INV_ID=@CXNID
		
			
	SELECT @NOHGST=ISNULL(FREIGHT_IGST_AMOUNT,0)+ISNULL(FREIGHT_CGST_AMOUNT,0)+ISNULL(FREIGHT_SGST_AMOUNT,0)
	+ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_SGST_AMOUNT,0)
	+ISNULL(INSURANCE_IGST_AMOUNT,0)+ISNULL(INSURANCE_CGST_AMOUNT,0)+ISNULL(INSURANCE_SGST_AMOUNT,0)
	+ISNULL(PACKING_IGST_AMOUNT,0)+ISNULL(PACKING_CGST_AMOUNT,0)+ISNULL(PACKING_SGST_AMOUNT,0)
	FROM INM01106 WHERE INV_ID=@CXNID

	SELECT @NCALCTOTALAMOUNT = SUBTOTAL +INSURANCE+FREIGHT-DISCOUNT_AMOUNT + OTHER_CHARGES+ROUND_OFF+
							   (CASE WHEN @NTAXFLAG=1 THEN ISNULL(@NTAXAMT,0) +isnull(@Ngstcessamount,0) ELSE 0 END)+OCTROI_AMOUNT+
							   ISNULL(@NTOTEXCISEDUTY,0)+ISNULL(@NTOTALCUSTOMDUTY,0)+
							   (CASE WHEN OH_TAX_METHOD=2 THEN 0 ELSE ISNULL(@NOHGST,0) END)+isnull(Tcs_Amount,0)
	FROM INM01106 WHERE INV_ID=@CXNID	

SET @NSTEP=130
EXEC SP_CHKXNSAVELOG 'WSL-VALID',@NSTEP,0,@NSPID,@BDEBUGMODE	
	SELECT @NINMTOTALAMOUNT=NET_AMOUNT FROM INM01106 WHERE INV_ID=@CXNID
	
	IF ABS(ISNULL(@NINMTOTALAMOUNT,0)-ISNULL(@NCALCTOTALAMOUNT,0))>1
	BEGIN
		SET @CERRORMSG = ' MISMATCH BETWEEN CALCULATED NET AMOUNT '+LTRIM(RTRIM(STR(ISNULL(@NCALCTOTALAMOUNT,0),14,4)))+
					' & BILL LEVEL NET AMOUNT '+LTRIM(RTRIM(STR(ISNULL(@NINMTOTALAMOUNT,0),14,4))) -- +'..... CANNOT SAVE '
		RETURN
	END

SET @NSTEP=140
EXEC SP_CHKXNSAVELOG 'WSL-VALID',@NSTEP,0,@NSPID,@BDEBUGMODE		
	PRINT 'ENTRY MODE:'+ISNULL(STR(@NENTRYMODE),'NULL ENTRY MODE')
	IF @NENTRYMODE=2 AND    ISNULL(@BCALLEDFORPRINT,0)=0

	BEGIN
		IF OBJECT_ID('TEMPDB..#TMPPS','U') IS NOT NULL
			DROP TABLE #TMPPS
		
		SELECT DISTINCT PS_ID INTO #TMPPS FROM IND01106 WHERE INV_ID=@CXNID
			
		SELECT TOP 1 @COTHERINVNO=C.INV_NO,@CPSNO=D.PS_NO FROM IND01106 A JOIN #TMPPS B ON A.PS_ID=B.PS_ID
		JOIN INM01106 C ON C.INV_ID=A.INV_ID
		JOIN WPS_MST D ON D.PS_ID=B.PS_ID
		WHERE A.INV_ID<>@CXNID AND C.CANCELLED=0		
		
		IF ISNULL(@COTHERINVNO,'')<>''
		BEGIN
			SET @CERRORMSG = ' OTHER INVOICE NO. :'+LTRIM(RTRIM(@COTHERINVNO))+' ALREADY SAVED AGAINST PACKING SLIP NO. :'+@CPSNO+'..... CANNOT SAVE '
			RETURN
		END
	END

SET @NSTEP=145
EXEC SP_CHKXNSAVELOG 'WSL-VALID',@NSTEP,0,@NSPID,@BDEBUGMODE	
        DECLARE @COUNTRY_CODE VARCHAR(10) 
        SELECT  TOP 1 @COUNTRY_CODE=ISNULL(C.COUNTRY_CODE,'')
		FROM INM01106  A JOIN LMP01106 B ON A.AC_CODE=B.AC_CODE 
		LEFT OUTER JOIN AREA AR ON AR.AREA_CODE =B.AREA_CODE 
		LEFT OUTER JOIN CITY CT ON CT.CITY_CODE =AR.CITY_CODE 
		LEFT OUTER JOIN STATE ST ON ST.STATE_CODE =CT.STATE_CODE 
		LEFT OUTER JOIN REGIONM R ON R.REGION_CODE =ST.REGION_CODE
		LEFT OUTER JOIN COUNTRY C ON C.COUNTRY_CODE=R.COUNTRY_CODE
		WHERE A.INV_ID=@CXNID
       
    IF @NUPDATEMODE<>3 AND ISNULL(@COUNTRY_CODE,'')  IN('0000000','')
    BEGIN

SET @NSTEP=150
EXEC SP_CHKXNSAVELOG 'WSL-VALID',@NSTEP,0,@NSPID,@BDEBUGMODE	
		EXEC SP3S_VALIDATE_GSTCALC		
		@XN_TYPE='WSL',
		@CMEMO_ID=@CXNID,
		@CERRMSG=@CERRORMSG OUTPUT
		,@CDEPT_ID=@CDEPT_ID
	
	END
		
	IF ISNULL(@CERRORMSG,'')<>''
		RETURN
	

END 
------- 'END OF CREATING PROCEDURE VALIDATEXN_WSL'
