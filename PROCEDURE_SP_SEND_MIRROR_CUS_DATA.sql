CREATE PROCEDURE SP_SEND_MIRROR_CUS_DATA --(LocId 3 digit change  by Sanjay:01-11-2024)
(  
 @CUSER_CUSTOMER_CODE VARCHAR(100)='',  
 @CCUSTOMERCODE VARCHAR(20)='',  
 @BACKNOWLEDGE BIT=0,  
 @CERRMSG VARCHAR(1000) OUTPUT  
)  
----WITH ENCRYPTION  
AS  
BEGIN  

--select @CUSER_CUSTOMER_CODE as u,  
-- @CCUSTOMERCODE as c,  
-- @BACKNOWLEDGE b,  
-- @CERRMSG e 
-- into tmp1
 
 
     DECLARE @CTEMPDBNAME VARCHAR(100),@CSTEP VARCHAR(10),@CFILTERCONDITION VARCHAR(100),@CTABLENAME VARCHAR(100),  
             @CTEMPTABLE VARCHAR(100),@DTSQL NVARCHAR(MAX),@CTEMPDETAILTABLE VARCHAR(100),  
             @CTEMPAREATABLE VARCHAR(100),@CTEMPCITYTABLE VARCHAR(100),@CTEMPSTATETABLE VARCHAR(100),  
             @CTEMPREGIONMTABLE VARCHAR(100),@CLOCATION_ID VARCHAR(4),@CHOLOCATION_ID VARCHAR(4),  
             @CMEMOID VARCHAR(100),@TEMP_TABLENAME VARCHAR(500)  
       
     DECLARE @TXNSSENDINFO TABLE (ORG_TABLENAME VARCHAR(100),TMP_TABLENAME VARCHAR(100),XN_ID VARCHAR(100))   
     SET @CERRMSG= ''  
     BEGIN TRY  
     DECLARE @CTEMPDBNAME1 VARCHAR(100) 
  
   
  SET @CTEMPDBNAME1 = DB_NAME() + '_TEMP'  
  
  
  SET @CSTEP=0  
  IF DB_ID(@CTEMPDBNAME1) IS NOT NULL  
   SET @CTEMPDBNAME = DB_NAME() + '_TEMP.DBO.'  
  ELSE  
  BEGIN  
   SET @CERRMSG='STEP- ' + LTRIM(STR(@CSTEP)) + ' ERROR TEMP DATABASE NOT EXISTS.'            
   GOTO END_PROC  
  END  
  
   
 SET @CSTEP=10  
 SET @CFILTERCONDITION=''  
 
    
 --SET VALIDATION  
 IF ISNULL(@CUSER_CUSTOMER_CODE,'') = '' AND  ISNULL(@CCUSTOMERCODE,'') = ''  
 BEGIN  
  SET @CERRMSG ='USER CUSTOMER CODE AND CUSTOMER CODE PARAMATERS ARE NOT NULL ONE IS MAENDATORY'  
  GOTO END_PROC;  
 END   
 --SELECT CURRENT LOCATION   
 SELECT @CLOCATION_ID = VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'  
    --SELECT HO LOCATION   
    SELECT @CHOLOCATION_ID= VALUE FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'  
   
   
 IF @BACKNOWLEDGE=1  
  GOTO END_PROC  
      
    SET @CSTEP=11  
    --SELECT CUSTOMER_CODE BASED ON CUSTOME CODE AND USER CUSTOMER CODE AND SET VALUE INTO @CMEMOID VARIABLE  
   IF ISNULL(@CCUSTOMERCODE,'') <> '' AND ISNULL(@CUSER_CUSTOMER_CODE,'') = ''  
    BEGIN  
      IF EXISTS(SELECT * FROM DBO.CUSTDYM WITH(NOLOCK) WHERE CUSTOMER_CODE = @CCUSTOMERCODE)  
        SET @CMEMOID= @CCUSTOMERCODE  
      ELSE  
      BEGIN  
        SET @CERRMSG ='CUSTOMER NOT FOUND';  
        GOTO END_PROC;  
      END  
    END  
    ELSE IF ISNULL(@CUSER_CUSTOMER_CODE,'') <> '' AND ISNULL(@CCUSTOMERCODE,'') = ''  
    BEGIN  
      SELECT @CMEMOID = CUSTOMER_CODE FROM DBO.CUSTDYM WITH(NOLOCK) WHERE USER_CUSTOMER_CODE = @CUSER_CUSTOMER_CODE  
      IF ISNULL(@CMEMOID,'') =''  
      BEGIN  
        SET @CERRMSG ='CUSTOMER NOT FOUND';  
        GOTO END_PROC;  
      END  
    END  
    ELSE IF ISNULL(@CUSER_CUSTOMER_CODE,'') <> '' AND ISNULL(@CCUSTOMERCODE,'') <> ''  
    BEGIN  
     IF EXISTS(SELECT * FROM DBO.CUSTDYM WITH(NOLOCK)   
              WHERE USER_CUSTOMER_CODE  = @CUSER_CUSTOMER_CODE AND CUSTOMER_CODE = @CCUSTOMERCODE )  
       SET @CMEMOID= @CCUSTOMERCODE  
     ELSE  
     BEGIN  
      SET @CERRMSG ='CUSTOMER NOT FOUND';  
      GOTO END_PROC;  
     END  
    END  
          
    IF ISNULL(@CMEMOID,'') = ''  
    BEGIN  
     SET @CERRMSG ='CUSTOMER NOT FOUND';  
     GOTO END_PROC;  
    END  
    --SELECT @CMEMOID  
  
 SET @CSTEP=15  
 
  
    SET @CSTEP=12  
    --1 SEND THE CUSTDYM   TABLE  
    SET @CTABLENAME ='CUS_custdym_UPLOAD'  
    SET @CTEMPTABLE=@CTEMPDBNAME + 'TMP_CUS_'+@CTABLENAME+'_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))  
    SET @TEMP_TABLENAME='TMP_CUS_'+@CTABLENAME+'_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))  
    SET @DTSQL=N'IF OBJECT_ID('''+@CTEMPTABLE+''') IS NOT NULL   
                DROP TABLE '+@CTEMPTABLE+'   
                SELECT DISTINCT A.* INTO '+@CTEMPTABLE+'  FROM CUSTDYM A (NOLOCK) WHERE CUSTOMER_CODE='''+@CMEMOID+''' '  
    PRINT @DTSQL  
    EXEC SP_EXECUTESQL @DTSQL  
      
    SET @CSTEP=13  
    --INSERT ORGINAL AND TEMP TABLE NAME INTO TABLE FOR OUTPUT  
    INSERT INTO @TXNSSENDINFO(ORG_TABLENAME,TMP_TABLENAME,XN_ID)SELECT @CTABLENAME,@TEMP_TABLENAME,@CMEMOID  
      
   
    SET @CSTEP=15  
    --1 SEND THE AREA   TABLE  
    SET @CTABLENAME ='CUS_AREA_UPLOAD'  
    SET @CTEMPAREATABLE=@CTEMPDBNAME + 'TMP_CUS_'+@CTABLENAME+'_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))  
    SET @TEMP_TABLENAME='TMP_CUS_'+@CTABLENAME+'_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))  
    SET @DTSQL=N'IF OBJECT_ID('''+@CTEMPAREATABLE+''') IS NOT NULL DROP TABLE '+@CTEMPAREATABLE+'  
                 SELECT DISTINCT A.* INTO '+@CTEMPAREATABLE+'  FROM AREA A (NOLOCK)   
                 JOIN '+@CTEMPTABLE+' B ON A.AREA_CODE=B.AREA_CODE '  
    PRINT @DTSQL  
    EXEC SP_EXECUTESQL @DTSQL  
      
    SET @CSTEP=20  
    --INSERT ORGINAL AND TEMP TABLE NAME INTO TABLE FOR OUTPUT  
    INSERT INTO @TXNSSENDINFO(ORG_TABLENAME,TMP_TABLENAME,XN_ID)SELECT @CTABLENAME,@TEMP_TABLENAME,@CMEMOID  
   
  
    SET @CSTEP=30  
    --1 SEND THE CITY   TABLE  
    SET @CTABLENAME ='CUS_city_UPLOAD'  
    SET @CTEMPCITYTABLE=@CTEMPDBNAME + 'TMP_CUS_'+@CTABLENAME+'_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))  
    SET @TEMP_TABLENAME='TMP_CUS_'+@CTABLENAME+'_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))  
    SET @DTSQL=N'IF OBJECT_ID('''+@CTEMPCITYTABLE+''') IS NOT NULL DROP TABLE '+@CTEMPCITYTABLE+'  
                 SELECT DISTINCT A.* INTO '+@CTEMPCITYTABLE+'  FROM CITY A (NOLOCK)   
                 JOIN '+@CTEMPAREATABLE+' B (NOLOCK) ON A.CITY_CODE=B.CITY_CODE '  
    PRINT @DTSQL  
    EXEC SP_EXECUTESQL @DTSQL  
      
    SET @CSTEP=40  
    --INSERT ORGINAL AND TEMP TABLE NAME INTO TABLE FOR OUTPUT  
    INSERT INTO @TXNSSENDINFO(ORG_TABLENAME,TMP_TABLENAME,XN_ID)SELECT @CTABLENAME,@TEMP_TABLENAME,@CMEMOID  
   
    SET @CSTEP=50  
    --1 SEND THE CITY   TABLE  
    SET @CTABLENAME ='CUS_state_UPLOAD'  
    SET @CTEMPSTATETABLE=@CTEMPDBNAME + 'TMP_CUS_'+@CTABLENAME+'_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))  
    SET @TEMP_TABLENAME='TMP_CUS_'+@CTABLENAME+'_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))  
    SET @DTSQL=N'IF OBJECT_ID('''+@CTEMPSTATETABLE+''') IS NOT NULL DROP TABLE '+@CTEMPSTATETABLE+'  
                 SELECT DISTINCT A.* INTO '+@CTEMPSTATETABLE+'  FROM STATE A (NOLOCK)   
                 JOIN '+@CTEMPCITYTABLE+' B ON A.STATE_CODE=B.STATE_CODE '  
    PRINT @DTSQL  
    EXEC SP_EXECUTESQL @DTSQL  
      
      
    SET @CSTEP=60  
    --INSERT ORGINAL AND TEMP TABLE NAME INTO TABLE FOR OUTPUT  
    INSERT INTO @TXNSSENDINFO(ORG_TABLENAME,TMP_TABLENAME,XN_ID)SELECT @CTABLENAME,@TEMP_TABLENAME,@CMEMOID  
   
    SET @CSTEP=70  
    --1 SEND THE CITY   TABLE  
    SET @CTABLENAME ='cus_REGIONM_upload'  
    SET @CTEMPREGIONMTABLE=@CTEMPDBNAME + 'TMP_CUS_'+@CTABLENAME+'_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))  
    SET @TEMP_TABLENAME='TMP_CUS_'+@CTABLENAME+'_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))  
      
    SET @DTSQL=N'IF OBJECT_ID('''+@CTEMPREGIONMTABLE+''') IS NOT NULL DROP TABLE '+@CTEMPREGIONMTABLE+'  
                 SELECT DISTINCT A.* INTO '+@CTEMPREGIONMTABLE+'  FROM REGIONM A (NOLOCK)   
                 JOIN '+@CTEMPSTATETABLE+' B (NOLOCK) ON A.REGION_CODE=B.REGION_CODE '  
    PRINT @DTSQL  
    EXEC SP_EXECUTESQL @DTSQL  
      
      
    SET @CSTEP=80  
    --INSERT ORGINAL AND TEMP TABLE NAME INTO TABLE FOR OUTPUT  
    INSERT INTO @TXNSSENDINFO(ORG_TABLENAME,TMP_TABLENAME,XN_ID)SELECT @CTABLENAME,@TEMP_TABLENAME,@CMEMOID  
      
      
  
  END TRY  
BEGIN CATCH  
 SET @CERRMSG='P: SP_SEND_MIRROR_CUS_DATA_NEW, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()  
 GOTO END_PROC  
END CATCH    
   
END_PROC:  
    
 SET @CSTEP=90  
 IF ISNULL(@CERRMSG,'')='' AND @BACKNOWLEDGE=0  
  SELECT * FROM @TXNSSENDINFO   
    ELSE IF ISNULL(@CERRMSG,'') <> ''  
    BEGIN  
    SELECT '' AS [ORG_TABLENAME],'' AS [TMP_TABLENAME],'' AS [XN_ID]  
    END  
 
END  
--- 'END OF PROCEDURE SP_SEND_MIRROR_CUS_DATA' new 


