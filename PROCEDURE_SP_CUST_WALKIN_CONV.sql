
CREATE PROCEDURE  SP_CUST_WALKIN_CONV  
 (  
  @CFROMDT DATETIME,  
  @CTODT DATETIME,  
  @CWHERE VARCHAR(100)  
 )  
AS  
--(dinkar) Replace  left(memoid,2) to Location_code 
 BEGIN  
 IF (SELECT ISNULL(VALUE,0) FROM CONFIG WHERE CONFIG_OPTION='SALE_PERSON_WISE_CUST_WALKING')!=1
     BEGIN
		SELECT A.*,  
		CAST( (CASE WHEN TOTAL_WALKIN >0 THEN (BILL_COUNT/TOTAL_WALKIN )*100 ELSE 0 END) AS NUMERIC(10,2)) AS CON_PER 
		
		FROM   
		(  
			SELECT A.location_Code  AS DEPT_ID,C.DEPT_NAME,CM_DT , ISNULL(CUSTOMER_WALKIN,0) AS TOTAL_WALKIN,   
			COUNT(CM_NO) AS BILL_COUNT  ,sum(NETSLSQTY) NETSLSQTY,sum(TRANVALUEWITHOTH) as TRANVALUEWITHOTH
			FROM CMM01106 A (NOLOCK)  
			LEFT OUTER JOIN
			(
			  SELECT CM_ID, SUM(QUANTITY) AS NETSLSQTY,sum(rfnet_with_other_charges) as TRANVALUEWITHOTH
			  FROM CMD01106 (NOLOCK)
			  GROUP BY CM_ID
			 ) CMD  ON A.CM_ID= CMD.CM_ID
			LEFT OUTER JOIN DAYCLOSE_LOG B (NOLOCK) ON A.location_Code = B.DEPT_ID AND B.LOG_DATE= A.CM_DT  
			LEFT OUTER JOIN LOC_VIEW C (NOLOCK) ON A.location_Code = C.DEPT_ID  
			WHERE A.CANCELLED=0 AND CM_DT BETWEEN @CFROMDT AND @CTODT AND (@CWHERE='' OR A.location_Code = @CWHERE)   
			GROUP BY A.location_Code  ,C.DEPT_NAME,CM_DT,ISNULL(CUSTOMER_WALKIN,0)  
		) A  
		ORDER BY DEPT_ID ,CM_DT  
     END
  ELSE
     BEGIN
		SELECT A.*,  
		CAST( (CASE WHEN TOTAL_WALKIN >0 THEN (BILL_COUNT/TOTAL_WALKIN )*100 ELSE 0 END) AS NUMERIC(10,2)) AS CON_PER  
		
		FROM   
		(  
			SELECT A.location_Code  AS DEPT_ID,C.DEPT_NAME,CM_DT, ISNULL(E.EMP_NAME,'')EMP_NAME,
			ISNULL(sp.cust_walkin ,b.Customer_walkin) AS TOTAL_WALKIN,   
			COUNT(CM_NO) AS BILL_COUNT   ,sum(NETSLSQTY) NETSLSQTY,sum(TRANVALUEWITHOTH) as TRANVALUEWITHOTH
			FROM CMM01106 A (NOLOCK) 
			LEFT OUTER JOIN			 
			(
			  SELECT CM_ID, SUM(QUANTITY) AS NETSLSQTY ,sum(rfnet_with_other_charges) as TRANVALUEWITHOTH
			  FROM CMD01106 (NOLOCK)
			  GROUP BY CM_ID
			 ) CMD  ON A.CM_ID= CMD.CM_ID
			LEFT OUTER JOIN DAYCLOSE_LOG B (NOLOCK) ON A.location_Code = B.DEPT_ID AND B.LOG_DATE= A.CM_DT  
			LEFT OUTER JOIN LOC_VIEW C (NOLOCK) ON A.location_Code = C.DEPT_ID  
			LEFT OUTER JOIN SALEPERSON_WISE_CUSTWALKIN SP (NOLOCK) ON SP.LOG_DATE= A.CM_DT and A.location_Code =isnull(sp.dept_id ,'')
			left JOIN EMPLOYEE E (NOLOCK) ON SP.EMP_CODE=E.EMP_CODE
			
			WHERE A.CANCELLED=0 AND CM_DT BETWEEN @CFROMDT AND @CTODT AND (@CWHERE='' OR A.location_Code = @CWHERE)   
			GROUP BY A.location_Code  ,C.DEPT_NAME,CM_DT,E.EMP_NAME,ISNULL(sp.cust_walkin,b.Customer_walkin)  
		) A  
	   ORDER BY DEPT_ID ,CM_DT,A.EMP_NAME       
     END    
  END  
