CREATE PROCEDURE SAVETRAN_UPDSKU_PPC    
(    
@CXNTYPE VARCHAR(10),    
@CPOID VARCHAR(40),    
@CERROR VARCHAR(4000) OUTPUT,
@DEPT_ID VARCHAR(2)=''    
)
----WITH ENCRYPTION    
AS    
DECLARE @CNEXTPRODUCTCODE VARCHAR(100),@CLOCID				VARCHAR(2) ,@CADDLOCIDPREFIX	VARCHAR(10)  
        ,@CPREFIXFLOORID  VARCHAR(10) ,@CADDFLOORIDPREFIX	VARCHAR(10),@CBIN_ALIAS			VARCHAR(10),@CADDPREFIX VARCHAR(50)  
        ,@CPREFIX		  VARCHAR(100),@CYEARCODE			VARCHAR(2) ,@NROWS				BIGINT,@NNEXTKEYVALUE   NUMERIC(30,0)   
        ,@PRDD            VARCHAR(100) ,@NSTEP INT   
BEGIN    
   BEGIN TRY    
IF @CXNTYPE = 'PUR'        
	GOTO LBLPUR   
ELSE IF @CXNTYPE = 'DQRQ'        
	GOTO LBLDQRQ    
ELSE        
    GOTO LAST 
    
SET @NSTEP=10      
LBLPUR:      

 
   SET @NSTEP=15      
   --INSERTING RECORDS IN PPC_SKU    
   DECLARE @NWITHARTICLE INT,@CARTICLE_NO VARCHAR(200),@CARTICLEPREFIX VARCHAR(50),@CPREFIXFINYEAR INT,
           @CNEWPREFIX VARCHAR(100),@NBARCODEWTPREFIX INT
   SET @CARTICLEPREFIX=''
   SET @CNEWPREFIX=''
  IF OBJECT_ID('TEMPDB..#PIDROWS','U') IS NOT NULL    
		DROP TABLE #PIDROWS     
  IF @DEPT_ID=''
  SELECT @CLOCID=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID  
  ELSE
  SET @CLOCID=@DEPT_ID



  SET @CADDLOCIDPREFIX =@CLOCID  
  SELECT TOP 1 @CPREFIXFLOORID= VALUE FROM CONFIG WHERE CONFIG_OPTION='FLOOR_ID_IN_PC'
  IF ISNULL(@CPREFIXFLOORID,'')='1'      
   SET @CADDFLOORIDPREFIX=@CLOCID+ISNULL(@CBIN_ALIAS ,'')  
  ELSE    
   SET @CADDFLOORIDPREFIX=''   
  
  SELECT TOP 1 @CADDPREFIX = VALUE FROM CONFIG WHERE CONFIG_OPTION='barcode_prefix'
  
  --SET @CYEARCODE = RIGHT(YEAR(PO_DT),2)  
  SELECT TOP 1 @CPREFIXFINYEAR= VALUE FROM CONFIG WHERE CONFIG_OPTION='YEAR_CODE_IN_PC'
  IF @CPREFIXFINYEAR=1
  SELECT @CYEARCODE =  CAST(RIGHT(YEAR(RECEIPT_DT),2) AS VARCHAR(4))   FROM PPC_PIM01106 WHERE MRR_ID = @CPOID 
  ELSE
  SET @CYEARCODE = ''
         
  SET  @CPREFIX = LTRIM(RTRIM(ISNULL(@CYEARCODE,''))) + LTRIM(RTRIM(ISNULL(@CADDLOCIDPREFIX,''))) +     
  LTRIM(RTRIM(ISNULL(@CADDFLOORIDPREFIX,''))) +   LTRIM(RTRIM(ISNULL(@CADDPREFIX,'')))    
  
  
  
  IF OBJECT_ID('TEMPDB..#PIDROWS','U') IS NOT NULL    
  DROP TABLE #PIDROWS      
    
   SELECT   CASE WHEN C.PRODUCT_UID ='' THEN NEWID() ELSE C.PRODUCT_UID END AS PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE,     
           A.PURCHASE_PRICE,A.PARA3_CODE, B.RECEIPT_DT AS INV_DT, BILL_NO AS INV_NO, B.AC_CODE, B.RECEIPT_DT AS RECEIPT_DT,    
           A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE,  A.MRP,GETDATE() AS DT_CREATED, A.WHOLESALE_PRICE AS WS_PRICE,    
           A.TAX_AMOUNT, '' AS BILL_NO ,C.ROW_ID,A.MRR_ID ,ISNULL(A.PO_ROW_ID,'') AS PO_ROW_ID,ISNULL(PO.BO_BOM_ROW_ID,'') AS BO_BOM_ROW_ID,   
           ART.GENERATE_BARCODES_WITHARTICLE_PREFIX ,ART.ARTICLE_NO,
           CODING_SCHEME,C.PRODUCT_CODE,C.PRODUCT_UID AS ORG_PRODUCT_UID,
           A.HSN_CODE  
  INTO #PIDROWS  
  FROM PPC_PID01106 A    
  JOIN PPC_PIM01106 B ON A.MRR_ID = B.MRR_ID 
  JOIN PPC_PID01106_BARCODE C ON A.ROW_ID =C.PID_ROW_ID    
  LEFT JOIN
  (
   SELECT DISTINCT A.ROW_ID,BO_BOM_ROW_ID 
   FROM PPC_POD01106 A
   JOIN PPC_POM01106 B ON A.PO_ID=B.PO_ID
   WHERE B.CANCELLED=0 AND ISNULL(BO_BOM_ROW_ID,'')<>''
  ) PO ON A.PO_ROW_ID=PO.ROW_ID
 JOIN ARTICLE ART ON ART.ARTICLE_CODE =A.ARTICLE_CODE    
 WHERE B.MRR_ID = @CPOID    
   
   
 -- SELECT * FROM PPC_POD01106
   --ALTER TABLE   #PIDROWS   ADD PRODUCT_CODE VARCHAR(100)  
   SET @NSTEP=20
  --UPDATE A SET PRODUCT_CODE=B.PRODUCT_CODE FROM  #PIDROWS A
  --JOIN PPC_SKU B ON A.ARTICLE_CODE=B.ARTICLE_CODE
  --WHERE CODING_SCHEME=1  AND ISNULL(A.PRODUCT_CODE,'')=''         
  SET @NROWS = @@ROWCOUNT       
  
     --SELECT PRODUCT_UID,PRODUCT_CODE FROM #PIDROWS WHERE PRODUCT_CODE <>''
     --ORDER BY PRODUCT_CODE
     

 
  IF OBJECT_ID('TEMPDB..#TMPARTICLE','U') IS NOT NULL    
		DROP TABLE #TMPARTICLE  
		
  SELECT  ARTICLE_NO INTO #TMPARTICLE FROM #PIDROWS  
  WHERE GENERATE_BARCODES_WITHARTICLE_PREFIX=1 AND ISNULL(PRODUCT_CODE,'')=''
  
  
  
SET @NSTEP=25
  WHILE EXISTS (SELECT TOP 1 'U' FROM #TMPARTICLE)
  BEGIN
   SELECT TOP 1 @CARTICLE_NO=ARTICLE_NO FROM #TMPARTICLE
   SET @CNEWPREFIX  =''
   SET @CARTICLEPREFIX=''
   SET @CARTICLEPREFIX=@CARTICLE_NO+'-'
   SET @CNEWPREFIX=@CPREFIX+@CARTICLEPREFIX
   EXEC GETNEXTKEY 'PPC_SKU', 'PRODUCT_CODE', 50, @CNEWPREFIX, 0, '', @NROWS,@CNEXTPRODUCTCODE OUTPUT   
   SET @NNEXTKEYVALUE = CONVERT(NUMERIC(30,0),RIGHT(LTRIM(RTRIM(@CNEXTPRODUCTCODE)),LEN(@CNEXTPRODUCTCODE)-LEN(@CNEWPREFIX)))      
         
  --PREFIC GENERATE WITH ARTICLE PREFIN     
  DECLARE PRDD CURSOR FOR SELECT  PRODUCT_UID,GENERATE_BARCODES_WITHARTICLE_PREFIX,ARTICLE_NO FROM #PIDROWS  
  WHERE GENERATE_BARCODES_WITHARTICLE_PREFIX=1 AND ISNULL(PRODUCT_CODE,'')='' AND ARTICLE_NO=@CARTICLE_NO
  OPEN PRDD   
   FETCH NEXT FROM PRDD INTO @PRDD,@NWITHARTICLE ,@CARTICLE_NO      
    WHILE @@FETCH_STATUS=0  
    BEGIN  
       
    SET @CNEXTPRODUCTCODE = @CNEWPREFIX+LTRIM(RTRIM(CONVERT(VARCHAR(40),@NNEXTKEYVALUE)))         
    UPDATE #PIDROWS SET PRODUCT_CODE = @CNEXTPRODUCTCODE WHERE PRODUCT_UID = @PRDD  AND ISNULL(PRODUCT_CODE,'')=''   
    SET @NNEXTKEYVALUE = @NNEXTKEYVALUE + 1     
       
   FETCH NEXT FROM PRDD INTO @PRDD ,@NWITHARTICLE ,@CARTICLE_NO    
   END  
  CLOSE PRDD   
  DEALLOCATE PRDD  
  
  SET @NSTEP=30
  UPDATE KEYS_PMT SET       
 LASTKEYVAL = LTRIM(RTRIM(@CNEXTPRODUCTCODE))       
 WHERE TABLENAME = 'PPC_SKU'      
 AND COLUMNNAME = 'PRODUCT_CODE'      
 AND FINYEAR  = ''      
 AND PREFIX  =@CNEWPREFIX    
 
 DELETE FROM #TMPARTICLE WHERE ARTICLE_NO =@CARTICLE_NO
 END 
 
   
--FOR  WITHOUT ARTICLE    
SET @NSTEP=35
  SELECT @NBARCODEWTPREFIX=COUNT(PRODUCT_UID) FROM #PIDROWS  
  WHERE GENERATE_BARCODES_WITHARTICLE_PREFIX<>1   AND ISNULL(PRODUCT_CODE,'')='' 
  SET @NROWS = @@ROWCOUNT   
  
IF ISNULL(@NBARCODEWTPREFIX,0)>0
BEGIN   
SET @NSTEP=40
  EXEC GETNEXTKEY 'PPC_SKU', 'PRODUCT_CODE', 50, @CPREFIX, 0, '', @NROWS,@CNEXTPRODUCTCODE OUTPUT       
  SET @NNEXTKEYVALUE = CONVERT(NUMERIC(30,0),RIGHT(LTRIM(RTRIM(@CNEXTPRODUCTCODE)),LEN(@CNEXTPRODUCTCODE)-LEN(@CPREFIX)))      
       
  DECLARE PRDD1 CURSOR FOR SELECT  PRODUCT_UID FROM #PIDROWS  
  WHERE GENERATE_BARCODES_WITHARTICLE_PREFIX<>1   AND ISNULL(PRODUCT_CODE,'')='' 
  OPEN PRDD1   
  FETCH NEXT FROM PRDD1 INTO @PRDD     
  WHILE @@FETCH_STATUS=0  
  BEGIN  
  
    SET @CNEXTPRODUCTCODE = @CPREFIX+LTRIM(RTRIM(CONVERT(VARCHAR(40),@NNEXTKEYVALUE)))         
    UPDATE #PIDROWS SET PRODUCT_CODE = @CNEXTPRODUCTCODE WHERE PRODUCT_UID = @PRDD     AND ISNULL(PRODUCT_CODE,'')='' 
  
    SET @NNEXTKEYVALUE = @NNEXTKEYVALUE + 1     
     --PRINT @NNEXTKEYVALUE         
 FETCH NEXT FROM PRDD1 INTO @PRDD     
 END  
 CLOSE PRDD1   
 DEALLOCATE PRDD1  
   SET @NSTEP=45  
 UPDATE KEYS_PMT SET       
 LASTKEYVAL = LTRIM(RTRIM(@CNEXTPRODUCTCODE))       
 WHERE TABLENAME = 'PPC_SKU'      
 AND COLUMNNAME = 'PRODUCT_CODE'      
 AND FINYEAR  = ''      
 AND PREFIX  = @CPREFIX        
END    
  
  
 
  UPDATE PID  SET PRODUCT_UID =  A.PRODUCT_UID ,
  PRODUCT_CODE=CASE WHEN ISNULL(PID.PRODUCT_CODE,'')='' THEN A.PRODUCT_CODE ELSE  PID.PRODUCT_CODE END   
  FROM PPC_PID01106_BARCODE PID
  JOIN #PIDROWS A ON A.ROW_ID  =PID.ROW_ID   
 
  
  --SELECT DISTINCT  A.PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE, A.PURCHASE_PRICE,    
  --A.PARA3_CODE,     
  --A.RECEIPT_DT AS INV_DT,A.BILL_NO AS  INV_NO, A.AC_CODE, A.RECEIPT_DT, 
  -- A.MRP,    
  --'' AS DT_CREATED, A.WS_PRICE, A.TAX_AMOUNT, 
  --A.PRODUCT_CODE ,  
  -- A.HSN_CODE 
  --FROM #PIDROWS A    
  --LEFT OUTER JOIN PPC_SKU D ON A.PRODUCT_UID = D.PRODUCT_UID     
  --WHERE  D.PRODUCT_UID IS NULL    
  --AND A.PRODUCT_UID IN
  --(SELECT PRODUCT_UID FROM PPC_SKU)
  
  SET @NSTEP=55
  INSERT PPC_SKU( PRODUCT_UID, ARTICLE_CODE, PARA1_CODE, PARA2_CODE, LAST_UPDATE, PURCHASE_PRICE,            
  PARA3_CODE, INV_DT, INV_NO, AC_CODE, RECEIPT_DT, MRP, DT_CREATED, WS_PRICE, TAX_AMOUNT,PRODUCT_CODE,HSN_CODE )    
    
  SELECT DISTINCT  A.PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE, A.PURCHASE_PRICE,    
  A.PARA3_CODE,     
  A.RECEIPT_DT AS INV_DT,A.BILL_NO AS  INV_NO, A.AC_CODE, A.RECEIPT_DT, 
   A.MRP,    
  '' AS DT_CREATED, A.WS_PRICE, A.TAX_AMOUNT, 
  A.PRODUCT_CODE ,  
   A.HSN_CODE 
  FROM #PIDROWS A    
  LEFT OUTER JOIN PPC_SKU D ON A.PRODUCT_UID = D.PRODUCT_UID     
  WHERE  D.PRODUCT_UID IS NULL    
 
 
 
  -- INSERTING RECORDS IN PMT FOR PO FLOOR    
 /*
  IF OBJECT_ID('VIPIDROWS','U') IS NOT NULL
     DROP TABLE VIPIDROWS
  SELECT * INTO VIPIDROWS FROM #PIDROWS     
  SELECT * FROM VIPIDROWS
  SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='VIPIDROWS'
 */
  SET @NSTEP=60
  DECLARE @SQL1 VARCHAR(MAX)
  SET @SQL1='
  INSERT PPC_PMT (PRODUCT_UID,  QUANTITY_IN_STOCK, LAST_UPDATE ,PRODUCT_CODE,PID_ROW_ID,BO_BOM_ROW_ID)    
  SELECT DISTINCT A.PRODUCT_UID,  0 AS QUANTITY_IN_STOCK, GETDATE() AS LAST_UPDATE ,BC.PRODUCT_CODE,
  A.ROW_ID,BC.BO_BOM_ROW_ID 
  FROM PPC_PID01106_BARCODE A    
  JOIN PPC_PID01106 B ON A.PID_ROW_ID = B.ROW_ID    
  JOIN #PIDROWS BC ON A.PRODUCT_UID= CAST(BC.PRODUCT_UID AS VARCHAR(40))--CHANGES VISHAL CAST VARCHAR(40) ON BC.PRODUCT_UID
  LEFT OUTER JOIN PPC_PMT D ON A.PRODUCT_UID = D.PRODUCT_UID    
  WHERE B.MRR_ID  = '''+@CPOID+''' AND  B.ADDITIONAL_QTY=0   
  AND D.PRODUCT_UID IS NULL'     
  EXEC(@SQL1)
  
  ---- INSERTING RECORDS IN PMT FOR PO FLOOR    
  --INSERT PPC_PMT (PRODUCT_UID,  QUANTITY_IN_STOCK, LAST_UPDATE ,PRODUCT_CODE,PID_ROW_ID,BO_BOM_ROW_ID)    
  --SELECT DISTINCT A.PRODUCT_UID,  0 AS QUANTITY_IN_STOCK, GETDATE() AS LAST_UPDATE ,BC.PRODUCT_CODE,'' AS PID_ROW_ID,'' AS BO_BOM_ROW_ID 
  --FROM PPC_PID01106_BARCODE A    
  --JOIN PPC_PID01106 B ON A.PID_ROW_ID = B.ROW_ID  
  --JOIN #PIDROWS BC ON A.PRODUCT_UID = BC.PRODUCT_UID    
  --LEFT OUTER JOIN PPC_PMT D ON A.PRODUCT_UID = D.PRODUCT_UID    
  --WHERE B.MRR_ID = @CPOID  AND  B.ADDITIONAL_QTY>0
  --AND   D.PRODUCT_UID IS NULL     
  
     
  GOTO LAST   

    
    
  LBLDQRQ:  
--  BEGIN TRY 
  SET @SQL1='LBLDQRQ'
  SET @NSTEP=61
  
  IF OBJECT_ID('TEMPDB..#DQRQROWS','U') IS NOT NULL
     DROP TABLE #DQRQROWS
     
 SET @NSTEP=62    
  SELECT    DET. PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE,     
           A.PURCHASE_PRICE,A.PARA3_CODE, A.INV_DT AS INV_DT, A.INV_NO AS INV_NO, A.AC_CODE, A.RECEIPT_DT AS RECEIPT_DT,    
           '' AS PARA4_CODE, '' AS PARA5_CODE, '' AS PARA6_CODE,  A.MRP,GETDATE() AS DT_CREATED, A.WS_PRICE AS WS_PRICE,    
           A.TAX_AMOUNT, '' AS BILL_NO ,ISNULL(RQ.BO_BOM_ROW_ID,'') AS BO_BOM_ROW_ID ,A.PRODUCT_CODE,
           DET.PRODUCT_UID AS OLD_PRODUCT_UID
  INTO #DQRQROWS
  FROM PPC_DQ_DET DET
  JOIN PPC_DQRQ_MST B ON DET.MEMO_ID=B.MEMO_ID
  JOIN PPC_RQ_DET RQ ON DET.ROW_ID=RQ.REF_ROW_ID
  JOIN PPC_SKU A ON DET.PRODUCT_UID=A.PRODUCT_UID    
 WHERE DET.MEMO_ID = @CPOID   --AND LEFT(RQ.PRODUCT_UID ,5)='LATER'
        
  
  SET @NSTEP=65
  
  UPDATE RQ SET PRODUCT_UID=A.PRODUCT_UID  
  FROM #DQRQROWS A  
  JOIN PPC_DQ_DET DET ON A.OLD_PRODUCT_UID=DET.PRODUCT_UID
  JOIN PPC_DQRQ_MST B ON DET.MEMO_ID=B.MEMO_ID
  JOIN PPC_RQ_DET RQ ON DET.ROW_ID=RQ.REF_ROW_ID
  WHERE DET.MEMO_ID = @CPOID  
  
  --INSERT PPC_SKU( PRODUCT_UID, ARTICLE_CODE, PARA1_CODE, PARA2_CODE, LAST_UPDATE, PURCHASE_PRICE,            
  --PARA3_CODE, INV_DT, INV_NO, AC_CODE, RECEIPT_DT, MRP, DT_CREATED, WS_PRICE, TAX_AMOUNT,PRODUCT_CODE )    
    
  --SELECT   A.PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE, A.PURCHASE_PRICE,    
  --A.PARA3_CODE,     
  --A.RECEIPT_DT AS INV_DT,A.BILL_NO AS  INV_NO, A.AC_CODE, A.RECEIPT_DT, 
  -- A.MRP,    
  --'' AS DT_CREATED, A.WS_PRICE, A.TAX_AMOUNT, 
  -- A.PRODUCT_CODE    
  --FROM #DQRQROWS A    
  --LEFT OUTER JOIN PPC_SKU D ON A.PRODUCT_UID = D.PRODUCT_UID     
  --WHERE  D.PRODUCT_UID IS NULL  
  
  
  -- INSERTING RECORDS IN PMT FOR PO FLOOR    
  SET @NSTEP=70
  
  INSERT PPC_PMT (PRODUCT_UID,  QUANTITY_IN_STOCK, LAST_UPDATE ,PRODUCT_CODE,PID_ROW_ID,BO_BOM_ROW_ID)    
  SELECT DISTINCT A.PRODUCT_UID,  0 AS QUANTITY_IN_STOCK, GETDATE() AS LAST_UPDATE ,A.PRODUCT_CODE,'' AS ROW_ID,A.BO_BOM_ROW_ID 
  FROM #DQRQROWS A    
  LEFT OUTER JOIN PPC_PMT D ON A.PRODUCT_UID = D.PRODUCT_UID   AND D.BO_BOM_ROW_ID =A.BO_BOM_ROW_ID  
 -- AND A.PID_ROW_ID=B.PID_ROW_ID
  WHERE   D.PRODUCT_UID IS NULL     
  
  
  GOTO LAST 
    
 END TRY    
    BEGIN CATCH    
    PRINT @SQL1
  PRINT 'SUB PROC STEP '+CAST(@NSTEP AS VARCHAR) 
  SET @CERROR =  ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()      
    END CATCH     
    
       

LAST:       
    
END
