CREATE PROC SP_PURINV_BOXENTRY     
(    
  @IMODE INT ,    
  @CWHERE VARCHAR(100)='',    
  @CPROD_CODE VARCHAR(100) ='',    
  @BLOCATION BIT=0,    
  @CWHERE1 VARCHAR(100)=''  ,
  @CLOGIN_DEPT_ID VARCHAR(4)='' ,
  @NXNITEM_TYPE numeric(1,0)=1,
  @CUserCode varchar(10)=''
) 
--WITH ENCRYPTION
AS    
BEGIN    
 DECLARE @CCMD NVARCHAR(MAX) ,@CALLOW_TO_RECEIVE_MORE_QTY_THAN_PO_QTY   varchar(10),
         @nPoQTY_Add numeric(10,0)
 
 DECLARE @CDONOTCHKPO2 VARCHAR(4)      
 SELECT TOP 1 @CDONOTCHKPO2 = VALUE FROM CONFIG WHERE CONFIG_OPTION='DONOT_CHKPO_BOXENTRY'   
  
  SET @NPOQTY_ADD=0
  
   DECLARE @LEVEL_NO INT,@DONOT_CHKPO_APPROVAL VARCHAR(10)
   SELECT TOP 1 @LEVEL_NO=LEVEL_NO  FROM XN_APPROVAL_CHECKLIST_LEVEL_USERS A  
   WHERE A.XN_TYPE ='PO'	AND DEPT_ID =@CLOGIN_DEPT_ID
  
   select @DONOT_CHKPO_APPROVAL=value  from config where config_option='DONOT_CHKPO_APPROVAL'
   
   set @DONOT_CHKPO_APPROVAL=isnull(@DONOT_CHKPO_APPROVAL,'')

   if @IMODE in(1,5,6)
   begin

   		SELECT @CALLOW_TO_RECEIVE_MORE_QTY_THAN_PO_QTY=VALUE FROM user_role_det a (NOLOCK)
		JOIN users b (NOLOCK) ON a.role_id=b.role_id
		WHERE USER_CODE=@CUSERCODE 
		AND FORM_NAME='FrmTranPurchaseInvoice' 
		AND FORM_OPTION='ALLOW_TO_RECEIVE_MORE_QTY_THAN_PO_QTY' 	
		
	
   end

   set @CALLOW_TO_RECEIVE_MORE_QTY_THAN_PO_QTY=isnull(@CALLOW_TO_RECEIVE_MORE_QTY_THAN_PO_QTY,'')

   if isnull(@CALLOW_TO_RECEIVE_MORE_QTY_THAN_PO_QTY,'')='1'
     SET @NPOQTY_ADD=999999

 IF @IMODE =1    
 GOTO LBLCHKITEM    
     
 ELSE IF @IMODE =3    
 GOTO LBLITEMDETAIL    
     
 ELSE IF @IMODE =4    
 GOTO LBLCHKITEMNEW    
     
 ELSE IF @IMODE =5    
 GOTO LBLITEMDETAILNEW 
 
 ELSE IF @IMODE =6    
 GOTO LBLIMPORTBARCODE    
     
 ELSE     
 GOTO LAST    
     
LBLCHKITEM:    
    
    IF @CLOGIN_DEPT_ID=''
    SELECT @CLOGIN_DEPT_ID=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
    
    DECLARE @CDONOTCHKPO VARCHAR(4)      
       
    SELECT TOP 1 @CDONOTCHKPO=VALUE FROM CONFIG WHERE CONFIG_OPTION='DONOT_CHKPO_BOXENTRY'   
    
     CREATE TABLE #SELECTED_PO(PO_ID VARCHAR(50))
	
	IF(ISNULL(@CWHERE1,'')<>'')
	BEGIN
		SET @CCMD=N'SELECT PO_ID FROM POM01106 WHERE PO_ID IN ('+@CWHERE1+')'
		INSERT INTO #SELECTED_PO(PO_ID)
		EXEC SP_EXECUTESQL @cCMD
	END   
	
	
	SELECT PRODUCT_CODE into #TMPSKU FROM POD01106 (NOLOCK) WHERE 1=2
	
	IF NOT EXISTS (SELECT TOP 1 'U' FROM #SELECTED_PO)
	BEGIN
	    
	    INSERT INTO #TMPSKU(PRODUCT_CODE)
		SELECT TOP 1 A.PRODUCT_CODE  FROM POD01106 A
		JOIN POM01106 B ON A.PO_ID =B.PO_ID 
		WHERE B.CANCELLED=0 
		AND A.PRODUCT_CODE =@CPROD_CODE
		
	END
	Else 
	begin
	
	    INSERT INTO #TMPSKU(PRODUCT_CODE)
		SELECT TOP 1 A.PRODUCT_CODE  FROM POD01106 A
		JOIN POM01106 B ON A.PO_ID =B.PO_ID 
		join #SELECTED_PO tmp on tmp.PO_ID =a.po_id 
		WHERE B.CANCELLED=0 
		AND A.PRODUCT_CODE =@CPROD_CODE
		
		
	end
	
	
	
	
	if exists (select top 1 'U' from #TMPSKU)
	begin
	     
	
		 select D.PO_FOR_DEPT_ID,D.PO_ID , c.PRODUCT_CODE ,C.ROW_ID,
				SUM(CASE WHEN PO.XNTYPE='PURCHASEINVOICE' THEN   ISNULL(PO.QTY,0) ELSE 0 END ) PI_QTY,
				SUM(CASE WHEN PO.XNTYPE='PURCHASEORDER' THEN   ISNULL(PO.QTY,0) ELSE 0 END )+@NPOQTY_ADD AS PO_QTY,
				SUM(CASE WHEN PO.XNTYPE='PURCHASEORDER' THEN   ISNULL(PO.QTY,0) ELSE -1*ISNULL(PO.QTY,0)  END ) AS INVOICE_QUANTITY,
				sum(case when PO.XnType='POAdjustment' then   isnull(po.Qty,0) else 0 end ) AS ADJ_QTY  
		 from PurchaseOrderProcessingNew Po (nolock)
		 join POD01106 C (NOLOCK) on po.RefRowId  =c.row_id    
		 JOIN POM01106 D (NOLOCK) ON C.PO_ID=D.PO_ID     
		 JOIN LOCATION LOC(NOLOCK) ON LOC.DEPT_ID=d.location_code
		 join #TMPSKU tmp on tmp.product_code =c.product_code 
		 WHERE D.CANCELLED = 0 and ISNULL(D.Short_close,0) <>1    
		 AND D.AC_CODE=(CASE WHEN @CDONOTCHKPO='1' THEN D.AC_CODE ELSE  @CWHERE END)      
		 and (d.ApprovedLevelNo =99 or @DONOT_CHKPO_APPROVAL='1')
		 AND D.dept_id=@CLOGIN_DEPT_ID    
		 AND (@CWHERE1='' OR (D.po_id IN (SELECT PO_ID FROM #SELECTED_PO)))
		 AND D.XN_ITEM_TYPE =@NXNITEM_TYPE
		 --and c.product_code =@CPROD_CODE
		 group by D.PO_FOR_DEPT_ID,D.PO_ID , c.PRODUCT_CODE ,C.ROW_ID
		 having SUM(CASE WHEN PO.XNTYPE='PURCHASEORDER' THEN   ISNULL(PO.QTY,0) ELSE -1*ISNULL(PO.QTY,0)  END )+@NPOQTY_ADD>0
		
	
	end
	else 
	begin
	
	
	
	
	;with Cte_po as
	(
	SELECT top 1  ART.ARTICLE_CODE , A.PARA1_CODE ,A.PARA2_CODE ,A.PARA3_CODE ,
	       SD.POPARA1 ,SD.POPARA2 ,SD.POPARA3 
	FROM SKU A (NOLOCK)
	JOIN ARTICLE ART (NOLOCK)ON A.ARTICLE_CODE =ART.ARTICLE_CODE 
	JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE =ART.SUB_SECTION_CODE 
	WHERE A.PRODUCT_CODE =@CPROD_CODE
	)
		
	 select D.PO_FOR_DEPT_ID,D.PO_ID , c.PRODUCT_CODE ,C.ROW_ID,
	        SUM(CASE WHEN PO.XNTYPE='PURCHASEINVOICE' THEN   ISNULL(PO.QTY,0) ELSE 0 END ) PI_QTY,
			SUM(CASE WHEN PO.XNTYPE='PURCHASEORDER' THEN   ISNULL(PO.QTY,0) ELSE 0 END )+@NPOQTY_ADD AS PO_QTY,
			SUM(CASE WHEN PO.XNTYPE='PURCHASEORDER' THEN   ISNULL(PO.QTY,0) ELSE -1*ISNULL(PO.QTY,0)  END ) AS INVOICE_QUANTITY,
			sum(case when PO.XnType='POAdjustment' then   isnull(po.Qty,0) else 0 end ) AS ADJ_QTY  
	 from PurchaseOrderProcessingNew Po (nolock)
	 join POD01106 C (NOLOCK) on po.RefRowId  =c.row_id    
	 JOIN POM01106 D (NOLOCK) ON C.PO_ID=D.PO_ID     
	 JOIN LOCATION LOC(NOLOCK) ON LOC.DEPT_ID=D.location_code
	 join Cte_po ct on ct.article_code =c.article_code 
	 and (ISNULL(ct.POPARA1,0)=0 or c.para1_code =ct.para1_code  ) 
	 and (ISNULL(ct.POPARA2,0)=0 or c.para2_code =ct.para2_code  ) 
	 and (ISNULL(ct.POPARA3,0)=0 or c.para3_code =ct.para3_code  )
	 WHERE D.CANCELLED = 0 and ISNULL(D.Short_close,0) <>1    
	 AND D.AC_CODE=(CASE WHEN @CDONOTCHKPO='1' THEN D.AC_CODE ELSE  @CWHERE END)      
	 and (d.ApprovedLevelNo =99 or @DONOT_CHKPO_APPROVAL='1')
	 AND D.dept_id=@CLOGIN_DEPT_ID    
	 AND (@CWHERE1='' OR (D.po_id IN (SELECT PO_ID FROM #SELECTED_PO)))
	 AND D.XN_ITEM_TYPE =@NXNITEM_TYPE and c.product_code=''
	 --and c.product_code =@CPROD_CODE
	 group by D.PO_FOR_DEPT_ID,D.PO_ID , c.PRODUCT_CODE ,C.ROW_ID
	
	
	end
	
	
   
 GOTO LAST    
     
LBLITEMDETAIL:    
    
  DECLARE @CDONOTCHKPO1 VARCHAR(4)      
       
  SELECT TOP 1 @CDONOTCHKPO1 = VALUE FROM CONFIG WHERE CONFIG_OPTION='DONOT_CHKPO_BOXENTRY'      
      
   
  SELECT  0 AS SNO,K.SECTION_NAME, J.SUB_SECTION_NAME, I.UOM_CODE,I.UOM_NAME,I.UOM_TYPE, C.PARA1_NAME,        
  D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,B.ARTICLE_NO,         
  B.ARTICLE_NAME, A.BARCODE_CODING_SCHEME AS CODING_SCHEME,0 AS AMOUNT, ISNULL(A1.INVOICE_QUANTITY,1) AS QUANTITY,      
  A.PRODUCT_CODE,A.ARTICLE_CODE,A.PURCHASE_PRICE,A.PURCHASE_PRICE AS GROSS_PURCHASE_PRICE,      
  0 AS DISCOUNT_PERCENTAGE, 0 AS DISCOUNT_AMOUNT,A.MRP,A.WS_PRICE AS WHOLESALE_PRICE,      
  '' AS ROW_ID,A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE,A.PARA3_CODE,A.PARA4_CODE,      
  A.PARA5_CODE,A.PARA6_CODE,    
  ISNULL(M.FORM_NAME,'') AS [FORM_NAME],ISNULL(A1.FORM_ID,'0000000') AS [FORM_ID],    
  ISNULL(A1.TAX_PERCENTAGE,0) AS TAX_PERCENTAGE ,    
  CONVERT(NUMERIC(14,2),0) AS TAX_AMOUNT,ISNULL(A1.ROW_ID,'') AS PO_ROW_ID    ,
  A1.VENDOR_EAN_NO,A1.HSN_CODE,A1.PO_ID
  ,B.alt_uom_conversion_factor,B.alternate_uom_applicable,B.alternate_uom_code,B.conversion_factor_mode,B2.UOM_NAME AS alternate_uom_name
  FROM POD01106 A1      
  JOIN POM01106 POM (NOLOCK) ON POM.PO_ID=A1.PO_ID    
  JOIN FORM M (NOLOCK) ON M.FORM_ID=A1.FORM_ID    
  JOIN SKU A (NOLOCK)  ON A1.PRODUCT_CODE=A.PRODUCT_CODE    
  JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE       
  JOIN PARA1 C (NOLOCK) ON C.PARA1_CODE = A.PARA1_CODE       
  JOIN PARA2 D (NOLOCK) ON D.PARA2_CODE = A.PARA2_CODE       
  JOIN PARA3 E (NOLOCK) ON E.PARA3_CODE = A.PARA3_CODE       
  JOIN PARA4 F (NOLOCK) ON F.PARA4_CODE = A.PARA4_CODE       
  JOIN PARA5 G (NOLOCK) ON G.PARA5_CODE = A.PARA5_CODE       
  JOIN PARA6 H (NOLOCK) ON H.PARA6_CODE = A.PARA6_CODE       
  JOIN UOM I (NOLOCK) ON I.UOM_CODE = B.UOM_CODE      
  LEFT OUTER JOIN UOM B2 (NOLOCK) ON B2.UOM_CODE = A1.alternate_uom_code      
  JOIN SECTIOND J (NOLOCK) ON J.SUB_SECTION_CODE = B.SUB_SECTION_CODE       
  JOIN SECTIONM K (NOLOCK) ON K.SECTION_CODE = J.SECTION_CODE     
  WHERE POM.CANCELLED=0      
  and ISNULL(pom.Short_close,0) <>1       
  AND A1.ROW_ID = @CWHERE1      
  AND A.PRODUCT_CODE =@CPROD_CODE     
  AND POM.AC_CODE=(CASE WHEN A.BARCODE_CODING_SCHEME=1 THEN POM.AC_CODE ELSE  (CASE WHEN @CDONOTCHKPO1 = '1' THEN POM.AC_CODE ELSE @CWHERE END) END)      
  AND POM.DEPT_ID=(SELECT VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID')       
       
 GOTO LAST    
     
LBLCHKITEMNEW:    
     
 SELECT TOP 1 @CDONOTCHKPO= VALUE FROM CONFIG WHERE CONFIG_OPTION='DONOT_CHKPO_BOXENTRY'     
     
    SELECT  A.PRODUCT_CODE,C.ROW_ID,C.PI_QTY,
	(C.INVOICE_QUANTITY - C.PI_QTY - ISNULL(E.ADJ_QUANTITY,0)) AS INVOICE_QUANTITY,ISNULL(E.ADJ_QUANTITY,0) AS ADJ_QTY     
    FROM SKU A (NOLOCK)      
 JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=A.ARTICLE_CODE      
 JOIN POD01106 C (NOLOCK) ON A.PRODUCT_CODE=C.PRODUCT_CODE     
 JOIN POM01106 D (NOLOCK) ON C.PO_ID=D.PO_ID      
 LEFT OUTER JOIN     
 (SELECT A.PO_ROW_ID,SUM(ADJ_QUANTITY) AS ADJ_QUANTITY FROM PO_ADJ_DET A (NOLOCK) JOIN PO_ADJ_MST B (NOLOCK) ON A.MEMO_ID = B.MEMO_ID GROUP BY A.PO_ROW_ID)     
 E  ON C.ROW_ID=E.PO_ROW_ID     
 LEFT OUTER JOIN EAN_SYNC B (NOLOCK) ON B.PRODUCT_CODE=A.PRODUCT_CODE     
 WHERE (A.PRODUCT_CODE = @CPROD_CODE OR ISNULL(B.EAN,'')= @CPROD_CODE)  and ISNULL(d.Short_close,0) <>1            
 AND (@CDONOTCHKPO='1' OR (D.AC_CODE=  @CWHERE )      
 AND (D.APPROVED =(CASE WHEN A.BARCODE_CODING_SCHEME=1 OR  LTRIM(RTRIM(STR(@BLOCATION))) =0 THEN D.APPROVED ELSE  2 END)))      
 AND (C.INVOICE_QUANTITY - C.PI_QTY - ISNULL(E.ADJ_QUANTITY,0)) > 0 
 AND D.CANCELLED = 0   
 AND D.dept_id=(SELECT VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID')    
     
    
  
 GOTO LAST    
     
LBLITEMDETAILNEW:  


  ;with ctePo as
  (
    SELECT a.RefRowId ,
          SUM(CASE WHEN a.XNTYPE='PURCHASEORDER' THEN   ISNULL(a.QTY,0) ELSE -1*ISNULL(a.QTY,0) END ) +@NPOQTY_ADD as Quantity
    FROM PURCHASEORDERPROCESSINGNEW A (nolock)
    where A.RefRowId = @CWHERE1 
    group by a.RefRowId 
    having SUM(CASE WHEN a.XNTYPE='PURCHASEORDER' THEN   ISNULL(a.QTY,0) ELSE -1*ISNULL(a.QTY,0) END )+@NPOQTY_ADD>0
  )




  SELECT 0 AS SNO,k.SECTION_NAME, J.SUB_SECTION_NAME, I.UOM_CODE,I.UOM_NAME,I.UOM_TYPE, C.PARA1_NAME,        
		  D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,B.ARTICLE_NO,         
		  B.ARTICLE_NAME, sn.sn_barcode_coding_scheme  AS CODING_SCHEME,0 AS AMOUNT,     
		  PO.Quantity  AS QUANTITY,     
		  0 AS SCHEME_QUANTITY,        
		  (case when A.PRODUCT_CODE='' then @CPROD_CODE else a.product_code end) PRODUCT_CODE,
		  A.ARTICLE_CODE,A.PURCHASE_PRICE,A.gross_purchase_price  AS GROSS_PURCHASE_PRICE,      
		  a.DISCOUNT_PERCENTAGE AS DISCOUNT_PERCENTAGE, a.DISCOUNT_AMOUNT AS DISCOUNT_AMOUNT,A.MRP,A.WHOLESALE_PRICE AS WHOLESALE_PRICE,      
		  '' AS ROW_ID,A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE,A.PARA3_CODE,A.PARA4_CODE,      
		  A.PARA5_CODE,A.PARA6_CODE,    
		  '' AS [FORM_NAME],ISNULL(A.FORM_ID,'0000000') AS [FORM_ID],    
		  ISNULL(A.TAX_PERCENTAGE,0) AS TAX_PERCENTAGE ,    
		  CONVERT(NUMERIC(14,2),0) AS TAX_AMOUNT,A.ROW_ID AS PO_ROW_ID ,A.VENDOR_EAN_NO ,A.PO_ID
		  ,a.alternate_uom_quantity,a.alt_uom_conversion_factor
		  ,B.alt_uom_conversion_factor,B.alternate_uom_applicable,B.alternate_uom_code,B.conversion_factor_mode,B2.UOM_NAME AS alternate_uom_name
  FROM POM01106 POM (NOLOCK)    
  JOIN POD01106 A (NOLOCK) ON POM.PO_ID=A.PO_ID    
  join ctePo po on a.row_id =po.RefRowId 
  JOIN SKU_names sn (NOLOCK) ON sn.PRODUCT_CODE=A.PRODUCT_CODE    
  JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE   
  JOIN PARA1 C (NOLOCK) ON C.PARA1_CODE = A.PARA1_CODE       
  JOIN PARA2 D (NOLOCK) ON D.PARA2_CODE = A.PARA2_CODE       
  JOIN PARA3 E (NOLOCK) ON E.PARA3_CODE = A.PARA3_CODE       
  JOIN PARA4 F (NOLOCK) ON F.PARA4_CODE = A.PARA4_CODE       
  JOIN PARA5 G (NOLOCK) ON G.PARA5_CODE = A.PARA5_CODE       
  JOIN PARA6 H (NOLOCK) ON H.PARA6_CODE = A.PARA6_CODE       
  JOIN UOM I (NOLOCK) ON I.UOM_CODE = B.UOM_CODE      
  LEFT OUTER JOIN UOM B2 (NOLOCK) ON B2.UOM_CODE = A.alternate_uom_code      
  JOIN SECTIOND J (NOLOCK) ON J.SUB_SECTION_CODE = B.SUB_SECTION_CODE       
  JOIN SECTIONM K (NOLOCK) ON K.SECTION_CODE = J.SECTION_CODE     
  join location loc (nolock) on loc.dept_id=pom.location_code
 WHERE  ISNULL(pom.Short_close,0) <>1       
 AND POM.CANCELLED=0 
 AND POM.AC_CODE=(CASE WHEN @CDONOTCHKPO2 = '1' THEN POM.AC_CODE ELSE @CWHERE END)     
 AND POM.dept_id=@CLOGIN_DEPT_ID 
  and (pom.ApprovedLevelNo =99 or @DONOT_CHKPO_APPROVAL='1')
    

 GOTO LAST  
 
 LBLIMPORTBARCODE:
 
 
 SELECT PRODUCT_CODE into #TMPSKU_PASTE FROM POD01106 (NOLOCK) WHERE 1=2
	
	

 DECLARE @DTSQL NVARCHAR(MAX)
-- @CWHERE1

    
 set @DTSQL=N'SELECT distinct  A.PRODUCT_CODE  FROM POD01106 A
	JOIN POM01106 B ON A.PO_ID =B.PO_ID 
	join #SELECTED_PO tmp on tmp.PO_ID =a.po_id 
	WHERE B.CANCELLED=0 
	and b.ac_code ='''+@CWHERE +'''
	'


 SET @DTSQL=N'WITH CTE AS
 ( 
  SELECT 0 AS SNO,K.SECTION_NAME, J.SUB_SECTION_NAME, I.UOM_CODE,I.UOM_NAME,I.UOM_TYPE, C.PARA1_NAME,        
  D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,B.ARTICLE_NO,         
  B.ARTICLE_NAME, SKU.BARCODE_CODING_SCHEME AS CODING_SCHEME,0 AS AMOUNT,     
  TMP.QTY   AS QUANTITY,
  TMP.QTY AS IMPORT_QTY,     
  0 AS SCHEME_QUANTITY,        
  A.PRODUCT_CODE,A.ARTICLE_CODE,A.PURCHASE_PRICE,A.PURCHASE_PRICE AS GROSS_PURCHASE_PRICE,      
  0 AS DISCOUNT_PERCENTAGE, 0 AS DISCOUNT_AMOUNT,A.MRP,A.WHOLESALE_PRICE AS WHOLESALE_PRICE,      
  '''' AS ROW_ID,A.PARA1_CODE,A.PARA2_CODE,A.PARA3_CODE,A.PARA4_CODE,      
  A.PARA5_CODE,A.PARA6_CODE,    
  '''' AS [FORM_NAME],''0000000'' AS [FORM_ID],    
  ISNULL(A.TAX_PERCENTAGE,0) AS TAX_PERCENTAGE ,    
  CONVERT(NUMERIC(14,2),0) AS TAX_AMOUNT,A.ROW_ID AS PO_ROW_ID ,A.VENDOR_EAN_NO ,A.PO_ID,
  BARCODESR=ROW_NUMBER() OVER (PARTITION BY TMP.PRODUCT_CODE ORDER BY TMP.PRODUCT_CODE)
  ,B.alt_uom_conversion_factor,B.alternate_uom_applicable,B.alternate_uom_code,B.conversion_factor_mode,uom1.UOM_NAME AS alternate_uom_name     
  FROM (SELECT  PRODUCT_CODE,SUM(QUANTITY) AS QTY FROM'+@CWHERE1+' GROUP BY PRODUCT_CODE) TMP
  JOIN POD01106 A (NOLOCK) ON TMP.PRODUCT_CODE=A.PRODUCT_CODE  
  LEFT OUTER JOIN UOM uom1 (NOLOCK) ON uom1.UOM_CODE = A.alternate_uom_code 
  JOIN POM01106 POM (NOLOCK)  ON A.PO_ID=POM.PO_ID  
  JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=A.PRODUCT_CODE    
  JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE       
  JOIN PARA1 C (NOLOCK) ON C.PARA1_CODE = A.PARA1_CODE       
  JOIN PARA2 D (NOLOCK) ON D.PARA2_CODE = A.PARA2_CODE       
  JOIN PARA3 E (NOLOCK) ON E.PARA3_CODE = A.PARA3_CODE       
  JOIN PARA4 F (NOLOCK) ON F.PARA4_CODE = A.PARA4_CODE       
  JOIN PARA5 G (NOLOCK) ON G.PARA5_CODE = A.PARA5_CODE       
  JOIN PARA6 H (NOLOCK) ON H.PARA6_CODE = A.PARA6_CODE       
  JOIN UOM I (NOLOCK) ON I.UOM_CODE = B.UOM_CODE      
  LEFT OUTER JOIN UOM B2 (NOLOCK) ON B2.UOM_CODE = A.alternate_uom_code      
  JOIN SECTIOND J (NOLOCK) ON J.SUB_SECTION_CODE = B.SUB_SECTION_CODE       
  JOIN SECTIONM K (NOLOCK) ON K.SECTION_CODE = J.SECTION_CODE     
  WHERE POM.CANCELLED=0  AND ISNULL(POM.SHORT_CLOSE,0) <>1       
  AND POM.AC_CODE=(CASE WHEN '''+RTRIM(LTRIM(STR(@CDONOTCHKPO2)))+''' = ''1'' THEN POM.AC_CODE ELSE '''+@CWHERE+''' END)     
  AND POM.dept_id='''+@CLOGIN_DEPT_ID+''' 
  and (pom.ApprovedLevelNo =99 or '''+Rtrim(ltrim(Str(@DONOT_CHKPO_APPROVAL)))+'''=''1'')
 )
 SELECT CASE WHEN CODING_SCHEME<>3 AND QUANTITY>=IMPORT_QTY THEN IMPORT_QTY ELSE  QUANTITY END AS  QUANTITY, 
 * FROM CTE A
 WHERE BARCODESR=1 '
 PRINT @DTSQL 
 EXEC SP_EXECUTESQL  @DTSQL  

 
  SET @CCMD='IF OBJECT_ID('''+@CWHERE1+''',''U'') IS NOT NULL DROP TABLE '+@CWHERE1+''   
  --EXEC SP_EXECUTESQL  @CCMD 


 GOTO LAST  
     
LAST:    
    
END
