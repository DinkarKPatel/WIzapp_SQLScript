CREATE PROCEDURE SP3S_ALLOCATEBATCH
(
	 @GLOCATION VARCHAR(5),@dtTodayDate DATETIME,@GUSER_CODE VARCHAR(10),@dtCMDT DATETIME,@nMrpWs INT,@cCMID VARCHAR(100)
	,@bALLOW_NEG_STOCK BIT,@GDEPT_ID   VARCHAR(10),@GDEPT_NAME VARCHAR(100)
)
AS
BEGIN
--DECLARE @GLOCATION VARCHAR(5),@dtTodayDate DATETIME,@GUSER_CODE VARCHAR(10),@dtCMDT DATETIME,@nMrpWs INT,@cCMID VARCHAR(100)
--,@bALLOW_NEG_STOCK BIT,@GDEPT_ID   VARCHAR(10),@GDEPT_NAME VARCHAR(100)

--SELECT @GLOCATION ='01',@dtTodayDate ='2025-03-20',@GUSER_CODE ='0000000',@dtCMDT ='2025-03-20',@nMrpWs =1,@cCMID ='LATER'
--,@bALLOW_NEG_STOCK =1,@GDEPT_ID   ='000',@GDEPT_NAME ='Default Bin'
/*
DROP TABLE #WSLDTSAVE
SELECT TOP 100 product_code INTO #WSLDTSAVE FROM SKU where barcode_coding_scheme=1 and CHARINDEX('@',product_code)=0 AND PRODUCT_CODE IN ('0110022456')
select * from #wsldtsave
*/
--SET @bALLOW_NEG_STOCK=0
IF OBJECT_ID('TEMPDB..#WSLDTSAVE','U') IS NULL
BEGIN
	CREATE TABLE #WSLDTSAVE(PRODUCT_CODE VARCHAR(100))
END

CREATE TABLE #BINLIST  (major_bin_id VARCHAR(10))

CREATE TABLE #LOCSP (SR_NO NUMERIC(5), PRODUCT_CODE VARCHAR(MAX),MRP NUMERIC(14,2),WS_PRICE NUMERIC(14,2))

CREATE TABLE #STK (BASE_PRODUCT_CODE VARCHAR(MAX),BATCH_NO VARCHAR(50),product_code VARCHAR(MAX),quantity_in_stock NUMERIC(14,3),
DEPT_ID VARCHAR(MAX),BIN_ID VARCHAR(MAX),MRP NUMERIC(14,2),FIX_MRP NUMERIC(14,2),HSN_CODE VARCHAR(MAX)
,article_code VARCHAR(MAX),para1_code VARCHAR(MAX),para2_code VARCHAR(MAX),para3_code VARCHAR(MAX),para4_code VARCHAR(MAX),para5_code VARCHAR(MAX),para6_code VARCHAR(MAX),para7_code VARCHAR(MAX)
,SECTION_NAME VARCHAR(MAX),SUB_SECTION_NAME VARCHAR(MAX),article_no VARCHAR(MAX),para1_name VARCHAR(MAX),para2_name VARCHAR(MAX),para3_name VARCHAR(MAX),para4_name VARCHAR(MAX),para5_name VARCHAR(MAX),para6_name VARCHAR(MAX),para7_name VARCHAR(MAX)
,BIN_NAME VARCHAR(MAX),PURCHASE_BILL_NO VARCHAR(MAX),PURCHASE_BILL_DT DATETIME,purchase_receipt_Dt DATETIME,purchase_challan_no VARCHAR(MAX)
,selling_days NUMERIC(5),CHALLAN_RECEIPT_DT DATETIME,EXPIRY_DT DATETIME
,ac_name varchar(300),ATTR1_KEY_NAME varchar(500),ATTR2_KEY_NAME varchar(500),ATTR3_KEY_NAME varchar(500),ATTR4_KEY_NAME varchar(500),ATTR5_KEY_NAME varchar(500),
ATTR6_KEY_NAME varchar(500),ATTR7_KEY_NAME varchar(500),ATTR8_KEY_NAME varchar(500),ATTR9_KEY_NAME varchar(500),ATTR10_KEY_NAME varchar(500),ATTR11_KEY_NAME varchar(500),
ATTR12_KEY_NAME varchar(500),ATTR13_KEY_NAME varchar(500),ATTR14_KEY_NAME varchar(500),ATTR15_KEY_NAME varchar(500),ATTR16_KEY_NAME varchar(500),ATTR17_KEY_NAME varchar(500),
ATTR18_KEY_NAME varchar(500),ATTR19_KEY_NAME varchar(500),ATTR20_KEY_NAME varchar(500),ATTR21_KEY_NAME varchar(500),ATTR22_KEY_NAME varchar(500),ATTR23_KEY_NAME varchar(500),
ATTR24_KEY_NAME varchar(500),ATTR25_KEY_NAME varchar(500)
 )

CREATE TABLE #FROMSKU (NegativeStk BIT, SRNO NUMERIC(5),
	BASE_PRODUCT_CODE VARCHAR(MAX),BATCH_NO VARCHAR(50),product_code VARCHAR(MAX),quantity_in_stock NUMERIC(14,3),
DEPT_ID VARCHAR(MAX),BIN_ID VARCHAR(MAX),MRP NUMERIC(14,2),FIX_MRP NUMERIC(14,2),HSN_CODE VARCHAR(MAX)
,article_code VARCHAR(MAX),para1_code VARCHAR(MAX),para2_code VARCHAR(MAX),para3_code VARCHAR(MAX),para4_code VARCHAR(MAX),para5_code VARCHAR(MAX),para6_code VARCHAR(MAX),para7_code VARCHAR(MAX)
,SECTION_NAME VARCHAR(MAX),SUB_SECTION_NAME VARCHAR(MAX),article_no VARCHAR(MAX),para1_name VARCHAR(MAX),para2_name VARCHAR(MAX),para3_name VARCHAR(MAX),para4_name VARCHAR(MAX),para5_name VARCHAR(MAX),para6_name VARCHAR(MAX),para7_name VARCHAR(MAX)
,BIN_NAME VARCHAR(MAX),PURCHASE_BILL_NO VARCHAR(MAX),PURCHASE_BILL_DT DATETIME,purchase_receipt_Dt DATETIME,purchase_challan_no VARCHAR(MAX)
,selling_days NUMERIC(5),CHALLAN_RECEIPT_DT DATETIME,EXPIRY_DT DATETIME
,ac_name varchar(300),ATTR1_KEY_NAME varchar(500),ATTR2_KEY_NAME varchar(500),ATTR3_KEY_NAME varchar(500),ATTR4_KEY_NAME varchar(500),ATTR5_KEY_NAME varchar(500),
ATTR6_KEY_NAME varchar(500),ATTR7_KEY_NAME varchar(500),ATTR8_KEY_NAME varchar(500),ATTR9_KEY_NAME varchar(500),ATTR10_KEY_NAME varchar(500),ATTR11_KEY_NAME varchar(500),
ATTR12_KEY_NAME varchar(500),ATTR13_KEY_NAME varchar(500),ATTR14_KEY_NAME varchar(500),ATTR15_KEY_NAME varchar(500),ATTR16_KEY_NAME varchar(500),ATTR17_KEY_NAME varchar(500),
ATTR18_KEY_NAME varchar(500),ATTR19_KEY_NAME varchar(500),ATTR20_KEY_NAME varchar(500),ATTR21_KEY_NAME varchar(500),ATTR22_KEY_NAME varchar(500),ATTR23_KEY_NAME varchar(500),
ATTR24_KEY_NAME varchar(500),ATTR25_KEY_NAME varchar(500)
)

CREATE TABLE #FINALDATA (NegativeStk BIT, SRNO NUMERIC(10),
	BASE_PRODUCT_CODE VARCHAR(MAX),BATCH_NO NUMERIC(10),product_code VARCHAR(MAX),quantity_in_stock NUMERIC(14,3),
DEPT_ID VARCHAR(MAX),BIN_ID VARCHAR(MAX),MRP NUMERIC(14,2),FIX_MRP NUMERIC(14,2),HSN_CODE VARCHAR(MAX)
,article_code VARCHAR(MAX),para1_code VARCHAR(MAX),para2_code VARCHAR(MAX),para3_code VARCHAR(MAX),para4_code VARCHAR(MAX),para5_code VARCHAR(MAX),para6_code VARCHAR(MAX),para7_code VARCHAR(MAX)
,SECTION_NAME VARCHAR(MAX),SUB_SECTION_NAME VARCHAR(MAX),article_no VARCHAR(MAX),para1_name VARCHAR(MAX),para2_name VARCHAR(MAX),para3_name VARCHAR(MAX),para4_name VARCHAR(MAX),para5_name VARCHAR(MAX),para6_name VARCHAR(MAX),para7_name VARCHAR(MAX)
,BIN_NAME VARCHAR(MAX),PURCHASE_BILL_NO VARCHAR(MAX),PURCHASE_BILL_DT DATETIME,purchase_receipt_Dt DATETIME,purchase_challan_no VARCHAR(MAX)
,selling_days NUMERIC(5),CHALLAN_RECEIPT_DT DATETIME,EXPIRY_DT DATETIME
,ac_name varchar(300),ATTR1_KEY_NAME varchar(500),ATTR2_KEY_NAME varchar(500),ATTR3_KEY_NAME varchar(500),ATTR4_KEY_NAME varchar(500),ATTR5_KEY_NAME varchar(500),
ATTR6_KEY_NAME varchar(500),ATTR7_KEY_NAME varchar(500),ATTR8_KEY_NAME varchar(500),ATTR9_KEY_NAME varchar(500),ATTR10_KEY_NAME varchar(500),ATTR11_KEY_NAME varchar(500),
ATTR12_KEY_NAME varchar(500),ATTR13_KEY_NAME varchar(500),ATTR14_KEY_NAME varchar(500),ATTR15_KEY_NAME varchar(500),ATTR16_KEY_NAME varchar(500),ATTR17_KEY_NAME varchar(500),
ATTR18_KEY_NAME varchar(500),ATTR19_KEY_NAME varchar(500),ATTR20_KEY_NAME varchar(500),ATTR21_KEY_NAME varchar(500),ATTR22_KEY_NAME varchar(500),ATTR23_KEY_NAME varchar(500),
ATTR24_KEY_NAME varchar(500),ATTR25_KEY_NAME varchar(500)
,allocatedQty NUMERIC(14,2))

IF EXISTS (SELECT TOP 1 'U' from #WSLDTSAVE)
BEGIN
	INSERT INTO #BINLIST(major_bin_id)
	SELECT a.BIN_ID
	FROM binusers a
	JOIN BIN_LOC b ON b.BIN_ID=a.BIN_ID
	JOIN BIN c ON c.BIN_ID=a.BIN_ID
	WHERE A.user_code=@GUSER_CODE  and b.DEPT_ID=@GLOCATION
	PRINT '10 : '+CONVERT(VARCHAR,GETDATE(),114)
	INSERT INTO #LOCSP(SR_NO , PRODUCT_CODE ,MRP ,WS_PRICE )
	SELECT ROW_NUMBER() OVER (PARTITION BY A.PRODUCT_CODE,(CASE WHEN @nMrpWs =1 THEN A.MRP WHEN  @nMrpWs=2  THEN A.WS_PRICE ELSE 0 END),WS_PRICE ORDER BY  A.PRODUCT_CODE,MRP,WS_PRICE ,FROM_DT DESC) AS SR_NO,
	A.PRODUCT_CODE,(CASE WHEN @nMrpWs =1 THEN A.MRP WHEN  @nMrpWs=2  THEN A.WS_PRICE ELSE 0 END) AS MRP,WS_PRICE 
	--INTO #LOCSP                                            
	FROM LOCSKUSP  A (NOLOCK)      
	JOIN #WSLDTSAVE D ON D.PRODUCT_CODE=LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE ))) 
	WHERE DEPT_ID=@GLOCATION  AND ( FROM_DT <= @dttodaydate OR ISNULL(FROM_DT,'') ='')
	PRINT '20 : '+CONVERT(VARCHAR,GETDATE(),114)

	INSERT INTO  #STK (BASE_PRODUCT_CODE ,BATCH_NO ,
	product_code ,quantity_in_stock ,DEPT_ID  ,BIN_ID  ,MRP ,FIX_MRP ,HSN_CODE  
	,article_code  ,para1_code  ,para2_code  ,para3_code  ,para4_code  ,para5_code  ,para6_code  ,para7_code  
	,SECTION_NAME  ,SUB_SECTION_NAME  ,article_no  ,para1_name  ,para2_name  ,para3_name  ,para4_name  ,para5_name  ,para6_name  ,para7_name  
	,BIN_NAME  ,PURCHASE_BILL_NO  ,PURCHASE_BILL_DT ,purchase_receipt_Dt ,purchase_challan_no,
	selling_days ,CHALLAN_RECEIPT_DT ,EXPIRY_DT
	,ac_name,ATTR1_KEY_NAME,ATTR2_KEY_NAME,ATTR3_KEY_NAME,ATTR4_KEY_NAME,ATTR5_KEY_NAME,ATTR6_KEY_NAME,ATTR7_KEY_NAME,ATTR8_KEY_NAME,ATTR9_KEY_NAME,ATTR10_KEY_NAME,
	ATTR11_KEY_NAME,ATTR12_KEY_NAME,ATTR13_KEY_NAME,ATTR14_KEY_NAME,ATTR15_KEY_NAME,ATTR16_KEY_NAME,ATTR17_KEY_NAME,ATTR18_KEY_NAME,ATTR19_KEY_NAME,ATTR20_KEY_NAME,
	ATTR21_KEY_NAME,ATTR22_KEY_NAME,ATTR23_KEY_NAME,ATTR24_KEY_NAME,ATTR25_KEY_NAME
	)      
	SELECT 
	LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE ))) AS BASE_PRODUCT_CODE,
	CAST((CASE WHEN NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1) IS NULL THEN '0' ELSE RIGHT(A.PRODUCT_CODE, LEN(A.PRODUCT_CODE )-(CHARINDEX ('@',A.PRODUCT_CODE)+2)) END) AS VARCHAR(MAX)) AS BATCH_NO,
	A.product_code,A.quantity_in_stock AS quantity_in_stock,A.DEPT_ID,A.BIN_ID,ISNULL(Z.MRP,(CASE WHEN @nMrpWs =1 THEN C.MRP WHEN  @nMrpWs=2  THEN C.WS_PRICE ELSE 0 END)) AS MRP,C.FIX_MRP,C.HSN_CODE
	,C.article_code,C.para1_code,C.para2_code,C.para3_code,C.para4_code,C.para5_code,C.para6_code,C.para7_code
	,C1.SECTION_NAME,C1.SUB_SECTION_NAME,C1.article_no,C1.para1_name,C1.para2_name,C1.para3_name,C1.para4_name,C1.para5_name,C1.para6_name,C1.para7_name
	,B.BIN_NAME,C1.PURCHASE_BILL_NO,C1.PURCHASE_BILL_DT,C1.purchase_receipt_Dt,C1.purchase_challan_no
	,(CASE WHEN ISNULL(sx.receipt_dt,C.RECEIPT_DT)<>'' AND ISNULL(sx.receipt_dt,C.RECEIPT_DT)<>@dtCMDT THEN  DATEDIFF(DAY,ISNULL(sx.receipt_dt,C.RECEIPT_DT),@dtCMDT) ELSE 1 END) AS selling_days
	,ISNULL(sx.receipt_dt,'') AS CHALLAN_RECEIPT_DT,C.EXPIRY_DT
	,ac_name,ATTR1_KEY_NAME,ATTR2_KEY_NAME,ATTR3_KEY_NAME,ATTR4_KEY_NAME,ATTR5_KEY_NAME,ATTR6_KEY_NAME,ATTR7_KEY_NAME,ATTR8_KEY_NAME,ATTR9_KEY_NAME,ATTR10_KEY_NAME,
	ATTR11_KEY_NAME,ATTR12_KEY_NAME,ATTR13_KEY_NAME,ATTR14_KEY_NAME,ATTR15_KEY_NAME,ATTR16_KEY_NAME,ATTR17_KEY_NAME,ATTR18_KEY_NAME,ATTR19_KEY_NAME,ATTR20_KEY_NAME,
	ATTR21_KEY_NAME,ATTR22_KEY_NAME,ATTR23_KEY_NAME,ATTR24_KEY_NAME,ATTR25_KEY_NAME
	--INTO #STK
	FROM PMT01106 A (NOLOCK)
	JOIN SKU C (NOLOCK) ON C.PRODUCT_CODE=A.PRODUCT_CODE  
	JOIN sku_names C1 (NOLOCK) ON C1.PRODUCT_CODE=C.PRODUCT_CODE
	JOIN ARTICLE ART (NOLOCK) ON ART.article_code=C.article_code
	JOIN BIN B (NOLOCK) ON A.BIN_ID =B.BIN_ID 
	JOIN #BINLIST BL ON BL.major_bin_id=B.bin_id
	JOIN #WSLDTSAVE D ON D.PRODUCT_CODE=LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE ))) 
	LEFT OUTER JOIN #LOCSP Z ON Z.PRODUCT_CODE=A.PRODUCT_CODE  AND Z.SR_NO=1
	LEFT JOIN sku_xfp sx (NOLOCK) ON sx.product_code=a.product_code AND sx.dept_id=@GLOCATION   
	where ISNULL( A.bo_order_id,'')='' AND quantity_in_stock>0 
	--(@GUSER_CODE != "0000000" ? " AND B.major_bin_id IN(" + (String.IsNullOrEmpty(GlobalCls.cUserForBINs) ? "'" + GlobalCls.AppMain.GDEPT_ID + "'" : GlobalCls.cUserForBINs) + @") " : "") +
	AND A.DEPT_ID=@GLOCATION
	AND ISNULL(C.EXPIRY_DT,'')>=(CASE WHEN ISNULL(ART.PERISHABLE,0)=1 THEN @dtCMDT  ELSE '' END)
	--UNION ALL



	--SELECT * FROM @BINLIST
	--SELECT * FROM @STK
	PRINT '30 : '+CONVERT(VARCHAR,GETDATE(),114)
	INSERT INTO  #STK (BASE_PRODUCT_CODE ,BATCH_NO ,
	product_code ,quantity_in_stock ,DEPT_ID  ,BIN_ID  ,MRP ,FIX_MRP ,HSN_CODE  
	,article_code  ,para1_code  ,para2_code  ,para3_code  ,para4_code  ,para5_code  ,para6_code  ,para7_code  
	,SECTION_NAME  ,SUB_SECTION_NAME  ,article_no  ,para1_name  ,para2_name  ,para3_name  ,para4_name  ,para5_name  ,para6_name  ,para7_name  
	,BIN_NAME  ,PURCHASE_BILL_NO  ,PURCHASE_BILL_DT ,purchase_receipt_Dt ,purchase_challan_no,selling_days ,CHALLAN_RECEIPT_DT ,EXPIRY_DT 
	,ac_name,ATTR1_KEY_NAME,ATTR2_KEY_NAME,ATTR3_KEY_NAME,ATTR4_KEY_NAME,ATTR5_KEY_NAME,ATTR6_KEY_NAME,ATTR7_KEY_NAME,ATTR8_KEY_NAME,ATTR9_KEY_NAME,ATTR10_KEY_NAME,
	ATTR11_KEY_NAME,ATTR12_KEY_NAME,ATTR13_KEY_NAME,ATTR14_KEY_NAME,ATTR15_KEY_NAME,ATTR16_KEY_NAME,ATTR17_KEY_NAME,ATTR18_KEY_NAME,ATTR19_KEY_NAME,ATTR20_KEY_NAME,
	ATTR21_KEY_NAME,ATTR22_KEY_NAME,ATTR23_KEY_NAME,ATTR24_KEY_NAME,ATTR25_KEY_NAME) 
	SELECT LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE ))) AS BASE_PRODUCT_CODE,
	CAST((CASE WHEN NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1) IS NULL THEN '0' ELSE RIGHT(A.PRODUCT_CODE, LEN(A.PRODUCT_CODE )-(CHARINDEX ('@',A.PRODUCT_CODE)+2)) END) AS VARCHAR(MAX)) AS BATCH_NO,                                            
	A.product_code,A.quantity quantity_in_stock,A.DEPT_ID,A.BIN_ID,A.MRP,A.FIX_MRP,A.HSN_CODE
	,C.article_code,C.para1_code,C.para2_code,C.para3_code,C.para4_code,C.para5_code,C.para6_code,C.para7_code
	,C1.SECTION_NAME,C1.SUB_SECTION_NAME,C1.article_no,C1.para1_name,C1.para2_name,C1.para3_name,C1.para4_name,C1.para5_name,C1.para6_name,C1.para7_name
	,B.BIN_NAME,C1.PURCHASE_BILL_NO,C1.PURCHASE_BILL_DT,C1.purchase_receipt_Dt,C1.purchase_challan_no,A.selling_days
	,C1.CHALLAN_RECEIPT_DT,C.EXPIRY_DT
	,ac_name,ATTR1_KEY_NAME,ATTR2_KEY_NAME,ATTR3_KEY_NAME,ATTR4_KEY_NAME,ATTR5_KEY_NAME,ATTR6_KEY_NAME,ATTR7_KEY_NAME,ATTR8_KEY_NAME,ATTR9_KEY_NAME,ATTR10_KEY_NAME,
	ATTR11_KEY_NAME,ATTR12_KEY_NAME,ATTR13_KEY_NAME,ATTR14_KEY_NAME,ATTR15_KEY_NAME,ATTR16_KEY_NAME,ATTR17_KEY_NAME,ATTR18_KEY_NAME,ATTR19_KEY_NAME,ATTR20_KEY_NAME,
	ATTR21_KEY_NAME,ATTR22_KEY_NAME,ATTR23_KEY_NAME,ATTR24_KEY_NAME,ATTR25_KEY_NAME
	FROM CMD01106 A (NOLOCK)
	JOIN SKU C (NOLOCK) ON C.PRODUCT_CODE=A.PRODUCT_CODE
	JOIN sku_names C1 (NOLOCK) ON C1.PRODUCT_CODE=C.PRODUCT_CODE
	JOIN BIN B (NOLOCK) ON A.BIN_ID =B.BIN_ID 
	WHERE CM_ID=@cCMID 
    PRINT '40 : '+CONVERT(VARCHAR,GETDATE(),114)
	;WITH BATCHNO
	AS
	(
	SELECT product_code, BATCH_NO=ROW_NUMBER() OVER(PARTITION BY BASE_PRODUCT_CODE,PRODUCT_CODE ORDER BY BASE_PRODUCT_CODE,PRODUCT_CODE,BATCH_NO) FROM #STK WHERE ISNUMERIC(BATCH_NO)=0
	)
	UPDATE A SET A.BATCH_NO=B.BATCH_NO
	FROM #STK A
	JOIN BATCHNO B ON B.product_code=A.product_code

	PRINT '50 : '+CONVERT(VARCHAR,GETDATE(),114)

	IF @bALLOW_NEG_STOCK=1
	BEGIN
		INSERT INTO  #FROMSKU (NegativeStk, BASE_PRODUCT_CODE ,BATCH_NO ,
		product_code  ,DEPT_ID  ,BIN_ID  ,MRP ,FIX_MRP ,
		HSN_CODE,article_code  ,para1_code  ,para2_code  ,para3_code  ,para4_code  ,para5_code  ,para6_code  ,para7_code  
		,SECTION_NAME  ,SUB_SECTION_NAME  ,article_no  ,para1_name  ,para2_name  ,para3_name  ,para4_name  ,para5_name  ,para6_name  ,para7_name  
		,BIN_NAME  ,PURCHASE_BILL_NO  ,PURCHASE_BILL_DT ,purchase_receipt_Dt ,purchase_challan_no,selling_days ,CHALLAN_RECEIPT_DT ,EXPIRY_DT,quantity_in_stock
		,ac_name,ATTR1_KEY_NAME,ATTR2_KEY_NAME,ATTR3_KEY_NAME,ATTR4_KEY_NAME,ATTR5_KEY_NAME,ATTR6_KEY_NAME,ATTR7_KEY_NAME,ATTR8_KEY_NAME,ATTR9_KEY_NAME,ATTR10_KEY_NAME,
		ATTR11_KEY_NAME,ATTR12_KEY_NAME,ATTR13_KEY_NAME,ATTR14_KEY_NAME,ATTR15_KEY_NAME,ATTR16_KEY_NAME,ATTR17_KEY_NAME,ATTR18_KEY_NAME,ATTR19_KEY_NAME,ATTR20_KEY_NAME,
		ATTR21_KEY_NAME,ATTR22_KEY_NAME,ATTR23_KEY_NAME,ATTR24_KEY_NAME,ATTR25_KEY_NAME) 
	
		SELECT CAST(1 AS BIT) AS NegativeStk,D1.PRODUCT_CODE AS BASE_PRODUCT_CODE,
		CAST((CASE WHEN NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1) IS NULL THEN '0' ELSE RIGHT(A.PRODUCT_CODE, LEN(A.PRODUCT_CODE )-(CHARINDEX ('@',A.PRODUCT_CODE)+2)) END) AS VARCHAR) AS BATCH_NO,
		A.product_code,@GLOCATION DEPT_ID,@GDEPT_ID  BIN_ID,ISNULL(Z.MRP,(CASE WHEN @nMrpWs=1 THEN A.MRP WHEN  @nMrpWs=2  THEN A.WS_PRICE ELSE 0 END)) AS MRP,A.FIX_MRP
		,A.HSN_CODE, A.article_code,A.para1_code,A.para2_code,A.para3_code,A.para4_code,A.para5_code,A.para6_code,A.para7_code
		,C1.section_name,C1.sub_section_name, C1.article_no,C1.para1_name,C1.para2_name,C1.para3_name,C1.para4_name,C1.para5_name,C1.para6_name,C1.para7_name
		,@GDEPT_NAME BIN_NAME  ,C1.PURCHASE_BILL_NO,C1.PURCHASE_BILL_DT,C1.purchase_receipt_Dt,C1.purchase_challan_no
		,(CASE WHEN ISNULL(sx.receipt_dt,A.RECEIPT_DT)<>'' AND ISNULL(sx.receipt_dt,A.RECEIPT_DT)<>@dtCMDT THEN  DATEDIFF(DAY,ISNULL(sx.receipt_dt,A.RECEIPT_DT),@dtCMDT) ELSE 1 END) AS selling_days    
		,ISNULL(sx.receipt_dt,'') AS CHALLAN_RECEIPT_DT,A.EXPIRY_DT,cast(99999 as NUMERIC(14,3)) AS  quantity_in_stock
		,ac_name,ATTR1_KEY_NAME,ATTR2_KEY_NAME,ATTR3_KEY_NAME,ATTR4_KEY_NAME,ATTR5_KEY_NAME,ATTR6_KEY_NAME,ATTR7_KEY_NAME,ATTR8_KEY_NAME,ATTR9_KEY_NAME,ATTR10_KEY_NAME,
	ATTR11_KEY_NAME,ATTR12_KEY_NAME,ATTR13_KEY_NAME,ATTR14_KEY_NAME,ATTR15_KEY_NAME,ATTR16_KEY_NAME,ATTR17_KEY_NAME,ATTR18_KEY_NAME,ATTR19_KEY_NAME,ATTR20_KEY_NAME,
	ATTR21_KEY_NAME,ATTR22_KEY_NAME,ATTR23_KEY_NAME,ATTR24_KEY_NAME,ATTR25_KEY_NAME
		--INTO #FROMSKU
		FROM SKU A (NOLOCK)
		JOIN sku_names C1 (NOLOCK) ON C1.PRODUCT_CODE=A.PRODUCT_CODE
		JOIN ARTICLE ART (NOLOCK) ON ART.article_code=A.article_code
		JOIN #WSLDTSAVE D1 ON D1.PRODUCT_CODE=LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE ))) 
		LEFT OUTER JOIN #LOCSP Z ON Z.PRODUCT_CODE=A.PRODUCT_CODE  AND Z.SR_NO=1
		LEFT JOIN sku_xfp sx (NOLOCK) ON sx.product_code=a.product_code AND sx.dept_id=@GLOCATION  
		WHERE ISNULL(A.EXPIRY_DT,'')>=(CASE WHEN ISNULL(ART.PERISHABLE,0)=1 THEN @dtCMDT  ELSE '' END)

		--INSERT INTO  #FROMSKU (NegativeStk, BASE_PRODUCT_CODE ,BATCH_NO,
		--product_code  ,DEPT_ID  ,BIN_ID  ,MRP ,FIX_MRP,
		--HSN_CODE,article_code  ,para1_code  ,para2_code  ,para3_code  ,para4_code  ,para5_code  ,para6_code  ,para7_code  
		--,SECTION_NAME  ,SUB_SECTION_NAME  ,article_no  ,para1_name  ,para2_name  ,para3_name  ,para4_name  ,para5_name  ,para6_name  ,para7_name  
		--,BIN_NAME  ,PURCHASE_BILL_NO  ,PURCHASE_BILL_DT ,purchase_receipt_Dt ,purchase_challan_no,selling_days ,CHALLAN_RECEIPT_DT ,EXPIRY_DT,quantity_in_stock ) 
		--SELECT NegativeStk, BASE_PRODUCT_CODE ,BATCH_NO ,
		--product_code  ,DEPT_ID  ,BIN_ID  ,MRP ,FIX_MRP ,
		--HSN_CODE,article_code  ,para1_code  ,para2_code  ,para3_code  ,para4_code  ,para5_code  ,para6_code  ,para7_code  
		--,SECTION_NAME  ,SUB_SECTION_NAME  ,article_no  ,para1_name  ,para2_name  ,para3_name  ,para4_name  ,para5_name  ,para6_name  ,para7_name  
		--,BIN_NAME  ,PURCHASE_BILL_NO  ,PURCHASE_BILL_DT ,purchase_receipt_Dt ,purchase_challan_no,selling_days ,CHALLAN_RECEIPT_DT ,EXPIRY_DT,quantity_in_stock 
		--FROM #FROMSKU


		PRINT '60 : '+CONVERT(VARCHAR,GETDATE(),114)

		;WITH BATCHNO
		AS
		(
			SELECT product_code, BATCH_NO=ROW_NUMBER() OVER(PARTITION BY BASE_PRODUCT_CODE,PRODUCT_CODE ORDER BY BASE_PRODUCT_CODE,PRODUCT_CODE)	
			FROM #FROMSKU WHERE ISNUMERIC(BATCH_NO)=0
		)
		UPDATE A SET A.BATCH_NO=B.BATCH_NO
		FROM #FROMSKU A
		JOIN BATCHNO B ON B.product_code=A.product_code
          PRINT '70 : '+CONVERT(VARCHAR,GETDATE(),114)
		--UPDATE @FROMSKU SET SRNO= (ROW_NUMBER() OVER (PARTITION BY BASE_PRODUCT_CODE 	ORDER BY CAST(BATCH_NO AS NUMERIC(10)) desc)) +999

		;WITH SRNO
		AS
		(
			SELECT product_code, SR_NO=ROW_NUMBER() OVER(PARTITION BY BASE_PRODUCT_CODE ORDER BY BASE_PRODUCT_CODE,CAST(BATCH_NO AS NUMERIC(10)) desc)	+999
			FROM #FROMSKU 
		)
		UPDATE A SET A.SRNO=B.SR_NO
		FROM #FROMSKU A
		JOIN SRNO B ON B.product_code=A.product_code
	PRINT '80 : '+CONVERT(VARCHAR,GETDATE(),114)

	--UPDATE @FROMSKU SET SR_NO+=999			  
	END

	--SELECT * FROM @STK
	INSERT INTO  #FINALDATA (NegativeStk,SRNO, BASE_PRODUCT_CODE ,
	BATCH_NO ,product_code  ,DEPT_ID  ,BIN_ID  ,MRP ,FIX_MRP ,HSN_CODE  
	,article_code  ,para1_code  ,para2_code  ,para3_code  ,para4_code  ,para5_code  ,para6_code  ,para7_code  
	,SECTION_NAME  ,SUB_SECTION_NAME  ,article_no  ,para1_name  ,para2_name  ,para3_name  ,para4_name  ,para5_name  ,para6_name  ,para7_name  
	,BIN_NAME  ,PURCHASE_BILL_NO  ,PURCHASE_BILL_DT ,purchase_receipt_Dt ,purchase_challan_no,selling_days ,CHALLAN_RECEIPT_DT ,EXPIRY_DT,
	quantity_in_stock,allocatedQty
	,ac_name,ATTR1_KEY_NAME,ATTR2_KEY_NAME,ATTR3_KEY_NAME,ATTR4_KEY_NAME,ATTR5_KEY_NAME,ATTR6_KEY_NAME,ATTR7_KEY_NAME,ATTR8_KEY_NAME,ATTR9_KEY_NAME,ATTR10_KEY_NAME,
	ATTR11_KEY_NAME,ATTR12_KEY_NAME,ATTR13_KEY_NAME,ATTR14_KEY_NAME,ATTR15_KEY_NAME,ATTR16_KEY_NAME,ATTR17_KEY_NAME,ATTR18_KEY_NAME,ATTR19_KEY_NAME,ATTR20_KEY_NAME,
	ATTR21_KEY_NAME,ATTR22_KEY_NAME,ATTR23_KEY_NAME,ATTR24_KEY_NAME,ATTR25_KEY_NAME ) 
	SELECT CAST(0 AS BIT) AS NegativeStk,(ROW_NUMBER() OVER (ORDER BY STK.BASE_PRODUCT_CODE,CAST(STK.BATCH_NO as numeric(10))))  AS  SRNO,STK.BASE_PRODUCT_CODE,
	CAST( STK.BATCH_NO as numeric(10)) AS BATCH_NO,STK.product_code,STK.DEPT_ID,STK.BIN_ID,STK.MRP,STK.FIX_MRP,STK.HSN_CODE,
	STK.article_code,STK.para1_code,STK.para2_code,STK.para3_code,STK.para4_code,STK.para5_code,STK.para6_code,STK.para7_code
	,STK.section_name,STK.sub_section_name,STK.article_no,STK.para1_name,STK.para2_name,STK.para3_name,STK.para4_name,STK.para5_name,STK.para6_name,STK.para7_name
	,STK.BIN_NAME,STK.PURCHASE_BILL_NO,STK.PURCHASE_BILL_DT,STK.purchase_receipt_Dt,STK.purchase_challan_no,STK.selling_days  ,STK.CHALLAN_RECEIPT_DT,STK.EXPIRY_DT
	,SUM(STK.quantity_in_stock) AS quantity_in_stock,cast(0 as NUMERIC(14,3)) AS allocatedQty
	,STK.ac_name,STK.ATTR1_KEY_NAME,STK.ATTR2_KEY_NAME,STK.ATTR3_KEY_NAME,STK.ATTR4_KEY_NAME,STK.ATTR5_KEY_NAME,STK.ATTR6_KEY_NAME,STK.ATTR7_KEY_NAME,STK.ATTR8_KEY_NAME,STK.ATTR9_KEY_NAME,STK.ATTR10_KEY_NAME,STK.
	ATTR11_KEY_NAME,STK.ATTR12_KEY_NAME,STK.ATTR13_KEY_NAME,STK.ATTR14_KEY_NAME,STK.ATTR15_KEY_NAME,STK.ATTR16_KEY_NAME,STK.ATTR17_KEY_NAME,STK.ATTR18_KEY_NAME,STK.ATTR19_KEY_NAME,STK.ATTR20_KEY_NAME,STK.
	ATTR21_KEY_NAME,STK.ATTR22_KEY_NAME,STK.ATTR23_KEY_NAME,STK.ATTR24_KEY_NAME,STK.ATTR25_KEY_NAME
	FROM #STK STK 
	LEFT OUTER JOIN #FROMSKU S ON S.product_code=STK.product_code and S.BIN_ID=STK.BIN_ID AND S.SRNO=1000
	WHERE S.product_code IS NULL
	GROUP BY STK.BASE_PRODUCT_CODE,STK.BATCH_NO,STK.product_code,STK.DEPT_ID,STK.BIN_ID,STK.MRP,STK.FIX_MRP,STK.HSN_CODE ,STK.article_code,STK.para1_code,STK.para2_code,STK.para3_code,STK.para4_code,STK.para5_code,STK.para6_code,STK.para7_code
	,STK.section_name,STK.sub_section_name,STK.article_no,STK.para1_name,STK.para2_name,STK.para3_name,STK.para4_name,STK.para5_name,STK.para6_name,STK.para7_name,STK.BIN_NAME 
	,STK.PURCHASE_BILL_NO,STK.PURCHASE_BILL_DT,STK.purchase_receipt_Dt,STK.purchase_challan_no,STK.selling_days,STK.CHALLAN_RECEIPT_DT ,STK.EXPIRY_DT  
	,STK.ac_name,STK.ATTR1_KEY_NAME,STK.ATTR2_KEY_NAME,STK.ATTR3_KEY_NAME,STK.ATTR4_KEY_NAME,STK.ATTR5_KEY_NAME,STK.ATTR6_KEY_NAME,STK.ATTR7_KEY_NAME,STK.ATTR8_KEY_NAME,STK.ATTR9_KEY_NAME,STK.ATTR10_KEY_NAME,STK.
	ATTR11_KEY_NAME,STK.ATTR12_KEY_NAME,STK.ATTR13_KEY_NAME,STK.ATTR14_KEY_NAME,STK.ATTR15_KEY_NAME,STK.ATTR16_KEY_NAME,STK.ATTR17_KEY_NAME,STK.ATTR18_KEY_NAME,STK.ATTR19_KEY_NAME,STK.ATTR20_KEY_NAME,STK.
	ATTR21_KEY_NAME,STK.ATTR22_KEY_NAME,STK.ATTR23_KEY_NAME,STK.ATTR24_KEY_NAME,STK.ATTR25_KEY_NAME
	PRINT '90 : '+CONVERT(VARCHAR,GETDATE(),114)

	INSERT INTO  #FINALDATA (NegativeStk,SRNO, BASE_PRODUCT_CODE ,BATCH_NO ,product_code ,DEPT_ID  ,BIN_ID  ,MRP ,FIX_MRP ,HSN_CODE  
	,article_code  ,para1_code  ,para2_code  ,para3_code  ,para4_code  ,para5_code  ,para6_code  ,para7_code  
	,SECTION_NAME  ,SUB_SECTION_NAME  ,article_no  ,para1_name  ,para2_name  ,para3_name  ,para4_name  ,para5_name  ,para6_name  ,para7_name  
	,BIN_NAME  ,PURCHASE_BILL_NO  ,PURCHASE_BILL_DT ,purchase_receipt_Dt ,purchase_challan_no,selling_days ,CHALLAN_RECEIPT_DT ,EXPIRY_DT,
	quantity_in_stock ,allocatedQty 
	,ac_name,ATTR1_KEY_NAME,ATTR2_KEY_NAME,ATTR3_KEY_NAME,ATTR4_KEY_NAME,ATTR5_KEY_NAME,ATTR6_KEY_NAME,ATTR7_KEY_NAME,ATTR8_KEY_NAME,ATTR9_KEY_NAME,ATTR10_KEY_NAME,
	ATTR11_KEY_NAME,ATTR12_KEY_NAME,ATTR13_KEY_NAME,ATTR14_KEY_NAME,ATTR15_KEY_NAME,ATTR16_KEY_NAME,ATTR17_KEY_NAME,ATTR18_KEY_NAME,ATTR19_KEY_NAME,ATTR20_KEY_NAME,
	ATTR21_KEY_NAME,ATTR22_KEY_NAME,ATTR23_KEY_NAME,ATTR24_KEY_NAME,ATTR25_KEY_NAME) 
	SELECT NegativeStk,SRNO,BASE_PRODUCT_CODE,CAST(BATCH_NO as numeric(10)) AS BATCH_NO,product_code,DEPT_ID,BIN_ID,MRP,FIX_MRP,HSN_CODE
	,article_code,para1_code,para2_code,para3_code,para4_code,para5_code,para6_code,para7_code
	,section_name,sub_section_name,article_no,para1_name,para2_name,para3_name,para4_name,para5_name,para6_name,para7_name
	,BIN_NAME,PURCHASE_BILL_NO,PURCHASE_BILL_DT,purchase_receipt_Dt,purchase_challan_no,selling_days  ,CHALLAN_RECEIPT_DT,EXPIRY_DT,
	quantity_in_stock,cast(0 as NUMERIC(14,3)) AS allocatedQty
	,ac_name,ATTR1_KEY_NAME,ATTR2_KEY_NAME,ATTR3_KEY_NAME,ATTR4_KEY_NAME,ATTR5_KEY_NAME,ATTR6_KEY_NAME,ATTR7_KEY_NAME,ATTR8_KEY_NAME,ATTR9_KEY_NAME,ATTR10_KEY_NAME,
	ATTR11_KEY_NAME,ATTR12_KEY_NAME,ATTR13_KEY_NAME,ATTR14_KEY_NAME,ATTR15_KEY_NAME,ATTR16_KEY_NAME,ATTR17_KEY_NAME,ATTR18_KEY_NAME,ATTR19_KEY_NAME,ATTR20_KEY_NAME,
	ATTR21_KEY_NAME,ATTR22_KEY_NAME,ATTR23_KEY_NAME,ATTR24_KEY_NAME,ATTR25_KEY_NAME
	FROM #FROMSKU
	WHERE SRNO=1000
	PRINT '100 : '+CONVERT(VARCHAR,GETDATE(),114)
END
SELECT * FROM #FINALDATA ORDER BY 1,2,3
PRINT '110 : '+CONVERT(VARCHAR,GETDATE(),114)
END