CREATE PROCEDURE SP3S_MERGE_ALL_INV_MASTERS
(
@NMODE INT,
@PATH NVARCHAR(MAX),  --- 1-ARTICLE 2 - SKU
@CDEPT_ID VARCHAR(5)=''
)
AS
BEGIN
    
         DECLARE @CSTEP INT ,@CCMD NVARCHAR(MAX),@CERRMSG VARCHAR(MAX),@CDATABSENAME NVARCHAR(MAX),
         @CDATAFILENAME NVARCHAR(MAX),@HOLOCATIONID VARCHAR(5),@CLOCTYPE INT,@UPD_PURINFO BIT
         
 BEGIN TRY
 
              SET @HOLOCATIONID=''
              SET @CLOCTYPE=''
              SET @UPD_PURINFO=''
              SELECT @HOLOCATIONID=ISNULL(VALUE,'') FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'
              SELECT @CLOCTYPE=ISNULL(LOC_TYPE,0),@UPD_PURINFO=ISNULL(UPD_PURINFO,0) FROM LOCATION WHERE DEPT_ID=@CDEPT_ID
              
            --  SELECT @CLOCTYPE,@UPD_PURINFO
 
 
              IF @NMODE=2 
                 SET @CDATABSENAME='INV_MST'
   
                 

              SET @CCMD=N' IF EXISTS(SELECT * FROM SYS.DATABASES WHERE NAME='''+@CDATABSENAME+''')
			   BEGIN 
				ALTER DATABASE ['+@CDATABSENAME+'] SET  SINGLE_USER WITH ROLLBACK IMMEDIATE
				DROP DATABASE '+@CDATABSENAME+'
			   END'
			   PRINT @CCMD
			   EXEC SP_EXECUTESQL @CCMD    

        
                SET @CCMD=N'RESTORE DATABASE ['+@CDATABSENAME+']  FROM DISK='''+@PATH+'\'+@CDATABSENAME+'.BAK''
                           WITH MOVE '''+@CDATABSENAME+''' TO '''+@PATH+'\'+@CDATABSENAME+'.MDF'',
                           MOVE '''+@CDATABSENAME+'_LOG'' TO '''+@PATH+'\'+@CDATABSENAME+'.LDF'' '
              PRINT @CCMD
              EXEC SP_EXECUTESQL @CCMD
          
          
     
 BEGIN TRAN  
      
      IF @NMODE=2   ----- INV_MST
      BEGIN
      
				SET @CSTEP=10--UPDATE PARA1
				SET @CCMD=N' UPDATE A1 SET PARA1_NAME = A2.PARA1_NAME, ALIAS = ISNULL(A2.ALIAS,''''),
				INACTIVE = A2.INACTIVE,PARA1_ORDER=ISNULL(A2.PARA1_ORDER,0),PARA1_SET=ISNULL(A2.PARA1_SET,''''),
				REMARKS=ISNULL(A2.REMARKS,''''),LAST_UPDATE=GETDATE()                      
				FROM PARA1 A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..PARA1 A2 (NOLOCK) ON A1.PARA1_CODE = A2.PARA1_CODE'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=20--INSERT PARA1
				SET @CCMD=N'INSERT PARA1( PARA1_CODE, PARA1_NAME, LAST_UPDATE, ALIAS, INACTIVE, PARA1_ORDER, PARA1_SET, REMARKS )  
				SELECT DISTINCT A.PARA1_CODE,A.PARA1_NAME, GETDATE() ,ISNULL(A.ALIAS,''''),A.INACTIVE, ISNULL(A.PARA1_ORDER,0), 
				ISNULL(A.PARA1_SET,''''), ISNULL(A.REMARKS,'''')
				FROM  '+@CDATABSENAME+'..PARA1 A(NOLOCK) LEFT JOIN PARA1 B(NOLOCK) ON A.PARA1_CODE = B.PARA1_CODE 
				WHERE B.PARA1_CODE IS NULL'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=30 --UPDATE PARA2
				SET @CCMD=N' UPDATE A1 SET PARA2_NAME = A2.PARA2_NAME,ALIAS = ISNULL(A2.ALIAS,''''),
				INACTIVE = A2.INACTIVE,PARA2_ORDER=ISNULL(A2.PARA2_ORDER,0),
				PARA2_SET=ISNULL(A2.PARA2_SET,''''),REMARKS=ISNULL(A2.REMARKS,''''),LAST_UPDATE=GETDATE()
				FROM PARA2 A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..PARA2 A2(NOLOCK) ON A1.PARA2_CODE = A2.PARA2_CODE' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=40 -- INSERT PARA2
				SET @CCMD=N'INSERT PARA2 WITH (ROWLOCK) ( LAST_UPDATE,ALIAS,INACTIVE,PARA2_ORDER,PARA2_SET,PARA2_CODE,PARA2_NAME,REMARKS )  
				SELECT DISTINCT GETDATE(),ISNULL(A.ALIAS,''''),A.INACTIVE,ISNULL(A.PARA2_ORDER,0),ISNULL(A.PARA2_SET,''''),
				A.PARA2_CODE,A.PARA2_NAME,ISNULL(A.REMARKS,'''')
				FROM '+@CDATABSENAME+'..PARA2 A(NOLOCK) LEFT JOIN PARA2 B(NOLOCK) ON A.PARA2_CODE = B.PARA2_CODE 
				WHERE B.PARA2_CODE IS NULL '  
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=50 --UPDATE PARA3
				SET @CCMD=N' UPDATE A1 SET A1.PARA3_NAME = A2.PARA3_NAME,A1.ALIAS = ISNULL(A2.ALIAS,''''),A1.INACTIVE = A2.INACTIVE,
				LAST_UPDATE=GETDATE(),DT_CREATED=ISNULL(A2.DT_CREATED,''''),REMARKS=ISNULL(A2.REMARKS,'''')
				FROM PARA3 A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..PARA3 A2(NOLOCK) ON A1.PARA3_CODE = A2.PARA3_CODE' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=60 -- INSERT PARA3
				SET @CCMD=N'INSERT PARA3(PARA3_CODE, PARA3_NAME, LAST_UPDATE, ALIAS, INACTIVE, REMARKS,DT_CREATED)
				SELECT DISTINCT A.PARA3_CODE, A.PARA3_NAME, GETDATE() AS LAST_UPDATE,ISNULL(A.ALIAS,''''),A.INACTIVE, 
				ISNULL(A.REMARKS,''''),ISNULL(A.DT_CREATED,'''')
				FROM '+@CDATABSENAME+'..PARA3 A(NOLOCK) LEFT JOIN PARA3 B(NOLOCK) ON A.PARA3_CODE = B.PARA3_CODE 
				WHERE B.PARA3_CODE IS NULL' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=70 --UPDATE PARA4
				SET @CCMD=N' UPDATE A1 SET A1.PARA4_NAME = A2.PARA4_NAME, A1.ALIAS = ISNULL(A2.ALIAS,''''),
				A1.INACTIVE = A2.INACTIVE,LAST_UPDATE=GETDATE(),REMARKS=ISNULL(A2.REMARKS,'''')
				FROM PARA4 A1 WITH (ROWLOCK)JOIN '+@CDATABSENAME+'..PARA4 A2 (NOLOCK) ON A1.PARA4_CODE = A2.PARA4_CODE' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=80 -- INSERT PARA4
				SET @CCMD=N' INSERT PARA4( PARA4_CODE, PARA4_NAME, LAST_UPDATE, ALIAS, INACTIVE, REMARKS) 
				SELECT DISTINCT A.PARA4_CODE,A.PARA4_NAME, GETDATE(),ISNULL(A.ALIAS,''''), A.INACTIVE,ISNULL(A.REMARKS,'''')
				FROM '+@CDATABSENAME+'..PARA4 A(NOLOCK) LEFT JOIN PARA4 B(NOLOCK) ON A.PARA4_CODE = B.PARA4_CODE 
				WHERE B.PARA4_CODE IS NULL' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD

				SET @CSTEP=90 --UPDATE PARA5
				SET @CCMD=N' UPDATE A1
				SET PARA5_NAME = A2.PARA5_NAME,ALIAS = ISNULL(A2.ALIAS,''''),INACTIVE = A2.INACTIVE,
				LAST_UPDATE=GETDATE(),REMARKS=ISNULL(A2.REMARKS,'''')
				FROM PARA5 A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..PARA5 A2 (NOLOCK) ON A1.PARA5_CODE = A2.PARA5_CODE' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=100 -- INSERT PARA5
				SET @CCMD=N' INSERT PARA5( ALIAS, INACTIVE, PARA5_CODE, PARA5_NAME, LAST_UPDATE, REMARKS)
				SELECT DISTINCT ISNULL(A.ALIAS,''''),A.INACTIVE,A.PARA5_CODE,A.PARA5_NAME, GETDATE() ,ISNULL(A.REMARKS,'''')
				FROM '+@CDATABSENAME+'..PARA5 A(NOLOCK) LEFT JOIN PARA5 B(NOLOCK) ON A.PARA5_CODE = B.PARA5_CODE 
				WHERE B.PARA5_CODE IS NULL' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=110 --UPDATE PARA6
				SET @CCMD=N' UPDATE A1 SET A1.PARA6_NAME = A2.PARA6_NAME,A1.ALIAS = ISNULL(A2.ALIAS,''''),A1.INACTIVE = A2.INACTIVE,
				LAST_UPDATE=GETDATE(),REMARKS=ISNULL(A2.REMARKS,'''')
				FROM PARA6 A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..PARA6 A2 (NOLOCK) ON A1.PARA6_CODE = A2.PARA6_CODE' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=120 --- INSERT PARA6
				SET @CCMD=N'INSERT PARA6( PARA6_CODE, PARA6_NAME, LAST_UPDATE, ALIAS, INACTIVE, REMARKS)  
				SELECT DISTINCT A.PARA6_CODE, A.PARA6_NAME, GETDATE(),ISNULL(A.ALIAS,''''),A.INACTIVE,ISNULL(A.REMARKS,'''')
				FROM '+@CDATABSENAME+'..PARA6 A(NOLOCK) LEFT JOIN PARA6 B(NOLOCK) ON A.PARA6_CODE = B.PARA6_CODE 
				WHERE B.PARA6_CODE IS NULL' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=130 --UPDATE HSN
				SET @CCMD=N' UPDATE A1 SET TAXABLE_ITEM=A2.TAXABLE_ITEM,HSN_TYPE=A2.HSN_TYPE 
				FROM HSN_MST A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..HSN_MST A2 (NOLOCK) ON A1.HSN_CODE = A2.HSN_CODE' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD



				SET @CSTEP=140 --INSERT HSN
				SET @CCMD=N'INSERT HSN_MST	(HSN_CODE,TAXABLE_ITEM, HSN_TYPE ) 
				SELECT DISTINCT A.HSN_CODE,A.TAXABLE_ITEM, ISNULL(A.HSN_TYPE,0) FROM '+@CDATABSENAME+'..HSN_MST A(NOLOCK) 
				LEFT JOIN HSN_MST B (NOLOCK) ON A.HSN_CODE=B.HSN_CODE
				WHERE B.HSN_CODE IS NULL'  
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD




				SET @CSTEP=150---DELETE  HSN_DET
				SET @CCMD=N' DELETE A FROM HSN_DET A JOIN '+@CDATABSENAME+'..HSN_DET B(NOLOCK)
				ON A.HSN_CODE=B.HSN_CODE ' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=160 --INSERT HSN_det
				SET @CCMD=N'INSERT HSN_DET(HSN_CODE,TAX_PERCENTAGE,RATE_CUTOFF,RATE_CUTOFF_TAX_PERCENTAGE,WEF,ROW_ID) 
				SELECT DISTINCT A.HSN_CODE,ISNULL(A.TAX_PERCENTAGE,0), ISNULL(A.RATE_CUTOFF,0), ISNULL(A.RATE_CUTOFF_TAX_PERCENTAGE,0),
				A.WEF, A.ROW_ID FROM '+@CDATABSENAME+'..HSN_DET A(NOLOCK) 
				LEFT JOIN HSN_DET B (NOLOCK) ON A.HSN_CODE=B.HSN_CODE
				WHERE B.HSN_CODE IS NULL'  
				PRINT @CCMD 

				EXEC SP_EXECUTESQL @CCMD




				SET @CSTEP=170 -- UPDATE SECTIONM
				SET @CCMD=N' UPDATE A1 SET SECTION_NAME=A2.SECTION_NAME,ALIAS=A2.ALIAS,INACTIVE=A2.INACTIVE,
				LAST_UPDATE=GETDATE(),REMARKS=ISNULL(A2.REMARKS,''''),TRIAL_DT=ISNULL(A2.TRIAL_DT,''''),
				ITEM_TYPE=ISNULL(A2.ITEM_TYPE,0)
				FROM SECTIONM A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..SECTIONM A2 (NOLOCK) ON A1.SECTION_CODE = A2.SECTION_CODE' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=180 --INSERT SECTIONM
				SET @CCMD=N'INSERT SECTIONM( SECTION_CODE, SECTION_NAME, LAST_UPDATE, ALIAS, INACTIVE, REMARKS ,TRIAL_DT,ITEM_TYPE)  
				SELECT DISTINCT A.SECTION_CODE, A.SECTION_NAME, GETDATE() ,ISNULL(A.ALIAS,''''), A.INACTIVE, ISNULL(A.REMARKS,''''),ISNULL(A.TRIAL_DT,''''),ISNULL(A.ITEM_TYPE,0)
				FROM '+@CDATABSENAME+'..SECTIONM A(NOLOCK)LEFT JOIN SECTIONM B (NOLOCK) ON A.SECTION_CODE=B.SECTION_CODE
				WHERE B.SECTION_CODE IS NULL' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD

				SET @CSTEP=190 --UPDATE SECTIOND
				SET @CCMD=N' UPDATE A1 SET SUB_SECTION_NAME=A2.SUB_SECTION_NAME,ALIAS=ISNULL(A2.ALIAS,''''),INACTIVE=A2.INACTIVE,
				MFG_CATEGORY=ISNULL(A2.MFG_CATEGORY,0),SECTION_CODE=A2.SECTION_CODE,
				LAST_UPDATE=GETDATE(),REMARKS=ISNULL(A2.REMARKS,''''),EXCISABLE=A2.EXCISABLE
				FROM SECTIOND A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..SECTIOND A2 (NOLOCK) 
				ON A1.SUB_SECTION_CODE = A2.SUB_SECTION_CODE' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD



				SET @CSTEP=200 --INSERT SECTIOND
				SET @CCMD=N'INSERT SECTIOND( SUB_SECTION_NAME, LAST_UPDATE, ALIAS, INACTIVE, MFG_CATEGORY, SECTION_CODE, 
				SUB_SECTION_CODE, REMARKS, EXCISABLE)  
				SELECT DISTINCT A.SUB_SECTION_NAME, GETDATE(), ISNULL(A.ALIAS,''''), A.INACTIVE,ISNULL(A.MFG_CATEGORY,0),A.SECTION_CODE, 
				A.SUB_SECTION_CODE, ISNULL(A.REMARKS,''''),  A.EXCISABLE
				FROM '+@CDATABSENAME+'..SECTIOND A(NOLOCK) 
				LEFT JOIN SECTIOND B (NOLOCK) ON A.SUB_SECTION_CODE=B.SUB_SECTION_CODE
				WHERE B.SUB_SECTION_CODE IS NULL' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=210 --UPDATAE UOM(ARTICLE)
				SET @CCMD=N' UPDATE A1 SET UOM_TYPE=A2.UOM_TYPE, INACTIVE=A2.INACTIVE,UOM_NAME=A2.UOM_NAME,
				LAST_UPDATE=GETDATE()
				FROM UOM A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..UOM A2 (NOLOCK) ON A1.UOM_CODE = A2.UOM_CODE' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=220---INSERT UOM(ARTICLE)
				SET @CCMD=N'INSERT UOM	( UOM_TYPE, INACTIVE, UOM_CODE, UOM_NAME, LAST_UPDATE ) 
				SELECT DISTINCT 	A.UOM_TYPE, A.INACTIVE, A.UOM_CODE, A.UOM_NAME, GETDATE()
				FROM '+@CDATABSENAME+'..UOM A(NOLOCK) 
				LEFT JOIN UOM B (NOLOCK) ON A.UOM_CODE=B.UOM_CODE
				WHERE B.UOM_CODE IS NULL' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=230 --UPDATAE JOBS(ART_JOBS)
				SET @CCMD=N' UPDATE A1 SET JOB_RATE_BASIS=A2.JOB_RATE_BASIS, INACTIVE=A2.INACTIVE,JOB_NAME=A2.JOB_NAME,
				PER_DAYS=A2.PER_DAYS,JOBRATE=A2.JOBRATE
				FROM JOBS A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..JOBS A2 (NOLOCK) ON A1.JOB_CODE = A2.JOB_CODE' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD




				SET @CSTEP=240---INSERT JOBS(ART_JOBS)
				SET @CCMD=N'INSERT JOBS	( LAST_UPDATE,JOB_RATE_BASIS, INACTIVE, JOB_CODE, JOB_NAME, COMPANY_CODE,PER_DAYS,JOBRATE ) 
				SELECT DISTINCT 	GETDATE(), A.JOB_RATE_BASIS, A.INACTIVE, A.JOB_CODE, A.JOB_NAME, A.COMPANY_CODE,A.PER_DAYS,A.JOBRATE 
				FROM '+@CDATABSENAME+'..JOBS A(NOLOCK) 
				LEFT JOIN JOBS B (NOLOCK) ON A.JOB_CODE=B.JOB_CODE
				WHERE B.JOB_CODE IS NULL'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD






				SET @CSTEP=250 ---  UPDATE ARTICLE
				SET @CCMD=N' UPDATE A1 SET	A1.PARA2_CODE=A2.PARA2_CODE,A1.PARA3_CODE=A2.PARA3_CODE,A1.PARA4_CODE=A2.PARA4_CODE,
				A1.PARA5_CODE=A2.PARA5_CODE,A1.PARA6_CODE=A2.PARA6_CODE,A1.DISCON=A2.DISCON,
				A1.WHOLESALE_PRICE=A2.WHOLESALE_PRICE,A1.WSP_PERCENTAGE=A2.WSP_PERCENTAGE,
				A1.MIN_PRICE=A2.MIN_PRICE,A1.STOCK_NA=A2.STOCK_NA,A1.ARTICLE_TYPE=A2.ARTICLE_TYPE,
				A1.CREATED_ON=A2.CREATED_ON,A1.ARTICLE_GROUP_CODE=A2.ARTICLE_GROUP_CODE,A1.COMPANY_CODE=A2.COMPANY_CODE,
				A1.GENERATE_BARCODES_WITHARTICLE_PREFIX=A2.GENERATE_BARCODES_WITHARTICLE_PREFIX,
				A1.ARTICLE_GEN_MODE=A2.ARTICLE_GEN_MODE,A1.ARTICLE_PRD_MODE=A2.ARTICLE_PRD_MODE,
				A1.ARTICLE_SET_CODE=A2.ARTICLE_SET_CODE,A1.OH_PERCENTAGE=A2.OH_PERCENTAGE,
				A1.OH_AMOUNT=A2.OH_AMOUNT,A1.FIX_MRP=A2.FIX_MRP,A1.ENABLE_FIXWT_ENTRY=A2.ENABLE_FIXWT_ENTRY,
				A1.FIX_WEIGHT=A2.FIX_WEIGHT,A1.EXP_AMOUNT=A2.EXP_AMOUNT,A1.SUPP_SPECIFIC=A2.SUPP_SPECIFIC,
				A1.SUPP_AC_CODE=A2.SUPP_AC_CODE,A1.SUPP_ITEM_CODE=A2.SUPP_ITEM_CODE,
				A1.REMARKS=A2.REMARKS,A1.FIX_PRICE_ARTICLE=A2.FIX_PRICE_ARTICLE,A1.GROSS_PURCHASE_PRICE=A2.GROSS_PURCHASE_PRICE,
				A1.DISCOUNT_PERCENTAGE=A2.DISCOUNT_PERCENTAGE,A1.DISCOUNT_AMOUNT=A2.DISCOUNT_AMOUNT,
				A1.GEN_EAN_CODES=A2.GEN_EAN_CODES,A1.SIZE_CENTER_POINT=A2.SIZE_CENTER_POINT,
				A1.SIZE_RATE_DIFF=A2.SIZE_RATE_DIFF,A1.MANUAL_DISC=A2.MANUAL_DISC,A1.MANUAL_WSP=A2.MANUAL_WSP,A1.MANUAL_RSP=A2.MANUAL_RSP,
				A1.AREA_WISE_RATE_APPLICABLE=A2.AREA_WISE_RATE_APPLICABLE,A1.ORDERITEM=A2.ORDERITEM,
				A1.BL_ARTICLE_NAME=A2.BL_ARTICLE_NAME,A1.DO_AMOUNT=A2.DO_AMOUNT,
				A1.DO_PERCENTAGE=A2.DO_PERCENTAGE,A1.EXP_PERCENTAGE=A2.EXP_PERCENTAGE,
				A1.LAST_MODIFIED_ON=A2.LAST_MODIFIED_ON,A1.ARTICLE_SET_TYPE=A2.ARTICLE_SET_TYPE,
				A1.STYLE_NO=A2.STYLE_NO,A1.COLOR_NAME=A2.COLOR_NAME,
				A1.COLOR_CODE=A2.COLOR_CODE,A1.SIZE=A2.SIZE,A1.DEBIT_MATERIAL=A2.DEBIT_MATERIAL,A1.CODING_SCHEME=A2.CODING_SCHEME,
				A1.LAST_UPDATE=A2.LAST_UPDATE,A1.UOM_CODE=A2.UOM_CODE,A1.ALIAS=A2.ALIAS,A1.MP_PERCENTAGE=A2.MP_PERCENTAGE,
				A1.PURCHASE_PRICE=A2.PURCHASE_PRICE,A1.MRP=A2.MRP,A1.PARA1_SET=A2.PARA1_SET,
				A1.PARA2_SET=A2.PARA2_SET,A1.INACTIVE=A2.INACTIVE,A1.SKU_CODE=A2.SKU_CODE,A1.DT_CREATED=A2.DT_CREATED,
				A1.USER_CODE=A2.USER_CODE,A1.EDT_USER_CODE=A2.EDT_USER_CODE,A1.ARTICLE_CODE=A2.ARTICLE_CODE,
				A1.ARTICLE_NO=A2.ARTICLE_NO,A1.ARTICLE_NAME=A2.ARTICLE_NAME,A1.ARTICLE_DESC=A2.ARTICLE_DESC,
				A1.SUB_SECTION_CODE=A2.SUB_SECTION_CODE,A1.PARA1_CODE=A2.PARA1_CODE,
				A1.HSN_CODE=ISNULL(A2.HSN_CODE,''0000000000'')
				FROM ARTICLE A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..ARTICLE A2 (NOLOCK) ON A1.ARTICLE_CODE = A2.ARTICLE_CODE' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD

				SET @CSTEP=250 --INSERT ARTICLE
				SET @CCMD=N'INSERT ARTICLE	( PARA2_CODE, PARA3_CODE, PARA4_CODE, PARA5_CODE, PARA6_CODE, DISCON, 
				WHOLESALE_PRICE, WSP_PERCENTAGE, MIN_PRICE, STOCK_NA, ARTICLE_TYPE, CREATED_ON, ARTICLE_GROUP_CODE, 
				COMPANY_CODE, GENERATE_BARCODES_WITHARTICLE_PREFIX, ARTICLE_GEN_MODE, ARTICLE_PRD_MODE,
				ARTICLE_SET_CODE, OH_PERCENTAGE, OH_AMOUNT, FIX_MRP, ENABLE_FIXWT_ENTRY, FIX_WEIGHT, EXP_AMOUNT,
				SUPP_SPECIFIC, SUPP_AC_CODE, SUPP_ITEM_CODE, REMARKS, FIX_PRICE_ARTICLE, GROSS_PURCHASE_PRICE, 
				DISCOUNT_PERCENTAGE, DISCOUNT_AMOUNT, GEN_EAN_CODES, SIZE_CENTER_POINT, SIZE_RATE_DIFF, MANUAL_DISC,
				MANUAL_WSP, MANUAL_RSP, AREA_WISE_RATE_APPLICABLE, ORDERITEM, BL_ARTICLE_NAME, DO_AMOUNT,
				DO_PERCENTAGE, EXP_PERCENTAGE, LAST_MODIFIED_ON, ARTICLE_SET_TYPE, STYLE_NO, COLOR_NAME,
				COLOR_CODE, SIZE, DEBIT_MATERIAL, CODING_SCHEME, LAST_UPDATE, UOM_CODE, ALIAS, MP_PERCENTAGE,
				PURCHASE_PRICE, MRP, PARA1_SET, PARA2_SET, INACTIVE, SKU_CODE, DT_CREATED, USER_CODE,
				EDT_USER_CODE, ARTICLE_CODE, ARTICLE_NO, ARTICLE_NAME, ARTICLE_DESC, SUB_SECTION_CODE,PARA1_CODE,HSN_CODE ) 

				SELECT DISTINCT A.PARA2_CODE,A.PARA3_CODE,A.PARA4_CODE,A.PARA5_CODE,A.PARA6_CODE,A.DISCON,A.WHOLESALE_PRICE,
				A.WSP_PERCENTAGE,A.MIN_PRICE,A.STOCK_NA,A.ARTICLE_TYPE,A.CREATED_ON,A.ARTICLE_GROUP_CODE,
				A.COMPANY_CODE,A.GENERATE_BARCODES_WITHARTICLE_PREFIX,A.ARTICLE_GEN_MODE,A.ARTICLE_PRD_MODE,
				A.ARTICLE_SET_CODE,A.OH_PERCENTAGE,A.OH_AMOUNT,A.FIX_MRP,A.ENABLE_FIXWT_ENTRY,A.FIX_WEIGHT,
				A.EXP_AMOUNT,A.SUPP_SPECIFIC,A.SUPP_AC_CODE,A.SUPP_ITEM_CODE,A.REMARKS,A.FIX_PRICE_ARTICLE,
				A.GROSS_PURCHASE_PRICE,A.DISCOUNT_PERCENTAGE,A.DISCOUNT_AMOUNT,A.GEN_EAN_CODES,A.SIZE_CENTER_POINT,
				A.SIZE_RATE_DIFF,A.MANUAL_DISC,A.MANUAL_WSP,A.MANUAL_RSP,A.AREA_WISE_RATE_APPLICABLE,
				A.ORDERITEM,A.BL_ARTICLE_NAME,A.DO_AMOUNT,A.DO_PERCENTAGE,A.EXP_PERCENTAGE,A.LAST_MODIFIED_ON,
				A.ARTICLE_SET_TYPE,A.STYLE_NO,A.COLOR_NAME,A.COLOR_CODE,A.SIZE,A.DEBIT_MATERIAL,A.CODING_SCHEME,
				A.LAST_UPDATE,A.UOM_CODE,A.ALIAS,A.MP_PERCENTAGE,A.PURCHASE_PRICE,A.MRP,A.PARA1_SET,A.PARA2_SET,
				A.INACTIVE,A.SKU_CODE,A.DT_CREATED,A.USER_CODE,A.EDT_USER_CODE,A.ARTICLE_CODE,A.ARTICLE_NO,
				A.ARTICLE_NAME,A.ARTICLE_DESC,A.SUB_SECTION_CODE,A.PARA1_CODE,ISNULL(A.HSN_CODE,''0000000000'')
				FROM '+@CDATABSENAME+'..ARTICLE A(NOLOCK) 
				LEFT JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE=B.ARTICLE_CODE
				WHERE B.ARTICLE_CODE IS NULL' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				IF ( @CLOCTYPE=2 OR @UPD_PURINFO=0 )
				BEGIN

				SET @CSTEP=225 ---  UPDATE ARTICLE
				SET @CCMD=N' UPDATE A1 SET	A1.PURCHASE_PRICE=0
				FROM ARTICLE A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..ARTICLE A2 (NOLOCK) 
				ON A1.ARTICLE_CODE = A2.ARTICLE_CODE' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				END



				SET @CSTEP=260---DELETE  ART_PARA1(ARTICLE)
				SET @CCMD=N' DELETE A  FROM ART_PARA1 A JOIN '+@CDATABSENAME+'..ART_PARA1 B(NOLOCK)ON A.ARTICLE_CODE=B.ARTICLE_CODE ' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD



				SET @CSTEP=270 --- INSERT ART_PARA1
				SET @CCMD=N'INSERT ART_PARA1	( LAST_UPDATE, ARTICLE_CODE, PARA1_CODE, ROW_ID, PARA1_DESC )   
				SELECT DISTINCT GETDATE(),A.ARTICLE_CODE,A.PARA1_CODE,NEWID(),ISNULL(A.PARA1_DESC,'''')
				FROM '+@CDATABSENAME+'..ART_PARA1 A(NOLOCK) LEFT JOIN ART_PARA1 B(NOLOCK) 
				ON A.ARTICLE_CODE = B.ARTICLE_CODE 
				WHERE B.ARTICLE_CODE IS NULL'  
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=280---DELETE  ART_DET(ARTICLE)
				SET @CCMD=N' DELETE A FROM ART_DET A JOIN '+@CDATABSENAME+'..ART_DET B(NOLOCK)ON A.ARTICLE_CODE=B.ARTICLE_CODE ' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=290 --- INSERT ART_DET
				SET @CCMD=N'INSERT ART_DET( ARTICLE_CODE, PARA2_CODE, MRP, ROW_ID, LAST_UPDATE, WS_PRICE, 
				COMPANY_CODE, MRP_INC_AMT, MRP2, PARA1_CODE, PARA2_RATIO, PURCHASE_PRICE, CENTER_POINT, SIZEGROUP_CODE )  
				SELECT DISTINCT A.ARTICLE_CODE,A.PARA2_CODE, A.MRP, NEWID() ,GETDATE(), ISNULL(A.WS_PRICE,0),''01'', 
				ISNULL(A.MRP_INC_AMT,0), ISNULL(A.MRP2,0), ISNULL(A.PARA1_CODE,''0000000''), 
				ISNULL(A.PARA2_RATIO,0), ISNULL(A.PURCHASE_PRICE,0), 
				A.CENTER_POINT, ISNULL(A.SIZEGROUP_CODE,'''') 
				FROM '+@CDATABSENAME+'..ART_DET A(NOLOCK) 
				LEFT JOIN ART_DET B(NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE 
				WHERE B.ARTICLE_CODE IS NULL ' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=300---DELETE  ART_BOM(ARTICLE)
				SET @CCMD=N' DELETE A FROM ART_BOM A JOIN '+@CDATABSENAME+'..ART_BOM B(NOLOCK) ON A.ARTICLE_CODE=B.ARTICLE_CODE ' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=310 --- INSERT ART_BOM
				SET @CCMD=N'INSERT ART_BOM( ARTICLE_CODE, BOM_ARTICLE_CODE, AVG_QTY, ROW_ID, LAST_UPDATE, COMPANY_CODE, 
				RATE, BOM_PARA1_CODE, USES, BOM_PARA2_CODE, ADD_AVG_QTY )  
				SELECT DISTINCT A.ARTICLE_CODE, A.BOM_ARTICLE_CODE,A.AVG_QTY,A.ROW_ID,GETDATE(),A.COMPANY_CODE,
				A.RATE,A.bom_para1_code,ISNULL(A.USES,''''),A.BOM_PARA2_CODE,A.ADD_AVG_QTY
				FROM '+@CDATABSENAME+'..ART_BOM A(NOLOCK) LEFT JOIN ART_BOM B(NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE 
				WHERE B.ARTICLE_CODE IS NULL '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=320---DELETE  ART_JOBS
				SET @CCMD=N' DELETE A FROM ART_JOBS A JOIN '+@CDATABSENAME+'..ART_JOBS  B(NOLOCK)
				ON A.ARTICLE_CODE=B.ARTICLE_CODE' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=330 --- INSERT ART_JOBS
				SET @CCMD=N'INSERT ART_JOBS( JOB_REMARKS, ROW_ID, LAST_UPDATE, COMPANY_CODE, JOB_CODE, JOB_RATE, 
				DAYS, HOURS, DEFAULT_BASIS, JOB_RATE_PCS,JOB_RATE_DAYS,JOB_RATE_HOURS ,ARTICLE_CODE,JOB_ORDER)  
				SELECT DISTINCT A.JOB_REMARKS, A.ROW_ID,GETDATE(),A.COMPANY_CODE,A.JOB_CODE,A.JOB_RATE,
				A.DAYS,A.HOURS,A.DEFAULT_BASIS,A.JOB_RATE_PCS,A.JOB_RATE_DAYS,A.JOB_RATE_HOURS,
				A.ARTICLE_CODE,A.JOB_ORDER
				FROM '+@CDATABSENAME+'..ART_JOBS  A(NOLOCK) LEFT JOIN ART_JOBS B(NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE 
				WHERE B.ARTICLE_CODE IS NULL'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=340 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR1_KEY_NAME   = A2.ATTR1_KEY_NAME,
				ATTR1_ALIAS    = A2.ATTR1_ALIAS,
				ATTR1_INACTIVE = A2.ATTR1_INACTIVE
				FROM ATTR1_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR1_MST A2 (NOLOCK) ON A1.ATTR1_KEY_CODE = A2.ATTR1_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=350 --INSERT ATTR1_MST
				SET @CCMD=N'INSERT ATTR1_MST	( ATTR1_KEY_CODE, ATTR1_KEY_NAME, ATTR1_ALIAS, ATTR1_INACTIVE )  
				SELECT 	DISTINCT  A.ATTR1_KEY_CODE, A.ATTR1_KEY_NAME, A.ATTR1_ALIAS, A.ATTR1_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR1_MST A(NOLOCK)
				LEFT JOIN ATTR1_MST B (NOLOCK) ON A.ATTR1_KEY_CODE=B.ATTR1_KEY_CODE
				WHERE B.ATTR1_KEY_CODE IS NULL' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD




				SET @CSTEP=360 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR2_KEY_NAME=A2.ATTR2_KEY_NAME,
				ATTR2_ALIAS   =A2.ATTR2_ALIAS,
				ATTR2_INACTIVE=A2.ATTR2_INACTIVE
				FROM ATTR2_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR2_MST A2 (NOLOCK) ON A1.ATTR2_KEY_CODE = A2.ATTR2_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD



				SET @CSTEP=370 --INSERT ATTR2_MST
				SET @CCMD=N'INSERT ATTR2_MST	( ATTR2_KEY_CODE, ATTR2_KEY_NAME, ATTR2_ALIAS, ATTR2_INACTIVE )  
				SELECT DISTINCT	  A.ATTR2_KEY_CODE, A.ATTR2_KEY_NAME, A.ATTR2_ALIAS, A.ATTR2_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR2_MST A(NOLOCK)
				LEFT JOIN ATTR2_MST B (NOLOCK) ON A.ATTR2_KEY_CODE=B.ATTR2_KEY_CODE
				WHERE B.ATTR2_KEY_CODE IS NULL' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD




				SET @CSTEP=380 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR3_KEY_NAME=A2.ATTR3_KEY_NAME,
				ATTR3_ALIAS   =A2.ATTR3_ALIAS,
				ATTR3_INACTIVE=A2.ATTR3_INACTIVE
				FROM ATTR3_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR3_MST A2 (NOLOCK) ON A1.ATTR3_KEY_CODE = A2.ATTR3_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD



				SET @CSTEP=390 --INSERT ATTR3_MST
				SET @CCMD=N'INSERT ATTR3_MST	( ATTR3_KEY_CODE, ATTR3_KEY_NAME, ATTR3_ALIAS, ATTR3_INACTIVE )  
				SELECT DISTINCT	  A.ATTR3_KEY_CODE, A.ATTR3_KEY_NAME, A.ATTR3_ALIAS, A.ATTR3_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR3_MST A(NOLOCK)
				LEFT JOIN ATTR3_MST B (NOLOCK) ON A.ATTR3_KEY_CODE=B.ATTR3_KEY_CODE
				WHERE B.ATTR3_KEY_CODE IS NULL ' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD




				SET @CSTEP=400 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR4_KEY_NAME=A2.ATTR4_KEY_NAME,
				ATTR4_ALIAS   =A2.ATTR4_ALIAS,
				ATTR4_INACTIVE=A2.ATTR4_INACTIVE
				FROM ATTR4_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR4_MST A2 (NOLOCK) ON A1.ATTR4_KEY_CODE = A2.ATTR4_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD



				SET @CSTEP=410 --INSERT ATTR4_MST
				SET @CCMD=N'INSERT ATTR4_MST	( ATTR4_KEY_CODE, ATTR4_KEY_NAME, ATTR4_ALIAS, ATTR4_INACTIVE )  
				SELECT DISTINCT	  A.ATTR4_KEY_CODE, A.ATTR4_KEY_NAME, A.ATTR4_ALIAS, A.ATTR4_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR4_MST A(NOLOCK)
				LEFT JOIN ATTR4_MST B (NOLOCK) ON A.ATTR4_KEY_CODE=B.ATTR4_KEY_CODE
				WHERE B.ATTR4_KEY_CODE IS NULL ' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD




				SET @CSTEP=420 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR5_KEY_NAME=A2.ATTR5_KEY_NAME,
				ATTR5_ALIAS   =A2.ATTR5_ALIAS,
				ATTR5_INACTIVE=A2.ATTR5_INACTIVE
				FROM ATTR5_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR5_MST A2 (NOLOCK) ON A1.ATTR5_KEY_CODE = A2.ATTR5_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD



				SET @CSTEP=430 --INSERT ATTR5_MST
				SET @CCMD=N'INSERT ATTR5_MST	( ATTR5_KEY_CODE, ATTR5_KEY_NAME, ATTR5_ALIAS, ATTR5_INACTIVE )  
				SELECT DISTINCT	  A.ATTR5_KEY_CODE, A.ATTR5_KEY_NAME, A.ATTR5_ALIAS, A.ATTR5_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR5_MST A(NOLOCK)
				LEFT JOIN ATTR5_MST B (NOLOCK) ON A.ATTR5_KEY_CODE=B.ATTR5_KEY_CODE
				WHERE B.ATTR5_KEY_CODE IS NULL' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD




				SET @CSTEP=440 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR6_KEY_NAME=A2.ATTR6_KEY_NAME,
				ATTR6_ALIAS   =A2.ATTR6_ALIAS,
				ATTR6_INACTIVE=A2.ATTR6_INACTIVE
				FROM ATTR6_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR6_MST A2 (NOLOCK) ON A1.ATTR6_KEY_CODE = A2.ATTR6_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD



				SET @CSTEP=450 --INSERT ATTR6_MST
				SET @CCMD=N'INSERT ATTR6_MST	( ATTR6_KEY_CODE, ATTR6_KEY_NAME, ATTR6_ALIAS, ATTR6_INACTIVE )  
				SELECT DISTINCT  A.ATTR6_KEY_CODE, A.ATTR6_KEY_NAME, A.ATTR6_ALIAS, A.ATTR6_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR6_MST A(NOLOCK)
				LEFT JOIN ATTR6_MST B (NOLOCK) ON A.ATTR6_KEY_CODE=B.ATTR6_KEY_CODE
				WHERE B.ATTR6_KEY_CODE IS NULL  AND ISNULL(A.ATTR6_KEY_CODE,'''') NOT IN ('''',''0000000'')' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD





				SET @CSTEP=460 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR7_KEY_NAME=A2.ATTR7_KEY_NAME,
				ATTR7_ALIAS   =A2.ATTR7_ALIAS,
				ATTR7_INACTIVE=A2.ATTR7_INACTIVE
				FROM ATTR7_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR7_MST A2 (NOLOCK) ON A1.ATTR7_KEY_CODE = A2.ATTR7_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD



				SET @CSTEP=470 --INSERT ATTR7_MST
				SET @CCMD=N'INSERT ATTR7_MST	( ATTR7_KEY_CODE, ATTR7_KEY_NAME, ATTR7_ALIAS, ATTR7_INACTIVE )  
				SELECT 	DISTINCT  A.ATTR7_KEY_CODE, A.ATTR7_KEY_NAME, A.ATTR7_ALIAS, A.ATTR7_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR7_MST A(NOLOCK)
				LEFT JOIN ATTR7_MST B (NOLOCK) ON A.ATTR7_KEY_CODE=B.ATTR7_KEY_CODE
				WHERE B.ATTR7_KEY_CODE IS NULL '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD





				SET @CSTEP=480 --UPDATE ATTR8_MST
				SET @CCMD=N' UPDATE A1 SET 
				ATTR8_KEY_NAME=A2.ATTR8_KEY_NAME,
				ATTR8_ALIAS   =A2.ATTR8_ALIAS,
				ATTR8_INACTIVE=A2.ATTR8_INACTIVE
				FROM ATTR8_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR8_MST A2 (NOLOCK) ON A1.ATTR8_KEY_CODE = A2.ATTR8_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD



				SET @CSTEP=490 --INSERT ATTR8_MST
				SET @CCMD=N'INSERT ATTR8_MST	( ATTR8_KEY_CODE, ATTR8_KEY_NAME, ATTR8_ALIAS, ATTR8_INACTIVE )  
				SELECT 	DISTINCT  A.ATTR8_KEY_CODE, A.ATTR8_KEY_NAME, A.ATTR8_ALIAS, A.ATTR8_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR8_MST A(NOLOCK)
				LEFT JOIN ATTR8_MST B (NOLOCK) ON A.ATTR8_KEY_CODE=B.ATTR8_KEY_CODE
				WHERE B.ATTR8_KEY_CODE IS NULL '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD




				SET @CSTEP=500 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR9_KEY_NAME=A2.ATTR9_KEY_NAME,
				ATTR9_ALIAS   =A2.ATTR9_ALIAS,
				ATTR9_INACTIVE=A2.ATTR9_INACTIVE
				FROM ATTR9_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR9_MST A2 (NOLOCK) ON A1.ATTR9_KEY_CODE = A2.ATTR9_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD



				SET @CSTEP=510 --INSERT ATTR9_MST
				SET @CCMD=N'INSERT ATTR9_MST	( ATTR9_KEY_CODE, ATTR9_KEY_NAME, ATTR9_ALIAS, ATTR9_INACTIVE )  
				SELECT DISTINCT	  A.ATTR9_KEY_CODE, A.ATTR9_KEY_NAME, A.ATTR9_ALIAS, A.ATTR9_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR9_MST A(NOLOCK)
				LEFT JOIN ATTR9_MST B (NOLOCK) ON A.ATTR9_KEY_CODE=B.ATTR9_KEY_CODE
				WHERE B.ATTR9_KEY_CODE IS NULL'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD





				SET @CSTEP=520 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR10_KEY_NAME=A2.ATTR10_KEY_NAME,
				ATTR10_ALIAS   =A2.ATTR10_ALIAS,
				ATTR10_INACTIVE=A2.ATTR10_INACTIVE
				FROM ATTR10_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR10_MST A2 (NOLOCK) ON A1.ATTR10_KEY_CODE = A2.ATTR10_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=530 --INSERT ATTR10_MST
				SET @CCMD=N'INSERT ATTR10_MST	( ATTR10_KEY_CODE, ATTR10_KEY_NAME, ATTR10_ALIAS, ATTR10_INACTIVE )  
				SELECT DISTINCT	  A.ATTR10_KEY_CODE, A.ATTR10_KEY_NAME, A.ATTR10_ALIAS, A.ATTR10_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR10_MST A(NOLOCK)
				LEFT JOIN ATTR10_MST B (NOLOCK) ON A.ATTR10_KEY_CODE=B.ATTR10_KEY_CODE
				WHERE B.ATTR10_KEY_CODE IS NULL'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD




				SET @CSTEP=540 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR11_KEY_NAME=A2.ATTR11_KEY_NAME,
				ATTR11_ALIAS   =A2.ATTR11_ALIAS,
				ATTR11_INACTIVE=A2.ATTR11_INACTIVE
				FROM ATTR11_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR11_MST A2 (NOLOCK) ON A1.ATTR11_KEY_CODE = A2.ATTR11_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=550 --INSERT ATTR11_MST
				SET @CCMD=N'INSERT ATTR11_MST	( ATTR11_KEY_CODE, ATTR11_KEY_NAME, ATTR11_ALIAS, ATTR11_INACTIVE )  
				SELECT DISTINCT	  A.ATTR11_KEY_CODE, A.ATTR11_KEY_NAME, A.ATTR11_ALIAS, A.ATTR11_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR11_MST A(NOLOCK)
				LEFT JOIN ATTR11_MST B (NOLOCK) ON A.ATTR11_KEY_CODE=B.ATTR11_KEY_CODE
				WHERE B.ATTR11_KEY_CODE IS NULL'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD




				SET @CSTEP=560 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR12_KEY_NAME=A2.ATTR12_KEY_NAME,
				ATTR12_ALIAS   =A2.ATTR12_ALIAS,
				ATTR12_INACTIVE=A2.ATTR12_INACTIVE
				FROM ATTR12_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR12_MST A2 (NOLOCK) ON A1.ATTR12_KEY_CODE = A2.ATTR12_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=570 --INSERT ATTR12_MST
				SET @CCMD=N'INSERT ATTR12_MST	( ATTR12_KEY_CODE, ATTR12_KEY_NAME, ATTR12_ALIAS, ATTR12_INACTIVE )  
				SELECT DISTINCT	  A.ATTR12_KEY_CODE, A.ATTR12_KEY_NAME, A.ATTR12_ALIAS, A.ATTR12_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR12_MST A(NOLOCK)
				LEFT JOIN ATTR12_MST B (NOLOCK) ON A.ATTR12_KEY_CODE=B.ATTR12_KEY_CODE
				WHERE B.ATTR12_KEY_CODE IS NULL'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD




				SET @CSTEP=580 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR13_KEY_NAME=A2.ATTR13_KEY_NAME,
				ATTR13_ALIAS   =A2.ATTR13_ALIAS,
				ATTR13_INACTIVE=A2.ATTR13_INACTIVE
				FROM ATTR13_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR13_MST A2 (NOLOCK) ON A1.ATTR13_KEY_CODE = A2.ATTR13_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD



				SET @CSTEP=590 --INSERT ATTR13_MST
				SET @CCMD=N'INSERT ATTR13_MST	( ATTR13_KEY_CODE, ATTR13_KEY_NAME, ATTR13_ALIAS, ATTR13_INACTIVE )  
				SELECT 	DISTINCT  A.ATTR13_KEY_CODE, A.ATTR13_KEY_NAME, A.ATTR13_ALIAS, A.ATTR13_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR13_MST A(NOLOCK)
				LEFT JOIN ATTR13_MST B (NOLOCK) ON A.ATTR13_KEY_CODE=B.ATTR13_KEY_CODE
				WHERE B.ATTR13_KEY_CODE IS NULL'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD





				SET @CSTEP=600 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR14_KEY_NAME=A2.ATTR14_KEY_NAME,
				ATTR14_ALIAS   =A2.ATTR14_ALIAS,
				ATTR14_INACTIVE=A2.ATTR14_INACTIVE
				FROM ATTR14_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR14_MST A2 (NOLOCK) ON A1.ATTR14_KEY_CODE = A2.ATTR14_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=610 --INSERT ATTR14_MST
				SET @CCMD=N'INSERT ATTR14_MST	( ATTR14_KEY_CODE, ATTR14_KEY_NAME, ATTR14_ALIAS, ATTR14_INACTIVE )  
				SELECT DISTINCT	  A.ATTR14_KEY_CODE, A.ATTR14_KEY_NAME, A.ATTR14_ALIAS, A.ATTR14_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR14_MST A(NOLOCK)
				LEFT JOIN ATTR14_MST B (NOLOCK) ON A.ATTR14_KEY_CODE=B.ATTR14_KEY_CODE
				WHERE B.ATTR14_KEY_CODE IS NULL'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD





				SET @CSTEP=620 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR15_KEY_NAME=A2.ATTR15_KEY_NAME,
				ATTR15_ALIAS   =A2.ATTR15_ALIAS,
				ATTR15_INACTIVE=A2.ATTR15_INACTIVE
				FROM ATTR15_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR15_MST A2 (NOLOCK) ON A1.ATTR15_KEY_CODE = A2.ATTR15_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD



				SET @CSTEP=630 --INSERT ATTR15_MST
				SET @CCMD=N'INSERT ATTR15_MST	( ATTR15_KEY_CODE, ATTR15_KEY_NAME, ATTR15_ALIAS, ATTR15_INACTIVE )  
				SELECT DISTINCT	  A.ATTR15_KEY_CODE, A.ATTR15_KEY_NAME, A.ATTR15_ALIAS, A.ATTR15_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR15_MST A(NOLOCK)
				LEFT JOIN ATTR15_MST B (NOLOCK) ON A.ATTR15_KEY_CODE=B.ATTR15_KEY_CODE
				WHERE B.ATTR15_KEY_CODE IS NULL'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD





				SET @CSTEP=640 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR16_KEY_NAME=A2.ATTR16_KEY_NAME,
				ATTR16_ALIAS   =A2.ATTR16_ALIAS,
				ATTR16_INACTIVE=A2.ATTR16_INACTIVE
				FROM ATTR16_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR16_MST A2 (NOLOCK) ON A1.ATTR16_KEY_CODE = A2.ATTR16_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD



				SET @CSTEP=650 --INSERT ATTR16_MST
				SET @CCMD=N'INSERT ATTR16_MST	( ATTR16_KEY_CODE, ATTR16_KEY_NAME, ATTR16_ALIAS, ATTR16_INACTIVE )  
				SELECT DISTINCT	  A.ATTR16_KEY_CODE, A.ATTR16_KEY_NAME, A.ATTR16_ALIAS, A.ATTR16_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR16_MST A(NOLOCK)
				LEFT JOIN ATTR16_MST B (NOLOCK) ON A.ATTR16_KEY_CODE=B.ATTR16_KEY_CODE
				WHERE B.ATTR16_KEY_CODE IS NULL'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD



				SET @CSTEP=660 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR17_KEY_NAME=A2.ATTR17_KEY_NAME,
				ATTR17_ALIAS   =A2.ATTR17_ALIAS,
				ATTR17_INACTIVE=A2.ATTR17_INACTIVE
				FROM ATTR17_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR17_MST A2 (NOLOCK) ON A1.ATTR17_KEY_CODE = A2.ATTR17_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=670 --INSERT ATTR17_MST
				SET @CCMD=N'INSERT ATTR17_MST	( ATTR17_KEY_CODE, ATTR17_KEY_NAME, ATTR17_ALIAS, ATTR17_INACTIVE )  
				SELECT 	DISTINCT  A.ATTR17_KEY_CODE, A.ATTR17_KEY_NAME, A.ATTR17_ALIAS, A.ATTR17_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR17_MST A(NOLOCK)
				LEFT JOIN ATTR17_MST B (NOLOCK) ON A.ATTR17_KEY_CODE=B.ATTR17_KEY_CODE
				WHERE B.ATTR17_KEY_CODE IS NULL'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD




				SET @CSTEP=680 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR18_KEY_NAME=A2.ATTR18_KEY_NAME,
				ATTR18_ALIAS   =A2.ATTR18_ALIAS,
				ATTR18_INACTIVE=A2.ATTR18_INACTIVE
				FROM ATTR18_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR18_MST A2 (NOLOCK) ON A1.ATTR18_KEY_CODE = A2.ATTR18_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=690 --INSERT ATTR18_MST
				SET @CCMD=N'INSERT ATTR18_MST	( ATTR18_KEY_CODE, ATTR18_KEY_NAME, ATTR18_ALIAS, ATTR18_INACTIVE )  
				SELECT DISTINCT	  A.ATTR18_KEY_CODE, A.ATTR18_KEY_NAME, A.ATTR18_ALIAS, A.ATTR18_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR18_MST A(NOLOCK)
				LEFT JOIN ATTR18_MST B (NOLOCK) ON A.ATTR18_KEY_CODE=B.ATTR18_KEY_CODE
				WHERE B.ATTR18_KEY_CODE IS NULL'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD




				SET @CSTEP=700 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR19_KEY_NAME=A2.ATTR19_KEY_NAME,
				ATTR19_ALIAS   =A2.ATTR19_ALIAS,
				ATTR19_INACTIVE=A2.ATTR19_INACTIVE
				FROM ATTR19_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR19_MST A2 (NOLOCK) ON A1.ATTR19_KEY_CODE = A2.ATTR19_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=710 --INSERT ATTR19_MST
				SET @CCMD=N'INSERT ATTR19_MST	( ATTR19_KEY_CODE, ATTR19_KEY_NAME, ATTR19_ALIAS, ATTR19_INACTIVE )  
				SELECT DISTINCT	  A.ATTR19_KEY_CODE, A.ATTR19_KEY_NAME, A.ATTR19_ALIAS, A.ATTR19_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR19_MST A(NOLOCK)
				LEFT JOIN ATTR19_MST B (NOLOCK) ON A.ATTR19_KEY_CODE=B.ATTR19_KEY_CODE
				WHERE B.ATTR19_KEY_CODE IS NULL'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD




				SET @CSTEP=720 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR20_KEY_NAME=A2.ATTR20_KEY_NAME,
				ATTR20_ALIAS   =A2.ATTR20_ALIAS,
				ATTR20_INACTIVE=A2.ATTR20_INACTIVE
				FROM ATTR20_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR20_MST A2 (NOLOCK) ON A1.ATTR20_KEY_CODE = A2.ATTR20_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD

				SET @CSTEP=730 --INSERT ATTR20_MST
				SET @CCMD=N'INSERT ATTR20_MST	( ATTR20_KEY_CODE, ATTR20_KEY_NAME, ATTR20_ALIAS, ATTR20_INACTIVE )  
				SELECT DISTINCT	  A.ATTR20_KEY_CODE, A.ATTR20_KEY_NAME, A.ATTR20_ALIAS, A.ATTR20_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR20_MST A(NOLOCK)
				LEFT JOIN ATTR20_MST B (NOLOCK) ON A.ATTR20_KEY_CODE=B.ATTR20_KEY_CODE
				WHERE B.ATTR20_KEY_CODE IS NULL'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD




				SET @CSTEP=740 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR21_KEY_NAME=A2.ATTR21_KEY_NAME,
				ATTR21_ALIAS   =A2.ATTR21_ALIAS,
				ATTR21_INACTIVE=A2.ATTR21_INACTIVE
				FROM ATTR21_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR21_MST A2 (NOLOCK) ON A1.ATTR21_KEY_CODE = A2.ATTR21_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=750 --INSERT ATTR21_MST
				SET @CCMD=N'INSERT ATTR21_MST	( ATTR21_KEY_CODE, ATTR21_KEY_NAME, ATTR21_ALIAS, ATTR21_INACTIVE )  
				SELECT DISTINCT	  A.ATTR21_KEY_CODE, A.ATTR21_KEY_NAME, A.ATTR21_ALIAS, A.ATTR21_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR21_MST A(NOLOCK)
				LEFT JOIN ATTR21_MST B (NOLOCK) ON A.ATTR21_KEY_CODE=B.ATTR21_KEY_CODE
				WHERE B.ATTR21_KEY_CODE IS NULL'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD




				SET @CSTEP=760 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR22_KEY_NAME=A2.ATTR22_KEY_NAME,
				ATTR22_ALIAS   =A2.ATTR22_ALIAS,
				ATTR22_INACTIVE=A2.ATTR22_INACTIVE
				FROM ATTR22_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR22_MST A2 (NOLOCK) ON A1.ATTR22_KEY_CODE = A2.ATTR22_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=770 --INSERT ATTR22_MST
				SET @CCMD=N'INSERT ATTR22_MST	( ATTR22_KEY_CODE, ATTR22_KEY_NAME, ATTR22_ALIAS, ATTR22_INACTIVE )  
				SELECT DISTINCT	  A.ATTR22_KEY_CODE, A.ATTR22_KEY_NAME, A.ATTR22_ALIAS, A.ATTR22_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR22_MST A(NOLOCK)
				LEFT JOIN ATTR22_MST B (NOLOCK) ON A.ATTR22_KEY_CODE=B.ATTR22_KEY_CODE
				WHERE B.ATTR22_KEY_CODE IS NULL'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD



				SET @CSTEP=780 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR23_KEY_NAME=A2.ATTR23_KEY_NAME,
				ATTR23_ALIAS   =A2.ATTR23_ALIAS,
				ATTR23_INACTIVE=A2.ATTR23_INACTIVE
				FROM ATTR23_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR23_MST A2 (NOLOCK) ON A1.ATTR23_KEY_CODE = A2.ATTR23_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=790 --INSERT ATTR23_MST
				SET @CCMD=N'INSERT ATTR23_MST	( ATTR23_KEY_CODE, ATTR23_KEY_NAME, ATTR23_ALIAS, ATTR23_INACTIVE )  
				SELECT DISTINCT	  A.ATTR23_KEY_CODE, A.ATTR23_KEY_NAME, A.ATTR23_ALIAS, A.ATTR23_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR23_MST A(NOLOCK)
				LEFT JOIN ATTR23_MST B (NOLOCK) ON A.ATTR23_KEY_CODE=B.ATTR23_KEY_CODE
				WHERE B.ATTR23_KEY_CODE IS NULL'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD




				SET @CSTEP=800 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR24_KEY_NAME=A2.ATTR24_KEY_NAME,
				ATTR24_ALIAS   =A2.ATTR24_ALIAS,
				ATTR24_INACTIVE=A2.ATTR24_INACTIVE
				FROM ATTR24_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR24_MST A2 (NOLOCK) ON A1.ATTR24_KEY_CODE = A2.ATTR24_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				SET @CSTEP=810 --INSERT ATTR24_MST
				SET @CCMD=N'INSERT ATTR24_MST	( ATTR24_KEY_CODE, ATTR24_KEY_NAME, ATTR24_ALIAS, ATTR24_INACTIVE )  
				SELECT DISTINCT	  A.ATTR24_KEY_CODE, A.ATTR24_KEY_NAME, A.ATTR24_ALIAS, A.ATTR24_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR24_MST A(NOLOCK)
				LEFT JOIN ATTR24_MST B (NOLOCK) ON A.ATTR24_KEY_CODE=B.ATTR24_KEY_CODE
				WHERE B.ATTR24_KEY_CODE IS NULL'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD




				SET @CSTEP=820 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR25_KEY_NAME=A2.ATTR25_KEY_NAME,
				ATTR25_ALIAS   =A2.ATTR25_ALIAS,
				ATTR25_INACTIVE=A2.ATTR25_INACTIVE
				FROM ATTR25_MST A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ATTR25_MST A2 (NOLOCK) ON A1.ATTR25_KEY_CODE = A2.ATTR25_KEY_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD




				SET @CSTEP=830 --INSERT ATTR25_MST
				SET @CCMD=N'INSERT ATTR25_MST	( ATTR25_KEY_CODE, ATTR25_KEY_NAME, ATTR25_ALIAS, ATTR25_INACTIVE )  
				SELECT DISTINCT	  A.ATTR25_KEY_CODE, A.ATTR25_KEY_NAME, A.ATTR25_ALIAS, A.ATTR25_INACTIVE 
				FROM '+@CDATABSENAME+'..ATTR25_MST A(NOLOCK)
				LEFT JOIN ATTR25_MST B (NOLOCK) ON A.ATTR25_KEY_CODE=B.ATTR25_KEY_CODE
				WHERE B.ATTR25_KEY_CODE IS NULL'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD







				SET @CSTEP=840 
				SET @CCMD=N' UPDATE A1 SET 
				ATTR1_MST=A2.ATTR1_MST,
				ATTR2_MST=A2.ATTR2_MST,
				ATTR3_MST=A2.ATTR3_MST,
				ATTR4_MST=A2.ATTR4_MST,
				ATTR5_MST=A2.ATTR5_MST,
				ATTR6_MST=A2.ATTR6_MST,
				ATTR7_MST=A2.ATTR7_MST,
				ATTR8_MST=A2.ATTR8_MST,
				ATTR9_MST=A2.ATTR9_MST,
				ATTR10_MST=A2.ATTR10_MST,
				ATTR11_MST=A2.ATTR11_MST,
				ATTR12_MST=A2.ATTR12_MST,
				ATTR13_MST=A2.ATTR13_MST,
				ATTR14_MST=A2.ATTR14_MST,
				ATTR15_MST=A2.ATTR15_MST,
				ATTR16_MST=A2.ATTR16_MST,
				ATTR17_MST=A2.ATTR17_MST,
				ATTR18_MST=A2.ATTR18_MST,
				ATTR19_MST=A2.ATTR19_MST,
				ATTR20_MST=A2.ATTR20_MST,
				ATTR21_MST=A2.ATTR21_MST,
				ATTR22_MST=A2.ATTR22_MST,
				ATTR23_MST=A2.ATTR23_MST,
				ATTR24_MST=A2.ATTR24_MST,
				ATTR25_MST=A2.ATTR25_MST


				FROM SD_ATTR_AVATAR A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..SD_ATTR_AVATAR A2 (NOLOCK) ON A1.SUB_SECTION_CODE = A2.SUB_SECTION_CODE '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD

				SET @CSTEP=850 --INSERT SD_ATTR_AVATAR
				SET @CCMD=N'INSERT SD_ATTR_AVATAR	( SUB_SECTION_CODE, ATTR1_MST, ATTR2_MST, ATTR3_MST, ATTR4_MST, 
				ATTR5_MST, ATTR6_MST, ATTR7_MST, ATTR8_MST, ATTR9_MST, ATTR10_MST, ATTR11_MST, 
				ATTR12_MST, ATTR13_MST, ATTR14_MST, ATTR15_MST, ATTR16_MST, ATTR17_MST,
				ATTR18_MST, ATTR19_MST, ATTR20_MST, ATTR21_MST, ATTR22_MST, ATTR23_MST, 
				ATTR24_MST, ATTR25_MST ) 

				SELECT DISTINCT  A.SUB_SECTION_CODE, A.ATTR1_MST, A.ATTR2_MST, A.ATTR3_MST, A.ATTR4_MST, A.ATTR5_MST, 
				A.ATTR6_MST,  A.ATTR7_MST,  A.ATTR8_MST, A.ATTR9_MST, A.ATTR10_MST, A.ATTR11_MST, 
				A.ATTR12_MST, A.ATTR13_MST, A.ATTR14_MST, A.ATTR15_MST, A.ATTR16_MST, A.ATTR17_MST, 
				A.ATTR18_MST, A.ATTR19_MST, A.ATTR20_MST, A.ATTR21_MST, A.ATTR22_MST, A.ATTR23_MST, 
				A.ATTR24_MST, A.ATTR25_MST 
				FROM '+@CDATABSENAME+'..SD_ATTR_AVATAR A(NOLOCK)
				LEFT JOIN SD_ATTR_AVATAR B (NOLOCK) ON A.SUB_SECTION_CODE=B.SUB_SECTION_CODE
				WHERE B.SUB_SECTION_CODE IS NULL ' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD




				SET @CSTEP=860
				SET @CCMD=N' UPDATE A1 SET 
				ATTR1_KEY_CODE=A2.ATTR1_KEY_CODE,
				ATTR2_KEY_CODE=A2.ATTR2_KEY_CODE,
				ATTR3_KEY_CODE=A2.ATTR3_KEY_CODE,
				ATTR4_KEY_CODE=A2.ATTR4_KEY_CODE,
				ATTR5_KEY_CODE=A2.ATTR5_KEY_CODE,
				ATTR6_KEY_CODE=A2.ATTR6_KEY_CODE,
				ATTR7_KEY_CODE=A2.ATTR7_KEY_CODE,
				ATTR8_KEY_CODE=A2.ATTR8_KEY_CODE,
				ATTR9_KEY_CODE=A2.ATTR9_KEY_CODE,
				ATTR10_KEY_CODE=A2.ATTR10_KEY_CODE,
				ATTR11_KEY_CODE=A2.ATTR11_KEY_CODE,
				ATTR12_KEY_CODE=A2.ATTR12_KEY_CODE,
				ATTR13_KEY_CODE=A2.ATTR13_KEY_CODE,
				ATTR14_KEY_CODE=A2.ATTR14_KEY_CODE,
				ATTR15_KEY_CODE=A2.ATTR15_KEY_CODE,
				ATTR16_KEY_CODE=A2.ATTR16_KEY_CODE,
				ATTR17_KEY_CODE=A2.ATTR17_KEY_CODE,
				ATTR18_KEY_CODE=A2.ATTR18_KEY_CODE,
				ATTR19_KEY_CODE=A2.ATTR19_KEY_CODE,
				ATTR20_KEY_CODE=A2.ATTR20_KEY_CODE,
				ATTR21_KEY_CODE=A2.ATTR21_KEY_CODE,
				ATTR22_KEY_CODE=A2.ATTR22_KEY_CODE,
				ATTR23_KEY_CODE=A2.ATTR23_KEY_CODE,
				ATTR24_KEY_CODE=A2.ATTR24_KEY_CODE,
				ATTR25_KEY_CODE=A2.ATTR25_KEY_CODE


				FROM ARTICLE_FIX_ATTR A1 WITH (ROWLOCK) 
				JOIN '+@CDATABSENAME+'..ARTICLE_FIX_ATTR A2 (NOLOCK) ON A1.article_code = A2.article_code '
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD



				SET @CSTEP=870 --INSERT ARTICLE_FIX_ATTR
				SET @CCMD=N'INSERT ARTICLE_FIX_ATTR	( ARTICLE_CODE, ATTR1_KEY_CODE, ATTR2_KEY_CODE, ATTR3_KEY_CODE, ATTR4_KEY_CODE, 
				ATTR5_KEY_CODE, ATTR6_KEY_CODE, ATTR7_KEY_CODE, ATTR8_KEY_CODE, ATTR9_KEY_CODE, ATTR10_KEY_CODE, ATTR11_KEY_CODE, 
				ATTR12_KEY_CODE, ATTR13_KEY_CODE, ATTR14_KEY_CODE, ATTR15_KEY_CODE, ATTR16_KEY_CODE, ATTR17_KEY_CODE,
				ATTR18_KEY_CODE, ATTR19_KEY_CODE, ATTR20_KEY_CODE, ATTR21_KEY_CODE, ATTR22_KEY_CODE, ATTR23_KEY_CODE, 
				ATTR24_KEY_CODE, ATTR25_KEY_CODE ) 

				SELECT DISTINCT  A.ARTICLE_CODE, A.ATTR1_KEY_CODE, A.ATTR2_KEY_CODE, A.ATTR3_KEY_CODE, A.ATTR4_KEY_CODE, A.ATTR5_KEY_CODE, 
				A.ATTR6_KEY_CODE,  A.ATTR7_KEY_CODE,  A.ATTR8_KEY_CODE, A.ATTR9_KEY_CODE, A.ATTR10_KEY_CODE, A.ATTR11_KEY_CODE, 
				A.ATTR12_KEY_CODE, A.ATTR13_KEY_CODE, A.ATTR14_KEY_CODE, A.ATTR15_KEY_CODE, A.ATTR16_KEY_CODE, A.ATTR17_KEY_CODE, 
				A.ATTR18_KEY_CODE, A.ATTR19_KEY_CODE, A.ATTR20_KEY_CODE, A.ATTR21_KEY_CODE, A.ATTR22_KEY_CODE, A.ATTR23_KEY_CODE, 
				A.ATTR24_KEY_CODE, A.ATTR25_KEY_CODE 
				FROM '+@CDATABSENAME+'..ARTICLE_FIX_ATTR A(NOLOCK)
				LEFT JOIN ARTICLE_FIX_ATTR B (NOLOCK) ON A.ARTICLE_CODE=B.ARTICLE_CODE
				WHERE B.ARTICLE_CODE IS NULL  ' 
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD


				IF ( @CLOCTYPE=2 OR @UPD_PURINFO=0 )
				BEGIN

						SET @CSTEP=880 --INSERT (SKU)
						SET @CCMD=N'INSERT SKU	( PARA2_CODE, LAST_UPDATE, PURCHASE_PRICE, PARA3_CODE, INV_DT, INV_NO, AC_CODE, RECEIPT_DT, 
						PARA4_CODE, PARA5_CODE, PARA6_CODE, FORM_ID, MRP, DT_CREATED, WS_PRICE, IMAGE_NAME, TAX_AMOUNT, CHALLAN_NO, 
						FIX_MRP, PRODUCT_NAME, PRODUCT_CODE, ARTICLE_CODE, PARA1_CODE, ER_FLAG, UPLOADED_TO_ACTIVSTREAM, 
						BARCODE_CODING_SCHEME, EMP_CODE, VENDOR_EAN_NO, ONLINE_PRODUCT_CODE, LAST_MODIFIED_ON, BASIC_PURCHASE_PRICE,
						HSN_CODE )
						SELECT DISTINCT A2.PARA2_CODE, GETDATE(), 0, A2.PARA3_CODE, '''', '''', ''0000000000'', 
						'''', A2.PARA4_CODE, A2.PARA5_CODE, A2.PARA6_CODE, ''0000000'', A2.MRP, A2.DT_CREATED, A2.WS_PRICE, A2.IMAGE_NAME, A2.TAX_AMOUNT, 
						A2.CHALLAN_NO, A2.FIX_MRP, A2.PRODUCT_NAME, A2.PRODUCT_CODE, A2.ARTICLE_CODE, A2.PARA1_CODE, A2.ER_FLAG, A2.UPLOADED_TO_ACTIVSTREAM, 
						A2.BARCODE_CODING_SCHEME, A2.EMP_CODE, A2.VENDOR_EAN_NO, A2.ONLINE_PRODUCT_CODE,
						A2.LAST_MODIFIED_ON, A2.BASIC_PURCHASE_PRICE,
						A2.HSN_CODE  
						FROM '+@CDATABSENAME+'..SKU A2 (NOLOCK) 
						LEFT JOIN SKU A1 WITH (NOLOCK) 
						ON A1.PRODUCT_CODE = A2.PRODUCT_CODE WHERE A2.BARCODE_CODING_SCHEME=1
						AND A1.PRODUCT_CODE IS NULL ' 
						PRINT @CCMD 
						EXEC SP_EXECUTESQL @CCMD



						SET @CSTEP=890 -- UPDATE SKU
						SET @CCMD=N' UPDATE A1 SET PARA2_CODE=A2.PARA2_CODE, LAST_UPDATE=GETDATE(), 
						PARA3_CODE=A2.PARA3_CODE,
						PARA4_CODE=A2.PARA4_CODE,PARA5_CODE=A2.PARA5_CODE,
						PARA6_CODE=A2.PARA6_CODE,FORM_ID=''0000000'',
						MRP=A2.MRP,DT_CREATED=A2.DT_CREATED,WS_PRICE=A2.WS_PRICE,IMAGE_NAME=A2.IMAGE_NAME,TAX_AMOUNT=A2.TAX_AMOUNT,
						CHALLAN_NO=A2.CHALLAN_NO,FIX_MRP=A2.FIX_MRP,PRODUCT_NAME=A2.PRODUCT_NAME,ARTICLE_CODE=A2.ARTICLE_CODE,
						PARA1_CODE=A2.PARA1_CODE,ER_FLAG=A2.ER_FLAG,UPLOADED_TO_ACTIVSTREAM=A2.UPLOADED_TO_ACTIVSTREAM,
						BARCODE_CODING_SCHEME=A2.BARCODE_CODING_SCHEME,EMP_CODE=A2.EMP_CODE,VENDOR_EAN_NO=A2.VENDOR_EAN_NO,
						ONLINE_PRODUCT_CODE=A2.ONLINE_PRODUCT_CODE,
						BASIC_PURCHASE_PRICE=A2.BASIC_PURCHASE_PRICE,HSN_CODE=A2.HSN_CODE
						FROM SKU A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..SKU A2 (ROWLOCK) 
						ON A1.PRODUCT_CODE = A2.PRODUCT_CODE' 
						PRINT @CCMD 
						EXEC SP_EXECUTESQL @CCMD


				END

				IF ( @CLOCTYPE=1 AND @UPD_PURINFO=1)
				BEGIN

						SET @CSTEP=900 --INSERT (SKU)
						SET @CCMD=N'INSERT SKU	( PARA2_CODE, LAST_UPDATE, PURCHASE_PRICE, PARA3_CODE, INV_DT, INV_NO, AC_CODE, RECEIPT_DT, 
						PARA4_CODE, PARA5_CODE, PARA6_CODE, FORM_ID, MRP, DT_CREATED, WS_PRICE, IMAGE_NAME, TAX_AMOUNT, CHALLAN_NO, 
						FIX_MRP, PRODUCT_NAME, PRODUCT_CODE, ARTICLE_CODE, PARA1_CODE, ER_FLAG, UPLOADED_TO_ACTIVSTREAM, 
						BARCODE_CODING_SCHEME, EMP_CODE, VENDOR_EAN_NO, ONLINE_PRODUCT_CODE, LAST_MODIFIED_ON, BASIC_PURCHASE_PRICE,
						HSN_CODE )
						SELECT 	DISTINCT  A2.PARA2_CODE, GETDATE(), A2.PURCHASE_PRICE, A2.PARA3_CODE, A2.INV_DT, A2.INV_NO, A2.AC_CODE, 
						A2.RECEIPT_DT, A2.PARA4_CODE, A2.PARA5_CODE, A2.PARA6_CODE, A2.FORM_ID, A2.MRP, A2.DT_CREATED, A2.WS_PRICE, 
						A2.IMAGE_NAME, A2.TAX_AMOUNT, 
						A2.CHALLAN_NO, A2.FIX_MRP, A2.PRODUCT_NAME, A2.PRODUCT_CODE, A2.ARTICLE_CODE, A2.PARA1_CODE, A2.ER_FLAG, A2.UPLOADED_TO_ACTIVSTREAM, 
						A2.BARCODE_CODING_SCHEME, A2.EMP_CODE, A2.VENDOR_EAN_NO, A2.ONLINE_PRODUCT_CODE, A2.LAST_MODIFIED_ON, A2.BASIC_PURCHASE_PRICE,
						A2.HSN_CODE  
						FROM '+@CDATABSENAME+'..SKU A2 (NOLOCK) LEFT JOIN SKU A1 WITH (NOLOCK) 
						ON A1.PRODUCT_CODE = A2.PRODUCT_CODE WHERE (ISNULL(A2.AR_CODING_SCHEME,0)=1 OR  A2.BARCODE_CODING_SCHEME=1)
						AND A1.PRODUCT_CODE IS NULL ' 
						PRINT @CCMD 
						EXEC SP_EXECUTESQL @CCMD



						SET @CSTEP=910 -- UPDATE SKU
						SET @CCMD=N' UPDATE A1 SET PARA2_CODE=A2.PARA2_CODE, LAST_UPDATE=GETDATE(), 
						PURCHASE_PRICE=A2.PURCHASE_PRICE,PARA3_CODE=A2.PARA3_CODE,INV_DT=A2.INV_DT,INV_NO=A2.INV_NO,
						AC_CODE=A2.AC_CODE,RECEIPT_DT=A2.RECEIPT_DT,PARA4_CODE=A2.PARA4_CODE,PARA5_CODE=A2.PARA5_CODE,
						PARA6_CODE=A2.PARA6_CODE,FORM_ID=''0000000'',
						MRP=A2.MRP,DT_CREATED=A2.DT_CREATED,WS_PRICE=A2.WS_PRICE,IMAGE_NAME=A2.IMAGE_NAME,TAX_AMOUNT=A2.TAX_AMOUNT,
						CHALLAN_NO=A2.CHALLAN_NO,FIX_MRP=A2.FIX_MRP,PRODUCT_NAME=A2.PRODUCT_NAME,ARTICLE_CODE=A2.ARTICLE_CODE,
						PARA1_CODE=A2.PARA1_CODE,ER_FLAG=A2.ER_FLAG,UPLOADED_TO_ACTIVSTREAM=A2.UPLOADED_TO_ACTIVSTREAM,
						BARCODE_CODING_SCHEME=A2.BARCODE_CODING_SCHEME,EMP_CODE=A2.EMP_CODE,VENDOR_EAN_NO=A2.VENDOR_EAN_NO,
						ONLINE_PRODUCT_CODE=A2.ONLINE_PRODUCT_CODE,
						BASIC_PURCHASE_PRICE=A2.BASIC_PURCHASE_PRICE,HSN_CODE=A2.HSN_CODE
						FROM SKU A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..SKU A2 (NOLOCK) 
						ON A1.PRODUCT_CODE = A2.PRODUCT_CODE' 
						PRINT @CCMD 
						EXEC SP_EXECUTESQL @CCMD

						SET @CSTEP=920 -- INSERT SKU_OH
						SET @CCMD=N'INSERT SKU_OH( PRODUCT_CODE, DISCOUNT_AMOUNT, TAX_AMOUNT, FREIGHT, OTHER_CHARGES, 
						ROUND_OFF, VALUE_ADD, EXCISE_DUTY_AMOUNT )  
						SELECT DISTINCT A2.SO_PRODUCT_CODE, A2.SO_DISCOUNT_AMOUNT, A2.SO_TAX_AMOUNT, A2.SO_FREIGHT, A2.SO_OTHER_CHARGES,
						A2.SO_ROUND_OFF,A2.SO_VALUE_ADD, A2.SO_EXCISE_DUTY_AMOUNT
						FROM '+@CDATABSENAME+'..SKU A2 (NOLOCK) 
						LEFT JOIN SKU_OH A1(NOLOCK) ON A1.PRODUCT_CODE=A2.SO_PRODUCT_CODE
						WHERE A1.PRODUCT_CODE IS NULL AND (ISNULL(A2.AR_CODING_SCHEME,0)=1 OR  A2.BARCODE_CODING_SCHEME=1)
						AND A2.SO_PRODUCT_CODE IS NOT NULL'

						PRINT @CCMD 
						EXEC SP_EXECUTESQL @CCMD					          

						SET @CSTEP=930 -- UPDATE SKU_OH
						SET @CCMD=N' UPDATE A1 SET DISCOUNT_AMOUNT=A2.SO_DISCOUNT_AMOUNT, 
						TAX_AMOUNT=A2.SO_TAX_AMOUNT,FREIGHT=A2.SO_FREIGHT,OTHER_CHARGES=A2.SO_OTHER_CHARGES,ROUND_OFF=A2.SO_ROUND_OFF,
						VALUE_ADD=A2.SO_VALUE_ADD,EXCISE_DUTY_AMOUNT=A2.SO_EXCISE_DUTY_AMOUNT
						FROM SKU_OH A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..SKU A2 (NOLOCK) 
						ON A1.PRODUCT_CODE = A2.SO_PRODUCT_CODE' 
						PRINT @CCMD 
						EXEC SP_EXECUTESQL @CCMD

				END
   
		   
      END
      
  --    IF @NMODE=2   ---- SKU
  --    BEGIN
          
  
		--   SET @CSTEP=10--UPDATE PARA1
		--   SET @CCMD=N' UPDATE A1 SET A1.PARA1_NAME = A2.P1_PARA1_NAME, A1.ALIAS = A2.P1_ALIAS,A1.INACTIVE = A2.P1_INACTIVE
		--   FROM PARA1 A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..SKU A2 (NOLOCK) ON A1.PARA1_CODE = A2.PARA1_CODE'
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
		   

		--   SET @CSTEP=20 --INSERT PARA1
		--   SET @CCMD=N'INSERT PARA1( PARA1_CODE, PARA1_NAME, LAST_UPDATE, ALIAS, INACTIVE, PARA1_ORDER, PARA1_SET, REMARKS )  
		--   SELECT DISTINCT A.PARA1_CODE,A.P1_PARA1_NAME, GETDATE() ,ISNULL(A.P1_ALIAS,''''),A.P1_INACTIVE, 0, '''', ''''
		--   FROM  '+@CDATABSENAME+'..SKU A(NOLOCK) LEFT JOIN PARA1 B(NOLOCK) ON A.PARA1_CODE = B.PARA1_CODE 
		--   WHERE B.PARA1_CODE IS NULL'
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
	        
			
		--   SET @CSTEP=30 --UPDATE PARA2
		--   SET @CCMD=N' UPDATE A1 SET A1.PARA2_NAME = A2.P2_PARA2_NAME,A1.ALIAS = A2.P2_ALIAS,A1.INACTIVE = A2.P2_INACTIVE,
		--   A1.PARA2_ORDER = A2.P2_PARA2_ORDER FROM PARA2 A1 WITH (ROWLOCK) 
		--   JOIN '+@CDATABSENAME+'..SKU A2(NOLOCK) ON A1.PARA2_CODE = A2.PARA2_CODE' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD


		--   SET @CSTEP=40 -- INSERT PARA2
		--   SET @CCMD=N'INSERT PARA2 WITH (ROWLOCK) ( LAST_UPDATE,ALIAS,INACTIVE,PARA2_ORDER,PARA2_SET,PARA2_CODE,PARA2_NAME,REMARKS )  
		--   SELECT DISTINCT GETDATE(),ISNULL(A.P2_ALIAS,''''),A.P2_INACTIVE,ISNULL(A.P2_PARA2_ORDER,0),'''',
		--   A.PARA2_CODE,A.P2_PARA2_NAME,''''
		--   FROM '+@CDATABSENAME+'..SKU A(NOLOCK) LEFT JOIN PARA2 B(NOLOCK) ON A.PARA2_CODE = B.PARA2_CODE 
		--   WHERE B.PARA2_CODE IS NULL' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
		
		--   SET @CSTEP=50 --UPDATE PARA3
		--   SET @CCMD=N' UPDATE A1 SET A1.PARA3_NAME = A2.P3_PARA3_NAME,A1.ALIAS = A2.P3_ALIAS,A1.INACTIVE = A2.P3_INACTIVE
		--   FROM PARA3 A1 WITH (ROWLOCK) 
		--   JOIN '+@CDATABSENAME+'..SKU A2(NOLOCK) ON A1.PARA3_CODE = A2.PARA3_CODE' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
	    
		--   SET @CSTEP=60 -- INSERT PARA3
		--   SET @CCMD=N'INSERT PARA3(PARA3_CODE, PARA3_NAME, LAST_UPDATE, ALIAS, INACTIVE, REMARKS)
		--   SELECT DISTINCT A.PARA3_CODE, A.P3_PARA3_NAME, GETDATE() AS LAST_UPDATE,ISNULL(A.P3_ALIAS,''''),A.P3_INACTIVE, ''''
		--   FROM '+@CDATABSENAME+'..SKU A(NOLOCK) LEFT JOIN PARA3 B(NOLOCK) ON A.PARA3_CODE = B.PARA3_CODE WHERE B.PARA3_CODE IS NULL' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
		
		--   SET @CSTEP=70 --UPDATE PARA4
		--   SET @CCMD=N' UPDATE A1 SET A1.PARA4_NAME = A2.P4_PARA4_NAME, A1.ALIAS = A2.P4_ALIAS, 
		--   A1.INACTIVE = A2.P4_INACTIVE
		--   FROM PARA4 A1 WITH (ROWLOCK)JOIN '+@CDATABSENAME+'..SKU A2 (NOLOCK) ON A1.PARA4_CODE = A2.PARA4_CODE' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
	    
	    
		--   SET @CSTEP=80 -- INSERT PARA4
		--   SET @CCMD=N' INSERT PARA4( PARA4_CODE, PARA4_NAME, LAST_UPDATE, ALIAS, INACTIVE, REMARKS) 
		--   SELECT DISTINCT A.PARA4_CODE,A.P4_PARA4_NAME, GETDATE(),ISNULL(A.P4_ALIAS,''''), A.P4_INACTIVE,''''
		--   FROM '+@CDATABSENAME+'..SKU A(NOLOCK) LEFT JOIN PARA4 B(NOLOCK) ON A.PARA4_CODE = B.PARA4_CODE 
		--   WHERE B.PARA4_CODE IS NULL' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
	      
		--   SET @CSTEP=90 --UPDATE PARA5
		--   SET @CCMD=N' UPDATE A1
		--   SET A1.PARA5_NAME = A2.P5_PARA5_NAME,A1.ALIAS = A2.P5_ALIAS,A1.INACTIVE = A2.P5_INACTIVE
		--   FROM PARA5 A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..SKU A2 (NOLOCK) ON A1.PARA5_CODE = A2.PARA5_CODE' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
	    
	    
		--   SET @CSTEP=100 -- INSERT PARA5
		--   SET @CCMD=N' INSERT PARA5( ALIAS, INACTIVE, PARA5_CODE, PARA5_NAME, LAST_UPDATE, REMARKS)
		--   SELECT DISTINCT ISNULL(A.P5_ALIAS,''''),A.P5_INACTIVE,A.PARA5_CODE,A.P5_PARA5_NAME, GETDATE() ,''''
  -- 		   FROM '+@CDATABSENAME+'..SKU A(NOLOCK) LEFT JOIN PARA5 B(NOLOCK) ON A.PARA5_CODE = B.PARA5_CODE 
  -- 		   WHERE B.PARA5_CODE IS NULL' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
	    
		--   SET @CSTEP=110 --UPDATE PARA6
		--   SET @CCMD=N' UPDATE A1
		--   SET A1.PARA6_NAME = A2.P6_PARA6_NAME,A1.ALIAS = A2.P6_ALIAS,A1.INACTIVE = A2.P6_INACTIVE
		--   FROM PARA6 A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..SKU A2 (NOLOCK) ON A1.PARA6_CODE = A2.PARA6_CODE' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
	    
		--   SET @CSTEP=120 --- INSERT PARA6
		--   SET @CCMD=N'INSERT PARA6( PARA6_CODE, PARA6_NAME, LAST_UPDATE, ALIAS, INACTIVE, REMARKS)  
		--   SELECT DISTINCT A.PARA6_CODE, A.P6_PARA6_NAME, GETDATE(),ISNULL(A.P6_ALIAS,''''),A.P6_INACTIVE,''''
		--   FROM '+@CDATABSENAME+'..SKU A(NOLOCK) LEFT JOIN PARA6 B(NOLOCK) ON A.PARA6_CODE = B.PARA6_CODE 
		--   WHERE B.PARA6_CODE IS NULL' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
		

		--   SET @CSTEP=130 ---  UPDATE HEAD_CODE
		--   SET @CCMD=N' UPDATE A1 SET HEAD_NAME=A2.H_HEAD_NAME,MAJOR_HEAD_CODE=A2.H_MAJOR_HEAD_CODE,PHYSICAL=A2.H_PHYSICAL,
		--   ALIAS=A2.H_ALIAS,PRINT_HEAD=A2.H_PRINT_HEAD,CREDITOR_DEBTOR_CODE=A2.H_CREDITOR_DEBTOR_CODE,
		--   INACTIVE=A2.H_INACTIVE
		--   FROM HD01106 A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..SKU A2 (NOLOCK)
		--   ON A1.HEAD_CODE = A2.LM_HEAD_CODE' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
		  
		  
		--   SET @CSTEP=140 --UPDATE LM01106
		--   SET @CCMD=N' UPDATE A1 SET INACTIVE=A2.LM_INACTIVE,AC_NAME=A2.LM_AC_NAME, ALIAS=A2.LM_ALIAS, HEAD_CODE=A2.LM_HEAD_CODE,
		--   PRINT_LEDGER=A2.LM_PRINT_LEDGER FROM LM01106 A1 WITH (ROWLOCK) 
		--   JOIN '+@CDATABSENAME+'..SKU A2 (NOLOCK) ON A1.AC_CODE = A2.AC_CODE' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
		 

		--   SET @CSTEP=150 --- INSERT LM01106
		--   SET @CCMD=N'INSERT LM01106	(  UPLOADED_TO_ACTIVSTREAM, USER_CODE, EDT_USER_CODE,
		--   LAST_UPDATE, OPENING_BALANCE,OPENING_BALANCE_CR_DR, TDS_CODE, INACTIVE, AC_CODE, AC_NAME, ALIAS, 
		--   HEAD_CODE, CLOSING_BALANCE, CLOSING_BALANCE_CR_DR, PRINT_LEDGER)  
		--   SELECT  DISTINCT 0, 0000000,0000000, GETDATE() ,0, '''',0000000, A.LM_INACTIVE, A.AC_CODE, A.LM_AC_NAME,ISNULL(A.LM_ALIAS,''''),A.LM_HEAD_CODE, 0, 
		--   '''', A.LM_PRINT_LEDGER
		--   FROM '+@CDATABSENAME+'..SKU A(NOLOCK) LEFT JOIN LM01106 B(NOLOCK) ON A.AC_CODE = B.AC_CODE 
		--   WHERE B.AC_CODE IS NULL' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
		   
		 
         
    

		--   SET @CSTEP=200 -- UPDATE SECTIONM(SECTIOND)
		--   SET @CCMD=N' UPDATE A1 SET SECTION_NAME=A2.SECTION_NAME,ALIAS=A2.SM_ALIAS,INACTIVE=A2.SM_INACTIVE
		--   FROM SECTIONM A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..SKU A2 (NOLOCK) ON A1.SECTION_CODE = A2.SD_SECTION_CODE' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
		
		--   SET @CSTEP=210 --INSERT SECTIONM(SECTIOND)
		--   SET @CCMD=N'INSERT SECTIONM	( SECTION_CODE, SECTION_NAME, LAST_UPDATE, ALIAS, INACTIVE, REMARKS )  
		--   SELECT DISTINCT SD_SECTION_CODE, A.SECTION_NAME, GETDATE() ,ISNULL(SM_ALIAS,''''), SM_INACTIVE, ''''
  --         FROM '+@CDATABSENAME+'..SKU A(NOLOCK)LEFT JOIN SECTIONM B (NOLOCK) ON A.SD_SECTION_CODE=B.SECTION_CODE
	 --      WHERE B.SECTION_CODE IS NULL' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
	     
	     
		 
		--   SET @CSTEP=220 --UPDATE SECTIOND(ARTICLE)
		--   SET @CCMD=N' UPDATE A1 SET SUB_SECTION_NAME=A2.SUB_SECTION_NAME,ALIAS=A2.SD_ALIAS,INACTIVE=A2.SD_INACTIVE,
		--   MFG_CATEGORY=A2.SD_MFG_CATEGORY,SECTION_CODE=A2.SD_SECTION_CODE
		--   FROM SECTIOND A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..SKU A2 (NOLOCK) 
		--   ON A1.SUB_SECTION_CODE = A2.AR_SUB_SECTION_CODE' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
		
		--   SET @CSTEP=230 --INSERT SECTIOND(ARTICLE)
		--   SET @CCMD=N'INSERT SECTIOND( SUB_SECTION_NAME, LAST_UPDATE, ALIAS, INACTIVE, MFG_CATEGORY, 
		--   SECTION_CODE, 
		--   SUB_SECTION_CODE, REMARKS )  
		--   SELECT DISTINCT A.SUB_SECTION_NAME, GETDATE(), ISNULL(SD_ALIAS,''''), SD_INACTIVE,
		--   ISNULL(SD_MFG_CATEGORY,0),SD_SECTION_CODE, AR_SUB_SECTION_CODE, ''''  
		   
		--   FROM '+@CDATABSENAME+'..SKU A(NOLOCK) 
		--   LEFT JOIN SECTIOND B (NOLOCK) ON A.AR_SUB_SECTION_CODE=B.SUB_SECTION_CODE
		--   WHERE B.SUB_SECTION_CODE IS NULL' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
	     
		 
		--   SET @CSTEP=240 --UPDATAE UOM(ARTICLE)
		--   SET @CCMD=N' UPDATE A1 SET UOM_TYPE=A2.U_UOM_TYPE, INACTIVE=A2.U_INACTIVE,UOM_NAME=A2.U_UOM_NAME
		--   FROM UOM A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..SKU A2 (NOLOCK) ON A1.UOM_CODE = A2.AR_UOM_CODE' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
		
		
		--   SET @CSTEP=250---INSERT UOM(ARTICLE)
		--   SET @CCMD=N'INSERT UOM	( UOM_TYPE, INACTIVE, UOM_CODE, UOM_NAME, LAST_UPDATE ) 
		--   SELECT DISTINCT 	U_UOM_TYPE, U_INACTIVE, AR_UOM_CODE, U_UOM_NAME, GETDATE()FROM '+@CDATABSENAME+'..SKU A(NOLOCK) 
		--   LEFT JOIN UOM B (NOLOCK) ON A.AR_UOM_CODE=B.UOM_CODE
		--   WHERE B.UOM_CODE IS NULL' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
		 
		 
		--   SET @CSTEP=260 ---  UPDATE ARTICLE(SKU)
		--   SET @CCMD=N' UPDATE A1 SET	A1.UOM_CODE = A2.AR_UOM_CODE, A1.CODING_SCHEME = A2.AR_CODING_SCHEME,
		--   A1.SUB_SECTION_CODE = A2.AR_SUB_SECTION_CODE, A1.ARTICLE_NAME = A2.AR_ARTICLE_NAME, 
		--   A1.ARTICLE_NO = A2.AR_ARTICLE_NO,A1.INACTIVE = A2.AR_INACTIVE,A1.ALIAS = A2.AR_ALIAS,
		--   A1.DISCON = A2.AR_DISCON,A1.STOCK_NA = A2.AR_STOCK_NA,
		--   A1.GENERATE_BARCODES_WITHARTICLE_PREFIX = A2.AR_GENERATE_BARCODES_WITHARTICLE_PREFIX,
		--   A1.SKU_CODE = A2.AR_SKU_CODE,A1.ARTICLE_DESC = A2.AR_ARTICLE_DESC,
		--   A1.GEN_EAN_CODES=A2.AR_GEN_EAN_CODES,A1.ORDERITEM=A2.AR_ORDERITEM,A1.HSN_CODE=ISNULL(A2.AR_HSN_CODE,''0000000000'')
		--   FROM ARTICLE A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..SKU A2 (NOLOCK) ON A1.ARTICLE_CODE = A2.ARTICLE_CODE' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
	     

		--   SET @CSTEP=270 --INSERT ARTICLE(SKU)
		--   SET @CCMD=N'INSERT ARTICLE	( PARA2_CODE, PARA3_CODE, PARA4_CODE, PARA5_CODE, PARA6_CODE, DISCON, 
		--   WHOLESALE_PRICE, WSP_PERCENTAGE, MIN_PRICE, STOCK_NA, ARTICLE_TYPE, CREATED_ON, ARTICLE_GROUP_CODE,
		--   COMPANY_CODE, GENERATE_BARCODES_WITHARTICLE_PREFIX, ARTICLE_GEN_MODE, ARTICLE_PRD_MODE, ARTICLE_SET_CODE,
		--   OH_PERCENTAGE, OH_AMOUNT, FIX_MRP, ENABLE_FIXWT_ENTRY, FIX_WEIGHT, EXP_AMOUNT, SUPP_SPECIFIC, SUPP_AC_CODE,
		--   SUPP_ITEM_CODE, REMARKS, FIX_PRICE_ARTICLE, GROSS_PURCHASE_PRICE, DISCOUNT_PERCENTAGE, DISCOUNT_AMOUNT, 
		--   GEN_EAN_CODES, SIZE_CENTER_POINT, SIZE_RATE_DIFF, MANUAL_DISC, MANUAL_WSP, MANUAL_RSP, 
		--   AREA_WISE_RATE_APPLICABLE, ORDERITEM,  DO_AMOUNT, DO_PERCENTAGE, EXP_PERCENTAGE,
		--   ARTICLE_SET_TYPE, STYLE_NO, COLOR_NAME, COLOR_CODE, SIZE, DEBIT_MATERIAL,
		--   CODING_SCHEME, LAST_UPDATE, UOM_CODE, ALIAS, MP_PERCENTAGE, PURCHASE_PRICE, MRP, PARA1_SET,
		--   PARA2_SET, INACTIVE, SKU_CODE, DT_CREATED, USER_CODE, EDT_USER_CODE, ARTICLE_CODE, ARTICLE_NO,
		--   ARTICLE_NAME, ARTICLE_DESC, SUB_SECTION_CODE, PARA1_CODE,HSN_CODE )  
		--   SELECT DISTINCT ''0000000'', ''0000000'', ''0000000'',''0000000'',''0000000'', ISNULL(AR_DISCON,0), 0,0, 0,
		--   AR_STOCK_NA, 0, '''','''',''01'',   AR_GENERATE_BARCODES_WITHARTICLE_PREFIX, 0,0,'''',0,0, 0, 0,0, 0, 0,
		--   '''', '''', '''', 0, 0, 0, 0, AR_GEN_EAN_CODES, 0, 0,  0, 0, 0, 0, AR_ORDERITEM,
		--   0, 0, 0,  0, '''', '''', '''', '''', 0, ISNULL(AR_CODING_SCHEME,0), GETDATE(), AR_UOM_CODE, 
		--   ISNULL(AR_ALIAS,''''),0, 0, 0, 0, 0, AR_INACTIVE, ISNULL(AR_SKU_CODE,''''), '''',
		--   ''0000000'', ''0000000'', A.ARTICLE_CODE, AR_ARTICLE_NO, AR_ARTICLE_NAME, AR_ARTICLE_DESC,
		--   AR_SUB_SECTION_CODE, ''0000000'',ISNULL(AR_HSN_CODE,''0000000000'') FROM '+@CDATABSENAME+'..SKU A(NOLOCK) 
		--   LEFT JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE=B.ARTICLE_CODE
		--   WHERE B.ARTICLE_CODE IS NULL' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
	     

		--   IF ( @CLOCTYPE=2 OR @UPD_PURINFO=0 )
	 --      BEGIN
	       
	 --          SET @CSTEP=272 --INSERT (SKU)
		--	   SET @CCMD=N'INSERT SKU	( PARA2_CODE, LAST_UPDATE, PURCHASE_PRICE, PARA3_CODE, INV_DT, INV_NO, AC_CODE, RECEIPT_DT, 
		--	   PARA4_CODE, PARA5_CODE, PARA6_CODE, FORM_ID, MRP, DT_CREATED, WS_PRICE, IMAGE_NAME, TAX_AMOUNT, CHALLAN_NO, 
		--	   FIX_MRP, PRODUCT_NAME, PRODUCT_CODE, ARTICLE_CODE, PARA1_CODE, ER_FLAG, UPLOADED_TO_ACTIVSTREAM, 
		--	   BARCODE_CODING_SCHEME, EMP_CODE, VENDOR_EAN_NO, ONLINE_PRODUCT_CODE, LAST_MODIFIED_ON, BASIC_PURCHASE_PRICE,
		--	   HSN_CODE )
		--	   SELECT DISTINCT A2.PARA2_CODE, GETDATE(), 0, A2.PARA3_CODE, '''', '''', ''0000000000'', 
		--	   '''', A2.PARA4_CODE, A2.PARA5_CODE, A2.PARA6_CODE, ''0000000'', A2.MRP, A2.DT_CREATED, A2.WS_PRICE, A2.IMAGE_NAME, A2.TAX_AMOUNT, 
		--	   A2.CHALLAN_NO, A2.FIX_MRP, A2.PRODUCT_NAME, A2.PRODUCT_CODE, A2.ARTICLE_CODE, A2.PARA1_CODE, A2.ER_FLAG, A2.UPLOADED_TO_ACTIVSTREAM, 
		--	   A2.BARCODE_CODING_SCHEME, A2.EMP_CODE, A2.VENDOR_EAN_NO, A2.ONLINE_PRODUCT_CODE,
		--	    A2.LAST_MODIFIED_ON, A2.BASIC_PURCHASE_PRICE,
		--	   A2.HSN_CODE  
		--	   FROM '+@CDATABSENAME+'..SKU A2 (NOLOCK) LEFT JOIN SKU A1 WITH (NOLOCK) 
		--	   ON A1.PRODUCT_CODE = A2.PRODUCT_CODE WHERE (ISNULL(A2.AR_CODING_SCHEME,0)=1 OR  A2.BARCODE_CODING_SCHEME=1)
		--	   AND A1.PRODUCT_CODE IS NULL ' 
		--	   PRINT @CCMD 
		--	   EXEC SP_EXECUTESQL @CCMD
	         
	            
	       
		--	   SET @CSTEP=275 -- UPDATE SKU
		--	   SET @CCMD=N' UPDATE A1 SET PARA2_CODE=A2.PARA2_CODE, LAST_UPDATE=GETDATE(), 
		--	   PARA3_CODE=A2.PARA3_CODE,
		--	   PARA4_CODE=A2.PARA4_CODE,PARA5_CODE=A2.PARA5_CODE,
		--	   PARA6_CODE=A2.PARA6_CODE,FORM_ID=''0000000'',
		--	   MRP=A2.MRP,DT_CREATED=A2.DT_CREATED,WS_PRICE=A2.WS_PRICE,IMAGE_NAME=A2.IMAGE_NAME,TAX_AMOUNT=A2.TAX_AMOUNT,
		--	   CHALLAN_NO=A2.CHALLAN_NO,FIX_MRP=A2.FIX_MRP,PRODUCT_NAME=A2.PRODUCT_NAME,ARTICLE_CODE=A2.ARTICLE_CODE,
		--	   PARA1_CODE=A2.PARA1_CODE,ER_FLAG=A2.ER_FLAG,UPLOADED_TO_ACTIVSTREAM=A2.UPLOADED_TO_ACTIVSTREAM,
		--	   BARCODE_CODING_SCHEME=A2.BARCODE_CODING_SCHEME,EMP_CODE=A2.EMP_CODE,VENDOR_EAN_NO=A2.VENDOR_EAN_NO,
		--	   ONLINE_PRODUCT_CODE=A2.ONLINE_PRODUCT_CODE,
		--	   BASIC_PURCHASE_PRICE=A2.BASIC_PURCHASE_PRICE,HSN_CODE=A2.HSN_CODE
		--	   FROM SKU A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..SKU A2 (ROWLOCK) 
		--	   ON A1.PRODUCT_CODE = A2.PRODUCT_CODE' 
		--	   PRINT @CCMD 
		--	   EXEC SP_EXECUTESQL @CCMD
		 
	       
	 --      END
           
  --         IF ( @CLOCTYPE=1 AND @UPD_PURINFO=1)
  --         BEGIN
           
           
              
            
		--	   SET @CSTEP=277 --INSERT (SKU)
		--	   SET @CCMD=N'INSERT SKU	( PARA2_CODE, LAST_UPDATE, PURCHASE_PRICE, PARA3_CODE, INV_DT, INV_NO, AC_CODE, RECEIPT_DT, 
		--	   PARA4_CODE, PARA5_CODE, PARA6_CODE, FORM_ID, MRP, DT_CREATED, WS_PRICE, IMAGE_NAME, TAX_AMOUNT, CHALLAN_NO, 
		--	   FIX_MRP, PRODUCT_NAME, PRODUCT_CODE, ARTICLE_CODE, PARA1_CODE, ER_FLAG, UPLOADED_TO_ACTIVSTREAM, 
		--	   BARCODE_CODING_SCHEME, EMP_CODE, VENDOR_EAN_NO, ONLINE_PRODUCT_CODE, LAST_MODIFIED_ON, BASIC_PURCHASE_PRICE,
		--	   HSN_CODE )
		--	   SELECT 	DISTINCT  A2.PARA2_CODE, GETDATE(), A2.PURCHASE_PRICE, A2.PARA3_CODE, A2.INV_DT, A2.INV_NO, A2.AC_CODE, 
		--	   A2.RECEIPT_DT, A2.PARA4_CODE, A2.PARA5_CODE, A2.PARA6_CODE, A2.FORM_ID, A2.MRP, A2.DT_CREATED, A2.WS_PRICE, 
		--	   A2.IMAGE_NAME, A2.TAX_AMOUNT, 
		--	   A2.CHALLAN_NO, A2.FIX_MRP, A2.PRODUCT_NAME, A2.PRODUCT_CODE, A2.ARTICLE_CODE, A2.PARA1_CODE, A2.ER_FLAG, A2.UPLOADED_TO_ACTIVSTREAM, 
		--	   A2.BARCODE_CODING_SCHEME, A2.EMP_CODE, A2.VENDOR_EAN_NO, A2.ONLINE_PRODUCT_CODE, A2.LAST_MODIFIED_ON, A2.BASIC_PURCHASE_PRICE,
		--	   A2.HSN_CODE  
		--	   FROM '+@CDATABSENAME+'..SKU A2 (NOLOCK) LEFT JOIN SKU A1 WITH (NOLOCK) 
		--	   ON A1.PRODUCT_CODE = A2.PRODUCT_CODE WHERE (ISNULL(A2.AR_CODING_SCHEME,0)=1 OR  A2.BARCODE_CODING_SCHEME=1)
		--	   AND A1.PRODUCT_CODE IS NULL ' 
		--	   PRINT @CCMD 
		--	   EXEC SP_EXECUTESQL @CCMD
	   
             
                
		--	   SET @CSTEP=279 -- UPDATE SKU
		--	   SET @CCMD=N' UPDATE A1 SET PARA2_CODE=A2.PARA2_CODE, LAST_UPDATE=GETDATE(), 
		--	   PURCHASE_PRICE=A2.PURCHASE_PRICE,PARA3_CODE=A2.PARA3_CODE,INV_DT=A2.INV_DT,INV_NO=A2.INV_NO,
		--	   AC_CODE=A2.AC_CODE,RECEIPT_DT=A2.RECEIPT_DT,PARA4_CODE=A2.PARA4_CODE,PARA5_CODE=A2.PARA5_CODE,
		--	   PARA6_CODE=A2.PARA6_CODE,FORM_ID=''0000000'',
		--	   MRP=A2.MRP,DT_CREATED=A2.DT_CREATED,WS_PRICE=A2.WS_PRICE,IMAGE_NAME=A2.IMAGE_NAME,TAX_AMOUNT=A2.TAX_AMOUNT,
		--	   CHALLAN_NO=A2.CHALLAN_NO,FIX_MRP=A2.FIX_MRP,PRODUCT_NAME=A2.PRODUCT_NAME,ARTICLE_CODE=A2.ARTICLE_CODE,
		--	   PARA1_CODE=A2.PARA1_CODE,ER_FLAG=A2.ER_FLAG,UPLOADED_TO_ACTIVSTREAM=A2.UPLOADED_TO_ACTIVSTREAM,
		--	   BARCODE_CODING_SCHEME=A2.BARCODE_CODING_SCHEME,EMP_CODE=A2.EMP_CODE,VENDOR_EAN_NO=A2.VENDOR_EAN_NO,
		--	   ONLINE_PRODUCT_CODE=A2.ONLINE_PRODUCT_CODE,
		--	   BASIC_PURCHASE_PRICE=A2.BASIC_PURCHASE_PRICE,HSN_CODE=A2.HSN_CODE
		--	   FROM SKU A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..SKU A2 (NOLOCK) 
		--	   ON A1.PRODUCT_CODE = A2.PRODUCT_CODE' 
		--	   PRINT @CCMD 
		--	   EXEC SP_EXECUTESQL @CCMD
			   
		--	   SET @CSTEP=280 -- INSERT SKU_OH
		--	   SET @CCMD=N'INSERT SKU_OH( PRODUCT_CODE, DISCOUNT_AMOUNT, TAX_AMOUNT, FREIGHT, OTHER_CHARGES, 
	 --          ROUND_OFF, VALUE_ADD, EXCISE_DUTY_AMOUNT )  
  --             SELECT DISTINCT A2.SO_PRODUCT_CODE, A2.SO_DISCOUNT_AMOUNT, A2.SO_TAX_AMOUNT, A2.SO_FREIGHT, A2.SO_OTHER_CHARGES,
	 --          A2.SO_ROUND_OFF,A2.SO_VALUE_ADD, A2.SO_EXCISE_DUTY_AMOUNT
	 --          FROM '+@CDATABSENAME+'..SKU A2 (NOLOCK) 
	 --          LEFT JOIN SKU_OH A1(NOLOCK) ON A1.PRODUCT_CODE=A2.SO_PRODUCT_CODE
	 --          WHERE A1.PRODUCT_CODE IS NULL AND (ISNULL(A2.AR_CODING_SCHEME,0)=1 OR  A2.BARCODE_CODING_SCHEME=1)
	 --          AND A2.SO_PRODUCT_CODE IS NOT NULL'
								          
		--	   PRINT @CCMD 
		--	   EXEC SP_EXECUTESQL @CCMD					          
			   
		--	   SET @CSTEP=282 -- UPDATE SKU_OH
		--	   SET @CCMD=N' UPDATE A1 SET DISCOUNT_AMOUNT=A2.SO_DISCOUNT_AMOUNT, 
		--	   TAX_AMOUNT=A2.SO_TAX_AMOUNT,FREIGHT=A2.SO_FREIGHT,OTHER_CHARGES=A2.SO_OTHER_CHARGES,ROUND_OFF=A2.SO_ROUND_OFF,
		--	   VALUE_ADD=A2.SO_VALUE_ADD,EXCISE_DUTY_AMOUNT=A2.SO_EXCISE_DUTY_AMOUNT
		--	   FROM SKU_OH A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..SKU A2 (NOLOCK) 
		--	   ON A1.PRODUCT_CODE = A2.SO_PRODUCT_CODE' 
		--	   PRINT @CCMD 
		--	   EXEC SP_EXECUTESQL @CCMD
			   
             
  --         END
		 
		 
		 
		--   SET @CSTEP=290 --UPDATAE ATTRM(ATTR_KEY)
		--   SET @CCMD=N' UPDATE A1 SET ATTRIBUTE_NAME=A2.ATTRM_ATTRIBUTE_NAME, ATTRIBUTE_GROUP=A2.ATTRM_ATTRIBUTE_GROUP,
		--   ATTRIBUTE_TYPE=A2.ATTRM_ATTRIBUTE_TYPE, INACTIVE=A2.ATTRM_INACTIVE, ATTRIBUTE_ORDER=A2.ATTRM_ATTRIBUTE_ORDER,
		--   ATTRIBUTE_MODE=A2.ATTRM_ATTRIBUTE_MODE
		--   FROM ATTRM A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..SKU A2 (NOLOCK) 
		--   ON A1.ATTRIBUTE_CODE = A2.ATTRM_ATTRIBUTE_CODE' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
		   

		--   SET @CSTEP=300---INSERT ATTRM(ATTR_KEY)
		--   SET @CCMD=N' INSERT ATTRM WITH (ROWLOCK) ( ATTRIBUTE_NAME, ATTRIBUTE_GROUP, LAST_UPDATE,
		--   COMPANY_CODE, ATTRIBUTE_TYPE, 
		--   INACTIVE, REMARKS, ATTRIBUTE_ORDER, ATTRIBUTE_CODE, ATTRIBUTE_MODE )  
		--   SELECT DISTINCT A.ATTRM_ATTRIBUTE_NAME, A.ATTRM_ATTRIBUTE_GROUP, GETDATE(), ''01'', A.ATTRM_ATTRIBUTE_TYPE, A.ATTRM_INACTIVE, '''',
		--   A.ATTRM_ATTRIBUTE_ORDER, A.ATTRM_ATTRIBUTE_CODE, A.ATTRM_ATTRIBUTE_MODE
		--   FROM '+@CDATABSENAME+'..SKU A(NOLOCK) LEFT JOIN ATTRM B (NOLOCK) ON A.ATTRM_ATTRIBUTE_CODE=B.ATTRIBUTE_CODE
		--   WHERE B.ATTRIBUTE_CODE IS NULL  AND ISNULL(A.ATTRM_ATTRIBUTE_CODE,'''')<>''''' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
		 
		 
	     		 
		--   SET @CSTEP=310 --UPDATAE ATTRM(ART_ATTR)
		--   SET @CCMD=N' UPDATE A1 SET ATTRIBUTE_NAME=A2.ART_ATTRM_ATTRIBUTE_NAME, ATTRIBUTE_GROUP=A2.ART_ATTRM_ATTRIBUTE_GROUP,
		--   ATTRIBUTE_TYPE=A2.ART_ATTRM_ATTRIBUTE_TYPE, INACTIVE=A2.ART_ATTRM_INACTIVE, ATTRIBUTE_ORDER=A2.ART_ATTRM_ATTRIBUTE_ORDER,
		--   ATTRIBUTE_MODE=A2.ART_ATTRM_ATTRIBUTE_MODE
		--   FROM ATTRM A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..SKU A2 (NOLOCK) ON A1.ATTRIBUTE_CODE = A2.ART_ATTRM_ATTRIBUTE_CODE' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD

		 
		--   SET @CSTEP=320---INSERT ATTRM(ART_ATTR)
		--   SET @CCMD=N' INSERT ATTRM WITH (ROWLOCK) ( ATTRIBUTE_NAME, ATTRIBUTE_GROUP, LAST_UPDATE, COMPANY_CODE, ATTRIBUTE_TYPE, 
		--   INACTIVE, REMARKS, ATTRIBUTE_ORDER, ATTRIBUTE_CODE, ATTRIBUTE_MODE )  
		--   SELECT DISTINCT A.ART_ATTRM_ATTRIBUTE_NAME, A.ART_ATTRM_ATTRIBUTE_GROUP, GETDATE(), ''01'',
		--   A.ART_ATTRM_ATTRIBUTE_TYPE, A.ART_ATTRM_INACTIVE, '''',
		--   A.ART_ATTRM_ATTRIBUTE_ORDER, A.ART_ATTRM_ATTRIBUTE_CODE, A.ART_ATTRM_ATTRIBUTE_MODE
		--   FROM '+@CDATABSENAME+'..SKU A(NOLOCK) LEFT JOIN ATTRM B (NOLOCK) ON A.ART_ATTRM_ATTRIBUTE_CODE=B.ATTRIBUTE_CODE
		--   WHERE B.ATTRIBUTE_CODE IS NULL AND ISNULL(A.ATTRM_ATTRIBUTE_CODE ,'''')<>''''' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
		 
	 --      SET @CSTEP=330 --UPDATAE ATTR_KEY(ART_ATTR)
		--   SET @CCMD=N' UPDATE A1 SET ATTRIBUTE_CODE=A2.ATTR_ATTRIBUTE_CODE,KEY_NAME=A2.ATTR_KEY_NAME,
		--   KEY_ALIAS=A2.ATTR_KEY_ALIAS, INACTIVE=A2.ATTR_INACTIVE
		--   FROM ATTR_KEY A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..SKU A2 (NOLOCK) ON A1.KEY_CODE = A2.ATTR_KEY_CODE' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
		 
		 
		 
		--   SET @CSTEP=340---INSERT ATTR_KEY
		--   SET @CCMD=N' INSERT ATTR_KEY WITH (ROWLOCK) ( ATTRIBUTE_CODE, KEY_CODE, KEY_NAME, LAST_UPDATE,COMPANY_CODE, 
		--   KEY_ALIAS, INACTIVE)  
		--   SELECT DISTINCT A.ATTR_ATTRIBUTE_CODE, A.ATTR_KEY_CODE, A.ATTR_KEY_NAME,GETDATE(),
		--   ''01'', A.ATTR_KEY_ALIAS, A.ATTR_INACTIVE
		--   FROM '+@CDATABSENAME+'..SKU A(NOLOCK) LEFT JOIN ATTR_KEY B (NOLOCK) ON A.ATTR_KEY_CODE=B.KEY_CODE
		--   WHERE B.ATTRIBUTE_CODE IS NULL AND ISNULL(A.ATTR_KEY_CODE,'''')<>''''' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
		 

		--   SET @CSTEP=350---DELETE  ART_ATTR(ARTICLE)
		--   SET @CCMD=N' DELETE A FROM ART_ATTR A JOIN '+@CDATABSENAME+'..SKU B(NOLOCK)
		--   ON A.ARTICLE_CODE=B.ARTICLE_CODE AND A.ATTRIBUTE_CODE=B.ART_ATTRIBUTE_CODE' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD


		 
		--   SET @CSTEP=360---INSERT ART_ATTR(ARTICLE)
		--   SET @CCMD=N'INSERT ART_ATTR( ARTICLE_CODE, ATTRIBUTE_CODE, KEY_CODE, ROW_ID, 
		--   LAST_UPDATE,COMPANY_CODE,OPEN_KEY_NAME ) 
		--   SELECT DISTINCT 	AR_ARTICLE_CODE, ART_ATTRIBUTE_CODE, ART_KEY_CODE, 
		--   ART_ROW_ID, GETDATE(),''01'',ART_OPEN_KEY_NAME
		--   FROM '+@CDATABSENAME+'..SKU A(NOLOCK)
  --         LEFT JOIN ART_ATTR B (NOLOCK)ON A.ART_ARTICLE_CODE=B.ARTICLE_CODE
		--   WHERE B.ARTICLE_CODE IS NULL AND ISNULL(ART_ATTRIBUTE_CODE,'''')<>''''' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD

  --   END  
     
  --   IF @NMODE=3   ---- CUSTOMER
  --    BEGIN
      
      
  --        SET @CSTEP=5 ---- UPDATE PREFIX
  --        SET @CCMD=N'UPDATE A1 SET PREFIX_NAME=A2.PREFIX_NAME,LAST_UPDATE=GETDATE()
  --        FROM PREFIX A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..PREFIX A2 (NOLOCK) 
	 --     ON A1.PREFIX_CODE = A2.PREFIX_CODE'
	 --     PRINT @CCMD 
	 --     EXEC SP_EXECUTESQL @CCMD 
           
  --         SET @CSTEP=7 ---- INSERT PREFIX
  --        SET @CCMD=N' INSERT PREFIX	( PREFIX_CODE, PREFIX_NAME,LAST_UPDATE )  
  --        SELECT  A.PREFIX_CODE, A.PREFIX_NAME, A.LAST_UPDATE
  --        FROM  '+@CDATABSENAME+'..PREFIX A(NOLOCK) LEFT JOIN PREFIX B(NOLOCK) 
  --        ON A.PREFIX_CODE = B.PREFIX_CODE 
	 --     WHERE B.PREFIX_CODE IS NULL'
	 --     PRINT @CCMD 
		--  EXEC SP_EXECUTESQL @CCMD 
      
  --        SET @CSTEP=10 ---- UPDATE REGION
  --        SET @CCMD=N'UPDATE A1 SET REGION_NAME=A2.REGION_NAME,LAST_UPDATE=GETDATE(),INACTIVE=A2.INACTIVE,
  --        REMARKS=A2.REMARKS FROM REGIONM A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..REGIONM A2 (NOLOCK) 
	 --     ON A1.REGION_CODE = A2.REGION_CODE'
	 --     PRINT @CCMD 
	 --     EXEC SP_EXECUTESQL @CCMD 
           
           
  --        SET @CSTEP=20 ---- INSERT REGION
  --        SET @CCMD=N' INSERT REGIONM	( REGION_CODE, REGION_NAME, LAST_UPDATE, INACTIVE, REMARKS )  
  --        SELECT  A.REGION_CODE, A.REGION_NAME, A.LAST_UPDATE, A.INACTIVE, A.REMARKS 
  --        FROM  '+@CDATABSENAME+'..REGIONM A(NOLOCK) LEFT JOIN REGIONM B(NOLOCK) 
  --        ON A.REGION_CODE = B.REGION_CODE 
	 --     WHERE B.REGION_CODE IS NULL'
	 --     PRINT @CCMD 
		--  EXEC SP_EXECUTESQL @CCMD 
		   
				   
		--  SET @CSTEP=30 ---- UPDATE STATE
		--  SET @CCMD=N'UPDATE A1 SET STATE=A2.STATE,LAST_UPDATE=GETDATE(),REGION_CODE=A2.REGION_CODE,OCTROI_PERCENTAGE=A2.OCTROI_PERCENTAGE,
  --        INACTIVE=A2.INACTIVE,COMPANY_CODE=A2.COMPANY_CODE,UPLOADED_TO_ACTIVSTREAM=A2.UPLOADED_TO_ACTIVSTREAM 
  --        FROM STATE A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..STATE A2 (NOLOCK) 
		--  ON A1.STATE_CODE = A2.STATE_CODE'
		--  PRINT @CCMD 
		--  EXEC SP_EXECUTESQL @CCMD 		   
				   
				   
				   
	 --     SET @CSTEP=40 ---- INSERT STATE
	 --     SET @CCMD=N' INSERT STATE( STATE_CODE, STATE, LAST_UPDATE, REGION_CODE, OCTROI_PERCENTAGE,
  --        INACTIVE, COMPANY_CODE, UPLOADED_TO_ACTIVSTREAM ) 
  --        SELECT A.STATE_CODE, A.STATE, A.LAST_UPDATE, A.REGION_CODE, A.OCTROI_PERCENTAGE, A.INACTIVE,
  --        A.COMPANY_CODE, A.UPLOADED_TO_ACTIVSTREAM  FROM  '+@CDATABSENAME+'..STATE A(NOLOCK) 
  --        LEFT JOIN STATE B(NOLOCK) ON A.STATE_CODE = B.STATE_CODE WHERE B.STATE_CODE IS NULL'
	 --     PRINT @CCMD 
		--  EXEC SP_EXECUTESQL @CCMD
				     
				    
	 --     SET @CSTEP=50 ---- UPDATE CITY
	 --     SET @CCMD=N'UPDATE A1 SET CITY=A2.CITY,LAST_UPDATE=GETDATE(),INACTIVE=A2.INACTIVE,DISTT_CODE=A2.DISTT_CODE,
  --        COMPANY_CODE=A2.COMPANY_CODE,UPLOADED_TO_ACTIVSTREAM=A2.UPLOADED_TO_ACTIVSTREAM 
  --        FROM CITY A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..CITY A2 (NOLOCK) 
		--  ON A1.CITY_CODE = A2.CITY_CODE'
		--  PRINT @CCMD 
		--  EXEC SP_EXECUTESQL @CCMD 			    
				    
				    
		--  SET @CSTEP=60 ---- INSERT CITY
		--  SET @CCMD=N'INSERT CITY	( CITY_CODE, CITY, LAST_UPDATE, STATE_CODE, INACTIVE, DISTT_CODE, COMPANY_CODE, UPLOADED_TO_ACTIVSTREAM )  
		--  SELECT A.CITY_CODE, A.CITY, A.LAST_UPDATE, A.STATE_CODE, A.INACTIVE, A.DISTT_CODE, A.COMPANY_CODE, A.UPLOADED_TO_ACTIVSTREAM
		--  FROM  '+@CDATABSENAME+'..CITY A(NOLOCK) 
  --        LEFT JOIN CITY B(NOLOCK) ON A.CITY_CODE = B.CITY_CODE WHERE B.CITY_CODE IS NULL'
	 --     PRINT @CCMD 
		--  EXEC SP_EXECUTESQL @CCMD	
				    
				    
  --        SET @CSTEP=70 ---- UPDATE  AREA
  --        SET @CCMD=N'UPDATE A1 SET CITY_CODE=A2.CITY_CODE,LAST_UPDATE=GETDATE(),INACTIVE=A2.INACTIVE,COMPANY_CODE=A2.COMPANY_CODE,
  --        AREA_NAME=A2.AREA_NAME,PINCODE=A2.PINCODE 
  --        FROM AREA A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..AREA A2 (NOLOCK) 
		--  ON A1.AREA_CODE = A2.AREA_CODE'
		--  PRINT @CCMD 
		--  EXEC SP_EXECUTESQL @CCMD 					    
				    
				    
	 --     SET @CSTEP=80 ---- INSERT AREA
	 --     SET @CCMD=N' INSERT AREA( CITY_CODE, LAST_UPDATE, INACTIVE, COMPANY_CODE, AREA_CODE,AREA_NAME, PINCODE )  
  --        SELECT A.CITY_CODE, A.LAST_UPDATE, A.INACTIVE, A.COMPANY_CODE, A.AREA_CODE, A.AREA_NAME, A.PINCODE 
  --        FROM  '+@CDATABSENAME+'..AREA A(NOLOCK) 
  --        LEFT JOIN AREA B(NOLOCK) ON A.AREA_CODE = B.AREA_CODE WHERE B.AREA_CODE IS NULL'
  --        PRINT @CCMD 
	 --     EXEC SP_EXECUTESQL @CCMD						        
	    
  
  --        SET @CSTEP=90  ---- UPDATE CUSTDYM
  --        SET @CCMD=N'UPDATE A1 SET LAST_UPDATE = GETDATE(),DT_BIRTH = A2.DT_BIRTH,REF_CUSTOMER_CODE = A2.REF_CUSTOMER_CODE,
	 --     PREFIX_CODE = A2.PREFIX_CODE,FLAT_DISC_CUSTOMER = A2.FLAT_DISC_CUSTOMER,
		--  FLAT_DISC_PERCENTAGE = A2.FLAT_DISC_PERCENTAGE,PRIVILEGE_CUSTOMER = A2.PRIVILEGE_CUSTOMER,
		--  DT_CARD_ISSUE = A2.DT_CARD_ISSUE,DT_CARD_EXPIRY = A2.DT_CARD_EXPIRY,CARD_NO = A2.CARD_NO,
		--  CARD_NAME = A2.CARD_NAME,FLAT_DISC_PERCENTAGE_DURING_SALES = A2.FLAT_DISC_PERCENTAGE_DURING_SALES,
		--  AC_CODE = A2.AC_CODE,DT_CREATED = A2.DT_CREATED,PIN = A2.PIN,DT_ANNIVERSARY = A2.DT_ANNIVERSARY,
		--  SENT_TO_HO = A2.SENT_TO_HO,INACTIVE = A2.INACTIVE,AREA_CODE = A2.AREA_CODE,LOCATION_ID = A2.LOCATION_ID,
		--  ADDRESS0 = A2.ADDRESS0,WIZCLIP_LAST_UPDATE = A2.WIZCLIP_LAST_UPDATE,MANAGER_CARD = A2.MANAGER_CARD,
		--  CARD_CODE = A2.CARD_CODE,BILL_BY_BILL = A2.BILL_BY_BILL,FORM_NO = A2.FORM_NO,
		--  UPLOADED_TO_HO = A2.UPLOADED_TO_HO,EMAIL2 = A2.EMAIL2,TIN_NO = A2.TIN_NO,
		--  NOT_DOWNLOADED_FROM_WIZCLIP = A2.NOT_DOWNLOADED_FROM_WIZCLIP,
		--  INTERNATIONAL_CUSTOMER = A2.INTERNATIONAL_CUSTOMER,CUS_GST_STATE_CODE = A2.CUS_GST_STATE_CODE,
		--  CUS_GST_NO = A2.CUS_GST_NO,ADDRESS9 = A2.ADDRESS9,CUSTOMER_CODE = A2.CUSTOMER_CODE,
		--  USER_CUSTOMER_CODE = A2.USER_CUSTOMER_CODE,CUSTOMER_TITLE = A2.CUSTOMER_TITLE,
		--  CUSTOMER_FNAME = A2.CUSTOMER_FNAME,CUSTOMER_LNAME = A2.CUSTOMER_LNAME,ADDRESS1 = A2.ADDRESS1,
		--  ADDRESS2 = A2.ADDRESS2,PHONE1 = A2.PHONE1,PHONE2 = A2.PHONE2,MOBILE = A2.MOBILE,
		--  EMAIL = A2.EMAIL,OPENING_BALANCE = A2.OPENING_BALANCE 
		--  FROM CUSTDYM A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..CUSTDYM A2 (NOLOCK) 
		--  ON A1.CUSTOMER_CODE = A2.CUSTOMER_CODE'
		--  PRINT @CCMD 
		--  EXEC SP_EXECUTESQL @CCMD
	   
	 
	 --     SET @CSTEP=100	 --- INSERT CUSTDYM		   
		--  SET @CCMD=N'  INSERT CUSTDYM	( LAST_UPDATE, DT_BIRTH, REF_CUSTOMER_CODE, PREFIX_CODE, FLAT_DISC_CUSTOMER, 
		--  FLAT_DISC_PERCENTAGE, PRIVILEGE_CUSTOMER, DT_CARD_ISSUE, DT_CARD_EXPIRY, CARD_NO, CARD_NAME, 
		--  FLAT_DISC_PERCENTAGE_DURING_SALES, AC_CODE, DT_CREATED, PIN, DT_ANNIVERSARY, SENT_TO_HO, 
		--  INACTIVE, AREA_CODE, LOCATION_ID, ADDRESS0, WIZCLIP_LAST_UPDATE, MANAGER_CARD, CARD_CODE, 
		--  BILL_BY_BILL, FORM_NO, UPLOADED_TO_HO, EMAIL2, TIN_NO, NOT_DOWNLOADED_FROM_WIZCLIP, INTERNATIONAL_CUSTOMER,
		--  CUS_GST_STATE_CODE, CUS_GST_NO, ADDRESS9, CUSTOMER_CODE, USER_CUSTOMER_CODE, CUSTOMER_TITLE, CUSTOMER_FNAME,
		--  CUSTOMER_LNAME, ADDRESS1, ADDRESS2, PHONE1, PHONE2, MOBILE, EMAIL, OPENING_BALANCE )  
		--  SELECT  A.LAST_UPDATE, A.DT_BIRTH, A.REF_CUSTOMER_CODE, A.PREFIX_CODE, A.FLAT_DISC_CUSTOMER, A.FLAT_DISC_PERCENTAGE,
		--  A.PRIVILEGE_CUSTOMER, A.DT_CARD_ISSUE, A.DT_CARD_EXPIRY, A.CARD_NO, A.CARD_NAME, A.FLAT_DISC_PERCENTAGE_DURING_SALES,
		--  A.AC_CODE, A.DT_CREATED, A.PIN, A.DT_ANNIVERSARY, A.SENT_TO_HO, A.INACTIVE, A.AREA_CODE, A.LOCATION_ID, A.ADDRESS0,
		--  A.WIZCLIP_LAST_UPDATE, A.MANAGER_CARD, A.CARD_CODE, A.BILL_BY_BILL, A.FORM_NO, A.UPLOADED_TO_HO,
		--  A.EMAIL2, A.TIN_NO, A.NOT_DOWNLOADED_FROM_WIZCLIP, A.INTERNATIONAL_CUSTOMER, A.CUS_GST_STATE_CODE, 
		--  A.CUS_GST_NO, A.ADDRESS9, A.CUSTOMER_CODE, A.USER_CUSTOMER_CODE, A.CUSTOMER_TITLE, A.CUSTOMER_FNAME,
		--  A.CUSTOMER_LNAME, A.ADDRESS1, A.ADDRESS2, A.PHONE1, A.PHONE2, A.MOBILE, A.EMAIL, A.OPENING_BALANCE 
		--  FROM  '+@CDATABSENAME+'..CUSTDYM A(NOLOCK) LEFT JOIN CUSTDYM B(NOLOCK) ON A.CUSTOMER_CODE = B.CUSTOMER_CODE 
	 --     WHERE B.CUSTOMER_CODE IS NULL'
	 --     PRINT @CCMD 
	 --     EXEC SP_EXECUTESQL @CCMD
	      
	 --      SET @CSTEP=110 --UPDATAE ATTRM
		--   SET @CCMD=N' UPDATE A1 SET ATTRIBUTE_NAME=A2.ATTRIBUTE_NAME, ATTRIBUTE_GROUP=A2.ATTRIBUTE_GROUP,
		--   ATTRIBUTE_TYPE=A2.ATTRIBUTE_TYPE, INACTIVE=A2.INACTIVE, ATTRIBUTE_ORDER=A2.ATTRIBUTE_ORDER,
		--   ATTRIBUTE_MODE=A2.ATTRIBUTE_MODE,LAST_UPDATE=GETDATE(),REMARKS=ISNULL(A2.REMARKS,''''),
		--   MANDATORY=A2.MANDATORY
		--   FROM ATTRM A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..ATTRM A2 (NOLOCK) 
		--   ON A1.ATTRIBUTE_CODE = A2.ATTRIBUTE_CODE' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
		   

		--   SET @CSTEP=120---INSERT ATTRM(ATTR_KEY)
		--   SET @CCMD=N' INSERT ATTRM WITH (ROWLOCK) ( ATTRIBUTE_NAME, ATTRIBUTE_GROUP, LAST_UPDATE,
		--   COMPANY_CODE, ATTRIBUTE_TYPE,INACTIVE, REMARKS, ATTRIBUTE_ORDER, ATTRIBUTE_CODE, ATTRIBUTE_MODE,MANDATORY )  
		--   SELECT DISTINCT A.ATTRIBUTE_NAME, A.ATTRIBUTE_GROUP, GETDATE(), ''01'', A.ATTRIBUTE_TYPE, 
		--   A.INACTIVE, ISNULL(A.REMARKS,''''),
		--   A.ATTRIBUTE_ORDER, A.ATTRIBUTE_CODE, A.ATTRIBUTE_MODE,A.MANDATORY
		--   FROM '+@CDATABSENAME+'..ATTRM A(NOLOCK) LEFT JOIN ATTRM B (NOLOCK) ON A.ATTRIBUTE_CODE=B.ATTRIBUTE_CODE
		--   WHERE B.ATTRIBUTE_CODE IS NULL
		--   AND ISNULL(A.ATTRIBUTE_TYPE,0)<>0  ' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
		 
		 
	 --      SET @CSTEP=130 --UPDATAE ATTR_KEY(ART_ATTR)
		--   SET @CCMD=N' UPDATE A1 SET ATTRIBUTE_CODE=A2.ATTRIBUTE_CODE, KEY_NAME=A2.KEY_NAME,
		--   KEY_ALIAS=A2.KEY_ALIAS, INACTIVE=A2.INACTIVE,LAST_UPDATE=GETDATE()
		--   FROM ATTR_KEY A1 WITH (ROWLOCK) JOIN '+@CDATABSENAME+'..ATTR_KEY A2 (NOLOCK) ON A1.KEY_CODE = A2.KEY_CODE' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
		 
		 
		 
		--   SET @CSTEP=140---INSERT ATTR_KEY
		--   SET @CCMD=N' INSERT ATTR_KEY WITH (ROWLOCK) ( ATTRIBUTE_CODE, KEY_CODE, KEY_NAME, LAST_UPDATE,
		--   COMPANY_CODE, KEY_ALIAS, INACTIVE)  
		--   SELECT DISTINCT A.ATTRIBUTE_CODE, A.KEY_CODE, A.KEY_NAME,GETDATE(),
		--   ''01'', A.KEY_ALIAS, A.INACTIVE
		--   FROM '+@CDATABSENAME+'..ATTR_KEY A(NOLOCK) LEFT JOIN ATTR_KEY B (NOLOCK) ON A.KEY_CODE=B.KEY_CODE
		--   WHERE B.ATTRIBUTE_CODE IS NULL ' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
		 
		 
 
		 
		--   SET @CSTEP=150---DELETE  CUST_ATTR(CUSTOMER)
		--   SET @CCMD=N' DELETE A FROM CUST_ATTR A JOIN '+@CDATABSENAME+'..CUST_ATTR B(NOLOCK)
		--   ON A.CUSTOMER_CODE=B.CUSTOMER_CODE AND A.ATTRIBUTE_CODE=B.ATTRIBUTE_CODE
		--   AND A.KEY_CODE=B.KEY_CODE' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD
		   
		 
		--   SET @CSTEP=160---INSERT CUST_ATTR(CUSTOMER)
		--   SET @CCMD=N'INSERT CUST_ATTR( CUSTOMER_CODE, ATTRIBUTE_CODE, KEY_CODE,  
		--   LAST_UPDATE,COMPANY_CODE,KEY_NAME ) 
		--   SELECT DISTINCT 	A.CUSTOMER_CODE, A.ATTRIBUTE_CODE, A.KEY_CODE, 
		--   GETDATE(),''01'',A.KEY_NAME
		--   FROM '+@CDATABSENAME+'..CUST_ATTR A(NOLOCK)
  --         LEFT JOIN CUST_ATTR B (NOLOCK)ON A.CUSTOMER_CODE=B.CUSTOMER_CODE
		--   WHERE B.CUSTOMER_CODE IS NULL ' 
		--   PRINT @CCMD 
		--   EXEC SP_EXECUTESQL @CCMD				   
		--END 
      
END TRY
 BEGIN CATCH
       SET @CERRMSG='P:SP3S_MERGE_ALL_INV_MASTERS,STEP :'+CAST(@CSTEP AS VARCHAR(5))+',MESSAGE:'+ERROR_MESSAGE()     
       GOTO END_PROC
 END CATCH      
 
END_PROC:

     IF ISNULL(@CERRMSG,'')=''
      COMMIT TRANSACTION
     ELSE
       ROLLBACK
       
 IF ISNULL(@CERRMSG,'')<>''
 BEGIN
    --   SET @CCMD=N' IF EXISTS(SELECT * FROM SYS.DATABASES WHERE NAME='''+@CDATABSENAME+''')
			 --  BEGIN 
				--ALTER DATABASE ['+@CDATABSENAME+'] SET  SINGLE_USER WITH ROLLBACK IMMEDIATE
				--DROP DATABASE '+@CDATABSENAME+'
			 --  END'
			 --  PRINT @CCMD
			 --  EXEC SP_EXECUTESQL @CCMD
			   
			    SELECT @CERRMSG AS ERRMSG 
 END
                 
     
ELSE 
	 BEGIN
	    
	       
	   --    SET @CCMD=N' IF EXISTS(SELECT * FROM SYS.DATABASES WHERE NAME='''+@CDATABSENAME+''')
			 --  BEGIN 
				--ALTER DATABASE ['+@CDATABSENAME+'] SET  SINGLE_USER WITH ROLLBACK IMMEDIATE
				--DROP DATABASE '+@CDATABSENAME+'
			 --  END'
			 --  PRINT @CCMD
			 --  EXEC SP_EXECUTESQL @CCMD
	  

       SELECT '' AS ERRMSG
	 END

END

---END OF PROCEDURE - SP3S_MERGE_ALL_INV_MASTERS
