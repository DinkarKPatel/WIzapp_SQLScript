create PROCEDURE SP3S_UPDATE_PMTSTOCK_WSL
@cMemoId VARCHAR(40),
@bREvertFlag BIT,
@NENTRYMODE NUMERIC(1,0),
@BIS_BIN_TRANSFER BIT,
@BALLOWNEGSTOCK BIT,
@nSpId VARCHAR(40)='',
@BNEGSTOCKFOUND BIT OUTPUT
AS
BEGIN
	DECLARE @cStep VARCHAR(5),@bNewEntry BIT

	SET @bNewEntry=(CASE WHEN @bRevertFlag=1 THEN 0 ELSE 1 END)

-- UPDATING STOCK OF PMT W.R.T. CURRENT MEMO
	SET @cStep = 178		-- UPDATING PMT TABLE
	EXEC SP_CHKXNSAVELOG 'WSL',@cStep,0,@nSpId,'',1
		
	IF @NENTRYMODE<>2 /*NO NEED TO UPDATE STOCK FOR ENTRY MODE 2 AS IT IS THRU PACKSLIP*/
	BEGIN   
		SET @cStep = 182
		EXEC SP_CHKXNSAVELOG 'wSL',@cStep,0,@nSpId,'',1

		--need to change insert barcode in pmt tables --
		INSERT PMT01106(last_update,rep_id,product_code,quantity_in_stock,DEPT_ID,BIN_ID) 
		SELECT GETDATE(),'' AS REP_ID,A.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,A.DEPT_ID,A.BIN_ID
		FROM #BARCODE_NETQTY A
		LEFT JOIN PMT01106 B WITH (NOLOCK) ON A.product_code=B.product_code AND A.DEPT_ID=B.DEPT_ID AND A.BIN_ID=B.BIN_ID and isnull(b.bo_order_id,'')=''
		WHERE bin_transfer=0 AND B.product_code IS NULL AND new_entry=@bNewEntry


		--UPDATING STOCK IN PMT01106
		UPDATE A
		SET QUANTITY_IN_STOCK=QUANTITY_IN_STOCK-XN_QTY
		FROM PMT01106 A WITH (ROWLOCK)
		JOIN #BARCODE_NETQTY B ON A.product_code=B.product_code AND A.DEPT_ID=B.DEPT_ID AND A.BIN_ID=B.BIN_ID
		WHERE bin_transfer=0 AND new_entry=@bNewEntry and isnull(a.bo_order_id,'')=''

		SET @cStep = 184
		EXEC SP_CHKXNSAVELOG 'WSL',@cStep,0,@nSpId,'',1			

		IF @BALLOWNEGSTOCK=0
		BEGIN
			IF EXISTS(SELECT TOP 1 'U' FROM PMT01106 A (NOLOCK) JOIN #BARCODE_NETQTY B ON A.product_code=B.product_code
						AND A.DEPT_ID=B.DEPT_ID AND A.BIN_ID=B.BIN_ID 
						WHERE bin_transfer=0 AND A.quantity_in_stock<0  and isnull(a.bo_order_id,'')='' )
			BEGIN	
				SET @cStep = 186
				EXEC SP_CHKXNSAVELOG 'WSL',@cStep,0,@nSpId,'',1			
					  
				SELECT A.PRODUCT_CODE,A.QUANTITY_IN_STOCK,'STOCK is GOING NEGATIVE' AS ERRMSG
				FROM PMT01106 A WITH (NOLOCK)
				JOIN #BARCODE_NETQTY B ON A.product_code=B.product_code 
				AND A.DEPT_ID=B.DEPT_ID AND A.BIN_ID=B.BIN_ID 
				WHERE bin_transfer=0 AND A.quantity_in_stock<0  and isnull(a.bo_order_id,'')=''
					  
				SET @BNEGSTOCKFOUND=1
			END
		END
   	END	



	IF @BIS_BIN_TRANSFER=1
	BEGIN
		SET @cStep = 188
		EXEC SP_CHKXNSAVELOG 'wSL',@cStep,0,@nSpId,'',1
		
	--INVOICE MARKED AS BIN_TRANSFER
			
		INSERT PMT01106(last_update,rep_id,product_code,quantity_in_stock,DEPT_ID,BIN_ID) 
		SELECT GETDATE(),'' AS REP_ID,A.PRODUCT_CODE,0 AS QUANTITY_IN_STOCK,A.DEPT_ID,A.BIN_ID
		FROM #BARCODE_NETQTY A
		LEFT JOIN PMT01106 B WITH (NOLOCK) ON A.product_code=B.product_code AND A.DEPT_ID=B.DEPT_ID AND A.BIN_ID=B.BIN_ID
		WHERE bin_transfer=1 AND B.product_code IS NULL AND new_entry=@bNewEntry

		SET @cStep = 190
		EXEC SP_CHKXNSAVELOG 'wSL',@cStep,0,@nSpId,'',1
			
		--UPDATING STOCK IN PMT01106
		UPDATE A
		SET QUANTITY_IN_STOCK=QUANTITY_IN_STOCK+XN_QTY
		FROM PMT01106 A WITH (ROWLOCK)
		JOIN #BARCODE_NETQTY B ON A.product_code=B.product_code AND A.DEPT_ID=B.DEPT_ID AND A.BIN_ID=B.BIN_ID
		WHERE bin_transfer=1 AND new_entry=@bNewEntry

		/*CHECKING IF TARGET BIN STOCK IS NOT GOING NEGATIVE, IF GOING NEGATIVE, SAVING OF 
			MEMO SHOULD NOT BE ALLOWED.*/
		IF @BALLOWNEGSTOCK=0
		--CHECKING FOR NEGATIVE STOCK
		BEGIN
			SET @cStep = 192
			EXEC SP_CHKXNSAVELOG 'wSL',@cStep,0,@nSpId,'',1
			
			IF EXISTS(SELECT TOP 1 'U' FROM PMT01106 A JOIN #BARCODE_NETQTY B ON A.product_code=B.product_code
					    AND A.DEPT_ID=B.DEPT_ID AND A.BIN_ID=B.BIN_ID
						WHERE bin_transfer=1 AND A.quantity_in_stock<0)
			BEGIN	
					SET @cStep = 194
					EXEC SP_CHKXNSAVELOG 'wSL',@cStep,0,@nSpId,'',1

					SELECT A.PRODUCT_CODE,A.QUANTITY_IN_STOCK,'STOCK GOING NEGATIVE FOR TARGET BIN.' AS ERRMSG
					FROM PMT01106 A WITH (NOLOCK)
					JOIN #BARCODE_NETQTY B ON A.PRODUCT_CODE=B.PRODUCT_CODE 
					AND A.DEPT_ID=B.DEPT_ID AND A.BIN_ID=B.BIN_ID 
					WHERE  bin_transfer=1 AND quantity_in_stock<0
					  
					SET @BNEGSTOCKFOUND=1
			END
		END
	END

END
