create PROCEDURE SPOLAP_SEND_MIRROR_SLS_DATA
(  
  @CUPLOADEDXNID VARCHAR(50)  
 ,@BACKNOWLEDGE BIT=0 
 ,@CERRMSG VARCHAR(1000) OUTPUT  
)  
--WITH ENCRYPTION  
AS  
BEGIN  
 DECLARE @CMEMOID VARCHAR(50),@CSTEP VARCHAR(5)  
BEGIN TRY   
 SET @CSTEP=00  
   SET @CERRMSG=''
PRINT 'ENTER RETAIL SALE SENDING'   
   
 SET @CSTEP=10     
 
   
  SET @CMEMOID=@CUPLOADEDXNID  
 ---- IF NO MEMO FOUND , JUST END THE PROCESS  
 IF ISNULL(@CMEMOID,'')=''  
  GOTO END_PROC  

  DECLARE @nInvMode NUMERIC(1,0),@cAC_Code VARCHAR(20),@cCustomer_Code VARCHAR(20)
  DECLARE @cCols NVARCHAR(MAX),@cnullableCols NVARCHAR(MAX), @cCmdCols NVARCHAR(MAX)
  
 IF @BACKNOWLEDGE=1  
  GOTO END_PROC  
    SET @CSTEP=50  
	  SELECT @cAC_Code=ac_code,@cCustomer_Code=customer_code FROM cmm01106 (NOLOCK) WHERE cm_id=@CUPLOADEDXNID
	 SET @CSTEP=55  
	 ---- SEND THE PURCHASE MEMO MASTER TABLE  
	EXEC SP3S_GET_CURSOR_BASED_ON_OLAP_XNSSENDING_COLS @cXNTYPE='SLS',@cTABLENAME='CMM01106',@cKEYNAME='CM_ID',@cKEYVALUE=@CMEMOID,@bSKUNAMES=0,@CERRMSG=@CERRMSG OUTPUT 
	IF ISNULL(@CERRMSG,'')<>'' 
		GOTO END_PROC
	SET @CSTEP=65  
	---- SEND THE PURCHASE MEMO DETAIL TABLE  AND SKU_NAMES Details
	EXEC SP3S_GET_CURSOR_BASED_ON_OLAP_XNSSENDING_COLS @cXNTYPE='SLS',@cTABLENAME='CMD01106',@cKEYNAME='CM_ID',@cKEYVALUE=@CMEMOID,@bSKUNAMES=0,@bPMT=0,@CERRMSG=@CERRMSG OUTPUT 
	IF ISNULL(@CERRMSG,'')<>'' 
		GOTO END_PROC

	EXEC SP3S_GET_CURSOR_BASED_ON_OLAP_XNSSENDING_COLS @cXNTYPE='SLS',@cTABLENAME='cmd_cons',@cKEYNAME='CM_ID',@cKEYVALUE=@CMEMOID,@bSKUNAMES=0,@bPMT=0,@CERRMSG=@CERRMSG OUTPUT 
	IF ISNULL(@CERRMSG,'')<>'' 
		GOTO END_PROC

	SELECT 'SLS_PAYMODE_XN_DET_UPLOAD' AS TARGET_TABLENAME,A.* FROM PAYMODE_XN_DET A WHERE A.MEMO_ID =@CMEMOID AND XN_TYPE ='SLS'
	
	SET @CSTEP=75
	---- SEND THE LEDGER DETAIL TABLE 
	EXEC SPOLAP_SEND_MIRROR_XNSCUST_DATA @CREQXNID=@cCustomer_Code,@CERRMSG=@CERRMSG OUTPUT 
	IF ISNULL(@CERRMSG,'')<>'' 
		GOTO END_PROC

    SET @CSTEP=75
	---- SEND THE SKU DETAIL TABLE 
	SELECT DISTINCT 'OLAP_SKU_NAMES_UPLOAD' AS TARGET_TABLENAME,B.*, @CMEMOID AS IRR_MEMO_ID    
	FROM CMD01106 (NOLOCK) A  
	JOIN SKU_NAMES (NOLOCK) B ON A.PRODUCT_CODE  =B.PRODUCT_CODE  
	WHERE A.cm_id=@CMEMOID
	UNION
	SELECT DISTINCT 'OLAP_SKU_NAMES_UPLOAD' AS TARGET_TABLENAME,B.*, @CMEMOID AS IRR_MEMO_ID  
	FROM CMD01106 (NOLOCK) A  
	JOIN SKU_NAMES (NOLOCK) B ON LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE )))  =B.PRODUCT_CODE  
	WHERE A.CM_id=@CMEMOID
	AND CHARINDEX ('@',A.product_code )<>0 
	UNION
	SELECT DISTINCT 'OLAP_SKU_NAMES_UPLOAD' AS TARGET_TABLENAME,B.*, @CMEMOID AS IRR_MEMO_ID    
	FROM CMD_CONS (NOLOCK) A  
	JOIN SKU_NAMES (NOLOCK) B ON A.PRODUCT_CODE  =B.PRODUCT_CODE  
	WHERE A.cm_id=@CMEMOID
	UNION
	SELECT DISTINCT 'OLAP_SKU_NAMES_UPLOAD' AS TARGET_TABLENAME,B.*, @CMEMOID AS IRR_MEMO_ID  
	FROM CMD_CONS (NOLOCK) A  
	JOIN SKU_NAMES (NOLOCK) B ON LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE )))  =B.PRODUCT_CODE  
	WHERE A.CM_id=@CMEMOID
	AND CHARINDEX ('@',A.product_code )<>0 


	SET @CSTEP=85
	SELECT DISTINCT 'OLAP_PMT01106_UPLOAD' AS TARGET_TABLENAME,B.*, @CMEMOID AS IRR_MEMO_ID    
	FROM CMD01106 (NOLOCK) A  
	JOIN PMT01106 (NOLOCK) B ON A.PRODUCT_CODE  =B.PRODUCT_CODE AND B.DEPT_ID=LEFT(A.cm_id,2)  
	WHERE A.cm_id=@CMEMOID
	UNION
	SELECT DISTINCT 'OLAP_SKU_NAMES_UPLOAD' AS TARGET_TABLENAME,B.*, @CMEMOID AS IRR_MEMO_ID  
	FROM CMD01106 (NOLOCK) A  
	JOIN PMT01106 (NOLOCK) B ON LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE )))  =B.PRODUCT_CODE   AND B.DEPT_ID=LEFT(A.cm_id,2) 
	WHERE A.cm_id=@CMEMOID
	AND CHARINDEX ('@',A.product_code )<>0 
	UNION
	SELECT DISTINCT 'OLAP_PMT01106_UPLOAD' AS TARGET_TABLENAME,B.*, @CMEMOID AS IRR_MEMO_ID    
	FROM CMD_CONS (NOLOCK) A  
	JOIN PMT01106 (NOLOCK) B ON A.PRODUCT_CODE  =B.PRODUCT_CODE AND B.DEPT_ID=LEFT(A.cm_id,2)  
	WHERE A.cm_id=@CMEMOID
	UNION
	SELECT DISTINCT 'OLAP_SKU_NAMES_UPLOAD' AS TARGET_TABLENAME,B.*, @CMEMOID AS IRR_MEMO_ID  
	FROM CMD_CONS (NOLOCK) A  
	JOIN PMT01106 (NOLOCK) B ON LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE )))  =B.PRODUCT_CODE   AND B.DEPT_ID=LEFT(A.cm_id,2) 
	WHERE A.cm_id=@CMEMOID
	AND CHARINDEX ('@',A.product_code )<>0 


END TRY  
BEGIN CATCH  
 SET @CERRMSG='P: SPOLAP_SEND_MIRROR_SLS_DATA, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()  
 GOTO END_PROC  
END CATCH   
   
END_PROC:  
  
END   


