create PROCEDURE SP3SGSTSLSREPORT  
(             
  @CXNTYPE VARCHAR(10)='SLS'            
 ,@CXNID VARCHAR(40)            
 ,@CTYPE INT=0            
 ,@PRINTSETTLEMENT INT=1          
)            
AS            
BEGIN     
  
           
IF @CXNTYPE!='SLS'              
   RETURN            
  
     
     DECLARE @STOREDQTY NUMERIC(10,3),@TAXABLEVALUE NUMERIC(10,2),@STOREDGSTAMOUNT NUMERIC(10,2),  
            @PRINTQTY NUMERIC(10,3),@PRINTTAXABLEVALUE NUMERIC(10,2),  
      @CERRMSG VARCHAR(100)  ,@ClOCiD VARCHAR(5)

	  
 DECLARE @CSPID VARCHAR(20),@CTABLENAME VARCHAR(100) ,@ccmd nvarchar(max) 
  
SET NOCOUNT ON      
DECLARE @OT_TAXABLE FLOAT,@OT_SGST FLOAT,@OT_CGST FLOAT,@OT_IGST FLOAT,@OT_INCL INT,@OT_GST FLOAT      
SELECT TOP 1 @OT_INCL=VALUE FROM CONFIG WHERE CONFIG_OPTION LIKE '%CALCULATE_EXCLUSIVE_TAX_ON_OTH_CHARGES%'   
      
SELECT @OT_TAXABLE=ISNULL(ATD_CHARGES,0)      
,@OT_CGST=ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)      
,@OT_SGST=ISNULL(OTHER_CHARGES_SGST_AMOUNT,0)      
,@OT_IGST=ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)       
,@OT_GST=ISNULL(other_charges_gst_percentage,0)  
,@ClOCiD= location_Code 
FROM CMM01106 (NOLOCK) WHERE cm_id=@CXNID      
      
declare @nserverloc int      
      
select top 1 @nserverloc=server_loc  from location where dept_id =  @ClOCiD
  
  
 DECLARE @DONOT_PRINT_NRV_ZERO VARCHAR(10),@CNRVFILTER VARCHAR(1000)  
 select @DONOT_PRINT_NRV_ZERO=value  from config where config_option ='DONOT_PRINT_NRV_ZERO'   
   
   
 set @CNRVFILTER=''  
 if ISNULL(@DONOT_PRINT_NRV_ZERO,'')='1'  
 begin  
 set @CNRVFILTER=' having isnull( SUM(CASE CMD.TAX_METHOD WHEN 1 THEN ISNULL(CMD.NET,0)-ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)         
         ELSE ISNULL(CMD.XN_VALUE_WITHOUT_GST,0)        
              +ISNULL(CMD.IGST_AMOUNT,0)+ISNULL(CMD.CGST_AMOUNT,0)+ISNULL(CMD.SGST_AMOUNT,0)         
          END),0) <>0 '  
   
 end  
--SELECT @OT_TAXABLE,@OT_CGST,@OT_SGST,@OT_IGST,@OT_GST      
      
SELECT @OT_INCL=ISNULL(@OT_INCL,0),@OT_TAXABLE=ISNULL(@OT_TAXABLE,0),@OT_CGST=ISNULL(@OT_CGST,0),@OT_SGST=ISNULL(@OT_SGST,0),@OT_IGST=ISNULL(@OT_IGST,0),@OT_GST=ISNULL(@OT_GST,0)      
--VISHAL 05/12/2019: CLIENT WISE CUSTOMIZATION  
IF NOT EXISTS(SELECT * FROM CONFIG WHERE config_option='CUSTOMER_ID' AND value='AV00103')  
   IF @OT_INCL=0        
      SET @OT_TAXABLE-=(@OT_CGST+@OT_SGST+@OT_IGST)  
--VISHAL 05/12/2019: CLIENT WISE CUSTOMIZATION  
      
IF OBJECT_ID('TEMPDB..#SKU') IS NOT NULL              
   DROP TABLE #SKU               
SELECT DISTINCT S.FIX_MRP,C.FIX_MRP CMDFIXMRP,C.SR_NO,      
 LEFT(c.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',c.PRODUCT_CODE)-1,-1),LEN(c.PRODUCT_CODE ))) as PRODUCT_CODE,S.ARTICLE_CODE,S.PARA1_CODE,S.PARA2_CODE,S.PARA3_CODE,S.PARA4_CODE,S.PARA5_CODE,S.PARA6_CODE        
,SKU_PREFIX=CASE ISNULL(SS.PROMOTIONAL_SCHEME_ID,'') WHEN 'SCH0013' THEN '*' ELSE '' END  ,  
cast(cast(SS.DISCOUNT_PERCENTAGE as numeric(5,0)) as varchar(10)) +'+'+ +cast(cast(SS.DISCOUNT_PERCENTAGE2 as numeric(5,0)) as varchar(10))  AS DISCOUNT_STR         
INTO #SKU         
FROM CMD01106 C (NOLOCK) JOIN SKU S (NOLOCK) ON S.PRODUCT_CODE=C.PRODUCT_CODE       
LEFT JOIN SCHEME_SETUP_DET SS ON SS.ROW_ID=C.SLSDET_ROW_ID      
WHERE CM_ID=@CXNID        
UPDATE S SET FIX_MRP=CASE WHEN ISNULL(CMDFIXMRP,0)=0 THEN ISNULL(FIX_MRP,0) ELSE ISNULL(CMDFIXMRP,0) END FROM #SKU S        
  
;WITH CTE AS  
(  
  SELECT *,SR=ROW_NUMBER() OVER (PARTITION BY PRODUCT_CODE,SR_NO ORDER BY PRODUCT_CODE) FROM #SKU  
)       
DELETE FROM CTE WHERE SR>1   
  
DECLARE @NPRODUCTVISIBLE INT               
SELECT @NPRODUCTVISIBLE=ISVISIBLE   FROM GST_XN_DETAIL (NOLOCK) WHERE XN_TYPE ='SLS' AND ISVISIBLE=1  AND COLUMNNAME ='PRODUCT_CODE'      
SET @NPRODUCTVISIBLE=ISNULL(@NPRODUCTVISIBLE,0)    
  
--select  * into tmpsku from #SKU  
   
  
DECLARE @SAVING FLOAT ,@DISC FLOAT        
SELECT @SAVING=SUM(ISNULL(MRP,0)*ISNULL(QUANTITY,0)-ISNULL(NET,0)) FROM CMD01106 WHERE CM_ID=@CXNID        
SELECT @DISC=SUM(ISNULL(CMM_DISCOUNT_AMOUNT,0)+ISNULL(DISCOUNT_AMOUNT,0)) FROM CMD01106 WHERE CM_ID=@CXNID        
--16 JAN 2018           
IF @CTYPE=99 SET @CTYPE=0--COMMENT.REMOVE AFTER CODE BLOCK OF 99 IS FINALIZED               
--16 JAN 2018           
DECLARE @CCOLNAME VARCHAR(MAX),@DTSQL NVARCHAR(MAX),@SALE_PERSON VARCHAR(1000)            
--01 AUG 2017 : ORDER ISSUE WHEN BARCODE IS SET TO VISIBLE          
,@SNO BIT,@UOM_WISE_TOTAL VARCHAR(1000)=''      
          
SELECT @UOM_WISE_TOTAL=COALESCE(@UOM_WISE_TOTAL,'')+A      
FROM      
(      
SELECT CAST(SUM(I.QUANTITY) AS VARCHAR)+' '+U.UOM_NAME+',' A      
FROM CMD01106 I(NOLOCK)      
JOIN SKU S (NOLOCK) ON I.PRODUCT_CODE=S.PRODUCT_CODE      
JOIN ARTICLE A (NOLOCK) ON A.ARTICLE_CODE=S.ARTICLE_CODE      
JOIN UOM U (NOLOCK) ON U.UOM_CODE=A.UOM_CODE      
WHERE CM_ID=@CXNID        
GROUP BY U.UOM_NAME      
)T      
SET @UOM_WISE_TOTAL=RTRIM(@UOM_WISE_TOTAL)      
IF RIGHT(@UOM_WISE_TOTAL,1)=',' SET @UOM_WISE_TOTAL=LEFT(@UOM_WISE_TOTAL,LEN(@UOM_WISE_TOTAL)-1)      
SET @UOM_WISE_TOTAL=REPLACE(REPLACE(REPLACE(@UOM_WISE_TOTAL,'.000',''),'.00',''),'.0000','')      
      
SET @SALE_PERSON=''            
          
--01 AUG 2017 : ORDER ISSUE WHEN BARCODE IS SET TO VISIBLE          
        
DECLARE @INV_MODE_UPDATE BIT=0              
IF EXISTS(SELECT * FROM CMM01106(NOLOCK) WHERE INV_MODE=0 AND CM_ID=@CXNID)        
   SET @INV_MODE_UPDATE=1        
UPDATE A  SET INV_MODE=1 FROM  CMM01106 A (NOLOCK) WHERE INV_MODE=0 AND CM_ID=@CXNID AND @INV_MODE_UPDATE=1        
        
SET @SNO=0          
IF EXISTS(SELECT * FROM GST_XN_DETAIL (NOLOCK) WHERE DISPLAYNAME='BARCODE' AND XN_TYPE='SLS' AND ISVISIBLE=1)          
   SET @SNO=1          
--01 AUG 2017 : ORDER ISSUE WHEN BARCODE IS SET TO VISIBLE          
    
  
  --ADDRESS PICK  FROM LOCATION MASTER IN COMPANY-  
     DECLARE @CCOMP_ADRESS_PRINT_FROM_LOCATION VARCHAR(10)  
     SELECT @CCOMP_ADRESS_PRINT_FROM_LOCATION=VALUE  FROM CONFIG WHERE CONFIG_OPTION ='COMP_ADRESS_PRINT_FROM_LOCATION'  
 -- SET @CCOMP_ADRESS_PRINT_FROM_LOCATION='1'  
    
  
  --END  
  
  
    
 IF OBJECT_ID ('TEMPDB..#TMPHOLDS','U') IS NOT NULL  
    DROP TABLE #TMPHOLDS  
  
 SELECT ISNULL(J.JOB_NAME,'')JOB_NAME,  
    CONVERT(varchar(10), ISNULL(HD.DELIVERY_DT,''),121) DELIVERY_DT  
 into #TMPHOLDS  
 FROM CMD01106 A (NOLOCK)  
 JOIN HOLD_BACK_DELIVER_DET HD (NOLOCK) ON HD.REF_CMD_ROW_ID =A.ROW_ID   
 JOIN HOLD_BACK_DELIVER_MST HM (NOLOCK) ON HM.MEMO_ID =HD.MEMO_ID   
 JOIN JOBS J (NOLOCK) ON J.JOB_CODE=HD.JOB_CODE  
 WHERE CM_ID=@CXNID AND HM.CANCELLED =0  
 AND ISNULL(J.JOB_NAME,'')<>'' --and 1=2  
 group by ISNULL(J.JOB_NAME,''),  
    CONVERT(varchar(10), ISNULL(HD.DELIVERY_DT,''),121)  
   
   
 DECLARE @CJOBNAME VARCHAR(1000),@DELIVERY_DT VARCHAR(1000)  
  
    SELECT @CJOBNAME=ISNULL(@CJOBNAME+',','')+JOB_NAME ,  
           @DELIVERY_DT=ISNULL(@DELIVERY_DT+',','')+DELIVERY_DT   
     FROM #TMPHOLDS  
       
     SET @CJOBNAME=ISNULL(@CJOBNAME,'')  
     SET @DELIVERY_DT=ISNULL(@DELIVERY_DT,'')  
       
  
  
  
  
SET @SALE_PERSON=''        
SELECT @SALE_PERSON=COALESCE(@SALE_PERSON,'')+E.EMP_NAME+','        
FROM      
(      
SELECT C1.SNO,E.EMP_NAME      
FROM        
(           
SELECT DISTINCT '1'SNO,C.EMP_CODE  FROM CMD01106 C (NOLOCK) WHERE C.CM_ID=@CXNID      
UNION        
SELECT DISTINCT '2',C.EMP_CODE1 FROM CMD01106 C (NOLOCK) WHERE C.CM_ID=@CXNID      
UNION        
SELECT DISTINCT '3',C.EMP_CODE2 FROM CMD01106 C (NOLOCK) WHERE C.CM_ID=@CXNID      
)C1        
JOIN EMPLOYEE E (NOLOCK) ON E.EMP_CODE=C1.EMP_CODE       
WHERE ISNULL(E.EMP_NAME,'')<>''      
)E      
ORDER BY E.SNO      
        
SELECT @SALE_PERSON=LTRIM(RTRIM(@SALE_PERSON))              
IF RIGHT(@SALE_PERSON,1)=','              
   SET @SALE_PERSON=LEFT(@SALE_PERSON,LEN(@SALE_PERSON)-1)              
IF @SALE_PERSON<>''               
   SET @SALE_PERSON='You are attended by '+@SALE_PERSON             
DECLARE @PACKSLIPREC BIT=0        
DECLARE @PRINT_FIX_MRP BIT=0           
      
--08 JUN 2018        
--ALTER TABLE GST_SLS_CUSTOMER_CONFIG ADD PRINTCUSBAL BIT NULL      
DECLARE @CUST_BAL DECIMAL(14,2),@DR_CR VARCHAR(20),@PRINTCUSBAL BIT,@ADDRESS_OF VARCHAR(500)='CUS'      
,@PCODE VARCHAR(100),@CUST_BAL_ADV FLOAT      
SET @CUST_BAL=0      
SET @DR_CR=''      
SET @PRINTCUSBAL=0      
SELECT @PRINTCUSBAL=CAST(ISNULL(PRINTCUSBAL,0)AS BIT) FROM GST_SLS_CUSTOMER_CONFIG WHERE XN_TYPE='SLS'      
SET @PRINTCUSBAL=ISNULL(@PRINTCUSBAL,0)      

set @PRINTCUSBAL=0 -- as with discuss with sir immedialy Remove ISSUE IN BACHOOMAL SONS
IF @PRINTCUSBAL=1      
   BEGIN      
      SELECT TOP 1 @DR_CR=CUSTOMER_CODE FROM CMM01106 (NOLOCK) WHERE CM_ID=@CXNID      
      CREATE TABLE #CBAL(XN_TYPE VARCHAR(1000),MEMO_NO VARCHAR(100),MEMO_ID VARCHAR(100),      
      MEMO_DT VARCHAR(10),CR_AMT FLOAT,DR_AMT FLOAT,NET VARCHAR(1000),id int)      
      INSERT #CBAL      
      EXEC SP3S_CUSTOMERBALANCE '','',1,@DR_CR,1,2,1      
      SELECT TOP 1 @CUST_BAL_ADV=LEFT(NET,LEN(NET)-2) FROM #CBAL WHERE XN_TYPE LIKE '%BALANCE%'      
            
      SELECT @CUST_BAL=SUM(DR_AMOUNT-CR_AMOUNT) FROM CUSTDBXN WHERE CUSTOMER_CODE=@DR_CR     
      SELECT @CUST_BAL=ISNULL(@CUST_BAL,0)      
      SET @DR_CR=CASE SIGN(@CUST_BAL) WHEN 1 THEN 'DR' WHEN -1 THEN 'CR' ELSE '' END      
      SET @CUST_BAL=ABS(@CUST_BAL)      
            
      IF @CUST_BAL_ADV IS NOT NULL SET @CUST_BAL=@CUST_BAL_ADV            
   END      
--08 JUN 2018      
SELECT @ADDRESS_OF =(CASE WHEN ISNULL(CMM.party_type,1)=2 THEN 'AC' ELSE 'CUS' END) FROM CMM01106 CMM (NOLOCK) WHERE CM_ID=@CXNID      
SELECT @PCODE=DBO.GST_SLS_PARTY_NAME(CMM.CUSTOMER_CODE,'SLS',@ADDRESS_OF) FROM CMM01106 CMM (NOLOCK) WHERE CM_ID=@CXNID      
--SELECT @ADDRESS_OF=CASE LEN(ISNULL(@PCODE,'')) WHEN 5 THEN CMM.AC_CODE+';AC' ELSE CMM.CUSTOMER_CODE+';CUS' END       
SELECT @ADDRESS_OF=CASE WHEN RIGHT(@PCODE,2)='AC' THEN CMM.AC_CODE+';AC' ELSE CMM.CUSTOMER_CODE+';CUS' END       
FROM CMM01106 CMM (NOLOCK) WHERE CM_ID=@CXNID      
SELECT @PCODE=LEFT(@ADDRESS_OF,CHARINDEX(';',@ADDRESS_OF)-1),@ADDRESS_OF=SUBSTRING(@ADDRESS_OF,CHARINDEX(';',@ADDRESS_OF)+1,1000)      
--PRINT REPLICATE('*',50)+CHAR(13)+@ADDRESS_OF+CHAR(13)+@PCODE+CHAR(13)+REPLICATE('*',50)      
      
      
IF @CTYPE=1   --THERMAL      
   BEGIN          
     SET @PRINT_FIX_MRP=0          
       IF EXISTS(SELECT TOP 1 C.* FROM CMD01106 C (NOLOCK) JOIN SKU S (NOLOCK) ON S.PRODUCT_CODE=C.PRODUCT_CODE         
     WHERE C.CM_ID=@CXNID         
     --START: CHANGED ON 06 JAN 18 AFTER DISCUSSION OF ALOK WITH SANJEEV SIR        
     --AND C.MRP!=S.FIX_MRP        
     AND ISNULL(S.FIX_MRP,0)>ISNULL(C.MRP,0)        
     --END: CHANGED ON 06 JAN 18 AFTER DISCUSSION OF ALOK WITH SANJEEV SIR        
              )        
          SET @PRINT_FIX_MRP=1        
           
       DECLARE @REPORT_TYPE_1 VARCHAR(10)        
    SELECT TOP 1 @REPORT_TYPE_1=CASE WHEN REPORT_NAME LIKE 'LASER-A5%' THEN 'A5'        
            WHEN REPORT_NAME LIKE 'LASER-A4%' THEN 'A4'        
            WHEN REPORT_NAME LIKE '%THERM%' THEN 'TH'        
            ELSE 'DEFAULT' END        
       FROM GST_REPORT_CONFIG WHERE XN_TYPE=@CXNTYPE AND DEFAULT1=1          
        
     IF EXISTS(SELECT TOP 1 'U' FROM RPS_MST P WHERE isnull(P.REF_CM_ID,'')=@CXNID AND P.CANCELLED=0 )        
        SET @PACKSLIPREC=1        
  
        
     IF OBJECT_ID('TEMPDB..#DATASET1','U') IS NOT NULL        
        DROP TABLE #DATASET1              
      --HEADER BLOCK            
     SELECT --VC.DEPT_NAME COMPANY_NAME   
     tl.Dept_Print_Name COMPANY_NAME  
    ,TL.ADDRESS1 ADDRESS1  
    ,TL.ADDRESS2 ADDRESS2  
    ,TLCT.CITY  CITY  
    ,TL.PHONE PHONES_FAX  
    ,TL.TIN_NO TIN_NO  
    ,TL.TAN_NO TAN_NO  
    ,TLAR.PINCODE LOC_PINCODE,CMP.PIN AS COMP_PINCODE  
    ,TLAR.AREA_NAME LOC_AREA,COMAR.AREA_NAME COMP_AREA  
       --CMP.ADDRESS1 ,CMP.ADDRESS2      ,CMP.CITY   ,CMP.PHONES_FAX   ,CMP.TIN_NO    ,CMP.TAN_NO     
      
       ,VC.ADDRESS1 LOC_ADDRESS1,VC.ADDRESS2 LOC_ADDRESS2,VC.PHONE ,VC.CITY LOC_CITY ,      VC.TIN_NO LOC_TIN_NO ,VC.TAN_NO LOC_TAN_NO      
       ,CASE ISNULL(CMP.CIN,'') WHEN '' THEN '' ELSE 'CIN : '+CMP.CIN END AS CIN          
       ,CMP.LOGO_PATH          
       ,CASE ISNULL(L.LOC_GST_NO,'') WHEN '' THEN '' ELSE ''+L.LOC_GST_NO END AS LOC_GST_NO          
       ,(SELECT TOP 1 ISNULL(REGISTERED_ADD,'') FROM LOCATION L (NOLOCK) WHERE DEPT_ID=@ClOCiD )REGISTERED_ADDRESS          
       ,CAST(0 AS NUMERIC(10,2)) AS REVERSE_CHARGES          
       ,CMM.CM_NO AS INV_NO          
       ,CASE ISNULL((SELECT TOP 1 DATE_WITH_TIME FROM GST_COMPANY_CONFIG WHERE XN_TYPE=@CXNTYPE),0)             
             WHEN 0 THEN 'DATE : '+CONVERT(VARCHAR,CMM.CM_DT,105)             
             ELSE        'DATE : '+CONVERT(VARCHAR,CMM.CM_DT,105)+' '+CONVERT(VARCHAR,CMM.CM_TIME,108)           
        END          
        AS INV_DT          
       ,ISNULL(LS.GST_STATE_NAME,'') AS LOC_GST_STATE_NAME          
       ,LS.GST_STATE_CODE AS LOC_GST_STATE_CODE          
       ,[PARTY_NAME]=DBO.GST_SLS_PARTY_NAME(@PCODE,'SLS',@ADDRESS_OF)      
              
			    
       --04 AUG 2017 -- DATE NOT SHOWING DUE TO BLANK PARTY ADDRESS          
       --,CASE WHEN INV_MODE=1 THEN DBO.CUST_ADDRESS(CMM.CUSTOMER_CODE,1) ELSE DBO.CUST_ADDRESS(LEFT(CMM.CM_ID,2),INV_MODE) END AS PARTY_ADDRESS          
       ,CASE WHEN ISNULL(CASE WHEN isnull(INV_MODE,1)=1 THEN DBO.CUST_ADDRESS(@PCODE,1,0,@ADDRESS_OF)           
          ELSE DBO.CUST_ADDRESS(CMM.location_Code ,isnull(INV_MODE,1),0,@ADDRESS_OF)           
                         END          
        ,''          
                         )='' THEN ''          
             ELSE CASE WHEN isnull(INV_MODE,1)=1 THEN DBO.CUST_ADDRESS(@PCODE,1,0,@ADDRESS_OF)           
                       ELSE DBO.CUST_ADDRESS(CMM.location_Code ,isnull(INV_MODE,1),0,@ADDRESS_OF)           
                  END           
        END          
        AS PARTY_ADDRESS          
                  
       ,CASE WHEN ISNULL(CASE WHEN isnull(INV_MODE,1)=1 THEN DBO.CUST_ADDRESS(@PCODE,1,0,@ADDRESS_OF)           
                              ELSE DBO.CUST_ADDRESS(CMM.location_Code ,isnull(INV_MODE,1),0,@ADDRESS_OF)           
                         END          
                         ,''          
                         )='' THEN ''          
             ELSE CASE WHEN isnull(INV_MODE,1)=1 THEN DBO.CUST_ADDRESS(@PCODE,1,0,@ADDRESS_OF)           
                       ELSE DBO.CUST_ADDRESS(CMM.location_Code ,isnull(INV_MODE,1),0,@ADDRESS_OF)           
                  END           
        END          
        AS PARTY_ADDRESS1          
                  
       ,CASE WHEN ISNULL(CASE WHEN isnull(INV_MODE,1)=1 THEN DBO.CUST_ADDRESS(@PCODE,1,1,@ADDRESS_OF)           
                              ELSE DBO.CUST_ADDRESS(CMM.location_Code ,isnull(INV_MODE,1),1,@ADDRESS_OF)           
                         END          
                         ,''          
                         )='' THEN ''          
             ELSE CASE WHEN isnull(INV_MODE,1)=1 THEN DBO.CUST_ADDRESS(@PCODE,1,1,@ADDRESS_OF)           
                       ELSE DBO.CUST_ADDRESS(CMM.location_Code ,isnull(INV_MODE,1),1,@ADDRESS_OF)           
                  END           
        END          
        AS PARTY_ADDRESS2          
                  
        ,CASE WHEN ISNULL(CASE WHEN isnull(INV_MODE,1)=1 THEN DBO.CUST_ADDRESS(@PCODE,1,2,@ADDRESS_OF)           
                              ELSE DBO.CUST_ADDRESS(CMM.location_Code ,isnull(INV_MODE,1),2,@ADDRESS_OF)           
                         END          
                         ,''          
                         )='' THEN ''          
             ELSE CASE WHEN isnull(INV_MODE,1)=1 THEN DBO.CUST_ADDRESS(@PCODE,1,2,@ADDRESS_OF)           
                       ELSE DBO.CUST_ADDRESS(CMM.location_Code ,isnull(INV_MODE,1),2,@ADDRESS_OF)           
                  END           
        END          
        AS PARTY_ADDRESS3          
          
          
       ,CASE WHEN ISNULL(CASE WHEN isnull(INV_MODE,1)=1 THEN DBO.CUST_ADDRESS(@PCODE,1,3,@ADDRESS_OF)           
                              ELSE DBO.CUST_ADDRESS(@ClOCiD ,isnull(INV_MODE,1),3,@ADDRESS_OF)           
                         END          
                         ,''          
                         )='' THEN ''          
             ELSE CASE WHEN isnull(INV_MODE,1)=1 THEN DBO.CUST_ADDRESS(@PCODE,1,3,@ADDRESS_OF)           
                       ELSE DBO.CUST_ADDRESS(@ClOCiD ,isnull(INV_MODE,1),3,@ADDRESS_OF)           
                  END           
        END          
        --PHONE        
        +CASE WHEN ISNULL(CD.PHONE1,'')<>'' OR ISNULL(CD.PHONE2,'')<>'' OR ISNULL(CD.MOBILE,'')<>''         
              THEN '; '+CASE WHEN ISNULL(CD.PHONE1,'')<>'' THEN 'PHONE '+CD.PHONE1          
                             ELSE CASE WHEN ISNULL(CD.PHONE2,'')<>'' THEN 'PHONE '+CD.PHONE2          
                                       ELSE CASE WHEN ISNULL(CD.MOBILE,'')<>'' THEN CASE ISNULL((SELECT ISNULL(IS_MOBILE,0) FROM GST_SLS_CUSTOMER_CONFIG (NOLOCK) WHERE XN_TYPE='SLS'),0) WHEN 1 THEN  'MOBILE: '+CD.MOBILE ELSE '' END        
                                                 ELSE ''        
                                            END        
                                  END        
                        END        
              ELSE ''        
         END               
        AS PARTY_CITY        
                   
       --04 AUG 2017 -- DATE NOT SHOWING DUE TO BLANK PARTY ADDRESS          
                 
       --05 AUG 2017 : CORRECTION OF PARTY GSTIN VALUE          
       --,CASE WHEN INV_MODE=1 THEN LMP.AC_GST_NO ELSE TL.LOC_GST_NO END          
       ,CASE LEN(ISNULL(cmm.Party_Gst_No,'')) WHEN 0 THEN '' ELSE 'GSTIN: '+ISNULL(cmm.Party_Gst_No,'') END          
       AS PARTY_GST_NO          
       --05 AUG 2017 : CORRECTION OF PARTY GSTIN VALUE          
                 
       ,CMM.PARTY_STATE_CODE          
       ,(SELECT TOP 1 GST_STATE_NAME FROM GST_STATE_MST WHERE GST_STATE_CODE=CMM.PARTY_STATE_CODE) AS PARTY_STATE_NAME          
       ,CASE WHEN CMM.CANCELLED =1 THEN 'CANCELLED' ELSE '' END AS CANCELLED          
       --HEADER ON REGISTED_GST: 05 AUG 2017          
      ,CASE WHEN    SUBSTRING(CMM.CM_NO,5,1) ='N' THEN 'CREDIT NOTE'  
                    WHEN  SUBSTRING(CMM.CM_NO,5,1) ='E' THEN 'ESTIMATE'  
					WHEN  SUBSTRING(CMM.CM_NO,5,1) ='R' THEN 'CASH REFUND' 
					WHEN  SUBSTRING(CMM.CM_NO,5,1) ='F' THEN 'CREDIT REFUND'  
             ELSE CASE ISNULL(L.REGISTERED_GST,0) WHEN 1 THEN (SELECT TOP 1 CAPTION FROM GST_XN_CAPTION WHERE XN_TYPE='sls' AND [MODE]=1) 
			                                      WHEN 0 THEN (SELECT TOP 1 CAPTION FROM GST_XN_CAPTION WHERE XN_TYPE='sls' AND [MODE]=2) 
			      ELSE (SELECT TOP 1 CAPTION FROM GST_XN_CAPTION WHERE XN_TYPE='sls' AND [MODE]=0) END          
        END AS INVOICE_TYPE        
       --HEADER ON REGISTED_GST: 05 AUG 2017          
       ,ISNULL(LS.UT,0) AS UT          
       ,ISNULL((SELECT TOP 1 ISNULL(IS_SIGNATURE,0) FROM GST_SLS_CUSTOMER_CONFIG WHERE XN_TYPE=@CXNTYPE),0) CUST_SIGNATURE        
       ,SLS_CONFIG.LOGO AS LOGO        
  ,SLS_CONFIG.NAME AS NAME        
  ,SLS_CONFIG.ADDRESS1 AS PRINT_ADDRESS1        
  ,SLS_CONFIG.TELEPHONE1 AS TELEPHONE1        
  ,SLS_CONFIG.CIN_NO AS CIN_NO        
  ,SLS_CONFIG.DATE_WITH_TIME AS DATE_WITH_TIME        
  ,SLS_CONFIG.PRINT_SALE_PERSON AS PRINT_SALE_PERSON        
  --,@PACKSLIPREC AS PRINT_AUTO_CUT_DATE        
  ,SLS_CONFIG.PRINT_AUTO_CUT_DATE AS PRINT_AUTO_CUT_DATE        
  ,SLS_CONFIG.BILL_MRP AS PRINT_BILL_MRP        
  ,SLS_CONFIG.BILL_DISCOUNT AS PRINT_BILL_DISCOUNT        
  ,SLS_CONFIG.BILL_TAXABLE AS PRINT_BILL_TAXABLE        
  ,SLS_CONFIG.ALL_SHOW AS PRINT_ALL_SHOW        
  ,SLS_CONFIG.ITEM_TAXABLE AS PRINT_ITEM_TAXABLE        
  ,SLS_CONFIG.ITEM_GST_RATE AS PRINT_ITEM_GST_RATE        
  ,SLS_CONFIG.DISC_PER AS PRINT_DISC_PER        
  ,SLS_CONFIG.CGST_AMOUNT AS PRINT_CGST_AMOUNT        
  ,SLS_CONFIG.SGST_AMOUNT AS PRINT_SGST_AMOUNT        
  ,SLS_CONFIG.IGST_AMOUNT AS PRINT_IGST_AMOUNT        
  ,SLS_CONFIG.AMT_BEFORE_GST AS PRINT_AMT_BEFORE_GST        
  --15 JAN 2018        
  ,SLS_CONFIG.TOP_MARGIN AS TOP_MARGIN        
  ,SLS_CONFIG.BOTTOM_MARGIN AS BOTTOM_MARGIN        
  ,SLS_CONFIG.LEFT_MARGIN AS LEFT_MARGIN        
  ,SLS_CONFIG.RIGHT_MARGIN AS RIGHT_MARGIN        
  --15 JAN 2018        
  ,@SALE_PERSON SALE_PERSON            
  ,ISNULL((SELECT TOP 1 ISNULL(IS_ENABLED,0) FROM GST_TNC WHERE XN_TYPE=@CXNTYPE),0) PRINT_TERM              
  ,ISNULL((SELECT TOP 1 ISNULL(PRINT_COPIES,1) FROM GST_SLS_CUSTOMER_CONFIG WHERE XN_TYPE=@CXNTYPE),1) PRINT_COPIES            
       --15 JUL 2017            
       ,CASH_TENDERED=CASE (SELECT TOP 1 ISNULL(CASH_TENDERED,0) FROM CMM01106 (NOLOCK) WHERE CM_ID=@CXNID) WHEN 0 THEN '' ELSE 'CASH TENDERED: '+CAST((SELECT TOP 1 ISNULL(CASH_TENDERED,0) FROM CMM01106 (NOLOCK) WHERE CM_ID=@CXNID) AS VARCHAR) END       
  
  
       ,(SELECT TOP 1 ISNULL(VALUE,0) FROM CONFIG(NOLOCK) WHERE CONFIG_OPTION='ASK_CASH_TENDERED' ) AS PRINTCASHTENDER            
       ,CASE ISNULL(CMM.PAYBACK,0) WHEN 0 THEN '' ELSE 'PAYBACK: '+CAST(ISNULL(CMM.PAYBACK,0) AS VARCHAR) END AS PAYBACK          
       ,L.REGISTERED_GST [IS_REGISTERED]            
       --28 DEC 2017        
       ,SLS_CONFIG.DEFAULT_PAPER_SIZE        
       --,CAST(0 AS BIT) AS PRINT_FIX_MRP        
       ,PRINT_FIX_MRP=CASE SLS_CONFIG.ITEM_FIX_MRP WHEN 0 THEN CAST(0 AS BIT) ELSE CAST(@PRINT_FIX_MRP AS BIT) END         
       ,@CUST_BAL CUST_BAL,@DR_CR BAL_TYPE,@PRINTCUSBAL PRINTCUSBAL      
       --27 JUN 2018      
       ,ISNULL(SLS_CONFIG.PRINT_GATE_PASS,0)PRINT_GATE_PASS     
       ,CD.email AS PARTY_EMAIL     
       ,CD.form_no AS PARTY_FORM_NO    
    ,CD.COMPANY_NAME AS CUST_COMPANY_NAME  
    ,ISNULL(DTM.DT_NAME,'') AS DT_NAME  
    ,cmm.DISCOUNT_PERCENTAGE AS BILL_DISCOUNT_PERCENTAGE  
    ,cmm.DISCOUNT_AMOUNT AS BILL_DISCOUNT_AMOUNT 
	,Total_Gst_Cess_Amount 
	,cmm.ACH_NO,cmm.ACH_DT,cmm.IRN_QR_CODE,cmm.EINV_IRN_NO,CD.ADDRESS9 
	,CMM.SUBTOTAL ,CMM.TOTAL_QUANTITY ,cmm.REF_NO
    INTO #DATASET1        
  FROM CMM01106 CMM (NOLOCK)             
  LEFT JOIN (SELECT TOP 1 XN_TYPE,LOGO,NAME,ADDRESS1,TELEPHONE1,CIN_NO,DATE_WITH_TIME,PRINT_SALE_PERSON,PRINT_AUTO_CUT_DATE,BILL_MRP,BILL_DISCOUNT,BILL_TAXABLE,ALL_SHOW,ITEM_TAXABLE,ITEM_GST_RATE,DISC_PER,CGST_AMOUNT,SGST_AMOUNT,IGST_AMOUNT,AMT_BEFORE_GST
  
,ISNULL(DEFAULT_PAPER_SIZE,0)DEFAULT_PAPER_SIZE        
   --15 JAN 2018        
   ,LEFT_MARGIN  =CASE @REPORT_TYPE_1 WHEN 'TH' THEN 0.01 ELSE 0 END        
   ,RIGHT_MARGIN =CASE @REPORT_TYPE_1 WHEN 'TH' THEN 0.01 ELSE 0 END        
   ,TOP_MARGIN   =CASE @REPORT_TYPE_1 WHEN 'TH' THEN 0.01 ELSE 0 END        
   ,BOTTOM_MARGIN=CASE @REPORT_TYPE_1 WHEN 'TH' THEN 0.01 ELSE 0 END        
   --15 JAN 2018        
   ,ITEM_FIX_MRP=CAST(ISNULL(ITEM_FIX_MRP,0) AS BIT)        
   --27 JUN 2018      
   ,ISNULL(PRINT_GATE_PASS,0)PRINT_GATE_PASS      
             FROM GST_COMPANY_CONFIG         
             WHERE XN_TYPE='SLS'        
             )SLS_CONFIG ON SLS_CONFIG.XN_TYPE=@CXNTYPE        
  LEFT JOIN CUSTDYM CD (NOLOCK) ON CD.CUSTOMER_CODE=CMM.CUSTOMER_CODE               
  LEFT JOIN COMPANY CMP (NOLOCK)       
  JOIN VW_COMP_ADDRESS_SERVERLOC VC ON VC.DEPT_ID=(CASE WHEN ISNULL(@NSERVERLOC,0)=1 THEN  @ClOCiD  ELSE VC.DEPT_ID END)      
  ON CMP.COMPANY_CODE='01'                
  LEFT OUTER JOIN LOCATION L (NOLOCK) ON L.DEPT_ID =cmm.location_code              
  LEFT JOIN GST_STATE_MST LS (NOLOCK) ON LS.GST_STATE_CODE =L.GST_STATE_CODE            
  LEFT JOIN LMP01106 LMP (NOLOCK) ON LMP.AC_CODE=CMM.AC_CODE                
  LEFT JOIN GST_STATE_MST CS (NOLOCK) ON CS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE            
  LEFT JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE=LMP.AC_CODE                
  LEFT JOIN AREA CUSAR (NOLOCK) ON LMP.AREA_CODE=CUSAR.AREA_CODE                
  LEFT JOIN CITY CUSCT (NOLOCK) ON CUSAR.CITY_CODE=CUSCT.CITY_CODE               
  LEFT OUTER JOIN LOCATION TL (NOLOCK) ON TL.DEPT_ID=CMM.location_Code          
  LEFT JOIN AREA TLAR (NOLOCK) ON TL.AREA_CODE=TLAR.AREA_CODE                
  LEFT JOIN CITY TLCT (NOLOCK) ON TLAR.CITY_CODE=TLCT.CITY_CODE               
  LEFT JOIN GST_STATE_MST TS (NOLOCK) ON TS.GST_STATE_CODE=TL.GST_STATE_CODE    
  LEFT JOIN DTM (NOLOCK) ON DTM.DT_CODE =CMM.DT_CODE  
  LEFT JOIN AREA COMAR (NOLOCK) ON COMAR.AREA_CODE=CMP.AREA_CODE      
  WHERE CMM.CM_ID=@CXNID   
  
             
          
  UPDATE #DATASET1 SET ADDRESS1=REPLACE(ADDRESS1,'(WC)','')        
  ,ADDRESS2=REPLACE(ADDRESS2,'(WC)','')        
  ,CITY=REPLACE(CITY,'(WC)','')        
  ,PARTY_ADDRESS1=REPLACE(PARTY_ADDRESS1,'(WC)','')        
  ,PARTY_ADDRESS2=REPLACE(PARTY_ADDRESS2,'(WC)','')        
  ,PARTY_ADDRESS3=REPLACE(PARTY_ADDRESS3,'(WC)','')        
  ,PARTY_CITY=REPLACE(PARTY_CITY,'(WC)','')        
  SELECT TOP 1 @CCOLNAME=ISNULL(AC_CODE,'') FROM CMM01106 (NOLOCK) WHERE CM_ID=@CXNID      
  IF (SELECT LEN(ISNULL([PARTY_NAME],'')) FROM #DATASET1)=5 AND 1=2      
      UPDATE #DATASET1 SET [PARTY_NAME]=DBO.GST_SLS_PARTY_NAME(@PCODE,'SLS',@ADDRESS_OF)      
  UPDATE #DATASET1 SET [PARTY_NAME]=REPLACE(REPLACE([PARTY_NAME],';AC',''),';CUS','')            
  
  
  SET @CCOLNAME=''          
 --DETAILS BLOCK            
             
  --04 AUG 2017            
  SET @CCOLNAME='SKU.[SKU_PREFIX]+'      
  SELECT @CCOLNAME=ISNULL(@CCOLNAME+'+','  ')+SOURCENAME+'.'+QUOTENAME(COLUMNNAME) +'+'+''''+COLUMNSEPARATOR+''''+' '            
  FROM GST_XN_DETAIL (NOLOCK) WHERE XN_TYPE =@CXNTYPE AND ISVISIBLE=1          
  ORDER BY DISPLAYORDER            
  --04 AUG 2017          
              
  IF @CCOLNAME='SKU.[SKU_PREFIX]+'      
     SET @CCOLNAME='SKU.[SKU_PREFIX]'      
  ELSE         
 SELECT TOP 1 @CCOLNAME=LEFT(@CCOLNAME,LEN(@CCOLNAME)-3-LEN(COLUMNSEPARATOR))            
 FROM GST_XN_DETAIL (NOLOCK)           
 WHERE XN_TYPE=@CXNTYPE    
 
 SET @CSPID=LTRIM(RTRIM(STR(@@SPID )))
 SET @CTABLENAME  ='##TMPSLSPRINT1'+@CSPID

	SET @CCMD = N'IF OBJECT_ID(''TEMPDB..'+@CTABLENAME+''',''U'') IS NOT NULL
		DROP TABLE '+@CTABLENAME+''
	PRINT @CCMD
    EXEC SP_EXECUTESQL @CCMD
                
            
  --01 AUG 2017 : ORDER ISSUE WHEN BARCODE IS SET TO VISIBLE             
  SET @DTSQL=N'SELECT ROW_NUMBER() OVER (ORDER BY '+CASE @SNO WHEN 0 THEN @CCOLNAME ELSE 'CMD.SR_NO' END+' ) AS SR_NO,'   
  --01 AUG 2017 : ORDER ISSUE WHEN BARCODE IS SET TO VISIBLE             
            
  SET @DTSQL+=@CCOLNAME+' AS PARTICULARS ,            
      CMD.HSN_CODE [HSN_CODE],            
      CAST(SUM(CMD.QUANTITY) AS DECIMAL(10,3))QUANTITY,            
      UOM.UOM_NAME UOM_NAME,            
      CMD.MRP RATE,            
      CAST(ROUND((ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)+ISNULL(CMD.DISCOUNT_AMOUNT,0))/(CMD.MRP*CMD.QUANTITY)*100,2) AS NUMERIC(10,2))[LESS_DISCOUNT],            
      --CAST(CASE ISNULL(SKU.FIX_MRP,0) WHEN 0 THEN (ISNULL(SKU.FIX_MRP,0)-CMD.MRP)*100  ELSE (ISNULL(SKU.FIX_MRP,0)-CMD.MRP)*100/ISNULL(SKU.FIX_MRP,0) END AS NUMERIC(10,0)) AS LESS_DISCOUNT,        
      CAST(SUM(ISNULL(CMD.XN_VALUE_WITHOUT_GST,0))AS DECIMAL(18,2))[TAXABLE_VALUE],            
      CAST(DBO.CURR_GROUPING(ROUND(ISNULL(CMD.GST_PERCENTAGE,0),2),'''') AS VARCHAR)+''%''[GST],            
        
      --CAST(SUM(CMD.NET-ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS NUMERIC(10,2))        
      DBO.CURR_GROUPING(SUM(CASE CMD.TAX_METHOD WHEN 1 THEN ISNULL(CMD.NET,0)-ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)         
         ELSE ISNULL(CMD.XN_VALUE_WITHOUT_GST,0)        
              +ISNULL(CMD.IGST_AMOUNT,0)+ISNULL(CMD.CGST_AMOUNT,0)+ISNULL(CMD.SGST_AMOUNT,0)         
          END),'''')        
      AS [ITEM_NET_AMT],        
        
      ''''AS ALIAS,            
      EMPLOYEE.EMP_NAME AS SALEPERSON1,            
      EMPLOYEE1.EMP_NAME AS SALEPERSON2,             
      EMPLOYEE2.EMP_NAME AS SALEPERSON3,            
      LEFT(sku.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX (''@'',sku.PRODUCT_CODE)-1,-1),LEN(sku.PRODUCT_CODE )))  AS PARTICULARSNEW,            
      (CASE WHEN CMD.TAX_METHOD=1 THEN SECTIONM.SECTION_NAME+'' - ''+SECTIOND.SUB_SECTION_NAME             
            ELSE ''*'' + SECTIONM.SECTION_NAME+'' - ''+SECTIOND.SUB_SECTION_NAME END)             
      AS SUBSECTIONNEW        
              
      ,CAST(CAST(ROUND((SUM(ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)+ISNULL(CMD.DISCOUNT_AMOUNT,0))),2) AS NUMERIC(10,2)) AS VARCHAR)[DISCOUNT_AMOUNT]            
              
      ,REF_NO=CASE WHEN ISNULL(CMD.REF_SLS_MEMO_DT,''1900-01-01'')<>''1900-01-01''        
                     THEN ''REF NO: ''+LTRIM(RTRIM(ISNULL(CMD.REF_SLS_MEMO_NO,'''')))+'' / ''+CONVERT(VARCHAR,ISNULL(CMD.REF_SLS_MEMO_DT,''1900-01-01''),105)         
                   ELSE ''''        
              END        
      ,CAST(ISNULL(SKU.FIX_MRP,0) AS NUMERIC(10,2)) AS ITEM_FIX_MRP        
      --25 NOV 2019 START  
      ,ISNULL('''+@CJOBNAME+''','''')JOB_NAME,  
      ISNULL('''+@DELIVERY_DT+''','''')DELIVERY_DT,  
	  SUM(ISNULL(CMD.GST_CESS_AMOUNT,0)) AS GST_CESS_AMOUNT,
    CASE WHEN '+RTRIM(LTRIM(STR(@NPRODUCTVISIBLE)))+'=''1'' THEN SKU.DISCOUNT_STR ELSE '''' END AS DISCOUNT_STR  ,
	SUM(NET) AS NET
      --25 NOV 2019 END  
     INTO '+@CTABLENAME+' 
      FROM CMD01106 CMD (NOLOCK)             
      JOIN CMM01106 CMM (NOLOCK) ON CMM.CM_ID=CMD.CM_ID             
      JOIN #SKU SKU (NOLOCK) ON CASE CHARINDEX(''@'',SKU.PRODUCT_CODE) WHEN 0 THEN SKU.PRODUCT_CODE ELSE LEFT(SKU.PRODUCT_CODE,CHARINDEX(''@'',SKU.PRODUCT_CODE)-1) END      
          =CASE CHARINDEX(''@'',CMD.PRODUCT_CODE) WHEN 0 THEN CMD.PRODUCT_CODE ELSE LEFT(CMD.PRODUCT_CODE,CHARINDEX(''@'',CMD.PRODUCT_CODE)-1) END      
          AND SKU.SR_NO=CMD.SR_NO              
      JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE =SKU.ARTICLE_CODE               
      JOIN UOM (NOLOCK) ON UOM.UOM_CODE =ARTICLE.UOM_CODE               
      JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE=SECTIOND.SUB_SECTION_CODE              
      JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE=SECTIONM.SECTION_CODE              
      LEFT JOIN LOCATION TL (NOLOCK) ON TL.DEPT_ID=CMM.LOCATION_CODE            
   LEFT JOIN GST_STATE_MST LS (NOLOCK) ON LS.GST_STATE_CODE=LEFT(TL.LOC_GST_NO,2)            
   LEFT JOIN EMPLOYEE ON EMPLOYEE.EMP_CODE=CMD.EMP_CODE             
   LEFT JOIN EMPLOYEE EMPLOYEE1 ON EMPLOYEE1.EMP_CODE=CMD.EMP_CODE1             
   LEFT JOIN EMPLOYEE EMPLOYEE2 ON EMPLOYEE2.EMP_CODE=CMD.EMP_CODE2                
   LEFT OUTER JOIN PARA1 ON PARA1.PARA1_CODE=SKU.PARA1_CODE            
   LEFT OUTER JOIN PARA2 ON PARA2.PARA2_CODE=SKU.PARA2_CODE            
   LEFT OUTER JOIN PARA3 ON PARA3.PARA3_CODE=SKU.PARA3_CODE            
   LEFT OUTER JOIN PARA4 ON PARA4.PARA4_CODE=SKU.PARA4_CODE            
   LEFT OUTER JOIN PARA5 ON PARA5.PARA5_CODE=SKU.PARA5_CODE            
   LEFT OUTER JOIN PARA6 ON PARA6.PARA6_CODE=SKU.PARA6_CODE            
   LEFT OUTER JOIN ARTICLE_FIX_ATTR ATTR  (NOLOCK) ON ARTICLE.ARTICLE_CODE = ATTR.ARTICLE_CODE       
 LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE      
 LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE      
 LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE      
 LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE      
 LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE      
 LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE      
 LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE      
 LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE      
 LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE      
 LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE      
 LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE      
 LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE      
 LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE      
 LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE      
 LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE      
 LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE      
 LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE      
 LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE      
 LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE      
 LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE      
 LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE      
 LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE      
 LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE      
 LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE      
 LEFT OUTER JOIN ATTR25_MST AT25(NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE       
   WHERE CMD.CM_ID='''+@CXNID+'''            
   GROUP BY '          
   +/*01 AUG 2017 : ORDER ISSUE*/CASE @SNO WHEN 0 THEN '' ELSE 'CMD.SR_NO,' END/*01 AUG 2017 : ORDER ISSUE*/          
   +@CCOLNAME+',UOM.UOM_NAME,CMD.HSN_CODE,CMD.MRP            
      ,CAST(ROUND((ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)+ISNULL(CMD.DISCOUNT_AMOUNT,0))/(CMD.MRP*CMD.QUANTITY)*100,2) AS NUMERIC(10,2))            
      ,CAST(DBO.CURR_GROUPING(ROUND(ISNULL(CMD.GST_PERCENTAGE,0),2),'''') AS VARCHAR)+''%''              
     ,EMPLOYEE.EMP_NAME,EMPLOYEE1.EMP_NAME,EMPLOYEE2.EMP_NAME,      
      LEFT(sku.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX (''@'',sku.PRODUCT_CODE)-1,-1),LEN(sku.PRODUCT_CODE )))      
      ,(CASE WHEN CMD.TAX_METHOD=1 THEN SECTIONM.SECTION_NAME+'' - ''+SECTIOND.SUB_SECTION_NAME             
             ELSE ''*'' + SECTIONM.SECTION_NAME+'' - ''+SECTIOND.SUB_SECTION_NAME END)             
      ,ISNULL(CMD.REF_SLS_MEMO_DT,''1900-01-01'')        
      ,ISNULL(CMD.REF_SLS_MEMO_NO,'''')               
      --,CAST(ISNULL(SKU.FIX_MRP,0) AS NUMERIC(10,2))        
      ,ISNULL(SKU.FIX_MRP,0)        
   ,CASE WHEN '+RTRIM(LTRIM(STR(@NPRODUCTVISIBLE)))+'=''1'' THEN SKU.DISCOUNT_STR ELSE '''' END  
      --25 NOV 2019 START  
    '  
   +@CNRVFILTER +  
      --25 NOV 2019 END  
      ' ORDER BY 1'            
             
      PRINT @DTSQL            
      EXEC SP_EXECUTESQL @DTSQL         
     
 
  
  
  SELECT 'CMM01106' AS TABLENAME, * FROM #DATASET1    
    
    
	SET @CCMD = N'SELECT ''CMD01106'' AS TABLENAME,* FROM '+@CTABLENAME+' ORDER BY 1 '
	PRINT @CCMD
    EXEC SP_EXECUTESQL @CCMD    
    
    
	SET @CCMD = N'IF OBJECT_ID(''TEMPDB..'+@CTABLENAME+''',''U'') IS NOT NULL
		DROP TABLE '+@CTABLENAME+''
	PRINT @CCMD
    EXEC SP_EXECUTESQL @CCMD
   
            
  --3 EXISTING            
  SELECT SUM(RD.NET) AS PACKSLIPAMOUNT, RM.CM_NO AS PACKSLIPNO          
  , SUM(RD.QUANTITY+ISNULL(RD.FOC_QUANTITY,0)) PACKSLIPQTY            
  FROM  RPS_MST RM (NOLOCK)   
  JOIN RPS_DET RD(NOLOCK) ON RM.CM_ID=RD.CM_ID               
  JOIN CMD01106 C (NOLOCK) ON C.PACK_SLIP_ROW_ID=RD.ROW_ID  and c.cm_id =rm.ref_cm_id           
  WHERE rm.ref_cm_id =@CXNID            
  GROUP BY RM.CM_NO        
            
    
        
  SELECT GST      
  ,[TAXABLE_VALUES] AS [TAXABLE_VALUES]      
,[CGST_AMOUNT] AS [CGST_AMOUNT]      
  ,[SGST_AMOUNT]  AS [SGST_AMOUNT]      
  ,[IGST_AMOUNT]AS [IGST_AMOUNT]      
  ,[Gst_Cess_Amount]  
  ,[GST_COLLECTION]+@OT_CGST+@OT_SGST+@OT_IGST AS [GST_COLLECTION]      
  ,[IGST_PER]=CASE ISNULL([IGST_AMOUNT],0) WHEN 0 THEN '0%' WHEN [GST_COLLECTION] THEN GST ELSE GST END            
  ,[CGST_PER]=CASE ISNULL([CGST_AMOUNT],0) WHEN 0 THEN '0%' ELSE DBO.CURR_GROUPING(ROUND(CAST(REPLACE([GST],'%','') AS DECIMAL(10,2))/2,2),'')+'%' END            
  ,[SGST_PER]=CASE ISNULL([SGST_AMOUNT],0) WHEN 0 THEN '0%' ELSE DBO.CURR_GROUPING(ROUND(CAST(REPLACE([GST],'%','') AS DECIMAL(10,2))/2,2),'')+'%' END            
  FROM            
  (SELECT CAST(DBO.CURR_GROUPING(GST_PERCENTAGE,'') AS VARCHAR)+'%'[GST]            
   ,ISNULL(SUM(XN_VALUE_WITHOUT_GST),0) AS [TAXABLE_VALUES]            
   ,ISNULL(SUM(CGST_AMOUNT),0)[CGST_AMOUNT]             
   ,ISNULL(SUM(SGST_AMOUNT),0)[SGST_AMOUNT]             
   ,ISNULL(SUM(IGST_AMOUNT),0)[IGST_AMOUNT]   
   ,ISNULL(SUM(Gst_Cess_Amount ),0) [Gst_Cess_Amount]       
   ,ISNULL(SUM(CGST_AMOUNT+SGST_AMOUNT+IGST_AMOUNT),0)[GST_COLLECTION]            
  FROM CMD01106 (NOLOCK) WHERE CM_ID=@CXNID            
  GROUP BY CAST(DBO.CURR_GROUPING(GST_PERCENTAGE,'') AS VARCHAR)        
  )GST            
      
--TERMS AND CONDITIONS            
  SELECT TNC_1,TNC_2,TNC_3,TNC_4,TNC_5,TNC_6 FROM GST_TNC WHERE XN_TYPE=@CXNTYPE            
            
  --QUOTATIONS            
  SELECT QUOTATION1 [QUOTATION1],QUOTATION2 [QUOTATION2]            
  ,(SELECT TOP 1 ISNULL(REGISTERED_ADD,'') FROM LOCATION L (NOLOCK) WHERE DEPT_ID=@ClOCiD )REGISTERED_ADDRESS            
  FROM GST_QUOTATION_MST WHERE XN_TYPE=@CXNTYPE            
              
  DECLARE @PAYMODE VARCHAR(1000)            
  SET @PAYMODE='SETTLEMENT: '            
  ;WITH CTE AS            
  (            
    SELECT 'CC' AS PAYMODE_NAME,SUM(AMOUNT/(CASE WHEN A.currency_conversion_rate<=0 THEN 1 ELSE A.currency_conversion_rate END)) AMT             
    FROM PAYMODE_XN_DET A (NOLOCK)             
    JOIN PAYMODE_MST B (NOLOCK) ON A.PAYMODE_CODE=B.PAYMODE_CODE              
    WHERE A.XN_TYPE =@CXNTYPE AND A.MEMO_ID=@CXNID          
    AND B.PAYMODE_GRP_CODE='0000002'          
    UNION          
    SELECT PAYMODE_NAME=CASE B.PAYMODE_NAME WHEN 'INR' THEN 'CASH' ELSE B.PAYMODE_NAME END            
    ,SUM(AMOUNT/(CASE WHEN A.currency_conversion_rate<=0 THEN 1 ELSE A.currency_conversion_rate END)) AMT             
    FROM PAYMODE_XN_DET A (NOLOCK)             
    JOIN PAYMODE_MST B (NOLOCK) ON A.PAYMODE_CODE=B.PAYMODE_CODE              
    WHERE A.XN_TYPE =@CXNTYPE AND A.MEMO_ID=@CXNID          
    AND B.PAYMODE_GRP_CODE!='0000002'          
    GROUP BY B.PAYMODE_NAME            
   )            
   SELECT @PAYMODE=COALESCE(@PAYMODE,'')+PAYMODE_NAME+': '+DBO.CURR_GROUPING(AMT,',')+REPLICATE(CHAR(32),3) FROM CTE            
   WHERE ISNULL(AMT,0)<>0         
          
   IF OBJECT_ID('TEMPDB..#A','U') IS NOT NULL        
      DROP TABLE #A        
           
   SELECT CMP.COMPANY_NAME,CMP.ADDRESS1,CMP.ADDRESS2,CMP.CITY+'-'+CMP.PIN AS CITY,CMP.PHONES_FAX,CMP.TIN_NO,CMP.TAN_NO              
   ,CMP.CIN,CMP.LOGO_PATH,RTRIM(LTRIM(CUS.CUSTOMER_TITLE+' '+CUS.CUSTOMER_FNAME+' '+CUS.CUSTOMER_LNAME)) AS CUSTOMER              
   ,RTRIM(LTRIM(CUS.ADDRESS1+' '+CUS.ADDRESS2+' '+CUSCT.CITY        
    +' '        
    +CASE WHEN CUS.MOBILE<>'' THEN 'MOB:-'+CUS.MOBILE ELSE '' END))         
    AS CUSTOMERADDRESS        
   ,CMM.CM_NO AS [NO]        
   ,CONVERT(VARCHAR,CMM.CM_DT,105) AS DATE        
   ,RIGHT(CONVERT(VARCHAR,CMM.CM_TIME,100),7) AS TIME           
   ,(SELECT SUM(XN_VALUE_WITHOUT_GST) FROM CMD01106 (NOLOCK) WHERE CM_ID=@CXNID)        
    SUBTOTAL            
   ,NET_AMOUNT=CASE SUBSTRING(CM_NO,5,1) WHEN 'N' THEN ABS(CMM.NET_AMOUNT) ELSE CMM.NET_AMOUNT END            
   ,CMM.REMARKS            
   ,CONVERT(NUMERIC(18,2),CMM.DISCOUNT_PERCENTAGE) AS DISCOUNT_PERCENTAGE              
   ,CONVERT(NUMERIC(18,2),CMM.DISCOUNT_AMOUNT) AS DISCOUNT_AMOUNT            
   --,CMM.ATD_CHARGES AS OTHERCHARGES            
   ,@OT_TAXABLE AS OTHERCHARGES            
   ,ROUND_OFF +isnull(gst_round_off,0) as    ROUND_OFF          
   ,'' AS SALEPERSON ,'' AS SALEPERSON2,'' AS SALEPERSON3,@PAYMODE AS PAYMENTS            
   ,'OUT : 1.00  PCS' AS OUTQUANTITY        
   ,'IN : 1.00  PCS' AS INQUANTITY        
   ,CMP.EMAIL_ID,U.USERNAME            
   ,CUS.USER_CUSTOMER_CODE            
   ,CMM.CASH_TENDERED            
   ,ISNULL(CMM.PAYBACK,0)AS PAYBACK            
   ,CMM.CM_DT            
   ,CMD.EXCLUSIVEAMOUNT AS TAX_AMOUNT            
   ,CMD.INCLUSIVEAMOUNT          
   ,CMD.EXCLUSIVEAMOUNT            
   ,CMP.BL_COMPANY_NAME            
   ,DBO.FN_CASHMEMO_HEADER_CAPTION(@CXNID) AS CASHMEMO_HEADER_CAPTION    
   ,ISNULL(CMM.OTHER_CHARGES_IGST_AMOUNT,0)+(SELECT SUM(IGST_AMOUNT) FROM CMD01106 (NOLOCK) WHERE CM_ID=@CXNID)IGST_COLLECTION        
   ,ISNULL(CMM.OTHER_CHARGES_CGST_AMOUNT,0)+(SELECT SUM(CGST_AMOUNT) FROM CMD01106 (NOLOCK) WHERE CM_ID=@CXNID)CGST_COLLECTION            
   ,ISNULL(CMM.OTHER_CHARGES_SGST_AMOUNT,0)+(SELECT SUM(SGST_AMOUNT) FROM CMD01106 (NOLOCK) WHERE CM_ID=@CXNID)SGST_COLLECTION  
   ,ISNULL(cmm.TOTAL_GST_CESS_AMOUNT,0) AS  TOTAL_GST_CESS_AMOUNT         
   ,PRINT_SETTLEMENT=CASE ISNULL(@PRINTSETTLEMENT,1)         
        WHEN 1 THEN (SELECT TOP 1 VALUE FROM CONFIG WHERE CONFIG_OPTION='OPEN_CASHIER_FOR_CASHMEMOS')            
        ELSE CASE (SELECT TOP 1 VALUE FROM CONFIG WHERE CONFIG_OPTION='OPEN_CASHIER_FOR_CASHMEMOS')          
             WHEN 1 THEN 0         
             ELSE 1         
          END          
        END   
   ,(SELECT SUM(QUANTITY*MRP) FROM CMD01106 (NOLOCK) WHERE CM_ID=@CXNID)TOTAL_MRP ,  
   cmd.TOTAL_DISCOUNT  
  -- ,ISNULL(DTM.DT_NAME,'') AS DT_NAME  
   INTO #A                 
   FROM CMM01106 CMM (NOLOCK)             
    LEFT OUTER JOIN              
   (              
    SELECT CM_ID,             
    SUM(TAX_AMOUNT) AS TAX_AMOUNT,              
    SUM (CASE WHEN TAX_METHOD=1 THEN (TAX_AMOUNT)ELSE 0 END)AS INCLUSIVEAMOUNT,              
    SUM (CASE WHEN TAX_METHOD=2 THEN (TAX_AMOUNT)ELSE 0 END)AS EXCLUSIVEAMOUNT  ,  
    SUM(ISNULL(DISCOUNT_AMOUNT,0)+ISNULL(CMM_DISCOUNT_AMOUNT,0)) as TOTAL_DISCOUNT  
    FROM CMD01106 (NOLOCK)                  
    GROUP BY CM_ID            
   ) CMD ON CMD.CM_ID = CMM.CM_ID                 
   JOIN USERS U (NOLOCK) ON U.USER_CODE=CMM.USER_CODE              
   JOIN COMPANY CMP (NOLOCK) ON CMP.COMPANY_CODE='01'              
   JOIN CUSTDYM CUS (NOLOCK) ON CMM.CUSTOMER_CODE=CUS.CUSTOMER_CODE              
   JOIN AREA CUSAR (NOLOCK) ON CUS.AREA_CODE=CUSAR.AREA_CODE              
   JOIN CITY CUSCT (NOLOCK) ON CUSAR.CITY_CODE=CUSCT.CITY_CODE  
  -- LEFT JOIN DTM (NOLOCK) ON DTM.DT_CODE =CMM.DT_CODE  
   WHERE CMM.CM_ID=@CXNID            
           
   UPDATE #A SET ADDRESS1=REPLACE(ADDRESS1,'(WC)','')        
   ,ADDRESS2=REPLACE(ADDRESS2,'(WC)','')        
   ,CITY=REPLACE(CITY,'(WC)','')        
   ,CUSTOMERADDRESS=REPLACE(CUSTOMERADDRESS,'(WC)','')        
        
   SELECT * FROM #A --DATASET1/TYPE1      
           
   --GST_OH_CONFIG ON 17 JUL 2017            
   SELECT *             
   FROM            
   (            
     SELECT CASE OH_NAME WHEN 'OC' THEN 'OTHER CHARGES' ELSE OH_NAME END AS OH_NAME            
     ,HSN_CODE AS HSNSAC_CODE            
     ,OH_GST_PER=CASE OH_NAME WHEN 'OC' THEN OTHER_CHARGES_GST_PERCENTAGE END            
     ,OH_SGST_AMOUNT=CASE OH_NAME WHEN 'OC' THEN ISNULL(OTHER_CHARGES_SGST_AMOUNT,0) END            
     ,OH_CGST_AMOUNT=CASE OH_NAME WHEN 'OC' THEN ISNULL(OTHER_CHARGES_CGST_AMOUNT,0) END            
     ,OH_IGST_AMOUNT=CASE OH_NAME WHEN 'OC' THEN ISNULL(OTHER_CHARGES_IGST_AMOUNT,0) END            
     FROM GST_OH_CONFIG,CMM01106 (NOLOCK)            
     WHERE CM_ID=@CXNID            
  )T            
  WHERE ISNULL(OH_GST_PER,0)<>0            
      
      
 --ADDED ON REQ OF MR VED ON 21 JUN 2018      
 SELECT  CMM.CM_ID      
 ,SKU.HSN_CODE HSN      
 ,U.USERNAME CASHIER      
 ,SM.SECTION_NAME      
 ,SD.SUB_SECTION_NAME      
 ,ARTICLE.ARTICLE_NO      
 ,LEFT(sku.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',sku.PRODUCT_CODE)-1,-1),LEN(sku.PRODUCT_CODE ))) as product_code       
 ,CMD.QUANTITY SLIP_QTY      
 ,1 SECTION_COUNT      
 ,E.EMP_NAME SALESMAN      
 ,E1.EMP_NAME SALESMAN1      
 ,E2.EMP_NAME SALESMAN2      
 ,(SELECT SUM(C1.QUANTITY) FROM CMD01106 C1 (NOLOCK) WHERE C1.CM_ID=CMM.CM_ID) BILL_QTY      
 ,CMP.COMPANY_NAME      
 ,CMP.ADDRESS1      
 ,CMP.ADDRESS2      
 ,CMP.CITY      
 ,CMP.PHONES_FAX      
 ,CMP.TIN_NO      
 ,CMP.TAN_NO      
 ,CASE ISNULL(CMP.CIN,'') WHEN '' THEN '' ELSE 'CIN : '+CMP.CIN END AS CIN      
 ,CMP.LOGO_PATH      
 ,CMD.NET AS ITEM_NET  
 FROM CMM01106 CMM (NOLOCK)             
 JOIN CMD01106 CMD (NOLOCK) ON CMM.CM_ID=CMD.CM_ID      
 JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=CMD.PRODUCT_CODE      
 JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE=ARTICLE.ARTICLE_CODE      
 JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE      
 JOIN SECTIONM SM (NOLOCK) ON SM.SECTION_CODE=SD.SECTION_CODE      
 LEFT JOIN EMPLOYEE E (NOLOCK) ON E.EMP_CODE=CMD.EMP_CODE      
 LEFT JOIN EMPLOYEE E1 (NOLOCK) ON E1.EMP_CODE=CMD.EMP_CODE1      
 LEFT JOIN EMPLOYEE E2 (NOLOCK) ON E2.EMP_CODE=CMD.EMP_CODE2      
 LEFT JOIN (SELECT TOP 1 * FROM COMPANY (NOLOCK) WHERE COMPANY_CODE='01')CMP ON 1=1      
 LEFT JOIN USERS U (NOLOCK) ON U.USER_CODE=CMM.USER_CODE      
 WHERE CMM.CM_ID=@CXNID       
 --ADDED ON REQ OF MR VED ON 21 JUN 2018      
      
               
 END--MODE 1            
            
            
            
            
ELSE IF @CTYPE=0--MODE @CTYPE=0        
   BEGIN          
         
    --HEADER BLOCK        
    DECLARE @REPORT_TYPE VARCHAR(10)        
    SELECT TOP 1 @REPORT_TYPE=CASE WHEN REPORT_NAME LIKE 'LASER-A5%' THEN 'A5'        
         WHEN REPORT_NAME LIKE 'LASER-A4%' THEN 'A4'        
         ELSE 'DEFAULT' END        
    FROM GST_REPORT_CONFIG WHERE XN_TYPE=@CXNTYPE AND DEFAULT1=1          
            
    IF EXISTS(SELECT TOP 1 C.* FROM CMD01106 C (NOLOCK) JOIN SKU S (NOLOCK) ON S.PRODUCT_CODE=C.PRODUCT_CODE         
     WHERE C.CM_ID=@CXNID         
     --START: CHANGED ON 06 JAN 18 AFTER DISCUSSION OF ALOK WITH SANJEEV SIR        
     --AND C.MRP!=S.FIX_MRP        
     AND ISNULL(S.FIX_MRP,0)>ISNULL(C.MRP,0)        
     --END: CHANGED ON 06 JAN 18 AFTER DISCUSSION OF ALOK WITH SANJEEV SIR        
              )        
       SET @PRINT_FIX_MRP=1        
               
    IF OBJECT_ID('TEMPDB..#DATASET0','U') IS NOT NULL        
       DROP TABLE #DATASET0                   
               
    SELECT --VC.DEPT_NAME COMPANY_NAME   
     tl.Dept_Print_Name  COMPANY_NAME  
    ,TL.ADDRESS1 ADDRESS1  
    ,TL.ADDRESS2 ADDRESS2  
    ,TLCT.CITY CITY  
    ,TL.PHONE PHONES_FAX  
    ,TL.TIN_NO TIN_NO  
    ,TL.TAN_NO TAN_NO  
    ,TLAR.PINCODE LOC_PINCODE,CMP.PIN AS COMP_PINCODE  
    ,TLAR.AREA_NAME LOC_AREA,COMAR.AREA_NAME COMP_AREA  
   
   -- ,CMP.ADDRESS1,CMP.ADDRESS2,CMP.CITY,CMP.PHONES_FAX,CMP.TIN_NO,CMP.TAN_NO        
    ,VC.ADDRESS1 LOC_ADDRESS1,VC.ADDRESS2 LOC_ADDRESS2,VC.PHONE,VC.CITY LOC_CITY,VC.TIN_NO LOC_TIN_NO,VC.TAN_NO LOC_TAN_NO      
 /*      
    --,CMP.ADDRESS1      
    --,CMP.ADDRESS2      
    --,CMP.CITY      
    --,CMP.TIN_NO      
    --,CMP.TAN_NO      
    ,VC.ADDRESS1      
    ,VC.ADDRESS2      
    ,CMP.PHONES_FAX      
    ,VC.PHONE      
    ,VC.CITY      
    ,VC.TIN_NO      
    ,VC.TAN_NO      
    */      
    ,CASE ISNULL(CMP.CIN,'') WHEN '' THEN '' ELSE 'CIN : '+CMP.CIN END AS CIN      
    ,CMP.LOGO_PATH      
    ,CASE ISNULL(L.LOC_GST_NO,'') WHEN '' THEN '' ELSE 'GSTIN : '+L.LOC_GST_NO END AS LOC_GST_NO      
    ,CAST(0 AS NUMERIC(10,2)) AS REVERSE_CHARGES      
    ,CMM.CM_NO AS INV_NO      
    ,CASE ISNULL((SELECT TOP 1 DATE_WITH_TIME FROM GST_COMPANY_CONFIG WHERE XN_TYPE=@CXNTYPE),0)             
        WHEN 0 THEN 'DATE : '+CONVERT(VARCHAR,CMM.CM_DT,105)            
        ELSE 'DATE : '+CONVERT(VARCHAR,CMM.CM_DT,105)+' '+CONVERT(VARCHAR,CMM.CM_TIME,108) END             
   AS INV_DT,            
             
   ISNULL(LS.GST_STATE_NAME,'') AS LOC_GST_STATE_NAME,              
   LS.GST_STATE_CODE AS LOC_GST_STATE_CODE,              
   [PARTY_NAME]=DBO.GST_SLS_PARTY_NAME(@PCODE,'SLS',@ADDRESS_OF),            
   --CASE WHEN INV_MODE=1 THEN RTRIM(LTRIM(LMP.ADDRESS1+' '+LMP.ADDRESS2+' '+CUSCT.CITY)) ELSE TLAR.AREA_NAME+' '+TLCT.CITY END AS PARTY_ADDRESS,          
             
   --04 AUG 2017 -- DATE NOT SHOWING DUE TO BLANK PARTY ADDRESS          
   CASE WHEN ISNULL(CASE WHEN isnull(INV_MODE,1)=1 THEN DBO.CUST_ADDRESS(@PCODE,isnull(INV_MODE,1),0,@ADDRESS_OF) ELSE DBO.CUST_ADDRESS(CMM.location_Code ,isnull(INV_MODE,1),0,@ADDRESS_OF) END,'')='' THEN ''          
        ELSE CASE WHEN isnull(INV_MODE,1)=1 THEN DBO.CUST_ADDRESS(CMM.CUSTOMER_CODE,isnull(INV_MODE,1),0,@ADDRESS_OF) ELSE DBO.CUST_ADDRESS(CMM.location_Code ,isnull(INV_MODE,1),0,@ADDRESS_OF) END          
   END          
   AS PARTY_ADDRESS,          
          
   CASE WHEN ISNULL(CASE WHEN isnull(INV_MODE,1)=1 THEN DBO.CUST_ADDRESS(@PCODE,isnull(INV_MODE,1),0,@ADDRESS_OF) ELSE DBO.CUST_ADDRESS(CMM.location_Code ,isnull(INV_MODE,1),0,@ADDRESS_OF) END,'')='' THEN ''          
        ELSE CASE WHEN isnull(INV_MODE,1)=1 THEN DBO.CUST_ADDRESS(@PCODE,isnull(INV_MODE,1),0,@ADDRESS_OF) ELSE DBO.CUST_ADDRESS(CMM.location_Code ,isnull(INV_MODE,1),0,@ADDRESS_OF) END          
   END          
   AS PARTY_ADDRESS1,          
             
   CASE WHEN ISNULL(CASE WHEN isnull(INV_MODE,1)=1 THEN DBO.CUST_ADDRESS(@PCODE,isnull(INV_MODE,1),1,@ADDRESS_OF) ELSE DBO.CUST_ADDRESS(CMM.location_Code ,isnull(INV_MODE,1),1,@ADDRESS_OF) END,'')='' THEN ''          
        ELSE CASE WHEN isnull(INV_MODE,1)=1 THEN DBO.CUST_ADDRESS(@PCODE,isnull(INV_MODE,1),1,@ADDRESS_OF) ELSE DBO.CUST_ADDRESS(CMM.location_Code ,isnull(INV_MODE,1),1,@ADDRESS_OF) END          
   END          
   AS PARTY_ADDRESS2,               
             
   CASE WHEN ISNULL(CASE WHEN isnull(INV_MODE,1)=1 THEN DBO.CUST_ADDRESS(@PCODE,isnull(INV_MODE,1),2,@ADDRESS_OF) ELSE DBO.CUST_ADDRESS(CMM.location_Code ,isnull(INV_MODE,1),2,@ADDRESS_OF) END,'')='' THEN ''          
        ELSE CASE WHEN isnull(INV_MODE,1)=1 THEN DBO.CUST_ADDRESS(@PCODE,isnull(INV_MODE,1),2,@ADDRESS_OF) ELSE DBO.CUST_ADDRESS(CMM.location_Code ,isnull(INV_MODE,1),2,@ADDRESS_OF) END          
   END          
   AS PARTY_ADDRESS3,          
             
   CASE WHEN ISNULL(CASE WHEN isnull(INV_MODE,1)=1 THEN DBO.CUST_ADDRESS(@PCODE,isnull(INV_MODE,1),3,@ADDRESS_OF) ELSE DBO.CUST_ADDRESS(CMM.location_Code ,isnull(INV_MODE,1),3,@ADDRESS_OF) END,'')='' THEN ''          
        ELSE CASE WHEN isnull(INV_MODE,1)=1 THEN DBO.CUST_ADDRESS(@PCODE,isnull(INV_MODE,1),3,@ADDRESS_OF) ELSE DBO.CUST_ADDRESS(CMM.location_Code ,isnull(INV_MODE,1),3,@ADDRESS_OF) END          
 END          
   --PHONE        
   +CASE WHEN ISNULL(CD.PHONE1,'')<>'' OR ISNULL(CD.PHONE2,'')<>'' OR ISNULL(CD.MOBILE,'')<>''         
         THEN '; '+CASE WHEN ISNULL(CD.PHONE1,'')<>'' THEN 'PHONE '+CD.PHONE1          
                        ELSE CASE WHEN ISNULL(CD.PHONE2,'')<>'' THEN 'PHONE '+CD.PHONE2          
                                  ELSE CASE WHEN ISNULL(CD.MOBILE,'')<>'' THEN CASE ISNULL( (SELECT ISNULL(IS_MOBILE,0) FROM GST_SLS_CUSTOMER_CONFIG (NOLOCK) WHERE XN_TYPE='SLS'),0) WHEN 1 THEN  'MOBILE: '+CD.MOBILE ELSE '' END        
                                            ELSE ''        
                                       END        
                             END        
                   END        
         ELSE ''        
    END               
   AS PARTY_CITY,          
   --04 AUG 2017 -- DATE NOT SHOWING DUE TO BLANK PARTY ADDRESS          
            
   --05 AUG 2017 : CORRECTION OF PARTY GSTIN VALUE          
   --,CASE WHEN INV_MODE=1 THEN LMP.AC_GST_NO ELSE TL.LOC_GST_NO END          
   CASE LEN(ISNULL(cmm.Party_Gst_No,'')) WHEN 0 THEN '' ELSE 'GSTIN: '+ISNULL(cmm.Party_Gst_No,'') END          
   AS PARTY_GST_NO,          
   --05 AUG 2017 : CORRECTION OF PARTY GSTIN VALUE          
          
   CASE WHEN CMM.CANCELLED =1 THEN 'CANCELLED' ELSE '' END AS CANCELLED,              
   --HEADER ON REGISTED_GST: 05 AUG 2017          
   CASE WHEN  SUBSTRING(CMM.CM_NO,5,1) ='N' THEN 'CREDIT NOTE'  
                    WHEN  SUBSTRING(CMM.CM_NO,5,1) ='E' THEN 'ESTIMATE'  
					WHEN  SUBSTRING(CMM.CM_NO,5,1) ='R' THEN 'CASH REFUND' 
					WHEN  SUBSTRING(CMM.CM_NO,5,1) ='F' THEN 'CREDIT REFUND'  
             ELSE CASE ISNULL(L.REGISTERED_GST,0) WHEN 1 THEN (SELECT TOP 1 CAPTION FROM GST_XN_CAPTION WHERE XN_TYPE='sls' AND [MODE]=1) 
			                                      WHEN 0 THEN (SELECT TOP 1 CAPTION FROM GST_XN_CAPTION WHERE XN_TYPE='sls' AND [MODE]=2) 
			      ELSE (SELECT TOP 1 CAPTION FROM GST_XN_CAPTION WHERE XN_TYPE='sls' AND [MODE]=0) END          
        END AS INVOICE_TYPE  ,         
   --HEADER ON REGISTED_GST: 05 AUG 2017          
   ISNULL(CMM.REMARKS,'') AS REMARKS,            
   CMM.PARTY_STATE_CODE,            
   (SELECT TOP 1 GST_STATE_NAME FROM GST_STATE_MST WHERE GST_STATE_CODE=CMM.PARTY_STATE_CODE) PARTY_STATE_NAME,            
   ISNULL(LS.UT,0) AS UT        
   ,SLS_CONFIG.LOGO AS LOGO        
   ,SLS_CONFIG.NAME AS NAME        
   ,SLS_CONFIG.ADDRESS1 AS PRINT_ADDRESS1        
   ,SLS_CONFIG.TELEPHONE1 AS TELEPHONE1        
   ,SLS_CONFIG.CIN_NO AS CIN_NO        
   ,SLS_CONFIG.DATE_WITH_TIME AS DATE_WITH_TIME        
   ,SLS_CONFIG.PRINT_SALE_PERSON AS PRINT_SALE_PERSON        
   ,SLS_CONFIG.PRINT_AUTO_CUT_DATE AS PRINT_AUTO_CUT_DATE        
   ,SLS_CONFIG.ITEM_TAXABLE AS PRINT_ITEM_TAXABLE        
   ,SLS_CONFIG.ITEM_GST_RATE AS PRINT_ITEM_GST_RATE        
   ,SLS_CONFIG.BILL_MRP AS PRINT_BILL_MRP        
   ,SLS_CONFIG.BILL_DISCOUNT AS PRINT_BILL_DISCOUNT        
   ,SLS_CONFIG.BILL_TAXABLE AS PRINT_BILL_TAXABLE        
   ,SLS_CONFIG.ALL_SHOW AS PRINT_ALL_SHOW        
   ,SLS_CONFIG.TOP_MARGIN AS TOP_MARGIN        
   ,SLS_CONFIG.BOTTOM_MARGIN AS BOTTOM_MARGIN        
   ,SLS_CONFIG.LEFT_MARGIN AS LEFT_MARGIN        
   ,SLS_CONFIG.RIGHT_MARGIN AS RIGHT_MARGIN        
   ,SLS_CONFIG.DISC_PER AS PRINT_DISC_PER        
   ,SLS_CONFIG.CGST_AMOUNT AS PRINT_CGST_AMOUNT        
   ,SLS_CONFIG.SGST_AMOUNT AS PRINT_SGST_AMOUNT        
   ,SLS_CONFIG.IGST_AMOUNT AS PRINT_IGST_AMOUNT        
   ,SLS_CONFIG.AMT_BEFORE_GST AS PRINT_AMT_BEFORE_GST        
   ,@SALE_PERSON SALE_PERSON            
   ,ISNULL((SELECT TOP 1 ISNULL(IS_ENABLED,0) FROM GST_TNC WHERE XN_TYPE=@CXNTYPE),0) PRINT_TERM            
   ,ISNULL((SELECT TOP 1 ISNULL(IS_SIGNATURE,0) FROM GST_SLS_CUSTOMER_CONFIG WHERE XN_TYPE=@CXNTYPE),0) CUST_SIGNATURE            
   ,ISNULL((SELECT TOP 1 ISNULL(PRINT_COPIES,1) FROM GST_SLS_CUSTOMER_CONFIG WHERE XN_TYPE=@CXNTYPE),1) PRINT_COPIES            
   --17 JUL 2017            
   ,CASE ISNULL(CMM.PAYBACK,0) WHEN 0 THEN '' ELSE 'PAYBACK: '+CAST(ISNULL(CMM.PAYBACK,0) AS VARCHAR) END AS PAYBACK                        
   --05 AUG 2017 REGISTERD GST          
   ,L.REGISTERED_GST [IS_REGISTERED]           
           
   --27 DEC 2017         
   ,PRINT_FIX_MRP=CASE SLS_CONFIG.ITEM_FIX_MRP WHEN 0 THEN CAST(0 AS BIT) ELSE CAST(@PRINT_FIX_MRP AS BIT) END         
   ,DEFAULT_PAPER_SIZE        
           
   --28 DEC 2017         
   ,CASH_TENDERED=CASE (SELECT TOP 1 ISNULL(CASH_TENDERED,0) FROM CMM01106 (NOLOCK) WHERE CM_ID=@CXNID) WHEN 0 THEN '' ELSE 'CASH TENDERED: '+CAST((SELECT TOP 1 ISNULL(CASH_TENDERED,0) FROM CMM01106 (NOLOCK) WHERE CM_ID=@CXNID) AS VARCHAR) END        
   ,(SELECT TOP 1 ISNULL(VALUE,0) FROM CONFIG(NOLOCK) WHERE CONFIG_OPTION='ASK_CASH_TENDERED') AS PRINTCASHTENDER        
   --03 FEB 2018        
   ,SLS_CONFIG.PRINT_AUTHORIZED_SIGNATURE        
   ,ISNULL(@SAVING,0) SAVING_AMOUNT           
         
   --08 JUN 2018      
   ,@CUST_BAL CUST_BAL,@DR_CR BAL_TYPE,@PRINTCUSBAL PRINTCUSBAL      
    ,CD.email AS PARTY_EMAIL  
   --27 JUN 2018      
   ,ISNULL(SLS_CONFIG.PRINT_GATE_PASS,0)PRINT_GATE_PASS    ,  
   cd.COMPANY_NAME AS CUST_COMPANY_NAME ,  
   ISNULL(DTM.DT_NAME,'') AS DT_NAME  
   ,cmm.DISCOUNT_PERCENTAGE AS BILL_DISCOUNT_PERCENTAGE  
   ,cmm.DISCOUNT_AMOUNT AS BILL_DISCOUNT_AMOUNT  
   ,cmm.Total_Gst_Cess_Amount 
   ,cmm.ACH_NO,cmm.ACH_DT,cmm.IRN_QR_CODE,cmm.EINV_IRN_NO,CD.ADDRESS9 
   ,CMM.SUBTOTAL ,CMM.TOTAL_QUANTITY ,cmm.REF_NO
   INTO #DATASET0        
   FROM CMM01106 CMM (NOLOCK)             
   LEFT JOIN (SELECT TOP 1 XN_TYPE,LOGO,NAME,ADDRESS1,TELEPHONE1,CIN_NO,DATE_WITH_TIME,PRINT_SALE_PERSON        
        ,PRINT_AUTO_CUT_DATE,ITEM_TAXABLE,ITEM_GST_RATE,BILL_MRP,BILL_DISCOUNT,BILL_TAXABLE,ALL_SHOW,TOP_MARGIN,BOTTOM_MARGIN        
        ,CASE @REPORT_TYPE WHEN 'A5' THEN  ISNULL(LEFT_MARGIN,0.09) WHEN 'A4' THEN  ISNULL(LEFT_MARGIN,0.30)  ELSE ISNULL(LEFT_MARGIN,0)  END AS LEFT_MARGIN        
        ,CASE @REPORT_TYPE WHEN 'A5' THEN  ISNULL(RIGHT_MARGIN,0.0) WHEN 'A4' THEN  ISNULL(RIGHT_MARGIN,0.25) ELSE ISNULL(RIGHT_MARGIN,0) END AS RIGHT_MARGIN        
        ,DISC_PER,CGST_AMOUNT,SGST_AMOUNT,IGST_AMOUNT,AMT_BEFORE_GST        
        --27 DEC 2017        
       ,CAST(ISNULL(ITEM_FIX_MRP,0) AS BIT)ITEM_FIX_MRP        
        ,CAST(ISNULL(DEFAULT_PAPER_SIZE,0) AS BIT)DEFAULT_PAPER_SIZE        
        --03 FEB 2018        
        ,ISNULL(PRINT_AUTHORIZED_SIGNATURE,0)PRINT_AUTHORIZED_SIGNATURE        
        --27 JUN 2018      
        ,ISNULL(PRINT_GATE_PASS,0)PRINT_GATE_PASS      
     FROM GST_COMPANY_CONFIG WHERE XN_TYPE='SLS'      
     )SLS_CONFIG ON SLS_CONFIG.XN_TYPE=@CXNTYPE        
   LEFT JOIN CUSTDYM CD (NOLOCK) ON CD.CUSTOMER_CODE=CMM.CUSTOMER_CODE               
   LEFT JOIN COMPANY CMP (NOLOCK) ON CMP.COMPANY_CODE='01'      
   JOIN VW_COMP_ADDRESS_SERVERLOC VC ON VC.DEPT_ID=(CASE WHEN ISNULL(@NSERVERLOC,0)=1 THEN  @ClOCiD  ELSE VC.DEPT_ID END)      
   --JOIN VW_COMP_ADDRESS VC ON 1=1 ON CMP.COMPANY_CODE='01'               
   LEFT OUTER JOIN LOCATION L (NOLOCK) ON L.DEPT_ID =LEFT (CMM.CM_ID,2)               
   LEFT JOIN GST_STATE_MST LS (NOLOCK) ON LS.GST_STATE_CODE =L.GST_STATE_CODE--LEFT(L.LOC_GST_NO,2)              
   LEFT JOIN LMP01106 LMP (NOLOCK) ON LMP.AC_CODE=CMM.AC_CODE                
   LEFT JOIN GST_STATE_MST CS (NOLOCK) ON CS.GST_STATE_CODE=LMP.AC_GST_STATE_CODE            
   LEFT JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE=LMP.AC_CODE                
   LEFT JOIN AREA CUSAR (NOLOCK) ON LMP.AREA_CODE=CUSAR.AREA_CODE                
   LEFT JOIN CITY CUSCT (NOLOCK) ON CUSAR.CITY_CODE=CUSCT.CITY_CODE               
   LEFT OUTER JOIN LOCATION TL (NOLOCK) ON TL.DEPT_ID=CMM.location_Code                
   LEFT JOIN AREA TLAR (NOLOCK) ON TL.AREA_CODE=TLAR.AREA_CODE                
   LEFT JOIN CITY TLCT (NOLOCK) ON TLAR.CITY_CODE=TLCT.CITY_CODE               
   LEFT JOIN GST_STATE_MST TS (NOLOCK) ON TS.GST_STATE_CODE=TL.GST_STATE_CODE --LEFT(TL.LOC_GST_NO,2)         
   LEFT JOIN DTM (NOLOCK) ON DTM.DT_CODE =CMM.DT_CODE  
   LEFT JOIN AREA COMAR (NOLOCK) ON COMAR.AREA_CODE=CMP.AREA_CODE    
  WHERE CMM.CM_ID=@CXNID              
                
  UPDATE #DATASET0 SET ADDRESS1=REPLACE(ADDRESS1,'(WC)','')        
  ,ADDRESS2=REPLACE(ADDRESS2,'(WC)','')        
  ,CITY=REPLACE(CITY,'(WC)','')        
  ,PARTY_ADDRESS1=REPLACE(PARTY_ADDRESS1,'(WC)','')        
  ,PARTY_ADDRESS2=REPLACE(PARTY_ADDRESS2,'(WC)','')        
  ,PARTY_ADDRESS3=REPLACE(PARTY_ADDRESS3,'(WC)','')        
  ,PARTY_CITY=REPLACE(PARTY_CITY,'(WC)','')        
  SELECT TOP 1 @CCOLNAME=ISNULL(AC_CODE,'') FROM CMM01106 (NOLOCK) WHERE CM_ID=@CXNID      
        
  IF (SELECT TOP 1 LEN(ISNULL([PARTY_NAME],'')) FROM #DATASET0)=5      
      UPDATE #DATASET0 SET [PARTY_NAME]=DBO.GST_SLS_PARTY_NAME(@PCODE,'SLS',@ADDRESS_OF)      
  UPDATE #DATASET0 SET [PARTY_NAME]=REPLACE(REPLACE([PARTY_NAME],';AC',''),';CUS','')        
        
      
  SET @CCOLNAME=''        
  --DETAILS BLOCK        
  --04 AUG 2017            
  SET @CCOLNAME='SKU.[SKU_PREFIX]+'      
  SELECT @CCOLNAME=ISNULL(@CCOLNAME+'+','  ')+SOURCENAME+'.'+QUOTENAME(COLUMNNAME) +'+'+''''+COLUMNSEPARATOR+''''+' '            
  FROM GST_XN_DETAIL (NOLOCK) WHERE XN_TYPE =@CXNTYPE AND ISVISIBLE=1          
  ORDER BY DISPLAYORDER            
  --04 AUG 2017          
  IF @CCOLNAME='SKU.[SKU_PREFIX]+'               
     SET @CCOLNAME='SKU.[SKU_PREFIX]'      
  ELSE           
     SELECT TOP 1 @CCOLNAME=LEFT(@CCOLNAME,LEN(@CCOLNAME)-3-LEN(COLUMNSEPARATOR))            
     FROM GST_XN_DETAIL (NOLOCK) WHERE XN_TYPE =@CXNTYPE          
             
  --SET @DTSQL=N'SELECT ROW_NUMBER() OVER (ORDER BY '+@CCOLNAME+' ) AS SR_NO,'            
            
  --01 AUG 2017 : ORDER ISSUE WHEN BARCODE IS SET TO VISIBLE             
  SET @DTSQL=N'SELECT ROW_NUMBER() OVER (ORDER BY '+CASE @SNO WHEN 0 THEN @CCOLNAME ELSE 'CMD.SR_NO' END+' ) AS SR_NO,'            
  --01 AUG 2017 : ORDER ISSUE WHEN BARCODE IS SET TO VISIBLE     
    

	
 SET @CSPID=LTRIM(RTRIM(STR(@@SPID )))
 SET @CTABLENAME  ='##TMPSLSPRINT'+@CSPID

   	SET @CCMD = N'IF OBJECT_ID(''TEMPDB..'+@CTABLENAME+''',''U'') IS NOT NULL
		DROP TABLE '+@CTABLENAME+''
	PRINT @CCMD
    EXEC SP_EXECUTESQL @CCMD  
            
  SET @DTSQL+=@CCOLNAME+' AS PARTICULARS ,            
   CMD.HSN_CODE [HSN_CODE],            
   CAST(SUM(CMD.QUANTITY) AS DECIMAL(10,3))QUANTITY,            
   CAST(CAST(ROUND((ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)+ISNULL(CMD.DISCOUNT_AMOUNT,0))/(CMD.MRP*CMD.QUANTITY)*100,2) AS NUMERIC(10,2)) AS VARCHAR) [LESS_DISCOUNT],            
   --CAST(CASE ISNULL(SKU.FIX_MRP,0) WHEN 0 THEN (ISNULL(SKU.FIX_MRP,0)-CMD.MRP)*100  ELSE (ISNULL(SKU.FIX_MRP,0)-CMD.MRP)*100/ISNULL(SKU.FIX_MRP,0) END AS NUMERIC(10,0)) AS LESS_DISCOUNT,        
   SUM(CMD.XN_VALUE_WITHOUT_GST) [TAXABLE_VALUE],            
   CAST(SUM(ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)+ISNULL(CMD.DISCOUNT_AMOUNT,0)) AS DECIMAL(18,2))[DISCOUNT_AMOUNT],            
   CAST(DBO.CURR_GROUPING(ROUND(ISNULL(CMD.GST_PERCENTAGE,0),2),'''')AS VARCHAR)+''%'' [GST],            
               
   --05SEP2017         
   --CAST(SUM(CMD.NET-ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)) AS NUMERIC(10,2))        
   CAST(SUM(CASE ISNULL(CMD.TAX_METHOD,0) WHEN 1 THEN ISNULL(CMD.NET,0)-ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)         
         ELSE ISNULL(CMD.XN_VALUE_WITHOUT_GST,0)        
              +ISNULL(CMD.IGST_AMOUNT,0)+ISNULL(CMD.CGST_AMOUNT,0)+ISNULL(CMD.SGST_AMOUNT,0)         
END) AS NUMERIC(18,2))        
   AS [ITEM_NET_AMT]        
           
   ,UOM.UOM_NAME,CMD.MRP RATE            
           
   ,REF_NO=CASE WHEN ISNULL(CMD.REF_SLS_MEMO_DT,''1900-01-01'')<>''1900-01-01''        
                     THEN ''REF NO: ''+LTRIM(RTRIM(ISNULL(CMD.REF_SLS_MEMO_NO,'''')))+'' / ''+CONVERT(VARCHAR,ISNULL(CMD.REF_SLS_MEMO_DT,''1900-01-01''),105)         
              ELSE ''''        
           END        
   --27 DEC 2017                
   ,CAST(ISNULL(SKU.FIX_MRP,0) AS NUMERIC(10,2)) AS ITEM_FIX_MRP        
   --27 DEC 2017        
   ,'''+@UOM_WISE_TOTAL+''' UOM_TOTAL      
   --25 NOV 2019 START  
   ,ISNULL('''+@CJOBNAME+''','''')JOB_NAME,  
   ISNULL('''+@DELIVERY_DT+''','''')DELIVERY_DT,  
   EMPLOYEE.EMP_NAME AS SALEPERSON1,            
   EMPLOYEE1.EMP_NAME AS SALEPERSON2,             
   EMPLOYEE2.EMP_NAME AS SALEPERSON3,  
   CAST(SUM(CMD.GST_CESS_AMOUNT) AS NUMERIC(10,2)) GST_CESS_AMOUNT, 
   CASE WHEN '+RTRIM(LTRIM(STR(@NPRODUCTVISIBLE)))+'=''1'' THEN SKU.DISCOUNT_STR ELSE '''' END as DISCOUNT_STR ,
   SUM(NET) AS NET
   --25 NOV 2019 END  
   INTO '+@CTABLENAME+' 
   FROM CMD01106 CMD (NOLOCK)             
   JOIN CMM01106 CMM (NOLOCK) ON CMM.CM_ID=CMD.CM_ID            
   JOIN #SKU SKU (NOLOCK) ON CASE CHARINDEX(''@'',SKU.PRODUCT_CODE) WHEN 0 THEN SKU.PRODUCT_CODE ELSE LEFT(SKU.PRODUCT_CODE,CHARINDEX(''@'',SKU.PRODUCT_CODE)-1) END      
       =CASE CHARINDEX(''@'',CMD.PRODUCT_CODE) WHEN 0 THEN CMD.PRODUCT_CODE ELSE LEFT(CMD.PRODUCT_CODE,CHARINDEX(''@'',CMD.PRODUCT_CODE)-1) END      
   AND SKU.SR_NO=CMD.SR_NO              
   JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE =SKU.ARTICLE_CODE               
   JOIN UOM (NOLOCK) ON UOM.UOM_CODE =ARTICLE.UOM_CODE               
   JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE=SECTIOND.SUB_SECTION_CODE              
   JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE=SECTIONM.SECTION_CODE              
   --25 NOV 2019 START  
     
    
      --25 NOV 2019 END  
   LEFT JOIN LOCATION TL (NOLOCK) ON TL.DEPT_ID=CMM.LOCATION_CODE            
   LEFT JOIN GST_STATE_MST LS (NOLOCK) ON LS.GST_STATE_CODE=LEFT(TL.LOC_GST_NO,2)            
   --25 NOV 2019 START  
   LEFT JOIN EMPLOYEE ON EMPLOYEE.EMP_CODE=CMD.EMP_CODE             
   LEFT JOIN EMPLOYEE EMPLOYEE1 ON EMPLOYEE1.EMP_CODE=CMD.EMP_CODE1             
   LEFT JOIN EMPLOYEE EMPLOYEE2 ON EMPLOYEE2.EMP_CODE=CMD.EMP_CODE2                
   --25 NOV 2019 END  
   LEFT OUTER JOIN PARA1 ON PARA1.PARA1_CODE=SKU.PARA1_CODE            
   LEFT OUTER JOIN PARA2 ON PARA2.PARA2_CODE=SKU.PARA2_CODE            
   LEFT OUTER JOIN PARA3 ON PARA3.PARA3_CODE=SKU.PARA3_CODE            
   LEFT OUTER JOIN PARA4 ON PARA4.PARA4_CODE=SKU.PARA4_CODE            
   LEFT OUTER JOIN PARA5 ON PARA5.PARA5_CODE=SKU.PARA5_CODE            
   LEFT OUTER JOIN PARA6 ON PARA6.PARA6_CODE=SKU.PARA6_CODE            
   LEFT OUTER JOIN ARTICLE_FIX_ATTR ATTR  (NOLOCK) ON ARTICLE.ARTICLE_CODE = ATTR.ARTICLE_CODE       
LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE      
LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE      
LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE      
LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE      
LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE      
LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE      
LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE      
LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE      
LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE      
LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE      
LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE      
LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE      
LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE      
LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE      
LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE      
LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE      
LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE      
LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE      
LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE      
LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE      
LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE      
LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE      
LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE      
LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE      
LEFT OUTER JOIN ATTR25_MST AT25(NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE      
  WHERE CMD.CM_ID='''+@CXNID+'''            
  GROUP BY '          
  +/*01 AUG 2017 : ORDER ISSUE*/CASE @SNO WHEN 0 THEN '' ELSE 'CMD.SR_NO,'END/*01 AUG 2017 : ORDER ISSUE*/          
  +@CCOLNAME+',CMD.HSN_CODE,UOM.UOM_NAME          
  --,CMD.NET           
  ,CMD.MRP,CAST(CAST(ROUND((ISNULL(CMD.CMM_DISCOUNT_AMOUNT,0)+ISNULL(CMD.DISCOUNT_AMOUNT,0))/(CMD.MRP*CMD.QUANTITY)*100,2) AS NUMERIC(10,2)) AS VARCHAR)             
  ,CAST(DBO.CURR_GROUPING(ROUND(ISNULL(CMD.GST_PERCENTAGE,0),2),'''')AS VARCHAR)+''%''        
  ,ISNULL(CMD.REF_SLS_MEMO_DT,''1900-01-01'')        
  ,ISNULL(CMD.REF_SLS_MEMO_NO,'''')        
  --27 DEC 2017        
  --,CAST(ISNULL(SKU.FIX_MRP,0) AS NUMERIC(10,2))        
  ,ISNULL(SKU.FIX_MRP,0)        
  --27 DEC 2017    
  --25 NOV 2019 START  
   
  ,EMPLOYEE.EMP_NAME,EMPLOYEE1.EMP_NAME,EMPLOYEE2.EMP_NAME  
  ,CASE WHEN '+RTRIM(LTRIM(STR(@NPRODUCTVISIBLE)))+'=''1'' THEN SKU.DISCOUNT_STR ELSE '''' END '  
  + +@CNRVFILTER +  
  --25 NOV 2019 END  
  ' ORDER BY 1'          
              
  PRINT @DTSQL            
  EXEC SP_EXECUTESQL @DTSQL     
  
 
  
  SELECT 'CMM01106' AS TABLENAME, *,@UOM_WISE_TOTAL UOM_TOTAL FROM #DATASET0  --DATASET1/TYPE0   
  
 SET @CCMD = N'SELECT ''CMD01106'' AS TABLENAME, * FROM '+@CTABLENAME+' ORDER BY 1 '
 PRINT @CCMD
 EXEC SP_EXECUTESQL @CCMD    
    


   	SET @CCMD = N'IF OBJECT_ID(''TEMPDB..'+@CTABLENAME+''',''U'') IS NOT NULL
		      DROP TABLE '+@CTABLENAME+''
	PRINT @CCMD
    EXEC SP_EXECUTESQL @CCMD
  
   --GST BLOCK            
  SELECT GST      
  ,[TAXABLE_VALUES] AS [TAXABLE_VALUES]      
  ,[CGST_AMOUNT] AS [CGST_AMOUNT]      
  ,[SGST_AMOUNT] AS [SGST_AMOUNT]      
  ,[IGST_AMOUNT] AS [IGST_AMOUNT]      
  ,[Gst_Cess_Amount]  
  ,[GST_COLLECTION]++@OT_CGST+@OT_SGST+@OT_IGST AS [GST_COLLECTION]      
  ,[IGST_PER]=CASE ISNULL([IGST_AMOUNT],0) WHEN 0 THEN '0%' WHEN [GST_COLLECTION] THEN GST ELSE GST END            
  ,[CGST_PER]=CASE ISNULL([CGST_AMOUNT],0) WHEN 0 THEN '0%' ELSE DBO.CURR_GROUPING(ROUND(CAST(REPLACE([GST],'%','') AS DECIMAL(10,2))/2,2),'')+'%' END            
  ,[SGST_PER]=CASE ISNULL([SGST_AMOUNT],0) WHEN 0 THEN '0%' ELSE DBO.CURR_GROUPING(ROUND(CAST(REPLACE([GST],'%','') AS DECIMAL(10,2))/2,2),'')+'%' END            
  FROM            
  (SELECT CAST(DBO.CURR_GROUPING(GST_PERCENTAGE,'') AS VARCHAR)+'%'[GST]            
   ,ISNULL(SUM(XN_VALUE_WITHOUT_GST),0) AS [TAXABLE_VALUES]            
   ,ISNULL(SUM(CGST_AMOUNT),0)[CGST_AMOUNT]             
   ,ISNULL(SUM(SGST_AMOUNT),0)[SGST_AMOUNT]             
   ,ISNULL(SUM(IGST_AMOUNT),0)[IGST_AMOUNT] 
   ,ISNULL(SUM(Gst_Cess_Amount ),0)[Gst_Cess_Amount]            
   ,ISNULL(SUM(CGST_AMOUNT+SGST_AMOUNT+IGST_AMOUNT),0)[GST_COLLECTION]            
  FROM CMD01106 (NOLOCK) WHERE CM_ID=@CXNID            
  GROUP BY CAST(DBO.CURR_GROUPING(GST_PERCENTAGE,'') AS VARCHAR)        
  )GST           
            
  --TERMS AND CONDITIONS            
  SELECT TNC_1,TNC_2,TNC_3,TNC_4,TNC_5,TNC_6 FROM GST_TNC WHERE XN_TYPE=@CXNTYPE            
            
  --QUOTATIONS            
  SELECT QUOTATION1 [QUOTATION1],QUOTATION2 [QUOTATION2]            
  ,(SELECT TOP 1 ISNULL(REGISTERED_ADD,'') FROM LOCATION L (NOLOCK) WHERE DEPT_ID=@ClOCiD )REGISTERED_ADDRESS            
  FROM GST_QUOTATION_MST WHERE XN_TYPE=@CXNTYPE            
            
  --PAYMENT MODE              
  DECLARE @PAYMODE1 VARCHAR(1000) ,@CREFNO VARCHAR(1000)    
  
  select  @CREFNO=COALESCE(@CREFNO+';','')+rtrim(ltrim(p.ref_no ))
  FROM PAYMODE_XN_DET P (NOLOCK)
  where P.xn_type='SLS' and isnull(p.ref_no,'') <>''
  and p.MEMO_ID=@CXNID      

   IF RIGHT(@CREFNO,1)=';' SET @CREFNO=LEFT(@CREFNO,LEN(@CREFNO)-1)

	set @CREFNO=isnull(@CREFNO,'')

  SET @PAYMODE1='SETTLEMENT: '            
  ;WITH CTE AS            
  (            
    SELECT 'CC' AS PAYMODE_NAME ,SUM(AMOUNT) AMT             
    FROM PAYMODE_XN_DET A (NOLOCK)             
    JOIN PAYMODE_MST B (NOLOCK) ON A.PAYMODE_CODE=B.PAYMODE_CODE              
    WHERE A.XN_TYPE =@CXNTYPE AND A.MEMO_ID=@CXNID          
    AND B.PAYMODE_GRP_CODE='0000002'          
    UNION          
    SELECT PAYMODE_NAME=CASE B.PAYMODE_NAME WHEN 'INR' THEN 'CASH' ELSE B.PAYMODE_NAME END            
    --31 JUL 2017            
    ,SUM(AMOUNT) AMT             
    --,ABS(SUM(AMOUNT)) AMT            
    --31 JUL 2017            
 FROM PAYMODE_XN_DET A (NOLOCK)             
 JOIN PAYMODE_MST B (NOLOCK) ON A.PAYMODE_CODE=B.PAYMODE_CODE              
    WHERE A.XN_TYPE =@CXNTYPE AND A.MEMO_ID=@CXNID          
    AND B.PAYMODE_GRP_CODE!='0000002'          
    GROUP BY B.PAYMODE_NAME          
  )            
  SELECT @PAYMODE1=COALESCE(@PAYMODE1,'')+PAYMODE_NAME+': '+DBO.CURR_GROUPING(AMT,',')+REPLICATE(CHAR(32),3) FROM CTE            
  WHERE ISNULL(AMT,0)<>0          
              
  SELECT @PAYMODE1 [PAYMODE] ,
          @CREFNO AS REFERENCE_NO
  ,NET_AMOUNT=CASE SUBSTRING(CM_NO,5,1) WHEN 'N' THEN ABS(NET_AMOUNT) ELSE NET_AMOUNT END          
  ,XN_VALUE_WITHOUT_GST+0*@OT_TAXABLE AS SUBTOTAL          
  ,ROUND_OFF +isnull(gst_round_off,0) as    ROUND_OFF           
  ,@OT_TAXABLE   [OTHER_CHARGE]        
  --CMM01106.ATD_CHARGES       
  ,CAST(ISNULL(XN_VALUE_WITHOUT_GST,0)+ISNULL(CMM01106.OTHER_CHARGES_TAXABLE_VALUE,0) AS NUMERIC(14,2)) AS TOTAL_TAXABLE_VALUE
  ,GST_COLLECTION            
  --17 JUL 2017 STARTS            
  +@OT_IGST+@OT_CGST+@OT_SGST      
  --17 JUL 2017 ENDS            
  AS GST_COLLECTION            
  ,IGST_COLLECTION+@OT_IGST AS IGST_COLLECTION            
  ,CGST_COLLECTION+@OT_CGST AS CGST_COLLECTION            
  ,SGST_COLLECTION+@OT_SGST AS SGST_COLLECTION   
  ,GSTCESS_COLLECTION         
  ,(SELECT TOP 1 VALUE FROM CONFIG WHERE  CONFIG_OPTION='OPEN_CASHIER_FOR_CASHMEMOS')PRINT_SETTLEMENT            
  ,(SELECT SUM(QUANTITY*MRP) FROM CMD01106 WHERE CM_ID=@CXNID)TOTAL_MRP                     
  --12 MAY 2018        
  ,ISNULL(@DISC,0) DISC_AMOUNT        
  ,ADVANCE_AMOUNT=(SELECT TOP 1 ISNULL(CASH_TENDERED,0) FROM CMM01106 (NOLOCK) WHERE CM_ID=@CXNID)        
  ,CC_AMOUNT=ISNULL((SELECT SUM(AMOUNT) FROM PAYMODE_XN_DET A (NOLOCK) JOIN PAYMODE_MST B (NOLOCK) ON A.PAYMODE_CODE=B.PAYMODE_CODE WHERE A.XN_TYPE =@CXNTYPE AND A.MEMO_ID=@CXNID AND B.PAYMODE_NAME='INR'),0)        
  ,CI_AMOUNT=ISNULL((SELECT SUM(AMOUNT) FROM PAYMODE_XN_DET A (NOLOCK) JOIN PAYMODE_MST B (NOLOCK) ON A.PAYMODE_CODE=B.PAYMODE_CODE WHERE A.XN_TYPE =@CXNTYPE AND A.MEMO_ID=@CXNID AND B.PAYMODE_GRP_CODE!='0000002' AND B.PAYMODE_NAME<>'INR'),0)        
  FROM CMM01106 (NOLOCK)             
  JOIN             
  (            
   SELECT @CXNID CM_ID            
   --31 JUL 2017          
  ,ISNULL(SUM(XN_VALUE_WITHOUT_GST),0)AS XN_VALUE_WITHOUT_GST            
  ,ISNULL(SUM(IGST_AMOUNT+CGST_AMOUNT+SGST_AMOUNT),0)GST_COLLECTION            
  ,ISNULL(SUM(IGST_AMOUNT),0)IGST_COLLECTION            
  ,ISNULL(SUM(CGST_AMOUNT),0)CGST_COLLECTION            
  ,ISNULL(SUM(SGST_AMOUNT),0)SGST_COLLECTION   
  ,ISNULL(SUM(Gst_Cess_Amount ),0) GSTCESS_COLLECTION           
  --31 JUL 2017          
   FROM CMD01106 (NOLOCK) WHERE CM_ID=@CXNID            
  )D            
  ON D.CM_ID=CMM01106.CM_ID            
  WHERE CMM01106.CM_ID=@CXNID    
              
  --GST_OH_CONFIG ON 17 JUL 2017            
  SELECT *             
  FROM            
  (            
   SELECT CASE OH_NAME WHEN 'OC' THEN 'OTHER CHARGES' ELSE OH_NAME END AS OH_NAME            
   ,HSN_CODE AS HSNSAC_CODE            
   ,OH_GST_PER=CASE OH_NAME WHEN 'OC' THEN OTHER_CHARGES_GST_PERCENTAGE END            
   --31 JUL 2017            
   ,OH_SGST_AMOUNT=CASE OH_NAME WHEN 'OC' THEN ISNULL(OTHER_CHARGES_SGST_AMOUNT,0) END            
   ,OH_CGST_AMOUNT=CASE OH_NAME WHEN 'OC' THEN ISNULL(OTHER_CHARGES_CGST_AMOUNT,0) END          
   ,OH_IGST_AMOUNT=CASE OH_NAME WHEN 'OC' THEN ISNULL(OTHER_CHARGES_IGST_AMOUNT,0) END            
   --31 JUL 2017            
   FROM GST_OH_CONFIG,CMM01106 (NOLOCK)            
   WHERE CM_ID=@CXNID            
  )T            
  WHERE ISNULL(OH_GST_PER,0)<>0     
    
  SELECT HSN_CODE HSNSACCODE,SUM(xn_value_without_gst)TAXABLEVALUE                    
   ,CAST(igst_amount AS DECIMAL(10,2))HSNIGSTPER,SUM(IGST_AMOUNT)HSNIGSTAMOUNT                    
   ,CAST(cgst_amount AS DECIMAL(10,2))HSNCGSTPER,SUM(CGST_AMOUNT)HSNCGSTAMOUNT                    
   ,CAST(sgst_amount AS DECIMAL(10,2))HSNSCGSTPER,SUM(SGST_AMOUNT)HSNSCGSTAMOUNT                    
   ,SUM(xn_value_with_gst)HSNTOTALAMOUNT                      
   ,SUM(QUANTITY)HSNQUANTITY                      
   FROM cmd01106     
   WHERE CM_ID=@CXNID   
   GROUP BY HSN_CODE,igst_amount,cgst_amount,sgst_amount           
                 
   END--ELSE MODE 0          
        
ELSE IF @CTYPE=99--MODE @CTYPE=99--16 JAN 2018        
   BEGIN        
      EXEC SP3SGSTSLSREPORT_99 @CXNID        
   END        
           
IF @INV_MODE_UPDATE=1        
   UPDATE CMM01106 WITH (ROWLOCK) SET INV_MODE=0 WHERE INV_MODE=1 AND CM_ID=@CXNID AND @INV_MODE_UPDATE=1           
SET NOCOUNT OFF      
  
end_proc:  
  IF ISNULL(@CERRMSG,'')<>''  
      SELECT  @CERRMSG AS ERRMSG  

	  
	SET @CCMD = N'IF OBJECT_ID(''TEMPDB..'+@CTABLENAME+''',''U'') IS NOT NULL
		DROP TABLE '+@CTABLENAME+''
	PRINT @CCMD
    EXEC SP_EXECUTESQL @CCMD
  
            
END              
--END OF PROCEDURE - SP3SGSTSLSREPORT  
  
  