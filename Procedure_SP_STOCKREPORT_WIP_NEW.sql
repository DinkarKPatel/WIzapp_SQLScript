CREATE PROCEDURE SP_STOCKREPORT_WIP_NEW--(LocId 3 digit change by Sanjay:30-10-2024)
	@CTODATE		DATETIME,
	@CPRODUCT_CODE	VARCHAR(100)='',
	@bCalledfromBuildPendingDocs BIT=0,
	@bFirstDt BIT=0
AS
BEGIN
/*
SP_STOCKREPORT_WIP '2014-10-14','2014-09-30','IP-013014'
SP_STOCKREPORT_WIP '2014-10-14','2014-10-30','IP-013014'
*/
	DECLARE @cDtFilter VARCHAR(100)

	SET @cDtFilter=(CASE WHEN @bCalledfromBuildPendingDocs=0 OR @bFirstDt=1  THEN '<' ELSE '' END)+
	'='''+CONVERT(VARCHAR,@CTODATE,110)+''''

	DECLARE @cCmd nvarchar(max)

	
	
	SET @cCmd=N'SELECT sm.location_code as dept_id,sm.bin_id,''WIP'' AS XN_TYPE,WP.PRODUCT_CODE,
			SUM(QUANTITY) AS QUANTITY,sd.PURCHASE_PRICE AS RATE,WP.WIP_UID 
		FROM SNC_MST SM(NOLOCK)
		JOIN SNC_DET SD(NOLOCK) ON SM.MEMO_ID=SD.MEMO_ID
		JOIN WIP_PMT WP(NOLOCK) ON SD.ROW_ID=WP.XN_ROW_ID
		JOIN #LocList b ON sm.location_code=b.dept_id
		WHERE SM.CANCELLED=0 AND WIP=1 AND SM.RECEIPT_DT'+@cDtFilter+'
		AND '+(CASE WHEN @CPRODUCT_CODE='' THEN ' 1=1 ' ELSE ' WP.PRODUCT_CODE='''+@CPRODUCT_CODE+'''' END)+'
		GROUP BY sm.location_code,sm.bin_id,wp.PRODUCT_CODE,wp.wip_uid,sd.PURCHASE_PRICE'
	
	PRINT @cCmd	
	INSERT #CBSWIP (dept_id,bin_id,xn_type,product_code,quantity,rate,wip_uid)
	EXEC SP_EXECUTESQL @cCmd
		
	SET @cCmd=N'SELECT jim.location_code DEPT_ID,jid.bin_id,''WIP'' AS XN_TYPE
			  ,JID.PRODUCT_CODE,-SUM(JID.QUANTITY)
			  ,JID.PREV_JOB_RATE AS RATE,JID.WIP_UID
		FROM JOBWORK_ISSUE_MST JIM(NOLOCK)
		JOIN JOBWORK_ISSUE_DET JID(NOLOCK) ON JIM.ISSUE_ID=JID.ISSUE_ID
		JOIN WIP_PMT WP(NOLOCK) ON WP.WIP_UID=JID.WIP_UID
		JOIN #LocList b ON jim.location_code=b.dept_id
		WHERE JIM.WIP=1 AND JIM.CANCELLED=0 AND WP.JOB_CODE=''0000000'' AND JIM.ISSUE_DT'+@cDtFilter+'
		AND '+(CASE WHEN @CPRODUCT_CODE='' THEN ' 1=1 ' ELSE ' JID.PRODUCT_CODE='''+@CPRODUCT_CODE+'''' END)+'
		GROUP BY jim.location_code,jid.bin_id,JID.PRODUCT_CODE,JID.PREV_JOB_RATE,JID.WIP_UID'
	
	PRINT @cCmd
	INSERT #CBSWIP (dept_id,bin_id,xn_type,product_code,quantity,rate,wip_uid)
	EXEC SP_EXECUTESQL @cCmd

		--GETTING LIST OF BARCODES THAT HAVE BEEN ISSUED TO TRADING WITHOUT ANY JOBWORK
	SET @cCmd=N'SELECT sm.location_code dept_id,scd.bin_id,''WIP'' AS XN_TYPE,SCD.PRODUCT_CODE,-SUM(SCD.QUANTITY) quantity
			  ,WP.BASE_PRICE AS RATE,WP.WIP_UID
		FROM SNC_MST SM(NOLOCK)
		JOIN SNC_CONSUMABLE_DET SCD(NOLOCK) ON SCD.MEMO_ID=SM.MEMO_ID
		JOIN WIP_PMT WP(NOLOCK) ON SCD.WIP_UID=WP.WIP_UID
		JOIN #LocList b ON sm.location_code=b.dept_id
		WHERE SM.CANCELLED=0 AND SCD.WIP=1 AND SM.RECEIPT_DT'+@cDtFilter+' AND '+
		(CASE WHEN @CPRODUCT_CODE='' THEN ' 1=1 ' ELSE ' SCD.PRODUCT_CODE='''+@CPRODUCT_CODE+'''' END)+
		' AND WP.JOB_CODE=''0000000''
		GROUP BY sm.location_code,scd.bin_id,SCD.PRODUCT_CODE,WP.BASE_PRICE,WP.WIP_UID'
	
	PRINT @cCmd
	INSERT #CBSWIP (dept_id,bin_id,xn_type,product_code,quantity,rate,wip_uid)
	EXEC SP_EXECUTESQL @cCmd


	
	---GETTING LIST OF BARCODES THAT HAVE BEEN ISSUED BUT NOT YET RECEIVED
	SET @cCmd=N'SELECT jim.location_code AS DEPT_ID,jid.bin_id ,''JWI'' AS XN_TYPE,JID.PRODUCT_CODE
		  ,SUM(JID.QUANTITY-ISNULL(JRD.QUANTITY,0)) AS QUANTITY
		  ,JID.PREV_JOB_RATE AS RATE,JID.WIP_UID
	FROM JOBWORK_ISSUE_MST JIM(NOLOCK)
	JOIN JOBWORK_ISSUE_DET JID(NOLOCK) ON JIM.ISSUE_ID=JID.ISSUE_ID
	JOIN #LocList b ON jim.location_code=b.dept_id
	LEFT JOIN 
	(	SELECT JRD.REF_ROW_ID,SUM(JRD.QUANTITY) AS QUANTITY
		FROM JOBWORK_RECEIPT_DET JRD(NOLOCK) 
		JOIN JOBWORK_RECEIPT_MST JRM(NOLOCK) ON JRD.RECEIPT_ID=JRM.RECEIPT_ID 
		WHERE JRM.RECEIPT_DT'+@cDtFilter+' AND '+
		(CASE WHEN @CPRODUCT_CODE='' THEN ' 1=1 ' ELSE ' JRD.PRODUCT_CODE='''+@CPRODUCT_CODE+'''' END)+'
		 AND ISNULL(JRM.CANCELLED,0)=0
		GROUP BY JRD.REF_ROW_ID
	)JRD ON JRD.REF_ROW_ID=JID.ROW_ID
	WHERE JIM.WIP=1 AND JIM.CANCELLED=0  AND JID.QUANTITY-ISNULL(JRD.QUANTITY,0)>0
	AND JIM.ISSUE_DT'+@cDtFilter+' AND '+
		(CASE WHEN @CPRODUCT_CODE='' THEN ' 1=1 ' ELSE ' JID.PRODUCT_CODE='''+@CPRODUCT_CODE+'''' END)+
		'GROUP BY jim.location_code,jid.bin_id,jid.PRODUCT_CODE,JID.PREV_JOB_RATE,jid.WIP_UID'
	
	PRINT @cCmd

	INSERT #CBSWIP (dept_id,bin_id,xn_type,product_code,quantity,rate,wip_uid)
	EXEC SP_EXECUTESQL @cCmd
		
	--GETTING LIST OF RECEIVED BARCODES WHICH IS IN WIP STOCK AT THE GIVEN DATE
		--LEFT JOIN 
		--(		SELECT JID.WIP_UID,SUM(JID.QUANTITY) AS QUANTITY
		--		FROM JOBWORK_ISSUE_DET JID(NOLOCK) 
		--		JOIN JOBWORK_ISSUE_MST JIM(NOLOCK) ON JIM.ISSUE_ID=JID.ISSUE_ID
		--		JOIN JOBWORK_RECEIPT_DET JRD (NOLOCK) ON jrd.wip_uid=jid.wip_uid
		--		JOIN JOBWORK_RECEIPT_MST JRM (NOLOCK) ON jrd.receipt_id=jrm.receipt_id
		--		WHERE jim.wip=1 AND JRM.RECEIPT_DT'+@cDtFilter+' AND '+---Dinkar need to check this condition of jim.wip=1 put by me 
		--															   --- Becasue P&l when calling this procedure hanging at thhis step (Sanjay:04-03-2021)	
		--(CASE WHEN @CPRODUCT_CODE='' THEN ' 1=1 ' ELSE ' JID.PRODUCT_CODE='''+@CPRODUCT_CODE+'''' END)+
		--' AND ISNULL(JIM.CANCELLED,0)=0 GROUP BY JID.WIP_UID
		--)JID ON JID.WIP_UID=WP.WIP_UID	
	

	SET @cCmd=N'SELECT jrm.location_code AS DEPT_ID,jrm.bin_id,''WIP'' AS XN_TYPE,JRD.PRODUCT_CODE,
				SUM(JRD.QUANTITY) AS QUANTITY
			   ,(WP.BASE_PRICE+WP.VALUE_ADDITION) AS RATE
			   ,WP.WIP_UID
		into #tmpjwr
		FROM JOBWORK_RECEIPT_MST JRM(NOLOCK)
		JOIN JOBWORK_RECEIPT_DET JRD(NOLOCK) ON JRM.RECEIPT_ID=JRD.RECEIPT_ID
		JOIN WIP_PMT WP(NOLOCK) ON JRD.ROW_ID=WP.XN_ROW_ID		
		JOIN #LocList b ON jrm.location_code=b.dept_id
		WHERE JRM.WIP=1 AND JRM.CANCELLED=0 AND 
		JRM.RECEIPT_DT'+@cDtFilter+' AND '+
		(CASE WHEN @CPRODUCT_CODE='' THEN ' 1=1 ' ELSE ' JRD.PRODUCT_CODE='''+@CPRODUCT_CODE+'''' END)+
       '  
		GROUP BY jrm.location_code,jrm.bin_id,jrD.PRODUCT_CODE,(WP.BASE_PRICE+WP.VALUE_ADDITION),WP.WIP_UID
		
		;With CTE_JWR As
		(
		  SELECT JID.WIP_UID,SUM(JID.QUANTITY) AS QUANTITY
		   FROM JOBWORK_ISSUE_DET JID(NOLOCK) 
		  JOIN JOBWORK_ISSUE_MST JIM(NOLOCK) ON JIM.ISSUE_ID=JID.ISSUE_ID
		  join #tmpjwr  c on c.WIP_UID=jid.WIP_UID
		  group by JID.WIP_UID
		)
		

		SELECT A.DEPT_ID,A.BIN_ID, A.XN_TYPE,A.PRODUCT_CODE,
		      A.QUANTITY-ISNULL(b.QUANTITY,0) AS QUANTITY,
			  a.RATE,a.WIP_UID
		FROM #TMPJWR A
		LEFT JOIN CTE_JWR B ON A.WIP_UID=B.WIP_UID
		where   a.QUANTITY-ISNULL(b.QUANTITY,0)>0
		'
	
	PRINT @cCmd

	INSERT #CBSWIP (dept_id,bin_id,xn_type,product_code,quantity,rate,wip_uid)
	EXEC SP_EXECUTESQL @cCmd


	
		
		--GETTING LIST OF BARCODES THAT HAVE BEEN ISSUED TO TRADING
	SET @cCmd=N'SELECT sm.location_code AS DEPT_ID,sm.bin_id,''WIP'' AS XN_TYPE,SCD.PRODUCT_CODE,-SUM(SCD.QUANTITY) quantity
			  ,(WP.BASE_PRICE+WP.VALUE_ADDITION) AS RATE
			  ,WP.WIP_UID
		FROM SNC_MST SM(NOLOCK)
		JOIN SNC_CONSUMABLE_DET SCD(NOLOCK) ON SCD.MEMO_ID=SM.MEMO_ID
		JOIN WIP_PMT WP(NOLOCK) ON SCD.WIP_UID=WP.WIP_UID
		JOIN #LocList b ON sm.location_code=b.dept_id
		WHERE SM.CANCELLED=0 AND scd.WIP=1 AND SM.RECEIPT_DT'+@cDtFilter+' AND '+
		(CASE WHEN @CPRODUCT_CODE='' THEN ' 1=1 ' ELSE ' SCD.PRODUCT_CODE='''+@CPRODUCT_CODE+'''' END)+
		' AND WP.JOB_CODE<>''0000000''
		GROUP BY sm.location_code,sm.bin_id,SCD.PRODUCT_CODE,(WP.BASE_PRICE+WP.VALUE_ADDITION),WP.WIP_UID'
	
	PRINT @cCmd

	INSERT #CBSWIP (dept_id,bin_id,xn_type,product_code,quantity,rate,wip_uid)
	EXEC SP_EXECUTESQL @cCmd
		
	     
END	
--END OF PROCEDURE - SP_STOCKREPORT_WIP