CREATE PROCEDURE SP3S_GENAPR_DATA  
@nSpId VARCHAR(40),  
@cMemoId VARCHAR(40),  
@CFINYEAR VARCHAR(5),  
@cLocationId VARCHAR(4),  
@bCalledfromRps BIT=0,  
@BALLOWNEGSTOCK bit=0,
@CERRORMSG VARCHAR(MAX) OUTPUT  
AS  
BEGIN   
 DECLARE @BAPPRETFOUND BIT ,@cStep VARCHAR(10),@cCmd NVARCHAR(MAX),@CAPRMEMOID VARCHAR(400)  
  
BEGIN TRY  
 print 'enter genapr'  
  
 SET @cStep='375.10'  
 SET @BAPPRETFOUND=0  
   
 IF @bCalledfromRps=0  
 BEGIN  
  IF NOT EXISTS (SELECT TOP 1 MEMO_ID FROM SLS_APM01106_REF_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID)  
   GOTO END_PROC  
   
  SET @cStep = '375.13'   
  EXEC SP_CHKXNSAVELOG 'SLS',@cStep,0,@NSPID,1  
  UPDATE A SET A.REF_CM_ID=@cMemoId FROM APM01106 A WITH (ROWLOCK)  
  JOIN SLS_APM01106_REF_UPLOAD B (NOLOCK) ON A.MEMO_ID=B.MEMO_ID   
  WHERE SP_ID=@NSPID  
 END        
 ELSE  
 BEGIN  
  IF NOT EXISTS (SELECT TOP 1 MEMO_ID FROM RPS_APM01106_REF_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID)  
   GOTO END_PROC  
   
  SET @cStep = '375.13'   
  EXEC SP_CHKXNSAVELOG 'SLS',@cStep,0,@NSPID,1  
  UPDATE A SET A.REF_CM_ID=@cMemoId FROM APM01106 A WITH (ROWLOCK)  
  JOIN RPS_APM01106_REF_UPLOAD B (NOLOCK) ON A.MEMO_ID=B.MEMO_ID   
  WHERE SP_ID=@NSPID  
 END  
  
 IF EXISTS (SELECT TOP 1 memo_id FROM APR_APPROVAL_RETURN_mst_UPLOAD (NOLOCK) WHERE sp_id=@nSpId)  
  DELETE  FROM APR_APPROVAL_RETURN_mst_UPLOAD WITH (ROWLOCK) WHERE sp_id=@nSpId  
            
 IF EXISTS (SELECT TOP 1 memo_id FROM APR_APPROVAL_RETURN_det_UPLOAD (NOLOCK) WHERE sp_id=@nSpId)  
  DELETE  FROM APR_APPROVAL_RETURN_det_UPLOAD WITH (ROWLOCK) WHERE sp_id=@nSpId  
   
 IF @bCalledfromRps=0  
 BEGIN  
  INSERT APR_APPROVAL_RETURN_mst_UPLOAD (sp_id,MEMO_ID,MEMO_NO,MEMO_DT,CUSTOMER_CODE  
  ,AC_CODE,MODE,SENT_FOR_RECON,LAST_UPDATE,CANCELLED,USER_CODE,FIN_YEAR,REMARKS,DEPT_ID,BIN_ID,  
  MEMO_TIME,RECONCILED,location_Code)  
  SELECT @nSpId as sp_id,'LATER' AS MEMO_ID,'LATER' AS MEMO_NO,CM_DT AS MEMO_DT,CUSTOMER_CODE  
  ,AC_CODE,1 AS MODE,0 AS SENT_FOR_RECON,LAST_UPDATE,0 AS CANCELLED  
  ,USER_CODE,FIN_YEAR,REMARKS,@CLOCATIONID AS DEPT_ID,BIN_ID,GETDATE() AS MEMO_TIME  
  ,0 AS RECONCILED,location_Code FROM SLS_CMM01106_UPLOAD (NOLOCK) WHERE sp_id=@nSpId  
   
  INSERT APR_APPROVAL_RETURN_det_UPLOAD (sp_id,MEMO_ID,QUANTITY,ROW_ID,EMP_CODE,REMARKS  
    ,APD_ROW_ID,AUTO_SRNO,BIN_ID,APD_PRODUCT_CODE,MRP,DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT,RFNET)  
  SELECT @nSpId AS sp_id, 'LATER' AS MEMO_ID,B.QUANTITY-ISNULL(C.RET_QTY,0) AS QUANTITY  
    ,'LATER' AS ROW_ID,B.EMP_CODE,'' AS REMARKS,B.ROW_ID AS APD_ROW_ID,  
    0 as AUTO_SRNO,B.BIN_ID,B.PRODUCT_CODE AS APD_PRODUCT_CODE,b.MRP,  
    b.DISCOUNT_PERCENTAGE,0 as DISCOUNT_AMOUNT,0 RFNET  
  FROM APM01106 A  (NOLOCK)      
  JOIN APD01106 B  (NOLOCK) ON A.MEMO_ID = B.MEMO_ID       
  LEFT OUTER JOIN       
  (  
   SELECT APD_ROW_ID,SUM(A.QUANTITY) AS RET_QTY   
   FROM APPROVAL_RETURN_DET A (NOLOCK)     
   JOIN APPROVAL_RETURN_MST MST (NOLOCK) ON A.MEMO_ID=MST.MEMO_ID     
   JOIN APD01106 B (NOLOCK) ON A.APD_ROW_ID=B.ROW_ID   
   JOIN APM01106 C (NOLOCK) ON C.MEMO_ID=B.MEMO_ID      
   WHERE c.REF_CM_ID =@cMemoId AND C.CANCELLED=0 AND MST.CANCELLED=0  
   GROUP BY APD_ROW_ID  
  ) C ON C.APD_ROW_ID=B.ROW_ID       
  WHERE A.REF_CM_ID =@cMemoId AND A.CANCELLED=0  
  AND (B.QUANTITY-ISNULL(C.RET_QTY,0)) > 0  
 END  
 ELSE  
 BEGIN --- Replace below code w.r.t. rps tables & their columns  
  INSERT APR_APPROVAL_RETURN_mst_UPLOAD (sp_id,MEMO_ID,MEMO_NO,MEMO_DT,CUSTOMER_CODE  
  ,AC_CODE,MODE,SENT_FOR_RECON,LAST_UPDATE,CANCELLED,USER_CODE,FIN_YEAR,REMARKS,DEPT_ID,BIN_ID,  
  MEMO_TIME,RECONCILED,location_Code)  
  SELECT @nSpId as sp_id,'LATER' AS MEMO_ID,'LATER' AS MEMO_NO,CM_DT AS MEMO_DT,CUSTOMER_CODE  
  ,'0000000000' AC_CODE,1 AS MODE,0 AS SENT_FOR_RECON,LAST_UPDATE,0 AS CANCELLED  
  ,USER_CODE,FIN_YEAR,REMARKS,@CLOCATIONID AS DEPT_ID,BIN_ID,GETDATE() AS MEMO_TIME  
  ,0 AS RECONCILED,location_Code FROM RPS_RPS_MST_UPLOAD (NOLOCK) WHERE sp_id=@nSpId  
   
  INSERT APR_APPROVAL_RETURN_det_UPLOAD (sp_id,MEMO_ID,QUANTITY,ROW_ID,EMP_CODE,REMARKS  
    ,APD_ROW_ID,AUTO_SRNO,BIN_ID,APD_PRODUCT_CODE,MRP,DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT,RFNET)  
  SELECT @nSpId AS sp_id, 'LATER' AS MEMO_ID,B.QUANTITY-ISNULL(C.RET_QTY,0) AS QUANTITY  
    ,'LATER' AS ROW_ID,B.EMP_CODE,'' AS REMARKS,B.ROW_ID AS APD_ROW_ID,  
    0 as AUTO_SRNO,B.BIN_ID,B.PRODUCT_CODE AS APD_PRODUCT_CODE,b.MRP,  
    b.DISCOUNT_PERCENTAGE,0 as DISCOUNT_AMOUNT,0 RFNET  
  FROM APM01106 A  (NOLOCK)      
  JOIN APD01106 B  (NOLOCK) ON A.MEMO_ID = B.MEMO_ID       
  LEFT OUTER JOIN       
  (  
   SELECT APD_ROW_ID,SUM(A.QUANTITY) AS RET_QTY   
   FROM APPROVAL_RETURN_DET A (NOLOCK)     
   JOIN APPROVAL_RETURN_MST MST (NOLOCK) ON A.MEMO_ID=MST.MEMO_ID     
   JOIN APD01106 B (NOLOCK) ON A.APD_ROW_ID=B.ROW_ID   
   JOIN APM01106 C (NOLOCK) ON C.MEMO_ID=B.MEMO_ID      
   WHERE c.REF_CM_ID =@cMemoId AND C.CANCELLED=0 AND MST.CANCELLED=0  
   GROUP BY APD_ROW_ID  
  ) C ON C.APD_ROW_ID=B.ROW_ID       
  WHERE A.REF_CM_ID =@cMemoId AND A.CANCELLED=0  
  AND (B.QUANTITY-ISNULL(C.RET_QTY,0)) > 0  
 END  
         
 IF NOT EXISTS (SELECT row_id FROM APR_APPROVAL_RETURN_det_UPLOAD (NOLOCK) WHERE sp_id=@nSpId)  
 BEGIN  
  DELETE  FROM APR_APPROVAL_RETURN_mst_UPLOAD WITH (ROWLOCK) WHERE sp_id=@nSpId  
 END  
 ELSE  
  SET @BAPPRETFOUND=1  
      
 IF @BAPPRETFOUND=1  
 BEGIN      
  SET @cStep = 380  
  EXEC SP_CHKXNSAVELOG 'SLS',@cStep,0,@NSPID,1  
  
  declare @cWizappuserCode varchar(10),@NALLOWNEGSTOCK INT
  select top 1 @cWizappuserCode=user_code from APR_APPROVAL_RETURN_mst_UPLOAD (NOLOCK) WHERE sp_id=@nSpId
  EXEC SAVETRAN_APR  
  @NUPDATEMODE=1,  
  @NSPID=@nSpId,  
  @CFINYEAR=@CFINYEAR,  
  @BCALLEDFROMSLS=1,
  @cWizappuserCode=@cWizappuserCode,
  @BALLOWNEGSTOCK=@BALLOWNEGSTOCK,
  @CMEMOIDOUTPUT=@CAPRMEMOID OUTPUT,  
  @CERRORMSG=@CERRORMSG OUTPUT  
    
  IF ISNULL(@cErrormsg,'')<>''  
   GOTO END_PROC  
  
  exec SP3S_POPULATE_SKUACTIVETITLES  
  @cXnType='APR',  
  @cXnId=@CAPRMEMOID,  
  @cErrormsg=@cErrormsg output  
  
 END  
END TRY  
  
BEGIN CATCH  
 print 'enter catch of genapr_data:'+error_message()  
 SET @cErrormsg='Error in Procedure sp3s_genapr_data at Step#'+@cStep+' '+ERROR_MESSAGE()  
 print @cErrormsg  
 GOTO END_PROC  
END CATCH  
  
END_PROC:  
  
END 
