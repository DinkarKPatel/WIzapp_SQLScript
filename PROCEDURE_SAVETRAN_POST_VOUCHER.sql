CREATE PROCEDURE SAVETRAN_POST_VOUCHER--(LocId 3 digit change by Sanjay:06-11-2024)
(
  @NSPID VARCHAR(50),
  @CWIZAPPUSERCODE VARCHAR(10)='0000000'    
)
AS
BEGIN

	 DECLARE  @CTEMPDBNAME			VARCHAR(100),@CERRVMID VARCHAR(40),    
     @CMASTERTABLENAME		VARCHAR(100),  @nErrorRows INT,  
     @CDETAILTABLENAME		VARCHAR(100),    
     @CDETAILTABLENAME1		VARCHAR(100), 
     @CDETAILTABLENAME2		VARCHAR(100),
     @CDETAILTABLENAME3		VARCHAR(100),   
     @CTEMPMASTERTABLENAME	VARCHAR(100),    
     @CTEMPDETAILTABLENAME	VARCHAR(100),    
     @CTEMPDETAILTABLENAME1 VARCHAR(100),  
     @CTEMPDETAILTABLENAME2 VARCHAR(100),	       
     @CTEMPDETAILTABLENAME2ADJLINK VARCHAR(100),	       
     @CTEMPDETAILTABLENAME3 VARCHAR(100),	       
     @CTEMPMASTERTABLE		VARCHAR(100),    
     @CTEMPDETAILTABLE		VARCHAR(100),    
     @CTEMPDETAILTABLE1		VARCHAR(100),    
     @CTEMPDETAILTABLE2		VARCHAR(100),  
     @CTEMPDETAILTABLE2ADJLINK VARCHAR(100),
     @CTEMPDETAILTABLE3		VARCHAR(100),  
     @CERRORMSG				VARCHAR(500),      
     @CKEYFIELD1			VARCHAR(50),    
     @CKEYFIELDVAL1			VARCHAR(50),    
     @CMEMONO				VARCHAR(20),    
     @NMEMONOLEN			NUMERIC(20,0),    
     @nMEMONOVAL			int,
     @CMEMODEPTID			VARCHAR(4),    
     @CLOCATIONID			VARCHAR(4),    
     @CHODEPTID				VARCHAR(4),    
     @CCMD					NVARCHAR(4000),    
     @NSAVETRANLOOP			BIT,    
     @CSTEP					VARCHAR(10),       
     @CMSG                  VARCHAR(200),
     @CBOPINDENTTABLENAME   VARCHAR(100), 
     @CTEMPBOPINDENTTABLENAME VARCHAR(100),
     @CTEMPBOPINDENTTABLE     VARCHAR(100),
     @CFLAG		              BIT,
     @CVMID					VARCHAR(50),
     @CVMNO					VARCHAR(10),
     @CPREFIXVALUE			VARCHAR(3),
     @DTVOUCHERDATE			DATETIME,
     @NVOUCHORNO_MODE		INT,@cCurLocId VARCHAR(10),
     @CDEPT_ID  VARCHAR(5),
     @CXNTYPE  VARCHAR(10) ,@CVOUCHERCODE VARCHAR(10),
     @BEXISTS BIT,
     @CTEMPDB VARCHAR(500),
     @BBILLBYBILL BIT,@NCDPCT INT,@CFILTERCONDITION VARCHAR(500),
     @BCALLEDFROMDIRECTVOUCHERENTRY BIT,@NDRTOTAL NUMERIC(14,4),@NCRTOTAL NUMERIC(14,4),
     @CBILLTYPE VARCHAR(10),@DVMDT DATETIME,@COTHERVMID VARCHAR(50),@CVMLOCID VARCHAR(5),
     @CRETAILSALEACCODE CHAR(10),@CRETAILSALEACNAME VARCHAR(500),@BSALEACMISMATCHCREATED BIT,
     @CREFNO VARCHAR(100),@NADJAMT NUMERIC(10,2),@NBILLAMT NUMERIC(10,2),@BLOOP BIT,@CFINYEAR VARCHAR(10)
     ,@cHEAD_CODE VARCHAR(MAX)
	     
BEGIN TRY    
			
 
    SET @CSTEP = 10         

    DECLARE @OUTPUT TABLE
	(
		XN_ID	VARCHAR(40),XN_TYPE VARCHAR(30),XN_NO VARCHAR(40),
		XN_DT DATETIME,XN_AMT NUMERIC(14,2),XN_AC VARCHAR(100),
		ERR_DESC VARCHAR(500),DEPT_ID VARCHAR(5),err_entry BIT
	)   
	    
	DECLARE @CACCODE VARCHAR(20),@CVDID VARCHAR(10),@CXNID VARCHAR(100),@CBILLNO VARCHAR(100),
			@NAMOUNT NUMERIC(10,2),@NCRDAYS NUMERIC(5) 
	
	SET @CSTEP = 12 
	SELECT @NVOUCHORNO_MODE = ISNULL(VALUE,0) FROM CONFIG WHERE CONFIG_OPTION = 'VOUCHER_NO_SYSTEM' 
	SELECT TOP 1 @cCurLocId = VALUE FROM  config (NOLOCK) WHERE config_option='location_id'
	
	SET @CKEYFIELD1   = 'VM_ID'    
	SET @CMEMONO   = 'VOUCHER_NO' 
			
LBLSTART:
	
	SELECT TOP 1 @cXntype=bill_type FROM ACT_VM01106_UPLOAD (NOLOCK) WHERE sp_id=@nSpId

	
	SET @CSTEP = 15
	PRINT 'Running Savetran_post_voucher Step#'+@cStep
	/*
	   DEBIT AMOUNT MUST BE EQUAL TO CREDIT AMOUNT IN VM01106.
	*/

	
    IF EXISTS (SELECT TOP 1 VM_ID FROM ACT_VM01106_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID AND chk=1 AND CRTOTAL <> DRTOTAL)
    BEGIN
		INSERT @OUTPUT (xn_id,XN_NO,XN_DT,DEPT_ID,ERR_DESC)
		SELECT  vm_id,bill_no,VOUCHER_DT,DEPT_ID,'DEBIT AMOUNT ('+LTRIM(RTRIM(STR(DRTOTAL,10,2)))+') IS NOT EQUAL TO CREDIT AMOUNT('+LTRIM(RTRIM(STR(CRTOTAL,10,2)))+')'
		FROM ACT_VM01106_UPLOAD (NOLOCK)  WHERE SP_ID=@NSPID AND chk=1 AND CRTOTAL <> DRTOTAL
	END
	
		 	
	SET @CSTEP = 17
	PRINT 'Running Savetran_post_voucher Step#'+@cStep
	INSERT @OUTPUT (xn_id,XN_NO,XN_DT,DEPT_ID,ERR_DESC)
	SELECT b.vm_id,bill_no,B.VOUCHER_DT,B.DEPT_ID,'DIFFERENCE IN DETAILED DEBIT AMOUNT :'+LTRIM(RTRIM(STR(SUM(DEBIT_AMOUNT),10,2)))+
	' AND CREDIT AMOUNT :'+LTRIM(RTRIM(STR(SUM(CREDIT_AMOUNT),10,2))) 
	FROM ACT_VD01106_UPLOAD A (NOLOCK) 
	JOIN ACT_VM01106_UPLOAD B (NOLOCK) ON A.VM_ID=B.VM_ID AND a.sp_id=b.sp_id
	WHERE B.SP_ID=@NSPID AND b.chk=1
	GROUP BY b.vm_id,bill_no,B.VOUCHER_DT,B.DEPT_ID HAVING ABS(SUM(DEBIT_AMOUNT)-SUM(CREDIT_AMOUNT))>0
	

	SET @CSTEP = 19
	PRINT 'Running Savetran_post_voucher Step#'+@cStep
	INSERT @OUTPUT (xn_id,XN_NO,XN_DT,DEPT_ID,ERR_DESC)
	SELECT b.vm_id,bill_no,B.VOUCHER_DT,B.DEPT_ID,'BLANK A/C NAME or Code NOT ALLOWED for name:'+ISNULL(lm.ac_name,'')
	FROM ACT_VD01106_UPLOAD A (NOLOCK) 
	JOIN ACT_VM01106_UPLOAD B (NOLOCK)  ON A.VM_ID=B.VM_ID AND a.sp_id=b.sp_id
	LEFT JOIN lm01106 lm (NOLOCK) ON lm.ac_code=a.ac_code
	WHERE B.SP_ID=@NSPID AND b.chk=1 AND ISNULL(A.AC_CODE,'') IN ('','0000000000')
	
	SET @CSTEP = 19.5
	PRINT 'Running Savetran_post_voucher Step#'+@cStep
	INSERT @OUTPUT (xn_id,XN_NO,XN_DT,DEPT_ID,ERR_DESC)
	SELECT l.vm_ID xn_id,b.BILL_NO XN_NO,b.VOUCHER_DT XN_DT,DEPT_ID,'MISMATCH FOUND IN Current BILL BY BILL ENTRY FOR LEDGER NAME :'+ac_name+
	' LEDGER AMT : '+LTRIM(RTRIM(STR(a.debit_amount-a.credit_amount,10,2)))+' BILL BY BILL AMT:'+
	LTRIM(RTRIM(STR(ISNULL(c.amount,0),10,2))) as err_desc
	FROM ACT_VD01106_UPLOAD A (NOLOCK)
	JOIN ACT_VM01106_UPLOAD B (NOLOCK) ON a.sp_id=b.sp_id AND A.VM_ID=B.VM_ID 
	JOIN ACT_POSTACT_VOUCHER_LINK_UPLOAD l (NOLOCK) ON l.SP_ID=b.sp_id AND l.vm_id=b.vm_id
	JOIN LMP01106 LMP (NOLOCK) ON LMP.AC_CODE=A.AC_CODE
	JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE=LMP.AC_CODE
	LEFT OUTER JOIN 
	(
	SELECT a.sp_id,A.VD_ID,a.vm_id,SUM(CASE WHEN A.X_TYPE='DR' THEN AMOUNT ELSE -AMOUNT END) AS AMOUNT
		FROM ACT_BILL_BY_BILL_REF_UPLOAD A (NOLOCK) 
		JOIN ACT_VD01106_UPLOAD B (NOLOCK) ON A.SP_ID=B.SP_ID AND A.VD_ID=B.VD_ID AND a.vm_id=b.vm_id
		JOIN ACT_VM01106_UPLOAD C (NOLOCK) ON C.SP_ID=B.SP_ID AND B.VM_ID=C.VM_ID
		WHERE C.SP_ID=@nSpId AND c.chk=1
		GROUP BY a.sp_id,A.VD_ID,a.vm_id
		)C ON a.sp_id=c.sp_id AND A.VD_ID=C.VD_ID  and a.vm_id=c.vm_id
 	WHERE  b.sp_id=@nSpId AND ROUND(ABS((A.DEBIT_AMOUNT-A.CREDIT_AMOUNT)-ISNULL(C.AMOUNT,0)),2)>.1		
	AND LMP.BILL_BY_BILL=1 AND b.chk=1

	
	PRINT 'DELETE ERROR VOUCHERS-1'
	BEGIN TRANSACTION   	
	SET NOCOUNT OFF
	
	SET @CSTEP = 22
	PRINT 'Running Savetran_post_voucher Step#'+@cStep

	DELETE A WITH (ROWLOCK) FROM ACT_POSTACT_VOUCHER_LINK_UPLOAD A JOIN @OUTPUT C ON c.xn_id=a.vm_id
	WHERE a.sp_id=@nSpId


	PRINT 'DELETE ERROR VOUCHERS-2'
	DELETE A WITH (ROWLOCK) FROM ACT_BILL_BY_BILL_REF_UPLOAD A JOIN ACT_VD01106_UPLOAD B ON A.VD_ID=B.VD_ID  AND A.VM_ID=B.VM_ID AND A.SP_ID=B.SP_ID
	JOIN @OUTPUT D ON d.XN_ID=b.VM_ID
	WHERE a.sp_id=@nSpId

	PRINT 'DELETE ERROR VOUCHERS-3'

	DELETE A WITH (ROWLOCK) FROM ACT_VD01106_UPLOAD A
	JOIN @OUTPUT D ON d.XN_ID=a.VM_ID
	WHERE a.sp_id=@nSpId
	
	PRINT 'DELETE ERROR VOUCHERS-4'
	DELETE A WITH (ROWLOCK) FROM ACT_VM01106_UPLOAD A 
	JOIN @OUTPUT D ON d.XN_ID=a.VM_ID
	WHERE a.sp_id=@nSpId

	--select 'check after deletion',* FROM ACT_VM01106_UPLOAD WITH (NOLOCK) WHERE SP_ID=@NSPID
	 
	SET @CSTEP = 25
	PRINT 'Running Savetran_post_voucher Step#'+@cStep
	SET NOCOUNT ON
	IF NOT EXISTS (SELECT TOP 1 * FROM ACT_VM01106_UPLOAD WITH (NOLOCK) WHERE SP_ID=@NSPID AND chk=1)
		GOTO END_PROC
	
	
	UPDATE ACT_VM01106_UPLOAD WITH (ROWLOCK)  SET location_code=dept_id WHERE SP_ID=@NSPID AND chk=1
	
	UPDATE ACT_VM01106_UPLOAD WITH (ROWLOCK)  SET USER_CODE=@CWIZAPPUSERCODE WHERE SP_ID=@NSPID AND chk=1
	
	SET @CSTEP=55
	UPDATE ACT_VM01106_UPLOAD WITH (ROWLOCK)  SET TEMP_VM_ID=VM_ID WHERE SP_ID=@NSPID AND chk=1													

	UPDATE a WITH (ROWLOCK) SET TEMP_VD_ID=VD_ID,chk=b.chk,X_TYPE=(CASE WHEN x_type='DR' THEN 'Dr' ELSE 'Cr' END)
	FROM act_vd01106_upload a 
	JOIN ACT_VM01106_UPLOAD b (NOLOCK) ON a.SP_ID=b.SP_ID AND a.VM_ID=b.VM_ID
	WHERE a.sp_id=@nSpId AND b.chk=1
		
	SET @CSTEP=60
	DELETE A WITH (ROWLOCK)  FROM BILL_BY_BILL_REF A 
	JOIN VD01106 B (NOLOCK) ON A.VD_ID = B.VD_ID 
	JOIN VM01106 C (NOLOCK) ON B.VM_ID = C.VM_ID 
	LEFT JOIN ACT_VM01106_UPLOAD D (NOLOCK) ON D.VOUCHER_DT=C.VOUCHER_DT AND D.DEPT_ID=C.DEPT_ID AND D.SP_ID=@NSPID AND d.chk=1
	LEFT JOIN ACT_VM01106_UPLOAD E (NOLOCK) ON e.vm_id=c.vm_id AND E.SP_ID=@NSPID AND e.chk=1
	WHERE C.BILL_TYPE=@cXntype AND C.CANCELLED=0
	AND ((c.bill_type='SLS' AND d.VM_ID IS NOT NULL) OR (c.bill_type<>'SLS' AND e.VM_ID IS NOT NULL))

	SET @CSTEP=63
	DELETE A WITH (ROWLOCK) FROM POSTACT_VOUCHER_LINK A 
	JOIN VM01106 c (NOLOCK) ON c.VM_ID = A.VM_ID 
	LEFT JOIN ACT_VM01106_UPLOAD D (NOLOCK) ON D.VOUCHER_DT=C.VOUCHER_DT AND D.DEPT_ID=C.DEPT_ID AND D.SP_ID=@NSPID AND d.chk=1
	LEFT JOIN ACT_VM01106_UPLOAD E (NOLOCK) ON e.vm_id=c.vm_id AND E.SP_ID=@NSPID AND e.chk=1
	WHERE C.BILL_TYPE=@cXntype AND C.CANCELLED=0 
	AND ((c.bill_type='SLS' AND d.VM_ID IS NOT NULL) OR (c.bill_type<>'SLS' AND e.VM_ID IS NOT NULL))


	print 'Cancel ptc vouchers already posted'
	----Special case of Petty Cash Posting Where dual voucher gets Posted and User modifies the Petty cash entry
	--- and removes the Debit entry of Petty cash and already Posted voucher stands uncancelled

	SET @CSTEP=63.5
	IF EXISTS (SELECT TOP 1 vm_id FROM  ACT_POSTACT_VOUCHER_LINK_UPLOAD (NOLOCK) WHERE sp_id=@nSpId AND xn_type='PTC')
		UPDATE c  SET cancelled=1 FROM POSTACT_VOUCHER_LINK A WITH (ROWLOCK)
		JOIN VM01106 c (NOLOCK) ON c.VM_ID = A.VM_ID 
		JOIN ACT_POSTACT_VOUCHER_LINK_UPLOAD E (NOLOCK) ON LEFT(e.memo_id,22)=LEFT(a.memo_id,22) AND a.xn_type=e.xn_type
		JOIN ACT_VM01106_UPLOAD VM (nolock) ON vm.sp_id=e.sp_id AND vm.vm_id=e.vm_id
		WHERE C.BILL_TYPE='PTC' AND C.CANCELLED=0  AND a.xn_type='PTC'
		AND E.SP_ID=@NSPID AND vm.chk=1


	SET @CSTEP=65
	
	SET @cHEAD_CODE = DBO.FN_ACT_TRAVTREE('0000000013') 

	SELECT A.COST_CENTER_DEPT_ID,B.VOUCHER_DT,A.RECON_DT,A.AC_CODE,a.vm_id INTO #TMPBANKRECO 
	FROM  VD01106 A (NOLOCK) JOIN VM01106 B (NOLOCK) ON A.VM_ID=B.VM_ID
	WHERE 1=2
	
	SET @CSTEP=67
	IF @cXntype='SLS'
		INSERT INTO #TMPBANKRECO (cost_center_dept_id,VOUCHER_DT,RECON_DT,AC_CODE,VM_ID)
		SELECT A.COST_CENTER_DEPT_ID,B.VOUCHER_DT,A.RECON_DT,A.AC_CODE,a.vm_id
		FROM  VD01106 A (NOLOCK) JOIN VM01106 B (NOLOCK) ON A.VM_ID=B.VM_ID
		JOIN ACT_VM01106_UPLOAD C (NOLOCK) ON C.VOUCHER_DT=B.VOUCHER_DT AND C.DEPT_ID=B.DEPT_ID 
		JOIN LM01106 D (NOLOCK) ON D.AC_CODE=A.AC_CODE
		WHERE C.SP_ID=@NSPID AND B.BILL_TYPE=@cXntype AND B.CANCELLED=0  AND c.chk=1
		AND CHARINDEX(D.HEAD_CODE,@cHEAD_CODE)>0 AND RECON_DT<>''	
	ELSE
		INSERT INTO #TMPBANKRECO (cost_center_dept_id,VOUCHER_DT,RECON_DT,AC_CODE,VM_ID)
		SELECT A.COST_CENTER_DEPT_ID,B.VOUCHER_DT,A.RECON_DT,A.AC_CODE,a.vm_id
		FROM  VD01106 A (NOLOCK) JOIN VM01106 B (NOLOCK) ON A.VM_ID=B.VM_ID
		JOIN ACT_VM01106_UPLOAD C (NOLOCK) ON C.vm_id=a.vm_id
		JOIN LM01106 D (NOLOCK) ON D.AC_CODE=A.AC_CODE
		WHERE C.SP_ID=@NSPID AND B.BILL_TYPE=@cXntype AND B.CANCELLED=0  AND c.chk=1
		AND CHARINDEX(D.HEAD_CODE,@cHEAD_CODE)>0 AND RECON_DT<>''	
		
	SET @CSTEP=70
	DELETE A WITH (ROWLOCK) FROM  VD01106 A 
	JOIN VM01106 C (NOLOCK) ON A.VM_ID=C.VM_ID
	LEFT JOIN ACT_VM01106_UPLOAD D (NOLOCK) ON D.VOUCHER_DT=C.VOUCHER_DT AND D.DEPT_ID=C.DEPT_ID AND D.SP_ID=@NSPID AND d.chk=1
	LEFT JOIN ACT_VM01106_UPLOAD E (NOLOCK) ON e.vm_id=c.vm_id AND E.SP_ID=@NSPID AND e.chk=1
	WHERE C.BILL_TYPE=@cXntype AND C.CANCELLED=0 
	AND ((c.bill_type='SLS' AND d.VM_ID IS NOT NULL) OR (c.bill_type<>'SLS' AND e.VM_ID IS NOT NULL))
	
	SET @CSTEP=75
	DELETE C WITH (ROWLOCK) FROM  VM01106 C 	
	LEFT JOIN ACT_VM01106_UPLOAD D (NOLOCK)  ON D.VOUCHER_DT=C.VOUCHER_DT AND D.DEPT_ID=C.DEPT_ID AND D.SP_ID=@NSPID AND d.chk=1
	LEFT JOIN ACT_VM01106_UPLOAD E (NOLOCK)  ON e.vm_id=c.vm_id AND E.SP_ID=@NSPID AND e.chk=1
	WHERE C.BILL_TYPE=@cXntype AND C.CANCELLED=0 
	AND ((c.bill_type='SLS' AND d.VM_ID IS NOT NULL) OR (c.bill_type<>'SLS' AND e.VM_ID IS NOT NULL))

   	
   SET @CSTEP=80		
	
   --GENRATE VM_ID 
   UPDATE ACT_VM01106_UPLOAD WITH (ROWLOCK) SET VM_ID = DEPT_ID+RTRIM(LTRIM(CONVERT(VARCHAR(38),NEWID()))),
   voucher_no='LATER'
   WHERE SP_ID=@NSPID AND LEFT(VM_ID,5)='LATER' AND chk=1
	
 -- if @@spid=120
	--select 'check vm_id', dept_id,vm_id,* from  ACT_VM01106_UPLOAD where sp_id=120  and chk=1
  
   SET @CSTEP = 90
   --CHECK FOR GENRATE UNIQUE VM ID 
   SET @CFLAG = 0 
   WHILE @CFLAG=0
   BEGIN
		PRINT 'GENERATING VM_ID IN TEMP DATA'
		IF EXISTS (SELECT TOP 1 A.VM_ID FROM ACT_VM01106_UPLOAD A (NOLOCK) JOIN VM01106 B (NOLOCK) ON A.VM_ID=B.VM_ID
				   WHERE SP_ID=@NSPID AND a.chk=1 AND a.voucher_no='LATER')
		BEGIN
		   UPDATE A WITH (ROWLOCK) SET A.VM_ID = A.DEPT_ID+RTRIM(LTRIM(CONVERT(VARCHAR(38),NEWID()))) 
		   FROM ACT_VM01106_UPLOAD A
		   JOIN VM01106 B (NOLOCK) ON A.VM_ID = B.VM_ID 
		   WHERE SP_ID=@NSPID AND a.voucher_no='LATER' AND a.chk=1
		END
		ELSE
		BEGIN
			SET @CFLAG = 1
		END 
   END
   
   SET @CSTEP = 260
	SELECT cost_center_dept_id,ac_code,SUM(debit_amount) debit_amount,SUM(credit_amount) credit_amount
	INTO #tmpLmBal  FROM ACT_VD01106_UPLOAD a (NOLOCK)
	JOIN ACT_VM01106_UPLOAD b (NOLOCK) ON a.sp_id=b.sp_id AND a.vm_id=b.vm_id
	WHERE b.SP_ID=@NSPID AND LEFT(VOUCHER_NO,5)<>'LATER' AND LEFT(b.vm_id,5)<>'LATER' AND b.chk=1             
	GROUP BY cost_center_dept_id,ac_code


    IF EXISTS (SELECT TOP 1 ac_code FROM #tmpLmBal)
	BEGIN
--select 'before editing', * from loc_ledger_balance where ac_code='H100000095' and dept_id in ('h1','01')
		SET @CSTEP = 262
		EXEC SP3S_UPDATE_LEDGERBALANCES
		@nUpdateMode=2,
		@cTableName='#tmpLmBal'
   END
   
   DECLARE @bNewVchFound BIT,@NVALLEN INT,@cLastKEYVAL VARCHAR(20)
   SET @bNewVchFound=0

   SELECT TOP 1 @CVMID=VM_ID,@CDEPT_ID=DEPT_ID,@CVOUCHERCODE= VOUCHER_CODE,
	            @DTVOUCHERDATE=VOUCHER_DT,@CFINYEAR=FIN_YEAR,@bNewVchFound=1  FROM ACT_VM01106_UPLOAD (NOLOCK)
   WHERE SP_ID=@NSPID AND LEFT(VOUCHER_NO,5)='LATER' AND chk=1             
   
   SET @bLoop=0

   IF ISNULL(@bNewVchFound,0)=1
		SET @bLoop=1
	
   IF @NVOUCHORNO_MODE NOT BETWEEN 1 AND 3
		SELECT @NVOUCHORNO_MODE = 1
   
    CREATE TABLE #tmpNextVchOutput (errmsg varchar(max))

	SET @CSTEP=290    
	EXEC GETNEXTVCHNO  
	@DVCHDT=@DTVOUCHERDATE,
	@CVCHCODE=@CVOUCHERCODE,
	@NMODE=@NVOUCHORNO_MODE,
	@NWIDTH=10,
	@CCOMPANYCODE='01',
	@CPREFIX=@cCurLocId,
	@CFINYEAR=@CFINYEAR,
	@bCalledFromPostVoucher=1,
	@nSpId=@nSpid,
	@CNEWKEYVAL=@nMEMONOVAL OUTPUT  


	IF EXISTS (SELECT TOP 1 errmsg from #tmpNextVchOutput where errmsg<>'')
	BEGIN
		SELECT TOP 1 @CERRORMSG=errmsg from #tmpNextVchOutput where errmsg<>''
		GOTO END_PROC
	END
	
	IF ISNULL(@nMEMONOVAL,0)=0
	BEGIN
		SET @CERRORMSG = 'P:SAVETRAN_POST_VOUCHER, STEP: '+@CSTEP+', MESSAGE: ERROR GENERATING MEMO_NO...'    
		GOTO END_PROC
	END

   --GENRATE VD_ID 
   SET @CSTEP=445
   UPDATE ACT_VD01106_UPLOAD WITH (ROWLOCK) SET VD_ID = RTRIM(LTRIM(CONVERT(VARCHAR(40),NEWID()))) 
   WHERE SP_ID=@NSPID AND chk=1
   
   --CHECK FOR GENRATE UNIQUE VD_ID
   SET @CSTEP=450
   SET @CFLAG = 0 
   WHILE @CFLAG=0
   BEGIN
		PRINT 'GENERATING VD_ID IN TEMP DATA'
		IF EXISTS (SELECT TOP 1 A.VD_ID FROM ACT_VD01106_UPLOAD A (NOLOCK) JOIN VD01106 B (NOLOCK) ON A.VD_ID=B.VD_ID
				   JOIN ACT_VM01106_UPLOAD c (NOLOCK) ON a.sp_id=c.sp_id AND a.VM_ID=c.VM_ID	
				   WHERE A.SP_ID=@NSPID AND c.chk=1)
		BEGIN
			   UPDATE A WITH  (ROWLOCK) SET A.VD_ID = @CDEPT_ID+RTRIM(LTRIM(CONVERT(VARCHAR(40),NEWID()))) 
			   FROM ACT_VD01106_UPLOAD A 
			   JOIN VD01106 B (NOLOCK) ON A.VD_ID = B.VD_ID
			   JOIN ACT_VM01106_UPLOAD c (NOLOCK) ON a.sp_id=c.sp_id AND a.VM_ID=c.VM_ID	
			   WHERE A.SP_ID=@NSPID AND c.chk=1
		END
		ELSE
		BEGIN
			SET @CFLAG = 1
		END 
   END

  ---UPDATE VD_ID IN TEMP BILL_BY_BILL_REF TABLE 
  SET @CSTEP=470
  UPDATE A WITH (ROWLOCK)  SET VD_ID=B.VD_ID,VM_ID=C.VM_ID,chk=1 FROM ACT_BILL_BY_BILL_REF_UPLOAD A 
  JOIN ACT_VD01106_UPLOAD B (NOLOCK)  ON A.VD_ID=B.TEMP_VD_ID AND A.VM_ID=B.VM_ID AND A.SP_ID=B.SP_ID
  JOIN ACT_VM01106_UPLOAD C (NOLOCK)  ON C.TEMP_VM_ID=A.VM_ID AND A.SP_ID=C.SP_ID
  WHERE A.SP_ID=@NSPID AND c.chk=1
   
  --UPDATE VM_ID IN TEMP VD01106 TABLE 

  SET @CSTEP=460
  UPDATE A WITH (ROWLOCK)   SET VM_ID=B.VM_ID FROM ACT_VD01106_UPLOAD A 
  JOIN ACT_VM01106_UPLOAD B (NOLOCK) ON A.VM_ID=B.TEMP_VM_ID AND A.SP_ID=B.SP_ID
  WHERE A.SP_ID=@NSPID  AND b.chk=1
  
  ---UPDATE VM_ID IN  POSTACT_VOUCHER_LINK  
  SET @CSTEP=470
  UPDATE A WITH (ROWLOCK) SET VM_ID=B.VM_ID,chk=1 FROM ACT_POSTACT_VOUCHER_LINK_UPLOAD A 
  JOIN ACT_VM01106_UPLOAD B (NOLOCK) ON A.VM_ID=B.TEMP_VM_ID AND A.SP_ID=B.SP_ID
  WHERE A.SP_ID=@NSPID AND b.chk=1
   
  SET @CFILTERCONDITION=' B.SP_ID= '+LTRIM(RTRIM(STR(@NSPID)))+' AND b.chk=1'
  
  SET @CSTEP=475
  
  UPDATE A WITH (ROWLOCK)  SET COST_CENTER_DEPT_ID =B.DEPT_ID FROM ACT_VD01106_UPLOAD A 
  JOIN ACT_VM01106_UPLOAD B (NOLOCK) ON A.VM_ID=B.VM_ID AND a.sp_id=b.sp_id
  WHERE A.SP_ID=@NSPID AND ISNULL(a.COST_CENTER_DEPT_ID,'')='' AND b.chk=1

  ---- RETAIN THE BANK RECO DATE FROM THE OLD VOUCHERS POSTED
  SET @CSTEP=480
  UPDATE A WITH (ROWLOCK) SET RECON_DT=C.RECON_DT FROM ACT_VD01106_UPLOAD A 
  JOIN ACT_VM01106_UPLOAD B (NOLOCK) ON A.VM_ID=B.VM_ID AND A.SP_ID=B.SP_ID
  JOIN #TMPBANKRECO C ON c.vm_id=a.vm_id AND C.AC_CODE=A.AC_CODE
  WHERE A.SP_ID=@NSPID AND b.chk=1
   

 -- if @@spid=120
	--select 'check vm_id before inserting',voucher_no, dept_id,vm_id,* from  ACT_VM01106_UPLOAD where sp_id=120  and chk=1  	          	      

  ---INSERT/UPDATE VM01106
  SET @CSTEP=490
  EXEC UPDATEMASTERXN_OPT
		 @CSOURCEDB = ''  
	   , @CSOURCETABLE = 'ACT_VM01106_UPLOAD'
	   , @CDESTDB  = ''    
	   , @CDESTTABLE = 'VM01106'
	   , @CKEYFIELD1 = 'VM_ID'    
	   , @LINSERTONLY=0
	   , @CFILTERCONDITION = @CFILTERCONDITION
	   , @BALWAYSUPDATE=1
  
  ---INSERT/UPDATE VD01106
  SET @CSTEP = 500  
  EXEC UPDATEMASTERXN_OPT  
		 @CSOURCEDB = ''
	   , @CSOURCETABLE = 'ACT_VD01106_UPLOAD'
	   , @CDESTDB  = ''    
	   , @CDESTTABLE = 'VD01106'    
	   , @CKEYFIELD1 = 'VD_ID' 
	   , @LINSERTONLY =1   
	   , @CFILTERCONDITION = @CFILTERCONDITION
	   , @BALWAYSUPDATE=1
	   
  --INSERT/UPDATE POSTACT_VOUCHER_LINK
  SET @CSTEP = 510  
  EXEC UPDATEMASTERXN_OPT     
		 @CSOURCEDB = ''
	   , @CSOURCETABLE = 'ACT_POSTACT_VOUCHER_LINK_UPLOAD'
	   , @CDESTDB  = ''    
	   , @CDESTTABLE = 'POSTACT_VOUCHER_LINK'    
	   , @CKEYFIELD1 = 'VM_ID'
	   , @LINSERTONLY=1
	   , @CFILTERCONDITION = @CFILTERCONDITION
	   , @BALWAYSUPDATE=1

  SET @CSTEP = 513  
  UPDATE ACT_BILL_BY_BILL_REF_UPLOAD SET BB_ROW_ID=NEWID() WHERE SP_ID=@NSPID
  
  DECLARE @cDebtorHeads VARCHAR(MAX),@cCreditorHeads VARCHAR(MAX)
     
	SET @cDebtorHeads	= DBO.FN_ACT_TRAVTREE('0000000018') 
	SET @cCreditorHeads	= DBO.FN_ACT_TRAVTREE('0000000021')


	--if @@spid=66
	--	select 'chk ACT_BILL_BY_BILL_REF_UPLOAD b4',* from ACT_BILL_BY_BILL_REF_UPLOAD where sp_id=@nSpId and chk=1

   INSERT ACT_BILL_BY_BILL_REF_UPLOAD	( adj_remarks, AMOUNT, amount_forex, bb_row_id, cd_amount, cd_base_amount, cd_percentage, cd_posted, chk, CR_DAYS, due_dt, 
   ignore_cd_base_amount, LAST_UPDATE, manual_cd, old_ref_no, on_account, org_bill_amount, org_bill_amount_forex, org_bill_dt, org_bill_no, payment_adj_ref_no, 
   pur_mrr_id, pur_tds_amount, REF_NO, Remarks, SP_ID, VD_ID, vm_id, X_TYPE )  
   SELECT 'Auto entry from Posting for Non Bill by bill Parties'  adj_remarks,(isnull(a.debit_amount,0)+isnull(a.CREDIT_AMOUNT,0)) AMOUNT,
   (isnull(a.debit_amount_forex,0)+isnull(a.CREDIT_AMOUNT_forex,0)) amount_forex,newid() bb_row_id, 
   0 cd_amount,0 cd_base_amount,0 cd_percentage,0 cd_posted,1 chk,0 CR_DAYS,'' due_dt,0 ignore_cd_base_amount, 
   getdate() LAST_UPDATE,0 manual_cd,'' old_ref_no,0 on_account,(isnull(a.debit_amount,0)+isnull(a.CREDIT_AMOUNT,0)) org_bill_amount,0 org_bill_amount_forex,
   b.BILL_DT org_bill_dt,b.BILL_NO org_bill_no,'' payment_adj_ref_no,'' pur_mrr_id,0 pur_tds_amount, 
   DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,LTRIM(RTRIM(B.BILL_NO)),B.BILL_DT,a.x_type,a.vm_id) REF_NO, Remarks,@NSPID SP_ID,a.VD_ID,
   a.VM_ID vm_id, a.X_TYPE FROM ACT_VD01106_UPLOAD a (NOLOCK)
   JOIN ACT_VM01106_UPLOAD b (NOLOCK) ON a.vm_id=b.vm_id AND B.SP_ID=a.SP_ID
   LEFT JOIN ACT_BILL_BY_BILL_REF_UPLOAD C (NOLOCK) ON c.VD_ID=a.VD_ID AND c.SP_ID=a.SP_ID
   JOIN LM01106 lm (NOLOCK) ON A.AC_CODE=lm.AC_CODE
   LEFT OUTER JOIN LMP01106 lmp (NOLOCK) ON lmp.AC_CODE=a.AC_CODE
   WHERE a.sp_id=@NSPID AND a.chk=1 AND ((CHARINDEX(lm.head_code,@cDebtorHeads)>0 OR CHARINDEX(lm.head_code,@cCreditorHeads)>0) AND ISNULL(lmp.BILL_BY_BILL,0)=0)
   AND c.SP_ID IS NULL

	--if @@spid=66
	--begin
	--	select 'chk ACT_BILL_BY_BILL_REF_UPLOAD after',* from ACT_BILL_BY_BILL_REF_UPLOAD where sp_id=@nSpId  and chk=1
	--	select 'chk ACT_vd01106_UPLOAD after',* from ACT_vd01106_UPLOAD where sp_id=@nSpId  and chk=1
	--end
  		
  --INSERT/UPDATE BILL_BY_BILL_REF
  SET @CSTEP = 516
  EXEC UPDATEMASTERXN_OPT    
	 @CSOURCEDB = ''    
   , @CSOURCETABLE = 'ACT_BILL_BY_BILL_REF_UPLOAD'
   , @CDESTDB  = ''    
   , @CDESTTABLE = 'BILL_BY_BILL_REF'
   , @CKEYFIELD1 = 'VD_ID'
   , @LINSERTONLY = 1
   , @CFILTERCONDITION = @CFILTERCONDITION
   , @BALWAYSUPDATE=1

	/*
		VALIDATION THAT AMOUNT IN BILL_BY_BILL FOR A VD_ID SHOULD BE EQUAL TO 
		THAT OF AMOUNT IN VD01106
	*/
	
	SELECT A.vm_id,count(distinct cost_center_dept_id) cnt INTO #tmpVmcc FROM 
	ACT_VD01106_UPLOAD a (NOLOCK) 
	JOIN ACT_VM01106_UPLOAD B (NOLOCK) ON a.sp_id=b.sp_id and A.VM_ID=B.VM_ID
	WHERE a.sp_id=@nSpId AND B.CHK=1
	GROUP BY A.vm_id HAVING count(distinct cost_center_dept_id)>1


	--select 'check multicc', * from #tmpVmcc

	set nocount off
	SET @cVmId=''
	WHILE EXISTS (SELECT TOP 1 * FROM #tmpVmcc)
	BEGIN
		SET @CSTEP=525

		SELECT TOP 1 @cVmId=vm_id FROM  #tmpVmCc

		--if @@spid=120
		--begin
		--	select @cVmId
		--	select 'before check multicc',autoentry,cost_center_dept_id, @cVmId vmid,@CERRORMSG errmsg,* from vd01106 (nolock)
		--	where vm_id=@cVmId

		--	select dept_id,vm_id,* from vm01106 where vm_id=@cVmId
		--end

		EXEC SP3S_VALIDATE_COSTCENTER_ENTRIES
		@NMODE=2,
		@cVmid=@cVmId,
		@CERRORMSG=@CERRORMSG OUTPUT
		
		
		--if @@spid=83
		--	select 'after check multicc',autoentry,cost_center_dept_id,@cVmId vmid,@CERRORMSG errmsg,* from vd01106 (nolock)
		--	where vm_id=@cVmId
				
		IF ISNULL(@CERRORMSG,'')<>''
			GOTO END_PROC		   	
		
		DELETE FROM  #tmpVmCC WHERE vm_id=@cVmId
	END 		

	SET @cStep=527


	INSERT @OUTPUT (XN_ID,XN_DT,DEPT_ID,ERR_DESC,err_entry)
	SELECT b.vm_id,B.VOUCHER_DT,DEPT_ID,'MISMATCH FOUND IN Total BILL BY BILL ENTRY AGST. BILL NO.: '+B.BILL_NO+' FOR LEDGER NAME :'+LM.AC_NAME+' LEDGER AMT : '+
	LTRIM(RTRIM(STR((A.CREDIT_AMOUNT-A.DEBIT_AMOUNT),10,2)))+' BILL BY BILL AMT:'+LTRIM(RTRIM(STR(ISNULL(C.AMOUNT,0),10,2)))+' .CANNOT PROCEED' ,1 err_entry
	FROM VD01106 A (NOLOCK)
	JOIN ACT_VM01106_UPLOAD B (NOLOCK) ON A.VM_ID=B.VM_ID
	JOIN LMP01106 LMP (NOLOCK) ON LMP.AC_CODE=A.AC_CODE
	JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE=LMP.AC_CODE
	LEFT OUTER JOIN 
	(
	 SELECT b.VM_ID,A.VD_ID,SUM(CASE WHEN A.X_TYPE='CR' THEN AMOUNT ELSE -AMOUNT END) AS AMOUNT
	 FROM BILL_BY_BILL_REF A   (NOLOCK)
	 JOIN VD01106 B (NOLOCK) ON A.VD_ID=B.VD_ID 
	 JOIN ACT_VM01106_UPLOAD C (NOLOCK) ON B.VM_ID=C.VM_ID
	 WHERE C.SP_ID=@NSPID 
	 GROUP BY A.VD_ID,b.VM_ID
	 )C ON A.VD_ID=C.VD_ID AND C.VM_ID=A.VM_ID
	 WHERE B.SP_ID=@NSPID  AND ABS((A.CREDIT_AMOUNT-A.DEBIT_AMOUNT)-ISNULL(C.AMOUNT,0))>.1		
	 AND LMP.BILL_BY_BILL=1
	
	SET @nErrorRows=@@ROWCOUNT

	IF @nErrorRows>0
	BEGIN
		SELECT TOP 1 @CERRORMSG = err_desc from @OUTPUT where err_entry=1
		GOTO END_PROC
	END
		
	SET @CSTEP = 530	
	DECLARE @dMinVchDt DATETIME

	SELECT @dMinVchDt=min(voucher_dt) FROM act_vm01106_upload (NOLOCK) WHERE sp_id=@nSpId

	IF NOT EXISTS (SELECT voucher_dt FROM vch_last_saved)
		INSERT vch_last_saved (voucher_dt)
		SELECT @dMinVchDt
	ELSE
		update vch_last_saved set voucher_dt=@dMinVchDt WHERE voucher_dt>@dMinVchDt
	
	SET @CSTEP = 533	
	DELETE FROM #tmpLmBal

	INSERT INTO #tmpLmBal (cost_center_dept_id,ac_code ,debit_amount,credit_amount)
	SELECT cost_center_dept_id,ac_code,SUM(debit_amount) debit_amount,SUM(credit_amount) credit_amount
	FROM ACT_VD01106_UPLOAD a (NOLOCK)
	JOIN ACT_VM01106_UPLOAD b (NOLOCK) ON a.sp_id=b.sp_id AND a.vm_id=b.vm_id
	LEFT JOIN @OUTPUT d ON d.XN_ID=b.vm_id
	WHERE b.SP_ID=@NSPID  AND b.chk=1             
	AND d.xn_ID IS NULL
	GROUP BY cost_center_dept_id,ac_code

	--select 'before updating', * from loc_ledger_balance where ac_code='H100000095' and dept_id in ('h1','01')

    IF EXISTS (SELECT TOP 1 ac_code FROM #tmpLmBal)
	BEGIN
		SET @CSTEP = 535
		EXEC SP3S_UPDATE_LEDGERBALANCES
		@nUpdateMode=1,
		@cTableName='#tmpLmBal'
	END

	--select 'after updating', * from loc_ledger_balance where ac_code='H100000095' and dept_id in ('h1','01')

	SET @CSTEP = 550	
	
	GOTO END_PROC  
	 
END TRY
BEGIN CATCH
	PRINT 'Enter catch of posting'
		 SET @CERRORMSG = 'P:SAVETRAN_POST_VOUCHER, SPIDVC :'+LTRIM(RTRIM(STR(@NSPID)))+' STEP: '+@CSTEP+', MESSAGE: '+ ERROR_MESSAGE()    
		 GOTO END_PROC
END CATCH

END_PROC:
	
	IF ISNULL(@CERRORMSG,'')<>'' AND NOT EXISTS (SELECT TOP 1 * FROM @OUTPUT)
		INSERT @OUTPUT (XN_DT,DEPT_ID,ERR_DESC)
		SELECT '' AS XN_DT,'' AS DEPT_ID,@CERRORMSG
	
	--if @@spid=104
	--	select 'check posted',* from vm01106 where voucher_dt>='2022-02-12' and bill_type='sls'
	
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')=''
		BEGIN
			COMMIT

			PRINT 'COMMIT POSTING SAVE'
		END	
		ELSE
		BEGIN
			PRINT 'ROLLBACK POSTING SAVE'
			ROLLBACK	
		END	
	END	

	DELETE FROM ACT_VM01106_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_VD01106_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_BILL_BY_BILL_REF_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_POSTACT_VOUCHER_LINK_UPLOAD WHERE SP_ID=@NSPID

	SELECT ERR_DESC AS ERRMSG,ISNULL(XN_no,'') AS MEMO_ID,ISNULL(XN_NO,'') AS VOUCHER_NO 
	,ISNULL(XN_NO,'') AS xn_NO ,xn_dt
	FROM @OUTPUT ORDER BY XN_DT
END 	
--END OF PROCEDURE - SAVETRAN_POST_VOUCHER