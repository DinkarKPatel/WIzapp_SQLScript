CREATE PROCEDURE SP3S_INSERT_LOCSST
(
 @CSUB_SECTION_CODE CHAR(7),
 @CTAX_PERCENTAGE NUMERIC(7,3),
 @STATE_CODE CHAR(7)
 
)
AS 
BEGIN
            DECLARE @CSTEP INT,@CCMD NVARCHAR(MAX),@CERRORMSG NVARCHAR(MAX),@DMEMOID  VARCHAR(22)
 
             DECLARE @TABLE TABLE (MEMO_ID VARCHAR(22),TAX_PERCENTAGE NUMERIC(7,3),STATE_CODE CHAR(7))
             
             
 BEGIN TRY 
 
        INSERT INTO @TABLE (MEMO_ID,TAX_PERCENTAGE,STATE_CODE)
        SELECT DISTINCT A.MEMO_ID,TAX_PERCENTAGE,STATE_CODE FROM LOCSST_MST A JOIN LOCSST B ON A.MEMO_ID=B.MEMO_ID
        
      SELECT MEMO_ID INTO #TMP FROM @TABLE WHERE TAX_PERCENTAGE=@CTAX_PERCENTAGE AND STATE_CODE=@STATE_CODE
      
      DELETE FROM @TABLE WHERE MEMO_ID IN (SELECT MEMO_ID FROM #TMP)
                  
             
             
    SET @CSTEP = 10	
    
      
    DECLARE @BLOOP BIT,@NCNT INT,@CMEMO_ID VARCHAR(100)
	SET @BLOOP=0
	SET @NCNT=1

	WHILE @BLOOP=0
	BEGIN
		
		SET @CMEMO_ID=''	
		SET @NCNT=@NCNT+1
		SELECT TOP 1 @CMEMO_ID=MEMO_ID FROM @TABLE
		
		IF ISNULL(@CMEMO_ID,'')=''
			BREAK
			
		BEGIN TRANSACTION	
		
			
			

	    SET @CSTEP=40		
		
	     INSERT LOCSST	( LAST_UPDATE, TAX_STRUCTURE, TAX_CALC_BASIS, TAX_AC_CODE, TAX_METHOD, MRPGT,
				  UPLOADED_TO_ACTIVSTREAM, MIN_CUSTOM_DUTY, CVD_PERCENTAGE, SALE_AC_CODE, MEMO_ID, BCD_PERCENTAGE, 
				  PURCHASE_AC_CODE, PURCHASE_TAX_AC_CODE, SUB_SECTION_CODE, TAX_PERCENTAGE, COMPANY_CODE, ROW_ID ) 
				   SELECT 	GETDATE() AS LAST_UPDATE, 0 AS TAX_STRUCTURE, 1 AS TAX_CALC_BASIS, '0000000000' AS TAX_AC_CODE,
				   1 AS  TAX_METHOD,0 AS  MRPGT, 
				   0 AS UPLOADED_TO_ACTIVSTREAM, 0 AS MIN_CUSTOM_DUTY, 0 AS CVD_PERCENTAGE, '0000000000' AS SALE_AC_CODE,
				   @CMEMO_ID AS  MEMO_ID,0 AS  BCD_PERCENTAGE, 
				  '0000000000' AS PURCHASE_AC_CODE,'0000000000' AS  PURCHASE_TAX_AC_CODE,@CSUB_SECTION_CODE AS  SUB_SECTION_CODE,
				  @CTAX_PERCENTAGE TAX_PERCENTAGE,
				   '01' AS  COMPANY_CODE, CONVERT(VARCHAR(40),NEWID()) AS ROW_ID

	 
	   
	      			
		SET @CSTEP=60
		
		DELETE FROM @TABLE WHERE MEMO_ID=@CMEMO_ID
		
		IF ISNULL(@CERRORMSG,'')=''
		COMMIT 
	END

END TRY 
BEGIN CATCH
   SET @CERRORMSG = 'SP3S_INSERT_LOCSST STEP- ' + LTRIM(STR(@CSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
   GOTO END_PROC
END CATCH  

END_PROC:
   IF @@TRANCOUNT  > 0
   BEGIN
        IF ISNULL(@CERRORMSG,'')<>''
        BEGIN
			PRINT 'ROLLBACK'
            ROLLBACK TRAN 
        END
   END         
   
   
   SELECT ISNULL(@CERRORMSG,'') AS ERRMSG
END						-- 
---------------------------------------- END OF PROCEDURE SP3S_INSERT_LOCSST
