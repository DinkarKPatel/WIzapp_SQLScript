CREATE PROCEDURE SP3S_APPROVAL_STATUS_REPORT--(LocId 3 digit change only increased the parameter width by Sanjay:04-11-2024)
(
   @CCUST_CODE VARCHAR(12)='',  ---CUSTOMER CODE FILTER
   @NAPPR_GEN_UPTO NUMERIC(1)=0,--APPROVAL ISSUE DT 0 FOR UPTODATE AND 1 FOR FROM AND TO DATE
   @DFM_APPR_DT DATETIME='',--FROM APPROVAL ISSUE DATE
   @DTO_APPR_DT DATETIME,--TO APPROVAL ISSUE DATE
   @DSETTELED_UPTO DATETIME, --TO RETURN DATE
   @NRETURN_DETAILS NUMERIC(1),-- 0 FOR SUMMARY AND 1 FOR SUMMARY AND DETAILS
   @cLOC VARCHAR(4)='',
   @VALUEFILTER  NUMERIC(1)---  1 FOR MRP,2 FOR WSP,3 FOR PP
)
--WITH ENCRYPTION
AS
BEGIN



	SET @DSETTELED_UPTO=@DTO_APPR_DT

    IF OBJECT_ID('TEMPDB..#TMPTABLE','U') IS NOT NULL
       DROP TABLE #TMPTABLE
     
    SELECT TYPE=1,A.CUSTOMER_CODE ,ISNULL(C.CUSTOMER_FNAME,'')+' '+ ISNULL(C.CUSTOMER_LNAME,'') AS CUSTOMER_NAME ,
           C.MOBILE AS CUSTOMER_MOBILE,
           A.MEMO_NO AS ISSUE_NO,A.MEMO_DT AS ISSUE_DT ,
           SUM(B.QUANTITY) AS ISSUE_QTY,
           CONVERT(NUMERIC(18,2),(CASE WHEN @VALUEFILTER=1 THEN SUM(B.MRP*B.QUANTITY)
                                   WHEN @VALUEFILTER=2 THEN SUM(S.WS_PRICE*B.QUANTITY)
                                   WHEN @VALUEFILTER=3 THEN SUM(S.PURCHASE_PRICE*B.QUANTITY)
                                  ELSE 0 END)) AS MRP_VALUE,
           SUM(ISNULL(RET.QUANTITY,0)) AS RETURN_QTY,
         --  CONVERT(NUMERIC(18,2),SUM(B.MRP*ISNULL(RET.QUANTITY,0))) AS RETURN_VALUE,
              CONVERT(NUMERIC(18,2),(CASE WHEN @VALUEFILTER=1 THEN SUM(B.MRP*RET.QUANTITY)
                                   WHEN @VALUEFILTER=2 THEN SUM(S.WS_PRICE*RET.QUANTITY)
                                    WHEN @VALUEFILTER=3 THEN SUM(S.PURCHASE_PRICE*RET.QUANTITY)
                                  ELSE 0 END)) AS RETURN_VALUE,
           CONVERT(NUMERIC(18,2),SUM(S.PURCHASE_PRICE*ISNULL(RET.QUANTITY,0))) AS RETURN_PP_VALUE,
           CONVERT(NUMERIC(18,2),SUM(S.WS_PRICE*ISNULL(RET.QUANTITY,0))) AS RETURN_WSP_VALUE
           ,A.MEMO_ID
           --ADDED FOR LOCATION FILTER
           ,A.DEPT_ID ,(case when SM.ITEM_TYPE='1' then 'Inventory' when SM.ITEM_TYPE=2 then 'Consumable' when SM.ITEM_TYPE=3 then ' Assets' 
		   when SM.ITEM_TYPE=4 then ' Services' end) as ITEM_NAME
		   ,cast(0 as numeric(18,2)) AS pending_value
    INTO #TMPTABLE
    FROM APM01106 A (NOLOCK)
    JOIN APD01106 B (NOLOCK) ON A.MEMO_ID =B.MEMO_ID 
    LEFT JOIN
    (
        SELECT B.APD_ROW_ID ,SUM(QUANTITY) AS QUANTITY  
        FROM APPROVAL_RETURN_MST A (NOLOCK)
        JOIN APPROVAL_RETURN_DET B (NOLOCK) ON A.MEMO_ID =B.MEMO_ID 
        WHERE A.CANCELLED =0 AND A.MEMO_DT <=@DSETTELED_UPTO
       -- AND (@CCUST_CODE='' OR A.CUSTOMER_CODE =@CCUST_CODE)
        GROUP BY APD_ROW_ID
    ) RET ON B.ROW_ID =RET.APD_ROW_ID 
    JOIN CUSTDYM C (NOLOCK) ON C.CUSTOMER_CODE =A.CUSTOMER_CODE
    JOIN SKU S (NOLOCK) ON S.PRODUCT_CODE=B.PRODUCT_CODE 
	JOIN sku_names sn (nolock) on sn.product_Code=b.PRODUCT_CODE
	JOIN ARTICLE ART (NOLOCK) ON S.ARTICLE_CODE= ART.ARTICLE_CODE
	JOIN SectionD SD (NOLOCK) ON ART.SUB_SECTION_CODE= SD.SUB_SECTION_CODE
	JOIN Sectionm SM (NOLOCK) ON SD.SECTION_CODE= SM.SECTION_CODE
    WHERE A.CANCELLED =0
    AND (@CCUST_CODE='' OR A.CUSTOMER_CODE =@CCUST_CODE)
    AND A.MEMO_DT BETWEEN (CASE WHEN @NAPPR_GEN_UPTO=0 THEN '1900-01-01'  ELSE @DFM_APPR_DT  END) AND @DTO_APPR_DT
    GROUP BY ISNULL(CUSTOMER_FNAME,'')+' '+ ISNULL(CUSTOMER_LNAME,''),C.MOBILE,MEMO_NO,MEMO_DT,A.MEMO_ID ,A.CUSTOMER_CODE ,A.DEPT_ID,
	(case when SM.ITEM_TYPE='1' then 'Inventory' when SM.ITEM_TYPE=2 then 'Consumable' when SM.ITEM_TYPE=3 then ' Assets' 
		   when SM.ITEM_TYPE=4 then ' Services' end)


	  update #TMPTABLE set pending_value=ISNULL(MRP_VALUE,0)-ISNULL(RETURN_VALUE,0)
    --ADDED FOR LOCATION FILTER
    IF @CLOC<>'' DELETE #TMPTABLE WHERE DEPT_ID!=@CLOC
    ALTER TABLE #TMPTABLE DROP COLUMN DEPT_ID  
    --ADDED FOR LOCATION FILTER
    
    --IF OBJECT_ID('TEMPDB..#TMPSUMMARY','U') IS NOT NULL
    --   DROP TABLE #TMPSUMMARY
       
    SELECT T.TYPE,T.CUSTOMER_CODE, T.CUSTOMER_NAME, T.CUSTOMER_MOBILE,
           T.ISSUE_NO,CONVERT(VARCHAR,T.ISSUE_DT,105) AS ISSUE_DT, 
           T.ISSUE_QTY,T.MRP_VALUE,
           T.RETURN_QTY,T.RETURN_VALUE,
           ISNULL(T.ISSUE_QTY,0)-ISNULL(T.RETURN_QTY,0) AS PENDING_QTY,
           pending_value,
           AGEING_DAYS=DATEDIFF (DD,T.ISSUE_DT,@DTO_APPR_DT),
           MEMO_ID,ITEM_NAME
     INTO #TMPSUMMARY 
     FROM #TMPTABLE T
     WHERE ISNULL(T.ISSUE_QTY,0)-ISNULL(T.RETURN_QTY,0)<>0         
     
     IF @NRETURN_DETAILS<>1
     BEGIN
        SELECT T.TYPE,T.CUSTOMER_CODE, T.CUSTOMER_NAME, T.CUSTOMER_MOBILE,
               T.ISSUE_NO,T.ISSUE_DT, 
               T.ISSUE_QTY,T.MRP_VALUE,
               T.RETURN_QTY,T.RETURN_VALUE,
               T.PENDING_QTY,T.PENDING_VALUE,
               T.AGEING_DAYS ,ITEM_NAME
        FROM #TMPSUMMARY T
        ORDER BY CUSTOMER_NAME,AGEING_DAYS DESC
     END 
     ELSE
     BEGIN
     
          IF OBJECT_ID('TEMPDB..#TMPDETAILS','U') IS NOT NULL
             DROP TABLE #TMPDETAILS
             
		 SELECT TYPE=2,A.CUSTOMER_CODE, ISNULL(C.CUSTOMER_FNAME,'')+' '+ ISNULL(C.CUSTOMER_LNAME,'') AS CUSTOMER_NAME ,
			    C.MOBILE AS CUSTOMER_MOBILE,
			    A.MEMO_NO AS ISSUE_NO,A.MEMO_DT AS ISSUE_DT ,
			    B.QUANTITY AS ISSUE_QTY,
			   -- CONVERT(NUMERIC(18,2),(B.MRP*B.QUANTITY)) AS MRP_VALUE,
			   CONVERT(NUMERIC(18,2),(CASE WHEN @VALUEFILTER=1 THEN (B.MRP*B.QUANTITY)
                                           WHEN @VALUEFILTER=2 THEN (S.WS_PRICE*B.QUANTITY)
                                           WHEN @VALUEFILTER=3 THEN (S.PURCHASE_PRICE*B.QUANTITY)
                                       ELSE 0 END)) AS MRP_VALUE,
			    (ISNULL(RET.QUANTITY,0)) AS RETURN_QTY,
			   -- CONVERT(NUMERIC(18,2),(B.MRP*ISNULL(RET.QUANTITY,0))) AS RETURN_VALUE,
			   CONVERT(NUMERIC(18,2),(CASE WHEN @VALUEFILTER=1 THEN (B.MRP*RET.QUANTITY)
                                   WHEN @VALUEFILTER=2 THEN (S.WS_PRICE*RET.QUANTITY)
                                    WHEN @VALUEFILTER=3 THEN (S.PURCHASE_PRICE*RET.QUANTITY)
                                  ELSE 0 END)) AS RETURN_VALUE,
		        ISNULL(B.QUANTITY,0)-ISNULL(RET.QUANTITY,0) AS PENDING_QTY,
                --CONVERT(NUMERIC(18,2),(B.MRP*B.QUANTITY))-CONVERT(NUMERIC(18,2),
                --(B.MRP*ISNULL(RET.QUANTITY,0))) AS PENDING_VALUE,
                
               CAST(0 AS NUMERIC(18,2)) AS PENDING_VALUE,
                
               AGEING_DAYS=DATEDIFF (DD,A.MEMO_DT,@DTO_APPR_DT),B.PRODUCT_CODE ,ITEM_NAME,art.article_no 
        INTO #TMPDETAILS
        FROM #TMPSUMMARY T
		JOIN APM01106 A (NOLOCK) ON T.MEMO_ID=A.MEMO_ID 
		JOIN APD01106 B (NOLOCK) ON A.MEMO_ID =B.MEMO_ID 
		LEFT JOIN
		(
			 SELECT B.APD_ROW_ID ,SUM(B.QUANTITY) AS QUANTITY  
			 FROM APPROVAL_RETURN_MST A (NOLOCK)
			 JOIN APPROVAL_RETURN_DET B (NOLOCK) ON A.MEMO_ID =B.MEMO_ID 
			 WHERE A.CANCELLED =0 AND A.MEMO_DT <=@DSETTELED_UPTO
			 AND (@CCUST_CODE='' OR A.CUSTOMER_CODE =@CCUST_CODE)
			 GROUP BY APD_ROW_ID
			
		) RET ON B.ROW_ID =RET.APD_ROW_ID 
		JOIN CUSTDYM C (NOLOCK) ON C.CUSTOMER_CODE =A.CUSTOMER_CODE 
		JOIN SKU S (NOLOCK) ON S.PRODUCT_CODE=B.PRODUCT_CODE 
		join article art (nolock) on s.article_code =art.article_code 
		WHERE A.CANCELLED =0
		AND (@CCUST_CODE='' OR A.CUSTOMER_CODE =@CCUST_CODE)
		AND A.MEMO_DT BETWEEN (CASE WHEN @NAPPR_GEN_UPTO=0 THEN '1900-01-01'  ELSE @DFM_APPR_DT  END) AND @DTO_APPR_DT
		union all
		 SELECT TYPE=2,A.CUSTOMER_CODE, ISNULL(C.CUSTOMER_FNAME,'')+' '+ ISNULL(C.CUSTOMER_LNAME,'') AS CUSTOMER_NAME ,
			    C.MOBILE AS CUSTOMER_MOBILE,
			    A.MEMO_NO AS ISSUE_NO,A.MEMO_DT AS ISSUE_DT ,
			    B.QUANTITY AS ISSUE_QTY,
			   -- CONVERT(NUMERIC(18,2),(B.MRP*B.QUANTITY)) AS MRP_VALUE,
			   CONVERT(NUMERIC(18,2),(CASE WHEN @VALUEFILTER=1 THEN (B.MRP*B.QUANTITY)
                                           WHEN @VALUEFILTER=2 THEN (S.WS_PRICE*B.QUANTITY)
                                           WHEN @VALUEFILTER=3 THEN (S.PURCHASE_PRICE*B.QUANTITY)
                                       ELSE 0 END)) AS MRP_VALUE,
			    (ISNULL(RET.QUANTITY,0)) AS RETURN_QTY,
			   -- CONVERT(NUMERIC(18,2),(B.MRP*ISNULL(RET.QUANTITY,0))) AS RETURN_VALUE,
			   CONVERT(NUMERIC(18,2),(CASE WHEN @VALUEFILTER=1 THEN (B.MRP*RET.QUANTITY)
                                   WHEN @VALUEFILTER=2 THEN (S.WS_PRICE*RET.QUANTITY)
                                    WHEN @VALUEFILTER=3 THEN (S.PURCHASE_PRICE*RET.QUANTITY)
                                  ELSE 0 END)) AS RETURN_VALUE,
		        ISNULL(B.QUANTITY,0)-ISNULL(RET.QUANTITY,0) AS PENDING_QTY,
                --CONVERT(NUMERIC(18,2),(B.MRP*B.QUANTITY))-CONVERT(NUMERIC(18,2),
                --(B.MRP*ISNULL(RET.QUANTITY,0))) AS PENDING_VALUE,
                
               
                CAST(0 AS NUMERIC(18,2)) AS PENDING_VALUE,
                
               AGEING_DAYS=DATEDIFF (DD,A.MEMO_DT,@DTO_APPR_DT),B.PRODUCT_CODE ,ITEM_NAME,art.article_no 
        FROM #TMPSUMMARY T
		JOIN APM01106_ops A (NOLOCK) ON T.MEMO_ID=A.MEMO_ID 
		JOIN APD01106_ops B (NOLOCK) ON A.MEMO_ID =B.MEMO_ID 
		LEFT JOIN
		(
			 SELECT B.APD_ROW_ID ,SUM(B.QUANTITY) AS QUANTITY  
			 FROM APPROVAL_RETURN_MST A (NOLOCK)
			 JOIN APPROVAL_RETURN_DET B (NOLOCK) ON A.MEMO_ID =B.MEMO_ID 
			 WHERE A.CANCELLED =0 AND A.MEMO_DT <=@DSETTELED_UPTO
			 AND (@CCUST_CODE='' OR A.CUSTOMER_CODE =@CCUST_CODE)
			 GROUP BY APD_ROW_ID
			
		) RET ON B.ROW_ID =RET.APD_ROW_ID 
		JOIN CUSTDYM C (NOLOCK) ON C.CUSTOMER_CODE =A.CUSTOMER_CODE 
		JOIN SKU S (NOLOCK) ON S.PRODUCT_CODE=B.PRODUCT_CODE 
		join article art (nolock) on s.article_code =art.article_code 
		WHERE A.CANCELLED =0
		AND (@CCUST_CODE='' OR A.CUSTOMER_CODE =@CCUST_CODE)
		AND A.MEMO_DT BETWEEN (CASE WHEN @NAPPR_GEN_UPTO=0 THEN '1900-01-01'  ELSE @DFM_APPR_DT  END) AND @DTO_APPR_DT
          
		update #TMPDETAILS set pending_value=ISNULL(MRP_VALUE,0)-ISNULL(RETURN_VALUE,0)

        --SELECT * FROM #TMPSUMMARY
          
        --SELECT * FROM #TMPDETAILS
        SELECT TYPE,CUSTOMER_CODE, CUSTOMER_NAME, CUSTOMER_MOBILE,ISSUE_NO,ISSUE_DT, ISSUE_QTY,MRP_VALUE,RETURN_QTY,RETURN_VALUE,PENDING_QTY,PENDING_VALUE,
               AGEING_DAYS ,PRODUCT_CODE=CAST('' AS VARCHAR(100)),ITEM_NAME,Article_no=CAST('' AS VARCHAR(100))
        FROM #TMPSUMMARY where 1=2
        UNION ALL
        SELECT TYPE,CUSTOMER_CODE, CUSTOMER_NAME, CUSTOMER_MOBILE,ISSUE_NO,CONVERT(VARCHAR,ISSUE_DT,105) AS ISSUE_DT, ISSUE_QTY,MRP_VALUE,RETURN_QTY,RETURN_VALUE,PENDING_QTY,PENDING_VALUE,
               AGEING_DAYS ,PRODUCT_CODE ,ITEM_NAME,article_no
        FROM #TMPDETAILS
        ORDER BY CUSTOMER_NAME,ISSUE_NO,TYPE,AGEING_DAYS DESC
     
     END       
END
--END OF PROCEDURE SP3S_APPROVAL_STATUS_REPORT
