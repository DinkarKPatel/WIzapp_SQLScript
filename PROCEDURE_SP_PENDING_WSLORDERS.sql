create PROCEDURE SP_PENDING_WSLORDERS
(
	@NMODE NUMERIC(1)=1, /*@NMODE: 1 FOR ALL,2 FOR PENDING AND 3 FOR DELEIVERED*/
	@FMDATE VARCHAR(10)='',
	@TODATE VARCHAR(10)='',
	@DUEORDER  INT=0,
	@SORTEDON INT=0,
	@LOC_ID VARCHAR(10)='',
	@BIN_ID VARCHAR(10)=''
)
AS
BEGIN
   --(dinkar) Replace  left(memoid,2) to Location_code  
	   DECLARE @TBLORDERPENDING TABLE(SR INT,LOCATION VARCHAR(100),REF_NO VARCHAR(50),ORDER_ID VARCHAR(100),ORDER_NO VARCHAR(100),ARTICLE_CODE VARCHAR(100),ORDER_DT VARCHAR(20),TRIAL_DT VARCHAR(20),
	   ORDER_QUANTITY NUMERIC(18,2),ITEM VARCHAR(MAX),AMOUNT NUMERIC(18,2),SALES_PERSON VARCHAR(100),DELIVERY_DT VARCHAR(20) ,CUSTOMERMOBILEANDNAME VARCHAR (500),DUEDAYS INT,
	   PO_GEN INT,MATERIAL_REC INT)
	    
	   DECLARE @DTSQL NVARCHAR(MAX)
	   DECLARE @DTSQL1 NVARCHAR(MAX)
	   DECLARE @DTSQL2 NVARCHAR(MAX)
	   DECLARE @DTSQL3 NVARCHAR(MAX)
	   DECLARE @DTSQLFINAL NVARCHAR(MAX) 
	   
	   DECLARE @FILTER  VARCHAR(1000)
		
	   IF @DUEORDER=2
			SET @FILTER='A.DELIVERY_DT>GETDATE() AND A.ORDER_DT BETWEEN '''+@FMDATE+''' AND  '''+@TODATE+''' AND A.CANCELLED=0 AND ISNULL(B.CANCELLED,0)=0 '
	   ELSE
			SET @FILTER='A.DELIVERY_DT<=GETDATE() AND A.ORDER_DT BETWEEN '''+@FMDATE+''' AND  '''+@TODATE+'''AND A.CANCELLED=0  AND ISNULL(B.CANCELLED,0)=0 '
	    
	   DECLARE @SORTBY  VARCHAR(100)
	   IF @SORTEDON=1
		 SET @SORTBY='L.DEPT_NAME,ORDER_NO'
	   ELSE IF @SORTEDON=2
		 SET @SORTBY='L.DEPT_NAME,ORDER_DT' 
	   ELSE
		 SET @SORTBY='L.DEPT_NAME,DATEDIFF(DY,A.ORDER_DT,GETDATE()) DESC' 
	 
	   SET @DTSQL=N'SELECT SR=ROW_NUMBER() OVER(ORDER BY L.DEPT_NAME,'+@SORTBY+'), LOCATION=L.DEPT_NAME,A.REF_NO,A.ORDER_ID, A.ORDER_NO,B.ARTICLE_CODE,
	   ORDER_DT=(CASE WHEN(CONVERT(VARCHAR,ISNULL(A.ORDER_DT,''''),105)=''01-01-1900'') THEN '''' ELSE CONVERT(VARCHAR,A.ORDER_DT,105) END),
	   TRIAL_DT=(CASE WHEN(CONVERT(VARCHAR,ISNULL(A.TRAIL_DT,''''),105)=''01-01-1900'') THEN '''' ELSE CONVERT(VARCHAR,A.TRAIL_DT,105) END),
	   ORDER_QUANTITY=B.QUANTITY,
	   ITEM=CAST(NULL AS VARCHAR(500)),
	   AMOUNT=B.RFNET,
	   SALESPERSON=ISNULL(EMPLOYEE.EMP_NAME,''''),
	   DELIVERY_DT=CONVERT(VARCHAR,A.DELIVERY_DT,105),
	   CUSTOMERMOBILEANDNAME=ISNULL(C.MOBILE,'''')+(CASE WHEN ISNULL(C.MOBILE,'''')<>'''' THEN  ''-'' ELSE '''' END)+ISNULL(C.CUSTOMER_TITLE,'''') +'' ''+ISNULL(C.CUSTOMER_FNAME,'''') +'' ''+ISNULL(C.CUSTOMER_LNAME,''''), 
	   DUEDAYS=DATEDIFF(DY,A.ORDER_DT,GETDATE()),
	   PO_GEN=CAST((SELECT CASE WHEN (COUNT(*)>0) THEN 1 ELSE 0 END  FROM POD01106 P WHERE P.PRODUCT_CODE=B.PRODUCT_CODE) AS INT),
	   MATERIAL_REC=CAST((SELECT CASE WHEN (COUNT(*)>0) THEN 1 ELSE 0 END FROM PID01106 PID 
	                      WHERE PID.PRODUCT_CODE=B.PRODUCT_CODE ) AS INT)
	   FROM WSL_ORDER_DET (NOLOCK) B 
	   JOIN WSL_ORDER_MST A ON A.ORDER_ID=B.ORDER_ID'
	   
	   SET @DTSQLFINAL=@DTSQL
	   
	   IF OBJECT_ID('TEMPDB..#PENDINGORDERS','U') IS NOT NULL
		   DROP TABLE #PENDINGORDERS 
			
	   IF OBJECT_ID ('TEMPDB..#ORDDLV','U') IS NOT NULL
           DROP TABLE #ORDDLV
           
    	SELECT A.CUSTOMER_CODE
			  ,A.CM_NO 
			  ,A.CM_DT 
			  ,B.PRODUCT_CODE   
			  ,B.QUANTITY
		INTO #ORDDLV	  	  
		FROM CMM01106 A (NOLOCK) 
		JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID
		JOIN WSL_ORDER_DET WOD (NOLOCK) ON B.PRODUCT_CODE=
							(CASE WHEN WOD.ORDER_TYPE=0 THEN WOD.PRODUCT_CODE ELSE WOD.REF_PRODUCT_CODE END)
		JOIN WSL_ORDER_MST WOM (NOLOCK) ON WOD.ORDER_ID=WOM.ORDER_ID AND A.CUSTOMER_CODE=WOM.CUSTOMER_CODE
		WHERE --A.CM_MODE = 1 AND B.RFNET>0 AND
		 A.CANCELLED = 0 AND A.CUSTOMER_CODE <> '000000000000' AND WOM.CANCELLED=0 AND ISNULL(WOD.CANCELLED,0)=0


		;WITH CTE_REMOVEDUP AS
		(
			SELECT ROW_NUMBER() OVER(PARTITION BY PRODUCT_CODE,CUSTOMER_CODE ORDER BY CM_DT ASC,CM_NO ASC) AS SNO
				  ,CUSTOMER_CODE
				  ,CM_NO
				  ,PRODUCT_CODE
				  ,QUANTITY
			FROM #ORDDLV	  
		)
		DELETE CTE_REMOVEDUP WHERE SNO<>1
		
		CREATE INDEX IX_ORDDLV_PRODUCT_CODE  ON #ORDDLV(PRODUCT_CODE)
		CREATE INDEX IX_ORDDLV_CUSTOMER_CODE ON #ORDDLV(CUSTOMER_CODE)
		CREATE INDEX IX_ORDDLV_CM_NO ON #ORDDLV(CM_NO)	  
	    
	    
	    IF @NMODE<>1
	    BEGIN
			
			SELECT ORDER_ID INTO #PENDINGORDERS FROM WSL_ORDER_MST WHERE 1=2
				
			
			SET @DTSQL1=N'SELECT DISTINCT A.ORDER_ID
						  FROM WSL_ORDER_MST A(NOLOCK)
						  JOIN WSL_ORDER_DET B(NOLOCK) ON A.ORDER_ID=B.ORDER_ID AND ISNULL(B.CANCELLED,0)=0
						  LEFT JOIN 
						  (
							SELECT DISTINCT B.PRODUCT_CODE,B.CUSTOMER_CODE 
						    FROM #ORDDLV B
						  )CM ON CM.PRODUCT_CODE=(CASE WHEN B.ORDER_TYPE=1 THEN B.REF_PRODUCT_CODE ELSE B.PRODUCT_CODE END)
						  AND A.CUSTOMER_CODE=CM.CUSTOMER_CODE
						  WHERE CM.PRODUCT_CODE IS NULL AND '+@FILTER 
											
			PRINT @DTSQL1					
			INSERT #PENDINGORDERS 
			EXEC SP_EXECUTESQL @DTSQL1
			
			IF @NMODE=2
			SET @DTSQL1=' JOIN #PENDINGORDERS PO ON A.ORDER_ID=PO.ORDER_ID'
			ELSE IF @NMODE=3
			BEGIN
				SET @DTSQL1=' LEFT JOIN #PENDINGORDERS PO ON A.ORDER_ID=PO.ORDER_ID '
				
				SET @FILTER=@FILTER+' AND PO.ORDER_ID IS NULL'
			END
			SET @DTSQLFINAL=@DTSQLFINAL+@DTSQL1
		END  
	   
	    SET @DTSQL3=N' INNER JOIN LOCATION L  ON L.DEPT_ID =a.location_code
		LEFT OUTER JOIN EMPLOYEE ON EMPLOYEE.EMP_CODE =A.SALE_EMP_CODE 
		LEFT OUTER JOIN CUSTDYM C ON C.CUSTOMER_CODE=A.CUSTOMER_CODE
		WHERE '+@FILTER+' AND ('''+@LOC_ID +'''='''' OR a.location_code='''+@LOC_ID+''')'
		PRINT @FILTER
		
	    SET @DTSQLFINAL=@DTSQLFINAL+@DTSQL3
	    
		PRINT @DTSQLFINAL
		INSERT INTO @TBLORDERPENDING
		EXEC SP_EXECUTESQL @DTSQLFINAL

		DECLARE @ORDERID  VARCHAR(100)
		DECLARE @ITEM  VARCHAR(100)
		DECLARE @ENTEREDITEM VARCHAR(100)

		DECLARE CURSORITEM CURSOR 
		FOR
		SELECT ORDER_ID, ITEM= SECTIONM.SECTION_NAME+'-'+'('+SECTIOND.SUB_SECTION_NAME+')' 
		FROM @TBLORDERPENDING T
		INNER JOIN ARTICLE C ON T.ARTICLE_CODE=C.ARTICLE_CODE 
		JOIN  SECTIOND (NOLOCK) ON C.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE 
		JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE=SECTIONM.SECTION_CODE 
		GROUP BY ORDER_ID,SECTIONM.SECTION_NAME,SECTIOND.SUB_SECTION_NAME
		ORDER BY ORDER_ID
		OPEN CURSORITEM
		FETCH NEXT FROM CURSORITEM INTO @ORDERID,@ITEM
		WHILE @@FETCH_STATUS=0
		BEGIN

			SET @ENTEREDITEM=ISNULL((SELECT ITEM FROM @TBLORDERPENDING WHERE ORDER_ID=@ORDERID AND SR=(SELECT MIN(SR) FROM @TBLORDERPENDING WHERE ORDER_ID=@ORDERID)),'')
			IF @ENTEREDITEM<>''
				UPDATE @TBLORDERPENDING SET ITEM=@ENTEREDITEM+', '+@ITEM WHERE ORDER_ID=@ORDERID 
			ELSE
				UPDATE @TBLORDERPENDING SET ITEM=@ITEM WHERE ORDER_ID=@ORDERID 

			FETCH NEXT FROM CURSORITEM INTO @ORDERID,@ITEM
		END 
		CLOSE CURSORITEM
		DEALLOCATE CURSORITEM
		
		SELECT LOCATION,REF_NO,ORDER_NO ,ORDER_DT ,TRIAL_DT ,
		ORDER_QUANTITY=SUM(ISNULL(ORDER_QUANTITY,0)),
		PENDING_QUANTITY=SUM(ISNULL(ORDER_QUANTITY,0))-ISNULL(B.SALE_QUANTITY,0),
		ITEM ,AMOUN=SUM(ISNULL(AMOUNT,0)),SALES_PERSON,
		DELIVERY_DT,CUSTOMERMOBILEANDNAME ,DUEDAYS ,
		PO_GENERATED=(CASE WHEN SUM(PO_GEN)>0 THEN 'YES' ELSE 'NO' END),
		MATERIAL_RECEIVED=(CASE WHEN SUM(MATERIAL_REC)>0 THEN 'YES' ELSE 'NO' END)
		FROM @TBLORDERPENDING T
		LEFT JOIN 
		(
		  SELECT A.ORDER_ID,SUM(CMM.QUANTITY) AS SALE_QUANTITY
		  FROM WSL_ORDER_MST A (NOLOCK)
		  JOIN WSL_ORDER_DET B (NOLOCK) ON A.ORDER_ID=B.ORDER_ID AND ISNULL(B.CANCELLED,0)=0
		  JOIN 
		  (
			SELECT CMD.CUSTOMER_CODE , CMD.PRODUCT_CODE,SUM(CMD.QUANTITY) AS QUANTITY
			FROM #ORDDLV CMD(NOLOCK)
			GROUP BY CMD.CUSTOMER_CODE,CMD.PRODUCT_CODE
		  )CMM ON CMM.PRODUCT_CODE=(CASE WHEN B.ORDER_TYPE=1 THEN B.REF_PRODUCT_CODE ELSE B.PRODUCT_CODE END)
		   AND CMM.CUSTOMER_CODE =A.CUSTOMER_CODE 
		  WHERE A.CANCELLED=0
		  GROUP BY A.ORDER_ID
		)B ON B.ORDER_ID=T.ORDER_ID
		GROUP BY LOCATION ,REF_NO,ORDER_NO ,ORDER_DT ,TRIAL_DT ,B.SALE_QUANTITY,
		SALES_PERSON,DELIVERY_DT,CUSTOMERMOBILEANDNAME ,DUEDAYS,ITEM 
		ORDER BY MIN(SR)
END
--END OF PROCEDURE - SP_PENDING_WSLORDERS
