CREATE PROCEDURE SP_GET_DEBTORS_REMINDERS_NEW
(
    @DFMDT DATETIME,
	@DTOGDT DATETIME,
	@NMODE INT=1, --(1 FOR DR,2 CR-3 FOR RETAIL CUSTOMER)
	@NDUEBILLS INT=1,--( 1 FOR DUE BILLS 0 FOR ALL),
	@CWHERE VARCHAR(MAX)='',
	@bRetAgeingDetails BIT=0 ,
    @NVMODE INT=1,  --(1. Due Balance  2. Ledger Balance )
	@cCompanyPanNo VARCHAR(20)=''
)
AS
BEGIN 
		DECLARE @CCMD NVARCHAR(MAX),@ACCODE CHAR(10),@CDEPTID CHAR(4)		DECLARE @CFIN_YEAR VARCHAR(5),@CHEAD_CODE VARCHAR(MAX),@cParentHeadCode VARCHAR(15)
		
		declare @cAcCode varchar(20), @nCreditAmount numeric(20, 2), @cRowId varchar(50), @nDebitAmount numeric(20, 2)
		IF ISNULL(@CWHERE,'')<>''
		SET @CWHERE=' AND '+@CWHERE
	

		SET  @CDEPTID=''
		
				IF OBJECT_ID('TEMBDB..#TEMP_AC_CODE','U') IS NOT NULL
					DROP TABLE 	#TEMP_AC_CODE
				CREATE TABLE #TEMP_AC_CODE(AC_CODE CHAR(10),major_AC_CODE CHAR(10) ,AC_NAME VARCHAR(500),HEAD_CODE VARCHAR(20))
			
              IF @NMODE IN(1,2)
              BEGIN
					IF @NMODE=1
					BEGIN

						SELECT  @CHEAD_CODE=DBO.FN_ACT_TRAVTREE('0000000018')
						SET @cParentHeadCode='0000000018'

					END
					ELSE IF @NMODE=2
					BEGIN

					  SELECT @CHEAD_CODE=DBO.FN_ACT_TRAVTREE('0000000021')
					  SET @cParentHeadCode='0000000021'

					END
			    
			   
					SET @CCMD = N'SELECT DISTINCT AC_CODE,MAJOR_AC_CODE,AC_NAME,HEAD_CODE 
					FROM LM01106(NOLOCK) 
					WHERE INACTIVE=0 AND  (HEAD_CODE IN ('+@CHEAD_CODE+')) '
					INSERT INTO #TEMP_AC_CODE(AC_CODE,MAJOR_AC_CODE,AC_NAME,HEAD_CODE)
					EXEC SP_EXECUTESQL @CCMD
					PRINT @CCMD

				--	Delete from #TEMP_AC_CODE where ac_code<>'H100000100'

					
					  IF OBJECT_ID('#locListC','u') IS NOT NULL      
					  DROP TABLE #locListC     
					   
					  CREATE TABLE #locListC (dept_id CHAR(4))    
					  
					  if @cCompanyPanNo<>''
					  begin
					    
						Insert into #locListC(dept_id)
						select a.dept_id from location a (nolock)
						join loc_accounting_company b on a.PAN_NO=b.pan_no
						where a.pan_no=@cCompanyPanNo

					  end

					 --INSERT #locListC      
      --               SELECT DEPT_ID FROM LOCATION WHERE DEPT_ID=MAJOR_DEPT_ID AND (loc_type=1 OR ISNULL(Account_posting_at_ho,0)=1)      

					IF OBJECT_ID ('TEMPDB..#TEMP','U') IS NOT NULL
					   DROP TABLE #TEMP

				  CREATE TABLE #TEMP (COST_CENTER_DEPT_ID CHAR(4),VM_ID VARCHAR(50), ACCODE VARCHAR(20),HEAD_CODE CHAR(10), VOUCHER_DT DATETIME, ORDERDATE DATETIME, VOUCHERTYPE VARCHAR(20),         
				  NARRATION VARCHAR(max), debit_amount NUMERIC(20, 2), credit_amount NUMERIC(20, 2),BILL_BY_BILL BIT)      

				  DECLARE @CDONOT_CONSIDER_MEMO_VOUCHERS_ACCBOOKS VARCHAR(2),@CCONSIDER_MEMO_REVERSAL_VOUCHERS_ACCBOOKS VARCHAR(2),@cViewLedgerForCancelledVouchers VARCHAR(20)

				  SELECT TOP 1 @CDONOT_CONSIDER_MEMO_VOUCHERS_ACCBOOKS=VALUE FROM  CONFIG WHERE CONFIG_OPTION='DONOT_CONSIDER_MEMO_VOUCHERS_ACCBOOKS'   
                  SELECT TOP 1 @CCONSIDER_MEMO_REVERSAL_VOUCHERS_ACCBOOKS=VALUE FROM  CONFIG WHERE CONFIG_OPTION='CONSIDER_MEMO_REVERSAL_VOUCHERS_ACCBOOKS'   
                  SELECT TOP 1 @cViewLedgerForCancelledVouchers=value FROM config WHERE config_option='LEDGER_OPENING_CUTOFF_DATE'          
 
                  SET @CDONOT_CONSIDER_MEMO_VOUCHERS_ACCBOOKS=ISNULL(@CDONOT_CONSIDER_MEMO_VOUCHERS_ACCBOOKS,0)  
                  SELECT @CCONSIDER_MEMO_REVERSAL_VOUCHERS_ACCBOOKS=ISNULL(@CCONSIDER_MEMO_REVERSAL_VOUCHERS_ACCBOOKS,0)    
				  SET @cViewLedgerForCancelledVouchers=ISNULL(@cViewLedgerForCancelledVouchers,'')      

			                  
				 SET @CCMD=N'SELECT COST_CENTER_DEPT_ID,VD.VM_ID, LM.MAJOR_AC_CODE ACCODE,HEAD_CODE, VM.VOUCHER_DT , 
				   VM.VOUCHER_DT ORDERDATE,  VCH.VOUCHER_TYPE_ALIAS VOUCHERTYPE,  VD.NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT ,LMP.BILL_BY_BILL
				   FROM VD01106 VD (NOLOCK) JOIN VM01106 VM (NOLOCK) ON VD.VM_ID = VM.VM_ID        
				   JOIN #TEMP_AC_CODE LM (NOLOCK) ON LM.AC_CODE = VD.AC_CODE        
				   LEFT JOIN LMP01106 LMP (NOLOCK) ON LMP.AC_CODE=LM.AC_CODE
				   JOIN VCHTYPE VCH (NOLOCK) ON VCH.VOUCHER_CODE = VM.VOUCHER_CODE '+
				  CASE WHEN @CCOMPANYPANNO<>'' THEN   ' JOIN #LOCLISTC L ON L.DEPT_ID=VD.COST_CENTER_DEPT_ID '  ELSE '' END +     
				  +' LEFT OUTER JOIN ACC_MEMO_REVERSAL AMR1 (NOLOCK) ON AMR1.MEMO_VM_ID=VM.VM_ID      
				   LEFT OUTER JOIN ACC_MEMO_REVERSAL AMR2 (NOLOCK) ON AMR2.REVERSAL_VM_ID=VM.VM_ID               
				   WHERE VM.VOUCHER_DT<= '''+CONVERT(VARCHAR,@DTOGDT,110)+'''        
				   AND (VM.VOUCHER_CODE NOT IN (''MEMO000001'',''MEMO000002'') OR '''+@CDONOT_CONSIDER_MEMO_VOUCHERS_ACCBOOKS+'''<>''1'')      
				  AND ((AMR1.MEMO_VM_ID IS NULL AND AMR2.MEMO_VM_ID IS NULL) OR       
						('''+@CCONSIDER_MEMO_REVERSAL_VOUCHERS_ACCBOOKS+'''=''1'' AND '''+@CDONOT_CONSIDER_MEMO_VOUCHERS_ACCBOOKS+'''<>''1''))           
      
				   AND ((VOUCHER_DT>'''+@CVIEWLEDGERFORCANCELLEDVOUCHERS+''' AND VM.CANCELLED=0)      
					OR ('''+@CVIEWLEDGERFORCANCELLEDVOUCHERS+'''<>'''' AND ISNULL(CONSIDER_FOR_LEDGER_VIEW,0)=1       
					 AND VOUCHER_DT<='''+@CVIEWLEDGERFORCANCELLEDVOUCHERS+'''))              
				   ORDER BY COST_CENTER_DEPT_ID,VM.VOUCHER_DT'        
      
				   PRINT @CCMD      
      
				 INSERT #TEMP (COST_CENTER_DEPT_ID,VM_ID ,ACCODE,HEAD_CODE, VOUCHER_DT, ORDERDATE, VOUCHERTYPE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT,BILL_BY_BILL )        
				 EXEC SP_EXECUTESQL @CCMD    

				EXEC SP3S_BILL_BY_BILL @NMODE=6,@CAC_CODE='',@DT_TODATE=@DTOGDT,@CLOCID='',@BSHOWMRRNO= 0,@NDUEBILLMODE=1

					IF OBJECT_ID('TEMPDB..#TMPDUEBILLS','U') IS NOT NULL
					   DROP TABLE #TMPDUEBILLS

					SELECT lmm.major_ac_code Ac_Code, lmm.ac_name AcName, A.DUE_DATE Voucherdate, 
					      sum(DEBIT_AMOUNT ) DebitAmount, 
						  sum(CREDIT_AMOUNT ) CreditAmount, newid() as RowId, 0 as AgeingDays 
					INTO #TMPDUEBILLS
					FROM ##TMPPENDINGBILLS A
					join #TEMP_AC_CODE lm (NOLOCK) on lm.AC_CODE = A.AC_CODE
					join lm01106 lmm (NOLOCK) on lmm.AC_CODE = lm.major_AC_CODE
					GROUP BY  lmm.major_ac_code , lmm.ac_name , A.DUE_DATE
			        
					update #TMPDUEBILLS set AgeingDays = datediff(Day, VoucherDate, convert(date, @DTOGDT ))
			           
					   --FOR AGEING on account
					   
					IF OBJECT_ID('TEMPDB..#RESULT','U') IS NOT NULL
					   DROP TABLE #RESULT

					SELECT LMM.AC_CODE ACCODE, LMM.AC_NAME ACNAME, VM.VOUCHER_DT VOUCHERDATE, 
					      SUM(CASE WHEN @NMODE=1 THEN  DEBIT_AMOUNT ELSE CREDIT_AMOUNT END ) DEBITAMOUNT, 0 CREDITAMOUNT,
						  newid() ROWID, 0 AS AGEINGDAYS,
						  RUNNING_CR=CAST(0 AS NUMERIC(18,2))
					INTO #RESULT
					FROM #TEMP VM  
					JOIN LM01106 LMM (NOLOCK) ON LMM.AC_CODE = VM.ACCODE
					--WHERE ISNULL(VM.BILL_BY_BILL,0) =0
				    GROUP BY LMM.AC_CODE, LMM.AC_NAME, VM.VOUCHER_DT
					HAVING SUM(CASE WHEN @NMODE=1 THEN  DEBIT_AMOUNT ELSE CREDIT_AMOUNT END )>0
				    
					update #RESULT set RUNNING_CR=(select sum(DEBITAMOUNT) from #RESULT a where #RESULT.ACCODE =a.ACCODE and a.VOUCHERDATE <=#RESULT.VOUCHERDATE )

				
					--select * from #RESULT
	

	     			IF CURSOR_STATUS('GLOBAL','Credits') IN (0,1)
					BEGIN
						CLOSE Credits
						DEALLOCATE Credits
					END
				
					declare Credits cursor for 

					select vm.ACCODE AcCode, 
					sum(CASE WHEN @NMODE=1 THEN  credit_amount ELSE DEBIT_AMOUNT END ) 
					from #TEMP vm (NOLOCK) 
					group by vm.ACCODE
					having sum(CASE WHEN @NMODE=1 THEN  credit_amount ELSE DEBIT_AMOUNT END ) >0
					order by vm.ACCODE

					
					open Credits 
					Fetch next from Credits
					into @cAcCode, @nCreditAmount
					WHILE @@FETCH_STATUS = 0  
					BEGIN  
						set @nDebitAmount=0
						set @cRowId = ''

						update  #RESULT set RUNNING_CR=0
						WHERE RUNNING_CR>(select top 1  RUNNING_CR from #RESULT where  RUNNING_CR>= @nCreditAmount AND  ACCODE =@cAcCode order by RUNNING_CR)
						and ACCODE =@cAcCode

						UPDATE  #RESULT
						SET CreditAmount = DEBITAMOUNT
						WHERE RUNNING_CR <=@nCreditAmount and RUNNING_CR>0
						and ACCODE =@cAcCode
	
	
						UPDATE  #RESULT
						SET CreditAmount =  @nCreditAmount-(RUNNING_CR -DEBITAMOUNT )
						WHERE RUNNING_CR >@nCreditAmount
						and ACCODE =@cAcCode
		            
					
						--while @nCreditAmount>0
						--Begin


						--	select top 1 @cRowId = RowId from #Result where AcCode = @cAcCode and CreditAmount=0 and DebitAmount>0 order by Voucherdate
							
						--	if isnull(@cRowId, '') = ''
						--		break

						--	select @nDebitAmount = DebitAmount from #Result where rowid = @cRowId
						--	update #Result set CreditAmount = case when @nCreditAmount > @nDebitAmount then @nDebitAmount else @nCreditAmount end where rowid = @cRowId
						--	set @nCreditAmount = case when @nCreditAmount > @nDebitAmount then @nCreditAmount - @nDebitAmount else 0 end


						--	--select * from #Result
						--	set @cRowId = ''

						--End

						FETCH NEXT FROM Credits into @cAcCode, @nCreditAmount
					END  
  
					CLOSE Credits;  
					DEALLOCATE Credits;  
					
					update #Result set AgeingDays = datediff(Day, VoucherDate, convert(date, @DTOGDT ))
				
				
		-- end FOR AGEING on account
		if @bRetAgeingDetails=1
		    begin		
				IF OBJECT_ID ('TEMPDB..#TMPAGEING','U') IS NOT NULL
					DROP TABLE #TMPAGEING

					SELECT AGEING_DAY,SR  
					INTO #TMPAGEING 
					FROM AGEINGDAYS_DRCR
				

					 DECLARE @DTSQL NVARCHAR(MAX),@NMINAGEINGDAYS NUMERIC(5,0),@NMAXAGEINGDAYS NUMERIC(5,0)
	       
					SELECT @NMINAGEINGDAYS=MIN(AGEING_DAY),@NMAXAGEINGDAYS=MAX(AGEING_DAY) FROM #TMPAGEING

					 IF OBJECT_ID('TEMPDB..#TMPCOLUMN','U') IS NOT NULL
						DROP TABLE #TMPCOLUMN

					--VED JI CHANGE

					SELECT ISNULL(B.AGEING_DAY,0)+CASE WHEN B.AGEING_DAY IS NOT NULL THEN 1 ELSE 0 END AS FMDAYS,A.AGEING_DAY  AS TODAYS,
						  '['+RTRIM(LTRIM(STR(ISNULL(B.AGEING_DAY,0)+CASE WHEN B.AGEING_DAY IS NOT NULL THEN 1 ELSE 0 END)))+'TO'+RTRIM(LTRIM(STR(A.AGEING_DAY)))+'DAYS'+']' AS COUMNNAME
					INTO #TMPCOLUMN
					FROM #TMPAGEING A
					FULL OUTER JOIN #TMPAGEING B ON B.SR=A.SR-1

					--END OF CHANGES
				

					UPDATE #TMPCOLUMN SET  COUMNNAME='MORETHAN'+RTRIM(LTRIM(STR(FMDAYS)))+'DAYS'  WHERE TODAYS IS NULL

					DECLARE @CCOLUMNNAME VARCHAR(MAX),@CDISPLAYACNAME VARCHAR(MAX),@CTOTALAGEING VARCHAR(MAX)

					SELECT @CCOLUMNNAME=ISNULL(@CCOLUMNNAME+',','')+CASE WHEN TODAYS IS NULL THEN 'SUM(CASE WHEN AGEINGDAYS >= '+RTRIM(LTRIM(STR(FMDAYS)))+
						   ' THEN DEBITAMOUNT - CREDITAMOUNT ELSE 0 END)' ELSE 
					 'SUM(CASE WHEN AGEINGDAYS BETWEEN '+RTRIM(LTRIM(STR(FMDAYS)))+
					' AND ' +RTRIM(LTRIM(STR(TODAYS)) )+ ' THEN DEBITAMOUNT - CREDITAMOUNT ELSE 0 END)' END +' AS '+COUMNNAME 
					FROM  #TMPCOLUMN

					if isnull(@NVMODE,0)=2
					begin

							SELECT @CDISPLAYACNAME=ISNULL(@CDISPLAYACNAME+',','')+'LED.'+COUMNNAME+' '+' AS '+COUMNNAME ,
								   @CTOTALAGEING=ISNULL(@CTOTALAGEING+',','')+'SUM(LED.'+COUMNNAME+') '+' AS '+COUMNNAME 
							   FROM #TMPCOLUMN
					end
					else
					begin

						SELECT @CDISPLAYACNAME=ISNULL(@CDISPLAYACNAME+',','')+'CASE WHEN ISNULL(LMV.BILL_BY_BILL,1)=1  THEN db.'+COUMNNAME +'  ELSE LED.'+COUMNNAME+' END '+' AS '+COUMNNAME ,
							   @CTOTALAGEING=ISNULL(@CTOTALAGEING+',','')+'SUM(CASE WHEN ISNULL(LMV.BILL_BY_BILL,1)=1  THEN db.'+COUMNNAME +'  ELSE LED.'+COUMNNAME+' END) '+' AS '+COUMNNAME 
						FROM #TMPCOLUMN


					end


				end
                     

					 
					 IF OBJECT_ID ('TEMPDB..#TMPLEDGER_BAL','U') IS NOT NULL
					    DROP TABLE #TMPLEDGER_BAL
				   
				     SELECT A.ACCODE AS AC_CODE,
					 SUM(CASE WHEN  A.VOUCHER_DT<@DFMDT THEN DEBIT_AMOUNT -CREDIT_AMOUNT ELSE 0 END) AS OPENING,
					 SUM(CASE WHEN  A.VOUCHER_DT BETWEEN @DFMDT AND @DTOGDT THEN DEBIT_AMOUNT ELSE 0 END) AS DEBIT_AMOUNT,
					 SUM(CASE WHEN  A.VOUCHER_DT BETWEEN @DFMDT AND @DTOGDT THEN CREDIT_AMOUNT ELSE 0 END) AS CREDIT_AMOUNT,
					 SUM(CASE WHEN  A.VOUCHER_DT<=@DTOGDT THEN DEBIT_AMOUNT -CREDIT_AMOUNT ELSE 0 END) AS LEDGER_BALANCE
					 INTO #TMPLEDGER_BAL
					 FROM #TEMP A
					 GROUP BY A.ACCODE
				
				    
					if @CCOLUMNNAME is not null
					begin
					SET @CDISPLAYACNAME=','+@CDISPLAYACNAME
				    set @CCOLUMNNAME=','+@CCOLUMNNAME
					set @CTOTALAGEING=','+@CTOTALAGEING

					end 
					else 
					begin
					     SET @CDISPLAYACNAME=isnull(@CDISPLAYACNAME,'')
						set @CCOLUMNNAME=isnull(@CCOLUMNNAME,'')
						set @CTOTALAGEING=isnull(@CTOTALAGEING,'')
					end

				--donot Remove join hd01106

					 	SET @DTSQL=N'SELECT A.AC_CODE,LMV.AC_NAME AS  ACNAME,LMV.CITY,LMV.STATE,
									ABS(A.OPENING) AS OPENING,
									CASE WHEN A.OPENING>0 THEN ''DR''  WHEN A.OPENING<0  THEN ''CR'' ELSE '''' END AS OPENING_DRCR,
									A.DEBIT_AMOUNT,A.CREDIT_AMOUNT,
									ABS(A.LEDGER_BALANCE) AS LEDGER_BALANCE,
									CASE WHEN A.LEDGER_BALANCE>0 THEN ''DR''  WHEN A.LEDGER_BALANCE<0 THEN ''CR'' ELSE '''' END AS CLOSING_DRCR,
									ABS(CASE WHEN ISNULL(LMV.BILL_BY_BILL,1)=1 THEN  ISNULL(DB.DUE_BALANCE,0) ELSE A.LEDGER_BALANCE END)  AS DUE_BALANCE,
									case when CASE WHEN ISNULL(LMV.BILL_BY_BILL,1)=1 THEN  ISNULL(DB.DUE_BALANCE,0) ELSE A.LEDGER_BALANCE END>0 then ''DR''
									ELSE ''CR'' END AS DUE_BALANCE_DRCR,
								--	
									ISNULL(SCH.SEND_MAIL,0) AS SEND_MAIL,ISNULL(SCH.SEND_SMS,0) AS SEND_SMS,
									LMV.MOBILE,LMV.E_MAIL AS EMAIL_ID,LMV.E_MAIL,LMV.WhatsApp_no,
									NEWID() AS ROW_ID,'''' AS SMS_DET,'''' AS EMAIL_SUB,'''' AS EMAIL_BODY,
								    CAST('''' AS VARCHAR(100)) AS T_NAME,ISNULL(SCH.T_ID,'''') AS T_ID,ISNULL(SMS.T_NAME,'''') AS SMS_T_NAME,
								    ISNULL(SMS.SMS_SENT_ON,'''') AS SMS_SENT_ON,GETDATE() AS STMT_CUT_OFF_DT,
								    (CASE WHEN ISNULL(SCH.ATTACHMENT_TYPE,0)=1 OR ISNULL(SCH.ATTACHMENT_TYPE,0)=3 THEN 1 ELSE 0 END)  AS SEND_LEDGER_AS_ATTACHMENT,
								    CAST (0 AS BIT) AS PROCESSED, CAST (0 AS BIT) AS  EMAIL_SEND, CAST (0 AS BIT) AS SMS_SEND,LMV.AR_ID,LMV.AR_NAME,
								    LMV.CONTACT_PERSON_NAME,ISNULL(BNK.BANK_NAME,'''') BANK_NAME,ISNULL(BNK.ACCOUNT_NO,'''') ACCOUNT_NO,ISNULL(BNK.IFSC_CODE,'''') IFSC_CODE,ISNULL(BNK.BF_AC_NAME ,'''') BF_AC_NAME  
									,(CASE WHEN ISNULL(LMP_MSME,0)<>1 THEN ''''  ELSE LMP_MSME_NO END) MSME_NO
									,(CASE WHEN ISNULL(LMP_MSME,0)<>1 THEN ''''  ELSE LMP_MSME_ACITIVITY END) MSME_ACITIVITY
									,(CASE WHEN ISNULL(LMP_MSME,0)<>1 THEN '''' WHEN LMP_MSME_TYPE =2 THEN ''Medium'' WHEN LMP_MSME_TYPE=1 THEN ''Small'' ELSE ''Micro'' END) MSME_TYPE '+@CDISPLAYACNAME+'
						    FROM #TMPLEDGER_BAL A
							JOIN LMV01106 LMV (nolock) ON LMV.AC_CODE=A.AC_CODE
							join hd01106 (nolock) on hd01106.head_code=lmv.head_code
							LEFT JOIN DEBIT_BAL_SMS_LOG  SMS (nolock) ON SMS.AC_CODE=A.AC_CODE 
							LEFT JOIN ACT_SCHEDULER SCH (nolock) ON A.AC_CODE=SCH.AC_CODE 
							LEFT JOIN
							 (
						       SELECT  ACCODE AS AC_CODE
								 '+@CCOLUMNNAME+'
							    FROM #Result GROUP BY ACNAME,ACCODE
							  ) LED ON LED.AC_CODE =A.AC_CODE
							  	LEFT JOIN
								(
									SELECT AC_CODE ,(SUM(ISNULL(DEBITAMOUNT,0)-ISNULL(CREDITAMOUNT,0))) AS DUE_BALANCE '+@CCOLUMNNAME+'
									FROM #TMPDUEBILLS
									GROUP BY AC_CODE
								) DB ON DB.AC_CODE=A.AC_CODE
								LEFT JOIN
								(
									SELECT ROW_NUMBER() OVER (PARTITION BY A.AC_CODE ORDER BY A.AC_CODE) SRNO,A.AC_CODE, A.BANK_NAME,A.ACCOUNT_NO,A.IFSC_CODE,A.BF_AC_NAME 
									FROM LM_BANK_DETAIL A (NOLOCK)
									JOIN #TMPLEDGER_BAL A1 ON A1.AC_CODE=A.AC_CODE
								)BNK ON BNK.AC_CODE=A.AC_CODE AND BNK.SRNO=1
				             WHERE 1=1
							 and ( isnull(ABS(A.OPENING),0)+isnull(A.DEBIT_AMOUNT,0)+isnull(A.CREDIT_AMOUNT,0)+isnull(ABS(A.LEDGER_BALANCE),0)+
							 isnull(ABS(CASE WHEN ISNULL(LMV.BILL_BY_BILL,1)=1 THEN  ISNULL(DB.DUE_BALANCE,0) ELSE A.LEDGER_BALANCE END),0))<>0
							'  +@CWHERE +' ORDER BY LMV.AC_NAME'
		                	PRINT @DTSQL
						    EXEC SP_EXECUTESQL @DTSQL

							SET @DTSQL=N'SELECT SUM(A.OPENING) AS OPENING,
									SUM(A.DEBIT_AMOUNT) AS DEBIT_AMOUNT,
									SUM(A.CREDIT_AMOUNT) AS CREDIT_AMOUNT ,
									SUM(A.LEDGER_BALANCE) AS LEDGER_BALANCE,
									SUM(CASE WHEN ISNULL(LMV.BILL_BY_BILL,1)=1 THEN  ISNULL(DB.DUE_BALANCE,0) ELSE A.LEDGER_BALANCE END)  AS DUE_BALANCE
									'+@CTOTALAGEING+'
									
						    FROM #TMPLEDGER_BAL A
							JOIN LMV01106 LMV (nolock) ON LMV.AC_CODE=A.AC_CODE
							join hd01106 (nolock) on hd01106.head_code=lmv.head_code
							LEFT JOIN DEBIT_BAL_SMS_LOG SMS (nolock) ON SMS.AC_CODE=A.AC_CODE 
							LEFT JOIN ACT_SCHEDULER SCH (nolock) ON A.AC_CODE=SCH.AC_CODE 
							LEFT JOIN
							 (
						       SELECT  ACCODE AS AC_CODE
								 '+@CCOLUMNNAME+'
							    FROM #Result GROUP BY ACCODE
							  ) LED ON LED.AC_CODE =A.AC_CODE
							  	LEFT JOIN
								(
									SELECT AC_CODE ,(SUM(ISNULL(DEBITAMOUNT,0)-ISNULL(CREDITAMOUNT,0))) AS DUE_BALANCE '+@CCOLUMNNAME+'
									FROM #TMPDUEBILLS
									GROUP BY AC_CODE
								) DB ON DB.AC_CODE=A.AC_CODE
				             WHERE 1=1
							'  +@CWHERE 
		                	PRINT @DTSQL
						    EXEC SP_EXECUTESQL @DTSQL
				


				       GOTO END_PROC	


				END


				

			ELSE
			BEGIN
			    

				   SET @NMODE=2

					
					 IF OBJECT_ID('TEMPDB..#TEMPCUS','U') IS NOT NULL
					   DROP TABLE #TEMPCUS

                  
					SELECT A.CUSTOMER_CODE  , A.CUSTOMER_FNAME + ''+ A.CUSTOMER_LNAME CUSTOMER_NAME, A.XN_DT , 
					      SUM(DR_AMOUNT) DR_AMOUNT, SUM(CR_AMOUNT)  CR_AMOUNT
					INTO #TEMPCUS
					FROM CUSTDBXN A (NOLOCK)
				    GROUP BY  A.CUSTOMER_CODE  , A.CUSTOMER_FNAME + ''+ A.CUSTOMER_LNAME , A.XN_DT 
				    


					CREATE INDEX IX_CUSTCODE_TMPCUSTBAL ON #TEMPCUS (CUSTOMER_CODE)

					
					 
					 IF OBJECT_ID('TEMPDB..#TEMPCUSTBAL','U') IS NOT NULL
					   DROP TABLE #TEMPCUSTBAL

				   
				     SELECT A.CUSTOMER_CODE AS CUSTOMER_CODE,
					 SUM(CASE WHEN  A.xn_dt<@DFMDT THEN DR_AMOUNT -CR_AMOUNT ELSE 0 END) AS OPENING,
					 SUM(CASE WHEN  A.xn_dt BETWEEN @DFMDT AND @DTOGDT THEN DR_AMOUNT ELSE 0 END) AS DEBIT_AMOUNT,
					 SUM(CASE WHEN  A.xn_dt BETWEEN @DFMDT AND @DTOGDT THEN CR_AMOUNT ELSE 0 END) AS CREDIT_AMOUNT,
					 SUM(CASE WHEN  A.xn_dt<=@DTOGDT THEN DR_AMOUNT -CR_AMOUNT ELSE 0 END) AS LEDGER_BALANCE
					 INTO #TEMPCUSTBAL
					 FROM #TEMPCUS A
					 GROUP BY A.CUSTOMER_CODE
				
				    
					if @CCOLUMNNAME is not null
					begin
					SET @CDISPLAYACNAME=','+@CDISPLAYACNAME
				    set @CCOLUMNNAME=','+@CCOLUMNNAME
					set @CTOTALAGEING=','+@CTOTALAGEING

					end 
					else 
					begin
					     SET @CDISPLAYACNAME=isnull(@CDISPLAYACNAME,'')
						set @CCOLUMNNAME=isnull(@CCOLUMNNAME,'')
						set @CTOTALAGEING=isnull(@CTOTALAGEING,'')
					end


				IF OBJECT_ID('TEMPDB..#CUSTRESULT','U') IS NOT NULL
					   DROP TABLE #CUSTRESULT

					SELECT A.CUSTOMER_CODE  ,  CUSTOMER_NAME, a.xn_dt , 
					      SUM(CASE WHEN @NMODE=1 THEN  DR_AMOUNT  ELSE CR_AMOUNT END ) DEBITAMOUNT, 0 CREDITAMOUNT, NEWID() AS ROWID, 0 AS AGEINGDAYS
					INTO #CUSTRESULT
					FROM #TEMPCUS A (NOLOCK)
				    GROUP BY  A.CUSTOMER_CODE  , A.CUSTOMER_NAME , a.xn_dt 
					HAVING SUM(CASE WHEN @NMODE=1 THEN  DR_AMOUNT  ELSE CR_AMOUNT END )>0
				    
					

	     			IF CURSOR_STATUS('GLOBAL','Credits') IN (0,1)
					BEGIN
						CLOSE Credits
						DEALLOCATE Credits
					END
				
					declare Credits cursor for 

					select a.CUSTOMER_CODE, 
					sum(CASE WHEN @NMODE=1 THEN  CR_AMOUNT ELSE DR_AMOUNT END ) 
					from #TEMPCUS a (NOLOCK) 
					group by a.CUSTOMER_CODE
					having sum(CASE WHEN @NMODE=1 THEN  CR_AMOUNT ELSE DR_AMOUNT END ) >0
					order by a.CUSTOMER_CODE

			
					open Credits 
					Fetch next from Credits
					into @cAcCode, @nCreditAmount
					WHILE @@FETCH_STATUS = 0  
					BEGIN  
						set @nDebitAmount=0
						set @cRowId = ''
						while @nCreditAmount>0
						Begin
							select top 1 @cRowId = RowId from #CUSTRESULT where CUSTOMER_CODE  = @cAcCode and CREDITAMOUNT =0 and DebitAmount>0 order by xn_dt 
							if isnull(@cRowId, '') = ''
								break
							select @nDebitAmount = DebitAmount from #CUSTRESULT where rowid = @cRowId
							update #CUSTRESULT set CreditAmount = case when @nCreditAmount > @nDebitAmount then @nDebitAmount else @nCreditAmount end where rowid = @cRowId
							set @nCreditAmount = case when @nCreditAmount > @nDebitAmount then @nCreditAmount - @nDebitAmount else 0 end
							set @cRowId = ''

						
						End
						FETCH NEXT FROM Credits into @cAcCode, @nCreditAmount
					END  
  
					CLOSE Credits;  
					DEALLOCATE Credits;  
					
					update #CUSTRESULT set AgeingDays = datediff(Day, xn_dt , convert(date, @DTOGDT ))



			if @bRetAgeingDetails=1
		    begin		
				IF OBJECT_ID ('TEMPDB..#TMPCUSTAGEING','U') IS NOT NULL
					DROP TABLE #TMPCUSTAGEING

					SELECT AGEING_DAY,SR  
					INTO #TMPCUSTAGEING 
					FROM AGEINGDAYS_DRCR
				
	       
					SELECT @NMINAGEINGDAYS=MIN(AGEING_DAY),@NMAXAGEINGDAYS=MAX(AGEING_DAY) FROM #TMPCUSTAGEING

					 IF OBJECT_ID('TEMPDB..#TMPCUSTCOLUMN','U') IS NOT NULL
						DROP TABLE #TMPCUSTCOLUMN

					--		SELECT ISNULL(B.AGEING_DAY,0)+CASE WHEN B.AGEING_DAY IS NOT NULL THEN 1 ELSE 0 END AS FMDAYS,A.AGEING_DAY  AS TODAYS,
					--	  '['+RTRIM(LTRIM(STR(ISNULL(B.AGEING_DAY,0)+CASE WHEN B.AGEING_DAY IS NOT NULL THEN 1 ELSE 0 END)))+'TO'+RTRIM(LTRIM(STR(A.AGEING_DAY)))+'DAYS'+']' AS COUMNNAME
					--INTO #TMPCOLUMN
					--FROM #TMPAGEING A
					--FULL OUTER JOIN #TMPAGEING B ON B.SR=A.SR-1



					SELECT ISNULL(B.AGEING_DAY,0)++CASE WHEN b.AGEING_DAY IS NOT NULL THEN 1 ELSE 0 END AS FMDAYS,A.AGEING_DAY  AS TODAYS,
						  '['+RTRIM(LTRIM(STR(ISNULL(B.AGEING_DAY,0)+CASE WHEN B.AGEING_DAY IS NOT NULL THEN 1 ELSE 0 END)))+'TO'+RTRIM(LTRIM(STR(A.AGEING_DAY)))+'DAYS'+']' AS COUMNNAME
					INTO #TMPCUSTCOLUMN
					FROM #TMPCUSTAGEING A
					FULL OUTER JOIN #TMPCUSTAGEING B ON B.SR=A.SR-1

					UPDATE #TMPCUSTCOLUMN SET  COUMNNAME='MORETHAN'+RTRIM(LTRIM(STR(FMDAYS)))+'DAYS'  WHERE TODAYS IS NULL


					SELECT @CCOLUMNNAME=ISNULL(@CCOLUMNNAME+',','')+CASE WHEN TODAYS IS NULL THEN 'SUM(CASE WHEN AGEINGDAYS > '+RTRIM(LTRIM(STR(FMDAYS)))+
						   ' THEN DEBITAMOUNT - CREDITAMOUNT ELSE 0 END)' ELSE 
					 'SUM(CASE WHEN AGEINGDAYS BETWEEN '+RTRIM(LTRIM(STR(FMDAYS)))+
					' AND ' +RTRIM(LTRIM(STR(TODAYS)) )+ ' THEN DEBITAMOUNT - CREDITAMOUNT ELSE 0 END)' END +' AS '+COUMNNAME 
					FROM  #TMPCUSTCOLUMN

					SELECT @CDISPLAYACNAME=ISNULL(@CDISPLAYACNAME+',','')+'  LED.'+COUMNNAME+'  '+' AS '+COUMNNAME ,
					       @CTOTALAGEING=ISNULL(@CTOTALAGEING+',','')+'SUM( LED.'+COUMNNAME+' ) '+' AS '+COUMNNAME 
					FROM #TMPCUSTCOLUMN

				end
                     
					 
				--select * into TEMPCUSTBAL from #TEMPCUSTBAL


					SET @DTSQL=N'SELECT A.CUSTOMER_CODE,B.CUSTOMER_FNAME+''''+B.CUSTOMER_LNAME AS  ACNAME,'''' as  CITY,'''' as STATE,
									ABS(A.OPENING) AS OPENING,
									CASE WHEN A.OPENING>0 THEN ''DR''  WHEN A.OPENING<0  THEN ''CR'' ELSE '''' END AS OPENING_DRCR,
									A.DEBIT_AMOUNT,A.CREDIT_AMOUNT,
									ABS(A.LEDGER_BALANCE) AS LEDGER_BALANCE,
									CASE WHEN A.LEDGER_BALANCE>0 THEN ''DR''  WHEN A.LEDGER_BALANCE<0 THEN ''CR'' ELSE '''' END AS CLOSING_DRCR,
									ABS(A.LEDGER_BALANCE)  AS DUE_BALANCE,
									CASE WHEN  A.LEDGER_BALANCE >0 THEN ''DR''
									ELSE ''CR'' END AS DUE_BALANCE_DRCR,

									ISNULL(SCH.SEND_MAIL,0) AS SEND_MAIL,ISNULL(SCH.SEND_SMS,0) AS SEND_SMS,
									B.MOBILE,B.EMAIL AS EMAIL_ID,B.EMAIL,B.MOBILE AS WHATSAPP_NO,
									NEWID() AS ROW_ID,'''' AS SMS_DET,'''' AS EMAIL_SUB,'''' AS EMAIL_BODY,
								    CAST('''' AS VARCHAR(100)) AS T_NAME,ISNULL(SCH.T_ID,'') AS T_ID,ISNULL(SMS.T_NAME,'') AS SMS_T_NAME,
								    ISNULL(SMS.SMS_SENT_ON,'''') AS SMS_SENT_ON,GETDATE() AS STMT_CUT_OFF_DT,
								    (CASE WHEN ISNULL(SCH.ATTACHMENT_TYPE,0)=1 OR ISNULL(SCH.ATTACHMENT_TYPE,0)=3 THEN 1 ELSE 0 END)  AS SEND_LEDGER_AS_ATTACHMENT,
								    CAST (0 AS BIT) AS PROCESSED, CAST (0 AS BIT) AS  EMAIL_SEND, CAST (0 AS BIT) AS SMS_SEND,'''' AR_ID,''''AR_NAME,
								    '''' CONTACT_PERSON_NAME  '+@CDISPLAYACNAME+'
						    FROM #TEMPCUSTBAL A
							JOIN custdym (nolock) B ON A.CUSTOMER_CODE=B.CUSTOMER_CODE 
							LEFT JOIN DEBIT_BAL_SMS_LOG  SMS (nolock) ON SMS.AC_CODE=A.CUSTOMER_CODE 
							LEFT JOIN ACT_SCHEDULER SCH (nolock) ON A.CUSTOMER_CODE=SCH.AC_CODE 
							LEFT JOIN
							 (
						       SELECT  CUSTOMER_CODE  AS CUSTOMER_CODE
								 '+@CCOLUMNNAME+'
							    FROM #CUSTRESULT GROUP BY CUSTOMER_CODE,CUSTOMER_CODE
							  ) LED ON LED.CUSTOMER_CODE =A.CUSTOMER_CODE
				             WHERE 1=1
							
							'  +@CWHERE +' ORDER by B.CUSTOMER_FNAME+''''+B.CUSTOMER_LNAME '
		                	PRINT @DTSQL
						    EXEC SP_EXECUTESQL @DTSQL



							SET @DTSQL=N'SELECT SUM(A.OPENING) AS OPENING,
									SUM(A.DEBIT_AMOUNT) AS DEBIT_AMOUNT,
									SUM(A.CREDIT_AMOUNT) AS CREDIT_AMOUNT ,
									SUM(A.LEDGER_BALANCE) AS LEDGER_BALANCE,
									SUM(A.LEDGER_BALANCE)  AS DUE_BALANCE
									'+@CTOTALAGEING+'
									
						    FROM #TEMPCUSTBAL A
							JOIN custdym B (nolock) ON A.CUSTOMER_CODE=B.CUSTOMER_CODE 
							LEFT JOIN DEBIT_BAL_SMS_LOG  SMS (nolock) ON SMS.AC_CODE=A.CUSTOMER_CODE 
							LEFT JOIN ACT_SCHEDULER SCH (nolock) ON A.CUSTOMER_CODE=SCH.AC_CODE
							LEFT JOIN
							 (
						       SELECT  CUSTOMER_CODE AS CUSTOMER_CODE
								 '+@CCOLUMNNAME+'
							    FROM #CUSTRESULT GROUP BY CUSTOMER_CODE
							  ) LED ON LED.CUSTOMER_CODE =A.CUSTOMER_CODE
				             WHERE 1=1
							'  +@CWHERE 
		                	PRINT @DTSQL
						    EXEC SP_EXECUTESQL @DTSQL


						
			
			END
			
		--	SELECT * FROM CUSTDYM
			
	GOTO END_PROC
			
END_PROC:				
END
