create PROCEDURE SP3S_PENDINGORDER_FOR_PO
(
	@CWHERE NVARCHAR(MAX),
	@DLOGINDT DATEtIME='',
	@cdept_id varchar(5)=''
)
AS
BEGIN

	DECLARE @CSIZE VARCHAR(MAX),@CSIZE_SUM VARCHAR(MAX),@CSIZE_SUM_TOTAL VARCHAR(MAX)
	,@CCMD NVARCHAR(MAX),@CSIZE_ZERO NVARCHAR(MAX)
	PRINT @CWHERE
	SET @CWHERE=REPLACE(@CWHERE,'`','''')
	IF OBJECT_ID('TEMPDB..#PENDINGBUYERORDER','U') IS NOT NULL
		DROP TABLE #PENDINGBUYERORDER

	IF OBJECT_ID('TEMPDB..##PENDINGORDER_PIVOT','U') IS NOT NULL
		DROP TABLE ##PENDINGORDER_PIVOT


	CREATE TABLE #PENDINGBUYERORDER
	(
		ORDER_ID		VARCHAR(MAX),
		CUSTOMER_NAME	VARCHAR(MAX),
		ORDER_DT		DATETIME,
		ORDER_NO		VARCHAR(MAX),
		ROW_ID			VARCHAR(MAX),
		ARTICLE_NO		VARCHAR(MAX),
		ARTICLE_CODE	VARCHAR(MAX),
		PARA1_CODE		VARCHAR(MAX),
		PARA2_CODE		VARCHAR(MAX),
		PARA1_NAME		VARCHAR(MAX),
		PARA2_NAME		VARCHAR(MAX),
		QUANTITY		NUMERIC(14,2)
	)		
	BEGIN TRY

		SET @CCMD=N'
		SELECT A.ORDER_ID,LM01106.AC_NAME AS CUSTOMER_NAME,BUYER_ORDER_MST.ORDER_DT,BUYER_ORDER_MST.ORDER_NO,
		A.ROW_ID,ARTICLE_NO,A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE,PARA1.PARA1_NAME,PARA2.PARA2_NAME,
		A.QUANTITY-(CASE WHEN MEMO_TYPE=1 THEN (ISNULL(A.PO_QTY,0)+ISNULL(a.INV_QTY,0)) ELSE (ISNULL(A.PL_QTY,0)+ISNULL(a.PO_QTY,0)) END) AS QUANTITY
		FROM BUYER_ORDER_DET A (NOLOCK)
		JOIN BUYER_ORDER_MST (NOLOCK) ON A.ORDER_ID = BUYER_ORDER_MST.ORDER_ID
		JOIN LM01106 (NOLOCK) ON BUYER_ORDER_MST.AC_CODE = LM01106.AC_CODE
		JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE = A.ARTICLE_CODE
		JOIN PARA1 (NOLOCK) ON PARA1.PARA1_CODE = A.PARA1_CODE
		JOIN PARA2 (NOLOCK) ON PARA2.PARA2_CODE = A.PARA2_CODE
		JOIN PARA3 (NOLOCK) ON PARA3.PARA3_CODE = ARTICLE.PARA3_CODE
		JOIN PARA4 (NOLOCK) ON PARA4.PARA4_CODE = ARTICLE.PARA4_CODE
		JOIN PARA5 (NOLOCK) ON PARA5.PARA5_CODE	= ARTICLE.PARA5_CODE
		JOIN PARA6 (NOLOCK) ON PARA6.PARA6_CODE = ARTICLE.PARA6_CODE
		JOIN SECTIOND (NOLOCK) ON SECTIOND.SUB_SECTION_CODE = ARTICLE.SUB_SECTION_CODE
		JOIN SECTIONM (NOLOCK) ON SECTIONM.SECTION_CODE = SECTIOND.SECTION_CODE
		LEFT JOIN ATTR1_MST A1 (NOLOCK) ON A1.ATTR1_KEY_CODE=a.attr1_KEY_CODE      
		LEFT JOIN ATTR2_MST A2 (NOLOCK) ON A2.ATTR2_KEY_CODE=a.attr2_KEY_CODE      
		LEFT JOIN ATTR3_MST A3 (NOLOCK) ON A3.ATTR3_KEY_CODE=a.attr3_KEY_CODE      
		LEFT JOIN ATTR4_MST A4 (NOLOCK) ON A4.ATTR4_KEY_CODE=a.attr4_KEY_CODE      
		LEFT JOIN ATTR5_MST A5 (NOLOCK) ON A5.ATTR5_KEY_CODE=a.attr5_KEY_CODE      
		LEFT JOIN ATTR6_MST A6 (NOLOCK) ON A6.ATTR6_KEY_CODE=a.attr6_KEY_CODE      
		LEFT JOIN ATTR7_MST A7 (NOLOCK) ON A7.ATTR7_KEY_CODE=a.attr7_KEY_CODE      
		LEFT JOIN ATTR8_MST A8 (NOLOCK) ON A8.ATTR8_KEY_CODE=a.attr8_KEY_CODE      
		LEFT JOIN ATTR9_MST A9 (NOLOCK) ON A9.ATTR9_KEY_CODE=a.attr9_KEY_CODE      
		LEFT JOIN ATTR10_MST A10 (NOLOCK) ON A10.ATTR10_KEY_CODE=a.attr10_KEY_CODE      
		LEFT JOIN ATTR11_MST A11 (NOLOCK) ON A11.ATTR11_KEY_CODE=a.attr11_KEY_CODE      
		LEFT JOIN ATTR12_MST A12 (NOLOCK) ON A12.ATTR12_KEY_CODE=a.attr12_KEY_CODE      
		LEFT JOIN ATTR13_MST A13 (NOLOCK) ON A13.ATTR13_KEY_CODE=a.attr13_KEY_CODE      
		LEFT JOIN ATTR14_MST A14 (NOLOCK) ON A14.ATTR14_KEY_CODE=a.attr14_KEY_CODE      
		LEFT JOIN ATTR15_MST A15 (NOLOCK) ON A15.ATTR15_KEY_CODE=a.attr15_KEY_CODE      
		LEFT JOIN ATTR16_MST A16 (NOLOCK) ON A16.ATTR16_KEY_CODE=a.attr16_KEY_CODE      
		LEFT JOIN ATTR17_MST A17 (NOLOCK) ON A17.ATTR17_KEY_CODE=a.attr17_KEY_CODE      
		LEFT JOIN ATTR18_MST A18 (NOLOCK) ON A18.ATTR18_KEY_CODE=a.attr18_KEY_CODE      
		LEFT JOIN ATTR19_MST A19 (NOLOCK) ON A19.ATTR19_KEY_CODE=a.attr19_KEY_CODE      
		LEFT JOIN ATTR20_MST A20 (NOLOCK) ON A20.ATTR20_KEY_CODE=a.attr20_KEY_CODE      
		LEFT JOIN ATTR21_MST A21 (NOLOCK) ON A21.ATTR21_KEY_CODE=a.attr21_KEY_CODE      
		LEFT JOIN ATTR22_MST A22 (NOLOCK) ON A22.ATTR22_KEY_CODE=a.attr22_KEY_CODE      
		LEFT JOIN ATTR23_MST A23 (NOLOCK) ON A23.ATTR23_KEY_CODE=a.attr23_KEY_CODE      
		LEFT JOIN ATTR24_MST A24 (NOLOCK) ON A24.ATTR24_KEY_CODE=a.attr24_KEY_CODE      
		LEFT JOIN ATTR25_MST A25 (NOLOCK) ON A25.ATTR25_KEY_CODE=a.ATTR25_KEY_CODE
		WHERE  BUYER_ORDER_MST.MEMO_TYPE in(1,2) --AND approvedlevelno=99 
		and BUYER_ORDER_MST.DELIVERY_DT>='''+convert(varchar(10),@DLOGINDT,121)+'''
		--and BUYER_ORDER_MST.dept_id='''+@cdept_id+'''
		AND A.QUANTITY-(CASE WHEN MEMO_TYPE=1 THEN (ISNULL(A.PO_QTY,0)+ISNULL(a.INV_QTY,0)) ELSE (ISNULL(A.PL_QTY,0)+ISNULL(a.PO_QTY,0)) END)>0
		AND BUYER_ORDER_MST.CANCELLED = 0  AND ISNULL(BUYER_ORDER_MST.Short_close,0) = 0 AND  '
		+ 
		(CASE WHEN ISNULL(@CWHERE,'')='' THEN ' 1=1 ' ELSE ISNULL(@CWHERE,'') END)
		
		PRINT 'STEP 1 :'+ @CCMD
		
		INSERT INTO #PENDINGBUYERORDER
		EXEC SP_EXECUTESQL @CCMD

		IF (0= @@ROWCOUNT)
		BEGIN
			SELECT CONVERT(BIT,0) AS BCHK,ORDER_ID,CUSTOMER_NAME,CONVERT(VARCHAR(20),ORDER_DT,105) AS ORDER_DT,ORDER_NO,ROW_ID,ARTICLE_NO,ARTICLE_CODE,PARA1_CODE,PARA1_NAME FROM #PENDINGBUYERORDER
			RETURN
		END

		SELECT  
		@CSIZE=ISNULL(@CSIZE,'')+(CASE WHEN ISNULL(@CSIZE,'')='' THEN '' ELSE ',' END ) +'['+PARA2_NAME+']',
		@CSIZE_SUM=ISNULL(@CSIZE_SUM,'')+(CASE WHEN ISNULL(@CSIZE_SUM,'')='' THEN '' ELSE ',' END ) +'SUM(['+PARA2_NAME+']) AS ['+PARA2_NAME+']',
		@CSIZE_SUM_TOTAL=ISNULL(@CSIZE_SUM_TOTAL,'')+(CASE WHEN ISNULL(@CSIZE_SUM_TOTAL,'')='' THEN '' ELSE '+' END ) +'ISNULL(SUM(['+PARA2_NAME+']),0)',
		@CSIZE_ZERO=ISNULL(@CSIZE_ZERO,'')+(CASE WHEN ISNULL(@CSIZE_ZERO,'')='' THEN '' ELSE ',' END ) +'CAST(0 AS NUMERIC(14,2)) AS ['+PARA2_NAME+']'
		FROM #PENDINGBUYERORDER
		GROUP BY PARA2_NAME
		
		--SELECT @CSIZE ,@CSIZE_SUM,@CSIZE_SUM_TOTAL

		SET @CCMD=N'
		SELECT ORDER_ID,CUSTOMER_NAME,ORDER_DT,ORDER_NO,ARTICLE_NO,ARTICLE_CODE,PARA1_CODE,PARA1_NAME,'+@CSIZE+
		'INTO ##PENDINGORDER_PIVOT
		FROM 
		(
			SELECT * FROM #PENDINGBUYERORDER
		)X
		PIVOT
		(
			SUM(QUANTITY)
			FOR PARA2_NAME IN ('+@CSIZE+')
		)PVT'

		PRINT 'STEP 2 :'+ @CCMD
		
		EXEC SP_EXECUTESQL @CCMD
		
			
		SET @CCMD=N'
		SELECT CONVERT(BIT,0) AS BCHK,ORDER_ID,CUSTOMER_NAME,CONVERT(VARCHAR(20),ORDER_DT,105) AS ORDER_DT,ORDER_NO,ARTICLE_NO,ARTICLE_CODE,PARA1_CODE,PARA1_NAME,'+
		@CSIZE_SUM+','+@CSIZE_SUM_TOTAL +' AS TOTAL,CONVERT(INT,0) AS BEDIT,''ORD QTY'' AS QTY_MSG,CUSTOMER_NAME AS CUSTOMER_NAME_DISP
		FROM ##PENDINGORDER_PIVOT
		GROUP BY ORDER_ID,CUSTOMER_NAME,ORDER_DT,ORDER_NO,ARTICLE_NO,ARTICLE_CODE,PARA1_CODE,PARA1_NAME
		UNION
		SELECT CONVERT(BIT,0) AS BCHK,ORDER_ID,'''' AS CUSTOMER_NAME,'''' AS ORDER_DT,'''' AS ORDER_NO,'''' AS ARTICLE_NO,ARTICLE_CODE,PARA1_CODE,'''' AS PARA1_NAME,'+
		@CSIZE_SUM+','+@CSIZE_SUM_TOTAL +' AS TOTAL,CONVERT(INT,1) AS BEDIT,''PO QTY'' AS QTY_MSG,CUSTOMER_NAME AS CUSTOMER_NAME_DISP
		FROM ##PENDINGORDER_PIVOT
		GROUP BY ORDER_ID,CUSTOMER_NAME,ARTICLE_CODE,PARA1_CODE
		UNION
		SELECT CONVERT(BIT,0) AS BCHK,''ZZZZZZZZZZZZ''ORDER_ID,'''' AS CUSTOMER_NAME,'''' AS ORDER_DT,'''' AS ORDER_NO,'''' AS ARTICLE_NO,ARTICLE_CODE,PARA1_CODE,'''' AS PARA1_NAME,'+
		@CSIZE_ZERO+',CAST(0 AS NUMERIC(14,2)) AS TOTAL,CONVERT(INT,-1) AS BEDIT,''TOTAL PO QTY'' AS QTY_MSG,''ZZZZZZZZZZZZ'' AS CUSTOMER_NAME_DISP
		FROM ##PENDINGORDER_PIVOT
		GROUP BY ORDER_ID,CUSTOMER_NAME,ARTICLE_CODE,PARA1_CODE
		ORDER BY ORDER_ID,ARTICLE_CODE,PARA1_CODE,BEDIT
		'
		PRINT 'STEP 3 :'+ @CCMD
		
		EXEC SP_EXECUTESQL @CCMD
	END TRY
	BEGIN CATCH
		SELECT ERROR_MESSAGE()
	END CATCH
END
