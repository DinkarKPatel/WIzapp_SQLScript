CREATE PROCEDURE UPDATEMASTER 
			@CSOURCEDB VARCHAR(100),
			@CSOURCETABLE VARCHAR(100),
			@CDESTDB VARCHAR(100),
			@CDESTTABLE VARCHAR(100),
			@CKEYFIELD1 VARCHAR(40)='',
			@CKEYFIELD2 VARCHAR(40)='',
			@CKEYFIELD3 VARCHAR(40)='',
			@LINSERTONLY BIT = 0,
			@CFILTERCONDITION VARCHAR(500)='',
			@LUPDATEXNS BIT=0,
			@CXNTYPE VARCHAR(20)='',
			@LUPDATEONLY BIT = 0,
			@CUSERID VARCHAR(30)=''
--WITH ENCRYPTION			
AS
BEGIN
	SET NOCOUNT ON

	DECLARE @CWC VARCHAR(100),
			@CINSERTSTR NVARCHAR(4000),
			@CINSERTSTRVALUE NVARCHAR(4000),
			@CWHERECLAUSE NVARCHAR(4000),
			@CCMD NVARCHAR(4000),@CCURLOCID CHAR(2),
			@LDONOTREPLNULLS BIT,@CUSERIDPREFIX VARCHAR(30),
			@LLASTUPDATEFOUND BIT
	
	IF @CUSERID<>''
	BEGIN
		SET @CUSERID=STUFF(@CUSERID,CHARINDEX('[',@CUSERID),1,'')
		SET @CUSERID=STUFF(@CUSERID,CHARINDEX(']',@CUSERID),1,'')
	END
		
	SET @CUSERIDPREFIX=(CASE WHEN @CUSERID<>'' THEN @CUSERID+'.' ELSE '' END)
	-- PRINT '@CUSERIDPREFIX ' + ISNULL(@CUSERIDPREFIX,'NULL') + 
--			' @CSOURCEDB ' + ISNULL(@CSOURCEDB, 'NULL') + 
--			' @CDESTDB ' + ISNULL(@CDESTDB, 'NULL') + 
--			' @CSOURCETABLE ' + ISNULL(@CSOURCETABLE, 'NULL') + 
--			' @CDESTTABLE ' + ISNULL(@CDESTTABLE, 'NULL')

	SELECT @CCURLOCID=VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'
	
	--SELECT CAST(GETDATE() AS DATETIME)

	SET @CWC = ''
	IF @CKEYFIELD1 <> ''
		SET @CWC = 'A.' + @CKEYFIELD1 + ' = B.' + @CKEYFIELD1
	IF @CKEYFIELD2 <> ''
		SET @CWC = @CWC + ( CASE WHEN @CWC<>'' THEN ' AND ' ELSE '' END ) + 'A.' + @CKEYFIELD2 + ' = B.' + @CKEYFIELD2
	IF @CKEYFIELD3 <> ''
		SET @CWC = @CWC + ( CASE WHEN @CWC<>'' THEN ' AND ' ELSE '' END ) + 'A.' + @CKEYFIELD3 + ' = B.' + @CKEYFIELD3
	IF @CWC <> ''
		SET @CWC = ' ON ' + @CWC 

	--PRINT 'START1'	
	
	IF @CUSERID<>''
		SET @CCMD='IF EXISTS (SELECT A.NAME FROM SYSOBJECTS A JOIN SYSUSERS B ON A.UID=B.UID 
			WHERE B.NAME='''+@CUSERID+''' AND A.NAME LIKE ''%CTARGETCOL%'')
			DROP TABLE '+@CUSERIDPREFIX+'__CTARGETCOL'
	ELSE
		SET @CCMD='IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME LIKE ''%CTARGETCOL%'')
			DROP TABLE __CTARGETCOL'
		
		
	--PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD

	SET @CCMD = 'SELECT A.NAME AS COLNAME, B.NAME AS COLTYPE 
				 INTO '+@CUSERIDPREFIX+'__CTARGETCOL 
				 FROM ' + @CSOURCEDB + 'SYSCOLUMNS A 
				 JOIN ' + @CSOURCEDB + 'SYSTYPES B ON A.XTYPE = B.XTYPE 
				 JOIN ' + @CDESTDB + 'SYSCOLUMNS C ON A.NAME = C.NAME
				 JOIN ' + @CDESTDB + 'SYSOBJECTS D ON D.ID = C.ID 
				 WHERE A.ID = ( SELECT ID FROM ' + @CSOURCEDB + 'SYSOBJECTS 
								WHERE NAME = ''' + @CSOURCETABLE + '''
								AND XTYPE = ''U'') 
				 AND   D.NAME = ''' + @CDESTTABLE + ''' 
				 AND   A.NAME <> ''TS'''
	--PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD		

	--PRINT '3'
	IF @LINSERTONLY = 0 AND @LUPDATEXNS=0
	BEGIN
		-- BUILDING UPDATE COMMAND
		-- PRINT 'UPDATING RECORDS INTO ' + @CDESTDB + @CDESTTABLE

	-- PRINT '4'		
		EXEC SP_UPDATECOLUMNLIST @CSOURCETABLE, @CKEYFIELD1, @CKEYFIELD2, @CKEYFIELD3, 1,@CUSERID,@CINSERTSTR OUTPUT 
	-- PRINT '5'
	
		SET @LLASTUPDATEFOUND = 0
		SET @CCMD = N'IF EXISTS ( SELECT A.NAME FROM ' + @CSOURCEDB + 'SYSCOLUMNS A 
								  JOIN ' + @CSOURCEDB + 'SYSOBJECTS B ON A.ID = B.ID
								  WHERE A.NAME = ''LAST_UPDATE''
								  AND   B.NAME = ''' + @CSOURCETABLE + ''' )
						   SET @LLASTUPDATEFOUND = 1'
		EXEC SP_EXECUTESQL @CCMD, N'@LLASTUPDATEFOUND BIT OUTPUT', @LLASTUPDATEFOUND OUTPUT
								  
		IF @LLASTUPDATEFOUND = 1
			SET @CWHERECLAUSE=' WHERE A.LAST_UPDATE<B.LAST_UPDATE '
		ELSE
			SET @CWHERECLAUSE=' WHERE 1=1 '

		SET @CCMD = N'UPDATE A SET ' + @CINSERTSTR +
					 ' FROM ' + @CSOURCEDB + @CSOURCETABLE + ' B' + 
					 ' JOIN ' + @CDESTDB + @CDESTTABLE + ' A ' + @CWC + @CWHERECLAUSE + @CFILTERCONDITION
		-- PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
	END
	
	IF @LUPDATEONLY = 1
		RETURN

	-- BUILDING INSERT COMMAND
	-- PRINT 'INSERTING RECORDS INTO ' + @CDESTDB + @CDESTTABLE
	SET @CWC = ''
	IF @CKEYFIELD2 <> ''
		SET @CWC = @CKEYFIELD2 + ' = B.' + @CKEYFIELD2
	IF @CKEYFIELD3 <> ''
		SET @CWC = @CWC + ( CASE WHEN @CWC<>'' THEN ' AND ' ELSE '' END ) + @CKEYFIELD3 + ' = B.' + @CKEYFIELD3
	IF @CWC <> ''
		SET @CWC = ' WHERE ' + @CWC 
	

	IF @CUSERID<>''
		SET @CCMD='IF EXISTS (SELECT A.NAME FROM SYSOBJECTS A JOIN SYSUSERS B ON A.UID=B.UID 
			WHERE B.NAME='''+@CUSERID+''' AND A.NAME LIKE ''%CTARGETCOL%'')
			DROP TABLE '+@CUSERIDPREFIX+'__CTARGETCOL'
	ELSE
		SET @CCMD='IF EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME LIKE ''%CTARGETCOL%'')
			DROP TABLE __CTARGETCOL'

		
	-- PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD

	    SET @CCMD='SELECT A.NAME AS COLNAME, B.NAME AS COLTYPE,E.NAME AS SOURCECOLNAME
				   INTO '+@CUSERIDPREFIX+'__CTARGETCOL
				   FROM '+ @CDESTDB + 'SYSCOLUMNS A 
				   JOIN '+ @CDESTDB + 'SYSTYPES B ON A.XTYPE = B.XTYPE 
				   JOIN '+ @CDESTDB + 'SYSOBJECTS C ON C.ID = A.ID 
				   JOIN '+ @CSOURCEDB+'SYSOBJECTS D ON D.NAME = '''+@CSOURCETABLE+'''
				   LEFT OUTER JOIN '+@CSOURCEDB+'SYSCOLUMNS E ON E.ID = D.ID AND E.NAME=A.NAME
				   WHERE A.ID = ( SELECT ID FROM '+@CDESTDB+'SYSOBJECTS 
								WHERE NAME = '''+@CDESTTABLE+'''
								AND XTYPE = ''U'') 
				 AND   C.NAME = '''+@CDESTTABLE+''' 
				 AND   A.NAME <> ''TS'''
	
	--PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD		
	
	SET @LDONOTREPLNULLS=(CASE WHEN @CKEYFIELD1='' THEN 1 ELSE 0 END)
	
	-- PRINT 'GENERATE INSERT STATEMENT'	
	EXEC SP_INSERTCOLUMNLIST @CSOURCETABLE,@LDONOTREPLNULLS,@CUSERID, @CINSERTSTR OUTPUT, @CINSERTSTRVALUE OUTPUT
	
	-- PRINT 'GENERATED INSERT STATEMENT'+ISNULL(@CFILTERCONDITION,'NULLFILTER')+ISNULL(@CKEYFIELD1,'NULLKF')
	-- PRINT ISNULL(@CINSERTSTRVALUE,'CINSERTVALUE')
	-- PRINT ISNULL(@CINSERTSTR,'CINSERT')

	SET @CCMD = N' INSERT ' + @CDESTDB + @CDESTTABLE + ' ( ' + @CINSERTSTR + ' ) ' +
				 ' SELECT ' + @CINSERTSTRVALUE + 
				 ' FROM ' + @CSOURCEDB + @CSOURCETABLE + ' B ' + 
				  + ( CASE WHEN @LUPDATEXNS=0 AND @CKEYFIELD1<>'' THEN ' WHERE '+
								@CKEYFIELD1 + ' NOT IN ( SELECT DISTINCT ' + @CKEYFIELD1 + 
												         ' FROM ' + @CDESTDB + @CDESTTABLE + @CWC + ' ) ' + 
								@CFILTERCONDITION 
							   ELSE 
							  (	CASE WHEN @CFILTERCONDITION<>'' THEN ' WHERE '+@CFILTERCONDITION ELSE '' END ) END )
	 -- PRINT 'EXECUTE INSERT'

	--PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD
	-- PRINT 'EXECUTED INSERT'
END
