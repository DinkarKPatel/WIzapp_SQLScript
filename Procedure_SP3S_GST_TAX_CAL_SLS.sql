create PROCEDURE SP3S_GST_TAX_CAL_SLS
(
  @CXN_TYPE VARCHAR(10)='',
  @CMEMO_ID VARCHAR(30)='',
  @DMEMO_DT DATETIME='',
  @NSPID VARCHAR(40)='',
  @CPARTYSTATE_CODE VARCHAR(10)='',
  @BLOCALBILL BIT =0,
  @BPARTYREGISTERED INT=0, --USE REGISTERED
  @CPARTY_GSTN_NO VARCHAR(50)='',
  @CERRMSG VARCHAR(max) OUTPUT  ,
  @cLocationId VARCHAR(5)='',
  @nBoxNo NUMERIC(3,0)=0
)
--WITH RECOMPILE
AS
BEGIN
  
     
  
    DECLARE @CSTEP VARCHAR(10),@CCURDEPT_ID VARCHAR(5),@CCURSTATE_CODE VARCHAR(10),@GSTDATE DATETIME,
            @CTABLENAME VARCHAR(100),@CTEMPTABLENAME VARCHAR(100),@CTEMPDBNAME   VARCHAR(100),
            @CMASTERTABLENAME  VARCHAR(100),  @CDETAILTABLENAME  VARCHAR(100),   @CTEMPMASTERTABLENAME VARCHAR(100),  
            @CTEMPDETAILTABLENAME VARCHAR(100), @CTEMPMASTERTABLE  VARCHAR(100),   @CTEMPDETAILTABLE  VARCHAR(100) ,
            @DTSQL NVARCHAR(MAX) ,@CHASNCODEERROR VARCHAR(1000),@CLOC_GSTN_NO VARCHAR(100),@BREGISTERED_DELEER INT,
            @BCALCGST BIT ,@CFILTER VARCHAR(1000),@NDNTYPE INT,@CREFMRRID VARCHAR(100),
            @nExportGstMode NUMERIC(1,0),@nExportGstPct NUMERIC(6,2),
            @bExportInvoice BIT,
            @BCESS_APPLICABLE BIT,@DOMESTIC_FOR_EXPORT int,@cdebugxntype varchar(10)
    
    SET @CSTEP=5
	DECLARE @CSTATECODE VARCHAR(10)
	DECLARE @CSOURCEDEPTID VARCHAR(5) 
	set @DOMESTIC_FOR_EXPORT=0

	SET @CXN_TYPE='SLS'
	   	          
    DECLARE @CGSTCUTOFFDATE VARCHAR(10)
	set @cdebugxntype=@CXN_TYPE 

	
    SELECT TOP 1 @CGSTCUTOFFDATE=VALUE FROM CONFIG WHERE CONFIG_OPTION ='GST_CUT_OFF_DATE'
     
   
   SET @CTEMPDBNAME = '' 
   
   SET @CSTEP=10
    IF @CGSTCUTOFFDATE<>''
       SELECT @GSTDATE=CAST(@CGSTCUTOFFDATE AS DATETIME)
    
    BEGIN TRY 
    SET @CERRMSG=''
    SET @CFILTER=''
	
	EXEC SP_CHKXNSAVELOG @CDEBUGXNTYPE,@cStep,0,@NSPID,1

	IF @cLocationId=''
		SELECT TOP 1 @CCURDEPT_ID=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
	else
		SET @CCURDEPT_ID=@cLocationId
	
    
	IF ISNULL(@CCURDEPT_ID,'')=''
	 BEGIN
		SET @CERRMSG =' LOCATION ID CAN NOT BE BLANK  '  +str(@@SPID)+' while calculating gst'
		RETURN    
	 END

    PRINT ' 1. DEFINE TEMP TABLES'
     IF @CXN_TYPE IN('SLS','PO')
       BEGIN
       SET @CSTEP=60
	   EXEC SP_CHKXNSAVELOG @CDEBUGXNTYPE,@cStep,0,@NSPID,1

			SELECT TOP 1 @CSOURCEDEPTID=SOURCE_DEPT_ID FROM SLS_GST_TAXINFO_CALC TMP (NOLOCK)
			WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID)))

          IF ISNULL(@CSOURCEDEPTID,'')<>''
		     SET @CCURDEPT_ID=@CSOURCEDEPTID

				UPDATE A SET PARTY_STATE_CODE =CUST.CUS_GST_STATE_CODE,
				             party_gst_no=CUST.CUS_GST_NO
				FROM SLS_CMM01106_UPLOAD A (NOLOCK)
				JOIN CUSTDYM CUST (NOLOCK) ON A.CUSTOMER_CODE=CUST.CUSTOMER_CODE
				WHERE ISNULL(CUST.CUS_GST_NO ,'')<>'' AND  A.SP_ID =LTRIM(RTRIM((@NSPID)))
				--AND A.PARTY_STATE_CODE <>CUST.CUS_GST_STATE_CODE
				
				IF @@ROWCOUNT >0
				  select @CPARTYSTATE_CODE=PARTY_STATE_CODE from SLS_CMM01106_UPLOAD where sp_id=LTRIM(RTRIM((@NSPID)))


				    SET @CSTEP=66
                
				EXEC SP_CHKXNSAVELOG @CDEBUGXNTYPE,@cStep,0,@NSPID,1

				  -- as discuss with rohit sir /pankaj if tick in custdym always pick percenateg from  custdym & calculate igs amount

				SELECT TOP 1 @nExportGstPct=ISNULL(b.custdym_export_gst_percentage,0),
                             @bExportInvoice=ISNULL(b.custdym_export_gst_percentage_Applicable,0)
              FROM SLS_CMM01106_UPLOAD A (NOLOCK)
	          JOIN custdym B (NOLOCK) ON A.CUSTOMER_CODE =B.CUSTOMER_CODE
			  where A.SP_ID =LTRIM(RTRIM((@NSPID)))

			  set @bExportInvoice=isnull(@bExportInvoice,0)
			  set @nExportGstPct=isnull(@nExportGstPct,0)

			  IF ISNULL(@BEXPORTINVOICE,0)=1 
			      SET @CPARTYSTATE_CODE='NA2'

			

      END
       SET @CSTEP=67

	   EXEC SP_CHKXNSAVELOG @CDEBUGXNTYPE,@cStep,0,@NSPID,1

       set @bExportInvoice=ISNULL(@bExportInvoice,0)
       PRINT '1.END OF DEFINE TEMP TABLES'
       
	   SELECT @CSTATECODE=STATE_CODE FROM LOC_VIEW WHERE DEPT_ID=@CCURDEPT_ID
	   SELECT TOP 1 @CCURSTATE_CODE=ISNULL(GST_STATE_CODE,''),@CLOC_GSTN_NO=A.LOC_GST_NO,@BREGISTERED_DELEER=ISNULL(REGISTERED_GST,0) ,
	   @BCESS_APPLICABLE=ISNULL(CESS_APPLICABLE,0)
	   FROM LOCATION A WHERE A.DEPT_ID =@CCURDEPT_ID

	  SET @CSTEP=65.4	   
	 
       IF @BLOCALBILL=1
	      SET @CPARTYSTATE_CODE=@CCURSTATE_CODE
	  
	
			 IF ISNULL(@DMEMO_DT,'')<>'' AND EXISTS (SELECT TOP 1 'U' FROM SLS_GST_TAXINFO_CALC A  with (rowLOCK) WHERE SP_ID =LTRIM(RTRIM((@NSPID)))  AND ISNULL(MEMO_DT,'') ='')
			 UPDATE A SET MEMO_DT=@DMEMO_DT FROM SLS_GST_TAXINFO_CALC A  with (rowLOCK) WHERE SP_ID =LTRIM(RTRIM((@NSPID)))  AND ISNULL(MEMO_DT,'') =''
	  
	   
	   SET @CSTEP=66
	   IF EXISTS (SELECT TOP 1 'U' FROM SLS_GST_TAXINFO_CALC A (NOLOCK) WHERE SP_ID =LTRIM(RTRIM((@NSPID)))  AND MEMO_DT <='2017-06-30')
	   BEGIN
		  RETURN
	   END
       
         DECLARE @CFC_CODE VARCHAR(7)
		 SELECT @CFC_CODE=fc_code  FROM location WHERE DEPT_ID=@CCURDEPT_ID
				   
       DECLARE  @CALL_XN_IGST VARCHAR(5)
       SELECT TOP 1 @CALL_XN_IGST=VALUE  FROM CONFIG WHERE CONFIG_OPTION ='ALL_XN_IGST' 
       
       IF @CALL_XN_IGST IS NULL
			SET @CALL_XN_IGST=''
       
       IF ISNULL(@CFC_CODE,'') NOT IN('','0000000')
       	SET @CALL_XN_IGST='1'

       	SET @CSTEP=66.5
		EXEC SP_CHKXNSAVELOG @CDEBUGXNTYPE,@cStep,0,@NSPID,1


       IF ISNULL(@CALL_XN_IGST,'')='1'
       BEGIN
            SET @BPARTYREGISTERED=1
            SET @BREGISTERED_DELEER=1
            SET @CCURSTATE_CODE='NA1'
            SET @CPARTYSTATE_CODE='NA2'
            SET @CPARTY_GSTN_NO='NA1'
            SET @CLOC_GSTN_NO='NA2'
       END
        
  
       IF ISNULL(@CMEMO_ID,'')=''
       BEGIN
			print 'check gst-1'
            SET @CSTEP=66.2
		

			SET @CSTEP=68
	        print 'check gst-3'
			   DECLARE @NGSTCALC INT
			   SET @NGSTCALC=0

			   EXEC SP_CHKXNSAVELOG @CDEBUGXNTYPE,@cStep,0,@NSPID,1

			   --As Discuss with sanjiv Sir if Transaction un Registered  location no need to gst calculate in all transaction

			   IF NOT (ISNULL(@BREGISTERED_DELEER,0)=1 OR @NGSTCALC=1 ) 
					UPDATE TMP SET HSN_CODE=CASE WHEN ISNULL(TMP.HSN_CODE,'') NOT IN ('','0000000000') THEN TMP.HSN_CODE
				                                WHEN ISNULL(SKU.HSN_CODE,'') NOT IN ('','0000000000') THEN SKU.HSN_CODE  
				                                ELSE HM.HSN_CODE END ,
				                  MRP=CASE WHEN ISNULL(TMP.MRP,0)=0 THEN SKU.MRP ELSE TMP.MRP END
				   FROM SLS_GST_TAXINFO_CALC TMP WITH (ROWLOCK)
				   JOIN SKU  (NOLOCK) SKU ON TMP.PRODUCT_CODE=SKU.PRODUCT_CODE 
				   JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =SKU.ARTICLE_CODE 
				   LEFT JOIN HSN_MST  HM (NOLOCK) ON HM.HSN_CODE=ART.HSN_CODE 
				   WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID))) AND ISNULL(TMP.PRODUCT_CODE,'')<>''

		       SET @CSTEP=70
			   IF (ISNULL(@BREGISTERED_DELEER,0)=1 OR @NGSTCALC=1 ) 
			   BEGIN  
					SET @CSTEP=70.2	   
				   IF  ISNULL(@CALL_XN_IGST,'')<>'1'
				   BEGIN
					SET @CSTEP=70.4
					   IF ISNULL (@CPARTYSTATE_CODE,'')IN('','00')
					   BEGIN
						  SET @CERRMSG='1.1:INVALID STATE CODE'
						  RETURN
					   END

					   SET @CSTEP=70.6
					   IF NOT EXISTS(SELECT TOP 1 'U' FROM GST_STATE_MST (NOLOCK) WHERE GST_STATE_CODE=@CPARTYSTATE_CODE) 
					   AND @bExportInvoice<>1
					   BEGIN
						  SET @CERRMSG='PLEASE CHECK GST STATE MASTER-'+@CPARTYSTATE_CODE
						  RETURN
					   END  
			      END
                 SET @CSTEP=72
              
			    EXEC SP_CHKXNSAVELOG @CDEBUGXNTYPE,@cStep,0,@NSPID,1

       
                   
			       PRINT '3.UPDATE HSN CODE IN TEMP TABLE'   
				   UPDATE TMP SET HSN_CODE=CASE WHEN ISNULL(TMP.HSN_CODE,'') NOT IN ('','0000000000') THEN TMP.HSN_CODE
				                                WHEN ISNULL(SKU.HSN_CODE,'') NOT IN ('','0000000000') THEN SKU.HSN_CODE  
				                                ELSE HM.HSN_CODE END ,
				                  MRP=CASE WHEN ISNULL(TMP.MRP,0)=0 THEN SKU.MRP ELSE TMP.MRP END
				   FROM SLS_GST_TAXINFO_CALC TMP (NOLOCK)
				   JOIN SKU  (NOLOCK) SKU ON TMP.PRODUCT_CODE=SKU.PRODUCT_CODE 
				   JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =SKU.ARTICLE_CODE 
				   LEFT JOIN HSN_MST  HM (NOLOCK) ON HM.HSN_CODE=ART.HSN_CODE 
				   WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID))) AND ISNULL(TMP.PRODUCT_CODE,'')<>''
				 
				   SET @CSTEP=75
                  EXEC SP_CHKXNSAVELOG @CDEBUGXNTYPE,@cStep,0,@NSPID,1


					   DECLARE @CALWAYS_PICK_GST_MODE_IN_RETAIL VARCHAR(10)
				       SELECT @CALWAYS_PICK_GST_MODE_IN_RETAIL=value  FROM CONFIG WHERE CONFIG_OPTION='ALWAYS_PICK_GST_MODE_IN_RETAIL_SALE_FROM_HSN_MASTER'

					   IF ISNULL(@CALWAYS_PICK_GST_MODE_IN_RETAIL,'')='1'
					   BEGIN
					       
						   UPDATE TMP SET TAX_METHOD =(CASE WHEN isnull(hm.RETAILSALE_TAX_METHOD,0)=2 THEN 1 ELSE 2 END) 
						   FROM SLS_GST_TAXINFO_CALC TMP (NOLOCK)
						   JOIN HSN_MST HM (NOLOCK) ON TMP.HSN_CODE =HM.HSN_CODE
						   WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID))) 

					   END

				  
                 SET @CSTEP=78
                 EXEC SP_CHKXNSAVELOG @CDEBUGXNTYPE,@cStep,0,@NSPID,1

				
				   --@CCURDEPT_ID
				 
                   PRINT '4.FETCH GST PERCENTAGE ACCORDING TO WEF '
		
				     --CALCULATE HSN
				IF EXISTS (SELECT TOP 1 SP_ID FROM sls_gst_xns_hsn (NOLOCK) WHERE sp_id=@NSPID)
					DELETE FROM sls_gst_xns_hsn WITH (ROWLOCK) WHERE sp_id=@nSpId
	   
			       SET @CSTEP=80			   
                   IF ISNULL(@CFC_CODE,'')IN('','0000000')
                   BEGIN
                   SET @CSTEP=82
						;WITH CTE AS
						(
						SELECT a.sp_id,A.ROW_ID,B.HSN_CODE,ISNULL(C.TAX_PERCENTAGE,0) AS TAX_PERCENTAGE,ISNULL(C.RATE_CUTOFF,0) AS RATE_CUTOFF,
							   ISNULL(C.RATE_CUTOFF_TAX_PERCENTAGE,0) AS RATE_CUTOFF_TAX_PERCENTAGE,
							  ISNULL(C.WEF,'') AS WEF,ISNULL(B.TAXABLE_ITEM,'') AS TAXABLE_ITEM,ISNULL(B.HSN_TYPE ,'') AS HSN_TYPE  ,
							  SR=ROW_NUMBER() OVER (PARTITION BY A.ROW_ID ORDER BY C.WEF DESC),
							  ISNULL(C.GST_CAL_BASIS,1) AS GST_CAL_BASIS,
							  isnull(c.Rate_CutOff_Gst_Cess_Percentage,0) as Rate_CutOff_Gst_Cess_Percentage,
							  isnull(c.Gst_Cess_Percentage,0) as Gst_Cess_Percentage
						FROM SLS_GST_TAXINFO_CALC A (NOLOCK)
						JOIN HSN_MST B (NOLOCK) ON A.HSN_CODE =B.HSN_CODE 
						LEFT JOIN HSN_DET C (NOLOCK) ON B.HSN_CODE =C.HSN_CODE AND C.WEF  <=MEMO_DT AND ISNULL(C.DEPT_ID,'')=''
						WHERE A.SP_ID =LTRIM(RTRIM((@NSPID)))  
						)
						insert sls_gst_xns_hsn (SP_ID,ROW_ID,HSN_CODE,TAX_PERCENTAGE,RATE_CUTOFF,
					    RATE_CUTOFF_TAX_PERCENTAGE,WEF,TAXABLE_ITEM,HSN_TYPE,SR,GST_CAL_BASIS,Rate_CutOff_Gst_Cess_Percentage,Gst_Cess_Percentage)
						SELECT SP_ID,ROW_ID,HSN_CODE,TAX_PERCENTAGE,RATE_CUTOFF,
					    RATE_CUTOFF_TAX_PERCENTAGE,WEF,TAXABLE_ITEM,HSN_TYPE,SR,GST_CAL_BASIS,
						Rate_CutOff_Gst_Cess_Percentage,Gst_Cess_Percentage
					    FROM CTE WHERE SR=1
						
					END
					ELSE
					BEGIN
					    SET @CSTEP=84 
					     ;WITH CTE AS
						(
						SELECT a.sp_id,A.ROW_ID,B.HSN_CODE,ISNULL(C.TAX_PERCENTAGE,0) AS TAX_PERCENTAGE,ISNULL(C.RATE_CUTOFF,0) AS RATE_CUTOFF,
							   ISNULL(C.RATE_CUTOFF_TAX_PERCENTAGE,0) AS RATE_CUTOFF_TAX_PERCENTAGE,
							  ISNULL(C.WEF,'') AS WEF,ISNULL(B.TAXABLE_ITEM,'') AS TAXABLE_ITEM,ISNULL(B.HSN_TYPE ,'') AS HSN_TYPE  ,
							  SR=ROW_NUMBER() OVER (PARTITION BY A.ROW_ID ORDER BY C.WEF DESC),
							  ISNULL(C.GST_CAL_BASIS,1) AS GST_CAL_BASIS,
							   isnull(c.Rate_CutOff_Gst_Cess_Percentage,0) as Rate_CutOff_Gst_Cess_Percentage,
							  isnull(c.Gst_Cess_Percentage,0) as Gst_Cess_Percentage
						FROM SLS_GST_TAXINFO_CALC A (NOLOCK)
						JOIN HSN_MST B (NOLOCK) ON A.HSN_CODE =B.HSN_CODE 
						LEFT JOIN HSN_DET C (NOLOCK) ON B.HSN_CODE =C.HSN_CODE AND C.WEF  <=MEMO_DT AND C.DEPT_ID=@CCURDEPT_ID
						WHERE A.SP_ID =LTRIM(RTRIM((@NSPID)))  
						)
						insert sls_gst_xns_hsn (SP_ID,ROW_ID,HSN_CODE,TAX_PERCENTAGE,RATE_CUTOFF,
					    RATE_CUTOFF_TAX_PERCENTAGE,WEF,TAXABLE_ITEM,HSN_TYPE,SR,GST_CAL_BASIS,Rate_CutOff_Gst_Cess_Percentage,Gst_Cess_Percentage)
						SELECT SP_ID,ROW_ID,HSN_CODE,TAX_PERCENTAGE,RATE_CUTOFF,
					    RATE_CUTOFF_TAX_PERCENTAGE,WEF,TAXABLE_ITEM,HSN_TYPE,SR,GST_CAL_BASIS,
						Rate_CutOff_Gst_Cess_Percentage,Gst_Cess_Percentage
					    FROM CTE WHERE SR=1
					END
					
				
					SET @CSTEP=86

			       EXEC SP_CHKXNSAVELOG @CDEBUGXNTYPE,@cStep,0,@NSPID,1

				   PRINT '4.UPDATE MRP COLUMN TO GST PERCENTAGE CALCULATE ACCORDING TO  GST CAL BASIS '   
				    
				   UPDATE TMP SET MRP= CASE WHEN ISNULL(HM.GST_CAL_BASIS,1)=1 THEN NET_VALUE ELSE (MRP*QUANTITY) END
				   FROM SLS_GST_TAXINFO_CALC TMP
				   JOIN sls_gst_xns_hsn  HM (NOLOCK) ON hm.sp_id=tmp.sp_id and HM.HSN_CODE=TMP.HSN_CODE and tmp.row_id =hm.row_id 
				   WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID)))
                    
                  PRINT '4.5 UPDATE CESS PERCENTAGE '
                    
					 IF ISNULL(@BCESS_APPLICABLE,0)=1 
					 BEGIN
				     
						 UPDATE A  SET CESS_PERCENTAGE= B.CESS_PERCENTAGE
						 FROM SLS_GST_TAXINFO_CALC  A (NOLOCK)
						 JOIN GST_STATE_DET B (NOLOCK) ON B.gst_STATE_CODE=@CCURSTATE_CODE AND A.MEMO_DT BETWEEN B.FM_DT AND B.TO_DT
						 WHERE A.SP_ID=LTRIM(RTRIM((@NSPID)))
						 AND @CCURSTATE_CODE=@CPARTYSTATE_CODE
					 END
			
					SET @CSTEP=88
		 			EXEC SP_CHKXNSAVELOG @CDEBUGXNTYPE,@cStep,0,@NSPID,1
		 			
		 			
		 			PRINT '5.UPDATE TAXABLE VALUE depend upon ARTICLE_PACK_SIZE '
		 			
		 		 UPDATE TMP SET mrp =TMP.MRP  / SN_ARTICLE_PACK_SIZE 
		 		 FROM SLS_GST_TAXINFO_CALC TMP (NOLOCK)
				 JOIN sku_names  B  (NOLOCK) ON TMP.PRODUCT_CODE =B.PRODUCT_CODE 
                 WHERE ISNULL(SN_ARTICLE_PACK_SIZE,0)>0 and TMP.SP_ID=LTRIM(RTRIM((@NSPID))) 

				  

                    PRINT '5.UPDATE TAXABLE VALUE '
				
					
                   UPDATE TMP SET  NET_VALUE_WOTAX= ROUND(MRP-(MRP*(CASE WHEN TAX_METHOD=2 THEN ( (HM.RATE_CUTOFF_TAX_PERCENTAGE+ISNULL(tmp.CESS_PERCENTAGE,0)+ISNULL(HM.GST_CESS_PERCENTAGE,0))/  
												   (100 + HM.RATE_CUTOFF_TAX_PERCENTAGE+ISNULL(tmp.CESS_PERCENTAGE,0)+ISNULL(HM.GST_CESS_PERCENTAGE,0))) ELSE 0 END)),2)
				   FROM SLS_GST_TAXINFO_CALC TMP (NOLOCK)
				   JOIN sls_gst_xns_hsn HM (NOLOCK) ON hm.sp_id=tmp.sp_id and HM.HSN_CODE=TMP.HSN_CODE and tmp.row_id =hm.row_id 
				   WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID))) 

				
			
				     
				   PRINT '6.UPDATE GST PERCENTAGE '
                   SET @CSTEP=90

				   EXEC SP_CHKXNSAVELOG @CDEBUGXNTYPE,@cStep,0,@NSPID,1


                   UPDATE TMP SET GST_PERCENTAGE=(CASE WHEN @BEXPORTINVOICE=1 THEN ISNULL(@NEXPORTGSTPCT,0)
				   WHEN ABS(TMP.QUANTITY)=0 THEN 0
                   ELSE ISNULL(CASE WHEN HM.RATE_CUTOFF<ABS(TMP.NET_VALUE_WOTAX)/ABS(TMP.QUANTITY) 
                   THEN HM.TAX_PERCENTAGE ELSE RATE_CUTOFF_TAX_PERCENTAGE END ,0) END)
				    ,

				   Gst_Cess_Percentage=(CASE WHEN  ABS(TMP.QUANTITY)=0 THEN 0
                   ELSE ISNULL(CASE WHEN HM.RATE_CUTOFF<ABS(TMP.NET_VALUE_WOTAX)/ABS(TMP.QUANTITY) 
                   THEN HM.Gst_Cess_Percentage ELSE hm.Rate_CutOff_Gst_Cess_Percentage END ,0) END),

				   IGST_AMOUNT=0,
				   SGST_AMOUNT=0
				   FROM SLS_GST_TAXINFO_CALC TMP (NOLOCK)
				   JOIN sls_gst_xns_hsn HM (NOLOCK) ON hm.sp_id=tmp.sp_id and HM.HSN_CODE=TMP.HSN_CODE  and tmp.row_id =hm.row_id 
				   WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID)))

				      SET @CSTEP=92

	               
             SET @CSTEP=94
	  	              
	             EXEC SP_CHKXNSAVELOG @CDEBUGXNTYPE,@cStep,0,@NSPID,1

                    PRINT '8.IN SALE RETURN PICK LAST SALE '
					IF  @CXN_TYPE ='SLS'
					BEGIN

					    --IN CASE OF SALE RETURN CHECK CONFIG & PICK GST FROM SALE
					    DECLARE @CPICKLASTSLSTAX VARCHAR(10)
					    SELECT TOP 1 @CPICKLASTSLSTAX=LTRIM(RTRIM(VALUE)) FROM CONFIG 
						WHERE CONFIG_OPTION='PICK_LAST_SLS_TAX'
                        
                     

                        IF ISNULL(@CPICKLASTSLSTAX,'')='1'	
                        BEGIN
						SET @CSTEP=94
							--IN RETAIL SALE 1 FOR INCLUSIVE AND ANOTHER TRANSACTION 1 FOR EXCLUSIVE PICK  FROM CASH MEMO
							UPDATE A SET HSN_CODE=ISNULL(SLS.HSN_CODE,B.HSN_CODE) ,
							TAX_METHOD = (CASE WHEN ISNULL(C.MRP_EXCHANGE_BILL,0)=1 THEN 2 
							ELSE ISNULL(SLS.TAX_METHOD,A.TAX_METHOD) END) ,
							GST_PERCENTAGE =ISNULL(SLS.GST_PERCENTAGE,B.GST_PERCENTAGE) ,
							Gst_Cess_Percentage=ISNULL(SLS.Gst_Cess_Percentage,B.Gst_Cess_Percentage)
							FROM   SLS_GST_TAXINFO_CALC A (NOLOCK)
							JOIN SLS_CMD01106_UPLOAD B (NOLOCK) ON A.ROW_ID =B.ROW_ID AND A.SP_ID =B.SP_ID 
							JOIN SLS_CMM01106_UPLOAD C (NOLOCK) ON C.SP_ID=B.SP_ID
							JOIN
							( 
								SELECT A.CM_NO,A.CM_DT ,B.PRODUCT_CODE,  
								B.GST_PERCENTAGE ,(CASE WHEN B.TAX_METHOD=1 THEN 2 ELSE 1 END) AS TAX_METHOD,
								B.HSN_CODE ,b.Gst_Cess_Percentage
								FROM CMM01106 A (NOLOCK)
								JOIN CMD01106 B (NOLOCK) ON A.CM_ID =B.CM_ID 
								JOIN SLS_GST_TAXINFO_CALC C (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE
								WHERE A.CANCELLED =0 AND B.QUANTITY >0
								AND CM_DT >='2017-07-01'
							) SLS ON SLS.CM_NO =B.REF_SLS_MEMO_NO AND SLS.CM_DT =B.REF_SLS_MEMO_DT AND SLS.PRODUCT_CODE =A.PRODUCT_CODE 
							WHERE NET_VALUE <0 
							AND  A.SP_ID=LTRIM(RTRIM((@NSPID))) 
					
						END
						
						
						UPDATE A SET NET_VALUE_WOTAX= ROUND(A.MRP-(A.MRP*(CASE WHEN A.TAX_METHOD=1 THEN ( A.GST_PERCENTAGE+ISNULL(a.CESS_PERCENTAGE,0) /
						                                       (100 + A.GST_PERCENTAGE+ISNULL(a.CESS_PERCENTAGE,0) )) ELSE 0 END)),2) 
						FROM   SLS_GST_TAXINFO_CALC A (NOLOCK)
						JOIN SLS_CMD01106_UPLOAD B (NOLOCK) ON A.ROW_ID =B.ROW_ID AND A.SP_ID =B.SP_ID 
						WHERE  A.NET_VALUE <0  
						AND  A.SP_ID=LTRIM(RTRIM((@NSPID))) 
						

					END
					-- END OF SALE RETURN
					
					SET @CSTEP=98
		           EXEC SP_CHKXNSAVELOG @CDEBUGXNTYPE,@cStep,0,@NSPID,1

					

	                PRINT 'UPDATE STOCK TRANSFER GST PERCENTAGE WITH 0 ' 
                    IF ISNULL(@CPARTY_GSTN_NO,'')=ISNULL(@CLOC_GSTN_NO,'') 
                     BEGIN
                         UPDATE TMP
                         SET GST_PERCENTAGE=CASE WHEN @CXN_TYPE ='WSR' AND @bExportInvoice=1 THEN GST_PERCENTAGE ELSE   0 END ,
						      Gst_Cess_Percentage=0,
                         NET_VALUE_WOTAX=NET_VALUE      
                         FROM SLS_GST_TAXINFO_CALC TMP (NOLOCK)
                         WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID)))
                     END
                   

			  SET @CSTEP=106	
            EXEC SP_CHKXNSAVELOG @CDEBUGXNTYPE,@cStep,0,@NSPID,1
        
            if exists (select top 1 'u' from location with (nolock) where dept_id = @CCURDEPT_ID  and isnull(sis_loc,0)=0)
			begin
				  SELECT @CHASNCODEERROR=ROW_ID 
				  FROM SLS_GST_TAXINFO_CALC a
				  WHERE SP_ID=LTRIM(RTRIM((@NSPID))) 
				  AND ISNULL(HSN_CODE,'') IN('','0000000000')
				   
				 IF ISNULL(@CHASNCODEERROR,'')<>''
	             BEGIN
				     
	                  SET @CERRMSG='HSN CODE CAN NOT BE BLANK:-'

					  SELECT HSN_CODE,PRODUCT_CODE,HSN_CODE,@CERRMSG AS ERRMSG
					  FROM SLS_GST_TAXINFO_CALC 
					  WHERE SP_ID=LTRIM(RTRIM((@NSPID))) 
					  AND ISNULL(HSN_CODE,'') IN('','0000000000')
	                 RETURN
	             END

				  SELECT @CHASNCODEERROR=A.HSN_CODE 
				  FROM SLS_GST_TAXINFO_CALC  A (nolock)
				  LEFT JOIN HSN_MST B (NOLOCK) ON A.HSN_CODE =B.HSN_CODE 
				  WHERE a.SP_ID=LTRIM(RTRIM((@NSPID))) 
				  AND B.HSN_CODE IS NULL
				  
				 IF ISNULL(@CHASNCODEERROR,'')<>''
	             BEGIN
	                 SET @CERRMSG=@CHASNCODEERROR+',HSN CODE NOT FOUND IN HSN MASTER'
	                 RETURN
	             END
             
			 end

				   
	       END  --END OF REGISTERED DELTER
		   ELSE
		   IF  isnull(@bExportInvoice,0)<>1
		   BEGIN
		        --UNREGINSTERED CUSTOMER NOT ALLOW RO CALCULATE TAX PERCENTAGE
		       SET @CSTEP=111
		        UPDATE TMP SET HSN_CODE=CASE WHEN ISNULL(HSN_CODE,'')='' THEN '0000000000' ELSE HSN_CODE END,
				GST_PERCENTAGE=0 ,
				Gst_Cess_Percentage=0,
				IGST_AMOUNT=0,
				CGST_AMOUNT=0,
			    SGST_AMOUNT=0,
				NET_VALUE_WOTAX=NET_VALUE 
				FROM SLS_GST_TAXINFO_CALC TMP
				WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID))) 
				
		   END	 
			
			set @cStep=111.4
		    PRINT 'CALCULATE TAXABLE & WITH TAXABLE VALUE' 
	       EXEC SP_CHKXNSAVELOG @CDEBUGXNTYPE,@cStep,0,@NSPID,1		
				  
				    
			UPDATE TMP SET XN_VALUE_WITHOUT_GST =ROUND(NET_VALUE-(NET_VALUE*(CASE WHEN TAX_METHOD=2 THEN ((ISNULL(TMP.GST_PERCENTAGE,0)+ISNULL(TMP.CESS_PERCENTAGE,0)+ISNULL(TMP.Gst_Cess_Percentage,0))/  
			(100 + ISNULL(TMP.GST_PERCENTAGE,0)+ISNULL(TMP.CESS_PERCENTAGE,0)+ISNULL(TMP.Gst_Cess_Percentage,0))) ELSE 0 END)),2)
			FROM SLS_GST_TAXINFO_CALC TMP
			WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID)))

		
			set @cStep=111.5
	         EXEC SP_CHKXNSAVELOG @CDEBUGXNTYPE,@cStep,0,@NSPID,1
			
			 IF ISNULL(@BCESS_APPLICABLE,0)=1
			 BEGIN
		     SET @CSTEP=113
				 UPDATE A  SET CESS_AMOUNT= xn_value_without_gst *isnull(A.CESS_PERCENTAGE,0)/100
				 FROM SLS_GST_TAXINFO_CALC  A (NOLOCK)
				 WHERE A.SP_ID=LTRIM(RTRIM((@NSPID)))
				
			 END
		 
			 UPDATE A  SET Gst_Cess_Amount= ROUND(xn_value_without_gst *isnull(A.gst_CESS_PERCENTAGE,0)/100,2)
			 FROM SLS_GST_TAXINFO_CALC  A (NOLOCK)
			 WHERE A.SP_ID=LTRIM(RTRIM((@NSPID)))
			  
            SET @CSTEP=115  
		 EXEC SP_CHKXNSAVELOG @CDEBUGXNTYPE,@cStep,0,@NSPID,1

		  UPDATE TMP SET XN_VALUE_WITH_GST = ROUND((NET_VALUE- (CASE WHEN TAX_METHOD=2 THEN  ISNULL(CESS_AMOUNT,0)+ISNULL(GST_CESS_AMOUNT,0) ELSE 0 END) )+
		  ((NET_VALUE-(CASE WHEN TAX_METHOD=2 THEN  ISNULL(CESS_AMOUNT,0)+ISNULL(GST_CESS_AMOUNT,0) ELSE 0 END))*(CASE WHEN TAX_METHOD=2 THEN 0   ELSE ((ISNULL(TMP.GST_PERCENTAGE,0))/100) END)) ,2)     
          FROM SLS_GST_TAXINFO_CALC TMP (NOLOCK)  
          WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID)))   
       


		    SET @CSTEP=116
            EXEC SP_CHKXNSAVELOG @CDEBUGXNTYPE,@cStep,0,@NSPID,1

             UPDATE TMP SET IGST_AMOUNT =ROUND(CASE WHEN @CCURSTATE_CODE<>@CPARTYSTATE_CODE THEN 
             (NET_VALUE-(CASE WHEN TAX_METHOD=2 THEN isnull(Gst_Cess_Amount,0) ELSE 0 END))
			*(CASE WHEN TAX_METHOD=2 THEN (TMP.GST_PERCENTAGE/  
	        (100 + TMP.GST_PERCENTAGE)) ELSE (TMP.GST_PERCENTAGE/100) END)
			ELSE 0 END,2) ,
			
			CGST_AMOUNT=ROUND((CASE WHEN @CCURSTATE_CODE<>@CPARTYSTATE_CODE THEN 0
			ELSE (NET_VALUE-(CASE WHEN TAX_METHOD=2 THEN ISNULL(CESS_AMOUNT,0)+isnull(Gst_Cess_Amount,0) ELSE 0 END))
			*(CASE WHEN TAX_METHOD=2 THEN (TMP.GST_PERCENTAGE/  
			(100 + TMP.GST_PERCENTAGE)) ELSE (TMP.GST_PERCENTAGE/100) END) 
			 END)/2,2),
			 
			SGST_AMOUNT=ROUND((CASE WHEN @CCURSTATE_CODE<>@CPARTYSTATE_CODE THEN 0
			ELSE (NET_VALUE-(CASE WHEN TAX_METHOD=2 THEN ISNULL(CESS_AMOUNT,0)+isnull(Gst_Cess_Amount,0) ELSE 0 END))
			*(CASE WHEN TAX_METHOD=2 THEN (TMP.GST_PERCENTAGE/  
			(100 + TMP.GST_PERCENTAGE)) ELSE (TMP.GST_PERCENTAGE/100) END) 
			END)/2,2)
			FROM SLS_GST_TAXINFO_CALC TMP (NOLOCK)
			WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID)))


		SET @CSTEP=118

		EXEC SP_CHKXNSAVELOG @CDEBUGXNTYPE,@cStep,0,@NSPID,1
	    IF EXISTS (SELECT TOP 1 'U'	FROM SLS_GST_TAXINFO_CALC TMP (NOLOCK)
		 WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID))) AND ISNULL(CGST_AMOUNT,0)<>ISNULL(SGST_AMOUNT,0))
	     BEGIN
	        SET @CERRMSG='Diff In cgst & sgst Amount :-'
	        RETURN
	     
	     END
	   	

	         
	        SET @CSTEP=122
	         --CALCULATE GST OVER HEAD 
            IF EXISTS (SELECT TOP 1 'U' FROM SLS_GST_TAXINFO_CALC_OH (NOLOCK) WHERE SP_ID=LTRIM(RTRIM((@NSPID))))
            BEGIN
                
                DECLARE @NGSTCAL INT
                SET @NGSTCAL=@BREGISTERED_DELEER
                   
                PRINT 'OVER HEAD GST CALCULATED-started' 
                EXEC SP3S_GST_TAX_CAL_OH_SLS @CXN_TYPE,@NSPID,@NGSTCAL,@CLOC_GSTN_NO,@CPARTY_GSTN_NO,@CCURSTATE_CODE,@CPARTYSTATE_CODE,@CERRMSG OUTPUT
                 PRINT 'OVER HEAD GST CALCULATED-finished' 
         
                 --END OF CALCULATING OVER HEAD 
	        END

	      EXEC SP_CHKXNSAVELOG @CDEBUGXNTYPE,@cStep,0,@NSPID,1
          RETURN
             
       END
     
	   SET @CSTEP=190		
	   DELETE FROM sls_gst_xns_hsn WITH (ROWLOCK) WHERE sp_id=@nSpId	 
  END TRY  
  BEGIN CATCH
  print 'enter catch of sp3s_gst_tax_cal'
   SELECT @CERRMSG='ERROR MESSAGE IN PROCEDURE SP3S_GST_TAX_CAL_SLS STEP#'+@CSTEP+' '+CAST(ERROR_MESSAGE() AS VARCHAR(1000))
   PRINT 'ENTER CATCH IN SP3S_GST_TAX_CAL line#'+error_message()
  END CATCH  
  
END