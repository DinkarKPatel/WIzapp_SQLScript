CREATE PROCEDURE SAVETRAN_PUR    --(LocId 3 digit change by Sanjay:07-11-2024)
(    
 @NUPDATEMODE  NUMERIC(10,0),    
 @NSPID    VARCHAR(40),    
 @CMEMONOPREFIX  VARCHAR(50),     
 @CFINYEAR   VARCHAR(10),    
 @LGENERATEBARCODES BIT=0,    
 @CBARCODEPREFIX  VARCHAR(20)='',    
 @NBOXNO    INT=0,   
 @CMACHINENAME  VARCHAR(100)='',    
 @CWINDOWUSERNAME VARCHAR(100)='',    
 @CWIZAPPUSERCODE VARCHAR(10)='0000000',    
 @CMEMOID   VARCHAR(40)='',    
 @CWSLINVID   VARCHAR(40)='',    
 @CPRDDEPARTMENTID CHAR(7)='',    
 @CPRODUCTCODE  VARCHAR(50)='',    
 @BTHROUGHIMPORT  BIT=0,    
 @DRECEIPTDT   DATETIME = '',    
 @NMODE    NUMERIC(1,0)=1,  
 @CENTRYREFNO VARCHAR(100)='',  
 @SP3S_UPDATE_SAPINVOICE BIT=0,  
 @BCALLEDFROMBOXENTRY BIT=0,  
 @EDIT_CLICKED     BIT=0,  
 @BCALLEDFROMEKAYA BIT=0,  
 @NRUNNING_SPID INT=0,  
 @NPARTY_AMOUNT_FORTCS NUMERIC(18,2)=0  
)    
WITH RECOMPILE  
AS    
BEGIN    
 SET @EDIT_CLICKED=ISNULL(@EDIT_CLICKED,0)  
 -- @NUPDATEMODE: 1- NEW PUR ADDED,     
 --     2- NEW BOX ADDED TO EXISTING PUR,     
 --     3- CURRENT PUR CANCELLED,     
 --     4- EXISTING PUR EDITED    
   
--drop table TMPMASTERSENC    
  if isnull(@NRUNNING_SPID,0)=0  
  set @NRUNNING_SPID=@@SPID   
  
 -- drop table TMPMASTERSENC  
 -- if @BTHROUGHIMPORT=1  
 --select * into TMPMASTERSENC from #TMPMASTERSENC  
  
   
 DECLARE @CTEMPDBNAME   VARCHAR(100), @lUpdateonly bit,   
   @CMASTERTABLENAME  VARCHAR(100),    
   @CDETAILTABLENAME  VARCHAR(100),    
   @CTEMPMASTERTABLENAME VARCHAR(100),    
   @CTEMPDETAILTABLENAME VARCHAR(100),    
   @CTEMPMASTERTABLE  VARCHAR(100),    
   @CTEMPDETAILTABLE  VARCHAR(100),    
   @CTEMPPARCELADJTABLENAME VARCHAR(100),    
   @CERRORMSG    VARCHAR(MAX),    
   @LDONOTUPDATESTOCK  BIT,    
   @CKEYFIELD1    VARCHAR(50),    
   @CKEYFIELDVAL1   VARCHAR(50),    
   @CMEMONO    VARCHAR(20),    
   @NMEMONOLEN    NUMERIC(20,0),    
   @CMEMONOVAL    VARCHAR(50),    
   @CMEMODEPTID   VARCHAR(4),    
   @CLOCATIONID   VARCHAR(4),    
   @CHODEPTID    VARCHAR(4),    
   @CCMD     NVARCHAR(4000),    
   @CCMDOUTPUT    NVARCHAR(4000),    
   @NSAVETRANLOOP   BIT,    
   @bReUpdateAllPid BIT,
   @cStep   varchar(10),  
   @NSUBTOTAL NUMERIC(20,2),  @CGSTCUTOFFDATE VARCHAR(10),  
   @BNEGSTOCKFOUND BIT,    
   @CWSLINVOICEID VARCHAR(22), 
   @BPURTHROUGHIMPORT BIT,@CMSG VARCHAR(200),@NTAX NUMERIC(20,2),    
   @CARTICLENO VARCHAR(50),@INVMODE INT,@BINUSER VARCHAR(50),@DSTARTTIME DATETIME,  
   @NCASHDISCOUNTAMOUNT NUMERIC(18,4),@CCURLOCID VARCHAR(5),@BALLOWPURATHO BIT,@BOTHERLOCPURCHASE BIT,  
   @BMANUALPRODUCT_CODE BIT,@BDUPMANUALPRODUCT_CODE BIT, @CREATE_MANUAL_BARCODE BIT,@NPIM_MODE NUMERIC(1,0),  
   @CMEMOPREFIXPROC VARCHAR(25),@NXNITEMTYPE NUMERIC(1,0),@SHOWPOSWISEMRPINPURCHASE BIT,  
   @PURFORDEPTID CHAR(4),@xn_item_type INT,@CMEMODEPTIDNEW varchar(4),@CACCODE VARCHAR(15)='',@nBoxUpdatemode NUMERIC(1,0),  
   @cEnableFcXns VARCHAR(4),@cImportTable VARCHAR(200),@nMemoType NUMERIC(1,0),@cparcelmemo_id varchar(50),  
   @CITEMTYPEWHEREClause varchar(100)  
         
   SELECT TOP 1 @cEnableFcXns=value FROM config (NOLOCK) WHERE config_option='ENABLE_MULTI_CURRENCY'  
     
   SET @DSTARTTIME=GETDATE()  
   set @nBoxUpdatemode=0 
   SET @bReUpdateAllPid=0
BEGIN TRY    
    
   --FOR SKU_NAMES  
   DECLARE @TAB VARCHAR(1000),@MYSQL VARCHAR(MAX)  
   SET @TAB='TEMPDB..##GEN_BARCODE_'+DB_NAME()  
   SET @MYSQL='IF OBJECT_ID('''+@TAB+''',''U'') IS NULL   
   SELECT TOP 0 PRODUCT_CODE,GETDATE() INSERTED_ON INTO '+REPLACE(@TAB,'##TEMPDB..','')+' FROM SKU (NOLOCK);'    
   EXEC(@MYSQL)  
  
 IF  @NUPDATEMODE in (15,3) AND ISNULL(@CMEMOID,'')<>''  
    BEGIN  
     SET @CKEYFIELDVAL1=@CMEMOID  
     IF  @NUPDATEMODE=15  
       GOTO  LBLINSERTUPLOADMIRRORDOC   
 END  
    
 IF @NUPDATEMODE IN (1,2)  
 BEGIN  
  -- GETTING DEPT_ID FROM TEMP MASTER TABLE  
  SET @cStep = 8.5 -- SETTTING UP ENVIRONMENT  
  EXEC SP_CHKXNSAVELOG 'PUR',@cStep,1,@nSpId,'',1    
   
     -- GETTING DEPT_ID FROM TEMP MASTER TABLE    
     SELECT @CMEMODEPTID = DEPT_ID, @CKEYFIELDVAL1 = MRR_ID ,@cMemoId=mrr_id,@NPIM_MODE=PIM_MODE  
     ,@xn_item_type=xn_item_type FROM pur_pim01106_upload (nolock) WHERE SP_ID=LTRIM(RTRIM((@NSPID)))  
      
      
    IF @nBoxno>0   
       SET @nBoxUpdatemode=1  
      
    DECLARE @cDonotAllowPiWoTerms VARCHAR(4)  
  SELECT @cDonotAllowPiWoTerms=value FROM config (NOLOCK)   
  WHERE config_option='ENFORCE_SELECTION_OF_TERMS_IN_PO/PI'  
  
  SET @cStep = 8.8 -- SETTTING UP ENVIRONMENT  
  EXEC SP_CHKXNSAVELOG 'PUR',@cStep,1,@nSpId,'',1    
  
  IF ISNULL(@cDonotAllowPiWoTerms,'')='1'  
  BEGIN  
   IF EXISTS (SELECT TOP 1 mrr_id FROM PUR_PIM01106_UPLOAD (NOLOCK) WHERE sp_id=@nSpId AND  
      (ISNULL(terms,'')='') and inv_mode=1 and isnull(xn_item_type,0)=1)  
   BEGIN  
    SET @CERRORMSG='Blank Terms not allowed In Purchase Invoice....'  
    GOTO END_PROC  
   END    
  END  
     
  SET @cStep = 8.9 -- SETTTING UP ENVIRONMENT  
  EXEC SP_CHKXNSAVELOG 'PUR',@cStep,1,@nSpId,'',1    
    
    IF @CMEMODEPTID IS NULL  
  BEGIN  
   SET @CERRORMSG = 'STEP- ' + LTRIM(@cStep) + ' ERROR ACCESSING THE RECORD TO BE SAVED... INCORRECT PARAMETER'  
   GOTO END_PROC      
  END  
 END  
  
    SET @cStep = 9.1 -- SETTTING UP ENVIRONMENT  
 EXEC SP_CHKXNSAVELOG 'PUR',@cStep,1,@nSpId,'',1    
   
   IF @EDIT_CLICKED=1 AND EXISTS(SELECT TOP 1 * FROM PID01106 (NOLOCK) WHERE MRR_ID=@CMEMOID AND ISNULL(PRODUCT_CODE,'')='')    
      SET @EDIT_CLICKED=0  
        
   DECLARE @COL VARCHAR(MAX)  
   IF @EDIT_CLICKED=1  
   BEGIN  
     SET @cStep = 9.4 -- SETTTING UP ENVIRONMENT  
  EXEC SP_CHKXNSAVELOG 'PUR',@cStep,1,@nSpId,'',1    
  
  SET @COL='IF OBJECT_ID(''TEMPDB..##PIM_'+@NSPID+'_'+@CMEMOID+''',''U'') IS NOT NULL'+CHAR(13)+' DROP TABLE [##PIM_'+@NSPID+'_'+@CMEMOID+'];'+CHAR(13)+'SELECT MRR_ID OLD_MRR_ID, MRR_ID NEW_MRR_ID,'  
  SELECT @COL=COALESCE(@COL,'')+FIELD_NAME+' OLD_'+FIELD_NAME+', '+FIELD_NAME+' NEW_'+FIELD_NAME+',' FROM XN_AUDIT_TRIAL_MST (NOLOCK) WHERE TABLE_NAME='PIM01106' AND TRIG='UPDATE' ORDER BY ORDER_ID  
  SET @COL=LEFT(@COL,LEN(@COL)-1)+CHAR(13)+'INTO [##PIM_'+@NSPID+'_'+@CMEMOID+']'+CHAR(13)+'FROM PIM01106 (NOLOCK) WHERE MRR_ID='''+@CMEMOID+''';'  
  --PRINT @COL  
  EXEC(@COL)  
  SET @COL='IF OBJECT_ID(''TEMPDB..##PID_'+@NSPID+'_'+@CMEMOID+''',''U'') IS NOT NULL'+CHAR(13)+' DROP TABLE [##PID_'+@NSPID +'_'+@CMEMOID+'];'+CHAR(13)+'SELECT MRR_ID OLD_MRR_ID, MRR_ID NEW_MRR_ID,'  
  SELECT @COL=COALESCE(@COL,'')+FIELD_NAME+' OLD_'+FIELD_NAME+', '+FIELD_NAME+' NEW_'+FIELD_NAME+',' FROM XN_AUDIT_TRIAL_MST (NOLOCK) WHERE TABLE_NAME='PID01106' AND TRIG='UPDATE' ORDER BY ORDER_ID  
  SET @COL=LEFT(@COL,LEN(@COL)-1)+CHAR(13)+'INTO [##PID_'+@NSPID +'_'+@CMEMOID+']'+CHAR(13)+'FROM PID01106 WITH (NOLOCK,INDEX=IND_PID01106_MRRID) WHERE MRR_ID='''+@CMEMOID+''';'  
  --PRINT @COL  
  EXEC(@COL)  
 END  
     
    SET @cStep = 9.6 -- SETTTING UP ENVIRONMENT  
 EXEC SP_CHKXNSAVELOG 'PUR',@cStep,1,@nSpId,'',1    
  
 SELECT DEPT_ID,BIN_ID,PRODUCT_CODE,quantity_in_stock AS XN_QTY  
 ,CONVERT(BIT,0) AS new_entry,bo_order_id  
 INTO #BARCODE_NETQTY FROM PMT01106 (NOLOCK) WHERE 1=2  
 /*STOCK UPDATE CHANGES*/  
  
    SET @cStep = 9.62 -- SETTTING UP ENVIRONMENT  
 EXEC SP_CHKXNSAVELOG 'PUR',@cStep,1,@nSpId,'',1    
  
   
  
  IF @SP3S_UPDATE_SAPINVOICE <> 1    
  BEGIN TRANSACTION    
  
  SELECT BOX_NO INTO #TMPBOX   
  FROM PID01106 WITH (NOLOCK) WHERE 1=2  
  
  select article_code,product_code , row_id ,quantity ,para1_code ,para2_code ,para3_code,po_row_id  
        Into #TMPPI_PROCESS
  from pid01106 WITH (NOLOCK) WHERE 1=2  
      
  
 IF @NUPDATEMODE<>1  
 BEGIN  
  IF @NUPDATEMODE=2  
   SELECT TOP 1 @cMemoId=mrr_id FROM  PUR_pim01106_UPLOAD (NOLOCK) WHERE sp_id=@nSpId  
    
  --Box has to be Removed Due To unknown reason so Validate multiple Box removing  
   INSERT INTO #TMPBOX(BOX_NO)  
   SELECT BOX_NO FROM PID01106 with (nolock) where mrr_id=@cMemoId  
   group by BOX_NO  
 END  
  
 SET @cStep = 10.2 -- SETTTING UP ENVIRONMENT  
 EXEC SP_CHKXNSAVELOG 'PUR',@cStep,1,@nSpId,'',1    
  
  
    
  IF @NUPDATEMODE=2 AND @nBoxUpdatemode>0
  BEGIN  
	   SET @cStep = 12.4   
	   DECLARE @cUploadTableName VARCHAR(200),@CFILTERCONDITION varchar(300),@CINSSPID VARCHAR(50)  

		IF EXISTS (SELECT TOP 1 a.inv_id FROM PUR_PIm01106_upload a (NOLOCK) JOIN PIm01106 b (NOLOCK) ON a.MRR_id=b.MRR_ID  
			WHERE a.sp_id=@nSpId AND (a.discount_percentage<>0 or b.DISCOUNT_PERCENTAGE<>0 OR a.bill_level_tax_method<>b.bill_level_tax_method))   
			SET @bReUpdateAllPid=1
	   
		SELECT @cUploadTableName='pur_pid01106_upload'  
		SET @CFILTERCONDITION=' b.mrr_id='''+@cMemoId+''''    
		set @CINSSPID=LEFT(@nSpId,38)+'ZZZ'  
	
		print 'enter extra pid entry'  
		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB='',@CSOURCETABLE='pid01106',@CDESTDB=''  
				,@CDESTTABLE=@cUploadTableName,@CKEYFIELD1='mrr_id',@CKEYFIELD2='',@CKEYFIELD3=''  
				,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0  
				,@BALWAYSUPDATE=0,@BUPDATEXNS=1,@CINSSPID=@CINSSPID,@CINSSPIDCol=''  
				,@CSEARCHTABLE='pid01106',@cXnType='PUR'  
		print 'enter extra pid entry inserted'  
  END    
      
  SET @BPURTHROUGHIMPORT=0    
      
  SET @cStep = 15   
     
  EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
    
  --SET @CTEMPDETAILTABLENAME = 'TEMP_PID01106_'+LTRIM(RTRIM(STR(@NSPID)))         
  
  SET @CTEMPDETAILTABLENAME = 'PUR_PID01106_UPLOAD'       
  SET @CTEMPPARCELADJTABLENAME='PUR_PARCEL_DET_UPLOAD'   
    
   SET @CTEMPDBNAME = ''  
    
  SET @BOTHERLOCPURCHASE=0  
      
  
  IF @NUPDATEMODE IN (1,2)
	SELECT @CLOCATIONID =LOCATION_CODE  FROM PUR_PIM01106_UPLOAD (NOLOCK) WHERE sp_id=@NSPID
  ELSE
    SELECT @CLOCATIONID =LOCATION_CODE  FROM pim01106 (NOLOCK) WHERE mrr_id=@CMEMOID
  
  set @CCURLOCID=@CLOCATIONID  
  
  
  SELECT @CHODEPTID  = [VALUE] FROM CONFIG (NOLOCK) WHERE  CONFIG_OPTION='HO_LOCATION_ID'    
  
  IF ISNULL(@CLOCATIONID,'')=''  
  BEGIN  
  SET @CERRORMSG ='1. LOCATION ID CAN NOT BE BLANK  '    
  GOTO END_PROC      
  END  
    
    SELECT TOP 1 @CREATE_MANUAL_BARCODE= VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='CREATE_MANUAL_BARCODE'   
    SET @CREATE_MANUAL_BARCODE=ISNULL(@CREATE_MANUAL_BARCODE,0)   
      
     SELECT TOP 1 @SHOWPOSWISEMRPINPURCHASE=VALUE FROM CONFIG WHERE CONFIG_OPTION='SHOWPOSWISEMRPINPURCHASE'  
    SET  @SHOWPOSWISEMRPINPURCHASE=ISNULL(@SHOWPOSWISEMRPINPURCHASE,0)  
        
  
  SET @CMASTERTABLENAME = 'PIM01106'    
  SET @CDETAILTABLENAME = 'PID01106'    
    
  --SET @CTEMPMASTERTABLENAME = 'TEMP_PIM01106_'+LTRIM(RTRIM(STR(@NSPID)))    
    
  SET @CTEMPMASTERTABLENAME='PUR_PIM01106_UPLOAD'  
  SET @CTEMPMASTERTABLE = @CTEMPDBNAME + @CTEMPMASTERTABLENAME    
  SET @CTEMPDETAILTABLE = @CTEMPDBNAME + @CTEMPDETAILTABLENAME    
      
  SET @CERRORMSG   = ''    
  
  SET @LDONOTUPDATESTOCK = 0    
  SET @CKEYFIELD1   = 'MRR_ID'    
  SET @CMEMONO   = 'MRR_NO'    
   
   
  --IF PURCHASE AGAINST GRN STOCK DOES NOT EFFECT  
    
  IF @SHOWPOSWISEMRPINPURCHASE=1 AND @NUPDATEMODE IN (1,2)  
  BEGIN  
        SET @CCMD='SELECT @PURFORDEPTID= ISNULL(PUR_FOR_DEPT_ID,'''') FROM '+@CTEMPMASTERTABLE +'  (NOLOCK) WHERE SP_ID='''+LTRIM(RTRIM((@NSPID)))+''' '   
        EXEC SP_EXECUTESQL @CCMD,N'@PURFORDEPTID varCHAR(4) OUTPUT',@PURFORDEPTID OUTPUT  
          
   
        IF ISNULL(@PURFORDEPTID,'')=''  
        BEGIN  
            SET @CERRORMSG='PURCHASE FOR LOCATION CAN''T BE BLANK'  
           GOTO END_PROC  
        END  
          
  END  
  
   
  IF @NUPDATEMODE IN (1,2)  
  BEGIN  
   SET @cStep=20  
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
  
     
   DECLARE @CUSERNAME VARCHAR(100)  
   IF @NUPDATEMODE =2  
   BEGIN  
  
    SELECT ROW_ID INTO #TMPPI FROM PID01106 (NOLOCK) WHERE 1=2  
     
    
    IF  @NUPDATEMODE=2  
    BEGIN  
     INSERT INTO #TMPPI(ROW_ID)  
     SELECT ROW_ID FROM PID01106 (NOLOCK) WHERE MRR_ID=@CKEYFIELDVAL1 AND ISNULL(PRODUCT_CODE,'')<>''  
    END  
     
      UPDATE  a SET LAST_UPDATE=GETDATE(),EDIT_INFO ='USER NAME : ' + @CUSERNAME + '; COMPUTER NAME : ' + @CMACHINENAME + '; TIME : '+ CONVERT(VARCHAR(20),LAST_UPDATE,105)+' '+CONVERT(VARCHAR(20),LAST_UPDATE,108)  
	  from PUR_pim01106_UPLOAD a (nolock)  
	  WHERE SP_ID=@nSpId  
  
    SELECT @CUSERNAME=USERNAME FROM USERS (NOLOCK) WHERE USER_CODE=@CWIZAPPUSERCODE  
  
   END  
    
  IF EXISTS (SELECT TOP 1 'U' FROM PUR_PID01106_UPLOAD A (NOLOCK)  
   JOIN ARTICLE B (NOLOCK) ON B.ARTICLE_CODE=A.article_code   
   WHERE SP_ID=@nSpId   
   AND ISNULL(B.PERISHABLE,0)=1 AND ISNULL(A.expiry_dt,'')='')  
  BEGIN  
  DECLARE @cArtNoExpiry VARCHAR(50)  
  SELECT TOP 1 @cArtNoExpiry=B.article_no FROM PUR_PID01106_UPLOAD A (NOLOCK)  
  JOIN ARTICLE B (NOLOCK) ON B.ARTICLE_CODE=A.article_code   
  WHERE SP_ID=@nSpId   
  AND ISNULL(B.PERISHABLE,0)=1 AND ISNULL(A.expiry_dt,'')=''  
  SET @CERRORMSG='Article No : '+ISNULL(@cArtNoExpiry,'') + ' - EXPIRY DATE SHOULD NOT BE BLANK OF PERISHABLE ITEM'  
  GOTO END_PROC  
  END   
     
   IF EXISTS (SELECT TOP 1 'U'   
   FROM PUR_PID01106_UPLOAD A (NOLOCK)  
   JOIN PUR_PIM01106_UPLOAD A1 (NOLOCK) ON A1.SP_ID=A.SP_ID AND A1.MRR_ID=A.MRR_ID  
   JOIN ARTICLE B (NOLOCK) ON B.ARTICLE_CODE=A.article_code   
   WHERE A.SP_ID=@nSpId   
   AND ISNULL(B.PERISHABLE,0)=1 AND ISNULL(A.expiry_dt,'')<ISNULL(A1.MRR_DT,''))  
  BEGIN  
  DECLARE @cArtNoExpiry1 VARCHAR(50)  
  SELECT TOP 1 @cArtNoExpiry=B.article_no   
  FROM PUR_PID01106_UPLOAD A (NOLOCK)  
  JOIN PUR_PIM01106_UPLOAD A1 (NOLOCK) ON A1.SP_ID=A.SP_ID AND A1.MRR_ID=A.MRR_ID  
  JOIN ARTICLE B (NOLOCK) ON B.ARTICLE_CODE=A.article_code   
  WHERE A.SP_ID=@nSpId   
   AND ISNULL(B.PERISHABLE,0)=1 AND ISNULL(A.expiry_dt,'')<ISNULL(A1.MRR_DT,'')  
  SET @CERRORMSG='Article No : '+ISNULL(@cArtNoExpiry1,'') + ' - EXPIRY DATE SHOULD NOT BE SMALLER THAN PURCHASE DATE OF PERISHABLE ITEM'  
  GOTO END_PROC  
  END   
  
    IF EXISTS (SELECT TOP 1 'U'   
   FROM PUR_PID01106_UPLOAD A (NOLOCK)  
   JOIN PUR_PIM01106_UPLOAD A1 (NOLOCK) ON A1.SP_ID=A.SP_ID AND A1.MRR_ID=A.MRR_ID  
   JOIN sku B (NOLOCK) ON B.product_code=A.product_code   
   WHERE A.SP_ID=@nSpId   and a.product_code<>''
   AND ISNULL(B.barcode_coding_scheme,0)=1    
   AND A1.MEMO_TYPE<>(CASE WHEN ISNULL(B.ER_FLAG,0)=0 THEN 1 ELSE B.ER_FLAG END)  
   )  
  BEGIN  
  
   DECLARE @cbarcodeMEMO_TYPE VARCHAR(50),@nskuerflag numeric(1,0)  
  
   SELECT TOP 1 @cbarcodeMEMO_TYPE=a.product_code ,@NSKUERFLAG=B.ER_FLAG   
   FROM PUR_PID01106_UPLOAD A (NOLOCK)  
   JOIN PUR_PIM01106_UPLOAD A1 (NOLOCK) ON A1.SP_ID=A.SP_ID AND A1.MRR_ID=A.MRR_ID  
   JOIN sku B (NOLOCK) ON B.product_code=A.product_code   
   WHERE A.SP_ID=@nSpId   
   AND ISNULL(B.barcode_coding_scheme,0)=1    and a.product_code<>''
   AND A1.MEMO_TYPE<>(CASE WHEN ISNULL(B.ER_FLAG,0)=0 THEN 1 ELSE B.ER_FLAG END)  
  
   SET @CERRORMSG='ProductCode :'+ISNULL(@cbarcodeMEMO_TYPE,'') + ' - already Available in '+  
  (CASE WHEN ISNULL(@NSKUERFLAG,0) IN (0,1) then  'Regular' ELSE 'Estimate' END)  
  
  GOTO END_PROC  
  END   
  
  
  IF @CREATE_MANUAL_BARCODE=1  
     BEGIN  
         SET @cStep=21  
         EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
    SET @CCMD = 'IF EXISTS(SELECT TOP 1 * FROM '+@CTEMPDETAILTABLE+' (NOLOCK) WHERE SP_ID='''+LTRIM(RTRIM((@NSPID)))+''' AND ISNULL(PRODUCT_CODE,'''')='''' )  
                 SET @BMANUALPRODUCT_CODE=1  
                 ELSE   
                 SET @BMANUALPRODUCT_CODE=0'   
    EXEC SP_EXECUTESQL @CCMD, N'@BMANUALPRODUCT_CODE BIT OUTPUT',     
                          @BMANUALPRODUCT_CODE OUTPUT  
       
     IF ISNULL(@BMANUALPRODUCT_CODE,0)=1  
     BEGIN  
     SET @CERRORMSG='BARCODE SHOULD NOT BE EMPTY IN CASE OF MANUAL BARCODE GENERATION'  
     GOTO END_PROC  
    END   
      
    
   SET @cStep=23     
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
      SET @CCMD = 'IF EXISTS(SELECT PRODUCT_CODE,COUNT(*) FROM '+@CTEMPDETAILTABLE+' (nolock) WHERE SP_ID='''+LTRIM(RTRIM((@NSPID)))+'''  GROUP BY PRODUCT_CODE HAVING COUNT(*) >1)  
                 SET @BDUPMANUALPRODUCT_CODE=1  
                 ELSE   
                 SET @BDUPMANUALPRODUCT_CODE=0'              
      
     EXEC SP_EXECUTESQL @CCMD, N'@BDUPMANUALPRODUCT_CODE BIT OUTPUT',  
                                 @BDUPMANUALPRODUCT_CODE OUTPUT  
       
     IF ISNULL(@BDUPMANUALPRODUCT_CODE,0)=1  
     BEGIN  
     SET @CERRORMSG='DUPLICATE BARCODE CAN NOT SAVED IN CASE OF MANUAL BARCODE GENERATION  '  
     GOTO END_PROC  
    END   
     END   
     
     
    
   SET @cStep=25    
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
    
   IF @CMEMODEPTID<>@CLOCATIONID  
   BEGIN  
     SET @cStep=25.4    
     EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
   SELECT @BALLOWPURATHO=ISNULL(ALLOW_PURCHASE_AT_HO,0) FROM LOCATION (NOLOCK) WHERE DEPT_ID=@CMEMODEPTID  
  
   IF @CLOCATIONID=@CHODEPTID  
   BEGIN  
    SELECT @NXNITEMTYPE=XN_ITEM_TYPE FROM PUR_PIM01106_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID  
      
      
    IF @BALLOWPURATHO=1 OR @NXNITEMTYPE>1  
     SET @CMEMONOPREFIX=@CMEMODEPTID+SUBSTRING(@CMEMONOPREFIX,len(@cLocationId)+1,LEN(@CMEMONOPREFIX))  
    ELSE  
    BEGIN  
     SET @CERRORMSG='PURCHASE ON BEHALF OF THIS LOCATION IS NOT ALLOWED AT HO'  
     GOTO END_PROC  
    END   
      
    IF EXISTS(SELECT TOP 1 'U' FROM location (NOLOCK) WHERE DEPT_ID=@CMEMODEPTID AND server_loc=0)  
    SET @BOTHERLOCPURCHASE=1  
    ELSE  
    SET @BOTHERLOCPURCHASE=0  
      
      
   
   END   
     
   END  
  END  
  
    
    
     
  IF @NUPDATEMODE = 6    
   GOTO LBLUPDATERECEIPTDATE    
      
  --- CREATE NEW MASTERS & THEN REPLACE THEM IN THE PURCHASE DETAIL TABLE    
  --- IF PURCHASE DONE THROUGH IMPORT FILE         
  IF @BTHROUGHIMPORT=1   and @NUPDATEMODE<>3  
  BEGIN    
   SET @cStep = 30  
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
    

   SELECT TOP 1 @CACCODE=ISNULL(AC_CODE,''),@nMemoType=memo_type  FROM PUR_PIM01106_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID  
  
   --as discuss with sanjiv sir   
-- UPDATE  #TMPMASTERSENC SET CODING_SCHEME=1 where isnull(product_code,'')<>''  
  
   EXEC SP_GETMASTERS   
   @cFinyear='01112',  
   @nFileFormat=2,  
   @CERRORMSG=@CERRORMSG OUTPUT,  
   @CAC_CODE=@CACCODE,  
   @NIMPORTFROM=0,  
   @cdept_id=@CLOCATIONID,  
   @nSpId=@nSpId,  
   @NMEMOTYPE=@nMemoType,
   @cSrcUploadTable=@CTEMPDETAILTABLENAME
  
    
     
  PRINT 'COME OUT OF IMPORTMASTERS'       
   IF ISNULL(@CERRORMSG,'')<>''    
    GOTO END_PROC    
  
  
  
 EXEC SP3S_VALIDATE_PARAS @CERRORMSG=@CERRORMSG OUTPUT  
 IF ISNULL(@CERRORMSG,'')<>''    
	 GOTO END_PROC    
  
     
   SET @cStep = 31  
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
     
   DECLARE @CattrMASTERTABLE VARCHAR(100)  
  
   SET @CATTRMASTERTABLE='TEMP_EXCEL_IMPORT_'+rtrim(ltrim((str(@NRUNNING_SPID))))  
   IF EXISTS (SELECT TOP 1 'U' FROM INFORMATION_SCHEMA .COLUMNS WHERE TABLE_NAME  =@CATTRMASTERTABLE AND  COLUMN_NAME LIKE 'ATTR%KEY_NAME')   
   EXEC SP_GETMASTERS_ATTR_NEW @CFINYEAR,@CATTRMASTERTABLE,@CERRORMSG OUTPUT  ,@cLocationId  
    
    
   IF ISNULL(@CERRORMSG,'')<>''    
	  GOTO END_PROC    
     
   SET @CCMD=N'UPDATE A SET ARTICLE_CODE=ART.ARTICLE_CODE,PARA1_CODE=ISNULL(C.PARA1_CODE,''0000000''),    
      PARA2_CODE=ISNULL(D.PARA2_CODE,''0000000''),PARA3_CODE=ISNULL(E.PARA3_CODE,''0000000''),    
      PARA4_CODE=ISNULL(F.PARA4_CODE,''0000000''),PARA5_CODE=ISNULL(G.PARA5_CODE,''0000000''),    
      PARA6_CODE=ISNULL(H.PARA6_CODE,''0000000'')   
      FROM   '+@CTEMPDBNAME+@CTEMPDETAILTABLENAME+' A (NOLOCK)   
      JOIN #TMPMASTERSENC B ON A.ROW_ID=B.ROW_ID    
         JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_NO = B.ARTICLE_NO      
         LEFT OUTER JOIN PARA1 C (NOLOCK) ON C.PARA1_NAME = B.PARA1_NAME   AND ISNULL(C.INACTIVE,0)=0   
         LEFT OUTER JOIN PARA2 D (NOLOCK) ON D.PARA2_NAME = B.PARA2_NAME   AND ISNULL(D.INACTIVE,0)=0  
         LEFT OUTER JOIN PARA3 E (NOLOCK) ON E.PARA3_NAME = B.PARA3_NAME   AND ISNULL(E.INACTIVE,0)=0  
         LEFT OUTER JOIN PARA4 F (NOLOCK) ON F.PARA4_NAME = B.PARA4_NAME   AND ISNULL(F.INACTIVE,0)=0  
         LEFT OUTER JOIN PARA5 G (NOLOCK) ON G.PARA5_NAME = B.PARA5_NAME   AND ISNULL(G.INACTIVE,0)=0  
         LEFT OUTER JOIN PARA6 H (NOLOCK) ON H.PARA6_NAME = B.PARA6_NAME   AND ISNULL(H.INACTIVE,0)=0  
         LEFT OUTER JOIN FORM I (NOLOCK) ON I.FORM_NAME = B.FORM_NAME   
         WHERE A.SP_ID='''+LTRIM(RTRIM((@NSPID)))+''' '   

   PRINT @CCMD          
   EXEC SP_EXECUTESQL @CCMD       
    
   SET @CCMD=N'UPDATE A SET ARTICLE_CODE=ART.ARTICLE_CODE,PARA1_CODE=ISNULL(C.PARA1_CODE,''0000000''),    
      PARA2_CODE=ISNULL(D.PARA2_CODE,''0000000''),PARA3_CODE=ISNULL(E.PARA3_CODE,''0000000''),    
      PARA4_CODE=ISNULL(F.PARA4_CODE,''0000000''),PARA5_CODE=ISNULL(G.PARA5_CODE,''0000000''),    
      PARA6_CODE=ISNULL(H.PARA6_CODE,''0000000'')  
      FROM '+@CTEMPDBNAME+@CTEMPDETAILTABLENAME+' A   
      JOIN #TMPMASTERSENC B ON A.PRODUCT_CODE=B.PRODUCT_CODE    
         JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_NO = B.ARTICLE_NO      
         LEFT OUTER JOIN PARA1 C (NOLOCK) ON C.PARA1_NAME = B.PARA1_NAME  AND ISNULL(C.INACTIVE,0)=0      
         LEFT OUTER JOIN PARA2 D (NOLOCK) ON D.PARA2_NAME = B.PARA2_NAME  AND ISNULL(D.INACTIVE,0)=0    
         LEFT OUTER JOIN PARA3 E (NOLOCK) ON E.PARA3_NAME = B.PARA3_NAME  AND ISNULL(E.INACTIVE,0)=0    
         LEFT OUTER JOIN PARA4 F (NOLOCK) ON F.PARA4_NAME = B.PARA4_NAME  AND ISNULL(F.INACTIVE,0)=0    
         LEFT OUTER JOIN PARA5 G (NOLOCK) ON G.PARA5_NAME = B.PARA5_NAME  AND ISNULL(G.INACTIVE,0)=0    
         LEFT OUTER JOIN PARA6 H (NOLOCK) ON H.PARA6_NAME = B.PARA6_NAME  AND ISNULL(H.INACTIVE,0)=0  
         LEFT OUTER JOIN FORM I (NOLOCK) ON I.FORM_NAME = B.FORM_NAME   
         WHERE  A.SP_ID='''+LTRIM(RTRIM((@NSPID)))+''' AND ISNULL(A.PRODUCT_CODE,'''')<>'''''   
  
   PRINT @CCMD          
   EXEC SP_EXECUTESQL @CCMD       
       
   SET @BPURTHROUGHIMPORT=1    
       
   DROP TABLE #TMPMASTERSENC    
  END     
      
      
  SELECT PRODUCT_CODE INTO #TMPPMT FROM SKU (NOLOCK) WHERE 1=2    
    
      
  SELECT PRODUCT_CODE,QUANTITY_IN_STOCK AS XN_STOCK INTO #TMPXNSTK FROM PMT01106 (NOLOCK) WHERE 1=2    
    
  IF @NUPDATEMODE IN (2,3)  
  BEGIN   
  SET @cStep=34    
  EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
    
  SET @CCMD=N'DELETE a FROM parcel_xns_link a WITH (ROWLOCK) JOIN parcel_det b (NOLOCK) ON a.parcel_row_id=b.row_id  
     JOIN parcel_mst c (NOLOCK) ON c.parcel_memo_id=b.parcel_memo_id  
     WHERE a.memo_id='''+ @CMEMOID+''' AND c.XN_TYPE=''PUR'''    
  
  PRINT @CCMD  
  EXEC SP_EXECUTESQL @CCMD    
       
  
  SET @cStep=36.2  
  EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
  
  SELECT top 1 @cparcelmemo_id= A.PARCEL_MEMO_ID  
  FROM PARCEL_DET A WITH (ROWLOCK)  
  JOIN PARCEL_MST B (NOLOCK) ON A.PARCEL_MEMO_ID=B.PARCEL_MEMO_ID  
  WHERE A.REF_MEMO_ID=@CMEMOID AND B.XN_TYPE='PUR'  
  
          
  SET @CCMD=N'UPDATE A SET REF_MEMO_ID='''',REF_MEMO_NO='''',closed=0 FROM PARCEL_DET A WITH (ROWLOCK)  
     JOIN PARCEL_MST B (NOLOCK) ON A.PARCEL_MEMO_ID=B.PARCEL_MEMO_ID  
     WHERE A.REF_MEMO_ID='''+ @CMEMOID+''' AND B.XN_TYPE=''PUR'''    
  PRINT @CCMD  
  EXEC SP_EXECUTESQL @CCMD    
  
  IF @NUPDATEMODE =3  
  BEGIN    
   SET @cStep=34    
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
    
   SET @CCMD=N'DELETE FROM PUR_BOX WHERE mrr_id='''+ @CMEMOID+''''    
  
   PRINT @CCMD  
   EXEC SP_EXECUTESQL @CCMD    
  END  
    
  END  
   --check pi against po which is against RawMateria  
  
      SET @cStep=36.5  
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
   if exists (select  top 1 'u' from PUR_PID01106_UPLOAD with (rowlock) where SP_ID =LTRIM(RTRIM((@NSPID))) and isnull(PO_ROW_ID,'')<>'')  
   begin  
  
    SET @cStep=36.8    
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
   UPDATE A SET ORDER_ID =B.WOD_ROW_ID  
   FROM PUR_PID01106_UPLOAD A WITH (ROWLOCK)  
   JOIN POD01106 B WITH (ROWLOCK) ON A.PO_ROW_ID =B.ROW_ID   
   JOIN POM01106 C WITH (ROWLOCK) ON B.PO_ID =C.PO_ID   
   WHERE A.SP_ID =LTRIM(RTRIM((@NSPID)))   
   AND ISNULL(C.MODE,0) =5  
  
 END  
  
   SET @cStep=36.82  
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
   UPDATE PUR_PID01106_UPLOAD SET ORDER_ID=NULL WHERE ISNULL(ORDER_ID,'')='' AND SP_ID =LTRIM(RTRIM((@NSPID)))   
  
   
    
  IF @NUPDATEMODE IN (2,3,4,5) AND NOT (@nUpdatemode=2 AND @nBoxUpdatemode=1)  
  BEGIN  
 SET @cStep=37.1  
  EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
    IF @nUpdatemode=2  
   SELECT TOP 1 @cMemoId=mrr_id FROM pur_pim01106_upload (NOLOCK) where SP_ID=@NsPiD  
  
  
      
  SET @cCmd=N'SELECT b.DEPT_ID,b.BIN_ID,A.PRODUCT_CODE,  
  -SUM(A.QUANTITY-(CASE WHEN B.PIM_MODE=6 THEN A.GRN_QTY ELSE 0 END)),0 as new_entry,a.order_id as bo_order_id  
  FROM PID01106 A (NOLOCK)  
  JOIN pim01106 b (NOLOCK) ON a.mrr_id=b.mrr_id  
  JOIN SKU_names c (NOLOCK) ON A.product_code=c.product_code  
  WHERE A.mrr_ID='''+@cMemoid+''' AND ISNULL(c.stock_na,0)=0    '+   
  (CASE WHEN @nUpdatemode=4 THEN ' and box_no='+LTRIM(RTRIM(STR(@nBoxNo)))  
    WHEN @nUpdatemode=5 THEN ' and a.product_code='''+LTRIM(RTRIM(@CPRODUCTCODE))+''''  
    ELSE ' AND 1=1 ' END)+' GROUP BY b.DEPT_ID,b.BIN_ID,A.PRODUCT_CODE,a.order_id'  
     
         print @cCmd  
   
   
  INSERT #BARCODE_NETQTY(DEPT_ID,BIN_ID,PRODUCT_CODE,XN_QTY,new_entry,bo_order_id)   
  EXEC SP_EXECUTESQL @cCmd  
  
  
  
 END  
     
  IF @NUPDATEMODE IN (2,3,4,5)       
  BEGIN    
    SET @cStep = 40  
    EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
    
    IF ISNULL(@CMEMOID,'') = ''  AND @nUpdatemode<>2   
    BEGIN    
	  SET @CERRORMSG ='MEMO ID REQUIRED .....CANNOT PROCEED'    
	  GOTO END_PROC        
    END    
      
          
    SET @CKEYFIELDVAL1=@CMEMOID    
      
    SELECT @NPIM_MODE=PIM_MODE FROM PIM01106 (NOLOCK) WHERE MRR_ID=@CKEYFIELDVAL1  
        
    SET @cStep = 42    
    EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
           
    IF @NUPDATEMODE=4 AND ISNULL(@NBOXNO,0)=0    
    BEGIN    
   SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cStep)) + ' BOX NO. REQUIRED .....CANNOT PROCEED'    
   GOTO END_PROC        
    END    
     
    SET @cStep = 42.5  
           
    IF @NUPDATEMODE=5 AND ISNULL(@CPRODUCTCODE,'')=''    
    BEGIN    
   SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cStep)) + ' BAR CODE NO. REQUIRED .....CANNOT PROCEED'    
   GOTO END_PROC        
    END    
        
   --we need to also update stock  behalf of location purchase because stock is mismatch from ho to loc  
      --AGAINST GRN EDITABLE FOR NEW BARCODE AND QTY CHANGES PMT HIT QTY-GRN QTY  
    IF  @SP3S_UPDATE_SAPINVOICE <> 1 --AND ISNULL(@NPIM_MODE,0)<>6 -- @BOTHERLOCPURCHASE=0 AND  
    BEGIN    
  
         SET @cStep = 43  
      EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
     
   EXEC SP3S_UPDATE_PMTSTOCK_PUR  
    @bRevertFlag=1,  
    @nSpId=@nSpId,  
    @nUpdatemode=@nUpdatemode,  
    @BNEGSTOCKFOUND=@BNEGSTOCKFOUND OUTPUT  
        
     
   IF @BNEGSTOCKFOUND=1   
   BEGIN    
           SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cStep)) + ' Stock going negative IN PMT....'    
     GOTO END_PROC    
   END    
    END    
        
     
     
    IF @NUPDATEMODE=3    
    BEGIN    
	   SET @cStep = 43.5  
	   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
	   -- UPDATING SENTTOHO FLAG    
	   SET @CCMD = N'UPDATE PIM01106 SET CANCELLED = 1,SENT_TO_HO=0,LAST_UPDATE=GETDATE() ' +     
		  N' WHERE MRR_ID = ''' + @CMEMOID + ''''    
	   EXEC SP_EXECUTESQL @CCMD    
     
	   IF ISNULL(@NPIM_MODE,0)=6  
		UPDATE GRN_PS_MST SET REF_CONVERTED_MRR_ID='' WHERE  isnull(REF_CONVERTED_MRR_ID,'')=@CMEMOID   
	   ELSE  
	   IF ISNULL(@NPIM_MODE,0)=7  
		UPDATE PARCEL_MST SET ref_converted_transport_bill_memoid='' WHERE  isnull(ref_converted_transport_bill_memoid,'')=@CMEMOID   
  
	   EXEC SP3S_CAPTURE_AUDIT_TRAIL 'PUR',@CMEMOID,@CTEMPMASTERTABLE,@CTEMPDETAILTABLE,@NSPID,@CMACHINENAME,@CWINDOWUSERNAME,@CWIZAPPUSERCODE,1,'1900-01-01',@EDIT_CLICKED  
     
	   SELECT @BALLOWPURATHO=ISNULL(ALLOW_PURCHASE_AT_HO,0),@CMEMODEPTID=A.DEPT_ID FROM LOCATION A (NOLOCK)   
	   JOIN PIM01106 B ON A.DEPT_ID=B.DEPT_ID  
	   WHERE MRR_ID=@CMEMOID  
        
		IF @CLOCATIONID=@CHODEPTID AND @BALLOWPURATHO=1 AND @CMEMODEPTID<>@CHODEPTID   
		BEGIN  
			IF EXISTS(SELECT TOP 1'U' FROM location (NOLOCK) WHERE DEPT_ID=@CMEMODEPTID AND server_loc=0)  
			SET @BOTHERLOCPURCHASE=1  
			ELSE  
			SET @BOTHERLOCPURCHASE=0  
		END  
      
      
		IF @NPIM_MODE IN (2,3,4)  
		BEGIN  
	        
			EXEC Sp_PurchaseInvoiceProcesing 
					@Cmrr_id=@CMEMOID,
					@NUpdateMode=@NUPDATEMODE,
					@cErrormsg=''
	   
		END
      
        
  
		 SET @cStep=44.8  
		 EXEC SP3S_CANCEL_AUTOVOUCHERS  
		 @cXnType='PUR',  
		 @CMEMOID=@CKEYFIELDVAL1       
       
		 SET @cStep=45.2  
	   EXEC SP3S_upd_qty_lastupdate  
	   @nUpdateMode=3,  
	   @cXnType='PUR',  
	   @cMasterTable='pim01106',  
	   @cMemoIdCol='MRR_ID',  
	   @cMemoId=@CKEYFIELDVAL1,  
	   @CERRORMSG=@CERRORMSG OUTPUT  
     
	   GOTO END_PROC    
    END    
    ELSE    
    IF @NUPDATEMODE=4    
    BEGIN    
	   SET @cStep=41  
	   ---REVERTING THE PI_QTY IN POD01106 FOR THE DELETED BOX.  
   
	   IF @NPIM_MODE IN (2,3,4)  
		BEGIN  
		        
			EXEC Sp_PurchaseInvoiceProcesing 
				@Cmrr_id=@CMEMOID,
				@NUpdateMode=@NUPDATEMODE,
				@NBOXNO=@NBOXNO,
				@cErrormsg=@CERRORMSG output
			
			if @CERRORMSG<>''
			GOTO END_PROC
		   
		END
		   
  
	   DELETE B FROM BOXM A WITH (ROWLOCK)  
	   JOIN BOXD B (NOLOCK) ON A.BOX_ID =B.BOX_ID   
	   WHERE A.REF_MRR_ID =@CMEMOID AND a.box_no=LTRIM(RTRIM(STR(@NBOXNO)))    
  
	   SET @CCMD = N'DELETE FROM PID01106 WITH (ROWLOCK) WHERE MRR_ID = ''' +@CMEMOID + ''' AND    
			BOX_NO='+LTRIM(RTRIM(STR(@NBOXNO)))    
	   EXEC SP_EXECUTESQL @CCMD    
  
  
    END       
    ELSE    
    IF @NUPDATEMODE=5    
    BEGIN    
       
       IF @NPIM_MODE IN (2,3,4)  
		BEGIN  
		        
			EXEC Sp_PurchaseInvoiceProcesing 
			@Cmrr_id=@CMEMOID,
			@NUpdateMode=@NUPDATEMODE,
			@CPRODUCTCODE=@CPRODUCTCODE,
			@cErrormsg=@CERRORMSG output
			
			if @CERRORMSG<>''
			GOTO END_PROC
		   
		 END
	 
	
	   DELETE B FROM BOXM A WITH (ROWLOCK)  
	   JOIN BOXD B (NOLOCK) ON A.BOX_ID =B.BOX_ID   
	   WHERE A.REF_MRR_ID =@CMEMOID AND B.PRODUCT_CODE=@CPRODUCTCODE  
	     
	   SET @cStep = 45    
	   SET @CCMD = N'DELETE FROM PID01106 WITH  (ROWLOCK) WHERE MRR_ID = ''' +@CMEMOID + ''' AND    
		   PRODUCT_CODE='''+@CPRODUCTCODE+''''    
	   EXEC SP_EXECUTESQL @CCMD    
	     
	     
    
  
    END          
      
    if @nUpdatemode in (4,5)  
    BEGIN  
      SET @cStep=45.2  
      GOTO LBL_CALTOTALSPUR    
    END   
  END    
     
  SET @cStep = 50    
  EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
  
  IF   EXISTS (SELECT TOP 1 'U' FROM PUR_PID01106_UPLOAD (nolock) WHERE SP_ID=@NSPID  AND RTRIM(LTRIM(ARTICLE_CODE)) IN ('','00000000','0000000') )  
 BEGIN  
    SET @CERRORMSG = 'BLANK ARTICLE DETAILS CAN NOT BE SAVE  ...'      
      GOTO END_PROC      
  
 END  
  
 --validate xn Item Type  in Purchase Import  
 IF @BTHROUGHIMPORT=1   and @NUPDATEMODE<>3  
 begin  
   --after barcode generation check item is to be be selectd xnitemtype  
   SET @CITEMTYPEWHEREClause=' AND SP_ID='''+ LTRIM(RTRIM(@NSPID))+''''  
  
    EXEC SP3S_VALIDATEXN_ITEMTYPE  
   @CTEMPMASTERTABLE='Pur_pim01106_upload',  
   @CTEMPDETAILTABLE='Pur_pid01106_upload',  
   @CWHERECLAUSE=@CITEMTYPEWHEREClause,  
   @CERRORMSG=@CERRORMSG OUTPUT  
  
   IF ISNULL(@CERRORMSG,'')<>''  
   GOTO END_PROC  
 end  
     
   
      
  SET @cStep = 55     
  EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
    
  DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))    
    
  SET @cStep = 60  -- SETTTING UP ENVIRONMENT    
  EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
      
  ------ CHECK USERS HAS ACCESS BIN OR NOT-----21.10.2014--  
  SELECT @INVMODE = INV_MODE FROM pur_pim01106_upload (NOLOCK) WHERE SP_ID=@NSPID  
            
  IF @INVMODE =2  
  BEGIN  
    
  SELECT @BINUSER=A.BIN_ID FROM pur_pim01106_upload A (NOLOCK) JOIN BINUSERS B (NOLOCK)  ON A.BIN_ID=B.BIN_ID   
  WHERE SP_ID=LTRIM(RTRIM((@NSPID))) AND B.USER_CODE= @CWIZAPPUSERCODE  
    
  IF (@BINUSER IS NULL )    
  BEGIN    
    SET @CERRORMSG = 'ERROR USER '+ @CWIZAPPUSERCODE +' DOES NOT ALLOW TO ACCESS BIN  ...'    
    GOTO END_PROC        
  END       
            
  END    
   
  SET @cStep=65    
  EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
  
  -- START UPDATING XN TABLES     
  IF @NUPDATEMODE = 1 -- ADDMODE     
  BEGIN     
          
    SET @cStep = 80  -- GENERATING NEW KEY    
    EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
     
      ----- Need to do this because same no. gets generated at Location in case of Group Purchase  
    ----- To make it unique we need to stuff Ho Id in the Prefix  
	--SERVICES ASSETS AND CONSUMABLE For location from ho without checking pur at ho stuff hoid(20230922)-mbkb

	IF @XN_ITEM_TYPE IN(2,3,4) AND @CMEMODEPTID<>@CCURLOCID  
	    SET @BALLOWPURATHO=1
  
    IF @BALLOWPURATHO=1 AND @CMEMODEPTID<>@cCurLocId  
    BEGIN  

      SELECT TOP 1 @nMemoType=memo_type FROM PUR_pim01106_UPLOAD (NOLOCK) WHERE SP_ID=@nSpId  
      SET @CMEMOPREFIXPROC=@CMEMODEPTID+(CASE WHEN @nMemoType=2 THEN 'E' ELSE '' END)+'-'+@cCurLocId  

	  IF @XN_ITEM_TYPE=2 AND @NMEMOTYPE<>2
	  begin
	     SET @CMEMOPREFIXPROC=@CMEMODEPTID+'C'+'-'+@CCURLOCID   
	  END

    END   
    ELSE       
     EXEC SAVETRAN_GETMEMOPREFIX  
   @CXNTYPE='PUR',  
   @CUSERCODE=@CWIZAPPUSERCODE,  
   @CFINYEAR=@CFINYEAR,  
   @CSOURCELOCID=@CLOCATIONID,  
   @CTARGETLOCID='',  
   @CMANUALPREFIX=@CMEMONOPREFIX,  
   @NSPID=@NSPID,  
   @CMEMOPREFIX=@CMEMOPREFIXPROC OUTPUT,  
   @CERRORMSG=@CERRORMSG OUTPUT  
  
   
        
  IF ISNULL(@CERRORMSG,'')<>''  
   GOTO END_PROC  
     
     SET @NMEMONOLEN   = LEN(@CMEMOPREFIXPROC)+6  
            
    PRINT 'GENERATING NEW KEY... START'       
    IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'    
    BEGIN    
   -- GENERATING NEW MRR_NO      
   SET @NSAVETRANLOOP=0    
   WHILE @NSAVETRANLOOP=0    
   BEGIN    
     SET @cStep=90    
     EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
     EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMOPREFIXPROC, 1,    
      @CFINYEAR,0, @CMEMONOVAL OUTPUT       
            
     PRINT @CMEMONOVAL    
            
     SET @cStep=100    
     EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
     SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+' (NOLOCK)     
        WHERE '+@CMEMONO+'='''+@CMEMONOVAL+'''     
        AND FIN_YEAR = '''+@CFINYEAR+''' )    
      SET @NLOOPOUTPUT=0    
     ELSE    
      SET @NLOOPOUTPUT=1'    
     PRINT @CCMD    
     EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT    
   END    
      
   IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%' OR ISNUMERIC(RIGHT(@CMEMONOVAL,6))=0  
   BEGIN    
      SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cStep)) + ' ERROR CREATING NEXT MEMO NO....'     
      -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'    
      GOTO END_PROC        
   END    
     
     IF @xn_item_type=4 AND EXISTS (SELECT TOP 1 'U' FROM LOCATION (NOLOCK) WHERE ISNULL(SERVER_LOC,0) =0 AND DEPT_ID=@CLOCATIONID)  -- FOR SERVICE ITEMS (problem Jayshoe chech serverloc 20230106)  
          SET @CMEMODEPTIDNEW=@CHODEPTID  
          else  
          SET @CMEMODEPTIDNEW=@CMEMODEPTID  
      
   PRINT 'GENERATING NEW KEY... START'       
      
   SET @cStep = 110  -- GENERATING NEW ID    
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
      
   -- GENERATING NEW MRR ID    
  SET @CKEYFIELDVAL1 = @CMEMODEPTIDNEW + RIGHT(@CFINYEAR,2)+isnull(REPLICATE('0', (22-LEN(@CMEMODEPTIDNEW + RIGHT(@CFINYEAR,2)))-LEN(LTRIM(RTRIM(@CMEMONOVAL)))),'')  + LTRIM(RTRIM(@CMEMONOVAL))
        
   IF EXISTS (SELECT TOP 1 'U' FROM PIM01106 (NOLOCK) WHERE mrr_id =@CKEYFIELDVAL1)  
   BEGIN  
        SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cStep)) + 'MRR ID ALREADY EXISTS (3)....'    
        GOTO END_PROC    
  
   END  
        
   IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
   BEGIN    
      SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cStep)) + ' ERROR CREATING NEXT MEMO ID(2)....'    
      -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'    
      GOTO END_PROC    
   END    
      
   SET @cStep = 130  -- UPDATING NEW ID INTO TEMP TABLES    
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
      
   -- UPDATING NEWLY GENERATED MRR NO AND MRR ID IN PIM AND PID TEMP TABLES    
   UPDATE pur_pim01106_upload WITH (ROWLOCK) SET MRR_NO= @CMEMONOVAL,MRR_ID=@CKEYFIELDVAL1,  
   MRR_CREATION_DEPT_ID=@CLOCATIONID ,Auto_prefix =@CMEMOPREFIXPROC WHERE SP_ID=LTRIM(RTRIM((@NSPID)))  
     
   END    
    
  END     -- END OF ADDMODE    
  ELSE    -- CALLED FROM EDITMODE    
  BEGIN    -- START OF EDITMODE    
       
    SET @cStep = 150  -- GETTING ID INFO FROM TEMP TABLE    
    EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
     
    -- GETTING MRR_ID WHICH IS BEING EDITED    
    SET @CCMD = 'SELECT @CKEYFIELDVAL1 = MRR_ID, @CMEMONOVAL = MRR_NO FROM '+@CTEMPMASTERTABLE  +' (NOLOCK) WHERE SP_ID='''+LTRIM(RTRIM((@NSPID)))+''' '  
    PRINT @CCMD    
    EXEC SP_EXECUTESQL @CCMD, N'@CKEYFIELDVAL1 VARCHAR(50) OUTPUT, @CMEMONOVAL VARCHAR(50) OUTPUT',     
     @CKEYFIELDVAL1 OUTPUT, @CMEMONOVAL OUTPUT    
    IF (@CKEYFIELDVAL1 IS NULL ) OR (@CMEMONOVAL IS NULL )    
    BEGIN    
    SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cStep)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'    
    -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'    
           
    GOTO END_PROC        
    END    
      
  
    
    IF @NPIM_MODE IN (2,3,4) AND @BCALLEDFROMBOXENTRY=0  
    BEGIN  
    
	 SET @cStep = 155  -- STORING OLD STATUS OF BARCODES     
	  EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
          
      INSERT INTO #TMPPI_PROCESS (ARTICLE_CODE ,PRODUCT_CODE , ROW_ID,QUANTITY,para1_code ,para2_code ,para3_code,po_row_id  )
      SELECT a.article_code ,a.product_code, A.ROW_ID ,-1*A.QUANTITY  ,
             a.para1_code,a.para2_code,para3_code,a.po_row_id 
      FROM PID01106 A
      WHERE A.MRR_ID=@CKEYFIELDVAL1
	
   END  
     
   -- ENTRY IN AUDIT TRAIL (ONLY WHEN USER EXPLICITLY CLICKED ON EDIT BUTTON)    
    SET @cStep = 160  -- AUDIT TRIAL ENTRY    
    EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
   /*  
   EXEC AUDITLOGENTRY    
    @CXNTYPE  = 'PUR'    
  , @CXNID  = @CKEYFIELDVAL1    
  , @CDEPTID  = @CMEMODEPTID    
  , @CCOMPUTERNAME= @CMACHINENAME    
  , @CWINUSERNAME = @CWINDOWUSERNAME    
  , @CWIZUSERCODE = @CWIZAPPUSERCODE    
   */  
      
    IF EXISTS(SELECT TOP 1 'U' FROM PID01106 A (NOLOCK) JOIN pur_pid01106_upload B (NOLOCK) ON A.ROW_ID=B.ROW_ID  
     WHERE B.SP_ID=@NSPID AND ISNULL(B.PRODUCT_CODE,'')='' AND ISNULL(A.PRODUCT_CODE,'')<>'')  
   SET @CERRORMSG='PURCHASE ALREADY MODIFIED BY ANOTHER USER.PLEASE TRY AGAIN.'  
      
    IF ISNULL(@CERRORMSG,'')<>''  
   GOTO END_PROC  
     
    SET @cStep = 175  
    EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
      
  END     -- END OF EDITMODE    
    
    
  
 IF @NUPDATEMODE IN (1,2)   
 BEGIN  
   UPDATE a SET MRR_CREATION_DEPT_ID =@CLOCATIONID,PARTY_STATE_CODE=ISNULL(B.AC_GST_STATE_CODE,'00' )   
      FROM pur_pim01106_upload A  WITH (ROWLOCK)  
   JOIN LMP01106 B (NOLOCK) ON A.AC_CODE=B.AC_CODE  
   WHERE A.SP_ID=@NSPID  
 END  
    
    
    
  SET @cStep = 180    
  EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
    
    
    
    
  -- RECHECKING IF ID IS STILL LATER    
  IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'    
  BEGIN    
    SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cStep)) + ' ERROR CREATING NEXT MEMO ID(1)....'    
    GOTO END_PROC    
  END        
     
    SET @cStep = 185  -- UPDATING TRANSACTION TABLE    
    EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
      
  SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE SP_ID='''+LTRIM(RTRIM((@NSPID)))+''''    
  PRINT @CCMD    
  EXEC SP_EXECUTESQL @CCMD   
    
  
     SET @cStep = 185.2  -- UPDATING TRANSACTION TABLE    
    EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
  
    --TAX CALCULATION FOR GST AFTER 1/7/2017 BEFOR CALCULATE AS IT ID --------------  
      
    DECLARE @DMEMO_DT DATETIME,@GSTDATE DATETIME,@DMRR_DT DATETIME,@NBILLCHALLANMODE INT,  
    @nrcm_applicable int  
      
     SET @CCMD=N' SELECT  @DMEMO_DT=RECEIPT_DT,@DMRR_DT=MRR_DT,@NBILLCHALLANMODE =BILL_CHALLAN_MODE,@nrcm_applicable=rcm_applicable   
     FROM '+@CTEMPMASTERTABLE+' A (NOLOCK)  WHERE  A.SP_ID='''+LTRIM(RTRIM((@NSPID)))+''''  
     EXEC SP_EXECUTESQL @CCMD,N'@DMEMO_DT DATETIME OUTPUT,@DMRR_DT DATETIME OUTPUT,@NBILLCHALLANMODE INT OUTPUT,@nrcm_applicable INT OUTPUT ',  
     @DMEMO_DT=@DMEMO_DT OUTPUT,@DMRR_DT=@DMRR_DT OUTPUT,@NBILLCHALLANMODE=@NBILLCHALLANMODE OUTPUT,@nrcm_applicable=@nrcm_applicable OUTPUT  
     PRINT @CCMD  
      
    IF @DMEMO_DT=''  
    BEGIN  
         SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cStep)) + ' INVOICE DATE CAN NOT BE BLANK...'    
   GOTO END_PROC  
      
    END  
         
   
  IF @NUPDATEMODE=2  
  BEGIN  
   ---- UPDATING BILL BY BILL INFO IF BILL NO. CHANGED  
   SET @cStep = 185.6  
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
  
   declare @cModifiedBillNo varchar(200)  
  
   SELECT TOP 1 @cModifiedBillNo=b.bill_no,@dReceiptDt=a.receipt_dt from pur_pim01106_upload a (NOLOCK)  
   JOIN pim01106 b (NOLOCK) ON a.mrr_id=b.mrr_id  
   WHERE a.sp_id=@nSpid and a.bill_no<>b.bill_no  
     
   IF isnull(@cModifiedBillNo,'')<>''  
   UPDATE A SET REF_NO=DBO.FN_GETBILLBYBILL_REFNO('',@cModifiedBillNo,@DRECEIPTDT,'CR','')   
   FROM BILL_BY_BILL_REF A (NOLOCK)  
   JOIN VD01106 B (NOLOCK) ON B.VD_ID=A.VD_ID  
   JOIN postact_voucher_link c (nolock) on c.vm_id=b.vm_id  
   where c.memo_id=@CKEYFIELDVAL1 AND c.XN_TYPE='PUR'  
  END  
    
  ---- Tds Round Off  
      SET @cStep = 185.8  -- UPDATING TRANSACTION TABLE    
    EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
  
  IF EXISTS(SELECT TOP 1 'U' FROM config (NOLOCK) WHERE config_option='TDS_INV_RNDOFF'  
 AND value='1') and exists (select mrr_id from PUR_pim01106_UPLOAD (nolock) where sp_id=@NSPID and isnull(tds_amount,0)<>0)  
    UPDATE pur_pim01106_upload WITH (ROWLOCK)  SET tds_amount=CEILING(tds_amount)  
 WHERE SP_ID=@NSPID  
  
    
    IF ISNULL(@NPIM_MODE,0)=6 AND ISNULL(@NUPDATEMODE,0)=1  
  BEGIN  
      SET @cStep = 186.2  -- UPDATING TRANSACTION TABLE    
    EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
  
  --STORED TEMPORARY GRN MEMO ID IN PO_ID OF PID TO CREATE LINK AFTER CREATING LINK CLEAN PO ID  
       IF  EXISTS (SELECT TOP 1 'U' FROM pur_PID01106_upload (NOLOCK) WHERE sp_id=@nSpId AND ISNULL(PO_ID,'') ='' )  
       BEGIN  
           SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cStep)) + ' GRN MEMO ID REQUIRED FOR PURCHASE...'    
        GOTO END_PROC   
       END  
         
       UPDATE A  SET REF_CONVERTED_MRR_ID=@CKEYFIELDVAL1  
       FROM GRN_PS_MST A WITH (ROWLOCK)  
       JOIN   
       (  
        SELECT DISTINCT  PO_ID AS GRN_MEMO_ID  
        FROM PUR_pid01106_UPLOAD A (NOLOCK)  
        WHERE SP_ID=@NsPID  
       ) B ON A.MEMO_ID =B.GRN_MEMO_ID   
         
  
         
     IF EXISTS(  SELECT BIN_ID FROM  
           (  
               SELECT BIN_ID  FROM GRN_PS_MST (NOLOCK) WHERE REF_CONVERTED_MRR_ID=@CKEYFIELDVAL1 AND CANCELLED =0  
               GROUP BY BIN_ID  
             ) A  
             GROUP BY BIN_ID  
             HAVING COUNT(*)>1)  
       BEGIN  
             
           SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cStep)) + ' MULTIPLE BIN OF GRN NOT ALLOWED IN SINGLE PURCHASE...'    
        GOTO END_PROC   
         
       END  
         
       UPDATE A SET BIN_ID=B.BIN_ID  FROM PUR_pim01106_UPLOAD A (NOLOCK)   
       JOIN GRN_PS_MST B (NOLOCK) ON A.mrr_id =B.REF_CONVERTED_MRR_ID   
       WHERE A.sp_id =@nSpId AND B.CANCELLED=0  
         
       UPDATE PUR_pid01106_UPLOAD SET PO_ID ='' WHERE SP_ID=@NsPID  
  END  
         
  IF @NPIM_MODE=7 AND ISNULL(@NUPDATEMODE,0) IN (1  ,2)
  BEGIN
	IF ISNULL(@NUPDATEMODE,0)=2
	UPDATE PARCEL_MST SET ref_converted_transport_bill_memoid='' WHERE  isnull(ref_converted_transport_bill_memoid,'')=@CMEMOID 
   
   UPDATE A  SET ref_converted_transport_bill_memoid=@CKEYFIELDVAL1  
       FROM parcel_MST A WITH (ROWLOCK)  
       JOIN   
       (  
        SELECT DISTINCT  PO_ID AS parcel_MEMO_ID  
        FROM PUR_pid01106_UPLOAD A (NOLOCK)  
        WHERE SP_ID=@NsPID  
       ) B ON A.parcel_MEMO_ID =B.parcel_MEMO_ID  
  END  
    
    
  
  SET @cStep=210           
 -- EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
  
      
    DECLARE @CWHERECLAUSE VARCHAR(1000)  
      
      
  -- UPDATING TRANSACTION TABLE (PID01106) FROM TEMP TABLE    
    
  IF ISNULL(@cEnableFcXns,'')='1' and @BTHROUGHIMPORT=1  
  BEGIN  
   SET @cStep=212    
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
   SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE + ' WITH (ROWLOCK) SET  old_row_id=row_id where SP_ID='''+LTRIM(RTRIM((@NSPID)))+''''  
   EXEC SP_EXECUTESQL @CCMD    
  END  
    
  -- UPDATING ROW_ID IN TEMP TABLES    
  SET @cStep=214           
  EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
    
  SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE + '  WITH (ROWLOCK) SET   ROW_ID = ''' + @CMEMODEPTID + ''' + CONVERT(VARCHAR(40), NEWID())    
    WHERE SP_ID='''+LTRIM(RTRIM((@NSPID)))+''' AND LEFT(ROW_ID,5) = ''LATER'' '    
  EXEC SP_EXECUTESQL @CCMD    
  
      
  SET @cStep = 216    
  EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
      
  SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE + ' SET PRODUCT_CODE='''' WHERE SP_ID='''+LTRIM(RTRIM((@NSPID)))+'''   
  AND PRODUCT_CODE IS NULL   '    
  EXEC SP_EXECUTESQL @CCMD       
    
      
  SET @cStep = 218  
  EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
      
  SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE + ' WITH (ROWLOCK) SET DISCOUNT_AMOUNT=ROUND(GROSS_PURCHASE_PRICE*INVOICE_QUANTITY*DISCOUNT_PERCENTAGE/100,2),  
    PURCHASE_PRICE=GROSS_PURCHASE_PRICE-ROUND(GROSS_PURCHASE_PRICE*DISCOUNT_PERCENTAGE/100,2)  
    WHERE SP_ID='''+LTRIM(RTRIM((@NSPID)))+''' AND ISNULL(manual_discount,0)=0'    
  EXEC SP_EXECUTESQL @CCMD       
      
    
   --- We have to forcly generate Batch barcodes of FixCodes because it is internal matter of Software   
   IF @LGENERATEBARCODES<>1  
   BEGIN  
  
     
     SET @cStep=225  
     EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
     
	  EXEC SAVETRAN_GENPERISHABLE_BARCODE  
	  @NMODE=@nMode,  
	  @CXNID=@NSPID,  
	  @NFORCELYBARCODEGEN=1,  
	  @CERRORMSG=@CERRORMSG  OUTPUT ,  
	  @CLOCID=@cLocationId  
  
	  IF ISNULL(@CERRORMSG,'')<>''  
	   GOTO END_PROC  
  
     
   
 END  
 
 LBL_CALTOTALSPUR:
 
 UPDATE pUR_PID01106_UPLOAD WITH (ROWLOCK) SET INVOICE_QUANTITY=(QUANTITY-SCHEME_QUANTITY) WHERE SP_ID= @NsPiD AND INVOICE_QUANTITY=0    
    
  IF @DMEMO_DT<@GSTDATE   
  BEGIN   
     SET @cStep=280  
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1      
   UPDATE pUR_PID01106_UPLOAD WITH (ROWLOCK) SET TAX_PERCENTAGE=B.TAX_PERCENTAGE    
   FROM FORM B (NOLOCK)     
   WHERE B.FORM_ID=pUR_PID01106_UPLOAD.FORM_ID     
   AND pUR_PID01106_UPLOAD.SP_ID= @NsPiD  
  END  
    
     SET @cStep=283  
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1      
  EXEC SP3S_CALTOTALS_PUR  
 @nUpdatemode=@nUpdatemode,  
 @nSpId=@nSpId,  
 @cMrrId=@cKeyFieldVal1,  
 @BCALLEDFROMEKAYA=@BCALLEDFROMEKAYA,  
 @NBOXUPDATEMODE=@NBOXUPDATEMODE,  
 @nrcm_applicable=@nrcm_applicable,  
 @EDIT_CLICKED=@EDIT_CLICKED,  
 @nBoxNo=@NBOXNO,  
 @CERRORMSG=@CERRORMSG outpuT,  
 @CDEPT_ID=@CLOCATIONID,  
 @NPARTY_AMOUNT_FORTCS =@NPARTY_AMOUNT_FORTCS  
  
  if isnull(@cErrormsg,'')<>''  
 goto end_proc  
 
 --end 
 
 if @nUpdatemode in (4,5)  
    BEGIN  
      SET @cStep=45.2  
      GOTO LBLUPDATESTOCK    
    END   
    
  
    
  IF @LGENERATEBARCODES = 1     
  BEGIN    
  declare @cManualPrefix varchar(10)  
      select @cManualPrefix=barcode_prefix from pur_pim01106_upload(nolock) where sp_id=@nSpid  
  
  
   
  print 'enter calling savetran_genbc'  
        SET @cStep = 230  
    EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
     EXEC SAVETRAN_GENBARCODES_PUR    
     @nSpId  = @nSpId  
   , @nPim_mode=@NPIM_MODE  
   , @cManualPrefix  = @cManualPrefix    
   , @NMODE  = 1     
   , @cLocId  = @CLOCATIONID     
   , @BTHROUGHIMPORT=@BTHROUGHIMPORT  
   , @NUPDATEMODE=@NUPDATEMODE  
   , @CERRORMSG = @CERRORMSG OUTPUT    
  
           
     IF ISNULL(@CERRORMSG,'')<>''    
   GOTO END_PROC    
  
     
   
   print 'complete calling savetran_genbc'  
     IF ISNULL(@cEnableFcXns,'')='1' and @BTHROUGHIMPORT=1  
     BEGIN  
    SET @cStep = 235  
    EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
    declare @ntemptblsp_id varchar(10)  
    set @ntemptblsp_id=cast(@@SPID  as varchar(10))  
  
  
    SET @cImportTable='temp_excel_import_'+LTRIM(rtrim((@ntemptblsp_id)))  
    DECLARE @cJoinStr VARCHAR(1000),@cReplaceInsCol VARCHAR(100)  
     
      
    SET @cJoinStr=' JOIN '+ @CTEMPDETAILTABLE+' c ON c.old_row_id=b.row_id  
        JOIN pid01106 d ON d.row_id=c.row_id '  
          
    SELECT @cReplaceInsCol='d.product_code'  
      
    SET @CWHERECLAUSE=' ISNULL(b.product_code,'''')='''''  
    SET @cStep = 240  
    EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
  
      
      
    EXEC UPDATEMASTERXN  
      @CSOURCEDB = ''  
       , @CSOURCETABLE = @cImportTable    
       , @CDESTDB  = ''    
       , @CDESTTABLE = @cImportTable  
       , @CKEYFIELD1 = 'ROW_ID'  
       , @LINSERTONLY = 1  
       , @CFILTERCONDITION=@CWHERECLAUSE  
          , @cJoinStr=@cJoinStr  
       , @cReplaceInsCol=@cReplaceInsCol  
       , @cReplaceInsColName='PRODUCT_CODE'  
       , @LUPDATEXNS=1  
     
    SET @cStep = 243  
    SET @cCmd=N'DELETE FROM '+@cImportTable+'  WITH (ROWLOCK) WHERE ISNULL(product_code,'''')='''''  
    EXEC SP_EXECUTESQL @cCmd  
      
         
    SET @cStep = 248        
    EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
      
    EXEC SP3S_UPDMASTERS_FCMRP  
    @CTABLENAME=@cImportTable,  
    @CERRORMSG=@CERRORMSG OUTPUT              
     END    
        
     SET @cStep = 253  
     -- CHECK WHETHER BARCODE HAS SUCCESSFULLY GENERATED OR NOT    
     IF EXISTS (  SELECT TOP 1 A.PRODUCT_CODE FROM PUR_pid01106_UPLOAD  A (NOLOCK) JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE=B.ARTICLE_CODE  
     WHERE sp_id=@nSPId AND PRODUCT_CODE = '' AND CODING_SCHEME<>1 )    
     BEGIN    
    SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cStep)) + ' ERROR GENERATING NEW BARCODES....'    
    -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'    
          
    GOTO END_PROC    
     END    
      
     SET @cStep = 258  
     EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
     -- CHECK WHETHER SKU OVERHEADS ENTRY IS MISSING OR NOT  
     IF @xn_item_type<=1 and EXISTS (  SELECT TOP 1 A.PRODUCT_CODE FROM PUR_pid01106_UPLOAD  A (NOLOCK) JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE  
      LEFT OUTER JOIN SKU_OH C (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE  
      WHERE sp_id=@nSpId aND C.PRODUCT_CODE IS NULL AND ISNULL(A.PRODUCT_CODE,'')<>'')    
     BEGIN    
    SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cStep)) + ' ERROR BARCODES OVERHEAD DETAIL TABLE DATA IS MISSING....'    
    -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'    
          
    GOTO END_PROC    
     END    
   SET @cStep = 261  
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
     -- CHECK ALL BARCODES INSERTED INTO PID    
     IF EXISTS ( SELECT TOP 1 A.PRODUCT_CODE FROM PUR_pid01106_UPLOAD A (NOLOCK)    
     LEFT OUTER JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE = B.PRODUCT_CODE    
     JOIN ARTICLE C (NOLOCK) ON B.ARTICLE_CODE=C.ARTICLE_CODE  
     WHERE A.sp_id=@nSPid and a.product_code<>''  
     AND B.PRODUCT_CODE IS NULL AND CODING_SCHEME<>1 )    
     BEGIN    
    SET @cStep=263    
    EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  
    SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cStep)) + ' ERROR Barcode Table Data is missing'    
    -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'    
          
    GOTO END_PROC    
     END    
 END    
   
 SET @cStep=264    
 --changes for para7 Code Generate on the basis of   
 
 IF @NUPDATEMODE IN (1,2)  
 BEGIN  
  SET @cStep = 265  
  EXEC SP_CHKXNSAVELOG 'PUR',@cStep,1,@nSpId,'',1    
          
   INSERT #BARCODE_NETQTY(DEPT_ID,BIN_ID,PRODUCT_CODE,XN_QTY,new_entry,bo_order_id )  
   SELECT B.DEPT_ID,b.BIN_ID,A.PRODUCT_CODE,SUM(A.QUANTITY-(CASE WHEN B.PIM_MODE=6 THEN A.GRN_QTY ELSE 0 END)),1 as new_entry,a.order_id  
   FROM PUR_PID01106_UPLOAD A (NOLOCK)  
   join PUR_PIM01106_UPLOAD B (NOLOCK) ON B.SP_ID=A.SP_ID  
   join article c (nolock) on c.article_code=a.article_code  
   WHERE A.sp_ID=@nSpId AND ISNULL(C.stock_na,0)=0   
   GROUP BY B.DEPT_ID,b.BIN_ID,A.PRODUCT_CODE,a.order_id  
    
    
    END  
    
    
 IF @NPIM_MODE IN (2,3,4)    
 BEGIN  
    
      SELECT TOP 1 @CACCODE=ISNULL(AC_CODE,'')  FROM PUR_PIM01106_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID  
      
      INSERT INTO #TMPPI_PROCESS (ARTICLE_CODE ,PRODUCT_CODE , ROW_ID,QUANTITY,para1_code,para2_code,para3_code,po_row_id )
      SELECT a.article_code ,a.product_code , A.ROW_ID ,A.QUANTITY ,
             a.para1_code,a.para2_code,a.para3_code ,a.po_row_id 
      FROM PUR_PID01106_UPLOAD A
      WHERE A.SP_ID =@nSpId
      
      
     if  @NPIM_MODE<>3
     begin
     
		  SELECT PO_ID  INTO #TMP_PIM_POID FROM PIM_POID_UPLOAD WHERE SP_ID=@nSpId
		  GROUP BY PO_ID
	      
		EXEC Sp_PurchaseinvoiceProcesing 
			 @Cmrr_id=@CKEYFIELDVAL1,
			 @NUpdateMode=@NUPDATEMODE,
			 @CACCODE=@CACCODE,
			 @cErrormsg=@cErrormsg output ,
			 @CSP_ID=@NSPID
		  
		  if ISNULL(@cErrormsg,'')<>''
			 goto End_proc
	  
	 end   
	 else 
	 begin
	 
	        
	         SELECT ROW_ID ,PO_ROW_ID,SUM(A.QUANTITY) AS QTY 
	            into #tmpPur_selection
	         FROM #TMPPI_PROCESS A
	         GROUP BY ROW_ID ,PO_ROW_ID
	         having SUM(A.QUANTITY) <>0
	       
	 
	        UPDATE A SET QTY =A.QTY +B.QTY 
		    FROM PURCHASEORDERPROCESSINGNEW A (NOLOCK)
		    JOIN #tmpPur_selection B ON A.ROWID =B.ROW_ID
		    WHERE  A.XNTYPE ='PURCHASEINVOICE'
		     
		     DELETE A  FROM PURCHASEORDERPROCESSINGNEW A (NOLOCK)
		     JOIN #tmpPur_selection B ON A.ROWID =B.ROW_ID
		     WHERE  A.XNTYPE ='PURCHASEINVOICE'
		     AND A.QTY=0
		     
		      INSERT PURCHASEORDERPROCESSINGNEW	( Qty, RefRowId, RowId, XnType )  
		      SELECT 	a.QTY   Qty,PO_ROW_ID RefRowId,ROW_ID RowId,'PURCHASEINVOICE' XnType 
		      FROM #tmpPur_selection a
		      left join PURCHASEORDERPROCESSINGNEW b (nolock) on a.row_id =b.RowId and b.XNTYPE ='PURCHASEINVOICE'
		      where b.RowId is null  and a.QTY >0

	 
	 end
	     
	     
  
     SET @cStep=272  
     EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1  


 end  
    
  
  
 LBLUPDATESTOCK:          
  -- UPDATING STOCK OF PMT W.R.T. CURRENT PURCHASE    
      
  IF  @SP3S_UPDATE_SAPINVOICE <> 1 AND @NUPDATEMODE NOT IN (4,5)--@BOTHERLOCPURCHASE=0 AND  
  BEGIN  
   SET @cStep = 274  -- UPDATING PMT TABLE    
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1      
  
     
  EXEC SP3S_UPDATE_PMTSTOCK_PUR  
      @nUpdatemode=@nUpdatemode,  
   @bRevertFlag=0,  
   @nSpId=@nSpId,  
   @BNEGSTOCKFOUND=@BNEGSTOCKFOUND OUTPUT  
   --   if @@spid=163  
   --begin  
   --select 'check barcode_netqty',* from #barcode_netqty  
   --select a.* from pmt01106 a join #BARCODE_NETQTY b on a.product_code=b.product_code  
   --end  
  
         
  
  IF @BNEGSTOCKFOUND=1  
  BEGIN    
           
    SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cStep)) + ' Stock going negative IN PMT....'    
    GOTO END_PROC    
  END    
  
  END  
       
     SET @cStep=277  
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1         
      
  IF @CCMDOUTPUT <> ''    
  BEGIN    
   SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cStep)) + ' ERROR UPDATING THE STOCK STATUS IN PMT... STOCK IS GOING NEGATIVE'    
   -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'    
       
   EXEC SP_EXECUTESQL @CCMDOUTPUT    
   SET @BNEGSTOCKFOUND=1    
       
   GOTO END_PROC    
  END    
    
  IF EXISTS (SELECT A.PRODUCT_CODE FROM POD01106 A (NOLOCK) JOIN PUR_PID01106_UPLOAD B (NOLOCK) ON A.ROW_ID=B.ROW_ID    
    JOIN ARTICLE C (NOLOCK) ON C.ARTICLE_CODE=B.ARTICLE_CODE     
    WHERE B.SP_ID=@nSpId AND C.CODING_SCHEME IN (2,3) AND A.PI_QTY<0)       
  BEGIN    
   SET @cStep = 277    
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1        
   SET @CERRORMSG = 'PURCHASE QTY IS GOING MORE THAN PO QTY FOR THE FOLLOWING BAR CODES....PLEASE CHECK'    
       
   SELECT A.PRODUCT_CODE,A.QUANTITY AS [PO QTY],A.PI_QTY AS [PUR QTY] FROM POD01106 A  (NOLOCK)    
   JOIN PUR_PID01106_UPLOAD B (NOLOCK) ON A.ROW_ID=B.ROW_ID    
      JOIN ARTICLE C (NOLOCK) ON C.ARTICLE_CODE=B.ARTICLE_CODE     
      WHERE B.SP_ID=@nSpId AND C.CODING_SCHEME IN (2,3) AND A.QUANTITY-A.PI_QTY<0    
          
      SET @BNEGSTOCKFOUND=1    
          
      GOTO END_PROC    
  END    
          
  /*
  this code shifte to befor barcode generation try to handle multiple time  Update trigger on sku 
  UPDATE pUR_PID01106_UPLOAD WITH (ROWLOCK) SET INVOICE_QUANTITY=(QUANTITY-SCHEME_QUANTITY) WHERE SP_ID= @NsPiD AND INVOICE_QUANTITY=0    
    
  IF @DMEMO_DT<@GSTDATE   
  BEGIN   
     SET @cStep=280  
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1      
   UPDATE pUR_PID01106_UPLOAD WITH (ROWLOCK) SET TAX_PERCENTAGE=B.TAX_PERCENTAGE    
   FROM FORM B (NOLOCK)     
   WHERE B.FORM_ID=pUR_PID01106_UPLOAD.FORM_ID     
   AND pUR_PID01106_UPLOAD.SP_ID= @NsPiD  
  END  
    
     SET @cStep=283  
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1      
  EXEC SP3S_CALTOTALS_PUR  
 @nUpdatemode=@nUpdatemode,  
 @nSpId=@nSpId,  
 @cMrrId=@cKeyFieldVal1,  
 @BCALLEDFROMEKAYA=@BCALLEDFROMEKAYA,  
 @NBOXUPDATEMODE=@NBOXUPDATEMODE,  
 @nrcm_applicable=@nrcm_applicable,  
 @EDIT_CLICKED=@EDIT_CLICKED,  
 @nBoxNo=@NBOXNO,  
 @CERRORMSG=@CERRORMSG outpuT,  
 @CDEPT_ID=@CLOCATIONID,  
 @NPARTY_AMOUNT_FORTCS =@NPARTY_AMOUNT_FORTCS  
  
    
    
  if isnull(@cErrormsg,'')<>''  
 goto end_proc  
 
 */
    
  SET @cStep=284  
  --AUDIT_TRIAL     
  -- UPDATING VARIOUS MASTER PARAMETERS IN SKU AND SKU_OH    
  -- UPDATING VARIOUS COSTING RELATED PARAMETERS IN SKU AND SKU_OH     
  IF @NUPDATEMODE IN (1,2)    
  BEGIN    
    SET @cStep = 287  
    EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1      
		/*FOR EDIT MODE,PASS MODE VALUE 3 SO THAT THE FURTHER PROCEDURE WILL CHECK IF BARCODES IN PURCHASE XN TABLE   
	   HAS BEEN MASTER REVISED AND IF IT HAS BEEN REVISED,  
	   MASTER CHANGE IN PURCHASE EDIT WOULD NOT OVERWRITE REVISED MASTER USING ITEM MASTER REVISION MODULE.   
		*/  
    IF @NUPDATEMODE=2   
	   EXEC SAVETRAN_PUR_UPDSKU  
	   @NsPiD=@nSpid,  
	   @NMODE=3,  
	   @BCANCELBILL=0,  
	   @nUpdateMode=2,  
	   @cXntype='PUR',  
	   @CERRORMSG=@CERRORMSG OUTPUT    
    ELSE  
	   EXEC SAVETRAN_PUR_UPDSKU  
	   @NsPiD=@nSpid,  
	   @NMODE=1,  
	   @BCANCELBILL=0,  
	   @nUpdateMode=@nUpdatemode,  
	   @cXntype='PUR',  
	   @BCALLEDFROMEKAYA=@BCALLEDFROMEKAYA,  
	   @CERRORMSG=@CERRORMSG OUTPUT   
    
	IF ISNULL(@cErrormsg,'')<>''  
	   GOTO END_PROC  
  
  
    SET @cStep = 289.07  
    EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1           
  
    --select terms_name,pur_terms_name,* from PUR_pim01106_UPLOAD where sp_id=@nSpId  
  
  
	  UPDATE PUR_pim01106_UPLOAD WITH (ROWLOCK) SET pur_terms_name=terms_name WHERE sp_id=@nSpId  
	  AND isnull(pur_terms_name,'')<>isnull(terms_name,'')  
  
  END      
    
  
    
  
  IF @NUPDATEMODE=2  
  BEGIN  
		SET @cStep = 290  
		EXEC SP_CHKXNSAVELOG 'wSL',@cStep,1,@nSpId,'',1            
			
		IF @bReUpdateAllPid=1 OR @nBoxupdatemode=0
			update pid01106 with (rowlock) SET mrr_id='XXXXXXXXXX',row_id=@CMEMODEPTID + CONVERT(VARCHAR(40), NEWID()) WHERE mrr_id=@CKEYFIELDVAL1
		ELSE
			update pid01106 with (rowlock) SET mrr_id='XXXXXXXXXX',row_id=@CMEMODEPTID + CONVERT(VARCHAR(40), NEWID()) WHERE mrr_id=@CKEYFIELDVAL1 AND box_no=@NBOXNO
  END  
  
    
    DECLARE @CREF_MEMO_NO VARCHAR(20),@INV_NO VARCHAR(50),@cXN_NO_LIST varchar(1000),@CParcelDetails  varchar(1000) 
  
    SELECT @CREF_MEMO_NO=MRR_NO,@INV_NO=INV_NO FROM pur_pim01106_upload (NOLOCK) WHERE sp_id=@NSPID  
  
  
   SET @cStep=305  
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1   
      
   UPDATE PARCEL_DET SET REF_MEMO_ID=@CKEYFIELDVAL1,REF_MEMO_NO=@CREF_MEMO_NO,closed=b.closed  
   FROM pur_parcel_det_upload B (NOLOCK)     
   WHERE B.SP_ID=@NSPID AND B.ROW_ID=PARCEL_DET.ROW_ID  
  
  
    if isnull(@cparcelmemo_id,'')=''  
     SELECT top 1 @CPARCELMEMO_ID=PARCEL_MEMO_ID FROM PUR_PARCEL_DET_UPLOAD WHERE SP_ID=@NSPID  
  
  
     select  @cXN_NO_LIST=rtrim( ltrim( a.PARTY_INV_NO  ))+'/'+rtrim( ltrim(CONVERT(VARCHAR(20), a.PARTY_INV_DT,105)))+'('+rtrim( ltrim( a.REF_MEMO_NO  )) +')'  
     from parcel_det a (nolock) where PARCEL_MEMO_ID=@CPARCELMEMO_ID  
  
     UPDATE A SET XN_NO_LIST =@cXN_NO_LIST,last_update=getdate() FROM PARCEL_MST A WITH (ROWLOCK) WHERE PARCEL_MEMO_ID=@CPARCELMEMO_ID  
     
     ;with cte_parcel as
     (
     select parcel_memo_id  from parcel_det A (nolock)
     where REF_MEMO_ID =@CKEYFIELDVAL1
     group by parcel_memo_id
     )
     select @CParcelDetails =  COALESCE(@CParcelDetails +  ':', '' ) +isnull(c.Angadia_name  ,'')+','+a.bilty_no 
     from parcel_mst A (nolock)
     join cte_parcel b on a.parcel_memo_id =b.parcel_memo_id 
     join angm   c (nolock) on c.Angadia_code  =a.angadia_code  
     
    UPDATE A SET ParcelDetails=@CParcelDetails  FROM PUR_PIM01106_UPLOAD A (NOLOCK) WHERE SP_ID=@NSPID 
  
     
   SET @cStep=308  
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1      
   INSERT parcel_xns_link ( PARCEL_row_ID, memo_id, xn_type )    
   SELECT row_id AS PARCEL_row_ID,@CKEYFIELDVAL1 AS memo_id,'PUR' AS xn_type   
   FROM pur_parcel_det_upload (NOLOCK) WHERE sp_id=@NSPID   
  
  
    
IF @SHOWPOSWISEMRPINPURCHASE=1 AND @NUPDATEMODE IN (1,2)  
BEGIN  
    
     SET @cStep=312  
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1            
 UPDATE A SET WSP=Z.WSP,RSP=Z.RSP  
 FROM LOC_WISE_PURHISTORY A WITH (ROWLOCK)  
 JOIN  
 (  
 SELECT ARTICLE_CODE,PUR_FOR_DEPT_ID,SUM(MRP) RSP ,SUM(WHOLESALE_PRICE) WSP  
 FROM PUR_pid01106_UPLOAD A(NOLOCK)   
 JOIN PUR_pim01106_UPLOAD B(NOLOCK) ON A.sp_ID=B.sp_ID  
 WHERE B.sp_ID=@nSpId  
 GROUP BY ARTICLE_CODE,PUR_FOR_DEPT_ID  
 )Z ON A.ARTICLE_CODE=Z.ARTICLE_CODE AND A.DEPT_ID=Z.PUR_FOR_DEPT_ID  
  
 INSERT LOC_WISE_PURHISTORY ( DEPT_ID, ARTICLE_CODE, WSP, RSP )    
 SELECT   Z.PUR_FOR_DEPT_ID, Z.ARTICLE_CODE, Z.WSP, Z.RSP   
 FROM    
 (  
 SELECT ARTICLE_CODE,PUR_FOR_DEPT_ID,SUM(MRP) RSP ,SUM(WHOLESALE_PRICE) WSP  
 FROM PUR_pid01106_UPLOAD A(NOLOCK)   
 JOIN PUR_pim01106_UPLOAD B(NOLOCK) ON A.sp_ID=B.sp_ID  
 WHERE B.sp_ID=@nSpId  
 GROUP BY ARTICLE_CODE,PUR_FOR_DEPT_ID  
 )Z   
 LEFT JOIN LOC_WISE_PURHISTORY C(NOLOCK) ON Z.ARTICLE_CODE=C.ARTICLE_CODE AND Z.PUR_FOR_DEPT_ID =C.DEPT_ID  
 WHERE  C.DEPT_ID IS NULL  
           
          
END  
  
    
LBLUPDATERECEIPTDATE:    
   
   
   IF ISNULL(@CERRORMSG,'')<>''   
  GOTO END_PROC  
     
   IF @NUPDATEMODE=6  
  GOTO END_PROC  
    
   SET @cStep = 320  
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1      
   
 SET @cStep = 330  
 EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1      
 UPDATE pur_PIM01106_upload SET LAST_UPDATE=GETDATE() WHERE sp_id=@nSpId  
   
  
 SET @CWHERECLAUSE = ' b.SP_ID='''+LTRIM(RTRIM((@NSPID)))+''''  
  
   
  DECLARE @LINSERTONLY INT  
  SELect @LINSERTONLY=0  
  IF @NUPDATEMODE=1  
  SET @lInsertOnly=1  
  
  SELECT @LUPDATEONLY=0
  
 IF @NUPDATEMODE=2   
  SET @LUPDATEONLY = 1  
  
   
  
  
    SET @cStep=337  
 EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1      
 print 'savetran_pur - start insert pim01106'  
 EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN   
     @CSOURCEDB = @CTEMPDBNAME  
   , @CSOURCETABLE = @CTEMPMASTERTABLENAME  
   , @CDESTDB  = ''  
   , @CDESTTABLE = @CMASTERTABLENAME  
   , @CKEYFIELD1 = @CKEYFIELD1  
   , @BALWAYSUPDATE = 1  
   , @CFILTERCONDITION=@cWhereClause  
   , @LUPDATEONLY = @LUPDATEONLY  
   , @LINSERTONLY =  @lINSERTONLY  
   , @LUPDATEXNS =  @lINSERTONLY     
     
  
     
  SET @cStep=355  
     EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1      
  
  DECLARE @cWhereclausePid VARCHAR(1000)
  set @cWhereclausePid=@CWHERECLAUSE

  IF @bReUpdateAllPid=1  
	SET @cWhereclausePid = ' (SP_ID='''+LTRIM(RTRIM(@NSPID))+''' OR SP_ID='''+left(LTRIM(RTRIM(@nSPID)),38)+'ZZZ'')'

  EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN  
    @CSOURCEDB = @CTEMPDBNAME  
   , @CSOURCETABLE = @CTEMPDETAILTABLENAME  
   , @CDESTDB  = ''  
   , @CDESTTABLE = @CDETAILTABLENAME  
   , @CKEYFIELD1 = 'ROW_ID'  
   , @BALWAYSUPDATE = 1  
   , @LINSERTONLY =  1  
   , @LUPDATEXNS =  1  
   , @lUpdateonly = 0  
   , @CFILTERCONDITION=@cWhereclausePid  
     
     
    
  -- VALIDATING ENTRIES    
        
  SET @cStep = 358  
  EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1      
      
  EXEC VALIDATEXN    
     @CXNTYPE = 'PUR'    
   , @CXNID = @CKEYFIELDVAL1    
   , @NUPDATEMODE = @NUPDATEMODE       
   , @CCMD  = @CCMDOUTPUT OUTPUT    
   , @CUSERCODE = @CWIZAPPUSERCODE  
   ,@CDEPT_ID=@CLOCATIONID
     
  IF @CCMDOUTPUT <> ''    
  BEGIN    
   SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cStep)) + ' DATA VALIDATION FAILED : ' + @CCMDOUTPUT + '...'    
   GOTO END_PROC    
  END    
   
 /*IF PURCHASE HAS LEDGER TERMS AND IT HAS CASHDISCOUNT SPECIFIED THEN    
   CALCULATE THE CASHDISCOUNTAMOUNT FOR EACH ITEM IN CASHDISCOUNTAMOUNT COLUMN OF PID01106  
 */  
   
  DECLARE @ApplyCDOnTotal CHAR(1)  
    --BOX ENTRY   
    DECLARE @BGENBLISTERCODES VARCHAR(10)  
    SELECT TOP 1 @BGENBLISTERCODES=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION ='GENERATE_BLISTER_CODES'  
      
 SET @cStep=361  
 EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1      
  
    IF ISNULL(@BGENBLISTERCODES,'')='1'    
    BEGIN  
       
  IF @NUPDATEMODE =2 AND @BCALLEDFROMBOXENTRY=0 AND EXISTS (SELECT TOP 1 'U'  FROM BOXM (NOLOCK) WHERE REF_MRR_ID =@CKEYFIELDVAL1)  
  begin  
      -- as Discuss with sanjiv sir in case of edit all barcode remove select pid  and insert all rows   
   Delete a FROM BOXD A (NOLOCK)   
   JOIN BOXM B (NOLOCK)  ON A.BOX_ID =B.BOX_ID   
   where b.REF_MRR_ID =@CKEYFIELDVAL1 and isnull(b.REF_MRR_ID,'')  <>''  
  
   INSERT INTO BOXD (BOX_ID,PRODUCT_CODE,ROW_ID,QUANTITY)  
   SELECT BOX_ID,PRODUCT_CODE,@CLOCATIONID + CONVERT(VARCHAR(40), NEWID()) ROW_ID,QUANTITY   
   FROM PID01106 A (NOLOCK)  
   WHERE MRR_ID =@CKEYFIELDVAL1  
  
  
  end  
    
  
    IF @BCALLEDFROMBOXENTRY=1  
    BEGIN  
  
         EXEC SAVETRAN_BOXM @NUPDATEMODE,@NSPID,@NBOXNO,@CFINYEAR,@CKEYFIELDVAL1,1,@CERRORMSG OUTPUT  
         IF ISNULL(@CERRORMSG,'')<>''    
         GOTO END_PROC   
  
    END  
       
    END  
      
 SET @cStep=363  
 ---- Special case need to be handled in Case New  purchase is being entered but sku_names COlumns dependent upon sku_oh   
 ---- are not being updated via Insert Trigger on sku because sku_oh is not found at that time  
 IF @NUPDATEMODE=1  
  EXEC SP3S_UPDATE_SKUNAMES  
  @CMEMO_ID=@nSpId,  
  @CXN_TYPE='PUR',  
  @NUPDATEMODE=1  
  
  
   IF EXISTS (SELECT TOP 1 'U' FROM  IMAGE_INFO_CONFIG (NOLOCK) WHERE 
      (
		ISNULL(ARTICLE,0)=1 OR ISNULL(PARA1,0)=1 OR ISNULL(PARA2,0)=1 OR ISNULL(PARA3,0)=1 OR
		 ISNULL(PARA4,0)=1 OR ISNULL(PARA5,0)=1 OR ISNULL(PARA6,0)=1 or ISNULL(PRODUCT,0)=1
	  ))
      BEGIN
		      
	       EXEC SP3S_INSERTIMAGE_FROM_IRR @NSPID,'' ,1,'PUR',@CTEMPDETAILTABLENAME
	          
      END 
  
  
  
    
 END TRY    
 BEGIN CATCH    
  SET @CERRORMSG = 'Error in Procedure SAVETRAN_PUR AT STEP- ' + LTRIM(rtrim(@cStep)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()    
  -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG, '''' AS MEMO_ID'    
       
  GOTO END_PROC    
 END CATCH    
     
END_PROC:    
    print 'last step#'+str(@cStep)  
  
    --Box has to be Removed Due To unknown reason so Validate multiple Box removing  
   
 if isnull(@CERRORMSG,'')=''  
 begin  
  
  IF (SELECT  COUNT(DISTINCT A.BOX_NO) FROM #TMPBOX A  
  LEFT JOIN PID01106 B WITH (NOLOCK) ON A.BOX_NO =B.BOX_NO AND B.MRR_ID =@CKEYFIELDVAL1  
  WHERE B.BOX_NO IS NULL)>1 and @NUPDATEMODE<>3  
  BEGIN  
    SET @CERRORMSG= ' MULTIPLE BOX ENTRY REMOVE PLEASE CHECK.'  
  END  
   
 end  
  SET @cStep=365  
  EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1       
   
  IF ISNULL(@CERRORMSG,'')=''  
  UPDATE pim01106 WITH (ROWLOCK) SET last_update=getdate(),reconciled=0 WHERE mrr_id=@CKEYFIELDVAL1  
  
  IF @@TRANCOUNT>0  AND  @SP3S_UPDATE_SAPINVOICE <> 1  
  BEGIN    
      SET @cStep=368  
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1          
    IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')=''    
    BEGIN    
      IF @EDIT_CLICKED=1  
      EXEC SP3S_CAPTURE_AUDIT_TRAIL 'PUR',@CMEMOID,'','',@NSPID,@CMACHINENAME,@CWINDOWUSERNAME,@CWIZAPPUSERCODE,0,'1900-01-01',@EDIT_CLICKED  
      
      SET @cStep=372  
      EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1      
       
    -- if @@spid=164  
    -- begin  
    --select 'check final vean', product_code,online_product_code,vendor_ean_no, * from  pid01106 (nolock) where mrr_id=@CKEYFIELDVAL1  
    --select 'check final vean sku', a.product_code,a.online_product_code,a.vendor_ean_no from    
    --sku a join pid01106 b (nolock) on a.product_code=b.product_code where mrr_id=@CKEYFIELDVAL1  
    -- end  
  
        commit TRANSACTION  
        DELETE A  FROM XNTYPE_CHECKSUM_MST A  WITH (ROWLOCK)  WHERE SP_ID=@NSPID  
     
    END    
    ELSE    
    BEGIN  
    --if @@spid=64  
    --select 'check xnsavelog',* from xnsavelog (nolock) where sp_id=@nSpid  
    --order by start_time  
  
       ROLLBACK    
       DELETE A  FROM XNTYPE_CHECKSUM_MST A  WITH (ROWLOCK)  WHERE SP_ID=@NSPID  
  
    END  
  
  
  END    
      
  IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')='' AND @NUPDATEMODE IN (4,5)    
  BEGIN    
   IF @NUPDATEMODE=4    
    SET @CMSG='BOX NO. : '+LTRIM(RTRIM(STR(@NBOXNO)))+' DELETED SUCCESSFULLY......PLEASE ACKNOWLEDGE'     
   ELSE    
    SET @CMSG='BARCODE NO. : '+@CPRODUCTCODE+' DELETED SUCCESSFULLY......PLEASE ACKNOWLEDGE'      
        
   SELECT @CMSG AS SUCCESSMSG     
  END    
      
  ELSE     
  IF ISNULL(@BNEGSTOCKFOUND,0)=0    
  BEGIN    
       IF @SP3S_UPDATE_SAPINVOICE = 1  OR @BCALLEDFROMEKAYA=1    
       BEGIN    
   INSERT INTO #RESULT_OUTPUT(ERRMSG,MEMO_ID)    
   VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )      
       END    
       ELSE   
       BEGIN   
   INSERT @OUTPUT ( ERRMSG, MEMO_ID)    
   VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )    
       
      SELECT  * FROM @OUTPUT     
    END   
       
  END     
   
    SET @cStep=375  
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1      
   
   EXEC SP3S_DELETEUPLOADTABLES_PUR @NSPID   
   EXEC SP3S_DELETEUPLOADTABLES_PUR @cInsSpId

    SET @cStep=380  
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1      
  
    
   
  -----CHANGES BY SUMIT ON 14112017 FOR INSERT DATA INTO UPLOAD MIRROR TABLES-----------  
LBLINSERTUPLOADMIRRORDOC:  


SELECT @CLOCATIONID = location_code FROM pim01106 (NOLOCK) WHERE mrr_id=@CKEYFIELDVAL1
   
SELECT @CHODEPTID  = [VALUE] FROM CONFIG (NOLOCK) WHERE  CONFIG_OPTION='HO_LOCATION_ID'   
  
IF  @NUPDATEMODE=6  
BEGIN  
  
   DECLARE @PARTY_DEPT_ID VARCHAR(10),@BALLOWLOCPURCHASEATHO BIT  ,@CPIMDEPTID VARCHAR(5)    
   ,@NINVMODE NUMERIC(1,0),@BSENDTOLOC BIT ,@CMRRCREATIONDEPTID VARCHAR(5)    
   
     SELECT @CPIMDEPTID=A.DEPT_ID,@NINVMODE=INV_MODE,@BALLOWLOCPURCHASEATHO=ISNULL(ALLOW_PURCHASE_AT_HO,0),    
     @BSENDTOLOC=ISNULL(SEND_TO_LOC,0)   
     FROM PIM01106 A (NOLOCK) JOIN LOCATION B (NOLOCK) ON A.DEPT_ID=B.DEPT_ID   
      WHERE MRR_ID=@CKEYFIELDVAL1   
         
     
  
  
END   
    
   
IF  @NUPDATEMODE<>6    
BEGIN  
   
    SET @cStep=385  
 EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1      
  
    
       DECLARE @PARTY_DEPT_IDXN VARCHAR(10),@BALLOWLOCPURCHASEATHOXN BIT  ,@CPIMDEPTIDXN VARCHAR(5)    
              ,@NINVMODEXN NUMERIC(1,0),@BSENDTOLOCXN BIT ,@CMRRCREATIONDEPTIDXN VARCHAR(5)    
   
    SELECT @CPIMDEPTIDXN=A.PUR_FOR_DEPT_ID,@NINVMODEXN=INV_MODE,  
    @BALLOWLOCPURCHASEATHOXN=ISNULL(ALLOW_PURCHASE_AT_HO,0),    
    @BSENDTOLOCXN=ISNULL(SEND_TO_LOC,0)   
    FROM PIM01106 A (NOLOCK) JOIN LOCATION B (NOLOCK) ON A.DEPT_ID=B.DEPT_ID   
     WHERE MRR_ID=@CKEYFIELDVAL1   
     
END  
  
  --- Changed this from @nupdatemode<>3 to @nUpdatemode=2 as this step was running slow on Suvidha (21-10-2021)  
  --- This process was being called on Add/save of Purchase which is not required in case of New bar codes  
  IF ISNULL(@CERRORMSG,'')='' AND @NUPDATEMODE=2  AND @nBoxUpdatemode=0   
  BEGIN  
	   SET @cStep=390  
	   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,'',1      
     
	   EXEC SP3S_UPDATE_SKUNAMES @CKEYFIELDVAL1,'PUR','PID01106','MRR_ID',@NUPDATEMODE  
    
  END  
  
   
     SET @cStep=395  
   EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@NSPID,@CKEYFIELDVAL1,1      
 ----LOG STARTTIME/ENDTIME   
 --IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')='' AND ISNULL(@BNEGSTOCKFOUND,0)=0  
 -- EXEC SP3S_LOGPROCESSTIME 'PUR','SAVETRAN EXECUTION',@CKEYFIELDVAL1,@NSPID,1,@DSTARTTIME,@NUPDATEMODE   
  
END    
------------------------------------------------------ END OF PROCEDURE SAVETRAN_PUR   