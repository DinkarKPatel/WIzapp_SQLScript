CREATE PROCEDURE SAVETRAN_JWR  
(  
 @NUPDATEMODE  NUMERIC(1,0),  
 @NSPID    varchar(50),  
 @CFINYEAR   VARCHAR(10),  
 @CMACHINENAME  VARCHAR(100)='',  
 @CWINDOWUSERNAME VARCHAR(100)='',  
 @CWIZAPPUSERCODE VARCHAR(10)='0000000',  
 @CMEMOID   VARCHAR(40)='' ,
 @CMEMONOPREFIX VARCHAR(40) ='',
 @BGETBARCODE BIT=0

)  


--WITH ENCRYPTION
AS  
BEGIN  
 -- @NUPDATEMODE: 1- NEW MEMO ADDED,   
 --     2- EDITING OF MEMO,   
 --     3- CURRENT MEMO CANCELLED,   


    DECLARE @bWIP BIT,@CLOCID    VARCHAR(4),@bReceiveMode BIT
   IF @NUPDATEMODE IN(1,2)
      SELECT @bWIP=WIP,@CLOCID=location_Code,@bReceiveMode=isnull(Receive_Mode,0) FROM JWR_JOBWORK_RECEIPT_MST_UPLOAD WHERE SP_ID= @NSPID 
    ELSE
	    SELECT @bWIP=WIP,@CLOCID=location_Code,@bReceiveMode=isnull(Receive_Mode,0)  FROM JOBWORK_RECEIPT_MST WHERE receipt_id= @CMEMOID 
	
	if @bReceiveMode=1
		SET @bWIP=0

	IF isnull(@bWIP,0)=1
	BEGIN
	    
		EXEC	SAVETRAN_JWR_WIP  
		 @NUPDATEMODE  =@NUPDATEMODE,  
		 @NSPID =@NSPID,  
		 @CFINYEAR  =@CFINYEAR,  
		 @CMACHINENAME  =@CMACHINENAME,  
		 @CWINDOWUSERNAME =@CWINDOWUSERNAME,  
		 @CWIZAPPUSERCODE =@CWIZAPPUSERCODE,  
		 @CMEMOID   =@CMEMOID ,
		 @CMEMONOPREFIX =@CMEMONOPREFIX,
		 @BGETBARCODE =@BGETBARCODE

		 RETURN

	END
  
 DECLARE @CTEMPDBNAME   VARCHAR(100),  
   @CMASTERTABLENAME  VARCHAR(100),  
   @CDETAILTABLENAME1  VARCHAR(100),  
   @CDETAILTABLENAME2  VARCHAR(100),  
   @CTEMPMASTERTABLENAME VARCHAR(100),  
   @CTEMPDETAILTABLENAME1 VARCHAR(100),  
   @CTEMPDETAILTABLENAME2 VARCHAR(100),  
   @CTEMPMASTERTABLE  VARCHAR(300),  
   @CTEMPDETAILTABLE1  VARCHAR(300),  
   @CTEMPDETAILTABLE2  VARCHAR(300),  
   @CERRORMSG    VARCHAR(500),  
   @LDONOTUPDATESTOCK  BIT,  
   @CKEYFIELD1    VARCHAR(50),  
   @CKEYFIELDVAL1   VARCHAR(50),  
   @CMEMONO    VARCHAR(20),  
   @NMEMONOLEN    NUMERIC(20,0),  
   @CMEMONOVAL    VARCHAR(50),  
   @CLOCATIONID   VARCHAR(4),  
   @CHODEPTID    VARCHAR(4),  
   @CCMD     NVARCHAR(4000),  
   @CCMDOUTPUT    NVARCHAR(4000),  
   @NSAVETRANLOOP   BIT,  
   @NSTEP   VARCHAR(10),  
   @BNEGSTOCKFOUND BIT,  
   @CUSERALIAS VARCHAR(5),  
   @CEXPRERRORMSG VARCHAR(MAX)    
  
 DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))  
  
  
 SET @NSTEP = 0  -- SETTTING UP ENVIRONMENT  
 EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

 
 -- TEMPORARY DATABASE Discarded now onwards as per Meeting on 30-10-2020 mentioned in Client issues List
 SET @CTEMPDBNAME = ''  
  
 SET @CMASTERTABLENAME = 'JOBWORK_RECEIPT_MST'  
 SET @CDETAILTABLENAME1 = 'JOBWORK_RECEIPT_DET'  
   
  
 SET @CTEMPMASTERTABLENAME = 'JWR_jobwork_receipt_mst_UPLOAD'
 SET @CTEMPDETAILTABLENAME1 = 'JWR_jobwork_receipt_det_UPLOAD'
   
  
 SET @CTEMPMASTERTABLE = @CTEMPDBNAME + @CTEMPMASTERTABLENAME  
 SET @CTEMPDETAILTABLE1 = @CTEMPDBNAME + @CTEMPDETAILTABLENAME1  
   
   
 SET @CERRORMSG   = ''  
 SET @LDONOTUPDATESTOCK = 0  
 SET @CKEYFIELD1   = 'RECEIPT_ID'  
 SET @CMEMONO   = 'RECEIPT_NO'  
 SET @NMEMONOLEN   = 10  
  
    
  SET @CLOCATIONID=@CLOCID  
  
 SELECT @CHODEPTID  = [VALUE] FROM CONFIG WHERE  CONFIG_OPTION='HO_LOCATION_ID'    
  
 SET @NSTEP = 10  -- GETTING DEPTID INFO FROM TEMP TABLE  
 EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1  
    
   
 BEGIN TRY  
  
  SELECT PRODUCT_CODE INTO #TMPPMT FROM SKU WHERE 1=2  
  
    
  SELECT PRODUCT_CODE,QUANTITY_IN_STOCK AS XN_STOCK INTO #TMPXNSTK FROM PMT01106 WHERE 1=2  
  
  BEGIN TRANSACTION  
    
  
        
  IF @NUPDATEMODE<>3  
  BEGIN  
	set @nStep='12.4'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1
	   EXEC SP_VALIDATEXN_BEFORESAVE 'JWR',@NSPID,'0000000',@NUPDATEMODE,@CCMDOUTPUT OUTPUT,@BNEGSTOCKFOUND OUTPUT  
	   IF ISNULL(@CCMDOUTPUT,'') <> ''  
	   BEGIN  
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' DATA VALIDATION ON TEMP DATA FAILED : ' + @CCMDOUTPUT + '...'  
		GOTO END_PROC  
	   END  

  END  
  
    
  IF @NUPDATEMODE = 3 AND ISNULL(@CMEMOID,'') = ''  
  BEGIN  
   SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' MEMO ID REQUIRED IF CALLED FROM CANCELLATION'  
   GOTO END_PROC      
  END  
    

  -- START UPDATING XN TABLES   
  IF @NUPDATEMODE = 1 -- ADDMODE   
  BEGIN   
        IF ISNULL(@CLOCATIONID,'')=''
		 BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' LOCATION ID CAN NOT BE BLANK  '  
			GOTO END_PROC    
		 END
	   SET @NSTEP=15  
	   
		EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1
	    
		DECLARE @CMANUALPREFIX VARCHAR(25)
        SET @CMANUALPREFIX=''
		
		SET @CCMD=N'SELECT @CMANUALPREFIX=MEMO_PREFIX FROM '+@CTEMPMASTERTABLE+' where sp_id ='''+@NSPID  +''' '
		PRINT @CCMD		
		EXEC SP_EXECUTESQL @CCMD,N'@CMANUALPREFIX VARCHAR(25) OUTPUT',@CMANUALPREFIX OUTPUT
		
		IF ISNULL(@CMANUALPREFIX,'')<>''
		SET @NMEMONOLEN=len(@CMEMONOPREFIX)+6


		if @BGETBARCODE=1
		begin

	set @nStep='16.2'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1		
				  IF NOT EXISTS (SELECT TOP 1'U' FROM JWR_MISSING_BARCODE_UPLOAD WHERE SP_ID=@NSPID)
				  BEGIN
		      			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' BARCODE DETAILS NOT FOUND  '  
						GOTO END_PROC
				  END
	     
		          
				  
			if object_id ('tempdb..#tmprecbarcode','U') is not null
			   drop table #tmprecbarcode

			;WITH RECBARCODE AS
			(
			SELECT  TMP.ARTICLE_CODE ,TMP.PARA1_CODE ,TMP.PARA2_CODE  , TMP.REC_QTY,
				  A.PRODUCT_CODE ,A.AGENCY_CODE ,A.JOB_CODE ,
				   SR=ROW_NUMBER () OVER (PARTITION BY TMP.ARTICLE_CODE ,TMP.PARA1_CODE ,TMP.PARA2_CODE ORDER BY A.PRODUCT_CODE),
				   CAST('' AS VARCHAR(50)) AS REF_ROW_ID,
				   tmp.RATE AS Rate,
				   CAST('' AS VARCHAR(1000))  as ISSUE_REMARKS,
				   CAST('' AS VARCHAR(1000))  as ISSUE_NO,
				   CAST('' AS datetime)  as ISSUE_dt,
				   cast(1 as numeric(10,3)) as quantity
			FROM JOBWORK_PMT A (NOLOCK)
			join sku (nolock) on a.PRODUCT_CODE =sku.product_code 
			JOIN ORD_PLAN_BARCODE_DET DET (NOLOCK) ON DET.PRODUCT_CODE=A.PRODUCT_CODE
			JOIN ORD_PLAN_DET T1 (NOLOCK) ON  DET.REFROW_ID=T1.ROW_ID
			JOIN ORD_PLAN_MST T2 (NOLOCK) ON  T1.MEMO_ID=T2.MEMO_ID 
			JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE =B.product_code 
			JOIN JWR_MISSING_BARCODE_UPLOAD TMP (NOLOCK) ON B.article_code =TMP.ARTICLE_CODE AND sku.para1_code =TMP.PARA1_CODE AND sku.para2_code =TMP.PARA2_CODE   AND (isnull(TMP.JOBCARD_ID,'')=T2.MEMO_ID OR ISNULL(TMP.JOBCARD_ID,'')='')
			AND A.AGENCY_CODE=TMP.AGENCY_CODE AND A.JOB_CODE =TMP.JOB_CODE 
			WHERE ISNULL(A.TTM,0)=0 AND ISNULL(QUANTITY_IN_STOCK,0) =0 AND T2.CANCELLED=0 
			and tmp.SP_ID=@NSPID
			)

			 
			SELECT *, CAST('' AS VARCHAR(500)) AS REC_BUYER_NAME,
						 CAST('' AS VARCHAR(100)) AS REC_MERCHANT_NAME into #tmprecbarcode FROM RECBARCODE WHERE SR <=REC_QTY

			
	set @nStep='16.7'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

			update a set REF_ROW_ID =b.row_id  ,issue_no =c.issue_no,issue_dt=c.issue_dt  ,
			             ISSUE_REMARKS=b.remarks,quantity =b.quantity ,REC_BUYER_NAME=B.BUYER_NAME ,REC_MERCHANT_NAME =B.MERCHANT_NAME ,
						 rate=case when isnull(a.Rate ,0)<>0 then a.rate else b.job_rate end
			from  #tmprecbarcode a
			join jobwork_issue_det b  (NOLOCK) on a.PRODUCT_CODE =b.product_code and a.JOB_CODE =b.job_code 
			join jobwork_issue_mst c  (NOLOCK) on b.issue_id =c.issue_id and a.agency_code =c.agency_code 
			where c.cancelled =0

		

	set @nStep='17.2'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

			SELECT A.ARTICLE_CODE ,A.PARA1_CODE ,A.PARA2_CODE ,A.REC_QTY,sum(a.quantity ) AS BARCODE_QTY 
			into #tmpmismatchqty
			FROM #TMPRECBARCODE A
			GROUP BY A.ARTICLE_CODE ,A.PARA1_CODE ,A.PARA2_CODE ,A.REC_QTY 
			having A.REC_QTY<>sum(a.quantity )

			 SET @NSTEP = 20
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

			if exists (select top 1 'u' from #tmpmismatchqty)
			begin
     
	             declare @cstr varchar(1000)

				 select top 1 @cstr=' Article:'+ article_no +',Para1_Name:'+para1_name +',Para2_Name:'+para2_name +',Rec Qty:' +str(REC_QTY) +',Barcode Qty:'+str(BARCODE_QTY)
				 from #tmpmismatchqty a
				 join article b on a.ARTICLE_CODE =b.article_code 
				 join para1 p1 on p1.para1_code =a.PARA1_CODE 
				 join para2 p2 on p2.para2_code =a.PARA2_CODE 

				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) +@cstr+ ' Issue Details Not found Please check  '  
				goto end_proc

			end

	set @nStep='21.2'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

				DECLARE @NTOTALQTY NUMERIC(10,0),@NCALTOTALQTY NUMERIC(10,0)

				SELECT @NCALTOTALQTY=SUM(QUANTITY) FROM #TMPRECBARCODE
				SELECT @NTOTALQTY=SUM(REC_QTY)  FROM JWR_MISSING_BARCODE_UPLOAD (NOLOCK) WHERE SP_ID =LTRIM(RTRIM(STR(@NSPID)))

				IF ISNULL(@NTOTALQTY,0)<>ISNULL(@NCALTOTALQTY,0)
				BEGIN
				    	SET @CERRORMSG = 'MISMATCH IN TOTAL Quantity:'+RTRIM(LTRIM(STR(ISNULL(@NTOTALQTY,0))))+' & BARCODE ASSIGN QTY  ' +RTRIM(LTRIM(STR(ISNULL(@NCALTOTALQTY,0))))
					    GOTO END_PROC

				END
				



			 SET @NSTEP = 30
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

			if exists (select top 1 'u' from #tmprecbarcode where REF_ROW_ID ='')
			begin

				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' Issue Details Not found Please check  '  
				goto end_proc
			end


		 end
	
	    
	set @nStep='32.7'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1
	     
	   -- GENERATING NEW JOB ORDER NO    
	   SET @NSAVETRANLOOP=0  
	   WHILE @NSAVETRANLOOP=0  
	   BEGIN  
			EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,   
				@CFINYEAR,0, @CMEMONOVAL OUTPUT
				     
	set @nStep='34.7'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1
		      
			PRINT @CMEMONOVAL  
			SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+'   
				  WHERE '+@CMEMONO+'='''+@CMEMONOVAL+'''   
				  AND FIN_YEAR = '''+@CFINYEAR+''' )  
				SET @NLOOPOUTPUT=0  
			   ELSE  
				SET @NLOOPOUTPUT=1'  
			PRINT @CCMD  
			EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT  
	   END  
	  
	   IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
	   BEGIN  
		  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'   
		  GOTO END_PROC      
	   END  
	  
	set @nStep='35.2'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1
	  
	   -- GENERATING NEW JOB ORDER ID  
	   SET @CKEYFIELDVAL1 = @CLOCATIONID + RIGHT(@CFINYEAR,2)+REPLICATE('0', (22-LEN(@CLOCATIONID + RIGHT(@CFINYEAR,2)))-LEN(LTRIM(RTRIM(@CMEMONOVAL))))  + LTRIM(RTRIM(@CMEMONOVAL))
	   
	    
	   IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'    
	   BEGIN  
		  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'  
		  -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'  
		  GOTO END_PROC  
	   END  
	   
	 
	  
	   SET @NSTEP = 40  -- UPDATING NEW ID INTO TEMP TABLES  
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1
	  
	   -- UPDATING NEWLY GENERATED JOB ORDER NO AND JOB ORDER ID IN PIM AND PID TEMP TABLES  
	   SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' +   
		  @CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' where  sp_id ='''+@NSPID  +''''  
	   PRINT @CCMD  
	   EXEC SP_EXECUTESQL @CCMD  
	    
	   SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' where  sp_id ='''+@NSPID  +''''  
	   PRINT @CCMD  
	   EXEC SP_EXECUTESQL @CCMD  
  
  END     -- END OF ADDMODE  
  ELSE    -- CALLED FROM EDITMODE  
  BEGIN    -- START OF EDITMODE  
    
	   SET @NSTEP = 50  -- GETTING ID INFO FROM TEMP TABLE  
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1
	  
	     
	   -- GETTING MEMO ID WHICH IS BEING EDITED  
	   SET @CCMD = 'SELECT @CKEYFIELDVAL1 = ' + @CKEYFIELD1 + ', @CMEMONOVAL = ' + @CMEMONO + ' FROM '  
		  + (CASE WHEN @NUPDATEMODE=3 THEN @CMASTERTABLENAME + ' WHERE RECEIPT_ID = ''' + @CMEMOID + ''''  
			ELSE @CTEMPMASTERTABLE +' where  sp_id ='''+@NSPID  +'''' END )  
	     
	   EXEC SP_EXECUTESQL @CCMD, N'@CKEYFIELDVAL1 VARCHAR(50) OUTPUT, @CMEMONOVAL VARCHAR(50) OUTPUT',   
			  @CKEYFIELDVAL1 OUTPUT, @CMEMONOVAL OUTPUT  
	            
	   IF (@CKEYFIELDVAL1 IS NULL ) OR (@CMEMONOVAL IS NULL )  
	   BEGIN  
		  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'  
		  GOTO END_PROC      
	   END  
	  
	
       IF @NUPDATEMODE = 3     
	   BEGIN  
			SET @NSTEP = 60  
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

			-- UPDATING SENTTOHO FLAG  
			SET @CCMD = N'UPDATE ' + @CMASTERTABLENAME + ' SET CANCELLED = 1,LAST_UPDATE=GETDATE() ' +   
			   N' WHERE ' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + ''''  
			EXEC SP_EXECUTESQL @CCMD  
	   END  
     
	   -- REVERTING BACK THE STOCK OF PMT W.R.T CURRENT ISSUE  
	   SET @NSTEP = 80  -- REVERTING STOCK  
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1
	  
	   EXEC UPDATEPMT_JWR   
		  @CXNTYPE   = 'JWR'   
		, @CXNNO   = @CMEMONOVAL  
		, @CXNID   = @CKEYFIELDVAL1  
		, @NREVERTFLAG  = 1  
		, @NALLOWNEGSTOCK = 0  
		, @NCHKDELBARCODES = 1  
		, @NUPDATEMODE  = @NUPDATEMODE      
		, @CCMD    = @CCMDOUTPUT OUTPUT  
	     
	   IF (@NUPDATEMODE = 3)   
	   BEGIN  

	set @nStep='82.7'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1
	   
	        IF EXISTS (SELECT TOP 1 'U' FROM JOBWORK_RECEIPT_MST WHERE receipt_id =@CKEYFIELDVAL1 AND ISNULL(Receive_Mode,0)=1)
	        BEGIN 
	        
				EXEC SP3S_VALIDATE_ENFORCE_JOB @CKEYFIELDVAL1,@CERRORMSG OUTPUT
				IF ISNULL(@CERRORMSG,'')<>''
				GOTO END_PROC 
				 
			END
			
			IF @CCMDOUTPUT <> ''  
			BEGIN  
			     print @CCMDOUTPUT
				 SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR UPDATING THE STOCK STATUS IN PMT....'  
				 SET @BNEGSTOCKFOUND=1       
				 EXEC SP_EXECUTESQL @CCMDOUTPUT  
				 GOTO END_PROC  
			END 


	set @nStep='83.7'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

			EXEC SP3S_upd_qty_lastupdate
			@nUpdateMode=3,
			@cXnType='JWR',
			@cMasterTable='JOBWORK_RECEIPT_MST',
			@cMemoIdCol='Receipt_id',
			@cMemoId=@CKEYFIELDVAL1,
			@CERRORMSG=@CERRORMSG OUTPUT


			
		 GOTO END_PROC 	
	   END  

	set @nStep='84.2'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

	   SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' where  sp_id ='''+@NSPID  +''''  
	   PRINT @CCMD  
	   EXEC SP_EXECUTESQL @CCMD  
  END     -- END OF EDITMODE  

	set @nStep='85.2'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

	-- UPDATING SENTTOHO FLAG  
	SET @CCMD = N'UPDATE a SET LAST_UPDATE=GETDATE(),total_quantity=b.total_quantity
	 FROM '+@CTEMPMASTERTABLE+' A WITH (ROWLOCK) 
			JOIN (SELECT sum(quantity) as total_quantity FROM '+@CTEMPDETAILTABLE1+' b (NOLOCK)  
			where  sp_id ='''+@NSPID  +'''
					) b ON 1=1 
					where  sp_id ='''+@NSPID  +''''
	EXEC SP_EXECUTESQL @CCMD  
  
	set @nStep='87.2'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

   SET @CCMD = N'UPDATE A SET jwrDISCOUNTAMOUNT=ROUND((CASE WHEN B.SUBTOTAL=0 THEN 0 ELSE (B.DISCOUNT_AMOUNT/B.SUBTOTAL)*(ISNULL(QUANTITY,0)*ISNULL(JOB_RATE,0)) END),2)
   FROM ' + @CTEMPDETAILTABLE1 + ' A
   JOIN '+@CTEMPMASTERTABLE+' B ON A.receipt_id=B.receipt_id and a.sp_id=b.sp_id 
   WHERE B.receipt_id='''+@CKEYFIELDVAL1+''' 
   and   a.sp_id ='''+@NSPID  +''' '
   EXEC SP_EXECUTESQL @CCMD  
		    
      
     
  SET @NSTEP = 95  
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1
    
  -- RECHECKING IF ID IS STILL LATER  
  IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
  BEGIN  
   SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR GETTING NEXT MEMO ID....'  
   GOTO END_PROC  
  END  

		IF @NUPDATEMODE IN (1,2)
		BEGIN
			SET @nSTEP = 100
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

			UPDATE a SET total_quantity=b.total_quantity FROM jwr_jobwork_receipt_MST_UPLOAD A WITH (ROWLOCK) 
			JOIN (SELECT sp_id,sum(quantity) as total_quantity FROM jwr_jobwork_receipt_det_UPLOAD b (NOLOCK)  
					WHERE sp_id=CAST(@NSPID AS VARCHAR) GROUP BY sp_id) b ON a.sp_id=b.sp_id

	set @nStep='102.7'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

		EXEC SP3S_upd_qty_lastupdate
			@nUpdateMode=@NUPDATEMODE,
			@cXnType='JWR',
			@cMasterTable='jobwork_receipt_MST',
			@nSpId=@NSPID,
			@cMemoIdCol='receipt_id',
			@cMemoId=@CKEYFIELDVAL1,
			@cXnDtCol='receipt_dt',
			@CERRORMSG=@CERRORMSG OUTPUT

			IF ISNULL(@CERRORMSG,'')<>''
		       GOTO END_PROC

		END			    
   SET @NSTEP = 105  -- UPDATING MASTER TABLE  
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

  
  DECLARE @CWHERECLAUSE VARCHAR(1000)
  SET @CWHERECLAUSE='  SP_ID='''+ LTRIM(RTRIM((@NSPID)))+''''  


   EXEC UPDATEMASTERXN_OPT   
      @CSOURCEDB = @CTEMPDBNAME  
    , @CSOURCETABLE = @CTEMPMASTERTABLENAME  
    , @CDESTDB  = ''  
    , @CDESTTABLE = @CMASTERTABLENAME  
    , @CKEYFIELD1 = @CKEYFIELD1  
    ,@BALWAYSUPDATE = 1  
	,@CFILTERCONDITION=@CWHERECLAUSE
  
   -- UPDATING TRANSACTION TABLE (PID01106) FROM TEMP TABLE  
   SET @NSTEP = 110  -- UPDATING TRANSACTION TABLE  
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1
     
   IF ISNULL(@BGETBARCODE,0)<>1 
   BEGIN  
     
	set @nStep='112'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

	   -- UPDATING ROW_ID IN TEMP TABLES  
	   SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET OLD_ROW_ID=ROW_ID,ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(38), NEWID())  
			WHERE LEFT(ROW_ID,5) = ''LATER'' and sp_id ='''+@NSPID+''' '  
	   EXEC SP_EXECUTESQL @CCMD  
  
	   -- DELETING EXISTING ENTRIES FROM DETAIL TABLE WHERE ROW_ID NOT FOUND IN TEMPTABLE  
	   SET @NSTEP = 114  -- UPDATING TRANSACTION TABLE - DELETING EXISTING ENTRIES  
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

  
	   SET @CCMD = N'DELETE FROM ' + @CDETAILTABLENAME1 + '   
		  WHERE ' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''  
		  AND ROW_ID IN   
		  (  
		   SELECT A.ROW_ID   
		   FROM ' + @CDETAILTABLENAME1 + ' A   
		   LEFT OUTER JOIN ' + @CTEMPDETAILTABLE1 + ' B ON A.ROW_ID = B.ROW_ID   and sp_id ='''+@NSPID+'''
		   WHERE A.' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''  
		   AND   B.ROW_ID IS NULL  
		  )'  
	   EXEC SP_EXECUTESQL @CCMD  


     SET @NSTEP=117  
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1
  
	   SET @CCMD = N' UPDATE A SET HSN_CODE =''0000000000'',IGST_AMOUNT =0,CGST_AMOUNT =0,SGST_AMOUNT =0 
	   FROM  ' + @CTEMPDETAILTABLENAME1 + ' A
	   WHERE ISNULL(HSN_CODE,'''')  IN('''')  and sp_id ='''+@NSPID+''''
	   EXEC SP_EXECUTESQL @CCMD  
	   PRINT @CCMD

	set @nStep='119'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1
	
		  EXEC UPDATEMASTERXN_OPT   
		  @CSOURCEDB = @CTEMPDBNAME  
		, @CSOURCETABLE = @CTEMPDETAILTABLENAME1  
		, @CDESTDB  = ''  
		, @CDESTTABLE = @CDETAILTABLENAME1  
		, @CKEYFIELD1 = 'ROW_ID'  
		,@BALWAYSUPDATE = 1  
		,@CFILTERCONDITION=@CWHERECLAUSE



	END


	set @nStep='121'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1


	--  GST CALCULATION
	  DECLARE @CPARTY_GSTN_NO VARCHAR(20),@BREGISTERED BIT,@BGSTBILL INT
	  DECLARE @CPARTYSTATECODE VARCHAR(2),@DRECIPT_DT DATETIME,@CGSTCUTOFFDATE VARCHAR(100)
	  SET @BGSTBILL=0
	 SELECT @CGSTCUTOFFDATE=VALUE FROM CONFIG WHERE CONFIG_OPTION ='GST_CUT_OFF_DATE'
	
	IF ISNULL(@CGSTCUTOFFDATE,'')<>''
	BEGIN
	set @nStep='123'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

		SELECT @DRECIPT_DT=A.RECEIPT_DT 
		FROM JOBWORK_RECEIPT_MST A 
		WHERE A.RECEIPT_ID=@CKEYFIELDVAL1	
		
		IF @DRECIPT_DT>=CONVERT(DATE,@CGSTCUTOFFDATE)
			SET @BGSTBILL=1
	END
		
		
    IF @BGSTBILL=1 and  ISNULL(@BGETBARCODE,0)=0
	BEGIN
		   
			SET @NSTEP=187
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1
			
			DELETE FROM GST_TAXINFO_CALC WITH (ROWLOCK) WHERE SP_ID=CAST(@NSPID AS VARCHAR)
			DELETE FROM GST_TAXINFO_CALC_OH WITH (ROWLOCK) WHERE SP_ID=CAST(@NSPID AS VARCHAR)
			
	set @nStep='190'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1
			
		
			SELECT TOP 1 @CPARTY_GSTN_NO=AC_GST_NO,@CPARTYSTATECODE=C.AC_GST_STATE_CODE,
			@BREGISTERED=ISNULL(REGISTERED_GST_DEALER,0),
			@DRECIPT_DT=A.RECEIPT_DT 
			FROM JOBWORK_RECEIPT_MST A 
			JOIN PRD_AGENCY_MST B ON A.AGENCY_CODE =B.AGENCY_CODE 
			JOIN LMP01106 C ON B.AC_CODE=C.AC_CODE 
			WHERE A.RECEIPT_ID=@CKEYFIELDVAL1	
			
            
	set @nStep='192'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

			UPDATE A SET PARTY_STATE_CODE=@CPARTYSTATECODE FROM JOBWORK_RECEIPT_MST A WHERE ISNULL(PARTY_STATE_CODE,'') IN('','00')
			AND receipt_id =@CKEYFIELDVAL1
			
			INSERT GST_TAXINFO_CALC	WITH (ROWLOCK) ( PRODUCT_CODE, SP_ID ,NET_VALUE,TAX_METHOD,ROW_ID,QUANTITY,SOURCE_DEPT_ID,MRP,HSN_CODE)  
			SELECT A.PRODUCT_CODE,@NSPID AS SP_ID,
			(ISNULL(A.QUANTITY,0)*ISNULL(A.JOB_RATE,0))- isnull(a.JWRDISCOUNTAMOUNT,0) AS NET_VALUE,
			ISNULL(B.BILL_LEVEL_TAX_METHOD,0) AS TAX_METHOD,
			ROW_ID,QUANTITY,B.DEPT_ID,SKU.MRP,A.HSN_CODE 
			FROM JOBWORK_RECEIPT_DET  A
			JOIN JOBWORK_RECEIPT_MST B ON A.RECEIPT_ID=B.RECEIPT_ID 
			JOIN SKU ON SKU .PRODUCT_CODE =A.PRODUCT_CODE 
			WHERE A.RECEIPT_ID=@CKEYFIELDVAL1

	set @nStep='195'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

			INSERT GST_TAXINFO_CALC_OH 	( SP_ID,OTHER_CHARGES,OH_TAX_METHOD,other_charges_hsn_code,
			freight,freight_hsn_code)
			SELECT @NSPID,other_charges,1 as OH_TAX_METHOD ,other_charges_hsn_code,
			       Freight,freight_hsn_code
			FROM JOBWORK_RECEIPT_MST where (isnull(other_charges,0)<>0 or isnull(Freight,0)<>0)
			and RECEIPT_ID=@CKEYFIELDVAL1
			
	

			SET @NSTEP=197
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

					
			EXEC SP3S_GST_TAX_CAL
				@CXN_TYPE='JWR',
				@CMEMO_ID='',
				@DMEMO_DT=@DRECIPT_DT,
				@NSPID=@NSPID,
				@CPARTYSTATE_CODE=@CPARTYSTATECODE,
				@BPARTYREGISTERED=@BREGISTERED,
				@CPARTY_GSTN_NO=@CPARTY_GSTN_NO,
				@CERRMSG=@CERRORMSG OUTPUT,
				@cLocationId=@CLOCID
			  
			IF ISNULL(@CERRORMSG,'')<>''
				 GOTO END_PROC
				
				--select *  from GST_TAXINFO_CALC_OH where SP_ID =CAST(@NSPID AS VARCHAR)

	set @nStep='199'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1
				 
				 UPDATE A SET IGST_AMOUNT =ISNULL(TMP.IGST_AMOUNT,0),
				 CGST_AMOUNT =ISNULL(TMP.CGST_AMOUNT,0),
				 SGST_AMOUNT =ISNULL(TMP.SGST_AMOUNT,0),
				 HSN_CODE =TMP.HSN_CODE ,
				 GST_PERCENTAGE=ISNULL(TMP.GST_PERCENTAGE,0),
				 XN_VALUE_WITH_GST =ISNULL(TMP.XN_VALUE_WITH_GST,0),
				 XN_VALUE_WITHOUT_GST =ISNULL(TMP.XN_VALUE_WITHOUT_GST,0),
				 CESS_AMOUNT =ISNULL(TMP.CESS_AMOUNT,0),
				  gst_cess_percentage =isnull(tmp.gst_cess_percentage,0),
				 Gst_Cess_Amount =isnull(tmp.Gst_Cess_Amount,0)
				  FROM JOBWORK_RECEIPT_DET A (NOLOCK)
				 JOIN GST_TAXINFO_CALC TMP (NOLOCK) ON A.ROW_ID =TMP.ROW_ID 
				 WHERE TMP.SP_ID =CAST(@NSPID AS VARCHAR)
				 AND A.RECEIPT_ID=@CKEYFIELDVAL1
                
	set @nStep='202'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

				  UPDATE B SET OTHER_CHARGES_HSN_CODE=A.OTHER_CHARGES_HSN_CODE, 
						  OTHER_CHARGES_GST_PERCENTAGE=A.OTHER_CHARGES_GST_PERCENTAGE,
						  OTHER_CHARGES_IGST_AMOUNT=ROUND(CASE WHEN ISNULL(ISIGST,0)=1 THEN A.OTHER_CHARGES_GST_AMOUNT ELSE 0 END,2),
						  OTHER_CHARGES_CGST_AMOUNT=ROUND(CASE WHEN ISNULL(ISIGST,0)=1 THEN 0 ELSE A.OTHER_CHARGES_GST_AMOUNT END/2,2),
						  OTHER_CHARGES_SGST_AMOUNT=ROUND(CASE WHEN ISNULL(ISIGST,0)=1 THEN 0 ELSE A.OTHER_CHARGES_GST_AMOUNT END/2,2),
						  OTHER_CHARGES_TAXABLE_VALUE=A.OTHER_CHARGES_TAXABLE_VALUE,

						  FREIGHT_HSN_CODE=A.FREIGHT_HSN_CODE, 
						  FREIGHT_GST_PERCENTAGE=A.FREIGHT_GST_PERCENTAGE,
						  FREIGHT_IGST_AMOUNT=ROUND(CASE WHEN ISNULL(ISIGST,0)=1 THEN A.FREIGHT_GST_AMOUNT ELSE 0 END,2),
						  FREIGHT_CGST_AMOUNT=ROUND(CASE WHEN ISNULL(ISIGST,0)=1 THEN 0 ELSE A.FREIGHT_GST_AMOUNT END/2,2),
						  FREIGHT_SGST_AMOUNT=ROUND(CASE WHEN ISNULL(ISIGST,0)=1 THEN 0 ELSE A.FREIGHT_GST_AMOUNT END/2,2),
						  FREIGHT_TAXABLE_VALUE=A.FREIGHT_TAXABLE_VALUE
						                                              
				   FROM  GST_TAXINFO_CALC_OH A
				   JOIN  JOBWORK_RECEIPT_MST B WITH (ROWLOCK) ON 1=1 
				   WHERE A.SP_ID=CAST(@NSPID AS VARCHAR)
				   and b.receipt_id=@CKEYFIELDVAL1
						

	set @nStep='205'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

			  EXEC SP3S_REPROCESS_GST_CALCULATION @CKEYFIELDVAL1,'JWR',0,@CERRORMSG OUTPUT 
			  IF ISNULL(@CERRORMSG,'')<>''
			  GOTO END_PROC
					
	END
	ELSE IF @BGSTBILL=1 AND  ISNULL(@BGETBARCODE,0)=1
	BEGIN

	set @nStep='210'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

	     	DELETE FROM GST_TAXINFO_CALC WITH (ROWLOCK) WHERE SP_ID=CAST(@NSPID AS VARCHAR)
			DELETE FROM GST_TAXINFO_CALC_OH WITH (ROWLOCK) WHERE SP_ID=CAST(@NSPID AS VARCHAR)
			
			declare @NBILL_LEVEL_TAX_METHOD numeric(1,0)
		
	set @nStep='212'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

			SELECT TOP 1 @CPARTY_GSTN_NO=AC_GST_NO,@CPARTYSTATECODE=C.AC_GST_STATE_CODE,
			@BREGISTERED=ISNULL(REGISTERED_GST_DEALER,0),
			@DRECIPT_DT=A.RECEIPT_DT ,@NBILL_LEVEL_TAX_METHOD=bill_level_tax_method 
			FROM JOBWORK_RECEIPT_MST A 
			JOIN PRD_AGENCY_MST B ON A.AGENCY_CODE =B.AGENCY_CODE 
			JOIN LMP01106 C ON B.AC_CODE=C.AC_CODE 
			WHERE A.RECEIPT_ID=@CKEYFIELDVAL1	


	set @nStep='215'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

			if @NUPDATEMODE=1
			begin

				update a set Rate =b.Rate from  JWR_MISSING_BARCODE_UPLOAD a (nolock)
				join #tmprecbarcode b on a.article_code=b.ARTICLE_CODE and a.para1_code=b.PARA1_CODE and a.PARA2_CODE =b.PARA2_CODE 
			    WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
			end
            
	set @nStep='220'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

			UPDATE A SET PARTY_STATE_CODE=@CPARTYSTATECODE FROM JOBWORK_RECEIPT_MST A WHERE ISNULL(PARTY_STATE_CODE,'') IN('','00')
			AND receipt_id =@CKEYFIELDVAL1
			
			INSERT GST_TAXINFO_CALC	WITH (ROWLOCK) ( PRODUCT_CODE, SP_ID ,NET_VALUE,TAX_METHOD,ROW_ID,QUANTITY,SOURCE_DEPT_ID,MRP,HSN_CODE)  
			SELECT '' as PRODUCT_CODE,@NSPID AS SP_ID,
			(ISNULL(A.RATE,0)) AS NET_VALUE,
			isnull(@NBILL_LEVEL_TAX_METHOD,0) AS TAX_METHOD,
			CAST('LATER'+a.ARTICLE_CODE +a.PARA1_CODE +a.PARA2_CODE AS VARCHAR(40)) ROW_ID,1 as QUANTITY,@CLOCATIONID as DEPT_ID,art.MRP,Art.HSN_CODE 
			FROM JWR_MISSING_BARCODE_UPLOAD  A 
			JOIN ARTICLE ART (nolock) ON ART.ARTICLE_CODE =A.ARTICLE_CODE 
			WHERE A.SP_ID=LTRIM(RTRIM(STR(@NSPID)))

	set @nStep='222'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

			INSERT GST_TAXINFO_CALC_OH 	( SP_ID,OTHER_CHARGES,OH_TAX_METHOD,other_charges_hsn_code,
			freight,freight_hsn_code)
			SELECT @NSPID,other_charges,1 as OH_TAX_METHOD ,other_charges_hsn_code,
			       Freight,freight_hsn_code
			FROM JOBWORK_RECEIPT_MST where (isnull(other_charges,0)<>0 or isnull(Freight,0)<>0)
			and RECEIPT_ID=@CKEYFIELDVAL1

	set @nStep='225'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

					
			EXEC SP3S_GST_TAX_CAL
				@CXN_TYPE='JWR',
				@CMEMO_ID='',
				@DMEMO_DT=@DRECIPT_DT,
				@NSPID=@NSPID,
				@CPARTYSTATE_CODE=@CPARTYSTATECODE,
				@BPARTYREGISTERED=@BREGISTERED,
				@CPARTY_GSTN_NO=@CPARTY_GSTN_NO,
				@CERRMSG=@CERRORMSG OUTPUT,
				@cLocationId=@CLOCID
			  


			IF ISNULL(@CERRORMSG,'')<>''
				 GOTO END_PROC

		IF @NUPDATEMODE =1
		   BEGIN


	set @nStep='227'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

		     CREATE INDEX IX_TMPRECBARCODE_PC on #TMPRECBARCODE(product_code)
			 CREATE INDEX IX_TMPRECBARCODE_JOB_CODE on #TMPRECBARCODE(JOB_CODE)
			
	set @nStep='229'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1


			  INSERT JOBWORK_RECEIPT_DET	( BIN_ID, CESS_AMOUNT, CGST_AMOUNT, GST_CESS_AMOUNT, GST_CESS_PERCENTAGE, GST_PERCENTAGE, HSN_CODE, IGST_AMOUNT, JOB_CODE, JOB_RATE, JWRDISCOUNTAMOUNT, LAST_UPDATE, NO_HRS, PREV_JOB_RATE, 
			  PRINT_LABEL, PRODUCT_CODE, QUANTITY, RECEIPT_ID, REF_ROW_ID, REMARKS, ROW_ID, SGST_AMOUNT, WIP_UID, XN_VALUE_WITH_GST, XN_VALUE_WITHOUT_GST,BUYER_NAME , MERCHANT_NAME ) 

			   SELECT 	'000'  BIN_ID,0 CESS_AMOUNT,0 CGST_AMOUNT,0 GST_CESS_AMOUNT,0 GST_CESS_PERCENTAGE,0 GST_PERCENTAGE,'0000000000' HSN_CODE,0 IGST_AMOUNT, 
			   A.JOB_CODE, A.RATE, 0 JWRDISCOUNTAMOUNT,GETDATE() LAST_UPDATE,0 NO_HRS,0 PREV_JOB_RATE,0 PRINT_LABEL, 
			   PRODUCT_CODE,a.quantity QUANTITY,@CKEYFIELDVAL1 RECEIPT_ID,REF_ROW_ID REF_ROW_ID,'' REMARKS,NEWID() ROW_ID,0 SGST_AMOUNT,'' WIP_UID,0 XN_VALUE_WITH_GST,0 XN_VALUE_WITHOUT_GST ,
			   A.REC_BUYER_NAME,A.REC_MERCHANT_NAME
			  FROM #TMPRECBARCODE  A

		  END
		  ELSE 
		  BEGIN
		      
	set @nStep='231'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

			 	  DELETE A 
				  FROM JOBWORK_Receipt_DET A (NOLOCK)
				  JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE 
				  left JOIN GST_TAXINFO_CALC TMP (NOLOCK) ON TMP.ROW_ID = CAST('LATER'+B.ARTICLE_CODE +B.PARA1_CODE +B.PARA2_CODE AS VARCHAR(40)) and TMP.SP_ID =LTRIM(RTRIM(STR(@NSPID)))
				  WHERE  A.receipt_id=@CKEYFIELDVAL1 and tmp.row_id is null

		  END
				 
	set @nStep='232'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

				 UPDATE A SET IGST_AMOUNT =ISNULL(TMP.IGST_AMOUNT,0),
					 CGST_AMOUNT =ISNULL(TMP.CGST_AMOUNT,0),
					 SGST_AMOUNT =ISNULL(TMP.SGST_AMOUNT,0),
					 HSN_CODE =TMP.HSN_CODE ,
					 GST_PERCENTAGE=ISNULL(TMP.GST_PERCENTAGE,0),
					 XN_VALUE_WITH_GST =ISNULL(TMP.XN_VALUE_WITH_GST,0),
					 XN_VALUE_WITHOUT_GST =ISNULL(TMP.XN_VALUE_WITHOUT_GST,0),
					 CESS_AMOUNT =ISNULL(TMP.CESS_AMOUNT,0),
					 gst_cess_percentage =isnull(tmp.gst_cess_percentage,0),
					 Gst_Cess_Amount =isnull(tmp.Gst_Cess_Amount,0),
					 JOB_RATE=tmp.NET_value
				  FROM JOBWORK_RECEIPT_DET A (NOLOCK)
				  join sku b on a.product_code =b.product_code 
				  JOIN GST_TAXINFO_CALC TMP (NOLOCK) ON tmp.row_id = CAST('LATER'+B.ARTICLE_CODE +B.PARA1_CODE +B.PARA2_CODE AS VARCHAR(40))
				  WHERE TMP.SP_ID =CAST(@NSPID AS VARCHAR)
				  AND A.RECEIPT_ID=@CKEYFIELDVAL1

	set @nStep='234'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

				 
	            UPDATE B SET OTHER_CHARGES_HSN_CODE=A.OTHER_CHARGES_HSN_CODE, 
						  OTHER_CHARGES_GST_PERCENTAGE=A.OTHER_CHARGES_GST_PERCENTAGE,
						  OTHER_CHARGES_IGST_AMOUNT=ROUND(CASE WHEN ISNULL(ISIGST,0)=1 THEN A.OTHER_CHARGES_GST_AMOUNT ELSE 0 END,2),
						  OTHER_CHARGES_CGST_AMOUNT=ROUND(CASE WHEN ISNULL(ISIGST,0)=1 THEN 0 ELSE A.OTHER_CHARGES_GST_AMOUNT END/2,2),
						  OTHER_CHARGES_SGST_AMOUNT=ROUND(CASE WHEN ISNULL(ISIGST,0)=1 THEN 0 ELSE A.OTHER_CHARGES_GST_AMOUNT END/2,2),
						  OTHER_CHARGES_TAXABLE_VALUE=A.OTHER_CHARGES_TAXABLE_VALUE,

						  FREIGHT_HSN_CODE=A.FREIGHT_HSN_CODE, 
						  FREIGHT_GST_PERCENTAGE=A.FREIGHT_GST_PERCENTAGE,
						  FREIGHT_IGST_AMOUNT=ROUND(CASE WHEN ISNULL(ISIGST,0)=1 THEN A.FREIGHT_GST_AMOUNT ELSE 0 END,2),
						  FREIGHT_CGST_AMOUNT=ROUND(CASE WHEN ISNULL(ISIGST,0)=1 THEN 0 ELSE A.FREIGHT_GST_AMOUNT END/2,2),
						  FREIGHT_SGST_AMOUNT=ROUND(CASE WHEN ISNULL(ISIGST,0)=1 THEN 0 ELSE A.FREIGHT_GST_AMOUNT END/2,2),
						  FREIGHT_TAXABLE_VALUE=A.FREIGHT_TAXABLE_VALUE
						                                              
				   FROM  GST_TAXINFO_CALC_OH A
				   JOIN  JOBWORK_RECEIPT_MST B WITH (ROWLOCK) ON 1=1 
				   WHERE A.SP_ID=CAST(@NSPID AS VARCHAR)
				   and b.receipt_id=@CKEYFIELDVAL1
						



	end
	ELSE
	BEGIN
		    
	set @nStep='236'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

		    
				 UPDATE A SET IGST_AMOUNT =0,
				 CGST_AMOUNT =0,
				 SGST_AMOUNT =0,
				 HSN_CODE ='0000000000',
				 GST_PERCENTAGE=0,
				 XN_VALUE_WITH_GST =ISNULL(QUANTITY,0)*ISNULL(JOB_RATE,0),
				 XN_VALUE_WITHOUT_GST =ISNULL(QUANTITY,0)*ISNULL(JOB_RATE,0),
				 CESS_AMOUNT=0,
				 gst_cess_percentage =0,
				 Gst_Cess_Amount =0
				 FROM JOBWORK_RECEIPT_DET A (NOLOCK)
				 WHERE A.RECEIPT_ID=@CKEYFIELDVAL1
					
		
		
	END


	 set @nStep='238'
	 EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

	
	  IF NOT EXISTS (SELECT TOP 1 'U' FROM JOBWORK_receipt_DET (NOLOCK) WHERE receipt_id =@CKEYFIELDVAL1)
	  BEGIN
	      SET @CERRORMSG = 'Blank barcode can no be saved'  
          GOTO END_PROC 

	  END
	
   
     IF @NUPDATEMODE=1 --direction by arun sir
       BEGIN
           
   	set @nStep='240'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1
        
           UPDATE C SET ac_code =AM.ac_code  
           FROM jobwork_receipt_mst A (NOLOCK) 
           JOIN jobwork_receipt_det B (NOLOCK) ON A.receipt_id =B.receipt_id 
           JOIN PRD_AGENCY_MST AM (NOLOCK) ON AM.AGENCY_CODE=A.agency_code 
           JOIN SKU C (NOLOCK) ON C.product_code =B.product_code 
           WHERE A.receipt_id =@CKEYFIELDVAL1 AND ISNULL(A.Receive_Mode,0)=1
       
       END


	IF EXISTS (SELECT TOP 1'U' FROM jobwork_receipt_mst WHERE receipt_id=@CKEYFIELDVAL1 and wip=1 and cancelled=0 and isnull(Receive_Mode,0)=0)
	begin

	   if object_id ('tempdb..#BARCODES','u') is not null
	      Drop table #BARCODES
		  	

		  select LEFT(A.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@',A.PRODUCT_CODE)-1,-1),LEN(A.PRODUCT_CODE ))) AS PRODUCT_CODE,
		        a.row_id  as Pid_row_id
		  into #BARCODES
		  from jobwork_receipt_det a (nolock)
		  join jobwork_issue_det b  (nolock)on a.ref_row_id =b.row_id 
		  join jobwork_issue_mst c (nolock) on b.issue_id =c.issue_id
		  where receipt_id=@CKEYFIELDVAL1 and wip=1 and c.cancelled =0
		  and a.product_code =b.product_code 

		

		EXEC SAVETRAN_GENPERISHABLE_BARCODE
		@NMODE=6,
		@CXNID=@CKEYFIELDVAL1,
		@CERRORMSG=@CERRORMSG  OUTPUT ,
		@cLocId=@CLOCID ,
		@CXNTYPE='JWR_WIP'

		 IF @CERRORMSG<>''  
		 BEGIN  
			  PRINT 'GENBARCODE_SNC-RETURND'  
			  GOTO END_PROC  
		 END   

		 if exists (select top 1 'u' from #BARCODES a
		 join jobwork_receipt_det b (nolock) on a.Pid_row_id =b.row_id 
		  where receipt_id=@CKEYFIELDVAL1 
		  and ( a.PRODUCT_CODE =b.product_code or b.product_code not like '%@%'))
		  begin
		      
			  set @CERRORMSG='Error In creating New batch barcode'
		      GOTO END_PROC  
		  end

		 

	end 


	   
	set @nStep='242'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

   EXEC UPDATEPMT_JWR   
      @CXNTYPE   = 'JWR'   
    , @CXNNO   = @CMEMONOVAL  
    , @CXNID   = @CKEYFIELDVAL1  
    , @NREVERTFLAG  = 0  
    , @NALLOWNEGSTOCK = 0  
    , @NCHKDELBARCODES = 1  
    , @NUPDATEMODE  = @NUPDATEMODE      
    , @CCMD    = @CCMDOUTPUT OUTPUT  

	
     
   IF @CCMDOUTPUT <> ''  
   BEGIN  
		PRINT @CCMDOUTPUT  
	      
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR UPDATING THE STOCK STATUS IN PMT....'  
		SET @BNEGSTOCKFOUND=1      
		EXEC SP_EXECUTESQL @CCMDOUTPUT  
		GOTO END_PROC  
   END  
   

	
	set @nStep='244'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

	DECLARE @NTOTALTAXABLEVALUE NUMERIC(14,2)
			
	DECLARE @nItemNet NUMERIC(10,2),@nTax NUMERIC(10,2),@nGSTCESSAMOUNT NUMERIC(10,2),
	        @NATDCHARGES NUMERIC(10,2),@NFREIGHT NUMERIC(10,2)

	SELECT @nItemNet=SUM(ISNULL(QUANTITY,0)*ISNULL(JOB_RATE,0)),
    @nTax=SUM(CASE WHEN ISNULL(BILL_LEVEL_TAX_METHOD ,0)=1 THEN 
    ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CESS_AMOUNT,0) ELSE 0 END) ,
	@nGSTCESSAMOUNT=SUM(CASE WHEN ISNULL(BILL_LEVEL_TAX_METHOD ,0)=1 THEN 
    ISNULL(Gst_Cess_Amount,0) ELSE 0 END),
	@NTOTALTAXABLEVALUE=SUM(ISNULL(A.XN_VALUE_WITHOUT_GST,0))
    FROM JOBWORK_RECEIPT_DET a 
    JOIN jobwork_receipt_mst B ON a.receipt_id=b.receipt_id  
    WHERE a.RECEIPT_ID=@CKEYFIELDVAL1

	set @nStep='246'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1


	SELECT @NATDCHARGES=ISNULL(other_charges_TAXABLE_VALUE,0) + 
	       ISNULL(other_charges_IGST_AMOUNT,0)+ISNULL(other_charges_CGST_AMOUNT,0)+ISNULL(other_charges_SGST_AMOUNT,0),
		   @NFREIGHT=ISNULL(FREIGHT_TAXABLE_VALUE,0) + 
	       ISNULL(FREIGHT_IGST_AMOUNT,0)+ISNULL(FREIGHT_CGST_AMOUNT,0)+ISNULL(FREIGHT_SGST_AMOUNT,0)
	FROM jobwork_receipt_mst (NOLOCK) WHERE RECEIPT_ID=@CKEYFIELDVAL1
	
	set @nStep='248'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

	UPDATE jobwork_receipt_mst set tds=cast(@NTOTALTAXABLEVALUE*TDS_PERCENTAGE/100 as numeric(14,2)) where receipt_id=@CKEYFIELDVAL1 AND ISNULL(TDS_PERCENTAGE,0)<>0

	set @nStep='250'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

    DECLARE @cRoundTds VARCHAR(2)
    SELECT TOP 1 @cRoundTds=value from config where config_option='TDS_ROUNDING_MODE'
    
    IF ISNULL(@cRoundTds,'') in('1','2')
	UPDATE jobwork_receipt_mst SET tds= CASE WHEN ISNULL(@CROUNDTDS,'') =1 THEN ROUND(tds,0) 
		                                       WHEN ISNULL(@CROUNDTDS,'') =2 THEN CEILING(tds) ELSE tds  END 
	WHERE RECEIPT_ID=@CKEYFIELDVAL1
	
	set @nStep='252'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

	--UPDATE jobwork_receipt_mst set tds=round(tds,0) where receipt_id=@CKEYFIELDVAL1
     
	UPDATE JOBWORK_RECEIPT_MST SET ROUND_OFF=ROUND(isnull(@nItemNet,0)-ISNULL(DISCOUNT_AMOUNT,0)+isnull(@nTax,0)+ISNULL(@nGSTCESSAMOUNT,0)+ISNULL(@NATDCHARGES,0)+ISNULL(@NFREIGHT,0),0)-
				 (isnull(@nItemNet,0)-ISNULL(DISCOUNT_AMOUNT,0)+isnull(@nTax,0)+ISNULL(@nGSTCESSAMOUNT,0)+ISNULL(@NATDCHARGES,0)+ISNULL(@NFREIGHT,0))
	WHERE RECEIPT_ID=@CKEYFIELDVAL1
	    
    UPDATE JOBWORK_RECEIPT_MST SET NET_AMOUNT =@nItemNet-ISNULL(DISCOUNT_AMOUNT,0)+@nTax+ISNULL(@nGSTCESSAMOUNT,0)+round_off+
	                               +ISNULL(@NATDCHARGES,0)+ISNULL(@NFREIGHT,0)
    WHERE RECEIPT_ID=@CKEYFIELDVAL1


	set @nStep='255'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

		UPDATE A SET Total_Gst_Cess_Amount = B.Gst_Cess_Amount,
		             total_quantity =b.Total_qty,
					 Total_Gst_Amount=b.Gst_amount
		FROM JOBWORK_RECEIPT_MST A (nolock)
		join
		(
		   SELECT receipt_id ,sum(Gst_Cess_Amount)  AS Gst_Cess_Amount,
		          sum(quantity) as Total_qty,
				  sum(isnull(igst_amount,0)+isnull(cgst_amount,0)+isnull(sgst_amount,0)) as Gst_amount
		    from JOBWORK_RECEIPT_DET 
		   WHERE receipt_id =@CKEYFIELDVAL1
		   GROUP BY  receipt_id 
		) B ON A.receipt_id =B.receipt_id
          WHERE A.receipt_id =@CKEYFIELDVAL1
    
    
 	set @nStep='260'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1
 
   IF EXISTS (SELECT TOP 1 'U' FROM jobwork_receipt_mst WHERE ISNULL(Receive_Mode,0) =1 AND receipt_id=@CKEYFIELDVAL1 )
   AND EXISTS (SELECT TOP 1 'U'  FROM CONFIG WHERE CONFIG_OPTION='DO_NOT_RECEIVE_JWR_WITHOUT_BOM_ISSUE' AND VALUE =1) and @NUPDATEMODE =1
    BEGIN

	
	--for Production validation
	  EXEC VALIDATE_JWR_WITHOUT_BOM_ISSUE   
	     @CXNID = @CKEYFIELDVAL1   
	   , @CCMD  = @CERRORMSG OUTPUT  
	  
	
	  IF isnull(@CERRORMSG,'') <> ''  
	  BEGIN  
	   SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) +' :'  + @CERRORMSG + '...'  
	   GOTO END_PROC  
	  END  
 

  end
  -- AFTER SUCCESSFUL SAVING , JUST DROP THE TEMP TABLES CREATED BY APPLICATION  
	set @nStep='265'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1
 
    --EXEC SP3S_UPDATE_PMTLOCS_REBUILD_STARTDATE
    --@cXnType='JWR',
    --@cMemoId=@CKEYFIELDVAL1 
    
   
 END TRY  
   
 BEGIN CATCH  
  SET @CERRORMSG = 'STEP- ' + LTRIM(rtrim(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()  
  -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG, '''' AS MEMO_ID'  
    
  GOTO END_PROC  
 END CATCH  
   
END_PROC:  

    IF ISNULL(@CERRORMSG,'')=''
	BEGIN
	set @nStep='270'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1
		
	   --CALCULATING JOB VALUE
    IF EXISTS (SELECT TOP 1 'U' FROM jobwork_receipt_mst WHERE ISNULL(Receive_Mode,0) =1 AND receipt_id=@CKEYFIELDVAL1 )
    BEGIN
      
     	set @nStep='272'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1
  
	   SELECT DISTINCT  A.product_code,A.QUANTITY INTO #TMPPRODUCT FROM 
	   JOBWORK_RECEIPT_DET A (NOLOCK)
	   JOIN JOBWORK_RECEIPT_MST B (NOLOCK) ON A.receipt_id =B.receipt_id
	   WHERE  A.receipt_id=@CKEYFIELDVAL1
	   
	set @nStep='275'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1
	   				   
		SELECT A.PRODUCT_CODE,SUM(A.JOB_RATE ) AS JOB_RATE
		INTO #TMPJOBWORK
		FROM #TMPPRODUCT TMP
		JOIN JOBWORK_RECEIPT_DET A (NOLOCK) ON TMP.PRODUCT_CODE =A.PRODUCT_CODE 
		JOIN JOBWORK_RECEIPT_MST  B (NOLOCK) ON A.RECEIPT_ID =B.RECEIPT_ID 
		WHERE B.CANCELLED =0 
		GROUP BY A.PRODUCT_CODE
		
	set @nStep='280'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

		IF EXISTS (SELECT TOP 1 'U' FROM #TMPJOBWORK)
		BEGIN
			UPDATE A SET FG_VALUE=ISNULL(TMP.JOB_RATE,0) 
			FROM JOBWORK_PMT A (NOLOCK)
			JOIN #TMPJOBWORK TMP ON A.PRODUCT_CODE =TMP.PRODUCT_CODE 
		END
		ELSE
		BEGIN
		    UPDATE A SET FG_VALUE=0 
		    FROM JOBWORK_PMT A (NOLOCK)
			JOIN #TMPPRODUCT TMP ON A.PRODUCT_CODE =TMP.PRODUCT_CODE 
		
		END
		
				
			
    END
    

END
 
 IF @@TRANCOUNT>0  
 BEGIN  
	set @nStep='282'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

  IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')='' AND ISNULL(@BNEGSTOCKFOUND,0)=0  
  BEGIN
		UPDATE JOBWORK_RECEIPT_MST SET LAST_UPDATE=GETDATE(),reconciled=0 WHERE RECEIPT_ID=@CKEYFIELDVAL1 
		UPDATE jobwork_receipt_mst SET HO_SYNCH_LAST_UPDATE=''  WHERE receipt_id=@CKEYFIELDVAL1
		commit TRANSACTION
  END	
  ELSE  
   ROLLBACK  
 END  
   
   
 IF ISNULL(@BNEGSTOCKFOUND,0)=0  
 BEGIN  
  INSERT @OUTPUT ( ERRMSG, MEMO_ID)  
  VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )  
  
  SELECT * FROM @OUTPUT   
 END
 
 	set @nStep='284'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

	 DELETE A WITH (ROWLOCK) from  JWR_JOBWORK_RECEIPT_DET_UPLOAD A WHERE SP_ID=@NSPID 
	 DELETE A WITH (ROWLOCK)  from  JWR_JOBWORK_RECEIPT_mst_UPLOAD A WHERE SP_ID=@NSPID 
	 DELETE a  WITH (ROWLOCK) FROM JWR_MISSING_BARCODE_UPLOAD a WHERE SP_ID=LTRIM(RTRIM((@NSPID)))    
 
	set @nStep='286'
	EXEC SP_CHKXNSAVELOG 'JWR',@nSTEP,0,@nSpId,'',1

END    
------------------------------------------------------ END OF PROCEDURE SAVETRAN_JWR  


