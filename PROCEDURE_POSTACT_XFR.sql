create PROCEDURE POSTACT_XFR 
(
	@DTTO DATETIME,
	@CDEPTID CHAR(2)='',
	@DGSTCUTOFFDATE DATETIME
)
AS
BEGIN
	PRINT 'ENTER XFR POSTING'
	
    DECLARE @CSTEP VARCHAR(10),@BPOSTDISCOUNTSEPARATELY BIT,@CDISCACCODE VARCHAR(10),@BPOSTFREIGHTSEPARATELY BIT,
			@CFREIGHTACCODE VARCHAR(10),@BPOSTOCTROISEPARATELY BIT,@COCTROIACCODE VARCHAR(10),
			@BPOSTINSURANCESEPARATELY BIT,@CINSURANCEACCODE VARCHAR(10),
			@BPOSTOTHERCHARGESSEPARATELY BIT,@COTHERCHARGESACCODE VARCHAR(10),@BPOSTROUNDOFFSEPARATELY BIT,
			@CROUNDOFFACCODE VARCHAR(10),@NCTR NUMERIC(10,0),
			@NSUBTOTAL NUMERIC(14,4),@NTAXAMOUNT NUMERIC(14,4), @CPURACCODE VARCHAR(50),@CTAXACCODE VARCHAR(100),
			@LPOSTTAXSEPARATELY NUMERIC(14,4),@CMEMOID VARCHAR(50),@LOUTSTATIONPARTY BIT,@TMPDR NUMERIC(14,4),
			@TMPCR NUMERIC(14,4),@CCURSTATECODE	VARCHAR(10),@CVMID	VARCHAR(40),@CLOCATIONID CHAR(2),
			@CLASTBILLNO VARCHAR(40),@DTMPVENDORBILLDT DATETIME,@CRMLIST VARCHAR(300),@NTMPCREDITDAYS NUMERIC(10),
			@NTMPCRDISCOUNTPERCENTAGE NUMERIC(14,4),@DLASTINVDT	DATETIME,@CVOUCHERCODE VARCHAR(10),
			@COLDBILLTYPE VARCHAR(10),@CLASTACCODE VARCHAR(10),@CLASTPARTYNAME VARCHAR(100),@NTOTQUANTITY NUMERIC(14,4),
			@NTOTNETAMOUNT NUMERIC(14,4),@CDEPTNAME VARCHAR(100),@CVOUCHERNO VARCHAR(10),@NSIGN NUMERIC(1),
			@CMEMONO VARCHAR(100),@CLOCALSTKXFRACCODE CHAR(10),@BENABLEPOSTING BIT,@NDIFFAMT NUMERIC(14,4),
			@CXFRACCODE CHAR(10),@CEXCISEDUTYAC CHAR(10),@DMEMODT DATETIME,@CLOCGSTSTATECODE VARCHAR(5),
			@CPARTYGSTSTATECODE VARCHAR(5),@BGSTBILL BIT,@CREFMEMOID VARCHAR(40),@BPOSTLOCALSTKXFR BIT
			
	
	SET @CSTEP=10
	DECLARE @CPARTYACCODE VARCHAR(10),@CPARTYSTATECODE VARCHAR(10),@NNETAMOUNT NUMERIC(14,4),
			@NDISCAMOUNT NUMERIC(14,4),@NFREIGHT NUMERIC(14,4),	@NOTHER NUMERIC(14,4),@NROUNDOFF NUMERIC(14,4),
			@NDRTOTAL NUMERIC(14,4),@NCRTOTAL NUMERIC(14,4),@DCUTOFFDATE DATETIME,@CXNTYPE VARCHAR(10),
			@CAC_CODE VARCHAR(20),@CVDID VARCHAR(40),@CPOSTXFRBILLDATE CHAR(2)
    
    SET @CFREIGHTACCODE=''
    SET @CROUNDOFFACCODE=''
    
    SET @CSTEP=20
    --THIS TABLE VARIABLE STORE ERROR OF OF MEMO ID
    DECLARE @ERRORS TABLE
	(
		XN_ID	VARCHAR(40),XN_TYPE VARCHAR(30),XN_NO VARCHAR(40),
		XN_DT DATETIME,XN_AMT NUMERIC(14,4),XN_AC VARCHAR(100),
		ERR_DESC VARCHAR(500)
	)   
    
    SET @CSTEP=30
    DECLARE @VCHC TABLE 
	(
		AC_CODE CHAR(10),NARRATION VARCHAR(200),XN_NO VARCHAR(30),
		XN_DT DATETIME,DEPT_ID CHAR(4),AMOUNT NUMERIC(14,4),XN_ID VARCHAR(22),
		REF_BILL_NO VARCHAR(50),REF_BILL_DATE DATETIME,	ENTRY_ID INT
		,CRDAYS NUMERIC(5)
	)
	
	SET @CSTEP=40
	DECLARE @VDC TABLE 
	(
		VD_ID VARCHAR(50),				VM_ID VARCHAR(40),				AC_CODE CHAR(10), 
		NARRATION VARCHAR(200),			DEBIT_AMOUNT NUMERIC(14,4),		CREDIT_AMOUNT NUMERIC(14,4),
		X_TYPE CHAR(2), 				VS_AC_CODE CHAR(10),	 		REF_BILL_NO VARCHAR(40), 
		CREDIT_DAYS NUMERIC(10),		CR_DISCOUNT_PERCENTAGE NUMERIC(14,4),		
		VAT_ENTRY BIT,REF_BILL_DATE DATETIME, AC_NAME VARCHAR(100)
	)
	
	SET @CSTEP=50
	DECLARE @VMC TABLE
	(
		VM_ID VARCHAR(400), 			VOUCHER_NO VARCHAR(400), 		VOUCHER_DT DATETIME, 
		VOUCHER_CODE CHAR(100), 		DEPT_ID CHAR(20),				BILL_TYPE VARCHAR(300),
		BILL_NO VARCHAR(200), 			BILL_ID VARCHAR(220), 			BILL_DT DATETIME, 
		BILL_AC_CODE VARCHAR(100),		DRTOTAL NUMERIC(20,4),			CRTOTAL NUMERIC(20,4), 
		CASH_VOUCHER BIT, 				SALE_VOUCHER BIT, 				QUANTITY NUMERIC(20,4), 
		ANGADIA_CODE CHAR(70), 			LR_NO VARCHAR(500), 			LR_DT DATETIME,
		PARTY_NAME VARCHAR(1000),		NET_AMOUNT NUMERIC(20,4), 		BILL_STATUS VARCHAR(1000),
		RM_LIST VARCHAR(3000), 		CANCELLED BIT,					DEPT_NAME VARCHAR(100),
		VOUCHER_TYPE VARCHAR(100)	
	)
	
	SET @CSTEP=60
	DECLARE @VLINK TABLE
	(
		VM_ID VARCHAR(100),MEMO_ID VARCHAR(100),XN_TYPE VARCHAR(20),LAST_UPDATE DATETIME
	)
	
	DECLARE @TBILL_BY_BILL_REF TABLE(VD_ID VARCHAR(40),REF_NO VARCHAR(40),AMOUNT NUMERIC(18,4),LAST_UPDATE DATETIME
								,X_TYPE VARCHAR(20),CR_DAYS NUMERIC(5),REF_TYPE VARCHAR(10))
	
	PRINT 'CHECK POSTING ENABLED OR NOT FOR STOCK TRANSFER'
	
	
	SELECT TOP 1 @BENABLEPOSTING=ENABLEPOSTING FROM XFRCONFIGMST
	
	IF ISNULL(@BENABLEPOSTING,0)=0
		GOTO END_PROC
	
	SELECT TOP 1 @DCUTOFFDATE=CUTOFFDATE FROM XFRCONFIGMST
	
	SELECT TOP 1 @BPOSTLOCALSTKXFR=POST_LOCAL_STKXFER,@CLOCALSTKXFRACCODE=LOCAL_STKXFER_AC_CODE FROM XFRCONFIGMST
		
	SET @DCUTOFFDATE=ISNULL(@DCUTOFFDATE,'')

		
	SET @CSTEP=70
	SET @CVOUCHERCODE = '0000000006'
    BEGIN TRY
			SELECT @CPOSTXFRBILLDATE = ISNULL(POSTBILLDATE,0),@CEXCISEDUTYAC=EXCISEDUTYAC
			FROM XFRCONFIGMST
			
			SET @CPOSTXFRBILLDATE=ISNULL(@CPOSTXFRBILLDATE,0)
			
			SET @CSTEP=80
			IF OBJECT_ID('TEMPDB..#POSTS','U') IS NOT NULL
				DROP TABLE #POSTS 
			
			SET @CSTEP=90
			--THIS TABLE STORE ALL PENDING MEMO_ID 
			CREATE TABLE #POSTS (MEMO_ID VARCHAR(30),MODE VARCHAR(10),LOCAL_XFR BIT)
			
			SET @CSTEP=100
			
			--GETTING LIST OF GROUP INVOICES THAT QUALIFY FOR VOUCHER POSTING
			INSERT INTO #POSTS (MEMO_ID,MODE,LOCAL_XFR)
	        SELECT A.INV_ID,'WSLCHO' AS MODE ,(CASE WHEN SL.GST_STATE_CODE=TL.GST_STATE_CODE THEN 1 ELSE 0 END)
	        FROM INM01106 A
	        JOIN LOCATION SL ON a.location_Code =SL.DEPT_ID
	        LEFT JOIN LOCATION TL ON A.PARTY_DEPT_ID=TL.DEPT_ID
	        LEFT OUTER JOIN 
	        (
				SELECT B.MEMO_ID,B.LAST_UPDATE
				FROM POSTACT_VOUCHER_LINK B 
				JOIN VM01106 C ON C.VM_ID = B.VM_ID 
				WHERE C.CANCELLED=0 AND B.XN_TYPE = 'WSLCHO' 
	        )VM  ON A.INV_ID = VM.MEMO_ID  
	        WHERE  
	         -- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES
            (ISNULL(SL.LOC_TYPE,0)=1 OR ISNULL(SL.ACCOUNT_POSTING_AT_HO,0)=1) AND 
	        /*GROUP INVOICE IS NOT CANCELLED.*/
	        ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)	 
	        /*GROUP INVOICE INV_DT IS LESS THAN THE SPECIFIED DATE.*/
	        AND A.INV_DT <= @DTTO
	        AND (@DCUTOFFDATE='' OR A.INV_DT>@DCUTOFFDATE)
	        /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/
	        AND (ISNULL(@CDEPTID,'')='' OR a.location_Code =@CDEPTID)
	        /*GROUP INVOICE IS NOT GROUP/BRANCH GROUP INVOICE*/
	        AND A.PARTY_DEPT_ID IS NOT NULL
	        AND ((INV_DT<@DGSTCUTOFFDATE AND  A.XFER_TYPE=2) OR (A.INV_DT>=@DGSTCUTOFFDATE AND SL.LOC_TYPE=1 AND TL.LOC_TYPE=1
																   AND (@BPOSTLOCALSTKXFR=1 OR  SL.GST_STATE_CODE<>TL.GST_STATE_CODE)))
	        AND INV_MODE=2
	        AND NOT (ISNULL(SL.DONOT_POST_STKXFER_ENTRIES,0)=1 AND ISNULL(TL.DONOT_POST_STKXFER_ENTRIES,0)=1)
	        /*GROUP INVOICE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/
	        AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE) 
	        UNION ALL
	        SELECT PIM.MRR_ID,'PURCHI' AS MODE,(CASE WHEN SL.GST_STATE_CODE=TL.GST_STATE_CODE THEN 1 ELSE 0 END) 
	        FROM INM01106 A
	        JOIN PIM01106 PIM ON A.INV_ID=PIM.INV_ID
	        JOIN LOCATION SL ON a.location_Code =SL.DEPT_ID
	        LEFT JOIN LOCATION TL ON A.PARTY_DEPT_ID=TL.DEPT_ID
	        LEFT OUTER JOIN 
	        (
				SELECT B.MEMO_ID,B.LAST_UPDATE
				FROM POSTACT_VOUCHER_LINK B 
				JOIN VM01106 C ON C.VM_ID = B.VM_ID 
				WHERE C.CANCELLED=0 AND B.XN_TYPE = 'PURCHI' 
	        )VM  ON PIM.MRR_ID = VM.MEMO_ID  
	        WHERE  A.INV_MODE=2 AND 
	        -- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES
            (ISNULL(SL.LOC_TYPE,0)=1 OR ISNULL(SL.ACCOUNT_POSTING_AT_HO,0)=1) AND 
	        /*GROUP INVOICE IS NOT CANCELLED.*/
	        ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)	 
	        /*GROUP INVOICE RECEIPT_DT IS LESS THAN THE SPECIFIED DATE.*/
	        AND (
					(PIM.RECEIPT_DT <= @DTTO AND @CPOSTXFRBILLDATE<>'1' AND PIM.RECEIPT_DT<>'') 
					OR (A.INV_DT <= @DTTO AND   @CPOSTXFRBILLDATE='1')
				)
			AND (@DCUTOFFDATE='' OR ((PIM.RECEIPT_DT>@DCUTOFFDATE AND @CPOSTXFRBILLDATE<>'1')
									 OR (A.INV_DT>@DCUTOFFDATE AND   @CPOSTXFRBILLDATE='1')))				
	        /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/
	        AND (ISNULL(@CDEPTID,'')='' OR pim.location_Code =@CDEPTID)
	        /*GROUP INVOICE IS NOT GROUP/BRANCH GROUP INVOICE*/ 
	        AND A.PARTY_DEPT_ID IS NOT NULL
	        AND ((A.INV_DT<@DGSTCUTOFFDATE AND  A.XFER_TYPE=2) OR (A.INV_DT>=@DGSTCUTOFFDATE AND SL.LOC_TYPE=1 AND TL.LOC_TYPE=1
																   AND (@BPOSTLOCALSTKXFR=1 OR  SL.GST_STATE_CODE<>TL.GST_STATE_CODE)))
	        AND A.INV_MODE=2
	        AND NOT (ISNULL(SL.DONOT_POST_STKXFER_ENTRIES,0)=1 AND ISNULL(TL.DONOT_POST_STKXFER_ENTRIES,0)=1)
	        /*GROUP INVOICE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/
	        AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> PIM.LAST_UPDATE) 
	        UNION ALL
	        SELECT A.RM_ID,'PRTCHO' AS MODE,(CASE WHEN SL.GST_STATE_CODE=TL.GST_STATE_CODE THEN 1 ELSE 0 END) 
	        FROM RMM01106 A
	        JOIN LOCATION SL ON a.location_Code =SL.DEPT_ID
	        LEFT JOIN LOCATION TL ON A.PARTY_DEPT_ID=TL.DEPT_ID
	        LEFT OUTER JOIN 
	        (
				SELECT B.MEMO_ID,B.LAST_UPDATE
				FROM POSTACT_VOUCHER_LINK B 
				JOIN VM01106 C ON C.VM_ID = B.VM_ID 
				WHERE C.CANCELLED=0 AND B.XN_TYPE = 'PRTCHO' 
	        )VM  ON A.RM_ID = VM.MEMO_ID  
	        WHERE  
	         -- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES
            (ISNULL(SL.LOC_TYPE,0)=1 OR ISNULL(SL.ACCOUNT_POSTING_AT_HO,0)=1) AND 
	        /*GROUP INVOICE IS NOT CANCELLED.*/
	        ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)	 
	        /*GROUP INVOICE INV_DT IS LESS THAN THE SPECIFIED DATE.*/
	        AND A.RM_DT <= @DTTO
	        AND (@DCUTOFFDATE='' OR A.RM_DT>@DCUTOFFDATE)
	        /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/
	        AND (ISNULL(@CDEPTID,'')='' OR a.location_Code =@CDEPTID)
	        /*GROUP INVOICE IS NOT GROUP/BRANCH GROUP INVOICE*/
	        AND A.PARTY_DEPT_ID IS NOT NULL
	        AND ((RM_DT<@DGSTCUTOFFDATE AND  A.XFER_TYPE=2) OR (A.RM_DT>=@DGSTCUTOFFDATE AND SL.LOC_TYPE=1 AND TL.LOC_TYPE=1
																   AND (@BPOSTLOCALSTKXFR=1 OR  SL.GST_STATE_CODE<>TL.GST_STATE_CODE)))
	        AND MODE=2
	        AND NOT (ISNULL(SL.DONOT_POST_STKXFER_ENTRIES,0)=1 AND ISNULL(TL.DONOT_POST_STKXFER_ENTRIES,0)=1)
	        /*GROUP INVOICE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/
	        AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE) 
	        UNION ALL
	        SELECT CNM.CN_ID,'WSRCHI' AS MODE,(CASE WHEN SL.GST_STATE_CODE=TL.GST_STATE_CODE THEN 1 ELSE 0 END) 
	        FROM RMM01106 A
	        JOIN CNM01106 CNM ON A.RM_ID=CNM.RM_ID
	        JOIN LOCATION SL ON a.location_Code =SL.DEPT_ID
	        LEFT JOIN LOCATION TL ON A.PARTY_DEPT_ID=TL.DEPT_ID
	        LEFT OUTER JOIN 
	        (
				SELECT B.MEMO_ID,B.LAST_UPDATE
				FROM POSTACT_VOUCHER_LINK B 
				JOIN VM01106 C ON C.VM_ID = B.VM_ID 
				WHERE C.CANCELLED=0 AND B.XN_TYPE = 'WSRCHI' 
	        )VM  ON CNM.CN_ID = VM.MEMO_ID  
	        WHERE   A.MODE=2 AND
	         -- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES
            (ISNULL(SL.LOC_TYPE,0)=1 OR ISNULL(SL.ACCOUNT_POSTING_AT_HO,0)=1) AND 
	        /*GROUP INVOICE IS NOT CANCELLED.*/
	        ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)	 
	        /*GROUP INVOICE RECEIPT_DT IS LESS THAN THE SPECIFIED DATE.*/
	        AND (
					(CNM.RECEIPT_DT <= @DTTO AND @CPOSTXFRBILLDATE<>'1' AND CNM.RECEIPT_DT<>'') 
					OR (A.RM_DT <= @DTTO AND   @CPOSTXFRBILLDATE='1')
				)
            AND (@DCUTOFFDATE='' OR ((CNM.RECEIPT_DT>@DCUTOFFDATE AND @CPOSTXFRBILLDATE<>'1')
									OR (A.RM_DT>@DCUTOFFDATE AND @CPOSTXFRBILLDATE='1')))				
	        /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/
	        AND (ISNULL(@CDEPTID,'')='' OR cnm.location_Code =@CDEPTID)
	        /*GROUP INVOICE IS NOT GROUP/BRANCH GROUP INVOICE*/
	        AND A.PARTY_DEPT_ID IS NOT NULL
	        AND ((RM_DT<@DGSTCUTOFFDATE AND  A.XFER_TYPE=2) OR (A.RM_DT>=@DGSTCUTOFFDATE AND SL.LOC_TYPE=1 AND TL.LOC_TYPE=1
																   AND (@BPOSTLOCALSTKXFR=1 OR  SL.GST_STATE_CODE<>TL.GST_STATE_CODE)))
	        AND NOT (ISNULL(SL.DONOT_POST_STKXFER_ENTRIES,0)=1 AND ISNULL(TL.DONOT_POST_STKXFER_ENTRIES,0)=1)
	        /*GROUP INVOICE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/
	        AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> CNM.LAST_UPDATE) 
	        
	        	        
	        SET @CSTEP=110
	        SELECT @BPOSTDISCOUNTSEPARATELY = ISNULL(POSTDISCSPRTLY,0)
			FROM XFRCONFIGMST
			
			SET @CSTEP=120
			--IF NO ENTRY EXISTS IN CONFIG, CONSIDER 0
			SET @BPOSTDISCOUNTSEPARATELY=ISNULL(@BPOSTDISCOUNTSEPARATELY,0)
			
	        SET @CSTEP=150
	        --IF FREIGHT CONSIDERED AS PART OF STOCK THEN CLUB IT IN GROUP INVOICE A/C OTHERWISE POST SEPARATELY
			SELECT @BPOSTFREIGHTSEPARATELY = ISNULL(POSTFREIGHTSPRTLY, 0)
			FROM XFRCONFIGMST
			
			SET @CSTEP=160
			SET @BPOSTFREIGHTSEPARATELY=ISNULL(@BPOSTFREIGHTSEPARATELY,0)
			
			SET @CSTEP=170
			--GET THE ACCOUNT FOR FREIGHT AMOUNT POSTING
			SELECT @CFREIGHTACCODE = ISNULL(FREIGHTAC, '')
			FROM XFRCONFIGMST
		    
		    SET @CFREIGHTACCODE=ISNULL(@CFREIGHTACCODE,'')
		    
		    SET @CSTEP=180
		    --IF OTHER CHARGES CONSIDERED AS PART OF STOCK THEN CLUB IT IN GROUP INVOICE A/C OTHERWISE POST SEPARATELY
			SELECT @BPOSTOTHERCHARGESSEPARATELY = ISNULL(POSTOCSPRTLY, 0)
			FROM XFRCONFIGMST

			SET @CSTEP=190
			SET @BPOSTOTHERCHARGESSEPARATELY=ISNULL(@BPOSTOTHERCHARGESSEPARATELY,0)

			SET @CSTEP=200
			SELECT @COTHERCHARGESACCODE = ISNULL(OCAC,'')
			FROM XFRCONFIGMST
		   
			SET @COTHERCHARGESACCODE=ISNULL(@COTHERCHARGESACCODE,'')
		   
		    SET @CSTEP=210
		    --IF OCTROI IS CONSIDERED AS PART OF STOCK THEN CLUB IT IN GROUP INVOICE A/C OTHERWISE POST SEPARATELY
			SELECT @BPOSTOCTROISEPARATELY = ISNULL(POSTOCROISPRTLY,0)
			FROM XFRCONFIGMST
		   
			SET @CSTEP=220
			SET @BPOSTOCTROISEPARATELY=ISNULL(@BPOSTOCTROISEPARATELY,0)

			SET @CSTEP=230
			SELECT @COCTROIACCODE = ISNULL(OCTROIAC,'')
			FROM XFRCONFIGMST
		   
			SET @CSTEP=240
			SET @COCTROIACCODE=ISNULL(@COCTROIACCODE,'')
			
			SET @CSTEP=250
		    --IF INSURANCE IS CONSIDERED AS PART OF STOCK THEN CLUB IT IN GROUP INVOICE A/C OTHERWISE POST SEPARATELY
			SELECT @BPOSTINSURANCESEPARATELY = ISNULL(POSTINSSPRTLY, 0)
			FROM XFRCONFIGMST
		   
			SET @CSTEP=260
			SET @BPOSTINSURANCESEPARATELY=ISNULL(@BPOSTINSURANCESEPARATELY,0)

			SET @CSTEP=270
			SELECT @CINSURANCEACCODE = ISNULL(INSAC,'')
			FROM XFRCONFIGMST
		   
			SET @CSTEP=280
			SET @CINSURANCEACCODE=ISNULL(@CINSURANCEACCODE,'')
		   
			SET @CSTEP = 290
			--IF ROUND OFF IS CONSIDERED AS PART OF STOCK THEN CLUB IT IN GROUP INVOICE A/C OTHERWISE POST SEPARATELY
			SELECT @BPOSTROUNDOFFSEPARATELY = ISNULL(POSTROFFSPRTLY, 0)
			FROM XFRCONFIGMST

			SET @CSTEP = 300
			SET @BPOSTROUNDOFFSEPARATELY=ISNULL(@BPOSTROUNDOFFSEPARATELY,0)
			
			SET @CSTEP = 310
			SELECT @CROUNDOFFACCODE = ISNULL(ROFFAC,'')
			FROM XFRCONFIGMST
			
			SET @CSTEP = 320
			SET @CROUNDOFFACCODE=ISNULL(@CROUNDOFFACCODE,'')
		
			SET @CSTEP = 330
			CREATE INDEX IX_TEMP_WSLTABLE_RM_ID ON #POSTS(MEMO_ID)

			DECLARE @BGPCCONFIGFOUND BIT			
			SET @BGPCCONFIGFOUND=0
			IF EXISTS (SELECT TOP 1 XN_TYPE FROM GST_POSTING_CONFIG WHERE XN_TYPE IN ('XFR_OS_CHI','XFR_OS_CHO'))
				SET @BGPCCONFIGFOUND=1

			SET @CSTEP=340
			---GETTING LIST OF ALL ERROR FROM GROUP INVOICE AND CONVERT MRN TO BILL
			INSERT INTO @ERRORS(XN_ID,XN_NO ,XN_TYPE,ERR_DESC)
			--GETTING ERROR LIST FROM GROUP INVOICE BILLS
			SELECT DISTINCT INM.INV_ID,INM.INV_NO,'WSLCHO' AS XN_TYPE
				  ,(CASE 
						 WHEN IND.ITEM_FORM_ID='0000000' AND INM.INV_TYPE<>2 AND INM.INV_DT<@DGSTCUTOFFDATE
								THEN 'FORM NOT SPECIFIED'
						 WHEN ((ISNULL(PAC.TAXAC,'') = '' OR ISNULL(PAC.TAXAC,'') = '0000000000')  AND INM.INV_DT<@DGSTCUTOFFDATE
								AND INM.INV_TYPE<>2)
								THEN 'TAX A/C NOT SPECIFIED'

						 WHEN INM.INV_DT>=@DGSTCUTOFFDATE AND LOCAL_XFR=0 AND GPC.XN_TYPE IS NULL
						 AND @BGPCCONFIGFOUND=1 THEN 'IGST A/C CONFIGURATION NOT FOUND FOR RELATED GST PERCENTAGE'								
						 
						 WHEN INM.INV_DT>=@DGSTCUTOFFDATE AND LOCAL_XFR=0 AND @BGPCCONFIGFOUND=0
								THEN 'IGST A/C CONFIGURATION NOT SETUP FOR WHOLESALE'								

						 WHEN INM.INV_DT>=@DGSTCUTOFFDATE AND LOCAL_XFR=1 AND ISNULL(@CLOCALSTKXFRACCODE,'') IN ('','0000000000')
								THEN 'LOCAL STOCK TRANSFER A/C NOT DEFINED'								
						 
						 WHEN (ISNULL(GPC.IGST_XN_AC_CODE,'') = '' OR ISNULL(GPC.IGST_XN_AC_CODE,'') = '0000000000')
								AND INM.INV_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND IGST_AMOUNT<>0 
								THEN 'INTER STATE STOCK TRANSFER A/C NOT SPECIFIED'
						 
						 WHEN (ISNULL(GPC.IGST_TAX_AC_CODE,'') = '' OR ISNULL(GPC.IGST_TAX_AC_CODE,'') = '0000000000')
								AND INM.INV_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND IGST_AMOUNT<>0 
								THEN 'IGST TAX A/C NOT SPECIFIED'
						 
						 WHEN ((ISNULL(PACMST.EXCISEDUTYAC,'') = '' OR ISNULL(PACMST.EXCISEDUTYAC,'') = '0000000000')  AND INM.INV_DT<@DGSTCUTOFFDATE 
								AND IND.ITEM_EXCISE_DUTY_AMOUNT<>0)
								THEN 'EXCISE CHARGES A/C NOT SPECIFIED'
						 WHEN ((ISNULL(PAC.PURAC,'') = '' OR ISNULL(PAC.PURAC,'') = '0000000000')  AND INM.INV_DT<@DGSTCUTOFFDATE
								AND INM.INV_TYPE<>2)
								THEN 'PURCHASE A/C NOT SPECIFIED'
						 WHEN ((ISNULL(PAC.SALEAC,'') = '' OR ISNULL(PAC.SALEAC,'') = '0000000000')  AND INM.INV_DT<@DGSTCUTOFFDATE 
								AND INM.INV_TYPE<>2)	
								THEN 'SALE A/C NOT SPECIFIED'
						 WHEN (INM.FREIGHT<>0 AND (@BPOSTFREIGHTSEPARATELY=1  OR INM.INV_DT>=@DGSTCUTOFFDATE) AND (@CFREIGHTACCODE = '' OR @CFREIGHTACCODE = '0000000000'))
								THEN 'FREIGHT A/C NOT SPECIFIED'		
						 WHEN (INM.OTHER_CHARGES<>0 AND (@BPOSTOTHERCHARGESSEPARATELY=1 OR INM.INV_DT>=@DGSTCUTOFFDATE) AND (@COTHERCHARGESACCODE='' OR @COTHERCHARGESACCODE='0000000000'))
								THEN 'OTHER CHARGES A/C NOT SPECIFIED' 
						 WHEN (INM.OCTROI_AMOUNT<>0 AND (@BPOSTOCTROISEPARATELY=1 OR INM.INV_DT>=@DGSTCUTOFFDATE) AND (@COCTROIACCODE='' OR @COCTROIACCODE='0000000000'))
								THEN 'OCTROI A/C NOT SPECIFIED' 		
						 WHEN (INM.INSURANCE<>0 AND (@BPOSTINSURANCESEPARATELY=1 OR INM.INV_DT>=@DGSTCUTOFFDATE) AND (@CINSURANCEACCODE='' OR @CINSURANCEACCODE='0000000000'))
								THEN 'INSURANCE A/C NOT SPECIFIED' 				
						 WHEN (INM.ROUND_OFF<>0 AND (@BPOSTROUNDOFFSEPARATELY=1 OR INM.INV_DT>=@DGSTCUTOFFDATE) AND (@CROUNDOFFACCODE = '' OR @CROUNDOFFACCODE = '0000000000'))
								THEN 'ROUND OFF A/C NOT SPECIFIED'		
						 WHEN (INM.NET_AMOUNT=0) 								
								THEN 'ZERO VALUE GROUP INVOICE'
						 ELSE 'UNIDENTIFIED ERROR' END) AS ERR_DESC		
			FROM INM01106 INM
			JOIN IND01106 IND ON INM.INV_ID=IND.INV_ID
			JOIN #POSTS TPT ON INM.INV_ID=TPT.MEMO_ID AND TPT.MODE='WSLCHO'
			LEFT OUTER JOIN XFRCONFIGDET PAC ON IND.ITEM_FORM_ID=PAC.FORMID 
			JOIN XFRCONFIGMST PACMST ON 1=1
			LEFT JOIN FORM FM ON FM.FORM_ID=IND.ITEM_FORM_ID
			LEFT OUTER JOIN GST_POSTING_CONFIG GPC ON GPC.GST_PERCENTAGE=ISNULL(IND.GST_PERCENTAGE,0) AND GPC.XN_TYPE IN ('XFR_OS_CHI','XFR_OS_CHO')
			WHERE 
			--GENERATE ERROR IF ITEM WITH INVALID FORM SELECTION IS FOUND.
			(IND.ITEM_FORM_ID='0000000' AND INM.INV_TYPE<>2 AND INM.INV_DT<@DGSTCUTOFFDATE)
			
			OR (INM.INV_DT>=@DGSTCUTOFFDATE  AND GPC.XN_TYPE IS NULL)			
			OR (INM.INV_DT>=@DGSTCUTOFFDATE AND LOCAL_XFR=0 AND GPC.XN_TYPE IS NULL AND @BGPCCONFIGFOUND=1)
			OR (INM.INV_DT>=@DGSTCUTOFFDATE AND LOCAL_XFR=0 AND @BGPCCONFIGFOUND=0)
			OR (INM.INV_DT>=@DGSTCUTOFFDATE AND LOCAL_XFR=1 AND ISNULL(@CLOCALSTKXFRACCODE,'') IN ('','0000000000'))
						
			OR (ISNULL(IND.HSN_CODE,'') IN ('','0000000000') AND INM.INV_DT>=@DGSTCUTOFFDATE 
				AND @DGSTCUTOFFDATE<>'')
				
			--GENERATE ERROR IF GROUP INVOICE TAX ACCOUNT IS NOT SPECIFIED.
			OR ((ISNULL(PAC.PURAC,'') = '' OR ISNULL(PAC.PURAC,'') = '0000000000') AND INM.INV_TYPE<>2 
				AND INM.INV_DT<@DGSTCUTOFFDATE) 
			--GENERATE ERROR IF PURCHASE ACCOUNT IN NOT SPECIFIED
			OR ((ISNULL(PAC.SALEAC,'') = '' OR ISNULL(PAC.SALEAC,'') = '0000000000') 
				 AND INM.INV_TYPE<>2 AND INM.INV_DT<@DGSTCUTOFFDATE)	 	
			--GENERATE ERROR IF SALE ACCOUNT IN NOT SPECIFIED
			OR ((ISNULL(PAC.TAXAC,'') = '' OR ISNULL(PAC.TAXAC,'') = '0000000000') 
				 AND INM.INV_TYPE<>2 AND INM.INV_DT<@DGSTCUTOFFDATE)	 		 
			--GENERATE ERROR IF EXCISE DUTY AMOUNT EXISTS AND ACCOUNT IN NOT SPECIFIED
			OR ((ISNULL(PACMST.EXCISEDUTYAC,'') = '' OR ISNULL(PACMST.EXCISEDUTYAC,'') = '0000000000') AND INM.INV_DT<@DGSTCUTOFFDATE
				 AND IND.ITEM_EXCISE_DUTY_AMOUNT<>0)	 		 	 
			--GENERATE ERROR IF FREIGHT SHOULD BE SEPARATELY POSTED AND FREIGHT ACCOUNT IS NOT SPECIFIED.
			OR (INM.FREIGHT<>0 AND (@BPOSTFREIGHTSEPARATELY=1 OR INM.INV_DT>=@DGSTCUTOFFDATE) AND (@CFREIGHTACCODE = '' OR @CFREIGHTACCODE = '0000000000'))
			--GENERATE ERROR IF OTHER CHARGES SHOULD BE SEPARATELY POSTED AND OTHER CHARGES ACCOUNT IS NOT SPECIFIED.
			OR (INM.OTHER_CHARGES<>0 AND (@BPOSTOTHERCHARGESSEPARATELY=1 OR INM.INV_DT>=@DGSTCUTOFFDATE) AND (@COTHERCHARGESACCODE='' OR @COTHERCHARGESACCODE='0000000000'))
			--GENERATE ERROR IF OCTROI SHOULD BE SEPARATELY POSTED AND OTHER OCTROI ACCOUNT IS NOT SPECIFIED.
			OR (INM.OCTROI_AMOUNT<>0 AND @BPOSTOCTROISEPARATELY=1 AND (@COCTROIACCODE='' OR @COCTROIACCODE='0000000000'))
			--GENERATE ERROR IF INSURANCE SHOULD BE SEPARATELY POSTED AND OTHER INSURANCE ACCOUNT IS NOT SPECIFIED.
			OR (INM.INSURANCE<>0 AND (@BPOSTINSURANCESEPARATELY=1  OR INM.INV_DT>=@DGSTCUTOFFDATE) AND (@CINSURANCEACCODE='' OR @CINSURANCEACCODE='0000000000'))
			--GENERATE ERROR IF ROUNDOFF SHOULD BE SEPARATELY POSTED AND ROUNDOFF ACCOUNT IS NOT SPECIFIED.
			OR (INM.ROUND_OFF<>0 AND (@BPOSTROUNDOFFSEPARATELY=1  OR INM.INV_DT>=@DGSTCUTOFFDATE) AND (@CROUNDOFFACCODE = '' OR @CROUNDOFFACCODE = '0000000000'))
			--GENERATE ERROR IF GROUP INVOICE IS NOT CANCELLED AND IT HAS TOTAL AMOUNT=0
			OR INM.NET_AMOUNT=0 
			UNION ALL
			SELECT DISTINCT RMM.RM_ID,RMM.RM_NO,'PRTCHO' AS XN_TYPE
				  ,(CASE 
						 WHEN RMD.ITEM_FORM_ID='0000000' AND  RMM.RM_DT<@DGSTCUTOFFDATE
								THEN 'FORM NOT SPECIFIED'
						 WHEN ((ISNULL(PAC.TAXAC,'') = '' OR ISNULL(PAC.TAXAC,'') = '0000000000') 
								 AND  RMM.RM_DT<@DGSTCUTOFFDATE)
								THEN 'TAX A/C NOT SPECIFIED'
						 WHEN ((ISNULL(PAC.PURAC,'') = '' OR ISNULL(PAC.PURAC,'') = '0000000000')  AND  RMM.RM_DT<@DGSTCUTOFFDATE 
								)
								THEN 'PURCHASE A/C NOT SPECIFIED'
						 WHEN ((ISNULL(PAC.SALEAC,'') = '' OR ISNULL(PAC.SALEAC,'') = '0000000000')  AND  RMM.RM_DT<@DGSTCUTOFFDATE 
								)	
								THEN 'SALE A/C NOT SPECIFIED'

						 WHEN RMM.RM_DT>=@DGSTCUTOFFDATE AND LOCAL_XFR=0 AND GPC.XN_TYPE IS NULL
						 AND @BGPCCONFIGFOUND=1 THEN 'IGST A/C CONFIGURATION NOT FOUND FOR RELATED GST PERCENTAGE'								
						 
						 WHEN RMM.RM_DT>=@DGSTCUTOFFDATE AND LOCAL_XFR=0 AND @BGPCCONFIGFOUND=0
								THEN 'IGST A/C CONFIGURATION NOT SETUP FOR WHOLESALE'								

						 WHEN RMM.RM_DT>=@DGSTCUTOFFDATE AND LOCAL_XFR=1 AND ISNULL(@CLOCALSTKXFRACCODE,'') IN ('','0000000000')
								THEN 'LOCAL STOCK TRANSFER A/C NOT DEFINED'												
						 
						 WHEN (ISNULL(GPC.IGST_XN_AC_CODE,'') = '' OR ISNULL(GPC.IGST_XN_AC_CODE,'') = '0000000000')
								AND RMM.RM_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND IGST_AMOUNT<>0 
						 THEN 'INTER STATE STOCK TRANSFER A/C NOT SPECIFIED'
						 
						 WHEN (ISNULL(GPC.IGST_TAX_AC_CODE,'') = '' OR ISNULL(GPC.IGST_TAX_AC_CODE,'') = '0000000000')
								AND RMM.RM_DT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>'' AND IGST_AMOUNT<>0 
						 THEN 'IGST TAX A/C NOT SPECIFIED'

						 WHEN (RMM.FREIGHT<>0 AND (@BPOSTFREIGHTSEPARATELY=1 OR RMM.RM_DT>=@DGSTCUTOFFDATE) AND (@CFREIGHTACCODE = '' OR @CFREIGHTACCODE = '0000000000'))
								THEN 'FREIGHT A/C NOT SPECIFIED'		
						 WHEN (RMM.OTHER_CHARGES<>0 AND (@BPOSTOTHERCHARGESSEPARATELY=1 OR RMM.RM_DT>=@DGSTCUTOFFDATE) AND (@COTHERCHARGESACCODE='' OR @COTHERCHARGESACCODE='0000000000'))
								THEN 'OTHER CHARGES A/C NOT SPECIFIED' 
						 WHEN (RMM.ROUND_OFF<>0 AND (@BPOSTROUNDOFFSEPARATELY=1 OR RMM.RM_DT>=@DGSTCUTOFFDATE) AND (@CROUNDOFFACCODE = '' OR @CROUNDOFFACCODE = '0000000000'))
								THEN 'ROUND OFF A/C NOT SPECIFIED'		
						 WHEN (RMM.TOTAL_AMOUNT=0) 								
								THEN 'ZERO VALUE GROUP INVOICE'
						 WHEN (RMM.EXCISE_DUTY_AMOUNT<>0 AND ISNULL(@CEXCISEDUTYAC,'') IN ('','0000000000')) 								
								THEN 'EXCISE DUTY A.C NOT DEFINED'								
						 								
						 ELSE 'UNIDENTIFIED ERROR' END) AS ERR_DESC		
			FROM RMM01106 RMM
			JOIN RMD01106 RMD ON RMM.RM_ID=RMD.RM_ID
			JOIN #POSTS TPT ON RMM.RM_ID=TPT.MEMO_ID AND TPT.MODE='PRTCHO'
			LEFT OUTER JOIN XFRCONFIGDET PAC ON RMD.ITEM_FORM_ID=PAC.FORMID 
			LEFT JOIN FORM FM ON FM.FORM_ID=RMD.ITEM_FORM_ID
			LEFT OUTER JOIN GST_POSTING_CONFIG GPC ON GPC.GST_PERCENTAGE=ISNULL(RMD.GST_PERCENTAGE,0) AND GPC.XN_TYPE IN ('XFR_OS_CHI','XFR_OS_CHO')

			WHERE 
			--GENERATE ERROR IF ITEM WITH INVALID FORM SELECTION IS FOUND.
			(RMD.ITEM_FORM_ID='0000000' AND RMM.RM_DT<@DGSTCUTOFFDATE)
			OR (RMM.RM_DT>=@DGSTCUTOFFDATE  AND GPC.XN_TYPE IS NULL)			
			OR (RMM.RM_DT>=@DGSTCUTOFFDATE AND LOCAL_XFR=0 AND GPC.XN_TYPE IS NULL AND @BGPCCONFIGFOUND=1)
			OR (RMM.RM_DT>=@DGSTCUTOFFDATE AND LOCAL_XFR=0 AND @BGPCCONFIGFOUND=0)
			OR (RMM.RM_DT>=@DGSTCUTOFFDATE AND LOCAL_XFR=1 AND ISNULL(@CLOCALSTKXFRACCODE,'') IN ('','0000000000'))
									
			--GENERATE ERROR IF GROUP INVOICE TAX ACCOUNT IS NOT SPECIFIED.
			OR ((ISNULL(PAC.PURAC,'') = '' OR ISNULL(PAC.PURAC,'') = '0000000000') AND RMM.RM_DT<@DGSTCUTOFFDATE)
			--GENERATE ERROR IF PURCHASE ACCOUNT IN NOT SPECIFIED
			OR ((ISNULL(PAC.SALEAC,'') = '' OR ISNULL(PAC.SALEAC,'') = '0000000000')  AND RMM.RM_DT<@DGSTCUTOFFDATE )	 	
			--GENERATE ERROR IF SALE ACCOUNT IN NOT SPECIFIED
			OR ((ISNULL(PAC.TAXAC,'') = '' OR ISNULL(PAC.TAXAC,'') = '0000000000') AND RMM.RM_DT<@DGSTCUTOFFDATE)	 		 
			--GENERATE ERROR IF EXCISE DUTY AMOUNT EXISTS AND ACCOUNT IN NOT SPECIFIED
			OR ((ISNULL(@CEXCISEDUTYAC,'') = '' OR ISNULL(@CEXCISEDUTYAC,'') = '0000000000') 
				AND RMM.EXCISE_DUTY_AMOUNT<>0)	 		 	 
			--GENERATE ERROR IF FREIGHT SHOULD BE SEPARATELY POSTED AND FREIGHT ACCOUNT IS NOT SPECIFIED.
			OR (RMM.FREIGHT<>0 AND (@BPOSTFREIGHTSEPARATELY=1 OR  RMM.RM_DT>=@DGSTCUTOFFDATE) AND (@CFREIGHTACCODE = '' OR @CFREIGHTACCODE = '0000000000'))
			--GENERATE ERROR IF OTHER CHARGES SHOULD BE SEPARATELY POSTED AND OTHER CHARGES ACCOUNT IS NOT SPECIFIED.
			OR (RMM.OTHER_CHARGES<>0 AND (@BPOSTOTHERCHARGESSEPARATELY=1 OR  RMM.RM_DT>=@DGSTCUTOFFDATE) AND (@COTHERCHARGESACCODE='' OR @COTHERCHARGESACCODE='0000000000'))
			--GENERATE ERROR IF ROUNDOFF SHOULD BE SEPARATELY POSTED AND ROUNDOFF ACCOUNT IS NOT SPECIFIED.
			OR (RMM.ROUND_OFF<>0 AND (@BPOSTROUNDOFFSEPARATELY=1 OR  RMM.RM_DT>=@DGSTCUTOFFDATE) AND (@CROUNDOFFACCODE = '' OR @CROUNDOFFACCODE = '0000000000'))
			--GENERATE ERROR IF GROUP INVOICE IS NOT CANCELLED AND IT HAS TOTAL AMOUNT=0
			OR RMM.TOTAL_AMOUNT=0
	       
	        SET @CSTEP = 350
	        --DELETE INV_ID FROM TEPM TABLE WHICH HAVE SOME ERROR
	        DELETE A 
	        FROM #POSTS A 
	        JOIN @ERRORS B ON A.MEMO_ID = B.XN_ID AND A.MODE=B.XN_TYPE
	        
	        --SELECT COUNT(*) FROM #POSTS
	        SET @CSTEP = 360
	        IF OBJECT_ID('TEMPDB..#V_PROCESS','U') IS NOT NULL
				DROP TABLE #V_PROCESS
			
			
			SET @CSTEP = 370
			/*
				BILL_LEVEL_TAX_METHOD : 1 IS EXCLUSIVE
										2 IS INCLUSIVE
														
			*/
			--A SINGLE GROUP INVOICE MEMO CAN HAVE MULTIPLE GROUP INVOICE AND TAX ACCOUNTS BASED ON MULTIPLE FORMS
		 	SELECT  A.INV_NO AS MEMO_NO, 
					A.INV_ID AS MEMO_ID, 
					A.INV_DT AS MEMO_DT,
					LOCT.DEPT_AC_CODE, 
					A.REMARKS, 
					A.NET_AMOUNT AS MEMO_AMOUNT
					,A.CANCELLED
					,SUM(IND.RFNET) AS TOTAL_AMOUNT, 
					SUM((IND.RATE*IND.QUANTITY)-(CASE WHEN BILL_LEVEL_TAX_METHOD=2 THEN IND.ITEM_TAX_AMOUNT ELSE 0 END))*-1 AS SUBTOTAL, 
					SUM(CASE WHEN SUBTOTAL=0 THEN 0 ELSE ((A.DISCOUNT_AMOUNT/SUBTOTAL)*
						((IND.RATE*IND.QUANTITY)-IND.DISCOUNT_AMOUNT))+IND.DISCOUNT_AMOUNT END)*-1 AS DISCOUNT_AMOUNT
					,SUM(IND.ITEM_TAX_AMOUNT)*-1 AS TAX_AMOUNT
					,SUM(CASE WHEN SUBTOTAL=0 THEN 0 ELSE (A.FREIGHT/SUBTOTAL)*
						((IND.RATE*QUANTITY)-IND.DISCOUNT_AMOUNT) END)*-1 AS FREIGHT
					,SUM(CASE WHEN SUBTOTAL=0 THEN 0 ELSE (A.OTHER_CHARGES/SUBTOTAL)*
						((IND.RATE*QUANTITY)-IND.DISCOUNT_AMOUNT) END)*-1 AS OTHERCHARGES
					,SUM(CASE WHEN SUBTOTAL=0 THEN 0 ELSE (A.ROUND_OFF/SUBTOTAL)*
						((IND.RATE*QUANTITY)-IND.DISCOUNT_AMOUNT) END)*-1 AS ROUNDOFF
					,SUM(IND.QUANTITY) AS QUANTITY
					,SUM(CASE WHEN SUBTOTAL=0 THEN 0 ELSE (A.OCTROI_AMOUNT/SUBTOTAL)*
						((IND.RATE*QUANTITY)-IND.DISCOUNT_AMOUNT) END)*-1 AS OCTROIAMOUNT
					,SUM(CASE WHEN SUBTOTAL=0 THEN 0 ELSE (A.INSURANCE/SUBTOTAL)*
						((IND.RATE*QUANTITY)-IND.DISCOUNT_AMOUNT) END)*-1 AS INSURANCE
					,SUM(IND.ITEM_EXCISE_DUTY_AMOUNT)*-1 AS EXCISEDUTYAMOUNT
					,a.location_Code  AS DEPT_ID
					,A.FIN_YEAR
					,PC.SALEAC AS XN_AC_CODE
					,PC.TAXAC  AS TAX_AC_CODE
					,D.AC_NAME AS PARTY_NAME
					,'0000000007' AS VOUCHER_TYPE
					,A.INV_ID AS REF_MEMO_ID
					,A.INV_DT AS REF_MEMO_DT
					,@CEXCISEDUTYAC AS EXCISE_AC_CODE
					,'WSLCHO' AS XN_TYPE
					,SUM(XN_VALUE_WITHOUT_GST)*-1 AS XN_VALUE_WITHOUT_GST
		 			,SUM(IGST_AMOUNT)*-1 AS IGST_AMOUNT
		 			,SUM(CGST_AMOUNT)*-1 AS CGST_AMOUNT
		 			,SUM(SGST_AMOUNT)*-1 AS SGST_AMOUNT
		 			,FREIGHT_GST_PERCENTAGE
		 			,OTHER_CHARGES_GST_PERCENTAGE
		 			,(FREIGHT_IGST_AMOUNT*-1) AS FREIGHT_IGST_AMOUNT
		 			,(FREIGHT_CGST_AMOUNT*-1) AS FREIGHT_CGST_AMOUNT
		 			,(FREIGHT_SGST_AMOUNT*-1) AS FREIGHT_SGST_AMOUNT
		 			,(INSURANCE_IGST_AMOUNT*-1) AS INSURANCE_IGST_AMOUNT
		 			,(INSURANCE_CGST_AMOUNT*-1) AS INSURANCE_CGST_AMOUNT
		 			,(INSURANCE_SGST_AMOUNT*-1) AS INSURANCE_SGST_AMOUNT
		 			,(OTHER_CHARGES_IGST_AMOUNT*-1) AS OTHER_CHARGES_IGST_AMOUNT
		 			,(OTHER_CHARGES_CGST_AMOUNT*-1) AS OTHER_CHARGES_CGST_AMOUNT
		 			,(OTHER_CHARGES_SGST_AMOUNT*-1) AS OTHER_CHARGES_SGST_AMOUNT
		 			,LOCS.GST_STATE_CODE AS LOC_GST_STATE_CODE
		 			,LOCT.GST_STATE_CODE AS PARTY_GST_STATE_CODE
		 			,GPC.IGST_XN_AC_CODE
		 			,GPC.IGST_TAX_AC_CODE
 			        ,(A.FREIGHT_TAXABLE_VALUE+(CASE WHEN A.OH_TAX_METHOD=2 THEN A.FREIGHT_IGST_AMOUNT+A.FREIGHT_CGST_AMOUNT+A.FREIGHT_SGST_AMOUNT ELSE 0 END)-A.FREIGHT) AS FREIGHT_RO
			        ,(A.OTHER_CHARGES_TAXABLE_VALUE+(CASE WHEN A.OH_TAX_METHOD=2 THEN A.OTHER_CHARGES_IGST_AMOUNT+A.OTHER_CHARGES_CGST_AMOUNT+A.OTHER_CHARGES_SGST_AMOUNT ELSE 0 END)-A.OTHER_CHARGES) AS OTHER_CHARGES_RO       
		 			,A.FREIGHT AS MEMO_FREIGHT
		 			,A.OTHER_CHARGES AS MEMO_OTHER_CHARGES		 		
		 			,OH_TAX_METHOD,MANUAL_ROUNDOFF	
			INTO #V_PROCESS
			FROM INM01106 A 
			JOIN #POSTS PS ON A.INV_ID=PS.MEMO_ID AND PS.MODE='WSLCHO'
			JOIN IND01106 IND ON A.INV_ID=IND.INV_ID
			LEFT OUTER JOIN XFRCONFIGDET PC ON IND.ITEM_FORM_ID=PC.FORMID 
			JOIN LOCATION LOCS ON LOCS.DEPT_ID=a.location_Code 
			JOIN LM01106 LMLOC ON LMLOC.AC_CODE=LOCS.DEPT_AC_CODE
			JOIN LOCATION LOCT ON LOCT.DEPT_ID=A.PARTY_DEPT_ID
			JOIN LMV01106 D ON LOCT.DEPT_AC_CODE = D.AC_CODE
			JOIN AREA ON AREA.AREA_CODE=LOCS.AREA_CODE
			JOIN CITY ON CITY.CITY_CODE=AREA.CITY_CODE
			LEFT OUTER JOIN GST_POSTING_CONFIG GPC ON GPC.GST_PERCENTAGE=IND.GST_PERCENTAGE AND GPC.XN_TYPE='XFR_OS_CHO'			
			GROUP BY A.INV_NO, 
					 A.INV_ID, 
					 A.INV_DT ,
					 LOCT.DEPT_AC_CODE, 
					 A.REMARKS,
					 A.NET_AMOUNT, 
					 a.location_Code , 
					 A.FIN_YEAR,
					 PC.SALEAC,
					 PC.TAXAC,
					 D.AC_NAME,
					 A.CANCELLED
					,FREIGHT_GST_PERCENTAGE
		 			,OTHER_CHARGES_GST_PERCENTAGE
		 			,FREIGHT_IGST_AMOUNT
		 			,FREIGHT_CGST_AMOUNT
		 			,FREIGHT_SGST_AMOUNT
		 			,INSURANCE_IGST_AMOUNT
		 			,INSURANCE_CGST_AMOUNT
		 			,INSURANCE_SGST_AMOUNT
		 			,OTHER_CHARGES_IGST_AMOUNT
		 			,OTHER_CHARGES_CGST_AMOUNT
		 			,OTHER_CHARGES_SGST_AMOUNT
		 			,LOCS.GST_STATE_CODE
		 			,LOCT.GST_STATE_CODE					 
		 			,GPC.IGST_XN_AC_CODE
		 			,GPC.IGST_TAX_AC_CODE
		 			,A.FREIGHT
		 			,A.OTHER_CHARGES
		 			,A.FREIGHT_TAXABLE_VALUE
		 			,A.OTHER_CHARGES_TAXABLE_VALUE
					,OH_TAX_METHOD,MANUAL_ROUNDOFF		 			
			UNION ALL
			SELECT  A.INV_NO AS MEMO_NO, 
					E.MRR_ID AS MEMO_ID, 
					(CASE WHEN @CPOSTXFRBILLDATE='1' THEN A.INV_DT ELSE E.RECEIPT_DT END) AS MEMO_DT,
					LOCS.DEPT_AC_CODE,
					A.REMARKS, 
					A.NET_AMOUNT AS MEMO_AMOUNT
					,A.CANCELLED
					,SUM(IND.RFNET)*-1 AS TOTAL_AMOUNT, 
					SUM((IND.RATE*IND.QUANTITY)-(CASE WHEN BILL_LEVEL_TAX_METHOD=2 THEN IND.ITEM_TAX_AMOUNT ELSE 0 END)) AS SUBTOTAL, 
					SUM(CASE WHEN SUBTOTAL=0 THEN 0 ELSE ((A.DISCOUNT_AMOUNT/SUBTOTAL)*((IND.RATE*IND.QUANTITY)-IND.DISCOUNT_AMOUNT))+IND.DISCOUNT_AMOUNT END) AS DISCOUNT_AMOUNT,
					SUM(CASE WHEN BILL_LEVEL_TAX_METHOD=1 THEN IND.ITEM_TAX_AMOUNT ELSE 0 END) AS TAX_AMOUNT, 
					SUM(CASE WHEN SUBTOTAL=0 THEN 0 ELSE (A.FREIGHT/SUBTOTAL)*((IND.RATE*QUANTITY)-IND.DISCOUNT_AMOUNT) END) AS FREIGHT,
					SUM(CASE WHEN SUBTOTAL=0 THEN 0 ELSE (A.OTHER_CHARGES/SUBTOTAL)*((IND.RATE*QUANTITY)-IND.DISCOUNT_AMOUNT) END) AS OTHERCHARGES,
					SUM(CASE WHEN SUBTOTAL=0 THEN 0 ELSE (A.ROUND_OFF/SUBTOTAL)*((IND.RATE*QUANTITY)-IND.DISCOUNT_AMOUNT) END) AS ROUNDOFF,
					SUM(IND.QUANTITY) AS QUANTITY,
					SUM(CASE WHEN SUBTOTAL=0 THEN 0 ELSE (A.OCTROI_AMOUNT/SUBTOTAL)*((IND.RATE*QUANTITY)-IND.DISCOUNT_AMOUNT) END) AS OCTROIAMOUNT,
					SUM(CASE WHEN SUBTOTAL=0 THEN 0 ELSE (A.INSURANCE/SUBTOTAL)*((IND.RATE*QUANTITY)-IND.DISCOUNT_AMOUNT) END) AS INSURANCE,
					SUM(IND.ITEM_EXCISE_DUTY_AMOUNT) AS EXCISEDUTYAMOUNT,						
					e.location_code  AS DEPT_ID, 
					A.FIN_YEAR,
					PC.PURAC  AS XN_AC_CODE,
					PC.TAXAC  AS TAX_AC_CODE,
					LMLOC.AC_NAME AS PARTY_NAME,
					'0000000006' AS VOUCHER_TYPE,
					A.INV_ID AS REF_MEMO_ID,
					A.INV_DT AS REF_MEMO_DT,
					@CEXCISEDUTYAC AS EXCISE_AC_CODE
					,'PURCHI' AS XN_TYPE
					,SUM(XN_VALUE_WITHOUT_GST) AS XN_VALUE_WITHOUT_GST
		 			,SUM(IGST_AMOUNT) AS IGST_AMOUNT
		 			,SUM(CGST_AMOUNT) AS CGST_AMOUNT
		 			,SUM(SGST_AMOUNT) AS SGST_AMOUNT
		 			,A.FREIGHT_GST_PERCENTAGE
		 			,A.OTHER_CHARGES_GST_PERCENTAGE
		 			,FREIGHT_IGST_AMOUNT
		 			,FREIGHT_CGST_AMOUNT
		 			,FREIGHT_SGST_AMOUNT
		 			,0 AS INSURANCE_IGST_AMOUNT
		 			,0 AS INSURANCE_CGST_AMOUNT
		 			,0 AS INSURANCE_SGST_AMOUNT
		 			,OTHER_CHARGES_IGST_AMOUNT
		 			,OTHER_CHARGES_CGST_AMOUNT
		 			,OTHER_CHARGES_SGST_AMOUNT
		 			,LOCS.GST_STATE_CODE AS LOC_GST_STATE_CODE
		 			,LOCT.GST_STATE_CODE AS PARTY_GST_STATE_CODE
		 			,GPC.IGST_XN_AC_CODE
		 			,GPC.IGST_TAX_AC_CODE
 			        ,A.FREIGHT-(A.FREIGHT_TAXABLE_VALUE+(CASE WHEN A.OH_TAX_METHOD=2 THEN A.FREIGHT_IGST_AMOUNT+A.FREIGHT_CGST_AMOUNT+A.FREIGHT_SGST_AMOUNT ELSE 0 END)) AS FREIGHT_RO
			        ,A.OTHER_CHARGES-(A.OTHER_CHARGES_TAXABLE_VALUE+(CASE WHEN A.OH_TAX_METHOD=2 THEN A.OTHER_CHARGES_IGST_AMOUNT+A.OTHER_CHARGES_CGST_AMOUNT+A.OTHER_CHARGES_SGST_AMOUNT ELSE 0 END)) AS OTHER_CHARGES_RO       
		 			,A.FREIGHT AS MEMO_FREIGHT
		 			,A.OTHER_CHARGES AS MEMO_OTHER_CHARGES		 			
		 			,OH_TAX_METHOD,MANUAL_ROUNDOFF
			FROM INM01106 A 
			JOIN IND01106 IND ON A.INV_ID=IND.INV_ID
			JOIN LMV01106 D ON A.AC_CODE = D.AC_CODE
			JOIN (SELECT pim.location_Code  MRR_ID,INV_ID,PIM.RECEIPT_DT FROM PIM01106 PIM
				  JOIN #POSTS PST ON PIM.MRR_ID=PST.MEMO_ID 
				  WHERE PST.MODE='PURCHI') E ON E.INV_ID=A.INV_ID
			LEFT OUTER JOIN XFRCONFIGDET PC ON IND.ITEM_FORM_ID=PC.FORMID 
			JOIN LOCATION LOCS ON LOCS.DEPT_ID=a.location_Code 
			JOIN LM01106 LMLOC ON LMLOC.AC_CODE=LOCS.DEPT_AC_CODE
			JOIN LOCATION LOCT ON LOCT.DEPT_ID=A.PARTY_DEPT_ID
			JOIN AREA ON AREA.AREA_CODE=LOCS.AREA_CODE
			JOIN CITY ON CITY.CITY_CODE=AREA.CITY_CODE
			LEFT OUTER JOIN GST_POSTING_CONFIG GPC ON GPC.GST_PERCENTAGE=IND.GST_PERCENTAGE AND GPC.XN_TYPE='XFR_OS_CHI'
			GROUP BY A.AC_CODE, 
					A.REMARKS,
					A.NET_AMOUNT, 
					a.location_Code , 
					A.FIN_YEAR,
					PC.PURAC,
					PC.TAXAC,
					LOCS.DEPT_AC_CODE,LMLOC.AC_NAME,
					A.INV_NO,E.MRR_ID,E.RECEIPT_DT,A.INV_ID,A.INV_DT
					,A.CANCELLED
					,A.FREIGHT_GST_PERCENTAGE
		 			,A.OTHER_CHARGES_GST_PERCENTAGE
		 			,FREIGHT_IGST_AMOUNT
		 			,FREIGHT_CGST_AMOUNT
		 			,FREIGHT_SGST_AMOUNT
		 			,INSURANCE_IGST_AMOUNT
		 			,INSURANCE_CGST_AMOUNT
		 			,INSURANCE_SGST_AMOUNT
		 			,OTHER_CHARGES_IGST_AMOUNT
		 			,OTHER_CHARGES_CGST_AMOUNT
		 			,OTHER_CHARGES_SGST_AMOUNT
		 			,LOCS.GST_STATE_CODE
		 			,LOCT.GST_STATE_CODE					
		 			,GPC.XN_TYPE 
		 			,IGST_XN_AC_CODE
		 			,IGST_TAX_AC_CODE
		 			,A.FREIGHT
		 			,A.OTHER_CHARGES		 			
		 			,A.FREIGHT_TAXABLE_VALUE
		 			,A.OTHER_CHARGES_TAXABLE_VALUE		 			
					,OH_TAX_METHOD,MANUAL_ROUNDOFF		 			
			UNION ALL	
			SELECT  A.RM_NO AS MEMO_NO, 
					A.RM_ID AS MEMO_ID, 
					A.RM_DT  AS MEMO_DT,
					LOCT.DEPT_AC_CODE, 
					A.REMARKS, 
					A.TOTAL_AMOUNT AS MEMO_AMOUNT
					,A.CANCELLED
					,SUM(RMD.RFNET) AS TOTAL_AMOUNT, 
					SUM(RMD.PURCHASE_PRICE*RMD.QUANTITY)*-1 AS SUBTOTAL, 
					SUM(CASE WHEN SUBTOTAL=0 THEN 0 ELSE ((A.DISCOUNT_AMOUNT/SUBTOTAL)*
						RMD.PURCHASE_PRICE*RMD.QUANTITY) END)*-1 AS DISCOUNT_AMOUNT,
					SUM(RMD.ITEM_TAX_AMOUNT)*-1 AS TAX_AMOUNT, 
					SUM(CASE WHEN SUBTOTAL=0 THEN 0 ELSE (A.FREIGHT/SUBTOTAL)*
						((RMD.PURCHASE_PRICE*QUANTITY)) END)*-1 AS FREIGHT,
					SUM(CASE WHEN SUBTOTAL=0 THEN 0 ELSE (A.OTHER_CHARGES/SUBTOTAL)*
						((RMD.PURCHASE_PRICE*QUANTITY)) END)*-1 AS OTHERCHARGES,
					SUM(CASE WHEN SUBTOTAL=0 THEN 0 ELSE (A.ROUND_OFF/SUBTOTAL)*
						((RMD.PURCHASE_PRICE*QUANTITY)) END)*-1 AS ROUNDOFF,
					SUM(RMD.QUANTITY) AS QUANTITY,
					0 AS OCTROIAMOUNT,
					0 AS INSURANCE,
					SUM(CASE WHEN SUBTOTAL=0 THEN 0 ELSE (A.EXCISE_DUTY_AMOUNT/SUBTOTAL)*
						((RMD.PURCHASE_PRICE*QUANTITY)) END)*-1 AS EXCISEDUTYAMOUNT,						
					a.location_Code  AS DEPT_ID, 
					A.FIN_YEAR,
					PC.PURAC AS XN_AC_CODE,
					PC.TAXAC AS TAX_AC_CODE,
					D.AC_NAME AS PARTY_NAME,
					'0000000005' AS VOUCHER_TYPE,
					A.RM_ID AS REF_MEMO_ID,
					A.RM_DT AS REF_MEMO_DT,
					@CEXCISEDUTYAC AS EXCISE_AC_CODE
					,'PRTCHO' AS XN_TYPE
					,SUM(XN_VALUE_WITHOUT_GST)*-1 AS XN_VALUE_WITHOUT_GST
		 			,SUM(IGST_AMOUNT)*-1 AS IGST_AMOUNT
		 			,SUM(CGST_AMOUNT)*-1 AS CGST_AMOUNT
		 			,SUM(SGST_AMOUNT)*-1 AS SGST_AMOUNT
		 			,FREIGHT_GST_PERCENTAGE
		 			,OTHER_CHARGES_GST_PERCENTAGE
		 			,(FREIGHT_IGST_AMOUNT*-1) AS FREIGHT_IGST_AMOUNT
		 			,(FREIGHT_CGST_AMOUNT*-1) AS FREIGHT_CGST_AMOUNT
		 			,(FREIGHT_SGST_AMOUNT*-1) AS FREIGHT_SGST_AMOUNT
		 			,0 AS INSURANCE_IGST_AMOUNT
		 			,0 AS INSURANCE_CGST_AMOUNT
		 			,0 AS INSURANCE_SGST_AMOUNT
		 			,(OTHER_CHARGES_IGST_AMOUNT*-1) AS OTHER_CHARGES_IGST_AMOUNT
		 			,(OTHER_CHARGES_CGST_AMOUNT*-1) AS OTHER_CHARGES_CGST_AMOUNT
		 			,(OTHER_CHARGES_SGST_AMOUNT*-1) AS OTHER_CHARGES_SGST_AMOUNT
		 			,LOCS.GST_STATE_CODE AS LOC_GST_STATE_CODE
		 			,LOCT.GST_STATE_CODE AS PARTY_GST_STATE_CODE
		 			,GPC.IGST_XN_AC_CODE
		 			,GPC.IGST_TAX_AC_CODE
 			        ,(A.FREIGHT_TAXABLE_VALUE+(CASE WHEN A.OH_TAX_METHOD=2 THEN A.FREIGHT_IGST_AMOUNT+A.FREIGHT_CGST_AMOUNT+A.FREIGHT_SGST_AMOUNT ELSE 0 END)-A.FREIGHT) AS FREIGHT_RO
			        ,(A.OTHER_CHARGES_TAXABLE_VALUE+(CASE WHEN A.OH_TAX_METHOD=2 THEN A.OTHER_CHARGES_IGST_AMOUNT+A.OTHER_CHARGES_CGST_AMOUNT+A.OTHER_CHARGES_SGST_AMOUNT ELSE 0 END)-A.OTHER_CHARGES) AS OTHER_CHARGES_RO       
		 			,A.FREIGHT AS MEMO_FREIGHT
		 			,A.OTHER_CHARGES AS MEMO_OTHER_CHARGES			        
		 			,OH_TAX_METHOD,MANUAL_ROUNDOFF
			FROM RMM01106 A 	
			JOIN RMD01106 RMD ON A.RM_ID=RMD.RM_ID
			JOIN FORM C ON RMD.ITEM_FORM_ID = C.FORM_ID
			JOIN #POSTS PS ON A.RM_ID=PS.MEMO_ID AND PS.MODE='PRTCHO'
			LEFT OUTER JOIN XFRCONFIGDET PC ON RMD.ITEM_FORM_ID=PC.FORMID
			JOIN LOCATION LOCS ON LOCS.DEPT_ID=a.location_Code 
			JOIN LOCATION LOCT ON LOCT.DEPT_ID=A.PARTY_DEPT_ID
			JOIN LMV01106 D ON LOCT.DEPT_AC_CODE = D.AC_CODE
			LEFT OUTER JOIN GST_POSTING_CONFIG GPC ON GPC.GST_PERCENTAGE=RMD.GST_PERCENTAGE AND GPC.XN_TYPE='XFR_OS_CHO'
			GROUP BY A.RM_NO, 
					A.RM_ID, 
					A.RM_DT ,
					LOCT.DEPT_AC_CODE, 
					A.REMARKS,
					A.TOTAL_AMOUNT, 
					a.location_Code , 
					A.FIN_YEAR,
					PC.PURAC,
					PC.TAXAC,
					D.AC_NAME,
					A.CANCELLED
					,FREIGHT_GST_PERCENTAGE
		 			,OTHER_CHARGES_GST_PERCENTAGE
		 			,FREIGHT_IGST_AMOUNT
		 			,FREIGHT_CGST_AMOUNT
		 			,FREIGHT_SGST_AMOUNT
		 			,OTHER_CHARGES_IGST_AMOUNT
		 			,OTHER_CHARGES_CGST_AMOUNT
		 			,OTHER_CHARGES_SGST_AMOUNT
		 			,LOCS.GST_STATE_CODE
		 			,LOCT.GST_STATE_CODE					
		 			,GPC.XN_TYPE 
		 			,IGST_XN_AC_CODE
		 			,IGST_TAX_AC_CODE
		 			,A.FREIGHT
		 			,A.OTHER_CHARGES		 	
		 			,A.FREIGHT_TAXABLE_VALUE
		 			,A.OTHER_CHARGES_TAXABLE_VALUE		 					
		 			,OH_TAX_METHOD,MANUAL_ROUNDOFF
			UNION ALL	
			SELECT  A.RM_NO AS MEMO_NO, 
					E.CN_ID AS MEMO_ID, 
					(CASE WHEN @CPOSTXFRBILLDATE='1' THEN A.RM_DT ELSE E.RECEIPT_DT END) AS MEMO_DT,
					LOCS.DEPT_AC_CODE,
					A.REMARKS, 
					A.TOTAL_AMOUNT AS MEMO_AMOUNT
					,A.CANCELLED
					,SUM(RMD.RFNET)*-1 AS TOTAL_AMOUNT, 
					SUM(RMD.PURCHASE_PRICE*RMD.QUANTITY) AS SUBTOTAL, 
					SUM(CASE WHEN SUBTOTAL=0 THEN 0 ELSE ((A.DISCOUNT_AMOUNT/SUBTOTAL)*RMD.PURCHASE_PRICE*RMD.QUANTITY) END) AS DISCOUNT_AMOUNT,
					SUM(RMD.ITEM_TAX_AMOUNT) AS TAX_AMOUNT, 
					SUM(CASE WHEN SUBTOTAL=0 THEN 0 ELSE (A.FREIGHT/SUBTOTAL)*((RMD.PURCHASE_PRICE*QUANTITY)) END) AS FREIGHT,
					SUM(CASE WHEN SUBTOTAL=0 THEN 0 ELSE (A.OTHER_CHARGES/SUBTOTAL)*((RMD.PURCHASE_PRICE*QUANTITY)) END) AS OTHERCHARGES,
					SUM(CASE WHEN SUBTOTAL=0 THEN 0 ELSE (A.ROUND_OFF/SUBTOTAL)*((RMD.PURCHASE_PRICE*QUANTITY)) END) AS ROUNDOFF,
					SUM(RMD.QUANTITY) AS QUANTITY,
					0 AS OCTROIAMOUNT,0 AS INSURANCE,
					SUM(CASE WHEN SUBTOTAL=0 THEN 0 ELSE (A.EXCISE_DUTY_AMOUNT/SUBTOTAL)*((RMD.PURCHASE_PRICE*QUANTITY)) END) AS EXCISEDUTYAMOUNT,						
					e.location_code  AS DEPT_ID, 
					A.FIN_YEAR,
					PC.SALEAC,
					PC.TAXAC,
					LMLOC.AC_NAME AS PARTY_NAME,
					'0000000004' AS VOUCHER_TYPE,
					A.RM_ID AS REF_MEMO_ID,
					A.RM_DT AS REF_MEMO_DT,
					@CEXCISEDUTYAC,
					'WSRCHI' AS XN_TYPE
					,SUM(XN_VALUE_WITHOUT_GST) AS XN_VALUE_WITHOUT_GST
		 			,SUM(IGST_AMOUNT) AS IGST_AMOUNT
		 			,SUM(CGST_AMOUNT) AS CGST_AMOUNT
		 			,SUM(SGST_AMOUNT) AS SGST_AMOUNT
		 			,FREIGHT_GST_PERCENTAGE
		 			,OTHER_CHARGES_GST_PERCENTAGE
		 			,FREIGHT_IGST_AMOUNT
		 			,FREIGHT_CGST_AMOUNT
		 			,FREIGHT_SGST_AMOUNT
		 			,0 AS INSURANCE_IGST_AMOUNT
		 			,0 AS INSURANCE_CGST_AMOUNT
		 			,0 AS INSURANCE_SGST_AMOUNT
		 			,OTHER_CHARGES_IGST_AMOUNT
		 			,OTHER_CHARGES_CGST_AMOUNT
		 			,OTHER_CHARGES_SGST_AMOUNT
		 			,LOCS.GST_STATE_CODE AS LOC_GST_STATE_CODE
		 			,LOCT.GST_STATE_CODE AS PARTY_GST_STATE_CODE					
		 			,GPC.IGST_XN_AC_CODE
		 			,GPC.IGST_TAX_AC_CODE
 			        ,A.FREIGHT-(A.FREIGHT_TAXABLE_VALUE+(CASE WHEN A.OH_TAX_METHOD=2 THEN A.FREIGHT_IGST_AMOUNT+A.FREIGHT_CGST_AMOUNT+A.FREIGHT_SGST_AMOUNT ELSE 0 END)) AS FREIGHT_RO
			        ,A.OTHER_CHARGES-(A.OTHER_CHARGES_TAXABLE_VALUE+(CASE WHEN A.OH_TAX_METHOD=2 THEN A.OTHER_CHARGES_IGST_AMOUNT+A.OTHER_CHARGES_CGST_AMOUNT+A.OTHER_CHARGES_SGST_AMOUNT ELSE 0 END)) AS OTHER_CHARGES_RO       
		 			,A.FREIGHT AS MEMO_FREIGHT
		 			,A.OTHER_CHARGES AS MEMO_OTHER_CHARGES
		 			,OH_TAX_METHOD,MANUAL_ROUNDOFF
			FROM RMM01106 A 	
			JOIN RMD01106 RMD ON A.RM_ID=RMD.RM_ID
			JOIN FORM C ON RMD.ITEM_FORM_ID = C.FORM_ID
			JOIN LMV01106 D ON A.AC_CODE = D.AC_CODE
			JOIN (SELECT cnm.location_Code , CN_ID,RM_ID,CNM.RECEIPT_DT FROM CNM01106 CNM
				  JOIN #POSTS PST ON CNM.CN_ID=PST.MEMO_ID 
				  WHERE PST.MODE='WSRCHI') E ON E.RM_ID=A.RM_ID
			LEFT OUTER JOIN XFRCONFIGDET PC ON RMD.ITEM_FORM_ID=PC.FORMID
			JOIN LOCATION LOCS ON LOCS.DEPT_ID=a.location_Code 
			JOIN LOCATION LOCT ON LOCT.DEPT_ID=A.PARTY_DEPT_ID
			JOIN LM01106 LMLOC ON LMLOC.AC_CODE=LOCS.DEPT_AC_CODE
			LEFT OUTER JOIN GST_POSTING_CONFIG GPC ON GPC.GST_PERCENTAGE=RMD.GST_PERCENTAGE AND GPC.XN_TYPE='XFR_OS_CHI'
			GROUP BY A.RM_NO,A.RM_ID,A.RM_DT,A.REMARKS,
					A.TOTAL_AMOUNT, 
					a.location_Code , 
					A.FIN_YEAR,
					PC.SALEAC,LOCS.DEPT_AC_CODE,LMLOC.AC_NAME,
					PC.TAXAC,E.CN_ID,E.RECEIPT_DT,A.CANCELLED
					,FREIGHT_GST_PERCENTAGE
		 			,OTHER_CHARGES_GST_PERCENTAGE
		 			,FREIGHT_IGST_AMOUNT
		 			,FREIGHT_CGST_AMOUNT
		 			,FREIGHT_SGST_AMOUNT
		 			,OTHER_CHARGES_IGST_AMOUNT
		 			,OTHER_CHARGES_CGST_AMOUNT
		 			,OTHER_CHARGES_SGST_AMOUNT
		 			,LOCS.GST_STATE_CODE
		 			,LOCT.GST_STATE_CODE					
		 			,GPC.XN_TYPE 
		 			,IGST_XN_AC_CODE
		 			,IGST_TAX_AC_CODE
		 			,A.FREIGHT
		 			,A.OTHER_CHARGES		 	
		 			,A.FREIGHT_TAXABLE_VALUE
		 			,A.OTHER_CHARGES_TAXABLE_VALUE		 					
		 			,OH_TAX_METHOD,MANUAL_ROUNDOFF
			ORDER BY REF_MEMO_DT,REF_MEMO_ID
		
		CREATE INDEX IX_V_PROCESS_RM_ID ON #V_PROCESS(MEMO_ID,XN_TYPE)
		
		--SELECT 'CHECK VPROCESS',* FROM #V_PROCESS WHERE REF_MEMO_ID='01011180103-00001'
		
		SELECT @CMEMOID='',@CXNTYPE='',@CAC_CODE='',@NCTR=1
		SET @CSTEP = 380
		WHILE EXISTS(SELECT TOP 1 'U' FROM #V_PROCESS)
		BEGIN
			SET @CSTEP = 390
			SELECT TOP 1 @CMEMOID=MEMO_ID,@CMEMONO=MEMO_NO,@DMEMODT=MEMO_DT,@CXNTYPE=XN_TYPE,@CAC_CODE=DEPT_AC_CODE,
			@CXFRACCODE=XN_AC_CODE,@CLOCGSTSTATECODE=LOC_GST_STATE_CODE,@CPARTYGSTSTATECODE=PARTY_GST_STATE_CODE,
			@CREFMEMOID=REF_MEMO_ID
			FROM #V_PROCESS
			
			SET @CSTEP = 400
			-- PARTY ACCOUNT DR WITH NET AMOUNT
			INSERT @VCHC ( AC_CODE, AMOUNT,XN_ID )
			SELECT DEPT_AC_CODE,SUM(TOTAL_AMOUNT),@CMEMOID
			FROM #V_PROCESS 
			WHERE MEMO_ID=@CMEMOID AND XN_TYPE=@CXNTYPE  AND TOTAL_AMOUNT<>0
			GROUP BY DEPT_AC_CODE
			
			SET @CSTEP = 405
			SET @BGSTBILL=0
			IF @DMEMODT>=@DGSTCUTOFFDATE AND @DGSTCUTOFFDATE<>''
				SET @BGSTBILL=1

			IF @BGSTBILL=1
				SELECT TOP 1 @CXFRACCODE=(CASE WHEN @CLOCGSTSTATECODE<>@CPARTYGSTSTATECODE 
				THEN IGST_XN_AC_CODE ELSE @CLOCALSTKXFRACCODE END)
				FROM #V_PROCESS WHERE MEMO_ID=@CMEMOID AND XN_TYPE=@CXNTYPE		

				
			SET @CSTEP = 410
			--SALE A/C OR PURCHASE A/C CREDIT WITH SUBTOTAL AMOUNT
			IF  @BGSTBILL=0 OR @CLOCGSTSTATECODE=@CPARTYGSTSTATECODE 
				INSERT @VCHC ( AC_CODE, AMOUNT,XN_ID )
				SELECT (CASE WHEN @BGSTBILL=0 THEN XN_AC_CODE ELSE @CLOCALSTKXFRACCODE END),
				(CASE WHEN @BGSTBILL=1 THEN XN_VALUE_WITHOUT_GST ELSE SUBTOTAL END),@CMEMOID
				FROM #V_PROCESS 
				WHERE MEMO_ID=@CMEMOID AND XN_TYPE=@CXNTYPE  AND (CASE WHEN @BGSTBILL=1 THEN XN_VALUE_WITHOUT_GST ELSE SUBTOTAL END)<>0	
			ELSE
				INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT ) 
				SELECT @CMEMOID,IGST_XN_AC_CODE,XN_VALUE_WITHOUT_GST
				FROM #V_PROCESS
				WHERE MEMO_ID=@CMEMOID AND XN_VALUE_WITHOUT_GST<>0	AND XN_TYPE=@CXNTYPE AND @CLOCGSTSTATECODE<>@CPARTYGSTSTATECODE
					
			SET @CSTEP = 420
			--TAX A/C CREDIT WITH THE TAX_AMOUNT
			IF @BGSTBILL=0
				INSERT @VCHC ( AC_CODE, AMOUNT,XN_ID )
				SELECT TAX_AC_CODE,TAX_AMOUNT,@CMEMOID
				FROM #V_PROCESS 
				WHERE MEMO_ID=@CMEMOID AND XN_TYPE=@CXNTYPE   AND TAX_AMOUNT<>0		
			ELSE
				INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT ) 
				SELECT  @CMEMOID,IGST_TAX_AC_CODE,IGST_AMOUNT
				FROM #V_PROCESS
				WHERE MEMO_ID=@CMEMOID AND XN_TYPE=@CXNTYPE  AND IGST_AMOUNT<>0
										
			SET @CSTEP=430
			--DISCOUNT AMOUNT SHOULD BE DEBITED
			IF @BGSTBILL=0 
				INSERT @VCHC ( AC_CODE, AMOUNT,XN_ID )
				SELECT (CASE WHEN @BPOSTDISCOUNTSEPARATELY=1 AND ISNULL(@CDISCACCODE,'0000000000')<>'0000000000' 
							 THEN @CDISCACCODE ELSE XN_AC_CODE END),DISCOUNT_AMOUNT,@CMEMOID
				FROM #V_PROCESS
				WHERE MEMO_ID=@CMEMOID AND DISCOUNT_AMOUNT<>0 AND XN_TYPE=@CXNTYPE 		
							
			SET @CSTEP = 440
			--FREIGHT AMOUNT SHOULD BE CREDITED
			INSERT @VCHC ( AC_CODE,AMOUNT,XN_ID ) 
			SELECT (CASE WHEN @BPOSTFREIGHTSEPARATELY=1 OR @BGSTBILL=1 THEN @CFREIGHTACCODE ELSE XN_AC_CODE END),
			FREIGHT,@CMEMOID	FROM #V_PROCESS
			WHERE MEMO_ID=@CMEMOID AND FREIGHT<>0 AND XN_TYPE=@CXNTYPE 		
			
			SET @CSTEP = 440
			--OTHER CHARGES AMOUNT SHOULD BE CREDITED
			INSERT @VCHC (AC_CODE,AMOUNT,XN_ID )
			SELECT (CASE WHEN @BPOSTOTHERCHARGESSEPARATELY=1 OR @BGSTBILL=1 THEN @COTHERCHARGESACCODE ELSE XN_AC_CODE END)
				   ,OTHERCHARGES,@CMEMOID FROM #V_PROCESS
			WHERE MEMO_ID=@CMEMOID AND OTHERCHARGES<>0 AND XN_TYPE=@CXNTYPE 		
			
			SET @CSTEP = 450
			--OCTROI AMOUNT SHOULD BE CREDITED
			INSERT @VCHC ( AC_CODE,AMOUNT,XN_ID ) 
			SELECT (CASE WHEN @BPOSTOCTROISEPARATELY=1 THEN @COCTROIACCODE ELSE XN_AC_CODE END)
				  ,OCTROIAMOUNT,@CMEMOID	FROM #V_PROCESS
			WHERE MEMO_ID=@CMEMOID AND OCTROIAMOUNT<>0 AND XN_TYPE=@CXNTYPE 		
			
			SET @CSTEP = 460
			--INSURANCE AMOUNT SHOULD BE CREDITED
			INSERT @VCHC ( AC_CODE,AMOUNT,XN_ID )
			SELECT (CASE WHEN @BPOSTINSURANCESEPARATELY=1 OR @BGSTBILL=1 THEN @CINSURANCEACCODE ELSE XN_AC_CODE END)
				  ,INSURANCE,@CMEMOID	FROM #V_PROCESS
			WHERE MEMO_ID=@CMEMOID AND INSURANCE<>0 AND XN_TYPE=@CXNTYPE 		
			
			SET @CSTEP = 470
			
			--IF @CREFMEMOID='HO01118HO01-00002'
			--	SELECT @CROUNDOFFACCODE AS RO_AC_CODE,(CASE WHEN @BPOSTROUNDOFFSEPARATELY=1 OR @BGSTBILL=1 THEN @CROUNDOFFACCODE ELSE XN_AC_CODE END),
			--	MEMO_AMOUNT,SUM(XN_VALUE_WITHOUT_GST) AS TAXABLE_VALUE,SUM(ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+
			--					 ISNULL(TAX_AMOUNT,0)) AS TAX,
			--		MEMO_FREIGHT,(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(FREIGHT_IGST_AMOUNT,0)+ISNULL(FREIGHT_CGST_AMOUNT,0)+ISNULL(FREIGHT_SGST_AMOUNT,0) ELSE 0 END) AS FREIGHT_GST,
			--		MEMO_OTHER_CHARGES,(CASE WHEN OH_TAX_METHOD=1 THEN ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)+
			--		ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_SGST_AMOUNT,0) ELSE 0 END) AS OC_GST
					
			--	FROM #V_PROCESS A
			--	WHERE A.MEMO_ID=@CMEMOID AND XN_TYPE=@CXNTYPE
			--	GROUP BY MEMO_FREIGHT,MEMO_OTHER_CHARGES,OH_TAX_METHOD,
			--	FREIGHT_IGST_AMOUNT,FREIGHT_CGST_AMOUNT,FREIGHT_SGST_AMOUNT,
			--	OTHER_CHARGES_IGST_AMOUNT,OTHER_CHARGES_CGST_AMOUNT,OTHER_CHARGES_SGST_AMOUNT,MEMO_AMOUNT,XN_AC_CODE
				
			
			--ROUNDOFF AMOUNT SHOULD BE CREDITED
			INSERT @VCHC (AC_CODE,AMOUNT,XN_ID ) 
			SELECT TOP 1  (CASE WHEN @BPOSTROUNDOFFSEPARATELY=1 OR @BGSTBILL=1 THEN @CROUNDOFFACCODE ELSE XN_AC_CODE END),
			ROUNDOFF AS AMOUNT,@CMEMOID
			FROM #V_PROCESS A
			WHERE A.MEMO_ID=@CMEMOID AND XN_TYPE=@CXNTYPE
			--UNION ALL
			--SELECT TOP 1 (CASE WHEN @BPOSTROUNDOFFSEPARATELY=1 OR @BGSTBILL=1 THEN @CROUNDOFFACCODE ELSE XN_AC_CODE END),
			--FREIGHT_RO+OTHER_CHARGES_RO,@CMEMOID FROM #V_PROCESS
			--WHERE  MEMO_ID=@CMEMOID AND XN_TYPE=@CXNTYPE AND (FREIGHT_RO+OTHER_CHARGES_RO)<>0
			
			
			SET @CSTEP = 480
			--IF @CMEMOID='P001117P000000025'
			--	SELECT 'EXCISE DUTY ENTRY',MEMO_ID, EXCISE_AC_CODE,-EXCISEDUTYAMOUNT
			--	FROM #V_PROCESS
			--	WHERE MEMO_ID='P001117P000000025'
			
			--EXCISEDUTY AMOUNT SHOULD BE CREDITED TO GROUP INVOICE ACCOUNT
			INSERT @VCHC ( AC_CODE,AMOUNT,XN_ID ) 
			SELECT EXCISE_AC_CODE,EXCISEDUTYAMOUNT,@CMEMOID	FROM #V_PROCESS
			WHERE MEMO_ID=@CMEMOID AND EXCISEDUTYAMOUNT<>0 AND XN_TYPE=@CXNTYPE 		
			
			
			IF @BGSTBILL=1
			BEGIN
				SET @CSTEP = 490
				INSERT @VCHC (AC_CODE,AMOUNT,XN_ID ) 	
				  SELECT TOP 1 IGST_TAX_AC_CODE,ISNULL(FREIGHT_IGST_AMOUNT,0)+ISNULL(INSURANCE_IGST_AMOUNT,0)+
				  ISNULL(OTHER_CHARGES_IGST_AMOUNT,0),@CMEMOID
				  FROM #V_PROCESS  A
				  WHERE MEMO_ID=@CMEMOID AND  XN_TYPE=@CXNTYPE  AND (ISNULL(FREIGHT_IGST_AMOUNT,0)+ISNULL(INSURANCE_IGST_AMOUNT,0)+
				  ISNULL(OTHER_CHARGES_IGST_AMOUNT,0))<>0
				  
			END
						
			SET @CSTEP = 500
			SET @CVMID = ''
			SELECT @CVMID = A.VM_ID 
			FROM POSTACT_VOUCHER_LINK A
			 JOIN VM01106 B ON A.VM_ID=B.VM_ID 
			  WHERE B.CANCELLED=0 AND A.MEMO_ID = @CMEMOID AND A.XN_TYPE=@CXNTYPE
			
			SET @CSTEP = 510
			IF ISNULL(@CVMID,'') = ''
			BEGIN
			    SET @CVMID = 'LATER-'+RTRIM(LTRIM(CONVERT(VARCHAR,@NCTR)))
				SET @NCTR = @NCTR+1
			END
			
			SET @CSTEP = 520
			IF @CXNTYPE='WSLCHO'
			BEGIN
				INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )
				SELECT @CVMID,@CMEMOID,@CXNTYPE,LAST_UPDATE FROM INM01106 WHERE INV_ID = @CMEMOID
			END
			ELSE IF @CXNTYPE='PURCHI'
			BEGIN
				INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )
				SELECT @CVMID,@CMEMOID,@CXNTYPE,LAST_UPDATE FROM PIM01106 WHERE MRR_ID = @CMEMOID
			END
			ELSE IF @CXNTYPE='PRTCHO'
			BEGIN
				INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )
				SELECT @CVMID,@CMEMOID,@CXNTYPE,LAST_UPDATE FROM RMM01106 WHERE RM_ID = @CMEMOID
			END
			ELSE IF @CXNTYPE='WSRCHI'
			BEGIN
				INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )
				SELECT @CVMID,@CMEMOID,@CXNTYPE,LAST_UPDATE FROM CNM01106 WHERE CN_ID = @CMEMOID
			END
			
			SET @NSIGN=1
			
			SET @CSTEP = 530
			INSERT @VDC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE, 
						  CREDIT_DAYS, CR_DISCOUNT_PERCENTAGE,AC_NAME)
			SELECT @CVMID
				, 'LATER-'+CONVERT(VARCHAR,ROW_NUMBER() OVER(ORDER BY A.AC_CODE)) AS VD_ID
				, A.AC_CODE
				,(CASE WHEN @CLOCGSTSTATECODE=@CPARTYGSTSTATECODE THEN 'STOCK TRANSFER #'
					   WHEN	@CXNTYPE='WSLCHO' THEN 'WHOLESALE INV #'
					   WHEN @CXNTYPE='PURCHI' THEN 'PURCHASE INV #'
					   WHEN @CXNTYPE='PRTCHO' THEN 'DEBIT NOTE #'
					   ELSE 'CREDIT NOTE #'	
				  END)+@CMEMONO AS NARRATION
				,(CASE WHEN SUM(AMOUNT)>0 THEN ABS(SUM(AMOUNT)) ELSE 0 END) AS DEBIT_AMOUNT
				,(CASE WHEN SUM(AMOUNT)<0 THEN ABS(SUM(AMOUNT)) ELSE 0 END) AS CREDIT_AMOUNT
				,(CASE WHEN SUM(AMOUNT)> 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE
				,0 AS CRDAYS
				,0
				,B.AC_NAME
	        FROM @VCHC A
	        JOIN LMV01106 B ON A.AC_CODE = B.AC_CODE
	        GROUP BY A.AC_CODE,B.AC_NAME
	        ORDER BY X_TYPE,ABS(SUM(AMOUNT)) DESC
			
	        SET @CSTEP = 540
	        SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC
		    WHERE VM_ID = @CVMID

	        SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC
		    WHERE VM_ID = @CVMID
		    
		    SET @CSTEP = 550    
	        SET @CVOUCHERNO = '' 
	        SELECT TOP 1 @CVOUCHERNO = VOUCHER_NO FROM VM01106 WHERE VM_ID = @CVMID
	        IF ISNULL(@CVOUCHERNO,'') = ''
				SET @CVOUCHERNO = @CVMID
	        
	        SET @CSTEP = 560
	        INSERT @VMC	( VM_ID,VOUCHER_NO,VOUCHER_DT, VOUCHER_CODE, DEPT_ID, 
							  BILL_TYPE, BILL_NO, BILL_ID, BILL_DT, 
							  PARTY_NAME, QUANTITY, NET_AMOUNT, RM_LIST, CANCELLED,DRTOTAL,CRTOTAL
						)
			SELECT TOP 1  VM_ID,VOUCHER_NO,VOUCHER_DT,VOUCHER_CODE, DEPT_ID, 
							  BILL_TYPE, BILL_NO, BILL_ID, BILL_DT, 
							  PARTY_NAME, QUANTITY, NET_AMOUNT,'' AS RM_LIST, CANCELLED,DRTOTAL,CRTOTAL
			FROM (				  			
			SELECT @CVMID AS VM_ID,@CVOUCHERNO AS VOUCHER_NO,MEMO_DT AS VOUCHER_DT,VOUCHER_TYPE,DEPT_ID,
				   (CASE WHEN @CXNTYPE='WSLCHO' THEN '0000000007'
						 WHEN @CXNTYPE='PURCHI' THEN '0000000006'	
						 WHEN @CXNTYPE='PRTCHO' THEN '0000000005'
						 ELSE '0000000004'	
					END) AS VOUCHER_CODE	
				  ,(CASE WHEN @CXNTYPE='WSLCHO' THEN 'WSL'
						 WHEN @CXNTYPE='PURCHI' THEN 'PUR'	
						 WHEN @CXNTYPE='PRTCHO' THEN 'PRT'
						 ELSE 'WSR'	
					END) AS BILL_TYPE,@CMEMONO AS BILL_NO,@CMEMOID AS  BILL_ID,@DMEMODT AS BILL_DT
				  ,A.PARTY_NAME,SUM(A.QUANTITY) AS QUANTITY,A.TOTAL_AMOUNT AS NET_AMOUNT,A.CANCELLED,@NDRTOTAL AS DRTOTAL,
				  @NCRTOTAL AS CRTOTAL
			FROM #V_PROCESS A
			WHERE A.MEMO_ID=@CMEMOID AND XN_TYPE=@CXNTYPE
			GROUP BY A.MEMO_DT,A.VOUCHER_TYPE,A.DEPT_ID
					,A.MEMO_NO,A.MEMO_ID
					,A.PARTY_NAME,A.TOTAL_AMOUNT,A.CANCELLED
			) A
			
				
			SET @CSTEP = 570
			
			--IF @CREFMEMOID='01011180103-00001'
			--	SELECT 'CHECK VCHC',* FROM @VCHC
			
			DELETE @VCHC
		    DELETE FROM #V_PROCESS WHERE MEMO_ID = @CMEMOID AND XN_TYPE=@CXNTYPE
		END			 			
   
    END TRY

	BEGIN CATCH
		SELECT 'STEP:- '+@CSTEP+' '+ERROR_MESSAGE()AS  ERRMSG
	END CATCH

END_PROC:
    
    SET @CSTEP = 580

    SELECT * FROM @VMC ORDER BY BILL_DT,BILL_NO
    SELECT * FROM @VDC 
    SELECT * FROM @ERRORS
    SELECT * FROM @VLINK
	        
END
--END OF PROCEDURE - POSTACT_XFR
