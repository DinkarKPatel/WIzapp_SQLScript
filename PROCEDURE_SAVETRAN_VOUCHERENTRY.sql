CREATE PROCEDURE SAVETRAN_VOUCHERENTRY
(
 @NUPDATEMODE  NUMERIC(2,0), --1-ADD 3-CANCELLED 34,35,36
 @NSPID  VARCHAR(50),
 @CFINYEAR   VARCHAR(10),    
 @CMACHINENAME  VARCHAR(100)='',    
 @CWINDOWUSERNAME VARCHAR(100)='',    
 @CWIZAPPUSERCODE VARCHAR(10)='0000000',    
 @CMEMOID   VARCHAR(40)='',
 @CREFBILLTYPE VARCHAR(20)='',
 @BLASTSLSVOUCHER BIT=0,
 @BCALLEDFROMDIRECTVOUCHERENTRY BIT=0,
 @BCALLEDFROMIMPORTRECEIPT BIT=0,
 @BCALLEDFROMSorPayments BIT=0
)
AS
BEGIN

DECLARE  @CERRORMSG				VARCHAR(500),      
	     @CKEYFIELD1			VARCHAR(50),    
	     @CKEYFIELDVAL1			VARCHAR(50),    
	     @CMEMONO				VARCHAR(20),    
	     @NMEMONOLEN			NUMERIC(20,0),    
	     @CMEMONOVAL			VARCHAR(50),    
	     @CMEMODEPTID			VARCHAR(4),    
	     @CLOCATIONID			VARCHAR(4),    
	     @CHOLocID				VARCHAR(4),    
	     @CCMD					NVARCHAR(MAX),    
	     @NSAVETRANLOOP			BIT,    
	     @CSTEP					VARCHAR(10),       
	     @LENABLETEMPDATABASE	BIT,       
	     @CMSG                  VARCHAR(200),
	     @CFLAG		              BIT,
	     @CVMID					VARCHAR(40),
	     @CVMNO					VARCHAR(10),
	     @CPREFIXVALUE			VARCHAR(5),
	     @CVOUCTURECODE			VARCHAR(15),
	     @DTVOUCHERDATA			DATETIME,
	     @NVOUCHORNO_MODE		INT,
	     @CDEPT_ID  VARCHAR(5),
	     @CVOUCHERCODE VARCHAR(10),
	     @BEXISTS BIT,
	     @BBILLBYBILL BIT,@NCDPCT INT,
	     @NDRTOTAL NUMERIC(14,4),@NCRTOTAL NUMERIC(14,4),
	     @CBILLTYPE VARCHAR(10),@DVMDT DATETIME,@COTHERVMID VARCHAR(50),@CVMLOCID VARCHAR(5),
	     @CRETAILSALEACCODE CHAR(10),@CRETAILSALEACNAME VARCHAR(500),@BSALEACMISMATCHCREATED BIT,
	     @CREFNO VARCHAR(100),@NADJAMT NUMERIC(10,2),@NBILLAMT NUMERIC(10,2),@CCURLOCID VARCHAR(5),
	     @BCALLEDFROMPOSTING BIT,@DVOUCHERDT DATETIME,@cAcName VARCHAR(500),@bhold_for_payment BIT,
	     @cHEAD_CODE VARCHAR(MAX),@cHEAD_CODE1 VARCHAR(MAX),@cPostedXntype VARCHAR(20) 
		 	     
	     BEGIN TRY    
			
			SELECT TOP 1 @cHoLocId=VALUE FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'

			IF @cMemoId='' AND @NUPDATEMODE=1
				SET @cMemoId='LATER'
			
			IF @BCALLEDFROMSorPayments=0		
				BEGIN TRANSACTION   
	     
			DECLARE @COL VARCHAR(MAX)
			IF @NUPDATEMODE<>1
			BEGIN
				SET @COL='IF OBJECT_ID(''TEMPDB..##VMM_'+CAST(@NSPID AS VARCHAR(50))+'_'+@CMEMOID+''',''U'') IS NOT NULL'+CHAR(13)+' DROP TABLE [##VMM_'+
				CAST(@NSPID AS VARCHAR(50))+'_'+@CMEMOID+'];'+CHAR(13)+'SELECT VM_ID OLD_VM_ID,VM_ID NEW_VM_ID,'
				SELECT @COL=COALESCE(@COL,'')+FIELD_NAME+' OLD_'+FIELD_NAME+','+FIELD_NAME+' NEW_'+FIELD_NAME+',' FROM XN_AUDIT_TRIAL_MST (NOLOCK) WHERE TABLE_NAME='VM01106' AND TRIG='UPDATE' ORDER BY ORDER_ID
				SET @COL=LEFT(@COL,LEN(@COL)-1)+CHAR(13)+'INTO [##VMM_'+CAST(@NSPID AS VARCHAR(50))+'_'+@CMEMOID+']'+CHAR(13)+'FROM VM01106 (NOLOCK) WHERE VM_ID='''+@CMEMOID+''';'
				--PRINT @COL
				EXEC(@COL)
				SET @COL=''
				SET @COL='IF OBJECT_ID(''TEMPDB..##VMD_'+CAST(@NSPID AS VARCHAR(50))+'_'+@CMEMOID+''',''U'') IS NOT NULL'+CHAR(13)+' DROP TABLE [##VMD_'+
				CAST(@NSPID AS VARCHAR(50))+'_'+@CMEMOID+'];'+CHAR(13)+'SELECT VM_ID OLD_VM_ID,VM_ID NEW_VM_ID,'
				SELECT @COL=COALESCE(@COL,'')+FIELD_NAME+' OLD_'+FIELD_NAME+','+FIELD_NAME+' NEW_'+FIELD_NAME+',' FROM XN_AUDIT_TRIAL_MST (NOLOCK) WHERE TABLE_NAME='VD01106' AND TRIG='UPDATE' ORDER BY ORDER_ID
				SET @COL=LEFT(@COL,LEN(@COL)-1)+CHAR(13)+'INTO [##VMD_'+CAST(@NSPID AS VARCHAR(50))+'_'+@CMEMOID+']'+CHAR(13)+'FROM VD01106 (NOLOCK) WHERE VM_ID='''+@CMEMOID+''';'
				SET @COL=REPLACE(REPLACE(@COL,'OLD_VD_ID','OLD_PRODUCT_CODE'),'NEW_VD_ID','NEW_PRODUCT_CODE')
				--PRINT @COL
				EXEC(@COL)
			END
			
			SET @CSTEP = 10         
			DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))  
			DECLARE @CACCODE VARCHAR(20),@CVDID VARCHAR(10),@CXNID VARCHAR(100),@CBILLNO VARCHAR(100),
					@NAMOUNT NUMERIC(10,2),@NCRDAYS NUMERIC(5) 
		
		

			SET @CSTEP = 15 
			SELECT @NVOUCHORNO_MODE = ISNULL(VALUE,0) FROM CONFIG WHERE CONFIG_OPTION = 'VOUCHER_NO_SYSTEM' 

			IF @CDEPT_ID=''
				SELECT TOP 1 @CCURLOCID= DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
			ELSE
				SET @CCURLOCID=@CDEPT_ID
		
		
		    SET @cStep=17
			UPDATE vch_vm01106_upload SET FIN_YEAR='01'+ DBO.FN_GETFINYEAR(VOUCHER_DT),
			dept_id=(CASE WHEN isnull(dept_id,'')='' THEN @CCURLOCID ELSE dept_id END) 
			WHERE sp_id=@nSpId 
						
			IF ISNULL(@BCALLEDFROMIMPORTRECEIPT,0)=1
			BEGIN
				UPDATE A SET A.DRTOTAL=B.DRTOTAL,CRTOTAL=B.CRTOTAL
				FROM vch_vm01106_upload A
				JOIN 
				(
					SELECT SP_ID, SUM(DEBIT_AMOUNT) AS DRTOTAL, SUM(CREDIT_AMOUNT) AS CRTOTAL 
					FROM VCH_VD01106_UPLOAD 
					WHERE SP_ID=@NSPID
					GROUP BY SP_ID
				)B ON B.SP_ID=A.SP_ID
				WHERE A.sp_id=@nSpId 
			END
			
			SET @CKEYFIELD1   = 'VM_ID'    
			SET @CMEMONO   = 'VOUCHER_NO' 
			
			IF @NUPDATEMODE in (1,2)
			BEGIN
				SET @CSTEP = 22
				SELECT @cMemoId=vm_id,@CDEPT_ID= location_code FROM vch_vm01106_upload WHERE sp_id=@nSpId

				SET @CSTEP = 22.4
				update vch_vd01106_upload with (rowlock) set vm_id=@cMemoId where sp_id=@nSpId
			END

			SET @CERRORMSG=''

			IF @NUPDATEMODE<>1
			BEGIN
				IF @nUpdatemode=2
					SELECT @cMemoId=vm_id FROM vch_vm01106_upload WHERE sp_id=@nSpId
				
				SET @cStep=25
				EXEC SP3S_UPDATE_LEDGERBALANCES
				@nUpdateMode=2,
				@cVmId=@cMemoId
			END
		
			IF @NUPDATEMODE IN (1,2) AND @BCALLEDFROMDIRECTVOUCHERENTRY=1
			BEGIN
				SET @cStep=30
				DECLARE @cDnMultiCostCenterEntries VARCHAR(2)
				SELECT TOP 1 @cDnMultiCostCenterEntries=value FROM  config (NOLOCK) 
				WHERE config_option='donot_allow_multi_costcenter_entries'

				IF ISNULL(@cDnMultiCostCenterEntries,'')='1'
				BEGIN
					SET @cStep=32
					DECLARE @nCnt NUMERIC(2,0)

					SELECT @nCnt=count(distinct cost_center_dept_id) FROM vch_vd01106_upload (NOLOCK)
					WHERE sp_id=@nSpId

					IF @nCnt>1
					BEGIN
						SET @cStep=34
						SET @CERRORMSG='Multiple Cost Center entries are not allowed....Please check'
						GOTO END_PROC
					END
				END
			END

			IF @NUPDATEMODE IN (3,5,33,34,35)
		    BEGIN

				IF ISNULL(@cMemoId,'') <>''
				BEGIN
					IF OBJECT_ID('TEMPDB..#vchCancel','U') IS NOT NULL
						DROP TABLE #vchCancel
						SELECT vm_id INTO #vchCancel FROM vm01106 (NOLOCK) WHERE vm_id=@cMemoId
				END  
						
					SET @CSTEP=55
					IF ISNULL(@CMEMOID,'') = '' AND @NUPDATEMODE=3
					BEGIN
						SET @CERRORMSG = 'P:SAVETRAN_VOUCHERENTRY, STEP: '+@CSTEP+', MESSAGE: MEMO_ID REQUIRED CANCELLED MODE...'    
						GOTO END_PROC
					END
					
					DECLARE @CMEMOIDPROCESS VARCHAR(50)
					
					WHILE EXISTS (SELECT vm_id FROM #vchCancel)
					BEGIN
						
						SELECT TOP 1 @CMEMOIDPROCESS=vm_id FROM #vchCancel
						
						--if @@spid=91
						--	select 'chck cancel', * from #vchCancel

						IF @NUPDATEMODE IN (34,35)
						BEGIN
							SELECT @CBILLTYPE=BILL_TYPE,@DVMDT=VOUCHER_DT,@CVMLOCID=DEPT_ID,@CVOUCHERCODE=VOUCHER_CODE
							FROM VM01106 WHERE VM_ID=@CMEMOIDPROCESS
	
							EXEC SP3S_CAPTURE_AUDIT_TRAIL 'VCH',@CMEMOIDPROCESS,
							'vch_vm01106_upload','vch_vd01106_upload',@NSPID,@CMACHINENAME,
							@CWINDOWUSERNAME,@CWIZAPPUSERCODE,1,'1900-01-01',1
						
							--33 both cancelle
							--3 only voucher cancelled

							--34-- voucher delete (34) only
							--35-- voucher delete check book cancelled
						
						
							IF @NUPDATEMODE = 35
							BEGIN
								UPDATE A SET VD_ID=NULL ,ref_row_id=NULL
								FROM VD_CHQBOOK A 
								JOIN VD01106 B ON A.VD_ID = B.VD_ID 
								JOIN VM01106 C ON B.VM_ID = C.VM_ID 
								WHERE C.VM_ID = @CMEMOIDPROCESS
							END
							ELSE 
							BEGIN
								UPDATE A1
								SET cancelled=1 ,REMARKS=''						
								FROM CHQBOOK_D A1
								JOIN  VD_CHQBOOK A ON A.chqbook_row_id=A1.row_id
								JOIN VD01106 B ON A.VD_ID = B.VD_ID 
								JOIN VM01106 C ON B.VM_ID = C.VM_ID 
								WHERE C.VM_ID = @CMEMOIDPROCESS

								DELETE A FROM VD_CHQBOOK A 
								JOIN VD01106 B ON A.VD_ID = B.VD_ID 
								JOIN VM01106 C ON B.VM_ID = C.VM_ID 
								WHERE C.VM_ID = @CMEMOIDPROCESS
							END
								
																
							SET @CSTEP=57
							UPDATE VM01106 SET CANCELLED = 1,LAST_UPDATE=GETDATE() WHERE  VM_ID = @CMEMOIDPROCESS
										
							DELETE POSTACT_VOUCHER_LINK WHERE VM_ID = @CMEMOIDPROCESS
						
					
					
							SET @CSTEP=62
							IF @CVOUCHERCODE='MEMO000002'
							BEGIN
								SET @CSTEP=67
								DELETE FROM ACC_MEMO_REVERSAL WHERE REVERSAL_VM_ID=@CMEMOIDPROCESS
							END
					
							SELECT @CMEMONOVAL = VOUCHER_NO FROM VM01106  WHERE VM_ID = @CMEMOIDPROCESS
							--17 MAR 2018 : CAPTURE AUDIT TRIAL: CANCEL
							--select  @CMEMOIDPROCESS

							delete a FROM vdt01106 A
							JOIN VD01106 B ON A.VD_ID =B.VD_ID 
							WHERE B.VM_ID =@CMEMOIDPROCESS
				        
							delete a FROM BILL_BY_BILL_REF A
							JOIN VD01106 B ON A.VD_ID =B.VD_ID 
							WHERE B.VM_ID =@CMEMOIDPROCESS

							delete a FROM costcenterref A
							JOIN VD01106 B ON A.CCREFVDID =B.VD_ID 
							WHERE B.VM_ID =@CMEMOIDPROCESS

							DELETE FROM vd01106 WHERE VM_ID = @CMEMOIDPROCESS
							DELETE FROM VM01106 WHERE vm_id=@CMEMOIDPROCESS
							DELETE FROM #vchCancel WHERE vm_id=@CMEMOIDPROCESS

						END
					ELSE
					BEGIN
						

						SELECT @CBILLTYPE=BILL_TYPE,@DVMDT=VOUCHER_DT,@CVMLOCID=DEPT_ID,@CVOUCHERCODE=VOUCHER_CODE
						FROM VM01106 WHERE VM_ID=@CMEMOIDPROCESS
					
																
						SET @CSTEP=57
						UPDATE VM01106 SET CANCELLED = 1,LAST_UPDATE=GETDATE() WHERE  VM_ID = @CMEMOIDPROCESS
										
						UPDATE POSTACT_VOUCHER_LINK SET LAST_UPDATE = GETDATE() WHERE VM_ID = @CMEMOIDPROCESS
						--DELETE FROM POSTACT_VOUCHER_LINK WHERE VM_ID = @CMEMOIDPROCESS
					
						SET @CSTEP=62
						
					
						IF @NUPDATEMODE = 3
						BEGIN
							SET @CSTEP=59
							DELETE A FROM VD_CHQBOOK A 
							JOIN VD01106 B ON A.VD_ID = B.VD_ID 
							JOIN VM01106 C ON B.VM_ID = C.VM_ID 
							WHERE C.VM_ID = @CMEMOIDPROCESS				

							SET @CSTEP=62
							SELECT TOP 1 @cPostedXntype=xn_type FROM POSTACT_VOUCHER_LINK a (NOLOCK)
							WHERE vm_id=@CMEMOIDPROCESS

							---- Special case of Petty cash posting need to be handled because of Dual Voucher Posted
							---- in case If memo is having both Debit and credit entries
							IF @cPostedXntype='PTC'
							BEGIN
								SET @CSTEP=62.5
								SET @cOtherVmId=''
								SELECT TOP 1 @cOtherVmId=b.vm_id FROM POSTACT_VOUCHER_LINK a (NOLOCK)
								JOIN POSTACT_VOUCHER_LINK b ON SUBSTRING(a.memo_id,1,len(a.memo_id)-2)=SUBSTRING(b.memo_id,1,len(b.memo_id)-2)
								AND a.XN_TYPE=b.XN_TYPE
								JOIN vm01106 c (NOLOCK) ON c.vm_id=b.vm_id
								WHERE a.vm_id=@CMEMOIDPROCESS AND b.xn_type='PTC' AND RIGHT(b.memo_id,2) IN  ('Cr','Dr')
								AND c.cancelled=0 AND b.vm_id<>@CMEMOIDPROCESS

								select @cOtherVmId,@CMEMOIDPROCESS
								SET @CSTEP=63.8
								IF ISNULL(@cOtherVmId,'')<>''
									UPDATE vm01106 WITH (ROWLOCK) SET cancelled=1,LAST_UPDATE=GETDATE() WHERE vm_id=@COTHERVMID

								SET @cOtherVmId=''
							END
							--UPDATE A SET VD_ID=null ,ref_row_id=null
							--FROM VD_CHQBOOK A 
							--JOIN VD01106 B ON A.VD_ID = B.VD_ID 
							--JOIN VM01106 C ON B.VM_ID = C.VM_ID 
							--WHERE C.VM_ID = @CMEMOIDPROCESS

						END
						ELSE 
						BEGIN
							SET @CSTEP=65.2
							UPDATE A1
							SET cancelled=1 
							FROM CHQBOOK_D A1
							JOIN  VD_CHQBOOK A ON A.chqbook_row_id=A1.row_id
							JOIN VD01106 B ON A.VD_ID = B.VD_ID 
							JOIN VM01106 C ON B.VM_ID = C.VM_ID 
							WHERE C.VM_ID = @CMEMOIDPROCESS

							DELETE A FROM VD_CHQBOOK A 
							JOIN VD01106 B ON A.VD_ID = B.VD_ID 
							JOIN VM01106 C ON B.VM_ID = C.VM_ID 
							WHERE C.VM_ID = @CMEMOIDPROCESS

						END
								

						IF @CVOUCHERCODE='MEMO000002'
						BEGIN
							SET @CSTEP=67
							DELETE FROM ACC_MEMO_REVERSAL WHERE REVERSAL_VM_ID=@CMEMOIDPROCESS
						END
					
						SELECT @CMEMONOVAL = VOUCHER_NO FROM VM01106  WHERE VM_ID = @CMEMOIDPROCESS
						--17 MAR 2018 : CAPTURE AUDIT TRIAL: CANCEL
						EXEC SP3S_CAPTURE_AUDIT_TRAIL 'VCH',@CMEMOIDPROCESS,
						'','',@NSPID,@CMACHINENAME,@CWINDOWUSERNAME,@CWIZAPPUSERCODE,1,'1900-01-01',1
						
						DELETE FROM #vchCancel WHERE vm_id=@CMEMOIDPROCESS
					END
					END

					GOTO END_PROC		
		    END
			
			SET @CSTEP=67.1	
			UPDATE vch_vd01106_upload WITH (ROWLOCK) SET X_TYPE='Dr' WHERE sp_id=@nSpid AND X_TYPE='DR'

			SET @CSTEP=67.2	
			UPDATE vch_vd01106_upload WITH (ROWLOCK)  SET X_TYPE='Cr' WHERE sp_id=@nSpid AND X_TYPE='CR'
			
			---- Validate the Parties put on hold for Payment should not be selected in the Payment Voucher
			SELECT TOP 1 @bhold_for_payment=ISNULL(hold_for_payment,0),@cVoucherCode=voucher_code,@cAcName=ac_name
						FROM vch_vd01106_upload a (NOLOCK)
						JOIN vch_vm01106_upload b (NOLOCK) ON a.sp_id=b.sp_id
						JOIN lmp01106 c ON c.ac_code=a.ac_code
						JOIN lm01106 d ON c.ac_code=d.ac_code
						WHERE a.sp_id=@nSpid AND ISNULL(hold_for_payment,0)=1
			
			SET @CSTEP=70
			IF 	@CVOUCHERCODE='0000000002' AND @bhold_for_payment=1
			BEGIN
				SET @CERRORMSG = ' Paty name :'+@cAcName+' put on hold for Payment.... Cannot Proceed'	
				GOTO END_PROC
			END
					
					   	
		   	SET @CSTEP=72		
			UPDATE a WITH (ROWLOCK)  SET COST_CENTER_DEPT_ID=B.DEPT_ID 
			FROM vch_vd01106_upload A JOIN vch_vm01106_upload B (NOLOCK) ON A.sp_ID=B.sp_ID
			WHERE a.sp_id=@nSpId AND ISNULL(COST_CENTER_DEPT_ID,'')=''
						  

			SET @CSTEP=73				

			EXEC SP3S_VALIDATE_COSTCENTER_ENTRIES
			@NMODE=1,
			@NSPID=@NSPID,
			@CERRORMSG=@CERRORMSG OUTPUT
			
			IF ISNULL(@CERRORMSG,'')<>''
				GOTO END_PROC		   	
			/*
			   DEBIT AMOUNT MUST BE EQUAL TO CREDIT AMOUNT IN VM01106.
			*/
			
			SET @CSTEP=80
			IF EXISTS (SELECT TOP 1 VM_ID FROM vch_vd01106_upload WHERE sp_id=@nSpId AND ISNULL(AC_CODE,'') IN ('','0000000000')
					   AND (debit_amount<>0 OR CREDIT_AMOUNT<>0))
			BEGIN
				DECLARE @cBlankAcname VARCHAR(500)
				SELECT TOP 1 @cBlankAcname=ISNULL(lm.ac_name,'') FROM vch_vd01106_upload a
				 LEFT JOIN lm01106 lm (NOLOCK) ON lm.ac_code=a.ac_code
				 WHERE sp_id=@nSpId AND ISNULL(a.AC_CODE,'') IN ('','0000000000')
				 AND (debit_amount<>0 OR CREDIT_AMOUNT<>0)

				SET @CERRORMSG = 'P:SAVETRAN_VOUCHERENTRY: Blank A/c name or code not allowed for name :'+@cBlankAcname
				GOTO END_PROC
			END							

			SET @CSTEP=82
			DELETE FROM vch_vd01106_upload WITH (ROWLOCK) WHERE sp_id=@nSpId AND ISNULL(AC_CODE,'') IN ('','0000000000')

			SET @CSTEP = 90
		    SELECT TOP 1 @CMEMOID=VM_ID FROM vch_vm01106_upload (NOLOCK) WHERE sp_id=@nSpId
			
			IF @NUPDATEMODE= 1 AND LEFT(@CMEMOID,5) <> 'LATER' AND @cMemoId<>''
			BEGIN
					print 'REsetting updatemode to 2 for Memo Id:'+@cMemoId
				    SET @NUPDATEMODE = 2
					
					--- IF VOUCHER_NO IS NULL IN TEMP TABLE UPDATE IT
					SET @CSTEP = 95
					UPDATE A SET A.VOUCHER_NO = B.VOUCHER_NO,A.VM_NO = B.VM_NO
					FROM vch_vm01106_upload A WITH (ROWLOCK)
					JOIN VM01106 B ON A.VM_ID = B.VM_ID
					WHERE sp_id=@nSpId
					
             END
				
			SET @CSTEP = 97
							
/*INCASE OF PRT, APPLICATION SENDS DATA OF OTHER VM_ID ALSO, SO DELETE OTHERS FROM TEMP TABLE*/
			
	--FOR VOUCHER EDIT GENERATE NEW VOUCHER NO
		IF @NUPDATEMODE = 2 -- EDIT MODE    
		BEGIN
			
			DECLARE @NCHANGEVOUCHERNO INT,@CNEWVOUCHER_CODE CHAR(10),@DNEWVOUCHER_DT DATETIME,
					@COLDVOUCHER_CODE CHAR(10),@DOLDVOUCHER_DT DATETIME
			SET @NCHANGEVOUCHERNO=0
			
			SET @CSTEP = 107
			SELECT  @CNEWVOUCHER_CODE=VOUCHER_CODE,@DNEWVOUCHER_DT=VOUCHER_DT   
			FROM vch_vm01106_upload A (NOLOCK) where sp_id=@nSpId
			 
			SELECT @COLDVOUCHER_CODE=VOUCHER_CODE,@DOLDVOUCHER_DT=VOUCHER_DT
			FROM VM01106 (NOLOCK) WHERE VM_ID =@CMEMOID 
			
			IF @NVOUCHORNO_MODE=1
			BEGIN
			    SET @CSTEP = 109
			    --select @DNEWVOUCHER_DT,@DOLDVOUCHER_DT
			    
				IF @DNEWVOUCHER_DT<>@DOLDVOUCHER_DT
					SET @NCHANGEVOUCHERNO=1
			    
			END
			ELSE
			BEGIN
			    SET @CSTEP = 111
				IF @CNEWVOUCHER_CODE<>@COLDVOUCHER_CODE
					SET @NCHANGEVOUCHERNO=1
			END
			
			IF ISNULL(@NCHANGEVOUCHERNO,0)=1
			BEGIN 

			   CREATE TABLE #VMLISTNEW(TEMPID VARCHAR(100),DEPT_ID VARCHAR(4),VM_ID VARCHAR(40)
			   ,VOUCHER_NO VARCHAR(10),VOUCHERCODE VARCHAR(15),VOUCHER_DT DATETIME
			   ,FIN_YEAR VARCHAR(5),VM_NO VARCHAR(10))
						   --VM01106
			   
			   SET @CSTEP = 114
			   INSERT INTO #VMLISTNEW(TEMPID,DEPT_ID,VOUCHERCODE,VOUCHER_DT,FIN_YEAR)
			   SELECT VM_ID,location_code,VOUCHER_CODE,VOUCHER_DT,FIN_YEAR 
			   FROM vch_vm01106_upload (NOLOCK) WHERE SP_ID = @NsPiD
					     --SELECT * from #VMLISTNEW  
			 SELECT TOP 1 @CVMID=VM_ID,@CDEPT_ID=DEPT_ID,@CVOUCTURECODE= VOUCHERCODE,
			 @DTVOUCHERDATA=VOUCHER_DT,@CFINYEAR=FIN_YEAR  FROM #VMLISTNEW
								 						  
			 SET @CPREFIXVALUE = (CASE WHEN @CVOUCTURECODE = '0000000002' THEN 'P' 
			 WHEN @CVOUCTURECODE = '0000000003' THEN 'R'
			 ELSE '' END)+@CDEPT_ID
								                            
			 SET @NSAVETRANLOOP=0
			 WHILE @NSAVETRANLOOP=0    
			 BEGIN					    
				  SET @CSTEP=117
								    	
										 
				  EXEC GETNEXTVCHNO  
					   @DVCHDT=@DTVOUCHERDATA,
					   @CVCHCODE=@CVOUCTURECODE,
					   @NMODE=@NVOUCHORNO_MODE,
					   @NWIDTH=10,
					   @CCOMPANYCODE='01',
					   @CPREFIX=@CPREFIXVALUE,
					   @CFINYEAR=@CFINYEAR,
					   @CNEWKEYVAL=@CMEMONOVAL OUTPUT  
									     
					IF ISNULL(@CMEMONOVAL,'')=''
					BEGIN
						SET @CERRORMSG = 'P:SAVETRAN_VOUCHERENTRY, STEP: '+@CSTEP+', MESSAGE: ERROR GENERATING MEMO_NO...'    
						GOTO END_PROC
					END
										     
					SET @CSTEP=120   
					SET @NSAVETRANLOOP=1
					
					SET @CSTEP=122   
					UPDATE vch_vm01106_upload WITH (ROWLOCK) SET VOUCHER_NO=@CMEMONOVAL
					WHERE sp_id=@nSpId
									
			   END
			END

		END			
--END OF VOUCHER CREATING IN EDIT MODE
		
		
		SET @CSTEP = 125
		
	    SELECT TOP 1 @CVOUCHERCODE=VOUCHER_CODE FROM vch_vm01106_upload (NOLOCK) WHERE sp_id=@nSpId
		
		UPDATE vch_vm01106_upload with (rowlock) SET FIN_YEAR='01'+DBO.FN_GETFINYEAR(VOUCHER_DT),
		COMPANY_CODE  = '01',USER_CODE=@CWIZAPPUSERCODE WHERE sp_id=@nSpId 	    

		SET @CSTEP = 125.6
		UPDATE vch_vd01106_upload with (rowlock) SET COMPANY_CODE  = '01'
		WHERE sp_id=@nSpId AND ISNULL(company_code,'')=''	    

		UPDATE vch_VDT01106_upload with (rowlock) SET COMPANY_CODE  = '01'
		WHERE sp_id=@nSpId AND ISNULL(company_code,'')=''	    


		SET @CSTEP = 127   
		UPDATE vch_vd01106_upload with (rowlock)  SET VS_AC_CODE  = (CASE WHEN ISNULL(VS_AC_CODE,'')='' THEN   '0000000000' ELSE VS_AC_CODE END),
		COST_CENTER_AC_CODE  = (CASE WHEN ISNULL(COST_CENTER_AC_CODE,'')='' THEN  '0000000000' ELSE COST_CENTER_AC_CODE END)
		WHERE sp_id=@nSpid 
 
 		SET @CSTEP = 128
		UPDATE a WITH (ROWLOCK) SET VS_AC_CODE  =  c.ac_code from vch_vd01106_upload a
		JOIN vch_vd_chqbook_upload b (NOLOCK) on a.vd_id=b.vd_id AND a.sp_id=b.sp_id
		JOIN vch_vd01106_upload c (NOLOCK) ON a.vm_id=c.vm_id AND a.sp_id=c.sp_id
		WHERE a.sp_id=@nSpid AND a.vd_id<>c.vd_id AND (c.debit_amount+c.credit_amount)>=(a.debit_amount+a.credit_amount)

 		SET @CSTEP = 128.5
		UPDATE a WITH (ROWLOCK) SET VS_AC_CODE  =  c.ac_code from vch_vd01106_upload a
		LEFT JOIN vch_vd_chqbook_upload b (NOLOCK) on a.vd_id=b.vd_id AND a.sp_id=b.sp_id
		JOIN vch_vd01106_upload c (NOLOCK) ON a.vm_id=c.vm_id AND a.sp_id=c.sp_id
		WHERE a.sp_id=@nSpid AND a.vd_id<>c.vd_id AND (c.debit_amount+c.credit_amount)>=(a.debit_amount+a.credit_amount)
		and b.sp_id IS NULL

		SET @CSTEP = 128.8
		EXEC SP3S_PROCESS_BILL_BY_BILL_ENTRIES
		@nSpId=@nSpId,
		@CERRORMSG=@CERRORMSG OUTPUT

		IF ISNULL(@cErrormsg,'')<>''
			GOTO END_PROC

		IF @NUPDATEMODE = 1 -- ADDMODE    
		BEGIN
			SET @CSTEP = 130			       
			CREATE TABLE #VMLIST(TEMPID VARCHAR(100),DEPT_ID VARCHAR(4),VM_ID VARCHAR(40)
								,VOUCHER_NO VARCHAR(10),VOUCHERCODE VARCHAR(15),VOUCHER_DT DATETIME
								,FIN_YEAR VARCHAR(5),VM_NO VARCHAR(10))
			--VM01106
			SET @CSTEP = 132
			       
			INSERT INTO #VMLIST(TEMPID,DEPT_ID,VOUCHERCODE,VOUCHER_DT,FIN_YEAR)
			SELECT VM_ID,location_code,VOUCHER_CODE,VOUCHER_DT,FIN_YEAR FROM
			vch_vm01106_upload (NOLOCK) WHERE sp_id=@nSpid AND LEFT(VM_ID,5) = 'LATER'
			       
			--GENRATE VM_ID 
   			UPDATE #VMLIST SET VM_ID = DEPT_ID+RTRIM(LTRIM(CONVERT(VARCHAR(40),NEWID())))
   			         			       
			SET @CSTEP = 135
			--CHECK FOR GENRATE UNIQUE VM ID 
			SET @CFLAG = 0 
			WHILE @CFLAG=0
			BEGIN
				SET @CSTEP = 137
				IF EXISTS (SELECT TOP 1 A.VM_ID FROM #VMLIST A JOIN VM01106 B ON A.VM_ID=B.VM_ID)
				BEGIN
						UPDATE A SET A.VM_ID = A.DEPT_ID+RTRIM(LTRIM(CONVERT(VARCHAR(40),NEWID()))) 
						FROM #VMLIST A 
						JOIN VM01106 B ON A.VM_ID = B.VM_ID
				END
				ELSE
				BEGIN
					SET @CFLAG = 1
				END 
			END
			       
			SET @CSTEP = 140
			--GENRATE VOUCHER_NO
			SELECT VM_ID,DEPT_ID,VOUCHERCODE,VOUCHER_DT,FIN_YEAR INTO #TEMPVMNO FROM #VMLIST
				 								   
			SET @CSTEP = 145
			WHILE EXISTS (SELECT TOP 1 VM_ID FROM #TEMPVMNO)
			BEGIN
					SELECT TOP 1 @CVMID=VM_ID,@CDEPT_ID=DEPT_ID,@CVOUCTURECODE= VOUCHERCODE,
						        @DTVOUCHERDATA=VOUCHER_DT,@CFINYEAR=FIN_YEAR  FROM #TEMPVMNO
						 						  
					SET @CPREFIXVALUE = (CASE WHEN @CVOUCTURECODE = '0000000002' THEN 'P' 
						                    WHEN @CVOUCTURECODE = '0000000003' THEN 'R'
						                    ELSE '' END)+@CDEPT_ID
						                            
					SET @NSAVETRANLOOP=0
					WHILE @NSAVETRANLOOP=0    
					BEGIN					    
						    SET @CSTEP=150
						    	
							EXEC GETNEXTVCHNO  
							@DVCHDT=@DTVOUCHERDATA,
							@CVCHCODE=@CVOUCTURECODE,
							@NMODE=@NVOUCHORNO_MODE,
							@NWIDTH=10,
							@CCOMPANYCODE='01',
							@CPREFIX=@CPREFIXVALUE,
							@CFINYEAR=@CFINYEAR,
							@CNEWKEYVAL=@CMEMONOVAL OUTPUT  
							     
							IF ISNULL(@CMEMONOVAL,'')=''
							BEGIN
								SET @CERRORMSG = 'P:SAVETRAN_VOUCHERENTRY, STEP: '+@CSTEP+', MESSAGE: ERROR GENERATING MEMO_NO...'    
								GOTO END_PROC
							END
							     
							SET @CSTEP=155
							SET @NSAVETRANLOOP=1
								 
							/*THIS CHECK IS NOT REQUIRED AS VOUCHER_NO CAN EXISTS IN THE SAME FINANCIAL YEAR..	
							SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+'     
													WHERE '+@CMEMONO+'='''+@CMEMONOVAL+'''     
								AND FIN_YEAR = '''+@CFINYEAR+''' )    
								SET @NLOOPOUTPUT=0    
							ELSE    
								SET @NLOOPOUTPUT=1'    
							PRINT @CCMD    
							EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
						*/
					END
						 
					NEWVMNO:
					SET @CVMNO=@CDEPT_ID+LEFT(CONVERT(VARCHAR(40),NEWID()),8)
				 
				IF EXISTS(SELECT TOP 1 'U' FROM VM01106 (NOLOCK) WHERE FIN_YEAR=@CFINYEAR AND VM_NO=@CVMNO)
					OR EXISTS(SELECT TOP 1 'U' FROM #VMLIST WHERE VM_NO=@CVMNO)  
					GOTO NEWVMNO
						  
					SET @CSTEP=160
					UPDATE #VMLIST SET VOUCHER_NO = @CMEMONOVAL,VM_NO=@CVMNO WHERE VM_ID = @CVMID
					DELETE FROM #TEMPVMNO WHERE VM_ID = @CVMID
			END	
				   
			CREATE TABLE #VDID(TEMPID VARCHAR(100), VD_ID VARCHAR(50))
				
			SET @CSTEP=170
			INSERT INTO #VDID(TEMPID )
			SELECT VD_ID FROM vch_vd01106_upload (NOLOCK) WHERE sp_id=@nSpId
			       
			print 'generate vd id'
			--GENRATE VD_ID 
   			SET @CSTEP=180
   			UPDATE #VDID SET VD_ID = @CDEPT_ID+RTRIM(LTRIM(CONVERT(VARCHAR(40),NEWID())))
			       
			--CHECK FOR GENRATE UNIQUE VD_ID
			SET @CFLAG = 0 
			WHILE @CFLAG=0
			BEGIN
				IF EXISTS (SELECT TOP 1 A.VD_ID FROM #VDID A JOIN VD01106 B (NOLOCK) ON A.VD_ID=B.VD_ID)
				BEGIN
					SET @CSTEP=190
					UPDATE A SET A.VD_ID = @CDEPT_ID+RTRIM(LTRIM(CONVERT(VARCHAR(40),NEWID()))) 
					FROM #VDID A 
					JOIN VD01106 B (NOLOCK)  ON A.VD_ID = B.VD_ID
				END
				ELSE
				BEGIN
					SET @CFLAG = 1
				END 
			END
			       
			--UPDATE VM_ID AND  VOUCHER_NO IN TEMP VM01106 TABLE
			SET @CSTEP=200
			UPDATE A SET A.VM_ID	 = B.VM_ID,A.VOUCHER_NO=B.VOUCHER_NO,A.VM_NO=B.VM_NO
			FROM vch_vm01106_upload  A WITH (ROWLOCK)
			JOIN #VMLIST B ON A.VM_ID = B.TEMPID 
			WHERE sp_id=@nSpId
			       
			--UPDATE VM_ID IN TEMP VD01106 TABLE 
			SET @CSTEP=210
			UPDATE A SET A.VM_ID = B.VM_ID FROM vch_vd01106_upload A WITH (ROWLOCK)
			JOIN #VMLIST B ON A.VM_ID = B.TEMPID
			WHERE sp_id=@nSpId
			      
			---UPDATE VD_ID IN TEMP VD01106 TABLE 
			SET @CSTEP=220
			UPDATE A  SET A.VD_ID = B.VD_ID FROM vch_vd01106_upload A WITH (ROWLOCK)
			JOIN #VDID B ON A.VD_ID = B.TEMPID
			WHERE sp_id=@nSpId

			SET @CSTEP=222
			UPDATE A  SET A.ref_VD_ID = B.VD_ID FROM vch_vd01106_upload A WITH (ROWLOCK)
			JOIN #VDID B ON A.ref_VD_ID = B.TEMPID
			WHERE sp_id=@nSpId
			
			IF @CVOUCHERCODE='MEMO000002'
			BEGIN
				---UPDATE VM_ID IN  ACC_MEMO_REVERSAL
				SET @CSTEP=230
				UPDATE A WITH (ROWLOCK)
				SET A.REVERSAL_VM_ID = B.VM_ID
				FROM vch_ACC_MEMO_REVERSAL_upload A 
				JOIN #VMLIST B ON A.REVERSAL_VM_ID = B.TEMPID
				WHERE sp_id=@nSpId
			END
			      
			---UPDATE VD_ID IN BILL_BY_BILL_REF
			SET @CSTEP=240
			UPDATE A WITH (ROWLOCK) SET A.VD_ID = B.VD_ID
			FROM vch_bill_by_bill_ref_upload A
			JOIN #VDID B ON A.VD_ID = B.TEMPID
			WHERE sp_id=@nSpId

			SET @CSTEP=245
			UPDATE A WITH (ROWLOCK) SET A.CCREFVDID = B.VD_ID
			FROM vch_costcenterref_upload A
			JOIN #VDID B ON A.CCREFVDID = B.TEMPID
			WHERE sp_id=@nSpId

			---UPDATE VD_ID IN CHQBOOK_D
			SET @CSTEP=250
			UPDATE A with (rowlock)
						SET A.VD_ID = B.VD_ID
						FROM vch_vd_chqbook_upload A
						JOIN #VDID B ON A.VD_ID = B.TEMPID
			WHERE sp_id=@nSpId

		
			SET @CSTEP=265
			--NEW CHANGES 

			UPDATE A with (rowlock)
			SET A.VD_ID = B.VD_ID
			FROM vch_VDT01106_upload A
			JOIN #VDID B ON A.VD_ID = B.TEMPID
			WHERE sp_id=@nSpId

			--



		
				  
			SET @CMEMOID =   @CVMID 
			      
			       
		END ---END OF ADD MODE
						
		SET @CSTEP=275
		


		SET @CSTEP=277

        UPDATE a WITH (ROWLOCK)  SET COST_CENTER_DEPT_ID=B.DEPT_ID 
		FROM vch_vd01106_upload a 
		JOIN vch_vm01106_upload b (NOLOCK) ON a.sp_id=b.sp_id
		WHERE a.sp_id=@nSpId AND ISNULL(COST_CENTER_DEPT_ID,'')=''
					  
			
				
		SET @CSTEP=280
		
		SELECT A.AC_CODE,CONVERT(NUMERIC(20,2),0) AS VD_AMOUNT,CONVERT(NUMERIC(20,2),0) AS BB_AMOUNT,COST_CENTER_DEPT_ID
		INTO #TMPBBACOLD FROM VD01106 A WHERE 1=2
		
		INSERT #TMPBBACOLD (AC_CODE,VD_AMOUNT,BB_AMOUNT,COST_CENTER_DEPT_ID)
	    SELECT A.AC_CODE,A.AMOUNT vd_amount,ISNULL(C.AMOUNT,0) bb_amount,A.COST_CENTER_DEPT_ID
	   	FROM
	   	(SELECT A.AC_CODE,SUM(A.DEBIT_AMOUNT-A.CREDIT_AMOUNT) AS AMOUNT,A.COST_CENTER_DEPT_ID FROM  VD01106 A (NOLOCK)
		JOIN VM01106 B (NOLOCK) ON A.VM_ID=B.VM_ID
		WHERE CANCELLED=0 AND A.COST_CENTER_DEPT_ID+A.AC_CODE IN 
		(SELECT COST_CENTER_DEPT_ID+AC_CODE FROM vch_vd01106_upload (NOLOCK) WHERE sp_id=@nSpId)
		GROUP BY A.AC_CODE,A.COST_CENTER_DEPT_ID) A
		JOIN LMP01106 B ON B.AC_CODE=A.AC_CODE
		LEFT OUTER JOIN 
		(
		SELECT B.AC_CODE,B.COST_CENTER_DEPT_ID,SUM(CASE WHEN A.X_TYPE='DR' THEN AMOUNT ELSE -AMOUNT END) AS AMOUNT
		 FROM BILL_BY_BILL_REF A (NOLOCK) 
		 JOIN VD01106 B (NOLOCK) ON A.VD_ID=B.VD_ID
		 JOIN VM01106 C (NOLOCK) ON B.VM_ID=C.VM_ID
		 WHERE C.CANCELLED=0 AND
		 B.COST_CENTER_DEPT_ID+B.AC_CODE IN 
		 (SELECT COST_CENTER_DEPT_ID+AC_CODE FROM vch_vd01106_upload (NOLOCK)
		  WHERE sp_id=@nSpId)		 
		 GROUP BY B.AC_CODE,B.COST_CENTER_DEPT_ID
	     )C ON A.AC_CODE=C.AC_CODE AND A.COST_CENTER_DEPT_ID=C.COST_CENTER_DEPT_ID
		 WHERE BILL_BY_BILL=1 AND ABS(A.AMOUNT-ISNULL(C.AMOUNT,0))>.1 
		 				
		IF (@NUPDATEMODE=2)--START OF EDIT MODE
		BEGIN
			SET @CSTEP=290
			IF ISNULL(@CMEMOID,'') = ''
			BEGIN
				SET @CERRORMSG = 'P:SAVETRAN_VOUCHERENTRY, STEP: '+@CSTEP+', MESSAGE: MEMO_ID REQUIRED FOR EDIT MODE...'    
				GOTO END_PROC
			END
			
			---DELETE DATA FROM BILL_BY_BILL_REF TABLES 
			SET @CSTEP=300
	        DELETE A 
	        FROM  BILL_BY_BILL_REF A WITH (ROWLOCK)
	        JOIN VD01106 B WITH (NOLOCK) ON A.VD_ID=B.VD_ID
	        WHERE B.VM_ID = @CMEMOID
	        
			SET @CSTEP=305
	        DELETE A 
	        FROM  costcenterref A WITH (ROWLOCK)
	        JOIN VD01106 B WITH (NOLOCK) ON A.CCREFVDID=B.VD_ID
	        WHERE B.VM_ID = @CMEMOID

	        SET @CSTEP=310
    		delete a FROM vdt01106 A WITH (ROWLOCK)
			JOIN VD01106 B ON A.VD_ID =B.VD_ID 
			WHERE B.VM_ID =@CMEMOID



	        DELETE A FROM  VD_CHQBOOK A  WITH (ROWLOCK)
	        JOIN VD01106 B WITH (noLOCK) ON A.VD_ID=B.VD_ID
	        WHERE B.VM_ID = @CMEMOID

			
			     
	        ---DELETE DATA FROM VD01106
	        SET @CSTEP=330
	        DELETE FROM VD01106 WITH (ROWLOCK) WHERE VM_ID = @CMEMOID
	        
	         --SELECT * FROM VD01106 WHERE VM_ID = @CMEMOID 
	         SET @CSTEP=340
	         UPDATE VCH_VD01106_UPLOAD WITH (ROWLOCK) SET  VM_ID = @CMEMOID
			 WHERE sp_id=@nSPId
		     
	        
	        ---THIS TEMP TABLE INSERT TEMPVDID
	        SET @CSTEP=350
			
			CREATE TABLE  #EDITVDID(TEMPID VARCHAR(50),VD_ID VARCHAR(50))
			
			SET @CSTEP=360
			INSERT INTO #EDITVDID(TEMPID)
			SELECT VD_ID FROM  VCH_VD01106_UPLOAD (NOLOCK) WHERE sp_id=@nSpId AND LEFT(VD_ID,5) in ('LATER','')
			--SELECT * FROM #EDITVDID
			
			SET @CSTEP=370
			--GET THE DEPT_ID FROM TEMP VM01106 TABLE
			SELECT TOP 1 @CDEPT_ID=location_code FROM vch_vm01106_upload (NOLOCK) WHERE sp_id=@nSpId
			
			--GENRATE VD_ID
			SET @CSTEP=375
			UPDATE 	#EDITVDID SET VD_ID = @CDEPT_ID+RTRIM(LTRIM(CONVERT(VARCHAR(40),NEWID())))
			
			---CHECK FOR GENRATE A UNIQUE VD_ID
			SET @CSTEP=380
			SET @CFLAG = 0 
	        WHILE @CFLAG=0
	        BEGIN
				SET @CSTEP=385
				IF EXISTS (SELECT TOP 1 A.VD_ID FROM #EDITVDID A JOIN VD01106 B ON A.VD_ID=B.VD_ID)
				BEGIN
					UPDATE A SET A.VD_ID = @CDEPT_ID+RTRIM(LTRIM(CONVERT(VARCHAR(40),NEWID()))) FROM #EDITVDID A 
					JOIN VD01106 B ON A.VD_ID = B.VD_ID
				END
				ELSE
				BEGIN
					SET @CFLAG = 1
				END 
	       END
		   --SELECT * FROM #EDITVDID
	      --UPDATE VD_ID IN TEMP VD01106 TABLE 
	      SET @CSTEP=390
	      UPDATE A WITH (ROWLOCK) SET A.VD_ID = B.VD_ID
		  FROM vch_vd01106_upload A 
		  JOIN #EDITVDID B ON A.VD_ID = B.TEMPID
		  WHERE sp_id=@nSpId
		  --SELECT * FROM vch_vd01106_upload WHERE sp_id=@nSpId
	      SET @CSTEP=395
	      UPDATE A WITH (ROWLOCK) SET A.REF_VD_ID = B.VD_ID
		  FROM vch_vd01106_upload A 
		  JOIN #EDITVDID B ON A.REF_VD_ID = B.TEMPID
		  WHERE sp_id=@nSpId

	      ---UPDATE VD_ID IN BILL_BY_BILL_REF
	      SET @CSTEP=400
	      UPDATE A	WITH (ROWLOCK) SET A.VD_ID = B.VD_ID
		  FROM vch_bill_by_bill_ref_upload A 
		  JOIN #EDITVDID B ON A.VD_ID = B.TEMPID
		  WHERE sp_id=@nSpId

		   ---UPDATE VD_ID IN vch_costcenterref_upload
	      SET @CSTEP=400
	      UPDATE A	WITH (ROWLOCK) SET A.CCREFVDID = B.VD_ID
		  FROM vch_costcenterref_upload A 
		  JOIN #EDITVDID B ON A.CCREFVDID = B.TEMPID
		  WHERE sp_id=@nSpId

	      ---UPDATE VD_ID IN CHQBOOK_D
	      SET @CSTEP=410
	      UPDATE A	WITH (ROWLOCK) SET A.VD_ID = B.VD_ID
		  FROM vch_vd_chqbook_upload A 
		  JOIN #EDITVDID B ON A.VD_ID = B.TEMPID
		  WHERE sp_id=@nSpId
		  
		   ---UPDATE VD_ID IN CHQBOOK_D
	      SET @CSTEP=420
	      UPDATE A	WITH (ROWLOCK) SET A.VD_ID = B.VD_ID
		  FROM vch_VDT01106_upload A 
		  JOIN #EDITVDID B ON A.VD_ID = B.TEMPID
		  WHERE sp_id=@nSpId
		  	  
		  --UPDATE VM_NO COLUMN IN TEMP VM01106
		  SET @CSTEP=430
		 UPDATE A	WITH (ROWLOCK) SET A.VM_NO = B.VM_NO
		 FROM vch_Vm01106_upload A
		 JOIN VM01106 B ON A.VM_ID = B.VM_ID
		 WHERE sp_id=@nSpId
		  
		  SET @CSTEP=440
		  SELECT @CMEMONOVAL = VOUCHER_NO FROM VM01106 (NOLOCK)  WHERE VM_ID = @CMEMOID
		  --SELECT @CMEMONOVAL
		  	  
		END---END OF EDIT MODE
		/*
		IF THE LEDGER IN VD IS OF TYPE DEBITOR OR CREDITOR AND ITS BILL BY BILL MARK IS FALSE, THEN CREATE NEW REF ENTRY IN 
		BILL_BY_BILL_REF TABLE WITH REF_NO THAT OF VM IS FILLED ELSE VOUCHER_NO THAT IS GENERATED.
		*/	
	   SET @CSTEP=460
	  
	   SET @cHEAD_CODE	= DBO.FN_ACT_TRAVTREE('0000000018') ----ADD VARIABLE BY GAURI ON 17/4/2019	
	   SET @cHEAD_CODE1	= DBO.FN_ACT_TRAVTREE('0000000021') ----ADD VARIABLE BY GAURI ON 17/4/2019	
	   
	   SET @cCmd=N'IF EXISTS(SELECT TOP 1 VD_ID FROM vch_Vd01106_upload A (NOLOCK)
				 JOIN LM01106 B (NOLOCK) ON A.AC_CODE=B.AC_CODE
				 LEFT OUTER JOIN LMP01106 C (NOLOCK) ON C.AC_CODE=B.AC_CODE
				 WHERE sp_id='''+@nSpId+''' AND (ISNULL(C.BILL_BY_BILL,0)<>1 
							   AND (B.HEAD_CODE IN ('+@cHEAD_CODE+') ----REPLACE VARIABLE FROM FUNCTION BY GAURI ON 17/4/2019
								/*LEDGER IS SUNDRY DEBTORS*/
									OR B.HEAD_CODE IN ('+@cHEAD_CODE1+')))
									OR (ISNULL(C.BILL_BY_BILL,0)=1 AND 1='+CASE WHEN @BCALLEDFROMIMPORTRECEIPT=0 THEN '0' ELSE '1' END + ')) ----REPLACE VARIABLE FROM FUNCTION BY GAURI ON 17/4/2019
				  BEGIN
					DELETE A FROM vch_bill_by_bill_ref_upload A with (rowlock)
					JOIN vch_vd01106_upload B (NOLOCK) ON A.VD_ID=B.VD_ID and a.sp_id=b.sp_id
				    JOIN LM01106 C (NOLOCK) ON C.AC_CODE=B.AC_CODE
				    LEFT OUTER JOIN LMP01106 D (NOLOCK) ON D.AC_CODE=B.AC_CODE
					WHERE a.sp_id='''+@nSpId+''' AND ISNULL(D.BILL_BY_BILL,0)<>1 
					AND (c.HEAD_CODE IN ('+@cHEAD_CODE+') ----REPLACE VARIABLE FROM FUNCTION BY GAURI ON 17/4/2019
								/*LEDGER IS SUNDRY DEBTORS*/
									OR c.HEAD_CODE IN ('+@cHEAD_CODE1+'))  ----REPLACE VARIABLE FROM FUNCTION BY GAURI ON 17/4/2019
				  
				  
					INSERT INTO vch_bill_by_bill_ref_upload
									(sp_id,VD_ID,REF_NO,AMOUNT,amount_forex,LAST_UPDATE,X_TYPE,CR_DAYS,due_dt)
					SELECT '''+@nSpId+''' sp_id,A.VD_ID,DBO.FN_GETBILLBYBILL_REFNO_ONACCOUNT(A.AC_CODE) AS REF_NO,
					(A.CREDIT_AMOUNT+A.DEBIT_AMOUNT) AS AMOUNT,(A.credit_amount_forex+A.debit_amount_forex) AS amount_forex,GETDATE() AS LAST_UPDATE
						  ,(CASE WHEN A.CREDIT_AMOUNT>0 THEN ''CR'' ELSE ''DR'' END) AS X_TYPE
						  ,ISNULL(D.CREDIT_DAYS,0) AS CR_DAYS,DATEADD(DD,ISNULL(D.CREDIT_DAYS,0),b.voucher_dt) AS due_dt
					FROM vch_vd01106_upload A (NOLOCK)
					JOIN vch_vm01106_upload B (NOLOCK) ON A.VM_ID=B.VM_ID and a.sp_id=b.sp_id
					LEFT OUTER JOIN vch_bill_by_bill_ref_upload B1 (NOLOCK) ON A.VD_ID=B1.VD_ID
				    JOIN LM01106 C ON C.AC_CODE=A.AC_CODE
				    LEFT OUTER JOIN LMP01106 D ON D.AC_CODE=A.AC_CODE
					WHERE a.sp_id='''+@nSpId+''' AND  (ISNULL(D.BILL_BY_BILL,0)<>1 
							   AND ((c.HEAD_CODE IN ('+@cHEAD_CODE+') ----REPLACE VARIABLE FROM FUNCTION BY GAURI ON 17/4/2019
								/*LEDGER IS SUNDRY DEBTORS*/
									OR c.HEAD_CODE IN ('+@cHEAD_CODE1+')))  ----REPLACE VARIABLE FROM FUNCTION BY GAURI ON 17/4/2019
						OR(B1.VD_ID IS NULL AND ISNULL(D.BILL_BY_BILL,0)=1 AND 1='+CASE WHEN @BCALLEDFROMIMPORTRECEIPT=0 THEN '0' ELSE '1' END + '))
				  END'
	  PRINT @CCMD
	  EXEC SP_EXECUTESQL @CCMD							  

		SET @CSTEP=470
		UPDATE vch_vm01106_upload WITH (ROWLOCK) SET LAST_UPDATE=GETDATE() WHERE sp_id=@nSpId

		DECLARE @CFILTERCONDITION VARCHAR(500)

		SET @CFILTERCONDITION=' b.sp_id='''+@nSpId+''''

			---INSERT/UPDATE VM01106
			SET @CSTEP=480
			EXEC UPDATEMASTERXN_OPT   
				 @CSOURCEDB = ''
			   , @CSOURCETABLE = 'vch_vm01106_upload'
			   , @CDESTDB  = ''    
			   , @CDESTTABLE = 'VM01106'
			   , @CKEYFIELD1 = 'VM_ID'    
			   , @BALWAYSUPDATE = 1
			   , @CFILTERCONDITION=@CFILTERCONDITION

			DECLARE @cDonotAutoRecoCashBankVouchers VARCHAR(2)
			SELECT @cDonotAutoRecoCashBankVouchers=value FROM config (NOLOCK)
			WHERE config_option='DO_NOT_FILL_RECON_DATE_ON_CASH_TRANSACTION'
			IF ISNULL(@cDonotAutoRecoCashBankVouchers,'')<>'1'
			BEGIN
				SET @CSTEP = 490
				EXEC SP3S_MARK_BANK_CLEARINGDT
				@nSpId=@nSpId
		    END
			---INSERT/UPDATE VD01106
			SET @CSTEP = 500  
			EXEC UPDATEMASTERXN_OPT  
				 @CSOURCEDB = ''
			   , @CSOURCETABLE = 'vch_vd01106_upload'
			   , @CDESTDB  = ''    
			   , @CDESTTABLE = 'vd01106'    
			   , @CKEYFIELD1 = 'VD_ID' 
			   , @LINSERTONLY =1   
			   , @CFILTERCONDITION=@CFILTERCONDITION
			
			
			IF @CVOUCHERCODE='MEMO000002'
			BEGIN
				SET @CSTEP = 530
				EXEC UPDATEMASTERXN_OPT     
					 @CSOURCEDB = ''
				   , @CSOURCETABLE = 'vch_ACC_MEMO_REVERSAL_upload'
				   , @CDESTDB  = ''    
				   , @CDESTTABLE = 'ACC_MEMO_REVERSAL'    
				   , @CKEYFIELD1 = 'REVERSAL_VM_ID'
				   , @CKEYFIELD2 = ''
				   , @CKEYFIELD3 = ''
				   , @BALWAYSUPDATE = 1
				   , @CFILTERCONDITION=@CFILTERCONDITION   
			END
			
				
			SET @CSTEP = 540  
			UPDATE vch_bill_by_bill_ref_upload WITH (ROWLOCK)
			SET BB_ROW_ID=NEWID() WHERE sp_id=@nSpId AND
			(ISNULL(BB_ROW_ID,'')='' OR LEFT(ISNULL(BB_ROW_ID,''),5)='LATER')
			
			SET @CSTEP = 550
			UPDATE vch_VDT01106_upload WITH (ROWLOCK) SET ROW_ID=NEWID() 
			WHERE sp_id=@nSpId AND (ISNULL(ROW_ID,'')='' OR LEFT(ISNULL(ROW_ID,''),5)='LATER')
			
				
			--SELECT A.* FROM VD01106 A JOIN P0_TEMP..TEMP_BILL_BY_BILL_REF_266 B ON A.VD_ID=B.VD_ID
			--INSERT/UPDATE BILL_BY_BILL_REF
			SET @CSTEP = 560
			EXEC UPDATEMASTERXN_OPT    
				 @CSOURCEDB = ''
			   , @CSOURCETABLE = 'vch_bill_by_bill_ref_upload'
			   , @CDESTDB  = ''    
			   , @CDESTTABLE = 'bill_by_bill_ref'    
			   , @CKEYFIELD1 = 'VD_ID'
			   , @LINSERTONLY = 1
			   , @CFILTERCONDITION=@CFILTERCONDITION   	
		    

			SET @CSTEP = 565
			UPDATE vch_costcenterref_upload WITH (ROWLOCK) SET CCREFROWID=NEWID() 
			WHERE sp_id=@nSpId AND (ISNULL(CCREFROWID,'')='' OR LEFT(ISNULL(CCREFROWID,''),5)='LATER')

			EXEC UPDATEMASTERXN_OPT    
				 @CSOURCEDB = ''
			   , @CSOURCETABLE = 'vch_costcenterref_upload'
			   , @CDESTDB  = ''    
			   , @CDESTTABLE = 'costcenterref'    
			   , @CKEYFIELD1 = 'CCREFROWID'
			   , @LINSERTONLY = 1
			   , @CFILTERCONDITION=@CFILTERCONDITION   	

			IF @nUpdatemode=2
			BEGIN 
				SET @CSTEP = 570
				DELETE A FROM VD_CHQBOOK A WITH (ROWLOCK) JOIN  vch_VD_CHQBOOK_upload B ON A.VD_ID=B.VD_ID
				WHERE b.sp_id=@nSpId

			END

			SET @CSTEP = 580
			DELETE A FROM vch_VD_CHQBOOK_upload A WITH (ROWLOCK) JOIN  vch_VD01106_upload B (NOLOCK)
			ON a.sp_id=b.sp_id AND A.VD_ID=B.VD_ID
			WHERE CHQ_PAY_MODE=2								
			--SELECT A.* FROM BILL_BY_BILL_REF A JOIN P0_TEMP..TEMP_BILL_BY_BILL_REF_266 B ON A.VD_ID=B.VD_ID			
			
			IF @BCALLEDFROMDIRECTVOUCHERENTRY=1
			BEGIN
				--INSERT/UPDATE BILL_BY_BILL_REF
				SET @CSTEP = 590
				EXEC UPDATEMASTERXN_OPT    
					 @CSOURCEDB = ''
				   , @CSOURCETABLE = 'vch_VD_CHQBOOK_upload'
				   , @CDESTDB  = ''    
				   , @CDESTTABLE = 'VD_CHQBOOK'    
				   , @CKEYFIELD1 = 'VD_ID'
				   , @LINSERTONLY = 0
				   , @LUPDATEONLY = 0 
				   , @BALWAYSUPDATE=1
				   , @CFILTERCONDITION=@CFILTERCONDITION   	
			END			   
			   
			   
			--INSERT/UPDATE BILL_BY_BILL_REF
			SET @CSTEP = 600
			EXEC UPDATEMASTERXN_OPT    
				 @CSOURCEDB = ''
			   , @CSOURCETABLE = 'vch_VDT01106_upload'
			   , @CDESTDB  = ''    
			   , @CDESTTABLE = 'vdt01106'
			   , @CKEYFIELD1 = 'ROW_ID'
			   , @LINSERTONLY = 0
			   , @CFILTERCONDITION=@CFILTERCONDITION   	
			   			
			
			SET @CSTEP = 610
			IF EXISTS(SELECT TOP 1 'U' FROM BILL_BY_BILL_REF A (NOLOCK)
						JOIN VD01106 B (NOLOCK) ON A.VD_ID=B.VD_ID
						 JOIN VM01106 C (NOLOCK) ON B.VM_ID=C.VM_ID
						  WHERE C.VM_ID=@CMEMOID AND ISNULL(A.REF_NO,'')='')
			BEGIN
				SET @CSTEP = 620
				IF @BCALLEDFROMDIRECTVOUCHERENTRY=0
					UPDATE A SET REF_NO=(CASE WHEN ISNULL(C.REF_NO,'')<>'' THEN C.REF_NO ELSE C.VOUCHER_NO END)
					FROM BILL_BY_BILL_REF A WITH (ROWLOCK)
					 JOIN VD01106 B (NOLOCK) ON A.VD_ID=B.VD_ID
					  JOIN VM01106 C  (NOLOCK) ON B.VM_ID=C.VM_ID
					   WHERE C.VM_ID=@CMEMOID 
				ELSE
				BEGIN
					SET @CERRORMSG = 'REF NO CANNOT BE BLANK IN BILL BY BILL ENTRY'
					GOTO END_PROC 
				END	
			END	

			
			   
		/*
		 VALIDATION IF CREADIT NOT EQUAL TO DEBIT
		*/	
		
		/*
			VALIDATION THAT AMOUNT IN BILL_BY_BILL FOR A VD_ID SHOULD BE EQUAL TO 
			THAT OF AMOUNT IN VD01106
		*/
		SET @CSTEP = 640
		DECLARE @CDIFFACNAME VARCHAR(400),@NDIFFVDAMT NUMERIC(20,2),@NDIFFBBAMT NUMERIC(20,2)
		 
		IF @CVOUCHERCODE NOT IN ('MEMO000001','MEMO000002') AND @BCALLEDFROMSorPayments=0
		BEGIN   

		
			SET @CSTEP = 650
		    SELECT TOP 1 @CDIFFACNAME=AC_NAME,@NDIFFVDAMT=(A.DEBIT_AMOUNT-A.CREDIT_AMOUNT),@NDIFFBBAMT=ISNULL(C.AMOUNT,0)
		   	FROM VD01106 A (NOLOCK)
			JOIN VM01106 B (NOLOCK) ON A.VM_ID=B.VM_ID
			JOIN LMP01106 LMP (NOLOCK) ON LMP.AC_CODE=A.AC_CODE
			JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE=LMP.AC_CODE
			LEFT OUTER JOIN 
			(
			SELECT A.VD_ID,SUM(CASE WHEN A.X_TYPE='DR' THEN AMOUNT ELSE -AMOUNT END) AS AMOUNT
			 FROM BILL_BY_BILL_REF A (NOLOCK) 
			 JOIN VD01106 B (NOLOCK) ON A.VD_ID=B.VD_ID
			 JOIN VM01106 C (NOLOCK) ON B.VM_ID=C.VM_ID
			 WHERE C.VM_ID=@CMEMOID
			 GROUP BY A.VD_ID
		     )C ON A.VD_ID=C.VD_ID
			 WHERE B.VM_ID=@CMEMOID 
			--26 JUN 2018 -- ROUND OF 2 ADDED
			AND ROUND(ABS((A.DEBIT_AMOUNT-A.CREDIT_AMOUNT)-ISNULL(C.AMOUNT,0)),2)>.1 
			AND LMP.BILL_BY_BILL=1 AND ISNULL(a.autoentry,0)=0

			IF ISNULL(@CDIFFACNAME,'')<>''
			BEGIN
				SET @CERRORMSG = '(1)MISMATCH FOUND IN BILL BY BILL ENTRY FOR LEDGER NAME :'+@CDIFFACNAME+
				 ' LEDGER AMT : '+LTRIM(RTRIM(STR(@NDIFFVDAMT,10,2)))+' BILL BY BILL AMT:'+LTRIM(RTRIM(STR(@NDIFFBBAMT,10,2)))+' .CANNOT PROCEED'
				GOTO END_PROC 
			END		  
			
			SET @CSTEP = 660

			
			SELECT DISTINCT A.AC_CODE,A.COST_CENTER_DEPT_ID INTO #TMPBBAC FROM VD01106 A
			JOIN LMP01106 B ON A.AC_CODE=B.AC_CODE
			WHERE VM_ID=@CMEMOID AND B.BILL_BY_BILL=1
			

			----Forex changes till this step
			SET @CSTEP = 670
			DECLARE @NOLDDIFF NUMERIC(10,2),@NNEWDIFF NUMERIC(10,2)

		    SELECT TOP 1 @CDIFFACNAME=AC_NAME,@NDIFFVDAMT=A.AMOUNT,
		    @NDIFFBBAMT=ISNULL(C.AMOUNT,0),@NOLDDIFF=ISNULL(D.VD_AMOUNT,0)-ISNULL(D.BB_AMOUNT,0),
		    @NNEWDIFF=ISNULL(A.AMOUNT,0)-ISNULL(C.AMOUNT,0)
		   	FROM
		   	(SELECT A.COST_CENTER_DEPT_ID,A.AC_CODE,SUM(DEBIT_AMOUNT-CREDIT_AMOUNT) AS AMOUNT
			FROM  VD01106 A (NOLOCK)
			JOIN VM01106 B (NOLOCK) ON A.VM_ID=B.VM_ID
			JOIN #TMPBBAC BB ON BB.AC_CODE=A.AC_CODE AND A.COST_CENTER_DEPT_ID=BB.COST_CENTER_DEPT_ID
			WHERE CANCELLED=0 			 AND ISNULL(a.autoentry,0)=0
			GROUP BY A.AC_CODE,A.COST_CENTER_DEPT_ID) A
			JOIN LM01106 B ON B.AC_CODE=A.AC_CODE
			LEFT OUTER JOIN 
			(
			SELECT B.COST_CENTER_DEPT_ID,B.AC_CODE,SUM(CASE WHEN A.X_TYPE='DR' THEN AMOUNT ELSE -AMOUNT END) AS AMOUNT
			 FROM BILL_BY_BILL_REF A (NOLOCK) 
			 JOIN VD01106 B (NOLOCK) ON A.VD_ID=B.VD_ID
			 JOIN VM01106 C (NOLOCK) ON B.VM_ID=C.VM_ID
			 JOIN #TMPBBAC BB ON BB.AC_CODE=B.AC_CODE AND BB.COST_CENTER_DEPT_ID=B.COST_CENTER_DEPT_ID
			 WHERE C.CANCELLED=0	AND ISNULL(b.autoentry,0)=0
			 GROUP BY B.AC_CODE,B.COST_CENTER_DEPT_ID
		     ) C ON A.AC_CODE=C.AC_CODE AND C.COST_CENTER_DEPT_ID=A.COST_CENTER_DEPT_ID
			 LEFT OUTER JOIN #TMPBBACOLD D ON D.AC_CODE=A.AC_CODE AND D.COST_CENTER_DEPT_ID=A.COST_CENTER_DEPT_ID
			 WHERE (ABS(A.AMOUNT-ISNULL(C.AMOUNT,0))>.1 AND ROUND(ABS(A.AMOUNT-ISNULL(C.AMOUNT,0)),2)<>ROUND(ABS(ISNULL(D.VD_AMOUNT,0)-
					ISNULL(D.BB_AMOUNT,0)),2))
			 --26 JUN 2018 -- ROUND OF 2 ADDED IN BOTH SIDES	

			IF ISNULL(@CDIFFACNAME,'')<>''
			BEGIN
				SET @CERRORMSG = '(2)MISMATCH FOUND IN TOTAL BILL BY BILL FOR LEDGER NAME :'+
				@CDIFFACNAME+' LEDGER AMT : '+LTRIM(RTRIM(STR(@NDIFFVDAMT,10,2)))+
				' BILL BY BILL AMT:'+LTRIM(RTRIM(STR(@NDIFFBBAMT,10,2)))+'(OLD DIFF:'+LTRIM(RTRIM(STR(@NOLDDIFF)))+')'+
				+'(NEW DIFF:'+LTRIM(RTRIM(STR(@NNEWDIFF)))+') .CANNOT PROCEED'
				GOTO END_PROC 
			END		  
		 END	
			SELECT @CBILLTYPE=BILL_TYPE,@DVMDT=VOUCHER_DT,@CVMLOCID=DEPT_ID FROM VM01106 WHERE VM_ID=@CVMID
			
			SET @CSTEP = 680
			--17 MAR 2018
			IF (@NUPDATEMODE=2)	  AND @BCALLEDFROMDIRECTVOUCHERENTRY=1
		        EXEC SP3S_CAPTURE_AUDIT_TRAIL 'VCH',@CMEMOID,'','',@NSPID,@CMACHINENAME,@CWINDOWUSERNAME,@CWIZAPPUSERCODE,0,'1900-01-01',1

			SET @CSTEP=690
			
			EXEC SP3S_VALIDATE_COSTCENTER_ENTRIES
			@NMODE=2,
			@CVMID=@CMEMOID,
			@CERRORMSG=@CERRORMSG OUTPUT


			SET @cStep=700
			EXEC SP3S_UPDATE_LEDGERBALANCES
			@nUpdateMode=1,
			@cVmId=@CMEMOID
		
		IF ISNULL(@CERRORMSG,'')<>''
			GOTO END_PROC
		
		SET @cStep=705
		IF NOT EXISTS (SELECT voucher_dt FROM vch_last_saved)
			INSERT vch_last_saved (voucher_dt)
			SELECT voucher_dt FROM vch_vm01106_upload (NOLOCK) WHERE sp_id=@nSpId
		ELSE
			update a set voucher_dt=b.voucher_dt FROM  vch_last_saved a
			JOIN vch_vm01106_upload b (NOLOCK) ON 1=1
			WHERE sp_id=@nSpId and A.voucher_dt>B.VOUCHER_DT

	 -- Commented this as it is running damn slow at Bigshop Ranchi and Dinkar is looking into this 
	 -- which may take time (Date :11-01-2024 Sanjay)
	  --SET @cStep=710
	  --EXEC VALIDATEXN  
		 --@CXNTYPE = 'ACT'  
	  -- , @CXNID = @CMEMOID
	  -- , @NUPDATEMODE = @NUPDATEMODE     
	  -- , @CCMD  = @CERRORMSG OUTPUT  
   
	  --IF ISNULL(@CERRORMSG,'') <> ''  
	  --BEGIN  
		 --  SET @CERRORMSG = 'STEP- ' + LTRIM(RTRIM(@cStep)) + ' DATA VALIDATION FAILED : ' + @CERRORMSG + '...'  
		 --  GOTO END_PROC  
	  --END  
	   
END TRY

BEGIN CATCH
		SET @CERRORMSG = 'P:SAVETRAN_VOUCHERENTRY STEP: '+@CSTEP+', MESSAGE: '+ ERROR_MESSAGE()    
		GOTO END_PROC
END CATCH

END_PROC:
		
	IF ISNULL(@CERRORMSG,'') = ''
		SELECT @CERRORMSG=DBO.FN_CHECK_DUPBBREF(@CMEMOID,'')
		
--select voucher_dt,voucher_no,b.vm_id, b.cancelled, a.xn_type,a.memo_id,a.last_update,b.crtotal,b.drtotal,  b.* from POSTACT_VOUCHER_LINK a join vm01106 b on  a.vm_id=b.vm_id where xn_type='ptc'
--and  replace(replace(a.memo_id,'Cr',''),'Dr','')='H10112200000H100000009'
--and cancelled=0
		
	IF @@TRANCOUNT > 0 AND @BCALLEDFROMSorPayments=0
	BEGIN
		IF ISNULL(@CERRORMSG,'') = '' 
			commit
		ELSE		
			ROLLBACK
	END
		
	IF ISNULL(@CERRORMSG,'')<>''
		SET @CERRORMSG='SP ID(VC):'+ltrim(rtrim(str(@@SPID)))+ @CERRORMSG
		
	IF @BCALLEDFROMSorPayments=0  --and @@spid not in (333,190)
		EXEC SP_DELETEUPLOADTABLES	'VCH',@nSpId
		
	IF @nUpdatemode<>1
	BEGIN			
		print 'Update mode:'+str(@nUpdatemode)		
		SET @COL='IF OBJECT_ID(''TEMPDB..##VMM_'+CAST(@NSPID AS VARCHAR)+'_'+@CMEMOID+''',''U'') IS NOT NULL'+CHAR(13)+' DROP TABLE [##VMM_'+CAST(@NSPID AS VARCHAR)+'_'+@CMEMOID+'];'
		EXEC(@COL)
		SET @COL=''
		SET @COL='IF OBJECT_ID(''TEMPDB..##VMD_'+CAST(@NSPID AS VARCHAR)+'_'+@CMEMOID+''',''U'') IS NOT NULL'+CHAR(13)+' DROP TABLE [##VMD_'+CAST(@NSPID AS VARCHAR)+'_'+@CMEMOID+'];'
		PRINT @COL
		EXEC(@COL)
	END

	IF @BCALLEDFROMSorPayments=0
		SELECT ISNULL(@CERRORMSG,'') AS ERRMSG,@CMEMOID AS MEMO_ID,@CMEMONOVAL AS VOUCHER_NO
	ELSE
		INSERT  #tSorPay 
		SELECT ISNULL(@CERRORMSG,'') AS ERRMSG

	DELETE A FROM XNTYPE_CHECKSUM_MST A(NOLOCK) WHERE SP_ID =@nSpId
END 	