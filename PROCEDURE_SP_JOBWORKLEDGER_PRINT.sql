CREATE PROCEDURE SP_JOBWORKLEDGER_PRINT
(
	@CFROMDATE		DATETIME,
	@CTODATE		DATETIME,
	@CPRODUCT_CODE	VARCHAR(100)='',
	@CAGENCY		VARCHAR(100)='',
	@BIGNOREZEROBALANCE		BIT=0
)
AS
BEGIN
	IF LTRIM(RTRIM(ISNULL(@CPRODUCT_CODE,'')))=''
		SET @CPRODUCT_CODE=NULL

	IF LTRIM(RTRIM(ISNULL(@CAGENCY,'')))=''
		SET @CAGENCY=NULL

	DECLARE @CTOTALSTK NUMERIC(14,2)
	DECLARE @DTTABLE TABLE (AGENCY_CODE VARCHAR(100),AGENCY_NAME VARCHAR(100),PC VARCHAR(100), XN_TYPE VARCHAR(100), QTY NUMERIC(14,3),XN_DT DATETIME)
	DECLARE @DTTABLE1 TABLE (AGENCY_CODE VARCHAR(100),AGENCY_NAME VARCHAR(100),PC VARCHAR(100), QTY NUMERIC(14,3),XN_DT DATETIME)
	DECLARE @DTPENDINGJOBS TABLE
	(
		AGENCY_NAME	VARCHAR(100),PRODUCT_CODE VARCHAR(100),XN_TYPE VARCHAR(10),QUANTITY NUMERIC(14,3),
		XN_DT DATETIME,XN_ID VARCHAR(50),XN_NO VARCHAR(100),XN_ORDER NUMERIC(5),WIP_UID VARCHAR(MAX),VALUE_ADDITION NUMERIC(14,3),
		UNIT_COST NUMERIC(14,2),JOB_CODE VARCHAR(20),AGENCY_CODE VARCHAR(100),RECEIPT_CHALLAN_NO VARCHAR(100),RECEIPT_CHALLAN_DT DATETIME,
		ISSUE_ROW_ID VARCHAR(100)
	)
	
	INSERT INTO @DTTABLE(AGENCY_CODE,AGENCY_NAME, PC , XN_TYPE , QTY ,XN_DT )
	SELECT C.AGENCY_CODE,C.AGENCY_NAME,A.PRODUCT_CODE ,'WIPJWI' AS [XN_TYPE],(-1 * A.QUANTITY) AS [QUANTITY]
		  ,B.ISSUE_DT AS [XN_DT]
	FROM JOBWORK_ISSUE_DET A
	JOIN JOBWORK_ISSUE_MST  B ON B.ISSUE_ID=A.ISSUE_ID
	JOIN WIP_PMT D ON D.WIP_UID = A.WIP_UID  
	JOIN PRD_AGENCY_MST C ON C.AGENCY_CODE=B.AGENCY_CODE	
	WHERE B.CANCELLED=0 AND B.WIP=1 	AND B.ISSUE_DT<@CFROMDATE 
	AND A.PRODUCT_CODE = ISNULL(@CPRODUCT_CODE,A.PRODUCT_CODE)
	AND C.AGENCY_CODE = ISNULL(@CAGENCY,C.AGENCY_CODE)
	UNION ALL
	SELECT C.AGENCY_CODE,C.AGENCY_NAME,A.PRODUCT_CODE ,'WIPJWR' AS [XN_TYPE],A.QUANTITY
		  ,B.RECEIPT_DT AS [XN_DT]
	FROM JOBWORK_RECEIPT_DET A
	JOIN JOBWORK_RECEIPT_MST  B ON B.RECEIPT_ID=A.RECEIPT_ID
	JOIN WIP_PMT D ON D.XN_ROW_ID = A.ROW_ID 
	JOIN PRD_AGENCY_MST C ON C.AGENCY_CODE=B.AGENCY_CODE	
	WHERE B.CANCELLED=0 AND B.WIP=1 AND B.RECEIPT_DT<@CFROMDATE 
	AND A.PRODUCT_CODE = ISNULL(@CPRODUCT_CODE,A.PRODUCT_CODE)
	AND C.AGENCY_CODE = ISNULL(@CAGENCY,C.AGENCY_CODE)

	--AGENCY WISE PRODUCT CODE WISE OPENING..
	INSERT INTO @DTTABLE1(AGENCY_CODE,AGENCY_NAME, PC  , QTY,XN_DT )
	SELECT AGENCY_CODE,AGENCY_NAME,PC AS [PRODUCT_CODE],SUM(QTY) AS QTY,@CFROMDATE FROM @DTTABLE 
	GROUP BY AGENCY_CODE,AGENCY_NAME,PC
	
	--COLLECTING ALL ISSUES AND RECEIVE DURING THE PERIOD(FROMDT AND TODT)
	INSERT INTO @DTPENDINGJOBS(AGENCY_NAME,PRODUCT_CODE ,XN_TYPE,QUANTITY,XN_DT,XN_ID,XN_NO,XN_ORDER,WIP_UID
	,VALUE_ADDITION,UNIT_COST,JOB_CODE,AGENCY_CODE,RECEIPT_CHALLAN_NO,RECEIPT_CHALLAN_DT,ISSUE_ROW_ID)
	SELECT AGENCY_NAME,PRODUCT_CODE ,XN_TYPE,(QUANTITY) AS [QUANTITY],XN_DT,ISSUE_ID,XN_NO,XN_ORDER,WIP_UID,VALUE_ADDITION,[UNIT COST],JOB_CODE,AGENCY_CODE,RECEIPT_CHALLA_NO ,RECEIPT_CHALLA_DT 
	,ROW_ID
	FROM
	(
		SELECT C.AGENCY_NAME,A.PRODUCT_CODE ,'WIPJWI' AS [XN_TYPE],A.QUANTITY,B.ISSUE_DT AS [XN_DT]
		,B.ISSUE_ID,B.ISSUE_NO AS [XN_NO],5 AS [XN_ORDER],D.WIP_UID,0 AS VALUE_ADDITION
		,A.PREV_JOB_RATE AS [UNIT COST],A.JOB_CODE,B.AGENCY_CODE,'' AS RECEIPT_CHALLA_NO,NULL AS RECEIPT_CHALLA_DT
		,A.ROW_ID 
		FROM JOBWORK_ISSUE_DET A
		JOIN JOBWORK_ISSUE_MST  B ON B.ISSUE_ID=A.ISSUE_ID
		JOIN WIP_PMT D ON D.WIP_UID = A.WIP_UID  
		JOIN PRD_AGENCY_MST C ON C.AGENCY_CODE=B.AGENCY_CODE
		WHERE B.CANCELLED=0 AND B.WIP=1  AND (B.ISSUE_DT BETWEEN @CFROMDATE AND @CTODATE)
		AND A.PRODUCT_CODE = ISNULL(@CPRODUCT_CODE,A.PRODUCT_CODE)
		AND C.AGENCY_CODE = ISNULL(@CAGENCY,C.AGENCY_CODE)
		UNION ALL
		SELECT C.AGENCY_NAME,A.PRODUCT_CODE ,'WIPJWR' AS [XN_TYPE],A.QUANTITY,B.RECEIPT_DT AS [XN_DT],B.RECEIPT_ID AS XN_ID,B.RECEIPT_NO AS [XN_NO],5 AS [XN_ORDER],D.WIP_UID,A.JOB_RATE,
		A.PREV_JOB_RATE+A.JOB_RATE AS [UNIT COST],A.JOB_CODE, B.AGENCY_CODE,B.CHALLAN_NO,CHALLAN_DT 
		,A.REF_ROW_ID 
		FROM JOBWORK_RECEIPT_DET A
		JOIN JOBWORK_RECEIPT_MST  B ON B.RECEIPT_ID=A.RECEIPT_ID
		JOIN WIP_PMT D ON D.XN_ROW_ID = A.ROW_ID 
		JOIN PRD_AGENCY_MST C ON C.AGENCY_CODE=B.AGENCY_CODE
		WHERE B.CANCELLED=0 AND B.WIP=1  AND (B.RECEIPT_DT BETWEEN @CFROMDATE AND @CTODATE)
		AND A.PRODUCT_CODE = ISNULL(@CPRODUCT_CODE,A.PRODUCT_CODE)
		AND C.AGENCY_CODE = ISNULL(@CAGENCY,C.AGENCY_CODE)
	)X
		
	IF OBJECT_ID('TEMPDB..#TMP','U') IS NOT NULL 
	   DROP TABLE #TMP
	
		SELECT ISNULL(A.AGENCY_CODE,B.AGENCY_CODE) AS AGENCY_CODE
		  ,ISNULL(A.AGENCY_NAME,B.AGENCY_NAME) AS AGENCY_NAME
		  ,ART.ARTICLE_NO 
		  ,ART.ARTICLE_NAME
		  ,SKU.PRODUCT_CODE
		  ,CONVERT(NUMERIC(14,2),-ISNULL(SUM(B.QTY)/COUNT(B.AGENCY_CODE+B.PC),0)) AS 'OPS' 
	      ,CONVERT(NUMERIC(18,2),SUM(CASE WHEN A.XN_TYPE LIKE '%JWI' THEN QUANTITY ELSE 0 END)) AS 'WIPJWI' 
	,CONVERT(NUMERIC(18,2),SUM(CASE WHEN A.XN_TYPE LIKE '%JWR' THEN QUANTITY ELSE 0 END)) AS 'WIPJWR'
	,CONVERT(NUMERIC(18,2),(-ISNULL(SUM(B.QTY)/COUNT(B.AGENCY_CODE+B.PC),0)+SUM(CASE WHEN A.XN_TYPE LIKE '%JWI' THEN QUANTITY ELSE 0 END))-SUM(CASE WHEN A.XN_TYPE LIKE '%JWR' THEN QUANTITY ELSE 0 END)) AS [CLOSING_STOCK]
	INTO #TMP
	FROM @DTPENDINGJOBS	A
	FULL OUTER JOIN @DTTABLE1 B ON B.AGENCY_CODE=A.AGENCY_CODE AND B.PC=A.PRODUCT_CODE
	JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=ISNULL(A.PRODUCT_CODE,B.PC)
	JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =SKU.ARTICLE_CODE 
	GROUP BY ISNULL(A.AGENCY_CODE,B.AGENCY_CODE)
			,ISNULL(A.AGENCY_NAME,B.AGENCY_NAME),SKU.PRODUCT_CODE,ART.ARTICLE_NO,ART.ARTICLE_NAME
	HAVING @BIGNOREZEROBALANCE=0 OR (@BIGNOREZEROBALANCE=1 AND (ISNULL(SUM(B.QTY)/COUNT(B.AGENCY_CODE+B.PC),0)<>0 OR 
			SUM(CASE WHEN A.XN_TYPE LIKE '%JWI' THEN QUANTITY ELSE 0 END)<>0
	OR 	SUM(CASE WHEN A.XN_TYPE LIKE '%JWR' THEN QUANTITY ELSE 0 END)<>0
	OR 	ISNULL(SUM(B.QTY)/COUNT(B.AGENCY_CODE+B.PC),0)+SUM(CASE WHEN A.XN_TYPE LIKE '%JWI' THEN QUANTITY ELSE 0 END)-SUM(CASE WHEN A.XN_TYPE LIKE '%JWR' THEN QUANTITY ELSE 0 END)<>0))
		ORDER BY AGENCY_CODE,AGENCY_NAME,SKU.PRODUCT_CODE

	DECLARE @TABLE TABLE (AGENCY_CODE VARCHAR(100),AGENCY_NAME VARCHAR(100),ARTICLE_NO VARCHAR(100),ARTICLE_NAME VARCHAR(100),PRODUCT_CODE VARCHAR(100),OPS NUMERIC(18,2),
						  ISSUE_ID VARCHAR(50),ISSUE_NO VARCHAR(100),ISSUE_DT DATETIME, WIPJWI NUMERIC(18,0), RECEIPT_NO VARCHAR(100),WIPJWR NUMERIC(18,0) ,RECEIPT_DT DATETIME,
						  CLOSING_STOCK NUMERIC(18,2), RECEIPT_CHALLAN_NO VARCHAR(100), RECEIPT_CHALLAN_DT DATETIME,ISSUE_ROW_ID VARCHAR(100))


--INSERT OPENING STOCK
	--INSERT INTO @TABLE(AGENCY_CODE,AGENCY_NAME,ARTICLE_NO,ARTICLE_NAME,PRODUCT_CODE ,OPS,AUTOSR )
	--SELECT *,1 FROM #TMP WHERE OPS<>0

--INSERT OPENING STOCK RECEIVED	 
	 INSERT INTO @TABLE(AGENCY_CODE,AGENCY_NAME,ARTICLE_NO,ARTICLE_NAME,PRODUCT_CODE ,OPS,ISSUE_ID,ISSUE_NO ,WIPJWI , RECEIPT_NO ,
						WIPJWR ,RECEIPT_DT ,CLOSING_STOCK , RECEIPT_CHALLAN_NO , RECEIPT_CHALLAN_DT,ISSUE_ROW_ID   )	
	 
	 SELECT ISNULL(A.AGENCY_CODE,B.AGENCY_CODE) AS AGENCY_CODE
		  ,ISNULL(A.AGENCY_NAME,B.AGENCY_NAME) AS AGENCY_NAME,
		  ISNULL(A.ARTICLE_NO,B.ARTICLE_NO) AS ARTICLE_NO,
		  ISNULL(A.ARTICLE_NAME,B.ARTICLE_NAME) AS ARTICLE_NAME,
	       --B.ARTICLE_NO,B.ARTICLE_NAME,
	       A.PRODUCT_CODE,
	       OPS=CASE WHEN  ROW_NUMBER() OVER (PARTITION BY A.AGENCY_CODE,A.PRODUCT_CODE ORDER BY A.AGENCY_CODE,A.PRODUCT_CODE)=1 THEN A.OPS ELSE 0 END  ,
	       ISSUE_ID ='' ,ISSUE_NO ='' ,WIPJWI=0 ,XN_NO, QUANTITY  ,XN_DT ,
	       CLOSING_STOCK =0, RECEIPT_CHALLAN_NO , RECEIPT_CHALLAN_DT,'' 
	 FROM 
	( SELECT  *,1 AS SR FROM #TMP WHERE OPS<>0	) A		
	 LEFT JOIN
	(		
	 SELECT SR=1, AGENCY_CODE,AGENCY_NAME,ARTICLE_NO,ARTICLE_NAME,A.PRODUCT_CODE,OPS=0 ,
	 ISSUE_ID='',ISSUE_NO ='' ,WIPJWI=0 ,XN_NO, QUANTITY  ,XN_DT ,
	 CLOSING_STOCK =0, RECEIPT_CHALLAN_NO , RECEIPT_CHALLAN_DT
	 FROM @DTPENDINGJOBS A 
	 LEFT JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=ISNULL(A.PRODUCT_CODE,'')
	 LEFT JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =SKU.ARTICLE_CODE 
	 WHERE A.XN_TYPE='WIPJWR' AND ISSUE_ROW_ID NOT IN
	 (SELECT ISSUE_ROW_ID  FROM @DTPENDINGJOBS WHERE XN_TYPE ='WIPJWI')) B ON A.SR =B.SR 
	 AND A.PRODUCT_CODE=B.PRODUCT_CODE AND A.AGENCY_CODE=B.AGENCY_CODE
	 
--INSERT CURRENT TRANSACTION	 
	
	 INSERT INTO @TABLE(AGENCY_CODE,AGENCY_NAME,ARTICLE_NO,ARTICLE_NAME,PRODUCT_CODE ,OPS,ISSUE_ID,ISSUE_NO ,ISSUE_DT,WIPJWI , RECEIPT_NO ,
						WIPJWR ,RECEIPT_DT ,CLOSING_STOCK , RECEIPT_CHALLAN_NO , RECEIPT_CHALLAN_DT
						,ISSUE_ROW_ID   )	
	 SELECT A.AGENCY_CODE,A.AGENCY_NAME,ARTICLE_NO,ARTICLE_NAME,A.PRODUCT_CODE,OPS=0 ,
	 A.XN_ID,A.XN_NO,A.XN_DT ,A.QUANTITY  ,REC.XN_NO, REC.QUANTITY  ,REC.XN_DT ,
	 CLOSING_STOCK =0, REC.RECEIPT_CHALLAN_NO , REC.RECEIPT_CHALLAN_DT,A.ISSUE_ROW_ID  
	 FROM @DTPENDINGJOBS A 
	 LEFT JOIN 
	 (
		  SELECT A.XN_TYPE,A.XN_NO,A.XN_DT, RECEIPT_CHALLAN_NO,RECEIPT_CHALLAN_DT,ISSUE_ROW_ID,SUM(QUANTITY) AS QUANTITY 
		  FROM @DTPENDINGJOBS A WHERE A.XN_TYPE='WIPJWR'
		  GROUP BY A.XN_TYPE,A.XN_NO,RECEIPT_CHALLAN_NO,RECEIPT_CHALLAN_DT,ISSUE_ROW_ID,A.XN_DT
	 ) REC ON REC.ISSUE_ROW_ID=A.ISSUE_ROW_ID
	 JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=ISNULL(A.PRODUCT_CODE,'')
	 JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =SKU.ARTICLE_CODE 
	 WHERE A.XN_TYPE='WIPJWI'  
	
	IF OBJECT_ID('TEMPDB..#TMPTABLE','U') IS NOT NULL
	   DROP TABLE #TMPTABLE
	
	SELECT ROW_NUMBER() OVER(PARTITION BY A.PRODUCT_CODE,A.AGENCY_CODE,ISNULL(A.ISSUE_ID,'') 
			ORDER BY A.PRODUCT_CODE,ISNULL(A.ISSUE_ID,''),A.ISSUE_ROW_ID) AS SR,
	       AGENCY_CODE,AGENCY_NAME,ARTICLE_NO,ARTICLE_NAME,PRODUCT_CODE,OPS,ISSUE_ID,ISSUE_NO,ISSUE_DT,ISNULL(ISSUE_ROW_ID,'') AS ISSUE_ROW_ID,
	       CASE WHEN ROW_NUMBER () OVER(PARTITION BY A.PRODUCT_CODE,ISNULL(ISSUE_ID,''),ISNULL(ISSUE_ROW_ID,'') ORDER BY A.PRODUCT_CODE,ISNULL(A.ISSUE_ID,''))=1 THEN WIPJWI ELSE 0 END  AS WIPJWI , 
	       RECEIPT_NO ,
		   WIPJWR ,RECEIPT_DT ,CLOSING_STOCK , RECEIPT_CHALLAN_NO , RECEIPT_CHALLAN_DT
	INTO #TMPTABLE 
	FROM @TABLE A
	ORDER BY A.AGENCY_CODE,A.AGENCY_NAME,A.ISSUE_NO,A.PRODUCT_CODE 

DECLARE @SR INT, @PRODUCT_CODE VARCHAR(100),@ISSUE_ID VARCHAR(100),@CLOSTOCK NUMERIC(18,2),@CAGENCY_CODE VARCHAR(20)
DECLARE  CUR_JOBWORK CURSOR
FOR
SELECT A.SR,A.PRODUCT_CODE,ISNULL(A.ISSUE_ID,''),A.AGENCY_CODE FROM #TMPTABLE A
ORDER BY ISNULL(A.ISSUE_ID,''),A.AGENCY_CODE,A.PRODUCT_CODE,A.SR
OPEN CUR_JOBWORK
FETCH NEXT FROM CUR_JOBWORK INTO @SR,@PRODUCT_CODE,@ISSUE_ID,@CAGENCY_CODE
WHILE @@FETCH_STATUS =0
BEGIN
     
     IF @SR<>1
     UPDATE #TMPTABLE SET OPS=@CLOSTOCK WHERE SR=@SR AND PRODUCT_CODE =@PRODUCT_CODE AND ISNULL(ISSUE_ID,'') =@ISSUE_ID AND AGENCY_CODE=@CAGENCY_CODE

     SET @CLOSTOCK=(SELECT ISNULL(OPS,0)+ISNULL(WIPJWI,0)-ISNULL(WIPJWR,0) FROM #TMPTABLE 
					WHERE SR=@SR AND PRODUCT_CODE =@PRODUCT_CODE AND ISNULL(ISSUE_ID,'')=@ISSUE_ID AND AGENCY_CODE=@CAGENCY_CODE)   
     UPDATE #TMPTABLE SET CLOSING_STOCK=@CLOSTOCK WHERE SR=@SR AND PRODUCT_CODE =@PRODUCT_CODE AND ISNULL(ISSUE_ID,'') =@ISSUE_ID AND AGENCY_CODE=@CAGENCY_CODE 
FETCH NEXT FROM CUR_JOBWORK INTO @SR,@PRODUCT_CODE,@ISSUE_ID,@CAGENCY_CODE
END
CLOSE CUR_JOBWORK
DEALLOCATE CUR_JOBWORK

--SELECT A.AUTOSR, * FROM 
-- #TMPTABLE A 
--ORDER BY A.AGENCY_CODE,A.AGENCY_NAME,A.PRODUCT_CODE,ISSUE_NO 

  SELECT A.SR, A.AGENCY_CODE AS AGENCY_CODE,
         CASE WHEN A.SR>1 THEN '' ELSE A.AGENCY_NAME END AS AGENCY_NAME,
         CASE WHEN A.SR>1 THEN '' ELSE A.ARTICLE_NO END AS ARTICLE_NO,
         CASE WHEN A.SR>1 THEN '' ELSE A.ARTICLE_NAME END AS ARTICLE_NAME,
         CASE WHEN A.SR>1 THEN '' ELSE A.PRODUCT_CODE END AS PRODUCT_CODE,
         CASE WHEN A.SR>1 THEN 0 ELSE A.OPS END AS OPS,
         CASE WHEN A.SR>1 THEN '' ELSE A.ISSUE_NO END AS ISSUE_NO,
         A.WIPJWI AS WIPJWI,
         CASE WHEN A.SR>1 THEN  '' ELSE CONVERT (VARCHAR,A.ISSUE_DT,105) END AS  ISSUE_DT,
         RECEIPT_NO,
         WIPJWR , 
         CONVERT (VARCHAR,RECEIPT_DT,105) AS RECEIPT_DT,
         A.CLOSING_STOCK AS CLOSING_STOCK,
         RECEIPT_CHALLAN_NO, CONVERT (VARCHAR,RECEIPT_CHALLAN_DT,105)  AS  RECEIPT_CHALLAN_DT,
         ISSUE_ID
         
 FROM 
 #TMPTABLE A 
ORDER BY A.AGENCY_CODE,A.AGENCY_NAME,A.PRODUCT_CODE,A.ISSUE_ID,A.SR
   
END
--END OF PROCEDURE - SP_JOBWORKLEDGER_PRINT
