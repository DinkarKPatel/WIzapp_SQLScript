CREATE PROCEDURE SP_CMM_DISCOUNT
@CM_ID VARCHAR(100)
--WITH ENCRYPTION
AS
BEGIN
 BEGIN TRY
   BEGIN TRAN
   
        UPDATE CD SET CMM_DISCOUNT_AMOUNT = ROUND(((CM.DISCOUNT_AMOUNT*NET)/SUBTOTAL) ,3)
        FROM CMM01106 (NOLOCK) CM JOIN CMD01106 (NOLOCK) CD ON CM.CM_ID = CD.CM_ID 
        WHERE CM.DISCOUNT_AMOUNT >0 AND QUANTITY > 0 AND CM.CM_ID = @CM_ID
        
        UPDATE CD SET CMM_DISCOUNT_AMOUNT = ROUND(((CM.DISCOUNT_AMOUNT*NET)/SUBTOTAL_R) ,3)
        FROM CMM01106 (NOLOCK) CM JOIN CMD01106 (NOLOCK) CD ON CM.CM_ID = CD.CM_ID 
        WHERE CM.DISCOUNT_AMOUNT < 0 AND QUANTITY < 0 AND CM.CM_ID = @CM_ID
        
        IF OBJECT_ID ('#TEMP_TT','U') IS NOT NULL
              DROP TABLE #TEMP_TT

		SELECT DISTINCT TT.DIFF,TT.CM_ID,TT.ROW ,CMM_DISCOUNT_AMOUNT  
		, ROW_NUMBER() OVER(PARTITION BY RR.CM_ID  ORDER BY RR.CM_ID  ) AS ROW1  
		 INTO #TEMP_TT FROM CMD01106 AS RR JOIN (
		
		SELECT  ROUND(CM.DISCOUNT_AMOUNT,3)-ISNULL(SUM(CMM_DISCOUNT_AMOUNT),0) DIFF,CM.CM_ID,
		ROW_NUMBER() OVER(  ORDER BY CM.CM_ID  ) AS ROW 
		FROM CMM01106 CM JOIN CMD01106 CD ON CM.CM_ID = CD.CM_ID  
		WHERE CM.DISCOUNT_AMOUNT >0 AND QUANTITY > 0 
		AND CM.CM_ID = @CM_ID GROUP BY CM.DISCOUNT_AMOUNT,CM.CM_ID 
		HAVING ROUND(CM.DISCOUNT_AMOUNT,3)-ISNULL(SUM(CMM_DISCOUNT_AMOUNT),0) <> 0 
		
		)
		AS TT ON TT.CM_ID = RR.CM_ID 
		
		IF EXISTS (SELECT TOP 1 * FROM #TEMP_TT)
		BEGIN	
			ALTER TABLE #TEMP_TT ADD ROW_ID VARCHAR(100)
			UPDATE AA SET ROW_ID = CC.ROW_ID  FROM #TEMP_TT AA JOIN CMD01106 AS CC ON AA.CM_ID = CC.CM_ID 

			UPDATE BB SET CMM_DISCOUNT_AMOUNT = ISNULL(BB.CMM_DISCOUNT_AMOUNT,0) + ISNULL(TT.DIFF,0)
			FROM CMD01106 AS BB  JOIN #TEMP_TT AS TT ON BB.ROW_ID= TT.ROW_ID 
			WHERE ROW1=1
        END
        
   COMMIT
   --SELECT '' AS ERRMSG
 END TRY 
 BEGIN CATCH
 ROLLBACK
  SELECT ERROR_MESSAGE() AS ERRMSG
 END CATCH
END
