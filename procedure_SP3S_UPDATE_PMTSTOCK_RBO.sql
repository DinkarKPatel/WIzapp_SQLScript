create PROCEDURE SP3S_UPDATE_PMTSTOCK_RBO
@cMemoId VARCHAR(40),
@bREvertFlag BIT,
@BALLOWNEGSTOCK BIT,
@BNEGSTOCKFOUND BIT OUTPUT,
@cErrormsg VARCHAR(MAX) OUTPUT
AS
BEGIN
	DECLARE @cStep VARCHAR(5),@bNewEntry BIT

	set @CERRORMSG=''

	set @cStep='10'
	SET @bNewEntry=(CASE WHEN @bRevertFlag=1 THEN 0 ELSE 1 END)


BEGIN TRY
-- UPDATING STOCK OF PMT W.R.T. CURRENT MEMO
	SET @cStep = 178		-- UPDATING PMT TABLE

	IF EXISTS (SELECT TOP 1 'U' FROM WSL_ORDER_DET A (NOLOCK) 
	     JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE 
		 WHERE A.ORDER_ID=@CMEMOID AND A.GROSS_WSP <>B.MRP and a.REF_PRODUCT_CODE<>'')
	BEGIN
	     
		 UPDATE B SET MRP=A.GROSS_WSP
		 FROM WSL_ORDER_DET A (NOLOCK) 
	     JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE 
		 WHERE A.ORDER_ID=@CMEMOID AND A.GROSS_WSP <>B.MRP and a.REF_PRODUCT_CODE<>''

	END
	 
	 
	INSERT SKU (PRODUCT_CODE, ARTICLE_CODE, PARA1_CODE, PARA2_CODE, PARA3_CODE,PARA4_CODE, PARA5_CODE, PARA6_CODE
	,PURCHASE_PRICE, MRP, LAST_UPDATE,INV_NO,INV_DT, RECEIPT_DT, AC_CODE
	,FORM_ID
	,WS_PRICE,BARCODE_CODING_SCHEME,PRODUCT_NAME,HSN_CODE )    
	SELECT a.PRODUCT_CODE, a.ARTICLE_CODE, a.PARA1_CODE, a.PARA2_CODE, a.PARA3_CODE,a.PARA4_CODE, a.PARA5_CODE, 
	a.PARA6_CODE,c.PURCHASE_PRICE, a.ws_price  MRP,GETDATE () as LAST_UPDATE,'' as INV_NO,'' as INV_DT,'' as  RECEIPT_DT,
	b.AC_CODE,'0000000' as FORM_ID,c.wholesale_price as WS_PRICE,c.CODING_SCHEME,C.ARTICLE_NAME  as PRODUCT_NAME,
	a.HSN_CODE
	FROM WSL_ORDER_DET  A (NOLOCK)   
	JOIN WSL_ORDER_mst B (NOLOCK) ON A.order_id = B.order_id    
	join article c (nolock) on c.article_code =a.article_code 
    LEFT JOIN SKU  (NOLOCK) ON sku.PRODUCT_CODE =A.PRODUCT_CODE 
	WHERE B.order_id  = @cMemoId  AND ISNULL(A.PRODUCT_CODE,'')<>''  
	and sku.product_code is null

	 INSERT PMT01106	( BIN_ID, DEPT_ID, DEPT_ID_NOT_STUFFED, last_update, product_code, quantity_in_stock, rep_id, STOCK_RECO_QUANTITY_IN_STOCK )  
	 SELECT distinct 	  a.BIN_ID, a.DEPT_ID,'' as  DEPT_ID_NOT_STUFFED, getdate() as last_update,a.product_code  product_code,0 quantity_in_stock,'' rep_id,0 STOCK_RECO_QUANTITY_IN_STOCK 
	 FROM #BARCODE_NETQTY a
	 left join pmt01106 b on a.product_code=b.product_code and a.dept_id=b.DEPT_ID and a.bin_id=b.bin_id 
	 WHERE new_entry=@bNewEntry and  b.product_code is null


	--UPDATING STOCK IN PMT01106
	UPDATE A
	SET QUANTITY_IN_STOCK=QUANTITY_IN_STOCK-XN_QTY
	FROM PMT01106 A WITH (ROWLOCK)
	JOIN #BARCODE_NETQTY B ON A.product_code=B.product_code AND A.DEPT_ID=B.DEPT_ID AND A.BIN_ID=B.BIN_ID
	WHERE new_entry=@bNewEntry

	SET @cStep = 184
	

	IF @BALLOWNEGSTOCK=0
	BEGIN
		IF EXISTS(SELECT TOP 1 'U' FROM PMT01106 A (NOLOCK) JOIN #BARCODE_NETQTY B ON A.product_code=B.product_code
					AND A.DEPT_ID=B.DEPT_ID AND A.BIN_ID=B.BIN_ID 
					WHERE  A.quantity_in_stock<0)
		BEGIN	
			SET @cStep = 186
					  
			SELECT A.PRODUCT_CODE,A.QUANTITY_IN_STOCK,'STOCK is GOING NEGATIVE' AS ERRMSG
			FROM PMT01106 A WITH (NOLOCK)
			JOIN #BARCODE_NETQTY B ON A.product_code=B.product_code 
			AND A.DEPT_ID=B.DEPT_ID AND A.BIN_ID=B.BIN_ID 
			WHERE  A.quantity_in_stock<0 
					  
			SET @BNEGSTOCKFOUND=1
			SET @cErrormsg='Stock going negative'
		END
	END

	GOTO END_PROC
END TRY

BEGIN CATCH	
	SET @cErrormsg='Error in SP3S_UPDATE_PMTSTOCK_RBO at Step#'+@cStep +' '+ERROR_MESSAGE()
	GOTO END_PROC
END CATCH

END_PROC:
END
