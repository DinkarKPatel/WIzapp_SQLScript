create PROCEDURE SP_GETPENDINGS_RETAIL_ORDERS  
(  
  @CMEMO_TYPE  NUMERIC(5)=0,  
  @CCUSTCODE   VARCHAR(50)='',  
  @CDEPT_ID   VARCHAR(5)='',  
  @CUSERCODE   VARCHAR(10)='',  
  @CBINID   VARCHAR(7)='000' ,
  @cOrderID		VARCHAR(50)=''
 )  
 AS  
 BEGIN  
 --(dinkar) Replace  left(memoid,2) to Location_code 
	 ;WITH ADJUSTED  
	 AS  
	 ( 
	  SELECT C.PRODUCT_CODE ,C.REF_PRODUCT_CODE  ,A.QUANTITY AS ADJ_QTY  
	  FROM CMD01106 A (NOLOCK)  
	  JOIN CMM01106 B (NOLOCK) ON B.CM_ID=A.CM_ID  
	  JOIN WSL_ORDER_DET C (NOLOCK) ON A.PRODUCT_CODE =C.PRODUCT_CODE   
	  JOIN WSL_ORDER_MST D (NOLOCK) ON C.ORDER_ID =D.ORDER_ID   
	  WHERE  B.CANCELLED=0 AND D.CANCELLED =0  
	  AND (@CCUSTCODE='' OR  B.CUSTOMER_CODE=@CCUSTCODE)  
	  AND (@CORDERID='' OR @CORDERID=D.ORDER_ID)
	  AND ISNULL(C.REF_PRODUCT_CODE,'') =''
	  Union 
	  SELECT C.PRODUCT_CODE ,C.REF_PRODUCT_CODE ,A.QUANTITY AS ADJ_QTY  
	  FROM CMD01106 A (NOLOCK)  
	  JOIN CMM01106 B (NOLOCK) ON B.CM_ID=A.CM_ID  
	  JOIN WSL_ORDER_DET C (NOLOCK) ON A.PRODUCT_CODE =C.REF_PRODUCT_CODE  and a.RBO_product_code =c.product_code 
	  JOIN WSL_ORDER_MST D (NOLOCK) ON C.ORDER_ID =D.ORDER_ID   
	  WHERE  B.CANCELLED=0 AND D.CANCELLED =0  
	  AND (@CCUSTCODE='' OR  B.CUSTOMER_CODE=@CCUSTCODE)  
	  AND (@CORDERID='' OR @CORDERID=D.ORDER_ID)
	  AND ISNULL(C.REF_PRODUCT_CODE,'') <>''
	  
	  )
	  
	 ,Pending_ORDERS  
	 AS  
	 (    
		SELECT C.CUSTOMER_CODE AS CUSTOMER_CODE1,  
			  (case when isnull(A.ref_Product_code, '') = '' then A.product_code else A.ref_product_code end) As product_code1,  
			  B.REF_NO,order_dt,order_no,B.sale_emp_code mst_emp_code,A.*,  
			  ISNULL(C.CUSTOMER_FNAME,'')+' '+ISNULL(C.customer_lname,'') AS Customer_Name ,C.user_customer_code,B.trail_dt,B.DELIVERY_DT ,
			  a.product_code RBO_product_code 
	  FROM WSL_ORDER_DET A(NOLOCK)  
	  JOIN WSL_ORDER_MST B(NOLOCK) ON A.ORDER_ID = B.ORDER_ID  
	  JOIN CUSTDYM C(NOLOCK) ON B.CUSTOMER_CODE = C.CUSTOMER_CODE  
	  Left join ADJUSTED ADJ ON ADJ.PRODUCT_CODE =A.PRODUCT_CODE 
	  WHERE B.CANCELLED = 0 and isnull(A.cancelled,0)= 0  
	  AND (@CCUSTCODE='' OR  B.CUSTOMER_CODE=@CCUSTCODE)   
	  AND (@cOrderID='' OR @cOrderID=B.order_id) 
	  AND ADJ.PRODUCT_CODE IS NULL
	 )
	 
		   
	 SELECT CONVERT(BIT,0) AS CHKITEM,A.ORDER_ID AS MEMO_ID,D.PRODUCT_CODE,A.QUANTITY AS [TOTAL_QTY],    
	 CONVERT(NUMERIC(14,2),0) AS [RET_QTY],  
	 A.QUANTITY AS BALANCE_QUANTITY,        
	 A.gross_wsp  MRP,D.MRP AS TEMPMRP,CONVERT(NUMERIC(14,2),((A.ws_price/A.QUANTITY)*(A.QUANTITY))) AS [NET],
	 A.order_no  MEMO_NO,A.order_dt MEMO_DT,        
	 A.ROW_ID,A.EMP_CODE,A.RFNET,E.ARTICLE_NO,             
	 F.PARA1_CODE,F.PARA1_NAME , G.PARA2_CODE , G.PARA2_NAME,H.SUB_SECTION_NAME, I.SECTION_NAME,        
	 J.DT_CREATED AS PARA3_DT_CREATED,J.PARA3_NAME,  D.FIX_MRP,D.PRODUCT_NAME,      
	 P4.PARA4_NAME,P5.PARA5_NAME,P6.PARA6_NAME,UOM.UOM_TYPE       
	 ,A.EMP_CODE,A.ROW_ID AS APD_ROW_ID        
	 ,EMP.EMP_NAME,UOM.UOM_NAME,CONVERT(BIT,0) AS FREEZED,  
	 A.DISCOUNT_PERCENTAGE,CONVERT(NUMERIC(14,2),((A.DISCOUNT_AMOUNT)*(A.QUANTITY))) AS [DISCOUNT_AMOUNT]  
	 ,A.Customer_Name,A.user_customer_code,A.trail_dt,A.DELIVERY_DT,A.Ref_no,A.CUSTOMER_CODE1 AS CUSTOMER_CODE ,D.article_code ,a.RBO_product_code
	 FROM Pending_ORDERS A  
	 JOIN SKU D (NOLOCK) ON A.PRODUCT_CODE1 = D.PRODUCT_CODE        
	 JOIN ARTICLE E (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE             
	 JOIN PARA1 F (NOLOCK) ON D.PARA1_CODE = F.PARA1_CODE             
	 JOIN PARA2 G (NOLOCK) ON D.PARA2_CODE = G.PARA2_CODE             
	 JOIN SECTIOND H (NOLOCK) ON E.SUB_SECTION_CODE = H.SUB_SECTION_CODE             
	 JOIN SECTIONM I (NOLOCK) ON H.SECTION_CODE = I.SECTION_CODE           
	 JOIN PARA3 J (NOLOCK) ON D.PARA3_CODE = J.PARA3_CODE       
	 JOIN PARA4 P4 (NOLOCK) ON P4.PARA4_CODE = D.PARA4_CODE       
	 JOIN PARA5 P5 (NOLOCK) ON P5.PARA5_CODE = D.PARA5_CODE       
	 JOIN PARA6 P6 (NOLOCK) ON P6.PARA6_CODE = D.PARA6_CODE       
	 JOIN UOM (NOLOCK) ON E.UOM_CODE = UOM.UOM_CODE       
	 LEFT OUTER JOIN EMPLOYEE EMP  (NOLOCK) ON A.MST_EMP_CODE = EMP.EMP_CODE    
	
	 
 
 /*
 ;WITH ADJUSTED  
 AS  
 (  
	  SELECT a.ref_order_id,a.RBO_product_code, a.PRODUCT_CODE PRODUCT_CODE ,SUM(a.QUANTITY) AS ADJ_QTY  
	  FROM CMD01106 A (NOLOCK)  
	  JOIN CMM01106 B (NOLOCK) ON B.CM_ID=A.CM_ID  
	  join WSL_ORDER_DET c (nolock) on isnull(a.RBO_product_code,a.PRODUCT_CODE) =c.product_code   
	  join WSL_ORDER_MST d (nolock) on c.order_id =d.order_id   
	  WHERE  B.CANCELLED=0 and d.CANCELLED =0  
	  AND (@CCUSTCODE='' OR (@CMEMO_TYPE=1 AND b.CUSTOMER_CODE=@CCUSTCODE)  
	  OR (@CMEMO_TYPE=2 AND b.AC_CODE=@CCUSTCODE)) 
	  AND (@cOrderID='' OR @cOrderID=d.order_id)
	  GROUP BY a.ref_order_id,a.RBO_product_code, a.PRODUCT_CODE 
	  HAVING SUM(a.QUANTITY) >0  
 )  
 ,ALL_ORDERS  
 AS  
 (  
  SELECT(CASE WHEN B.CUSTOMER_CODE = '000000000000' THEN B.AC_CODE ELSE C.CUSTOMER_CODE END) AS CUSTOMER_CODE1,  
  (case when isnull(A.ref_Product_code, '') = '' then A.product_code else A.ref_product_code end) As product_code1,  
  B.REF_NO,order_dt,order_no,B.sale_emp_code mst_emp_code,A.*,  
  ISNULL(C.CUSTOMER_FNAME,'')+' '+ISNULL(C.customer_lname,'') AS Customer_Name ,C.user_customer_code,B.trail_dt,B.DELIVERY_DT ,
  a.product_code RBO_product_code
  --CUSTOMER_NAME, USER_CUSTOMER_CODE, Ref_No,memo_no, memo_dt, TOTAL_Qty, NET Amount, DELIVERY_DT, Trail_dt  
  FROM WSL_ORDER_DET A(NOLOCK)  
  JOIN WSL_ORDER_MST B(NOLOCK) ON A.ORDER_ID = B.ORDER_ID  
  LEFT OUTER JOIN CUSTDYM C(NOLOCK) ON B.CUSTOMER_CODE = C.CUSTOMER_CODE  
  LEFT OUTER JOIN LM01106 D(NOLOCK) ON B.AC_CODE = D.AC_CODE  
  WHERE B.CANCELLED = 0 and isnull(A.cancelled,0)= 0  
  AND (@CCUSTCODE='' OR (@CMEMO_TYPE=1 AND B.CUSTOMER_CODE=@CCUSTCODE)  
  OR (@CMEMO_TYPE=2 AND B.AC_CODE=@CCUSTCODE ))  
  AND (@cOrderID='' OR @cOrderID=B.order_id)
 )   
  
   
 SELECT CONVERT(BIT,0) AS CHKITEM,A.ORDER_ID AS MEMO_ID,D.PRODUCT_CODE,A.QUANTITY AS [TOTAL_QTY],    
 CONVERT(NUMERIC(14,2),0) AS [RET_QTY],  
 A.QUANTITY-ISNULL(B.ADJ_QTY,0) AS BALANCE_QUANTITY,        
 A.gross_wsp  MRP,D.MRP AS TEMPMRP,CONVERT(NUMERIC(14,2),((A.ws_price/A.QUANTITY)*(A.QUANTITY-ISNULL(B.ADJ_QTY,0)))) AS [NET],
 --as discuss with sir Rate discount & new always pick retail buyer order(06072023)
 A.order_no  MEMO_NO,A.order_dt MEMO_DT,        
 A.ROW_ID,A.EMP_CODE,A.RFNET,E.ARTICLE_NO,             
 F.PARA1_CODE,F.PARA1_NAME , G.PARA2_CODE , G.PARA2_NAME,H.SUB_SECTION_NAME, I.SECTION_NAME,        
 J.DT_CREATED AS PARA3_DT_CREATED,J.PARA3_NAME,  D.FIX_MRP,D.PRODUCT_NAME,      
 P4.PARA4_NAME,P5.PARA5_NAME,P6.PARA6_NAME,UOM.UOM_TYPE       
 ,A.EMP_CODE,A.ROW_ID AS APD_ROW_ID        
 ,EMP.EMP_NAME,UOM.UOM_NAME,CONVERT(BIT,0) AS FREEZED,  
 A.DISCOUNT_PERCENTAGE,CONVERT(NUMERIC(14,2),((A.DISCOUNT_AMOUNT/A.QUANTITY)*(A.QUANTITY-ISNULL(B.ADJ_QTY,0)))) AS [DISCOUNT_AMOUNT]  
 ,A.Customer_Name,A.user_customer_code,A.trail_dt,A.DELIVERY_DT,A.Ref_no,A.CUSTOMER_CODE1 AS CUSTOMER_CODE ,D.article_code ,a.RBO_product_code
 FROM ALL_ORDERS A  
 LEFT OUTER JOIN ADJUSTED B ON  A.product_code1=B.PRODUCT_CODE and 
                                A.PRODUCT_CODE=isnull(NULLIF(B.RBO_product_code,''),A.PRODUCT_CODE)
                                --(CASE WHEN ISNULL(B.RBO_product_code,'')='' THEN A.PRODUCT_CODE ELSE B.RBO_product_code END)
 JOIN SKU D (NOLOCK) ON A.PRODUCT_CODE1 = D.PRODUCT_CODE        
 JOIN ARTICLE E (NOLOCK) ON D.ARTICLE_CODE = E.ARTICLE_CODE             
 JOIN PARA1 F (NOLOCK) ON D.PARA1_CODE = F.PARA1_CODE             
 JOIN PARA2 G (NOLOCK) ON D.PARA2_CODE = G.PARA2_CODE             
 JOIN SECTIOND H (NOLOCK) ON E.SUB_SECTION_CODE = H.SUB_SECTION_CODE             
 JOIN SECTIONM I (NOLOCK) ON H.SECTION_CODE = I.SECTION_CODE           
 JOIN PARA3 J (NOLOCK) ON D.PARA3_CODE = J.PARA3_CODE       
 JOIN PARA4 P4 (NOLOCK) ON P4.PARA4_CODE = D.PARA4_CODE       
 JOIN PARA5 P5 (NOLOCK) ON P5.PARA5_CODE = D.PARA5_CODE       
 JOIN PARA6 P6 (NOLOCK) ON P6.PARA6_CODE = D.PARA6_CODE       
 JOIN UOM (NOLOCK) ON E.UOM_CODE = UOM.UOM_CODE       
 LEFT OUTER JOIN EMPLOYEE EMP  (NOLOCK) ON A.EMP_CODE = EMP.EMP_CODE    
 WHERE B.REF_ORDER_ID IS NULL OR (A.QUANTITY-ISNULL(B.ADJ_QTY,0))>0  
 */
 
END