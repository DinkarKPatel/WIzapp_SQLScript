create PROCEDURE SP_MERGEMSTSCHDATA  
(  
 @NSPID INT  
)  
--WITH ENCRYPTION
AS  
BEGIN  
   
   --(dinkar) Replace  left(memoid,2) to Location_code 
 BEGIN TRY  
    
  DECLARE @CERRORMSG VARCHAR(1000),@CCURDEPTID CHAR(4),@CHODEPTID CHAR(4),@CCMD NVARCHAR(MAX),  
    @CXNMASTERTABLENAME VARCHAR(100),@BPROCEED BIT,@CTABLENAME VARCHAR(100),@CMASTERKEYFIELD VARCHAR(100),  
    @CKEYFIELD VARCHAR(100),@CPARENTTABLENAME VARCHAR(100),@CPARENTPARANAME VARCHAR(100),@CCHILDPARANAME VARCHAR(100),  
    @CWHERECLAUSE VARCHAR(100),@CJOINSTR VARCHAR(1000),@CMEMOID VARCHAR(100),@CFINYEAR VARCHAR(100),  
    @NGRPCHARS INT,@NSERIESCHARS INT,@BSERIESBROKEN BIT,@CPREVMEMOID VARCHAR(40),@CMERGETABLENAME VARCHAR(50),  
    @CFIRSTMEMOID VARCHAR(40),@NPREVMEMOID INT,@NMEMONOLEN INT,@CRETCMD NVARCHAR(MAX),  
    @CDELCHILDTABLENAME VARCHAR(100),@CDELCHILDPARANAME VARCHAR(100),@CDELPARENTPARANAME VARCHAR(100),  
    @CORIGINALTABLENAME VARCHAR(100),@NLOCTYPE INT,@BDONOTMERGE BIT,@CRFXNTYPE VARCHAR(10),  
    @BINSERTONLY BIT,@BLINKEDMASTER BIT,@BPURLOC BIT,@CSOURCELOCID CHAR(2),@BSOURCEPURLOC BIT,  
    @CMISSINGMEMOID VARCHAR(40),@CGRPCODE VARCHAR(20),@BRETVAL BIT,@NPREVNO INT,@CPREVNO VARCHAR(20),  
    @BEMPHEADSUPDATED BIT,@CFILTERCONDITION VARCHAR(100),@CTABLEPREFIX VARCHAR(100),@CXNTYPE VARCHAR(10),  
    @NXNSMERGINGORDER INT,@NSTEP INT,@CBUNDLEMTABLENAME VARCHAR(100),@CBUNDLEDTABLENAME VARCHAR(100),  
    @CSLSMSTTABLENAME VARCHAR(100),@CSLSDETTABLENAME VARCHAR(100),@CLOCSLSSETTABLENAME VARCHAR(100),  
    @CSCHEMEDETTABLENAME VARCHAR(100),@CSCHEMEHHTABLENAME VARCHAR(100),@CSLSBCTABLENAME VARCHAR(100),  
    @CSLSARTTABLENAME VARCHAR(100),@NXNSSENDINGORDER INT,@CSLSMEMONO VARCHAR(20)  
    
    
  SET @NSTEP=10  
    
  DECLARE @TRETMSG TABLE  (MEMO_ID VARCHAR(40),ERRMSG VARCHAR(MAX))  
  
  BEGIN TRANSACTION  
     
  SELECT @CERRORMSG='',@BPROCEED=1,@NMEMONOLEN=10,@CRETCMD='',@CMEMOID='',@CXNTYPE='MSTSCH',@BEMPHEADSUPDATED=0  
    
  SET @CTABLEPREFIX='TMP_MSTSCH'  
    
  SET @NSTEP=20  
    
  SET @CFILTERCONDITION=''  
     
  SELECT TOP 1 @CCURDEPTID = VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='LOCATION_ID'  
  SELECT TOP 1 @CHODEPTID = VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='HO_LOCATION_ID'  
      
  SELECT @NLOCTYPE=LOC_TYPE,@BPURLOC=PUR_LOC FROM LOCATION (NOLOCK) WHERE DEPT_ID=@CCURDEPTID  
    
    
  SET @CMEMOID='MSTSCH'  
    
 LBLMERGEBEFORE:  
    
     
  SET @NSTEP=30    
    
  SET @CTABLENAME='TMP_MSTSCH_LOCSLSSET_' + LTRIM(RTRIM(STR(@NSPID)))  
     
  SET @CCMD=N'IF OBJECT_ID('''+@CTABLENAME+''',''U'') IS NOT NULL  
      SET @BPROCEEDOUT=1    
     ELSE  
      SET @BPROCEEDOUT=0'  
  PRINT @CCMD      
  EXEC SP_EXECUTESQL @CCMD,N'@BPROCEEDOUT BIT OUTPUT',@BPROCEEDOUT=@BPROCEED OUTPUT  
          
  IF @BPROCEED=0  
  BEGIN  
   SET @CERRORMSG='LOCATION WISE SALES SETUP DETAIL TABLE NOT FOUND.....PLEASE GET SALES SETUP RESENT FROM HO'  
   GOTO LBLLAST  
  END  
    
  SET @NSTEP=35  
       
  SET @CCMD=N'IF NOT EXISTS (SELECT TOP 1 DEPT_ID FROM TMP_MSTSCH_LOCSLSSET_'+LTRIM(RTRIM(STR(@NSPID)))+')  
      SET @BPROCEEDOUT=0    
     ELSE  
      SET @BPROCEEDOUT=1'  
  PRINT @CCMD      
  EXEC SP_EXECUTESQL @CCMD,N'@BPROCEEDOUT BIT OUTPUT',@BPROCEEDOUT=@BPROCEED OUTPUT  
  IF @BPROCEED=1  
  BEGIN  
     
   SET @NSTEP=40  
     
   SELECT @CBUNDLEMTABLENAME='TMP_MSTSCH_BUNDLEM_' + LTRIM(RTRIM(STR(@NSPID))),  
       @CBUNDLEDTABLENAME='TMP_MSTSCH_BUNDLED_' + LTRIM(RTRIM(STR(@NSPID))),  
       @CSLSMSTTABLENAME='TMP_MSTSCH_SLSMST_' + LTRIM(RTRIM(STR(@NSPID))),  
       @CSLSDETTABLENAME='TMP_MSTSCH_SLSDET_' + LTRIM(RTRIM(STR(@NSPID))),  
       @CLOCSLSSETTABLENAME='TMP_MSTSCH_LOCSLSSET_' + LTRIM(RTRIM(STR(@NSPID))),  
       @CSCHEMEDETTABLENAME='TMP_MSTSCH_SCHEME_DET_' + LTRIM(RTRIM(STR(@NSPID))),  
       @CSCHEMEHHTABLENAME='TMP_MSTSCH_SCHEME_HH_' + LTRIM(RTRIM(STR(@NSPID))),  
       @CSLSBCTABLENAME='TMP_MSTSCH_SLSBC_' + LTRIM(RTRIM(STR(@NSPID))),  
       @CSLSARTTABLENAME='TMP_MSTSCH_SLSART_' + LTRIM(RTRIM(STR(@NSPID)))   
     
   SET @NSTEP=50      
     
     
   SET @CCMD=N'SELECT TOP 1 @CSLSMEMONOOUT= A.SLS_MEMO_NO FROM '+@CSLSMSTTABLENAME+' A  
      JOIN SLSMST B ON A.SLS_MEMO_NO=B.SLS_MEMO_NO  
      WHERE CONVERT(DATETIME,A.LAST_UPDATE)<B.LAST_UPDATE'   
   EXEC SP_EXECUTESQL @CCMD,N'@CSLSMEMONOOUT VARCHAR(20) OUTPUT',@CSLSMEMONOOUT=@CSLSMEMONO OUTPUT  
     
     
   IF ISNULL(@CSLSMEMONO,'')<>''  
   BEGIN  
    SET @CERRORMSG='OLDER VERSION OF SALES SETUP MEMO NO. :'+@CSLSMEMONO+' FOUND IN THE SOURCE FILE.....PLEASE CHECK'  
    GOTO LBLLAST  
   END  
     
      
   SET @CCMD=N'IF OBJECT_ID('''+@CSLSMSTTABLENAME+''',''U'') IS NOT NULL  
       DELETE FROM '+@CSLSMSTTABLENAME+'   
       WHERE SLS_MEMO_NO NOT IN (SELECT SLS_MEMO_NO FROM '+@CLOCSLSSETTABLENAME+'  
               WHERE DEPT_ID='''+@CCURDEPTID+''')'   
   PRINT @CCMD     
   EXEC SP_EXECUTESQL @CCMD  
     
   SET @NSTEP=55      
     
   SET @CCMD=N'IF OBJECT_ID('''+@CBUNDLEDTABLENAME+''',''U'') IS NOT NULL AND  
         OBJECT_ID('''+@CSLSDETTABLENAME+''',''U'') IS NOT NULL   
       DELETE FROM '+@CBUNDLEDTABLENAME+' WHERE BUNDLE_ID NOT IN (  
       SELECT SCHEME_ID FROM '+@CSLSDETTABLENAME+' A   
       JOIN '+@CLOCSLSSETTABLENAME+' B ON A.SLS_MEMO_NO=B.SLS_MEMO_NO  
       JOIN '+@CSLSMSTTABLENAME+' C ON A.SLS_MEMO_NO=C.SLS_MEMO_NO  
       WHERE B.DEPT_ID='''+@CCURDEPTID+''')'  
   PRINT @CCMD     
   EXEC SP_EXECUTESQL @CCMD  
     
   SET @NSTEP=60  
     
   SET @CCMD=N'IF OBJECT_ID('''+@CBUNDLEMTABLENAME+''',''U'') IS NOT NULL AND  
         OBJECT_ID('''+@CSLSDETTABLENAME+''',''U'') IS NOT NULL    
       DELETE FROM '+@CBUNDLEMTABLENAME+' WHERE BUNDLE_ID NOT IN (  
       SELECT SCHEME_ID FROM '+@CSLSDETTABLENAME+' A  
       JOIN '+@CLOCSLSSETTABLENAME+' B ON A.SLS_MEMO_NO=B.SLS_MEMO_NO  
       JOIN '+@CSLSMSTTABLENAME+' C ON A.SLS_MEMO_NO=C.SLS_MEMO_NO  
       WHERE B.DEPT_ID='''+@CCURDEPTID+''')'  
   PRINT @CCMD     
   EXEC SP_EXECUTESQL @CCMD     
     
   SET @NSTEP=70  
     
   SET @CCMD=N'IF OBJECT_ID('''+@CSCHEMEDETTABLENAME+''',''U'') IS NOT NULL AND  
         OBJECT_ID('''+@CSLSDETTABLENAME+''',''U'') IS NOT NULL   
       DELETE FROM '+@CSCHEMEDETTABLENAME+' WHERE SLSDET_ROW_ID NOT IN (  
       SELECT A.ROW_ID FROM '+@CSLSDETTABLENAME+' A  
       JOIN '+@CLOCSLSSETTABLENAME+' B ON A.SLS_MEMO_NO=B.SLS_MEMO_NO  
       JOIN '+@CSLSMSTTABLENAME+' C ON A.SLS_MEMO_NO=C.SLS_MEMO_NO  
       WHERE B.DEPT_ID='''+@CCURDEPTID+''')'  
   PRINT @CCMD  
   EXEC SP_EXECUTESQL @CCMD  
     
   SET @NSTEP=80  
     
   SET @CTABLENAME='TMP_MSTSCH_SCHEME_HH_'+ LTRIM(RTRIM(STR(@NSPID)))  
     
   SET @CCMD=N'IF OBJECT_ID('''+@CSCHEMEHHTABLENAME+''',''U'') IS NOT NULL AND  
         OBJECT_ID('''+@CSLSDETTABLENAME+''',''U'') IS NOT NULL    
       DELETE FROM '+@CSCHEMEHHTABLENAME+' WHERE SLSDET_ROW_ID NOT IN (  
       SELECT A.ROW_ID FROM '+@CSLSDETTABLENAME+' A  
       JOIN '+@CLOCSLSSETTABLENAME+' B ON A.SLS_MEMO_NO=B.SLS_MEMO_NO  
       JOIN '+@CSLSMSTTABLENAME+' C ON A.SLS_MEMO_NO=C.SLS_MEMO_NO  
       WHERE B.DEPT_ID='''+@CCURDEPTID+''')'  
   PRINT @CCMD  
   EXEC SP_EXECUTESQL @CCMD  
     
   SET @NSTEP=90  
     
   SET @CCMD=N'IF OBJECT_ID('''+@CSLSBCTABLENAME+''',''U'') IS NOT NULL   
       DELETE FROM '+@CSLSBCTABLENAME+' WHERE SLS_MEMO_NO NOT IN (  
       SELECT A.SLS_MEMO_NO FROM  '+@CLOCSLSSETTABLENAME+' A  
       JOIN '+@CSLSMSTTABLENAME+' B ON A.SLS_MEMO_NO=B.SLS_MEMO_NO  
       WHERE A.DEPT_ID='''+@CCURDEPTID+''')'  
   PRINT @CCMD     
   EXEC SP_EXECUTESQL @CCMD  
     
   SET @NSTEP=100  
     
   SET @CCMD=N'IF OBJECT_ID('''+@CSLSARTTABLENAME+''',''U'') IS NOT NULL   
       DELETE FROM '+@CSLSARTTABLENAME+' WHERE SLS_MEMO_NO NOT IN (  
       SELECT A.SLS_MEMO_NO FROM '+@CLOCSLSSETTABLENAME+' A  
       JOIN '+@CSLSMSTTABLENAME+' B ON A.SLS_MEMO_NO=B.SLS_MEMO_NO  
       WHERE A.DEPT_ID='''+@CCURDEPTID+''')'  
   PRINT @CCMD     
   EXEC SP_EXECUTESQL @CCMD  
     
   SET @NSTEP=110  
     
   SET @CCMD=N'IF OBJECT_ID('''+@CSLSDETTABLENAME+''',''U'') IS NOT NULL   
       DELETE FROM '+@CSLSDETTABLENAME+' WHERE SLS_MEMO_NO NOT IN (  
       SELECT A.SLS_MEMO_NO FROM '+@CLOCSLSSETTABLENAME+' A  
       JOIN '+@CSLSMSTTABLENAME+' B ON A.SLS_MEMO_NO=B.SLS_MEMO_NO  
       WHERE A.DEPT_ID='''+@CCURDEPTID+''')'  
   PRINT @CCMD     
   EXEC SP_EXECUTESQL @CCMD  
     
   SET @NSTEP=120  
     
  END  
  ELSE  
  BEGIN  
   SET @NSTEP=130  
     
   SET @CERRORMSG='NO NEW SALES SETUP DATA FOUND.....'  
   GOTO LBLLAST  
  END  
    
 LBLDELETE:  
    
  SET @NSTEP=140  
  

  IF CURSOR_STATUS('GLOBAL','DELCUR') IN (0,1)  
  BEGIN  
	 CLOSE DELCUR  
	 DEALLOCATE DELCUR
  END      
  
  
 
  
  DELETE FROM REP_DET WHERE REP_ID IN (SELECT REP_ID FROM REP_MST WHERE REP_CODE='SSU01')
  DELETE FROM REP_FILTER WHERE REP_ID IN (SELECT REP_ID FROM REP_MST WHERE REP_CODE='SSU01')
  DELETE FROM REP_FILTER_DET WHERE REP_ID IN (SELECT REP_ID FROM REP_MST WHERE REP_CODE='SSU01')
  DELETE FROM REP_MST WHERE REP_CODE='SSU01'

  --- FIRSTLY, DELETE OLDER ENTRIES FROM THE TRANSACTIONS  
  DECLARE DELCUR CURSOR FOR   
  SELECT DISTINCT TABLENAME, KEYFIELD,XNS_SENDING_ORDER FROM XNSINFO (NOLOCK)   
  WHERE XN_TYPE = @CXNTYPE AND LINKED_MASTER=0 AND TABLENAME<>'CONFIG'
  AND LEFT(TABLENAME,4)<>'REP_' 
  AND TABLENAME<>'LOCATION'
  ORDER BY XNS_SENDING_ORDER DESC  
    
  OPEN DELCUR  
  FETCH NEXT FROM DELCUR INTO @CTABLENAME,@CKEYFIELD,@NXNSSENDINGORDER  
  WHILE @@FETCH_STATUS=0  
  BEGIN  
	   SET @NSTEP=170  
	   
	   IF @CTABLENAME IN ('SLSMST','SLSDET','SLSBC')
			SET @CWHERECLAUSE=' WHERE Location_code='''+@CHODEPTID+''''
	   ELSE
			SET @CWHERECLAUSE=''
								  
	   SET @CCMD=N'DELETE  FROM '+@CTABLENAME+@CWHERECLAUSE  
	     
	   PRINT @CCMD  
	   EXEC SP_EXECUTESQL @CCMD  
	     
	   LBLDELNEXT:  
	       
	   FETCH NEXT FROM DELCUR INTO @CTABLENAME,@CKEYFIELD,@NXNSSENDINGORDER    
  END  
  CLOSE DELCUR  
  DEALLOCATE DELCUR  
  
     
 LBLMERGE:  
    
  SET @NSTEP=180  
    
  

  IF CURSOR_STATUS('GLOBAL','MERGECUR') IN (0,1)  
  BEGIN  
	   CLOSE MERGECUR  
	   DEALLOCATE MERGECUR
  END    
    
  --- NOW, UPDATE TRANSACTIONS DATA ONE BY ONE  
  DECLARE MERGECUR CURSOR FOR   
  SELECT  DISTINCT TABLENAME, KEYFIELD,LINKED_MASTER,XNS_MERGING_ORDER   
  FROM XNSINFO (NOLOCK) WHERE XN_TYPE = @CXNTYPE   
  AND   XNS_MERGING_ORDER <> 99   
  ORDER BY XNS_MERGING_ORDER  
    
  OPEN MERGECUR  
  FETCH NEXT FROM MERGECUR INTO @CTABLENAME,@CKEYFIELD,@BLINKEDMASTER,@NXNSMERGINGORDER    
  WHILE @@FETCH_STATUS=0  
  BEGIN  
     
   SET @NSTEP=190   
     
   LBLSTARTMERGE:  
   SET @BPROCEED=1  
     
   SET @CCMD=N'IF NOT EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME=''TMP_' + @CXNTYPE + '_' + @CTABLENAME + '_' + LTRIM(RTRIM(STR(@NSPID)))+''')  
       SET @BPROCEEDOUT=0'  
     
   PRINT @CCMD  
   EXEC SP_EXECUTESQL @CCMD,N'@BPROCEEDOUT BIT OUTPUT',@BPROCEEDOUT=@BPROCEED OUTPUT  
     
   SET @NSTEP=200  
     
   IF @BPROCEED=0  
    GOTO LBLMERGENEXT  
  
  
   IF @CTABLENAME='CONFIG'
		SET @BINSERTONLY=0
   ELSE
		SET @BINSERTONLY=1
		  
   SET @NSTEP=210    
     
   SET @CCMD='EXEC UPDATEMASTERXN_MERGING '''','''+@CTABLEPREFIX+'_' + @CTABLENAME + '_' + LTRIM(RTRIM(STR(@NSPID)))+''','''',  
        '''+@CTABLENAME+''','''+@CKEYFIELD+''','''','''','+  
        (CASE WHEN @BINSERTONLY=1 THEN '1' ELSE '0' END)+',0,1,'''+@CFILTERCONDITION+''',@CERRORMSGOUT OUTPUT'  
   PRINT @CCMD  
   EXEC SP_EXECUTESQL @CCMD,N'@CERRORMSGOUT VARCHAR(1000) OUTPUT',@CERRORMSGOUT=@CERRORMSG OUTPUT  
     
   IF @CERRORMSG<>''  
    BREAK  
     
   SET @NSTEP=220  
     
   LBLMERGENEXT:  
     
   FETCH NEXT FROM MERGECUR INTO @CTABLENAME,@CKEYFIELD,@BLINKEDMASTER,@NXNSMERGINGORDER    
  END  
  CLOSE MERGECUR  
  DEALLOCATE MERGECUR  
     
  SET @NSTEP=230  
    
  -- DELETING FROM TEMP TABLES  
    
  EXEC SP_DROPTEMPTABLES_XNS @CXNTYPE,@NSPID,'','TMP_MSTSCH'   
    
  SET @CRETCMD='SELECT '''+@CMEMOID+''' AS MEMO_ID,'''+@CERRORMSG+''' AS ERRMSG'   
     
    
 LBLLAST:  
    
  SET @NSTEP=240  
    
  --- ON SUCCESSFUL MERGING , DELETE ENTRY FROM XN HISTORY     
  IF @CERRORMSG=''  
  BEGIN  
   DELETE FROM XN_HISTORY WHERE XN_TYPE=@CXNTYPE AND MEMO_ID=@CMEMOID  
     
   IF @@TRANCOUNT>0  
   BEGIN  
    PRINT 'SUCCESS'  
    COMMIT TRANSACTION  
   END   
  END  
  ELSE  
  BEGIN  
   IF @@TRANCOUNT>0  
    ROLLBACK    
  END   
    
  SET @NSTEP=250  
    
  INSERT @TRETMSG  
  SELECT 'MSTSCH',@CERRORMSG  
    
  SELECT * FROM @TRETMSG  
    
    
 END TRY  
  
 BEGIN CATCH  
    
  PRINT 'UNTRAPPED ERROR'    
  SELECT @CERRORMSG='PROCEDURE : '+ISNULL(ERROR_PROCEDURE(),'NULL P')+'STEP: '+STR(@NSTEP)+' LINE NO. :'+  
  ISNULL(LTRIM(RTRIM(STR(ERROR_LINE()))),'NULL LINE')+'MSG :'+ISNULL(ERROR_MESSAGE(),'NULL MSG')  
    
  SET @CRETCMD='SELECT '''' AS MEMO_ID,'''''+@CERRORMSG+''''' AS ERRMSG'  
    
  PRINT 'RETURN VALUE : '+ISNULL(@CRETCMD,'NULL RETCMD')+@CMEMOID  
  --EXEC SP_EXECUTESQL @CRETCMD  
    
  INSERT @TRETMSG  
  SELECT 'MSTSCH',@CERRORMSG  
    
  SELECT * FROM @TRETMSG  
    
    
  IF @@TRANCOUNT>0  
   ROLLBACK    
  
  IF CURSOR_STATUS('GLOBAL','DELCUR') IN (0,1)  
  BEGIN  
   CLOSE DELCUR  
   DEALLOCATE DELCUR  
  END  
    
  IF CURSOR_STATUS('GLOBAL','MERGECUR') IN (0,1)  
  BEGIN  
   CLOSE MERGECUR  
   DEALLOCATE MERGECUR  
  END  
    
  EXEC SP_DROPTEMPTABLES_XNS @CXNTYPE,@NSPID,'','TMP_MSTSCH'     
 END CATCH  
    
END  
--- END OF CREATING PROCEDURE SP_MERGEMSTSCHDATA
