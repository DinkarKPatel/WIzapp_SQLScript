CREATE PROCEDURE SP_PRD_MATERIAL_TRANSACTION
(
  @CAC_CODE VARCHAR(MAX)='',
  @CARTICLE_CODE VARCHAR(MAX)='',
  @CPURCHASE_NO VARCHAR(MAX)='',
  @DPUR_FM_DT DATETIME='',
  @DPUR_TO_DT DATETIME=''
  
)
AS
BEGIN
   
  
     DECLARE @DTSQL NVARCHAR(MAX),@CART_STATUS VARCHAR(MAX),@AAC_STATUS VARCHAR(MAX), @CFILTER VARCHAR(MAX)
     SET @CFILTER=''
     
     IF ISNULL(@CAC_CODE,'')<>''
     SET @CFILTER=' AND A.AC_CODE  '+@CAC_CODE+' '
     
     IF @CARTICLE_CODE<>''
     SET @CFILTER=@CFILTER+' AND B.ARTICLE_CODE '+@CARTICLE_CODE+''
     
     IF @CPURCHASE_NO<>''
     SET @CFILTER=@CFILTER+' AND A.BILL_NO '+@CPURCHASE_NO+''
     
     IF @DPUR_FM_DT NOT IN('','1900-01-01')
     SET @CFILTER=@CFILTER+' AND A.RECEIPT_DT BETWEEN '''+ CONVERT(VARCHAR,@DPUR_FM_DT,121) +''' AND '''+ CONVERT(VARCHAR,@DPUR_TO_DT,121) +''' '
      
    
    
      IF OBJECT_ID('TEMPDB..#TMPPUR','U') IS NOT NULL
         DROP TABLE #TMPPUR
     
      SELECT SR=CAST(0 AS INT), CAST('' AS VARCHAR(100)) AS XN_TYPE, AC_CODE,MRR_NO,INV_NO AS BILL_NO,INV_DT AS BILL_DT,
			 B.ARTICLE_CODE AS RM_ARTICLE_CODE,B.PARA1_CODE AS RM_PARA1_CODE,
			 B.PARA3_CODE ,B.PRODUCT_UID,
			 ISNULL(ARTICLE_SET_CODE,'') AS ARTICLE_SET_CODE,A.RECEIPT_DT AS XN_DT,
			 CAST(0 AS NUMERIC(10,2)) AS OUT_QTY,
			 SUM(B.QUANTITY) AS IN_QTY,
			 CAST(0 AS NUMERIC(10,2)) AS CB_QTY,
			 SUM(B.PURCHASE_PRICE) AS PURCHASE_PRICE,
			 JOB_NAME=CAST('' AS VARCHAR(100))
     INTO #TMPPUR
     FROM PRD_PIM01106 A (NOLOCK)
     JOIN PRD_PID01106 B (NOLOCK) ON A.MRR_ID=B.MRR_ID
     LEFT OUTER JOIN 
     (
      SELECT B.PRODUCT_UID,B.REF_WO_ID,ARTICLE_SET_CODE  
      FROM PRD_STK_TRANSFER_MST A
      JOIN PRD_STK_TRANSFER_DET B ON A.MEMO_ID=B.MEMO_ID
      JOIN PRD_WO_MST MST ON MST.MEMO_ID=B.REF_WO_ID
      WHERE A.CANCELLED=0
      GROUP BY B.PRODUCT_UID,B.REF_WO_ID,ARTICLE_SET_CODE
     ) C ON B.PRODUCT_UID=C.PRODUCT_UID
     WHERE A.CANCELLED=0
     AND 1=2
     GROUP BY AC_CODE,MRR_NO,INV_NO ,INV_DT ,B.PARA1_CODE,
	 B.ARTICLE_CODE ,
	 B.PARA3_CODE ,B.PRODUCT_UID,ARTICLE_SET_CODE,A.RECEIPT_DT
     
    
     
   SET @DTSQL=N' SELECT 1 AS SR, ''PUR'' AS XN_TYPE, AC_CODE,MRR_NO,A.BILL_NO AS BILL_NO,INV_DT AS BILL_DT,
				 B.ARTICLE_CODE AS RM_ARTICLE_CODE,B.PARA1_CODE AS RM_PARA1_CODE,
				 B.PARA3_CODE ,B.PRODUCT_UID,
				 ISNULL('''','''') AS ARTICLE_SET_CODE,A.RECEIPT_DT AS XN_DT,
				 CAST(0 AS NUMERIC(10,2)) AS OUT_QTY,
				 SUM(B.QUANTITY) AS IN_QTY,
				 CAST(0 AS NUMERIC(10,2)) AS CB_QTY,
				 SUM(B.PURCHASE_PRICE) AS PURCHASE_PRICE
     FROM PRD_PIM01106 A (NOLOCK)
     JOIN PRD_PID01106 B (NOLOCK) ON A.MRR_ID=B.MRR_ID
     WHERE A.CANCELLED=0 '+ @CFILTER+
     ' GROUP BY AC_CODE,MRR_NO,A.BILL_NO ,INV_DT ,
	 B.ARTICLE_CODE ,B.PARA1_CODE ,
	 B.PARA3_CODE ,B.PRODUCT_UID,A.RECEIPT_DT '
	 
	 PRINT @DTSQL
	 INSERT INTO #TMPPUR(SR,XN_TYPE,AC_CODE,MRR_NO,BILL_NO,BILL_DT,RM_ARTICLE_CODE,RM_PARA1_CODE,PARA3_CODE ,PRODUCT_UID,
	           ARTICLE_SET_CODE,XN_DT,OUT_QTY,IN_QTY,CB_QTY,PURCHASE_PRICE)
	 EXEC SP_EXECUTESQL @DTSQL
	 
	 
	 --FOR GENERATIN NEW BARCODE LIST OF TRANSACTIONS SHOWS
	 
	 INSERT #TMPPUR	( SR, XN_TYPE, AC_CODE, MRR_NO, BILL_NO, BILL_DT, RM_ARTICLE_CODE, RM_PARA1_CODE, PARA3_CODE, PRODUCT_UID, ARTICLE_SET_CODE, XN_DT, OUT_QTY, IN_QTY, CB_QTY, PURCHASE_PRICE, JOB_NAME )  
	 SELECT 	  SR, XN_TYPE, AC_CODE, MRR_NO, BILL_NO, BILL_DT, RM_ARTICLE_CODE, RM_PARA1_CODE, PARA3_CODE, B.NEW_PRODUCT_UID  AS  PRODUCT_UID, ARTICLE_SET_CODE, 
	 XN_DT, OUT_QTY=0, IN_QTY=0, CB_QTY, PURCHASE_PRICE, JOB_NAME
	 FROM  #TMPPUR  A 
	 JOIN 
	 (
	  SELECT A.PRODUCT_UID ,C.PRODUCT_UID AS NEW_PRODUCT_UID,SUM(C.QUANTITY ) AS QUANTITY
	  FROM PRD_JOBWORK_ISSUE_DET A 
	  JOIN PRD_JOBWORK_ISSUE_MST B ON A.ISSUE_ID  =B.ISSUE_ID
	  JOIN PRD_JOBWORK_RECEIPT_DET C ON A.ROW_ID =C.REF_ROW_ID 
	  JOIN PRD_JOBWORK_RECEIPT_MST  D ON C.RECEIPT_ID =D.RECEIPT_ID
	  WHERE B.CANCELLED =0 AND D.CANCELLED =0
	  GROUP BY A.PRODUCT_UID ,C.PRODUCT_UID 
	  ) B ON A.PRODUCT_UID=B.PRODUCT_UID
  
	 
	  IF OBJECT_ID('TEMPDB..#TMPTRAN','U') IS NOT NULL
         DROP TABLE #TMPTRAN 
         SELECT * INTO #TMPTRAN FROM #TMPPUR
         
         
       
         
         
         
		SET @DTSQL=N'  SELECT 4 AS SR, ''STK-OUT'' AS XN_TYPE,A.AC_CODE,A.MRR_NO,A.BILL_NO,A.BILL_DT,
				 A.RM_ARTICLE_CODE,A.RM_PARA1_CODE,
				 A.PARA3_CODE ,A.PRODUCT_UID,
				 B.ARTICLE_SET_CODE,B.MEMO_DT AS XN_DT,
				 CAST(B.QUANTITY AS NUMERIC(10,2)) AS OUT_QTY,
				 0 AS IN_QTY,
				 CAST(0 AS NUMERIC(10,2)) AS CB_QTY,
				 A.PURCHASE_PRICE
		  FROM #TMPPUR A
		  JOIN (
		  
		       SELECT  A.ARTICLE_SET_CODE,A.MEMO_DT, A.PRODUCT_UID,SUM(A.QUANTITY) AS QUANTITY
		       FROM
		       (
				 SELECT MST.ARTICLE_SET_CODE,A.MEMO_DT, B.PRODUCT_UID,SUM(QUANTITY) AS QUANTITY 
				 FROM PRD_STK_TRANSFER_MST A
				 JOIN PRD_STK_TRANSFER_DET B ON A.MEMO_ID=B.MEMO_ID
				 JOIN PRD_WO_MST MST ON MST.MEMO_ID=B.REF_WO_ID
				 WHERE A.CANCELLED=0
				 GROUP BY MST.ARTICLE_SET_CODE,A.MEMO_DT,B.PRODUCT_UID
				 UNION ALL
				 SELECT MST.ARTICLE_SET_CODE,A.MEMO_DT,B.PRODUCT_UID,SUM(QUANTITY) FROM PRD_STK_TRANSFER_MST_PENDING A
				 JOIN PRD_STK_TRANSFER_DET_PENDING B ON A.MEMO_ID=B.MEMO_ID
				 JOIN PRD_WO_MST MST ON MST.MEMO_ID=B.REF_WO_ID
				 WHERE A.CANCELLED=0
				 GROUP BY MST.ARTICLE_SET_CODE,A.MEMO_DT,B.PRODUCT_UID
				 ) A
				 GROUP BY A.ARTICLE_SET_CODE,A.MEMO_DT, A.PRODUCT_UID
				 
		  ) B ON A.PRODUCT_UID=B.PRODUCT_UID '
		  
	     PRINT @DTSQL
		 INSERT INTO #TMPTRAN(SR,XN_TYPE,AC_CODE,MRR_NO,BILL_NO,BILL_DT,RM_ARTICLE_CODE,RM_PARA1_CODE,PARA3_CODE ,PRODUCT_UID,
				   ARTICLE_SET_CODE,XN_DT,OUT_QTY,IN_QTY,CB_QTY,PURCHASE_PRICE)
		 EXEC SP_EXECUTESQL @DTSQL
	  
	  
	    SET @DTSQL=N'  SELECT 3 AS SR, ''JWI'' AS XN_TYPE, A.AC_CODE,A.MRR_NO,A.BILL_NO,A.BILL_DT,
				 A.RM_ARTICLE_CODE,A.RM_PARA1_CODE,
				 A.PARA3_CODE ,A.PRODUCT_UID,
				 A.ARTICLE_SET_CODE,B.MEMO_DT AS XN_DT,
				 CAST(B.QUANTITY AS NUMERIC(10,2)) AS OUT_QTY,
				  0 AS IN_QTY,
				 CAST(0 AS NUMERIC(10,2)) AS CBS_QTY,
				 A.PURCHASE_PRICE,
				 B.JOB_NAME
		  FROM #TMPPUR A
		  JOIN (
			    SELECT A.ISSUE_DT AS MEMO_DT, B.PRODUCT_UID ,JOBS.JOB_NAME,
			           SUM(QUANTITY) AS QUANTITY
				FROM PRD_JOBWORK_ISSUE_MST A
				JOIN PRD_JOBWORK_ISSUE_DET B ON A.ISSUE_ID=B.ISSUE_ID
				JOIN JOBS ON JOBS.JOB_CODE=B.JOB_CODE
				WHERE A.CANCELLED=0
				GROUP BY A.ISSUE_DT, B.PRODUCT_UID,JOBS.JOB_NAME
		  ) B ON A.PRODUCT_UID=B.PRODUCT_UID '
		  
	     PRINT @DTSQL
		 INSERT INTO #TMPTRAN(SR,XN_TYPE,AC_CODE,MRR_NO,BILL_NO,BILL_DT,RM_ARTICLE_CODE,RM_PARA1_CODE,PARA3_CODE ,PRODUCT_UID,
				   ARTICLE_SET_CODE,XN_DT,OUT_QTY,IN_QTY,CB_QTY,PURCHASE_PRICE,JOB_NAME)
		 EXEC SP_EXECUTESQL @DTSQL
		
		
		
		SET @DTSQL=N'  SELECT 3 AS SR, ''JWR'' AS XN_TYPE, A.AC_CODE,A.MRR_NO,A.BILL_NO,A.BILL_DT,
				 A.RM_ARTICLE_CODE,A.RM_PARA1_CODE,
				 A.PARA3_CODE ,A.PRODUCT_UID,
				 A.ARTICLE_SET_CODE,B.MEMO_DT AS XN_DT,
				 0 AS OUT_QTY,
				 CAST(B.QUANTITY AS NUMERIC(10,2)) AS IN_QTY,
				 CAST(0 AS NUMERIC(10,2)) AS CB_QTY,
				 A.PURCHASE_PRICE,
				 B.JOB_NAME
		  FROM #TMPPUR A
		  JOIN (
			     SELECT A.RECEIPT_DT AS MEMO_DT, C.PRODUCT_UID,JOBS.JOB_NAME ,
			            SUM(B.QUANTITY) AS QUANTITY 
				 FROM PRD_JOBWORK_RECEIPT_MST A
				 JOIN PRD_JOBWORK_RECEIPT_DET B ON A.RECEIPT_ID=B.RECEIPT_ID
				 JOIN PRD_JOBWORK_ISSUE_DET C ON B.REF_ROW_ID=C.ROW_ID
				 JOIN PRD_JOBWORK_ISSUE_MST D ON C.ISSUE_ID=D.ISSUE_ID
				 JOIN JOBS ON JOBS.JOB_CODE=C.JOB_CODE
				 WHERE A.CANCELLED=0 AND D.CANCELLED=0
				 GROUP BY A.RECEIPT_DT,C.PRODUCT_UID,JOBS.JOB_NAME
		  ) B ON A.PRODUCT_UID=B.PRODUCT_UID '
		  
	     PRINT @DTSQL
		 INSERT INTO #TMPTRAN(SR,XN_TYPE,AC_CODE,MRR_NO,BILL_NO,BILL_DT,RM_ARTICLE_CODE,RM_PARA1_CODE,PARA3_CODE ,PRODUCT_UID,
				   ARTICLE_SET_CODE,XN_DT,OUT_QTY,IN_QTY,CB_QTY,PURCHASE_PRICE,JOB_NAME)
		 EXEC SP_EXECUTESQL @DTSQL
		 
		 
		 SET @DTSQL=N'  SELECT 5 AS SR, ''APP'' AS XN_TYPE, A.AC_CODE,A.MRR_NO,A.BILL_NO,A.BILL_DT,
				 A.RM_ARTICLE_CODE,A.RM_PARA1_CODE,
				 A.PARA3_CODE ,A.PRODUCT_UID,
				 A.ARTICLE_SET_CODE,B.MEMO_DT AS XN_DT,
				 CAST(B.QUANTITY AS NUMERIC(10,2)) AS OUT_QTY,
				  0 AS IN_QTY,
				 CAST(0 AS NUMERIC(10,2)) AS CB_QTY,
				 A.PURCHASE_PRICE,
				 AC_NAME
		  FROM #TMPPUR A
		  JOIN (	
				SELECT C.AC_NAME AS AC_NAME,
				A.MEMO_DT AS MEMO_DT, B.PRODUCT_UID ,SUM(QUANTITY) AS QUANTITY 
				FROM PRD_APM01106 A
				JOIN PRD_APD01106 B ON A.MEMO_ID=B.MEMO_ID
				LEFT OUTER JOIN LM01106 C ON C.AC_CODE=A.AC_CODE
				WHERE A.CANCELLED=0
				GROUP BY C.AC_NAME,A.MEMO_DT , B.PRODUCT_UID
		  ) B ON A.PRODUCT_UID=B.PRODUCT_UID '
		  
	     PRINT @DTSQL
		 INSERT INTO #TMPTRAN(SR,XN_TYPE,AC_CODE,MRR_NO,BILL_NO,BILL_DT,RM_ARTICLE_CODE,RM_PARA1_CODE,PARA3_CODE ,PRODUCT_UID,
				   ARTICLE_SET_CODE,XN_DT,OUT_QTY,IN_QTY,CB_QTY,PURCHASE_PRICE,JOB_NAME)
		 EXEC SP_EXECUTESQL @DTSQL
		 
	
		 
		 SET @DTSQL=N'  SELECT 4 AS SR, ''APR'' AS XN_TYPE, A.AC_CODE,A.MRR_NO,A.BILL_NO,A.BILL_DT,
				 A.RM_ARTICLE_CODE,A.RM_PARA1_CODE,
				 A.PARA3_CODE ,A.PRODUCT_UID,
				 A.ARTICLE_SET_CODE,B.MEMO_DT AS XN_DT,
				 0 AS OUT_QTY,
				 CAST(B.QUANTITY AS NUMERIC(10,2)) AS IN_QTY,
				 CAST(0 AS NUMERIC(10,2)) AS CB_QTY,
				 A.PURCHASE_PRICE
		  FROM #TMPPUR A
		  JOIN (
			      SELECT A.MEMO_DT AS MEMO_DT, C.PRODUCT_UID ,SUM(B.QUANTITY) AS QUANTITY 
				   FROM PRD_APPROVAL_RETURN_MST A
				   JOIN PRD_APPROVAL_RETURN_DET B ON A.MEMO_ID=B.MEMO_ID
				   JOIN PRD_APD01106 C ON B.APD_ROW_ID=C.ROW_ID
				   JOIN PRD_APM01106 D ON C.MEMO_ID=D.MEMO_ID
				   GROUP BY A.MEMO_DT , C.PRODUCT_UID
		  ) B ON A.PRODUCT_UID=B.PRODUCT_UID '
		  
	     PRINT @DTSQL
		 INSERT INTO #TMPTRAN(SR,XN_TYPE,AC_CODE,MRR_NO,BILL_NO,BILL_DT,RM_ARTICLE_CODE,RM_PARA1_CODE,PARA3_CODE ,PRODUCT_UID,
				   ARTICLE_SET_CODE,XN_DT,OUT_QTY,IN_QTY,CB_QTY,PURCHASE_PRICE)
		 EXEC SP_EXECUTESQL @DTSQL
		
		 SET @DTSQL=N'  SELECT 7 AS SR, ''CNC'' AS XN_TYPE, A.AC_CODE,A.MRR_NO,A.BILL_NO,A.BILL_DT,
				 A.RM_ARTICLE_CODE,A.RM_PARA1_CODE,
				 A.PARA3_CODE ,A.PRODUCT_UID,
				 A.ARTICLE_SET_CODE,B.MEMO_DT AS XN_DT,
				 CAST(B.QUANTITY AS NUMERIC(10,2)) AS OUT_QTY,
				 0 AS IN_QTY,
				 CAST(0 AS NUMERIC(10,2)) AS CB_QTY,
				 A.PURCHASE_PRICE
		  FROM #TMPPUR A
		  JOIN (
			      SELECT A.CNC_MEMO_DT AS MEMO_DT, B.PRODUCT_UID ,SUM(B.QUANTITY) AS QUANTITY  
				  FROM PRD_ICM01106 A
				  JOIN PRD_ICD01106 B ON A.CNC_MEMO_ID=B.CNC_MEMO_ID
				  WHERE A.CANCELLED=0 AND CNC_TYPE=1
				 GROUP BY A.CNC_MEMO_DT , B.PRODUCT_UID 
		  ) B ON A.PRODUCT_UID=B.PRODUCT_UID '
		  
	     PRINT @DTSQL
		 INSERT INTO #TMPTRAN(SR,XN_TYPE,AC_CODE,MRR_NO,BILL_NO,BILL_DT,RM_ARTICLE_CODE,RM_PARA1_CODE,PARA3_CODE ,PRODUCT_UID,
				   ARTICLE_SET_CODE,XN_DT,OUT_QTY,IN_QTY,CB_QTY,PURCHASE_PRICE)
		 EXEC SP_EXECUTESQL @DTSQL
		
		SET @DTSQL=N'  SELECT 5 AS SR, ''UNC'' AS XN_TYPE, A.AC_CODE,A.MRR_NO,A.BILL_NO,A.BILL_DT,
				 A.RM_ARTICLE_CODE,A.RM_PARA1_CODE,
				 A.PARA3_CODE ,A.PRODUCT_UID,
				 A.ARTICLE_SET_CODE,B.MEMO_DT AS XN_DT,
				 0 AS OUT_QTY,
				 CAST(B.QUANTITY AS NUMERIC(10,2)) AS IN_QTY,
				 CAST(0 AS NUMERIC(10,2)) AS CB_QTY,
				 A.PURCHASE_PRICE
		  FROM #TMPPUR A
		  JOIN (
			      SELECT A.CNC_MEMO_DT AS MEMO_DT, B.PRODUCT_UID ,SUM(B.QUANTITY) AS QUANTITY  
				  FROM PRD_ICM01106 A
				  JOIN PRD_ICD01106 B ON A.CNC_MEMO_ID=B.CNC_MEMO_ID
				  WHERE A.CANCELLED=0 AND CNC_TYPE=2
				 GROUP BY A.CNC_MEMO_DT , B.PRODUCT_UID 
		  ) B ON A.PRODUCT_UID=B.PRODUCT_UID '
		  
	     PRINT @DTSQL
		 INSERT INTO #TMPTRAN(SR,XN_TYPE,AC_CODE,MRR_NO,BILL_NO,BILL_DT,RM_ARTICLE_CODE,RM_PARA1_CODE,PARA3_CODE ,PRODUCT_UID,
				   ARTICLE_SET_CODE,XN_DT,OUT_QTY,IN_QTY,CB_QTY,PURCHASE_PRICE)
		 EXEC SP_EXECUTESQL @DTSQL
	
		
		SET @DTSQL=N'  SELECT 2 AS SR, ''PRT'' AS XN_TYPE, A.AC_CODE,A.MRR_NO,A.BILL_NO,A.BILL_DT,
				 A.RM_ARTICLE_CODE,A.RM_PARA1_CODE,
				 A.PARA3_CODE ,A.PRODUCT_UID,
				 A.ARTICLE_SET_CODE,B.MEMO_DT AS XN_DT,
				 CAST(B.QUANTITY AS NUMERIC(10,2)) AS OUT_QTY,
				 0 AS IN_QTY,
				 CAST(0 AS NUMERIC(10,2)) AS CB_QTY,
				 A.PURCHASE_PRICE
		  FROM #TMPPUR A
		  JOIN (
			      SELECT A.RM_DT AS MEMO_DT, B.PRODUCT_UID ,SUM(B.QUANTITY) AS QUANTITY  
				  FROM PRD_RMM01106 A
				  JOIN PRD_RMD01106 B ON A.RM_ID=B.RM_ID
				  WHERE A.CANCELLED=0 
				 GROUP BY A.RM_DT , B.PRODUCT_UID 
		  ) B ON A.PRODUCT_UID=B.PRODUCT_UID '
		  
	     PRINT @DTSQL
		 INSERT INTO #TMPTRAN(SR,XN_TYPE,AC_CODE,MRR_NO,BILL_NO,BILL_DT,RM_ARTICLE_CODE,RM_PARA1_CODE,PARA3_CODE ,PRODUCT_UID,
				   ARTICLE_SET_CODE,XN_DT,OUT_QTY,IN_QTY,CB_QTY,PURCHASE_PRICE)
		 EXEC SP_EXECUTESQL @DTSQL
	
		
		
	    IF OBJECT_ID('TEMPDB..#TMPSUMMARY','U') IS NOT NULL
         DROP TABLE #TMPSUMMARY 
	
		SELECT A.SR,A.XN_TYPE, 
		       A.AC_CODE,B.AC_NAME,
		       A.MRR_NO,A.BILL_NO,A.BILL_DT,
		       SM.SECTION_NAME,SD.SUB_SECTION_NAME,
		       A.RM_ARTICLE_CODE,ART1.ARTICLE_NO AS RM_ARTICLE_NO,
		       --P1.PARA1_CODE,
		       --P1.PARA1_NAME AS RM_COLOR,
		       P3.PARA3_CODE,
		       P3.PARA3_NAME AS DESIGN_NO,
		       CASE WHEN XN_TYPE='PUR' THEN 'PURCHASE'
		            WHEN XN_TYPE='JWI' THEN 'BLK JWI-'+ISNULL(A.JOB_NAME,'')
		            WHEN XN_TYPE='JWR' THEN 'BLK JWR-'+ISNULL(A.JOB_NAME,'')
		            WHEN XN_TYPE='APP' THEN 'APPROVAL ISSUE-'+ISNULL(A.JOB_NAME,'') --USE CUSTOMER
		            WHEN XN_TYPE='APR' THEN 'APPROVAL REC'
		            WHEN XN_TYPE='CNC' THEN 'CANCELLETION'
		            WHEN XN_TYPE='UNC' THEN 'UN CANCELLETION'
		            WHEN XN_TYPE='PRT' THEN 'PURCHASE RETURN'
		            ELSE ART2.ARTICLE_NO END AS FG_ARTICLE_NO,
		        A.XN_DT,
		        SUM(A.OUT_QTY) AS OUT_QTY,
		        SUM(A.IN_QTY) AS  IN_QTY,
		        A.PURCHASE_PRICE ,
		        UOM.UOM_NAME,
		        CBSSR=ROW_NUMBER() OVER (PARTITION BY A.AC_CODE,A.MRR_NO,A.RM_ARTICLE_CODE,P3.PARA3_CODE ORDER BY A.AC_CODE,A.MRR_NO,A.RM_ARTICLE_CODE,P3.PARA3_CODE,A.XN_DT)
		INTO #TMPSUMMARY            
		FROM #TMPTRAN  A
		LEFT JOIN LM01106 B ON A.AC_CODE=B.AC_CODE
		LEFT JOIN ARTICLE ART1 ON ART1.ARTICLE_CODE=A.RM_ARTICLE_CODE
		LEFT OUTER JOIN UOM ON UOM.UOM_CODE =ART1.UOM_CODE
		LEFT JOIN SECTIOND SD ON SD.SUB_SECTION_CODE=ART1.SUB_SECTION_CODE
		LEFT JOIN SECTIONM SM ON SM.SECTION_CODE=SD.SECTION_CODE
		LEFT JOIN PARA3 P3 ON P3.PARA3_CODE=A.PARA3_CODE
		LEFT JOIN ARTICLE ART2 ON ART2.ARTICLE_CODE=A.ARTICLE_SET_CODE
		GROUP BY A.SR,A.XN_TYPE, 
		A.AC_CODE,B.AC_NAME,UOM.UOM_NAME,
		A.MRR_NO,A.BILL_NO,A.BILL_DT,
		SM.SECTION_NAME,SD.SUB_SECTION_NAME,
		A.RM_ARTICLE_CODE,ART1.ARTICLE_NO ,
		P3.PARA3_CODE,
		P3.PARA3_NAME ,
		CASE WHEN XN_TYPE='PUR' THEN 'PURCHASE'
		     WHEN XN_TYPE='JWI' THEN 'BLK JWI-'+ISNULL(A.JOB_NAME,'')
		     WHEN XN_TYPE='JWR' THEN 'BLK JWR-'+ISNULL(A.JOB_NAME,'')
		     WHEN XN_TYPE='APP' THEN 'APPROVAL ISSUE-'+ISNULL(A.JOB_NAME,'')
		     WHEN XN_TYPE='APR' THEN 'APPROVAL REC'
		     WHEN XN_TYPE='CNC' THEN 'CANCELLETION'
		     WHEN XN_TYPE='UNC' THEN 'UN CANCELLETION'
		     WHEN XN_TYPE='PRT' THEN 'PURCHASE RETURN'
		  ELSE ART2.ARTICLE_NO END ,
		  A.XN_DT,A.PURCHASE_PRICE 
		--ORDER BY AC_CODE,MRR_NO,RM_ARTICLE_CODE,A.SR
		
		
		
		SELECT A.SR,A.XN_TYPE ,A.AC_NAME,A.MRR_NO,A.BILL_NO,A.BILL_DT,
		       A.SECTION_NAME,A.SUB_SECTION_NAME,
		       A.RM_ARTICLE_NO,A.DESIGN_NO,A.FG_ARTICLE_NO,
		       A.XN_DT,
		       A.PURCHASE_PRICE,
		       A.CBSSR,
		       A.OUT_QTY,A.IN_QTY,
		       SUM(B.IN_QTY-B.OUT_QTY) AS CBS_QTY,
		       A.UOM_NAME 
		FROM #TMPSUMMARY A 
		JOIN #TMPSUMMARY B ON A.AC_CODE=B.AC_CODE AND A.MRR_NO=B.MRR_NO AND A.RM_ARTICLE_CODE=B.RM_ARTICLE_CODE 
		                      AND A.PARA3_CODE=B.PARA3_CODE AND B.CBSSR<=A.CBSSR

		GROUP BY A.SR,A.XN_TYPE ,A.AC_NAME,A.MRR_NO,A.BILL_NO,A.BILL_DT,
		A.SECTION_NAME,A.SUB_SECTION_NAME,
		A.RM_ARTICLE_NO,A.DESIGN_NO,A.FG_ARTICLE_NO,A.XN_DT,
		A.PURCHASE_PRICE,
		A.OUT_QTY,A.IN_QTY,A.CBSSR,A.UOM_NAME 
		ORDER BY AC_NAME,MRR_NO,A.SR,RM_ARTICLE_NO,A.DESIGN_NO,A.CBSSR
		

END
