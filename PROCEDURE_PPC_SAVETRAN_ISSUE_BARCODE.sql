CREATE PROCEDURE PPC_SAVETRAN_ISSUE_BARCODE  
(  
 @NUPDATEMODE  NUMERIC(1,0),  
 @NSPID    INT,  
 @CFINYEAR   VARCHAR(10),  
 @CXNMEMOID   VARCHAR(40)='',  
 @CLOCID    VARCHAR(2)=''   
)  
AS  
BEGIN  
 DECLARE @CTEMPDBNAME   VARCHAR(100),  
   @CMASTERTABLENAME  VARCHAR(100),  
   @CDETAILTABLENAME1  VARCHAR(100),  
   @CDETAILTABLENAME2  VARCHAR(100),  
   @CTEMPMASTERTABLENAME VARCHAR(100),  
   @CTEMPDETAILTABLENAME1 VARCHAR(100),  
     
   @CTEMPMASTERTABLE  VARCHAR(100),  
   @CTEMPDETAILTABLE1  VARCHAR(100),  
     
   @CERRORMSG    VARCHAR(500),  
   @LDONOTUPDATESTOCK  BIT,  
   @CKEYFIELD1    VARCHAR(50),  
   @CKEYFIELDVAL1   VARCHAR(50),  
   @CMEMONO    VARCHAR(20),  
   @NMEMONOLEN    NUMERIC(20,0),  
   @CMEMONOVAL    VARCHAR(50),  
   @CMEMODEPTID   VARCHAR(2),  
   @CLOCATIONID   VARCHAR(2),  
   @CHODEPTID    VARCHAR(2),  
   @CCMD     NVARCHAR(4000),  
   @CCMDOUTPUT    NVARCHAR(4000),  
   @NSAVETRANLOOP   BIT,  
   @NSTEP     INT,  
   @LENABLETEMPDATABASE BIT,  
   @CMEMONOPREFIX VARCHAR(10),  
            @CPOTERMSMASTER         VARCHAR(50),  
   @CPOTERMSTEMP           VARCHAR(50)  
     
 DECLARE @OUTPUT TABLE (ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))  
   
 SET @CMEMONOPREFIX=@CLOCID+'SI'  
  
 SET @NSTEP = 10  -- SETTTING UP ENVIRONMENT  
 SET @CTEMPDBNAME = ''  
  
 SET @CMASTERTABLENAME = 'PPC_AGENCY_ISSUE_FG_MST'  
 SET @CDETAILTABLENAME1 = 'PPC_AGENCY_ISSUE_FG_DET'  
     SET @CPOTERMSMASTER='PPC_ISSUE_SI_TERMS'  
   
 SET @CTEMPMASTERTABLENAME = 'PPC_PPC_AGENCY_ISSUE_FG_MST_UPLOAD'  
 SET @CTEMPDETAILTABLENAME1 = 'PPC_PPC_AGENCY_ISSUE_FG_DET_UPLOAD'  
 SET @CPOTERMSTEMP='PPC_PPC_ISSUE_SI_TERMS_UPLOAD'  
   
   
 SET @CTEMPMASTERTABLE =  @CTEMPMASTERTABLENAME  
 SET @CTEMPDETAILTABLE1 =  @CTEMPDETAILTABLENAME1  
  
   
 SET @CERRORMSG   = ''  
 SET @LDONOTUPDATESTOCK = 0  
 SET @CKEYFIELD1   = 'MEMO_ID'  
 SET @CMEMONO   = 'MEMO_NO'  
 SET @NMEMONOLEN   = LEN(@CMEMONOPREFIX)+6  
   
 IF ISNULL(@CLOCID,'')=''  
  SELECT @CLOCATIONID = [VALUE] FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'  
 ELSE  
  SELECT @CLOCATIONID=@CLOCID  
    
 SELECT @CHODEPTID  = [VALUE] FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'    
  
 BEGIN TRANSACTION  
 BEGIN TRY  
    
  SET @NSTEP = 20  
          
          
  IF @NUPDATEMODE = 3  
  BEGIN  
      IF (@CXNMEMOID IS NULL )  
       BEGIN  
		  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE SAVED...'  
		  GOTO END_PROC      
      END  
     
       
   IF EXISTS (SELECT TOP 1 'U' FROM  PPC_AGENCY_ISSUE_FG_DET A  
   JOIN PPC_AGENCY_ISSUE_FG_MST B ON A.MEMO_ID=B.MEMO_ID   
   JOIN  PPC_AGENCY_REC_FG_DET C ON C.PRODUCT_CODE =A.PRODUCT_CODE AND A.ROW_ID=C.REF_ROW_ID  
   JOIN  PPC_AGENCY_REC_FG_MST D ON D.MEMO_ID  =C.MEMO_ID AND B.JOB_CODE=D.JOB_CODE  
   WHERE D.CANCELLED =0 AND A.MEMO_ID=@CXNMEMOID)  
   BEGIN  
      SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' BARCODE HAS  RECEIVED FROM AGENCY PLEASE CHECK RECEIVING ...'  
      GOTO END_PROC  
  
   END  
              
  
  
   SET @CCMD=N' UPDATE '+@CMASTERTABLENAME+' SET CANCELLED=1,LAST_UPDATE=GETDATE() WHERE '+@CKEYFIELD1+'='''+@CXNMEMOID+'''  '  
         EXEC SP_EXECUTESQL @CCMD  
   
    EXEC UPDATEFGPMT_PPC   
       @CXNTYPE   = 'FGISS'  
     , @CXNNO   = ''  
     , @CXNID   = @CXNMEMOID  
     , @NREVERTFLAG  = 0  
     , @NALLOWNEGSTOCK = 0  
     , @NCHKDELBARCODES = 0  
     , @CCMD    = @CCMDOUTPUT OUTPUT  
     
     
   IF @CCMDOUTPUT <> ''  
   BEGIN  
    SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR REVERTING THE STOCK STATUS IN PMT....'  
    GOTO END_PROC  
   END  
   GOTO END_PROC  
  END   
   
   
  IF @NUPDATEMODE = 4  
  BEGIN  
      IF (@CXNMEMOID IS NULL )  
   BEGIN  
      SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE SAVED...'  
      GOTO END_PROC      
   END  
     
   SET @CCMD=N' UPDATE '+@CMASTERTABLENAME+' SET APPROVED=1,LAST_UPDATE=GETDATE() WHERE '+@CKEYFIELD1+'='''+@CXNMEMOID+'''  '  
         EXEC SP_EXECUTESQL @CCMD  
   
   GOTO END_PROC  
  END   
    
  --GETTING DEPT_ID FROM TEMP MASTER TABLE  
  SET @CCMD = 'SELECT @CMEMODEPTID = LEFT(MEMO_ID,2), @CKEYFIELDVAL1 = MEMO_ID FROM ' + @CTEMPMASTERTABLE +' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' '  
  EXEC SP_EXECUTESQL @CCMD, N'@CMEMODEPTID VARCHAR(2) OUTPUT, @CKEYFIELDVAL1 VARCHAR(50) OUTPUT',   
          @CMEMODEPTID OUTPUT, @CKEYFIELDVAL1 OUTPUT  
  IF (@CMEMODEPTID IS NULL)  
  BEGIN  
     SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE SAVED...'  
     GOTO END_PROC      
  END  
          
       IF NOT EXISTS(SELECT TOP 1 'U' FROM   PPC_PPC_AGENCY_ISSUE_FG_DET_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))) AND NOT EXISTS(SELECT TOP 1 'U' FROM   PPC_PPC_AGENCY_ISSUE_FG_MISSING_BARCODE_UPLOAD  WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID))))  
       BEGIN  
           SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SIZE RATION NOT FOUND PLEASE...'  
     GOTO END_PROC    
       
       END  
  -- START UPDATING XN TABLES   
  IF @NUPDATEMODE = 1 -- ADDMODE   
  BEGIN   
   SET @NSTEP = 50  -- GENERATING NEW KEY  
     
   IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
   BEGIN  
    -- GENERATING NEW MRR_NO    
    SET @NSAVETRANLOOP=0  
    WHILE @NSAVETRANLOOP=0  
    BEGIN  
     EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,  
         @CFINYEAR,0, @CMEMONOVAL OUTPUT     
       
     SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+'   
           WHERE '+@CMEMONO+'='''+@CMEMONOVAL+'''   
           AND FIN_YEAR = '''+@CFINYEAR+''' )  
         SET @NLOOPOUTPUT=0  
        ELSE  
         SET @NLOOPOUTPUT=1'  
     PRINT @CCMD  
     EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT  
    END  
  
    IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'  
    BEGIN  
       SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'   
       GOTO END_PROC      
    END  
  
    SET @NSTEP = 60  -- GENERATING NEW ID  
  
    -- GENERATING NEW ORDER ID  
    SET @CKEYFIELDVAL1 = @CLOCATIONID + @CFINYEAR+ REPLICATE('0', 15-LEN(LTRIM(RTRIM(@CMEMONOVAL)))) + LTRIM(RTRIM(@CMEMONOVAL))  
    IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'    
    BEGIN  
       SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'  
       GOTO END_PROC  
    END  
      
    SET @NSTEP = 70  
    -- CHECK WETHER THE MEMO ID IS STILL LATER  
    IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
    BEGIN  
       SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'  
       GOTO END_PROC  
    END  
  
    SET @NSTEP = 80  -- UPDATING NEW ID INTO TEMP TABLES  
  
    -- UPDATING NEWLY GENERATED MEMO NO AND MEMO ID IN BUYER ORDER MST AND BUYER ORDER DET TEMP TABLES  
    SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' +   
       @CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''  
    PRINT @CCMD    
    EXEC SP_EXECUTESQL @CCMD  
      
    SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET ' +   
       @CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''  
    PRINT @CCMD    
    EXEC SP_EXECUTESQL @CCMD  
      
    SET @CCMD = 'UPDATE ' + @CPOTERMSTEMP + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE  SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' '  
          EXEC SP_EXECUTESQL @CCMD    
      
     END  
  END     -- END OF ADDMODE  
  ELSE    -- CALLED FROM EDITMODE  
  BEGIN    -- START OF EDITMODE  
   SET @NSTEP = 110  -- GETTING ID INFO FROM TEMP TABLE  
     
   -- GETTING ORDER_ID WHICH IS BEING EDITED  
   SET @CCMD = 'SELECT @CKEYFIELDVAL1 = MEMO_ID, @CMEMONOVAL = MEMO_NO FROM ' + @CTEMPMASTERTABLE +' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''  
   EXEC SP_EXECUTESQL @CCMD, N'@CKEYFIELDVAL1 VARCHAR(50) OUTPUT, @CMEMONOVAL VARCHAR(50) OUTPUT',   
          @CKEYFIELDVAL1 OUTPUT, @CMEMONOVAL OUTPUT  
          
   IF (@CKEYFIELDVAL1 IS NULL ) OR (@CMEMONOVAL IS NULL ) OR (LEFT(@CKEYFIELDVAL1,5)='LATER' ) 
   BEGIN  
      SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'  
      GOTO END_PROC      
   END  
   
	SET @NSTEP = 115   
	IF EXISTS (SELECT TOP 1 'U' FROM PPC_AGENCY_ISSUE_FG_DET  A (NOLOCK)
	JOIN PPC_AGENCY_ISSUE_FG_MST B (NOLOCK)  ON A.MEMO_ID =B.MEMO_ID 
	JOIN PPC_AGENCY_REC_FG_DET C (NOLOCK) ON A.PRODUCT_CODE=C.PRODUCT_CODE AND A.ROW_ID=C.REF_ROW_ID 
	JOIN PPC_AGENCY_REC_FG_MST D (NOLOCK) ON C.MEMO_ID =D.MEMO_ID 
	LEFT JOIN
	(
	  SELECT PRODUCT_CODE 
	  FROM PPC_PPC_AGENCY_REC_FG_DET_UPLOAD WHERE SP_ID =LTRIM(RTRIM(STR(@NSPID)))
	  AND MEMO_ID =@CKEYFIELDVAL1
	 
	) E ON A.PRODUCT_CODE =E.PRODUCT_CODE 
	WHERE D.CANCELLED=0 AND A.memo_id=@CKEYFIELDVAL1
	AND E.PRODUCT_CODE IS NULL
	)
	BEGIN
         SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' BARCODE HAS BEEN RECEIVE CAN NOT REMOVE...'  
        GOTO END_PROC

	END

   SET @NSTEP = 120  -- UPDATING SENT_TO_HO FLAG TEMP TABLE  
     
   SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE LEFT(MEMO_ID,5) = ''LATER'' AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''  
   PRINT @CCMD   
   EXEC SP_EXECUTESQL @CCMD  
     
   EXEC UPDATEFGPMT_PPC   
      @CXNTYPE   = 'FGISS'  
    , @CXNNO   = @CMEMONOVAL  
    , @CXNID   = @CKEYFIELDVAL1  
    , @NREVERTFLAG  = 0  
    , @NALLOWNEGSTOCK = 0  
    , @NCHKDELBARCODES = 0  
    , @CCMD    = @CCMDOUTPUT OUTPUT  
  
   IF @CCMDOUTPUT <> ''  
   BEGIN  
    SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR REVERTING THE STOCK STATUS IN PMT....'  
    GOTO END_PROC  
   END  
     
   SET @CCMD = 'UPDATE ' + @CPOTERMSTEMP + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE  SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' '  
      EXEC SP_EXECUTESQL @CCMD  
        
   DELETE FROM PPC_AGENCY_ISSUE_FG_DET WHERE MEMO_ID = @CKEYFIELDVAL1  
     
     END     -- END OF EDITMODE  
          
        SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET ROW_ID =  CONVERT(VARCHAR(40), NEWID())  
       WHERE LEFT(ROW_ID,5) = ''LATER'' AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' '  
  EXEC SP_EXECUTESQL @CCMD  
        
        DECLARE @FILTER VARCHAR(MAX)  
     SET @FILTER=' B.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''  
  SET @NSTEP = 150  
    
  EXEC UPDATEMASTERXN   
     @CSOURCEDB = @CTEMPDBNAME  
   , @CSOURCETABLE = @CTEMPMASTERTABLENAME  
   , @CDESTDB  = ''  
   , @CDESTTABLE = @CMASTERTABLENAME  
   , @CKEYFIELD1 = @CKEYFIELD1  
   , @BALWAYSUPDATE = 1  
   ,@CFILTERCONDITION=@FILTER  
     
     
      EXEC UPDATEMASTERXN   
     @CSOURCEDB = @CTEMPDBNAME  
   , @CSOURCETABLE = @CTEMPDETAILTABLENAME1  
   , @CDESTDB  = ''  
   , @CDESTTABLE = @CDETAILTABLENAME1  
   , @CKEYFIELD1 = @CKEYFIELD1  
   , @BALWAYSUPDATE = 1  
   ,@CFILTERCONDITION=@FILTER  
    
    
  --  SELECT * FROM PPC_AGENCY_ISSUE_FG_DET WHERE MEMO_ID='01011190000001SI000293'
    
 --MISSING BARCODE ISSUE   
 DECLARE @NRETURN INT  
 SELECT @NRETURN=ISNULL(MEMO_TYPE,0) FROM PPC_AGENCY_ISSUE_FG_MST WHERE MEMO_ID =@CKEYFIELDVAL1  
   
   
 IF @NRETURN IS NULL  
 SET @NRETURN=0  
   
    
  IF OBJECT_ID ('TEMPDB..#TMPBARCODE','U') IS NOT NULL  
          DROP TABLE #TMPBARCODE  
    
    SELECT ROW_ID,ARTICLE_CODE,BILL_NO,AC_CODE,PARA1_CODE,SIZEGROUP_CODE,PARA2_CODE,RATE,SELECT_QTY,JOB_CODE   
    INTO #TMPBARCODE    
    FROM PPC_PPC_AGENCY_ISSUE_FG_MISSING_BARCODE_UPLOAD   
    WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))    
     
      
      
    DECLARE @CARTICLE_CODE VARCHAR(10),@CBILL_NO VARCHAR(100),@CAC_CODE VARCHAR(10),  
    @CPARA1_CODE VARCHAR(100),@CSIZEGROUP_CODE VARCHAR(100),@CPARA2_CODE VARCHAR(100),@SELECT_QTY INT,  
    @CROW_ID VARCHAR(100),@CJOB_CODE CHAR(7),@TBARCODE INT,@CPARA2_NAME VARCHAR(100),@NRATE NUMERIC(10,0)  
  
      
    WHILE EXISTS (SELECT TOP 1 'U' FROM #TMPBARCODE)   
    BEGIN  
      
    IF OBJECT_ID ('TEMPDB..#TMPBARCODEDET','U') IS NOT NULL  
       DROP TABLE #TMPBARCODEDET  
       
       
     SELECT TOP 1 @CARTICLE_CODE=ARTICLE_CODE ,@CAC_CODE=AC_CODE,@CBILL_NO =BILL_NO ,@CPARA1_CODE =PARA1_CODE ,  
      @CSIZEGROUP_CODE=SIZEGROUP_CODE ,@CPARA2_CODE=PARA2_CODE ,@SELECT_QTY=SELECT_QTY,@CROW_ID=ROW_ID,  
      @CJOB_CODE=JOB_CODE  
     FROM #TMPBARCODE     
         
     IF OBJECT_ID ('TEMPDB..#TMPPREVJOBS','U') IS NOT NULL  
        DROP TABLE  #TMPPREVJOBS   
          
         
         
    SELECT   
    OM.BILL_NO AS BILL_NO,  
    @CAC_CODE AS AC_CODE,  
    SKU.PARA1_CODE,  
    SKU.SIZEGROUP_CODE,  
    B.ARTICLE_CODE,  
    B.PARA3_CODE,  
    SKU.PARA2_CODE,  
    PMT.PRODUCT_CODE ,  
    @CJOB_CODE AS CUR_JOB_CODE,  
    JC.JOB_ORDER,  
    SR=ROW_NUMBER() OVER (ORDER BY SKU.PARA2_CODE,PMT.PRODUCT_CODE)  
    INTO #TMPBARCODEDET  
    FROM PPC_FGBCG_MST A  
    JOIN PPC_FGBCG_DET B ON A.MEMO_ID =B.MEMO_ID   
    JOIN PPC_FG_SKU SKU ON SKU.PPC_FGBCG_DET_ROW_ID=B.ROW_ID   
    JOIN PPC_FG_PMT PMT ON PMT.PRODUCT_CODE=SKU.PRODUCT_CODE   
    JOIN  
    (  
     SELECT A.ROW_ID ,B.BILL_NO   
     FROM PPC_BUYER_ORDER_DET A  
     JOIN PPC_BUYER_ORDER_MST B ON A.ORDER_ID=B.ORDER_ID  
     WHERE B.CANCELLED=0  
    ) OM ON OM.ROW_ID=B.BO_DET_ROW_ID  
    JOIN PPC_BO_ART_JOBS  JC ON JC.REF_ROW_ID =B.BO_DET_ROW_ID AND JC.JOB_CODE =@CJOB_CODE   
    JOIN  
    (  
     SELECT REF_ROW_ID ,JOB_ORDER  ,JOB_CODE   
     FROM PPC_BO_ART_JOBS  
    ) PJ ON PJ.REF_ROW_ID =B.BO_DET_ROW_ID AND PJ.JOB_ORDER =JC.JOB_ORDER-1   
    JOIN   
    (   
     SELECT ID.PRODUCT_CODE,IM.JOB_CODE   
      FROM PPC_AGENCY_REC_FG_DET ID   
     JOIN PPC_AGENCY_REC_FG_MST IM ON ID.MEMO_ID=IM.MEMO_ID  
     WHERE IM.CANCELLED =0  
     GROUP BY ID.PRODUCT_CODE,IM.JOB_CODE   
    ) REC ON REC.PRODUCT_CODE =PMT.PRODUCT_CODE AND REC.JOB_CODE =PJ.JOB_CODE    
    LEFT OUTER JOIN  
    (  
     SELECT JOB_CODE ,PRODUCT_CODE   
     FROM PPC_AGENCY_ISSUE_FG_MST A  
     JOIN PPC_AGENCY_ISSUE_FG_DET B ON A.MEMO_ID =B.MEMO_ID   
     WHERE A.CANCELLED =0   
     AND A.MEMO_TYPE =1  
    ) ISSUE ON ISSUE.PRODUCT_CODE =PMT.PRODUCT_CODE AND  ISSUE.JOB_CODE =JC.JOB_CODE   
    LEFT OUTER JOIN  
    (  
     SELECT JOB_CODE ,PRODUCT_CODE   
     FROM PPC_AGENCY_ISSUE_FG_MST A  
     JOIN PPC_AGENCY_ISSUE_FG_DET B ON A.MEMO_ID =B.MEMO_ID   
     WHERE A.CANCELLED =0   
     AND A.MEMO_ID =@CKEYFIELDVAL1  
    ) ISSUE1 ON ISSUE1.PRODUCT_CODE =PMT.PRODUCT_CODE AND  ISSUE1.JOB_CODE =JC.JOB_CODE   
    WHERE PMT.QUANTITY_IN_STOCK=1   
    AND OM.BILL_NO=@CBILL_NO  
    AND OM.ROW_ID=@CROW_ID  
    AND B.ARTICLE_CODE=@CARTICLE_CODE  
    AND SKU.PARA1_CODE =@CPARA1_CODE  
    AND SKU.SIZEGROUP_CODE  =@CSIZEGROUP_CODE  
    AND SKU.PARA2_CODE =@CPARA2_CODE   
    AND (@NRETURN=2 OR ISSUE.JOB_CODE IS NULL)  
    AND ISSUE1.JOB_CODE IS NULL  
         
      
   
     SELECT @TBARCODE=COUNT(*) FROM #TMPBARCODEDET  
       
     IF @TBARCODE<@SELECT_QTY  
     BEGIN  
       SELECT @CPARA2_NAME =PARA2_NAME FROM PARA2 WHERE PARA2_CODE=@CPARA2_CODE  
       SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' INVALID ENTRY FOR RATIO....'+@CPARA2_NAME  
          GOTO END_PROC  
     END  
      
     DELETE FROM #TMPBARCODEDET WHERE SR>@SELECT_QTY  
      
     
     INSERT PPC_AGENCY_ISSUE_FG_DET ( MEMO_ID, MISSING_PRODUCT_CODE, PRODUCT_CODE, QUANTITY, ROW_ID )    
     SELECT @CKEYFIELDVAL1 AS  MEMO_ID,1 AS MISSING_PRODUCT_CODE,  PRODUCT_CODE,  QUANTITY=1,  ROW_ID=CAST(NEWID() AS VARCHAR(100))   
     FROM #TMPBARCODEDET  
       
    DELETE FROM #TMPBARCODE WHERE ROW_ID =@CROW_ID AND PARA2_CODE=@CPARA2_CODE  
   END  
          
    
   
  
      EXEC UPDATEFGPMT_PPC   
     @CXNTYPE   = 'FGISS'  
   , @CXNNO   = @CMEMONOVAL  
   , @CXNID   = @CKEYFIELDVAL1  
   , @NREVERTFLAG  = 1  
   , @NALLOWNEGSTOCK = 0  
   , @NCHKDELBARCODES = 0  
   , @CCMD    = @CCMDOUTPUT OUTPUT  
      
  IF (@CCMDOUTPUT <> '')  
  BEGIN  
   SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR UPDATING THE STOCK STATUS IN PMT....'  
   GOTO END_PROC  
  END   
    
  SET @FILTER=' B.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''  
  SET @CCMD='DELETE FROM '+@CPOTERMSMASTER+' WHERE MEMO_ID='''+@CKEYFIELDVAL1+''''  
     EXEC SP_EXECUTESQL @CCMD  
        
  EXEC UPDATEMASTERXN   
  @CSOURCEDB = ''  
  , @CSOURCETABLE = @CPOTERMSTEMP  
  , @CDESTDB  = ''  
  , @CDESTTABLE = @CPOTERMSMASTER  
  , @CKEYFIELD1 = @CKEYFIELD1  
  , @BALWAYSUPDATE = 1  
  ,@CFILTERCONDITION=@FILTER  
  
  
  
      
 END TRY  
 BEGIN CATCH  
  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()  
  GOTO END_PROC  
 END CATCH  
  
   
END_PROC:  
 IF @@TRANCOUNT>0  
 BEGIN  
  IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')=''  
   COMMIT TRANSACTION  
  ELSE  
   ROLLBACK  
 END  
   
 INSERT @OUTPUT ( ERRMSG, MEMO_ID)  
  VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )  
  
 SELECT * FROM @OUTPUT   
   
   
 --DROPPING TEMP TABLES  
   
    DELETE FROM PPC_PPC_AGENCY_ISSUE_FG_MST_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))  
    DELETE FROM PPC_PPC_AGENCY_ISSUE_FG_DET_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))   
    DELETE FROM PPC_PPC_AGENCY_ISSUE_FG_MISSING_BARCODE_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))   
    DELETE FROM PPC_PPC_ISSUE_SI_TERMS_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))   
  
      
   
END        
------------- END OF PROCEDURE PPC_SAVETRAN_BARCODE_PRINT  -----------------------------------------     
  
