CREATE PROCEDURE SP3S_IMPORTEXCEL_SCHEME_SLSBC
(
 @NQUERY    NUMERIC(2),      
 @CWHERE    NVARCHAR(MAX)='' ,
 @cTAble    varchar(100)    
)
AS
BEGIN

  Declare @CCMD NVARCHAR(MAX)
                   
                   IF OBJECT_ID('TEMPDB..#T','U') IS NOT NULL
                   DROP TABLE #T
                   

IF @NQUERY=1
BEGIN

		
		SET @CCMD=N'SELECT A.*,	
		b.MRP,b.pp AS PURCHASE_PRICE, b.SUB_SECTION_NAME, b.SECTION_NAME,
		b.PARA1_NAME,	b.PARA2_NAME,b.PARA3_NAME,b.PARA4_NAME,
		b.PARA5_NAME,b.PARA6_NAME	
		FROM '+@cTAble+' A (NOLOCK) 
		JOIN sku_names  b on A.product_code= b.product_code'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD

END



IF @NQUERY=2
BEGIN

         DECLARE @CERRMSG NVARCHAR(MAX)
         DECLARE @OUTPUT TABLE(VALUE VARCHAR(MAX),MESSAGE VARCHAR(MAX))
         

		   		 	
		
		DECLARE @tDupParas TABLE (section_name varchar(100),sub_section_name varchar(100),article_no VARCHAR(300),para1_name VARCHAR(300),para2_name VARCHAR(300),para3_name VARCHAR(300),
		para4_name VARCHAR(300),para5_name VARCHAR(300),para6_name VARCHAR(300))

		SET @cCmd=N'IF EXISTS (SELECT section_name,sub_section_name,article_no,para1_name,para2_name,para3_name,para4_name,para5_name,para6_name
		FROM '+@cTAble+' GROUP BY section_name,sub_section_name,article_no,para1_name,para2_name,para3_name,para4_name,para5_name,para6_name
		HAVING count(*)>1)
				SELECT section_name,sub_section_name,article_no,para1_name,para2_name,para3_name,para4_name,para5_name,para6_name
				FROM '+@cTAble+' GROUP BY section_name,sub_section_name,article_no,para1_name,para2_name,para3_name,para4_name,para5_name,para6_name
				HAVING count(*)>1
		ELSE
			SELECT TOP 1 section_name,sub_section_name,article_no,para1_name,para2_name,para3_name,para4_name,para5_name,para6_name
				FROM '+@cTAble+' WHERE 1=2
		   '
		INSERT INTO @tDupParas (section_name,sub_section_name,article_no,para1_name,para2_name,para3_name,para4_name,para5_name,para6_name)
		EXEC SP_EXECUTESQL @cCmd

		IF EXISTS (SELECT TOP 1 * from @tDupParas)
		BEGIN
			SET @CERRMSG='Duplicate Para combination not allowed...'
			SELECT @CERRMSG errmsg,1 as dupcheck,* FROM @tDupParas
			GOTO END_PROC  
		END


         
-- VALIDATE ARTICLE NO 
        
        
        SET @CCMD=N'SELECT A.ARTICLE_NO,''ARTICLE NO NOT EXISTS'' FROM '+@cTAble+'  A
		LEFT JOIN ARTICLE  B(NOLOCK) ON LTRIM(RTRIM(A.article_no))=LTRIM(RTRIM(B.ARTICLE_NO))
		WHERE B.article_no IS NULL AND ISNULL(a.article_no,'''')<>'''''
		PRINT @CCMD
		INSERT @OUTPUT (VALUE,MESSAGE)
		EXEC SP_EXECUTESQL @CCMD
	
		IF EXISTS(SELECT TOP 1 'U' FROM @OUTPUT)
		GOTO END_PROC

-- VALIDATE SECTION NAME

         SET @CCMD=N'SELECT A.SECTION_NAME,''SECTION NAME NOT EXISTS'' FROM '+@cTAble+'  A
		LEFT JOIN sectionM  B(NOLOCK) ON LTRIM(RTRIM(A.SECTION_NAME))=LTRIM(RTRIM(B.SECTION_NAME))
		WHERE B.SECTION_NAME IS NULL AND ISNULL(A.SECTION_NAME,'''')<>'''''
		PRINT @CCMD
		INSERT @OUTPUT (VALUE,MESSAGE)
		EXEC SP_EXECUTESQL @CCMD

		IF EXISTS(SELECT TOP 1 'U' FROM @OUTPUT)
		GOTO END_PROC

-- VALIDATE SUB SECTION NAME

         SET @CCMD=N'SELECT A.SUB_SECTION_NAME,''SUB SECTION NAME NOT EXISTS'' FROM '+@cTAble+'  A
		LEFT JOIN SECTIOND  B ON LTRIM(RTRIM(A.SUB_SECTION_NAME))=LTRIM(RTRIM(B.SUB_SECTION_NAME))
		WHERE B.SUB_SECTION_NAME IS NULL AND ISNULL(A.SUB_SECTION_NAME,'''')<>'''''
		PRINT @CCMD
		INSERT @OUTPUT (VALUE,MESSAGE)
		EXEC SP_EXECUTESQL @CCMD
		
		IF EXISTS(SELECT TOP 1 'U' FROM @OUTPUT)
		GOTO END_PROC

-- VALIDATE PARA1 NAME

         SET @CCMD=N'SELECT A.PARA1_NAME,''PARA1 NAME NOT EXISTS'' FROM '+@cTAble+'  A
		LEFT JOIN PARA1  B ON LTRIM(RTRIM(A.PARA1_NAME))=LTRIM(RTRIM(B.PARA1_NAME))
		WHERE B.PARA1_NAME IS NULL AND ISNULL(A.PARA1_NAME,'''')<>'''''
		PRINT @CCMD
		INSERT @OUTPUT (VALUE,MESSAGE)
		EXEC SP_EXECUTESQL @CCMD
		
		IF EXISTS(SELECT TOP 1 'U' FROM @OUTPUT)
		GOTO END_PROC

-- VALIDATE PARA2 NAME

         SET @CCMD=N'SELECT A.PARA2_NAME,''PARA2 NAME NOT EXISTS'' FROM '+@cTAble+'  A
		LEFT JOIN PARA2  B ON LTRIM(RTRIM(A.PARA2_NAME))=LTRIM(RTRIM(B.PARA2_NAME))
		WHERE B.PARA2_NAME IS NULL AND ISNULL(A.PARA2_NAME,'''')<>'''''
		PRINT @CCMD
		INSERT @OUTPUT (VALUE,MESSAGE)
		EXEC SP_EXECUTESQL @CCMD
		
		IF EXISTS(SELECT TOP 1 'U' FROM @OUTPUT)
		GOTO END_PROC

-- VALIDATE PARA3 NAME

         SET @CCMD=N'SELECT A.PARA3_NAME,''PARA3 NAME NOT EXISTS'' FROM '+@cTAble+'  A
		LEFT JOIN PARA3  B ON LTRIM(RTRIM(A.PARA3_NAME))=LTRIM(RTRIM(B.PARA3_NAME))
		WHERE B.PARA3_NAME IS NULL AND ISNULL(A.PARA3_NAME,'''')<>'''''
		PRINT @CCMD
		INSERT @OUTPUT (VALUE,MESSAGE)
		EXEC SP_EXECUTESQL @CCMD
		
		IF EXISTS(SELECT TOP 1 'U' FROM @OUTPUT)
		GOTO END_PROC


-- VALIDATE PARA4 NAME

         SET @CCMD=N'SELECT A.PARA4_NAME,''PARA4 NAME NOT EXISTS'' FROM '+@cTAble+'  A
		LEFT JOIN PARA4  B ON LTRIM(RTRIM(A.PARA4_NAME))=LTRIM(RTRIM(B.PARA4_NAME))
		WHERE B.PARA4_NAME IS NULL AND ISNULL(A.PARA4_NAME,'''')<>'''''
		PRINT @CCMD
		INSERT @OUTPUT (VALUE,MESSAGE)
		EXEC SP_EXECUTESQL @CCMD
		
		IF EXISTS(SELECT TOP 1 'U' FROM @OUTPUT)
		GOTO END_PROC

-- VALIDATE PARA5 NAME

         SET @CCMD=N'SELECT A.PARA5_NAME,''PARA5 NAME NOT EXISTS'' FROM '+@cTAble+'  A
		LEFT JOIN PARA5  B ON LTRIM(RTRIM(A.PARA5_NAME))=LTRIM(RTRIM(B.PARA5_NAME))
		WHERE B.PARA5_NAME IS NULL AND ISNULL(A.PARA5_NAME,'''')<>'''''
		PRINT @CCMD
		INSERT @OUTPUT (VALUE,MESSAGE)
		EXEC SP_EXECUTESQL @CCMD
		
		IF EXISTS(SELECT TOP 1 'U' FROM @OUTPUT)
		GOTO END_PROC

-- VALIDATE PARA6 NAME

         SET @CCMD=N'SELECT A.PARA6_NAME,''PARA6 NAME NOT EXISTS'' FROM '+@cTAble+'  A
		LEFT JOIN PARA6  B ON LTRIM(RTRIM(A.PARA6_NAME))=LTRIM(RTRIM(B.PARA6_NAME))
		WHERE B.PARA6_NAME IS NULL AND ISNULL(A.PARA6_NAME,'''')<>'''''
		PRINT @CCMD
		INSERT @OUTPUT (VALUE,MESSAGE)
		EXEC SP_EXECUTESQL @CCMD
		
		IF EXISTS(SELECT TOP 1 'U' FROM @OUTPUT)
		GOTO END_PROC


-- VALIDATE DISCOUNT_figure NAME

		SET @CCMD=N'SELECT DISCOUNT_figure,''DISCOUNT FIGURE SHOULD BE NUMERIC'' 
		FROM '+@cTAble+' WHERE ISNUMERIC(DISCOUNT_figure)=0 AND ISNULL(DISCOUNT_figure,'''')<>'''' '
		PRINT @CCMD
		INSERT @OUTPUT (VALUE,MESSAGE)
		EXEC SP_EXECUTESQL @CCMD
		
		IF EXISTS(SELECT TOP 1 'U' FROM @OUTPUT)
		GOTO END_PROC
		
		
		SET @CCMD=N'UPDATE  '+@cTAble+' SET 
		ARTICLE_NO=LTRIM(RTRIM(ARTICLE_NO)),
		SECTION_NAME=LTRIM(RTRIM(SECTION_NAME)),
		SUB_SECTION_NAME=LTRIM(RTRIM(SUB_SECTION_NAME)),
		PARA1_NAME=LTRIM(RTRIM(PARA1_NAME)),
		PARA2_NAME=LTRIM(RTRIM(PARA2_NAME)),
		PARA3_NAME=LTRIM(RTRIM(PARA3_NAME)),
		PARA4_NAME=LTRIM(RTRIM(PARA4_NAME)),
		PARA5_NAME=LTRIM(RTRIM(PARA5_NAME)),
		PARA6_NAME=LTRIM(RTRIM(PARA6_NAME)),
		 '




			SET @CCMD=N'SELECT DISTINCT 
			ISNULL(C.SECTION_CODE,'''') AS SECTION_CODE,ISNULL(C.SECTION_NAME ,'''') AS SECTION_NAME,
			ISNULL(D.SUB_SECTION_CODE,'''') AS SUB_SECTION_CODE,ISNULL(D.SUB_SECTION_NAME ,'''') AS SUB_SECTION_NAME,
			ISNULL(B.ARTICLE_CODE,'''') AS ARTICLE_CODE,ISNULL(B.ARTICLE_NO ,'''') AS ARTICLE_NO,
			ISNULL(E.PARA1_CODE,'''') AS PARA1_CODE,ISNULL(E.PARA1_NAME ,'''') AS PARA1_NAME,
			ISNULL(F.PARA2_CODE,'''') AS PARA2_CODE,ISNULL(F.PARA2_NAME ,'''') AS PARA2_NAME,
			ISNULL(G.PARA3_CODE,'''') AS PARA3_CODE,ISNULL(G.PARA3_NAME ,'''') AS PARA3_NAME,
			ISNULL(H.PARA4_CODE,'''') AS PARA4_CODE,ISNULL(H.PARA4_NAME ,'''') AS PARA4_NAME,
			ISNULL(I.PARA5_CODE,'''') AS PARA5_CODE,ISNULL(I.PARA5_NAME ,'''') AS PARA5_NAME,
			ISNULL(J.PARA6_CODE,'''') AS PARA6_CODE,ISNULL(J.PARA6_NAME ,'''') AS PARA6_NAME,
			A.DISCOUNT_figure ,A.DISC_TYPE,
			(CASE WHEN A.DISC_TYPE= ''NET'' THEN 2 WHEN  A.DISC_TYPE= ''AMT'' THEN 3 ELSE 1 END) AS DISCOUNT_MODE
			
			FROM '+@cTAble+'    A (NOLOCK)
			LEFT JOIN ARTICLE   B (NOLOCK) ON A.ARTICLE_NO = B.ARTICLE_NO AND b.inactive=0
			LEFT JOIN sectionM  C (NOLOCK) ON A.SECTION_NAME=C.SECTION_NAME AND c.inactive=0
			LEFT JOIN SECTIOND  D (NOLOCK) ON A.SUB_SECTION_NAME=D.SUB_SECTION_NAME AND c.section_code=d.section_code AND d.inactive=0
			LEFT JOIN PARA1     E (NOLOCK) ON A.PARA1_NAME=E.PARA1_NAME AND e.inactive=0
			LEFT JOIN PARA2     F (NOLOCK) ON A.PARA2_NAME=F.PARA2_NAME AND f.inactive=0
			LEFT JOIN PARA3     G (NOLOCK) ON A.PARA3_NAME=G.PARA3_NAME AND g.inactive=0
			LEFT JOIN PARA4     H (NOLOCK) ON A.PARA4_NAME=H.PARA4_NAME AND h.inactive=0
			LEFT JOIN PARA5     I (NOLOCK) ON A.PARA5_NAME=I.PARA5_NAME AND i.inactive=0
			LEFT JOIN PARA6     J (NOLOCK) ON A.PARA6_NAME=J.PARA6_NAME AND j.inactive=0'

			
			PRINT @CCMD
		   EXEC SP_EXECUTESQL @CCMD
		   GOTO END_PROC

        

END


END_PROC:

          IF EXISTS(SELECT TOP 1 'U' FROM @OUTPUT)
          SELECT * FROM @OUTPUT


END

--EXEC  SP3S_IMPORTEXCEL_SCHEME_SLSBC 1,'','SKU'