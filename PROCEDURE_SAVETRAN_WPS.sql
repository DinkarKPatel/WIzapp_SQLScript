create PROCEDURE SAVETRAN_WPS
(
	@NUPDATEMODE		NUMERIC(1,0),
	@NSPID				varchar(40)='',
	@CMEMONOPREFIX		VARCHAR(50)='',
	@CFINYEAR			VARCHAR(10)='',
	@CMACHINENAME		VARCHAR(100)='',
	@CWINDOWUSERNAME	VARCHAR(100)='',
	@CWIZAPPUSERCODE	VARCHAR(10)='0000000',
	@CMEMOID			VARCHAR(40)='',
	@NBOXNO				NUMERIC(3,0)=0,
	@CPRODUCTCODE		VARCHAR(50)='',
	@BCALLEDFROMPURCHASE BIT = 0,
	@NBOXUPDATEMODE INT=0	
		

)
--WITH ENCRYPTION
AS
BEGIN

	-- @NUPDATEMODE:	1- NEW WHOLESALE PS ADDED, 
	--					2- EDIT A GIVEN PS
	--					3- CURRENT MEMO CANCELLED, 

	--changes by Dinkar in location id varchar(4)..
						
	DECLARE @CTEMPDBNAME			VARCHAR(100),
			@CMASTERTABLENAME		VARCHAR(100),
			@CDETAILTABLENAME		VARCHAR(100),
			@CTEMPMASTERTABLENAME	VARCHAR(100),
			@CTEMPDETAILTABLENAME	VARCHAR(100),
			@CTEMPMASTERTABLE		VARCHAR(100),
			@CTEMPDETAILTABLE		VARCHAR(100),
			@CxnBoxDetails		    VARCHAR(100),
			@CTEMPXNBOXDETAILSNAME	VARCHAR(100),
			@CTEMPxnBoxDetails		VARCHAR(100),
			@CERRORMSG				VARCHAR(500),
			@LDONOTUPDATESTOCK		BIT,
			@CKEYFIELD1				VARCHAR(50),
			@CKEYFIELDVAL1			VARCHAR(50),
			@CMEMONO				VARCHAR(20),
			@NMEMONOLEN				NUMERIC(20,0),
			@CMEMONOVAL				VARCHAR(50),
			@CMEMODEPTID			VARCHAR(2),
			@CLOCATIONID			VARCHAR(4),
			@CHODEPTID				VARCHAR(4),
			@CCMD					NVARCHAR(4000),
			@CCMDOUTPUT				NVARCHAR(4000),
			@NSAVETRANLOOP			BIT,@bServerLoc BIT,
			@cStep					INT,
			@LENABLETEMPDATABASE	BIT,@BNEGSTOCKFOUND BIT,@BALLOWNEGSTOCK BIT,
			@CMSG					VARCHAR(MAX),@BPURLOC BIT,@CHKSTOCKUSERCODE CHAR(7),
			@CPRIFIX				VARCHAR(10),
			@CCURLOC				VARCHAR(10),@bAddmode BIT,
			@BPREFIXLZEROS	BIT,@NENTRYMODE NUMERIC(1,0),@bOrderValidationFailed BIT,
			@CGENCHALLANLIKESERIES VARCHAR(2),@CTARGETLOCID CHAR(4),@NMODE INT,@NCOUNT BIT,
			@BDEBUGMODE bit,@cText varchar(10),@nentry_mode int,@ALLOCATE_BARCODE_IN_PICKLIST varchar(10),
			@CLOCID	VARCHAR(4)
			
					
	DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))
     -- SETTTING UP ENVIRONMENT
	SET @cStep = 0	

	SET @bOrderValidationFailed=0
	set @BDEBUGMODE=1

	set @cText='wps'+ltrim(rtrim(str(@nUpdatemode)))

	EXEC SP_CHKXNSAVELOG @cText,@cStep,0,@NSPID,'',1
	
	SELECT @CPRIFIX = [VALUE]  FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION = 'WPS_RETAIN_W8_SERIES'
	
	   IF @NUPDATEMODE IN (1,2)
	      select @CLOCID=location_Code  from WPS_WPS_MST_UPLOAD (nolock) where SP_ID=@NSPID 
       ELSE
         SELECT @CLOCID=location_Code  FROM WPS_MST  (NOLOCK) WHERE PS_ID=@CMEMOID
	
	 SET @CCURLOC= @CLOCID
	
			--if @@spid=66
			--begin
			--	select 'check bo status b4 saving', inv_qty,quantity,* from buyer_order_det where order_id='0101123000000101000063'
			--end

			
	SELECT @CGENCHALLANLIKESERIES = [VALUE] FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION = 'GENERATE_CHALLAN_SERIES'
	SET @CGENCHALLANLIKESERIES=ISNULL(@CGENCHALLANLIKESERIES,'')

    select top 1 @ALLOCATE_BARCODE_IN_PICKLIST=value  from config where config_option ='ALLOCATE_BARCODE_IN_PICKLIST'
	set @ALLOCATE_BARCODE_IN_PICKLIST=isnull(@ALLOCATE_BARCODE_IN_PICKLIST,'')


	SET @BPREFIXLZEROS=0
    
    SET @cStep = 2

	SET @CTEMPDBNAME = ''
	EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1

	SET @CMASTERTABLENAME	= 'WPS_MST'
	SET @CDETAILTABLENAME	= 'WPS_DET'
	set @CxnBoxDetails      =  'xnBoxDetails'
	

--SELECT * FROM TEMP_WPS_MST_65
	--SET @CTEMPMASTERTABLENAME	= 'TEMP_'+@CMASTERTABLENAME+'_'+LTRIM(RTRIM(@NSPID))
	--SET @CTEMPDETAILTABLENAME	= 'TEMP_'+@CDETAILTABLENAME+'_'+LTRIM(RTRIM(@NSPID))
	
	SET @CTEMPMASTERTABLENAME	= 'WPS_WPS_MST_UPLOAD'
	SET @CTEMPDETAILTABLENAME	= 'WPS_WPS_DET_UPLOAD'
	set @CTEMPXNBOXDETAILSNAME  =  'WPS_xnBoxDetails_UPLOAD'
	

	SET @CTEMPMASTERTABLE	= @CTEMPDBNAME + @CTEMPMASTERTABLENAME
	SET @CTEMPDETAILTABLE	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME
	set @CTEMPxnBoxDetails  = @CTEMPDBNAME + @CTEMPXNBOXDETAILSNAME
	
	SET @cStep = 3
	EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1
	

	SET @CERRORMSG			= ''
	SET @LDONOTUPDATESTOCK	= 0
	SET @CKEYFIELD1			= 'PS_ID'
	SET @CMEMONO			= 'PS_NO'
	SET @NMEMONOLEN			= 10
	
	
	SET @CLOCATIONID= @CLOCID

	SELECT TOP 1 @bServerLoc=ISNULL(server_loc,0) FROM location (NOLOCK) WHERE dept_id=@CLOCATIONID

	SELECT @CHODEPTID		= [VALUE] FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='HO_LOCATION_ID'		

	SET @cStep = 4
	EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1


	DECLARE @CWSLINVNO VARCHAR(50),@DWSLINVDT DATETIME
		    
	SET @cCmd=N'SELECT TOP 1 @CWSLINVNO = INV_NO,@DWSLINVDT=INV_DT FROM '+(CASE WHEN @nUpdatemode=3 THEN 'WPS_MST' ELSE 'WPS_WPS_MST_UPLOAD' END)+'
	 A (NOLOCK) JOIN INM01106 B (NOLOCK) ON A.WSL_INV_ID=B.INV_ID WHERE '+(CASE WHEN @nUpdatemode=3 THEN ' ps_id='''+@CMEMOID+'''' ELSE ' SP_ID = '''+@NsPID+'''' END)+'
	AND B.CANCELLED=0'

	EXEC SP_EXECUTESQL @cCmd,N'@cWslInvNo VARCHAR(50) OUTPUT,@dWslInvDt DATETIME OUTPUT',@CWSLINVNO OUTPUT,@DWSLINVDT OUTPUT
		    
	IF ISNULL(@CWSLINVNO,'')<>''
	BEGIN
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' THIS PACK SLIP ALREADY USED IN WSL INVOICE #'+@CWSLINVNO+' DATED :'+CONVERT(VARCHAR,@DWSLINVDT,105)+'CAN''T EDIT'
		EXEC SP_EXECUTESQL @CCMDOUTPUT
		GOTO END_PROC
	END
		

	IF @NUPDATEMODE IN (1,2)
	BEGIN
	      IF ISNULL(@CLOCATIONID,'')=''
		 BEGIN
			SET @CERRORMSG = ' LOCATION ID CAN NOT BE BLANK  '  
			GOTO END_PROC    
		 END
	    
		-- GETTING DEPT_ID FROM TEMP MASTER TABLE
		-- GETTING DEPT_ID FROM TEMP MASTER TABLE
		SET @CCMD = 'SELECT TOP 1 @CMEMODEPTID = LEFT(PS_NO,2),@NENTRYMODE=ENTRY_MODE,@CHKSTOCKUSERCODE=user_code
						FROM wps_wps_mst_upload (nolock) where sp_id='''+@nSpId+''''
			
		EXEC SP_EXECUTESQL @CCMD, N'@CMEMODEPTID VARCHAR(2) OUTPUT,@NENTRYMODE NUMERIC(1,0) OUTPUT,@CHKSTOCKUSERCODE CHAR(7) OUTPUT', 
							@CMEMODEPTID OUTPUT,@NENTRYMODE OUTPUT,@CHKSTOCKUSERCODE OUTPUT

							   
		IF (@CMEMODEPTID IS NULL )
		BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' ERROR ACCESSING THE RECORD TO BE SAVED... INCORRECT PARAMETER'
				GOTO END_PROC  		
		END

		SELECT @BALLOWNEGSTOCK=VALUE FROM user_role_det a (NOLOCK)
		JOIN users b (NOLOCK) ON a.role_id=b.role_id
		WHERE USER_CODE=@CHKSTOCKUSERCODE 
		AND FORM_NAME='FRMWSLINVOICE' 
		AND FORM_OPTION='ALLOW_NEG_STOCK' --AND @CHKSTOCKUSERCODE<>'0000000'	
	
	
		SET @BALLOWNEGSTOCK =ISNULL(@BALLOWNEGSTOCK,0) 
	END

	IF @NUPDATEMODE NOT IN (3,4,5)
	BEGIN
		SET @cStep = 5
		EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1

		SET @CCMD=N'SELECT @CTARGETLOCID=PARTY_DEPT_ID,@NMODE=PS_MODE FROM '+ @CTEMPMASTERTABLE +' (NOLOCK) WHERE SP_ID='''+LTRIM(RTRIM(@NSPID))+''' '
		EXEC SP_EXECUTESQL @CCMD,N'@CTARGETLOCID CHAR(4) OUTPUT,@NMODE INT OUTPUT',@CTARGETLOCID OUTPUT,@NMODE OUTPUT
		
		IF @CGENCHALLANLIKESERIES='1' AND @NMODE=2
		BEGIN
			SELECT @CMEMONOPREFIX = @CCURLOC+@CTARGETLOCID+'-',@BPREFIXLZEROS=1
		END
		ELSE
		IF (@CPRIFIX='1')
		BEGIN
			SET @CMEMONOPREFIX = RTRIM(LTRIM(@CLOCATIONID))+'S-'
		END	



		DECLARE @NWPS_MEMO_TYPE INT
		SELECT @NWPS_MEMO_TYPE=MEMO_TYPE  FROM WPS_wps_mst_UPLOAD (NOLOCK) WHERE SP_ID= LTRIM(RTRIM(@NSPID))

		IF ISNULL(@NWPS_MEMO_TYPE,0)=2
		BEGIN
		    
			IF RIGHT( @CMEMONOPREFIX,1)='-'
			  SET @CMEMONOPREFIX= SUBSTRING (@CMEMONOPREFIX,1,LEN(@CMEMONOPREFIX)-1)+'E-'
			ELSE 
			  SET @CMEMONOPREFIX=@CMEMONOPREFIX+'E-'

		END

    END

	SET @cStep = 6		-- GETTING DEPTID INFO FROM TEMP TABLE
	EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1

	IF @BCALLEDFROMPURCHASE=0
		BEGIN TRANSACTION
	

BEGIN TRY

	IF @NUPDATEMODE<>1
	BEGIN
		IF @NUPDATEMODE=2
			SELECT TOP 1 @cMemoId=ps_id FROM  wps_wps_mst_UPLOAD (NOLOCK) WHERE sp_id=@nSpId
		
		
	END
	
	IF @NUPDATEMODE IN (1,2)
	BEGIN
		SET @cStep = 194.8
		EXEC SP_CHKXNSAVELOG 'WPS',@cStep,0,@nSpId,'',1
		

		SELECT @CKEYFIELDVAL1=ps_id FROM WPS_wps_mst_UPLOAD (NOLOCK) WHERE sp_id=@nSPId

		EXEC SP3S_CALTOTALS_WPS @nUpdatemode=@nUpdatemode,@cPsId=@CKEYFIELDVAL1,@nSpId=@nSpId,@NBOXUPDATEMODE=@NBOXUPDATEMODE,
		@CERRORMSG=@CERRORMSG OUTPUT

		IF ISNULL(@CERRORMSG,'')<>''
			GOTO END_PROC
       
	   EXEC SP3S_upd_qty_lastupdate
			@nUpdateMode=@NUPDATEMODE,
			@cXnType='WPS',
			@cMasterTable='WPS_mst',
			@cMemoIdCol='ps_id',
			@cMemoId=@CKEYFIELDVAL1,
			@cXnDtCol='ps_dt',
			@nSpId=@nSpid,
			@CERRORMSG=@CERRORMSG OUTPUT

			IF ISNULL(@CERRORMSG,'')<>''
		       GOTO END_PROC


	END

	DECLARE @BBYPASSDETINSERT BIT
	SET @BBYPASSDETINSERT=0

		/*STOCK UPDATE CHANGES*/
	IF OBJECT_ID('TEMPDB..#BARCODE_NETQTY','U') IS NOT NULL
		DROP TABLE #BARCODE_NETQTY

	SELECT DEPT_ID,BIN_ID,PRODUCT_CODE,quantity_in_stock AS XN_QTY,CONVERT(BIT,0) AS bin_transfer
	,CONVERT(BIT,0) AS new_entry,bo_order_id ,
	cast('' as varchar(100)) as Pick_list_id
	INTO #BARCODE_NETQTY FROM PMT01106 (NOLOCK) WHERE 1=2
	/*STOCK UPDATE CHANGES*/

	-- as Discussed With sir normalization not required In Saving(26042023)
	--IF @NUPDATEMODE NOT IN(3,4,5)     
 --   BEGIN  
	--	  SET @cStep = 7
	--	  EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1
	 
	--		SET @cStep = 8
	--	    EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1
	--	    EXEC SP3S_NORMALIZE_FIX_PRODUCT_CODE 'WPS',@NSPID,@NUPDATEMODE,
	--	    @CTEMPDETAILTABLE,'',@CERRORMSG OUTPUT,@CTEMPMASTERTABLE,@CLOCID
	--	    IF ISNULL(@CERRORMSG,'')<>''
	--		BEGIN
	--			SET @CERRORMSG='ERROR IN NORMALIZATION '+@CERRORMSG
	--			GOTO END_PROC
			
	--	    end
	--END
		

	IF @NUPDATEMODE IN (2,3,4,5) AND NOT (@nUpdatemode=2 AND @NBOXUPDATEMODE=1)		
	BEGIN

		SET @cStep = 19		-- SETTTING UP ENVIRONMENT
		EXEC SP_CHKXNSAVELOG 'wPS',@cStep,1,@nSpId,'',1	 

	   
		 IF @ALLOCATE_BARCODE_IN_PICKLIST='1' AND EXISTS (SELECT TOP 1 'U' FROM WPS_MST (NOLOCK) WHERE PS_ID=@CMEMOID AND ENTRY_MODE =4)
		 BEGIN
                
			SET @cCmd=N'SELECT A.DEPT_ID,A.BIN_ID,A.PRODUCT_CODE,-SUM(A.QUANTITY),0 as bin_transfer,0 as new_entry,bd.order_id,
			  pld.MEMO_ID as Pick_list_id
			FROM WPS_DET A (NOLOCK)
			join wps_mst mst (nolock) on a.ps_id=mst.ps_id
			JOIN SKU_names B (NOLOCK) ON A.product_code=B.product_code
			JOIN PLD01106 PLD (NOLOCK) ON PLD.ROW_ID=A.PICK_LIST_ROW_ID
			JOIN BUYER_ORDER_DET BD (NOLOCK) ON BD.ROW_ID=PLD.ORD_ROW_ID
			WHERE A.ps_ID='''+@cMemoId+''' AND ISNULL(b.stock_na,0)=0  '+
			(CASE WHEN @nUpdatemode=4 THEN ' and a.box_no='+LTRIM(RTRIM(STR(@nBoxNo)))
					WHEN @nUpdatemode=5 THEN ' and a.product_code='''+LTRIM(RTRIM(@CPRODUCTCODE))+''''
					ELSE ' AND 1=1 ' END)+' GROUP BY A.DEPT_ID,A.BIN_ID,A.PRODUCT_CODE,bd.order_id,pld.MEMO_ID
					 '
			
			print @cCmd
			INSERT #BARCODE_NETQTY(DEPT_ID,BIN_ID,PRODUCT_CODE,XN_QTY,bin_transfer,new_entry,bo_order_id,Pick_list_id )	
			EXEC SP_EXECUTESQL @cCmd
      

		 end
		 else
		 begin
		
			SET @cCmd=N'SELECT A.DEPT_ID,A.BIN_ID,A.PRODUCT_CODE,-SUM(A.QUANTITY),0 as bin_transfer,0 as new_entry
			FROM WPS_DET A (NOLOCK)
			join wps_mst mst (nolock) on a.ps_id=mst.ps_id
			JOIN SKU_names B (NOLOCK) ON A.product_code=B.product_code
			WHERE A.ps_ID='''+@cMemoId+''' AND ISNULL(b.stock_na,0)=0  '+
			(CASE WHEN @nUpdatemode=4 THEN ' and a.box_no='+LTRIM(RTRIM(STR(@nBoxNo)))
					WHEN @nUpdatemode=5 THEN ' and a.product_code='''+LTRIM(RTRIM(@CPRODUCTCODE))+''''
					ELSE ' AND 1=1 ' END)+' GROUP BY A.DEPT_ID,A.BIN_ID,A.PRODUCT_CODE
					 '
			
			print @cCmd
			INSERT #BARCODE_NETQTY(DEPT_ID,BIN_ID,PRODUCT_CODE,XN_QTY,bin_transfer,new_entry)	
			EXEC SP_EXECUTESQL @cCmd
      


		end
	  SET @cStep = 20


	END
		
	IF @NUPDATEMODE IN (1,2)
	BEGIN
		SET @cStep = 19.4		-- SETTTING UP ENVIRONMENT
		EXEC SP_CHKXNSAVELOG 'wPS',@cStep,1,@nSpId,'',1	 

		
		 if @ALLOCATE_BARCODE_IN_PICKLIST='1' and exists (select top 1 'u' from WPS_WPS_mst_UPLOAD where sp_id=@nSpId and entry_mode=4)
		 begin

		        INSERT #BARCODE_NETQTY(DEPT_ID,BIN_ID,PRODUCT_CODE,XN_QTY,bin_transfer,new_entry,BO_ORDER_ID,Pick_list_id)
				SELECT A.DEPT_ID,A.BIN_ID,A.PRODUCT_CODE,SUM(A.QUANTITY),0 as bin_transfer,1 as new_entry,bd.order_id,
				       pld.MEMO_ID as Pick_list_id
				FROM WPS_WPS_DET_UPLOAD A (NOLOCK)
				JOIN PLD01106 PLD (NOLOCK) ON PLD.ROW_ID=A.PICK_LIST_ROW_ID
				JOIN BUYER_ORDER_DET BD (NOLOCK) ON BD.ROW_ID=PLD.ORD_ROW_ID
				JOIN SKU_names B (NOLOCK) ON A.product_code=B.product_code
				WHERE A.sp_ID=@nSpId AND ISNULL(b.stock_na,0)=0 
				GROUP BY A.DEPT_ID,A.BIN_ID,A.PRODUCT_CODE,bd.order_id,pld.MEMO_ID 

		 end
		 else
		 begin

			INSERT #BARCODE_NETQTY(DEPT_ID,BIN_ID,PRODUCT_CODE,XN_QTY,bin_transfer,new_entry)
			SELECT A.DEPT_ID,A.BIN_ID,A.PRODUCT_CODE,SUM(A.QUANTITY),0 as bin_transfer,1 as new_entry
			FROM WPS_WPS_DET_UPLOAD A (NOLOCK)
			JOIN SKU_names B (NOLOCK) ON A.product_code=B.product_code
			WHERE A.sp_ID=@nSpId AND ISNULL(b.stock_na,0)=0 
			GROUP BY A.DEPT_ID,A.BIN_ID,A.PRODUCT_CODE
           
		   end
		
	END


	SET @cStep = 20.1 
	EXEC SP_CHKXNSAVELOG 'wPS',@cStep,0,@nSpId,'',1
	
	IF @NUPDATEMODE IN (3,4,5)--NEW ADD UNMERGED DATA: 29-04-2014		
	BEGIN
		SET @CKEYFIELDVAL1=@CMEMOID
		SET @cStep = 10
			
		IF ISNULL(@CMEMOID,'') = ''
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' MEMO ID REQUIRED .....CANNOT PROCEED'
			GOTO END_PROC  		
		END
			
		IF @NUPDATEMODE=4 AND ISNULL(@NBOXNO,0)=0 --NEW ADD UNMERGED DATA: 29-04-2014
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' BOX NO. REQUIRED .....CANNOT PROCEED'
			GOTO END_PROC  		
		END
			
		IF @NUPDATEMODE=5 AND ISNULL(@CPRODUCTCODE,'')='' --NEW ADD UNMERGED DATA: 29-04-2014
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' BAR CODE NO. REQUIRED .....CANNOT PROCEED'
			GOTO END_PROC  		
		END
			
			
		SELECT @NENTRY_MODE=ENTRY_MODE   FROM WPS_MST (NOLOCK) WHERE PS_ID =	@CKEYFIELDVAL1
		

		IF ISNULL(@NENTRY_MODE,0) in  (1,3,4)
		BEGIN

				EXEC SP3S_VALIDATE_INV_PICKLIST_QTY
				@CKEYFIELDVAL=@CKEYFIELDVAL1,
				@NREVERTFLAG=1,
				@CXNTYPE='WPS',
				@NUPDATEMODE=@NUPDATEMODE,
				@NBOXNO=@NBOXNO,
				@CPRODUCTCODE=@CPRODUCTCODE,
				@CERRORMSG=@CERRORMSG OUTPUT,
				@bOrderValidationFailed=@bOrderValidationFailed OUTPUT 

				IF ISNULL(@CERRORMSG,'')<>''
					GOTO END_PROC
				   
		END
				
			
		SET @cStep = 25	
		EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1
		PRINT 'REVERING BACK STOCK'
		
		IF(@NUPDATEMODE=3)
		set @BALLOWNEGSTOCK=1
		
		EXEC SP3S_UPDATE_PMTSTOCK_WPS
			@cMemoId=@cMemoId,
			@bRevertFlag=1,
			@BALLOWNEGSTOCK=@BALLOWNEGSTOCK,
			@nSpId=@nSpId,
			@BNEGSTOCKFOUND=@BNEGSTOCKFOUND OUTPUT

		IF @NUPDATEMODE IN (3,4,5)
		BEGIN
			SET @cStep = 30	
			EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1

			EXEC SP3S_upd_qty_lastupdate
			@nUpdateMode=3,
			@cXnType='WPS',
			@cMasterTable='WPS_mst',
			@cMemoIdCol='Ps_id',
			@cMemoId=@CMEMOID,
			@CERRORMSG=@CERRORMSG OUTPUT

			IF @CERRORMSG<>''
				GOTO END_PROC
		END

		IF(@NUPDATEMODE=3)
		BEGIN
			SET @cStep = 35
			EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1

			-- UPDATING SENTTOHO FLAG
			SET @CCMD = N'UPDATE ' + @CMASTERTABLENAME + ' SET CANCELLED = 1,LAST_UPDATE=GETDATE() ' + 
						N' WHERE ' + @CKEYFIELD1 + ' = ''' + @CMEMOID + ''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			
			--IF EXISTS (SELECT TOP 1 'U' FROM WPS_MST (NOLOCK) WHERE PS_ID=@CMEMOID AND ISNULL(GITBIN_INV_ID,'')<>'')
			--begin
			    
			--    ;with GItBin_can as 
			--    (
			--    select GITBIN_PS_ID,GITBIN_INV_ID  from wps_Det a (nolock)
			--    join wps_mst b (nolock) on a.ps_id=b.ps_id 
			--    where a.ps_Id=@CMEMOID
			--    group by GITBIN_PS_ID,GITBIN_INV_ID
			--    )
			    
			--    Update a set GIT_RECEIVED =1 from XNRECON_GITBIN a
			--    join GItBin_can b on a.PS_ID=b.GITBIN_PS_ID and a.INV_ID =b.GITBIN_INV_ID 
			    
			  
			
			--end

	

			GOTO END_PROC
		END	
			
		
		SET @cStep = 42
		EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1

		IF(@NUPDATEMODE=4)--NEW ADD UNMERGED DATA: 29-04-2014
		BEGIN
			PRINT 'A2'
			IF EXISTS (SELECT TOP 1 BOX_NO FROM WPS_DET WHERE PS_ID=@CMEMOID AND BOX_NO=@NBOXNO)
			BEGIN   

			        IF ISNULL(@NENTRY_MODE,0) =3
					BEGIN
					    	DELETE B  FROM WPS_DET A (NOLOCK)
				            JOIN BUYER_ORDER_WPS_LINK B (NOLOCK) ON A.ROW_ID =B.WPS_DET_ROW_ID
				            WHERE A.PS_ID=@CKEYFIELDVAL1 AND A.BOX_NO=@NBOXNO 
					END

					PRINT 'A3'
					SET @CCMD = N'DELETE FROM WPS_DET WITH (ROWLOCK) WHERE PS_ID = ''' +@CMEMOID + ''' AND
									BOX_NO='+LTRIM(RTRIM(STR(@NBOXNO)))
					PRINT @CCMD
					EXEC SP_EXECUTESQL @CCMD

					IF EXISTS (SELECT TOP 1 'U'FROM XNBOXDETAILS A (NOLOCK) WHERE REF_MEMO_ID =@CMEMOID AND BOX_NO =@NBOXNO AND XN_TYPE='WPS')
					BEGIN
					      DELETE A  FROM XNBOXDETAILS A (NOLOCK) WHERE REF_MEMO_ID =@CMEMOID AND BOX_NO =@NBOXNO AND XN_TYPE='WPS'

					END
					
			END
			ELSE
			BEGIN
					SET @CERRORMSG='INVALID BOX NO. PROVIDED.....PLEASE CHECK'
					GOTO END_PROC
			END	
		END
		ELSE IF(@NUPDATEMODE=5)
		BEGIN
			    
				  IF ISNULL(@NENTRY_MODE,0) =3
					BEGIN
					    	DELETE B  FROM WPS_DET A (NOLOCK)
				            JOIN BUYER_ORDER_WPS_LINK B (NOLOCK) ON A.ROW_ID =B.WPS_DET_ROW_ID
				            WHERE A.PS_ID=@CKEYFIELDVAL1 AND A.PRODUCT_CODE=@CPRODUCTCODE 
					END


				SET @CCMD = N'DELETE FROM WPS_DET WITH  (ROWLOCK) WHERE PS_ID = ''' +@CMEMOID + ''' AND
								PRODUCT_CODE='''+@CPRODUCTCODE+''''
				print @cCmd
				EXEC SP_EXECUTESQL @CCMD

				 IF EXISTS (SELECT TOP 1 'U' FROM XNBOXDETAILS A (NOLOCK) WHERE REF_MEMO_ID =@CMEMOID AND BOX_NO =@NBOXNO AND XN_TYPE='WPS')
					BEGIN

					      declare @ntotalXNITEMWEIGHT numeric(10,3)
						  select @ntotalXNITEMWEIGHT=sum(XNITEMWEIGHT)  FROM WPS_det  A (NOLOCK) 
						  WHERE ps_id =@CMEMOID AND BOX_NO =@NBOXNO 

						  UPDATE A SET  XNITEMWEIGHT=@ntotalXNITEMWEIGHT
						  FROM XNBOXDETAILS A (NOLOCK) WHERE REF_MEMO_ID =@CMEMOID AND BOX_NO =@NBOXNO AND XN_TYPE='WPS'

					END
				
		END



		if @nUpdatemode in (4,5)
		begin
			EXEC SP3S_CALTOTALS_WPS @nUpdatemode=@nUpdatemode,@cPsId=@CKEYFIELDVAL1,@nSpId='',@NBOXUPDATEMODE=@NBOXUPDATEMODE,
			@CERRORMSG=@CERRORMSG OUTPUT

			GOTO END_PROC
		end
	END
	ELSE
	-- START UPDATING XN TABLES	
	IF @NUPDATEMODE = 1 -- ADDMODE	
	BEGIN	
		-- GENERATING NEW JOB ORDER NO		
		SET @NSAVETRANLOOP=0
		WHILE @NSAVETRANLOOP=0
		BEGIN
			

			SET @cStep = 45		-- GENERATING NEW KEY
			EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1
				
			EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX,@BPREFIXLZEROS,
							@CFINYEAR,0, @CMEMONOVAL OUTPUT   
			
			
			SET @cStep = 50
			EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1

			PRINT @CMEMONOVAL
			SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+'  (NOLOCK)
									WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' 
									AND FIN_YEAR = '''+@CFINYEAR+''' )
							SET @NLOOPOUTPUT=0
						ELSE
							SET @NLOOPOUTPUT=1'
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
		END

		IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
		BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' ERROR CREATING NEXT MEMO NO....'	
				GOTO END_PROC  		
		END

		SET @cStep = 55		-- GENERATING NEW ID
		EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1

		-- GENERATING NEW JOB ORDER ID
		SET @CKEYFIELDVAL1 = @CLOCATIONID + RIGHT(@CFINYEAR,2)+REPLICATE('0', (22-LEN(@CLOCATIONID + RIGHT(@CFINYEAR,2)))-LEN(LTRIM(RTRIM(@CMEMONOVAL))))  + LTRIM(RTRIM(@CMEMONOVAL))
		
		IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
		BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' ERROR CREATING NEXT MEMO ID....'
				-- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'
				GOTO END_PROC
		END

		SET @cStep = 60		-- UPDATING NEW ID INTO TEMP TABLES
		EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1

		-- UPDATING NEWLY GENERATED JOB ORDER NO AND JOB ORDER ID IN PIM AND PID TEMP TABLES
		SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' WITH (ROWLOCK) SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' + 
					@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE SP_ID='''+LTRIM(RTRIM(@NSPID))+''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @cStep = 65
		EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1

		SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE + ' WITH (ROWLOCK) SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE SP_ID='''+LTRIM(RTRIM(@NSPID))+''''
			
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
			
	END					-- END OF ADDMODE
	ELSE				
	IF @NUPDATEMODE=2	-- CALLED FROM EDITMODE
	BEGIN				-- START OF EDITMODE
		
			
		SET @cStep = 80
		EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1
		-- GETTING MEMO ID WHICH IS BEING EDITED
		SET @CCMD = 'SELECT @CKEYFIELDVAL1 = ' + @CKEYFIELD1 + ', @CMEMONOVAL = ' + @CMEMONO + ' FROM '
					+ (CASE WHEN @NUPDATEMODE=3 THEN @CMASTERTABLENAME + ' (NOLOCK) WHERE PS_ID = ''' + @CMEMOID + '''' --MANISH
							ELSE @CTEMPMASTERTABLE +' (NOLOCK) WHERE SP_ID='''+LTRIM(RTRIM(@NSPID))+'''' END )
			
		EXEC SP_EXECUTESQL @CCMD, N'@CKEYFIELDVAL1 VARCHAR(50) OUTPUT, @CMEMONOVAL VARCHAR(50) OUTPUT', 
							@CKEYFIELDVAL1 OUTPUT, @CMEMONOVAL OUTPUT
							   
		IF (@CKEYFIELDVAL1 IS NULL ) OR (@CMEMONOVAL IS NULL )
		BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'
				GOTO END_PROC  		
		END


		SET @cStep = 85		-- STORING OLD STATUS OF BARCODES 
        EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1
			
		-- UPDATING SENTTOHO FLAG
		SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' WITH (ROWLOCK) SET LAST_UPDATE=GETDATE() WHERE SP_ID='''+LTRIM(RTRIM(@NSPID))+''''
		EXEC SP_EXECUTESQL @CCMD
			
		SET @cStep = 95		-- REVERTING STOCK
		EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1

			SELECT @NENTRY_MODE=entry_mode   FROM WPS_mst (NOLOCK) WHERE ps_id =	@CKEYFIELDVAL1

			--if @@spid=66
			--select 'check entry mode',@nSpId,@nentry_mode
			
			IF ISNULL(@NENTRY_MODE,0) IN (1,3) AND @NBOXUPDATEMODE<>1
			BEGIN

				EXEC SP3S_VALIDATE_INV_PICKLIST_QTY
				@CKEYFIELDVAL=@nSpId,
				@NREVERTFLAG=1,
				@CXNTYPE='WPS',
				@NUPDATEMODE=@NUPDATEMODE,
				@CERRORMSG=@CERRORMSG OUTPUT,
				@bOrderValidationFailed=@bOrderValidationFailed OUTPUT					 

				IF ISNULL(@CERRORMSG,'')<>''
				GOTO END_PROC
				   
			END
			
			-- ENTRY IN AUDIT TRAIL (ONLY WHEN USER EXPLICITLY CLICKED ON EDIT BUTTON)
			SET @cStep = 90		-- AUDIT TRIAL ENTRY
			EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1
			-- REVERTING BACK THE STOCK OF PMT W.R.T CURRENT ISSUE
			
	END	
			
	SET @cStep = 98
	EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1
	-- RECHECKING IF ID IS STILL LATER
	IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
	BEGIN
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' ERROR CREATING NEXT MEMO ID....'
		GOTO END_PROC
	END

	SET @cStep = 100		-- UPDATING MASTER TABLE
				
	SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + '  WITH (ROWLOCK) SET EDT_USER_CODE=(CASE WHEN ISNULL(EDT_USER_CODE,'''')=''''
					THEN ''0000000'' ELSE EDT_USER_CODE END) WHERE SP_ID='''+LTRIM(RTRIM(@NSPID))+''''
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD
		
	SET @cStep = 105
	EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1
	DECLARE @CWHERECLAUSE VARCHAR(1000)
    SET @CWHERECLAUSE = ' SP_ID='''+LTRIM(RTRIM(@NSPID))+''''

	declare @lInsertonly bit,@cUpdatestr VARCHAR(4000),@LUPDATEONLY BIT
	SET  @LUPDATEONLY = 0
	SET @lInsertonly = (CASE WHEN @NUPDATEMODE=1 THEN 1 ELSE 0 END)

	IF @NUPDATEMODE=2 
	BEGIN
		SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr  (NOLOCK) where sp_id=@nSPId AND  tablename='wps_mst'
		SET @LUPDATEONLY = 1
	END



	EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN 
		  @CSOURCEDB	= @CTEMPDBNAME
		, @CSOURCETABLE = @CTEMPMASTERTABLENAME
		, @CDESTDB		= ''
		, @CDESTTABLE	= @CMASTERTABLENAME
		, @CKEYFIELD1	= @CKEYFIELD1
		,@BALWAYSUPDATE = 1
	    , @lUpdatexns = @lINSERTONLY
        ,@CFILTERCONDITION=@CWHERECLAUSE
		, @LUPDATEONLY = @LUPDATEONLY

	SET @cStep = 110		-- UPDATING TRANSACTION TABLE
	EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1

	-- UPDATING ROW_ID IN TEMP TABLES
	UPDATE wps_wps_det_upload WITH (ROWLOCK) SET ROW_ID = @CLOCATIONID + CONVERT(VARCHAR(40), NEWID())
	WHERE SP_ID=@NSPID AND LEFT(ROW_ID,5) = 'LATER'
		

	-- DELETING EXISTING ENTRIES FROM PID01106 TABLE WHERE ROW_ID NOT FOUND IN TEMPTABLE
	SET @cStep = 120		-- UPDATING TRANSACTION TABLE

	-- INSERTING/UPDATING THE ENTRIES IN PRD_JID TABLE FROM TEMPTABLE
		-- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES

	IF @NBOXUPDATEMODE=1
	BEGIN
		EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN 
				@CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPDETAILTABLENAME
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CDETAILTABLENAME
			, @CKEYFIELD1	= 'ROW_ID'
			,@BALWAYSUPDATE = 1
			,@lInsertonly=1
			,@lUpdatexns = 1
			,@CFILTERCONDITION=@CWHERECLAUSE
	END


	if exists ( SELECT TOP 1 'U' FROM WPS_XNBOXDETAILS_UPLOAD WHERE SP_ID=@NSPID AND Ref_memo_id <>'XXXXXXXXXX')
		begin
		   
		   SET @LINSERTONLY=1
		   SET @LUPDATEONLY=0
		   IF @NUPDATEMODE <>1 AND  EXISTS (SELECT TOP 1'U' FROM XNBOXDETAILS A (NOLOCK) WHERE A.REF_MEMO_ID =@CKEYFIELDVAL1 
		        AND A.XN_TYPE ='WPS' AND BOX_NO =@NBOXNO)
			BEGIN
			   SET @LUPDATEONLY=1
			   SET @LINSERTONLY=0
			END

			UPDATE WPS_XNBOXDETAILS_UPLOAD SET REF_MEMO_ID =@CKEYFIELDVAL1 WHERE SP_ID=@NSPID
			print '##check WPS_XNBOXDETAILS_UPLOAD'
		
	

		   EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPXNBOXDETAILSNAME
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CxnBoxDetails
			, @CKEYFIELD1	= 'Ref_memo_id'
			, @CKEYFIELD2    ='xn_type'
			, @CKEYFIELD3   ='Box_no'
			, @BALWAYSUPDATE = 1
			, @CFILTERCONDITION=@cWhereClause
			, @LINSERTONLY =  @LINSERTONLY
		     ,@LUPDATEONLY  =@LUPDATEONLY
		    , @LUPDATEXNS =  1 

		


		end

LBLUPDATESTOCK:
	
	SET @cStep = 123
	print 'step 123:'+convert(varchar,getdate(),113)	
	EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1
    SELECT @NENTRY_MODE=ENTRY_MODE  FROM WPS_MST (NOLOCK) WHERE PS_ID =	@CKEYFIELDVAL1
	
 	
	EXEC SP3S_VALIDATE_INV_PICKLIST_QTY
	@CKEYFIELDVAL=@nSpId,
	@NREVERTFLAG=0,
	@CXNTYPE='WPS',
	@NUPDATEMODE=@NUPDATEMODE,
	@CERRORMSG=@CERRORMSG OUTPUT,
	@bOrderValidationFailed=@bOrderValidationFailed OUTPUT					 

	IF ISNULL(@CERRORMSG,'')<>''
		GOTO END_PROC

		
	
	IF @NUPDATEMODE IN (1,2) AND @NBOXUPDATEMODE=1
	BEGIN
		-- UPDATING STOCK OF PMT W.R.T. CURRENT MEMO
		SET @cStep = 130		-- UPDATING PMT TABLE
		EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1
		--SELECT @CMEMONOVAL
	
		EXEC SP3S_UPDATE_PMTSTOCK_WPS
			@cMemoId=@cMemoId,
			@bRevertFlag=0,
			@BALLOWNEGSTOCK=@BALLOWNEGSTOCK,
			@nSpId=@nSpId,
			@BNEGSTOCKFOUND=@BNEGSTOCKFOUND OUTPUT

		IF @BNEGSTOCKFOUND=1
			GOTO END_PROC	
	END
	

	SET @cStep = 133
	print 'step 123:'+convert(varchar,getdate(),113)	
	EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1
		DECLARE @CPARTY_DEPT_ID VARCHAR(4),@NINVMODE INT
		SELECT @CPARTY_DEPT_ID= PARTY_DEPT_ID,@NINVMODE=ps_mode   FROM wps_mst (nolock) WHERE ps_id=@CKEYFIELDVAL1

		IF @NINVMODE=2
		BEGIN
			SET @cStep = 137
			print 'step 123:'+convert(varchar,getdate(),113)	
			EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1
	
		  EXEC VALIDATEXN_POSCATEGORY 'wps',@CKEYFIELDVAL1,@NUPDATEMODE,@cparty_dept_id,@CERRORMSG OUTPUT 

		  IF ISNULL(@CERRORMSG,'')<>''
				GOTO END_PROC

		END

	
		
	SET @cStep = 150
	EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1
							
				
	DECLARE @NTAXFLAG NUMERIC(1,0)
		
    DECLARE @NMEMOTYPE INT
	SELECT @NMEMOTYPE=MEMO_TYPE  FROM wps_mst (NOLOCK)  WHERE ps_id =@CKEYFIELDVAL1
	IF ISNULL(@NMEMOTYPE,0)=0
		UPDATE A SET MEMO_TYPE =1  FROM wps_mst A  WITH (ROWLOCK) WHERE ps_id =@CKEYFIELDVAL1

	DECLARE @CPCCODE VARCHAR(100)
	SELECT TOP 1 @CPCCODE=A.PRODUCT_CODE 
	FROM wps_det  A (NOLOCK)
	JOIN wps_mst  B (NOLOCK) ON A.ps_id  =B.ps_id 
	JOIN SKU (NOLOCK) ON A.PRODUCT_CODE =SKU.PRODUCT_CODE 
	WHERE A.ps_id =@CKEYFIELDVAL1
	AND CASE WHEN ISNULL(SKU.ER_FLAG ,0) IN(0,1) THEN 1 ELSE SKU.ER_FLAG END <>isnull(B.MEMO_TYPE ,0)

	IF ISNULL(@CPCCODE,'')<>''
	BEGIN
	    
			SELECT A.PRODUCT_CODE,
					SKU_ERFLAG=  CASE WHEN ISNULL(SKU.ER_FLAG ,0) IN(0,1) THEN 1 ELSE SKU.ER_FLAG END ,
					WPS_MEMO_TYPE =B.MEMO_TYPE,
					ERRMSG ='Mismatch Packslip and barcode Er flag'
			FROM wps_det  A (NOLOCK)
			JOIN wps_mst  B (NOLOCK) ON A.ps_id =B.ps_id 
			JOIN SKU (NOLOCK) ON A.PRODUCT_CODE =SKU.PRODUCT_CODE 
			WHERE A.ps_id =@CKEYFIELDVAL1
			AND CASE WHEN ISNULL(SKU.ER_FLAG ,0) IN(0,1) THEN 1 ELSE SKU.ER_FLAG END <>isnull(B.MEMO_TYPE ,0)

			SET @CERRORMSG = 'Mismatch Packslip and barcode Er flag' 
			GOTO END_PROC

	END

	IF EXISTS (SELECT TOP 1 'U' FROM WPS_DET (NOLOCK) WHERE PS_ID=@CKEYFIELDVAL1 AND ISNULL(RATE,0)=0)
	BEGIN
		    
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' Rate can not be zoro : '
		GOTO END_PROC
		 
	END
    
	-- AFTER SUCCESSFUL SAVING , JUST DROP THE TEMP TABLES CREATED BY APPLICATION

	set @cStep=190
	EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1


	GOTO END_PROC
		
END TRY
BEGIN CATCH
	SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
	-- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG, '''' AS MEMO_ID'
		
	GOTO END_PROC
END CATCH
	
END_PROC:

	IF @@TRANCOUNT>0 AND @BCALLEDFROMPURCHASE=0
	BEGIN
		IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')=''
		BEGIN
			SET @cStep = 295
			EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1

			--if @@spid=66
			--begin
			--	set @CERRORMSG='Forced error'
			--	select 'check bo status', inv_qty,quantity,* from buyer_order_det where order_id='0101123000000101000063'
			--end
			IF ISNULL(@CERRORMSG,'')=''  and isnull(@BNEGSTOCKFOUND,0)=0
			BEGIN
				

				 SET @cStep = 302
				 EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1

				
				commit	
				DELETE A  FROM XNTYPE_CHECKSUM_MST A  WITH (ROWLOCK)  WHERE SP_ID=@NSPID
				update wps_mst with (rowlock) set HO_SYNCH_LAST_UPDATE='',
				reconciled=0,last_update=getdate() WHERE ps_id=@CKEYFIELDVAL1

			END	
			ELSE
			begin
				ROLLBACK
                DELETE A  FROM XNTYPE_CHECKSUM_MST A  WITH (ROWLOCK)  WHERE SP_ID=@NSPID
			end
					
		END	
		ELSE
		begin
			ROLLBACK
			DELETE A  FROM XNTYPE_CHECKSUM_MST A  WITH (ROWLOCK)  WHERE SP_ID=@NSPID
		end
	END
	
	DELETE A  FROM XNTYPE_CHECKSUM_MST A  WITH (ROWLOCK)  WHERE SP_ID=@NSPID


	--IF @@SPID=415
	--	SELECT @bOrderValidationFailed OrderValidationFailed

	IF ISNULL(@BNEGSTOCKFOUND,0)=0 AND @bOrderValidationFailed=0
	BEGIN
		INSERT @OUTPUT ( ERRMSG, MEMO_ID)
				VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )
		
		IF @BCALLEDFROMPURCHASE=0
			SELECT ERRMSG,MEMO_ID FROM @OUTPUT	
		ELSE
			INSERT #TMPOUTPUT (MEMO_ID,ERRMSG)
			SELECT MEMO_ID,ERRMSG FROM @OUTPUT	
	END	

  EXEC SP_DELETEUPLOADTABLES 'WPS',@nSpId

	DELETE A FROM WPS_XNBOXDETAILS_UPLOAD A (NOLOCK) WHERE SP_ID=@NSPID

	SET @cStep = 306
	EXEC SP_CHKXNSAVELOG 'wps',@cStep,0,@NSPID,'',1

END											
------------------------------------------------------ END OF PROCEDURE SAVETRAN_WPS