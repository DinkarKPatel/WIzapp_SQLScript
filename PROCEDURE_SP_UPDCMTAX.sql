CREATE PROCEDURE SP_UPDCMTAX--(LocId 3 digit change by Sanjay:06-11-2024)
@DFROMDT DATETIME,
@DTODT DATETIME,
@CDEPT_ID VARCHAR(4)='',
@CCMID VARCHAR(40)='',
@BCALLEDFROMSAVEBILL BIT=0,
@NBILLLEVELDISCPCT NUMERIC(10,2)=0,
@BCAL_EXCLUSIVE_TAX_FORCELY BIT=0,
@CLOGINUSERCODE CHAR(7)='0000000',
@BUPDATEHSN BIT =0,
@NGSTBUILDMODE NUMERIC(1,0)=1  -- CONSIDER 1 FOR RETAIL SALE  2. FOR RCM

AS
BEGIN
	BEGIN TRY


	 IF @NGSTBUILDMODE=2
	    GOTO RCM_CALCULATE
	  
	   DECLARE @CGST_CALCULATE_BEFORE_10_OCLOCK VARCHAR(5)
	  SELECT @CGST_CALCULATE_BEFORE_10_OCLOCK=value  FROM config WHERE config_option='GST_CALCULATE_BEFORE_10_OCLOCK'

		
		PRINT 'SP_UPDCMTAX-1'
		DECLARE @TRETMSG TABLE  (ERRMSG VARCHAR(MAX))
		
		DECLARE @NSTEP INT,@CERRORMSG VARCHAR(MAX),@CLOCSSTMEMOID VARCHAR(40),@CEXCHANGESTR VARCHAR(200),
				@CSUBSECTIONCODE CHAR(7),@NNET NUMERIC(10,2),@NMRP NUMERIC(10,2),@NQTY NUMERIC(10,3),
				@CHOLOCID VARCHAR(4),@CLOCATIONID VARCHAR(4),@CSTATECODE CHAR(7),@CCMD NVARCHAR(MAX),@CCMLOCID VARCHAR(4),
				@BDATAFREEZINGENABLED BIT,@DPROCESSINGDATE DATETIME,@CPARTY_GSTN_NO VARCHAR(20),
				@BLOCALBILL BIT,@NATDCHARGES NUMERIC(10,2),@NSPID INT
				
				DECLARE @CMIDLIST AS TABLE (ID INT IDENTITY(1,1), CM_ID VARCHAR(50))
				DECLARE @NLOOP_START INT , @NLOOP_END INT, @CM_ID VARCHAR(50)
		
		SET @CERRORMSG=''
		SET @NSTEP=10
		
	
	

 --  IF ISNULL(@CGST_CALCULATE_BEFORE_10_OCLOCK,'')='1'
	--BEGIN
	--	DECLARE @DT VARCHAR(20)
	--	SET @DT=GETDATE()
	--	SELECT @DT=SUBSTRING( @DT,12,LEN(@DT))
	--	IF  CAST(@DT AS DATETIME) BETWEEN '1900-01-01 11:00:00.000' AND '1900-01-01 23:59:00.000'
	--	BEGIN
	--	     SET @CERRORMSG='GST RUN PROCESS BEFORE 11 OCLOCK ONLY'
	--	     GOTO END_PROC	
	--	END

	--END	
		
		PRINT 'STEP#'+STR(@NSTEP)+':'+CONVERT(VARCHAR,GETDATE(),113)
		
		SELECT @BDATAFREEZINGENABLED=ISNULL(ISENABLED,0)  FROM FIXEDFREEZE 
        IF ISNULL(@BDATAFREEZINGENABLED,0)=1
        BEGIN
			SET @DPROCESSINGDATE=@DFROMDT
			WHILE @DPROCESSINGDATE<=@DFROMDT	
			BEGIN

				EXEC VALIDATE_XN_DATA_FREEZE
				@CXNTYPE='SLS',
				@CUSERCODE=@CLOGINUSERCODE,
				@CMEMOID='',
				@DMEMODTPARA=@DPROCESSINGDATE,
				@CERRORMSG=@CERRORMSG OUTPUT
				
				IF ISNULL(@CERRORMSG,'')<>''
					GOTO END_PROC
					
				SET @DPROCESSINGDATE=@DPROCESSINGDATE+1
			END
        END 
                    		
		IF @CCMID='' AND @BCALLEDFROMSAVEBILL=0
			BEGIN TRANSACTION
		ELSE
			SELECT TOP 1 @DFROMDT=CM_DT FROM CMM01106 WHERE CM_ID=@CCMID
			
		

		SET @NSTEP=20
		
		PRINT 'STEP#'+STR(@NSTEP)+':'+CONVERT(VARCHAR,GETDATE(),113)
		
		SELECT TOP 1 @CLOCATIONID=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
		SELECT TOP 1 @CHOLOCID=VALUE FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'
	
		
		PRINT 'SP_UPDCMTAX-3'
		IF CURSOR_STATUS('GLOBAL','BILLSCURSOR') IN (0,1)
		BEGIN
			CLOSE BILLSCURSOR
			DEALLOCATE BILLSCURSOR
		END							
		
		PRINT 'SP_UPDCMTAX-5'
				
		PRINT @CDEPT_ID
		
		IF @CDEPT_ID<>''
			DECLARE BILLSCURSOR CURSOR FOR SELECT @CDEPT_ID
		ELSE
			DECLARE BILLSCURSOR CURSOR FOR SELECT location_Code  FROM CMM01106 WHERE CM_DT BETWEEN @DFROMDT AND @DTODT 
			GROUP BY location_Code
					
		SET @NSTEP=40
		PRINT 'STEP#'+STR(@NSTEP)+':'+CONVERT(VARCHAR,GETDATE(),113)
		OPEN BILLSCURSOR
		FETCH NEXT FROM BILLSCURSOR INTO @CCMLOCID
		WHILE @@FETCH_STATUS=0
		BEGIN

			PRINT 'SP_UPDCMTAX-7'
			IF @DTODT>'2017-06-30'
			BEGIN		 
					SET @NSTEP=90
					
					PRINT 'STEP#'+STR(@NSTEP)+':'+CONVERT(VARCHAR,GETDATE(),113)
							
					SET @NSPID=@@SPID
					
					
					DELETE FROM GST_TAXINFO_CALC WHERE SP_ID=CAST(@NSPID AS VARCHAR(40))
					DELETE FROM GST_TAXINFO_CALC_OH WHERE SP_ID=CAST(@NSPID AS VARCHAR(40))

					SET @NSTEP=91
					
					DECLARE @CALCULATE_GST_FOR_SLR VARCHAR(5)
				    SELECT @CALCULATE_GST_FOR_SLR=VALUE  FROM CONFIG WHERE CONFIG_OPTION='CALCULATE_GST_FOR_SLR' 
					set @CALCULATE_GST_FOR_SLR='1'
   					
					IF @BUPDATEHSN=1
					BEGIN
						SET @NSTEP=95
						
						UPDATE A SET HSN_CODE=C.HSN_CODE FROM CMD01106 A (nolock)
						JOIN CMM01106 B (nolock) ON A.CM_ID=B.CM_ID
						JOIN SKU C (nolock) ON C.PRODUCT_CODE=A.PRODUCT_CODE
						join article art (nolock) on art.article_code =c.article_code 
						WHERE CM_DT BETWEEN @DFROMDT AND @DTODT AND TAX_METHOD=1 
						--AND (QUANTITY>0 OR REF_SLS_MEMO_DT>='2017-07-01')		
						AND (ISNULL(@CALCULATE_GST_FOR_SLR,0)='1' OR QUANTITY>0 OR REF_SLS_MEMO_DT>='2017-07-01')					
						AND ISNULL(A.HSN_CODE,'')<>ISNULL(C.HSN_CODE,'')
						AND ISNULL(C.HSN_CODE,'') NOT IN('','0000000000')
						AND (@CCMLOCID='' OR b.location_Code=@CCMLOCID)
						AND B.CM_DT>='2017-07-01' 
						--and isnull(art.stock_na,0)=0
						--as Telephonic discuss with Pankaj sir and Sanjiv sir Remove this condition for nagarmal Client
						
					END
					

                  
	
					SET @NSTEP=100
					INSERT GST_TAXINFO_CALC	( PRODUCT_CODE, SP_ID ,NET_VALUE,TAX_METHOD,ROW_ID,QUANTITY,
					LOC_STATE_CODE ,LOC_GSTN_NO,LOCREGISTERED,PARTY_STATE_CODE ,PARTY_GSTN_NO,PARTYREGISTERED,LOCALBILL,MEMO_DT,MRP,SOURCE_DEPT_ID,
					export_gst_percentage_Applicable,export_gst_percentage)  
					SELECT PRODUCT_CODE,@NSPID AS SP_ID,(NET-ISNULL(CMM_DISCOUNT_AMOUNT,0)) AS NET_VALUE,
					2  AS TAX_METHOD, ROW_ID,QUANTITY,SLOC.GST_STATE_CODE AS LOC_STATE_CODE,SLOC.LOC_GST_NO AS LOC_GSTN_NO,
					SLOC.REGISTERED_GST AS LOCREGISTERED,B.PARTY_STATE_CODE,
					(CASE WHEN ISNULL(B.AC_CODE,'0000000000') NOT IN ('','0000000000') THEN LM.AC_GST_NO ELSE '' END) AS 	PARTY_GSTN_NO,
					(CASE WHEN ISNULL(B.AC_CODE,'0000000000') NOT IN ('','0000000000') THEN LM.REGISTERED_GST_DEALER ELSE 0 END) AS PARTYREGISTERED,
					(CASE WHEN B.CUSTOMER_CODE IN ('','000000000000') AND ISNULL(B.AC_CODE,'0000000000')  IN ('','0000000000')
						  THEN 1 ELSE 0 END) AS LOCALBILL ,B.CM_DT,A.MRP,b.location_Code,
				    isnull(cus.custdym_export_gst_percentage_Applicable,0),
					isnull(cus.custdym_export_gst_percentage,0)
					FROM CMD01106 A  (nolock)
					JOIN CMM01106 B (nolock) ON A.CM_ID=B.CM_ID
					JOIN LOCATION SLOC (nolock) ON SLOC.DEPT_ID=b.location_Code
					JOIN CUSTDYM CUS (nolock) ON CUS.CUSTOMER_CODE=B.CUSTOMER_CODE
					LEFT OUTER JOIN LMP01106 LM (nolock) ON LM.AC_CODE=B.AC_CODE
					WHERE CM_DT BETWEEN @DFROMDT AND @DTODT AND TAX_METHOD=1 
					AND (ISNULL(@CALCULATE_GST_FOR_SLR,0)='1' OR QUANTITY>0 OR REF_SLS_MEMO_DT>='2017-07-01')
					AND (@CCMLOCID='' OR b.location_Code=@CCMLOCID)
					AND B.CM_DT>='2017-07-01'

                   


					
					SET @NSTEP = 110
					PRINT 'STEP#'+STR(@NSTEP)+':'+CONVERT(VARCHAR,GETDATE(),113)
					
					EXEC SP3S_GST_TAX_CAL_BATCH
					@CXN_TYPE='SLS',
					@NSPID=@NSPID,
					@CERRMSG=@CERRORMSG OUTPUT
					
					IF ISNULL(@CERRORMSG,'')<>''
						GOTO END_PROC
                 
				   
				   DELETE B 	
				   FROM GST_TAXINFO_CALC B WITH (ROWLOCK)
				   JOIN CMD01106 CMD (NOLOCK) ON B.ROW_ID =CMD.ROW_ID
				   WHERE  B.SP_ID=CAST(@NSPID AS VARCHAR)
				   AND B.HSN_CODE =CMD.HSN_CODE 
				   AND ISNULL(CMD.GST_PERCENTAGE,0) =ISNULL(B.GST_PERCENTAGE ,0)
				   AND ISNULL(B.XN_VALUE_WITH_GST,0) =ISNULL(CMD.XN_VALUE_WITHOUT_GST ,0)
				   AND ISNULL(B.IGST_AMOUNT,0) =ISNULL(CMD.IGST_AMOUNT,0)
				   AND ISNULL(B.CGST_AMOUNT,0) =ISNULL(CMD.CGST_AMOUNT ,0)
				   AND ISNULL(B.SGST_AMOUNT,0) =ISNULL(CMD.SGST_AMOUNT ,0)



					SET @NSTEP = 120
					
					PRINT 'STEP#'+STR(@NSTEP)+':'+CONVERT(VARCHAR,GETDATE(),113)
					--CALLING TAX CALCULATION PROCEDURE WITH LOOPING CHANGED BY  START--
					
					UPDATE CMD01106 SET TAX_AMOUNT=0,TAX_PERCENTAGE=0,
					HSN_CODE=B.HSN_CODE,GST_PERCENTAGE=B.GST_PERCENTAGE,IGST_AMOUNT=B.IGST_AMOUNT,
					CGST_AMOUNT=B.CGST_AMOUNT,SGST_AMOUNT=B.SGST_AMOUNT,
					XN_VALUE_WITHOUT_GST=B.XN_VALUE_WITHOUT_GST,XN_VALUE_WITH_GST=B.XN_VALUE_WITH_GST,
					CESS_AMOUNT =ISNULL(b.CESS_AMOUNT,0),
					Gst_Cess_Percentage=ISNULL(b.Gst_Cess_Percentage,0),
					Gst_Cess_Amount=ISNULL(b.Gst_Cess_Amount,0)
					FROM GST_TAXINFO_CALC B WHERE B.ROW_ID=CMD01106.ROW_ID AND B.SP_ID=CAST(@NSPID AS VARCHAR)
					
					
					

					SET @NSTEP = 121
					--CALCULATION OF OVER HEAD---
					INSERT GST_TAXINFO_CALC_OH	( SP_ID,OTHER_CHARGES,OTHER_CHARGES_HSN_CODE,
                           ISIGST,OTHER_CHARGES_GST_PERCENTAGE,OTHER_CHARGES_GST_AMOUNT,
                           OH_TAX_METHOD,OTHER_CHARGES_TAXABLE_VALUE,MEMO_ID)  
                           
					SELECT @NSPID AS SP_ID,ATD_CHARGES,OTHER_CHARGES_HSN_CODE,
                           0,OTHER_CHARGES_GST_PERCENTAGE,0,
                           OH_TAX_METHOD,OTHER_CHARGES_TAXABLE_VALUE,CM_ID 
					FROM CMM01106 B 
					WHERE CM_DT BETWEEN @DFROMDT  AND @DTODT 
					AND ISNULL(ATD_CHARGES,0)<>0 AND ISNULL(OH_TAX_METHOD,0)<>1
				    AND (@CCMLOCID='' OR b.location_Code=@CCMLOCID)
				
				
					SET @NSTEP = 122
					EXEC SP3S_GST_TAX_CAL_OH_BATCH
					@CXN_TYPE='SLS',
					@NSPID=@NSPID,
					@CERRMSG=@CERRORMSG OUTPUT
					
					IF ISNULL(@CERRORMSG,'')<>''
						GOTO END_PROC	

					SET @NSTEP = 123
				    UPDATE B SET OTHER_CHARGES_HSN_CODE=A.OTHER_CHARGES_HSN_CODE,
						  OTHER_CHARGES_GST_PERCENTAGE=A.OTHER_CHARGES_GST_PERCENTAGE,                                            
						  OTHER_CHARGES_IGST_AMOUNT=ROUND(CASE WHEN ISNULL(ISIGST,0)=1 THEN A.OTHER_CHARGES_GST_AMOUNT ELSE 0 END,2),
						  OTHER_CHARGES_CGST_AMOUNT=ROUND(CASE WHEN ISNULL(ISIGST,0)=1 THEN 0 ELSE A.OTHER_CHARGES_GST_AMOUNT END/2,2),
						  OTHER_CHARGES_SGST_AMOUNT=ROUND(CASE WHEN ISNULL(ISIGST,0)=1 THEN 0 ELSE A.OTHER_CHARGES_GST_AMOUNT END/2,2),
						  OTHER_CHARGES_TAXABLE_VALUE=A.OTHER_CHARGES_TAXABLE_VALUE,GST_ROUND_OFF =0
							                                              
				   FROM  GST_TAXINFO_CALC_OH A
				   JOIN  CMM01106 B ON A.MEMO_ID=B.CM_ID
				   WHERE A.SP_ID=CAST(@NSPID AS VARCHAR)


				UPDATE B SET   GST_ROUND_OFF=(B.NET_AMOUNT-(ISNULL(B.OTHER_CHARGES_TAXABLE_VALUE,0)+
				ISNULL(B.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_SGST_AMOUNT,0)+ISNULL(B.OTHER_CHARGES_IGST_AMOUNT,0)+B.ROUND_OFF+C.NET_AMOUNT_GST)) 
				FROM GST_TAXINFO_CALC_OH A
				JOIN  CMM01106 B ON A.MEMO_ID=B.CM_ID 
				JOIN (SELECT A.CM_ID,SUM(XN_VALUE_WITHOUT_GST+IGST_AMOUNT+CGST_AMOUNT+SGST_AMOUNT+TAX_AMOUNT+ISNULL(CESS_AMOUNT,0)) AS NET_AMOUNT_GST
					  FROM CMD01106   A (NOLOCK)
					  GROUP BY A.CM_ID
					 ) C ON B.CM_ID=C.CM_ID 
				 WHERE A.SP_ID=CAST(@NSPID AS VARCHAR)
		
				
				
					--CALLING TAX CALCULATION PROCEDURE WITH LOOPING CHANGED BY  START--
					--
					 --RECALCULATE COMMENT FOR TRAIL AS ON 08-01-2020	(DINKAR)			
					SET @NSTEP = 124
			
						
						INSERT INTO @CMIDLIST(CM_ID)
						SELECT CM_ID FROM DBO.CMM01106 WITH(NOLOCK) WHERE CM_DT BETWEEN @DFROMDT AND @DTODT
						AND CM_ID IN (SELECT A.CM_ID FROM CMD01106 A JOIN GST_TAXINFO_CALC B ON A.ROW_ID=B.ROW_ID
									  WHERE SP_ID=CAST(@NSPID AS VARCHAR))
						
						SET @NSTEP = 125
						PRINT 'STEP#'+STR(@NSTEP)+':'+CONVERT(VARCHAR,GETDATE(),113)

				  
						SET @NLOOP_END = @@ROWCOUNT;
						SET @NLOOP_START = 1;
						
						
						
						WHILE @NLOOP_END >= @NLOOP_START
						BEGIN
							
							PRINT 'REPROCESSING TAX FOR CM ID:'+@CM_ID
							
							SELECT @CM_ID = CM_ID FROM @CMIDLIST WHERE ID=@NLOOP_START
						    
							EXEC SP3S_REPROCESS_GST_CALCULATION @CMEMOID = @CM_ID
								,@CXNTYPE ='SLS',@NSPID = 0 ,@CERRORMSG = @CERRORMSG OUTPUT
						    
							IF ISNULL(@CERRORMSG,'') <> ''
								GOTO END_PROC;
						    
							SET @NLOOP_START = @NLOOP_START+1;
						END
				
						
			 END
			 
			 FETCH NEXT FROM BILLSCURSOR INTO @CCMLOCID	
		END
		
		CLOSE BILLSCURSOR
		DEALLOCATE BILLSCURSOR
		
		
	  UPDATE A SET TOTAL_GST_AMOUNT =B.TOTAL_GST_AMOUNT  
	  FROM CMM01106 A (NOLOCK)
	   JOIN
	  (
	   SELECT A.CM_ID ,
	   SUM(ISNULL(IGST_AMOUNT,0) +ISNULL(CGST_AMOUNT,0) +ISNULL(CGST_AMOUNT,0) ) AS TOTAL_GST_AMOUNT
	   FROM CMD01106 A (NOLOCK)
	   JOIN @CMIDLIST B ON A.CM_ID =B.CM_ID  
	   GROUP BY A.CM_ID 
	   ) B ON A.CM_ID =B.CM_ID 
		
	
		
		
		SET @NSTEP=130
		PRINT 'STEP#'+STR(@NSTEP)+':'+CONVERT(VARCHAR,GETDATE(),113)

		GOTO END_PROC


		--RECALCULATE PROCESS FOR RCM

		RCM_CALCULATE:

		SET @NSPID=@@SPID
					
					
		DELETE FROM GST_TAXINFO_CALC WHERE SP_ID=CAST(@NSPID AS VARCHAR(40))
	
		
		SET @NSTEP=140

		INSERT GST_TAXINFO_CALC	(PRODUCT_CODE, SP_ID, NET_VALUE,ROW_ID,TAX_METHOD,QUANTITY,HSN_CODE,MRP,memo_dt,gst_percentage,LOC_STATE_CODE,PARTY_STATE_CODE) 
		  SELECT 	  A.PRODUCT_CODE,@NSPID,((A.PURCHASE_PRICE*A.INVOICE_QUANTITY)-ISNULL(PIMDISCOUNTAMOUNT,0)),
		 A.ROW_ID,B.BILL_LEVEL_TAX_METHOD,A.QUANTITY,
		 CASE WHEN ISNULL(A.HSN_CODE,'') IN('','0000000000') THEN  HM.HSN_CODE ELSE A.HSN_CODE END AS HSN_CODE,
		 A.MRP,CASE WHEN ISNULL(BILL_DT,'')<>'' THEN BILL_DT ELSE RECEIPT_DT END ,ISNULL(a.rcm_gst_percentage,0),
		 l.gst_state_code ,lmp.ac_gst_state_code 
		 FROM pid01106 A (NOLOCK)
		 JOIN pim01106 B (NOLOCK) ON A.MRR_ID =B.MRR_ID
		 JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =A.ARTICLE_CODE 
		 join location l (nolock) on l.dept_id =case when b.Pur_For_Dept_id <>'' then Pur_For_Dept_id else  b.dept_id end
		 join LMP01106 lmp (nolock) on lmp.AC_CODE =B.ac_code 
		 LEFT JOIN HSN_MST HM (NOLOCK) ON HM.HSN_CODE=ART.HSN_CODE 
		 WHERE  ISNULL(A.PRODUCT_CODE,'')<>'' 
		 AND ISNULL(b.rcm_applicable,0)=1 AND ISNULL(rcm_memo_no,'')<>''
		 and CASE WHEN ISNULL(BILL_DT,'')<>'' THEN BILL_DT ELSE RECEIPT_DT END 
		 between @DFROMDT and @DTODT
		 and (@CDEPT_ID ='' or b.pur_for_dept_id=@CDEPT_ID)
		 and (@CCMID ='' or b.mrr_id=@CCMID)



		 	IF OBJECT_ID('TEMPDB..#TMPHSN','U') IS NOT NULL
			   DROP TABLE #TMPHSN

		;WITH CTE AS
		(
		SELECT B.HSN_CODE,(CASE WHEN a.gst_percentage=0 THEN ISNULL(C.TAX_PERCENTAGE,0) ELSE a.gst_percentage END)  AS TAX_PERCENTAGE,ISNULL(C.RATE_CUTOFF,0) AS RATE_CUTOFF,
		       ISNULL(C.RATE_CUTOFF_TAX_PERCENTAGE,0) AS RATE_CUTOFF_TAX_PERCENTAGE,
		      ISNULL(C.WEF,'') AS WEF,ISNULL(B.TAXABLE_ITEM,'') AS TAXABLE_ITEM,ISNULL(B.HSN_TYPE ,'') AS HSN_TYPE  ,
			  SR=ROW_NUMBER() OVER (PARTITION BY A.ROW_ID ORDER BY C.WEF DESC),
			  ISNULL(C.GST_CAL_BASIS,1) AS GST_CAL_BASIS,
			  A.LOC_STATE_CODE,A.PARTY_STATE_CODE 
		FROM GST_TAXINFO_CALC A (NOLOCK)
		JOIN HSN_MST B (NOLOCK) ON A.HSN_CODE =B.HSN_CODE 
		LEFT JOIN HSN_DET C (NOLOCK) ON B.HSN_CODE =C.HSN_CODE AND C.WEF  <=MEMO_DT 
		WHERE A.SP_ID =LTRIM(RTRIM((@NSPID)))  
		)
		SELECT * INTO #TMPHSN FROM CTE WHERE SR=1
		
		
	   SET @NSTEP=150

	   UPDATE TMP SET MRP= CASE WHEN ISNULL(HM.GST_CAL_BASIS,1)=1 THEN NET_VALUE ELSE (MRP*QUANTITY) END
	   FROM GST_TAXINFO_CALC TMP
	   JOIN #TMPHSN  HM (NOLOCK) ON HM.HSN_CODE=TMP.HSN_CODE 
	   WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID)))	   

	   SET @NSTEP=160
	   UPDATE TMP SET  NET_VALUE_WOTAX= ROUND(MRP-(MRP*(CASE WHEN TAX_METHOD=2 THEN (HM.RATE_CUTOFF_TAX_PERCENTAGE/  
												   (100 + HM.RATE_CUTOFF_TAX_PERCENTAGE)) ELSE 0 END)),2)
	   FROM GST_TAXINFO_CALC TMP (NOLOCK)
	   JOIN #TMPHSN HM (NOLOCK) ON HM.HSN_CODE=TMP.HSN_CODE 
	   WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID)))
	   
	   SET @NSTEP=170			   			
	   UPDATE TMP SET GST_PERCENTAGE=ISNULL(CASE WHEN HM.RATE_CUTOFF<ABS(TMP.NET_VALUE_WOTAX)/ABS(TMP.QUANTITY) 
	   THEN HM.TAX_PERCENTAGE ELSE RATE_CUTOFF_TAX_PERCENTAGE END ,0),
	   IGST_AMOUNT=0,
	   SGST_AMOUNT=0
	   FROM GST_TAXINFO_CALC TMP (NOLOCK)
	   JOIN #TMPHSN HM (NOLOCK) ON HM.HSN_CODE=TMP.HSN_CODE 
	   WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID)))

		 SET @NSTEP=180
		UPDATE TMP SET XN_VALUE_WITHOUT_GST =ROUND(NET_VALUE-(NET_VALUE*(CASE WHEN TAX_METHOD=2 THEN ((ISNULL(TMP.GST_PERCENTAGE,0))/  
		(100 + ISNULL(TMP.GST_PERCENTAGE,0))) ELSE 0 END)),2)
		FROM GST_TAXINFO_CALC TMP
		WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID)))

		
		SET @NSTEP=180
        UPDATE TMP SET IGST_AMOUNT =ROUND(CASE WHEN LOC_STATE_CODE <>PARTY_STATE_CODE  THEN 
        NET_VALUE*(CASE WHEN TAX_METHOD=2 THEN (TMP.GST_PERCENTAGE/  
        (100 + TMP.GST_PERCENTAGE)) ELSE (TMP.GST_PERCENTAGE/100) END)
		ELSE 0 END,2) ,
		
		CGST_AMOUNT=ROUND((CASE WHEN LOC_STATE_CODE<>PARTY_STATE_CODE THEN 0
		ELSE NET_VALUE*(CASE WHEN TAX_METHOD=2 THEN (TMP.GST_PERCENTAGE/  
		(100 + TMP.GST_PERCENTAGE)) ELSE (TMP.GST_PERCENTAGE/100) END) 
		 END)/2,2),
		 
		SGST_AMOUNT=ROUND((CASE WHEN LOC_STATE_CODE<>PARTY_STATE_CODE THEN 0
		ELSE NET_VALUE*(CASE WHEN TAX_METHOD=2 THEN (TMP.GST_PERCENTAGE/  
		(100 + TMP.GST_PERCENTAGE)) ELSE (TMP.GST_PERCENTAGE/100) END) 
		END)/2,2)
		FROM GST_TAXINFO_CALC TMP (NOLOCK)
		WHERE TMP.SP_ID=LTRIM(RTRIM((@NSPID)))

		UPDATE pid01106 SET rcm_gst_percentage=b.gst_percentage,rcm_taxable_value=b.xn_value_without_gst,
		rcm_igst_amount=b.igst_amount,rcm_cgst_amount=b.cgst_amount,rcm_sgst_amount=b.sgst_amount			
		FROM GST_TAXINFO_CALC b WHERE b.row_id=PID01106.row_id
		and b.SP_ID=LTRIM(RTRIM((@NSPID)))
		
		DELETE FROM GST_TAXINFO_CALC WHERE SP_ID=CAST(@NSPID AS VARCHAR(40))
					
	END TRY
	
	BEGIN CATCH
		
		SET @CERRORMSG = 'SP_UPDCMTAX : STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		
		PRINT 'ENTER CATCH OF SP_UPDCMTAX'
	END CATCH

END_PROC:
	
	IF @@TRANCOUNT>0 AND @CCMID='' AND @BCALLEDFROMSAVEBILL=0		
	BEGIN
		IF @CERRORMSG=''
			commit TRANSACTION
		ELSE
			ROLLBACK	
	END

	
	INSERT @TRETMSG
	SELECT @CERRORMSG
	
	SELECT * FROM @TRETMSG
	
END
---- 'END OF CREATING PROCEDURE  SP_UPDCMTAX (RECALCULATE TAX AMOUNT IN THE RETAIL BILLS) '



