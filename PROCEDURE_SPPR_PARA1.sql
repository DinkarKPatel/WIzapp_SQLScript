CREATE PROCEDURE SPPR_PARA1   
(  
 @NMODE     INT, --(1) - VIEW FILTER DATA (2) - VIEW PARA1_CODE WISE  
 @PARA1_CODE    VARCHAR(9)='',  
 @PARA1_NAME    VARCHAR(300)='',  
 @PARA1_SET    VARCHAR(40)='',  
 @INACTIVE    VARCHAR(1)='',  
 @ERRMSG_OUT    VARCHAR(MAX) OUT  
)  
AS  
BEGIN  
 DECLARE @CSTEP INT, @CCMD NVARCHAR(MAX)  
   
 BEGIN TRY  
  SET @ERRMSG_OUT = ''  
    
  SET @CSTEP = 10  
  IF (@NMODE=1)  
  BEGIN  
   SET @CCMD=N'SELECT PARA1_CODE, PARA1_NAME, ALIAS, PARA1_SET, REMARKS,   
      CASE WHEN ISNULL(INACTIVE, 0) = 0 THEN ''NO'' ELSE ''YES'' END AS INACTIVE FROM [PARA1]  
      WHERE PARA1_NAME LIKE ''%' + @PARA1_NAME + '%''  
      AND PARA1_SET LIKE ''%' + @PARA1_SET + '%'' '  
   IF @INACTIVE = 'Y'  
   BEGIN  
    SET @CCMD+=N' AND ISNULL(INACTIVE, 0)= 1 '  
   END  
   IF @INACTIVE = 'N'  
   BEGIN  
    SET @CCMD+=N' AND ISNULL(INACTIVE, 0)= 0 '  
   END  
   SET @CCMD+=N' ORDER BY PARA1_CODE DESC'  
    
   PRINT @CCMD  
   EXEC SP_EXECUTESQL @CCMD  
  END  
    
  SET @CSTEP = 20  
  IF (@NMODE=2)  
  BEGIN  
   SET @CCMD=N'SELECT PARA1_CODE, PARA1_NAME, ALIAS, PARA1_SET, REMARKS,   
      CASE WHEN ISNULL(INACTIVE, 0) = 0 THEN ''NO'' ELSE ''YES'' END AS INACTIVE FROM [PARA1]  
      WHERE PARA1_CODE = ''' + @PARA1_CODE + ''' '  
    
   PRINT @CCMD  
   EXEC SP_EXECUTESQL @CCMD  
  END  
    
 END TRY    
 BEGIN CATCH    
  SET @ERRMSG_OUT='ERROR: [P]: SPPR_PARA1, [STEP]: '+CAST(@CSTEP AS VARCHAR(5))+', [MESSAGE]: ' + ERROR_MESSAGE()  
  PRINT @ERRMSG_OUT  
    
  GOTO END_PROC    
 END CATCH     
  
END_PROC:    
 IF  ISNULL(@ERRMSG_OUT,'')=''   
  SET @ERRMSG_OUT = ''  
END
