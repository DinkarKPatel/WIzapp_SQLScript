CREATE PROCEDURE SP3S_TOTAL_PENDING_REPORT
(
 @DASONDATE DATETIME='2018-06-29',
 @CDEPT_ID VARCHAR(5)=''
)
AS
BEGIN
     
     DECLARE @TMPALLPENDING TABLE (SR INT,TRANSACTIONS VARCHAR(100),MEMOES VARCHAR(100),TOTAL_QTY NUMERIC(10,2),TOTAL_AMOUNT NUMERIC(18,2))
  
    PRINT'********1.PENDING APPROVALS**********'
     
     IF OBJECT_ID('TEMPDB..#PENDING_APPROVAL','U') IS NOT NULL
	  DROP TABLE #PENDING_APPROVAL
	
	SELECT A.MEMO_ID ,B.ROW_ID ,B.QUANTITY ,ISNULL(APR.APR_QTY,0) AS APR_QTY ,B.MRP
	INTO #PENDING_APPROVAL
	FROM APM01106 A
	JOIN APD01106 B ON A.MEMO_ID =B.MEMO_ID 
	LEFT OUTER JOIN
	(
	 SELECT APD_ROW_ID,SUM(A.QUANTITY) AS APR_QTY 
	 FROM APPROVAL_RETURN_DET A
	 JOIN APPROVAL_RETURN_MST B ON A.MEMO_ID =B.MEMO_ID 
	 WHERE B.CANCELLED =0
	 GROUP BY APD_ROW_ID

	) APR ON B.ROW_ID =APR.APD_ROW_ID
	WHERE A.CANCELLED =0
	AND B.QUANTITY -ISNULL(APR.APR_QTY,0)>0
	AND A.MEMO_DT<=@DASONDATE
	AND (@CDEPT_ID='' OR A.location_Code =@CDEPT_ID)
     
     INSERT INTO @TMPALLPENDING(SR,TRANSACTIONS ,MEMOES ,TOTAL_QTY ,TOTAL_AMOUNT )
     SELECT 1 AS SR, TRANSACTIONS ,COUNT(MEMO_ID) AS MEMOES ,SUM(QTY) AS TOTAL_QTY ,SUM(AMOUNT  ) AS TOTAL_AMOUNT
     FROM 
     (
     SELECT 'APPROVALS' AS TRANSACTIONS,
      MEMO_ID,SUM(QUANTITY - APR_QTY) AS QTY,
      SUM((QUANTITY - APR_QTY)*MRP) AS AMOUNT
     FROM #PENDING_APPROVAL
     GROUP BY MEMO_ID
     ) A
     GROUP BY TRANSACTIONS
    
    -- END OF PENDING APPROVALS************
    
    PRINT'********2.PENDING GIT**********'
    
      DECLARE @CCUTOFFDATE VARCHAR(100),@CHOLOCID VARCHAR(10),@CLOCID VARCHAR(10)  
      
     SELECT TOP 1 @CCUTOFFDATE=VALUE FROM CONFIG WHERE CONFIG_OPTION='GIT_CUT_OFF_DATE'  
	 SELECT TOP 1 @CHOLOCID=VALUE FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID' 

	 IF @CDEPT_ID=''
	    SELECT TOP 1 @CLOCID=DEPT_ID FROM NEW_APP_LOGIN_INFO (NOLOCK) WHERE SPID=@@SPID   
	ELSE
	 SET @CLOCID=@CDEPT_ID


	 SET @CCUTOFFDATE=ISNULL(@CCUTOFFDATE,'')  
	 
	 IF @CLOCID=@CHOLOCID
	 BEGIN

		 IF OBJECT_ID('TEMPDB..#TMPCHGIT','U') IS NOT NULL  
			DROP TABLE #TMPCHGIT  
		    
		 SELECT 'WSL' AS XN_TYPE,A.INV_ID AS MEMO_ID,A.TOTAL_QUANTITY ,A.NET_AMOUNT  INTO #TMPCHGIT FROM INM01106 A (NOLOCK)   
		 LEFT OUTER JOIN PIM01106 B (NOLOCK) ON A.INV_ID=B.INV_ID AND B.CANCELLED=0 
		 WHERE A.INV_DT <= @DASONDATE AND A.INV_DT>=(CASE WHEN @CCUTOFFDATE<>'' THEN @CCUTOFFDATE ELSE A.INV_DT END)  
		 AND (A.PARTY_DEPT_ID=@CDEPT_ID OR @CDEPT_ID='')  
		 AND (ISNULL(B.RECEIPT_DT,'')='' OR ISNULL(B.RECEIPT_DT,'')>@DASONDATE)  
		 AND A.CANCELLED=0  AND A.INV_MODE =2
		 UNION  
		 SELECT 'PRT' AS XN_TYPE,A.RM_ID AS MEMO_ID,A.TOTAL_QUANTITY ,A.TOTAL_AMOUNT  FROM RMM01106 A (NOLOCK)   
		 LEFT OUTER JOIN CNM01106 B (NOLOCK) ON A.RM_ID=B.RM_ID  AND B.CANCELLED=0 
		 WHERE A.RM_DT <= @DASONDATE AND A.RM_DT>=(CASE WHEN @CCUTOFFDATE<>'' THEN @CCUTOFFDATE ELSE A.RM_DT END)  
		 AND (A.PARTY_DEPT_ID=@CDEPT_ID OR @CDEPT_ID='')  
		 AND (ISNULL(B.RECEIPT_DT,'')='' OR ISNULL(B.RECEIPT_DT,'')>@DASONDATE)  
		 AND A.CANCELLED=0  AND A.MODE =2
		 
		 UPDATE A SET TOTAL_QUANTITY=B.QUANTITY
		 FROM #TMPCHGIT A
		 JOIN 
		 (
		  SELECT INV_ID,SUM(QUANTITY) AS QUANTITY
		  FROM IND01106 
		  GROUP BY INV_ID
		 ) B ON A.MEMO_ID =B.INV_ID 
		 WHERE XN_TYPE='WSL'
		 AND A.TOTAL_QUANTITY<>ISNULL(B.QUANTITY,0)
		 
		 UPDATE A SET TOTAL_QUANTITY=B.QUANTITY
		 FROM #TMPCHGIT A
		 JOIN 
		 (
		  SELECT RM_ID,SUM(QUANTITY) AS QUANTITY
		  FROM RMD01106 
		  GROUP BY RM_ID
		 ) B ON A.MEMO_ID =B.RM_ID 
		  WHERE XN_TYPE='PRT'
		  AND A.TOTAL_QUANTITY<>ISNULL(B.QUANTITY,0)
		 
		 
		 
		 
     INSERT INTO @TMPALLPENDING(SR,TRANSACTIONS ,MEMOES ,TOTAL_QTY ,TOTAL_AMOUNT )
     SELECT 2 AS SR,'GIT' AS  TRANSACTIONS ,COUNT(MEMO_ID) AS MEMOES ,
     SUM(TOTAL_QUANTITY) AS TOTAL_QTY ,SUM(NET_AMOUNT  ) AS TOTAL_AMOUNT
     FROM #TMPCHGIT
     
	
	 END
	 
	 ELSE
	 IF @CLOCID<>@CHOLOCID
	 BEGIN
	    
	     IF OBJECT_ID('TEMPDB..#TMPCHGIT_LOC','U') IS NOT NULL  
			DROP TABLE #TMPCHGIT_LOC  
		    
		 SELECT 'WSL' AS XN_TYPE,A.INV_ID AS MEMO_ID,A.TOTAL_QUANTITY ,A.NET_AMOUNT INTO #TMPCHGIT_LOC FROM DOCWSL_INM01106_MIRROR  A (NOLOCK)   
		 LEFT OUTER JOIN PIM01106 B (NOLOCK) ON A.INV_ID=B.INV_ID AND B.CANCELLED=0 
		 WHERE A.INV_DT <= @DASONDATE AND A.INV_DT>=(CASE WHEN @CCUTOFFDATE<>'' THEN @CCUTOFFDATE ELSE A.INV_DT END)  
		 AND (A.PARTY_DEPT_ID=@CDEPT_ID OR @CDEPT_ID='')  
		 AND (ISNULL(B.RECEIPT_DT,'')='' OR ISNULL(B.RECEIPT_DT,'')>@DASONDATE)  
		 AND A.CANCELLED=0  
		 UNION  
		 SELECT 'PRT' AS XN_TYPE,A.RM_ID AS MEMO_ID,A.TOTAL_QUANTITY ,A.TOTAL_AMOUNT  FROM DOCPRT_RMM01106_MIRROR  A (NOLOCK)   
		 LEFT OUTER JOIN CNM01106 B (NOLOCK) ON A.RM_ID=B.RM_ID  AND B.CANCELLED=0 
		 WHERE A.RM_DT <= @DASONDATE AND A.RM_DT>=(CASE WHEN @CCUTOFFDATE<>'' THEN @CCUTOFFDATE ELSE A.RM_DT END)  
		 AND (A.PARTY_DEPT_ID=@CDEPT_ID OR @CDEPT_ID='')  
		 AND (ISNULL(B.RECEIPT_DT,'')='' OR ISNULL(B.RECEIPT_DT,'')>@DASONDATE)  
		 AND A.CANCELLED=0 
		 
		 UPDATE A SET TOTAL_QUANTITY=B.QUANTITY
		 FROM #TMPCHGIT A
		 JOIN 
		 (
		  SELECT INV_ID,SUM(QUANTITY) AS QUANTITY
		  FROM DOCWSL_IND01106_MIRROR  
		  GROUP BY INV_ID
		 ) B ON A.MEMO_ID =B.INV_ID 
		 WHERE XN_TYPE='WSL'
		 AND A.TOTAL_QUANTITY<>ISNULL(B.QUANTITY,0)
		 
		 UPDATE A SET TOTAL_QUANTITY=B.QUANTITY
		 FROM #TMPCHGIT A
		 JOIN 
		 (
		  SELECT RM_ID,SUM(QUANTITY) AS QUANTITY
		  FROM DOCPRT_RMD01106_MIRROR  
		  GROUP BY RM_ID
		 ) B ON A.MEMO_ID =B.RM_ID 
		  WHERE XN_TYPE='PRT'
		  AND A.TOTAL_QUANTITY<>ISNULL(B.QUANTITY,0)
		 
		 
		   INSERT INTO @TMPALLPENDING(SR,TRANSACTIONS ,MEMOES ,TOTAL_QTY ,TOTAL_AMOUNT )
		   SELECT 2 AS SR,'GIT' AS  TRANSACTIONS ,COUNT(MEMO_ID) AS MEMOES ,
		   SUM(TOTAL_QUANTITY) AS TOTAL_QTY ,SUM(NET_AMOUNT  ) AS TOTAL_AMOUNT
		   FROM #TMPCHGIT_LOC 

		
	 END	 
    
    -- END OF PENDING GIT************
    
     PRINT'********3.PURCHASE ORDER**********'
     
      IF OBJECT_ID('TEMPDB..#PENDING_PO','U') IS NOT NULL
	  DROP TABLE #PENDING_PO
	  
     SELECT A.PO_ID,B.ROW_ID  ,B.QUANTITY ,ISNULL(C.PI_QTY,0) AS PI_QTY,A.TOTAL_AMOUNT
     INTO #PENDING_PO
     FROM POM01106 A
     JOIN POD01106 B ON A.PO_ID=B.PO_ID 
     LEFT OUTER JOIN
     (
      SELECT PO_ROW_ID,SUM(A.QUANTITY) AS PI_QTY
      FROM PID01106 A
      JOIN PIM01106 B ON A.MRR_ID =B.MRR_ID 
      WHERE B.CANCELLED =0
      AND ISNULL(PO_ROW_ID,'')<>''
      GROUP BY PO_ROW_ID
     
     ) C ON B.ROW_ID =C.PO_ROW_ID 
     WHERE A.CANCELLED =0
     AND B.QUANTITY -ISNULL(C.PI_QTY,0)>0
     AND A.PO_DT <=@DASONDATE
	 AND (@CDEPT_ID='' OR A.location_Code =@CDEPT_ID)

	 
	 INSERT INTO @TMPALLPENDING(SR,TRANSACTIONS ,MEMOES ,TOTAL_QTY ,TOTAL_AMOUNT )
     SELECT 3 AS SR,'PURCHASE ORDER' AS  TRANSACTIONS ,COUNT(PO_ID) AS MEMOES ,SUM(QTY) AS TOTAL_QTY ,
     SUM(TOTAL_AMOUNT  ) AS TOTAL_AMOUNT
     FROM
     (
	 SELECT A.PO_ID ,SUM(A.QUANTITY-ISNULL(A.PI_QTY,0)) AS QTY,
	 A.TOTAL_AMOUNT
	 FROM #PENDING_PO A
	 GROUP BY A.PO_ID,A.TOTAL_AMOUNT
	 ) A
     
     
      -- END OF PURCHASE ORDER************
      
      PRINT'--********4.PENDING ADVANCES**********'
      
      IF OBJECT_ID('TEMPDB..#PENDING_ADVANCE','U') IS NOT NULL
	  DROP TABLE #PENDING_ADVANCE
	  
	  
      SELECT A.ADV_REC_ID ,A.AMOUNT 
      INTO #PENDING_ADVANCE
      FROM ARC01106 A (NOLOCK)     
	 LEFT OUTER JOIN      
	 (      
	  SELECT P.ADJ_MEMO_ID       
	  FROM PAYMODE_XN_DET P (NOLOCK)     
	  JOIN CMM01106 Q (NOLOCK) ON P.MEMO_ID = Q.CM_ID      
	  WHERE P.PAYMODE_CODE = '0000002'      
	  AND   Q.CANCELLED = 0      
	  UNION
	  SELECT P.ADJ_MEMO_ID       
	  FROM PAYMODE_XN_DET P   (NOLOCK)   
	  JOIN ARC01106 Q (NOLOCK) ON P.MEMO_ID = Q.ADV_REC_ID      
	  WHERE P.PAYMODE_CODE = '0000002'      
	  AND   Q.CANCELLED = 0       
	 ) X ON A.ADV_REC_ID = X.ADJ_MEMO_ID      
	 WHERE (A.ARC_TYPE = 1 AND A.ARCT = 2)  
	 AND   A.CANCELLED = 0      
	 AND   X.ADJ_MEMO_ID IS NULL  
     AND A.ADV_REC_DT <=@DASONDATE
     AND (@CDEPT_ID='' OR A.location_code =@CDEPT_ID)
     
      
      INSERT INTO @TMPALLPENDING(SR,TRANSACTIONS ,MEMOES ,TOTAL_QTY ,TOTAL_AMOUNT )
      SELECT 4 AS SR,'ADVANCE' AS TRANSACTIONS,COUNT(ADV_REC_ID) AS MEMOES,0 AS TOTAL_QTY,
            SUM(AMOUNT) AS TOTAL_AMOUNT
      FROM #PENDING_ADVANCE
      
      
      -- END OF PENDING ADVANCES************
      
     PRINT'--********5.PENDING CREDIT NOTE**********'
      
      IF OBJECT_ID('TEMPDB..#PENDING_CN','U') IS NOT NULL
	  DROP TABLE #PENDING_CN 
       
	 SELECT B.CM_ID,B.TOTAL_QUANTITY ,
	 SUM(A.AMOUNT) AS CN_AMOUNT  
	 INTO #PENDING_CN 
	 FROM PAYMODE_XN_DET A  (NOLOCK)     
	 JOIN CMM01106 B (NOLOCK) ON A.MEMO_ID = B.CM_ID      
	 LEFT OUTER JOIN      
	 (      
	  SELECT P.ADJ_MEMO_ID       
	  FROM PAYMODE_XN_DET P (NOLOCK)     
	  JOIN CMM01106 Q (NOLOCK) ON P.MEMO_ID = Q.CM_ID      
	  WHERE P.PAYMODE_CODE = '0000001'      
	  AND   Q.CANCELLED = 0      
	  UNION ALL  
	  SELECT P.ADJ_MEMO_ID       
	  FROM PAYMODE_XN_DET P (NOLOCK)     
	  JOIN ARC01106 Q (NOLOCK) ON P.MEMO_ID = Q.ADV_REC_ID      
	  WHERE P.PAYMODE_CODE = '0000001'      
	  AND   Q.CANCELLED = 0       
	 ) X ON B.CM_ID = X.ADJ_MEMO_ID      
	 WHERE  SUBSTRING(B.CM_NO,5,1)='N' 
	 AND A.PAYMODE_CODE = '0000004'      
	 AND B.CANCELLED = 0  
	 AND A.AMOUNT < 0      
	 AND B.CM_DT <=@DASONDATE
     AND (@CDEPT_ID='' OR B.location_Code =@CDEPT_ID)
	 AND X.ADJ_MEMO_ID IS NULL  
	 GROUP BY B.CM_ID,B.TOTAL_QUANTITY 
	 
	 INSERT INTO @TMPALLPENDING(SR,TRANSACTIONS ,MEMOES ,TOTAL_QTY ,TOTAL_AMOUNT )
	 
	 SELECT 5 AS SR,'CREDIT NOTE' AS TRANSACTIONS ,
	 COUNT(CM_ID) AS MEMOES ,ABS(SUM(ISNULL(TOTAL_QUANTITY,0))) AS TOTAL_QTY ,
	 ABS(SUM(CN_AMOUNT)) AS TOTAL_AMOUNT
	 FROM #PENDING_CN
	 
     -- END OF PENDING CREDIT NOTE************ 
     
     
      PRINT'--********6.PENDING CREDIT ISSUE**********' 
      
      IF OBJECT_ID('TEMPDB..#TMP_CREDITISSUE','U') IS NOT NULL
	   DROP TABLE #TMP_CREDITISSUE
			   
	SELECT B.NET_AMOUNT,B.TOTAL_QUANTITY ,
	A.MEMO_ID, SUM(A.AMOUNT) AS CREDIT_AMOUNT
	INTO #TMP_CREDITISSUE 
	FROM PAYMODE_XN_DET A (NOLOCK)
	JOIN CMM01106 B (NOLOCK) ON A.MEMO_ID=B.CM_ID
	WHERE B.CANCELLED=0 AND XN_TYPE = 'SLS' 
	AND PAYMODE_CODE = '0000004' 
	AND A.AMOUNT > 0 
	AND CM_DT <= @DASONDATE AND CANCELLED=0 
	AND (@CDEPT_ID='' OR B.location_Code =@CDEPT_ID)
	GROUP BY A.MEMO_ID,B.NET_AMOUNT,B.TOTAL_QUANTITY 
	
	 IF OBJECT_ID('TEMPDB..#TMP_CREDITISSUE_FINAL','U') IS NOT NULL
	   DROP TABLE #TMP_CREDITISSUE_FINAL
	
	SELECT A.MEMO_ID ,A.NET_AMOUNT,A.CREDIT_AMOUNT AS AMOUNT,
	ISNULL(RECEIPT_AMOUNT,0) AS RECEIPT_AMOUNT,
	ISNULL(REFUNDAMOUNT,0) AS REFUNDAMOUNT 
	INTO #TMP_CREDITISSUE_FINAL
	FROM #TMP_CREDITISSUE A
	LEFT OUTER JOIN
	(
	 SELECT A.CM_ID, SUM(RECEIPT_AMOUNT) AS RECEIPT_AMOUNT
	 FROM CMM_CREDIT_RECEIPT A
	 JOIN ARC01106 B ON A.ADV_REC_ID=B.ADV_REC_ID
	 WHERE  B.CANCELLED = 0
	 GROUP BY A.CM_ID
	) B ON A.MEMO_ID =B.CM_ID 
	LEFT OUTER JOIN
	(
	 SELECT A.ADJ_MEMO_ID,REFUNDAMOUNT = SUM(ABS(A.AMOUNT)) 
	 FROM PAYMODE_XN_DET A (NOLOCK)
	 JOIN CMM01106 B ON A.MEMO_ID = B.CM_ID
	 WHERE B.CM_ID <> ADJ_MEMO_ID  
	 AND B.CANCELLED = 0
	 GROUP BY A.ADJ_MEMO_ID
	) C ON A.MEMO_ID =C.ADJ_MEMO_ID 
	WHERE A.CREDIT_AMOUNT-(ISNULL(RECEIPT_AMOUNT,0)+ISNULL(REFUNDAMOUNT,0))<>0
		 
	INSERT INTO @TMPALLPENDING(SR,TRANSACTIONS ,MEMOES ,TOTAL_QTY ,TOTAL_AMOUNT )
	 SELECT 6 AS SR, 'CREDIT ISSUE' AS TYPE,COUNT(*) AS TOTAL_MEMOES,
	 0 AS QUANTITY ,
	 ISNULL(SUM(ISNULL(AMOUNT,0))-(SUM(ISNULL(RECEIPT_AMOUNT,0))+SUM(ISNULL(REFUNDAMOUNT,0))),0) AS AMOUNT
	 FROM #TMP_CREDITISSUE_FINAL
      
      -- END OF PENDING CREDIT ISSUE************ 
     PRINT'--********7.PENDING JOB WORK ISSUE**********'  
     
     IF OBJECT_ID('TEMPDB..#TMP_JOBWORISSUE','U') IS NOT NULL
	  DROP TABLE #TMP_JOBWORISSUE
	   
     SELECT A.ISSUE_ID ,B.ROW_ID ,B.QUANTITY ,ISNULL(C.REC_QTY,0) AS REC_QTY,
     A.TOTAL_AMOUNT
     INTO #TMP_JOBWORISSUE
     FROM JOBWORK_ISSUE_MST A
     JOIN JOBWORK_ISSUE_DET B ON A.ISSUE_ID =B.ISSUE_ID 
     LEFT JOIN
     (
      SELECT A.REF_ROW_ID ,SUM(A.QUANTITY) AS REC_QTY 
      FROM JOBWORK_RECEIPT_DET A
      JOIN JOBWORK_RECEIPT_MST B ON A.RECEIPT_ID =B.RECEIPT_ID 
      WHERE B.CANCELLED =0
      GROUP BY A.REF_ROW_ID
     ) C ON B.ROW_ID =C.REF_ROW_ID 
     WHERE A.CANCELLED =0
     AND B.QUANTITY -ISNULL(C.REC_QTY,0)>0
     AND ISSUE_DT  <= @DASONDATE 
	 AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
	 
	 INSERT INTO @TMPALLPENDING(SR,TRANSACTIONS ,MEMOES ,TOTAL_QTY ,TOTAL_AMOUNT )
	 SELECT 7 AS SR,'JOBWORK ISSUE' AS TRANSACTIONS,COUNT(A.ISSUE_ID) AS MEMOES,
	 SUM(QTY) AS TOTAL_QTY,
	 SUM(TOTAL_AMOUNT) AS TOTAL_AMOUNT
	 FROM
	 (
	 SELECT A.ISSUE_ID ,SUM(A.QUANTITY-ISNULL(A.REC_QTY,0)) AS QTY,
	 A.TOTAL_AMOUNT
	 FROM #TMP_JOBWORISSUE A
	 GROUP BY A.ISSUE_ID,A.TOTAL_AMOUNT
	 ) A
	 
	 
     -- END OF PENDING JOB WORK ISSUE************ 
    
    PRINT'--********8.PENDING RETAIL PACKSLIP**********'  
     -- END OF PENDING RETAIL PACKSLIP************ 
     
     PRINT'--********9.PENDING WSL PACKSLIP**********'  
     -- END OF PENDING WSL PACKSLIP************ 
    
    SELECT A.SR,A.TRANSACTIONS ,A.MEMOES ,
           A.TOTAL_QTY ,A.TOTAL_AMOUNT  
    FROM @TMPALLPENDING A
    ORDER BY A.SR 

END
