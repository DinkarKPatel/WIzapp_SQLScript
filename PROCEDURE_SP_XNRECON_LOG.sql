CREATE PROCEDURE SP_XNRECON_LOG
--WITH ENCRYPTION
AS
BEGIN
	SELECT A.DEPT_ID,B.DEPT_ID+ '-'+ B.DEPT_NAME AS [DEPT_NAME],C.AREA_NAME,C1.CITY,
			(CASE WHEN SENT_ID=RECON_ID OR SENT_ID>1 THEN CONVERT(VARCHAR,SENT_DT,105) ELSE '' END) AS [RECONCILED_UPTO],
			(CASE WHEN ISNULL(CHALLAN_MISMATCHES,'')='' THEN 'RECORDS ARE PERFECT' ELSE 'MISMATCH FOUND' END) AS [STATUS],
			ISNULL(CHALLAN_MISMATCHES,'') AS CHALLAN_MISMATCHES
	FROM XNRECON_LOG A (NOLOCK)
	JOIN LOCATION B (NOLOCK) ON B.DEPT_ID=A.DEPT_ID
	JOIN AREA C (NOLOCK) ON C.AREA_CODE=B.AREA_CODE
	JOIN CITY C1 (NOLOCK) ON C1.CITY_CODE=C.CITY_CODE
	UNION ALL
	SELECT LEFT(A.MEMO_PREFIX,2) AS DEPT_ID,B.DEPT_ID+ '-'+ B.DEPT_NAME AS [DEPT_NAME],C.AREA_NAME,C1.CITY,
	'' AS [RECONCILED_UPTO],'MISSING BILLS FOR SERIES :'+MEMO_PREFIX AS [STATUS],
	'DATE RANGE :'+CONVERT(VARCHAR,MIN_MEMO_DT,105)+' TO '+CONVERT(VARCHAR,MAX_MEMO_DT,105)+' '+
	'BILL RANGE :'+MIN_MEMO_NO+' TO '+MAX_MEMO_NO AS CHALLAN_MISMATCHES
	FROM DATAMISSING_SUMMARY A (NOLOCK)	 
	JOIN LOCATION B (NOLOCK) ON B.DEPT_ID=LEFT(A.MEMO_PREFIX,2)
	JOIN AREA C (NOLOCK) ON C.AREA_CODE=B.AREA_CODE
	JOIN CITY C1 (NOLOCK) ON C1.CITY_CODE=C.CITY_CODE
	ORDER BY A.DEPT_ID		
END
