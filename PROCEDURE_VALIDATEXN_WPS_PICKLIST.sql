CREATE PROCEDURE  VALIDATEXN_WPS_PICKLIST
 @CXNID VARCHAR(50),	
 @NUPDATEMODE INT,	
 @CERRORMSG VARCHAR(200) OUTPUT
AS
BEGIN
    
		
	IF OBJECT_ID('TEMPDB..#TMPORDER','U') IS NOT NULL
	   DROP TABLE #TMPORDER

	SELECT A.PICK_LIST_ROW_ID AS ORDER_ID ,A.PACKSLIP_ARTICLE_CODE AS ARTICLE_CODE,
	PACKSLIP_PARA1_CODE AS PARA1_CODE,PACKSLIP_PARA2_CODE AS PARA2_CODE,
		   SUM(A.QUANTITY) AS QTY
	INTO #TMPORDER
	FROM WPS_DET A (NOLOCK)
	JOIN WPS_MST B (NOLOCK) ON A.PS_ID=B.PS_ID
	WHERE A.PS_ID=@CXNID
	AND A.PICK_LIST_ROW_ID<>''
	GROUP BY A.PICK_LIST_ROW_ID ,A.PACKSLIP_ARTICLE_CODE,PACKSLIP_PARA1_CODE,PACKSLIP_PARA2_CODE
    
    --SELECT * FROM #TMPORDER
    
    SELECT B.* 
    INTO #TMPALLORDER 
    FROM #TMPORDER A
    JOIN
    (
		SELECT A.PICK_LIST_ROW_ID AS ORDER_ID ,A.PACKSLIP_ARTICLE_CODE AS ARTICLE_CODE,
		PACKSLIP_PARA1_CODE AS PARA1_CODE,PACKSLIP_PARA2_CODE AS PARA2_CODE,
			   SUM(A.QUANTITY) AS QTY--,SUM(CASE WHEN A.PS_ID=@CXNID THEN A.QUANTITY ELSE 0 END ) AS CUR_PACKSLIP_QTY
		FROM WPS_DET A (NOLOCK)
		JOIN WPS_MST B (NOLOCK) ON A.PS_ID=B.PS_ID
		AND A.PICK_LIST_ROW_ID<>'' AND B.CANCELLED=0 
		GROUP BY A.PICK_LIST_ROW_ID ,A.PACKSLIP_ARTICLE_CODE,PACKSLIP_PARA1_CODE,PACKSLIP_PARA2_CODE
    ) B ON A.ORDER_ID =B.ORDER_ID  
    AND A.ARTICLE_CODE =B.ARTICLE_CODE 
    AND A.PARA1_CODE =B.PARA1_CODE 
    AND A.PARA2_CODE =B.PARA2_CODE 
    
	--SELECT * FROM #TMPALLORDER 

	IF OBJECT_ID('TEMPDB..#TMPERRLIST','U') IS NOT NULL
	   DROP TABLE #TMPERRLIST
	   
	SELECT A.* ,
	ISNULL(B.ORD_QTY,0) TATAL_ORDER,
	ISNULL(B.ORD_QTY,0)-(ISNULL(A.QTY,0)) AS  ORD_QTY---ISNULL(A.CUR_PACKSLIP_QTY,0)
	INTO #TMPERRLIST 
	FROM #TMPALLORDER A
	JOIN
	(
		 SELECT C.ROW_ID AS ORDER_ID ,B.ARTICLE_CODE ,B.PARA1_CODE ,B.PARA2_CODE ,
				SUM(C.QUANTITY) AS ORD_QTY
		 FROM BUYER_ORDER_MST A
		 JOIN BUYER_ORDER_DET B ON A.ORDER_ID =B.ORDER_ID 
		 JOIN PLD01106 C ON C.ORD_ROW_ID=B.ROW_ID
		 JOIN PLM01106 C1 ON C1.MEMO_ID=C.MEMO_ID
		 WHERE A.CANCELLED =0 AND C1.CANCELLED=0
		 GROUP BY C.ROW_ID ,B.ARTICLE_CODE ,B.PARA1_CODE ,B.PARA2_CODE
	)B ON A.ORDER_ID =B.ORDER_ID 
	AND A.ARTICLE_CODE=B.ARTICLE_CODE
	AND A.PARA1_CODE=B.PARA1_CODE
	AND A.PARA2_CODE=B.PARA2_CODE
	WHERE ISNULL(B.ORD_QTY,0)-A.QTY<0
  
	--SELECT * FROM #TMPERRLIST
  
   IF EXISTS (SELECT TOP 1 'U' FROM #TMPERRLIST )
   BEGIN
    SET @CERRORMSG='PACKSLIP QTY MUST BE LESS OR EQUAL PICKLIST QTY. '
		
	SELECT B.PRODUCT_CODE ,LTRIM(RTRIM(STR(ISNULL(A.ORD_QTY,0),10,2)))+' PLICKLIST QTY : '
	+LTRIM(RTRIM(STR(ISNULL(SUM(B.QUANTITY),0),10,2)))+' SCAN QTY PLEASE CHECK ORDER' AS ERRMSG , 
	       @CXNID AS MEMO_ID
	FROM #TMPERRLIST A
	JOIN WPS_DET B ON A.ORDER_ID =B.ORDER_ID 
	AND A.ARTICLE_CODE =B.PACKSLIP_ARTICLE_CODE 
	AND A.PARA1_CODE =B.PACKSLIP_PARA1_CODE 
	AND A.PARA2_CODE =B.PACKSLIP_PARA2_CODE 
	WHERE B.PS_ID =@CXNID
	GROUP BY B.PRODUCT_CODE,LTRIM(RTRIM(STR(ISNULL(A.ORD_QTY,0),10,2)))
	
    
	RETURN
	END

END_PROC:

END
