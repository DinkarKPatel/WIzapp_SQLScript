create PROCEDURE SPOLAP_SEND_MIRROR_CNC_DATA
(  
  @CUPLOADEDXNID VARCHAR(50)  
 ,@BACKNOWLEDGE BIT=0 
 ,@CERRMSG VARCHAR(1000) OUTPUT  
)  
--WITH ENCRYPTION  
AS  
BEGIN  
 DECLARE @CMEMOID VARCHAR(50),@CSTEP VARCHAR(5)  
BEGIN TRY   
 SET @CSTEP=00  
   SET @CERRMSG=''
PRINT 'ENTER CANCELLATION/UNCANCELLATION SENDING'   
   
 SET @CSTEP=10     
 
   
  SET @CMEMOID=@CUPLOADEDXNID  
 ---- IF NO MEMO FOUND , JUST END THE PROCESS  
 IF ISNULL(@CMEMOID,'')=''  
  GOTO END_PROC  

  DECLARE @nInvMode NUMERIC(1,0),@cAC_Code VARCHAR(20),@cCustomer_Code VARCHAR(20)
  DECLARE @cCols NVARCHAR(MAX),@cnullableCols NVARCHAR(MAX), @cCmdCols NVARCHAR(MAX)
  
 IF @BACKNOWLEDGE=1 
	GOTO END_PROC  
    SET @CSTEP=50  

	 SET @CSTEP=55  
	 ---- SEND THE PURCHASE MEMO MASTER TABLE  
	EXEC SP3S_GET_CURSOR_BASED_ON_OLAP_XNSSENDING_COLS @cXNTYPE='CNC',@cTABLENAME='ICM01106',@cKEYNAME='CNC_MEMO_ID',@cKEYVALUE=@CMEMOID,@bSKUNAMES=0,@CERRMSG=@CERRMSG OUTPUT 
	IF ISNULL(@CERRMSG,'')<>'' 
		GOTO END_PROC
	SET @CSTEP=65  
	---- SEND THE PURCHASE MEMO DETAIL TABLE  AND SKU_NAMES Details

	DECLARE @bSKUNAMES BIT 
	SET @bSKUNAMES=0
	IF EXISTS (	SELECT TOP 1'U' FROM ICM01106 WHERE cnc_memo_id =@CMEMOID AND cnc_type=2)
	SET @bSKUNAMES=1

	EXEC SP3S_GET_CURSOR_BASED_ON_OLAP_XNSSENDING_COLS @cXNTYPE='CNC',@cTABLENAME='ICD01106',@cKEYNAME='CNC_MEMO_ID',@cKEYVALUE=@CMEMOID,@bSKUNAMES=@bSKUNAMES,@bPMT=1,@CERRMSG=@CERRMSG OUTPUT 
	IF ISNULL(@CERRMSG,'')<>'' 
		GOTO END_PROC

	

END TRY  
BEGIN CATCH  
 SET @CERRMSG='P: SPOLAP_SEND_MIRROR_CNC_DATA, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()  
 GOTO END_PROC  
END CATCH   
   
END_PROC:  
  
END   


