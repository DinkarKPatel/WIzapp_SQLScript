create PROCEDURE SAVETRAN_CONVERT_MRN_TO_BILL
(
	@NUPDATEMODE		NUMERIC(1,0),
	@NSPID				varchar(40),
	@CXNMEMOID			VARCHAR(40)='',
	@BCHALLANSLINKMODIFIED BIT = 0,
	@NPARTY_AMOUNT_FORTCS NUMERIC(18,2)=0  
	
)
--WITH ENCRYPTION
AS
BEGIN
	-- @NUPDATEMODE:	1- ADD 
	--					2- EDIT 
	--					3- CANCELLED 



	DECLARE @CTEMPDBNAME			VARCHAR(100),
			@CMASTERTABLENAME		VARCHAR(100),
			@CINTERMIDIATETABLENAME		VARCHAR(100),
			@CTEMPITERMIDIATETABLENAME	VARCHAR(100),
			@CTEMPITERMIDIATETABLE	VARCHAR(100),
			@CDETAILTABLENAME		VARCHAR(100),
			@CTEMPMASTERTABLENAME	VARCHAR(100),
			@CTEMPDETAILTABLENAME	VARCHAR(100),
			@CTEMPMASTERTABLE		VARCHAR(100),
			@CTEMPDETAILTABLE		VARCHAR(100),
			@CERRORMSG				VARCHAR(500),
			@LDONOTUPDATESTOCK		BIT,
			@CKEYFIELD1				VARCHAR(50),
			@CKEYFIELDVAL1			VARCHAR(50),
			@CMEMONO				VARCHAR(20),
			@NMEMONOLEN				NUMERIC(20,0),
			@CMEMONOVAL				VARCHAR(50),
			@CMEMODEPTID			VARCHAR(4),
			@CLOCATIONID			VARCHAR(4),
			@CHODEPTID				VARCHAR(4),
			@CCMD					NVARCHAR(4000),
			@CCMDOUTPUT				NVARCHAR(4000),
			@NSAVETRANLOOP			BIT,
			@NSTEP					INT,
			@LENABLETEMPDATABASE	BIT,
			@BRECFOUND              BIT,@CGSTCUTOFFDATE VARCHAR(10),@GSTDATE DATETIME,@DMEMO_DT DATETIME,
			@CWHERECLAUSE VARCHAR(200),@CFINYEAR VARCHAR(10),@CWIZAPPUSERCODE CHAR(7),
			@CMEMONOPREFIX VARCHAR(25),@CMEMOPREFIXPROC VARCHAR(25),@DBILLDT DATETIME,@NTAX NUMERIC(10,2),@TotalgstcessAmount numeric(10,3),
			@clocId char(4)
			




	DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))

	SET @NSTEP = 0		-- SETTTING UP ENVIRONMENT

	SET @CMASTERTABLENAME	= 'PIM01106'
	SET @CDETAILTABLENAME	= 'PID01106'
	
	SET @CTEMPMASTERTABLENAME	= 'PUR_PIM01106_UPLOAD'
	SET @CTEMPDETAILTABLENAME	= 'PUR_PID01106_UPLOAD'
	
	SET @CTEMPMASTERTABLE	= @CTEMPMASTERTABLENAME
	SET @CTEMPDETAILTABLE	= @CTEMPDETAILTABLENAME
	
	SET @CERRORMSG			= ''
	SET @LDONOTUPDATESTOCK	= 0
	SET @CKEYFIELD1			= 'MRR_ID'
	SET @CMEMONO			= 'MRR_NO'
	SET @NMEMONOLEN			= 10
	
	
	 IF @NUPDATEMODE IN (1,2)
	SELECT @clocId =LOCATION_CODE  FROM PUR_PIM01106_UPLOAD (NOLOCK) WHERE sp_id=@NSPID
     ELSE
    SELECT @clocId =LOCATION_CODE  FROM pim01106 (NOLOCK) WHERE mrr_id=@CXNMEMOID
	
	
	set @CLOCATIONID=@cLocId

	SELECT @CHODEPTID		= [VALUE] FROM CONFIG (nolock) WHERE  CONFIG_OPTION='HO_LOCATION_ID'		
	


	BEGIN TRY
		
		BEGIN TRANSACTION
		

		IF ISNULL(@CLOCATIONID,'')=''
		 BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' LOCATION ID CAN NOT BE BLANK  '  
			GOTO END_PROC    
		 END
					
		IF @NUPDATEMODE = 3			
		BEGIN
			SET @NSTEP = 10
			
			IF @CXNMEMOID=''
			BEGIN
				SET @CERRORMSG='MEMO ID REQUIRED FOR CANCELLATION........CANNOT PROCEED'
				GOTO END_PROC
			END
			
			SET @NSTEP = 13
			-- UPDATING SENTTOHO FLAG
			SET @CCMD = N' UPDATE ' + @CMASTERTABLENAME + ' with (rowlock) SET CANCELLED = 1,LAST_UPDATE=GETDATE() ' + 
						N' WHERE ' + @CKEYFIELD1 + ' = ''' + @CXNMEMOID + ''''
			EXEC SP_EXECUTESQL @CCMD
			
			SET @CKEYFIELDVAL1=@CXNMEMOID

			UPDATE PIM01106 SET REF_CONVERTED_MRNTOBILL_MRRID='',HO_SYNCH_LAST_UPDATE ='' WHERE  REF_CONVERTED_MRNTOBILL_MRRID=@CXNMEMOID
			
			GOTO END_PROC
		END
		
		SET @NSTEP=15
		
		SET @CWHERECLAUSE=' SP_ID='''+@NSPID+''''
		
		-- GETTING DEPT_ID FROM TEMP MASTER TABLE
		SELECT @DBILLDT=RECEIPT_DT,@CMEMODEPTID = DEPT_ID, @CKEYFIELDVAL1 = MRR_ID,@CFINYEAR=FIN_YEAR,@CMEMONOPREFIX=MEMO_PREFIX,
		@CWIZAPPUSERCODE=USER_CODE FROM PUR_PIM01106_UPLOAD (nolock) WHERE SP_ID=@NSPID
		SET @NSTEP=16
		IF ( @CMEMODEPTID IS NULL )
		BEGIN
			  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE SAVED...'
			  --SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'
			  GOTO END_PROC  		
		END
		SET @NSTEP=17
		IF OBJECT_ID('TEMPDB..#TMPREFMRR','U') IS NOT NULL
			DROP TABLE #TMPREFMRR
		
		SELECT DISTINCT MRR_ID INTO #TMPREFMRR FROM PUR_PID01106_UPLOAD (nolock) WHERE SP_ID=@NSPID
		
		-- START UPDATING XN TABLES	
		IF @NUPDATEMODE = 1 -- ADDMODE	
		BEGIN	
			
				
			SET @NSTEP = 20		-- GENERATING NEW KEY

		    EXEC SAVETRAN_GETMEMOPREFIX
			@CXNTYPE='PUR',
			@CUSERCODE=@CWIZAPPUSERCODE,
			@CFINYEAR=@CFINYEAR,
			@CSOURCELOCID=@CLOCATIONID,
			@CTARGETLOCID='',
			@CMANUALPREFIX=@CMEMONOPREFIX,
			@NSPID=@NSPID,
			@CMEMOPREFIX=@CMEMOPREFIXPROC OUTPUT,
			@CERRORMSG=@CERRORMSG OUTPUT
			
			
			IF ISNULL(@CERRORMSG,'')<>''
				GOTO END_PROC
				
			SET @NMEMONOLEN   = LEN(@CMEMOPREFIXPROC)+6
			
			IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
			BEGIN
				SET @NSTEP = 25
				-- GENERATING NEW MRR_NO		
				SET @NSAVETRANLOOP=0
				WHILE @NSAVETRANLOOP=0
				BEGIN
					EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMOPREFIXPROC, 1,
									@CFINYEAR,0, @CMEMONOVAL OUTPUT   
					
					SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+' (nolock) 
											WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' 
											AND FIN_YEAR = '''+@CFINYEAR+''' )
									SET @NLOOPOUTPUT=0
								ELSE
									SET @NLOOPOUTPUT=1'
					PRINT @CCMD
					EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
				END

				IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'	
					  -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'
					  GOTO END_PROC  		
				END

				SET @NSTEP = 30		-- GENERATING NEW ID

				-- GENERATING NEW PO ID
				SET @CKEYFIELDVAL1 = @CLOCATIONID + @CFINYEAR+isnull(REPLICATE('0', (22-LEN(@CLOCATIONID + @CFINYEAR))-LEN(LTRIM(RTRIM(@CMEMONOVAL)))),'')  + LTRIM(RTRIM(@CMEMONOVAL))  
				
				IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
					  GOTO END_PROC
				END
				
				SET @NSTEP = 35
				-- CHECK WETHER THE MEMO ID IS STILL LATER
				IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
					  GOTO END_PROC
				END

				SET @NSTEP = 40		-- UPDATING NEW ID INTO TEMP TABLES
				
				PRINT 'UPDATE MASTER INFO'
				-- UPDATING NEWLY GENERATED PO NO AND PO ID IN POM AND POD TEMP TABLES
				SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' with (rowlock) SET MRR_NO=''' + @CMEMONOVAL+''',
							MRR_ID = '''+@CKEYFIELDVAL1+''' WHERE '+@CWHERECLAUSE
				PRINT @CCMD			
				EXEC SP_EXECUTESQL @CCMD
			
							
			END
			
		END					-- END OF ADDMODE
		ELSE				-- CALLED FROM EDITMODE
		BEGIN				-- START OF EDITMODE
		
			SET @NSTEP = 45		-- GETTING ID INFO FROM TEMP TABLE
			
			-- UPDATING SENTTOHO FLAG
			SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' with (rowlock) SET LAST_UPDATE=GETDATE()  WHERE '+@CWHERECLAUSE
			EXEC SP_EXECUTESQL @CCMD
			
			SET @NSTEP=47
			IF @BCHALLANSLINKMODIFIED=1
				UPDATE PIM01106 with (rowlock) SET REF_CONVERTED_MRNTOBILL_MRRID='',HO_SYNCH_LAST_UPDATE ='' WHERE REF_CONVERTED_MRNTOBILL_MRRID=@CKEYFIELDVAL1
							
		END					-- END OF EDITMODE
		
		IF @NUPDATEMODE=1 OR @BCHALLANSLINKMODIFIED=1
		BEGIN
			SET @NSTEP=50
			UPDATE PIM01106 with (rowlock) SET REF_CONVERTED_MRNTOBILL_MRRID=@CKEYFIELDVAL1,HO_SYNCH_LAST_UPDATE ='' FROM #TMPREFMRR B
			WHERE B.MRR_ID=PIM01106.MRR_ID
		END
		
		SET @NSTEP = 52
		UPDATE PUR_PID01106_UPLOAD SET ROW_ID =  @CMEMODEPTID + CONVERT(VARCHAR(40), NEWID())  
		WHERE LEFT(ROW_ID,5) = 'LATER' AND   SP_ID=@NSPID
		
		SET @NSTEP = 55
		SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE + ' with (rowlock) SET MRR_ID = '''+@CKEYFIELDVAL1+''' WHERE '+@CWHERECLAUSE
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		



		-- CHECK WETHER THE MEMO ID IS STILL LATER
		IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
			GOTO END_PROC
		END
		
		SET @NSTEP = 60
		SELECT @CGSTCUTOFFDATE=VALUE FROM CONFIG (nolock) WHERE CONFIG_OPTION ='GST_CUT_OFF_DATE'
	    
		IF @CGSTCUTOFFDATE<>''
			SELECT @GSTDATE=CAST(@CGSTCUTOFFDATE AS DATETIME)
	    
	    SELECT TOP 1 @DMEMO_DT=receipt_dt FROM PUR_PIM01106_UPLOAD (nolock) WHERE SP_ID=@NSPID
	    

		DECLARE @cPurTermsName VARCHAR(200)
		SET @NSTEP=65
		SELECT @cPurTermsName=coalesce(@cPurTermsName+',','')+b.pur_terms_name  FROM  #TMPREFMRR a
		JOIN pim01106 b (NOLOCK) ON a.mrr_id=b.mrr_id

		SET @NSTEP=67
		UPDATE PUR_PIM01106_UPLOAD with (rowlock)	SET MRR_CREATION_DEPT_ID=DEPT_ID,pur_terms_name=@cPurTermsName WHERE SP_ID=@NSPID

		-- UPDATING MASTER TABLE (PIM01106) FROM TEMP TABLE
		SET @NSTEP = 70		-- UPDATING MASTER TABLE

		--SET @CWHERECLAUSE = ' SP_ID='+LTRIM(RTRIM((@NSPID)))

		SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' with (rowlock) SET OTHER_CHARGES_HSN_CODE =CASE WHEN ISNULL(OTHER_CHARGES_HSN_CODE,'''')='''' THEN ''0000000000'' ELSE OTHER_CHARGES_HSN_CODE END ,
		FREIGHT_HSN_CODE=CASE WHEN ISNULL(FREIGHT_HSN_CODE,'''')='''' THEN  ''0000000000'' ELSE FREIGHT_HSN_CODE END
		WHERE  SP_ID='''+LTRIM(RTRIM((@NSPID)))+''' '
		EXEC SP_EXECUTESQL @CCMD 
		
  			
		-- UPDATING TRANSACTION TABLE (PID01106) FROM TEMP TABLE
		SET @NSTEP = 76		-- UPDATING TRANSACTION TABLE

		-- UPDATING ROW_ID IN TEMP TABLES
		SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE + ' SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(40), NEWID())
					  WHERE '+@CWHERECLAUSE+' AND LEFT(ROW_ID,5) = ''LATER'''
		print @CCMD
		exec sp_executesql @CCMD
		
		IF @NUPDATEMODE =2 AND @BCHALLANSLINKMODIFIED=1
		BEGIN
			-- DELETING EXISTING ENTRIES FROM PID01106 TABLE WHERE ROW_ID NOT FOUND IN TEMPTABLE
			SET @NSTEP = 80		-- UPDATING TRANSACTION TABLE - DELETING EXISTING ENTRIES
		  
			SET @CCMD = N'DELETE FROM ' + @CDETAILTABLENAME + '   
			 WHERE ' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + ''''  
			PRINT @CCMD  
			EXEC SP_EXECUTESQL @CCMD  
		END

		set @nStep=90
	  EXEC SP3S_CALTOTALS_PUR
		@nUpdatemode=@nUpdatemode,
		@nSpId=@nSpId,
		@cMrrId=@cKeyFieldVal1,
		@BCALLEDFROMEKAYA=0,
		@NBOXUPDATEMODE=0,
		@nrcm_applicable=0,
		@CERRORMSG=@CERRORMSG outpuT,
		@CDEPT_ID=@clocId,
		@NPARTY_AMOUNT_FORTCS=@NPARTY_AMOUNT_FORTCS
  
  
	  if isnull(@cErrormsg,'')<>''
		goto end_proc
  
		SET @NSTEP = 100		-- UPDATING MASTER TABLE			    
	    EXEC UPDATEMASTERXN_OPT   
		 @CSOURCEDB = ''  
	   , @CSOURCETABLE = @CTEMPMASTERTABLENAME  
	   , @CDESTDB  = ''  
	   , @CDESTTABLE = @CMASTERTABLENAME  
	   , @CKEYFIELD1 = @CKEYFIELD1  
	   , @BALWAYSUPDATE = 1  
	   , @CFILTERCONDITION=@CWHERECLAUSE



		  -- INSERTING/UPDATING THE ENTRIES IN PID01106 TABLE FROM TEMPTABLE
		  SET @NSTEP = 120		-- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES

		  EXEC UPDATEMASTERXN_OPT   
				 @CSOURCEDB = ''  
			   , @CSOURCETABLE = @CTEMPDETAILTABLENAME  
			   , @CDESTDB  = ''  
			   , @CDESTTABLE = @CDETAILTABLENAME  
			   , @CKEYFIELD1 = 'ROW_ID'  
			   , @BALWAYSUPDATE = 1  
			   ,@CFILTERCONDITION=@CWHERECLAUSE
				    

		  SET @NSTEP=140 	
		  IF @DMEMO_DT<@GSTDATE  
		  BEGIN
			  SELECT @NTAX=ROUND(SUM(TAX_AMOUNT),3) FROM PID01106 WHERE MRR_ID=@CKEYFIELDVAL1   
			  UPDATE PIM01106 SET TAX_AMOUNT=ISNULL(@NTAX,0) WHERE MRR_ID=@CKEYFIELDVAL1


		  END 
		  ELSE
		  begin
			 SELECT @NTAX=ROUND(SUM(ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)),3) ,
			         @TotalgstcessAmount=ROUND(SUM(ISNULL(gst_cess_Amount ,0)),3) 
			 FROM PID01106 WHERE MRR_ID=@CKEYFIELDVAL1  
		
		

		end

		

		  SET @NSTEP = 145
		  UPDATE PIM01106 SET ROUND_OFF=ROUND((SUBTOTAL + (CASE WHEN BILL_LEVEL_TAX_METHOD = 2 THEN 0 ELSE ISNULL(@NTAX,0)+ISNULL(@TotalgstcessAmount,0) END) +  OTHER_CHARGES + isnull(tcs_amount,0) +   
			  CASE WHEN OH_TAX_METHOD=2 THEN 0 ELSE ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_SGST_AMOUNT,0)+ISNULL(FREIGHT_IGST_AMOUNT,0)+ISNULL(FREIGHT_CGST_AMOUNT,0)+ISNULL(FREIGHT_SGST_AMOUNT,0) END +
			  EXCISE_DUTY_AMOUNT+CASE WHEN ISNULL(FRIGHT_PAY_MODE,0)=2 THEN 0 ELSE  FREIGHT END ) - DISCOUNT_AMOUNT - POSTTAXDISCOUNTAMOUNT,0)-(SUBTOTAL+ (CASE WHEN BILL_LEVEL_TAX_METHOD = 2 THEN 0 ELSE ISNULL(@NTAX,0)+ISNULL(@TotalgstcessAmount,0) END) +OTHER_CHARGES+ isnull(tcs_amount,0)+  
			  CASE WHEN OH_TAX_METHOD=2 THEN 0 ELSE  ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_SGST_AMOUNT,0)+ISNULL(FREIGHT_IGST_AMOUNT,0)+ISNULL(FREIGHT_CGST_AMOUNT,0)+ISNULL(FREIGHT_SGST_AMOUNT,0) END+
			 CASE WHEN ISNULL(FRIGHT_PAY_MODE,0)=2 THEN 0 ELSE  FREIGHT END +EXCISE_DUTY_AMOUNT-DISCOUNT_AMOUNT-POSTTAXDISCOUNTAMOUNT)  
		  WHERE MRR_ID=@CKEYFIELDVAL1 AND MANUAL_ROUNDOFF=0  
		    
		  SET @NSTEP=150
		  UPDATE PIM01106 SET TOTAL_AMOUNT=(SUBTOTAL +CASE WHEN BILL_LEVEL_TAX_METHOD = 2 THEN 0 ELSE ISNULL(@NTAX,0)+ISNULL(@TotalgstcessAmount,0) END +  OTHER_CHARGES + isnull(tcs_amount,0) +   
				 CASE WHEN OH_TAX_METHOD=2 THEN 0 ELSE  ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_SGST_AMOUNT,0)+ISNULL(FREIGHT_IGST_AMOUNT,0)+ISNULL(FREIGHT_CGST_AMOUNT,0)+ISNULL(FREIGHT_SGST_AMOUNT,0) END+
			  CASE WHEN ISNULL(FRIGHT_PAY_MODE,0)=2 THEN 0 ELSE  FREIGHT END +EXCISE_DUTY_AMOUNT+ROUND_OFF) - DISCOUNT_AMOUNT  - POSTTAXDISCOUNTAMOUNT
		  WHERE MRR_ID=@CKEYFIELDVAL1  

		 

		SET @NSTEP = 160
		
		EXEC SAVETRAN_PUR_UPDSKU
		@NsPiD=@NSPID,
		@NMODE=2,
		@BCANCELBILL=0,
		@nUpdateMode=2,
		@CERRORMSG=@CERRORMSG OUTPUT  
				
		GOTO END_PROC


		
		
	END TRY
	BEGIN CATCH
		SET @CERRORMSG = 'Error in Proc: SAVETRAN_CONVERT_MRN_TO_BILL at STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
				
		GOTO END_PROC
	END CATCH
	
END_PROC:
	
	--SELECT * FROM PID01106 WHERE MRR_ID=@CKEYFIELDVAL1
	
	--SELECT * FROM PIM01106 WHERE REF_CONVERTED_MRNTOBILL_MRRID=@CKEYFIELDVAL1
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')=''
		BEGIN
			COMMIT TRANSACTION		
			DELETE A  FROM XNTYPE_CHECKSUM_MST A  WITH (ROWLOCK)  WHERE SP_ID=@NSPID
		END
		ELSE
		BEGIN
			ROLLBACK
		     DELETE A  FROM XNTYPE_CHECKSUM_MST A  WITH (ROWLOCK)  WHERE SP_ID=@NSPID

		END
	END

	INSERT @OUTPUT ( ERRMSG, MEMO_ID)
			VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )

	SELECT * FROM @OUTPUT
	

	-------------------------------------------
	
END