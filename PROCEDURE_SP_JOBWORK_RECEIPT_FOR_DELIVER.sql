CREATE PROCEDURE SP_JOBWORK_RECEIPT_FOR_DELIVER
(
	@CFM_DT DATETIME='' ,
	@CTO_DT DATETIME=''
)
AS
BEGIN   
IF OBJECT_ID('TEMPDB..#NOTDELIEVED','U') IS NOT NULL
	        DROP TABLE #NOTDELIEVED

 --HOLD BACK THAT HAS NOT BEEN DELIEVERED
		SELECT  A.MEMO_ID,B.ROW_ID,REF_CMD_ROW_ID,MEMO_NO,DELIVERED ,A.REMARKS,JOB_CODE ,A.LAST_UPDATE,DELIVERY_DT,
		        A.REMARKS AS BILL_REMARKS,B.REMARKS AS ITEM_REMARKS,B.PRODUCT_CODE,B.QUANTITY,A.MEMO_DT,A.CUSTOMER_CODE,MODE,B.DESCRIPTION,
		        (CASE WHEN MODE=2 THEN 'REPAIR ITEMS' ELSE 'SOLD ITEMS' END) AS HOLD_TYPE
		INTO #NOTDELIEVED
		FROM HOLD_BACK_DELIVER_MST A (NOLOCK)
		JOIN HOLD_BACK_DELIVER_DET B (NOLOCK) ON A.MEMO_ID=B.MEMO_ID
		LEFT JOIN 
		(
			SELECT REF_HBD_ROW_ID 
			FROM SLS_DELIVERY_MST A (NOLOCK)
			JOIN SLS_DELIVERY_DET B (NOLOCK) ON A.MEMO_ID =B.MEMO_ID 
			WHERE A.CANCELLED =0
		) SLS ON SLS.REF_HBD_ROW_ID =B.ROW_ID
		WHERE  SLS.REF_HBD_ROW_ID  IS NULL
		AND DELIVERED=0
		AND A.CANCELLED=0

		
         IF OBJECT_ID('TEMPDB..#RECEIVED','U') IS NOT NULL
			DROP TABLE #RECEIVED

		SELECT DISTINCT A.* 
		INTO #RECEIVED
		FROM #NOTDELIEVED A
		JOIN 
		(
			--GETTING LIST OF ISSUE THAT HAS NOT BEEN RECEIVED
			SELECT DET.REF_HBD_ROW_ID 
			FROM POST_SALES_JOBWORK_ISSUE_MST MST (NOLOCK)
			JOIN POST_SALES_JOBWORK_ISSUE_DET DET (NOLOCK) ON DET.ISSUE_ID =MST.ISSUE_ID	
			JOIN 
			(
				SELECT DET.REF_ROW_ID 
				FROM POST_SALES_JOBWORK_RECEIPT_MST MST (NOLOCK)
				JOIN POST_SALES_JOBWORK_RECEIPT_DET DET (NOLOCK) ON DET.RECEIPT_ID =MST.RECEIPT_ID	
				WHERE MST.CANCELLED=0 AND MST.RECEIPT_DT BETWEEN @CFM_DT AND @CTO_DT 
			)RCV ON DET.ROW_ID=RCV.REF_ROW_ID
			WHERE MST.CANCELLED=0 
			GROUP BY DET.REF_HBD_ROW_ID 
		)ISS ON A.ROW_ID=ISS.REF_HBD_ROW_ID
		--WHERE ISS.REF_HBD_ROW_ID IS NULL

        
         IF OBJECT_ID('TEMPDB..#TMPPENDINGFORDELIVER','U') IS NOT NULL
          DROP TABLE #TMPPENDINGFORDELIVER
          
       SELECT A.*,NEWID() AS ROW_ID FROM 
        (
		 SELECT CMM.CUSTOMER_CODE, CMM.CM_NO,CONVERT(VARCHAR,CMM.CM_DT,105) AS CM_DT,CMM.CM_ID,
		    QUANTITY=CMD.QUANTITY
		   ,CUSTOMER_NAME=C.CUSTOMER_TITLE +' '+C.CUSTOMER_FNAME + ' '+C.CUSTOMER_LNAME
		   ,C.MOBILE
		  
		   ,CAST(0 AS BIT ) AS CHK,(CASE WHEN S.SMS_SEND=1 THEN 'YES' ELSE 'NO' END) AS STATUS
          FROM CMM01106 CMM (NOLOCK)
          JOIN CMD01106 CMD (NOLOCK) ON CMM.CM_ID=CMD.CM_ID 
          JOIN #RECEIVED REC  ON CMD.ROW_ID =REC .REF_CMD_ROW_ID 
          JOIN CUSTDYM C (NOLOCK) ON C.CUSTOMER_CODE=CMM.CUSTOMER_CODE
          LEFT JOIN SEND_SMS_JWR S (NOLOCK) ON S.CM_ID=CMM.CM_ID 
		  AND CMM.CANCELLED=0   
		  AND ISNULL(MODE,0)<>2
         
		 UNION
		 SELECT REC.CUSTOMER_CODE, MEMO_NO  AS CM_NO,CONVERT(VARCHAR,MEMO_DT,105) AS CM_DT,MEMO_ID  AS CM_ID,
		    QUANTITY=REC.QUANTITY,
		    CUSTOMER_NAME=CUST.CUSTOMER_TITLE +' '+CUST.CUSTOMER_FNAME + ' '+CUST.CUSTOMER_LNAME
		   ,CUST.MOBILE
		  
		   ,CAST(0 AS BIT ) AS CHK,'' AS STATUS
          FROM #RECEIVED REC
          JOIN CUSTDYM CUST (NOLOCK) ON CUST.CUSTOMER_CODE=REC.CUSTOMER_CODE 
		  AND ISNULL(MODE,0)=2
		  )A
         
		  
END
