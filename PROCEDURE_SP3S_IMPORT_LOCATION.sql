create PROCEDURE SP3S_IMPORT_LOCATION
(
	@NSPID	INT
 
)
AS
BEGIN

DECLARE		    @CTEMPDBNAME			VARCHAR(100),
				@CMASTERTABLENAME		VARCHAR(100),
				@CTEMPMASTERTABLENAME	VARCHAR(100),
				@CTEMPMASTERTABLE		VARCHAR(100),
				@CMASTERTABLENAME1		VARCHAR(100),
				@CTEMPMASTERTABLENAME1	VARCHAR(100),
				@CTEMPMASTERTABLE1		VARCHAR(100),
				@CERRMSG				VARCHAR(500),
				@LDONOTUPDATESTOCK		BIT,
				@CKEYFIELD1				VARCHAR(50),
				@CKEYFIELDVAL1			VARCHAR(50),
				@NMEMONOLEN				NUMERIC(20,0),
				@CMEMONOVAL				VARCHAR(50),
				@NSTEP					INT,
				@CMEMONOPREFIX			VARCHAR(10),
				@CCMD NVARCHAR(MAX),
				@LOCATINID varchar(5),
				@TMPLOCATTRTABLE VARCHAR(100)

	DECLARE @OUTPUT TABLE (ERRMSG VARCHAR(2000),REPORT_ID VARCHAR(100))

	SET @NSTEP = 10		-- SETTTING UP ENVIRONMENT

	SET @CTEMPDBNAME = ''
	SELECT @LOCATINID=value from config where config_option='location_id' 

    IF ISNULL(@LOCATINID,'')=''
	    BEGIN
	      SET @CERRMSG =' LOCATION ID CAN NOT BE BLANK  '  
			GOTO END_PROC   
	END

	SET @NSTEP = 30
	SET @CMASTERTABLENAME	= 'LOCATION'
	SET @CMASTERTABLENAME1='LOC_ATTR'
	
	SET @CTEMPMASTERTABLENAME	= 'TMP_LOC_UPLOAD_MST_'+LTRIM(RTRIM(STR(@NSPID)))
	SET @CTEMPMASTERTABLE	= @CTEMPDBNAME + @CTEMPMASTERTABLENAME

	SET @TMPLOCATTRTABLE='TMP_LOCATTR_UPLOAD_MST_'+LTRIM(RTRIM(STR(@NSPID)))

	SET @CTEMPMASTERTABLENAME1	= 'TMP_LOC_ATTR_UPLOAD_MST_'+LTRIM(RTRIM(STR(@NSPID)))
	SET @CTEMPMASTERTABLE1	= @CTEMPDBNAME + @CTEMPMASTERTABLENAME1
	



	SET @CERRMSG			= ''
	SET @LDONOTUPDATESTOCK	= 0
	SET @CKEYFIELD1			= 'DEPT_ID'
	SET @NMEMONOLEN			= 2
	

	BEGIN TRANSACTION
	
	BEGIN TRY
	SET @CERRMSG=''

	IF OBJECT_ID(@TMPLOCATTRTABLE,'U') IS NOT NULL
	BEGIN
	     SET @CCMD='SELECT CAST(''LATER'' AS VARCHAR(10)) AS ATTRIBUTE_CODE,
		            CAST(''LATER'' AS VARCHAR(10))  KEY_CODE,
					cast(NEWID() as varchar(40)) AS ROW_ID,GETDATE() LAST_UPDATE,''01'' COMPANY_CODE,
					ATTR_NAME AS ATTRIBUTE_NAME,
					attr_value AS key_name,a.dept_id
		  INTO '+@CTEMPMASTERTABLE1+' FROM '+@TMPLOCATTRTABLE +' A '
		 print @CCMD
		 exec sp_executesql @CCMD



	END

	  
	  DECLARE @CDEPT_NAME VARCHAR(100)

	   SET @CCMD='SELECT @CDEPT_NAME= a.DEPT_NAME FROM '+@CTEMPMASTERTABLE +' A
	   JOIN LOCATION B ON A.DEPT_NAME=B.DEPT_NAME 
	   WHERE A.DEPT_ID<>B.DEPT_ID  ' 
       EXEC SP_EXECUTESQL @CCMD,N'@CDEPT_NAME VARCHAR(100) OUTPUT',@CDEPT_NAME OUTPUT

	   IF ISNULL(@CDEPT_NAME,'')<>''
	   BEGIN
	        SET @CERRMSG=@CDEPT_NAME+' LOCATION ALREDY EXISTS DIFFERNT DEPT ID'
			GOTO END_PROC
	   END

	    SET @CCMD='SELECT @CDEPT_NAME= ISNULL(DEPT_ID,'''')+ISNULL(DEPT_NAME,'''')  FROM '+@CTEMPMASTERTABLE +' A  WHERE (ISNULL(DEPT_ID,'''')='''' OR ISNULL(DEPT_NAME,'''')='''' )' 
		print @CCMD
        EXEC SP_EXECUTESQL @CCMD,N'@CDEPT_NAME VARCHAR(100) OUTPUT',@CDEPT_NAME OUTPUT

		IF ISNULL(@CDEPT_NAME,'')<>''
	   BEGIN
	        SET @CERRMSG=' DEPT ID/DEPT NAME CAN NOT BE BLANK'
			GOTO END_PROC
	   END

	   SET @CCMD='UPDATE A SET MAJOR_DEPT_ID=DEPT_ID,DEPT_AC_CODE=''0000000000'',area_code=''0000000'',
	               fc_code=''0000000''
	   FROM '+@CTEMPMASTERTABLE +' A'
	   EXEC SP_EXECUTESQL @CCMD
		


		SET @NSTEP = 160
		EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPMASTERTABLENAME
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CMASTERTABLENAME
			, @CKEYFIELD1	= @CKEYFIELD1
			, @BALWAYSUPDATE = 1


		IF OBJECT_ID ('#NEW_ATTRM','U') IS NOT NULL
			DROP TABLE #NEW_ATTRM		
			CREATE TABLE #NEW_ATTRM (ATTRIBUTE_NAME VARCHAR(300))
		
	
	    SET @CCMD = N'INSERT INTO #NEW_ATTRM(ATTRIBUTE_NAME) SELECT DISTINCT A.ATTRIBUTE_NAME FROM '+@CTEMPMASTERTABLE1+' A LEFT OUTER JOIN ATTRM B
		ON A.ATTRIBUTE_NAME = B.ATTRIBUTE_NAME
		WHERE B.ATTRIBUTE_NAME IS NULL '
		PRINT @CCMD 
		EXEC SP_EXECUTESQL @CCMD

		DECLARE @CATTRMVAL VARCHAR(10),@ATTRIBUTE_NAME varchar(100)
	
		WHILE(SELECT TOP 1 'U' FROM #NEW_ATTRM) = 'U'
		BEGIN
			EXEC GETNEXTKEY 'ATTRM','ATTRIBUTE_CODE',7,@LOCATINID,1,'',2,@CATTRMVAL OUTPUT 
		    SET @ATTRIBUTE_NAME = (SELECT TOP 1 ATTRIBUTE_NAME FROM #NEW_ATTRM)

			 INSERT attrm	( attribute_code, attribute_group, attribute_mode, attribute_name, attribute_order, attribute_type, company_code, inactive,
			  LAST_MODIFIED_ON, last_update, mandatory, REMARKS )  
			 SELECT 	 @CATTRMVAL attribute_code,'ALL' attribute_group,0 attribute_mode,@ATTRIBUTE_NAME attribute_name,0 attribute_order,4 attribute_type,'01' company_code,0 inactive,
			 '' LAST_MODIFIED_ON,getdate() last_update,0 mandatory,'' REMARKS

		    DELETE FROM #NEW_ATTRM WHERE ATTRIBUTE_NAME = @ATTRIBUTE_NAME
		END

	    SET @CCMD = N'UPDATE A SET A.ATTRIBUTE_CODE  = B.ATTRIBUTE_CODE FROM '+@CTEMPMASTERTABLE1+' A JOIN ATTRM B ON A.ATTRIBUTE_NAME=B.ATTRIBUTE_NAME'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @CCMD = N'UPDATE '+@CTEMPMASTERTABLE1+' SET ATTRIBUTE_CODE=''0000000'' WHERE ISNULL(ATTRIBUTE_NAME,'''')='''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		

		IF OBJECT_ID ('#NEW_attr_key','U') IS NOT NULL
			DROP TABLE #NEW_attr_key		
			CREATE TABLE #NEW_attr_key (attribute_code varchar(10),KEY_NAME VARCHAR(300))
		
	
	    SET @CCMD = N'INSERT INTO #NEW_attr_key(attribute_code,KEY_NAME) SELECT DISTINCT A.ATTRIBUTE_CODE ,a.KEY_NAME FROM '+@CTEMPMASTERTABLE1+' A LEFT OUTER JOIN ATTR_KEY B
		ON A.ATTRIBUTE_code = B.ATTRIBUTE_code  AND A.KEY_NAME=B.KEY_NAME
		WHERE B.ATTRIBUTE_CODE IS NULL '
		PRINT @CCMD 
		EXEC SP_EXECUTESQL @CCMD

		DECLARE @CKEYVAL VARCHAR(10),@KEY_NAME varchar(100),@ATTRCODE  varchar(100)
	
		WHILE(SELECT TOP 1 'U' FROM #NEW_attr_key) = 'U'
		BEGIN
			EXEC GETNEXTKEY 'ATTR_KEY','KEY_CODE',7,@LOCATINID,1,'',2,@CKEYVAL OUTPUT 

		   select top 1 @ATTRCODE=ATTRIBUTE_CODE,@KEY_NAME=KEY_NAME from #NEW_attr_key

		    INSERT ATTR_KEY	( attribute_code, company_code, inactive, key_alias, key_code, key_name, LAST_MODIFIED_ON, last_update ) 
			 SELECT 	@ATTRCODE  attribute_code,'01' company_code,0 inactive,'' key_alias,@CKEYVAL key_code, 
			 @KEY_NAME as key_name,'' LAST_MODIFIED_ON,getdate() last_update 
			 
		    DELETE FROM #NEW_attr_key WHERE ATTRIBUTE_code  = @ATTRCODE and KEY_NAME =@KEY_NAME
		END



		SET @CCMD = N'UPDATE A SET A.KEY_CODE   = B.KEY_CODE FROM '+@CTEMPMASTERTABLE1+' A JOIN ATTR_KEY B ON A.ATTRIBUTE_CODE =B.ATTRIBUTE_CODE
		AND A.KEY_NAME=B.KEY_NAME '
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @CCMD = N'UPDATE '+@CTEMPMASTERTABLE1+' SET KEY_CODE=''0000000'' WHERE ISNULL(KEY_NAME,'''')='''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @NSTEP = 160
		EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPMASTERTABLENAME1
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CMASTERTABLENAME1
			, @CKEYFIELD1	= 'KEY_CODE'
			, @CKEYFIELD2	= 'ATTRIBUTE_CODE'
			, @BALWAYSUPDATE = 1
						
	END TRY
	BEGIN CATCH
		SET @CERRMSG = 'P:- SP3S_IMPORT_LOCATION, STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		GOTO END_PROC
	END CATCH
	
END_PROC:
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRMSG,'')='' 
		begin
		SET @CERRMSG='SUCCESS'
			commit TRANSACTION

		end
		ELSE
			ROLLBACK
	END
	
	SELECT @CERRMSG AS ERRMSG
	
	---DROPPING TEMP TABLES
	SET @CCMD = N'IF OBJECT_ID('''+@CTEMPMASTERTABLE+''',''U'') IS NOT NULL
					 DROP TABLE '+@CTEMPMASTERTABLE
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD

		SET @CCMD = N'IF OBJECT_ID('''+@CTEMPMASTERTABLE1+''',''U'') IS NOT NULL
					 DROP TABLE '+@CTEMPMASTERTABLE1
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD

		SET @CCMD = N'IF OBJECT_ID('''+@TMPLOCATTRTABLE+''',''U'') IS NOT NULL
					 DROP TABLE '+@TMPLOCATTRTABLE
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD

END
