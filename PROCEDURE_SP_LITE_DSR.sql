create PROCEDURE SP_LITE_DSR      
(      
 @NQUERYID NUMERIC(3,0),      
 @CDEPT_ID VARCHAR(4) = '',      
 @DTFROM DATETIME='',      
 @DTTO DATETIME='',      
 @CUSERCODE VARCHAR(12) = '',      --CHANGE
 @NMODE NUMERIC(1,0) = 1,      
 @PRINTDETAILS BIT = 0,  
 @CWHERE VARCHAR(100) ='',
 @BESTIMATEENABLED BIT = 1,
 @CBINID	VARCHAR(10)='',
 @NSUMMARYTYPE INT=1,
 @CLOGIN_USERCODE VARCHAR(12) = '',
  @NCLUBBED INT=1 

)      
--WITH ENCRYPTION
AS      
BEGIN      
--(dinkar) Replace  left(memoid,2) to Location_code 
	DECLARE @CCUTOFFDATE VARCHAR(10)
	SELECT TOP 1 @CCUTOFFDATE=VALUE FROM CONFIG WHERE CONFIG_OPTION='GIT_CUT_OFF_DATE'
	
	SET @CCUTOFFDATE=ISNULL(@CCUTOFFDATE,'')

	      
IF @NQUERYID = 1      
	GOTO LBLGETREPORTS      
      
ELSE IF @NQUERYID = 2      
	GOTO LBLGETLOCATION      
      
ELSE IF @NQUERYID = 3      
	GOTO LBLGETCASHFUNDFLOW      
      
ELSE IF @NQUERYID = 4      
	GOTO LBLGETSALESSUMMARY      
      
ELSE IF @NQUERYID = 5      
	GOTO LBLGETDETAILSALE      
      
ELSE IF @NQUERYID = 6      
	GOTO LBLGETBILLWISETAX      
      
ELSE IF @NQUERYID = 7      
	GOTO LBLGETCASHXNLEDGR   
   
ELSE IF @NQUERYID = 8      
	GOTO LBLGETLISTOFADV     
  
ELSE IF @NQUERYID = 9      
	GOTO LBLGETLISTOFCREDITNOTE     
    
ELSE IF @NQUERYID = 10     
	GOTO   LBLPARTYLEDGER   
   
ELSE IF @NQUERYID = 11
	GOTO LBLGETCUSTOMERBALANCES

ELSE IF @NQUERYID = 12
	GOTO LBLGETCUSTOMERXNLEDGR

ELSE IF @NQUERYID= 13
	GOTO LBLCUSTOMER

ELSE IF @NQUERYID= 14
	GOTO LBLGIT
	
  
ELSE IF @NQUERYID= 15
	GOTO LBLGITDN   
	
ELSE IF @NQUERYID= 16
	GOTO LBLUSERS   

ELSE IF @NQUERYID= 17
	GOTO LBLDSR	
	
ELSE IF @NQUERYID= 18
	GOTO LBLPOSRCVB
ELSE IF @NQUERYID= 19
	GOTO LBLBINS		
ELSE IF @NQUERYID= 20
	GOTO LBLGETDETAILSALEINV
	
ELSE IF @NQUERYID= 21
	GOTO LBLSALESEMPLOYEE

ELSE IF @NQUERYID= 22
	GOTO LBLGETREPORTS_NEW
		

ELSE IF @NQUERYID= 23
	GOTO LBLGETREPORTS_GST



ELSE      
	GOTO LAST  


LBLBINS:
	SELECT * FROM BIN
	GOTO LAST

LBLDSR:
	EXEC SP_GETPOS_RECEIPTS @DTFROM
	GOTO LAST

LBLPOSRCVB:
	EXEC SP_GETPOS_RECEIVABLES @DTFROM
	GOTO LAST
	
LBLUSERS:      
	--DECLARE @BACCESS BIT
	--SELECT @BACCESS=VALUE FROM MODULES WHERE FORM_NAME='FRMSALE' AND FORM_OPTION='DISPLAY_BILLS_ALL_USERS' AND USER_CODE= @CUSERCODE

	 DECLARE @BALLOW_ACCESS_RETAIL_SALE_ALL_USERS VARCHAR(10)
	 SELECT @BALLOW_ACCESS_RETAIL_SALE_ALL_USERS=ALLOW_ACCESS_RETAIL_SALE_ALL_USERS FROM USERS WHERE USER_CODE =@CLOGIN_USERCODE 

	 IF ISNULL(@BALLOW_ACCESS_RETAIL_SALE_ALL_USERS,0)=1
	 BEGIN
	       SELECT A.USER_CODE,A.USERNAME   
			FROM USERS A   
			ORDER BY USERNAME  

	 END
	 ELSE
	 BEGIN

		SELECT A.USER_CODE,A.USERNAME 
		FROM USERS A 
		JOIN
		(
		 SELECT DISTINCT XNS_USER_CODE 
		 FROM USER_XNS_FILTER (NOLOCK) WHERE USER_CODE= @CLOGIN_USERCODE 
		 UNION 
		 SELECT @CLOGIN_USERCODE AS XNS_USER_CODE
		 ) B ON A.USER_CODE =B.XNS_USER_CODE 
		 ORDER BY USERNAME

		END


	


	GOTO LAST
      
      
LBLGETREPORTS:      
	  
	SELECT G_REPORT_FILE,D_REPORT_FILE,LBL,DRAFT,ADVSETTING,LAST_UPDATE,TS,ROW_ID,REPORT_GROUP,CUSTOM_REPORT,NOOFCOPIES,
	LPT_NO,MODULE_NAME,PAGE_NO,REPORT_NO,REPORT_NAME,FOR_EMAIL,REPORT_HIDE,XTAB,UDRF,REPORT_GRP_NO,CONVERT(BIT,0) AS [CUSTOM] 
	FROM REPORTS 
	WHERE MODULE_NAME = 'FIXREPORTS' 
	ORDER BY REPORT_GROUP,REPORT_NO      
	GOTO LAST      

LBLGETREPORTS_NEW:

	  	SELECT G_REPORT_FILE,D_REPORT_FILE,REPORT_GROUP,CUSTOM_REPORT,NOOFCOPIES,LPT_NO,
	  	MODULE_NAME,REPORT_NO,REPORT_NAME,CONVERT(BIT,0) AS [CUSTOM],TS,REPORT_GRP_NO
	  	FROM REPORTS 
	  	WHERE MODULE_NAME = 'FIXREPORTS_BETA' AND ISNULL(REPORT_HIDE,0)=0
	  	UNION ALL 
	  	SELECT G_REPORT_FILE,D_REPORT_FILE,REPORT_GROUP,CUSTOM_REPORT,NOOFCOPIES,LPT_NO,
	  	MODULE_NAME,REPORT_NO,REPORT_NAME,CONVERT(BIT,1) AS [CUSTOM],TS,0 AS REPORT_GRP_NO
	  	FROM REPORTS_CUSTOM 
	 -- 	UNION 
	 -- 	SELECT G_REPORT_FILE,D_REPORT_FILE,'99. PRODUCTION' REPORT_GROUP,CUSTOM_REPORT,NOOFCOPIES,LPT_NO,
	 -- 	'FIXREPORTS_BETA' AS MODULE_NAME,REPORT_NO,REPORT_NAME,CONVERT(BIT,0) AS [CUSTOM],TS ,'99' REPORT_GRP_NO
		--FROM PRD_REPORTS 
		--WHERE MODULE_NAME = 'PRD_FIXREPORTS_BETA' AND ISNULL(REPORT_HIDE,0)=0 AND REPORT_NAME='3. UPC PRD STATUS WITH WO'
	 ORDER BY REPORT_GRP_NO,REPORT_NO  
	  	    
	GOTO LAST      
	
	
	LBLGETREPORTS_GST:

	  	SELECT G_REPORT_FILE,D_REPORT_FILE,REPORT_GROUP,CUSTOM_REPORT,NOOFCOPIES,LPT_NO,
	  	MODULE_NAME,REPORT_NO,REPORT_NAME,CONVERT(BIT,0) AS [CUSTOM],TS,REPORT_GRP_NO
	  	FROM REPORTS 
	  	WHERE MODULE_NAME = 'FIXREPORTS_GST' AND ISNULL(REPORT_HIDE,0)=0 
	    ORDER BY REPORT_GRP_NO,REPORT_NO  	  	
	  	    
	GOTO LAST 

LBLGETLOCATION:      
	  
	SELECT *, DEPT_ID+' '+DEPT_NAME AS LOCATION_NAME FROM LOCATION WHERE DEPT_ID=MAJOR_DEPT_ID   ORDER BY DEPT_ID   
	  
	GOTO LAST      
      
LBLGETCASHFUNDFLOW:      
      
	EXECUTE SP_DSR_CASHFUNDFLOW @DTFROM ,@DTTO,@NMODE,@PRINTDETAILS,@BESTIMATEENABLED,@CDEPT_ID,@CUSERCODE,@CBINID   
	  
	GOTO LAST      
      
LBLGETSALESSUMMARY:    
   
   
   IF @NMODE=1
    	EXECUTE SP_DSR_SALESSUMMARY_HSN @DTFROM,@DTTO,@CDEPT_ID,@BESTIMATEENABLED,@CUSERCODE, @CBINID,@NSUMMARYTYPE,@CLOGIN_USERCODE,@NMODE
	ELSE 
	    EXECUTE SP_DSR_SALESSUMMARY @DTFROM,@DTTO,@CDEPT_ID,@BESTIMATEENABLED,@CUSERCODE, @CBINID,@NSUMMARYTYPE,@CLOGIN_USERCODE,@NMODE
	  
	GOTO LAST      
      
LBLGETDETAILSALE:      
      
	EXECUTE SP_DSR_DETAILSALE  @DTFROM,@DTTO,@CDEPT_ID,@NMODE,@BESTIMATEENABLED,@CUSERCODE, @CBINID,@NSUMMARYTYPE,@CLOGIN_USERCODE,@SHOWACTIVELOCATIONS=@PRINTDETAILS
	  
	GOTO LAST
	
	
LBLGETDETAILSALEINV:
	
	EXECUTE SP_DSR_DETAILSALE_INV  @DTFROM,@DTTO,@CDEPT_ID,@NMODE,@BESTIMATEENABLED,@CUSERCODE, @CBINID
	  
	GOTO LAST       
      
LBLGETBILLWISETAX:      
      
	EXECUTE SP_DSR_BILLWISETAX @DTFROM,@DTTO,@CDEPT_ID,@NMODE,@BESTIMATEENABLED,@CUSERCODE,@CBINID     
	  
	GOTO LAST      
  
LBLGETCASHXNLEDGR:      
	  
	EXECUTE SP_CASHXN @CDEPT_ID,@DTFROM,@DTTO,@BESTIMATEENABLED,0,0,@CUSERCODE,@CBINID
	  
	GOTO LAST      
	  
LBLGETLISTOFADV:  
      
      
	SELECT B.CUSTOMER_CODE,B.CUSTOMER_FNAME+' '+B.CUSTOMER_LNAME AS XN_PARTY_NAME,  
			CONVERT(VARCHAR,ADV_REC_DT,105) AS MEMO_DT,ADV_REC_NO AS MEMO_NO,    
   A.AMOUNT,ISNULL(C.ADJ_AMOUNT,0) AS ADJ_AMOUNT,A.AMOUNT-ISNULL(C.ADJ_AMOUNT,0) AS PENDING_AMOUNT,    
   ISNULL(ADJ_MEMO_NO,'') AS ADJ_MEMO_NO,ISNULL(CONVERT(VARCHAR,ADJ_MEMO_DT,105),'') AS ADJ_MEMO_DT    
   FROM ARC01106 A     
   JOIN CUSTDYM B ON A.CUSTOMER_CODE=B.CUSTOMER_CODE    
   LEFT OUTER JOIN     
  (
   SELECT ADJ_MEMO_ID, CM_NO AS ADJ_MEMO_NO,CM_DT AS ADJ_MEMO_DT,SUM(A.AMOUNT) AS ADJ_AMOUNT  
   FROM PAYMODE_XN_DET A     
   JOIN CMM01106 B ON A.MEMO_ID=B.CM_ID  WHERE XN_TYPE='SLS'    
   AND PAYMODE_CODE='0000002' AND B.CANCELLED=0 
   AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
   GROUP BY ADJ_MEMO_ID,CM_NO,CM_DT
   UNION ALL    
   SELECT ADJ_MEMO_ID,ADV_REC_NO AS ADJ_MEMO_NO,ADV_REC_DT AS ADJ_MEMO_DT,SUM(A.AMOUNT) AS ADJ_AMOUNT  
   FROM PAYMODE_XN_DET A     
   JOIN ARC01106 B ON A.MEMO_ID=B.ADV_REC_ID  WHERE ARC_TYPE=1    
   AND PAYMODE_CODE='0000002' AND B.CANCELLED=0 GROUP BY ADJ_MEMO_ID,ADV_REC_NO,ADV_REC_DT    
   ) C    
   ON A.ADV_REC_ID=C.ADJ_MEMO_ID    
   WHERE A.CANCELLED=0 AND A.ARC_TYPE=1   
   AND A.ADV_REC_DT<=@DTTO   AND ((@CWHERE='1' AND A.AMOUNT-ISNULL(C.ADJ_AMOUNT,0)<>0) OR    
   (@CWHERE='2' AND ISNULL(C.ADJ_AMOUNT,0)<>0) OR @CWHERE='3')    
     
   GOTO LAST   
     
LBLGETLISTOFCREDITNOTE:  
   
	 SELECT B.CUSTOMER_CODE,B.CUSTOMER_FNAME+' '+B.CUSTOMER_LNAME AS XN_PARTY_NAME,  
				CONVERT(VARCHAR,CM_DT,105) AS MEMO_DT,CM_NO AS MEMO_NO,    
				PAY.AMOUNT AS AMOUNT,  
				ISNULL(C.ADJ_AMOUNT,0) AS ADJ_AMOUNT,ABS(PAY.AMOUNT)-ISNULL(C.ADJ_AMOUNT,0) AS PENDING_AMOUNT,    
		  ISNULL(ADJ_MEMO_NO,'') AS ADJ_MEMO_NO,ISNULL(CONVERT(VARCHAR,ADJ_MEMO_DT,105),'') AS ADJ_MEMO_DT    
	FROM CMM01106 A     
	JOIN custdym B (nolock) ON A.CUSTOMER_CODE=B.CUSTOMER_CODE  
	JOIN PAYMODE_XN_DET PAY ON PAY.MEMO_ID=A.CM_ID AND PAY.XN_TYPE='SLS' AND PAY.PAYMODE_CODE='0000004'
	 LEFT OUTER JOIN     
   (SELECT ADJ_MEMO_ID,CM_NO AS ADJ_MEMO_NO,CM_DT AS ADJ_MEMO_DT,SUM(A.AMOUNT) AS ADJ_AMOUNT  
	FROM PAYMODE_XN_DET A     
	JOIN CMM01106 B ON A.MEMO_ID=B.CM_ID  WHERE XN_TYPE='SLS'    
	AND PAYMODE_CODE='0000001' AND B.CANCELLED=0 
   AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE

	GROUP BY ADJ_MEMO_ID,CM_NO,CM_DT    
	UNION ALL    
	SELECT ADJ_MEMO_ID,ADV_REC_NO AS ADJ_MEMO_NO,ADV_REC_DT AS ADJ_MEMO_DT,SUM(A.AMOUNT) AS ADJ_AMOUNT   
	FROM PAYMODE_XN_DET A     
	JOIN ARC01106 B ON A.MEMO_ID=B.ADV_REC_ID  WHERE ARC_TYPE=2      
	AND PAYMODE_CODE='0000001' AND B.CANCELLED=0 GROUP BY ADJ_MEMO_ID,ADV_REC_NO,ADV_REC_DT    
	) C    
	ON A.CM_ID=C.ADJ_MEMO_ID    
	WHERE A.CANCELLED=0 AND SUBSTRING(A.CM_NO,5,1)='N'   
	AND  A.CM_DT<=@DTTO  AND (A.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE  AND ((@CWHERE='1' AND ABS(PAY.AMOUNT)-ISNULL(C.ADJ_AMOUNT,0)<>0) OR    
	AND ((@CWHERE='2' AND ISNULL(C.ADJ_AMOUNT,0)<>0) OR @CWHERE='3')   
    

   --   SELECT B.CUSTOMER_CODE,B.CUSTOMER_FNAME+' '+B.CUSTOMER_LNAME AS XN_PARTY_NAME,  
   --             CONVERT(VARCHAR,CM_DT,105) AS MEMO_DT,CM_NO AS MEMO_NO,    
   --             A.NET_AMOUNT AS AMOUNT,  
   --             ISNULL(C.ADJ_AMOUNT,0) AS ADJ_AMOUNT,A.NET_AMOUNT-ISNULL(C.ADJ_AMOUNT,0) AS PENDING_AMOUNT,    
   --       ISNULL(ADJ_MEMO_NO,'') AS ADJ_MEMO_NO,ISNULL(CONVERT(VARCHAR,ADJ_MEMO_DT,105),'') AS ADJ_MEMO_DT    
   -- FROM CMM01106 A     
   -- JOIN  B ON A.CUSTOMER_CODE=B.CUSTOMER_CODE  
   -- LEFT OUTER JOIN     
   --(SELECT ADJ_MEMO_ID,CM_NO AS ADJ_MEMO_NO,CM_DT AS ADJ_MEMO_DT,SUM(A.AMOUNT) AS ADJ_AMOUNT  
   -- FROM PAYMODE_XN_DET A     
   -- JOIN CMM01106 B ON A.MEMO_ID=B.CM_ID  WHERE XN_TYPE='SLS'    
   -- AND PAYMODE_CODE='0000001' AND B.CANCELLED=0 GROUP BY ADJ_MEMO_ID,CM_NO,CM_DT    
   -- UNION ALL    
   -- SELECT ADJ_MEMO_ID,ADV_REC_NO AS ADJ_MEMO_NO,ADV_REC_DT AS ADJ_MEMO_DT,SUM(A.AMOUNT) AS ADJ_AMOUNT   
   -- FROM PAYMODE_XN_DET A     
   -- JOIN ARC01106 B ON A.MEMO_ID=B.ADV_REC_ID  WHERE ARC_TYPE=2      
   -- AND PAYMODE_CODE='0000001' AND B.CANCELLED=0 GROUP BY ADJ_MEMO_ID,ADV_REC_NO,ADV_REC_DT    
   -- ) C    
   -- ON A.CM_ID=C.ADJ_MEMO_ID    
   -- WHERE A.CANCELLED=0 AND SUBSTRING(A.CM_NO,5,1)='N'   
   -- AND  A.CM_DT<=@DTTO  AND ((@CWHERE='1' AND A.NET_AMOUNT-ISNULL(C.ADJ_AMOUNT,0)<>0) OR    
   -- (@CWHERE='2' AND ISNULL(C.ADJ_AMOUNT,0)<>0) OR @CWHERE='3')    
     
	GOTO LAST    
      
      
LBLPARTYLEDGER:  
      
	 EXEC SP_PARTYLEDGER  @CWHERE,@DTFROM,@DTTO,'',@BESTIMATEENABLED--CHANGE
       
	 GOTO LAST    
     
     
LBLGETCUSTOMERBALANCES:

	EXECUTE SP_DSR_CUSTOMER_BALANCES @DTFROM,@DTTO,@PRINTDETAILS,@BESTIMATEENABLED,@CDEPT_ID--CHANGE

	GOTO LAST
	
LBLGETCUSTOMERXNLEDGR:
	
	EXECUTE SP_DSR_CUSTOMERLEDGER @DTFROM,@DTTO,@CUSERCODE,@BESTIMATEENABLED--CHANGE
	GOTO LAST


LBLCUSTOMER:

	SELECT DISTINCT CUSTOMER_FNAME +' '+CUSTOMER_LNAME AS CUSTOMER_NAME,MOBILE,CUSTOMER_CODE,
	USER_CUSTOMER_CODE
	FROM CUSTDYM 
	WHERE CUSTOMER_CODE <>'000000000000' AND 1=2
	ORDER BY CUSTOMER_NAME

	GOTO LAST
	
	

LBLGIT:
	SELECT  C1.DEPT_ID AS [SOURCE_DEPT_ID],C1.DEPT_NAME AS   [SOURCE_DEPT_NAME],  
            C.DEPT_ID AS [TARGET_DEPT_ID],C.DEPT_NAME AS   [TARGET_DEPT_NAME],  
            A.INV_NO,A.INV_ID ,
            CASE WHEN CONVERT(VARCHAR,EXPORTED_TIME,105) ='01-01-1900' THEN  '' 
            ELSE CONVERT(VARCHAR,EXPORTED_TIME,105) END AS EXPORTED_TIME  
            ,A.INV_DT,A.NET_AMOUNT,IND.QTY  
          ,( CASE WHEN ISNULL(A.EXPORTED_TIME,'')<> '' THEN  DATEDIFF(DD,A.EXPORTED_TIME,
           ISNULL(B.RECEIPT_DT,GETDATE()))ELSE 0 END) AS DUEDAYS  
           ,C1_AR.AREA_NAME AS [SOURCE_AREA],C1_CITY.CITY AS [SOURCE_CITY],  
           C_AR.AREA_NAME AS [TARGET_AREA],C_CITY.CITY AS [TARGET_CITY]  
           FROM INM01106 A  
	JOIN 
	(
		SELECT INV_ID ,SUM(QUANTITY) AS [QTY] 
		FROM IND01106 
		GROUP BY INV_ID
	)IND ON IND.INV_ID=A.INV_ID
	JOIN LOCATION C ON C.DEPT_ID=A.PARTY_DEPT_ID
	JOIN AREA C_AR ON C_AR.AREA_CODE=C.AREA_CODE
	JOIN CITY C_CITY  ON C_CITY.CITY_CODE=C_AR.CITY_CODE
	JOIN LOCATION C1 ON C1.DEPT_ID=a.location_Code 
	JOIN AREA C1_AR ON C1_AR.AREA_CODE=C1.AREA_CODE
	JOIN CITY C1_CITY  ON C1_CITY.CITY_CODE=C1_AR.CITY_CODE
	LEFT OUTER JOIN PIM01106 B ON B.INV_ID=A.INV_ID
	WHERE A.PARTY_DEPT_ID = (CASE WHEN @CDEPT_ID='' THEN A.PARTY_DEPT_ID ELSE @CDEPT_ID END)
	AND  B.RECEIPT_DT IS NULL 
	AND A.CANCELLED=0 AND A.INV_DT <= @DTTO AND 
	A.INV_DT>=(CASE WHEN @CCUTOFFDATE<>'' THEN @CCUTOFFDATE ELSE A.INV_DT END)
    UNION ALL
	SELECT  C1.BIN_ID AS [SOURCE_DEPT_ID],C1.BIN_NAME AS   [SOURCE_DEPT_NAME],  
            C.BIN_ID AS [TARGET_DEPT_ID],C.BIN_NAME AS   [TARGET_DEPT_NAME],  
            A.MEMO_NO,A.MEMO_ID ,
            '' AS EXPORTED_TIME  
            ,A.MEMO_DT,0 AS NET_AMOUNT,IND.QTY  
          ,( CASE WHEN ISNULL(A.RECEIPT_DT,'')<> '' THEN  DATEDIFF(DD,A.MEMO_DT,
           ISNULL(A.RECEIPT_DT,GETDATE()))ELSE DATEDIFF(DD,A.MEMO_DT,GETDATE()) END) AS DUEDAYS  
           ,C1_AR.AREA_NAME AS [SOURCE_AREA],C1_CITY.CITY AS [SOURCE_CITY],  
           C1_AR.AREA_NAME AS [TARGET_AREA],C1_CITY.CITY AS [TARGET_CITY]  
           FROM FLOOR_ST_MST A  
	JOIN 
	(
		SELECT MEMO_ID ,SUM(QUANTITY) AS [QTY] 
		FROM FLOOR_ST_DET 
		GROUP BY MEMO_ID
	)IND ON IND.MEMO_ID=A.MEMO_ID
	JOIN BIN C ON C.BIN_ID=A.TARGET_BIN_ID
	JOIN BIN C1 ON C1.BIN_ID=A.BIN_ID
	JOIN LOCATION LOC ON LOC.DEPT_ID=a.location_Code 
	JOIN AREA C1_AR ON C1_AR.AREA_CODE=LOC.AREA_CODE
	JOIN CITY C1_CITY  ON C1_CITY.CITY_CODE=C1_AR.CITY_CODE
	WHERE 
	a.location_Code  = (CASE WHEN @CDEPT_ID='' THEN a.location_Code   ELSE @CDEPT_ID END)
	AND  ISNULL(A.RECEIPT_DT ,'')=''--IS NULL 
	AND A.CANCELLED=0 AND A.MEMO_DT <= @DTTO AND 
	A.MEMO_DT>=(CASE WHEN @CCUTOFFDATE<>'' THEN @CCUTOFFDATE ELSE A.MEMO_DT END)
	GOTO LAST  
	    
    LBLGITDN:
	
	SELECT  C1.DEPT_ID AS [SOURCE_DEPT_ID],C1.DEPT_NAME AS   [SOURCE_DEPT_NAME],  
            C.DEPT_ID AS [TARGET_DEPT_ID],C.DEPT_NAME AS   [TARGET_DEPT_NAME],  
            A.RM_NO,A.RM_ID ,
            CASE WHEN CONVERT(VARCHAR,RM_DT,105) ='01-01-1900' THEN  '' 
            ELSE CONVERT(VARCHAR,RM_DT,105) END AS EXPORTED_TIME  
            ,A.RM_DT,A.TOTAL_AMOUNT,RMD.QTY  
          ,( CASE WHEN ISNULL(A.RM_DT,'')<> '' THEN  DATEDIFF(DD,A.RM_DT,GETDATE())ELSE 0 END) AS DUEDAYS  
           ,C1_AR.AREA_NAME AS [SOURCE_AREA],C1_CITY.CITY AS [SOURCE_CITY],  
           C_AR.AREA_NAME AS [TARGET_AREA],C_CITY.CITY AS [TARGET_CITY]  
           FROM RMM01106 A  
	JOIN 
	(
		SELECT RM_ID ,SUM(QUANTITY) AS [QTY] 
		FROM RMD01106 
		GROUP BY RM_ID 
	)RMD ON RMD.RM_ID=A.RM_ID
	JOIN LOCATION C ON C.DEPT_ID=A.PARTY_DEPT_ID
	JOIN AREA C_AR ON C_AR.AREA_CODE=C.AREA_CODE
	JOIN CITY C_CITY  ON C_CITY.CITY_CODE=C_AR.CITY_CODE
	JOIN LOCATION C1 ON C1.DEPT_ID=a.location_Code 
	JOIN AREA C1_AR ON C1_AR.AREA_CODE=C1.AREA_CODE
	JOIN CITY C1_CITY  ON C1_CITY.CITY_CODE=C1_AR.CITY_CODE
	LEFT OUTER JOIN CNM01106 B ON B.RM_ID=A.RM_ID
	WHERE 
	
	A.PARTY_DEPT_ID = (CASE WHEN @CDEPT_ID='' THEN A.PARTY_DEPT_ID ELSE @CDEPT_ID END)
	--AND DATEDIFF(DD,A.RM_DT,GETDATE())>=C.LEAD_DAYS 
	AND  (B.RECEIPT_DT IS NULL OR B.RECEIPT_DT='')
	AND A.CANCELLED=0 AND A.RM_DT <= @DTTO AND A.RM_DT>=(CASE WHEN @CCUTOFFDATE<>'' THEN @CCUTOFFDATE ELSE A.RM_DT END)

	GOTO LAST  
	
	LBLSALESEMPLOYEE:

	    SELECT EMP_CODE, EMP_NAME, EMP_NAME AS EMP_NAME_ORG,0 AS ALIASENTRY   
        FROM EMPLOYEE  (NOLOCK)  
        WHERE INACTIVE = 0  AND EMP_TYPE IN (1,3)
        UNION   
        SELECT EMP_CODE, EMP_ALIAS AS EMP_NAME, EMP_NAME AS EMP_NAME_ORG,1 AS ALIASENTRY    
        FROM EMPLOYEE  (NOLOCK)  
        WHERE INACTIVE = 0  AND EMP_TYPE IN (1,3) AND EMP_ALIAS <>''  
        ORDER BY EMP_NAME  	
	GOTO LAST    
       
LAST:      
END
