	  
  
-- PROCEDURE TO SAVE A JOB WORK ISSUE MEMO  
CREATE PROCEDURE SAVETRAN_PRD_JWR  
(  
 @NUPDATEMODE  NUMERIC(1,0),  
 @NSPID    INT,  
 @CFINYEAR   VARCHAR(10),  
 @CMACHINENAME  VARCHAR(100)='',  
 @CWINDOWUSERNAME VARCHAR(100)='',  
 @CWIZAPPUSERCODE VARCHAR(10)='0000000',  
 @CMEMOID   VARCHAR(40)=''  
)  
--WITH ENCRYPTION
AS  
BEGIN  
 -- @NUPDATEMODE: 1- NEW MEMO ADDED,   
 --     2- EDITING OF MEMO,   
 --     3- CURRENT MEMO CANCELLED,   
  
 DECLARE @CTEMPDBNAME   VARCHAR(100),  
   @CMASTERTABLENAME  VARCHAR(100),  
   @CDETAILTABLENAME1  VARCHAR(100),  
   @CDETAILTABLENAME2  VARCHAR(100),  
   @CTEMPMASTERTABLENAME VARCHAR(100),  
   @CTEMPDETAILTABLENAME1 VARCHAR(100),  
   @CTEMPDETAILTABLENAME2 VARCHAR(100),  
   @CTEMPMASTERTABLE  VARCHAR(300),  
   @CTEMPDETAILTABLE1  VARCHAR(300),  
   @CTEMPDETAILTABLE2  VARCHAR(300),  
   @CERRORMSG    VARCHAR(500),  
   @LDONOTUPDATESTOCK  BIT,  
   @CKEYFIELD1    VARCHAR(50),  
   @CKEYFIELDVAL1   VARCHAR(50),  
   @CMEMONO    VARCHAR(20),  
   @NMEMONOLEN    NUMERIC(20,0),  
   @CMEMONOVAL    VARCHAR(50),  
   @CLOCATIONID   VARCHAR(2),  
   @CHODEPTID    VARCHAR(2),  
   @CCMD     NVARCHAR(4000),  
   @CCMDOUTPUT    NVARCHAR(4000),  
   @NSAVETRANLOOP   BIT,  
   @NSTEP     INT,  
   @LENABLETEMPDATABASE BIT,@BNEGSTOCKFOUND BIT,  
   @CUSERALIAS VARCHAR(5),@CMEMONOPREFIX VARCHAR(10),  
   @CEXPRERRORMSG VARCHAR(MAX)    
  
 DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))  
  
  
 SET @NSTEP = 0  -- SETTTING UP ENVIRONMENT  
  
 SELECT @LENABLETEMPDATABASE = CAST([VALUE] AS BIT) FROM CONFIG WHERE CONFIG_OPTION = 'ENABLE_TEMP_DATABASE'  
 IF @LENABLETEMPDATABASE IS NULL  
  SET @LENABLETEMPDATABASE = 0  
  
 -- CHECK TEMPORARY DATABASE TO HOLD TEMP TABLES   
 -- IF CONFIG SETTING SAYS TO DO SO  
 IF @LENABLETEMPDATABASE = 1  
  SET @CTEMPDBNAME = DB_NAME() + '_TEMP.DBO.'  
 ELSE  
  SET @CTEMPDBNAME = ''  
  
 SET @CMASTERTABLENAME = 'PRD_JOBWORK_RECEIPT_MST'  
 SET @CDETAILTABLENAME1 = 'PRD_JOBWORK_RECEIPT_DET'  
   
  
 SET @CTEMPMASTERTABLENAME = 'TEMP_'+@CMASTERTABLENAME+'_'+LTRIM(RTRIM(STR(@NSPID)))  
 SET @CTEMPDETAILTABLENAME1 = 'TEMP_'+@CDETAILTABLENAME1+'_'+LTRIM(RTRIM(STR(@NSPID)))  
   
  
 SET @CTEMPMASTERTABLE = @CTEMPDBNAME + @CTEMPMASTERTABLENAME  
 SET @CTEMPDETAILTABLE1 = @CTEMPDBNAME + @CTEMPDETAILTABLENAME1  
   
   
 SET @CERRORMSG   = ''  
 SET @LDONOTUPDATESTOCK = 0  
 SET @CKEYFIELD1   = 'RECEIPT_ID'  
 SET @CMEMONO   = 'RECEIPT_NO'  
 SET @NMEMONOLEN   = 10  
  
  
 SELECT @CLOCATIONID  = [VALUE] FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'  
 SELECT @CHODEPTID  = [VALUE] FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'    
  
 SET @NSTEP = 10  -- GETTING DEPTID INFO FROM TEMP TABLE  
   
    
   
 BEGIN TRY  
  
  IF OBJECT_ID('TEMPDB..#TMPPMT','U') IS NOT NULL  
   DROP TABLE #TMPPMT  
    
  SELECT PRODUCT_CODE INTO #TMPPMT FROM PRD_SKU WHERE 1=2  
  
  IF OBJECT_ID('TEMPDB..#TMPXNSTK','U') IS NOT NULL  
   DROP TABLE #TMPXNSTK           
    
  SELECT PRODUCT_CODE,QUANTITY_IN_STOCK AS XN_STOCK INTO #TMPXNSTK FROM PRD_PMT  WHERE 1=2  
  
  BEGIN TRANSACTION  
  IF @NUPDATEMODE<>3  
  BEGIN    
  
  SET @CCMD=N'IF OBJECT_ID('''+@CTEMPMASTERTABLE+''',''U'') IS NOT NULL  
      UPDATE '+@CTEMPMASTERTABLE+' SET BIN_ID=''000'''  
  EXEC SP_EXECUTESQL @CCMD         
  
  
  SET @CCMD=N'IF OBJECT_ID('''+@CTEMPDETAILTABLE1+''',''U'') IS NOT NULL  
      UPDATE '+@CTEMPDETAILTABLE1+' SET BIN_ID=''000'''  
  EXEC SP_EXECUTESQL @CCMD         
  
  SET @CCMD=N' UPDATE '+@CTEMPDETAILTABLE1+' SET PARA1_CODE=''0000000'' WHERE PARA1_CODE='''''  
  EXEC SP_EXECUTESQL @CCMD  
  SET @CCMD=N' UPDATE '+@CTEMPDETAILTABLE1+' SET PARA2_CODE=''0000000'' WHERE PARA2_CODE='''''  
  EXEC SP_EXECUTESQL @CCMD  
  SET @CCMD=N' UPDATE '+@CTEMPDETAILTABLE1+' SET PARA3_CODE=''0000000'' WHERE PARA3_CODE='''''  
  EXEC SP_EXECUTESQL @CCMD  
  SET @CCMD=N' UPDATE '+@CTEMPDETAILTABLE1+' SET PARA4_CODE=''0000000'' WHERE PARA4_CODE='''''  
  EXEC SP_EXECUTESQL @CCMD  
  SET @CCMD=N' UPDATE '+@CTEMPDETAILTABLE1+' SET PARA5_CODE=''0000000'' WHERE PARA5_CODE='''''  
  EXEC SP_EXECUTESQL @CCMD  
  SET @CCMD=N' UPDATE '+@CTEMPDETAILTABLE1+' SET PARA6_CODE=''0000000'' WHERE PARA6_CODE='''''  
  EXEC SP_EXECUTESQL @CCMD  
  
  END    
        
  IF @NUPDATEMODE<>3  
  BEGIN  
   EXEC SP_VALIDATEXN_BEFORESAVE 'PRD_JWR',@NSPID,'0000000',@NUPDATEMODE,@CCMDOUTPUT OUTPUT,@BNEGSTOCKFOUND OUTPUT  
   IF ISNULL(@CCMDOUTPUT,'') <> ''  
   BEGIN  
    SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' DATA VALIDATION ON TEMP DATA FAILED : ' + @CCMDOUTPUT + '...'  
    GOTO END_PROC  
   END  
  END  
  ELSE  
  BEGIN  
   EXEC VALIDATEXN_BEFORE_EDIT 'PRD_JWR',@CMEMOID,1,@CWIZAPPUSERCODE,@CERRORMSG OUTPUT,@CEXPRERRORMSG OUTPUT  
     
   IF ISNULL(@CERRORMSG,'')<>''  
    GOTO END_PROC  
  END  
    
  IF @NUPDATEMODE = 3 AND ISNULL(@CMEMOID,'') = ''  
  BEGIN  
   SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' MEMO ID REQUIRED IF CALLED FROM CANCELLATION'  
   GOTO END_PROC      
  END  
    
  -- START UPDATING XN TABLES   
  IF @NUPDATEMODE = 1 -- ADDMODE   
  BEGIN   
     
   SET @NSTEP=15  
     
   SET @CMEMONOPREFIX=@CLOCATIONID  
     
    
   SET @NSTEP = 20  -- GENERATING NEW KEY  
     
   -- GENERATING NEW JOB ORDER NO    
   SET @NSAVETRANLOOP=0  
   WHILE @NSAVETRANLOOP=0  
   BEGIN  
    EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,   
        @CFINYEAR,0, @CMEMONOVAL OUTPUT     
      
    PRINT @CMEMONOVAL  
    SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+'   
          WHERE '+@CMEMONO+'='''+@CMEMONOVAL+'''   
          AND FIN_YEAR = '''+@CFINYEAR+''' )  
        SET @NLOOPOUTPUT=0  
       ELSE  
        SET @NLOOPOUTPUT=1'  
    PRINT @CCMD  
    EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT  
   END  
  
   IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
   BEGIN  
      SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'   
      GOTO END_PROC      
   END  
  
   SET @NSTEP = 30  -- GENERATING NEW ID  
  
   -- GENERATING NEW JOB ORDER ID  
   SET @CKEYFIELDVAL1 = @CLOCATIONID + @CFINYEAR+ REPLICATE('0', 10-LEN(LTRIM(RTRIM(@CMEMONOVAL)))) + LTRIM(RTRIM(@CMEMONOVAL))   
   IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'    
   BEGIN  
      SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'  
      -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'  
      GOTO END_PROC  
   END  
  
   SET @NSTEP = 40  -- UPDATING NEW ID INTO TEMP TABLES  
  
   -- UPDATING NEWLY GENERATED JOB ORDER NO AND JOB ORDER ID IN PIM AND PID TEMP TABLES  
   SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' +   
      @CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''''  
   PRINT @CCMD  
   EXEC SP_EXECUTESQL @CCMD  
    
   SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''''  
       
     
   PRINT @CCMD  
   EXEC SP_EXECUTESQL @CCMD  
  
  END     -- END OF ADDMODE  
  ELSE    -- CALLED FROM EDITMODE  
  BEGIN    -- START OF EDITMODE  
    
   SET @NSTEP = 50  -- GETTING ID INFO FROM TEMP TABLE  
  
     
   -- GETTING MEMO ID WHICH IS BEING EDITED  
   SET @CCMD = 'SELECT @CKEYFIELDVAL1 = ' + @CKEYFIELD1 + ', @CMEMONOVAL = ' + @CMEMONO + ' FROM '  
      + (CASE WHEN @NUPDATEMODE=3 THEN @CMASTERTABLENAME + ' WHERE RECEIPT_ID = ''' + @CMEMOID + ''''  
        ELSE @CTEMPMASTERTABLE END )  
     
   EXEC SP_EXECUTESQL @CCMD, N'@CKEYFIELDVAL1 VARCHAR(50) OUTPUT, @CMEMONOVAL VARCHAR(50) OUTPUT',   
          @CKEYFIELDVAL1 OUTPUT, @CMEMONOVAL OUTPUT  
            
   IF (@CKEYFIELDVAL1 IS NULL ) OR (@CMEMONOVAL IS NULL )  
   BEGIN  
      SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'  
      GOTO END_PROC      
   END  
  
   SET @NSTEP = 55  -- STORING OLD STATUS OF BARCODES   
  
     
   IF @NUPDATEMODE = 3     
   BEGIN  
    SET @NSTEP = 60  
    -- UPDATING SENTTOHO FLAG  
    SET @CCMD = N'UPDATE ' + @CMASTERTABLENAME + ' SET CANCELLED = 1,LAST_UPDATE=GETDATE() ' +   
       N' WHERE ' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + ''''  
    EXEC SP_EXECUTESQL @CCMD  
   END  
     
   ELSE  
   BEGIN  
  
    SET @NSTEP = 65  -- UPDATING SENT_TO_HO FLAG TEMP TABLE  
    -- UPDATING SENTTOHO FLAG  
    SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' SET SENT_TO_HO = 0,LAST_UPDATE=GETDATE()'  
    EXEC SP_EXECUTESQL @CCMD  
      
   END  
   
   
   -- REVERTING BACK THE STOCK OF PMT W.R.T CURRENT ISSUE  
   SET @NSTEP = 80  -- REVERTING STOCK  
  
   EXEC UPDATEPMT_PRD_JWR   
      @CXNTYPE   = 'PRDJWR'   
    , @CXNNO   = @CMEMONOVAL  
    , @CXNID   = @CKEYFIELDVAL1  
    , @NREVERTFLAG  = 1  
    , @NALLOWNEGSTOCK = 0  
    , @NCHKDELBARCODES = 1  
    , @NUPDATEMODE  = @NUPDATEMODE      
    , @CCMD    = @CCMDOUTPUT OUTPUT  
     
   IF (@NUPDATEMODE = 3)   
   BEGIN  
    IF @CCMDOUTPUT <> ''  
    BEGIN  
     SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR UPDATING THE STOCK STATUS IN PMT....'  
     SET @BNEGSTOCKFOUND=1       
     EXEC SP_EXECUTESQL @CCMDOUTPUT  
    END   
    GOTO END_PROC  
   END  
  END     -- END OF EDITMODE  
  
  SET @NSTEP = 95  
    
  -- RECHECKING IF ID IS STILL LATER  
  IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
  BEGIN  
   SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR GETTING NEXT MEMO ID....'  
   GOTO END_PROC  
  END  
  
  IF @NUPDATEMODE <> 3  
  BEGIN  
     
   SET @NSTEP = 105  -- UPDATING MASTER TABLE  
  
  
   EXEC UPDATEMASTERXN   
      @CSOURCEDB = @CTEMPDBNAME  
    , @CSOURCETABLE = @CTEMPMASTERTABLENAME  
    , @CDESTDB  = ''  
    , @CDESTTABLE = @CMASTERTABLENAME  
    , @CKEYFIELD1 = @CKEYFIELD1  
    ,@BALWAYSUPDATE = 1  
  
   -- UPDATING TRANSACTION TABLE (PID01106) FROM TEMP TABLE  
   SET @NSTEP = 110  -- UPDATING TRANSACTION TABLE  
     
   SET @CCMD=N'ALTER TABLE '+@CTEMPDETAILTABLE1+' ADD OLD_ROW_ID VARCHAR(40)'  
   EXEC SP_EXECUTESQL @CCMD  
     
   SET @NSTEP = 112  
     
   -- UPDATING ROW_ID IN TEMP TABLES  
   SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET OLD_ROW_ID=ROW_ID,ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(38), NEWID())  
        WHERE LEFT(ROW_ID,5) = ''LATER'''  
   EXEC SP_EXECUTESQL @CCMD  
  
   -- DELETING EXISTING ENTRIES FROM DETAIL TABLE WHERE ROW_ID NOT FOUND IN TEMPTABLE  
   SET @NSTEP = 114  -- UPDATING TRANSACTION TABLE - DELETING EXISTING ENTRIES  
  
   SET @CCMD = N'DELETE FROM ' + @CDETAILTABLENAME1 + '   
      WHERE ' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''  
      AND ROW_ID IN   
      (  
       SELECT A.ROW_ID   
       FROM ' + @CDETAILTABLENAME1 + ' A   
       LEFT OUTER JOIN ' + @CTEMPDETAILTABLE1 + ' B ON A.ROW_ID = B.ROW_ID  
       WHERE A.' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''  
       AND   B.ROW_ID IS NULL  
      )'  
   PRINT @CCMD
   EXEC SP_EXECUTESQL @CCMD  
     
   SET @NSTEP=117  
     
       
     
      -- INSERTING/UPDATING THE ENTRIES IN PRD_JID TABLE FROM TEMPTABLE  
   SET @NSTEP = 130  -- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES  
  
   EXEC UPDATEMASTERXN   
      @CSOURCEDB = @CTEMPDBNAME  
    , @CSOURCETABLE = @CTEMPDETAILTABLENAME1  
    , @CDESTDB  = ''  
    , @CDESTTABLE = @CDETAILTABLENAME1  
    , @CKEYFIELD1 = 'ROW_ID'  
    ,@BALWAYSUPDATE = 1  
  
   SET @NSTEP = 135  
   
   
   
   IF @NUPDATEMODE IN(1,2)
   BEGIN
     EXEC SAVETRAN_UPDSKU_PRD @CXNTYPE='PRDJWR',@CPOID=@CKEYFIELDVAL1 ,@CERROR=@CERRORMSG OUTPUT 
   
   END
   
   
  END  
    
     EXEC UPDATEPMT_PRD_JWR   
      @CXNTYPE   = 'PRDJWR'   
    , @CXNNO   = @CMEMONOVAL  
    , @CXNID   = @CKEYFIELDVAL1  
    , @NREVERTFLAG  = 0  
    , @NALLOWNEGSTOCK = 0  
    , @NCHKDELBARCODES = 1  
    , @NUPDATEMODE  = @NUPDATEMODE      
    , @CCMD    = @CCMDOUTPUT OUTPUT  
  
  
  -- AFTER SUCCESSFUL SAVING , JUST DROP THE TEMP TABLES CREATED BY APPLICATION  
  SET @NSTEP = 170  
    
   
 END TRY  
   
 BEGIN CATCH  
  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()  
  -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG, '''' AS MEMO_ID'  
    
  GOTO END_PROC  
 END CATCH  
   
END_PROC:  
    
 IF @@TRANCOUNT>0  
 BEGIN  
  IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')='' AND ISNULL(@BNEGSTOCKFOUND,0)=0  
  BEGIN

	COMMIT TRANSACTION
  END	
  ELSE  
   ROLLBACK  
 END  
   
 IF ISNULL(@BNEGSTOCKFOUND,0)=0  
 BEGIN  
  INSERT @OUTPUT ( ERRMSG, MEMO_ID)  
  VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )  
  
  SELECT * FROM @OUTPUT   
 END   
  SET @CCMD=N'IF OBJECT_ID('''+@CTEMPMASTERTABLE+''',''U'') IS NOT NULL
	  DROP TABLE 	'+@CTEMPMASTERTABLE
  EXEC SP_EXECUTESQL @CCMD

  SET @CCMD=N'IF OBJECT_ID('''+@CTEMPDETAILTABLE1+''',''U'') IS NOT NULL
	  DROP TABLE 	'+@CTEMPDETAILTABLE1
  EXEC SP_EXECUTESQL @CCMD
END    
------------------------------------------------------ END OF PROCEDURE SAVETRAN_JWR  

