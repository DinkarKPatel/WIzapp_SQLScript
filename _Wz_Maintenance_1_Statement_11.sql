

IF NOT EXISTS (SELECT CONFIG_OPTION FROM CONFIG WHERE CONFIG_OPTION='BACKUP_PARTY_RATE_MST' AND VALUE=1)
BEGIN
	PRINT 'TAKING BACKUP OF PARTY RATE MASTER'

   DECLARE @CCMD NVARCHAR(MAX)

	SET @CCMD=N'INSERT PARTY_RATE_MST_BACKUP	( MEMO_ID, MEMO_NO, AC_CODE, MEMO_DT, LAST_UPDATE, MODE, USER_CODE, FIN_YEAR, EDT_USER_CODE, DEPT_ID, RATE_PICKING_METHOD, CUSTOM_RATE_TYPE, MST_CAL_MODE, MST_VALUE, MST_BASE_PRICE,  DISCOUNT_PICKING_MODE )  
	SELECT 	MEMO_ID, MEMO_NO, AC_CODE, MEMO_DT, LAST_UPDATE, MODE, USER_CODE, FIN_YEAR, EDT_USER_CODE, DEPT_ID, RATE_PICKING_METHOD, CUSTOM_RATE_TYPE, MST_CAL_MODE, MST_VALUE, MST_BASE_PRICE, DISCOUNT_PICKING_MODE
	FROM PARTY_RATE_MST'
	EXEC SP_EXECUTESQL @CCMD


	SET @CCMD=N'INSERT PARTY_RATE_DET_BACKUP	( MEMO_ID, ROW_ID, PARA1_CODE, PARA2_CODE, PARA3_CODE, PARA4_CODE, PARA5_CODE, PARA6_CODE, ARTICLE_CODE, BASE_PRICE, CAL_MODE, VALUE, GIVE_CREDIT_VAT, BASE_PRICE_VAT_CREDIT, SECTION_CODE, SUB_SECTION_CODE )  
	 SELECT MEMO_ID, ROW_ID, PARA1_CODE, PARA2_CODE, PARA3_CODE, PARA4_CODE, PARA5_CODE, PARA6_CODE, ARTICLE_CODE, BASE_PRICE, CAL_MODE, VALUE, GIVE_CREDIT_VAT, BASE_PRICE_VAT_CREDIT, SECTION_CODE, SUB_SECTION_CODE 
	 FROM PARTY_RATE_DET'
	 EXEC SP_EXECUTESQL @CCMD
	
	IF NOT EXISTS (SELECT CONFIG_OPTION FROM CONFIG WHERE CONFIG_OPTION='BACKUP_PARTY_RATE_MST')
		INSERT CONFIG (CONFIG_OPTION,VALUE,ROW_ID,LAST_UPDATE)
			   VALUES ('BACKUP_PARTY_RATE_MST',1,'',GETDATE())	
	ELSE
		UPDATE CONFIG SET VALUE='1' WHERE CONFIG_OPTION='BACKUP_PARTY_RATE_MST'
	
END		
