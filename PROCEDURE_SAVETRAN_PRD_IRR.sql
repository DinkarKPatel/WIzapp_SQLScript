-- PROCEDURE TO SAVE A ITEM RATE REVISION FROM TEMPORARY TABLES TO ACTUAL TABLES USE WIZAPP3SFR
CREATE PROCEDURE SAVETRAN_PRD_IRR
(
	@NUPDATEMODE		NUMERIC(1,0),
	@NSPID				INT,
	@CMEMONOPREFIX		VARCHAR(50),
	@CFINYEAR			VARCHAR(10),
	@CMACHINENAME		VARCHAR(100)='',
	@CWINDOWUSERNAME	VARCHAR(100)='',
	@CWIZAPPUSERCODE	VARCHAR(10)='0000000',
	@CMEMOID			VARCHAR(40)='',
	@CLOCID				VARCHAR(2)='',
	@BTHROUGHIMPORT     BIT=0
)
--WITH ENCRYPTION
AS
BEGIN
	-- @NUPDATEMODE:	1- ITEM RATE REVISION
	--					2- TAG PRINTING
	
	DECLARE @CTEMPDBNAME			VARCHAR(100),
			@CMASTERTABLENAME		VARCHAR(100),
			@CDETAILTABLENAME		VARCHAR(100),
			@CTEMPMASTERTABLENAME	VARCHAR(100),
			@CTEMPDETAILTABLENAME	VARCHAR(100),
			@CTEMPMASTERTABLE		VARCHAR(100),
			@CTEMPDETAILTABLE		VARCHAR(100),
			@CERRORMSG				VARCHAR(500),
			@LDONOTUPDATESTOCK		BIT,
			@CKEYFIELD1				VARCHAR(50),
			@CKEYFIELDVAL1			VARCHAR(50),
			@CMEMONO				VARCHAR(20),
			@NMEMONOLEN				NUMERIC(20,0),
			@CMEMONOVAL				VARCHAR(50),
			@CMEMODEPTID			VARCHAR(2),
			@CLOCATIONID			VARCHAR(2),
			@CHODEPTID				VARCHAR(2),
			@CCMD					NVARCHAR(4000),
			@CCMDOUTPUT				NVARCHAR(4000),
			@NSAVETRANLOOP			BIT,
			@NSTEP					INT,
			@BNEGSTOCKFOUND BIT,
			@LGENERATEBARCODES		BIT,@CBARCODEPREFIX VARCHAR(20),
			@NMEMOTYPE				NUMERIC(1,0),
			@CDONOTGENBARCODE       VARCHAR(2),@CERRPRODUCTCODE VARCHAR(50),
			@BDUPRECORDFOUND BIT

	DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))

	SET @NSTEP = 0		-- SETTTING UP ENVIRONMENT

	-- TEMPORARY DATABASE Discarded now onwards as per Meeting on 30-10-2020 mentioned in Client issues List
	SET @CTEMPDBNAME = ''

	SET @CMASTERTABLENAME	= 'PRD_IRM01106'
	SET @CDETAILTABLENAME	= 'PRD_IRD01106'

	SET @CTEMPMASTERTABLENAME	= 'TEMP_PRD_IRM01106_'+LTRIM(RTRIM(STR(@NSPID)))
	SET @CTEMPDETAILTABLENAME	= 'TEMP_PRD_IRD01106_'+LTRIM(RTRIM(STR(@NSPID)))

	SET @CTEMPMASTERTABLE	= @CTEMPDBNAME + @CTEMPMASTERTABLENAME
	SET @CTEMPDETAILTABLE	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME
	
	SET @CERRORMSG			= ''
	SET @LDONOTUPDATESTOCK	= 0
	SET @CKEYFIELD1			= 'IRM_MEMO_ID'
	SET @CMEMONO			= 'IRM_MEMO_NO'
	SET @NMEMONOLEN			= 10
	
	IF ISNULL(@CLOCID,'')=''
		SELECT @CLOCATIONID		= [VALUE] FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'
	ELSE
		SELECT @CLOCATIONID = @CLOCID
	
	SELECT @CHODEPTID		= [VALUE] FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'		



    SET @CDONOTGENBARCODE=''

	SET @NSTEP = 10		-- GETTING DEPTID INFO FROM TEMP TABLE
	
	SET @CCMD=N'SELECT @NMEMOTYPEOUT=TYPE FROM '+@CTEMPMASTERTABLE 
	EXEC SP_EXECUTESQL @CCMD,N'@NMEMOTYPEOUT NUMERIC(1,0) OUTPUT',@NMEMOTYPEOUT=@NMEMOTYPE OUTPUT

	IF @CDONOTGENBARCODE='1'
	BEGIN
		 SET @CCMD=N'IF EXISTS (SELECT TOP 1 IRM_MEMO_ID FROM '+@CTEMPDETAILTABLE+' WHERE ISNULL(NEW_PRODUCT_CODE,'''')='''')
						SET @CDONOTGENBARCODEOUT=''1''
					 ELSE
						SET @CDONOTGENBARCODEOUT='''''
		 EXEC SP_EXECUTESQL @CCMD,N'@CDONOTGENBARCODEOUT VARCHAR(2) OUTPUT',@CDONOTGENBARCODEOUT=@CDONOTGENBARCODE OUTPUT					
	END
	
	IF @NMEMOTYPE NOT IN (2,3) AND @CLOCATIONID<>@CHODEPTID AND ISNULL(@CDONOTGENBARCODE,'')='1'
	BEGIN
		SET @CERRORMSG=N'RATE REVISION WITHOUT BAR CODE GENERATION CANNOT BE DONE AT NON-HO LOCATION'
		GOTO END_PROC			
	END
	
	IF @BTHROUGHIMPORT=1   
    BEGIN  
			SET @NSTEP = 15  
		    
			EXEC SP_GETMASTERS '01112',2,@CERRORMSG OUTPUT   
		  
			PRINT 'COME OUT OF IMPORTMASTERS'     
			IF ISNULL(@CERRORMSG,'')<>''  
			GOTO END_PROC  
		    --,FORM_ID=ISNULL(I.FORM_ID,''0000000'')
		    -- LEFT OUTER JOIN FORM I ON I.FORM_NAME = B.FORM_NAME
			SET @NSTEP = 20  
			SET @CCMD=N'UPDATE A SET ARTICLE_CODE=ART.ARTICLE_CODE,PARA1_CODE=ISNULL(C.PARA1_CODE,''0000000''),  
			  PARA2_CODE=ISNULL(D.PARA2_CODE,''0000000''),PARA3_CODE=ISNULL(E.PARA3_CODE,''0000000''),  
			  PARA4_CODE=ISNULL(F.PARA4_CODE,''0000000''),PARA5_CODE=ISNULL(G.PARA5_CODE,''0000000''),  
			  PARA6_CODE=ISNULL(H.PARA6_CODE,''0000000'')  
			  FROM   '+@CTEMPDBNAME+@CTEMPDETAILTABLENAME+' A 
			  JOIN #TMPMASTERSENC B ON A.PRODUCT_UID=B.PRODUCT_UID  
				 JOIN ARTICLE ART ON ART.ARTICLE_NO = B.ARTICLE_NO    
				 LEFT OUTER JOIN PARA1 C ON C.PARA1_NAME = B.PARA1_NAME    
				 LEFT OUTER JOIN PARA2 D ON D.PARA2_NAME = B.PARA2_NAME    
				 LEFT OUTER JOIN PARA3 E ON E.PARA3_NAME = B.PARA3_NAME    
				 LEFT OUTER JOIN PARA4 F ON F.PARA4_NAME = B.PARA4_NAME    
				 LEFT OUTER JOIN PARA5 G ON G.PARA5_NAME = B.PARA5_NAME    
				 LEFT OUTER JOIN PARA6 H ON H.PARA6_NAME = B.PARA6_NAME'   
			PRINT @CCMD        
			EXEC SP_EXECUTESQL @CCMD     
		  
			SET @CCMD=N'UPDATE A SET ARTICLE_CODE=ART.ARTICLE_CODE,PARA1_CODE=ISNULL(C.PARA1_CODE,''0000000''),  
			  PARA2_CODE=ISNULL(D.PARA2_CODE,''0000000''),PARA3_CODE=ISNULL(E.PARA3_CODE,''0000000''),  
			  PARA4_CODE=ISNULL(F.PARA4_CODE,''0000000''),PARA5_CODE=ISNULL(G.PARA5_CODE,''0000000''),  
			  PARA6_CODE=ISNULL(H.PARA6_CODE,''0000000'')
			  FROM '+@CTEMPDBNAME+@CTEMPDETAILTABLENAME+' A 
			  JOIN #TMPMASTERSENC B ON A.PRODUCT_UID=B.PRODUCT_UID  
			 JOIN ARTICLE ART ON ART.ARTICLE_NO = B.ARTICLE_NO    
			 LEFT OUTER JOIN PARA1 C ON C.PARA1_NAME = B.PARA1_NAME    
			 LEFT OUTER JOIN PARA2 D ON D.PARA2_NAME = B.PARA2_NAME    
			 LEFT OUTER JOIN PARA3 E ON E.PARA3_NAME = B.PARA3_NAME    
			 LEFT OUTER JOIN PARA4 F ON F.PARA4_NAME = B.PARA4_NAME    
			 LEFT OUTER JOIN PARA5 G ON G.PARA5_NAME = B.PARA5_NAME    
			 LEFT OUTER JOIN PARA6 H ON H.PARA6_NAME = B.PARA6_NAME 
			 WHERE ISNULL(A.PRODUCT_CODE,'''')<>'''' '   
			PRINT @CCMD        
			EXEC SP_EXECUTESQL @CCMD     
			
		    DROP TABLE #TMPMASTERSENC  
  END
	
	BEGIN TRANSACTION
	
	BEGIN TRY

		IF OBJECT_ID('TEMPDB..#TMPPMT','U') IS NOT NULL
			DROP TABLE #TMPPMT
		
		SELECT PRODUCT_CODE INTO #TMPPMT FROM SKU WHERE 1=2

		IF OBJECT_ID('TEMPDB..#TMPXNSTK','U') IS NOT NULL
			DROP TABLE #TMPXNSTK						   
		
		SELECT PRODUCT_UID, PRODUCT_CODE,QUANTITY_IN_STOCK AS XN_STOCK INTO #TMPXNSTK FROM PRD_PMT WHERE 1=2

	
		-- START UPDATING XN TABLES	
		SET @NSTEP = 20		-- GENERATING NEW KEY
			
		-- GENERATING NEW JOB ORDER NO		
		SET @NSAVETRANLOOP=0
		WHILE @NSAVETRANLOOP=0
		BEGIN
			EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,
							@CFINYEAR,0, @CMEMONOVAL OUTPUT   
			
			PRINT @CMEMONOVAL
			SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+' 
									WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' 
									AND FIN_YEAR = '''+@CFINYEAR+''' )
							SET @NLOOPOUTPUT=0
						ELSE
							SET @NLOOPOUTPUT=1'
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
		END

		IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
		BEGIN
			  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'	
			  GOTO END_PROC  		
		END
		SET @NSTEP = 30		-- GENERATING NEW ID

		SET @NSTEP = 40		-- UPDATING NEW ID INTO TEMP TABLES

		-- GENERATING NEW MRR ID  
	    SET @CKEYFIELDVAL1 = @CLOCATIONID + @CFINYEAR+ REPLICATE('0', 15-LEN(LTRIM(RTRIM(@CMEMONOVAL)))) + LTRIM(RTRIM(@CMEMONOVAL))  
		
		-- UPDATING NEWLY GENERATED JOB ORDER NO AND JOB ORDER ID IN PIM AND PID TEMP TABLES
		SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' + 
					@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''''
		EXEC SP_EXECUTESQL @CCMD
    
		
		SET @NSTEP = 50
		SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''''
		EXEC SP_EXECUTESQL @CCMD
		
		SET @NSTEP = 60
		
		IF @NMEMOTYPE IN (2,3)
		BEGIN
			SET @NSTEP = 70	
			SET @CCMD = 'UPDATE '+ @CTEMPDETAILTABLE +' SET NEW_PRODUCT_CODE='''',NEW_PRODUCT_UID='''''
			EXEC SP_EXECUTESQL @CCMD
		END
		
		SET @NSTEP = 95
		-- RECHECKING IF ID IS STILL LATER
		IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
			GOTO END_PROC
		END

		-- UPDATING MASTER TABLE (PIM01106) FROM TEMP TABLE
		SET @NSTEP = 100		-- UPDATING MASTER TABLE

		EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPMASTERTABLENAME
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CMASTERTABLENAME
			, @CKEYFIELD1	= @CKEYFIELD1
			, @BALWAYSUPDATE = 1

		-- UPDATING TRANSACTION TABLE (PID01106) FROM TEMP TABLE
		SET @NSTEP = 110		-- UPDATING TRANSACTION TABLE

		-- UPDATING ROW_ID IN TEMP TABLES
		SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE + ' SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(40), NEWID())
					  WHERE LEFT(ROW_ID,5) = ''LATER'''
		EXEC SP_EXECUTESQL @CCMD

		-- DELETING EXISTING ENTRIES FROM PID01106 TABLE WHERE ROW_ID NOT FOUND IN TEMPTABLE
		SET @NSTEP = 114		-- UPDATING TRANSACTION TABLE - DELETING EXISTING ENTRIES

		SET @CCMD = N'DELETE FROM ' + @CDETAILTABLENAME + ' 
					WHERE ' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''
					AND ROW_ID IN 
					(
						SELECT A.ROW_ID 
						FROM ' + @CDETAILTABLENAME + ' A 
						LEFT OUTER JOIN ' + @CTEMPDETAILTABLE + ' B ON A.ROW_ID = B.ROW_ID
						WHERE A.' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''
						AND   B.ROW_ID IS NULL
					)'
		EXEC SP_EXECUTESQL @CCMD


		-- INSERTING/UPDATING THE ENTRIES IN PRD_JID TABLE FROM TEMPTABLE
		SET @NSTEP = 128		-- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES

		EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPDETAILTABLENAME
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CDETAILTABLENAME
			, @CKEYFIELD1	= 'ROW_ID'
			, @BALWAYSUPDATE = 1

		
		IF @CDONOTGENBARCODE='1' AND EXISTS (SELECT TOP 1 IRM_MEMO_ID FROM PRD_IRD01106 (NOLOCK) WHERE IRM_MEMO_ID=@CKEYFIELDVAL1
											 AND ISNULL(NEW_PRODUCT_CODE,'')<>'')
			SET @CDONOTGENBARCODE=''
			
	
			SET @NMEMOTYPE=1
		IF @NMEMOTYPE NOT IN (2,3) --AND  ISNULL(@CDONOTGENBARCODE,'') <>  '1' ---- GENERATE NEW BAR CODES IF RATE REVISION IS DONE
		BEGIN
			PRINT 'GENERATING BARCODES'
			SET @NSTEP = 120		-- GENERATING BARCODES
			
			IF EXISTS (SELECT TOP 1 A.PRODUCT_CODE FROM PRD_IRD01106 A (NOLOCK) JOIN PRD_SKU B ON A.PRODUCT_UID=B.PRODUCT_UID
					   WHERE IRM_MEMO_ID=@CKEYFIELDVAL1  AND A.NEW_MRP=0) 	 
			BEGIN
				SELECT TOP 1 @CERRPRODUCTCODE=A.PRODUCT_CODE FROM PRD_IRD01106 A (NOLOCK) JOIN PRD_SKU B ON A.PRODUCT_UID=B.PRODUCT_UID
				WHERE IRM_MEMO_ID=@CKEYFIELDVAL1  AND  A.NEW_MRP=0 --(A.OLD_MRP<>A.NEW_MRP OR B.MRP<>A.NEW_MRP) AND
				
				SET @CERRORMSG = 'MRP OF ITEM CODE : '+@CERRPRODUCTCODE+' CAN NOT BE ZERO...PLEASE CHECK'
				GOTO END_PROC 
			END		   
			
		
			--CHANGES FOR BARCODE GENERATION			
			EXEC SAVETRAN_GENBARCODES_PRD
				  @CXNID		= @CKEYFIELDVAL1
				, @CPREFIX		= @CBARCODEPREFIX
				, @NMODE		= 2	
				, @LOCID		= @CLOCATIONID	
				, @NSPID		= @NSPID
				, @CERRORMSG	= @CERRORMSG OUTPUT
			
			
			IF ISNULL(@CERRORMSG,'')<>''
				GOTO END_PROC
				
			SET @NSTEP = 124
			
			IF ISNULL(@CDONOTGENBARCODE,'')<>'1'
			BEGIN
				-- CHECK ALL BARCODES INSERTED INTO IRD
				SET @CCMD=N'IF EXISTS ( SELECT TOP 1 A.PRODUCT_CODE FROM PRD_IRD01106  A
							LEFT OUTER JOIN PRD_SKU B ON A.NEW_PRODUCT_UID = B.PRODUCT_UID
							WHERE  B.PRODUCT_UID IS NULL AND A.IRM_MEMO_ID = '''+@CKEYFIELDVAL1+''')
								SET @CERRORMSGOUT = '' ERROR GENERATING NEW BARCODES -(ST)... NEW CODES NOT GENERATED'''
				
				PRINT @CCMD				
				EXEC SP_EXECUTESQL @CCMD,N'@CERRORMSGOUT VARCHAR(MAX) OUTPUT',@CERRORMSGOUT=@CERRORMSG OUTPUT
			END
			
			IF ISNULL(@CERRORMSG,'')<>''	
				GOTO END_PROC
			
		END
					

		
		SET @NSTEP = 130		-- UPDATING SKU TABLE
	
		
		
		UPDATE A SET  MRP = (CASE WHEN B.OLD_MRP<>B.NEW_MRP AND B.NEW_MRP<>0 THEN B.NEW_MRP ELSE A.MRP END),
					  WS_PRICE=(CASE WHEN B.OLD_WSP<>B.NEW_WSP AND B.NEW_WSP<>0 THEN B.NEW_WSP ELSE A.WS_PRICE END),
					  ARTICLE_CODE=(CASE WHEN B.OLD_ARTICLE_CODE<>B.ARTICLE_CODE AND B.ARTICLE_CODE NOT IN 
					  ('0000000','00000000','000000000') THEN B.ARTICLE_CODE ELSE A.ARTICLE_CODE END),
					  PARA1_CODE=	(CASE WHEN B.OLD_PARA1_CODE<>B.PARA1_CODE AND B.PARA1_CODE NOT IN 
					  ('') THEN B.PARA1_CODE ELSE A.PARA1_CODE END),
					  PARA2_CODE=	(CASE WHEN B.OLD_PARA2_CODE<>B.PARA2_CODE AND B.PARA2_CODE NOT IN 
					  ('') THEN B.PARA2_CODE ELSE A.PARA2_CODE END),
					  PARA3_CODE=	(CASE WHEN B.OLD_PARA3_CODE<>B.PARA3_CODE AND B.PARA3_CODE NOT IN 
					  ('') THEN B.PARA3_CODE ELSE A.PARA3_CODE END),
					  PARA4_CODE=	(CASE WHEN B.OLD_PARA4_CODE<>B.PARA4_CODE AND B.PARA4_CODE NOT IN 
					  ('') THEN B.PARA4_CODE ELSE A.PARA4_CODE END),
					  PARA5_CODE=	(CASE WHEN B.OLD_PARA5_CODE<>B.PARA5_CODE AND B.PARA5_CODE NOT IN 
					  ('') THEN B.PARA5_CODE ELSE A.PARA5_CODE END),
					  PARA6_CODE=	(CASE WHEN B.OLD_PARA6_CODE<>B.PARA6_CODE AND B.PARA6_CODE NOT IN 
					  ('') THEN B.PARA6_CODE ELSE A.PARA6_CODE END),
					  LAST_UPDATE=GETDATE()
		FROM PRD_SKU A
		JOIN PRD_IRD01106 B ON A.PRODUCT_CODE = B.PRODUCT_CODE
		JOIN PRD_IRM01106 C ON C.IRM_MEMO_ID=B.IRM_MEMO_ID
		WHERE B.IRM_MEMO_ID = @CKEYFIELDVAL1 AND ISNULL(B.NEW_PRODUCT_CODE,'')='' AND C.TYPE<>2
		
		
		----- UPDATE STOCK OF ITEMS AGAINST WHICH NEW BARCODES ARE GENERATED
		SET @NSTEP = 140

		EXEC UPDATEPMT_PRD 
		  @CXNTYPE			= 'IRR'
		, @CXNNO			= @CMEMONOVAL
		, @CXNID			= @CKEYFIELDVAL1
		, @NREVERTFLAG		= 0
		, @NALLOWNEGSTOCK	= 0
		, @NCHKDELBARCODES	= 1
		, @NUPDATEMODE		= @NUPDATEMODE		
		, @CCMD				= @CCMDOUTPUT OUTPUT

        
       
		IF @CCMDOUTPUT <> ''
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR UPDATING THE STOCK STATUS IN PMT... STOCK IS GOING NEGATIVE'
			
			EXEC SP_EXECUTESQL @CCMDOUTPUT
			SET @BNEGSTOCKFOUND=1
			
			GOTO END_PROC
		END

		
		-- VALIDATE ENTRIES
		--SET @NSTEP = 150

		--EXEC VALIDATEXN_PRD
		--	  @CXNTYPE	= 'IRR'
		--	, @CXNID	= @CKEYFIELDVAL1
		--	, @NUPDATEMODE = @NUPDATEMODE			
		--	, @CCMD		= @CCMDOUTPUT OUTPUT

		--IF @CCMDOUTPUT <> ''
		--BEGIN
		--	SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' DATA VALIDATION FAILED : ' + @CCMDOUTPUT + '...'
		--	GOTO END_PROC
		--END

		-- AFTER SUCCESSFUL SAVING , JUST DROP THE TEMP TABLES CREATED BY APPLICATION
		SET @NSTEP = 160
	
		IF OBJECT_ID('TEMPDB..#TMPDUPIRR','U') IS NOT NULL
			DROP TABLE #TMPDUPIRR
		
		SELECT PRODUCT_UID,COUNT(*) AS  QUANTITY_IN_STOCK INTO #TMPDUPIRR
		FROM PRD_IRD01106 WHERE IRM_MEMO_ID=@CKEYFIELDVAL1
		GROUP BY PRODUCT_UID HAVING COUNT(*)>1
		
		IF EXISTS (SELECT TOP 1 * FROM #TMPDUPIRR)
		BEGIN
			SET @CERRORMSG='DUPLICATE ENTRY OF BAR CODES NOT ALLOWED.......PLEASE CHECK'
			
			SELECT *,@CERRORMSG AS ERRMSG FROM #TMPDUPIRR
			SET @BDUPRECORDFOUND=1
			GOTO END_PROC
		END
			--EXEC SAVETRAN_PRD_IRR 1,'89','WH','01117'
			
		
  -- SELECT * FROM PRD_IRD01106 WHERE IRM_MEMO_ID =@CKEYFIELDVAL1
		
	END TRY
	
	BEGIN CATCH
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		-- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG, '''' AS MEMO_ID'
		
		GOTO END_PROC
	END CATCH
	
END_PROC:

	--SELECT * FROM IRD01106 WHERE IRM_MEMO_ID='01011140000001R0000079' USE WIZAPP3SFR
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')=''
		BEGIN
			UPDATE PRD_IRM01106 SET LAST_UPDATE=GETDATE() WHERE IRM_MEMO_ID=@CKEYFIELDVAL1
			
			COMMIT TRANSACTION
		END	
		ELSE
			ROLLBACK
	END
	
	IF ISNULL(@BNEGSTOCKFOUND,0)=0 AND ISNULL(@BDUPRECORDFOUND,0)=0
	BEGIN
		INSERT @OUTPUT ( ERRMSG, MEMO_ID)
				VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )
        
        IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')=''
			SELECT ERRMSG,MEMO_ID FROM @OUTPUT
        ELSE
			SELECT * FROM @OUTPUT	
	END	

    SET @CCMD = N'IF OBJECT_ID( ''' + @CTEMPDETAILTABLE + ''',''U'') IS NOT NULL
                  DROP TABLE ' + @CTEMPDETAILTABLE +'
                  IF OBJECT_ID( ''' + @CTEMPMASTERTABLE + ''',''U'') IS NOT NULL
                  DROP TABLE ' + @CTEMPMASTERTABLE +'
                  '
	EXEC SP_EXECUTESQL @CCMD
END						
------------------------------------------------------ END OF PROCEDURE SAVETRAN_IRR
