create PROCEDURE DBCmd_ShowImageBarcodes(@nMode int ,@FROMDATE VARCHAR(10),@TODATE VARCHAR(10),@PAGE VARCHAR(5),@Sorting VARCHAR(5))  
AS  
BEGIN  
IF @TODATE<@FROMDATE  
   BEGIN  
      RAISERROR('To-Date can''t be before than From-Date',16,1)  
      RETURN  
   END  
SET NOCOUNT ON  
IF OBJECT_ID('tempdb..#TMP_CBS','U') IS NOT NULL DROP TABLE #TMP_CBS  
IF OBJECT_ID('tempdb..#CBS','U') IS NOT NULL DROP TABLE #CBS  
  
SELECT CAST('' AS VARCHAR(MAX)) AS PRODUCT_CODE,CAST(0 AS NUMERIC(20,3)) AS CBS INTO #TMP_CBS  
SELECT CAST('' AS VARCHAR(MAX)) AS PRODUCT_CODE,CAST(0 AS NUMERIC(20,3)) AS QTY INTO #CBS  
  
INSERT #TMP_CBS(PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE,SUM(QUANTITY)*-1 AS CBS  
 FROM WPS_DET A WITH (NOLOCK)      
 JOIN WPS_MST B WITH (NOLOCK) ON A.PS_ID = B.PS_ID      
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOC (NOLOCK) ON b.location_Code  = LOC.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND b.location_Code  = SKU_XFP.DEPT_ID   
 WHERE B.PS_DT BETWEEN '1900-01-01' AND @TODATE  
 AND B.CANCELLED=0 AND LOC.INACTIVE IN (0) AND LOC.REPORT_BLOCKED IN (0) AND ISNULL(ARTICLE.STOCK_NA,0)=0 AND SECTIONM.ITEM_TYPE=1  
 GROUP BY A.PRODUCT_CODE  
) A  
  
  
INSERT #TMP_CBS(PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE,SUM(CASE WHEN CNC_TYPE=1 THEN -QUANTITY ELSE QUANTITY END) AS CBS  
 FROM ICD01106 A WITH(NOLOCK)      
 JOIN ICM01106 B WITH(NOLOCK) ON A.CNC_MEMO_ID = B.CNC_MEMO_ID      
 JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=b.location_Code  
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOCM (NOLOCK) ON LOC.MAJOR_DEPT_ID = LOCM.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND LOC.MAJOR_DEPT_ID  = SKU_XFP.DEPT_ID   
 WHERE B.CNC_MEMO_DT BETWEEN '1900-01-01' AND @TODATE    
 AND B.CANCELLED=0 AND ISNULL(B.XN_ITEM_TYPE,0) IN (0,1) AND B.STOCK_ADJ_NOTE=0 AND ISNULL(ARTICLE.STOCK_NA,0)=0 AND SECTIONM.ITEM_TYPE=1  
 AND (LOCM.INACTIVE IN (0) AND LOCM.REPORT_BLOCKED IN (0))   
 GROUP BY A.PRODUCT_CODE  
) A  
  
INSERT #TMP_CBS(PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE,SUM (QUANTITY)*-1 AS CBS  
 FROM IND01106 A WITH(NOLOCK)      
 JOIN INM01106 B WITH(NOLOCK) ON A.INV_ID = B.INV_ID      
 JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=b.location_Code 
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOCM(NOLOCK) ON LOC.MAJOR_DEPT_ID = LOCM.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND LOC.MAJOR_DEPT_ID  = SKU_XFP.DEPT_ID   
 WHERE B.INV_DT BETWEEN '1900-01-01' AND @TODATE AND B.CANCELLED=0   
 AND ISNULL(B.XN_ITEM_TYPE,0) IN (0,1) AND ISNULL(B.ENTRY_MODE,0)<>2 AND ISNULL(ARTICLE.STOCK_NA,0)=0 AND SECTIONM.ITEM_TYPE=1  
 AND (LOCM.INACTIVE IN (0) AND LOCM.REPORT_BLOCKED IN (0))   
 GROUP BY A.PRODUCT_CODE  
) A  
  
  
  
INSERT #TMP_CBS(PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE,SUM(CASE WHEN S1.BARCODE_CODING_SCHEME=3 THEN A.TOTAL_QTY ELSE B2.QUANTITY END) AS CBS  
 FROM SNC_DET B2 (NOLOCK)      
 JOIN SNC_MST B (NOLOCK) ON B2.MEMO_ID = B.MEMO_ID      
 JOIN (    
    SELECT REFROW_ID AS [ROW_ID],PRODUCT_CODE,COUNT(*) AS [TOTAL_QTY]    
    FROM SNC_BARCODE_DET (NOLOCK)    
    GROUP BY REFROW_ID,PRODUCT_CODE    
   )A ON B2.ROW_ID = A.ROW_ID    
 JOIN SKU S1(NOLOCK) ON S1.PRODUCT_CODE=A.PRODUCT_CODE   
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOC(NOLOCK) ON b.location_Code  = LOC.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND b.location_Code   = SKU_XFP.DEPT_ID   
 WHERE B.RECEIPT_DT BETWEEN '1900-01-01' AND @TODATE    
 AND B.WIP=0 AND B.CANCELLED=0 AND A.PRODUCT_CODE<>'' AND SECTIONM.ITEM_TYPE=1  
 AND (LOC.INACTIVE IN (0) AND LOC.REPORT_BLOCKED IN (0)) AND ISNULL(ARTICLE.STOCK_NA,0)=0  
 GROUP BY A.PRODUCT_CODE  
)A  
  
INSERT #TMP_CBS (PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE,SUM(A.QUANTITY)*-1 AS CBS  
 FROM SNC_CONSUMABLE_DET A (NOLOCK)      
 JOIN SNC_MST B (NOLOCK) ON A.MEMO_ID = B.MEMO_ID      
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE  
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOC(NOLOCK) ON b.location_Code  = LOC.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND b.location_Code   = SKU_XFP.DEPT_ID   
 WHERE B.RECEIPT_DT BETWEEN '1900-01-01' AND @TODATE    
 AND A.WIP=0 AND B.CANCELLED=0 AND A.PRODUCT_CODE<>''   
 AND (LOC.INACTIVE IN (0) AND LOC.REPORT_BLOCKED IN (0))   
 AND ISNULL(ARTICLE.STOCK_NA,0)=0  
 AND SECTIONM.ITEM_TYPE=1   
 GROUP BY A.PRODUCT_CODE  
) A  
  
  
 
INSERT #TMP_CBS(PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE,SUM(A.QUANTITY) AS CBS  
 FROM TRANSFER_TO_TRADING_DET A (NOLOCK)      
 JOIN TRANSFER_TO_TRADING_MST B (NOLOCK) ON A.MEMO_ID = B.MEMO_ID      
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOC(NOLOCK) ON b.location_code  = LOC.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND b.location_code   = SKU_XFP.DEPT_ID   
 WHERE B.MEMO_DT BETWEEN '1900-01-01' AND @TODATE  AND B.CANCELLED=0 AND A.PRODUCT_CODE<>''   
 AND ( LOC.INACTIVE IN (0) AND LOC.REPORT_BLOCKED IN (0)) AND  ISNULL(ARTICLE.STOCK_NA,0)=0  
 AND SECTIONM.ITEM_TYPE=1   
 GROUP BY A.PRODUCT_CODE  
) A  
  
INSERT #TMP_CBS(PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE,SUM(A.QUANTITY)*-1 AS CBS  
 FROM DNPS_DET A (NOLOCK)      
 JOIN DNPS_MST B (NOLOCK) ON A.PS_ID = B.PS_ID      
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOC (NOLOCK) ON b.location_Code  = LOC.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND b.location_Code   = SKU_XFP.DEPT_ID   
 WHERE B.PS_DT BETWEEN '1900-01-01' AND @TODATE    
 AND B.CANCELLED=0 AND (LOC.INACTIVE IN (0) AND LOC.REPORT_BLOCKED IN (0)) AND ISNULL(ARTICLE.STOCK_NA,0)=0  
 AND  SECTIONM.ITEM_TYPE=1   
 GROUP BY A.PRODUCT_CODE  
) A  
  
INSERT #TMP_CBS(PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE,SUM(A.QUANTITY) AS CBS  
 FROM RMD01106 A (NOLOCK)      
 JOIN RMM01106 B (NOLOCK) ON A.RM_ID = B.RM_ID   
 JOIN DNPS_MST C ON A.PS_ID =C.PS_ID      
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOC (NOLOCK) ON b.location_Code  = LOC.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND b.location_Code   = SKU_XFP.DEPT_ID   
 WHERE B.RM_DT BETWEEN '1900-01-01' AND @TODATE   
 AND B.CANCELLED=0 AND ISNULL(A.PS_ID,'')<>''  
 AND ISNULL(B.XN_ITEM_TYPE,0) IN (0,1)   
 AND (LOC.INACTIVE IN (0) AND LOC.REPORT_BLOCKED IN (0))   
 AND ISNULL(ARTICLE.STOCK_NA,0)=0  
 AND SECTIONM.ITEM_TYPE=1   
 GROUP BY A.PRODUCT_CODE  
) A  
  
INSERT #TMP_CBS(PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE,SUM(CASE WHEN ISNULL(B.ISSUE_TYPE,0)<>0 THEN A.STOCK_QTY ELSE -A.STOCK_QTY END) AS CBS  
 FROM BOM_ISSUE_DET A (NOLOCK)    
 JOIN BOM_ISSUE_MST B (NOLOCK) ON A.ISSUE_ID = B.ISSUE_ID    
 JOIN PRD_AGENCY_MST D (NOLOCK) ON D.AGENCY_CODE=B.AGENCY_CODE    
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOC (NOLOCK) ON b.location_Code  = LOC.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND b.location_Code   = SKU_XFP.DEPT_ID   
 WHERE B.ISSUE_DT BETWEEN '1900-01-01' AND @TODATE    
 AND B.CANCELLED=0   
 AND (LOC.INACTIVE IN (0) AND LOC.REPORT_BLOCKED IN (0))   
 AND ISNULL(ARTICLE.STOCK_NA,0)=0  
 AND SECTIONM.ITEM_TYPE=1   
 GROUP BY A.PRODUCT_CODE  
) A  
  
INSERT #TMP_CBS(PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE,SUM(QUANTITY) AS CBS  
 FROM CND01106 A (NOLOCK)      
 JOIN CNM01106 B (NOLOCK) ON A.CN_ID = B.CN_ID      
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOC (NOLOCK) ON BILLED_FROM_DEPT_ID = LOC.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND BILLED_FROM_DEPT_ID  = SKU_XFP.DEPT_ID   
 WHERE ((MODE=2 AND B.RECEIPT_DT<=@TODATE AND B.RECEIPT_DT<>'')   
         OR   
        (MODE=1 AND B.CN_DT BETWEEN '1900-01-01' AND @TODATE))  
 AND B.CANCELLED=0 AND ISNULL(B.CN_TYPE,0) IN (0,1)  
 AND ISNULL(B.XN_ITEM_TYPE,0) IN (0,1)   
 AND (LOC.INACTIVE IN (0) AND LOC.REPORT_BLOCKED IN (0))   
 AND ISNULL(ARTICLE.STOCK_NA,0)=0  
 AND SECTIONM.ITEM_TYPE=1   
 GROUP BY A.PRODUCT_CODE  
) A  
  
INSERT #TMP_CBS(PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT NEW_PRODUCT_CODE AS PRODUCT_CODE,SUM(A.QUANTITY) AS CBS  
 FROM IRD01106 A (NOLOCK)      
 JOIN IRM01106 B (NOLOCK) ON A.IRM_MEMO_ID = B.IRM_MEMO_ID     
 JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=b.location_Code  
 LEFT OUTER JOIN SKU (NOLOCK) ON NEW_PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON NEW_PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOCM(NOLOCK) ON LOC.MAJOR_DEPT_ID = LOCM.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND LOC.MAJOR_DEPT_ID  = SKU_XFP.DEPT_ID   
 WHERE B.IRM_MEMO_DT BETWEEN '1900-01-01' AND @TODATE  
 AND ISNULL(A.NEW_PRODUCT_CODE,'')<>'' AND ( LOCM.INACTIVE IN (0) AND LOCM.REPORT_BLOCKED IN (0))   
 AND ISNULL(ARTICLE.STOCK_NA,0)=0 AND SECTIONM.ITEM_TYPE=1   
 GROUP BY NEW_PRODUCT_CODE  
) A  
  
INSERT #TMP_CBS(PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE,SUM(A.QUANTITY) AS CBS  
 FROM SCF01106 A (NOLOCK)      
 JOIN SCM01106 B (NOLOCK) ON A.MEMO_ID = B.MEMO_ID      
 JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=b.location_Code 
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOCM(NOLOCK) ON LOC.MAJOR_DEPT_ID = LOCM.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND LOC.MAJOR_DEPT_ID  = SKU_XFP.DEPT_ID   
 WHERE B.MEMO_DT BETWEEN '1900-01-01' AND @TODATE    
 AND B.CANCELLED=0 AND ( LOCM.INACTIVE IN (0) AND LOCM.REPORT_BLOCKED IN (0)) AND  ISNULL(ARTICLE.STOCK_NA,0)=0  
 AND SECTIONM.ITEM_TYPE=1   
 GROUP BY A.PRODUCT_CODE  
) A  
  
INSERT #TMP_CBS(PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE,SUM(A.QUANTITY)*-1 AS CBS  
 FROM IRD01106 A (NOLOCK)      
 JOIN IRM01106 B (NOLOCK) ON A.IRM_MEMO_ID = B.IRM_MEMO_ID   
 JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=b.location_Code 
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOCM (NOLOCK) ON LOC.MAJOR_DEPT_ID = LOCM.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND LOC.MAJOR_DEPT_ID  = SKU_XFP.DEPT_ID   
 WHERE B.IRM_MEMO_DT BETWEEN '1900-01-01' AND @TODATE   
 AND ISNULL(A.NEW_PRODUCT_CODE,'')<>'' AND ISNULL(ARTICLE.STOCK_NA,0)=0 AND SECTIONM.ITEM_TYPE=1  
 AND (LOCM.INACTIVE IN (0) AND LOCM.REPORT_BLOCKED IN (0))   
 GROUP BY A.PRODUCT_CODE  
) A  
  
  
  
  
INSERT #TMP_CBS(PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE,SUM(A.QUANTITY+ADJ_QUANTITY)*-1 AS CBS  
 FROM SCC01106 A (NOLOCK)   
JOIN SCM01106 B (NOLOCK) ON A.MEMO_ID = B.MEMO_ID      
 JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=b.location_Code    
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOCM (NOLOCK) ON LOC.MAJOR_DEPT_ID = LOCM.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND LOC.MAJOR_DEPT_ID  = SKU_XFP.DEPT_ID   
 WHERE B.MEMO_DT BETWEEN '1900-01-01' AND @TODATE    
 AND B.CANCELLED=0 AND ( LOCM.INACTIVE IN (0) AND LOCM.REPORT_BLOCKED IN (0)) AND  ISNULL(ARTICLE.STOCK_NA,0)=0  
 AND  SECTIONM.ITEM_TYPE=1   
 GROUP BY A.PRODUCT_CODE  
) A  
  
INSERT #TMP_CBS(PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE,SUM(A.QUANTITY_OB) AS CBS  
 FROM OPS01106 A WITH (NOLOCK)  
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOC (NOLOCK) ON A.DEPT_ID = LOC.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND A.DEPT_ID  = SKU_XFP.DEPT_ID   
 WHERE A.XN_DT BETWEEN '1900-01-01' AND @TODATE AND ( LOC.INACTIVE IN (0) AND LOC.REPORT_BLOCKED IN (0)) AND  ISNULL(ARTICLE.STOCK_NA,0)=0  
 AND SECTIONM.ITEM_TYPE=1   
 GROUP BY A.PRODUCT_CODE  
) A  
  
INSERT #TMP_CBS(PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE,SUM(A.QUANTITY)*-1 AS CBS  
 FROM FLOOR_ST_DET A WITH (NOLOCK)  
 JOIN FLOOR_ST_MST B WITH (NOLOCK) ON A.MEMO_ID  = B.MEMO_ID   
 JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=b.location_Code    
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOCM (NOLOCK) ON LOC.MAJOR_DEPT_ID = LOCM.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND LOC.MAJOR_DEPT_ID  = SKU_XFP.DEPT_ID   
 WHERE B.MEMO_DT BETWEEN '1900-01-01' AND @TODATE  AND B.CANCELLED = 0  AND (LOCM.INACTIVE IN (0) AND LOCM.REPORT_BLOCKED IN (0)) AND  ISNULL(ARTICLE.STOCK_NA,0)=0  
 AND  SECTIONM.ITEM_TYPE=1   
 GROUP BY A.PRODUCT_CODE  
) A  
  
INSERT #TMP_CBS(PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE,SUM(A.QUANTITY)AS CBS  
 FROM FLOOR_ST_DET A (NOLOCK)      
 JOIN FLOOR_ST_MST B (NOLOCK) ON A.MEMO_ID  = B.MEMO_ID        
 JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=b.location_Code 
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOCM (NOLOCK) ON LOC.MAJOR_DEPT_ID = LOCM.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND LOC.MAJOR_DEPT_ID  = SKU_XFP.DEPT_ID   
 WHERE B.RECEIPT_DT<=@TODATE AND B.RECEIPT_DT<>''  AND B.CANCELLED = 0 AND (LOCM.INACTIVE IN (0) AND LOCM.REPORT_BLOCKED IN (0)) AND  ISNULL(ARTICLE.STOCK_NA,0)=0 AND SECTIONM.ITEM_TYPE=1   
 GROUP BY A.PRODUCT_CODE  
) A  
  
INSERT #TMP_CBS(PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE,SUM(A.QUANTITY) AS CBS  
 FROM PID01106 A WITH(NOLOCK)      
 JOIN PIM01106 B WITH(NOLOCK) ON A.MRR_ID = B.MRR_ID  
 JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=B.DEPT_ID  
 LEFT OUTER JOIN PIM01106 C (NOLOCK) ON C.REF_CONVERTED_MRNTOBILL_MRRID=B.MRR_ID  
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOCM (NOLOCK) ON LOC.MAJOR_DEPT_ID = LOCM.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND LOC.MAJOR_DEPT_ID  = SKU_XFP.DEPT_ID   
 WHERE B.RECEIPT_DT<=@TODATE  AND  B.CANCELLED = 0 AND B.RECEIPT_DT<>'' AND C.MRR_ID IS NULL  
 AND ISNULL(B.XN_ITEM_TYPE,0) IN (0,1) AND A.PRODUCT_CODE<>'' AND ( LOCM.INACTIVE IN (0) AND LOCM.REPORT_BLOCKED IN (0)) AND  ISNULL(ARTICLE.STOCK_NA,0)=0  
 AND  SECTIONM.ITEM_TYPE=1   
 GROUP BY A.PRODUCT_CODE  
) A  
  
INSERT  #TMP_CBS(PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE, SUM(A.QUANTITY) AS CBS  
 FROM GRN_PS_DET  A WITH(NOLOCK)      
 JOIN  GRN_PS_MST B WITH(NOLOCK) ON A.MEMO_ID  = B.MEMO_ID  
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOCM (NOLOCK) ON b.location_Code  = LOCM.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND b.location_Code   = SKU_XFP.DEPT_ID   
 WHERE B.MEMO_DT BETWEEN '1900-01-01' AND @TODATE  AND B.CANCELLED=0  AND ( LOCM.INACTIVE IN (0) AND LOCM.REPORT_BLOCKED IN (0)) AND  ISNULL(ARTICLE.STOCK_NA,0)=0  AND SECTIONM.ITEM_TYPE=1   
 GROUP BY A.PRODUCT_CODE  
) A  
  
INSERT #TMP_CBS(PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE,SUM(A.QUANTITY) *-1 AS CBS  
 FROM JOBWORK_ISSUE_DET A (NOLOCK)      
 JOIN JOBWORK_ISSUE_MST B (NOLOCK) ON A.ISSUE_ID = B.ISSUE_ID      
 JOIN PRD_AGENCY_MST D (NOLOCK) ON D.AGENCY_CODE=B.AGENCY_CODE      
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOCM(NOLOCK) ON b.location_Code  = LOCM.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND b.location_Code   = SKU_XFP.DEPT_ID   
 WHERE B.ISSUE_DT BETWEEN '1900-01-01' AND @TODATE  AND B.CANCELLED=0      
 AND B.ISSUE_TYPE=1  AND ISNULL(B.WIP,0)=0   
 AND ISNULL(B.ISSUE_MODE,0)<>1 AND ( LOCM.INACTIVE IN (0) AND LOCM.REPORT_BLOCKED IN (0)) AND  ISNULL(ARTICLE.STOCK_NA,0)=0  
 AND SECTIONM.ITEM_TYPE=1   
 GROUP BY A.PRODUCT_CODE  
) A  
  
INSERT #TMP_CBS(PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE,SUM(D.QUANTITY) AS CBS  
 FROM JOBWORK_RECEIPT_DET D (NOLOCK)      
 JOIN JOBWORK_RECEIPT_MST B (NOLOCK) ON D.RECEIPT_ID = B.RECEIPT_ID      
 JOIN JOBWORK_ISSUE_DET A (NOLOCK) ON A.ROW_ID=D.REF_ROW_ID      
 JOIN JOBWORK_ISSUE_MST E (NOLOCK) ON E.ISSUE_ID = A.ISSUE_ID      
 JOIN PRD_AGENCY_MST PA (NOLOCK) ON PA.AGENCY_CODE=E.AGENCY_CODE      
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOCM (NOLOCK) ON b.location_Code  = LOCM.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND b.location_Code   = SKU_XFP.DEPT_ID   
 WHERE B.RECEIPT_DT BETWEEN '1900-01-01' AND @TODATE  AND B.CANCELLED=0  
 AND E.ISSUE_TYPE=1  AND ISNULL(B.WIP,0)=0  AND ISNULL(B.RECEIVE_MODE,0)<>1 AND ( LOCM.INACTIVE IN (0) AND LOCM.REPORT_BLOCKED IN (0)) AND  ISNULL(ARTICLE.STOCK_NA,0)=0  
 AND  SECTIONM.ITEM_TYPE=1   
 GROUP BY A.PRODUCT_CODE  
) A  
  
INSERT  #TMP_CBS(PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE, SUM(A.QUANTITY)*-1 AS CBS  
 FROM PID01106 A WITH(NOLOCK)      
 JOIN PIM01106 B WITH(NOLOCK) ON A.MRR_ID = B.MRR_ID  
 JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=B.DEPT_ID  
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOCM(NOLOCK) ON LOC.MAJOR_DEPT_ID = LOCM.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND LOC.MAJOR_DEPT_ID  = SKU_XFP.DEPT_ID   
 WHERE B.RECEIPT_DT<=@TODATE  AND B.CANCELLED=0  AND B.RECEIPT_DT<>''  
 AND ISNULL(B.PIM_MODE,0)=6  
 AND ISNULL(B.XN_ITEM_TYPE,0) IN (0,1)  AND ( LOCM.INACTIVE IN (0) AND LOCM.REPORT_BLOCKED IN (0)) AND  ISNULL(ARTICLE.STOCK_NA,0)=0  
 AND  SECTIONM.ITEM_TYPE=1   
 GROUP BY A.PRODUCT_CODE  
) A  
  
INSERT #TMP_CBS (PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE,SUM(QUANTITY)*-1 AS CBS  
 FROM RMD01106 A WITH(NOLOCK)  
 JOIN RMM01106 B WITH(NOLOCK) ON A.RM_ID = B.RM_ID      
 JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=b.location_Code 
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOCM (NOLOCK) ON LOC.MAJOR_DEPT_ID = LOCM.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND LOC.MAJOR_DEPT_ID  = SKU_XFP.DEPT_ID   
 WHERE B.RM_DT BETWEEN '1900-01-01' AND @TODATE  AND B.CANCELLED=0 AND B.DN_TYPE IN (0,1)   
 AND ISNULL(B.XN_ITEM_TYPE,0) IN (0,1) AND ( LOCM.INACTIVE IN (0) AND LOCM.REPORT_BLOCKED IN (0)) AND  ISNULL(ARTICLE.STOCK_NA,0)=0  
 AND SECTIONM.ITEM_TYPE=1   
 GROUP BY A.PRODUCT_CODE  
) A  
  
INSERT #TMP_CBS(PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE,SUM(A.QUANTITY)*-1 AS CBS  
 FROM CMD01106 A (NOLOCK)      
 JOIN CMM01106 B (NOLOCK) ON A.CM_ID = B.CM_ID      
 JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=b.location_Code  
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOCM (NOLOCK) ON LOC.MAJOR_DEPT_ID = LOCM.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND LOC.MAJOR_DEPT_ID  = SKU_XFP.DEPT_ID   
 WHERE B.CM_DT BETWEEN '1900-01-01' AND @TODATE  AND B.CANCELLED=0    
 AND ISNULL(B.XN_ITEM_TYPE,0) IN (0,1) AND ( LOCM.INACTIVE IN (0) AND LOCM.REPORT_BLOCKED IN (0)) AND ISNULL(ARTICLE.STOCK_NA,0)=0  AND SECTIONM.ITEM_TYPE=1   
 GROUP BY A.PRODUCT_CODE  
) A  
  
INSERT #TMP_CBS (PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT A.PRODUCT_CODE AS PRODUCT_CODE,SUM(A.QUANTITY)*-1 AS CBS  
 FROM APD01106 A WITH(NOLOCK)      
 JOIN APM01106 B WITH(NOLOCK) ON A.MEMO_ID = B.MEMO_ID      
 JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=b.location_Code
 LEFT OUTER JOIN SKU (NOLOCK) ON A.PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON A.PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOCM (NOLOCK) ON LOC.MAJOR_DEPT_ID = LOCM.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON A.PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND LOC.MAJOR_DEPT_ID  = SKU_XFP.DEPT_ID   
 WHERE B.MEMO_DT BETWEEN '1900-01-01' AND @TODATE  AND B.CANCELLED=0 AND ( LOCM.INACTIVE IN (0) AND LOCM.REPORT_BLOCKED IN (0)) AND  ISNULL(ARTICLE.STOCK_NA,0)=0 AND SECTIONM.ITEM_TYPE=1   
 GROUP BY A.PRODUCT_CODE  
) A  
 
  
INSERT #TMP_CBS (PRODUCT_CODE,CBS)  
SELECT PRODUCT_CODE,CBS  
FROM   
(   
 SELECT APD_PRODUCT_CODE AS PRODUCT_CODE,SUM(B.QUANTITY) AS CBS  
 FROM APPROVAL_RETURN_DET B WITH(NOLOCK)      
 JOIN APPROVAL_RETURN_MST C WITH(NOLOCK) ON C.MEMO_ID = B.MEMO_ID      
 JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=c.location_Code   
 LEFT OUTER JOIN SKU (NOLOCK) ON APD_PRODUCT_CODE = SKU.PRODUCT_CODE   
 LEFT OUTER JOIN ARTICLE (NOLOCK) ON SKU.ARTICLE_CODE = ARTICLE.ARTICLE_CODE    
 LEFT OUTER JOIN SKU_NAMES (NOLOCK) ON APD_PRODUCT_CODE= SKU_NAMES.PRODUCT_CODE  
 LEFT OUTER JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE  
 LEFT OUTER JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE AND SECTIONM.ITEM_TYPE=1  
 JOIN LOCATION LOCM (NOLOCK) ON LOC.MAJOR_DEPT_ID = LOCM.DEPT_ID   
 LEFT OUTER JOIN SKU_XFP (NOLOCK) ON APD_PRODUCT_CODE = SKU_XFP.PRODUCT_CODE AND LOC.MAJOR_DEPT_ID  = SKU_XFP.DEPT_ID   
 WHERE C.MEMO_DT BETWEEN '1900-01-01' AND @TODATE  AND C.CANCELLED=0 AND ( LOCM.INACTIVE IN (0) AND LOCM.REPORT_BLOCKED IN (0)) AND  ISNULL(ARTICLE.STOCK_NA,0)=0 AND SECTIONM.ITEM_TYPE=1   
 GROUP BY APD_PRODUCT_CODE  
)A  
  
 
INSERT #CBS  
SELECT PRODUCT_CODE,SUM(ISNULL(CBS,0)) AS CBS  
FROM #TMP_CBS A (NOLOCK)   
GROUP BY PRODUCT_CODE  
HAVING SUM(ISNULL(CBS,0))<>0

DECLARE @DTSQL NVARCHAR(MAX),@CCMD VARCHAR(MAX),@Filter_Criteria VARCHAR(MAX),@Filter_Description VARCHAR(MAX)  
,@RecPerPage int,@MYSQL INT,@SLS CHAR(1),@CBS CHAR(1),@WSL CHAR(1),@SortingDesc VARCHAR(100),@SET_IMG VARCHAR(100)  
,@PNo int,@SortBy int  
  
SET @PAGE=CASE @PAGE WHEN '' THEN '0' ELSE @PAGE END  
SET @Sorting=CASE @Sorting WHEN '' THEN '0' ELSE @Sorting END  
  
SELECT @PNo=CONVERT(INT,@PAGE),@SortBy=CONVERT(INT,@SORTING)  
  
SELECT TOP 1 @RecPerPage=ISNULL(IMG_PER_PAGE,12) FROM DB_IMAGE_CONFIG  
  
SELECT TOP 1 @Filter_Criteria=Filter_Criteria,@Filter_Description=Filter_Description FROM Image_Dashboard_Setup(NOLOCK)  
SET @Filter_Description=ISNULL(@Filter_Description,'1=1')  
SET @Filter_Criteria=ISNULL(@Filter_Criteria,'1=1')  
  
  
IF @nMode=1  
   BEGIN  
    SET @SET_IMG=DBO.IMAGE_SET_ON()  
 SET @SortingDesc=CASE @SortBy WHEN 1 THEN 'ISNULL(WSL.QTY,0),SKU.PRODUCT_CODE' WHEN 2 THEN 'SKU.AC_NAME,SKU.PRODUCT_CODE' ELSE 'SKU.PRODUCT_CODE' END  
    SELECT @SLS=CONVERT(VARCHAR,ISNULL(SLS,0))  
          ,@CBS=CONVERT(VARCHAR,ISNULL(CBS,0))  
          ,@WSL=CONVERT(VARCHAR,ISNULL(WSL,0))   
    FROM DB_IMAGE_CONFIG  
 SET @Filter_Criteria=REPLACE(@Filter_Criteria,'SUB_SECTION_NAME','SKU.SUB_SECTION_NAME')  
 SET @Filter_Criteria=REPLACE(@Filter_Criteria,'SECTION_NAME','SKU.SECTION_NAME')  
 SET @Filter_Criteria=REPLACE(@Filter_Criteria,'PARA1_NAME','SKU.PARA1_NAME')  
 SET @Filter_Criteria=REPLACE(@Filter_Criteria,'PARA2_NAME','SKU.PARA2_NAME')  
 SET @Filter_Criteria=REPLACE(@Filter_Criteria,'PARA3_NAME','SKU.PARA3_NAME')  
 SET @Filter_Criteria=REPLACE(@Filter_Criteria,'PARA4_NAME','SKU.PARA4_NAME')  
 SET @Filter_Criteria=REPLACE(@Filter_Criteria,'PARA5_NAME','SKU.PARA5_NAME')  
 SET @Filter_Criteria=REPLACE(@Filter_Criteria,'PARA6_NAME','SKU.PARA6_NAME')  
 IF OBJECT_ID('tempdb..##IMG') IS NOT NULL DROP TABLE ##IMG  
   
   
   
 select @SLS=isnull(@SLS,0),@CBS=isnull(@CBS,0),@WSL=isnull(@WSL,0)  
  
 SET @CCMD='  
 SELECT  SKU.PRODUCT_CODE  AS PRODUCT_CODE  
 ,I.PROD_IMAGE  
 ,SKU.MRP  
 ,SKU.PARA1_NAME AS '+(SELECT TOP 1 VALUE FROM CONFIG WHERE  CONFIG_OPTION='PARA1_caption')+'  
 ,SKU.PARA2_NAME AS '+(SELECT TOP 1 VALUE FROM CONFIG WHERE   CONFIG_OPTION='PARA2_caption')+'  
 ,SKU.PARA3_NAME AS '+(SELECT TOP 1 VALUE FROM CONFIG WHERE  CONFIG_OPTION='PARA3_caption')+'  
 ,SKU.PARA4_NAME AS ['+(SELECT TOP 1 VALUE FROM CONFIG WHERE  CONFIG_OPTION='PARA4_caption')+']  
 ,SKU.PARA5_NAME AS ['+(SELECT TOP 1 VALUE FROM CONFIG WHERE  CONFIG_OPTION='PARA5_caption')+']  
 ,SKU.PARA6_NAME AS ['+(SELECT TOP 1 VALUE FROM CONFIG WHERE  CONFIG_OPTION='PARA6_caption')+']  
 ,CAST(ISNULL(SLS.QTY,0)/CASE ISNULL(CBS.QTY,0) WHEN 0 THEN 1 ELSE ISNULL(CBS.QTY,0) END*CASE ISNULL(CBS.QTY,0) WHEN 0 THEN 1 ELSE 100 END AS DECIMAL(10,2)) AS SALE_RATIO  
 ,'''' STOCK_LEDGER  
 ,CAST(ISNULL(CBS.QTY,0) AS DECIMAL(10,2)) CBS_QTY  
 ,DATEDIFF(DD,GETDATE(),GETDATE()) AGEING  
 ,SKU.AC_NAME SUPPLIER  
 ,ISNULL(PUR.QTY,0) PUR_QTY  
 ,ISNULL(WSL.QTY,0) WSL_QTY  
 ,'''+@Filter_Description+''' VW_FILTER  
 ,CAST(0 AS INT)REC_COUNT  
 ,R=ROW_NUMBER()OVER(ORDER BY '+@SortingDesc+')  
 ,'+@SLS+' SHOW_SLS  
 ,'+@CBS+' SHOW_CBS  
 ,'+@WSL+' SHOW_WSL  
 ,''PRODUCT CODE'' AS IMAGE_SET_ON  
 ,SKU.PRODUCT_CODE  
  AS VALUE  
 INTO ##IMG  
 FROM #CBS CBS
 JOIN SKU_NAMES SKU (NOLOCK) ON SKU.PRODUCT_CODE=CBS.PRODUCT_CODE
 JOIN  '+DB_NAME()+'_IMAGE..IMAGE_INFO I (NOLOCK)  
 --JOIN SKU (NOLOCK)  
 --JOIN ARTICLE A (NOLOCK) ON SKU.ARTICLE_CODE=A.ARTICLE_CODE  
 --JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=A.SUB_SECTION_CODE  
 --JOIN SECTIONM SM (NOLOCK) ON SD.SECTION_CODE=SM.SECTION_CODE  
 --JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE=A.PARA1_CODE  
 --JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE=A.PARA2_CODE  
 --JOIN PARA3 P3 (NOLOCK) ON P3.PARA3_CODE=A.PARA3_CODE  
 --JOIN PARA4 P4 (NOLOCK) ON P4.PARA4_CODE=A.PARA4_CODE  
 --JOIN PARA5 P5 (NOLOCK) ON P5.PARA5_CODE=A.PARA5_CODE  
 --JOIN PARA6 P6 (NOLOCK) ON P6.PARA6_CODE=A.PARA6_CODE  
 --JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE=SKU.AC_CODE   
    ON SKU.'+@SET_IMG+'_CODE=I.'+@SET_IMG+'_CODE  
   
 LEFT JOIN (SELECT D.PRODUCT_CODE,SUM(D.QUANTITY)QTY  
      FROM CMM01106 M (NOLOCK) JOIN CMD01106 D (NOLOCK) ON M.CM_ID=D.CM_ID  
      WHERE M.CANCELLED=0 AND M.CM_DT BETWEEN '''+@FROMDATE+''' AND '''+@TODATE+'''  
      GROUP BY PRODUCT_CODE  
     )SLS ON SLS.PRODUCT_CODE=SKU.PRODUCT_CODE  
       
 LEFT JOIN (SELECT D.PRODUCT_CODE,SUM(D.QUANTITY)QTY  
      FROM INM01106 M (NOLOCK) JOIN IND01106 D (NOLOCK) ON M.INV_ID=D.INV_ID  
      WHERE M.CANCELLED=0 AND M.INV_DT BETWEEN '''+@FROMDATE+''' AND '''+@TODATE+'''  
      GROUP BY D.PRODUCT_CODE  
     )WSL ON WSL.PRODUCT_CODE=SKU.PRODUCT_CODE  
  
 --LEFT JOIN #CBS CBS ON CBS.PRODUCT_CODE=SKU.PRODUCT_CODE  
       
 LEFT JOIN (SELECT D.PRODUCT_CODE,SUM(D.QUANTITY)QTY  
      FROM PIM01106 M (NOLOCK) JOIN PID01106 D (NOLOCK) ON M.MRR_ID=D.MRR_ID  
      WHERE M.MRR_DT BETWEEN '''+@FROMDATE+''' AND '''+@TODATE+''' AND M.CANCELLED=0 AND M.PIM_MODE<4  
      GROUP BY D.PRODUCT_CODE  
     )PUR ON PUR.PRODUCT_CODE=SKU.PRODUCT_CODE  
  
 WHERE I.'+@SET_IMG+'_CODE<>'''+REPLICATE('0',CASE @SET_IMG WHEN 'ARTICLE' THEN 8 ELSE 7 END)+'''  
    AND DATALENGTH(I.PROD_IMAGE)/1024<=50   
       AND '+@Filter_Criteria  
 PRINT @CCMD
 EXEC(@CCMD)  
 UPDATE ##IMG SET REC_COUNT=@@ROWCOUNT  
   
   
   
 --SHOW RESULT  
 IF OBJECT_ID('tempdb..#IMG') IS NOT NULL DROP TABLE #IMG  
 SELECT * INTO #IMG FROM ##IMG WHERE R BETWEEN @PNo*@RecPerPage-(@RecPerPage-1) AND @PNo*@RecPerPage  
 UPDATE #IMG SET REC_COUNT=@@ROWCOUNT  
 SELECT * FROM #IMG ORDER BY R  
 IF OBJECT_ID('tempdb..##IMG') IS NOT NULL DROP TABLE ##IMG  
 IF OBJECT_ID('tempdb..#IMG') IS NOT NULL DROP TABLE #IMG  
  END   
  
  
IF @nMode=2  
   BEGIN  
      SET @DTSQL=N'SELECT @MYSQL=COUNT(*)   
        FROM '+DB_NAME()+'_IMAGE..IMAGE_INFO I (NOLOCK)  
  JOIN SKU (NOLOCK) ON I.PRODUCT_CODE=SKU.PRODUCT_CODE  
  JOIN ARTICLE A (NOLOCK) ON SKU.ARTICLE_CODE=A.ARTICLE_CODE  
  JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=A.SUB_SECTION_CODE  
  JOIN SECTIONM SM (NOLOCK) ON SD.SECTION_CODE=SM.SECTION_CODE  
  JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE=SKU.PARA1_CODE  
  JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE=SKU.PARA2_CODE  
  JOIN PARA3 P3 (NOLOCK) ON P3.PARA3_CODE=SKU.PARA3_CODE  
  JOIN PARA4 P4 (NOLOCK) ON P4.PARA4_CODE=SKU.PARA4_CODE  
  JOIN PARA5 P5 (NOLOCK) ON P5.PARA5_CODE=SKU.PARA5_CODE  
  JOIN PARA6 P6 (NOLOCK) ON P6.PARA6_CODE=SKU.PARA6_CODE  
  JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE=SKU.AC_CODE  
  WHERE DATALENGTH(I.PROD_IMAGE)/1024<=50 AND '+@Filter_Criteria  
      EXEC SP_EXECUTESQL @DTSQL,N'@MYSQL INT OUTPUT',@MYSQL=@MYSQL OUTPUT  
      PRINT @MYSQL  
      SET @MYSQL=CEILING(@MYSQL/CONVERT(FLOAT,@RecPerPage))  
      IF OBJECT_ID('tempdb..#P') IS NOT NULL DROP TABLE #P  
      CREATE TABLE #P (PNO INT)  
      WHILE @MYSQL>0  
        BEGIN  
     INSERT #P SELECT @MYSQL             
           SET @MYSQL-=1  
        END  
      SELECT * FROM #P ORDER BY 1     
      IF OBJECT_ID('tempdb..#P') IS NOT NULL DROP TABLE #P  
   END  
  
SET NOCOUNT OFF  
END  
  
  