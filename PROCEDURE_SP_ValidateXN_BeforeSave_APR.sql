CREATE PROCEDURE SP_VALIDATEXN_BEFORESAVE_APR
(
	@NSPID			VARCHAR(40),
	@CUSERCODE		NVARCHAR(10),
	@NUPDATEMODE	INT,
	@CRETVAL		NVARCHAR(MAX) OUTPUT,
	@BNEGSTOCKFOUND BIT OUTPUT
)
--WITH ENCRYPTION
AS
BEGIN
BEGIN TRY

DECLARE @CCMD		NVARCHAR(MAX),
		@CTEMPCMA		NVARCHAR(MAX),
		@CERRPRODUCTCODE	VARCHAR(50),@NSTEP INT,
		@NAPPQTY NUMERIC(10,3),@NRETQTY NUMERIC(10,3),
		@CTEMPDBNAME	VARCHAR(50),@cWhereClause VARCHAR(400)


SET @NSTEP=0

set @cWhereClause=' WHERE sp_id='''+@nSpId+''''

SET @CTEMPDBNAME =''


SET @NSTEP=1
SET @CTEMPCMA=@CTEMPDBNAME+'APR_APPROVAL_RETURN_DET_UPLOAD'

SET @CRETVAL=''

--********************************************VALIDATION FOR CMM01106****************************************************
--VALIDATING RECORD COUNT
SET @CCMD=N'IF (SELECT COUNT(*) FROM ['+@CTEMPCMA+' ]'+@cWhereClause+')=0
				SET @CRETVAL1=''NO RECORD FOUND FOR ITEM RETURN..... CANNOT PROCEED'''

EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
GOTO ATLAST


--VALIDATING CMD ROW ID

SET @NSTEP=3
SET @CCMD=N'IF EXISTS (SELECT TOP 1 A.APD_ROW_ID FROM ['+ @cTempCma + N'] A 
						LEFT OUTER JOIN APD01106 B ON B.ROW_ID=A.APD_ROW_ID
						'+@cWhereClause+' AND B.ROW_ID IS NULL)
				SET @CRETVAL1=''INVALID REFERENCE ROW ID FOUND FOR ITEM RETURN....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	GOTO ATLAST

SET @NSTEP=4
--VALIDATING RETURN QUANTITY


SET @CCMD=N'SELECT TOP 1 @CPRODUCTCODEOUT=A.PRODUCT_CODE,@NAPPQTYOUT=A.QUANTITY,@NRETQTYOUT=Z.QTY 
					   FROM CMD01106 A JOIN 
						(
							SELECT X.APD_ROW_ID,SUM(X.QUANTITY) AS QTY
							FROM
							(
								SELECT APD_ROW_ID ,QUANTITY
								FROM ['+@cTempCma+']'++@cWhereClause+'
								UNION ALL
								SELECT A.APD_ROW_ID ,A.QUANTITY
								FROM APPROVAL_RETURN_DET A
								JOIN ['+ @cTempCma+'] B ON B.APD_ROW_ID=A.APD_ROW_ID
								'+@cWhereClause+'
							)X
							GROUP BY X.APD_ROW_ID
						)Z ON Z.APD_ROW_ID=A.ROW_ID
						WHERE Z.QTY>A.QUANTITY'
EXEC SP_EXECUTESQL @CCMD,N'@CPRODUCTCODEOUT VARCHAR(50) OUTPUT,@NAPPQTYOUT NUMERIC(10,2) OUTPUT,
							@NRETQTYOUT NUMERIC(10,2) OUTPUT',@CPRODUCTCODEOUT=@CERRPRODUCTCODE,
							@NAPPQTYOUT=@NAPPQTY,@NRETQTYOUT=@NRETQTY OUTPUT
IF ISNULL(@CERRPRODUCTCODE,'')<>''
	SET @CRETVAL='ITEM CODE : '+@CERRPRODUCTCODE+' RETURN QUANTITY ('+LTRIM(RTRIM(STR(@NRETQTY,10,2)))+')
				   SHOULD NOT BE GREATER THAN PENDING APPROVAL QUANTITY ('+LTRIM(RTRIM(STR(@NAPPQTY,10,2)))+')
				   ..... CANNOT PROCEED'

IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	GOTO ATLAST

--VALIDATING DISCRETE ITEMS

SET @NSTEP=5
SET @CCMD=N'SELECT TOP 1 @CPRODUCTCODEOUT=D.PRODUCT_CODE FROM ['+@cTempCma+ '] A
						JOIN APD01106 D ON D.ROW_ID=A.APD_ROW_ID
						JOIN SKU B ON B.PRODUCT_CODE=D.PRODUCT_CODE
						JOIN ARTICLE C ON C.ARTICLE_CODE=B.ARTICLE_CODE
						'+@cWhereClause+' AND C.DISCON=1 AND A.QUANTITY<>ROUND(A.QUANTITY,0)'

EXEC SP_EXECUTESQL @CCMD,N'@CPRODUCTCODEOUT VARCHAR(50) OUTPUT',@CPRODUCTCODEOUT=@CERRPRODUCTCODE OUTPUT

IF ISNULL(@CERRPRODUCTCODE,'')<>''
	SET @CRETVAL='ITEM CODE : '+@CERRPRODUCTCODE+' DISCRETE ITEMS CAN NOT BE SOLD IN DECIMALS... CANNOT PROCEED'
	
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
GOTO ATLAST


SET @CRETVAL=''
ATLAST:

IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	SET @CRETVAL=ISNULL(@CRETVAL,'') +'(SP_VALIDATEXN_BEFORESAVE_APR)'
END TRY
BEGIN CATCH
	SET @CRETVAL=N'ERROR FOUND IN PROCEDURE : '+ISNULL(ERROR_PROCEDURE(),'SP_VALIDATEXN_BEFORESAVE_APR')+
					'STEP :'+LTRIM(RTRIM(STR(@NSTEP)))  +' MSG :'+ISNULL(ERROR_MESSAGE(),'NULL MSG')  
END CATCH
END
----  END OF PROCEDURE SP_VALIDATEXN_BEFORESAVE_APR