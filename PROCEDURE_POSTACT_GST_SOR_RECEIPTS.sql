create PROCEDURE POSTACT_GST_SOR_RECEIPTS
(  
 @DTTO DATETIME,  
 @CDEPTID CHAR(4)='',
 @cAcCode CHAR(10),
 @NLOOP NUMERIC(1,0)
)  
AS  
BEGIN  
  
   
   DECLARE @CSTEP VARCHAR(10),@BPOSTDISCOUNTSEPARATELY BIT,@CDISCACCODE VARCHAR(10),@BPOSTFREIGHTSEPARATELY BIT,  
   @CPETTYCASHACCODE VARCHAR(10),@BPOSTOCTROISEPARATELY BIT,@COCTROIACCODE VARCHAR(10),  @nCommissionAmt NUMERIC(10,2),@nMrpValue NUMERIC(10,2),
   @BPOSTINSURANCESEPARATELY BIT,@CINSURANCEACCODE VARCHAR(10)   ,@NCTR NUMERIC(10,0),    
   @BPOSTOTHERCHARGESSEPARATELY BIT,@COTHERCHARGESACCODE VARCHAR(10),@BPOSTROUNDOFFSEPARATELY BIT,@CROUNDOFFACCODE VARCHAR(10),  
   @NSUBTOTAL NUMERIC(14,2),@NTAXAMOUNT NUMERIC(14,2), @CPURACCODE VARCHAR(50),@CTAXACCODE VARCHAR(100),  
   @LPOSTTAXSEPARATELY NUMERIC(14,2),@cMemoId VARCHAR(50),@LOUTSTATIONPARTY BIT,@TMPDR NUMERIC(14,2),  
   @TMPCR NUMERIC(14,2),@CCURSTATECODE VARCHAR(10),@CVMID VARCHAR(40),@CLOCATIONID CHAR(2),  @nNrvWsl NUMERIC(14,2),
   @CLASTBILLNO VARCHAR(40),@DTMPVENDORBILLDT DATETIME,@CRMLIST VARCHAR(300),@NTMPCREDITDAYS NUMERIC(10),  
   @NTMPCRDISCOUNTPERCENTAGE NUMERIC(14,2),@DLASTINVDT DATETIME,@CVOUCHERCODE VARCHAR(10), @BBLANKACFOUND BIT,@cErrormsg VARCHAR(MAX), 
   @COLDBILLTYPE VARCHAR(10),@CLASTACCODE VARCHAR(10),@CLASTPARTYNAME VARCHAR(100),@NTOTQUANTITY NUMERIC(14,2),  
   @NTOTNETAMOUNT NUMERIC(14,2),@CDEPTNAME VARCHAR(100),@CVOUCHERNO VARCHAR(10),@nSpId VARCHAR(50),@nGstDiff numeric(10,2),
   @nRateDiff NUMERIC(10,2),@nClaimedGMVal NUMERIC(14,2),@cRateDiffAcCode CHAR(10)


   SET @CSTEP=10  
   set @nSpId=ltrim(rtrim(str(@@spid)))

   DECLARE @CPARTYACCODE VARCHAR(10),@CPARTYSTATECODE VARCHAR(10),@NNETAMOUNT NUMERIC(14,2),  
   @NDISCAMOUNT NUMERIC(14,2),@NFREIGHT NUMERIC(14,2), @NOTHER NUMERIC(14,2),@NROUNDOFF NUMERIC(14,2),  
   @NDRTOTAL NUMERIC(14,2),@NCRTOTAL NUMERIC(14,2),@DCUTOFFDATE DATETIME,@CXNTYPE VARCHAR(10),
   @CAC_CODE VARCHAR(20),@CVDID VARCHAR(40),@cCommissionAcCode CHAR(10)  
      
     
   SET @CSTEP=20  
   --THIS TABLE VARIABLE STORE ERROR OF OF MEMO ID  
   DECLARE @ERRORS TABLE  
   (  
	  XN_ID VARCHAR(40),XN_TYPE VARCHAR(30),XN_NO VARCHAR(40),  
	  XN_DT DATETIME,XN_AMT NUMERIC(14,2),XN_AC VARCHAR(100),  
	  ERR_DESC VARCHAR(500)  
   )     
      
    SET @CSTEP=30  
    
    DECLARE @VCHC TABLE   
 (  
  AC_CODE CHAR(10),NARRATION VARCHAR(200),XN_NO VARCHAR(50),  
  XN_DT DATETIME,DEPT_ID CHAR(4),AMOUNT NUMERIC(14,4),XN_ID VARCHAR(22),  
  REF_BILL_NO VARCHAR(50),REF_BILL_DATE DATETIME, ENTRY_ID INT IDENTITY  
  ,CRDAYS NUMERIC(5),COST_CENTER_DEPT_ID CHAR(2),on_account BIT  
 )  
   
 SET @CSTEP=40  
 DECLARE @VDC TABLE   
 (  
  VD_ID VARCHAR(50),    VM_ID VARCHAR(40),    AC_CODE CHAR(10),   
  NARRATION VARCHAR(200),   DEBIT_AMOUNT NUMERIC(14,4),  CREDIT_AMOUNT NUMERIC(14,4),  
  X_TYPE CHAR(2),     VS_AC_CODE CHAR(10),    REF_BILL_NO VARCHAR(40),   
  CREDIT_DAYS NUMERIC(10),  CR_DISCOUNT_PERCENTAGE NUMERIC(14,2),    on_account BIT,
  ENTRY_ID INT,REF_BILL_DATE DATETIME, AC_NAME VARCHAR(100),COST_CENTER_DEPT_ID CHAR(4)  
 )  
   
 SET @CSTEP=50  
 DECLARE @VMC TABLE  
 (  
  VM_ID VARCHAR(400),    VOUCHER_NO VARCHAR(400),   VOUCHER_DT DATETIME,   
  VOUCHER_CODE CHAR(10),   DEPT_ID CHAR(4),    BILL_TYPE VARCHAR(30),  
  BILL_NO VARCHAR(200),    BILL_ID VARCHAR(220),    BILL_DT DATETIME,   
  BILL_AC_CODE VARCHAR(100),  DRTOTAL NUMERIC(20,2),   CRTOTAL NUMERIC(20,2),   
  CASH_VOUCHER BIT,     SALE_VOUCHER BIT,     QUANTITY NUMERIC(20,2),   
  ANGADIA_CODE CHAR(70),    LR_NO VARCHAR(500),    LR_DT DATETIME,  
  PARTY_NAME VARCHAR(1000),  NET_AMOUNT NUMERIC(20,2),   BILL_STATUS VARCHAR(1000),  
  RM_LIST VARCHAR(3000),   CANCELLED BIT,     dept_NAME VARCHAR(100),  
  VOUCHER_TYPE VARCHAR(100)   
 )  
   
 SET @CSTEP=60  
 DECLARE @VLINK TABLE  
 (  
  VM_ID VARCHAR(100),MEMO_ID VARCHAR(100),XN_TYPE VARCHAR(20),LAST_UPDATE DATETIME  
 )  
   
 DECLARE @TBILL_BY_BILL_REF TABLE(VD_ID VARCHAR(40),REF_NO VARCHAR(100),AMOUNT NUMERIC(18,4),LAST_UPDATE DATETIME  
        ,X_TYPE VARCHAR(20),CR_DAYS NUMERIC(5),VM_ID VARCHAR(100),on_account BIT)  
   
 SELECT TOP 1 @DCUTOFFDATE=CUTOFFDATE FROM GST_ACCOUNTS_CONFIG_MST  
   
   
 SET @CSTEP=70  
 SET @CVOUCHERCODE = '0000000006'  
    BEGIN TRY  
     
   SET @CSTEP=80  
   IF OBJECT_ID('TEMPDB..#POSTS','U') IS NOT NULL  
    DROP TABLE #POSTS   
     
   SET @CSTEP=90  
   --THIS TABLE STORE ALL PENDING MEMO_ID   
   CREATE TABLE #POSTS (MEMO_ID VARCHAR(30),MODE VARCHAR(10))  
     
   SET @CSTEP=92  
   IF OBJECT_ID('#APPROVALLOCATION','U') IS NOT NULL  
    DROP TABLE #APPROVALLOCATION  
     
   --GETTING LIST OF LOCATIONS ON WHICH APPROVAL PROCESS IS ENABLED  
   SELECT DISTINCT DEPT_ID   
   INTO #APPROVALLOCATION  
   FROM LOC_XNSAPPROVAL  
   WHERE XN_TYPE='SOR_REC'  
     
   DECLARE @IMAXLEVEL INT  
     
   --GETTING THE MAX LEVEL OF APPROVAL FOR PURCHASE TRANSACTION  
   SELECT @IMAXLEVEL=MAX(LEVEL_NO) FROM XN_APPROVAL_CHECKLIST_LEVELS WHERE XN_TYPE='SOR_REC'   
   IF EXISTS(SELECT TOP 1 'U' FROM XN_APPROVAL_CHECKLIST_LEVELS  WHERE XN_TYPE='SOR_REC' AND INACTIVE=0 AND ISNULL(AC_POSTING,0)<>0)
   BEGIN
		SELECT @IMAXLEVEL=LEVEL_NO
		FROM XN_APPROVAL_CHECKLIST_LEVELS 
		WHERE XN_TYPE='SOR_REC' AND INACTIVE=0 AND ISNULL(AC_POSTING,0)<>0
   END
			  
   SET @IMAXLEVEL=ISNULL(@IMAXLEVEL,0)  
        SET @CSTEP=100  
   /*PETTYCASH EXPENSES FOR LOCATIONS WHERE APPROVAL IS ENABLED*/  
   INSERT INTO #POSTS (MEMO_ID)  
    SELECT DISTINCT A.MEMO_ID
    FROM EOSSSORM A  
    JOIN LOCATION SL ON SL.dept_ID =a.party_dept_id 
    LEFT OUTER JOIN #APPROVALLOCATION AL ON a.location_code=AL.dept_ID  
    LEFT OUTER JOIN   
    (  
	SELECT B.MEMO_ID,B.LAST_UPDATE  
	FROM POSTACT_VOUCHER_LINK B   
	JOIN VM01106 C ON C.VM_ID = B.VM_ID   
	WHERE C.CANCELLED=0 AND B.XN_TYPE = 'SOR_REC'   
    )VM  ON A.MEMO_ID = VM.MEMO_ID    
    WHERE    
    -- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES  
    /*PETTYCASH EXPENSE IS NOT CANCELLED.*/  
    ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)     
    /*PETTYCASH EXPENSE INV_DT IS LESS THAN THE SPECIFIED DATE.*/  
    AND A.MEMO_DT <= @DTTO  
    /*IF CUTOFF DATE IS SPECIFIED, CONSIDER PETTYCASH EXPENSE AFTER THE CUTOFF DATE*/  
    AND (ISNULL(@DCUTOFFDATE,'')='' OR A.MEMO_DT>@DCUTOFFDATE)  
    /*IF ACCOUNTS_a.location_Code _ID IS FILLED UP APPLY FILTER TO LOCATION.*/  
    AND (ISNULL(@CDEPTID,'')='' OR party_id=@CDEPTID)  
    /*PETTYCASH EXPENSE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/  
    AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE)   
    AND (AL.dept_ID IS NULL OR ISNULL(A.APPROVEDLEVELNO,0)=99)
       
   SET @CSTEP=150  
        

   CREATE INDEX IX_TEMP_PTCTABLE_RM_ID ON #POSTS(MEMO_ID)  
          
         --SELECT COUNT(*) FROM #POSTS  
   SET @CSTEP = 160  
   
   SELECT PM.AC_CODE AS PARTY_AC_CODE
		, PM.MEMO_NO 
        , PM.MEMO_ID  
        , PM.MEMO_DT  ,pm.period_to
        , PM.FIN_YEAR  
        , LM.AC_NAME AS PARTY_NAME  
        , pm.memo_no  AS REF_NO  ,0 gst_percentage,'' section_code,'' sub_section_code
		, '' IGST_REVENUE_AC_CODE,'' LGST_REVENUE_AC_CODE,'' IGST_TAX_AC_CODE ,'' CGST_TAX_AC_CODE,'' SGST_TAX_AC_CODE
		, 0 gst_cess_percentage,'' gst_cess_ac_code
        , PM.CANCELLED 
        , PM.VENDOR_AMOUNT TOTAL_AMOUNT 
        ,pmt.location_code AS COST_CENTER_DEPT_ID ,'SOR_REC' posting_xn_type 
   INTO #V_PROCESS  
   FROM EOSSSORM PM (NOLOCK)  
   JOIN location loc (NOLOCK) ON loc.dept_id=pm.party_dept_id
   JOIN LM01106 LM ON LM.AC_CODE=loc.dept_AC_CODE
   JOIN #POSTS PT ON PT.MEMO_ID = PM.MEMO_ID 
        		
	  CREATE INDEX IX_V_PROCESS_RM_ID ON #V_PROCESS(MEMO_ID)

   SET @CSTEP = 170  
	  SELECT TOP 1 @cCommissionAcCode=VALUE  FROM GST_ACCOUNTS_CONFIG_DET_OTHERS (NOLOCK)
	 WHERE XN_TYPE='SOR_REC' AND COLUMNNAME='COMMISSION_AC_CODE'
    
	 SELECT TOP 1 @cRateDiffAcCode=VALUE  FROM GST_ACCOUNTS_CONFIG_DET_OTHERS (NOLOCK)
	 WHERE XN_TYPE='SOR_REC' AND COLUMNNAME='RATEDIFF_AC_CODE'

	SELECT TOP 1 'SOR_REC' AS XN_TYPE,'COMMISSION_AC_CODE' AS  COLUMNNAME,'Commission A/c' AS COLUMNDESC
	INTO #V_PROCESS_OTHERS FROM #V_PROCESS A 
	UNION ALL
	SELECT TOP 1 'SOR_REC' AS XN_TYPE,'RATEDIFF_AC_CODE' AS  COLUMNNAME,'Rate Difference A/c' AS COLUMNDESC
	FROM #V_PROCESS A 

   SET @CSTEP = 180  
    EXEC SP3S_GET_POSTING_BLANKAC
	@CXNTYPE='SOR_REC',
	@NLOOP=@NLOOP,
	@CERRORMSG=@CERRORMSG OUTPUT,
	@BBLANKACFOUND=@BBLANKACFOUND OUTPUT		

	IF @BBLANKACFOUND=1 OR @CERRORMSG<>'' OR @NLOOP=0
		GOTO END_PROC

  SELECT @cMemoId='',@CXNTYPE='SOR_REC',@CAC_CODE='',@NCTR=1  
  SET @CSTEP = 185
  WHILE EXISTS(SELECT TOP 1 'U' FROM #V_PROCESS)  
  BEGIN  
	  SET @CSTEP = 190  
	  SELECT TOP 1 @cMemoId=MEMO_ID,@CAC_CODE=PARTY_AC_CODE FROM #V_PROCESS  
     
      SELECT @nNrvWsl=SUM((purchase_price*a.QUANTITY)+input_gst),@nGstDiff=sum(gst_diff),@nRateDiff=sum(rate_diff),
	  @nClaimedGMVal=SUM(claimed_base_gm_value) FROM eosssord a (NOLOCK) 
	  WHERE memo_id=@cMemoId

	  INSERT @VCHC ( AC_CODE, AMOUNT,NARRATION,XN_NO,xn_dt,XN_ID,COST_CENTER_DEPT_ID,on_account )  
	  SELECT TOP 1 PARTY_AC_CODE,-@nNrvWsl,'SOR Party account reversal agst Memo NO. : '+LTRIM(RTRIM(REF_NO))+' Dated : '+LTRIM(RTRIM(CONVERT(VARCHAR,MEMO_DT,105)))   AS NARRATION,
	  MEMO_NO,MEMO_DT,MEMO_ID,COST_CENTER_DEPT_ID,1 as on_account 
	  FROM #V_PROCESS  
	  WHERE MEMO_ID=@cMemoId 
	   	  

	  SET @CSTEP = 200  
	  INSERT @VCHC ( AC_CODE, AMOUNT,NARRATION,XN_NO,xn_dt,XN_ID,COST_CENTER_DEPT_ID)  
	  SELECT TOP 1 @cCommissionAcCode AC_CODE,@nClaimedGMVal AMOUNT,'SOR Party Commission agst Memo NO. : '+LTRIM(RTRIM(REF_NO))+' Dated : '+LTRIM(RTRIM(CONVERT(VARCHAR,MEMO_DT,105))) AS NARRATION,
	  MEMO_NO,memo_dt,MEMO_ID,COST_CENTER_DEPT_ID
	  FROM #V_PROCESS  
	  WHERE MEMO_ID=@cMemoId AND @nClaimedGMVal>0

	  SET @CSTEP = 205 
	  INSERT @VCHC ( AC_CODE, AMOUNT,NARRATION,XN_NO,xn_dt,XN_ID,COST_CENTER_DEPT_ID)  
	  SELECT TOP 1 @cRateDiffAcCode AC_CODE,(@nClaimedGMVal-@nRateDiff)*-1 AMOUNT,'SOR Party Rate Difference agst Memo NO. : '+LTRIM(RTRIM(REF_NO))+' Dated : '+LTRIM(RTRIM(CONVERT(VARCHAR,MEMO_DT,105))) AS NARRATION,
	  MEMO_NO,memo_dt,MEMO_ID,COST_CENTER_DEPT_ID
	  FROM #V_PROCESS  
	  WHERE MEMO_ID=@cMemoId AND @nRateDiff<>0

	  SET @CSTEP = 210  
	  INSERT @VCHC ( AC_CODE, AMOUNT,NARRATION,XN_NO,xn_dt,XN_ID,COST_CENTER_DEPT_ID )  
	  SELECT TOP 1 PARTY_AC_CODE,(TOTAL_AMOUNT-@nGstDiff),'SOR Party account debited agst Memo NO. : '+LTRIM(RTRIM(REF_NO))+' Dated : '+LTRIM(RTRIM(CONVERT(VARCHAR,MEMO_DT,105)))   AS NARRATION,
	  MEMO_NO,memo_dt,MEMO_ID,COST_CENTER_DEPT_ID 
	  FROM #V_PROCESS  
	  WHERE MEMO_ID=@cMemoId 

	  SET @CSTEP = 210  
	  INSERT @VCHC ( AC_CODE, AMOUNT,NARRATION,XN_NO,xn_dt,XN_ID,COST_CENTER_DEPT_ID )  
	  SELECT TOP 1 PARTY_AC_CODE,(@nGstDiff),'SOR Party Gst Difference agst Memo NO. : '+LTRIM(RTRIM(REF_NO))+' Dated : '+LTRIM(RTRIM(CONVERT(VARCHAR,MEMO_DT,105)))   AS NARRATION,
	  MEMO_NO,memo_dt,MEMO_ID,COST_CENTER_DEPT_ID 
	  FROM #V_PROCESS  
	  WHERE MEMO_ID=@cMemoId AND @nGstDiff<>0
			   	   		   	     
	   SET @CSTEP = 220  
	   SET @CVMID = ''  
	   SELECT @CVMID = A.VM_ID   
	   FROM POSTACT_VOUCHER_LINK A  
		JOIN VM01106 B ON A.VM_ID=B.VM_ID  
		 WHERE B.CANCELLED=0 AND A.MEMO_ID = @cMemoId AND A.XN_TYPE=@CXNTYPE  
	     
	   SET @CSTEP = 230  
	   IF ISNULL(@CVMID,'') = ''  
	   BEGIN  
		   SET @CVMID = 'LATERIWS-'+RTRIM(LTRIM(CONVERT(VARCHAR,@NCTR)))  
		   SET @NCTR = @NCTR+1  
	   END  
	     
	   SET @CSTEP = 240  
	   INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )  
	   SELECT @CVMID,@cMemoId,@CXNTYPE,LAST_UPDATE FROM eosssorm WHERE MEMO_ID = @cMemoId  
	     
	   SET @CSTEP = 250  
	   INSERT @VDC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE,   
			CREDIT_DAYS, CR_DISCOUNT_PERCENTAGE,AC_NAME,ENTRY_ID,COST_CENTER_DEPT_ID,on_account )  
	   SELECT @CVMID  
		, 'LATERIWS-'+CONVERT(VARCHAR,ROW_NUMBER() OVER(ORDER BY A.AC_CODE)) AS VD_ID  
		, A.AC_CODE  
		,A.NARRATION AS NARRATION  
		,(CASE WHEN SUM(AMOUNT)>0 THEN SUM(AMOUNT) ELSE 0 END) AS DEBIT_AMOUNT  
		,(CASE WHEN SUM(AMOUNT)<0 THEN ABS(SUM(AMOUNT)) ELSE 0 END) AS CREDIT_AMOUNT  
		,(CASE WHEN SUM(AMOUNT) > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE  
		,A.CRDAYS  
		,0  
		,B.AC_NAME  
		,A.ENTRY_ID,COST_CENTER_DEPT_ID,ISNULL(on_account,0) on_account   
		FROM @VCHC A  
		JOIN LM01106 B ON A.AC_CODE = B.AC_CODE  
		WHERE XN_ID = @cMemoId  
		GROUP BY A.ENTRY_ID ,A.AC_CODE,A.NARRATION,B.AC_NAME,A.CRDAYS,COST_CENTER_DEPT_ID ,ISNULL(on_account,0) 
		HAVING SUM(AMOUNT)<>0
		ORDER BY X_TYPE,ABS(SUM(AMOUNT)) DESC  
	     
		SET @CSTEP = 260  
		SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC  
		WHERE VM_ID = @CVMID  
	        	        
		--BILL BY BILL REF FOR SUPPLIER ENDTRY ONLY 
		---(WE SHOULD NOT POST THE SUPPLY NAMES AS BILL BY BILL BECAUSE OF THEIR NATURE OF ACCOUNT) 
		INSERT @TBILL_BY_BILL_REF  
		   (VD_ID,REF_NO,AMOUNT,LAST_UPDATE,X_TYPE,CR_DAYS,VM_ID,on_account)  
		   SELECT C.VD_ID  
			  ,(CASE WHEN ISNULL(a.on_account,0)=1 THEN a.DEPT_ID   
					 ELSE DBO.FN_GETBILLBYBILL_REFNO(B.AC_CODE,a.xn_NO,a.xn_DT,'DR',@CVMID) END) ref_no
			  ,ABS(SUM(A.AMOUNT)),GETDATE()  
			  ,(CASE WHEN C.DEBIT_AMOUNT<>0 THEN 'DR' ELSE 'CR' END) AS X_TYPE  
			  ,A.CRDAYS   
			  ,C.VM_ID,ISNULL(a.on_account,0) on_account
		FROM @VCHC A   
		JOIN LMP01106 B ON A.AC_CODE=B.AC_CODE  
		JOIN @VDC C ON C.ENTRY_ID =A.ENTRY_ID  
		WHERE A.XN_ID=@cMemoId AND B.BILL_BY_BILL=1  
		GROUP BY  A.CRDAYS,(CASE WHEN ISNULL(a.on_account,0)=1 THEN a.DEPT_ID  
					 ELSE DBO.FN_GETBILLBYBILL_REFNO(B.AC_CODE,a.xn_NO,a.xn_DT,'DR',@CVMID) END) 
		,C.VD_ID,C.DEBIT_AMOUNT,C.VM_ID,ISNULL(a.on_account,0)
	        

		SET @CSTEP = 270      
		SET @CVOUCHERNO = ''   
		SELECT TOP 1 @CVOUCHERNO = VOUCHER_NO FROM VM01106 WHERE VM_ID = @CVMID  
		
		IF ISNULL(@CVOUCHERNO,'') = ''  
			SET @CVOUCHERNO = @CVMID  
	           
		SET @CSTEP = 280  
		INSERT @VMC ( VM_ID, VOUCHER_DT, VOUCHER_CODE, DEPT_ID,   
		   BILL_TYPE, BILL_NO, BILL_ID, BILL_DT,   
		   PARTY_NAME, QUANTITY, NET_AMOUNT, CANCELLED,DRTOTAL,CRTOTAL )  
	     
	    SELECT TOP 1 @CVMID,PERIOD_TO voucher_dt, @CVOUCHERCODE,COST_CENTER_DEPT_ID AS DEPT_ID,  
		@CXNTYPE,MEMO_NO,MEMO_ID,MEMO_DT,'',0,0,CANCELLED,@NDRTOTAL,@NCRTOTAL  
	    FROM #V_PROCESS  
	    WHERE MEMO_ID=@cMemoId  
	     
	    DELETE @VCHC  
	    
	     
		DELETE FROM #V_PROCESS WHERE MEMO_ID = @cMemoId 
  END         
  
ENDPROC:  
      
    SET @CSTEP = 290  
	DELETE FROM ACT_VM01106_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_VD01106_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_BILL_BY_BILL_REF_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_POSTACT_VOUCHER_LINK_UPLOAD WHERE SP_ID=@NSPID
	
	SET @CSTEP = 300
	
	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
    INSERT ACT_VM01106_UPLOAD	( ANGADIA_CODE, APPROVED, APPROVEDLEVELNO, ATTACHMENT_FILE, AUDITED_DT, 
    AUDITED_USER_CODE, BILL_AC_CODE, BILL_DT, BILL_ID, BILL_NO, BILL_TYPE, CANCELLED, CASH_VOUCHER, COMPANY_CODE, 
    CRTOTAL, DEPT_ID, DRTOTAL, EDT_USER_CODE, FIN_YEAR, FREEZE, LAST_UPDATE, LR_DT, LR_NO, MEMO, MRR_LIST, OP_ENTRY,
    QUANTITY, REF_NO, REF_VM_ID, REMINDER_DAYS, SALE_VOUCHER, SENT_FOR_RECON, SENT_TO_HO, SMS_SENT, SR_NO, 
    UPLOADED_TO_ACTIVSTREAM, USER_CODE, VM_ID, VM_NO, VOUCHER_CODE, VOUCHER_DT, VOUCHER_NO, SP_ID,TEMP_VM_ID )  
    SELECT 	  ANGADIA_CODE,0 AS APPROVED,0 AS APPROVEDLEVELNO,'' AS ATTACHMENT_FILE,'' AS AUDITED_DT, 
    '' AS AUDITED_USER_CODE, BILL_AC_CODE,BILL_DT, ISNULL(BILL_ID,'') AS BILL_ID,ISNULL( BILL_NO,'') AS BILL_NO,
     BILL_TYPE,a.CANCELLED, 
    0 AS CASH_VOUCHER, '01' AS COMPANY_CODE, CRTOTAL, DEPT_ID, DRTOTAL,'' AS EDT_USER_CODE,
	('01'+dbo.FN_GETFINYEAR(voucher_dt)) FIN_YEAR, 
    0 AS FREEZE,GETDATE() AS  LAST_UPDATE,'' AS LR_DT,'' AS LR_NO,0 AS MEMO,'' AS MRR_LIST,0 AS  OP_ENTRY,
    QUANTITY, '' AS REF_NO,'' AS REF_VM_ID,0 AS  REMINDER_DAYS,1 AS SALE_VOUCHER,0 AS  SENT_FOR_RECON,0 AS SENT_TO_HO, 
    0 AS SMS_SENT,0 AS SR_NO,0 AS UPLOADED_TO_ACTIVSTREAM,'0000000' AS USER_CODE,
    VM_ID,'' AS VM_NO, VOUCHER_CODE, VOUCHER_DT,VOUCHER_NO, @NSPID AS SP_ID,'' AS TEMP_VM_ID 
    FROM @vmC A 
    
	
	SET @CSTEP = 310


	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_VD01106_UPLOAD	( AC_CODE, AUTOENTRY, CHK_RECON, COMPANY_CODE, CONTROL_AC, COST_CENTER_AC_CODE, COST_CENTER_DEPT_ID, 
	CREDIT_AMOUNT, DEBIT_AMOUNT, LAST_UPDATE, NARRATION, RECON_DT, SECONDARY_NARRATION, VAT_ENTRY, VD_ID, VM_ID, VS_AC_CODE, X_TYPE, SP_ID,TEMP_VD_ID )
	SELECT AC_CODE,0 AS AUTOENTRY,0 AS CHK_RECON,'01' AS COMPANY_CODE,0 AS CONTROL_AC,'0000000000' AS COST_CENTER_AC_CODE, 
	ISNULL(cost_center_Dept_id,@CDEPTID) AS COST_CENTER_DEPT_ID,CREDIT_AMOUNT, DEBIT_AMOUNT,GETDATE() AS LAST_UPDATE,ISNULL(NARRATION,'') AS NARRATION,'' AS RECON_DT, 
	'' AS SECONDARY_NARRATION, 0 AS VAT_ENTRY,VD_ID,A.VM_ID,ISNULL(VS_AC_CODE,'0000000000') AS VS_AC_CODE,
	X_TYPE, @NSPID AS SP_ID,'' AS TEMP_VD_ID 
	FROM @vdC A
	JOIN @vmC B ON A.VM_ID=B.VM_ID
    WHERE (DEBIT_AMOUNT<>0 OR CREDIT_AMOUNT<>0)

	
--	select 'check bbref',* from @TBILL_BY_BILL_REF

	SET @CSTEP = 320
	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_BILL_BY_BILL_REF_UPLOAD	( ADJ_REMARKS, AMOUNT, BB_ROW_ID, CR_DAYS, LAST_UPDATE, PAYMENT_ADJ_REF_NO, 
	REF_NO,  REMARKS, VD_ID, X_TYPE, SP_ID ,VM_ID,on_account)  
	SELECT '' AS ADJ_REMARKS,AMOUNT,'' AS BB_ROW_ID,a.CR_DAYS,GETDATE() AS LAST_UPDATE,'' AS PAYMENT_ADJ_REF_NO, 
	REF_NO, '' AS REMARKS,A.VD_ID,A.X_TYPE,@NSPID AS SP_ID,A.VM_ID,ISNULL(a.on_account,0) ON_ACCOUNT
	 FROM @TBILL_BY_BILL_REF A
    JOIN @vdC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID
    JOIN @vmC C ON B.VM_ID=C.VM_ID
	WHERE A.AMOUNT<>0
	
	SET @CSTEP = 330
	
	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_POSTACT_VOUCHER_LINK_UPLOAD	( LAST_UPDATE, MEMO_ID, VM_ID, XN_TYPE, SP_ID )  
	SELECT 	LAST_UPDATE, MEMO_ID, A.VM_ID, A.XN_TYPE, @NSPID AS SP_ID 
	FROM @vlink A
    JOIN @vmC B ON A.VM_ID=B.VM_ID

	SELECT @nSpId as sp_id, CONVERT(BIT,1) AS CHK,CONVERT(BIT,1) optimized,*,CONVERT(BIT,0) AS ERROR_FLAG,CONVERT(VARCHAR(500),'') AS ERROR_DESC
    FROM @VMC ORDER BY VM_ID  
    SELECT * FROM @VDC ORDER BY VM_ID  
    SELECT * FROM @ERRORS  WHERE 1=2 
    SELECT * FROM @VLINK ORDER BY VM_ID  
      
	SELECT B.AC_NAME,A.*,A.REF_NO AS BILL_NO FROM @TBILL_BY_BILL_REF A
	JOIN @VDC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID
	JOIN @VLINK C ON B.VM_ID=C.VM_ID
    
	GOTO END_PROC
 END TRY  

 BEGIN CATCH  
	  SET @CERRORMSG='Error in Procedure POSTACT_GST_SOR_RECEIPTS at Step#'+@CSTEP+' '+ERROR_MESSAGE()
	  GOTO END_PROC
 END CATCH  

END_PROC:
	IF ISNULL(@CERRORMSG,'')<>''
		SELECT @CERRORMSG AS ERRMSG             
           
END 
--END OF PROCEDURE - POSTACT_GST_SOR_RECEIPTS
