create PROCEDURE SAVETRAN_ITEMSEARCH    
(    
 @NUPDATEMODE  NUMERIC(1,0),    
 @NSPID    INT,    
 @CMEMONOPREFIX  VARCHAR(50),    
 @CFINYEAR   VARCHAR(10),     
 @CMEMOID   VARCHAR(40)='',
 @CLOCID    VARCHAR(4) =''
)    
    
AS    
BEGIN    
 -- @NUPDATEMODE: 1- NEW PUR ADDED,     
 --     2- NEW BOX ADDED TO EXISTING PUR,     
 --     3- CURRENT PUR CANCELLED,     
 --     4- EXISTING PUR EDITED    
    
 DECLARE @CTEMPDBNAME   VARCHAR(100),    
   @CDETAILTABLENAME  VARCHAR(100),       
   @CTEMPDETAILTABLENAME VARCHAR(100),    
   @CTEMPDETAILTABLE  VARCHAR(100),    
   @CERRORMSG    VARCHAR(500),    
   @LDONOTUPDATESTOCK  BIT,    
   @CKEYFIELD1    VARCHAR(50),    
   @CKEYFIELDVAL1   VARCHAR(50),    
   @CMEMONO    VARCHAR(20),    
   @NMEMONOLEN    NUMERIC(20,0),    
   @CMEMONOVAL    VARCHAR(50),    
   @CMEMODEPTID   VARCHAR(4),    
   @CLOCATIONID   VARCHAR(4),    
   @CHODEPTID    VARCHAR(4),    
   @CCMD     NVARCHAR(4000),    
   @CCMDOUTPUT    NVARCHAR(4000),    
   @NSAVETRANLOOP   BIT,    
   @NSTEP     INT,    
   @NSUBTOTAL NUMERIC(20,2),    
   @BNEGSTOCKFOUND BIT,    
   @CWSLINVOICEID VARCHAR(22),    
   @BPURTHROUGHIMPORT BIT,@CMSG VARCHAR(200),@NTAX NUMERIC(20,2)   
 
    
 BEGIN TRY    
      
  BEGIN TRANSACTION    
      
  SET @BPURTHROUGHIMPORT=0    
      
  SET @NSTEP = 10    
    
  SET @CTEMPDETAILTABLENAME = 'TEMP_ITEMSEARCH_COL_DET_'+LTRIM(RTRIM(STR(@NSPID)))     
        
       
  DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))    
    
  SET @NSTEP = 60  -- SETTTING UP ENVIRONMENT    
  -- TEMPORARY DATABASE Discarded now onwards as per Meeting on 30-10-2020 mentioned in Client issues List    
  SET @CTEMPDBNAME = ''    
    
  SET @CDETAILTABLENAME = 'ITEMSEARCH_COL_DET'    
     
     
    
   SET @CTEMPDETAILTABLE = @CTEMPDBNAME + @CTEMPDETAILTABLENAME    
      
      
  SET @CERRORMSG   = ''    
  SET @LDONOTUPDATESTOCK = 0    
  SET @CKEYFIELD1   = 'ITEMSEARCH_ID'    
  SET @CMEMONO   = 'ITEMSEARCH_ID'    
  SET @NMEMONOLEN   = 10    
      
  IF ISNULL(@CLOCID,'')=''    
   SELECT @CLOCATIONID =DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
  ELSE    
   SELECT @CLOCATIONID=@CLOCID    
       
  SELECT @CHODEPTID  = [VALUE] FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'      

     
  -- START UPDATING XN TABLES     
  IF @NUPDATEMODE = 1 -- ADDMODE     
  BEGIN     


    
   SET @NSTEP = 80  -- GENERATING NEW KEY    
            PRINT 'GENERATING NEW KEY... START'       
   IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'    
   BEGIN    
    -- GENERATING NEW MRR_NO      
    SET @NSAVETRANLOOP=0    
    WHILE @NSAVETRANLOOP=0    
    BEGIN    
     SET @NSTEP=90    
     EXEC GETNEXTKEY @CTEMPDETAILTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,    
         @CFINYEAR,0, @CMEMONOVAL OUTPUT       
         
     PRINT @CMEMONOVAL    
         
         
     SET @NSTEP=100    
     SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CTEMPDETAILTABLENAME+'     
           WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' )    
         SET @NLOOPOUTPUT=0    
        ELSE    
         SET @NLOOPOUTPUT=1'    
     PRINT @CCMD    
     EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT    
    END    
    
    IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'    
    BEGIN    
       SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'     
       -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'    
       GOTO END_PROC        
    END    
    
                PRINT 'GENERATING NEW KEY... START'       
    
    SET @NSTEP = 110  -- GENERATING NEW ID    
        
    
    -- GENERATING NEW MRR ID    
    SET @CKEYFIELDVAL1 = @CMEMONOVAL    
    IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'      
    BEGIN    
       SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'    
       -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'    
       GOTO END_PROC    
    END    
        
    SET @NSTEP = 120    
        
    -- RECHECKING IF ID IS STILL LATER    
    IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'    
    BEGIN    
     SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'    
     GOTO END_PROC    
    END        
    
    
    SET @NSTEP = 130  -- UPDATING NEW ID INTO TEMP TABLES    

    SET @NSTEP = 135  -- UPDATING NEW ID INTO TEMP TABLES    
        
        
    SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''''    
    PRINT @CCMD    
    EXEC SP_EXECUTESQL @CCMD    

   END    
    
  END     -- END OF ADDMODE    
    
  
  SET @NSTEP = 220  -- UPDATING TRANSACTION TABLE    
   
  --PRINT 'ROHIT'    
   DELETE FROM ITEMSEARCH_COL_DET ---WHERE ITEMSEARCH_ID = @CMEMOID    
     
  SET @NSTEP = 240  -- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES    
    
  EXEC UPDATEMASTERXN     
     @CSOURCEDB = @CTEMPDBNAME    
   , @CSOURCETABLE = @CTEMPDETAILTABLENAME    
   , @CDESTDB  = ''    
   , @CDESTTABLE = @CDETAILTABLENAME   
   ,@LINSERTONLY=1  
   , @CKEYFIELD1 = 'ROW_ID'    
   --, @LUPDATEXNS = 1    
     
   
    
 END TRY    
 BEGIN CATCH    
  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()    
       
  GOTO END_PROC    
 END CATCH    
     
     
END_PROC:    
     
     
     
 IF @@TRANCOUNT>0    
 BEGIN    
      
  IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')=''    
  BEGIN    
   COMMIT TRANSACTION    
  END    
  ELSE    
   ROLLBACK    
 END    
    
      
     
 IF ISNULL(@BNEGSTOCKFOUND,0)=0    
 BEGIN    
  INSERT @OUTPUT ( ERRMSG, MEMO_ID)    
    VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )    
    
  SELECT * FROM @OUTPUT     
 END     
    
     
 SET @CCMD = N'IF OBJECT_ID( ''' + @CTEMPDETAILTABLE + ''',''U'') IS NOT NULL    
                  DROP TABLE ' + @CTEMPDETAILTABLE   EXEC SP_EXECUTESQL @CCMD    
     
         
END
