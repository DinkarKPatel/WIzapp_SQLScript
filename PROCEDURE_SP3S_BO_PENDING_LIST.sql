CREATE PROCEDURE SP3S_BO_PENDING_LIST--(LocId 3 digit change by Sanjay:04-11-2024)
(
 @DASONDATE DATETIME='2018-07-30',
 @CCOLNAME VARCHAR(MAX)='',
 @CLOC VARCHAR(4)=''
)
AS
BEGIN
   DECLARE @CFINYEAR VARCHAR(10)
   SELECT @CFINYEAR=DBO.FN_GETFINYEAR(@DASONDATE)
   SELECT @CFINYEAR='01'+@CFINYEAR
   --IF @CCOLNAME=''
   --SET @CCOLNAME='AC_NAME,ORDER_NO,ORDER_DT,ARTICLE_NO,PARA1_NAME,PARA2_NAME'
   DECLARE @DTSQL NVARCHAR(MAX),@ORDER_BY VARCHAR(MAX),@WHOLESALE_PRICE VARCHAR(100),
   @WHOLESALE_PRICE_GROUP VARCHAR(100)
   SET @ORDER_BY=''
   SET @WHOLESALE_PRICE=''
       
   IF @CCOLNAME<>''  
      SET @ORDER_BY=','+@CCOLNAME
     
   IF @CCOLNAME<>''
      SET @CCOLNAME=@CCOLNAME+','
   
   IF OBJECT_ID ('TEMPDB..#TMPBUYERORDER','U') IS NOT NULL
      DROP TABLE #TMPBUYERORDER
       
   SELECT TOP 0 CASE WHEN ISNULL(A.MEMO_TYPE,1) =1 THEN 'DIRECT' ELSE 'ALLOCATE' END AS TYPE1,
   A.ORDER_NO,A.ORDER_DT ,A.AC_CODE ,A.ORDER_ID ,B.ARTICLE_CODE,B.PARA1_CODE ,B.PARA2_CODE,
   B.QUANTITY AS BO_QTY,
   ART.WHOLESALE_PRICE,
   ART.WHOLESALE_PRICE AS CAL_WHOLESALE_PRICE,
   AC_NAME ,PARA1_NAME,PARA2_NAME ,ARTICLE_NO 
   INTO #TMPBUYERORDER
   FROM BUYER_ORDER_MST A (NOLOCK)
   JOIN BUYER_ORDER_DET B (NOLOCK) ON A.ORDER_ID =B.ORDER_ID 
   JOIN ARTICLE ART ON ART.ARTICLE_CODE =B.ARTICLE_CODE
   JOIN LM01106 ON LM01106.AC_CODE=A.AC_CODE
   JOIN PARA1 ON PARA1.PARA1_CODE=B.PARA1_CODE
   JOIN PARA2 ON PARA2.PARA2_CODE=B.PARA2_CODE 
	
   IF @CLOC=''
		INSERT INTO #TMPBUYERORDER(TYPE1,ORDER_NO,ORDER_DT,AC_CODE,ORDER_ID,ARTICLE_CODE,PARA1_CODE,PARA2_CODE,BO_QTY,WHOLESALE_PRICE,CAL_WHOLESALE_PRICE,AC_NAME ,PARA1_NAME,PARA2_NAME ,ARTICLE_NO)
		SELECT CASE WHEN ISNULL(A.MEMO_TYPE,1) =1 THEN 'DIRECT' ELSE 'ALLOCATE' END AS TYPE1,
		A.ORDER_NO,A.ORDER_DT ,A.AC_CODE ,A.ORDER_ID ,B.ARTICLE_CODE,B.PARA1_CODE ,B.PARA2_CODE,
		SUM(B.QUANTITY ) AS BO_QTY,
		ART.WHOLESALE_PRICE,
		ART.WHOLESALE_PRICE AS CAL_WHOLESALE_PRICE,
		AC_NAME ,PARA1_NAME,PARA2_NAME ,ARTICLE_NO 
		FROM BUYER_ORDER_MST A (NOLOCK)
		JOIN BUYER_ORDER_DET B (NOLOCK) ON A.ORDER_ID =B.ORDER_ID 
		JOIN ARTICLE ART ON ART.ARTICLE_CODE =B.ARTICLE_CODE
		JOIN LM01106 ON LM01106.AC_CODE=A.AC_CODE
		JOIN PARA1 ON PARA1.PARA1_CODE=B.PARA1_CODE
		JOIN PARA2 ON PARA2.PARA2_CODE=B.PARA2_CODE 
		WHERE A.CANCELLED =0
		AND A.AC_CODE<>'0000000000'
		AND A.FIN_YEAR=@CFINYEAR
		AND A.ORDER_DT <=@DASONDATE
		GROUP BY CASE WHEN ISNULL(A.MEMO_TYPE,1) =1 THEN 'DIRECT' ELSE 'ALLOCATE' END ,
		A.ORDER_NO,A.ORDER_DT ,A.AC_CODE ,A.ORDER_ID ,B.ARTICLE_CODE,B.PARA1_CODE ,B.PARA2_CODE,
		ART.WHOLESALE_PRICE,AC_NAME ,PARA1_NAME,PARA2_NAME ,ARTICLE_NO 
    ELSE
		INSERT INTO #TMPBUYERORDER(TYPE1,ORDER_NO,ORDER_DT,AC_CODE,ORDER_ID,ARTICLE_CODE,PARA1_CODE,PARA2_CODE,BO_QTY,WHOLESALE_PRICE,CAL_WHOLESALE_PRICE,AC_NAME ,PARA1_NAME,PARA2_NAME ,ARTICLE_NO)
		SELECT CASE WHEN ISNULL(A.MEMO_TYPE,1) =1 THEN 'DIRECT' ELSE 'ALLOCATE' END AS TYPE1,
		A.ORDER_NO,A.ORDER_DT ,A.AC_CODE ,A.ORDER_ID ,B.ARTICLE_CODE,B.PARA1_CODE ,B.PARA2_CODE,
		SUM(B.QUANTITY ) AS BO_QTY,
		ART.WHOLESALE_PRICE,
		ART.WHOLESALE_PRICE AS CAL_WHOLESALE_PRICE,
		AC_NAME ,PARA1_NAME,PARA2_NAME ,ARTICLE_NO 
		FROM BUYER_ORDER_MST A (NOLOCK)
		JOIN BUYER_ORDER_DET B (NOLOCK) ON A.ORDER_ID =B.ORDER_ID 
		JOIN ARTICLE ART ON ART.ARTICLE_CODE =B.ARTICLE_CODE
		JOIN LM01106 ON LM01106.AC_CODE=A.AC_CODE
		JOIN PARA1 ON PARA1.PARA1_CODE=B.PARA1_CODE
		JOIN PARA2 ON PARA2.PARA2_CODE=B.PARA2_CODE 
		WHERE A.CANCELLED =0
		AND A.AC_CODE<>'0000000000'
		AND A.FIN_YEAR=@CFINYEAR
		AND A.ORDER_DT <=@DASONDATE
		AND A.DEPT_ID=@CLOC
		GROUP BY CASE WHEN ISNULL(A.MEMO_TYPE,1) =1 THEN 'DIRECT' ELSE 'ALLOCATE' END ,
		A.ORDER_NO,A.ORDER_DT ,A.AC_CODE ,A.ORDER_ID ,B.ARTICLE_CODE,B.PARA1_CODE ,B.PARA2_CODE,
		ART.WHOLESALE_PRICE,AC_NAME ,PARA1_NAME,PARA2_NAME ,ARTICLE_NO     	    
		
    --SET @DTSQL=N' ;WITH CTE AS
    --(
    -- SELECT *,SR=ROW_NUMBER () OVER (PARTITION BY TYPE1,ARTICLE_CODE '+@ORDER_BY+' ORDER  BY TYPE1,ARTICLE_CODE)
    -- FROM #TMPBUYERORDER
    --)
    --UPDATE CTE  SET WHOLESALE_PRICE=0 WHERE SR>1
    --'
    --PRINT @DTSQL
    --EXEC SP_EXECUTESQL @DTSQL
    
    
    --SET @WHOLESALE_PRICE_GROUP=''
    --IF @CCOLNAME LIKE '%ARTICLE_NO%'
    --BEGIN
    --   SET @WHOLESALE_PRICE='CAL_WHOLESALE_PRICE AS PURCHASE_PRICE,'
    --   SET @WHOLESALE_PRICE_GROUP=',CAL_WHOLESALE_PRICE '
    
    --END
    --ELSE
   -- SET @WHOLESALE_PRICE='SUM(A.WHOLESALE_PRICE) AS PURCHASE_PRICE,'
    
    
  --  SELECT * INTO TMPBUYERORDER FROM #TMPBUYERORDER
 
    IF OBJECT_ID ('TEMPDB..#TMPPO','U') IS NOT NULL
       DROP TABLE #TMPPO 
    
    SELECT WOD_ROW_ID,B.ROW_ID ,B.QUANTITY ,A.PO_NO ,a.location_Code
    INTO #TMPPO
    FROM POM01106 A (NOLOCK)
    JOIN POD01106 B (NOLOCK) ON A.PO_ID =B.PO_ID 
    WHERE ISNULL(WOD_ROW_ID ,'')<>''
    AND A.CANCELLED=0
    
    --21 FEB 2019
    IF @CLOC!='' DELETE FROM #TMPPO WHERE location_code!=@CLOC
    ALTER TABLE #TMPPO DROP COLUMN PO_NO
    --21 FEB 2019
    
    IF OBJECT_ID ('TEMPDB..#TMPPO_FINAL','U') IS NOT NULL
       DROP TABLE #TMPPO_FINAL
    
    SELECT C.ORDER_ID ,B.ARTICLE_CODE,B.PARA1_CODE ,B.PARA2_CODE,
    SUM(A.QUANTITY  ) AS PO_QTY 
    INTO #TMPPO_FINAL
    FROM #TMPPO A
    JOIN BUYER_ORDER_DET B (NOLOCK) ON A.WOD_ROW_ID =B.ROW_ID 
    JOIN BUYER_ORDER_MST C (NOLOCK) ON  B.ORDER_ID=C.ORDER_ID 
    WHERE C.CANCELLED =0
    GROUP BY C.ORDER_ID ,B.ARTICLE_CODE,B.PARA1_CODE ,B.PARA2_CODE
    
    
    
     IF OBJECT_ID ('TEMPDB..#TMPPI','U') IS NOT NULL
       DROP TABLE #TMPPI
       
       SELECT A.WOD_ROW_ID ,SUM(PI_QTY) AS  PI_QTY
       INTO #TMPPI
       FROM #TMPPO A
       JOIN
       (
        SELECT PO_ROW_ID  ,SUM(QUANTITY) AS PI_QTY
        FROM PID01106 A (NOLOCK)
        JOIN PIM01106 B (NOLOCK) ON A.MRR_ID =B.MRR_ID 
        WHERE B.CANCELLED =0
        GROUP BY PO_ROW_ID
       ) B ON A.ROW_ID =B.PO_ROW_ID
       GROUP BY A.WOD_ROW_ID
    
    
    
    
     IF OBJECT_ID ('TEMPDB..#TMPPI_FINAL','U') IS NOT NULL
       DROP TABLE #TMPPI_FINAL
       
     SELECT C.ORDER_ID ,B.ARTICLE_CODE,B.PARA1_CODE ,B.PARA2_CODE,
     SUM(A.PI_QTY   ) AS PI_QTY  
     INTO #TMPPI_FINAL
     FROM #TMPPI A
     JOIN BUYER_ORDER_DET B (NOLOCK) ON A.WOD_ROW_ID =B.ROW_ID 
     JOIN BUYER_ORDER_MST C (NOLOCK) ON  B.ORDER_ID=C.ORDER_ID 
     WHERE C.CANCELLED =0
     GROUP BY C.ORDER_ID ,B.ARTICLE_CODE,B.PARA1_CODE ,B.PARA2_CODE 
       
     IF OBJECT_ID ('TEMPDB..#TMPPICKLIST','U') IS NOT NULL
        DROP TABLE #TMPPICKLIST
    
		     
	 SELECT  BOD.ORDER_ID ,BOD.ARTICLE_CODE,BOD.PARA1_CODE ,BOD.PARA2_CODE,
	 SUM(B.QUANTITY ) AS PICK_LIST_QTY
	 INTO #TMPPICKLIST
	 FROM PLM01106 A (NOLOCK)--WSL_PICKLIST_MST
	 JOIN PLD01106 B (NOLOCK) ON A.MEMO_ID  =B.MEMO_ID --WSL_PICKLIST_DET
	 JOIN BUYER_ORDER_DET BOD (NOLOCK)  ON BOD.ROW_ID=B.ORD_ROW_ID
	 WHERE A.CANCELLED =0
	 GROUP BY BOD.ORDER_ID ,BOD.ARTICLE_CODE,BOD.PARA1_CODE ,BOD.PARA2_CODE
        
     IF OBJECT_ID ('TEMPDB..#TMPPACKSLIP','U') IS NOT NULL
        DROP TABLE #TMPPACKSLIP
    
     SELECT A.ORDER_ID ,A.ARTICLE_CODE ,A.PARA1_CODE ,A.PARA2_CODE,
				   SUM(CASE WHEN IND.PS_ID IS NULL THEN   A.WPS_QTY ELSE 0 END ) AS WPS_QTY , 
				   SUM(ISNULL(IND.WSL_QTY,0)) AS WSL_QTY
	 INTO #TMPPACKSLIP	 
	 FROM
	 (
	   SELECT A.PS_ID, BOD.ORDER_ID ,BOD.ARTICLE_CODE AS ARTICLE_CODE  ,
	   BOD.PARA1_CODE AS PARA1_CODE ,BOD.PARA2_CODE AS PARA2_CODE,
	   A.QUANTITY AS WPS_QTY ,
	   SRNO=ROW_NUMBER () OVER (PARTITION BY A.PS_ID,BOD.ARTICLE_CODE ,BOD.PARA1_CODE,BOD.PARA2_CODE ORDER BY A.PS_ID,BOD.ARTICLE_CODE ,BOD.PARA1_CODE,BOD.PARA2_CODE,A.QUANTITY  )   
				   
	   FROM WPS_DET A (NOLOCK)
			JOIN WPS_MST B (NOLOCK) ON A.PS_ID =B.PS_ID 
			JOIN PLD01106 D (NOLOCK) JOIN PLM01106 M (NOLOCK) ON M.MEMO_ID=D.MEMO_ID ON D.ROW_ID=A.PICK_LIST_ROW_ID
			JOIN BUYER_ORDER_DET BOD (NOLOCK) ON BOD.ROW_ID=D.ORD_ROW_ID
			WHERE B.CANCELLED =0
			AND ISNULL(A.PICK_LIST_ROW_ID,'')<>''
			
	  ) A
	  
	  LEFT OUTER JOIN
	  (	
		SELECT PS_ID ,SKU.ARTICLE_CODE ,SKU.PARA1_CODE ,SKU.PARA2_CODE,
		B.INV_NO,B.INV_DT ,A.INV_ID,
		A.QUANTITY AS WSL_QTY  ,
		SRNO=ROW_NUMBER () OVER (PARTITION BY A.PS_ID,SKU.ARTICLE_CODE ,SKU.PARA1_CODE,SKU.PARA2_CODE ORDER BY A.PS_ID,SKU.ARTICLE_CODE ,SKU.PARA1_CODE,SKU.PARA2_CODE,QUANTITY  )   ,
		A.NET_RATE  AS WSL_NET_RATE ,
		A.RATE   AS WSL_RATE  
		FROM IND01106 A (NOLOCK)
		JOIN INM01106 B (NOLOCK) ON A.INV_ID =B.INV_ID 
		JOIN SKU ON SKU.PRODUCT_CODE =A.PRODUCT_CODE
		WHERE B.CANCELLED =0
		AND  ISNULL(PS_ID,'')<>''
	  )IND ON IND.PS_ID =A.PS_ID 
	  AND IND .ARTICLE_CODE=A.ARTICLE_CODE
	  AND IND .PARA1_CODE=A.PARA1_CODE
	  AND IND .PARA2_CODE=A.PARA2_CODE
      AND IND.SRNO=A.SRNO
	  GROUP BY A.ORDER_ID ,A.ARTICLE_CODE  ,A.PARA1_CODE ,A.PARA2_CODE
		    
  
	 IF OBJECT_ID ('TEMPDB..#TMPWSL','U') IS NOT NULL
         DROP TABLE #TMPWSL
     SELECT TOP 0 E.ORDER_ID AS ORDER_ID,
	       E.ARTICLE_CODE AS ARTICLE_CODE,
	       E.PARA1_CODE AS PARA1_CODE,
	       E.PARA2_CODE AS PARA2_CODE,
	       SUM(A.QUANTITY) AS WSL_QTY
	 INTO #TMPWSL 
	 FROM IND01106 A (NOLOCK)
	 JOIN INM01106 B (NOLOCK) ON A.INV_ID =B.INV_ID 
	 JOIN PLM01106 B1 (NOLOCK) ON B1.MEMO_ID=A.PICK_LIST_ID
	 JOIN PLD01106 B3 (NOLOCK) ON B1.MEMO_ID=B3.MEMO_ID
	 JOIN BUYER_ORDER_DET E (NOLOCK) ON B3.ORD_ROW_ID=E.ROW_ID AND E.ARTICLE_CODE=A.PICKLIST_ARTICLE_CODE AND E.PARA1_CODE=A.PICKLIST_PARA1_CODE
	 AND E.PARA2_CODE=A.PICKLIST_PARA2_CODE
	 GROUP BY E.ORDER_ID,E.ARTICLE_CODE ,E.PARA1_CODE ,E.PARA2_CODE
     
     IF @CLOC=''	        
	    INSERT #TMPWSL(ORDER_ID,ARTICLE_CODE,PARA1_CODE,PARA2_CODE,WSL_QTY)
	    SELECT E.ORDER_ID AS ORDER_ID,
	        E.ARTICLE_CODE AS ARTICLE_CODE,
	        E.PARA1_CODE AS PARA1_CODE,
	        E.PARA2_CODE AS PARA2_CODE,
	        SUM(A.QUANTITY) AS WSL_QTY
	    FROM IND01106 A (NOLOCK)
	    JOIN INM01106 B (NOLOCK) ON A.INV_ID =B.INV_ID 
	    JOIN PLM01106 B1 (NOLOCK) ON B1.MEMO_ID=A.PICK_LIST_ID
	    JOIN PLD01106 B3 (NOLOCK) ON B1.MEMO_ID=B3.MEMO_ID
	    JOIN BUYER_ORDER_DET E (NOLOCK) ON B3.ORD_ROW_ID=E.ROW_ID AND E.ARTICLE_CODE=A.PICKLIST_ARTICLE_CODE AND E.PARA1_CODE=A.PICKLIST_PARA1_CODE
	    AND E.PARA2_CODE=A.PICKLIST_PARA2_CODE
	    WHERE B.CANCELLED =0 AND ISNULL(A.PICK_LIST_ID,'')<>''
	    GROUP BY E.ORDER_ID,E.ARTICLE_CODE ,E.PARA1_CODE ,E.PARA2_CODE
	 ELSE
	 	INSERT #TMPWSL(ORDER_ID,ARTICLE_CODE,PARA1_CODE,PARA2_CODE,WSL_QTY)
	    SELECT E.ORDER_ID AS ORDER_ID,
	        E.ARTICLE_CODE AS ARTICLE_CODE,
	        E.PARA1_CODE AS PARA1_CODE,
	        E.PARA2_CODE AS PARA2_CODE,
	        SUM(A.QUANTITY) AS WSL_QTY
	    FROM IND01106 A (NOLOCK)
	    JOIN INM01106 B (NOLOCK) ON A.INV_ID =B.INV_ID 
	    JOIN PLM01106 B1 (NOLOCK) ON B1.MEMO_ID=A.PICK_LIST_ID
	    JOIN PLD01106 B3 (NOLOCK) ON B1.MEMO_ID=B3.MEMO_ID
	    JOIN BUYER_ORDER_DET E (NOLOCK) ON B3.ORD_ROW_ID=E.ROW_ID AND E.ARTICLE_CODE=A.PICKLIST_ARTICLE_CODE AND E.PARA1_CODE=A.PICKLIST_PARA1_CODE
	    AND E.PARA2_CODE=A.PICKLIST_PARA2_CODE
	    WHERE B.CANCELLED =0 AND ISNULL(A.PICK_LIST_ID,'')<>'' AND b.location_code=@CLOC
	    GROUP BY E.ORDER_ID,E.ARTICLE_CODE ,E.PARA1_CODE ,E.PARA2_CODE 
	  --UNION
	  --SELECT DISTINCT BOD.ORDER_ID AS ORDER_ID,
	  --     BOD.ARTICLE_CODE AS ARTICLE_CODE,
	  --     BOD.PARA1_CODE AS PARA1_CODE,
	  --     BOD.PARA2_CODE AS PARA2_CODE,
	  --     A.QUANTITY AS WSL_QTY
	  --FROM IND01106 A (NOLOCK)
	  --JOIN INM01106 B (NOLOCK) ON A.INV_ID =B.INV_ID 
	  --JOIN WPS_DET W (NOLOCK) ON W.PS_ID=A.PS_ID
	  --JOIN PLD01106 D (NOLOCK) JOIN PLM01106 M (NOLOCK) ON M.MEMO_ID=D.MEMO_ID ON D.ROW_ID=W.PICK_LIST_ROW_ID
	  --JOIN BUYER_ORDER_DET BOD (NOLOCK) ON BOD.ROW_ID=D.ORD_ROW_ID
	  --WHERE B.CANCELLED =0 AND M.CANCELLED=0
	  --AND ISNULL(W.PICK_LIST_ROW_ID,'')<>''
	  ----GROUP BY BOD.ORDER_ID,BOD.ARTICLE_CODE,BOD.PARA1_CODE ,BOD.PARA2_CODE
	  
	    --SELECT *  INTO TMPBUYERORDER FROM #TMPBUYERORDER
	    
	    --SELECT *  INTO TMPPICKLIST FROM #TMPPICKLIST
	    
	    SET @DTSQL=' SELECT TYPE1,'+@CCOLNAME+' SUM(BO_QTY) AS BO_QTY,
	    SUM(ISNULL(PO_QTY,0)) AS PO_QTY,
	    SUM(CASE WHEN TYPE1=''ALLOCATE'' THEN BO_QTY-ISNULL(PO_QTY,0) ELSE 0 END) AS PENDING_PO_QTY,
	    SUM(ISNULL(PI_QTY,0)) AS GRN_QTY,
	    CONVERT(NUMERIC(10,2),SUM(ISNULL(PO_QTY,0))-SUM(ISNULL(PI_QTY,0))) AS PENDING_GRN_QTY,
	    SUM(ISNULL(PICK_LIST_QTY,0)) AS PICKLIST_QTY,
	    CONVERT(NUMERIC(10,2),SUM(ISNULL(PI_QTY,ISNULL(PICK_LIST_QTY,0)))-SUM(ISNULL(PICK_LIST_QTY,0))) AS PENDING_PICKLIST_QTY,
	    SUM(ISNULL(WPS_QTY,0))  AS WPS_QTY,
	    CONVERT(NUMERIC(10,2),SUM(ISNULL(E.WSL_QTY,0))+SUM(ISNULL(F.WSL_QTY,0))) AS WSL_QTY,
	    CONVERT(NUMERIC(10,2),SUM(BO_QTY)-(SUM(ISNULL(E.WSL_QTY,0))+SUM(ISNULL(F.WSL_QTY,0)))) AS TOTAL_PENDING,
	    SUM(CONVERT(NUMERIC(18,2),CAL_WHOLESALE_PRICE*BO_QTY)) AS OTB_VALUE
	    FROM #TMPBUYERORDER A
	    LEFT JOIN #TMPPO_FINAL B ON A.ORDER_ID=B.ORDER_ID AND A.ARTICLE_CODE=B.ARTICLE_CODE AND A.PARA1_CODE=B.PARA1_CODE AND A.PARA2_CODE=B.PARA2_CODE 
	    LEFT JOIN #TMPPI_FINAL C ON A.ORDER_ID=C.ORDER_ID AND A.ARTICLE_CODE=C.ARTICLE_CODE AND A.PARA1_CODE=C.PARA1_CODE AND A.PARA2_CODE=C.PARA2_CODE 
	    LEFT JOIN #TMPPICKLIST D ON A.ORDER_ID=D.ORDER_ID AND A.ARTICLE_CODE=D.ARTICLE_CODE AND A.PARA1_CODE=D.PARA1_CODE AND A.PARA2_CODE=D.PARA2_CODE 
	    LEFT JOIN #TMPPACKSLIP E ON A.ORDER_ID=E.ORDER_ID AND A.ARTICLE_CODE=E.ARTICLE_CODE AND A.PARA1_CODE=E.PARA1_CODE AND A.PARA2_CODE=E.PARA2_CODE 
	    LEFT JOIN #TMPWSL F ON A.ORDER_ID=F.ORDER_ID AND A.ARTICLE_CODE=F.ARTICLE_CODE AND A.PARA1_CODE=F.PARA1_CODE AND A.PARA2_CODE=F.PARA2_CODE 
	    GROUP BY TYPE1'+@ORDER_BY+' '
	    +' ORDER BY TYPE1'+@ORDER_BY+' '
	    PRINT @DTSQL
	    EXEC SP_EXECUTESQL @DTSQL
END

--CREATE PROCEDURE SP3S_BO_PENDING_LIST
--(
-- @DASONDATE DATETIME='2018-07-30',
-- @CCOLNAME VARCHAR(MAX)=''
--)
--AS
--BEGIN

--       DECLARE @CFINYEAR VARCHAR(100)
--       SELECT @CFINYEAR=DBO.FN_GETFINYEAR(@DASONDATE)
--       SET @CFINYEAR='01'+@CFINYEAR
    
--     --IF @CCOLNAME=''
--     --SET @CCOLNAME='AC_NAME,ORDER_NO,ORDER_DT,ARTICLE_NO,PARA1_NAME,PARA2_NAME'
--       DECLARE @DTSQL NVARCHAR(MAX),@ORDER_BY VARCHAR(MAX),@WHOLESALE_PRICE VARCHAR(100),
--       @WHOLESALE_PRICE_GROUP VARCHAR(100)
--       SET @ORDER_BY=''
--       SET @WHOLESALE_PRICE=''
       
--     IF @CCOLNAME<>''  
--     SET @ORDER_BY=','+@CCOLNAME
     
--     IF @CCOLNAME<>''
--     SET @CCOLNAME=@CCOLNAME+','
     
   
--    IF OBJECT_ID ('TEMPDB..#TMPBUYERORDER','U') IS NOT NULL
--       DROP TABLE #TMPBUYERORDER
       
--    SELECT CASE WHEN ISNULL(A.MEMO_TYPE,1) =1 THEN 'DIRECT' ELSE 'ALLOCATE' END AS TYPE1,
--    A.ORDER_NO,A.ORDER_DT ,A.AC_CODE ,A.ORDER_ID ,B.ARTICLE_CODE,B.PARA1_CODE ,B.PARA2_CODE,
--    SUM(B.QUANTITY ) AS BO_QTY,
--    ART.WHOLESALE_PRICE,
--    ART.WHOLESALE_PRICE AS CAL_WHOLESALE_PRICE,
--    AC_NAME ,PARA1_NAME,PARA2_NAME ,ARTICLE_NO 
--    INTO #TMPBUYERORDER
--    FROM BUYER_ORDER_MST A (NOLOCK)
--    JOIN BUYER_ORDER_DET B (NOLOCK) ON A.ORDER_ID =B.ORDER_ID 
--    JOIN ARTICLE ART ON ART.ARTICLE_CODE =B.ARTICLE_CODE
--    JOIN LM01106 ON LM01106.AC_CODE=A.AC_CODE
--	JOIN PARA1 ON PARA1.PARA1_CODE=B.PARA1_CODE
--	JOIN PARA2 ON PARA2.PARA2_CODE=B.PARA2_CODE 
--    WHERE A.CANCELLED =0 AND A.FIN_YEAR=@CFINYEAR
--    AND A.ORDER_DT <=@DASONDATE
--    GROUP BY CASE WHEN ISNULL(A.MEMO_TYPE,1) =1 THEN 'DIRECT' ELSE 'ALLOCATE' END ,
--    A.ORDER_NO,A.ORDER_DT ,A.AC_CODE ,A.ORDER_ID ,B.ARTICLE_CODE,B.PARA1_CODE ,B.PARA2_CODE,
--    ART.WHOLESALE_PRICE,AC_NAME ,PARA1_NAME,PARA2_NAME ,ARTICLE_NO 
    
--    --SET @DTSQL=N' ;WITH CTE AS
--    --(
--    -- SELECT *,SR=ROW_NUMBER () OVER (PARTITION BY TYPE1,ARTICLE_CODE '+@ORDER_BY+' ORDER  BY TYPE1,ARTICLE_CODE)
--    -- FROM #TMPBUYERORDER
--    --)
--    --UPDATE CTE  SET WHOLESALE_PRICE=0 WHERE SR>1
--    --'
--    --PRINT @DTSQL
--    --EXEC SP_EXECUTESQL @DTSQL
    
    
--    --SET @WHOLESALE_PRICE_GROUP=''
--    --IF @CCOLNAME LIKE '%ARTICLE_NO%'
--    --BEGIN
--    --   SET @WHOLESALE_PRICE='CAL_WHOLESALE_PRICE AS PURCHASE_PRICE,'
--    --   SET @WHOLESALE_PRICE_GROUP=',CAL_WHOLESALE_PRICE '
    
--    --END
--    --ELSE
--   -- SET @WHOLESALE_PRICE='SUM(A.WHOLESALE_PRICE) AS PURCHASE_PRICE,'
    
    
--  --  SELECT * INTO TMPBUYERORDER FROM #TMPBUYERORDER
 
--    IF OBJECT_ID ('TEMPDB..#TMPPO','U') IS NOT NULL
--       DROP TABLE #TMPPO 
    
--    SELECT WOD_ROW_ID,B.ROW_ID ,B.QUANTITY  
--    INTO #TMPPO
--    FROM POM01106 A (NOLOCK)
--    JOIN POD01106 B (NOLOCK) ON A.PO_ID =B.PO_ID 
--    WHERE ISNULL(WOD_ROW_ID ,'')<>''
--    AND A.CANCELLED=0
    
    
--    IF OBJECT_ID ('TEMPDB..#TMPPO_FINAL','U') IS NOT NULL
--       DROP TABLE #TMPPO_FINAL
    
--    SELECT C.ORDER_ID ,B.ARTICLE_CODE,B.PARA1_CODE ,B.PARA2_CODE,
--    SUM(A.QUANTITY  ) AS PO_QTY 
--    INTO #TMPPO_FINAL
--    FROM #TMPPO A
--    JOIN BUYER_ORDER_DET B (NOLOCK) ON A.WOD_ROW_ID =B.ROW_ID 
--    JOIN BUYER_ORDER_MST C (NOLOCK) ON  B.ORDER_ID=C.ORDER_ID 
--    WHERE C.CANCELLED =0
--    GROUP BY C.ORDER_ID ,B.ARTICLE_CODE,B.PARA1_CODE ,B.PARA2_CODE
    
    
    
--     IF OBJECT_ID ('TEMPDB..#TMPPI','U') IS NOT NULL
--       DROP TABLE #TMPPI
       
--       SELECT A.WOD_ROW_ID ,SUM(PI_QTY) AS  PI_QTY
--       INTO #TMPPI
--       FROM #TMPPO A
--       JOIN
--       (
--        SELECT PO_ROW_ID  ,SUM(QUANTITY) AS PI_QTY
--        FROM PID01106 A (NOLOCK)
--        JOIN PIM01106 B (NOLOCK) ON A.MRR_ID =B.MRR_ID 
--        WHERE B.CANCELLED =0
--        GROUP BY PO_ROW_ID
--       ) B ON A.ROW_ID =B.PO_ROW_ID
--       GROUP BY A.WOD_ROW_ID
    
    
    
    
--     IF OBJECT_ID ('TEMPDB..#TMPPI_FINAL','U') IS NOT NULL
--       DROP TABLE #TMPPI_FINAL
       
--       SELECT C.ORDER_ID ,B.ARTICLE_CODE,B.PARA1_CODE ,B.PARA2_CODE,
--       SUM(A.PI_QTY   ) AS PI_QTY  
--       INTO #TMPPI_FINAL
--       FROM #TMPPI A
--       JOIN BUYER_ORDER_DET B (NOLOCK) ON A.WOD_ROW_ID =B.ROW_ID 
--       JOIN BUYER_ORDER_MST C (NOLOCK) ON  B.ORDER_ID=C.ORDER_ID 
--       WHERE C.CANCELLED =0
--       GROUP BY C.ORDER_ID ,B.ARTICLE_CODE,B.PARA1_CODE ,B.PARA2_CODE 
       
--      IF OBJECT_ID ('TEMPDB..#TMPPICKLIST','U') IS NOT NULL
--       DROP TABLE #TMPPICKLIST
    
		     
--		SELECT  B.ORDER_ID ,B.ARTICLE_CODE,B.PARA1_CODE ,B.PARA2_CODE,
--		SUM(B.QUANTITY ) AS PICK_LIST_QTY
--		INTO #TMPPICKLIST
--		FROM PLM01106 PM (NOLOCK)
--		JOIN PLD01106 PD (NOLOCK) ON PM.MEMO_ID  =PD.MEMO_ID 
--		JOIN BUYER_ORDER_DET B (NOLOCK) ON PD.ORD_ROW_ID =B.ROW_ID 
--        JOIN BUYER_ORDER_MST C (NOLOCK) ON  B.ORDER_ID=C.ORDER_ID 
--		WHERE C.CANCELLED =0 AND PM.CANCELLED =0
--		GROUP BY B.ORDER_ID ,B.ARTICLE_CODE,B.PARA1_CODE ,B.PARA2_CODE
         
            
--         IF OBJECT_ID ('TEMPDB..#TMPPACKSLIP','U') IS NOT NULL
--         DROP TABLE #TMPPACKSLIP
    
--           SELECT A.ORDER_ID ,A.ARTICLE_CODE  ,
--				   A.PARA1_CODE ,A.PARA2_CODE,
--				   SUM(CASE WHEN IND.PS_ID IS NULL THEN   A.WPS_QTY ELSE 0 END ) AS WPS_QTY , 
--				   SUM(ISNULL(IND.WSL_QTY,0)) AS WSL_QTY
--		   INTO #TMPPACKSLIP	 
--			FROM
--		  (
--			SELECT A.PS_ID, A.ORDER_ID ,A.PACKSLIP_ARTICLE_CODE AS ARTICLE_CODE  ,
--				   A.PACKSLIP_PARA1_CODE AS PARA1_CODE ,A.PACKSLIP_PARA2_CODE AS PARA2_CODE,
--				   A.QUANTITY AS WPS_QTY ,
--				   SRNO=ROW_NUMBER () OVER (PARTITION BY A.PS_ID,A.PACKSLIP_ARTICLE_CODE ,A.PACKSLIP_PARA1_CODE,A.PACKSLIP_PARA2_CODE ORDER BY A.PS_ID,A.PACKSLIP_ARTICLE_CODE ,A.PACKSLIP_PARA1_CODE,A.PACKSLIP_PARA2_CODE,QUANTITY  )   
				   
--			FROM WPS_DET A (NOLOCK)
--			JOIN WPS_MST B (NOLOCK) ON A.PS_ID =B.PS_ID 
--			WHERE B.CANCELLED =0
--			AND ISNULL(A.ORDER_ID,'')<>''
			
--			) A
--			LEFT OUTER JOIN
--			(	
--			SELECT PS_ID ,SKU.ARTICLE_CODE ,SKU.PARA1_CODE ,SKU.PARA2_CODE,
--			B.INV_NO,B.INV_DT ,A.INV_ID,
--			A.QUANTITY AS WSL_QTY  ,
--			SRNO=ROW_NUMBER () OVER (PARTITION BY A.PS_ID,SKU.ARTICLE_CODE ,SKU.PARA1_CODE,SKU.PARA2_CODE ORDER BY A.PS_ID,SKU.ARTICLE_CODE ,SKU.PARA1_CODE,SKU.PARA2_CODE,QUANTITY  )   ,
--			A.NET_RATE  AS WSL_NET_RATE ,
--			A.RATE   AS WSL_RATE  
--			FROM IND01106 A (NOLOCK)
--			JOIN INM01106 B (NOLOCK) ON A.INV_ID =B.INV_ID 
--			JOIN SKU ON SKU.PRODUCT_CODE =A.PRODUCT_CODE
--			WHERE B.CANCELLED =0
--			AND  ISNULL(PS_ID,'''')<>''''
--			)IND ON IND.PS_ID =A.PS_ID 
--			AND IND .ARTICLE_CODE=A.ARTICLE_CODE
--			AND IND .PARA1_CODE=A.PARA1_CODE
--			AND IND .PARA2_CODE=A.PARA2_CODE
--			AND IND.SRNO=A.SRNO
--			GROUP BY A.ORDER_ID ,A.ARTICLE_CODE  ,
--		    A.PARA1_CODE ,A.PARA2_CODE
		    
  
	
--	 IF OBJECT_ID ('TEMPDB..#TMPWSL','U') IS NOT NULL
--         DROP TABLE #TMPWSL
           
--	  SELECT A.ORDER_ID AS ORDER_ID,
--	       A.PICKLIST_ARTICLE_CODE AS ARTICLE_CODE,
--	       A.PICKLIST_PARA1_CODE AS PARA1_CODE,
--	       A.PICKLIST_PARA2_CODE AS PARA2_CODE,
--	       SUM(QUANTITY) AS WSL_QTY
--	  INTO #TMPWSL
--	  FROM IND01106 A (NOLOCK)
--	  JOIN INM01106 B (NOLOCK) ON A.INV_ID =B.INV_ID 
--	  WHERE B.CANCELLED =0
--	  AND  ISNULL(PS_ID,'')='' AND ISNULL(A.ORDER_ID,'')<>''
--	  GROUP BY A.ORDER_ID,A.PICKLIST_ARTICLE_CODE ,A.PICKLIST_PARA1_CODE ,A.PICKLIST_PARA2_CODE
	    
	    
	    
--	    SET @DTSQL=' SELECT TYPE1,'+@CCOLNAME+' SUM(BO_QTY) AS BO_QTY,
--	    SUM(ISNULL(PO_QTY,0)) AS PO_QTY,
--	    SUM(CASE WHEN TYPE1=''ALLOCATE'' THEN BO_QTY-ISNULL(PO_QTY,0) ELSE 0 END) AS PENDING_PO_QTY,
--	    SUM(ISNULL(PI_QTY,0)) AS GRN_QTY,
--	    CONVERT(NUMERIC(10,2),SUM(ISNULL(PO_QTY,0))-SUM(ISNULL(PI_QTY,0))) AS PENDING_GRN_QTY,
--	    SUM(ISNULL(PICK_LIST_QTY,0)) AS PICKLIST_QTY,
--	    CONVERT(NUMERIC(10,2),SUM(ISNULL(PI_QTY,0))-SUM(ISNULL(PICK_LIST_QTY,0))) AS PENDING_PICKLIST_QTY,
--	    SUM(ISNULL(WPS_QTY,0))  AS WPS_QTY,
--	    CONVERT(NUMERIC(10,2),SUM(ISNULL(E.WSL_QTY,0))+SUM(ISNULL(F.WSL_QTY,0))) AS WSL_QTY,
--	    CONVERT(NUMERIC(10,2),SUM(BO_QTY)-(SUM(ISNULL(E.WSL_QTY,0))+SUM(ISNULL(F.WSL_QTY,0)))) AS TOTAL_PENDING,
--	    SUM(CONVERT(NUMERIC(18,2),CAL_WHOLESALE_PRICE*BO_QTY)) AS OTB_VALUE
--	    FROM #TMPBUYERORDER A
--	    LEFT JOIN #TMPPO_FINAL B ON A.ORDER_ID=B.ORDER_ID AND A.ARTICLE_CODE=B.ARTICLE_CODE AND A.PARA1_CODE=B.PARA1_CODE AND A.PARA2_CODE=B.PARA2_CODE 
--	    LEFT JOIN #TMPPI_FINAL C ON A.ORDER_ID=C.ORDER_ID AND A.ARTICLE_CODE=C.ARTICLE_CODE AND A.PARA1_CODE=C.PARA1_CODE AND A.PARA2_CODE=C.PARA2_CODE 
--	    LEFT JOIN #TMPPICKLIST D ON A.ORDER_ID=D.ORDER_ID AND A.ARTICLE_CODE=D.ARTICLE_CODE AND A.PARA1_CODE=D.PARA1_CODE AND A.PARA2_CODE=D.PARA2_CODE 
--	    LEFT JOIN #TMPPACKSLIP E ON A.ORDER_ID=E.ORDER_ID AND A.ARTICLE_CODE=E.ARTICLE_CODE AND A.PARA1_CODE=E.PARA1_CODE AND A.PARA2_CODE=E.PARA2_CODE 
--	    LEFT JOIN #TMPWSL F ON A.ORDER_ID=F.ORDER_ID AND A.ARTICLE_CODE=F.ARTICLE_CODE AND A.PARA1_CODE=F.PARA1_CODE AND A.PARA2_CODE=F.PARA2_CODE 
--	    GROUP BY TYPE1'+@ORDER_BY+' '
--	    +' ORDER BY TYPE1'+@ORDER_BY+' '
--	    PRINT @DTSQL
--	    EXEC SP_EXECUTESQL @DTSQL
   
  

--END
