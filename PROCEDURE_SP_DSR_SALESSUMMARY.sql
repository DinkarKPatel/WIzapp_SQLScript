create PROCEDURE SP_DSR_SALESSUMMARY  
(    --PARAMETERS  
	 @DFROMDT DATETIME,    --3. REPORT FROM DT  
	 @DTODT  DATETIME,    --4. REPORT TO DT  
	 @CDEPTID CHAR(4),    --5. DEPT ID (IF BLANK THIS PARAMETER THEN RUN THIS REPORT FOR ALL LOCATION  
	 @BESTIMATEENABLED BIT,
	 @CUSERCODE	VARCHAR(15),
	 @CBINID	VARCHAR(10),
	 @NSUMMARYTYPE INT=1,
	 @CLOGIN_USERCODE VARCHAR(12) = '',
     @NMODE NUMERIC(1,0) = 0  ,
	 @NCLUBBED INT=1
)  
--WITH ENCRYPTION
AS  
BEGIN   
--(dinkar) Replace  left(memoid,2) to Location_code 

	   DECLARE @CMAJORDEPTID VARCHAR(5),@BDSM BIT,@CERRMSGOUT VARCHAR(500)
	   
	   DECLARE @USERALIAS VARCHAR(10), @MINCMNO VARCHAR(15), @MAXCMNO VARCHAR(15), @MINMAXSTR VARCHAR(3000),  
		@NCASH NUMERIC(15,2), @NCC NUMERIC(15,2), @NCHEQUE NUMERIC(15,2), @NCNADJ NUMERIC(15,2),   
		@NCRISS NUMERIC(15,2), @NCNISS NUMERIC(15,2), @NCRFISS NUMERIC(15,2), @NADVADJ NUMERIC(15,2),   
		@NATD NUMERIC(15,2), @NDISCAMT NUMERIC(15,2), @NGVADJ NUMERIC(15,2),   
		@NBANKCH NUMERIC(12,2), @NMISC NUMERIC(12,2) , @NRNDOFF NUMERIC(12,2),@NSCHEMEDISCAMT NUMERIC(10,2),
		@NCASH1 NUMERIC(15,2),@NCC1 NUMERIC(15,2),@NCRISS1 NUMERIC(15,2), 
		@NCNISS1 NUMERIC(15,2),@NCRFISS1 NUMERIC(15,2),@NCNADJ1  NUMERIC(15,2),@NGVADJ1 NUMERIC(15,2),
		@NADVADJ1 NUMERIC(15,2),@NATD1 NUMERIC(15,2),@NBANKCH1 NUMERIC(12,2), @NMISC1 NUMERIC(12,2) ,
		@NRNDOFF1 NUMERIC(12,2),@WSLCREDITISSUES NUMERIC(18,2),
		@NWALLET NUMERIC(12,2) ,@NWALLET1 NUMERIC(12,2) ,@clubbedUser varchar(100),@WIZCLIPGVS_GIFTVOUCHER NUMERIC(14,2)

		if @NCLUBBED=1
		  set @clubbedUser=''

	   /*
			CALL THIS PROCEDURE TO CHECK IF SOME BILLS ARE PENDING FOR CASHER. EITHER FROM CASH MEMO TO CASHIER OR
			PACKSLIP TO CASHMEMO.	   
	   */
	   EXEC SP3S_CHECK_PENDING_BILLS 
		 @DFROM_DT=@DFROMDT
		,@DTO_DT=@DTODT
		,@CDEPT_ID=@CDEPTID
		,@BESTIMATEENABLED=@BESTIMATEENABLED
		,@CUSERCODE=@CUSERCODE
		,@CBINID=@CBINID
		,@CERRMSGOUT=@CERRMSGOUT OUTPUT

		
		 IF OBJECT_ID('TEMPDB..#TMPUSERS','U') IS NOT NULL
			DROP TABLE #TMPUSERS
		  SELECT DISTINCT XNS_USER_CODE INTO #TMPUSERS FROM USER_XNS_FILTER (NOLOCK) WHERE 1=2

  
	    	-- AS PER DISCUSS WITH PANKAJ SIR 
		 DECLARE @BALLOW_ACCESS_RETAIL_SALE_ALL_USERS VARCHAR(10)
		SELECT @BALLOW_ACCESS_RETAIL_SALE_ALL_USERS=ALLOW_ACCESS_RETAIL_SALE_ALL_USERS FROM USERS WHERE USER_CODE =@CLOGIN_USERCODE 

		
		  IF @CUSERCODE<>''
		  BEGIN
			    INSERT INTO #TMPUSERS
				SELECT @CUSERCODE
		  END
		  ELSE 
		  BEGIN

		       IF   ISNULL(@BALLOW_ACCESS_RETAIL_SALE_ALL_USERS,0)=1
			        SET @CUSERCODE=''
			   ELSE 
			   BEGIN

			      INSERT INTO #TMPUSERS
				  SELECT DISTINCT XNS_USER_CODE FROM USER_XNS_FILTER (NOLOCK) WHERE USER_CODE= @CLOGIN_USERCODE 
				  UNION 
				  SELECT @CLOGIN_USERCODE AS XNS_USER_CODE

				  SET @CUSERCODE=@CLOGIN_USERCODE

			   END


		  END
	
	   SET @MINMAXSTR = ''  
	  
	   DECLARE @SSRC TABLE (PRTORD NUMERIC(2,1),GstPercentage numeric(5,2), Particular VARCHAR(100), GNS NUMERIC(15, 2),   
			GST NUMERIC(15, 2), GTS NUMERIC(15, 2), RNS NUMERIC(15, 2),   
			RST NUMERIC(15, 2), RTS NUMERIC(15, 2), NNS NUMERIC(15, 2),   
			NST NUMERIC(15, 2), NTS NUMERIC(15, 2), TQTY NUMERIC(15, 2),Gst_Cess_Amount NUMERIC(15, 2),UserName varchar(100)  )  
	  
	   DECLARE @SSRMODEC TABLE (PRTORD NUMERIC(2, 0),  DETAILS VARCHAR(100), AMOUNT NUMERIC(15, 2),  
			   ROUND_OFF NUMERIC(6,2), SUBDETAILS BIT, TOTAMOUNT NUMERIC(15,2),  
			   MINMAX VARCHAR(4000))  
			   
	   DECLARE @SSRMODECWSL TABLE (PRTORD NUMERIC(2, 0),  DETAILS VARCHAR(100), AMOUNT NUMERIC(15, 2),  
			   ROUND_OFF NUMERIC(6,2), SUBDETAILS BIT, TOTAMOUNT NUMERIC(15,2),  
			   MINMAX VARCHAR(4000))		     
			   
       DECLARE @SSRWSL TABLE (PRTORD NUMERIC(2, 1),TYPE VARCHAR(100),GstPercentage numeric(5,2),  Particular VARCHAR(100), GNS NUMERIC(15, 2),   
			GST NUMERIC(15, 2), GTS NUMERIC(15, 2), RNS NUMERIC(15, 2),   
			RST NUMERIC(15, 2), RTS NUMERIC(15, 2), NNS NUMERIC(15, 2),   
			NST NUMERIC(15, 2), NTS NUMERIC(15, 2), TQTY NUMERIC(15, 2),UserName varchar(100) )      
			
	 
	   DECLARE @WSLRETURN1 TABLE (PRTORD NUMERIC(2, 0),TYPE VARCHAR(100),GstPercentage numeric(5,2), Particular VARCHAR(20),GNS NUMERIC(18,2),GST NUMERIC(18,2),GTS NUMERIC(18,2),RNS NUMERIC(18,2),RST NUMERIC(18,2),
	          RTS NUMERIC(18,2),NNS NUMERIC(18,2),NST NUMERIC(18,2),NTS NUMERIC(18,2), TQTY NUMERIC(15, 2),UserName varchar(100) )		   

	  INSERT INTO @SSRC (PRTORD, Particular,GstPercentage , GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY,Gst_Cess_Amount,UserName   )  

		SELECT 1 AS PRTORD,'Retail Sale' as Particular, a.gst_percentage AS DETAILS,
	  --TAX_STATUS AS DETAILS,    
		   SUM(  CASE WHEN QUANTITY>0 THEN XN_VALUE_WITHOUT_GST  ELSE 0 END ) AS GNS,    
		   SUM( CASE WHEN QUANTITY>0 THEN IGST_AMOUNT+SGST_AMOUNT+CGST_AMOUNT+ISNULL(A.TAX_ROUND_OFF,0) ELSE 0 END) AS GST,    
		   SUM( CASE WHEN QUANTITY>0 THEN XN_VALUE_WITHOUT_GST+IGST_AMOUNT+SGST_AMOUNT+CGST_AMOUNT+ISNULL(A.TAX_ROUND_OFF,0) ELSE 0 END) AS GTS, 
	      
		   SUM(  CASE WHEN QUANTITY< 0 THEN ABS(XN_VALUE_WITHOUT_GST)  ELSE 0 END ) AS GNS,    
		   SUM( CASE WHEN QUANTITY<0 THEN ABS(IGST_AMOUNT+SGST_AMOUNT+CGST_AMOUNT+ISNULL(A.TAX_ROUND_OFF,0)) ELSE 0 END) AS GST,    
		   SUM( CASE WHEN QUANTITY< 0 THEN ABS(XN_VALUE_WITHOUT_GST+IGST_AMOUNT+SGST_AMOUNT+CGST_AMOUNT+ISNULL(A.TAX_ROUND_OFF,0)) ELSE 0 END) AS GTS, 
	    
		   SUM(XN_VALUE_WITHOUT_GST)AS NNS,    
		   SUM( IGST_AMOUNT+SGST_AMOUNT+CGST_AMOUNT +ISNULL(A.TAX_ROUND_OFF,0) ) AS NST,    
		   SUM( XN_VALUE_WITHOUT_GST+IGST_AMOUNT+SGST_AMOUNT+CGST_AMOUNT+ISNULL(A.TAX_ROUND_OFF,0)  ) AS NTS,    
		   SUM(A.QUANTITY) AS TQTY,
		   sum(ISNULL(a.GST_CESS_AMOUNT,0)) AS GST_CESS_AMOUNT,
		   ISNULL(@CLUBBEDUSER,USERS.USERNAME) USERNAME
	  FROM CMD01106 A    
	  JOIN CMM01106 B ON A.CM_ID = B.CM_ID    
	  JOIN LOCATION C ON b.location_Code  = C.DEPT_ID 
	  JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	  
	  join users (nolock) on users.user_code =b.USER_CODE 
	  WHERE B.CANCELLED = 0  --AND B.CM_MODE = 1  
	  AND B.CM_DT BETWEEN @DFROMDT AND @DTODT   
	  AND b.location_Code  = (CASE WHEN @CDEPTID = '' THEN b.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  GROUP BY A.GST_PERCENTAGE , ISNULL(@CLUBBEDUSER,USERS.USERNAME)

     print '#10 Cess Amount'

	      INSERT INTO @SSRC (PRTORD, Particular,GstPercentage , GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY,username ) 
		  SELECT 1.2,  'Cess Amount',GstPercentage  as GstPercentage,
		        SUM(CASE WHEN GST_CESS_AMOUNT>0 THEN GST_CESS_AMOUNT ELSE 0 END ) GNS,
				0 as GST,
				SUM(CASE WHEN GST_CESS_AMOUNT>0 THEN GST_CESS_AMOUNT ELSE 0 END ) GTS,

				SUM(CASE WHEN GST_CESS_AMOUNT<0 THEN GST_CESS_AMOUNT ELSE 0 END )  RNS,
				0 as RNS,
				SUM(CASE WHEN GST_CESS_AMOUNT<0 THEN GST_CESS_AMOUNT ELSE 0 END )  RTS,

				sum(GST_CESS_AMOUNT) As NST,
				0 as NST,
				sum(GST_CESS_AMOUNT) As NTS,
				0 as TQTY,username
		  FROM @SSRC 
		  group by username,GstPercentage
		 having sum(isnull(GST_CESS_AMOUNT,0)) <>0
    
	--**END of Cess Amount

	--print '#20 Gst Rounf off value add any One Percentage'

	-- DECLARE @CGSTROUNOFFDETAILS VARCHAR(10)
	-- SELECT TOP 1 @CGSTROUNOFFDETAILS=Particular FROM @SSRC order by RNS desc,GNS

	-- update a set GNS=CASE WHEN GST_ROUND_OFF>0 THEN   A.GNS +ISNULL(B.GST_ROUND_OFF,0) ELSE A.GNS END,  
 --              GTS=CASE WHEN GST_ROUND_OFF>0 THEN   A.GTS +ISNULL(B.GST_ROUND_OFF,0) ELSE A.GTS END,  
 --              RNS=CASE WHEN GST_ROUND_OFF<0 THEN   A.RNS +ISNULL(B.GST_ROUND_OFF,0) ELSE A.RNS END,  
 --              RTS=CASE WHEN GST_ROUND_OFF<0 THEN   A.RTS +ISNULL(B.GST_ROUND_OFF,0) ELSE A.RTS END,  
 --              NNS=CASE WHEN GST_ROUND_OFF<>0 THEN   A.NNS +ISNULL(B.GST_ROUND_OFF,0) ELSE A.NNS END,  
 --              NTS=CASE WHEN GST_ROUND_OFF<>0 THEN   A.NTS +ISNULL(B.GST_ROUND_OFF,0) ELSE A.NTS END
	-- from @SSRC a
	-- join
	-- (
	-- SELECT 1 AS PRTORD,@CGSTROUNOFFDETAILS AS DETAILS,
	--   SUM( gst_round_off ) AS gst_round_off  ,ISNULL(@CLUBBEDUSER,USERS.USERNAME) as USERNAME
  
	--  FROM CMM01106 B  (nolock)   
	--  JOIN LOCATION C ON b.location_Code  = C.DEPT_ID 
	--  JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	--  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	  
	--  join users (nolock) on users.user_code =b.USER_CODE 
	--  WHERE B.CANCELLED = 0  --AND B.CM_MODE = 1  
	--  AND B.CM_DT BETWEEN @DFROMDT AND @DTODT   
	--  AND b.location_Code  = (CASE WHEN @CDEPTID = '' THEN b.location_Code  ELSE @CDEPTID END)  
	--  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	--  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	--  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	--  group by ISNULL(@CLUBBEDUSER,USERS.USERNAME) 
	--  having SUM( gst_round_off )<>0 
	--  ) b on a.Particular =b.DETAILS and a.username=b.username
	  
    --**END of Gst Round off

	 print '##30 other charges has to be inserted ##'
								 					
	  INSERT INTO @SSRC (PRTORD, Particular,GstPercentage , GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY,username )         
	   SELECT 1.1 AS PRTORD,'Other Charges' Particular, isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0) AS GstPercentage,
	 
	   SUM(  CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0) >0 THEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)  ELSE 0 END ) AS GNS,    
	   SUM( CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)>0 THEN isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0) ELSE 0 END) AS GST,    
	   SUM( CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)>0 THEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)+isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0) ELSE 0 END) AS GTS, 
	      
	   SUM(  CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)< 0 THEN ABS(OTHER_CHARGES_TAXABLE_VALUE)  ELSE 0 END ) AS GNS,    
	   SUM( CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)<0 THEN ABS(isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0)) ELSE 0 END) AS GST,    
	   SUM( CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)< 0 THEN ABS(isnull(OTHER_CHARGES_TAXABLE_VALUE,0)+isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0)) ELSE 0 END) AS GTS, 
	    
	  
	   SUM(isnull(OTHER_CHARGES_TAXABLE_VALUE,0))AS NNS,    
	   SUM( isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0) ) AS NST,    
	   SUM( isnull(OTHER_CHARGES_TAXABLE_VALUE,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0)+isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)  ) AS NTS,    
       0 AS TQTY,ISNULL(@CLUBBEDUSER,USERS.USERNAME)  username
	  FROM  CMM01106 B 
	  JOIN LOCATION C ON b.location_Code  = C.DEPT_ID 
	  JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  JOIN DTM ON DTM.DT_CODE=B.DT_CODE
	  join users (nolock) on users.user_code =b.USER_CODE 
	  WHERE B.CANCELLED = 0  --AND B.CM_MODE = 1  
	  AND B.CM_DT BETWEEN @DFROMDT AND @DTODT   
	  AND b.location_Code  = (CASE WHEN @CDEPTID = '' THEN b.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  and isnull(OTHER_CHARGES_TAXABLE_VALUE,0)<>0
	  GROUP BY isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0),ISNULL(@CLUBBEDUSER,USERS.USERNAME) 
	
	 --**END of Other charges

	 print '##40 Payment mode breakup has to be store in variable ##'

	  SELECT @NCASH = ROUND(SUM(ISNULL(B.CASH_AMOUNT,0)),2),   
	--	@NCC = ROUND(SUM(ISNULL(B.CC_AMOUNT,0)),2),   
		@NCHEQUE= 0,    
		@NCNADJ = ROUND(SUM(ISNULL(B.CN_AMOUNT,0)),2),   
		@NCRISS = ROUND(SUM(CASE WHEN ISNULL(B.CREDIT_AMOUNT,0)>0 THEN ISNULL(B.CREDIT_AMOUNT,0) ELSE 0 END ),2),   
		@NCNISS = ROUND(SUM(CASE WHEN ISNULL(B.CREDIT_AMOUNT,0)<0 AND SUBSTRING(CM_NO,3+LEN(a.location_code),1)='N' THEN ABS(ISNULL(B.CREDIT_AMOUNT,0)) ELSE 0 END),2),   
		@NCRFISS= ROUND(SUM(CASE WHEN ISNULL(B.CREDIT_REFUND_AMOUNT,0)<>0 THEN ABS(ISNULL(B.CREDIT_REFUND_AMOUNT,0)) ELSE 0 END),2),       
		@NADVADJ= ROUND(SUM(ISNULL(B.ADVANCE_AMOUNT_ADJUSTED,0)),2),   
		--@NATD = ROUND(SUM(ISNULL(A.ATD_CHARGES,0)),2),      
		@NGVADJ = ROUND(SUM(ISNULL(B.OTHER_DOC_AMOUNT,0)),2),     
		@NBANKCH= ROUND(SUM(ISNULL(B.BANK_CHARGES,0)),2),   
		@NMISC  = ROUND(SUM(ISNULL(B.MISC_AMOUNT,0)),2),     
		@NRNDOFF  = ROUND(SUM(ISNULL(A.ROUND_OFF,0)),2), 
		@NWALLET = ROUND(SUM(ISNULL(B.WALLET,0)),2) ,
		@WIZCLIPGVS_GIFTVOUCHER= ROUND(SUM(ISNULL(B.GIFT_VOUCHERS ,0)),2)   
	  FROM CMM01106 A   
	  LEFT OUTER JOIN DBO.VW_BILL_PAYMODE B ON A.CM_ID = B.MEMO_ID AND B.XN_TYPE = 'SLS'  
	  JOIN DTM C (NOLOCK) ON C.DT_CODE=A.DT_CODE

	  WHERE A.CANCELLED = 0 --AND A.CM_MODE = 1    
	  AND A.CM_DT BETWEEN @DFROMDT AND @DTODT AND (A.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)
	  AND a.location_Code  = (CASE WHEN @CDEPTID = '' THEN a.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(A.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(A.BIN_ID,'000') ELSE @CBINID END)  
	  AND (@CUSERCODE='' OR  A.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
		


	  
	INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT)
	  SELECT 2 ,PM.PAYMODE_NAME ,1 ,sum(b.amount) as amount   FROM CMM01106 A   
	  JOIN PAYMODE_XN_DET  B ON A.CM_ID = B.MEMO_ID AND B.XN_TYPE = 'SLS'  
	  JOIN PAYMODE_MST PM (NOLOCK) ON PM.PAYMODE_CODE = B.PAYMODE_CODE  
	  WHERE A.CANCELLED = 0 --AND A.CM_MODE = 1    
	  AND A.CM_DT BETWEEN @DFROMDT AND @DTODT AND (A.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)
	  AND a.location_Code  = (CASE WHEN @CDEPTID = '' THEN a.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(A.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(A.BIN_ID,'000') ELSE @CBINID END)  
	  AND (@CUSERCODE='' OR  A.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  AND PM.PAYMODE_GRP_CODE ='0000002'
	  group by PM.PAYMODE_NAME


	 IF ABS(@NCASH) > 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'CASH',1, @NCASH)   
	  
	 IF @NCRISS > 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'CREDIT ISSUE',1, @NCRISS )   
	    
	 IF @NCNISS > 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'C/N ISSUE',1, -@NCNISS )   
	   
	 IF @NCRFISS > 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'CRF ISSUE',1, -@NCRFISS )   
	   
	 IF @NCNADJ > 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'C/N ADJUSTED',1, @NCNADJ )   
	  
	 IF @NGVADJ <> 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'CHEQUE/DOCUMENTS',1, @NGVADJ )   
	  
	 IF @NADVADJ > 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'ADVANCE ADJUSTED',1, @NADVADJ )   
	    
	 --IF @NATD <> 0  (as discuss with sanjiv sir donot show other charges in payment group) kartar sing (01052024)
	 -- INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'ATD/OTHER CHARGES',1, @NATD )   -- as Per arun ji discuss with sanjiv sir oth show Positive (18082023)
	    
	 IF @NBANKCH <> 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'BANK CHARGES',1, @NBANKCH )   
	  
	 IF @NMISC <> 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'MISC AMOUNT',1, @NMISC )    
  
	IF @NRNDOFF <> 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'ROUND OFF',1, -@NRNDOFF ) 
	  
	IF @NWALLET <> 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'WALLET',1, @NWALLET )   
	   
	IF @WIZCLIPGVS_GIFTVOUCHER <> 0  
	  INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('2', 'WIZCLIPGVS/GIFTVOUCHER',1, @WIZCLIPGVS_GIFTVOUCHER )   
	  
	  
	     

	INSERT INTO @SSRMODEC (PRTORD, DETAILS, SUBDETAILS, AMOUNT)
	SELECT '2',DT_NAME,1,SUM(DISCOUNT_AMOUNT) FROM CMM01106 A (NOLOCK) 
	JOIN DTM B ON A.DT_CODE=B.DT_CODE 
	WHERE A.CM_DT BETWEEN @DFROMDT AND @DTODT AND (A.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)
	AND A.CANCELLED = 0 AND UPDATE_AC=1
	AND a.location_Code  = (CASE WHEN @CDEPTID = '' THEN a.location_Code  ELSE @CDEPTID END)  
	AND ISNULL(A.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(A.BIN_ID,'000') ELSE @CBINID END)  
	AND (@CUSERCODE='' OR  A.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) ) 
	GROUP BY DT_NAME
	
	
	------------------------WSL---------------------------------
	 print '##100 Wholesale Invoice start ##'

	INSERT INTO @SSRWSL (PRTORD, Particular,GstPercentage , GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY,Username  )  
	   SELECT 2 AS PRTORD,'Wholesale Invoice' AS Particular,A.GST_PERCENTAGE AS GstPercentage,
	  
	   SUM(  CASE WHEN QUANTITY>0 THEN XN_VALUE_WITHOUT_GST  ELSE 0 END ) AS GNS,    
	   SUM( CASE WHEN QUANTITY>0 THEN ISNULL(IGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(A.TAX_ROUND_OFF,0) ELSE 0 END) AS GST,      
	   SUM( CASE WHEN QUANTITY>0 THEN ISNULL(XN_VALUE_WITHOUT_GST,0)+ ISNULL(IGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(A.TAX_ROUND_OFF,0) ELSE 0 END) AS GTS,    
	   
	   SUM(  CASE WHEN QUANTITY<0 THEN XN_VALUE_WITHOUT_GST  ELSE 0 END ) AS RNS,    
	   SUM( CASE WHEN QUANTITY<0 THEN ISNULL(IGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(A.TAX_ROUND_OFF,0) ELSE 0 END) AS RST,    
	   SUM( CASE WHEN QUANTITY<0 THEN ISNULL(XN_VALUE_WITHOUT_GST,0)+ ISNULL(IGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(A.TAX_ROUND_OFF,0) ELSE 0 END) AS RTS,    
	   
	   SUM(XN_VALUE_WITHOUT_GST)AS NNS,    
	   SUM( IGST_AMOUNT+SGST_AMOUNT+CGST_AMOUNT ) AS NST,    
	   SUM( XN_VALUE_WITHOUT_GST+IGST_AMOUNT+SGST_AMOUNT+CGST_AMOUNT+ISNULL(A.TAX_ROUND_OFF,0)  ) AS NTS,    
       SUM(A.QUANTITY) AS TQTY,
	   ISNULL(@CLUBBEDUSER,USERS.USERNAME)  Username
	  FROM IND01106 A    
	  JOIN INM01106 B ON A.INV_ID = B.INV_ID    
	  LEFT JOIN LOCATION C ON b.location_Code = C.DEPT_ID 
	  LEFT JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  LEFT  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	  
	  join users (nolock) on users.user_code =b.USER_CODE 
	  WHERE B.CANCELLED = 0  --AND B.CM_MODE = 1  
	  AND B.INV_DT BETWEEN @DFROMDT AND @DTODT AND B.INV_MODE=1  
	  AND b.location_Code  = (CASE WHEN @CDEPTID = '' THEN b.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  GROUP BY A.GST_PERCENTAGE,ISNULL(@CLUBBEDUSER,USERS.USERNAME)  --TAX_STATUS  
	 

	   --wholeSale other charges---

	    INSERT INTO @SSRWSL (PRTORD, Particular,GstPercentage , GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY,Username )         
	   SELECT 2.1 AS PRTORD,'Other Charges' AS Particular,isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0) AS GstPercentage,
	  --TAX_STATUS AS DETAILS,    
	   SUM(  CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0) >0 THEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)  ELSE 0 END ) AS GNS,    
	   SUM( CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)>0 THEN isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0) ELSE 0 END) AS GST,    
	   SUM( CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)>0 THEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)+isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0) ELSE 0 END) AS GTS, 
	      
	   0 AS GNS,    
	   0 AS GST,    
	   0 AS GTS, 
	    
	  
	   SUM(isnull(OTHER_CHARGES_TAXABLE_VALUE,0))AS NNS,    
	   SUM( isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0) ) AS NST,    
	   SUM( isnull(OTHER_CHARGES_TAXABLE_VALUE,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0)+isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)  ) AS NTS,    
       0 AS TQTY,ISNULL(@CLUBBEDUSER,USERS.USERNAME)  username
	  FROM  INM01106 B 
	  LEFT JOIN LOCATION C ON b.location_Code  = C.DEPT_ID 
	  LEFT JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  LEFT  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	 
	  join users (nolock) on users.user_code =b.USER_CODE 
	  WHERE B.CANCELLED = 0  --AND B.CM_MODE = 1  
	  AND B.INV_DT BETWEEN @DFROMDT AND @DTODT AND B.INV_MODE=1  
	  AND b.location_Code  = (CASE WHEN @CDEPTID = '' THEN b.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  and isnull(b.other_charges,0)<>0
	  GROUP BY isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0),ISNULL(@CLUBBEDUSER,USERS.USERNAME) 


	 INSERT INTO @SSRWSL (PRTORD,Particular,GstPercentage , GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY,Username  )         
	   SELECT 2.2 AS PRTORD,'Freight' AS TYPE,isnull(b.FREIGHT_GST_PERCENTAGE,0) AS DETAILS,
	  --TAX_STATUS AS DETAILS,    
	   SUM(  CASE WHEN isnull(FREIGHT_TAXABLE_VALUE,0) >0 THEN isnull(FREIGHT_TAXABLE_VALUE,0)  ELSE 0 END ) AS GNS,    
	   SUM( CASE WHEN isnull(FREIGHT_TAXABLE_VALUE,0)>0 THEN isnull(FREIGHT_IGST_AMOUNT,0)+isnull(FREIGHT_SGST_AMOUNT,0)+isnull(FREIGHT_CGST_AMOUNT,0) ELSE 0 END) AS GST,    
	   SUM( CASE WHEN isnull(FREIGHT_TAXABLE_VALUE,0)>0 THEN isnull(FREIGHT_TAXABLE_VALUE,0)+isnull(FREIGHT_IGST_AMOUNT,0)+isnull(FREIGHT_SGST_AMOUNT,0)+isnull(FREIGHT_CGST_AMOUNT,0) ELSE 0 END) AS GTS, 
	      
	   0 AS GNS,    
	   0 AS GST,    
	   0 AS GTS, 
	    	   SUM(isnull(FREIGHT_TAXABLE_VALUE,0))AS NNS,    
	   SUM( isnull(FREIGHT_IGST_AMOUNT,0)+isnull(FREIGHT_SGST_AMOUNT,0)+isnull(FREIGHT_CGST_AMOUNT,0) ) AS NST,    
	   SUM( isnull(FREIGHT_TAXABLE_VALUE,0)+isnull(FREIGHT_CGST_AMOUNT,0)+isnull(FREIGHT_IGST_AMOUNT,0)+isnull(FREIGHT_SGST_AMOUNT,0)  ) AS NTS,    
       0 AS TQTY,ISNULL(@CLUBBEDUSER,USERS.USERNAME)  username
	  FROM  INM01106 B 
	  LEFT JOIN LOCATION C ON b.location_Code  = C.DEPT_ID 
	  LEFT JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  LEFT  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	
	  join users (nolock) on users.user_code =b.USER_CODE 
	  WHERE B.CANCELLED = 0  --AND B.CM_MODE = 1  
	  AND B.INV_DT BETWEEN @DFROMDT AND @DTODT AND B.INV_MODE=1  
	  AND b.location_Code  = (CASE WHEN @CDEPTID = '' THEN b.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  and isnull(b.FREIGHT,0)<>0
	  GROUP BY isnull(b.FREIGHT_GST_PERCENTAGE,0),ISNULL(@CLUBBEDUSER,USERS.USERNAME) 


	 INSERT INTO @SSRWSL (PRTORD,Particular,GstPercentage, GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY,Username )         
	   SELECT 2.3 AS PRTORD,'Packing' AS Particular,isnull(b.Packing_GST_PERCENTAGE,0) AS GstPercentage,
	  --TAX_STATUS AS DETAILS,    
	   SUM(  CASE WHEN isnull(Packing_TAXABLE_VALUE,0) >0 THEN isnull(Packing_TAXABLE_VALUE,0)  ELSE 0 END ) AS GNS,    
	   SUM( CASE WHEN isnull(Packing_TAXABLE_VALUE,0)>0 THEN isnull(Packing_IGST_AMOUNT,0)+isnull(Packing_SGST_AMOUNT,0)+isnull(Packing_CGST_AMOUNT,0) ELSE 0 END) AS GST,    
	   SUM( CASE WHEN isnull(Packing_TAXABLE_VALUE,0)>0 THEN isnull(Packing_TAXABLE_VALUE,0)+isnull(Packing_IGST_AMOUNT,0)+isnull(Packing_SGST_AMOUNT,0)+isnull(Packing_CGST_AMOUNT,0) ELSE 0 END) AS GTS, 
	      
	   0 AS GNS,    
	   0 AS GST,    
	   0 AS GTS, 
	  
	   SUM(isnull(Packing_TAXABLE_VALUE,0))AS NNS,    
	   SUM( isnull(Packing_IGST_AMOUNT,0)+isnull(Packing_SGST_AMOUNT,0)+isnull(Packing_CGST_AMOUNT,0) ) AS NST,    
	   SUM( isnull(Packing_TAXABLE_VALUE,0)+isnull(Packing_CGST_AMOUNT,0)+isnull(Packing_IGST_AMOUNT,0)+isnull(Packing_SGST_AMOUNT,0)  ) AS NTS,    
       0 AS TQTY,
	   ISNULL(@CLUBBEDUSER,USERS.USERNAME)  username 
	  FROM  INM01106 B 
	  LEFT JOIN LOCATION C ON b.location_Code  = C.DEPT_ID 
	  LEFT JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  LEFT  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	  
	  join users (nolock) on users.user_code =b.USER_CODE 
	  WHERE B.CANCELLED = 0  --AND B.CM_MODE = 1  
	  AND B.INV_DT BETWEEN @DFROMDT AND @DTODT AND B.INV_MODE=1  
	  AND b.location_Code  = (CASE WHEN @CDEPTID = '' THEN b.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  and isnull(b.Packing,0)<>0
	  GROUP BY isnull(b.Packing_GST_PERCENTAGE,0),ISNULL(@CLUBBEDUSER,USERS.USERNAME) 

	  INSERT INTO @SSRWSL (PRTORD, Particular,GstPercentage , GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY,Username )         
	   SELECT 2.4 AS PRTORD,'Insurance' AS Particular,isnull(b.Insurance_GST_PERCENTAGE,0) AS GstPercentage,
	  --TAX_STATUS AS DETAILS,    
	   SUM(  CASE WHEN isnull(Insurance_TAXABLE_VALUE,0) >0 THEN isnull(Insurance_TAXABLE_VALUE,0)  ELSE 0 END ) AS GNS,    
	   SUM( CASE WHEN isnull(Insurance_TAXABLE_VALUE,0)>0 THEN isnull(Insurance_IGST_AMOUNT,0)+isnull(Insurance_SGST_AMOUNT,0)+isnull(Insurance_CGST_AMOUNT,0) ELSE 0 END) AS GST,    
	   SUM( CASE WHEN isnull(Insurance_TAXABLE_VALUE,0)>0 THEN isnull(Insurance_TAXABLE_VALUE,0)+isnull(Insurance_IGST_AMOUNT,0)+isnull(Insurance_SGST_AMOUNT,0)+isnull(Insurance_CGST_AMOUNT,0) ELSE 0 END) AS GTS, 
	      
	   0 AS GNS,    
	   0 AS GST,    
	   0 AS GTS, 
	    
	   SUM(isnull(Insurance_TAXABLE_VALUE,0))AS NNS,    
	   SUM( isnull(Insurance_IGST_AMOUNT,0)+isnull(Insurance_SGST_AMOUNT,0)+isnull(Insurance_CGST_AMOUNT,0) ) AS NST,    
	   SUM( isnull(Insurance_TAXABLE_VALUE,0)+isnull(Insurance_CGST_AMOUNT,0)+isnull(Insurance_IGST_AMOUNT,0)+isnull(Insurance_SGST_AMOUNT,0)  ) AS NTS,    
       0 AS TQTY,
	  ISNULL(@CLUBBEDUSER,USERS.USERNAME)  username
	  FROM  INM01106 B 
	  LEFT JOIN LOCATION C ON b.location_Code  = C.DEPT_ID 
	  LEFT JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  LEFT  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	  
	  join users (nolock) on users.user_code =b.USER_CODE 
	  WHERE B.CANCELLED = 0  --AND B.CM_MODE = 1  
	  AND B.INV_DT BETWEEN @DFROMDT AND @DTODT AND B.INV_MODE=1  
	  AND b.location_Code = (CASE WHEN @CDEPTID = '' THEN b.location_Code ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  and isnull(b.Insurance,0)<>0
	  GROUP BY isnull(b.Insurance_GST_PERCENTAGE,0),ISNULL(@CLUBBEDUSER,USERS.USERNAME) 



	   --END Of other charges
	 
	  SELECT @NCASH1 = ROUND(SUM(ISNULL(B.CASH_AMOUNT,0)),2),   
		@NCC1 = ROUND(SUM(ISNULL(B.CC_AMOUNT,0)),2),   
		@NCHEQUE= 0,    
		@NCNADJ1 = ROUND(SUM(ISNULL(B.CN_AMOUNT,0)),2),   
		@NCNISS1 = ROUND(SUM( ABS(ISNULL(B.CREDIT_AMOUNT,0))),2),   
		@NCRFISS1= ROUND(SUM(ABS(ISNULL(B.CREDIT_REFUND_AMOUNT,0))),2),       
		@NADVADJ1= ROUND(SUM(ISNULL(B.ADVANCE_AMOUNT_ADJUSTED,0)),2),   
		@NATD1 = ROUND(SUM(ISNULL(B.OTHER_CHARGES,0)),2),      
		@NGVADJ1 = ROUND(SUM(ISNULL(B.OTHER_DOC_AMOUNT,0)),2),     
		@NBANKCH1= ROUND(SUM(ISNULL(B.BANK_CHARGES,0)),2),   
		@NMISC1  = ROUND(SUM(ISNULL(B.MISC_AMOUNT,0)),2),     
		@NRNDOFF1  = ROUND(SUM(ISNULL(B.ROUND_OFF,0)),2),
		@NWALLET1  = ROUND(SUM(ISNULL(B.WALLET,0)),2)     
	from
	( 
	  
	    SELECT  SUM(ISNULL(B.CASH_AMOUNT,0)) CASH_AMOUNT,   
		        SUM(ISNULL(B.CC_AMOUNT,0)) CC_AMOUNT,   
		        SUM(ISNULL(B.CN_AMOUNT,0)) CN_AMOUNT,   
		        SUM( ABS(ISNULL(B.CREDIT_AMOUNT,0))) CREDIT_AMOUNT,   
		        SUM(ABS(ISNULL(B.CREDIT_REFUND_AMOUNT,0))) CREDIT_REFUND_AMOUNT,       
		        SUM(ISNULL(B.ADVANCE_AMOUNT_ADJUSTED,0)) ADVANCE_AMOUNT_ADJUSTED,   
		        SUM(ISNULL(A.OTHER_CHARGES,0)) OTHER_CHARGES,      
		        SUM(ISNULL(B.OTHER_DOC_AMOUNT,0)) OTHER_DOC_AMOUNT,     
	            SUM(ISNULL(B.BANK_CHARGES,0)) BANK_CHARGES,   
	            SUM(ISNULL(B.MISC_AMOUNT,0)) MISC_AMOUNT,     
		        SUM(ISNULL(A.ROUND_OFF,0)) ROUND_OFF,
		        SUM(ISNULL(B.WALLET,0)) WALLET    
	  FROM INM01106 A   
	  LEFT OUTER JOIN DBO.VW_BILL_PAYMODE B ON A.INV_ID = B.MEMO_ID AND B.XN_TYPE = 'WSL'  
	  WHERE A.CANCELLED = 0 
	  AND A.INV_DT BETWEEN @DFROMDT AND @DTODT AND (A.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)
	  AND a.location_Code = (CASE WHEN @CDEPTID = '' THEN a.location_Code ELSE @CDEPTID END)  
	  AND ISNULL(A.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(A.BIN_ID,'000') ELSE @CBINID END)  
	  AND (@CUSERCODE='' OR  A.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  AND INV_MODE=1
	  Union all
	  SELECT    (-1)*SUM(ISNULL(B.CASH_AMOUNT,0)),   
		        (-1)*SUM(ISNULL(B.CC_AMOUNT,0)),   
		        (-1)*SUM(ISNULL(B.CN_AMOUNT,0)),   
		        (-1)*SUM( ABS(ISNULL(B.CREDIT_AMOUNT,0))),   
		        (-1)*SUM(ABS(ISNULL(B.CREDIT_REFUND_AMOUNT,0))),       
		        (-1)*SUM(ISNULL(B.ADVANCE_AMOUNT_ADJUSTED,0)),   
		        (-1)*SUM(ISNULL(A.OTHER_CHARGES,0)),      
		        (-1)*SUM(ISNULL(B.OTHER_DOC_AMOUNT,0)),     
	            (-1)*SUM(ISNULL(B.BANK_CHARGES,0)),   
	            (-1)*SUM(ISNULL(B.MISC_AMOUNT,0)),     
		        (-1)*SUM(ISNULL(A.ROUND_OFF,0)),
		        (-1)*SUM(ISNULL(B.WALLET,0))       
	  FROM cnm01106  A (nolock)  
	  LEFT OUTER JOIN DBO.VW_BILL_PAYMODE B ON A.cn_id  = B.MEMO_ID AND B.XN_TYPE = 'WSR'  
	  WHERE A.CANCELLED = 0 
	  AND a.MODE = 1  
	  AND a.CN_DT BETWEEN @DFROMDT AND @DTODT  
	  AND a.location_Code = (CASE WHEN @CDEPTID = '' THEN a.location_Code ELSE @CDEPTID END)  
	  AND ISNULL(a.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(a.BIN_ID,'000') ELSE @CBINID END)  
	  AND (a.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  a.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )	
	 ) B

	  
	   
	   
	 
	 
	  IF ABS(@NCASH1) > 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) 
	  VALUES('3', 'CASH',1, @NCASH1)   
	  
	 IF @NCC1 <> 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'CREDIT CARD',1, @NCC1)   
	  
	 IF @NCRISS1 > 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'CREDIT ISSUE',1, @NCRISS)   
	    
	 IF @NCNISS1 > 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'WSL CREDIT ISSUE',1, @NCNISS1)   
	   
	 IF @NCRFISS1 > 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'CRF ISSUE',1, -@NCRFISS1)   
	   
	 IF @NCNADJ1 > 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'C/N ADJUSTED',1, @NCNADJ1)   
	  
	 IF @NGVADJ1 > 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'CHEQUE/DOCUMENTS',1, @NGVADJ1 )   
	  
	 IF @NADVADJ1 > 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'ADVANCE ADJUSTED',1, @NADVADJ1)   
	    
	 --IF @NATD1 <> 0  
	 -- INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'ATD/OTHER CHARGES',1, @NATD1)   
	    
	 IF @NBANKCH1 <> 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'BANK CHARGES',1, @NBANKCH1)   
	  
	 IF @NMISC1 <> 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'MISC AMOUNT',1, @NMISC1)  
	    
    IF @NRNDOFF1 <> 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'WSL ROUND OFF',1, -@NRNDOFF1)
	  
	IF @NWALLET1 <> 0  
	  INSERT INTO @SSRMODECWSL (PRTORD, DETAILS, SUBDETAILS, AMOUNT) VALUES('3', 'WALLET',1, @NWALLET1)        
	    --select * from @SSRMODECWSL
	

	 INSERT INTO @SSRWSL (PRTORD,Particular,GstPercentage ,GNS,GST,GTS,RNS, RST, RTS,NNS,NST,NTS,TQTY,Username )  
	  SELECT 2,'Wholesale Invoice' Particular,A.GST_PERCENTAGE AS DETAILS,
	    0 AS GNS, 
	    0 AS GST, 
	    0 AS GTS,      
	   (-1)*SUM((ABS(RFNET) - ABS(ISNULL(IGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(A.TAX_ROUND_OFF,0)))) AS RNS,    
	   (-1)*SUM( ABS(ISNULL(IGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(A.TAX_ROUND_OFF,0))) AS RST,    
	   (-1)*SUM(ABS(RFNET)+INM_DISCOUNT_AMOUNT) AS RTS ,
	   (-1)*SUM( RFNET - (ISNULL(IGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(A.TAX_ROUND_OFF,0))) AS NNS,    
	   (-1)*SUM( ISNULL(IGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(A.TAX_ROUND_OFF,0) ) AS NST,    
	   (-1)*SUM( RFNET ) AS NTS,
	   (-1)*SUM(A.QUANTITY ) AS TQTY  ,
	   ISNULL(@CLUBBEDUSER,USERS.USERNAME)  username 
	  FROM CND01106 A    
	  JOIN CNM01106 B ON A.CN_ID = B.CN_ID    
	  LEFT JOIN LOCATION C ON LEFT(B.CN_NO,2) = C.DEPT_ID 
	  LEFT JOIN BIN D ON D.BIN_ID=B.BIN_ID    
	  join users (nolock) on users.user_code =b.USER_CODE 
	  WHERE B.CANCELLED = 0  AND B.MODE = 1  
	  AND B.CN_DT BETWEEN @DFROMDT AND @DTODT  
	  AND b.location_Code = (CASE WHEN @CDEPTID = '' THEN b.location_Code ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  --AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CB.CM_ID IS NOT NULL)) OR (@BDSM=0))	
	  GROUP BY A.GST_PERCENTAGE,ISNULL(@CLUBBEDUSER,USERS.USERNAME)  --TAX_STATUS	



	     --wholeSale  other charges---
	   INSERT INTO @SSRWSL (PRTORD, Particular,GstPercentage , GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY,Username )         
	   SELECT 2.1 AS PRTORD,'Other Charges' AS Particular,isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0) AS GstPercentage,
	    0 AS GNS, 0 AS GST, 0 AS GTS, 
	    
	  --TAX_STATUS AS DETAILS,    
	   (-1)*SUM(isnull(OTHER_CHARGES_TAXABLE_VALUE,0)) AS GNS,    
	   (-1)*SUM( isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0) )  AS GST,    
	   (-1)*SUM( isnull(OTHER_CHARGES_TAXABLE_VALUE,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0)+isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)  ) AS GTS, 

	   (-1)*SUM(isnull(OTHER_CHARGES_TAXABLE_VALUE,0))AS NNS,    
	   (-1)*SUM( isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0) ) AS NST,    
	   (-1)*SUM( isnull(OTHER_CHARGES_TAXABLE_VALUE,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0)+isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)  ) AS NTS,    
       0 AS TQTY,
	   ISNULL(@CLUBBEDUSER,USERS.USERNAME)  username 
	  FROM  CNM01106 B 
	  LEFT JOIN LOCATION C ON b.location_Code = C.DEPT_ID 
	  LEFT JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  LEFT  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	
	  join users (nolock) on users.user_code =b.USER_CODE 
	  WHERE B.CANCELLED = 0  AND B.MODE = 1  
	  AND B.CN_DT BETWEEN @DFROMDT AND @DTODT  
	  AND b.location_Code = (CASE WHEN @CDEPTID = '' THEN b.location_Code ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  and isnull(b.other_charges,0)<>0
	  GROUP BY isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0),ISNULL(@CLUBBEDUSER,USERS.USERNAME) 

	 INSERT INTO @SSRWSL (PRTORD,Particular,GstPercentage , GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY,Username )         
	   SELECT 2.2 AS PRTORD,'Freight' AS TYPE,isnull(b.FREIGHT_GST_PERCENTAGE,0) AS DETAILS,
	  --TAX_STATUS AS DETAILS,    

	   0 AS GNS,    0 AS GST,  0 AS GTS, 
	   (-1)*SUM(isnull(FREIGHT_TAXABLE_VALUE,0)) AS GNS,    
	  (-1)* SUM( isnull(FREIGHT_IGST_AMOUNT,0)+isnull(FREIGHT_SGST_AMOUNT,0)+isnull(FREIGHT_CGST_AMOUNT,0) ) AS GST,    
	   (-1)*SUM( isnull(FREIGHT_TAXABLE_VALUE,0)+isnull(FREIGHT_CGST_AMOUNT,0)+isnull(FREIGHT_IGST_AMOUNT,0)+isnull(FREIGHT_SGST_AMOUNT,0)  ) AS GTS, 
	      
	   (-1)*SUM(isnull(FREIGHT_TAXABLE_VALUE,0)) AS NNS,    
	   (-1)*SUM( isnull(FREIGHT_IGST_AMOUNT,0)+isnull(FREIGHT_SGST_AMOUNT,0)+isnull(FREIGHT_CGST_AMOUNT,0) ) AS NST,    
	  (-1)* SUM( isnull(FREIGHT_TAXABLE_VALUE,0)+isnull(FREIGHT_CGST_AMOUNT,0)+isnull(FREIGHT_IGST_AMOUNT,0)+isnull(FREIGHT_SGST_AMOUNT,0)  ) AS NTS,    
       0 AS TQTY,
	   ISNULL(@CLUBBEDUSER,USERS.USERNAME)  username
	  FROM  CNM01106 B 
	  LEFT JOIN LOCATION C ON LEFT(B.CN_NO,2) = C.DEPT_ID 
	  LEFT JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  LEFT  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	
	  join users (nolock) on users.user_code =b.USER_CODE 
	  WHERE B.CANCELLED = 0  AND B.MODE = 1  
	  AND B.CN_DT BETWEEN @DFROMDT AND @DTODT  
	  AND b.location_Code = (CASE WHEN @CDEPTID = '' THEN b.location_Code ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  and isnull(b.FREIGHT,0)<>0
	  GROUP BY isnull(b.FREIGHT_GST_PERCENTAGE,0),ISNULL(@CLUBBEDUSER,USERS.USERNAME) 


	
	  INSERT INTO @SSRWSL (PRTORD, Particular,GstPercentage , GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY,Username )         
	   SELECT 2.3 AS PRTORD,'Insurance' AS Particular,isnull(b.Insurance_GST_PERCENTAGE,0) AS DETAILS,
	  --TAX_STATUS AS DETAILS,   
	   0 AS GNS,    0 AS GST,    0 AS GTS, 
	    
       (-1)*SUM(isnull(Insurance_TAXABLE_VALUE,0)) AS GNS,    
	   (-1)*SUM( isnull(Insurance_IGST_AMOUNT,0)+isnull(Insurance_SGST_AMOUNT,0)+isnull(Insurance_CGST_AMOUNT,0) ) AS GST,    
	   (-1)*SUM( isnull(Insurance_TAXABLE_VALUE,0)+isnull(Insurance_CGST_AMOUNT,0)+isnull(Insurance_IGST_AMOUNT,0)+isnull(Insurance_SGST_AMOUNT,0)  ) AS GTS, 
	 
	   (-1)*SUM(isnull(Insurance_TAXABLE_VALUE,0))AS NNS,    
	   (-1)*SUM( isnull(Insurance_IGST_AMOUNT,0)+isnull(Insurance_SGST_AMOUNT,0)+isnull(Insurance_CGST_AMOUNT,0) ) AS NST,    
	   (-1)*SUM( isnull(Insurance_TAXABLE_VALUE,0)+isnull(Insurance_CGST_AMOUNT,0)+isnull(Insurance_IGST_AMOUNT,0)+isnull(Insurance_SGST_AMOUNT,0)  ) AS NTS,    
       0 AS TQTY,
	   ISNULL(@CLUBBEDUSER,USERS.USERNAME)  username 
	  FROM  CNM01106 B 
	  LEFT JOIN LOCATION C ON LEFT(B.CN_NO,2) = C.DEPT_ID 
	  LEFT JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  LEFT  JOIN DTM ON DTM.DT_CODE=B.DT_CODE
	  join users (nolock) on users.user_code =b.USER_CODE 
	  WHERE B.CANCELLED = 0  AND B.MODE = 1  
	  AND B.CN_DT BETWEEN @DFROMDT AND @DTODT  
	  AND b.location_Code = (CASE WHEN @CDEPTID = '' THEN b.location_Code ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  and isnull(b.Insurance,0)<>0
	  GROUP BY isnull(b.Insurance_GST_PERCENTAGE,0),ISNULL(@CLUBBEDUSER,USERS.USERNAME) 

	
	
	--------------------------------------------------------------
   IF @NSUMMARYTYPE=1
   GOTO LBL1
   ELSE IF @NSUMMARYTYPE=2
   GOTO LBL2
   ELSE IF @NSUMMARYTYPE=3
   GOTO LBL3
   
  
	
	LBL1:     
 
	 SELECT CAST( PRTORD as numeric(2,0)) as PRTORD, Particular,GstPercentage ,[GNS],[GST],[GTS],[RNS],[RST],[RTS],[NNS],[NST],[NTS] ,
	        Username as Username,PRTORD as ORD
	 FROM @SSRC  
	 (
		SELECT * FROM @SSRMODEC 
	  )
     order by PRTORD
	  
	--SELECT * INTO SSRC FROM @SSRC

	 SELECT COUNT(*) AS [TOTAL_PACK_SLIPS],
		ROUND(SUM(NET_AMOUNT),2) AS [TOTAL_AMOUNT],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')='' AND CANCELLED=1  THEN 1 ELSE 0 END),2) AS [CANCELLED_PACK_SLIPS],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')='' AND CANCELLED=1  THEN NET_AMOUNT ELSE 0 END),2) AS [CANCELLED_PACK_SLIPS_AMOUNT],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')='' AND CANCELLED=0  THEN 1 ELSE 0 END),2) AS [PENDING_PACK_SLIPS],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')='' AND CANCELLED=0  THEN NET_AMOUNT ELSE 0 END),2) AS [PENDING_PACK_SLIPS_AMOUNT],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')<>'' AND CANCELLED=0 THEN 1 ELSE 0 END),2) AS [BILLED_PACK_SLIPS],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')<>'' AND CANCELLED=0 THEN NET_AMOUNT ELSE 0 END),2) AS [BILLED_PACK_SLIPS_AMOUNT]
	 FROM RPS_MST A (NOLOCK)
	 WHERE A.CM_DT BETWEEN @DFROMDT AND @DTODT
	 AND a.location_Code =(CASE WHEN @CDEPTID='' THEN a.location_Code ELSE @CDEPTID END)
	 AND (@CUSERCODE='' OR  A.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
		
	SELECT CONVERT(DATETIME,'') AS [CM_DT], MIN(CM_NO) AS [FROM_BILL],MAX(CM_NO) AS [TO_BILL]  
	FROM CMM01106 CM
	WHERE CM.CANCELLED = 0 AND  CM_DT BETWEEN @DFROMDT AND @DTODT  
	AND cm.location_Code = (CASE WHEN @CDEPTID = '' THEN cm.location_Code ELSE @CDEPTID END)  
	AND ISNULL(BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(BIN_ID,'000') ELSE @CBINID END)  
	AND (MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)
	AND (@CUSERCODE='' OR  CM.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS))
		  --AND (CM.CM_DT>@FREEZE_DT AND @bALLOW_VIEW=0) 
	--AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CB.CM_ID IS NOT NULL)) OR (@BDSM=0))		
	GROUP BY LEFT(CM_NO,5)               
	ORDER BY CM_DT ASC
		
	 SELECT ARC_TYPE,(CASE WHEN ARC_TYPE=2 THEN 'PAYMENT' ELSE (CASE WHEN ARCT=1 THEN 'O/S RECEIPT' WHEN ARCT=2 THEN 'ADVANCE' ELSE 'FEE/OTHER CHARGES' END) END) AS RECEIPT_MODE,
	 ISNULL(SUM(NET_AMOUNT * (CASE WHEN ARC_TYPE=2 THEN -1 ELSE 1 END)),0) AS AMOUNT 
	 FROM ARC01106 
	 WHERE CANCELLED=0 --AND ARCT IN (1,2,3) 
	 AND ADV_REC_DT BETWEEN @DFROMDT AND @DTODT   
	 AND location_Code =(CASE WHEN @CDEPTID='' THEN location_Code ELSE @CDEPTID END)  
	 AND ISNULL(BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(BIN_ID,'000') ELSE @CBINID END)  
	 AND (@CUSERCODE='' OR  USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	 GROUP BY ARC_TYPE,(CASE WHEN ARC_TYPE=2 THEN 'PAYMENT' ELSE (CASE WHEN ARCT=1 THEN 'O/S RECEIPT' WHEN ARCT=2 THEN 'ADVANCE' ELSE 'FEE/OTHER CHARGES' END) END)

	 SELECT ISNULL(@CERRMSGOUT,'') AS ALERT_MESSAGE
	 
	 GOTO ENDPROC
	 
LBL2:
    
    

	 SELECT CAST(PRTORD AS NUMERIC(2,0)) AS PRTORD, Particular,GstPercentage,
	 SUM(ISNULL(GNS,0)) [GNS],
	 SUM(ISNULL(GST,0)) [GST],
	 SUM(ISNULL(GTS,0)) [GTS],
	 SUM(ISNULL(RNS,0)) [RNS],
	 SUM(ISNULL(RST,0)) [RST],
	 SUM(ISNULL(RTS,0)) [RTS],
	 SUM(ISNULL(NNS,0)) [NNS],
	 SUM(ISNULL(NST,0)) [NST],
	 SUM(ISNULL(NTS,0)) [NTS],
	 PRTORD as Ord 
	 FROM @SSRWSL
	 GROUP BY PRTORD, Particular,GstPercentage
	 UNION ALL
	 SELECT CAST(PRTORD AS NUMERIC(2,0)) AS PRTORD, Particular,GstPercentage,[GNS],[GST],[GTS],[RNS],[RST],[RTS],[NNS],[NST],[NTS] ,
	        PRTORD as Ord
	 FROM @WSLRETURN1
	 
	 SELECT * FROM @SSRMODECWSL
	 
GOTO ENDPROC

	 
LBL3:

	
	 SELECT CAST(PRTORD AS NUMERIC(2,0)) AS PRTORD, Particular,GstPercentage  ,[GNS],[GST],[GTS],[RNS],[RST],[RTS],[NNS],[NST],[NTS],
	 PRTORD AS ORD,
	 [TQTY],Username
	 FROM @SSRC  
	 UNION ALL
	 SELECT CAST(PRTORD AS NUMERIC(2,0)) AS PRTORD, Particular,GstPercentage,
	 SUM(ISNULL(GNS,0)) [GNS],
	 SUM(ISNULL(GST,0)) [GST],
	 SUM(ISNULL(GTS,0)) [GTS],
	 SUM(ISNULL(RNS,0)) [RNS],
	 SUM(ISNULL(RST,0))[RST],
	 SUM(ISNULL(RTS,0)) [RTS],
	 SUM(ISNULL(NNS,0)) [NNS],
	 SUM(ISNULL(NST,0)) [NST],
	 SUM(ISNULL(NTS,0)) [NTS] ,
	 PRTORD AS ORD,
	 SUM([TQTY]) AS [TQTY],Username as Username
	 FROM @SSRWSL
	 GROUP BY PRTORD, Particular,GstPercentage,Username

	 UNION ALL
	 SELECT CAST(PRTORD AS NUMERIC(2,0)) AS PRTORD, Particular,GstPercentage ,[GNS],[GST],[GTS],[RNS],[RST],[RTS],[NNS],[NST],[NTS] ,
	 PRTORD AS ORD,
	 [TQTY],Username as Username
	 FROM @WSLRETURN1
	 ORDER BY PRTORD,ORD  ;
	
	 (
		SELECT * FROM @SSRMODEC 
		UNION 
		SELECT * FROM @SSRMODECWSL
	  )
	 
	
	 
	 SELECT COUNT(*) AS [TOTAL_PACK_SLIPS],
		ROUND(SUM(NET_AMOUNT),2) AS [TOTAL_AMOUNT],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')='' AND CANCELLED=1  THEN 1 ELSE 0 END),2) AS [CANCELLED_PACK_SLIPS],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')='' AND CANCELLED=1  THEN NET_AMOUNT ELSE 0 END),2) AS [CANCELLED_PACK_SLIPS_AMOUNT],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')='' AND CANCELLED=0  THEN 1 ELSE 0 END),2) AS [PENDING_PACK_SLIPS],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')='' AND CANCELLED=0  THEN NET_AMOUNT ELSE 0 END),2) AS [PENDING_PACK_SLIPS_AMOUNT],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')<>'' AND CANCELLED=0 THEN 1 ELSE 0 END),2) AS [BILLED_PACK_SLIPS],
		ROUND(SUM(CASE WHEN ISNULL(a.REF_CM_ID,'')<>'' AND CANCELLED=0 THEN NET_AMOUNT ELSE 0 END),2) AS [BILLED_PACK_SLIPS_AMOUNT]
	 FROM RPS_MST A (NOLOCK)
	 WHERE A.CM_DT BETWEEN @DFROMDT AND @DTODT
	 AND location_Code =(CASE WHEN @CDEPTID='' THEN location_Code ELSE @CDEPTID END)
	 AND (@CUSERCODE='' OR  A.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
		
	SELECT CONVERT(DATETIME,'') AS [CM_DT], MIN(CM_NO) AS [FROM_BILL],MAX(CM_NO) AS [TO_BILL]  
	FROM CMM01106 CM
	WHERE CM.CANCELLED = 0 AND  CM_DT BETWEEN @DFROMDT AND @DTODT  
	AND cm.location_Code = (CASE WHEN @CDEPTID = '' THEN cm.location_Code  ELSE @CDEPTID END)  
	AND ISNULL(BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(BIN_ID,'000') ELSE @CBINID END)  
	AND (MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)
	AND (@CUSERCODE='' OR  CM.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
		  --AND (CM.CM_DT>@FREEZE_DT AND @bALLOW_VIEW=0) 
	--AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CB.CM_ID IS NOT NULL)) OR (@BDSM=0))		
	GROUP BY LEFT(CM_NO,5)               
	ORDER BY CM_DT ASC
		
	 SELECT ARC_TYPE,(CASE WHEN ARC_TYPE=2 THEN 'PAYMENT' ELSE (CASE WHEN ARCT=1 THEN 'O/S RECEIPT' WHEN ARCT=2 THEN 'ADVANCE' ELSE 'FEE/OTHER CHARGES' END) END) AS RECEIPT_MODE,
	 ISNULL(SUM(NET_AMOUNT * (CASE WHEN ARC_TYPE=2 THEN -1 ELSE 1 END)),0) AS AMOUNT 
	 FROM ARC01106 
	 WHERE CANCELLED=0 --AND ARCT IN (1,2,3) 
	 AND ADV_REC_DT BETWEEN @DFROMDT AND @DTODT   
	 AND location_Code  =(CASE WHEN @CDEPTID='' THEN location_Code  ELSE @CDEPTID END)  
	 AND ISNULL(BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(BIN_ID,'000') ELSE @CBINID END)  
	 AND (@CUSERCODE='' OR  USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	 GROUP BY ARC_TYPE,(CASE WHEN ARC_TYPE=2 THEN 'PAYMENT' ELSE (CASE WHEN ARCT=1 THEN 'O/S RECEIPT' WHEN ARCT=2 THEN 'ADVANCE' ELSE 'FEE/OTHER CHARGES' END) END)

	 SELECT ISNULL(@CERRMSGOUT,'') AS ALERT_MESSAGE
	 GOTO ENDPROC
	 
ENDPROC:
	 
END    
--******************************************* END OF PROCEDURE SP_DSR_SALESSUMMARY

