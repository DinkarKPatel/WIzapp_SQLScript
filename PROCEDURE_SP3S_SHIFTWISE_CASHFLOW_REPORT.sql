create  PROCEDURE SP3S_SHIFTWISE_CASHFLOW_REPORT
(
	@DFORDT VARCHAR(20),
	@CDEPTID VARCHAR(5)='',
	@CBINID VARCHAR(10)='',
	@CUSERCODE CHAR(7)='',
	@BCRISSUE BIT=0,
	@BOSRCT BIT=0,
	@BCRNOTE BIT=0,
	@BCRNOTEADJSLS BIT=0,
	@BCRNOTEADJRCT BIT=0,
	@BADVADJPYT BIT=0,
	@BADVADJSLS BIT=0,
	@BADVRCT BIT=0,
	@BDOCRCV BIT=0,
	@BCLUBBED NUMERIC(2)=1,
	@BOC BIT=0,
	@BCRREFUND BIT=0,
	@BCASHREF  BIT=0,
	@BPAYMENT  BIT=0,
	@BDCARD    BIT=0,
	@CLOGIN_USERCODE VARCHAR(12) = '',
	@DFROMDT VARCHAR(20),
	@DTODT VARCHAR(20),
	@BPETTYCASH  BIT=0

)
--WITH ENCRYPTION
AS
BEGIN
--SP3S_SHIFTWISE_CASHFLOW_REPORT '2015-08-14','','','',1,1,1,1,1,1,0,0,0,0,1,1,1 
SET NOCOUNT ON
/*
DIFFERENT METHODS OF CASH FLOW.
CREDIT ISSUE						: @BCRISSUE
OUTSTANDING RECEIPT					: @BOSRCT
CREDIT NOTES						: @BCRNOTE
CREDIT NOTES ADJUSTED IN SALE		: @BCRNOTEADJSLS
CREDIT NOTES ADJUSTED IN RECEIPT	: @BCRNOTEADJRCT
LIST OF ALL PAYMENTS				: @BADVADJPYT
ADVANCE ADJUSTED IN SALE			: @BADVADJSLS
ADVANCES IN RECEIPT					: @BADVRCT
DOCUMENT RECEIVED					: @BDOCRCV
LIST OF OTHER CHARGES				: @BOC
LIST OF CASHREFUND					: @BCASHREF
----NEW ADD 16.12.14
LIST OF PAYMENTS                    : @BPAYMENT
--NEW ADDED 23JUNE2015
LIST OF DISCOUNT CARD ISSUE/RENEWAL : @BDCARD
*/
	SET NOCOUNT ON		
	
	DECLARE @BESTIMATEENABLED BIT,@BDSM BIT,@CERRMSGOUT VARCHAR(500),@CALERTMSG1 VARCHAR(500)
	
	SELECT TOP 1 @BDSM=VALUE FROM CONFIG WHERE CONFIG_OPTION='OPEN_CASHIER_FOR_CASHMEMOS'
		
	SET @BDSM=ISNULL(@BDSM,0)	
	
	/*
		CALL THIS PROCEDURE TO CHECK IF SOME BILLS ARE PENDING FOR CASHER. EITHER FROM CASH MEMO TO CASHIER OR
		PACKSLIP TO CASHMEMO.	   
   */
   EXEC SP3S_CHECK_PENDING_BILLS 
		 @DFROM_DT=@DFORDT
		,@DTO_DT=@DFORDT
		,@CDEPT_ID=@CDEPTID
		,@BESTIMATEENABLED=@BESTIMATEENABLED
		,@CUSERCODE=@CUSERCODE
		,@CBINID=@CBINID
		,@CERRMSGOUT=@CERRMSGOUT OUTPUT

	---GET ALL THE SHIFTS THAT WAS OPENED AT THE SPECIFIED DATE
	IF OBJECT_ID('TEMPDB..#TILLSHIFTS','U') IS NOT NULL
		DROP TABLE #TILLSHIFTS

	SELECT SHIFT_ID
	INTO #TILLSHIFTS		
	FROM TILL_SHIFT_MST 
	WHERE OPEN_DATE=@DFORDT

	--IF EXISTS(SELECT TOP 1 'U' FROM TILL_SHIFT_MST WHERE OPEN_DATE=@DFORDT AND ISNULL(CLOSE_DATE,'')='')
	--BEGIN
	--	SET @CALERTMSG1='SOME TILL SHIFTS ARE OPEN.PLEASE CLOSE THOSE SHIFTS FOR PROPER REPORT.'
	--END

	IF OBJECT_ID('#SLS_REPORT','U') IS NOT NULL
		DROP TABLE #SLS_REPORT
		
	CREATE TABLE #SLS_REPORT (SHIFT_ID VARCHAR(20),DEPT_ID VARCHAR(10),DEPT_NAME VARCHAR(100),CM_DT DATETIME,CANCELLED BIT
							 ,PAYMODE_GRP_NAME VARCHAR(100),PAYMODE_NAME VARCHAR(100), TRAN_TYPE VARCHAR(100)
							 ,AMOUNT NUMERIC(14,2),USER_CODE VARCHAR(7),BIN_ID VARCHAR(7))
	
	INSERT INTO #SLS_REPORT
	--LIST OF RETAIL SALE FOR A GIVEN DATE RANGE
	SELECT CM.SHIFT_ID,LO.DEPT_ID,LO.DEPT_NAME,CM.CM_DT,CM.CANCELLED,PGM.PAYMODE_GRP_NAME,
    PM.PAYMODE_NAME,
	'SALE' AS TRAN_TYPE
	,SUM(CASE WHEN (PXD.PAYMODE_CODE='0000004' AND PXD.AMOUNT>0) OR PXD.PAYMODE_CODE<>'0000004' THEN  PXD.AMOUNT ELSE 0 END) AS AMOUNT
	,CM.USER_CODE,CM.BIN_ID 
	FROM CMM01106 CM (NOLOCK)
	LEFT JOIN 
	(
		SELECT DISTINCT CM_ID FROM DSD01106 DSD(NOLOCK) JOIN DSM01106 DSM(NOLOCK) ON DSD.DS_ID=DSM.DS_ID
		WHERE DSM.CANCELLED=0
	)DSD ON CM.CM_ID=DSD.CM_ID
	LEFT JOIN 
	(
		SELECT DISTINCT A.CM_ID 
		FROM  CMM01106  A (NOLOCK) 
		JOIN VW_BILL_PAYMODE PAY (NOLOCK) ON PAY.MEMO_ID=A.CM_ID AND PAY.XN_TYPE='SLS'
		WHERE A.CM_DT=@DFORDT
		AND (A.NET_AMOUNT<0 AND PAY.CREDIT_AMOUNT<>0)/*CREDITNOTE AND CREDIT REFUND BILLS*/
		AND A.CANCELLED = 0 
	)CMM ON CM.CM_ID=CMM.CM_ID
	JOIN LOCATION  LO (NOLOCK) ON LO.DEPT_ID = CM.LOCATION_CODE
	JOIN PAYMODE_XN_DET PXD (NOLOCK) ON  PXD.MEMO_ID = CM.CM_ID
	JOIN PAYMODE_MST PM (NOLOCK) ON PM.PAYMODE_CODE = PXD.PAYMODE_CODE
	JOIN PAYMODE_GRP_MST PGM (NOLOCK) ON PGM.PAYMODE_GRP_CODE = PM.PAYMODE_GRP_CODE
	JOIN #TILLSHIFTS TS ON CM.SHIFT_ID=TS.SHIFT_ID
	WHERE PXD.XN_TYPE = 'SLS' AND CM.CANCELLED = 0 
	AND NOT ( PXD.PAYMODE_CODE='0000004' AND PXD.AMOUNT<0 AND	SUBSTRING(CM_NO,5,1)='N')
	AND PXD.PAYMODE_CODE<>'CMR0001'
	AND CM.LOCATION_CODE = (CASE WHEN @CDEPTID='' THEN cm.LOCATION_CODE ELSE @CDEPTID END)
	AND CM.USER_CODE = (CASE WHEN ISNULL(@CUSERCODE,'')='' THEN CM.USER_CODE ELSE @CUSERCODE END)
	AND CM.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN CM.BIN_ID ELSE @CBINID END)  
	AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CMM.CM_ID IS NOT NULL)) OR (@BDSM=0)) 
	GROUP BY CM.SHIFT_ID,LO.DEPT_ID,LO.DEPT_NAME,CM.CM_DT,PGM.PAYMODE_GRP_NAME,PM.PAYMODE_NAME,CM.CANCELLED,CM.USER_CODE 
			,CM.BIN_ID,PGM.PAYMODE_GRP_CODE, SUBSTRING(CM.CM_NO,5,1)
	UNION ALL
	SELECT CM.SHIFT_ID,LO.DEPT_ID,LO.DEPT_NAME,CM.CM_DT,CM.CANCELLED,PAYMODE_GRP_NAME,PAYMODE_NAME,'SALE' AS TRAN_TYPE,
	SUM(PXD.AMOUNT) AS AMOUNT,CM.USER_CODE,CM.BIN_ID 
	FROM CMM01106 CM (NOLOCK)
	JOIN LOCATION  LO (NOLOCK) ON LO.DEPT_ID = CM.location_Code 
	JOIN PAYMODE_XN_DET PXD (NOLOCK) ON  PXD.MEMO_ID = CM.CM_ID 
	JOIN PAYMODE_MST PM (NOLOCK) ON PM.PAYMODE_CODE = PXD.PAYMODE_CODE
	JOIN PAYMODE_GRP_MST PGM (NOLOCK) ON PGM.PAYMODE_GRP_CODE = PM.PAYMODE_GRP_CODE
	JOIN #TILLSHIFTS TS ON CM.SHIFT_ID=TS.SHIFT_ID
	WHERE PXD.XN_TYPE = 'SLS' AND PXD.PAYMODE_CODE='CMR0001' AND CM.CANCELLED = 0 
	AND CM.location_Code  = (CASE WHEN @CDEPTID='' THEN CM.location_Code  ELSE @CDEPTID END)
	AND CM.USER_CODE = (CASE WHEN ISNULL(@CUSERCODE,'')='' THEN CM.USER_CODE ELSE @CUSERCODE END)
	AND CM.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN CM.BIN_ID ELSE @CBINID END)  
	GROUP BY CM.SHIFT_ID,LO.DEPT_ID,LO.DEPT_NAME,CM.CM_DT,PAYMODE_GRP_NAME,PAYMODE_NAME,CM.CANCELLED,CM.USER_CODE,CM.BIN_ID
	UNION ALL
	SELECT CM.SHIFT_ID,LO.DEPT_ID,LO.DEPT_NAME,CM.CM_DT,CM.CANCELLED,PGM.PAYMODE_GRP_NAME,'CREDIT NOTE ISSUE' [PAYMODE_NAME],'SALE' AS TRAN_TYPE,
	SUM(PXD.AMOUNT) AS AMOUNT,CM.USER_CODE,CM.BIN_ID 
	FROM CMM01106 CM (NOLOCK)
	JOIN LOCATION  LO (NOLOCK) ON LO.DEPT_ID = CM.location_Code 
	JOIN PAYMODE_XN_DET PXD (NOLOCK) ON  PXD.MEMO_ID = CM.CM_ID
	JOIN PAYMODE_MST PM (NOLOCK) ON PM.PAYMODE_CODE = PXD.PAYMODE_CODE
	JOIN PAYMODE_GRP_MST PGM (NOLOCK) ON PGM.PAYMODE_GRP_CODE = PM.PAYMODE_GRP_CODE
	JOIN #TILLSHIFTS TS ON CM.SHIFT_ID=TS.SHIFT_ID
	WHERE PXD.XN_TYPE = 'SLS' AND CM.CANCELLED = 0 
	AND PXD.PAYMODE_CODE='0000004' AND PXD.AMOUNT<0 AND	SUBSTRING(CM_NO,5,1)='N'
	AND CM.location_Code  = (CASE WHEN @CDEPTID='' THEN CM.location_Code  ELSE @CDEPTID END)
	AND CM.USER_CODE = (CASE WHEN ISNULL(@CUSERCODE,'')='' THEN CM.USER_CODE ELSE @CUSERCODE END)
	AND CM.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN CM.BIN_ID ELSE @CBINID END)  
	GROUP BY CM.SHIFT_ID,LO.DEPT_ID,LO.DEPT_NAME,CM.CM_DT,PGM.PAYMODE_GRP_NAME,PM.PAYMODE_NAME,CM.CANCELLED,CM.USER_CODE 
			,CM.BIN_ID
	UNION ALL
	--LIST OF WHOLESALE FOR A GIVEN DATE RANGE
	SELECT '' AS SHIFT_ID,LO.DEPT_ID,LO.DEPT_NAME,INM.INV_DT,INM.CANCELLED,PGM.PAYMODE_GRP_NAME,PM.PAYMODE_NAME,'WHOLESALE' AS TRAN_TYPE,
	SUM(ISNULL(PXD.AMOUNT,0)) AS AMOUNT,INM.USER_CODE,INM.BIN_ID 
	FROM INM01106 INM (NOLOCK)
	JOIN LOCATION  LO (NOLOCK) ON LO.DEPT_ID = INM.location_Code 
	JOIN PAYMODE_XN_DET PXD (NOLOCK) ON  PXD.MEMO_ID = INM.INV_ID
	JOIN PAYMODE_MST PM (NOLOCK) ON PM.PAYMODE_CODE = PXD.PAYMODE_CODE
	JOIN PAYMODE_GRP_MST PGM (NOLOCK) ON PGM.PAYMODE_GRP_CODE = PM.PAYMODE_GRP_CODE
	WHERE PXD.XN_TYPE = 'WSL' AND INM.CANCELLED = 0 AND INV_DT=@DFORDT
	AND INM.location_Code  = (CASE WHEN @CDEPTID='' THEN INM.location_Code  ELSE @CDEPTID END)
	AND INM.USER_CODE = (CASE WHEN ISNULL(@CUSERCODE,'')='' THEN INM.USER_CODE ELSE @CUSERCODE END)
	AND INM.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN INM.BIN_ID ELSE @CBINID END)  
	GROUP BY LO.DEPT_ID,LO.DEPT_NAME,INM.INV_DT,PGM.PAYMODE_GRP_NAME,PM.PAYMODE_NAME,INM.CANCELLED,INM.USER_CODE 
			,INM.BIN_ID
	UNION ALL
	--LIST OF PAYMENTS,OUTSTANDING RECEIPTS,ADVANCES,FEES/OTHER CHARGES
	SELECT AR.SHIFT_ID,LO.DEPT_ID,LO.DEPT_NAME,AR.ADV_REC_DT,AR.CANCELLED,PGM.PAYMODE_GRP_NAME,PM.PAYMODE_NAME,
	(CASE WHEN AR.ARC_TYPE=1 THEN
	(CASE WHEN AR.ARCT=1 THEN 'O/S RECEIPTS' WHEN AR.ARCT=2 THEN 'ADVANCES' WHEN AR.ARCT IN (3) THEN 'FEES/O/C'
		  WHEN AR.ARCT=5 THEN 'D.CARD ISS/REN' END) 
	      WHEN AR.ARC_TYPE=2 THEN 'PAYMENT' ELSE '' END) AS TRAN_TYPE,
	SUM(PXD.AMOUNT) AS AMOUNT,AR.USER_CODE,AR.BIN_ID 
	FROM ARC01106 AR
	JOIN LOCATION  LO ON LO.DEPT_ID = AR.location_Code 
	JOIN PAYMODE_XN_DET PXD ON  PXD.MEMO_ID = AR.ADV_REC_ID
	JOIN PAYMODE_MST PM ON PM.PAYMODE_CODE = PXD.PAYMODE_CODE
	JOIN PAYMODE_GRP_MST PGM ON PGM.PAYMODE_GRP_CODE = PM.PAYMODE_GRP_CODE
	JOIN #TILLSHIFTS TS ON AR.SHIFT_ID=TS.SHIFT_ID
	WHERE PXD.XN_TYPE = 'ARC' /*AND ARC_TYPE = 1*/ 
	AND AR.location_Code  = (CASE WHEN @CDEPTID='' THEN AR.location_Code  ELSE @CDEPTID END)
	AND AR.USER_CODE = (CASE WHEN ISNULL(@CUSERCODE,'')='' THEN AR.USER_CODE ELSE @CUSERCODE END)
	AND AR.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN AR.BIN_ID ELSE @CBINID END)  
	AND CANCELLED = 0
	GROUP BY AR.SHIFT_ID,LO.DEPT_ID,LO.DEPT_NAME,AR.ADV_REC_DT,PGM.PAYMODE_GRP_NAME,PM.PAYMODE_NAME,ARCT,AR.CANCELLED
	,AR.USER_CODE,AR.BIN_ID,AR.ARC_TYPE 
	UNION ALL
	SELECT '' AS SHIFT_ID,A.LOCATION_CODE AS DEPT_ID,
	LO.DEPT_NAME,A.MEMO_DT ,A.CANCELLED,'' AS PAYMODE_GRP_NAME,'' AS PAYMODE_NAME,
	 'TRANSFER LOCKER TO BANK' AS TRAN_TYPE,
	SUM(A.AMOUNT) AS AMOUNT,A.USER_CODE,'000' AS BIN_ID  
	FROM TILL_BANK_TRANSFER A 
	JOIN LOCATION LO ON A.location_Code =LO.DEPT_ID 
	WHERE ISNULL(REFLIFTID,'')=''
	AND A.MEMO_DT =@DFORDT
	AND A.location_Code  = (CASE WHEN @CDEPTID='' THEN A.location_Code ELSE  @CDEPTID END)
	AND A.USER_CODE = (CASE WHEN ISNULL(@CUSERCODE,'')='' THEN A.USER_CODE ELSE @CUSERCODE END)
	AND CANCELLED = 0
	GROUP BY A.LOCATION_CODE,A.USER_CODE,LO.DEPT_NAME,A.MEMO_DT,A.CANCELLED
	ORDER BY DEPT_ID
--	SELECT * FROM #SLS_REPORT --WHERE PAYMODE_NAME='INR'

	IF OBJECT_ID('TEMPDB..#DISCOUNT_DET','U') IS NOT NULL
		DROP TABLE #DISCOUNT_DET
	
	--BILLWISE DISCOUNT AMOUNT FROM SALES
	SELECT CM.SHIFT_ID,LO.DEPT_ID,LO.DEPT_NAME,CM.CM_DT AS XN_DT,CM.CM_ID AS XN_ID,CM.CM_NO AS XN_NO,CM.USER_CODE,CM.BIN_ID
	,(ISNULL(CM.DISCOUNT_AMOUNT,0)+SUM(ISNULL(CMD.DISCOUNT_AMOUNT,0))) AS DISCOUNT_AMOUNT
	,'SALE' AS TRAN_TYPE
	INTO #DISCOUNT_DET
	FROM CMM01106 CM (NOLOCK)
	LEFT JOIN 
	(
		SELECT DISTINCT CM_ID FROM DSD01106 DSD(NOLOCK) JOIN DSM01106 DSM(NOLOCK) ON DSD.DS_ID=DSM.DS_ID
		WHERE DSM.CANCELLED=0
	)DSD ON CM.CM_ID=DSD.CM_ID
	LEFT JOIN 
	(
		SELECT DISTINCT A.CM_ID 
		FROM  CMM01106  A (NOLOCK) 
		JOIN VW_BILL_PAYMODE PAY (NOLOCK) ON PAY.MEMO_ID=A.CM_ID AND PAY.XN_TYPE='SLS'
		WHERE A.CM_DT=@DFORDT
		AND (A.NET_AMOUNT<0 AND PAY.CREDIT_AMOUNT<>0)/*CREDITNOTE AND CREDIT REFUND BILLS*/
		AND A.CANCELLED = 0 
	)CMM ON CM.CM_ID=CMM.CM_ID
	JOIN LOCATION  LO (NOLOCK) ON LO.DEPT_ID = CM.location_Code 
	JOIN CMD01106 CMD (NOLOCK) ON CMD.CM_ID=CM.CM_ID
	JOIN #TILLSHIFTS TS ON CM.SHIFT_ID=TS.SHIFT_ID
	WHERE CM.CANCELLED = 0 
	AND CM.location_Code  = (CASE WHEN @CDEPTID='' THEN CM.location_Code  ELSE @CDEPTID END)
	AND CM.USER_CODE = (CASE WHEN ISNULL(@CUSERCODE,'')='' THEN CM.USER_CODE ELSE @CUSERCODE END)
	AND CM.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN CM.BIN_ID ELSE @CBINID END)  
	AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CMM.CM_ID IS NOT NULL)) OR (@BDSM=0))
	GROUP BY CM.SHIFT_ID,LO.DEPT_ID,LO.DEPT_NAME,CM.CM_DT,CM.CM_ID,CM.CM_NO,CM.USER_CODE,CM.BIN_ID,ISNULL(CM.DISCOUNT_AMOUNT,0)
	UNION ALL 
	--BILLWISE DISCOUNT FROM WHOLESALE
	SELECT '' AS SHIFT_ID,LO.DEPT_ID,LO.DEPT_NAME,INM.INV_DT AS XN_DT,INM.INV_ID AS XN_ID,INM.INV_NO AS XN_NO,INM.USER_CODE,INM.BIN_ID 
	,(ISNULL(INM.DISCOUNT_AMOUNT,0)+SUM(ISNULL(IND.DISCOUNT_AMOUNT,0))) AS DISCOUNT_AMOUNT
	,'WHOLESALE' AS TRAN_TYPE
	FROM INM01106 INM (NOLOCK)
	JOIN LOCATION  LO (NOLOCK) ON LO.DEPT_ID = INM.location_Code 
	JOIN IND01106 IND (NOLOCK) ON IND.INV_ID=INM.INV_ID
	WHERE INM.CANCELLED = 0 AND INV_DT=@DFORDT
	AND INM.location_Code  = (CASE WHEN @CDEPTID='' THEN INM.location_Code  ELSE @CDEPTID END)
	AND INM.USER_CODE = (CASE WHEN ISNULL(@CUSERCODE,'')='' THEN INM.USER_CODE ELSE @CUSERCODE END)
	AND INM.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN INM.BIN_ID ELSE @CBINID END)  
	GROUP BY LO.DEPT_ID,LO.DEPT_NAME,INM.INV_DT,INM.INV_ID,INM.INV_NO,INM.USER_CODE,INM.BIN_ID,ISNULL(INM.DISCOUNT_AMOUNT,0) 
	UNION ALL
	--BILLWISE DISCOUNT FROM PAYMENTS,OUTSTANDING RECEIPTS,ADVANCES,FEES/OTHER CHARGES
	SELECT AR.SHIFT_ID,LO.DEPT_ID,LO.DEPT_NAME,AR.ADV_REC_DT,AR.ADV_REC_ID AS XN_ID,AR.ADV_REC_NO AS XN_NO,AR.USER_CODE,AR.BIN_ID 
	,AR.DISCOUNT_AMOUNT
	,(CASE WHEN AR.ARC_TYPE=1 THEN
	 (CASE WHEN AR.ARCT=1 THEN 'O/S RECEIPTS' WHEN AR.ARCT=2 THEN 'ADVANCES' WHEN AR.ARCT IN (3,4) THEN 'FEES/O/C' END) 
	      WHEN AR.ARC_TYPE=2 THEN 'PAYMENT' ELSE '' END) AS TRAN_TYPE
	FROM ARC01106 AR
	JOIN LOCATION  LO ON LO.DEPT_ID = AR.location_Code 
	JOIN #TILLSHIFTS TS ON AR.SHIFT_ID=TS.SHIFT_ID
	WHERE AR.location_Code  = (CASE WHEN @CDEPTID='' THEN AR.location_Code  ELSE @CDEPTID END)
	AND AR.USER_CODE = (CASE WHEN ISNULL(@CUSERCODE,'')='' THEN AR.USER_CODE ELSE @CUSERCODE END)
	AND AR.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN AR.BIN_ID ELSE @CBINID END)  
	ORDER BY DEPT_ID
	
	--SELECT 'CHK',* FROM #SLS_REPORT
	
	IF OBJECT_ID ('#FINAL_SLS_REPORT','U') IS NOT NULL
		DROP TABLE #FINAL_SLS_REPORT 
	
	CREATE TABLE #FINAL_SLS_REPORT (SHIFT_ID VARCHAR(20),DEPT_ID VARCHAR(10),DEPT_NAME VARCHAR(100),CM_DT DATETIME
								   ,PAYMODE_GRP_NAME VARCHAR(100),PAYMODE_NAME VARCHAR(100),STATUS VARCHAR(10)
								   ,SALE NUMERIC(14,2),OS_RECEIPTS NUMERIC(14,2),ADVANCES NUMERIC(14,2)
								   ,OC NUMERIC(14,2),D_CARD_ISS_REN NUMERIC(14,2),USER_CODE VARCHAR(7),BIN_ID VARCHAR(7)
								   ,PAYMENT NUMERIC(14,2),WHOLESALE NUMERIC(14,2),LOCKER_TO_BANK NUMERIC(14,2))
	
	INSERT INTO #FINAL_SLS_REPORT
	SELECT SHIFT_ID,DEPT_ID,DEPT_NAME,CM_DT,PAYMODE_GRP_NAME,PAYMODE_NAME,(CASE WHEN CANCELLED=1 THEN 'CANCELLED' ELSE '' 
	END) AS STATUS,AMOUNT,0,0,0,0,USER_CODE,BIN_ID,0,0,0 FROM #SLS_REPORT WHERE TRAN_TYPE = 'SALE'
	UNION ALL
	SELECT SHIFT_ID,DEPT_ID,DEPT_NAME,CM_DT,PAYMODE_GRP_NAME,PAYMODE_NAME,(CASE WHEN CANCELLED=1 THEN 'CANCELLED' ELSE '' 
	END) AS STATUS,0,0,0,0,0,USER_CODE,BIN_ID,0,AMOUNT,0 FROM #SLS_REPORT WHERE TRAN_TYPE = 'WHOLESALE'
	UNION ALL
	SELECT SHIFT_ID,DEPT_ID,DEPT_NAME,CM_DT,PAYMODE_GRP_NAME,PAYMODE_NAME,(CASE WHEN CANCELLED=1 THEN 'CANCELLED' ELSE '' 
	END) AS STATUS,0,AMOUNT,0,0,0,USER_CODE,BIN_ID,0,0,0 FROM #SLS_REPORT WHERE TRAN_TYPE = 'O/S RECEIPTS'
	UNION ALL
	SELECT SHIFT_ID,DEPT_ID,DEPT_NAME,CM_DT,PAYMODE_GRP_NAME,PAYMODE_NAME,(CASE WHEN CANCELLED=1 THEN 'CANCELLED' ELSE '' 
	END) AS STATUS,0,0,AMOUNT,0,0,USER_CODE,BIN_ID,0,0,0 FROM #SLS_REPORT WHERE TRAN_TYPE = 'ADVANCES'
	UNION ALL
	SELECT SHIFT_ID,DEPT_ID,DEPT_NAME,CM_DT,PAYMODE_GRP_NAME,PAYMODE_NAME,(CASE WHEN CANCELLED=1 THEN 'CANCELLED' ELSE '' 
	END) AS STATUS,0,0,0,AMOUNT,0,USER_CODE,BIN_ID,0,0,0 FROM #SLS_REPORT WHERE TRAN_TYPE = 'FEES/O/C'
	UNION ALL
	SELECT SHIFT_ID,DEPT_ID,DEPT_NAME,CM_DT,PAYMODE_GRP_NAME,PAYMODE_NAME,(CASE WHEN CANCELLED=1 THEN 'CANCELLED' ELSE '' 
	END) AS STATUS,0,0,0,0,0,USER_CODE,BIN_ID,AMOUNT,0,0 FROM #SLS_REPORT WHERE TRAN_TYPE = 'PAYMENT'
	UNION ALL
	SELECT SHIFT_ID,DEPT_ID,DEPT_NAME,CM_DT,PAYMODE_GRP_NAME,PAYMODE_NAME,(CASE WHEN CANCELLED=1 THEN 'CANCELLED' ELSE '' 
	END) AS STATUS,0,0,0,0,AMOUNT,USER_CODE,BIN_ID,0,0,0 FROM #SLS_REPORT WHERE TRAN_TYPE = 'D.CARD ISS/REN'

	UNION ALL
	SELECT SHIFT_ID,DEPT_ID,DEPT_NAME,CM_DT,PAYMODE_GRP_NAME,PAYMODE_NAME,(CASE WHEN CANCELLED=1 THEN 'CANCELLED' ELSE '' 
	END) AS STATUS,0,0,0,0,0,USER_CODE,BIN_ID,0,0,AMOUNT FROM #SLS_REPORT WHERE TRAN_TYPE = 'TRANSFER LOCKER TO BANK'
	UNION ALL
	SELECT SHIFT_ID,DEPT_ID,DEPT_NAME,CM_DT,PAYMODE_GRP_NAME,PAYMODE_NAME,(CASE WHEN CANCELLED=1 THEN 'CANCELLED' ELSE '' 
	END) AS STATUS,0,0,0,AMOUNT,0,USER_CODE,BIN_ID,0,0,0 FROM #SLS_REPORT WHERE TRAN_TYPE = 'GV SALE'
	
	--SELECT * FROM #FINAL_SLS_REPORT
	--RETURN
	IF @BCLUBBED=1
	BEGIN 
		SELECT '' AS SHIFT_ID,'' DEPT_ID,'' BIN_ID,'' DEPT_NAME,'' AS USER_CODE,'' AS USERNAME,'' AS CM_DT ,PAYMODE_GRP_NAME,PAYMODE_NAME
			  ,SUM(SALE) AS SALE,SUM(OS_RECEIPTS) AS OS_RECEIPTS,SUM(ADVANCES) AS ADVANCES, SUM(OC) AS OC 
			  ,SUM(D_CARD_ISS_REN) AS D_CARD_ISS_REN
			  ,SUM(PAYMENT) AS PAYMENT,SUM(WHOLESALE) AS WHOLESALE,SUM(LOCKER_TO_BANK) AS LOCKER_TO_BANK
		FROM #FINAL_SLS_REPORT A
		GROUP BY PAYMODE_GRP_NAME,PAYMODE_NAME
	END
	ELSE
	BEGIN 
		SELECT SHIFT_ID,DEPT_ID,BIN_ID,DEPT_NAME,A.USER_CODE,USERNAME,'' AS CM_DT ,PAYMODE_GRP_NAME,PAYMODE_NAME
			  ,SUM(SALE) AS SALE,SUM(OS_RECEIPTS) AS OS_RECEIPTS,SUM(ADVANCES) AS ADVANCES, SUM(OC) AS OC 
			  ,SUM(D_CARD_ISS_REN) AS D_CARD_ISS_REN
			  ,SUM(PAYMENT) AS PAYMENT,SUM(WHOLESALE) AS WHOLESALE ,SUM(LOCKER_TO_BANK) AS LOCKER_TO_BANK
		FROM #FINAL_SLS_REPORT A
		JOIN USERS U ON A.USER_CODE=U.USER_CODE
		GROUP BY SHIFT_ID,DEPT_ID,BIN_ID,DEPT_NAME,PAYMODE_GRP_NAME,PAYMODE_NAME,A.USER_CODE,USERNAME	
	END
	
	/*
		ALL COLUMN WIDTH SET TO VARCHAR(MAX) DUE TO UNIDENTIFIED STRING OR BINARY DATA WOULD BE TRUNCATED 
		ERROR MESSAGE.
	*/
	DECLARE @REP_DETAILS TABLE (SHIFT_ID VARCHAR(MAX),PRINT_ORDER NUMERIC(18,2), PRINT_DETAIL VARCHAR(MAX),XN_TYPE VARCHAR(MAX),   
								DEPT_ID VARCHAR(MAX), USER_CODE VARCHAR(MAX), MEMO_NO VARCHAR(MAX),   
								MEMO_DT DATETIME, ADJ_MEMO_NO VARCHAR(MAX), ADJ_MEMO_DT DATETIME,   
								AMOUNT NUMERIC(18,2), CUSTOMER_CODE VARCHAR(MAX), BILL_AMOUNT NUMERIC(18,2)
								,CASH NUMERIC(18,2),CC NUMERIC(18,2),MISC NUMERIC(18,2),BIN_ID VARCHAR(MAX)
								,PAYMODE_GRP_NAME VARCHAR(MAX),DISCOUNT_AMOUNT NUMERIC(18,2),CARD_NAME VARCHAR(MAX))  
	
	--IF (@BCRISSUE=1 OR @BOSRCT=1 OR @BCRNOTE=1 OR @BCRNOTEADJSLS=1 OR 
	--	@BCRNOTEADJRCT=1 OR @BADVADJPYT=1 OR @BADVADJSLS=1 OR @BADVRCT=1 OR @BDOCRCV=1 OR @BOC=1)
	--BEGIN 
		IF @BCRISSUE=1 	
		--LIST OF CREDIT ISSUED
		BEGIN
			INSERT @REP_DETAILS (PRINT_ORDER, PRINT_DETAIL,XN_TYPE , DEPT_ID, USER_CODE, 
								 MEMO_NO, MEMO_DT, ADJ_MEMO_NO, ADJ_MEMO_DT, 
								 AMOUNT, CUSTOMER_CODE, BILL_AMOUNT, BIN_ID,PAYMODE_GRP_NAME,DISCOUNT_AMOUNT,CARD_NAME
								 ,SHIFT_ID )
			SELECT	1 AS PRINT_ORDER, 'LIST OF CREDIT ISSUED' AS PRINT_DETAIL,'SLS' AS XN_TYPE,
					A.location_Code AS DEPT_ID, A.USER_CODE,
					A.CM_NO AS MEMO_NO, A.CM_DT AS MEMO_DT,
					'' AS ADJ_MEMO_NO, '' AS ADJ_MEMO_DT,
					B.AMOUNT,
					A.CUSTOMER_CODE
					--(CASE WHEN C.CUSTOMER_FNAME <> '' AND  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME WHEN  C.CUSTOMER_FNAME <> '' THEN C.CUSTOMER_FNAME WHEN  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_LNAME ELSE USER_CUSTOMER_CODE END) AS CUSTOMER_NAME
					--(CASE WHEN  C.CUSTOMER_FNAME = '' THEN USER_CUSTOMER_CODE ELSE C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME END) AS CUSTOMER_NAME
					,A.NET_AMOUNT AS BILL_AMOUNT,A.BIN_ID,PGM.PAYMODE_GRP_NAME,CONVERT(NUMERIC(18,2),0) AS DISCOUNT_AMOUNT
					,CASE WHEN D.PAYMODE_GRP_CODE='0000002' THEN D.PAYMODE_NAME ELSE '' END
					,A.SHIFT_ID
			FROM CMM01106 A
			LEFT JOIN 
			(
				SELECT DISTINCT CM_ID FROM DSD01106 DSD(NOLOCK) JOIN DSM01106 DSM(NOLOCK) ON DSD.DS_ID=DSM.DS_ID
				WHERE DSM.CANCELLED=0
			)DSD ON A.CM_ID=DSD.CM_ID
			LEFT JOIN 
			(
				SELECT DISTINCT A.CM_ID 
				FROM  CMM01106  A (NOLOCK) 
				JOIN VW_BILL_PAYMODE PAY (NOLOCK) ON PAY.MEMO_ID=A.CM_ID AND PAY.XN_TYPE='SLS'
				WHERE A.CM_DT=@DFORDT
				AND (A.NET_AMOUNT<0 AND PAY.CREDIT_AMOUNT<>0)/*CREDITNOTE AND CREDIT REFUND BILLS*/
				AND A.CANCELLED = 0 
			)CMM ON A.CM_ID=CMM.CM_ID
			JOIN PAYMODE_XN_DET B ON A.CM_ID = B.MEMO_ID 
			JOIN PAYMODE_MST D ON D.PAYMODE_CODE=B.PAYMODE_CODE
			JOIN PAYMODE_GRP_MST PGM (NOLOCK) ON PGM.PAYMODE_GRP_CODE = D.PAYMODE_GRP_CODE
			JOIN #TILLSHIFTS TS ON A.SHIFT_ID=TS.SHIFT_ID
			--JOIN CUSTDYM C ON A.CUSTOMER_CODE = C.CUSTOMER_CODE
			WHERE A.location_Code  =(CASE WHEN ISNULL(@CDEPTID,'')='' THEN A.location_Code  ELSE @CDEPTID END)         
			AND A.CANCELLED = 0 
			AND B.XN_TYPE = 'SLS' AND D.PAYMODE_GRP_CODE = '0000004' AND B.AMOUNT>0
			AND A.USER_CODE = (CASE WHEN ISNULL(@CUSERCODE,'')='' THEN A.USER_CODE ELSE @CUSERCODE END)
			AND A.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN A.BIN_ID ELSE @CBINID END)  
			AND  ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CMM.CM_ID IS NOT NULL)) OR (@BDSM=0))
		END	
		
		IF @BCRREFUND=1
		BEGIN	
			INSERT @REP_DETAILS (PRINT_ORDER, PRINT_DETAIL,XN_TYPE , DEPT_ID, USER_CODE, 
								 MEMO_NO, MEMO_DT, ADJ_MEMO_NO, ADJ_MEMO_DT, 
								 AMOUNT, CUSTOMER_CODE, BILL_AMOUNT, BIN_ID,PAYMODE_GRP_NAME,DISCOUNT_AMOUNT
								 ,CARD_NAME,SHIFT_ID  )
			SELECT	1.1 AS PRINT_ORDER, 'LIST OF CREDIT REFUNDS' AS PRINT_DETAIL,'SLS' AS XN_TYPE,
					A.location_Code  AS DEPT_ID, A.USER_CODE,
					A.CM_NO AS MEMO_NO, A.CM_DT AS MEMO_DT,
					E.CM_NO AS ADJ_MEMO_NO,E.CM_DT AS ADJ_MEMO_DT,
					ABS(B.AMOUNT) AS [AMOUNT],
					A.CUSTOMER_CODE
					--(CASE WHEN C.CUSTOMER_FNAME <> '' AND  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME WHEN  C.CUSTOMER_FNAME <> '' THEN C.CUSTOMER_FNAME WHEN  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_LNAME ELSE USER_CUSTOMER_CODE END) AS CUSTOMER_NAME
					--(CASE WHEN  C.CUSTOMER_FNAME = '' THEN USER_CUSTOMER_CODE ELSE C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME END) AS CUSTOMER_NAME
					,A.NET_AMOUNT AS BILL_AMOUNT,A.BIN_ID,PGM.PAYMODE_GRP_NAME,CONVERT(NUMERIC(18,2),0) AS DISCOUNT_AMOUNT
					,CASE WHEN D.PAYMODE_GRP_CODE='0000002' THEN D.PAYMODE_NAME ELSE '' END
					,A.SHIFT_ID
			FROM CMM01106 A
			JOIN PAYMODE_XN_DET B ON A.CM_ID = B.MEMO_ID 
			JOIN PAYMODE_MST D ON D.PAYMODE_CODE=B.PAYMODE_CODE
			JOIN PAYMODE_GRP_MST PGM (NOLOCK) ON PGM.PAYMODE_GRP_CODE = D.PAYMODE_GRP_CODE
			--JOIN CUSTDYM C ON A.CUSTOMER_CODE = C.CUSTOMER_CODE
			JOIN CMM01106 E ON E.CM_ID=B.ADJ_MEMO_ID 
			JOIN #TILLSHIFTS TS ON A.SHIFT_ID=TS.SHIFT_ID
			WHERE A.location_Code  =(CASE WHEN ISNULL(@CDEPTID,'')='' THEN A.location_Code  ELSE @CDEPTID END)         
			AND A.CANCELLED = 0 
			AND B.XN_TYPE = 'SLS' AND D.PAYMODE_CODE = 'CMR0001' AND B.AMOUNT<0
			AND A.USER_CODE = (CASE WHEN ISNULL(@CUSERCODE,'')='' THEN A.USER_CODE ELSE @CUSERCODE END)
			AND A.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN A.BIN_ID ELSE @CBINID END)  
		END
		
		IF @BOSRCT=1
		--LIST OF OUTSTANDING RECEIPT
		INSERT @REP_DETAILS( PRINT_ORDER, PRINT_DETAIL,XN_TYPE, DEPT_ID, USER_CODE, 
							 MEMO_NO, MEMO_DT, ADJ_MEMO_NO, ADJ_MEMO_DT, 
							 AMOUNT, CUSTOMER_CODE, BILL_AMOUNT,CASH,CC,BIN_ID
							 ,PAYMODE_GRP_NAME,DISCOUNT_AMOUNT,CARD_NAME,SHIFT_ID  )
		SELECT	2 AS PRINT_ORDER, 'LIST OF OUTSTANDING RECEIVED' AS PRINT_DETAIL,'' AS XN_TYPE,
				A.location_Code   AS DEPT_ID, A.USER_CODE,
				 A.ADV_REC_NO AS MEMO_NO,A.ADV_REC_DT AS MEMO_DT  ,
				DBO.FN_GETAGAINSTBILL(A.ADV_REC_ID) AS ADJ_MEMO_NO, '' AS ADJ_MEMO_DT,
				(CASE WHEN P.PAYMODE_GRP_CODE = '0000001' THEN P.CASH WHEN P.PAYMODE_GRP_CODE = '0000002' THEN P.CC ELSE 0 END ) AS AMOUNT, 
				A.CUSTOMER_CODE,
				--(CASE WHEN C.CUSTOMER_FNAME <> '' AND  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME WHEN  C.CUSTOMER_FNAME <> '' THEN C.CUSTOMER_FNAME WHEN  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_LNAME ELSE USER_CUSTOMER_CODE END) AS CUSTOMER_NAME,
				--(CASE WHEN  C.CUSTOMER_FNAME = '' THEN USER_CUSTOMER_CODE ELSE C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME END) AS CUSTOMER_NAME,
				--A.NET_AMOUNT 
				(CASE WHEN P.PAYMODE_GRP_CODE = '0000001' THEN P.CASH+A.DISCOUNT_AMOUNT WHEN P.PAYMODE_GRP_CODE = '0000002' THEN P.CC+A.DISCOUNT_AMOUNT ELSE 0 END ) AS BILL_AMOUNT,
				P.CASH,P.CC,A.BIN_ID,P.PAYMODE_GRP_NAME,A.DISCOUNT_AMOUNT
				,P.CARD_NAME,A.SHIFT_ID
		FROM ARC01106 A
		JOIN 
		   (SELECT MEMO_ID,C.PAYMODE_GRP_CODE,ISNULL(SUM(CASE WHEN C.PAYMODE_GRP_CODE = '0000001' THEN A.AMOUNT END),0) AS CASH,
			ISNULL(SUM(CASE WHEN C.PAYMODE_GRP_CODE = '0000002' THEN A.AMOUNT END),0) AS CC 
			,C.PAYMODE_GRP_NAME,CASE WHEN C.PAYMODE_GRP_CODE = '0000002' THEN B.PAYMODE_NAME ELSE '' END AS CARD_NAME
			FROM PAYMODE_XN_DET A 
			JOIN PAYMODE_MST B ON A.PAYMODE_CODE = B.PAYMODE_CODE
			JOIN PAYMODE_GRP_MST C ON C.PAYMODE_GRP_CODE = B.PAYMODE_GRP_CODE
			JOIN ARC01106 D ON D.ADV_REC_ID=A.MEMO_ID
			JOIN #TILLSHIFTS TS ON D.SHIFT_ID=TS.SHIFT_ID
			WHERE A.XN_TYPE='ARC' 
			AND C.PAYMODE_GRP_CODE IN ('0000002','0000001') 
			GROUP BY MEMO_ID,C.PAYMODE_GRP_CODE,C.PAYMODE_GRP_NAME,B.PAYMODE_NAME) 
			P ON P.MEMO_ID= A.ADV_REC_ID
		--JOIN CUSTDYM C ON A.CUSTOMER_CODE = C.CUSTOMER_CODE
		JOIN #TILLSHIFTS TS ON A.SHIFT_ID=TS.SHIFT_ID
		WHERE A.location_Code  =(CASE WHEN @CDEPTID='' THEN A.location_Code  ELSE @CDEPTID END)         
		AND A.ARC_TYPE=1 AND A.ARCT=1 AND A.CANCELLED = 0
		AND A.USER_CODE=(CASE WHEN @CUSERCODE='' THEN A.USER_CODE ELSE @CUSERCODE END)
		AND A.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN A.BIN_ID ELSE @CBINID END)  
		
		--LIST OF DISCOUNT CARD ISSUED/RENEWED
		IF @BDCARD=1
		INSERT @REP_DETAILS(PRINT_ORDER,PRINT_DETAIL,XN_TYPE,DEPT_ID,USER_CODE,MEMO_NO,   
							MEMO_DT,ADJ_MEMO_NO,ADJ_MEMO_DT,AMOUNT,CUSTOMER_CODE,BILL_AMOUNT
						   ,CASH,CC,MISC,BIN_ID,PAYMODE_GRP_NAME,DISCOUNT_AMOUNT,CARD_NAME,SHIFT_ID)
		SELECT	2.1 AS PRINT_ORDER, 'LIST OF DISCOUNT CARD ISSUE/RENEWAL' AS PRINT_DETAIL,'ARC' AS XN_TYPE,
				A.location_Code  AS DEPT_ID, A.USER_CODE,
				A.ADV_REC_NO AS MEMO_NO, A.ADV_REC_DT AS MEMO_DT,  
				'' AS ADJ_MEMO_NO, '' AS ADJ_MEMO_DT,B.AMOUNT,A.CUSTOMER_CODE
				,A.AMOUNT AS BILL_AMOUNT,0 AS CASH,0 AS CC,0 AS MISC,A.BIN_ID,PGM.PAYMODE_GRP_NAME,A.DISCOUNT_AMOUNT
				,'NO.- '+ISNULL(A.CARD_NO,'')+',TYPE- '+ISNULL(BM.CARD_NAME,'')+',ISSUE DT.- '+CONVERT(VARCHAR,A.CARD_ISSUE_DT,110) AS CARD_NAME  
				,A.SHIFT_ID
		FROM ARC01106 A
		JOIN PAYMODE_XN_DET B ON A.ADV_REC_ID = B.MEMO_ID AND B.XN_TYPE = 'ARC'
		JOIN PAYMODE_MST D ON D.PAYMODE_CODE=B.PAYMODE_CODE
		JOIN PAYMODE_GRP_MST PGM ON PGM.PAYMODE_GRP_CODE = D.PAYMODE_GRP_CODE
		JOIN #TILLSHIFTS TS ON A.SHIFT_ID=TS.SHIFT_ID
		LEFT OUTER JOIN BWD_MST BM ON BM.MEMO_ID=A.CARD_CODE
		WHERE A.ARC_TYPE=1 AND A.ARCT=5 AND A.CANCELLED = 0
		AND A.location_Code =(CASE WHEN @CDEPTID='' THEN A.location_Code  ELSE @CDEPTID END)         
		AND A.USER_CODE=(CASE WHEN @CUSERCODE='' THEN A.USER_CODE ELSE @CUSERCODE END) 
		AND A.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN A.BIN_ID ELSE @CBINID END) 
				
		IF @BCRNOTE=1
		-- LIST OF CREDIT NOTES
		INSERT @REP_DETAILS (PRINT_ORDER, PRINT_DETAIL,XN_TYPE ,DEPT_ID, USER_CODE, 
							 MEMO_NO, MEMO_DT, ADJ_MEMO_NO, ADJ_MEMO_DT, 
							 AMOUNT, CUSTOMER_CODE, BILL_AMOUNT,BIN_ID,PAYMODE_GRP_NAME,DISCOUNT_AMOUNT,CARD_NAME
							 ,SHIFT_ID  )
		SELECT	3 AS PRINT_ORDER, 'LIST OF CREDIT NOTES ISSUED' AS PRINT_DETAIL,'SLS' AS XN_TYPE,
				A.location_Code  AS DEPT_ID, A.USER_CODE,
				A.CM_NO AS MEMO_NO, A.CM_DT AS MEMO_DT,
				'' AS ADJ_MEMO_NO, '' AS ADJ_MEMO_DT,
				ABS(B.AMOUNT) AS AMOUNT,
				A.CUSTOMER_CODE,
				--(CASE WHEN C.CUSTOMER_FNAME <> '' AND  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME WHEN  C.CUSTOMER_FNAME <> '' THEN C.CUSTOMER_FNAME WHEN  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_LNAME ELSE USER_CUSTOMER_CODE END) AS CUSTOMER_NAME,
				--(CASE WHEN  C.CUSTOMER_FNAME = '' THEN USER_CUSTOMER_CODE ELSE C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME END) AS CUSTOMER_NAME,
				A.NET_AMOUNT AS BILL_AMOUNT,A.BIN_ID,PGM.PAYMODE_GRP_NAME,A.DISCOUNT_AMOUNT
				,CASE WHEN D.PAYMODE_GRP_CODE='0000002' THEN D.PAYMODE_NAME ELSE '' END
				,A.SHIFT_ID
		FROM CMM01106 A
		JOIN PAYMODE_XN_DET B ON A.CM_ID = B.MEMO_ID 
		--JOIN CUSTDYM C ON A.CUSTOMER_CODE = C.CUSTOMER_CODE
		JOIN PAYMODE_MST D ON D.PAYMODE_CODE=B.PAYMODE_CODE
		JOIN PAYMODE_GRP_MST PGM ON PGM.PAYMODE_GRP_CODE = D.PAYMODE_GRP_CODE
		LEFT JOIN 
		(
			SELECT DISTINCT CM_ID FROM DSD01106 DSD(NOLOCK) JOIN DSM01106 DSM(NOLOCK) ON DSD.DS_ID=DSM.DS_ID
			WHERE DSM.CANCELLED=0
		)DSD ON A.CM_ID=DSD.CM_ID
		LEFT JOIN 
		(
			SELECT DISTINCT A.CM_ID 
			FROM  CMM01106  A (NOLOCK) 
			JOIN VW_BILL_PAYMODE PAY (NOLOCK) ON PAY.MEMO_ID=A.CM_ID AND PAY.XN_TYPE='SLS'
			WHERE A.CM_DT=@DFORDT
			AND (A.NET_AMOUNT<0 AND PAY.CREDIT_AMOUNT<>0)/*CREDITNOTE AND CREDIT REFUND BILLS*/
			AND A.CANCELLED = 0 
		)CMM ON A.CM_ID=CMM.CM_ID
		JOIN #TILLSHIFTS TS ON A.SHIFT_ID=TS.SHIFT_ID
		WHERE A.location_Code =(CASE WHEN @CDEPTID='' THEN A.location_Code  ELSE @CDEPTID END)         
		AND   SUBSTRING(A.CM_NO,5,1) = 'N'
		AND A.CANCELLED = 0     
		AND A.USER_CODE=(CASE WHEN @CUSERCODE='' THEN A.USER_CODE ELSE @CUSERCODE END) 
		AND B.XN_TYPE = 'SLS' AND D.PAYMODE_CODE = '0000004' AND B.AMOUNT < 0
		AND A.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN A.BIN_ID ELSE @CBINID END)  
		AND  ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CMM.CM_ID IS NOT NULL)) OR (@BDSM=0))
		ORDER BY A.CM_DT, A.CM_NO
		
		
		IF @BCRNOTEADJSLS=1 
		-- LIST OF CREDIT NOTES ADJUSTED IN SALE
		INSERT @REP_DETAILS (PRINT_ORDER, PRINT_DETAIL,XN_TYPE ,DEPT_ID, USER_CODE, 
							 MEMO_NO, MEMO_DT, ADJ_MEMO_NO, ADJ_MEMO_DT, 
							 AMOUNT, CUSTOMER_CODE, BILL_AMOUNT,BIN_ID,PAYMODE_GRP_NAME,DISCOUNT_AMOUNT,CARD_NAME,SHIFT_ID  )
		SELECT	4 AS PRINT_ORDER, 'LIST OF CREDIT NOTES ADJUSTED' AS PRINT_DETAIL,'SLS' AS XN_TYPE,
				A.location_Code AS DEPT_ID, A.USER_CODE,
				A.CM_NO AS MEMO_NO, A.CM_DT AS MEMO_DT, 
				CN.CM_NO AS ADJ_MEMO_NO, CN.CM_DT AS ADJ_MEMO_DT,B.AMOUNT,
				A.CUSTOMER_CODE,
				--(CASE WHEN C.CUSTOMER_FNAME <> '' AND  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME WHEN  C.CUSTOMER_FNAME <> '' THEN C.CUSTOMER_FNAME WHEN  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_LNAME ELSE USER_CUSTOMER_CODE END) AS CUSTOMER_NAME,
				--(CASE WHEN  C.CUSTOMER_FNAME = '' THEN USER_CUSTOMER_CODE ELSE C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME END) AS CUSTOMER_NAME,
				A.NET_AMOUNT AS BILL_AMOUNT,A.BIN_ID,PGM.PAYMODE_GRP_NAME,A.DISCOUNT_AMOUNT
				,CASE WHEN D.PAYMODE_GRP_CODE='0000002' THEN D.PAYMODE_NAME ELSE '' END
				,A.CM_ID
		FROM CMM01106 A
		JOIN PAYMODE_XN_DET B ON A.CM_ID = B.MEMO_ID AND B.XN_TYPE = 'SLS'
		JOIN PAYMODE_MST D ON D.PAYMODE_CODE=B.PAYMODE_CODE
		JOIN PAYMODE_GRP_MST PGM ON PGM.PAYMODE_GRP_CODE = D.PAYMODE_GRP_CODE
		--JOIN CUSTDYM C ON A.CUSTOMER_CODE = C.CUSTOMER_CODE
		LEFT OUTER JOIN CMM01106 CN ON CN.CM_ID = B.ADJ_MEMO_ID
		LEFT JOIN 
		(
			SELECT DISTINCT CM_ID FROM DSD01106 DSD(NOLOCK) JOIN DSM01106 DSM(NOLOCK) ON DSD.DS_ID=DSM.DS_ID
			WHERE DSM.CANCELLED=0
		)DSD ON A.CM_ID=DSD.CM_ID
		LEFT JOIN 
		(
			SELECT DISTINCT A.CM_ID 
			FROM  CMM01106  A (NOLOCK) 
			JOIN VW_BILL_PAYMODE PAY (NOLOCK) ON PAY.MEMO_ID=A.CM_ID AND PAY.XN_TYPE='SLS'
			WHERE A.CM_DT=@DFORDT
			AND (A.NET_AMOUNT<0 AND PAY.CREDIT_AMOUNT<>0)/*CREDITNOTE AND CREDIT REFUND BILLS*/
			AND A.CANCELLED = 0 
		)CMM ON A.CM_ID=CMM.CM_ID
		JOIN #TILLSHIFTS TS ON A.SHIFT_ID=TS.SHIFT_ID
		WHERE B.PAYMODE_CODE = '0000001'  AND A.CANCELLED = 0 
		AND A.location_Code  =(CASE WHEN @CDEPTID='' THEN A.location_Code ELSE @CDEPTID END)         
		AND A.USER_CODE=(CASE WHEN @CUSERCODE='' THEN A.USER_CODE ELSE @CUSERCODE END) 
		AND A.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN A.BIN_ID ELSE @CBINID END)  
		AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR A.CM_ID IS NOT NULL)) OR (@BDSM=0))
				
		IF @BCRNOTEADJRCT=1
		-- LIST OF CREDIT NOTES ADJUSTED IN RECEIPT
		INSERT @REP_DETAILS (PRINT_ORDER, PRINT_DETAIL,XN_TYPE ,DEPT_ID, USER_CODE, 
							 MEMO_NO, MEMO_DT, ADJ_MEMO_NO, ADJ_MEMO_DT, 
							 AMOUNT, CUSTOMER_CODE, BILL_AMOUNT,BIN_ID,PAYMODE_GRP_NAME,DISCOUNT_AMOUNT
							 ,CARD_NAME,SHIFT_ID  )
		SELECT	5 AS PRINT_ORDER, 'LIST OF CREDIT NOTES ADJUSTED' AS PRINT_DETAIL,'REC' AS XN_TYPE,
				A.location_Code  AS DEPT_ID, A.USER_CODE,
				A.ADV_REC_NO AS MEMO_NO, A.ADV_REC_DT AS MEMO_DT,  
				CN.CM_NO AS ADJ_MEMO_NO, CN.CM_DT AS ADJ_MEMO_DT,
				B.AMOUNT, 
				A.CUSTOMER_CODE,
				--(CASE WHEN C.CUSTOMER_FNAME <> '' AND  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME WHEN  C.CUSTOMER_FNAME <> '' THEN C.CUSTOMER_FNAME WHEN  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_LNAME ELSE USER_CUSTOMER_CODE END) AS CUSTOMER_NAME,
				--(CASE WHEN  C.CUSTOMER_FNAME = '' THEN USER_CUSTOMER_CODE ELSE C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME END) AS CUSTOMER_NAME,
				A.NET_AMOUNT AS BILL_AMOUNT,A.BIN_ID,PGM.PAYMODE_GRP_NAME,A.DISCOUNT_AMOUNT
				,CASE WHEN D.PAYMODE_GRP_CODE='0000002' THEN D.PAYMODE_NAME ELSE '' END
				,A.SHIFT_ID
		FROM ARC01106 A
		JOIN PAYMODE_XN_DET B ON A.CM_ID = B.MEMO_ID AND B.XN_TYPE = 'REC'
		JOIN PAYMODE_MST D ON D.PAYMODE_CODE=B.PAYMODE_CODE
		JOIN PAYMODE_GRP_MST PGM ON PGM.PAYMODE_GRP_CODE = D.PAYMODE_GRP_CODE
		--JOIN CUSTDYM C ON A.CUSTOMER_CODE = C.CUSTOMER_CODE
		LEFT OUTER JOIN CMM01106 CN ON CN.CM_ID = B.ADJ_MEMO_ID
		JOIN #TILLSHIFTS TS ON A.SHIFT_ID=TS.SHIFT_ID
		WHERE B.PAYMODE_CODE = '0000001' AND A.CANCELLED = 0
		AND A.location_Code  =(CASE WHEN @CDEPTID='' THEN A.location_Code  ELSE @CDEPTID END)         
		AND A.USER_CODE=(CASE WHEN @CUSERCODE='' THEN A.USER_CODE ELSE @CUSERCODE END) 
		AND A.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN A.BIN_ID ELSE @CBINID END)  
		
		IF @BADVADJPYT=1
		--LIST OF ADVANCE ADJUSTED IN PAYMENTS/LIST OF ALL PAYMENTS
		INSERT @REP_DETAILS (PRINT_ORDER, PRINT_DETAIL,XN_TYPE, DEPT_ID, USER_CODE, 
							 MEMO_NO, MEMO_DT, ADJ_MEMO_NO, ADJ_MEMO_DT, 
							 AMOUNT, CUSTOMER_CODE, BILL_AMOUNT,BIN_ID,PAYMODE_GRP_NAME,DISCOUNT_AMOUNT,CARD_NAME 
							 ,SHIFT_ID)
		SELECT	6 AS PRINT_ORDER,(CASE WHEN PM.PAYMODE_CODE='0000002' THEN 'LIST OF ADVANCE ADJUSTED' ELSE 'LIST OF PAYMENTS' END) AS PRINT_DETAIL
		,'ARC' AS XN_TYPE,
				A.location_Code  AS DEPT_ID, A.USER_CODE,
				 A.ADV_REC_NO AS MEMO_NO,A.ADV_REC_DT AS MEMO_DT  ,
				'' AS ADJ_MEMO_NO, '' AS ADJ_MEMO_DT,
				D.NET_AMOUNT, 
				A.CUSTOMER_CODE,
				--(CASE WHEN C.CUSTOMER_FNAME <> '' AND  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME WHEN  C.CUSTOMER_FNAME <> '' THEN C.CUSTOMER_FNAME WHEN  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_LNAME ELSE USER_CUSTOMER_CODE END) AS CUSTOMER_NAME,
				--(CASE WHEN  C.CUSTOMER_FNAME = '' THEN USER_CUSTOMER_CODE ELSE C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME END) AS CUSTOMER_NAME,
				A.NET_AMOUNT AS BILL_AMOUNT,A.BIN_ID,PGM.PAYMODE_GRP_NAME,A.DISCOUNT_AMOUNT
				,CASE WHEN PM.PAYMODE_GRP_CODE='0000002' THEN PM.PAYMODE_NAME ELSE '' END
				,A.SHIFT_ID
		FROM ARC01106 A
		--JOIN CUSTDYM C ON A.CUSTOMER_CODE = C.CUSTOMER_CODE
		JOIN PAYMODE_XN_DET B ON B.MEMO_ID=A.ADV_REC_ID -----CHANGES A.CM_ID 17.12.14
		JOIN PAYMODE_MST PM ON PM.PAYMODE_CODE=B.PAYMODE_CODE
		JOIN PAYMODE_GRP_MST PGM ON PGM.PAYMODE_GRP_CODE = PM.PAYMODE_GRP_CODE
		JOIN ARC01106 D ON D.ADV_REC_ID=B.ADJ_MEMO_ID
		JOIN #TILLSHIFTS TS ON A.SHIFT_ID=TS.SHIFT_ID
		WHERE A.location_Code  =(CASE WHEN @CDEPTID='' THEN A.location_Code  ELSE @CDEPTID END)         
		AND A.ARC_TYPE=2 AND A.CANCELLED = 0
		AND A.USER_CODE=(CASE WHEN @CUSERCODE='' THEN A.USER_CODE ELSE @CUSERCODE END) 
		AND A.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN A.BIN_ID ELSE @CBINID END)  
		
			
		IF @BADVADJSLS=1
		--LIST OF ADVANCE ADJUSTED IN SALE
		INSERT @REP_DETAILS (PRINT_ORDER, PRINT_DETAIL,XN_TYPE, DEPT_ID, USER_CODE, 
							 MEMO_NO, MEMO_DT, ADJ_MEMO_NO, ADJ_MEMO_DT, 
							 AMOUNT, CUSTOMER_CODE, BILL_AMOUNT,BIN_ID,PAYMODE_GRP_NAME,DISCOUNT_AMOUNT,CARD_NAME
							 ,SHIFT_ID )
		SELECT	7 AS PRINT_ORDER, 'LIST OF ADVANCE ADJUSTED' AS PRINT_DETAIL,'SLS' AS XN_TYPE,
				A.location_Code  AS DEPT_ID, A.USER_CODE,
				 A.CM_NO AS MEMO_NO,A.CM_DT AS MEMO_DT  ,
				B.REF_NO AS ADJ_MEMO_NO, CN.ADV_REC_DT AS ADJ_MEMO_DT,
				 B.AMOUNT, 
				A.CUSTOMER_CODE,				 
				 --(CASE WHEN C.CUSTOMER_FNAME <> '' AND  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME WHEN  C.CUSTOMER_FNAME <> '' THEN C.CUSTOMER_FNAME WHEN  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_LNAME ELSE USER_CUSTOMER_CODE END) AS CUSTOMER_NAME,
				--(CASE WHEN  C.CUSTOMER_FNAME = '' THEN USER_CUSTOMER_CODE ELSE C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME END) AS CUSTOMER_NAME,
				A.NET_AMOUNT AS BILL_AMOUNT,A.BIN_ID,PGM.PAYMODE_GRP_NAME,CONVERT(NUMERIC(18,2),0) AS DISCOUNT_AMOUNT
				,CASE WHEN D.PAYMODE_GRP_CODE='0000002' THEN D.PAYMODE_NAME ELSE '' END
				,A.SHIFT_ID
		FROM CMM01106 A
		LEFT JOIN 
		(
			SELECT DISTINCT CM_ID FROM DSD01106 DSD(NOLOCK) JOIN DSM01106 DSM(NOLOCK) ON DSD.DS_ID=DSM.DS_ID
			WHERE DSM.CANCELLED=0
		)DSD ON A.CM_ID=DSD.CM_ID
		LEFT JOIN 
		(
			SELECT DISTINCT A.CM_ID 
			FROM  CMM01106  A (NOLOCK) 
			JOIN VW_BILL_PAYMODE PAY (NOLOCK) ON PAY.MEMO_ID=A.CM_ID AND PAY.XN_TYPE='SLS'
			WHERE A.CM_DT =@DFORDT
			AND (A.NET_AMOUNT<0 AND PAY.CREDIT_AMOUNT<>0)/*CREDITNOTE AND CREDIT REFUND BILLS*/
			AND A.CANCELLED = 0 
		)CMM ON A.CM_ID=CMM.CM_ID
		JOIN PAYMODE_XN_DET B ON B.MEMO_ID=A.CM_ID
		JOIN PAYMODE_MST D ON D.PAYMODE_CODE=B.PAYMODE_CODE
		JOIN PAYMODE_GRP_MST PGM ON PGM.PAYMODE_GRP_CODE = D.PAYMODE_GRP_CODE
		--JOIN CUSTDYM C ON A.CUSTOMER_CODE = C.CUSTOMER_CODE
		JOIN ARC01106 CN ON CN.ADV_REC_ID = B.ADJ_MEMO_ID
		JOIN #TILLSHIFTS TS ON A.SHIFT_ID=TS.SHIFT_ID
		WHERE D.PAYMODE_CODE='0000002' 
		AND A.location_Code  =(CASE WHEN @CDEPTID='' THEN A.location_Code  ELSE @CDEPTID END)         
		AND A.CANCELLED = 0
		AND A.USER_CODE=(CASE WHEN @CUSERCODE='' THEN A.USER_CODE ELSE @CUSERCODE END) 
		AND A.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN A.BIN_ID ELSE @CBINID END)  
		AND  ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CMM.CM_ID IS NOT NULL)) OR (@BDSM=0))
				
		IF @BADVRCT=1
		-- LIST OF ADVANCES IN RECEIPT  
		INSERT @REP_DETAILS (PRINT_ORDER, PRINT_DETAIL,XN_TYPE, DEPT_ID, USER_CODE, 
							 MEMO_NO, MEMO_DT, ADJ_MEMO_NO, ADJ_MEMO_DT, 
							 AMOUNT, CUSTOMER_CODE, BILL_AMOUNT,BIN_ID,PAYMODE_GRP_NAME,DISCOUNT_AMOUNT
							 ,CARD_NAME,SHIFT_ID )
		SELECT	 8 AS PRINT_ORDER, 'LIST OF ADVANCES RECEIVED' AS PRINT_DETAIL,'' AS XN_TYPE,
				A.location_Code AS DEPT_ID, A.USER_CODE,
				 A.ADV_REC_NO AS MEMO_NO,A.ADV_REC_DT AS MEMO_DT  ,
				'' AS ADJ_MEMO_NO, '' AS ADJ_MEMO_DT,
				ISNULL(B.AMOUNT,0) AS AMOUNT, --CHANGES BY DISNKAR B.AMOUNT
				A.CUSTOMER_CODE,
				--(CASE WHEN C.CUSTOMER_FNAME <> '' AND  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME WHEN  C.CUSTOMER_FNAME <> '' THEN C.CUSTOMER_FNAME WHEN  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_LNAME ELSE USER_CUSTOMER_CODE END) AS CUSTOMER_NAME,
				--(CASE WHEN  C.CUSTOMER_FNAME = '' THEN USER_CUSTOMER_CODE ELSE C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME END) AS CUSTOMER_NAME,
				ISNULL(B.AMOUNT,0)+ISNULL(A.DISCOUNT_AMOUNT,0) AS BILL_AMOUNT, --AS NET_AMOUNT CHANGES BY DINKAR
				A.BIN_ID,PGM.PAYMODE_GRP_NAME,A.DISCOUNT_AMOUNT
				,CASE WHEN D.PAYMODE_GRP_CODE='0000002' THEN D.PAYMODE_NAME ELSE '' END 
				,A.SHIFT_ID
		FROM ARC01106 A
		LEFT JOIN PAYMODE_XN_DET B ON B.MEMO_ID=A.ADV_REC_ID
		LEFT JOIN PAYMODE_MST D ON D.PAYMODE_CODE=B.PAYMODE_CODE
		LEFT JOIN PAYMODE_GRP_MST PGM ON PGM.PAYMODE_GRP_CODE = D.PAYMODE_GRP_CODE
		JOIN #TILLSHIFTS TS ON A.SHIFT_ID=TS.SHIFT_ID
		WHERE ISNULL(B.XN_TYPE,'ARC')='ARC' /*DONE SO THAT ADVANCE WITH 100% DISCOUNT COULD BE INCLUDED AS 
		FOR SUCH ADVANCE NO ENTRY IS CREATED IN PAYMODE_XN_DET*/
		AND ISNULL(PGM.PAYMODE_GRP_CODE,'0000002') <>'0000003' 
		AND A.location_Code  =(CASE WHEN @CDEPTID='' THEN A.location_Code  ELSE @CDEPTID END)         
		AND A.ARC_TYPE =1 AND  A.ARCT=2 AND A.CANCELLED = 0
		AND A.USER_CODE=(CASE WHEN @CUSERCODE='' THEN A.USER_CODE ELSE @CUSERCODE END) 
		AND A.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN A.BIN_ID ELSE @CBINID END)  
		
		IF @BDOCRCV=1
		--LIST OF DOCUMENT RECEIVED
		INSERT @REP_DETAILS (PRINT_ORDER, PRINT_DETAIL,XN_TYPE ,DEPT_ID, USER_CODE, 
							 MEMO_NO, MEMO_DT, ADJ_MEMO_NO, ADJ_MEMO_DT, 
							 AMOUNT, CUSTOMER_CODE, BILL_AMOUNT,BIN_ID,PAYMODE_GRP_NAME,DISCOUNT_AMOUNT,CARD_NAME  
							,SHIFT_ID)
		SELECT	9 AS PRINT_ORDER, 'LIST OF DOCUMENT RECEIVED' AS PRINT_DETAIL,'SLS' AS XN_TYPE,
				A.location_Code  AS DEPT_ID, A.USER_CODE,
				 A.CM_NO AS MEMO_NO,A.CM_DT AS MEMO_DT  ,
				'' AS ADJ_MEMO_NO, '' AS ADJ_MEMO_DT,B.AMOUNT,
				A.CUSTOMER_CODE,
				--(CASE WHEN C.CUSTOMER_FNAME <> '' AND  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME WHEN  C.CUSTOMER_FNAME <> '' THEN C.CUSTOMER_FNAME WHEN  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_LNAME ELSE USER_CUSTOMER_CODE END) AS CUSTOMER_NAME, 
				--(CASE WHEN  C.CUSTOMER_FNAME = '' THEN USER_CUSTOMER_CODE ELSE C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME END) AS CUSTOMER_NAME,
				B.AMOUNT+CONVERT(NUMERIC(18,2),0)  AS BILL_AMOUNT,A.BIN_ID,PGM.PAYMODE_GRP_NAME,CONVERT(NUMERIC(18,2),0) AS DISCOUNT_AMOUNT
				,CASE WHEN PM.PAYMODE_GRP_CODE='0000002' THEN PM.PAYMODE_NAME ELSE '' END
				,A.SHIFT_ID
		FROM CMM01106 A
		JOIN PAYMODE_XN_DET B ON A.CM_ID = B.MEMO_ID AND B.XN_TYPE = 'SLS'
		--JOIN CUSTDYM C ON A.CUSTOMER_CODE = C.CUSTOMER_CODE
		JOIN PAYMODE_MST PM ON PM.PAYMODE_CODE = B.PAYMODE_CODE
		JOIN PAYMODE_GRP_MST PGM ON PGM.PAYMODE_GRP_CODE = PM.PAYMODE_GRP_CODE 
		LEFT JOIN 
		(
			SELECT DISTINCT CM_ID FROM DSD01106 DSD(NOLOCK) JOIN DSM01106 DSM(NOLOCK) ON DSD.DS_ID=DSM.DS_ID
			WHERE DSM.CANCELLED=0
		)DSD ON A.CM_ID=DSD.CM_ID
		LEFT JOIN 
		(
			SELECT DISTINCT A.CM_ID 
			FROM  CMM01106  A (NOLOCK) 
			JOIN VW_BILL_PAYMODE PAY (NOLOCK) ON PAY.MEMO_ID=A.CM_ID AND PAY.XN_TYPE='SLS'
			WHERE A.CM_DT=@DFORDT
			AND (A.NET_AMOUNT<0 AND PAY.CREDIT_AMOUNT<>0)/*CREDITNOTE AND CREDIT REFUND BILLS*/
			AND A.CANCELLED = 0 
		)CMM ON A.CM_ID=CMM.CM_ID
		JOIN #TILLSHIFTS TS ON A.SHIFT_ID=TS.SHIFT_ID
		WHERE PGM.PAYMODE_GRP_CODE ='0000003' 
		AND A.location_Code  =(CASE WHEN @CDEPTID='' THEN A.location_Code  ELSE @CDEPTID END)         
		AND A.CANCELLED = 0
		AND A.USER_CODE=(CASE WHEN @CUSERCODE='' THEN A.USER_CODE ELSE @CUSERCODE END)  
		AND A.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN A.BIN_ID ELSE @CBINID END)  
		AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CMM.CM_ID IS NOT NULL)) OR (@BDSM=0))
		AND ISNULL(B.ADJ_MEMO_ID,'')=''
		
		UNION ALL
		
		SELECT	9 AS PRINT_ORDER, 'LIST OF DOCUMENT RECEIVED' AS PRINT_DETAIL,'ARC' AS XN_TYPE,
				A.location_Code  AS DEPT_ID, A.USER_CODE,
				 A.ADV_REC_NO AS MEMO_NO,A.ADV_REC_DT AS MEMO_DT  ,
				'' AS ADJ_MEMO_NO, '' AS ADJ_MEMO_DT,B.AMOUNT, 
				A.CUSTOMER_CODE,
				--(CASE WHEN C.CUSTOMER_FNAME <> '' AND  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME WHEN  C.CUSTOMER_FNAME <> '' THEN C.CUSTOMER_FNAME WHEN  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_LNAME ELSE USER_CUSTOMER_CODE END) AS CUSTOMER_NAME,
				--(CASE WHEN  C.CUSTOMER_FNAME = '' THEN USER_CUSTOMER_CODE ELSE C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME END) AS CUSTOMER_NAME,
				B.AMOUNT+A.DISCOUNT_AMOUNT AS BILL_AMOUNT,A.BIN_ID,PGM.PAYMODE_GRP_NAME,A.DISCOUNT_AMOUNT
				,CASE WHEN PM.PAYMODE_CODE IN ('0000001','0000002') THEN PM.PAYMODE_NAME ELSE '' END
				,A.SHIFT_ID
		FROM ARC01106 A
		JOIN PAYMODE_XN_DET B ON A.ADV_REC_ID = B.MEMO_ID AND B.XN_TYPE = 'ARC'
		--JOIN CUSTDYM C ON A.CUSTOMER_CODE = C.CUSTOMER_CODE
		JOIN PAYMODE_MST PM ON PM.PAYMODE_CODE = B.PAYMODE_CODE
		JOIN PAYMODE_GRP_MST PGM ON PGM.PAYMODE_GRP_CODE = PM.PAYMODE_GRP_CODE 
		JOIN #TILLSHIFTS TS ON A.SHIFT_ID=TS.SHIFT_ID
		WHERE PGM.PAYMODE_GRP_CODE ='0000003' 
		AND A.location_Code =(CASE WHEN @CDEPTID='' THEN A.location_Code  ELSE @CDEPTID END)         
		AND A.CANCELLED = 0
		AND A.USER_CODE=(CASE WHEN @CUSERCODE='' THEN A.USER_CODE ELSE @CUSERCODE END)
		AND A.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN A.BIN_ID ELSE @CBINID END)   
		/*IF IT IS PAYMENT, ADVANCES SHOULD NOT BE DISPLAYED IN THE LIST OF DOCUMENTS RECEIVED AS IT IS 
		ALREADY BEING DISPLAYED IN LIST OF ADVANCES AGAINST PAYMENT*/
		AND ((A.ARC_TYPE=2 AND PM.PAYMODE_CODE<>'0000002') OR A.ARC_TYPE=1)
		--AND ISNULL(B.ADJ_MEMO_ID,'')=''/*BABAN:*/
		
		IF @BOC=1
		--LIST OF OTHER CHARGES
		INSERT @REP_DETAILS (PRINT_ORDER, PRINT_DETAIL,XN_TYPE, DEPT_ID, USER_CODE, 
							 MEMO_NO, MEMO_DT, ADJ_MEMO_NO, ADJ_MEMO_DT, 
							 AMOUNT, CUSTOMER_CODE, BILL_AMOUNT,BIN_ID,PAYMODE_GRP_NAME,DISCOUNT_AMOUNT,CARD_NAME
							 ,SHIFT_ID )
		SELECT	10 AS PRINT_ORDER,'LIST OF OTHER CHARGES' AS PRINT_DETAIL,'O/C' AS XN_TYPE,
				A.location_Code  AS DEPT_ID, A.USER_CODE,
				 A.ADV_REC_NO AS MEMO_NO,A.ADV_REC_DT AS MEMO_DT  ,
				ISNULL(HM.memo_no,'')  AS ADJ_MEMO_NO, ISNULL(HM.memo_dt,'')  AS ADJ_MEMO_DT,
				B.AMOUNT, 
				A.CUSTOMER_CODE,
				--(CASE WHEN C.CUSTOMER_FNAME <> '' AND  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME WHEN  C.CUSTOMER_FNAME <> '' THEN C.CUSTOMER_FNAME WHEN  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_LNAME ELSE USER_CUSTOMER_CODE END) AS CUSTOMER_NAME,
				--(CASE WHEN  C.CUSTOMER_FNAME = '' THEN USER_CUSTOMER_CODE ELSE C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME END) AS CUSTOMER_NAME,
				A.NET_AMOUNT AS BILL_AMOUNT,A.BIN_ID,PGM.PAYMODE_GRP_NAME,A.DISCOUNT_AMOUNT
				,CASE WHEN PM.PAYMODE_GRP_CODE='0000002' THEN PM.PAYMODE_NAME ELSE '' END
				,A.SHIFT_ID
		FROM ARC01106 A
		--JOIN CUSTDYM C ON A.CUSTOMER_CODE = C.CUSTOMER_CODE
		JOIN PAYMODE_XN_DET B ON B.MEMO_ID=A.ADV_REC_ID
		JOIN PAYMODE_MST PM ON PM.PAYMODE_CODE = B.PAYMODE_CODE
		JOIN PAYMODE_GRP_MST PGM ON PGM.PAYMODE_GRP_CODE = PM.PAYMODE_GRP_CODE 
		LEFT JOIN HBD_RECEIPT HBD (NOLOCK) ON HBD.ADV_REC_ID =A.adv_rec_id 
		LEFT JOIN hold_back_deliver_mst HM (NOLOCK) ON HM.memo_id =HBD.MEMO_ID 
		--JOIN ARC01106 D ON D.ADV_REC_ID=B.ADJ_MEMO_ID
		JOIN #TILLSHIFTS TS ON A.SHIFT_ID=TS.SHIFT_ID
		WHERE B.XN_TYPE='ARC' 
		AND A.location_Code  =(CASE WHEN @CDEPTID='' THEN A.location_Code  ELSE @CDEPTID END)         
		AND A.ARC_TYPE=1 AND A.ARCT IN (3,4) AND A.CANCELLED = 0
		AND A.USER_CODE=(CASE WHEN @CUSERCODE='' THEN A.USER_CODE ELSE @CUSERCODE END) 
		AND A.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN A.BIN_ID ELSE @CBINID END)  
		
		IF @BCASHREF = 1
		--LIST OF CASH REFUND BILL
		INSERT @REP_DETAILS (PRINT_ORDER, PRINT_DETAIL,XN_TYPE ,DEPT_ID, USER_CODE, 
							 MEMO_NO, MEMO_DT, ADJ_MEMO_NO, ADJ_MEMO_DT, 
							 AMOUNT, CUSTOMER_CODE, BILL_AMOUNT,BIN_ID,PAYMODE_GRP_NAME,DISCOUNT_AMOUNT,CARD_NAME 
							 ,SHIFT_ID )
		SELECT 11 AS PRINT_ORDER,'LIST OF CASH REFUND' AS PRINT_DETAIL ,'SLS' AS XN_TYPE,
				A.location_Code AS  DEPT_ID,A.USER_CODE,
				A.CM_NO AS MEMO_NO,A.CM_DT AS MEMO_DT,
				'' AS ADJ_MEMO_NO, '' AS ADJ_MEMO_DT,B.AMOUNT,
				A.CUSTOMER_CODE,
				--(CASE WHEN C.CUSTOMER_FNAME <> '' AND  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME WHEN  C.CUSTOMER_FNAME <> '' THEN C.CUSTOMER_FNAME WHEN  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_LNAME ELSE USER_CUSTOMER_CODE END) AS CUSTOMER_NAME,
				--(CASE WHEN  C.CUSTOMER_FNAME = '' THEN USER_CUSTOMER_CODE ELSE C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME END) AS CUSTOMER_NAME,
				A.NET_AMOUNT AS BILL_AMOUNT,A.BIN_ID,PGM.PAYMODE_GRP_NAME,CONVERT(NUMERIC(18,2),0) AS DISCOUNT_AMOUNT
				,CASE WHEN PM.PAYMODE_GRP_CODE='0000002' THEN PM.PAYMODE_NAME ELSE '' END
				,A.SHIFT_ID
		FROM CMM01106 A
		LEFT JOIN 
		(
			SELECT DISTINCT CM_ID FROM DSD01106 DSD(NOLOCK) JOIN DSM01106 DSM(NOLOCK) ON DSD.DS_ID=DSM.DS_ID
			WHERE DSM.CANCELLED=0
		)DSD ON A.CM_ID=DSD.CM_ID
		LEFT JOIN 
		(
			SELECT DISTINCT A.CM_ID 
			FROM  CMM01106  A (NOLOCK) 
			JOIN VW_BILL_PAYMODE PAY (NOLOCK) ON PAY.MEMO_ID=A.CM_ID AND PAY.XN_TYPE='SLS'
			WHERE A.CM_DT=@DFORDT
			AND (A.NET_AMOUNT<0 AND PAY.CREDIT_AMOUNT<>0)/*CREDITNOTE AND CREDIT REFUND BILLS*/
			AND A.CANCELLED = 0 
		)CMM ON A.CM_ID=CMM.CM_ID	
		JOIN PAYMODE_XN_DET B ON A.CM_ID = B.MEMO_ID AND B.XN_TYPE = 'SLS'
		--JOIN CUSTDYM C ON A.CUSTOMER_CODE = C.CUSTOMER_CODE
		JOIN PAYMODE_MST PM ON PM.PAYMODE_CODE = B.PAYMODE_CODE
		JOIN PAYMODE_GRP_MST PGM ON PGM.PAYMODE_GRP_CODE = PM.PAYMODE_GRP_CODE 
		JOIN #TILLSHIFTS TS ON A.SHIFT_ID=TS.SHIFT_ID
		WHERE PGM.PAYMODE_GRP_CODE ='0000001' 
		AND A.location_Code =(CASE WHEN @CDEPTID='' THEN A.location_Code  ELSE @CDEPTID END)         
		AND A.CANCELLED = 0
		AND A.USER_CODE=(CASE WHEN @CUSERCODE='' THEN A.USER_CODE ELSE @CUSERCODE END)  
		AND A.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN A.BIN_ID ELSE @CBINID END)  
		AND ISNULL(B.ADJ_MEMO_ID,'')=''	AND  SUBSTRING(A.CM_NO,5,1)<>'N' AND B.AMOUNT < 0
		AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CMM.CM_ID IS NOT NULL)) OR (@BDSM=0))
		
		
		IF @BPAYMENT=1
		INSERT @REP_DETAILS (PRINT_ORDER, PRINT_DETAIL,XN_TYPE, DEPT_ID, USER_CODE, 
							 MEMO_NO, MEMO_DT, ADJ_MEMO_NO, ADJ_MEMO_DT, 
							 AMOUNT, CUSTOMER_CODE, BILL_AMOUNT,CASH,CC,BIN_ID,PAYMODE_GRP_NAME
							 ,DISCOUNT_AMOUNT,CARD_NAME,SHIFT_ID  )
		SELECT	 12 AS PRINT_ORDER, 'LIST OF PAYMENTS' AS PRINT_DETAIL,'' AS XN_TYPE,
				A.location_Code  AS DEPT_ID, A.USER_CODE,
				 A.ADV_REC_NO AS MEMO_NO,A.ADV_REC_DT AS MEMO_DT  ,
				DBO.FN_GETAGAINSTBILL(A.ADV_REC_ID) AS ADJ_MEMO_NO, '' AS ADJ_MEMO_DT,
				(CASE WHEN P.PAYMODE_GRP_CODE = '0000001' THEN P.CASH WHEN P.PAYMODE_GRP_CODE = '0000002' THEN P.CC WHEN P.PAYMODE_GRP_CODE NOT IN ('0000001','0000002') THEN P.MISC ELSE 0 END ) AS AMOUNT, 
				A.CUSTOMER_CODE,
				--(CASE WHEN C.CUSTOMER_FNAME <> '' AND  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME WHEN  C.CUSTOMER_FNAME <> '' THEN C.CUSTOMER_FNAME WHEN  C.CUSTOMER_LNAME <> '' THEN C.CUSTOMER_LNAME ELSE USER_CUSTOMER_CODE END) AS CUSTOMER_NAME,
				--(CASE WHEN  C.CUSTOMER_FNAME = '' THEN USER_CUSTOMER_CODE ELSE C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME END) AS CUSTOMER_NAME,
				A.NET_AMOUNT AS BILL_AMOUNT,P.CASH,P.CC,A.BIN_ID,P.PAYMODE_GRP_NAME,A.DISCOUNT_AMOUNT
				,P.CARD_NAME,A.SHIFT_ID
		FROM ARC01106 A
		JOIN 
		   (SELECT MEMO_ID,C.PAYMODE_GRP_CODE,ISNULL(SUM(CASE WHEN C.PAYMODE_GRP_CODE = '0000001' THEN A.AMOUNT END),0) AS CASH,
			ISNULL(SUM(CASE WHEN C.PAYMODE_GRP_CODE = '0000002' THEN A.AMOUNT END),0) AS CC,
			ISNULL(SUM(CASE WHEN C.PAYMODE_GRP_CODE NOT IN ('0000001','0000002') THEN A.AMOUNT END),0) AS MISC
			,C.PAYMODE_GRP_NAME,CASE WHEN C.PAYMODE_GRP_CODE = '0000002' THEN B.PAYMODE_NAME ELSE '' END AS CARD_NAME
			FROM PAYMODE_XN_DET A 
			JOIN PAYMODE_MST B ON A.PAYMODE_CODE = B.PAYMODE_CODE
			JOIN PAYMODE_GRP_MST C ON C.PAYMODE_GRP_CODE = B.PAYMODE_GRP_CODE
			JOIN ARC01106 D ON D.ADV_REC_ID=A.MEMO_ID
			WHERE A.XN_TYPE='ARC' AND ADV_REC_DT=@DFORDT
			AND B.PAYMODE_GRP_CODE NOT IN ('0000003')
			--AND C.PAYMODE_GRP_CODE IN ('0000002','0000001','0000000') 
			GROUP BY MEMO_ID,C.PAYMODE_GRP_CODE,C.PAYMODE_GRP_NAME,B.PAYMODE_NAME) 
			P ON P.MEMO_ID= A.ADV_REC_ID
		--JOIN CUSTDYM C ON A.CUSTOMER_CODE = C.CUSTOMER_CODE
		JOIN #TILLSHIFTS TS ON A.SHIFT_ID=TS.SHIFT_ID
		WHERE A.location_Code  =(CASE WHEN @CDEPTID='' THEN A.location_Code  ELSE @CDEPTID END)         
		AND A.ARC_TYPE=2  AND A.CANCELLED = 0
		AND A.USER_CODE=(CASE WHEN @CUSERCODE='' THEN A.USER_CODE ELSE @CUSERCODE END)
		AND A.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN A.BIN_ID ELSE @CBINID END)  

	
		if @BPETTYCASH=1
		INSERT @REP_DETAILS (PRINT_ORDER, PRINT_DETAIL,XN_TYPE, DEPT_ID, USER_CODE, 
							 MEMO_NO, MEMO_DT, ADJ_MEMO_NO, ADJ_MEMO_DT, 
							 AMOUNT, CUSTOMER_CODE, BILL_AMOUNT,CASH,CC,BIN_ID,PAYMODE_GRP_NAME
							 ,DISCOUNT_AMOUNT,CARD_NAME,SHIFT_ID  )
		SELECT	 13 AS PRINT_ORDER, 'Petty Expenses' AS PRINT_DETAIL,b.xn_type,
				A.location_Code  AS DEPT_ID, A.USER_CODE,
				 A.pem_memo_no AS MEMO_NO,A.pem_memo_dt AS MEMO_DT  ,
				'' AS ADJ_MEMO_NO, '' AS ADJ_MEMO_DT,
				 xn_amount AS AMOUNT, 
				b.ac_code as CUSTOMER_CODE,
			    cast( (case when b.xn_type='Dr' then 1 else -1 end) *xn_amount as numeric(14,2)) AS BILL_AMOUNT,
				xn_amount CASH,0 as CC,'000' BIN_ID,'' as PAYMODE_GRP_NAME,0 as DISCOUNT_AMOUNT
				,'' as CARD_NAME,A.SHIFT_ID
		FROM pem01106 A
		JOIN ped01106 b (nolock) on a.pem_memo_id =b.pem_memo_id
		JOIN #TILLSHIFTS TS ON A.SHIFT_ID=TS.SHIFT_ID
		WHERE A.location_Code  =(CASE WHEN @CDEPTID='' THEN A.location_Code  ELSE @CDEPTID END)         
		and A.CANCELLED = 0
		AND A.USER_CODE=(CASE WHEN @CUSERCODE='' THEN A.USER_CODE ELSE @CUSERCODE END)

		
		/*
		SELECT	9 AS PRINT_ORDER, 'LIST OF DOCUMENT RECEIVED' AS PRINT_DETAIL,'SLS' AS XN_TYPE,
				LEFT(A.CM_ID,2) AS DEPT_ID, A.USER_CODE,
				 A.CM_NO AS MEMO_NO,A.CM_DT AS MEMO_DT  ,
				'' AS ADJ_MEMO_NO, '' AS ADJ_MEMO_DT,B.AMOUNT, 
				(CASE WHEN  C.CUSTOMER_FNAME = '' THEN USER_CUSTOMER_CODE ELSE C.CUSTOMER_FNAME + ' ' + C.CUSTOMER_LNAME END) AS CUSTOMER_NAME,
				A.NET_AMOUNT AS BILL_AMOUNT,A.BIN_ID,PGM.PAYMODE_GRP_NAME,CONVERT(NUMERIC(18,2),0) AS DISCOUNT_AMOUNT
		FROM CMM01106 A
		JOIN PAYMODE_XN_DET B ON A.CM_ID = B.MEMO_ID AND B.XN_TYPE = 'SLS'
		JOIN CUSTDYM C ON A.CUSTOMER_CODE = C.CUSTOMER_CODE
		JOIN PAYMODE_MST PM ON PM.PAYMODE_CODE = B.PAYMODE_CODE
		JOIN PAYMODE_GRP_MST PGM ON PGM.PAYMODE_GRP_CODE = PM.PAYMODE_GRP_CODE 
		LEFT JOIN 
		(
			SELECT DISTINCT CM_ID FROM DSD01106 DSD(NOLOCK) JOIN DSM01106 DSM(NOLOCK) ON DSD.DS_ID=DSM.DS_ID
			WHERE DSM.CANCELLED=0
		)DSD ON A.CM_ID=DSD.CM_ID
		WHERE PGM.PAYMODE_GRP_CODE ='0000003' AND  A.CM_DT BETWEEN @DFROMDT AND @DTODT 
		AND LEFT(A.CM_ID,2) =(CASE WHEN @CDEPTID='' THEN LEFT(A.CM_ID,2) ELSE @CDEPTID END)         
		AND A.CANCELLED = 0
		AND A.USER_CODE=(CASE WHEN @CUSERCODE='' THEN A.USER_CODE ELSE @CUSERCODE END)  
		AND A.BIN_ID=(CASE WHEN ISNULL(@CBINID,'') = '' THEN A.BIN_ID ELSE @CBINID END)  
		AND ((@BDSM=1 AND DSD.CM_ID IS NOT NULL) OR (@BDSM=0))
		AND ISNULL(B.ADJ_MEMO_ID,'')=''
		*/				 
		
		---UPDATING DISCOUNT AMOUNTS FOR SALE TRANSACTION
		UPDATE A SET DISCOUNT_AMOUNT=B.DISCOUNT_AMOUNT
		FROM @REP_DETAILS A 
		JOIN #DISCOUNT_DET B ON A.MEMO_NO=B.XN_NO AND A.MEMO_DT=B.XN_DT AND B.TRAN_TYPE='SALE'
		WHERE A.XN_TYPE=('SLS')
		
	
		SELECT PRINT_ORDER,PRINT_DETAIL,XN_TYPE, SHIFT_ID,
								DEPT_ID ,MEMO_NO, 
		(CASE WHEN CONVERT (VARCHAR,MEMO_DT,105) = '01-01-1900' THEN '' ELSE CONVERT (VARCHAR,MEMO_DT,105)END) AS MEMO_DT, ADJ_MEMO_NO ,
		(CASE WHEN CONVERT (VARCHAR,ADJ_MEMO_DT,105) = '01-01-1900' THEN '' ELSE CONVERT (VARCHAR,ADJ_MEMO_DT,105) END) AS ADJ_MEMO_DT , 
						AMOUNT , 
						USER_CUSTOMER_CODE+CASE WHEN ISNULL(CUSTOMER_FNAME ,'')+ISNULL(CUSTOMER_LNAME,'')<>'' THEN  
						    ' - '+ ISNULL(CUSTOMER_FNAME ,'')+ ' '+ISNULL(CUSTOMER_LNAME,'') ELSE '' END AS CUSTOMER_NAME, 
						BILL_AMOUNT ,
		ISNULL(CASH,0) AS CASH ,ISNULL(CC,0) AS CC 
		,A.USER_CODE,U.USERNAME,A.BIN_ID,PAYMODE_GRP_NAME
		,(CASE WHEN ROW_NUMBER() OVER(PARTITION BY A.MEMO_NO ORDER BY A.ADJ_MEMO_DT)=1 THEN A.DISCOUNT_AMOUNT ELSE 0 END) AS DISCOUNT_AMOUNT,
		A.CARD_NAME
		FROM @REP_DETAILS A
		JOIN USERS U ON A.USER_CODE=U.USER_CODE
		JOIN CUSTDYM C ON A.CUSTOMER_CODE = C.CUSTOMER_CODE
		WHERE DEPT_ID = (CASE WHEN @CDEPTID = '' THEN DEPT_ID ELSE @CDEPTID END) 
		and PRINT_ORDER<>13
		union all --customer code store Ac_code for petty expense
		SELECT PRINT_ORDER,PRINT_DETAIL,XN_TYPE, SHIFT_ID,
								DEPT_ID ,MEMO_NO, 
		(CASE WHEN CONVERT (VARCHAR,MEMO_DT,105) = '01-01-1900' THEN '' ELSE CONVERT (VARCHAR,MEMO_DT,105)END) AS MEMO_DT, ADJ_MEMO_NO ,
		(CASE WHEN CONVERT (VARCHAR,ADJ_MEMO_DT,105) = '01-01-1900' THEN '' ELSE CONVERT (VARCHAR,ADJ_MEMO_DT,105) END) AS ADJ_MEMO_DT , 
						AMOUNT , 
						AC_NAME  AS CUSTOMER_NAME, 
						BILL_AMOUNT ,
		ISNULL(CASH,0) AS CASH ,ISNULL(CC,0) AS CC 
		,A.USER_CODE,U.USERNAME,A.BIN_ID,PAYMODE_GRP_NAME
		,(CASE WHEN ROW_NUMBER() OVER(PARTITION BY A.MEMO_NO ORDER BY A.ADJ_MEMO_DT)=1 THEN A.DISCOUNT_AMOUNT ELSE 0 END) AS DISCOUNT_AMOUNT,
		A.CARD_NAME
		FROM @REP_DETAILS A
		JOIN USERS U ON A.USER_CODE=U.USER_CODE
		JOIN LM01106 C ON A.CUSTOMER_CODE = C.AC_CODE
		WHERE DEPT_ID = (CASE WHEN @CDEPTID = '' THEN DEPT_ID ELSE @CDEPTID END) 
		and PRINT_ORDER=13
		ORDER BY PRINT_ORDER,MEMO_DT,MEMO_NO
		
	IF @BCLUBBED=1
	BEGIN 
		---DISCOUNT SUMMARY
		SELECT '' AS SHIFT_ID,'' DEPT_ID,'' BIN_ID,'' DEPT_NAME,'' AS USER_CODE,'' AS USERNAME,'' AS CM_DT 
			  ,SUM(CASE WHEN TRAN_TYPE='SALE' THEN DISCOUNT_AMOUNT ELSE 0 END) AS SALE_DISC
			  ,SUM(CASE WHEN TRAN_TYPE='WHOLESALE' THEN DISCOUNT_AMOUNT ELSE 0 END) AS WHOLESALE_DISC
			  ,SUM(CASE WHEN TRAN_TYPE='O/S RECEIPTS' THEN DISCOUNT_AMOUNT ELSE 0 END) AS OS_DISC
			  ,SUM(CASE WHEN TRAN_TYPE='ADVANCES' THEN DISCOUNT_AMOUNT ELSE 0 END) AS ADVC_DISC
			  ,SUM(CASE WHEN TRAN_TYPE='FEES/O/C' THEN DISCOUNT_AMOUNT ELSE 0 END) AS OC_DISC
			  ,SUM(CASE WHEN TRAN_TYPE='PAYMENT' THEN DISCOUNT_AMOUNT ELSE 0 END) AS PAYMENT_DISC
		FROM #DISCOUNT_DET
	END
	ELSE
	BEGIN 
		---DISCOUNT DETAILS
		SELECT A.SHIFT_ID,A.DEPT_ID,A.BIN_ID,A.DEPT_NAME,A.USER_CODE,U.USERNAME,'' AS CM_DT 
			  ,SUM(CASE WHEN A.TRAN_TYPE='SALE' THEN A.DISCOUNT_AMOUNT ELSE 0 END) AS SALE_DISC
			  ,SUM(CASE WHEN A.TRAN_TYPE='WHOLESALE' THEN A.DISCOUNT_AMOUNT ELSE 0 END) AS WHOLESALE_DISC
			  ,SUM(CASE WHEN A.TRAN_TYPE='O/S RECEIPTS' THEN A.DISCOUNT_AMOUNT ELSE 0 END) AS OS_DISC
			  ,SUM(CASE WHEN A.TRAN_TYPE='ADVANCES' THEN A.DISCOUNT_AMOUNT ELSE 0 END) AS ADVC_DISC
			  ,SUM(CASE WHEN A.TRAN_TYPE='FEES/O/C' THEN A.DISCOUNT_AMOUNT ELSE 0 END) AS OC_DISC
			  ,SUM(CASE WHEN A.TRAN_TYPE='PAYMENT' THEN A.DISCOUNT_AMOUNT ELSE 0 END) AS PAYMENT_DISC
		FROM #DISCOUNT_DET A
		JOIN USERS U ON A.USER_CODE=U.USER_CODE
		GROUP BY A.SHIFT_ID,A.DEPT_ID,A.BIN_ID,A.DEPT_NAME,A.USER_CODE,U.USERNAME
	END
	

	IF OBJECT_ID ('TEMPDB..#TMPSHIFT','U') IS NOT NULL
	   drop table #TMPSHIFT

	SELECT TSM.SHIFT_ID ,issues,receipts,comp_cl
	      INTO #TMPSHIFT
	FROM TILL_SHIFT_MST TSM(NOLOCK)
	WHERE TSM.OPEN_DATE=@DFORDT
	AND TSM.CLOSE_DATE =''
	AND TSM.location_code  =(CASE WHEN @CDEPTID='' THEN TSM.location_code  ELSE @CDEPTID END) 
	AND TSM.USER_CODE=(CASE WHEN @CUSERCODE='' THEN TSM.USER_CODE ELSE @CUSERCODE END) 
	GROUP BY TSM.SHIFT_ID,issues,receipts,comp_cl

	IF EXISTS (SELECT TOP 1 'U' FROM #TMPSHIFT)
	BEGIN
	   
		exec SAVETRAN_SHIFTS 2,'RPT','','01122','',1

	END

	IF OBJECT_ID('TEMPDB..#TMPSHIFTMST','U') IS NOT NULL
	   DROP TABLE #TMPSHIFTMST

	---RETURNING SHIFT DETAILS DURING THE SPECIFIED INPUT PARAMETERS
	SELECT TSM.SHIFT_ID as ORG_SHIFT_ID, TSM.SHIFT_ID+'('+U.username +')' AS SHIFT_ID,TM.TILL_NAME+ case when tsm.close_date='' then ' (Open)' else '' end as TILL_NAME,
	TSM.COMP_OP AS COMPUTEROPENING
		  ,TSM.PHY_OP AS PHYSICALOPENING,TSM.RECEIPTS,TSM.ISSUES,TSM.COMP_CL,TSM.PHY_CL
		  ,CONVERT(VARCHAR,TSM.OPEN_DATE,105) AS OPEN_DATE
		  ,CONVERT(VARCHAR(5),TSM.OPEN_TIME,114) AS OPEN_TIME
		  ,CONVERT(VARCHAR,TSM.CLOSE_DATE,105) AS CLOSE_DATE
		  ,CONVERT(VARCHAR(5),TSM.CLOSE_TIME,114) AS CLOSE_TIME
		  ,SUM(CASE WHEN ISNULL(TL.TRANSFERMODE,1)=1 THEN ISNULL(TL.LIFT_AMOUNT,0) ELSE 0 END) AS BANKTRANSFERAMOUNT	
		  ,SUM(CASE WHEN ISNULL(TL.TRANSFERMODE,1)=2 THEN ISNULL(TL.LIFT_AMOUNT,0) ELSE 0 END) AS PETTYEXPENSEAMOUNT	
		  ,SUM(CASE WHEN ISNULL(TL.TRANSFERMODE,1)=3 THEN ISNULL(TL.LIFT_AMOUNT,0) ELSE 0 END) AS LOCKERTRANSFERAMOUNT	
		  ,0 AS LOCKER_TO_BANK,TSM.location_code
	INTO #TMPSHIFTMST
	FROM TILL_SHIFT_MST TSM(NOLOCK)
	JOIN TILL_MST TM(NOLOCK) ON TSM.TILL_ID=TM.TILL_ID
	LEFT JOIN TILL_LIFTS TL(NOLOCK) ON TSM.SHIFT_ID=TL.SHIFT_ID and tl.cancelled =0
	LEFT JOIN USERS U (NOLOCK) ON U.user_code =TSM.user_code 
	WHERE TSM.OPEN_DATE=@DFORDT
	AND TSM.location_code  =(CASE WHEN @CDEPTID='' THEN TSM.location_code  ELSE @CDEPTID END) 
	AND TSM.USER_CODE=(CASE WHEN @CUSERCODE='' THEN TSM.USER_CODE ELSE @CUSERCODE END) 
	GROUP BY 
	 TSM.SHIFT_ID,TM.TILL_NAME+ case when tsm.close_date='' then ' (Open)' else '' end,
	 TSM.COMP_OP,TSM.PHY_OP,TSM.RECEIPTS,TSM.ISSUES,TSM.COMP_CL,TSM.PHY_CL
	,TSM.OPEN_DATE,TSM.OPEN_TIME,TSM.CLOSE_TIME,TSM.CLOSE_DATE,U.username,TSM.location_code 	
	UNION ALL
	SELECT 'LCK_TO_BANK' AS org_SHIFT_ID, 'LCK_TO_BANK' AS SHIFT_ID,'' AS TILL_NAME,0 AS COMPUTEROPENING
		  ,0 AS  PHYSICALOPENING,0 AS RECEIPTS, 0 AS ISSUES,0 AS COMP_CL,0 AS PHY_CL
		  ,'' AS OPEN_DATE
		  ,'' AS OPEN_TIME
		  ,'' AS CLOSE_DATE
		  ,'' AS CLOSE_TIME
		  ,0 AS BANKTRANSFERAMOUNT	
		  ,0 AS PETTYEXPENSEAMOUNT	
		  ,0 AS LOCKERTRANSFERAMOUNT,
		  SUM(A.AMOUNT) AS LOCKER_TO_BANK,A.location_code
	FROM TILL_BANK_TRANSFER A 
	JOIN LOCATION LO ON A.location_Code =LO.DEPT_ID 
	WHERE ISNULL(REFLIFTID,'')=''
	AND A.MEMO_DT =@DFORDT
	AND A.LOCATION_CODE = (CASE WHEN @CDEPTID='' THEN A.LOCATION_CODE ELSE @CDEPTID END)
		--AND A.USER_CODE = (CASE WHEN ISNULL(@CUSERCODE,'')='' THEN A.USER_CODE ELSE @CUSERCODE END)
	AND CANCELLED = 0
	GROUP BY A.LOCATION_CODE,A.USER_CODE,LO.DEPT_NAME,A.MEMO_DT,A.CANCELLED
	

	UPDATE A SET PETTYEXPENSEAMOUNT=A.PETTYEXPENSEAMOUNT+ISNULL(EXPENSE_AMOUNT,0) 
	FROM #TMPSHIFTMST A
	JOIN
	(
	    SELECT A.SHIFT_ID ,
		SUM(CAST( (CASE WHEN B.XN_TYPE='DR' THEN 1 ELSE -1 END) *XN_AMOUNT AS NUMERIC(14,2))) AS EXPENSE_AMOUNT
		FROM PEM01106 A
		JOIN PED01106 B (NOLOCK) ON A.PEM_MEMO_ID =B.PEM_MEMO_ID
		JOIN #TILLSHIFTS TS ON A.SHIFT_ID=TS.SHIFT_ID
		WHERE A.LOCATION_CODE =(CASE WHEN @CDEPTID='' THEN A.LOCATION_CODE ELSE @CDEPTID END)         
		AND A.CANCELLED = 0
		AND A.USER_CODE=(CASE WHEN @CUSERCODE='' THEN A.USER_CODE ELSE @CUSERCODE END)
		GROUP BY A.SHIFT_ID
	) B ON A.ORG_SHIFT_ID=B.SHIFT_ID
	   
	
  IF OBJECT_ID ('TEMPDB..#TMPBANK_TRANSFER','U') IS NOT NULL
     drop table #TMPBANK_TRANSFER

	SELECT shift_id, LM.AC_NAME AS BANK_NAME ,SUM(A.lift_amount ) AS AMOUNT,
	       CAST(0 AS INT) AS BKTSR
	into #TMPBANK_TRANSFER
	FROM TILL_LIFTS  A (NOLOCK) 
	JOIN LOCATION LO ON A.LOCATION_CODE=LO.DEPT_ID 
	JOIN USERS U (NOLOCK) ON U.USER_CODE =A.USER_CODE 
	JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE =A.AC_CODE
	WHERE TRANSFERMODE =1 AND cancelled =0
	AND A.MEMO_DT =@DFORDT
	AND A.LOCATION_CODE= (CASE WHEN @CDEPTID='' THEN A.LOCATION_CODE ELSE @CDEPTID END)
	AND A.USER_CODE = (CASE WHEN ISNULL(@CUSERCODE,'')='' THEN A.USER_CODE ELSE @CUSERCODE END)
	AND CANCELLED = 0
	GROUP BY shift_id,LM.AC_NAME

	;WITH CTE AS
	(
	SELECT  *, SR=DENSE_RANK() OVER(ORDER BY BANK_NAME) 
	FROM #TMPBANK_TRANSFER
	)
	UPDATE CTE SET BKTSR=SR


	
 
	--DECLARE @CBANKNAME VARCHAR(MAX),@DTSQL NVARCHAR(MAX)
	--SELECT 	@CBANKNAME=ISNULL(@CBANKNAME+',','')+QUOTENAME(BANK_NAME)
	--FROM #TMPBANK_TRANSFER
	--group by BANK_NAME,BKTSR

	--set @CBANKNAME=isnull(@CBANKNAME,'')
	

	SELECT  A.* ,
	     ISNULL(( SELECT TOP 1 BANK_NAME  FROM #TMPBANK_TRANSFER WHERE BKTSR=1),'') AS COLUMN1,
		 ISNULL(( SELECT TOP 1 BANK_NAME  FROM #TMPBANK_TRANSFER WHERE BKTSR=2),'') AS COLUMN2,
		 ISNULL(( SELECT TOP 1 BANK_NAME  FROM #TMPBANK_TRANSFER WHERE BKTSR=3),'') AS COLUMN3,
		 ISNULL(( SELECT TOP 1 BANK_NAME  FROM #TMPBANK_TRANSFER WHERE BKTSR=4),'') AS COLUMN4,
		  ISNULL(( SELECT TOP 1 BANK_NAME  FROM #TMPBANK_TRANSFER WHERE BKTSR=5),'') AS COLUMN5,

		 ISNULL(( SELECT TOP 1 AMOUNT  FROM #TMPBANK_TRANSFER B WHERE BKTSR=1 AND A.ORG_SHIFT_ID =B.shift_id ),0) AS COLUMN6,
		 ISNULL(( SELECT TOP 1 AMOUNT  FROM #TMPBANK_TRANSFER B WHERE BKTSR=2 AND A.ORG_SHIFT_ID =B.shift_id ),0) AS COLUMN7,
		 ISNULL(( SELECT TOP 1 AMOUNT  FROM #TMPBANK_TRANSFER B WHERE BKTSR=3 AND A.ORG_SHIFT_ID =B.shift_id ),0) AS COLUMN8,
		 ISNULL(( SELECT TOP 1 AMOUNT  FROM #TMPBANK_TRANSFER B WHERE BKTSR=4 AND A.ORG_SHIFT_ID =B.shift_id ),0) AS COLUMN9,
		 ISNULL(( SELECT TOP 1 AMOUNT  FROM #TMPBANK_TRANSFER B WHERE BKTSR=5 AND A.ORG_SHIFT_ID =B.shift_id ),0) AS COLUMN10,
		l.dept_id+'-'+ L.DEPT_NAME as DEPT_NAME

	FROM #TMPSHIFTMST A 
	LEFT JOIN LOCATION L ON L.DEPT_ID=a.LOCATION_CODE


	--if isnull(@CBANKNAME,'')<>''
	--begin

	--SET @DTSQL=N' SELECT a.* ,'+@CBANKNAME+' 	
	--FROM #TMPSHIFTMST A 
	--LEFT JOIN
	--(
	--  SELECT shift_id AS SHIFT_ID,'+@CBANKNAME+' 
	--  FROM #TMPBANK_TRANSFER A
	--  PIVOT (SUM(AMOUNT) FOR BANK_NAME IN ('+@CBANKNAME+')) PVT 
	--) B ON A.SHIFT_ID=B.SHIFT_ID '

	--print @DTSQL
	--exec sp_executesql @DTSQL

	--end
	--ELSE
	--BEGIN
	     
		 

	--END

	
	
	SELECT ISNULL(@CERRMSGOUT,'') AS ALERT_MESSAGE
		  ,ISNULL(@CALERTMSG1,'') AS ALERT_MESSAGE1


	--********************TRANSFER LOCKER TO BANK DEAILS****************DISCARDED
	

	SELECT  lm.ac_name as Bank_Name ,SUM(A.AMOUNT) AS AMOUNT
	FROM TILL_BANK_TRANSFER A 
	JOIN LOCATION LO ON A.location_Code =LO.DEPT_ID 
	JOIN USERS U (NOLOCK) ON U.USER_CODE =A.USER_CODE 
	JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE =A.AC_CODE
	WHERE A.MEMO_DT =@DFORDT
	AND A.location_Code  = (CASE WHEN @CDEPTID='' THEN A.location_Code ELSE  @CDEPTID END)
	AND A.USER_CODE = (CASE WHEN ISNULL(@CUSERCODE,'')='' THEN A.USER_CODE ELSE @CUSERCODE END)
	AND CANCELLED = 0
	GROUP BY lm.ac_name
	ORDER BY lm.ac_name
	

	--****************TRANSFER LOCKER TO BANK DEAILS************************

	/*Rohit : 09-09-2021	Ticket # : 08-1451*/

	IF OBJECT_ID('TEMPDB..#TMPUSERS','U') IS NOT NULL
			DROP TABLE #TMPUSERS
		  SELECT DISTINCT XNS_USER_CODE INTO #TMPUSERS FROM USER_XNS_FILTER (NOLOCK) WHERE 1=2

  
	    	-- AS PER DISCUSS WITH PANKAJ SIR 
		 DECLARE @BALLOW_ACCESS_RETAIL_SALE_ALL_USERS VARCHAR(10)
		SELECT @BALLOW_ACCESS_RETAIL_SALE_ALL_USERS=ALLOW_ACCESS_RETAIL_SALE_ALL_USERS FROM USERS WHERE USER_CODE =@CLOGIN_USERCODE 

		 IF @CUSERCODE<>''
		  BEGIN
			    INSERT INTO #TMPUSERS
				SELECT @CUSERCODE
		  END
		  ELSE 
		  BEGIN

		       IF   ISNULL(@BALLOW_ACCESS_RETAIL_SALE_ALL_USERS,0)=1
			        SET @CUSERCODE=''
			   ELSE 
			   BEGIN

			      INSERT INTO #TMPUSERS
				  SELECT DISTINCT XNS_USER_CODE FROM USER_XNS_FILTER (NOLOCK) WHERE USER_CODE= @CLOGIN_USERCODE 
				  UNION 
				  SELECT @CLOGIN_USERCODE AS XNS_USER_CODE

				  SET @CUSERCODE=@CLOGIN_USERCODE

			   END


		  END




DECLARE @SSRC TABLE (PRTORD NUMERIC(2, 0), DETAILS VARCHAR(100), GNS NUMERIC(15, 2),   
			GST NUMERIC(15, 2), GTS NUMERIC(15, 2), RNS NUMERIC(15, 2),   
			RST NUMERIC(15, 2), RTS NUMERIC(15, 2), NNS NUMERIC(15, 2),   
			NST NUMERIC(15, 2), NTS NUMERIC(15, 2), TQTY NUMERIC(15, 2))  

INSERT INTO @SSRC (PRTORD, DETAILS, GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY )  

  
		SELECT 1 AS PRTORD,'G'+(CASE WHEN A.GST_PERCENTAGE=0 THEN 'F' WHEN ROUND(A.GST_PERCENTAGE,0)=A.GST_PERCENTAGE THEN LTRIM(RTRIM(STR(A.GST_PERCENTAGE)))
								 ELSE LTRIM(RTRIM(STR(A.GST_PERCENTAGE,7,3))) END) AS DETAILS,
	  --TAX_STATUS AS DETAILS,    
	   SUM(  CASE WHEN QUANTITY>0 THEN XN_VALUE_WITHOUT_GST  ELSE 0 END ) AS GNS,    
	   SUM( CASE WHEN QUANTITY>0 THEN IGST_AMOUNT+SGST_AMOUNT+CGST_AMOUNT ELSE 0 END) AS GST,    
	   SUM( CASE WHEN QUANTITY>0 THEN XN_VALUE_WITHOUT_GST+IGST_AMOUNT+SGST_AMOUNT+CGST_AMOUNT ELSE 0 END) AS GTS, 
	      
	   SUM(  CASE WHEN QUANTITY< 0 THEN ABS(XN_VALUE_WITHOUT_GST)  ELSE 0 END ) AS GNS,    
	   SUM( CASE WHEN QUANTITY<0 THEN ABS(IGST_AMOUNT+SGST_AMOUNT+CGST_AMOUNT) ELSE 0 END) AS GST,    
	   SUM( CASE WHEN QUANTITY< 0 THEN ABS(XN_VALUE_WITHOUT_GST+IGST_AMOUNT+SGST_AMOUNT+CGST_AMOUNT) ELSE 0 END) AS GTS, 
	    
	  
	   SUM(XN_VALUE_WITHOUT_GST)AS NNS,    
	   SUM( IGST_AMOUNT+SGST_AMOUNT+CGST_AMOUNT ) AS NST,    
	   SUM( XN_VALUE_WITHOUT_GST+IGST_AMOUNT+SGST_AMOUNT+CGST_AMOUNT  ) AS NTS,    
       SUM(A.QUANTITY) AS TQTY
	  FROM CMD01106 A    
	  JOIN CMM01106 B ON A.CM_ID = B.CM_ID    
	  JOIN LOCATION C ON B.location_Code  = C.DEPT_ID 
	  JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	  
	  WHERE B.CANCELLED = 0  --AND B.CM_MODE = 1  
	  AND B.CM_DT BETWEEN @DFROMDT AND @DTODT   
	  AND B.location_Code  = (CASE WHEN @CDEPTID = '' THEN B.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  --AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CB.CM_ID IS NOT NULL)) OR (@BDSM=0))	
	  GROUP BY (CASE WHEN A.GST_PERCENTAGE=0 THEN 'F' WHEN ROUND(A.GST_PERCENTAGE,0)=A.GST_PERCENTAGE THEN LTRIM(RTRIM(STR(A.GST_PERCENTAGE)))
								 ELSE LTRIM(RTRIM(STR(A.GST_PERCENTAGE,7,3))) END) 



	 DECLARE @CGSTROUNOFFDETAILS VARCHAR(10)
	 SELECT TOP 1 @CGSTROUNOFFDETAILS=DETAILS FROM @SSRC

	 update a set GNS=a.GNS +isnull(b.GNS,0),
	              GTS=a.GTS +isnull(b.GTS,0),
	              RNS=a.RNS +isnull(b.RNS,0),
	              RTS=a.RTS +isnull(b.RTS,0),
	              NNS=a.NNS +isnull(b.NNS,0),
	              NTS=a.NTS +isnull(b.NTS,0)
	  from @SSRC a
	 join
	 (
	 SELECT 1 AS PRTORD,@CGSTROUNOFFDETAILS AS DETAILS,
	  --TAX_STATUS AS DETAILS,    
	   SUM(  CASE WHEN b.gst_round_off >0 THEN GST_ROUND_OFF  ELSE 0 END ) AS GNS,      
	   SUM( CASE WHEN gst_round_off>0 THEN gst_round_off ELSE 0 END) AS GTS, 
	   SUM( CASE WHEN gst_round_off< 0 THEN ABS(gst_round_off)  ELSE 0 END ) AS RNS,    
	   SUM( CASE WHEN gst_round_off< 0 THEN ABS(gst_round_off) ELSE 0 END) AS RTS, 
	   SUM(gst_round_off)AS NNS,    
	   SUM( gst_round_off ) AS NTS   
  
	  FROM CMM01106 B  (nolock)   
	  JOIN LOCATION C ON B.location_Code  = C.DEPT_ID 
	  JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	  
	  WHERE B.CANCELLED = 0  --AND B.CM_MODE = 1  
	  AND B.CM_DT BETWEEN @DFROMDT AND @DTODT   
	  AND B.location_Code  = (CASE WHEN @CDEPTID = '' THEN B.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  having SUM( gst_round_off )<>0 
	  ) b on a.DETAILS =b.DETAILS 
	  


	 ---
								 
								 
	--overhead 							
	  INSERT INTO @SSRC (PRTORD, DETAILS, GNS, GST, GTS, RNS, RST, RTS, NNS, NST, NTS,TQTY )         
	   SELECT 1 AS PRTORD,'OHG'+(CASE WHEN isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0)=0 THEN 'F' WHEN ROUND(isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0),0)=isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0) THEN LTRIM(RTRIM(STR(isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0))))
								 ELSE LTRIM(RTRIM(STR(b.OTHER_CHARGES_GST_PERCENTAGE,7,3))) END) AS DETAILS,
	  --TAX_STATUS AS DETAILS,    
	   SUM(  CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0) >0 THEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)  ELSE 0 END ) AS GNS,    
	   SUM( CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)>0 THEN isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0) ELSE 0 END) AS GST,    
	   SUM( CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)>0 THEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)+isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0) ELSE 0 END) AS GTS, 
	      
	   SUM(  CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)< 0 THEN ABS(OTHER_CHARGES_TAXABLE_VALUE)  ELSE 0 END ) AS GNS,    
	   SUM( CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)<0 THEN ABS(isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0)) ELSE 0 END) AS GST,    
	   SUM( CASE WHEN isnull(OTHER_CHARGES_TAXABLE_VALUE,0)< 0 THEN ABS(isnull(OTHER_CHARGES_TAXABLE_VALUE,0)+isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0)) ELSE 0 END) AS GTS, 
	    
	  
	   SUM(isnull(OTHER_CHARGES_TAXABLE_VALUE,0))AS NNS,    
	   SUM( isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0) ) AS NST,    
	   SUM( isnull(OTHER_CHARGES_TAXABLE_VALUE,0)+isnull(OTHER_CHARGES_CGST_AMOUNT,0)+isnull(OTHER_CHARGES_IGST_AMOUNT,0)+isnull(OTHER_CHARGES_SGST_AMOUNT,0)  ) AS NTS,    
       0 AS TQTY
	  FROM  CMM01106 B 
	  JOIN LOCATION C ON B.location_Code  = C.DEPT_ID 
	  JOIN BIN D ON D.BIN_ID=B.BIN_ID   
	  JOIN DTM ON DTM.DT_CODE=B.DT_CODE	  
	  WHERE B.CANCELLED = 0  --AND B.CM_MODE = 1  
	  AND B.CM_DT BETWEEN @DFROMDT AND @DTODT   
	  AND B.location_Code  = (CASE WHEN @CDEPTID = '' THEN B.location_Code  ELSE @CDEPTID END)  
	  AND ISNULL(B.BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(B.BIN_ID,'000') ELSE @CBINID END)  
	  AND (B.MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)--CHANGE
	  AND (@CUSERCODE='' OR  B.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
	  and isnull(OTHER_CHARGES_TAXABLE_VALUE,0)<>0
	  --AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CB.CM_ID IS NOT NULL)) OR (@BDSM=0))	
	  GROUP BY (CASE WHEN isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0)=0 THEN 'F' WHEN ROUND(isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0),0)=isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0) THEN LTRIM(RTRIM(STR(isnull(b.OTHER_CHARGES_GST_PERCENTAGE,0))))
								 ELSE LTRIM(RTRIM(STR(b.OTHER_CHARGES_GST_PERCENTAGE,7,3))) END)
	


	SELECT  PRTORD, DETAILS,[GNS],[GST],[GTS],[RNS],[RST],[RTS],[NNS],[NST],[NTS] 
	 FROM @SSRC 

		SELECT CONVERT(DATETIME,'') AS [CM_DT], MIN(CM_NO) AS [FROM_BILL],MAX(CM_NO) AS [TO_BILL]  
		FROM CMM01106 CM
		WHERE CM.CANCELLED = 0 AND  CM_DT BETWEEN @DFROMDT AND @DTODT  
		AND CM.location_Code  = (CASE WHEN @CDEPTID = '' THEN CM.location_Code  ELSE @CDEPTID END)  
		AND ISNULL(BIN_ID,'000') = (CASE WHEN ISNULL(@CBINID,'') = ''  THEN ISNULL(BIN_ID,'000') ELSE @CBINID END)  
		AND (MEMO_TYPE = 1 OR @BESTIMATEENABLED = 1)
		AND (@CUSERCODE='' OR  CM.USER_CODE IN  (SELECT XNS_USER_CODE FROM #TMPUSERS) )
		--AND ((@BDSM=1 AND (DSD.CM_ID IS NOT NULL OR CB.CM_ID IS NOT NULL)) OR (@BDSM=0))		
		GROUP BY LEFT(CM_NO,5)               
		ORDER BY CM_DT ASC
		  
END  
------ 'END OF CREATING PROCEDURE SP3S_SHIFTWISE_CASHFLOW_REPORT'

