create PROCEDURE VALIDATE_JWR_WITHOUT_BOM_ISSUE
(
		@CXNID VARCHAR(40),
		@CCMD VARCHAR(1000) OUTPUT
		
)
--WITH ENCRYPTION
AS
BEGIN
	
	
	  SET @CCMD=''

BEGIN TRY

	 SELECT B.issue_id 
	      iNTO #TMPJWR
	 FROM JOBWORK_RECEIPT_DET A WITH (NOLOCK)
	 JOIN JOBWORK_ISSUE_DET B WITH (NOLOCK) ON A.REF_ROW_ID =B.ROW_ID
	 join jobwork_issue_mst c (nolock) on b.issue_id =c.issue_id
	 WHERE a.receipt_id =@CXNID and c.cancelled=0
	 GROUP BY B.issue_id 

	
	;WITH BOM_ISSUE_SUMMARY
	AS
	(

		SELECT A.*,B.MEMO_ID AS ORD_PLAN_MEMO_ID,B.ROW_ID AS ORD_PLAN_DET_ROW_ID,
		CONVERT(NUMERIC(14,2),((A.AVG_QUANTITY+A.ADD_AVG_QUANTITY) * B.ISSUED_QTY)) AS JW_REQ_QTY
		,B.ISSUE_ID
		FROM ORD_PLAN_BOM_DET A (NOLOCK)
		JOIN
		(
			SELECT A.JOB_CODE, A1.ISSUE_ID,D.MEMO_ID,C.ROW_ID,C.ARTICLE_CODE,C.PARA1_CODE,C.PARA2_CODE,SUM(A.QUANTITY) AS ISSUED_QTY
			FROM JOBWORK_ISSUE_DET A (NOLOCK)
			JOIN JOBWORK_ISSUE_MST A1 (NOLOCK) ON A1.ISSUE_ID=A.ISSUE_ID 
			JOIN #TMPJWR TMP ON TMP.issue_id =A1.issue_id
			JOIN ORD_PLAN_BARCODE_DET B (NOLOCK) ON B.PRODUCT_CODE=A.PRODUCT_CODE
			JOIN ORD_PLAN_DET C (NOLOCK) ON C.ROW_ID=B.REFROW_ID
			JOIN ORD_PLAN_MST D (NOLOCK) ON D.MEMO_ID=C.MEMO_ID
			WHERE D.CANCELLED=0 AND A1.CANCELLED=0 
			GROUP BY A.JOB_CODE,A1.ISSUE_ID,D.MEMO_ID,C.ROW_ID,C.ARTICLE_CODE,C.PARA1_CODE,C.PARA2_CODE
		)B ON B.ROW_ID=A.REF_ROW_ID and a.job_code=b.job_code
		
	)

	SELECT T.issue_id, T.ARTICLE_CODE,T.PARA1_CODE,T.PARA2_CODE,
		  SUM(QUANTITY) AS QUANTITY,ISNULL(SUM(ISSUED_QTY),0) AS ISSUED_QTY,CONVERT(NUMERIC(14,2),SUM((T.JW_REQ_QTY)-ISNULL(X.ISSUED_QTY,0))) AS REQ_QTY,
		  CAST(0 AS NUMERIC(14,2)) AS SCANNED_QTY
		  ,SUM(JW_REQ_QTY) AS JW_REQ_QTY
	INTO #SP3S_GET_JWI_BOM_ISSUED	  
	FROM BOM_ISSUE_SUMMARY T (NOLOCK)
	LEFT OUTER JOIN
	(
		SELECT A5.JOBWORK_ISSUE_ID,A1.MEMO_ID, A1.REF_ROW_ID,A1.ARTICLE_CODE,A1.PARA1_CODE,A1.PARA2_CODE,
		SUM(A6.QUANTITY) AS ISSUED_QTY
		FROM BOM_ISSUE_DET A4 (NOLOCK) 
		JOIN BOM_ISSUE_MST A5  (NOLOCK) ON A5.ISSUE_ID=A4.ISSUE_ID
		JOIN BOM_ISSUE_REF A6  (NOLOCK) ON A5.ISSUE_ID=A6.BOM_ISSUE_ID AND A4.ROW_ID=A6.BOM_DET_ROW_ID
		JOIN ORD_PLAN_BOM_DET A1  (NOLOCK) ON A1.ROW_ID=A6.ORD_PLAN_BOM_DET_ROW_ID
		JOIN #TMPJWR TMP ON A5.JOBWORK_ISSUE_ID =TMP.issue_id
		WHERE A5.CANCELLED=0 
		GROUP BY A5.JOBWORK_ISSUE_ID,A1.MEMO_ID, A1.REF_ROW_ID,A1.ARTICLE_CODE,A1.PARA1_CODE,A1.PARA2_CODE--,A6.ORD_PLAN_BOM_DET_ROW_ID
	)X ON X.REF_ROW_ID=T.ORD_PLAN_DET_ROW_ID	AND X.MEMO_ID=T.ORD_PLAN_MEMO_ID
	AND X.ARTICLE_CODE=T.ARTICLE_CODE AND X.PARA1_CODE=T.PARA1_CODE AND X.PARA2_CODE=T.PARA2_CODE
	AND X.JOBWORK_ISSUE_ID=T.issue_id
	GROUP BY T.Issue_id, T.ARTICLE_CODE,T.PARA1_CODE,T.PARA2_CODE 
	HAVING SUM(JW_REQ_QTY)>ISNULL(SUM(ISSUED_QTY),0)


	IF EXISTS (SELECT TOP 1'U' FROM   #TMPJWR A
	JOIN #SP3S_GET_JWI_BOM_ISSUED B ON A.issue_id=B.issue_id)
	BEGIN
	   
	   SET @CCMD='Jobwork Rceive does not allow without the issue of complete material '
	   goto END_PROC
	END

END TRY
BEGIN CATCH
    SET @CCMD = ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()  
END CATCH
	
END_PROC:
END
--******************************************* END OF PROCEDURE VALIDATEXN_HBD