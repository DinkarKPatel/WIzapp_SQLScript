
create PROCEDURE SP3S_IMPORT_BUYER_ORDER
(
 @CMEMOID AS VARCHAR(100),
 @CCONTROL_AC_CODE VARCHAR(15)='',
 @CDEPT_ID VARCHAR(5)='',
 @CALLEDFROMTASK int=0
)
AS
BEGIN
	
	
	IF @CDEPT_ID=''
	SELECT TOP 1 @CDEPT_ID= VALUE  FROM config WHERE config_option='LOCATION_ID'

	

    DECLARE @CMASTERTABLENAME VARCHAR(100),@CMEMONO VARCHAR(10),@NMEMONOLEN INT,@CMEMONOPREFIX VARCHAR(10),
    @CFINYEAR VARCHAR(10),@CMEMONOVAL VARCHAR(20),@NSTEP NUMERIC(10),@CERRORMSG VARCHAR(1000),
    @CKEYFIELDVAL1 VARCHAR(100),@CLOCATIONID VARCHAR(5),@CAC_CODE VARCHAR(10),
    @DTSQL NVARCHAR(MAX),@CSOURCEDB VARCHAR(100),@CTABLE_SUFFIX VARCHAR(100),
    @CPOM_TABLENAME VARCHAR(100),@CTEMP_POM_TABLENAME VARCHAR(100),
    @CPOD_TABLENAME VARCHAR(100),@CTEMP_POD_TABLENAME VARCHAR(100),
    @CTEMP_SKU_TABLENAME VARCHAR(100),
    @CTEMP_ARTICLE_TABLENAME VARCHAR(100),
    @CTEMP_SECTIOND_TABLENAME VARCHAR(100),
    @CTEMP_SECTIONM_TABLENAME VARCHAR(100),
    @CTEMP_PARA1_TABLENAME VARCHAR(100),
    @CTEMP_PARA2_TABLENAME VARCHAR(100),
    @CTEMP_PARA3_TABLENAME VARCHAR(100),
    @CTEMP_PARA4_TABLENAME VARCHAR(100),
    @CTEMP_PARA5_TABLENAME VARCHAR(100),
    @CTEMP_PARA6_TABLENAME VARCHAR(100),
    @CTEMP_UOM_TABLENAME VARCHAR(100),
    @CTEMP_LM01106_TABLENAME VARCHAR(100)
    
    
    SET @NSTEP=05
    SET @CTABLE_SUFFIX=REPLACE(@CMEMOID,'-','_')
    SELECT @CTEMP_POM_TABLENAME='TMP_PO_POM01106_'+LTRIM(RTRIM(@CTABLE_SUFFIX)),
           @CTEMP_POD_TABLENAME='TMP_PO_POD01106_'+LTRIM(RTRIM(@CTABLE_SUFFIX)),
           @CTEMP_SKU_TABLENAME='TMP_PO_SKU_'+LTRIM(RTRIM(@CTABLE_SUFFIX)),
           @CTEMP_ARTICLE_TABLENAME='TMP_PO_ARTICLE_'+LTRIM(RTRIM(@CTABLE_SUFFIX)),
           @CTEMP_SECTIOND_TABLENAME='TMP_PO_SECTIOND_'+LTRIM(RTRIM(@CTABLE_SUFFIX)),
           @CTEMP_SECTIONM_TABLENAME='TMP_PO_SECTIONM_'+LTRIM(RTRIM(@CTABLE_SUFFIX)),
           @CTEMP_PARA1_TABLENAME='TMP_PO_PARA1_'+LTRIM(RTRIM(@CTABLE_SUFFIX)),
           @CTEMP_PARA2_TABLENAME='TMP_PO_PARA2_'+LTRIM(RTRIM(@CTABLE_SUFFIX)),
           @CTEMP_PARA3_TABLENAME='TMP_PO_PARA3_'+LTRIM(RTRIM(@CTABLE_SUFFIX)),
           @CTEMP_PARA4_TABLENAME='TMP_PO_PARA4_'+LTRIM(RTRIM(@CTABLE_SUFFIX)),
           @CTEMP_PARA5_TABLENAME='TMP_PO_PARA5_'+LTRIM(RTRIM(@CTABLE_SUFFIX)),
           @CTEMP_PARA6_TABLENAME='TMP_PO_PARA6_'+LTRIM(RTRIM(@CTABLE_SUFFIX)),
           @CTEMP_UOM_TABLENAME='TMP_PO_UOM_'+LTRIM(RTRIM(@CTABLE_SUFFIX)),
           @CTEMP_LM01106_TABLENAME='TMP_PO_LM01106_'+LTRIM(RTRIM(@CTABLE_SUFFIX))
    
    
    
    SET @CSOURCEDB = ''
    
    SET @CERRORMSG=''
    SET @CTABLE_SUFFIX=REPLACE(@CMEMOID,'-','_')
    
    
 BEGIN TRANSACTION  
 BEGIN TRY 
    
    
   DECLARE @CLOCID VARCHAR(5)
    
   SELECT TOP 1 @CLOCID=VALUE FROM CONFIG WHERE CONFIG_OPTION ='LOCATION_ID'
 --  SELECT @CCONTROL_AC_CODE=CONTROL_AC_CODE  FROM LOCATION 
  
     DECLARE @CCONTROL_DEPT_ID VARCHAR(5)

	SET @DTSQL=N'SELECT @CCONTROL_DEPT_ID=dept_id FROM '+@CSOURCEDB+@CTEMP_POM_TABLENAME+''
	EXEC SP_EXECUTESQL @DTSQL,N'@CCONTROL_DEPT_ID VARCHAR(5) OUTPUT',@CCONTROL_DEPT_ID OUTPUT
		
	IF ISNULL(@CCONTROL_DEPT_ID,'')='EV'	
	SET @CCONTROL_AC_CODE='LU00001200'
	ELSE
	SET @CCONTROL_AC_CODE='LC00000002'	
  --IF ISNULL(@CCONTROL_AC_CODE,'')=''
  --SET @CCONTROL_AC_CODE='LC00000002'
  
--  SET @CCONTROL_AC_CODE='H112100403'
  
    SET @DTSQL=N'IF EXISTS(SELECT TOP 1 ''U'' FROM  '+@CSOURCEDB+@CTEMP_POM_TABLENAME+' A
    JOIN BUYER_ORDER_MST B ON A.PO_NO=B.REF_NO AND A.FIN_YEAR=B.FIN_YEAR
    WHERE B.CANCELLED=0)
    SET @CERRORMSG=''PO ALREADY EXISTS'' '
   PRINT @DTSQL
   EXEC SP_EXECUTESQL @DTSQL,N'@CERRORMSG VARCHAR(1000) OUTPUT',@CERRORMSG OUTPUT
    
 
   IF ISNULL(@CERRORMSG,'')<>''
   begin
       SET @DTSQL=N'SELECT TOP 1 @CKEYFIELDVAL1=B.ORDER_ID FROM  '+@CSOURCEDB+@CTEMP_POM_TABLENAME+' A
       JOIN BUYER_ORDER_MST B ON A.PO_NO=B.REF_NO AND A.FIN_YEAR=B.FIN_YEAR
       WHERE B.CANCELLED=0 '
	   PRINT @DTSQL
	   EXEC SP_EXECUTESQL @DTSQL,N'@CKEYFIELDVAL1 VARCHAR(100) OUTPUT',@CKEYFIELDVAL1 OUTPUT
      GOTO END_PROC
   end
       set @NSTEP=10
   --SET DELIVERY DATE FOR BUYER ORDER MST FROM PO   
   DECLARE @DEL_DATE DATE,@DELIVERY_DATE VARCHAR(100)
   
   SET @DTSQL=N'SELECT TOP 1 @DEL_DATE=ISNULL(DELIVERY_DT,'''') FROM '+@CSOURCEDB+@CTEMP_POD_TABLENAME+' A ORDER BY ISNULL(DELIVERY_DT,'''') DESC'
   PRINT @DTSQL
   EXEC SP_EXECUTESQL @DTSQL,N'@DEL_DATE DATE OUTPUT',@DEL_DATE OUTPUT   
   
   IF YEAR(ISNULL(@DEL_DATE,'1900-01-01'))=1900
      BEGIN
         SET @DTSQL=N'SELECT TOP 1 @DEL_DATE =ISNULL(PO_DT,'''') FROM '+@CSOURCEDB+@CTEMP_POM_TABLENAME+' A'
		 PRINT @DTSQL
		 EXEC SP_EXECUTESQL @DTSQL,N'@DEL_DATE DATE OUTPUT',@DEL_DATE OUTPUT   
      END
   SET @DELIVERY_DATE=REPLACE(CONVERT(VARCHAR,@DEL_DATE,102),'.','-')
   --SET DELIVERY DATE FOR BUYER ORDER MST FROM PO   
      
      
   SET @DTSQL=N' UPDATE '+@CSOURCEDB+@CTEMP_POM_TABLENAME+' SET AC_CODE='''+@CCONTROL_AC_CODE+''' '
   PRINT @DTSQL
   EXEC SP_EXECUTESQL @DTSQL
     
   IF OBJECT_ID ('TEMPDB..#TMPMASTERSENC','U') IS NOT NULL
      DROP TABLE #TMPMASTERSENC
    
   SELECT  CAST('' AS VARCHAR(100)) AS SECTION_NAME,CAST('' AS VARCHAR(100)) AS SUB_SECTION_NAME,CAST('' AS VARCHAR(100)) AS ARTICLE_NO,
     CAST('' AS VARCHAR(100)) AS PARA1_NAME,CAST('' AS VARCHAR(100)) AS PARA2_NAME,CAST('' AS VARCHAR(100)) AS PARA3_NAME,  
	 CAST('' AS VARCHAR(100)) AS PARA4_NAME,CAST('' AS VARCHAR(100)) AS PARA5_NAME,CAST('' AS VARCHAR(100)) AS PARA6_NAME,
	 CAST(0 AS NUMERIC(14,2)) AS PURCHASE_PRICE,CAST(0 AS NUMERIC(14,2)) AS MRP,CAST(0 AS NUMERIC(14,2)) AS WS_PRICE,  
	 CAST( 0 AS INT) AS CODING_SCHEME,CAST('' AS VARCHAR(100)) AS PRODUCT_CODE,CAST('' AS VARCHAR(100))AS UOM_NAME,
	 CAST('' AS VARCHAR(100)) AS AC_NAME,CAST('' AS VARCHAR(100)) AS ROW_ID,
	 CAST(0 AS BIT) AS STOCK_NA,CAST(0 AS NUMERIC(14,2)) AS FIX_MRP, CAST('' AS VARCHAR(MAX)) PRODUCT_NAME, CAST(0 AS BIT) AS GEN_EAN_CODES,
	 CAST('' AS VARCHAR(7))  AS BIN_ID,CAST('' AS VARCHAR(MAX))  AS ARTICLE_NAME, CAST('' AS VARCHAR(100)) FORM_NAME,
	 CAST('' AS VARCHAR(100)) ARTICLE_ALIAS,CAST('' AS VARCHAR(100)) AS SUB_SECTION_ALIAS,CAST('' AS VARCHAR(100)) SECTION_ALIAS,
	 CAST('' AS VARCHAR(15)) HSN_CODE,CAST('' AS VARCHAR(40)) PARA1_SET,CAST('' AS VARCHAR(40)) PARA2_SET,
	 CAST('' AS VARCHAR(40)) P1_SET,CAST('' AS VARCHAR(40)) P2_SET,CAST(0 AS BIT) AS PERISHABLE,CAST('' AS VARCHAR(1000)) AS article_desc
	 ,CAST('' AS VARCHAR(1000)) AS VENDOR_EAN_NO,CAST('' AS VARCHAR(1000)) AS BATCH_NO,
	 CAST('' AS DATETIME) AS EXPIRY_DT
	 INTO #TMPMASTERSENC WHERE 1=2
   

   set @NSTEP=50
   --SELECT @CTEMP_POD_TABLENAME,@CTEMP_POM_TABLENAME,@CTEMP_SKU_TABLENAME,@CTEMP_SKU_TABLENAME,
   --@CTEMP_ARTICLE_TABLENAME,@CTEMP_SECTIOND_TABLENAME,@CTEMP_SECTIONM_TABLENAME,@CTEMP_PARA1_TABLENAME,
   --@CTEMP_PARA2_TABLENAME,@CTEMP_PARA3_TABLENAME,@CTEMP_PARA4_TABLENAME,@CTEMP_PARA5_TABLENAME,
   --@CTEMP_PARA6_TABLENAME,@CTEMP_UOM_TABLENAME,@CTEMP_LM01106_TABLENAME
   
	SET @DTSQL=N'INSERT #TMPMASTERSENC (SECTION_NAME,SUB_SECTION_NAME,ARTICLE_NO,PARA1_NAME,PARA2_NAME,PARA3_NAME,  
		PARA4_NAME,PARA5_NAME,PARA6_NAME,PURCHASE_PRICE,MRP,WS_PRICE,  
		CODING_SCHEME,PRODUCT_CODE,UOM_NAME, AC_NAME,ROW_ID,STOCK_NA,FIX_MRP,  
		PRODUCT_NAME,GEN_EAN_CODES,BIN_ID,ARTICLE_NAME,FORM_NAME,ARTICLE_ALIAS,
		SUB_SECTION_ALIAS,SECTION_ALIAS,HSN_CODE,PARA1_SET,PARA2_SET,P1_SET,P2_SET,PERISHABLE)  
				 
		SELECT ISNULL(SECTION_NAME,''''),ISNULL(SUB_SECTION_NAME,''''),ISNULL(ARTICLE_NO,''''),  
		ISNULL(PARA1_NAME,''''),ISNULL(PARA2_NAME,''''),ISNULL(PARA3_NAME,''''),  
		ISNULL(PARA4_NAME,''''),ISNULL(PARA5_NAME,''''),ISNULL(PARA6_NAME,''''),  
		ISNULL(A.PURCHASE_PRICE,0),ISNULL(A.MRP,0),ISNULL(A.WHOLESALE_PRICE,0) AS WS_PRICE,  
		ISNULL(CONVERT(NUMERIC(5,0),CODING_SCHEME),0),ISNULL(A.PRODUCT_CODE,''''),ISNULL(UOM_NAME,''''),  
		''_0000000000'' AS AC_NAME,ISNULL(A.ROW_ID,''''),ISNULL(STOCK_NA,0),  
	    ISNULL(A.FIX_MRP,0),ISNULL(PRODUCT_NAME,''''),ISNULL(GEN_EAN_CODES,0),  
		ISNULL(A.BIN_ID,''000''),ISNULL(ARTICLE_NAME,''''),'''' AS FORM_NAME ,E.ALIAS  ,
		ISNULL(F.ALIAS,''''),ISNULL(G.ALIAS,''''),  ''0000000000'' as hsn_code
		,E.PARA1_SET AS PARA1_SET ,LTRIM(RTRIM(ISNULL(E.PARA2_SET,'''')))  AS PARA2_SET
		,P1.PARA1_SET AS PARA1_SET ,LTRIM(RTRIM(ISNULL(P2.PARA2_SET,'''')))  AS PARA2_SET
		,E.PERISHABLE
		FROM '+@CSOURCEDB+@CTEMP_POD_TABLENAME+' A
        JOIN '+@CSOURCEDB+@CTEMP_POM_TABLENAME+' B ON A.PO_ID=B.PO_ID
        JOIN '+@CSOURCEDB+@CTEMP_SKU_TABLENAME+' SKU  ON SKU.PRODUCT_CODE =A.PRODUCT_CODE 
        JOIN '+@CSOURCEDB+@CTEMP_ARTICLE_TABLENAME+' E (NOLOCK) ON SKU.ARTICLE_CODE=E.ARTICLE_CODE  
	    JOIN '+@CSOURCEDB+@CTEMP_SECTIOND_TABLENAME+' F (NOLOCK) ON E.SUB_SECTION_CODE=F.SUB_SECTION_CODE  
	    JOIN '+@CSOURCEDB+@CTEMP_SECTIONM_TABLENAME+' G (NOLOCK) ON F.SECTION_CODE=G.SECTION_CODE  
	    JOIN '+@CSOURCEDB+@CTEMP_PARA1_TABLENAME+' P1 (NOLOCK) ON A.PARA1_CODE=P1.PARA1_CODE  
	    JOIN '+@CSOURCEDB+@CTEMP_PARA2_TABLENAME+' P2 (NOLOCK) ON A.PARA2_CODE=P2.PARA2_CODE 
	    JOIN '+@CSOURCEDB+@CTEMP_PARA3_TABLENAME+' P3 (NOLOCK) ON A.PARA3_CODE=P3.PARA3_CODE 
	    JOIN '+@CSOURCEDB+@CTEMP_PARA4_TABLENAME+' P4 (NOLOCK) ON A.PARA4_CODE=P4.PARA4_CODE 
	    JOIN '+@CSOURCEDB+@CTEMP_PARA5_TABLENAME+' P5 (NOLOCK) ON A.PARA5_CODE=P5.PARA5_CODE 
	    JOIN '+@CSOURCEDB+@CTEMP_PARA6_TABLENAME+' P6 (NOLOCK) ON A.PARA6_CODE=P6.PARA6_CODE 
	    JOIN '+@CSOURCEDB+@CTEMP_UOM_TABLENAME+' UOM ON UOM.UOM_CODE=E.UOM_CODE
        WHERE A.PO_ID ='''+@CMEMOID+''' AND A.PRODUCT_CODE<>'''' '
	PRINT @DTSQL                     
	EXEC SP_EXECUTESQL @DTSQL 
	
	 set @NSTEP=55
	
	IF EXISTS(SELECT TOP 1 'U' FROM #TMPMASTERSENC)
    EXEC SP_GETMASTERS '01119',1, @CERRORMSG OUTPUT,@cdept_id=@CDEPT_ID
    
  
   set @NSTEP=60
    IF ISNULL(@CERRORMSG,'')<>''
    BEGIN
        SET @CERRORMSG =@CERRORMSG+ 'STEP- ' + LTRIM(STR(@NSTEP)) + ' '
		GOTO END_PROC  
    
    END
  
  set @NSTEP=65
  	SET @DTSQL=N'SELECT @CFINYEAR=FIN_YEAR FROM '+@CSOURCEDB+@CTEMP_POM_TABLENAME+''
		EXEC SP_EXECUTESQL @DTSQL,N'@CFINYEAR VARCHAR(10) OUTPUT',@CFINYEAR OUTPUT
		
   IF OBJECT_ID ('TEMPDB..#TMPNEWMASTER','U') IS NOT NULL
         DROP TABLE #TMPNEWMASTER
    

   


  ;WITH CTE AS
  (
    SELECT A.*,ART.ARTICLE_CODE AS NEW_ARTICLE_CODE,
    P1.PARA1_CODE AS NEW_PARA1_CODE,
    P2.PARA2_CODE AS NEW_PARA2_CODE,
    P3.PARA3_CODE AS NEW_PARA3_CODE,
    P4.PARA4_CODE AS NEW_PARA4_CODE, 
    P5.PARA5_CODE AS NEW_PARA5_CODE,
    P6.PARA6_CODE AS NEW_PARA6_CODE,
    LM.AC_CODE AS NEW_AC_CODE,
    SR=ROW_NUMBER() OVER (PARTITION BY A.ROW_ID ORDER BY A.ROW_ID)
    FROM #TMPMASTERSENC A
    JOIN ARTICLE ART ON ART.ARTICLE_NO=A.ARTICLE_NO
    JOIN PARA1 P1 ON P1.PARA1_NAME=A.PARA1_NAME
    JOIN PARA2 P2 ON P2.PARA2_NAME=A.PARA2_NAME
    JOIN PARA3 P3 ON P3.PARA3_NAME=A.PARA3_NAME
    JOIN PARA4 P4 ON P4.PARA4_NAME=A.PARA4_NAME
    JOIN PARA5 P5 ON P5.PARA5_NAME=A.PARA5_NAME
    JOIN PARA6 P6 ON P6.PARA6_NAME=A.PARA6_NAME
    JOIN LM01106 LM ON LM.AC_NAME=A.AC_NAME
    
    )
    
    SELECT * INTO #TMPNEWMASTER FROM CTE WHERE SR=1
    --SELECT * FROM LM01106 WHERE AC_NAME ='ADIDAS'
    
   
    UPDATE ART SET ORDERITEM=0 FROM ARTICLE ART 
   JOIN #TMPNEWMASTER B ON ART.ARTICLE_CODE =B.NEW_ARTICLE_CODE 
   WHERE ISNULL(ART.ORDERITEM,0)<>0
               
    SELECT @CLOCATIONID=VALUE  FROM CONFIG WHERE CONFIG_OPTION ='LOCATION_ID'

	set @CMEMONOPREFIX=@CLOCATIONID+isnull((select user_alias from users  where user_code='0000000'),'')

    
    SET @CMASTERTABLENAME='BUYER_ORDER_MST'
    SET @CMEMONO='ORDER_NO'
    SET @NMEMONOLEN=LEN(@CMEMONOPREFIX)+6
   
   set @NSTEP=70
   
--EXEC SP3S_IMPORT_BUYER_ORDER 'AK01119000000AK-000002'
    LBLGENNEXVAL:
    
    EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,
	@CFINYEAR,0, @CMEMONOVAL OUTPUT   
	
	IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
	BEGIN
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'	
		GOTO END_PROC  		
	END
	
	
	IF EXISTS (SELECT TOP 1 'U' FROM BUYER_ORDER_MST WHERE ORDER_NO=@CMEMONOVAL AND FIN_YEAR =@CFINYEAR )
	GOTO LBLGENNEXVAL
	
	
   SET @CKEYFIELDVAL1 = @CLOCATIONID + @CFINYEAR+ REPLICATE('0', 15-LEN(LTRIM(RTRIM(@CMEMONOVAL)))) + LTRIM(RTRIM(@CMEMONOVAL))
   
    set @NSTEP=100
   
    SET @DTSQL=N'INSERT BUYER_ORDER_MST	(AC_CODE, TOTAL_AMOUNT, LAST_UPDATE, SUBTOTAL, DISCOUNT_PERCENTAGE, DISCOUNT_AMOUNT, OTHER_CHARGES, PAYMENT_DETAILS, MODE, CANCELLED, COMPANY_CODE, USER_CODE, SENT_TO_HO, ORDER_ID, FIN_YEAR, DELIVERY_DT, DEPT_ID, 
    CHECKED_BY, SENT_BY, SENT, ROUND_OFF, REF_NO, TRAIL_DT, CONVERTED_BY_USER_CODE, MEMO_TYPE, EMP_CODE, EDT_USER_CODE, SHIPPING_ADDRESS, ORDER_NO, ORDER_DT, APPROVED, REMARKS, CUSTOMER_CODE, SMS_SENT, MANUAL_DISCOUNT, EDITED, ORDER_TIME, ORDER_TYPE, 
    SALE_EMP_CODE, MERCHANT_CODE, ORDER_STATUS, SHIPPING_ADDRESS2, SHIPPING_ADDRESS3, SHIPPING_AREA_CODE, SHIPPING_PIN, WAY_BILL, BOOKED_BY, ANGADIA_CODE, BROKER_AC_CODE, CREDIT_DAYS, PAY_TYPE, SHIPPING_AREA_NAME, SHIPPING_CITY_NAME, SHIPPING_STATE_NAME, 
    LEAD_DAYS, ORD_CHARGES_TYPE, INV_MODE )  

    SELECT 	'''+@CCONTROL_AC_CODE+''' AS  AC_CODE, TOTAL_AMOUNT, LAST_UPDATE, SUBTOTAL, DISCOUNT_PERCENTAGE, DISCOUNT_AMOUNT, OTHER_CHARGES, 
    '''' AS PAYMENT_DETAILS, MODE, CANCELLED, COMPANY_CODE,''0000000'' AS  USER_CODE, SENT_TO_HO, 
    '''+@CKEYFIELDVAL1+''' AS ORDER_ID, FIN_YEAR, '''+@DELIVERY_DATE+''','''+@CDEPT_ID+''' DEPT_ID, 
    CHECKED_BY, SENT_BY, SENT, ROUND_OFF,A.PO_NO AS REF_NO, 
    '''' AS TRAIL_DT, ''0000000'' AS CONVERTED_BY_USER_CODE
    ,1 AS  MEMO_TYPE,''0000000'' AS  EMP_CODE,''0000000'' AS EDT_USER_CODE, 
    '''' AS SHIPPING_ADDRESS,'''+@CMEMONOVAL+''' AS  ORDER_NO, PO_DT AS ORDER_DT
    ,0 AS  APPROVED, REMARKS, 
    ''000000000000'' AS CUSTOMER_CODE, 0 AS SMS_SENT, MANUAL_DISCOUNT, 0 AS EDITED, 
    PO_TIME ORDER_TIME,0 AS  ORDER_TYPE, ''0000000'' AS SALE_EMP_CODE, 
    '''' AS MERCHANT_CODE, 1 AS ORDER_STATUS, '''' AS SHIPPING_ADDRESS2, '''' AS SHIPPING_ADDRESS3, 
    '''' AS SHIPPING_AREA_CODE,'''' AS  SHIPPING_PIN,'''' AS  WAY_BILL, '''' AS BOOKED_BY, 
    '''' AS ANGADIA_CODE, ''0000000000'' AS BROKER_AC_CODE, CREDIT_DAYS,0 AS  PAY_TYPE, 
    '''' AS SHIPPING_AREA_NAME, '''' AS SHIPPING_CITY_NAME,'''' AS  SHIPPING_STATE_NAME, 0 AS LEAD_DAYS, 
    0 AS ORD_CHARGES_TYPE, 0 AS INV_MODE 
    FROM '+@CSOURCEDB+@CTEMP_POM_TABLENAME+' A   '

    PRINT @DTSQL
    EXEC SP_EXECUTESQL @DTSQL

	
  
  
  set @NSTEP=110
	 SET @DTSQL=N'INSERT BUYER_ORDER_DET	( ORDER_ID, PARA1_CODE, PARA2_CODE, QUANTITY, ROW_ID, LAST_UPDATE, WS_PRICE, RFNET, ARTICLE_CODE, GROSS_WSP, DISCOUNT_PERCENTAGE, DISCOUNT_AMOUNT, REMARKS, PRODUCT_CODE, MANUAL_DISCOUNT, PARA3_CODE, 
	 ONLINE_PRODUCT_CODE, ITEM_EMP_CODE, ITEM_MERCHANT_CODE, ADJ_QTY, SR_NO,HSN_CODE,XN_VALUE_WITHOUT_GST,GST_PERCENTAGE,IGST_AMOUNT,CGST_AMOUNT,SGST_AMOUNT,XN_VALUE_WITH_GST)  
	 SELECT 	'''+@CKEYFIELDVAL1+''' AS  ORDER_ID,NEW_PARA1_CODE AS PARA1_CODE, NEW_PARA2_CODE AS PARA2_CODE, 
	 SUM(QUANTITY) AS QUANTITY,CONVERT(VARCHAR(40), NEWID())  AS   ROW_ID,GETDATE() AS  LAST_UPDATE,
	 MAX(A.PURCHASE_PRICE) AS  WS_PRICE, 
	 0 AS RFNET,NEW_ARTICLE_CODE AS  ARTICLE_CODE,MAX(A.PURCHASE_PRICE) AS GROSS_WSP, 
	 DISCOUNT_PERCENTAGE, SUM(DISCOUNT_AMOUNT) AS DISCOUNT_AMOUNT,'''' AS  REMARKS,'''' AS  PRODUCT_CODE, 
	 0 AS MANUAL_DISCOUNT, NEW_PARA3_CODE AS  PARA3_CODE,'''' AS  ONLINE_PRODUCT_CODE, 
	 ''0000000'' AS ITEM_EMP_CODE,''0000000'' ITEM_MERCHANT_CODE,0 AS ADJ_QTY, 0 AS SR_NO,
	 A.HSN_CODE,
     SUM(XN_VALUE_WITHOUT_GST) AS XN_VALUE_WITHOUT_GST,
     GST_PERCENTAGE,
     SUM(IGST_AMOUNT) AS IGST_AMOUNT,
     SUM(CGST_AMOUNT) AS CGST_AMOUNT,
     SUM(SGST_AMOUNT) AS SGST_AMOUNT,
     SUM(XN_VALUE_WITH_GST ) AS XN_VALUE_WITH_GST
	 FROM '+@CSOURCEDB+@CTEMP_POD_TABLENAME+' A
     JOIN #TMPNEWMASTER TMP ON A.ROW_ID=TMP.ROW_ID 
     GROUP BY  TMP.NEW_PARA3_CODE, 
     NEW_ARTICLE_CODE, NEW_PARA1_CODE, NEW_PARA2_CODE,
     A.DISCOUNT_PERCENTAGE,A.HSN_CODE,GST_PERCENTAGE'
     PRINT @DTSQL
     EXEC SP_EXECUTESQL @DTSQL
   
    
     SET @DTSQL=N'INSERT BUYER_ORDER_BARCODE_DET	( ORDER_ID, ROW_ID, REF_ROW_ID, PRODUCT_CODE, QUANTITY )  
     SELECT '''+@CKEYFIELDVAL1+''' AS  ORDER_ID,CONVERT(VARCHAR(40), NEWID())  AS  ROW_ID,ORD.ROW_ID AS  REF_ROW_ID, 
     A.PRODUCT_CODE, A.QUANTITY 
     FROM '+@CSOURCEDB+@CTEMP_POD_TABLENAME+' A 
     JOIN #TMPNEWMASTER TMP ON A.ROW_ID=TMP.ROW_ID 
     JOIN BUYER_ORDER_DET ORD ON ORD.ORDER_ID='''+@CKEYFIELDVAL1 +'''
     AND TMP.NEW_PARA1_CODE=ORD.PARA1_CODE AND ORD.ARTICLE_CODE=TMP.NEW_ARTICLE_CODE 
     AND ORD.PARA3_CODE=TMP.NEW_PARA3_CODE AND ORD.PARA2_CODE =TMP.NEW_PARA2_CODE '
     PRINT @DTSQL
     EXEC SP_EXECUTESQL @DTSQL
     
     DECLARE @NPOD_QTY NUMERIC(10,3),@NORDER_DET_QTY NUMERIC(10,3),@NBARCODE_DET_QTY NUMERIC(10,3)
     
     SET @DTSQL=N'SELECT @NPOD_QTY=SUM(QUANTITY) FROM '+@CSOURCEDB+@CTEMP_POD_TABLENAME+'  WHERE PO_ID ='''+@CMEMOID+''''
     EXEC SP_EXECUTESQL @DTSQL,N'@NPOD_QTY NUMERIC(10,3) OUTPUT',@NPOD_QTY OUTPUT
     
      SELECT @NORDER_DET_QTY=SUM(QUANTITY) FROM BUYER_ORDER_DET WHERE ORDER_ID =@CKEYFIELDVAL1
     
     SELECT @NBARCODE_DET_QTY=SUM(QUANTITY) FROM BUYER_ORDER_BARCODE_DET WHERE ORDER_ID =@CKEYFIELDVAL1
     
     
     IF (ISNULL(@NPOD_QTY,0)<>ISNULL(@NORDER_DET_QTY,0))OR (ISNULL(@NPOD_QTY,0)<>ISNULL(@NBARCODE_DET_QTY,0))
     BEGIN
         	SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' QUANTITY DIFF IN PO & ORDER PLEASE CHECK....'	
		    GOTO END_PROC  		
     END
      
 END TRY  
 BEGIN CATCH  
  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()  
  GOTO END_PROC  
 END CATCH  
   
END_PROC:  

--SELECT * FROM BUYER_ORDER_DET WHERE ORDER_ID ='LC011190000000LC000014'
--SELECT * FROM BUYER_ORDER_BARCODE_DET WHERE ORDER_ID ='LC011190000000LC000014'  

 IF @@TRANCOUNT>0 
 BEGIN  
  IF ISNULL(@CERRORMSG,'')=''           
     commit TRANSACTION  
  ELSE  
     ROLLBACK  
 END  
 
 
 DECLARE @CTABLESSTR VARCHAR(MAX)
 SET @CTABLESSTR='STATE,CITY,AREA,HD01106,LM01106,LMP01106,UOM,SECTIONM,SECTIOND,ARTICLE,PARA1,PARA2,PARA3,PARA4,PARA5,PARA6,ATTRM,ATTR_KEY,ART_ATTR,SKU,SKU_OH,FORM,POM01106,POD01106,POM01106_AUDIT,POD01106_AUDIT,XNSTABLELIST'

IF ISNULL(@CERRORMSG,'')<>'' and @CERRORMSG<>'PO ALREADY EXISTS'
SET @CKEYFIELDVAL1=''

if @CERRORMSG='PO ALREADY EXISTS'
set @CERRORMSG=''


IF NOT EXISTS (SELECT TOP 1 'U' FROM MIRROR_SYNCH_LOG WHERE XN_TYPE='BO_PO') AND ISNULL(@CERRORMSG,'')<>''
BEGIN
    INSERT MIRROR_SYNCH_LOG	( DEPT_ID, ERRMSG, LAST_UPDATE, MEMO_ID, XN_TYPE ) 
    SELECT 	'LC'  DEPT_ID,@CERRORMSG AS  ERRMSG, GETDATE() AS LAST_UPDATE,@CKEYFIELDVAL1 MEMO_ID,'BO_PO' XN_TYPE 

END
else
begin
    
    delete from MIRROR_SYNCH_LOG WHERE XN_TYPE='BO_PO'

end

 EXEC SP3S_DROPTEMPTABLES_PO
    @CXNTYPE='PO',
    @CTABLESUFFIX=@CTABLE_SUFFIX,
    @CTABLESSTR=@CTABLESSTR
    

IF @CALLEDFROMTASK=0
SELECT @CKEYFIELDVAL1 AS ORDER_ID,@CMEMOID AS PO_ID,@CERRORMSG AS ERRMSG  
ELSE
BEGIN
   INSERT INTO #TBLERROR(ORDER_ID,PO_ID,ERRMSG)
   SELECT @CKEYFIELDVAL1 AS ORDER_ID,@CMEMOID AS PO_ID,@CERRORMSG AS ERRMSG  
  

END
	
END
--new
