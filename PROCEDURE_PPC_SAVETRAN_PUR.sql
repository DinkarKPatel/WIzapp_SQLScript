CREATE PROCEDURE PPC_SAVETRAN_PUR
(
	@NUPDATEMODE		NUMERIC(1,0),
	@NSPID				INT,
	@CMEMONOPREFIX		VARCHAR(50),
	@CFINYEAR			VARCHAR(10)='',
	@CMACHINENAME		VARCHAR(100)='',
	@CWINDOWUSERNAME	VARCHAR(100)='',
	@CWIZAPPUSERCODE	VARCHAR(10)='0000000',
	@CMEMOID			VARCHAR(40)='',
	@CPRDDEPARTMENTID	CHAR(7)='',
	@BTHROUGHIMPORT		BIT=0,
	@DRECEIPTDT			DATETIME = '',
	@CLOCID				VARCHAR(2)=''
)
----WITH ENCRYPTION
AS
BEGIN
	-- @NUPDATEMODE:	1- NEW PUR ADDED, 
	--					2- NEW BOX ADDED TO EXISTING PUR, 
	--					3- CURRENT PUR CANCELLED, 
	--					4- EXISTING PUR EDITED

	DECLARE @CTEMPDBNAME			VARCHAR(100),
			@CMASTERTABLENAME		VARCHAR(100),
			@CDETAILTABLENAME		VARCHAR(100),
			@CDETAILTABLENAME1		VARCHAR(100),
			
			@CINTERMIDIATETABLENAME		VARCHAR(100),
			@CTEMPMASTERTABLENAME	VARCHAR(100),
			@CTEMPDETAILTABLENAME	VARCHAR(100),
			@CTEMPDETAILTABLENAME1	VARCHAR(100),
			
			@CTEMPMASTERTABLE		VARCHAR(100),
			@CTEMPDETAILTABLE		VARCHAR(100),
			@CTEMPDETAILTABLE1		VARCHAR(100),
			
			@CTEMPITERMIDIATETABLENAME	VARCHAR(100),
			@CTEMPITERMIDIATETABLE	VARCHAR(100),
			@CERRORMSG				VARCHAR(500),
			@LDONOTUPDATESTOCK		BIT,
			@CKEYFIELD1				VARCHAR(50),
			@CKEYFIELDVAL1			VARCHAR(50),
			@CMEMONO				VARCHAR(20),
			@NMEMONOLEN				NUMERIC(20,0),
			@CMEMONOVAL				VARCHAR(50),
			@CMEMODEPTID			VARCHAR(2),
			@CLOCATIONID			VARCHAR(2),
			@CHODEPTID				VARCHAR(2),
			@CCMD					NVARCHAR(4000),
			@CCMDOUTPUT				NVARCHAR(4000),
			@NSAVETRANLOOP			BIT,
			@NSTEP					INT,
			@NSUBTOTAL NUMERIC(20,2),
			@LENABLETEMPDATABASE	BIT,@BNEGSTOCKFOUND BIT,
			@CWSLINVOICEID	VARCHAR(22),
			@BPURTHROUGHIMPORT	BIT,@CMSG VARCHAR(200),@NTAX NUMERIC(20,2)

	BEGIN TRY
		
		BEGIN TRANSACTION
		
		SET @BPURTHROUGHIMPORT=0
		
		SET @NSTEP = 10

		SET @CTEMPDETAILTABLENAME	= 'PUR_PPC_PID01106_UPLOAD'
		SET @CTEMPITERMIDIATETABLENAME	= 'PUR_PPC_PO_PUR_UPLOAD'

		--- CREATE NEW MASTERS & THEN REPLACE THEM IN THE PURCHASE DETAIL TABLE
		--- IF PURCHASE DONE THROUGH IMPORT FILE 				
		IF @BTHROUGHIMPORT=1 
		BEGIN
			SET @NSTEP = 15
			PRINT 'COME IN IMPORTMASTERS'
			
				PRINT 'COME IN IMPORTMASTERS-1'
			EXEC SP_GETMASTERS '01112',2,@CERRORMSG OUTPUT 

	         PRINT 'COME OUT OF IMPORTMASTERS'			
			IF ISNULL(@CERRORMSG,'')<>''
				GOTO END_PROC
			
			SET @NSTEP = 20
			SET @CCMD=N'UPDATE A SET ARTICLE_CODE=ART.ARTICLE_CODE,PARA1_CODE=ISNULL(C.PARA1_CODE,''0000000''),
						PARA2_CODE=ISNULL(D.PARA2_CODE,''0000000''),PARA3_CODE=ISNULL(E.PARA3_CODE,''0000000''),
						PARA4_CODE=ISNULL(F.PARA4_CODE,''0000000''),PARA5_CODE=ISNULL(G.PARA5_CODE,''0000000''),
						PARA6_CODE=ISNULL(H.PARA6_CODE,''0000000'') FROM 
						'+@CTEMPDBNAME+@CTEMPDETAILTABLENAME+' A JOIN #TMPMASTERSENC B ON A.ROW_ID=B.ROW_ID
					    JOIN ARTICLE ART ON ART.ARTICLE_NO = B.ARTICLE_NO  
					    LEFT OUTER JOIN PARA1 C ON C.PARA1_NAME = B.PARA1_NAME  
					    LEFT OUTER JOIN PARA2 D ON D.PARA2_NAME = B.PARA2_NAME  
					    LEFT OUTER JOIN PARA3 E ON E.PARA3_NAME = B.PARA3_NAME  
					    LEFT OUTER JOIN PARA4 F ON F.PARA4_NAME = B.PARA4_NAME  
					    LEFT OUTER JOIN PARA5 G ON G.PARA5_NAME = B.PARA5_NAME  
					    LEFT OUTER JOIN PARA6 H ON H.PARA6_NAME = B.PARA6_NAME ' 
			PRINT @CCMD		    
			EXEC SP_EXECUTESQL @CCMD			

			SET @CCMD=N'UPDATE A SET ARTICLE_CODE=ART.ARTICLE_CODE,PARA1_CODE=ISNULL(C.PARA1_CODE,''0000000''),
						PARA2_CODE=ISNULL(D.PARA2_CODE,''0000000''),PARA3_CODE=ISNULL(E.PARA3_CODE,''0000000''),
						PARA4_CODE=ISNULL(F.PARA4_CODE,''0000000''),PARA5_CODE=ISNULL(G.PARA5_CODE,''0000000''),
						PARA6_CODE=ISNULL(H.PARA6_CODE,''0000000'') FROM 
						'+@CTEMPDBNAME+@CTEMPDETAILTABLENAME+' A JOIN #TMPMASTERSENC B ON A.PRODUCT_CODE=B.PRODUCT_CODE
					    JOIN ARTICLE ART ON ART.ARTICLE_NO = B.ARTICLE_NO  
					    LEFT OUTER JOIN PARA1 C ON C.PARA1_NAME = B.PARA1_NAME  
					    LEFT OUTER JOIN PARA2 D ON D.PARA2_NAME = B.PARA2_NAME  
					    LEFT OUTER JOIN PARA3 E ON E.PARA3_NAME = B.PARA3_NAME  
					    LEFT OUTER JOIN PARA4 F ON F.PARA4_NAME = B.PARA4_NAME  
					    LEFT OUTER JOIN PARA5 G ON G.PARA5_NAME = B.PARA5_NAME  
					    LEFT OUTER JOIN PARA6 H ON H.PARA6_NAME = B.PARA6_NAME
					    WHERE ISNULL(A.PRODUCT_CODE,'''')<>'''' ' 
			PRINT @CCMD		    
			EXEC SP_EXECUTESQL @CCMD			
			
			SET @BPURTHROUGHIMPORT=1
				
			DROP TABLE #TMPMASTERSENC
		END	
		
		
		
		IF OBJECT_ID('TEMPDB..#TMPPMT','U') IS NOT NULL
			DROP TABLE #TMPPMT
		
		SELECT PRODUCT_CODE INTO #TMPPMT FROM SKU WHERE 1=2

		IF OBJECT_ID('TEMPDB..#TMPXNSTK','U') IS NOT NULL
			DROP TABLE #TMPXNSTK						   
		
		SELECT PRODUCT_UID,QUANTITY_IN_STOCK AS XN_STOCK INTO #TMPXNSTK FROM PPC_PMT WHERE 1=2
		
			DELETE FROM PUR_PPC_PID01106_BARCODE_UPLOAD WHERE ROW_ID='' AND SP_ID =LTRIM(RTRIM(STR(@NSPID)))
		    IF @NUPDATEMODE=1
		    BEGIN
		        
				 INSERT PUR_PPC_PID01106_BARCODE_UPLOAD	( THAN_NO, PRODUCT_CODE, QUANTITY, ROW_ID, PRODUCT_UID, PID_ROW_ID, SP_ID )  
				 SELECT 	  THAN_NO=0, PRODUCT_CODE='', QUANTITY=A.QUANTITY, ROW_ID='LATER', PRODUCT_UID='', 
				 PID_ROW_ID=A.ROW_ID, SP_ID=A.SP_ID 
				 FROM PUR_PPC_PID01106_UPLOAD A
				 LEFT OUTER JOIN PUR_PPC_PID01106_BARCODE_UPLOAD B ON A.ROW_ID =B.PID_ROW_ID AND A.SP_ID =B.SP_ID 
				 WHERE A.SP_ID =LTRIM(RTRIM(STR(@NSPID))) AND B.SP_ID IS NULL
	   
		        
		    END
		   
	
		
		UPDATE PUR_PPC_PID01106_UPLOAD SET HSN_CODE ='0000000000' WHERE ISNULL(HSN_CODE,'')='' AND SP_ID =LTRIM(RTRIM(STR(@NSPID)))
		
		UPDATE PUR_PPC_PIM01106_UPLOAD SET PARTY_STATE_CODE ='00' WHERE ISNULL(PARTY_STATE_CODE,'')='' AND SP_ID =LTRIM(RTRIM(STR(@NSPID)))
		
			
		IF @NUPDATEMODE=3			
		BEGIN
			SET @NSTEP = 25
						
			IF ISNULL(@CMEMOID,'') = ''
			BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' MEMO ID REQUIRED .....CANNOT PROCEED'
				GOTO END_PROC  		
			END
			
			SET @CKEYFIELDVAL1=@CMEMOID
			
            IF EXISTS (SELECT TOP 1 'U' FROM PPC_PID01106_BARCODE A (NOLOCK)
			JOIN PPC_PID01106 B (NOLOCK) ON A.PID_ROW_ID =B.ROW_ID 
			JOIN PPC_PIM01106 C ON B.MRR_ID =C.MRR_ID
			JOIN PPC_AGENCY_ISSUE_MATERIAL_DET M1 ON M1.PRODUCT_UID=A.PRODUCT_UID
			JOIN PPC_AGENCY_ISSUE_MATERIAL_MST M2  ON M1.MEMO_ID  =M2.MEMO_ID
			WHERE C.CANCELLED =0 AND M2.MEMO_ID =@CKEYFIELDVAL1)
			BEGIN
			    
				SET @CERRORMSG='AGENCY RAW MATERIAL ALREAY ISSUED CAN NOT CANCELLED..... PLEASE CHECK'
				RETURN
			
			END
	
			SET @NSTEP = 30
						
			EXEC UPDATEPMT_PPC 
				  @CXNTYPE			= 'PUR'  
				, @CXNNO			= @CMEMONOVAL
				, @CXNID			= @CKEYFIELDVAL1
				, @NREVERTFLAG		= 1
				, @NALLOWNEGSTOCK	= 0
				, @NCHKDELBARCODES	= 0
				, @NUPDATEMODE		= @NUPDATEMODE				
				, @CCMD				= @CCMDOUTPUT OUTPUT
			
			IF @CCMDOUTPUT <> ''
			BEGIN
				PRINT @CCMDOUTPUT
				
				SET @NSTEP = 35
					
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR REVERTING THE STOCK STATUS IN PMT....'
				SET @BNEGSTOCKFOUND=1				
				EXEC SP_EXECUTESQL @CCMDOUTPUT
				GOTO END_PROC
			END
		
			SET @NSTEP = 38
			-- UPDATING SENTTOHO FLAG
			SET @CCMD = N'UPDATE PPC_PIM01106 SET CANCELLED = 1,LAST_UPDATE=GETDATE() ' + 
						N' WHERE MRR_ID = ''' + @CMEMOID + ''''
			EXEC SP_EXECUTESQL @CCMD
			
			GOTO END_PROC
		
		END

		SET @NSTEP = 50
        
				
		SET @CCMD=N'DELETE FROM '+@CTEMPDETAILTABLENAME+' WHERE ARTICLE_CODE IN ('''',''00000000'') AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @NSTEP = 55	
		IF @NUPDATEMODE<>2
		
		IF ISNULL(@CCMDOUTPUT,'') <> ''
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' DATA VALIDATION ON TEMP DATA FAILED : ' + @CCMDOUTPUT + '...'
			GOTO END_PROC
		END
		
		DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))

		SET @NSTEP = 60		-- SETTTING UP ENVIRONMENT
		SET @CTEMPDBNAME = ''
		SET @CMASTERTABLENAME	= 'PPC_PIM01106'
		SET @CDETAILTABLENAME	= 'PPC_PID01106'
		SET @CDETAILTABLENAME1	= 'PPC_PID01106_BARCODE'
		SET @CINTERMIDIATETABLENAME='PPC_PO_PUR'

	
		SET @CTEMPMASTERTABLE	= 'PUR_PPC_PIM01106_UPLOAD'
		SET @CTEMPDETAILTABLE	= 'PUR_PPC_PID01106_UPLOAD'
		SET @CTEMPDETAILTABLE1	= 'PUR_PPC_PID01106_BARCODE_UPLOAD'
		
		SET @CTEMPITERMIDIATETABLE= 'PUR_PPC_PO_PUR_UPLOAD'
		
		SET @CERRORMSG			= ''
		SET @LDONOTUPDATESTOCK	= 0
		SET @CKEYFIELD1			= 'MRR_ID'
		SET @CMEMONO			= 'MRR_NO'
		
		IF ISNULL(@CLOCID,'')=''
			SELECT @CLOCATIONID	= [VALUE] FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'
		ELSE
			SELECT @CLOCATIONID=@CLOCID
			
		SELECT @CHODEPTID		= [VALUE] FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'		
		
		SET @NSTEP=70
		
		IF ISNULL(@CMEMONOPREFIX,'')=''
		SET @CMEMONOPREFIX=@CLOCATIONID
		
		-- GETTING DEPT_ID FROM TEMP MASTER TABLE
		SET @CCMD = 'SELECT @CMEMODEPTID = DEPT_ID, @CKEYFIELDVAL1 = MRR_ID FROM '+@CTEMPMASTERTABLE
	
		EXEC SP_EXECUTESQL @CCMD, N'@CMEMODEPTID VARCHAR(2) OUTPUT, @CKEYFIELDVAL1 VARCHAR(50) OUTPUT', 
								  @CMEMODEPTID OUTPUT, @CKEYFIELDVAL1 OUTPUT
		IF (@CMEMODEPTID IS NULL )
		BEGIN
			  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE SAVED...'
			  GOTO END_PROC  		
		END


 	   SET @NMEMONOLEN			= LEN(@CMEMONOPREFIX)+6
		-- START UPDATING XN TABLES	
		IF @NUPDATEMODE = 1 -- ADDMODE	
		BEGIN	

		   SET @NSTEP = 80		-- GENERATING NEW KEY
           PRINT 'GENERATING NEW KEY... START'			
			IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
			BEGIN
				-- GENERATING NEW MRR_NO		
				SET @NSAVETRANLOOP=0
				WHILE @NSAVETRANLOOP=0
				BEGIN
					SET @NSTEP=90
					EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,
									@CFINYEAR,0, @CMEMONOVAL OUTPUT   
					
					PRINT @CMEMONOVAL
					
					
					SET @NSTEP=100
					SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+' 
											WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' 
											AND FIN_YEAR = '''+@CFINYEAR+''' )
									SET @NLOOPOUTPUT=0
								ELSE
									SET @NLOOPOUTPUT=1'
					PRINT @CCMD
					EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
				END

				
                PRINT 'GENERATING NEW KEY... START'			

				SET @NSTEP = 110		-- GENERATING NEW ID
				

				-- GENERATING NEW MRR ID
				SET @CKEYFIELDVAL1 = @CLOCATIONID + @CFINYEAR+ REPLICATE('0', 15-LEN(LTRIM(RTRIM(@CMEMONOVAL)))) + LTRIM(RTRIM(@CMEMONOVAL))
				IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
					  GOTO END_PROC
				END
				

				SET @NSTEP = 130		-- UPDATING NEW ID INTO TEMP TABLES

				-- UPDATING NEWLY GENERATED MRR NO AND MRR ID IN PIM AND PID TEMP TABLES
				SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' + 
							@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
				EXEC SP_EXECUTESQL @CCMD
			
				SET @NSTEP = 135		-- UPDATING NEW ID INTO TEMP TABLES
				
				
				SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD
				
			END

		END					-- END OF ADDMODE
		ELSE				-- CALLED FROM EDITMODE
		BEGIN				-- START OF EDITMODE
		      
			SET @NSTEP = 150		-- GETTING ID INFO FROM TEMP TABLE

			-- GETTING MRR_ID WHICH IS BEING EDITED
			SET @CCMD = 'SELECT @CKEYFIELDVAL1 = MRR_ID, @CMEMONOVAL = MRR_NO FROM '+@CTEMPMASTERTABLE +' WHERE  SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD, N'@CKEYFIELDVAL1 VARCHAR(50) OUTPUT, @CMEMONOVAL VARCHAR(50) OUTPUT', 
							   @CKEYFIELDVAL1 OUTPUT, @CMEMONOVAL OUTPUT
			IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
			BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
				GOTO END_PROC
			END
			SET @NSTEP = 155		-- STORING OLD STATUS OF BARCODES 
			
			-- UPDATING SENTTOHO FLAG
			SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' SET LAST_UPDATE=GETDATE() WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			EXEC SP_EXECUTESQL @CCMD
					
			-- ENTRY IN AUDIT TRAIL (ONLY WHEN USER EXPLICITLY CLICKED ON EDIT BUTTON)
			SET @NSTEP = 160		-- AUDIT TRIAL ENTRY

			-- REVERTING BACK THE STOCK OF PMT W.R.T CURRENT PURCHASE
			SET @NSTEP = 170		-- REVERTING STOCK

				EXEC UPDATEPMT_PPC 
					  @CXNTYPE			= 'PUR'
					, @CXNNO			= @CMEMONOVAL
					, @CXNID			= @CKEYFIELDVAL1
					, @NREVERTFLAG		= 1
					, @NALLOWNEGSTOCK	= 1
					, @NCHKDELBARCODES	= 0
					, @NUPDATEMODE		= @NUPDATEMODE					
					, @CCMD				= @CCMDOUTPUT OUTPUT
			 	
		END					-- END OF EDITMODE
	
		SET @NSTEP = 180
        
		 SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET OTHER_CHARGES_HSN_CODE =''0000000000'',FREIGHT_HSN_CODE=''0000000000'' WHERE  SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' '
		 EXEC SP_EXECUTESQL @CCMD 
			
		 SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE + ' SET HSN_CODE=CASE WHEN ISNULL(HSN_CODE,'''')='''' THEN  ''0000000000'' ELSE HSN_CODE END  ,
		 GST_PERCENTAGE=0,IGST_AMOUNT=0,CGST_AMOUNT=0,SGST_AMOUNT=0,XN_VALUE_WITHOUT_GST=0,XN_VALUE_WITH_GST=0 WHERE  SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''  
		 EXEC SP_EXECUTESQL @CCMD   
	  
	    
	     SET @CCMD = N'UPDATE A SET PIMDISCOUNTAMOUNT=ROUND((CASE WHEN B.SUBTOTAL=0 THEN 0 ELSE (B.DISCOUNT_AMOUNT/B.SUBTOTAL)*(A.PURCHASE_PRICE*A.QUANTITY) END),2)
		 FROM ' + @CTEMPDETAILTABLE + ' A
		 JOIN '+@CTEMPMASTERTABLE+' B ON A.MRR_ID=B.MRR_ID AND A.SP_ID=B.SP_ID
		 WHERE B.MRR_ID='''+@CKEYFIELDVAL1+''' AND A.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' '
		 EXEC SP_EXECUTESQL @CCMD  
		 PRINT @CCMD+'DINKAR'
				
		     
		   DECLARE @NTOTAL_DISCOUNT_AMOUNT NUMERIC(10,2)
		   SET @CCMD=N' SELECT   @NTOTAL_DISCOUNT_AMOUNT= ISNULL(DISCOUNT_AMOUNT,0)  FROM '+@CTEMPMASTERTABLE+' A WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
		   EXEC SP_EXECUTESQL @CCMD,N'@NTOTAL_DISCOUNT_AMOUNT NUMERIC(10,2) OUTPUT ',@NTOTAL_DISCOUNT_AMOUNT=@NTOTAL_DISCOUNT_AMOUNT OUTPUT
		   PRINT @CCMD 
		
			SET @NSTEP = 190
		   IF ISNULL(@NTOTAL_DISCOUNT_AMOUNT,0)<>0
		   BEGIN
               
              DECLARE  @NITEM_DISCOUNT_AMOUNT NUMERIC(10,2),@DTSQL NVARCHAR(MAX),
              @NTOTALDIFF NUMERIC(10,2),@CIN_VALUE NUMERIC(10,2),
              @NNEWDIFF NUMERIC(10,2),@NPREVDIFF NUMERIC(10,2)
        
			   SET @CCMD=N' SELECT  @NITEM_DISCOUNT_AMOUNT= SUM(ISNULL(PIMDISCOUNTAMOUNT,0))  FROM '+@CTEMPDETAILTABLE+' A WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			   EXEC SP_EXECUTESQL @CCMD,N'@NITEM_DISCOUNT_AMOUNT NUMERIC(10,2) OUTPUT ',@NITEM_DISCOUNT_AMOUNT=@NITEM_DISCOUNT_AMOUNT OUTPUT
			   PRINT @CCMD   
		        
				SET @NNEWDIFF=ABS( ISNULL(@NTOTAL_DISCOUNT_AMOUNT,0)-ISNULL(@NITEM_DISCOUNT_AMOUNT,0))
		        
				
		        
				SET @NTOTALDIFF=ABS( ISNULL(@NTOTAL_DISCOUNT_AMOUNT,0)-ISNULL(@NITEM_DISCOUNT_AMOUNT,0))*100
		        
			
		      
			  IF ISNULL(@NTOTAL_DISCOUNT_AMOUNT,0)>ISNULL(@NITEM_DISCOUNT_AMOUNT,0)
				  SET @CIN_VALUE=.01
			  ELSE
				  SET @CIN_VALUE=-.01
		          
		       
				SET @CCMD=N';WITH CTE AS
				(SELECT A.*,SR=ROW_NUMBER() OVER (ORDER BY ROW_ID)
				 FROM  '+@CTEMPDETAILTABLE+' A WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+'''
				 ) 
		         
				 UPDATE CTE SET PIMDISCOUNTAMOUNT=PIMDISCOUNTAMOUNT+'+RTRIM(LTRIM(STR(@CIN_VALUE,10,2)))+' WHERE SR<='''+STR(@NTOTALDIFF)+''''
			     EXEC SP_EXECUTESQL @CCMD
			     PRINT @CCMD
		       
	       
		   END  
		 
    
		-- RECHECKING IF ID IS STILL LATER
		IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
			GOTO END_PROC
		END				
		
		
		SET @NSTEP=210						 
		
		  DECLARE @FILTER VARCHAR(MAX)
	      SET @FILTER=' B.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
	      
	  
		EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= ''
			, @CSOURCETABLE = @CTEMPMASTERTABLE
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CMASTERTABLENAME
			, @CKEYFIELD1	= @CKEYFIELD1
			, @BALWAYSUPDATE = 1
             ,@CFILTERCONDITION=@FILTER

		-- UPDATING TRANSACTION TABLE (PID01106) FROM TEMP TABLE
		SET @NSTEP = 220		-- UPDATING TRANSACTION TABLE
 
       IF OBJECT_ID('TEMPDB..#TMPPRODUCT_CODE','U') IS NOT NULL
          DROP TABLE #TMPPRODUCT_CODE
          
          SELECT * INTO #TMPPRODUCT_CODE FROM PUR_PPC_PID01106_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))

        ----
        ALTER TABLE #TMPPRODUCT_CODE ADD OLD_ROW_ID VARCHAR(40)
        UPDATE #TMPPRODUCT_CODE SET OLD_ROW_ID = ROW_ID
        UPDATE #TMPPRODUCT_CODE SET ROW_ID =@CLOCATIONID+CONVERT(VARCHAR(38), NEWID())
       
        -- UPDATING ROW_ID IN TEMP TABLES
	
		
		SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE + ' SET PRODUCT_UID='''' WHERE PRODUCT_UID IS NULL AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
		EXEC SP_EXECUTESQL @CCMD			
		
        SET @NSTEP = 222      
		
		 SET @CCMD = N'UPDATE B SET PID_ROW_ID=A.ROW_ID FROM #TMPPRODUCT_CODE A
		 JOIN ' + @CTEMPDETAILTABLE1 + ' B ON A.OLD_ROW_ID=B.PID_ROW_ID' 
		 PRINT @CCMD 
         EXEC SP_EXECUTESQL @CCMD 
         
           SET @NSTEP = 225
          SET @CCMD = N'UPDATE B SET ROW_ID=A.ROW_ID FROM #TMPPRODUCT_CODE A
		 JOIN ' + @CTEMPDETAILTABLE + ' B ON A.OLD_ROW_ID=B.ROW_ID' 
		 PRINT @CCMD 
         EXEC SP_EXECUTESQL @CCMD 
          SET @NSTEP = 226
         
         SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(38), NEWID())  
        WHERE LEFT(ROW_ID,5) = ''LATER'''
        PRINT @CCMD  
        EXEC SP_EXECUTESQL @CCMD  
        
        SET @NSTEP = 228
        
        SET @CCMD = N'DELETE B FROM ' + @CDETAILTABLENAME + '  A
                    JOIN ' + @CDETAILTABLENAME1 + ' B ON A.ROW_ID=B.PID_ROW_ID
					WHERE A.' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''
					AND A.ROW_ID IN 
					(
						SELECT A.ROW_ID 
						FROM ' + @CDETAILTABLENAME + ' A 
						LEFT OUTER JOIN ' + @CTEMPDETAILTABLE + ' B ON A.ROW_ID = B.ROW_ID AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+'''
						WHERE A.' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''
						AND B.ROW_ID IS NULL
					)'
		PRINT @CCMD
		
		EXEC SP_EXECUTESQL @CCMD
        

		-- DELETING EXISTING ENTRIES FROM PID01106 TABLE WHERE ROW_ID NOT FOUND IN TEMPTABLE
		SET @NSTEP = 230		-- UPDATING TRANSACTION TABLE - DELETING EXISTING ENTRIES

		SET @CCMD = N'DELETE FROM ' + @CDETAILTABLENAME + ' 
					WHERE ' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''
					AND ROW_ID IN 
					(
						SELECT A.ROW_ID 
						FROM ' + @CDETAILTABLENAME + ' A 
						LEFT OUTER JOIN ' + @CTEMPDETAILTABLE + ' B ON A.ROW_ID = B.ROW_ID AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+'''
						WHERE A.' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''
						AND B.ROW_ID IS NULL
					)'
		PRINT @CCMD
		
		
		EXEC SP_EXECUTESQL @CCMD
		
		
	--	SELECT * FROM PPC_PIM01106
		--PRINT 'ROHIT'
		-- INSERTING/UPDATING THE ENTRIES IN PID01106 TABLE FROM TEMPTABLE
		SET @NSTEP = 240		-- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES
		
	

		EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPDETAILTABLE
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CDETAILTABLENAME
			, @CKEYFIELD1	= 'ROW_ID'
			, @BALWAYSUPDATE = 1
			 ,@CFILTERCONDITION=@FILTER
			--, @LUPDATEXNS	= 1
			
			
			
	
			EXEC UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPDETAILTABLE1
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CDETAILTABLENAME1
			, @CKEYFIELD1	= 'ROW_ID'
			, @BALWAYSUPDATE = 1
			 ,@CFILTERCONDITION=@FILTER
			--, @LUPDATEXNS	= 1      		
	
		SET @NSTEP = 290	
		
		---- MAKE AN ENTRY INTO PURCHASE + PO LINK TABLE
								
				IF OBJECT_ID(@CTEMPITERMIDIATETABLE,'U') IS NOT NULL
				BEGIN
					SET @NSTEP = 42
					SET @CCMD=N'DELETE FROM PPC_PO_PUR WHERE MRR_ID='''+@CKEYFIELDVAL1+''' '
					EXEC SP_EXECUTESQL @CCMD		
					
					SET @CCMD=N'INSERT PPC_PO_PUR (MRR_ID,PO_ID)
								SELECT '''+@CKEYFIELDVAL1+''',PO_ID FROM '+@CTEMPITERMIDIATETABLE+' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''		
					EXEC SP_EXECUTESQL @CCMD			 	
				END
		
	--  CALCULATE GST
	 --TAX CALCULATION FOR GST AFTER 1/7/2017 BEFOR CALCULATE AS IT ID --------------
    
    DECLARE @DMEMO_DT DATETIME,@GSTDATE DATETIME,@DMRR_DT DATETIME
    
     SET @CCMD=N' SELECT  @DMEMO_DT=BILL_DT,@DMRR_DT=RECEIPT_DT  FROM '+@CTEMPMASTERTABLE+' A  WHERE  A.SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
     EXEC SP_EXECUTESQL @CCMD,N'@DMEMO_DT DATETIME OUTPUT,@DMRR_DT DATETIME OUTPUT ',@DMEMO_DT=@DMEMO_DT OUTPUT,@DMRR_DT=@DMRR_DT OUTPUT
     PRINT @CCMD
    
    IF @DMEMO_DT=''
    BEGIN
         SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' INVOICE DATE CAN NOT BE BLANK...'  
		 GOTO END_PROC
    
    END
    
     DECLARE @CGSTCUTOFFDATE DATETIME
     SET @CGSTCUTOFFDATE='2017-07-01'
    
    IF @CGSTCUTOFFDATE<>''
        SELECT @GSTDATE=CAST(@CGSTCUTOFFDATE AS DATETIME)
    
	IF @DMEMO_DT>=@GSTDATE
	BEGIN
	
	
		 DELETE FROM GST_TAXINFO_CALC WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
		 DELETE FROM GST_TAXINFO_CALC_OH WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
			--ARTICLE WISE
		 INSERT GST_TAXINFO_CALC	( PRODUCT_CODE, SP_ID, NET_VALUE,ROW_ID,TAX_METHOD,QUANTITY,HSN_CODE,MRP) 
		 SELECT '' AS PRODUCT_CODE
		, SP_ID=LTRIM(RTRIM(STR(@NSPID))),
		  NET_VALUE=(((A.PURCHASE_PRICE*A.QUANTITY )-(ISNULL(A.PIMDISCOUNTAMOUNT,0))
								 ))  ,
		A.ROW_ID,B.BILL_LEVEL_TAX_METHOD,A.QUANTITY,
		CASE WHEN ISNULL(A.HSN_CODE,'') IN('','0000000000') THEN  HM.HSN_CODE ELSE A.HSN_CODE END AS HSN_CODE,A.MRP
		FROM PPC_PID01106 A 
		JOIN PPC_PIM01106 B ON A.MRR_ID =B.MRR_ID 
		JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =A .ARTICLE_CODE 
		LEFT JOIN HSN_MST HM (NOLOCK) ON HM.HSN_CODE=ART.HSN_CODE WHERE ISNULL(A.PRODUCT_CODE,'')='' 
		AND B.MRR_ID=@CKEYFIELDVAL1
					
					--FOR OVER HEADS
		INSERT GST_TAXINFO_CALC_OH	( SP_ID, FREIGHT, OTHER_CHARGES, INSURANCE, PACKING,OH_TAX_METHOD,DO_NOT_CALC_GST_OH)
		SELECT 	 SP_ID=LTRIM(RTRIM(STR(@NSPID))) ,A.FREIGHT , A.OTHER_CHARGES, 0 AS INSURANCE, 0 AS  PACKING ,ISNULL(OH_TAX_METHOD,0) ,ISNULL(DO_NOT_CALC_GST_OH,0)
		FROM PPC_PIM01106  A 
		WHERE A.MRR_ID=@CKEYFIELDVAL1
		
		
		
		DECLARE @CPARTY_GSTN_NO VARCHAR(20),@BREGISTERED BIT,@CPARTYSTATECODE VARCHAR(10)	
		
		SELECT TOP 1 @CPARTY_GSTN_NO=AC_GST_NO,
		@CPARTYSTATECODE=B.AC_GST_STATE_CODE,@BREGISTERED=REGISTERED_GST_DEALER
		FROM PPC_PIM01106  A JOIN LMP01106 B ON A.AC_CODE=B.AC_CODE 
		WHERE A.MRR_ID=@CKEYFIELDVAL1	
		 
		UPDATE   PPC_PIM01106 SET PARTY_STATE_CODE =@CPARTYSTATECODE WHERE MRR_ID=@CKEYFIELDVAL1	
		 
		IF @BREGISTERED=1
		BEGIN 
		EXEC SP3S_GST_TAX_CAL 'PPC_PUR','',@DMEMO_DT,@NSPID,@CPARTYSTATECODE,0,@BREGISTERED,@CPARTY_GSTN_NO,@CERRORMSG OUTPUT 
		IF ISNULL(@CERRORMSG,'')<>''
		   GOTO END_PROC  
		  
	     UPDATE   A SET HSN_CODE=B.HSN_CODE,GST_PERCENTAGE=B.GST_PERCENTAGE,IGST_AMOUNT=B.IGST_AMOUNT,
	     CGST_AMOUNT=B.CGST_AMOUNT,SGST_AMOUNT=B.SGST_AMOUNT,
		 XN_VALUE_WITHOUT_GST=B.XN_VALUE_WITHOUT_GST,XN_VALUE_WITH_GST=B.XN_VALUE_WITH_GST
		 FROM  PPC_PID01106  A
		 JOIN PPC_PIM01106 PIM ON A.MRR_ID =PIM.MRR_ID 
		 JOIN GST_TAXINFO_CALC B ON   A.ROW_ID=B.ROW_ID	
		 WHERE  PIM.MRR_ID =@CKEYFIELDVAL1
		 AND B.SP_ID=@NSPID
	  END 
	  ELSE
	  BEGIN
	      UPDATE   A SET HSN_CODE=B.HSN_CODE,GST_PERCENTAGE=ISNULL(B.GST_PERCENTAGE,0),IGST_AMOUNT=ISNULL(B.IGST_AMOUNT,0),
	     CGST_AMOUNT=ISNULL(B.CGST_AMOUNT,0),SGST_AMOUNT=ISNULL(B.SGST_AMOUNT,0),
		 XN_VALUE_WITHOUT_GST=ISNULL(B.NET_VALUE,0),XN_VALUE_WITH_GST=ISNULL(B.NET_VALUE,0)
		 FROM  PPC_PID01106  A
		 JOIN PPC_PIM01106 PIM ON A.MRR_ID =PIM.MRR_ID 
		 JOIN GST_TAXINFO_CALC B ON   A.ROW_ID=B.ROW_ID	
		 WHERE  PIM.MRR_ID =@CKEYFIELDVAL1
		 AND B.SP_ID=@NSPID
	  
	  END	
			SET @NSTEP=200
			UPDATE A SET  FREIGHT_HSN_CODE=ISNULL(B.FREIGHT_HSN_CODE,'0000000000'),
			OTHER_CHARGES_HSN_CODE=ISNULL(B.OTHER_CHARGES_HSN_CODE,'0000000000'),
			FREIGHT_GST_PERCENTAGE=ISNULL(B.FREIGHT_GST_PERCENTAGE,0),OTHER_CHARGES_GST_PERCENTAGE=ISNULL(B.OTHER_CHARGES_GST_PERCENTAGE,0),
	
			FREIGHT_TAXABLE_VALUE=ISNULL(B.FREIGHT_TAXABLE_VALUE,A.FREIGHT),
			FREIGHT_IGST_AMOUNT=(CASE WHEN ISNULL(ISIGST,0)=1 THEN B.FREIGHT_GST_AMOUNT ELSE 0 END),
			FREIGHT_CGST_AMOUNT=(CASE WHEN ISNULL(ISIGST,0)=0 THEN B.FREIGHT_GST_AMOUNT/2 ELSE 0 END),
			FREIGHT_SGST_AMOUNT=(CASE WHEN ISNULL(ISIGST,0)=0 THEN B.FREIGHT_GST_AMOUNT/2 ELSE 0 END),
			
			OTHER_CHARGES_TAXABLE_VALUE=ISNULL(B.OTHER_CHARGES_TAXABLE_VALUE,A.OTHER_CHARGES),
			OTHER_CHARGES_IGST_AMOUNT=(CASE WHEN ISNULL(ISIGST,0)=1 THEN B.OTHER_CHARGES_GST_AMOUNT ELSE 0 END),
			OTHER_CHARGES_CGST_AMOUNT=(CASE WHEN ISNULL(ISIGST,0)=0 THEN B.OTHER_CHARGES_GST_AMOUNT/2 ELSE 0 END),
			OTHER_CHARGES_SGST_AMOUNT=(CASE WHEN ISNULL(ISIGST,0)=0 THEN B.OTHER_CHARGES_GST_AMOUNT/2 ELSE 0 END)
			FROM PPC_PIM01106  A WITH (NOLOCK)
			LEFT OUTER JOIN
			(SELECT @CKEYFIELDVAL1	AS MRR_ID,* FROM  GST_TAXINFO_CALC_OH (NOLOCK) WHERE SP_ID=@NSPID) B ON A.MRR_ID =B.MRR_ID
			WHERE A.MRR_ID=@CKEYFIELDVAL1	
		   
	END
	
	--END OF GST CALCULATION
		
		SET @NSTEP = 295
		
		-- UPDATING TOTALS IN PIM TABLE
		UPDATE A SET SUBTOTAL = ISNULL( B.SUBTOTAL ,0 )
		FROM PPC_PIM01106 A LEFT OUTER JOIN
		( 	
			SELECT	MRR_ID, SUM(QUANTITY*PURCHASE_PRICE) AS SUBTOTAL
			FROM PPC_PID01106 
			WHERE MRR_ID = @CKEYFIELDVAL1
			GROUP BY MRR_ID  
		) B ON  A.MRR_ID = B.MRR_ID  
		WHERE A.MRR_ID = @CKEYFIELDVAL1
		
		SET @NSTEP = 300
		
		UPDATE PPC_PIM01106 SET DISCOUNT_AMOUNT = ROUND(SUBTOTAL*ROUND(DISCOUNT_PERCENTAGE,2)/100,2)
		WHERE MRR_ID= @CKEYFIELDVAL1
		
		SET @NSTEP = 305
		SELECT @NSUBTOTAL=SUBTOTAL FROM PPC_PIM01106 WHERE MRR_ID= @CKEYFIELDVAL1
							
		SET @NSTEP = 310		
		
		DECLARE		@NMRP_VALUE			NUMERIC(14,2)
		DECLARE		@NEXCISE_PER		NUMERIC(14,3)
		SELECT @NMRP_VALUE=SUM(MRP * QUANTITY) FROM PPC_PID01106 WHERE MRR_ID= @CKEYFIELDVAL1

		IF(ISNULL(@NEXCISE_PER,0)>0)
		BEGIN
			
			UPDATE A SET A.TAX_AMOUNT= CONVERT(NUMERIC(14,2),(CONVERT(NUMERIC(14,2),((CONVERT(NUMERIC(14,2),(A.QUANTITY * A.PURCHASE_PRICE))-(CONVERT(NUMERIC(14,2),(A.QUANTITY * A.PURCHASE_PRICE)) * CONVERT(NUMERIC(14,2),(B.DISCOUNT_PERCENTAGE/100))))) +((A.QUANTITY * A.MRP)*(@NEXCISE_PER/100))) * CONVERT(NUMERIC(14,2),A.TAX_PERCENTAGE/100))) 
			FROM PPC_PID01106 A
			JOIN PPC_PIM01106 B ON B.MRR_ID=A.MRR_ID
			WHERE A.MRR_ID= @CKEYFIELDVAL1
			
		END
		ELSE
		BEGIN
			UPDATE A SET A.TAX_AMOUNT=CONVERT(NUMERIC(14,2),(((CONVERT(NUMERIC(14,2),(A.QUANTITY * A.PURCHASE_PRICE))-CONVERT(NUMERIC(14,2),(CONVERT(NUMERIC(14,2),(A.QUANTITY * A.PURCHASE_PRICE)) * CONVERT(NUMERIC(14,2),(B.DISCOUNT_PERCENTAGE/100)))))  * A.TAX_PERCENTAGE/100 )))
			FROM PPC_PID01106 A
			JOIN PPC_PIM01106 B ON B.MRR_ID=A.MRR_ID
			WHERE A.MRR_ID= @CKEYFIELDVAL1
		END
					
		
		IF NOT EXISTS (SELECT TOP 1 A.PRODUCT_UID FROM PPC_PID01106_BARCODE A JOIN PPC_PID01106 B ON A.PID_ROW_ID =B.ROW_ID  WHERE MRR_ID= @CKEYFIELDVAL1)
		BEGIN
			SET @NSTEP = 315
			UPDATE PPC_PIM01106 SET OTHER_CHARGES=0,FREIGHT=0
			WHERE MRR_ID= @CKEYFIELDVAL1
		END
		
		
		SELECT @NTAX=SUM(TAX_AMOUNT) FROM PPC_PID01106 WHERE MRR_ID=@CKEYFIELDVAL1
		SELECT @NTAX=ROUND(SUM(ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)),3) FROM PPC_PID01106 WHERE MRR_ID=@CKEYFIELDVAL1  
  
	    SET @NSTEP = 320    
        UPDATE PPC_PIM01106 SET ROUND_OFF=ROUND((SUBTOTAL + (CASE WHEN BILL_LEVEL_TAX_METHOD = 2 THEN 0 ELSE ISNULL(@NTAX,0) END) +  OTHER_CHARGES +   
        CASE WHEN OH_TAX_METHOD=2 THEN 0 ELSE ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_SGST_AMOUNT,0)+ISNULL(FREIGHT_IGST_AMOUNT,0)+ISNULL(FREIGHT_CGST_AMOUNT,0)+ISNULL(FREIGHT_SGST_AMOUNT,0) END +
        FREIGHT ) - DISCOUNT_AMOUNT ,0)-(SUBTOTAL+ (CASE WHEN BILL_LEVEL_TAX_METHOD = 2 THEN 0 ELSE ISNULL(@NTAX,0) END) +OTHER_CHARGES+  
        CASE WHEN OH_TAX_METHOD=2 THEN 0 ELSE  ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_SGST_AMOUNT,0)+ISNULL(FREIGHT_IGST_AMOUNT,0)+ISNULL(FREIGHT_CGST_AMOUNT,0)+ISNULL(FREIGHT_SGST_AMOUNT,0) END+
        FREIGHT -DISCOUNT_AMOUNT)  
        WHERE MRR_ID=@CKEYFIELDVAL1 
    
        SET @NSTEP=330  
        UPDATE PPC_PIM01106 SET TOTAL_AMOUNT=(SUBTOTAL +CASE WHEN BILL_LEVEL_TAX_METHOD = 2 THEN 0 ELSE ISNULL(@NTAX,0) END +  OTHER_CHARGES +   
        CASE WHEN OH_TAX_METHOD=2 THEN 0 ELSE  ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_SGST_AMOUNT,0)+ISNULL(FREIGHT_IGST_AMOUNT,0)+ISNULL(FREIGHT_CGST_AMOUNT,0)+ISNULL(FREIGHT_SGST_AMOUNT,0) END+
        FREIGHT +ROUND_OFF) - DISCOUNT_AMOUNT  
         WHERE MRR_ID=@CKEYFIELDVAL1  
  
  
		SET @NSTEP = 320		
		--UPDATE PPC_PIM01106 SET ROUND_OFF=ROUND((SUBTOTAL +ISNULL(@NTAX,0) +  OTHER_CHARGES 
		--			 +FREIGHT ) - DISCOUNT_AMOUNT,0)-(SUBTOTAL+ISNULL(@NTAX,0)+OTHER_CHARGES+
		--			 FREIGHT-DISCOUNT_AMOUNT)
		--WHERE MRR_ID=@CKEYFIELDVAL1
		
	
		--SET @NSTEP=330
		--UPDATE PPC_PIM01106 SET TAX_AMOUNT=ISNULL(@NTAX,0),
		--TOTAL_AMOUNT=(SUBTOTAL +ISNULL(@NTAX,0) +  OTHER_CHARGES + 
		--			 FREIGHT+ROUND_OFF) - DISCOUNT_AMOUNT
		--WHERE MRR_ID=@CKEYFIELDVAL1
		
		
		--IT IS ALL READY GENEREATED BY PO  BECASE DIRECT PUR IS NOT ALLOW
		
		EXEC SAVETRAN_UPDSKU_PPC 'PUR',@CKEYFIELDVAL1,@CERRORMSG OUTPUT 
		IF ISNULL(@CERRORMSG,'')<>''
		GOTO END_PROC
				
		-- UPDATE PRD_SKU PURCHASE_PRICE
		
		UPDATE  A SET A.PURCHASE_PRICE = PID.PURCHASE_PRICE  ,A.WS_PRICE = PID.WHOLESALE_PRICE
		FROM PPC_SKU A
		JOIN PPC_PID01106_BARCODE  B ON A.PRODUCT_UID= B.PRODUCT_UID
		JOIN PPC_PID01106 PID ON PID.ROW_ID =B.PID_ROW_ID 
		JOIN ARTICLE C ON PID.ARTICLE_CODE= C.ARTICLE_CODE
		WHERE PID.MRR_ID=@CKEYFIELDVAL1 AND  A.PURCHASE_PRICE <> PID.PURCHASE_PRICE
				
				
		UPDATE PPC_POM01106 SET AC_CODE=  A.AC_CODE
        FROM PPC_PIM01106 A JOIN PPC_PO_PUR  B ON A.MRR_ID = B.MRR_ID 
        JOIN PPC_POM01106 C ON B.PO_ID = C.PO_ID 
        WHERE A.MRR_ID = @CKEYFIELDVAL1
		
							
		
		SET @NSTEP = 345
		PRINT 'RF'
		EXEC UPDATERFNET_PPC 'PUR',@CKEYFIELDVAL1

LBLUPDATESTOCK:						
		-- UPDATING STOCK OF PMT W.R.T. CURRENT PURCHASE
		SET @NSTEP = 270		-- UPDATING PMT TABLE
	PRINT 'STEP 9'

		
		  EXEC UPDATEPMT_PPC 
		  @CXNTYPE			= 'PUR'
		, @CXNNO			= @CMEMONOVAL
		, @CXNID			= @CKEYFIELDVAL1
		, @NREVERTFLAG		= 0
		, @NALLOWNEGSTOCK	= 0
		, @NCHKDELBARCODES	= 0
		, @NUPDATEMODE		= @NUPDATEMODE					
		, @CCMD				= @CCMDOUTPUT OUTPUT
		
		
		
		PRINT 'STEP 9.1'
			
		IF @CCMDOUTPUT <> ''
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR UPDATING THE STOCK STATUS IN PMT... STOCK IS GOING NEGATIVE'
			-- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'
			
			EXEC SP_EXECUTESQL @CCMDOUTPUT
			SET @BNEGSTOCKFOUND=1
			
			GOTO END_PROC
		END

		-- VALIDATING ENTRIES
				
		SET @NSTEP = 350
		EXEC VALIDATE_PPC_PUR			 
			  @CXNID	= @CKEYFIELDVAL1
			, @NUPDATEMODE = @NUPDATEMODE			
			, @CERRORMSG	= @CCMDOUTPUT OUTPUT

		IF @CCMDOUTPUT <> ''
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' DATA VALIDATION FAILED : ' + @CCMDOUTPUT + '...'
			GOTO END_PROC
		END


	END TRY
	BEGIN CATCH
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		-- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG, '''' AS MEMO_ID'
			
		GOTO END_PROC
	END CATCH
	
	
END_PROC:
	
	

	--SELECT * FROM PPC_PID01106_BARCODE
	
	IF @@TRANCOUNT>0
	BEGIN
		
		IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')=''
		BEGIN
			COMMIT TRANSACTION
		END
		ELSE
			ROLLBACK
	END


		
	
	IF ISNULL(@BNEGSTOCKFOUND,0)=0
	BEGIN
		INSERT @OUTPUT ( ERRMSG, MEMO_ID)
				VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )

		SELECT * FROM @OUTPUT	
	END	


	    
	    DELETE FROM PUR_PPC_PIM01106_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
	    DELETE FROM PUR_PPC_PID01106_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
        DELETE FROM PUR_PPC_PID01106_BARCODE_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
	    DELETE FROM PUR_PPC_PO_PUR_UPLOAD WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
	
END
------------------------------------------------------ END OF PROCEDURE SAVETRAN_PUR
