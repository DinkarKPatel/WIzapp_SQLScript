CREATE PROCEDURE SP_SALE_VARIANCE_REPORT--(LocId 3 digit change by Sanjay:30-10-2024)
(
   @NALL_LOC AS INT=0,-- 0 FOR A SINGLE LOCATION, 1 FOR CLUBBED, 2 FOR LOCATION WISE (ALL LOCATION)
   @CLOC_ID VARCHAR(10)='',--SINGLE LOCATION WISE FILTER --
   @NDIVISION_FACTOR NUMERIC(10)=1,
   @DLOG_DT DATETIME='',
   @NFILTER VARCHAR(1000)='',
   @NDIVISION_FACTOR_YTD NUMERIC(10)=1,
   @NAPI INT=0 ,
   @CFIN_YEAR VARCHAR(10)='' ,
   @NSUMMARYTYPE INT =1   --- 1 FOR RETAILSALE  2 FOR WHOLESALE 
)
--WITH ENCRYPTION
AS
BEGIN

IF @DLOG_DT=''
   SET @DLOG_DT=GETDATE()
   
   DECLARE @TBLVARIANCEREPORT TABLE (MONTHNUMBER INT,DEPT_ID VARCHAR(5),DEPT_NAME VARCHAR(100),MONTH VARCHAR(10),
     MTD NUMERIC(12,2),PREV_MTD NUMERIC(12,2),VARIANCE_M NUMERIC(10,2),YTD NUMERIC(12,2),PREV_YTD NUMERIC(12,2), 
     VARIANCE_T NUMERIC(10,2),DEPT_ALIAS VARCHAR(100))
   
   DECLARE @ERROR AS VARCHAR(100),@NDIVISION_MTD_AMOUNT NUMERIC(12,0),@NDIVISION_YTD_AMOUNT NUMERIC(12,0),
           @DTSQL NVARCHAR(MAX),@DPREVLOG_DT DATETIME
   DECLARE @CURYEAR AS VARCHAR(10),@PREVYEAR VARCHAR(10),@NCURMTH INT,@dept_alias VARCHAR(100) 
   SET @CURYEAR='01'+DBO.FN_GETFINYEAR(@DLOG_DT)
  
   SET @DPREVLOG_DT=(SELECT DATEADD(YEAR,-1,@DLOG_DT))
   SET @PREVYEAR=(SELECT '01'+ DBO.FN_GETFINYEAR(@DPREVLOG_DT))
  

  --FOR ARCHIVING HO
  
DECLARE @NEW_DATA_ARCHIVING_DATE VARCHAR(10),@ARCH_CUTOFF DATETIME,@cprevdbname varchar(50)
SELECT @NEW_DATA_ARCHIVING_DATE= VALUE  FROM CONFIG WHERE CONFIG_OPTION ='NEW_DATA_ARCHIVING_DATE'

SET @CPREVDBNAME=''

IF ISNULL( @NEW_DATA_ARCHIVING_DATE,'')<>''
begin
   SET @ARCH_CUTOFF=@NEW_DATA_ARCHIVING_DATE

   if  @ARCH_CUTOFF>@DPREVLOG_DT
   SET @CPREVDBNAME=DB_NAME()+'_'+@PREVYEAR+'.DBO.'

END



   DECLARE @SR AS INT,@DEPT_ID VARCHAR(10)
	     
	DECLARE @NFILTERSQL NVARCHAR(MAX)
	IF OBJECT_ID('#TMPDEPTFILTER','U') IS NOT NULL
		DROP TABLE #TMPDEPTFILTER
		CREATE TABLE #TMPDEPTFILTER (DEPT_ID VARCHAR(10))

IF OBJECT_ID('TEMPDB..#TMPMONTHNAME','U') IS NOT NULL
	       DROP TABLE #TMPMONTHNAME			
		SELECT 1 AS MONTHNUMBER,	'APR' AS MONTH INTO #TMPMONTHNAME UNION ALL
		SELECT 2 AS MONTHNUMBER,	'MAY' AS MONTH UNION ALL
		SELECT 3 AS MONTHNUMBER,	'JUN' AS MONTH UNION ALL
		SELECT 4 AS MONTHNUMBER,	'JUL' AS MONTH UNION ALL
		SELECT 5 AS MONTHNUMBER,	'AUG' AS MONTH UNION ALL
		SELECT 6 AS MONTHNUMBER,	'SEP' AS MONTH UNION ALL
		SELECT 7 AS MONTHNUMBER,	'OCT' AS MONTH UNION ALL
		SELECT 8 AS MONTHNUMBER,	'NOV' AS MONTH UNION ALL
		SELECT 9 AS MONTHNUMBER,	'DEC' AS MONTH UNION ALL
		SELECT 10 AS MONTHNUMBER,	'JAN' AS MONTH UNION ALL
		SELECT 11 AS MONTHNUMBER,	'FEB' AS MONTH UNION ALL
		SELECT 12 AS MONTHNUMBER,	'MAR' AS MONTH 
		
		
	SET @NCURMTH=(SELECT MONTHNUMBER FROM #TMPMONTHNAME WHERE  MONTH=LEFT(DATENAME(MONTH,@DLOG_DT),3))

   
IF @NALL_LOC=2
BEGIN		
	IF OBJECT_ID ('TEMPDB..#TMPDEPT_SR','U') IS NOT NULL
       DROP TABLE #TMPDEPT_SR
       
     SELECT DEPT_ID,ROW_NUMBER() OVER (ORDER BY DEPT_ID) AS SR
     INTO #TMPDEPT_SR
     FROM LOCATION (NOLOCK)
     GROUP BY DEPT_ID
     ORDER BY DEPT_ID	
     
     --21 Feb 2019 : Single Location
     IF @CLOC_ID<>'' DELETE FROM #TMPDEPT_SR WHERE DEPT_ID<>@CLOC_ID
     IF @CLOC_ID<>'' UPDATE #TMPDEPT_SR SET SR=1
     --21 Feb 2019 : Single Location
     
     IF OBJECT_ID('TEMPDB..#TMPMONTHNAME_NEW','U') IS NOT NULL
		DROP TABLE #TMPMONTHNAME_NEW
       
     CREATE TABLE #TMPMONTHNAME_NEW(MONTHNUMBER INT,MONTH VARCHAR(10),DEPT_ID VARCHAR(10))
END		
ELSE IF @NALL_LOC=3
BEGIN		
	IF OBJECT_ID ('TEMPDB..#TMPALIAS_SR','U') IS NOT NULL
       DROP TABLE #TMPALIAS_SR
       
     SELECT dept_alias,ROW_NUMBER() OVER (ORDER BY dept_alias) AS SR
     INTO #TMPALIAS_SR
     FROM LOCATION (NOLOCK)
     GROUP BY dept_alias
     ORDER BY dept_alias	
     
  
     IF OBJECT_ID('TEMPDB..#TMPMONTHNAME_ALIAS','U') IS NOT NULL
		DROP TABLE #TMPMONTHNAME_ALIAS
       
     CREATE TABLE #TMPMONTHNAME_ALIAS(MONTHNUMBER INT,MONTH VARCHAR(10),DEPT_ALIAS VARCHAR(100))
END		

--------------------------- FOR SLS------------------------------------------		
IF ISNULL(@NSUMMARYTYPE,0)=1
BEGIN
IF @NAPI=0
BEGIN
	IF (@NFILTER <> '')
	BEGIN
	
	--SET @NFILTER=SUBSTRING(@NFILTER,2,LEN(@NFILTER))
	
		
		BEGIN
			SET @NFILTERSQL=N'INSERT INTO #TMPDEPTFILTER   
			SELECT DEPT_ID  FROM LOC_VIEW LOC_VIEW  WHERE '+@NFILTER
			 PRINT @NFILTERSQL
			EXEC SP_EXECUTESQL @NFILTERSQL
		END
	END	
	
	 
	IF @NALL_LOC =0 AND ISNULL(@CLOC_ID,'') =''
		SELECT @ERROR='PLEASE SELECT A LOCATION.' 
	IF ISNULL(@ERROR,'')<>''
	BEGIN
	   SELECT  @ERROR AS ERRMSG 
	   GOTO END_PROC
	END
	ELSE
	BEGIN	 
	    
		
		IF OBJECT_ID ('TEMPDB..#SLSAMOUNT','U') IS NOT NULL
           DROP TABLE #SLSAMOUNT
           
           SELECT  cmm.location_Code AS DEPT_ID,LEFT(DATENAME(MONTH,CMM.CM_DT),3) AS MONTH,
	               SUM(CASE WHEN @CURYEAR=FIN_YEAR  THEN NET_AMOUNT-ATD_CHARGES ELSE 0 END) AS MTD,
	        SUM(CASE WHEN @PREVYEAR=FIN_YEAR and cmm.cm_dt<=@DPREVLOG_DT THEN NET_AMOUNT-ATD_CHARGES ELSE 0 END) AS PREV_MTD
		   INTO #SLSAMOUNT
		   FROM CMM01106 CMM
		   WHERE CMM.CANCELLED =0 
		   GROUP BY cmm.location_Code,LEFT(DATENAME(MONTH,CMM.CM_DT),3)
		   ORDER BY cmm.location_Code 

		
		   
		   if isnull(@CPREVDBNAME,'')<>''
		   begin
		       
			SET @DTSQL=N'insert into #SLSAMOUNT(DEPT_ID,MONTH,MTD,PREV_MTD)     
			SELECT  cmm.location_code AS DEPT_ID,LEFT(DATENAME(MONTH,CMM.CM_DT),3) AS MONTH,
	               SUM(CASE WHEN '+ @CURYEAR+' =FIN_YEAR  THEN NET_AMOUNT-ATD_CHARGES ELSE 0 END) AS MTD,
	        SUM(CASE WHEN '+ @PREVYEAR+'=FIN_YEAR THEN NET_AMOUNT-ATD_CHARGES ELSE 0 END) AS PREV_MTD

		   FROM '+@CPREVDBNAME+'CMM01106 CMM
		   WHERE CMM.CANCELLED =0 
		   GROUP BY cmm.location_code,LEFT(DATENAME(MONTH,CMM.CM_DT),3)
		   ORDER BY cmm.location_code 
		   '
		   print @DTSQL
		   EXEC sp_executesql @DTSQL
		   
		   end 



	   END  

	 
	   
IF @NALL_LOC=1 ----FOR CLUUBED
BEGIN
     
      IF OBJECT_ID ('TEMPDB..#CLUBBED','U') IS NOT NULL
			DROP TABLE #CLUBBED
    
    SELECT T.MONTHNUMBER, T.MONTH,ISNULL(SLS.MTD,0) AS MTD,ISNULL(SLS.PREV_MTD,0) AS PREV_MTD
    INTO  #CLUBBED
	FROM #TMPMONTHNAME T
	LEFT JOIN
	(
	   SELECT MONTH 
	       ,SUM(MTD) AS MTD
	       ,SUM(PREV_MTD) AS PREV_MTD 
		FROM #SLSAMOUNT
		GROUP BY MONTH
	) SLS ON SLS.MONTH =T.MONTH
	
	 IF OBJECT_ID('TEMPDB..#CLUBBED_FINAL','U') IS NOT NULL
			DROP TABLE #CLUBBED_FINAL
	
	SELECT T1.MONTHNUMBER,T1.MONTH,ISNULL(T1.MTD,0) AS MTD,SUM(ISNULL(T2.MTD,0) ) AS YTD,
	       ISNULL(T1.PREV_MTD,0) AS PREV_MTD,SUM(ISNULL(T2.PREV_MTD,0) ) AS PREV_YTD,
	       VARIANCE_M=CONVERT(NUMERIC(18,2),0),
	       VARIANCE_T=CONVERT(NUMERIC(18,2),0) 
	INTO #CLUBBED_FINAL
	FROM #CLUBBED T1
	JOIN #CLUBBED T2 ON T1.MONTHNUMBER >=T2.MONTHNUMBER 
	GROUP BY T1.MONTHNUMBER,T1.MONTH ,T1.MTD,T1.PREV_MTD   
	ORDER BY T1.MONTHNUMBER 
	
	UPDATE #CLUBBED_FINAL SET VARIANCE_M =CASE WHEN PREV_MTD<>0 AND MTD<>0  THEN ((MTD -PREV_MTD)/PREV_MTD)*100 ELSE 0 END
	,VARIANCE_T =CASE WHEN PREV_YTD<>0 AND YTD<>0 THEN  ((YTD-PREV_YTD)/PREV_YTD)*100 ELSE 0 END
	
	SELECT DEPT_ID=CAST('' AS VARCHAR(10)),DEPT_NAME=CAST('' AS VARCHAR(100)), C.MONTH ,CONVERT(NUMERIC(18,2),C.MTD/@NDIVISION_FACTOR) AS MTD,
	       CONVERT(NUMERIC(18,2),C.PREV_MTD/@NDIVISION_FACTOR) AS PREV_MTD,VARIANCE_M,CONVERT(NUMERIC(18,2),C.YTD/@NDIVISION_FACTOR) AS YTD ,
	       CONVERT(NUMERIC(18,2),C.PREV_YTD/@NDIVISION_FACTOR) AS PREV_YTD,VARIANCE_T  
	FROM #CLUBBED_FINAL C
	ORDER BY MONTHNUMBER

	
GOTO END_PROC
END
ELSE IF @NALL_LOC=2  ---ALL LOCATION 
BEGIN
      --IF OBJECT_ID ('TEMPDB..#TMPDEPT_SR','U') IS NOT NULL
      -- DROP TABLE #TMPDEPT_SR
       
     SET @SR =1
     
     WHILE EXISTS(SELECT SR FROM #TMPDEPT_SR WHERE SR=@SR)
     BEGIN
         SELECT TOP 1  @DEPT_ID=DEPT_ID  FROM #TMPDEPT_SR WHERE SR=@SR
         INSERT INTO #TMPMONTHNAME_NEW
         SELECT MONTHNUMBER,MONTH,@DEPT_ID FROM #TMPMONTHNAME
         SET @SR=@SR+1
      END
    
     IF OBJECT_ID ('TEMPDB..#LOCATION_WISE','U') IS NOT NULL
       DROP TABLE #LOCATION_WISE
    
     SELECT T.DEPT_ID , T.MONTHNUMBER, T.MONTH,ISNULL(SLS.MTD,0) AS MTD,ISNULL(SLS.PREV_MTD,0) AS PREV_MTD
     INTO  #LOCATION_WISE
	 FROM #TMPMONTHNAME_NEW T
	 LEFT JOIN
	 (
	   SELECT DEPT_ID,MONTH 
	       ,SUM(MTD) AS MTD
	       ,SUM(PREV_MTD) AS PREV_MTD 
		FROM #SLSAMOUNT
		GROUP BY DEPT_ID,MONTH
	 ) SLS ON SLS.MONTH=T.MONTH AND T.DEPT_ID=SLS.DEPT_ID 
    
	 IF OBJECT_ID('TEMPDB..#LOCATION_WISE_FINAL','U') IS NOT NULL
       DROP TABLE #LOCATION_WISE_FINAL
	
	SELECT T1.DEPT_ID , T1.MONTHNUMBER,T1.MONTH ,ISNULL(T1.MTD,0) AS MTD,SUM(ISNULL(T2.MTD,0) ) AS YTD,
	       ISNULL(T1.PREV_MTD,0) AS PREV_MTD,SUM(ISNULL(T2.PREV_MTD,0) ) AS PREV_YTD,
	       VARIANCE_M=CONVERT(NUMERIC(18,2),0),
	       VARIANCE_T=CONVERT(NUMERIC(18,2),0) 
	INTO #LOCATION_WISE_FINAL
	FROM #LOCATION_WISE T1
	JOIN #LOCATION_WISE T2 ON T1.MONTHNUMBER>=T2.MONTHNUMBER  AND T1.DEPT_ID =T2.DEPT_ID 
	GROUP BY T1.DEPT_ID,T1.MONTHNUMBER,T1.MONTH ,T1.MTD,T1.PREV_MTD   
	ORDER BY T1.DEPT_ID,T1.MONTHNUMBER 
	
	 UPDATE #LOCATION_WISE_FINAL SET VARIANCE_M =CASE WHEN PREV_MTD<>0 AND MTD<>0  THEN ((MTD -PREV_MTD)/PREV_MTD)*100 ELSE 0 END
	,VARIANCE_T =CASE WHEN PREV_YTD<>0 AND YTD<>0 THEN  ((YTD-PREV_YTD)/PREV_YTD)*100 ELSE 0 END

	IF ISNULL(@NFILTER,0) <> ''
	BEGIN
		SELECT C.DEPT_ID,L.DEPT_NAME, C.MONTH ,CONVERT(NUMERIC(18,2),C.MTD/@NDIVISION_FACTOR) AS MTD ,CONVERT(NUMERIC(18,2),C.PREV_MTD/@NDIVISION_FACTOR) AS PREV_MTD,
			   VARIANCE_M,CONVERT(NUMERIC(18,2),C.YTD/@NDIVISION_FACTOR) AS  YTD,CONVERT(NUMERIC(18,2),C.PREV_YTD/@NDIVISION_FACTOR) AS PREV_YTD ,VARIANCE_T  
		FROM #LOCATION_WISE_FINAL C
		JOIN LOCATION L ON L.DEPT_ID =C.DEPT_ID 
		JOIN #TMPDEPTFILTER TF ON L.DEPT_ID=TF.DEPT_ID
		ORDER BY C.DEPT_ID,MONTHNUMBER
	END
	
  ELSE 
	BEGIN
	
		SELECT C.DEPT_ID,L.DEPT_NAME, C.MONTH ,CONVERT(NUMERIC(18,2),C.MTD/@NDIVISION_FACTOR) AS MTD ,CONVERT(NUMERIC(18,2),C.PREV_MTD/@NDIVISION_FACTOR) AS PREV_MTD,
			   VARIANCE_M,CONVERT(NUMERIC(18,2),C.YTD/@NDIVISION_FACTOR) AS  YTD,CONVERT(NUMERIC(18,2),C.PREV_YTD/@NDIVISION_FACTOR) AS PREV_YTD ,VARIANCE_T  
		FROM #LOCATION_WISE_FINAL C
		 JOIN LOCATION L ON L.DEPT_ID =C.DEPT_ID 
		ORDER BY C.DEPT_ID,MONTHNUMBER
	END
END	
--changes for alias wise 
ELSE IF @NALL_LOC=3 
BEGIN
     
     SET @SR =1
     
     WHILE EXISTS(SELECT SR FROM #TMPALIAS_SR WHERE SR=@SR)
     BEGIN
         SELECT TOP 1  @dept_alias=dept_alias  FROM #TMPALIAS_SR WHERE SR=@SR
         INSERT INTO #TMPMONTHNAME_alias
         SELECT MONTHNUMBER,MONTH,@dept_alias FROM #TMPMONTHNAME
         SET @SR=@SR+1
      END
    
     IF OBJECT_ID ('TEMPDB..#ALIAS_WISE','U') IS NOT NULL
       DROP TABLE #ALIAS_WISE
    
     SELECT T.DEPT_ALIAS , T.MONTHNUMBER, T.MONTH,ISNULL(SLS.MTD,0) AS MTD,ISNULL(SLS.PREV_MTD,0) AS PREV_MTD
     INTO  #ALIAS_WISE
	 FROM #TMPMONTHNAME_ALIAS T
	 LEFT JOIN
	 (
	   SELECT B.dept_alias ,MONTH 
	       ,SUM(MTD) AS MTD
	       ,SUM(PREV_MTD) AS PREV_MTD 
		FROM #SLSAMOUNT A
		JOIN LOCATION B (NOLOCK) ON A.DEPT_ID =B.dept_id 
		GROUP BY B.dept_alias ,MONTH
	 ) SLS ON SLS.MONTH=T.MONTH AND T.dept_alias=SLS.dept_alias 
    
	 IF OBJECT_ID('TEMPDB..#ALIAS_WISE_FINAL','U') IS NOT NULL
       DROP TABLE #ALIAS_WISE_FINAL
	
	SELECT T1.DEPT_ALIAS , T1.MONTHNUMBER,T1.MONTH ,ISNULL(T1.MTD,0) AS MTD,SUM(ISNULL(T2.MTD,0) ) AS YTD,
	       ISNULL(T1.PREV_MTD,0) AS PREV_MTD,SUM(ISNULL(T2.PREV_MTD,0) ) AS PREV_YTD,
	       VARIANCE_M=CONVERT(NUMERIC(18,2),0),
	       VARIANCE_T=CONVERT(NUMERIC(18,2),0) 
	INTO #ALIAS_WISE_FINAL
	FROM #ALIAS_WISE T1
	JOIN #ALIAS_WISE T2 ON T1.MONTHNUMBER>=T2.MONTHNUMBER  AND T1.DEPT_ALIAS =T2.DEPT_ALIAS 
	GROUP BY T1.DEPT_ALIAS,T1.MONTHNUMBER,T1.MONTH ,T1.MTD,T1.PREV_MTD   
	ORDER BY T1.DEPT_ALIAS,T1.MONTHNUMBER 
	
	 UPDATE #ALIAS_WISE_FINAL SET VARIANCE_M =CASE WHEN PREV_MTD<>0 AND MTD<>0  THEN ((MTD -PREV_MTD)/PREV_MTD)*100 ELSE 0 END
	,VARIANCE_T =CASE WHEN PREV_YTD<>0 AND YTD<>0 THEN  ((YTD-PREV_YTD)/PREV_YTD)*100 ELSE 0 END
	-- AS PER ANIL SIR DEPT ID & DEPT NAME ADD NEW COLUMN ADD IN SAME rDLC 26032022 
	IF ISNULL(@NFILTER,0) <> ''
	BEGIN
		SELECT C.DEPT_ALIAS AS DEPT_ID, '' AS DEPT_NAME, C.DEPT_ALIAS, C.MONTH ,CONVERT(NUMERIC(18,2),C.MTD/@NDIVISION_FACTOR) AS MTD ,CONVERT(NUMERIC(18,2),C.PREV_MTD/@NDIVISION_FACTOR) AS PREV_MTD,
			   VARIANCE_M,CONVERT(NUMERIC(18,2),C.YTD/@NDIVISION_FACTOR) AS  YTD,CONVERT(NUMERIC(18,2),C.PREV_YTD/@NDIVISION_FACTOR) AS PREV_YTD ,VARIANCE_T  
		FROM #ALIAS_WISE_FINAL C
		ORDER BY C.DEPT_ALIAS,MONTHNUMBER
	END
	
  ELSE 
	BEGIN
	
		SELECT C.DEPT_ALIAS AS DEPT_ID,'' AS DEPT_NAME,C.DEPT_ALIAS, C.MONTH ,CONVERT(NUMERIC(18,2),C.MTD/@NDIVISION_FACTOR) AS MTD ,CONVERT(NUMERIC(18,2),C.PREV_MTD/@NDIVISION_FACTOR) AS PREV_MTD,
			   VARIANCE_M,CONVERT(NUMERIC(18,2),C.YTD/@NDIVISION_FACTOR) AS  YTD,CONVERT(NUMERIC(18,2),C.PREV_YTD/@NDIVISION_FACTOR) AS PREV_YTD ,VARIANCE_T  
		FROM #ALIAS_WISE_FINAL C
		ORDER BY C.DEPT_ALIAS,MONTHNUMBER
	END
END	
--end
ELSE --SINGLE LOCATION
BEGIN
    IF OBJECT_ID ('TEMPDB..#SINGLE_LOCATION','U') IS NOT NULL
			DROP TABLE #SINGLE_LOCATION
    
    SELECT DEPT_ID=@CLOC_ID,T.MONTHNUMBER,T.MONTH,ISNULL(SLS.MTD,0) AS MTD,ISNULL(SLS.PREV_MTD,0) AS PREV_MTD
    INTO #SINGLE_LOCATION
	FROM #TMPMONTHNAME T
	LEFT JOIN
	(
	   SELECT DEPT_ID,MONTH 
	       ,SUM(MTD) AS MTD
	       ,SUM(PREV_MTD) AS PREV_MTD 
		FROM #SLSAMOUNT
		WHERE DEPT_ID =@CLOC_ID 
		GROUP BY DEPT_ID,MONTH
	) SLS ON SLS.MONTH =T.MONTH
	
	 IF OBJECT_ID ('TEMPDB..#SINGLE_LOCATION_FINAL','U') IS NOT NULL
       DROP TABLE #SINGLE_LOCATION_FINAL
	
	SELECT T1.DEPT_ID , T1.MONTHNUMBER,T1.MONTH ,ISNULL(T1.MTD,0) AS MTD,SUM(ISNULL(T2.MTD,0) ) AS YTD,
	       ISNULL(T1.PREV_MTD,0) AS PREV_MTD,SUM(ISNULL(T2.PREV_MTD,0) ) AS PREV_YTD,
	       VARIANCE_M=CONVERT(NUMERIC(18,2),0),
	       VARIANCE_T=CONVERT(NUMERIC(18,2),0) 
	INTO #SINGLE_LOCATION_FINAL
	FROM #SINGLE_LOCATION T1
	JOIN #SINGLE_LOCATION T2 ON T1.MONTHNUMBER >=T2.MONTHNUMBER  --AND T1.DEPT_ID =T2.DEPT_ID 
	GROUP BY T1.DEPT_ID,T1.MONTHNUMBER,T1.MONTH ,T1.MTD,T1.PREV_MTD   
	ORDER BY T1.DEPT_ID,T1.MONTHNUMBER 
	
     UPDATE #SINGLE_LOCATION_FINAL SET VARIANCE_M =CASE WHEN PREV_MTD<>0 AND MTD<>0  THEN ((MTD -PREV_MTD)/PREV_MTD)*100 ELSE 0 END
	,VARIANCE_T =CASE WHEN PREV_YTD<>0 AND YTD<>0 THEN  ((YTD-PREV_YTD)/PREV_YTD)*100 ELSE 0 END
	
	
	
	IF ISNULL(@NFILTER,0) <> ''
	BEGIN
	
		SELECT C.DEPT_ID,L.DEPT_NAME, C.MONTH ,CONVERT(NUMERIC(18,2),C.MTD/@NDIVISION_FACTOR) AS MTD, CONVERT(NUMERIC(18,2),C.PREV_MTD/@NDIVISION_FACTOR) PREV_MTD,
			   VARIANCE_M ,CONVERT(NUMERIC(18,2),C.YTD/@NDIVISION_FACTOR) AS YTD ,CONVERT(NUMERIC(18,2),C.PREV_YTD/@NDIVISION_FACTOR) AS  PREV_YTD,VARIANCE_T  
		FROM #SINGLE_LOCATION_FINAL C
		JOIN LOCATION L ON L.DEPT_ID =C.DEPT_ID 
		JOIN #TMPDEPTFILTER TF ON L.DEPT_ID=TF.DEPT_ID
		ORDER BY MONTHNUMBER
	END
	
	 ELSE
	 BEGIN
	    SELECT C.DEPT_ID,L.DEPT_NAME, C.MONTH ,CONVERT(NUMERIC(18,2),C.MTD/@NDIVISION_FACTOR) AS MTD, CONVERT(NUMERIC(18,2),C.PREV_MTD/@NDIVISION_FACTOR) PREV_MTD,
			   VARIANCE_M ,CONVERT(NUMERIC(18,2),C.YTD/@NDIVISION_FACTOR) AS YTD ,CONVERT(NUMERIC(18,2),C.PREV_YTD/@NDIVISION_FACTOR) AS  PREV_YTD,VARIANCE_T  
		FROM #SINGLE_LOCATION_FINAL C
		JOIN LOCATION L ON L.DEPT_ID =C.DEPT_ID 
        ORDER BY MONTHNUMBER
     END

END
END
ELSE
BEGIN
    
    SET @NDIVISION_MTD_AMOUNT=1
    SET @NDIVISION_YTD_AMOUNT=1
    
    IF @NDIVISION_FACTOR =1
      SET @NDIVISION_MTD_AMOUNT =1000
   ELSE IF @NDIVISION_FACTOR=2
      SET @NDIVISION_MTD_AMOUNT=100000
   ELSE IF @NDIVISION_FACTOR=3
      SET @NDIVISION_MTD_AMOUNT=10000000 
   
   IF @NDIVISION_FACTOR_YTD=1
      SET @NDIVISION_YTD_AMOUNT=1000
   ELSE IF @NDIVISION_FACTOR_YTD=2
      SET @NDIVISION_YTD_AMOUNT=100000
   ELSE IF @NDIVISION_FACTOR_YTD=3
      SET @NDIVISION_YTD_AMOUNT=10000000
   
   
   
   SET @CURYEAR='20'+LEFT(@CFIN_YEAR,2)
   
   IF (SELECT   '01'+DBO.FN_GETFINYEAR(GETDATE()))=@CURYEAR
   SET @DLOG_DT=(SELECT GETDATE ())
   ELSE
   SET @DLOG_DT=CAST(@CURYEAR+1 AS VARCHAR(10))+'-03-31'
   
   SET @DPREVLOG_DT=(SELECT DATEADD(YEAR,-1,@DLOG_DT))
   
   SET @CURYEAR='011'+CAST(RIGHT (@CURYEAR,2)+1 AS VARCHAR(10))
   SET @PREVYEAR='0'+ CAST((SELECT @CURYEAR-1) AS VARCHAR(10))
  

   IF @NALL_LOC =0 AND ISNULL(@CLOC_ID,'') =''
		SELECT @ERROR='PLEASE SELECT A LOCATION.' 
	IF ISNULL(@ERROR,'')<>''
	BEGIN
	   SELECT  @ERROR AS ERRMSG 
	   GOTO END_PROC
	END
	ELSE
	BEGIN	 
		
IF @NALL_LOC=1 ----FOR CLUUBED
BEGIN


       SET @DTSQL=N'SELECT A.MONTHNUMBER,'''' AS DEPT_ID,'''' AS DEPT_NAME, A.MONTH,
                           SUM(ISNULL(MTD,0)) AS MTD,SUM(ISNULL(PREV_MTD,0)) AS PREV_MTD
                  FROM #TMPMONTHNAME A
                  LEFT JOIN
                  (
					   SELECT LEFT(DATENAME(MONTH,A.CM_DT),3) AS MTH ,SUM(ISNULL(NET_AMOUNT,0)) AS MTD,
							  0 AS PREV_MTD
					  FROM CMM01106 A (NOLOCK)
					  WHERE A.CANCELLED=0 AND A.FIN_YEAR='''+@CURYEAR+'''
					  AND A.CM_DT <= '''+CONVERT(VARCHAR(11),@DLOG_DT ,120)+'''
					  GROUP BY LEFT(DATENAME(MONTH,A.CM_DT),3)
					  UNION
					  SELECT LEFT(DATENAME(MONTH,A.CM_DT),3) AS MTH ,0 AS MTD,
					  SUM(ISNULL(NET_AMOUNT,0)) AS PREV_MTD
					  FROM '+@CPREVDBNAME+' CMM01106 A (NOLOCK)
					  WHERE A.CANCELLED=0 AND A.FIN_YEAR='''+@PREVYEAR+'''
					  AND A.CM_DT <= '''+CONVERT(VARCHAR(11),@DPREVLOG_DT ,120)+'''
					  GROUP BY LEFT(DATENAME(MONTH,A.CM_DT),3)
                  ) B ON A.MONTH=B.MTH
                  GROUP BY A.MONTHNUMBER,A.MONTH'
      
      PRINT @DTSQL
      INSERT INTO @TBLVARIANCEREPORT(MONTHNUMBER,DEPT_ID,DEPT_NAME,MONTH,MTD,PREV_MTD)
      EXEC SP_EXECUTESQL @DTSQL 
     
    UPDATE A SET YTD=ISNULL(B.YTD,0),PREV_YTD=ISNULL(B.PREV_YTD,0) 
    FROM @TBLVARIANCEREPORT A
    LEFT JOIN 
    (
    SELECT T1.MONTHNUMBER,T1.MONTH,SUM(ISNULL(T2.MTD,0) ) AS YTD,
	       SUM(ISNULL(T2.PREV_MTD,0) ) AS PREV_YTD
	FROM @TBLVARIANCEREPORT T1
	JOIN @TBLVARIANCEREPORT T2 ON T1.MONTHNUMBER >=T2.MONTHNUMBER 
	GROUP BY T1.MONTHNUMBER,T1.MONTH ,T1.MTD,T1.PREV_MTD 
	)  B ON A.MONTHNUMBER=B.MONTHNUMBER 
	WHERE A.MONTHNUMBER <=@NCURMTH
   
 
	UPDATE @TBLVARIANCEREPORT SET VARIANCE_M =CASE WHEN PREV_MTD<>0 AND MTD<>0  THEN ((MTD -PREV_MTD)/PREV_MTD)*100 ELSE 0 END
	,VARIANCE_T =CASE WHEN PREV_YTD<>0 AND YTD<>0 THEN  ((YTD-PREV_YTD)/PREV_YTD)*100 ELSE 0 END
	
	SELECT DEPT_ID,DEPT_NAME, C.MONTH ,
	        ISNULL(CONVERT(NUMERIC(12,2),C.MTD/@NDIVISION_MTD_AMOUNT),0) AS MTD,
	        ISNULL(CONVERT(NUMERIC(12,2),C.PREV_MTD/@NDIVISION_MTD_AMOUNT ),0) AS PREV_MTD,VARIANCE_M,
	        ISNULL(CONVERT(NUMERIC(12,2),C.YTD/@NDIVISION_YTD_AMOUNT),0) AS YTD ,
	       ISNULL(CONVERT(NUMERIC(12,2),C.PREV_YTD/@NDIVISION_YTD_AMOUNT ),0) AS PREV_YTD,VARIANCE_T  
	FROM @TBLVARIANCEREPORT C
	ORDER BY MONTHNUMBER
	
GOTO END_PROC

END
ELSE IF @NALL_LOC=2  ---ALL LOCATION 
BEGIN
   
     SET @SR =1
     
     
     WHILE EXISTS(SELECT SR FROM #TMPDEPT_SR WHERE SR=@SR)
     BEGIN
         SELECT TOP 1  @DEPT_ID=DEPT_ID  FROM #TMPDEPT_SR WHERE SR=@SR
         INSERT INTO #TMPMONTHNAME_NEW
         SELECT MONTHNUMBER,MONTH,@DEPT_ID FROM #TMPMONTHNAME
         SET @SR=@SR+1
      END
      
      
      SET @DTSQL=N'SELECT A.MONTHNUMBER,A.DEPT_ID AS DEPT_ID,C.DEPT_NAME, A.MONTH,
                           SUM(ISNULL(MTD,0)) AS MTD,SUM(ISNULL(PREV_MTD,0)) AS PREV_MTD
                  FROM #TMPMONTHNAME_NEW A
                  LEFT JOIN
                  (
					   SELECT a.location_code AS DEPT_ID, LEFT(DATENAME(MONTH,A.CM_DT),3) AS MTH ,SUM(ISNULL(NET_AMOUNT,0)) AS MTD,
							  0 AS PREV_MTD
					  FROM CMM01106 A (NOLOCK)
					  WHERE A.CANCELLED=0 AND A.FIN_YEAR='''+@CURYEAR+'''
					  AND A.CM_DT <= '''+CONVERT(VARCHAR(11),@DLOG_DT ,120)+'''
					  GROUP BY a.location_code ,LEFT(DATENAME(MONTH,A.CM_DT),3)
					  UNION
					  SELECT a.location_code AS DEPT_ID, LEFT(DATENAME(MONTH,A.CM_DT),3) AS MTH ,0 AS MTD,
					  SUM(ISNULL(NET_AMOUNT,0)) AS PREV_MTD
					  FROM '+@CPREVDBNAME+'CMM01106 A (NOLOCK)
					  WHERE A.CANCELLED=0 AND A.FIN_YEAR='''+@PREVYEAR+'''
					  AND A.CM_DT <= '''+CONVERT(VARCHAR(11),@DPREVLOG_DT ,120)+'''
					  GROUP BY a.location_code ,LEFT(DATENAME(MONTH,A.CM_DT),3)
                  ) B ON A.MONTH=B.MTH AND A.DEPT_ID=B.DEPT_ID
                  JOIN LOCATION C (NOLOCK) ON A.DEPT_ID=C.DEPT_ID
                  GROUP BY A.MONTHNUMBER,A.DEPT_ID,C.DEPT_NAME , A.MONTH '
      
      PRINT @DTSQL
      INSERT INTO @TBLVARIANCEREPORT(MONTHNUMBER,DEPT_ID,DEPT_NAME,MONTH,MTD,PREV_MTD)
      EXEC SP_EXECUTESQL @DTSQL 
      
     
      
    UPDATE A SET YTD=ISNULL(B.YTD,0),PREV_YTD=ISNULL(B.PREV_YTD,0) 
    FROM @TBLVARIANCEREPORT A
    LEFT JOIN 
    (
    SELECT T1.DEPT_ID, T1.MONTHNUMBER,T1.MONTH,SUM(ISNULL(T2.MTD,0) ) AS YTD,
	       SUM(ISNULL(T2.PREV_MTD,0) ) AS PREV_YTD
	FROM @TBLVARIANCEREPORT T1
	JOIN @TBLVARIANCEREPORT T2 ON T1.DEPT_ID =T2.DEPT_ID AND T1.MONTHNUMBER >=T2.MONTHNUMBER 
	GROUP BY T1.DEPT_ID,T1.MONTHNUMBER,T1.MONTH ,T1.MTD,T1.PREV_MTD 
	)  B ON A.MONTHNUMBER=B.MONTHNUMBER AND A.DEPT_ID=B.DEPT_ID 
    WHERE A.MONTHNUMBER <=@NCURMTH
   
	UPDATE @TBLVARIANCEREPORT SET VARIANCE_M =CASE WHEN PREV_MTD<>0 AND MTD<>0  THEN ((MTD -PREV_MTD)/PREV_MTD)*100 ELSE 0 END
	,VARIANCE_T =CASE WHEN PREV_YTD<>0 AND YTD<>0 THEN  ((YTD-PREV_YTD)/PREV_YTD)*100 ELSE 0 END
	
	SELECT DEPT_ID,DEPT_NAME, C.MONTH ,
	        ISNULL(CONVERT(NUMERIC(12,2),C.MTD/@NDIVISION_MTD_AMOUNT),0) AS MTD,
	        ISNULL(CONVERT(NUMERIC(12,2),C.PREV_MTD/@NDIVISION_MTD_AMOUNT ),0) AS PREV_MTD,VARIANCE_M,
	        ISNULL(CONVERT(NUMERIC(12,2),C.YTD/@NDIVISION_YTD_AMOUNT),0) AS YTD ,
	       ISNULL(CONVERT(NUMERIC(12,2),C.PREV_YTD/@NDIVISION_YTD_AMOUNT ),0) AS PREV_YTD,VARIANCE_T  
	FROM @TBLVARIANCEREPORT C
	ORDER BY MONTHNUMBER
	
  GOTO END_PROC      

END
--ALIAS WISE
ELSE IF @NALL_LOC=3
BEGIN
   
     SET @SR =1
     
     
     WHILE EXISTS(SELECT SR FROM #TMPALIAS_SR WHERE SR=@SR)
     BEGIN
         SELECT TOP 1  @DEPT_ALIAS=DEPT_ALIAS  FROM #TMPALIAS_SR WHERE SR=@SR
         INSERT INTO #TMPMONTHNAME_ALIAS
         SELECT MONTHNUMBER,MONTH,@DEPT_ALIAS FROM #TMPMONTHNAME
         SET @SR=@SR+1
      END
      
      
      SET @DTSQL=N'SELECT A.MONTHNUMBER,A.DEPT_ALIAS AS DEPT_ALIAS, A.MONTH,
                           SUM(ISNULL(MTD,0)) AS MTD,SUM(ISNULL(PREV_MTD,0)) AS PREV_MTD
                  FROM #TMPMONTHNAME_ALIAS A
                  LEFT JOIN
                  (
					   SELECT B.DEPT_ALIAS, LEFT(DATENAME(MONTH,A.CM_DT),3) AS MTH ,SUM(ISNULL(NET_AMOUNT,0)) AS MTD,
							  0 AS PREV_MTD
					  FROM CMM01106 A (NOLOCK)
					  JOIN LOCATION B (NOLOCK) ON a.location_code=B.DEPT_ID
					  WHERE A.CANCELLED=0 AND A.FIN_YEAR='''+@CURYEAR+'''
					  AND A.CM_DT <= '''+CONVERT(VARCHAR(11),@DLOG_DT ,120)+'''
					  GROUP BY B.DEPT_ALIAS,LEFT(DATENAME(MONTH,A.CM_DT),3)
					  UNION
					  SELECT B.DEPT_ALIAS AS DEPT_ALIAS, LEFT(DATENAME(MONTH,A.CM_DT),3) AS MTH ,0 AS MTD,
					  SUM(ISNULL(NET_AMOUNT,0)) AS PREV_MTD
					  FROM '+@CPREVDBNAME+'CMM01106 A (NOLOCK)
					  JOIN LOCATION B (NOLOCK) ON a.location_code=B.DEPT_ID
					  WHERE A.CANCELLED=0 AND A.FIN_YEAR='''+@PREVYEAR+'''
					  AND A.CM_DT <= '''+CONVERT(VARCHAR(11),@DPREVLOG_DT ,120)+'''
					  GROUP BY B.DEPT_ALIAS ,LEFT(DATENAME(MONTH,A.CM_DT),3)
                  ) B ON A.MONTH=B.MTH AND A.DEPT_ALIAS=B.DEPT_ALIAS
                  GROUP BY A.MONTHNUMBER,A.DEPT_ALIAS,C.DEPT_ALIAS , A.MONTH '
      
      PRINT @DTSQL
      INSERT INTO @TBLVARIANCEREPORT(MONTHNUMBER,DEPT_ALIAS,MONTH,MTD,PREV_MTD)
      EXEC SP_EXECUTESQL @DTSQL 
      
     
      
    UPDATE A SET YTD=ISNULL(B.YTD,0),PREV_YTD=ISNULL(B.PREV_YTD,0) 
    FROM @TBLVARIANCEREPORT A
    LEFT JOIN 
    (
    SELECT T1.DEPT_ALIAS, T1.MONTHNUMBER,T1.MONTH,SUM(ISNULL(T2.MTD,0) ) AS YTD,
	       SUM(ISNULL(T2.PREV_MTD,0) ) AS PREV_YTD
	FROM @TBLVARIANCEREPORT T1
	JOIN @TBLVARIANCEREPORT T2 ON T1.DEPT_ALIAS =T2.DEPT_ALIAS AND T1.MONTHNUMBER >=T2.MONTHNUMBER 
	GROUP BY T1.DEPT_ALIAS,T1.MONTHNUMBER,T1.MONTH ,T1.MTD,T1.PREV_MTD 
	)  B ON A.MONTHNUMBER=B.MONTHNUMBER AND A.DEPT_ALIAS=B.DEPT_ALIAS 
    WHERE A.MONTHNUMBER <=@NCURMTH
   
	UPDATE @TBLVARIANCEREPORT SET VARIANCE_M =CASE WHEN PREV_MTD<>0 AND MTD<>0  THEN ((MTD -PREV_MTD)/PREV_MTD)*100 ELSE 0 END
	,VARIANCE_T =CASE WHEN PREV_YTD<>0 AND YTD<>0 THEN  ((YTD-PREV_YTD)/PREV_YTD)*100 ELSE 0 END
	
	SELECT DEPT_ALIAS, C.MONTH ,
	        ISNULL(CONVERT(NUMERIC(12,2),C.MTD/@NDIVISION_MTD_AMOUNT),0) AS MTD,
	        ISNULL(CONVERT(NUMERIC(12,2),C.PREV_MTD/@NDIVISION_MTD_AMOUNT ),0) AS PREV_MTD,VARIANCE_M,
	        ISNULL(CONVERT(NUMERIC(12,2),C.YTD/@NDIVISION_YTD_AMOUNT),0) AS YTD ,
	       ISNULL(CONVERT(NUMERIC(12,2),C.PREV_YTD/@NDIVISION_YTD_AMOUNT ),0) AS PREV_YTD,VARIANCE_T  
	FROM @TBLVARIANCEREPORT C
	ORDER BY MONTHNUMBER
	
  GOTO END_PROC      

END
--END OF ALIAS WISE

ELSE IF @NALL_LOC=0  --- SINGLE LOCATION  WISE
BEGIN
    
      SET @DTSQL=N'SELECT A.MONTHNUMBER,'''+@CLOC_ID+''' AS DEPT_ID,C.DEPT_NAME AS DEPT_NAME, A.MONTH,
                           SUM(ISNULL(MTD,0)) AS MTD,SUM(ISNULL(PREV_MTD,0)) AS PREV_MTD
                  FROM #TMPMONTHNAME A
                  LEFT JOIN
                  (
					   SELECT LEFT(DATENAME(MONTH,A.CM_DT),3) AS MTH ,SUM(ISNULL(NET_AMOUNT,0)) AS MTD,
							  0 AS PREV_MTD
					  FROM CMM01106 A (NOLOCK)
					  WHERE A.CANCELLED=0 AND A.FIN_YEAR='''+@CURYEAR+''' AND a.location_code='''+@CLOC_ID+'''
					  AND A.CM_DT <= '''+CONVERT(VARCHAR(11),@DLOG_DT ,120)+'''
					  GROUP BY LEFT(DATENAME(MONTH,A.CM_DT),3)
					  UNION
					  SELECT LEFT(DATENAME(MONTH,A.CM_DT),3) AS MTH ,0 AS MTD,
					  SUM(ISNULL(NET_AMOUNT,0)) AS PREV_MTD
					  FROM '+@CPREVDBNAME+'CMM01106 A (NOLOCK)
					  WHERE A.CANCELLED=0 AND A.FIN_YEAR='''+@PREVYEAR+''' AND a.location_code='''+@CLOC_ID+'''
					  AND A.CM_DT <= '''+CONVERT(VARCHAR(11),@DPREVLOG_DT ,120)+'''
					  GROUP BY LEFT(DATENAME(MONTH,A.CM_DT),3)
                  ) B ON A.MONTH=B.MTH
                  JOIN LOCATION C (NOLOCK) ON C.DEPT_ID='''+@CLOC_ID+'''
                  GROUP BY A.MONTHNUMBER,A.MONTH,C.DEPT_NAME'
      
      PRINT @DTSQL
      INSERT INTO @TBLVARIANCEREPORT(MONTHNUMBER,DEPT_ID,DEPT_NAME,MONTH,MTD,PREV_MTD)
      EXEC SP_EXECUTESQL @DTSQL 
      
    
    UPDATE A SET YTD=ISNULL(B.YTD,0),PREV_YTD=ISNULL(B.PREV_YTD,0) 
    FROM @TBLVARIANCEREPORT A
    LEFT JOIN 
    (
    SELECT T1.MONTHNUMBER,T1.MONTH,SUM(ISNULL(T2.MTD,0) ) AS YTD,
	       SUM(ISNULL(T2.PREV_MTD,0) ) AS PREV_YTD
	FROM @TBLVARIANCEREPORT T1
	JOIN @TBLVARIANCEREPORT T2 ON T1.MONTHNUMBER >=T2.MONTHNUMBER 
	GROUP BY T1.MONTHNUMBER,T1.MONTH ,T1.MTD,T1.PREV_MTD 
	)  B ON A.MONTHNUMBER=B.MONTHNUMBER 
   WHERE A.MONTHNUMBER <=@NCURMTH
 
	UPDATE @TBLVARIANCEREPORT SET VARIANCE_M =CASE WHEN PREV_MTD<>0 AND MTD<>0  THEN ((MTD -PREV_MTD)/PREV_MTD)*100 ELSE 0 END
	,VARIANCE_T =CASE WHEN PREV_YTD<>0 AND YTD<>0 THEN  ((YTD-PREV_YTD)/PREV_YTD)*100 ELSE 0 END
	
	SELECT DEPT_ID,DEPT_NAME, C.MONTH ,
	        ISNULL(CONVERT(NUMERIC(12,2),C.MTD/@NDIVISION_MTD_AMOUNT),0) AS MTD,
	        ISNULL(CONVERT(NUMERIC(12,2),C.PREV_MTD/@NDIVISION_MTD_AMOUNT ),0) AS PREV_MTD,VARIANCE_M,
	        ISNULL(CONVERT(NUMERIC(12,2),C.YTD/@NDIVISION_YTD_AMOUNT),0) AS YTD ,
	       ISNULL(CONVERT(NUMERIC(12,2),C.PREV_YTD/@NDIVISION_YTD_AMOUNT ),0) AS PREV_YTD,VARIANCE_T  
	FROM @TBLVARIANCEREPORT C
	ORDER BY MONTHNUMBER
GOTO END_PROC

END


END	
 

END
END


--------------------------- FOR WLS------------------------------------------
IF ISNULL(@NSUMMARYTYPE,0)=2
BEGIN
IF @NAPI=0
BEGIN
	IF (@NFILTER <> '')
	BEGIN
	
	--SET @NFILTER=SUBSTRING(@NFILTER,2,LEN(@NFILTER))
	
		
		BEGIN
			SET @NFILTERSQL=N'INSERT INTO #TMPDEPTFILTER   
			SELECT DEPT_ID  FROM LOC_VIEW LOC_VIEW  WHERE '+@NFILTER
			 PRINT @NFILTERSQL
			EXEC SP_EXECUTESQL @NFILTERSQL
		END
	END	
	
	 
	IF @NALL_LOC =0 AND ISNULL(@CLOC_ID,'') =''
		SELECT @ERROR='PLEASE SELECT A LOCATION.' 
	IF ISNULL(@ERROR,'')<>''
	BEGIN
	   SELECT  @ERROR AS ERRMSG 
	   GOTO END_PROC
	END
	ELSE
	BEGIN	 
	    
		
		IF OBJECT_ID ('TEMPDB..#SLSAMOUNTWSL','U') IS NOT NULL
           DROP TABLE #SLSAMOUNTWSL
           
           
           SELECT DEPT_ID,MONTH,SUM(MTD)AS MTD,SUM(PREV_MTD) AS PREV_MTD INTO #SLSAMOUNTWSL 
           FROM
           (
           
           SELECT  inm.location_code AS DEPT_ID,LEFT(DATENAME(MONTH,INM.INV_DT),3) AS MONTH,
	               SUM(CASE WHEN @CURYEAR=FIN_YEAR  THEN NET_AMOUNT ELSE 0 END) AS MTD,
	               SUM(CASE WHEN @PREVYEAR=FIN_YEAR THEN NET_AMOUNT ELSE 0 END) AS PREV_MTD
		   FROM INM01106 INM
		   WHERE INM.CANCELLED =0 
		   AND INM.INV_MODE=1
		   GROUP BY inm.location_code,LEFT(DATENAME(MONTH,INM.INV_DT),3)
		   
		   UNION ALL
		   
		   SELECT  cnm.location_Code AS DEPT_ID,LEFT(DATENAME(MONTH,CNM.CN_DT),3) AS MONTH,
	               SUM(CASE WHEN @CURYEAR=FIN_YEAR  THEN -(TOTAL_AMOUNT) ELSE 0 END) AS MTD,
	               SUM(CASE WHEN @PREVYEAR=FIN_YEAR THEN -(TOTAL_AMOUNT) ELSE 0 END) AS PREV_MTD
		   FROM CNM01106 CNM
		   WHERE CNM.CANCELLED =0 
		   AND CNM.MODE=1
		   GROUP BY cnm.location_Code,LEFT(DATENAME(MONTH,CNM.CN_DT),3)
		   )A GROUP BY DEPT_ID,MONTH 
		    ORDER BY DEPT_ID
	   END  
	   
IF @NALL_LOC=1 ----FOR CLUUBED
BEGIN
     
      IF OBJECT_ID ('TEMPDB..#CLUBBEDWSL','U') IS NOT NULL
			DROP TABLE #CLUBBEDWSL
    
    SELECT T.MONTHNUMBER, T.MONTH,ISNULL(SLS.MTD,0) AS MTD,ISNULL(SLS.PREV_MTD,0) AS PREV_MTD
    INTO  #CLUBBEDWSL
	FROM #TMPMONTHNAME T
	LEFT JOIN
	(
	   SELECT MONTH 
	       ,SUM(MTD) AS MTD
	       ,SUM(PREV_MTD) AS PREV_MTD 
		FROM #SLSAMOUNTWSL
		GROUP BY MONTH
	) SLS ON SLS.MONTH =T.MONTH
	
	 IF OBJECT_ID('TEMPDB..#CLUBBED_FINAL_WSL','U') IS NOT NULL
			DROP TABLE #CLUBBED_FINAL_WSL
	
	SELECT T1.MONTHNUMBER,T1.MONTH,ISNULL(T1.MTD,0) AS MTD,SUM(ISNULL(T2.MTD,0) ) AS YTD,
	       ISNULL(T1.PREV_MTD,0) AS PREV_MTD,SUM(ISNULL(T2.PREV_MTD,0) ) AS PREV_YTD,
	       VARIANCE_M=CONVERT(NUMERIC(18,2),0),
	       VARIANCE_T=CONVERT(NUMERIC(18,2),0) 
	INTO #CLUBBED_FINAL_WSL
	FROM #CLUBBEDWSL T1
	JOIN #CLUBBEDWSL T2 ON T1.MONTHNUMBER >=T2.MONTHNUMBER 
	GROUP BY T1.MONTHNUMBER,T1.MONTH ,T1.MTD,T1.PREV_MTD   
	ORDER BY T1.MONTHNUMBER 
	
	UPDATE #CLUBBED_FINAL_WSL SET VARIANCE_M =CASE WHEN PREV_MTD<>0 AND MTD<>0  THEN ((MTD -PREV_MTD)/PREV_MTD)*100 ELSE 0 END
	,VARIANCE_T =CASE WHEN PREV_YTD<>0 AND YTD<>0 THEN  ((YTD-PREV_YTD)/PREV_YTD)*100 ELSE 0 END
	
	SELECT DEPT_ID=CAST('' AS VARCHAR(10)),DEPT_NAME=CAST('' AS VARCHAR(100)), C.MONTH ,CONVERT(NUMERIC(18,2),C.MTD/@NDIVISION_FACTOR) AS MTD,
	       CONVERT(NUMERIC(18,2),C.PREV_MTD/@NDIVISION_FACTOR) AS PREV_MTD,VARIANCE_M,CONVERT(NUMERIC(18,2),C.YTD/@NDIVISION_FACTOR) AS YTD ,
	       CONVERT(NUMERIC(18,2),C.PREV_YTD/@NDIVISION_FACTOR) AS PREV_YTD,VARIANCE_T  
	FROM #CLUBBED_FINAL_WSL C
	ORDER BY MONTHNUMBER
GOTO END_PROC
END
ELSE IF @NALL_LOC=2  ---ALL LOCATION 
BEGIN
      --IF OBJECT_ID ('TEMPDB..#TMPDEPT_SR','U') IS NOT NULL
      -- DROP TABLE #TMPDEPT_SR
       
     SET @SR =1
     
     WHILE EXISTS(SELECT SR FROM #TMPDEPT_SR WHERE SR=@SR)
     BEGIN
         SELECT TOP 1  @DEPT_ID=DEPT_ID  FROM #TMPDEPT_SR WHERE SR=@SR
         INSERT INTO #TMPMONTHNAME_NEW
         SELECT MONTHNUMBER,MONTH,@DEPT_ID FROM #TMPMONTHNAME
         SET @SR=@SR+1
      END
    
     IF OBJECT_ID ('TEMPDB..#LOCATION_WISE_WSL','U') IS NOT NULL
       DROP TABLE #LOCATION_WISE_WSL
    
     SELECT T.DEPT_ID , T.MONTHNUMBER, T.MONTH,ISNULL(SLS.MTD,0) AS MTD,ISNULL(SLS.PREV_MTD,0) AS PREV_MTD
     INTO  #LOCATION_WISE_WSL
	 FROM #TMPMONTHNAME_NEW T
	 LEFT JOIN
	 (
	   SELECT DEPT_ID,MONTH 
	       ,SUM(MTD) AS MTD
	       ,SUM(PREV_MTD) AS PREV_MTD 
		FROM #SLSAMOUNT
		GROUP BY DEPT_ID,MONTH
	 ) SLS ON SLS.MONTH=T.MONTH AND T.DEPT_ID=SLS.DEPT_ID 
    
	 IF OBJECT_ID('TEMPDB..#LOCATION_WISE_FINAL_WSL','U') IS NOT NULL
       DROP TABLE #LOCATION_WISE_FINAL_WSL
	
	SELECT T1.DEPT_ID , T1.MONTHNUMBER,T1.MONTH ,ISNULL(T1.MTD,0) AS MTD,SUM(ISNULL(T2.MTD,0) ) AS YTD,
	       ISNULL(T1.PREV_MTD,0) AS PREV_MTD,SUM(ISNULL(T2.PREV_MTD,0) ) AS PREV_YTD,
	       VARIANCE_M=CONVERT(NUMERIC(18,2),0),
	       VARIANCE_T=CONVERT(NUMERIC(18,2),0) 
	INTO #LOCATION_WISE_FINAL_WSL
	FROM #LOCATION_WISE T1
	JOIN #LOCATION_WISE T2 ON T1.MONTHNUMBER>=T2.MONTHNUMBER  AND T1.DEPT_ID =T2.DEPT_ID 
	GROUP BY T1.DEPT_ID,T1.MONTHNUMBER,T1.MONTH ,T1.MTD,T1.PREV_MTD   
	ORDER BY T1.DEPT_ID,T1.MONTHNUMBER 
	
	 UPDATE #LOCATION_WISE_FINAL SET VARIANCE_M =CASE WHEN PREV_MTD<>0 AND MTD<>0  THEN ((MTD -PREV_MTD)/PREV_MTD)*100 ELSE 0 END
	,VARIANCE_T =CASE WHEN PREV_YTD<>0 AND YTD<>0 THEN  ((YTD-PREV_YTD)/PREV_YTD)*100 ELSE 0 END

	IF ISNULL(@NFILTER,0) <> ''
	BEGIN
		SELECT C.DEPT_ID,L.DEPT_NAME, C.MONTH ,CONVERT(NUMERIC(18,2),C.MTD/@NDIVISION_FACTOR) AS MTD ,CONVERT(NUMERIC(18,2),C.PREV_MTD/@NDIVISION_FACTOR) AS PREV_MTD,
			   VARIANCE_M,CONVERT(NUMERIC(18,2),C.YTD/@NDIVISION_FACTOR) AS  YTD,CONVERT(NUMERIC(18,2),C.PREV_YTD/@NDIVISION_FACTOR) AS PREV_YTD ,VARIANCE_T  
		FROM #LOCATION_WISE_FINAL C
		JOIN LOCATION L ON L.DEPT_ID =C.DEPT_ID 
		JOIN #TMPDEPTFILTER TF ON L.DEPT_ID=TF.DEPT_ID
		ORDER BY C.DEPT_ID,MONTHNUMBER
	END
	
  ELSE 
	BEGIN
	
		SELECT C.DEPT_ID,L.DEPT_NAME, C.MONTH ,CONVERT(NUMERIC(18,2),C.MTD/@NDIVISION_FACTOR) AS MTD ,CONVERT(NUMERIC(18,2),C.PREV_MTD/@NDIVISION_FACTOR) AS PREV_MTD,
			   VARIANCE_M,CONVERT(NUMERIC(18,2),C.YTD/@NDIVISION_FACTOR) AS  YTD,CONVERT(NUMERIC(18,2),C.PREV_YTD/@NDIVISION_FACTOR) AS PREV_YTD ,VARIANCE_T  
		FROM #LOCATION_WISE_FINAL C
		 JOIN LOCATION L ON L.DEPT_ID =C.DEPT_ID 
		ORDER BY C.DEPT_ID,MONTHNUMBER
	END
END	
ELSE --SINGLE LOCATION
BEGIN
    IF OBJECT_ID ('TEMPDB..#SINGLE_LOCATION_WSL','U') IS NOT NULL
			DROP TABLE #SINGLE_LOCATION_WSL
    
    SELECT DEPT_ID=@CLOC_ID,T.MONTHNUMBER,T.MONTH,ISNULL(SLS.MTD,0) AS MTD,ISNULL(SLS.PREV_MTD,0) AS PREV_MTD
    INTO  #SINGLE_LOCATION_WSL
	FROM #TMPMONTHNAME T
	LEFT JOIN
	(
	   SELECT DEPT_ID,MONTH 
	       ,SUM(MTD) AS MTD
	       ,SUM(PREV_MTD) AS PREV_MTD 
		FROM #SLSAMOUNT
		WHERE DEPT_ID =@CLOC_ID 
		GROUP BY DEPT_ID,MONTH
	) SLS ON SLS.MONTH =T.MONTH
	
	 IF OBJECT_ID ('TEMPDB..#SINGLE_LOCATION_FINAL_WSL','U') IS NOT NULL
       DROP TABLE #SINGLE_LOCATION_FINAL_WSL
	
	SELECT T1.DEPT_ID , T1.MONTHNUMBER,T1.MONTH ,ISNULL(T1.MTD,0) AS MTD,SUM(ISNULL(T2.MTD,0) ) AS YTD,
	       ISNULL(T1.PREV_MTD,0) AS PREV_MTD,SUM(ISNULL(T2.PREV_MTD,0) ) AS PREV_YTD,
	       VARIANCE_M=CONVERT(NUMERIC(18,2),0),
	       VARIANCE_T=CONVERT(NUMERIC(18,2),0) 
	INTO #SINGLE_LOCATION_FINAL_WSL
	FROM #SINGLE_LOCATION T1
	JOIN #SINGLE_LOCATION T2 ON T1.MONTHNUMBER >=T2.MONTHNUMBER  --AND T1.DEPT_ID =T2.DEPT_ID 
	GROUP BY T1.DEPT_ID,T1.MONTHNUMBER,T1.MONTH ,T1.MTD,T1.PREV_MTD   
	ORDER BY T1.DEPT_ID,T1.MONTHNUMBER 
	
     UPDATE #SINGLE_LOCATION_FINAL SET VARIANCE_M =CASE WHEN PREV_MTD<>0 AND MTD<>0  THEN ((MTD -PREV_MTD)/PREV_MTD)*100 ELSE 0 END
	,VARIANCE_T =CASE WHEN PREV_YTD<>0 AND YTD<>0 THEN  ((YTD-PREV_YTD)/PREV_YTD)*100 ELSE 0 END
	
	
	
	IF ISNULL(@NFILTER,0) <> ''
	BEGIN
	
		SELECT C.DEPT_ID,L.DEPT_NAME, C.MONTH ,CONVERT(NUMERIC(18,2),C.MTD/@NDIVISION_FACTOR) AS MTD, CONVERT(NUMERIC(18,2),C.PREV_MTD/@NDIVISION_FACTOR) PREV_MTD,
			   VARIANCE_M ,CONVERT(NUMERIC(18,2),C.YTD/@NDIVISION_FACTOR) AS YTD ,CONVERT(NUMERIC(18,2),C.PREV_YTD/@NDIVISION_FACTOR) AS  PREV_YTD,VARIANCE_T  
		FROM #SINGLE_LOCATION_FINAL C
		JOIN LOCATION L ON L.DEPT_ID =C.DEPT_ID 
		JOIN #TMPDEPTFILTER TF ON L.DEPT_ID=TF.DEPT_ID
		ORDER BY MONTHNUMBER
	END
	
	 ELSE
	 BEGIN
	    SELECT C.DEPT_ID,L.DEPT_NAME, C.MONTH ,CONVERT(NUMERIC(18,2),C.MTD/@NDIVISION_FACTOR) AS MTD, CONVERT(NUMERIC(18,2),C.PREV_MTD/@NDIVISION_FACTOR) PREV_MTD,
			   VARIANCE_M ,CONVERT(NUMERIC(18,2),C.YTD/@NDIVISION_FACTOR) AS YTD ,CONVERT(NUMERIC(18,2),C.PREV_YTD/@NDIVISION_FACTOR) AS  PREV_YTD,VARIANCE_T  
		FROM #SINGLE_LOCATION_FINAL C
		JOIN LOCATION L ON L.DEPT_ID =C.DEPT_ID 
        ORDER BY MONTHNUMBER
     END

END
END
ELSE
BEGIN
    
    SET @NDIVISION_MTD_AMOUNT=1
    SET @NDIVISION_YTD_AMOUNT=1
    
    IF @NDIVISION_FACTOR =1
      SET @NDIVISION_MTD_AMOUNT =1000
   ELSE IF @NDIVISION_FACTOR=2
      SET @NDIVISION_MTD_AMOUNT=100000
   ELSE IF @NDIVISION_FACTOR=3
      SET @NDIVISION_MTD_AMOUNT=10000000 
   
   IF @NDIVISION_FACTOR_YTD=1
      SET @NDIVISION_YTD_AMOUNT=1000
   ELSE IF @NDIVISION_FACTOR_YTD=2
      SET @NDIVISION_YTD_AMOUNT=100000
   ELSE IF @NDIVISION_FACTOR_YTD=3
      SET @NDIVISION_YTD_AMOUNT=10000000
   
   
   
   SET @CURYEAR='20'+LEFT(@CFIN_YEAR,2)
   
   IF (SELECT   '01'+DBO.FN_GETFINYEAR(GETDATE()))=@CURYEAR
   SET @DLOG_DT=(SELECT GETDATE ())
   ELSE
   SET @DLOG_DT=CAST(@CURYEAR+1 AS VARCHAR(10))+'-03-31'
   
   SET @DPREVLOG_DT=(SELECT DATEADD(YEAR,-1,@DLOG_DT))
   
   SET @CURYEAR='011'+CAST(RIGHT (@CURYEAR,2)+1 AS VARCHAR(10))
   SET @PREVYEAR='0'+ CAST((SELECT @CURYEAR-1) AS VARCHAR(10))
  

   IF @NALL_LOC =0 AND ISNULL(@CLOC_ID,'') =''
		SELECT @ERROR='PLEASE SELECT A LOCATION.' 
	IF ISNULL(@ERROR,'')<>''
	BEGIN
	   SELECT  @ERROR AS ERRMSG 
	   GOTO END_PROC
	END
	ELSE
	BEGIN	 
		
IF @NALL_LOC=1 ----FOR CLUUBED
BEGIN
       SET @DTSQL=N'SELECT A.MONTHNUMBER,'''' AS DEPT_ID,'''' AS DEPT_NAME, A.MONTH,
                           SUM(ISNULL(MTD,0)) AS MTD,SUM(ISNULL(PREV_MTD,0)) AS PREV_MTD
                  FROM #TMPMONTHNAME A
                  LEFT JOIN
                  (
					   SELECT LEFT(DATENAME(MONTH,A.INV_DT),3) AS MTH ,SUM(ISNULL(NET_AMOUNT,0)) AS MTD,
							  0 AS PREV_MTD
					  FROM INM01106 A (NOLOCK)
					  WHERE A.CANCELLED=0  AND A.INV_MODE=1 AND A.FIN_YEAR='''+@CURYEAR+'''
					  AND A.INV_DT <= '''+CONVERT(VARCHAR(11),@DLOG_DT ,120)+'''
					  GROUP BY LEFT(DATENAME(MONTH,A.INV_DT),3)
					  UNION
					  SELECT LEFT(DATENAME(MONTH,A.INV_DT),3) AS MTH ,0 AS MTD,
					  SUM(ISNULL(NET_AMOUNT,0)) AS PREV_MTD
					  FROM '+@CPREVDBNAME+'INM01106 A (NOLOCK)
					  WHERE A.CANCELLED=0 AND A.INV_MODE=1 AND A.FIN_YEAR='''+@PREVYEAR+'''
					  AND A.INV_DT <= '''+CONVERT(VARCHAR(11),@DPREVLOG_DT ,120)+'''
					  GROUP BY LEFT(DATENAME(MONTH,A.INV_DT),3)
			     	 UNION ALL
					   SELECT LEFT(DATENAME(MONTH,A.CN_DT),3) AS MTH ,-(SUM(ISNULL(TOTAL_AMOUNT,0))) AS MTD,
							  0 AS PREV_MTD
					  FROM CNM01106 A (NOLOCK)
					  WHERE A.CANCELLED=0 AND A.MODE=1 AND A.FIN_YEAR='''+@CURYEAR+'''
					  AND A.CM_DT <= '''+CONVERT(VARCHAR(11),@DLOG_DT ,120)+'''
					  GROUP BY LEFT(DATENAME(MONTH,A.CN_DT),3)
					  UNION
					  SELECT LEFT(DATENAME(MONTH,A.CN_DT),3) AS MTH ,0 AS MTD,
					  -(SUM(ISNULL(TOTAL_AMOUNT,0))) AS PREV_MTD
					  FROM '+@CPREVDBNAME+'CNM01106 A (NOLOCK)
					  WHERE A.CANCELLED=0 AND A.MODE=1 AND A.FIN_YEAR='''+@PREVYEAR+'''
					  AND A.CN_DT <= '''+CONVERT(VARCHAR(11),@DPREVLOG_DT ,120)+'''
					  GROUP BY LEFT(DATENAME(MONTH,A.CN_DT),3)
                  ) B ON A.MONTH=B.MTH
                  GROUP BY A.MONTHNUMBER,A.MONTH'
      
      PRINT @DTSQL
      INSERT INTO @TBLVARIANCEREPORT(MONTHNUMBER,DEPT_ID,DEPT_NAME,MONTH,MTD,PREV_MTD)
      EXEC SP_EXECUTESQL @DTSQL 
     
    UPDATE A SET YTD=ISNULL(B.YTD,0),PREV_YTD=ISNULL(B.PREV_YTD,0) 
    FROM @TBLVARIANCEREPORT A
    LEFT JOIN 
    (
    SELECT T1.MONTHNUMBER,T1.MONTH,SUM(ISNULL(T2.MTD,0) ) AS YTD,
	       SUM(ISNULL(T2.PREV_MTD,0) ) AS PREV_YTD
	FROM @TBLVARIANCEREPORT T1
	JOIN @TBLVARIANCEREPORT T2 ON T1.MONTHNUMBER >=T2.MONTHNUMBER 
	GROUP BY T1.MONTHNUMBER,T1.MONTH ,T1.MTD,T1.PREV_MTD 
	)  B ON A.MONTHNUMBER=B.MONTHNUMBER 
	WHERE A.MONTHNUMBER <=@NCURMTH
   
 
	UPDATE @TBLVARIANCEREPORT SET VARIANCE_M =CASE WHEN PREV_MTD<>0 AND MTD<>0  THEN ((MTD -PREV_MTD)/PREV_MTD)*100 ELSE 0 END
	,VARIANCE_T =CASE WHEN PREV_YTD<>0 AND YTD<>0 THEN  ((YTD-PREV_YTD)/PREV_YTD)*100 ELSE 0 END
	
	SELECT DEPT_ID,DEPT_NAME, C.MONTH ,
	        ISNULL(CONVERT(NUMERIC(12,2),C.MTD/@NDIVISION_MTD_AMOUNT),0) AS MTD,
	        ISNULL(CONVERT(NUMERIC(12,2),C.PREV_MTD/@NDIVISION_MTD_AMOUNT ),0) AS PREV_MTD,VARIANCE_M,
	        ISNULL(CONVERT(NUMERIC(12,2),C.YTD/@NDIVISION_YTD_AMOUNT),0) AS YTD ,
	       ISNULL(CONVERT(NUMERIC(12,2),C.PREV_YTD/@NDIVISION_YTD_AMOUNT ),0) AS PREV_YTD,VARIANCE_T  
	FROM @TBLVARIANCEREPORT C
	ORDER BY MONTHNUMBER
	
GOTO END_PROC

END
ELSE IF @NALL_LOC=2  ---ALL LOCATION 
BEGIN
   
     SET @SR =1
     
     
     WHILE EXISTS(SELECT SR FROM #TMPDEPT_SR WHERE SR=@SR)
     BEGIN
         SELECT TOP 1  @DEPT_ID=DEPT_ID  FROM #TMPDEPT_SR WHERE SR=@SR
         INSERT INTO #TMPMONTHNAME_NEW
         SELECT MONTHNUMBER,MONTH,@DEPT_ID FROM #TMPMONTHNAME
         SET @SR=@SR+1
      END
      
      
      SET @DTSQL=N'SELECT A.MONTHNUMBER,A.DEPT_ID AS DEPT_ID,C.DEPT_NAME, A.MONTH,
                           SUM(ISNULL(MTD,0)) AS MTD,SUM(ISNULL(PREV_MTD,0)) AS PREV_MTD
                  FROM #TMPMONTHNAME_NEW A
                  LEFT JOIN
                  (
					   SELECT a.location_code AS DEPT_ID, LEFT(DATENAME(MONTH,A.INV_DT),3) AS MTH ,
					   SUM(ISNULL(NET_AMOUNT,0)) AS MTD,
							  0 AS PREV_MTD
					  FROM INM01106 A (NOLOCK)
					  WHERE A.CANCELLED=0 AND A.INV_MODE=1 AND A.FIN_YEAR='''+@CURYEAR+'''
					  AND A.INV_DT <= '''+CONVERT(VARCHAR(11),@DLOG_DT ,120)+'''
					  GROUP BY a.location_code ,LEFT(DATENAME(MONTH,A.INV_DT),3)
					  UNION
					  SELECT a.location_code AS DEPT_ID, LEFT(DATENAME(MONTH,A.INV_DT),3) AS MTH ,0 AS MTD,
					  SUM(ISNULL(NET_AMOUNT,0)) AS PREV_MTD
					  FROM '+@CPREVDBNAME+'INM01106 A (NOLOCK)
					  WHERE A.CANCELLED=0 AND A.INV_MODE=1  AND A.FIN_YEAR='''+@PREVYEAR+'''
					  AND A.INV_DT <= '''+CONVERT(VARCHAR(11),@DPREVLOG_DT ,120)+'''
					  GROUP BY a.location_code ,LEFT(DATENAME(MONTH,A.INV_DT),3)
					  
					  UNION ALL
					  
					  SELECT a.location_code AS DEPT_ID, LEFT(DATENAME(MONTH,A.CN_DT),3) AS MTH ,
					  -(SUM(ISNULL(TOTAL_AMOUNT,0))) AS MTD,
							  0 AS PREV_MTD
					  FROM CNM01106 A (NOLOCK)
					  WHERE A.CANCELLED=0 AND A.MODE=1  AND A.FIN_YEAR='''+@CURYEAR+'''
					  AND A.CN_DT <= '''+CONVERT(VARCHAR(11),@DLOG_DT ,120)+'''
					  GROUP BY a.location_code ,LEFT(DATENAME(MONTH,A.CN_DT),3)
					  UNION
					  SELECT a.location_code AS DEPT_ID, LEFT(DATENAME(MONTH,A.CN_DT),3) AS MTH ,0 AS MTD,
					  -(SUM(ISNULL(TOTAL_AMOUNT,0))) AS PREV_MTD
					  FROM '+@CPREVDBNAME+'CNM01106 A (NOLOCK)
					  WHERE A.CANCELLED=0 AND A.MODE=1 AND A.FIN_YEAR='''+@PREVYEAR+'''
					  AND A.CN_DT <= '''+CONVERT(VARCHAR(11),@DPREVLOG_DT ,120)+'''
					  GROUP BY a.location_code ,LEFT(DATENAME(MONTH,A.CN_DT),3)
                  ) B ON A.MONTH=B.MTH AND A.DEPT_ID=B.DEPT_ID
                  JOIN LOCATION C (NOLOCK) ON A.DEPT_ID=C.DEPT_ID
                  GROUP BY A.MONTHNUMBER,A.DEPT_ID,C.DEPT_NAME , A.MONTH '
      
      PRINT @DTSQL
      INSERT INTO @TBLVARIANCEREPORT(MONTHNUMBER,DEPT_ID,DEPT_NAME,MONTH,MTD,PREV_MTD)
      EXEC SP_EXECUTESQL @DTSQL 
      
     
      
    UPDATE A SET YTD=ISNULL(B.YTD,0),PREV_YTD=ISNULL(B.PREV_YTD,0) 
    FROM @TBLVARIANCEREPORT A
    LEFT JOIN 
    (
    SELECT T1.DEPT_ID, T1.MONTHNUMBER,T1.MONTH,SUM(ISNULL(T2.MTD,0) ) AS YTD,
	       SUM(ISNULL(T2.PREV_MTD,0) ) AS PREV_YTD
	FROM @TBLVARIANCEREPORT T1
	JOIN @TBLVARIANCEREPORT T2 ON T1.DEPT_ID =T2.DEPT_ID AND T1.MONTHNUMBER >=T2.MONTHNUMBER 
	GROUP BY T1.DEPT_ID,T1.MONTHNUMBER,T1.MONTH ,T1.MTD,T1.PREV_MTD 
	)  B ON A.MONTHNUMBER=B.MONTHNUMBER AND A.DEPT_ID=B.DEPT_ID 
    WHERE A.MONTHNUMBER <=@NCURMTH
   
	UPDATE @TBLVARIANCEREPORT SET VARIANCE_M =CASE WHEN PREV_MTD<>0 AND MTD<>0  THEN ((MTD -PREV_MTD)/PREV_MTD)*100 ELSE 0 END
	,VARIANCE_T =CASE WHEN PREV_YTD<>0 AND YTD<>0 THEN  ((YTD-PREV_YTD)/PREV_YTD)*100 ELSE 0 END
	
	SELECT DEPT_ID,DEPT_NAME, C.MONTH ,
	        ISNULL(CONVERT(NUMERIC(12,2),C.MTD/@NDIVISION_MTD_AMOUNT),0) AS MTD,
	        ISNULL(CONVERT(NUMERIC(12,2),C.PREV_MTD/@NDIVISION_MTD_AMOUNT ),0) AS PREV_MTD,VARIANCE_M,
	        ISNULL(CONVERT(NUMERIC(12,2),C.YTD/@NDIVISION_YTD_AMOUNT),0) AS YTD ,
	       ISNULL(CONVERT(NUMERIC(12,2),C.PREV_YTD/@NDIVISION_YTD_AMOUNT ),0) AS PREV_YTD,VARIANCE_T  
	FROM @TBLVARIANCEREPORT C
	ORDER BY MONTHNUMBER
	
  GOTO END_PROC      

END

ELSE IF @NALL_LOC=0  --- SINGLE LOCATION  WISE
BEGIN
    
      SET @DTSQL=N'SELECT A.MONTHNUMBER,'''+@CLOC_ID+''' AS DEPT_ID,C.DEPT_NAME AS DEPT_NAME, A.MONTH,
                           SUM(ISNULL(MTD,0)) AS MTD,SUM(ISNULL(PREV_MTD,0)) AS PREV_MTD
                  FROM #TMPMONTHNAME A
                  LEFT JOIN
                  (
					   SELECT LEFT(DATENAME(MONTH,A.INV_DT),3) AS MTH ,SUM(ISNULL(NET_AMOUNT,0)) AS MTD,
							  0 AS PREV_MTD
					  FROM INM01106 A (NOLOCK)
					  WHERE A.CANCELLED=0 AND A.INV_MODE=1 AND  A.FIN_YEAR='''+@CURYEAR+''' AND a.location_code='''+@CLOC_ID+'''
					  AND A.INV_DT <= '''+CONVERT(VARCHAR(11),@DLOG_DT ,120)+'''
					  GROUP BY LEFT(DATENAME(MONTH,A.INV_DT),3)
					  UNION
					  SELECT LEFT(DATENAME(MONTH,A.INV_DT),3) AS MTH ,0 AS MTD,
					  SUM(ISNULL(NET_AMOUNT,0)) AS PREV_MTD
					  FROM '+@CPREVDBNAME+'INM01106 A (NOLOCK)
					  WHERE A.CANCELLED=0 AND A.INV_MODE=1 AND A.FIN_YEAR='''+@PREVYEAR+''' AND a.location_code='''+@CLOC_ID+'''
					  AND A.INV_DT <= '''+CONVERT(VARCHAR(11),@DPREVLOG_DT ,120)+'''
					  GROUP BY LEFT(DATENAME(MONTH,A.INV_DT),3)
					  
					  
			   UNION ALL
			   
			   SELECT LEFT(DATENAME(MONTH,A.CN_DT),3) AS MTH ,-(SUM(ISNULL(TOTAL_AMOUNT,0))) AS MTD,
							  0 AS PREV_MTD
					  FROM CNM01106 A (NOLOCK)
					  WHERE A.CANCELLED=0 AND A.MODE=1 AND A.FIN_YEAR='''+@CURYEAR+''' AND a.location_code='''+@CLOC_ID+'''
					  AND A.CN_DT <= '''+CONVERT(VARCHAR(11),@DLOG_DT ,120)+'''
					  GROUP BY LEFT(DATENAME(MONTH,A.CN_DT),3)
					  UNION
					  SELECT LEFT(DATENAME(MONTH,A.CN_DT),3) AS MTH ,0 AS MTD,
					  -(SUM(ISNULL(NET_AMOUNT,0))) AS PREV_MTD
					  FROM '+@CPREVDBNAME+'CNM01106 A (NOLOCK)
					  WHERE A.CANCELLED=0 AND A.MODE=1 AND  A.FIN_YEAR='''+@PREVYEAR+''' AND a.location_code='''+@CLOC_ID+'''
					  AND A.CN_DT <= '''+CONVERT(VARCHAR(11),@DPREVLOG_DT ,120)+'''
					  GROUP BY LEFT(DATENAME(MONTH,A.CN_DT),3)
                  ) B ON A.MONTH=B.MTH
                  JOIN LOCATION C (NOLOCK) ON C.DEPT_ID='''+@CLOC_ID+'''
                  GROUP BY A.MONTHNUMBER,A.MONTH,C.DEPT_NAME'
      
      PRINT @DTSQL
      INSERT INTO @TBLVARIANCEREPORT(MONTHNUMBER,DEPT_ID,DEPT_NAME,MONTH,MTD,PREV_MTD)
      EXEC SP_EXECUTESQL @DTSQL 
      
    
    UPDATE A SET YTD=ISNULL(B.YTD,0),PREV_YTD=ISNULL(B.PREV_YTD,0) 
    FROM @TBLVARIANCEREPORT A
    LEFT JOIN 
    (
    SELECT T1.MONTHNUMBER,T1.MONTH,SUM(ISNULL(T2.MTD,0) ) AS YTD,
	       SUM(ISNULL(T2.PREV_MTD,0) ) AS PREV_YTD
	FROM @TBLVARIANCEREPORT T1
	JOIN @TBLVARIANCEREPORT T2 ON T1.MONTHNUMBER >=T2.MONTHNUMBER 
	GROUP BY T1.MONTHNUMBER,T1.MONTH ,T1.MTD,T1.PREV_MTD 
	)  B ON A.MONTHNUMBER=B.MONTHNUMBER 
   WHERE A.MONTHNUMBER <=@NCURMTH
 
	UPDATE @TBLVARIANCEREPORT SET VARIANCE_M =CASE WHEN PREV_MTD<>0 AND MTD<>0  THEN ((MTD -PREV_MTD)/PREV_MTD)*100 ELSE 0 END
	,VARIANCE_T =CASE WHEN PREV_YTD<>0 AND YTD<>0 THEN  ((YTD-PREV_YTD)/PREV_YTD)*100 ELSE 0 END
	
	SELECT DEPT_ID,DEPT_NAME, C.MONTH ,
	        ISNULL(CONVERT(NUMERIC(12,2),C.MTD/@NDIVISION_MTD_AMOUNT),0) AS MTD,
	        ISNULL(CONVERT(NUMERIC(12,2),C.PREV_MTD/@NDIVISION_MTD_AMOUNT ),0) AS PREV_MTD,VARIANCE_M,
	        ISNULL(CONVERT(NUMERIC(12,2),C.YTD/@NDIVISION_YTD_AMOUNT),0) AS YTD ,
	       ISNULL(CONVERT(NUMERIC(12,2),C.PREV_YTD/@NDIVISION_YTD_AMOUNT ),0) AS PREV_YTD,VARIANCE_T  
	FROM @TBLVARIANCEREPORT C
	ORDER BY MONTHNUMBER
GOTO END_PROC

END


END	
 

END
END



END_PROC:
END
--END OF PROCEDURE SP_SALE_VARIANCE_REPORT
