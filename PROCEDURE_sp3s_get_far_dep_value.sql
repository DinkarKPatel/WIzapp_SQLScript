CREATE PROCEDURE SP3S_GET_FAR_DEP_VALUE 
AS
BEGIN
	DECLARE @DPURCHASEDT DATETIME,@NDEP_RATE NUMERIC(6,2),@NYEARSOLD INT,@CFINYEAR VARCHAR(5),
	@DPURFINYEARTODT DATETIME,@NLOOPCNT NUMERIC(2,0),@NMONTHS INT,@DFIRSTFINYEARTODT DATETIME,
	@NTARGETDEP_RATE NUMERIC(6,2),@NORGDEPVALUE NUMERIC(14,2),@BFLAG BIT,@DFROMDT DATETIME,
	@DTODT DATETIME,@DCURFINYEARTODT DATETIME,@CPRODUCTCODE VARCHAR(50),@NBASEVALUE NUMERIC(14,2),
	@NDEPVALUE NUMERIC(14,2),@CSTEP VARCHAR(5),@CERRORMSG VARCHAR(1000)
	
BEGIN TRY
		
	SET @CFINYEAR='01'+DBO.FN_GETFINYEAR(GETDATE())
	SELECT @DFROMDT=DBO.FN_GETFINYEARDATE(@CFINYEAR,1),@DTODT=DBO.FN_GETFINYEARDATE(@CFINYEAR,2)
	
	SET @CSTEP='10'
	TRUNCATE TABLE FAR_DEPCN_VALUE
		
	IF OBJECT_ID('TEMPDB..#TMPFRBARCODES','U') IS NOT NULL
		DROP TABLE #TMPFRBARCODES
	
	SET @CSTEP='20'
	SELECT PRODUCT_CODE,CONVERT(NUMERIC(10,2),0) AS BASE_VALUE INTO #TMPFRBARCODES FROM SKU A (NOLOCK) 
	JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE=B.ARTICLE_CODE
	JOIN SECTIOND C (NOLOCK) ON C.SUB_SECTION_CODE=B.SUB_SECTION_CODE
	JOIN SECTIONM D (NOLOCK) ON D.SECTION_CODE=C.SECTION_CODE
	WHERE ISNULL(D.ITEM_TYPE,0)=3
	
	
		
	SET @CSTEP='30'
	UPDATE A SET BASE_VALUE=
	( SKU.PURCHASE_PRICE      
     + (CASE WHEN ISNULL(POST_TAX_SEPARATELY,0)=0 AND ISNULL(SKU.FORM_ID,'0000000') NOT IN ('0000000','')
	     THEN ISNULL(SKU_OH.TAX_AMOUNT,0) ELSE 0 END)
     - ISNULL(SKU_OH.DISCOUNT_AMOUNT,0)       
     + ISNULL(SKU_OH.VALUE_ADD,0)
     + ISNULL(SKU_OH.EXCISE_DUTY_AMOUNT,0))
    FROM  #TMPFRBARCODES A
    JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
    JOIN SKU_OH (NOLOCK) ON SKU_OH.PRODUCT_CODE=SKU.PRODUCT_CODE
    JOIN FORM (NOLOCK) ON FORM.FORM_ID=SKU.FORM_ID
    	
	SET @BFLAG=0
	
	WHILE @BFLAG=0
	BEGIN
		
		SET @CSTEP='40'
		SELECT TOP 1 @CPRODUCTCODE=PRODUCT_CODE,@NBASEVALUE=BASE_VALUE FROM #TMPFRBARCODES
			
		SELECT @DPURCHASEDT=RECEIPT_DT FROM SKU WHERE PRODUCT_CODE=@CPRODUCTCODE		

		SET @CFINYEAR='01'+DBO.FN_GETFINYEAR(@DPURCHASEDT)
		SET @DPURFINYEARTODT=DBO.FN_GETFINYEARDATE(@CFINYEAR,2)		
		
		SET @DCURFINYEARTODT=@DPURFINYEARTODT
				
		---- CALCULATE DEPRECIATION VALUE AS PER IT ACT
		
		SET @CSTEP='50'
		SELECT @NDEP_RATE=ISNULL(FAR_DEPRECIATION_RATE_IT_ACT,0) FROM  SKU A (NOLOCK)
		JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE=B.ARTICLE_CODE
		WHERE A.PRODUCT_CODE=@CPRODUCTCODE
		
			
		IF @DPURCHASEDT BETWEEN @DFROMDT AND @DTODT
		BEGIN
			SET @CSTEP='60'
			IF DATEDIFF(DD,@DPURCHASEDT,@DTODT)<180
				SET @NDEP_RATE=@NDEP_RATE/2
			
			SET @NDEPVALUE=@NBASEVALUE*@NDEP_RATE/100

			INSERT FAR_DEPCN_VALUE	( PRODUCT_CODE, XN_DT, BASE_VALUE,DEPCN_VALUE,DEPCN_PCT, MODE )  
				SELECT @CPRODUCTCODE AS PRODUCT_CODE,@DCURFINYEARTODT AS XN_DT, @NBASEVALUE AS BASE_VALUE,
				@NDEPVALUE AS DEPCN_VALUE,@NDEP_RATE AS DEPCN_PCT,1 AS MODE
			
		END
		ELSE
		IF @DPURCHASEDT<@DFROMDT
		BEGIN
			SET @CSTEP='70'					
			SET @NYEARSOLD=DATEDIFF(YY,@DPURFINYEARTODT,@DTODT)+1
			
								
			SET @NLOOPCNT=1
			
			SET @NDEPVALUE=@NBASEVALUE
			
			WHILE @NLOOPCNT<=@NYEARSOLD
			BEGIN
				SET @CSTEP='80'		
				IF @NLOOPCNT=1
				BEGIN
					SET @CSTEP='85'
					SET @NORGDEPVALUE=@NBASEVALUE
					
					
					SET @NTARGETDEP_RATE=@NDEP_RATE
					
					IF DATEDIFF(DD,@DPURCHASEDT,@DCURFINYEARTODT)<180
						SET @NTARGETDEP_RATE=@NDEP_RATE/2
				END
				ELSE
				BEGIN
					SET @CSTEP='90'
					SET @DCURFINYEARTODT=DATEADD(YY,@NLOOPCNT-1,@DPURFINYEARTODT)
					SET @NTARGETDEP_RATE=@NDEP_RATE
				END		
				SET @NDEPVALUE=@NORGDEPVALUE*@NTARGETDEP_RATE/100	
				
				SET @CSTEP='95'
				INSERT FAR_DEPCN_VALUE	( PRODUCT_CODE, XN_DT, BASE_VALUE,DEPCN_VALUE,DEPCN_PCT, MODE )  
				SELECT @CPRODUCTCODE AS PRODUCT_CODE,@DCURFINYEARTODT AS XN_DT,@NBASEVALUE AS BASE_VALUE,
				@NDEPVALUE AS DEPCN_VALUE,@NTARGETDEP_RATE AS DEPCN_PCT,1 AS MODE

				SET @NORGDEPVALUE=@NORGDEPVALUE-@NDEPVALUE
				SET @NLOOPCNT=@NLOOPCNT+1
			END
		END
		
		SET @CSTEP='100'
		---- CALCULATE DEPRECIATION VALUE AS PER COMPANIES ACT		
		SELECT @NDEP_RATE=ISNULL(FAR_DEPRECIATION_RATE_COMPANY_ACT,0) FROM  SKU A (NOLOCK)
		JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE=B.ARTICLE_CODE
		WHERE A.PRODUCT_CODE=@CPRODUCTCODE
		
		SET @NORGDEPVALUE=@NBASEVALUE	
		IF @DPURCHASEDT BETWEEN @DFROMDT AND @DTODT
		BEGIN
			SET @CSTEP='105'
			SET @NDEPVALUE=@NORGDEPVALUE*@NDEP_RATE/100
			
			SET @NMONTHS=DATEDIFF(MM,@DPURCHASEDT,@DTODT)+1
			
			SET @NDEPVALUE=@NDEPVALUE*@NMONTHS/12
			
			SET @DCURFINYEARTODT=@DPURFINYEARTODT
			
			SET @CSTEP='110'
			INSERT FAR_DEPCN_VALUE	( PRODUCT_CODE, XN_DT,BASE_VALUE,DEPCN_VALUE,DEPCN_PCT, MODE )  
			SELECT @CPRODUCTCODE AS PRODUCT_CODE,@DCURFINYEARTODT AS XN_DT,@NBASEVALUE AS BASE_VALUE,
			@NDEPVALUE AS DEPCN_VALUE,@NDEP_RATE AS DEPCN_PCT,2 AS MODE				
		END
		ELSE
		IF @DPURCHASEDT<@DFROMDT
		BEGIN
		
			SET @CSTEP='120'
			
			
			SET @NYEARSOLD=DATEDIFF(YY,@DPURFINYEARTODT,@DTODT)+1
							
			--SELECT @NYEARSOLD
			SET @NLOOPCNT=1
			
			SET @CSTEP='130'
			SET @NDEPVALUE=@NORGDEPVALUE
				
			WHILE @NLOOPCNT<=@NYEARSOLD
			BEGIN
				SET @CSTEP='140'
				SET @NDEPVALUE=@NORGDEPVALUE*@NDEP_RATE/100	
				

				IF @NLOOPCNT=1
				BEGIN
					SET @CSTEP='150'
					SET @DCURFINYEARTODT=@DPURFINYEARTODT
					 
					SET @NMONTHS=DATEDIFF(MM,@DPURCHASEDT,@DPURFINYEARTODT)+1
					
					SET @NDEPVALUE=@NDEPVALUE*@NMONTHS/12
					
				END
				ELSE
				BEGIN
					SET @CSTEP='160'
					SET @DCURFINYEARTODT=DATEADD(YY,@NLOOPCNT-1,@DPURFINYEARTODT)
				END
				
				SET @CSTEP='170'
				INSERT FAR_DEPCN_VALUE	( PRODUCT_CODE, XN_DT,BASE_VALUE, DEPCN_VALUE,DEPCN_PCT, MODE )  
				SELECT @CPRODUCTCODE AS PRODUCT_CODE,@DCURFINYEARTODT AS XN_DT,@NBASEVALUE AS BASE_VALUE,
				@NDEPVALUE AS DEPCN_VALUE,@NDEP_RATE AS DEPCN_PCT,2 AS MODE	
				
				SET @NORGDEPVALUE=@NORGDEPVALUE-@NDEPVALUE
				--SELECT @NDEPVALUE,@NLOOPCNT AS NLOOPCNT
				SET @NLOOPCNT=@NLOOPCNT+1
			END
		END
		
		DELETE FROM #TMPFRBARCODES	WHERE PRODUCT_CODE=@CPRODUCTCODE
		
		IF NOT EXISTS (SELECT TOP 1 PRODUCT_CODE FROM #TMPFRBARCODES)
			BREAK
	END
	
	GOTO END_PROC
END TRY	

BEGIN CATCH
	SET @CERRORMSG='ERROR IN PROCEDURE SP3S_GET_FAR_DEP_VALUE AT STEP#'+@CSTEP+' '+ERROR_MESSAGE()
	GOTO END_PROC 
END CATCH

END_PROC:
	SELECT ISNULL(@CERRORMSG,'') AS ERRMSG
	--RETURN @NDEPVALUE
END
