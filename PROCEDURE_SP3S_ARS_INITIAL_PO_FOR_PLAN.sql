CREATE PROCEDURE SP3S_ARS_INITIAL_PO_FOR_PLAN(@Plan VARCHAR(100),@GROUPED INT=1,@TAB VARCHAR(1000)='')
AS
BEGIN

--DECLARE @Plan VARCHAR(100)='RECHECK2',@GROUPED INT=1,@TAB VARCHAR(100)='##PLAN_11'

SET NOCOUNT ON
DECLARE @ON VARCHAR(MAX)='',@SQL VARCHAR(MAX),@RF_TABLE VARCHAR(100)='VW_ARS_RF'
,@cRfDbName VARCHAR(100)=DB_NAME()+'.DBO.'
,@STOCK VARCHAR(MAX)

IF OBJECT_ID('TEMPDB..#LOC') IS NOT NULL DROP TABLE #LOC      
CREATE TABLE #LOC (LOC VARCHAR(5))  
  
INSERT #LOC 
--SELECT DISTINCT DEPT_ID FROM ARS_DET (NOLOCK) WHERE ARS_ID IN (SELECT ARS_ID FROM ARS_MST (NOLOCK) WHERE PLAN_NAME=@PLAN)
SELECT DEPT_ID FROM LOCATION WHERE ISNULL(PUR_Loc,0)=1 AND DEPT_ID<>'F1'

SET @STOCK='SELECT SKU.ARTICLE_CODE,SKU.PARA1_CODE,SKU.PARA2_CODE,SKU.PARA3_CODE,SKU.PARA4_CODE,SKU.PARA5_CODE,SKU.PARA6_CODE
,SUM(CASE WHEN RF.XN_MODE=''STOCK'' THEN ISNULL(RF.STOCK_QTY,0)+ISNULL(RF.OPS_QTY,0) ELSE 0 END) RF_QTY
FROM '+@cRfDbName+@RF_TABLE+'(NOLOCK) RF 
JOIN #LOC ON #LOC.LOC=RF.DEPT_ID
JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=RF.PRODUCT_CODE
WHERE RF.XN_MODE=''STOCK''
GROUP BY SKU.ARTICLE_CODE,SKU.PARA1_CODE,SKU.PARA2_CODE,SKU.PARA3_CODE,SKU.PARA4_CODE,SKU.PARA5_CODE,SKU.PARA6_CODE'       
PRINT @STOCK      

SELECT @ON=COALESCE(@ON,'')+CASE 
WHEN STK_LEVEL_PARA_NAME LIKE 'ARTICLE%' THEN CHAR(13)+'AND ARTICLE.ARTICLE_CODE=ARS_DET.ARTICLE_CODE'
WHEN STK_LEVEL_PARA_NAME LIKE 'PARA%' THEN CHAR(13)+'AND '+REPLACE(STK_LEVEL_PARA_NAME,'_NAME','')+'.'+REPLACE(STK_LEVEL_PARA_NAME,'_NAME','_CODE')+'=ARS_DET.'+REPLACE(STK_LEVEL_PARA_NAME,'_NAME','_CODE')
WHEN STK_LEVEL_PARA_NAME LIKE 'SECTION%' THEN CHAR(13)+'AND SECTIONM.SECTION_CODE=ARS_DET.SECTION_CODE'
WHEN STK_LEVEL_PARA_NAME LIKE 'SUB_SECTION%' THEN CHAR(13)+'AND SECTIOND.SUB_SECTION_CODE=ARS_DET.SUB_SECTION_CODE'
WHEN STK_LEVEL_PARA_NAME LIKE 'ATTR%' THEN CHAR(13)+'AND '+LEFT(STK_LEVEL_PARA_NAME,CHARINDEX('_KEY',STK_LEVEL_PARA_NAME)-1)+'_MST.'+REPLACE(STK_LEVEL_PARA_NAME,'NAME','CODE')+'=ARS_DET.'+REPLACE(STK_LEVEL_PARA_NAME,'NAME','CODE')
END
FROM ARS_STOCK_LEVEL_MST (NOLOCK) 
WHERE ARS_ID IN (SELECT TOP 1 ARS_ID FROM ARS_MST (NOLOCK) WHERE PLAN_NAME=@PLAN AND CANCELLED=0)
SET @ON='ON '+LTRIM(RTRIM(SUBSTRING(LTRIM(RTRIM(@ON)),5,4000)))
PRINT @ON 

IF OBJECT_ID('tempdb..#PLAN_PROD') IS NOT NULL DROP TABLE #PLAN_PROD
CREATE TABLE #PLAN_PROD(PLAN_NAME VARCHAR(100),TARGET_DAYS INT,TARGET_DAILY_SALE FLOAT
,SEASON_FROM DATETIME,SEASON_TILL DATETIME
,ARTICLE_CODE VARCHAR(10),PARA1_CODE VARCHAR(10),PARA2_CODE VARCHAR(10),PARA3_CODE VARCHAR(10),PARA4_CODE VARCHAR(10),PARA5_CODE VARCHAR(10),PARA6_CODE VARCHAR(10)
,SECTION_CODE VARCHAR(10),SUB_SECTION_CODE VARCHAR(10)
,ATTR1_KEY_CODE VARCHAR(20),ATTR2_KEY_CODE VARCHAR(20),ATTR3_KEY_CODE VARCHAR(20),ATTR4_KEY_CODE VARCHAR(20),ATTR5_KEY_CODE VARCHAR(20)
,ATTR6_KEY_CODE VARCHAR(20),ATTR7_KEY_CODE VARCHAR(20),ATTR8_KEY_CODE VARCHAR(20),ATTR9_KEY_CODE VARCHAR(20),ATTR10_KEY_CODE VARCHAR(20)
,ATTR11_KEY_CODE VARCHAR(20),ATTR12_KEY_CODE VARCHAR(20),ATTR13_KEY_CODE VARCHAR(20),ATTR14_KEY_CODE VARCHAR(20),ATTR15_KEY_CODE VARCHAR(20)
,ATTR16_KEY_CODE VARCHAR(20),ATTR17_KEY_CODE VARCHAR(20),ATTR18_KEY_CODE VARCHAR(20),ATTR19_KEY_CODE VARCHAR(20),ATTR20_KEY_CODE VARCHAR(20)
,ATTR21_KEY_CODE VARCHAR(20),ATTR22_KEY_CODE VARCHAR(20),ATTR23_KEY_CODE VARCHAR(20),ATTR24_KEY_CODE VARCHAR(20),ATTR25_KEY_CODE VARCHAR(20)
,REQ_STOCK FLOAT,CURR_STOCK FLOAT,PO_TRANSIT_STOCK FLOAT,PO_STOCK_REQUIRED FLOAT
)
SET @SQL='SELECT DISTINCT ARS_MST.PLAN_NAME,ARS_DET.TARGET_DAYS,TARGET_DAILY_SALE
,DATEADD(YY,-0,DBO.GET_SEASON_DT(S.SEASON_ID,''FROM''))
,DATEADD(YY,-0,DBO.GET_SEASON_DT(S.SEASON_ID,''TILL''))
,ARS_DET.ARTICLE_CODE,ARS_DET.PARA1_CODE,ARS_DET.PARA2_CODE,ARS_DET.PARA3_CODE,ARS_DET.PARA4_CODE,ARS_DET.PARA5_CODE,ARS_DET.PARA6_CODE
,ARS_DET.SECTION_CODE,ARS_DET.SUB_SECTION_CODE
,ARS_DET.ATTR1_KEY_CODE,ARS_DET.ATTR2_KEY_CODE,ARS_DET.ATTR3_KEY_CODE,ARS_DET.ATTR4_KEY_CODE,ARS_DET.ATTR5_KEY_CODE
,ARS_DET.ATTR6_KEY_CODE,ARS_DET.ATTR7_KEY_CODE,ARS_DET.ATTR8_KEY_CODE,ARS_DET.ATTR9_KEY_CODE,ARS_DET.ATTR10_KEY_CODE
,ARS_DET.ATTR11_KEY_CODE,ARS_DET.ATTR12_KEY_CODE,ARS_DET.ATTR13_KEY_CODE,ARS_DET.ATTR14_KEY_CODE,ARS_DET.ATTR15_KEY_CODE
,ARS_DET.ATTR16_KEY_CODE,ARS_DET.ATTR17_KEY_CODE,ARS_DET.ATTR18_KEY_CODE,ARS_DET.ATTR19_KEY_CODE,ARS_DET.ATTR20_KEY_CODE
,ARS_DET.ATTR21_KEY_CODE,ARS_DET.ATTR22_KEY_CODE,ARS_DET.ATTR23_KEY_CODE,ARS_DET.ATTR24_KEY_CODE,ARS_DET.ATTR25_KEY_CODE
,0,0,0,0
FROM ARS_MST (NOLOCK) 
JOIN VW_ARS_DET AS ARS_DET (NOLOCK) ON ARS_MST.ARS_ID=ARS_DET.ARS_ID
JOIN SEASON_MST S (NOLOCK) ON S.SEASON_ID=ARS_MST.SEASON_ID
JOIN ARTICLE (NOLOCK) 
JOIN SKU (NOLOCK) ON SKU.ARTICLE_CODE=ARTICLE.ARTICLE_CODE
JOIN SECTIOND (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE
JOIN SECTIONM (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE
JOIN ARTICLE_FIX_ATTR AF (NOLOCK) ON ARTICLE.ARTICLE_CODE=AF.ARTICLE_CODE
JOIN ATTR1_MST (NOLOCK) ON ATTR1_MST.ATTR1_KEY_CODE=AF.ATTR1_KEY_CODE
JOIN ATTR2_MST (NOLOCK) ON ATTR2_MST.ATTR2_KEY_CODE=AF.ATTR2_KEY_CODE      
JOIN ATTR3_MST (NOLOCK) ON ATTR3_MST.ATTR3_KEY_CODE=AF.ATTR3_KEY_CODE      
JOIN ATTR4_MST (NOLOCK) ON ATTR4_MST.ATTR4_KEY_CODE=AF.ATTR4_KEY_CODE      
JOIN ATTR5_MST (NOLOCK) ON ATTR5_MST.ATTR5_KEY_CODE=AF.ATTR5_KEY_CODE      
JOIN ATTR6_MST (NOLOCK) ON ATTR6_MST.ATTR6_KEY_CODE=AF.ATTR6_KEY_CODE      
JOIN ATTR7_MST (NOLOCK) ON ATTR7_MST.ATTR7_KEY_CODE=AF.ATTR7_KEY_CODE      
JOIN ATTR8_MST (NOLOCK) ON ATTR8_MST.ATTR8_KEY_CODE=AF.ATTR8_KEY_CODE      
JOIN ATTR9_MST (NOLOCK) ON ATTR9_MST.ATTR9_KEY_CODE=AF.ATTR9_KEY_CODE      
JOIN ATTR10_MST (NOLOCK) ON ATTR10_MST.ATTR10_KEY_CODE=AF.ATTR10_KEY_CODE      
JOIN ATTR11_MST (NOLOCK) ON ATTR11_MST.ATTR11_KEY_CODE=AF.ATTR11_KEY_CODE      
JOIN ATTR12_MST (NOLOCK) ON ATTR12_MST.ATTR12_KEY_CODE=AF.ATTR12_KEY_CODE      
JOIN ATTR13_MST (NOLOCK) ON ATTR13_MST.ATTR13_KEY_CODE=AF.ATTR13_KEY_CODE      
JOIN ATTR14_MST (NOLOCK) ON ATTR14_MST.ATTR14_KEY_CODE=AF.ATTR14_KEY_CODE      
JOIN ATTR15_MST (NOLOCK) ON ATTR15_MST.ATTR15_KEY_CODE=AF.ATTR15_KEY_CODE      
JOIN ATTR16_MST (NOLOCK) ON ATTR16_MST.ATTR16_KEY_CODE=AF.ATTR16_KEY_CODE      
JOIN ATTR17_MST (NOLOCK) ON ATTR17_MST.ATTR17_KEY_CODE=AF.ATTR17_KEY_CODE      
JOIN ATTR18_MST (NOLOCK) ON ATTR18_MST.ATTR18_KEY_CODE=AF.ATTR18_KEY_CODE      
JOIN ATTR19_MST (NOLOCK) ON ATTR19_MST.ATTR19_KEY_CODE=AF.ATTR19_KEY_CODE      
JOIN ATTR20_MST (NOLOCK) ON ATTR20_MST.ATTR20_KEY_CODE=AF.ATTR20_KEY_CODE      
JOIN ATTR21_MST (NOLOCK) ON ATTR21_MST.ATTR21_KEY_CODE=AF.ATTR21_KEY_CODE      
JOIN ATTR22_MST (NOLOCK) ON ATTR22_MST.ATTR22_KEY_CODE=AF.ATTR22_KEY_CODE      
JOIN ATTR23_MST (NOLOCK) ON ATTR23_MST.ATTR23_KEY_CODE=AF.ATTR23_KEY_CODE      
JOIN ATTR24_MST (NOLOCK) ON ATTR24_MST.ATTR24_KEY_CODE=AF.ATTR24_KEY_CODE      
JOIN ATTR25_MST (NOLOCK) ON ATTR25_MST.ATTR25_KEY_CODE=AF.ATTR25_KEY_CODE'
+CASE WHEN LEN(@ON)>3 THEN CHAR(13)+REPLACE(REPLACE(@ON,'PARA1.','SKU.'),'PARA2.','SKU.') ELSE CHAR(13)+'ON 1=2' END
+CHAR(13)+'WHERE ARS_MST.CANCELLED=0 AND ARS_MST.PLAN_NAME='''+@PLAN+''''
PRINT '93 '+@SQL

INSERT #PLAN_PROD EXEC(@SQL)

IF EXISTS(SELECT TOP 1 * FROM ARS_MST WHERE PLAN_NAME=@PLAN AND CONVERT(DATE,GETDATE()) BETWEEN FROM_DT AND TO_DT) AND 1=2
   UPDATE #PLAN_PROD SET SEASON_FROM=DATEADD(YY,1,SEASON_FROM),SEASON_TILL=DATEADD(YY,1,SEASON_TILL)
   
UPDATE #PLAN_PROD SET SEASON_FROM=CONVERT(DATE,SEASON_FROM),SEASON_TILL=CONVERT(DATE,SEASON_TILL)
UPDATE #PLAN_PROD SET REQ_STOCK=TARGET_DAILY_SALE*(DATEDIFF(DD,SEASON_FROM,SEASON_TILL)+1)
PRINT '--'+@STOCK

--SET @SQL='UPDATE P SET CURR_STOCK=('+REPLACE(@STOCK,'RF.ARTICLE_CODE','ARTICLE.ARTICLE_CODE')+') FROM #PLAN_PROD P'
SET @SQL='UPDATE P SET P.CURR_STOCK=RF.RF_QTY
FROM('+REPLACE(@STOCK,'RF.ARTICLE_CODE','ARTICLE.ARTICLE_CODE')+')RF 
JOIN #PLAN_PROD P 
ON RF.ARTICLE_CODE=P.ARTICLE_CODE AND RF.PARA1_CODE=P.PARA1_CODE AND RF.PARA2_CODE=P.PARA2_CODE 
AND RF.PARA3_CODE=P.PARA3_CODE AND RF.PARA4_CODE=P.PARA4_CODE AND RF.PARA5_CODE=P.PARA5_CODE 
AND RF.PARA6_CODE=P.PARA6_CODE'
PRINT '--SET STOCK '+CHAR(13)+@SQL
EXEC(@SQL) 

IF OBJECT_ID('tempdb..#PO_TRANSIT') IS NOT NULL DROP TABLE #PO_TRANSIT
IF OBJECT_ID('tempdb..##PLAN_PROD') IS NOT NULL DROP TABLE ##PLAN_PROD
IF OBJECT_ID('tempdb..##PO_TRANSIT') IS NOT NULL DROP TABLE ##PO_TRANSIT
SELECT * INTO ##PLAN_PROD FROM #PLAN_PROD 

/*
SELECT PO.ARTICLE_CODE,PO.PARA1_CODE,PO.PARA2_CODE,PO.PARA3_CODE,PO.PARA4_CODE,PO.PARA5_CODE,PO.PARA6_CODE
,SUM(PO_QTY-ISNULL(RECD.RECD_QUANTITY,0))PENDING_QUANTITY
INTO #PO_TRANSIT
FROM 
(SELECT POD.ARTICLE_CODE,POD.PARA1_CODE,POD.PARA2_CODE,POD.PARA3_CODE,POD.PARA4_CODE,POD.PARA5_CODE,POD.PARA6_CODE
,POD.ROW_ID,SUM(POD.QUANTITY)PO_QTY
 FROM POM01106 POM (NOLOCK) JOIN POD01106 POD (NOLOCK) ON POM.PO_ID=POD.PO_ID 
 JOIN #PLAN_PROD P1 ON POD.ARTICLE_CODE=P1.ARTICLE_CODE AND POD.PARA1_CODE=P1.PARA1_CODE AND POD.PARA2_CODE=P1.PARA2_CODE AND POD.PARA3_CODE=P1.PARA3_CODE AND POD.PARA4_CODE=P1.PARA4_CODE AND POD.PARA5_CODE=P1.PARA5_CODE AND POD.PARA6_CODE=P1.PARA6_CODE
 WHERE POM.CANCELLED=0
 GROUP BY POD.ARTICLE_CODE,POD.PARA1_CODE,POD.PARA2_CODE,POD.PARA3_CODE,POD.PARA4_CODE,POD.PARA5_CODE,POD.PARA6_CODE,POD.ROW_ID
)PO
LEFT JOIN
(SELECT PID.PO_ROW_ID,SUM(QUANTITY)RECD_QUANTITY
 FROM PIM01106 PIM (NOLOCK) JOIN PID01106 PID (NOLOCK) ON PIM.MRR_ID=PID.MRR_ID 
 JOIN #PLAN_PROD P1 ON PID.ARTICLE_CODE=P1.ARTICLE_CODE AND PID.PARA1_CODE=P1.PARA1_CODE AND PID.PARA2_CODE=P1.PARA2_CODE 
 AND PID.PARA3_CODE=P1.PARA3_CODE AND PID.PARA4_CODE=P1.PARA4_CODE AND PID.PARA5_CODE=P1.PARA5_CODE AND PID.PARA6_CODE=P1.PARA6_CODE
 WHERE PIM.CANCELLED=0 
 GROUP BY PID.PO_ROW_ID
)RECD ON PO.ROW_ID=RECD.PO_ROW_ID
GROUP BY PO.ARTICLE_CODE,PO.PARA1_CODE,PO.PARA2_CODE,PO.PARA3_CODE,PO.PARA4_CODE,PO.PARA5_CODE,PO.PARA6_CODE
*/
SELECT POD.ARTICLE_CODE,POD.PARA1_CODE,POD.PARA2_CODE,POD.PARA3_CODE,POD.PARA4_CODE,POD.PARA5_CODE,POD.PARA6_CODE
,SUM(POD.QUANTITY-ISNULL(POD.PI_QTY,0))PENDING_QUANTITY
INTO #PO_TRANSIT 
FROM POM01106 POM (NOLOCK) JOIN POD01106 POD (NOLOCK) ON POM.PO_ID=POD.PO_ID 
JOIN ##PLAN_PROD P1 ON POD.ARTICLE_CODE=P1.ARTICLE_CODE AND POD.PARA1_CODE=P1.PARA1_CODE AND POD.PARA2_CODE=P1.PARA2_CODE AND POD.PARA3_CODE=P1.PARA3_CODE AND POD.PARA4_CODE=P1.PARA4_CODE AND POD.PARA5_CODE=P1.PARA5_CODE AND POD.PARA6_CODE=P1.PARA6_CODE
WHERE pom.cancelled=0 and isnull(pom.Short_close,0)=0
and POD.QUANTITY-ISNULL(POD.PI_QTY,0)>0
GROUP BY POD.ARTICLE_CODE,POD.PARA1_CODE,POD.PARA2_CODE,POD.PARA3_CODE,POD.PARA4_CODE,POD.PARA5_CODE,POD.PARA6_CODE

SELECT * INTO ##PO_TRANSIT FROM #PO_TRANSIT


UPDATE P1 SET PO_TRANSIT_STOCK=PENDING_QUANTITY
FROM #PLAN_PROD P1
JOIN #PO_TRANSIT OH ON OH.ARTICLE_CODE=P1.ARTICLE_CODE AND OH.PARA1_CODE=P1.PARA1_CODE AND OH.PARA2_CODE=P1.PARA2_CODE 
AND OH.PARA3_CODE=P1.PARA3_CODE AND OH.PARA4_CODE=P1.PARA4_CODE AND OH.PARA5_CODE=P1.PARA5_CODE AND OH.PARA6_CODE=P1.PARA6_CODE

UPDATE #PLAN_PROD SET CURR_STOCK=ISNULL(CURR_STOCK,0)
,PO_STOCK_REQUIRED=ISNULL(REQ_STOCK,0)-ISNULL(CURR_STOCK,0)-ISNULL(PO_TRANSIT_STOCK,0)
,PO_TRANSIT_STOCK=ISNULL(PO_TRANSIT_STOCK,0)

UPDATE #PLAN_PROD SET REQ_STOCK=CEILING(REQ_STOCK)
,CURR_STOCK=CEILING(CURR_STOCK)
,PO_TRANSIT_STOCK=CEILING(PO_TRANSIT_STOCK)
,PO_STOCK_REQUIRED=CEILING(PO_STOCK_REQUIRED)

DECLARE @MYSQL VARCHAR(MAX)

SET @MYSQL='INSERT '+@TAB+' (PLAN_NAME,REQ_STOCK,CURR_STOCK,PO_TRANSIT_STOCK,PO_STOCK_REQUIRED)
	SELECT PLAN_NAME,SUM(REQ_STOCK),SUM(CURR_STOCK),SUM(PO_TRANSIT_STOCK),SUM(PO_STOCK_REQUIRED)
	FROM #PLAN_PROD
	WHERE PO_STOCK_REQUIRED>0
	GROUP BY PLAN_NAME'

IF @GROUPED=1
   EXEC(@MYSQL)
ELSE IF @GROUPED=0
   BEGIN
		;WITH CTE AS 
		(SELECT S.ARTICLE_CODE,M.AC_CODE,MRR_DT
		,R=ROW_NUMBER()OVER(PARTITION BY S.ARTICLE_CODE ORDER BY MRR_DT DESC)
		 FROM PIM01106 M (NOLOCK) JOIN PID01106 D (NOLOCK) ON M.MRR_ID=D.MRR_ID
		 JOIN SKU S (NOLOCK) ON S.PRODUCT_CODE=D.PRODUCT_CODE
		 JOIN #PLAN_PROD P ON P.ARTICLE_CODE=S.ARTICLE_CODE 
		 WHERE M.CANCELLED=0 AND M.INV_MODE=1
		 )
		
		SELECT PLAN_NAME,PO_STOCK_REQUIRED PO_QTY
		,ARTICLE_NO,A.ARTICLE_NAME,PARA1_NAME ,PARA2_NAME ,PARA3_NAME ,PARA4_NAME ,PARA5_NAME ,PARA6_NAME 
		,SECTION_NAME ,SUB_SECTION_NAME 
		,ATTR1_KEY_NAME ,ATTR2_KEY_NAME ,ATTR3_KEY_NAME ,ATTR4_KEY_NAME ,ATTR5_KEY_NAME 
		,ATTR6_KEY_NAME ,ATTR7_KEY_NAME ,ATTR8_KEY_NAME ,ATTR9_KEY_NAME ,ATTR10_KEY_NAME 
		,ATTR11_KEY_NAME ,ATTR12_KEY_NAME ,ATTR13_KEY_NAME ,ATTR14_KEY_NAME ,ATTR15_KEY_NAME 
		,ATTR16_KEY_NAME ,ATTR17_KEY_NAME ,ATTR18_KEY_NAME ,ATTR19_KEY_NAME ,ATTR20_KEY_NAME 
		,ATTR21_KEY_NAME ,ATTR22_KEY_NAME ,ATTR23_KEY_NAME ,ATTR24_KEY_NAME ,ATTR25_KEY_NAME 
		,LMV.AC_NAME,LMV.AC_CODE,LEFT(NEWID(),40)ROW_ID
		,REPLACE(CONVERT(VARCHAR,DATEADD(DD,15,GETDATE()),105),'.','-')DELIVERY_DT
		FROM #PLAN_PROD PP
		JOIN CTE ON CTE.ARTICLE_CODE=PP.ARTICLE_CODE AND CTE.R=1
		JOIN LMV01106 LMV (NOLOCK) ON LMV.AC_CODE=CTE.AC_CODE
		LEFT JOIN ARTICLE A (NOLOCK) ON A.ARTICLE_CODE=PP.ARTICLE_CODE
		LEFT JOIN SECTIONM SM (NOLOCK) ON SM.SECTION_CODE=PP.SECTION_CODE
		LEFT JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=PP.SUB_SECTION_CODE
		LEFT JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE=PP.PARA1_CODE
		LEFT JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE=PP.PARA2_CODE
		LEFT JOIN PARA3 P3 (NOLOCK) ON P3.PARA3_CODE=PP.PARA3_CODE
		LEFT JOIN PARA4 P4 (NOLOCK) ON P4.PARA4_CODE=PP.PARA4_CODE
		LEFT JOIN PARA5 P5 (NOLOCK) ON P5.PARA5_CODE=PP.PARA5_CODE
		LEFT JOIN PARA6 P6 (NOLOCK) ON P6.PARA6_CODE=PP.PARA6_CODE
		LEFT JOIN ATTR1_MST A1 (NOLOCK) ON A1.ATTR1_KEY_CODE=PP.ATTR1_KEY_CODE
		LEFT JOIN ATTR2_MST A2 (NOLOCK) ON A2.ATTR2_KEY_CODE=PP.ATTR2_KEY_CODE
		LEFT JOIN ATTR3_MST A3 (NOLOCK) ON A3.ATTR3_KEY_CODE=PP.ATTR3_KEY_CODE
		LEFT JOIN ATTR4_MST A4 (NOLOCK) ON A4.ATTR4_KEY_CODE=PP.ATTR4_KEY_CODE
		LEFT JOIN ATTR5_MST A5 (NOLOCK) ON A5.ATTR5_KEY_CODE=PP.ATTR5_KEY_CODE
		LEFT JOIN ATTR6_MST A6 (NOLOCK) ON A6.ATTR6_KEY_CODE=PP.ATTR6_KEY_CODE
		LEFT JOIN ATTR7_MST A7 (NOLOCK) ON A7.ATTR7_KEY_CODE=PP.ATTR7_KEY_CODE
		LEFT JOIN ATTR8_MST A8 (NOLOCK) ON A8.ATTR8_KEY_CODE=PP.ATTR8_KEY_CODE
		LEFT JOIN ATTR9_MST A9 (NOLOCK) ON A9.ATTR9_KEY_CODE=PP.ATTR9_KEY_CODE
		LEFT JOIN ATTR10_MST A10 (NOLOCK) ON A10.ATTR10_KEY_CODE=PP.ATTR10_KEY_CODE
		LEFT JOIN ATTR11_MST A11 (NOLOCK) ON A11.ATTR11_KEY_CODE=PP.ATTR11_KEY_CODE
		LEFT JOIN ATTR12_MST A12 (NOLOCK) ON A12.ATTR12_KEY_CODE=PP.ATTR12_KEY_CODE
		LEFT JOIN ATTR13_MST A13 (NOLOCK) ON A13.ATTR13_KEY_CODE=PP.ATTR13_KEY_CODE
		LEFT JOIN ATTR14_MST A14 (NOLOCK) ON A14.ATTR14_KEY_CODE=PP.ATTR14_KEY_CODE
		LEFT JOIN ATTR15_MST A15 (NOLOCK) ON A15.ATTR15_KEY_CODE=PP.ATTR15_KEY_CODE
		LEFT JOIN ATTR16_MST A16 (NOLOCK) ON A16.ATTR16_KEY_CODE=PP.ATTR16_KEY_CODE
		LEFT JOIN ATTR17_MST A17 (NOLOCK) ON A17.ATTR17_KEY_CODE=PP.ATTR17_KEY_CODE
		LEFT JOIN ATTR18_MST A18 (NOLOCK) ON A18.ATTR18_KEY_CODE=PP.ATTR18_KEY_CODE
		LEFT JOIN ATTR19_MST A19 (NOLOCK) ON A19.ATTR19_KEY_CODE=PP.ATTR19_KEY_CODE
		LEFT JOIN ATTR20_MST A20 (NOLOCK) ON A20.ATTR20_KEY_CODE=PP.ATTR20_KEY_CODE
		LEFT JOIN ATTR21_MST A21 (NOLOCK) ON A21.ATTR21_KEY_CODE=PP.ATTR21_KEY_CODE
		LEFT JOIN ATTR22_MST A22 (NOLOCK) ON A22.ATTR22_KEY_CODE=PP.ATTR22_KEY_CODE
		LEFT JOIN ATTR23_MST A23 (NOLOCK) ON A23.ATTR23_KEY_CODE=PP.ATTR23_KEY_CODE
		LEFT JOIN ATTR24_MST A24 (NOLOCK) ON A24.ATTR24_KEY_CODE=PP.ATTR24_KEY_CODE
		LEFT JOIN ATTR25_MST A25 (NOLOCK) ON A25.ATTR25_KEY_CODE=PP.ATTR25_KEY_CODE
		WHERE PO_STOCK_REQUIRED>0
		ORDER BY ARTICLE_NO,PARA1_NAME ,PARA2_NAME,LMV.AC_NAME
	END

SET NOCOUNT OFF
END