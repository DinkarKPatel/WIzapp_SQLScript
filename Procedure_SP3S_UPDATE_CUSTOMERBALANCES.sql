
create PROCEDURE SP3S_UPDATE_CUSTOMERBALANCES
(
  @cMEMO_id varchar(50)='',
  @CXNTYPE VARCHAR(10)='',
  @CERRORMSG VARCHAR(max) OUTPUT ,
  @NREVERTFLAG int=0
)
AS
BEGIN
SET NOCOUNT ON
--9999988891
        DECLARE @CSTEP VARCHAR(20)
        SET @CERRORMSG=''

 BEGIN TRY 
         
	
	


		IF OBJECT_ID('tempdb..#CUS_BAL') IS NOT NULL DROP TABLE #CUS_BAL
		CREATE TABLE #CUS_BAL(CUS_CODE VARCHAR(50),BAL numeric(14,4))

	
		 set @cMEMO_id=isnull(@cMEMO_id,'')

		SET @CSTEP='00'

   
IF @CXNTYPE='SLS'
   GOTO  LBLSLS
ELSE IF @CXNTYPE='ARC'
   GOTO  LBLARC
ELSE IF @CXNTYPE='HBD'
   GOTO  HBD
ELSE IF @CXNTYPE='WSLord'
   GOTO  LBLORDERAMT

		PRINT '***LBLOPS:****'

		   INSERT INTO #CUS_BAL(CUS_CODE,BAL)
		   SELECT CUSTOMER_CODE,ISNULL(OPENING_BALANCE,0) FROM CUSTDYM (NOLOCK) WHERE ISNULL(OPENING_BALANCE,0)<>0                 
   
   SET @CSTEP='10'
   LBLSLS:

		PRINT '***LBLCREDITISSUE:****'
           
		    INSERT INTO #CUS_BAL(CUS_CODE,BAL)
            SELECT CUSTOMER_CODE,ABS(ISNULL(SUM(B.AMOUNT),0)) AS CREDIT_ISSUE_AMT 
			FROM CMM01106 A (NOLOCK) JOIN PAYMODE_XN_DET B (NOLOCK) ON A.CM_ID=B.MEMO_ID  
            WHERE    A.CM_ID =(CASE WHEN @CMEMO_ID='' THEN  A.CM_ID ELSE @CMEMO_ID END )
			and CANCELLED=0 AND PAYMODE_CODE='0000004' AND XN_TYPE='SLS'  
            AND SUBSTRING(A.CM_NO,5,1)<>'N'
			GROUP BY CUSTOMER_CODE
  

          PRINT '***LBLCREDIT_NOTE_ISSUE:****'
          

		   INSERT INTO #CUS_BAL(CUS_CODE,BAL)
           SELECT CUSTOMER_CODE,-1*ABS(ISNULL(SUM(B.AMOUNT),0)) AS CREDITNOTEISSUE_AMT FROM CMM01106 A  (NOLOCK) 
           JOIN PAYMODE_XN_DET B (NOLOCK) ON A.CM_ID=B.MEMO_ID  
           WHERE A.CM_ID =(CASE WHEN @CMEMO_ID='' THEN  A.CM_ID ELSE @CMEMO_ID END ) AND  
		   CANCELLED=0 AND PAYMODE_CODE='0000004' AND XN_TYPE='SLS' 
           AND SUBSTRING(A.CM_NO,5,1)='N' 
		   GROUP BY CUSTOMER_CODE
          
		  PRINT '***LBLCREDITNOTEADJ:****'
		   

            INSERT INTO #CUS_BAL(CUS_CODE,BAL)
		   SELECT CUSTOMER_CODE,ABS(ISNULL(SUM(B.AMOUNT),0)) FROM CMM01106 A (NOLOCK)  
		   JOIN PAYMODE_XN_DET B (NOLOCK)  ON A.CM_ID=B.MEMO_ID  
		   WHERE A.CM_ID =(CASE WHEN @CMEMO_ID='' THEN  A.CM_ID ELSE @CMEMO_ID END ) AND  
		   CANCELLED=0 AND PAYMODE_CODE='0000001'AND XN_TYPE='SLS' 
		   GROUP BY CUSTOMER_CODE
		  
		 PRINT '*** ADAVANCE_AMT_SLSADJ:****'
           
		   INSERT INTO #CUS_BAL(CUS_CODE,BAL)
		   SELECT CUSTOMER_CODE,ABS(ISNULL(SUM(B.AMOUNT),0)) AS ADAVANCE_AMT_ADJ 
		   FROM CMM01106 A (nolock) JOIN PAYMODE_XN_DET B (nolock) ON A.CM_ID=B.MEMO_ID  
		   WHERE A.CM_ID =(CASE WHEN @CMEMO_ID='' THEN  A.CM_ID ELSE @CMEMO_ID END ) AND  
		   CANCELLED=0 AND PAYMODE_CODE='0000002' AND XN_TYPE='SLS'
		   GROUP BY CUSTOMER_CODE

        
		  PRINT '*** CREDIT_REFUND_AMT:****'
		   
		   INSERT INTO #CUS_BAL(CUS_CODE,BAL)
		   SELECT CUSTOMER_CODE,-1*ABS(ISNULL(SUM(B.AMOUNT),0)) 
		   FROM CMM01106 A (nolock) 
		   JOIN PAYMODE_XN_DET B (nolock) ON A.CM_ID=B.MEMO_ID  
		   WHERE A.CM_ID =(CASE WHEN @CMEMO_ID='' THEN  A.CM_ID ELSE @CMEMO_ID END ) AND  
		   CANCELLED=0 AND PAYMODE_CODE='CMR0001'AND XN_TYPE='SLS'
		   GROUP BY CUSTOMER_CODE

		  PRINT '*** NORDDLVAMT:****'

		
			;with cte as
			(
			SELECT A.CUSTOMER_CODE, A.CM_ID,A.NET_AMOUNT,
				SR=ROW_NUMBER() OVER(PARTITION BY A.CM_ID ORDER BY B.ROW_ID)
			FROM CMM01106 A (NOLOCK) 
			JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID
			JOIN WSL_ORDER_DET C (NOLOCK) ON B.PRODUCT_CODE=C.PRODUCT_CODE
			JOIN WSL_ORDER_MST D (NOLOCK) ON D.ORDER_ID=C.ORDER_ID AND A.CUSTOMER_CODE=D.CUSTOMER_CODE
			WHERE A.CANCELLED=0 AND D.CANCELLED=0 
			AND A.CM_ID=(CASE WHEN @CMEMO_ID='' THEN  A.CM_ID ELSE @CMEMO_ID END ) 
			and NET_AMOUNT>0
			)

			INSERT INTO #CUS_BAL(CUS_CODE,BAL)
			SELECT CUSTOMER_CODE,-1*SUM(NET_AMOUNT)  
			FROM CTE WHERE SR=1
			group by CUSTOMER_CODE

			--SELECT A.CUSTOMER_CODE,-1*SUM(NET_AMOUNT) FROM CMM01106 A (nolock) 
			--JOIN CMD01106 B (nolock) ON A.CM_ID=B.CM_ID
			--JOIN WSL_ORDER_DET C (nolock) ON B.PRODUCT_CODE=(CASE WHEN C.ORDER_TYPE=0 THEN C.PRODUCT_CODE ELSE C.REF_PRODUCT_CODE END)
			--JOIN WSL_ORDER_MST D (nolock) ON D.ORDER_ID=C.ORDER_ID AND A.CUSTOMER_CODE=D.CUSTOMER_CODE
			--WHERE A.CM_ID =(CASE WHEN @CMEMO_ID='' THEN  A.CM_ID ELSE @CMEMO_ID END ) AND  
			--A.CANCELLED=0 AND D.CANCELLED=0 AND NET_AMOUNT>0
			--AND B.ROW_ID=(SELECT TOP 1 ROW_ID FROM CMD01106 E WHERE E.CM_ID=B.CM_ID)
	  --      GROUP BY A.CUSTOMER_CODE

	
	   
	
	  IF ISNULL(@cMEMO_id,'')<>''
	     GOTO END_PROC

      LBLARC:
           
		   SET @CSTEP='20'
		   PRINT '***CREDIT_NOTE_AMT_ADJ_ARC:****'
           
		   INSERT INTO #CUS_BAL(CUS_CODE,BAL)
		   SELECT CUSTOMER_CODE,ABS(ISNULL(SUM(B.AMOUNT),0)) AS CREDIT_NOTE_AMT_ADJ 
		   FROM ARC01106 A  (nolock)
		   JOIN PAYMODE_XN_DET B (nolock) ON A.ADV_REC_ID=B.MEMO_ID  
		   WHERE A.adv_rec_id  =(CASE WHEN @CMEMO_ID='' THEN  A.adv_rec_id ELSE @CMEMO_ID END ) AND  
		   CANCELLED=0 AND PAYMODE_CODE='0000001'AND XN_TYPE ='ARC' AND ARC_TYPE<>2   
		   GROUP BY CUSTOMER_CODE

		 
		   
		   INSERT INTO #CUS_BAL(CUS_CODE,BAL)
		   SELECT CUSTOMER_CODE,ABS(ISNULL(SUM(B.AMOUNT*(CASE WHEN ARC_TYPE=2 THEN -1 ELSE 1 END)),0)) FROM ARC01106 A (nolock)
		   JOIN PAYMODE_XN_DET B (nolock) ON A.ADV_REC_ID=B.MEMO_ID  
		   WHERE  A.adv_rec_id  =(CASE WHEN @CMEMO_ID='' THEN  A.adv_rec_id ELSE @CMEMO_ID END ) AND  
		   CANCELLED=0 AND PAYMODE_CODE='0000002' AND XN_TYPE='ARC' AND ARC_TYPE<>2
		   GROUP BY CUSTOMER_CODE

		 
          
		   PRINT '*** RECEIPT_AMT:****'
           
		   INSERT INTO #CUS_BAL(CUS_CODE,BAL)
		   SELECT CUSTOMER_CODE,-1*ABS(ISNULL(SUM(AMOUNT),0)) FROM ARC01106 A (nolock) 
		   WHERE  A.adv_rec_id  =(CASE WHEN @CMEMO_ID='' THEN  A.adv_rec_id ELSE @CMEMO_ID END ) AND  
		   CANCELLED=0 AND  ARC_TYPE=1 AND ARCT IN(1,2) 
		   GROUP BY CUSTOMER_CODE

		    
		  PRINT '*** PAYMENT_AMT:****'

		   INSERT INTO #CUS_BAL(CUS_CODE,BAL)
		   SELECT CUSTOMER_CODE,ABS(ISNULL(SUM(AMOUNT),0)) 
		   FROM ARC01106 A (nolock)
		   WHERE  A.adv_rec_id  =(CASE WHEN @CMEMO_ID='' THEN  A.adv_rec_id ELSE @CMEMO_ID END ) AND   CANCELLED=0 
		   and arc_type =2
           GROUP BY CUSTOMER_CODE

		 

		  IF ISNULL(@cMEMO_id,'')<>''
	         GOTO END_PROC
      
	  HBD:


	  INSERT INTO #CUS_BAL(CUS_CODE,BAL)
	  select A.CUSTOMER_CODE,sum(a.total_amount) 
	  FROM HOLD_BACK_DELIVER_MST A  
	  JOIN CUSTDYM C ON A.CUSTOMER_CODE = C.CUSTOMER_CODE 
	  WHERE A.TOTAL_AMOUNT <> 0  and a.entry_mode =2
	  AND A.CANCELLED = 0  AND (A.CUSTOMER_CODE <> '000000000000' )
	  AND  A.MEMO_ID  =(CASE WHEN @CMEMO_ID='' THEN  A.MEMO_ID ELSE @CMEMO_ID END )
	  group by A.CUSTOMER_CODE

	    IF ISNULL(@cMEMO_id,'')<>''
	       GOTO END_PROC

     LBLORDERAMT:

	   SET @CSTEP='30'

		PRINT '*** NORDERAMT:****'

			INSERT INTO #CUS_BAL(CUS_CODE,BAL)
			select A.CUSTOMER_CODE, sum(a.total_amount)
			FROM WSL_ORDER_MST A  
			JOIN CUSTDYM C ON A.CUSTOMER_CODE = C.CUSTOMER_CODE 
			WHERE A.TOTAL_AMOUNT <> 0  
			AND A.CANCELLED = 0  AND A.APPROVED=1   AND (A.CUSTOMER_CODE <> '000000000000' )
			AND  A.order_id   =(CASE WHEN @CMEMO_ID='' THEN  A.order_id ELSE @CMEMO_ID END )
			group by A.CUSTOMER_CODE

			
	
	IF ISNULL(@cMEMO_id,'')<>''
	     GOTO END_PROC
 
  END TRY  
  BEGIN CATCH
	  print 'enter catch of SP3S_UPDATE_CUSTOMERBALANCES'
	  SELECT @CERRORMSG='ERROR MESSAGE IN PROCEDURE SP3S_UPDATE_CUSTOMERBALANCES STEP#'+@CSTEP+' '+CAST(ERROR_MESSAGE() AS VARCHAR(1000))
  END CATCH  

  END_PROC:
         
	   IF ISNULL(@CMEMO_ID,'')<>''
	   BEGIN

	       declare @naddbal int 

		   IF @NREVERTFLAG=0
		      SET @NADDBAL=1
			ELSE
			SET @NADDBAL=-1
	  
	        
		   UPDATE A SET CUST_BAL= case when @NADDBAL=1 then  ISNULL(CUST_BAL,0)+(@naddbal*ISNULL(B.BAL,0))
		                               when @NADDBAL=-1 and ISNULL(CUST_BAL,0)>=0 then  ISNULL(CUST_BAL,0)+(@naddbal*ISNULL(B.BAL,0))
									   when @NADDBAL=-1 and ISNULL(CUST_BAL,0)<0 then  ISNULL(CUST_BAL,0)-(@naddbal*ISNULL(B.BAL,0))
		                          else 0 end
		   FROM CUSTDYM A (NOLOCK)
		   JOIN 
		   ( 
		     SELECT CUS_CODE,SUM(ISNULL(BAL,0)) AS BAL
		     FROM #CUS_BAL
			 GROUP BY CUS_CODE
			)B ON A.CUSTOMER_CODE=B.CUS_CODE 

			
		
			if @NREVERTFLAG=0
			begin

			 SELECT CUS_CODE,SUM(ISNULL(BAL,0)) AS BAL
		     FROM #CUS_BAL
			 GROUP BY CUS_CODE

			 end

	   END
	   ELSE
	   BEGIN
	       
		   --drop table CUS_bal

		   --select * into CUS_bal from #CUS_BAL
		
		   UPDATE A SET  CUST_BAL=B.BAL
		   FROM CUSTDYM A (NOLOCK)
		   JOIN 
		   ( 
		     SELECT CUS_CODE,SUM(ISNULL(BAL,0)) AS BAL
		     FROM #CUS_BAL
			 GROUP BY CUS_CODE
			)B ON A.CUSTOMER_CODE=B.CUS_CODE 

	   END
		
          
	 
   


SET NOCOUNT OFF
END

