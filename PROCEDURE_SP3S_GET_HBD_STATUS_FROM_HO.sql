CREATE PROCEDURE SP3S_GET_HBD_STATUS_FROM_HO
(    
   @NMODE INT, -- 1 FOR PULL 2 FOR PUSH 3 FOR ACKNOWLEDGE    5 FOR DELETION
   @LOC_ID VARCHAR(100)='',       
   @DT_CR VARCHAR(100)=''    
)    
AS    
BEGIN    
     DECLARE @DTSQL NVARCHAR(MAX), @NSTEP VARCHAR(10),@CCURLOCID VARCHAR(10),@CHOLOCID VARCHAR(10),      @CERRORMSG VARCHAR(100)
       
BEGIN TRY        
       
	DECLARE @CTEMPDBNAME1 VARCHAR(40),@CTEMPDBNAME VARCHAR(40)  ,@cColumnsList NVARCHAR(MAX)

	SELECT TOP 1 @CCURLOCID=VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'       
	SELECT TOP 1 @CHOLOCID=VALUE FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'       
	
	SET @CTEMPDBNAME = DB_NAME()+ '.DBO.'   
 
	SET @NSTEP=10      
	IF EXISTS(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='HOLD_BACK_DELIVER_DET' AND COLUMN_NAME='CN_PRODUCT_CODE')			 
		SET @cColumnsList=N'a.CN_PRODUCT_CODE,a.CN_REF_BILL_NO,a.CN_REF_BILL_DT'
	ELSE
		SET @cColumnsList=N''''' CN_PRODUCT_CODE,'''' CN_REF_BILL_NO,'''' CN_REF_BILL_DT'

	IF EXISTS(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='HOLD_BACK_DELIVER_DET' AND COLUMN_NAME='ADDITIONAL_JOB_HO')			 
		SET @cColumnsList=@cColumnsList+N',a.Additional_job_HO'
	ELSE
		SET @cColumnsList=@cColumnsList+N','''' Additional_job_HO'

		SET @DTSQL=N'SELECT a.memo_id,a.row_id,a.product_code,a.HBD_STATUS,a.PROCESS,a.HBD_STATUS_UPDATED_ON,a.job_rate,a.REMARKS ,'+@cColumnsList+','''+ISNULL(@CERRORMSG,'')+''' AS ERRORMSG
		FROM hold_back_deliver_det a
		JOIN hold_back_deliver_mst b on a.memo_id= b.memo_id
		WHERE b.location_code = '''+@LOC_ID +'''
		AND a.HBD_STATUS_UPDATED_ON>=CONVERT(DATETIME,'''+@DT_CR+''')'
		/*
	IF EXISTS(SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='HOLD_BACK_DELIVER_DET' AND COLUMN_NAME='CN_PRODUCT_CODE')			 
	BEGIN
		SET @cColumnsList=N'CN_PRODUCT_CODE,CN_REF_BILL_NO,CN_REF_BILL_DT'
		SET @DTSQL=N'SELECT memo_id,row_id,product_code,HBD_STATUS,PROCESS,HBD_STATUS_UPDATED_ON,job_rate,REMARKS ,CN_PRODUCT_CODE,CN_REF_BILL_NO,CN_REF_BILL_DT,'''+ISNULL(@CERRORMSG,'')+''' AS ERRORMSG
		FROM hold_back_deliver_det
		WHERE LEFT(MEMO_ID,2) = '''+@LOC_ID +'''
		AND HBD_STATUS_UPDATED_ON>=CONVERT(DATETIME,'''+@DT_CR+''')'
	END
	ELSE
	BEGIN
		SET @DTSQL=N'SELECT memo_id,row_id,product_code,HBD_STATUS,PROCESS,HBD_STATUS_UPDATED_ON,job_rate,REMARKS ,'''' CN_PRODUCT_CODE,'''' CN_REF_BILL_NO,'''' CN_REF_BILL_DT,'''+ISNULL(@CERRORMSG,'')+''' AS ERRORMSG
		FROM hold_back_deliver_det
		WHERE LEFT(MEMO_ID,2) = '''+@LOC_ID +'''
		AND HBD_STATUS_UPDATED_ON>=CONVERT(DATETIME,'''+@DT_CR+''')'
	END
	*/
	PRINT @DTSQL
	EXEC SP_EXECUTESQL @DTSQL
	GOTO LBLLAST        
	          
	END TRY        
	      
	BEGIN CATCH        
		
		SET @CERRORMSG='P:SP3S_GET_HBD_STATUS_FROM_HO, STEP:'+@NSTEP+', MESSAGE:'+ERROR_MESSAGE()        
		print 'enter catch'+@cErrormsg
		SELECT ISNULL(@CERRORMSG,'') AS ERRORMSG
		GOTO LBLLAST        
	END CATCH        
      
LBLLAST:       

       
END