CREATE PROCEDURE SAVETRAN_CANCELXN
@CXNTYPE VARCHAR(10),
@CDETAILTABLENAME VARCHAR(100),
@CXNMEMOID VARCHAR(50),
@CKEYFIELD VARCHAR(100),
@CMASTERTABLENAME VARCHAR(100),
@CDEPTID VARCHAR(10),
@CCOMPUTERNAME VARCHAR(100),
@CWINUSERNAME VARCHAR(100),
@CWIZUSERCODE VARCHAR(100),
@BDONOTUPDATESTOCK BIT,
@CRETCMD NVARCHAR(MAX) OUTPUT
--WITH ENCRYPTION
AS
BEGIN
	DECLARE @CERRORMSG VARCHAR(500),@CEXPRERRORMSG VARCHAR(500),@CCMD NVARCHAR(MAX)
	
	SET @CRETCMD=''
	
	EXEC VALIDATEXN_BEFORE_EDIT @CXNTYPE,@CXNMEMOID,1,@CWIZUSERCODE,@CERRORMSG OUTPUT,@CEXPRERRORMSG OUTPUT
	IF @CERRORMSG<>''
	BEGIN
		SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''+@CEXPRERRORMSG+''' AS ERRMSGEXPR,'''' AS MEMO_ID'
		RETURN
	END	
		
	EXEC AUDITLOGENTRY @CXNTYPE,@CXNMEMOID,@CDEPTID,@CCOMPUTERNAME,@CWINUSERNAME,@CWIZUSERCODE

	SET @CCMD=N' UPDATE '+@CMASTERTABLENAME+' SET CANCELLED=1,SENT_TO_HO=0,LAST_UPDATE=GETDATE() WHERE '+@CKEYFIELD+'='''+@CXNMEMOID+''''
	EXEC SP_EXECUTESQL @CCMD
	
	PRINT 'ENTER CANCELXN-1'
	
	IF ISNULL(@BDONOTUPDATESTOCK,0)<>1 
	BEGIN
	
		PRINT 'ENTER CANCELXN-2'
		
		EXEC UPDATEPMT_PRD 
			  @CXNTYPE			= @CXNTYPE
			, @CXNNO			= ''
			, @CXNID			= @CXNMEMOID
			, @NREVERTFLAG		= 1
			, @NALLOWNEGSTOCK	= 0
			, @NCHKDELBARCODES	= 0
			, @CCMD				= @CRETCMD OUTPUT
				
	END
END
