CREATE PROCEDURE SP_VALIDATEXN_BEFORESAVE_PTC--(LocId 3 digit change by Sanjay:30-10-2024)
(
	@NSPID			NUMERIC(5),
	@CUSERCODE		NVARCHAR(10),
	@NUPDATEMODE	INT,
	@CRETVAL		NVARCHAR(MAX) OUTPUT
)
--WITH ENCRYPTION
AS
BEGIN
BEGIN TRY
DECLARE @CCMD			NVARCHAR(MAX),
		@CTEMPPEM		NVARCHAR(MAX),
		@CTEMPPED		NVARCHAR(MAX),
		@CTEMPDBNAME	VARCHAR(100),
		@NSTEP	INT	

SET @NSTEP=0
SET @CTEMPDBNAME=''


SET @NSTEP=1		

SET @CTEMPPEM=@CTEMPDBNAME+'TEMP_PEM01106_'+LTRIM(RTRIM(STR(@NSPID)))
SET @CTEMPPED=@CTEMPDBNAME+'TEMP_PED01106_'+LTRIM(RTRIM(STR(@NSPID)))





SET @CRETVAL=''

--********************************************VALIDATION FOR PEM01106****************************************************
--VALIDATING RECORD COUNT
SET @CCMD=N'IF (SELECT COUNT(*) FROM '+@CTEMPPEM+')=0
				SET @CRETVAL1=''NO RECORD FOUND AT MASTER LEVEL..... CANNOT PROCEED'''

EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
GOTO ATLAST

--VALIDATING FINYEAR
SET @CCMD=N'SELECT @CRETVAL1=(CASE WHEN ''01'' + LTRIM(RTRIM((DBO.FN_GETFINYEAR(PEM_MEMO_DT))))=FIN_YEAR THEN '''' 
			ELSE ''MEMO DATE IS NOT IN CURRENT FINANCIAL YEAR...CAN NOT PROCEED'' END)
			FROM '+ @CTEMPPEM 
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
GOTO ATLAST

--VALIDATING USER CODE
IF @NUPDATEMODE=1
BEGIN
	SET @CCMD=N'UPDATE '+ @CTEMPPEM + N' SET USER_CODE='''+@CUSERCODE+''' WHERE LTRIM(RTRIM(USER_CODE)) = '''''
	EXEC SP_EXECUTESQL @CCMD
END

SET @CCMD=N'IF EXISTS (SELECT TOP 1 A.USER_CODE FROM '+ @CTEMPPEM + N' A 
						LEFT OUTER JOIN USERS B ON B.USER_CODE=A.USER_CODE
						WHERE B.USER_CODE IS NULL)
				SET @CRETVAL1=''INVALID USER DETAILS FOUND....CAN NOT PROCEED'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	GOTO ATLAST
	
--**************************************************VALIDATION FOR PED01106*****************************************************

--VALIDATING RECORD COUNT
SET @CCMD=N'IF NOT EXISTS (SELECT TOP 1 AC_CODE FROM '+@CTEMPPED+') OR 
				NOT EXISTS	(SELECT TOP 1 AC_CODE FROM '+ @CTEMPPED + ' WHERE LTRIM(RTRIM(AC_CODE))<>'''')
				SET @CRETVAL1=''BLANK DETAILS CAN NOT BE SAVED..... PLEASE CHECK'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
GOTO ATLAST

--VALIDATING PRODUCT CODE
SET @CCMD=N'IF NOT EXISTS (SELECT TOP 1 A.AC_CODE FROM '+@CTEMPPED+N' A
						JOIN LM01106 B ON B.AC_CODE=A.AC_CODE)
				SET @CRETVAL1=''UNKNOWN LEDGER DETAILS FOUND..... CANNOT PROCEED'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
GOTO ATLAST

--VALIDATING MRP
SET @CCMD=N'IF EXISTS (SELECT TOP 1 XN_AMOUNT FROM '+@CTEMPPED+N' WHERE XN_AMOUNT<=0)
				SET @CRETVAL1=''AMOUNT SHOULD NOT BE LESS THAN OR EQUAL TO ZERO..... CANNOT PROCEED'''
EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT
PRINT @CCMD
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
GOTO ATLAST


IF EXISTS (SELECT TOP 1 CUTOFFDATE FROM GST_ACCOUNTS_CONFIG_MST WHERE XN_TYPE='PTC' AND ISNULL(ENABLEPOSTING,0)=1)
BEGIN
	--VALIDATING REF NO. COLUMN FOR BILL BY BILL ACCOUNTS
	SET @CCMD=N'IF EXISTS (SELECT TOP 1 REF_NO FROM '+@CTEMPPED+N' A
						   JOIN LMP01106 B ON A.AC_CODE=B.AC_CODE WHERE ISNULL(REF_NO,'''')=''''
						   AND BILL_BY_BILL=1)
				BEGIN
					DECLARE @CACNAME VARCHAR(500)
					SELECT TOP 1 @CRETVAL1=''REF NO. CANNOT BE LEFT BLANK FOR A/C :''+AC_NAME
					FROM '+@CTEMPPED+' A
					JOIN LM01106 B ON A.AC_CODE=B.AC_CODE
					JOIN LMP01106 C ON A.AC_CODE=C.AC_CODE
					WHERE BILL_BY_BILL=1 AND ISNULL(A.REF_NO,'''')=''''
					
				END '
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD,N'@CRETVAL1 NVARCHAR(MAX) OUTPUT',@CRETVAL1=@CRETVAL OUTPUT

	IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''			
		GOTO ATLAST
END

SET @CRETVAL=''

ATLAST:
--COM01106
--COD01106
IF LTRIM(RTRIM(ISNULL(@CRETVAL,'')))<>''
	SET @CRETVAL=ISNULL(@CRETVAL,'') +'(SP_VALIDATEXN_BEFORESAVE_PTC)'
END TRY
BEGIN CATCH
	SET @CRETVAL=N'ERROR FOUND IN PROCEDURE : SP_VALIDATEXN_BEFORESAVE_PTC '+ISNULL(ERROR_PROCEDURE(),'NULL P')+' AT LINE NO. :'+  
	  ISNULL(LTRIM(RTRIM(STR(ERROR_LINE()))),'NULL LINE')+' MSG :'+ISNULL(ERROR_MESSAGE(),'NULL MSG')  
END CATCH
END
