CREATE PROC SAVETRAN_LOC_SPACE
(
	@NUPDATEMODE NUMERIC(1,0),  --@NUPDATEMODE 1 FOR ADD,2 FOR EDIT 
	@NSPID	INT,                
	@CMEMONOPREFIX VARCHAR(5)=  '',
	@CFINYEAR	VARCHAR(5)='',
	@CMEMO_ID VARCHAR(22)=''   --@CTEMPLATE_ID CODE REQUIRED FOR EDIT MODE
)
--WITH ENCRYPTION
AS
BEGIN
  DECLARE @CMASTERTABLENAME VARCHAR(100),
          @CTEMPMASTERTABLE VARCHAR(100),
          @CTEMPMASTERTABLENAME VARCHAR(100),
          @CDETAILTABLENAME VARCHAR(100),
          @CTEMPDETAILTABLE VARCHAR(100),
          @CTEMPDETAILTABLENAME VARCHAR(100),
		  @CTEMPDBNAME VARCHAR(100),		
		  @NSTEP VARCHAR(10),
		  @BENABLETEMPDB BIT,
		  @CERRORMSG VARCHAR(500),
		  @NSAVETRANLOOP	BIT,
		  @CCMD NVARCHAR(MAX),
		  @NMEMONOLEN VARCHAR(10),
		  @CKEYFIELD VARCHAR(100),
		  @CMEMONOVAL VARCHAR(100),
		  @CMEMONO VARCHAR(100),
		  @CKEYFIELDVAL1 VARCHAR(22),@CLOC_ID VARCHAR(4)
          SET @NSTEP = 0		-- SETTTING UP ENVIRONMENT		
		  -- TEMPORARY DATABASE Discarded now onwards as per Meeting on 30-10-2020 mentioned in Client issues List
		  SET @CTEMPDBNAME = ''	
			
			SET @CMASTERTABLENAME ='LOC_SPACE_MST'		
			SET @CTEMPMASTERTABLE  ='TEMP_LOC_SPACE_MST_'+LTRIM(RTRIM(STR(@NSPID)))		
			SET @CTEMPMASTERTABLENAME = @CTEMPDBNAME + @CTEMPMASTERTABLE
		    SET @CDETAILTABLENAME ='LOC_SPACE_DET'	
		    SET @CTEMPDETAILTABLE  ='TEMP_LOC_SPACE_DET_'+LTRIM(RTRIM(STR(@NSPID)))		
		    SET @CTEMPDETAILTABLENAME = @CTEMPDBNAME + @CTEMPDETAILTABLE
		    
		    SET @CERRORMSG			= ''
			SET @CKEYFIELD			= 'MEMO_ID'
			SET @CMEMONO			= 'MEMO_NO'
			SET @NMEMONOLEN			= 10
			
        BEGIN TRY
	    BEGIN TRANSACTION
	     
	    SET @NSTEP = 30		--CALL FROM ADD MODE
		IF @NUPDATEMODE = 1
		BEGIN
			SET @NSAVETRANLOOP=0
			WHILE @NSAVETRANLOOP=0
			BEGIN
			EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,
				 '',0, @CMEMONOVAL OUTPUT  
				 
					
				 SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+' 
							  WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' )
									SET @NLOOPOUTPUT=0
							  ELSE
									SET @NLOOPOUTPUT=1'
				 PRINT @CCMD
				 EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
		END

		IF @CMEMONOVAL IS NULL  
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'	
			GOTO END_PROC  		
		END

			SET @NSTEP = 30		-- GENERATING NEW ID
			
			
			SET @CCMD = 'SELECT @CLOC_ID = location_code  FROM ' + @CTEMPMASTERTABLE
	     	EXEC SP_EXECUTESQL @CCMD, N'@CLOC_ID VARCHAR(4) OUTPUT', @CLOC_ID OUTPUT
			
			SET @CKEYFIELDVAL1 = @CLOC_ID + RIGHT(@CFINYEAR,2)+REPLICATE('0', (22-LEN(@CLOC_ID + RIGHT(@CFINYEAR,2)))-LEN(LTRIM(RTRIM(@CMEMONOVAL))))  + LTRIM(RTRIM(@CMEMONOVAL))
			
				-- GENERATING NEW ORDER ID
		
				IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
					  GOTO END_PROC
				END
					
					SET @NSTEP = 60	-- UPDATING NEW ID INTO TEMP TABLES
					SET @CCMD=N'UPDATE '+@CTEMPMASTERTABLENAME+' SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''', '+@CKEYFIELD+'='''+@CKEYFIELDVAL1+''',LAST_UPDATE=GETDATE()'
					PRINT @CCMD 
					EXEC SP_EXECUTESQL @CCMD 
					
					SET @NSTEP = 70	-- UPDATING NEW ID INTO TEMP TABLES
					SET @CCMD=N'UPDATE '+@CTEMPDETAILTABLENAME+' SET '+@CKEYFIELD+'='''+@CKEYFIELDVAL1+''',LAST_UPDATE=GETDATE(),ROW_ID=NEWID()'
					PRINT @CCMD 
					EXEC SP_EXECUTESQL @CCMD 
			
		END--END FROM ADD MODE
	    
	    ELSE
		BEGIN--CALL FROM EDIT AND CANCELLED MODE
		
		          IF @NUPDATEMODE=3
				   BEGIN
				       DELETE FROM LOC_SPACE_DET WHERE MEMO_ID =@CMEMO_ID 
				       DELETE FROM LOC_SPACE_MST WHERE MEMO_ID =@CMEMO_ID 
				       GOTO END_PROC
				   END
				   SET @NSTEP = 80		-- GETTING MEMO ID FROM TEMP TABLE
				   SET @CCMD=N'SELECT @CKEYFIELDVAL1='+@CKEYFIELD+' FROM ' +@CMASTERTABLENAME+ ' WHERE MEMO_ID= '''+@CMEMO_ID+'''' 
				   PRINT @CCMD
				   EXEC SP_EXECUTESQL @CCMD,N'@CKEYFIELDVAL1 VARCHAR(22) OUTPUT',@CKEYFIELDVAL1 OUTPUT
				   
				   SET @NSTEP = 90
				   IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
				   BEGIN
						SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR PLEASE ENTER MEMO ID FOR UPDATING....'	
						GOTO END_PROC  		
				   
				   END
				   
				   IF @NUPDATEMODE = 2
				   BEGIN
				   SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLENAME + ' SET LAST_UPDATE=GETDATE()  WHERE ' + @CKEYFIELD + ' = ''' + @CKEYFIELDVAL1 + ''''
				   EXEC SP_EXECUTESQL @CCMD
				   
				   SET @NSTEP = 100	-- UPDATING NEW ID INTO TEMP TABLES
					SET @CCMD=N'UPDATE '+@CTEMPDETAILTABLENAME+' SET '+@CKEYFIELD+'='''+@CKEYFIELDVAL1+''',LAST_UPDATE=GETDATE(),ROW_ID=NEWID() WHERE  LEFT(ROW_ID,5)=''LATER'''
					PRINT @CCMD 
					EXEC SP_EXECUTESQL @CCMD 
				   END	    
		END
		
		SET @NSTEP = 140
	    IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
			GOTO END_PROC
		END
		
		SET @NSTEP = 160 
	    -- UPDATING MASTER TABLE FROM TEMP TABLE
		IF @NUPDATEMODE = 1 OR @NUPDATEMODE = 2
		BEGIN
		
				EXEC UPDATEMASTERXN 
					  @CSOURCEDB	= @CTEMPDBNAME
					, @CSOURCETABLE = @CTEMPMASTERTABLE
					, @CDESTDB		= ''
					, @CDESTTABLE	= @CMASTERTABLENAME
					, @CKEYFIELD1	= @CKEYFIELD
					, @BALWAYSUPDATE = 1
					
		           SET @CCMD = N'DELETE  A
		                         FROM LOC_SPACE_DET  A WHERE MEMO_ID='''+@CKEYFIELDVAL1+''''
		           PRINT @CCMD
				   EXEC SP_EXECUTESQL @CCMD
				   
					
					EXEC UPDATEMASTERXN 
					  @CSOURCEDB	= @CTEMPDBNAME
					, @CSOURCETABLE = @CTEMPDETAILTABLE
					, @CDESTDB		= ''
					, @CDESTTABLE	= @CDETAILTABLENAME
					, @CKEYFIELD1	= @CKEYFIELD
					, @BALWAYSUPDATE = 1
					
					--/*
					---DELETE ENTRIES 
					  
					   --'+@CTEMPDETAILTABLENAME+'
					   
					   --1 DELETE REP_FILTER_DET
					   
					   SET @CCMD=N'DELETE A FROM  REP_FILTER_DET A
					   JOIN REP_MST B ON A.REP_ID =B.REP_ID 
					   LEFT JOIN LOC_SPACE_MST C ON C.REP_ID=B.REP_ID 
					   WHERE B.REP_CODE =''LAA'' AND C.REP_ID IS NULL'
					   PRINT @CCMD
					   EXEC SP_EXECUTESQL @CCMD
					   
					   
					    --2 DELETE REP_FILTER
					   
					   SET @CCMD=N'DELETE A FROM  REP_FILTER A
					   JOIN REP_MST B ON A.REP_ID =B.REP_ID 
					   LEFT JOIN LOC_SPACE_MST C ON C.REP_ID=B.REP_ID 
					   WHERE B.REP_CODE =''LAA'' AND C.REP_ID IS NULL'
					   PRINT @CCMD
					   EXEC SP_EXECUTESQL @CCMD
					  
					    --3 DELETE REP_DET
					   
					   SET @CCMD=N'DELETE A FROM  REP_DET A
					   JOIN REP_MST B ON A.REP_ID =B.REP_ID 
					   LEFT JOIN LOC_SPACE_MST C ON C.REP_ID=B.REP_ID 
					   WHERE B.REP_CODE =''LAA'' AND C.REP_ID IS NULL'
					   PRINT @CCMD
					   EXEC SP_EXECUTESQL @CCMD
					   
					     --4 DELETE REP_MST
					   
					   SET @CCMD=N'DELETE A FROM  REP_MST A
					   JOIN REP_MST B ON A.REP_ID =B.REP_ID 
					   LEFT JOIN LOC_SPACE_MST C ON C.REP_ID=B.REP_ID 
					   WHERE B.REP_CODE =''LAA'' AND C.REP_ID IS NULL'
					   PRINT @CCMD
					   EXEC SP_EXECUTESQL @CCMD
					--  */ 
					   
				
	    END
	     END TRY
         BEGIN CATCH
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
				GOTO END_PROC
        END CATCH
END_PROC:
		IF @@TRANCOUNT>0
		BEGIN
			IF ISNULL(@CERRORMSG,'')=''
				COMMIT TRANSACTION
			ELSE
			ROLLBACK 	
		END 
					SET @CCMD = N'IF OBJECT_ID('''+@CTEMPMASTERTABLENAME+''',''U'') IS NOT NULL
											DROP TABLE '+@CTEMPMASTERTABLENAME+'
								IF OBJECT_ID('''+@CTEMPDETAILTABLENAME+''',''U'') IS NOT NULL
											DROP TABLE '+@CTEMPDETAILTABLENAME+''
					PRINT @CCMD
					EXEC SP_EXECUTESQL @CCMD 
		  		   		     
	SELECT ISNULL(@CERRORMSG,'') AS ERRMSG,@CKEYFIELDVAL1 AS MEMO_ID
END
