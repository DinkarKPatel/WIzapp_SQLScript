CREATE PROC SAVETRAN_DATAFREEZING
(
  @NSPID VARCHAR(50),
  @NMODE INT=1       
)
--WITH ENCRYPTION
AS
BEGIN
   SET NOCOUNT ON
   DECLARE @CCMD NVARCHAR(MAX),@ON VARCHAR(1000),@COL VARCHAR(1000)
   ,@CMASTERTABLENAME VARCHAR(100),@CSOURCEMASTERTABLENAME VARCHAR(100)
   ,@CTRANSACTIONTABLENAME VARCHAR(100),@CSOURCETRANSACTIONTABLENAME VARCHAR(100)
   ,@NSTEP INT=0,@CERRORMSG VARCHAR(MAX)='',@UPDATE VARCHAR(MAX)=''
   
   BEGIN TRY
    BEGIN TRANSACTION
    SET @NSTEP=10
	SELECT @CMASTERTABLENAME='FIXEDFREEZE',@CSOURCEMASTERTABLENAME='MSTUSRROLE_FixedFreeze_UPLOAD'

	SELECT @COL=COALESCE(@COL,'')+'T.['+UPPER(COLUMN_NAME)+']'+', '
	 ,@UPDATE=COALESCE(@UPDATE,'')+'T.['+UPPER(COLUMN_NAME)+']'+'=S.['+UPPER(COLUMN_NAME)+'],'
	FROM INFORMATION_SCHEMA.COLUMNS T
	WHERE T.TABLE_NAME=@CMASTERTABLENAME AND T.DATA_TYPE NOT LIKE 'TIMESTAMP'
	SET @COL=LTRIM(RTRIM(@COL))
	IF RIGHT(@COL,1)=','
		SET @COL=LEFT(@COL,LEN(@COL)-1)
    SET @UPDATE=LTRIM(RTRIM(@UPDATE))		
    IF RIGHT(@UPDATE,1)=','
       SET @UPDATE=LEFT(@UPDATE,LEN(@UPDATE)-1)
    PRINT @COL
    PRINT @UPDATE       
    SET @CCMD='DELETE FIXEDFREEZE; DELETE ROLLINGFREEZE;'
    EXEC (@CCMD)
    SET @CCMD='MERGE '+UPPER(@CMASTERTABLENAME)+' T'  
	SET @CCMD+=CHAR(13)+'USING '+UPPER(@CSOURCEMASTERTABLENAME)+' S'  
	SET @CCMD+=CHAR(13)+'ON T.[ISENABLED]=S.[ISENABLED] AND T.[USER_CODE]=S.[USER_CODE] AND T.[FIXEDDATE]=S.[FIXEDDATE] AND T.[XN_TYPE]=S.[XN_TYPE]'
	SET @CCMD+=CHAR(13)+'WHEN MATCHED THEN UPDATE SET '+@UPDATE
	SET @CCMD+=CHAR(13)+'WHEN NOT MATCHED BY TARGET THEN INSERT('+REPLACE(@COL,'T.','')+') VALUES ('+REPLACE(@COL,'T.','S.')+');'   
	--PRINT @CCMD+CHAR(13)  
	EXEC (@CCMD)  
	
	
	SET @NSTEP=15
	SELECT @CTRANSACTIONTABLENAME='ROLLINGFREEZE',@CSOURCETRANSACTIONTABLENAME='MSTUSRROLE_RollingFreeze_UPLOAD'
	SELECT @COL='',@UPDATE=''
    SELECT @COL=COALESCE(@COL,'')+'T.['+UPPER(COLUMN_NAME)+']'+', '
	,@UPDATE=COALESCE(@UPDATE,'')+'T.['+UPPER(COLUMN_NAME)+']'+'=S.['+UPPER(COLUMN_NAME)+'],'
	FROM INFORMATION_SCHEMA.COLUMNS T
	WHERE T.TABLE_NAME=@CTRANSACTIONTABLENAME AND T.DATA_TYPE NOT LIKE 'TIMESTAMP'
	SET @COL=LTRIM(RTRIM(@COL))
	IF RIGHT(@COL,1)=','
		SET @COL=LEFT(@COL,LEN(@COL)-1)
    SET @UPDATE=LTRIM(RTRIM(@UPDATE))		
    IF RIGHT(@UPDATE,1)=','
       SET @UPDATE=LEFT(@UPDATE,LEN(@UPDATE)-1)
	SET @CCMD='MERGE '+UPPER(@CTRANSACTIONTABLENAME)+' T'  
	SET @CCMD+=CHAR(13)+'USING '+UPPER(@CSOURCETRANSACTIONTABLENAME)+' S'  
	SET @CCMD+=CHAR(13)+'ON T.[XN_TYPE]=S.[XN_TYPE] AND T.[ROLE_ID]=S.[ROLE_ID] AND T.[FREEZEDAYS]=S.[FREEZEDAYS] AND T.[ALLOWREAD]=S.[ALLOWREAD] AND T.[ROW_ID]=S.[ROW_ID]'
	SET @CCMD+=CHAR(13)+'WHEN MATCHED THEN UPDATE SET '+@UPDATE
	SET @CCMD+=CHAR(13)+'WHEN NOT MATCHED BY TARGET THEN INSERT('+REPLACE(@COL,'T.','')+') VALUES ('+REPLACE(@COL,'T.','S.')+');'   
	--PRINT @CCMD+CHAR(13)  
	EXEC (@CCMD)  
   END TRY
   
   BEGIN CATCH
	  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
	  GOTO END_PROC
   END CATCH
   
END_PROC:
   IF @@TRANCOUNT>0
	  BEGIN
		IF ISNULL(@CERRORMSG,'')=''
		   COMMIT TRANSACTION
		ELSE
			ROLLBACK 	
	  END 

   IF ISNULL(@CERRORMSG,'')='' AND 1=1
	  BEGIN
		 SET @CCMD = N'DELETE FROM  MSTUSRROLE_RollingFreeze_UPLOAD WHERE SP_ID= '''+@NSPID +''''
		 --PRINT @CCMD
		 EXEC SP_EXECUTESQL @CCMD

		 SET @CCMD = N'DELETE FROM  MSTUSRROLE_FixedFreeze_UPLOAD WHERE SP_ID= '''+@NSPID +''''
		 --PRINT @CCMD
		 EXEC SP_EXECUTESQL @CCMD
      END		
		  
   SELECT ISNULL(@CERRORMSG,'') AS ERRMSG
   SET NOCOUNT OFF
END
--END OF PROCEDURE SAVETRAN_DATAFREEZING


