CREATE PROCEDURE  VALIDATEXN_WPS
 @CXNID VARCHAR(50),	
 @NUPDATEMODE INT,	
 @CERRORMSG VARCHAR(200) OUTPUT
 
AS
BEGIN
    
    DECLARE @ENFORCE_PL_QTY VARCHAR(5)
    SELECT @ENFORCE_PL_QTY=VALUE  FROM CONFIG WHERE CONFIG_OPTION ='ENFORCE_PL_QTY_DURING_INVOICING' 


    IF EXISTS(SELECT PS_ID FROM WPS_MST WHERE PS_ID=@CXNID AND ENTRY_MODE=4)
    BEGIN
		EXEC VALIDATEXN_WPS_PICKLIST @CXNID =@CXNID,	 @NUPDATEMODE =@NUPDATEMODE,	@CERRORMSG =@CERRORMSG OUTPUT
		RETURN
    END
	
	DECLARE @NENTRYMODE INT
	SELECT @NENTRYMODE=ENTRY_MODE  FROM WPS_MST A	WHERE A.PS_ID=@CXNID
	
	IF ISNULL(@NENTRYMODE,0)=3
	BEGIN
	   
	   
	  IF EXISTS ( SELECT TOP 1 'U' FROM WPS_DET WHERE ( ISNULL(BO_DET_ROW_ID,'') ='' OR ISNULL(ORDER_ID,'')='') AND PS_ID=@CXNID and @NUPDATEMODE in(1,2)) 
	  BEGIN
	       SET @CERRORMSG='ORDER DEATAILS CAN NOT BE BLANK. '
	       RETURN
	  END
	
	END
	
	
	--DECLARE @NENTRYMODE INT
	--SELECT @NENTRYMODE=ENTRY_MODE  FROM WPS_MST A	WHERE A.PS_ID=@CXNID
	
	--IF ISNULL(@NENTRYMODE,0)=3
	--BEGIN
	   
	   
	--  IF EXISTS ( SELECT TOP 1 'U' FROM WPS_DET WHERE  ISNULL(ORDER_ID,'')='')
	--  BEGIN
	--       SET @CERRORMSG='ORDER DEATAILS CAN NOT BE BLANK. '
	--       RETURN
	--  END
	
	--END
	
	IF OBJECT_ID('TEMPDB..#TMPORDER','U') IS NOT NULL
	   DROP TABLE #TMPORDER

	SELECT A.ORDER_ID ,A.BO_DET_ROW_ID,
		   SUM(A.QUANTITY) AS QTY
	INTO #TMPORDER
	FROM WPS_DET A (NOLOCK)
	JOIN WPS_MST B (NOLOCK) ON A.PS_ID=B.PS_ID
	WHERE A.PS_ID=@CXNID
	AND A.ORDER_ID<>''
	GROUP BY A.ORDER_ID ,A.BO_DET_ROW_ID
 
 
 
    SELECT  B.* INTO #TMPALLORDER FROM #TMPORDER A
    JOIN
    (
    SELECT A.ORDER_ID ,A.BO_DET_ROW_ID,
		   SUM(CASE WHEN A.PS_ID=@CXNID THEN A.QUANTITY ELSE 0 END ) AS CUR_PACKSLIP_QTY,
		   SUM(A.QUANTITY) AS QTY
	FROM WPS_DET A (NOLOCK)
	JOIN WPS_MST B (NOLOCK) ON A.PS_ID=B.PS_ID
	AND A.ORDER_ID<>'' AND B.CANCELLED=0
	GROUP BY A.ORDER_ID ,A.BO_DET_ROW_ID
    ) B ON A.ORDER_ID =B.ORDER_ID 
    AND A.BO_DET_ROW_ID =B.BO_DET_ROW_ID 
    
    
	IF OBJECT_ID('TEMPDB..#TMPERRLIST','U') IS NOT NULL
	   DROP TABLE #TMPERRLIST
	   
	SELECT A.* ,
	ISNULL(B.ORD_QTY,0) TATAL_ORDER,
	ISNULL(B.ORD_QTY,0)-(ISNULL(A.QTY,0)-ISNULL(A.CUR_PACKSLIP_QTY,0)) AS  ORD_QTY
	INTO #TMPERRLIST 
	FROM #TMPALLORDER A
	LEFT OUTER JOIN
	(
	 SELECT B.ORDER_ID ,B.row_id  ,
			SUM(case when isnull(@ENFORCE_PL_QTY,'')<>'1' then B.QUANTITY else ISNULL(b.pl_qty,0) end) AS ORD_QTY
	 FROM BUYER_ORDER_MST A
	 JOIN BUYER_ORDER_DET B ON A.ORDER_ID =B.ORDER_ID 
	 WHERE A.CANCELLED =0
	 GROUP BY B.ORDER_ID ,B.row_id 
	) B ON A.ORDER_ID =B.ORDER_ID 
	AND A.BO_DET_ROW_ID =B.row_id 
	WHERE A.QTY>ISNULL(B.ORD_QTY,0)
  
   IF EXISTS (SELECT TOP 1 'U' FROM #TMPERRLIST )
   BEGIN
    SET @CERRORMSG='PACKSLIP QTY MUST BE LESS OR EQUAL ORDER QTY. '
		
	SELECT B.PRODUCT_CODE ,LTRIM(RTRIM(STR(ISNULL(A.ORD_QTY,0),10,2)))+' Pending ORDER QTY : '
	+LTRIM(RTRIM(STR(ISNULL(SUM(B.QUANTITY),0),10,2)))+' SCAN QTY PLEASE CHECK ORDER'+RIGHT(A.ORDER_ID,10) AS ERRMSG , 
	       @CXNID AS MEMO_ID
	FROM #TMPERRLIST A
	JOIN WPS_DET B ON A.ORDER_ID =B.ORDER_ID 
	AND A.BO_DET_ROW_ID=B.BO_DET_ROW_ID 
	--B.PACKSLIP_PARA2_CODE 
	WHERE B.PS_ID =@CXNID
	GROUP BY B.PRODUCT_CODE,LTRIM(RTRIM(STR(ISNULL(A.ORD_QTY,0),10,2)))
	,RIGHT(A.ORDER_ID,10)
    
	RETURN
	END

END_PROC:

END
