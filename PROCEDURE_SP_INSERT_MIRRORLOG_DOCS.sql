CREATE PROCEDURE SP_INSERT_MIRRORLOG_DOCS
AS
BEGIN
	 DECLARE @BMIRRORINGENABLED BIT,@CHOLOCID VARCHAR(5),@CCURLOCID VARCHAR(5)

	 SELECT TOP 1 @CCURLOCID=VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'
	 SELECT TOP 1 @CHOLOCID=VALUE FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'
	 
	 IF @CCURLOCID<>@CHOLOCID
		RETURN
		
	 IF EXISTS (SELECT TOP 1 CONFIG_OPTION FROM CONFIG WHERE 
				CONFIG_OPTION='MIRROR_SERVER_IP' AND VALUE<>'')
		SET @BMIRRORINGENABLED=1
	 ELSE
		SET @BMIRRORINGENABLED=0
	
	IF @BMIRRORINGENABLED=0
		RETURN
		
	IF NOT EXISTS (SELECT CONFIG_OPTION FROM CONFIG WHERE CONFIG_OPTION='INSERT_DOC_MIRRORLOG' AND VALUE=1)
	BEGIN
		 PRINT 'INSERTING ALL DOCS ENTRY INTO MIRRORLOG TABLE....'
		  	
		 INSERT MIRRORLOG	( XN_TYPE, XN_ID, LAST_UPDATE )
		 SELECT 'DOCWSL' AS XN_TYPE,INV_ID AS XN_ID,A.LAST_UPDATE FROM INM01106 A 
		 LEFT OUTER JOIN MIRRORLOG B ON A.INV_ID=B.XN_ID AND B.XN_TYPE='DOCWSL'
		 WHERE INV_MODE=2 AND B.XN_ID IS NULL
		 UNION
		 SELECT 'DOCPRT' AS XN_TYPE,RM_ID AS XN_ID,A.LAST_UPDATE FROM RMM01106 A 
		 LEFT OUTER JOIN MIRRORLOG B ON A.RM_ID=B.XN_ID AND B.XN_TYPE='DOCPRT'
		 WHERE MODE=2 AND B.XN_ID IS NULL

		IF NOT EXISTS (SELECT CONFIG_OPTION FROM CONFIG WHERE CONFIG_OPTION='INSERT_DOC_MIRRORLOG')
			INSERT CONFIG (CONFIG_OPTION,VALUE,ROW_ID,LAST_UPDATE)
				   VALUES ('INSERT_DOC_MIRRORLOG',1,'',GETDATE())	
		ELSE
			UPDATE CONFIG SET VALUE=1 WHERE CONFIG_OPTION='INSERT_DOC_MIRRORLOG'
		 
	END 
END
