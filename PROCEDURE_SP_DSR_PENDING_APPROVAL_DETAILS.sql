CREATE PROCEDURE SP_DSR_PENDING_APPROVAL_DETAILS
(
  @MEMO_DATE DATETIME,
  @BPENSHOW BIT=0,
  @BIN_ID VARCHAR(10)=''
)
AS
BEGIN

		DECLARE @CCMD NVARCHAR(MAX),@CFILTER VARCHAR(MAX),@CSTEP INT,@CERRMSG NVARCHAR(MAX),@DATE VARCHAR(10),@CM_DT_WHERE_FILTER NVARCHAR(MAX)
		
		DECLARE @CUTOFF_DATE DATETIME 
	  SElect @CUTOFF_DATE= ISNULL(value,'') from config where config_option='CUTOFF_DATE_FOR_PENDING_ADV_CN_CR'
	  
		
		
		SET @CSTEP = 20
		IF ISNULL(@MEMO_DATE,'') = ''
		BEGIN
			SET @CERRMSG = 'CAN NOT ACCEPT A BLANK DATE.'
			GOTO END_PROC
		END
		SET @DATE = CONVERT(VARCHAR,@MEMO_DATE,120)
		
		
			
	 IF ISNULL(@CUTOFF_DATE,'')=''
	  BEGIN
			SET @CM_DT_WHERE_FILTER='APM.MEMO_DT <='''+@DATE+''''
			
	  END
	  IF ISNULL(@CUTOFF_DATE,'')<>''
	  BEGIN
			SET @CM_DT_WHERE_FILTER='APM.MEMO_DT BETWEEN '''+CONVERT(VARCHAR,@CUTOFF_DATE,120)+''' AND  '''+@DATE+''''
	  END
		
		SET @CSTEP = 10	
		IF ISNULL(@BPENSHOW,0) = 0
		BEGIN
			SET @CFILTER='HAVING SUM(APD.QUANTITY)-ISNULL (SUM(APR.QUANTITY),0)>0 '
		END
		ELSE
		BEGIN
			SET @CFILTER=''
		END
		
		SET @CCMD=N'SELECT  CAST(APM.MEMO_NO AS VARCHAR(100)) AS MEMO_NO,
				CAST(APM.MEMO_DT AS DATETIME) AS MEMO_DT,
				SUM(APD.MRP) AS MRP,APD.PRODUCT_CODE,ART.ARTICLE_NAME AS ARTICLE,
				SUM(APD.QUANTITY) AS ISS_QUANTITY,ISNULL (SUM(APR.QUANTITY),0) AS RECEIVED_QTY,
				SUM(APD.QUANTITY)-ISNULL (SUM(APR.QUANTITY),0) AS PENDING_QTY
				FROM APM01106  APM (NOLOCK) JOIN APD01106 APD (NOLOCK) ON APM.MEMO_ID = APD.MEMO_ID
				LEFT OUTER JOIN 
				(
				SELECT A.APD_ROW_ID,SUM(A.QUANTITY) AS QUANTITY 
						FROM APPROVAL_RETURN_DET A (NOLOCK)
						JOIN APPROVAL_RETURN_MST B (NOLOCK) ON A.MEMO_ID=B.MEMO_ID
						WHERE B.CANCELLED=0 
						GROUP BY A.APD_ROW_ID

				)APR ON APR.APD_ROW_ID=APD.ROW_ID
				JOIN SKU S ON S.PRODUCT_CODE=APD.PRODUCT_CODE
				JOIN ARTICLE ART ON ART.ARTICLE_CODE=S.ARTICLE_CODE
				 WHERE '+@CM_DT_WHERE_FILTER+' AND CANCELLED = 0 GROUP BY APM.MEMO_NO,
				 APD.PRODUCT_CODE,APM.MEMO_DT,ART.ARTICLE_NAME '+ @CFILTER +' 
				 union all
				 SELECT  CAST(APM.MEMO_NO AS VARCHAR(100)) AS MEMO_NO,
				CAST(APM.MEMO_DT AS DATETIME) AS MEMO_DT,
				SUM(APD.MRP) AS MRP,APD.PRODUCT_CODE,ART.ARTICLE_NAME AS ARTICLE,
				SUM(APD.QUANTITY) AS ISS_QUANTITY,ISNULL (SUM(APR.QUANTITY),0) AS RECEIVED_QTY,
				SUM(APD.QUANTITY)-ISNULL (SUM(APR.QUANTITY),0) AS PENDING_QTY
				FROM APM01106_ops  APM (NOLOCK) JOIN APD01106_ops APD (NOLOCK) ON APM.MEMO_ID = APD.MEMO_ID
				LEFT OUTER JOIN 
				(
				SELECT A.APD_ROW_ID,SUM(A.QUANTITY) AS QUANTITY 
						FROM APPROVAL_RETURN_DET A (NOLOCK)
						JOIN APPROVAL_RETURN_MST B (NOLOCK) ON A.MEMO_ID=B.MEMO_ID
						WHERE B.CANCELLED=0 
						GROUP BY A.APD_ROW_ID

				)APR ON APR.APD_ROW_ID=APD.ROW_ID
				JOIN SKU S ON S.PRODUCT_CODE=APD.PRODUCT_CODE
				JOIN ARTICLE ART ON ART.ARTICLE_CODE=S.ARTICLE_CODE
				 WHERE '+@CM_DT_WHERE_FILTER+' AND CANCELLED = 0 GROUP BY APM.MEMO_NO,
				 APD.PRODUCT_CODE,APM.MEMO_DT,ART.ARTICLE_NAME '+ @CFILTER +' ORDER BY MEMO_NO
				 '
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD		 

        
END_PROC:              
      --SELECT @CERRMSG AS ERRMSG   
    SET @CERRMSG = 'PROCEDURE SP_DSR_PENDING_APPROVAL_DETAILS: STEP- ' + LTRIM(STR(@CSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()              
      	IF ISNULL(@CERRMSG,'') <> ''
	    SELECT @CERRMSG AS ERRMSG     
              
END
