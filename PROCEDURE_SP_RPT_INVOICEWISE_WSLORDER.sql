CREATE PROCEDURE SP_RPT_INVOICEWISE_WSLORDER--(LocId 3 digit change by Sanjay:30-10-2024)
( 
@DFM_DT VARCHAR(10)='2018-03-01',
@DTODT VARCHAR(10)='2018-04-04',
@XN_PARTY_NAME VARCHAR(100)=''
)
AS
BEGIN

  
	  DECLARE @DTSQL NVARCHAR(MAX)
  
    IF OBJECT_ID('TEMPDB..#TMPORDER','U') IS NOT NULL
	   DROP TABLE #TMPORDER
	   
	SELECT b.location_Code AS DEPT_ID ,
			   B.ORDER_ID ,
			   B.ORDER_NO ,
			   B.ORDER_DT ,
			   B.AC_CODE ,
			   A.ARTICLE_CODE ,
			   A.PARA1_CODE ,
			   A.PARA2_CODE ,
			   SUM(A.QUANTITY) AS ORD_QTY,
			   CONVERT(NUMERIC(12,2),SUM(A.QUANTITY*A.WS_PRICE )) AS ORDER_VALUE
		INTO #TMPORDER
		FROM BUYER_ORDER_DET A (NOLOCK)
		JOIN BUYER_ORDER_MST B (NOLOCK) ON A.ORDER_ID =B.ORDER_ID  
		WHERE B.CANCELLED =0 
		AND 1=2
		GROUP BY b.location_Code  ,B.ORDER_ID ,B.ORDER_NO ,B.ORDER_DT,
		B.AC_CODE ,A.ARTICLE_CODE ,A.PARA1_CODE ,A.PARA2_CODE 
	
	
	  SET @DTSQL=N' SELECT b.location_code AS DEPT_ID ,
			   B.ORDER_ID ,
			   B.ORDER_NO ,
			   B.ORDER_DT ,
			   B.AC_CODE ,
			   A.ARTICLE_CODE ,
			   A.PARA1_CODE ,
			   A.PARA2_CODE ,
			   SUM(A.QUANTITY) AS ORD_QTY,
			   CONVERT(NUMERIC(12,2),SUM(A.QUANTITY*A.WS_PRICE )) AS ORDER_VALUE
		FROM BUYER_ORDER_DET A (NOLOCK)
		JOIN BUYER_ORDER_MST B (NOLOCK) ON A.ORDER_ID =B.ORDER_ID  
		JOIN LM01106 LM ON LM.AC_CODE=B.AC_CODE
		WHERE B.CANCELLED =0 
		AND B.ORDER_DT BETWEEN '''+ CONVERT(VARCHAR(10),@DFM_DT,121)+''' AND '''+ CONVERT(VARCHAR(10),@DTODT,121)+'''
		AND ('''+@XN_PARTY_NAME+'''='''' OR LM.AC_NAME LIKE ''%'+@XN_PARTY_NAME+'%'')
		GROUP BY b.location_code  ,B.ORDER_ID ,B.ORDER_NO ,B.ORDER_DT,
		B.AC_CODE ,A.ARTICLE_CODE ,A.PARA1_CODE ,A.PARA2_CODE   '
		INSERT INTO #TMPORDER
		EXEC SP_EXECUTESQL @DTSQL
		PRINT @DTSQL
		
		
       IF OBJECT_ID('TEMPDB..#TMPWSL','U') IS NOT NULL
	   DROP TABLE #TMPWSL
	   
		SELECT A.* ,
		A.ORD_QTY AS CAL_ORDER_QTY,
		A.ORDER_VALUE  AS CAL_ORDER_VALUE,
		SR=ROW_NUMBER () OVER( PARTITION BY A.ORDER_ID , A.AC_CODE ,A.ARTICLE_CODE ,A.PARA1_CODE ,A.PARA2_CODE  ORDER BY A.ORDER_ID , A.AC_CODE ,A.ARTICLE_CODE ,A.PARA1_CODE ,A.PARA2_CODE ),
		WPS.INV_NO ,
		WPS.INV_DT ,
	    ISNULL(WPS.WSL_QTY,0) AS WSL_QTY,
	    ISNULL(WPS.WSL_RATE,0) AS WSL_RATE,
	    ISNULL(WPS.WSL_NET_RATE,0) AS WSL_NET_RATE
	    INTO #TMPWSL
		FROM #TMPORDER A
		LEFT JOIN
		(
		
		  SELECT A.ORDER_ID ,A.ARTICLE_CODE  ,
				   A.PARA1_CODE ,A.PARA2_CODE,
				   IND.INV_NO,IND.INV_DT ,IND.INV_ID,
				   SUM(CASE WHEN IND.PS_ID IS NULL THEN   A.WPS_QTY ELSE 0 END ) AS WPS_QTY , 
				   SUM(ISNULL(IND.WSL_QTY,0)) AS WSL_QTY,
				   SUM(ISNULL(IND.WSL_RATE ,0)) AS WSL_RATE,
				   SUM(ISNULL(IND.WSL_NET_RATE ,0)) AS WSL_NET_RATE
			FROM
		  (
			SELECT A.PS_ID, A.ORDER_ID ,A.PACKSLIP_ARTICLE_CODE AS ARTICLE_CODE  ,
				   A.PACKSLIP_PARA1_CODE AS PARA1_CODE ,A.PACKSLIP_PARA2_CODE AS PARA2_CODE,
				   A.QUANTITY AS WPS_QTY ,
				   SRNO=ROW_NUMBER () OVER (PARTITION BY A.PS_ID,A.PACKSLIP_ARTICLE_CODE ,A.PACKSLIP_PARA1_CODE,A.PACKSLIP_PARA2_CODE ORDER BY A.PS_ID,A.PACKSLIP_ARTICLE_CODE ,A.PACKSLIP_PARA1_CODE,A.PACKSLIP_PARA2_CODE,QUANTITY  )   
				   
			FROM WPS_DET A (NOLOCK)
			JOIN WPS_MST B (NOLOCK) ON A.PS_ID =B.PS_ID 
			WHERE B.CANCELLED =0
			AND ISNULL(A.ORDER_ID,'''')<>''''
			
			) A
			LEFT OUTER JOIN
			(	
			SELECT PS_ID ,SKU.ARTICLE_CODE ,SKU.PARA1_CODE ,SKU.PARA2_CODE,
			B.INV_NO,B.INV_DT ,A.INV_ID,
			A.QUANTITY AS WSL_QTY  ,
			SRNO=ROW_NUMBER () OVER (PARTITION BY A.PS_ID,SKU.ARTICLE_CODE ,SKU.PARA1_CODE,SKU.PARA2_CODE ORDER BY A.PS_ID,SKU.ARTICLE_CODE ,SKU.PARA1_CODE,SKU.PARA2_CODE,QUANTITY  )   ,
			A.NET_RATE  AS WSL_NET_RATE ,
			A.RATE   AS WSL_RATE  
			FROM IND01106 A (NOLOCK)
			JOIN INM01106 B (NOLOCK) ON A.INV_ID =B.INV_ID 
			JOIN SKU ON SKU.PRODUCT_CODE =A.PRODUCT_CODE
			WHERE B.CANCELLED =0
			AND  ISNULL(PS_ID,'''')<>''''
			

			)IND ON IND.PS_ID =A.PS_ID 
			AND IND .ARTICLE_CODE=A.ARTICLE_CODE
			AND IND .PARA1_CODE=A.PARA1_CODE
			AND IND .PARA2_CODE=A.PARA2_CODE
			AND IND.SRNO=A.SRNO
			GROUP BY A.ORDER_ID ,A.ARTICLE_CODE  ,
		    A.PARA1_CODE ,A.PARA2_CODE,IND.INV_NO,IND.INV_DT,IND.INV_ID 
			
		) WPS ON WPS.ORDER_ID =A.ORDER_ID 
		AND WPS.ARTICLE_CODE =A.ARTICLE_CODE 
		AND WPS.PARA1_CODE =A.PARA1_CODE 
		AND WPS.PARA2_CODE =A.PARA2_CODE 
		
		UPDATE #TMPWSL SET ORD_QTY =0,ORDER_VALUE =0 WHERE SR>1
        
        IF OBJECT_ID('TEMPDB..#TMPWSLFINAL','U') IS NOT NULL
	    DROP TABLE #TMPWSLFINAL
	   
       SELECT A.DEPT_ID ,A.ORDER_ID ,A.ORDER_NO ,A.ORDER_DT ,A.AC_CODE ,
              A.ARTICLE_CODE ,A.PARA1_CODE ,A.PARA2_CODE ,
              A.ORD_QTY ,A.ORDER_VALUE ,
              A.CAL_ORDER_QTY ,A.CAL_ORDER_VALUE ,
              A.SR ,
              ISNULL(A.INV_NO  ,'') AS INV_NO,
              A.INV_DT  AS INV_DT,
	          ISNULL(A.WSL_QTY,0) AS WSL_QTY,
	          ISNULL(A.WSL_RATE,0) AS WSL_RATE,
	          ISNULL(A.WSL_NET_RATE,0) AS WSL_NET_RATE,
	          SUM(ISNULL(B.WSL_QTY,0)) AS CUMM_WSL_QTY,
	          SUM(ISNULL(B.WSL_RATE,0)) AS CUMM_WSL_RATE,
	          SUM(ISNULL(B.WSL_NET_RATE,0)) AS CUMM_WSL_NET_RATE
	   INTO #TMPWSLFINAL
       FROM #TMPWSL A
       JOIN #TMPWSL B ON A.ORDER_ID=B.ORDER_ID 
       AND A.ARTICLE_CODE =B.ARTICLE_CODE 
       AND A.PARA1_CODE =B.PARA1_CODE 
       AND A.PARA2_CODE =B.PARA2_CODE 
       AND B.SR <=A.SR 
       GROUP BY  A.DEPT_ID ,A.ORDER_ID ,A.ORDER_NO ,A.ORDER_DT ,A.AC_CODE ,
       A.ARTICLE_CODE ,A.PARA1_CODE ,A.PARA2_CODE ,A.ORD_QTY ,
       A.ORDER_VALUE , A.CAL_ORDER_QTY ,A.CAL_ORDER_VALUE,A.SR ,ISNULL(A.INV_NO  ,''),
       A.INV_DT  ,ISNULL(A.WSL_QTY,0) ,ISNULL(A.WSL_RATE,0) ,ISNULL(A.WSL_NET_RATE,0)
       ORDER BY A.ORDER_ID ,A.ORDER_NO ,A.ORDER_DT ,A.AC_CODE ,
       A.ARTICLE_CODE ,A.PARA1_CODE ,A.PARA2_CODE ,A.SR 

      
      SELECT L.DEPT_ALIAS AS ALIAS,
           A.ORDER_NO ,
           CONVERT(VARCHAR,A.ORDER_DT,105) AS  ORDER_DT,
           LM.AC_NAME AS XN_PARTY_NAME,
           ART.ARTICLE_NO ,
           ART.ARTICLE_NAME ,
           P1.PARA1_NAME AS COLOR,
           P2.PARA2_NAME AS SIZE,
           A.ORD_QTY AS CAL_ORD_QTY ,
           ISNULL(A.ORDER_VALUE,0) AS CAL_ORDER_VALUE,
           A.INV_NO,
           ISNULL(CONVERT(VARCHAR,A.INV_DT,105),'') AS  INV_DT,
          -- A.WPS_QTY AS CAL_WPS_QTY ,
           ISNULL(A.WSL_QTY,0) AS CAL_WSL_QTY ,
           ISNULL(A.WSL_RATE,0) AS CAL_WSL_RATE,
           ISNULL(A.WSL_NET_RATE,0) AS CAL_WSL_NET_RATE,
           CASE WHEN A.CAL_ORDER_QTY -(ISNULL(A.CUMM_WSL_QTY,0))>0 THEN 
           A.CAL_ORDER_QTY -(ISNULL(A.CUMM_WSL_QTY,0)) ELSE 0 END AS CAL_PENDING_QTY,--ISNULL(A.WPS_QTY ,0)+
           
           CASE WHEN ISNULL(A.CAL_ORDER_VALUE,0)-ISNULL(A.CUMM_WSL_RATE,0)>0 THEN
           ISNULL(A.CAL_ORDER_VALUE,0)-ISNULL(A.CUMM_WSL_RATE,0) ELSE 0 END  AS CAL_PENDING_VALUE
    FROM #TMPWSLFINAL A
    JOIN LOCATION L ON A.DEPT_ID =L.DEPT_ID 
    JOIN LM01106 LM ON LM.AC_CODE =A.AC_CODE 
    JOIN ARTICLE ART ON ART.ARTICLE_CODE =A.ARTICLE_CODE 
    JOIN PARA1 P1 ON P1.PARA1_CODE =A.PARA1_CODE 
    JOIN PARA2 P2 ON P2.PARA2_CODE =A.PARA2_CODE 
    


END
