CREATE PROCEDURE SP_GEN_XN_PRODUCT_UID
(
 @CXNTYPE VARCHAR(10),
 @CXNID VARCHAR(40),
 @CERROR VARCHAR(4000) OUTPUT
)
--WITH ENCRYPTION
AS
BEGIN


IF @CXNTYPE = 'AMR'    
GOTO LBLAMR     

ELSE    
GOTO LAST   


LBLAMR:

  BEGIN TRY 
  
        IF OBJECT_ID('TEMPDB..#AMRROWS','U') IS NOT NULL
		DROP TABLE #AMRROWS 

				 
		SELECT  ISNULL(D.PRODUCT_UID,NEWID()) AS PRODUCT_UID, C.ARTICLE_CODE, C.PARA1_CODE, C.PARA2_CODE, 
				B.MEMO_DT AS INV_DT, B.MEMO_NO AS INV_NO, 
				B.MEMO_DT AS RECEIPT_DT,A.MEMO_ID ,
				ISNULL(I.REF_PRD_WORKORDER_MEMOID,'') AS WORK_ORDER_ID,A.RATE,
				(C.PURCHASE_PRICE + A.RATE) AS PURCHASE_PRICE,I.PRODUCT_UID AS OLD_PRODUCT_UID,
				C.COMPONENT_CODE ,C.COM_PARA1_CODE ,C.COM_PARA2_CODE ,
				C.PARA3_CODE,C.PARA4_CODE ,C.PARA5_CODE ,C.PARA6_CODE ,
				SUM(A.QUANTITY) AS QUANTITY,C.PRODUCT_CODE
				INTO #AMRROWS
		FROM PRD_AGENCY_MATERIAL_RECEIPT_DET A
		JOIN PRD_AGENCY_MATERIAL_RECEIPT_MST B ON A.MEMO_ID = B.MEMO_ID	
		JOIN 
		(
		 SELECT I.PRODUCT_UID,I.ROW_ID,I.REF_PRD_WORKORDER_MEMOID  
		 FROM PRD_AGENCY_ISSUE_MATERIAL_DET I
		 JOIN PRD_AGENCY_ISSUE_MATERIAL_MST J ON I.MEMO_ID = J.MEMO_ID
		 UNION ALL
		 SELECT I.PRODUCT_UID,I.ROW_ID,I.REF_PRD_WORKORDER_MEMOID  
		 FROM PRD_AGENCY_ISSUE_MATERIAL_DET_PENDING I
		 JOIN PRD_AGENCY_ISSUE_MATERIAL_MST_PENDING J ON I.MEMO_ID = J.MEMO_ID
		)I ON A.REF_ROW_ID = I.ROW_ID  
		JOIN PRD_SKU C ON I.PRODUCT_UID = C.PRODUCT_UID  AND C.WORK_ORDER_ID =I.REF_PRD_WORKORDER_MEMOID
		LEFT OUTER JOIN 
		(
		  SELECT D.PRODUCT_CODE, D.PRODUCT_UID,D.WORK_ORDER_ID , D.ARTICLE_CODE, D.PARA1_CODE,
		  D.PARA2_CODE, D.COMPONENT_CODE, D.COM_PARA1_CODE,
		  D.COM_PARA2_CODE, D.PURCHASE_PRICE,PMT.DEPARTMENT_ID
		  FROM PRD_SKU D
		  JOIN PRD_PMT PMT ON D.PRODUCT_UID =PMT.PRODUCT_UID
		)  D ON D.WORK_ORDER_ID =C.WORK_ORDER_ID
        AND D.ARTICLE_CODE=C.ARTICLE_CODE AND D.PARA1_CODE=C.PARA1_CODE AND D.PARA2_CODE=C.PARA2_CODE
		AND D.COMPONENT_CODE= C.COMPONENT_CODE AND D.COM_PARA1_CODE=C.COM_PARA1_CODE 
		AND D.COM_PARA2_CODE=C.COM_PARA2_CODE AND D.PURCHASE_PRICE = C.PURCHASE_PRICE + A.RATE
		AND B.DEPARTMENT_ID=D.DEPARTMENT_ID
		AND D.PRODUCT_CODE=C.PRODUCT_CODE
		WHERE B.MEMO_ID = @CXNID  AND A.RATE<>0
		GROUP BY D.PRODUCT_UID , C.ARTICLE_CODE, C.PARA1_CODE, C.PARA2_CODE,B.MEMO_DT, B.MEMO_NO ,A.MEMO_ID ,
		ISNULL(I.REF_PRD_WORKORDER_MEMOID,''),A.RATE,(C.PURCHASE_PRICE + A.RATE),I.PRODUCT_UID,
		C.COMPONENT_CODE ,C.COM_PARA1_CODE ,C.COM_PARA2_CODE ,C.PRODUCT_CODE,
		C.PARA3_CODE,C.PARA4_CODE ,C.PARA5_CODE ,C.PARA6_CODE
		
		
		UPDATE PRD_AGENCY_MATERIAL_RECEIPT_DET SET XN_PRODUCT_UID =  A.PRODUCT_UID 
		FROM #AMRROWS A 
		JOIN PRD_AGENCY_MATERIAL_RECEIPT_DET B ON A.OLD_PRODUCT_UID= B.XN_PRODUCT_UID  AND A.RATE= B.RATE 
		JOIN PRD_AGENCY_MATERIAL_RECEIPT_MST C ON B.MEMO_ID= C.MEMO_ID 
		WHERE C.MEMO_ID= @CXNID
					
		
	 
			
				
		INSERT PRD_SKU( PRODUCT_UID, ARTICLE_CODE, PARA1_CODE, PARA2_CODE, LAST_UPDATE, PURCHASE_PRICE,        
		PARA3_CODE, INV_DT, INV_NO, AC_CODE, RECEIPT_DT, PARA4_CODE, PARA5_CODE, PARA6_CODE,
		FORM_ID, MRP, DT_CREATED, WS_PRICE, TAX_AMOUNT, CHALLAN_NO,WORK_ORDER_ID,COMPONENT_CODE ,COM_PARA1_CODE ,COM_PARA2_CODE,PRODUCT_CODE )

		SELECT   A.PRODUCT_UID, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, GETDATE() AS LAST_UPDATE, A.PURCHASE_PRICE,
		        A.PARA3_CODE  AS PARA3_CODE,A.INV_DT, A.INV_NO, '0000000000'  AS AC_CODE, A.INV_DT, A.PARA4_CODE  AS PARA4_CODE, 
		        A.PARA5_CODE AS PARA5_CODE, A.PARA6_CODE AS PARA6_CODE, '0000000'AS FORM_ID, 0 AS MRP, '' AS DT_CREATED, 
		        0 AS WS_PRICE, 0 AS ITEM_TAX_AMOUNT, '' AS CHALLAN_NO ,A.WORK_ORDER_ID,A.COMPONENT_CODE ,A.COM_PARA1_CODE ,A.COM_PARA2_CODE,A.PRODUCT_CODE
		FROM #AMRROWS A
		LEFT OUTER JOIN PRD_SKU D ON A.PRODUCT_UID = D.PRODUCT_UID 
		WHERE  D.PRODUCT_UID IS NULL
		
								
		
		INSERT PRD_PMT (PRODUCT_UID,  QUANTITY_IN_STOCK, DEPARTMENT_ID,LAST_UPDATE,PRODUCT_CODE )
		SELECT	DISTINCT BC.PRODUCT_UID,  0 AS QUANTITY_IN_STOCK,B.DEPARTMENT_ID, GETDATE() AS LAST_UPDATE,BC.PRODUCT_CODE
		FROM PRD_AGENCY_MATERIAL_RECEIPT_DET A
		JOIN PRD_AGENCY_MATERIAL_RECEIPT_MST B ON A.MEMO_ID = B.MEMO_ID
		JOIN #AMRROWS BC ON A.XN_PRODUCT_UID = BC.PRODUCT_UID
		LEFT OUTER JOIN PRD_PMT D ON BC.PRODUCT_UID = D.PRODUCT_UID AND D.DEPARTMENT_ID = B.DEPARTMENT_ID
		WHERE B.MEMO_ID = @CXNID
		AND  D.PRODUCT_UID IS NULL 
		
		
		GOTO LAST 
    
    END TRY	
    
    
	BEGIN CATCH
		SET @CERROR =  ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()		
    END CATCH 	
    
    
    LAST:  


END
