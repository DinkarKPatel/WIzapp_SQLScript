create PROCEDURE POSTACT_PTF     
(    
 @DTTO DATETIME,    
 @CDEPTID CHAR(4)=''    
)    
AS    
BEGIN    
 PRINT 'ENTER PTCXFR POSTING'    
     
    DECLARE @CSTEP VARCHAR(10),@BPOSTDISCOUNTSEPARATELY BIT,@CDISCACCODE VARCHAR(10),@BPOSTFREIGHTSEPARATELY BIT,    
   @CFREIGHTACCODE VARCHAR(10),@BPOSTOCTROISEPARATELY BIT,@COCTROIACCODE VARCHAR(10),    
   @BPOSTINSURANCESEPARATELY BIT,@CINSURANCEACCODE VARCHAR(10),    
   @BPOSTOTHERCHARGESSEPARATELY BIT,@COTHERCHARGESACCODE VARCHAR(10),@BPOSTROUNDOFFSEPARATELY BIT,    
   @CROUNDOFFACCODE VARCHAR(10),@NCTR NUMERIC(10,0),    
   @NSUBTOTAL NUMERIC(14,2),@NTAXAMOUNT NUMERIC(14,2), @CPURACCODE VARCHAR(50),@CTAXACCODE VARCHAR(100),    
   @LPOSTTAXSEPARATELY NUMERIC(14,2),@CMEMOID VARCHAR(50),@LOUTSTATIONPARTY BIT,@TMPDR NUMERIC(14,2),    
   @TMPCR NUMERIC(14,2),@CCURSTATECODE VARCHAR(10),@CVMID VARCHAR(40),@CLOCATIONID CHAR(2),    
   @CLASTBILLNO VARCHAR(40),@DTMPVENDORBILLDT DATETIME,@CRMLIST VARCHAR(300),@NTMPCREDITDAYS NUMERIC(10),    
   @NTMPCRDISCOUNTPERCENTAGE NUMERIC(14,2),@DLASTINVDT DATETIME,@CVOUCHERCODE VARCHAR(10),    
   @COLDBILLTYPE VARCHAR(10),@CLASTACCODE VARCHAR(10),@CLASTPARTYNAME VARCHAR(100),@NTOTQUANTITY NUMERIC(14,2),    
   @NTOTNETAMOUNT NUMERIC(14,2),@CDEPTNAME VARCHAR(100),@CVOUCHERNO VARCHAR(10),@NSIGN NUMERIC(1),    
   @CMEMONO VARCHAR(100),@CLOCALSTKXFRACCODE CHAR(10),@NTRANSFERMODE INT,@CBANKACCODE CHAR(10)    
     
 SET @CSTEP=10    
 DECLARE @CPARTYACCODE VARCHAR(10),@CPARTYSTATECODE VARCHAR(10),@NNETAMOUNT NUMERIC(14,2),    
   @NDISCAMOUNT NUMERIC(14,2),@NFREIGHT NUMERIC(14,2), @NOTHER NUMERIC(14,2),@NROUNDOFF NUMERIC(14,2),    
   @NDRTOTAL NUMERIC(14,2),@NCRTOTAL NUMERIC(14,2),@DCUTOFFDATE DATETIME,@CXNTYPE VARCHAR(10),    
   @CAC_CODE VARCHAR(20),@CVDID VARCHAR(40),@CPOSTXFRBILLDATE CHAR(2) ,@CCASHAC VARCHAR (20)  
        
    SET @CFREIGHTACCODE=''    
    SET @CROUNDOFFACCODE=''    
        
    SET @CSTEP=20    
    --THIS TABLE VARIABLE STORE ERROR OF OF MEMO ID    
    DECLARE @ERRORS TABLE    
 (    
  XN_ID VARCHAR(40),XN_TYPE VARCHAR(30),XN_NO VARCHAR(40),    
  XN_DT DATETIME,XN_AMT NUMERIC(14,2),XN_AC VARCHAR(100),    
  ERR_DESC VARCHAR(500)    
 )       
        
    SET @CSTEP=30    
    DECLARE @VCHC TABLE     
 (    
  AC_CODE CHAR(10),NARRATION VARCHAR(200),XN_NO VARCHAR(30),    
  XN_DT DATETIME,DEPT_ID CHAR(4),AMOUNT NUMERIC(14,4),XN_ID VARCHAR(22),    
  REF_BILL_NO VARCHAR(50),REF_BILL_DATE DATETIME, ENTRY_ID INT    
  ,CRDAYS NUMERIC(5),XN_TYPE VARCHAR(10)    
 )    
     
 SET @CSTEP=40    
 DECLARE @VDC TABLE     
 (    
  VD_ID VARCHAR(50),    VM_ID VARCHAR(40),    AC_CODE CHAR(10),     
  NARRATION VARCHAR(200),   DEBIT_AMOUNT NUMERIC(14,4),  CREDIT_AMOUNT NUMERIC(14,4),    
  X_TYPE CHAR(2),     VS_AC_CODE CHAR(10),    REF_BILL_NO VARCHAR(40),     
  CREDIT_DAYS NUMERIC(10),  CR_DISCOUNT_PERCENTAGE NUMERIC(14,2),      
  VAT_ENTRY BIT,REF_BILL_DATE DATETIME, AC_NAME VARCHAR(100)   
 )    
     
 SET @CSTEP=50    
 DECLARE @VMC TABLE    
 (    
  VM_ID VARCHAR(400),    VOUCHER_NO VARCHAR(400),   VOUCHER_DT DATETIME,     
  VOUCHER_CODE CHAR(100),   DEPT_ID CHAR(20),    BILL_TYPE VARCHAR(300),    
  BILL_NO VARCHAR(200),    BILL_ID VARCHAR(220),    BILL_DT DATETIME,     
  BILL_AC_CODE VARCHAR(100),  DRTOTAL NUMERIC(20,2),   CRTOTAL NUMERIC(20,2),     
  CASH_VOUCHER BIT,     SALE_VOUCHER BIT,     QUANTITY NUMERIC(20,2),     
  ANGADIA_CODE CHAR(70),    LR_NO VARCHAR(500),    LR_DT DATETIME,    
  PARTY_NAME VARCHAR(1000),  NET_AMOUNT NUMERIC(20,2),   BILL_STATUS VARCHAR(1000),    
  RM_LIST VARCHAR(3000),   CANCELLED BIT,     DEPT_NAME VARCHAR(100),    
  VOUCHER_TYPE VARCHAR(100)     
 )    
     
 SET @CSTEP=60    
 DECLARE @VLINK TABLE    
 (    
  VM_ID VARCHAR(100),MEMO_ID VARCHAR(100),XN_TYPE VARCHAR(20),LAST_UPDATE DATETIME    
 )    
     
 DECLARE @TBILL_BY_BILL_REF TABLE(VD_ID VARCHAR(40),REF_NO VARCHAR(40),AMOUNT NUMERIC(18,4),LAST_UPDATE DATETIME    
        ,X_TYPE VARCHAR(20),CR_DAYS NUMERIC(5),REF_TYPE VARCHAR(10))    
   
 SELECT TOP 1 @DCUTOFFDATE=CUTOFFDATE     
  FROM PTCCONFIGMST    
     
 ---CHANGE ACCOURDING TO CONFIGRATION AC_CODE    
 SELECT TOP 1 @CLOCALSTKXFRACCODE=PETTYCASHAC FROM PTCCONFIGMST     
   
  SELECT TOP 1 @CCASHAC =PETTYCASHAC FROM PTCCONFIGMST     
 --@CPETTYCASHAC    
    
    
 -- PETTYCASHAC='HO00000088' PETTYCASHTRAC='0000000001'  
    
  --SELECT * FROM LM01106 WHERE AC_CODE='HO00000088'  
      
 SET @DCUTOFFDATE=ISNULL(@DCUTOFFDATE,'')    
     
 SET @CSTEP=70    
     
    BEGIN TRY    
   SELECT @CPOSTXFRBILLDATE = ISNULL(POSTBILLDATE,0)    
   FROM XFRCONFIGMST    
       
   SET @CPOSTXFRBILLDATE=ISNULL(@CPOSTXFRBILLDATE,0)    
       
   SET @CSTEP=80    
   IF OBJECT_ID('TEMPDB..#POSTS','U') IS NOT NULL    
    DROP TABLE #POSTS     
       
   SET @CSTEP=90    
   --THIS TABLE STORE ALL PENDING MEMO_ID     
   CREATE TABLE #POSTS (MEMO_ID VARCHAR(30),MODE VARCHAR(10))    
       
   SET @CSTEP=100    
   
   ---SELECT @CPOSTXFRBILLDATE   
   --GETTING LIST OF PETTY CASH OUT FOR VOUCHER POSTING    
   INSERT INTO #POSTS (MEMO_ID,MODE)    
         SELECT A.MEMO_ID,'PTCOUT' AS MODE     
         FROM PCO_MST A    
         JOIN LOCATION SL ON a.location_Code =SL.DEPT_ID    
         LEFT JOIN LOCATION TL ON SUBSTRING(A.MEMO_NO,3,2)=TL.DEPT_ID    
         LEFT OUTER JOIN     
         (    
    SELECT B.MEMO_ID,B.LAST_UPDATE    
    FROM POSTACT_VOUCHER_LINK B     
    JOIN VM01106 C ON C.VM_ID = B.VM_ID     
    WHERE C.CANCELLED=0 AND B.XN_TYPE = 'PTCOUT'     
         )VM  ON A.MEMO_ID = VM.MEMO_ID      
         WHERE      
         /*MEMO_DT IS LESS THAN THE SPECIFIED DATE.*/    
          A.MEMO_DT <= @DTTO    
         AND (@DCUTOFFDATE='' OR A.MEMO_DT>@DCUTOFFDATE)    
         /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/    
         AND (ISNULL(@CDEPTID,'')='' OR a.location_Code =@CDEPTID)    
         /*TARGET LOCATION*/    
         AND SUBSTRING(A.MEMO_NO,3,2) IS NOT NULL    
         AND ((SL.LOC_TYPE=1 AND TL.LOC_TYPE=1) OR (ISNULL(SL.ACCOUNT_POSTING_AT_HO,0)=1) OR  (ISNULL(TL.ACCOUNT_POSTING_AT_HO,0)=1))    
         AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE)     
         UNION ALL    
         SELECT A.MEMO_ID,'PTCIN' AS MODE     
         FROM PCI_MST A    
         JOIN LOCATION SL ON a.location_Code =SL.DEPT_ID    
         LEFT OUTER JOIN     
         (    
    SELECT B.MEMO_ID,B.LAST_UPDATE    
    FROM POSTACT_VOUCHER_LINK B     
    JOIN VM01106 C ON C.VM_ID = B.VM_ID     
    WHERE C.CANCELLED=0 AND B.XN_TYPE = 'PTCIN'     
         )VM  ON A.MEMO_ID  = VM.MEMO_ID      
         WHERE      
         /*PETTY CASH IN IS NOT CANCELLED.*/    
         ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)      
         /*PETTY CASH  INV_DT IS LESS THAN THE SPECIFIED DATE.*/    
         AND (    
     (A.RECEIPT_DT <= @DTTO AND @CPOSTXFRBILLDATE<>'1' AND A.RECEIPT_DT<>'')     
     OR (A.MEMO_DT <= @DTTO AND   @CPOSTXFRBILLDATE='1')    
    )    
   AND (@DCUTOFFDATE='' OR ((A.RECEIPT_DT>@DCUTOFFDATE AND @CPOSTXFRBILLDATE<>'1')    
          OR (A.MEMO_DT>@DCUTOFFDATE AND   @CPOSTXFRBILLDATE='1')))        
         /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/    
         AND (ISNULL(@CDEPTID,'')='' OR a.location_Code =@CDEPTID)    
         /*GROUP INVOICE IS NOT GROUP/BRANCH GROUP INVOICE*/     
         AND (ISNULL(SL.LOC_TYPE,0)=1 OR ISNULL(SL.ACCOUNT_POSTING_AT_HO,0)=1)    
         AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE)     
         AND ISNULL(REFLIFTID,'')=''
      UNION ALL    
         SELECT A.MEMO_ID,'TPTCIN' AS MODE     
         FROM TILL_LIFTS A    
         JOIN LOCATION SL ON a.location_Code =SL.DEPT_ID    
         LEFT OUTER JOIN     
         (    
    SELECT B.MEMO_ID,B.LAST_UPDATE    
  FROM POSTACT_VOUCHER_LINK B     
    JOIN VM01106 C ON C.VM_ID = B.VM_ID     
    WHERE C.CANCELLED=0 AND B.XN_TYPE = 'TPTCIN'     
         )VM  ON A.MEMO_ID  = VM.MEMO_ID      
         WHERE  A.TRANSFERMODE=2 AND     
         /*PETTY CASH IN IS NOT CANCELLED.*/    
         ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)      
         /*PETTY CASH  INV_DT IS LESS THAN THE SPECIFIED DATE.*/    
         AND A.MEMO_DT <= @DTTO 
 AND (@DCUTOFFDATE='' OR A.MEMO_DT>@DCUTOFFDATE )
         /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/    
         AND (ISNULL(@CDEPTID,'')='' OR a.location_Code =@CDEPTID)    
         /*GROUP INVOICE IS NOT GROUP/BRANCH GROUP INVOICE*/     
         AND (ISNULL(SL.LOC_TYPE,0)=1 OR ISNULL(SL.ACCOUNT_POSTING_AT_HO,0)=1)   
         AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE)     
          
    
   SET @CSTEP = 330    
   CREATE INDEX IX_TEMP_WSLTABLE_RM_ID ON #POSTS(MEMO_ID)    

--SELECT '#POSTS',* FROM #POSTS      WHERE MEMO_ID='01011180000001  000357'
         --DELETE INV_ID FROM TEPM TABLE WHICH HAVE SOME ERROR    
         DELETE A     
         FROM #POSTS A     
         JOIN @ERRORS B ON A.MEMO_ID = B.XN_ID AND A.MODE=B.XN_TYPE    

--SELECT 'AFTER DELETE #POSTS',* FROM #POSTS  
             
         --SELECT COUNT(*) FROM #POSTS    
         SET @CSTEP = 360    
         IF OBJECT_ID('TEMPDB..#V_PROCESS','U') IS NOT NULL    
    DROP TABLE #V_PROCESS    
       
   SET @CSTEP = 370    
       
        
       
    SELECT  A.MEMO_NO AS MEMO_NO,     
     A.MEMO_ID AS MEMO_ID,     
     A.MEMO_DT AS MEMO_DT,    
     LOCT.DEPT_AC_CODE, ---DEBIT    
     A.REMARKS,     
     A.AMOUNT AS AMOUNT    
     ,0 AS CANCELLED    
     ,a.location_Code  AS DEPT_ID    
     ,A.FIN_YEAR    
     ,(CASE WHEN ISNULL(TRANSFER_MODE,0)=2 THEN BANK_AC_CODE ELSE  @CCASHAC END) AS XN_AC_CODE  --CREDIT     
     ,D.AC_NAME AS PARTY_NAME    
     ,'0000000002' AS VOUCHER_TYPE    
     ,A.MEMO_ID AS REF_MEMO_ID    
     ,A.MEMO_DT AS REF_MEMO_DT    
     ,'PTCOUT' AS XN_TYPE
     
   INTO #V_PROCESS    
   FROM PCO_MST A     
   JOIN #POSTS PS ON A.MEMO_ID=PS.MEMO_ID AND PS.MODE='PTCOUT'    
   JOIN LOCATION LOCT ON LOCT.DEPT_ID=SUBSTRING(A.MEMO_NO,3,2)    
   LEFT OUTER JOIN LMV01106 D ON LOCT.CONTROL_AC_CODE = D.AC_CODE    
   LEFT OUTER JOIN AREA ON AREA.AREA_CODE=LOCT.AREA_CODE    
   LEFT OUTER JOIN CITY ON CITY.CITY_CODE=AREA.CITY_CODE    
   GROUP BY A.MEMO_NO,     
      A.MEMO_ID,     
      A.MEMO_DT ,    
      LOCT.DEPT_AC_CODE,     
      A.REMARKS,    
      A.AMOUNT,     
      a.location_Code ,     
      A.FIN_YEAR,    
      D.AC_NAME,ISNULL(TRANSFER_MODE,0),BANK_AC_CODE     
   UNION ALL    
   SELECT  A.MEMO_NO AS MEMO_NO,     
     A.MEMO_ID AS MEMO_ID,     
     A.MEMO_DT AS MEMO_DT,    
     LOCT.DEPT_AC_CODE, ---CREDIT    
     A.REMARKS,     
     A.AMOUNT AS AMOUNT    
     ,0 AS CANCELLED    
     ,SUBSTRING(A.MEMO_NO,3,2) AS DEPT_ID    
     ,A.FIN_YEAR    
     ,@CCASHAC AS XN_AC_CODE  --DEBIT     
     ,D.AC_NAME AS PARTY_NAME    
     ,'0000000003' AS VOUCHER_TYPE    
     ,A.MEMO_ID AS REF_MEMO_ID    
     ,A.MEMO_DT AS REF_MEMO_DT    
     ,'PTCIN' AS XN_TYPE
   FROM PCI_MST A     
   JOIN #POSTS PS ON A.MEMO_ID=PS.MEMO_ID AND PS.MODE='PTCIN'    
   JOIN LOCATION LOCT ON LOCT.DEPT_ID=SUBSTRING(A.MEMO_NO,1,2)    
   LEFT OUTER JOIN LMV01106 D ON LOCT.CONTROL_AC_CODE = D.AC_CODE    
   LEFT OUTER JOIN AREA ON AREA.AREA_CODE=LOCT.AREA_CODE    
   LEFT OUTER JOIN CITY ON CITY.CITY_CODE=AREA.CITY_CODE    
   WHERE ISNULL(REFLIFTID ,'')=''    
   GROUP BY A.MEMO_NO,     
      A.MEMO_ID,     
      A.MEMO_DT ,    
      LOCT.DEPT_AC_CODE,     
      A.REMARKS,    
      A.AMOUNT,     
      a.location_Code ,     
      A.FIN_YEAR,    
      D.AC_NAME    
  UNION ALL --------TILL PETTY CASH IN    
  SELECT  A.MEMO_NO AS MEMO_NO,     
     A.MEMO_ID AS MEMO_ID,     
     A.MEMO_DT AS MEMO_DT,    
     '0000000001' AS AC_CODE, ---CREDIT 
     A.REMARKS,     
     A.LIFT_AMOUNT AS AMOUNT    
     ,0 AS CANCELLED    
     ,SUBSTRING(A.MEMO_NO,1,2) AS DEPT_ID    
     ,A.FIN_YEAR    
     ,A.AC_CODE AS XN_AC_CODE  --DEBIT     
     ,D.AC_NAME AS PARTY_NAME    
     ,'0000000003' AS VOUCHER_TYPE    
     ,A.MEMO_ID AS REF_MEMO_ID    
     ,A.MEMO_DT AS REF_MEMO_DT    
     ,'TPTCIN' AS XN_TYPE
   FROM TILL_LIFTS A     
   JOIN #POSTS PS ON A.MEMO_ID=PS.MEMO_ID AND PS.MODE='TPTCIN'    
   JOIN LMV01106 D ON A.AC_CODE = D.AC_CODE    
   JOIN LOCATION LOCT ON LOCT.DEPT_ID=SUBSTRING(A.MEMO_NO,1,2)    
   JOIN AREA ON AREA.AREA_CODE=LOCT.AREA_CODE    
   JOIN CITY ON CITY.CITY_CODE=AREA.CITY_CODE    
   GROUP BY A.MEMO_NO,     
      A.MEMO_ID,     
      A.MEMO_DT ,    
      A.AC_CODE,     
      A.REMARKS,    
      A.LIFT_AMOUNT,     
      a.location_Code ,     
  A.FIN_YEAR,    
       D.AC_NAME                
  ORDER BY MEMO_DT,MEMO_ID    
  
  --SELECT 'VPROCESS',* FROM #V_PROCESS    
  CREATE INDEX IX_V_PROCESS_RM_ID ON #V_PROCESS(MEMO_ID,XN_TYPE)    
      
  SELECT @CMEMOID='',@CXNTYPE='',@CAC_CODE='',@NCTR=1    
  
  SET @CSTEP = 380    
  WHILE EXISTS(SELECT TOP 1 'U' FROM #V_PROCESS)    
  BEGIN    
   SET @CSTEP = 390    
   SELECT TOP 1 @CMEMOID=MEMO_ID,@CMEMONO=MEMO_NO,@CXNTYPE=XN_TYPE,@CAC_CODE=DEPT_AC_CODE
   FROM #V_PROCESS    
       
   IF @CXNTYPE='PTCOUT'    
   SET @CVOUCHERCODE = '0000000002'    
   ELSE    
   SET @CVOUCHERCODE = '0000000003'    
       
   SET @CSTEP = 400    
   -- PARTY ACCOUNT DR WITH  AMOUNT    
   INSERT @VCHC (XN_TYPE, AC_CODE, AMOUNT )    
   SELECT TOP 1 XN_TYPE , DEPT_AC_CODE,AMOUNT    
   FROM #V_PROCESS     
   WHERE MEMO_ID=@CMEMOID AND AMOUNT<>0 AND XN_TYPE=@CXNTYPE    
       
   SET @CSTEP = 410    
   --SALE A/C OR PURCHASE A/C CREDIT WITH SUBTOTAL AMOUNT    
   INSERT @VCHC (XN_TYPE, AC_CODE, AMOUNT )    
   SELECT XN_TYPE ,XN_AC_CODE,-AMOUNT     
   FROM #V_PROCESS     
   WHERE MEMO_ID=@CMEMOID AND AMOUNT<>0 AND XN_TYPE=@CXNTYPE       
         
   SET @CSTEP = 500    
   SET @CVMID = ''    
   SELECT @CVMID = A.VM_ID     
   FROM POSTACT_VOUCHER_LINK A    
      JOIN VM01106 B ON A.VM_ID=B.VM_ID     
   WHERE B.CANCELLED=0 AND A.MEMO_ID = @CMEMOID AND A.XN_TYPE=@CXNTYPE    
       
   SET @CSTEP = 510    
   IF ISNULL(@CVMID,'') = ''    
   BEGIN    
       SET @CVMID = 'LATER-'+RTRIM(LTRIM(CONVERT(VARCHAR,@NCTR)))    
    SET @NCTR = @NCTR+1    
   END    
       
   SET @CSTEP = 520    
   IF @CXNTYPE='PTCOUT'    
   BEGIN    
    INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )    
    SELECT @CVMID,@CMEMOID,@CXNTYPE,LAST_UPDATE FROM PCO_MST  WHERE MEMO_ID = @CMEMOID     
   END    
   ELSE IF @CXNTYPE='PTCIN'    
   BEGIN    
    INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )    
    SELECT @CVMID,@CMEMOID,@CXNTYPE,LAST_UPDATE FROM PCI_MST  WHERE MEMO_ID = @CMEMOID     
   END    
   ELSE IF @CXNTYPE='TPTCIN'    
   BEGIN    
    INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )    
    SELECT @CVMID,@CMEMOID,@CXNTYPE,LAST_UPDATE FROM TILL_LIFTS  WHERE MEMO_ID = @CMEMOID     
   END    
    
       
   SET @NSIGN=(CASE WHEN @CXNTYPE IN ('PTCOUT') THEN 1 ELSE -1 END)    
       
   SET @CSTEP = 530    
       
   INSERT @VDC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE,     
        CREDIT_DAYS, CR_DISCOUNT_PERCENTAGE,AC_NAME)    
   SELECT @CVMID    
    , 'LATER-'+CONVERT(VARCHAR,ROW_NUMBER() OVER(ORDER BY A.AC_CODE)) AS VD_ID    
    , A.AC_CODE    
    , XN_TYPE+' '+@CMEMONO +CASE WHEN XN_TYPE='TPTCIN' THEN ' (TILL TO PETTY CASH)' ELSE '' END AS NARRATION    
    ,(CASE WHEN SUM(AMOUNT)*(@NSIGN)>0 THEN ABS(SUM(AMOUNT)) ELSE 0 END) AS DEBIT_AMOUNT    
    ,(CASE WHEN SUM(AMOUNT)*(@NSIGN)<0 THEN ABS(SUM(AMOUNT)) ELSE 0 END) AS CREDIT_AMOUNT    
    ,(CASE WHEN SUM(AMOUNT)*(@NSIGN)> 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE    
    ,A.CRDAYS    
    ,0    
    ,B.AC_NAME    
         FROM @VCHC A    
         JOIN LMV01106 B ON A.AC_CODE = B.AC_CODE    
         GROUP BY XN_TYPE ,A.AC_CODE,A.XN_NO,B.AC_NAME,A.CRDAYS    
         ORDER BY X_TYPE,ABS(SUM(AMOUNT)) DESC    
       
         SET @CSTEP = 540    
         SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC    
      WHERE VM_ID = @CVMID    
          
      SET @CSTEP = 550        
         SET @CVOUCHERNO = ''     
         SELECT TOP 1 @CVOUCHERNO = VOUCHER_NO FROM VM01106 WHERE VM_ID = @CVMID    
         IF ISNULL(@CVOUCHERNO,'') = ''    
    SET @CVOUCHERNO = @CVMID    
             
         SET @CSTEP = 560    
         INSERT @VMC ( VM_ID,VOUCHER_NO,VOUCHER_DT, VOUCHER_CODE, DEPT_ID,     
         BILL_TYPE, BILL_NO, BILL_ID, BILL_DT,     
         PARTY_NAME, QUANTITY, NET_AMOUNT, RM_LIST, CANCELLED,DRTOTAL,CRTOTAL    
      )    
   SELECT @CVMID,@CVOUCHERNO,A.MEMO_DT,A.VOUCHER_TYPE,A.DEPT_ID    
      ,'PTF' AS BILL_TYPE,A.MEMO_NO,A.MEMO_ID,A.MEMO_DT    
      ,A.PARTY_NAME,0 AS QUANTITY,A.AMOUNT,A.MEMO_NO,A.CANCELLED,@NDRTOTAL,@NCRTOTAL    
   FROM #V_PROCESS A    
   WHERE A.MEMO_ID=@CMEMOID AND XN_TYPE=@CXNTYPE     
   GROUP BY A.MEMO_DT,A.VOUCHER_TYPE,A.DEPT_ID    
     ,A.MEMO_NO,A.MEMO_ID    
     ,A.PARTY_NAME,A.AMOUNT,A.CANCELLED    
       
       
   SET @CSTEP = 570    
   DELETE @VCHC    
      DELETE FROM #V_PROCESS WHERE MEMO_ID = @CMEMOID AND XN_TYPE=@CXNTYPE    
  END           
        
    SET @CSTEP = 580    
    SELECT * FROM @VMC ORDER BY VM_ID,BILL_DT,BILL_NO    
    SELECT * FROM @VDC ORDER BY VM_ID    
    SELECT * FROM @ERRORS    
    SELECT * FROM @VLINK ORDER BY VM_ID    
        
    --POSTACT_PTCXFR '2015-09-20'    
     
      
    END TRY    
 BEGIN CATCH    
   SELECT 'STEP:- '+@CSTEP+' '+ERROR_MESSAGE()AS  ERRMSG    
 END CATCH    
             
END   
--END OF PROCEDURE - POSTACT_PTF
