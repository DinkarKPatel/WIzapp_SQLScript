create PROCEDURE SAVETRAN_REMINDERS
(
	 @CFINYEAR CHAR(5)
	,@NSPID INT
	
)
--WITH ENCRYPTION
AS
BEGIN
	--changes by Dinkar in location id varchar(4)..
				DECLARE @CTEMPDBNAME   VARCHAR(100),  
						@CMASTERTABLENAME  VARCHAR(100),  
						@CDETAILTABLENAME  VARCHAR(100), 
						@CDETAILTABLENAME1  VARCHAR(100), 
						@CTEMPMASTERTABLENAME   VARCHAR(100),
						@CTEMPDETAILTABLENAME   VARCHAR(100),
						@CTEMPDETAILTABLENAME1   VARCHAR(100),
						@CTEMPMASTERTABLE VARCHAR(150),
						@CTEMPDETAILTABLE VARCHAR(150),
						@CTEMPDETAILTABLE1 VARCHAR(150),
						@CKEYFIELD1 VARCHAR(50),
						@CLOCATIONID CHAR(4),
						@NSTEP     INT,
						@NSAVETRANLOOP BIT,
						@CMEMONO VARCHAR(40),
						@CMEMONOVAL VARCHAR(20),
						@CKEYFIELDVAL1 VARCHAR(50),
						@CERRORMSG VARCHAR(MAX),
						@CCMD NVARCHAR(MAX),@cLocId char(4)
				
				SET @NSTEP = 10
				-- TEMPORARY DATABASE Discarded now onwards as per Meeting on 30-10-2020 mentioned in Client issues List
				SET @CTEMPDBNAME = ''
				
				SET @NSTEP = 60		
				SET @CMASTERTABLENAME = 'DEBTOR_REMINDER_MST'	
				SET @CDETAILTABLENAME = 'DEBTOR_REMINDER_DET'
				SET @CDETAILTABLENAME1 = 'DEBTOR_REMINDER_BILL_DET'
				
				SET @CTEMPMASTERTABLENAME	= 'TEMP_DEBTOR_REMINDER_MST_'+LTRIM(RTRIM(STR(@NSPID)))   
				SET @CTEMPDETAILTABLENAME	= 'TEMP_DEBTOR_REMINDER_DET_'+LTRIM(RTRIM(STR(@NSPID)))   
				SET @CTEMPDETAILTABLENAME1	= 'TEMP_DEBTOR_REMINDER_BILL_DET_'+LTRIM(RTRIM(STR(@NSPID)))   
				
				SET @CTEMPMASTERTABLE = @CTEMPDBNAME + @CTEMPMASTERTABLENAME  
				SET @CTEMPDETAILTABLE = @CTEMPDBNAME + @CTEMPDETAILTABLENAME   
				SET @CTEMPDETAILTABLE1 = @CTEMPDBNAME + @CTEMPDETAILTABLENAME1   
				
				
				SET @CKEYFIELD1 = 'MEMO_ID' 
				SET @CMEMONO = 'MEMO_NO' 
				
				SET @CCMD = 'SELECT @CLOCID = location_code  FROM '+@CTEMPMASTERTABLE
				EXEC SP_EXECUTESQL @CCMD, N'@CLOCID VARCHAR(4) OUTPUT', @CLOCID OUTPUT
				
				IF @cLocId=''
					SELECT @CLOCATIONID		= DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
				ELSE
					SET @CLOCATIONId=@cLocId
				
				BEGIN TRY
					BEGIN TRAN

					 IF ISNULL(@CLOCATIONID,'')=''
					 BEGIN
						SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' LOCATION ID CAN NOT BE BLANK  '  
						GOTO END_PROC    
					 END
				
					   SET @NSTEP = 80
					   ---GENRATING NEW MEMO_NO
					   SET @NSAVETRANLOOP=0  
					   WHILE @NSAVETRANLOOP=0  
					   BEGIN  
							
      						  
						    SET @NSTEP = 100  
							EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, 10, @CLOCATIONID, 1, @CFINYEAR,0,@CMEMONOVAL OUTPUT     
						      
							PRINT @CMEMONOVAL  
							SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+ @CMASTERTABLENAME +'   
													  WHERE '+@CMEMONO+'='''+@CMEMONOVAL+'''   
													  AND FIN_YEAR = '''+@CFINYEAR+''' )  
											SET @NLOOPOUTPUT=0  
										ELSE  
											SET @NLOOPOUTPUT=1'  
							PRINT @CCMD  
							EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT  
					   END  
					  
					   SET @NSTEP = 120
					   IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
					   BEGIN  
						  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'   
						  GOTO END_PROC      
					   END 
					   
					   SET @NSTEP = 150
					   
					  SET @CKEYFIELDVAL1 = @CLOCATIONID + RIGHT(@CFINYEAR,2)+REPLICATE('0', (22-LEN(@CLOCATIONID + RIGHT(@CFINYEAR,2)))-LEN(LTRIM(RTRIM(@CMEMONOVAL))))  + LTRIM(RTRIM(@CMEMONOVAL))
					   
					   PRINT @CKEYFIELDVAL1
					   
					   IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'    
					   BEGIN  
							  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'  
							  GOTO END_PROC  
					   END
					   					   
					   -- UPDATING NEWLY GENERATED MEMO_NO AND MEMO_ID INTO TEMPTABLE
					   SET @NSTEP = 200
					   SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' +   
						  @CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''''  
					   PRINT @CCMD  
					   EXEC SP_EXECUTESQL @CCMD  
					   
					   SET @NSTEP = 230
					   SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''''  
					   PRINT @CCMD  
					   EXEC SP_EXECUTESQL @CCMD
					   
					   SET @NSTEP = 240
					   SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''''  
					   PRINT @CCMD  
					   EXEC SP_EXECUTESQL @CCMD
					   
					   SET @NSTEP = 250		-- UPDATING MASTER TABLE

					  EXEC UPDATEMASTERXN 
					  @CSOURCEDB	= @CTEMPDBNAME
					, @CSOURCETABLE = @CTEMPMASTERTABLENAME
					, @CDESTDB		= ''
					, @CDESTTABLE	= @CMASTERTABLENAME
					, @CKEYFIELD1	= @CKEYFIELD1
					, @BALWAYSUPDATE = 1  
					
					
					SET @NSTEP = 300	-- UPDATING DETAIL TABLE
					EXEC UPDATEMASTERXN 
					  @CSOURCEDB	= @CTEMPDBNAME
					, @CSOURCETABLE = @CTEMPDETAILTABLENAME
					, @CDESTDB		= ''
					, @CDESTTABLE	= @CDETAILTABLENAME
					, @CKEYFIELD1	= 'ROW_ID'
					, @BALWAYSUPDATE = 1
					
					SET @NSTEP = 310	-- UPDATING DETAIL TABLE
					EXEC UPDATEMASTERXN 
					  @CSOURCEDB	= @CTEMPDBNAME
					, @CSOURCETABLE = @CTEMPDETAILTABLENAME1
					, @CDESTDB		= ''
					, @CDESTTABLE	= @CDETAILTABLENAME1
					, @CKEYFIELD1	= 'ROW_ID'
					, @BALWAYSUPDATE = 1
					    				
				END TRY
				BEGIN CATCH
						SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
						GOTO END_PROC
				END CATCH
				END_PROC:
				IF @@TRANCOUNT>0
				BEGIN
					IF ISNULL(@CERRORMSG,'')='' 
					BEGIN	
						COMMIT TRANSACTION
						SET @CCMD = N'IF OBJECT_ID( ''' +@CTEMPMASTERTABLE+ ''',''U'') IS NOT NULL    
											DROP TABLE ' +@CTEMPMASTERTABLE+'  
									  IF OBJECT_ID( ''' +@CTEMPDETAILTABLE+ ''',''U'') IS NOT NULL    
											DROP TABLE ' +@CTEMPDETAILTABLE+'  
									  IF OBJECT_ID( ''' +@CTEMPDETAILTABLE1+ ''',''U'') IS NOT NULL    
											DROP TABLE ' +@CTEMPDETAILTABLE1  		
						PRINT @CCMD
						EXEC SP_EXECUTESQL @CCMD 
					END
					ELSE
						ROLLBACK
				
				SELECT @CERRORMSG AS ERRMSG,@CKEYFIELDVAL1 AS MEMO_ID
			END
END
--END OF PROCEDURE - SAVETRAN_REMINDERS
