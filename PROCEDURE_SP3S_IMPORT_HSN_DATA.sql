create PROCEDURE SP3S_IMPORT_HSN_DATA 
@TAB VARCHAR(100),
@WEF DATETIME  ,
@USERCODE VARCHAR(10)=''
AS  
BEGIN  
SET NOCOUNT ON  
BEGIN TRY  
BEGIN TRAN
DECLARE @CMD NVARCHAR(MAX),@ERR VARCHAR(1000)  
SET @ERR=''
SET @CMD=N'UPDATE '+@TAB+' SET M_HSN_TYPE=REPLACE(REPLACE(M_HSN_TYPE,''HSN'',1),''SAC'',2)'  
PRINT @CMD+CHAR(13)
EXEC(@CMD)  


SET @CMD='UPDATE '+@TAB+' SET M_TAXABLE_ITEM=REPLACE(REPLACE(M_TAXABLE_ITEM,''FALSE'',0),''TRUE'',1)'  
PRINT @CMD+CHAR(13)
EXEC(@CMD)  


IF NOT EXISTS (SELECT TOP 1 fc_code from  LOCATION  WHERE ISNULL(fc_code,'') NOT IN('','0000000'))
BEGIN

    SET @CMD='UPDATE '+@TAB+' SET D_DEPT_ID='''' '
    PRINT @CMD+CHAR(13)
    EXEC(@CMD)  
END

SET @CMD=''  
SELECT @CMD=COALESCE(@CMD,'')+SUBSTRING(COLUMN_NAME,3,50)+', '   
FROM INFORMATION_SCHEMA.COLUMNS   
WHERE TABLE_NAME=@TAB AND COLUMN_NAME LIKE 'M_%' AND COLUMN_NAME NOT LIKE 'HSN_CODE'  
  
SET @CMD='MERGE HSN_MST AS T  
USING (SELECT DISTINCT M_HSN_CODE,M_HSN_TYPE,M_TAXABLE_ITEM,M_GST_VARIATION,M_DESCRIPTIONS,M_INACTIVE FROM ['+@TAB+'] WHERE M_HSN_CODE<>''0000000000'') AS S ON T.HSN_CODE=S.M_HSN_CODE    
WHEN NOT MATCHED THEN INSERT (HSN_CODE,HSN_TYPE,TAXABLE_ITEM,GST_VARIATION,DESCRIPTIONS,Inactive,last_update,dt_created, user_code) VALUES (S.M_HSN_CODE,S.M_HSN_TYPE,S.M_TAXABLE_ITEM,M_GST_VARIATION,M_DESCRIPTIONS,M_INACTIVE,getdate(), getdate(),'+@USERCODE+')
WHEN MATCHED THEN UPDATE SET T.HSN_TYPE=S.M_HSN_TYPE, T.TAXABLE_ITEM=S.M_TAXABLE_ITEM,T.GST_VARIATION=S.M_GST_VARIATION,T.DESCRIPTIONS=S.M_DESCRIPTIONS,T.INACTIVE=S.M_INACTIVE,last_update= getdate(),edt_user_code= '+@USERCODE+';'
PRINT @CMD+CHAR(13)  
EXEC(@CMD)  


SET @CMD='MERGE HSN_DET AS T  
USING (SELECT M_HSN_CODE,D_TAX_PERCENTAGE,D_RATE_CUTOFF,D_RATE_CUTOFF_TAX_PERCENTAGE,'''+REPLACE(CONVERT(VARCHAR,@WEF,102),'.','-')+''' D_WEF,D_DEPT_ID,M_GST_CAL_BASIS,D_Rate_CutOff_Gst_Cess_Percentage,D_Gst_Cess_Percentage FROM ['+@TAB+']) AS S ON T.HSN_CODE=S.M_HSN_CODE AND T.WEF=S.D_WEF AND T.DEPT_ID=S.D_DEPT_ID
WHEN NOT MATCHED THEN INSERT (HSN_CODE, TAX_PERCENTAGE, RATE_CUTOFF, RATE_CUTOFF_TAX_PERCENTAGE, WEF, ROW_ID,DEPT_ID,GST_CAL_BASIS,Rate_CutOff_Gst_Cess_Percentage,Gst_Cess_Percentage) VALUES (S.M_HSN_CODE, ISNULL(S.D_TAX_PERCENTAGE,0), ISNULL(S.D_RATE_CUTOFF,0), ISNULL(S.D_RATE_CUTOFF_TAX_PERCENTAGE,0), S.D_WEF, NEWID(),S.D_DEPT_ID,S.M_GST_CAL_BASIS,ISNULL(S.D_Rate_CutOff_Gst_Cess_Percentage,0),ISNULL(S.D_Gst_Cess_Percentage,0))
WHEN MATCHED THEN UPDATE SET T.TAX_PERCENTAGE=ISNULL(S.D_TAX_PERCENTAGE,0), T.RATE_CUTOFF=ISNULL(S.D_RATE_CUTOFF,0), T.RATE_CUTOFF_TAX_PERCENTAGE=ISNULL(S.D_RATE_CUTOFF_TAX_PERCENTAGE,0),T.DEPT_ID=S.D_DEPT_ID,T.GST_CAL_BASIS=S.M_GST_CAL_BASIS,T.Rate_CutOff_Gst_Cess_Percentage=Rate_CutOff_Gst_Cess_Percentage,T.Gst_Cess_Percentage=ISNULL(S.D_Gst_Cess_Percentage,0);'
PRINT @CMD+CHAR(13)
EXEC(@CMD)  

SET @CMD='DROP TABLE ['+@TAB+']'  
PRINT @CMD+CHAR(13)
EXEC(@CMD)   

  IF @@TRANCOUNT>0 AND @ERR=''
     COMMIT
  ELSE
     ROLLBACK   
END TRY  
  
BEGIN CATCH  
IF @@ERROR<>0  
   BEGIN  
     IF ERROR_MESSAGE() LIKE '%UNQ_HSN_CODE_WEF%'
        SET @ERR='DUPLICATE HSN_CODE FOR SINGLE DATE BE FOUNDED TO BE INSERTED INTO TABLE HSN_DET'
     ELSE
        SET @ERR=CAST(@@ERROR AS VARCHAR)+' - '+ERROR_MESSAGE()
     RAISERROR(@ERR,16,1)  
     ROLLBACK TRAN    
   END  
ELSE  
   COMMIT TRAN     
END CATCH  
SELECT @ERR AS ERRMSG  
SET NOCOUNT OFF  
END
