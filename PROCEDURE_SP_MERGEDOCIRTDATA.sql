CREATE PROCEDURE SP_MERGEDOCIRTDATA
(
	@CXNID VARCHAR(50)
)
--WITH ENCRYPTION
AS
BEGIN
	BEGIN TRY
		
		DECLARE @CERRORMSG VARCHAR(1000),@CCURDEPTID CHAR(2),@CHODEPTID CHAR(2),@CCMD NVARCHAR(MAX),
				@CXNMASTERTABLENAME VARCHAR(100),@BPROCEED BIT,@CTABLENAME VARCHAR(100),@CMASTERKEYFIELD VARCHAR(100),
				@CKEYFIELD VARCHAR(100),@CPARENTTABLENAME VARCHAR(100),@CPARENTPARANAME VARCHAR(100),@CCHILDPARANAME VARCHAR(100),
				@CWHERECLAUSE VARCHAR(100),@CJOINSTR VARCHAR(1000),@CMEMOID VARCHAR(100),@CFINYEAR VARCHAR(100),
				@NGRPCHARS INT,@NSERIESCHARS INT,@BSERIESBROKEN BIT,@CPREVMEMOID VARCHAR(40),@CMERGETABLENAME VARCHAR(50),
				@CFIRSTMEMOID VARCHAR(40),@NPREVMEMOID INT,@NMEMONOLEN INT,@CRETCMD NVARCHAR(MAX),
				@CDELCHILDTABLENAME VARCHAR(100),@CDELCHILDPARANAME VARCHAR(100),@CDELPARENTPARANAME VARCHAR(100),
				@CORIGINALTABLENAME VARCHAR(100),@NLOCTYPE INT,@BDONOTMERGE BIT,@CRFXNTYPE VARCHAR(10),
				@BINSERTONLY BIT,@BLINKEDMASTER BIT,@BPURLOC BIT,@CSOURCELOCID CHAR(2),@BSOURCEPURLOC BIT,
				@CMISSINGMEMOID VARCHAR(40),@CGRPCODE VARCHAR(20),@BRETVAL BIT,@NPREVNO INT,@CPREVNO VARCHAR(20),
				@BEMPHEADSUPDATED BIT,@CFILTERCONDITION VARCHAR(100),@CTABLEPREFIX VARCHAR(100),@CXNTYPE VARCHAR(10),
				@NXNSMERGINGORDER INT,@NSTEP INT,@CUNQCOLUMNNAME1 VARCHAR(100),@CUNQCOLUMNNAME2 VARCHAR(100),
				@CKEYFIELD2 VARCHAR(100),@CSOURCETEMPTABLE VARCHAR(100)
		
		SET @NSTEP=10
		
		DECLARE @TRETMSG TABLE  (MEMO_ID VARCHAR(40),ERRMSG VARCHAR(MAX))

		BEGIN TRANSACTION
		
		SET @CCMD=N'IF OBJECT_ID(''TMP_DOCIRT_SKU_'+LTRIM(RTRIM(@CXNID))+''',''U'') IS NULL
					SET @BPROCEEDOUT=0'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@BPROCEEDOUT BIT OUTPUT',@BPROCEEDOUT=@BPROCEED OUTPUT
		
		IF @BPROCEED=0
		BEGIN	
			SET @CERRORMSG='NO DATA FOUND TO BE MERGED FOR ITEM RATE REVISION.'
			GOTO LBLLAST
		END	
		
		SET @CCMD=N'IF NOT EXISTS(SELECT TOP 1 A.PRODUCT_CODE FROM SKU A
							   JOIN TMP_DOCIRT_SKU_'+LTRIM(RTRIM(@CXNID))+' B ON A.PRODUCT_CODE=B.PRODUCT_CODE)
					SET @BPROCEEDOUT=0'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@BPROCEEDOUT BIT OUTPUT',@BPROCEEDOUT=@BPROCEED OUTPUT
		
		DELETE FROM IRD01106 WHERE IRM_MEMO_ID = @CXNID--NEW ADD UNMERGED DATE: 02-05-2014
		
		IF @BPROCEED=0
		BEGIN	
			SET @CERRORMSG=''--'NO DATA FOUND TO BE MERGED FOR ITEM RATE REVISION.'
			GOTO LBLLAST
		END	
			
		SELECT @CERRORMSG='',@BPROCEED=1,@NMEMONOLEN=10,@CRETCMD='',@CMEMOID='',@CXNTYPE='DOCIRT',@BEMPHEADSUPDATED=0
		
		SET @CTABLEPREFIX='TMP_DOCIRT'
		
		SET @NSTEP=20
		
		SET @CFILTERCONDITION=''

		SELECT @CCURDEPTID = VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='LOCATION_ID'
						
		SELECT @NLOCTYPE=LOC_TYPE,@BPURLOC=PUR_LOC FROM LOCATION (NOLOCK) WHERE DEPT_ID=@CCURDEPTID
		
		SET @CMEMOID='TMP_DOCIRT'
	
	LBLMERGEBEFORE:
		
		--- DELETING ENTRIES FROM TEMP TABLE WHICH ARE NOT RELEVANT FOR CURRENT LOCATION
		SET @NSTEP=30		
		SET @CCMD=N'DELETE A FROM '+@CTABLEPREFIX+'_'+'SKU_'+LTRIM(RTRIM(@CXNID))+' A
					LEFT OUTER JOIN SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE
					WHERE B.PRODUCT_CODE IS NULL'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @NSTEP=40		
		SET @CCMD=N'IF OBJECT_ID(''TMP_DOCIRT_IRD01106_'+LTRIM(RTRIM(@CXNID))+''',''U'') IS NOT NULL
					DELETE A FROM '+@CTABLEPREFIX+'_'+'IRD01106_'+LTRIM(RTRIM(@CXNID))+' A
					LEFT OUTER JOIN '+@CTABLEPREFIX+'_'+'SKU_'+LTRIM(RTRIM(@CXNID))+' B ON A.PRODUCT_CODE=B.PRODUCT_CODE
					WHERE B.PRODUCT_CODE IS NULL'

		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @NSTEP=50		
		SET @CCMD=N'UPDATE '+@CTABLEPREFIX+'_'+'SKU_'+LTRIM(RTRIM(@CXNID))+' SET PURCHASE_PRICE=SKU.PURCHASE_PRICE
					FROM SKU WHERE SKU.PRODUCT_CODE='+@CTABLEPREFIX+'_SKU_'+LTRIM(RTRIM(@CXNID))+'.PRODUCT_CODE'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		IF @NLOCTYPE=2
		BEGIN
			SET @NSTEP=52		
			SET @CCMD=N'UPDATE A SET FORM_ID=ISNULL(B.FORM_ID,''0000000'')
						FROM '+@CTABLEPREFIX+'_'+'SKU_'+LTRIM(RTRIM(@CXNID))+' A LEFT OUTER JOIN
						SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE'
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
		END
		
		SET @NSTEP=55
		SET @CCMD=N'UPDATE '+@CTABLEPREFIX+'_IRM01106_'+LTRIM(RTRIM(@CXNID))+' SET USER_CODE=''0000000'',EDT_USER_CODE=''0000000'''
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
		SET @NSTEP=60		
		SET @CCMD=N'DELETE A FROM ART_ATTR A JOIN '+@CTABLEPREFIX+'_'+'ARTICLE_'+LTRIM(RTRIM(@CXNID))+' B
					ON A.ARTICLE_CODE=B.ARTICLE_CODE'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		
	LBLMERGE:
		
		SET @NSTEP=70
		
		IF CURSOR_STATUS('GLOBAL','MERGECUR') IN (0,1)  
		BEGIN  
		   CLOSE MERGECUR  
		   DEALLOCATE MERGECUR  
		END  
		
		--- NOW, UPDATE TRANSACTIONS DATA ONE BY ONE
		DECLARE MERGECUR CURSOR FOR 
		SELECT  DISTINCT TABLENAME, KEYFIELD,LINKED_MASTER,XNS_MERGING_ORDER 
		FROM XNSINFO (NOLOCK) 
		WHERE XN_TYPE = @CXNTYPE 
		AND   XNS_MERGING_ORDER <> 99 
		ORDER BY XNS_MERGING_ORDER
		
		OPEN MERGECUR
		FETCH NEXT FROM MERGECUR INTO @CTABLENAME,@CKEYFIELD,@BLINKEDMASTER,@NXNSMERGINGORDER		
		WHILE @@FETCH_STATUS=0
		BEGIN
			
			SET @NSTEP=80	
			
			LBLSTARTMERGE:
			SET @BPROCEED=1
			
			SET @CCMD=N'IF NOT EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME=''TMP_' + @CXNTYPE + '_' + @CTABLENAME + '_' + LTRIM(RTRIM(@CXNID))+''')
							SET @BPROCEEDOUT=0'
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD,N'@BPROCEEDOUT BIT OUTPUT',@BPROCEEDOUT=@BPROCEED OUTPUT
			
			
			SET @NSTEP=90
			
			IF @BPROCEED=0
				GOTO LBLMERGENEXT
		
			SET @BINSERTONLY=0
			
			SET @NSTEP=100		
			
			IF @CTABLENAME='ART_ATTR'
				SELECT @CKEYFIELD='ARTICLE_CODE',@CKEYFIELD2='ATTRIBUTE_CODE',@BINSERTONLY=1
			ELSE
				SELECT @CKEYFIELD2='',@BINSERTONLY=0
			
			SET @CSOURCETEMPTABLE=@CTABLEPREFIX+'_'+ @CTABLENAME + '_' + LTRIM(RTRIM(@CXNID))
			
			EXEC UPDATEMASTERXN_MERGING
			@CSOURCEDB='',
			@CSOURCETABLE=@CSOURCETEMPTABLE,
			@CDESTDB='',
			@CDESTTABLE=@CTABLENAME,
			@CKEYFIELD1=@CKEYFIELD,
			@CKEYFIELD2=@CKEYFIELD2,
			@CKEYFIELD3='',
			@LINSERTONLY=@BINSERTONLY,
			@LUPDATEONLY=0,
			@BALWAYSUPDATE=1,
			@CFILTERCONDITION='',
			@CERRORMSG = @CERRORMSG OUTPUT 
					
			IF @CERRORMSG<>''
				BREAK
			
			SET @NSTEP=80
			
			LBLMERGENEXT:
			
			FETCH NEXT FROM MERGECUR INTO @CTABLENAME,@CKEYFIELD,@BLINKEDMASTER,@NXNSMERGINGORDER		
		END
		CLOSE MERGECUR
		DEALLOCATE MERGECUR
			
		SET @NSTEP=90
		
		-- DELETING FROM TEMP TABLES
		
		EXEC SP_DROPTEMPTABLES_XNS @CXNTYPE,0,@CXNID,'TMP_DOCIRT'
		
		SET @CRETCMD='SELECT '''+@CMEMOID+''' AS MEMO_ID,'''+@CERRORMSG+''' AS ERRMSG'	
		
	LBLLAST:
		
		SET @NSTEP=100
		
		--- ON SUCCESSFUL MERGING , DELETE ENTRY FROM XN HISTORY 		
		IF @CERRORMSG=''
		BEGIN
			IF @@TRANCOUNT>0
			BEGIN
				PRINT 'SUCCESS'
				COMMIT TRANSACTION
			END	
		END
		ELSE
		BEGIN
			IF @@TRANCOUNT>0
				ROLLBACK 	
		END	
		
		SET @NSTEP=110
		
		INSERT @TRETMSG
		SELECT 'DOCIRT',@CERRORMSG
		
		SELECT * FROM @TRETMSG
		
		
	END TRY
	BEGIN CATCH
		
		PRINT 'UNTRAPPED ERROR'		
		SELECT @CERRORMSG='PROCEDURE : '+ISNULL(ERROR_PROCEDURE(),'SP_MERGEDOCIRTDATA')+'STEP: '+STR(@NSTEP)+' LINE NO. :'+
		ISNULL(LTRIM(RTRIM(STR(ERROR_LINE()))),'NULL LINE')+'MSG :'+ISNULL(ERROR_MESSAGE(),'NULL MSG')
		
		SET @CRETCMD='SELECT '''' AS MEMO_ID,'''''+@CERRORMSG+''''' AS ERRMSG'
		
		PRINT 'RETURN VALUE : '+ISNULL(@CRETCMD,'NULL RETCMD')+@CMEMOID
		--EXEC SP_EXECUTESQL @CRETCMD
		
		INSERT @TRETMSG
		SELECT 'DOCIRT',@CERRORMSG
		
		SELECT * FROM @TRETMSG
		
		
		IF @@TRANCOUNT>0
			ROLLBACK		
			

		IF CURSOR_STATUS('GLOBAL','MSTCUR') IN (0,1)
		BEGIN
			CLOSE MSTCUR
			DEALLOCATE MSTCUR
		END

		IF CURSOR_STATUS('GLOBAL','MERGECUR') IN (0,1)
		BEGIN
			CLOSE MERGECUR
			DEALLOCATE MERGECUR
		END
		
		EXEC SP_DROPTEMPTABLES_XNS @CXNTYPE,0,@CXNID,'TMP_DOCIRT'	
	END CATCH
END
--- END OF CREATING PROCEDURE SP_MERGEDOCIRTDATA
