CREATE PROCEDURE SP3S_SALE_ACHIEVED
(
	 @DONDATE DATETIME		 /*DATE TILL WHICH SALE SHOULD BE CONSIDERED STARTING FROM START OF MONTH OF THIS DATE*/
	,@CDEPT_ID VARCHAR(MAX)='' /*EITHER FOR ALL LOCATION OR FOR SELECTED LOCATION SINGLE LOCATION*/	
)	
--WITH ENCRYPTION
AS
BEGIN
	DECLARE @DFROMDT DATETIME,@DTODATE DATETIME,@NMONTH NUMERIC(2),@NYEAR NUMERIC(4),@CFINYEAR VARCHAR(5)
	,@CCMD NVARCHAR(MAX),@NPRE_YEAR NUMERIC(4),@CDIVFACTOR VARCHAR(10)
	
	SET @DTODATE=CONVERT(DATETIME,CONVERT(VARCHAR(10),@DONDATE,110))
	SET @NMONTH=MONTH(@DTODATE)
	SET @NYEAR=YEAR(@DTODATE)
	SET @NPRE_YEAR=@NYEAR-1
	SET @DFROMDT=LTRIM(RTRIM(STR(@NYEAR)))+'-'+LTRIM(RTRIM(STR(@NMONTH)))+'-01'
	SET @CFINYEAR='01'+DBO.FN_GETFINYEAR(@DTODATE)  
	
	SELECT TOP 1 @CDIVFACTOR=LTRIM(RTRIM(VALUE)) FROM CONFIG 
	WHERE CONFIG_OPTION='DIV_FACTOR'
	
	IF ISNULL(@CDIVFACTOR,0) IN ('',0)
		SET @CDIVFACTOR=1
	
	--SELECT @DTODATE,@NMONTH,@NYEAR,@NPRE_YEAR,@DFROMDT,@CFINYEAR
	
	IF OBJECT_ID('TEMPDB..#MONTH_TARGET','U') IS NOT NULL
		DROP TABLE #MONTH_TARGET
		
	IF OBJECT_ID('TEMPDB..#YEAR_TARGET','U') IS NOT NULL
		DROP TABLE #YEAR_TARGET	
	
	IF OBJECT_ID('TEMPDB..#ACTUAL_SALE','U') IS NOT NULL
		DROP TABLE #ACTUAL_SALE
		
	IF OBJECT_ID('TEMPDB..#ACHIEVED_SALE','U') IS NOT NULL
		DROP TABLE #ACHIEVED_SALE
	
	CREATE TABLE #MONTH_TARGET(DEPT_ID VARCHAR(5),TARGET_AMOUNT NUMERIC(18,2))
	CREATE TABLE #YEAR_TARGET(DEPT_ID VARCHAR(5),TARGET_AMOUNT NUMERIC(18,2))
	CREATE TABLE #ACTUAL_SALE(DEPT_ID VARCHAR(5),CD_SALE_AMOUNT NUMERIC(18,2),CM_SALE_AMOUNT NUMERIC(18,2),CUM_SALE_AMOUNT NUMERIC(18,2))
	CREATE TABLE #ACHIEVED_SALE(DEPT_ID VARCHAR(5),DAY_SALE NUMERIC(18,2),CM_TARGET NUMERIC(18,2),CM_SALE NUMERIC(18,2),CM_ACH NUMERIC(18,2)
							   ,CM_SHORTFALL NUMERIC(18,2),YTD_TARGET NUMERIC(18,2),YTD_SALE NUMERIC(18,2)
							   ,YTD_ACH NUMERIC(18,2),YTD_SHORTFALL NUMERIC(18,2))
	
	--GETTING TARGET SET FOR THIS MONTH
	SET @CCMD=N'SELECT A.DEPT_ID,A.TARGET_AMOUNT 
				FROM LOC_SALE_TARGET A (NOLOCK)
				JOIN LOCATION B (NOLOCK) ON A.DEPT_ID=B.DEPT_ID
				WHERE B.INACTIVE=0 AND A.FIN_YEAR='''+@CFINYEAR+''' AND A.TARGET_MONTH='''+LTRIM(RTRIM(STR(@NMONTH)))+'''
				'+(CASE WHEN @CDEPT_ID='' THEN '' ELSE ' AND  A.DEPT_ID IN ('+@CDEPT_ID+')' END) 
	PRINT @CCMD
	
	INSERT #MONTH_TARGET(DEPT_ID,TARGET_AMOUNT)
	EXEC SP_EXECUTESQL @CCMD
	
	--GETTING CUMULATIVE TARGET SET FOR THE FINANCIAL YEAR	
	IF @NMONTH>3
	BEGIN
		SET @CCMD=N'SELECT A.DEPT_ID,SUM(A.TARGET_AMOUNT) 
					FROM LOC_SALE_TARGET A (NOLOCK)
					JOIN LOCATION B (NOLOCK) ON A.DEPT_ID=B.DEPT_ID
					WHERE B.INACTIVE=0 AND A.FIN_YEAR='''+@CFINYEAR+''' AND A.TARGET_MONTH<='''+LTRIM(RTRIM(STR(@NMONTH)))+'''
					AND A.TARGET_YEAR='''+LTRIM(RTRIM(STR(@NYEAR)))+'''
					'+(CASE WHEN @CDEPT_ID='' THEN '' ELSE ' AND  A.DEPT_ID IN ('+@CDEPT_ID+')' END) 
					+' GROUP BY A.DEPT_ID'
	END
	ELSE
	BEGIN
			SET @CCMD=N'SELECT T.DEPT_ID,SUM(T.TARGET_AMOUNT) AS TARGET_AMOUNT
						FROM
						(
							SELECT A.DEPT_ID,SUM(A.TARGET_AMOUNT) AS TARGET_AMOUNT
							FROM LOC_SALE_TARGET A (NOLOCK)
							JOIN LOCATION B (NOLOCK) ON A.DEPT_ID=B.DEPT_ID
							WHERE B.INACTIVE=0 AND A.FIN_YEAR='''+@CFINYEAR+''' AND A.TARGET_MONTH<='''+LTRIM(RTRIM(STR(@NMONTH)))+'''
							AND A.TARGET_YEAR='''+LTRIM(RTRIM(STR(@NYEAR)))+''''+(CASE WHEN @CDEPT_ID='' THEN '' ELSE ' AND  A.DEPT_ID IN ('+@CDEPT_ID+')' END) 
							+' GROUP BY A.DEPT_ID
							UNION ALL
							SELECT A.DEPT_ID,SUM(A.TARGET_AMOUNT) AS TARGET_AMOUNT 
							FROM LOC_SALE_TARGET A (NOLOCK)
							JOIN LOCATION B (NOLOCK) ON A.DEPT_ID=B.DEPT_ID
							WHERE B.INACTIVE=0 AND A.FIN_YEAR='''+@CFINYEAR+''' AND A.TARGET_MONTH>=4
							AND A.TARGET_YEAR='''+RTRIM(LTRIM(STR(@NPRE_YEAR)))+''''+(CASE WHEN @CDEPT_ID='' THEN '' ELSE ' AND  A.DEPT_ID IN ('+@CDEPT_ID+')' END) 
							+' GROUP BY A.DEPT_ID
						)T GROUP BY T.DEPT_ID'
	END
	
	PRINT @CCMD
	INSERT #YEAR_TARGET(DEPT_ID,TARGET_AMOUNT)
	EXEC SP_EXECUTESQL @CCMD
	
	SET @CCMD=N'SELECT LOC.DEPT_ID 
			   ,SUM(CASE WHEN CMM.CM_DT='''+CONVERT(VARCHAR(10),@DTODATE,110)+''' THEN CMD.RFNET ELSE 0 END) AS CD_SALE_AMOUNT
			   ,SUM(CASE WHEN CMM.CM_DT BETWEEN '''+CONVERT(VARCHAR(10),@DFROMDT,110)+''' AND '''+CONVERT(VARCHAR(10),@DTODATE,110)+''' THEN CMD.RFNET ELSE 0 END) AS CM_SALE_AMOUNT
			   ,SUM(CMD.RFNET) AS CUM_SALE_AMOUNT			  
	 FROM CMM01106 CMM (NOLOCK)  
	 JOIN CMD01106 CMD (NOLOCK) ON CMM.CM_ID=CMD.CM_ID
	 JOIN LOCATION LOC (NOLOCK) ON LEFT(CMM.CM_ID,2)=LOC.DEPT_ID
	 WHERE LOC.INACTIVE=0 
	 AND CM_DT<='''+CONVERT(VARCHAR(10),@DTODATE,110)+''' AND FIN_YEAR='''+@CFINYEAR+''' AND CMM.CANCELLED=0 AND CM_MODE=1 ' 
	 +(CASE WHEN @CDEPT_ID='' THEN '' ELSE ' AND  LOC.DEPT_ID IN ('+@CDEPT_ID+')' END) +'
	 GROUP BY LOC.DEPT_ID'
	
	PRINT @CCMD
	
	INSERT #ACTUAL_SALE(DEPT_ID,CD_SALE_AMOUNT,CM_SALE_AMOUNT,CUM_SALE_AMOUNT)
	EXEC SP_EXECUTESQL @CCMD
	
	INSERT #ACHIEVED_SALE(DEPT_ID,DAY_SALE,CM_TARGET,CM_SALE,CM_ACH,CM_SHORTFALL,YTD_TARGET
						 ,YTD_SALE,YTD_ACH,YTD_SHORTFALL)
	SELECT COALESCE(MT.DEPT_ID,YT.DEPT_ID,SLS.DEPT_ID) AS DEPT_ID
		  ,ISNULL(SLS.CD_SALE_AMOUNT,0) AS CD_SALE_AMOUNT
		  ,ISNULL(MT.TARGET_AMOUNT,0) AS CM_TARGET
		  ,ISNULL(SLS.CM_SALE_AMOUNT,0) AS CM_SALE
		  ,(CASE WHEN ISNULL(MT.TARGET_AMOUNT,0)=0 THEN 0 
				 ELSE (ISNULL(SLS.CM_SALE_AMOUNT,0)/ISNULL(MT.TARGET_AMOUNT,0))*100 END) AS CM_ACH
		  ,(CASE WHEN ISNULL(MT.TARGET_AMOUNT,0)>ISNULL(SLS.CM_SALE_AMOUNT,0) THEN ISNULL(MT.TARGET_AMOUNT,0)-ISNULL(SLS.CM_SALE_AMOUNT,0) ELSE 0 END)
		    AS CM_SHORTFALL		 	
		    
		  ,ISNULL(YT.TARGET_AMOUNT,0) AS YTD_TARGET
		  ,ISNULL(SLS.CUM_SALE_AMOUNT,0) AS YTD_SALE
		  ,(CASE WHEN ISNULL(YT.TARGET_AMOUNT,0)=0 THEN 0 
				 ELSE (ISNULL(SLS.CUM_SALE_AMOUNT,0)/ISNULL(YT.TARGET_AMOUNT,0))*100 END) AS YTD_ACH
		  ,(CASE WHEN ISNULL(YT.TARGET_AMOUNT,0)>ISNULL(SLS.CUM_SALE_AMOUNT,0) THEN ISNULL(YT.TARGET_AMOUNT,0)-ISNULL(SLS.CUM_SALE_AMOUNT,0) ELSE 0 END)
		    AS YTD_SHORTFALL		 	  
	FROM #MONTH_TARGET MT
	FULL JOIN #YEAR_TARGET YT ON MT.DEPT_ID=YT.DEPT_ID
	FULL JOIN #ACTUAL_SALE SLS ON (YT.DEPT_ID=SLS.DEPT_ID OR MT.DEPT_ID=SLS.DEPT_ID)
	
	SELECT A.DEPT_ID
		  ,B.DEPT_NAME
		  ,B.AREA_NAME
		  ,B.CITY
		  ,B.STATE	
		  ,CONVERT(NUMERIC(18),A.DAY_SALE/@CDIVFACTOR) AS DAY_SALE
		  ,CONVERT(NUMERIC(18),A.CM_TARGET/@CDIVFACTOR) AS CM_TARGET
		  ,CONVERT(NUMERIC(18),A.CM_SALE/@CDIVFACTOR) AS CM_SALE
		  ,CONVERT(NUMERIC(18),A.CM_ACH) AS CM_ACH
		  ,CONVERT(NUMERIC(18),A.CM_SHORTFALL/@CDIVFACTOR) AS CM_SHORTFALL
		  ,CONVERT(NUMERIC(18),A.YTD_TARGET/@CDIVFACTOR) AS YTD_TARGET
		  ,CONVERT(NUMERIC(18),A.YTD_SALE/@CDIVFACTOR) AS YTD_SALE
		  ,CONVERT(NUMERIC(18),A.YTD_ACH) AS YTD_ACH
		  ,CONVERT(NUMERIC(18),A.YTD_SHORTFALL/@CDIVFACTOR) AS YTD_SHORTFALL
		  ,C.*
	FROM #ACHIEVED_SALE A
	JOIN LOC_VIEW B ON A.DEPT_ID=B.DEPT_ID
	LEFT OUTER JOIN LOC_ATTR_VALUE C ON B.DEPT_ID= C.DEPT_ID	
END
--END OF PROCEUDRE - SP3S_SALE_ACHIEVED
