CREATE PROCEDURE SP_WL_SALESETUP      
(      
 @NQUERY    NUMERIC(2),      
 @CWHERE    VARCHAR(MAX),     
 @CROWID    VARCHAR(100),       
 @NNAVMODE  NUMERIC(2),
 @NSETUPMODE	NUMERIC(2),
 @CWHERECLAUSE VARCHAR(MAX)=''
)
--WITH ENCRYPTION      
AS      
BEGIN      
    
IF @NQUERY=1      
GOTO LBLNAV      
ELSE IF @NQUERY=2      
GOTO LBLMST      
ELSE IF @NQUERY=3      
GOTO LBLDET      
ELSE IF @NQUERY=4      
GOTO LBLBC      
ELSE IF @NQUERY=5      
GOTO LBLLOC     
ELSE IF @NQUERY=6      
GOTO LBLALLLOC    
ELSE IF @NQUERY=7      
GOTO LBLSCAN      

ELSE IF @NQUERY=8      
GOTO LBLART 

ELSE IF @NQUERY=9      
GOTO LBLARTLIST              
ELSE IF @NQUERY=10      
GOTO LBLSCHEMEDET
ELSE IF @NQUERY=11      
GOTO LBLSCHEMEHH

LBLNAV:    
      
  DECLARE @CCMD NVARCHAR(MAX)    
  SET @CCMD = N'SELECT TOP 1 SLS_MEMO_NO      
  FROM SLSMST WHERE '+      (CASE WHEN @NSETUPMODE=2 THEN ' SETUP_MODE = 2 ' ELSE ' (SETUP_MODE >=0 AND SETUP_MODE <2) ' END)+
  (CASE WHEN @NNAVMODE IN(2,3,0) THEN ' AND  SLS_MEMO_NO '+      
  (CASE WHEN @NNAVMODE=2 THEN '<'       
     WHEN @NNAVMODE=3 THEN '>'       
     ELSE '='  END)+''''+@CWHERE+'''' ELSE '' END)+  
   (CASE WHEN @NNAVMODE IN (2,3,0) AND ISNULL(@CWHERECLAUSE,'')<>''  THEN ' AND '+ @CWHERECLAUSE
   WHEN @CWHERECLAUSE<>'' THEN +' AND '+@CWHERECLAUSE ELSE '' END)+      
  ' ORDER BY SLS_MEMO_NO '+(CASE WHEN @NNAVMODE IN (1,3) THEN ' ASC ' ELSE ' DESC ' END)       

  PRINT @CCMD            
  EXEC SP_EXECUTESQL @CCMD     
        
  GOTO ENDPROC      
     
     
LBLMST:      
    
  SELECT * 
  FROM SLSMST       
  WHERE SLS_MEMO_NO=@CWHERE      
      
  GOTO ENDPROC      
     
LBLDET:      
    
  SELECT A.*,(CASE WHEN A.SCHEME_ID='SLS-001' THEN 'BUY MORE PAY LESS' 
					WHEN A.SCHEME_ID='SLS-002' THEN 'HAPPY HOURS'  ELSE ISNULL(B.BUNDLE_NAME,'')END) AS BUNDLE_NAME  
  FROM SLSDET A  
  LEFT OUTER JOIN BUNDLEM B   ON  A.SCHEME_ID = B.BUNDLE_ID   
  WHERE SLS_MEMO_NO=@CWHERE    
  ORDER BY SLS_GROUP,SLS_ORDER    
      
  GOTO ENDPROC     
      
LBLBC:      
    
  SELECT A.*,D.ARTICLE_NO,C.MRP 
  FROM SLSBC A      
  JOIN SKU C ON C.PRODUCT_CODE=A.PRODUCT_CODE
  JOIN ARTICLE D ON D.ARTICLE_CODE=C.ARTICLE_CODE
  WHERE A.SLS_MEMO_NO=@CWHERE
      
  GOTO ENDPROC      
     
LBLLOC:      
    
  SELECT A.*,B.DEPT_NAME +' ('+b.dept_alias+')' AS DEPT_NAME
  FROM LOCSLSSET A      
  JOIN LOCATION B ON A.DEPT_ID=B.DEPT_ID     
  LEFT OUTER JOIN AREA AR ON AR.area_code=B.area_code
  LEFT OUTER JOIN CITY CT ON CT.CITY_CODE=AR.city_code 
  WHERE A.SLS_MEMO_NO=@CWHERE      
      
  GOTO ENDPROC      
      
LBLALLLOC:      
    
  SELECT CAST(0 AS BIT) AS [CHK],DEPT_ID, DEPT_NAME  +' ('+dept_alias+')'     AS DEPT_NAME
     FROM LOCATION     
     WHERE DEPT_ID = MAJOR_DEPT_ID AND INACTIVE=0    
     ORDER BY DEPT_ID ASC     
      
  GOTO ENDPROC     
      
LBLSCAN:    
    
     SELECT SKU.PRODUCT_CODE,ARTICLE.ARTICLE_NO,SKU.PURCHASE_PRICE,SKU.MRP,
     ARTICLE.ALIAS AS ARTICLE_ALIAS ,CONVERT(NUMERIC(14,3), ISNULL(PMT.QUANTITY_IN_STOCK,0)) AS   [QUANTITY_IN_STOCK]
     FROM SKU  (NOLOCK)     
     JOIN ARTICLE (NOLOCK)  ON SKU.ARTICLE_CODE=ARTICLE.ARTICLE_CODE    
     LEFT OUTER JOIN PMT01106 PMT (NOLOCK) ON PMT.PRODUCT_CODE=SKU.PRODUCT_CODE  AND ISNULL(PMT.DEPT_ID,@CWHERECLAUSE)=@CWHERECLAUSE
     WHERE SKU.PRODUCT_CODE= @CWHERE   
     
   GOTO ENDPROC     	

LBLART:  
 
     SELECT A.* 
     FROM SLSART A           
     WHERE A.SLS_MEMO_NO=@CWHERE    
 
     GOTO ENDPROC 
       
       
LBLARTLIST:
 
     SELECT ARTICLE_CODE,ARTICLE_NO
     FROM ARTICLE (NOLOCK) WHERE INACTIVE=0
     
     GOTO ENDPROC            
LBLSCHEMEDET:
 
     SELECT A.*
     FROM SCHEME_DET A
     JOIN SLSDET B ON B.ROW_ID=A.SLSDET_ROW_ID
     JOIN SLSMST C ON C.SLS_MEMO_NO=B.SLS_MEMO_NO
     WHERE C.SLS_MEMO_NO=@CWHERE
     ORDER BY A.PA_TO
     
     GOTO ENDPROC      
LBLSCHEMEHH:
 
     SELECT A.*
     FROM SCHEME_HH A
     JOIN SLSDET B ON B.ROW_ID=A.SLSDET_ROW_ID
     JOIN SLSMST C ON C.SLS_MEMO_NO=B.SLS_MEMO_NO
     WHERE C.SLS_MEMO_NO=@CWHERE
     ORDER BY A.TO_TIME
     
     GOTO ENDPROC        
ENDPROC:      
    
END
