create PROCEDURE SAVETRAN_PUR_DIFF_PRT  ----- Procedure to Create FDN from Purchase
(  
	 @NUPDATEMODE  NUMERIC(1,0),  
	 @NSPID  VARCHAR(40),  
	 @CMEMONOPREFIX  VARCHAR(50),  
	 @CFINYEAR   VARCHAR(10),  
	 @CMEMOID   VARCHAR(40)=''
	 
)  
----WITH ENCRYPTION
AS  
BEGIN  
	--changes by Dinkar in location id varchar(4)..
/*
	THIS PROCEDURES SAVES DATA IN RMM01106 TABLE FROM TEMPORARY TABLE.
	THE TEMPERORY TABLE WILL HAVE NO ITEM DETAILS AS THIS IS FINANCIAL DEBIT NOTE WHICH HAS NO ITEM DETAILS 
	AND WOULD BE USED FOR POSTING THE AMOUNT TO SUPPLIER ACCOUNT INCASE ANY DIFFERENCE IS FOUND AMONG THE 
	BILL RAISED BY THE SUPPLIER AND THE DEFINED LEDGER TERMS.
*/
 DECLARE   @CTEMPDBNAME   VARCHAR(100),  
		   @CMASTERTABLENAME  VARCHAR(100),  
		   @CDETAILTABLENAME  VARCHAR(100),  
		   @CTEMPMASTERTABLENAME VARCHAR(100),  
		   @CTEMPDETAILTABLENAME VARCHAR(100),  
		   @CTEMPMASTERTABLE  VARCHAR(100),  
		   @CTEMPDETAILTABLE  VARCHAR(100),  
		   @cErrormsg    VARCHAR(MAX),  
		   @CKEYFIELD1    VARCHAR(50),  
		   @CKEYFIELDVAL1   VARCHAR(50),  
		   @CMEMONO    VARCHAR(20),  
		   @NMEMONOLEN    NUMERIC(20,0),  
		   @CMEMONOVAL    VARCHAR(50),  
		   @CCMD     NVARCHAR(4000),  
		   @CCMDOUTPUT    NVARCHAR(4000),  
		   @NSAVETRANLOOP   BIT,  @nTotal NUMERIC(10,2),
		   @NSTEP  VARCHAR(10),  @nNextMemoNo NUMERIC(4,0),
		   @LENABLETEMPDATABASE BIT,  
		   @CDEPT_ID   VARCHAR(4),  
		   @CMEMODEPTID   VARCHAR(4),
		   @CPETYENABLE	  BIT,
		   @CPETTYTYPE    VARCHAR(4),
		   @NDNAMOUNT  NUMERIC(18,4),
		   @CMRRID VARCHAR(30),@nLoop NUMERIC(2,0),@clocid varchar(4)
		   
  SET @nUpdatemode=1

  DECLARE @OUTPUT TABLE (MEMO_ID VARCHAR(30),ERRMSG VARCHAR(500)) 
  
  SET @NSTEP = '5'  -- SETTTING UP ENVIRONMENT  
   
  SET @CTEMPDBNAME = ''  
  
 SET @CMASTERTABLENAME = 'RMM01106'  
 SET @CDETAILTABLENAME='RMD01106'
  
		--+LTRIM(RTRIM(@NSPID)) 
 SET @CTEMPMASTERTABLENAME = 'PRT_'+@CMASTERTABLENAME+'_UPLOAD'
 SET @CTEMPDETAILTABLENAME ='PRT_'+@CDETAILTABLENAME+'_UPLOAD'
   
 SET @CTEMPMASTERTABLE = @CTEMPDBNAME + @CTEMPMASTERTABLENAME  
 SET @CTEMPDETAILTABLE=  @CTEMPDBNAME + @CTEMPDETAILTABLENAME  
  
 SET @cErrormsg   = ''  
 SET @CKEYFIELD1   = 'RM_ID'  
  
  SET @NSTEP = '10'
 SET @CMEMONO   = 'RM_NO'  
 SET @NMEMONOLEN   = 10  

 select @clocid=location_Code  from PRT_rmm01106_UPLOAD where SP_ID = @nSpId

 if @clocid=''
	SELECT @CDEPT_ID = DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
 else
	set @CDEPT_ID =@clocid

 SET @NSTEP = '12'
 IF ISNULL(@cMemoId,'')=''
 BEGIN
	SELECT TOP 1 @cMemoId=refmemoid FROM PRT_rmm01106_UPLOAD (NOLOCK) WHERE sp_id=@nSpId
 END

 SET @NSTEP = '12.5'
 IF ISNULL(@cMemoId,'')=''
 BEGIN
    SET @cErrormsg = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' Memo Id cannot be blank '  
	GOTO END_PROC    
 END

 SET @NSTEP = '12.5'
 IF NOT EXISTS (SELECT TOP 1 mrr_id FROM pim01106 (NOLOCK) WHERE mrr_id=@cMemoId)
 BEGIN
    SET @cErrormsg = 'Invalid Mrr Id ...Please check '  
	GOTO END_PROC    
 END
 
 SET @NSTEP = '15'
 IF ISNULL(@CDEPT_ID,'')=''
 BEGIN
    SET @cErrormsg = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' LOCATION ID CAN NOT BE BLANK  '  
	GOTO END_PROC    
 END

 SET @CMEMONOPREFIX=@CDEPT_ID+'F-'--ADDED
 
 BEGIN TRY  
  BEGIN TRANSACTION   
     
   -- GENERATING NEW JOB ORDER NO    
   SET @NSAVETRANLOOP=0  
   WHILE @NSAVETRANLOOP=0  
   BEGIN  
		SET @NSTEP = '25'
		EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1, @CFINYEAR, 0, @CMEMONOVAL OUTPUT     
      
		SET @NSTEP = '35'  
		PRINT '96 '+@CMEMONOVAL  
		SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+'   
								WHERE '+@CMEMONO+'='''+@CMEMONOVAL+'''   
								AND FIN_YEAR = '''+@CFINYEAR+''' )  
					SET @NLOOPOUTPUT=0  
				   ELSE  
					SET @NLOOPOUTPUT=1'  
		PRINT @CCMD  
		EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT  
   END  
  
   SET @NSTEP = '45'
   IF @CMEMONOVAL IS NULL OR @CMEMONOVAL LIKE '%LATER%'
   BEGIN  
      SET @cErrormsg = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'   
      GOTO END_PROC      
   END  
   
  
   SET @NSTEP = '55'
   SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET FREIGHT_HSN_CODE=''0000000000'',OTHER_CHARGES_HSN_CODE=''0000000000'' 
    WHERE SP_ID ='''+LTRIM(RTRIM(@NSPID))+''''  
    PRINT @CCMD  
	EXEC SP_EXECUTESQL @CCMD  
  
	SELECT mrr_id into #tmpPims FROM pim01106 (NOLOCK) WHERE 1=2
		
	SET @NSTEP = '65'
	IF EXISTS (SELECT TOP 1 mrr_id FROM pim01106 (NOLOCK) WHERE ref_converted_mrntobill_mrrid=@cMemoId)
		INSERT #tmpPims 
		SELECT mrr_id FROM pim01106 (NOLOCK) WHERE ref_converted_mrntobill_mrrid=@cMemoId
	ELSE
		INSERT #tmpPims 
		SELECT @cMemoId
	
	SET @NSTEP = '67'
	UPDATE PRT_RMM01106_UPLOAD WITH (ROWLOCK) SET refmemoid=@cMemoId WHERE SP_ID= LTRIM(RTRIM(@NSPID))

	SET @NSTEP = '75'
	UPDATE PRT_rmm01106_UPLOAD WITH (ROWLOCK) SET PARTY_DEPT_ID=NULL WHERE SP_ID=@CKEYFIELDVAL1

	SELECT CAST(0 AS NUMERIC(14,2)) AS TAXABLEVALUEDIFF
	INTO #TMPTAXABLEVALUEDIFF
	WHERE 1=2
	
	--select 'check #tmpPims', * from  #tmpPims
	SET @nLoop=1
	SET @nNextMemoNo=CONVERT(NUMERIC(6,0),RIGHT(LTRIM(RTRIM(@cMemonoVal)),6))


	WHILE EXISTS (SELECT TOP 1 mrr_id FROM  #tmpPims)
	BEGIN
		   SET @NSTEP = '85'
		   SELECT TOP 1 @cMrrId=mrr_id FROM  #tmpPims	

		   DELETE FROM #TMPTAXABLEVALUEDIFF

				
		   EXEC SP3SGETPURCHASEDETAILS @CMRRID,1,1
           
		   SET @NSTEP = '87'

		   --select 'check diff', @cMrrId, * FROM #TMPTAXABLEVALUEDIFF
		   IF NOT EXISTS (SELECT * FROM #TMPTAXABLEVALUEDIFF WHERE TAXABLEVALUEDIFF>0)
				GOTO lblNext
			
			SELECT TOP 1 @NDNAMOUNT=SUM(TAXABLEVALUEDIFF) FROM #TMPTAXABLEVALUEDIFF

			SET @NSTEP = '90'
			UPDATE A SET  SUBTOTAL=TAXABLEVALUEDIFF,
			TOTAL_AMOUNT=TAXABLEVALUEDIFF
			FROM PRT_RMM01106_UPLOAD A
			JOIN #TMPTAXABLEVALUEDIFF B ON 1=1
			WHERE A.SP_ID=LTRIM(RTRIM(@NSPID))
			
			SET @NSTEP = '95'
			--select 'check @cMemonoVal',@cMemonoVal
		   IF @nloop>1
		   BEGIN
				SET @CMEMONOVAL=@CMEMONOPREFIX+REPLICATE('0',6-LEN(LTRIM(RTRIM(STR(@nNextMemono)))))+
								LTRIM(RTRIM(STR(@nNextMemoNo)))
				
           END



		   SET @NSTEP = '100'  
		   
		   SET @CKEYFIELDVAL1 = @clocid + RIGHT(@CFINYEAR,2)+REPLICATE('0', (22-LEN(@clocid + RIGHT(@CFINYEAR,2)))-LEN(LTRIM(RTRIM(@CMEMONOVAL))))  + LTRIM(RTRIM(@CMEMONOVAL))
		   
		   
		   
		   IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'    
		   BEGIN  
			  SET @cErrormsg = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'  
			  GOTO END_PROC  
		   END  

		  PRINT '121 ID='+@CKEYFIELDVAL1+'; NO='+@CMEMONOVAL
		   SET @NSTEP = 40  -- UPDATING NEW ID INTO TEMP TABLES  
		   SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' +@CMEMONO+'=''' + @CMEMONOVAL+''',' 
								 +@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+'''
								 WHERE SP_ID ='''+LTRIM(RTRIM(@NSPID))+''' '  
		   PRINT @CCMD  
		   EXEC SP_EXECUTESQL @CCMD  
		  SET @NSTEP = '105'
		  -- RECHECKING IF ID IS STILL LATER  
		  IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
		  BEGIN  
			 SET @cErrormsg = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'  
			 GOTO END_PROC  
		  END


  
		SET @NSTEP = '110'
		DECLARE @cTerms varchar(200)

		SELECT @cTerms=terms FROM pim01106 (NOLOCK) WHERE mrr_id=@CMRRID

		SELECT * INTO #ledger_terms FROM dbo.FN3SGETLEDGERTERMS(@cTerms)
		

		SET @NSTEP = '115'
		UPDATE A SET PRTAMOUNT=(@NDNAMOUNT/B.SUBTOTAL)*A.PURCHASE_PRICE,
		PRTAMOUNT_CREDITED=CASE WHEN ((A.PURCHASE_PRICE-(A.PURCHASE_PRICE*B.DISCOUNT_PERCENTAGE/100))-
		((A.MRP-(A.MRP*C.GROSS_MARGIN/100))-((A.MRP-(A.MRP*C.GROSS_MARGIN/100))*C.prevatdiscount/100)))>0 THEN 
		((A.PURCHASE_PRICE-(A.PURCHASE_PRICE*B.DISCOUNT_PERCENTAGE/100))-
		((A.MRP-(A.MRP*C.GROSS_MARGIN/100))-((A.MRP-(A.MRP*C.GROSS_MARGIN/100))*C.prevatdiscount/100)))
		ELSE 0 END 
	 
		FROM PID01106 A WITH (ROWLOCK)
		JOIN PIM01106 B (nolock) ON A.MRR_ID=B.MRR_ID
		JOIN #LEDGER_TERMS C ON 1=1
		WHERE B.MRR_ID=@CMRRID 


		SET @NSTEP = '120'
		SELECT @nTotal=SUM(prtamount) FROM pid01106 a (NOLOCK) 
		JOIN pim01106 b (NOLOCK) ON a.mrr_id=b.mrr_id
		WHERE b.mrr_id=@CMRRID

		UPDATE PRT_RMM01106_UPLOAD WITH (ROWLOCK) SET  SUBTOTAL=@nTotal,
		TOTAL_AMOUNT=@nTotal WHERE SP_ID=LTRIM(RTRIM(@NSPID))  

		SET @NSTEP = '125'
	 	 INSERT INTO PRT_RMD01106_UPLOAD( W8_CHALLAN_ID, BILL_DT,CASHDISCOUNTAMOUNT, TERMS, MRR_ID,MRR_NO, PRTAMOUNT, 
		   PID_ROW_ID, ITEM_EXCISE_DUTY_PERCENTAGE, FDN_RATE,PARTY_PUR_EXCISE_RATE,CASHDISCOUNTRATE, 
		 PUR_GROSS_PURCHASE_PRICE,  PUR_EXCISE_DUTY_AMOUNT,  PUR_EXCISE_DUTY_RATE,  PUR_TAX_PERCENTAGE, 
		 PUR_TAX_AMOUNT, PUR_FORM_ID,HSN_CODE, GST_PERCENTAGE, 
		 IGST_AMOUNT,  CGST_AMOUNT, SGST_AMOUNT,XN_VALUE_WITHOUT_GST, 
	     XN_VALUE_WITH_GST, PRODUCT_CODE, QUANTITY,PURCHASE_PRICE, AMOUNT,ROW_ID,LAST_UPDATE, DEPT_ID, 
		 RM_ID, SRNO,RFNET, RFNET_WOTAX,UOM_CODE,ITEM_FORM_ID,ITEM_TAX_PERCENTAGE, 
		 ITEM_TAX_AMOUNT,BILL_NO,DISCOUNT_PERCENTAGE, DISCOUNT_AMOUNT,GROSS_PURCHASE_PRICE,PS_ID,PUR_DISCOUNT_PERCENTAGE, 
		 PUR_DISCOUNT_AMOUNT, PUR_PURCHASE_PRICE, REMARKS,INVOICE_QUANTITY, SCHEME_QUANTITY, 
		 MANUAL_DISCOUNT,MANUAL_RATE, BILL_LEVEL_TAX_METHOD, EXCISE_DUTY_AMOUNT, AUTO_SRNO, 
		 RATE, INV_RATE,DN_DISCOUNT_PERCENTAGE,DN_DISCOUNT_AMOUNT, BOX_NO,BOX_DT,BIN_ID, 
		 TAX_ROUND_OFF, BOX_ID,RMMDISCOUNTAMOUNT ,SP_ID)
		 
		 SELECT 	  W8_CHALLAN_ID, B.INV_DT AS BILL_DT,0 AS  CASHDISCOUNTAMOUNT, TERMS, A.MRR_ID, B.MRR_NO, PRTAMOUNT, 
		 A.ROW_ID  PID_ROW_ID, ITEM_EXCISE_DUTY_PERCENTAGE, 0 AS FDN_RATE,0 AS  PARTY_PUR_EXCISE_RATE,0 AS CASHDISCOUNTRATE, 
		 0 AS PUR_GROSS_PURCHASE_PRICE, 0 AS PUR_EXCISE_DUTY_AMOUNT, 0 AS PUR_EXCISE_DUTY_RATE, 0 AS PUR_TAX_PERCENTAGE, 
		 0 AS PUR_TAX_AMOUNT, 
		 '0000000' AS PUR_FORM_ID,A.HSN_CODE AS  HSN_CODE,A. GST_PERCENTAGE AS GST_PERCENTAGE, 
		 CAST( 0 AS NUMERIC(10,2)) AS IGST_AMOUNT, CAST( 0 AS NUMERIC(10,2)) AS CGST_AMOUNT, CAST( 0 AS NUMERIC(10,2)) AS SGST_AMOUNT,
		 CAST( 0 AS NUMERIC(10,2)) AS  XN_VALUE_WITHOUT_GST, 
		 CAST( 0 AS NUMERIC(10,2)) AS XN_VALUE_WITH_GST, PRODUCT_CODE, QUANTITY,PRTAMOUNT AS  PURCHASE_PRICE,(PRTAMOUNT*QUANTITY) AS AMOUNT,CONVERT(VARCHAR(40),NEWID()) AS  ROW_ID,GETDATE() AS LAST_UPDATE, DEPT_ID, 
		 @CKEYFIELDVAL1 AS RM_ID, 
		 SRNO,0 AS  RFNET, RFNET_WOTAX,'0000000' AS  UOM_CODE,'0000000' AS  ITEM_FORM_ID,0 AS  ITEM_TAX_PERCENTAGE, 
		 0 AS ITEM_TAX_AMOUNT,B.INV_NO AS  BILL_NO, 
		 0 AS DISCOUNT_PERCENTAGE, 0 AS DISCOUNT_AMOUNT,PRTAMOUNT AS GROSS_PURCHASE_PRICE,'' AS  PS_ID, 0 AS PUR_DISCOUNT_PERCENTAGE, 
		 0 AS PUR_DISCOUNT_AMOUNT, 0 AS PUR_PURCHASE_PRICE, REMARKS,QUANTITY  AS INVOICE_QUANTITY, SCHEME_QUANTITY, 
		 0 AS  MANUAL_DISCOUNT,0 AS  MANUAL_RATE, BILL_LEVEL_TAX_METHOD, EXCISE_DUTY_AMOUNT, AUTO_SRNO, 
		 0 AS RATE, 0 AS INV_RATE,0 AS  DN_DISCOUNT_PERCENTAGE, 0 AS DN_DISCOUNT_AMOUNT, BOX_NO, '' AS BOX_DT, A.BIN_ID, 
		 0 AS TAX_ROUND_OFF, BOX_ID,0 AS  RMMDISCOUNTAMOUNT ,
		 @NSPID AS SP_ID
		 FROM PID01106 A (NOLOCK)
		 JOIN PIM01106 B (NOLOCK) ON A.MRR_ID =B.MRR_ID 
		 WHERE ISNULL(PRTAMOUNT,0)>0
		 AND A.MRR_ID =@CMRRID
		
		SET @NSTEP = '135'
	
	--GST CALCULATION
		DECLARE @DMEMO_DT DATETIME,@DINV_DT DATETIME,@CGSTCUTOFFDATE VARCHAR(10),@GSTDATE 
		DATETIME,@BCALCULATEGSTPRT BIT,@NMODE INT,@IDNTYPE INT
        SELECT @CGSTCUTOFFDATE=VALUE FROM CONFIG WHERE CONFIG_OPTION ='GST_CUT_OFF_DATE'
        
        SET @BCALCULATEGSTPRT=0
        SET @CCMD=N'SELECT @NMODE=MODE,@DMEMO_DT=RM_DT,@IDNTYPE=DN_TYPE FROM '+@CTEMPMASTERTABLE +' WHERE SP_ID ='''+LTRIM(RTRIM(@NSPID))+''''
	    EXEC SP_EXECUTESQL @CCMD,N'@NMODE INT OUTPUT,@DMEMO_DT DATETIME OUTPUT,@IDNTYPE INT OUTPUT ',@NMODE OUTPUT,@DMEMO_DT OUTPUT,@IDNTYPE  OUTPUT
		
		SET @NSTEP = '145'
	
        	
        IF @CGSTCUTOFFDATE<>''
           SELECT @GSTDATE=CAST(@CGSTCUTOFFDATE AS DATETIME)
        
		
 
        IF ISNULL(@DMEMO_DT ,'')>'2017-06-30'
			SET @BCALCULATEGSTPRT =1
		ELSE
			SET @BCALCULATEGSTPRT =0 --CONDITION ON ITEM LEVEL
     
        IF @BCALCULATEGSTPRT=1
        BEGIN
			SET @NSTEP = '155'
		     DECLARE @BGROUP BIT
	         SET @BGROUP=0
	         
		     IF @NMODE=2
				SET @BGROUP=1 


			EXEC SP3S_CALTOTALS_PRT
			@nUpdatemode=@nUpdatemode,
			@nSpId = @nSpId,
			@NBOXUPDATEMODE=1, 
			@bcalledfrompackslip=0,
			@cLocationId=@cLocId,
			@cRmId=@CKEYFIELDVAL1,
			@CERRORMSG=@CERRORMSG OUTPUT
					 
			--EXEC SP3S_GST_TAX_CAL 'PRT',@CKEYFIELDVAL1,@DMEMO_DT,@NSPID,'',0,@BGROUP,'',@CERRORMSG OUTPUT 
			
			IF ISNULL(@CERRORMSG,'')<>''
				GOTO END_PROC 
		    
	    END
	    ELSE
	    BEGIN
	       	
			SET @NSTEP = '165'
			SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE + ' SET HSN_CODE=''0000000000'',GST_PERCENTAGE=0,IGST_AMOUNT=0,CGST_AMOUNT=0,SGST_AMOUNT=0,XN_VALUE_WITHOUT_GST=0,XN_VALUE_WITH_GST=0 
			WHERE SP_ID ='''+LTRIM(RTRIM(@NSPID))+''''  
			EXEC SP_EXECUTESQL @CCMD 
			
			SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET PARTY_STATE_CODE=''00'' WHERE SP_ID ='''+LTRIM(RTRIM(@NSPID))+''''
			EXEC SP_EXECUTESQL @CCMD 
	    
	    END
	    
	 
   
		   DECLARE @CWHERECLAUSE VARCHAR(100)
		   SET @CWHERECLAUSE = ' SP_ID='''+LTRIM(RTRIM(@NSPID))+''''
    
		  SET @NSTEP = '175' -- UPDATING MASTER TABLE  
		  EXEC UPDATEMASTERXN   
			  @CSOURCEDB = @CTEMPDBNAME  
			, @CSOURCETABLE = @CTEMPMASTERTABLENAME  
			, @CDESTDB  = ''  
			, @CDESTTABLE = @CMASTERTABLENAME  
			, @CKEYFIELD1 = @CKEYFIELD1  
			, @BALWAYSUPDATE = 1  
			,@CFILTERCONDITION=@CWHERECLAUSE
 
	     SET @NSTEP = '185'
	    
	    
		  EXEC UPDATEMASTERXN   
		  @CSOURCEDB = @CTEMPDBNAME  
		, @CSOURCETABLE = @CTEMPDETAILTABLENAME  
		, @CDESTDB  = ''  
		, @CDESTTABLE = @CDETAILTABLENAME  
		, @CKEYFIELD1 = @CKEYFIELD1  
		, @BALWAYSUPDATE = 1
		 ,@CFILTERCONDITION=@CWHERECLAUSE
		
		SET @NSTEP=280

		EXEC SP3S_UPDATERFNET_PRT @CKEYFIELDVAL1			
		

		--select 'check rmd', * from PRT_rmd01106_UPLOAD where sp_id=@nSpid
		SET @NSTEP=290
		EXEC VALIDATEXN
			@CXNTYPE	= 'PRT'
		, @CXNID	= @CKEYFIELDVAL1
		, @NUPDATEMODE = @NUPDATEMODE
		, @CCMD		= @CCMDOUTPUT OUTPUT
			
			
		IF ISNULL(@CCMDOUTPUT,'') <> ''
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' DATA VALIDATION FAILED : ' + @CCMDOUTPUT + '...'
			GOTO END_PROC
		END

		SET @nNextMemoNo=CONVERT(NUMERIC(6,0),RIGHT(LTRIM(RTRIM(@cMemonoVal)),6))+1
lblNext:
		DELETE FROM  #tmpPims WHERE mrr_id=@cMrrId
		DELETE from PRT_rmd01106_UPLOAD WITH (ROWLOCK) where sp_id=@nSpid

		--select 'check pending',  * FROM #tmpPims
		SET @nLoop=@nLoop+1

		--select 'check rmd',purchase_price,gross_purchase_price,cgst_amount,igst_amount, * from rmd01106 where rm_id=@CKEYFIELDVAL1
		--select 'check rmm',subtotal,total_amount from rmm01106 where rm_id=@CKEYFIELDVAL1

		IF OBJECT_ID('TEMPDB..#ledger_terms','u') IS NOT NULL
			DROP TABLE #ledger_terms
	END
		
	GOTO END_PROC	
 END TRY  
 BEGIN CATCH
	print 'enter catch'
    SET @cErrormsg = 'Error in Procedure SAVETRAN_PUR_DIFF_PRT at STEP# ' + @NSTEP +  ' ' + ERROR_MESSAGE()
	GOTO END_PROC
 END CATCH 
   
END_PROC:  
	INSERT INTO @OUTPUT(MEMO_ID,ERRMSG)
	SELECT @CKEYFIELDVAL1,ISNULL(@cErrormsg,'') 
  
IF @@TRANCOUNT>0  
 BEGIN  
  IF ISNULL(@cErrormsg,'')='' 
  BEGIN
	COMMIT TRANSACTION 
  END
ELSE  
	ROLLBACK  
END  


	DELETE FROM PRT_RMM01106_UPLOAD WITH (ROWLOCK) WHERE SP_ID =LTRIM(RTRIM(@NSPID)) 
	DELETE FROM PRT_RMD01106_UPLOAD WITH (ROWLOCK) WHERE SP_ID =LTRIM(RTRIM(@NSPID)) 
			
				
	SELECT * FROM @OUTPUT
END        
---------- END OF PROCEDURE SAVETRAN_PUR_DIFF_PRT