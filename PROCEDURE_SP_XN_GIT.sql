CREATE PROC SP_XN_GIT     --(LocId 3 digit change  by Sanjay:04-11-2024) 
(      
 @NQUERYID		NUMERIC(3,0),            
 @CWHERECLAUSE VARCHAR(1000)='',           
 @DATE   DATETIME = '',            
 @CFINYEAR  VARCHAR(5)='',              
 @NNAVMODE  NUMERIC(1,0)=0  ,  
 @CDEPTID  VARCHAR(5) ='',
 @XNTYPE   VARCHAR(10) ='',
 @CUSERCODE   VARCHAR(50) ='0000000'
 ,@CBINID VARCHAR(7)
) 
--WITH ENCRYPTION   
    
AS         
BEGIN

DECLARE @CCMD NVARCHAR(MAX) 
DECLARE @CCOL_ID NVARCHAR(MAX) 
DECLARE @CCOL_NO NVARCHAR(MAX)
DECLARE @CCOL_DT NVARCHAR(MAX) 
DECLARE @CTBL_NAMEM NVARCHAR(MAX) 
DECLARE @CTBL_NAMED NVARCHAR(MAX) 
DECLARE @CREFCOL NVARCHAR(MAX),@CCURLOCID VARCHAR(5),@CHOLOCID VARCHAR(5)
DECLARE @CFILTER INT

  
SELECT @CFILTER = VALUE FROM DBO.CONFIG WITH(NOLOCK) WHERE CONFIG_OPTION = 'ENABLE_ERP_INVOICE_IMPORT'

SET @CFILTER=ISNULL(@CFILTER,'')

SELECT TOP 1 @CCURLOCID =DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
SELECT TOP 1 @CHOLOCID = [VALUE] FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'


IF iSNULL(@CCURLOCID,'')=''
SET @CCURLOCID=@CDEPTID


IF @NQUERYID=4            
  GOTO LBLGETSERIES

	
IF OBJECT_ID('TEMPDB..#BINUSERS','U') IS NOT NULL
	DROP TABLE #BINUSERS

CREATE TABLE #BINUSERS(BIN_ID VARCHAR(7))

INSERT #BINUSERS(BIN_ID) SELECT DISTINCT BIN_ID FROM BIN

IF @XNTYPE IN ('PUR','RND')
  BEGIN
	SET @CCOL_ID = 'MRR_ID'
	SET @CCOL_NO = 'MRR_NO'
	SET @CCOL_DT = 'INV_DT'
	SET @CTBL_NAMEM = 'PIM01106'
	SET @CTBL_NAMED = 'PID01106'
	SET @CREFCOL = 'INV_NO'
  END
ELSE IF @XNTYPE = 'WSR'
  BEGIN
	SET @CCOL_ID = 'CN_ID'
	SET @CCOL_NO = 'CN_NO'
	SET @CCOL_DT = 'CN_DT'
	SET @CTBL_NAMEM = 'CNM01106'
	SET @CTBL_NAMED = 'CND01106'
	SET @CREFCOL = 'CN_NO'
  END
ELSE IF @XNTYPE = 'CHO'
BEGIN
	SET @CCOL_ID = 'MEMO_ID'
	SET @CCOL_NO = 'MEMO_NO'
	SET @CCOL_DT = 'MEMO_DT'
	SET @CTBL_NAMEM = 'FLOOR_ST_MST'
	SET @CTBL_NAMED = 'FLOOR_ST_DET'
	SET @CREFCOL = 'MEMO_NO'
END 
ELSE IF @XNTYPE = 'GV'
BEGIN
	SET @CCOL_ID = 'MEMO_ID'
	SET @CCOL_NO = 'MEMO_NO'
	SET @CCOL_DT = 'MEMO_DT'
	SET @CTBL_NAMEM = 'GV_STKXFER_MST'
	SET @CTBL_NAMED = 'GV_STKXFER_DET'
	SET @CREFCOL = 'MEMO_NO'
END   
ELSE 
BEGIN
	SET @CCOL_ID = 'MRR_ID'
	SET @CCOL_NO = 'MRR_NO'
	SET @CCOL_DT = 'INV_DT'
	SET @CTBL_NAMEM = 'PIM01106'
	SET @CTBL_NAMED = 'PID01106'
	SET @CREFCOL = 'INV_NO'
END
           
 IF @NQUERYID=1            
  GOTO LBLGITTOTAL          
 ELSE               
 IF @NQUERYID=2            
  GOTO LBLGITMASTER          
 ELSE          
 IF @NQUERYID=3            
  GOTO LBLGITDETAIL         
 ELSE IF @NQUERYID=5            
  GOTO LBLBINUSERS        
LBLBINUSERS:
	IF @CUSERCODE='0000000'
	BEGIN
		--INSERT #BINUSERS(BIN_ID)
		SELECT DISTINCT BIN_ID FROM BIN
	END
	ELSE
	BEGIN
		--INSERT #BINUSERS(BIN_ID)
		SELECT DISTINCT BIN_ID FROM BINUSERS WHERE USER_CODE=@CUSERCODE
	END
  GOTO LAST
LBLGITTOTAL:  -- TO GET MASTER RECORD  FOR NAVIGATION       
  IF @XNTYPE <> ''
  BEGIN
		SELECT M.INV_ID AS [CHALLAN_ID],M.INV_NO AS [CHALLAN_NO]  
		FROM DOCWSL_INM01106_MIRROR M (NOLOCK) 
		JOIN DOCWSL_IND01106_MIRROR D (NOLOCK) ON M.INV_ID = D.INV_ID AND D.VERSION_NO=M.VERSION_NO
		JOIN #BINUSERS BU (NOLOCK) ON M.TARGET_BIN_ID=BU.BIN_ID 
		JOIN PIM01106 PIM (NOLOCK) ON PIM.MRR_ID=M.INV_ID
		LEFT OUTER JOIN LOCUSERS LOC (NOLOCK) ON LOC.DEPT_ID=M.PARTY_DEPT_ID AND LOC.USER_CODE=@CUSERCODE
		WHERE M.FIN_YEAR<=@CFINYEAR AND PIM.RECEIPT_DT<>''  AND PIM.CANCELLED=0 AND		
		'PUR'=(CASE WHEN @XNTYPE='ALL' THEN 'PUR' ELSE @XNTYPE END)
		AND M.VERSION_NO=(SELECT MAX(VERSION_NO) FROM DOCWSL_INM01106_MIRROR WHERE INV_ID=M.INV_ID)
		AND (M.CANCELLED=0 OR PIM.MRR_ID IS NOT NULL)
		AND M.TARGET_BIN_ID<>'999'

		
		/*ALL CHALLANS IN GIT SHOULD BE SHOWN TO USER WHO HAVE ACCESS TO THAT BIN IRRESPECTIVE OF BIN LOGGED IN*/
		UNION ALL
				SELECT M.INV_ID AS [CHALLAN_ID],M.INV_NO AS [CHALLAN_NO]  
		FROM DOCWSL_INM01106_MIRROR M (NOLOCK) 
		JOIN DOCWSL_IND01106_MIRROR D (NOLOCK) ON M.INV_ID = D.INV_ID AND D.VERSION_NO=M.VERSION_NO
		JOIN #BINUSERS BU (NOLOCK) ON M.TARGET_BIN_ID=BU.BIN_ID 
		JOIN PIM01106 PIM (NOLOCK) ON PIM.MRR_ID=M.INV_ID
		LEFT OUTER JOIN LOCUSERS LOC (NOLOCK) ON LOC.DEPT_ID=M.PARTY_DEPT_ID AND LOC.USER_CODE=@CUSERCODE
		WHERE M.FIN_YEAR<=@CFINYEAR AND PIM.RECEIPT_DT<>''  AND PIM.CANCELLED=0 AND		
		'RND'=(CASE WHEN @XNTYPE='ALL' THEN 'RND' ELSE @XNTYPE END)
		AND M.VERSION_NO=(SELECT MAX(VERSION_NO) FROM DOCWSL_INM01106_MIRROR WHERE INV_ID=M.INV_ID)
		AND (M.CANCELLED=0 OR PIM.MRR_ID IS NOT NULL)
		AND M.TARGET_BIN_ID='999'

		
		UNION ALL
		
		SELECT M.RM_ID AS [CHALLAN_ID],RM_NO AS [CHALLAN_NO]  
		FROM DOCPRT_RMM01106_MIRROR M (NOLOCK) 
		JOIN DOCPRT_RMD01106_MIRROR D  (NOLOCK) ON M.RM_ID = D.RM_ID AND D.VERSION_NO=M.VERSION_NO
		JOIN #BINUSERS BU (NOLOCK) ON M.TARGET_BIN_ID=BU.BIN_ID 
		JOIN CNM01106 CNM (NOLOCK) ON CNM.RM_ID=M.RM_ID
		WHERE 'WSR'=(CASE WHEN @XNTYPE='ALL' THEN 'WSR' ELSE @XNTYPE END)
		AND M.FIN_YEAR<=@CFINYEAR  AND CNM.RECEIPT_DT<>''  AND CNM.CANCELLED=0
		AND M.VERSION_NO=(SELECT MAX(VERSION_NO) FROM DOCPRT_RMM01106_MIRROR WHERE RM_ID=M.RM_ID)
		AND (M.CANCELLED=0 OR CNM.CN_ID IS NOT NULL)
		
		UNION ALL
		
		SELECT M.MEMO_ID AS [CHALLAN_ID],MEMO_NO AS [CHALLAN_NO]  
		FROM FLOOR_ST_MST M  (NOLOCK) 
		JOIN FLOOR_ST_DET D  (NOLOCK) ON M.MEMO_ID = D.MEMO_ID 
		JOIN #BINUSERS BU (NOLOCK) ON M.TARGET_BIN_ID=BU.BIN_ID 
		LEFT OUTER JOIN BINUSERS LOC (NOLOCK) ON LOC.BIN_ID=M.TARGET_BIN_ID  AND LOC.USER_CODE=@CUSERCODE
		WHERE M.FIN_YEAR<=@CFINYEAR  AND
		(ISNULL(M.RECEIPT_DT,'') = '' OR DATEPART(YYYY,M.RECEIPT_DT)=1900) 
		AND M.CANCELLED = 0 AND 'CHO'=(CASE WHEN @XNTYPE='ALL' THEN 'CHO' ELSE @XNTYPE END)
		AND M.location_Code=@CCURLOCID
		
		--AND M.TARGET_BIN_ID=@CBINID
		/*ALL CHALLANS IN GIT SHOULD BE SHOWN TO USER WHO HAVE ACCESS TO THAT BIN IRRESPECTIVE OF BIN LOGGED IN*/
		UNION ALL
		
		SELECT M.MEMO_ID AS [CHALLAN_ID],MEMO_NO AS [CHALLAN_NO]  
		FROM GV_STKXFER_MST M  (NOLOCK) 
		JOIN GV_STKXFER_DET D  (NOLOCK) ON M.MEMO_ID = D.MEMO_ID 
		WHERE M.FIN_YEAR<=@CFINYEAR  AND
		--M.FIN_YEAR=@CFINYEAR AND 
		(ISNULL(M.RECEIPT_DT,'') = '' OR DATEPART(YYYY,M.RECEIPT_DT)=1900) 
		AND M.CANCELLED = 0 AND 'GV'=(CASE WHEN @XNTYPE='ALL' THEN 'GV' ELSE @XNTYPE END)
		AND M.TARGET_DEPT_ID=@CCURLOCID
  END
  ELSE
  BEGIN
  SET @CCMD = N'SELECT '+ @CCOL_ID +' AS [CHALLAN_ID],'+ @CCOL_NO +' AS [CHALLAN_NO]  
	FROM '+ @CTBL_NAMEM +'  (NOLOCK)  WHERE 1=2'
	PRINT @CCMD 
	EXEC SP_EXECUTESQL @CCMD 
  END
	
 GOTO LAST             

 
  
LBLGITMASTER:  -- TO GET MASTER RECORD  FOR NAVIGATION           
  IF(ISNULL(@CWHERECLAUSE,'')<>'' AND @XNTYPE <> '')
  BEGIN

	IF @XNTYPE = 'PUR'
	BEGIN

			SELECT A.*,C.DEPT_ID AS SOURCE_DEPT_ID,(C.DEPT_ID +' ' + C.DEPT_NAME) AS  SOURCE_DEPT_NAME,        
			CAST(0 AS BIT) AS CHK  
			,CONVERT( DATETIME,ISNULL(B.RECEIPT_DT,'')) AS [RECEIPT_DT_UPDATED],
			(CASE WHEN ISNULL(B.RECEIPT_DT,'')='' THEN ''  ELSE CONVERT(VARCHAR,B.RECEIPT_DT,105) END) AS [RECEIPT_DT_EDIT],
			A.CHALLAN_REMARKS,
			CASE WHEN A.CANCELLED_CHALLAN =1 THEN  1 ELSE 
			ISNULL(B.GENERATED_BY_CHRECON,0) END  AS GENERATED_BY_CHRECON,
			B.* ,A.manual_inv_no AS [REF_NO],
			A.BIN_ID
			FROM 
			(
				SELECT M.INV_ID AS [CHALLAN_ID],M.INV_NO AS [CHALLAN_NO],M.INV_NO AS [INVOICE_NO], 
				M.INV_DT AS [CHALLAN_DT],M.NET_AMOUNT AS TOTAL_AMOUNT,SUM(D.QUANTITY) AS TOTAL_QTY,
				ISNULL(IMP.RECEIPT_DT,'') AS RECEIPT_DT,M.REMARKS AS CHALLAN_REMARKS,M.CANCELLED AS CANCELLED_CHALLAN
				,BU.BIN_ID,M.XN_ITEM_TYPE,M.manual_inv_no ,m.location_Code
				FROM DOCWSL_INM01106_MIRROR M  (NOLOCK) 
				JOIN DOCWSL_IND01106_MIRROR D  (NOLOCK) ON M.INV_ID = D.INV_ID AND D.VERSION_NO=M.VERSION_NO
				JOIN #BINUSERS BU (NOLOCK) ON M.TARGET_BIN_ID=BU.BIN_ID 
				LEFT OUTER JOIN LOCUSERS LOC (NOLOCK) ON LOC.DEPT_ID=M.DEPT_ID  AND LOC.USER_CODE=@CUSERCODE
				LEFT OUTER JOIN PIM01106 IMP (NOLOCK) ON IMP.INV_ID=M.INV_ID AND IMP.CANCELLED=0
				WHERE M.FIN_YEAR<=@CFINYEAR AND M.PARTY_DEPT_ID=@CDEPTID
				AND M.VERSION_NO=(SELECT MAX(VERSION_NO) FROM DOCWSL_INM01106_MIRROR WHERE INV_ID=M.INV_ID)
				AND (M.CANCELLED=0 OR IMP.MRR_ID IS NOT NULL)
				AND M.TARGET_BIN_ID<>'999'
				/*ALL CHALLANS IN GIT SHOULD BE SHOWN TO USER WHO HAVE ACCESS TO THAT BIN IRRESPECTIVE OF BIN LOGGED IN*/
				GROUP BY M.INV_ID,M.INV_NO,M.INV_DT,M.NET_AMOUNT,IMP.RECEIPT_DT,M.REMARKS,M.CANCELLED,BU.BIN_ID,M.XN_ITEM_TYPE,M.manual_inv_no ,m.location_Code
			) A     
			LEFT OUTER JOIN PIM01106 B  (NOLOCK) ON  A.CHALLAN_ID = B.INV_ID AND B.CANCELLED=0
			LEFT OUTER JOIN LOCATION C (NOLOCK) ON a.location_Code  = C.DEPT_ID
			
			
	END
	IF @XNTYPE = 'RND'
	BEGIN

			SELECT A.*,C.DEPT_ID AS SOURCE_DEPT_ID,(C.DEPT_ID +' ' + C.DEPT_NAME) AS  SOURCE_DEPT_NAME,        
			CAST(0 AS BIT) AS CHK  
			,CONVERT( DATETIME,ISNULL(B.RECEIPT_DT,'')) AS [RECEIPT_DT_UPDATED],
			(CASE WHEN ISNULL(B.RECEIPT_DT,'')='' THEN ''  ELSE CONVERT(VARCHAR,B.RECEIPT_DT,105) END) AS [RECEIPT_DT_EDIT],
			A.CHALLAN_REMARKS,
			CASE WHEN A.CANCELLED_CHALLAN =1 THEN  1 ELSE 
			ISNULL(B.GENERATED_BY_CHRECON,0) END  AS GENERATED_BY_CHRECON,
			B.* ,A.manual_inv_no AS [REF_NO],
			A.BIN_ID
			FROM 
			(
				SELECT M.INV_ID AS [CHALLAN_ID],M.INV_NO AS [CHALLAN_NO],M.INV_NO AS [INVOICE_NO], 
				M.INV_DT AS [CHALLAN_DT],M.NET_AMOUNT AS TOTAL_AMOUNT,SUM(D.QUANTITY) AS TOTAL_QTY,
				ISNULL(IMP.RECEIPT_DT,'') AS RECEIPT_DT,M.REMARKS AS CHALLAN_REMARKS,M.CANCELLED AS CANCELLED_CHALLAN
				,BU.BIN_ID,M.XN_ITEM_TYPE,M.manual_inv_no ,m.location_Code
				FROM DOCWSL_INM01106_MIRROR M  (NOLOCK) 
				JOIN DOCWSL_IND01106_MIRROR D  (NOLOCK) ON M.INV_ID = D.INV_ID AND D.VERSION_NO=M.VERSION_NO
				JOIN #BINUSERS BU (NOLOCK) ON M.TARGET_BIN_ID=BU.BIN_ID 
				LEFT OUTER JOIN LOCUSERS LOC (NOLOCK) ON LOC.DEPT_ID=M.DEPT_ID  AND LOC.USER_CODE=@CUSERCODE
				LEFT OUTER JOIN PIM01106 IMP (NOLOCK) ON IMP.INV_ID=M.INV_ID AND IMP.CANCELLED=0
				WHERE M.FIN_YEAR<=@CFINYEAR AND M.PARTY_DEPT_ID=@CDEPTID
				AND M.VERSION_NO=(SELECT MAX(VERSION_NO) FROM DOCWSL_INM01106_MIRROR WHERE INV_ID=M.INV_ID)
				AND (M.CANCELLED=0 OR IMP.MRR_ID IS NOT NULL)
				AND M.TARGET_BIN_ID='999'
				/*ALL CHALLANS IN GIT SHOULD BE SHOWN TO USER WHO HAVE ACCESS TO THAT BIN IRRESPECTIVE OF BIN LOGGED IN*/
				GROUP BY M.INV_ID,M.INV_NO,M.INV_DT,M.NET_AMOUNT,IMP.RECEIPT_DT,M.REMARKS,M.CANCELLED,BU.BIN_ID,M.XN_ITEM_TYPE,M.manual_inv_no ,m.location_Code
			) A     
			LEFT OUTER JOIN PIM01106 B  (NOLOCK) ON  A.CHALLAN_ID = B.INV_ID AND B.CANCELLED=0
			LEFT OUTER JOIN LOCATION C (NOLOCK) ON a.location_Code = C.DEPT_ID
			
			
	END
	IF @XNTYPE = 'WSR'
	BEGIN


			SELECT A.*,C.DEPT_ID AS SOURCE_DEPT_ID,(C.DEPT_ID +' ' + C.DEPT_NAME) AS  SOURCE_DEPT_NAME,        
			CAST(0 AS BIT) AS CHK  
			,CONVERT( DATETIME,ISNULL(B.RECEIPT_DT,'')) AS [RECEIPT_DT_UPDATED],
			(CASE WHEN ISNULL(B.RECEIPT_DT,'')='' THEN ''  ELSE CONVERT(VARCHAR,B.RECEIPT_DT,105) END) AS [RECEIPT_DT_EDIT],
			A.CHALLAN_REMARKS,B.* ,CONVERT(VARCHAR(100),'') AS [REF_NO],
			ISNULL(B.GENERATED_BY_CHRECON,0) AS GENERATED_BY_CHRECON
			,A.BIN_ID
			FROM 
			(
				SELECT M.RM_ID AS [CHALLAN_ID],M.RM_NO AS [CHALLAN_NO],M.RM_NO AS [INVOICE_NO],
				M.RM_DT AS [CHALLAN_DT],M.TOTAL_AMOUNT,SUM(D.QUANTITY) AS TOTAL_QTY,
				ISNULL(IMP.RECEIPT_DT,'') AS RECEIPT_DT,M.REMARKS AS CHALLAN_REMARKS,M.CANCELLED AS CANCELLED_CHALLAN
				,BU.BIN_ID,M.XN_ITEM_TYPE,m.location_Code
				FROM DOCPRT_RMM01106_MIRROR M  (NOLOCK) 
				JOIN DOCPRT_RMD01106_MIRROR D  (NOLOCK) ON M.RM_ID = D.RM_ID AND D.VERSION_NO=M.VERSION_NO 
				JOIN #BINUSERS BU (NOLOCK) ON M.TARGET_BIN_ID=BU.BIN_ID 
				LEFT OUTER JOIN CNM01106 IMP (NOLOCK) ON IMP.RM_ID=M.RM_ID AND IMP.CANCELLED=0
				WHERE M.FIN_YEAR<=@CFINYEAR AND M.PARTY_DEPT_ID=@CDEPTID
				AND M.VERSION_NO=(SELECT MAX(VERSION_NO) FROM DOCPRT_RMM01106_MIRROR WHERE RM_ID=M.RM_ID)
				AND (M.CANCELLED=0 OR IMP.CN_ID IS NOT NULL)
				/*ALL CHALLANS IN GIT SHOULD BE SHOWN TO USER WHO HAVE ACCESS TO THAT BIN IRRESPECTIVE OF BIN LOGGED IN*/
				GROUP BY M.RM_ID,M.RM_NO,M.RM_DT,M.TOTAL_AMOUNT,IMP.RECEIPT_DT,M.REMARKS,M.CANCELLED,BU.BIN_ID,M.XN_ITEM_TYPE,m.location_Code
			) A     
			LEFT OUTER JOIN CNM01106 B  (NOLOCK) ON  B.RM_ID=A.CHALLAN_ID  AND B.CANCELLED=0
			LEFT OUTER JOIN LOCATION C (NOLOCK) ON a.location_Code = C.DEPT_ID
	END
	IF @XNTYPE = 'CHO'
	BEGIN
	
	
			SELECT A.*,C1.BIN_ID AS SOURCE_DEPT_ID,(C1.BIN_ID +' ' + C1.BIN_NAME) AS  SOURCE_DEPT_NAME,        
			CAST((CASE WHEN ISNULL(B.RECEIPT_DT,'')='' THEN 0 ELSE 1 END) AS BIT) AS CHK  
			,CONVERT( DATETIME,ISNULL(B.RECEIPT_DT,'')) AS [RECEIPT_DT_UPDATED],
			CAST('' AS NVARCHAR) AS [RECEIPT_DT_EDIT],
			B.* ,CONVERT(VARCHAR(100),'') AS [REF_NO],A.BIN_ID
			FROM 
			(
				SELECT M.MEMO_ID AS [CHALLAN_ID],M.MEMO_NO AS [CHALLAN_NO],'' AS [INVOICE_NO],
				M.MEMO_DT AS [CHALLAN_DT],0 AS TOTAL_AMOUNT,SUM(D.QUANTITY) AS TOTAL_QTY,
				M.RECEIPT_DT,BU.MAJOR_BIN_ID AS BIN_ID ,m.location_Code
				FROM FLOOR_ST_MST M  (NOLOCK) 
				JOIN FLOOR_ST_DET D  (NOLOCK) ON M.MEMO_ID = D.MEMO_ID 
				join BIN BU (NOLOCK) ON M.TARGET_BIN_ID=BU.BIN_ID 
				JOIN BINUSERS LOC (NOLOCK) ON LOC.BIN_ID=BU.MAJOR_BIN_ID  AND LOC.USER_CODE=@CUSERCODE
				--JOIN #BINUSERS BU (NOLOCK) ON M.TARGET_BIN_ID=BU.BIN_ID 
				--JOIN BINUSERS LOC (NOLOCK) ON LOC.BIN_ID=M.TARGET_BIN_ID AND LOC.USER_CODE=@CUSERCODE
				WHERE M.FIN_YEAR<=@CFINYEAR  AND--(@CUSERCODE=(CASE WHEN @CUSERCODE='0000000'  THEN @CUSERCODE ELSE LOC.USER_CODE END))
				(ISNULL(M.RECEIPT_DT,'') = '' OR DATEPART(YYYY,M.RECEIPT_DT)=1900) AND M.CANCELLED = 0
				AND m.location_Code=@CDEPTID
				GROUP BY M.MEMO_ID,M.MEMO_NO,M.MEMO_DT,M.RECEIPT_DT,BU.major_bin_id,m.location_Code
			) A     
			LEFT OUTER JOIN FLOOR_ST_MST B  (NOLOCK) ON  B.MEMO_ID=A.CHALLAN_ID              
			LEFT OUTER JOIN LOCATION C (NOLOCK) ON a.location_Code = C.DEPT_ID
			LEFT OUTER JOIN BIN C1 (NOLOCK) ON C1.BIN_ID = B.BIN_ID
			LEFT OUTER JOIN BIN C2 (NOLOCK) ON C2.BIN_ID = B.TARGET_BIN_ID
	END
	IF @XNTYPE = 'GV'
	BEGIN
			SELECT A.*,C.DEPT_ID AS SOURCE_DEPT_ID,(C.DEPT_ID +' ' + C.DEPT_NAME) AS  SOURCE_DEPT_NAME,        
			CAST((CASE WHEN ISNULL(B.RECEIPT_DT,'')='' THEN 0 ELSE 1 END) AS BIT) AS CHK  
			,CONVERT( DATETIME,ISNULL(B.RECEIPT_DT,'')) AS [RECEIPT_DT_UPDATED],
			CAST('' AS NVARCHAR) AS [RECEIPT_DT_EDIT],
			B.* ,CONVERT(VARCHAR(100),'') AS [REF_NO],@CBINID AS BIN_ID
			FROM 
			(
				SELECT M.MEMO_ID AS [CHALLAN_ID],M.MEMO_NO AS [CHALLAN_NO],'' AS [INVOICE_NO],
				M.MEMO_DT AS [CHALLAN_DT],0 AS TOTAL_AMOUNT,SUM(D.QUANTITY) AS TOTAL_QTY,
				M.RECEIPT_DT ,m.location_code
				FROM GV_STKXFER_MST M  (NOLOCK) 
				JOIN GV_STKXFER_DET D  (NOLOCK) ON M.MEMO_ID = D.MEMO_ID 
				WHERE 
				M.FIN_YEAR<=@CFINYEAR  AND M.target_dept_id=@CDEPTID AND
				--M.FIN_YEAR=@CFINYEAR AND 
				(ISNULL(M.RECEIPT_DT,'') = '' OR DATEPART(YYYY,M.RECEIPT_DT)=1900) AND M.CANCELLED = 0
				AND M.TARGET_DEPT_ID=@CDEPTID
				
				GROUP BY M.MEMO_ID,M.MEMO_NO,M.MEMO_DT,M.RECEIPT_DT,m.location_code
			) A     
			LEFT OUTER JOIN GV_STKXFER_MST B  (NOLOCK) ON  B.MEMO_ID=A.CHALLAN_ID              
			LEFT OUTER JOIN LOCATION C (NOLOCK) ON a.location_code = C.DEPT_ID
	END
	IF @XNTYPE = 'PUR_PARTY'
	BEGIN
	
	
			SELECT A.*,C.DEPT_ID AS SOURCE_DEPT_ID,(C.DEPT_ID +' ' + C.DEPT_NAME) AS  SOURCE_DEPT_NAME,        
			CAST(0 AS BIT) AS CHK  
			,CONVERT( DATETIME,ISNULL(a.RECEIPT_DT,'')) AS [RECEIPT_DT_UPDATED],
			(CASE WHEN ISNULL(a.RECEIPT_DT,'')='' THEN ''  ELSE CONVERT(VARCHAR,a.RECEIPT_DT,105) END) AS [RECEIPT_DT_EDIT],
			A.CHALLAN_REMARKS,
			CASE WHEN A.CANCELLED_CHALLAN =1 THEN  1 ELSE 
			ISNULL(a.GENERATED_BY_CHRECON,0) END  AS GENERATED_BY_CHRECON,
			A.manual_inv_no AS [REF_NO],
			A.BIN_ID
			FROM 
			(
				SELECT M.mrr_id AS [CHALLAN_ID],M.mrr_no AS [CHALLAN_NO],M.INV_NO AS [INVOICE_NO], 
				M.mrr_dt AS [CHALLAN_DT],M.total_amount AS TOTAL_AMOUNT,m.total_amount AS TOTAL_QTY,
				ISNULL(m.RECEIPT_DT,'') AS RECEIPT_DT,M.REMARKS AS CHALLAN_REMARKS,M.CANCELLED AS CANCELLED_CHALLAN
				,BU.BIN_ID,M.XN_ITEM_TYPE,'' as manual_inv_no ,GENERATED_BY_CHRECON,m.location_Code
				FROM pim01106 M  (NOLOCK) 
				JOIN bin BU (NOLOCK) ON M.BIN_ID=BU.BIN_ID 
				WHERE (M.CANCELLED=0 )
				and  inv_mode=1 and mrr_id =@CWHERECLAUSE
		
			) A     
		    JOIN LOCATION C (NOLOCK) ON a.location_Code  = C.DEPT_ID
			
			
	END
  END
  ELSE
  BEGIN


	SET @CCMD = N'SELECT A.*,C.DEPT_ID AS SOURCE_DEPT_ID,(C.DEPT_ID +'' '' + C.DEPT_NAME) AS  SOURCE_DEPT_NAME,        
			CAST((CASE WHEN ISNULL(B.RECEIPT_DT,'''')='''' THEN 0 ELSE 1 END) AS BIT) AS CHK  
			,CONVERT( DATETIME,ISNULL(B.RECEIPT_DT,'''')) AS [RECEIPT_DT_UPDATED],CAST('''' AS NVARCHAR) AS [RECEIPT_DT_EDIT],
			B.*,CONVERT(VARCHAR(100),'''') AS [REF_NO],A.BIN_ID  
			FROM 
			(
				SELECT M.'+ @CCOL_ID +' AS [CHALLAN_ID],M.'+ @CCOL_NO +' AS [CHALLAN_NO],
				M.'+ @CCOL_DT +' AS [CHALLAN_DT],M.TOTAL_AMOUNT,SUM(D.QUANTITY) AS TOTAL_QTY,
				RECEIPT_DT ,M.BIN_ID 
				FROM '+ @CTBL_NAMEM +' M  (NOLOCK) 
				JOIN '+ @CTBL_NAMED +' D  (NOLOCK) ON M.'+ @CCOL_ID +' = D.'+ @CCOL_ID +' 
				WHERE M.FIN_YEAR>='''+RTRIM(LTRIM(STR(RIGHT(@CFINYEAR,2))))+'''  AND m.location_code='''+isnull(@CCURLOCID,@CDEPTID)+''' AND (ISNULL(M.RECEIPT_DT,'''') = '''' OR DATEPART(YYYY,M.RECEIPT_DT)=1900)
				GROUP BY M.'+ @CCOL_ID +',M.'+ @CCOL_NO +',M.'+ @CCOL_DT +',M.TOTAL_AMOUNT,M.RECEIPT_DT,M.BIN_ID 
			) A     
			LEFT OUTER JOIN '+ @CTBL_NAMEM +' B  (NOLOCK) ON  B.'+ @CCOL_ID +'=A.CHALLAN_ID             
			LEFT OUTER JOIN LOCATION C (NOLOCK) ON C.DEPT_ID='''+@CDEPTID+'''   WHERE 1 = 2'

			
	PRINT @CCMD 
	EXEC SP_EXECUTESQL @CCMD       
  END
  
 GOTO LAST               
  
LBLGITDETAIL: --TO GET   DETAIL FOR NAVIGATION           
  IF (ISNULL(@CWHERECLAUSE,'')<>'' AND @XNTYPE <> '')
  BEGIN
	DECLARE @CMSTPREFIX VARCHAR(20),@CMSTSUFFIX VARCHAR(20),@BJOINMSTONVERSIONNO BIT

	DECLARE @CLOCID VARCHAR(4)
	IF @XNTYPE = 'PUR'
	BEGIN

    	

     	select @CLOCID=value from config where config_option ='location_id'

		IF @CLOCID=@CHOLOCID
			SELECT @CMSTPREFIX='',@CMSTSUFFIX='',@BJOINMSTONVERSIONNO=0
		ELSE
			SELECT @CMSTPREFIX='DOCWSL_',@CMSTSUFFIX='_MIRROR',@BJOINMSTONVERSIONNO=1

		--DBO.FN_GET_PC_WO_BATCHID(A.PRODUCT_CODE)PRODUCT_CODE,				
		SET @CCMD=N'SELECT  A.INV_ID AS CHMEMO_ID,A.INVOICE_QUANTITY AS QUANTITY,A.RATE, 
		ISNULL(E.FORM_NAME,'''') AS TAX_STATUS,A.PRODUCT_CODE,A.MRP,A.ITEM_TAX_PERCENTAGE AS TAX_PERCENTAGE,
		A.ITEM_TAX_AMOUNT AS TAX_AMOUNT,A.DISCOUNT_PERCENTAGE,A.DISCOUNT_AMOUNT,A.ROW_ID,ARTICLE_NO,ARTICLE_NAME,SUB_SECTION_NAME,SECTION_NAME,PARA1_NAME,         
		PARA2_NAME,PARA3_NAME,ISNULL(U.UOM_NAME,'''') AS UOM_NAME , 0 AS QUANTITY_IN_STOCK,  
		PARA4_NAME,PARA5_NAME ,PARA6_NAME          
		FROM DOCWSL_IND01106_MIRROR  A (NOLOCK)         
		JOIN DOCWSL_INM01106_MIRROR  B (NOLOCK) ON A.INV_ID = B.INV_ID AND A.VERSION_NO=B.VERSION_NO      
		JOIN '+@CMSTPREFIX+'SKU'+@CMSTSUFFIX+' C (NOLOCK) ON C.PRODUCT_CODE=A.PRODUCT_CODE
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND C.VERSION_NO=A.VERSION_NO AND C.DOCWSL_MEMO_ID=A.INV_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'ARTICLE'+@CMSTSUFFIX+' AR (NOLOCK) ON AR.ARTICLE_CODE= C.ARTICLE_CODE'+
		(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND AR.VERSION_NO=C.VERSION_NO	AND AR.DOCWSL_MEMO_ID=A.INV_ID ' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'SECTIOND'+@CMSTSUFFIX+' SD (NOLOCK) ON SD.SUB_SECTION_CODE= AR.SUB_SECTION_CODE
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN '  AND SD.VERSION_NO=A.VERSION_NO AND SD.DOCWSL_MEMO_ID=A.INV_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'SECTIONM'+@CMSTSUFFIX+' SM (NOLOCK) ON SM.SECTION_CODE= SD.SECTION_CODE 
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND SM.VERSION_NO=A.VERSION_NO	AND SM.DOCWSL_MEMO_ID=A.INV_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'PARA1'+@CMSTSUFFIX+' P1 (NOLOCK) ON P1.PARA1_CODE= C.PARA1_CODE
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND P1.VERSION_NO=A.VERSION_NO	AND P1.DOCWSL_MEMO_ID=A.INV_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'PARA2'+@CMSTSUFFIX+' P2 (NOLOCK) ON P2.PARA2_CODE= C.PARA2_CODE
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND P2.VERSION_NO=A.VERSION_NO	AND P2.DOCWSL_MEMO_ID=A.INV_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'PARA3'+@CMSTSUFFIX+' P3 (NOLOCK) ON P3.PARA3_CODE= C.PARA3_CODE
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND P3.VERSION_NO=A.VERSION_NO	AND P3.DOCWSL_MEMO_ID=A.INV_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'PARA4'+@CMSTSUFFIX+' P4 (NOLOCK) ON P4.PARA4_CODE= C.PARA4_CODE 
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND P4.VERSION_NO=A.VERSION_NO	AND P4.DOCWSL_MEMO_ID=A.INV_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'PARA5'+@CMSTSUFFIX+' P5 (NOLOCK) ON P5.PARA5_CODE= C.PARA5_CODE
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND P5.VERSION_NO=A.VERSION_NO	AND P5.DOCWSL_MEMO_ID=A.INV_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'PARA6'+@CMSTSUFFIX+' P6 (NOLOCK) ON P6.PARA6_CODE= C.PARA6_CODE
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND P6.VERSION_NO=A.VERSION_NO	AND P6.DOCWSL_MEMO_ID=A.INV_ID' ELSE '' END)+'
		LEFT OUTER JOIN UOM U (NOLOCK) ON U.UOM_CODE= AR.UOM_CODE
		LEFT OUTER JOIN '+@CMSTPREFIX+'FORM'+@CMSTSUFFIX+' E (NOLOCK) ON A.ITEM_FORM_ID= E.FORM_ID 
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND E.VERSION_NO=A.VERSION_NO AND E.DOCWSL_MEMO_ID=A.INV_ID' ELSE '' END)+'
		WHERE A.INV_ID = '''+@CWHERECLAUSE+'''
		AND B.VERSION_NO=(SELECT MAX(VERSION_NO) FROM DOCWSL_INM01106_MIRROR WHERE INV_ID=B.INV_ID)
		AND b.TARGET_BIN_ID<>''999''
		ORDER BY ROW_ID '
		
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		/*ALL CHALLANS IN GIT SHOULD BE SHOWN TO USER WHO HAVE ACCESS TO THAT BIN IRRESPECTIVE OF BIN LOGGED IN*/

	END
	IF @XNTYPE = 'RND'
	BEGIN

    	
     	select @CLOCID=value from config where config_option ='location_id'

		IF @CLOCID=@CHOLOCID
			SELECT @CMSTPREFIX='',@CMSTSUFFIX='',@BJOINMSTONVERSIONNO=0
		ELSE
			SELECT @CMSTPREFIX='DOCWSL_',@CMSTSUFFIX='_MIRROR',@BJOINMSTONVERSIONNO=1

		--DBO.FN_GET_PC_WO_BATCHID(A.PRODUCT_CODE)PRODUCT_CODE,				
		SET @CCMD=N'SELECT  A.INV_ID AS CHMEMO_ID,A.INVOICE_QUANTITY AS QUANTITY,A.RATE, 
		ISNULL(E.FORM_NAME,'''') AS TAX_STATUS,A.PRODUCT_CODE,A.MRP,A.ITEM_TAX_PERCENTAGE AS TAX_PERCENTAGE,
		A.ITEM_TAX_AMOUNT AS TAX_AMOUNT,A.DISCOUNT_PERCENTAGE,A.DISCOUNT_AMOUNT,A.ROW_ID,ARTICLE_NO,ARTICLE_NAME,SUB_SECTION_NAME,SECTION_NAME,PARA1_NAME,         
		PARA2_NAME,PARA3_NAME,ISNULL(U.UOM_NAME,'''') AS UOM_NAME , 0 AS QUANTITY_IN_STOCK,  
		PARA4_NAME,PARA5_NAME ,PARA6_NAME          
		FROM DOCWSL_IND01106_MIRROR  A (NOLOCK)         
		JOIN DOCWSL_INM01106_MIRROR  B (NOLOCK) ON A.INV_ID = B.INV_ID AND A.VERSION_NO=B.VERSION_NO      
		JOIN '+@CMSTPREFIX+'SKU'+@CMSTSUFFIX+' C (NOLOCK) ON C.PRODUCT_CODE=A.PRODUCT_CODE
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND C.VERSION_NO=A.VERSION_NO AND C.DOCWSL_MEMO_ID=A.INV_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'ARTICLE'+@CMSTSUFFIX+' AR (NOLOCK) ON AR.ARTICLE_CODE= C.ARTICLE_CODE'+
		(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND AR.VERSION_NO=C.VERSION_NO	AND AR.DOCWSL_MEMO_ID=A.INV_ID ' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'SECTIOND'+@CMSTSUFFIX+' SD (NOLOCK) ON SD.SUB_SECTION_CODE= AR.SUB_SECTION_CODE
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN '  AND SD.VERSION_NO=A.VERSION_NO AND SD.DOCWSL_MEMO_ID=A.INV_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'SECTIONM'+@CMSTSUFFIX+' SM (NOLOCK) ON SM.SECTION_CODE= SD.SECTION_CODE 
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND SM.VERSION_NO=A.VERSION_NO	AND SM.DOCWSL_MEMO_ID=A.INV_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'PARA1'+@CMSTSUFFIX+' P1 (NOLOCK) ON P1.PARA1_CODE= C.PARA1_CODE
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND P1.VERSION_NO=A.VERSION_NO	AND P1.DOCWSL_MEMO_ID=A.INV_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'PARA2'+@CMSTSUFFIX+' P2 (NOLOCK) ON P2.PARA2_CODE= C.PARA2_CODE
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND P2.VERSION_NO=A.VERSION_NO	AND P2.DOCWSL_MEMO_ID=A.INV_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'PARA3'+@CMSTSUFFIX+' P3 (NOLOCK) ON P3.PARA3_CODE= C.PARA3_CODE
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND P3.VERSION_NO=A.VERSION_NO	AND P3.DOCWSL_MEMO_ID=A.INV_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'PARA4'+@CMSTSUFFIX+' P4 (NOLOCK) ON P4.PARA4_CODE= C.PARA4_CODE 
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND P4.VERSION_NO=A.VERSION_NO	AND P4.DOCWSL_MEMO_ID=A.INV_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'PARA5'+@CMSTSUFFIX+' P5 (NOLOCK) ON P5.PARA5_CODE= C.PARA5_CODE
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND P5.VERSION_NO=A.VERSION_NO	AND P5.DOCWSL_MEMO_ID=A.INV_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'PARA6'+@CMSTSUFFIX+' P6 (NOLOCK) ON P6.PARA6_CODE= C.PARA6_CODE
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND P6.VERSION_NO=A.VERSION_NO	AND P6.DOCWSL_MEMO_ID=A.INV_ID' ELSE '' END)+'
		LEFT OUTER JOIN UOM U (NOLOCK) ON U.UOM_CODE= AR.UOM_CODE
		LEFT OUTER JOIN '+@CMSTPREFIX+'FORM'+@CMSTSUFFIX+' E (NOLOCK) ON A.ITEM_FORM_ID= E.FORM_ID 
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND E.VERSION_NO=A.VERSION_NO AND E.DOCWSL_MEMO_ID=A.INV_ID' ELSE '' END)+'
		WHERE A.INV_ID = '''+@CWHERECLAUSE+'''
		AND B.VERSION_NO=(SELECT MAX(VERSION_NO) FROM DOCWSL_INM01106_MIRROR WHERE INV_ID=B.INV_ID)
		AND b.TARGET_BIN_ID=''999''
		ORDER BY ROW_ID '
		
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD
		/*ALL CHALLANS IN GIT SHOULD BE SHOWN TO USER WHO HAVE ACCESS TO THAT BIN IRRESPECTIVE OF BIN LOGGED IN*/

	END
	IF @XNTYPE = 'WSR'
	BEGIN
       
       select @CLOCID=value from config where config_option ='location_id'
       
		IF @CLOCID=@CHOLOCID
			SELECT @CMSTPREFIX='',@CMSTSUFFIX='',@BJOINMSTONVERSIONNO=0
		ELSE
			SELECT @CMSTPREFIX='DOCPRT_',@CMSTSUFFIX='_MIRROR',@BJOINMSTONVERSIONNO=1
		---DBO.FN_GET_PC_WO_BATCHID(A.PRODUCT_CODE)
		SET @CCMD=N'SELECT distinct A.RM_ID AS CHMEMO_ID,A.ITEM_TAX_PERCENTAGE AS TAX_PERCENTAGE,
		A.ITEM_TAX_AMOUNT AS TAX_AMOUNT,AR.MRP AS MRP,ISNULL(E.FORM_NAME,'''') AS TAX_STATUS,
		A.PRODUCT_CODE,A.DISCOUNT_PERCENTAGE,A.DISCOUNT_AMOUNT,A.ROW_ID,
		ARTICLE_NO,ARTICLE_NAME,SUB_SECTION_NAME,SECTION_NAME,PARA1_NAME,         
		PARA2_NAME,PARA3_NAME,ISNULL(U.UOM_NAME,'''') AS UOM_NAME , 0 AS QUANTITY_IN_STOCK,  
		PARA4_NAME,PARA5_NAME ,PARA6_NAME  ,A.QUANTITY          
		FROM DOCPRT_RMD01106_MIRROR  A (NOLOCK)         
		JOIN DOCPRT_RMM01106_MIRROR  B (NOLOCK) ON A.RM_ID = B.RM_ID AND A.VERSION_NO=B.VERSION_NO        
		JOIN #BINUSERS BU (NOLOCK) ON B.TARGET_BIN_ID=BU.BIN_ID 
		JOIN '+@CMSTPREFIX+'SKU'+@CMSTSUFFIX+' C (NOLOCK) ON C.PRODUCT_CODE=A.PRODUCT_CODE
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND C.VERSION_NO=A.VERSION_NO AND C.DOCPRT_MEMO_ID=A.RM_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'ARTICLE'+@CMSTSUFFIX+' AR (NOLOCK) ON AR.ARTICLE_CODE= C.ARTICLE_CODE
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND AR.VERSION_NO=A.VERSION_NO AND AR.DOCPRT_MEMO_ID=A.RM_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'SECTIOND'+@CMSTSUFFIX+' SD (NOLOCK) ON SD.SUB_SECTION_CODE= AR.SUB_SECTION_CODE 
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND SD.VERSION_NO=A.VERSION_NO	AND SD.DOCPRT_MEMO_ID=A.RM_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'SECTIONM'+@CMSTSUFFIX+' SM (NOLOCK) ON SM.SECTION_CODE= SD.SECTION_CODE
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND SM.VERSION_NO=A.VERSION_NO	AND SM.DOCPRT_MEMO_ID=A.RM_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'PARA1'+@CMSTSUFFIX+' P1 (NOLOCK) ON P1.PARA1_CODE= C.PARA1_CODE
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND P1.VERSION_NO=A.VERSION_NO	AND P1.DOCPRT_MEMO_ID=A.RM_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'PARA2'+@CMSTSUFFIX+' P2 (NOLOCK) ON P2.PARA2_CODE= C.PARA2_CODE
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND P2.VERSION_NO=A.VERSION_NO	AND P2.DOCPRT_MEMO_ID=A.RM_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'PARA3'+@CMSTSUFFIX+' P3 (NOLOCK) ON P3.PARA3_CODE= C.PARA3_CODE
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND P3.VERSION_NO=A.VERSION_NO	AND P3.DOCPRT_MEMO_ID=A.RM_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'PARA4'+@CMSTSUFFIX+' P4 (NOLOCK) ON P4.PARA4_CODE= C.PARA4_CODE 
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND P4.VERSION_NO=A.VERSION_NO	AND P4.DOCPRT_MEMO_ID=A.RM_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'PARA5'+@CMSTSUFFIX+' P5 (NOLOCK) ON P5.PARA5_CODE= C.PARA5_CODE
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND P5.VERSION_NO=A.VERSION_NO	AND P5.DOCPRT_MEMO_ID=A.RM_ID' ELSE '' END)+'
		JOIN '+@CMSTPREFIX+'PARA6'+@CMSTSUFFIX+' P6 (NOLOCK) ON P6.PARA6_CODE= C.PARA6_CODE
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND P6.VERSION_NO=A.VERSION_NO	AND P6.DOCPRT_MEMO_ID=A.RM_ID' ELSE '' END)+'
		LEFT OUTER JOIN UOM U (NOLOCK) ON U.UOM_CODE= AR.UOM_CODE
		LEFT OUTER JOIN '+@CMSTPREFIX+'FORM'+@CMSTSUFFIX+' E (NOLOCK) ON A.ITEM_FORM_ID= E.FORM_ID 
		'+(CASE WHEN @BJOINMSTONVERSIONNO=1 THEN ' AND E.VERSION_NO=A.VERSION_NO AND E.DOCPRT_MEMO_ID=A.RM_ID' ELSE '' END)+'
		WHERE A.RM_ID =  '''+@CWHERECLAUSE+'''
		AND B.VERSION_NO=(SELECT MAX(VERSION_NO) FROM DOCPRT_RMM01106_MIRROR WHERE RM_ID=B.RM_ID)
		----ORDER BY A.ROW_ID  
		'
		
		PRINT @CCMD
		
		EXEC SP_EXECUTESQL @CCMD

		/*ALL CHALLANS IN GIT SHOULD BE SHOWN TO USER WHO HAVE ACCESS TO THAT BIN IRRESPECTIVE OF BIN LOGGED IN*/
		
	END
	
	IF @XNTYPE = 'CHO'
	BEGIN
	

		SELECT  A.MEMO_ID AS CHMEMO_ID,0 AS TAX_PERCENTAGE,
		0 AS TAX_AMOUNT,AR.MRP AS MRP,'' AS TAX_STATUS,
		A.*,ARTICLE_NO,ARTICLE_NAME,SUB_SECTION_NAME,SECTION_NAME,PARA1_NAME,         
		PARA2_NAME,PARA3_NAME,UOM_NAME , 0 AS QUANTITY_IN_STOCK,  
		PARA4_NAME,PARA5_NAME ,PARA6_NAME          
		FROM FLOOR_ST_DET A (NOLOCK)         
		JOIN FLOOR_ST_MST B (NOLOCK) ON A.MEMO_ID = B.MEMO_ID
		JOIN #BINUSERS BU (NOLOCK) ON B.TARGET_BIN_ID=BU.BIN_ID 
		JOIN SKU C (NOLOCK) ON C.PRODUCT_CODE=A.PRODUCT_CODE
		JOIN ARTICLE AR (NOLOCK) ON AR.ARTICLE_CODE= C.ARTICLE_CODE
		JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE= AR.SUB_SECTION_CODE
		JOIN SECTIONM SM (NOLOCK) ON SM.SECTION_CODE= SD.SECTION_CODE
		JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE= C.PARA1_CODE
		JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE= C.PARA2_CODE
		JOIN PARA3 P3 (NOLOCK) ON P3.PARA3_CODE= C.PARA3_CODE
		JOIN PARA4 P4 (NOLOCK) ON P4.PARA4_CODE= C.PARA4_CODE
		JOIN PARA5 P5 (NOLOCK) ON P5.PARA5_CODE= C.PARA5_CODE
		JOIN PARA6 P6 (NOLOCK) ON P6.PARA6_CODE= C.PARA6_CODE
		JOIN UOM U (NOLOCK) ON U.UOM_CODE= AR.UOM_CODE 
		WHERE A.MEMO_ID =  @CWHERECLAUSE 
		--AND B.TARGET_BIN_ID=@CBINID
		/*ALL CHALLANS IN GIT SHOULD BE SHOWN TO USER WHO HAVE ACCESS TO THAT BIN IRRESPECTIVE OF BIN LOGGED IN*/
		ORDER BY A.ROW_ID  
	END
	
	IF @XNTYPE = 'GV'
	BEGIN
		SELECT  A.MEMO_ID AS CHMEMO_ID,A.*,C.*        
		FROM GV_STKXFER_DET A (NOLOCK)         
		JOIN GV_STKXFER_MST B (NOLOCK) ON A.MEMO_ID = B.MEMO_ID
		JOIN SKU_GV_MST C (NOLOCK) ON C.GV_SRNO=A.GV_SRNO
		WHERE A.MEMO_ID =  @CWHERECLAUSE 
		AND B.TARGET_DEPT_ID=@CDEPTID
		ORDER BY A.ROW_ID  
	END
 END
 ELSE
 BEGIN 
		SELECT  A.CN_ID AS CHMEMO_ID,A.ITEM_TAX_PERCENTAGE AS TAX_PERCENTAGE,
		A.ITEM_TAX_AMOUNT AS TAX_AMOUNT,AR.MRP AS MRP,E.FORM_NAME AS TAX_STATUS,
		A.*,ARTICLE_NO,ARTICLE_NAME,SUB_SECTION_NAME,SECTION_NAME,PARA1_NAME,         
		PARA2_NAME,PARA3_NAME,UOM_NAME , 0 AS QUANTITY_IN_STOCK,  
		PARA4_NAME,PARA5_NAME ,PARA6_NAME          
		FROM CND01106  A (NOLOCK)         
		JOIN CNM01106  B (NOLOCK) ON A.CN_ID = B.CN_ID        
		JOIN SKU C (NOLOCK) ON C.PRODUCT_CODE=A.PRODUCT_CODE
		JOIN ARTICLE AR (NOLOCK) ON AR.ARTICLE_CODE= C.ARTICLE_CODE
		JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE= AR.SUB_SECTION_CODE
		JOIN SECTIONM SM (NOLOCK) ON SM.SECTION_CODE= SD.SECTION_CODE
		JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE= C.PARA1_CODE
		JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE= C.PARA2_CODE
		JOIN PARA3 P3 (NOLOCK) ON P3.PARA3_CODE= C.PARA3_CODE
		JOIN PARA4 P4 (NOLOCK) ON P4.PARA4_CODE= C.PARA4_CODE
		JOIN PARA5 P5 (NOLOCK) ON P5.PARA5_CODE= C.PARA5_CODE
		JOIN PARA6 P6 (NOLOCK) ON P6.PARA6_CODE= C.PARA6_CODE
		JOIN UOM U (NOLOCK) ON U.UOM_CODE= AR.UOM_CODE 
		JOIN FORM E (NOLOCK) ON A.ITEM_FORM_ID= E.FORM_ID
		WHERE 1=2
 END
 GOTO LAST      

LBLGETSERIES:
	EXEC SP3S_GETMEMOSERIES_LOV @CXNTYPE=@XNTYPE,@CLOCID=@CDEPTID
 LAST:              
END
