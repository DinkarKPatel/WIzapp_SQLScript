CREATE PROCEDURE SAVETRAN_MANUALCOUNT_STOCK--(LocId 3 digit change by Sanjay:06-11-2024)
@NUPDATEMODE		NUMERIC(1,0),
@NSPID				VARCHAR(40),
@cMemoId	VARCHAR(40)=''
AS
BEGIN
	-- @NUPDATEMODE:	1- NEW MEMO ADDED=4
		--					2- EXISTING MEMO EDITED, 
	
	DECLARE @cStep VARCHAR(5),@CERRORMSG VARCHAR(MAX),@CLOCATIONID VARCHAR(4),@NSAVETRANLOOP NUMERIC(1,0),@CFINYEAR VARCHAR(5),
			@CMEMONOVAL VARCHAR(10),@CKEYFIELDVAL VARCHAR(40),@bAddmode BIT,@bSubmit BIT,@CFILTERCONDITION varchar(200)
	
	SET @bSubmit=0

	DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))
	
	SET @CERRORMSG			= ''
	
		
	SET @cStep = 10		-- GETTING DEPTID INFO FROM TEMP TABLE
	BEGIN TRY
		BEGIN TRANSACTION			

		IF @NUPDATEMODE=4
		BEGIN
			UPDATE MANUAL_STOCK_COUNT_XN_mst WITH (ROWLOCK) SET completed=1 WHERE memo_id=@cMemoId
			set @CKEYFIELDVAL=@cMemoid
			GOTO END_PROC
		END	

		DELETE FROM STKCNT_MANUAL_STOCK_COUNT_XN_det_upload with (rowLOCK) WHERE sp_id=@nSpId AND (computer_stock=0 and physical_stock=0)

		
		-- START UPDATING XN TABLES	
		IF @NUPDATEMODE = 1 -- ADDMODE	
		BEGIN	
			SELECT @CFINYEAR=fin_year,@CLOCATIONID=location_code from STKCNT_MANUAL_STOCK_COUNT_XN_MST_upload(NOLOCK) WHERE sp_id=@nSpId
		    IF ISNULL(@CLOCATIONID,'')=''
				BEGIN
				SET @CERRORMSG = ' LOCATION ID CAN NOT BE BLANK  '  
				GOTO END_PROC    
			END

			SET @cStep = 20
			

			SET @NSAVETRANLOOP=0
			WHILE @NSAVETRANLOOP=0
			BEGIN
				SET @cStep = 30
				EXEC GETNEXTKEY 'MANUAL_STOCK_COUNT_XN_MST', 'memo_no',10,@CLOCATIONID,1,@CFINYEAR,0, @CMEMONOVAL OUTPUT   
					
				PRINT @CMEMONOVAL
				IF EXISTS ( SELECT memo_no FROM MANUAL_STOCK_COUNT_XN_MST (NOLOCK)
							WHERE memo_no=@CMEMONOVAL AND FIN_YEAR = @CFINYEAR)
					SET @NSAVETRANLOOP=0
				ELSE
					SET @NSAVETRANLOOP=1
			END

			SET @cStep = 40
			IF @CMEMONOVAL IS NULL OR @CMEMONOVAL LIKE '%LATER%'
			BEGIN
					SET @CERRORMSG = ' ERROR CREATING NEXT MEMO NO....'	
					GOTO END_PROC  		
			END
			
			SET @cStep = 50
			-- GENERATING NEW memoid
			SET @CKEYFIELDVAL = @CLOCATIONID + @CFINYEAR+ REPLICATE('0', 15-LEN(LTRIM(RTRIM(@CMEMONOVAL)))) + LTRIM(RTRIM(@CMEMONOVAL))
			IF @CKEYFIELDVAL IS NULL OR @CKEYFIELDVAL LIKE '%LATER%'
			BEGIN
					SET @CERRORMSG = 'ERROR CREATING NEXT MEMO ID....'
					-- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'
					GOTO END_PROC
			END

			SET @cStep = 60
			UPDATE STKCNT_MANUAL_STOCK_COUNT_XN_MST_upload  SET memo_no=@CMEMONOVAL,memo_id=@CKEYFIELDVAL WHERE sp_id=@NSPID


		END					-- END OF ADDMODE
		ELSE
		BEGIN
			SELECT @CKEYFIELDVAL=memo_id FROM STKCNT_MANUAL_STOCK_COUNT_XN_MST_upload (NOLOCK) WHERE sp_id=@nSpid
		END

		select @bSubmit=isnull(completed,0) from stkcnt_MANUAL_STOCK_COUNT_XN_mst_upload 
		WHERE sp_id=@nSpid
			
		SET @cStep = 70
		UPDATE a  SET last_update=getdate(),total_computer_stock=b.total_computer_stock,
		total_physical_stock=b.total_physical_stock from STKCNT_MANUAL_STOCK_COUNT_XN_mst_upload a WITH (ROWLOCK)
		JOIN (select sum(computer_stock) as total_computer_stock,sum(physical_stock) as total_physical_stock from STKCNT_MANUAL_STOCK_COUNT_XN_det_upload (nolock)
			   WHERE sp_id=@NSPID) b on 1=1
		where sp_id=@nSpId

		UPDATE STKCNT_MANUAL_STOCK_COUNT_XN_DET_upload SET memo_id=@CKEYFIELDVAL WHERE sp_id=@NSPID

		UPDATE STKCNT_MANUAL_STOCK_COUNT_XN_DET_upload SET row_id=newid() WHERE sp_id=@NSPID 

		IF @NUPDATEMODE=1
			set  @bAddmode=1
		else
			set @bAddmode=0
		
		SET @CFILTERCONDITION='b.sp_id='''+@nSpId+''''

		SET @cStep = 80
		EXEC UPDATEMASTERXN_OPT 
			  @CSOURCEDB	= ''
			, @CSOURCETABLE = 'STKCNT_MANUAL_STOCK_COUNT_XN_MST_upload'
			, @CDESTDB		= ''
			, @CDESTTABLE	= 'MANUAL_STOCK_COUNT_XN_mst'
			, @CKEYFIELD1	= 'memo_id'
			, @BALWAYSUPDATE = 1
			, @LINSERTONLY=@bAddmode
			, @lUpdateXns = @bAddmode
			, @CFILTERCONDITION=@CFILTERCONDITION
			
		SET @cStep = 90
		EXEC UPDATEMASTERXN_OPT 
			  @CSOURCEDB	= ''
			, @CSOURCETABLE = 'STKCNT_MANUAL_STOCK_COUNT_XN_DET_upload'
			, @CDESTDB		= ''
			, @CDESTTABLE	= 'MANUAL_STOCK_COUNT_XN_DET'
			, @CKEYFIELD1	= 'ROW_ID'
			, @BALWAYSUPDATE = 1
			, @LINSERTONLY=@bAddmode
			, @lUpdateXns = @bAddmode
			, @CFILTERCONDITION=@CFILTERCONDITION

		-- VALIDATING ENTRIES 
	END TRY
	BEGIN CATCH
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		
		
		GOTO END_PROC
	END CATCH
	
END_PROC:
	
	
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')=''
		BEGIN
		    
		UPDATE MANUAL_STOCK_COUNT_XN_MST SET HO_SYNCH_LAST_UPDATE='' WHERE MEMO_ID=@cKeyfieldval
		COMMIT TRANSACTION
		END	
		ELSE
			ROLLBACK
	END
	
	SELECT ISNULL(@cKeyfieldval,'') as memo_id,@CERRORMSG as errmsg
END
------------------------------------------------------ END OF PROCEDURE SAVETRAN_MANUALCOUNT_STOCK