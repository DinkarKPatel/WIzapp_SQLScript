CREATE PROCEDURE SP3S_XN_APPROVAL        
(        
 @NQUERYID  NUMERIC(5),        
 @CXNTYPE  VARCHAR(10),        
 @NLEVEL   NUMERIC(5),        
 @CWHERE   VARCHAR(MAX),         
 @CTODT   DATETIME  ,
 @cDeptID VARCHAR(10)= ''      
)         
AS        
BEGIN        

declare @cCurDeptID varchar(5),@dStartingFrom datetime,@bConsiderAutoPostedVoucher bit,
        @dStartingFrom_pbm datetime


IF ISNULL(@cDeptID,'')='' 
    SELECT TOP 1 @cCurDeptID=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
 ELSE
    SELECT @cCurDeptID= @cDeptID

select top 1  @dStartingFrom=isnull(CutOffDate,''),@bConsiderAutoPostedVoucher=isnull(AllowAutoPostedEntry,0) 
 from loc_xnsapproval
  where xn_type=@cXnType and DEPT_ID=@cCurDeptID

select @dStartingFrom=isnull(@dStartingFrom,'')
		,@bConsiderAutoPostedVoucher=ISNULL(@bConsiderAutoPostedVoucher,0)


	IF @dStartingFrom=''
	SET @dStartingFrom= @CTODT
	
	SELECT @NLEVEL=B.level_no  FROM XN_APPROVAL_CHECKLIST_LEVEL_USERS A         
	JOIN XN_APPROVAL_CHECKLIST_LEVELS B ON  B.LEVEL_NO=A.LEVEL_NO and a.level_code=b.level_code AND B.XN_TYPE=A.XN_TYPE        
	WHERE USER_CODE=@CWHERE AND A.XN_TYPE=@CXNTYPE  and a.dept_id=@cCurDeptID 
	
		--*-- PURCHASE INVOICE
	  
	IF OBJECT_ID ('TEMPDB..#TMPREMARKS','U') IS NOT NULL
	   DROP TABLE #TMPREMARKS
			
	 select XN_TYPE=CAST('' AS VARCHAR(10)),MEMO_ID=CAST('' AS VARCHAR(100)),APPROVAL_REMARKS into #TMPREMARKS from 	PIM_XN_APPROVAL where 1=2 
      
IF @NQUERYID=1        
 GOTO SSPL_MST        
ELSE IF @NQUERYID=2        
 GOTO SSPL_DET        
ELSE IF @NQUERYID=3        
 GOTO SSPL_CHECKLIST_LEVEL_DETAILS           
ELSE IF @NQUERYID=4        
 GOTO SSPL_CHECKLIST_LEVEL_USERS
       
SSPL_MST: 

    
 IF(@CXNTYPE='PUR')  
 BEGIN   
	 
	 
select top 1  @dStartingFrom_pbm=isnull(CutOffDate,'')
 from loc_xnsapproval
 where xn_type='PBM' and DEPT_ID=@cCurDeptID

select @dStartingFrom_pbm=isnull(@dStartingFrom_pbm,'')
	
		;WITH CTE AS
		(
		 SELECT  XN_TYPE,MRR_ID,APPROVAL_REMARKS, 
				 SR=ROW_NUMBER() OVER ( PARTITION BY XN_TYPE,MRR_ID ORDER BY LAST_UPDATE DESC)  
		 FROM  PIM_XN_APPROVAL WHERE XN_TYPE IN ('PUR','PBM')
		)
        
        insert into #TMPREMARKS (XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
		SELECT XN_TYPE,MRR_ID,APPROVAL_REMARKS 
		FROM CTE WHERE SR=1  
	
	  
		--Pending for higher level
		
	  select ROW_NUMBER() OVER (ORDER BY XN_TYPE DESC, A.MRR_ID ) AS SRNO,* from 
	  (
	  SELECT 'PUR' AS XN_TYPE,A.MRR_ID ,0 AS APPROVAL_STATUS,ISNULL(XN.APPROVAL_REMARKS,'') AS APPROVAL_REMARKS,
	  GETDATE() AS [LAST_UPDATE],  'LATER' AS row_id,A.MRR_NO AS [XN_NO],A.INV_DT AS [XN_DT],
	  C.AC_CODE,C.AC_NAME,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + C.AREA_NAME +           
	  ' ' + C.CITY + ' ' + C.STATE AS [ADDRESS],        
	  A.Terms ,
	  ISNULL(LT.REMARKS,'') AS TERMS_REMARKS,A.BILL_NO,convert(BIT,0) AS IsHidden      
	  ,A.cancelled, ISNULL(LT.TERMS_NAME,'') As TERMS_NAME,A.receipt_dt,UNAPPROVED  =CAST(0 AS BIT),
	  USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	  DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10)),
	  CONVERT(NUMERIC(12,2),
	  ISNULL(PID.RSP_value,0)) AS RSP, 
	  CONVERT(NUMERIC(12,2),P_VALUE) AS PURCHASE_PRICE,
	  MARKDOWN_PERCENTAGE=CONVERT(NUMERIC(12,2),CASE WHEN MRP= 0 THEN 0 ELSE ROUND((RSP_value-P_VALUE)*100/RSP_value,2) END),
	  A.TOTAL_AMOUNT AS [AMOUNT] ,
	   ISNULL(A.LEDGER_NET_AMOUNT,0) AS LEDGER_NETAMOUNT,
	  a.TOTAL_AMOUNT- ISNULL(A.LEDGER_NET_AMOUNT,0) AS DIFF_NETAMOUNT,
	  ISNULL(rmm.TOTAL_AMOUNT,0) AS FDN_AMT,
	  isnull(RMM.RM_NO,'') AS FDN_NO
	  --ISNULL(rmm.TOTAL_AMOUNT,0) AS FDN_AMT,RMM.RM_NO AS FDN_NO
	  FROM PIM01106 A  (NOLOCK) 
	  JOIN
	  (
	   SELECT MRR_ID,SUM(MRP*QUANTITY) AS RSP_value,sum(MRP) AS MRP,SUM(purchase_price*quantity) AS P_VALUE,
	          SUM(ISNULL(PRTAMOUNT,0)) AS FDN_AMT
	   FROM pid01106 A
	   GROUP BY  MRR_ID
	  ) PID ON A.mrr_id =PID.mrr_id        
	  JOIN LMV01106 C (NOLOCK) ON A.AC_CODE = C.AC_CODE 
	  LEFT JOIN LEDGER_TERMS LT(NOLOCK) ON 1=2
	  LEFT JOIN #TMPREMARKS XN ON XN.MEMO_ID =A.mrr_id AND XN.XN_TYPE='PUR'       
	  LEFT OUTER JOIN rmm01106 rmm ON rmm.REFMEMOID=a.mrr_id and rmm.prtsource='PUR' and rmm.cancelled=0              
	  WHERE a.location_Code =@cCurDeptID and A.BILL_NO<>'' 
	  AND  isnull(a.pim_mode,0)<>5 
	  AND  ISNULL(a.bill_challan_mode,0)<>1 
	  AND A.INV_MODE=1 
	  AND (@dStartingFrom='' OR isnull(A.mrr_DT,a.receipt_dt) BETWEEN @dStartingFrom AND @CTODT)
			AND ISNULL(A.ApprovedLevelNo,0)=ISNULL(@NLEVEL,0)-1
			AND A.CANCELLED=0
	  UNION ALL
	  SELECT  'PBM' AS XN_TYPE,A.mrr_id as MEMO_ID ,0 AS approval_status,ISNULL(XN.APPROVAL_REMARKS,'') AS approval_remarks,
	  GETDATE() AS [LAST_UPDATE],  'LATER' AS row_id,A.mrr_no AS [XN_NO],A.inv_dt  AS [XN_DT],
	  C.AC_CODE,C.AC_NAME,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + C.AREA_NAME +           
	  ' ' + C.CITY + ' ' + C.STATE AS [ADDRESS], 
	  '' AS Terms ,
	  '' AS TERMS_REMARKS,A.BILL_NO,convert(BIT,0) AS IsHidden      
	  ,A.cancelled,'' As TERMS_NAME,A.receipt_dt  as receipt_dt,UNAPPROVED  =CAST(0 AS BIT),
	  USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	  DISAPPROVAL_STATUS =CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(5)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10)),
	  0 AS RSP,
	  0 AS PURCHASE_PRICE,
	  MARKDOWN_PERCENTAGE=0,
	  A.total_amount AS [AMOUNT] ,
	  0 AS LEDGER_AMOUNT ,
	  0 AS DIFF_NETAMOUNT,
	  0 AS FDN_AMT,'' AS FDN_NO
	  FROM pim01106  A  (NOLOCK)        
	  JOIN LMV01106 C (NOLOCK) ON A.AC_CODE = C.AC_CODE 
	  LEFT JOIN #TMPREMARKS XN ON XN.MEMO_ID =A.mrr_id  AND XN.XN_TYPE='PBM'      
	  WHERE A.location_Code =@cCurDeptID and A.BILL_NO<>'' 
			AND (@dStartingFrom_pbm='' OR A.INV_DT BETWEEN @dStartingFrom_pbm AND @CTODT) 
			AND ISNULL(A.ApprovedLevelNo,0)=ISNULL(@NLEVEL,0)-1
			AND A.CANCELLED=0
			AND  isnull(a.pim_mode,0)=5
	 ) A
	 ORDER BY XN_TYPE DESC, A.MRR_ID 	 
    GOTO SSPL99
END 
ELSE IF(@CXNTYPE='PRT')  
BEGIN         
       
       ;WITH CTE AS
		(
		 SELECT  XN_TYPE='PRT',RM_ID,APPROVAL_REMARKS, 
				 SR=ROW_NUMBER() OVER ( PARTITION BY RM_ID ORDER BY LAST_UPDATE DESC)  
		 FROM  PRT_XN_APPROVAL 
		)
        
        insert into #TMPREMARKS (XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
		SELECT XN_TYPE,RM_ID,APPROVAL_REMARKS 
		FROM CTE WHERE SR=1  
		
		
		
		SELECT 'PRT' AS XN_TYPE,A.RM_ID AS RM_ID,0 AS approval_status,ISNULL(XN.APPROVAL_REMARKS,'') as approval_remarks,
		GETDATE() AS [LAST_UPDATE],  'LATER' AS row_id,A.RM_NO AS [XN_NO],A.RM_DT AS [XN_DT],
		C.AC_NAME ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + C.AREA_NAME +           
		' ' + C.CITY + ' ' + C.STATE AS [ADDRESS],        
		CONVERT(BIT ,0) AS [APPROVED],UNAPPROVED  =CAST(0 AS BIT),
		A.total_amount AS [AMOUNT],
		ROW_NUMBER() OVER (ORDER BY  A.RM_ID ) AS [SRNO],convert(BIT,0) AS IsHidden,       
		A.cancelled,(CASE WHEN A.dn_TYPE=2 then 'Financial' ELSE 'Regular' end) as DebitNoteType,
		USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	    SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	    DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10)),
	    diffAmount
		FROM RMM01106 A  (NOLOCK)        
		JOIN LMV01106 C (NOLOCK) ON A.AC_CODE = C.AC_CODE 
		LEFT OUTER JOIN  #TMPREMARKS XN ON XN.MEMO_ID =A.RM_id AND XN.XN_TYPE='PRT'        
		WHERE A.location_Code =@cCurDeptID 
		AND (@dStartingFrom='' OR A.RM_DT BETWEEN @dStartingFrom AND @CTODT) 
		AND ISNULL(A.ApprovedLevelNo,0)=ISNULL(@NLEVEL,0)-1
		AND A.CANCELLED=0
		ORDER BY A.RM_ID
		
  
   GOTO SSPL99
END


ELSE IF(@CXNTYPE='EDS')  
BEGIN         
       
       ;WITH CTE AS
		(
		 SELECT  XN_TYPE='EDS',MEMO_ID,APPROVAL_REMARKS, 
				 SR=ROW_NUMBER() OVER ( PARTITION BY MEMO_ID ORDER BY LAST_UPDATE DESC)  
		 FROM  EDS_XN_APPROVAL 
		)
        
        insert into #TMPREMARKS (XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
		SELECT XN_TYPE,MEMO_ID,APPROVAL_REMARKS 
		FROM CTE WHERE SR=1  
		
		
		
		SELECT 'EDS' AS XN_TYPE,A.MEMO_ID AS MEMO_ID,0 AS approval_status,
		ISNULL(XN.APPROVAL_REMARKS,'') as approval_remarks,
		GETDATE() AS [LAST_UPDATE],  'LATER' AS row_id,A.MEMO_NO AS [XN_NO],A.MEMO_DT AS [XN_DT],
		C.AC_NAME ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + C.AREA_NAME +           
		' ' + C.CITY + ' ' + C.STATE AS [ADDRESS],        
		CONVERT(BIT ,0) AS [APPROVED],UNAPPROVED  =CAST(0 AS BIT),
		A.VENDOR_AMOUNT AS [AMOUNT],
		ROW_NUMBER() OVER (ORDER BY  A.memo_id ) AS [SRNO],convert(BIT,0) AS IsHidden,       
		A.cancelled,(CASE WHEN A.EOSS_TYPE=1 then 'Against Eoss Discounts' ELSE 'Against Eoss Opening Stock' end) as EossType,
		USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	    SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),
	    LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	    DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),
	    DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),
	    LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))
		FROM EOSSDNM A  (NOLOCK)        
		JOIN LMV01106 C (NOLOCK) ON A.AC_CODE = C.AC_CODE 
		LEFT OUTER JOIN  #TMPREMARKS XN ON XN.MEMO_ID =A.MEMO_ID AND XN.XN_TYPE='EDS'        
		WHERE A.location_code =@cCurDeptID 
		AND (@dStartingFrom='' OR A.MEMO_DT BETWEEN @dStartingFrom AND @CTODT) 
		AND ISNULL(A.ApprovedLevelNo,0)=ISNULL(@NLEVEL,0)-1
		AND A.CANCELLED=0
		ORDER BY A.MEMO_ID
		
  
   GOTO SSPL99
END

ELSE IF(@CXNTYPE='PTC')  
  BEGIN         
      
        ;WITH CTE AS
		(
		 SELECT  XN_TYPE='PTC',PED_ROW_ID,APPROVAL_REMARKS, 
				 SR=ROW_NUMBER() OVER ( PARTITION BY PED_ROW_ID ORDER BY LAST_UPDATE DESC)  
		 FROM  PED_XN_APPROVAL 
		)
        
        insert into #TMPREMARKS (XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
		SELECT XN_TYPE,PED_ROW_ID,APPROVAL_REMARKS 
		FROM CTE WHERE SR=1  
		
	  SELECT 'PTC' AS XN_TYPE,A.ROW_ID AS PED_ROW_ID,0 AS approval_status,ISNULL(Y.APPROVAL_REMARKS,'') AS approval_remarks,
	  GETDATE() AS [LAST_UPDATE],  'LATER' AS row_id,A1.PEM_MEMO_NO AS [XN_NO],A1.PEM_MEMO_DT AS [XN_DT],
	  C.AC_NAME ,ISNULL(C.ADDRESS0,'')+' '+ ISNULL(C.ADDRESS1,'') + ' ' + ISNULL(C.ADDRESS2,'') + ', ' + ISNULL(C.AREA_NAME,'') +           
	  ' ' + ISNULL(C.CITY,'') + ' ' + ISNULL(C.STATE,'') AS [ADDRESS],        
	  CONVERT(BIT ,0) AS [APPROVED],UNAPPROVED  =CAST(0 AS BIT), 
	  A.xn_amount AS [AMOUNT], 
	  ROW_NUMBER() OVER (ORDER BY  A.PEM_MEMO_ID,A.ROW_ID ) AS [SRNO],A.PEM_MEMO_ID,CONVERT(BIT,0) AS HiddenFromApproval,Convert(bit,0) as IsHidden
	  ,A1.cancelled,A.ref_no,A.narration,
	  USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	  DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))
	  FROM PED01106 A  (NOLOCK)        
      JOIN PEM01106 A1  (NOLOCK) ON A1.PEM_MEMO_ID=A.PEM_MEMO_ID
     -- LEFT OUTER JOIN PTCBills (NOLOCK) ON PTCBills.PED_ROW_ID=A.ROW_ID
      JOIN LMV01106 C (NOLOCK) ON A.AC_CODE = C.AC_CODE                 
      left  JOIN #TMPREMARKS Y  ON Y.memo_id=A.ROW_ID              
      WHERE A1.location_Code =@cCurDeptID 
      AND (@dStartingFrom='' OR A1.PEM_MEMO_DT BETWEEN @dStartingFrom AND @CTODT )
      AND ISNULL(A.ApprovedLevelNo,0)=ISNULL(@NLEVEL,0)-1     
      AND A1.CANCELLED=0
      ORDER BY  A.PEM_MEMO_ID,A.ROW_ID
      
   GOTO SSPL99
 END
 
 ELSE IF(@CXNTYPE='VCH')  
 BEGIN        
 
      ;WITH CTE AS
	  (
	    SELECT 'VCH' AS XN_TYPE,VM_id,APPROVAL_REMARKS,
	    SR=ROW_NUMBER () OVER (PARTITION BY VM_id ORDER BY LAST_UPDATE DESC)
	    FROM VM_XN_APPROVAL (nolock)
	  )
	  
	  INSERT INTO #TMPREMARKS(XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
	  SELECT XN_TYPE,VM_id,APPROVAL_REMARKS
	  FROM CTE WHERE SR=1
	   
	   
	   
	  SELECT 'VCH' AS [XN_TYPE],A.VM_ID ,0 AS approval_status,ISNULL(XN.APPROVAL_REMARKS,'') AS approval_remarks,
	  GETDATE() AS [LAST_UPDATE],  'LATER' AS row_id,A.VOUCHER_NO AS [XN_NO],A.VOUCHER_DT AS [XN_DT],
	  C.dept_name , C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + D.AREA_NAME +           
	  ' ' + E.CITY + ' ' + F.STATE AS [ADDRESS],A.DRTOTAL AS [AMOUNT],    
	  ROW_NUMBER() OVER (ORDER BY  A.VM_ID ) AS [SRNO],B.VOUCHER_TYPE ,A.REF_NO,convert(BIT,0) AS IsHidden     
	  ,A.cancelled,
	  USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	  DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))
	  FROM VM01106 A  (NOLOCK)  
	  JOIN VCHTYPE B (NOLOCK) ON A.VOUCHER_CODE=B.VOUCHER_CODE     
	  JOIN LOCATION C (NOLOCK) ON A.DEPT_ID = C.DEPT_ID      
	  JOIN AREA D (NOLOCK) ON D.AREA_CODE = C.AREA_CODE  
	  JOIN CITY E (NOLOCK) ON E.CITY_CODE = D.CITY_CODE  
	  JOIN STATE F (NOLOCK) ON F.STATE_CODE = E.STATE_CODE 
	  LEFT OUTER JOIN #TMPREMARKS XN ON XN.MEMO_ID=A.VM_ID 
	  LEFT OUTER JOIN POSTACT_VOUCHER_LINK VL (NOLOCK) ON A.VM_ID=VL.VM_ID   
	  WHERE 
	  --LEFT(A.VM_ID,2)=@cCurDeptID AND
	   (@bConsiderAutoPostedVoucher=1 OR a.BILL_TYPE='')
	  AND (@dStartingFrom='' OR A.VOUCHER_DT BETWEEN @dStartingFrom AND @CTODT) 
	  AND  VL.VM_ID IS NULL
	  AND A.CANCELLED=0
	  AND ISNULL(A.ApprovedLevelNo,0)=isnull(@NLEVEL,0)-1
	  ORDER BY A.VM_ID
	  
	  GOTO SSPL99
END	  

ELSE IF @CXNTYPE='SLSCRI'
BEGIN
	IF @NLEVEL=1
	BEGIN
	
	;WITH CTE AS
	  (
	    SELECT 'SLSCRI' AS XN_TYPE,CM_id,APPROVAL_REMARKS,
	    SR=ROW_NUMBER () OVER (PARTITION BY CM_id ORDER BY LAST_UPDATE DESC)
	    FROM SLSCRI_XN_APPROVAL
	  )
	  
	  INSERT INTO #TMPREMARKS(XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
	  SELECT XN_TYPE,CM_id,APPROVAL_REMARKS
	  FROM CTE WHERE SR=1 
	  
	SELECT 'SLSCRI' AS [xn_TYPE],A.cm_id AS [cm_id],0 AS approval_status
	  ,ISNULL(approval_remarks,'')  AS approval_remarks,
	  GETDATE() AS [LAST_UPDATE],'LATER' AS row_id,A.CM_NO AS [XN_NO],A.CM_DT AS [XN_DT],
	  (C.customer_fname+' '+C.customer_lname) AS AC_NAME
	  ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + ar.AREA_NAME +           
	  ' ' + ct.CITY + ' ' + st.STATE AS [ADDRESS],        
	  A.subtotal AS [AMOUNT] ,ROW_NUMBER() OVER (ORDER BY  A.CM_ID ) AS [SRNO],convert(BIT,0) AS IsHidden      
	  ,A.cancelled,
	  USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	  DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))
	  FROM dbo.CMM01106 A  (NOLOCK) 
	  LEFT JOIN dbo.CreditBills CB(NOLOCK) ON a.cm_id=cb.cm_id      
	  JOIN dbo.VW_BILL_PAYMODE VBP (NOLOCK) ON A.CM_ID = VBP.MEMO_ID  AND VBP.XN_TYPE='SLS'
	  JOIN dbo.custdym C (NOLOCK) ON A.CUSTOMER_CODE = C.CUSTOMER_CODE  
	  LEFT JOIN dbo.AREA AR(NOLOCK) ON AR.area_code=C.area_code
	  LEFT JOIN dbo.CITY CT(NOLOCK) ON AR.city_code=CT.CITY_CODE
	  LEFT JOIN dbo.STATE ST(NOLOCK) ON ST.state_code=CT.state_code
	  LEFT OUTER JOIN #TMPREMARKS XN ON XN.MEMO_ID=A.CM_ID 
	  WHERE A.location_Code =@cCurDeptID 
	  AND (@dStartingFrom='' OR A.CM_DT BETWEEN @dStartingFrom AND @CTODT )
	  AND VBP.CREDIT_AMOUNT>0 
	  AND isnull(cb.ApprovedLevelNo	,0)=0 
	  AND A.CANCELLED=0
	  ORDER BY A.cm_id 
	  
	  GOTO SSPL99
	END
    ELSE
    BEGIN
     ;WITH CTE AS
	  (
	    SELECT 'SLSCRI' AS XN_TYPE,CM_id,APPROVAL_REMARKS,
	    SR=ROW_NUMBER () OVER (PARTITION BY CM_id ORDER BY LAST_UPDATE DESC)
	    FROM SLSCRI_XN_APPROVAL
	  )
	  
	  INSERT INTO #TMPREMARKS(XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
	  SELECT XN_TYPE,CM_id,APPROVAL_REMARKS
	  FROM CTE WHERE SR=1 
	 
	  SELECT 'SLSCRI' AS [xn_TYPE],A.cm_id AS [cm_id],0 AS approval_status
	  ,ISNULL(approval_remarks,'') AS approval_remarks,
	  GETDATE() AS [LAST_UPDATE],  'LATER' AS row_id,A.CM_NO AS [XN_NO],A.CM_DT AS [XN_DT],
	  (C.customer_fname+' '+C.customer_lname) AS AC_NAME
	  ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + ar.AREA_NAME +           
	  ' ' + ct.CITY + ' ' + st.STATE AS [ADDRESS],        
	  A.subtotal AS [AMOUNT] ,ROW_NUMBER() OVER (ORDER BY  A.CM_ID ) AS [SRNO],convert(BIT,0) AS IsHidden      
	  ,A.cancelled,
	  USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	  DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))
	  FROM dbo.CMM01106 A  (NOLOCK) 
	  JOIN dbo.CreditBills CB(NOLOCK) ON a.cm_id=cb.cm_id      
	  JOIN dbo.VW_BILL_PAYMODE VBP (NOLOCK) ON A.CM_ID = VBP.MEMO_ID  AND VBP.XN_TYPE='SLS'
	  JOIN dbo.custdym C (NOLOCK) ON A.CUSTOMER_CODE = C.CUSTOMER_CODE  
	  LEFT JOIN dbo.AREA AR(NOLOCK) ON AR.area_code=C.area_code
	  LEFT JOIN dbo.CITY CT(NOLOCK) ON AR.city_code=CT.CITY_CODE
	  LEFT JOIN dbo.STATE ST(NOLOCK) ON ST.state_code=CT.state_code
	  LEFT OUTER JOIN #TMPREMARKS XN ON XN.MEMO_ID=A.CM_ID 
	  WHERE a.location_Code =@cCurDeptID
	  AND (@dStartingFrom='' OR A.CM_DT BETWEEN @dStartingFrom AND @CTODT )
	  AND VBP.CREDIT_AMOUNT>0 
	  AND ISNULL(CB.ApprovedLevelNo,0)=@NLEVEL-1
	  AND A.CANCELLED=0
	  ORDER BY A.cm_id 
	  
	  GOTO SSPL99
    END 
 END 
 
 ELSE IF @CXNTYPE IN ('SLSEDT','EOSSDSLS')
  /*Temperory solution as Changes in application is not done completely*/
 BEGIN 
 
       ;WITH CTE AS
	  (
	    SELECT @CXNTYPE AS XN_TYPE,CM_id,APPROVAL_REMARKS,
	    SR=ROW_NUMBER () OVER (PARTITION BY CM_id ORDER BY LAST_UPDATE DESC)
	    FROM EOSSDSLS_XN_APPROVAL
	  )
	  
	  INSERT INTO #TMPREMARKS(XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
	  SELECT XN_TYPE,CM_id,APPROVAL_REMARKS
	  FROM CTE WHERE SR=1 
	  
	  
	  
	   if object_id('tempdb..#BillFirstAudit','U') is not null
		drop table #BillFirstAudit
  
	  select ROW_NUMBER() over(partition by cmm.cm_id order by acmm.AUDITDATETIME asc) as sno,cmm.cm_id,acmm.AUDITID
	  into #BillFirstAudit
	  from cmm01106 cmm
	  join cmm01106_AUDIT acmm on cmm.cm_id=acmm.cm_id
	  where cmm.location_Code =@cCurDeptID 
	  and  cmm.location_Code=@cCurDeptID 
	  AND (@dStartingFrom='' OR cmm.CM_DT BETWEEN @dStartingFrom AND @CTODT )
	 
	  delete #BillFirstAudit where sno>1
	  
	  --List of modified bills
	  SELECT cmm.cm_id,SUM(acmd.quantity) as org_quantity
			,sum(acmd.discount_amount+ISNULL(acmd.cmm_discount_amount,0)) as org_discount_amount
			,acmm.NET_AMOUNT as org_net_amount
			,cmd.NEW_QUANTITY,cmd.total_discount_amount as new_discount_amount,cmm.NET_AMOUNT as new_net_amount
	  into #ModifiedBills
	  FROM CMM01106 CMM
	  join #BillFirstAudit bfa on cmm.cm_id=bfa.cm_id
	  JOIN cmm01106_AUDIT ACMM ON bfa.AUDITID=ACMM.AUDITID
	  JOIN cmd01106_AUDIT ACMD ON ACMM.AUDITID=ACMD.AUDITID
	  JOIN 
	  (
		SELECT CMM.CM_ID,SUM(CMD.QUANTITY) AS new_quantity
			  ,sum(cmd.discount_amount+ISNULL(cmd.cmm_discount_amount,0)) as total_discount_amount
		FROM cmm01106 CMM
		JOIN cmd01106 CMD ON CMM.cm_id=CMD.cm_id
		WHERE CMM.location_Code =@cCurDeptID and
		CMM.CANCELLED=0 AND CMM.CM_DT  BETWEEN @dStartingFrom AND @CTODT
		group by CMM.CM_ID
	  )CMD ON CMM.cm_id=CMD.CM_ID
	  group by cmm.cm_id,acmm.NET_AMOUNT,cmd.NEW_QUANTITY,cmd.total_discount_amount,cmm.NET_AMOUNT
	  having (cmm.NET_AMOUNT<>acmm.NET_AMOUNT or cmd.NEW_QUANTITY<>sum(acmd.QUANTITY) 
			  or cmd.total_discount_amount<>sum(acmd.discount_amount+ISNULL(acmd.cmm_discount_amount,0)))
	  --    ,      
	  
	  SELECT 'SLSEDT' AS [XN_TYPE],A.cm_id ,0 AS approval_status
	  ,ISNULL(XN.APPROVAL_REMARKS,'') AS approval_remarks,
	  GETDATE() AS [LAST_UPDATE],  'LATER' AS row_id,A.CM_NO AS [XN_NO],A.CM_DT AS [XN_DT],
	  (C.customer_fname+' '+C.customer_lname) AS AC_NAME
	  ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + ar.AREA_NAME +           
	  ' ' + ct.CITY + ' ' + st.STATE AS [ADDRESS],      
	  A.subtotal AS [AMOUNT],
	  ROW_NUMBER() OVER (ORDER BY  A.CM_ID ) AS [SRNO],convert(BIT,0) AS IsHidden,
	  A.cancelled,
	  USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	  DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))	
	  ,mb.org_quantity,mb.new_quantity,mb.new_discount_amount,mb.org_discount_amount
	  ,mb.org_net_amount,mb.new_net_amount
	  ,users.username as New_UserName
	  ,'' as New_ComputerName
	  ,a.LAST_UPDATE as ModifiedOn
	  ,convert(BIT,0) AS IsHidden     
	  ,dtm.dt_name as DiscountName
	  ,a.remarks
	  FROM #ModifiedBills mb  (NOLOCK)  
	  LEFT OUTER JOIN dbo.EOSSDisabledSLS B(NOLOCK) ON mb.cm_id=B.cm_id
	  join CMM01106 A (NOLOCK) ON A.CM_ID = mb.cm_id
	  left join dtm (nolock) on a.dt_code=dtm.dt_code
	  JOIN users (NOLOCK) on a.USER_CODE=users.user_code     
	  JOIN custdym C (NOLOCK) ON A.CUSTOMER_CODE = C.CUSTOMER_CODE
	  LEFT JOIN AREA AR(NOLOCK) ON AR.area_code=C.area_code
	  LEFT JOIN CITY CT(NOLOCK) ON AR.city_code=CT.CITY_CODE
	  LEFT JOIN STATE ST(NOLOCK) ON ST.state_code=CT.state_code
	  LEFT OUTER JOIN #TMPREMARKS XN ON XN.MEMO_ID=A.CM_ID       
	  WHERE ISNULL(B.ApprovedLevelNo,0)=ISNULL(@NLEVEL,0)-1
	  AND A.CANCELLED=0 
	  union all
	  SELECT 'EOSSDSLS' AS [XN_TYPE],A.cm_id ,0 AS approval_status
	  ,ISNULL(XN.APPROVAL_REMARKS,'') AS approval_remarks,
	  GETDATE() AS [LAST_UPDATE],'LATER' AS row_id,A.CM_NO AS [XN_NO],A.CM_DT AS [XN_DT],
	  (C.customer_fname+' '+C.customer_lname) AS AC_NAME
	  ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + ar.AREA_NAME +           
	  ' ' + ct.CITY + ' ' + st.STATE AS [ADDRESS],        
	  A.subtotal AS [AMOUNT],ROW_NUMBER() OVER (ORDER BY  A.CM_ID ) AS [SRNO],convert(BIT,0) AS IsHidden,      
	  A.cancelled,
	  USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	  DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))	
	  ,org_quantity as org_quantity
	  ,0 as new_quantity
	  ,0 as new_discount_amount
	  ,total_discount_amount  as org_discount_amount
	  ,a.net_amount  as org_net_amount
	  ,0  as new_net_amount
	  ,''  as  New_UserName
	  ,''  as  New_ComputerName
	  ,a.last_update   as  ModifiedOn
	  ,convert(BIT,0) AS IsHidden     
	  ,''  as  DiscountName
	  ,a.remarks
	  FROM dbo.CMM01106 A(NOLOCK)
	  JOIN 
	  (
		SELECT CMM.CM_ID,SUM(CMD.QUANTITY) AS org_quantity
			  ,sum(cmd.discount_amount+ISNULL(cmd.cmm_discount_amount,0)) as total_discount_amount
		FROM cmm01106 CMM
		JOIN cmd01106 CMD ON CMM.cm_id=CMD.cm_id
		WHERE CMM.location_Code =@cCurDeptID and
		CMM.CANCELLED=0 AND CMM.CM_DT  BETWEEN @dStartingFrom AND @CTODT
		group by CMM.CM_ID
	  )CMD ON a.cm_id=CMD.CM_ID
	  LEFT OUTER JOIN dbo.EOSSDisabledSLS B(NOLOCK) ON A.cm_id=B.cm_id
	  left outer join
	  (
	    select cm_id from 
	    cmm01106_AUDIT
	    group by cm_id
	  ) acmm on a.cm_id=acmm.cm_id
	  JOIN dbo.custdym C(NOLOCK) ON A.CUSTOMER_CODE=c.customer_code
	  LEFT JOIN dbo.AREA AR(NOLOCK) ON AR.area_code=C.area_code
	  LEFT JOIN dbo.CITY CT(NOLOCK) ON AR.city_code=CT.CITY_CODE
	  LEFT JOIN dbo.STATE ST(NOLOCK) ON ST.state_code=CT.state_code
	  LEFT OUTER JOIN #TMPREMARKS XN ON XN.MEMO_ID=A.CM_ID
	  WHERE ISNULL(B.ApprovedLevelNo,0)=ISNULL(@NLEVEL,0)-1
	  and  A.location_Code =@cCurDeptID 
	  AND a.CM_DT  BETWEEN @dStartingFrom AND @CTODT
	  AND ISNULL(a.ctrls_used,0)=1
	  AND A.CANCELLED=0 
	  and cmm.cm_id is null
	  ORDER BY XN_TYPE , A.CM_ID
	  GOTO SSPL99
	  
	  
	  
	  
	 
  END

 
ELSE IF @CXNTYPE='CRDISS'
BEGIN 
      ;WITH CTE AS
	  (
	    SELECT 'CRDISS' AS XN_TYPE,adv_rec_id,APPROVAL_REMARKS,
	    SR=ROW_NUMBER () OVER (PARTITION BY adv_rec_id ORDER BY LAST_UPDATE DESC)
	    FROM ARC_XN_APPROVAL
	  )
	  
	  INSERT INTO #TMPREMARKS(XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
	  SELECT XN_TYPE,adv_rec_id,APPROVAL_REMARKS
	  FROM CTE WHERE SR=1 
	  
	  SELECT 'CRDISS' AS [XN_TYPE],A.adv_rec_id ,0 AS approval_status,
	  ISNULL(Y.APPROVAL_REMARKS,'') AS approval_remarks,
	  GETDATE() AS [LAST_UPDATE],  'LATER' AS row_id,A.adv_rec_no AS [XN_NO],
	  A.adv_rec_dt AS [XN_DT],
	  (C.customer_fname+' '+C.customer_lname) AS AC_NAME
	  ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + ar.AREA_NAME +           
	  ' ' + ct.CITY + ' ' + st.STATE AS [ADDRESS],         
	  A.amount AS [AMOUNT],A.DISCOUNT_PERCENTAGE,a.discount_amount,a.net_amount,
	  ROW_NUMBER() OVER (ORDER BY  A.adv_rec_id ) AS [SRNO],convert(BIT,0) AS IsHidden,
	  0 AS DISapproval_status,ISNULL(@NLEVEL,0) AS LEVEL_NO,ISNULL(@NLEVEL,0) AS LEVEL_NO_ORG     
	  ,A.cancelled,
	  USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	  DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))	
	  FROM ARC01106 A  (NOLOCK)        
	  JOIN custdym C (NOLOCK) ON A.CUSTOMER_CODE = C.CUSTOMER_CODE  
	  LEFT JOIN AREA AR(NOLOCK) ON AR.area_code=C.area_code
	  LEFT JOIN CITY CT(NOLOCK) ON AR.city_code=CT.CITY_CODE
	  LEFT JOIN STATE ST(NOLOCK) ON ST.state_code=CT.state_code      
	  LEFT OUTER JOIN #TMPREMARKS Y ON Y.MEMO_ID=A.adv_rec_id  
	  LEFT OUTER JOIN cardIssue (NOLOCK) CI ON CI.adv_rec_id=A.adv_rec_id              
	  WHERE A.location_Code =@cCurDeptID 
	  AND (@dStartingFrom='' OR A.adv_rec_DT BETWEEN @dStartingFrom AND @CTODT) 
	  AND ISNULL(CI.ApprovedLevelNo,0)=ISNULL(@NLEVEL,0)-1
	  AND A.ARCT=5 AND a.amount<>a.net_amount
	  AND A.CANCELLED=0
	  ORDER BY A.adv_rec_id
	  GOTO SSPL99
END
ELSE IF(@CXNTYPE='SFT')  
BEGIN         
	  
	  ;WITH CTE AS
	  (
	    SELECT 'SFT' AS XN_TYPE,shift_id,APPROVAL_REMARKS,
	    SR=ROW_NUMBER () OVER (PARTITION BY shift_id ORDER BY LAST_UPDATE DESC)
	    FROM TILL_XN_APPROVAL
	  )
	  
	  INSERT INTO #TMPREMARKS(XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
	  SELECT XN_TYPE,shift_id,APPROVAL_REMARKS
	  FROM CTE WHERE SR=1
	  
		SELECT 'SFT' AS [xn_TYPE],A.shift_id AS [shift_id],0 AS approval_status,ISNULL(XN.APPROVAL_REMARKS,'') AS approval_remarks,
		GETDATE() AS [LAST_UPDATE],  'LATER' AS row_id,A.open_date AS [XN_DT],
		'' AS AC_NAME,'' AS [ADDRESS], 
		ROW_NUMBER() OVER (ORDER BY  A.shift_id ) AS [SRNO],convert(BIT,0) AS IsHidden,
		CONVERT(BIT ,0) AS [APPROVED],CONVERT(BIT ,0) AS [DISAPPROVED],
		TM.till_name,A.fin_year,A.comp_op
		,A.phy_op,A.receipts,A.issues,A.comp_cl,A.phy_cl,USR.USERNAME
		,A.open_date,A.open_time,A.close_time,A.close_date,
		isnull(a.phy_cl,0)-isnull(a.comp_cl,0) as closing_mismatch,
		USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	  SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	  DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))	
		FROM till_shift_mst A  (NOLOCK)        
		JOIN TILL_MST TM ON A.TILL_ID=TM.TILL_ID
		JOIN USERS USR ON A.USER_CODE=USR.USER_CODE
		LEFT OUTER JOIN #TMPREMARKS XN ON XN.MEMO_ID=A.shift_id AND XN.XN_TYPE='SFT'
		WHERE A.location_code =@cCurDeptID 
		AND (A.open_date BETWEEN @dStartingFrom AND @CTODT AND ISNULL(A.CLOSE_DATE,'')<>'') 
		AND ISNULL(a.ApprovedLevelNo,0)=ISNULL(@NLEVEL,0)-1
		ORDER BY A.shift_id
		GOTO SSPL99
END 

ELSE IF(@CXNTYPE='WSL')  
 BEGIN         
	  
	  ;WITH CTE AS
	  (
	    SELECT 'WSL' AS XN_TYPE,INV_id,APPROVAL_REMARKS,
	    SR=ROW_NUMBER () OVER (PARTITION BY INV_id ORDER BY LAST_UPDATE DESC)
	    FROM WSL_XN_APPROVAL
	  )
	  
	  INSERT INTO #TMPREMARKS(XN_TYPE,MEMO_ID,APPROVAL_REMARKS)
	  SELECT XN_TYPE,INV_id,APPROVAL_REMARKS
	  FROM CTE WHERE SR=1
	  
	   SELECT 'WSL' AS XN_TYPE,A.INV_ID AS INV_ID,0 AS approval_status,ISNULL(XN.APPROVAL_REMARKS,'') as approval_remarks,
	   GETDATE() AS [LAST_UPDATE],  'LATER' AS row_id,A.INV_NO AS [XN_NO],A.INV_DT AS [XN_DT],
	   C.AC_NAME ,C.ADDRESS0+' '+ C.ADDRESS1 + ' ' + C.ADDRESS2 + ', ' + C.AREA_NAME +           
	   ' ' + C.CITY + ' ' + C.STATE AS [ADDRESS],        
	   CONVERT(BIT ,0) AS [APPROVED],UNAPPROVED  =CAST(0 AS BIT),
	   A.NET_AMOUNT AS [AMOUNT],
	   ROW_NUMBER() OVER (ORDER BY  A.INV_ID )  AS [SRNO],convert(BIT,0) AS IsHidden,       
	   A.cancelled,
	   USER_CODE=CAST('' AS  VARCHAR(10)),WINUSERNAME=CAST('' AS  VARCHAR(50)),
	   SYSTEMUSERNAME=CAST('' AS  VARCHAR(50)),IP=CAST('' AS  VARCHAR(50)),LEVEL_NO=CAST(ISNULL(@NLEVEL,0) AS INT),LEVEL_NO_ORG=ISNULL(@NLEVEL,0),
	   DISAPPROVAL_STATUS=CAST(0 AS  NUMERIC(4)),DISAPPROVAL_LEVEL_NAME =CAST('' AS VARCHAR(50)),LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(@NLEVEL,0) AS VARCHAR(10))
	  FROM INM01106 A  (NOLOCK)        
	  JOIN USERS USR ON A.USER_CODE=USR.USER_CODE
	  JOIN LMV01106 C (NOLOCK) ON A.AC_CODE = C.AC_CODE 
	  LEFT OUTER JOIN #TMPREMARKS XN ON XN.MEMO_ID=A.INV_id AND XN.XN_TYPE='WSL'
	  WHERE A.location_Code =@cCurDeptID AND A.INV_MODE=1
	  AND A.INV_DT  BETWEEN @dStartingFrom AND @CTODT 
	 AND ISNULL(a.ApprovedLevelNo,0)=ISNULL(@NLEVEL,0)-1
	 ORDER BY A.INV_ID
	GOTO SSPL99
END 




GOTO SSPL99 
        
SSPL_DET:  

	 IF(@CXNTYPE='PUR')  
	 BEGIN   
	  SELECT A.*, B.ARTICLE_NO,  K.SECTION_NAME, J.SUB_SECTION_NAME,I.UOM_NAME,C.PARA1_NAME,            
	  D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,         
	  B.ARTICLE_NAME,B.STOCK_NA,FORM.FORM_NAME,B.FIX_MRP,SKU.PRODUCT_NAME,      
	  B.ALIAS AS ARTICLE_ALIAS,A.QUANTITY,A.PURCHASE_PRICE,A.MRP,A.PRODUCT_CODE,A.MRR_ID AS REF_XN_ID,
	  CAST( 0 AS INT) AS SRNO  ,B.CODING_SCHEME,A.INVOICE_QUANTITY AS 'AMOUNT',
	  ISNULL(B.DT_CREATED,'') AS [ART_DT_CREATED],ISNULL(E.DT_CREATED,'') AS [PARA3_DT_CREATED],  
	  ISNULL(SKU.DT_CREATED,'') AS [SKU_DT_CREATED],B.GEN_EAN_CODES,     
	  '' AS OTHER_XN_PRODUCT_CODE,D.para2_order, B.size_rate_diff ,B.size_center_point, 
	  A.QUANTITY AS [ORG_QUANTITY],CAST(0 AS NUMERIC(10,2)) AS [STK_QUANTITY],B.STOCK_NA,
	  form.form_name,b.FIX_MRP,  sku.product_name,b.Fix_price_article,convert(numeric(2),0) as  mode,
	  B.ALIAS AS ARTICLE_ALIAS,
	  (FROM_UOM_NAME+ ' - ' +TO_UOM_NAME) AS AREA_UOM_NAME,
	  isnull(AR_UOM.square_unit,0) AS square_unit,
	  isnull(AR_UOM.base_unit,0) AS base_unit,
	  isnull(AR_UOM.FROM_UOM_NAME,'') AS FROM_UOM_NAME,
	  isnull(AR_UOM.TO_UOM_NAME,'') AS TO_UOM_NAME,
	  B.area_wise_rate_applicable        
	  FROM PID01106 A (NOLOCK)           
	  JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE             
	  JOIN PARA1 C (NOLOCK) ON A.PARA1_CODE = C.PARA1_CODE            
	  JOIN PARA2 D (NOLOCK) ON A.PARA2_CODE = D.PARA2_CODE            
	  JOIN PARA3 E (NOLOCK) ON A.PARA3_CODE = E.PARA3_CODE            
	  JOIN PARA4 F (NOLOCK) ON A.PARA4_CODE = F.PARA4_CODE            
	  JOIN PARA5 G (NOLOCK) ON A.PARA5_CODE = G.PARA5_CODE            
	  JOIN PARA6 H (NOLOCK) ON A.PARA6_CODE = H.PARA6_CODE            
	  JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE            
	  JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE            
	  JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE         
	  JOIN FORM (NOLOCK) ON FORM.FORM_ID=A.FORM_ID         
	  LEFT OUTER JOIN SKU ON SKU.PRODUCT_CODE=A.PRODUCT_CODE 
	  LEFT OUTER JOIN STANDARD_UOM AR_UOM (NOLOCK) ON A.area_uom_code= AR_UOM.UOM_CODE              
	  WHERE A.MRR_ID = @CWHERE             
	  ORDER BY A.BOX_NO,A.SRNO,A.PRODUCT_CODE    
	  GOTO SSPL99  
	 END 
 
	 IF(@CXNTYPE='PBM')  
	 BEGIN   
	  SELECT A.*, B.ARTICLE_NO,  K.SECTION_NAME, J.SUB_SECTION_NAME,I.UOM_NAME,C.PARA1_NAME,            
	  D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,         
	  B.ARTICLE_NAME,B.STOCK_NA,FORM.FORM_NAME,B.FIX_MRP,SKU.PRODUCT_NAME,      
	  B.ALIAS AS ARTICLE_ALIAS,A.QUANTITY,A.PURCHASE_PRICE,SKU.MRP,A.PRODUCT_CODE,A.mrr_id  AS REF_XN_ID,
	  CAST( 0 AS INT) AS SRNO  ,B.CODING_SCHEME,A.quantity AS 'AMOUNT',
	  ISNULL(B.DT_CREATED,'') AS [ART_DT_CREATED],ISNULL(E.DT_CREATED,'') AS [PARA3_DT_CREATED],  
	  ISNULL(SKU.DT_CREATED,'') AS [SKU_DT_CREATED],B.GEN_EAN_CODES,     
	  '' AS OTHER_XN_PRODUCT_CODE,D.para2_order, B.size_rate_diff ,B.size_center_point, 
	  A.QUANTITY AS [ORG_QUANTITY],CAST(0 AS NUMERIC(10,2)) AS [STK_QUANTITY],B.STOCK_NA,
	  form.form_name,b.FIX_MRP,  sku.product_name,b.Fix_price_article,convert(numeric(2),0) as  mode,
	  B.ALIAS AS ARTICLE_ALIAS,
	  '' AS AREA_UOM_NAME,
	  0 AS square_unit,
	  0 AS base_unit,
	  '' AS FROM_UOM_NAME,
	  '' AS TO_UOM_NAME,
	  B.area_wise_rate_applicable        
	  FROM pid01106  A (NOLOCK)           
	  LEFT JOIN SKU (NOLOCK) ON a.product_code=sku.product_code
	  JOIN ARTICLE B (NOLOCK) ON SKU.ARTICLE_CODE = B.ARTICLE_CODE             
	  JOIN PARA1 C (NOLOCK) ON SKU.PARA1_CODE = C.PARA1_CODE            
	  JOIN PARA2 D (NOLOCK) ON SKU.PARA2_CODE = D.PARA2_CODE            
	  JOIN PARA3 E (NOLOCK) ON SKU.PARA3_CODE = E.PARA3_CODE            
	  JOIN PARA4 F (NOLOCK) ON SKU.PARA4_CODE = F.PARA4_CODE            
	  JOIN PARA5 G (NOLOCK) ON SKU.PARA5_CODE = G.PARA5_CODE            
	  JOIN PARA6 H (NOLOCK) ON SKU.PARA6_CODE = H.PARA6_CODE            
	  JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE            
	  JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE            
	  JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE         
	  JOIN FORM (NOLOCK) ON FORM.FORM_ID=A.FORM_ID         
	  WHERE A.mrr_id  = @CWHERE             
	  ORDER BY A.PRODUCT_CODE 
	     
	  GOTO SSPL99  
	 END 
 
       
 IF(@CXNTYPE='PRT')  
 BEGIN   
	 SELECT A.PRODUCT_CODE,A.QUANTITY,A.PURCHASE_PRICE,A.AMOUNT,  
	 A.BILL_NO,A.DISCOUNT_PERCENTAGE,A.DISCOUNT_AMOUNT,A.GROSS_PURCHASE_PRICE,A.PUR_DISCOUNT_PERCENTAGE,  
	 A.PUR_DISCOUNT_AMOUNT,A.PUR_PURCHASE_PRICE,A.REMARKS,A.INVOICE_QUANTITY,A.SCHEME_QUANTITY,A.RATE,  
	 A.INV_RATE,A.DN_DISCOUNT_PERCENTAGE,A.DN_DISCOUNT_AMOUNT,A.BOX_NO,  
	 A.BOX_DT,K.SECTION_NAME, J.SUB_SECTION_NAME,I.UOM_NAME,C.PARA1_NAME,            
	 D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,B.ARTICLE_NO,          
	 B.ARTICLE_NAME,B.STOCK_NA,FORM.FORM_NAME,B.FIX_MRP,SKU.PRODUCT_NAME,      
	 B.ALIAS AS ARTICLE_ALIAS,A.RM_ID AS REF_XN_ID ,CAST( 0 AS INT) AS SRNO       
	 FROM RMD01106 A (NOLOCK)  
	 JOIN SKU (NOLOCK)  ON SKU.PRODUCT_CODE=A.PRODUCT_CODE               
	 JOIN ARTICLE B (NOLOCK) ON SKU.ARTICLE_CODE = B.ARTICLE_CODE             
	 JOIN PARA1 C (NOLOCK) ON SKU.PARA1_CODE = C.PARA1_CODE            
	 JOIN PARA2 D (NOLOCK) ON SKU.PARA2_CODE = D.PARA2_CODE            
	 JOIN PARA3 E (NOLOCK) ON SKU.PARA3_CODE = E.PARA3_CODE            
	 JOIN PARA4 F (NOLOCK) ON SKU.PARA4_CODE = F.PARA4_CODE            
	 JOIN PARA5 G (NOLOCK) ON SKU.PARA5_CODE = G.PARA5_CODE            
	 JOIN PARA6 H (NOLOCK) ON SKU.PARA6_CODE = H.PARA6_CODE            
	 JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE            
	 JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE            
	 JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE         
	 JOIN FORM (NOLOCK) ON FORM.FORM_ID=A.ITEM_FORM_ID                 
	 WHERE A.RM_ID = @CWHERE             
	 ORDER BY A.PRODUCT_CODE  
	 
	 GOTO SSPL99    
 END 
 
 IF(@CXNTYPE='EDS')  
 BEGIN   
	 SELECT A.PRODUCT_CODE,A.QUANTITY,A.MRP,A.VALUE_AT_MRP,A.CM_NO,A.CM_DT,A.DISCOUNT_AMOUNT,
	 0 AS DISCOUNT_PERCENTAGE,K.SECTION_NAME, J.SUB_SECTION_NAME,I.UOM_NAME,C.PARA1_NAME,            
	 D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,B.ARTICLE_NO,          
	 B.ARTICLE_NAME,B.STOCK_NA,
	 --FORM.FORM_NAME,
	 B.FIX_MRP,SKU.PRODUCT_NAME,      
	 B.ALIAS AS ARTICLE_ALIAS,A.MEMO_ID AS REF_XN_ID ,CAST( 0 AS INT) AS SRNO      
	 FROM EOSSDND A (NOLOCK)  
	 JOIN SKU (NOLOCK)  ON SKU.PRODUCT_CODE=A.PRODUCT_CODE               
	 JOIN ARTICLE B (NOLOCK) ON SKU.ARTICLE_CODE = B.ARTICLE_CODE             
	 JOIN PARA1 C (NOLOCK) ON SKU.PARA1_CODE = C.PARA1_CODE            
	 JOIN PARA2 D (NOLOCK) ON SKU.PARA2_CODE = D.PARA2_CODE            
	 JOIN PARA3 E (NOLOCK) ON SKU.PARA3_CODE = E.PARA3_CODE            
	 JOIN PARA4 F (NOLOCK) ON SKU.PARA4_CODE = F.PARA4_CODE            
	 JOIN PARA5 G (NOLOCK) ON SKU.PARA5_CODE = G.PARA5_CODE            
	 JOIN PARA6 H (NOLOCK) ON SKU.PARA6_CODE = H.PARA6_CODE            
	 JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE            
	 JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE            
	 JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE         
	 --JOIN FORM (NOLOCK) ON FORM.FORM_ID=A.ITEM_FORM_ID                 
	 WHERE A.MEMO_ID = @CWHERE             
	 ORDER BY A.PRODUCT_CODE  
	 
	 GOTO SSPL99    
 END   

IF(@CXNTYPE='PTC')  
 BEGIN   
       
  SELECT B.AC_NAME,XN_AMOUNT,XN_TYPE,NARRATION,REF_NO,PEM_MEMO_ID AS REF_XN_ID  
		,CAST( 0 AS INT) AS SRNO  
  FROM  PED01106 A          
  JOIN LMV01106 B ON B.AC_CODE=A.AC_CODE AND B.AC_CODE<>'0000000000'       
  WHERE PEM_MEMO_ID=@CWHERE          
  ORDER BY TS   
  GOTO SSPL99    
 END

IF(@CXNTYPE='VCH')  
 BEGIN   
  SELECT B.AC_NAME,A.VM_ID AS REF_XN_ID,NARRATION,CREDIT_AMOUNT,DEBIT_AMOUNT,X_TYPE,SECONDARY_NARRATION      
	,CAST( 0 AS INT) AS SRNO       
  FROM VD01106 A (NOLOCK)      
  JOIN LMV01106 B ON B.AC_CODE=A.AC_CODE AND B.AC_CODE<>'0000000000'             
  WHERE A.VM_ID = @CWHERE 
  GOTO SSPL99               
END
 
 IF(@CXNTYPE IN ('SLSCRI','SLSEDT','EOSSDSLS'))  
 BEGIN   
  SELECT  A.*,A.SR_NO AS SRNO,  
    EMP.EMP_NAME, A.PRODUCT_CODE, B.ARTICLE_CODE, B.ARTICLE_NO, B.ARTICLE_NAME, C.PARA1_CODE,    
    C.PARA1_NAME, D.PARA2_CODE, D.PARA2_NAME, F.PARA3_CODE, F.PARA3_NAME, E.UOM_NAME,       
    A.DEPT_ID, B.CODING_SCHEME,  B.INACTIVE,ISNULL(P.QUANTITY_IN_STOCK,0) AS QUANTITY_IN_STOCK ,   
    SKU.PURCHASE_PRICE,  SKU.MRP,SKU.WS_PRICE,   SM.SECTION_NAME, SD.SUB_SECTION_NAME,    
    G.PARA4_CODE,H.PARA5_CODE,I.PARA6_CODE,    
    PARA4_NAME,PARA5_NAME,PARA6_NAME,E.UOM_CODE,ISNULL(E.UOM_TYPE,0) AS [UOM_TYPE],    
    B.DT_CREATED AS [ART_DT_CREATED],F.DT_CREATED AS [PARA3_DT_CREATED],SKU.DT_CREATED AS [SKU_DT_CREATED],    
    B.STOCK_NA,   
    CONVERT (BIT,(CASE WHEN A.QUANTITY <0 THEN 1 ELSE 0 END)) AS SALERETURN ,CAST(0 AS BIT) AS CREDIT_REFUND,  
    '' AS HOLD_ID,'' AS CMD_HOLD_ROW_ID, A.MRP AS [LOCSKU_MRP],SKU.PRODUCT_NAME,  
    EMP1.EMP_NAME AS EMP_NAME1 ,EMP2.EMP_NAME AS EMP_NAME2  ,(CASE WHEN ISNULL(SKU.FIX_MRP,0)=0 THEN SKU.mrp ELSE SKU.FIX_MRP END) AS [FIX_MRP],
   (CASE WHEN ISNULL(A.hold_for_alter,0)=0 THEN 'N' ELSE 'Y' END) AS [HOLD_FOR_ALTER_TXT],
   (CASE WHEN ISNULL(A.PACK_SLIP_ID,'')='' THEN '' ELSE RIGHT(A.PACK_SLIP_ID,10 ) END) AS [PACK_SLIP_NO]
   ,ISNULL(BIN.BIN_NAME,'') AS [BIN_NAME],B.ALIAS AS ARTICLE_ALIAS ,sd.sub_section_code,sm.section_code,
   CONVERT(BIT,0 ) as [BRANDWISE_DISC],ISNULL(SLS_TITLE,'') AS SLS_TITLE,ISNULL(N.narration,'') AS [NARRATION],
   CONVERT(VARCHAR(10),(CASE WHEN ORD.product_code IS NULL THEN '' ELSE RIGHT(ORD.order_id,10) END)) AS [BUYER_ORDER_NO]
   ,dtm.dt_name as DiscountName
  FROM  CMD01106  A  (NOLOCK) 
  JOIN CMM01106 CMM (NOLOCK) ON CMM.CM_ID=A.CM_ID
  LEFT JOIN DTM(nolock) on cmm.dt_code=dtm.dt_code
  JOIN SKU  (NOLOCK) ON SKU.PRODUCT_CODE=A.PRODUCT_CODE  
  LEFT OUTER JOIN PMT01106 P  (NOLOCK) ON P.PRODUCT_CODE=A.PRODUCT_CODE AND P.BIN_ID=A.BIN_ID  
  LEFT OUTER JOIN BIN (NOLOCK) ON BIN.BIN_ID=A.BIN_ID  
  JOIN ARTICLE B  (NOLOCK) ON SKU.ARTICLE_CODE = B.ARTICLE_CODE      
  JOIN SECTIOND SD  (NOLOCK) ON B.SUB_SECTION_CODE = SD.SUB_SECTION_CODE    
  JOIN SECTIONM SM  (NOLOCK) ON SD.SECTION_CODE = SM.SECTION_CODE    
  JOIN PARA1 C  (NOLOCK) ON SKU.PARA1_CODE = C.PARA1_CODE      
  JOIN PARA2 D  (NOLOCK) ON SKU.PARA2_CODE = D.PARA2_CODE      
  JOIN PARA3 F  (NOLOCK) ON SKU.PARA3_CODE = F.PARA3_CODE      
  JOIN PARA4 G  (NOLOCK) ON SKU.PARA4_CODE = G.PARA4_CODE      
  JOIN PARA5 H  (NOLOCK) ON SKU.PARA5_CODE = H.PARA5_CODE      
  JOIN PARA6 I  (NOLOCK) ON SKU.PARA6_CODE = I.PARA6_CODE      
  JOIN UOM E  (NOLOCK) ON B.UOM_CODE = E.UOM_CODE 
  LEFT OUTER JOIN NRM N (NOLOCK) ON N.NRM_ID=ISNULL(A.NRM_ID  ,'0000000')
  LEFT OUTER JOIN EMPLOYEE EMP  (NOLOCK) ON A.EMP_CODE = EMP.EMP_CODE   
  LEFT OUTER JOIN EMPLOYEE EMP1  (NOLOCK) ON A.EMP_CODE1 = EMP1.EMP_CODE     
  LEFT OUTER JOIN EMPLOYEE EMP2  (NOLOCK) ON A.EMP_CODE2 = EMP2.EMP_CODE    
  LEFT OUTER JOIN SLSDET S (NOLOCK) ON S.row_id =A.slsdet_row_id
  LEFT JOIN
  (
    SELECT A.ORDER_ID,B.PRODUCT_CODE,A.CUSTOMER_CODE,B.order_type ,REF_PRODUCT_CODE
           FROM WSL_ORDER_MST A (NOLOCK)
           JOIN WSL_ORDER_DET B (NOLOCK) ON A.order_id =B.order_id 
           WHERE A.CANCELLED =0 AND ISNULL(B.CANCELLED ,0)=0
           
  ) ORD ON A.PRODUCT_CODE=(CASE WHEN ORD.ORDER_TYPE=1 THEN ORD.REF_PRODUCT_CODE ELSE ORD.PRODUCT_CODE END)
		AND CMM.CUSTOMER_CODE=ORD.CUSTOMER_CODE

   WHERE A.CM_ID=@CWHERE     
   ORDER BY  A.SR_NO--ROW_NUMBER() OVER (ORDER BY A.TS)  
  GOTO SSPL99  
 END 
IF(@CXNTYPE='SFT')  
 BEGIN   
  SELECT A.*,TM.TILL_NAME,USR.USERNAME,CAST( 0 AS INT) AS SRNO  
  FROM TILL_SHIFT_MST A (NOLOCK)           
  JOIN TILL_MST TM (NOLOCK) ON A.TILL_ID=TM.TILL_ID
  JOIN USERS USR (NOLOCK) ON A.USER_CODE=USR.USER_CODE
  WHERE A.SHIFT_ID = @CWHERE             
  ORDER BY A.SHIFT_ID
  
  GOTO SSPL99 
 END 
IF(@CXNTYPE='WSL')  
 BEGIN   
	 SELECT A.PRODUCT_CODE,A.QUANTITY,A.MRP,  
	 A.DISCOUNT_PERCENTAGE,A.DISCOUNT_AMOUNT,A.net_rate ,
	 A.REMARKS,A.INVOICE_QUANTITY,A.SCHEME_QUANTITY,A.RATE,A.BOX_NO,  
	 A.BOX_DT,K.SECTION_NAME, J.SUB_SECTION_NAME,I.UOM_NAME,C.PARA1_NAME,            
	 D.PARA2_NAME,E.PARA3_NAME,F.PARA4_NAME,G.PARA5_NAME,H.PARA6_NAME,B.ARTICLE_NO,          
	 B.ARTICLE_NAME,B.STOCK_NA,FORM.FORM_NAME,B.FIX_MRP,SKU.PRODUCT_NAME,      
	 B.ALIAS AS ARTICLE_ALIAS,A.INV_ID AS REF_XN_ID ,CAST( 0 AS INT) AS SRNO       
	 FROM IND01106 A (NOLOCK)  
	 JOIN SKU (NOLOCK)  ON SKU.PRODUCT_CODE=A.PRODUCT_CODE               
	 JOIN ARTICLE B (NOLOCK) ON SKU.ARTICLE_CODE = B.ARTICLE_CODE             
	 JOIN PARA1 C (NOLOCK) ON SKU.PARA1_CODE = C.PARA1_CODE            
	 JOIN PARA2 D (NOLOCK) ON SKU.PARA2_CODE = D.PARA2_CODE            
	 JOIN PARA3 E (NOLOCK) ON SKU.PARA3_CODE = E.PARA3_CODE            
	 JOIN PARA4 F (NOLOCK) ON SKU.PARA4_CODE = F.PARA4_CODE            
	 JOIN PARA5 G (NOLOCK) ON SKU.PARA5_CODE = G.PARA5_CODE            
	 JOIN PARA6 H (NOLOCK) ON SKU.PARA6_CODE = H.PARA6_CODE            
	 JOIN UOM I (NOLOCK) ON B.UOM_CODE = I.UOM_CODE            
	 JOIN SECTIOND J (NOLOCK) ON B.SUB_SECTION_CODE = J.SUB_SECTION_CODE            
	 JOIN SECTIONM K (NOLOCK) ON J.SECTION_CODE = K.SECTION_CODE         
	 JOIN FORM (NOLOCK) ON FORM.FORM_ID=A.ITEM_FORM_ID                 
	 WHERE A.INV_ID = @CWHERE             
	 ORDER BY A.PRODUCT_CODE  
	 
	 GOTO SSPL99    
 END  


SSPL_CHECKLIST_LEVEL_DETAILS:  
      
 SELECT A.*,C.*,CONVERT(NUMERIC, 0) AS SRNO  FROM XN_APPROVAL_CHECKLIST_LEVEL_DETAILS A        
 JOIN XN_APPROVAL_CHECKLIST_LEVELS B ON B.LEVEL_CODE=A.LEVEL_CODE        
 JOIN XN_APPROVAL_CHECKLIST_MST C ON C.CHECKLIST_CODE=A.CHECKLIST_CODE        
 WHERE B.LEVEL_NO=@NLEVEL AND A.XN_TYPE=@CXNTYPE  ORDER BY C.CHECKLIST_ORDER 
       
GOTO SSPL99        

SSPL_CHECKLIST_LEVEL_USERS:  
      
 SELECT distinct  b.level_no,LEVEL_NO_DISPLAY='LEVEL-'+CAST(ISNULL(b.level_no,0) AS VARCHAR(10)),B.INACTIVE 
 
 FROM XN_APPROVAL_CHECKLIST_LEVEL_USERS A         
 JOIN XN_APPROVAL_CHECKLIST_LEVELS B ON  B.LEVEL_code=A.LEVEL_code AND B.XN_TYPE=A.XN_TYPE        
 WHERE USER_CODE=@CWHERE AND A.XN_TYPE=@CXNTYPE   and dept_id=@cCurDeptID    
   
 GOTO SSPL99  
 

        
SSPL99:        
END        
--End of procedure - SP3S_XN_APPROVAL
