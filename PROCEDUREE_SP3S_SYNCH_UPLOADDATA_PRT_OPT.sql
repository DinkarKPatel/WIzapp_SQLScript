create PROCEDURE SP3S_SYNCH_UPLOADDATA_PRT_OPT
(
    @nSpId VARCHAR(50)
   ,@CERRMSG VARCHAR(1000) OUTPUT
)
--WITH ENCRYPTION
AS
SET NOCOUNT ON
BEGIN
	/*
		208_2014_01_13 : THIS PROCEDURE WILL MERGE DATA FROM TEMPORARY TABLE TO ACTUAL TABLE.
						 TABLE NAMES AND ITS MERGING ORDER WILL BE FIXED AND WILL BE DEFINED HERE.	
						 
	*/

	

DECLARE @CSTEP VARCHAR(100),@DTSQL NVARCHAR(MAX),@NMERGE_ORDER NUMERIC(5)
	   ,@CTABLENAME VARCHAR(200),@CTABLE_SUFFIX VARCHAR(50),@CKEYFIELD VARCHAR(200),@CDEL_ID VARCHAR(50),@CTMP_TABLENAME VARCHAR(200),@LINSERTONLY VARCHAR(1)
	   ,@CFILTERCONDITION VARCHAR(200),@CFILTERCONDITION2 VARCHAR(500),@LUPDATEONLY VARCHAR(1),@BALWAYSUPDATE VARCHAR(1),@FDEL CHAR(1)
	   ,@CERRMSGOUT VARCHAR(1000),@CTABLESSTR VARCHAR(MAX),@CMIRRORINGENABLED VARCHAR(5)
	   ,@CCURDEPTID VARCHAR(5),@CTEMPMASTERTABLE VARCHAR(200),@CTEMPDETAILTABLE1 VARCHAR(200),@CTEMPDETAILTABLE2 VARCHAR(200)
	   ,@CTEMPPAYMODETABLE VARCHAR(200),@CTEMPTABLE VARCHAR(100),@CDONOTRESETPOSTEDINAC VARCHAR(1)
	   ,@BADDMODE BIT,@CCUTOFFDATE VARCHAR(20),@CWHERECLAUSE VARCHAR(2000),@CMEMONOLEN VARCHAR(5),@NMEMONOLEN INT
	   ,@DMINMEMODT DATETIME,@DMAXMEMODT DATETIME,@CFINYEAR VARCHAR(5),@CMEMOPREFIX VARCHAR(10)
	   ,@CMINMEMONO VARCHAR(20),@CMAXMEMONO VARCHAR(20),@CSOURCEDB VARCHAR(200),@CMERGEDB VARCHAR(200)
	   ,@BMSTINSERTONLY BIT,@BSERIESMISMATCHFOUND BIT,@CMEMOID VARCHAR(40),@CPREVMEMONO VARCHAR(20)
	   ,@NPREVMEMONO NUMERIC(5,0),@NLENVALUE INT,@CPREVMEMONOSEARCH VARCHAR(20),@CMEMOIDSEARCH VARCHAR(40)
	   ,@CRETPRODUCTCODE VARCHAR(50),@CJOINSTR VARCHAR(MAX),@CTEMPSKUTABLE VARCHAR(500)
	   ,@CPARTYDEPTID VARCHAR(5),@NMODE INT,@CCNID VARCHAR(40),@CDONOTSENDCHALLANWODISPATCHDETAILS VARCHAR(2)
	   ,@BDONOTSENDCHALLANWITHOUTDISPATCH BIT,@ERP_CONFIG VARCHAR(10),@CFILTERCONDITION1 VARCHAR(200)
	   ,@BDonotInsCHALLAN BIT,@dMIrrorLastUpdate DATETIME,@dLastUpdate DATETIME,@cMissingRowId VARCHAR(50)
	   ,@cUpdatestr VARCHAR(2000),@bServerLoc BIT,@CLOCID varchar(2),@DRMDT DATETIME,@nUpdateMode INT
	   ,@bCancelled BIT,@nEntrymode NUMERIC(2,0)
    


BEGIN TRY
	
	
	
	SET @cStep=5
	EXEC SP_CHKXNSAVELOG 'PRTMERGE',@CSTEP,0,@CMEMOID,'',1

	SELECT @CSOURCEDB='',@CMERGEDB='',@BMSTINSERTONLY=1,@BSERIESMISMATCHFOUND=0
	
    SELECT TOP 1 @CCURDEPTID=VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'

	set @CLOCID=@CCURDEPTID

	SELECT @CTEMPMASTERTABLE=@CSOURCEDB+'PRT_RMM01106_upload',
		   @CTEMPDETAILTABLE1=@CSOURCEDB+'PRT_RMD01106_upload'
		   

   SELECT @BDONOTSENDCHALLANWITHOUTDISPATCH=ISNULL(DONOTSENDCHALLANWITHOUTDISPATCH,0) FROM LOCATION WHERE DEPT_ID=@CLOCID 
   
   SET @cStep=7
   EXEC SP_CHKXNSAVELOG 'PRTMERGE',@CSTEP,0,@CMEMOID,'',1

   DECLARE @DFREEZINGDATE DATETIME	
   EXEC SP3S_GETDATA_FREEZING_DATE 'PRT',@DFREEZINGDATE OUTPUT

  
   EXEC SP_CHKXNSAVELOG 'PRTMERGE',@CSTEP,0,@CMEMOID,'',1
	    SET @cStep=10
	IF EXISTS (SELECT TOP 1 tablename FROM savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nSpId)
		DELETE FROM savetran_updcols_updatestr WITH (ROWLOCK) WHERE sp_id=@nSpId
   SET @cStep=10
	INSERT savetran_updcols_updatestr (sp_id,tablename,updatestr)
	SELECT @nSpId as sp_id,tablename,'' from mirrorxnsinfo (NOLOCK)
	WHERE tablename IN ('rmm01106','rmd01106','parcel_mst','parcel_det')

	
LBLSTART:

	BEGIN TRANSACTION	

	SET @cStep=11
	EXEC SP_CHKXNSAVELOG 'PRTMERGE',@CSTEP,0,@CMEMOID,'',1 
	
    SELECT @CMEMOID=''

    SELECT TOP 1 @CMEMOID = B.RM_ID ,@NMODE=MODE,@CPARTYDEPTID=PARTY_DEPT_ID,
	@dMIrrorLastUpdate=b.last_update,@bServerLoc=ISNULL(SERVER_LOC,0),@DRMDT=rm_dt ,@bCancelled=cancelled,
	@nEntrymode=Entry_Mode
    FROM PRT_RMM01106_upload B (NOLOCK)
	LEFT JOIN Location loc (NOLOCK) ON loc.dept_id=b.party_dept_id
    WHERE  RM_DT> @DFREEZINGDATE 
	and b.sp_id=@nSpId
    ORDER BY B.RM_ID

    IF ISNULL(@CMEMOID,'')=''
		GOTO EXIT_PROC

	SET @BDonotInsCHALLAN=0

    ----Needed to remove code for making @BDonotInsCHALLAN=1 because it is creating problem in putting challan in GIT
	--- in case if Target is Head office e.g. On parcel saving 
		
    SET @CFILTERCONDITION = 'B.SP_ID='''+@nSpId+''''

	SET @cStep=13
	EXEC SP_CHKXNSAVELOG 'PRTMERGE',@CSTEP,0,@CMEMOID,'',1

	SET @CMEMOIDSEARCH=''
	SELECT TOP 1 @CMEMOIDSEARCH=A.RM_ID,@dLastUpdate=last_update FROM RMM01106 A (NOLOCK) WHERE A.RM_ID=@CMEMOID
	
	IF ISNULL(@CMEMOIDSEARCH,'')<>''
		SET @BADDMODE=0
	ELSE
		SET @BADDMODE=1

	SET @nUpdateMode=(CASE WHEN @BADDMODE=1 THEN 1 WHEN @bCancelled=1 THEN 3 ELSE 2 END)	
	SET @CSTEP=13.2
	EXEC SP_CHKXNSAVELOG 'PRtMERGE',@CSTEP,0,@nSpId,'',1

	EXEC SP3S_upd_qty_lastupdate
	@nUpdateMode=@NUPDATEMODE,
	@cXnType='PRT',
	@nSpId=@nSpId,
	@cMasterTable='rmm01106',
	@cMemoIdCol='rm_id',
	@cXnDtCol='rm_dt',
	@cMemoId=@CMEMOIDSEARCH,
	@bCalledfromMerging=1,
	@CERRORMSG=@CERRMSG OUTPUT

	IF ISNULL(@cErrmsg,'')<>''
		GOTO EXIT_PROC


LBLMERGE:
	
	IF @BADDMODE=0
		PRINT 'ADDMODE:N'
	ELSE
		PRINT 'ADDMODE:Y'	
	

	
  IF @BADDMODE=0
  BEGIN

		SET @cStep=15
		EXEC SP_CHKXNSAVELOG 'PRTMERGE',@CSTEP,0,@CMEMOID,'',1

		PRINT 'ADDMODE:N'
		EXEC SP3S_VERIFY_PRTDATA_merge_CHANGES
		@nSpId=@nSpId,
		@cMemoId=@cMemoId
		

		
				
		SET @CSTEP=20
		SELECT TOP 1 @cMissingRowId=a.row_id FROM rmd01106 A (NOLOCK) 
		LEFT JOIN 
		(SELECT row_id FROM PRT_rmd01106_upload B (NOLOCK) WHERE sp_id=@nSpId) b
		 ON A.row_ID =B.row_ID WHERE A.rm_id =@CMEMOID AND b.row_id IS NULL

		IF ISNULL(@cMissingRowId,'')<>''
		BEGIN		
			SET @CSTEP=23
			EXEC SP_CHKXNSAVELOG 'PRTMERGE',@CSTEP,0,@CMEMOID,'',1

			DELETE A FROM rmd01106 A (NOLOCK) LEFT JOIN 
			(SELECT row_id FROM PRT_rmd01106_upload B (NOLOCK) WHERE sp_id=@nSpId) b
			ON A.row_ID =B.row_ID WHERE A.rm_id =@CMEMOID AND b.row_id IS NULL

		END

		SET @CSTEP='25'
		---- Need to reset the column removed_from_git while merging of Doc entry
		---- to secure the source challan entry freezing
		UPDATE a SET doc_synch_last_update=b.doc_synch_last_update,removed_from_git=0
		FROM PRT_RMM01106_upload a WITH (ROWLOCK)
		JOIN rmm01106 b (NOLOCK) ON a.rm_id=b.rm_id
		
	END
		
	---UPDATING TRANSACTION TABLES
	SET @CSTEP=27
	EXEC SP_CHKXNSAVELOG 'PRTMERGE',@CSTEP,0,@CMEMOID,'',1
	SET @CTABLENAME='RMM01106'
	SET @CTMP_TABLENAME='PRT_RMM01106_upload'
	SET @CKEYFIELD='RM_ID'


	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK)  WHERE sp_id=@nSpId and tablename='rmm01106'
	SET @LUPDATEONLY = (CASE WHEN @BADDMODE=0 THEN 1 ELSE 0 END)		
	
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
							  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 
							  

	SET @CSTEP=29
	EXEC SP_CHKXNSAVELOG 'PRTMERGE',@CSTEP,0,@CMEMOID,'',1


	SET @CTABLENAME='RMD01106'
	SET @CTMP_TABLENAME='PRT_RMD01106_upload'
	SET @CKEYFIELD='ROW_ID'

	SELECT @cMissingRowId='',@lUpdateonly=0
	IF @BADDMODE=0
	BEGIN
		SET @CSTEP=35
		EXEC SP_CHKXNSAVELOG 'PRTMERGE',@CSTEP,0,@CMEMOID,'',1

		SELECT TOP 1 @cMissingRowId=b.row_id FROM 
		(SELECT row_id  FROM PRT_rmd01106_upload (NOLOCK) WHERE sp_id=(@nSpId+LEFT(@cMemoId,2))) A
		RIGHT OUTER JOIN 
		(SELECT row_id FROM PRT_rmd01106_upload (NOLOCK) WHERE sp_id=@nSpId) b ON 
		a.row_id=b.row_id WHERE a.row_id IS NULL

		--SELECT 'check @cMissingRowId of pid',@cMissingRowId

		IF ISNULL(@cMissingRowId,'')='' 
			SET @lUpdateonly=1
	END

	SET @CSTEP=37
    EXEC SP_CHKXNSAVELOG 'PRTMERGE',@CSTEP,0,@CMEMOID,'',1
	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK)  WHERE sp_id=@nSpId and tablename='rmd01106'
	set @cUpdatestr=isnull(@cUpdatestr,'')


	EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@lUpdateonly
							  ,@BALWAYSUPDATE=1,@lUpdateXns=@BADDMODE,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 


 --*********** PARCELS ENTRY **************************************
  
	DECLARE @bParcelAddmode BIT
	SELECT  @bParcelAddmode=1
      
	IF EXISTS (SELECT TOP 1 prt_memo_id FROM  PRT_PARCEL_MST_upload B (NOLOCK) WHERE prt_memo_id=@cMEmoId)
	BEGIN

		IF EXISTS (SELECT TOP 1 a.parcel_memo_id FROM parcel_mst a (NOLOCK) JOIN 
				   PRT_PARCEL_MST_upload b ON a.parcel_memo_id=b.parcel_memo_id
				   WHERE b.prt_memo_id=@cMemoId)
			SET  @bParcelAddmode=0

		SET @cStep=45
		EXEC SP_CHKXNSAVELOG 'PRTMERGE',@CSTEP,0,@CMEMOID,'',1

		update PRT_PARCEL_MST_UPLOAD set bilty_no=parcel_memo_no where sp_id=@nSpid and
	    isnull(bilty_no,'')=''

		SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK)  WHERE sp_id=@nSpId and  tablename='PARCEL_MST'
		SET @LUPDATEONLY = (CASE WHEN @bParcelAddmode=0 THEN 1 ELSE 0 END)		  	

		SET @CTABLENAME='PARCEL_MST'
		SET @CTMP_TABLENAME='PRT_'+@CTABLENAME+'_upload'
		SET @CKEYFIELD='PARCEL_MEMO_ID'
	
		set @cUpdatestr=isnull(@cUpdatestr,'')


    	EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@bParcelAddmode,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@lUpdateonly
							  ,@BALWAYSUPDATE=1,@lUpdateXns=@bParcelAddmode,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 

	END

	IF @dLastUpdate=@dMIrrorLastUpdate AND @bParcelAddmode=0
		SET @BDonotInsCHALLAN=1
	
	SET @CSTEP=50
	EXEC SP_CHKXNSAVELOG 'PRTMERGE',@CSTEP,0,@CMEMOID,'',1

	SELECT TOP 1 @cMissingRowId=a.row_id FROM PARCEL_DET A (NOLOCK) 
	LEFT JOIN 
	(SELECT row_id FROM PRT_PARCEL_DET_upload B (NOLOCK) WHERE sp_id=@nSpId) b
		ON A.row_ID =B.row_ID 
	JOIN parcel_mst c (NOLOCK) ON c.parcel_memo_id=a.parcel_memo_id 
	WHERE A.REF_MEMO_ID =@CMEMOID AND c.xn_type='prt' AND b.row_id IS NULL
						
	IF ISNULL(@cMissingRowId,'')<>''
	BEGIN		
		SET @CSTEP=55
		EXEC SP_CHKXNSAVELOG 'PRTMERGE',@CSTEP,0,@CMEMOID,'',1

		DELETE A FROM PARCEL_DET A (NOLOCK) 
		LEFT JOIN 
		(SELECT row_id FROM PRT_PARCEL_DET_upload B (NOLOCK) WHERE sp_id=@nSpId) b
			ON A.row_ID =B.row_ID 
		JOIN parcel_mst c (NOLOCK) ON c.parcel_memo_id=a.parcel_memo_id 
		WHERE A.REF_MEMO_ID =@CMEMOID AND c.xn_type='PRT' AND b.row_id IS NULL
	END

	SET @cStep=60
	EXEC SP_CHKXNSAVELOG 'PRTMERGE',@CSTEP,0,@CMEMOID,'',1
	IF EXISTS (SELECT TOP 1 PRT_memo_id FROM  PRT_PARCEL_DET_upload B (NOLOCK) WHERE sp_id=@nSpId)
	BEGIN
		SELECT @cMissingRowId='',@lUpdateonly=0
		IF @bParcelAddmode=0
		BEGIN
			SET @CSTEP=65
			EXEC SP_CHKXNSAVELOG 'PRTMERGE',@CSTEP,0,@CMEMOID,'',1

			SELECT TOP 1 @cMissingRowId=b.row_id FROM 
			(SELECT row_id  FROM PRT_PARCEL_DET_upload (NOLOCK) WHERE sp_id=(@nSpId+LEFT(@cMemoId,2))) A
			RIGHT OUTER JOIN 
			(SELECT row_id FROM PRT_PARCEL_DET_upload (NOLOCK) WHERE sp_id=@nspid) b ON 
			a.row_id=b.row_id WHERE a.row_id IS NULL

			--SELECT 'check @cMissingRowId of pid',@cMissingRowId

			IF ISNULL(@cMissingRowId,'')='' 
				SET @lUpdateonly=1
		END		
		
		SET @CSTEP=70
		EXEC SP_CHKXNSAVELOG 'PRTMERGE',@CSTEP,0,@CMEMOID,'',1				

		SET @CTABLENAME='PARCEL_DET'
		SET @CTMP_TABLENAME='PRT_'+@CTABLENAME+'_upload'
		SET @CKEYFIELD='PARCEL_MEMO_ID'

		SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK)  WHERE sp_id=@nSpId and tablename='PARCEL_DET'

		set @cUpdatestr=isnull(@cUpdatestr,'')


    	EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@bParcelAddmode,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@lUpdateonly
							  ,@BALWAYSUPDATE=1,@lUpdateXns=@bParcelAddmode,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 

	END
  
  --******************************************************************	
  

   IF EXISTS (SELECT TOP 1'U' FROM PRT_XN_AUDIT_TRIAL_DET_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID)
	BEGIN
	    
		
		DELETE A FROM PRT_XN_AUDIT_TRIAL_DET_UPLOAD A (NOLOCK) 
		JOIN XN_AUDIT_TRIAL_DET B (NOLOCK) ON A.XN_TYPE =B.XN_TYPE AND A.XN_ID =B.XN_ID AND A.ID=B.ID 
		WHERE A.SP_ID =@nSpId 

	    SET @CTABLENAME='XN_AUDIT_TRIAL_DET'
		SET @CTMP_TABLENAME='PRT_XN_AUDIT_TRIAL_DET_UPLOAD'
		SET @CKEYFIELD='XN_ID'

		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=0,@BUPDATEXNS =1						  
	

	END
	
	
	--select 'check @BDonotInsCHALLAN',@BDonotInsCHALLAN
	--DONOT  OVERWRITE DEBITNOTE CHALLAN (EKAYA)

	IF EXISTS (SELECT TOP 1 'U' FROM CNM01106 WHERE RM_ID=@CMEMOID AND RECEIPT_DT <>'' AND MODE=2)
	   GOTO LBLFINAL

	IF @NMODE=2 AND @BDonotInsCHALLAN=0
	BEGIN

		SET @CSTEP=75
		EXEC SP_CHKXNSAVELOG 'PRTMERGE',@CSTEP,0,@CMEMOID,'',1				
		
		DECLARE @CDISPATCHDETAILS VARCHAR(1000)
		
		SELECT @CDISPATCHDETAILS=PM.PARCEL_MEMO_ID  
		FROM RMM01106 A  
        JOIN LOCATION L ON L.DEPT_ID=    A.Location_code/*LEFT(A.rm_ID,2)*//*Rohit 06-11-2024*/      
		JOIN PARCEL_DET PB ON PB.REF_MEMO_ID=A.rm_ID    
	    JOIN PARCEL_MST PM ON PM.PARCEL_MEMO_ID=PB.PARCEL_MEMO_ID    
	    WHERE A.rm_ID= @CMEMOID  AND A.APPROVED=(CASE WHEN L.STN_APPROVAL = 1 THEN 2 ELSE A.APPROVED END)     
        AND PM.XN_TYPE='PRT'
        
		
		--select 'check @CPARTYDEPTID',@CPARTYDEPTID,@bServerLoc,@CCURDEPTID
	
		IF  ISNULL(@CDISPATCHDETAILS,'')=''
			GOTO LBLFINAL
		
		IF NOT (@CPARTYDEPTID=@CCURDEPTID OR @bServerLoc=1)
			GOTO LBLFINAL

		IF @bAddmode=0
		BEGIN
			DELETE FROM DOCPRT_rmd01106_MIRROR WHERE rm_id=@CMEMOID
			DELETE FROM DOCPRT_rmM01106_MIRROR WHERE rm_id=@CMEMOID
		END
		
		print 'insert ho git challan'
		SET @CSTEP=80
		EXEC SP_CHKXNSAVELOG 'PRTMERGE',@CSTEP,0,@CMEMOID,'',1				
		
		SET @CTABLENAME='DOCPRT_RMM01106_MIRROR'
		SET @CTMP_TABLENAME='PRT_RMM01106_upload'
		SET @CKEYFIELD='RM_ID'

		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=@bParcelAddmode,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1,@CSEARCHTABLE='RMM01106'


		SET @CSTEP=85
		EXEC SP_CHKXNSAVELOG 'PRTMERGE',@CSTEP,0,@CMEMOID,'',1				

		SET @CTABLENAME='DOCPRT_RMD01106_MIRROR'
		SET @CTMP_TABLENAME='PRT_RMD01106_upload'
		SET @CKEYFIELD='ROW_ID'
		 
		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=@bParcelAddmode,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1,@CSEARCHTABLE='RMD01106'


     SET @CSTEP=88
   
									   
		GOTO LBLFINAL
	END

LBLINSUPLOADMIRRORDOC:
 

LBLFINAL:

   IF @nEntrymode=2
		UPDATE a SET prt_rm_id =@cMemoId FROM DNPS_MST a WITH (ROWLOCK)
		JOIN PRT_rmd01106_UPLOAD  b (NOLOCK) ON a.ps_id=b.ps_id
		JOIN PRT_rmm01106_UPLOAD  c (NOLOCK) ON c.rm_id=b.rm_id
		WHERE c.sp_id=@nSpId AND c.cancelled=0
	
	SET @cStep=95
	EXEC SP_CHKXNSAVELOG 'PRTMERGE',@CSTEP,0,@CMEMOID,'',1

	EXEC SP3S_MERGE_LOCPMT  
	@cTempTable='PRT_PMT01106_upload',  
	@cMemoIdCol='SP_ID',  
	@cMemoId =@nSpId

	IF ISNULL(@cErrmsg,'')=''
	BEGIN
		SET @CSTEP=97
		EXEC SP_CHKXNSAVELOG 'PRTMERGE',@CSTEP,0,@CMEMOID,'',1

		EXEC SP3S_VALIDATE_DATAMERGED_SINGLECHANNEL
		@cMasterTable='RMM01106',
		@cDetTable='rmd01106',
		@cMemoIdCol='rm_id',
		@cMemoId=@cMemoId,
		@cUploadTable='prt_rmm01106_upload',
		@nSpId=@nSpId,
		@cErrormsg=@CERRMSG OUTPUT

		IF ISNULL(@cErrmsg,'')=''
			GOTO EXIT_PROC
    END
	
	set @CSTEP=100



	
			   		 	

END TRY
BEGIN CATCH
	SET @CERRMSG='P:SP3S_SYNCH_UPLOADDATA_PRT_OPT for MemoId:'+isnull(@cMemoId,'')+' , STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO EXIT_PROC
END CATCH

EXIT_PROC:

print 'last step:'+@cStep+ISNULL(@CERRMSG,'')

	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRMSG,'')=''
			COMMIT
		ELSE
			ROLLBACK
    END
	
	DECLARE @nSpidCopy VARCHAR(50)
	SET @nSpIdCopy=LEFT(@nSPId,38)+LEFT(@cMemoId,2)
	
	EXEC SP3S_DELETE_UPLOAD_PRTMERGE_TABLES @nSpId

	IF @bAddmode=0
		EXEC SP3S_DELETE_UPLOAD_PRTMERGE_TABLES @nSpIdCopy
				
	
END	
---END OF PROCEDURE - SP3S_SYNCH_UPLOADDATA_PRT_OPT
