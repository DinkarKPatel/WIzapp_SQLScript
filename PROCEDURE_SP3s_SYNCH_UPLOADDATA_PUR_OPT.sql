create PROCEDURE SP3s_SYNCH_UPLOADDATA_PUR_OPT
(
   @nSpId VARCHAR(50),
   @CERRMSG VARCHAR(MAX) OUTPUT
)
--WITH ENCRYPTION
AS
SET NOCOUNT ON
BEGIN


	/*
		208_2014_01_13 : THIS PROCEDURE WILL MERGE DATA FROM TEMPORARY TABLE TO ACTUAL TABLE.
						 TABLE NAMES AND ITS MERGING ORDER WILL BE FIXED AND WILL BE DEFINED HERE
						 	
						 
		NOTE : EMPLOYEE_HEAD WILL BE MERGED TO EMPLOYEE				 
	*/

DECLARE @CSTEP VARCHAR(100),@DTSQL NVARCHAR(MAX),@NMERGE_ORDER NUMERIC(5),@cUpdatestr VARCHAR(4000),@bCancelled BIT
	   ,@CTABLENAME VARCHAR(200),@CTABLE_SUFFIX VARCHAR(50),@CKEYFIELD VARCHAR(200),@CDEL_ID VARCHAR(50),@CTMP_TABLENAME VARCHAR(200),@LINSERTONLY VARCHAR(1)
	   ,@CFILTERCONDITION VARCHAR(200),@LUPDATEONLY VARCHAR(1),@BALWAYSUPDATE VARCHAR(1),@FDEL CHAR(1)
	   ,@CERRMSGOUT VARCHAR(1000),@CTABLESSTR VARCHAR(MAX),@CMIRRORINGENABLED VARCHAR(5)
	   ,@CCURDEPTID VARCHAR(5),@CTEMPMASTERTABLE VARCHAR(200),@CTEMPDETAILTABLE1 VARCHAR(200),@CTEMPDETAILTABLE2 VARCHAR(200)
	   ,@CTEMPPAYMODETABLE VARCHAR(200),@CTEMPTABLE VARCHAR(100),@CDONOTRESETPOSTEDINAC VARCHAR(1)
	   ,@BADDMODE BIT,@CCUTOFFDATE VARCHAR(20),@CWHERECLAUSE VARCHAR(2000),@CMEMONOLEN VARCHAR(5),@NMEMONOLEN INT
	   ,@DMINMEMODT DATETIME,@DMAXMEMODT DATETIME,@CFINYEAR VARCHAR(5),@CMEMOPREFIX VARCHAR(10)
	   ,@CMINMEMONO VARCHAR(20),@CMAXMEMONO VARCHAR(20),@CSOURCEDB VARCHAR(200),@CMERGEDB VARCHAR(200)
	   ,@BMSTINSERTONLY BIT,@BSERIESMISMATCHFOUND BIT,@CMEMOID VARCHAR(40),@CPREVMEMONO VARCHAR(20)
	   ,@NPREVMEMONO NUMERIC(5,0),@NLENVALUE INT,@CPREVMEMONOSEARCH VARCHAR(20),@CMEMOIDSEARCH VARCHAR(40)
	   ,@CRETPRODUCTCODE VARCHAR(50),@NVERSIONNO INT,@CTEMPSKUTABLE VARCHAR(500)
	   ,@CPARTYDEPTID VARCHAR(5),@CTEMPIMPTABLE VARCHAR(200),@CFILTERCONDITION3 VARCHAR(500),@dMrrDt DATETIME
	   ,@dRececiptDt DATETIME,@nUpdateMode NUMERIC(1,0)
	   ,@CCMD NVARCHAR(MAX),@CKEYFIELD1 VARCHAR(200),@SLS_SYNC_AFTER DATETIME,
	   @CWHERE varchar(100),@cLocId varchar(5)
	

BEGIN TRY
	   

	 
	SELECT @CSOURCEDB='',@CMERGEDB='',@BMSTINSERTONLY=1,@BSERIESMISMATCHFOUND=0,@CERRMSG=''
	
    	
    SELECT TOP 1 @CCURDEPTID=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='LOCATION_ID'

	SELECT @CTEMPMASTERTABLE=@CSOURCEDB+'PUR_PIm01106_UPLOAD',
		   @CTEMPDETAILTABLE1=@CSOURCEDB+'PUR_PID01106_UPLOAD'

			
LBLSTART:
    
    BEGIN TRANSACTION


    SELECT @CMEMOID='',@NVERSIONNO=0
    
    SET @SLS_SYNC_AFTER=''
	SELECT @SLS_SYNC_AFTER=ISNULL(VALUE, '') FROM CONFIG (NOLOCK) WHERE config_option='SLS_SYNC_AFTER'

		
	DECLARE @DFREEZINGDATE DATETIME	
	EXEC SP3S_GETDATA_FREEZING_DATE 'PUR',@dFREEZINGDATE OUTPUT
	
	DECLARE @cPurDeptId CHAR(2),@cHoMrrDeptId CHAR(2)
	
	SELECT TOP 1 @CMEMOID = B.MRR_ID ,@cPurDeptId=DEPT_ID,@cHoMrrDeptId=SUBSTRING(mrr_no,4,2),
	@dMrrDt=mrr_dt,@bCancelled=cancelled,@dRececiptDt=receipt_dt,@cLocId = location_Code 
    FROM PUR_PIM01106_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId

    
	IF @dMrrDt<@DFREEZINGDATE OR @dMrrDt< @SLS_SYNC_AFTER OR @dRececiptDt<@SLS_SYNC_AFTER 
		GOTO EXIT_PROC
		
	SET @CSTEP=17
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1
		
    SET @CFILTERCONDITION = 'B.sp_ID='''+@nSpId+''''
		
	SET @CMEMOIDSEARCH=''
	SELECT TOP 1 @CMEMOIDSEARCH=A.MRR_ID FROM PIM01106 A (NOLOCK) WHERE A.MRR_ID=@CMEMOID

	SET @CSTEP=19
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1
		
	IF ISNULL(@CMEMOIDSEARCH,'')<>''
		SET @BADDMODE=0
	ELSE
		SET @BADDMODE=1
	
	SET @nUpdateMode=(CASE WHEN @BADDMODE=1 THEN 1 WHEN @bCancelled=1 THEN 3 ELSE 2 END)



	SET @CSTEP=19.2
	EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

	EXEC SP3S_upd_qty_lastupdate
	@nUpdateMode=@NUPDATEMODE,
	@cXnType='PUR',
	@nSpId=@nSpId,
	@cMasterTable='pim01106',
	@cMemoIdCol='mrr_id',
	@cXnDtCol='receipt_dt',
	@cMemoId=@CMEMOIDSEARCH,
	@bCalledfromMerging=1,
	@CERRORMSG=@CERRMSG OUTPUT

	IF ISNULL(@cErrmsg,'')<>''
		GOTO EXIT_PROC
		
		
	IF @BADDMODE=0
	BEGIN

		SET @CSTEP=19.4
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

		IF @bCancelled=1 
		BEGIN
			UPDATE pim01106 WITH (ROWLOCK) SET cancelled=1 WHERE mrr_id=@cMemoid

			GOTO lblUpdatePmt
		END

		SET @CSTEP=21
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

		IF EXISTS (SELECT TOP 1 tablename FROM savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nSPID)
			DELETE FROM savetran_updcols_updatestr WITH (ROWLOCK) WHERE sp_id=@nSpId

		INSERT savetran_updcols_updatestr (sp_id,tablename,updatestr)
		SELECT @nSPId as sp_id,tablename,'' from mirrorxnsinfo (NOLOCK)
		WHERE tablename IN ('pim01106','pid01106','DAILOGFILE','sku')

		IF OBJECT_ID('TEMPDB..#T','U') IS NOT NULL
			DROP TABLE #T
	
		select SP_ID INTO #t FROM PUR_PIm01106_UPLOAD (NOLOCK) WHERE 1=2

		SET @CSTEP=23
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1
		
		EXEC SP3S_VERIFY_PURDATA_merge_CHANGES
		@cMemoId=@cMemoId,
		@nSpId=@nSpid
	END
	ELSE IF EXISTS(SELECT TOP 1 'U' FROM PUR_PURCHASEORDERPROCESSINGNEW_UPLOAD A (NOLOCK) 
	                JOIN POD01106 B (NOLOCK) ON A.REFROWID =B.ROW_ID 
	                JOIN PUR_PID01106_UPLOAD C (NOLOCK) ON A.ROWID =C.ROW_ID AND A.SP_ID =C.SP_ID 
	                WHERE B.PRODUCT_CODE <>'' AND A.SP_ID =@NSPID AND CHARINDEX ('',C.PRODUCT_CODE)=0)
	BEGIN
	  
	     IF EXISTS (SELECT TOP 1 tablename FROM savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nSPID)
			DELETE FROM savetran_updcols_updatestr WITH (ROWLOCK) WHERE sp_id=@nSpId

		INSERT savetran_updcols_updatestr (sp_id,tablename,updatestr)
		SELECT @nSPId as sp_id,tablename,'' from mirrorxnsinfo (NOLOCK)
		WHERE tablename IN ('sku')
		
		Declare @CFILTERCONDITION_SKU varchar(500),@CJOINSTR varchar(500),@CINSSPID varchar(20)
		
		set @CINSSPID=LEFT(@nSPId,38)+@cLocId 
		
		print 'Existing barcode overwrite in add mode against po'
		
		SELECT @CFILTERCONDITION_SKU=' c.mrr_id='''+@cMemoId+''' and c.sp_id='''+@nSPId+''' ',
			@CJOINSTR=' JOIN pur_pid01106_Upload c ON c.product_code=b.product_code  '
			
		PRINT 'gen tempdata for sku '
		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB='',@CSOURCETABLE='sku',@CDESTDB=''
									,@CDESTTABLE='pur_sku_upload',@CKEYFIELD1='sp_id',@CKEYFIELD2='',@CKEYFIELD3=''
									,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION_SKU,@LUPDATEONLY=0
									,@BALWAYSUPDATE=0,@bUpdateXns=1,@CINSSPID=@CINSSPID,@CSEARCHTABLE='sku',@CJOINSTR=@CJOINSTR	
		
		PRINT 'gen tempdata for 4'
		EXEC SP3S_GENFILTERED_UPDATESTR
		@cSpId=@nSpId ,
		@cInsSpId=@cInsSpId,
		@cTableName='sku',
		@cUploadTableName='pur_sku_upload',
		@cKeyfield='product_code',
		@bDonotChkLastUpdate=1
	

	
	END

	DECLARE @cMissingRowId VARCHAR(40)

	IF @BADDMODE=0
	BEGIN	

		SET @CSTEP=27
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1
		
		 DELETE A FROM PURCHASEORDERPROCESSINGNEW A (NOLOCK)
         JOIN PID01106 B (nolock) ON A.ROWID=B.ROW_ID
         WHERE XNTYPE ='PURCHASEINVOICE' AND B.mrr_id =@CMEMOID

		SELECT TOP 1 @cMissingRowId=a.row_id FROM PID01106 A (NOLOCK) 
		LEFT JOIN 
		(SELECT row_id FROM PUR_PID01106_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId) b
		ON A.row_ID =B.row_ID WHERE A.MRR_ID =@CMEMOID AND b.row_id IS NULL

		IF ISNULL(@cMissingRowId,'')<>''
		BEGIN		
			SET @CSTEP=30
			EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

			DELETE A FROM PID01106 A WITH (ROWLOCK) LEFT JOIN 
			(SELECT row_id FROM PUR_PID01106_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId) b
			ON A.row_ID =B.row_ID WHERE A.MRR_ID =@CMEMOID AND b.row_id IS NULL
		END

		SET @CSTEP=32
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

		SELECT TOP 1 @cMissingRowId=a.ROWID FROM DAILOGFILE A (NOLOCK) 
		LEFT JOIN 
		(SELECT ROWID FROM PUR_DAILOGFILE_upload B (NOLOCK) WHERE sp_id=@nSpId) b
		ON A.ROWID =B.ROWID WHERE A.MEMONO =@CMEMOID AND b.ROWID IS NULL
				
		IF ISNULL(@cMissingRowId,'')<>''
		BEGIN		
			SET @CSTEP=35
		    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

			DELETE A FROM DAILOGFILE A WITH (ROWLOCK) LEFT JOIN 
			(SELECT ROWID FROM PUR_DAILOGFILE_upload B (NOLOCK) WHERE sp_id=@nSpId) b
			ON A.ROWID =B.ROWID WHERE A.MEMONO =@CMEMOID AND b.ROWID IS NULL
		END
	END
	
LBLMERGE:
	---DELETING EXISTING RECORD IF BILL COMES AGAIN FOR MERGING
	
	--SELECT @CTEMPMASTERTABLE,@CFILTERCONDITION

	SET @CWHERE=' AND A.sp_ID='''+@nSpId+''''

	
	IF EXISTS (SELECT TOP 1 a.section_code FROM pur_Sectionm_upload a (NOLOCK)
				LEFT OUTER JOIN sectionm b (NOLOCK) ON a.section_code=b.section_code
				WHERE a.sp_id=@nSpId AND b.section_code IS NULL)
	BEGIN
		SET @CSTEP=37
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

		SET @CTABLENAME='SECTIONM'
		SET @CTMP_TABLENAME='PUR_SECTIONM_upload'
		SET @CKEYFIELD='SECTION_CODE'

		EXEC SP3S_INACTIVE_MASTERS @CTEMPTABLE=@CTMP_TABLENAME,@CTABLENAME=@CTABLENAME,@CCOLNAME='SECTION_NAME',
		@CCOLKEYNAME=@CKEYFIELD,@CWHERE=@CWHERE
	
		SET @CSTEP=45
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1 
	END

	IF EXISTS (SELECT TOP 1 a.section_code FROM pur_Sectiond_upload a (NOLOCK)
			LEFT OUTER JOIN sectiond b (NOLOCK) ON a.sub_section_code=b.sub_section_code
			WHERE a.sp_id=@nSpId AND b.sub_section_code IS NULL)
	BEGIN

	
		SET @CSTEP=50
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1
		SET @CTABLENAME='SECTIOND'
		SET @CTMP_TABLENAME='PUR_SECTIOND_upload'
		SET @CKEYFIELD='SUB_SECTION_CODE'

		EXEC SP3S_INACTIVE_MASTERS @CTEMPTABLE=@CTMP_TABLENAME,@CTABLENAME=@CTABLENAME,@CCOLNAME='SUB_SECTION_NAME',@CCOLKEYNAME=@CKEYFIELD,@CWHERE=@CWHERE

		SET @CSTEP=52

	   EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1 
	END			
	

	--hsn import
      
	IF EXISTS (SELECT TOP 1 'U' FROM PUR_HSN_MST_UPLOAD A   (NOLOCK) 
	           LEFT JOIN HSN_MST B   (NOLOCK) ON A.HSN_CODE =B.HSN_CODE  WHERE SP_ID=@NSPID and b.hsn_code is null)
	BEGIN
	    
		
		DELETE A FROM PUR_HSN_MST_UPLOAD A (NOLOCK) 
		JOIN HSN_MST B (NOLOCK) ON A.HSN_CODE =B.HSN_CODE 
		WHERE A.SP_ID =@nSpId 

	    SET @CTABLENAME='HSN_MST'
		SET @CTMP_TABLENAME='PUR_HSN_MST_UPLOAD'
		SET @CKEYFIELD='HSN_code'

		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=0,@BUPDATEXNS =1						  
	

	END
	IF EXISTS (SELECT TOP 1 'U' FROM PUR_HSN_DET_UPLOAD A  with (NOLOCK) 
	           LEFT JOIN HSN_DET B   with (NOLOCK)  ON A.HSN_CODE =B.HSN_CODE  WHERE SP_ID=@NSPID and b.hsn_code is null)
	BEGIN
	    
		
		DELETE A FROM PUR_HSN_DET_UPLOAD A with (NOLOCK) 
		JOIN HSN_DET B with (NOLOCK) ON A.HSN_CODE =B.HSN_CODE 
		WHERE A.SP_ID =@nSpId 

	    SET @CTABLENAME='HSN_DET'
		SET @CTMP_TABLENAME='PUR_HSN_DET_UPLOAD'
		SET @CKEYFIELD='ROW_ID'

		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=0,@BUPDATEXNS =1						  
	

	END

	--end of hsn_det

	IF EXISTS (SELECT TOP 1 a.article_code FROM PUR_ARTICLE_upload a (NOLOCK) 
				LEFT OUTER JOIN article b (NOLOCK) ON a.article_code=b.article_code
			    WHERE a.sp_id=@nSpId AND b.article_code IS NULL)	
	BEGIN

   		SET @CSTEP=55
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1


		SET @CTABLENAME='ARTICLE'
		SET @CTMP_TABLENAME='PUR_ARTICLE_upload'
		SET @CKEYFIELD='ARTICLE_CODE'

		EXEC SP3S_INACTIVE_MASTERS @CTEMPTABLE=@CTMP_TABLENAME,@CTABLENAME=@CTABLENAME,@CCOLNAME='ARTICLE_NO',@CCOLKEYNAME=@CKEYFIELD,@CWHERE=@CWHERE

   		SET @CSTEP=57
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
									,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
									,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
									,@BALWAYSUPDATE=1 
							  
	END
	
	DECLARE @CATTR_KEY_NAME VARCHAR(100),@bParaTable  BIT,@nParaCnt NUMERIC(2,0),@cColName VARCHAR(20)							  

	DECLARE @NCOUNT INT,@BLOOP INT,@CCMD1 NVARCHAR(MAX),@bExists bit
	SET @NCOUNT=31
	SET @BLOOP=1
	WHILE (@BLOOP <=@NCOUNT )
	BEGIN

			SET @CSTEP=65
			EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1
	      
		    SET @bParaTable = (CASE WHEN @bLoop<=25 then 0 ELSE 1 END)

			IF @bParaTable=0
			BEGIN
				SET @CTABLENAME='ATTR'+RTRIM(LTRIM(STR(@BLOOP)))+'_MST'
				SET @CTMP_TABLENAME='PUR_ATTR'+RTRIM(LTRIM(STR(@BLOOP)))+'_MST_upload'
				SET @CKEYFIELD='ATTR'+RTRIM(LTRIM(STR(@BLOOP)))+'_KEY_CODE'
			END
			ELSE
			BEGIN
				SET @nParaCnt=@bLoop-25
				SET @CTABLENAME='PARA'+RTRIM(LTRIM(STR(@nParaCnt)))
				SET @CTMP_TABLENAME='PUR_PARA'+RTRIM(LTRIM(STR(@nParaCnt)))+'_upload'
				SET @CKEYFIELD='PARA'+RTRIM(LTRIM(STR(@nParaCnt)))+'_CODE'
			END

			SET @cCmd=N'IF EXISTS (SELECT TOP 1 '+@CKEYFIELD+' FROM '+@CTMP_TABLENAME+'(NOLOCK) WHERE sp_id='''+@nSpId+'''
							AND '+@cKeyField+'<>''0000000'')
							SET @bExists=1
						ELSE
							SET @bExists=0'
			PRINT @cCmd
			EXEC SP_EXECUTESQL @cCmd,N'@bExists BIT OUTPUT' ,@bExists=@bExists OUTPUT

		  	----FOR DUPLICATE ATTRIBUTE 
			
			IF @bExists=1
			BEGIN
				SET @CSTEP=70
				EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

				SET @cCmd=N'IF EXISTS (SELECT TOP 1 a.'+@CKEYFIELD+' FROM '+@CTMP_TABLENAME+' a (NOLOCK)
									   LEFT OUTER JOIN '+@CTABLENAME+' b (NOLOCK) ON a.'+@CKEYFIELD+'=b.'+@CKEYFIELD+'
									   WHERE sp_id='''+@nSpId+''' AND b.'+@CKEYFIELD+' IS NULL)
							SET @bExists=1
						ELSE
							SET @bExists=0'
				EXEC SP_EXECUTESQL @cCmd,N'@bExists BIT OUTPUT' ,@bExists=@bExists OUTPUT

		
				IF @bExists=1
				BEGIN

					IF @bParaTable=1
					BEGIN
						SET @CSTEP=72
						EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

						SET @cColName='PARA'+LTRIM(RTRIM(STR(@nParaCnt)))+'_name'
						EXEC SP3S_INACTIVE_MASTERS @CTEMPTABLE=@CTMP_TABLENAME,@CTABLENAME=@CTABLENAME,@CCOLNAME=@cColName,@CCOLKEYNAME=@CKEYFIELD,@CWHERE=@CWHERE
					END

					SET @CSTEP=75
					EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1


					 EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB        
					 ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''        
					 ,@LINSERTONLY=1,@LUPDATEONLY=0        
					 ,@BALWAYSUPDATE=1
					 ,@CFILTERCONDITION=@CFILTERCONDITION 
				END
			END
			
		

	       
		   SET @BLOOP=@BLOOP +1  			
	END
    
	IF EXISTS (SELECT TOP 1 a.article_code FROM PUR_ARTICLE_FIX_ATTR_upload a (NOLOCK)
				LEFT OUTER JOIN  ARTICLE_FIX_ATTR b (NOLOCK) ON a.article_code=b.article_code
			   WHERE a.sp_ID=@nSpId AND b.article_code IS NULL)
	BEGIN
		SET @CSTEP=80
	    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

		SET @CTABLENAME='ARTICLE_FIX_ATTR'
		SET @CTMP_TABLENAME='PUR_'+@CTABLENAME+'_upload'
		SET @CKEYFIELD='ARTICLE_CODE'
		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB        
			 ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='ARTICLE_CODE',@CKEYFIELD3=''        
			 ,@LINSERTONLY=1,@LUPDATEONLY=0 ,@BALWAYSUPDATE=1,@CFILTERCONDITION=@CFILTERCONDITION        
    END         							  
	
	
	SET @CSTEP=140
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1
    
    --for nagarmal against batch code overwrite base barcode 
    
	   SELECT LEFT(b.PRODUCT_CODE, CHARINDEX('@', b.PRODUCT_CODE)-1) AS PRODUCT_CODE
				   INTO #TMPPCWOBATCH
	   FROM PUR_pid01106_UPLOAD B (NOLOCK) 
	   JOIN PUR_pim01106_UPLOAD C (NOLOCK) ON B.SP_ID = C.SP_ID   
	   left join sku (nolock)  on b.product_code =sku.product_code 
	   WHERE B.SP_ID = @NSPID AND ISNULL(b.PRODUCT_CODE,'')<>'' and sku.product_code is null  
	   AND CHARINDEX('@',B.PRODUCT_CODE)>0 
	   GROUP BY LEFT(b.PRODUCT_CODE, CHARINDEX('@', b.PRODUCT_CODE)-1)  
			    
	
	DECLARE @bINSERTSKUONLY INT 
	SET @bINSERTSKUONLY=0
	
	SET @CSTEP=145
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1
	
    IF EXISTS (SELECT TOP 1 'U' FROM PUR_SKU_upload A (NOLOCK) JOIN IRD01106 B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
			   JOIN IRM01106 C (NOLOCK) ON B.IRM_MEMO_ID=C.IRM_MEMO_ID 
			   WHERE sp_ID=@nSpId AND C.TYPE IN (1,3,4) AND ISNULL(b.new_product_code,'')='')
    BEGIN
		SET @CSTEP=150
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

      --SET @bINSERTSKUONLY=1 --DUE TO PARTIAL BARCODE RATErEVISION HANDLE
      UPDATE A SET ARTICLE_CODE=B.ARTICLE_CODE,PARA1_CODE=B.PARA1_CODE,PARA2_CODE=B.PARA2_CODE,
                 PARA3_CODE=B.PARA3_CODE,PARA4_CODE=B.PARA4_CODE,PARA5_CODE=B.PARA5_CODE,
                 PARA6_CODE=B.PARA6_CODE ,MRP=B.MRP,ws_price=b.ws_price 
                 FROM PUR_SKU_upload A (NOLOCK) 
                 JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
                 JOIN IRD01106 C (NOLOCK) ON C.product_code=A.product_code
                 JOIN irm01106 D (NOLOCK) ON D.irm_memo_id=C.irm_memo_id
                 WHERE  sp_ID=@nSpId AND D.TYPE IN (1,3,4) AND ISNULL(c.new_product_code,'')=''
    END
    
	SET @CSTEP=155
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1
    
    -- as Discuss with sir shipping from ac_code Update in sku 
      IF EXISTS (SELECT TOP 1 'U' FROM PUR_SKU_UPLOAD A (NOLOCK) 
                 JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE WHERE ISNULL(A.SHIPPING_FROM_AC_CODE,'') <>ISNULL(B.SHIPPING_FROM_AC_CODE ,'')
                 and  ISNULL(A.SHIPPING_FROM_AC_CODE,'')<>''
                )
       BEGIN
             
             UPDATE B SET SHIPPING_FROM_AC_CODE=A.SHIPPING_FROM_AC_CODE 
             FROM PUR_SKU_UPLOAD A (NOLOCK) 
             JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE WHERE ISNULL(A.SHIPPING_FROM_AC_CODE,'') <>ISNULL(B.SHIPPING_FROM_AC_CODE ,'')
             and  ISNULL(A.SHIPPING_FROM_AC_CODE,'')<>''
             
       END
    
    
    --end
    

	SELECT @cMissingRowId='',@lUpdateonly=0,@cUpdatestr=''
	IF @BADDMODE=0 AND @bINSERTSKUONLY=0
	BEGIN
		SET @CSTEP=185
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

		SELECT TOP 1 @cMissingRowId=b.product_code FROM 
		(SELECT product_code  FROM PUR_SKU_upload (NOLOCK) WHERE sp_id=(LEFT(@nSPId,38)+@cLocId )) A
		RIGHT OUTER JOIN 
		(SELECT product_code FROM PUR_SKU_upload (NOLOCK) WHERE sp_ID=@nSpId) b ON 
		a.product_code=b.product_code WHERE a.product_code IS NULL

		--SELECT 'check @cMissingRowId of pid',@cMissingRowId

		IF ISNULL(@cMissingRowId,'')='' 
			SET @lUpdateonly=1
	END

	SET @CSTEP=157
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1
	
	SET @CTABLENAME='SKU'
	SET @CTMP_TABLENAME='PUR_SKU_upload'
	SET @CKEYFIELD='PRODUCT_CODE'
	
	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nspid and tablename='sku'
	

	SET @CSTEP=157.3
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

	SELECT a.product_code INTO #tmpSku FROM PUR_SKU_upload a (NOLOCK) where 1=2


	IF @LUPDATEONLY=0
	BEGIN	
		SET @CSTEP=157.5
	    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

		INSERT INTO #tmpSku
		SELECT a.product_code FROM PUR_SKU_upload a (NOLOCK) LEFT OUTER JOIN 
		sku b (NOLOCK) ON a.product_code=b.product_code
		WHERE a.sp_ID=@nSpId AND b.product_code IS NULL AND ISNULL(a.product_code,'')<>''
	END

	DECLARE @bBarCodeGenerated BIT
	set @bBarCodeGenerated=0

	IF EXISTS (SELECT TOP 1 product_code FROM  #tmpSku)
		SET @bBarCodeGenerated=1

	IF @bBarCodeGenerated=0 AND @BADDMODE=1
	BEGIN
		IF EXISTS (SELECT top 1 a.product_code FROM PUR_SKU_upload a (NOLOCK) WHERE sp_id=@nSpId AND ISNULL(a.product_code,'')<>'')
			SET @bBarCodeGenerated=1
	END

	SET @CSTEP=158
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

	declare @cRemarks varchar(2000)
	
	

	IF (@bBarCodeGenerated=1 OR  EXISTS (SELECT TOP 1 product_code FROM  #tmpSku)  OR ISNULL(@cUpdatestr,'')<>'')
	BEGIN
		--IF @bINSERTSKUONLY=0 AND @bAddmode=1 
		--BEGIN
		--	IF NOT EXISTS (SELECT TOP 1 a.product_code FROM PUR_SKU_upload a (NOLOCK) 
		--			   JOIN sku b (NOLOCK) ON a.product_code=b.product_code
		--			   WHERE a.sp_ID=@nSpId )
		--		SET @bINSERTSKUONLY=1
		--END
		
		

		SET @CSTEP=158.5
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1
		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=@bINSERTSKUONLY,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
								  ,@BALWAYSUPDATE=1,@lUpdateXns=0,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1  
	END
	
	
	--now update base barcode all information for nagarmal (12042023)
		IF EXISTS (SELECT TOP 1 'U' FROM #TMPPCWOBATCH)  
        BEGIN
        
		   UPDATE A  SET     
		   ARTICLE_CODE = B.ARTICLE_CODE,     
		   PARA1_CODE = B.PARA1_CODE,     
		   PARA2_CODE = B.PARA2_CODE,     
		   PARA3_CODE = B.PARA3_CODE,     
		   PARA4_CODE = B.PARA4_CODE,     
		   PARA5_CODE = B.PARA5_CODE,     
		   PARA6_CODE = B.PARA6_CODE,     
		   AC_CODE  = C.AC_CODE,    
		   CHALLAN_NO  =(CASE WHEN ISNULL(C.BILL_CHALLAN_MODE,0)=1 THEN  C.INV_NO ELSE CHALLAN_NO END) ,   
		   INV_NO  = C.BILL_NO,   
		   INV_DT  = C.INV_DT,  
		   RECEIPT_DT = C.RECEIPT_DT,   
		   EMP_CODE= C.EMP_CODE,  
		   ER_FLAG=C.MEMO_TYPE,  
		   FIX_MRP=B.FIX_MRP,  
		   BATCH_NO =B.BATCH_NO ,  
		   EXPIRY_DT =B.EXPIRY_DT ,  
		   MRP=B.MRP,  
		   WS_PRICE=B.WHOLESALE_PRICE,  
		   BASIC_PURCHASE_PRICE =B.GROSS_PURCHASE_PRICE ,  
		   SHIPPING_FROM_AC_CODE=C.SHIPPING_FROM_AC_CODE,  
		   VENDOR_EAN_NO =B.VENDOR_EAN_NO  
		  FROM SKU A WITH (ROWLOCK)  
		  JOIN PUR_pid01106_UPLOAD B (NOLOCK) ON A.PRODUCT_CODE =LEFT(B.PRODUCT_CODE, CHARINDEX('@', B.PRODUCT_CODE)-1)  
		  JOIN PUR_pim01106_UPLOAD C (NOLOCK) ON B.SP_ID = C.SP_ID    
		  JOIN #TMPPCWOBATCH E ON E.PRODUCT_CODE=A.PRODUCT_CODE  
		  WHERE B.SP_ID = @NSPID  
		  and CHARINDEX('@', B.PRODUCT_CODE)>0 


     END
-- end of updation	

	SET @CSTEP=159
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1
	IF EXISTS (SELECT TOP 1 a.product_code FROM PUR_SKU_OH_upload a (NOLOCK) LEFT OUTER JOIN 
			   sku_oh b (NOLOCK) ON a.product_code=b.product_code
			   WHERE a.sp_ID=@nSpId AND b.product_code IS NULL) 
	BEGIN
		SET @CSTEP=160
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

		SET @CTABLENAME='SKU_OH'
		SET @CTMP_TABLENAME='PUR_SKU_OH_upload'
		SET @CKEYFIELD='PRODUCT_CODE'

	
		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1 
	END
								  

LBLDELETETEMPDATA:
 
	IF @BADDMODE=0
		PRINT 'ADDMODE:N'
	ELSE
		PRINT 'ADDMODE:Y'	
	
	SET @CSTEP=165
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

	---UPDATING TRANSACTION TABLES
	SET @CTABLENAME='PIM01106'
	SET @CTMP_TABLENAME='PUR_PIm01106_UPLOAD'
	SET @CKEYFIELD='MRR_ID'

	-- donot overwrite doc synch last update 
	UPDATE A SET DOC_SYNCH_LAST_UPDATE=pim.DOC_SYNCH_LAST_UPDATE 
	FROM PUR_PIM01106_UPLOAD A (NOLOCK)
	JOIN PIM01106 pim (NOLOCK) ON A.MRR_ID=pim.MRR_ID
	JOIN location b (NOLOCK) ON a.dept_id=b.dept_id
	WHERE A.SP_ID=@NSPID
	AND ISNULL(ALLOW_PURCHASE_AT_HO,0)=1
	AND a.inv_mode=1 

	SET @CFILTERCONDITION = 'B.sp_id='''+@nSpId+''''

	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nspid and tablename='pim01106'
	SET @LUPDATEONLY = (CASE WHEN @BADDMODE=0 THEN 1 ELSE 0 END)	

	EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
							  ,@BALWAYSUPDATE=1,@lUpdateXns=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1  


	SET @CSTEP=170
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

    --PMT EFFECT IN CASE OF PUR AT HO LOCATION

	SET @CSTEP=180
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

	SET @CTABLENAME='PID01106'
	SET @CTMP_TABLENAME='PUR_PID01106_UPLOAD'
	SET @CKEYFIELD='ROW_ID'
	
	
	SELECT @cMissingRowId='',@lUpdateonly=0
	IF @BADDMODE=0
	BEGIN
		SET @CSTEP=185
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

		SELECT TOP 1 @cMissingRowId=b.row_id FROM 
		(SELECT row_id  FROM PUR_PID01106_UPLOAD (NOLOCK) WHERE sp_id=(LEFT(@nSPId,38)+@cLocId )) A
		RIGHT OUTER JOIN 
		(SELECT row_id FROM PUR_PID01106_UPLOAD (NOLOCK) WHERE sp_id=@nSpId) b ON 
		a.row_id=b.row_id WHERE a.row_id IS NULL

		--SELECT 'check @cMissingRowId of pid',@cMissingRowId

		IF ISNULL(@cMissingRowId,'')='' 
			SET @lUpdateonly=1
	END

	SET @CSTEP=190
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

	
	--select 'check @lUpdateonly',@lUpdateonly as lUpdateonly

	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nspid and tablename='pid01106'

	EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@lUpdateonly
							  ,@BALWAYSUPDATE=1,@lUpdateXns=@BADDMODE,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 


	
	

	SET @CSTEP=200
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

	

	SET @CSTEP=210
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

	
	SET @CTABLENAME='DAILOGFILE'
	SET @CTMP_TABLENAME='PUR_DAILOGFILE_upload'
	SET @CKEYFIELD='MEMONO'

	SELECT @cMissingRowId='',@lUpdateonly=0
	IF @BADDMODE=0
	BEGIN
		SELECT TOP 1 @cMissingRowId=b.rowid FROM 
		(SELECT rowid  FROM PUR_dailogfile_upload (NOLOCK) WHERE sp_id=(LEFT(@nSPId,38)+@cLocId )) A
		RIGHT OUTER JOIN 
		(SELECT rowid FROM PUR_dailogfile_upload (NOLOCK) WHERE sp_id=@nSpId) b ON 
		a.rowid=b.rowid WHERE a.rowid IS NULL

		IF ISNULL(@cMissingRowId,'')='' 
			SET @lUpdateonly=1
	END

	SET @CSTEP=212
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

	IF EXISTS (SELECT TOP 1 rowid FROM PUR_DAILOGFILE_upload (NOLOCK) WHERE sp_id =@nSpId)
	BEGIN	
		
		SET @CSTEP=214
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1
	    SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nspid and tablename='DAILOGFILE'
	
		
		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='ROWID',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1
								  --,@lUpdateXns=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 
	END

	SET @CSTEP=216
EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1
	IF EXISTS (SELECT TOP 1 BOX_ID FROM pur_boxm_upload (NOLOCK) WHERE sp_id=@nSpId)
	BEGIN
		--START: ADDED ON 20 JAN 2018
		SET @CSTEP=218.3							  
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1


		
		SET @CTABLENAME='BOXM'
		SET @CTMP_TABLENAME='PUR_BOXM_UPLOAD'
		SET @CKEYFIELD='BOX_ID'
	
		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1 
		SET @CSTEP=224
	    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1
		
		SET @CTABLENAME='BOXD'
		SET @CTMP_TABLENAME='PUR_BOXD_UPLOAD'
		SET @CKEYFIELD='BOX_ID'
	
		EXEC UPDATEMASTERXN_OPT @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='ROW_ID',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
								  ,@BALWAYSUPDATE=1 
		--END: ADDED ON 20 JAN 2018
	END

	SET @CSTEP=214
	EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1
  IF EXISTS (SELECT TOP 1 'U' FROM PUR_XN_AUDIT_TRIAL_DET_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID)
	BEGIN
	    
		
		DELETE A FROM PUR_XN_AUDIT_TRIAL_DET_UPLOAD A (NOLOCK) 
		JOIN XN_AUDIT_TRIAL_DET B (NOLOCK) ON A.XN_TYPE =B.XN_TYPE AND A.XN_ID =B.XN_ID AND A.ID=B.ID 
		WHERE A.SP_ID =@nSpId 

	    SET @CTABLENAME='XN_AUDIT_TRIAL_DET'
		SET @CTMP_TABLENAME='PUR_XN_AUDIT_TRIAL_DET_UPLOAD'
		SET @CKEYFIELD='XN_ID'

		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=0,@BUPDATEXNS =1						  
	

	END
	
	

	IF EXISTS (SELECT TOP 1 'U' FROM PUR_POD_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID)
	BEGIN
	     

		 UPDATE A SET PI_QTY=B.PI_QTY FROM 
		 POD01106 A (NOLOCK)
		 JOIN PUR_POD_UPLOAD B (NOLOCK) ON A.ROW_ID =B.ROW_ID
		 WHERE SP_ID=@NSPID


	END
	
	
   
    SET @CSTEP=225
	SET @CTABLENAME='IMAGE_INFO_DOC'
	SET @CTMP_TABLENAME='PUR_IMAGE_INFO_DOC_UPLOAD'
	SET @CKEYFIELD='MEMO_ID'
	SET @CMERGEDB=DB_NAME()+'_IMAGE.DBO.'
	SET @CFILTERCONDITION=' B.MEMO_ID='''+@CMEMOID+''' AND B.SP_ID='''+@nSpId+''''
	SET @CSTEP=230
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2= 'IMG_ID',@CKEYFIELD3=''
							  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
							  ,@BALWAYSUPDATE=1 
	
	
	
	
    SET @CSTEP=232
	SET @CTABLENAME='PURCHASEORDERPROCESSINGNEW'
	SET @CTMP_TABLENAME='PUR_PURCHASEORDERPROCESSINGNEW_UPLOAD'
	SET @CKEYFIELD='rowid'
	SET @CMERGEDB=''
	SET @CFILTERCONDITION='  B.SP_ID='''+@nSpId+''''
	SET @CSTEP=230
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2= '',@CKEYFIELD3=''
							  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
							  ,@BALWAYSUPDATE=1 
	
   

lblUpdatePmt:

	SET @CSTEP=240
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,'',1

	EXEC SP3S_MERGE_LOCPMT  
	@cTempTable='PUR_PMT01106_upload',  
	@cMemoIdCol='sp_id',  
	@cMemoId =@nSpid,
	@bCancelXn=@bCancelled

	IF ISNULL(@cErrmsg,'')=''
	BEGIN
		SET @CSTEP=242
		EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@CMEMOID,'',1

		EXEC SP3S_VALIDATE_DATAMERGED_SINGLECHANNEL
		@cMasterTable='pim01106',
		@cDetTable='pid01106',
		@cMemoIdCol='mrr_id',
		@cMemoId=@cMemoId,
		@cUploadTable='pur_pim01106_upload',
		@nSpId=@nSpId,
		@cErrormsg=@CERRMSG OUTPUT

		IF ISNULL(@cErrmsg,'')=''
			GOTO EXIT_PROC
    END
    
    


		   
END TRY
BEGIN CATCH
	SET @CERRMSG='Error in Procedure SP3s_SYNCH_UPLOADDATA_PUR_OPT, MEMO ID :'+@CMEMOID+' at STEP#'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO EXIT_PROC
END CATCH

EXIT_PROC:

	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRMSG,'')='' AND @BSERIESMISMATCHFOUND<>1
			commit
		ELSE
			ROLLBACK
    END

	declare @CtEXT VARCHAR(20)
	SET @cText=(CASE WHEN @BADDMODE=1 THEN 'ADDMODE' ELSE 'EDITMOTE' END)

	SET @CSTEP=245
    EXEC SP_CHKXNSAVELOG 'PURMERGE',@CSTEP,0,@nSpId,@cText,1
	

	DECLARE @nSpIdCopy VARCHaR(50)
	SET @nSpIdCopy=LEFT(@nSPId,38)+@cLocId 
	EXEC SP3S_DELETEupload_PURmerge_TABLES '',@nSpIdCopy
END	
---END OF PROCEDURE - SP3s_SYNCH_UPLOADDATA_PUR_OPT