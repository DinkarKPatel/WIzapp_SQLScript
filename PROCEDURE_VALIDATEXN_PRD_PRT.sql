CREATE PROCEDURE VALIDATEXN_PRD_PRT
 @CXNID VARCHAR(50),	
 @NUPDATEMODE INT,			 
 @CERRORMSG VARCHAR(200) OUTPUT
-- WITH ENCRYPTION
 
AS
BEGIN
	DECLARE @CCMD NVARCHAR(4000),@NSUMPIDNET NUMERIC(14,2),@NSUBTOTAL NUMERIC(14,2),@NCALCTOTALAMOUNT NUMERIC(14,2),
	@NMSTTOTALAMOUNT NUMERIC(14,2), @NTAXVAL NUMERIC(14,2),@NCALCTAXVAL NUMERIC(14,2),@CPRODUCTCODE VARCHAR(50),
	@NCALCDISCOUNTAMT NUMERIC(14,2),@NDISCOUNTAMT NUMERIC(14,2),@CITEMNAME VARCHAR(100),
	@NCALCPURAMOUNT NUMERIC(14,2),@NPURAMOUNT NUMERIC(14,2),@NSUMSMTOTAL NUMERIC(14,2),@NSUMMMTOTAL	NUMERIC(14,2),
	@CCMDERRORMSG VARCHAR(2000) 	
		
		
	DECLARE @CRMMTABLE TABLE ( RM_ID VARCHAR(22), RM_NO VARCHAR(10), RM_DT DATETIME, 
						   AC_CODE VARCHAR(10), FIN_YEAR VARCHAR(10), CANCELLED BIT,
						   SUBTOTAL NUMERIC(10,2), DISCOUNT_AMOUNT NUMERIC(10,2),
						   TAX_AMOUNT NUMERIC(10,2), FREIGHT NUMERIC(10,2), OTHER_CHARGES NUMERIC(10,2),
						   ROUND_OFF NUMERIC(10,2), TOTAL_AMOUNT NUMERIC(10,2) , FORM_ID CHAR(7), 
						   DISCOUNT_PERCENTAGE NUMERIC(10,2), TAX_PERCENTAGE NUMERIC(10,2),
						   EXCISE_DUTY_AMOUNT NUMERIC(10,2),EXCISE_EDU_CESS_AMOUNT NUMERIC(10,2),EXCISE_HEDU_CESS_AMOUNT NUMERIC(10,2) )
						   
   DECLARE @CRMDTABLE TABLE ( RM_ID VARCHAR(22), PRODUCT_UID VARCHAR(50), PURCHASE_PRICE NUMERIC(10,2),
   QUANTITY NUMERIC(10,3), AMOUNT NUMERIC(14,2),ITEM_FORM_ID CHAR(7),ITEM_TAX_AMOUNT NUMERIC(10,2)  )
   
	IF @NUPDATEMODE<>1	 
	BEGIN
		EXEC VALIDATEXN_PRD_PRT_BEFORE_EDIT @CXNID,0,@CCMD OUTPUT,@CCMDERRORMSG OUTPUT
		
		IF ISNULL(@CCMD,'')<>''
		BEGIN
			SET @CERRORMSG=@CCMD
			
			IF ISNULL(@CCMDERRORMSG,'')<>''
				EXEC SP_EXECUTESQL @CCMDERRORMSG
			
			GOTO END_PROC	
		END
	END


	INSERT @CRMMTABLE
	SELECT	RM_ID, RM_NO, RM_DT, AC_CODE, FIN_YEAR, CANCELLED, SUBTOTAL, DISCOUNT_AMOUNT, TAX_AMOUNT,
			FREIGHT, OTHER_CHARGES, ROUND_OFF, TOTAL_AMOUNT, FORM_ID, DISCOUNT_PERCENTAGE, TAX_PERCENTAGE,
			EXCISE_DUTY_AMOUNT,EXCISE_EDU_CESS_AMOUNT,EXCISE_HEDU_CESS_AMOUNT
	FROM PRD_RMM01106 WHERE RM_ID = @CXNID

	INSERT @CRMDTABLE 
	SELECT	RM_ID, PRODUCT_UID, PURCHASE_PRICE, QUANTITY ,(QUANTITY*PURCHASE_PRICE) AS AMOUNT,
	ITEM_FORM_ID,ITEM_TAX_AMOUNT  FROM PRD_RMD01106 WHERE RM_ID = @CXNID 
	
	
		
	SET @CERRORMSG=''
	
	-- IF CANCELLED MEMO THEN RETURN	
	IF EXISTS(SELECT A.AC_CODE FROM @CRMMTABLE A WHERE  CANCELLED=1)
		RETURN

	-- CHECKING IF PARTY IS BLANK OF INACTIVE
	IF EXISTS(SELECT A.AC_CODE FROM @CRMMTABLE A JOIN LMV01106  B ON A.AC_CODE=B.AC_CODE
			  WHERE   (B.AC_NAME='' OR B.INACTIVE=1) )
	BEGIN
		SET @CERRORMSG='BLANK OR INACTIVE PARTY NAME NOT ALLOWED....PLEASE CHECK'
		RETURN
	END
	
	
	-- CHECKING FOR BLANK FORM
	IF EXISTS(SELECT RM_ID FROM @CRMDTABLE A JOIN FORM B ON A.ITEM_FORM_ID=B.FORM_ID
			  WHERE(A.ITEM_FORM_ID ='0000000' OR A.ITEM_FORM_ID='' OR FORM_NAME=''))
	BEGIN
		SET @CERRORMSG='BLANK FORM NAME NOT ALLOWED....PLEASE CHECK'
		RETURN
	END
	
	
	-- CHECKING IF NOT RECORDS TO SAVE IN DETAIL
	IF NOT EXISTS(SELECT TOP 1 RM_ID FROM @CRMDTABLE )
  	BEGIN
		SET @CERRORMSG='BLANK MEMO DETAILS CANNOT BE SAVED.....PLEASE CHECK'
		RETURN
	END 	
	
	IF EXISTS (SELECT RM_ID FROM @CRMMTABLE WHERE FIN_YEAR<>'01'+DBO.FN_GETFINYEAR(RM_DT))
  	BEGIN
		SET @CERRORMSG='MISMATCH BETWEEN RECEIPT DATE & FIN YEAR .....PLEASE CHECK'
		RETURN
	END 	
		
	IF EXISTS (SELECT RM_ID FROM @CRMMTABLE WHERE FIN_YEAR<>SUBSTRING(RM_ID ,3,5))
		BEGIN
		SET @CERRORMSG='MISMATCH BETWEEN MEMO ID & FIN YEAR ..... PLEASE CHECK'
		RETURN
	END 

	
	-- BILL LEVEL SUBTOAL VALIDATION
	
	SELECT @NSUMMMTOTAL=SUM(PURCHASE_PRICE*QUANTITY) FROM @CRMDTABLE
	SELECT @NSUBTOTAL =SUBTOTAL FROM @CRMMTABLE 
    
    PRINT STR(ISNULL(@NSUMPIDNET,0))+STR(ISNULL(@NSUBTOTAL,0))
	IF ABS(ISNULL(@NSUMMMTOTAL,0)-ISNULL(@NSUBTOTAL,0))>1
	BEGIN
		SET @CERRORMSG='MISMATCH BETWEEN ITEM WISE TOTAL ('+LTRIM(RTRIM(STR(ISNULL(@NSUMMMTOTAL,0),10,2)))+') &
					    MEMO LEVEL SUBTOTAL ('+LTRIM(RTRIM(STR(ISNULL(@NSUBTOTAL,0),10,2)))+')..... CANNOT SAVE '
		RETURN
	END



	-- CHECKING DISCOUNT AMOUNT AND DISCOUNT PERCENTAGE
	SELECT @NCALCDISCOUNTAMT = ROUND(SUBTOTAL*DISCOUNT_PERCENTAGE/100,0) FROM @CRMMTABLE
	
	
	SELECT @NDISCOUNTAMT = DISCOUNT_AMOUNT FROM @CRMMTABLE
	
	
	
	IF 	ABS(@NDISCOUNTAMT-ISNULL(@NCALCDISCOUNTAMT,0))>1
	BEGIN
		SET @CERRORMSG='MISMATCH BETWEEN EXPECTED DISCOUNT AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NCALCDISCOUNTAMT,0),10,2)))+') &
						UPDATED DISCOUNT AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NDISCOUNTAMT,0),10,2)))+')..... CANNOT SAVE '

		RETURN
	END
		
	--CHECKING TAX PERCENTAGE AND TAX AMOUNT
	IF EXISTS (SELECT TOP 1 RM_ID FROM @CRMMTABLE WHERE SUBTOTAL<>0)
	BEGIN
		SELECT TOP 1 @CPRODUCTCODE=PRODUCT_UID,@NTAXVAL=A.ITEM_TAX_AMOUNT,
		@NCALCTAXVAL=(((A.PURCHASE_PRICE*A.QUANTITY)-(A.PURCHASE_PRICE*A.QUANTITY*B.DISCOUNT_PERCENTAGE/100)+
			   ((B.EXCISE_DUTY_AMOUNT/B.SUBTOTAL)*(A.PURCHASE_PRICE*A.QUANTITY))+
			   ((B.EXCISE_EDU_CESS_AMOUNT/B.SUBTOTAL)*(A.PURCHASE_PRICE*A.QUANTITY))+
			   ((B.EXCISE_HEDU_CESS_AMOUNT/B.SUBTOTAL)*(A.PURCHASE_PRICE*A.QUANTITY)))*A.ITEM_TAX_PERCENTAGE/100)
		FROM PRD_RMD01106 A JOIN PRD_RMM01106 B ON A.RM_ID=B.RM_ID
		WHERE A.RM_ID=@CXNID AND ABS(CONVERT(NUMERIC(10,2),(((A.PURCHASE_PRICE*A.QUANTITY)-(A.PURCHASE_PRICE*A.QUANTITY*B.DISCOUNT_PERCENTAGE/100)+
			   ((B.EXCISE_DUTY_AMOUNT/B.SUBTOTAL)*(A.PURCHASE_PRICE*A.QUANTITY))+
			   ((B.EXCISE_EDU_CESS_AMOUNT/B.SUBTOTAL)*(A.PURCHASE_PRICE*A.QUANTITY))+
			   ((B.EXCISE_HEDU_CESS_AMOUNT/B.SUBTOTAL)*(A.PURCHASE_PRICE*A.QUANTITY)))*A.ITEM_TAX_PERCENTAGE/100))-
			   A.ITEM_TAX_AMOUNT)>.1
		

		IF ISNULL(@CPRODUCTCODE,'')<>''
		BEGIN
			SET @CERRORMSG='MISMATCH BETWEEN EXPECTED TAX AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NCALCTAXVAL,0),10,2)))+') &
							EXISTING TAX AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NTAXVAL,0),10,2)))+') FOR ITEM CODE :'+@CPRODUCTCODE+'..... CANNOT SAVE '

			RETURN
		END
	END
	
	-- CHECKING  MISMATCH BETWEEN FOR NET AMOUNT
	
	SELECT @NTAXVAL=SUM(ITEM_TAX_AMOUNT) FROM @CRMDTABLE
	
	SELECT @NCALCTOTALAMOUNT = (SUBTOTAL + ISNULL(@NTAXVAL,0) + ROUND_OFF + OTHER_CHARGES + FREIGHT+
							    +EXCISE_DUTY_AMOUNT+EXCISE_EDU_CESS_AMOUNT+EXCISE_HEDU_CESS_AMOUNT) - DISCOUNT_AMOUNT
	FROM @CRMMTABLE 

	SELECT @NMSTTOTALAMOUNT = TOTAL_AMOUNT FROM @CRMMTABLE 
	
	IF ABS(ISNULL(@NMSTTOTALAMOUNT,0)-ISNULL(@NCALCTOTALAMOUNT,0))>0
	BEGIN
		SET @CERRORMSG = ' MISMATCH BETWEEN EXPECTED NET AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NCALCTOTALAMOUNT,0),14,4)))+')
					 & EXISTING BILL LEVEL NET AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NMSTTOTALAMOUNT,0),14,4))) +')..... CANNOT SAVE '
		RETURN
	END	
	
	END_PROC:	
END	
--******************************************** END OF PROCEDURE VALIDATEXN_PRD_PRT
