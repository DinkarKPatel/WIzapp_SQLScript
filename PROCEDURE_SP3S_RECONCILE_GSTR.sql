--exec SP3S_RECONCILE_GSTR '2020-10-01','2020-10-30','',0,'',0

create PROCEDURE SP3S_RECONCILE_GSTR
(
@DFM DATETIME ='',
@DTO DATETIME ='',
@CGSTN_NO VARCHAR(50) ='',
@CLOC_TYPE INT =0,
@CDEPT_ID VARCHAR(5)='',
@ndiff bit=1
)
AS
BEGIN


	EXEC SP3S_B2C_GSTR @DFM,@DTO,@CGSTN_NO,@CLOC_TYPE,@CDEPT_ID,1

	IF OBJECT_ID ('TEMPDB..#TMPB2CS','U') IS NOT NULL 
	   DROP TABLE #TMPB2CS
	SELECT 'B2CS'  AS RTYPE,XN_TYPE,MEMO_ID ,INVOICE_NO ,INVOICE_DT ,
		   SUM(INVOICE_VALUE) AS GSTR1_INVOICE_VALUE ,
		   SUM(TAXABLE_VALUE ) AS GSTR1_TAXABLE_VALUE,
		   SUM(CGST_AMOUNT ) AS GSTR1_CGST_AMOUNT,
		   SUM(SGST_AMOUNT ) AS GSTR1_SGST_AMOUNT,
		   SUM(IGST_AMOUNT ) AS GSTR1_IGST_AMOUNT
	INTO #TMPB2CS
	FROM ##B2C A
	JOIN LOCATION L (NOLOCK) ON L.DEPT_ID =A.location_code
	WHERE (LEFT(PLACE_OF_SUPPLY,2)=L.GST_STATE_CODE   OR INVOICE_VALUE<250000)
	GROUP BY XN_TYPE,MEMO_ID ,INVOICE_NO ,INVOICE_DT
	ORDER BY XN_TYPE,MEMO_ID,INVOICE_DT,INVOICE_NO
	


	DECLARE @CEXPR NVARCHAR(MAX),@DFMDATE VARCHAR(20),@DTODATE VARCHAR(20)

		declare @nsr int ,@nspid int
			set @nspid=@@SPID

	IF OBJECT_ID ('SP3S_XTREME_REPORTING_EXP_GSTREPS','P') IS NOT NULL --AND 1=2
	BEGIN

			set @DFMDATE=''''+CONVERT(VARCHAR(10),@DFM,121)+''''
			set @DTODATE=''''+CONVERT(VARCHAR(10),@DTO,121)+''''


		
			EXEC SP3S_XTREME_REPORTING_EXP_GSTREPS

			SELECT  MASTER_COL, REPLACE(REPLACE(REPLACE(BASE_EXPR ,'[FRMODDT]',@DFMDATE),'[TODT]',@DTODATE),'[CWHERE]','  1=1 ') AS EXPR
			INTO #TMPREPS
			FROM XTREME_REPORTING_EXP_GSTREPS

		
			delete from XTREME_GSTREPS where sp_id =@nspid

			WHILE EXISTS (SELECT TOP 1 'U' FROM #TMPREPS)
			BEGIN
				set @CEXPR=''
				 SELECT @NSR=MASTER_COL FROM #TMPREPS
				 ORDER BY MASTER_COL

				SET @CEXPR=NULL


				SELECT  @CEXPR=ISNULL(@CEXPR+' ','')+EXPR   FROM #TMPREPS where MASTER_COL=@NSR
				PRINT @CEXPR
				INSERT into  XTREME_GSTREPS (SENDER_NAME,SENDER_GSTN_ID,SENDER_STATE_CODE,SENDER_STATE_NAME,RECEIVER_NAME,RECEIVER_GSTN_ID,RECEIVER_STATE_CODE,SUB_TRANSACTION_TYPE, TRANSACTION_TYPE, SENDER_INVOICE_NO, SENDER_INVOICE_DATE,HSN_CODE,GST_PERCENTAGE,     LOCATION_ID,LOCATION_NAME,REFERENCE_NUMBER,REFERENCE_DATE,     OH_TYPE,PRODUCT_CODE,INVOICE_VALUE,VAT_PERCENTAGE,     TRANSACTION_MODE,A.LOC_GST_NO,TRANSACTION_GROUP,ORDER_NO,     ONLINE_BILL_REF_NO,A.BIN_ID,PARTY_REGISTRATION_STATUS,     MRR_NO,MRR_DT,    
				 QUANTITY_OW,     QUANTITY_IW,    TAXABLE_VALUE_OW,      TAXABLE_VALUE_IW,    CGST_AMOUNT_OW,      CGST_AMOUNT_IW,    SGST_AMOUNT_OW,      SGST_AMOUNT_IW,  IGST_AMOUNT_OW,   
				   IGST_AMOUNT_IW,  UTGST_AMOUNT_OW,     UTGST_AMOUNT_IW,  TRANSACTION_VALUE_INCLUDING_GST_OW, TRANSACTION_VALUE_INCLUDING_GST_IW, TAX_ROUND_OFF_OW,   
				  TAX_ROUND_OFF_IW,  VAT_AMOUNT_OW,   VAT_AMOUNT_IW,      A.BIN_NAME ,      VENDOR_BILL_DATE,   XN_ITEM_TYPE, DISC_PCT,          
				   DISC_AMT_OW, DISC_AMT_IW, PROFIT_PERCENTAGE,  PROFIT_AMOUNT_OW,  PROFIT_AMOUNT_IW,   
				   CESS_AMOUNT_OW,    CESS_AMOUNT_IW,  LOCATION_ALIAS ,  SP_ID   )                

				EXEC SP_EXECUTESQL @CEXPR
				

				DELETE FROM #TMPREPS WHERE MASTER_COL=@NSR

			END


	END
	
	

	IF OBJECT_ID ('TEMPDB..#TMPB2CSSUMMARY','U') IS NOT NULL 
	   DROP TABLE #TMPB2CSSUMMARY

	SELECT A.RTYPE, 
	      CASE WHEN ISNULL(A.XN_TYPE,'')='' THEN B.XN_TYPE ELSE A.XN_TYPE END AS XN_TYPE,
	      A.MEMO_ID ,A.INVOICE_NO,
	      A.INVOICE_DT,A.GSTR1_TAXABLE_VALUE,A.GSTR1_CGST_AMOUNT,GSTR1_INVOICE_VALUE,
		  A.GSTR1_SGST_AMOUNT,A.GSTR1_IGST_AMOUNT,
		  B.SENDER_INVOICE_NO,B.SENDER_INVOICE_DATE,B.TAXABLE_VALUE,b.TAXABLE_VALUE as XN_TAXABLE_VALUE
		 into #TMPB2CSSUMMARY
	FROM #TMPB2CS A
	FULL OUTER JOIN
	(
	   
	   SELECT CASE WHEN TRANSACTION_TYPE in('RETAIL SALE INV','RETAIL SALE' ) THEN 'SLS'
	               WHEN TRANSACTION_TYPE='PARTY INVOICE INV' THEN 'WSL'
				   WHEN TRANSACTION_TYPE='PARTY CREDIT NOTE INV' THEN 'WSR'
				   ELSE  '' END AS XN_TYPE,
	         SENDER_INVOICE_NO,SENDER_INVOICE_DATE ,
	   SUM(ISNULL(TAXABLE_VALUE_OW,0)+ISNULL(TAXABLE_VALUE_IW,0)) AS TAXABLE_VALUE
	   FROM XTREME_GSTREPS a
	  WHERE  ( A.TRANSACTION_TYPE IN ('PARTY INVOICE INV' , 'RETAIL SALE' , 'RETAIL SALE INV' , 'PARTY CREDIT NOTE INV' )) 
	  AND (  @CGSTN_NO='' OR  A.LOC_GST_NO =@CGSTN_NO) AND (  A.PARTY_REGISTRATION_STATUS IN ('UNREGISTERED' ))   
	   and  SENDER_INVOICE_DATE Between @DFM and  @DTO
	   and a.sp_id= @nspid
	   GROUP BY CASE WHEN TRANSACTION_TYPE in('RETAIL SALE INV','RETAIL SALE' ) THEN 'SLS'
	   WHEN TRANSACTION_TYPE='PARTY INVOICE INV' THEN 'WSL'
	   WHEN TRANSACTION_TYPE='PARTY CREDIT NOTE INV' THEN 'WSR'
	    ELSE  '' END, SENDER_INVOICE_NO,SENDER_INVOICE_DATE

	) B ON A.XN_TYPE=B.XN_TYPE AND A.INVOICE_NO=B.SENDER_INVOICE_NO AND A.INVOICE_DT=B.SENDER_INVOICE_DATE
	



	SELECT * FROM #TMPB2CSSUMMARY A
	WHERE (@ndiff=0 or  ISNULL(A.GSTR1_TAXABLE_VALUE,0)<>ISNULL(A.XN_TAXABLE_VALUE,0))--ISNULL(A.GSTR1_INVOICE_VALUE,0)<>ISNULL(A.XN_INVOICE_VALUE,0) OR
	order by xn_type,SENDER_INVOICE_DATE,SENDER_INVOICE_NO 

	select xn_type,
	  SUM(GSTR1_INVOICE_VALUE) AS GSTR1_INVOICE_VALUE ,
		   SUM(GSTR1_TAXABLE_VALUE ) AS GSTR1_TAXABLE_VALUE,
		   SUM(GSTR1_CGST_AMOUNT ) AS GSTR1_CGST_AMOUNT,
		   SUM(GSTR1_SGST_AMOUNT ) AS GSTR1_SGST_AMOUNT,
		   SUM(GSTR1_IGST_AMOUNT ) AS GSTR1_IGST_AMOUNT,
		  -- sum(XN_INVOICE_VALUE) AS XN_INVOICE_VALUE,
		   sum(XN_TAXABLE_VALUE) AS XN_TAXABLE_VALUE,
		   --sum(XN_CGST_AMOUNT) AS XN_CGST_AMOUNT,
		   --sum(XN_SGST_AMOUNT) AS XN_SGST_AMOUNT,
		   --sum(XN_IGST_AMOUNT) AS XN_IGST_AMOUNT,
		   count(*) as noofinvoices
	 FROM #TMPB2CSSUMMARY A
	WHERE (@ndiff=0 or  ISNULL(A.GSTR1_TAXABLE_VALUE,0)<>ISNULL(A.XN_TAXABLE_VALUE,0))--ISNULL(A.GSTR1_INVOICE_VALUE,0)<>ISNULL(A.XN_INVOICE_VALUE,0) OR
	group by xn_type
END