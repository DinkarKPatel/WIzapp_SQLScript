create PROCEDURE SP_DSR_PENDING_APPROVAL
( @CUSTOMER_CODE VARCHAR(20),
  @MEMO_DATE DATETIME,
  @BSHOW BIT,
  @LOC_ID VARCHAR(10)='',
  @BCALLEDFROMAPI BIT=0,
  @NAGEING INT =0,
  @BPENSHOW BIT=0 ,
  @BIN_ID  VARCHAR(10)=''
)
--WITH ENCRYPTION
AS
BEGIN
--(dinkar) Replace  left(memoid,2) to Location_code 
	BEGIN TRY
		DECLARE @CSTEP VARCHAR(50),@CERRMSG VARCHAR(MAX),@CCUSTOMER_NAME VARCHAR(100),@CMOBILENO VARCHAR(15),@CFILTER VARCHAR(100),@CCMD NVARCHAR(MAX),@DATE VARCHAR(10),@CM_DT_WHERE_FILTER NVARCHAR(MAX)
		SET @CSTEP = 00
		
		DECLARE @CUTOFF_DATE DATETIME 
	  SElect @CUTOFF_DATE= ISNULL(value,'') from config where config_option='CUTOFF_DATE_FOR_PENDING_ADV_CN_CR'
	  
		
		SELECT @CCUSTOMER_NAME = CUSTOMER_FNAME+' '+CUSTOMER_LNAME,@CMOBILENO =MOBILE  FROM CUSTDYM WHERE CUSTOMER_CODE = @CUSTOMER_CODE
		
		IF ISNULL(@CMOBILENO,'')=''
			SET @CMOBILENO = ''
			
		IF OBJECT_ID('DSR_PENDING_CREDITNOTES_TEMP','U') IS NOT NULL

		DROP TABLE DSR_PENDING_CREDITNOTES_TEMP
		
		SET @CSTEP = 10	
		IF ISNULL(@CUSTOMER_CODE,'') = ''
		BEGIN
			SET @CFILTER=''
		END
		ELSE
		BEGIN
			SET @CFILTER='CUSTOMER_CODE = '''+@CUSTOMER_CODE+''' AND'
		END
		
		SET @CSTEP = 20
		IF ISNULL(@MEMO_DATE,'') = ''
		BEGIN
			SET @CERRMSG = 'CAN NOT ACCEPT A BLANK DATE.'
			GOTO END_PROC
		END
		SET @CSTEP = 30
		IF OBJECT_ID('TEMPDB..#PENDING_APPROVAL_1','U') IS NOT NULL
			DROP TABLE #PENDING_APPROVAL_1
		CREATE TABLE #PENDING_APPROVAL_1 (DEPT_ID VARCHAR(4), MEMO_ID VARCHAR(100),MEMO_NO VARCHAR(100),CUSTOMER_CODE VARCHAR(100),MEMO_DT DATETIME,ROW_ID VARCHAR(100),QUANTITY NUMERIC(14,2),REMARKS VARCHAR(MAX))
		
		SET @CSTEP = 35
		SET @DATE = CONVERT(VARCHAR,@MEMO_DATE,120)
		
		
		
	 IF ISNULL(@CUTOFF_DATE,'')=''
	  BEGIN
			SET @CM_DT_WHERE_FILTER='MEMO_DT <='''+@DATE+''''
			
	  END
	  IF ISNULL(@CUTOFF_DATE,'')<>''
	  BEGIN
			SET @CM_DT_WHERE_FILTER='MEMO_DT BETWEEN '''+CONVERT(VARCHAR,@CUTOFF_DATE,120)+''' AND  '''+@DATE+''''
	  END
		
		SET @CCMD = N'SELECT A.LOCATION_CODE AS Dept_id, CAST(A.MEMO_ID AS VARCHAR(100)) AS MEMO_ID ,CAST(MEMO_NO AS VARCHAR(100)) AS MEMO_NO 
					 ,CUSTOMER_CODE,CAST(MEMO_DT AS DATETIME) AS MEMO_DT,CAST(B.ROW_ID AS VARCHAR(100)) ROW_ID
					 ,CAST(B.QUANTITY AS NUMERIC(14,2)) QUANTITY,REMARKS   
					 FROM APM01106  A (NOLOCK) JOIN APD01106 B (NOLOCK) ON A.MEMO_ID = B.MEMO_ID
					 WHERE '+@CFILTER+' 
					'+@CM_DT_WHERE_FILTER+'
					 AND CANCELLED = 0 
					 AND ('''+@LOC_ID+'''='''' OR A.LOCATION_CODE='''+@LOC_ID+''')
					 union all
					 SELECT A.LOCATION_CODE AS Dept_id, CAST(A.MEMO_ID AS VARCHAR(100)) AS MEMO_ID ,CAST(MEMO_NO AS VARCHAR(100)) AS MEMO_NO 
					 ,CUSTOMER_CODE,CAST(MEMO_DT AS DATETIME) AS MEMO_DT,CAST(B.ROW_ID AS VARCHAR(100)) ROW_ID
					 ,CAST(B.QUANTITY AS NUMERIC(14,2)) QUANTITY,REMARKS   
					 FROM APM01106_ops  A (NOLOCK) JOIN APD01106_ops B (NOLOCK) ON A.MEMO_ID = B.MEMO_ID
					 WHERE '+@CFILTER+' 
					'+@CM_DT_WHERE_FILTER+'
					 AND CANCELLED = 0 
					 AND ('''+@LOC_ID+'''='''' OR A.LOCATION_CODE='''+@LOC_ID+''')'
		PRINT @CCMD
		INSERT INTO #PENDING_APPROVAL_1
		EXEC SP_EXECUTESQL @CCMD
		
		
		
		SET @CSTEP = 40
		IF OBJECT_ID('TEMPDB..#PENDING_APPROVAL_2','U') IS NOT NULL
			DROP TABLE #PENDING_APPROVAL_2
		
		SELECT A.APD_ROW_ID,SUM(A.QUANTITY) AS QUANTITY 
		INTO #PENDING_APPROVAL_2 
		FROM APPROVAL_RETURN_DET A (NOLOCK)
		JOIN APPROVAL_RETURN_MST B (NOLOCK) ON A.MEMO_ID=B.MEMO_ID
		WHERE B.CANCELLED=0 AND (@LOC_ID='' OR B.location_Code =@LOC_ID)
		GROUP BY A.APD_ROW_ID
		
		SET @CSTEP = 45
		
		IF OBJECT_ID('TEMPDB..#PENDING_AMOUNT1','U') IS NOT NULL
			DROP TABLE #PENDING_AMOUNT1
			
		SELECT A.MEMO_ID,SUM((A.QUANTITY - ISNULL(B.QUANTITY,0))*MRP) AS PENDING_AMOUNT 
		INTO #PENDING_AMOUNT1  
		FROM APD01106 A (NOLOCK)
		JOIN APM01106 APM (NOLOCK) ON A.MEMO_ID=APM.MEMO_ID
		LEFT OUTER JOIN 
		(
			SELECT B.APD_ROW_ID,SUM(B.QUANTITY) AS QUANTITY
			FROM APPROVAL_RETURN_MST A (NOLOCK)
			JOIN APPROVAL_RETURN_DET B (NOLOCK) ON A.MEMO_ID=B.MEMO_ID
			WHERE A.CANCELLED=0 AND (@LOC_ID='' OR A.location_Code =@LOC_ID)
			AND (@CUSTOMER_CODE='' OR A.CUSTOMER_CODE=@CUSTOMER_CODE)
			GROUP BY B.APD_ROW_ID
		)B ON A.ROW_ID = B.APD_ROW_ID
		WHERE A.QUANTITY-ISNULL(B.QUANTITY,0) > 0
		AND (@LOC_ID='' OR APM.LOCATION_CODE=@LOC_ID)
		AND (@CUSTOMER_CODE='' OR APM.CUSTOMER_CODE=@CUSTOMER_CODE)
		GROUP BY A.MEMO_ID
		union all
		SELECT A.MEMO_ID,SUM((A.QUANTITY - ISNULL(B.QUANTITY,0))*MRP) AS PENDING_AMOUNT 
		FROM APD01106_ops A (NOLOCK)
		JOIN APM01106_ops APM (NOLOCK) ON A.MEMO_ID=APM.MEMO_ID
		LEFT OUTER JOIN 
		(
			SELECT B.APD_ROW_ID,SUM(B.QUANTITY) AS QUANTITY
			FROM APPROVAL_RETURN_MST A (NOLOCK)
			JOIN APPROVAL_RETURN_DET B (NOLOCK) ON A.MEMO_ID=B.MEMO_ID
			WHERE A.CANCELLED=0 AND (@LOC_ID='' OR A.location_Code =@LOC_ID)
			AND (@CUSTOMER_CODE='' OR A.CUSTOMER_CODE=@CUSTOMER_CODE)
			GROUP BY B.APD_ROW_ID
		)B ON A.ROW_ID = B.APD_ROW_ID
		WHERE A.QUANTITY-ISNULL(B.QUANTITY,0) > 0
		AND (@LOC_ID='' OR APM.DEPT_ID   =@LOC_ID)
		AND (@CUSTOMER_CODE='' OR APM.CUSTOMER_CODE=@CUSTOMER_CODE)
		GROUP BY A.MEMO_ID
		
		SET @CSTEP = 50
		IF OBJECT_ID('TEMPDB..#PENDING_APPROVAL_3','U') IS NOT NULL
			DROP TABLE #PENDING_APPROVAL_3
		
		SET @CSTEP = 60
		SELECT A.MEMO_ID,A.MEMO_NO,C.CUSTOMER_FNAME+' '+C.CUSTOMER_LNAME AS CUSTOMER_NAME,C.USER_CUSTOMER_CODE
			  ,A.MEMO_DT,A.ROW_ID,ISNULL(A.QUANTITY,0) AS ISS_QUANTITY,B.APD_ROW_ID,B.QUANTITY AS RET_QUANTITY
			  ,a.REMARKS  ,a.DEPT_ID 
		INTO #PENDING_APPROVAL_3 
		FROM #PENDING_APPROVAL_1 A 
		LEFT OUTER JOIN #PENDING_APPROVAL_2 B ON A.ROW_ID = B.APD_ROW_ID 
		LEFT OUTER JOIN CUSTDYM C(NOLOCK) ON A.CUSTOMER_CODE = C.CUSTOMER_CODE
		
		--SELECT * FROM #PENDING_APPROVAL_3
		
		SET @CSTEP = 65
		IF OBJECT_ID('TEMPDB..#PENDING_AMOUNT2','U') IS NOT NULL
			DROP TABLE #PENDING_AMOUNT2
	
		SELECT A.MEMO_ID,A.CUSTOMER_NAME,A.USER_CUSTOMER_CODE,(B.PENDING_AMOUNT) AS PENDING_AMOUNT,REMARKS  
		INTO #PENDING_AMOUNT2 
		FROM #PENDING_APPROVAL_3 A 
		JOIN #PENDING_AMOUNT1 B ON A.MEMO_ID = B.MEMO_ID;
		
		WITH CTE(MEMO_ID,CUSTOMER_NAME,USER_CUSTOMER_CODE,PENDING_AMOUNT,ROW_ID)
		AS
		(
			SELECT MEMO_ID,CUSTOMER_NAME,USER_CUSTOMER_CODE,PENDING_AMOUNT,ROW_NUMBER()OVER( PARTITION BY MEMO_ID ORDER BY MEMO_ID) AS ROW_ID 
			FROM #PENDING_AMOUNT2 	
		)
		DELETE FROM CTE WHERE ROW_ID > 1
		
IF @BCALLEDFROMAPI=0
   BEGIN
		SELECT A.DEPT_ID  AS DEPT_ID,MEMO_NO,MEMO_DT,A.CUSTOMER_NAME,A.USER_CUSTOMER_CODE AS CUSTOMER_ID,REMARKS,CC.PENDING_AMOUNT 
		,SUM(ISS_QUANTITY) AS ISS_QUANTITY,ISNULL (SUM(RET_QUANTITY),0) AS RET_QUANTITY
		,SUM(ISS_QUANTITY)-ISNULL (SUM(RET_QUANTITY),0) AS PEN_QUANTITY
		,DATEDIFF(DD,MEMO_DT,@MEMO_DATE) AS AGEING
		FROM #PENDING_APPROVAL_3 A 
		LEFT OUTER JOIN 
		(
			SELECT CUSTOMER_NAME,USER_CUSTOMER_CODE,SUM(PENDING_AMOUNT)AS PENDING_AMOUNT  
			FROM #PENDING_AMOUNT2 
			GROUP BY CUSTOMER_NAME,USER_CUSTOMER_CODE 
		) CC
		ON CC.CUSTOMER_NAME = A.CUSTOMER_NAME AND CC.USER_CUSTOMER_CODE = A.USER_CUSTOMER_CODE
		GROUP BY MEMO_NO,MEMO_DT,A.CUSTOMER_NAME,a.DEPT_ID ,A.USER_CUSTOMER_CODE,CC.PENDING_AMOUNT,A.REMARKS
		--HAVING SUM(ISS_QUANTITY)-ISNULL(SUM(RET_QUANTITY),0) > 0 AND @BSHOW = 1
        HAVING (@BPENSHOW=1 AND  @BSHOW=1 OR ( @BSHOW=1 AND SUM(ISS_QUANTITY)-ISNULL(SUM(RET_QUANTITY),0)>0))
		ORDER BY  A.USER_CUSTOMER_CODE,a.DEPT_ID  ,MEMO_DT,MEMO_NO
	END
ELSE
BEGIN
		
		IF OBJECT_ID ('TEMPDB..#PENDING_APPROVAL_FINAL','U') IS NOT NULL
		   DROP TABLE #PENDING_APPROVAL_FINAL
		
		SELECT MEMO_NO,A.CUSTOMER_NAME, a.DEPT_ID  AS DEPT_ID,MEMO_DT,
		ISNULL(SUM(ISS_QUANTITY),0) AS ISS_QUANTITY,
		ISNULL (SUM(RET_QUANTITY),0) AS RET_QUANTITY,
		 CC.PENDING_AMOUNT 
		,SUM(ISS_QUANTITY)-ISNULL (SUM(RET_QUANTITY),0) AS PEN_QUANTITY
		,DATEDIFF(DD,MEMO_DT,@MEMO_DATE) AS AGEING
		INTO #PENDING_APPROVAL_FINAL
		FROM #PENDING_APPROVAL_3 A 
		LEFT OUTER JOIN 
		(
			SELECT CUSTOMER_NAME,USER_CUSTOMER_CODE,SUM(PENDING_AMOUNT)AS PENDING_AMOUNT  
			FROM #PENDING_AMOUNT2 
			GROUP BY CUSTOMER_NAME,USER_CUSTOMER_CODE 
		) CC
		ON CC.CUSTOMER_NAME = A.CUSTOMER_NAME AND CC.USER_CUSTOMER_CODE = A.USER_CUSTOMER_CODE
		WHERE DATEDIFF(DD,MEMO_DT,@MEMO_DATE)>=@NAGEING 
		GROUP BY MEMO_NO,MEMO_DT,A.CUSTOMER_NAME,a.DEPT_ID ,A.USER_CUSTOMER_CODE,CC.PENDING_AMOUNT,A.REMARKS
		--HAVING SUM(ISS_QUANTITY)-ISNULL(SUM(RET_QUANTITY),0) > 0
		HAVING(@BPENSHOW=1  OR (  SUM(ISS_QUANTITY)-ISNULL(SUM(RET_QUANTITY),0)>0))
 
		
		SELECT  * 
		FROM #PENDING_APPROVAL_FINAL
		ORDER BY AGEING DESC
		
		
	END
	END TRY
	BEGIN CATCH
		SET @CERRMSG = 'P:SP_DSR_PENDING_APPROVAL STEP: '+@CSTEP+ERROR_MESSAGE()
	END CATCH
	END_PROC:
	IF ISNULL(@CERRMSG,'') <> ''
		SELECT @CERRMSG AS ERRMSG
END
