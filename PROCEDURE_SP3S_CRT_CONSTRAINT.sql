CREATE PROCEDURE SP3S_CRT_CONSTRAINT
(
 @NAME VARCHAR(1000)
)
AS
BEGIN 
              DECLARE @DEFINITION TABLE(DEFINITIONID SMALLINT IDENTITY(1,1)
                                        ,FIELDVALUE VARCHAR(MAX),CONSTRAINT_NAME VARCHAR(2000))
              --DECLARE @MAINDEFINITION TABLE (FIELDVALUE VARCHAR(MAX))
                                        
            DECLARE @SQL NVARCHAR(MAX),@SCRIPT VARCHAR(MAX),@Q  VARCHAR(MAX)  
            PRINT' 1. CREATING PRIMARY'
            SET @SCRIPT=''

           SET @SQL=N' 
            SELECT I.NAME,
           '' ALTER TABLE '' +T.NAME+ '' ADD CONSTRAINT  ''+''  ['' + REPLACE(I.NAME COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,'''','''') + ''] PRIMARY KEY  ('' 
            +   REVERSE(SUBSTRING(REVERSE((   SELECT NAME + '',''   
            FROM  SYS.INDEX_COLUMNS SC  
            JOIN SYS.COLUMNS C ON SC.OBJECT_ID = C.OBJECT_ID AND SC.COLUMN_ID = C.COLUMN_ID   
            WHERE   SC.OBJECT_ID = I.OBJECT_ID AND  SC.INDEX_ID = I.INDEX_ID   
                                         AND IS_INCLUDED_COLUMN=0
            ORDER BY KEY_ORDINAL ASC   FOR XML PATH('''')    )), 2, 8000)) + '')''+
            ISNULL( '' INCLUDE (''+REVERSE(SUBSTRING(REVERSE((   SELECT NAME + '',''   
            FROM  SYS.INDEX_COLUMNS SC  
            JOIN SYS.COLUMNS C ON SC.OBJECT_ID = C.OBJECT_ID AND SC.COLUMN_ID = C.COLUMN_ID   
            WHERE   SC.OBJECT_ID = I.OBJECT_ID AND  SC.INDEX_ID = I.INDEX_ID   
                                         AND IS_INCLUDED_COLUMN=1
            ORDER BY KEY_ORDINAL ASC   FOR XML PATH('''')    )), 2, 8000))+'')'' ,'''')+''''    
            FROM SYS.INDEXES I JOIN SYS.TABLES T ON I.OBJECT_ID=T.OBJECT_ID
                               JOIN SYS.SCHEMAS S ON T.SCHEMA_ID=S.SCHEMA_ID   
            AND IS_UNIQUE_CONSTRAINT = 0   AND IS_PRIMARY_KEY = 1 
            WHERE I.NAME IS NOT NULL 
            AND T.NAME NOT LIKE ''TMP%''
			AND T.NAME NOT LIKE ''TEMP%''
			AND  t.NAME NOT LIKE ''KEYS_%''
            '
            
		    PRINT @SQL
		    INSERT INTO @DEFINITION(CONSTRAINT_NAME,FIELDVALUE)
            EXEC SP_EXECUTESQL @SQL
           
            --INSERT INTO @MAINDEFINITION(FIELDVALUE)   
            --SELECT FIELDVALUE FROM @DEFINITION    
            --ORDER BY DEFINITIONID ASC 

        
            --SET @Q=(SELECT REPLACE((SELECT FIELDVALUE FROM @MAINDEFINITION FOR XML PATH('')),'</FIELDVALUE>',''))
            --SET @SCRIPT=(SELECT REPLACE(@Q,'<FIELDVALUE>',''))
       
            --SET @SQL=N' USE '+@NAME+' '+@SCRIPT
            --EXEC SP_EXECUTESQL @SQL
           
           
        

         PRINT' 2. CREATING UNIQUE CONSTRAINT'
         
          SET @SQL=N' SELECT  DISTINCT I.NAME, '' ALTER TABLE  '' +T.NAME + '' WITH NOCHECK ADD CONSTRAINT ['' + REPLACE(I.NAME COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,'''','''') + ''] UNIQUE ('' 
            +   REVERSE(SUBSTRING(REVERSE((   SELECT NAME + '',''   
            FROM  SYS.INDEX_COLUMNS SC  
            JOIN SYS.COLUMNS C ON SC.OBJECT_ID = C.OBJECT_ID AND SC.COLUMN_ID = C.COLUMN_ID   
            WHERE   SC.OBJECT_ID = I.OBJECT_ID AND  SC.INDEX_ID = I.INDEX_ID   
                                         AND IS_INCLUDED_COLUMN=0
            ORDER BY KEY_ORDINAL ASC   FOR XML PATH('''')    )), 2, 8000)) + '')''+
            ISNULL( '' INCLUDE (''+REVERSE(SUBSTRING(REVERSE((   SELECT NAME + '',''   
            FROM  SYS.INDEX_COLUMNS SC  
            JOIN SYS.COLUMNS C ON SC.OBJECT_ID = C.OBJECT_ID AND SC.COLUMN_ID = C.COLUMN_ID   
            WHERE   SC.OBJECT_ID = I.OBJECT_ID AND  SC.INDEX_ID = I.INDEX_ID   
                                         AND IS_INCLUDED_COLUMN=1
            ORDER BY KEY_ORDINAL ASC   FOR XML PATH('''')    )), 2, 8000))+'')'' ,'''')+''''    
            FROM SYS.INDEXES I JOIN SYS.TABLES T ON I.OBJECT_ID=T.OBJECT_ID
                               JOIN SYS.SCHEMAS S ON T.SCHEMA_ID=S.SCHEMA_ID   
            AND IS_UNIQUE_CONSTRAINT = 1
            WHERE I.NAME IS NOT NULL 
            AND T.NAME NOT LIKE ''TMP%''
			AND T.NAME NOT LIKE ''TEMP%'''
            
            PRINT @SQL
		    INSERT INTO @DEFINITION(CONSTRAINT_NAME,FIELDVALUE)
            EXEC SP_EXECUTESQL @SQL
           
          
         
          PRINT' 3. CREATING ALL INDEXES'
          
         
           SET @SQL=N'  SELECT  DISTINCT I.NAME, '' CREATE '' + I.TYPE_DESC + '' INDEX ['' + REPLACE(I.NAME COLLATE SQL_LATIN1_GENERAL_CP1_CI_AS,'''','''') + ''] ON ''+ T.NAME + '' ('' 
            +   REVERSE(SUBSTRING(REVERSE((   SELECT NAME + CASE WHEN SC.IS_DESCENDING_KEY = 1 THEN '' DESC'' ELSE '' ASC'' END + '',''   
            FROM  SYS.INDEX_COLUMNS SC  
            JOIN SYS.COLUMNS C ON SC.OBJECT_ID = C.OBJECT_ID AND SC.COLUMN_ID = C.COLUMN_ID   
            WHERE   SC.OBJECT_ID = I.OBJECT_ID AND  SC.INDEX_ID = I.INDEX_ID   
                                         AND IS_INCLUDED_COLUMN=0
            ORDER BY KEY_ORDINAL ASC   FOR XML PATH('''')    )), 2, 8000)) + '')''+
            ISNULL( '' INCLUDE (''+REVERSE(SUBSTRING(REVERSE((   SELECT NAME + '',''   
            FROM  SYS.INDEX_COLUMNS SC  
            JOIN SYS.COLUMNS C ON SC.OBJECT_ID = C.OBJECT_ID AND SC.COLUMN_ID = C.COLUMN_ID   
            WHERE   SC.OBJECT_ID = I.OBJECT_ID AND  SC.INDEX_ID = I.INDEX_ID   
                                         AND IS_INCLUDED_COLUMN=1
            ORDER BY KEY_ORDINAL ASC   FOR XML PATH('''')    )), 2, 8000))+'')'' ,'''')+''''    
            FROM SYS.INDEXES I JOIN SYS.TABLES T ON I.OBJECT_ID=T.OBJECT_ID
                               JOIN SYS.SCHEMAS S ON T.SCHEMA_ID=S.SCHEMA_ID   
            AND CASE WHEN 1 = 1 AND IS_PRIMARY_KEY = 1 AND I.TYPE = 1 THEN 0 ELSE 1 END = 1   
            AND IS_UNIQUE_CONSTRAINT = 0   AND IS_PRIMARY_KEY = 0 
            WHERE I.NAME IS NOT NULL 
            AND T.NAME NOT LIKE ''TMP%''
			AND T.NAME NOT LIKE ''TEMP%'' '
         
            
            PRINT @SQL
		    INSERT INTO @DEFINITION(CONSTRAINT_NAME,FIELDVALUE)
            EXEC SP_EXECUTESQL @SQL
           
          
         
     PRINT' 4. CREATING ALL FOREIGN KEY'
     
 
     
     SET @SQL=N'  SELECT  DISTINCT (NAME),  ''ALTER TABLE  ''+PARENTOBJECT+'' WITH NOCHECK ADD CONSTRAINT ['' + (NAME) + ''] FOREIGN KEY ('' + PARENTCOLUMNS + '') REFERENCES ['' + REFERENCEDOBJECT + '']('' + REFERENCEDCOLUMNS + '')'' 
           FROM ( SELECT   REFERENCEDOBJECT = OBJECT_NAME(FK.REFERENCED_OBJECT_ID), PARENTOBJECT = OBJECT_NAME(PARENT_OBJECT_ID),FK.NAME
                ,   REVERSE(SUBSTRING(REVERSE((   SELECT CP.NAME + '',''   
                   FROM   SYS.FOREIGN_KEY_COLUMNS FKC   
                JOIN SYS.COLUMNS CP ON FKC.PARENT_OBJECT_ID = CP.OBJECT_ID AND FKC.PARENT_COLUMN_ID = CP.COLUMN_ID   
                WHERE FKC.CONSTRAINT_OBJECT_ID = FK.OBJECT_ID   FOR XML PATH('''')   )), 2, 8000)) PARENTCOLUMNS,   
                REVERSE(SUBSTRING(REVERSE((   SELECT CR.NAME + '',''   
                FROM   SYS.FOREIGN_KEY_COLUMNS FKC  
                JOIN SYS.COLUMNS CR ON FKC.REFERENCED_OBJECT_ID = CR.OBJECT_ID AND FKC.REFERENCED_COLUMN_ID = CR.COLUMN_ID
                WHERE FKC.CONSTRAINT_OBJECT_ID = FK.OBJECT_ID   FOR XML PATH('''')   )), 2, 8000)) REFERENCEDCOLUMNS   
                FROM SYS.FOREIGN_KEYS FK    
                INNER JOIN SYS.SCHEMAS S ON FK.SCHEMA_ID=S.SCHEMA_ID 
      ) A    '
      
            PRINT @SQL
		    INSERT INTO @DEFINITION(CONSTRAINT_NAME,FIELDVALUE)
            EXEC SP_EXECUTESQL @SQL
           
          
       
      PRINT' 5. CREATING ALL CHECK CONSTRAINT '
      
   
      SET @SQL=N'  SELECT DISTINCT OBJECT_NAME(PARENT_OBJECT_ID), '' ALTER TABLE  ''+ OBJECT_NAME(PARENT_OBJECT_ID)+ '' WITH NOCHECK ADD CONSTRAINT ['' + (C.NAME) + ''] CHECK '' + DEFINITION 
      FROM SYS.CHECK_CONSTRAINTS C JOIN SYS.SCHEMAS S ON C.SCHEMA_ID=S.SCHEMA_ID 
      WHERE OBJECT_NAME(PARENT_OBJECT_ID) NOT LIKE ''TMP%''
      AND OBJECT_NAME(PARENT_OBJECT_ID) NOT LIKE ''TEMP%'''
      
       PRINT @SQL
		INSERT INTO @DEFINITION(CONSTRAINT_NAME,FIELDVALUE)
        EXEC SP_EXECUTESQL @SQL
     
            
      PRINT' 6. CREATING ALL DEFAULT CONSTRAINT '
 
      
      SET @SQL= N' SELECT DISTINCT (DEFAULT_CONSTRAINTS.NAME), '' ALTER TABLE  ''+ TABLES.NAME + '' WITH NOCHECK ADD CONSTRAINT ['' + (DEFAULT_CONSTRAINTS.NAME) + ''] DEFAULT '' + DEFINITION +'' FOR ''+ ''[''+ALL_COLUMNS.NAME+'']''
	  FROM SYS.ALL_COLUMNS
	  INNER JOIN SYS.TABLES ON ALL_COLUMNS.OBJECT_ID = TABLES.OBJECT_ID
	  INNER JOIN SYS.SCHEMAS ON TABLES.SCHEMA_ID = SCHEMAS.SCHEMA_ID
	  INNER JOIN SYS.DEFAULT_CONSTRAINTS ON ALL_COLUMNS.DEFAULT_OBJECT_ID = DEFAULT_CONSTRAINTS.OBJECT_ID 
	  WHERE TABLES.NAME NOT LIKE ''TMP%''
      AND TABLES.NAME NOT LIKE ''TEMP%''  '
      
       PRINT @SQL
		INSERT INTO @DEFINITION(CONSTRAINT_NAME,FIELDVALUE)
        EXEC SP_EXECUTESQL @SQL
        
        
        IF OBJECT_ID ('TEMPDB..#TMPCONST','U') IS NOT NULL
           DROP TABLE #TMPCONST
        
        SELECT * INTO #TMPCONST FROM @DEFINITION
        
        
        DECLARE @CCMD VARCHAR(MAX),@CONSTRAINT_NAME VARCHAR(2000)
        
        WHILE EXISTS(SELECT TOP 1 'U' FROM #TMPCONST)  
        BEGIN
           
           SET @CONSTRAINT_NAME=''
           SET @CCMD=''
           
             SELECT TOP 1 @CONSTRAINT_NAME=CONSTRAINT_NAME,@CCMD=FIELDVALUE FROM #TMPCONST
             ORDER BY DEFINITIONID
             
            SET @SQL=N' USE '+@NAME+' 
            IF NOT EXISTS (SELECT TOP 1 ''U'' FROM  '+@NAME+'.DBO.SYSOBJECTS WHERE NAME='''+@CONSTRAINT_NAME+''') 
            AND NOT EXISTS(SELECT TOP 1 ''U'' FROM  '+@NAME+'.SYS.INDEXES  WHERE NAME='''+@CONSTRAINT_NAME+''')
            BEGIN
               '+@CCMD+'
            END '
            PRINT @SQL
            EXEC SP_EXECUTESQL @SQL
           
            DELETE FROM #TMPCONST WHERE CONSTRAINT_NAME=@CONSTRAINT_NAME
        
        END
     
     
END
