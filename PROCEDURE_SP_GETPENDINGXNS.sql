CREATE PROCEDURE SP_GETPENDINGXNS
--WITH ENCRYPTION
AS
BEGIN
	DECLARE @CDBNAME NVARCHAR(MAX),@CCMD NVARCHAR(MAX)
	DECLARE @TTABLE TABLE (DEPT_ID VARCHAR(5), XN_TYPE VARCHAR(10),REC_COUNT NUMERIC(10),MIN_DT  DATETIME,MAX_DT DATETIME,LAST_UPDATE DATETIME,DELAYED NUMERIC(10))

	SELECT @CDBNAME=NAME FROM MASTER..SYSDATABASES WHERE NAME = DB_NAME()+'_WIZCOM'
	IF ISNULL(@CDBNAME,'')<>''
	BEGIN
		SET @CCMD=N'SELECT DEPT_ID,XN_TYPE,COUNT(*),MIN(XN_DT) AS [MIN_DT],MAX(XN_DT) AS [MAX_DT] 
					FROM '+@CDBNAME +'..VW_LOCDTRECON
					GROUP BY  DEPT_ID,XN_TYPE'
		
		INSERT INTO @TTABLE(DEPT_ID , XN_TYPE ,REC_COUNT ,MIN_DT  ,MAX_DT)
		EXEC SP_EXECUTESQL @CCMD
		
		UPDATE @TTABLE SET LAST_UPDATE=GETDATE(),DELAYED=0
		
		
		DELETE A
		FROM XNS_MERGING_STATUS A
		LEFT OUTER JOIN @TTABLE B ON B.XN_TYPE=A.XN_TYPE --AND A.DEPT_ID<>B.DEPT_ID
		WHERE B.XN_TYPE IS NULL

		DELETE A
		FROM XNS_MERGING_STATUS A
		LEFT OUTER JOIN @TTABLE B ON A.DEPT_ID=B.DEPT_ID
		WHERE B.DEPT_ID IS NULL

		
		INSERT INTO XNS_MERGING_STATUS (DEPT_ID , XN_TYPE ,REC_COUNT ,MIN_DT  ,MAX_DT,LAST_UPDATE,DELAYED)
		SELECT DEPT_ID , XN_TYPE ,REC_COUNT ,MIN_DT  ,MAX_DT,GETDATE(),0 FROM @TTABLE
	END
	
	SELECT A.*,DBO.FN_CONVERTINTOHOURSMINS(X.DELAY) AS [DELAY],X.MINDT,
	(CASE WHEN ISNULL(C.XN_TYPE,'')='' THEN 'XNS'+UPPER(A.XN_TYPE) ELSE C.XN_DESC END) AS [XN_NAME] ,
	LOC.DEPT_ID+ ' ' +LOC.DEPT_NAME AS [DEPT_NAME]
	FROM XNS_MERGING_STATUS A
	JOIN
	(
		SELECT DEPT_ID , XN_TYPE ,MAX(LAST_UPDATE) AS [MAXDT],MIN(LAST_UPDATE) AS [MINDT],
		DATEDIFF(MI,MIN(LAST_UPDATE),MAX(LAST_UPDATE)) AS [DELAY]
		FROM XNS_MERGING_STATUS 
		GROUP BY DEPT_ID , XN_TYPE
	)X ON A.DEPT_ID=X.DEPT_ID AND A.XN_TYPE=X.XN_TYPE
	JOIN LOCATION LOC ON LOC.DEPT_ID=A.DEPT_ID
	LEFT OUTER JOIN XNSINFO_ORDER C ON C.XN_TYPE='XNS'+A.XN_TYPE
	WHERE A.LAST_UPDATE=X.MAXDT
	ORDER BY X.DELAY DESC,A.REC_COUNT DESC
END
