CREATE PROCEDURE SAVETRAN_GENVENDOR_EANCODES    
( 
 @CSPID VARCHAR(40),    
 @NMODE INT= 1,    
 @CERRORMSG VARCHAR(MAX) OUTPUT    
) 
--WITH ENCRYPTION   
AS     
BEGIN    

	 -- @NMODE : SOURCE OF BARCODE GENERATION, 1- FROM PURCHASE, 2- FROM PO    
	 --PRINT 'ROHIT 1'    
	 -- THIS PROCEDURE ASSUMES THAT THE PID TABLE IS NORMALIZED FOR UNIQUE CODING    
	 -- IF IT IS NOT NORMALIZED THEN THE PROCESS WILL FAIL    
	     
BEGIN TRY    
	 

	 DECLARE @NROWS    BIGINT,    
	   @NEANROWS   BIGINT,    
	   @NFIXROWS   BIGINT,    
	   @NCTR    BIGINT,    
	   @CPIDROWID   VARCHAR(50),    
	   @CNEXTPRODUCTCODE VARCHAR(50),    
	   @NNEXTKEYVALUE  NUMERIC(30,0),  @NTYPE INT,  
	   @CPIMDEPTID   VARCHAR(5),  
	   @CBIN_ALIAS	VARCHAR(10),@CHOLOCID VARCHAR(5),    
	   @CCMD NVARCHAR(MAX),@CTEMPIRDTABLE VARCHAR(MAX),@NWHCOUNT INT,    
	   @CBARCODEPREFIX VARCHAR(100),@CADDPREFIX VARCHAR(50),@DMEMODT DATETIME,    
	   @CPREFIXYEARCODE BIT,@CPREFIXLOCID BIT,@CYEARCODE CHAR(2),@CADDLOCIDPREFIX CHAR(2),    
	   @CTEMPIRMTABLE VARCHAR(500),@NSTEP INT,@CCUSTOMPREFIX VARCHAR(50),@BLOOP BIT,@NPURLOCCNT INT,    
	   @BRANDOMGEN BIT,@NBARCODELEN INT,@CARTICLENO VARCHAR(300),@CARTPREFIX VARCHAR(50),    
	   @BGENEANCODES BIT,@CGENEANCODES VARCHAR(5),    
	   @CEANPREFIX VARCHAR(10),@NEANLENGTH INT,@CEANLENGTH VARCHAR(5),@CPREFIXFLOORID VARCHAR(10),  
	   @CADDFLOORIDPREFIX VARCHAR(10),@BBARCODEGENERATED BIT,@NTEMPLASTKEYVAL INT,@NLASTKEYVAL INT,
	   @CPREFIXMONTHCODE VARCHAR(10),@MONTHCODE VARCHAR(2),@CXNBARCODEPREFIX VARCHAR(50),@NVALLEN INT,
	   @CONLINEPRODUCTCODE VARCHAR(50),@CONLINEPRODUCTCODE1 VARCHAR(50),@NBOOL INT,@CZEROS VARCHAR(5),
	   @CNEWKEYVAL VARCHAR(50),@CNEXTEANNO VARCHAR(50),@CVENDOREANNOFOUND VARCHAR(50),@CVENDOREANMASTERFOUND VARCHAR(50)	
	  
	          
	 SELECT @CYEARCODE='',@CADDLOCIDPREFIX='',@CERRORMSG=''    
	     
	 SET @NSTEP=10    
	 
	 IF @NMODE = 2
	 BEGIN
		SELECT @NTYPE=[TYPE] FROM IRR_IRM01106_UPLOAD (NOLOCK) WHERE SP_ID=@CSPID
		IF @NTYPE=2 ---- DO NOT GENERATE VENDOR EAN IN TAG PRINTING
			RETURN
	 END
	    
	 SELECT A.ROW_ID AS PID_ROW_ID,B.ONLINE_PRODUCT_CODE,A.PRODUCT_CODE
	 INTO #PIDROWS_VEAN   
	 FROM PID01106 A    
	 JOIN SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE
	 WHERE 1=2    

	 SELECT A.ROW_ID AS PID_ROW_ID,B.VENDOR_EAN_NO
	 INTO #BARCODES_VEAN   
	 FROM PID01106 A    
	 JOIN SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE
	 WHERE 1=2    
	 	     
	 PRINT 'GENBC-'    
	 SET @NSTEP=20    
	     
	 SET @NROWS = 0    
	 SET @NFIXROWS = 0    
	 SET @NEANROWS = 0    
	     
	 SELECT TOP 1 @CEANPREFIX=VALUE FROM CONFIG WHERE CONFIG_OPTION='EAN_PREFIX'    
	 SELECT TOP 1 @CEANLENGTH=VALUE FROM CONFIG WHERE CONFIG_OPTION='EAN_LENGTH'    
	     
	 IF ISNULL(@CEANLENGTH,'')=''    
		SET @NEANLENGTH=12    
	 ELSE    
		SET @NEANLENGTH=CONVERT(INT,@CEANLENGTH)     
	     	     
	 SELECT TOP 1 @CHOLOCID = [VALUE] FROM CONFIG WHERE CONFIG_OPTION = 'HO_LOCATION_ID'    
	
	PRINT 'ENTER SAVETRAN_GENVENDOR_EANCODES'
		 
	EXEC SAVETRAN_GENONLINE_SKU  
		@nMode=@nMode,
		@cSpId=@cSpId,  
		@bCallledforVendorEan=1,
		@CERRORMSG=@CERRORMSG OUTPUT 
	 
	 IF ISNULL(@CERRORMSG,'')<>''
		GOTO END_PROC
		     
	 IF @NMODE=1 ---- FOR PURCHASE TO GENBARCODES   
	 BEGIN    
	      
		  SET @NSTEP=30    
		      
		  SET @NFIXROWS = @@ROWCOUNT    
		  --BARCODE GENERATION FOR LOT AND UNIQUE CODES    
		  INSERT #PIDROWS_VEAN ( PID_ROW_ID,ONLINE_PRODUCT_CODE,PRODUCT_CODE)    
		  SELECT A.ROW_ID,a.ONLINE_PRODUCT_CODE,A.PRODUCT_CODE
		  FROM PUR_PID01106_UPLOAD A (NOLOCK)   
		  WHERE A.SP_ID = @CSPID AND ISNULL(A.VENDOR_EAN_NO,'') = ''  AND ISNULL(a.ONLINE_PRODUCT_CODE,'')<>''
		  ORDER BY A.SRNO  
		     
	 END   --- END OF IF @NMODE=1 
	 
	 ELSE    
	 IF @NMODE = 2  -- BARCODE GENERATION FROM ITEM RATE REVISION    
	 BEGIN    
		  DECLARE @CDONOTGENIRRBARCODES VARCHAR(5)    
		  
		      
		  SELECT @NWHCOUNT=COUNT(*) FROM LOCATION WHERE DEPT_ID<>@CHOLOCID AND PUR_LOC=1     
		      
		  SET @NSTEP=60    
		      
		  SELECT TOP 1 @CDONOTGENIRRBARCODES=VALUE FROM CONFIG WHERE CONFIG_OPTION='DONOT_GEN_BARCODE_IRR'
		   
		  SET @CDONOTGENIRRBARCODES = ISNULL(@CDONOTGENIRRBARCODES,0)       
		       
		  SET @NSTEP=70    
		      
		  -- BARCODE GENERATION FOR LOT AND UNIQUE CODES    
		      		  
		         
		    
		  INSERT #PIDROWS_VEAN ( PID_ROW_ID,ONLINE_PRODUCT_CODE,PRODUCT_CODE)     
		  SELECT A.ROW_ID,A.ONLINE_PRODUCT_CODE,A.NEW_PRODUCT_CODE 
		  FROM IRR_IRD01106_UPLOAD A (NOLOCK)   
		  JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE    
		  JOIN SKU C (NOLOCK) ON C.PRODUCT_CODE=A.NEW_PRODUCT_CODE    
		  JOIN IRR_IRM01106_UPLOAD D  (NOLOCK) ON D.SP_ID=A.SP_ID
		  WHERE A.SP_ID =@CSPID AND ISNULL(a.ONLINE_PRODUCT_CODE,'')<>''
		  AND (A.ARTICLE_CODE<>A.OLD_ARTICLE_CODE or A.PARA1_CODE<>A.OLD_PARA1_CODE or A.PARA2_CODE<>A.OLD_PARA2_CODE or A.PARA3_CODE<>A.OLD_PARA3_CODE
			   or A.PARA4_CODE<>A.OLD_PARA4_CODE OR A.PARA5_CODE<>A.OLD_PARA5_CODE OR A.PARA6_CODE<>A.OLD_PARA6_CODE
			   OR ISNULL(A.ONLINE_PRODUCT_CODE,'')<>'')
		  AND D.TYPE IN (1,3,4)			   
		  UNION
		  SELECT B.ROW_ID,B.ONLINE_PRODUCT_CODE,A.PRODUCT_CODE 
		  FROM SKU A
		  JOIN IRR_IRD01106_UPLOAD B ON A.PRODUCT_CODE=B.PRODUCT_CODE
		  JOIN IRR_IRM01106_UPLOAD C  (NOLOCK) ON C.SP_ID=B.SP_ID
		  JOIN LM01106 LM ON LM.AC_CODE=A.AC_CODE
		  WHERE C.SP_ID=@CSPID 
		  AND (B.ARTICLE_CODE<>B.OLD_ARTICLE_CODE or B.PARA1_CODE<>B.OLD_PARA1_CODE or B.PARA2_CODE<>B.OLD_PARA2_CODE or B.PARA3_CODE<>B.OLD_PARA3_CODE
			   or B.PARA4_CODE<>B.OLD_PARA4_CODE OR B.PARA5_CODE<>B.OLD_PARA5_CODE OR B.PARA6_CODE<>B.OLD_PARA6_CODE
			   OR ISNULL(B.ONLINE_PRODUCT_CODE,'')<>'')
		  AND C.TYPE IN (1,3,4) AND ISNULL(B.NEW_PRODUCT_CODE,'')=''	 		

		  SET @NSTEP=75    
		        
		  UPDATE sku with (rowlock) set ONLINE_PRODUCT_CODE=b.ONLINE_PRODUCT_CODE FROM 
		  IRR_IRD01106_UPLOAD b (NOLOCK) where b.new_product_code=sku.product_code
		  AND B.sp_id=@cSpid and isnull(b.online_product_code,'')<>''
	      
	 END  ---- END OF IF @NMODE = 2   

	 ELSE    
	 IF @NMODE = 3  -- BARCODE GENERATION FROM PURCHASE ORDER
	 BEGIN    
		  
		  SET @NSTEP=78
     	  -- BARCODE GENERATION FOR LOT AND UNIQUE CODES    
		      
		  INSERT #PIDROWS_VEAN ( PID_ROW_ID,ONLINE_PRODUCT_CODE,PRODUCT_CODE)     
		  SELECT A.ROW_ID,A.ONLINE_PRODUCT_CODE,A.PRODUCT_CODE 
		  FROM PO_POD01106_UPLOAD A (NOLOCK)       
		  WHERE A.SP_ID =@CSPID AND  ISNULL(A.PRODUCT_CODE,'')='' AND ISNULL(A.VENDOR_EAN_NO,'')='' 
		  AND ISNULL(A.ONLINE_PRODUCT_CODE,'')<>''

		  SET @NSTEP=80
		  UPDATE sku with (rowlock) set ONLINE_PRODUCT_CODE=b.ONLINE_PRODUCT_CODE FROM 
		  PO_POD01106_UPLOAD b (NOLOCK) where b.product_code=sku.product_code
		  AND B.sp_id=@cSpid and isnull(b.online_product_code,'')<>'' AND sku.product_code<>''
		  		  
	      
	 END  ---- END OF IF @NMODE = 2   
	 
	 IF NOT EXISTS (SELECT TOP 1 PID_ROW_ID FROM #PIDROWS_vean)
		RETURN
			     
	 PRINT 'GETNEXTVENDOREAN-4'
	 
	 SET @NSTEP=90    
	 	 	 
	 INSERT #BARCODES_VEAN ( PID_ROW_ID, VENDOR_EAN_NO )
	 SELECT PID_ROW_ID,B.VENDOR_EAN_NO FROM #PIDROWS_VEAN A
	 JOIN VENDOR_EAN_MASTER B ON A.ONLINE_PRODUCT_CODE=B.ONLINE_PRODUCT_CODE
	 
	 SELECT @NEANROWS=COUNT(A.PID_ROW_ID)
	 FROM #PIDROWS_VEAN A LEFT OUTER JOIN #BARCODES_VEAN B ON A.PID_ROW_ID=B.PID_ROW_ID
	 WHERE B.PID_ROW_ID IS NULL


	 ----- GENERATE EAN CODES IF PROCEDURE CALLED FROM PURCHASE INVOICE / RATE REVISION /  PURCHASE ORDER
	 IF @NEANROWS > 0 AND @NMODE IN (1,3,2)  
	 BEGIN  
		 DECLARE @CEANSOURCETABLE VARCHAR(100)  
		 
		 SET @CEANSOURCETABLE=(CASE WHEN @NMODE=1 THEN 'PID01106' ELSE 'IRD01106' END)    

		 SET @NVALLEN = @NEANLENGTH - LEN(@CEANPREFIX)		
		 
			

		 SET @NSTEP=100
		 SELECT TOP 1 @NTEMPLASTKEYVAL = CAST( RIGHT( LASTKEYVAL,@NVALLEN) AS BIGINT )   
					   FROM KEYS_PMT
					   WHERE TABLENAME = 'SKU'  
					   AND COLUMNNAME  = 'VENDOR_EAN_NO'  
					   AND PREFIX	   = @CEANPREFIX
					   AND FINYEAR     = ''

		 SET @NLASTKEYVAL = (ISNULL(@NTEMPLASTKEYVAL,0) + 1)
		 
		
		 PRINT 'GETNEXTVENDOREAN-5-'+STR(@NLASTKEYVAL)+'-'+@CEANPREFIX+'-'+STR(@NVALLEN)	

		 IF CURSOR_STATUS('GLOBAL','PID_CUR') IN (0,1)
		 BEGIN
			CLOSE PID_CUR
			DEALLOCATE PID_CUR
		 
		 END
		 SET @CONLINEPRODUCTCODE1='START'

		 
		 DECLARE PID_CUR CURSOR FOR 
		 SELECT  A.PID_ROW_ID,A.ONLINE_PRODUCT_CODE
		 FROM #PIDROWS_VEAN A LEFT OUTER JOIN #BARCODES_VEAN B ON A.PID_ROW_ID=B.PID_ROW_ID
		 WHERE B.PID_ROW_ID IS NULL
		 ORDER BY ONLINE_PRODUCT_CODE 
		 
		 PRINT 'GETNEXTVENDOREAN-5.2'
		 		
		 SET @NSTEP=110  
		 OPEN PID_CUR
		
		 FETCH NEXT FROM PID_CUR INTO @CPIDROWID,@CONLINEPRODUCTCODE
		 WHILE @@FETCH_STATUS = 0
		 BEGIN
			IF @CONLINEPRODUCTCODE1<>@CONLINEPRODUCTCODE
			BEGIN
				
				SET @NSTEP=120  
				SET @CONLINEPRODUCTCODE1=@CONLINEPRODUCTCODE
				SET @NBOOL = 0

				WHILE (@NBOOL=0) 
				BEGIN
					
					SET @NSTEP=125  
					PRINT 'GETNEXTVENDOREAN-6'+@CEANPREFIX+'-'+@CZEROS+'-'+LTRIM(RTRIM(CAST(@NLASTKEYVAL AS VARCHAR(40))))
					
					SELECT @CZEROS = REPLICATE('0', @NVALLEN - LEN(@NLASTKEYVAL))  

					
					SELECT @CNEWKEYVAL = @CEANPREFIX + @CZEROS + LTRIM(RTRIM(CAST(@NLASTKEYVAL AS VARCHAR(40))))
										
					SELECT @CNEXTEANNO = @CNEWKEYVAL+DBO.FN_CREATECHECKDIGIT(@CNEWKEYVAL)
					
					PRINT 'GETNEXTVENDOREAN-7'
					
					SET @CVENDOREANNOFOUND=''
					SELECT TOP 1 @CVENDOREANNOFOUND=VENDOR_EAN_NO FROM VENDOR_EAN_MASTER (NOLOCK)   WHERE VENDOR_EAN_NO=@CNEXTEANNO
					
					IF ISNULL(@CVENDOREANNOFOUND,'')=''
						SET @NBOOL = 1
					  
					SET @NLASTKEYVAL = @NLASTKEYVAL + 1   
				END   
				------------ END OF THE LOOP FOR GENERATION OF KEY CODES 
						
			END

		
			
			SET @NSTEP=130  			
			SET @CVENDOREANMASTERFOUND=''
			
			SELECT TOP 1 @CVENDOREANMASTERFOUND=VENDOR_EAN_NO FROM VENDOR_EAN_MASTER (NOLOCK)
			WHERE VENDOR_EAN_NO=@CNEXTEANNO
			
			IF ISNULL(@CVENDOREANMASTERFOUND,'')=''
				SELECT TOP 1 @CVENDOREANMASTERFOUND=VENDOR_EAN_NO FROM VENDOR_EAN_MASTER (NOLOCK)
				WHERE ONLINE_PRODUCT_CODE=@CONLINEPRODUCTCODE				
			
			SET @NSTEP=132
			IF ISNULL(@CVENDOREANMASTERFOUND,'')=''
				INSERT VENDOR_EAN_MASTER (ONLINE_PRODUCT_CODE,VENDOR_EAN_NO)
				SELECT @CONLINEPRODUCTCODE,isnull(@CNEXTEANNO,'')
			

			
			SET @NSTEP=135	
			PRINT 'GETNEXTVENDOREAN-8'
			INSERT #BARCODES_VEAN ( PID_ROW_ID, VENDOR_EAN_NO )
			VALUES   ( @CPIDROWID, @CNEXTEANNO )
			
			SET @NSTEP=140		
			FETCH NEXT FROM PID_CUR INTO @CPIDROWID,@CONLINEPRODUCTCODE
		 END
		
		 CLOSE PID_CUR
		 DEALLOCATE PID_CUR
		 		 
		 IF @CNEWKEYVAL IS NOT NULL
		 BEGIN			 
			 SET @NSTEP=150
			 
			 PRINT 'GETNEXTVENDOREAN-9'
			 IF NOT EXISTS (SELECT TOP 1 TABLENAME FROM KEYS_PMT WHERE  PREFIX	= @CEANPREFIX AND COLUMNNAME='VENDOR_EAN_NO')
				INSERT KEYS_PMT	( TABLENAME, LASTKEYVAL, COLUMNNAME, PREFIX, FINYEAR )  
				SELECT 'SKU' AS TABLENAME,@CNEWKEYVAL AS LASTKEYVAL,'VENDOR_EAN_NO' AS COLUMNNAME,
				@CEANPREFIX AS PREFIX,'' AS FINYEAR
			 ELSE
				UPDATE KEYS_PMT	SET LASTKEYVAL  = @CNEWKEYVAL	WHERE  PREFIX	= @CEANPREFIX
		 END
		 				   
		 IF @CERRORMSG<>''  
		 BEGIN  
			  PRINT 'GENBARCODE-RETURND-5'  
			  GOTO END_PROC  
		 END    

	  END  
	
INS_CODES:    
	 
	
	 IF @NMODE=1    
	 BEGIN    
		   SET @NSTEP=160    
		     
		   UPDATE PUR_pid01106_UPLOAD with (rowlock) SET VENDOR_EAN_NO = B.VENDOR_EAN_NO    
		   FROM #BARCODES_VEAN B     
		   WHERE PUR_pid01106_UPLOAD.ROW_ID = B.PID_ROW_ID    
		   AND sp_id=@cSpId

		   UPDATE SKU WITH (rowlock) SET VENDOR_EAN_NO=B.VENDOR_EAN_NO    
		   FROM PUR_pid01106_UPLOAD B (NOLOCK)    
		   WHERE B.PRODUCT_CODE = SKU.PRODUCT_CODE AND B.SP_ID=@CSPID
     END    
	     
	 ELSE    
	 IF @NMODE=2    
	 BEGIN    
		   SET @NSTEP=170    
		   
		   
		   	     
		   UPDATE IRR_IRD01106_UPLOAD WITH (ROWLOCK) SET VENDOR_EAN_NO = B.VENDOR_EAN_NO    
		   FROM #BARCODES_VEAN B     
		   WHERE IRR_IRD01106_UPLOAD.ROW_ID = B.PID_ROW_ID    
		   AND SP_ID=@cSpid

		   UPDATE SKU WITH (ROWLOCK)  SET VENDOR_EAN_NO=B.VENDOR_EAN_NO    
		   FROM IRR_IRD01106_UPLOAD B (NOLOCK)    
		   WHERE B.NEW_PRODUCT_CODE = SKU.PRODUCT_CODE AND 
		   B.SP_ID=@CSPID

		   UPDATE SKU WITH (ROWLOCK)  SET VENDOR_EAN_NO=B.VENDOR_EAN_NO    
		   FROM IRR_IRD01106_UPLOAD B     
		   WHERE B.PRODUCT_CODE = SKU.PRODUCT_CODE AND B.SP_ID=@CSPID AND ISNULL(B.NEW_PRODUCT_CODE,'')=''
	      
	 END    

	 ELSE    
	 IF @NMODE=3    
	 BEGIN    
		   SET @NSTEP=180    
		     
		   UPDATE PO_POD01106_UPLOAD WITH (ROWLOCK) SET VENDOR_EAN_NO = B.VENDOR_EAN_NO    
		   FROM #BARCODES_VEAN B     
		   WHERE PO_POD01106_UPLOAD.ROW_ID = B.PID_ROW_ID    
		   AND sp_id=@cSpid
		   
		   UPDATE SKU WITH (ROWLOCK) SET VENDOR_EAN_NO=B.VENDOR_EAN_NO    
		   FROM PO_POD01106_UPLOAD B (NOLOCK)    
		   WHERE B.PRODUCT_CODE = SKU.PRODUCT_CODE AND B.SP_ID=@CSPID
	       AND sku.product_code<>''
	 END    
	

	-- SET @CERRORMSG='FORCE ERROR'
		
END TRY     
     
BEGIN CATCH    
  	  
  PRINT 'ENTER CATCH OF SAVETRAN_GENVENDOR_EANCODES'		    
  SET @CERRORMSG = 'PROCEDURE SAVETRAN_GENVENDOR_EANCODES : STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()    
    
END CATCH    
     
END_PROC:    

END    
--******************************* END OF PROCEDURE SAVETRAN_GENVENDOR_EANCODES    
