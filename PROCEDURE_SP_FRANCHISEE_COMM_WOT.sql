
CREATE PROC SP_FRANCHISEE_COMM_WOT(@FROM_DATE DATETIME,@TO_DATE DATETIME,@LOC VARCHAR(10)='',@MODE INT=1,@SUB_SEC VARCHAR(1000)='')
AS 
BEGIN
--(dinkar) Replace  left(memoid,2) to Location_code 
SET NOCOUNT ON


if object_id('SP_FRANCHISEE_COMM_WOT_CUSTOM','P') is not null
begin
      
	  EXEC SP_FRANCHISEE_COMM_WOT_CUSTOM
	    @FROM_DATE=@FROM_DATE,
		@TO_DATE=@TO_DATE,
		@LOC=@LOC,
		@MODE=@MODE,
		@SUB_SEC=@SUB_SEC

		RETURN

end

DECLARE @SQL VARCHAR(MAX),@CLOC VARCHAR(5),@CHO VARCHAR(5)
SELECT @CLOC=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
SELECT @CHO=VALUE  FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'

IF @CLOC=@CHO--HO
   IF @LOC=''
      SET @SQL='A.DEPT_ID<>'''+@CHO+''''
   ELSE   
      SET @SQL='A.DEPT_ID='''+@LOC+''''   
ELSE--LOCATION
   SET @SQL='A.DEPT_ID='''+@CLOC+''''   

IF OBJECT_ID('TEMPDB..#TBL') IS NOT NULL DROP TABLE #TBL
SELECT TOP 0 B.CM_NO, B.CM_DT, A.DEPT_ID AS DEPT_ID, A.DEPT_NAME
,CAST('' AS VARCHAR(50)) AS DISC_CATEGORY
,CAST(0 AS DECIMAL(8,2)) AS DISC_PER
,SUM(ISNULL(B.ATD_CHARGES,0))ATD_CHARGES
,CAST(0 AS DECIMAL(8,2)) AS ROFF
,cast(1.0 as numeric(10,0)) AS CNT
,SUM(C.QUANTITY*C.MRP) AS SALE_VALUE_AT_MRP
,SUM(C.RFNET) AS REALIZED_SALE_VALUE
,SUM(C.TAX_AMOUNT) AS TAX_AMOUNT
,SUM(C.DISCOUNT_AMOUNT) AS DIC_AMOUNT
,SUM(C.QUANTITY) AS QUANTITY
,SUM(C.NET) AS TOTAL_SALE
,SUM(C.XN_VALUE_WITHOUT_GST) AS Taxable_value
INTO #TBL
FROM LOCATION A 
JOIN CMM01106 B ON A.DEPT_ID = B.location_Code 
JOIN CMD01106 C ON B.CM_ID = C.CM_ID
JOIN SKU D		ON D.PRODUCT_CODE=C.PRODUCT_CODE
JOIN ARTICLE E	ON E.ARTICLE_CODE=D.ARTICLE_CODE 
JOIN SECTIOND F ON F.SUB_SECTION_CODE=E.SUB_SECTION_CODE 
JOIN SECTIONM G ON G.SECTION_CODE=F.SECTION_CODE
GROUP BY B.CM_NO, B.CM_DT, A.DEPT_ID ,A.DEPT_NAME, B.ATD_CHARGES


SET @SQL='INSERT #TBL
SELECT B.CM_NO, B.CM_DT, A.DEPT_ID AS DEPT_ID, A.DEPT_NAME
,DBO.GETDISCCAT(A.DEPT_ID,CASE	WHEN (SUB_SECTION_NAME IN (''TROUSERS'',''O.SHIRT F/S'',''DENIM'',''O.SHIRT H/S'') OR LEFT(ARTICLE_NO,3)=''FLS'') THEN 80		
								WHEN WEIGHTED_AVG_DISC_PCT > 0 THEN C.WEIGHTED_AVG_DISC_PCT
								WHEN (SUB_SECTION_NAME IN (''TROUSERS'',''O.SHIRT F/S'',''DENIM'',''O.SHIRT H/S'') OR LEFT(ARTICLE_NO,2)IN(''QLT495'',''HT'',''LR'',''DS'',''DZ'',''FT'',''LZ'',''SL'',''BR'',''SH'',''GL'',''TS'',''LT'')) THEN 80
								WHEN WEIGHTED_AVG_DISC_PCT > 0 THEN C.WEIGHTED_AVG_DISC_PCT 
								ELSE ROUND((C.DISCOUNT_AMOUNT + C.NET*B.DISCOUNT_PERCENTAGE/100)/(C.QUANTITY*C.MRP)*100,0) 
						  END 
				)AS DISC_CATEGORY
,ISNULL(C.DISCOUNT_PERCENTAGE,0)
,SUM(ISNULL(B.ATD_CHARGES,0))
,SUM(ISNULL(B.ROUND_OFF,0))
,COUNT(DISTINCT ISNULL(C.DISCOUNT_PERCENTAGE,0))
,SUM(C.QUANTITY*C.MRP) AS SALE_VALUE_AT_MRP
,SUM(C.RFNET) AS REALIZED_SALE_VALUE
,SUM(C.TAX_AMOUNT) AS TAX_AMOUNT
--,SUM(C.DISCOUNT_AMOUNT) AS DIC_AMOUNT
,SUM(C.QUANTITY*C.MRP-C.RFNET) AS DIC_AMOUNT
,SUM(C.QUANTITY) AS QUANTITY
,SUM(C.NET) AS TOTAL_SALE
,SUM(C.XN_VALUE_WITHOUT_GST) AS Taxable_value
FROM LOCATION A (NOLOCK)
JOIN CMM01106 B (NOLOCK) ON A.DEPT_ID = B.LOCATION_CODE
JOIN CMD01106 C (NOLOCK) ON B.CM_ID = C.CM_ID
JOIN SKU D		(NOLOCK) ON D.PRODUCT_CODE=C.PRODUCT_CODE
JOIN ARTICLE E	(NOLOCK) ON E.ARTICLE_CODE=D.ARTICLE_CODE 
JOIN SECTIOND F (NOLOCK) ON F.SUB_SECTION_CODE=E.SUB_SECTION_CODE 
JOIN SECTIONM G (NOLOCK) ON G.SECTION_CODE=F.SECTION_CODE
WHERE B.CANCELLED = 0 
AND B.CM_MODE = 1
AND '+@SQL+
+' AND B.CM_DT BETWEEN '''+REPLACE(CONVERT(VARCHAR,@FROM_DATE,102),'.','-')+''' AND '''+REPLACE(CONVERT(VARCHAR,@TO_DATE,102),'.','-')+''''
+' AND '+CASE @MODE WHEN 1 THEN '1=1' WHEN 2 THEN 'F.SUB_SECTION_CODE LIKE ''%'+@SUB_SEC+'%''' WHEN 3 THEN 'F.SUB_SECTION_CODE NOT LIKE ''%'+@SUB_SEC+'%''' END
+CHAR(13)+'GROUP BY B.CM_NO, B.CM_DT, A.DEPT_ID,A.DEPT_NAME
,DBO.GETDISCCAT(A.DEPT_ID,CASE	WHEN (SUB_SECTION_NAME IN (''TROUSERS'',''O.SHIRT F/S'',''DENIM'',''O.SHIRT H/S'') OR LEFT(ARTICLE_NO,3)=''FLS'') THEN 80		
								WHEN WEIGHTED_AVG_DISC_PCT > 0 THEN C.WEIGHTED_AVG_DISC_PCT
								WHEN (SUB_SECTION_NAME IN (''TROUSERS'',''O.SHIRT F/S'',''DENIM'',''O.SHIRT H/S'') OR LEFT(ARTICLE_NO,2)IN(''QLT495'',''HT'',''LR'',''DS'',''DZ'',''FT'',''LZ'',''SL'',''BR'',''SH'',''GL'',''TS'',''LT'')) THEN 80
								WHEN WEIGHTED_AVG_DISC_PCT > 0 THEN C.WEIGHTED_AVG_DISC_PCT 
								ELSE ROUND((C.DISCOUNT_AMOUNT + C.NET*B.DISCOUNT_PERCENTAGE/100)/(C.QUANTITY*C.MRP)*100,0) 
						  END 
				)
,ISNULL(C.DISCOUNT_PERCENTAGE,0)'
PRINT @SQL
EXEC(@SQL)

IF OBJECT_ID('TEMPDB..#GENREPO') IS NOT NULL DROP TABLE #GENREPO
SELECT B.CM_NO, B.CM_DT, A.DEPT_ID, B.DEPT_NAME, FLOOR_DISC_PCT, CEIL_DISC_PCT
,B.ROFF,B.CNT,B.ATD_CHARGES
,SALE_VALUE_AT_MRP, TAX_AMOUNT,DISC_PER,DIC_AMOUNT , QUANTITY, REALIZED_SALE_VALUE,COMM_PCT,B.TOTAL_SALE,
Taxable_value 
INTO #GENREPO
FROM LOC_COMM_DETAIL A
JOIN #TBL B ON A.DEPT_ID = B.DEPT_ID
JOIN LOCATION C ON A.DEPT_ID = C.DEPT_ID
AND  A.DISC_CATEGORY = B.DISC_CATEGORY
ORDER BY A.DEPT_ID, B.CM_NO, B.CM_DT,  FLOOR_DISC_PCT, CEIL_DISC_PCT
--SELECT 87,* FROM #GENREPO

IF OBJECT_ID('TEMPDB..#COMM_SETUP') IS NOT NULL DROP TABLE #COMM_SETUP
   SELECT * INTO #COMM_SETUP FROM LOC_COMM_DETAIL WHERE FLOOR_DISC_PCT=0
--SELECT '88',* FROM #COMM_SETUP WHERE DEPT_ID='07'

DECLARE @NNEGATD FLOAT=0, @NATD FLOAT=0,@NTOTATDAMT DECIMAL(20,2)=0
,@DEPT VARCHAR(20),@DEPT_NAME VARCHAR(100),@CMNO VARCHAR(20),@ATD_CHG FLOAT,@COMM_PCT FLOAT,@CMDT DATETIME
,@DISCPER FLOAT,@ROFF FLOAT

DECLARE CMATD CURSOR FOR
SELECT DISTINCT A.dept_id  AS DEPT_ID, A.DEPT_NAME AS DEPT_NAME, A.CM_NO, A.CM_DT
,A.ATD_CHARGES,A.ROFF
,B.COMM_PCT,A.DISC_PER
FROM #GENREPO A JOIN #COMM_SETUP B ON A.dept_id =LTRIM(RTRIM(B.DEPT_ID)) 
WHERE A.ATD_CHARGES<>0 
ORDER BY A.CM_NO

OPEN CMATD
FETCH NEXT FROM CMATD INTO @DEPT,@DEPT_NAME,@CMNO,@CMDT,@ATD_CHG,@ROFF,@COMM_PCT,@DISCPER
WHILE @@FETCH_STATUS=0
  BEGIN
	 INSERT INTO #GENREPO (DEPT_ID, DEPT_NAME, CM_NO, CM_DT, ATD_CHARGES,ROFF, COMM_PCT,DISC_PER,CNT)
	 SELECT @DEPT,@DEPT_NAME,@CMNO,@CMDT,@ATD_CHG,@ROFF,@COMM_PCT,@DISCPER,1
	 
     SET @NNEGATD+=CASE WHEN @ATD_CHG<0 THEN @ATD_CHG ELSE 0 END
     SET @NATD+=CASE WHEN @ATD_CHG>0 THEN @ATD_CHG ELSE 0 END
     FETCH NEXT FROM CMATD INTO @DEPT,@DEPT_NAME,@CMNO,@CMDT,@ATD_CHG,@ROFF,@COMM_PCT,@DISCPER
  END
SET @NTOTATDAMT = @NATD + @NNEGATD
CLOSE CMATD
DEALLOCATE CMATD
SET @NTOTATDAMT=ISNULL(@NTOTATDAMT,0.00)

--SELECT 130,G1.CREC,G.* FROM #GENREPO G
--JOIN (SELECT CM_NO,COUNT(*)CREC FROM #GENREPO GROUP BY CM_NO) G1 ON G.CM_NO=G1.CM_NO
UPDATE G SET G.CNT=G1.CREC FROM #GENREPO G
JOIN (SELECT CM_NO,COUNT(*)CREC FROM #GENREPO G2 WHERE G2.QUANTITY IS NOT NULL GROUP BY G2.CM_NO) G1 ON G.CM_NO=G1.CM_NO
UPDATE G SET ATD_CHARGES=(SELECT TOP 1 C.ATD_CHARGES FROM CMM01106 C (NOLOCK) WHERE C.CM_DT=G.CM_DT AND C.CM_NO=G.CM_NO)/CNT
,ROFF=(SELECT TOP 1 C.ROUND_OFF FROM CMM01106 C (NOLOCK) WHERE C.CM_DT=G.CM_DT AND C.CM_NO=G.CM_NO)/CNT FROM #GENREPO G

SELECT DEPT_ID+'-'+DEPT_NAME LOC_NAME
,G.CM_NO,CM_DT
,QUANTITY
,DISC_PER DISCPER
,SALE_VALUE_AT_MRP SALE
,DIC_AMOUNT[DISCN]
,(SALE_VALUE_AT_MRP -REALIZED_SALE_VALUE)[DISC]
,REALIZED_SALE_VALUE 
,G.CNT
,ATD_CHARGES [RO_ATD_CHARGES]
--,CASE WHEN FLOOR_DISC_PCT=0 THEN @NTOTATDAMT ELSE 0 END [RO_CHARGES]
,ROFF ROFF--[RO_CHARGES]
--,TOTAL_SALE [NET_SLS_AMT]
,REALIZED_SALE_VALUE+ATD_CHARGES+ROFF [NET_SLS_AMT]
,ROUND(((Taxable_value )*COMM_PCT/100),2) [COMM]
,COMM_PCT [COMM_PER]
,Taxable_value 
FROM #GENREPO G 
WHERE G.QUANTITY IS NOT NULL
ORDER BY DEPT_ID,CM_DT,CM_NO,DISC_PER--,FLOOR_DISC_PCT,CEIL_DISC_PCT,COMM_PCT


IF OBJECT_ID('TEMPDB..#GENC') IS NOT NULL DROP TABLE #GENC
SELECT DEPT_ID+'-'+DEPT_NAME LOC_NAME,FLOOR_DISC_PCT, CEIL_DISC_PCT, COMM_PCT, SUM(QUANTITY) AS QTY
,ROUND(SUM(SALE_VALUE_AT_MRP),2) AS SALE_VALUE_AT_MRP,SUM(DIC_AMOUNT) AS DIC_AMOUNT
,SUM(REALIZED_SALE_VALUE) AS REALIZED_SALE_VALUE
,SUM(ROFF)ROFF
,SUM(ATD_CHARGES)ATD_CHARGES
,SUM(Taxable_value) AS Taxable_value
INTO #GENC
FROM #GENREPO 
GROUP BY DEPT_ID+'-'+DEPT_NAME,FLOOR_DISC_PCT, CEIL_DISC_PCT, COMM_PCT

--UPDATE #GENC SET ROFF=0,ATD_CHARGES=0 WHERE QTY IS NULL

DECLARE @CTEXT VARCHAR(MAX)='', @CTEXT1 VARCHAR(MAX)=''
,@FLOOR_DISC_PCT FLOAT,@CEIL_DISC_PCT FLOAT --,@COMM_PCT FLOAT 
,@QTY FLOAT ,@SALE_VALUE_AT_MRP FLOAT ,@DIC_AMOUNT FLOAT ,@REALIZED_SALE_VALUE FLOAT
,@COMM_AMT FLOAT ,@DISC_AMT FLOAT ,@ATD_CHARGES FLOAT,@ROFF_CHARGES FLOAT

IF OBJECT_ID('TEMPDB..#CTEXT') IS NOT NULL DROP TABLE #CTEXT
CREATE TABLE #CTEXT(CTEXT1 DECIMAL(15,2),CTEXT2 VARCHAR(MAX),CTEXT3 VARCHAR(MAX)
,CTEXT4 DECIMAL(15,2),CTEXT5 DECIMAL(15,2),CTEXT6 DECIMAL(15,2),CTEXT7 DECIMAL(15,2),CTEXT8 DECIMAL(15,2)
,CTEXT9 DECIMAL(15,2),CTEXT10 DECIMAL(15,2),CTEXT11 DECIMAL(15,2),CTEXT12 DECIMAL(15,2))



DECLARE GENC CURSOR FOR
SELECT FLOOR_DISC_PCT
,CEIL_DISC_PCT
,COMM_PCT
,QTY
,SALE_VALUE_AT_MRP
,(DIC_AMOUNT) AS DIC_AMOUNT 
,(REALIZED_SALE_VALUE) AS REALIZED_SALE_VALUE
,ROUND(((Taxable_value)*COMM_PCT/100),2) AS COMM_AMT
,(SALE_VALUE_AT_MRP -(REALIZED_SALE_VALUE)) AS DISC_AMT
,ATD_CHARGES--=CASE WHEN FLOOR_DISC_PCT=0 THEN @NTOTATDAMT ELSE 0 END 
,ISNULL(ROFF,0)ROFF
FROM #GENC 
--WHERE DIC_AMOUNT>0

OPEN GENC
FETCH NEXT FROM GENC INTO @FLOOR_DISC_PCT,@CEIL_DISC_PCT,@COMM_PCT,@QTY,@SALE_VALUE_AT_MRP,@DIC_AMOUNT,@REALIZED_SALE_VALUE,@COMM_AMT,@DISC_AMT,@ATD_CHARGES,@ROFF_CHARGES
WHILE @@FETCH_STATUS=0
  BEGIN
      IF ISNULL(@CTEXT,'')='' OR 1=1
	  BEGIN
		 SET @CTEXT = 
					  ''+CAST(@FLOOR_DISC_PCT AS CHAR(8))
					  +'<= '+CAST(@CEIL_DISC_PCT AS CHAR(8))
					  +'=  '+CAST(@COMM_PCT AS CHAR(8))
					  +CAST(CAST(@QTY AS DECIMAL(10,2)) AS CHAR(10))
					  +CAST(CAST(@SALE_VALUE_AT_MRP AS DECIMAL(15,2)) AS CHAR(15))
					  +CAST(CAST(@DISC_AMT AS DECIMAL(10,2))AS CHAR(12))
					  +CAST(CAST(@DIC_AMOUNT AS DECIMAL(10,2)) AS CHAR(10))
					  +CAST(CASE ISNULL(@ATD_CHARGES,0) WHEN 0 THEN '' ELSE CAST(CAST(@ATD_CHARGES AS DECIMAL(10,2))AS VARCHAR) END AS CHAR(10))
					  +CAST(CAST(@REALIZED_SALE_VALUE+@ATD_CHARGES AS DECIMAL(10,2)) AS CHAR(12))
					  +CAST(CAST(@COMM_AMT AS DECIMAL(10,2)) AS CHAR(10))
					  +CAST(CAST(@ATD_CHARGES*@COMM_PCT/100 AS DECIMAL(10,2)) AS CHAR(10))
					  +CAST(CAST(@COMM_AMT+@ATD_CHARGES*@COMM_PCT/100 AS DECIMAL(10,2)) AS CHAR(10))

		 INSERT #CTEXT SELECT CAST(@FLOOR_DISC_PCT AS DECIMAL(15,2))CTEXT1
		 ,'<= '+CAST(@CEIL_DISC_PCT AS VARCHAR) CTEXT2
		 ,'=  '+CAST(@COMM_PCT AS VARCHAR) CTEXT3
		 ,CAST(@QTY AS DECIMAL(15,2))CTEXT4
		 ,CAST(@SALE_VALUE_AT_MRP AS DECIMAL(15,2)) CTEXT5
		 ,CAST(@DISC_AMT AS DECIMAL(15,2))CTEXT6
		 ,CAST(@DIC_AMOUNT AS DECIMAL(15,2))CTEXT7
		 ,CAST(@ATD_CHARGES AS DECIMAL(15,2))CTEXT8
		 ,CAST(@REALIZED_SALE_VALUE+@ATD_CHARGES+@ROFF_CHARGES AS DECIMAL(15,2))CTEXT9
		 ,CAST(@COMM_AMT AS DECIMAL(15,2))CTEXT10
		 ,CAST(@ATD_CHARGES*@COMM_PCT*0/100 AS DECIMAL(15,2))CTEXT11
		 ,CAST(@COMM_AMT+@ATD_CHARGES*@COMM_PCT*0/100 AS DECIMAL(15,2))CTEXT12
	  END
	  ELSE										
		 SET @CTEXT+=CHAR(13)+
					  ''+CAST(@FLOOR_DISC_PCT AS CHAR(8))
					  +'<= '+CAST(@CEIL_DISC_PCT AS CHAR(8))
					  +'=  '+CAST(@COMM_PCT AS CHAR(8))
					  +CAST(CAST(@QTY AS DECIMAL(10,2)) AS CHAR(10))
					  +CAST(CAST(@SALE_VALUE_AT_MRP AS DECIMAL(15,2)) AS CHAR(15))
					  +CAST(CAST(@DISC_AMT AS DECIMAL(10,2))AS CHAR(12))
					  +CAST(CAST(@DIC_AMOUNT AS DECIMAL(10,2)) AS CHAR(10))
					  +CAST(CASE ISNULL(@ATD_CHARGES,0) WHEN 0 THEN '' ELSE CAST(CAST(@ATD_CHARGES AS DECIMAL(10,2))AS VARCHAR) END AS CHAR(10))
					  +CAST(CAST(@REALIZED_SALE_VALUE+@ATD_CHARGES AS DECIMAL(10,2)) AS CHAR(12))
					  +CAST(CAST(@COMM_AMT AS DECIMAL(10,2)) AS CHAR(10))
					  +CAST(CAST(@ATD_CHARGES*@COMM_PCT/100 AS DECIMAL(10,2)) AS CHAR(10))
					  +CAST(CAST(@COMM_AMT+@ATD_CHARGES*@COMM_PCT/100 AS DECIMAL(10,2)) AS CHAR(10))
      --INSERT #CTEXT SELECT @CTEXT					  
	  --NEXT ROW				 
      FETCH NEXT FROM GENC INTO @FLOOR_DISC_PCT,@CEIL_DISC_PCT,@COMM_PCT,@QTY,@SALE_VALUE_AT_MRP,@DIC_AMOUNT,@REALIZED_SALE_VALUE,@COMM_AMT,@DISC_AMT,@ATD_CHARGES,@ROFF_CHARGES
  END
CLOSE GENC
DEALLOCATE GENC
--2/3
--PRINT @CTEXT
SELECT * FROM #CTEXT WHERE CTEXT1 IS NOT NULL ORDER BY 1

IF OBJECT_ID('TEMPDB..#GENTC') IS NOT NULL DROP TABLE #GENTC
SELECT SUM(CAST(QUANTITY AS DECIMAL(15,2))) AS QTY
,ROUND(SUM(CAST(SALE_VALUE_AT_MRP AS DECIMAL(20,2))),0) AS SALE_VALUE_AT_MRP
,ROUND(SUM(SALE_VALUE_AT_MRP)-SUM(REALIZED_SALE_VALUE),0) AS DISC_AMT
,ROUND(SUM(DIC_AMOUNT),0) AS DIC_AMOUNT
,ROUND(SUM(REALIZED_SALE_VALUE),0) AS REALIZED_SALE_VALUE
,ROUND(SUM(CAST(REALIZED_SALE_VALUE*COMM_PCT/100 AS DECIMAL(20,2))),0) AS COMM_AMT
,CAST(SUM(ATD_CHARGES) AS DECIMAL(20,2))AS ATD_AMT
,CAST(SUM(ROFF) AS DECIMAL(20,2))AS ROFF_AMT
INTO #GENTC
FROM #GENREPO
--UPDATE G1 SET G1.GC=1 FROM #GENTC G1
--JOIN(SELECT CM_NO,COUNT(*)CT FROM #GENC GROUP BY CM_NO)G2 ON G1.


DECLARE @LEN INT
SELECT @LEN=MAX(LEN(QTY)) FROM #GENTC
SELECT @LEN=CASE WHEN MAX(LEN(SALE_VALUE_AT_MRP))>@LEN THEN MAX(LEN(SALE_VALUE_AT_MRP)) ELSE @LEN END  FROM #GENTC
SELECT @LEN=CASE WHEN MAX(LEN(SALE_VALUE_AT_MRP))>@LEN THEN MAX(LEN(SALE_VALUE_AT_MRP)) ELSE @LEN END  FROM #GENTC
SELECT @LEN=CASE WHEN MAX(LEN(DISC_AMT))>@LEN THEN MAX(LEN(DISC_AMT)) ELSE @LEN END  FROM #GENTC
SELECT @LEN=CASE WHEN MAX(LEN(DIC_AMOUNT))>@LEN THEN MAX(LEN(DIC_AMOUNT)) ELSE @LEN END  FROM #GENTC
SELECT @LEN=CASE WHEN MAX(LEN(REALIZED_SALE_VALUE))>@LEN THEN MAX(LEN(REALIZED_SALE_VALUE)) ELSE @LEN END  FROM #GENTC
SELECT @LEN=CASE WHEN MAX(LEN(COMM_AMT))>@LEN THEN MAX(LEN(COMM_AMT)) ELSE @LEN END  FROM #GENTC
SELECT @LEN=CASE WHEN MAX(LEN(ATD_AMT))>@LEN THEN MAX(LEN(ATD_AMT)) ELSE @LEN END  FROM #GENTC

IF OBJECT_ID('TEMPDB..#CUR_LOC') IS NOT NULL DROP TABLE #CUR_LOC
SELECT DISTINCT DEPT_ID AS DEPT_ID INTO #CUR_LOC FROM GENREPO

IF OBJECT_ID('TEMPDB..#LOC_COMM') IS NOT NULL DROP TABLE #LOC_COMM
SELECT A.DEPT_ID,COMM_PCT INTO #LOC_COMM FROM #COMM_SETUP A JOIN #CUR_LOC B ON A.DEPT_ID=B.DEPT_ID

IF OBJECT_ID('TEMPDB..#CTEXT1') IS NOT NULL DROP TABLE #CTEXT1
CREATE TABLE #CTEXT1(CTEXT1 VARCHAR(MAX))

SELECT @NTOTATDAMT=SUM(ATD_CHARGES) FROM #GENREPO WHERE SALE_VALUE_AT_MRP IS NOT NULL
SET @NTOTATDAMT=ISNULL(@NTOTATDAMT,0)
--SELECT * FROM #GENREPO
DECLARE @COMM FLOAT
SELECT @COMM=ROUND(SUM(REALIZED_SALE_VALUE*COMM_PCT/100),0) FROM #GENREPO WHERE SALE_VALUE_AT_MRP IS NOT NULL
SELECT @CTEXT1=
		  CAST('TOTAL QTY 				: ' AS CHAR(30))+SPACE(@LEN-LEN(QTY))+CAST(CAST(QTY AS DECIMAL(20,2))AS VARCHAR) 
+CHAR(13)+CAST('TOTAL MRP VALUE			: ' AS CHAR(34))+SPACE(@LEN-LEN(SALE_VALUE_AT_MRP))+CAST(CAST(SALE_VALUE_AT_MRP AS DECIMAL(20,2)) AS VARCHAR) 
+CHAR(13)+CAST('TOTAL DISCOUNT			: ' AS CHAR(33))+SPACE(@LEN-LEN(DISC_AMT))+CAST(CAST(DISC_AMT AS DECIMAL(20,2)) AS VARCHAR)
+CHAR(13)+CAST('TOTAL DISCOUNT NEW		: ' AS CHAR(36))+SPACE(@LEN-LEN(DIC_AMOUNT))+CAST(CAST(DIC_AMOUNT AS DECIMAL(20,2)) AS VARCHAR)
+CHAR(13)+CAST('EXCLUSIVE TAX  AMT		: ' AS CHAR(36))+SPACE(@LEN-LEN((SALE_VALUE_AT_MRP-DISC_AMT)-(SALE_VALUE_AT_MRP-DIC_AMOUNT)))+CAST(CAST((SALE_VALUE_AT_MRP-DISC_AMT)-(SALE_VALUE_AT_MRP-DIC_AMOUNT) AS DECIMAL(20,2)) AS VARCHAR)   
+CHAR(13)+CAST('TOTAL SALE				: ' AS CHAR(30))+SPACE(@LEN-LEN(SALE_VALUE_AT_MRP-DISC_AMT))+CAST(CAST(SALE_VALUE_AT_MRP-DISC_AMT AS DECIMAL(20,2)) AS VARCHAR)
+CHAR(13)+CAST('TOTAL OTHER CHG.		: ' AS CHAR(34))+SPACE(@LEN-CASE ISNULL(@NTOTATDAMT,0) WHEN 0 THEN 4 ELSE LEN(@NTOTATDAMT) END)+CAST(CAST(@NTOTATDAMT AS DECIMAL(20,2)) AS VARCHAR)
+CHAR(13)+CAST('TOTAL NET SALE			: ' AS CHAR(33))+SPACE(@LEN-LEN(SALE_VALUE_AT_MRP-DISC_AMT+@NTOTATDAMT))+CAST(ROUND(CAST(SALE_VALUE_AT_MRP-DISC_AMT+@NTOTATDAMT AS DECIMAL(20,2)),0) AS VARCHAR)
--+CHAR(13)+CAST('TOTAL COMM.AMT.			: ' AS CHAR(34))+SPACE(@LEN-LEN(@COMM_AMT+@NTOTATDAMT*(SELECT TOP 1 COMM_PCT FROM #LOC_COMM)/100))+CAST(CAST(COMM_AMT+@NTOTATDAMT*(SELECT TOP 1 COMM_PCT FROM #LOC_COMM)/100 AS DECIMAL(20,2)) AS VARCHAR)
+CHAR(13)+CAST('TOTAL COMM.AMT.			: ' AS CHAR(34))+CAST(CAST(@COMM AS DECIMAL(20,2)) AS VARCHAR)
FROM #GENTC
DECLARE @POS INT
WHILE CHARINDEX(CHAR(13),@CTEXT1)>0
  BEGIN
     SET @POS=CHARINDEX(CHAR(13),@CTEXT1)
     SET @CTEXT=REPLACE(LEFT(@CTEXT1,@POS),CHAR(13),'')
     INSERT #CTEXT1 SELECT @CTEXT
     SET @CTEXT1=SUBSTRING(@CTEXT1,@POS+1,8000)
  END
--3/3
IF @CTEXT1<>''
   INSERT #CTEXT1 SELECT @CTEXT1
SELECT REPLACE(RTRIM(LEFT(CTEXT1,CHARINDEX(':',CTEXT1)-1)),CHAR(13),'')CTEXT1
,CAST(REPLACE(SUBSTRING(CTEXT1,CHARINDEX(':',CTEXT1)+1,1000),CHAR(13),'') AS DECIMAL(20,2)) CTEXT2 FROM #CTEXT1
SET NOCOUNT OFF
END
