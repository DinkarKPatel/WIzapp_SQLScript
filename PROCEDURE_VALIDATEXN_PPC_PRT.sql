CREATE PROCEDURE VALIDATEXN_PPC_PRT
 @CXNID VARCHAR(50),	
 @CERRORMSG VARCHAR(200) OUTPUT
 
AS
BEGIN
	DECLARE @CCMD NVARCHAR(4000),@NSUMPIDNET NUMERIC(14,2),@NSUBTOTAL NUMERIC(14,2),@NCALCTOTALAMOUNT NUMERIC(14,2),
	@NMSTTOTALAMOUNT NUMERIC(14,2), @NTAXVAL NUMERIC(14,2),@NCALCTAXVAL NUMERIC(14,2),@CPRODUCTCODE VARCHAR(50),
	@NCALCDISCOUNTAMT NUMERIC(14,2),@NDISCOUNTAMT NUMERIC(14,2),@CITEMNAME VARCHAR(100),
	@NCALCPURAMOUNT NUMERIC(14,2),@NPURAMOUNT NUMERIC(14,2),@NSUMSMTOTAL NUMERIC(14,2),@NSUMMMTOTAL	NUMERIC(14,2),
	@CCMDERRORMSG VARCHAR(2000),@NEXCISEDUTYAMOUNT NUMERIC(10,2),@CERRORPC VARCHAR(100),@DN_TYPE INT ,@BCALLEDFORPRINT INT
	SET @BCALLEDFORPRINT=0	
		
		
	DECLARE @CRMMTABLE TABLE ( RM_ID VARCHAR(22), RM_NO VARCHAR(15), RM_DT DATETIME, 
						   AC_CODE VARCHAR(10), FIN_YEAR VARCHAR(10), CANCELLED BIT,
						   SUBTOTAL NUMERIC(10,2), DISCOUNT_AMOUNT NUMERIC(10,2),
						   FREIGHT NUMERIC(10,2), OTHER_CHARGES NUMERIC(10,2),
						   ROUND_OFF NUMERIC(10,2), TOTAL_AMOUNT NUMERIC(10,2) ,
						   DISCOUNT_PERCENTAGE NUMERIC(10,2),MODE NUMERIC(1),DN_TYPE INT,MEMO_TYPE INT,
						   OTHER_CHARGES_IGST_AMOUNT NUMERIC(10,2),OTHER_CHARGES_CGST_AMOUNT  NUMERIC(10,2),OTHER_CHARGES_SGST_AMOUNT NUMERIC(10,2),
						   FREIGHT_IGST_AMOUNT  NUMERIC(10,2),FREIGHT_CGST_AMOUNT NUMERIC(10,2),FREIGHT_SGST_AMOUNT  NUMERIC(10,2),OH_TAX_METHOD NUMERIC(5,0)
						   )
						   
   DECLARE @CRMDTABLE TABLE ( RM_ID VARCHAR(22), PRODUCT_CODE VARCHAR(50), GROSS_PURCHASE_PRICE NUMERIC(14,4),PURCHASE_PRICE NUMERIC(14,4),
							   QUANTITY NUMERIC(10,3), AMOUNT NUMERIC(14,4),ITEM_FORM_ID CHAR(7),ITEM_TAX_AMOUNT NUMERIC(14,4),
							   DISCOUNT_PERCENTAGE NUMERIC(10,2), DISCOUNT_AMOUNT NUMERIC(10,2),
							   EXCISE_DUTY_AMOUNT NUMERIC(10,2),BILL_LEVEL_TAX_METHOD INT,INVOICE_QUANTITY NUMERIC(10,3)
							   ,MRR_ID VARCHAR(22),FDN_RATE  NUMERIC(10,2),
							   IGST_AMOUNT NUMERIC(14,4),
							   CGST_AMOUNT NUMERIC(14,4),
                               SGST_AMOUNT NUMERIC(14,4) ,
                               BILL_DT DATETIME
							   )
 
   
    
	INSERT @CRMMTABLE
	SELECT	RM_ID, RM_NO, RM_DT, AC_CODE, FIN_YEAR, CANCELLED, SUBTOTAL, DISCOUNT_AMOUNT,
			FREIGHT, OTHER_CHARGES, ROUND_OFF, TOTAL_AMOUNT, DISCOUNT_PERCENTAGE,1 AS MODE,1 AS DN_TYPE,1 AS MEMO_TYPE,
			OTHER_CHARGES_IGST_AMOUNT,OTHER_CHARGES_CGST_AMOUNT,OTHER_CHARGES_SGST_AMOUNT,
			FREIGHT_IGST_AMOUNT,FREIGHT_CGST_AMOUNT,FREIGHT_SGST_AMOUNT,OH_TAX_METHOD 
	FROM PPC_RMM01106 WHERE RM_ID = @CXNID

	INSERT @CRMDTABLE 
	SELECT	RM_ID, PRODUCT_CODE, GROSS_PURCHASE_PRICE, PURCHASE_PRICE, QUANTITY ,(INVOICE_QUANTITY*PURCHASE_PRICE) AS AMOUNT,
	'0000000' AS ITEM_FORM_ID,0 AS ITEM_TAX_AMOUNT,DISCOUNT_PERCENTAGE,DISCOUNT_AMOUNT,0 AS EXCISE_DUTY_AMOUNT,BILL_LEVEL_TAX_METHOD
	,INVOICE_QUANTITY,'' AS MRR_ID ,0 AS FDN_RATE,
    IGST_AMOUNT,CGST_AMOUNT,SGST_AMOUNT,BILL_DT
	FROM PPC_RMD01106 WHERE RM_ID = @CXNID 
			
	SET @CERRORMSG=''
	

	IF ISNULL(@BCALLEDFORPRINT,0)=0
	BEGIN
	-- IF CANCELLED MEMO THEN RETURN	
	IF EXISTS(SELECT A.AC_CODE FROM @CRMMTABLE A WHERE  CANCELLED=1)
		RETURN
    END		

	-- CHECKING IF PARTY IS BLANK OF INACTIVE
	IF ISNULL(@BCALLEDFORPRINT,0)=0
	BEGIN
	  IF EXISTS(SELECT A.AC_CODE FROM @CRMMTABLE A JOIN LMV01106  B ON A.AC_CODE=B.AC_CODE
			  WHERE   (B.AC_NAME='' OR B.INACTIVE=1) )
	BEGIN
		SET @CERRORMSG='BLANK OR INACTIVE PARTY NAME NOT ALLOWED....PLEASE CHECK'
		RETURN
	END
	END
	
	
	IF ISNULL(@BCALLEDFORPRINT,0)=0
	BEGIN
	-- CHECKING IF NOT RECORDS TO SAVE IN DETAIL
	IF NOT EXISTS(SELECT TOP 1 RM_ID FROM @CRMDTABLE ) AND NOT EXISTS (SELECT DN_TYPE FROM @CRMMTABLE WHERE DN_TYPE=2)
  	BEGIN
		SET @CERRORMSG='BLANK MEMO DETAILS CANNOT BE SAVED.....PLEASE CHECK'
		RETURN
	END 	
	
	IF EXISTS (SELECT RM_ID FROM @CRMMTABLE WHERE FIN_YEAR<>'01'+DBO.FN_GETFINYEAR(RM_DT))
  	BEGIN
		SET @CERRORMSG='MISMATCH BETWEEN RECEIPT DATE & FIN YEAR .....PLEASE CHECK'
		RETURN
	END 	
		
	IF EXISTS (SELECT RM_ID FROM @CRMMTABLE WHERE FIN_YEAR<>SUBSTRING(RM_ID ,3,5))
		BEGIN
		SET @CERRORMSG='MISMATCH BETWEEN MEMO ID & FIN YEAR ..... PLEASE CHECK'
		RETURN
	END 
END	

	-- BILL LEVEL SUBTOAL VALIDATION
	SELECT @NSUMMMTOTAL=SUM(PURCHASE_PRICE*INVOICE_QUANTITY) FROM @CRMDTABLE ---SUM(INVOICE_QUANTITY*ISNULL(FDN_RATE,0))
	SELECT @NSUBTOTAL =SUBTOTAL FROM @CRMMTABLE 
    
    PRINT STR(ISNULL(@NSUMPIDNET,0))+STR(ISNULL(@NSUBTOTAL,0))
    IF ISNULL(@DN_TYPE,0)<>2
    BEGIN
	IF ABS(ISNULL(@NSUMMMTOTAL,0)-ISNULL(@NSUBTOTAL,0))>1
	BEGIN
		SET @CERRORMSG='MISMATCH BETWEEN ITEM WISE TOTAL ('+LTRIM(RTRIM(STR(ISNULL(@NSUMMMTOTAL,0),10,2)))+') &
					    MEMO LEVEL SUBTOTAL ('+LTRIM(RTRIM(STR(ISNULL(@NSUBTOTAL,0),10,2)))+')..... CANNOT SAVE '
		RETURN
	END
    END
	-- CHECKING DISCOUNT AMOUNT AND DISCOUNT PERCENTAGE
	SELECT @NCALCDISCOUNTAMT = ROUND(SUBTOTAL*DISCOUNT_PERCENTAGE/100,0) FROM @CRMMTABLE
	
	SELECT @NDISCOUNTAMT = DISCOUNT_AMOUNT FROM @CRMMTABLE
	
	IF 	ABS(@NDISCOUNTAMT-ISNULL(@NCALCDISCOUNTAMT,0))>1
	BEGIN
		SET @CERRORMSG='MISMATCH BETWEEN EXPECTED DISCOUNT AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NCALCDISCOUNTAMT,0),10,2)))+') &
						UPDATED DISCOUNT AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NDISCOUNTAMT,0),10,2)))+')..... CANNOT SAVE '

		RETURN
	END
		
	
IF ISNULL(@BCALLEDFORPRINT,0)=0
	BEGIN
	-- CHECKING FOR ER_FLAG MARK W.R.T MASTER
	IF EXISTS(SELECT TOP 1 A.RM_ID FROM @CRMDTABLE A JOIN @CRMMTABLE B ON  A.RM_ID=B.RM_ID
			  JOIN SKU ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
			  WHERE(ISNULL(B.MEMO_TYPE,0)<>2 AND ISNULL(SKU.ER_FLAG,0)=2) OR (ISNULL(B.MEMO_TYPE,0)=2 AND ISNULL(SKU.ER_FLAG,0)<>2))
	BEGIN
		
		
		SELECT TOP 1 @CERRORPC=A.PRODUCT_CODE FROM @CRMDTABLE A JOIN @CRMMTABLE B ON  A.RM_ID=B.RM_ID
 	    JOIN SKU ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
		WHERE(ISNULL(B.MEMO_TYPE,0)<>2 AND ISNULL(SKU.ER_FLAG,0)=2) OR (ISNULL(B.MEMO_TYPE,0)=2 AND ISNULL(SKU.ER_FLAG,0)<>2)
			  
		SET @CERRORMSG='MEMO TYPE OF ITEM CODE :'+@CERRORPC+' DOES NOT MATCH WITH THAT OF MEMO....PLEASE CHECK'
		RETURN
	END
END
	-- CHECKING  MISMATCH BETWEEN FOR NET AMOUNT
	
	IF @DN_TYPE<>2
	BEGIN
		SELECT @NTAXVAL=SUM(CASE WHEN BILL_LEVEL_TAX_METHOD=1 THEN ITEM_TAX_AMOUNT+ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0) ELSE 0 END),
		@NEXCISEDUTYAMOUNT=SUM(EXCISE_DUTY_AMOUNT) FROM @CRMDTABLE
		
		SELECT @NCALCTOTALAMOUNT = (@NEXCISEDUTYAMOUNT+SUBTOTAL + ISNULL(@NTAXVAL,0) + ROUND_OFF + OTHER_CHARGES + FREIGHT) - DISCOUNT_AMOUNT
		 +CASE WHEN ISNULL(OH_TAX_METHOD,0)=2 THEN 0 ELSE (ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(OTHER_CHARGES_SGST_AMOUNT,0))
	     +( ISNULL(FREIGHT_IGST_AMOUNT,0)+ISNULL(FREIGHT_CGST_AMOUNT,0)+ISNULL(FREIGHT_SGST_AMOUNT,0)) END 
		FROM @CRMMTABLE 

		SELECT @NMSTTOTALAMOUNT = TOTAL_AMOUNT FROM @CRMMTABLE 
		
		IF ABS(ISNULL(@NMSTTOTALAMOUNT,0)-ISNULL(@NCALCTOTALAMOUNT,0))>1
		BEGIN
			SET @CERRORMSG = ' MISMATCH BETWEEN EXPECTED NET AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NCALCTOTALAMOUNT,0),14,4)))+')
						 & EXISTING BILL LEVEL NET AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NMSTTOTALAMOUNT,0),14,4))) +')..... CANNOT SAVE '
			RETURN
		END	
	END
	
	
	END_PROC:	
END	
--******************************************** END OF PROCEDURE VALIDATEXN_PRT
