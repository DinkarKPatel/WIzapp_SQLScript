CREATE PROCEDURE SP3S_INCENTIVE_REPT
(
 @CMONTH CHAR(2),
 @CFINYEAR VARCHAR(5),
 @DTFDATE DATETIME='',
 @CDEPT_ID VARCHAR(5)
)
AS	
BEGIN
	    DECLARE @CCMD NVARCHAR(MAX),@CFILTER NVARCHAR(MAX),@CMEMOID VARCHAR(30)
	    
	    DECLARE @TARGET NUMERIC(14,2),@NTYPE INT,@NT1 NUMERIC(14,2),@NT2 NUMERIC(14,2),@NT3 NUMERIC(14,2),
	            @NACTARGET NUMERIC(14,2),@NAC_PER_TARGET NUMERIC(14,2),@NCALBASE INT,@NCALAMOUNT1 NUMERIC(14,2),
	            @NCALAMOUNT2 NUMERIC(14,2),@NCALAMOUNT3 NUMERIC(14,2)
	    
	    DECLARE @TRESULT TABLE (
	                     DEPT_ID VARCHAR(5),MEMO_ID VARCHAR(30),INCENTIVE_TYPE INT
	                    ,TARGET_AMOUNT NUMERIC(14,2),ACHIVED_AMOUNT NUMERIC(14,2),
	                    QUANTITY NUMERIC(14,2),
	                     EMP_ID VARCHAR(100), INCENTIVE_AMOUNT NUMERIC(14,2)
	                     )
	    SET @DTFDATE = CONVERT (DATETIME,'1990-'+@CMONTH+'-01',120)
	    --#FILTERLIST THIS TABLE HAVE ALL FILTER APLICABLE FOR GIVEN LOCATION & FIN_YEAR	
		IF OBJECT_ID('TEMPDB..#FILTERLIST','U')IS NOT NULL
			DROP TABLE #FILTERLIST
			
			
		SELECT DISTINCT A.MEMO_ID,A.FILTER INTO #FILTERLIST	FROM SALEPERSON_TARGET_MST A
		JOIN SALEPERSON_TARGET_DET B ON A.MEMO_ID = B.MEMO_ID
		WHERE B.DEPT_ID = @CDEPT_ID AND B.FIN_YEAR = @CFINYEAR
		
		
		--#SALEDATA THIS TABLE HAVE SALE DATA ON WHICH INCENTIVE IS APLICABLE
		IF OBJECT_ID('TEMPDB..#SALEDATA','')IS NOT NULL
			DROP TABLE #SALEDATA
			
		CREATE TABLE #SALEDATA(MEMO_ID VARCHAR(30),RFNET NUMERIC(10,2),QUANTITY NUMERIC(10,3), EMP_CODE1 VARCHAR(7),EMP_CODE2 VARCHAR(7),EMP_CODE3 VARCHAR(7))	
			
		WHILE EXISTS (SELECT TOP 1 * FROM #FILTERLIST)
        BEGIN
        		     SELECT TOP 1 @CFILTER = FILTER,@CMEMOID=MEMO_ID FROM #FILTERLIST
					 SET @CCMD = 'SELECT '''+@CMEMOID+''' AS MEMO_ID,RFNET,A.QUANTITY,A.EMP_CODE,A.EMP_CODE1,A.EMP_CODE2 FROM CMD01106 A 
								 JOIN CMM01106 B ON A.CM_ID = B.CM_ID
								 JOIN SKU ON SKU.PRODUCT_CODE = A.PRODUCT_CODE
								 JOIN ARTICLE ON ARTICLE.ARTICLE_CODE = SKU.ARTICLE_CODE
								 JOIN SECTIOND ON SECTIOND.SUB_SECTION_CODE = ARTICLE.SUB_SECTION_CODE
								 JOIN SECTIONM ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE
								 JOIN PARA1 ON PARA1.PARA1_CODE = SKU.PARA1_CODE
								 JOIN PARA2 ON PARA2.PARA2_CODE = SKU.PARA2_CODE
								 JOIN PARA3 ON PARA3.PARA3_CODE = SKU.PARA3_CODE
								 JOIN PARA4 ON PARA4.PARA4_CODE = SKU.PARA4_CODE
								 JOIN PARA5 ON PARA5.PARA5_CODE = SKU.PARA5_CODE
								 JOIN PARA6 ON PARA6.PARA6_CODE = SKU.PARA6_CODE
								 LEFT OUTER JOIN ARTICLE_FIX_ATTR ATTR  (NOLOCK) ON ARTICLE.ARTICLE_CODE = ATTR.ARTICLE_CODE 
								LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE
								LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE
								LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE
								LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE
								LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE
								LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE
								LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE
								LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE
								LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE
								LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE
								LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE
								LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE
								LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE
								LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE
								LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE
								LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE
								LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE
								LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE
								LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE
								LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE
								LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE
								LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE
								LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE
								LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE
								LEFT OUTER JOIN ATTR25_MST AT25(NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE
								 WHERE B.CANCELLED=0 AND A.QUANTITY >0 AND B.FIN_YEAR='''+@CFINYEAR+'''
								 AND DATEPART(MM,B.CM_DT) = '''+@CMONTH+''' 
								 AND B.location_code = '''+@CDEPT_ID+'''
								 AND '+@CFILTER+'' 
					 PRINT @CCMD	
					 
					 INSERT INTO #SALEDATA(MEMO_ID,RFNET,QUANTITY,EMP_CODE1,EMP_CODE2,EMP_CODE3 )  
					 EXEC SP_EXECUTESQL @CCMD		 
					 DELETE FROM #FILTERLIST WHERE FILTER = @CFILTER
		END
	
		
		IF OBJECT_ID('TEMPDB..#INCENTIVEID','U')IS NOT NULL
			DROP TABLE #INCENTIVEID
			
		SELECT DISTINCT MEMO_ID INTO #INCENTIVEID FROM #SALEDATA
		
		WHILE EXISTS(SELECT TOP 1 * FROM #INCENTIVEID)
		BEGIN
		     SELECT TOP 1 @CMEMOID = MEMO_ID FROM #INCENTIVEID
		     
		     SET @CCMD = 'SELECT @TARGET = '+DATENAME(MM,@DTFDATE)+' FROM SALEPERSON_TARGET_DET
		                  WHERE VALUE_TYPE = 2 AND DEPT_ID = '''+@CDEPT_ID+''' AND MEMO_ID = '''+@CMEMOID+''''
		     PRINT @CCMD
		     EXEC SP_EXECUTESQL  @CCMD,N'@TARGET NUMERIC(14,2) OUTPUT',@TARGET OUTPUT
		     
		     
		     
			 SELECT @NACTARGET =SUM(RFNET) FROM #SALEDATA
		     WHERE MEMO_ID = @CMEMOID
		     
		   	      
		     
		     IF ISNULL(@TARGET,0) <> 0 
				SELECT @NAC_PER_TARGET=(@NACTARGET*100)/@TARGET
			 ELSE 	
		        SET @NAC_PER_TARGET = 0
		        
		    IF @NAC_PER_TARGET > 999
				SET @NAC_PER_TARGET = 999
				
					
			 SET @CCMD = N'SELECT 
			                     @NCALBASE=CAL_BASIS,
			                     @NCALAMOUNT1=CAL_VALUE1,
			                     @NCALAMOUNT2=CAL_VALUE2,
			                     @NCALAMOUNT3=CAL_VALUE3 
			                     FROM SALEPERSON_TARGET_SUBDET
			                     WHERE MEMO_ID = '''+@CMEMOID+''' 
			                     AND '+RTRIM(LTRIM(STR(@NAC_PER_TARGET)))+' 
			                     BETWEEN FM_PERCENTAGE AND TO_PERCENTAGE'
			 PRINT @CCMD
			 EXEC SP_EXECUTESQL  @CCMD,N'@NCALBASE INT OUTPUT,@NCALAMOUNT1 NUMERIC(14,2) OUTPUT,@NCALAMOUNT2 NUMERIC(14,2) OUTPUT,@NCALAMOUNT3 NUMERIC(14,2) OUTPUT',
			       @NCALBASE OUTPUT, @NCALAMOUNT1 OUTPUT, @NCALAMOUNT2 OUTPUT,@NCALAMOUNT3 OUTPUT                          	
		     
		     --SELECT @NCALBASE,@NCALAMOUNT1,@NCALAMOUNT2,@NCALAMOUNT3
		     
		  
		      SET @CCMD = N'SELECT '''+@CDEPT_ID+''' AS DEPT_ID,'''+@CMEMOID+''' AS MEMO_ID,
						  '+RTRIM(LTRIM(STR(@NCALBASE)))+','+RTRIM(LTRIM(STR(@TARGET)))+','+RTRIM(LTRIM(STR(@NACTARGET)))+',QUANTITY,EMP_CODE1,
						  '+(CASE WHEN @NCALBASE=1 THEN '(RFNET*'+RTRIM(LTRIM(CONVERT(VARCHAR(10),@NCALAMOUNT1)))+')/100' ELSE '(QUANTITY*'+RTRIM(LTRIM(STR(@NCALAMOUNT1)))+')' END)+'
						  FROM #SALEDATA 
						  WHERE EMP_CODE1 <> ''0000000''
						  UNION ALL
						  SELECT '''+@CDEPT_ID+''' AS DEPT_ID,'''+@CMEMOID+''' AS MEMO_ID,
						  '+RTRIM(LTRIM(STR(@NCALBASE)))+','+RTRIM(LTRIM(STR(@TARGET)))+','+RTRIM(LTRIM(STR(@NACTARGET)))+',QUANTITY,EMP_CODE2,
						  '+(CASE WHEN @NCALBASE=1 THEN '(RFNET*'+RTRIM(LTRIM(CONVERT(VARCHAR(10),@NCALAMOUNT2)))+')/100' ELSE '(QUANTITY*'+RTRIM(LTRIM(STR(@NCALAMOUNT2)))+')' END)+'
						  FROM #SALEDATA 
						  WHERE EMP_CODE2 <> ''0000000''
						  UNION ALL
						  SELECT '''+@CDEPT_ID+''' AS DEPT_ID,'''+@CMEMOID+''' AS MEMO_ID,
						  '+RTRIM(LTRIM(STR(@NCALBASE)))+','+RTRIM(LTRIM(STR(@TARGET)))+','+RTRIM(LTRIM(STR(@NACTARGET)))+',QUANTITY,EMP_CODE3,
						  '+(CASE WHEN @NCALBASE=1 THEN '(RFNET*'+RTRIM(LTRIM(CONVERT(VARCHAR(10),@NCALAMOUNT3)))+')/100' ELSE '(QUANTITY*'+RTRIM(LTRIM(STR(@NCALAMOUNT3)))+')' END)+'
						  FROM #SALEDATA 
						  WHERE EMP_CODE3 <> ''0000000'''
						  
			  PRINT @CCMD 
			 			 
			  INSERT INTO @TRESULT(DEPT_ID,MEMO_ID,INCENTIVE_TYPE,TARGET_AMOUNT,ACHIVED_AMOUNT,QUANTITY,EMP_ID,INCENTIVE_AMOUNT)
		      EXEC SP_EXECUTESQL @CCMD
		    
		      --SELECT * FROM @TRESULT
		     
		      DELETE FROM #INCENTIVEID WHERE MEMO_ID =  @CMEMOID
      		 
        END	
        
        SELECT A.DEPT_ID,B.DEPT_NAME,C.TITLE_NAME,D.EMP_NAME,A.TARGET_AMOUNT,A.ACHIVED_AMOUNT,
		(CASE WHEN INCENTIVE_TYPE= 1 THEN 'NET REALIZE VALUE ' ELSE 'PER UOM' END) INCENTIVE_TYPE ,SUM(QUANTITY) AS QUANTITY,SUM(INCENTIVE_AMOUNT) AS  INCENTIVE_AMOUNT FROM @TRESULT A
		JOIN LOCATION B ON A.DEPT_ID=B.DEPT_ID
		JOIN SALEPERSON_TARGET_MST C ON C.MEMO_ID = A.MEMO_ID 
		JOIN EMPLOYEE D ON D.EMP_CODE = A.EMP_ID
		GROUP BY A.DEPT_ID,B.DEPT_NAME,C.TITLE_NAME,D.EMP_NAME,A.TARGET_AMOUNT,A.ACHIVED_AMOUNT,
	    (CASE WHEN INCENTIVE_TYPE= 1 THEN 'NET REALIZE VALUE ' ELSE 'PER UOM' END)
		
END
