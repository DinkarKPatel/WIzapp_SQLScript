create PROCEDURE POSTACT_RCM
(
	@DTTO DATETIME,
	@CDEPTID CHAR(4)=''
)
AS
BEGIN
    DECLARE @CSTEP VARCHAR(10),@BPOSTDISCOUNTSEPARATELY BIT,@CDISCACCODE VARCHAR(10),@BPOSTFREIGHTSEPARATELY	BIT
			,@CPETTYCASHACCODE VARCHAR(10),@BPOSTOCTROISEPARATELY BIT,@COCTROIACCODE VARCHAR(10),
			@BPOSTINSURANCESEPARATELY BIT,@CINSURANCEACCODE VARCHAR(10),
			@BPOSTOTHERCHARGESSEPARATELY BIT,@COTHERCHARGESACCODE VARCHAR(10),@BPOSTROUNDOFFSEPARATELY BIT,@CROUNDOFFACCODE VARCHAR(10),@NCTR NUMERIC(10,0),
			@NSUBTOTAL NUMERIC(14,2),@NTAXAMOUNT NUMERIC(14,2), @CPURACCODE VARCHAR(50),@CTAXACCODE VARCHAR(100),
			@LPOSTTAXSEPARATELY NUMERIC(14,2),@CMEMOID VARCHAR(50),@LOUTSTATIONPARTY BIT,@TMPDR NUMERIC(14,2),
			@TMPCR NUMERIC(14,2),@CCURSTATECODE	VARCHAR(10),@CVMID	VARCHAR(40),@CLOCATIONID CHAR(2),
			@CLASTBILLNO VARCHAR(40),@DTMPVENDORBILLDT DATETIME,@CRMLIST VARCHAR(300),@NTMPCREDITDAYS NUMERIC(10),
			@NTMPCRDISCOUNTPERCENTAGE NUMERIC(14,2),@DLASTINVDT	DATETIME,@CVOUCHERCODE VARCHAR(10),
			@COLDBILLTYPE VARCHAR(10),@CLASTACCODE VARCHAR(10),@CLASTPARTYNAME VARCHAR(100),@NTOTQUANTITY NUMERIC(14,2),
			@NTOTNETAMOUNT NUMERIC(14,2),@CDEPTNAME VARCHAR(100),@CVOUCHERNO VARCHAR(10),@CCASHAC VARCHAR(10)
	SET @CSTEP=10
	DECLARE @CPARTYACCODE VARCHAR(10),@CPARTYSTATECODE VARCHAR(10),@NNETAMOUNT NUMERIC(14,2),
			@NDISCAMOUNT NUMERIC(14,2),@NFREIGHT NUMERIC(14,2),	@NOTHER NUMERIC(14,2),@NROUNDOFF NUMERIC(14,2),
			@NDRTOTAL NUMERIC(14,2),@NCRTOTAL NUMERIC(14,2),@CCUTOFFDATE VARCHAR(20),@CXNTYPE VARCHAR(10)
			,@CAC_CODE VARCHAR(20),@CVDID VARCHAR(40),@CCASHACCODE VARCHAR(10)
			,@CRCMXNTYPE VARCHAR(50),@CREFMEMOID VARCHAR(40),@CPARTYNAME VARCHAR(500),@CNARRATION VARCHAR(1000)
    
    SET @CSTEP=20
    --THIS TABLE VARIABLE STORE ERROR OF OF MEMO ID
    DECLARE @ERRORS TABLE
	(
		XN_ID	VARCHAR(40),XN_TYPE VARCHAR(30),XN_NO VARCHAR(40),
		XN_DT DATETIME,XN_AMT NUMERIC(14,2),XN_AC VARCHAR(100),
		ERR_DESC VARCHAR(500)
	)   
    
    SET @CSTEP=30
    DECLARE @VCHC TABLE 
	(
		AC_CODE CHAR(10),NARRATION VARCHAR(200),XN_NO VARCHAR(30),
		XN_DT DATETIME,DEPT_ID CHAR(4),AMOUNT NUMERIC(14,4),XN_ID VARCHAR(22),
		REF_BILL_NO VARCHAR(50),REF_BILL_DATE DATETIME,	ENTRY_ID INT
		,CRDAYS NUMERIC(5),REMARKS VARCHAR(MAX)
	)
	
	SET @CSTEP=40
	DECLARE @VDC TABLE 
	(
		VD_ID VARCHAR(50),				VM_ID VARCHAR(40),				AC_CODE CHAR(10), 
		NARRATION VARCHAR(200),			DEBIT_AMOUNT NUMERIC(14,4),		CREDIT_AMOUNT NUMERIC(14,4),
		X_TYPE CHAR(2), 				VS_AC_CODE CHAR(10),	 		REF_BILL_NO VARCHAR(40), 
		CREDIT_DAYS NUMERIC(10),		CR_DISCOUNT_PERCENTAGE NUMERIC(14,2),		
		VAT_ENTRY BIT,REF_BILL_DATE DATETIME, AC_NAME VARCHAR(100)
	)
	
	SET @CSTEP=50
	DECLARE @VMC TABLE
	(
		VM_ID VARCHAR(400), 			VOUCHER_NO VARCHAR(400), 		VOUCHER_DT DATETIME, 
		VOUCHER_CODE CHAR(100), 		DEPT_ID CHAR(20),				BILL_TYPE VARCHAR(300),
		BILL_NO VARCHAR(200), 			BILL_ID VARCHAR(220), 			BILL_DT DATETIME, 
		BILL_AC_CODE VARCHAR(100),		DRTOTAL NUMERIC(20,2),			CRTOTAL NUMERIC(20,2), 
		CASH_VOUCHER BIT, 				SALE_VOUCHER BIT, 				QUANTITY NUMERIC(20,2), 
		ANGADIA_CODE CHAR(70), 			LR_NO VARCHAR(500), 			LR_DT DATETIME,
		PARTY_NAME VARCHAR(1000),		NET_AMOUNT NUMERIC(20,2), 		BILL_STATUS VARCHAR(1000),
		RM_LIST VARCHAR(3000), 		CANCELLED BIT,					DEPT_NAME VARCHAR(100),
		VOUCHER_TYPE VARCHAR(100)	
	)
	
	SET @CSTEP=60
	DECLARE @VLINK TABLE
	(
		VM_ID VARCHAR(100),MEMO_ID VARCHAR(100),XN_TYPE VARCHAR(20),LAST_UPDATE DATETIME
	)
	
	DECLARE @TBILL_BY_BILL_REF TABLE(VD_ID VARCHAR(40),MEMO_NO VARCHAR(40),AMOUNT NUMERIC(18,4),LAST_UPDATE DATETIME
								,X_TYPE VARCHAR(20),CR_DAYS NUMERIC(5),REF_TYPE VARCHAR(10))
	
	SET @CCUTOFFDATE=''
	
	SET @CSTEP=70
	SET @CVOUCHERCODE = '0000000008'
    BEGIN TRY
			
			SET @CSTEP=80
			IF OBJECT_ID('TEMPDB..#POSTS','U') IS NOT NULL
				DROP TABLE #POSTS 
			
			SET @CSTEP=90
			--THIS TABLE STORE ALL PENDING MEMO_ID 
			CREATE TABLE #POSTS (MEMO_ID VARCHAR(30),MODE VARCHAR(10))
			
			SET @CSTEP=100
			--GETTING LIST OF PETTYCASH EXPENSE INVOICES THAT QUALIFY FOR VOUCHER POSTING
			INSERT INTO #POSTS (MEMO_ID)
	        SELECT A.MEMO_ID
	        FROM RCM01106 A
	        JOIN LOCATION SL ON SL.DEPT_ID =a.location_Code 
	        LEFT OUTER JOIN 
	        ( 
				SELECT B.MEMO_ID,B.LAST_UPDATE
				FROM POSTACT_VOUCHER_LINK B 
				JOIN VM01106 C ON C.VM_ID = B.VM_ID 
				WHERE C.CANCELLED=0 AND B.XN_TYPE = 'RCM' 
	        )VM  ON A.MEMO_ID = VM.MEMO_ID  
	        WHERE  
	         -- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES
            (ISNULL(SL.LOC_TYPE,0)=1 OR ISNULL(SL.ACCOUNT_POSTING_AT_HO,0)=1) AND 
	        /*PETTYCASH EXPENSE IS NOT CANCELLED.*/
	        ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)	 	
	        /*PETTYCASH EXPENSE INV_DT IS LESS THAN THE SPECIFIED DATE.*/
	        AND A.MEMO_DT <= @DTTO
	        /*IF CUTOFF DATE IS SPECIFIED, CONSIDER PETTYCASH EXPENSE AFTER THE CUTOFF DATE*/
	        AND (ISNULL(@CCUTOFFDATE,'')='' OR A.MEMO_DT>@CCUTOFFDATE)
	        /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/
	        AND (ISNULL(@CDEPTID,'')='' OR a.location_Code =@CDEPTID)
	        /*PETTYCASH EXPENSE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/
	        AND VM.MEMO_ID IS NULL
	        
	        SET @CSTEP=150
	        -- POSTING FOR BANK TRANSFER
			INSERT @ERRORS ( XN_ID,XN_TYPE, XN_NO, XN_DT, XN_AMT, XN_AC, ERR_DESC )
			SELECT A.MEMO_ID AS XN_ID,'RCM' AS XN_TYPE,RCM.MEMO_NO AS XN_NO,RCM.MEMO_DT AS XN_DT
			,RCM.TOTAL_REVERSE_CHARGES AS XN_AMT,'' AS XN_AC
			,(CASE WHEN A.IGST_AMOUNT<>0 AND ISNULL(GPC_I.IGST_TAX_AC_CODE,'0000000000') IN ('','0000000000')
				   THEN	'IGST INPUT A/C NOT SPECIFIED FOR '+LTRIM(RTRIM(STR(A.GST_PERCENTAGE,6,2)))+'%'
				   WHEN A.IGST_AMOUNT<>0 AND ISNULL(GPC_O.IGST_TAX_AC_CODE,'0000000000') IN ('','0000000000')
				   THEN	'IGST OUTPUT A/C NOT SPECIFIED FOR '+LTRIM(RTRIM(STR(A.GST_PERCENTAGE,6,2)))+'%'		
				   WHEN A.CGST_AMOUNT<>0 AND ISNULL(GPC_I.CGST_TAX_AC_CODE,'0000000000') IN ('','0000000000')
				   THEN	'CGST INPUT A/C NOT SPECIFIED FOR '+LTRIM(RTRIM(STR(A.GST_PERCENTAGE,6,2)))+'%'
				   WHEN A.CGST_AMOUNT<>0 AND ISNULL(GPC_O.CGST_TAX_AC_CODE,'0000000000') IN ('','0000000000')
				   THEN	'CGST OUTPUT A/C NOT SPECIFIED FOR '+LTRIM(RTRIM(STR(A.GST_PERCENTAGE,6,2)))+'%'		
				   WHEN A.SGST_AMOUNT<>0 AND ISNULL(GPC_I.SGST_TAX_AC_CODE,'0000000000') IN ('','0000000000')
				   THEN	'SGST INPUT A/C NOT SPECIFIED FOR '+LTRIM(RTRIM(STR(A.GST_PERCENTAGE,6,2)))+'%'
				   WHEN A.SGST_AMOUNT<>0 AND ISNULL(GPC_O.SGST_TAX_AC_CODE,'0000000000') IN ('','0000000000')
				   THEN	'SGST OUTPUT A/C NOT SPECIFIED FOR '+LTRIM(RTRIM(STR(A.GST_PERCENTAGE,6,2)))+'%'		
				   ELSE 'UNKNOWN ERROR' END) AS ERR_DESC
				   
			FROM RCD01106 A
			JOIN RCM01106 RCM ON RCM.MEMO_ID=A.MEMO_ID
			JOIN #POSTS PST ON A.MEMO_ID=PST.MEMO_ID	
			LEFT OUTER JOIN GST_POSTING_CONFIG GPC_I ON GPC_I.GST_PERCENTAGE=A.GST_PERCENTAGE AND GPC_I.XN_TYPE='RCMIN'
			LEFT OUTER JOIN GST_POSTING_CONFIG GPC_O ON GPC_O.GST_PERCENTAGE=A.GST_PERCENTAGE AND GPC_O.XN_TYPE='RCMOUT'
			WHERE ((A.IGST_AMOUNT<>0 AND (ISNULL(GPC_I.IGST_TAX_AC_CODE,'0000000000') IN ('','0000000000') OR
										  ISNULL(GPC_O.IGST_TAX_AC_CODE,'0000000000') IN ('','0000000000')))
			OR     (A.CGST_AMOUNT<>0 AND (ISNULL(GPC_I.CGST_TAX_AC_CODE,'0000000000') IN ('','0000000000') OR
										  ISNULL(GPC_O.CGST_TAX_AC_CODE,'0000000000') IN ('','0000000000')))
			OR	   (A.SGST_AMOUNT<>0 AND (ISNULL(GPC_I.SGST_TAX_AC_CODE,'0000000000') IN ('','0000000000') OR
										  ISNULL(GPC_O.SGST_TAX_AC_CODE,'0000000000') IN ('','0000000000'))))											  
			
			SET @CSTEP = 330
			CREATE INDEX IX_TEMP_RCMTABLE_RM_ID ON #POSTS(MEMO_ID)
		
	        SET @CSTEP = 350
	        --DELETE MEMO_ID FROM TEPM TABLE WHICH HAVE SOME ERROR
	        DELETE A 
	        FROM #POSTS A 
	        JOIN @ERRORS B ON A.MEMO_ID = B.XN_ID
	        
	        --SELECT COUNT(*) FROM #POSTS
	        SET @CSTEP = 360
	        IF OBJECT_ID('TEMPDB..#V_PROCESS','U') IS NOT NULL
				DROP TABLE #V_PROCESS
			
			SET @CSTEP = 370
			SELECT    A.MEMO_NO
			, A.MEMO_ID
			, A.MEMO_DT
			, A.FIN_YEAR
			, C.AC_NAME AS PARTY_NAME
			, A.CANCELLED,a.location_code as dept_id 
			INTO #V_PROCESS
			FROM RCM01106 A 
			JOIN #POSTS PST ON A.MEMO_ID=PST.MEMO_ID
			JOIN LM01106 C ON A.AC_CODE = C.AC_CODE
	
		
		CREATE INDEX IX_V_PROCESS_RM_ID ON #V_PROCESS(MEMO_ID)
		
		SELECT @CMEMOID='',@CXNTYPE='RCM',@CAC_CODE='',@NCTR=1
		
		SET @CSTEP = 380
		WHILE EXISTS(SELECT TOP 1 'U' FROM #V_PROCESS)
		BEGIN

		   SET @CSTEP = 390  
		   SELECT TOP 1 @CMEMOID=MEMO_ID,@CPARTYNAME=PARTY_NAME  FROM #V_PROCESS  
		   
		   SELECT TOP 1 @CRCMXNTYPE=XN_TYPE,@CREFMEMOID=MEMO_ID 
		   FROM RCM_PUR_EXPENSE WHERE RCM_MEMO_ID=@CMEMOID
		   
		   IF @CRCMXNTYPE='PUR'
				SELECT @CNARRATION='(PURCHASE FROM :'+@CPARTYNAME+' AGST. BILL#'+INV_NO+' DATED :'+
				CONVERT(VARCHAR,INV_DT,105)+')' FROM PIM01106 WHERE MRR_ID=@CREFMEMOID 
		   ELSE
				SELECT @CNARRATION='(INWARD SUPPLY/EXPENSE FROM :'+@CPARTYNAME+')'
				  
		   SET @CSTEP = 400  
			
		   IF @CMEMOID='GH111800000GH00000078'	
			SELECT 'CHECK RCM#78',* FROM 
			(
			   SELECT IGST_TAX_AC_CODE,SUM(IGST_AMOUNT)*(CASE WHEN GPC.XN_TYPE='RCMIN' THEN 1 ELSE -1 END) AS AMOUNT  
				  ,'REVERSE CHARGES (IGST) FOR DATE : '+LTRIM(RTRIM(CONVERT(VARCHAR,MEMO_DT,105)))  
				   +' MEMO NO. : '+LTRIM(RTRIM(MEMO_NO))+@CNARRATION AS NARRATION,MEMO_NO,A.MEMO_ID  ,MEMO_DT
			   FROM #V_PROCESS A
			   JOIN RCD01106 B ON A.MEMO_ID=B.MEMO_ID
			   JOIN GST_POSTING_CONFIG GPC ON GPC.GST_PERCENTAGE=B.GST_PERCENTAGE
			   WHERE A.MEMO_ID=@CMEMOID AND GPC.XN_TYPE IN ('RCMIN','RCMOUT') AND IGST_AMOUNT<>0
			   GROUP BY IGST_TAX_AC_CODE,MEMO_NO,A.MEMO_ID ,MEMO_DT,GPC.XN_TYPE
			   
			   UNION ALL
			   SELECT CGST_TAX_AC_CODE,SUM(CGST_AMOUNT)*(CASE WHEN GPC.XN_TYPE='RCMIN' THEN 1 ELSE -1 END) AS AMOUNT  
				  ,'REVERSE CHARGES (LOCAL) FOR DATE : '+LTRIM(RTRIM(CONVERT(VARCHAR,MEMO_DT,105)))  
				   +' MEMO NO. : '+LTRIM(RTRIM(MEMO_NO))+@CNARRATION AS NARRATION,MEMO_NO,A.MEMO_ID  ,MEMO_DT
			   FROM #V_PROCESS A
			   JOIN RCD01106 B ON A.MEMO_ID=B.MEMO_ID
			   JOIN GST_POSTING_CONFIG GPC ON GPC.GST_PERCENTAGE=B.GST_PERCENTAGE
			   WHERE A.MEMO_ID=@CMEMOID AND GPC.XN_TYPE IN ('RCMIN','RCMOUT') AND CGST_AMOUNT<>0
			   GROUP BY CGST_TAX_AC_CODE,MEMO_NO,A.MEMO_ID  ,MEMO_DT,GPC.XN_TYPE
			   
			   UNION ALL
			   SELECT SGST_TAX_AC_CODE,SUM(SGST_AMOUNT)*(CASE WHEN GPC.XN_TYPE='RCMIN' THEN 1 ELSE -1 END) AS AMOUNT  
				  ,'REVERSE CHARGES (LOCAL) FOR DATE : '+LTRIM(RTRIM(CONVERT(VARCHAR,MEMO_DT,105)))  
				   +' MEMO NO. : '+LTRIM(RTRIM(MEMO_NO))+@CNARRATION AS NARRATION,MEMO_NO,A.MEMO_ID  ,MEMO_DT
			   FROM #V_PROCESS A
			   JOIN RCD01106 B ON A.MEMO_ID=B.MEMO_ID
			   JOIN GST_POSTING_CONFIG GPC ON GPC.GST_PERCENTAGE=B.GST_PERCENTAGE
			   WHERE A.MEMO_ID=@CMEMOID AND  GPC.XN_TYPE IN ('RCMIN','RCMOUT') AND SGST_AMOUNT<>0
			   GROUP BY SGST_TAX_AC_CODE,MEMO_NO,A.MEMO_ID  ,MEMO_DT,GPC.XN_TYPE
		   ) A
		   
		   
		   --GST TAX A/C SHOULD BE DEBITED
		   INSERT @VCHC ( AC_CODE, AMOUNT,NARRATION,XN_NO,XN_ID,XN_DT  )  
		   SELECT IGST_TAX_AC_CODE,SUM(IGST_AMOUNT)*(CASE WHEN GPC.XN_TYPE='RCMIN' THEN 1 ELSE -1 END) AS AMOUNT  
			  ,'REVERSE CHARGES IGST FOR DATE : '+LTRIM(RTRIM(CONVERT(VARCHAR,MEMO_DT,105)))  
			   +' MEMO NO. : '+LTRIM(RTRIM(MEMO_NO))+@CNARRATION,MEMO_NO,A.MEMO_ID  ,MEMO_DT
		   FROM #V_PROCESS A
		   JOIN RCD01106 B ON A.MEMO_ID=B.MEMO_ID
		   JOIN GST_POSTING_CONFIG GPC ON GPC.GST_PERCENTAGE=B.GST_PERCENTAGE
		   WHERE A.MEMO_ID=@CMEMOID AND GPC.XN_TYPE IN ('RCMIN','RCMOUT') AND IGST_AMOUNT<>0
		   GROUP BY IGST_TAX_AC_CODE,MEMO_NO,A.MEMO_ID ,MEMO_DT,GPC.XN_TYPE
		   
		   UNION ALL
		   SELECT CGST_TAX_AC_CODE,SUM(CGST_AMOUNT)*(CASE WHEN GPC.XN_TYPE='RCMIN' THEN 1 ELSE -1 END) AS AMOUNT  
			  ,'REVERSE CHARGES LOCAL FOR DATE : '+LTRIM(RTRIM(CONVERT(VARCHAR,MEMO_DT,105)))  
			   +' MEMO NO. : '+LTRIM(RTRIM(MEMO_NO))+@CNARRATION,MEMO_NO,A.MEMO_ID  ,MEMO_DT
		   FROM #V_PROCESS A
		   JOIN RCD01106 B ON A.MEMO_ID=B.MEMO_ID
		   JOIN GST_POSTING_CONFIG GPC ON GPC.GST_PERCENTAGE=B.GST_PERCENTAGE
		   WHERE A.MEMO_ID=@CMEMOID AND GPC.XN_TYPE IN ('RCMIN','RCMOUT') AND CGST_AMOUNT<>0
		   GROUP BY CGST_TAX_AC_CODE,MEMO_NO,A.MEMO_ID  ,MEMO_DT,GPC.XN_TYPE
		   
		   UNION ALL
		   SELECT SGST_TAX_AC_CODE,SUM(SGST_AMOUNT)*(CASE WHEN GPC.XN_TYPE='RCMIN' THEN 1 ELSE -1 END) AS AMOUNT  
			  ,'REVERSE CHARGES LOCAL FOR DATE : '+LTRIM(RTRIM(CONVERT(VARCHAR,MEMO_DT,105)))  
			   +' MEMO NO. : '+LTRIM(RTRIM(MEMO_NO))+@CNARRATION,MEMO_NO,A.MEMO_ID  ,MEMO_DT
		   FROM #V_PROCESS A
		   JOIN RCD01106 B ON A.MEMO_ID=B.MEMO_ID
		   JOIN GST_POSTING_CONFIG GPC ON GPC.GST_PERCENTAGE=B.GST_PERCENTAGE
		   WHERE A.MEMO_ID=@CMEMOID AND  GPC.XN_TYPE IN ('RCMIN','RCMOUT') AND SGST_AMOUNT<>0
		   GROUP BY SGST_TAX_AC_CODE,MEMO_NO,A.MEMO_ID  ,MEMO_DT,GPC.XN_TYPE
				   	   		   	     
				   	   		   	     
		   SET @CSTEP = 500  
		   SET @CVMID = ''  
		   SELECT @CVMID = A.VM_ID   
		   FROM POSTACT_VOUCHER_LINK A  
			JOIN VM01106 B ON A.VM_ID=B.VM_ID  
			 WHERE B.CANCELLED=0 AND A.MEMO_ID = @CMEMOID AND A.XN_TYPE=@CXNTYPE  
		     
		   SET @CSTEP = 510  
		   IF ISNULL(@CVMID,'') = ''  
		   BEGIN  
			   SET @CVMID = 'LATER-'+RTRIM(LTRIM(CONVERT(VARCHAR,@NCTR)))  
			   SET @NCTR = @NCTR+1  
		   END  
		     
		   SET @CSTEP = 520  
		   INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )  
		   SELECT @CVMID,@CMEMOID,@CXNTYPE,LAST_UPDATE FROM RCM01106 WHERE MEMO_ID = @CMEMOID  
		     
		   SET @CSTEP = 530  
		   INSERT @VDC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE,   
				CREDIT_DAYS, CR_DISCOUNT_PERCENTAGE,AC_NAME )  
		   SELECT @CVMID  
			, 'LATER-'+CONVERT(VARCHAR,ROW_NUMBER() OVER(ORDER BY A.AC_CODE)) AS VD_ID  
			, A.AC_CODE  
			,A.NARRATION AS NARRATION  
			,(CASE WHEN SUM(AMOUNT)>0 THEN SUM(AMOUNT) ELSE 0 END) AS DEBIT_AMOUNT  
			,(CASE WHEN SUM(AMOUNT)<0 THEN ABS(SUM(AMOUNT)) ELSE 0 END) AS CREDIT_AMOUNT  
			,(CASE WHEN SUM(AMOUNT) > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE  
			,A.CRDAYS  
			,0  
			,B.AC_NAME  
			FROM @VCHC A  
			JOIN LM01106 B ON A.AC_CODE = B.AC_CODE  
			WHERE XN_ID = @CMEMOID  
			GROUP BY A.ENTRY_ID ,A.AC_CODE,A.NARRATION,B.AC_NAME,A.CRDAYS  
			ORDER BY X_TYPE,ABS(SUM(AMOUNT)) DESC  
		     
			SET @CSTEP = 540  
			SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC  
			WHERE VM_ID = @CVMID  
		        
			SET @CSTEP = 550      
			SET @CVOUCHERNO = ''   
			SELECT TOP 1 @CVOUCHERNO = VOUCHER_NO FROM VM01106 WHERE VM_ID = @CVMID  
			
			IF ISNULL(@CVOUCHERNO,'') = ''  
				SET @CVOUCHERNO = @CVMID  
		           
			SET @CSTEP = 560  
			INSERT @VMC ( VM_ID, VOUCHER_DT, VOUCHER_CODE, DEPT_ID,   
			   BILL_TYPE, BILL_NO, BILL_ID, BILL_DT,   
			   PARTY_NAME, QUANTITY, NET_AMOUNT, CANCELLED )  
		     
			SELECT TOP 1 @CVMID,MEMO_DT,@CVOUCHERCODE,dept_id AS DEPT_ID  
			 ,@CXNTYPE,MEMO_NO,MEMO_ID,MEMO_DT,'',0,0,CANCELLED  
			FROM #V_PROCESS  
			WHERE MEMO_ID=@CMEMOID  
		     
			SET @CSTEP = 570  
			DELETE @VCHC  
		    
		     
			DELETE FROM #V_PROCESS WHERE MEMO_ID = @CMEMOID
		
		END			 			

ENDPROC:
    
    SET @CSTEP = 580
    SELECT * FROM @VMC ORDER BY VM_ID
    SELECT * FROM @VDC ORDER BY VM_ID
    SELECT * FROM @ERRORS
    SELECT * FROM @VLINK ORDER BY VM_ID
    
    END TRY
	BEGIN CATCH
			SELECT 'STEP:- '+@CSTEP+' '+ERROR_MESSAGE()AS  ERRMSG
	END CATCH
	        
END
--END OF PROCEDURE - POSTACT_RCM
