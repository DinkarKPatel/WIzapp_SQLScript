CREATE PROCEDURE SP3S_SYNCH_UPLOADDATA_WSR_OPT
(
    @nSpId VARCHAR(50)
   ,@CERRMSG VARCHAR(1000) OUTPUT
)
--WITH ENCRYPTION
AS
SET NOCOUNT ON
BEGIN
	/*
		208_2014_01_13 : THIS PROCEDURE WILL MERGE DATA FROM TEMPORARY TABLE TO ACTUAL TABLE.
						 TABLE NAMES AND ITS MERGING ORDER WILL BE FIXED AND WILL BE DEFINED HERE.	
						 
	*/

	

DECLARE @CSTEP VARCHAR(100),@DTSQL NVARCHAR(MAX),@NMERGE_ORDER NUMERIC(5)
	   ,@CTABLENAME VARCHAR(200),@CTABLE_SUFFIX VARCHAR(50),@CKEYFIELD VARCHAR(200),@CDEL_ID VARCHAR(50),@CTMP_TABLENAME VARCHAR(200),@LINSERTONLY VARCHAR(1)
	   ,@CFILTERCONDITION VARCHAR(200),@CFILTERCONDITION2 VARCHAR(500),@LUPDATEONLY VARCHAR(1),@BALWAYSUPDATE VARCHAR(1),@FDEL CHAR(1)
	   ,@CERRMSGOUT VARCHAR(1000),@CTABLESSTR VARCHAR(MAX),@CMIRRORINGENABLED VARCHAR(5)
	   ,@CCURDEPTID VARCHAR(5),@CTEMPMASTERTABLE VARCHAR(200),@CTEMPDETAILTABLE1 VARCHAR(200),@CTEMPDETAILTABLE2 VARCHAR(200)
	   ,@CTEMPPAYMODETABLE VARCHAR(200),@CTEMPTABLE VARCHAR(100),@CDONOTRESETPOSTEDINAC VARCHAR(1)
	   ,@BADDMODE BIT,@CCUTOFFDATE VARCHAR(20),@CWHERECLAUSE VARCHAR(2000),@CMEMONOLEN VARCHAR(5),@NMEMONOLEN INT
	   ,@DMINMEMODT DATETIME,@DMAXMEMODT DATETIME,@CFINYEAR VARCHAR(5),@CMEMOPREFIX VARCHAR(10)
	   ,@CMINMEMONO VARCHAR(20),@CMAXMEMONO VARCHAR(20),@CSOURCEDB VARCHAR(200),@CMERGEDB VARCHAR(200)
	   ,@BMSTINSERTONLY BIT,@BSERIESMISMATCHFOUND BIT,@CMEMOID VARCHAR(40),@CPREVMEMONO VARCHAR(20)
	   ,@NPREVMEMONO NUMERIC(5,0),@NLENVALUE INT,@CPREVMEMONOSEARCH VARCHAR(20),@CMEMOIDSEARCH VARCHAR(40)
	   ,@CRETPRODUCTCODE VARCHAR(50),@CJOINSTR VARCHAR(MAX),@CTEMPSKUTABLE VARCHAR(500)
	   ,@CPARTYDEPTID VARCHAR(5),@NMODE INT,@CCNID VARCHAR(40),@CDONOTSENDCHALLANWODISPATCHDETAILS VARCHAR(2)
	   ,@ERP_CONFIG VARCHAR(10),@CFILTERCONDITION1 VARCHAR(200)
	   ,@BDonotInsCHALLAN BIT,@dMIrrorLastUpdate DATETIME,@dLastUpdate DATETIME,@cMissingRowId VARCHAR(50)
	   ,@cUpdatestr VARCHAR(2000),@bServerLoc BIT,@CLOCID varchar(5),@nUpdateMode INT  ,
	   @bCancelled BIT,@CLOCCODE varchar(5)
    


BEGIN TRY
	
	
	SET @cStep=5

	SELECT @CSOURCEDB='',@CMERGEDB='',@BMSTINSERTONLY=1,@BSERIESMISMATCHFOUND=0
	
    SELECT TOP 1 @CCURDEPTID=VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'

	set @CLOCID=@CCURDEPTID

	SELECT @CTEMPMASTERTABLE=@CSOURCEDB+'WSR_CNM01106_upload',
		   @CTEMPDETAILTABLE1=@CSOURCEDB+'WSR_CND01106_upload'
		  
   DECLARE @DFREEZINGDATE DATETIME	
   EXEC SP3S_GETDATA_FREEZING_DATE 'WSR',@DFREEZINGDATE OUTPUT

   SET @cStep=9
   EXEC SP_CHKXNSAVELOG 'wsrMERGE',@CSTEP,0,@CMEMOID,'',1
	   
	IF EXISTS (SELECT TOP 1 tablename FROM savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nSpId)
		DELETE FROM savetran_updcols_updatestr WITH (ROWLOCK) WHERE sp_id=@nSpId

	INSERT savetran_updcols_updatestr (sp_id,tablename,updatestr)
	SELECT @nSpId as sp_id,tablename,'' from mirrorxnsinfo (NOLOCK)
	WHERE tablename IN ('CNM01106','CND01106','paymode_xn_det')

LBLSTART:

	BEGIN TRANSACTION	


    SELECT @CMEMOID=''
	
    SELECT TOP 1 @CMEMOID = B.cn_id  ,
	@dMIrrorLastUpdate=b.last_update,@NMODE =mode ,@bCancelled=cancelled,@cLocId= B.location_Code
    FROM WSR_CNM01106_upload B (NOLOCK)
    WHERE  cn_dt> @DFREEZINGDATE 
	and b.sp_id=@nSpId

       
    IF ISNULL(@CMEMOID,'')=''
		GOTO EXIT_PROC
		
		
    SET @CFILTERCONDITION = 'B.SP_ID='''+@nSpId+''''

	SET @CMEMOIDSEARCH=''
	SELECT TOP 1 @CMEMOIDSEARCH=A.CN_ID,@dLastUpdate=last_update FROM CNM01106 A (NOLOCK) WHERE A.CN_ID=@CMEMOID
	
	IF ISNULL(@CMEMOIDSEARCH,'')<>''
		SET @BADDMODE=0
	ELSE
		SET @BADDMODE=1


	SET @nUpdateMode=(CASE WHEN @BADDMODE=1 THEN 1 WHEN @bCancelled=1 THEN 3 ELSE 2 END)	
	SET @CSTEP=10.2
	EXEC SP_CHKXNSAVELOG 'WSRMERGE',@CSTEP,0,@nSpId,'',1

	EXEC SP3S_upd_qty_lastupdate
	@nUpdateMode=@NUPDATEMODE,
	@cXnType='WSR',
	@nSpId=@nSpId,
	@cMasterTable='cnm01106',
	@cMemoIdCol='cn_id',
	@cXnDtCol='cn_dt',
	@cMemoId=@CMEMOIDSEARCH,
	@bCalledfromMerging=1,
	@CERRORMSG=@CERRMSG OUTPUT

	IF ISNULL(@cErrmsg,'')<>''
		GOTO EXIT_PROC
	
LBLMERGE:
	
	IF @BADDMODE=0
		PRINT 'ADDMODE:N'
	ELSE
		PRINT 'ADDMODE:Y'	
	
	
	
  IF @BADDMODE=0
  BEGIN

		PRINT 'ADDMODE:N'
		EXEC SP3S_VERIFY_WSRDATA_MERGE_CHANGES
		@nSpId=@nSpId,
		@cMemoId=@cMemoId
		
		SET @CSTEP=20
		SELECT TOP 1 @cMissingRowId=a.row_id FROM CND01106 A (NOLOCK) 
		LEFT JOIN 
		(SELECT row_id FROM wsr_CND01106_upload B (NOLOCK) WHERE sp_id=@nSpId) b
		 ON A.row_ID =B.row_ID WHERE A.CN_ID =@CMEMOID AND b.row_id IS NULL

		IF ISNULL(@cMissingRowId,'')<>''
		BEGIN		
			SET @CSTEP=25
			EXEC SP_CHKXNSAVELOG 'wsrMERGE',@CSTEP,0,@CMEMOID,'',1

			DELETE A FROM CND01106 A (NOLOCK) LEFT JOIN 
			(SELECT row_id FROM wsr_CND01106_upload B (NOLOCK) WHERE sp_id=@nSpId) b
			ON A.row_ID =B.row_ID WHERE A.CN_ID =@CMEMOID AND b.row_id IS NULL

		END



		  SELECT TOP 1 @cMissingRowId=a.row_id FROM 
		(SELECT row_id  FROM WSR_PAYMODE_XN_DET_UPLOAD (NOLOCK) WHERE sp_id=(LEFT(@nSPId,38)+@CLOCCODE )) A
		left OUTER JOIN 
		(SELECT row_id FROM WSR_PAYMODE_XN_DET_UPLOAD (NOLOCK) WHERE sp_id=@nSpId) b ON 
		a.row_id=b.row_id WHERE b.row_id IS NULL

	
	
		IF ISNULL(@cMissingRowId,'')<>''
		BEGIN		
			SET @CSTEP='32'
			
			DELETE A FROM PAYMODE_XN_DET A (NOLOCK) LEFT JOIN 
			(SELECT row_id FROM WSR_PAYMODE_XN_DET_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId) b
			ON A.row_ID =B.row_ID WHERE A.memo_id =@CMEMOID AND a.xn_type='WSR' AND b.row_id IS NULL

	    END
		
	END
		
	---UPDATING TRANSACTION TABLES
	SET @CSTEP=27
	
	SET @CTABLENAME='CNM01106'
	SET @CTMP_TABLENAME='WSR_CNM01106_upload'
	SET @CKEYFIELD='CN_ID'


	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK)  WHERE sp_id=@nSpId and tablename='cnm01106'
	SET @LUPDATEONLY = (CASE WHEN @BADDMODE=0 THEN 1 ELSE 0 END)		
	
	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
							  ,@BALWAYSUPDATE=1,@BUPDATEXNS=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 
							  

	SET @CSTEP=29
	

	SET @CTABLENAME='CND01106'
	SET @CTMP_TABLENAME='WSR_CND01106_upload'
	SET @CKEYFIELD='ROW_ID'

	SELECT @cMissingRowId='',@lUpdateonly=0
	IF @BADDMODE=0
	BEGIN
		SET @CSTEP=32
		
		SELECT TOP 1 @cMissingRowId=b.row_id FROM 
		(SELECT row_id  FROM WSR_CND01106_UPLOAD (NOLOCK) WHERE sp_id=(@nSpId+@CLOCCODE )) A
		RIGHT OUTER JOIN 
		(SELECT row_id FROM WSR_CND01106_UPLOAD (NOLOCK) WHERE sp_id=@nSpId) b ON 
		a.row_id=b.row_id WHERE a.row_id IS NULL

		--SELECT 'check @cMissingRowId of pid',@cMissingRowId

		IF ISNULL(@cMissingRowId,'')='' 
			SET @lUpdateonly=1
	END

	SET @CSTEP=35

	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK)  WHERE sp_id=@nSpId and tablename='CND01106'
	set @cUpdatestr=isnull(@cUpdatestr,'')


	EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@lUpdateonly
							  ,@BALWAYSUPDATE=1,@lUpdateXns=@BADDMODE,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 

   

   



     	SET @CTABLENAME='PAYMODE_XN_DET'
		SET @CTMP_TABLENAME='WSR_PAYMODE_XN_DET_UPLOAD'
		SET @CKEYFIELD='MEMO_ID'

		SELECT @CFILTERCONDITION2=REPLACE(@CFILTERCONDITION,'CN_ID','MEMO_ID')+' AND B.XN_TYPE=''WSR'''
		   
		SELECT @cMissingRowId='',@lUpdateonly=0
		IF @BADDMODE=0
		BEGIN
			SET @CSTEP=55

			SELECT TOP 1 @cMissingRowId=b.row_id FROM 
			(SELECT row_id  FROM WSR_PAYMODE_XN_DET_UPLOAD (NOLOCK) WHERE memo_id=(LEFT(@nSPId,38)+@CLOCCODE )) A
			RIGHT OUTER JOIN 
			(SELECT row_id FROM WSR_PAYMODE_XN_DET_UPLOAD (NOLOCK) WHERE memo_id=@cMemoId) b ON 
			a.row_id=b.row_id WHERE a.row_id IS NULL

			--SELECT 'check @cMissingRowId of pid',@cMissingRowId

			IF ISNULL(@cMissingRowId,'')='' 
				SET @lUpdateonly=1
		END


		SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nspid and tablename='PAYMODE_XN_DET'	
		set @cUpdatestr=isnull(@cUpdatestr,'')


		EXEC updatemasterxn_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1='row_id',@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=@bAddmode,@CFILTERCONDITION=@CFILTERCONDITION2,@LUPDATEONLY=@lUpdateonly
								  ,@BALWAYSUPDATE=1,@lUPDATEXNS=@bAddmode,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 	



     PRINT 'INSERT CNM0106 OF GROUP-2'
	SET @CSTEP=38
	EXEC SP3S_MERGE_LOCPMT  
	@cTempTable='WSR_PMT01106_UPLOAD',  
	@cMemoIdCol='SP_ID',  
	@cMemoId =@nSpId

	

	IF ISNULL(@cErrmsg,'')=''
	BEGIN
		SET @CSTEP=42
		EXEC SP_CHKXNSAVELOG 'WSRMERGE',@CSTEP,0,@CMEMOID,'',1

		EXEC SP3S_VALIDATE_DATAMERGED_SINGLECHANNEL
		@cMasterTable='cnm01106',
		@cDetTable='cnd01106',
		@cMemoIdCol='cn_id',
		@cMemoId=@cMemoId,
		@cUploadTable='wsr_cnm01106_upload',
		@nSpId=@nSpId,
		@cErrormsg=@CERRMSG OUTPUT



		IF ISNULL(@cErrmsg,'')<>''
			GOTO EXIT_PROC
    END
	
	
	  IF EXISTS (SELECT TOP 1'U' FROM WSR_XN_AUDIT_TRIAL_DET_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID)
	BEGIN
	    
	
		
		DELETE a FROM WSR_XN_AUDIT_TRIAL_DET_UPLOAD A (NOLOCK) 
		JOIN XN_AUDIT_TRIAL_DET B (NOLOCK) ON A.XN_TYPE =B.XN_TYPE AND A.XN_ID =B.XN_ID AND A.ID=B.ID 
		WHERE A.SP_ID =@nSpId 

	    SET @CTABLENAME='XN_AUDIT_TRIAL_DET'
		SET @CTMP_TABLENAME='WSR_XN_AUDIT_TRIAL_DET_UPLOAD'
		SET @CKEYFIELD='XN_ID'

	

		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=0,@BUPDATEXNS =1						  
	

	END
			   	
		
	 	

END TRY
BEGIN CATCH
	SET @CERRMSG='P:SP3S_SYNCH_UPLOADDATA_WSR_OPT for MemoId:'+isnull(@cMemoId,'')+' , STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO EXIT_PROC
END CATCH

EXIT_PROC:

print 'last step:'+@cStep

	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRMSG,'')=''
			commit
		ELSE
			ROLLBACK
    END

	DECLARE @nSpidCopy VARCHAR(50)
	SET @nSpIdCopy=LEFT(@nSPId,38)+@CLOCCODE 
	
	exec SP3S_DELETE_UPLOAD_WSRMERGE_TABLES @nSPId

	if isnull(@BADDMODE,0)=0
	   exec SP3S_DELETE_UPLOAD_WSRMERGE_TABLES @nSpIdCopy

	
END	
