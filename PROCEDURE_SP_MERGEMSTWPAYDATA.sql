create PROCEDURE SP_MERGEMSTWPAYDATA
(
	@NSPID INT
)
--WITH ENCRYPTION
AS
BEGIN
	
--(dinkar) Replace  left(memoid,2) to Location_code 
		DECLARE @CERRORMSG VARCHAR(1000),@CCURDEPTID CHAR(4),@CHODEPTID CHAR(4),@CCMD NVARCHAR(MAX),
				@CXNMASTERTABLENAME VARCHAR(100),@BPROCEED BIT,@CTABLENAME VARCHAR(100),@CMASTERKEYFIELD VARCHAR(100),
				@CKEYFIELD VARCHAR(100),@CPARENTTABLENAME VARCHAR(100),@CPARENTPARANAME VARCHAR(100),@CCHILDPARANAME VARCHAR(100),
				@CWHERECLAUSE VARCHAR(100),@CJOINSTR VARCHAR(1000),@CMEMOID VARCHAR(100),@CFINYEAR VARCHAR(100),
				@NGRPCHARS INT,@NSERIESCHARS INT,@BSERIESBROKEN BIT,@CPREVMEMOID VARCHAR(40),@CMERGETABLENAME VARCHAR(50),
				@CFIRSTMEMOID VARCHAR(40),@NPREVMEMOID INT,@NMEMONOLEN INT,@CRETCMD NVARCHAR(MAX),
				@CDELCHILDTABLENAME VARCHAR(100),@CDELCHILDPARANAME VARCHAR(100),@CDELPARENTPARANAME VARCHAR(100),
				@CORIGINALTABLENAME VARCHAR(100),@NLOCTYPE INT,@BDONOTMERGE BIT,@CRFXNTYPE VARCHAR(10),@BHOLOC BIT,
				@BINSERTONLY BIT,@BLINKEDMASTER BIT,@BPURLOC BIT,@CSOURCELOCID CHAR(4),@BSOURCEPURLOC BIT,
				@CMISSINGMEMOID VARCHAR(40),@CGRPCODE VARCHAR(20),@BRETVAL BIT,@NPREVNO INT,@CPREVNO VARCHAR(20),
				@BEMPHEADSUPDATED BIT,@CFILTERCONDITION VARCHAR(100),@CTABLEPREFIX VARCHAR(100),@CXNTYPE VARCHAR(10),
				@BUPDPURINFO BIT,@CUNQCOLUMNNAME1 VARCHAR(100),@CUNQCOLUMNNAME2 VARCHAR(100),@NXNSMERGINGORDER INT
				,@CTEMPAREATABLE VARCHAR(200),@CTEMPCITYTABLE VARCHAR(200),@CTEMPSTATETABLE VARCHAR(200),@CTEMPREGIONMTABLE VARCHAR(200)	
				,@NSTEP INT,@CTEMPREGIONTABLE VARCHAR(100)
		
		BEGIN TRANSACTION
		
		DECLARE @TRETMSG TABLE  (MEMO_ID VARCHAR(40),ERRMSG VARCHAR(MAX))
	
		BEGIN TRY
					
		SELECT @CERRORMSG='',@BPROCEED=1,@NMEMONOLEN=10,@CRETCMD='',@CMEMOID='',@CXNTYPE='MSTWPAY',@BEMPHEADSUPDATED=0
		
		SET @CTABLEPREFIX='TMP_MSTWPAY'
		
		
		SELECT @CCURDEPTID = VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='LOCATION_ID'
		SELECT @CHODEPTID = VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='HO_LOCATION_ID'		
		
		IF @CCURDEPTID=@CHODEPTID
			GOTO LBLLAST
				
		SELECT @NLOCTYPE=LOC_TYPE,@BPURLOC=PUR_LOC FROM LOCATION (NOLOCK) WHERE DEPT_ID=@CCURDEPTID
		
				
		SELECT TOP 1 @CXNMASTERTABLENAME=TABLENAME,@CMASTERKEYFIELD=KEYFIELD FROM XNSINFO (NOLOCK) WHERE XN_TYPE=@CXNTYPE
		AND XNS_MERGING_ORDER NOT IN (0,99)  ORDER BY XNS_SENDING_ORDER

		SET @CXNMASTERTABLENAME=ISNULL(@CXNMASTERTABLENAME,'')
		
		SET @CMEMOID='MSTWPAY'
		
		
	LBLMERGE:
		
		DELETE FROM EMP_SHIFT_LOC
		
		SET @CFILTERCONDITION=''
		
		--- NOW, UPDATE TRANSACTIONS DATA ONE BY ONE
		DECLARE MERGECUR CURSOR FOR 
		SELECT DISTINCT TABLENAME, KEYFIELD,XNS_MERGING_ORDER
		FROM XNSINFO (NOLOCK) 
		WHERE XN_TYPE = @CXNTYPE 
		AND   XNS_MERGING_ORDER <> 99
		ORDER BY XNS_MERGING_ORDER
		
		OPEN MERGECUR
		FETCH NEXT FROM MERGECUR INTO @CTABLENAME,@CKEYFIELD,@NXNSMERGINGORDER
		WHILE @@FETCH_STATUS=0
		BEGIN
			
			LBLSTARTMERGE:
			SET @BPROCEED=1
			
			SET @CCMD=N'IF NOT EXISTS (SELECT NAME FROM SYSOBJECTS WHERE NAME=''TMP_' + @CXNTYPE + '_' + @CTABLENAME + '_' + LTRIM(RTRIM(STR(@NSPID)))+''')
							SET @BPROCEEDOUT=0'
			
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD,N'@BPROCEEDOUT BIT OUTPUT',@BPROCEEDOUT=@BPROCEED OUTPUT
			
			IF @BPROCEED=0
				GOTO LBLMERGENEXT
			
			
			IF  EXISTS (SELECT TABLENAME FROM MST_UNQ  (NOLOCK) WHERE TABLENAME=@CTABLENAME)
			BEGIN
				SELECT @CUNQCOLUMNNAME1=PRIMARY_COLUMNNAME FROM MST_UNQ (NOLOCK) WHERE TABLENAME=@CTABLENAME 
				SELECT @CUNQCOLUMNNAME2=SECONDARY_COLUMNNAME FROM MST_UNQ (NOLOCK) WHERE TABLENAME=@CTABLENAME
				
				SET @CCMD=N'UPDATE '+@CTABLENAME+' SET '+@CUNQCOLUMNNAME1+'='+@CTABLENAME+'.'+@CUNQCOLUMNNAME1+'+''_''+'+
							@CTABLENAME+'.'+@CKEYFIELD+' FROM [TMP_'+@CXNTYPE + '_' + @CTABLENAME + '_' +
							 LTRIM(RTRIM(STR(@NSPID)))+'] B 	WHERE B.'+@CUNQCOLUMNNAME1+'='+@CTABLENAME+'.'+
							 @CUNQCOLUMNNAME1+(CASE WHEN @CUNQCOLUMNNAME2<>'' THEN ' AND B.'+@CUNQCOLUMNNAME2+
							 '='+@CTABLENAME+'.'+@CUNQCOLUMNNAME2 ELSE '' END)+' AND B.'+@CKEYFIELD+'<>'+@CTABLENAME+'.'+@CKEYFIELD
				PRINT @CCMD				  
				EXEC SP_EXECUTESQL @CCMD				   	
			END
			IF @CTABLENAME='REGIONM'
			BEGIN
			SET @CCMD = N'UPDATE A SET A.'+@CKEYFIELD+'=C.'+@CKEYFIELD + 
									' FROM '+@CTABLEPREFIX+'_STATE_' + LTRIM(RTRIM(STR(@NSPID))) +
									' A JOIN '+@CTABLEPREFIX+'_' + @CTABLENAME + '_' + LTRIM(RTRIM(STR(@NSPID))) +' B ON A.'+@CKEYFIELD+'=B.'+@CKEYFIELD + 
									+' JOIN REGIONM C ON LTRIM(RTRIM(B.REGION_NAME))=LTRIM(RTRIM(C.REGION_NAME))'
				EXEC SP_EXECUTESQL @CCMD
				
				SET @CCMD = N'UPDATE A SET A.'+@CKEYFIELD+'=B.'+@CKEYFIELD + 
									' FROM '+@CTABLEPREFIX+'_' + @CTABLENAME + '_' + LTRIM(RTRIM(STR(@NSPID))) +' A JOIN REGIONM B ON LTRIM(RTRIM(A.REGION_NAME))=LTRIM(RTRIM(B.REGION_NAME))'
				EXEC SP_EXECUTESQL @CCMD
				
				SET @CCMD = N'UPDATE A SET A.'+@CKEYFIELD+'=B.'+@CKEYFIELD + 
									' FROM '+@CTABLEPREFIX+'_' + @CTABLENAME + '_' + LTRIM(RTRIM(STR(@NSPID))) +' A JOIN REGIONM B ON LTRIM(RTRIM(A.REGION_NAME))=LTRIM(RTRIM(B.REGION_NAME))'
				EXEC SP_EXECUTESQL @CCMD

			END
			SET @CCMD='EXEC UPDATEMASTERXN_MERGING '''','''+@CTABLEPREFIX+'_' + @CTABLENAME + '_' + LTRIM(RTRIM(STR(@NSPID)))+''','''',
					   '''+@CTABLENAME+''','''+@CKEYFIELD+''','''','''',0,0,1,'''+@CFILTERCONDITION+''',@CERRORMSGOUT OUTPUT'
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD,N'@CERRORMSGOUT VARCHAR(1000) OUTPUT',@CERRORMSGOUT=@CERRORMSG OUTPUT
			
			IF @CERRORMSG<>''
				BREAK
					
			LBLMERGENEXT:
			
			FETCH NEXT FROM MERGECUR INTO @CTABLENAME,@CKEYFIELD,@NXNSMERGINGORDER
		END
		CLOSE MERGECUR
		DEALLOCATE MERGECUR
				
		-- DELETING FROM TEMP TABLES
		
		EXEC SP_DROPTEMPTABLES_XNS @CXNTYPE,@NSPID

			
		SET @CRETCMD='SELECT '''+@CMEMOID+''' AS MEMO_ID,'''+@CERRORMSG+''' AS ERRMSG'	
		
	LBLLAST:
	
		--- ON SUCCESSFUL MERGING , DELETE ENTRY FROM XN HISTORY 		
		IF @CERRORMSG=''
			DELETE FROM XN_HISTORY WHERE XN_TYPE=@CXNTYPE AND MEMO_ID=@CMEMOID
		ELSE
		BEGIN
			IF @@TRANCOUNT>0
				ROLLBACK 	
		END	

		IF @CRETCMD=''
			SET @CRETCMD='SELECT '''' AS MEMO_ID,'''+@CERRORMSG+''' AS ERRMSG'
		
		PRINT 'RETURN VALUE : '+ISNULL(@CRETCMD,'NULL RETCMD')
		EXEC SP_EXECUTESQL @CRETCMD
		
	
	END TRY

	BEGIN CATCH
		
		IF @@TRANCOUNT>0
			ROLLBACK			
		
		PRINT 'UNTRAPPED ERROR'		
					
		DECLARE @CERRORPROCNAME VARCHAR(100),@CLINENO VARCHAR(5),@CERRTEXT VARCHAR(MAX)
		
		SELECT @CERRORPROCNAME=ISNULL(ERROR_PROCEDURE(),'NULL P'),@CLINENO=ISNULL(LTRIM(RTRIM(STR(ERROR_LINE()))),'NULL LINE'),
		@CERRTEXT=ISNULL(ERROR_MESSAGE(),'NULL MSG')
		

		--SELECT @CERRORMSG='PROCEDURE : '+@CERRORPROCNAME+' LINE NO. :'+@CLINENO+' MSG :'+@CERRTEXT
		
		SELECT @CERRORMSG=@CERRTEXT
		
		INSERT @TRETMSG
		SELECT 'MSTWPAY' AS MEMO_ID,@CERRORMSG
		
		SELECT * FROM @TRETMSG

		IF CURSOR_STATUS('GLOBAL','MERGECUR') IN (0,1)
		BEGIN
			CLOSE MERGECUR
			DEALLOCATE MERGECUR
		END
		
		EXEC SP_DROPTEMPTABLES_XNS @CXNTYPE,@NSPID
				
	END CATCH

			
	IF @@TRANCOUNT>0
	BEGIN
		PRINT 'SUCCESS'
		COMMIT TRANSACTION
	END	
		
END
--- 'END OF CREATING PROCEDURE SP_MERGEMSTWPAYDATA'
