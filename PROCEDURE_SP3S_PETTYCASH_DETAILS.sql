create PROCEDURE SP3S_PETTYCASH_DETAILS
(
	@QUERYID NUMERIC(2)=1 ,-- 1 FOR SUMMARY (LOCATION WISE) 2 FRO DETAILS (DATE WISW) 3 FOR HEAD WISE 4 FOR MONTH WISE
	@CDEPT_ID VARCHAR(5)='',
	@CFMDATE DATETIME='',
	@CTODATE DATETIME=''
)
--WITH ENCRYPTION
AS
BEGIN 
/*
EXEC SP3S_PETTYCASH_DETAILS 1,'','2013-11-12','2015-03-31'
EXEC SP3S_PETTYCASH_DETAILS 2,'','2013-11-12','2015-03-31'
EXEC SP3S_PETTYCASH_DETAILS 3,'','2013-11-12','2015-03-31'
EXEC SP3S_PETTYCASH_DETAILS 4,'','2013-11-12','2015-03-31'
*/
	  DECLARE @DTSQL NVARCHAR(MAX)
	  DECLARE @ACNAME VARCHAR(MAX)
	  DECLARE @MONTHNAME VARCHAR(MAX),@CCONSIDERALLCASHXN VARCHAR(1)
	  
	  IF OBJECT_ID('TEMPDB..#LOC_EFF_DATES','U') IS NOT NULL
			DROP TABLE #LOC_EFF_DATES
		
	  CREATE TABLE #LOC_EFF_DATES(LOC_ID VARCHAR(2),EFF_DATE DATETIME) 		
      /*FOR LOCATION WHOSE OPENING DATE IS DEFINED, TRANSACTIONS FROM THAT DATE SHOULD BE SHOWN AND		
        FOR THOSE LOCATION WHOSE OPENING DATE IS NOT DEFINED.....CONSIDER TRANSACION FROM PASSED FROM DATE
      */
	  INSERT #LOC_EFF_DATES(LOC_ID,EFF_DATE)	
	  SELECT DEPT_ID,MAX(OPENING_CASH_DATE) FROM LOC_REQ GROUP BY DEPT_ID
	  
	  INSERT #LOC_EFF_DATES(LOC_ID,EFF_DATE)	
	  SELECT DEPT_ID,@CFMDATE 
	  FROM LOCATION LCT(NOLOCK)
	  LEFT JOIN #LOC_EFF_DATES LED(NOLOCK) ON LCT.DEPT_ID=LED.LOC_ID
	  WHERE LED.LOC_ID IS NULL
	  
	  SELECT TOP 1 @CCONSIDERALLCASHXN=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='CONSIDER_ALL_CASH_RECEIPTS'	
		
	  SET @CCONSIDERALLCASHXN=ISNULL(@CCONSIDERALLCASHXN,0)		
		   
      IF OBJECT_ID ('TEMPDB..#TMPREPORT','U') IS NOT NULL 
			DROP TABLE #TMPREPORT
    
	   SELECT 'RECEIPT_FM_HO' AS TYPE, M.location_Code  AS LOC_ID,M.RECEIPT_DT MEMO_DT,RECEIPT_FM_HO=SUM(AMOUNT),
	   ISSUE_TO_HO=CAST(0 AS NUMERIC(18,2)),EXPENSES =CAST(0 AS NUMERIC(18,2)),RECEIPTS=CAST(0 AS NUMERIC(18,2)),
	   AC_CODE='',AC_NAME=''
	   INTO #TMPREPORT
	   FROM PCI_MST M (NOLOCK)
	   JOIN #LOC_EFF_DATES LED(NOLOCK) ON M.location_Code =LED.LOC_ID AND M.MEMO_DT>=LED.EFF_DATE
	   WHERE M.MEMO_DT BETWEEN @CFMDATE AND @CTODATE 
	   AND (@CDEPT_ID='' OR M.location_Code =@CDEPT_ID)
	   GROUP BY M.location_Code ,M.RECEIPT_DT
	   
	   UNION ALL
	   
	   SELECT 'ISSUE_TO_HO' AS TYPE,M.location_Code  AS LOC_ID,M.MEMO_DT,RECEIPT_FM_HO=CAST(0 AS NUMERIC(18,2)),
	   ISSUE_TO_HO=SUM(AMOUNT),EXPENSES =CAST(0 AS NUMERIC(18,2)),RECEIPTS=CAST(0 AS NUMERIC(18,2)),
	   AC_CODE='',AC_NAME=''
	   FROM PCO_MST M (NOLOCK)
	   JOIN #LOC_EFF_DATES LED(NOLOCK) ON M.location_Code =LED.LOC_ID AND M.MEMO_DT>=LED.EFF_DATE
	   WHERE M.MEMO_DT BETWEEN @CFMDATE AND @CTODATE 
	   AND (@CDEPT_ID='' OR M.location_Code =@CDEPT_ID)
	   GROUP BY M.location_Code ,M.MEMO_DT
	   
	   UNION ALL
	   
	   SELECT 'EXPENSES' AS TYPE,PEM.location_Code  AS LOC_ID,PEM.PEM_MEMO_DT,RECEIPT_FM_HO=CAST(0 AS NUMERIC(18,2)),
	   ISSUE_TO_HO=CAST(0 AS NUMERIC(18,2)),EXPENSES =SUM(CASE WHEN XN_TYPE='DR' THEN XN_AMOUNT ELSE -XN_AMOUNT END),
	   RECEIPTS=CAST(0 AS NUMERIC(18,2)),
	   AC_CODE=PED.AC_CODE,LM.AC_NAME 
	   FROM PED01106 PED (NOLOCK)
	   JOIN PEM01106 PEM (NOLOCK) ON PEM.PEM_MEMO_ID=PED.PEM_MEMO_ID
	   JOIN #LOC_EFF_DATES LED(NOLOCK) ON PEM.location_Code=LED.LOC_ID AND PEM.PEM_MEMO_DT>=LED.EFF_DATE
	   JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE =PED.AC_CODE 
	   WHERE PEM.PEM_MEMO_DT BETWEEN @CFMDATE AND @CTODATE AND PEM.CANCELLED=0
	   AND (@CDEPT_ID='' OR PEM.location_Code=@CDEPT_ID)
	   GROUP BY PEM.location_Code ,PEM.PEM_MEMO_DT,PED.AC_CODE,LM.AC_NAME  
	  
	   UNION ALL
	   --RECEIPTS FROM SALES	
	   SELECT 'RECEIPTS' AS TYPE,A.location_Code  AS LOC_ID,A.CM_DT,RECEIPT_FM_HO=CAST(0 AS NUMERIC(18,2)),
	   ISSUE_TO_HO=CAST(0 AS NUMERIC(18,2)),EXPENSES =CAST(0 AS NUMERIC(18,2)),RECEIPTS=SUM(D.CASH_AMOUNT),
	   AC_CODE='',AC_NAME=''
	   FROM CMM01106 A  
	   JOIN VW_BILL_PAYMODE D ON A.CM_ID = D.MEMO_ID AND D.XN_TYPE = 'SLS'  
	   JOIN #LOC_EFF_DATES LED(NOLOCK) ON A.location_Code=LED.LOC_ID AND A.CM_DT>=LED.EFF_DATE
	   WHERE A.CANCELLED = 0 AND A.CM_DT BETWEEN @CFMDATE AND @CTODATE AND @CCONSIDERALLCASHXN=1
	   AND  (@CDEPT_ID='' OR A.location_Code = @CDEPT_ID) 
	   AND   ISNULL(D.CASH_AMOUNT,0) <> 0 
	   GROUP BY A.location_Code,A.CM_DT 	
	   
	   UNION ALL
	   
	   --NET CASH FROM RECEIPTS
	   SELECT 'RECEIPTS' AS TYPE,A.location_Code AS LOC_ID,A.ADV_REC_DT,RECEIPT_FM_HO=CAST(0 AS NUMERIC(18,2)),
	   ISSUE_TO_HO=CAST(0 AS NUMERIC(18,2)),EXPENSES =CAST(0 AS NUMERIC(18,2)),RECEIPTS=SUM(CASE WHEN ARC_TYPE=1 THEN D.CASH_AMOUNT ELSE -D.CASH_AMOUNT END),
	   AC_CODE='',AC_NAME=''
	   FROM ARC01106 A  
	   JOIN VW_BILL_PAYMODE D ON A.ADV_REC_ID = D.MEMO_ID AND D.XN_TYPE = 'ARC'  
	   JOIN #LOC_EFF_DATES LED(NOLOCK) ON A.location_Code =LED.LOC_ID AND A.ADV_REC_DT>=LED.EFF_DATE
	   WHERE A.CANCELLED = 0  AND D.CASH_AMOUNT <> 0  
	   AND  (@CDEPT_ID='' OR A.location_Code = @CDEPT_ID) 
	   AND   A.ADV_REC_DT BETWEEN @CFMDATE AND @CTODATE AND @CCONSIDERALLCASHXN=1
	   GROUP BY A.location_Code,A.ADV_REC_DT	
	   
	   UNION ALL  
	   --NET CASH FROM WHOLE SALE TRANSACTION
	   SELECT 'RECEIPTS' AS TYPE,A.location_Code AS LOC_ID,A.INV_DT,RECEIPT_FM_HO=CAST(0 AS NUMERIC(18,2)),
	   ISSUE_TO_HO=CAST(0 AS NUMERIC(18,2)),EXPENSES=CAST(0 AS NUMERIC(18,2)),RECEIPTS=SUM(D.CASH_AMOUNT),
	   AC_CODE='',AC_NAME=''
	   FROM INM01106 A  
	   JOIN VW_BILL_PAYMODE D ON A.INV_ID = D.MEMO_ID AND D.XN_TYPE = 'WSL'  
	   JOIN #LOC_EFF_DATES LED(NOLOCK) ON A.location_Code =LED.LOC_ID AND A.INV_DT>=LED.EFF_DATE
	   WHERE A.CANCELLED = 0 AND INV_DT BETWEEN @CFMDATE AND @CTODATE AND @CCONSIDERALLCASHXN=1
	   AND D.CASH_AMOUNT <> 0  
	   AND  (@CDEPT_ID='' OR A.location_Code  = @CDEPT_ID)
	   GROUP BY A.location_Code ,A.INV_DT
	   
	   UNION ALL   
	   --NET CASH OUT FROM WHOLE SALE RETURN TRANSACTION
	   SELECT 'RECEIPTS' AS TYPE,A.location_Code  AS LOC_ID,A.CN_DT,RECEIPT_FM_HO=CAST(0 AS NUMERIC(18,2)),
	   ISSUE_TO_HO=CAST(0 AS NUMERIC(18,2)),EXPENSES=CAST(0 AS NUMERIC(18,2)),RECEIPTS=SUM(-D.CASH_AMOUNT),
	   AC_CODE='',AC_NAME=''
	   FROM CNM01106 A  
	   JOIN VW_BILL_PAYMODE D ON A.CN_ID = D.MEMO_ID AND D.XN_TYPE = 'WSR'  
	   JOIN #LOC_EFF_DATES LED(NOLOCK) ON A.location_Code =LED.LOC_ID AND A.CN_DT>=LED.EFF_DATE
	   WHERE D.CASH_AMOUNT <> 0  
	   AND CANCELLED = 0  
	   AND  (@CDEPT_ID='' OR A.location_Code  = @CDEPT_ID)
	   AND CN_DT BETWEEN @CFMDATE AND @CTODATE AND @CCONSIDERALLCASHXN=1
	   GROUP BY A.location_Code ,A.CN_DT
	
IF @QUERYID=1
   GOTO LOCATIONSUMMARY 
ELSE IF  @QUERYID=2
   GOTO DATEWISEDETAILS
ELSE IF  @QUERYID=3
   GOTO HEADWISESUMMARY
ELSE IF  @QUERYID=4
   GOTO MONTHWISESUMMARY   
ELSE 
   GOTO END_PROC

LOCATIONSUMMARY:
   
     IF OBJECT_ID('TEMPDB..#TMPREPORT2','U') IS NOT NULL 
       DROP TABLE #TMPREPORT2
  
	  SELECT LOC_ID,OB=CAST(0 AS NUMERIC(18,2)), 
	  RECEIPT_FM_HO=SUM(RECEIPT_FM_HO),ISSUE_TO_HO=SUM(ISSUE_TO_HO),
	  EXPENSES=SUM(EXPENSES),RECEIPTS=SUM(RECEIPTS), CB =CAST(0 AS NUMERIC(18,2))
	  INTO #TMPREPORT2
	  FROM #TMPREPORT T
	  GROUP BY LOC_ID
	  
	  DECLARE @LOCID1 VARCHAR(100)
	  DECLARE @OP_DT DATETIME
	  DECLARE @TBLOP_BAL1 TABLE(Dept_id char(2),OP_BAL NUMERIC(18,2))  

	  
	  Update a set  EFF_DATE=(CASE WHEN EFF_DATE<@CFMDATE THEN @CFMDATE-1 ELSE EFF_DATE-1 END)  
	  FROM #LOC_EFF_DATES A  

   
	  INSERT @TBLOP_BAL1 (Dept_id,OP_BAL)  
	  select a.dept_id,a.ClosingBalance from PettyCashClosing A (nolock)  
	  join #LOC_EFF_DATES b on a.dept_id=b.loc_id and a.closingDate=b.EFF_DATE 

	  UPDATE A SET OB=ISNULL(OP_BAL,0) FROM #TMPREPORT2 A
	  JOIN @TBLOP_BAL1 B ON A.loc_id=B.DEPT_ID  



	  --DECLARE  @TBLOP_BAL1 TABLE(OP_BAL NUMERIC(18,2))
	  
	  --DECLARE CUR_OPENING1 CURSOR FOR SELECT LOC_ID,EFF_DATE-1 FROM #LOC_EFF_DATES
	  --OPEN CUR_OPENING1
	  --FETCH NEXT FROM CUR_OPENING1 INTO @LOCID1,@OP_DT
	  --WHILE @@FETCH_STATUS =0
	  --BEGIN
		 --SET @OP_DT=(CASE WHEN @OP_DT<@CFMDATE-1 THEN @CFMDATE-1 ELSE @OP_DT END)
	  
		 --INSERT INTO @TBLOP_BAL1
		 --EXEC SP_CASHXN @LOCID1,'',@OP_DT,1,0,1
		 
		 --UPDATE #TMPREPORT2 SET OB=(SELECT ISNULL(OP_BAL,0) FROM @TBLOP_BAL1) WHERE LOC_ID=@LOCID1 
	     
	  --   DELETE FROM @TBLOP_BAL1
	  -- FETCH NEXT FROM CUR_OPENING1 INTO @LOCID1,@OP_DT
	  -- END 
	  -- CLOSE CUR_OPENING1
	  -- DEALLOCATE CUR_OPENING1
	   
	   UPDATE #TMPREPORT2 SET CB=(isnull(OB,0)+RECEIPT_FM_HO+RECEIPTS)-(ISSUE_TO_HO +EXPENSES )
    
       SELECT A.*,B.DEPT_NAME FROM #TMPREPORT2 A
       JOIN LOCATION B ON A.LOC_ID=B.DEPT_ID
       ORDER BY LOC_ID
       
GOTO END_PROC
   
DATEWISEDETAILS:
   
   IF OBJECT_ID ('TEMPDB..#TMPREPORT1','U') IS NOT NULL 
		DROP TABLE #TMPREPORT1
  
		  SELECT LOC_ID,MEMO_DT,OB=CAST(0 AS NUMERIC(18,2)), 
		  RECEIPT_FM_HO=SUM(RECEIPT_FM_HO),ISSUE_TO_HO=SUM(ISSUE_TO_HO),
		  EXPENSES=SUM(EXPENSES),RECEIPTS=SUM(RECEIPTS), CB =CAST(0 AS NUMERIC(18,2))
		  INTO #TMPREPORT1
		  FROM #TMPREPORT T
		  GROUP BY LOC_ID,MEMO_DT
		  
		  DECLARE @LOCID VARCHAR(100)
		  DECLARE @MEMO_DT DATETIME 
		  DECLARE  @TBLOP_BAL TABLE (Dept_id Varchar(5),OP_BAL NUMERIC(18,2))

		  Update a set  EFF_DATE=(CASE WHEN EFF_DATE<@CFMDATE THEN @CFMDATE-1 ELSE EFF_DATE-1 END)  
		  FROM #LOC_EFF_DATES A  

   
		  INSERT @TBLOP_BAL (Dept_id,OP_BAL)  
		  select a.dept_id,a.ClosingBalance from PettyCashClosing A (nolock)  
		  join #LOC_EFF_DATES b on a.dept_id=b.loc_id and a.closingDate=b.EFF_DATE 

		  UPDATE A SET OB=ISNULL(OP_BAL,0) FROM #TMPREPORT1 A
		  JOIN @TBLOP_BAL B ON A.loc_id=B.DEPT_ID  
		  
		  --DECLARE CUR_OPENING CURSOR
		  --FOR
		  --SELECT LOC_ID,MEMO_DT-1 FROM #TMPREPORT1 
		  --OPEN CUR_OPENING
		  --FETCH NEXT FROM CUR_OPENING INTO @LOCID, @MEMO_DT
		  --WHILE @@FETCH_STATUS =0
		  --BEGIN
			 --INSERT INTO @TBLOP_BAL
			 --EXEC SP_CASHXN @LOCID,'',@MEMO_DT,1,0,1
			 --UPDATE #TMPREPORT1 SET OB=(SELECT ISNULL(OP_BAL,0) FROM @TBLOP_BAL) WHERE LOC_ID=@LOCID AND MEMO_DT=@MEMO_DT+1
		  --   DELETE FROM @TBLOP_BAL
		  --FETCH NEXT FROM CUR_OPENING INTO @LOCID, @MEMO_DT
		  --END 
		  --CLOSE CUR_OPENING
		  --DEALLOCATE CUR_OPENING
		  
		  UPDATE #TMPREPORT1 SET CB=(isnull(OB,0)+RECEIPT_FM_HO+RECEIPTS)-(ISSUE_TO_HO +EXPENSES )
	    
		  SELECT A.LOC_ID,B.DEPT_NAME ,CONVERT(VARCHAR,A.MEMO_DT,105) AS MEMO_DT,
		  OB,RECEIPT_FM_HO ,ISSUE_TO_HO ,EXPENSES,RECEIPTS ,CB
		  FROM #TMPREPORT1 A
		  JOIN LOCATION B ON A.LOC_ID=B.DEPT_ID
		  ORDER BY LOC_ID,MEMO_DT
		   
		  GOTO END_PROC
		
HEADWISESUMMARY:
		UPDATE #TMPREPORT SET AC_NAME=REPLACE(AC_NAME,' ','_')
		UPDATE #TMPREPORT SET AC_NAME=REPLACE(AC_NAME,'/','_')
				   	
		IF OBJECT_ID ('TEMPDB..#TMPREPORT3','U') IS NOT NULL 
			    DROP TABLE #TMPREPORT3
			    
		IF OBJECT_ID ('TEMPDB..#ALLDEPTS','U') IS NOT NULL 
			    DROP TABLE #ALLDEPTS
		
		SELECT  A.LOC_ID,B.EFF_DATE,OB=CAST(0 AS NUMERIC(18,2)),SR=ROW_NUMBER () OVER (ORDER BY A.LOC_ID)
		INTO #ALLDEPTS 
		FROM #TMPREPORT A
		JOIN #LOC_EFF_DATES B ON A.LOC_ID=B.LOC_ID
		GROUP BY A.LOC_ID,B.EFF_DATE
		
		 DECLARE @MINSR INT
		 DECLARE @MAXSR INT
		 DECLARE @LOC VARCHAR(50)
		 DECLARE  @TBLOP_BAL3 TABLE(OP_BAL NUMERIC(18,2))
		 DECLARE @OP_DT3 DATETIME
		 SET @MINSR=1
		 SET @MAXSR =(SELECT MAX(SR) FROM #ALLDEPTS)
		 
		 WHILE @MINSR<=@MAXSR
		 BEGIN
			  SELECT @LOC=LOC_ID,@OP_DT3=EFF_DATE-1 FROM #ALLDEPTS WHERE SR=@MINSR
			  
			  SET @OP_DT3=(CASE WHEN @OP_DT3<@CFMDATE-1 THEN @CFMDATE-1 ELSE @OP_DT3 END)
			  
			  INSERT INTO @TBLOP_BAL3
			  EXEC SP_CASHXN @LOC,'',@OP_DT3,1,0,1
			  UPDATE #ALLDEPTS SET OB=(SELECT ISNULL(OP_BAL,0) FROM @TBLOP_BAL3) WHERE SR=@MINSR 
			  
			  DELETE FROM @TBLOP_BAL3
			  SET @MINSR=@MINSR+1
		 END 
		
		SELECT A.LOC_ID,LCT.DEPT_NAME,A.OB, ISNULL(RECEIPT_FM_HO,0) AS RECEIPT_FM_HO,ISNULL(ISSUE_TO_HO,0) AS ISSUE_TO_HO
			  ,ISNULL(RECEIPTS,0) AS RECEIPTS,AC_NAME,ISNULL(EXPENSES,0) AS EXPENSES,(ISNULL(A.OB,0)+ ISNULL(RECEIPT_FM_HO,0)+ISNULL(RECEIPTS,0))-(ISNULL(ISSUE_TO_HO,0)+ISNULL(EXP,0)) AS CB
		INTO #TMPREPORT3	  
		FROM #ALLDEPTS A
		JOIN LOCATION LCT ON A.LOC_ID=LCT.DEPT_ID
		LEFT JOIN 
		(
			SELECT LOC_ID,SUM(RECEIPT_FM_HO) AS RECEIPT_FM_HO,SUM(ISSUE_TO_HO) AS ISSUE_TO_HO,SUM(RECEIPTS) AS RECEIPTS
			FROM #TMPREPORT	
			WHERE TYPE IN ('RECEIPT_FM_HO','ISSUE_TO_HO','RECEIPTS')
			GROUP BY LOC_ID	
		)B ON A.LOC_ID=B.LOC_ID
		LEFT JOIN 
		(
			SELECT LOC_ID,AC_NAME,SUM(EXPENSES) AS EXPENSES
			FROM #TMPREPORT	
			WHERE TYPE NOT IN ('RECEIPT_FM_HO','ISSUE_TO_HO','RECEIPTS')
			GROUP BY LOC_ID,AC_NAME
		)C ON A.LOC_ID=C.LOC_ID
		LEFT JOIN
		(SELECT LOC_ID,SUM(EXPENSES) AS EXP 
		 FROM #TMPREPORT
		 GROUP BY LOC_ID 
		) D ON D.LOC_ID=A.LOC_ID 
		
		--SELECT *
		--FROM #TMPREPORT3
		
		--SELECT @ACNAME=ISNULL(@ACNAME+',','')+QUOTENAME(AC_NAME)
		--FROM #TMPREPORT3 WHERE AC_NAME<>''
		--ORDER BY AC_NAME ASC
		
		IF OBJECT_ID('TEMPDB..#T','U') IS NOT NULL
		DROP TABLE #T
		
		SELECT DISTINCT AC_NAME INTO #T FROM #TMPREPORT3 WHERE AC_NAME<>''
		ORDER BY AC_NAME ASC
		
		SELECT @ACNAME=ISNULL(@ACNAME+',','')+QUOTENAME(AC_NAME)
		FROM #T WHERE AC_NAME<>''
		ORDER BY AC_NAME ASC  
		
		
		IF ISNULL(@ACNAME,'')<>''
		BEGIN
			SET @DTSQL=N'SELECT LOC_ID,DEPT_NAME,OB,RECEIPT_FM_HO,ISSUE_TO_HO,RECEIPTS,'+@ACNAME+',CB
			FROM #TMPREPORT3 
			PIVOT (SUM(EXPENSES) FOR AC_NAME IN ('+@ACNAME+')) AS PTABLE'
			
			PRINT @DTSQL
			EXEC SP_EXECUTESQL @DTSQL
		END
		ELSE 
		BEGIN
			SELECT * FROM #TMPREPORT3 
		
		END
	
	GOTO END_PROC
MONTHWISESUMMARY:
        	
        IF OBJECT_ID ('TEMPDB..#TMPREPORT4','U') IS NOT NULL 
			       DROP TABLE #TMPREPORT4
			       
	    IF OBJECT_ID ('TEMPDB..#TMPREPORT4FINAL','U') IS NOT NULL 
			       DROP TABLE #TMPREPORT4FINAL
		
		IF OBJECT_ID ('TEMPDB..#ALLDEPTS4','U') IS NOT NULL 
			    DROP TABLE #ALLDEPTS4

		SELECT  A.LOC_ID,B.EFF_DATE,OB=CAST(0 AS NUMERIC(18,2)),
		SR=ROW_NUMBER () OVER (ORDER BY A.LOC_ID)
		INTO #ALLDEPTS4 
		FROM #TMPREPORT A
		JOIN #LOC_EFF_DATES B ON A.LOC_ID=B.LOC_ID
		GROUP BY A.LOC_ID,B.EFF_DATE
		
		 DECLARE @MINSR4 INT
		 DECLARE @MAXSR4 INT
		 DECLARE @LOC4 VARCHAR(50)
		 DECLARE  @TBLOP_BAL4 TABLE (OP_BAL NUMERIC(18,2))
		 DECLARE @OP_DT4 DATETIME
		 SET @MINSR4=1
		 SET @MAXSR4=(SELECT MAX(SR) FROM #ALLDEPTS4)
		 
		 WHILE @MINSR4<=@MAXSR4
		 BEGIN
			  SELECT @LOC4=LOC_ID,@OP_DT4=EFF_DATE-1 FROM #ALLDEPTS4 WHERE SR=@MINSR4
			  
			  SET @OP_DT4=(CASE WHEN @OP_DT4<@CFMDATE-1 THEN @CFMDATE-1 ELSE @OP_DT4 END)
			  
			  INSERT INTO @TBLOP_BAL4
			  EXEC SP_CASHXN @LOC4,'',@OP_DT4,1,0,1
			  UPDATE #ALLDEPTS4 SET OB=(SELECT ISNULL(OP_BAL,0) FROM @TBLOP_BAL4) WHERE SR=@MINSR4 
			  
			  DELETE FROM @TBLOP_BAL4
			  SET @MINSR4=@MINSR4+1
		 END 
		 
		SELECT A.LOC_ID,LCT.DEPT_NAME,A.OB, ISNULL(RECEIPT_FM_HO,0) AS RECEIPT_FM_HO,ISNULL(ISSUE_TO_HO,0) AS ISSUE_TO_HO
			  ,ISNULL(RECEIPTS,0) AS RECEIPTS,MONTH,ISNULL(EXPENSES,0) AS EXPENSES,(ISNULL(A.OB,0)+ ISNULL(RECEIPT_FM_HO,0)+ISNULL(RECEIPTS,0))-(ISNULL(ISSUE_TO_HO,0)+ISNULL(EXP,0)) AS CB
		INTO #TMPREPORT4	  
		FROM #ALLDEPTS4 A
		JOIN LOCATION LCT ON A.LOC_ID=LCT.DEPT_ID
		LEFT JOIN 
		(
			SELECT LOC_ID,SUM(RECEIPT_FM_HO) AS RECEIPT_FM_HO,SUM(ISSUE_TO_HO) AS ISSUE_TO_HO,SUM(RECEIPTS) AS RECEIPTS
			FROM #TMPREPORT	
			WHERE TYPE IN ('RECEIPT_FM_HO','ISSUE_TO_HO','RECEIPTS')
			GROUP BY LOC_ID	
		)B ON A.LOC_ID=B.LOC_ID
		LEFT JOIN 
		(
			SELECT LOC_ID,DATENAME(MONTH,MEMO_DT) AS MONTH,SUM(EXPENSES) AS EXPENSES
			FROM #TMPREPORT	
			WHERE TYPE NOT IN ('RECEIPT_FM_HO','ISSUE_TO_HO','RECEIPTS')
			GROUP BY LOC_ID,DATENAME(MONTH,MEMO_DT)
		)C ON A.LOC_ID=C.LOC_ID
		LEFT JOIN
		(
			SELECT LOC_ID,SUM(EXPENSES) AS EXP 
			FROM #TMPREPORT
			GROUP BY LOC_ID 
		) D ON D.LOC_ID=A.LOC_ID 
		
		SET @MONTHNAME='APRIL,MAY,JUNE,JULY,AUGUST,SEPTEMBER,OCTOBER,NOVEMBER,DECEMBER,JANUARY,FEBRUARY,MARCH'

			SET @DTSQL=N'SELECT *
			FROM #TMPREPORT4
			PIVOT (SUM(EXPENSES) FOR MONTH IN ('+@MONTHNAME+')) AS PTABLE'
			PRINT @DTSQL
		EXEC SP_EXECUTESQL @DTSQL
			  	    
   END_PROC:
END
--END OF PROCEDURE - SP3S_PETTYCASH_DETAILS
