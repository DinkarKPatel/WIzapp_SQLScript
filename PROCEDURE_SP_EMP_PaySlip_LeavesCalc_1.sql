CREATE PROCEDURE SP_EMP_PAYSLIP_LEAVESCALC_1                      
(                      
 @CEMPID VARCHAR(20),                       
 @NYEAR INT,                       
 @NMONTH INT,                      
 @BRETURNLEAVESONLY BIT=0                      
)      
--WITH ENCRYPTION                
AS                      
BEGIN                      
 --(dinkar) Replace  left(memoid,2) to Location_code 

 --- DA MILANO VERSION                       
 --LOG ABSENT STATUS - 1.WEEKLY OFF,2.ABSENT,3.LEAVE,4.BIRTHDAY OFF                      
                       
 BEGIN TRY                      
              
	 DECLARE @NOPSLEAVECR NUMERIC(10,2),@DPAYSLIPDT DATETIME,@NWEEKLYOFF1 INT,@NWEEKLYOFF2 INT,@NWEEKLYOFF INT,                      
	 @CWEEKLYOFF1 VARCHAR(20),@CWEEKLYOFF2 VARCHAR(20),@DFROMDT DATETIME,@DTODT DATETIME,@NFESTIVALOFF INT,                      
	 @NWORKINGDAYS INT,@NMONTHDAYS INT,@BMARKETINGEMP BIT,@DATTENDANCEDT DATETIME,@DOLDATTENDANCEDT DATETIME,                      
	 @DTIMEIN DATETIME,@DTIMEOUT DATETIME,@DFIRSTTIMEIN DATETIME,@DLASTTIMEOUT DATETIME,@CSHIFTID CHAR(7),                      
	 @NCURDRHL INT,@NCURDRSL INT,@NCURDRFL NUMERIC(10,2),@NCURDRFL1 NUMERIC(10,2),@NCURDRFL2 NUMERIC(10,2),                      
	 @NTEMPSL INT,@NCURRENTLEAVEDR NUMERIC(10,2),@NCURRENTLEAVECR NUMERIC(10,2),@NLEAVECREDITCF NUMERIC(10,2),                      
	 @NABSENTDAYS INT,@NWORKINGONFESTIVALOFF INT,@NWORKINGONWEEKLYOFF INT,@NLWPDAYS NUMERIC(10,2),                      
	 @NCBSLEAVE NUMERIC(10,2),@NOPSLEAVECR1 NUMERIC(10,2),@NOPSLEAVECR2 NUMERIC(10,2),@NCBSLEAVECF NUMERIC(10,2),                      
	 @COLDSHIFTID CHAR(7),@NCURDRFL3 NUMERIC(10,2),@CEMPLOCID CHAR(4),@NWORKINGONBDAYOFF INT,@DBDAY DATETIME,                      
	 @DJOININGDATE DATETIME,@DSTARTDT DATETIME,@NSTEP INT,@NCURDRFL4 NUMERIC(10,2),@NCURDRFL5 NUMERIC(10,2),                      
	 @NJOINEDONDAY INT,@DLASTWEEKLYOFFHOLIDAYON DATETIME,@NWEEKOFFFESTIVALNOTCREDITED INT,@NLOGABSENTSTATUS INT,                      
	 @NPRESENTDAYS INT,@NWEEKLYOFFTAKEN INT ,@NIVLEAVECNT INT,@NATDHALFDAY INT,@NATDEARLYGOING INT,@NATDLATECOMING INT,
	 @CERRORMSG VARCHAR(MAX),@NSALARYDAYS NUMERIC(10,2)
	                       
	 SET @NSTEP=10                      
	                       
	 SELECT @NLWPDAYS=0,@NCURDRFL4=0                      
		                        
	 SELECT @CSHIFTID=SHIFT_ID,@CEMPLOCID=DEPT_ID,@DJOININGDATE=DATE_OF_JOINING                      
	 FROM EMP_MST WHERE EMP_ID=@CEMPID                      
	                       
	 DECLARE @TLEAVES TABLE (MONTH_DT DATETIME,MARK_AS_LEAVE BIT)                      
	 
	 SET @NSTEP=20                      
	 DECLARE @TDAYS TABLE (MONTH_DT DATETIME)                      
	 	                      
	 DECLARE @TATTENDANCE TABLE (ATTENDANCE_DT DATETIME,TIME_IN DATETIME,TIME_OUT DATETIME,FL_COUNT NUMERIC(3,0),                      
			HL_COUNT NUMERIC(3,0),SL_COUNT NUMERIC(3,0),SHIFT_ID CHAR(7))                      
	                       
	 SET @DFROMDT=CONVERT(DATETIME,LTRIM(RTRIM(STR(@NYEAR)))+'-'+REPLICATE('0',2-LEN(LTRIM(RTRIM(STR(@NMONTH)))))+                      
		 LTRIM(RTRIM(STR(@NMONTH)))+'-01')                      
	                       
	 SET @DSTARTDT=@DFROMDT                      
	 
	 SET @NSTEP=30                      
	 
	 IF @BRETURNLEAVESONLY=0                      
		DELETE FROM EMP_LEAVES_SUMMARY WHERE EMP_ID=@CEMPID AND XN_DT=@DFROMDT                      
	                      
	 SET @DTODT=DATEADD(M,1,@DFROMDT)-1                      
     
     SET @NSTEP=40                

 	 EXEC SP_EMP_CALCSALARYDAYS
	 @CEMPID=@CEMPID,
	 @DFROMDT=@DFROMDT,
	 @DTODT=@DTODT,
	 @NSALARYDAYS=@NSALARYDAYS OUTPUT,
	 @NOPSLEAVECR=@NOPSLEAVECR OUTPUT
	 
	 SET @NSTEP=50                      
	 IF MONTH(@DFROMDT)=4 AND @NOPSLEAVECR>15                      
	  SET @NOPSLEAVECR=15            
	                       
	 SELECT @CWEEKLYOFF1=WEEKLY_OFF1,@CWEEKLYOFF2=WEEKLY_OFF2,@BMARKETINGEMP=MARKETING_EMP FROM EMP_MST             
	 WHERE EMP_ID=@CEMPID                      
	 
	 SET @NSTEP=60                      
	 
	 SELECT @DPAYSLIPDT=@DSTARTDT,@CWEEKLYOFF1=ISNULL(@CWEEKLYOFF1,''),@CWEEKLYOFF2=ISNULL(@CWEEKLYOFF2,'')                      
	                       
	 WHILE @DPAYSLIPDT <= @DTODT                      
	 BEGIN                      
		  INSERT @TDAYS                      
		  SELECT @DPAYSLIPDT                      
		                        
		  SET @DPAYSLIPDT=@DPAYSLIPDT+1                      
	 END                       
	 
	 SET @NSTEP=70                      
	 
	 SELECT @NMONTHDAYS=COUNT(*) FROM @TDAYS                      
	 SELECT @NWEEKLYOFF1=COUNT(*) FROM @TDAYS WHERE DATENAME(W,MONTH_DT)=@CWEEKLYOFF1                      
	 SELECT @NWEEKLYOFF2=COUNT(*) FROM @TDAYS WHERE DATENAME(W,MONTH_DT)=@CWEEKLYOFF2                      
	 SELECT @NFESTIVALOFF=COUNT(*) FROM @TDAYS WHERE MONTH_DT IN (SELECT LEAVE_DT FROM FESTIVAL_LEAVES                       
	 WHERE LOCATION_ID=@CEMPLOCID)                      
	                        
	 SET @NSTEP=80
	                       
	 SELECT TOP 1 @DBDAY=ATTENDANCE_DT FROM EMP_ATTENDANCE                       
	 WHERE EMP_ID=@CEMPID AND ATTENDANCE_DT BETWEEN @DFROMDT AND @DTODT AND TIME_IN='' AND TIME_OUT=''                      
	 AND LOG_ABSENT_STATUS=4                      
	                       
	 SET @DBDAY=ISNULL(@DBDAY,'')                      
	 
	 SET @NSTEP=90                      
	 
	 SET @NWORKINGDAYS=@NMONTHDAYS-ISNULL(@NWEEKLYOFF1,0)-ISNULL(@NWEEKLYOFF2,0)-ISNULL(@NFESTIVALOFF,0)                      
	                      
	 SELECT @NABSENTDAYS=COUNT(DISTINCT ATTENDANCE_DT) FROM EMP_ATTENDANCE WHERE EMP_ID=@CEMPID AND                      
	 ATTENDANCE_DT BETWEEN @DFROMDT AND @DTODT AND LOG_ABSENT_STATUS=2                      
	 
	 SET @NSTEP=100                     
	 
	 SELECT @NWORKINGONWEEKLYOFF=COUNT(DISTINCT ATTENDANCE_DT) FROM EMP_ATTENDANCE WHERE EMP_ID=@CEMPID AND                       
	 (ATTENDANCE_DT IN (SELECT MONTH_DT FROM @TDAYS WHERE DATENAME(W,MONTH_DT)=@CWEEKLYOFF1) OR                      
	  ATTENDANCE_DT IN (SELECT MONTH_DT FROM @TDAYS WHERE DATENAME(W,MONTH_DT)=@CWEEKLYOFF2))                      
	 AND (TIME_IN<>'' AND TIME_OUT<>'') AND ATTENDANCE_DT>=@DJOININGDATE                      
	                      
	 SELECT @NWORKINGONFESTIVALOFF=COUNT(DISTINCT ATTENDANCE_DT) FROM EMP_ATTENDANCE WHERE EMP_ID=@CEMPID                      
	 AND ATTENDANCE_DT BETWEEN @DFROMDT AND @DTODT AND ATTENDANCE_DT IN (SELECT LEAVE_DT FROM FESTIVAL_LEAVES WHERE LOCATION_ID=@CEMPLOCID)                      
	 AND (TIME_IN<>'' AND TIME_OUT<>'') AND NOT (DATENAME(W,ATTENDANCE_DT)=@CWEEKLYOFF1 OR                      
		DATENAME(W,ATTENDANCE_DT)=@CWEEKLYOFF2) AND ATTENDANCE_DT>=@DJOININGDATE                       
	                      
	 SELECT @NWORKINGONBDAYOFF= 0                       
	 
	 SET @NSTEP=110                      
	 
	 SELECT @NCURDRFL1 = COUNT(DISTINCT ATTENDANCE_DT) FROM EMP_ATTENDANCE WHERE EMP_ID=@CEMPID AND                       
		   ATTENDANCE_DT BETWEEN @DFROMDT AND @DTODT AND (TIME_IN='' AND TIME_OUT='')                      
		   AND LOG_ABSENT_STATUS<>2                      
	 AND NOT (DATENAME(W,ATTENDANCE_DT)=@CWEEKLYOFF1 OR DATENAME(W,ATTENDANCE_DT)=@CWEEKLYOFF2 OR                      
		(DATEPART(D,ATTENDANCE_DT)=DATEPART(D,@DBDAY) AND DATEPART(M,ATTENDANCE_DT)=DATEPART(M,@DBDAY) AND @DBDAY<>'' ))                      
	 AND ATTENDANCE_DT NOT IN (SELECT LEAVE_DT FROM FESTIVAL_LEAVES WHERE LOCATION_ID=@CEMPLOCID)                        
	 AND ATTENDANCE_DT>=@DJOININGDATE              
	  
	 SET @NSTEP=120                     
	                      
	 SELECT @NCURDRFL2 = COUNT(MONTH_DT) FROM @TDAYS WHERE MONTH_DT NOT IN (SELECT ATTENDANCE_DT FROM                        
	 EMP_ATTENDANCE WHERE EMP_ID=@CEMPID AND ATTENDANCE_DT BETWEEN @DFROMDT AND @DTODT)                      
	 AND NOT (DATENAME(W,MONTH_DT)=@CWEEKLYOFF1 OR DATENAME(W,MONTH_DT)=@CWEEKLYOFF2 OR                      
		(DATEPART(D,MONTH_DT)=DATEPART(D,@DBDAY) AND DATEPART(M,MONTH_DT)=DATEPART(M,@DBDAY) AND @DBDAY<>'' ))                      
	 AND MONTH_DT NOT IN (SELECT LEAVE_DT FROM FESTIVAL_LEAVES WHERE LOCATION_ID=@CEMPLOCID)                             
	 AND MONTH_DT>=@DJOININGDATE                       
	                       
	                        
	 IF @BMARKETINGEMP=1                      
	 BEGIN        
		  SET @NSTEP=130              
		  INSERT @TATTENDANCE (ATTENDANCE_DT,TIME_IN,TIME_OUT,SHIFT_ID,FL_COUNT,HL_COUNT,SL_COUNT)                      
		  SELECT ATTENDANCE_DT,MIN(TIME_IN),MAX(TIME_OUT),CONVERT(VARCHAR(7),'') AS SHIFT_ID,0,0,0 FROM EMP_ATTENDANCE                      
		  WHERE EMP_ID=@CEMPID AND ATTENDANCE_DT BETWEEN @DFROMDT AND @DTODT                      
		  AND ((TIME_IN<>'' AND TIME_OUT<>'') OR (TIME_IN<>'' AND  TIME_OUT='') OR (TIME_IN='' AND  TIME_OUT<>''))  GROUP BY ATTENDANCE_DT ORDER BY ATTENDANCE_DT                      
		                        
		  UPDATE A SET SHIFT_ID=(SELECT TOP 1 SHIFT_ID FROM EMP_ATTENDANCE WHERE EMP_ID=@CEMPID                      
					AND ATTENDANCE_DT=A.ATTENDANCE_DT ORDER BY TIME_IN)                       
		  FROM @TATTENDANCE A                      
		                      
		  GOTO LBLPROCESSLEAVES                      
	 END                         
	 
	 SET @NSTEP=140  
	 --- PROCESS THE FIRST TIME IN & LAST TIME OUT FOR NON-MARKETING EMPLOYEES                      
	 DECLARE LEAVESCUR CURSOR FOR SELECT ATTENDANCE_DT,TIME_IN,TIME_OUT,SHIFT_ID FROM EMP_ATTENDANCE                      
	 WHERE EMP_ID=@CEMPID AND ATTENDANCE_DT BETWEEN @DFROMDT AND @DTODT                      
	 AND ((TIME_IN<>'' AND TIME_OUT<>'') OR (TIME_IN<>'' AND  TIME_OUT='') OR (TIME_IN='' AND  TIME_OUT<>'')) ORDER BY ATTENDANCE_DT,TIME_IN                      
	                        
	 OPEN LEAVESCUR                      
	 FETCH NEXT FROM LEAVESCUR INTO @DATTENDANCEDT,@DTIMEIN,@DTIMEOUT,@CSHIFTID                      
	 WHILE @@FETCH_STATUS=0                      
	 BEGIN        
		  SET @NSTEP=150              
		  SELECT @DOLDATTENDANCEDT=@DATTENDANCEDT,@DFIRSTTIMEIN=@DTIMEIN,@COLDSHIFTID=@CSHIFTID                      
		                        
		  WHILE @DATTENDANCEDT=@DOLDATTENDANCEDT AND @@FETCH_STATUS=0                      
		  BEGIN                      
			   SET @NSTEP=160	
			   IF @DTIMEIN<>@DFIRSTTIMEIN                      
				SET @DFIRSTTIMEIN=DATEADD(MI,DATEDIFF(MI,@DLASTTIMEOUT,@DTIMEIN),@DFIRSTTIMEIN)                      
			                         
			   SET @DLASTTIMEOUT=@DTIMEOUT                         
			   FETCH NEXT FROM LEAVESCUR INTO @DATTENDANCEDT,@DTIMEIN,@DTIMEOUT,@CSHIFTID                      
		  END                      
		                        
		  INSERT @TATTENDANCE (ATTENDANCE_DT,TIME_IN,TIME_OUT,SHIFT_ID,FL_COUNT,HL_COUNT,SL_COUNT)                      
		  SELECT @DOLDATTENDANCEDT AS ATTENDANCE_DT,@DFIRSTTIMEIN AS TIME_IN,@DLASTTIMEOUT AS TIME_OUT,                      
			  @COLDSHIFTID AS SHIFT_ID,0,0,0                      
	 END                      
	                       
	 CLOSE LEAVESCUR                      
	 DEALLOCATE LEAVESCUR                
     
     SET @NSTEP=170              
   	 ---- MARK THE LEAVES (SHORT LEAVE,FULL LEAVE , HALF LEAVE ETC.) ACCORDING TO SHIFT TIMINGS                      
	 LBLPROCESSLEAVES:                      
	                      
	 UPDATE A SET FL_COUNT=1 FROM @TATTENDANCE A JOIN EMP_SHIFTS B ON A.SHIFT_ID=B.SHIFT_ID                      
	 WHERE A.TIME_IN > B.HALFDAY_CUTOFF OR A.TIME_OUT < B.HALFDAY_CUTOFF OR A.TIME_OUT=''  OR TIME_IN=''                    
	                       
	 UPDATE A SET HL_COUNT=1 FROM @TATTENDANCE A JOIN EMP_SHIFTS B ON A.SHIFT_ID=B.SHIFT_ID                      
	 WHERE A.TIME_IN > B.LATE_CUTOFF AND A.TIME_IN <= B.HALFDAY_CUTOFF AND FL_COUNT=0                      
	                      
	 UPDATE A SET HL_COUNT=HL_COUNT+1 FROM @TATTENDANCE A JOIN EMP_SHIFTS B ON A.SHIFT_ID=B.SHIFT_ID                      
	 WHERE A.TIME_OUT < B.EARLY_CUTOFF AND A.TIME_OUT >= B.HALFDAY_CUTOFF AND FL_COUNT=0                      
	                       
	 UPDATE A SET SL_COUNT=1 FROM @TATTENDANCE A JOIN EMP_SHIFTS B ON A.SHIFT_ID=B.SHIFT_ID                      
	 WHERE A.TIME_IN > B.SHIFT_TIME_IN AND A.TIME_IN <= B.LATE_CUTOFF AND FL_COUNT=0   AND HL_COUNT=0                   
	                      
	 UPDATE A SET SL_COUNT=SL_COUNT+1 FROM @TATTENDANCE A JOIN EMP_SHIFTS B ON A.SHIFT_ID=B.SHIFT_ID                      
	 WHERE A.TIME_OUT < B.SHIFT_TIME_OUT AND A.TIME_OUT >= B.EARLY_CUTOFF AND FL_COUNT=0    AND HL_COUNT=0                   
	                      
	 SELECT  @NCURDRHL = SUM(HL_COUNT),@NCURDRSL = SUM(SL_COUNT),@NCURDRFL5 = SUM(FL_COUNT)                      
	 FROM @TATTENDANCE                       
	 
--SELECT * FROM @TATTENDANCE --WHERE TIME_IN='' OR TIME_OUT=''

	 SET @NSTEP=180
	 
	 SELECT @NATDEARLYGOING=COUNT(*) FROM @TATTENDANCE A
	 JOIN EMP_SHIFTS B ON A.SHIFT_ID=B.SHIFT_ID                      
	 WHERE A.TIME_OUT < B.SHIFT_TIME_OUT

	 SELECT @NATDLATECOMING=COUNT(*) FROM @TATTENDANCE A 
	 JOIN EMP_SHIFTS B ON A.SHIFT_ID=B.SHIFT_ID                      
	 WHERE A.TIME_IN > B.SHIFT_TIME_IN AND A.TIME_IN <B.LATE_CUTOFF
	 	 
	 SET @NATDHALFDAY=ISNULL(@NCURDRHL,0)
	 
	 SET @NSTEP=190                      
	 --- PROCESS THOSE LEAVES IN WHICH WEEKLY OFF/HOLIDAY FALLS AS INTERVENING LEAVE                      
	  
--	 DECLARE @DFIRSTLEAVEDT DATETIME,@DLASTLEAVEDT DATETIME
--
--	 SELECT @DLASTWEEKLYOFFHOLIDAYON='' ,@DFIRSTLEAVEDT='',@DLASTLEAVEDT=''
--	                                           
--	 DECLARE LEAVESCUR CURSOR FOR SELECT ATTENDANCE_DT,TIME_IN,TIME_OUT,LOG_ABSENT_STATUS FROM EMP_ATTENDANCE                      
--	 WHERE EMP_ID=@CEMPID AND ATTENDANCE_DT BETWEEN @DFROMDT AND @DTODT                      
--	 AND (TIME_IN='' OR TIME_OUT='') AND ATTENDANCE_DT<>@DBDAY   
--	 --AND ATTENDANCE_DT NOT  IN (SELECT LEAVE_DT FROM FESTIVAL_LEAVES WHERE LOCATION_ID=@CEMPLOCID)  
--	 AND ATTENDANCE_DT>@DJOININGDATE                      
--	 ORDER BY ATTENDANCE_DT,TIME_IN                      
--	 
--	 SET @NSTEP=200                       
--	 
--	 OPEN LEAVESCUR                      
--	 FETCH NEXT FROM LEAVESCUR INTO @DATTENDANCEDT,@DTIMEIN,@DTIMEOUT,@NLOGABSENTSTATUS                      
--	 WHILE @@FETCH_STATUS=0                      
--	 BEGIN                      
--		   SET @NSTEP=210	
--		   INSERT @TLEAVES VALUES (@DATTENDANCEDT,0)                      
--		   
--		   IF @DFIRSTLEAVEDT='' 
--				SET @DFIRSTLEAVEDT=@DATTENDANCEDT
--		   ELSE
--		   IF DATEDIFF(DD,@DLASTLEAVEDT,@DATTENDANCEDT)>1		                       
--		   BEGIN	
--				
--				SET @NSTEP=220
--				IF DATEDIFF(DD,@DFIRSTLEAVEDT,@DLASTLEAVEDT)>2
--				AND NOT (DATENAME(W,@DFIRSTLEAVEDT)=@CWEEKLYOFF1 OR DATENAME(W,@DFIRSTLEAVEDT)=@CWEEKLYOFF2)  
--				AND NOT (DATENAME(W,@DLASTLEAVEDT)=@CWEEKLYOFF1 OR DATENAME(W,@DLASTLEAVEDT)=@CWEEKLYOFF2)
--				AND NOT EXISTS (SELECT LEAVE_DT FROM FESTIVAL_LEAVES WHERE LOCATION_ID=@CEMPLOCID 
--							AND LEAVE_DT IN (@DFIRSTLEAVEDT,@DLASTLEAVEDT))
--				BEGIN	
--					SET @NSTEP=230
--					SET @NIVLEAVECNT=0
--					SELECT @NIVLEAVECNT=COUNT(*) FROM @TLEAVES WHERE MONTH_DT>@DFIRSTLEAVEDT AND MONTH_DT <@DLASTLEAVEDT
--					AND ((DATENAME(W,MONTH_DT)=@CWEEKLYOFF1 OR DATENAME(W,MONTH_DT)=@CWEEKLYOFF2) 
--						OR MONTH_DT IN (SELECT LEAVE_DT FROM FESTIVAL_LEAVES WHERE LOCATION_ID=@CEMPLOCID))
--
--					SET @NCURDRFL4=@NCURDRFL4+ISNULL(@NIVLEAVECNT,0)
--					
--					UPDATE @TLEAVES SET MARK_AS_LEAVE=1 WHERE MONTH_DT>@DFIRSTLEAVEDT AND MONTH_DT <@DLASTLEAVEDT
--					AND ((DATENAME(W,MONTH_DT)=@CWEEKLYOFF1 OR DATENAME(W,MONTH_DT)=@CWEEKLYOFF2) 
--						OR MONTH_DT IN (SELECT LEAVE_DT FROM FESTIVAL_LEAVES WHERE LOCATION_ID=@CEMPLOCID))
--				END
--		
--				SET @DFIRSTLEAVEDT=@DATTENDANCEDT	
--		   END 	
--			
--		   SET @NSTEP=240	
--		   
--		   SET @DLASTLEAVEDT=@DATTENDANCEDT
--	                       
--		   FETCH NEXT FROM LEAVESCUR INTO @DATTENDANCEDT,@DTIMEIN,@DTIMEOUT,@NLOGABSENTSTATUS                      
--	 END                      
--	                       
--	 CLOSE LEAVESCUR                      
--	 DEALLOCATE LEAVESCUR    

	 SELECT @NCURDRFL4=COUNT(*) FROM   EMP_ATTENDANCE WHERE EMP_ID=@CEMPID
		AND ATTENDANCE_DT BETWEEN @DFROMDT AND @DTODT AND 
		(DATENAME(W,ATTENDANCE_DT)=@CWEEKLYOFF1 OR ATTENDANCE_DT IN 
		(SELECT LEAVE_DT FROM FESTIVAL_LEAVES WHERE LOCATION_ID=@CEMPLOCID))
		           
		AND (TIME_IN='' OR TIME_OUT='') AND DATEADD(DD,-1,ATTENDANCE_DT)  IN 
		(SELECT A.ATTENDANCE_DT FROM EMP_ATTENDANCE A LEFT OUTER JOIN 
		 FESTIVAL_LEAVES B ON B.LEAVE_DT=A.ATTENDANCE_DT AND B.LOCATION_ID=@CEMPLOCID                   
		 WHERE EMP_ID=@CEMPID AND ATTENDANCE_DT BETWEEN @DFROMDT AND @DTODT AND (TIME_IN='' OR TIME_OUT='')
		 AND ATTENDANCE_DT<>@DBDAY AND B.LEAVE_DT IS NULL )
		AND DATEADD(DD,1,ATTENDANCE_DT)  IN 
		(SELECT A.ATTENDANCE_DT FROM EMP_ATTENDANCE A LEFT OUTER JOIN 
		 FESTIVAL_LEAVES B ON B.LEAVE_DT=A.ATTENDANCE_DT AND B.LOCATION_ID=@CEMPLOCID                   
		 WHERE EMP_ID=@CEMPID AND ATTENDANCE_DT BETWEEN @DFROMDT AND @DTODT AND (TIME_IN='' OR TIME_OUT='')
		 AND ATTENDANCE_DT<>@DBDAY AND B.LEAVE_DT IS NULL)	                  
	  
	 SET @NCURDRFL4=ISNULL(@NCURDRFL4,0)
	 SET @NWEEKOFFFESTIVALNOTCREDITED = @NCURDRFL4

	 SET @NSTEP=250 
	 
--
--SELECT  ISNULL(@NCURDRFL1,0),ISNULL(@NCURDRFL2,0),ISNULL(@NCURDRFL3,0),ISNULL(@NCURDRFL4,0),
--             	 ISNULL(@NCURDRFL5,0)                     
--	                    

	 SET @NCURDRFL=ISNULL(@NCURDRFL1,0)+ISNULL(@NCURDRFL2,0)+ISNULL(@NCURDRFL3,0)+ISNULL(@NCURDRFL4,0)+                      
	 ISNULL(@NCURDRFL5,0)                     
	                    
	                       
	 ---- CONVERT EVERY THREE SHORT LEAVES INTO HALF DAY                      
	 IF ISNULL(@NCURDRSL,0) > 0                      
	 BEGIN                      
		  SET @NSTEP=260
		  SET @NTEMPSL = (@NCURDRSL/3)                      
		  SET @NCURDRHL = @NCURDRHL + @NTEMPSL                      
		  SET @NCURDRSL = 0                      
	 END                      
	                      
	 SET @NSTEP=270                     
	 SELECT @NCURDRHL=ISNULL(@NCURDRHL,0),@NCURDRSL=ISNULL(@NCURDRSL,0)                      
	                       
	 IF @DJOININGDATE>@DFROMDT                      
	  SET @NJOINEDONDAY=DATEDIFF(D,@DFROMDT,@DJOININGDATE)+1                      
	 ELSE                      
	  SET @NJOINEDONDAY=0                      
	 
	 --SELECT  @NCURDRFL,@NCURDRHL,@NCURDRSL,@NABSENTDAYS,@NWORKINGONWEEKLYOFF,@NWORKINGONFESTIVALOFF,
			 --@NWORKINGONBDAYOFF,@NJOINEDONDAY

                      
	 SET @NCURRENTLEAVEDR = ( @NCURDRFL + CAST(@NCURDRHL AS NUMERIC(10,2))/2 + CAST(@NCURDRSL AS NUMERIC(10,2))/4)+                      
		   ISNULL(@NABSENTDAYS,0)-ISNULL(@NWORKINGONWEEKLYOFF,0)-ISNULL(@NWORKINGONFESTIVALOFF,0)-                      
		   ISNULL(@NWORKINGONBDAYOFF,0)+@NJOINEDONDAY                      
	 
	 SET @NSTEP=280                      
	 IF @NCURRENTLEAVEDR<= 6                      
	  SET @NLEAVECREDITCF=2                      
	 ELSE                      
	 IF @NCURRENTLEAVEDR >6 AND @NCURRENTLEAVEDR<= 12                      
	  SET @NLEAVECREDITCF=1.5                      
	 ELSE                      
	 IF @NCURRENTLEAVEDR >12 AND @NCURRENTLEAVEDR<= 18                      
	  SET @NLEAVECREDITCF=1                      
	 ELSE                      
	 IF @NCURRENTLEAVEDR >18 AND @NCURRENTLEAVEDR<= 24                      
	  SET @NLEAVECREDITCF=0.5                      
	 ELSE                      
	   SET @NLEAVECREDITCF=0                      
	 
	 SET @NSTEP=290                       
	 
	 SET @NCURRENTLEAVEDR=@NCURRENTLEAVEDR-@NJOINEDONDAY                      
	                        
	--SELECT ISNULL(@NWORKINGONWEEKLYOFF,0),ISNULL(@NWORKINGONFESTIVALOFF,0),ISNULL(@NWORKINGONBDAYOFF,0)                        
	                      
	 SET @NCURRENTLEAVECR = ISNULL(@NWORKINGONWEEKLYOFF,0)+ISNULL(@NWORKINGONFESTIVALOFF,0)+ISNULL(@NWORKINGONBDAYOFF,0)-@NJOINEDONDAY                      
	                        
	 -- END OF CALCULATING LEAVES CREDIT FOR CURRENT MONTH & NEXT MONTH                      
	                       
	 SET @NSTEP=300                       
	 
	 
	                       
	-- SELECT @NOPSLEAVECR,@NCURRENTLEAVECR,@NCURDRFL,@NCURDRHL, @NCURDRSL--,@NWEEKOFFFESTIVALNOTCREDITED AS HOLIDAYDENIED                      
	 SET @NLWPDAYS = @NOPSLEAVECR+@NCURRENTLEAVECR - ( @NCURDRFL + (CAST(@NCURDRHL AS NUMERIC(10,2))/2) +                      
		  (CAST(@NCURDRSL AS NUMERIC(10,2))/4))                      
	                            
	 IF @NLWPDAYS<0                      
	  SET @NLWPDAYS=ABS(@NLWPDAYS)                      
	 ELSE                      
	  SET @NLWPDAYS=0                      
	 
--SELECT @NOPSLEAVECR,@NCURRENTLEAVECR,@NCURDRFL ,@NCURDRHL,@NCURDRSL                     
	 SET @NCBSLEAVECF = @NOPSLEAVECR+@NCURRENTLEAVECR - ( @NCURDRFL + (CAST(@NCURDRHL AS NUMERIC(10,2))/2) +                      
						(CAST(@NCURDRSL AS NUMERIC(10,2))/4))                      

	                   
	                       
	 SET @NSTEP=310                      
	 IF @NCBSLEAVECF<0                      
		SET @NCBSLEAVECF=0                              
	
    --SELECT @NCBSLEAVECF,	@NLEAVECREDITCF	                       
	 SET @NCBSLEAVE=@NCBSLEAVECF+@NLEAVECREDITCF                      
	                       
	 PRINT 'INSERT FINAL LEAVES'                      
	 
	 SET @NSTEP=320                      
	 IF @BRETURNLEAVESONLY=0                         
		INSERT EMP_LEAVES_SUMMARY ( EMP_ID, XN_DT, OB, ABSENT_LEAVES_DR, FULL_LEAVES_DR, HALF_LEAVES_DR,                      
			   SHORT_LEAVES_DR, CURRENT_MONTH_LEAVES_CR, CF_MONTH_LEAVES_CR, LAST_UPDATE,CURRENT_MONTH_LEAVES_DR )                      
			SELECT @CEMPID AS EMP_ID,@DSTARTDT AS XN_DT,@NOPSLEAVECR AS OB,ISNULL(@NABSENTDAYS,0) AS ABSENT_LEAVES_DR,                      
			@NCURDRFL AS FULL_LEAVES_DR,@NCURDRHL AS HALF_LEAVES_DR,@NCURDRSL AS SHORT_LEAVES_DR,                      
			@NCURRENTLEAVECR AS CURRENT_MONTH_LEAVES_CR,@NLEAVECREDITCF AS CF_MONTH_LEAVES_CR,                      
			GETDATE() AS LAST_UPDATE,0 AS CURRENT_MONTH_LEAVES_DR
	 
	 SET @NSTEP=330                      
	 SELECT @NPRESENTDAYS=COUNT(ATTENDANCE_DT) FROM @TATTENDANCE A JOIN EMP_SHIFTS B ON A.SHIFT_ID=B.SHIFT_ID                      
	 WHERE A.TIME_IN <= B.SHIFT_TIME_IN AND A.TIME_OUT >= B.SHIFT_TIME_OUT                       
	                       
	                       
	 SELECT @NWEEKLYOFFTAKEN= COUNT(DISTINCT ATTENDANCE_DT) FROM EMP_ATTENDANCE (NOLOCK)                       
	 WHERE EMP_ID=@CEMPID AND ATTENDANCE_DT BETWEEN @DFROMDT AND @DTODT AND (DATENAME(W,ATTENDANCE_DT)=@CWEEKLYOFF1 OR                      
	 DATENAME(W,ATTENDANCE_DT)=@CWEEKLYOFF2) AND TIME_IN='' AND TIME_OUT=''                      
	 

	 SET @NSTEP=340     
	
     IF OBJECT_ID('TEMPDB..#TMPATTENDANCE','U') IS NOT NULL
		DROP TABLE #TMPATTENDANCE                  
	 
      SELECT @CEMPID AS EMP_ID,CONVERT(INT,0) AS LOG_ABSENT_STATUS,* INTO #TMPATTENDANCE FROM @TATTENDANCE
	
     INSERT #TMPATTENDANCE
     SELECT DISTINCT EMP_ID,LOG_ABSENT_STATUS,ATTENDANCE_DT,TIME_IN,TIME_OUT,0 AS FL_COUNT,                      
	 0 AS HL_COUNT,0 AS SL_COUNT,SHIFT_ID FROM EMP_ATTENDANCE
	 WHERE EMP_ID=@CEMPID AND ATTENDANCE_DT NOT IN(SELECT ATTENDANCE_DT FROM #TMPATTENDANCE)
	 

	UPDATE A SET LOG_ABSENT_STATUS=B.LOG_ABSENT_STATUS FROM #TMPATTENDANCE A JOIN  EMP_ATTENDANCE B ON A.EMP_ID=B.EMP_ID
	AND A.ATTENDANCE_DT=B.ATTENDANCE_DT
	
 	 EXEC SP_EMP_CALCSALARYDAYS
	 @CEMPID=@CEMPID,
	 @DFROMDT=@DFROMDT,
	 @DTODT=@DTODT,
	 @NHALFDAYCNT=@NCURDRHL,
	 @NSALARYDAYS=@NSALARYDAYS OUTPUT,
	 @NOPSLEAVECR=@NOPSLEAVECR OUTPUT
	 
	 GOTO END_PROC                    
                      
 END TRY                      
                       
 BEGIN CATCH                      
	  SELECT @CERRORMSG = 'PROCEDURE SP_EMP_PAYSLIP_LEAVESCALC_1 STEP: '+STR(ISNULL(@NSTEP,0))+' LINE NO. :'+                      
	  ISNULL(LTRIM(RTRIM(STR(ERROR_LINE()))),'NULL LINE')+'MSG :'+ISNULL(ERROR_MESSAGE(),'NULL MSG')                      
	  
	  GOTO END_PROC
 END CATCH                       
 
END_PROC:
	   SELECT ISNULL(@NOPSLEAVECR,0) AS OPS,                       
	   ISNULL(@NABSENTDAYS,0) AS ABSENT_DAYS,                      
	   ISNULL(@NCURDRFL,0) AS LEAVE_DR_FL,                      
	   ISNULL(@NCURDRHL,0) AS LEAVE_DR_HL,                      
	   ISNULL(@NCURDRSL,0) AS LEAVE_DR_SL,                      
	   ISNULL(@NLEAVECREDITCF,0) AS LEAVE_CR_FL,                      
	   0 AS LEAVE_CR_HL,                      
	   0 AS LEAVE_CR_SL,                      
	   ISNULL(@NCURRENTLEAVEDR,0) AS LEAVES_TAKEN,                      
	   ISNULL(@NCURRENTLEAVECR,0) AS LEAVES_CREDITED,                      
	   ISNULL(@NCBSLEAVE,0) AS CBS,                      
	   ISNULL(@NMONTHDAYS,0)-ISNULL(@NSALARYDAYS,0) AS LWP_DAYS,                      
	   ISNULL(@NPRESENTDAYS,0) AS PRESENT_DAYS,                      
	   ISNULL(@NWEEKLYOFFTAKEN,0) AS WEEKLY_OFF_TAKEN,
	   ISNULL(@NSALARYDAYS,0) AS SALARY_DAYS,
	   ISNULL(@NWORKINGDAYS,0) AS WORKING_DAYS,
	   ISNULL(@NATDEARLYGOING,0) AS ATD_EARLY_GOING,
	   ISNULL(@NATDLATECOMING,0) AS ATD_LATE_COING,
	   ISNULL(@NATDHALFDAY,0) AS ATD_HALF_DAY,
	   ISNULL(@CERRORMSG,'') AS ERRMSG
	
	 
                            
END               
--*************************************** END OF PROCEDURE SP_EMP_PAYSLIP_LEAVESCALC_1
