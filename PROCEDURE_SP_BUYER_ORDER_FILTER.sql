create PROCEDURE SP_BUYER_ORDER_FILTER      
(    
 @STEP NUMERIC(1)=0,     -- 0 FOR ALL , 1 FOR CUSTOMER    
 @MODE VARCHAR(1),     -- 0 FOR ALL AND OTHER FOR FILTER MODE    
 @MEMO_TYPE VARCHAR(1),           -- 0 FOR ALL AND OTHER FOR FILTER MEMO_TYPE    
 @ORDER_FMDATE VARCHAR(20)='',    -- IF '' THEN ALL ORDER_DT ELSE FILTER ORDER_DT    
 @ORDER_TODATE VARCHAR(20)='',    -- IF '' THEN ALL ORDER_DT ELSE FILTER ORDER_DT    
 @DEL_FMDATE VARCHAR(20)='',      -- IF '' THEN ALL DELIVERY_DT ELSE FILTER DELIVERY_DT    
 @DEL_TODATE VARCHAR(20)='',      -- IF '' THEN ALL DELIVERY_DT ELSE FILTER DELIVERY_DT    
 @TRIAL_FMDATE VARCHAR(20)='',      -- IF '' THEN ALL TRIAL_DT ELSE FILTER TRIAL_DT    
 @TRIAL_TODATE VARCHAR(20)='',      -- IF '' THEN ALL TRIAL_DT ELSE FILTER TRIAL_DT    
 @CUST_CODE  VARCHAR(50)='',      -- IF '' THEN ALL CUSTOMER_CODE ELSE FILTER CUSTOMER_CODE    
 @AC_CODE VARCHAR(50)='',         -- IF '' THEN ALL AC_CODE ELSE FILTER AC_CODE    
 @STATUS NUMERIC(18,0),           -- 0 FOR ALL , 1 FOR PENDING , 2 FOR APPROVED    
 @CANCELLED NUMERIC(1)=2,                -- 0 FOR ALL , 1 FOR CANCELED    
 @APPROVED BIT=0,                 --     
 @SALES_PERSON VARCHAR(100)='',   -- IF ''THEN ALL ELSE FILTER EMP_NAME    
 @LOC VARCHAR(4)=''    
)     
--WITH ENCRYPTION     
AS     
BEGIN      

  --(dinkar) Replace  left(memoid,2) to Location_code 

  declare @cHoLocId varchar(4),@cCurLocId varchar(4)
  select top 1 @cHoLocId=value from config (NOLOCK) WHERE config_option='ho_location_id'
  select top 1 @cCurLocId=value from config (NOLOCK) WHERE config_option='location_id'

  IF @STEP = 1    
  BEGIN    
  SELECT TOP 50    
 USER_CUSTOMER_CODE,CUSTOMER_CODE,CUSTOMER_FNAME + ' ' + CUSTOMER_LNAME AS CUSTOMER_NAME    
 FROM CUSTDYM     
 WHERE INACTIVE=0 AND CUSTOMER_CODE<>'000000000000' AND    
 (USER_CUSTOMER_CODE LIKE '%'+@CUST_CODE+'%' OR CUSTOMER_FNAME LIKE '%'+@CUST_CODE+'%' OR CUSTOMER_LNAME LIKE '%'+@CUST_CODE+'%')    
  END    
  ELSE    
  BEGIN        
      
       DECLARE @TBLORDERPENDING TABLE (CUSTOMER_NAME VARCHAR(100),MOBILENO VARCHAR(100),AC_NAME VARCHAR(500),CITY VARCHAR(50),STATE VARCHAR(50),      
           ORDER_NO VARCHAR(100),ORDER_DT VARCHAR(20),DELIVERY_DT VARCHAR(20),      
           ORDER_QUANTITY NUMERIC(18,2),AMOUNT NUMERIC(18,2),LOCATION VARCHAR(100),ARTICLE_CODE VARCHAR(100) ,SALES_PERSON VARCHAR(100),STATUS VARCHAR(100),CANCELLED INT,MEMO_TYPE INT,    
           ORDER_ID VARCHAR(100),SUBTOTAL NUMERIC(18,2),DISCOUNT_PERCENTAGE NUMERIC(18,2),DISCOUNT_AMOUNT NUMERIC(18,2),ROUND_OFF NUMERIC(18,2),REF_NO VARCHAR(100),FIN_YEAR VARCHAR(20),TOTAL_AMOUNT NUMERIC(18,2),REC_AMOUNT NUMERIC(18,2))    
         
     DECLARE @FILTER  VARCHAR(MAX), @CONFIG  INT,@LOCID VARCHAR(10),@TBLNAME VARCHAR(100)    
     DECLARE @DTSQL NVARCHAR(MAX)    
         
      SET @FILTER=' A.MODE=CASE WHEN '+@MODE+'=''0'' THEN A.MODE ELSE '''+@MODE+''' END       
                  AND A.MEMO_TYPE=CASE WHEN '''+@MEMO_TYPE+'''=0 THEN A.MEMO_TYPE ELSE '''+@MEMO_TYPE+''' END  '    
                  IF(@ORDER_FMDATE<>'')    
                  BEGIN    
                  SET @FILTER=@FILTER+' AND A.ORDER_DT BETWEEN  '''+@ORDER_FMDATE+''' AND '''+@ORDER_TODATE+''' '    
                  END    
                      
                  IF(@DEL_FMDATE<>'')    
                  BEGIN    
                  SET @FILTER=@FILTER+' AND A.DELIVERY_DT BETWEEN '''+@DEL_FMDATE+''' AND '''+@DEL_TODATE +''''    
                  END    
                      
                      
                  IF(@TRIAL_FMDATE<>'')    
                  BEGIN    
                  SET @FILTER=@FILTER+' AND A.TRAIL_DT BETWEEN '''+@TRIAL_FMDATE+''' AND '''+@TRIAL_TODATE +''''    
                  END    
                      
                                                          
                      
                  SET @FILTER=@FILTER+'AND A.CUSTOMER_CODE=CASE WHEN '''+@CUST_CODE +'''='''' THEN A.CUSTOMER_CODE ELSE '''+@CUST_CODE +'''  END       
                  AND A.AC_CODE=CASE WHEN '''+@AC_CODE +'''='''' THEN A.AC_CODE ELSE '''+@AC_CODE +'''  END         
                  AND A.CANCELLED=CASE WHEN '+STR(@CANCELLED)+' =2 THEN A.CANCELLED    
                                        ELSE '+STR(@CANCELLED)+'  END     
                  AND A.APPROVED=CASE WHEN '+STR(@APPROVED)+' =0 THEN A.APPROVED    
                                        ELSE 1  END'      
           
     
        IF OBJECT_ID('TMPDB..#TBLPENDINGORDER','U') IS NOT NULL    
                  DROP TABLE #TBLPENDINGORDER    
                                                    
        CREATE TABLE #TBLPENDINGORDER(ORDER_ID VARCHAR(100),STATUS VARCHAR(10),PEND_APP INT)       
   --SEARCH PENDING ORDER  IN PO 12.11.2014    
   
   
   -- Done after request raised by Pankaj that at Showroom Po status should not be checked (For client Bharat Reshma) Date:05-03-2024 (Sanjay)
   IF @cHoLocId=@cCurLocId
   BEGIN
	   SET @DTSQL=N'SELECT DISTINCT A.ORDER_ID,''PO'',PEND_APP=0    
		 FROM WSL_ORDER_MST A (NOLOCK)    
		 JOIN WSL_ORDER_DET B (NOLOCK) ON A.ORDER_ID=B.ORDER_ID    
		 LEFT  JOIN     
		(    
		   SELECT PRODUCT_CODE    
		   FROM  POD01106 POD (NOLOCK)     
		   JOIN POM01106 POM (NOLOCK) ON POD.PO_ID =POM.PO_ID     
		   WHERE POM.CANCELLED =0     
		  ) C ON C.PRODUCT_CODE=B.PRODUCT_CODE   
		 LEFT JOIN #TBLPENDINGORDER T ON T.ORDER_ID=A.ORDER_ID    
		   WHERE   '+@FILTER+' AND ISNULL(B.ORDER_TYPE,0)=0    
		   AND ISNULL(B.CANCELLED,0)=0 AND  C.PRODUCT_CODE IS NULL  AND T.ORDER_ID IS NULL'    
       
		 PRINT  @DTSQL    
		 INSERT INTO #TBLPENDINGORDER    
		 EXEC SP_EXECUTESQL @DTSQL     
   END
   
   
     
 --SEARCH PENDING ORDER  IN PIM (GRN PENDING) 12.11.2014     
 SET @DTSQL=N'SELECT DISTINCT A.ORDER_ID,''GRN'',PEND_APP=0    
    FROM WSL_ORDER_MST A (NOLOCK)    
    JOIN WSL_ORDER_DET B (NOLOCK) ON A.ORDER_ID=B.ORDER_ID    
    LEFT JOIN #TBLPENDINGORDER T ON T.ORDER_ID=A.ORDER_ID    
    LEFT JOIN     
    (    
       SELECT PRODUCT_CODE FROM PID01106 PID (NOLOCK)    
       JOIN PIM01106 PIM (NOLOCK) ON PIM.MRR_ID=PID.MRR_ID    
       WHERE PIM.CANCELLED=0     
    ) D ON D.PRODUCT_CODE=B.PRODUCT_CODE   
     WHERE   '+@FILTER+' AND ISNULL(B.ORDER_TYPE,0)=0    
     AND ISNULL(B.CANCELLED,0)=0    
     AND T.ORDER_ID IS NULL AND D.PRODUCT_CODE IS NULL'    
          
     PRINT  @DTSQL    
     INSERT INTO #TBLPENDINGORDER    
     EXEC SP_EXECUTESQL @DTSQL     
  
  
      
     
 --SEARCH PENDING ORDER  IN CMM (BILL PENDING) 12.11.2014 ORDER_TYPE =0    
        
  IF OBJECT_ID ('TEMPDB..#ORDDLV','U') IS NOT NULL    
           DROP TABLE #ORDDLV    
               
     SELECT A.CUSTOMER_CODE    
     ,A.CM_NO     
     ,A.CM_DT     
     ,B.PRODUCT_CODE       
     ,B.QUANTITY    
     ,B.ROW_ID    
  INTO #ORDDLV          
  FROM CMM01106 A (NOLOCK)     
  JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID    
  JOIN WSL_ORDER_DET WOD (NOLOCK) ON ((B.PRODUCT_CODE=WOD.PRODUCT_CODE AND   WOD.ORDER_TYPE=0)  
                                    OR ((B.PRODUCT_CODE=WOD.PRODUCT_CODE OR B.PRODUCT_CODE =WOD.REF_PRODUCT_CODE) AND   WOD.ORDER_TYPE=1))
       --B.PRODUCT_CODE=    
       --(CASE WHEN WOD.ORDER_TYPE=0 THEN WOD.PRODUCT_CODE ELSE WOD.REF_PRODUCT_CODE END)    
  JOIN WSL_ORDER_MST WOM (NOLOCK) ON WOD.ORDER_ID=WOM.ORDER_ID AND A.CUSTOMER_CODE=WOM.CUSTOMER_CODE    
  WHERE A.CM_MODE = 1 AND B.RFNET>0     
  AND A.CANCELLED = 0 AND A.CUSTOMER_CODE <> '000000000000' AND WOM.CANCELLED=0 AND ISNULL(WOD.CANCELLED,0)=0    
    
    
  ;WITH CTE_REMOVEDUP AS    
  (    
   SELECT ROW_NUMBER() OVER(PARTITION BY PRODUCT_CODE,CUSTOMER_CODE ORDER BY CM_DT ASC,CM_NO ASC) AS SNO    
      ,CUSTOMER_CODE    
      ,CM_NO    
      ,PRODUCT_CODE    
      ,QUANTITY    
   FROM #ORDDLV       
  )    
  DELETE CTE_REMOVEDUP WHERE SNO<>1    
      
  CREATE INDEX IX_ORDDLV_PRODUCT_CODE  ON #ORDDLV(PRODUCT_CODE)    
  CREATE INDEX IX_ORDDLV_CUSTOMER_CODE ON #ORDDLV(CUSTOMER_CODE)    
  CREATE INDEX IX_ORDDLV_CM_NO ON #ORDDLV(CM_NO)       
    
  
        
 SET @DTSQL=N'SELECT DISTINCT A.ORDER_ID,''BILLING'',PEND_APP=0    
    FROM WSL_ORDER_MST A (NOLOCK)    
    JOIN WSL_ORDER_DET B (NOLOCK) ON A.ORDER_ID=B.ORDER_ID    
    LEFT JOIN #TBLPENDINGORDER T ON T.ORDER_ID=A.ORDER_ID    
    LEFT JOIN    
     (    
       SELECT PRODUCT_CODE,CMM.CUSTOMER_CODE    
       FROM #ORDDLV CMM (NOLOCK)    
     ) CMD ON ((CMD.PRODUCT_CODE=b.PRODUCT_CODE AND   b.ORDER_TYPE=0)  
              OR ((cmd.PRODUCT_CODE=b.PRODUCT_CODE OR cmd.PRODUCT_CODE =b.REF_PRODUCT_CODE) AND   b.ORDER_TYPE=1))   
      AND A.CUSTOMER_CODE=CMD.CUSTOMER_CODE    
     WHERE   '+@FILTER+'    
     AND ISNULL(B.CANCELLED,0)=0     
     AND T.ORDER_ID IS NULL AND CMD.PRODUCT_CODE IS NULL'     
       
     PRINT  @DTSQL    
     INSERT INTO #TBLPENDINGORDER    
     EXEC SP_EXECUTESQL @DTSQL     
     
	-- CMD.PRODUCT_CODE=CASE WHEN ISNULL(B.ORDER_TYPE,0)=0 THEN B.PRODUCT_CODE ELSE REF_PRODUCT_CODE END 
 SET @LOCID=( SELECT TOP 1 DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID )    
 SET @CONFIG=(SELECT TOP 1 VALUE FROM CONFIG WHERE CONFIG_OPTION LIKE 'BO_DELIVERY_END_POINT' )    
     
      
    IF ISNULL(@CONFIG,0)<>0    
    BEGIN    
               
      
   SET @DTSQL=N'SELECT DISTINCT  A.ORDER_ID,''BILLING'',PEND_APP=0    
     FROM WSL_ORDER_MST A    
     JOIN WSL_ORDER_DET B ON B.ORDER_ID=A.ORDER_ID    
     LEFT JOIN #TBLPENDINGORDER T ON T.ORDER_ID=A.ORDER_ID    
     LEFT JOIN     
     (    
        SELECT CMD.ROW_ID, PRODUCT_CODE,CMD.CUSTOMER_CODE    
        FROM #ORDDLV CMD (NOLOCK)    
     ) CMD ON CMD.PRODUCT_CODE=CASE WHEN ISNULL(B.ORDER_TYPE,0)=0 THEN B.PRODUCT_CODE ELSE REF_PRODUCT_CODE END    
      AND A.CUSTOMER_CODE=CMD.CUSTOMER_CODE    
     LEFT JOIN    
     (    
      SELECT HD.REF_CMD_ROW_ID,ROW_ID  FROM     
      HOLD_BACK_DELIVER_DET HD (NOLOCK)    
      JOIN HOLD_BACK_DELIVER_MST HM (NOLOCK) ON HM.MEMO_ID=HD.MEMO_ID    
      JOIN    
       (    
         SELECT REF_HBD_ROW_ID  FROM   SLS_DELIVERY_DET SDET    
         JOIN SLS_DELIVERY_MST SMST ON SDET.MEMO_ID=SMST.MEMO_ID    
         WHERE SMST.CANCELLED=0    
       ) DEL ON DEL.REF_HBD_ROW_ID=HD.ROW_ID    
       WHERE HM.CANCELLED=0    
     ) HD ON CMD.ROW_ID=HD.REF_CMD_ROW_ID    
     WHERE  '+@FILTER+'     
     AND ISNULL(B.CANCELLED,0)=0 AND T.ORDER_ID IS NULL AND HD.REF_CMD_ROW_ID IS NULL '     
         
         
     PRINT  @DTSQL    
     INSERT INTO #TBLPENDINGORDER    
    EXEC SP_EXECUTESQL @DTSQL      
                 
      SET @DTSQL=N'SELECT DISTINCT A.ORDER_ID,''DELIVERED'',PEND_APP=1    
     FROM WSL_ORDER_MST A    
     JOIN WSL_ORDER_DET B ON B.ORDER_ID=A.ORDER_ID    
     LEFT JOIN #TBLPENDINGORDER T ON T.ORDER_ID=A.ORDER_ID    
     WHERE  '+@FILTER+'     
     AND ISNULL(B.CANCELLED,0)=0 AND T.ORDER_ID IS NULL'     
                       
     PRINT @DTSQL    
     INSERT INTO #TBLPENDINGORDER    
     EXEC SP_EXECUTESQL @DTSQL    
            END    
                
    ELSE IF ISNULL(@CONFIG,0)=0    
    BEGIN    
  
     SET @DTSQL=N'SELECT DISTINCT A.ORDER_ID,''DELIVERED'',PEND_APP=1    
     FROM WSL_ORDER_MST A    
     JOIN WSL_ORDER_DET B ON B.ORDER_ID=A.ORDER_ID    
     LEFT JOIN #TBLPENDINGORDER T ON T.ORDER_ID=A.ORDER_ID    
     WHERE  '+@FILTER+'     
     AND ISNULL(B.CANCELLED,0)=0 AND T.ORDER_ID IS NULL'     
                       
     PRINT @DTSQL    
     INSERT INTO #TBLPENDINGORDER    
     EXEC SP_EXECUTESQL @DTSQL    
  
    END            
   
    
   
                
    SELECT PO.ORDER_ID,A.ORDER_NO, A.ORDER_DT,    
    A.DELIVERY_DT,A.TRAIL_DT,
    CUSTOMER_NAME=ISNULL(C.CUSTOMER_TITLE,'') +' '+ISNULL(C.CUSTOMER_FNAME,'') +' '+ISNULL(C.CUSTOMER_LNAME,''),    
    SALES_PERSON=ISNULL(EMPLOYEE.EMP_NAME,''),    
    SUPPLIER=LM01106.AC_NAME,LMV01106.CITY,STATE.STATE,    
    ORDER_QTY=CASE WHEN A.CANCELLED=0 THEN SUM(B.QUANTITY)  ELSE 0 END,    
    SUBTOTAL=CASE WHEN A.CANCELLED=0 THEN A.SUBTOTAL ELSE 0 END,    
    DISC_PERCENTAGE=CASE WHEN A.CANCELLED=0 THEN A.DISCOUNT_PERCENTAGE ELSE 0 END,    
    DISC_AMT=CASE WHEN A.CANCELLED=0 THEN A.DISCOUNT_AMOUNT ELSE 0 END,    
    TOTAL_AMOUNT=CASE WHEN A.CANCELLED=0 THEN A.TOTAL_AMOUNT ELSE 0 END,    
    REC_AMOUNT=CASE WHEN A.CANCELLED=0 THEN SUM(DISTINCT ISNULL(ARC.NET_AMOUNT,0)) ELSE 0 END,    
    PENDING_AMOUNT=CASE WHEN A.CANCELLED=0  THEN TOTAL_AMOUNT-SUM(DISTINCT ISNULL(ARC.NET_AMOUNT,0)) ELSE 0 END,    
    ROUND_OFF=CASE WHEN A.CANCELLED=0 THEN ROUND_OFF ELSE 0 END,    
    A.REF_NO,A.FIN_YEAR,STATUS ,      
    CANCELLED=CASE WHEN A.CANCELLED=0  THEN '' ELSE 'CANCELLED' END  ,A.REMARKS  ,c.mobile  
    FROM #TBLPENDINGORDER PO (NOLOCK)    
    JOIN WSL_ORDER_MST A (NOLOCK) ON PO.ORDER_ID =A.ORDER_ID     
    JOIN WSL_ORDER_DET B (NOLOCK) ON A.ORDER_ID=B.ORDER_ID    
    LEFT JOIN     
    ( SELECT AR.ORDER_ID,SUM(ISNULL (ARC.NET_AMOUNT,0)) AS NET_AMOUNT    
       FROM  WSL_ORDER_ADV_RECEIPT AR (NOLOCK)     
       JOIN ARC01106 ARC (NOLOCK) ON AR.ADV_REC_ID=ARC.ADV_REC_ID    
       WHERE ARC.CANCELLED=0    
       GROUP BY AR.ORDER_ID    
    ) ARC ON ARC.ORDER_ID=A.ORDER_ID    
    INNER JOIN LOCATION L  ON L.DEPT_ID =a.location_Code    
    LEFT OUTER JOIN EMPLOYEE ON EMPLOYEE.EMP_CODE =A.SALE_EMP_CODE       
    LEFT OUTER JOIN CUSTDYM C ON C.CUSTOMER_CODE=A.CUSTOMER_CODE      
    LEFT OUTER JOIN LM01106 ON LM01106.AC_CODE=A.AC_CODE       
    LEFT OUTER JOIN LMV01106 ON LMV01106.AC_CODE=A.AC_CODE      
    LEFT OUTER JOIN CITY ON CITY.CITY_CODE=LMV01106.CITY_CODE      
    LEFT OUTER JOIN STATE ON STATE.STATE_CODE=CITY.STATE_CODE    
    WHERE PO.PEND_APP=CASE WHEN @STATUS=0 THEN PO.PEND_APP WHEN @STATUS=1 THEN 0 ELSE 1 END       
    AND EMPLOYEE.EMP_NAME=CASE WHEN @SALES_PERSON='' THEN EMPLOYEE.EMP_NAME ELSE @SALES_PERSON  END      
    AND (@LOC='' OR a.location_Code =@LOC)     
        
    GROUP BY PO.ORDER_ID,A.ORDER_NO,A.ORDER_DT,A.DELIVERY_DT,A.TRAIL_DT,ISNULL(C.CUSTOMER_TITLE,'') +' '+ISNULL(C.CUSTOMER_FNAME,'') +' '+ISNULL(C.CUSTOMER_LNAME,''),    
    EMPLOYEE.EMP_NAME,LM01106.AC_NAME,LMV01106.CITY,STATE.STATE,A.TOTAL_AMOUNT,A.SUBTOTAL,A.CANCELLED,A.DISCOUNT_PERCENTAGE,    
    A.DISCOUNT_AMOUNT,ROUND_OFF,    
    A.REF_NO,A.FIN_YEAR,STATUS ,A.REMARKS  ,C.mobile  
--    ORDER BY ORDER_ID    
            
END    
END  