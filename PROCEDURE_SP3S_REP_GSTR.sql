create PROCEDURE SP3S_REP_GSTR
(
  @DFMDATE DATETIME='2024-06-01',
  @DTODATE DATETIME='2024-06-30',
  @CGSTN_NO VARCHAR(100)='',
  @CLOC_TYPE INT=0,--0 FOR ALL 1 FOR ONLY COMPANY OWNED,
  @CDEPT_ID VARCHAR(5)=''
  
)
AS
BEGIN



     
     IF @DFMDATE<='2017-06-30'
     RETURN
     
	 IF OBJECT_ID ('TEMPDB..#TMP_DO_NOT_CONSIDER_FOR_GSTRREPS','U') is not null
	    drop table #TMP_DO_NOT_CONSIDER_FOR_GSTRREPS

	 SELECT A.user_code INTO #TMP_DO_NOT_CONSIDER_FOR_GSTRREPS FROM USERS A
	 WHERE ISNULL(DO_NOT_CONSIDER_FOR_GSTRREPS,0)=1
     
      
      
     --1 B2B
      EXEC SP3S_B2B_GSTR @DFMDATE , @DTODATE ,@CGSTN_NO ,@CLOC_TYPE ,@CDEPT_ID 
          
          IF OBJECT_ID ('TEMPDB..#TMPWSLCDNUR','U') IS NOT NULL
             DROP TABLE #TMPWSLCDNUR
    
          SELECT A.CN_ID ,CASE WHEN ISNULL(A.RM_ID,'')='' THEN A.PARTY_DEPT_ID ELSE  A.location_Code END AS DEPT_ID 
		  INTO #TMPWSLCDNUR FROM CNM01106 A (NOLOCK)
          LEFT JOIN LMP01106 B ON A.AC_CODE =B.AC_CODE 
		  LEFT JOIN LOCATION L ON L.DEPT_ID =CASE WHEN ISNULL(A.RM_ID,'')='' THEN A.PARTY_DEPT_ID ELSE  A.location_Code END 
		  LEFT JOIN LOCATION SL ON SL.DEPT_ID =A.location_Code
          WHERE A.MODE =1 
          AND CANCELLED =0  AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
          AND  ISNULL(CASE WHEN A.MODE=1 THEN  ISNULL(B.AC_GST_NO,'') ELSE  L.LOC_GST_NO END ,'')=''
          --AND A.CN_TYPE=1
          AND A.TOTAL_AMOUNT>=(CASE WHEN A.RECEIPT_DT >='2024-09-01' THEN 100000 ELSE  250000 END)
          AND A.RECEIPT_DT BETWEEN @DFMDATE AND @DTODATE
          AND (@CGSTN_NO='' OR SL.LOC_GST_NO=@CGSTN_NO)
          AND (@CLOC_TYPE=0 OR ISNULL(SL.LOC_TYPE,0) =@CLOC_TYPE)
          AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
	      and a.party_state_code <>sl.gst_state_code 
	      
	      /*remove satte condition as per ved ji discuss with damilano client
	      as on 20240927*/
	      
	      
           IF OBJECT_ID ('TEMPDB..#TMPSLSCDNUR','U') IS NOT NULL
             DROP TABLE #TMPSLSCDNUR
             
          SELECT  CM_ID 
          INTO #TMPSLSCDNUR
          FROM  CMM01106 A (NOLOCK)
          JOIN CUSTDYM B (NOLOCK) ON A.CUSTOMER_CODE =B.CUSTOMER_CODE 
          JOIN LOCATION SL ON SL.DEPT_ID =A.location_Code
		  LEFT JOIN #TMP_DO_NOT_CONSIDER_FOR_GSTRREPS U ON A.USER_CODE =U.user_code
          WHERE CANCELLED=0 AND ISNULL(A.Party_Gst_No,'')='' 
          AND NET_AMOUNT <0
          AND ABS(NET_AMOUNT)>=(CASE WHEN A.CM_DT >='2024-09-01' THEN 100000 ELSE  250000 END)
          AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
          AND A.CM_DT BETWEEN @DFMDATE AND @DTODATE
          AND (@CGSTN_NO='' OR SL.LOC_GST_NO=@CGSTN_NO)
          AND (@CLOC_TYPE=0 OR ISNULL(SL.LOC_TYPE,0) =@CLOC_TYPE)
		  AND ISNULL(A.Party_Gst_No,'')=''
		  AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
          and a.party_state_code <>sl.gst_state_code 
		  AND U.user_code IS NULL
      
   -- STATR B2CL & B2CS----(RETAIL SALE)
  
    EXEC SP3S_B2C_GSTR @DFMDATE , @DTODATE ,@CGSTN_NO ,@CLOC_TYPE ,@CDEPT_ID 
          
    --CDNR (CREDIT/ DEBIT NOTE REGISTER DELETE)
     
    DECLARE  @TBLCDNR TABLE(MEMO_ID VARCHAR(100),SR INT,RTYPE VARCHAR(10),XN_TYPE VARCHAR(100),GSTIN_UIN_RECIPIENT VARCHAR(100),INVOICE_NO VARCHAR(100),INVOICE_DT VARCHAR(15),
                            REF_VOUCHER_NO VARCHAR(100),REF_VOUCHER_DT VARCHAR(15),DOC_TYPE CHAR(1),REASON VARCHAR(1000),PLACE_OF_SUPPLY VARCHAR(100),
                            REF_VOUCHER_VALUE NUMERIC(12,2),RATE NUMERIC(8,2),TAXABLE_VALUE NUMERIC(12,2),CESS_AMOUNT NUMERIC(8,2),
                            PRE_GST CHAR(1),MEMO_DT DATETIME,RECEIVER_NAME VARCHAR(200),LOCATION_CODE varcHAR(4))
     
      --new add Debit Note
	  --Sir GSTR1 se CDNR sheet m jo debit note dikhate h to wo ab nahi show karne h Sanjiv ji se baat ho gai h (ved ji-10-1530)
	  /*
	  --end of debit note
	  */
	  
	  
	   	SELECT A.CN_ID 
		into #tmp_SOR_FDNFCN
		FROM CNM01106 A (NOLOCK)
		JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =A.location_Code
		LEFT OUTER JOIN LMP01106 LMP (NOLOCK)  ON LMP.AC_CODE =A.AC_CODE
		JOIN SOR_FDNFCN_LINK SOR (NOLOCK) ON SOR.REFFCNMEMOID =A.CN_ID 
		JOIN CND01106 CND (NOLOCK) ON CND.CN_ID =A.CN_ID 
		WHERE A.CANCELLED =0 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
		AND A.RECEIPT_DT BETWEEN @DFMDATE AND @DTODATE
		AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
		AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
		AND isnull(LMP.AC_GST_NO,'') <>'' AND isnull(LMP.AC_GST_NO,'')<>B.LOC_GST_NO
		AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
		and CND.net_rate <0
		group by A.CN_ID 
	  
	  SELECT A.rm_id as MEMO_ID,
             SR=CAST(1 AS INT),
             CAST('CDNR' AS VARCHAR(100)) AS RTYPE,
            'DN' AS XN_TYPE ,
            CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  RML.LOC_GST_NO END AS GSTIN_UIN_RECIPIENT,
            RMD.BILL_NO AS INVOICE_NO,
            REPLACE(CONVERT(VARCHAR(9),RMD.BILL_DT,6),' ','-')  AS INVOICE_DATE,
            A.rm_NO+(CASE WHEN RMD.XN_VALUE_WITHOUT_GST>=0 THEN '' ELSE 'C' END ) AS REF_VOUCHER_NO ,
            REPLACE(CONVERT(VARCHAR(9),A.RM_DT ,6),' ','-')  AS REF_VOUCHER_DT,
            (CASE WHEN RMD.XN_VALUE_WITHOUT_GST>=0 THEN 'D' ELSE 'C' END ) AS DOC_TYPE,
            ''   AS REASON,
            CASE WHEN A.MODE=1 THEN LMPS.GST_STATE_CODE+'-'+LMPS.GST_STATE_NAME ELSE  RMLS.GST_STATE_CODE+'-'+RMLS.GST_STATE_NAME END AS PLACE_OF_SUPPLY,
            A.TOTAL_AMOUNT AS REF_VOUCHER_VALUE,
            RMD.RATE ,
            abs(RMD.XN_VALUE_WITHOUT_GST)  AS TAXABLE_VALUE,
            rmd.Gst_cess_amount AS CESS_AMOUNT,
            CASE WHEN rmd .BILL_DT BETWEEN '2017-01-01' AND '2017-06-30'  THEN 'Y' ELSE 'N' END AS PRE_GST,
            A.rm_dt  ,lm.AC_NAME AS RECEIVER_NAME ,
            abs(ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)) AS GST_AMOUNT,
			A.location_Code 
            Into #TMPSORDEBITNOTE
       FROM rmm01106  A (NOLOCK)
	   JOIN SOR_FDNFCN_LINK SOR (NOLOCK) ON SOR.refFdnMemoId =A.rm_id  
       JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =CASE WHEN ISNULL(A.ACCOUNTS_DEPT_ID,'')<>'' THEN ISNULL(A.ACCOUNTS_DEPT_ID,'') ELSE    a.location_Code  END 
	   JOIN GST_STATE_MST LS (NOLOCK)  ON LS.GST_STATE_CODE  =B.GST_STATE_CODE
	   LEFT JOIN LM01106 LM ON LM.AC_CODE =A.AC_CODE 
	   LEFT OUTER JOIN LMP01106 LMP (NOLOCK)  ON LMP.AC_CODE =A.AC_CODE
       LEFT JOIN GST_STATE_MST LMPS (NOLOCK)  ON LMPS.GST_STATE_CODE  =LMP.AC_GST_STATE_CODE
       JOIN 
	   (
	     SELECT rm_id,RMD.BILL_NO AS BILL_NO,rmd.BILL_DT AS BILL_DT,
				   ISNULL(rmd.GST_PERCENTAGE,0) AS RATE  ,
				   SUM(XN_VALUE_WITHOUT_GST) AS XN_VALUE_WITHOUT_GST,
				   SUM(igst_amount ) AS igst_amount,
				   SUM(cgst_amount ) AS cgst_amount,
				   SUM(sgst_amount ) AS sgst_amount,
				   SUM(isnull(Gst_cess_amount,0)) as Gst_cess_amount
		 FROM rmd01106    rmd (NOLOCK) 
		-- WHERE ISNULL(rmd.GST_PERCENTAGE,0)>0
		 GROUP BY rm_id  ,rmd.bill_no ,rmd.bill_dt ,rmd.GST_PERCENTAGE
	   )rmd ON A.rm_id =rmd.rm_id 
	   LEFT OUTER JOIN LOCATION RML (NOLOCK) ON RML.DEPT_ID =A.PARTY_DEPT_ID 
	   LEFT JOIN GST_STATE_MST RMLS (NOLOCK)  ON RMLS.GST_STATE_CODE  =RML.GST_STATE_CODE
      WHERE A.CANCELLED =0 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
	  AND A.rm_dt  BETWEEN @DFMDATE AND @DTODATE
	  AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
	  AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
	  AND  ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'') <>''
      AND ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'')<>B.LOC_GST_NO
      AND (@CDEPT_ID='' OR b.dept_id=@CDEPT_ID)
	  and ISNULL(a.bill_challan_mode,0)=0
	  UNion all
	   SELECT 
             A.CN_ID,
             SR=CAST(2 AS INT),
            CAST('CDNR' AS VARCHAR(100)) AS RTYPE,
            'CN' AS XN_TYPE ,
            CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  RML.LOC_GST_NO END AS GSTIN_UIN_RECIPIENT,
           CND.BILL_NO AS INVOICE_NO,
           REPLACE(CONVERT(VARCHAR(11),CND.BILL_DT,106),' ','-')  AS INVOICE_DATE,
            A.CN_NO+(case when CND.XN_VALUE_WITHOUT_GST>=0 then '' else 'D' end )  AS REF_VOUCHER_NO ,
            REPLACE(CONVERT(VARCHAR(11),A.CN_DT ,106),' ','-')  AS REF_VOUCHER_DT,
            (case when CND.XN_VALUE_WITHOUT_GST>=0 then 'C' else 'D' end ) AS DOC_TYPE,
            ''   AS REASON,
            CASE WHEN A.MODE=1 THEN LMPS.GST_STATE_CODE+'-'+dbo.udf_propercase(LMPS.GST_STATE_NAME) ELSE  RMLS.GST_STATE_CODE+'-'+dbo.udf_propercase(RMLS.GST_STATE_NAME) END AS PLACE_OF_SUPPLY,
            a.total_amount  AS REF_VOUCHER_VALUE,
            CND.RATE ,
			abs(CND.XN_VALUE_WITHOUT_GST)  AS TAXABLE_VALUE,
            CND.Gst_cess_amount AS CESS_AMOUNT,
            CASE WHEN CND.BILL_DT BETWEEN '2017-01-01' AND '2017-06-30'  THEN 'Y' ELSE 'N' END AS PRE_GST,
            A.CN_DT ,
            CASE WHEN A.MODE=1 THEN LM.AC_NAME ELSE  RML.DEPT_NAME  END AS RECEIVER_NAME,
            abs(ISNULL(Gst_amount,0)) as Gst_amount,A.location_Code 
       FROM CNM01106 A (NOLOCK)
       JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =A.location_Code
	   JOIN GST_STATE_MST LS (NOLOCK)  ON LS.GST_STATE_CODE  =B.GST_STATE_CODE
	   LEFT JOIN LM01106 LM ON LM.AC_CODE =A.AC_CODE 
	   LEFT OUTER JOIN LMP01106 LMP (NOLOCK)  ON LMP.AC_CODE =A.AC_CODE
       LEFT JOIN GST_STATE_MST LMPS (NOLOCK)  ON LMPS.GST_STATE_CODE  =LMP.AC_GST_STATE_CODE
	   join #tmp_SOR_FDNFCN sor (nolock) on sor.cn_id =A.cn_id 
       JOIN 
	   (
	     SELECT CN_ID ,CND.INV_NO AS BILL_NO,CND.INV_DT AS BILL_DT,
				   ISNULL(CND.GST_PERCENTAGE,0) AS RATE  ,
				   SUM(XN_VALUE_WITHOUT_GST) AS XN_VALUE_WITHOUT_GST,
				   SUM(XN_VALUE_WITH_GST) AS XN_VALUE_WITH_GST,
				    SUM(ISNULL(igst_amount,0)+ISNULL(Cgst_amount,0) +ISNULL(Sgst_amount,0)  ) AS Gst_amount,
				   SUM(isnull(Gst_cess_amount,0)) as Gst_cess_amount
		 FROM CND01106   CND (NOLOCK) 
		-- WHERE ISNULL(CND.GST_PERCENTAGE,0)>0 
		 GROUP BY CN_ID ,CND.INV_NO,CND.INV_DT,CND.GST_PERCENTAGE
	   )CND ON A.CN_ID =CND.CN_ID 
	   LEFT OUTER JOIN LOCATION RML (NOLOCK) ON RML.DEPT_ID =A.PARTY_DEPT_ID 
	   LEFT JOIN GST_STATE_MST RMLS (NOLOCK)  ON RMLS.GST_STATE_CODE  =RML.GST_STATE_CODE
      WHERE A.CANCELLED =0 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
	  AND A.RECEIPT_DT BETWEEN @DFMDATE AND @DTODATE
	  AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
	  AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
	  AND  ISNULL(LMP.AC_GST_NO,'') <>''
      AND ISNULL(LMP.AC_GST_NO,'')<>B.LOC_GST_NO
      AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
      

	  
	   INSERT INTO @TBLCDNR (MEMO_ID,SR ,RTYPE ,XN_TYPE,GSTIN_UIN_RECIPIENT,INVOICE_NO ,INVOICE_DT ,REF_VOUCHER_NO ,REF_VOUCHER_DT ,
                           DOC_TYPE ,REASON ,PLACE_OF_SUPPLY ,REF_VOUCHER_VALUE ,RATE ,TAXABLE_VALUE ,CESS_AMOUNT ,PRE_GST,MEMO_DT,RECEIVER_NAME,LOCATION_CODE  ) 
       
       SELECT  A.MEMO_ID,SR ,A.RTYPE ,A.XN_TYPE,GSTIN_UIN_RECIPIENT,INVOICE_NO ,INVOICE_DATE , REF_VOUCHER_NO ,REF_VOUCHER_DT ,
                           A.DOC_TYPE ,REASON ,PLACE_OF_SUPPLY ,B.TOTALAMOUNT REF_VOUCHER_VALUE ,RATE ,TAXABLE_VALUE ,CESS_AMOUNT ,PRE_GST,
                           RM_DT,RECEIVER_NAME ,a.location_Code
       FROM #TMPSORDEBITNOTE A
       JOIN
       (
          SELECT MEMO_ID  ,DOC_TYPE,XN_TYPE, 
                 SUM(ISNULL(TAXABLE_VALUE,0)+GST_AMOUNT) AS TOTALAMOUNT
          FROM #TMPSORDEBITNOTE A
          GROUP BY MEMO_ID  ,DOC_TYPE,XN_TYPE
          
       ) B ON A.MEMO_ID =B.MEMO_ID AND A.DOC_TYPE =B.DOC_TYPE AND A.XN_TYPE =B.XN_TYPE 
      

      INSERT INTO @TBLCDNR (MEMO_ID,SR ,RTYPE ,XN_TYPE,GSTIN_UIN_RECIPIENT,INVOICE_NO ,INVOICE_DT ,REF_VOUCHER_NO ,REF_VOUCHER_DT ,
                           DOC_TYPE ,REASON ,PLACE_OF_SUPPLY ,REF_VOUCHER_VALUE ,RATE ,TAXABLE_VALUE ,CESS_AMOUNT ,PRE_GST,MEMO_DT,RECEIVER_NAME,LOCATION_CODE  )                                              
       SELECT 
             A.CN_ID,
             SR=CAST(1 AS INT),
            CAST('CDNR' AS VARCHAR(100)) AS RTYPE,
            'CN' AS XN_TYPE ,
            CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  B.LOC_GST_NO END AS GSTIN_UIN_RECIPIENT,
            '' AS INVOICE_NO,
            ''  AS INVOICE_DATE,
            A.CN_NO AS REF_VOUCHER_NO ,
            REPLACE(CONVERT(VARCHAR(11),A.CN_DT ,106),' ','-')  AS REF_VOUCHER_DT,
            'C' AS DOC_TYPE,
            ''   AS REASON,
            CASE WHEN A.MODE=1 THEN LMPS.GST_STATE_CODE+'-'+LMPS.GST_STATE_NAME ELSE  RMLS.GST_STATE_CODE+'-'+dbo.udf_propercase(RMLS.GST_STATE_NAME) END AS PLACE_OF_SUPPLY,
            A.TOTAL_AMOUNT AS REF_VOUCHER_VALUE,
            A.OTHER_CHARGES_GST_PERCENTAGE  ,
			A.OTHER_CHARGES_TAXABLE_VALUE   AS TAXABLE_VALUE,
          --  CND.XN_VALUE_WITHOUT_GST AS TAXABLE_VALUE,
            0 AS CESS_AMOUNT,
            'N' AS PRE_GST,
            A.CN_DT ,
            CASE WHEN A.MODE=1 THEN LM.AC_NAME ELSE  RML.DEPT_NAME  END AS RECEIVER_NAME,
			A.location_Code 
       FROM CNM01106 A (NOLOCK)
       JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =A.location_Code
	   JOIN GST_STATE_MST LS (NOLOCK)  ON LS.GST_STATE_CODE  =B.GST_STATE_CODE
	   LEFT JOIN LM01106 LM ON LM.AC_CODE =A.AC_CODE 
	   LEFT OUTER JOIN LMP01106 LMP (NOLOCK)  ON LMP.AC_CODE =A.AC_CODE
       LEFT JOIN GST_STATE_MST LMPS (NOLOCK)  ON LMPS.GST_STATE_CODE  =LMP.AC_GST_STATE_CODE
	   LEFT OUTER JOIN LOCATION RML (NOLOCK) ON RML.DEPT_ID =A.PARTY_DEPT_ID 
	   LEFT JOIN GST_STATE_MST RMLS (NOLOCK)  ON RMLS.GST_STATE_CODE  =RML.GST_STATE_CODE
      WHERE A.CANCELLED =0 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
      --AND A.CN_TYPE=1
	  AND A.RECEIPT_DT BETWEEN @DFMDATE AND @DTODATE
	  AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
	  AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
	  AND  ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'') <>''
      AND ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'')<>B.LOC_GST_NO
      AND ISNULL(A.OTHER_CHARGES_GST_PERCENTAGE,0)>0
       AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
      UNION ALL
       SELECT 
             A.CN_ID,
             SR=CAST(1 AS INT),
            CAST('CDNR' AS VARCHAR(100)) AS RTYPE,
            'CN' AS XN_TYPE ,
            CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  RML.LOC_GST_NO END AS GSTIN_UIN_RECIPIENT,
            '' AS INVOICE_NO,
            ''  AS INVOICE_DATE,
            A.CN_NO AS REF_VOUCHER_NO ,
            REPLACE(CONVERT(VARCHAR(11),A.CN_DT ,106),' ','-')  AS REF_VOUCHER_DT,
            'C' AS DOC_TYPE,
            ''   AS REASON,
            CASE WHEN A.MODE=1 THEN LMPS.GST_STATE_CODE+'-'+dbo.udf_propercase(LMPS.GST_STATE_NAME) ELSE  RMLS.GST_STATE_CODE+'-'+dbo.udf_propercase(RMLS.GST_STATE_NAME) END AS PLACE_OF_SUPPLY,
            A.TOTAL_AMOUNT AS REF_VOUCHER_VALUE,
            A.FREIGHT_GST_PERCENTAGE  ,
			A.FREIGHT_TAXABLE_VALUE   AS TAXABLE_VALUE,
          --  CND.XN_VALUE_WITHOUT_GST AS TAXABLE_VALUE,
            0 AS CESS_AMOUNT,
            'N' AS PRE_GST,
            A.CN_DT ,
            CASE WHEN A.MODE=1 THEN LM.AC_NAME ELSE  RML.DEPT_NAME  END AS RECEIVER_NAME,A.location_Code 
       FROM CNM01106 A (NOLOCK)
       JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =A.location_Code
	   JOIN GST_STATE_MST LS (NOLOCK)  ON LS.GST_STATE_CODE  =B.GST_STATE_CODE
	   LEFT JOIN LM01106 LM ON LM.AC_CODE =A.AC_CODE 
	   LEFT OUTER JOIN LMP01106 LMP (NOLOCK)  ON LMP.AC_CODE =A.AC_CODE
       LEFT JOIN GST_STATE_MST LMPS (NOLOCK)  ON LMPS.GST_STATE_CODE  =LMP.AC_GST_STATE_CODE
	   LEFT OUTER JOIN LOCATION RML (NOLOCK) ON RML.DEPT_ID =A.PARTY_DEPT_ID 
	   LEFT JOIN GST_STATE_MST RMLS (NOLOCK)  ON RMLS.GST_STATE_CODE  =RML.GST_STATE_CODE
      WHERE A.CANCELLED =0 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
      --AND A.CN_TYPE=1
	  AND A.RECEIPT_DT BETWEEN @DFMDATE AND @DTODATE
	  AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
	  AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
	  AND  ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'') <>''
      AND ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'')<>B.LOC_GST_NO
      AND ISNULL(A.FREIGHT_GST_PERCENTAGE,0)>0
       AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
      UNION ALL
       SELECT 
             A.CN_ID,
             SR=CAST(1 AS INT),
            CAST('CDNR' AS VARCHAR(100)) AS RTYPE,
            'CN' AS XN_TYPE ,
            CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  RML.LOC_GST_NO END AS GSTIN_UIN_RECIPIENT,
            '' AS INVOICE_NO,
            ''  AS INVOICE_DATE,
            A.CN_NO AS REF_VOUCHER_NO ,
            REPLACE(CONVERT(VARCHAR(11),A.CN_DT ,106),' ','-')  AS REF_VOUCHER_DT,
            'C' AS DOC_TYPE,
            ''   AS REASON,
           CASE WHEN A.MODE=1 THEN LMPS.GST_STATE_CODE+'-'+dbo.udf_propercase(LMPS.GST_STATE_NAME) ELSE  RMLS.GST_STATE_CODE+'-'+dbo.udf_propercase(RMLS.GST_STATE_NAME) END AS PLACE_OF_SUPPLY,
            A.TOTAL_AMOUNT AS REF_VOUCHER_VALUE,
            A.INSURANCE_GST_PERCENTAGE AS RATE  ,
			A.INSURANCE_TAXABLE_VALUE   AS TAXABLE_VALUE,
          --  CND.XN_VALUE_WITHOUT_GST AS TAXABLE_VALUE,
            0 AS CESS_AMOUNT,
            'N' AS PRE_GST,
            A.CN_DT ,
            CASE WHEN A.MODE=1 THEN LM.AC_NAME ELSE  RML.DEPT_NAME  END AS RECEIVER_NAME,
			A.location_Code 
       FROM CNM01106 A (NOLOCK)
       JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =A.location_Code
	   JOIN GST_STATE_MST LS (NOLOCK)  ON LS.GST_STATE_CODE  =B.GST_STATE_CODE
	   LEFT JOIN LM01106 LM ON LM.AC_CODE =A.AC_CODE 
	   LEFT OUTER JOIN LMP01106 LMP (NOLOCK)  ON LMP.AC_CODE =A.AC_CODE
       LEFT JOIN GST_STATE_MST LMPS (NOLOCK)  ON LMPS.GST_STATE_CODE  =LMP.AC_GST_STATE_CODE
	   LEFT OUTER JOIN LOCATION RML (NOLOCK) ON RML.DEPT_ID =A.PARTY_DEPT_ID 
	   LEFT JOIN GST_STATE_MST RMLS (NOLOCK)  ON RMLS.GST_STATE_CODE  =RML.GST_STATE_CODE
      WHERE A.CANCELLED =0 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
      --AND A.CN_TYPE=1
	  AND A.RECEIPT_DT BETWEEN @DFMDATE AND @DTODATE
	  AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
	  AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
	  AND  ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'') <>''
      AND ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'')<>B.LOC_GST_NO
      AND ISNULL(A.INSURANCE_GST_PERCENTAGE,0)>0
      AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
      UNION ALL
      SELECT 
             A.CN_ID,
             SR=CAST(2 AS INT),
            CAST('CDNR' AS VARCHAR(100)) AS RTYPE,
            'CN' AS XN_TYPE ,
            CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  RML.LOC_GST_NO END AS GSTIN_UIN_RECIPIENT,
           CND.BILL_NO AS INVOICE_NO,
         REPLACE(CONVERT(VARCHAR(11),CND.BILL_DT,106),' ','-')  AS INVOICE_DATE,
            A.CN_NO AS REF_VOUCHER_NO ,
            REPLACE(CONVERT(VARCHAR(11),A.CN_DT ,106),' ','-')  AS REF_VOUCHER_DT,
            'C' AS DOC_TYPE,
            ''   AS REASON,
            CASE WHEN A.MODE=1 THEN LMPS.GST_STATE_CODE+'-'+dbo.udf_propercase(LMPS.GST_STATE_NAME) ELSE  RMLS.GST_STATE_CODE+'-'+dbo.udf_propercase(RMLS.GST_STATE_NAME) END AS PLACE_OF_SUPPLY,
            A.TOTAL_AMOUNT AS REF_VOUCHER_VALUE,
            CND.RATE ,
			 CND.XN_VALUE_WITHOUT_GST  AS TAXABLE_VALUE,
          --  CND.XN_VALUE_WITHOUT_GST AS TAXABLE_VALUE,
            CND.Gst_cess_amount AS CESS_AMOUNT,
            CASE WHEN CND.BILL_DT BETWEEN '2017-01-01' AND '2017-06-30'  THEN 'Y' ELSE 'N' END AS PRE_GST,
            A.CN_DT ,
            CASE WHEN A.MODE=1 THEN LM.AC_NAME ELSE  RML.DEPT_NAME  END AS RECEIVER_NAME,
			A.location_Code 
       FROM CNM01106 A (NOLOCK)
       JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =A.location_Code
	   JOIN GST_STATE_MST LS (NOLOCK)  ON LS.GST_STATE_CODE  =B.GST_STATE_CODE
	   LEFT JOIN LM01106 LM ON LM.AC_CODE =A.AC_CODE 
	   LEFT OUTER JOIN LMP01106 LMP (NOLOCK)  ON LMP.AC_CODE =A.AC_CODE
       LEFT JOIN GST_STATE_MST LMPS (NOLOCK)  ON LMPS.GST_STATE_CODE  =LMP.AC_GST_STATE_CODE
       left join #tmp_SOR_FDNFCN sor (nolock) on sor .cn_id =a.cn_id 
       JOIN 
	   (
	     SELECT CN_ID ,CND.INV_NO AS BILL_NO,CND.INV_DT AS BILL_DT,
				   ISNULL(CND.GST_PERCENTAGE,0) AS RATE  ,
				   SUM(XN_VALUE_WITHOUT_GST) AS XN_VALUE_WITHOUT_GST,
				   SUM(XN_VALUE_WITH_GST) AS XN_VALUE_WITH_GST,
				   SUM(isnull(Gst_cess_amount,0)) as Gst_cess_amount
		 FROM CND01106   CND (NOLOCK) 
		-- WHERE ISNULL(CND.GST_PERCENTAGE,0)>0 
		 --AS PER VED JI(CLIENT AnandFashion)
		--show zero gst percentage item
		 GROUP BY CN_ID ,CND.INV_NO,CND.INV_DT,CND.GST_PERCENTAGE
	   )CND ON A.CN_ID =CND.CN_ID 
	   LEFT OUTER JOIN LOCATION RML (NOLOCK) ON RML.DEPT_ID =A.PARTY_DEPT_ID 
	   LEFT JOIN GST_STATE_MST RMLS (NOLOCK)  ON RMLS.GST_STATE_CODE  =RML.GST_STATE_CODE
      WHERE A.CANCELLED =0 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
      and sor.cn_id is null
	  AND A.RECEIPT_DT BETWEEN @DFMDATE AND @DTODATE
	  AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
	  AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
	  AND  ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'') <>''
      AND ISNULL(CASE WHEN A.MODE=1 THEN  LMP.AC_GST_NO ELSE  ISNULL(RML.LOC_GST_NO,'') END,'')<>B.LOC_GST_NO
      AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
      
    
      
        INSERT INTO @TBLCDNR (MEMO_ID,SR ,RTYPE ,XN_TYPE,GSTIN_UIN_RECIPIENT,INVOICE_NO ,INVOICE_DT ,REF_VOUCHER_NO ,REF_VOUCHER_DT ,
                           DOC_TYPE ,REASON ,PLACE_OF_SUPPLY ,REF_VOUCHER_VALUE ,RATE ,TAXABLE_VALUE ,CESS_AMOUNT ,
                           PRE_GST,MEMO_DT,RECEIVER_NAME,LOCATION_CODE  )
         SELECT   A.CM_ID ,
             SR=CAST(1 AS INT),
            CAST('CDNR' AS VARCHAR(100)) AS RTYPE,
            'SLS' AS XN_TYPE ,
            A.Party_Gst_No  AS GSTIN_UIN_RECIPIENT,
           ''   AS INVOICE_NO,
            '' AS INVOICE_DATE,
            A.CM_NO  AS REF_VOUCHER_NO ,
            REPLACE(CONVERT(VARCHAR(11),A.CM_DT ,106),' ','-')  AS REF_VOUCHER_DT,
            'C' AS DOC_TYPE,
            ''   AS REASON,
             CS.GST_STATE_CODE+'-'+dbo.udf_propercase(CS.GST_STATE_NAME) AS PLACE_OF_SUPPLY,
            A.NET_AMOUNT  AS REF_VOUCHER_VALUE,
            A.OTHER_CHARGES_GST_PERCENTAGE ,
			( OTHER_CHARGES_TAXABLE_VALUE)   AS TAXABLE_VALUE,
          --  CND.XN_VALUE_WITHOUT_GST AS TAXABLE_VALUE,
            0 AS CESS_AMOUNT,
            'N'  AS PRE_GST,
            A.CM_DT ,
            ISNULL(CUST.CUSTOMER_FNAME ,'')+' '+ISNULL(CUSTOMER_LNAME,'') AS RECEIVER_NAME,
			A.location_Code 
     FROM CMM01106 A (NOLOCK)
     JOIN CUSTDYM CUST (NOLOCK) ON A.CUSTOMER_CODE =CUST.CUSTOMER_CODE
     JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =A.location_Code
     JOIN GST_STATE_MST C (NOLOCK)  ON B.GST_STATE_CODE =C.GST_STATE_CODE
     LEFT JOIN GST_STATE_MST CS (NOLOCK)  ON CS.GST_STATE_CODE =A.PARTY_STATE_CODE 
	  LEFT JOIN #TMP_DO_NOT_CONSIDER_FOR_GSTRREPS U ON A.USER_CODE =U.user_code
     WHERE A.CANCELLED =0 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
     AND A.CM_DT BETWEEN @DFMDATE AND @DTODATE
     AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
     AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
	 AND ISNULL(A.Party_Gst_No,'')<>''
	 AND ISNULL(A.OTHER_CHARGES_GST_PERCENTAGE,0)>0
	 AND A.NET_AMOUNT<0
	 AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
	 AND U.user_code IS NULL
	 UNION ALL
     SELECT  A.CM_ID ,
             SR=CAST(2 AS INT),
            CAST('CDNR' AS VARCHAR(100)) AS RTYPE,
            'SLS' AS XN_TYPE ,
             A.Party_Gst_No  AS GSTIN_UIN_RECIPIENT,
            CMD.REF_SLS_MEMO_NO AS INVOICE_NO,
            REPLACE(CONVERT(VARCHAR(11),CMD.REF_SLS_MEMO_DT,106),' ','-')  AS INVOICE_DATE,
            A.CM_NO  AS REF_VOUCHER_NO ,
            REPLACE(CONVERT(VARCHAR(11),A.CM_DT  ,106),' ','-')  AS REF_VOUCHER_DT,
            'C' AS DOC_TYPE,
            ''   AS REASON,
             CS.GST_STATE_CODE+'-'+dbo.udf_propercase(CS.GST_STATE_NAME) AS PLACE_OF_SUPPLY,
            ABS(A.NET_AMOUNT) AS REF_VOUCHER_VALUE,
            CMD.RATE ,
			abs(CMD.XN_VALUE_WITHOUT_GST) AS TAXABLE_VALUE,
          --  CND.XN_VALUE_WITHOUT_GST AS TAXABLE_VALUE,
            CMD.Gst_cess_amount AS CESS_AMOUNT,
            CASE WHEN CMD.RATE<>0  THEN 'Y' ELSE 'N' END AS PRE_GST,
            A.CM_DT,
            ISNULL(CUST.CUSTOMER_FNAME ,'')+' '+ISNULL(CUSTOMER_LNAME,'') AS RECEIVER_NAME  ,
			a.location_Code 
     FROM CMM01106 A (NOLOCK)
     JOIN 
      ( SELECT CM_ID ,CMD.GST_PERCENTAGE AS RATE  ,
               SUM(XN_VALUE_WITHOUT_GST) AS XN_VALUE_WITHOUT_GST,
               SUM(XN_VALUE_WITH_GST) AS XN_VALUE_WITH_GST,
			   SUM(isnull(Gst_cess_amount,0)) as Gst_cess_amount,
               REF_SLS_MEMO_DT ,REF_SLS_MEMO_NO 
         FROM CMD01106  CMD (NOLOCK) 
		JOIN HSN_MST HM ON HM.HSN_CODE =CMD.HSN_CODE 
        WHERE 
        --ISNULL(CMD.HSN_CODE ,'') NOT IN('','0000000000') AND
        (CMD.GST_PERCENTAGE >0 OR  ISNULL(REF_SLS_MEMO_DT,'') >=CASE WHEN CMD.QUANTITY >=0 THEN ISNULL(REF_SLS_MEMO_DT,'') ELSE '2017-07-01' END)
        GROUP BY CM_ID,CMD.GST_PERCENTAGE , REF_SLS_MEMO_DT ,REF_SLS_MEMO_NO 
     )CMD ON A.CM_ID =CMD.CM_ID 
     JOIN CUSTDYM CUST (NOLOCK) ON A.CUSTOMER_CODE =CUST.CUSTOMER_CODE
     JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =A.location_Code
     JOIN GST_STATE_MST C (NOLOCK)  ON B.GST_STATE_CODE =C.GST_STATE_CODE
     LEFT JOIN GST_STATE_MST CS (NOLOCK)  ON CS.GST_STATE_CODE =A.PARTY_STATE_CODE 
	 LEFT JOIN #TMP_DO_NOT_CONSIDER_FOR_GSTRREPS U ON A.USER_CODE =U.user_code
     WHERE A.CANCELLED =0 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
     AND A.CM_DT BETWEEN @DFMDATE AND @DTODATE
     AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
     AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
	 AND ISNULL(A.Party_Gst_No,'')<>''
	 AND A.NET_AMOUNT<0
	 AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
	 AND U.user_code IS NULL

	 update a set INVOICE_NO =b.INVOICE_NO ,INVOICE_DT =b.INVOICE_DT  from @TBLCDNR a
	 join @TBLCDNR b on a.MEMO_ID=b.MEMO_ID and a.XN_TYPE =b.XN_TYPE and b.sr<>1 and b.INVOICE_NO <>''
	 where a.INVOICE_NO='' and a.sr=1

	 
	 DECLARE @PICK_CN_NO_GST VARCHAR(10)
     SELECT @PICK_CN_NO_GST=value  FROM CONFIG  WHERE CONFIG_OPTION='PICK_CN_NO_GST'
      
   
	    DECLARE @CEINVOICE_PREFIX VARCHAR(10)
	   select @CEINVOICE_PREFIX=value  from CONFIG where config_option ='EINVOICE_PREFIX'
	   set @CEINVOICE_PREFIX=ISNULL(@CEINVOICE_PREFIX,'')

	  
    
      SELECT RTYPE ,
             GSTIN_UIN_RECIPIENT AS [GSTIN/UIN OF RECIPIENT],
             RECEIVER_NAME AS [RECEIVER NAME],
			 REF_VOUCHER_NO=(CASE WHEN (@CEINVOICE_PREFIX<>'' AND LEFT(RTRIM(LTRIM(A.REF_VOUCHER_NO)),1)='0' and CAST( REF_VOUCHER_DT  AS DATETIME) >= isnull(l.EINVOICE_CUTOFF_DATE,'') ) THEN @CEINVOICE_PREFIX ELSE '' END+REF_VOUCHER_NO),
			-- REF_VOUCHER_NO  AS [NOTE/REFUND VOUCHER NUMBER],
             REF_VOUCHER_DT AS [NOTE/REFUND VOUCHER DATE], 
             DOC_TYPE AS [DOCUMENT TYPE],
             PLACE_OF_SUPPLY AS [PLACE OF SUPPLY] ,
			 CAST('N' AS VARCHAR(10)) AS REVERSE_CHARGES,
			 cast('Regular B2B' as varchar(20)) as Notesupplytype,
             ABS(REF_VOUCHER_VALUE) AS [NOTE/REFUND VOUCHER VALUE],
             CAST('' AS VARCHAR(100)) as [Applicable % of Tax Rate],
             RATE AS [RATE],
             (SUM(TAXABLE_VALUE)) AS [TAXABLE VALUE] ,
             (SUM(CESS_AMOUNT)) AS [CESS AMOUNT] 
            -- PRE_GST AS [PRE GST] 
      FROM @TBLCDNR A
	  left join location l (nolock) on A.LOCATION_CODE =l.dept_id 
      GROUP BY RTYPE ,GSTIN_UIN_RECIPIENT ,
	  (CASE WHEN (@CEINVOICE_PREFIX<>'' AND LEFT(RTRIM(LTRIM(A.REF_VOUCHER_NO)),1)='0' and CAST( REF_VOUCHER_DT  AS DATETIME) >= isnull(l.EINVOICE_CUTOFF_DATE,'') ) THEN @CEINVOICE_PREFIX ELSE '' END+REF_VOUCHER_NO),
      REF_VOUCHER_DT , DOC_TYPE ,REASON ,PLACE_OF_SUPPLY ,
      REF_VOUCHER_VALUE ,RATE ,PRE_GST ,RECEIVER_NAME
      ORDER BY DOC_TYPE,REF_VOUCHER_DT,REF_VOUCHER_NO
   
 DECLARE @REF_VOUCHER_NO INT,@TOTAL_AMOUNT NUMERIC(12,2),@TAXABLE_VLUE  NUMERIC(12,2),@CESS_AMOUNT  NUMERIC(12,2),
        @NOOFINVOICE INT,@NOOFRECIPIENT INT
        SET @REF_VOUCHER_NO=0
        SET @TOTAL_AMOUNT=0
        SET @TAXABLE_VLUE=0
        SET @CESS_AMOUNT=0
        SET @NOOFINVOICE=0
        SET @NOOFRECIPIENT=0
      
    SELECT RTYPE='CDNR',
    @NOOFRECIPIENT AS [NO. OF RECIPIENTS] ,
    @NOOFINVOICE AS [NO. OF INVOICES],
    @REF_VOUCHER_NO AS [NO. OF NOTES/VOUCHERS],
    @TOTAL_AMOUNT AS [TOTAL NOTE/REFUND VOUCHER VALUE],
    @TAXABLE_VLUE AS [TOTAL TAXABLE VALUE],
    @CESS_AMOUNT AS [TOTAL CESS]
     
 
     -- END CDNR----(CREDIT NOTE & DEBIT NOTE) REGISTER
     
     --UNREGINTRED DELER  CNDN MORE THEN 2.5L
      DECLARE @TBLCDNUR TABLE (RTYPE VARCHAR(10),MEMO_ID VARCHAR(100),XN_TYPE VARCHAR(10),UR_TYPE VARCHAR(10),REF_VCH_NO VARCHAR(100),REF_VCH_DT VARCHAR(15),DOCUMENT_TYPE CHAR(1),INVOICE_NO VARCHAR(100),INVOICE_DT VARCHAR(15), REASON VARCHAR(100),PLACE_OF_SUPPLY VARCHAR(100),NET_AMOUNT NUMERIC(12,2),RATE NUMERIC(8,2),TAXABLE_VALUE NUMERIC(12,2),CESS_AMOUNT NUMERIC(8,2),PRE_GST CHAR(1))
      
      INSERT INTO @TBLCDNUR(RTYPE,MEMO_ID,XN_TYPE,UR_TYPE,REF_VCH_NO,REF_VCH_DT,INVOICE_NO,INVOICE_DT,DOCUMENT_TYPE,REASON ,PLACE_OF_SUPPLY ,NET_AMOUNT ,RATE ,TAXABLE_VALUE ,CESS_AMOUNT ,PRE_GST )
      
       SELECT  'CDNUR' AS RTYPE,
              A.CM_ID,
              'SLR' AS XN_TYPE,
              'B2CL' AS UR_TYPE,
               A.CM_NO AS REF_VCH_NO,
               REPLACE(CONVERT(VARCHAR(11),A.CM_DT,106),' ','-')  AS REF_VCH_DT,
               ''  AS INVOICE_NO ,
               ''  AS INVOICE_DT,
              'C' AS DOC_TYPE,
              '01-SALES RETURN' AS REASON,
              CS.GST_STATE_CODE+'-'+dbo.udf_propercase(CS.GST_STATE_NAME) AS PLACE_OF_SUPPLY,
              A.NET_AMOUNT AS  NET_AMOUNT,
              A.OTHER_CHARGES_GST_PERCENTAGE AS RATE ,
              A.OTHER_CHARGES_TAXABLE_VALUE  AS TAXABLE_VALUE,
              0 AS CESS_AMOUNT,
              'N' AS PRE_GST
      FROM CMM01106 A (NOLOCK)
      JOIN #TMPSLSCDNUR TMP (NOLOCK) ON A.CM_ID =TMP.CM_ID 
      JOIN CUSTDYM CUS (NOLOCK) ON CUS.CUSTOMER_CODE =A.CUSTOMER_CODE 
      JOIN LOCATION L (NOLOCK) ON L.DEPT_ID =A.location_Code 
      JOIN GST_STATE_MST CS (NOLOCK) ON CS.GST_STATE_CODE =A.PARTY_STATE_CODE 
      JOIN GST_STATE_MST LS  (NOLOCK) ON LS.GST_STATE_CODE =L.GST_STATE_CODE 
	  LEFT JOIN #TMP_DO_NOT_CONSIDER_FOR_GSTRREPS U ON A.USER_CODE =U.user_code
      WHERE ISNULL(A.OTHER_CHARGES_GST_PERCENTAGE,0)>0 AND A.MEMO_TYPE  IN(0,1)
      AND (@CDEPT_ID='' OR A.location_Code =@CDEPT_ID)
	  AND U.user_code IS NULL
      UNION ALL
      SELECT  'CDNUR' AS RTYPE,
              A.CM_ID,
              'SLR' AS XN_TYPE,
              'B2CL' AS UR_TYPE,
               A.CM_NO AS REF_VCH_NO,
               REPLACE(CONVERT(VARCHAR(11),A.CM_DT,106),' ','-')  AS REF_VCH_DT,
               CMD.REF_SLS_MEMO_NO AS INVOICE_NO ,
               REPLACE(CONVERT(VARCHAR(11),CMD.REF_SLS_MEMO_DT ,106),' ','-')  AS INVOICE_DT,
              'C' AS DOC_TYPE,
              '01-SALES RETURN' AS REASON,
              CS.GST_STATE_CODE+'-'+dbo.udf_propercase(CS.GST_STATE_NAME) AS PLACE_OF_SUPPLY,
              A.NET_AMOUNT AS  NET_AMOUNT,
              CMD.RATE ,
              ABS(CMD.XN_VALUE_WITHOUT_GST) AS TAXABLE_VALUE,
              cmd.Gst_cess_amount  AS CESS_AMOUNT,
              CASE WHEN CMD.REF_SLS_MEMO_DT BETWEEN '2017-01-01' AND '2017-06-30'  THEN 'Y' ELSE 'N' END AS PRE_GST
      FROM CMM01106 A (NOLOCK)
      JOIN 
      ( SELECT CM_ID ,CMD.GST_PERCENTAGE AS RATE  ,
               REF_SLS_MEMO_NO,REF_SLS_MEMO_DT,
               SUM(XN_VALUE_WITHOUT_GST) AS XN_VALUE_WITHOUT_GST,
               SUM(XN_VALUE_WITH_GST) AS XN_VALUE_WITH_GST,
			   SUM(isnull(Gst_cess_amount,0)) as Gst_cess_amount
        FROM CMD01106  CMD (NOLOCK) 
		JOIN HSN_MST HM ON HM.HSN_CODE =CMD.HSN_CODE 
        WHERE ISNULL(CMD.HSN_CODE ,'') NOT IN('','0000000000') 
       -- WHERE ISNULL(CMD.GST_PERCENTAGE ,0)>0
        GROUP BY CM_ID,CMD.GST_PERCENTAGE ,REF_SLS_MEMO_NO,REF_SLS_MEMO_DT
      )CMD ON A.CM_ID =CMD.CM_ID 
      JOIN #TMPSLSCDNUR TMP (NOLOCK) ON A.CM_ID =TMP.CM_ID 
      JOIN CUSTDYM CUS (NOLOCK) ON CUS.CUSTOMER_CODE =A.CUSTOMER_CODE 
      JOIN LOCATION L (NOLOCK) ON L.DEPT_ID =A.location_Code
      JOIN GST_STATE_MST CS (NOLOCK) ON CS.GST_STATE_CODE =A.PARTY_STATE_CODE 
      JOIN GST_STATE_MST LS  (NOLOCK) ON LS.GST_STATE_CODE =L.GST_STATE_CODE 
	  LEFT JOIN #TMP_DO_NOT_CONSIDER_FOR_GSTRREPS U ON A.USER_CODE =U.user_code
      WHERE A.MEMO_TYPE  IN(0,1)
      AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
	  AND U.user_code IS NULL
    
    
     
     INSERT INTO @TBLCDNUR(RTYPE,MEMO_ID,XN_TYPE,UR_TYPE,REF_VCH_NO,REF_VCH_DT,INVOICE_NO,INVOICE_DT,DOCUMENT_TYPE,REASON ,PLACE_OF_SUPPLY ,NET_AMOUNT ,RATE ,TAXABLE_VALUE ,CESS_AMOUNT ,PRE_GST )
      
      SELECT 'CDNUR' AS RTYPE,
             A.CN_ID,
             'WSR' AS XN_TYPE,
             'B2BL' AS UR_TYPE,
             A.CN_NO AS REF_VCH_NO,
             REPLACE(CONVERT(VARCHAR(11),A.CN_DT,106),' ','-')  AS REF_VCH_DT,
             '' AS INVOICE_NO ,
             ''  AS INVOICE_DT,
             'C' AS DOC_TYPE,
             '02-WSL RETURN' AS REASON,
             CASE WHEN A.MODE=1 THEN LMPS.GST_STATE_CODE+'-'+dbo.udf_propercase(LMPS.GST_STATE_NAME) ELSE  LS.GST_STATE_CODE+'-'+(LS.GST_STATE_NAME) END AS PLACE_OF_SUPPLY,
             A.TOTAL_AMOUNT ,
             A.OTHER_CHARGES_GST_PERCENTAGE AS RATE ,
             A.OTHER_CHARGES_TAXABLE_VALUE  AS TAXABLE_VALUE,
             0 AS CESS_AMOUNT,
             'N' AS PRE_GST
      FROM CNM01106   A (NOLOCK)
      JOIN #TMPWSLCDNUR TMP (NOLOCK) ON A.CN_ID  =TMP.CN_ID 
      LEFT JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =TMP.DEPT_ID
      LEFT JOIN GST_STATE_MST LS (NOLOCK)  ON LS.GST_STATE_CODE  =B.GST_STATE_CODE
	  LEFT JOIN LMP01106 LMP ON LMP.AC_CODE=A.AC_CODE
	  LEFT JOIN GST_STATE_MST LMPS (NOLOCK)  ON LMPS.GST_STATE_CODE  =LMP.AC_GST_STATE_CODE
	  WHERE ISNULL(A.OTHER_CHARGES_GST_PERCENTAGE,0)>0
	  AND A.MEMO_TYPE  IN(0,1)
	  AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
	  UNION ALL
	   SELECT 'CDNUR' AS RTYPE,
             A.CN_ID,
             'WSR' AS XN_TYPE,
             'B2BL' AS UR_TYPE,
             A.CN_NO AS REF_VCH_NO,
             REPLACE(CONVERT(VARCHAR(11),A.CN_DT,106),' ','-')  AS REF_VCH_DT,
             '' AS INVOICE_NO ,
             ''  AS INVOICE_DT,
             'C' AS DOC_TYPE,
             '02-WSL RETURN' AS REASON,
             CASE WHEN A.MODE=1 THEN LMPS.GST_STATE_CODE+'-'+dbo.udf_propercase(LMPS.GST_STATE_NAME) ELSE  LS.GST_STATE_CODE+'-'+dbo.udf_propercase(LS.GST_STATE_NAME) END AS PLACE_OF_SUPPLY,
             A.TOTAL_AMOUNT ,
             A.FREIGHT_GST_PERCENTAGE AS RATE ,
             A.FREIGHT_TAXABLE_VALUE  AS TAXABLE_VALUE,
             0 AS CESS_AMOUNT,
             'N' AS PRE_GST
      FROM CNM01106   A (NOLOCK)
      JOIN #TMPWSLCDNUR TMP (NOLOCK) ON A.CN_ID  =TMP.CN_ID 
      LEFT JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =TMP.DEPT_ID
      LEFT JOIN GST_STATE_MST LS (NOLOCK)  ON LS.GST_STATE_CODE  =B.GST_STATE_CODE
	  LEFT JOIN LMP01106 LMP ON LMP.AC_CODE=A.AC_CODE
	  LEFT JOIN GST_STATE_MST LMPS (NOLOCK)  ON LMPS.GST_STATE_CODE  =LMP.AC_GST_STATE_CODE
	  WHERE ISNULL(A.FREIGHT_GST_PERCENTAGE,0)>0
	  AND A.MEMO_TYPE  IN(0,1)
	  AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
	  UNION ALL
	  SELECT 'CDNUR' AS RTYPE,
             A.CN_ID,
             'WSR' AS XN_TYPE,
             'B2BL' AS UR_TYPE,
             A.CN_NO AS REF_VCH_NO,
             REPLACE(CONVERT(VARCHAR(11),A.CN_DT,106),' ','-')  AS REF_VCH_DT,
             '' AS INVOICE_NO ,
             ''  AS INVOICE_DT,
             'C' AS DOC_TYPE,
             '02-WSL RETURN' AS REASON,
             CASE WHEN A.MODE=1 THEN LMPS.GST_STATE_CODE+'-'+dbo.udf_propercase(LMPS.GST_STATE_NAME) ELSE  LS.GST_STATE_CODE+'-'+dbo.udf_propercase(LS.GST_STATE_NAME) END AS PLACE_OF_SUPPLY,
             A.TOTAL_AMOUNT ,
             A.INSURANCE_GST_PERCENTAGE AS RATE ,
             A.INSURANCE_TAXABLE_VALUE  AS TAXABLE_VALUE,
             0 AS CESS_AMOUNT,
             'N' AS PRE_GST
      FROM CNM01106   A (NOLOCK)
      JOIN #TMPWSLCDNUR TMP (NOLOCK) ON A.CN_ID  =TMP.CN_ID 
      LEFT JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =TMP.DEPT_ID
      LEFT JOIN GST_STATE_MST LS (NOLOCK)  ON LS.GST_STATE_CODE  =B.GST_STATE_CODE
	  LEFT JOIN LMP01106 LMP ON LMP.AC_CODE=A.AC_CODE
	  LEFT JOIN GST_STATE_MST LMPS (NOLOCK)  ON LMPS.GST_STATE_CODE  =LMP.AC_GST_STATE_CODE
	  WHERE ISNULL(A.INSURANCE_GST_PERCENTAGE,0)>0
	  AND A.MEMO_TYPE  IN(0,1)
	  AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
	  UNION ALL
      SELECT 'CDNUR' AS RTYPE,
             A.CN_ID,
             'WSR' AS XN_TYPE,
             'B2BL' AS UR_TYPE,
             A.CN_NO AS REF_VCH_NO,
             REPLACE(CONVERT(VARCHAR(11),A.CN_DT,106),' ','-')  AS REF_VCH_DT,
             CND.INV_NO AS INVOICE_NO ,
             REPLACE(CONVERT(VARCHAR(11),CND.INV_DT ,106),' ','-')  AS INVOICE_DT,
             'C' AS DOC_TYPE,
             '02-WSL RETURN' AS REASON,
             CASE WHEN A.MODE=1 THEN LMPS.GST_STATE_CODE+'-'+dbo.udf_propercase(LMPS.GST_STATE_NAME) ELSE  LS.GST_STATE_CODE+'-'+dbo.udf_propercase(LS.GST_STATE_NAME) END AS PLACE_OF_SUPPLY,
             A.TOTAL_AMOUNT ,
             CND.RATE ,
             CND.XN_VALUE_WITHOUT_GST AS TAXABLE_VALUE,
             CND.Gst_cess_amount AS CESS_AMOUNT,
             CASE WHEN CND.INV_DT BETWEEN '2017-01-01' AND '2017-06-30'  THEN 'Y' ELSE 'N' END AS PRE_GST
      FROM CNM01106   A (NOLOCK)
      JOIN 
      ( SELECT CN_ID ,CND.GST_PERCENTAGE AS RATE  ,
               CND.INV_DT ,CND.INV_NO,
               SUM(XN_VALUE_WITHOUT_GST) AS XN_VALUE_WITHOUT_GST,
               SUM(XN_VALUE_WITH_GST) AS XN_VALUE_WITH_GST,
			   SUM(isnull(Gst_cess_amount,0)) as Gst_cess_amount
        FROM CND01106  CND (NOLOCK) 
       -- WHERE ISNULL(CND.GST_PERCENTAGE,0)>0 AS PER VED JI(CLIENT BIGJOSH)
        GROUP BY CN_ID,CND.GST_PERCENTAGE,CND.INV_DT ,CND.INV_NO 
      )CND ON A.CN_ID =CND.CN_ID 
      JOIN #TMPWSLCDNUR TMP (NOLOCK) ON A.CN_ID  =TMP.CN_ID 
      LEFT JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =TMP.DEPT_ID
      LEFT JOIN GST_STATE_MST LS (NOLOCK)  ON LS.GST_STATE_CODE  =B.GST_STATE_CODE
	  LEFT JOIN LMP01106 LMP ON LMP.AC_CODE=A.AC_CODE
	  LEFT JOIN GST_STATE_MST LMPS (NOLOCK)  ON LMPS.GST_STATE_CODE  =LMP.AC_GST_STATE_CODE
	  WHERE A.MEMO_TYPE  IN(0,1)
	  AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
   
       
       SELECT 'CDNUR' AS RTYPE,
              UR_TYPE ,
			  REF_VCH_NO AS [NOTE/REFUND VOUCHER NUMBER],
            --  REF_VCH_NO+'/'+INVOICE_NO +'/'+REPLACE(CAST (RATE AS VARCHAR(10)),'.00','') AS [NOTE/REFUND VOUCHER NUMBER],
              REF_VCH_DT AS [NOTE/REFUND VOUCHER DATE],
              DOCUMENT_TYPE AS [DOCUMENT TYPE],
              --INVOICE_NO AS [INVOICE/ADVANCE RECEIPT NUMBER],
              --INVOICE_DT AS [INVOICE/ADVANCE RECEIPT DATE],
             -- REASON AS [REASON FOR ISSUING DOCUMENT],
              PLACE_OF_SUPPLY AS [PLACE OF SUPPLY] ,
              abs(NET_AMOUNT) AS [NOTE/REFUND VOUCHER VALUE],
              CAST('' AS VARCHAR(100)) as [Applicable % of Tax Rate],
              RATE ,
              abs(SUM(TAXABLE_VALUE)) AS [TAXABLE VALUE] ,
              abs(SUM(CESS_AMOUNT)) AS [CESS AMOUNT]
       FROM @TBLCDNUR A
       GROUP BY UR_TYPE ,REF_VCH_NO ,
       REF_VCH_DT ,DOCUMENT_TYPE ,
	   --INVOICE_NO ,
    --   INVOICE_DT ,
	   REASON ,PLACE_OF_SUPPLY  ,
       NET_AMOUNT ,RATE ,PRE_GST 
       ORDER BY REF_VCH_DT,REF_VCH_NO
      
      
      ---TOTAL CALCULATES--
        SET @REF_VOUCHER_NO=0
        SET @TOTAL_AMOUNT=0
        SET @TAXABLE_VLUE=0
        SET @CESS_AMOUNT=0
        SET @NOOFINVOICE=0
        SET @NOOFRECIPIENT=0
        
     -- SELECT * INTO TBLCDNR FROM @TBLCDNR
      
       SELECT 'CDNUR' AS RTYPE,
             @NOOFINVOICE AS [NO. OF INVOICES],
             @NOOFRECIPIENT AS [NO. OF NOTES/VOUCHERS],
             @TOTAL_AMOUNT AS [TOTAL NOTE/REFUND VOUCHER VALUE],
             @TAXABLE_VLUE AS [TOTAL TAXABLE VALUE],
             @CESS_AMOUNT AS [TOTAL CESS]
    
 
  
    -- STATRT TAX LIABILITY ON ADVANCES
    
      DECLARE @TBLADVANCE TABLE (SR INT,RTYPE VARCHAR(10),XN_TYPE VARCHAR(100),PLACE_OF_SUPPLY VARCHAR(100),RATE NUMERIC(8,2),
                                 GROSS_ADVANCE_REC NUMERIC(12,2),CESS_AMOUNT NUMERIC(8,2))
      
      INSERT INTO @TBLADVANCE(SR ,RTYPE,XN_TYPE,PLACE_OF_SUPPLY,RATE,GROSS_ADVANCE_REC,CESS_AMOUNT)
      SELECT SR=CAST(1 AS INT),
             CAST('AT' AS VARCHAR(100)) AS RTYPE,
            CAST(CASE WHEN B.ARCT =2 THEN  'ADVANCE' 
                     WHEN B.ARCT =3 THEN  'GV VOUCHER' 
                     WHEN B.ARCT =4 THEN  'OTHER CHARGES'
                     WHEN B.ARCT =5 THEN  'DISC CARD'  
            ELSE '' END AS VARCHAR(100)) AS XN_TYPE ,
            LS.GST_STATE_CODE+'-'+dbo.udf_propercase(LS.GST_STATE_NAME) AS PLACE_OF_SUPPLY,
            GST_PERCENTAGE AS RATE,
            B.TAXABLE_VALUE AS GROSS_ADVANCE_REC,
            0 AS CESS_AMOUNT
      FROM ARC01106   B (NOLOCK) 
      JOIN LOCATION C (NOLOCK) ON C.DEPT_ID =B.location_Code
      JOIN CUSTDYM CUST (NOLOCK) ON CUST.CUSTOMER_CODE =B.CUSTOMER_CODE 
      LEFT JOIN LMP01106 LMP (NOLOCK) ON LMP.AC_CODE=B.AC_CODE 
      LEFT JOIN GST_STATE_MST LS (NOLOCK) ON LS.GST_STATE_CODE =B.PARTY_STATE_CODE  
      JOIN GST_STATE_MST CS (NOLOCK) ON CS.GST_STATE_CODE =CUST.CUS_GST_STATE_CODE  
      LEFT JOIN
      ( 
        SELECT PX.ADJ_MEMO_ID
        FROM ARC01106   B (NOLOCK) 
	    JOIN PAYMODE_XN_DET PX (NOLOCK) ON PX.ADJ_MEMO_ID=B.ADV_REC_ID
	    JOIN CMM01106 CM (NOLOCK) ON CM.CM_ID=PX.MEMO_ID
	    JOIN LOCATION C (NOLOCK) ON C.DEPT_ID =CM.location_Code 
	    WHERE B.CANCELLED =0 AND CM.CANCELLED=0 AND PAYMODE_CODE='0000002'
        AND ARC_TYPE =1 AND ARCT=2
        AND CM.CM_DT   BETWEEN @DFMDATE AND @DTODATE
        AND (@CGSTN_NO='' OR C.LOC_GST_NO=@CGSTN_NO)
        AND (@CLOC_TYPE=0 OR ISNULL(C.LOC_TYPE,0) =@CLOC_TYPE)
	    GROUP BY PX.ADJ_MEMO_ID
      ) ADJ ON B.ADV_REC_ID =ADJ.ADJ_MEMO_ID 
      WHERE B.CANCELLED =0
      AND ARC_TYPE =1 AND ARCT<>1
      AND B.ADV_REC_DT   BETWEEN @DFMDATE AND @DTODATE
      AND (@CGSTN_NO='' OR C.LOC_GST_NO=@CGSTN_NO)
      AND (@CLOC_TYPE=0 OR ISNULL(C.LOC_TYPE,0) =@CLOC_TYPE)
      AND ADJ.ADJ_MEMO_ID IS NULL
       AND (ISNULL(B.CGST_AMOUNT ,0)+ ISNULL(B.SGST_AMOUNT ,0)+ ISNULL(B.IGST_AMOUNT ,0))<>0
      AND  ISNULL(B.HSN_CODE ,'') NOT IN('','0000000000')
      AND (@CDEPT_ID='' OR B.location_Code=@CDEPT_ID)
      
      SELECT RTYPE,
             PLACE_OF_SUPPLY AS [PLACE OF SUPPLY],
             CAST('' AS VARCHAR(100)) as [Applicable % of Tax Rate],
             RATE AS [RATE],
             SUM(GROSS_ADVANCE_REC) AS [GROSS ADVANCE RECEIVED],
             SUM(CESS_AMOUNT) AS [CESS AMOUNT]
      FROM @TBLADVANCE
      GROUP BY RTYPE,PLACE_OF_SUPPLY ,RATE
      ORDER BY PLACE_OF_SUPPLY,RATE
      
      SELECT RTYPE,
             SUM(GROSS_ADVANCE_REC) AS [TOTAL ADVANCE RECEIVED],
             SUM(CESS_AMOUNT) AS [TOTAL CESS]
      FROM @TBLADVANCE
     GROUP BY RTYPE
      
      -- ADVANCE ADJUSTED
       DECLARE @TBLADVANCEADJ TABLE (SR INT,RTYPE VARCHAR(10),XN_TYPE VARCHAR(100),PLACE_OF_SUPPLY VARCHAR(100),RATE NUMERIC(8,2),
                                 GROSS_ADVANCE_ADJ NUMERIC(12,2),CESS_AMOUNT NUMERIC(8,2))
       INSERT INTO @TBLADVANCEADJ(SR ,RTYPE,XN_TYPE,PLACE_OF_SUPPLY,RATE,GROSS_ADVANCE_ADJ,CESS_AMOUNT)  
      SELECT SR=CAST(1 AS INT),
             CAST('ATADJ' AS VARCHAR(100)) AS RTYPE,
            'ADVANCE ADJUSTED' AS XN_TYPE ,
            LS.GST_STATE_CODE+'-'+dbo.udf_propercase(LS.GST_STATE_NAME) AS PLACE_OF_SUPPLY,
            GST_PERCENTAGE AS RATE,
            B.TAXABLE_VALUE AS GROSS_ADVANCE_ADJ,
            0 AS CESS_AMOUNT 
      FROM ARC01106   B (NOLOCK) 
	  JOIN PAYMODE_XN_DET PX (NOLOCK) ON PX.ADJ_MEMO_ID=B.ADV_REC_ID
	  JOIN CMM01106 CM (NOLOCK) ON CM.CM_ID=PX.MEMO_ID
	  JOIN LOCATION C (NOLOCK) ON C.DEPT_ID =CM.location_Code
      JOIN CUSTDYM CUST (NOLOCK) ON CUST.CUSTOMER_CODE =B.CUSTOMER_CODE 
      LEFT JOIN LMP01106 LMP (NOLOCK) ON LMP.AC_CODE=B.AC_CODE 
      LEFT JOIN GST_STATE_MST LS (NOLOCK) ON LS.GST_STATE_CODE =B.PARTY_STATE_CODE  
      JOIN GST_STATE_MST CS (NOLOCK) ON CS.GST_STATE_CODE =CM.PARTY_STATE_CODE  
      LEFT JOIN
      (
        SELECT DISTINCT  B.ADV_REC_ID 
        FROM ARC01106   B (NOLOCK) 
        JOIN LOCATION C (NOLOCK) ON C.DEPT_ID =B.location_Code
        WHERE B.CANCELLED =0
        AND ARC_TYPE =1 AND ARCT<>1
        AND B.ADV_REC_DT   BETWEEN @DFMDATE AND @DTODATE
        AND (@CGSTN_NO='' OR C.LOC_GST_NO=@CGSTN_NO)
        AND (@CLOC_TYPE=0 OR ISNULL(C.LOC_TYPE,0) =@CLOC_TYPE)
      ) ADJ ON ADJ.ADV_REC_ID =B.ADV_REC_ID 
      WHERE B.CANCELLED =0 AND CM.CANCELLED=0 AND PAYMODE_CODE='0000002'
      AND ARC_TYPE =1 AND ARCT=2
      AND CM.CM_DT   BETWEEN @DFMDATE AND @DTODATE
      AND (@CGSTN_NO='' OR C.LOC_GST_NO=@CGSTN_NO)
      AND (@CLOC_TYPE=0 OR ISNULL(C.LOC_TYPE,0) =@CLOC_TYPE)
      AND ADJ.ADV_REC_ID IS NULL
      AND (ISNULL(B.CGST_AMOUNT ,0)+ ISNULL(B.SGST_AMOUNT ,0)+ ISNULL(B.IGST_AMOUNT ,0))<>0
      AND (@CDEPT_ID='' OR B.location_Code=@CDEPT_ID)
      
       SELECT RTYPE,
             PLACE_OF_SUPPLY AS [PLACE OF SUPPLY],
             CAST('' AS VARCHAR(100)) as [Applicable % of Tax Rate],
             RATE AS [RATE],
             SUM(GROSS_ADVANCE_ADJ ) AS [GROSS ADVANCE ADJUSTED],
             SUM(CESS_AMOUNT) AS [CESS AMOUNT]
      FROM @TBLADVANCEADJ
      GROUP BY RTYPE,PLACE_OF_SUPPLY ,RATE
      ORDER BY PLACE_OF_SUPPLY,RATE
      
      
      SELECT RTYPE,
             SUM(GROSS_ADVANCE_ADJ) AS [TOTAL ADVANCE ADJUSTED],
             SUM(CESS_AMOUNT) AS [TOTAL CESS]
      FROM @TBLADVANCEADJ
      GROUP BY RTYPE
      --HSN SUMMARY ONLY OUTPUT GST
      
 
EXEC SP3S_HSN_GSTR @DFMDATE,@DTODATE,@CGSTN_NO,@CLOC_TYPE,@CDEPT_ID
   
EXEC SP3S_DOC_GSTR @DFMDATE,@DTODATE,@CGSTN_NO,@CLOC_TYPE ,@CDEPT_ID
  

  	 IF OBJECT_ID ('TEMPDB..#TMP_DO_NOT_CONSIDER_FOR_GSTRREPS1','U') is not null
	    drop table #TMP_DO_NOT_CONSIDER_FOR_GSTRREPS1

	 SELECT A.user_code INTO #TMP_DO_NOT_CONSIDER_FOR_GSTRREPS1 FROM USERS A
	 WHERE ISNULL(DO_NOT_CONSIDER_FOR_GSTRREPS,0)=1
     

 DECLARE @TBLEXEMP TABLE (MEMO_ID VARCHAR(100),SR INT,RTYPE VARCHAR(10),XN_TYPE VARCHAR(100),
                          CUS_GST_NO VARCHAR(100),ISIGST INT,TAXABLE_VALUE NUMERIC(10,2) ,NET_AMOUNT NUMERIC(10,2))

 INSERT INTO @TBLEXEMP(MEMO_ID,SR ,RTYPE,XN_TYPE ,CUS_GST_NO ,ISIGST ,TAXABLE_VALUE ,NET_AMOUNT )
        SELECT A.CM_ID,
            SR=CAST(1 AS INT),
            CAST('EXEMP' AS VARCHAR(100)) AS RTYPE,
            'SLS' AS XN_TYPE,
            A.Party_Gst_No AS CUS_GST_NO,
            CASE WHEN A.PARTY_STATE_CODE <>B.GST_STATE_CODE THEN 1 ELSE 0 END AS ISIGST,
            ISNULL(A.OTHER_CHARGES_TAXABLE_VALUE  ,0) AS TAXABLE_VALUE,
            A.NET_AMOUNT
     FROM CMM01106 A (NOLOCK)
     JOIN CUSTDYM CUST (NOLOCK) ON A.CUSTOMER_CODE =CUST.CUSTOMER_CODE
     JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =A.location_Code
     JOIN GST_STATE_MST C (NOLOCK)  ON B.GST_STATE_CODE =C.GST_STATE_CODE
     LEFT JOIN GST_STATE_MST CS (NOLOCK)  ON CS.GST_STATE_CODE =A.PARTY_STATE_CODE 
	 LEFT JOIN #TMP_DO_NOT_CONSIDER_FOR_GSTRREPS1 U ON A.USER_CODE =U.user_code
     WHERE A.CANCELLED =0 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
     AND A.CM_DT BETWEEN @DFMDATE AND @DTODATE
     AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
     AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
	 AND ISNULL(A.OTHER_CHARGES_GST_PERCENTAGE,0)=0
	 AND ISNULL(A.ATD_CHARGES ,0)>0
	 AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
	 AND U.user_code IS NULL
	 UNION ALL
     SELECT A.CM_ID,
            SR=CAST(1 AS INT),
            CAST('EXEMP' AS VARCHAR(100)) AS RTYPE,
            'SLS' AS XN_TYPE,
            A.Party_Gst_No AS CUS_GST_NO,
            CASE WHEN A.PARTY_STATE_CODE <>B.GST_STATE_CODE THEN 1 ELSE 0 END AS ISIGST,
            ISNULL(CMD.XN_VALUE_WITHOUT_GST  ,0) AS TAXABLE_VALUE,
            A.NET_AMOUNT
     FROM CMM01106 A (NOLOCK)
     JOIN 
      ( SELECT CM_ID ,CMD.GST_PERCENTAGE AS RATE  ,
               SUM(XN_VALUE_WITHOUT_GST) AS XN_VALUE_WITHOUT_GST,
               SUM(XN_VALUE_WITH_GST) AS XN_VALUE_WITH_GST
        FROM CMD01106  CMD (NOLOCK) 
		JOIN HSN_MST HM ON HM.HSN_CODE =CMD.HSN_CODE 
        WHERE ISNULL(CMD.GST_PERCENTAGE,0)=0 AND ISNULL(TAXABLE_ITEM,0)=0 AND 
        (CMD.GST_PERCENTAGE >0 OR  ISNULL(REF_SLS_MEMO_DT,'') >=CASE WHEN CMD.QUANTITY >=0 THEN ISNULL(REF_SLS_MEMO_DT,'') ELSE '2017-07-01' END)
        GROUP BY CM_ID,CMD.GST_PERCENTAGE 
     )CMD ON A.CM_ID =CMD.CM_ID 
     JOIN CUSTDYM CUST (NOLOCK) ON A.CUSTOMER_CODE =CUST.CUSTOMER_CODE
     JOIN LOCATION B (NOLOCK) ON B.DEPT_ID =A.location_Code
     JOIN GST_STATE_MST C (NOLOCK)  ON B.GST_STATE_CODE =C.GST_STATE_CODE
     LEFT JOIN GST_STATE_MST CS (NOLOCK)  ON CS.GST_STATE_CODE =A.PARTY_STATE_CODE 
	 LEFT JOIN #TMP_DO_NOT_CONSIDER_FOR_GSTRREPS1 U ON A.USER_CODE =U.user_code
     WHERE A.CANCELLED =0 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
     AND A.CM_DT BETWEEN @DFMDATE AND @DTODATE
     AND (@CGSTN_NO='' OR B.LOC_GST_NO=@CGSTN_NO)
     AND (@CLOC_TYPE=0 OR ISNULL(B.LOC_TYPE,0) =@CLOC_TYPE)
     AND (@CDEPT_ID='' OR A.location_Code=@CDEPT_ID)
	 AND U.user_code IS NULL
	
	
	SELECT RTYPE,CASE WHEN  ISNULL(ISIGST,0)=1 AND ISNULL(CUS_GST_NO,'')<>'' THEN 'INTER-STATE SUPPLIES TO REGISTERED PERSONS'
	            WHEN  ISNULL(ISIGST,0)=1 AND ISNULL(CUS_GST_NO,'')='' THEN 'INTER-STATE SUPPLIES TO UNREGISTERED PERSONS'
	            WHEN  ISNULL(ISIGST,0)=0 AND ISNULL(CUS_GST_NO,'')<>'' THEN 'INTRA-STATE SUPPLIES TO REGISTERED PERSONS'
	         ELSE 'INTRA-STATE SUPPLIES TO UNREGISTERED PERSONS' END AS DESCRIPTION,
	            CONVERT(NUMERIC(12,2),SUM(TAXABLE_VALUE)) AS [NIL RATED SUPPLIES],
	  CONVERT(NUMERIC(12,2),0) AS [EXEMPTED (OTHER THAN NIL RATED/NON GST SUPPLY )],
	            CONVERT(NUMERIC(12,2),0) AS [NON-GST SUPPLIES]
	
	FROM @TBLEXEMP
	GROUP BY RTYPE,CASE WHEN  ISNULL(ISIGST,0)=1 AND ISNULL(CUS_GST_NO,'')<>'' THEN 'INTER-STATE SUPPLIES TO REGISTERED PERSONS'
	WHEN  ISNULL(ISIGST,0)=1 AND ISNULL(CUS_GST_NO,'')='' THEN 'INTER-STATE SUPPLIES TO UNREGISTERED PERSONS'
	WHEN  ISNULL(ISIGST,0)=0 AND ISNULL(CUS_GST_NO,'')<>'' THEN 'INTRA-STATE SUPPLIES TO REGISTERED PERSONS'
	ELSE 'INTRA-STATE SUPPLIES TO UNREGISTERED PERSONS' END 
	HAVING SUM(TAXABLE_VALUE)<>0

	SELECT 'EXEMP' AS RTYPE, 
	CONVERT(NUMERIC(12,2),SUM(TAXABLE_VALUE)) AS [TOTAL NIL RATED SUPPLIES],
	       CONVERT(NUMERIC(12,2),0) AS [TOTAL EXEMPTED SUPPLIES],
	       CONVERT(NUMERIC(12,2),0) AS [TOTAL NON-GST SUPPLIES]
	FROM @TBLEXEMP
	
	
   
    EXEC SP3S_EXPORT_GSTR @DFMDATE , @DTODATE ,@CGSTN_NO ,@CLOC_TYPE ,@CDEPT_ID 
  
END


