create PROCEDURE SAVETRAN_SHIFTS  
(  
	 @NUPDATEMODE  NUMERIC(1,0),  /*1 FOR SHIFT OPENING AND 2 FOR SHIFT CLOSING*/  
	 @NSPID    VARCHAR(50),  
	 @CMEMONOPREFIX  VARCHAR(50),  
	 @CFINYEAR   VARCHAR(10),  
	 @CMEMOID   VARCHAR(40)='',
	 @BCASHFLOW_REPORT_VIEW BIT=0
)  
AS  
BEGIN  
	
--changes by Dinkar in location id varchar(4)..
 DECLARE @CTEMPDBNAME   VARCHAR(100),  
   @CMASTERTABLENAME  VARCHAR(100),  
   @CDETAILTABLENAME  VARCHAR(100),  
   @CTEMPMASTERTABLENAME VARCHAR(100),  
   @CTEMPDETAILTABLENAME VARCHAR(100),  
   @CTEMPMASTERTABLE  VARCHAR(100),  
   @CTEMPDETAILTABLE  VARCHAR(100),  
   @CERRMSG    VARCHAR(MAX),  
   @CKEYFIELD1    VARCHAR(50),  
   @CMEMONO    VARCHAR(20),  
   @NMEMONOLEN    NUMERIC(20,0),  
   @CMEMONOVAL    VARCHAR(50),  
   @CCMD     NVARCHAR(4000),  
   @CCMDOUTPUT    NVARCHAR(4000),  
   @NSAVETRANLOOP   BIT,  
   @NSTEP    INT,  
   @CLOCATIONID   VARCHAR(4),  
   @CMEMODEPTID   VARCHAR(4),
   @CSHIFTID VARCHAR(20),  
   @CTILL_ID VARCHAR(10),
   @CUSER_CODE VARCHAR(10),
   @CDEPT_ID VARCHAR(4),
   @DOPENDATE DATETIME,
   @CCASHIERENABLED VARCHAR(1),
   @CHODEPTID VARCHAR(4),@CLOCID VARCHAR(5)
   
   
  
  DECLARE @OUTPUT TABLE (MEMO_ID VARCHAR(30),ERRMSG VARCHAR(500)) 
        
  DECLARE @CSHIFT_ID VARCHAR(15),@NRECEIPTS NUMERIC(18,2),@NISSUES NUMERIC(18,2),@NPHY_CL NUMERIC(18,2)
  
 SET @NSTEP = 0  -- SETTTING UP ENVIRONMENT  
 
 SELECT @CHODEPTID	= [VALUE] FROM CONFIG WHERE  CONFIG_OPTION='HO_LOCATION_ID'
 
 -- TEMPORARY DATABASE Discarded now onwards as per Meeting on 30-10-2020 mentioned in Client issues List
 SET @CTEMPDBNAME = ''  
  
 SET @CMASTERTABLENAME = 'TILL_SHIFT_MST'  
 SET @CDETAILTABLENAME = 'TILL_SHIFT_DET'  
  
 SET @CTEMPMASTERTABLENAME = 'SHF_TILL_SHIFT_MST_UPLOAD'
 SET @CTEMPDETAILTABLENAME = 'SHF_TILL_SHIFT_DET_UPLOAD'
   
 SET @CTEMPMASTERTABLE = @CTEMPDBNAME + @CTEMPMASTERTABLENAME  
 SET @CTEMPDETAILTABLE = @CTEMPDBNAME + @CTEMPDETAILTABLENAME  
   
 SET @CERRMSG   = ''  
 SET @CKEYFIELD1   = 'SHIFT_ID'  
  
 BEGIN TRY  
  BEGIN TRANSACTION   
  -- START UPDATING XN TABLES  
  
  if @BCASHFLOW_REPORT_VIEW=1
     GOTO LBLUPDATEAMT

 -- update SHF_TILL_SHIFT_DET_UPLOAD set sp_id=@NSPID where sp_id=@@SPID 
   
   
   select @CLOCID=location_code  from SHF_TILL_SHIFT_MST_UPLOAD where SP_ID =@NSPID 
   
  IF ISNULL(@CLOCID,'')=''
		SELECT @CDEPT_ID=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
	ELSE
		SELECT @CDEPT_ID = @CLOCID
  
  IF ISNULL(@CDEPT_ID,'')=''
 BEGIN
    SET @CERRMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' LOCATION ID CAN NOT BE BLANK  '  
	GOTO END_PROC    
 END

  IF @NUPDATEMODE = 1 -- OPEN THE TILL
  BEGIN   
    ---VALIDATIONS ON THE TEMP TABLE
	SET @CCMD=N'SELECT @CTILL_ID=TILL_ID,@CUSER_CODE=USER_CODE,@DOPENDATE=OPEN_DATE FROM '+@CTEMPMASTERTABLE +' WHERE SP_ID='''+@NSPID+''''
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD,N'@CTILL_ID VARCHAR(10) OUTPUT,@CUSER_CODE VARCHAR(10) OUTPUT,@DOPENDATE DATETIME OUTPUT',@CTILL_ID OUTPUT
		 ,@CUSER_CODE OUTPUT,@DOPENDATE OUTPUT

	/*
		IF TILL IS ALREADY OPEN, CANNOT BE OPENED AGAIN UNLESS THE TILL GETS CLOSED.
	*/	   
	IF EXISTS(SELECT TOP 1 'U' FROM TILL_SHIFT_MST WHERE location_code =@CDEPT_ID AND TILL_ID=@CTILL_ID AND ISNULL(CLOSE_DATE,'')='')
	BEGIN
		SET @CERRMSG='TILL IS ALREADY OPEN.PLEASE CLOSE IT AND TRY AGAIN.'
		GOTO END_PROC
	END

	/*
		TILL OPEN DATE CANNOT BE LESS THAN CLOSING DATE FOR THE TILL.
	*/
	IF EXISTS(SELECT TOP 1 'U' FROM TILL_SHIFT_MST WHERE location_code=@CDEPT_ID AND TILL_ID=@CTILL_ID AND CLOSE_DATE>@DOPENDATE)
	BEGIN
		SET @CERRMSG='TILL OPEN DATE CANNOT BE LESS THAN PREVIOUS CLOSE DATE.'
		GOTO END_PROC
	END
	/*
		A SINGLE USER CANNOT OPEN TWO TILLS AT ANY POINT OF TIME
	*/
	IF EXISTS(SELECT TOP 1 'U' FROM TILL_SHIFT_MST 
			  WHERE location_code=@CDEPT_ID AND USER_CODE=@CUSER_CODE AND ISNULL(CLOSE_DATE,'')='')
	BEGIN
		SET @CERRMSG='USER HAS ALREADY OPENED ANOTHER TILL.PLEASE CLOSE THE TILL AND TRY AGAIN.'
		GOTO END_PROC
	END
   
	---GENERATING THE SHIFT ID 
	DECLARE @COLD_SHIFT_ID VARCHAR(15),@NSHIFT_COUNT NUMERIC(3),@CSHIFT_DT VARCHAR(8)
	
	SET @CSHIFT_DT=CONVERT(VARCHAR(10),@DOPENDATE,112)
	
	LBL_GENSHIFT:
	SELECT @NSHIFT_COUNT=MAX(CONVERT(INT,RIGHT(SHIFT_ID,3))) FROM TILL_SHIFT_MST WHERE CONVERT(varchar(10), open_date,112) =@CSHIFT_DT
	
	
	
	SET @NSHIFT_COUNT=ISNULL(@NSHIFT_COUNT,0)+1
	
	SET @CSHIFTID=@CDEPT_ID+''+@CSHIFT_DT+'-'+REPLICATE(0,3-LEN(LTRIM(RTRIM(STR(@NSHIFT_COUNT)))))
				  +LTRIM(RTRIM(STR(@NSHIFT_COUNT)))
  
    SET @NSTEP = 40  -- UPDATING NEW ID INTO TEMP TABLES  
  
    SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CKEYFIELD1+'=''' + @CSHIFTID+'''
						,OPEN_TIME=GETDATE() WHERE SP_ID='''+@NSPID+'''' 
    PRINT @CCMD  
    EXEC SP_EXECUTESQL @CCMD  
		
  END     -- TILL OPENED
  ELSE    -- CALLED FOR SHIFT CLOSING
  BEGIN   -- START OF SHIFT CLOSING
	   SET @NSTEP = 60
	   SET @CCMD = 'SELECT @NPHY_CL=SUM(AMOUNT),@CSHIFTID=SHIFT_ID 
					FROM '+@CTEMPDETAILTABLE+' 
					WHERE SP_ID='''+@NSPID+'''
					GROUP BY SHIFT_ID' 
	   PRINT @CCMD  
	   EXEC SP_EXECUTESQL @CCMD,N'@NPHY_CL NUMERIC(18,2) OUTPUT,@CSHIFTID VARCHAR(15) OUTPUT'
							   ,@NPHY_CL OUTPUT,@CSHIFTID OUTPUT
		   
	   SET @NSTEP = 65
	   SET @CCMD = 'UPDATE '+@CTEMPDETAILTABLE+' SET ROW_ID='''+@CDEPT_ID+'''+CONVERT(VARCHAR(40),NEWID()) WHERE SP_ID='''+@NSPID+''' '
	   PRINT @CCMD  
	   EXEC SP_EXECUTESQL @CCMD

	 
	   
	   /*DURING CLOSING OF SHIFT,UPDATE THE RECEIPTS AND ISSUES AMOUNT FOR THE SHIFT IN 
	     TILL_SHIFT_MST
	   */ 

	   LBLUPDATEAMT:

	   SELECT TOP 1 @CCASHIERENABLED=VALUE FROM CONFIG WHERE CONFIG_OPTION='OPEN_CASHIER_FOR_CASHMEMOS'
	   SET @CCASHIERENABLED=ISNULL(@CCASHIERENABLED,0)

	   
	   IF @BCASHFLOW_REPORT_VIEW=1
	   BEGIN
		   SELECT TOP 1 @CSHIFTID=SHIFT_ID FROM #TMPSHIFT
		   
	   END
	   
	   SELECT @NRECEIPTS=SUM(ISNULL(RECEIPTS,0))
	   FROM 
	   (
			--CASH RECEIVED THRU TILL EXPENSES
			SELECT  SUM(B.AMOUNT) AS RECEIPTS
			FROM TILL_EXPENSE_MST A
			JOIN TILL_EXPENSE_DET B ON A.MEMO_ID=B.MEMO_ID
			WHERE A.SHIFT_ID=@CSHIFTID AND B.XN_TYPE='CR'
			UNION ALL
			--CASH RECEIVED THRU ADVANCES/OS RECEIPTS
			SELECT SUM(B.AMOUNT) 
			FROM ARC01106 A
			JOIN PAYMODE_XN_DET B ON A.ADV_REC_ID=B.MEMO_ID AND B.XN_TYPE='ARC'
			WHERE A.SHIFT_ID=@CSHIFTID AND A.ARC_TYPE=1 AND B.PAYMODE_CODE='0000000'
			AND A.CANCELLED=0
			UNION ALL
			--NET CASH RECEIVED AGAINST SALES
			SELECT SUM(CASE WHEN @CCASHIERENABLED=0 THEN B.AMOUNT ELSE 0 END) 
			FROM CMM01106 A
			JOIN PAYMODE_XN_DET B ON A.CM_ID=B.MEMO_ID AND B.XN_TYPE='SLS'
			WHERE A.SHIFT_ID=@CSHIFTID AND B.PAYMODE_CODE='0000000'
			AND A.CANCELLED=0
			UNION ALL
			--NET CASH RECEIVED AGAINST SALES THRU CASHIER
			SELECT SUM(B.AMOUNT) 
			FROM DSM01106 A
			JOIN DSD01106 AD ON A.DS_ID=AD.DS_ID
			JOIN PAYMODE_XN_DET B ON AD.CM_ID=B.MEMO_ID AND B.XN_TYPE='SLS'
			WHERE A.SHIFT_ID=@CSHIFTID AND B.PAYMODE_CODE='0000000'
			AND A.CANCELLED=0
			union all--expenses
			SELECT  SUM(B.xn_amount) AS RECEIPTS
			FROM pem01106 A
			JOIN ped01106 B ON A.pem_memo_id=B.pem_memo_id
			WHERE A.SHIFT_ID=@CSHIFTID AND B.XN_TYPE='CR' and a.cancelled =0
	   )A
	   




	    SELECT @NISSUES=SUM(ISSUES)
	    FROM 
	    (
			--AMOUNT ISSUED THRU TILL EXPENSES
			SELECT  SUM(B.AMOUNT) AS ISSUES 
			FROM TILL_EXPENSE_MST A
			JOIN TILL_EXPENSE_DET B ON A.MEMO_ID=B.MEMO_ID
			WHERE A.SHIFT_ID=@CSHIFTID AND B.XN_TYPE='DR'
			UNION ALL
			--CASH ISSUED AGAINST PAYMENTS
			SELECT SUM(B.AMOUNT) AS ISSUES 
			FROM ARC01106 A
			JOIN PAYMODE_XN_DET B ON A.ADV_REC_ID=B.MEMO_ID AND B.XN_TYPE='ARC'
			WHERE A.SHIFT_ID=@CSHIFTID AND A.ARC_TYPE=2 AND B.PAYMODE_CODE='0000000'
			AND A.CANCELLED=0
			UNION ALL
			--CASH ISSUES AGAINST TILL LIFTS
			SELECT SUM(A.LIFT_AMOUNT) AS ISSUES
			FROM TILL_LIFTS A 
			WHERE A.SHIFT_ID=@CSHIFTID AND A.CANCELLED=0
			union all
			SELECT  SUM(B.xn_amount) AS RECEIPTS
			FROM pem01106 A
			JOIN ped01106 B ON A.pem_memo_id=B.pem_memo_id
			WHERE A.SHIFT_ID=@CSHIFTID AND B.XN_TYPE='Dr' and a.cancelled =0
	    )B
	   
	   SET @NRECEIPTS=ISNULL(@NRECEIPTS,0)
	   SET @NISSUES=ISNULL(@NISSUES,0)


	   IF @BCASHFLOW_REPORT_VIEW=1
	   BEGIN
	       DELETE FROM #TMPSHIFT WHERE SHIFT_ID=@CSHIFTID
		   UPDATE  A SET RECEIPTS=@NRECEIPTS,ISSUES=@NISSUES,
		            COMP_CL=ISNULL(COMP_OP,0)+ISNULL(@NRECEIPTS,0)-ISNULL(@NISSUES,0)
		   FROM  TILL_SHIFT_MST A WHERE SHIFT_ID =@CSHIFTID

		   IF EXISTS (SELECT TOP 1 'U' FROM #TMPSHIFT where shift_id<>'')
		   GOTO LBLUPDATEAMT

		   GOTO END_PROC
	   END
	   
	   SET @NSTEP = 70  -- GETTING ID INFO FROM TEMP TABLE  
	   SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET RECEIPTS='''+LTRIM(RTRIM(STR(@NRECEIPTS,18,2)))+'''
							 , ISSUES='''+LTRIM(RTRIM(STR(@NISSUES,18,2)))+''' WHERE SP_ID='''+@NSPID+''' '
	   PRINT @CCMD  
	   EXEC SP_EXECUTESQL @CCMD   	
	   
	   SET @NSTEP = 70  -- GETTING ID INFO FROM TEMP TABLE  
	   SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET CLOSE_TIME=GETDATE()
							 , COMP_CL=COMP_OP+RECEIPTS-ISSUES
							 , PHY_CL='''+LTRIM(RTRIM(STR(@NPHY_CL,18,2)))+''',LAST_UPDATE=GETDATE()
							 WHERE SP_ID='''+@NSPID+'''' 
	   PRINT @CCMD  
	   EXEC SP_EXECUTESQL @CCMD   	
	   
  END  -- END OF SHIFT CLOSING


   DECLARE @CWHERECLAUSE VARCHAR(1000)
    SET @CWHERECLAUSE = ' SP_ID='''+LTRIM(RTRIM((@NSPID)))+''''
  
  SET @NSTEP = 100  -- UPDATING MASTER TABLE  
	EXEC UPDATEMASTERXN   
		  @CSOURCEDB	 = @CTEMPDBNAME  
		, @CSOURCETABLE  = @CTEMPMASTERTABLE
		, @CDESTDB		 = ''  
		, @CDESTTABLE	 = @CMASTERTABLENAME  
		, @CKEYFIELD1	 = @CKEYFIELD1  
		, @BALWAYSUPDATE = 1	
		,@CFILTERCONDITION=@CWHERECLAUSE

  IF @NUPDATEMODE=2
  BEGIN
	EXEC UPDATEMASTERXN   
		  @CSOURCEDB	 = @CTEMPDBNAME  
		, @CSOURCETABLE  = @CTEMPDETAILTABLE 
		, @CDESTDB		 = ''  
		, @CDESTTABLE	 = @CDETAILTABLENAME 
		, @CKEYFIELD1	 = @CKEYFIELD1  
		, @BALWAYSUPDATE = 1	
		,@CFILTERCONDITION=@CWHERECLAUSE
  END	
 
 END TRY  
 BEGIN CATCH  
    SET @CERRMSG = 'STEP- ' + RTRIM(LTRIM(STR(@NSTEP))) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' 
				 + ERROR_MESSAGE()
 END CATCH 
   
END_PROC:  
	
	INSERT INTO @OUTPUT(MEMO_ID,ERRMSG)
	SELECT @CSHIFTID,ISNULL(@CERRMSG,'') 

	if ISNULL (@BCASHFLOW_REPORT_VIEW,0)=0
	UPDATE till_shift_mst  WITH (ROWLOCk) SET last_update=getdate(),HO_SYNCH_LAST_UPDATE='' WHERE shift_id=@cShiftId

	IF @@TRANCOUNT>0  
	BEGIN  
	  IF ISNULL(@CERRMSG,'')='' 
	  BEGIN
			commit TRANSACTION 
		    
			if ISNULL (@BCASHFLOW_REPORT_VIEW,0)=0
			EXEC SP3S_SEND_TILL_SMS @CSHIFT_ID=@CSHIFTID
	  END
	  ELSE  
			ROLLBACK  
	END 
	if ISNULL (@BCASHFLOW_REPORT_VIEW,0)=0
	begin
		SELECT * FROM @OUTPUT

	end

	
	DELETE A FROM SHF_TILL_SHIFT_MST_UPLOAD A (NOLOCK) WHERE SP_ID=@NSPID
	DELETE A FROM SHF_TILL_SHIFT_DET_UPLOAD A (NOLOCK) WHERE SP_ID=@NSPID


END        
--END OF PROCEDURE SAVETRAN_SHIFTS

