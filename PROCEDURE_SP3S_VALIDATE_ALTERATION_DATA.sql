CREATE PROCEDURE SP3S_VALIDATE_ALTERATION_DATA(@NSPID INT)
AS
BEGIN
DECLARE @ERR BIT=0,@ERROR_MSG VARCHAR(1000)=''

SELECT TOP 1 @ERROR_MSG='Job '''+isnull(U.JOB_NAME,'')+''' does not found' 
FROM ALTERATIONSETUP_IMPORT_UPLOAD U (NOLOCK)
LEFT JOIN JOBS J (NOLOCK) ON U.JOB_NAME=J.JOB_NAME
WHERE J.JOB_CODE IS NULL AND U.SP_ID=@nSPID
IF ISNULL(@ERROR_MSG,'')<>''
   BEGIN
      SET @ERR=1
      GOTO END_PROC
   END


   
SELECT TOP 1 @ERROR_MSG=' Section '''+isnull(U.SECTION_NAME,'')+''' does not found' 
FROM ALTERATIONSETUP_IMPORT_UPLOAD U (NOLOCK)
LEFT JOIN SECTIONM SM (NOLOCK) ON U.SECTION_NAME=sm.SECTION_NAME
WHERE sm.SECTION_CODE IS NULL AND U.SP_ID=@nSPID --and isnull(sm.inactive,0)=0
IF ISNULL(@ERROR_MSG,'')<>''
BEGIN
    SET @ERR=1
    GOTO END_PROC
END



UPDATE U SET  SECTION_CODE=sm.SECTION_CODE
FROM ALTERATIONSETUP_IMPORT_UPLOAD U 
JOIN SECTIONM SM  ON U.SECTION_NAME=SM.SECTION_NAME
WHERE U.SP_ID=@nSPID --and isnull(sm.inactive,0)=0



SELECT TOP 1 @ERROR_MSG='Sub Section '''+isnull(U.SUB_SECTION_NAME,'')+''' does not found of section ' +u.SECTION_NAME 
FROM ALTERATIONSETUP_IMPORT_UPLOAD U (NOLOCK)
LEFT JOIN SECTIOND SD (NOLOCK) ON U.SUB_SECTION_NAME=SD.SUB_SECTION_NAME and u.SECTION_CODE=sd.section_code
WHERE SD.SUB_SECTION_CODE IS NULL AND U.SP_ID=@nSPID --and isnull(sd.inactive,0)=0
IF ISNULL(@ERROR_MSG,'')<>''
BEGIN
    SET @ERR=1
    GOTO END_PROC
END




--SELECT TOP 1 @ERROR_MSG='Location '''+U.DEPT_ID+''' does not found'  
--FROM ALTERATIONSETUP_IMPORT_UPLOAD U (NOLOCK)
--LEFT JOIN LOCATION L (NOLOCK) ON U.DEPT_id=L.DEPT_id
--WHERE  L.DEPT_ID IS NULL AND U.SP_ID=@nSPID
--IF ISNULL(@ERROR_MSG,'')<>''
--BEGIN
--    SET @ERR=1
--    GOTO END_PROC
--END

/*
@Rohit 26-03-2021 : Against Ticket # - 03-0906 and as per discussion with pankaj
if exists (select top 1 'u' from ALTERATIONSETUP_IMPORT_UPLOAD WHERE SP_ID=@nSPID
and isnull(JOBRATE_LESSTHAN_NRV,0)=0 and isnull(JOBRATE_MORETHAN_NRV,0)=0)
begin
    set @ERROR_MSG='Rate can not be Zero'
    SET @ERR=1
    GOTO END_PROC

end
*/

UPDATE U SET U.JOB_CODE=J.JOB_CODE
FROM ALTERATIONSETUP_IMPORT_UPLOAD U 
LEFT JOIN JOBS J ON U.JOB_NAME=J.JOB_NAME
WHERE U.SP_ID=@nSPID

UPDATE U SET  SUB_SECTION_CODE=SD.SUB_SECTION_CODE
FROM ALTERATIONSETUP_IMPORT_UPLOAD U 
JOIN SECTIOND SD  ON U.SUB_SECTION_NAME=SD.SUB_SECTION_NAME and u.SECTION_CODE =sd.section_code
WHERE U.SP_ID=@nSPID --and sd.inactive =0


IF OBJECT_ID('TEMPDB..#TMPDUPLICATE','U') IS NOT NULL 
   DROP TABLE #TMPDUPLICATE

SELECT DEPT_ID ,SECTION_CODE ,SUB_SECTION_CODE,JOB_CODE  
INTO #TMPDUPLICATE 
FROM ALTERATIONSETUP_IMPORT_UPLOAD A
WHERE SP_ID=@nSPID
GROUP BY DEPT_ID ,SECTION_CODE ,SUB_SECTION_CODE,JOB_CODE  
HAVING COUNT(*)>1

IF EXISTS (SELECT TOP 1'U' FROM #TMPDUPLICATE)
BEGIN
   SET @ERR=1
   SET @ERROR_MSG='DUPLICATE RECORD FOUND'
END



END_PROC:  
IF @ERR=0
   SELECT DEPT_NAME,SUB_SECTION_NAME,JOB_NAME,BASE_NRV,JOBRATE_LESSTHAN_NRV,JOBRATE_MORETHAN_NRV,VENDOR_RATE,''ERRMSG 
   FROM ALTERATIONSETUP_IMPORT_UPLOAD
ELSE
	BEGIN
	  IF @ERROR_MSG ='DUPLICATE RECORD FOUND'
	  BEGIN
		   SELECT @ERROR_MSG AS ERRMSG,A.DEPT_ID,A.DEPT_NAME,A.SECTION_NAME,A.SUB_SECTION_NAME,A.JOB_NAME
		   FROM ALTERATIONSETUP_IMPORT_UPLOAD A
		   JOIN #TMPDUPLICATE B ON A.DEPT_ID=B.DEPT_ID AND A.SECTION_CODE=B.SECTION_CODE AND A.SUB_SECTION_CODE=B.SUB_SECTION_CODE AND A.JOB_CODE=B.JOB_CODE
		   WHERE SP_ID=@nSPID
	  END
	  ELSE
	   SELECT @ERROR_MSG ERRMSG     

	END 
END
