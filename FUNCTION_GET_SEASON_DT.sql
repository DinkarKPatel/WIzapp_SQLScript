CREATE FUNCTION DBO.GET_SEASON_DT(@SEASON_ID VARCHAR(10),@MODE VARCHAR(4))    
RETURNS DATETIME    
AS    
BEGIN    
DECLARE @CAL_DATE BIT,@DT DATETIME,@TODAY DATETIME,@FDATE DATETIME,@TDATE DATETIME,@IF BIT=0    
SET @TODAY=CONVERT(DATE,GETDATE())    

SELECT TOP 1 @CAL_DATE=IncludeYearInDate FROM SEASON_MST (NOLOCK) WHERE Season_Id=@SEASON_ID AND IncludeYearInDate=1    
SET @CAL_DATE=CASE @CAL_DATE WHEN 1 THEN 0 ELSE 1 END    
IF @CAL_DATE=1    
   BEGIN    
      SELECT @FDATE=DATEADD(YY,YEAR(@TODAY)-YEAR(PERIOD_FROM),PERIOD_FROM) ,@TDATE=DATEADD(YY,YEAR(@TODAY)-YEAR(PERIOD_TO),PERIOD_TO)
      FROM SEASON_MST WHERE Season_Id=@SEASON_ID
	  IF EXISTS(SELECT TOP 1 SEASON_ID FROM SEASON_MST (NOLOCK) WHERE Season_Id=@SEASON_ID AND MONTH(PERIOD_FROM)>MONTH(PERIOD_TO)) AND @MODE!='TILL'
         SET @TDATE=DATEADD(YY,1,@TDATE)
      IF @TODAY BETWEEN DATEADD(YY,-1,@FDATE) AND DATEADD(YY,-1,@TDATE)
         SELECT @FDATE=DATEADD(YY,-1,@FDATE),@TDATE=DATEADD(YY,-1,@TDATE),@IF=1
      SET @DT=CASE WHEN @MODE='FROM' THEN @FDATE ELSE @TDATE END
   END    
ELSE       
  BEGIN    
      SELECT @DT=CASE @MODE WHEN 'FROM' THEN PERIOD_FROM ELSE PERIOD_TO END      
      FROM SEASON_MST WHERE Season_Id=@SEASON_ID    
  END    
RETURN @DT    
END  
