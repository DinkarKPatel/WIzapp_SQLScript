

-- PROCEDURE TO COMPARE PREVIOUSLY POSTED VOUCHERS DETAILS & VOUCHERS DETAILS
-- AS PER CURRENT POSTACT VERSION & PROVIDE THE DETAILS ABOUT THOSE HAVING DIFFERENCES 

CREATE PROCEDURE SP_DATAAUDIT_AC
@DFROMDT DATETIME,
@DTODT DATETIME,
@CREFXNTYPE VARCHAR(10)=''
--WITH ENCRYPTION
AS
BEGIN
--(dinkar) Replace  left(memoid,2) to Location_code 
	DECLARE @CXNTYPE VARCHAR(10),@CCMD NVARCHAR(4000),@CTABLENAME VARCHAR(30),@CXNTYPEEXPR VARCHAR(50),
	@CKEYFIELD VARCHAR(30),@CDEPTID CHAR(2),@CMEMODTCOL VARCHAR(30),@CLMCOL VARCHAR(30),@CDEPTIDCOL VARCHAR(30),
	@CCUTOFFDATE VARCHAR(15),@DCUTOFFDATE DATETIME,@BCHKREPOSTENTRIES BIT
	
	SET @BCHKREPOSTENTRIES=(CASE WHEN @CREFXNTYPE='' THEN 0 ELSE 1 END)
	
	DECLARE @TXNAUDITTABLES TABLE (XN_TYPE VARCHAR(5),TABLENAME VARCHAR(50),KEYFIELD VARCHAR(30),
								   MEMODTCOL VARCHAR(30),LMCOL VARCHAR(30),DEPTIDCOL VARCHAR(50))
	
	IF @CREFXNTYPE IN ('','PUR')
		INSERT @TXNAUDITTABLES VALUES ('PUR','PIM01106','BILL_NO','INV_DT','AC_CODE','LOCATION_CODE')
	
	IF @CREFXNTYPE IN ('','PRT')	
		INSERT @TXNAUDITTABLES VALUES ('PRT','RMM01106','RM_ID','RM_DT','','LOCATION_CODE')
	
	IF @CREFXNTYPE IN ('','CHI')	
		INSERT @TXNAUDITTABLES VALUES ('CHI','CIM01106','CHALLAN_ID','CHALLAN_DT','','LOCATION_CODE')
	
	IF @CREFXNTYPE IN ('','WSL')	
		INSERT @TXNAUDITTABLES VALUES ('WSL','INM01106','INV_ID','INV_DT','','LOCATION_CODE')
	
	IF @CREFXNTYPE IN ('','WSR')	
		INSERT @TXNAUDITTABLES VALUES ('WSR','CNM01106','CN_ID','CN_DT','','LOCATION_CODE')
	
	IF @CREFXNTYPE IN ('','SLS')	
		INSERT @TXNAUDITTABLES VALUES ('SLS','CMM01106','','CM_DT','','LOCATION_CODE')
		
	
	TRUNCATE TABLE VM_DATAAUDIT
	
	TRUNCATE TABLE VD_DATAAUDIT
	
	DECLARE @TMPDEPTIDS TABLE (DEPT_ID CHAR(2))
	
	DECLARE @TMPDIFFVMIDS TABLE (VM_ID VARCHAR(40))
	
	DECLARE @TMPDIFFVMSLS TABLE (DEPT_ID CHAR(2),BILL_DT DATETIME)
					
	DELETE FROM TMPAUDITSMRY WHERE SP_ID=@@SPID
	
	DECLARE ABCAUDITTABLES CURSOR FOR SELECT XN_TYPE,TABLENAME,KEYFIELD,MEMODTCOL,LMCOL,DEPTIDCOL FROM  @TXNAUDITTABLES	
	OPEN ABCAUDITTABLES
	FETCH NEXT FROM ABCAUDITTABLES INTO @CXNTYPE,@CTABLENAME,@CKEYFIELD,@CMEMODTCOL,@CLMCOL,@CDEPTIDCOL
	WHILE @@FETCH_STATUS=0
	BEGIN
		
		PRINT 'RECONCILING ACCOUNTS & INVENTORY FOR XN TYPE :'+@CXNTYPE
		
		SELECT @CCUTOFFDATE='',@DCUTOFFDATE=''
		
		SELECT TOP 1 @CCUTOFFDATE=VALUE FROM CONFIG WHERE CONFIG_OPTION='ACCOUNT_AUDIT_'+@CXNTYPE
		
		IF @CCUTOFFDATE<>''
			SET @DCUTOFFDATE=CONVERT(DATETIME,@CCUTOFFDATE)
		
		IF @DCUTOFFDATE<@DFROMDT OR @DCUTOFFDATE=''
			SET @DCUTOFFDATE=@DFROMDT
			
		--- NO NEED TO AUDIT A TRANSACTION WITH ACCOUNTS IF CUTOFF DATE FOR THAT XN IS MORE THAN THAT OF TO DATE
		IF @DCUTOFFDATE>@DTODT
		BEGIN
			PRINT 'SKIP : '+@CXNTYPE
			GOTO LBLNEXTXNTYPE
		END		
		
		TRUNCATE TABLE VM_DATAAUDIT
		
		TRUNCATE TABLE VD_DATAAUDIT
		
		DELETE FROM @TMPDIFFVMIDS
		
		DELETE FROM @TMPDIFFVMSLS
		
		DELETE FROM @TMPDEPTIDS				
		
		
		SET @CCMD=N'SELECT DISTINCT '+@CDEPTIDCOL+' FROM '+@CTABLENAME+' A
					JOIN LOCATION B ON '+@CDEPTIDCOL+'=B.DEPT_ID WHERE '+
					@CMEMODTCOL+' BETWEEN '''+CONVERT(VARCHAR,@DCUTOFFDATE,110)+'''
					AND '''+CONVERT(VARCHAR,@DTODT,110)+''' AND LOC_TYPE=1'
		
		INSERT @TMPDEPTIDS
		EXEC SP_EXECUTESQL @CCMD
		
		DECLARE ABCAUDITDEPTIDS CURSOR FOR SELECT DEPT_ID FROM @TMPDEPTIDS
		OPEN ABCAUDITDEPTIDS
		FETCH NEXT FROM ABCAUDITDEPTIDS INTO @CDEPTID
		WHILE @@FETCH_STATUS=0
		BEGIN
			IF @CXNTYPE IN ('CHI','WSL','WSR')
				EXEC POSTACT @CXNTYPE,@DCUTOFFDATE,@DTODT,'','',1,@BCHKREPOSTENTRIES
			ELSE
				EXEC POSTACT @CXNTYPE,@DCUTOFFDATE,@DTODT,'',@CDEPTID,1,@BCHKREPOSTENTRIES
				
			UPDATE VD_DATAAUDIT SET VM_ID=LTRIM(RTRIM(VM_ID))+@CXNTYPE+'-'+@CDEPTID+'STUFF' 
			WHERE VM_ID NOT LIKE '%STUFF%'			
			AND VM_ID IN (SELECT VM_ID FROM VM_DATAAUDIT WHERE BILL_TYPE=@CXNTYPE OR (BILL_TYPE='CHO' 
			AND @CXNTYPE='CHI'))
			
			UPDATE VM_DATAAUDIT SET VM_ID=LTRIM(RTRIM(VM_ID))+@CXNTYPE+'-'+@CDEPTID+'STUFF' WHERE
			(BILL_TYPE=@CXNTYPE OR (BILL_TYPE='CHO' AND @CXNTYPE='CHI'))
			AND  VM_ID NOT LIKE '%STUFF%'
			
			IF @CXNTYPE IN ('CHI','WSL','WSR')
				BREAK
				
			FETCH NEXT FROM ABCAUDITDEPTIDS INTO @CDEPTID
		END
		
		CLOSE ABCAUDITDEPTIDS
		DEALLOCATE ABCAUDITDEPTIDS
		
		IF @CXNTYPE='CHI'
			SELECT @CXNTYPEEXPR='''CHI'',''CHO'''
		ELSE
			SELECT @CXNTYPEEXPR=''''+@CXNTYPE+''''
		
		---- DO NOT PERFORM THE FOLLOWING VALIDATIONS IF THIS PROCEDURE IS CALLED FROM POSTACT PROCEDURE 
		---- ITSELF FOR RECHECKINF OF ALREADY POSTED ENTRIES
		IF @CREFXNTYPE=''
		BEGIN		
			SET @CCMD =N'SELECT '''+@CXNTYPE+''',''ORPHAN VOUCHER ENTRIES FOUND'',ISNULL(B.AC_NAME,'''') AS XN_PARTY_NAME,
						'''','''',A.VOUCHER_NO,A.VOUCHER_DT,
						'''',''VOUCHER AMOUNT :''+STR(A.DRTOTAL,14,2),A.DEPT_ID,'+STR(@@SPID)+' AS SP_ID FROM VM01106 A 
						LEFT OUTER JOIN LM01106 B ON A.BILL_AC_CODE=B.AC_CODE
						LEFT OUTER JOIN VM_DATAAUDIT C ON A.BILL_ID=C.BILL_ID '+
						(CASE WHEN @CXNTYPE='PUR' THEN ' AND A.BILL_AC_CODE=C.BILL_AC_CODE AND A.BILL_DT=C.BILL_DT '
					 		  WHEN @CXNTYPE='SLS' THEN ' AND A.BILL_DT=C.BILL_DT AND C.DEPT_ID=A.DEPT_ID' ELSE '' END)+'
						 AND A.BILL_TYPE=C.BILL_TYPE 
						WHERE A.BILL_TYPE IN('+@CXNTYPEEXPR+') AND A.CANCELLED=0
						AND A.VOUCHER_DT BETWEEN '''+CONVERT(VARCHAR,@DCUTOFFDATE,110)+'''
						AND '''+CONVERT(VARCHAR,@DTODT,110)+''' AND  C.VM_ID IS NULL' 	

			INSERT TMPAUDITSMRY
			EXEC SP_EXECUTESQL @CCMD
								
			SET @CCMD=N'SELECT '''+@CXNTYPE+''',''TRANSACTION MEMOS NOT POSTED INTO ACCOUNTS'',
						ISNULL(B.AC_NAME,'''') AS XN_PARTY_NAME,RIGHT(A.BILL_ID,10) AS BILL_NO,
						A.BILL_DT,'''','''',''MEMO AMOUNT :''+STR(A.DRTOTAL,14,2) ,'''',A.DEPT_ID,'+STR(@@SPID)+' FROM VM_DATAAUDIT A 
						LEFT OUTER JOIN LM01106 B ON A.BILL_AC_CODE=B.AC_CODE
						LEFT OUTER JOIN VM01106 C ON A.BILL_ID=C.BILL_ID  '+
						(CASE WHEN @CXNTYPE='PUR' THEN ' AND A.BILL_AC_CODE=C.BILL_AC_CODE AND A.BILL_DT=C.BILL_DT ' 
							  WHEN @CXNTYPE='SLS' THEN ' AND A.BILL_DT=C.BILL_DT AND C.DEPT_ID=A.DEPT_ID ' ELSE '' END)+
						' AND C.BILL_TYPE=A.BILL_TYPE  AND C.BILL_TYPE IN('+@CXNTYPEEXPR+') AND C.CANCELLED=0 
						WHERE A.BILL_TYPE IN('+@CXNTYPEEXPR+') AND C.VM_ID IS NULL'
			
			INSERT TMPAUDITSMRY
			EXEC SP_EXECUTESQL @CCMD
		END
	
		IF @CXNTYPE<>'SLS'
		BEGIN
			SET @CCMD=N'SELECT DISTINCT A.VM_ID FROM 
			(SELECT VM_ID,AC_CODE,SUM(DEBIT_AMOUNT) AS DEBIT_AMOUNT,SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT
			 FROM  VD_DATAAUDIT GROUP BY VM_ID,AC_CODE) A JOIN VM_DATAAUDIT B ON A.VM_ID=B.VM_ID
			JOIN VM01106 C ON B.BILL_AC_CODE=C.BILL_AC_CODE AND	B.BILL_ID=C.BILL_ID 
			AND B.BILL_DT=C.BILL_DT  AND C.BILL_TYPE=B.BILL_TYPE AND B.DEPT_ID=C.DEPT_ID 
			JOIN  (SELECT A.VM_ID,A.AC_CODE,SUM(A.DEBIT_AMOUNT) AS DEBIT_AMOUNT,SUM(A.CREDIT_AMOUNT) AS CREDIT_AMOUNT
			 FROM  VD01106 A JOIN VM01106 B ON A.VM_ID=B.VM_ID WHERE B.VOUCHER_DT BETWEEN '''+
			 CONVERT(VARCHAR,@DCUTOFFDATE,110)+''' AND '''+CONVERT(VARCHAR,@DTODT,110)+''' GROUP BY A.VM_ID,AC_CODE) D
			ON D.VM_ID=C.VM_ID AND  D.AC_CODE=A.AC_CODE 
			WHERE B.BILL_TYPE IN('+@CXNTYPEEXPR+') AND C.CANCELLED=0 AND  
			(ABS(D.DEBIT_AMOUNT-A.DEBIT_AMOUNT)>=1 OR ABS(D.CREDIT_AMOUNT-A.CREDIT_AMOUNT)>=1)'
			
			PRINT @CCMD
			INSERT @TMPDIFFVMIDS
			EXEC SP_EXECUTESQL @CCMD
			
			INSERT TMPAUDITSMRY		
			SELECT @CXNTYPE,'VALIDATING POSTED ENTRIES INTO BOOKS OF A/C',ISNULL(ISNULL(LM.AC_NAME,LMINV.AC_NAME),'')
			AS XN_PARTY_NAME,A.BILL_NO,A.BILL_DT,B.VOUCHER_NO,B.VOUCHER_DT,DBO.FN_GETVDDETAILSSTR (A.VM_ID,'VM_DATAAUDIT','',''),
			DBO.FN_GETVDDETAILSSTR (B.VM_ID,'VD01106','',''),A.DEPT_ID,@@SPID FROM VM_DATAAUDIT A 
			JOIN VM01106 B ON A.BILL_AC_CODE=B.BILL_AC_CODE AND A.BILL_ID=B.BILL_ID 
			AND A.BILL_DT=B.BILL_DT AND A.BILL_TYPE=B.BILL_TYPE AND  A.DEPT_ID=B.DEPT_ID 
			JOIN @TMPDIFFVMIDS C ON C.VM_ID=A.VM_ID 
			LEFT OUTER JOIN LM01106 LM ON LM.AC_CODE=A.BILL_AC_CODE
			LEFT OUTER JOIN INM01106 INM ON INM.INV_ID=A.BILL_ID
			LEFT OUTER JOIN LM01106 LMINV ON LMINV.AC_CODE=INM.AC_CODE
			WHERE (A.BILL_TYPE=@CXNTYPE OR (A.BILL_TYPE='CHO' AND @CXNTYPE='CHI')) AND B.CANCELLED=0
		END	
		ELSE
		BEGIN
			SET @CCMD=N'SELECT DISTINCT A.DEPT_ID,A.BILL_DT FROM 
			(SELECT DEPT_ID,BILL_DT,AC_CODE,SUM(DEBIT_AMOUNT-CREDIT_AMOUNT) AS AMOUNT
			 FROM  VD_DATAAUDIT A JOIN VM_DATAAUDIT B ON A.VM_ID=B.VM_ID WHERE DEBIT_AMOUNT<>0 OR CREDIT_AMOUNT<>0
			 GROUP BY DEPT_ID,BILL_DT,AC_CODE) A 
			 JOIN  (SELECT DEPT_ID,BILL_DT,A.AC_CODE,SUM(A.DEBIT_AMOUNT-CREDIT_AMOUNT) AS AMOUNT
			 FROM  VD01106 A JOIN VM01106 B ON A.VM_ID=B.VM_ID WHERE B.VOUCHER_DT BETWEEN '''+
			 CONVERT(VARCHAR,@DCUTOFFDATE,110)+''' AND '''+CONVERT(VARCHAR,@DTODT,110)+'''
			 AND BILL_TYPE=''SLS'' AND B.CANCELLED=0 AND (DEBIT_AMOUNT<>0 OR CREDIT_AMOUNT<>0)
			 GROUP BY DEPT_ID,BILL_DT,AC_CODE) B
			 ON B.DEPT_ID=A.DEPT_ID AND B.BILL_DT=A.BILL_DT AND B.AC_CODE=A.AC_CODE 
			WHERE ABS(B.AMOUNT-A.AMOUNT)>=1'
			
			INSERT @TMPDIFFVMSLS
			EXEC SP_EXECUTESQL @CCMD
			
			INSERT TMPAUDITSMRY		
			SELECT @CXNTYPE,'VALIDATING POSTED ENTRIES INTO BOOKS OF A/C','' AS XN_PARTY_NAME,
			'' AS  BILL_NO,A.BILL_DT,'' AS VOUCHER_NO,A.BILL_DT AS VOUCHER_DT,DBO.FN_GETVDDETAILSSTR ('','VM_DATAAUDIT',A.DEPT_ID,A.BILL_DT),
			DBO.FN_GETVDDETAILSSTR ('','VD01106',A.DEPT_ID,A.BILL_DT),A.DEPT_ID,@@SPID FROM 
			@TMPDIFFVMSLS A
		END
					
		
		LBLNEXTXNTYPE:
		
		IF NOT EXISTS (SELECT TOP 1 XN_TYPE FROM TMPAUDITSMRY WHERE XN_TYPE=@CXNTYPE AND SP_ID=@@SPID)
			INSERT TMPAUDITSMRY		
			SELECT @CXNTYPE,'VALIDATING POSTED ENTRIES INTO BOOKS OF A/C','RECORDS ARE PERFECT' AS XN_PARTY_NAME,
			'' AS  BILL_NO,'' AS BILL_DT,'' AS VOUCHER_NO,'' AS VOUCHER_DT,'','','',@@SPID
	

		FETCH NEXT FROM ABCAUDITTABLES INTO @CXNTYPE,@CTABLENAME,@CKEYFIELD,@CMEMODTCOL,@CLMCOL,@CDEPTIDCOL
	END
	
	CLOSE ABCAUDITTABLES
	DEALLOCATE ABCAUDITTABLES
	
	IF @CREFXNTYPE=''
		SELECT * FROM TMPAUDITSMRY WHERE SP_ID=@@SPID ORDER BY XN_TYPE,VALIDATION_GRP,VOUCHER_DT,XN_DT
		
END
