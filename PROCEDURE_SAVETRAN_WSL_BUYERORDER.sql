CREATE PROCEDURE SAVETRAN_WSL_BUYERORDER
(
	@NUPDATEMODE		NUMERIC(1,0),
	@NSPID				VARCHAR(50),
	@CMEMONOPREFIX		VARCHAR(50),
	@CFINYEAR			VARCHAR(10),
	@CMACHINENAME		VARCHAR(100)='',
	@CWINDOWUSERNAME	VARCHAR(100)='',
	@CWIZAPPUSERCODE	VARCHAR(10)='0000000',
	@CXNMEMOID			VARCHAR(40)='',
	@EDIT_CLICKED BIT=0,
	@bCalledFromAro BIT=0,
	@NBOXUPDATEMODE		NUMERIC(3,0)=0,
	@NBOXNO				NUMERIC(3,0)=0,
	@CArticleCode       varchar(10)=''
)
--WITH ENCRYPTION
AS
BEGIN
	--changes by Dinkar in location id varchar(4)..

   IF @EDIT_CLICKED=1 AND EXISTS(SELECT TOP 1 * FROM BUYER_ORDER_DET (NOLOCK) WHERE ORDER_ID=@CXNMEMOID AND ISNULL(PRODUCT_CODE,'')='')	 
      SET @EDIT_CLICKED=0
      
   DECLARE @COL VARCHAR(MAX)
   IF @EDIT_CLICKED=1
      BEGIN
		SET @COL='IF OBJECT_ID(''TEMPDB..##BOM_'+CAST(@NSPID AS VARCHAR)+'_'+@CXNMEMOID+''',''U'') IS NOT NULL'+CHAR(13)+' DROP TABLE [##BOM_'+CAST(@NSPID AS VARCHAR)+'_'+@CXNMEMOID+'];'+CHAR(13)+'SELECT ORDER_ID OLD_ORDER_ID, ORDER_ID NEW_ORDER_ID,'
		SELECT @COL=COALESCE(@COL,'')+FIELD_NAME+' OLD_'+FIELD_NAME+', '+FIELD_NAME+' NEW_'+FIELD_NAME+',' FROM XN_AUDIT_TRIAL_MST (NOLOCK) WHERE TABLE_NAME='BUYER_ORDER_MST' AND TRIG='UPDATE' ORDER BY ORDER_ID
		SET @COL=LEFT(@COL,LEN(@COL)-1)+CHAR(13)+'INTO [##BOM_'+CAST(@NSPID AS VARCHAR)+'_'+@CXNMEMOID+']'+CHAR(13)+'FROM BUYER_ORDER_MST (NOLOCK) WHERE ORDER_ID='''+@CXNMEMOID+''';'
		--PRINT @COL
		EXEC(@COL)
		SET @COL='IF OBJECT_ID(''TEMPDB..##BOD_'+CAST(@NSPID AS VARCHAR)+'_'+@CXNMEMOID+''',''U'') IS NOT NULL'+CHAR(13)+' DROP TABLE [##BOD_'+CAST(@NSPID AS VARCHAR)+'_'+@CXNMEMOID+'];'+CHAR(13)+'SELECT ORDER_ID OLD_ORDER_ID, ORDER_ID NEW_ORDER_ID,'
		SELECT @COL=COALESCE(@COL,'')+FIELD_NAME+' OLD_'+FIELD_NAME+', '+FIELD_NAME+' NEW_'+FIELD_NAME+',' FROM XN_AUDIT_TRIAL_MST (NOLOCK) WHERE TABLE_NAME='BUYER_ORDER_DET' AND TRIG='UPDATE' ORDER BY ORDER_ID
		SET @COL=LEFT(@COL,LEN(@COL)-1)+CHAR(13)+'INTO [##BOD_'+CAST(@NSPID AS VARCHAR)+'_'+@CXNMEMOID+']'+CHAR(13)+'FROM BUYER_ORDER_DET WITH (NOLOCK) WHERE ORDER_ID='''+@CXNMEMOID+''';'
		--PRINT @COL
		EXEC(@COL)
	  END
	  
  DECLARE @CTEMPDBNAME			VARCHAR(100),
			@CMASTERTABLENAME		VARCHAR(100),
			@CDETAILTABLENAME1		VARCHAR(100),
			@CTEMPMASTERTABLENAME	VARCHAR(100),
			@CTEMPDETAILTABLENAME1	VARCHAR(100),
			@CTEMPMASTERTABLE		VARCHAR(100),
			@CTEMPDETAILTABLE1		VARCHAR(100),
			@CERRORMSG				VARCHAR(500),
			@LDONOTUPDATESTOCK		BIT,
			@CKEYFIELD1				VARCHAR(50),
			@CKEYFIELDVAL1			VARCHAR(50),
			@CMEMONO				VARCHAR(20),
			@NMEMONOLEN				NUMERIC(20,0),
			@CMEMONOVAL				VARCHAR(50),
			@CMEMODEPTID			VARCHAR(2),
			@CLOCATIONID			VARCHAR(4),
			@CHODEPTID				VARCHAR(4),
			@CCMD					NVARCHAR(4000),
			@CCMDOUTPUT				NVARCHAR(4000),
			@NSAVETRANLOOP			BIT,
			@NSTEP					INT,
			@LENABLETEMPDATABASE	BIT,@bOrderQtyValidationFailed BIT,
			@cSourceLocId VARCHAR(4),@cTargetLocId VARCHAR(4),@LUPDATEONLY BIT,@cUpdateStr VARCHAR(4000)
			
			DECLARE @NTAXFLAG NUMERIC(1,0),@NOHGST NUMERIC(10,2),@cMissingRowId VARCHAR(50),
			        @BBYPASSDETINSERT bit,@bInsertOnly bit,@bUpdateXns BIT,@CKEYSTABLE varchar(50),
					@SalesOrderXnType varchar(30),@CLOCID VARCHAR(4)

    
	set @SalesOrderXnType='Order'
	select @bInsertOnly=0,@bUpdateXns=0

	SET @bOrderQtyValidationFailed=0

	DECLARE @OUTPUT TABLE (ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))

	SET @NSTEP = 10		-- SETTTING UP ENVIRONMENT

	SET @CTEMPDBNAME = ''

	SET @CMASTERTABLENAME	= 'BUYER_ORDER_MST'
	SET @CDETAILTABLENAME1	= 'BUYER_ORDER_DET'
	
	--SET @CTEMPMASTERTABLENAME	= 'TEMP_BUYER_ORDER_MST_'+LTRIM(RTRIM(STR(@NSPID)))
	--SET @CTEMPDETAILTABLENAME1	= 'TEMP_BUYER_ORDER_DET_'+LTRIM(RTRIM(STR(@NSPID)))
	SET @CTEMPMASTERTABLENAME	= 'WSLORD_BUYER_ORDER_MST_UPLOAD'
	SET @CTEMPDETAILTABLENAME1	= 'WSLORD_BUYER_ORDER_DET_UPLOAD'
	
	SET @CTEMPMASTERTABLE	= @CTEMPDBNAME + @CTEMPMASTERTABLENAME
	SET @CTEMPDETAILTABLE1	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME1
	
	SET @CERRORMSG			= ''
	SET @LDONOTUPDATESTOCK	= 0
	SET @CKEYFIELD1			= 'ORDER_ID'
	SET @CMEMONO			= 'ORDER_NO'
	SET @NMEMONOLEN			= 10

	set @CMEMONOPREFIX=ltrim(rtrim(@CMEMONOPREFIX))
	
	IF EXISTS (SELECT * FROM WSLORD_BUYER_ORDER_DET_UPLOAD WHERE para1_code='' AND SP_ID=@NSPID)
	   UPDATE WSLORD_BUYER_ORDER_DET_UPLOAD SET PARA1_CODE='0000000' WHERE SP_ID=@NSPID
	
	IF EXISTS (SELECT * FROM WSLORD_BUYER_ORDER_DET_UPLOAD WHERE para2_code='' AND SP_ID=@NSPID)
	   UPDATE WSLORD_BUYER_ORDER_DET_UPLOAD SET PARA2_CODE='0000000' WHERE  SP_ID=@NSPID

	IF EXISTS (SELECT * FROM WSLORD_BUYER_ORDER_DET_UPLOAD WHERE para3_code='' AND SP_ID=@NSPID)
	   UPDATE WSLORD_BUYER_ORDER_DET_UPLOAD SET PARA3_CODE='0000000' WHERE  SP_ID=@NSPID
	   
	IF EXISTS (SELECT * FROM WSLORD_BUYER_ORDER_DET_UPLOAD WHERE isnull(para4_code,'')='' AND SP_ID=@NSPID)
	   UPDATE WSLORD_BUYER_ORDER_DET_UPLOAD SET para4_code='0000000' WHERE SP_ID=@NSPID
	
	IF EXISTS (SELECT * FROM WSLORD_BUYER_ORDER_DET_UPLOAD WHERE isnull(PARA5_CODE,'')='' AND SP_ID=@NSPID)
	   UPDATE WSLORD_BUYER_ORDER_DET_UPLOAD SET para5_code='0000000' WHERE  SP_ID=@NSPID

	IF EXISTS (SELECT * FROM WSLORD_BUYER_ORDER_DET_UPLOAD WHERE isnull(PARA6_CODE,'')='' AND SP_ID=@NSPID)
	   UPDATE WSLORD_BUYER_ORDER_DET_UPLOAD SET PARA6_CODE='0000000' WHERE  SP_ID=@NSPID

	   
IF EXISTS (SELECT * FROM WSLORD_BUYER_ORDER_DET_UPLOAD WHERE isnull(SUB_SECTION_CODE,'')='' AND SP_ID=@NSPID)
	   UPDATE WSLORD_BUYER_ORDER_DET_UPLOAD SET SUB_SECTION_CODE='0000000' WHERE  SP_ID=@NSPID

IF EXISTS (SELECT * FROM WSLORD_BUYER_ORDER_DET_UPLOAD WHERE isnull(SECTION_CODE,'')='' AND SP_ID=@NSPID)
	   UPDATE WSLORD_BUYER_ORDER_DET_UPLOAD SET SECTION_CODE='0000000' WHERE  SP_ID=@NSPID

	   
--IF EXISTS (SELECT * FROM WSLORD_BUYER_ORDER_DET_UPLOAD WHERE isnull(replaceable_para1_code,'')='' AND SP_ID=@NSPID)
	   UPDATE A SET A.replaceable_para1_code=B.replaceable_para1_code
	   FROM WSLORD_BUYER_ORDER_DET_UPLOAD  A 
	   JOIN ART_para1 B on b.article_code=a.article_code and b.para1_code=a.para1_code
	   WHERE  SP_ID=@NSPID --AND isnull(A.replaceable_para1_code,'')='' 


UPDATE a SET ATTR1_KEY_CODE='0000000' ,ATTR2_KEY_CODE='0000000' ,ATTR3_KEY_CODE='0000000' ,ATTR4_KEY_CODE='0000000' ,ATTR5_KEY_CODE='0000000',
   ATTR6_KEY_CODE='0000000' ,ATTR7_KEY_CODE='0000000' ,ATTR8_KEY_CODE='0000000' ,ATTR9_KEY_CODE='0000000' ,ATTR10_KEY_CODE='0000000' ,
   ATTR11_KEY_CODE='0000000' ,ATTR12_KEY_CODE='0000000' ,ATTR13_KEY_CODE='0000000' ,ATTR14_KEY_CODE='0000000' ,ATTR15_KEY_CODE='0000000' ,
   ATTR16_KEY_CODE='0000000' ,ATTR17_KEY_CODE='0000000' ,ATTR18_KEY_CODE='0000000' ,ATTR19_KEY_CODE='0000000' ,ATTR20_KEY_CODE='0000000' ,
   ATTR21_KEY_CODE='0000000' ,ATTR22_KEY_CODE='0000000' ,ATTR23_KEY_CODE='0000000' ,ATTR24_KEY_CODE='0000000' ,ATTR25_KEY_CODE='0000000' 
   from WSLORD_BUYER_ORDER_DET_UPLOAD a
   WHERE  SP_ID=@NSPID and isnull(ATTR1_KEY_CODE,'')=''

   select * into #tmpSalesOrderProcessing
   from SalesOrderProcessing (nolock) where 1=2

     SELECT @CLOCID=LOCATION_CODE FROM WSLORD_BUYER_ORDER_MST_UPLOAD (nolock) WHERE SP_ID=@NSPID   
	-- UPDATE WSLORD_BUYER_ORDER_mst_UPLOAD SET approved=1 WHERE  SP_ID=@NSPID

	IF ISNULL(@CLOCID,'')=''
		SELECT @CLOCATIONID	= DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
	ELSE
		SELECT @CLOCATIONID=@CLOCID
		
	SELECT @CHODEPTID		= [VALUE] FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'		

	BEGIN TRANSACTION
	
	BEGIN TRY
		
		IF @nUpdatemode=1
			UPDATE WSLORD_BUYER_ORDER_MST_UPLOAD WITH (ROWLOCK) SET fin_year='01'+dbo.FN_GETFINYEAR(order_dt)
			WHERE sp_id=@nSpid AND ISNULL(fin_year,'')=''

		IF ISNULL(@CLOCATIONID,'')=''
		 BEGIN
			SET @CERRORMSG =' LOCATION ID CAN NOT BE BLANK  '  
			GOTO END_PROC    
		 END

		 --barcode update In Buyer Order det Octave
		 if @NUPDATEMODE<>3
		 begin
		     
			 IF NOT EXISTS (SELECT TOP 1 'U' FROM CONFIG_BUYERORDER (NOLOCK) 
			       WHERE COLUMN_NAME IN('ARTICLE_NO','PARA1_NAME','PARA2_NAME') AND OPEN_KEY=0)
			 BEGIN
			      
				UPDATE A SET PRODUCT_CODE=B.PRODUCT_CODE 
				FROM WSLORD_BUYER_ORDER_DET_UPLOAD A (NOLOCK)
				JOIN SKU B (NOLOCK) ON A.ARTICLE_CODE =B.ARTICLE_CODE AND A.PARA1_CODE =B.PARA1_CODE AND A.PARA2_CODE =B.PARA2_CODE 
				WHERE A.PRODUCT_CODE =''  AND CHARINDEX ('@',B.PRODUCT_CODE )=0
				

			 END

		 end
	
		SET @NSTEP = 20

		IF ISNULL(@CXNMEMOID,'') = '' AND @NUPDATEMODE IN (3)
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' MEMO ID REQUIRED '
			GOTO END_PROC  		
		END
		DECLARE @NMODE INT,@CTENDERMODE varchar(100)

		IF @NUPDATEMODE=3 
		   SELECT @NMODE=MODE FROM BUYER_ORDER_MST (nolock) WHERE ORDER_ID=@CXNMEMOID
		ELSE
		  SELECT @NMODE=MODE,@CTENDERMODE=Tendermode FROM WSLORD_BUYER_ORDER_MST_UPLOAD (nolock) WHERE SP_ID=@NSPID

		IF @NMODE=3
		BEGIN
		   set @CKEYFIELDVAL1=@CXNMEMOID
		   EXEC SP3S_VALIDATE_ONLINEORDER @NUPDATEMODE,@NSPID,@CXNMEMOID,@CERRORMSG=@CERRORMSG output
		   IF ISNULL(@CERRORMSG,'')<>''
		   GOTO END_PROC  

		     if isnull(@CTENDERMODE,'')<>''
			   begin
			         SET @NSTEP = 25
					IF NOT EXISTS (SELECT TOP 1 'U' FROM PAYMODE_MST WITH (NOLOCK) WHERE PAYMODE_NAME =@CTENDERMODE)
					BEGIN
				     
						 EXEC SAVETRAN_ONLINEPAYMODE @CTENDERMODE,@CLOCATIONID,@CERRORMSG OUTPUT
						 IF ISNULL(@CERRORMSG,'')<>''
						 GOTO END_PROC  
					END

					IF NOT EXISTS (SELECT TOP 1 'U' FROM PAYMODE_MST WITH (NOLOCK) WHERE PAYMODE_NAME =@CTENDERMODE)
					BEGIN
					    SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' Error In Creating Paymode '
		             	GOTO END_PROC  
					end
			   end


		END

		
		IF @NUPDATEMODE=3
		BEGIN
		
		    IF EXISTS (SELECT TOP 1 'U' FROM BUYER_ORDER_MST A
		    LEFT OUTER JOIN (SELECT DISTINCT A.* FROM PRD_WO_ORDERS A 
		    JOIN PRD_WO_MST B ON A.MEMO_ID =B.MEMO_ID 
		    WHERE B.CANCELLED =0 AND  A.ORDER_ID =@CXNMEMOID) B ON A.ORDER_ID =B.ORDER_ID 
		    WHERE A.ORDER_ID =@CXNMEMOID AND B.ORDER_ID IS NOT NULL
		    )
		    BEGIN
		        SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + 'WORK ORDER HAS GENERATED PLEASE CHECK. '
			    GOTO END_PROC  
		    
		    END
		    
		    IF EXISTS (SELECT TOP 1 'U' FROM BUYER_ORDER_MST A
		    LEFT OUTER JOIN (SELECT DISTINCT ISNULL(A.ORDER_ID,'') AS ORDER_ID  FROM PRD_UPCPMT  A 
		    JOIN PRD_WO_MST B ON A.WO_ID  =B.MEMO_ID 
		    WHERE B.CANCELLED =0 AND  ISNULL(A.ORDER_ID,'') =@CXNMEMOID) B ON A.ORDER_ID =B.ORDER_ID 
		    WHERE A.ORDER_ID =@CXNMEMOID AND B.ORDER_ID IS NOT NULL
		    )
		    BEGIN
		        SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + 'UNIQUE PRODUCT_CODE HAS GENERATED PLEASE CHECK. '
			    GOTO END_PROC  
		    
		    END
		    
		
			SET @NSTEP = 30		
			SET @CCMD=N' UPDATE BUYER_ORDER_MST SET CANCELLED=1,LAST_UPDATE=GETDATE() WHERE ORDER_ID='''+@CXNMEMOID+''''
			EXEC SP_EXECUTESQL @CCMD
			
			EXEC SP3S_CAPTURE_AUDIT_TRAIL 'BO',@CXNMEMOID,@CTEMPMASTERTABLE,@CTEMPDETAILTABLE1,@NSPID,@CMACHINENAME,@CWINDOWUSERNAME,@CWIZAPPUSERCODE,1,'1900-01-01',@EDIT_CLICKED
			
			INSERT INTO #tmpSalesOrderProcessing(XnType,Memoid,RefMemoid,ArticleCode ,Para1Code ,Para2Code ,Para3Code,Qty  )
			SELECT @SalesOrderXnType XnType ,A.ORDER_ID Memoid,A.ORDER_ID RefMemoid,  B.ARTICLE_CODE,
			      (CASE WHEN ISNULL(SOPARA1,0)=0 THEN '0000000' ELSE b.PARA1_CODE END ) as Para1_code,
			      (CASE WHEN ISNULL(SOPARA2,0)=0 THEN '0000000' ELSE b.PARA2_CODE END ) as PARA2_CODE ,
			      (CASE WHEN ISNULL(SOPARA3,0)=0 THEN '0000000' ELSE b.PARA3_CODE END ) as PARA3_CODE ,
			-1*sum(B.QUANTITY)   
			FROM BUYER_ORDER_MST A (nolock)
			JOIN BUYER_ORDER_DET B (nolock) ON A.ORDER_ID =B.ORDER_ID 
			JOIN ARTICLE ART (NOLOCK) ON b.article_code  =ART.ARTICLE_CODE 
			JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE =ART.SUB_SECTION_CODE 
			WHERE A.ORDER_ID =@CXNMEMOID
			group by A.ORDER_ID ,A.ORDER_ID ,  B.ARTICLE_CODE,
			(CASE WHEN ISNULL(SOPARA1,0)=0 THEN '0000000' ELSE b.PARA1_CODE END ) ,
			(CASE WHEN ISNULL(SOPARA2,0)=0 THEN '0000000' ELSE b.PARA2_CODE END )  ,
			(CASE WHEN ISNULL(SOPARA3,0)=0 THEN '0000000' ELSE b.PARA3_CODE END )  
			

			

			Exec Sp3s_SalesOrderProcessing_Wbo
			     @nUpdateMode=@nUpdateMode,
				 @cmemoid=@CXNMEMOID,
				 @SalesOrderXnType=@SalesOrderXnType,
				 @CERRORMSG=@CERRORMSG output 

			GOTO END_PROC
		END
		ELSE
		IF @NUPDATEMODE=4
		BEGIN
				SET @NSTEP = 32

				--in shortclose xntype will be
				set @SalesOrderXnType='OrderShortClose'

				--IF EXISTS(SELECT TOP 1 BOX_NO FROM BUYER_ORDER_DET  (NOLOCK) WHERE order_id=@CXNMEMOID AND BOX_NO=LTRIM(RTRIM(STR(@NBOXNO)))) and 1=2--discarded
				--BEGIN

				
				--	SET @NSTEP = 34 									
				--	SET @CCMD = N'DELETE FROM BUYER_ORDER_DET WITH (ROWLOCK) WHERE order_id = ''' +@CXNMEMOID + ''' AND
				--				  BOX_NO='+LTRIM(RTRIM(STR(@NBOXNO)))
				--	print @CCMD			  
				--	EXEC SP_EXECUTESQL @CCMD

				
				--END
				--ELSE
				--BEGIN
				--	SET @CERRORMSG='INVALID BOX NO. PROVIDED.....PLEASE CHECK'
				--	GOTO END_PROC
				--END	
			END		

		
		SET @NSTEP = 40
		
		--GETTING DEPT_ID FROM TEMP MASTER TABLE
		SET @CCMD = 'SELECT @CMEMODEPTID = DEPT_ID, @CKEYFIELDVAL1 = ORDER_ID FROM ' + @CTEMPMASTERTABLE +' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
		EXEC SP_EXECUTESQL @CCMD, N'@CMEMODEPTID VARCHAR(4) OUTPUT, @CKEYFIELDVAL1 VARCHAR(50) OUTPUT', 
								  @CMEMODEPTID OUTPUT, @CKEYFIELDVAL1 OUTPUT
		IF (@CMEMODEPTID IS NULL)
		BEGIN
			  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE SAVED...'
			  GOTO END_PROC  		
		END


		--IF @NUPDATEMODE=2 AND (@NBOXUPDATEMODE>=1 )
		--BEGIN
		--	SET @NSTEP = 42
		--	DECLARE @cUploadTableName VARCHAR(200),@CFILTERCONDITION varchar(300),@CINSSPID VARCHAR(50)

		--	SELECT @cUploadTableName='WSLORD_BUYER_ORDER_DET_UPLOAD'
		--	SET @CFILTERCONDITION=' b.order_id='''+@CKEYFIELDVAL1+''''+
		--	(CASE WHEN @NBOXUPDATEMODE=2 THEN ' AND box_no<>'''+ltrim(rtrim(str(@nBoxNo)))+'''' ELSE '' END)		
			
		--	print 'Do not chnage below code as it handles Scenario mentioned as prt#1 in File doc_scenarios'
		--	set @CINSSPID=LEFT(@nSpId,38)+'ZZZ'
		--	SET @BBYPASSDETINSERT=1
		--	EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB='',@CSOURCETABLE='BUYER_ORDER_DET',@CDESTDB=''
		--							,@CDESTTABLE=@cUploadTableName,@CKEYFIELD1='inv_id',@CKEYFIELD2='',@CKEYFIELD3=''
		--							,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
		--							,@BALWAYSUPDATE=0,@BUPDATEXNS=1,@CINSSPID=@CINSSPID,@CINSSPIDCol=''
		--							,@CSEARCHTABLE='BUYER_ORDER_DET',@cXnType='WSLORD'
		--	print 'enter extra ind entry inserted'
		--END		


		SET @CKEYSTABLE='KEYS_WSLORD_'+LTRIM(RTRIM(@CLOCATIONID))

		-- START UPDATING XN TABLES	
		IF @NUPDATEMODE = 1 -- ADDMODE	
		BEGIN	
			SET @NSTEP = 50		-- GENERATING NEW KEY
			
			IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
			BEGIN
			
				-- GENERATING NEW MRR_NO		
				SET @NSAVETRANLOOP=0
				WHILE @NSAVETRANLOOP=0
				BEGIN

					--EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,
					--				@CFINYEAR,0, @CMEMONOVAL OUTPUT   

				EXEC GETNEXTKEY_XNS @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,
								@CFINYEAR,0, @CKEYSTABLE,@CMEMONOVAL OUTPUT   
					
					SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+' 
											WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' 
											AND FIN_YEAR = '''+@CFINYEAR+''' )
									SET @NLOOPOUTPUT=0
								ELSE
									SET @NLOOPOUTPUT=1'
					PRINT @CCMD
					EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
				END

				IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'	
					  GOTO END_PROC  		
				END

				SET @NSTEP = 60		-- GENERATING NEW ID

				-- GENERATING NEW ORDER ID
				SET @CKEYFIELDVAL1 = @CLOCATIONID + RIGHT(@CFINYEAR,2)+REPLICATE('0', (22-LEN(@CLOCATIONID + RIGHT(@CFINYEAR,2)))-LEN(LTRIM(RTRIM(@CMEMONOVAL))))  + LTRIM(RTRIM(@CMEMONOVAL))
				
				IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
					  GOTO END_PROC
				END
				
				SET @NSTEP = 70
				-- CHECK WETHER THE MEMO ID IS STILL LATER
				IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'
					  GOTO END_PROC
				END

				SET @NSTEP = 80		-- UPDATING NEW ID INTO TEMP TABLES

				-- UPDATING NEWLY GENERATED MEMO NO AND MEMO ID IN BUYER ORDER MST AND BUYER ORDER DET TEMP TABLES
				SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' + 
							@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
				PRINT @CCMD		
				EXEC SP_EXECUTESQL @CCMD
				
				
				SET @NSTEP = 100
				SET @CCMD = N'UPDATE '+ @CTEMPDETAILTABLE1 + ' SET ROW_ID = NEWID() WHERE LEFT(ROW_ID,5) = ''LATER'' AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
				PRINT @CCMD	
				EXEC SP_EXECUTESQL @CCMD



			 END
		END					-- END OF ADDMODE
		ELSE				-- CALLED FROM EDITMODE
		BEGIN				-- START OF EDITMODE
			SET @NSTEP = 110		-- GETTING ID INFO FROM TEMP TABLE
			
			-- GETTING ORDER_ID WHICH IS BEING EDITED
			SET @CCMD = 'SELECT @CKEYFIELDVAL1 = ORDER_ID, @CMEMONOVAL = ORDER_NO FROM ' + @CTEMPMASTERTABLE +' WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			EXEC SP_EXECUTESQL @CCMD, N'@CKEYFIELDVAL1 VARCHAR(50) OUTPUT, @CMEMONOVAL VARCHAR(50) OUTPUT', 
							   @CKEYFIELDVAL1 OUTPUT, @CMEMONOVAL OUTPUT
			IF (@CKEYFIELDVAL1 IS NULL ) OR (@CMEMONOVAL IS NULL )
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'
				  GOTO END_PROC  		
			END
			
			SET @NSTEP = 120		-- UPDATING SENT_TO_HO FLAG TEMP TABLE
			
			SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE LEFT(ORDER_ID,5) = ''LATER'' AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			PRINT @CCMD	
			EXEC SP_EXECUTESQL @CCMD
			
			SET @NSTEP = 122
			SET @CCMD = N'UPDATE '+ @CTEMPDETAILTABLE1 + ' SET ROW_ID = NEWID() WHERE LEFT(ROW_ID,5) = ''LATER'' AND SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''
			PRINT @CCMD	
			EXEC SP_EXECUTESQL @CCMD
			
			SET @NSTEP = 125

		--if (isnull(@nBoxUpdatemode,0)<>1 and @NUPDATEMODE =2 )
		-- begin

		--      INSERT INTO #tmpSalesOrderProcessing(XnType,Memoid,RefMemoid,ArticleCode ,Para1Code ,Para2Code ,Para3Code,Qty  )
		--		SELECT @SalesOrderXnType XnType ,A.ORDER_ID Memoid,A.ORDER_ID RefMemoid,  B.ARTICLE_CODE,B.PARA1_CODE ,B.PARA2_CODE ,B.PARA3_CODE ,-1*B.QUANTITY   
		--		FROM BUYER_ORDER_MST A (nolock)
		--		JOIN BUYER_ORDER_DET B (nolock) ON A.ORDER_ID =B.ORDER_ID 
		--		WHERE A.ORDER_ID =@CKEYFIELDVAL1

		-- end
			
			--IF NOT EXISTS (SELECT TOP 1 'U'  FROM BUYER_ORDER_BARCODE_DET WHERE  ORDER_ID = @CKEYFIELDVAL1)
			--DELETE FROM BUYER_ORDER_DET WHERE ORDER_ID = @CKEYFIELDVAL1 --CHANGES THROUGH OPTIMIZED NO NEED TO DELETE
			
	    END					-- END OF EDITMODE
		
		IF @nUpdatemode=2
		BEGIN
			DECLARE @cConfigCols VARCHAR(1000),@cColList VARCHAR(1000)

			SET @NSTEP = 127
			IF EXISTS (SELECT TOP 1 row_id FROM WSLORD_BUYER_ORDER_DET_UPLOAD (NOLOCK) WHERE 
					   sp_id=@nSpId AND (quantity<inv_qty OR quantity<pl_qty))
			BEGIN

				
				EXEC SP3S_GETWSLORD_DYNAMICEXPR
				@nMode=1,
				@cRetExpr=@cColList OUTPUT

			

				SET @NSTEP = 132
				SET @cCmd=N'SELECT ''Effective Order quantity cannot be less than ''+
				(CASE WHEN quantity<inv_qty 
				THEN ''invoice quantity'' else ''Pick List Qty'' END) AS errmsg,'+@cColList+', 
				quantity order_qty,inv_qty,pl_qty FROM 
				WSLORD_BUYER_ORDER_DET_UPLOAD a (NOLOCK)
				left JOIN article c (NOLOCK) ON a.article_code=c.article_code
				left JOIN sectiond d (NOLOCK) ON a.sub_section_code=d.sub_section_code
				left JOIN sectionm e (NOLOCK) ON a.section_code=e.section_code
				left JOIN para1 p1 (NOLOCK) ON a.para1_code=p1.para1_code
				left JOIN para2 p2 (NOLOCK) ON a.para1_code=p2.para2_code
				left JOIN para3 p3 (NOLOCK) ON a.para1_code=p3.para3_code
				left JOIN para4 p4 (NOLOCK) ON a.para1_code=p4.para4_code
				left JOIN para5 p5 (NOLOCK) ON a.para1_code=p5.para5_code
				left JOIN para6 p6 (NOLOCK) ON a.para1_code=p6.para6_code
				WHERE sp_id='''+LTRIM(RTRIM(STR(@NSPID)))+''' AND (quantity<inv_qty OR quantity<pl_qty)'

				PRINT @cCmd
				
				EXEC SP_EXECUTESQL @cCmd
			

				SET @bOrderQtyValidationFailed=1
				GOTO END_PROC
			END
		END



		SET @NSTEP = 134
		SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE1 + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' 
					  WHERE SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''' AND isnull(order_id,'''')<>'''+@CKEYFIELDVAL1+''''
		PRINT @CCMD	
		EXEC SP_EXECUTESQL @CCMD

		IF @bCalledFromAro=1
		BEGIN
			SET @NSTEP = 136
			IF EXISTS (SELECT TOP 1 sp_id FROM wsl_item_details WITH (NOLOCK) WHERE sp_id=@nSpId)
				DELETE FROM wsl_item_details WITH (ROWLOCK) WHERE sp_id=@nSpId
			
			SET @NSTEP = 138
			INSERT INTO wsl_item_details (sp_id,product_code,article_code,PARA1_CODE,para2_code,para3_code,para4_code,
			para5_code,para6_code)
			SELECT @nSpId,product_code,article_code,PARA1_CODE,para2_code,para3_code,para4_code,
			para5_code,para6_code FROM WSLORD_BUYER_ORDER_DET_UPLOAD (NOLOCK)
			WHERE sp_id=@nSpId

			SET @NSTEP = 140
			SELECT TOP 1 @cSourceLocId=WBO_FOR_DEPT_ID,@cTargetLocId=dept_id FROM  WSLORD_BUYER_ORDER_MST_UPLOAD (NOLOCK)
			WHERE sp_id=@nSpId

			DECLARE @tAroRate TABLE (errmsg VARCHAR(MAX))

			INSERT INTO @tAroRate (errmsg)
			EXEC SP3S_APPLY_PARTY_RATE_WSLORD_DYNAMIC
		    @NSPID=@nspid,
		    @cSourceLocId=@cSourceLocId,
		    @cTargetLocId=@cTargetLocId,
		    @bCalledFromAro=1

			SELECT TOP 1 @CERRORMSG=errmsg FROM @tAroRate
			IF ISNULL(@CERRORMSG,'')<>''
				GOTO end_proc

			DECLARE @cJoinstr VARCHAR(2000)

			SET @NSTEP = 142

			EXEC SP3S_GETWSLORD_DYNAMICEXPR
			@nMode=2,
			@cRetExpr=@cJoinstr OUTPUT
			
			--select 'check wslitem',rate,net_rate, PARTY_RATE_BASE_PRICE,article_code, * from wsl_item_details where sp_id=@nSpid

			SET @NSTEP = 144
			SET @cCmd=N'UPDATE b SET gross_wsp=c.rate,ws_price=c.net_rate,discount_percentage=c.discount_percentage,
						discount_amount=round(c.rate*c.discount_percentage/100,2) FROM WSLORD_BUYER_ORDER_DET_UPLOAD b WITH (ROWLOCk)
						JOIN wsl_item_details c (NOLOCK) ON '+@cJoinStr+' AND b.sp_id=ltrim(rtrim(str(c.sp_id)))
						WHERE b.sp_id='+ltrim(rtrim(@nspid))
			print @cCmd
			EXEC SP_EXECUTESQL @cCmd


		END


		--CHANGES THROUGH BOX UPDATE MODE

	       
			IF @nBoxUpdatemode<>1 AND @bCalledFromAro=0  AND @NUPDATEMODE =2
			BEGIN
				
					IF isnull(@CArticleCode,'')<>''
					BEGIN		

						DELETE a FROM BUYER_ORDER_DET A WITH (ROWLOCK) 
						WHERE A.order_id =@cKeyfieldval1  and a.article_code =@CArticleCode 
					END 
					ELSE
					BEGIN
						SELECT TOP 1 @cMissingRowId=a.row_id FROM BUYER_ORDER_DET A (NOLOCK) 
						LEFT JOIN 
						(SELECT row_id FROM WSLORD_BUYER_ORDER_DET_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId) b
							ON A.row_ID =B.row_ID 
						WHERE A.ORDER_ID =@cKeyfieldval1 and (@NBOXUPDATEMODE=0 OR box_no=@NBOXNO) AND b.row_id IS NULL


		
						IF ISNULL(@cMissingRowId,'')<>'' and isnull(@CArticleCode,'')=''
						BEGIN		

							DELETE a FROM BUYER_ORDER_DET A WITH (ROWLOCK) 
							LEFT JOIN 
							(SELECT row_id FROM WSLORD_BUYER_ORDER_DET_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId) b
								ON A.row_ID =B.row_ID 
							WHERE A.order_id =@cKeyfieldval1  and (@NBOXUPDATEMODE=0 OR box_no=@NBOXNO) AND b.row_id IS NULL
						END 
					END
			END		


			--END OF CHNAGING Required from update box mode


		
	  	DECLARE @CWHERECLAUSE VARCHAR(1000)
        SET @CWHERECLAUSE = ' SP_ID='''+LTRIM(RTRIM(STR(@NSPID)))+''''

		SET @NSTEP = 145
		SET @CCMD=N'UPDATE A SET AC_CODE=B.DEPT_AC_CODE FROM '+@CTEMPMASTERTABLENAME+' A
				   	JOIN LOCATION B ON A.DEPT_ID=B.DEPT_ID
				   	WHERE A.AC_CODE IN ('''',''0000000000'') AND '+@CWHERECLAUSE
		EXEC SP_EXECUTESQL @CCMD	
		
		SET @NSTEP = 146
		SET @CCMD=N'UPDATE A SET OTHER_CHARGES_HSN_CODE=''0000000000'' FROM '+@CTEMPMASTERTABLENAME+' A
				  WHERE ISNULL(OTHER_CHARGES_HSN_CODE,'''')='''' AND  '+@CWHERECLAUSE
		EXEC SP_EXECUTESQL @CCMD	
		SET @NSTEP = 148
		
		SET @CCMD=N'UPDATE A SET PARTY_STATE_CODE=''00'' FROM '+@CTEMPMASTERTABLENAME+' A
				  WHERE ISNULL(PARTY_STATE_CODE,'''')='''' AND  '+@CWHERECLAUSE
		EXEC SP_EXECUTESQL @CCMD	
        SET @NSTEP = 149
        
		SET @CCMD=N'UPDATE A SET HSN_CODE=''0000000000'' FROM '+@CTEMPDETAILTABLE1+' A
				  WHERE ISNULL(HSN_CODE,'''')='''' AND  '+@CWHERECLAUSE
		EXEC SP_EXECUTESQL @CCMD	



		IF @NUPDATEMODE=2
		BEGIN
			

	
			IF EXISTS (SELECT TOP 1 tablename FROM savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nSpId)
				DELETE FROM savetran_updcols_updatestr WITH (ROWLOCK) WHERE sp_id=@nSpId


				SET @NSTEP = 252
			INSERT savetran_updcols_updatestr (sp_id,tablename,updatestr)
			SELECT @nSpId as sp_id,tablename,'' from mirrorxnsinfo (NOLOCK)
			WHERE tablename IN ('BUYER_ORDER_MST','BUYER_ORDER_det')

			SET @NSTEP = 255		-- SETTTING UP ENVIRONMENT
		
			EXEC SP3S_VERIFY_WSLORDDATA_CHANGES
			@cMemoId=@CKEYFIELDVAL1,
			@nSpId=@nSpId,
			@BBYPASSDETINSERT=@BBYPASSDETINSERT,
			@bCalledfromSavetran=1
					
		END


		SET @NSTEP = 260

		SELECT @LUPDATEONLY=0,@cUpdatestr=''
		
		IF @NUPDATEMODE=2 
		BEGIN
			SELECT @cUpdatestr=updatestr FROM savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nSpId and tablename='BUYER_ORDER_MST'
			SET @LUPDATEONLY = 1
		END
	
	SET @NSTEP = 265

    	EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPMASTERTABLENAME
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CMASTERTABLENAME
			, @CKEYFIELD1	= @CKEYFIELD1
			, @BALWAYSUPDATE = 1
			, @CFILTERCONDITION=@cWhereClause
			, @cUpdatestrPara=@cUpdatestr
			, @LUPDATEONLY = @LUPDATEONLY
			, @bThruUpdatestrPara=1 
			, @LINSERTONLY =  @BINSERTONLY
			, @LUPDATEXNS =  @BINSERTONLY


			SET @NSTEP = 270
	
			SElect @LUPDATEONLY=0,@cUpdatestr=''
			
				
			SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nSpId and  tablename='BUYER_ORDER_DET'

			IF @NUPDATEMODE=2 AND @NBOXUPDATEMODE<>1 AND @bCalledFromAro=0
			BEGIN
			
				SELECT TOP 1 @cMissingRowId=b.row_id FROM 
				(SELECT row_id  FROM WSLORD_BUYER_ORDER_DET_UPLOAD (NOLOCK) WHERE SP_id=(LEFT(@nSpId,38)+@cLocationId)) A
				RIGHT OUTER JOIN 
				(SELECT row_id FROM WSLORD_BUYER_ORDER_DET_UPLOAD (NOLOCK) WHERE SP_id=@nSPId) b ON 
				a.row_id=b.row_id WHERE a.row_id IS NULL

				IF ISNULL(@cMissingRowId,'')='' 
					SET @lUpdateonly=1
			END

		   SET @NSTEP = 280
			
			DECLARE @CWHERECLAUSEUpdate VARCHAR(500)
			SET @CWHERECLAUSEUpdate = '' 

			IF @NBOXUPDATEMODE=1 
				SET @bUpdateXns=1

	
			EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN
				  @CSOURCEDB	= @CTEMPDBNAME
				, @CSOURCETABLE = @CTEMPDETAILTABLENAME1
				, @CDESTDB		= ''
				, @CDESTTABLE	= @CDETAILTABLENAME1
				, @CKEYFIELD1	= 'ROW_ID'
				, @BALWAYSUPDATE = 1
				, @LINSERTONLY =  @BINSERTONLY
				, @LUPDATEXNS =   @bUpdateXns
				, @lUpdateonly = @lUpdateonly
				, @CFILTERCONDITION=@CWHERECLAUSE
				, @cUpdatestrPara=@cUpdatestr
				, @bThruUpdatestrPara=1 
				, @CFILTERCONDITIONUpdate = @CWHERECLAUSEUpdate

            SET @NSTEP = 285
      
	        if @NUPDATEMODE in(1,2)
			begin

				
				INSERT INTO #tmpSalesOrderProcessing(XnType,Memoid,RefMemoid,ArticleCode ,Para1Code ,Para2Code ,Para3Code,Qty  )
				SELECT @SalesOrderXnType XnType ,A.ORDER_ID Memoid,A.ORDER_ID RefMemoid,  B.ARTICLE_CODE,
				(CASE WHEN ISNULL(SOPARA1,0)=0 THEN '0000000' ELSE b.PARA1_CODE END ) as Para1_code,
			    (CASE WHEN ISNULL(SOPARA2,0)=0 THEN '0000000' ELSE b.PARA2_CODE END ) as PARA2_CODE ,
			    (CASE WHEN ISNULL(SOPARA3,0)=0 THEN '0000000' ELSE b.PARA3_CODE END ) as PARA3_CODE ,
				  sum(B.QUANTITY)   
				FROM BUYER_ORDER_MST A (nolock)
				JOIN BUYER_ORDER_DET B (nolock) ON A.ORDER_ID =B.ORDER_ID 
				JOIN ARTICLE ART (NOLOCK) ON b.ARTICLE_CODE =ART.ARTICLE_CODE 
				JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE =ART.SUB_SECTION_CODE 
				WHERE A.ORDER_ID =@cKeyfieldval1
				group by A.ORDER_ID ,A.ORDER_ID ,  B.ARTICLE_CODE,
				(CASE WHEN ISNULL(SOPARA1,0)=0 THEN '0000000' ELSE b.PARA1_CODE END ) ,
			    (CASE WHEN ISNULL(SOPARA2,0)=0 THEN '0000000' ELSE b.PARA2_CODE END ) ,
			    (CASE WHEN ISNULL(SOPARA3,0)=0 THEN '0000000' ELSE b.PARA3_CODE END )
               
			
				if exists (select  Top 1 'u'  from #tmpSalesOrderProcessing group by XnType,Memoid,RefMemoid,ArticleCode ,Para1Code ,Para2Code ,Para3Code
				having sum(Qty)<>0)
				begin
				 SET @NSTEP = 286
				   Exec Sp3s_SalesOrderProcessing_Wbo
					 @nUpdateMode=@nUpdateMode,
					 @cmemoid=@CKEYFIELDVAL1,
					 @SalesOrderXnType=@SalesOrderXnType,
					 @CERRORMSG=@CERRORMSG output 

					if isnull(@CERRORMSG,'')<>''
					 goto END_PROC

				END

			  End

			
	
			DECLARE @CCALCULATE_GST_ON_WSLORD VARCHAR(10),@NTAX NUMERIC(14,4),@Ngstcessamount NUMERIC(14,4),@STR varchar(1000)
			
			  SELECT  @STR =  COALESCE(@STR +  '/ ', ' ') + (''+C.UOM_NAME+': '+
			    CAST(SUM(QUANTITY) AS VARCHAR) +' ')  
			   FROM BUYER_ORDER_DET A  (NOLOCK)
			   JOIN ARTICLE B (NOLOCK) ON a.ARTICLE_CODE=B.ARTICLE_CODE
			   JOIN UOM C ON C.UOM_CODE=B.UOM_CODE
			    WHERE ORDER_ID = @CKEYFIELDVAL1  
			   GROUP BY C.UOM_NAME 

			
		
	
			  UPDATE A SET   SUBTOTAL=CASE WHEN ISNULL(A.SUBTOTAL,0) =0 THEN B.SUBTOTAL ELSE A.SUBTOTAL END,
			                 TOTAL_QUANTITY=B.TOTAL_QUANTITY,
							 TOTAL_QUANTITY_STR=isnull(@STR,'')
			  FROM BUYER_ORDER_MST A  (NOLOCK) 
			  JOIN  
			  (    
				   SELECT ORDER_ID, SUM(ROUND(WS_PRICE *QUANTITY,2)) AS SUBTOTAL ,
				          sum(quantity) as total_quantity
				   FROM BUYER_ORDER_DET  (NOLOCK)   
				   WHERE ORDER_ID = @CKEYFIELDVAL1  
				   GROUP BY ORDER_ID    
			  ) B ON  A.ORDER_ID = B.ORDER_ID
			  WHERE A.ORDER_ID=@CKEYFIELDVAL1



		SELECT TOP 1 @CCALCULATE_GST_ON_WSLORD=VALUE FROM CONFIG WHERE CONFIG_OPTION ='CALCULATE_GST_ON_WSLORD'
		
		
		IF ISNULL(@CCALCULATE_GST_ON_WSLORD,'')='1'
		BEGIN	
			DECLARE @BGSTBILL BIT,@CGSTCUTOFFDATE VARCHAR(20),@DORDER_DT DATETIME
	        SELECT @CGSTCUTOFFDATE=VALUE FROM CONFIG WHERE CONFIG_OPTION ='GST_CUT_OFF_DATE'
	        
	        SELECT @DORDER_DT=ORDER_DT  FROM BUYER_ORDER_MST WHERE ORDER_ID =@CKEYFIELDVAL1
			SET @BGSTBILL=0
	
			
			IF @DORDER_DT>=CONVERT(DATE,@CGSTCUTOFFDATE)
				SET @BGSTBILL=1
	
			
			IF (@BGSTBILL=1 OR ISNULL(@CGSTCUTOFFDATE,'')='')
			BEGIN
			
				SET @NSTEP=188
				DECLARE @NOC NUMERIC(10,2)
				DELETE FROM GST_TAXINFO_CALC WITH (ROWLOCK) WHERE SP_ID=RTRIM(LTRIM(STR(@NSPID)))
				DELETE FROM GST_TAXINFO_CALC_OH  WITH (ROWLOCK) WHERE SP_ID=RTRIM(LTRIM(STR(@NSPID)))
				
				DECLARE @CPARTY_GSTN_NO VARCHAR(20),@BREGISTERED INT,@CPARTYSTATECODE CHAR(2),
				@BGROUPINV INT
				
				SELECT TOP 1 @BGROUPINV=INV_MODE ,@NOC=OTHER_CHARGES
				FROM BUYER_ORDER_MST 
				 WHERE ORDER_ID=@CKEYFIELDVAL1	
				
				
				IF (ISNULL(@NOC,0))<>0
					INSERT GST_TAXINFO_CALC_OH	( SP_ID,OTHER_CHARGES,OH_TAX_METHOD ,DO_NOT_CALC_GST_OH)
					SELECT @NSPID,OTHER_CHARGES,2 AS OH_TAX_METHOD,0 AS DO_NOT_CALC_GST_OH 
					FROM BUYER_ORDER_MST 
					WHERE ORDER_ID =@CKEYFIELDVAL1	
				
	
				
				
					SELECT @CPARTY_GSTN_NO=(CASE WHEN INV_MODE=2 THEN l.loc_gst_no ELSE  AC_GST_NO END),
					@BREGISTERED=(CASE WHEN INV_MODE=2 THEN ISNULL(L.REGISTERED_GST,0) ELSE  ISNULL(A.REGISTERED_GST_DEALER,0) END) ,
					@CPARTYSTATECODE=(CASE WHEN INV_MODE=2 THEN l.gst_state_code ELSE A.AC_GST_STATE_CODE END)
					FROM BUYER_ORDER_MST B WITH (NOLOCK)
					LEFT JOIN LMP01106 A (NOLOCK) ON A.AC_CODE=B.AC_CODE
	                LEFT JOIN LOCATION L (NOLOCK) ON L.DEPT_ID=B.dept_id
					WHERE ORDER_ID =@CKEYFIELDVAL1		
	              
				
				
				
				UPDATE A SET PARTY_STATE_CODE=@CPARTYSTATECODE FROM  BUYER_ORDER_MST A
				WHERE ORDER_ID=@CKEYFIELDVAL1	
				
				INSERT GST_TAXINFO_CALC	WITH (ROWLOCK) ( PRODUCT_CODE, SP_ID ,NET_VALUE,TAX_METHOD,ROW_ID,QUANTITY,
				TARGET_DEPT_ID,SOURCE_DEPT_ID,MRP,HSN_CODE,PARTY_GSTN_NO )  
				SELECT '' AS PRODUCT_CODE,@NSPID AS SP_ID,
				ROUND(((A.WS_PRICE *A.QUANTITY)),2) AS NET_VALUE
				--,ISNULL(B.GST_CAL_METHOD,0) AS TAX_METHOD,
				,b.GST_CAL_METHOD,
				ROW_ID,A.QUANTITY,B.DEPT_ID ,B.WBO_FOR_DEPT_ID,ART .MRP,
				CASE WHEN ISNULL(A.HSN_CODE,'') IN('','0000000000') THEN  ART.HSN_CODE  ELSE A.HSN_CODE END,
				@CPARTY_GSTN_NO as party_gst_no
				FROM BUYER_ORDER_DET  A
				JOIN BUYER_ORDER_MST  B ON A.ORDER_ID =B.ORDER_ID 
				JOIN ARTICLE ART ON ART.ARTICLE_CODE =A.ARTICLE_CODE
				WHERE A.ORDER_ID=@CKEYFIELDVAL1

				DECLARE @BENABLEDGSTCALCULATION BIT
				SET @BENABLEDGSTCALCULATION=0

				IF EXISTS (SELECT TOP 1 'U' FROM BUYER_ORDER_DET WHERE ORDER_ID=@CKEYFIELDVAL1 AND (PRODUCT_CODE <>'' OR ISNULL(ARTICLE_CODE,'') NOT IN('','00000000 ')))
				   SET @BENABLEDGSTCALCULATION=1

				IF ISNULL(@BREGISTERED,0)=1 AND ISNULL(@BENABLEDGSTCALCULATION,0)=1
				BEGIN
				    
					EXEC SP3S_GST_TAX_CAL
					@CXN_TYPE='WSLORD',
					@CMEMO_ID='',
					@DMEMO_DT=@DORDER_DT,
					@NSPID=@NSPID,
					@CPARTYSTATE_CODE=@CPARTYSTATECODE,
					@BPARTYREGISTERED=@BREGISTERED,
					@CPARTY_GSTN_NO=@CPARTY_GSTN_NO,
					@CERRMSG=@CERRORMSG OUTPUT,
				    @cLocationId=@CLOCATIONID
				 
					IF ISNULL(@CERRORMSG,'')<>''
						 GOTO END_PROC
				END
				ELSE
				BEGIN

					  UPDATE A SET HSN_CODE='0000000000',GST_PERCENTAGE=0,IGST_AMOUNT=0,
					  CGST_AMOUNT=0,SGST_AMOUNT=0,
					  XN_VALUE_WITHOUT_GST=A.NET_VALUE,XN_VALUE_WITH_GST=A.NET_VALUE ,
					  Gst_Cess_Percentage =0,
					  Gst_Cess_Amount =0   
					  FROM GST_TAXINFO_CALC A
					  WHERE SP_ID=RTRIM(LTRIM(STR(@NSPID)))
					  
					   UPDATE A SET OTHER_CHARGES_TAXABLE_VALUE=ISNULL(OTHER_CHARGES,0),
								   OTHER_CHARGES_GST_AMOUNT=0
					  FROM GST_TAXINFO_CALC_OH A
					  WHERE SP_ID=RTRIM(LTRIM(STR(@NSPID)))
				
				END
				  
				SET @NSTEP=195
				
				UPDATE BUYER_ORDER_DET  WITH (ROWLOCK) SET HSN_CODE=B.HSN_CODE,GST_PERCENTAGE=B.GST_PERCENTAGE,IGST_AMOUNT=B.IGST_AMOUNT,
				CGST_AMOUNT=B.CGST_AMOUNT,SGST_AMOUNT=B.SGST_AMOUNT,
				XN_VALUE_WITHOUT_GST=B.XN_VALUE_WITHOUT_GST,XN_VALUE_WITH_GST=B.XN_VALUE_WITH_GST,
				Gst_Cess_Percentage =b.Gst_Cess_Percentage,
				Gst_Cess_Amount =b.Gst_Cess_Amount   
				FROM GST_TAXINFO_CALC B WHERE B.ROW_ID=BUYER_ORDER_DET.ROW_ID	AND BUYER_ORDER_DET.ORDER_ID =@CKEYFIELDVAL1
				AND B.SP_ID=RTRIM(LTRIM(STR(@NSPID)))
				
				SET @NSTEP=200
				
				
				
				UPDATE A SET  
				OTHER_CHARGES_HSN_CODE=ISNULL(B.OTHER_CHARGES_HSN_CODE,'0000000000'),
				OTHER_CHARGES_GST_PERCENTAGE=ISNULL(B.OTHER_CHARGES_GST_PERCENTAGE,0),
				OTHER_CHARGES_TAXABLE_VALUE=B.OTHER_CHARGES_TAXABLE_VALUE,
				OTHER_CHARGES_IGST_AMOUNT=(CASE WHEN ISNULL(ISIGST,0)=1 THEN B.OTHER_CHARGES_GST_AMOUNT ELSE 0 END),
				OTHER_CHARGES_CGST_AMOUNT=(CASE WHEN ISNULL(ISIGST,0)=0 THEN B.OTHER_CHARGES_GST_AMOUNT/2 ELSE 0 END),
				OTHER_CHARGES_SGST_AMOUNT=(CASE WHEN ISNULL(ISIGST,0)=0 THEN B.OTHER_CHARGES_GST_AMOUNT/2 ELSE 0 END)
				
				FROM BUYER_ORDER_MST A WITH (ROWLOCK)
				LEFT OUTER JOIN
				(SELECT @CKEYFIELDVAL1	AS ORDER_ID,* FROM  GST_TAXINFO_CALC_OH (NOLOCK) WHERE SP_ID=RTRIM(LTRIM(STR(@NSPID)))) B ON A.ORDER_ID=B.ORDER_ID
				WHERE A.ORDER_ID =@CKEYFIELDVAL1	
				
				
				
				
			END ---- END OF IF @BGSTBILL=1
			
			EXEC SP3S_REPROCESS_GST_CALCULATION
		    @CMEMOID=@CKEYFIELDVAL1,
			@CXNTYPE='WSLORD',
			@CERRORMSG=@CERRORMSG OUTPUT
			
		
		
		SELECT @NTAXFLAG=GST_CAL_METHOD FROM BUYER_ORDER_MST  WITH (ROWLOCK)
		WHERE ORDER_ID =@CKEYFIELDVAL1
		SELECT @NTAX=SUM(ISNULL(IGST_AMOUNT,0)+ISNULL(CGST_AMOUNT,0)+ISNULL(SGST_AMOUNT,0)),
		       @Ngstcessamount=SUM(ISNULL(GST_cess_amount,0))
		FROM  BUYER_ORDER_DET  WHERE ORDER_ID =@CKEYFIELDVAL1

		
		
	END
	
	UPDATE A SET HSN_CODE=SKU.HSN_CODE
	FROM  BUYER_ORDER_DET A (nolock)
	JOIN SKU (NOLOCK) ON A.PRODUCT_CODE=SKU.PRODUCT_CODE 
	WHERE A.ORDER_ID =@CKEYFIELDVAL1
	AND ISNULL(A.HSN_CODE,'') IN('','0000000000')
	AND A.PRODUCT_CODE<>''
	
	
		
	
	     SELECT @NTAX=ISNULL(@NTAX,0),@NTAXFLAG=ISNULL(@NTAXFLAG,0),@Ngstcessamount=isnull(@Ngstcessamount,0)
		
		 UPDATE BUYER_ORDER_MST  WITH (ROWLOCK) SET ROUND_OFF=ROUND((SUBTOTAL + (CASE WHEN ISNULL(@NTAXFLAG,0)=1 THEN ISNULL(@NTAX,0)+isnull(@Ngstcessamount,0) ELSE 0 END)+
		(CASE WHEN GST_OH_CAL_METHOD=2 THEN 0 ELSE ISNULL(@NOHGST,0) END)
		+OTHER_CHARGES ) - DISCOUNT_AMOUNT,0)-
	    (SUBTOTAL+(CASE WHEN isnull(@NTAXFLAG,0)=1 THEN ISNULL(@NTAX,0)+isnull(@Ngstcessamount,0) ELSE 0 END)+OTHER_CHARGES+
	    (CASE WHEN GST_OH_CAL_METHOD=2 THEN 0 ELSE ISNULL(@NOHGST,0) END) +
		-DISCOUNT_AMOUNT),
		Total_gst_cess_amount=@Ngstcessamount
		WHERE ORDER_ID =@CKEYFIELDVAL1 
		
		SET @NSTEP = 219
	
		UPDATE BUYER_ORDER_MST WITH (ROWLOCK) SET TOTAL_AMOUNT=(SUBTOTAL +(CASE WHEN isnull(@NTAXFLAG,0)=1 THEN ISNULL(@NTAX,0)+isnull(@Ngstcessamount,0) ELSE 0 END) +
		(CASE WHEN GST_OH_CAL_METHOD=2 THEN 0 ELSE ISNULL(@NOHGST,0) END) +  OTHER_CHARGES +
		+ROUND_OFF) - DISCOUNT_AMOUNT
		WHERE ORDER_ID =@CKEYFIELDVAL1
		
		  IF OBJECT_ID ('TEMPDB..#TMPVALIDATEART','U') IS NOT NULL
	       DROP TABLE #TMPVALIDATEART
		
		
		SELECT A.article_code  
		INTO #TMPVALIDATEART
		FROM BUYER_ORDER_DET A (NOLOCK)
		JOIN ORD_PLAN_DET B (NOLOCK) ON A.row_id =B.WOD_ROW_ID 
		JOIN ORD_PLAN_MST MST (NOLOCK) ON  B.MEMO_ID=MST.MEMO_ID 
		WHERE ORDER_ID =@CKEYFIELDVAL1 AND MST.CANCELLED =0
		AND  (A.article_code <>B.ARTICLE_CODE OR A.para1_code <>B.PARA1_CODE OR A.para2_code <>B.PARA2_CODE ) 
		
	 IF EXISTS (SELECT TOP 1 'U' FROM #TMPVALIDATEART)
	  BEGIN
	       SET @CERRORMSG = 'MISMATCH ARTICLE FOUND AGAINST JOB CARD Please check'
		   GOTO END_PROC
	  
	  END

  
		

	END TRY
	BEGIN CATCH
		SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		GOTO END_PROC
	END CATCH
	
END_PROC:
	UPDATE buyer_order_mst WITH (ROWLOCk) SET last_update=getdate(),approved =1 WHERE order_id=@CKEYFIELDVAL1 AND MODE<> 3
    
  IF not  EXISTS (SELECT TOP 1 'U' FROM  BUYER_ORDER_DET A (NOLOCK) WHERE ORDER_ID=@CKEYFIELDVAL1) and ISNULL(@CERRORMSG,'')='' and @NUPDATEMODE	<> 3
  BEGIN
      SET @CERRORMSG='BLANK DETAILS CAN NOT BE SAVED'
       
  END

	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')='' AND @bOrderQtyValidationFailed=0
			BEGIN
			IF @NUPDATEMODE	<> 3	    
			   MERGE BUYER_ORDER_DET T
			   USING (
			          SELECT ORDER_ID,ARTICLE_CODE,PARA1_CODE,PARA2_CODE,SUM(QUANTITY)SUM_Q,MIN(ROW_ID)FIRST_ROWID
					  FROM BUYER_ORDER_DET (NOLOCK) 
					  WHERE ORDER_ID=@CKEYFIELD1
					  GROUP BY ORDER_ID,ARTICLE_CODE,PARA1_CODE,PARA2_CODE
					 )S
               ON S.ORDER_ID=T.ORDER_ID AND S.ARTICLE_CODE=T.ARTICLE_CODE AND S.PARA1_CODE=T.PARA1_CODE AND S.PARA2_CODE=T.PARA2_CODE
			   WHEN MATCHED AND T.ROW_ID=S.FIRST_ROWID  THEN UPDATE SET T.QUANTITY=S.SUM_Q
		       WHEN MATCHED AND T.ROW_ID!=S.FIRST_ROWID THEN DELETE;
			
			IF @NUPDATEMODE	= 2 AND @EDIT_CLICKED=1
			   EXEC SP3S_CAPTURE_AUDIT_TRAIL 'BO',@CXNMEMOID,@CTEMPMASTERTABLE,@CTEMPDETAILTABLE1,@NSPID,@CMACHINENAME,@CWINDOWUSERNAME,@CWIZAPPUSERCODE,0,'1900-01-01',@EDIT_CLICKED

			UPDATE buyer_order_mst WITH (ROWLOCk) SET HO_SYNCH_LAST_UPDATE='' WHERE order_id=@CKEYFIELDVAL1
			COMMIT TRANSACTION
		END
		ELSE
			ROLLBACK
	END
	
	IF ISNULL(@bOrderQtyValidationFailed,0)=0 OR ISNULL(@bCalledFromAro,0)=1
	BEGIN
		INSERT @OUTPUT (ERRMSG, MEMO_ID) VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,'') )

		SELECT * FROM @OUTPUT	
	END
	    DELETE A FROM WSLORD_BUYER_ORDER_MST_UPLOAD A WITH (ROWLOCK) WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))
        DELETE A FROM WSLORD_BUYER_ORDER_DET_UPLOAD A WITH (ROWLOCK) WHERE SP_ID=LTRIM(RTRIM(STR(@NSPID)))

		declare @CINSSPID varchar(50)
		set @CINSSPID=LEFT(@nSpId,38)+@CLOCATIONID 

	    DELETE A FROM WSLORD_BUYER_ORDER_MST_UPLOAD A WITH (ROWLOCK) WHERE SP_ID=@CINSSPID
        DELETE A FROM WSLORD_BUYER_ORDER_DET_UPLOAD A WITH (ROWLOCK) WHERE SP_ID=@CINSSPID

	--DROPPING TEMP TABLES
	IF ISNULL(@CERRORMSG,'') = '' 
	BEGIN
       


        SET @COL='IF OBJECT_ID(''TEMPDB..##BOM_'+CAST(@NSPID AS VARCHAR)+'_'+@CXNMEMOID+''',''U'') IS NOT NULL DROP TABLE [##BOM_'+CAST(@NSPID AS VARCHAR)+'_'+@CXNMEMOID+'];
				  IF OBJECT_ID(''TEMPDB..##BOD_'+CAST(@NSPID AS VARCHAR)+'_'+@CXNMEMOID+''',''U'') IS NOT NULL DROP TABLE [##BOD_'+CAST(@NSPID AS VARCHAR)+'_'+@CXNMEMOID+'];'
		EXEC(@COL)		  
    END
END						
------------------------------------------------------ END OF PROCEDURE SAVETRAN_BUYERORDER

