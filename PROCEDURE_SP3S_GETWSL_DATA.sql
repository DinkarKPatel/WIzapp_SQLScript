create PROCEDURE SP3S_GETWSL_DATA
(        
 @NSPID INT,
 @NMODE INT=1 ,
 @NUPDATEMODE INT=1,
 @NBOXNO INT=0 ,
 @CINVID VARCHAR(40)='',
 @CXNTYPE VARCHAR(10)='WSL',
 @NPASTE INT=0 ,--1 FOR FOR PASTE
 @cLOCID varchar(5)='',
 @BAGAINSTPS BIT=0,
 @BNOOUTPUT BIT=0
 
 
 --- @NMODE
 --- 1.BARCODE SCAN / PASTE ,2. QUANTITY CHANGED 3.RATE CHANGE, 4. DISCOUNT CHANGED ,
 --- 5.NET RATE CHANGED, 6. FORM NAME CHANGED, 7. RECALCULATE BUTTON PRESSED 
)                      
AS                        
BEGIN                        
	  
	
      DECLARE @CPARTYRATEFILTER VARCHAR(1000),@CTERMSCODE VARCHAR(20),@NCUSTOMRATETYPE INT,
      @CTARGETLOCID VARCHAR(5),@CSOURCELOCID VARCHAR(5),@NDEFAULTRATETYPE INT,@BENABLEEXCISDUTY BIT,
      @BCUSTOMPROCEXISTS BIT,@CSTEP VARCHAR(5),@CUTERRORMSG VARCHAR(MAX),@CTERRMSG VARCHAR(MAX),
      @CERRPC VARCHAR(50),@CERRORMSG VARCHAR(MAX),@NINVTYPE INT,@NBILLLEVELTAXMETHOD INT,@NRATEPICKINGMETHOD INT,
      @NPARTYDISCPCT NUMERIC(7,3),@CPRODUCTCODE VARCHAR(50),@BPARTYRATEFILTERAPPLICABLE BIT,@BDONOTCALEXCISE BIT,
      @CPARTYRATEMEMOID VARCHAR(40),@NCALMODE INT,@NLOTPRICE NUMERIC(10,2),@NXFERTYPE INT,@CROUNDNETRATE VARCHAR(2),
      @CCURLOCID VARCHAR(5),@BGSTBILL BIT,@DINVDT DATETIME,@CPARTYSTATECODE CHAR(7),@BGROUPINV BIT,@XN_ITEM_TYPE NUMERIC(2,0),
	  @NMEMOTYPE NUMERIC(1,0),@tmptblname varchar(100),@dtsql nvarchar(max),@cBarCodeSeparator VARCHAR(5)
	
	  DECLARE @TERROR1 TABLE(PRODUCT_CODE VARCHAR(100),SOURCE_BIN_NAME VARCHAR(100),SHORTAGE_QTY NUMERIC(10,2),QUANTITY NUMERIC(10,2),QUANTITY_IN_STOCK NUMERIC(10,2), ERRMSG VARCHAR(200)) 	
	  
	  BEGIN TRY
	  	  SET @CSTEP=10

		  IF ISNULL(@BAGAINSTPS,0)=1
		  BEGIN
		   

				SELECT A.PRODUCT_CODE  ,MST.PS_ID,MST.PS_NO,MST.PS_DT ,A.QUANTITY AS INVOICE_QUANTITY,A.QUANTITY,
				       SN.WS_PRICE AS RATE, SN.WS_PRICE AS net_RATE,
					   AMOUNT=SN.WS_PRICE*A.QUANTITY,
					   AMOUNT_MRP=sn.mrp*A.QUANTITY,
				       SN.*
				FROM WPS_DET  A (NOLOCK)
				JOIN WPS_MST MST (NOLOCK) ON A.PS_ID=MST.PS_ID 
				JOIN   WSL_PSID B ON A.PS_ID=B.PS_ID 
				JOIN SKU_NAMES SN (NOLOCK) ON SN.PRODUCT_CODE =A.PRODUCT_CODE 
				WHERE B.SP_ID=@NSPID

				delete from WSL_PSID where SP_ID=@NSPID
				RETURN

		    END

	 --IF @NPASTE=1 AND @CXNTYPE='WSL'
	 -- BEGIN

	
	 --     DELETE FROM WSL_ITEM_DETAILS WHERE SP_ID =@NSPID
	 --    SET @TMPTBLNAME ='##WSL_ITEM_DETAILS_'+rtrim(ltrim(str(@NSPID)))

		-- SET @DTSQL=N' SELECT '''+@cLOCID+''' as dept_id,BIN_ID,QUANTITY,QUANTITY,NEWID() as ROW_ID,'''+rtrim(ltrim(str(@NSPID)))+''',PRODUCT_CODE FROM '+@TMPTBLNAME+' '
		-- INSERT INTO WSL_ITEM_DETAILS (DEPT_ID ,BIN_ID,QUANTITY,INVOICE_QUANTITY,ROW_ID ,SP_ID,PRODUCT_CODE )
		-- EXEC SP_EXECUTESQL  @DTSQL
		-- print @DTSQL
		
	 -- END
          UPDATE WSL_ITEM_DETAILS SET INVOICE_QUANTITY=QUANTITY WHERE SP_ID=@NSPID  AND ISNULL(INVOICE_QUANTITY,0)=0
		  UPDATE WSL_ITEM_DETAILS SET ROW_ID=CAST('LATER'+CAST(NEWID() AS VARCHAR(40)) AS VARCHAR(40))
		  WHERE SP_ID=@NSPID	and isnull(row_id,'')=''		
			
		SET @CSTEP=11.4
	
		SELECT TOP 1 @cBarCodeSeparator = value from config (NOLOCK) WHERE config_option='barcode_separator'

		IF ISNULL(@cBarCodeSeparator,'')<>''
		BEGIN
			IF EXISTS (SELECT TOP 1 product_code FROM WSL_ITEM_DETAILS (NOLOCK) WHERE SP_ID=@NSPID 
				AND CHARINDEX(@cBarCodeSeparator,product_code)>0)
				UPDATE WSL_ITEM_DETAILS WITH (ROWLOCK) SET product_code=SUBSTRING(product_code,1,CHARINDEX(@cBarCodeSeparator,product_code)-1)
				WHERE SP_ID=@nSpId AND CHARINDEX(@cBarCodeSeparator,product_code)>0
		END

		SET @CSTEP=11.8
	  IF EXISTS (SELECT TOP 1  'U' FROM WSL_ITEM_DETAILS A 
	  LEFT JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE= B.PRODUCT_CODE 
	  WHERE SP_ID=@NSPID AND  B.PRODUCT_CODE IS NULL)
	  BEGIN
	      	SET @CERRORMSG='BARCODE NOT FOUND'

			 UPDATE A SET ERRMSG='BARCODE NOT FOUND' FROM WSL_ITEM_DETAILS A 
			  LEFT JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE= B.PRODUCT_CODE 
			  WHERE SP_ID=@NSPID AND  B.PRODUCT_CODE IS NULL

			GOTO END_PROC

	  END

	  
		


		  
		  SET @CUTERRORMSG=''
		  
		  UPDATE WSL_ITEM_DETAILS SET ERRMSG='' WHERE SP_ID=@NSPID

		  SET @CSTEP=15
		  
		  SELECT TOP 1 @CROUNDNETRATE=VALUE FROM CONFIG WHERE CONFIG_OPTION='WSL_ITEM_LEVEL_ROUND_OFF'
		   
		  		  
		  IF @cLOCID='' 
	   	         SELECT TOP 1 @cLOCID=dept_id FROM WSL_ITEM_DETAILS WHERE SP_ID=@NSPID AND ISNULL(ERRMSG,'')= ''
		
          set @CCURLOCID= @cLOCID           
		  
		  			
		  SET @CROUNDNETRATE=ISNULL(@CROUNDNETRATE,'')
		  
		  SELECT @CPARTYRATEMEMOID=PARTY_RATE_MEMO_ID FROM WSL_INV_SETTINGS WHERE SP_ID=@NSPID
		  		  		  
		  SELECT TOP 1 @NINVTYPE=ISNULL(INV_TYPE,1),@NXFERTYPE=ISNULL(XFER_TYPE,0),@NDEFAULTRATETYPE=DEFAULT_RATE_TYPE,@NCUSTOMRATETYPE=ISNULL(A.CUSTOM_RATE_TYPE,0),
		  @BPARTYRATEFILTERAPPLICABLE=ISNULL(PARTYRATE_FILTER_APPLICABLE,0),@CTERMSCODE=ISNULL(TERMS_CODE,''), 
		  @CTARGETLOCID=TARGET_LOCATION_ID,@CSOURCELOCID=A.LOCATION_ID,
		  @BENABLEEXCISDUTY=ISNULL(ENABLE_EXCISE_DUTY,0),@BCUSTOMPROCEXISTS=ISNULL(CUSTOM_PROC_EXISTS,0),
		  @NBILLLEVELTAXMETHOD=BILL_LEVEL_TAX_METHOD,@NRATEPICKINGMETHOD=ISNULL(C.RATE_PICKING_METHOD,0),
		  @NPARTYDISCPCT=(CASE WHEN ISNULL(DISCOUNT_PICKING_MODE,0)=2 THEN 0 ELSE PARTY_DISCOUNT_PCT END),
		  --@NPARTYDISCPCT=(CASE WHEN ISNULL(DISCOUNT_PICKING_MODE,0)=2 THEN 0 ELSE C.VALUE END),
		  @NCALMODE=MST_CAL_MODE,@BDONOTCALEXCISE=ISNULL(DONOT_CALC_EXCISE,0),
		  @NLOTPRICE=A.LOT_PRICE,@BGSTBILL=ISNULL(GST_BILL,0),@DINVDT=INV_DT,
		  @CPARTYSTATECODE=PARTY_STATE_CODE,
		  @XN_ITEM_TYPE=A.XN_ITEM_TYPE,@nmemotype=memo_type
		  FROM WSL_INV_SETTINGS A (NOLOCK)
		  LEFT OUTER JOIN LOCATION B ON A.LOCATION_ID=B.DEPT_ID
		  LEFT OUTER JOIN 
		  (SELECT M.MEMO_ID,RATE_PICKING_METHOD,DISCOUNT_PICKING_MODE,MST_CAL_MODE--,D.VALUE 
		   FROM PARTY_RATE_MST M 
		   --JOIN PARTY_RATE_DET D ON M.MEMO_ID=D.MEMO_ID
		   WHERE M.MEMO_ID=@CPARTYRATEMEMOID) C ON C.MEMO_ID=A.PARTY_RATE_MEMO_ID
		  WHERE SP_ID=@NSPID

		  IF ISNULL(@nmemotype,0)=0
		  SET @nmemotype=1
		  
		  IF ISNULL(@CPARTYRATEMEMOID,'')=''
		  BEGIN
				SELECT @NDEFAULTRATETYPE=(CASE WHEN @CXNTYPE='PRT' THEN 3 ELSE 1 END),@NPARTYDISCPCT=0
		  END
		  
		  IF ISNULL(@XN_ITEM_TYPE,0)=0
		  SET @XN_ITEM_TYPE=1


		   UPDATE A SET ERRMSG=  CASE WHEN  @XN_ITEM_TYPE=1 AND b.sku_item_type=2 THEN 'CONSUMABLE ITEM NOT ALLOWED IN INVENTORY TRANSCTION'  
							  WHEN  @XN_ITEM_TYPE=1 AND b.sku_item_type=3 THEN 'ASSESTS    ITEM NOT ALLOWED IN INVENTORY TRANSCTION'  
							  WHEN  @XN_ITEM_TYPE=1 AND b.sku_item_type=4 THEN 'SERVICE    ITEM NOT ALLOWED IN INVENTORY TRANSCTION'  
							  WHEN  @XN_ITEM_TYPE=1 AND b.sku_item_type=5 THEN 'Repair    ITEM NOT ALLOWED IN INVENTORY TRANSCTION'  
                        
							  WHEN  @XN_ITEM_TYPE=2 AND b.sku_item_type=1 THEN 'INVENTORY  ITEM NOT ALLOWED IN CONSUMBLE TRANSCTION'  
							  WHEN  @XN_ITEM_TYPE=2 AND b.sku_item_type=3 THEN 'ASSESTS    ITEM NOT ALLOWED IN CONSUMBLE TRANSCTION'  
							  WHEN  @XN_ITEM_TYPE=2 AND b.sku_item_type=4 THEN 'SERVICE    ITEM NOT ALLOWED IN CONSUMBLE TRANSCTION'  
							  WHEN  @XN_ITEM_TYPE=2 AND b.sku_item_type=5 THEN 'Repair    ITEM NOT ALLOWED IN CONSUMBLE TRANSCTION'  
                        
							  WHEN  @XN_ITEM_TYPE=3 AND b.sku_item_type=1 THEN 'INVENTORY  ITEM NOT ALLOWED IN ASSESTS   TRANSCTION'  
							  WHEN  @XN_ITEM_TYPE=3 AND b.sku_item_type=2 THEN 'CONSUMABLE ITEM NOT ALLOWED IN ASSESTS   TRANSCTION'  
							  WHEN  @XN_ITEM_TYPE=3 AND b.sku_item_type=4 THEN 'SERVICE    ITEM NOT ALLOWED IN ASSESTS   TRANSCTION'  
							  WHEN  @XN_ITEM_TYPE=3 AND b.sku_item_type=5 THEN 'Repair    ITEM NOT ALLOWED IN ASSESTS   TRANSCTION'  
                        
                        
							  WHEN  @XN_ITEM_TYPE=4 AND b.sku_item_type=1 THEN 'INVENTORY  ITEM NOT ALLOWED IN SERVICE   TRANSCTION'  
							  WHEN  @XN_ITEM_TYPE=4 AND b.sku_item_type=2 THEN 'CONSUMBLE  ITEM NOT ALLOWED IN SERVICE   TRANSCTION'  
							  WHEN  @XN_ITEM_TYPE=4 AND b.sku_item_type=3 THEN 'ASSESTS    ITEM NOT ALLOWED IN SERVICE   TRANSCTION ' 
							  WHEN  @XN_ITEM_TYPE=4 AND b.sku_item_type=5 THEN 'Repair    ITEM NOT ALLOWED IN SERVICE   TRANSCTION '    
							  
							  --WHEN  @XN_ITEM_TYPE=5 AND b.sku_item_type=1 THEN 'INVENTORY  ITEM NOT ALLOWED IN SERVICE   TRANSCTION'  
							  --WHEN  @XN_ITEM_TYPE=5 AND b.sku_item_type=2 THEN 'CONSUMBLE  ITEM NOT ALLOWED IN SERVICE   TRANSCTION'  
							  --WHEN  @XN_ITEM_TYPE=5 AND b.sku_item_type=3 THEN 'ASSESTS    ITEM NOT ALLOWED IN SERVICE   TRANSCTION ' 
							  --WHEN  @XN_ITEM_TYPE=5 AND b.sku_item_type=4 THEN 'SERVICE    ITEM NOT ALLOWED IN SERVICE   TRANSCTION '      
			   END  
		 FROM wsl_item_details  A (NOLOCK)  
		 JOIN sku_names b (NOLOCK) ON A.PRODUCT_CODE=b.PRODUCT_CODE   
		 WHERE CASE WHEN ISNULL(b.sku_item_type,0) IN(0,1) THEN 1 ELSE b.sku_item_type END  <>@XN_ITEM_TYPE  
		 AND A.SP_ID=@NSPID  

		 if exists (select top 1 'u' from wsl_item_details a (nolock) where sp_id=@NSPID and errmsg <>'')
		 begin
		    SET @CERRORMSG='invali item type'
			GOTO END_PROC

		 end


		--validate wsl restriction from Pos restriction In Group Invoice

		if @NPASTE=0 and @CTARGETLOCID<>'' and @CTARGETLOCID<>@CSOURCELOCID and @CXNTYPE ='WSL'
		begin
		    
			IF EXISTS (SELECT TOP 1 'U' FROM location WHERE ISNULL(CategoryCode,'')<>'' AND DEPT_ID=@CTARGETLOCID)
			BEGIN

				EXEC VALIDATEXN_POSCATEGORY 
				@cxn_type=@CXNTYPE,
				@CXNID=@NSPID,
				@NUPDATEMODE=1,
				@cparty_dept_id=@CTARGETLOCID,
				@CERRORMSG=@CERRORMSG OUTPUT,
				@BCALLEDFROMSCANNING=1

				IF ISNULL(@CERRORMSG,'')<>''
				   GOTO END_PROC
			END

		end


			
		  IF @NRATEPICKINGMETHOD=1 AND ISNULL(@CTERMSCODE,'')=''
		  BEGIN
				SET @CERRORMSG='PLEASE SELECT A VALID TERMS NAME FOR INVOICING'
				GOTO END_PROC
		  END
					  
		  IF @NMODE=5
		  BEGIN
			  UPDATE WSL_ITEM_DETAILS SET ERRMSG='NET RATE CANNOT BE MORE THAN RATE....PLEASE CHECK'
			  WHERE SP_ID=@NSPID AND NET_RATE>RATE AND DISCOUNT_AMOUNT>=0 AND BIN_ID<>'999'

			  SELECT TOP 1 @CTERRMSG=ERRMSG FROM WSL_ITEM_DETAILS WHERE SP_ID=@NSPID AND ISNULL(ERRMSG,'')<>''
			  
			  IF ISNULL(@CTERRMSG,'')<>''
					GOTO END_PROC
		  END
		  
		  SET @CSTEP=20       


		  UPDATE WSL_ITEM_DETAILS SET FORM_NAME=FORM.FORM_NAME
		  FROM FORM  WHERE SP_ID=@NSPID  AND FORM.FORM_ID= WSL_ITEM_DETAILS.ITEM_FORM_ID 
		  
		  IF NOT (@NXFERTYPE=2 AND @NINVTYPE=2)
			  UPDATE WSL_ITEM_DETAILS SET ITEM_TAX_PERCENTAGE=FORM.TAX_PERCENTAGE,FORM_TAX_PERCENTAGE=FORM.TAX_PERCENTAGE,
			  FORM_NAME=FORM.FORM_NAME
			  FROM FORM  WHERE SP_ID=@NSPID  AND FORM.FORM_ID= WSL_ITEM_DETAILS.ITEM_FORM_ID 
		  ELSE
			  UPDATE WSL_ITEM_DETAILS SET ITEM_TAX_PERCENTAGE=0 WHERE SP_ID=@NSPID
			  			  
		  UPDATE WSL_ITEM_DETAILS SET QUANTITY=ISNULL(INVOICE_QUANTITY,0)+ISNULL(SCHEME_QUANTITY,0)
		  WHERE SP_ID=@NSPID 
		  
		  IF  @CXNTYPE IN ('WSL','WSR')		  
		  BEGIN
			  IF @NMODE IN (1,2) AND @CXNTYPE='WSL'
			  BEGIN
				 SET @CSTEP=25       
				 
				 IF ISNULL(@NPASTE,0)=1
				 BEGIN
				   
						 UPDATE A SET BIN_ID =BIN.BIN_ID  FROM WSL_ITEM_DETAILS A
						 JOIN BIN ON ISNULL(A.BIN_NAME,'') =BIN.BIN_NAME 
						 WHERE ISNULL(A.BIN_NAME,'') <>'' AND SP_ID=@NSPID

						 
                  

				 END	
				   

				   
				  UPDATE A SET ERRMSG=CASE WHEN @nmemotype=1 THEN  'REGULAR INVOICE  CAN NOTE SCAN ESTIMATE BARCODE PLEASE CHECK ' 
					   ELSE 'ESTIMATE INVOCE  CAN NOTE SCAN REGULAR BARCODE PLEASE CHECK '  END 
				  FROM WSL_ITEM_DETAILS A (NOLOCK)
				  JOIN SKU (NOLOCK) ON A.PRODUCT_CODE =SKU.PRODUCT_CODE 
				  WHERE A.SP_ID=@NSPID AND CASE WHEN ISNULL(SKU.ER_FLAG,0) IN (0,1) THEN 1 ELSE 2 END<>@nmemotype

				  IF EXISTS (SELECT TOP 1 'U' FROM WSL_ITEM_DETAILS WHERE SP_ID=@NSPID AND ISNULL(ERRMSG,'')<>'')
				   GOTO END_PROC

			 
				 --SELECT @NSPID,@NMODE,@NUPDATEMODE,@CINVID
				 EXEC SP3S_CHECKSTOCK_NEW @NSPID=@NSPID,@NMODE=@NMODE,@NUPDATEMODE=@NUPDATEMODE,@CMEMOID=@CINVID,@NPASTE=@NPASTE,@XN_ITEM_TYPE=@XN_ITEM_TYPE , @cLOC= @CCURLOCID
 
							   
			  END	 
			  ELSE
			  BEGIN

				 UPDATE A SET UOM_TYPE =  U.UOM_TYPE, 		STOCK_NA =  B.STOCK_NA, 		
				 CODING_SCHEME =ISNULL(sku.barcode_coding_scheme,B.CODING_SCHEME), 		
				 PURCHASE_PRICE =  SKU.PURCHASE_PRICE, 		
				 MRP = SKU.MRP, 		WS_PRICE = SKU.WS_PRICE,
				 ER_FLAG =  SKU.ER_FLAG, 		FIX_MRP =  SKU.FIX_MRP, 		ARTICLE_NO =  B.ARTICLE_NO, 		ARTICLE_NAME =  B.ARTICLE_NAME, 		PARA1_NAME =  C.PARA1_NAME, 		PARA2_NAME =  D.PARA2_NAME, 		PARA3_NAME =  F.PARA3_NAME, 		ONLINE_BAR_CODE = SKU.ONLINE_PRODUCT_CODE, 		
				 VENDOR_EAN_NO = SKU.VENDOR_EAN_NO, 		PRODUCT_NAME =  SKU.PRODUCT_NAME, 		ARTICLE_ALIAS =  B.ALIAS, 		BIN_NAME =  BIN.BIN_NAME, 		PARA6_NAME =  I.PARA6_NAME, 		ART_DT_CREATED = B.DT_CREATED, 		PARA3_DT_CREATED = F.DT_CREATED, 		SKU_DT_CREATED = SKU.DT_CREATED, 		EAN = EAN_SYNC.EAN, 		UOM_NAME = U.UOM_NAME,
				 SECTION_NAME =  SM.SECTION_NAME, 		SECTION_CODE =  SM.SECTION_CODE,
				 SUB_SECTION_CODE =  SD.SUB_SECTION_CODE, 		SUB_SECTION_NAME =  SD.SUB_SECTION_NAME, 		PARA4_NAME =  G.PARA4_NAME, 		PARA5_NAME =  H.PARA5_NAME, 		ARTICLE_CODE = B.ARTICLE_CODE, 		
				 PARA1_CODE =  SKU.PARA1_CODE, 		PARA2_CODE =  SKU.PARA2_CODE, 		PARA3_CODE 
				 =  SKU.PARA3_CODE, 		PARA4_CODE =  SKU.PARA4_CODE, 		PARA5_CODE =  SKU.PARA5_CODE, 		PARA6_CODE =  SKU.PARA6_CODE, 
				 hsn_code=(Case when isnull(sku.hsn_code,'') in ('','0000000000') THEN  B.HSN_CODE ELSE sku.hsn_code END),
				 UOM_CODE =  U.UOM_CODE
				 
				 FROM [WSL_ITEM_DETAILS] A
				 JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
				 LEFT OUTER JOIN ARTICLE B  (NOLOCK) ON B.ARTICLE_CODE = SKU.ARTICLE_CODE        
				 LEFT OUTER JOIN SECTIOND SD  (NOLOCK) ON B.SUB_SECTION_CODE = SD.SUB_SECTION_CODE      
				 LEFT OUTER JOIN SECTIONM SM  (NOLOCK) ON SD.SECTION_CODE = SM.SECTION_CODE      
				 JOIN PARA1 C  (NOLOCK) ON SKU.PARA1_CODE = C.PARA1_CODE        
				 JOIN PARA2 D  (NOLOCK) ON SKU.PARA2_CODE = D.PARA2_CODE        
				 JOIN PARA3 F  (NOLOCK) ON SKU.PARA3_CODE = F.PARA3_CODE        
				 JOIN PARA4 G  (NOLOCK) ON SKU.PARA4_CODE = G.PARA4_CODE        
				 JOIN PARA5 H  (NOLOCK) ON SKU.PARA5_CODE = H.PARA5_CODE        
				 JOIN PARA6 I  (NOLOCK) ON SKU.PARA6_CODE = I.PARA6_CODE     
				 LEFT OUTER JOIN UOM U  (NOLOCK) ON B.UOM_CODE = U.UOM_CODE   
				 LEFT OUTER JOIN BIN (NOLOCK) ON BIN.BIN_ID=A.BIN_ID
				 LEFT OUTER JOIN EAN_SYNC (NOLOCK) ON EAN_SYNC.PRODUCT_CODE=SKU.PRODUCT_CODE
				 WHERE SP_ID=@NSPID AND A.SUB_SECTION_CODE IS NULL
			  
				 IF @NMODE NOT IN (7)
				 BEGIN
					 UPDATE A SET MRP=B.MRP,WS_PRICE=B.WS_PRICE,HSN_CODE=B.HSN_CODE,A.FIX_MRP=B.FIX_MRP
					 FROM WSL_ITEM_DETAILS	A
					 JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
					 JOIN ARTICLE C ON C.ARTICLE_CODE=B.ARTICLE_CODE
					 JOIN SECTIOND D ON D.SUB_SECTION_CODE=C.SUB_SECTION_CODE
					 JOIN WSL_INV_SETTINGS E ON A.SP_ID=E.SP_ID
					 LEFT OUTER JOIN SKU_OH (NOLOCK) ON SKU_OH.PRODUCT_CODE=B.PRODUCT_CODE
					 WHERE A.SP_ID=@NSPID 
					 
					 IF @CXNTYPE='WSL'
						GOTO LBLRECALAMOUNT
				 END
			  END
		  			  
			  SET @CSTEP=30
			  SELECT TOP 1 @CTERRMSG=ERRMSG FROM WSL_ITEM_DETAILS WHERE SP_ID=@NSPID AND ISNULL(ERRMSG,'')<>''
			 
			 
			
	  
			  IF ISNULL(@CTERRMSG,'')<>''
					GOTO END_PROC
			  
			  SET @CSTEP=40	  
			  UPDATE A SET MRP=CASE WHEN ISNULL(A.DONOT_UPDATE_MRP,0)=0 THEN  B.MRP ELSE A.MRP END ,
			  WS_PRICE=CASE WHEN ISNULL(A.DONOT_UPDATE_MRP,0)=0 THEN  B.WS_PRICE ELSE A.WS_PRICE END,
			  HSN_CODE=B.HSN_CODE,A.FIX_MRP=B.FIX_MRP
			  FROM WSL_ITEM_DETAILS	A
			  JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
			  JOIN ARTICLE C ON C.ARTICLE_CODE=B.ARTICLE_CODE
			  JOIN SECTIOND D ON D.SUB_SECTION_CODE=C.SUB_SECTION_CODE
			  JOIN WSL_INV_SETTINGS E ON A.SP_ID=E.SP_ID
			  LEFT OUTER JOIN SKU_OH (NOLOCK) ON SKU_OH.PRODUCT_CODE=B.PRODUCT_CODE
			  WHERE A.SP_ID=@NSPID 
		  END
		  	
		  SET @CSTEP=45	
	
		  UPDATE A SET 	RATE=(CASE WHEN ISNULL(MANUAL_RATE,0)=1 THEN RATE WHEN @NLOTPRICE<>0 THEN @NLOTPRICE 
					 WHEN sf.product_code IS NOT NULL THEN sf.ws_price  	
					 WHEN ISNULL(B.MRP_WSP_MODE,0)=2 OR @NDEFAULTRATETYPE=1 AND ISNULL(SKU.WS_PRICE,0)>0 THEN 
					 CASE WHEN ISNULL(A.DONOT_UPDATE_MRP,0)=0 THEN  SKU.WS_PRICE else a.ws_price end
					 WHEN @NDEFAULTRATETYPE=3 THEN  sku.purchase_price --as per arun sir discuss with sanjiv sir
					  ELSE 
					 CASE WHEN ISNULL(A.DONOT_UPDATE_MRP,0)=0 THEN  SKU.MRP else a.mrp end 
					  END),
		  DISCOUNT_AMOUNT=0,DISCOUNT_PERCENTAGE=(CASE WHEN @NLOTPRICE<>0 THEN 0 ELSE ISNULL(@NPARTYDISCPCT,0)*
		  (CASE WHEN ISNULL(@NCALMODE,3)=1 THEN -1 ELSE 1 END) END)
			  ,HSN_CODE=SKU.HSN_CODE,A.FIX_MRP=SKU.FIX_MRP
		  FROM WSL_ITEM_DETAILS A 	  
		  JOIN SKU (NOLOCK) ON A.PRODUCT_CODE=SKU.PRODUCT_CODE	
		  JOIN SKU_NAMES sn (NOLOCK) ON A.PRODUCT_CODE=sn.PRODUCT_CODE	
		  JOIN WSL_INV_SETTINGS B ON A.SP_ID=B.SP_ID
		  
		  LEFT OUTER JOIN 
		  (SELECT sfp.product_code,fc_rate as ws_price FROM sku_fc_prices sfp (NOLOCK)
		  JOIN location loc (NOLOCK) ON 1=1
		  JOIN wsl_item_details c (NOLOCK) ON c.PRODUCT_CODE=sfp.product_code
		  WHERE c.sp_id=@NSPID and loc.dept_id= @cLOCID AND sfp.fc_code=loc.fc_code         
		  ) SF ON sf.product_code=a.PRODUCT_CODE
		  
		  WHERE A.SP_ID=@NSPID AND ISNULL(MANUAL_RATE,0)=0 AND ISNULL(MANUAL_NET_RATE,0)=0 
		  AND ISNULL(MANUAL_DISCOUNT,0)=0
		  
		
		
		
		 
		  IF @CPARTYRATEMEMOID IS NULL AND @CXNTYPE='WSL'
			  UPDATE A SET RATE=CASE WHEN ISNULL(A.DONOT_UPDATE_MRP,0)=0 then B.MRP else a.mrp end
			  ,HSN_CODE=B.HSN_CODE FROM WSL_ITEM_DETAILS A
			  JOIN SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE
			  WHERE A.SP_ID=@NSPID AND ISNULL(MANUAL_RATE,0)=0 AND ISNULL(MANUAL_NET_RATE,0)=0 
			  AND ISNULL(MANUAL_DISCOUNT,0)=0 AND A.RATE=0
			  
		  SET @CSTEP=50
		  		  
		  UPDATE WSL_ITEM_DETAILS SET DISCOUNT_AMOUNT=(RATE * INVOICE_QUANTITY * DISCOUNT_PERCENTAGE) / 100
		  WHERE SP_ID=@NSPID AND ISNULL(MANUAL_NET_RATE,0)=0

		  UPDATE WSL_ITEM_DETAILS SET DISCOUNT_PERCENTAGE=((RATE -NET_RATE)/RATE) * 100
		  WHERE SP_ID=@NSPID AND ISNULL(MANUAL_NET_RATE,0)=1
		  
		  UPDATE WSL_ITEM_DETAILS SET DISCOUNT_AMOUNT=(RATE -NET_RATE) * INVOICE_QUANTITY * DISCOUNT_PERCENTAGE / 100
		  WHERE SP_ID=@NSPID AND ISNULL(MANUAL_NET_RATE,0)=1
		  
		  UPDATE WSL_ITEM_DETAILS SET NET_RATE=RATE-(RATE * DISCOUNT_PERCENTAGE/ 100) WHERE SP_ID=@NSPID
		  AND ISNULL(MANUAL_NET_RATE,0)=0
	      
	      IF @CXNTYPE NOT IN('WSL','PRT','WSR')
				RETURN
				
		  PRINT 'UPDATE RATE-2:'+@CPARTYRATEFILTER
		  
		  IF @NINVTYPE=2 AND @NXFERTYPE<>2
		  BEGIN
			  PRINT 'UPDATE RATE-2 TAX%'
			  UPDATE A SET ITEM_TAX_PERCENTAGE=(CASE WHEN LSADD.MIN_MRP IS NOT NULL AND A.MRP BETWEEN ISNULL(LSADD.MIN_MRP,0) AND ISNULL(LSADD.MAX_MRP,0)
			  THEN LSADD.TAX_PERCENTAGE ELSE LS.TAX_PERCENTAGE END),ITEM_FORM_ID=LS.FORM_ID,HSN_CODE=SKU.HSN_CODE,A.FIX_MRP=SKU.FIX_MRP
			  FROM WSL_ITEM_DETAILS A
			  JOIN SKU ON A.PRODUCT_CODE=SKU.PRODUCT_CODE
			  JOIN ARTICLE B ON B.ARTICLE_CODE=SKU.ARTICLE_CODE
			  JOIN LOCSST LS ON LS.SUB_SECTION_CODE=B.SUB_SECTION_CODE
			  LEFT OUTER JOIN LOCSSTADD LSADD ON LSADD.LOCSST_ROW_ID=LS.ROW_ID
			  JOIN WSL_INV_SETTINGS C ON A.SP_ID=C.SP_ID
			  WHERE A.SP_ID=@NSPID AND LS.MEMO_ID=C.LOCSST_MEMO_ID
		  END
		  
		  SELECT TOP 1 @CPRODUCTCODE=PRODUCT_CODE FROM WSL_ITEM_DETAILS 
		  WHERE SP_ID=@NSPID AND ISNULL(MANUAL_RATE,0)=0 AND ISNULL(MANUAL_NET_RATE,0)=0 AND ISNULL(MANUAL_DISCOUNT,0)=0		
		  	
		
		  
		  	  
		  IF @NLOTPRICE=0
		  BEGIN
			  --SELECT @NRATEPICKINGMETHOD,@CTERMSCODE,@CPRODUCTCODE,@BPARTYRATEFILTERAPPLICABLE	
			  IF @NRATEPICKINGMETHOD=1 AND ISNULL(@CTERMSCODE,'')<>'' AND ISNULL(@CPRODUCTCODE,'')<>''
			  BEGIN
			 
					PRINT 'UPDATE RATES FOR TERMS'
					SET @CSTEP=60			  
					IF @BGSTBILL=1
						EXEC SP3S_GETINVRATE_TERMS_GST  @NSPID,'WSL',@CERRORMSG OUTPUT					
					ELSE	
						EXEC SP3S_GETINVRATE_TERMS_NEW @NSPID,'WSL',@CERRORMSG OUTPUT
					
					IF ISNULL(@CERRORMSG,'')<>''
						GOTO END_PROC
			  END		
			  ELSE
			  IF @NRATEPICKINGMETHOD=2 AND @BCUSTOMPROCEXISTS=1 AND ISNULL(@CPRODUCTCODE,'')<>''
			  BEGIN
			  
					PRINT 'UPDATE RATES FOR CUSTOM PROC'
					SET @CSTEP=70			  
					EXEC SP3S_GETINVRATE_CUSTOM @NSPID
			  END	
			  ELSE
			  IF @NRATEPICKINGMETHOD=3 AND @BPARTYRATEFILTERAPPLICABLE=1 AND ISNULL(@CPRODUCTCODE,'')<>''
			  BEGIN
			
			
					PRINT 'UPDATE RATES FOR PARTY RATE:'+STR(@NSPID)
					SET @CSTEP=65			  
					EXEC SP3S_APPLY_PARTY_RATE_NEW @NSPID,@CERRORMSG OUTPUT
					
					IF ISNULL(@CERRORMSG,'')<>''
						GOTO END_PROC
			  END		
			  ELSE
				PRINT 'UPDATE BASIC RATES'
		  END
		  			  
		  IF EXISTS (SELECT TOP 1 RATE FROM WSL_ITEM_DETAILS A
					 JOIN SECTIONM B ON A.SECTION_CODE=B.SECTION_CODE
					 WHERE SP_ID=@NSPID AND RATE=0 AND B.ITEM_TYPE<>2 and a.bin_id <>'999')
		  BEGIN
				SELECT TOP 1 @CERRPC=PRODUCT_CODE FROM WSL_ITEM_DETAILS WHERE SP_ID=@NSPID AND RATE=0
				SET @CERRORMSG='(2)RATE CANNOT BE ZERO FOR THE ITEM CODE :'+@CERRPC
				GOTO END_PROC
		  END
   
LBLRECALAMOUNT:		  		  		  
		  
		  IF @BENABLEEXCISDUTY=1 AND @BDONOTCALEXCISE=0
		  BEGIN
			  
			  SET @CSTEP=80
			  UPDATE WSL_ITEM_DETAILS SET ITEM_EXCISE_ACCESSIBLE_AMOUNT=0,ITEM_EXCISE_DUTY_PERCENTAGE=0,ITEM_EXCISE_DUTY_AMOUNT=0,ITEM_EXCISE_EDU_CESS_PERCENTAGE=0,
			  ITEM_EXCISE_EDU_CESS_AMOUNT=0,ITEM_EXCISE_HEDU_CESS_PERCENTAGE=0,ITEM_EXCISE_HEDU_CESS_AMOUNT=0,
			  ITEM_EXCISE_MRP=0 WHERE SP_ID=@NSPID 
			
			  SET @CSTEP=90	    
			  UPDATE A  SET ITEM_EXCISE_MRP=A.MRP FROM WSL_ITEM_DETAILS A 
			  JOIN WSL_INV_SETTINGS B ON A.SP_ID=B.SP_ID
			  JOIN FORM C ON C.FORM_ID=A.ITEM_FORM_ID
			  WHERE A.SP_ID=@NSPID AND C.EXCISE_DUTY_PERCENTAGE<>0 AND A.MRP>=B.MIN_EXCISABLE_MRP
			  		  
			  
			  SET @CSTEP=100  
			  UPDATE WSL_ITEM_DETAILS SET ITEM_EXCISE_MRPVAL= (ITEM_EXCISE_MRP*INVOICE_QUANTITY) WHERE SP_ID=@NSPID  
			  
			  UPDATE A SET ITEM_EXCISE_ACCESSIBLE_PERCENTAGE=B.EXCISE_ACCESSIBLE_PERCENTAGE,
			  ITEM_EXCISE_ACCESSIBLE_AMOUNT=ITEM_EXCISE_MRPVAL*B.EXCISE_ACCESSIBLE_PERCENTAGE/100     
			  FROM WSL_ITEM_DETAILS A JOIN FORM B ON A.ITEM_FORM_ID=B.FORM_ID
			  WHERE A.SP_ID=@NSPID  
			  
			  SET @CSTEP=110   
			  UPDATE A SET ITEM_EXCISE_DUTY_PERCENTAGE=B.EXCISE_DUTY_PERCENTAGE,
			  ITEM_EXCISE_DUTY_AMOUNT=ITEM_EXCISE_ACCESSIBLE_AMOUNT*B.EXCISE_DUTY_PERCENTAGE/100  
			  FROM WSL_ITEM_DETAILS A JOIN FORM B ON A.ITEM_FORM_ID=B.FORM_ID
			  WHERE A.SP_ID=@NSPID  
			  
			  SET @CSTEP=115  
			  UPDATE A SET  ITEM_EXCISE_EDU_CESS_PERCENTAGE=B.EXCISE_EDU_CESS_PERCENTAGE,
			  ITEM_EXCISE_EDU_CESS_AMOUNT=ITEM_EXCISE_DUTY_AMOUNT*B.EXCISE_EDU_CESS_PERCENTAGE/100,
			  ITEM_EXCISE_HEDU_CESS_PERCENTAGE=B.EXCISE_HEDU_CESS_PERCENTAGE,
			  ITEM_EXCISE_HEDU_CESS_AMOUNT=ITEM_EXCISE_DUTY_AMOUNT*B.EXCISE_HEDU_CESS_PERCENTAGE/100
			  FROM WSL_ITEM_DETAILS A JOIN WSL_INV_SETTINGS B ON A.SP_ID=B.SP_ID
			  WHERE A.SP_ID=@NSPID AND A.ITEM_EXCISE_DUTY_PERCENTAGE<>0 AND A.MRP>=B.MIN_EXCISABLE_MRP
		  END		
		  
		  
		  SET @CSTEP=130
		  IF @NMODE NOT IN (4,5)
			  UPDATE WSL_ITEM_DETAILS SET  DISCOUNT_AMOUNT = (RATE*ISNULL(DISCOUNT_PERCENTAGE,0)*INVOICE_QUANTITY/100)
			  WHERE SP_ID=@NSPID  AND ISNULL(MANUAL_DISCOUNT,0)=0  
		  ELSE
		  IF @NMODE=5
		  BEGIN
			  SET @CSTEP=120
			  PRINT 'CHANGE DISCOUNT'
			  UPDATE WSL_ITEM_DETAILS SET  DISCOUNT_AMOUNT = (RATE-NET_RATE)*INVOICE_QUANTITY,MANUAL_DISCOUNT=0  
			  WHERE SP_ID=@NSPID 

			  UPDATE WSL_ITEM_DETAILS SET  DISCOUNT_PERCENTAGE =(CASE WHEN INVOICE_QUANTITY=0 THEN 0 ELSE (ISNULL(DISCOUNT_AMOUNT,0)*100)/(RATE*INVOICE_QUANTITY) END)
			  WHERE SP_ID=@NSPID 
		  END

		  SET @CSTEP=140  	
		  IF @NMODE<>6
		  BEGIN
			  SET @CSTEP=125
			  UPDATE WSL_ITEM_DETAILS SET NET_RATE=(CASE WHEN INVOICE_QUANTITY=0 THEN 0 ELSE (RATE-(DISCOUNT_AMOUNT/INVOICE_QUANTITY)) END)
			  WHERE SP_ID=@NSPID AND ISNULL(MANUAL_NET_RATE,0)=0
			  
			  SET @CSTEP=130			  
			  IF @CROUNDNETRATE='1'
				  UPDATE WSL_ITEM_DETAILS SET NET_RATE=ROUND(NET_RATE,0) WHERE SP_ID=@NSPID
				  AND ISNULL(MANUAL_NET_RATE,0)=0
			  

		  END

		  SET @CSTEP=135
		  UPDATE WSL_ITEM_DETAILS SET ITEM_ROUND_OFF=(CASE WHEN INVOICE_QUANTITY=0 THEN 0 ELSE (NET_RATE-(RATE-(DISCOUNT_AMOUNT/INVOICE_QUANTITY))) END)
		  WHERE SP_ID=@NSPID	  
			  		  	  		  	  		  
		  SET @CSTEP=145	
		  UPDATE WSL_ITEM_DETAILS SET  BASEAMOUNT_FOR_TAX = NET_RATE WHERE SP_ID=@NSPID   
		  
		  UPDATE A SET  BASEAMOUNT_FOR_TAX = BASEAMOUNT_FOR_TAX - (BASEAMOUNT_FOR_TAX*B.BILL_DISC_PCT/100)
		  FROM WSL_ITEM_DETAILS A JOIN WSL_INV_SETTINGS B ON A.SP_ID=B.SP_ID
		  WHERE A.SP_ID=@NSPID   
		  
		  SET @CSTEP=150
		  UPDATE WSL_ITEM_DETAILS SET  BASEAMOUNT_FOR_TAX = (BASEAMOUNT_FOR_TAX*INVOICE_QUANTITY)+ 
		  ISNULL(ITEM_EXCISE_DUTY_AMOUNT,0)+ISNULL(ITEM_EXCISE_EDU_CESS_AMOUNT,0)+ISNULL(ITEM_EXCISE_HEDU_CESS_AMOUNT,0)
		  WHERE SP_ID=@NSPID 

				
		  
		  IF @BGSTBILL=0
		  BEGIN
			  SET @CSTEP=155

			  IF @NINVTYPE=1
				  UPDATE WSL_ITEM_DETAILS SET ITEM_TAX_PERCENTAGE=FORM.TAX_PERCENTAGE,FORM_TAX_PERCENTAGE=FORM.TAX_PERCENTAGE,
				  FORM_NAME=FORM.FORM_NAME
				  FROM FORM  WHERE SP_ID=@NSPID  AND FORM.FORM_ID= WSL_ITEM_DETAILS.ITEM_FORM_ID 
				
			  SET @CSTEP=157
			  
			  PRINT 'CALCULATE FINAL TAX:'+ISNULL(STR(@NBILLLEVELTAXMETHOD),'NULL BLTM')
			  UPDATE WSL_ITEM_DETAILS SET  ITEM_TAX_AMOUNT = (BASEAMOUNT_FOR_TAX*ITEM_TAX_PERCENTAGE/
			  (100+(CASE WHEN ISNULL(@NBILLLEVELTAXMETHOD,0)=2 THEN ITEM_TAX_PERCENTAGE ELSE 0  END)))
			  WHERE SP_ID=@NSPID 
		  END
		  ELSE
		  BEGIN
			  SET @CSTEP=159

			  UPDATE WSL_ITEM_DETAILS SET ITEM_FORM_ID='0000000',ITEM_TAX_PERCENTAGE=0,ITEM_TAX_AMOUNT=0,
			  ROW_ID=(CASE WHEN ISNULL(ROW_ID,'')='' THEN  CONVERT(VARCHAR(35),NEWID()) ELSE ROW_ID END)
			  WHERE SP_ID=@NSPID			
			  
			   
			  		 
					 		 
		  END

		  	
		  SET @CSTEP=170  	
		  UPDATE WSL_ITEM_DETAILS SET AMOUNT=NET_RATE*INVOICE_QUANTITY,
		                              AMOUNT_MRP=mrp*INVOICE_QUANTITY
		  WHERE SP_ID=@NSPID 

		  if @XN_ITEM_TYPE=5
		  begin
		      
			  IF EXISTS (SELECT TOP 1 'U' FROM WSL_ITEM_DETAILS (NOLOCK)  WHERE SP_ID=@NSPID AND BIN_ID <>'999')
			  BEGIN
			       SET @CUTERRORMSG=' Repair & Defective Item Sold Only Defective Item Please check'
				   GOTO END_PROC 
			  END
		  end

		  --Einvoiceing Enable doen not upload negative Amount changes discuss with sanjay sir Instruction with sanjiv sir (19042022)
		  --if exists (select top 1'u' from location (nolock) where dept_id=@cLOCID and isnull(Enable_EInvoice,0)=1)
		  --begin
		       
			  UPDATE A  set Rate=RATE+(ABS(DISCOUNT_AMOUNT)/invoice_quantity),DISCOUNT_AMOUNT=0,DISCOUNT_PERCENTAGE=0
			  FROM WSL_ITEM_DETAILS A (NOLOCK)  WHERE SP_ID=@NSPID AND DISCOUNT_AMOUNT<0

		 -- end
		  	
		  	 	  
		  GOTO END_PROC
	  END TRY
	  
	  BEGIN CATCH
			PRINT 'ENTER CATCH BLOCK'
			SET @CUTERRORMSG='ERROR IN PROCEDURE SP3S_GETWSL_DATA : STEP #'+@CSTEP+' '+ERROR_MESSAGE()
			GOTO END_PROC 
	  END CATCH

END_PROC:
		PRINT 'LAST STEP:'+@CSTEP
		
	  IF ISNULL(@CUTERRORMSG,'')<>''
			UPDATE WSL_ITEM_DETAILS SET ERRMSG=@CUTERRORMSG WHERE SP_ID=@NSPID
	  ELSE
	  IF ISNULL(@CERRORMSG,'')<>'' and not exists (select  top 1 'u' from WSL_ITEM_DETAILS where   SP_ID=@NSPID and ISNULL (errmsg,'')<>'')
	  		UPDATE WSL_ITEM_DETAILS SET ERRMSG=@CERRORMSG WHERE SP_ID=@NSPID
	  
	  IF ISNULL(@CUTERRORMSG,'')='' AND ISNULL(@CUTERRORMSG,'')=''
			SELECT TOP 1 @CERRORMSG=ERRMSG FROM  WSL_ITEM_DETAILS WHERE SP_ID=@NSPID AND ISNULL(ERRMSG,'')<>''
			
			--IF  @CXNTYPE='WSL'
			--     UPDATE WSL_ITEM_DETAILS SET QUANTITY_IN_STOCK=1 WHERE INVOICE_QUANTITY < 1 AND  SP_ID=@NSPID
	  
	  IF @CXNTYPE='WSL' AND ISNULL(@BNOOUTPUT,0)<>1
	  BEGIN	
	      IF (SELECT TOP 1 'U' FROM @TERROR1) = 'U'
              SELECT * FROM @TERROR1 
          ELSE 	
          BEGIN
			  IF ISNULL(@CERRORMSG,'')=''
				 SELECT ERRMSG AS CHK_ERRMSG,* FROM WSL_ITEM_DETAILS WHERE SP_ID=@NSPID
			  ELSE
				 SELECT ERRMSG AS CHK_ERRMSG,* FROM WSL_ITEM_DETAILS WHERE SP_ID=@NSPID	AND ISNULL(ERRMSG,'')<>''
		  END
	  END   
	  
	  		
END
------------- END OF PROCEDURE SP3S_GETWSL_DATA

