CREATE PROCEDURE SP3SBUILDWSR
(
	 @CXNID			VARCHAR(50)
	,@NUPDATEMODE	NUMERIC(2)
    ,@CINSJOINSTR   VARCHAR(1000)=''
	,@CWHERECLAUSE	VARCHAR(1000)=''	
	,@NSPID			INT=0
	,@cRfTableName  varchar(500)=''
	,@cBuildXnType  VARCHAR(100)=''
	,@CERRMSG		VARCHAR(MAX) OUTPUT
)
AS
BEGIN
/*
XNTYPE FILTER IS REQUIRED DURING DELETION FROM RFOPT TABLE BECAUSE IN SOME CASES LIKE TRO FROM PIM01106
,THE INSERTED XN_ID IS THAT OF WHOLESALE INVOICE.
*/
	DECLARE @CCMD NVARCHAR(MAX),@CSTEP VARCHAR(10),
			@CCURLOCID VARCHAR(5),@CHOLOCID VARCHAR(5),@CFILTER VARCHAR(1000),@CDELSTR VARCHAR(1000),@CDELJOINSTR VARCHAR(500)
	
BEGIN TRY
	

	DECLARE @BBUILDRFOPT BIT
	
	EXEC SP3S_CHKRFOPT_BUILD @BBUILDRFOPT OUTPUT
	
	IF @BBUILDRFOPT=0
		RETURN
		
	IF @cRfTableName=''
	EXEC SP3S_RFDBTABLE 'WSR',@cXnID,@cRFTABLENAME OUTPUT 
		
	SELECT TOP 1 @CCURLOCID=VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'
	SELECT TOP 1 @CHOLOCID=VALUE FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID' 
		
	SET @CFILTER=(CASE WHEN @NUPDATEMODE IN (0,4) THEN '1=1' ELSE 'A.CN_ID='''+@CXNID+'''' END)+@CWHERECLAUSE
					 	
	--START OF BUILD PROCESS FOR CREDITNOTE TRANSACTION
		 
	 IF @NUPDATEMODE IN (3)			
	  BEGIN
	       SET @CSTEP = 110
	       SET @CCMD=N'UPDATE a SET chi_QTY=A.chi_QTY-B.chi_QTY,
	                   API_QTY=a.API_QTY-b.API_QTY,
	                   WSR_QTY=a.WSR_QTY-b.WSR_QTY,
	                   CHI_TAXABLE_VALUE=a.CHI_TAXABLE_VALUE-ISNULL(b.CHI_TAXABLE_VALUE,0),
                       CHI_TAX_AMOUNT=a.CHI_TAX_AMOUNT-ISNULL(b.CHI_TAX_AMOUNT,0),
	                   WSR_TAXABLE_VALUE=a.WSR_TAXABLE_VALUE-ISNULL(b.WSR_TAXABLE_VALUE,0),
                       WSR_TAX_AMOUNT=a.WSR_TAX_AMOUNT-ISNULL(b.WSR_TAX_AMOUNT,0)
	                  FROM '+@cRFTABLEName+' a
					  JOIN (	
					  SELECT (CASE WHEN ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>'''' AND ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>LEFT(B.CN_ID,2)
				      THEN B.BILLED_FROM_DEPT_ID ELSE LEFT(B.CN_ID,2) END) AS DEPT_ID, 
					  (CASE WHEN MODE=2 THEN CONVERT(VARCHAR,B.RECEIPT_DT,110) ELSE B.CN_DT END) AS XN_DT,
					   A.PRODUCT_CODE,
					   SUM(CASE WHEN MODE=2 THEN A.QUANTITY ELSE 0 END) AS CHI_QTY,
					   SUM(ABS(CASE WHEN MODE<>2 AND (B.BIN_TRANSFER=1 OR B.MODE=3) THEN A.QUANTITY ELSE 0 END)) AS API_QTY,
					   SUM(CASE WHEN MODE=1  AND NOT (B.BIN_TRANSFER=1 OR B.MODE=3)  THEN A.QUANTITY ELSE 0 END) AS WSR_QTY,
					   SUM(CASE WHEN MODE=1  AND NOT (B.BIN_TRANSFER=1 OR B.MODE=3)  THEN a.xn_value_without_gst ELSE 0 END) AS WSR_taxable_value,
					   SUM(CASE WHEN MODE=2  AND NOT (B.BIN_TRANSFER=1 OR B.MODE=3)  THEN a.xn_value_without_gst ELSE 0 END) AS CHI_taxable_value,
					   SUM(CASE WHEN MODE=1  AND NOT (B.BIN_TRANSFER=1 OR B.MODE=3)  THEN a.igst_amount+a.sgst_amount+a.cgst_amount ELSE 0 END) AS WSR_tax_amount,
					   SUM(CASE WHEN MODE=2  AND NOT (B.BIN_TRANSFER=1 OR B.MODE=3)  THEN a.igst_amount+a.sgst_amount+a.cgst_amount ELSE 0 END) AS CHI_tax_amount,
					   A.BIN_ID  AS [BIN_ID]
					   FROM CND01106 A (NOLOCK)  
			           JOIN CNM01106 B (NOLOCK) ON A.CN_ID = B.CN_ID   
			           LEFT OUTER JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=LEFT(B.RM_ID,2) '+@CINSJOINSTR+'
			           WHERE '+@CFILTER+'   AND (B.MODE<>2 OR B.RECEIPT_DT<>'''') AND B.CANCELLED = 0 AND B.CN_TYPE<>2
			           AND ISNULL(b.xn_item_type,0) IN (0,1)
					   GROUP BY (CASE WHEN ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>'''' AND ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>LEFT(B.CN_ID,2)
				      THEN B.BILLED_FROM_DEPT_ID ELSE LEFT(B.CN_ID,2) END),(CASE WHEN MODE=2 THEN CONVERT(VARCHAR,B.RECEIPT_DT,110) ELSE B.CN_DT END), 
				      A.PRODUCT_CODE,a.bin_id
					   ) b ON a.product_code=b.product_code AND a.xn_dt=b.xn_dt AND a.dept_id=b.dept_id AND a.bin_id=b.bin_id'
			PRINT @CCMD 
			EXEC SP_EXECUTESQL @CCMD
		   
		   IF @CCURLOCID=@CHOLOCID
		   BEGIN	 
			   SET @CSTEP = 115
			   SET @CCMD=N'UPDATE a SET git_QTY=A.git_QTY-B.git_QTY
						  FROM '+REPLACE(@cRFTABLEName,'rf_opt','rf_opt_git')+' a
						  JOIN (	
						  SELECT (CASE WHEN ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>'''' AND ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>LEFT(B.CN_ID,2)
						  THEN B.BILLED_FROM_DEPT_ID ELSE LEFT(B.CN_ID,2) END) AS DEPT_ID, 
						  B.RECEIPT_DT AS XN_DT,
						   A.PRODUCT_CODE,
						   SUM(A.QUANTITY)*-1 AS GIT_QTY,
						   A.BIN_ID  AS [BIN_ID]
						   FROM CND01106 A (NOLOCK)  
						   JOIN CNM01106 B (NOLOCK) ON A.CN_ID = B.CN_ID   
						   LEFT OUTER JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=LEFT(B.RM_ID,2) '+@CINSJOINSTR+'
						   WHERE '+@CFILTER+'   AND B.MODE=2 AND B.RECEIPT_DT<>'''' AND B.CANCELLED = 0 AND B.CN_TYPE<>2
						   AND ISNULL(b.xn_item_type,0) IN (0,1) AND ISNULL(loc.sis_loc,0)=0
						   GROUP BY (CASE WHEN ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>'''' AND ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>LEFT(B.CN_ID,2)
						  THEN B.BILLED_FROM_DEPT_ID ELSE LEFT(B.CN_ID,2) END),
						  B.RECEIPT_DT, A.PRODUCT_CODE,a.bin_id
						   ) b ON a.product_code=b.product_code AND a.xn_dt=b.xn_dt AND a.dept_id=b.dept_id AND a.bin_id=b.bin_id'
				PRINT @CCMD 
				EXEC SP_EXECUTESQL @CCMD
			END
							
			SET @CSTEP = 120	
			SET @CCMD=N'UPDATE A SET  APO_QTY=A.APO_QTY-ISNULL(B.APO_QTY,0),
			            CHO_QTY=A.CHO_QTY-ISNULL(B.CHO_QTY,0),
						CHO_TAXABLE_VALUE=a.CHO_TAXABLE_VALUE-ISNULL(b.CHO_TAXABLE_VALUE,0),
                        CHO_TAX_AMOUNT=a.CHO_TAX_AMOUNT-ISNULL(b.CHO_TAX_AMOUNT,0)			            
			         FROM '+@cRFTABLEName+' a
			         JOIN
			         (
					 SELECT (CASE WHEN ISNULL(LOC.SIS_LOC,0)=1 THEN B.PARTY_DEPT_ID 
					 ELSE (CASE WHEN ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>'''' AND ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>LEFT(B.CN_ID,2)
					 THEN B.BILLED_FROM_DEPT_ID ELSE LEFT(B.CN_ID,2) END) END) AS DEPT_ID,  
					 B.CN_DT AS XN_DT,  
					 A.PRODUCT_CODE,
					SUM(CASE WHEN B.BIN_TRANSFER=1 THEN A.QUANTITY ELSE 0 END) AS APO_QTY,  
					SUM(CASE WHEN B.BIN_TRANSFER=1 THEN 0 ELSE A.QUANTITY END) AS CHO_QTY,
				    SUM(CASE WHEN B.BIN_TRANSFER<>1 THEN a.xn_value_without_gst ELSE 0 END) AS CHO_taxable_value,
					SUM(CASE WHEN B.BIN_TRANSFER<>1 THEN a.igst_amount+a.sgst_amount+a.cgst_amount ELSE 0 END) AS CHO_tax_amount,
				    B.SOURCE_BIN_ID  AS [BIN_ID]
				   FROM CND01106 A (NOLOCK)  
				   JOIN CNM01106 B (NOLOCK) ON A.CN_ID = B.CN_ID 
				   LEFT OUTER JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=B.PARTY_DEPT_ID
				   JOIN LOCATION LOCS (NOLOCK) ON LOCS.DEPT_ID=LEFT (B.CN_ID,2) 
				   JOIN (SELECT TOP 1 * FROM  config WHERE CONFIG_OPTION=''LOCATION_ID'') CL ON 1=1
				   JOIN (SELECT TOP 1 * FROM  config WHERE CONFIG_OPTION=''HO_LOCATION_ID'') HL ON 1=1 '+@CINSJOINSTR+' 
				   WHERE '+@CFILTER+' AND (B.MODE<>2 OR B.RECEIPT_DT<>'''') AND 
				   B.CANCELLED=0 AND (B.BIN_TRANSFER=1 OR ISNULL(LOC.SIS_LOC,0)=1)  AND B.CN_TYPE<>2
				   and (CL.value =HL.value or CL.value = (CASE WHEN B.BIN_TRANSFER=1 THEN LEFT(B.CN_ID,2) ELSE B.PARTY_DEPT_ID END)) 
				   AND ISNULL(b.xn_item_type,0) IN (0,1)
				   GROUP BY (CASE WHEN ISNULL(LOC.SIS_LOC,0)=1 THEN B.PARTY_DEPT_ID 
				   ELSE (CASE WHEN ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>'''' AND ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>LEFT(B.CN_ID,2)
				   THEN B.BILLED_FROM_DEPT_ID ELSE LEFT(B.CN_ID,2) END) END),
				   B.CN_DT,A.PRODUCT_CODE,B.SOURCE_BIN_ID
				   ) b ON a.product_code=b.product_code AND a.xn_dt=b.xn_dt AND a.dept_id=b.dept_id AND a.bin_id=b.bin_id'
			PRINT @CCMD 
			EXEC SP_EXECUTESQL @CCMD
			  
	
     END

	 IF @NUPDATEMODE<>3
	 BEGIN
	    SET @CSTEP = 130
		SET @CCMD=N'UPDATE a SET chi_QTY=A.chi_QTY+(CASE WHEN '''+@cBuildXnType+''' IN (''CHI'','''') THEN B.chi_QTY ELSE 0 END),
	                   API_QTY=a.API_QTY+(CASE WHEN '''+@cBuildXnType+''' IN (''APOI'','''') THEN b.API_QTY ELSE 0 END),
	                   WSR_QTY=a.WSR_QTY+(CASE WHEN '''+@cBuildXnType+''' IN (''APO'','''') THEN b.WSR_QTY ELSE 0 END),
	                   CHI_TAXABLE_VALUE=a.CHI_TAXABLE_VALUE+(CASE WHEN '''+@cBuildXnType+''' IN (''APO'','''') THEN ISNULL(b.CHI_TAXABLE_VALUE,0) ELSE 0 END),
                       CHI_TAX_AMOUNT=a.CHI_TAX_AMOUNT+(CASE WHEN '''+@cBuildXnType+''' IN (''APO'','''') THEN ISNULL(b.CHI_TAX_AMOUNT,0) ELSE 0 END),
	                   WSR_TAXABLE_VALUE=a.WSR_TAXABLE_VALUE+(CASE WHEN '''+@cBuildXnType+''' IN (''APO'','''') THEN ISNULL(b.WSR_TAXABLE_VALUE,0) ELSE 0 END),
                       WSR_TAX_AMOUNT=a.WSR_TAX_AMOUNT+(CASE WHEN '''+@cBuildXnType+''' IN (''APO'','''') THEN ISNULL(b.WSR_TAX_AMOUNT,0) ELSE 0 END)
	                  FROM '+@cRFTABLEName+' a
					  JOIN (	
					  SELECT (CASE WHEN ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>'''' AND ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>LEFT(B.CN_ID,2)
				      THEN B.BILLED_FROM_DEPT_ID ELSE LEFT(B.CN_ID,2) END) AS DEPT_ID, 
					  (CASE WHEN MODE=2 THEN CONVERT(VARCHAR,B.RECEIPT_DT,110) ELSE B.CN_DT END) AS XN_DT,
					   A.PRODUCT_CODE,
					   SUM(CASE WHEN MODE=2 THEN A.QUANTITY ELSE 0 END) AS CHI_QTY,
					   SUM(ABS(CASE WHEN MODE<>2 AND (B.BIN_TRANSFER=1 OR B.MODE=3) THEN A.QUANTITY ELSE 0 END)) AS API_QTY,
					   SUM(CASE WHEN MODE=1  AND NOT (B.BIN_TRANSFER=1 OR B.MODE=3)  THEN A.QUANTITY ELSE 0 END) AS WSR_QTY,
					   SUM(CASE WHEN MODE=1  AND NOT (B.BIN_TRANSFER=1 OR B.MODE=3)  THEN a.xn_value_without_gst ELSE 0 END) AS WSR_taxable_value,
					   SUM(CASE WHEN MODE=2  AND NOT (B.BIN_TRANSFER=1 OR B.MODE=3)  THEN a.xn_value_without_gst ELSE 0 END) AS CHI_taxable_value,
					   SUM(CASE WHEN MODE=1  AND NOT (B.BIN_TRANSFER=1 OR B.MODE=3)  THEN a.igst_amount+a.sgst_amount+a.cgst_amount ELSE 0 END) AS WSR_tax_amount,
					   SUM(CASE WHEN MODE=2  AND NOT (B.BIN_TRANSFER=1 OR B.MODE=3)  THEN a.igst_amount+a.sgst_amount+a.cgst_amount ELSE 0 END) AS CHI_tax_amount,
					   A.BIN_ID  AS [BIN_ID]
					   FROM CND01106 A (NOLOCK)  
			           JOIN CNM01106 B (NOLOCK) ON A.CN_ID = B.CN_ID   
			           LEFT OUTER JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=LEFT(B.RM_ID,2) '+@CINSJOINSTR+'
			           WHERE '+@CFILTER+'   AND (B.MODE<>2 OR B.RECEIPT_DT<>'''') AND B.CANCELLED = 0 AND B.CN_TYPE<>2
			           AND ISNULL(b.xn_item_type,0) IN (0,1)
					   GROUP BY (CASE WHEN ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>'''' AND ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>LEFT(B.CN_ID,2)
				      THEN B.BILLED_FROM_DEPT_ID ELSE LEFT(B.CN_ID,2) END),(CASE WHEN MODE=2 THEN CONVERT(VARCHAR,B.RECEIPT_DT,110) ELSE B.CN_DT END), 
				      A.PRODUCT_CODE,a.bin_id
					   ) b ON a.product_code=b.product_code AND a.xn_dt=b.xn_dt AND a.dept_id=b.dept_id AND a.bin_id=b.bin_id'
		PRINT @CCMD 
		EXEC SP_EXECUTESQL @CCMD				
			
		SET @CSTEP = 170
		SET @CCMD=N'INSERT '+@cRFTABLEName+' 
						(DEPT_ID,XN_DT,PRODUCT_CODE,CHI_QTY,API_QTY,WSR_QTY,CHI_TAXABLE_VALUE,CHI_TAX_AMOUNT,
						WSR_TAXABLE_VALUE,WSR_TAX_AMOUNT,BIN_ID)
			     SELECT xn.DEPT_ID,xn.XN_DT,xn.PRODUCT_CODE,
			     (CASE WHEN '''+@cBuildXnType+''' IN (''APO'','''') THEN xn.CHI_QTY ELSE 0 END),
			     (CASE WHEN '''+@cBuildXnType+''' IN (''APO'','''') THEN xn.API_QTY ELSE 0 END),
			     (CASE WHEN '''+@cBuildXnType+''' IN (''APO'','''') THEN xn.WSR_QTY ELSE 0 END),
			     (CASE WHEN '''+@cBuildXnType+''' IN (''APO'','''') THEN xn.CHI_TAXABLE_VALUE ELSE 0 END),
			     (CASE WHEN '''+@cBuildXnType+''' IN (''APO'','''') THEN xn.CHI_TAX_AMOUNT ELSE 0 END),
			     (CASE WHEN '''+@cBuildXnType+''' IN (''APO'','''') THEN xn.WSR_TAXABLE_VALUE ELSE 0 END),
			     (CASE WHEN '''+@cBuildXnType+''' IN (''APO'','''') THEN xn.WSR_TAX_AMOUNT ELSE 0 END),xn.BIN_ID
			     FROM
			     (
				 SELECT (CASE WHEN ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>'''' AND ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>LEFT(B.CN_ID,2)
				 THEN B.BILLED_FROM_DEPT_ID ELSE LEFT(B.CN_ID,2) END) AS DEPT_ID,  
				 (CASE WHEN MODE=2 THEN CONVERT(VARCHAR,B.RECEIPT_DT,110) ELSE B.CN_DT END) AS XN_DT,  
				 A.PRODUCT_CODE,  
				 SUM(ABS(CASE WHEN MODE=2 THEN A.QUANTITY ELSE 0 END)) AS CHI_QTY,
				 SUM(ABS(CASE WHEN MODE<>2 AND (B.BIN_TRANSFER=1 OR B.MODE=3) THEN A.QUANTITY ELSE 0 END)) AS API_QTY,
				 SUM(CASE WHEN MODE=1  AND NOT (B.BIN_TRANSFER=1 OR B.MODE=3)  THEN A.QUANTITY ELSE 0 END) AS WSR_QTY, 
				 SUM(CASE WHEN MODE=1  AND NOT (B.BIN_TRANSFER=1 OR B.MODE=3)  THEN a.xn_value_without_gst ELSE 0 END) AS WSR_taxable_value,
				 SUM(CASE WHEN MODE=2  AND NOT (B.BIN_TRANSFER=1 OR B.MODE=3)  THEN a.xn_value_without_gst ELSE 0 END) AS CHI_taxable_value,
				 SUM(CASE WHEN MODE=1  AND NOT (B.BIN_TRANSFER=1 OR B.MODE=3)  THEN a.igst_amount+a.sgst_amount+a.cgst_amount ELSE 0 END) AS WSR_tax_amount,
				 SUM(CASE WHEN MODE=2  AND NOT (B.BIN_TRANSFER=1 OR B.MODE=3)  THEN a.igst_amount+a.sgst_amount+a.cgst_amount ELSE 0 END) AS CHI_tax_amount,
				 
				(CASE WHEN MODE=2 THEN B.BIN_ID ELSE A.BIN_ID END)  AS [BIN_ID]
			   FROM CND01106 A (NOLOCK)  
			   JOIN CNM01106 B (NOLOCK) ON A.CN_ID = B.CN_ID   
			   LEFT OUTER JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=LEFT(B.RM_ID,2) '+@CINSJOINSTR+'
			   WHERE '+@CFILTER+'   AND (B.MODE<>2 OR B.RECEIPT_DT<>'''') AND B.CANCELLED = 0 AND B.CN_TYPE<>2
			   AND ISNULL(b.xn_item_type,0) IN (0,1)
			   GROUP BY (CASE WHEN ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>'''' AND ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>LEFT(B.CN_ID,2)
			   THEN B.BILLED_FROM_DEPT_ID ELSE LEFT(B.CN_ID,2) END),
			  (CASE WHEN MODE=2 THEN CONVERT(VARCHAR,B.RECEIPT_DT,110) ELSE B.CN_DT END),
			   A.PRODUCT_CODE,(CASE WHEN MODE=2 THEN B.BIN_ID ELSE A.BIN_ID END)
			   ) XN
			   LEFT OUTER JOIN '+@cRFTABLEName+' b ON xn.dept_id=b.dept_id AND xn.xn_dt=b.xn_dt 
			   AND xn.product_code=b.product_code AND xn.bin_id=b.bin_id
			   WHERE b.product_code IS NULL'
			   
		PRINT @CCMD 
		EXEC SP_EXECUTESQL @CCMD

	   IF @CCURLOCID=@CHOLOCID AND @cBuildXnType IN ('GIT','')
	   BEGIN	 
		   SET @CSTEP = 175
		   SET @CCMD=N'UPDATE a SET git_QTY=A.git_QTY+B.git_QTY
					  FROM '+REPLACE(@cRFTABLEName,'rf_opt','rf_opt_git')+' a
					  JOIN (	
					  SELECT (CASE WHEN ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>'''' AND ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>LEFT(B.CN_ID,2)
					  THEN B.BILLED_FROM_DEPT_ID ELSE LEFT(B.CN_ID,2) END) AS DEPT_ID, 
					  B.RECEIPT_DT AS XN_DT,
					   A.PRODUCT_CODE,
					   SUM(A.QUANTITY)*-1 AS GIT_QTY,
					   A.BIN_ID  AS [BIN_ID]
					   FROM CND01106 A (NOLOCK)  
					   JOIN CNM01106 B (NOLOCK) ON A.CN_ID = B.CN_ID   
					   LEFT OUTER JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=LEFT(B.RM_ID,2) '+@CINSJOINSTR+'
					   WHERE '+@CFILTER+'   AND B.MODE=2 AND B.RECEIPT_DT<>'''' AND B.CANCELLED = 0 AND B.CN_TYPE<>2
					   AND ISNULL(b.xn_item_type,0) IN (0,1) AND ISNULL(loc.sis_loc,0)=0
					   GROUP BY (CASE WHEN ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>'''' AND ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>LEFT(B.CN_ID,2)
					  THEN B.BILLED_FROM_DEPT_ID ELSE LEFT(B.CN_ID,2) END),
					  B.RECEIPT_DT, A.PRODUCT_CODE,a.bin_id
					   ) b ON a.product_code=b.product_code AND a.xn_dt=b.xn_dt AND a.dept_id=b.dept_id AND a.bin_id=b.bin_id'
			PRINT @CCMD 
			EXEC SP_EXECUTESQL @CCMD

		   SET @CSTEP = 180
		   SET @CCMD=N'INSERT '+REPLACE(@cRFTABLEName,'rf_opt','rf_opt_git')+' 
						(DEPT_ID,XN_DT,PRODUCT_CODE,GIT_QTY,BIN_ID)
			     SELECT xn.DEPT_ID,xn.XN_DT,xn.PRODUCT_CODE,xn.GIT_QTY,xn.BIN_ID
			     FROM
			     (
					  SELECT (CASE WHEN ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>'''' AND ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>LEFT(B.CN_ID,2)
					  THEN B.BILLED_FROM_DEPT_ID ELSE LEFT(B.CN_ID,2) END) AS DEPT_ID, 
					  B.RECEIPT_DT AS XN_DT,
					   A.PRODUCT_CODE,
					   SUM(A.QUANTITY)*-1 AS GIT_QTY,
					   A.BIN_ID  AS [BIN_ID]
					   FROM CND01106 A (NOLOCK)  
					   JOIN CNM01106 B (NOLOCK) ON A.CN_ID = B.CN_ID   
					   LEFT OUTER JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=LEFT(B.RM_ID,2) '+@CINSJOINSTR+'
					   WHERE '+@CFILTER+'   AND B.MODE=2 AND B.RECEIPT_DT<>'''' AND B.CANCELLED = 0 AND B.CN_TYPE<>2
					   AND ISNULL(b.xn_item_type,0) IN (0,1) AND ISNULL(loc.sis_loc,0)=0
					   GROUP BY (CASE WHEN ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>'''' AND ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>LEFT(B.CN_ID,2)
					  THEN B.BILLED_FROM_DEPT_ID ELSE LEFT(B.CN_ID,2) END),
					  B.RECEIPT_DT, A.PRODUCT_CODE,a.bin_id
			     ) XN
			   LEFT OUTER JOIN '+@cRFTABLEName+' b ON xn.dept_id=b.dept_id AND xn.xn_dt=b.xn_dt 
			   AND xn.product_code=b.product_code AND xn.bin_id=b.bin_id
			   WHERE b.product_code IS NULL'				  
			PRINT @CCMD 
			EXEC SP_EXECUTESQL @CCMD			
		END
					
		SET @cStep=185
		SET @CCMD=N'UPDATE A SET  APO_QTY=A.APO_QTY+(CASE WHEN '''+@cBuildXnType+''' IN (''APO'','''') THEN ISNULL(B.APO_QTY,0) ELSE 0 END),
		            CHO_QTY=A.CHO_QTY+(CASE WHEN '''+@cBuildXnType+''' IN (''APO'','''') THEN ISNULL(B.CHO_QTY,0) ELSE 0 END),
					CHO_TAXABLE_VALUE=a.CHO_TAXABLE_VALUE+(CASE WHEN '''+@cBuildXnType+''' IN (''APO'','''') THEN ISNULL(b.CHO_TAXABLE_VALUE,0) ELSE 0 END),
                    CHO_TAX_AMOUNT=a.CHO_TAX_AMOUNT+(CASE WHEN '''+@cBuildXnType+''' IN (''APO'','''') THEN ISNULL(b.CHO_TAX_AMOUNT,0) ELSE 0 END)			            
		         FROM '+@cRFTABLEName+' a
		         JOIN
		         (
				 SELECT (CASE WHEN ISNULL(LOC.SIS_LOC,0)=1 THEN B.PARTY_DEPT_ID 
				 ELSE (CASE WHEN ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>'''' AND ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>LEFT(B.CN_ID,2)
				 THEN B.BILLED_FROM_DEPT_ID ELSE LEFT(B.CN_ID,2) END) END) AS DEPT_ID,  
				 B.CN_DT AS XN_DT,  
				 A.PRODUCT_CODE,
				SUM(CASE WHEN B.BIN_TRANSFER=1 THEN A.QUANTITY ELSE 0 END) AS APO_QTY,  
				SUM(CASE WHEN B.BIN_TRANSFER=1 THEN 0 ELSE A.QUANTITY END) AS CHO_QTY,
			    SUM(CASE WHEN B.BIN_TRANSFER<>1 THEN a.xn_value_without_gst ELSE 0 END) AS CHO_taxable_value,
				SUM(CASE WHEN B.BIN_TRANSFER<>1 THEN a.igst_amount+a.sgst_amount+a.cgst_amount ELSE 0 END) AS CHO_tax_amount,
			    B.SOURCE_BIN_ID  AS [BIN_ID]
			   FROM CND01106 A (NOLOCK)  
			   JOIN CNM01106 B (NOLOCK) ON A.CN_ID = B.CN_ID 
			   LEFT OUTER JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=B.PARTY_DEPT_ID
			   JOIN LOCATION LOCS (NOLOCK) ON LOCS.DEPT_ID=LEFT (B.CN_ID,2) 
			   JOIN (SELECT TOP 1 * FROM  config WHERE CONFIG_OPTION=''LOCATION_ID'') CL ON 1=1
			   JOIN (SELECT TOP 1 * FROM  config WHERE CONFIG_OPTION=''HO_LOCATION_ID'') HL ON 1=1 '+@CINSJOINSTR+' 
			   WHERE '+@CFILTER+' AND (B.MODE<>2 OR B.RECEIPT_DT<>'''') AND 
			   B.CANCELLED=0 AND (B.BIN_TRANSFER=1 OR ISNULL(LOC.SIS_LOC,0)=1)  AND B.CN_TYPE<>2
			   and (CL.value =HL.value or CL.value = (CASE WHEN B.BIN_TRANSFER=1 THEN LEFT(B.CN_ID,2) ELSE B.PARTY_DEPT_ID END)) 
			   AND ISNULL(b.xn_item_type,0) IN (0,1)
			   GROUP BY (CASE WHEN ISNULL(LOC.SIS_LOC,0)=1 THEN B.PARTY_DEPT_ID 
			   ELSE (CASE WHEN ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>'''' AND ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>LEFT(B.CN_ID,2)
			   THEN B.BILLED_FROM_DEPT_ID ELSE LEFT(B.CN_ID,2) END) END),
			   B.CN_DT,A.PRODUCT_CODE,B.SOURCE_BIN_ID
			   ) b ON a.product_code=b.product_code AND a.xn_dt=b.xn_dt AND a.dept_id=b.dept_id AND a.bin_id=b.bin_id'
		PRINT @CCMD 
		EXEC SP_EXECUTESQL @CCMD
					
		SET @CSTEP = 190
		SET @CCMD=N'INSERT '+@cRFTABLEName+' (DEPT_ID,XN_DT,PRODUCT_CODE,APO_QTY,CHO_QTY,CHO_taxable_value,CHO_tax_amount,BIN_ID)
		         SELECT xn.DEPT_ID,xn.XN_DT,xn.PRODUCT_CODE,
		         (CASE WHEN '''+@cBuildXnType+''' IN (''APO'','''') THEN xn.APO_QTY ELSE 0 END),
		         (CASE WHEN '''+@cBuildXnType+''' IN (''APO'','''') THEN xn.CHO_QTY ELSE 0 END),
		         (CASE WHEN '''+@cBuildXnType+''' IN (''APO'','''') THEN xn.CHO_taxable_value ELSE 0 END),
		         (CASE WHEN '''+@cBuildXnType+''' IN (''APO'','''') THEN xn.CHO_tax_amount ELSE 0 END),xn.BIN_ID 
		         FROM
		         (
				 SELECT (CASE WHEN ISNULL(LOC.SIS_LOC,0)=1 THEN B.PARTY_DEPT_ID 
				 ELSE (CASE WHEN ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>'''' AND ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>LEFT(B.CN_ID,2)
				 THEN B.BILLED_FROM_DEPT_ID ELSE LEFT(B.CN_ID,2) END) END) AS DEPT_ID,  
				 B.CN_DT AS XN_DT,   
				 A.PRODUCT_CODE,   
				 SUM(CASE WHEN B.BIN_TRANSFER=1 THEN A.QUANTITY ELSE 0 END) AS APO_QTY,  
				 SUM(CASE WHEN B.BIN_TRANSFER=1 THEN 0 ELSE A.QUANTITY  END) AS CHO_QTY,
			     SUM(CASE WHEN B.BIN_TRANSFER<>1 THEN a.xn_value_without_gst ELSE 0 END) AS CHO_taxable_value,
				 SUM(CASE WHEN B.BIN_TRANSFER<>1 THEN a.igst_amount+a.sgst_amount+a.cgst_amount ELSE 0 END) AS CHO_tax_amount,				 
				 B.SOURCE_BIN_ID  AS [BIN_ID]

			   FROM CND01106 A (NOLOCK)  
			   JOIN CNM01106 B (NOLOCK) ON A.CN_ID = B.CN_ID 
			   LEFT OUTER JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=B.PARTY_DEPT_ID
			   JOIN LOCATION LOCS (NOLOCK) ON LOCS.DEPT_ID=LEFT (B.CN_ID,2) 
			   JOIN (SELECT TOP 1 * FROM  config WHERE CONFIG_OPTION=''LOCATION_ID'') CL ON 1=1
               JOIN (SELECT TOP 1 * FROM  config WHERE CONFIG_OPTION=''HO_LOCATION_ID'') HL ON 1=1 '+@CINSJOINSTR+' 
			   WHERE '+@CFILTER+' AND (B.MODE<>2 OR B.RECEIPT_DT<>'''') AND 
			   B.CANCELLED=0 AND (B.BIN_TRANSFER=1 OR ISNULL(LOC.SIS_LOC,0)=1)  AND B.CN_TYPE<>2
			    and (CL.value =HL.value or CL.value = (CASE WHEN B.BIN_TRANSFER=1 THEN LEFT(B.CN_ID,2) ELSE B.PARTY_DEPT_ID END)) 
			   AND ISNULL(b.xn_item_type,0) IN (0,1)
			   GROUP BY (CASE WHEN ISNULL(LOC.SIS_LOC,0)=1 THEN B.PARTY_DEPT_ID 
				 ELSE (CASE WHEN ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>'''' AND ISNULL(B.BILLED_FROM_DEPT_ID,'''')<>LEFT(B.CN_ID,2)
				 THEN B.BILLED_FROM_DEPT_ID ELSE LEFT(B.CN_ID,2) END) END) ,  
				 B.CN_DT ,A.PRODUCT_CODE, B.SOURCE_BIN_ID
			   ) XN 
			   LEFT OUTER JOIN '+@cRFTABLEName+' b ON xn.dept_id=b.dept_id AND xn.xn_dt=b.xn_dt 
			   AND xn.product_code=b.product_code AND xn.bin_id=b.bin_id
			   WHERE b.product_code IS NULL'
		PRINT @CCMD 
		EXEC SP_EXECUTESQL @CCMD
		 
	END
	--END OF BUILD PROCESS FOR CREDITNOTE TRANSACTION

END TRY
BEGIN CATCH
	SET @CERRMSG='SP3SBUILDWSR: STEP :'+@CSTEP+',ERROR :'+ERROR_MESSAGE()
END CATCH	

ENDPROC:

END
--End of procedure - SP3SBuildWSR
