CREATE PROCEDURE SP3S_UPDATESHIFT_AMOUNT
(
	 @CXN_TYPE VARCHAR(10)
	,@CXN_ID   VARCHAR(50)
	,@NMODE    INT			/*1 : XNMODE AND 2 FOR REVERT MODE
							 BASED ON THE TYPE OF TRANSACTION AND CASH FLOW THE AMOUNT SHOULD BE 
							 CONSIDERED IN RECEIPTS/ISSUES	*/
	,@NUPDATEMODE NUMERIC(1)=1	
	,@NSPID VARCHAR(40)=''						 
	,@CERRMSGOUT VARCHAR(500) OUTPUT,
	@CDEPT_ID VARCHAR(5)=''
)
--WITH ENCRYPTION
AS
BEGIN
DECLARE @CSHIFT_ID VARCHAR(15),@CCMD NVARCHAR(MAX),@NRECEIPTS NUMERIC(18,2),@NISSUE NUMERIC(18,2)
	   ,@BTILL_ENABLED BIT,@NARC_TYPE NUMERIC(1),@CCASHIERENABLED VARCHAR(1)
	   ,@CUSER_CODE VARCHAR(10),@CVALUE VARCHAR(2)
DECLARE @CALLOW_TO_MODIFY_MEMO_OF_CLOSE_TILLS VARCHAR(10)
	   if @CDEPT_ID=''
            SELECT TOP 1 @CDEPT_ID=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
	   else
	   set @CDEPT_ID=@CDEPT_ID

SELECT @BTILL_ENABLED=ISNULL(TILL_ENABLED,0) FROM LOCATION WHERE DEPT_ID=@CDEPT_ID

SELECT TOP 1 @CCASHIERENABLED=VALUE FROM CONFIG WHERE CONFIG_OPTION='OPEN_CASHIER_FOR_CASHMEMOS'
SET @CCASHIERENABLED=ISNULL(@CCASHIERENABLED,0)
	   
IF @CXN_TYPE='TXP' ---FOR EXPENSES MADE THROUGH TILL
BEGIN
	  
	SELECT @CSHIFT_ID=SHIFT_ID FROM TILL_EXPENSE_MST WHERE MEMO_ID=@CXN_ID
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD
	
	IF NOT EXISTS(SELECT TOP 1 'U' FROM TILL_SHIFT_MST WHERE SHIFT_ID=@CSHIFT_ID AND ISNULL(CLOSE_DATE,'')='')
	BEGIN
		SET @CERRMSGOUT=' SHIFT IS NOT OPEN FOR THE TILL.TRANSACTION CANCELLED.'
		GOTO END_PROC
	END
	
	/*
	--CHECK IF THIS SHIFT IS OPEN
	IF EXISTS(SELECT TOP 1 'U' FROM TILL_SHIFT_MST WHERE SHIFT_ID=@CSHIFT_ID AND ISNULL(CLOSE_DATE,'')='')
	BEGIN
		--SHIFT IS OPEN
		--GETTING THE ISSUES AND RECEIPTS MADE IN THIS TILL EXPENSE MEMO
		SELECT  @NRECEIPTS=SUM(CASE WHEN XN_TYPE='CR' THEN AMOUNT ELSE 0 END)
			   ,@NISSUE=SUM(CASE WHEN XN_TYPE='DR' THEN AMOUNT ELSE 0 END)	
		FROM TILL_EXPENSE_DET WHERE MEM	O_ID=@CXN_ID
								
		SET @NRECEIPTS=ISNULL(@NRECEIPTS,0)
		SET @NISSUE=ISNULL(@NISSUE,0)
		
		UPDATE A SET RECEIPTS=RECEIPTS+(CASE WHEN @NMODE=2 THEN -1 ELSE 1 END)*@NRECEIPTS
					,ISSUES=ISSUES+(CASE WHEN @NMODE=2 THEN -1 ELSE 1 END)*@NISSUE
		FROM TILL_SHIFT_MST A
		WHERE SHIFT_ID=@CSHIFT_ID
	END 
	--IF SHIFT IS NOT OPEN AND TRANSACTION MODE IS 1, RETURN THE ERROR MESSAGE....
	ELSE IF @NUPDATEMODE=1
	BEGIN
		SET @CERRMSGOUT='SHIFT NOT OPENED FOR THE TILL.TRANSACTION CANCELLED.'
		GOTO END_PROC
	END
	*/ 
	GOTO END_PROC
END		

IF @CXN_TYPE='ARC' AND @BTILL_ENABLED=1
BEGIN
	--GET THE SHIFT_ID FROM ARC01106
	--SELECT @CSHIFT_ID=SHIFT_ID,@CUSER_CODE=EDT_USER_CODE FROM ARC_ARC01106_UPLOAD(NOLOCK) WHERE ADV_REC_ID=@CXN_ID AND SP_ID=@NSPID
	IF @NUPDATEMODE=2
		SELECT @CSHIFT_ID=SHIFT_ID,@CUSER_CODE=EDT_USER_CODE FROM ARC_ARC01106_UPLOAD(NOLOCK) WHERE ADV_REC_ID=@CXN_ID AND SP_ID=@NSPID
	ELSE
		SELECT @CSHIFT_ID=SHIFT_ID,@CUSER_CODE=EDT_USER_CODE FROM arc01106 WHERE adv_REC_ID=@CXN_ID

	   SELECT TOP 1 @cALLOW_TO_MODIFY_MEMO_OF_CLOSE_TILLS=VALUE FROM USER_ROLE_DET A
		JOIN USERS B ON A.ROLE_ID=B.ROLE_ID 
		WHERE USER_CODE=@CUSER_CODE 
		AND FORM_NAME='FRMADVREC' 
		AND FORM_OPTION='ALLOW_TO_MODIFY_MEMO_OF_CLOSE_TILLS'

		set @cALLOW_TO_MODIFY_MEMO_OF_CLOSE_TILLS=isnull(@cALLOW_TO_MODIFY_MEMO_OF_CLOSE_TILLS,'0')

		IF @NUPDATEMODE=1
	  	 SET @CALLOW_TO_MODIFY_MEMO_OF_CLOSE_TILLS=''

	IF ISNULL(@cALLOW_TO_MODIFY_MEMO_OF_CLOSE_TILLS,'0')='0' OR @NUPDATEMODE=1
	BEGIN
		IF NOT EXISTS(SELECT TOP 1 'U' FROM TILL_SHIFT_MST WHERE SHIFT_ID=@CSHIFT_ID AND ISNULL(CLOSE_DATE,'')='')
		BEGIN
			SET @CERRMSGOUT='SHIFT IS NOT OPEN FOR THE TILL.TRANSACTION CANCELLED.'
			GOTO END_PROC
		END
	END
	
	/*NO NEED TO UPDATE THE AMOUNT AS IT WOULD BE UPDATED WHEN THE TILL WILL BE CLOSED
	--IF THIS SHIFT IS CURRENTLY OPEN THAN UPDATE THE AMOUNT IN SHIFT
	IF EXISTS(SELECT TOP 1 'U' FROM TILL_SHIFT_MST WHERE SHIFT_ID=@CSHIFT_ID AND ISNULL(CLOSE_DATE,'')='')								    
	BEGIN
		--IF ANY CASH AMOUNT EXISTS FOR THIS TRANSACTION PROCEED FURTHER ELSE DONOT PROCEED.
		IF EXISTS(SELECT TOP 1 'U' FROM PAYMODE_XN_DET WHERE MEMO_ID=@CXN_ID 
								    AND XN_TYPE='ARC' AND PAYMODE_CODE='0000000')
		BEGIN
			SELECT @NARC_TYPE=ARC_TYPE FROM ARC01106 WHERE ADV_REC_ID=@CXN_ID
			
			SELECT @NRECEIPTS=SUM(AMOUNT) FROM PAYMODE_XN_DET 
			WHERE MEMO_ID=@CXN_ID AND XN_TYPE='ARC' AND PAYMODE_CODE='0000000'
			
			SET @NRECEIPTS=ISNULL(@NRECEIPTS,0)
				
			UPDATE A SET RECEIPTS=RECEIPTS+(CASE WHEN @NMODE=2 THEN -1 ELSE 1 END)*
										   (CASE WHEN @NARC_TYPE=1 THEN @NRECEIPTS ELSE 0 END)
						,ISSUES=ISSUES+(CASE WHEN @NMODE=2 THEN -1 ELSE 1 END)*
										   (CASE WHEN @NARC_TYPE=1 THEN 0 ELSE @NRECEIPTS END)
			FROM TILL_SHIFT_MST A
			WHERE SHIFT_ID=@CSHIFT_ID 										    	
		END
	END
	--IF SHIFT IS NOT OPEN AND TRANSACTION MODE IS 1, RETURN THE ERROR MESSAGE....
	ELSE IF @NUPDATEMODE=1
	BEGIN
		SET @CERRMSGOUT='SHIFT NOT OPENED FOR THE TILL.TRANSACTION CANCELLED.'
		GOTO END_PROC
	END 
	*/
	GOTO END_PROC
END

IF @CXN_TYPE='SLS' AND @BTILL_ENABLED=1 
BEGIN
    SET @CVALUE=0
	--GET THE SHIFT_ID FROM CMM01106
	IF @NUPDATEMODE=2
		SELECT @CSHIFT_ID=SHIFT_ID,@CUSER_CODE=EDT_USER_CODE FROM SLS_CMM01106_UPLOAD WHERE CM_ID=@CXN_ID
		AND SP_ID=@NSPID
	ELSE
		SELECT @CSHIFT_ID=SHIFT_ID,@CUSER_CODE=EDT_USER_CODE FROM CMM01106 WHERE CM_ID=@CXN_ID
	PRINT '125'
	DECLARE @CVALUE1 VARCHAR(2),@CVALUE2 VARCHAR(2)
	
	SELECT TOP 1 @CVALUE1=VALUE  
	FROM CONFIG WHERE CONFIG_OPTION='CONSIDER_TILL_PHY_CBS_AS_OPS' 

	
	IF ISNULL(@CVALUE1,0)='1'
	BEGIN
		SELECT TOP 1 @CVALUE2=VALUE FROM USER_ROLE_DET A
		JOIN USERS B ON A.ROLE_ID=B.ROLE_ID 
		WHERE USER_CODE=@CUSER_CODE 
		AND FORM_NAME='FRMSALE' 
		AND FORM_OPTION='ALLOW_TO_MODIFY_MEMO_OF_CLOSE_TILLS'
	END
	
	SET @CVALUE=(CASE WHEN ISNULL(@CVALUE1,'')='1' AND ISNULL(@CVALUE2,'')='1' THEN '1' ELSE '' END)
	
	IF ISNULL(@CVALUE,0)=0 OR @NUPDATEMODE=1
	BEGIN
	IF NOT EXISTS(SELECT TOP 1 'U' FROM TILL_SHIFT_MST WHERE SHIFT_ID=@CSHIFT_ID AND ISNULL(CLOSE_DATE,'')='')
	BEGIN
		SELECT @CERRMSGOUT='SHIFT IS NOT OPEN FOR THE TILL.TRANSACTION (SALES) .'+@CUSER_CODE+':'+STR(@NUPDATEMODE)+':'+@CVALUE1+':'+@CVALUE2
		GOTO END_PROC
	END
	END
	/*
	--IF THIS SHIFT IS CURRENTLY OPEN THAN UPDATE THE AMOUNT IN SHIFT
	IF EXISTS(SELECT TOP 1 'U' FROM TILL_SHIFT_MST WHERE SHIFT_ID=@CSHIFT_ID AND ISNULL(CLOSE_DATE,'')='')								    
	BEGIN
		--IF ANY CASH AMOUNT EXISTS FOR THIS TRANSACTION PROCEED FURTHER ELSE DONOT PROCEED.
		IF EXISTS(SELECT TOP 1 'U' FROM PAYMODE_XN_DET WHERE MEMO_ID=@CXN_ID 
								    AND XN_TYPE='SLS' AND PAYMODE_CODE='0000000')
		BEGIN								    
			SELECT @NRECEIPTS=SUM(AMOUNT) FROM PAYMODE_XN_DET 
			WHERE MEMO_ID=@CXN_ID AND XN_TYPE='SLS' AND PAYMODE_CODE='0000000'
			
			SET @NRECEIPTS=ISNULL(@NRECEIPTS,0)
				
			UPDATE A SET RECEIPTS=RECEIPTS+(CASE WHEN @NMODE=2 THEN -1 ELSE 1 END)*
										   (CASE WHEN @NRECEIPTS>0 THEN @NRECEIPTS ELSE 0 END)
						,ISSUES=ISSUES+(CASE WHEN @NMODE=2 THEN -1 ELSE 1 END)*
									   (CASE WHEN @NRECEIPTS<0 THEN ABS(@NRECEIPTS) ELSE 0 END)
			FROM TILL_SHIFT_MST A
			WHERE SHIFT_ID=@CSHIFT_ID 										    	
	   END			
	END
	--IF SHIFT IS NOT OPEN AND TRANSACTION MODE IS 1, RETURN THE ERROR MESSAGE....
	ELSE IF @NUPDATEMODE=1
	BEGIN
		SET @CERRMSGOUT='SHIFT NOT OPENED FOR THE TILL.TRANSACTION CANCELLED.'
		GOTO END_PROC
	END 
	*/
	GOTO END_PROC
END

/*NOT REQUIRED FOR WHOLESALE INVOICE RIGHT NOT SO LEAVE IT AS SUGGESTED BY SIR ON 1ST JUNE 2015
IF @CXN_TYPE='WSL' AND @BTILL_ENABLED=1 
BEGIN
	--GET THE SHIFT_ID FROM CMM01106
	SELECT @CSHIFT_ID=SHIFT_ID FROM INM01106 WHERE INV_ID=@CXN_ID
	
	--IF THIS SHIFT IS CURRENTLY OPEN THAN UPDATE THE AMOUNT IN SHIFT
	IF EXISTS(SELECT TOP 1 'U' FROM TILL_SHIFT_MST WHERE SHIFT_ID=@CSHIFT_ID AND ISNULL(CLOSE_DATE,'')='')								    
	BEGIN
		--IF ANY CASH AMOUNT EXISTS FOR THIS TRANSACTION PROCEED FURTHER ELSE DONOT PROCEED.
		IF EXISTS(SELECT TOP 1 'U' FROM PAYMODE_XN_DET WHERE MEMO_ID=@CXN_ID 
								    AND XN_TYPE='WSL' AND PAYMODE_CODE='0000000')
		BEGIN								    
			SELECT @NRECEIPTS=SUM(AMOUNT) FROM PAYMODE_XN_DET 
			WHERE MEMO_ID=@CXN_ID AND XN_TYPE='WSL' AND PAYMODE_CODE='0000000'
			
			SET @NRECEIPTS=ISNULL(@NRECEIPTS,0)
				
			UPDATE A SET RECEIPTS=RECEIPTS+(CASE WHEN @NMODE=2 THEN -1 ELSE 1 END)*
										   (CASE WHEN @NRECEIPTS>0 THEN @NRECEIPTS ELSE 0 END)
						,ISSUES=ISSUES+(CASE WHEN @NMODE=2 THEN -1 ELSE 1 END)*
									   (CASE WHEN @NRECEIPTS<0 THEN ABS(@NRECEIPTS) ELSE 0 END)
			FROM TILL_SHIFT_MST A
			WHERE SHIFT_ID=@CSHIFT_ID 										    	
	   END			
	END
	--IF SHIFT IS NOT OPEN AND TRANSACTION MODE IS 1, RETURN THE ERROR MESSAGE....
	ELSE IF @NUPDATEMODE=1
	BEGIN
		SET @CERRMSGOUT='SHIFT NOT OPENED FOR THE TILL.TRANSACTION CANCELLED.'
		GOTO END_PROC
	END 
	
	GOTO END_PROC
END
*/

IF @CXN_TYPE='CSR' AND @BTILL_ENABLED=1 
BEGIN
	--GET THE SHIFT_ID FROM CMM01106
	SELECT @CSHIFT_ID=SHIFT_ID FROM DSM01106 WHERE DS_ID=@CXN_ID
	
	IF NOT EXISTS(SELECT TOP 1 'U' FROM TILL_SHIFT_MST WHERE SHIFT_ID=@CSHIFT_ID AND ISNULL(CLOSE_DATE,'')='')
	BEGIN
		SET @CERRMSGOUT='SHIFT IS NOT OPEN FOR THE TILL.TRANSACTION CANCELLED.'
		GOTO END_PROC
	END
	
	/*
	--IF THIS SHIFT IS CURRENTLY OPEN THAN UPDATE THE AMOUNT IN SHIFT
	IF EXISTS(SELECT TOP 1 'U' FROM TILL_SHIFT_MST WHERE SHIFT_ID=@CSHIFT_ID AND ISNULL(CLOSE_DATE,'')='')								    
	BEGIN
		--IF ANY CASH AMOUNT EXISTS FOR THIS TRANSACTION PROCEED FURTHER ELSE DONOT PROCEED.
		IF EXISTS(SELECT TOP 1 'U' FROM PAYMODE_XN_DET A JOIN DSD01106 B ON A.MEMO_ID=B.CM_ID 
				  WHERE B.DS_ID=@CXN_ID AND A.XN_TYPE='SLS' AND A.PAYMODE_CODE='0000000')
		BEGIN								    
			SELECT @NRECEIPTS=SUM(A.AMOUNT) FROM PAYMODE_XN_DET A JOIN DSD01106 B ON A.MEMO_ID=B.CM_ID
			WHERE B.DS_ID=@CXN_ID AND A.XN_TYPE='SLS' AND PAYMODE_CODE='0000000'
			
			SET @NRECEIPTS=ISNULL(@NRECEIPTS,0)
				
			UPDATE A SET RECEIPTS=RECEIPTS+(CASE WHEN @NMODE=2 THEN -1 ELSE 1 END)*
										   (CASE WHEN @NRECEIPTS>0 THEN @NRECEIPTS ELSE 0 END)
						,ISSUES=ISSUES+(CASE WHEN @NMODE=2 THEN -1 ELSE 1 END)*
									   (CASE WHEN @NRECEIPTS<0 THEN ABS(@NRECEIPTS) ELSE 0 END)
			FROM TILL_SHIFT_MST A
			WHERE SHIFT_ID=@CSHIFT_ID 										    	
	   END			
	END
	--IF SHIFT IS NOT OPEN AND TRANSACTION MODE IS 1, RETURN THE ERROR MESSAGE....
	ELSE IF @NUPDATEMODE=1
	BEGIN
		SET @CERRMSGOUT='SHIFT NOT OPENED FOR THE TILL.TRANSACTION CANCELLED.'
		GOTO END_PROC
	END 
	*/
	GOTO END_PROC
END

IF @CXN_TYPE='LFT' 
BEGIN
    SET @CVALUE=0
	--GET THE SHIFT_ID FROM CMM01106
	SELECT @CSHIFT_ID=SHIFT_ID,@CUSER_CODE=EDT_USER_CODE FROM TLF_TILL_LIFTS_UPLOAD WHERE MEMO_ID=@CXN_ID AND SP_ID=@NSPID
	--SELECT @NSPID,@CXN_ID,@CUSER_CODE
	--SELECT TOP 1 @CVALUE=VALUE  
	--FROM CONFIG WHERE CONFIG_OPTION='CONSIDER_TILL_PHY_CBS_AS_OPS' 
	
	--IF ISNULL(@CVALUE,0)=1
	BEGIN
		SELECT TOP 1 @cALLOW_TO_MODIFY_MEMO_OF_CLOSE_TILLS=VALUE FROM USER_ROLE_DET A
		JOIN USERS B ON A.ROLE_ID=B.ROLE_ID 
		WHERE USER_CODE=@CUSER_CODE 
		AND FORM_NAME='FRMSALE' 
		AND FORM_OPTION='ALLOW_TO_MODIFY_MEMO_OF_CLOSE_TILLS'
	END
	
	set @cALLOW_TO_MODIFY_MEMO_OF_CLOSE_TILLS=isnull(@cALLOW_TO_MODIFY_MEMO_OF_CLOSE_TILLS,'')

		IF @NUPDATEMODE=1
	  	 SET @CALLOW_TO_MODIFY_MEMO_OF_CLOSE_TILLS=''

	IF ISNULL(@cALLOW_TO_MODIFY_MEMO_OF_CLOSE_TILLS,'0')='0' OR @NUPDATEMODE=1
	BEGIN
	IF NOT EXISTS(SELECT TOP 1 'U' FROM TILL_SHIFT_MST WHERE SHIFT_ID=@CSHIFT_ID AND ISNULL(CLOSE_DATE,'')='')
	BEGIN
		SET @CERRMSGOUT='SHIFT IS NOT OPEN FOR THE TILL.TRANSACTION CANCELLED.'
		GOTO END_PROC
	END
	END

	/*
	--IF THIS SHIFT IS CURRENTLY OPEN THAN UPDATE THE AMOUNT IN SHIFT
	IF EXISTS(SELECT TOP 1 'U' FROM TILL_SHIFT_MST WHERE SHIFT_ID=@CSHIFT_ID AND ISNULL(CLOSE_DATE,'')='')								    
	BEGIN
		
			SELECT @NISSUE=A.LIFT_AMOUNT FROM TILL_LIFTS A 
			WHERE A.MEMO_ID=@CXN_ID 
			
			SET @NISSUE=ISNULL(@NISSUE,0)
				
			UPDATE A SET ISSUES=ISSUES+(CASE WHEN @NMODE=1 THEN 1 ELSE -1 END)*@NISSUE
			/*CURRENTLY LET THE SMS BE SENT ONLY ONCE FOR A SHIFT.REMOVE THIS COMMENT			
			  WHEN AFTER CASH LIFTING, SMS NEEDS TO BE SENT AGAIN WHEN THE LIMIT CROSSES AGAIN.
			
						,LIMIT_REACHED=(CASE WHEN @NMODE=1 THEN 0 ELSE 1 END)
			*/  			
			FROM TILL_SHIFT_MST A
			WHERE SHIFT_ID=@CSHIFT_ID 										    	
	   
	END
	--IF SHIFT IS NOT OPEN AND TRANSACTION MODE IS 1, RETURN THE ERROR MESSAGE....
	ELSE IF @NUPDATEMODE=1
	BEGIN
		SET @CERRMSGOUT='SHIFT NOT OPENED FOR THE TILL.TRANSACTION CANCELLED.'
		GOTO END_PROC
	END 
	*/
	GOTO END_PROC
END

END_PROC:
END
--END OF PROCEDURE - SP3S_UPDATESHIFT_AMOUNT
