CREATE PROCEDURE SPOLAP_SEND_MIRROR_PUR_DATA
(  
  @CUPLOADEDXNID VARCHAR(50)  
 ,@BACKNOWLEDGE BIT=0 
 ,@CERRMSG VARCHAR(1000) OUTPUT  
)  
--WITH ENCRYPTION  
AS  
BEGIN  
 DECLARE @CMEMOID VARCHAR(50),@CSTEP VARCHAR(5)  
BEGIN TRY   
 SET @CSTEP=00  
   SET @CERRMSG=''
PRINT 'ENTER PURCHASE SENDING'   
   
 SET @CSTEP=10     
 
   
  SET @CMEMOID=@CUPLOADEDXNID  
 ---- IF NO MEMO FOUND , JUST END THE PROCESS  
 IF ISNULL(@CMEMOID,'')=''  
  GOTO END_PROC  

  DECLARE @nInvMode NUMERIC(1,0),@cAC_Code VARCHAR(20)
  DECLARE @cCols NVARCHAR(MAX),@cnullableCols NVARCHAR(MAX), @cCmdCols NVARCHAR(MAX)

  SELECT @nInvMode=inv_mode,@cAC_Code=ac_code FROM pim01106 (NOLOCK) WHERE mrr_id=@CUPLOADEDXNID
	
	
LBLTABLEINFO:  
 SET @CSTEP=50  
  
 IF @BACKNOWLEDGE=1  
  GOTO END_PROC  
    
 SET @CSTEP=55  
 ---- SEND THE PURCHASE MEMO MASTER TABLE  
 EXEC SP3S_GET_CURSOR_BASED_ON_OLAP_XNSSENDING_COLS @cXNTYPE='PUR',@cTABLENAME='PIM01106',@cKEYNAME='MRR_ID',@cKEYVALUE=@CMEMOID,@bSKUNAMES=0,@CERRMSG=@CERRMSG OUTPUT 
 IF ISNULL(@CERRMSG,'')<>'' 
		GOTO END_PROC
 

  IF @nInvMode=1
  BEGIN
	SET @CSTEP=65  
	---- SEND THE PURCHASE MEMO DETAIL TABLE  AND SKU_NAMES Details
	EXEC SP3S_GET_CURSOR_BASED_ON_OLAP_XNSSENDING_COLS @cXNTYPE='PUR',@cTABLENAME='PID01106',@cKEYNAME='MRR_ID',@cKEYVALUE=@CMEMOID,@bSKUNAMES=1,@bPMT=1,@CERRMSG=@CERRMSG OUTPUT 
	IF ISNULL(@CERRMSG,'')<>'' 
		GOTO END_PROC
	SET @CSTEP=75
  END
	---- SEND THE LEDGER DETAIL TABLE 
	EXEC SPOLAP_SEND_MIRROR_XNSLM_DATA @CREQXNID=@cAC_Code,@CERRMSG=@CERRMSG OUTPUT 
	IF ISNULL(@CERRMSG,'')<>'' 
		GOTO END_PROC


END TRY  
BEGIN CATCH  
 SET @CERRMSG='P: SPOLAP_SEND_MIRROR_PUR_DATA, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()  
 GOTO END_PROC  
END CATCH   
   
END_PROC:  
  
END   
---END OF PROCEDURE - SP_SEND_MIRROR_PUR_DATA_NEW  

