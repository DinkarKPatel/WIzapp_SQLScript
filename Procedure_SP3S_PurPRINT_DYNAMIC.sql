create   PROCEDURE SP3S_PurPRINT_DYNAMIC  
(  
@cMemoId VARCHAR(40)  
)  
AS  
BEGIN  
  
  
    DECLARE @cCmdCols VARCHAR(MAX),@cCmd NVARCHAR(MAX),@cCols NVARCHAR(MAX),@cCmd1 NVARCHAR(MAX),@cCmd2 NVARCHAR(MAX),@cCmd3 NVARCHAR(MAX),@cCmdIMG NVARCHAR(MAX)  
    ,@PARA1 NVARCHAR(10),@PARA2 NVARCHAR(10),@PARA3 NVARCHAR(10),@PARA4 NVARCHAR(10),@PARA5 NVARCHAR(10),@PARA6 NVARCHAR(10),  
    @cnullableCols VARCHAR(max),@CERRMSG VARCHAR(1000)  
      
  
     DECLARE @IMG_SECTION BIT,@IMG_SUB_SECTION BIT,@IMG_ARTICLE BIT,@IMG_PARA1 BIT,@IMG_PARA2 BIT,@IMG_PARA3 BIT,@IMG_PARA4 BIT,@IMG_PARA5 BIT,@IMG_PARA6 BIT,@IMG_PRODUCT BIT  
	SELECT @IMG_SECTION=SECTION,@IMG_SUB_SECTION=SUB_SECTION,@IMG_ARTICLE=ARTICLE          
		  ,@IMG_PARA1=PARA1 ,@IMG_PARA2=PARA2, @IMG_PARA3=PARA3,@IMG_PARA4=PARA4          
		  ,@IMG_PARA5=PARA5 ,@IMG_PARA6=PARA6, @IMG_PRODUCT=PRODUCT          
    FROM DBO.IMAGE_INFO_CONFIG WITH(NOLOCK)    
   
    SET @CERRMSG=''  
  DECLARE @NTAXABLEVALUE NUMERIC(14,2),@NIGST_AMOUNT NUMERIC(14,2),@NCGST_AMOUNT NUMERIC(14,2),@NSGST_AMOUNT NUMERIC(14,2)  
    
  SELECT  @NTAXABLEVALUE=ISNULL(pid.XN_VALUE_WITHOUT_GST,0)+ ISNULL(pim.OTHER_CHARGES_TAXABLE_VALUE,0)+ISNULL(pim.FREIGHT_TAXABLE_VALUE,0),  
       @NIGST_AMOUNT=ISNULL(pid.IGST_AMOUNT,0)+ISNULL(pim.OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(pim.FREIGHT_IGST_AMOUNT,0),  
       @NCGST_AMOUNT=ISNULL(pid.CGST_AMOUNT,0)+ISNULL(pim.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(pim.FREIGHT_CGST_AMOUNT,0),  
       @NSGST_AMOUNT=ISNULL(pid.SGST_AMOUNT,0)+ ISNULL(pim.OTHER_CHARGES_SGST_AMOUNT,0)+ISNULL(pim.FREIGHT_SGST_AMOUNT,0)  
  FROM pim01106  pim (NOLOCK)  
  JOIN   
  (   
     SELECT mrr_id ,  
            SUM(XN_VALUE_WITHOUT_GST) AS XN_VALUE_WITHOUT_GST,  
      SUM(IGST_AMOUNT ) AS IGST_AMOUNT,  
      SUM(CGST_AMOUNT ) AS CGST_AMOUNT,  
      SUM(SGST_AMOUNT) AS SGST_AMOUNT  
     FROM pid01106 pid (NOLOCK)  
     WHERE pid.mrr_id=@CMEMOID  
     GROUP BY mrr_id  
   ) pid ON pim.mrr_id =pid.mrr_id   
   WHERE pim.mrr_id=@cMemoId   
  
  
        SELECT TOP 1 @PARA1=VALUE FROM CONFIG WHERE config_option='PARA1_caption' AND ISNULL(VALUE,'') <>''  
        SELECT TOP 1 @PARA2=VALUE FROM CONFIG WHERE config_option='PARA2_caption' AND ISNULL(VALUE,'') <>''  
        SELECT TOP 1 @PARA3=VALUE FROM CONFIG WHERE config_option='PARA3_caption' AND ISNULL(VALUE,'') <>''  
        SELECT TOP 1 @PARA4=VALUE FROM CONFIG WHERE config_option='PARA4_caption' AND ISNULL(VALUE,'') <>''  
        SELECT TOP 1 @PARA5=VALUE FROM CONFIG WHERE config_option='PARA5_caption' AND ISNULL(VALUE,'') <>''  
        SELECT TOP 1 @PARA6=VALUE FROM CONFIG WHERE config_option='PARA6_caption' AND ISNULL(VALUE,'') <>''  
     SET @PARA1=CASE WHEN ISNULL(@PARA1,'')='' THEN 'Para1' ELSE ISNULL(@PARA1,'') END  
     SET @PARA2=CASE WHEN ISNULL(@PARA2,'')='' THEN 'Para2' ELSE ISNULL(@PARA2,'') END  
     SET @PARA3=CASE WHEN ISNULL(@PARA3,'')='' THEN 'Para3' ELSE ISNULL(@PARA3,'') END  
     SET @PARA4=CASE WHEN ISNULL(@PARA4,'')='' THEN 'Para4' ELSE ISNULL(@PARA4,'') END  
     SET @PARA5=CASE WHEN ISNULL(@PARA5,'')='' THEN 'Para5' ELSE ISNULL(@PARA5,'') END  
     SET @PARA6=CASE WHEN ISNULL(@PARA6,'')='' THEN 'Para6' ELSE ISNULL(@PARA6,'') END  
      
     SELECT @cCols=COALESCE(@cCols+',','')+column_name+' ['+DISPLAY_COLUMN_NAME+']'   
     FROM dynamic_print_cols   
     WHERE LTRIM(RTRIM(xn_type))='pur' AND selected=1  
     and DISPLAY_COLUMN_NAME<>'SizeQtyString'  
  
  
  SELECT @cnullableCols=COALESCE(@cnullableCols+',','')+'NULL as '+' ['+DISPLAY_COLUMN_NAME+']'   
  FROM dynamic_print_cols   
     WHERE LTRIM(RTRIM(xn_type))='Pur' AND selected=0  
  SET @cnullableCols=ISNULL(@cnullableCols,'')  
  IF ISNULL(@cnullableCols,'')<>''  
     SET @cnullableCols=','+ISNULL(@cnullableCols,'')  
    
      
	 SELECT PID.ROW_ID AS PID_ROW_ID, 
	     CAST('' AS VARCHAR(50)) AS  FROM_UOM_NAME,
	     CAST('' AS VARCHAR(50)) AS TO_UOM_NAME,   
		 PID.AREA_LENGTH AS AREA_LENGTH,  
		 PID.AREA_WIDTH AS AREA_WIDTH,  
		 PID.AREA_SQARE AS AREA_SQARE,  
		 PID.AREA_RATE_PP AS AREA_RATE_PP,  
		 PID.RATE_AREA_SQUARE AS RATE_AREA_SQUARE  ,
		 CAST('' AS VARCHAR(100)) AS PO_NO,
		 cast('' as varchar(100)) as Po_dt
	 INTO #TMPBOD  
	 FROM PID01106 PID (NOLOCK)  
	 WHERE 1=2
 
   
		SELECT A.ROW_ID,a.po_id  ,b.RefRowId as Po_row_id,a.AREA_LENGTH,a.AREA_WIDTH,a.AREA_SQARE,
		       a.AREA_RATE_PP,a.RATE_AREA_SQUARE,AREA_UOM_CODE
		into #tmppid
		from pid01106  A (nolock)
		join PurchaseOrderProcessingNew b (nolock) on a.row_id =b.RowId 
		where A.mrr_id=@CMEMOID  and b.XnType ='PurchaseInvoice'
    
    
  
     
     if exists (select top 1 'U' from #tmppid)
     begin
     
     insert into #tmpBod(PID_ROW_ID,FROM_UOM_NAME,TO_UOM_NAME,AREA_LENGTH,AREA_WIDTH,AREA_SQARE,AREA_RATE_PP,RATE_AREA_SQUARE,PO_NO,po_dt)
     
	 SELECT PID.ROW_ID AS PID_ROW_ID,  FROM_UOM_NAME,TO_UOM_NAME,   
		 isnull(bod.AREA_LENGTH,pid.AREA_LENGTH) as AREA_LENGTH,  
		 isnull(bod.AREA_WIDTH,pid.AREA_WIDTH) as AREA_WIDTH,  
		 isnull(bod.AREA_SQARE,pid.AREA_SQARE) as AREA_SQARE,  
		 isnull(bod.AREA_RATE_PP,pid.AREA_RATE_PP) as AREA_RATE_PP,  
		 isnull(bod.RATE_AREA_SQUARE,pid.RATE_AREA_SQUARE) as RATE_AREA_SQUARE  ,
		 cast(POM.PO_NO as varchar(1000)) as Po_no ,convert(varchar(10),pom.po_dt,121)  as po_dt
	 from #tmppid pid (nolock)  
	 join pod01106 pod (nolock) on pid.po_row_id=pod.row_id   
	 join pom01106 pom (nolock) on pod.po_id =pom.po_id 
	 left join  BUYER_ORDER_DET BOD (NOLOCK) on bod.row_id=pod.wod_row_id  
	 LEFT JOIN STANDARD_UOM SUOM (NOLOCK) ON SUOM.UOM_CODE=isnull(BOD.AREA_UOM_CODE,pid.AREA_UOM_CODE)  
	 
	--against multiple po to one pi check 
	 if exists (select top 1 'ú' from #tmpBod group by PID_ROW_ID having count(*)>1)
	 begin
	       
	      
	      UPDATE A SET PO_NO  =B.PO_NO,PO_DT =B.PO_DT  FROM  #TMPBOD A
		  LEFT OUTER JOIN 
		  (

			 SELECT 	A.PID_ROW_ID ,
			 PO_NO=(SELECT STUFF((SELECT CASE WHEN ISNULL(PO_NO ,'') <> '' THEN ' , ' ELSE '' END +PO_NO FROM #TMPBOD  B  WHERE A.PID_ROW_ID  =B.PID_ROW_ID 
			 GROUP BY PO_NO  FOR XML PATH('')),1,2,'')) ,
			  PO_DT=(SELECT STUFF((SELECT CASE WHEN ISNULL(PO_DT ,'') <> '' THEN ' , ' ELSE '' END +CAST(PO_DT AS VARCHAR(10)) FROM #TMPBOD  B  WHERE A.PID_ROW_ID  =B.PID_ROW_ID 
			 GROUP BY PO_DT  FOR XML PATH('')),1,2,'')) 
			FROM #TMPBOD A
			GROUP BY A.PID_ROW_ID

		  ) B ON A.PID_ROW_ID =B.PID_ROW_ID 
		
		 ;WITH CTE AS
		 (
		   SELECT *,SR=ROW_NUMBER() OVER (PARTITION BY PID_ROW_ID ORDER BY PID_ROW_ID) FROM #TMPBOD
		 )
		 
		 DELETE FROM CTE WHERE SR>1
	 
	 end
	 
	end
	 
	  
	 SELECT TOP 1  PARCEL_MEMO_NO,PARCEL_MEMO_DT,  
			B.DEPT_ID PARCEL_DEPT_ID,A.PARCEL_MEMO_ID  ,
			ANLMP.MOBILE AS TRANSPORTER_MOBILE ,
            ANLMP.AC_GST_NO TRANSPORTER_GSTNO ,ANLMP.E_MAIL TRANSPORTER_EMAIL 
		 INTO #TMPPARCEL  
	 FROM PARCEL_DET A (NOLOCK)  
	 JOIN PARCEL_MST B (NOLOCK) ON A.PARCEL_MEMO_ID=B.PARCEL_MEMO_ID  
	 LEFT OUTER JOIN ANGM (NOLOCK) ON ANGM.ANGADIA_CODE =B.ANGADIA_CODE  
     LEFT JOIN LMP01106 ANLMP (NOLOCK) ON ANLMP.AC_CODE =ANGM.AC_CODE  
	 WHERE B.XN_TYPE ='PUR' AND A.REF_MEMO_ID=@CMEMOID  
  
   DECLARE @CSPID VARCHAR(100),@CTABLENAME VARCHAR(100)  
  
  SET @CSPID=LTRIM(RTRIM(STR(@@SPID )))  
  SET @CTABLENAME  ='##TMPPURPRINT'+@CSPID  
  
 SET @CCMD = N'IF OBJECT_ID(''TEMPDB..'+@CTABLENAME+''',''U'') IS NOT NULL  
            DROP TABLE '+@CTABLENAME+''  
 PRINT @CCMD  
    EXEC SP_EXECUTESQL @CCMD  
  
  --select @cCols  
    SET @cCmdCols=N'  
    SELECT '+@cCols+',  
    '''+@para1 +''' AS PARA1_CONFIG,'''+@PARA2 +''' AS PARA2_CONFIG,'''+@PARA3 +''' AS PARA3_CONFIG,  
    '''+@PARA4 +''' AS PARA4_CONFIG,'''+@PARA5 +''' AS PARA5_CONFIG,'''+@PARA6 +''' AS PARA6_CONFIG,  
    DBO.FN_CONVERTAMOUNTINWORDS(pim.total_amount) AS  NET_AMOUNT_IN_WORDS,  
    '+RTRIM(LTRIM(STR(@NTAXABLEVALUE ,14,2)))+' as Total_Taxable_value,  
    '+RTRIM(LTRIM(STR(@NIGST_AMOUNT,14,2)))+' as Total_Igst_Amount,  
    '+RTRIM(LTRIM(STR(@NSGST_AMOUNT,14,2)))+' as Total_Sgst_Amount,  
    '+RTRIM(LTRIM(STR(@NCGST_AMOUNT,14,2)))+' as Total_Cgst_amount  
     '+@cnullableCols  
    +'  INTO '+@CTABLENAME+'  '  
    SET @cCmd=N' 
	  FROM PIM01106 PIM (NOLOCK)    
      JOIN LMV01106 lmv (NOLOCK) ON PIM.AC_CODE = lmv.AC_CODE 
	  LEFT OUTER JOIN LMV01106 LMVOEM (NOLOCK) ON LMVOEM.AC_CODE=PIM.SHIPPING_FROM_AC_CODE  
	  JOIN HD01106 HD (NOLOCK) ON lmv.HEAD_CODE=HD.HEAD_CODE   
      JOIN USERS (NOLOCK) ON PIM.USER_CODE = USERS.USER_CODE    
      JOIN PID01106 PID (NOLOCK) ON PIM.MRR_ID = PID.MRR_ID  
	  JOIN LOCATION LCT (NOLOCK) ON PIM.DEPT_ID=LCT.DEPT_ID    
      JOIN AREA LA (NOLOCK) ON LCT.AREA_CODE=LA.AREA_CODE    
      JOIN CITY LC (NOLOCK) ON LA.CITY_CODE=LC.CITY_CODE    
      JOIN [STATE] LS (NOLOCK) ON LC.STATE_CODE=LS.STATE_CODE    
	  JOIN REGIONM LRG (NOLOCK) ON LS.REGION_CODE=LRG.REGION_CODE   
	 JOIN LOCATION TLOC (NOLOCK)  ON TLOC.DEPT_ID=PIM.PUR_FOR_DEPT_ID   
     JOIN AREA TLA (NOLOCK) ON TLOC.AREA_CODE=TLA.AREA_CODE    
     JOIN CITY TLC (NOLOCK) ON TLA.CITY_CODE=TLC.CITY_CODE    
     JOIN [STATE] TLS (NOLOCK) ON TLC.STATE_CODE=TLS.STATE_CODE    
      LEFT OUTER JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE = PID.PRODUCT_CODE  and isnull(SKU.PRODUCT_CODE,'''')<>''''  
      JOIN PARA1 P1 (NOLOCK) ON ISNULL(SKU.PARA1_CODE, PID.PARA1_CODE) = P1.PARA1_CODE    
      JOIN PARA2 P2 (NOLOCK) ON ISNULL(SKU.PARA2_CODE,PID.PARA2_CODE) = P2.PARA2_CODE    
      JOIN PARA3 P3 (NOLOCK) ON ISNULL(SKU.PARA3_CODE,PID.PARA3_CODE) = P3.PARA3_CODE    
      JOIN PARA4 P4 (NOLOCK) ON ISNULL(SKU.PARA4_CODE,PID.PARA4_CODE) = P4.PARA4_CODE    
      JOIN PARA5 P5 (NOLOCK) ON ISNULL(SKU.PARA5_CODE,PID.PARA5_CODE) = P5.PARA5_CODE    
      JOIN PARA6 P6 (NOLOCK) ON ISNULL(SKU.PARA6_CODE,PID.PARA6_CODE) = P6.PARA6_CODE    
      JOIN ARTICLE ART (NOLOCK) ON ISNULL(SKU.ARTICLE_CODE,PID.ARTICLE_CODE) = ART.ARTICLE_CODE  
	  JOIN SECTIOND SD (NOLOCK) ON ART.SUB_SECTION_CODE=SD.SUB_SECTION_CODE    
      JOIN SECTIONM SM (NOLOCK) ON SD.SECTION_CODE=SM.SECTION_CODE
	  JOIN UOM UOM (NOLOCK) ON ART.UOM_CODE = UOM.UOM_CODE   
      LEFT OUTER JOIN ARTICLE_FIX_ATTR ATTR  (NOLOCK) ON ART.ARTICLE_CODE = ATTR.ARTICLE_CODE   
      LEFT JOIN ART_NAMES (NOLOCK) ON ART_NAMES.ARTICLE_CODE=ATTR.ARTICLE_CODE  
      LEFT JOIN EMPLOYEE EMP (NOLOCK) ON EMP.EMP_CODE=PIM.EMP_CODE
      '

    SET @cCmd1=N'  JOIN COMPANY CMP (NOLOCK) ON CMP.COMPANY_CODE =''01''   
      JOIN AREA CA (NOLOCK) ON CMP.AREA_CODE=CA.AREA_CODE    
      JOIN CITY CC (NOLOCK) ON CA.CITY_CODE=CC.CITY_CODE    
      JOIN [STATE] CS (NOLOCK) ON CC.CITY_CODE=CS.STATE_CODE    
      JOIN REGIONM CRG (NOLOCK) ON CS.REGION_CODE=CRG.REGION_CODE    
	  left join #tmpBod BOD ON BOD.PID_ROW_ID=pId.ROW_ID   
	  left join #tmpParcel prcl on 1=1  
	  LEFT JOIN LM_BANK_DETAIL BD (NOLOCK) ON BD.AC_CODE =LCT.CONTROL_AC_CODE  
	  LEFT JOIN LM_BANK_DETAIL PBD (NOLOCK) ON PBD.AC_CODE =Pim.AC_CODE 
      '    
  
  
  IF CHARINDEX('PROD_IMAGE',@CCOLS)>0  
     SET @cCmdIMG=N'LEFT OUTER JOIN ' + DB_NAME()+ '_IMAGE..IMAGE_INFO IMG (NOLOCK) ON 1=1 ' +  
      (CASE WHEN @IMG_SECTION = 1 THEN 'AND IMG.SECTION_CODE=SM.SECTION_CODE' ELSE ''  END) +  
      (CASE WHEN @IMG_SUB_SECTION = 1 THEN ' AND IMG.SUB_SECTION_CODE=SD.SUB_SECTION_CODE' ELSE '' END) +  
      (CASE WHEN @IMG_ARTICLE = 1 THEN ' AND IMG.ARTICLE_CODE=ART.ARTICLE_CODE' ELSE '' END) +  
      (CASE WHEN @IMG_PARA1 = 1 THEN ' AND IMG.PARA1_CODE=P1.PARA1_CODE' ELSE '' END) +  
      (CASE WHEN @IMG_PARA2 = 1 THEN ' AND IMG.PARA2_CODE=P2.PARA2_CODE' ELSE '' END) +  
      (CASE WHEN @IMG_PARA3 = 1 THEN ' AND IMG.PARA3_CODE=P3.PARA3_CODE' ELSE '' END) +  
      (CASE WHEN @IMG_PARA4 = 1 THEN  ' AND IMG.PARA4_CODE=P4.PARA4_CODE' ELSE '' END) +  
      (CASE WHEN @IMG_PARA5 = 1 THEN  ' AND IMG.PARA5_CODE=P5.PARA5_CODE' ELSE '' END) +  
      (CASE WHEN @IMG_PARA6 = 1 THEN  ' AND IMG.PARA6_CODE=P6.PARA6_CODE' ELSE '' END) +  
      (CASE WHEN @IMG_PRODUCT = 1 THEN  'AND IMG.PRODUCT_CODE=SKU.PRODUCT_CODE' ELSE '' END)  
   +' WHERE pim.mrr_id='''+@cMemoId+''''         
     ELSE  
           SET @cCmdIMG=N' WHERE PIM.mrr_id='''+@cMemoId+''''  
         
       print 'cCmdCols '+@cCmdCols  
       print @cCmd  
    print @cCmd1  
    print @cCmdIMG  
       
       EXEC(@cCmdCols+@cCmd+@cCmd1+@cCmdIMG)  
          
        declare @CsizeQTY VARCHAR(max)  
        SET @CsizeQTY=''  
  
     IF EXISTS (SELECT TOP 1 'U'  FROM dynamic_print_cols WHERE LTRIM(RTRIM(xn_type))='PUR' AND selected=1 and DISPLAY_COLUMN_NAME='SizeQtyString')  
    BEGIN  
         SET @CsizeQTY=N',(SELECT STUFF((SELECT CASE WHEN ISNULL(para2_name,'''') <> '''' THEN ''  '' ELSE '''' END +para2_name+ ''/''+RTRIM(LTRIM(STR((SUM(QUANTITY)))))    
       FROM '+@CTABLENAME+'  B  WHERE A.article_no  =B.article_no AND A.para1_name =B.para1_name AND A.RATE=B.RATE  
    GROUP BY ARTICLE_no,PARA1_NAME,RATE,CASE WHEN ISNULL(para2_name,'''') <> '''' THEN ''  '' ELSE '''' END +para2_name  FOR XML PATH('''')),1,2,''''))    as [SIZEQTY]'  
   END  
    
   
      
 END_PROC:  
         
    IF ISNULL(@CERRMSG,'')<>''   
    BEGIN  
     SELECT @CERRMSG AS ERRMSG   
    END  
    ELSE   
    BEGIN  
           
   SET @CCMD = N'SELECT * '+@CsizeQTY+'  
   FROM '+@CTABLENAME+' A '  
   PRINT @CCMD  
   EXEC SP_EXECUTESQL @CCMD      
    END  
  
      
  SET @CCMD = N'IF OBJECT_ID(''TEMPDB..'+@CTABLENAME+''',''U'') IS NOT NULL  
       DROP TABLE '+@CTABLENAME+''  
  PRINT @CCMD  
  EXEC SP_EXECUTESQL @CCMD  
  
  
END  
  
  
/*  
exec SP3S_WSLPRINT_DYNAMIC 'JM01120000JM/IS-000006'  
  
*/  