CREATE PROCEDURE VALIDATEXN_SLS_OPT  
 @CXNID VARCHAR(50),   
 @NUPDATEMODE INT,
 @CUSERCODE CHAR(7)='',
 @DCURRENTDATE DATETIME='',
 @NMEMONOLEN INT=0,
 @CERRORMSG VARCHAR(200) OUTPUT  
-- WITH ENCRYPTION  
AS  
BEGIN  
	PRINT 'VALIDATEXN_SLS_OPT-1'
	 DECLARE @NCMDGROSS NUMERIC(10,2),@NCMDNET NUMERIC (10,2), @NCMDTOT NUMERIC (10,2),  
		@NCMDDISC NUMERIC (10,2),@NCMMDISC NUMERIC (10,2),@NCMMNET NUMERIC (10,2),  
		@NCMMSTOT NUMERIC(10,2),@LCANCELLED BIT,@NCMMODE NUMERIC(1), @NCMMDISCPER NUMERIC (10,3),@CCMMCC CHAR(2),  
		@NCMDNETWOTAX NUMERIC (10,2), @NCMDEXCLTAX NUMERIC(10,2), @NCALCDISCOUNTAMT NUMERIC(14,2),@NDISCOUNTAMT NUMERIC(14,2),  
		@NPAYMODECRAMT NUMERIC(10,2), @NPAYMODETOTAMT NUMERIC(10,2),@CITEMNAME VARCHAR(100),@NATDCHARGES NUMERIC(10,2),
		@CERRITEMCODE VARCHAR(50),@NMINPRICE NUMERIC(10,2),@NITEMNET NUMERIC(10,2),@CCMDERRORMSG VARCHAR(MAX) ,
		@CCMD VARCHAR(MAX),@NTOTAMOUNT NUMERIC(14,2),@NGROSSVAL NUMERIC(10,2),@NPARTYTYPE INT,@CCUSTOMERCODE VARCHAR(20),
		@CFINYEAR VARCHAR(10),@NNETAMOUNT NUMERIC(10,2),@CACCODE CHAR(10),@DCMDT DATETIME,@CCMID VARCHAR(40) ,
		@CDISALLOWMIXINGINCEXC VARCHAR(5)  

	
	 IF @NUPDATEMODE NOT IN (1,4,5)
	 BEGIN
		EXEC VALIDATEXN_SLS_BEFORE_EDIT @CXNID,0,@CCMD OUTPUT,@CCMDERRORMSG OUTPUT
		
		IF ISNULL(@CCMD,'')<>''
		BEGIN
			SET @CERRORMSG=@CCMD
			
			IF ISNULL(@CCMDERRORMSG,'')<>''
				EXEC SP_EXECUTESQL @CCMDERRORMSG
			
			GOTO END_PROC	
		END
	 END
	 
	 PRINT 'VALIDATEXN_SLS_OPT-2'	
	 DECLARE @TCMMTABLE TABLE (CM_ID VARCHAR(22),CM_MODE NUMERIC (5,0),DISCOUNT_PERCENTAGE NUMERIC (7,3),
			 DISCOUNT_AMOUNT NUMERIC (10,2),NET_AMOUNT NUMERIC (10,2),ATD_CHARGES NUMERIC (10,2), ROUND_OFF NUMERIC (10,2), 
			 CUSTOMER_CODE CHAR(12), CM_NO CHAR(15),SUBTOTAL NUMERIC(10,2), FIN_YEAR VARCHAR(10),
			 CM_DT DATETIME,USER_CODE CHAR(7),AC_CODE CHAR(10),MANUAL_DISCOUNT BIT,PARTY_TYPE INT )  
	    
	    
	 INSERT @TCMMTABLE   
	 SELECT CM_ID, CM_MODE, DISCOUNT_PERCENTAGE, DISCOUNT_AMOUNT, NET_AMOUNT,ATD_CHARGES , ROUND_OFF , 
		  CUSTOMER_CODE, CM_NO, SUBTOTAL+SUBTOTAL_R, FIN_YEAR, CM_DT,@CUSERCODE AS EDT_USER_CODE, AC_CODE,MANUAL_DISCOUNT,PARTY_TYPE
	 FROM CMM01106 (NOLOCK) WHERE CM_ID=@CXNID  
	  
	  
	 PRINT 'VALIDATEXN_SLS_OPT-3' 
	 DECLARE @TCMDTABLE TABLE (CM_ID VARCHAR(22),PRODUCT_CODE VARCHAR(50),QUANTITY NUMERIC(10,3),MRP NUMERIC (10,2),NET NUMERIC (10,2),  
			  DISCOUNT_PERCENTAGE NUMERIC(7,3), DISCOUNT_AMOUNT NUMERIC (10,2),RFNET NUMERIC (10,2),  
			  TAX_AMOUNT NUMERIC(10,2), TAX_METHOD NUMERIC(1),MANUAL_DISCOUNT BIT)  
			  
	 INSERT @TCMDTABLE 
	 SELECT CM_ID,PRODUCT_CODE,QUANTITY,MRP,NET, DISCOUNT_PERCENTAGE, DISCOUNT_AMOUNT, RFNET, 
	 TAX_AMOUNT, TAX_METHOD  ,MANUAL_DISCOUNT
	 FROM CMD01106 (NOLOCK) WHERE CM_ID=@CXNID  
	 
	 PRINT 'VALIDATEXN_SLS_OPT-4' 
	 DECLARE @CPAYMODETABLE TABLE ( PAYMODE_GRP_CODE CHAR(7), PAYMODE_CODE CHAR(7), AMOUNT NUMERIC(10,2)  )  
	  
	 INSERT @CPAYMODETABLE  
	 SELECT B.PAYMODE_GRP_CODE, A.PAYMODE_CODE, A.AMOUNT   
	 FROM PAYMODE_XN_DET A  (NOLOCK)  
	 JOIN PAYMODE_MST B (NOLOCK) ON A.PAYMODE_CODE = B.PAYMODE_CODE  
	 WHERE MEMO_ID = @CXNID AND XN_TYPE = 'SLS'  
	 	 
	 SELECT @NPAYMODECRAMT  = SUM(CASE WHEN PAYMODE_GRP_CODE='0000004' THEN AMOUNT ELSE 0 END),  
	 @NPAYMODETOTAMT = SUM(AMOUNT) FROM @CPAYMODETABLE 
	  
	 SET @NPAYMODECRAMT  = ISNULL(@NPAYMODECRAMT,0)  
	 SET @NPAYMODETOTAMT = ISNULL(@NPAYMODETOTAMT,0)  
	
	 PRINT 'VALIDATEXN_SLS_OPT-5'
	 
	 SELECT @CCUSTOMERCODE=CUSTOMER_CODE,@CACCODE=AC_CODE,@NPARTYTYPE=PARTY_TYPE,@DCMDT=CM_DT,@CFINYEAR=FIN_YEAR,
	 @CCMID=CM_ID,@NNETAMOUNT=NET_AMOUNT FROM @TCMMTABLE
	 	      
	 IF @NPAYMODECRAMT<>0 AND ((@NPARTYTYPE<>2 AND @CCUSTOMERCODE IN ('000000000000','')) OR 
							   (@NPARTYTYPE=2 AND  @CACCODE IN ('000000000000','')))
	 BEGIN  
		SET @CERRORMSG='BLANK OR INACTIVE CUSTOMER NAME NOT ALLOWED FOR CREDIT SALE....PLEASE CHECK'  
		RETURN  
	 END  

     PRINT 'VALIDATEXN_SLS_OPT-7'+STR(@NNETAMOUNT,10,2)+STR(@NPAYMODETOTAMT,10,2)
	 IF @NNETAMOUNT<>@NPAYMODETOTAMT
	 BEGIN  
		 PRINT 'VALIDATEXN_SLS_OPT-7 FAILED'
	 	 SET @CERRORMSG='NET AMOUNT '+STR(@NNETAMOUNT,14,2)+' SHOULD BE EQUAL TO THE SUM OF ALL PAYMENT MODES '+STR(@NPAYMODETOTAMT,14,2)+'...PLEASE CHECK'  
		 RETURN  
	 END  
	 
	 IF @NUPDATEMODE=4 --- NO MORE VALIDATIONS REQUIRED IF CALLED FROM CASHIER MODULE SAVETRAN
		RETURN
			 
	 PRINT 'VALIDATEXN_SLS_OPT-6' 
	 IF @CFINYEAR<>'01'+DBO.FN_GETFINYEAR(@DCMDT)  
	 BEGIN  
		 SET @CERRORMSG='MISMATCH BETWEEN BILL DATE & FIN YEAR ..... PLEASE CHECK'  
		 RETURN  
	 END  
	     
	 IF @CFINYEAR<>SUBSTRING(@CCMID,3,5)  
	 BEGIN  
		 SET @CERRORMSG='MISMATCH BETWEEN BILL ID & FIN YEAR ..... PLEASE CHECK'  
		 RETURN  
	 END  
     

	 
	 --SELECT PRODUCT_CODE,* FROM @TCMDTABLE
	 IF NOT EXISTS (SELECT TOP 1 PRODUCT_CODE FROM @TCMDTABLE)
	 BEGIN  
		SET @CERRORMSG='BLANK MEMO DETAILS CANNOT BE SAVED.....PLEASE CHECK'  
		RETURN  
	 END   
	  	 
	 SELECT TOP 1 @CERRITEMCODE=A.PRODUCT_CODE,@NMINPRICE=C.MIN_PRICE,@NITEMNET=A.RFNET 
	 FROM @TCMDTABLE A
	 JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
	 JOIN ARTICLE C (NOLOCK) ON C.ARTICLE_CODE=B.ARTICLE_CODE
	 WHERE C.MIN_PRICE<>0 AND ABS(A.RFNET)<C.MIN_PRICE
	 IF ISNULL(@CERRITEMCODE,'')<>''
	 BEGIN
		SET @CERRORMSG='MINIMUM PRICE FOR ITEM CODE : '+LTRIM(RTRIM(@CERRITEMCODE)) + ' : '+LTRIM(RTRIM(STR(@NITEMNET)))+
					   ' CANNOT BE LESS THAN :'+LTRIM(RTRIM(STR(@NMINPRICE)))
		RETURN			   
	 END
	 
	 SELECT TOP 1 @CDISALLOWMIXINGINCEXC=VALUE FROM CONFIG WHERE CONFIG_OPTION='DISALLOW_MIXING_INCLUSIVE_EXCLUSIVE'
	 
	 
	 IF ISNULL(@CDISALLOWMIXINGINCEXC,'')='1'	 
	 BEGIN
		 IF EXISTS (SELECT CM_ID,COUNT(DISTINCT TAX_METHOD) FROM @TCMDTABLE GROUP BY CM_ID HAVING COUNT(DISTINCT TAX_METHOD)>1)
		 BEGIN  
			SET @CERRORMSG='INCLUSIVE AND EXCLUSIVE TAX ITEMS CAN NOT BE CLUBBED IN A SINGLE BILL.....PLEASE CHECK'  
			RETURN  
		 END  
	 END
	 --PRINT 'VALIDATEXN_SLS_OPT-8'    
	 IF  EXISTS (SELECT TOP 1 CM_ID FROM @TCMDTABLE WHERE MANUAL_DISCOUNT=0 AND  ABS(DISCOUNT_AMOUNT)-ABS(MRP*QUANTITY*DISCOUNT_PERCENTAGE/100)>1)  
	 BEGIN  
		SELECT TOP 1 @CERRITEMCODE=PRODUCT_CODE, @NDISCOUNTAMT=A.DISCOUNT_AMOUNT,  
		  @NCALCDISCOUNTAMT=(A.MRP*QUANTITY*DISCOUNT_PERCENTAGE/100)  
		FROM @TCMDTABLE A   
		WHERE ABS(A.DISCOUNT_AMOUNT)-ABS(A.MRP*A.QUANTITY*A.DISCOUNT_PERCENTAGE/100)>1  
	    
		SET @CERRORMSG='MISMATCH BETWEEN ITEM LEVEL EXPECTED DISCOUNT AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NCALCDISCOUNTAMT,0))))+') &  
		  UPDATED DISCOUNT AMOUNT ('+LTRIM(RTRIM(STR(ISNULL(@NDISCOUNTAMT,0))))+') FOR ITEM CODE : '+ISNULL(@CERRITEMCODE,'')+'..... CANNOT SAVE '  
	  
		RETURN  
	 END  
	 	    
	 IF  EXISTS (SELECT TOP 1 CM_ID FROM @TCMDTABLE WHERE (((MRP*QUANTITY)-DISCOUNT_AMOUNT)-NET>=1))  
	 BEGIN  
		SELECT TOP 1 @CERRITEMCODE=PRODUCT_CODE,@NITEMNET=NET,@NGROSSVAL=MRP*QUANTITY,@NDISCOUNTAMT=DISCOUNT_AMOUNT
		FROM @TCMDTABLE WHERE (((MRP*QUANTITY)-DISCOUNT_AMOUNT)-NET>=1)  
	    
		SET @CERRORMSG='ITEM LEVEL NET AMOUNT ('+LTRIM(RTRIM(STR(@NITEMNET,10,2)))+') IS NOT EQUAL TO DIFFERENCE OF
		  GROSS SALE VALUE ('+LTRIM(RTRIM(STR(@NGROSSVAL,10,2)))+') & DISCOUNT AMOUNT ('+LTRIM(RTRIM(STR(@NDISCOUNTAMT,10,2)))+' FOR ITEM CODE : '+@CERRITEMCODE+')..... CANNOT SAVE '  
	  
		RETURN  
	 END    
	         
	 SELECT	@NCMDGROSS = SUM(QUANTITY*MRP),   
				@NCMDNETWOTAX= SUM(NET),  
				@NCMDNET = SUM(NET + (CASE WHEN TAX_METHOD=2 THEN TAX_AMOUNT ELSE 0 END) ),  
				@NCMDTOT = SUM(RFNET),  
				@NCMDDISC = SUM(DISCOUNT_AMOUNT),  
				@NCMDEXCLTAX = SUM(CASE WHEN TAX_METHOD=2 THEN TAX_AMOUNT ELSE 0 END) 
	 FROM @TCMDTABLE 
	 
	 PRINT 'VALIDATEXN_SLS_OPT-9'
	 
	 --DECLARE @NALLOWEDDISCPCT NUMERIC(6,2),@NNETDISCPCT NUMERIC(6,2)  	
	 
	 --SELECT TOP 1 @CERRITEMCODE = PRODUCT_CODE,@NNETDISCPCT=((((A.QUANTITY*A.MRP)-(A.NET-(A.NET*B.DISCOUNT_PERCENTAGE/100)))/
		--  (A.QUANTITY*A.MRP))*100),@NALLOWEDDISCPCT=C.DISCOUNT_PERCENTAGE_LEVEL
	 --FROM @TCMDTABLE A 
	 --JOIN @TCMMTABLE B ON A.CM_ID=B.CM_ID
	 --JOIN USERS C (NOLOCK) ON C.USER_CODE=B.USER_CODE
	 --WHERE C.DISCOUNT_PERCENTAGE_LEVEL>0 AND ((((A.QUANTITY*A.MRP)-(A.NET-(A.NET*B.DISCOUNT_PERCENTAGE/100)))/
		--  (A.QUANTITY*A.MRP))*100)>C.DISCOUNT_PERCENTAGE_LEVEL
 	 
	 --IF ISNULL(@CERRITEMCODE,'')<>''
	 --BEGIN
		--SET @CERRORMSG='NET DISCOUNT :'+LTRIM(RTRIM(STR(@NNETDISCPCT,6,2)))+'% FOR ITEM CODE : '+@CERRITEMCODE+
		--			    ' IS MORE THAN :'++LTRIM(RTRIM(STR(@NALLOWEDDISCPCT,6,2)))+'% ALLOWED TO USER...... CANNOT SAVE'
		--RETURN			    
	 --END
	 	
	 --PRINT 'VALIDATEXN_SLS_OPT-10' 
	 
	 SELECT	@NCMMSTOT = SUBTOTAL,   
				@NCMMDISCPER= DISCOUNT_PERCENTAGE,  
				@NCMMDISC = DISCOUNT_AMOUNT,   
				@NCMMNET = NET_AMOUNT,
				@NATDCHARGES=ATD_CHARGES+ROUND_OFF
	 FROM @TCMMTABLE  
	 IF @NCMDNET<>0 
	   PRINT  ISNULL(@NCMMSTOT,0)
	     
	 IF ABS( ISNULL(@NCMMSTOT,0) - ISNULL(@NCMDNETWOTAX,0) )>0 OR 
	 ABS( ISNULL(@NCMMSTOT,0) - @NCMMDISC +@NATDCHARGES+@NCMDEXCLTAX- @NCMMNET ) > 1  
	     
	 BEGIN  
		PRINT 'DIFF : '+STR(@NCMMSTOT)+'-'+STR(@NCMDNETWOTAX)
		 SET @CERRORMSG='MISMATCH BETWEEN BILL MASTER & DETAIL ...'+
						(CASE WHEN ABS( ISNULL(@NCMMSTOT,0) - ISNULL(@NCMDNETWOTAX,0) )>1  THEN '-1' ELSE '' END)+
						(CASE WHEN ABS( ISNULL(@NCMMNET,0) - ISNULL(@NCMDTOT,0) - ISNULL(@NATDCHARGES,0) )>1  THEN STR(@NCMMNET,10,2)+STR(@NCMDTOT,10,2)+ '(-2)' ELSE '' END)+
						(CASE WHEN ABS((ISNULL(@NCMDNET,0) * @NCMMDISCPER/100)-@NCMMDISC)>1  THEN '-3' ELSE '' END)+
						(CASE WHEN ABS( ISNULL(@NCMMSTOT,0) - @NCMMDISC +@NCMDEXCLTAX+@NATDCHARGES- @NCMMNET )>1  THEN '-4('+
						STR(ISNULL(@NCMMSTOT,0),10,2)+STR(@NCMMDISC,10,2) +STR(@NCMDEXCLTAX,10,2)+STR(@NATDCHARGES,10,2)+STR(@NCMMNET,10,2)+')' ELSE '' END)+
								   '...PLEASE CHECK'  
		 RETURN  
	 END  
	 	 
	PRINT 'VALIDATEXN_SLS_OPT-11'
LBLVALIDATEMEMODT:
		
	IF @NUPDATEMODE=1
		EXEC SP_VALIDATE_MEMODATE_OPT
		@CXNTYPE='SLS',
		@CXNID=@CXNID,
		@NMEMONOLEN=@NMEMONOLEN,
		@CERRORMSG=@CERRORMSG OUTPUT
	
END_PROC:  
END  
--*************************************** END OF PROCEDURE VALIDATEXN_SLS_OPT
