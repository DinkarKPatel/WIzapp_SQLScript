CREATE PROCEDURE SP3S_PREPARE_ARS_BUYERORDER
@NQUERYID INT,        
@SPID INT,        
@DEPTID VARCHAR(40) =''        
--WITH ENCRYPTION        
AS            
BEGIN            
--DECLARE @NQUERYID INT=2,@SPID INT=54,@DEPTID VARCHAR(40) ='11'
    
SET NOCOUNT ON        
DECLARE @SQL VARCHAR(MAX),@COL VARCHAR(MAX),@CATTR VARCHAR(MAX)  ,@JOIN VARCHAR(MAX)          
        
IF @NQUERYID = 1        
   GOTO LBLGETMASTER        
          
ELSE IF @NQUERYID = 2--ADDED WHILE WORKING FOR ARS        
   GOTO LBLGETDETAILS        
        
ELSE            
   GOTO LAST            
        
LBLGETMASTER:        
        
  SELECT  A.*, 0.00 AS TOTAL_QTY, CAST(0 AS NUMERIC(10,2)) AS TAX_PERCENTAGE, CAST(0 AS NUMERIC(10,2)) AS TAX_AMOUNT,           
  B.AC_NAME, C.DEPT_NAME,C.DEPT_ID , B.ADDRESS0,              
  B.ADDRESS1, B.ADDRESS2, B.AREA_NAME, B.CITY, B.PINCODE, B.STATE, B.SST_NO,         
  B.CITY, B.ADDRESS0 + ' ' + B.ADDRESS1 + ' ' + B.ADDRESS2 + ' ' + B.AREA_NAME + ' ' + B.CITY + ' ' + B.STATE + ' ' + B.MOBILE + ' ' AS SUPP_ADDRESS,             
  B.CREDIT_DAYS,B.DISCOUNT_PERCENTAGE AS LM_DISC_PER,        
  B.SST_DT, B.TIN_NO, B.TIN_DT,D.USERNAME,E.USERNAME AS EDT_USERNAME,        
  ISNULL(T4.EMP_NAME,'') AS EMP_NAME,        
  ISNULL(T5.EMP_NAME,'') AS SALE_EMP_NAME,        
  A.SALE_EMP_CODE AS SALE_EMP_CODE,        
  T6.EMP_CODE AS MERCHANT_CODE,         
  T6.EMP_NAME AS MERCHANT_NAME,        
  AG.ANGADIA_NAME,AG.INSURANCE_PERCENTAGE,        
  LMB.AC_NAME AS BROKER_AC_NAME,    
  CAST(0 AS INT) AS SP_ID,    
  LF.DEPT_NAME AS WBO_FOR_DEPT_NAME        
  FROM BUYER_ORDER_MST A  (NOLOCK)             
  JOIN LMV01106 B (NOLOCK)  ON A.AC_CODE = B.AC_CODE               
  JOIN USERS D  (NOLOCK)  ON A.USER_CODE = D.USER_CODE               
  JOIN USERS E (NOLOCK)  ON A.EDT_USER_CODE = E.USER_CODE               
  JOIN LOCATION C (NOLOCK)  ON A.DEPT_ID = C.DEPT_ID               
  LEFT OUTER JOIN EMPLOYEE T4 ON A.EMP_CODE= T4.EMP_CODE          
  LEFT OUTER JOIN EMPLOYEE T5 ON A.SALE_EMP_CODE= T5.EMP_CODE          
  LEFT OUTER JOIN EMPLOYEE T6 ON A.MERCHANT_CODE= T6.EMP_CODE         
  LEFT JOIN ANGM AG ON AG.ANGADIA_CODE=A.ANGADIA_CODE         
  LEFT OUTER JOIN LMV01106 LMB ON A.BROKER_AC_CODE= LMB.AC_CODE         
  LEFT OUTER JOIN LOCATION LF (NOLOCK)  ON A.WBO_FOR_DEPT_ID = LF.DEPT_ID                        
GOTO LAST        
        
        
LBLGETDETAILS:        
   IF OBJECT_ID('tempdb..#ART_WSLBO') IS NOT NULL DROP TABLE #ART_WSLBO        
   CREATE TABLE #ART_WSLBO(COL VARCHAR(100))        
           
   SET @SQL='DELETE FROM #ART_WSLBO;'+CHAR(13)        
   SELECT @SQL=COALESCE(@SQL,'')+'IF EXISTS(SELECT TOP 1 '+COLUMN_NAME+' FROM ARS_ARS_PLAN_DETAIL_UPLOAD WHERE SP_ID='+CAST(@SPID AS VARCHAR)+' AND REORDER_QTY>0 AND '+COLUMN_NAME+' NOT LIKE ''0000000%'' AND LTRIM(RTRIM(ISNULL('+COLUMN_NAME+','''')))<>'''')'+CHAR(13)+'   INSERT #ART_WSLBO SELECT '''+COLUMN_NAME+''';'+CHAR(13)
   FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='ARS_ARS_PLAN_DETAIL_UPLOAD' AND COLUMN_NAME LIKE '%CODE' AND COLUMN_NAME<>'USER_CODE'
   --PRINT @SQL
   EXEC(@SQL)
           
   ALTER TABLE #ART_WSLBO ADD TAB VARCHAR(1000)        
   ALTER TABLE #ART_WSLBO ADD FIELD VARCHAR(1000)        
          
   UPDATE #ART_WSLBO SET TAB='ARTICLE',FIELD='ARTICLE_NO' WHERE COL LIKE '%ARTICLE%'        
   UPDATE #ART_WSLBO SET TAB='SECTIONM',FIELD='SECTION_NAME' WHERE COL LIKE 'SECTION_CODE'        
   UPDATE #ART_WSLBO SET TAB='SECTIOND',FIELD='SUB_SECTION_NAME' WHERE COL LIKE 'SUB_SECTION_CODE'        
   UPDATE #ART_WSLBO SET TAB=LEFT(COL,5),FIELD=REPLACE(COL,'_CODE','_NAME') WHERE COL LIKE 'PARA%CODE'        
   UPDATE #ART_WSLBO SET TAB=LEFT(COL,5)+'_MST',FIELD=REPLACE(COL,'_CODE','_NAME') WHERE COL LIKE 'ATTR%KEY_CODE'        
   
   SET @JOIN=''        
   SELECT @JOIN=COALESCE(@JOIN,'')+TAB+'.'+FIELD+'=ARS.'+FIELD+' AND ' FROM #ART_WSLBO WHERE COL NOT LIKE 'ATTR%'        
   SET @JOIN=RTRIM(@JOIN)        
   IF RIGHT(@JOIN,3)='AND' SET @JOIN=LEFT(@JOIN,LEN(@JOIN)-3)        
        
   SET @SQL=''        
   SELECT @SQL=COALESCE(@SQL,'')+'D.'+COL+'=ARS.'+COL+' AND ' FROM #ART_WSLBO WHERE COL NOT LIKE 'ATTR%'        
   SET @SQL=RTRIM(@SQL)        
   IF RIGHT(@SQL,3)='AND' SET @SQL=LEFT(@SQL,LEN(@SQL)-3)        
           
   SET @CATTR=''        
   SELECT @CATTR=COALESCE(@CATTR,'')+'AF.'+COL+'=ARS.'+COL+' AND ' FROM #ART_WSLBO WHERE COL LIKE 'ATTR%'        
   SET @CATTR=RTRIM(@CATTR)        
   IF RIGHT(@CATTR,3)='AND' SET @CATTR=LEFT(@CATTR,LEN(@CATTR)-3)        
           
   PRINT @JOIN        
   PRINT @SQL        
   PRINT @CATTR       
    
           
   IF OBJECT_ID('tempdb..#ART_WSLBO') IS NOT NULL DROP TABLE #ART_WSLBO        
   IF ISNULL(@SQL,'')='' SET @SQL='1=1'        
   
   SET @SQL='SELECT '+CASE @DEPTID WHEN '' THEN 'TOP 0 'ELSE '' END  
   +'D.ARTICLE_CODE,D.PARA1_CODE,ARS.PARA2_CODE,D.PARA3_CODE,D.PARA4_CODE,D.PARA5_CODE,D.PARA6_CODE        
   --,D.WHOLESALE_PRICE,D.GROSS_PURCHASE_PRICE,D.GST_PERCENTAGE,D.HSN_CODE        
   ,D.WHOLESALE_PRICE,D.GROSS_PURCHASE_PRICE,D.GST_PERCENTAGE,D.HSN_CODE        
   ,RNO=ROW_NUMBER()OVER(PARTITION BY D.ARTICLE_CODE,D.PARA1_CODE,D.PARA2_CODE,D.PARA3_CODE,D.PARA4_CODE,D.PARA5_CODE,D.PARA6_CODE ORDER BY M.MRR_DT DESC)  
   ,D.MRP
   FROM PIM01106 M (NOLOCK) --pom by pim        
   JOIN PID01106 D (NOLOCK) ON M.MRR_ID=D.MRR_ID'        
+CASE WHEN LTRIM(RTRIM(ISNULL(@CATTR,'')))=''   
   THEN   
   +CHAR(13)+' JOIN ARTICLE (NOLOCK)'        
   +CHAR(13)+' JOIN SECTIOND (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE'        
   +CHAR(13)+' JOIN SECTIONM (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE'         
   +CHAR(13)+'ON ARTICLE.ARTICLE_CODE=D.ARTICLE_CODE'  
     
   ELSE         
   +CHAR(13)+' JOIN ARTICLE (NOLOCK)'        
   +CHAR(13)+' JOIN SECTIOND (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE'        
   +CHAR(13)+' JOIN SECTIONM (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE'        
   +CHAR(13)+' JOIN ARTICLE_FIX_ATTR AF (NOLOCK) ON AF.ARTICLE_CODE=ARTICLE.ARTICLE_CODE'        
   +CHAR(13)+' JOIN ATTR1_MST (NOLOCK) ON ATTR1_MST.ATTR1_KEY_CODE=AF.ATTR1_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR2_MST (NOLOCK) ON ATTR2_MST.ATTR2_KEY_CODE=AF.ATTR2_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR3_MST (NOLOCK) ON ATTR3_MST.ATTR3_KEY_CODE=AF.ATTR3_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR4_MST (NOLOCK) ON ATTR4_MST.ATTR4_KEY_CODE=AF.ATTR4_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR5_MST (NOLOCK) ON ATTR5_MST.ATTR5_KEY_CODE=AF.ATTR5_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR6_MST (NOLOCK) ON ATTR6_MST.ATTR6_KEY_CODE=AF.ATTR6_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR7_MST (NOLOCK) ON ATTR7_MST.ATTR7_KEY_CODE=AF.ATTR7_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR8_MST (NOLOCK) ON ATTR8_MST.ATTR8_KEY_CODE=AF.ATTR8_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR9_MST (NOLOCK) ON ATTR9_MST.ATTR9_KEY_CODE=AF.ATTR9_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR10_MST (NOLOCK) ON ATTR10_MST.ATTR10_KEY_CODE=AF.ATTR10_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR11_MST (NOLOCK) ON ATTR11_MST.ATTR11_KEY_CODE=AF.ATTR11_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR12_MST (NOLOCK) ON ATTR12_MST.ATTR12_KEY_CODE=AF.ATTR12_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR13_MST (NOLOCK) ON ATTR13_MST.ATTR13_KEY_CODE=AF.ATTR13_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR14_MST (NOLOCK) ON ATTR14_MST.ATTR14_KEY_CODE=AF.ATTR14_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR15_MST (NOLOCK) ON ATTR15_MST.ATTR15_KEY_CODE=AF.ATTR15_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR16_MST (NOLOCK) ON ATTR16_MST.ATTR16_KEY_CODE=AF.ATTR16_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR17_MST (NOLOCK) ON ATTR17_MST.ATTR17_KEY_CODE=AF.ATTR17_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR18_MST (NOLOCK) ON ATTR18_MST.ATTR18_KEY_CODE=AF.ATTR18_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR19_MST (NOLOCK) ON ATTR19_MST.ATTR19_KEY_CODE=AF.ATTR19_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR20_MST (NOLOCK) ON ATTR20_MST.ATTR20_KEY_CODE=AF.ATTR20_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR21_MST (NOLOCK) ON ATTR21_MST.ATTR21_KEY_CODE=AF.ATTR21_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR22_MST (NOLOCK) ON ATTR22_MST.ATTR22_KEY_CODE=AF.ATTR22_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR23_MST (NOLOCK) ON ATTR23_MST.ATTR23_KEY_CODE=AF.ATTR23_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR24_MST (NOLOCK) ON ATTR24_MST.ATTR24_KEY_CODE=AF.ATTR24_KEY_CODE'        
   +CHAR(13)+' JOIN ATTR25_MST (NOLOCK) ON ATTR25_MST.ATTR25_KEY_CODE=AF.ATTR25_KEY_CODE'        
   +CHAR(13)+'ON ARTICLE.ARTICLE_CODE=D.ARTICLE_CODE'        
   END           
   +CHAR(13)+'JOIN ARS_ARS_PLAN_DETAIL_UPLOAD ARS (NOLOCK) ON '+REPLACE(REPLACE(@SQL,'D.SECTION_CODE','SECTIONM.SECTION_CODE'),'D.SUB_SECTION_CODE','SECTIOND.SUB_SECTION_CODE')+CASE WHEN ISNULL(@CATTR,'')='' THEN '' ELSE ' AND '+@CATTR END        
   +CHAR(13)+'WHERE ARS.SP_ID='+CAST(@SPID AS VARCHAR)+' 
   AND ARS.REORDER_QTY>0
   AND M.CANCELLED=0
   AND (D.WHOLESALE_PRICE>0 AND D.GROSS_PURCHASE_PRICE>0)'
   PRINT 'PRICE'+@SQL+CHAR(13)  
           
   IF OBJECT_ID('tempdb..#PRICE') IS NOT NULL DROP TABLE #PRICE        
   CREATE TABLE #PRICE(ARTICLE_CODE VARCHAR(10),PARA1_CODE VARCHAR(10),PARA2_CODE VARCHAR(10),PARA3_CODE VARCHAR(10),PARA4_CODE VARCHAR(10),PARA5_CODE VARCHAR(10),PARA6_CODE VARCHAR(10),WHOLESALE_PRICE FLOAT,GROSS_PURCHASE_PRICE FLOAT,GST_PERCENTAGE FLOAT,HSN_CODE VARCHAR(50),RNO INT,MRP FLOAT)        
   PRINT @SQL        
   INSERT #PRICE EXEC(@SQL)        
   
   --PRICE OF MISSED PRODUCTS(26 JUN 2019)
   ;WITH CTE AS    
   (SELECT A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE,A.PARA3_CODE,A.PARA4_CODE,A.PARA5_CODE,A.PARA6_CODE,S.WS_PRICE,S.PURCHASE_PRICE
   ,ANO=ROW_NUMBER()OVER(PARTITION BY A.ARTICLE_CODE ORDER BY S.PRODUCT_CODE)
   ,S.MRP
   FROM ARS_ARS_PLAN_DETAIL_UPLOAD A
   LEFT JOIN #PRICE P ON A.ARTICLE_CODE=P.ARTICLE_CODE
   JOIN SKU S ON S.ARTICLE_CODE=A.ARTICLE_CODE
   JOIN CMM01106 M (NOLOCK) JOIN CMD01106 D (NOLOCK) ON M.CM_ID=D.CM_ID AND M.CANCELLED=0 ON D.PRODUCT_CODE=S.PRODUCT_CODE AND M.location_Code =A.DEPT_ID 
   WHERE A.SP_ID=@SPID AND A.REORDER_QTY>0 AND P.ARTICLE_CODE IS NULL)
   INSERT #PRICE(ARTICLE_CODE,PARA1_CODE,PARA2_CODE,PARA3_CODE,PARA4_CODE,PARA5_CODE,PARA6_CODE,WHOLESALE_PRICE,GROSS_PURCHASE_PRICE,RNO,MRP)
   SELECT C.ARTICLE_CODE,C.PARA1_CODE,C.PARA2_CODE,C.PARA3_CODE,C.PARA4_CODE,C.PARA5_CODE,C.PARA6_CODE,C.WS_PRICE,C.PURCHASE_PRICE,C.ANO,C.MRP
   FROM CTE C LEFT JOIN #PRICE P ON C.ARTICLE_CODE=P.ARTICLE_CODE
   WHERE C.ANO=1 AND P.ARTICLE_CODE IS NULL
   --PRICE OF MISSED PRODUCTS(26 JUN 2019)
   
   --DUPLICATE ROW IN BUYER ORDER
   ;WITH CTE AS 
   (SELECT R1=ROW_NUMBER()OVER(PARTITION BY ARTICLE_CODE ORDER BY PARA1_CODE,PARA2_CODE,PARA3_CODE,PARA4_CODE,PARA5_CODE,PARA6_CODE) FROM #PRICE)
   DELETE CTE WHERE R1>1        			      
   --DUPLICATE ROW IN BUYER ORDER
   
   UPDATE P SET P.HSN_CODE=A.HSN_CODE FROM #PRICE P JOIN ARTICLE A (NOLOCK) ON A.ARTICLE_CODE=P.ARTICLE_CODE      
   UPDATE #PRICE SET GST_PERCENTAGE=(SELECT TOP 1 CASE WHEN M.GST_VARIATION=0 THEN D.TAX_PERCENTAGE ELSE  0 END FROM hsn_mst M JOIN hsn_DEt D ON M.HSN_CODE=D.HSN_CODE WHERE M.hsn_code=#PRICE.HSN_CODE AND M.INACTIVE=0)      
   
         
   IF OBJECT_ID('tempdb..##PRICE') IS NOT NULL DROP TABLE ##PRICE        
   SELECT * INTO ##PRICE FROM #PRICE        
         
   DECLARE @ARSID VARCHAR(10),@ARS_TICK bit
   SELECT TOP 1 @ARSID=ARS_ID FROM ARS_ARS_PLAN_DETAIL_UPLOAD WHERE SP_ID=@SPID
   SELECT TOP 1 @ARS_TICK=ISNULL(AUTO_CALCULATE_TARGET_SALES,0) FROM ARS_MST WHERE ARS_ID=@ARSID
   IF @ARS_TICK IS NULL SET @ARS_TICK=0
   IF OBJECT_ID('TEMPDB..#PARAM') IS NOT NULL DROP TABLE #PARAM      
   CREATE TABLE #PARAM (ATTR VARCHAR(100))      
   INSERT #PARAM      
   EXEC SP3S_ARS_GETDATA 21,@ARSID      
   DELETE #PARAM WHERE NOT(ATTR LIKE 'ARTICLE_CODE' OR ATTR LIKE 'PARA%CODE')      
         
   UPDATE #PRICE SET ARTICLE_CODE='00000000' WHERE NOT EXISTS(SELECT ATTR FROM #PARAM WHERE ATTR='ARTICLE_CODE')      
   UPDATE #PRICE SET PARA1_CODE='0000000' WHERE NOT EXISTS(SELECT ATTR FROM #PARAM WHERE ATTR='PARA1_CODE')      
   UPDATE #PRICE SET PARA2_CODE='0000000' WHERE NOT EXISTS(SELECT ATTR FROM #PARAM WHERE ATTR='PARA2_CODE')      
   UPDATE #PRICE SET PARA3_CODE='0000000' WHERE NOT EXISTS(SELECT ATTR FROM #PARAM WHERE ATTR='PARA3_CODE')      
   UPDATE #PRICE SET PARA4_CODE='0000000' WHERE NOT EXISTS(SELECT ATTR FROM #PARAM WHERE ATTR='PARA4_CODE')      
   UPDATE #PRICE SET PARA5_CODE='0000000' WHERE NOT EXISTS(SELECT ATTR FROM #PARAM WHERE ATTR='PARA5_CODE')      
   UPDATE #PRICE SET PARA6_CODE='0000000' WHERE NOT EXISTS(SELECT ATTR FROM #PARAM WHERE ATTR='PARA6_CODE')      
         
         
  IF @DEPTID=''        
  SELECT A.ARTICLE_NAME,CAST('LATER' AS VARCHAR(22))ORDER_ID        
  ,(SELECT TOP 1 PARA1_CODE FROM PARA1 WHERE PARA1.INACTIVE=0 AND PARA1.PARA1_NAME=ARS.PARA1_NAME)PARA1_CODE        
  ,(SELECT TOP 1 PARA2_CODE FROM PARA2 WHERE PARA2.INACTIVE=0 AND PARA2.PARA2_NAME=ARS.PARA2_NAME)PARA2_CODE        
  --,ARS.PARA1_CODE        
  --,ARS.PARA2_CODE        
  ,CAST(ARS.REORDER_QTY AS NUMERIC(14,4))QUANTITY        
  ,ARS.DEPT_ID+LEFT(NEWID(),40)ROW_ID,GETDATE()LAST_UPDATE        
  ,ISNULL(CASE @ARS_TICK WHEN 0 THEN P.GROSS_PURCHASE_PRICE ELSE P.MRP END,0) WS_PRICE        
  ,ISNULL(CASE @ARS_TICK WHEN 0 THEN P.GROSS_PURCHASE_PRICE ELSE P.MRP END,0)*ARS.REORDER_QTY RFNET        
  --,A.ARTICLE_CODE        
  ,(SELECT TOP 1ARTICLE.ARTICLE_CODE FROM ARTICLE (NOLOCK) WHERE ARTICLE.INACTIVE=0 AND ARTICLE.ARTICLE_NO=ARS.ARTICLE_NO)ARTICLE_CODE        
  ,ISNULL(CASE @ARS_TICK WHEN 0 THEN P.GROSS_PURCHASE_PRICE ELSE P.MRP END,0) GROSS_WSP        
  ,CAST(0 AS FLOAT)DISCOUNT_PERCENTAGE,CAST(0 AS FLOAT)DISCOUNT_AMOUNT        
  ,CAST('' AS VARCHAR(MAX))REMARKS,CAST('0000000' AS VARCHAR(50))PRODUCT_CODE        
  ,CAST(0 AS FLOAT)MANUAL_DISCOUNT,ARS.PARA3_CODE,CAST('' AS VARCHAR(50))ONLINE_PRODUCT_CODE        
  ,CAST('0000000' AS VARCHAR(10))ITEM_EMP_CODE        
  ,CAST('0000000' AS VARCHAR(10))ITEM_MERCHANT_CODE        
  ,ROW_NUMBER()OVER(ORDER BY ARS.ARTICLE_NO DESC)SERIAL_NO        
  ,ARS.ARTICLE_NO        
  ,ARS.PARA1_NAME        
  ,ARS.PARA2_NAME        
  ,P2.PARA2_ORDER        
  ,P1.PARA1_ORDER        
  ,ARS.PARA3_NAME        
  ,ISNULL(P.GROSS_PURCHASE_PRICE,100)*ARS.REORDER_QTY AMOUNT        
  ,UOM.UOM_CODE        
  ,UOM.UOM_NAME        
  ,UOM.UOM_TYPE        
  ,CAST('' AS TIMESTAMP) DT_CREATED        
  ,A.CODING_SCHEME        
  ,P1.PARA1_SET,P2.PARA2_SET,A.ALIAS ARTICLE_ALIAS,EMP.EMP_NAME ITEM_EMP_NAME,EMP1.EMP_NAME ITEM_MERCHANT_NAME        
  ,CAST(0 AS NUMERIC(10,2))ADJ_QTY        
  ,ROW_NUMBER()OVER(ORDER BY ARS.ARTICLE_NO DESC) SR_NO        
  ,ISNULL(P.HSN_CODE,'0000000000')HSN_CODE        
  ,ISNULL(P.GST_PERCENTAGE,0)GST_PERCENTAGE        
  ,CAST(0 AS NUMERIC(10,2))XN_VALUE_WITHOUT_GST        
  ,CAST(0 AS NUMERIC(10,2))XN_VALUE_WITH_GST        
  ,CAST(0 AS NUMERIC(10,2))IGST_AMOUNT        
  ,CAST(0 AS NUMERIC(10,2))CGST_AMOUNT        
  ,CAST(0 AS NUMERIC(10,2))SGST_AMOUNT        
  ,ROW_NUMBER()OVER(ORDER BY ARS.ARTICLE_NO DESC) SR        
  ,CAST(0 AS NUMERIC(14,2))CUMM_SUM        
  ,CAST(0 AS NUMERIC(14,2))WPS_QTY        
  ,CAST(0 AS NUMERIC(14,2))PEND_QTY        
  ,0 [TYPE]        
  ,ARS.SP_ID        
  ,CAST('' AS TIMESTAMP)TS        
  FROM ARS_ARS_PLAN_DETAIL_UPLOAD ARS (NOLOCK)        
  JOIN LOCATION L ON ARS.DEPT_ID=L.DEPT_ID        
  LEFT JOIN ARTICLE A (NOLOCK) JOIN UOM (NOLOCK) ON UOM.UOM_CODE=A.UOM_CODE                 
  ON A.ARTICLE_CODE=ARS.ARTICLE_CODE        
  LEFT JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE=ARS.PARA1_CODE        
  LEFT JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE=ARS.PARA2_CODE        
  LEFT JOIN EMPLOYEE EMP (NOLOCK) ON EMP.EMP_CODE='0000000'        
  LEFT JOIN EMPLOYEE EMP1 (NOLOCK) ON EMP1.EMP_CODE='0000000'        
  LEFT JOIN #PRICE P ON P.ARTICLE_CODE=ARS.ARTICLE_CODE AND P.PARA1_CODE=ARS.PARA1_CODE AND P.PARA2_CODE=ARS.PARA2_CODE        
       AND P.PARA3_CODE=ARS.PARA3_CODE AND P.PARA4_CODE=ARS.PARA4_CODE AND P.PARA5_CODE=ARS.PARA5_CODE AND P.PARA6_CODE=ARS.PARA6_CODE        
  WHERE ARS.SP_ID=@SPID AND ARS.REORDER_QTY>0        
        
 ELSE  --WHEN DEPT ID PROVIDED      
       
  SELECT A.ARTICLE_NAME,CAST('LATER' AS VARCHAR(22))ORDER_ID        
  ,(SELECT TOP 1 CASE ISNULL(PARA1_CODE,'') WHEN '' THEN '0000000' ELSE PARA1_CODE END FROM PARA1 WHERE PARA1.INACTIVE=0 AND PARA1.PARA1_NAME=ARS.PARA1_NAME)PARA1_CODE        
  ,(SELECT TOP 1 PARA2_CODE FROM PARA2 WHERE PARA2.INACTIVE=0 AND PARA2.PARA2_NAME=ARS.PARA2_NAME)PARA2_CODE        
  ,CAST(ARS.REORDER_QTY AS NUMERIC(14,4))QUANTITY,ARS.DEPT_ID+LEFT(NEWID(),40)ROW_ID,GETDATE()LAST_UPDATE        
  ,ISNULL(CASE @ARS_TICK WHEN 0 THEN P.GROSS_PURCHASE_PRICE ELSE P.MRP END,0) WS_PRICE        
  ,ISNULL(CASE @ARS_TICK WHEN 0 THEN P.GROSS_PURCHASE_PRICE ELSE P.MRP END,0)*ARS.REORDER_QTY RFNET        
  ,(SELECT TOP 1 ARTICLE.ARTICLE_CODE FROM ARTICLE (NOLOCK) WHERE ARTICLE.INACTIVE=0 AND ARTICLE.ARTICLE_NO=ARS.ARTICLE_NO)ARTICLE_CODE        
  ,ISNULL(CASE @ARS_TICK WHEN 0 THEN P.GROSS_PURCHASE_PRICE ELSE P.MRP END,0) GROSS_WSP        
  ,CAST(0 AS FLOAT)DISCOUNT_PERCENTAGE
  ,CAST(0 AS FLOAT)DISCOUNT_AMOUNT        
  ,CAST('' AS VARCHAR(MAX))REMARKS
  ,CAST('0000000' AS VARCHAR(50))PRODUCT_CODE
  ,CAST(0 AS FLOAT)MANUAL_DISCOUNT
  ,ARS.PARA3_CODE
  ,CAST('' AS VARCHAR(50))ONLINE_PRODUCT_CODE
  ,CAST('0000000' AS VARCHAR(10))ITEM_EMP_CODE        
  ,CAST('0000000' AS VARCHAR(10))ITEM_MERCHANT_CODE        
  ,ROW_NUMBER()OVER(ORDER BY ARS.ARTICLE_NO DESC)SERIAL_NO        
  ,ARS.ARTICLE_NO
  ,ARS.PARA1_NAME
  ,ARS.PARA2_NAME
  ,P2.PARA2_ORDER
  ,P1.PARA1_ORDER
  ,ARS.PARA3_NAME
  ,ISNULL(P.GROSS_PURCHASE_PRICE,100)*ARS.REORDER_QTY AMOUNT        
  ,UOM.UOM_CODE        
  ,UOM.UOM_NAME        
  ,UOM.UOM_TYPE        
  ,CAST('' AS TIMESTAMP) DT_CREATED        
  ,A.CODING_SCHEME        
  ,P1.PARA1_SET,P2.PARA2_SET,A.ALIAS ARTICLE_ALIAS,EMP.EMP_NAME ITEM_EMP_NAME,EMP1.EMP_NAME ITEM_MERCHANT_NAME        
  ,CAST(0 AS NUMERIC(10,2))ADJ_QTY        
  ,ROW_NUMBER()OVER(ORDER BY ARS.ARTICLE_NO DESC) SR_NO        
  ,ISNULL(P.HSN_CODE,'0000000000')HSN_CODE        
  ,ISNULL(P.GST_PERCENTAGE,0)GST_PERCENTAGE        
  ,CAST(0 AS NUMERIC(10,2))XN_VALUE_WITHOUT_GST        
  ,CAST(0 AS NUMERIC(10,2))XN_VALUE_WITH_GST        
  ,CAST(0 AS NUMERIC(10,2))IGST_AMOUNT        
  ,CAST(0 AS NUMERIC(10,2))CGST_AMOUNT        
  ,CAST(0 AS NUMERIC(10,2))SGST_AMOUNT        
  ,ROW_NUMBER()OVER(ORDER BY ARS.ARTICLE_NO DESC) SR        
  ,CAST(0 AS NUMERIC(14,2))CUMM_SUM        
  ,CAST(0 AS NUMERIC(14,2))WPS_QTY        
  ,CAST(0 AS NUMERIC(14,2))PEND_QTY        
  ,0 [TYPE]        
  ,ARS.SP_ID        
  ,CAST('' AS TIMESTAMP)TS        
  FROM ARS_ARS_PLAN_DETAIL_UPLOAD ARS (NOLOCK)        
  JOIN LOCATION L ON ARS.DEPT_ID=L.DEPT_ID        
  LEFT JOIN ARTICLE A (NOLOCK) JOIN UOM (NOLOCK) ON UOM.UOM_CODE=A.UOM_CODE ON A.ARTICLE_CODE=ARS.ARTICLE_CODE        
  LEFT JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE=ARS.PARA1_CODE        
  LEFT JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE=ARS.PARA2_CODE        
  LEFT JOIN EMPLOYEE EMP (NOLOCK) ON EMP.EMP_CODE='0000000'        
  LEFT JOIN EMPLOYEE EMP1 (NOLOCK) ON EMP1.EMP_CODE='0000000'        
  LEFT JOIN #PRICE P ON P.ARTICLE_CODE=ARS.ARTICLE_CODE AND P.PARA1_CODE=ARS.PARA1_CODE AND P.PARA2_CODE=ARS.PARA2_CODE        
       AND P.PARA3_CODE=ARS.PARA3_CODE AND P.PARA4_CODE=ARS.PARA4_CODE AND P.PARA5_CODE=ARS.PARA5_CODE AND P.PARA6_CODE=ARS.PARA6_CODE        
  WHERE ARS.SP_ID=@SPID AND ARS.REORDER_QTY>0 AND ARS.DEPT_ID=@DEPTID        
 IF OBJECT_ID('tempdb..#PRICE') IS NOT NULL DROP TABLE #PRICE        
 GOTO LAST        
        
LAST:           
SET NOCOUNT OFF        
END 