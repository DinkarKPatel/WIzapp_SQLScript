create PROCEDURE POSTACT_GST_PRT
(  
 @DTTO    DATETIME,  
 @CDEPTID CHAR(4)='',  
 @CACCODE CHAR(10)='',
 @CXNTYPEPARA VARCHAR(10),
 @NXNITEMTYPE NUMERIC(1,0),
 @NLOOP NUMERIC(1,0),
 @BLOC BIT=0
)  
AS  
BEGIN  
      
   DECLARE @CSTEP VARCHAR(10),@BPOSTDISCOUNTSEPARATELY BIT,@CDISCACCODE VARCHAR(10),@BPOSTFREIGHTSEPARATELY BIT,@CFREIGHTACCODE VARCHAR(10),  
   @BPOSTOTHERCHARGESSEPARATELY BIT,@COTHERCHARGESACCODE VARCHAR(10),@BPOSTROUNDOFFSEPARATELY BIT,@CROUNDOFFACCODE VARCHAR(10),@NCTR NUMERIC(10,0),  
   @NSUBTOTAL NUMERIC(14,4),@NTAXAMOUNT NUMERIC(14,4), @CPURACCODE VARCHAR(50),@CTAXACCODE VARCHAR(100),  
   @LPOSTTAXSEPARATELY NUMERIC(14,4),@CRMID VARCHAR(50),@CRMNO VARCHAR(50),@LOUTSTATIONPARTY BIT,@TMPDR NUMERIC(14,4),  
   @TMPCR NUMERIC(14,4),@CCURSTATECODE VARCHAR(10),@CVMID VARCHAR(40),@CLOCATIONID CHAR(2),  
   @CLASTBILLNO VARCHAR(40),@DTMPVENDORBILLDT DATETIME,@CRMLIST VARCHAR(300),@NTMPCREDITDAYS NUMERIC(10),  
   @NTMPCRDISCOUNTPERCENTAGE NUMERIC(14,4),@DLASTINVDT DATETIME,@CVOUCHERCODE VARCHAR(10),  
   @COLDBILLTYPE VARCHAR(10),@CLASTACCODE VARCHAR(10),@CLASTPARTYNAME VARCHAR(100),@NTOTQUANTITY NUMERIC(14,4),  
   @NTOTNETAMOUNT NUMERIC(14,4),@CDEPTNAME VARCHAR(100),@CVOUCHERNO VARCHAR(10),@CPOSTBILLBYBILLREFTYPE VARCHAR(2),  
   @NDRNET NUMERIC(18,4),@NCRNET NUMERIC(18,4),@CEOSSDISCSHARINGAC CHAR(10),  
   @CCASHDISCOUNTAC VARCHAR(10),@NDNTYPE NUMERIC(1,0),@BLOOP BIT,@NCTRBB INT,@CBILLTYPE VARCHAR(10),@CSEARCHREFBILLTYPE VARCHAR(10),  
   @NENTRYID INT,@CRETREFBILLNO VARCHAR(100),@NLOOPCNTR INT,@DREFBILLDATE DATETIME,@CREFBILLNO VARCHAR(200),
   @DRMDT DATETIME,@CLOCGSTSTATECODE VARCHAR(5),@CPARTYGSTSTATECODE VARCHAR(5),@CADJDIFFACCODE CHAR(10),@NFDNCD NUMERIC(10,2),
   @COLDRMID VARCHAR(40),@BNEWENTRY BIT,@NPURAMOUNT NUMERIC(10,2),@CREFMRRID VARCHAR(40),@CCREDITORHEADS VARCHAR(MAX),
   @BMANUALROFF BIT,@NROLIMIT NUMERIC(7,3),@NEXCEPTIONTYPE NUMERIC(1,0),@DGSTCUTOFFDATE DATETIME,@BBLANKACFOUND BIT,
   @CERRORMSG VARCHAR(MAX),@bPostRemarksInNarration BIT,@cRemarks VARCHAR(max),@cFinYear VARCHAR(10)  ,@nSpId VARCHAR(40)
	
   
  
   SET @CSTEP=10  
   set @nSpId=ltrim(rtrim(str(@@spid)))  

   
   SET @CERRORMSG=''
      
   SET  @CCREDITORHEADS=DBO.FN_ACT_TRAVTREE('0000000021')
   SET @DGSTCUTOFFDATE='2017-07-01'
      
 DECLARE @CPARTYACCODE VARCHAR(10),@CPARTYSTATECODE VARCHAR(10),@NNETAMOUNT NUMERIC(14,4),  
   @NDISCAMOUNT NUMERIC(14,4),@NFREIGHT NUMERIC(14,4), @NOTHER NUMERIC(14,4),@NROUNDOFF NUMERIC(14,4),  
   @NDRTOTAL NUMERIC(14,4),@NCRTOTAL NUMERIC(14,4),@DCUTOFFDATE VARCHAR(20),@CXNTYPE VARCHAR(10)  
   ,@CVDID VARCHAR(40),@CPURBILLS VARCHAR(MAX)
   ,@BBILLBYBILL BIT,@CFINPRTAC VARCHAR(10),@CQTYNARRATION VARCHAR(200)  
   ,@BPOSTEXCISESEPARATELY BIT,@CEXCISEACCODE VARCHAR(10),@BDONOTPOSTCDENTRY BIT  
        
   SET @CFREIGHTACCODE=''  
   SET @COTHERCHARGESACCODE=''  
   SET @CROUNDOFFACCODE=''  
      
   SET @CSTEP=20  
   
    IF OBJECT_ID('TEMPDB..#ERRORS','U') IS NOT NULL
		DROP TABLE #ERRORS
		
    CREATE TABLE #ERRORS 
	(
		XN_TYPE VARCHAR(10),SOURCE_TABLE VARCHAR(200),COLUMNNAME VARCHAR(200),GST_PERCENTAGE NUMERIC(6,2),ERR_DESC VARCHAR(500)
	)   

      
    SET @CSTEP=30  
    DECLARE @VCHC TABLE   
 (  
  AC_CODE CHAR(10),NARRATION VARCHAR(200),XN_NO VARCHAR(40),  
  XN_DT DATETIME,DEPT_ID CHAR(4),AMOUNT NUMERIC(14,4),XN_ID VARCHAR(50),  
  REF_BILL_NO VARCHAR(50),REF_BILL_DATE DATETIME, ENTRY_ID INT,CRDAYS NUMERIC(5),remarks varchar(max)
 )  
   
 SET @CSTEP=40  
 DECLARE @VDC TABLE   
 (  
  VD_ID VARCHAR(50),    VM_ID VARCHAR(40),    AC_CODE CHAR(10),   
  NARRATION VARCHAR(MAX),   DEBIT_AMOUNT NUMERIC(14,4),  CREDIT_AMOUNT NUMERIC(14,4),  
  X_TYPE CHAR(2),     VS_AC_CODE CHAR(10),REF_BILL_NO VARCHAR(40),   
  CREDIT_DAYS NUMERIC(10),  taxable_value NUMERIC(10,2),
  VAT_ENTRY BIT,REF_BILL_DATE DATETIME, AC_NAME VARCHAR(100),ADJ_REMARKS VARCHAR(MAX),REF_MRR_ID VARCHAR(40),
  cd_pct numeric(10,2),cd_posted BIT,supplier_entry BIT,rm_id VARCHAR(40),ref_remarks VARCHAR(200)
 )  
   
   
 SET @CSTEP=50  
 DECLARE @VMC TABLE  
 (  
  VM_ID VARCHAR(50),    VOUCHER_NO VARCHAR(400),   VOUCHER_DT DATETIME,   
  VOUCHER_CODE CHAR(10),   DEPT_ID CHAR(4),    BILL_TYPE VARCHAR(300),  
  BILL_NO VARCHAR(200),    BILL_ID VARCHAR(220),    BILL_DT DATETIME,   
  BILL_AC_CODE VARCHAR(100),  DRTOTAL NUMERIC(20,4),   CRTOTAL NUMERIC(20,4),   
  CASH_VOUCHER BIT,     SALE_VOUCHER BIT,     QUANTITY NUMERIC(20,2),   
  ANGADIA_CODE CHAR(70),    LR_NO VARCHAR(500),    LR_DT DATETIME,  
  PARTY_NAME VARCHAR(1000),  NET_AMOUNT NUMERIC(20,2),   BILL_STATUS VARCHAR(1000),  
  RM_LIST VARCHAR(MAX),   CANCELLED BIT,     DEPT_NAME VARCHAR(100),  
  VOUCHER_TYPE VARCHAR(100)   
 )  
   
 SET @CSTEP=60  
 DECLARE @VLINK TABLE  
 (  
  VM_ID VARCHAR(100),MEMO_ID VARCHAR(100),XN_TYPE VARCHAR(20),LAST_UPDATE DATETIME  
 )  
   
 DECLARE @TBILL_BY_BILL_REF TABLE(VM_ID VARCHAR(50),VD_ID VARCHAR(40),REF_NO VARCHAR(40),AMOUNT NUMERIC(18,4),LAST_UPDATE DATETIME,  
          X_TYPE VARCHAR(20),CR_DAYS NUMERIC(5),ADJ_REMARKS VARCHAR(MAX),REF_REMARKS VARCHAR(500),REF_MRR_ID VARCHAR(40),on_account BIT,
		  cd_percentage NUMERIC(6,2),cd_base_amount NUMERIC(10,2),cd_posted BIT,ac_code CHAR(10),rm_id VARCHAR(40),ignore_cd_base_amount NUMERIC(10,2),
		  org_bill_taxable_value numeric(10,2))
   
 SELECT TOP 1 @DCUTOFFDATE=CUTOFFDATE,@bPostRemarksInNarration=isnull(post_remarks_in_narration,0)  FROM GST_ACCOUNTS_CONFIG_MST WHERE XN_TYPE=@CXNTYPEPARA
 
 SELECT TOP 1 @BDONOTPOSTCDENTRY=ISNULL(DONOT_POST_CD_PURCHASE,0)
 FROM GST_ACCOUNTS_CONFIG_MST WHERE XN_TYPE='PUR'
 
  
 SET @DCUTOFFDATE=ISNULL(@DCUTOFFDATE,'')  
-- SET @DCUTOFFDATE='2018-01-15'  
 
 SET @CSTEP=70  
 SET @CVOUCHERCODE = '0000000005'  
    BEGIN TRY  
     
   SET @CSTEP=80  
   IF OBJECT_ID('TEMPDB..#PRTTABLE','U') IS NOT NULL  
    DROP TABLE #PRTTABLE   
     
   SET @CSTEP=90  
   --THIS TABLE STORE ALL PENDING MEMO_ID   
   CREATE TABLE #PRTTABLE (MEMO_ID VARCHAR(40),MODE VARCHAR(10))  
     
   SET @CSTEP=92  
   IF OBJECT_ID('#APPROVALLOCATION','U') IS NOT NULL  
    DROP TABLE #APPROVALLOCATION  
     
   --GETTING LIST OF LOCATIONS ON WHICH APPROVAL PROCESS IS ENABLED  
   SELECT DISTINCT DEPT_ID   
   INTO #APPROVALLOCATION  
   FROM LOC_XNSAPPROVAL  
   WHERE XN_TYPE='PRT'  
     
   DECLARE @IMAXLEVEL INT  
     
   --GETTING THE MAX LEVEL OF APPROVAL FOR PURCHASE TRANSACTION  
   SELECT @IMAXLEVEL=MAX(LEVEL_NO) FROM XN_APPROVAL_CHECKLIST_LEVELS WHERE XN_TYPE='PRT' AND INACTIVE=0  
   
   IF EXISTS(SELECT TOP 1 'U' FROM XN_APPROVAL_CHECKLIST_LEVELS  WHERE XN_TYPE='PRT' AND INACTIVE=0 AND ISNULL(AC_POSTING,0)<>0)
	BEGIN
	    SELECT @IMAXLEVEL=LEVEL_NO
		FROM XN_APPROVAL_CHECKLIST_LEVELS 
		WHERE XN_TYPE='PRT' AND INACTIVE=0 AND ISNULL(AC_POSTING,0)<>0
	END
	
	  
   SET @IMAXLEVEL=ISNULL(@IMAXLEVEL,0)  
   
   
   SET @CSTEP=100  
   --GETTING LIST OF PURCHASE RETURNS THAT QUALIFY FOR VOUCHER POSTING  
		INSERT INTO #PRTTABLE (MEMO_ID,MODE)  
         SELECT A.RM_ID,'PRT' AS MODE   
         FROM RMM01106 A  
         LEFT OUTER JOIN #APPROVALLOCATION AL ON a.location_Code =AL.DEPT_ID  
         JOIN LOCATION SL ON a.location_Code=SL.DEPT_ID  
         LEFT JOIN LOCATION TL ON A.PARTY_DEPT_ID=TL.DEPT_ID  
		 LEFT JOIN lmp01106 lmp (NOLOCK) ON lmp.ac_code=a.ac_code
		 LEFT JOIN loc_accounting_company lac1 (NOLOCK) ON lac1.pan_no=sl.PAN_NO
		 LEFT JOIN loc_accounting_company lac2 (NOLOCK) ON lac2.pan_no=SUBSTRING(sl.loc_gst_no,3,10)
         LEFT OUTER JOIN   
         (  
			SELECT B.MEMO_ID,B.LAST_UPDATE  
			FROM POSTACT_VOUCHER_LINK B   
			JOIN VM01106 C ON C.VM_ID = B.VM_ID   
			WHERE C.CANCELLED=0 AND B.XN_TYPE = 'PRT'   
		 )VM  ON A.RM_ID = VM.MEMO_ID    
         WHERE  
         -- POSTING ONLY COMPANY OWN OR POSTING MARK IN FRANCHIES
         (ISNULL(@DCUTOFFDATE,'')='' OR A.RM_DT>@DCUTOFFDATE) 
         
		 AND (ISNULL(A.XN_ITEM_TYPE,0)=@NXNITEMTYPE OR (ISNULL(A.XN_ITEM_TYPE,0) IN (0,1) AND @NXNITEMTYPE=1))
         AND (A.APPROVEDLEVELNO>=@IMAXLEVEL OR AL.DEPT_ID IS NULL)  AND A.MEMO_TYPE=1  
         /*PURCHASE RETURN IS NOT CANCELLED.*/  
         AND ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0) 
         /*PURCHASE RETURN INV_DT IS LESS THAN THE SPECIFIED DATE.*/  
         AND A.RM_DT BETWEEN '2017-07-01' AND @DTTO   
	     AND A.MODE<>2
         /*IF CUTOFF DATE IS SPECIFIED, CONSIDER PURCHASE RETURN AFTER THE CUTOFF DATE*/  
           /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO THAT ELSE APPLY IT TO RM_NO FOR LOCATION.*/  
         AND (ISNULL(@CDEPTID,'')='' OR   
		(CASE WHEN ISNULL(A.ACCOUNTS_DEPT_ID,'')='' THEN a.location_Code ELSE A.ACCOUNTS_DEPT_ID END)=@CDEPTID)  
         /*PURCHASE RETURN IS NOT GROUP/BRANCH PURCHASE RETURN*/  
         /*PURCHASE RETURN IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/  
         AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE)   
         AND (@CACCODE='' OR A.AC_CODE=@CACCODE)  
		 AND ISNULL(bill_challan_mode,0)=0
		 AND (ISNULL(SL.LOC_GST_NO,'')<>ISNULL(LMP.AC_GST_NO,'')  OR ISNULL(SL.LOC_GST_NO,'')=''  OR ISNULL(dn_type,0)=2)---- DO NOT PROCESS INVOICES FOR PARTIES HAVING SAME GST NO. AS THAT OF LOCATION
		 AND (SUBSTRING(ISNULL(SL.LOC_GST_NO,''),3,10)<>ISNULL(LMP.PAN_NO,'') OR ISNULL(dn_type,0)=2)
		 AND (ISNULL(SL.pan_NO,'')<>ISNULL(LMP.PAN_NO,'') OR ISNULL(sl.pan_no,'')=''  OR ISNULL(dn_type,0)=2)
		 AND (lac1.pan_no IS NOT NULL OR lac2.pan_no IS NOT NULL)
		 AND a.total_amount<>0

	--if @@spid=374    
	--begin
	--	select @IMAXLEVEL,@CXNTYPEPara,@NXNITEMTYPE
	--	SELECT 'POSTING DNS',* FROM #PRTTABLE
	--end              
    SET @CSTEP=110  
    SELECT @CFINPRTAC=VALUE FROM GST_ACCOUNTS_CONFIG_DET_OTHERS WHERE XN_TYPE=@CXNTYPEPARA AND COLUMNNAME='FINPRT_AC_CODE'
        
        
    SET @CSTEP=175  
   --GET THE CASH DISCOUNT ACCOUNT FOR DISCOUNT AMOUNT POSTING AS PER LEDGER TERMS  
   SELECT @CDISCACCODE = VALUE FROM GST_ACCOUNTS_CONFIG_DET_OTHERS WHERE XN_TYPE=@CXNTYPEPARA AND COLUMNNAME='CASH_DISC_AC_CODE'
	
  	        
   SET @CDISCACCODE=ISNULL(@CDISCACCODE,'')  
        
      SET @CSTEP=180  
      --IF OTHER CHARGES CONSIDERED AS PART OF STOCK THEN CLUB IT IN PURCHASE RETURN A/C OTHERWISE POST SEPARATELY  
    
       
   SET @CSTEP = 230  
   SELECT @CROUNDOFFACCODE = VALUE FROM GST_ACCOUNTS_CONFIG_DET_OTHERS WHERE XN_TYPE=@CXNTYPEPARA AND COLUMNNAME='ROFF_AC_CODE'
     
   SET @CROUNDOFFACCODE=ISNULL(@CROUNDOFFACCODE,'')  
    
   CREATE INDEX IX_TEMP_PRTTABLE_RM_ID ON #PRTTABLE(MEMO_ID)  

   SELECT @CPOSTBILLBYBILLREFTYPE=ISNULL(POST_BILL_BY_BILL_REFTYPE,1),
   @NEXCEPTIONTYPE=ISNULL(POST_BILL_BY_BILL_ADJ_EXCEPTION_TYPE,0)
   FROM GST_ACCOUNTS_CONFIG_MST WHERE XN_TYPE=@CXNTYPEPARA  
   
   SET @CSTEP=240  

   DECLARE @BGPCCONFIGFOUND BIT			
   SET @BGPCCONFIGFOUND=0
   
   SET @CSTEP = 245

	
   DECLARE @CPOSTINGXNTYPE VARCHAR(10)	
   SET @CPOSTINGXNTYPE=(CASE WHEN @NXNITEMTYPE=3 THEN 'PRT_AST' WHEN @NXNITEMTYPE=4 THEN 'PRT_SRV'
							 WHEN @NXNITEMTYPE=2 THEN 'PRT_CON' ELSE 'PRT' END)
     

   SET @CSTEP = 260  
   IF OBJECT_ID('TEMPDB..#V_PROCESS','U') IS NOT NULL  
	    DROP TABLE #V_PROCESS  
     
   SET @CSTEP = 270  
   /*  
    BILL_LEVEL_TAX_METHOD : 1 IS EXCLUSIVE  
          2 IS INCLUSIVE  
                
   */
   --A SINGLE PURCHASE RETURN MEMO CAN HAVE MULTIPLE PURCHASE RETURN AND TAX ACCOUNTS BASED ON MULTIPLE FORMS  
   SELECT  PM.RM_ID  
      ,PM.RM_NO  
      ,PM.RM_DT 
	  ,GST_ITC_DT
      ,PM.CREDIT_DAYS  
      ,(CASE WHEN ISNULL(PM.ACCOUNTS_DEPT_ID,'')='' THEN pm.location_Code   
        ELSE PM.ACCOUNTS_DEPT_ID END) AS DEPT_ID  
      --FOR INCLUSIVE TAX DEDUCE THE AMOUNT FROM THE SUBTOTAL AS TAX WOULD BE POSTED SEPARATELY  
      ,0 AS POST_TAX_SEPARATELY  
      ,PM.AC_CODE  
      ,PM.TOTAL_AMOUNT AS TOTAL_AMOUNT  
      ,ROUND(SUM(ISNULL(FDN_RATE,0)*ISNULL(PD.QUANTITY,0)),2) AS DED_AMOUNT 
      ,PD.BILL_NO AS RMD_BILL_NO 
	  ,PD.BILL_DT AS RMD_BILL_DT 
      ,PM.CANCELLED  
      ,ROUND(SUM(CASE WHEN (DN_TYPE=2 AND PD.RM_ID IS NULL)  OR PM.SUBTOTAL=0 THEN 0 ELSE (((PM.TOTAL_AMOUNT/PM.SUBTOTAL)*((PD.PURCHASE_PRICE*PD.QUANTITY)-(ISNULL(FDN_RATE,0)*PD.QUANTITY)))) END),2) AS BILL_AMOUNT  
      ,ROUND(SUM(CASE WHEN (DN_TYPE=2 AND PD.RM_ID IS NULL) OR PM.SUBTOTAL=0 THEN 0 ELSE (((PM.DISCOUNT_AMOUNT/PM.SUBTOTAL)*((PD.PURCHASE_PRICE*PD.QUANTITY)))) END),2) AS DISCOUNTAMOUNT  
	  ,ISNULL(PM.FREIGHT_TAXABLE_VALUE,0) AS FREIGHT
	  ,ISNULL(PM.OTHER_CHARGES_TAXABLE_VALUE,0) AS OTHERCHARGES
      ,SUM(CASE WHEN ISNULL(XN_VALUE_WITHOUT_GST,0)=0 THEN (CASE WHEN DN_TYPE=2 AND PD.RM_ID IS NULL THEN 0 
		ELSE (((PD.PURCHASE_PRICE)*PD.QUANTITY))-   --(-ISNULL(FDN_RATE,0))  
       (CASE WHEN PD.BILL_LEVEL_TAX_METHOD=2 THEN ISNULL(PD.ITEM_TAX_AMOUNT,0) ELSE 0 END)   
       END) ELSE XN_VALUE_WITHOUT_GST END) AS PURAMOUNT  ,sum(xn_value_without_gst) taxable_value
      ,ROUND(SUM(PD.ITEM_TAX_AMOUNT),2) AS TAXAMOUNT  
	  ,SUM(IGST_AMOUNT) AS IGST_AMOUNT
	  ,SUM(CGST_AMOUNT) AS CGST_AMOUNT
	  ,SUM(SGST_AMOUNT) AS SGST_AMOUNT
	  ,SUM(GST_CESS_AMOUNT) AS GST_CESS_AMOUNT
      ,SUM(PD.QUANTITY) AS QUANTITY  
      ,'PRT' AS XN_TYPE  
	  ,pm.fin_year
	  ,@CPOSTINGXNTYPE AS POSTING_XN_TYPE
      ,PM.DN_TYPE
      ,ISNULL(PD.GST_PERCENTAGE ,0) AS GST_PERCENTAGE  
	  ,pd.GST_CESS_PERCENTAGE
	  ,PM.OTHER_CHARGES_GST_PERCENTAGE		 					     
	  ,PM.FREIGHT_GST_PERCENTAGE
 	  ,PM.FREIGHT_IGST_AMOUNT
	 ,PM.FREIGHT_CGST_AMOUNT
	 ,PM.FREIGHT_SGST_AMOUNT
	 ,PM.OTHER_CHARGES_IGST_AMOUNT
	 ,PM.OTHER_CHARGES_CGST_AMOUNT
	 ,PM.OTHER_CHARGES_SGST_AMOUNT
      ,LOC.GST_STATE_CODE AS LOC_GST_STATE_CODE
	  ,LMP.AC_GST_STATE_CODE AS PARTY_GST_STATE_CODE
      ,SUM(ISNULL(FDN_RATE,0)*PD.QUANTITY) AS PRTAMOUNT  
      ,SUM(RFNET) AS RMDNET
	  ,pd.bill_no
	  ,pd.terms
	  ,CONVERT(BIT,0) applycdontotal
	  ,ISNULL(pd.pur_cd_percentage,0) AS CD_PCT 
	  ,(ISNULL(PM.FREIGHT_TAXABLE_VALUE,0)+(CASE WHEN PM.OH_TAX_METHOD=2 THEN PM.FREIGHT_IGST_AMOUNT+PM.FREIGHT_CGST_AMOUNT+PM.FREIGHT_SGST_AMOUNT ELSE 0 END)-PM.FREIGHT) AS FREIGHT_RO
      ,(ISNULL(PM.OTHER_CHARGES_TAXABLE_VALUE,0)+(CASE WHEN PM.OH_TAX_METHOD=2 THEN PM.OTHER_CHARGES_IGST_AMOUNT+PM.OTHER_CHARGES_CGST_AMOUNT+PM.OTHER_CHARGES_SGST_AMOUNT ELSE 0 END)-PM.OTHER_CHARGES) AS OTHER_CHARGES_RO       
      ,PD.MRR_ID AS REF_MRR_ID
      ,PM.ROUND_OFF,PM.MANUAL_ROUNDOFF,SECTION_CODE,SD.SUB_SECTION_CODE
		, (CASE WHEN IGST_AMOUNT<>0 OR LOC.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE THEN '0000000000' ELSE '' END) AS IGST_REVENUE_AC_CODE
		, (CASE WHEN CGST_AMOUNT<>0 OR LOC.GST_STATE_CODE=LMP.AC_GST_STATE_CODE THEN '0000000000' ELSE '' END) AS LGST_REVENUE_AC_CODE
		, (CASE WHEN IGST_AMOUNT<>0  THEN '0000000000' ELSE '' END) AS IGST_TAX_AC_CODE
		, (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)  AS CGST_TAX_AC_CODE
		, (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)  AS SGST_TAX_AC_CODE
		, '0000000000' AS GST_CESS_AC_CODE
		, (CASE WHEN (ISNULL(PM.FREIGHT_IGST_AMOUNT,0)<>0 OR LOC.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE) 
				AND PM.FREIGHT<>0 AND ISNULL(PM.FREIGHT_GST_PERCENTAGE,0)<>0
				THEN '0000000000' ELSE '' END)  AS FREIGHT_IGST_REVENUE_AC_CODE
		, (CASE WHEN (ISNULL(PM.FREIGHT_CGST_AMOUNT,0)<>0 OR LOC.GST_STATE_CODE=LMP.AC_GST_STATE_CODE OR ISNULL(PM.FREIGHT_GST_PERCENTAGE,0)=0) 
				AND PM.FREIGHT<>0
				THEN '0000000000' ELSE '' END) AS FREIGHT_LGST_REVENUE_AC_CODE
		, (CASE WHEN ISNULL(PM.FREIGHT_SGST_AMOUNT,0)<>0 AND PM.FREIGHT<>0
				THEN '0000000000' ELSE '' END)  AS FREIGHT_SGST_TAX_AC_CODE
		, (CASE WHEN ISNULL(PM.FREIGHT_CGST_AMOUNT,0)<>0 AND PM.FREIGHT<>0
				THEN '0000000000' ELSE '' END)  AS FREIGHT_CGST_TAX_AC_CODE
		, (CASE WHEN ISNULL(PM.FREIGHT_SGST_AMOUNT,0)<>0  AND PM.FREIGHT<>0
				THEN '0000000000' ELSE '' END)  AS FREIGHT_IGST_TAX_AC_CODE
		
		, (CASE WHEN (ISNULL(PM.OTHER_CHARGES_IGST_AMOUNT,0)<>0 OR LOC.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE) AND PM.OTHER_CHARGES<>0  AND ISNULL(PM.OTHER_CHARGES_GST_PERCENTAGE,0)<>0
				THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_IGST_REVENUE_AC_CODE
		, (CASE WHEN (ISNULL(PM.OTHER_CHARGES_CGST_AMOUNT,0)<>0 OR LOC.GST_STATE_CODE=LMP.AC_GST_STATE_CODE OR ISNULL(PM.OTHER_CHARGES_GST_PERCENTAGE,0)=0 ) AND PM.OTHER_CHARGES<>0
				THEN '0000000000' ELSE '' END) AS OTHER_CHARGES_LGST_REVENUE_AC_CODE
		, (CASE WHEN ISNULL(PM.OTHER_CHARGES_SGST_AMOUNT,0)<>0 AND PM.OTHER_CHARGES<>0
				THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_SGST_TAX_AC_CODE
		, (CASE WHEN ISNULL(PM.OTHER_CHARGES_CGST_AMOUNT,0)<>0 AND PM.OTHER_CHARGES<>0
				THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_CGST_TAX_AC_CODE
		, (CASE WHEN ISNULL(PM.OTHER_CHARGES_SGST_AMOUNT,0)<>0  AND PM.OTHER_CHARGES<>0
				THEN '0000000000' ELSE '' END)  AS OTHER_CHARGES_IGST_TAX_AC_CODE,pm.REMARKS
   INTO #V_PROCESS
   FROM RMM01106 PM   
   LEFT JOIN RMD01106 PD ON PM.RM_ID=PD.RM_ID  
   JOIN #PRTTABLE PT ON PT.MEMO_ID = PM.RM_ID AND PT.MODE='PRT'  
   JOIN LOCATION LOC ON LOC.DEPT_ID=pm.location_Code
   JOIN LMP01106 LMP ON LMP.AC_CODE=PM.AC_CODE
   LEFT JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=PD.PRODUCT_CODE
   LEFT JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE
   LEFT JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE
      GROUP BY PM.RM_ID  
     ,PM.RM_NO  
     ,PM.RM_DT  
	 ,GST_ITC_DT
     ,PM.CREDIT_DAYS  
     ,(CASE WHEN ISNULL(PM.ACCOUNTS_DEPT_ID,'')='' THEN pm.location_Code 
        ELSE PM.ACCOUNTS_DEPT_ID END)  
      ,PM.AC_CODE  
      ,PM.TOTAL_AMOUNT  
      ,PD.BILL_NO
      ,PM.CANCELLED  
      ,PM.TOTAL_AMOUNT  
      ,PM.DN_TYPE   
	  ,pd.bill_no
	  ,pd.bill_dt
	  ,pd.terms
	  ,isnull(pd.pur_cd_percentage,0) 
     ,PM.FREIGHT
	 ,pm.fin_year
     ,PM.OTHER_CHARGES
	 ,PM.FREIGHT_IGST_AMOUNT
	 ,PM.FREIGHT_CGST_AMOUNT
	 ,PM.FREIGHT_SGST_AMOUNT
	 ,PM.OTHER_CHARGES_IGST_AMOUNT
	 ,PM.OTHER_CHARGES_CGST_AMOUNT
	 ,PM.OTHER_CHARGES_SGST_AMOUNT
	 ,ISNULL(PD.GST_PERCENTAGE ,0)
	 ,pd.GST_CESS_PERCENTAGE
	 ,PM.OTHER_CHARGES_GST_PERCENTAGE		 					     
	 ,PM.FREIGHT_GST_PERCENTAGE
	 ,LOC.GST_STATE_CODE
	 ,LMP.AC_GST_STATE_CODE
	 ,PM.FREIGHT_TAXABLE_VALUE
	 ,PM.OTHER_CHARGES_TAXABLE_VALUE
	 ,PM.OH_TAX_METHOD
	 ,PD.MRR_ID
	 ,PM.ROUND_OFF,PM.MANUAL_ROUNDOFF
	, (CASE WHEN IGST_AMOUNT<>0 OR LOC.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE THEN '0000000000' ELSE '' END)
	, (CASE WHEN CGST_AMOUNT<>0 OR LOC.GST_STATE_CODE=LMP.AC_GST_STATE_CODE THEN '0000000000' ELSE '' END)
	, (CASE WHEN IGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)
	, (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)
	, (CASE WHEN CGST_AMOUNT<>0  THEN '0000000000' ELSE '' END)
	
	, (CASE WHEN (ISNULL(PM.FREIGHT_IGST_AMOUNT,0)<>0 OR LOC.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE) AND PM.FREIGHT<>0
		    THEN '0000000000' ELSE '' END)
	, (CASE WHEN (ISNULL(PM.FREIGHT_CGST_AMOUNT,0)<>0 OR LOC.GST_STATE_CODE=LMP.AC_GST_STATE_CODE) AND PM.FREIGHT<>0
		    THEN '0000000000' ELSE '' END)
	, (CASE WHEN ISNULL(PM.FREIGHT_SGST_AMOUNT,0)<>0 AND PM.FREIGHT<>0
		    THEN '0000000000' ELSE '' END)
	, (CASE WHEN ISNULL(PM.FREIGHT_CGST_AMOUNT,0)<>0 AND PM.FREIGHT<>0
		    THEN '0000000000' ELSE '' END)
	, (CASE WHEN ISNULL(PM.FREIGHT_SGST_AMOUNT,0)<>0  AND PM.FREIGHT<>0
		    THEN '0000000000' ELSE '' END)
	
	, (CASE WHEN (ISNULL(PM.OTHER_CHARGES_IGST_AMOUNT,0)<>0 OR LOC.GST_STATE_CODE<>LMP.AC_GST_STATE_CODE) AND PM.OTHER_CHARGES<>0
		    THEN '0000000000' ELSE '' END)
	, (CASE WHEN (ISNULL(PM.OTHER_CHARGES_CGST_AMOUNT,0)<>0 OR LOC.GST_STATE_CODE=LMP.AC_GST_STATE_CODE) AND PM.OTHER_CHARGES<>0
		    THEN '0000000000' ELSE '' END)
	, (CASE WHEN ISNULL(PM.OTHER_CHARGES_SGST_AMOUNT,0)<>0 AND PM.OTHER_CHARGES<>0
		    THEN '0000000000' ELSE '' END)
	, (CASE WHEN ISNULL(PM.OTHER_CHARGES_CGST_AMOUNT,0)<>0 AND PM.OTHER_CHARGES<>0
		    THEN '0000000000' ELSE '' END)
	, (CASE WHEN ISNULL(PM.OTHER_CHARGES_SGST_AMOUNT,0)<>0  AND PM.OTHER_CHARGES<>0
		    THEN '0000000000' ELSE '' END)
	,SECTION_CODE,SD.SUB_SECTION_CODE	,pm.REMARKS    

	--IF @@SPID=374
	--	SELECT 'CHECK V_PROCESS',* FROM #V_PROCESS
	SET @CSTEP = 275
	UPDATE #v_process SET cd_pct=substring(terms,dbo.CHARINDEX_NTH('-',terms,1,5)+1,
				dbo.CHARINDEX_NTH('-',terms,1,6)-dbo.CHARINDEX_NTH('-',terms,1,5)-1),
				applycdontotal=(CASE WHEN SUBSTRING(terms,DBO.CHARINDEX_NTH('-',Terms,1,10)+1,1)='N' THEN 0 ELSE 1 END)
	WHERE ISNULL(terms,'')<>''


	SET @cStep=275.8
	--- Have to handle this special case Where User had raised a Debit note where cd pct was same  across all terms but 
	--- applycdontotal base was different in 2 terms (Suvidha Ticket#03-1582 (22-03-2022)
	UPDATE a SET applycdontotal=b.applycdontotal FROM #v_process a
	JOIN #v_process b ON a.rm_id=b.rm_id
	WHERE a.applycdontotal=0 AND b.applycdontotal=1 AND ISNULL(a.terms,'')<>''


	UPDATE a SET applycdontotal=(case when ISNULL(cd_calc_based_on,1)<>2 THEN 0 ELSE 1 END) 
	FROM #v_process a JOIN lmp01106 b ON a.ac_code=B.AC_CODE
	where ISNULL(a.terms,'')=''

	SET @CSTEP = 276
	UPDATE #v_process SET cd_pct=0 WHERE rm_id in (
	select rm_id from #V_PROCESS group by rm_id 
	having count(distinct cd_pct)>1)

	SET @CSTEP = 276.5
	UPDATE #V_PROCESS SET rm_dt=GST_ITC_DT WHERE ISNULL(GST_ITC_DT,'')<>''

	SET @cStep=277

    IF OBJECT_ID('TEMPDB..#V_PROCESS_OTHERS','U') IS NOT NULL
		DROP TABLE #V_PROCESS_OTHERS
		
	SELECT TOP 1 @CPOSTINGXNTYPE AS XN_TYPE,'CASH_DISC_AC_CODE' AS  COLUMNNAME,'DISCOUNT A/C' AS COLUMNDESC
	INTO #V_PROCESS_OTHERS FROM #V_PROCESS WHERE ISNULL(cd_pct,0)<>0 AND fin_year<'01122'
	UNION ALL
	SELECT TOP  1 @CPOSTINGXNTYPE AS  XN_TYPE,'ROFF_AC_CODE' AS  COLUMNNAME,'ROUND OFF A/C' AS COLUMNDESC
	FROM #V_PROCESS a 
	UNION ALL
	SELECT TOP  1 @CPOSTINGXNTYPE AS  XN_TYPE,'FINPRT_AC_CODE' AS  COLUMNNAME,'FINANCIAL DN A/C' AS COLUMNDESC
	FROM #V_PROCESS WHERE dn_type=2
	
	SET @CSTEP = 280
	EXEC SP3S_GET_POSTING_BLANKAC
		@CXNTYPE=@CPOSTINGXNTYPE,
		@NLOOP=@NLOOP,
		@CERRORMSG=@CERRORMSG OUTPUT,
		@BBLANKACFOUND=@BBLANKACFOUND OUTPUT		
	
	IF @BBLANKACFOUND=1 OR @CERRORMSG<>'' OR @NLOOP=0
		GOTO END_PROC
	
	--if @@spid=517
	--		select 'check revenue ac final',IGST_REVENUE_AC_CODE,lGST_REVENUE_AC_CODE,rm_id from  #v_process

   UPDATE A SET  REF_MRR_ID=PB.MRR_ID
   FROM #V_PROCESS A
   JOIN PIM01106 PB ON PB.BILL_NO=A.RMD_BILL_NO AND PB.AC_CODE=A.AC_CODE AND pb.bill_dt=a.rmd_bill_dt
   WHERE ISNULL(A.ref_mrr_id,'')='' AND PB.CANCELLED=0

   UPDATE A SET REF_MRR_ID=PB.MRR_ID
   FROM #V_PROCESS A
   JOIN PIM01106 PB ON PB.BILL_NO=A.RMD_BILL_NO AND PB.AC_CODE=A.AC_CODE
   WHERE ISNULL(A.ref_mrr_id,'')='' AND PB.CANCELLED=0

   
 CREATE INDEX IX_V_PROCESS_RM_ID ON #V_PROCESS(RM_ID,XN_TYPE)  
   
 SET @NCTR=1  
 

 
 SET @COLDRMID=''
     
 SELECT rm_id,(CASE WHEN ISNULL(applycdontotal,1)=1 THEN total_amount
			   ELSE SUM(puramount) END) cd_base_amount,(CASE WHEN ISNULL(applycdontotal,1)=1 THEN total_amount*cd_pct/100
			   ELSE SUM(puramount*cd_pct/100) END) ignore_cd_base_amount INTO #v_process_cdbase
 FROM #V_PROCESS 
 GROUP BY rm_id,ISNULL(applycdontotal,1),total_amount,cd_pct


 --if @@spid=555
 --begin
	--select 'check cd base',* from  #v_process_cdbase
	--select 'check vprocess',terms,applycdontotal,total_amount,puramount,cd_pct FROM #V_PROCESS 
 --end
 

 SET @CSTEP = 285  
 WHILE EXISTS(SELECT TOP 1 'U' FROM #V_PROCESS ORDER BY RM_ID)  
 BEGIN  
	  SET @CSTEP = 290  
	    
	  SELECT @CRMID='',@CXNTYPE='',@CPARTYACCODE='',@CREFBILLNO=''  
	     
	   
	  SELECT TOP 1 @CRMID=RM_ID,@CRMNO=RM_NO,@CXNTYPE=XN_TYPE,@CPARTYACCODE=AC_CODE,@NDNTYPE=ISNULL(DN_TYPE,0),  
	  @CBILLTYPE=XN_TYPE,@DRMDT=RM_DT,@CLOCGSTSTATECODE=LOC_GST_STATE_CODE,@CPARTYGSTSTATECODE=PARTY_GST_STATE_CODE,
	  @NROUNDOFF=ROUND_OFF,@BMANUALROFF=ISNULL(MANUAL_ROUNDOFF,0),@CREFBILLNO=BILL_NO,@cRemarks=isnull(a.remarks,''),
	  @cFinYear=fin_year
	  FROM #V_PROCESS  A
	  
	  IF @COLDRMID<>@CRMID
		   SET @BNEWENTRY=1
	  ELSE
		   SET @BNEWENTRY=0

	  
	  SET @COLDRMID=@CRMID
	     
	  IF @NDNTYPE=2  
	  BEGIN  
	    IF EXISTS (SELECT TOP 1 PRODUCT_CODE FROM RMD01106 WHERE RM_ID=@CRMID)    
			SET @NDNTYPE=1  
	  END  
		    
	  SET @CSTEP = 300  
	  INSERT @VCHC ( XN_ID,AC_CODE,AMOUNT ) 
		SELECT @CRMID,A.IGST_REVENUE_AC_CODE,-PURAMOUNT
		FROM #V_PROCESS A
		WHERE RM_ID=@CRMID  AND (IGST_AMOUNT<>0 OR (CGST_AMOUNT=0 AND @CLOCGSTSTATECODE<>@CPARTYGSTSTATECODE))
		UNION ALL
		SELECT @CRMID,A.LGST_REVENUE_AC_CODE,-PURAMOUNT
		FROM #V_PROCESS A
		WHERE RM_ID=@CRMID  AND (CGST_AMOUNT<>0 OR (IGST_AMOUNT=0 AND @CLOCGSTSTATECODE=@CPARTYGSTSTATECODE))
			
	  ----FOR FINANCIAL DEBIT NOTE   
	  IF ISNULL(@NDNTYPE,0)=2 
	  BEGIN  
		   INSERT @VCHC ( XN_ID,XN_NO,CRDAYS,AC_CODE,AMOUNT )   
		   SELECT RM_ID,RM_NO,CREDIT_DAYS,@CFINPRTAC,-TOTAL_AMOUNT  
		   FROM #V_PROCESS  
		   WHERE RM_ID=@CRMID    
		  
		   --SUPPLIER SHOULD BE DEBITED WITH TOTAL AMOUNT  
		   INSERT @VCHC ( XN_ID,XN_NO,CRDAYS,AC_CODE,AMOUNT )   
		   SELECT TOP 1 RM_ID,RM_NO,CREDIT_DAYS,AC_CODE,TOTAL_AMOUNT
		   FROM #V_PROCESS  
		   WHERE RM_ID=@CRMID AND TOTAL_AMOUNT<>0  
		   
		   
	  END  
	      
	  SET @CSTEP = 310  
	  		
	  INSERT @VCHC ( XN_ID,XN_NO,CRDAYS,AC_CODE,AMOUNT )   
	  SELECT RM_ID,RM_NO,CREDIT_DAYS,A.IGST_TAX_AC_CODE,-IGST_AMOUNT  
	  FROM #V_PROCESS  A
	  WHERE RM_ID=@CRMID AND IGST_AMOUNT<>0
	  UNION ALL
	  SELECT RM_ID,RM_NO,CREDIT_DAYS,A.CGST_TAX_AC_CODE,-CGST_AMOUNT  
	  FROM #V_PROCESS  A
	  WHERE RM_ID=@CRMID AND CGST_AMOUNT<>0
	  UNION ALL
	  SELECT RM_ID,RM_NO,CREDIT_DAYS,A.SGST_TAX_AC_CODE,-SGST_AMOUNT  
	  FROM #V_PROCESS A  
	  WHERE RM_ID=@CRMID AND SGST_AMOUNT<>0
	  UNION ALL
	  SELECT RM_ID,RM_NO,CREDIT_DAYS,gst_cess_ac_code,-a.gst_cess_AMOUNT
	  FROM #V_PROCESS a
	  WHERE RM_ID=@CRMID AND ISNULL(a.gst_cess_AMOUNT,0)<>0
						  	  	  		      
	  SET @CSTEP = 320  
	  SET @CSTEP = 330  

	  IF @BNEWENTRY=1
	  BEGIN	
		
		print 'post-1'
		  INSERT @VCHC (XN_ID,XN_NO,AC_CODE,AMOUNT)   
		  SELECT TOP 1 RM_ID,RM_NO,(CASE WHEN ISNULL(FREIGHT_IGST_AMOUNT,0)<>0 THEN 
					  FREIGHT_IGST_REVENUE_AC_CODE ELSE FREIGHT_LGST_REVENUE_AC_CODE END),-FREIGHT
		  FROM #V_PROCESS  A
		  WHERE RM_ID=@CRMID AND FREIGHT<>0 
		
		print 'post-2'
		  INSERT @VCHC (XN_ID,XN_NO,AC_CODE,AMOUNT)   
		  SELECT TOP 1  RM_ID,RM_NO,A.FREIGHT_IGST_TAX_AC_CODE,-FREIGHT_IGST_AMOUNT
		  FROM #V_PROCESS  A
		  WHERE RM_ID=@CRMID AND FREIGHT_IGST_AMOUNT<>0
		  UNION ALL
		  SELECT TOP 1  RM_ID,RM_NO,A.FREIGHT_CGST_TAX_AC_CODE,-FREIGHT_CGST_AMOUNT
		  FROM #V_PROCESS  A
		  WHERE RM_ID=@CRMID AND FREIGHT_CGST_AMOUNT<>0
		  UNION ALL
		  SELECT TOP 1  RM_ID,RM_NO,A.FREIGHT_SGST_TAX_AC_CODE,-FREIGHT_SGST_AMOUNT
		  FROM #V_PROCESS  A
		  WHERE RM_ID=@CRMID AND FREIGHT_SGST_AMOUNT<>0
		  
		  SET @CSTEP = 340  
		
		  --OTHER CHARGES AMOUNT SHOULD BE CREDITED  

		  print 'post-3'
		  INSERT @VCHC (XN_ID,XN_NO,AC_CODE,AMOUNT)   
		  SELECT TOP 1 RM_ID,RM_NO,(CASE WHEN ISNULL(OTHER_CHARGES_IGST_AMOUNT,0)<>0 THEN 
					  OTHER_CHARGES_IGST_REVENUE_AC_CODE ELSE OTHER_CHARGES_LGST_REVENUE_AC_CODE END),-OTHERCHARGES
		  FROM #V_PROCESS  A
		  WHERE RM_ID=@CRMID AND OTHERCHARGES<>0 
		  
		  print 'post-4'
		  INSERT @VCHC (XN_ID,XN_NO,AC_CODE,AMOUNT)   
		  SELECT TOP 1  RM_ID,RM_NO,A.OTHER_CHARGES_IGST_TAX_AC_CODE,-OTHER_CHARGES_IGST_AMOUNT
		  FROM #V_PROCESS  A
		  WHERE RM_ID=@CRMID AND OTHER_CHARGES_IGST_AMOUNT<>0
		  UNION ALL
		  SELECT TOP 1  RM_ID,RM_NO,A.OTHER_CHARGES_CGST_TAX_AC_CODE,-OTHER_CHARGES_CGST_AMOUNT
		  FROM #V_PROCESS  A
		  WHERE RM_ID=@CRMID AND OTHER_CHARGES_CGST_AMOUNT<>0
		  UNION ALL
		  SELECT TOP 1  RM_ID,RM_NO,A.OTHER_CHARGES_SGST_TAX_AC_CODE,-OTHER_CHARGES_SGST_AMOUNT
		  FROM #V_PROCESS  A
		  WHERE RM_ID=@CRMID AND OTHER_CHARGES_SGST_AMOUNT<>0

		  SET @CSTEP = 350  
		  
		  print 'post-5'
		  --ROUNDOFF AMOUNT SHOULD BE CREDITED  
		  INSERT @VCHC ( XN_ID,XN_NO,AC_CODE,AMOUNT )   
			SELECT TOP 1 RM_ID,RM_NO,@CROUNDOFFACCODE,(ISNULL(GST_ROUND_OFF,0)+isnull(round_off,0))*-1 FROM RMM01106
			WHERE  RM_ID=@CRMID AND  ISNULL(GST_ROUND_OFF,0)+isnull(round_off,0)<>0
	  
 		  SET @CSTEP = 370  
		  SET @CVMID = ''  
		  SELECT @CVMID = A.VM_ID   
		   FROM POSTACT_VOUCHER_LINK A  
			JOIN VM01106 B ON A.VM_ID=B.VM_ID  
			 WHERE B.CANCELLED=0 AND A.MEMO_ID = @CRMID AND A.XN_TYPE=@CXNTYPE  
		    
		    
		    
		  SET @CSTEP = 380  
		  IF ISNULL(@CVMID,'') = ''  
		  BEGIN  
			  SET @CVMID = 'LATERPRT-'+RTRIM(LTRIM(CONVERT(VARCHAR,@NCTR)))  
		   SET @NCTR = @NCTR+1  
		  END  
		    
		  SET @CSTEP = 390  
		  INSERT INTO @VLINK(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )  
		  SELECT @CVMID,@CRMID,@CXNTYPE,LAST_UPDATE FROM RMM01106 WHERE RM_ID = @CRMID AND @CBILLTYPE='PRT'  
		  UNION  
		  SELECT @CVMID,@CRMID,@CXNTYPE,LAST_UPDATE FROM EOSSDNM WHERE MEMO_ID = @CRMID AND @CBILLTYPE='EOSSPRT'  
	  END
	   	    
	  --GET THE CONCATENATED BILL NOS FOR THE DEBITNOTE  
	  SET @CPURBILLS=NULL  
	  SELECT @CPURBILLS=ISNULL(@CPURBILLS+',','')+BILL_NO  
	  FROM #V_PROCESS  
	  WHERE RM_ID=@CRMID  
	    
	  SELECT @CQTYNARRATION=(CASE WHEN @CBILLTYPE='EOSSPRT' THEN '' ELSE  ' (QTY:'+LTRIM(RTRIM(STR(SUM(QUANTITY))))+')' END)  
	  FROM #V_PROCESS  
	  WHERE RM_ID=@CRMID  
	    
	  SET @NTMPCRDISCOUNTPERCENTAGE=0   
	    
	  --IF @CRMID='HO0111700000HO00004024'  
	  -- SELECT 'CHECK @VCHC',* FROM @VCHC WHERE XN_ID = @CRMID  
	  
	   
	  SET @CSTEP = 410  
	  INSERT @VDC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE,AC_NAME)  
	  SELECT @CVMID  
	   , 'LATER-'+LEFT(CONVERT(VARCHAR(40),NEWID()),28) AS VD_ID  
	   , A.AC_CODE  
	   , (CASE WHEN @NDNTYPE =2 THEN RM.REMARKS  ELSE 
		(CASE WHEN  @CBILLTYPE='EOSSPRT' THEN 'EOSS ' ELSE '' END)+'D/N# ' + @CRMNO END)  
	   +(CASE WHEN ISNULL(@CPURBILLS,'')='' THEN '' ELSE ' AGAINST BILL# '+@CPURBILLS END)+ISNULL(@CQTYNARRATION,'')
	   +(CASE WHEN @bPostRemarksInNarration=1 THEN ' '+rm.REMARKS ELSE '' END) AS NARRATION  
	   ,(CASE WHEN SUM(AMOUNT)>0 THEN SUM(AMOUNT) ELSE 0 END) AS DEBIT_AMOUNT  
	   ,(CASE WHEN SUM(AMOUNT)<0 THEN ABS(SUM(AMOUNT)) ELSE 0 END) AS CREDIT_AMOUNT  
	   ,(CASE WHEN SUM(AMOUNT) > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE  

	   ,B.AC_NAME  
		FROM @VCHC A  
		LEFT JOIN RMM01106 RM ON A.XN_ID =RM.RM_ID 
		JOIN LMV01106 B ON A.AC_CODE = B.AC_CODE  
		WHERE A.XN_ID = @CRMID  
		GROUP BY A.AC_CODE,B.AC_NAME,RM.REMARKS
		ORDER BY X_TYPE,ABS(SUM(AMOUNT)) DESC  
	  
	   --SELECT * FROM @VDC
	   --RETURN
	  SET @CVDID=''  
	  SET @CSTEP =415   
	     
	  --drop table V_PROCESS
	  --    select * ,@CRMID as rm into V_PROCESS from #V_PROCESS


	  SET @CSTEP =420  
	  DECLARE @NFDNTermsCode CHAR(5)

	   IF ISNULL(@NDNTYPE,0)=2
		SELECT @NFDNCD=(substring(c.terms,dbo.CHARINDEX_NTH('-',c.terms,1,5)+1,
				dbo.CHARINDEX_NTH('-',c.terms,1,6)-dbo.CHARINDEX_NTH('-',c.terms,1,5)-1)/100.00)*
		(CASE WHEN SUBSTRING(c.terms,DBO.CHARINDEX_NTH('-',c.Terms,1,10)+1,1)='1' THEN a.TOTAL_AMOUNT ELSE a.PURAMOUNT END) FROM #V_PROCESS A
		JOIN RMM01106 B ON A.RM_ID=B.RM_ID
		JOIN PIM01106 C ON C.MRR_ID=B.REFMEMOID
		WHERE B.RM_ID=@CRMID AND ISNULL(c.terms,'')<>''
	  ELSE
		SET @NFDNCD=0

	    SET @CSTEP =422
		
			
	  IF @BDONOTPOSTCDENTRY=0 AND @cFinYear<'01122'
		  INSERT @VDC ( VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE,   
			  AC_NAME,ref_remarks)  
		  SELECT @CVMID vm_id,'LATER-'+LEFT(CONVERT(VARCHAR(40),NEWID()),28) AS VD_ID,@CDISCACCODE as ac_code
			 ,'(CD REVERSAL-1) D/N# ' + @CRMNO
			+(CASE WHEN ISNULL(@CPURBILLS,'')='' THEN '' ELSE ' AGAINST BILL# '+ISNULL(@CPURBILLS,'') END)+
			ISNULL(@CQTYNARRATION,'')
			+(CASE WHEN @bPostRemarksInNarration=1 THEN ' '+@cRemarks ELSE '' END) AS NARRATION  
			 ,(CASE WHEN @NFDNCD=0 THEN (CASE WHEN ISNULL(applycdontotal,1)=1 THEN sum(a.rmdnet*a.cd_pct/100)
			   ELSE SUM(A.puramount*cd_pct/100) END) ELSE @NFDNCD END) as debit_amount,0 credit_amount,'DR'  x_type,
			   B.AC_NAME,'(CD REVERSAL)' AS ref_remarks
		  FROM #V_PROCESS A ,LM01106 B  
		  WHERE A.RM_ID=@CRMID AND B.AC_CODE= @CPARTYACCODE   
		  AND (a.cd_pct<>0 OR @NFDNCD<>0)
		  GROUP BY A.RM_NO,B.AC_NAME,ISNULL(applycdontotal,1)
		   
		  UNION ALL

		  SELECT @CVMID vm_id,'LATER-'+LEFT(CONVERT(VARCHAR(40),NEWID()),28) AS VD_ID, @CPARTYACCODE AS AC_CODE  
			 ,'(CD REVERSAL-2) D/N# '+@CRMNO  
			+(CASE WHEN ISNULL(@CPURBILLS,'')='' THEN '' ELSE ' AGAINST BILL# '+rmd_bill_no END)+@CQTYNARRATION
			+(CASE WHEN @bPostRemarksInNarration=1 THEN ' '+@cRemarks ELSE '' END) AS NARRATION
			 ,0 as debit_amount,(CASE WHEN @NFDNCD=0 THEN (CASE WHEN ISNULL(applycdontotal,1)=1 THEN SUM(a.rmdnet*a.cd_pct/100) 
			   ELSE SUM(A.puramount*cd_pct/100) END) ELSE @NFDNCD END) as credit_amount,'CR' x_type,
			   B.AC_NAME,'(CD REVERSAL)' AS ref_remarks
		  FROM #V_PROCESS A,LM01106 B 
		  WHERE A.RM_ID=@CRMID  and B.AC_CODE= @CPARTYACCODE  
		  AND (a.cd_pct<>0 OR @NFDNCD<>0)
		  GROUP BY a.ref_mrr_id, A.RM_NO,B.AC_NAME,ISNULL(A.REF_MRR_ID,'') ,ISNULL(applycdontotal,1),rmd_bill_no

	  
	  SET @CVDID=''  
	  SET @CSTEP =425   


	  IF ISNULL(@NDNTYPE,0)<>2  
	  BEGIN


	   SELECT @bBillbyBill=bill_by_bill from lmp01106  a(NOLOCK)
	   join rmm01106 b (nolock) on a.ac_code=b.ac_code  WHERE rm_id=@CRMID

	   SET @cVdId='LATER-'+LEFT(CONVERT(VARCHAR(40),NEWID()),28)


	   IF @bBillbyBill=1
		   INSERT @VDC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE,   
			   AC_NAME,ref_remarks,REF_MRR_ID,cd_pct,cd_posted,supplier_entry,rm_id,taxable_value)  
		   SELECT @CVMID,@cVdId AS VD_ID,
		   @CPARTYACCODE AS AC_CODE  
			  ,(CASE WHEN  @CBILLTYPE='EOSSPRT' THEN 'EOSS ' ELSE '(RMDNET)' END)+'D/N# ' + @CRMNO  
			 +(CASE WHEN ISNULL(@CPURBILLS,'')='' THEN '' ELSE ' AGAINST BILL# '+@CREFBILLNO END)+@CQTYNARRATION
			 +(CASE WHEN rm.cr_received=1 AND rm.mode=1 THEN 'C/N received agst #'+isnull(rm.cn_no,'') ELSE '' END)
			 +(CASE WHEN @bPostRemarksInNarration=1 THEN ' '+@cRemarks ELSE '' END) AS NARRATION
			  ,SUM(ISNULL(A.RMDNET,0)),0,'DR',B.AC_NAME,'DEBIT NOTE' AS ref_remarks,ISNULL(A.REF_MRR_ID,'') AS REF_MRR_ID,
			  a.cd_pct,(CASE WHEN  ISNULL(a.cd_pct,0)<>0 AND @BDONOTPOSTCDENTRY=0  AND A.fin_year<'01122' THEN 1 ELSE 0 END) as cd_posted,
			1 as supplier_entry,a.rm_id,sum(a.taxable_value) taxable_value
		   FROM #V_PROCESS A  
		  JOIN LM01106 B ON B.AC_CODE= @CPARTYACCODE  
		  join RMM01106 RM(nolock) on RM.rm_id=A.RM_ID
		   WHERE A.RM_ID=@CRMID  
		   GROUP BY A.RM_NO,B.AC_NAME,ISNULL(A.REF_MRR_ID,'') ,a.cd_pct,ApplyCDOnTotal,a.total_amount,a.fin_year,a.rm_id,rm.cr_received,rm.mode,rm.cn_no
		   HAVING SUM(ISNULL(A.RMDNET,0))<>0  
		ELSE
		   INSERT @VDC ( VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE, AC_NAME,ref_remarks,REF_MRR_ID)  
		   SELECT @CVMID,@cVdId AS VD_ID,@CPARTYACCODE AS AC_CODE  
			  ,(CASE WHEN  @CBILLTYPE='EOSSPRT' THEN 'EOSS ' ELSE '(RMDNET)' END)+'D/N# ' + @CRMNO  
			 +(CASE WHEN ISNULL(@CPURBILLS,'')='' THEN '' ELSE ' AGAINST BILL# '+@CREFBILLNO END)+@CQTYNARRATION
			 +(CASE WHEN rm.cr_received=1 AND rm.mode=1 THEN 'C/N received agst #'+isnull(rm.cn_no,'') ELSE '' END)
			 +(CASE WHEN @bPostRemarksInNarration=1 THEN ' '+@cRemarks ELSE '' END) AS NARRATION
			  ,SUM(ISNULL(A.RMDNET,0)),0,'DR',B.AC_NAME,'DEBIT NOTE' AS ref_remarks,'' AS REF_MRR_ID
			  
		   FROM #V_PROCESS A  
		   JOIN LM01106 B ON B.AC_CODE= @CPARTYACCODE  
		   join RMM01106 RM(nolock) on RM.rm_id=A.RM_ID
		  WHERE A.RM_ID=@CRMID  
		   GROUP BY A.RM_NO,B.AC_NAME,rm.cr_received,rm.mode,rm.cn_no
		   HAVING SUM(ISNULL(A.RMDNET,0))<>0  
        
	  END
	   
	  --CREATING VOUCHERS DETAIL FOR SUPPLIER ACCOUNT FOR DN AMOUNT DEBITED/CASH DISCOUNT CREDITED/PRTAMOUNT CREDITED  	  
	  IF @BDONOTPOSTCDENTRY=0 and @cFinYear<'01122'     
	  BEGIN
		  INSERT @VDC ( VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE,AC_NAME,REF_MRR_ID,ref_remarks)  
		  SELECT @CVMID,'LATER-'+LEFT(CONVERT(VARCHAR(40),NEWID()),28) AS VD_ID, @CPARTYACCODE AS AC_CODE  
			 ,'D/N# ' + @CRMNO
			+'(FDN AMOUNT)'+(CASE WHEN ISNULL(@CPURBILLS,'')='' THEN '' ELSE ' AGAINST BILL# '+@CREFBILLNO END)+@CQTYNARRATION
			+(CASE WHEN @bPostRemarksInNarration=1 THEN ' '+@cRemarks ELSE '' END) AS NARRATION  
			 ,0,SUM(A.PRTAMOUNT),'CR',B.AC_NAME,ISNULL(A.REF_MRR_ID,'') AS REF_MRR_ID,'(FDN AMOUNT)' AS ref_remarks      
		  FROM #V_PROCESS A  
		  JOIN LM01106 B ON B.AC_CODE= @CPARTYACCODE  
		  WHERE A.RM_ID=@CRMID  
		  GROUP BY A.RM_NO,B.AC_NAME,ISNULL(A.REF_MRR_ID,'')  
		  HAVING SUM(A.PRTAMOUNT)<>0  
		  
		  

		  INSERT @VDC ( VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE,   
						AC_NAME,REF_MRR_ID,ref_remarks)  
		  SELECT @CVMID,'LATER-'+LEFT(CONVERT(VARCHAR(40),NEWID()),28) AS VD_ID,@CFINPRTAC AS AC_CODE  
			 ,'D/N# ' + @CRMNO  
			+'(FDN AMOUNT)'+(CASE WHEN ISNULL(@CPURBILLS,'')='' THEN '' ELSE ' AGAINST BILL# '+@CREFBILLNO END)+@CQTYNARRATION
			+(CASE WHEN @bPostRemarksInNarration=1 THEN ' '+@cRemarks ELSE '' END) AS NARRATION 
			 ,SUM(A.PRTAMOUNT),0,'DR'
			 ,B.AC_NAME,'' AS REF_MRR_ID,'' AS ref_remarks      
		  FROM #V_PROCESS A  
		  JOIN LM01106 B ON B.AC_CODE= @CFINPRTAC  
		  WHERE A.RM_ID=@CRMID  
		  GROUP BY A.RM_NO,B.AC_NAME  
		  HAVING SUM(A.PRTAMOUNT)<>0     
		  
	   END	         
                 

		 SET @CSTEP = 430  
		 SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC  
		 WHERE VM_ID = @CVMID  

		IF @nDrTotal<>@nCrTotal AND ABS(@nDrTotal-@nCrTotal)<=1
		BEGIN
			INSERT @VDC (VM_ID, VD_ID, AC_CODE,ac_name, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE)
			SELECT TOP 1 @cVmId as vm_id,'later-roff' as vd_id,@CROUNDOFFACCODE as ac_code,b.ac_name,narration,
			(CASE WHEN (@NDRTOTAL-@NCRTOTAL)>0 then 0 else ABS(@NDRTOTAL-@NCRTOTAL) END) AS DEBIT_AMOUNT,
			(CASE WHEN (@NDRTOTAL-@NCRTOTAL)<0 then 0 else (@NDRTOTAL-@NCRTOTAL) END) AS CREDIT_AMOUNT,
			(CASE WHEN (@NDRTOTAL-@NCRTOTAL)<0 then 'Dr' ELSE 'Cr' END) AS x_type
			FROM @vdC a JOIN lm01106 b on @CROUNDOFFACCODE=b.ac_code
			where vm_id=@cVmId

			 SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC  
			 WHERE VM_ID = @CVMID  
		END
	                   
		 SET @CSTEP = 440  
		 SET @NTOTQUANTITY= 0  
		 SET @NTOTNETAMOUNT = 0  
	       
		 SET @CSTEP = 450      
			SET @CVOUCHERNO = ''   
			SELECT TOP 1 @CVOUCHERNO = VOUCHER_NO FROM VM01106 WHERE VM_ID = @CVMID  
			IF ISNULL(@CVOUCHERNO,'') = ''  
	   SET @CVOUCHERNO = @CVMID  
	    
			SET @CSTEP = 460  
			INSERT @VMC ( VM_ID,VOUCHER_NO,VOUCHER_DT, VOUCHER_CODE, DEPT_ID,   
		   BILL_TYPE, BILL_NO, BILL_ID, BILL_DT, BILL_AC_CODE,   
		   PARTY_NAME, QUANTITY, NET_AMOUNT, RM_LIST, CANCELLED,DRTOTAL,CRTOTAL  
		   ,VOUCHER_TYPE,DEPT_NAME,BILL_STATUS )  
	  SELECT @CVMID,@CVOUCHERNO,A.RM_DT,@CVOUCHERCODE,A.DEPT_ID,@CBILLTYPE,A.RM_NO,A.RM_ID,A.RM_DT,A.AC_CODE  
		 ,B.AC_NAME,SUM(A.QUANTITY),A.TOTAL_AMOUNT-SUM(A.DED_AMOUNT),ISNULL(@CPURBILLS,''),A.CANCELLED,  
		 @NDRTOTAL,@NCRTOTAL,'DEBIT NOTE',C.DEPT_NAME,'NEW'  
	  FROM #V_PROCESS A  
	  JOIN LM01106 B ON A.AC_CODE=B.AC_CODE  
	  JOIN LOCATION C ON A.DEPT_ID=C.DEPT_ID  
	  WHERE A.RM_ID=@CRMID    
	  GROUP BY A.RM_DT,A.DEPT_ID,A.RM_NO,A.RM_ID,A.RM_DT,A.AC_CODE  
		 ,B.AC_NAME,A.TOTAL_AMOUNT,C.DEPT_NAME,A.CANCELLED  
	    

	     
		 SET @CSTEP = 460  
		 DELETE @VCHC  
		 	     
		 PRINT 'POSTING FOR PURCHASE RETURN -5.9:('+@CRMID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE
	     	
		 DELETE FROM #V_PROCESS WHERE RM_ID = @CRMID AND XN_TYPE=@CXNTYPE	 
 END         
 
 ------- START OF WORKING OF BILL BY BILL ENTRIES POSTING    
 

    --- Checking of Memos came into Reposting due to change in last_update
    SET @CSTEP = 462

	SELECT  A.vm_id,A.CREDIT_AMOUNT,A.DEBIT_AMOUNT,B.CREDIT_AMOUNT AS ORG_CRAMT,B.DEBIT_AMOUNT AS ORG_DRAMT,
	convert(bit,0) as bb_diff,convert(varchar(200),'') ref_no,convert(date,'') due_dt,a.narration_len,b.narration_len narration_len_posted  INTO #DIFFVMS FROM 
	(SELECT  a.vm_id,b.cancelled,SUM(ISNULL(CREDIT_AMOUNT,0)) AS CREDIT_AMOUNT,SUM(ISNULL(DEBIT_AMOUNT,0)) AS DEBIT_AMOUNT,sum(len(a.narration)) narration_len
	 FROM @VDC A JOIN @VMC B ON A.VM_ID=B.VM_ID 
	 GROUP BY a.vm_id,b.cancelled) A
	 LEFT OUTER JOIN 						  
	(SELECT a.vm_id,SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT,SUM(DEBIT_AMOUNT) AS DEBIT_AMOUNT,sum(len(a.narration)) narration_len
	 FROM VD01106 A (NOLOCK) JOIN VM01106 B (NOLOCK) ON A.VM_ID=B.VM_ID
	 JOIN  @VMC c ON c.vm_id=b.vm_id
	 WHERE B.BILL_TYPE='PRT' AND B.CANCELLED=0 
	 GROUP BY a.vm_id) B ON A.vm_id=b.vm_id
	 WHERE (ABS(ISNULL(A.CREDIT_AMOUNT+A.DEBIT_AMOUNT,0)-ISNULL(B.DEBIT_AMOUNT+B.CREDIT_AMOUNT,0))>=1 OR isnull(A.narration_len,0)<>ISNULL(b.narration_len,0))
	 or a.cancelled=1 

	 --if @@spid=133
	 --begin
		--select 'check #DIFFVMS',  * from #DIFFVMS where bill_id='010112401K2-000014'
		--select 'check bill 010112401K2-000014', * from @vmc where bill_id='010112401K2-000014'
	 --end

    SET @CSTEP = 465
	UPDATE a SET last_update=b.last_update FROM postact_voucher_link a WITH (ROWLOCK)
	JOIN @VLINK b ON a.vm_id=b.VM_ID AND a.memo_id=b.MEMO_ID
	LEFT OUTER JOIN #DIFFVMS c ON A.vm_id=c.vm_id
	WHERE a.xn_type='PRT' and C.VM_ID IS NULL
	
	SET @CSTEP=472


	print 'delete balanced posted entries-1'
 	DELETE A FROM @VMC A LEFT OUTER JOIN  #DIFFVMS B ON A.vm_id=b.vm_id
	WHERE B.vm_ID IS NULL
	
	print 'delete balanced posted entries-2'
	DELETE a FROM @vdC a LEFT OUTER JOIN @vmC b ON a.vm_id=b.vm_id WHERE b.vm_id IS NULL


	PRINT 'POSTING FOR PURCHASE RETURN -5.0.1:('+@CRMID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE
	SET @CSTEP = 500
    INSERT @TBILL_BY_BILL_REF  
	(rm_id,VM_ID,VD_ID,REF_NO,AMOUNT,LAST_UPDATE,X_TYPE,CR_DAYS,ref_remarks,ac_code,cd_percentage,cd_posted,org_bill_taxable_value)  
      
	SELECT d.rm_id, A.VM_ID,VD_ID,DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,LTRIM(RTRIM(B.BILL_NO)),B.BILL_DT,'DR',@CVMID) AS REF_NO,  
	SUM(DEBIT_AMOUNT-CREDIT_AMOUNT) AS AMOUNT,GETDATE(),'' AS X_TYPE,
	A.CREDIT_DAYS,ref_remarks,a.ac_code,a.cd_pct,a.cd_posted,sum(a.taxable_value) org_bill_taxable_value 
	FROM @VDC   A 
	JOIN @VMC B ON A.VM_ID=B.VM_ID
	JOIN LMP01106 C ON C.AC_CODE=A.AC_CODE
	JOIN RMM01106 D ON D.RM_ID=B.BILL_ID
	LEFT OUTER JOIN 
	(SELECT A.RM_ID FROM RMM01106 A 
	 LEFT OUTER JOIN RMD01106 B ON A.RM_ID=B.RM_ID
	 JOIN @VMC c ON c.bill_id=b.rm_id
	 WHERE B.RM_ID IS NULL) E ON E.RM_ID=D.RM_ID
	WHERE BILL_BY_BILL=1 AND ((D.DN_TYPE=2 AND E.RM_ID IS NOT NULL) OR @CPOSTBILLBYBILLREFTYPE='2')
	GROUP BY d.rm_id,A.VM_ID,A.VD_ID,A.CREDIT_DAYS,ref_remarks,A.AC_CODE,B.BILL_NO,B.BILL_DT,A.CD_PCT,a.cd_posted
    



    IF @CPOSTBILLBYBILLREFTYPE<>'2'
    BEGIN
		 SET @CSTEP = 465  
		 
		 IF OBJECT_ID('TEMPDB..#TMPMEMOS','U') IS NOT NULL
			DROP TABLE #TMPMEMOS
		 
		 SELECT A.VM_ID,B.MEMO_ID,A.AC_CODE,DN_TYPE,RM_NO,RM_DT,D.REF_NO,ISNULL(A.REF_MRR_ID,'') AS REF_MRR_ID INTO #TMPMEMOS FROM @VDC A 
		 JOIN POSTACT_VOUCHER_LINK VL ON A.REF_MRR_ID=VL.MEMO_ID
		 JOIN VD01106 C ON C.VM_ID=VL.VM_ID AND C.AC_CODE=A.AC_CODE
		 JOIN BILL_BY_BILL_REF D ON D.VD_ID=C.VD_ID
		 JOIN VM01106 E ON E.VM_ID=C.VM_ID
		 JOIN @VLINK B ON B.VM_ID=A.VM_ID
		 JOIN RMM01106 F ON F.RM_ID=B.MEMO_ID
		 JOIN LMP01106 LMP ON LMP.AC_CODE=A.AC_CODE
		 WHERE ISNULL(A.REF_MRR_ID,'')<>'' AND VL.XN_TYPE='PUR' AND E.CANCELLED=0 AND LMP.BILL_BY_BILL=1
		 AND  B.XN_TYPE='PRT' AND ISNULL(A.REF_MRR_ID,'')<>'' 
		 GROUP BY A.VM_ID,B.MEMO_ID,A.AC_CODE,DN_TYPE,RM_NO,RM_DT,D.REF_NO,ISNULL(A.REF_MRR_ID,'')
		 UNION
		 SELECT A.VM_ID,B.MEMO_ID,A.AC_CODE,DN_TYPE,RM_NO,RM_DT,'' AS REF_NO,ISNULL(A.REF_MRR_ID,'') FROM @VDC A 
		 LEFT OUTER JOIN 
		 (SELECT C.REF_MRR_ID FROM POSTACT_VOUCHER_LINK VL
		  JOIN VD01106 B ON B.VM_ID=VL.VM_ID
		  JOIN @VDC C ON C.AC_CODE=B.AC_CODE AND C.REF_MRR_ID=VL.MEMO_ID
		  JOIN VM01106 D ON D.VM_ID=B.VM_ID
		  WHERE VL.XN_TYPE='PUR' AND CANCELLED=0) C ON C.REF_MRR_ID=A.REF_MRR_ID    
		  JOIN @VLINK B ON B.VM_ID=A.VM_ID
		 JOIN RMM01106 F ON F.RM_ID=B.MEMO_ID
		 JOIN LMP01106 LMP ON LMP.AC_CODE=A.AC_CODE
		 WHERE LMP.BILL_BY_BILL=1 AND  B.XN_TYPE='PRT' AND C.REF_MRR_ID IS NULL
		 GROUP BY A.VM_ID,B.MEMO_ID,A.AC_CODE,DN_TYPE,RM_NO,RM_DT,ISNULL(A.REF_MRR_ID,'')
		 
		 UPDATE A SET REF_BILL_NO=B.REF_NO FROM @VDC A
		 JOIN #TMPMEMOS B ON A.REF_MRR_ID=B.REF_MRR_ID
		 
		 
		 --if @@spid=372		 
		 --SELECT 'MEMOS CHECK',* FROM #TMPMEMOS 
		 
		 IF EXISTS (SELECT TOP 1 * FROM #TMPMEMOS)
		 BEGIN
			 SET @CSTEP = 467
			 
			 PRINT 'POSTING FOR PURCHASE RETURN -5.0.2:('+@CRMID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE
			 
			 IF OBJECT_ID('tempdb..#tmpBbBal','u') IS NOT NULL
				DROP TABLE #tmpBbBal

			
			 PRINT 'POSTING FOR PURCHASE RETURN -5.0.3:('+@CRMID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE			 
				
			 SELECT CONVERT(VARCHAR(50),'') PREV_POSTED_VM_ID,CONVERT(DATE,'') AS VOUCHER_DT, b.ac_code,a.REF_NO,
			 SUM( CASE WHEN A.X_TYPE = 'Dr' THEN -A.AMOUNT ELSE A.AMOUNT END) AS pending_amount,
			 CONVERT(NUMERIC(10,2),0) prev_posted_amt
			 INTO #tmpBbBal  FROM BILL_BY_BILL_REF A  
			 JOIN VD01106 B WITH  (INDEX=IND_VD_AC_CODE) ON A.VD_ID = B.VD_ID  
			 JOIN VM01106 C ON B.VM_ID = C.VM_ID  
			 WHERE B.AC_CODE in (select ac_code from #TMPMEMOS)  AND C.CANCELLED = 0 
			 GROUP BY b.ac_code,a.REF_NO
			 HAVING SUM(CASE WHEN A.X_TYPE = 'Dr' THEN -A.AMOUNT ELSE A.AMOUNT END)>0

			 SET @CSTEP = 469
			 SELECT c.vm_id posted_vm_id, b.ac_code,a.REF_NO,
			 SUM( CASE WHEN A.X_TYPE = 'Dr' THEN -A.AMOUNT ELSE A.AMOUNT END) AS pending_amount
			 INTO #tmpDnBbBal  FROM BILL_BY_BILL_REF A (NOLOCK) 
			 JOIN VD01106 B WITH  (INDEX=IND_VD_AC_CODE) ON A.VD_ID = B.VD_ID  
			 JOIN VM01106 C ON B.VM_ID = C.VM_ID  
			 JOIN @VLINK d ON d.VM_ID=c.VM_ID
			 GROUP BY b.ac_code,a.REF_NO,c.vm_id



			 SET @CSTEP = 470.2
			 UPDATE a SET prev_posted_amt=b.pending_amount,pending_amount=a.pending_amount+abs(b.pending_amount),
			 prev_posted_vm_id=b.posted_vm_id
			 FROM #tmpBbBal a JOIN #tmpDnBbBal b ON a.ac_code=b.ac_code AND a.REF_NO=b.REF_NO
			 
			 SET @CSTEP = 471

			 INSERT INTO #tmpBbBal (PREV_POSTED_VM_ID,VOUCHER_DT,ac_code,ref_no,pending_amount,prev_posted_amt)
			 SELECT PREV_POSTED_VM_ID,VOUCHER_DT,a.ac_code,a.ref_no,abs(a.pending_amount) pending_amount,
			 a.pending_amount
			 FROM #tmpDnBbBal a LEFT JOIN  #tmpBbBal b ON a.AC_CODE=b.AC_CODE AND a.REF_NO=b.REF_NO
			 WHERE b.REF_NO IS NULL


			 SET @CSTEP = 473
			 
			DELETE a FROM #tmpBbBal a LEFT JOIN 
			(select  a.ac_code,a.ref_no from #tmpBbBal a  JOIN BILL_BY_BILL_REF b
			 on a.REF_NO=b.REF_NO
			 JOIN vd01106 c (NOLOCK) ON c.ac_code=a.ac_code AND c.VD_ID=b.VD_ID
			 JOIN POSTACT_VOUCHER_LINK d (NOLOCK) ON d.vm_id=c.VM_ID
			 JOIN vm01106 e (NOLOCK) ON e.vm_id=c.vm_id
			 WHERE xn_type='pur' and cancelled=0) b ON a.ac_code=b.ac_code AND a.REF_NO=b.ref_no
			 WHERE b.REF_NO  IS NULL 

			 SET @CSTEP = 475

			 UPDATE a SET voucher_dt=d.voucher_dt from #tmpBbBal a
			 JOIN bill_by_bill_ref b on a.ref_no=b.ref_no
			 join vd01106 c on c.vd_id=b.vd_id
			 join vm01106 d on d.vm_id=c.vm_id
			 where c.ac_code=a.ac_code AND (BILL_TYPE=@CSEARCHREFBILLTYPE OR LEFT(d.VM_ID,2)='OB')

			 --if @@spid=65
			 --begin
				--select 'check #tmpDnBbBal',* from #tmpDnBbBal
				--select 'check #tmpBbBal',* from #tmpBbBal
			 --end

		 END
		
			 				  			  	
		 DECLARE @BMAINLOOP BIT
		 
		 SET @BMAINLOOP=0 
		 WHILE @BMAINLOOP=0
		 BEGIN
		   
		   SET @CSTEP = 480  
		   SET @CRMID=''
		   		
		   SELECT TOP 1 @CVMID=VM_ID,@CPARTYACCODE=AC_CODE,@CRMID=MEMO_ID,@CPARTYACCODE=AC_CODE,
						@NDNTYPE=DN_TYPE,@CRMNO=RM_NO,@DRMDT=RM_DT,@CREFMRRID=REF_MRR_ID,@CREFBILLNO=REF_NO FROM #TMPMEMOS
		   
		   
		   IF ISNULL(@CRMID,'')=''
				BREAK
		   
		   PRINT 'POSTING FOR PURCHASE RETURN -5.0:('+@CRMID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE
		   
			SELECT @BLOOP=0
			PRINT 'POSTING FOR PURCHASE RETURN -5.1:('+@CRMID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE+' REF BILL#'+@CREFBILLNO
  			 SET @NPURAMOUNT=0
			
			 			
					 
			 SET @CSTEP = 520
			 SELECT @NPURAMOUNT=SUM(DEBIT_AMOUNT-CREDIT_AMOUNT) FROM @VDC WHERE VM_ID=@CVMID AND AC_CODE=@CPARTYACCODE
			 AND REF_MRR_ID=@CREFMRRID
			 
			 --SELECT @CREFBILLNO AS CREFBILLNO,@NEXCEPTIONTYPE AS NEXCEPTIONTYPE,@NPURAMOUNT AS PURAMOUNT,@CPARTYACCODE,@CREFMRRID AS REF_MRR_ID, 'BEFORE CHECKING BILLS',* FROM @VDC WHERE VM_ID=@CVMID
			 
			 SELECT @NCTRBB=1,@CSEARCHREFBILLTYPE='PUR'
		       
			 WHILE @NCTRBB<=(CASE WHEN @NEXCEPTIONTYPE<>2 THEN 2 ELSE 1 END) 
			 BEGIN  
				  SELECT @CRETREFBILLNO=''  
			      
				  SET @CSTEP = 530
				  PRINT 'POSTING FOR PURCHASE RETURN -5.2:('+@CRMID+')'+CONVERT(VARCHAR,GETDATE(),113)+' REF BILL#'+@CREFBILLNO+' FOR AMOUNT:'+STR(@NPURAMOUNT,10,2)      
	     				              
				  SELECT TOP 1 @CRETREFBILLNO=A.REF_NO FROM #tmpBBbal A   
	  
				  LEFT OUTER JOIN   
				  (  
				   SELECT A.REF_NO AS REF_BILL_NO,SUM(AMOUNT) AS ADJ_AMT  
				   FROM @TBILL_BY_BILL_REF A  
				   JOIN @VDC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID 
				   WHERE B.AC_CODE=@CPARTYACCODE AND B.VM_ID<>@CVMID  
				   GROUP BY A.REF_NO
				   )  F ON F.REF_BILL_NO=A.REF_NO  
			             
				  WHERE a.ac_code=@CPARTYACCODE AND ((@NCTRBB=1 AND A.REF_NO=@CREFBILLNO)   
				  OR (@NCTRBB=2 AND A.REF_NO<>@CREFBILLNO))    
				  AND (A.pending_amount-ISNULL(F.ADJ_AMT,0))>=@NPURAMOUNT  
			      ORDER BY VOUCHER_DT,REF_NO 
			      
				  SET @CSTEP = 540     
				  SET @NCTRBB=@NCTRBB+1  

				  PRINT 'POSTING FOR PURCHASE RETURN -5.3:('+@CRMID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE+'RETREFBILL#'+@CRETREFBILLNO		            
			        
				  IF ISNULL(@CRETREFBILLNO,'')<>''  
					BREAK  
			      

		        
			 END  
		       
			 PRINT 'POSTING FOR PURCHASE RETURN -5.4:('+@CRMID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE
			        
			 ---- END CHANGE ON 28-06-2016  
		     
			 SET @CSTEP = 550
			 --CREATING BILL BY BILL DETAIL FOR SUPPLIER ACCOUNT FOR DN AMOUNT DEBITED/CASH DISCOUNT CREDITED/PRTAMOUNT CREDITED        
			 INSERT @TBILL_BY_BILL_REF  
			 (rm_id,VM_ID,VD_ID,REF_NO,AMOUNT,LAST_UPDATE,X_TYPE,CR_DAYS,ref_remarks,REF_MRR_ID,ac_code,cd_percentage,cd_posted)  
			 SELECT @cRmId, @CVMID,VD_ID,(CASE WHEN @CPOSTBILLBYBILLREFTYPE<>'2' AND @CRETREFBILLNO<>'' 
				THEN @CRETREFBILLNO   
				ELSE DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,LTRIM(RTRIM(@CRMNO)),@DRMDT,'DR',@CVMID) END) AS REF_NO,  
				(DEBIT_AMOUNT-CREDIT_AMOUNT) AS BILL_AMOUNT,GETDATE(),
			 (CASE WHEN (DEBIT_AMOUNT-CREDIT_AMOUNT)>0 THEN 'DR' ELSE 'CR' END),
			 A.CREDIT_DAYS,ref_remarks,@CREFMRRID AS REF_MRR_ID,a.ac_code,a.cd_pct,a.cd_posted 
			 FROM @VDC A  
			 WHERE A.VM_ID=@CVMID AND AC_CODE=@CPARTYACCODE AND A.REF_MRR_ID=@CREFMRRID
			 
			 SET @CSTEP = 555
			 UPDATE @VMC SET BILL_STATUS=(CASE WHEN @CPOSTBILLBYBILLREFTYPE<>'2' AND @CRETREFBILLNO<>''  THEN 'ADJUST'   
					   ELSE 'NEW' END)  WHERE VM_ID=@CVMID
		                    
			  
			 PRINT 'POSTING FOR PURCHASE RETURN -5.5:('+@CRMID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE
			  
			  SET @CPURBILLS=NULL  
			  SELECT @CPURBILLS=ISNULL(@CPURBILLS+',','')+REF_NO
			  FROM @TBILL_BY_BILL_REF A
			  WHERE VM_ID=@CVMID
			  
			 SET @CSTEP = 560
			  IF ISNULL(@CPURBILLS,'')<>''
				  UPDATE @VDC SET NARRATION='D/N# ' +RIGHT(@CRMID,10)+' AGAINST BILL# '+@CPURBILLS
				  WHERE VM_ID=@CVMID AND ISNULL(NARRATION,'')=''
			 
			 PRINT 'POSTING FOR PURCHASE RETURN -5.6:('+@CRMID+')'+CONVERT(VARCHAR,GETDATE(),113)+'XNTYPE:'+@CXNTYPE
			 --SELECT @CRETREFBILLNO AS BILL_NO,@CRMID,* FROM @TBILL_BY_BILL_REF   
			     
			
			 DELETE FROM #TMPMEMOS WHERE MEMO_ID =  @CRMID AND (REF_MRR_ID=@CREFMRRID OR @CPOSTBILLBYBILLREFTYPE='2')
	     	 
       END ----- END OF @BMAINLOOP=0
  END   ------- END OF @CPOSTBILLBYBILLREFTYPE='1'
  

  --select 'CHECK VDC cols', a.* from @vdc  A JOIN @VMC B ON A.VM_ID=B.VM_ID WHERE B.BILL_ID='HO01120HO-000138'
  

  --SELECT 'CHECK VDC',AC_CODE,SUM(DEBIT_AMOUNT) AS DEBIT,SUM(CREDIT_AMOUNT) AS CREDIT
  -- FROM @VDC A JOIN @VMC B ON A.VM_ID=B.VM_ID WHERE B.BILL_ID='HO01120HO-000138'
  -- GROUP BY AC_CODE
  
  	  
  SET @CSTEP = 565
  UPDATE A SET DEBIT_AMOUNT=B.DEBIT_AMOUNT,CREDIT_AMOUNT=B.CREDIT_AMOUNT FROM @VDC A
  JOIN (SELECT VM_ID,VD_ID,SUM(DEBIT_AMOUNT) AS DEBIT_AMOUNT,SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT
	   FROM @VDC GROUP BY VM_ID,VD_ID) B ON A.VM_ID=B.VM_ID AND A.VD_ID=B.VD_ID


  --select 'CHECK VDC cols after updating', a.* from @vdc  A JOIN @VMC B ON A.VM_ID=B.VM_ID WHERE B.BILL_ID='HO01120HO-002603'
   
   	 
  SET @CSTEP = 570

	 DELETE A FROM @VDC A
	 JOIN LMP01106 LMP ON LMP.AC_CODE=A.AC_CODE
	 JOIN LM01106 LM ON LM.AC_CODE=A.AC_CODE
	 JOIN @vmC b ON b.vm_id=a.vm_id AND b.BILL_AC_CODE=a.AC_CODE
	 WHERE A.REF_MRR_ID<>(SELECT TOP 1 REF_MRR_ID FROM @VDC B WHERE B.VM_ID=A.VM_ID AND ISNULL(REF_MRR_ID,'')<>''
							AND ISNULL(B.NARRATION,'')=ISNULL(A.NARRATION,'') AND B.DEBIT_AMOUNT<>0 )
	 AND (BILL_BY_BILL=1 OR CHARINDEX(HEAD_CODE,@CCREDITORHEADS)>0 OR a.AC_CODE=b.BILL_AC_CODE)
	 AND A.DEBIT_AMOUNT<>0	AND a.ref_remarks not like '%CD REVERSAL%'	AND a.ref_remarks not like '%FDN AMOUNT%'


 --select 'CHECK VDC cols after deleting-1', a.* from @vdc  A JOIN @VMC B ON A.VM_ID=B.VM_ID WHERE B.BILL_ID='HO01120HO-002603'   
   	 

SET @CSTEP = 572
	   
	 DELETE A FROM @VDC A
	 JOIN LMP01106 LMP ON LMP.AC_CODE=A.AC_CODE
	 JOIN LM01106 LM ON LM.AC_CODE=A.AC_CODE
	 WHERE A.REF_MRR_ID<>(SELECT TOP 1 REF_MRR_ID FROM @VDC B WHERE B.VM_ID=A.VM_ID AND ISNULL(REF_MRR_ID,'')<>''
							AND ISNULL(B.NARRATION,'')=ISNULL(A.NARRATION,'') AND B.CREDIT_AMOUNT<>0 )
	 AND (BILL_BY_BILL=1 OR CHARINDEX(HEAD_CODE,@CCREDITORHEADS)>0)
	 AND A.CREDIT_AMOUNT<>0		AND a.ref_remarks not like '%CD REVERSAL%'	AND a.ref_remarks not like '%FDN AMOUNT%'

  --SELECT 'CHECK VDC AFTER DELETION',AC_CODE,SUM(DEBIT_AMOUNT) AS DEBIT,SUM(CREDIT_AMOUNT) AS CREDIT
  -- FROM @VDC A JOIN @VMC B ON A.VM_ID=B.VM_ID WHERE B.BILL_ID='HO0111800000HO00002637'
  -- GROUP BY AC_CODE

	    

 --SELECT 'CHECK VDC AFTER deleting-2',A.REF_MRR_ID,A.NARRATION FROM @VDC A JOIN @VMC B ON A.VM_ID=B.VM_ID WHERE 
 --B.BILL_ID='HO01120HO-002603'


SET @CSTEP = 575
  UPDATE A SET DRTOTAL=B.DEBIT_AMOUNT,CRTOTAL=B.CREDIT_AMOUNT FROM @VMC A
  JOIN (SELECT VM_ID,SUM(DEBIT_AMOUNT) AS DEBIT_AMOUNT,SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT
	   FROM @VDC GROUP BY VM_ID) B ON A.VM_ID=B.VM_ID

	SET @CSTEP =580
  IF OBJECT_ID('TEMPDB..#TMPBB','U') IS NOT NULL
	DROP TABLE #TMPBB
  
    SELECT  VM_ID,VD_ID,REF_NO,ac_code,  
	SUM(AMOUNT) AS AMOUNT,GETDATE() AS LAST_UPDATE,X_TYPE, 
	CR_DAYS,ref_remarks,isnull(cd_percentage,0) cd_percentage ,isnull(cd_posted,0) cd_posted,rm_id,sum(org_bill_taxable_value) org_bill_taxable_value
	INTO #TMPBB FROM @TBILL_BY_BILL_REF A  
	GROUP BY rm_id,VM_ID,VD_ID,ac_code,REF_NO,CR_DAYS,ref_remarks,X_TYPE,isnull(cd_percentage,0),isnull(cd_posted,0),rm_id
	
	UPDATE #TMPBB SET X_TYPE=(CASE WHEN AMOUNT<0 THEN 'CR' ELSE 'DR' END),AMOUNT=ABS(AMOUNT)
	WHERE X_TYPE=''
	 
	DELETE FROM @TBILL_BY_BILL_REF
	 
	SET @CSTEP = 585   		
	 INSERT @TBILL_BY_BILL_REF  
	 (rm_id,VM_ID,VD_ID,REF_NO,AMOUNT,LAST_UPDATE,X_TYPE,CR_DAYS,ref_remarks,ac_code,cd_percentage,cd_posted,org_bill_taxable_value)  
	 SELECT rm_id,VM_ID,VD_ID,REF_NO,ABS(AMOUNT),LAST_UPDATE,X_TYPE,CR_DAYS,ref_remarks,ac_code,cd_percentage,cd_posted,org_bill_taxable_value
	 FROM #TMPBB 
  ------- END OF WORKING OF BILL BY BILL ENTRIES POSTING        
  
 SET @CSTEP = 586.2
 PRINT 'POSTING FOR PURCHASE RETURN -5.10'
  
 --INSERT #ERRORS (XN_ID,XN_TYPE,XN_NO,XN_DT,XN_AMT,XN_AC,ERR_DESC)  
 --SELECT '' AS XN_ID,'PRT' AS XN_TYPE,XN_NO,XN_DT,0 AS XN_AMT,AC_NAME AS XN_AC,  
 --'MISMATCH BETWEEN DEBIT TOTALS :'+LTRIM(RTRIM(STR(A.DEBIT_AMOUNT,10,2)))+' & CREDIT TOTALS :'+LTRIM(RTRIM(STR(A.CREDIT_AMOUNT,10,2)))+' LOC ID :'+A.DEPT_ID AS ERR_DESC  
 --FROM (SELECT DEPT_ID,F.AC_NAME,RM_NO AS XN_NO,RM_DT AS XN_DT,SUM(DEBIT_AMOUNT) AS DEBIT_AMOUNT,SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT  
 --   FROM @VDC A JOIN @VMC B ON A.VM_ID=B.VM_ID  
 --   JOIN @VLINK D ON D.VM_ID=B.VM_ID  
 --   JOIN RMM01106 E ON E.RM_ID=D.MEMO_ID  
 --   JOIN LM01106 F ON F.AC_CODE=E.AC_CODE  
 --   GROUP BY DEPT_ID,RM_NO,RM_DT,F.AC_NAME  
 --   HAVING SUM(DEBIT_AMOUNT-CREDIT_AMOUNT)<>0) A  
	
	DELETE FROM @VDC WHERE DEBIT_AMOUNT=0 AND CREDIT_AMOUNT=0
	
	 SET @CSTEP = 587.2
	UPDATE @VDC SET DEBIT_AMOUNT=(CASE WHEN DEBIT_AMOUNT<>0 THEN DEBIT_AMOUNT ELSE NULL END),
	CREDIT_AMOUNT=(CASE WHEN CREDIT_AMOUNT<>0 THEN CREDIT_AMOUNT ELSE NULL END)

	UPDATE a SET cd_posted=d.cd_posted,cd_percentage=d.cd_percentage FROM 
	@TBILL_BY_BILL_REF A
	JOIN @TBILL_BY_BILL_REF d ON d.REF_NO=a.REF_NO AND d.ac_code=a.ac_code
	WHERE  a.ref_remarks='(CD REVERSAL)'  AND d.ref_remarks='DEBIT NOTE'

	 SET @CSTEP = 587.5
	UPDATE a SET cd_base_amount=b.cd_base_amount,ignore_cd_base_amount=b.ignore_cd_base_amount FROM 
	@TBILL_BY_BILL_REF A
	JOIN #v_process_cdbase b ON a.rm_id=b.rm_id

	SET @CSTEP = 587.52

	IF EXISTS (SELECT TOP 1 b.ac_code FROM @TBILL_BY_BILL_REF a JOIN @vdC b ON a.vd_id=b.vd_id 
				JOIN lm01106 c ON c.ac_code=b.ac_code
				JOIN @vmC d ON d.vm_id=b.vm_id
				JOIN SOR_FDNFCN_LINK sl (NOLOCK)  ON d.bill_id=sl.refFdnMemoId
				JOIN eosssorm sor (NOLOCK) ON sor.MEMO_ID=sl.sorMemoId
				JOIN  location loc (NOLOCK) ON loc.dept_id=sor.party_dept_id
				WHERE loc.sor_loc=1 AND  ISNULL(AgnstSupplier,0)=0)
	    UPDATE a SET on_account=1,ref_no=LEFT(CONVERT(VARCHAR(40),NEWID()),10) 
		FROM @TBILL_BY_BILL_REF a JOIN @vdC b ON a.vd_id=b.vd_id 
		JOIN lm01106 c ON c.ac_code=b.ac_code
		JOIN @vmC d ON d.vm_id=b.vm_id
		JOIN SOR_FDNFCN_LINK sl (NOLOCK)  ON d.bill_id=sl.refFdnMemoId
		JOIN eosssorm sor (NOLOCK) ON sor.MEMO_ID=sl.sorMemoId
		JOIN  location loc (NOLOCK) ON loc.dept_id=sor.party_dept_id
		JOIN gst_accounts_config_mst conf (NOLOCK) ON conf.xn_type='SOR_REC'
		WHERE loc.sor_loc=1 AND  ISNULL(AgnstSupplier,0)=0 AND conf.enableposting=1


    IF @CPOSTBILLBYBILLREFTYPE='2'
    BEGIN

	  SET @CSTEP=590
	  EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 	
	  
	  DECLARE @cLoopRefNo VARCHAR(200),@cLoopVmId VARCHAR(40)

	  WHILE EXISTS (SELECT TOP 1 ref_no FROM @TBILL_BY_BILL_REF WHERE ISNULL(adj_remarks,'')='')
	  BEGIN

		  SET @CSTEP=592
		  EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 	
		  
		  SELECT TOP 1 @cLoopRefNo=ref_no,@cLoopVmId=vm_id FROM @TBILL_BY_BILL_REF
		  WHERE ISNULL(adj_remarks,'')=''

		  SET @cRemarks=NULL

		  PRINT  'Checking Bill references of Credit note #'+@cLOOPREFNO
		  SELECT @cRemarks=coalesce(@cRemarks+',','')+b.bill_no+'/'+convert(varchar,bill_dt,112) FROM
		   (SELECT c.bill_no,c.bill_dt FROM @VLINK a
				JOIN rmd01106 b (NOLOCK) ON a.MEMO_ID=b.rm_id
				JOIN pim01106 c (NOLOCK) ON c.mrr_id=b.mrr_id
				WHERE vm_id=@cLoopVmId 
				GROUP BY vm_id,c.bill_no,c.bill_dt) b
		  
		  SET @CSTEP=594
		  EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 	

		  IF ISNULL(@cRemarks,'')<>''
			UPDATE @TBILL_BY_BILL_REF SET adj_remarks=@cRemarks WHERE ref_no=@cLoopRefNo
		  ELSE
			UPDATE @TBILL_BY_BILL_REF SET adj_remarks=@cLoopRefNo WHERE ref_no=@cLoopRefNo

	  END
    END

	

	SET @CSTEP=597
	EXEC SP_CHKXNSAVELOG 'PURPOST',@cStep,1,@nSpId,'',1	 	

	DELETE FROM ACT_VM01106_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_VD01106_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_BILL_BY_BILL_REF_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_POSTACT_VOUCHER_LINK_UPLOAD WHERE SP_ID=@NSPID
	
	SET @CSTEP = 600
	
	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
    INSERT ACT_VM01106_UPLOAD	( ANGADIA_CODE, APPROVED, APPROVEDLEVELNO, ATTACHMENT_FILE, AUDITED_DT, 
    AUDITED_USER_CODE, BILL_AC_CODE, BILL_DT, BILL_ID, BILL_NO, BILL_TYPE, CANCELLED, CASH_VOUCHER, COMPANY_CODE, 
    CRTOTAL, DEPT_ID, DRTOTAL, EDT_USER_CODE, FIN_YEAR, FREEZE, LAST_UPDATE, LR_DT, LR_NO, MEMO, MRR_LIST, OP_ENTRY,
    QUANTITY, REF_NO, REF_VM_ID, REMINDER_DAYS, SALE_VOUCHER, SENT_FOR_RECON, SENT_TO_HO, SMS_SENT, SR_NO, 
    UPLOADED_TO_ACTIVSTREAM, USER_CODE, VM_ID, VM_NO, VOUCHER_CODE, VOUCHER_DT, VOUCHER_NO, SP_ID,TEMP_VM_ID )  
    SELECT 	  ANGADIA_CODE,0 AS APPROVED,0 AS APPROVEDLEVELNO,'' AS ATTACHMENT_FILE,'' AS AUDITED_DT, 
    '' AS AUDITED_USER_CODE, BILL_AC_CODE,BILL_DT, ISNULL(BILL_ID,'') AS BILL_ID,ISNULL( BILL_NO,'') AS BILL_NO,
     BILL_TYPE,CANCELLED, 
    0 AS CASH_VOUCHER, '01' AS COMPANY_CODE, CRTOTAL, DEPT_ID, DRTOTAL,'' AS EDT_USER_CODE,
	('01'+dbo.FN_GETFINYEAR(voucher_dt)) FIN_YEAR, 
    0 AS FREEZE,GETDATE() AS  LAST_UPDATE,'' AS LR_DT,'' AS LR_NO,0 AS MEMO,'' AS MRR_LIST,0 AS  OP_ENTRY,
    QUANTITY, '' AS REF_NO,'' AS REF_VM_ID,0 AS  REMINDER_DAYS,1 AS SALE_VOUCHER,0 AS  SENT_FOR_RECON,0 AS SENT_TO_HO, 
    0 AS SMS_SENT,0 AS SR_NO,0 AS UPLOADED_TO_ACTIVSTREAM,'0000000' AS USER_CODE,
    VM_ID,'' AS VM_NO, VOUCHER_CODE, VOUCHER_DT,VOUCHER_NO, @NSPID AS SP_ID,'' AS TEMP_VM_ID 
    FROM @vmC A 
    
	
	SET @CSTEP = 610


	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_VD01106_UPLOAD	( AC_CODE, AUTOENTRY, CHK_RECON, COMPANY_CODE, CONTROL_AC, COST_CENTER_AC_CODE, COST_CENTER_DEPT_ID, 
	CREDIT_AMOUNT, DEBIT_AMOUNT, LAST_UPDATE, NARRATION, RECON_DT, SECONDARY_NARRATION, VAT_ENTRY, VD_ID, VM_ID, VS_AC_CODE, X_TYPE, SP_ID,TEMP_VD_ID )
	SELECT AC_CODE,0 AS AUTOENTRY,0 AS CHK_RECON,'01' AS COMPANY_CODE,0 AS CONTROL_AC,'0000000000' AS COST_CENTER_AC_CODE, 
	ISNULL(b.Dept_id,@CDEPTID) AS COST_CENTER_DEPT_ID,CREDIT_AMOUNT, DEBIT_AMOUNT,GETDATE() AS LAST_UPDATE,ISNULL(NARRATION,'') AS NARRATION,'' AS RECON_DT, 
	'' AS SECONDARY_NARRATION, 0 AS VAT_ENTRY,VD_ID,A.VM_ID,ISNULL(VS_AC_CODE,'0000000000') AS VS_AC_CODE,
	X_TYPE, @NSPID AS SP_ID,'' AS TEMP_VD_ID 
	FROM @vdC A
	JOIN @vmC B ON A.VM_ID=B.VM_ID
    WHERE (DEBIT_AMOUNT<>0 OR CREDIT_AMOUNT<>0)

	
	SET @CSTEP = 615
	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_BILL_BY_BILL_REF_UPLOAD	( ADJ_REMARKS, AMOUNT, BB_ROW_ID, CR_DAYS, LAST_UPDATE, PAYMENT_ADJ_REF_NO, 
	REF_NO,  REMARKS, VD_ID, X_TYPE, SP_ID ,VM_ID,cd_percentage,cd_base_amount,ignore_cd_base_amount,
	cd_posted,org_bill_amount,org_bill_taxable_value, org_bill_dt,org_bill_no,on_account)  
	SELECT a.ADJ_REMARKS,AMOUNT,'' AS BB_ROW_ID,0 AS CR_DAYS,GETDATE() AS LAST_UPDATE,'' AS PAYMENT_ADJ_REF_NO, 
	REF_NO, '' AS REMARKS,A.VD_ID,A.X_TYPE,@NSPID AS SP_ID,A.VM_ID,
	a.cd_percentage,a.cd_base_amount,ignore_cd_base_amount,a.cd_posted,
	(CASE WHEN a.cd_posted=1 THEN d.total_amount ELSE  a.amount  END) as org_bill_amount,a.org_bill_taxable_value,
	d.rm_DT org_bill_dt,d.rm_no org_bill_no,a.on_account FROM @TBILL_BY_BILL_REF A
    JOIN @vdC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID
    JOIN @vmC C ON B.VM_ID=C.VM_ID
	JOIN @vLink v ON v.VM_ID=c.VM_ID
	LEFT JOIN rmm01106 d ON d.rm_id=v.MEMO_ID
    WHERE A.AMOUNT<>0
	
	SET @CSTEP = 620
	
	PRINT 'START POSTING ARC:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_POSTACT_VOUCHER_LINK_UPLOAD	( LAST_UPDATE, MEMO_ID, VM_ID, XN_TYPE, SP_ID )  
	SELECT 	LAST_UPDATE, MEMO_ID, A.VM_ID, A.XN_TYPE, @NSPID AS SP_ID 
	FROM @vlink A
    JOIN @vmC B ON A.VM_ID=B.VM_ID
	
	SET @CSTEP = 625
	SELECT @nSpid sp_id, CONVERT(BIT,1) AS CHK,CONVERT(BIT,1) optimized,A.*,(CASE WHEN B.VM_ID IS NOT NULL 
    THEN CONVERT(BIT,1) ELSE CONVERT(BIT,0) END) AS ERROR_FLAG,
    (CASE WHEN B.VM_ID IS NOT NULL THEN CONVERT(VARCHAR(500),'DEBIT & CREDIT TOTAL MISMATCH') ELSE CONVERT(VARCHAR(500),'') END) AS ERROR_DESC
    FROM @VMC A
    LEFT OUTER JOIN 
    (SELECT VM_ID,SUM(DEBIT_AMOUNT) AS DRTOTAL,SUM(CREDIT_AMOUNT) AS CRTOTAL
     FROM @VDC GROUP BY VM_ID
     HAVING SUM(DEBIT_AMOUNT)<>SUM(CREDIT_AMOUNT)) B ON A.VM_ID=B.VM_ID
    ORDER BY BILL_NO

    SELECT * FROM @VDC ORDER BY VM_ID  
    SELECT * FROM #ERRORS
    SELECT * FROM @VLINK ORDER BY VM_ID  
	
	SELECT B.AC_NAME,A.*,A.REF_NO AS BILL_NO,d.RM_no org_bill_no,d.rm_dt org_bill_dt,d.total_amount org_bill_amount
	FROM @TBILL_BY_BILL_REF A
	JOIN @VDC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID
	JOIN @VLINK C ON B.VM_ID=C.VM_ID
	LEFT JOIN rmm01106 d ON d.rm_id=c.MEMO_ID
	
 END TRY  
 
 BEGIN CATCH 
  
	 SET @CERRORMSG='ERROR IN PROCEDURE POSTACT_GST_PRT AT STEP#'+@CSTEP+' '+ERROR_MESSAGE()
	 GOTO END_PROC	
 END CATCH  

END_PROC:
	IF @CERRORMSG<>''
		SELECT @CERRORMSG AS ERRMSG	           
END  
--END OF PROCEDURE - POSTACT_GST_PRT