CREATE PROCEDURE SP3S_GET_BACKUP_HISTORY
(
	@cDB_NAME NVARCHAR(MAX)=''
)
AS
BEGIN
	IF ISNULL(@cDB_NAME,'')='' SET @cDB_NAME =DB_NAME()

	SELECT  TOP 3 s.backup_finish_date, CASE WHEN (s.backup_size/(1024*1024*1024))>1 
	THEN CONVERT(VARCHAR(50),CONVERT(NUMERIC(14,2),(s.backup_size/(1024*1024*1024)))) +' GB' 
	ELSE CONVERT(VARCHAR(50),CONVERT(NUMERIC(14,2),(s.backup_size/(1024*1024)))) +' MB' END AS BACKUP_SIZE,S.[TYPE], 
	CASE S.[TYPE] -- LET'S DECODE THE THREE MAIN TYPES OF BACKUP HERE
	WHEN 'D' THEN 'FULL'
	WHEN 'I' THEN 'DIFFERENTIAL'
	WHEN 'L' THEN 'TRANSACTION LOG'
	ELSE S.[TYPE]
	END AS BACKUPTYPE
	,m.PHYSICAL_DEVICE_NAME
	FROM msdb.dbo.backupset s
	INNER JOIN msdb.dbo.backupmediafamily m ON s.media_set_id = m.media_set_id
	WHERE S.[TYPE]='D'  AND (S.DATABASE_NAME = @cDB_NAME OR S.DATABASE_NAME LIKE @cDB_NAME+'[_]%')
	ORDER BY  backup_finish_date DESC


	--SELECT  TOP 3 BACKUP_FINISH_DATE, CASE WHEN (A.BACKUP_SIZE/(1024*1024*1024))>1 
	--THEN CONVERT(VARCHAR(50),CONVERT(NUMERIC(14,2),(A.BACKUP_SIZE/(1024*1024*1024)))) +' GB' 
	--ELSE CONVERT(VARCHAR(50),CONVERT(NUMERIC(14,2),(A.BACKUP_SIZE/(1024*1024)))) +' MB' END AS BACKUP_SIZE,A.[TYPE] ,
	--CASE A.[TYPE] -- LET'S DECODE THE THREE MAIN TYPES OF BACKUP HERE
	--WHEN 'D' THEN 'FULL'
	--WHEN 'I' THEN 'DIFFERENTIAL'
	--WHEN 'L' THEN 'TRANSACTION LOG'
	--ELSE A.[TYPE]
	--END AS BACKUPTYPE
	--,B.PHYSICAL_DEVICE_NAME
	--FROM MSDB.DBO.BACKUPSET A JOIN MSDB.DBO.BACKUPMEDIAFAMILY B
	--ON A.MEDIA_SET_ID = B.MEDIA_SET_ID
	--WHERE A.[TYPE]='D' AND (A.DATABASE_NAME = @cDB_NAME OR A.DATABASE_NAME LIKE @cDB_NAME+'[_]%')
	----A.DATABASE_NAME = @cDB_NAME
	--UNION ALL
	--SELECT  TOP 3 BACKUP_FINISH_DATE, CASE WHEN (A.BACKUP_SIZE/(1024*1024*1024))>1 
	--THEN CONVERT(VARCHAR(50),CONVERT(NUMERIC(14,2),(A.BACKUP_SIZE/(1024*1024*1024)))) +' GB' 
	--ELSE CONVERT(VARCHAR(50),CONVERT(NUMERIC(14,2),(A.BACKUP_SIZE/(1024*1024)))) +' MB' END AS BACKUP_SIZE,A.[TYPE] ,
	--CASE A.[TYPE] -- LET'S DECODE THE THREE MAIN TYPES OF BACKUP HERE
	--WHEN 'D' THEN 'FULL'
	--WHEN 'I' THEN 'DIFFERENTIAL'
	--WHEN 'L' THEN 'TRANSACTION LOG'
	--ELSE A.[TYPE]
	--END AS BACKUPTYPE
	--,B.PHYSICAL_DEVICE_NAME
	--FROM MSDB.DBO.BACKUPSET A 
	--JOIN MSDB.DBO.BACKUPMEDIAFAMILY B ON A.MEDIA_SET_ID = B.MEDIA_SET_ID
	--WHERE A.[TYPE]='L' AND  (A.DATABASE_NAME = @cDB_NAME OR A.DATABASE_NAME LIKE @cDB_NAME+'[_]%')
	----A.DATABASE_NAME = @cDB_NAME
	--ORDER BY TYPE,BACKUP_FINISH_DATE DESC
END
/*

SELECT  TOP 30 BACKUP_FINISH_DATE, CASE WHEN (A.BACKUP_SIZE/(1024*1024*1024))>1 
THEN CONVERT(VARCHAR(50),CONVERT(NUMERIC(14,2),(A.BACKUP_SIZE/(1024*1024*1024)))) +' GB' 
ELSE CONVERT(VARCHAR(50),CONVERT(NUMERIC(14,2),(A.BACKUP_SIZE/(1024*1024)))) +' MB' END AS BACKUP_SIZE,A.[TYPE] ,
CASE A.[TYPE] -- LET'S DECODE THE THREE MAIN TYPES OF BACKUP HERE
WHEN 'D' THEN 'FULL'
WHEN 'I' THEN 'DIFFERENTIAL'
WHEN 'L' THEN 'TRANSACTION LOG'
ELSE A.[TYPE]
END AS BACKUPTYPE
,B.PHYSICAL_DEVICE_NAME
FROM MSDB.DBO.BACKUPSET A JOIN MSDB.DBO.BACKUPMEDIAFAMILY B
ON A.MEDIA_SET_ID = B.MEDIA_SET_ID
WHERE A.[TYPE]='D' AND (A.DATABASE_NAME = 'ARUNHO' OR A.DATABASE_NAME LIKE 'ARUNHO[_]%')
UNION ALL
SELECT  TOP 30 BACKUP_FINISH_DATE, CASE WHEN (A.BACKUP_SIZE/(1024*1024*1024))>1 
THEN CONVERT(VARCHAR(50),CONVERT(NUMERIC(14,2),(A.BACKUP_SIZE/(1024*1024*1024)))) +' GB' 
ELSE CONVERT(VARCHAR(50),CONVERT(NUMERIC(14,2),(A.BACKUP_SIZE/(1024*1024)))) +' MB' END AS BACKUP_SIZE,A.[TYPE] ,
CASE A.[TYPE] -- LET'S DECODE THE THREE MAIN TYPES OF BACKUP HERE
WHEN 'D' THEN 'FULL'
WHEN 'I' THEN 'DIFFERENTIAL'
WHEN 'L' THEN 'TRANSACTION LOG'
ELSE A.[TYPE]
END AS BACKUPTYPE
,B.PHYSICAL_DEVICE_NAME
FROM MSDB.DBO.BACKUPSET A 
JOIN MSDB.DBO.BACKUPMEDIAFAMILY B ON A.MEDIA_SET_ID = B.MEDIA_SET_ID
WHERE A.[TYPE]='L' AND (A.DATABASE_NAME = 'ARUNHO' OR A.DATABASE_NAME LIKE 'ARUNHO[_]%')
ORDER BY TYPE,BACKUP_FINISH_DATE DESC

*/                            