CREATE PROCEDURE POSTACT_GST_SLS_DEBUG
(
	@DTTO DATETIME,
	@CDEPTID CHAR(4)='',
	@NSPID INT = 0
)
AS
BEGIN
	SET TRANSACTION ISOLATION LEVEL READ COMMITTED
	PRINT 'START POSTING SLS-1:'+CONVERT(VARCHAR,GETDATE(),113)
	
	DECLARE @DGSTCUTOFFDATE DATETIME='2017-07-01'
	
		
    DECLARE @CSTEP VARCHAR(10),@BPOSTDISCOUNTSEPARATELY BIT,@CDISCACCODE VARCHAR(10),@BPOSTFREIGHTSEPARATELY	BIT
			,@CUPDATESALEATMRP VARCHAR(10),@BPOSTOCTROISEPARATELY BIT
			,@BPOSTINSURANCESEPARATELY BIT,@CINSURANCEACCODE VARCHAR(10),@BBLANKACFOUND BIT,
			@BPOSTOTHERCHARGESSEPARATELY BIT,@COTHERCHARGESACCODE VARCHAR(10),@BPOSTROUNDOFFSEPARATELY BIT,@NCTR NUMERIC(10,0),
			@NSUBTOTAL NUMERIC(14,2),@NTAXAMOUNT NUMERIC(14,2), @CPURACCODE VARCHAR(50),@CTAXACCODE VARCHAR(100),
			@LPOSTTAXSEPARATELY NUMERIC(14,2),@CCM_NO VARCHAR(50),@DCM_DT DATETIME,@LOUTSTATIONPARTY BIT,@TMPDR NUMERIC(14,2),
			@TMPCR NUMERIC(14,2),@CCURSTATECODE	VARCHAR(10),@CVMID	VARCHAR(40),
			@CLASTBILLNO VARCHAR(40),@DTMPVENDORBILLDT DATETIME,@CRMLIST VARCHAR(300),@NTMPCREDITDAYS NUMERIC(10),
			@NTMPCRDISCOUNTPERCENTAGE NUMERIC(14,2),@DLASTINVDT	DATETIME,@CVOUCHERCODE VARCHAR(10),
			@COLDBILLTYPE VARCHAR(10),@CLASTACCODE VARCHAR(10),@CLASTPARTYNAME VARCHAR(100),@NTOTQUANTITY NUMERIC(14,2),
			@NTOTNETAMOUNT NUMERIC(14,2),@CDEPTNAME VARCHAR(100),@CVOUCHERNO VARCHAR(10),@CCONTRADEPTID VARCHAR(20),
			@CSLSDEPTID VARCHAR(20),@CERRORMSG VARCHAR(MAX),@CWIZCLIPGVSACCODE CHAR(10),@NROWSAFFECTED INT,
			@NRETAILSALECRAMT NUMERIC(10,2),@NRETAILSALEDRAMT NUMERIC(10,2),@CSETOFFACCODE CHAR(10)
			
	SET @CSTEP=10
	DECLARE @CPARTYACCODE VARCHAR(10),@CPARTYSTATECODE VARCHAR(10),@NNETAMOUNT NUMERIC(14,2),
			@NDISCAMOUNT NUMERIC(14,2),@NFREIGHT NUMERIC(14,2),	@NOTHER NUMERIC(14,2),@NROUNDOFF NUMERIC(14,2),
			@NDRTOTAL NUMERIC(14,2),@NCRTOTAL NUMERIC(14,2),@DCUTOFFDATE VARCHAR(20),@CXNTYPE VARCHAR(10)
			,@CAC_CODE VARCHAR(20),@CVDID VARCHAR(40),@CFINYEARSLS VARCHAR(10)
			,@BCREATELEDGERFORCUSTOMER BIT,@CFINYEARFORLEDGERGEN VARCHAR(10) 
			,@CPREFIXFORLEDGERGEN VARCHAR(10),@BPOSTCONTROLACSALEENTRIESBILLBYBILL BIT,@BPOSTCONTROLACCNENTRIESBILLBYBILL BIT,@CLASTVDID INT,@NARCT INT
			,@CPOSTACCODE VARCHAR(20),@NARCTYPE	NUMERIC(2),@CNARRATION VARCHAR(500)
			,@CROFFACCODE CHAR(10),@CCASHACCODE CHAR(10),@CCUSTOMERCONTROLACCODESALE CHAR(10)
			,@CCUSTOMERCONTROLACCODECN CHAR(10),@CADVGSTRCVACCODE CHAR(10)
			,@DOLDCMDT DATETIME,@COLDCMNO VARCHAR(15),@CCURLOCID VARCHAR(5),@CHOLOCID VARCHAR(5)
			,@CFINYEARPOSTING VARCHAR(10),@CPOSTSALESPERSONINFO VARCHAR(2)
					

    DECLARE @ERRORS TABLE
	(
		XN_ID	VARCHAR(40),XN_TYPE VARCHAR(30),XN_NO VARCHAR(40),
		XN_DT DATETIME,XN_AMT NUMERIC(14,2),XN_AC VARCHAR(100),
		ERR_DESC VARCHAR(500)
	)   
	
	SELECT @CHOLOCID =LTRIM(VALUE) FROM CONFIG 
	WHERE CONFIG_OPTION='HO_LOCATION_ID'

	SELECT @CCURLOCID = value  FROM config(nolock)  WHERE config_option='ho_location_id'
	
	SELECT TOP 1 @CPOSTSALESPERSONINFO = VALUE FROM CONFIG WHERE CONFIG_OPTION='POST_SALESPERSON_INFO'
	
	SET @CPOSTSALESPERSONINFO=ISNULL(@CPOSTSALESPERSONINFO,'')
	
	SET @CFINYEARPOSTING='01'+DBO.FN_GETFINYEAR(@DTTO)			
	
	SET @CUPDATESALEATMRP=''			
	
    SET @CSTEP=20

	IF OBJECT_ID('TEMPDB..#ERRORS','U') IS NOT NULL
		DROP TABLE #ERRORS    
		
    --THIS TABLE VARIABLE STORE ERROR OF OF MEMO ID
    CREATE TABLE #ERRORS
	(
		XN_TYPE VARCHAR(10),SOURCE_TABLE VARCHAR(200),COLUMNNAME VARCHAR(200),GST_PERCENTAGE NUMERIC(6,2),ERR_DESC VARCHAR(500)
	)   
    
    SET @CSTEP=30
    DECLARE @VCHC TABLE 
	(
		AC_CODE CHAR(10),NARRATION VARCHAR(200),XN_NO VARCHAR(30),
		XN_DT DATETIME,DEPT_ID CHAR(4),AMOUNT NUMERIC(14,4),XN_ID VARCHAR(50),
		REF_BILL_NO VARCHAR(50),REF_BILL_DATE DATETIME,	ENTRY_ID INT IDENTITY
		,CRDAYS NUMERIC(5),CANCELLED BIT
	)
	
	SET @CSTEP=40
	DECLARE @VDC TABLE 
	(
		VD_ID VARCHAR(100),				VM_ID VARCHAR(40),				AC_CODE CHAR(10), 
		NARRATION VARCHAR(200),			DEBIT_AMOUNT NUMERIC(14,4),		CREDIT_AMOUNT NUMERIC(14,4),
		X_TYPE CHAR(2), 				VS_AC_CODE CHAR(10),	 		REF_BILL_NO VARCHAR(40), 
		CREDIT_DAYS NUMERIC(10),		CR_DISCOUNT_PERCENTAGE NUMERIC(14,2),		
		VAT_ENTRY BIT,REF_BILL_DATE DATETIME, AC_NAME VARCHAR(100),VCH_ENTRY_ID INT
	)
	
	SET @CSTEP=50
	DECLARE @VMC TABLE
	(
		VM_ID VARCHAR(400), 			VOUCHER_NO VARCHAR(400), 		VOUCHER_DT DATETIME, 
		VOUCHER_CODE CHAR(10), 		    DEPT_ID CHAR(4),				BILL_TYPE VARCHAR(300),
		BILL_NO VARCHAR(200), 			BILL_ID VARCHAR(220), 			BILL_DT DATETIME, 
		BILL_AC_CODE VARCHAR(100),		DRTOTAL NUMERIC(20,2),			CRTOTAL NUMERIC(20,2), 
		CASH_VOUCHER BIT, 				SALE_VOUCHER BIT, 				QUANTITY NUMERIC(20,2), 
		ANGADIA_CODE CHAR(70), 			LR_NO VARCHAR(500), 			LR_DT DATETIME,
		PARTY_NAME VARCHAR(1000),		NET_AMOUNT NUMERIC(20,2), 		BILL_STATUS VARCHAR(1000),
		RM_LIST VARCHAR(3000), 		CANCELLED BIT,					DEPT_NAME VARCHAR(100),
		VOUCHER_TYPE VARCHAR(100),VM_ORDER NUMERIC(1)
	)
	
	SET @CSTEP=60
	DECLARE @VLINK TABLE
	(
		VM_ID VARCHAR(100),MEMO_ID VARCHAR(100),XN_TYPE VARCHAR(20),LAST_UPDATE DATETIME
	)
	
	DECLARE @TBILL_BY_BILL_REF TABLE(VD_ID VARCHAR(40),REF_NO VARCHAR(40),AMOUNT NUMERIC(18,4),LAST_UPDATE DATETIME
									,X_TYPE VARCHAR(20),CR_DAYS NUMERIC(5),VM_ID VARCHAR(100))
	
	SELECT TOP 1 @DCUTOFFDATE=CUTOFFDATE FROM GST_ACCOUNTS_CONFIG_MST WHERE XN_TYPE='SLS'
	
	IF @DCUTOFFDATE<@DGSTCUTOFFDATE-1
		SET @DCUTOFFDATE='2017-06-30'
			
	SET @CFINYEARFORLEDGERGEN=@CCURLOCID+DBO.FN_GETFINYEAR(@DTTO)  
	SET @CPREFIXFORLEDGERGEN=@CFINYEARFORLEDGERGEN
	
	SET @DCUTOFFDATE=ISNULL(@DCUTOFFDATE,'')
	
	SET @CSTEP=70
	SET @CVOUCHERCODE = '0000000007'
    BEGIN TRY
			SET @CSTEP=72


			--GETTING CASH MEMO DATES FOR WHOM POSTING HAVE TO BE DONE...
			IF OBJECT_ID('#POSTINGDATES','U') IS NOT NULL
				DROP TABLE #POSTINGDATES


			CREATE TABLE #POSTINGDATES(DT DATETIME,POSTED_MEMO_ID VARCHAR(20),LAST_UPDATE DATETIME,location_code VARCHAR(4))

			PRINT 'START POSTING SLS-1.1:'+CONVERT(VARCHAR,GETDATE(),113)
			
			--SELECT ACCOUNTS_POSTING_DEPT_ID,DEPT_ID FROM LOCATION
			
			--SELECT @DCUTOFFDATE AS DCUTOFFDATE,@CCURLOCID AS CCURLOCID,@CDEPTID AS CDEPTID,@DGSTCUTOFFDATE AS DGSTCUTOFFDATE,@DTTO AS DTTO,@CFINYEARPOSTING AS CFINYEARPOSTING
							
			SET @CSTEP=74
			INSERT #POSTINGDATES(DT,POSTED_MEMO_ID,LAST_UPDATE,location_code)
			SELECT A.CM_DT,A.POSTED_MEMO_ID,A.MAX_LUPD,a.location_code
			FROM (
			SELECT a.location_Code, a.location_Code +CONVERT(VARCHAR(10),A.CM_DT,112) AS POSTED_MEMO_ID,MAX(A.LAST_UPDATE) AS MAX_LUPD,A.CM_DT,SUM(NET_AMOUNT) AS NET_AMOUNT
	        FROM CMM01106 A (NOLOCK)
	        JOIN LOCATION B (NOLOCK) ON a.location_Code =B.DEPT_ID
	        WHERE (@CDEPTID='' OR a.location_Code =@CDEPTID)
	        AND B.ACCOUNTS_POSTING_DEPT_ID=@CCURLOCID
	        AND A.CANCELLED=0 AND A.CM_MODE=1
	        /*RECEIPTS/PAYMENTS CM_DT IS LESS THAN THE SPECIFIED DATE.*/
	        AND A.CM_DT BETWEEN @DGSTCUTOFFDATE AND @DTTO AND A.FIN_YEAR=@CFINYEARPOSTING
	        /*IF CUTOFF DATE IS SPECIFIED, CONSIDER RECEIPTS/PAYMENTS AFTER THE CUTOFF DATE*/
	        AND A.CM_DT=@DTTO
	        /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/
	        GROUP BY A.CM_DT,a.location_Code  HAVING SUM(NET_AMOUNT)<>0) A
			
			
			--SELECT 'CHECK SLSPOSTINGDATES',* FROM #POSTINGDATES
			
			PRINT 'START POSTING SLS-1.2:'+CONVERT(VARCHAR,GETDATE(),113)	      	
			
			SET @CSTEP=80
			IF OBJECT_ID('TEMPDB..#SLSTABLE','U') IS NOT NULL
				DROP TABLE #SLSTABLE 
			
			SET @CSTEP=90
			--THIS TABLE STORE ALL PENDING MEMO_ID 
			CREATE TABLE #SLSTABLE(MEMO_ID VARCHAR(30),CM_NO VARCHAR(20),CM_DT DATETIME,MODE VARCHAR(10),location_code char(4))
			
			SET @CSTEP=100
			--GETTING LIST OF RECEIPTS/PAYMENTS THAT QUALIFY FOR VOUCHER POSTING
			INSERT INTO #SLSTABLE (MEMO_ID,CM_NO,CM_DT,MODE,location_code)
	        SELECT A.CM_ID,A.CM_NO,A.CM_DT,'SLS' AS MODE ,a.location_code
	        FROM CMM01106 A (NOLOCK)
	        JOIN LOCATION SL (NOLOCK) ON SL.DEPT_ID =a.location_Code 
	        JOIN #POSTINGDATES B ON A.CM_DT=B.DT AND b.location_code=a.location_Code 
	        WHERE A.CANCELLED=0 AND A.CM_MODE=1
	        /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/
	        AND (ISNULL(SL.LOC_TYPE,0)=1 OR ISNULL(SL.ACCOUNT_POSTING_AT_HO,0)=1)  
	        

		    SET @CSTEP=160
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
				
		   SELECT @CCASHACCODE = VALUE
		   FROM GST_ACCOUNTS_CONFIG_DET_PAYMODES WHERE COLUMNNAME='CASH_AC_CODE'
		   
		   SELECT @CCUSTOMERCONTROLACCODESALE = VALUE
		   FROM GST_ACCOUNTS_CONFIG_DET_PAYMODES WHERE COLUMNNAME='CUSTOMER_CONTROL_AC_CODE_SALE'

		   SELECT @CCUSTOMERCONTROLACCODECN = VALUE
		   FROM GST_ACCOUNTS_CONFIG_DET_PAYMODES WHERE COLUMNNAME='CUSTOMER_CONTROL_AC_CODE_CN'

		   SELECT @CWIZCLIPGVSACCODE = VALUE
		   FROM GST_ACCOUNTS_CONFIG_DET_PAYMODES WHERE COLUMNNAME='WIZCLIP_GVS_AC_CODE'
		   		   		   
		   SELECT @CROFFACCODE = VALUE
		   FROM GST_ACCOUNTS_CONFIG_DET_OTHERS WHERE XN_TYPE='SLS' AND COLUMNNAME='ROFF_AC_CODE'
		   
		   SELECT @BCREATELEDGERFORCUSTOMER=ISNULL(CREATE_LEDGER_FOR_EACHCUSTOMER,0)
		   FROM GST_ACCOUNTS_CONFIG_MST WHERE XN_TYPE='SLS'
		   
		   SELECT TOP 1 @CADVGSTRCVACCODE=VALUE FROM GST_ACCOUNTS_CONFIG_DET_OTHERS 
		   WHERE XN_TYPE='ARC' AND COLUMNNAME='GST_ADVANCE_RECEIVED_AC_CODE'
					   		    		   
		    SET @CSTEP=180
	    
		    /*
				IF CREATE LEDGER FOR EACH CUSTOMER IS SELECTED, THEN LEDGER ACCOUNT FOR EACH CUSTOMER WOULD BE 
				POSTED WITH ACCOUNT ELSE CUSTOMER CONTROL ACCOUNT WOULD BE POSTED.SO, IF CREATE LEDGER FOR
				EACH CUSTOMER IS FALSE, DONOT PROCEED IF CUSTOMER CONTROL ACCOUNT IS NOT DEFINED.
			*/
		    SET @CSTEP=300
		    PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
					    
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
			
			CREATE INDEX IX_TEMP_ARCTABLE_RM_ID ON #SLSTABLE(MEMO_ID)

		   SET @CSTEP=310
			---GETTING LIST OF ALL ERROR FROM RECEIPTS/PAYMENTS AND CONVERT MRN TO BILL
		   	   
	   		
		   IF OBJECT_ID('TEMPDB..#V_PROCESS_PAYMODES','U') IS NOT NULL
				DROP TABLE #V_PROCESS_PAYMODES		
		   		   		   
		   SELECT A.PAYMODE_CODE, PAYMODE_GRP_CODE,
		   CONVERT(VARCHAR(50),A.PAYMODE_CODE+'_DOC') AS COLUMNNAME,
		   '0000000000' AS AC_CODE,CONVERT(VARCHAR(200),' A/C') AS COLUMNDESC 
		   INTO #V_PROCESS_PAYMODES FROM PAYMODE_XN_DET A
		   JOIN #SLSTABLE B ON A.MEMO_ID=B.MEMO_ID
		   JOIN PAYMODE_MST C ON C.PAYMODE_CODE=A.PAYMODE_CODE
		   WHERE A.XN_TYPE='SLS' AND A.PAYMODE_CODE NOT IN('0000001','0000004') AND C.PAYMODE_GRP_CODE NOT IN ('WCGV001','0000001')
		   GROUP BY A.PAYMODE_CODE,PAYMODE_GRP_CODE
	   	  
	   	   
	   	   SET @CSTEP=312	
		   INSERT #V_PROCESS_PAYMODES (PAYMODE_CODE, COLUMNNAME,PAYMODE_GRP_CODE,AC_CODE,COLUMNDESC)
		   SELECT PAYMODE_CODE,PAYMODE_CODE+'_COMM' AS COLUMNNAME,PAYMODE_GRP_CODE,'0000000000' AS AC_CODE,
		   ' COMMISSION A/C'
		   FROM #V_PROCESS_PAYMODES A WHERE PAYMODE_GRP_CODE='0000002'
			
		   SET @CSTEP=315
		   
		   INSERT #V_PROCESS_PAYMODES (PAYMODE_CODE,PAYMODE_GRP_CODE,COLUMNNAME,COLUMNDESC,AC_CODE)
		   SELECT TOP 1 '' AS PAYMODE_CODE,'' AS PAYMODE_GRP_CODE,
		   'CASH_AC_CODE' AS COLUMNNAME,'CASH A/C' AS COLUMNDESC,'0000000000' AS AC_CODE 
		   FROM PAYMODE_XN_DET A
		   JOIN #SLSTABLE B ON A.MEMO_ID=B.MEMO_ID
		   JOIN PAYMODE_MST C ON C.PAYMODE_CODE=A.PAYMODE_CODE
		   WHERE A.XN_TYPE='SLS' AND C.PAYMODE_GRP_CODE='0000001'
		   UNION ALL		   
		   SELECT TOP 1 '' AS PAYMODE_CODE,'' AS PAYMODE_GRP_CODE,'CUSTOMER_CONTROL_AC_CODE_SALE' AS COLUMNNAME,
		   'CUSTOMER CONTROL A/C FOR SALE' AS COLUMNDESC,'0000000000' AS AC_CODE 
		   FROM PAYMODE_XN_DET A
		   JOIN #SLSTABLE B ON A.MEMO_ID=B.MEMO_ID
		   JOIN PAYMODE_MST C ON C.PAYMODE_CODE=A.PAYMODE_CODE
		   WHERE A.XN_TYPE='SLS' AND (A.PAYMODE_CODE IN ('0000004','0000002') AND AMOUNT>0) AND @BCREATELEDGERFORCUSTOMER<>1
		   UNION		   
		   SELECT TOP 1 '' AS PAYMODE_CODE,'' AS PAYMODE_GRP_CODE,'CUSTOMER_CONTROL_AC_CODE_CN' AS COLUMNNAME,
		   'CUSTOMER CONTROL A/C FOR CREDIT NOTE' AS COLUMNDESC,'0000000000' AS AC_CODE
		   FROM PAYMODE_XN_DET A
		   JOIN #SLSTABLE B ON A.MEMO_ID=B.MEMO_ID
		   JOIN PAYMODE_MST C ON C.PAYMODE_CODE=A.PAYMODE_CODE
		   WHERE A.XN_TYPE='SLS' AND (A.PAYMODE_CODE IN('0000001') OR (A.PAYMODE_CODE='0000004' AND AMOUNT<0))
		   AND @BCREATELEDGERFORCUSTOMER<>1
		   
		   
		   	
		   
		   
		   --SELECT 'CHECK #V_PROCESS_PAYMODES',* FROM #V_PROCESS_PAYMODES
		   SET @CSTEP=320	

		   IF OBJECT_ID('TEMPDB..#TMPSLRVAT','U') IS NOT NULL
				DROP TABLE #TMPSLRVAT
			
			SELECT ROW_ID INTO 	#TMPSLRVAT FROM CMD01106 A (NOLOCK)
			JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID 
			WHERE ISNULL(A.REF_SLS_MEMO_DT,'')<@DGSTCUTOFFDATE
			AND ISNULL(A.REF_SLS_MEMO_DT,'')<>'' AND A.QUANTITY<0 
			AND (ISNULL(A.IGST_AMOUNT,0)+ISNULL(A.CGST_AMOUNT,0)+ISNULL(A.SGST_AMOUNT,0))=0
			AND ISNULL(A.TAX_AMOUNT,0)<>0
			
			IF OBJECT_ID('TEMPDB..#V_PROCESS','U') IS NOT NULL
				DROP TABLE #V_PROCESS
			
			--CREATE INDEX IND_SLRVAT ON #TMPSLRVAT (ROW_ID)
			SELECT 'SLS' AS POSTING_XN_TYPE
				  ,SC.SALE_AC_CODE
				  ,SC.TAX_AC_CODE
				  ,CONVERT(NUMERIC(6,2),0) AS GST_PERCENTAGE
				  ,CONVERT(NUMERIC(6,2),0) AS OTHER_CHARGES_GST_PERCENTAGE
				  ,CONVERT(NUMERIC(10,2),SUM(B.TAX_AMOUNT*-1)) AS TAX_AMOUNT
				  ,'0000000000' AS IGST_REVENUE_AC_CODE
				  ,'0000000000' AS IGST_TAX_AC_CODE
				  ,CONVERT(NUMERIC(10,2),0) AS IGST_AMOUNT
				  ,'0000000000' AS LGST_REVENUE_AC_CODE
				  ,'0000000000' AS CGST_TAX_AC_CODE
				  ,'0000000000' AS SGST_TAX_AC_CODE
				   ,'0000000000' AS OTHER_CHARGES_IGST_REVENUE_AC_CODE
				   ,'0000000000' AS OTHER_CHARGES_IGST_TAX_AC_CODE
				  ,'0000000000' AS OTHER_CHARGES_LGST_REVENUE_AC_CODE
				  ,'0000000000' AS OTHER_CHARGES_CGST_TAX_AC_CODE
				  ,'0000000000' AS OTHER_CHARGES_SGST_TAX_AC_CODE
				  ,CONVERT(NUMERIC(10,2),0) AS CGST_AMOUNT
				  ,CONVERT(NUMERIC(10,2),0) AS SGST_AMOUNT
				  ,CONVERT(NUMERIC(10,2),SUM( ((B.NET-ISNULL(B.CMM_DISCOUNT_AMOUNT,0)+(CASE WHEN TAX_METHOD=2 
				  THEN B.TAX_AMOUNT ELSE 0 END))
				   - B.TAX_AMOUNT)*-1 )) AS SALE_AMOUNT			  
				  ,CONVERT(NUMERIC(10,2),0) AS  OTHERCHARGES
				  ,'RETAIL SALES FOR Bill# :'+a.cm_no AS SALE_NARRATION
				  ,'SALES TAX FOR Bill#'+a.cm_no AS TAX_NARRATION,
				  A.CM_NO, A.CM_DT, a.location_Code  AS DEPT_ID
				  ,SECTION_CODE,ART.SUB_SECTION_CODE  
				  ,convert(numeric(6,2),0) gst_cess_percentage,convert(varchar(10),'') gst_cess_ac_code
				  ,convert(numeric(10,2),0) gst_cess_amount
			INTO #V_PROCESS FROM CMM01106 A (NOLOCK)   
			JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID    
			JOIN SLSCONFIGDET_1 SC ON B.TAX_PERCENTAGE = SC.TAX_PERCENTAGE
			JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID
			JOIN #TMPSLRVAT C ON C.ROW_ID=B.ROW_ID
			JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=B.PRODUCT_CODE
			JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE
			JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE
			GROUP BY A.CM_DT,A.CM_NO, a.location_Code ,SC.SALE_AC_CODE,SC.TAX_AC_CODE,SECTION_CODE,ART.SUB_SECTION_CODE  
			
			
			UNION ALL	
			SELECT 'SLS' AS POSTING_XN_TYPE,
				   '' AS SALE_AC_CODE,
				   '' AS TAX_AC_CODE,	
				   B.GST_PERCENTAGE,
				  CONVERT(NUMERIC(6,2),0) AS OTHER_CHARGES_GST_PERCENTAGE,				   
				   0 AS TAX_AMOUNT,
				   '0000000000' AS IGST_REVENUE_AC_CODE,
				   '0000000000' AS IGST_TAX_AC_CODE,
				   0 AS IGST_AMOUNT,	
				   '0000000000' AS LGST_REVENUE_AC_CODE
				  ,'0000000000' AS CGST_TAX_AC_CODE,
				  '0000000000' AS SGST_TAX_AC_CODE,
				  '0000000000' AS OTHER_CHARGES_IGST_REVENUE_AC_CODE,
				   '0000000000' AS OTHER_CHARGES_IGST_TAX_AC_CODE,
				   '0000000000' AS OTHER_CHARGES_LGST_REVENUE_AC_CODE,
				  '0000000000' AS OTHER_CHARGES_CGST_TAX_AC_CODE,
				  '0000000000' AS OTHER_CHARGES_SGST_TAX_AC_CODE
				  ,SUM(CGST_AMOUNT)*-1 AS CGST_AMOUNT
				  ,SUM(SGST_AMOUNT)*-1 AS SGST_AMOUNT
				  ,SUM(XN_VALUE_WITHOUT_GST*-1) AS SALE_AMOUNT		
				  ,0 AS OTHERCHARGES			  		  	  		  
				  ,'RETAIL SALES FOR Bill# :'+a.cm_no AS SALE_NARRATION
				  ,'Local Gst FOR Bill#'+a.cm_no AS TAX_NARRATION,
				  A.CM_NO, A.CM_DT, a.location_Code  AS DEPT_ID  
				  ,SECTION_CODE,ART.SUB_SECTION_CODE  
				  ,0 gst_cess_percentage,'' gst_cess_ac_code,0 gst_cess_amount
			FROM CMM01106 A (NOLOCK)   
			JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID    
			JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
			JOIN CUSTDYM CUS (NOLOCK) ON CUS.CUSTOMER_CODE=A.CUSTOMER_CODE
			JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=a.location_Code 
			LEFT OUTER JOIN #TMPSLRVAT C  ON C.ROW_ID=B.ROW_ID
			JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=B.PRODUCT_CODE
			JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE
			JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE
			WHERE C.ROW_ID IS NULL	AND (CGST_AMOUNT<>0 OR SGST_AMOUNT<>0 OR (B.GST_PERCENTAGE=0 AND IGST_AMOUNT=0))

			GROUP BY A.CM_DT,A.CM_NO,a.location_Code ,B.GST_PERCENTAGE,SECTION_CODE,ART.SUB_SECTION_CODE  	

			UNION ALL
			SELECT 'SLS' AS POSTING_XN_TYPE,
				   '' AS SALE_AC_CODE,
				   '' AS TAX_AC_CODE,
				   B.GST_PERCENTAGE,	
				   CONVERT(NUMERIC(6,2),0) AS OTHER_CHARGES_GST_PERCENTAGE,
				   0 AS TAX_AMOUNT,
				   '0000000000' AS IGST_REVENUE_AC_CODE,
				   '0000000000' AS IGST_TAX_AC_CODE,
				   0 AS IGST_AMOUNT,	
				   '0000000000' AS LGST_REVENUE_AC_CODE,
				  '0000000000' AS CGST_TAX_AC_CODE,
				  '0000000000' AS SGST_TAX_AC_CODE,
				   '0000000000' AS OTHER_CHARGES_IGST_REVENUE_AC_CODE,
				   '0000000000' AS OTHER_CHARGES_IGST_TAX_AC_CODE,
				   '0000000000' AS OTHER_CHARGES_LGST_REVENUE_AC_CODE,
				  '0000000000' AS OTHER_CHARGES_CGST_TAX_AC_CODE,
				  '0000000000' AS OTHER_CHARGES_SGST_TAX_AC_CODE				  
				  ,0 AS CGST_AMOUNT
				  ,0 AS SGST_AMOUNT
				  ,SUM(XN_VALUE_WITHOUT_GST*-1) AS SALE_AMOUNT
				  ,CONVERT(NUMERIC(10,2),0) AS  OTHERCHARGES
				  ,'RETAIL SALES FOR Bill# :'+a.cm_no AS SALE_NARRATION
				  ,'IGST FOR Bill#'+a.cm_no AS TAX_NARRATION,
				  A.CM_NO, A.CM_DT, a.location_Code  AS DEPT_ID,SECTION_CODE,ART.SUB_SECTION_CODE
				  ,0 gst_percentage,'' gst_cess_ac_code,0 gst_cess_amount				      
			FROM CMM01106 A (NOLOCK)   
			JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID    
			JOIN CUSTDYM CUS (NOLOCK) ON CUS.CUSTOMER_CODE=A.CUSTOMER_CODE
			JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=a.location_Code 
			JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
			LEFT OUTER JOIN #TMPSLRVAT C  ON C.ROW_ID=B.ROW_ID
			JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=B.PRODUCT_CODE
			JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE
			JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE
			WHERE C.ROW_ID IS NULL AND IGST_AMOUNT<>0
			GROUP BY A.CM_DT,a.location_Code ,A.CM_NO,a.location_Code ,B.GST_PERCENTAGE,SECTION_CODE,ART.SUB_SECTION_CODE  	
				
			UNION ALL
			SELECT 'SLS' AS POSTING_XN_TYPE,
			       '' AS SALE_AC_CODE,
				   '' AS TAX_AC_CODE,	
				   A.OTHER_CHARGES_GST_PERCENTAGE AS GST_PERCENTAGE,
				   A.OTHER_CHARGES_GST_PERCENTAGE AS OTHER_CHARGES_GST_PERCENTAGE,
				   0 AS TAX_AMOUNT,
				   '0000000000' AS IGST_REVENUE_AC_CODE,
				   '0000000000' AS IGST_TAX_AC_CODE,
				   SUM(A.OTHER_CHARGES_IGST_AMOUNT)*-1 AS IGST_AMOUNT,	
				   '0000000000' AS LGST_REVENUE_AC_CODE,
				  '0000000000' AS CGST_TAX_AC_CODE,
				  '0000000000' AS SGST_TAX_AC_CODE,
				   '0000000000' AS OTHER_CHARGES_IGST_REVENUE_AC_CODE,
				   '0000000000' AS OTHER_CHARGES_IGST_TAX_AC_CODE,
				   '0000000000' AS OTHER_CHARGES_LGST_REVENUE_AC_CODE,
				  '0000000000' AS OTHER_CHARGES_CGST_TAX_AC_CODE,
				  '0000000000' AS OTHER_CHARGES_SGST_TAX_AC_CODE,
				  SUM(A.OTHER_CHARGES_CGST_AMOUNT)*-1 AS CGST_AMOUNT,
				  SUM(A.OTHER_CHARGES_SGST_AMOUNT)*-1 AS SGST_AMOUNT,
				  0 AS SALE_AMOUNT,			  
				  SUM(A.OTHER_CHARGES_TAXABLE_VALUE) AS OTHERCHARGES ,
				  '',
				  'Local Gst FOR Bill#'+a.cm_no AS TAX_NARRATION,
				  A.CM_NO, A.CM_DT, a.location_Code  AS DEPT_ID,
				  '' AS SECTION_CODE,'' AS SUB_SECTION_CODE,0 gst_percentage,'' gst_cess_ac_code,0 gst_cess_amount    
			FROM CMM01106 A (NOLOCK)   
			JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
			JOIN CUSTDYM CUS (NOLOCK) ON CUS.CUSTOMER_CODE=A.CUSTOMER_CODE
			JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=a.location_Code 
			WHERE ISNULL(A.OTHER_CHARGES_TAXABLE_VALUE,0)<>0
			GROUP BY A.CM_DT,a.location_Code ,A.CM_NO,a.location_Code ,
			A.OTHER_CHARGES_GST_PERCENTAGE

			UNION ALL
			SELECT 'SLS' AS POSTING_XN_TYPE,
				   '' AS SALE_AC_CODE,
				   '' AS TAX_AC_CODE,
				   0 as GST_PERCENTAGE,	
				   CONVERT(NUMERIC(6,2),0) AS OTHER_CHARGES_GST_PERCENTAGE,
				   0 AS TAX_AMOUNT,
				   '0000000000' AS IGST_REVENUE_AC_CODE,
				   '0000000000' AS IGST_TAX_AC_CODE,
				   0 AS IGST_AMOUNT,	
				   '0000000000' AS LGST_REVENUE_AC_CODE,
				  '0000000000' AS CGST_TAX_AC_CODE,
				  '0000000000' AS SGST_TAX_AC_CODE,
				   '0000000000' AS OTHER_CHARGES_IGST_REVENUE_AC_CODE,
				   '0000000000' AS OTHER_CHARGES_IGST_TAX_AC_CODE,
				   '0000000000' AS OTHER_CHARGES_LGST_REVENUE_AC_CODE,
				  '0000000000' AS OTHER_CHARGES_CGST_TAX_AC_CODE,
				  '0000000000' AS OTHER_CHARGES_SGST_TAX_AC_CODE				  
				  ,0 AS CGST_AMOUNT
				  ,0 AS SGST_AMOUNT
				  ,0 AS SALE_AMOUNT
				  ,CONVERT(NUMERIC(10,2),0) AS  OTHERCHARGES
				  ,'RETAIL SALES FOR Bill# :'+a.cm_no AS SALE_NARRATION
				  ,'GST Cess FOR Bill#'+a.cm_no AS TAX_NARRATION,
				  A.CM_NO, A.CM_DT, a.location_Code  AS DEPT_ID,SECTION_CODE,ART.SUB_SECTION_CODE
				  ,gst_cess_percentage,'' gst_cess_ac_code,SUM(gst_cess_amount)*-1 gst_cess_amount
			FROM CMM01106 A (NOLOCK)   
			JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID    
			JOIN CUSTDYM CUS (NOLOCK) ON CUS.CUSTOMER_CODE=A.CUSTOMER_CODE
			JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=a.location_Code 
			JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
			LEFT OUTER JOIN #TMPSLRVAT C  ON C.ROW_ID=B.ROW_ID
			JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=B.PRODUCT_CODE
			JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE
			JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE
			WHERE C.ROW_ID IS NULL AND isnull(gst_cess_amount,0)<>0
			GROUP BY A.CM_DT,a.location_Code ,A.CM_NO,gst_cess_percentage,SECTION_CODE,ART.SUB_SECTION_CODE  	

			IF OBJECT_ID('TEMPDB..#V_PROCESS_OTHERS','U') IS NOT NULL
				DROP TABLE #V_PROCESS_OTHERS


			SELECT TOP  1 'SLS' AS  XN_TYPE,'ROFF_AC_CODE' AS  COLUMNNAME,'ROUND OFF A/C' AS COLUMNDESC
			INTO #V_PROCESS_OTHERS FROM #SLSTABLE A
			JOIN CMM01106 B (NOLOCK) ON A.MEMO_ID=B.CM_ID 
			UNION ALL
			SELECT TOP  1 'ARC' AS  XN_TYPE,'GST_ADVANCE_RECEIVED_AC_CODE' AS  COLUMNNAME,'GST ADVANCE RECEIVED A/C' AS COLUMNDESC
			FROM #SLSTABLE A
			JOIN PAYMODE_XN_DET B (NOLOCK) ON A.MEMO_ID=B.MEMO_ID
			JOIN ARC01106 C (NOLOCK) ON C.ADV_REC_ID=B.ADJ_MEMO_ID
			WHERE XN_TYPE='SLS' AND ( ISNULL(C.IGST_AMOUNT,0)<>0 OR ISNULL(C.CGST_AMOUNT,0)<>0)
			AND PAYMODE_CODE='0000002' AND ISNULL(@CADVGSTRCVACCODE,'') IN ('','0000000000')	
				
			
		   --SELECT 'CHECK #V_PROCESS_OTHERS',* FROM #V_PROCESS_OTHERS
		   
		   SET @CSTEP = 370
					
	
		EXEC SP3S_GET_POSTING_BLANKAC
			@CXNTYPE='SLS',
			@NLOOP=1,
			@CERRORMSG=@CERRORMSG OUTPUT,
			@BBLANKACFOUND=@BBLANKACFOUND OUTPUT		
		
		
		--SELECT 'CHECK #V_PROCESS',* FROM #V_PROCESS	
					   		   
		   IF @BCREATELEDGERFORCUSTOMER<>1
		   BEGIN
				SELECT @BPOSTCONTROLACSALEENTRIESBILLBYBILL=BILL_BY_BILL FROM LMP01106 A
				WHERE AC_CODE=@CCUSTOMERCONTROLACCODESALE
			
				
				SELECT @BPOSTCONTROLACCNENTRIESBILLBYBILL=BILL_BY_BILL FROM LMP01106 A
				WHERE AC_CODE=@CCUSTOMERCONTROLACCODECN
				
		   END

			
	        SET @CSTEP = 350
	        PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	        
			SET @CSTEP=355
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
			
			/*
				IF UPDATE SALE AT MRP IS TRUE THEN TOTAL ITEM LEVEL DISCOUNT AT EACH DATE SHOULD 
				BE POSTED TO DISCOUNT A/C SHOULD BE DEBITED. 
			ITEM LEVEL DISCOUNT SHOULD NOT BE POSTED AS PER SANJAY SIR....
			IF @CUPDATESALEATMRP = 1  
			  INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )   
			  SELECT @CDISCACCODE AS AC_CODE, SUM(A.DISCOUNT_AMOUNT) AS AMOUNT,   
					 'ITEM LEVEL DISCOUNT' AS NARRATION, A.CM_NO, A.CM_DT
					 ,@CDEPTID AS DEPT_ID,B.CANCELLED   
			  FROM CMD01106 A   
			  JOIN CMM01106 B ON A.CM_ID=B.CM_ID   
			  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS'
			  WHERE ABS(A.DISCOUNT_AMOUNT)>0 AND B.CANCELLED=0   
			  GROUP BY A.CM_DT,B.CANCELLED   
			*/
			 --OTHER CHARGES IN CASH MEMO SHOULD BE CREDITED TO OTHER CHARGES A/C
			 INSERT INTO @VCHC (AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )   
			 SELECT (CASE WHEN ISNULL(A.IGST_AMOUNT,0)<>0 THEN 
					  A.OTHER_CHARGES_IGST_REVENUE_AC_CODE ELSE A.OTHER_CHARGES_LGST_REVENUE_AC_CODE END) AS AC_CODE,  
					SUM(A.OTHERCHARGES)*-1 AS AMOUNT,  
					'OTHER CHARGES' AS NARRATION,  
			   A.CM_NO, CM_DT,DEPT_ID   
			   ,0 AS CANCELLED
			 FROM #V_PROCESS A
			 WHERE OTHERCHARGES<>0 
			 GROUP BY A.CM_DT,A.CM_NO,DEPT_ID,(CASE WHEN ISNULL(A.IGST_AMOUNT,0)<>0 THEN 
					  A.OTHER_CHARGES_IGST_REVENUE_AC_CODE ELSE A.OTHER_CHARGES_LGST_REVENUE_AC_CODE END)
			
			 INSERT INTO @VCHC (AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )   
			 SELECT @CROFFACCODE AS AC_CODE,  
					SUM(A.ROUND_OFF+ISNULL(A.GST_ROUND_OFF,0))*-1 AS AMOUNT,  
					'ROUND OFF' AS NARRATION,  
			   A.CM_NO, A.CM_DT,a.location_Code  AS DEPT_ID   
			   ,A.CANCELLED
			 FROM CMM01106 A (NOLOCK)
			 JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS'
			 WHERE (A.ROUND_OFF+ISNULL(A.GST_ROUND_OFF,0))<>0 AND A.CANCELLED=0
			 GROUP BY A.CM_DT,A.CM_NO,a.location_Code ,A.CANCELLED  	 
			  
			 /*
				CASH RECEIVED IN SALES SHOULD BE DEBITED TO CORRESPONDING CASH A/C
				CONFIGURED FOR CURRENCY PAYMENT MODE OR THE TILL ACCOUNT FOR WHOM THE SHIFT
				WAS OPEN.
			 */
			 							 
			 INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )   
			 SELECT (CASE WHEN ISNULL(TM.AC_CODE,'') IN ('','0000000000') THEN @CCASHACCODE ELSE TM.AC_CODE END)
					,SUM(ISNULL(B.AMOUNT,0)) AS AMOUNT
				   ,'CASH SALES FOR DATE:'+ CONVERT(VARCHAR,A.CM_DT,105) AS NARRATION,A.CM_NO, A.CM_DT
				   ,a.location_Code  AS DEPT_ID  
				   ,A.CANCELLED
			 FROM CMM01106 A (NOLOCK)   
			  JOIN PAYMODE_XN_DET B (NOLOCK) ON A.CM_ID = B.MEMO_ID
			   JOIN PAYMODE_MST C (NOLOCK) ON C.PAYMODE_CODE=B.PAYMODE_CODE
			     JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS'
			      LEFT JOIN TILL_SHIFT_MST TSM (NOLOCK) ON A.SHIFT_ID=TSM.SHIFT_ID
			       LEFT JOIN TILL_MST TM (NOLOCK) ON TSM.TILL_ID=TM.TILL_ID
					WHERE B.XN_TYPE = 'SLS'  AND  ISNULL(B.AMOUNT,0)<>0 AND A.CANCELLED=0
						AND C.PAYMODE_GRP_CODE='0000001'  
				GROUP BY A.CM_NO, (CASE WHEN ISNULL(TM.AC_CODE,'') IN ('','0000000000') THEN @CCASHACCODE ELSE TM.AC_CODE END),
				a.location_Code ,A.CM_DT,A.CANCELLED
			 
			 /*
				CARD SALES(DEBIT/CREDIT CARDS) SHOULD BE DEBITED TO CONFIGURED A/C
			 */
			
			SET @CSTEP=357
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113) 
			 DECLARE @CDAYCLOSEACCWISE VARCHAR(2)
			 
			 SELECT TOP 1 @CDAYCLOSEACCWISE=VALUE FROM CONFIG (NOLOCK) WHERE  CONFIG_OPTION='DAYCLOSE_ACC_WISE'
			 
			 IF ISNULL(@CDAYCLOSEACCWISE,'')<>'1'
				 INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED,REF_BILL_NO,REF_BILL_DATE )   
				 SELECT V.AC_CODE AS BANK_AC_CODE,SUM(C.AMOUNT) - ROUND( SUM( (C.AMOUNT*D.COMMISSION_PERCENTAGE/100) +   
							(C.AMOUNT*D.COMMISSION_PERCENTAGE/100) *  
					   D.SERVICE_TAX_PERCENTAGE/100 ),2) AS AMOUNT,  
				   'CREDIT CARD SALES ' AS NARRATION,  
				   A.CM_NO, A.CM_DT,a.location_Code  AS DEPT_ID,A.CANCELLED,
				   ISNULL(CCB.BATCH_CLOSING_NO,'') AS REF_BILL_NO,A.CM_DT AS REF_BILL_DATE  
				 FROM CMM01106 A (NOLOCK)   
				 JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS'
				 JOIN PAYMODE_XN_DET C (NOLOCK) ON C.MEMO_ID = A.CM_ID
				 JOIN PAYMODE_MST D (NOLOCK) ON C.PAYMODE_CODE= D.PAYMODE_CODE
				 JOIN #V_PROCESS_PAYMODES V ON V.COLUMNNAME=D.PAYMODE_CODE+'_DOC'
				 LEFT OUTER JOIN CC_BATCH_COLLECTION CCB (NOLOCK) ON CCB.DEPT_ID=a.location_Code  AND CCB.PAYMODE_CODE=C.PAYMODE_CODE
				 AND CCB.BATCH_DT=A.CM_DT			 
				 WHERE C.XN_TYPE='SLS' AND D.PAYMODE_GRP_CODE='0000002'
				 AND C.AMOUNT<>0  AND A.CANCELLED=0
				 GROUP BY A.CM_DT,A.CM_NO,a.location_Code ,V.AC_CODE,A.CANCELLED,ISNULL(CCB.BATCH_CLOSING_NO,'')
			  ELSE
				INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED,REF_BILL_NO )   
				SELECT V.AC_CODE,SUM(C.AMOUNT)  AS AMOUNT,  
			   'CREDIT CARD SALES ' AS NARRATION,A.CM_NO, A.CM_DT,a.location_Code  AS DEPT_ID,A.CANCELLED,
			   '' AS REF_BILL_NO  
			   FROM CMM01106 A (NOLOCK)   
			   JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS'
			   JOIN PAYMODE_XN_DET C (NOLOCK) ON C.MEMO_ID = A.CM_ID
			   JOIN PAYMODE_MST D (NOLOCK) ON C.PAYMODE_CODE= D.PAYMODE_CODE
			   JOIN #V_PROCESS_PAYMODES V ON V.COLUMNNAME=D.PAYMODE_CODE+'_DOC'
			   JOIN CC_BATCH_COLLECTION CCB (NOLOCK) ON CCB.DEPT_ID=a.location_Code  AND CCB.PAYMODE_CODE=C.PAYMODE_CODE
			   AND CCB.BATCH_DT=A.CM_DT			 
			   WHERE C.XN_TYPE='SLS' AND D.PAYMODE_GRP_CODE='0000002' 
			   AND C.AMOUNT<>0  AND A.CANCELLED=0
			   GROUP BY A.CM_DT,A.CM_NO,a.location_Code ,V.AC_CODE,A.CANCELLED,ISNULL(CCB.BATCH_CLOSING_NO,'')
							 			 			  
			 /*
				THE CONFIGURED COMMISSION ACCOUNT IN PAYMODE MASTER
			 */
			 
			 -----COMMISSION A/C TO BE POSTED ONLY IF DAY CLOSE BATCH COLLECTION IS NOT DONE BANK A/C WISE
			 IF ISNULL(@CDAYCLOSEACCWISE,'')<>'1'
				 INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )   
				 SELECT V.AC_CODE AS COMMISSION_AC_CODE,  
						ROUND(SUM((C.AMOUNT*D.COMMISSION_PERCENTAGE/100) +   
							(C.AMOUNT*D.COMMISSION_PERCENTAGE/100)*D.SERVICE_TAX_PERCENTAGE/100),2) AS AMOUNT
						,'CREDIT CARD SALES COMMISSION ',A.CM_NO, A.CM_DT,a.location_Code  AS DEPT_ID   
						,A.CANCELLED
				 FROM CMM01106 A (NOLOCK)   
				 JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS'
				 JOIN PAYMODE_XN_DET C (NOLOCK) ON C.MEMO_ID = A.CM_ID 
				 JOIN PAYMODE_MST D (NOLOCK) ON C.PAYMODE_CODE= D.PAYMODE_CODE 
				 JOIN #V_PROCESS_PAYMODES V ON V.COLUMNNAME=D.PAYMODE_CODE+'_COMM'
				 LEFT OUTER JOIN CC_BATCH_COLLECTION CCB (NOLOCK) ON CCB.DEPT_ID=a.location_Code  AND CCB.PAYMODE_CODE=C.PAYMODE_CODE
				 AND CCB.BATCH_DT=A.CM_DT			 
				 WHERE C.XN_TYPE='SLS' AND D.PAYMODE_GRP_CODE='0000002'
				 AND C.AMOUNT<>0 AND A.CANCELLED=0
				 AND D.COMMISSION_PERCENTAGE>0   
				 GROUP BY A.CM_DT,A.CM_NO,a.location_Code ,A.CANCELLED,V.AC_CODE	
			 			  
		    SET @CSTEP=359
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

			 ---FOR MISC SALES, DEBIT THE CONFIGURED ACCOUNT WITH THE MISC AMOUNT  
			  INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )
			  SELECT V.AC_CODE
					,SUM(C.AMOUNT) AS AMOUNT
					,D.PAYMODE_NAME+ 'SALES' AS NARRATION
					,A.CM_NO, A.CM_DT,a.location_Code  AS DEPT_ID   
					,A.CANCELLED
			  FROM CMM01106 A (NOLOCK)
			  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS'  
			  JOIN PAYMODE_XN_DET C (NOLOCK) ON A.CM_ID=C.MEMO_ID AND C.XN_TYPE='SLS'
			  JOIN PAYMODE_MST D (NOLOCK) ON C.PAYMODE_CODE= D.PAYMODE_CODE
			  JOIN #V_PROCESS_PAYMODES V ON V.COLUMNNAME=D.PAYMODE_CODE+'_DOC'
			  WHERE D.PAYMODE_GRP_CODE NOT IN ('0000001','0000002','0000004') AND C.AMOUNT<>0  AND A.CANCELLED=0 
			  AND C.PAYMODE_CODE NOT IN ('0000002','0000001')
			  GROUP BY A.CM_DT,A.CM_NO,a.location_Code ,V.AC_CODE,D.PAYMODE_NAME,A.CANCELLED

			 UNION ALL
			 SELECT @CWIZCLIPGVSACCODE
					,SUM(C.AMOUNT) AS AMOUNT
					,D.PAYMODE_NAME+ 'SALES' AS NARRATION
					,a.CM_NO, A.CM_DT,a.location_Code  AS DEPT_ID   
					,A.CANCELLED
			  FROM CMM01106 A (NOLOCK)
			  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS'  
			  JOIN PAYMODE_XN_DET C (NOLOCK) ON A.CM_ID=C.MEMO_ID AND C.XN_TYPE='SLS'
			  JOIN PAYMODE_MST D (NOLOCK) ON C.PAYMODE_CODE= D.PAYMODE_CODE
			  WHERE D.PAYMODE_GRP_CODE='WCGV001' AND C.AMOUNT<>0  AND A.CANCELLED=0 
			  GROUP BY A.CM_DT,A.CM_NO,a.location_Code ,D.PAYMODE_NAME,A.CANCELLED			 			   									
			
		 IF @BCREATELEDGERFORCUSTOMER =1  
		 BEGIN
			SET @CSTEP=359.1
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
		 /*
			CUSTOMER'S LEDGER ACCOUNT SHOULD BE DEBITED WITH CREDIT SALES AMOUNT.
		 */

			 -- SELECT ISNULL(B.AC_CODE,D.AC_CODE), SUM(ISNULL(E.AMOUNT,0)) AS AMOUNT,  
				--'CREDIT SALES AGST. BILL NO. : ' + A.CM_NO+
				-- (CASE WHEN @CPOSTSALESPERSONINFO='1' THEN  ' BY : '+DBO.FN_GETCMM_EMP(A.CM_ID) ELSE '' END) AS NARRATION,					
				--A.CM_NO, A.CM_DT,a.location_Code  AS DEPT_ID   
				--,A.CANCELLED
			 -- FROM CMM01106 A (NOLOCK)  
			 -- JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
			 -- LEFT OUTER JOIN LMP01106 (NOLOCK) B ON A.CUSTOMER_CODE=B.CUSTOMER_CODE    
			 -- JOIN CUSTDYM C (NOLOCK) ON C.CUSTOMER_CODE=A.CUSTOMER_CODE  
			 -- LEFT OUTER JOIN LM01106 D (NOLOCK) ON D.AC_NAME=C.CUSTOMER_FNAME+' '+C.CUSTOMER_LNAME+' ('+C.USER_CUSTOMER_CODE+')'  
			 -- JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID  
			 -- WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000004' AND AMOUNT >0   
			 -- GROUP BY A.CM_DT,a.location_Code , A.CM_NO, ISNULL(B.AC_CODE,D.AC_CODE) ,A.CANCELLED 
			  
			  INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )   
			  SELECT C.AC_CODE, SUM(ISNULL(E.AMOUNT,0)) AS AMOUNT,  
				'CREDIT SALES AGAINST BILL NO. : ' + A.CM_NO+
				 (CASE WHEN @CPOSTSALESPERSONINFO='1' THEN  
				 (CASE WHEN DBO.FN_GETCMM_EMP(A.CM_ID)<>'' THEN ' BY : '+DBO.FN_GETCMM_EMP(A.CM_ID) ELSE '' END) ELSE '' END) AS NARRATION,					
				A.CM_NO, A.CM_DT,a.location_Code  AS DEPT_ID   
				,A.CANCELLED
			  FROM CMM01106 A (NOLOCK)  
			  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
			  JOIN CUSTDYM C (NOLOCK) ON C.CUSTOMER_CODE=A.CUSTOMER_CODE  
			  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID  
			  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000004' AND AMOUNT >0   
			  AND A.PARTY_TYPE<>2
			  GROUP BY A.CM_ID,A.CM_DT,A.CM_NO,a.location_Code , A.CM_NO,C.AC_CODE ,A.CANCELLED 
			  
			  UNION ALL
			  SELECT C.AC_CODE, SUM(ISNULL(E.AMOUNT,0)) AS AMOUNT,  
				'CREDIT SALES AGAINST BILL NO. : ' + A.CM_NO+
				 (CASE WHEN @CPOSTSALESPERSONINFO='1' THEN  
				 (CASE WHEN DBO.FN_GETCMM_EMP(A.CM_ID)<>'' THEN ' BY : '+DBO.FN_GETCMM_EMP(A.CM_ID) ELSE '' END) ELSE '' END) AS NARRATION,					
				A.CM_NO, A.CM_DT,a.location_Code  AS DEPT_ID   
				,A.CANCELLED
			  FROM CMM01106 A (NOLOCK)  
			  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
			  JOIN LM01106 C (NOLOCK) ON C.AC_CODE=A.AC_CODE
			  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID  
			  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000004' AND AMOUNT >0   
			  AND A.PARTY_TYPE=2
			  GROUP BY A.CM_ID,A.CM_DT,a.location_Code , A.CM_NO,C.AC_CODE ,A.CANCELLED 			  
		 END	  
		 ELSE
		 IF @BPOSTCONTROLACSALEENTRIESBILLBYBILL=1
		 BEGIN
						SET @CSTEP=359.2
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

		 /*
			IF CREATE LEDGER FOR EACH CUSTOMER IS FALSE AND POST BILL_BY_BILL IS TRUE FOR CUSTOMER
			CONTROL ACCOUNT THEN CUSTOMER CONTROL ACCOUNT SHOULD BE DEBITED WITH THE CREDIT AMOUNT 
			FOR EACH BILL SEPARATELY
		 */
		 	INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED ) 
			SELECT	@CCUSTOMERCONTROLACCODESALE AS AC_CODE
					,SUM(E.AMOUNT) AS AMOUNT
					,'CREDIT SALES AGST BILL NO. : ' + A.CM_NO+
				 (CASE WHEN @CPOSTSALESPERSONINFO='1' THEN  
				 (CASE WHEN DBO.FN_GETCMM_EMP(A.CM_ID)<>'' THEN ' BY : '+DBO.FN_GETCMM_EMP(A.CM_ID) ELSE '' END) ELSE '' END) AS NARRATION,					
					A.CM_NO, A.CM_DT,a.location_Code  AS DEPT_ID 
					,A.CANCELLED
			FROM CMM01106 A (NOLOCK) 
			JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS'
			JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID  
			WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000004' AND AMOUNT >0   
			GROUP BY A.CM_DT,a.location_Code ,A.CM_NO,A.CM_ID,A.CANCELLED
		 END	
		 ELSE  
		 IF ISNULL( @BPOSTCONTROLACSALEENTRIESBILLBYBILL,0)=0
		 BEGIN
			SET @CSTEP=359.3
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

		 /*
			IF CREATE LEDGER FOR EACH CUSTOMER IS FALSE AND BILL_BY_BILL IS FALSE FOR THE CUSTOMER 
			CONTROL A/C THEN CLUB CREDIT AMOUNT AT EACH DATE AND DEBIT THE CUSTOMER CONTROL ACCOUNT
			FOR EACH DISTINCT DATE.
		 */
			INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,A.CANCELLED )   
			  SELECT @CCUSTOMERCONTROLACCODESALE AS AC_CODE
					,SUM(E.AMOUNT) AS AMOUNT
					,'CREDIT SALES' AS NARRATION
					,A.CM_NO, A.CM_DT,a.location_Code  AS DEPT_ID   
					,A.CANCELLED
			  FROM CMM01106 A (NOLOCK) 
			  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS'  
			  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID  
			  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000004' AND AMOUNT >0   
			  GROUP BY A.CM_DT,A.CM_NO,a.location_Code ,A.CANCELLED
          END		  
 
		 IF @BCREATELEDGERFORCUSTOMER = 1  
		 BEGIN
						SET @CSTEP=359.4
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

		 /*
			CUSTOMER'S LEDGER ACCOUNT SHOULD BE CREDITED WITH THE CREDIT REFUND AMOUNT.	
		 */
			 INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED,REF_BILL_NO,REF_BILL_DATE )   
			  SELECT C.AC_CODE,SUM(E.AMOUNT) AS AMOUNT
					,'CREDIT REFUND AGST. SALES BILL NO. : ' + A.CM_NO+
				 (CASE WHEN @CPOSTSALESPERSONINFO='1' THEN  
				 (CASE WHEN DBO.FN_GETCMM_EMP(A.CM_ID)<>'' THEN ' BY : '+DBO.FN_GETCMM_EMP(A.CM_ID) ELSE '' END) ELSE '' END) AS NARRATION					
					,A.CM_NO, A.CM_DT,a.location_Code  AS DEPT_ID   
					,A.CANCELLED,LTRIM(RTRIM(ISNULL(F.CM_NO,''))) AS REF_BILL_NO,ISNULL(F.CM_DT,'') AS REF_BILL_DATE
			  FROM CMM01106 A (NOLOCK)  
			  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
			  JOIN CUSTDYM C (NOLOCK) ON C.CUSTOMER_CODE=A.CUSTOMER_CODE  
			  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID AND E.XN_TYPE='SLS'
			  LEFT OUTER JOIN CMM01106 F (NOLOCK) ON F.CM_ID=E.ADJ_MEMO_ID
			  WHERE (E.PAYMODE_CODE='CMR0001' AND E.AMOUNT<0) 
			  GROUP BY A.CM_ID,A.CM_DT,A.CM_NO,a.location_Code ,  C.AC_CODE,A.CANCELLED,LTRIM(RTRIM(ISNULL(F.CM_NO,''))),ISNULL(F.CM_DT,'')
		 END	  
		 ELSE
		 IF @BPOSTCONTROLACSALEENTRIESBILLBYBILL=1
		 BEGIN
						SET @CSTEP=359.5
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

		 /*
			CREDIT CUSTOMER CONTROL ACCOUNT BILL BY BILL WITH THE CREDIT REFUND AMOUNT
		 */
			INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,REF_BILL_NO,REF_BILL_DATE,CANCELLED ) 
			SELECT	@CCUSTOMERCONTROLACCODESALE AS AC_CODE,SUM(B.AMOUNT) AS AMOUNT
					,'CREDIT REFUND AGST. SALES BILL NO. : ' + ISNULL(D.CM_NO,A.CM_NO)+
				 (CASE WHEN @CPOSTSALESPERSONINFO='1' THEN  
				 (CASE WHEN DBO.FN_GETCMM_EMP(A.CM_ID)<>'' THEN ' BY : '+DBO.FN_GETCMM_EMP(A.CM_ID) ELSE '' END) ELSE '' END) AS NARRATION,					
					A.CM_NO, A.CM_DT,a.location_Code  AS DEPT_ID
					,LTRIM(RTRIM(ISNULL(D.CM_NO,''))),D.CM_DT
					,A.CANCELLED
			FROM CMM01106 A (NOLOCK) 
			JOIN PAYMODE_XN_DET B (NOLOCK) ON A.CM_ID = B.MEMO_ID
			LEFT OUTER JOIN CMM01106 D (NOLOCK) ON D.CM_ID=B.ADJ_MEMO_ID
			JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
			WHERE (B.XN_TYPE='SLS' AND B.PAYMODE_CODE='CMR0001' AND B.AMOUNT<0) 
			GROUP BY A.CM_DT,a.location_Code ,A.CM_ID,A.CM_NO,ISNULL(D.CM_NO,A.CM_NO),ISNULL(D.CM_NO,''),A.CANCELLED,D.CM_DT
		END	
	    ELSE  
	    IF ISNULL(@BPOSTCONTROLACSALEENTRIESBILLBYBILL,0)=0
		BEGIN  
						SET @CSTEP=359.6
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

		/*
			CREDIT THE CUSTOMER CONTROL ACCOUNT DATEWISE WITH THE TOTAL CREDIT REFUND AMOUNT.
		*/
			 INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )   
			  SELECT @CCUSTOMERCONTROLACCODESALE AS AC_CODE, SUM(E.AMOUNT) AS AMOUNT,   
				'CREDIT REFUND IN SALES' AS NARRATION,   
				A.CM_NO, A.CM_DT,a.location_Code  AS DEPT_ID   
				,A.CANCELLED
			  FROM CMM01106 A (NOLOCK)  
			  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
			  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID AND E.XN_TYPE='SLS'
			  WHERE (E.PAYMODE_CODE='CMR0001' AND E.AMOUNT<0) 
			  AND A.CANCELLED=0
			  GROUP BY A.CM_DT,A.CM_NO,a.location_Code  ,A.CANCELLED 
	   END
  
		 IF @BCREATELEDGERFORCUSTOMER = 1  
		 BEGIN
						SET @CSTEP=359.7
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

			 /*
				CUSTOMER'S LEDGER ACCOUNT SHOULD BE CREDITED WITH THE CREDIT NOTE AMOUNT 
				FOR EACH BILL AS BILL NO SHOULD BE INCLUDED IN NARRATION
			 */
			  INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )   
			  SELECT C.AC_CODE
					,SUM(E.AMOUNT) AS AMOUNT
					,'CREDIT NOTE ISSUE IN SALES MEMO NO. : ' + A.CM_NO+
				 (CASE WHEN @CPOSTSALESPERSONINFO='1' THEN  
				 (CASE WHEN DBO.FN_GETCMM_EMP(A.CM_ID)<>'' THEN ' BY : '+DBO.FN_GETCMM_EMP(A.CM_ID) ELSE '' END) ELSE '' END) AS NARRATION					
					,A.CM_NO, A.CM_DT,a.location_Code  AS DEPT_ID   
					,A.CANCELLED
			  FROM CMM01106 A (NOLOCK)  
			  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
			  JOIN CUSTDYM C (NOLOCK) ON C.CUSTOMER_CODE=A.CUSTOMER_CODE  
			  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID  
			  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000004' AND AMOUNT <0   
			  AND   SUBSTRING(A.CM_NO,5,1)='N'   
			  GROUP BY A.CM_ID,A.CM_DT,a.location_Code , A.CM_NO,C.AC_CODE  ,A.CANCELLED
		 END 
		 ELSE
		 IF @BPOSTCONTROLACSALEENTRIESBILLBYBILL=1
		 BEGIN
						SET @CSTEP='359.8'
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

			 /*
				CUSTOMER CONTROL ACCOUNT SHOULD BE CREDITED WITH THE CREDIT NOTE AMOUNT BILL BY BILL
			 */
				INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED ) 
				SELECT	@CCUSTOMERCONTROLACCODECN AS AC_CODE
						,SUM(B.AMOUNT) AS AMOUNT
						,'CREDIT NOTE ISSUE IN SALES MEMO NO. : ' + A.CM_NO+
				 (CASE WHEN @CPOSTSALESPERSONINFO='1' THEN  
				 (CASE WHEN DBO.FN_GETCMM_EMP(A.CM_ID)<>'' THEN ' BY : '+DBO.FN_GETCMM_EMP(A.CM_ID) ELSE '' END) ELSE '' END) AS NARRATION,					
						A.CM_NO, A.CM_DT,a.location_Code  AS DEPT_ID 
						,A.CANCELLED
				FROM CMM01106 A (NOLOCK) 
				JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 	
			    JOIN PAYMODE_XN_DET B (NOLOCK) ON A.CM_ID = B.MEMO_ID  
			    WHERE B.XN_TYPE = 'SLS' AND B.PAYMODE_CODE='0000004' AND AMOUNT <0   
				GROUP BY A.CM_DT,a.location_Code ,A.CM_NO,A.CM_ID,A.CANCELLED
		 END	
		 ELSE    
		 IF ISNULL(@BPOSTCONTROLACSALEENTRIESBILLBYBILL,0)=0	 
		 BEGIN 
									SET @CSTEP='359.9'
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

				/*
					AT EACH DATE CREDIT NOTE AMOUNT SHOULD BE AGGREGATED AND 
					CUSTOMER CONTROL ACCOUNT SHOULD BE CREDITED WITH THE AMOUNT.
				*/
				INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )   
				SELECT @CCUSTOMERCONTROLACCODECN AS AC_CODE
					  ,SUM(E.AMOUNT) AS AMOUNT
					  ,'CREDIT NOTE ISSUE IN SALES' AS NARRATION
					  ,A.CM_NO, A.CM_DT,a.location_Code  AS DEPT_ID   
					  ,A.CANCELLED
				FROM CMM01106 A (NOLOCK)  
				JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 	
			    JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID  
			    WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000004' AND E.AMOUNT <0   
				AND  SUBSTRING(A.CM_NO,5,1)='N' AND A.CANCELLED=0
				GROUP BY A.CM_DT,A.CM_NO,a.location_Code ,A.CANCELLED
		END
		
		--- CREDIT NOTE ADJUSTMENT IN SALES  
		IF @BCREATELEDGERFORCUSTOMER = 1  
		BEGIN
									SET @CSTEP='359.10'
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

		/*
			CUSTOMER'S LEDGER ACCOUNT SHOULD BE DEBITED WITH THE CREDIT NOTE ADJUSTED AMOUNT.
		*/
			INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED,REF_BILL_NO,REF_BILL_DATE )   
			SELECT C.AC_CODE
				 , SUM(E.AMOUNT) AS AMOUNT
				 , 'CREDIT NOTE ADJUSTMENT IN SALES MEMO NO: ' + A.CM_NO+
				 (CASE WHEN @CPOSTSALESPERSONINFO='1' THEN  
				 (CASE WHEN DBO.FN_GETCMM_EMP(A.CM_ID)<>'' THEN ' BY : '+DBO.FN_GETCMM_EMP(A.CM_ID) ELSE '' END) ELSE '' END) AS NARRATION					
				 , A.CM_NO AS CM_NO, A.CM_DT,a.location_Code  AS DEPT_ID 
				 , A.CANCELLED,LTRIM(RTRIM(F.CM_NO)) AS REF_BILL_NO,F.CM_DT AS REF_BILL_DATE
			  FROM CMM01106 A (NOLOCK)  
			  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 	
			  JOIN CUSTDYM C (NOLOCK) ON C.CUSTOMER_CODE=A.CUSTOMER_CODE  
			  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID 
			  LEFT OUTER JOIN CMM01106 F (NOLOCK) ON E.ADJ_MEMO_ID=F.CM_ID
			  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000001' AND E.AMOUNT > 0   
			  GROUP BY A.CM_ID, A.CM_DT,a.location_Code , A.CM_NO, C.AC_CODE,A.CANCELLED ,LTRIM(RTRIM(F.CM_NO)),F.CM_DT
		 END 
		 ELSE  
		 IF @BPOSTCONTROLACSALEENTRIESBILLBYBILL=1
		 BEGIN
									SET @CSTEP='359.11'
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

		 /*
			CUSTOMER CONTROL ACCOUNT SHOULD BE DEBITED WITH THE CREDIT NOTE ADJUSTED AMOUNT BILL BY BILL.
		 */
			  INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,REF_BILL_NO,REF_BILL_DATE,CANCELLED ) 
			  SELECT	@CCUSTOMERCONTROLACCODECN AS AC_CODE
						, SUM(B.AMOUNT) AS AMOUNT,
						'CREDIT NOTE '+ISNULL(C.CM_NO,'')+' ADJUSTMENT IN SALES MEMO NO: ' + A.CM_NO+
				 (CASE WHEN @CPOSTSALESPERSONINFO='1' THEN  
				 (CASE WHEN DBO.FN_GETCMM_EMP(A.CM_ID)<>'' THEN ' BY : '+DBO.FN_GETCMM_EMP(A.CM_ID) ELSE '' END) ELSE '' END) AS NARRATION					
						,A.CM_NO AS CM_NO, A.CM_DT
						,a.location_Code  AS DEPT_ID
						,LTRIM(RTRIM(C.CM_NO)),C.CM_DT
						,A.CANCELLED
				FROM CMM01106 A  (NOLOCK)
				JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
				JOIN PAYMODE_XN_DET B (NOLOCK) ON A.CM_ID = B.MEMO_ID AND B.XN_TYPE='SLS'
				JOIN CMM01106 C (NOLOCK) ON B.ADJ_MEMO_ID=C.CM_ID
				WHERE B.PAYMODE_CODE='0000001' AND  B.AMOUNT>0 
				GROUP BY A.CM_ID,A.CM_DT,a.location_Code ,C.CM_NO,A.CANCELLED,C.CM_DT,A.CM_NO
		 END	
	  ELSE
	  IF ISNULL( @BPOSTCONTROLACSALEENTRIESBILLBYBILL,0)=0		
	  BEGIN
								SET @CSTEP='359.12'
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

		  INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )   
		  SELECT @CCUSTOMERCONTROLACCODECN AS AC_CODE
				,SUM(E.AMOUNT) AS AMOUNT
				,'CREDIT NOTE ADJUSTMENT IN SALES' AS NARRATION
				,A.CM_NO, A.CM_DT,a.location_Code  AS DEPT_ID   
				,A.CANCELLED
		  FROM CMM01106 A (NOLOCK)  
		  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
		  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID 
		  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000001' AND ISNULL(E.AMOUNT,0) > 0   
		  AND A.CANCELLED=0
		  GROUP BY A.CM_DT,A.CM_NO,a.location_Code ,A.CANCELLED  
	 END	  
	  
	 --- ADVANCE ADJUSTMENT IN SALES  
	 IF @BCREATELEDGERFORCUSTOMER = 1  
	 BEGIN
								SET @CSTEP='359.13'
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

	 /*
		CUSTOMER'S LEDGER ACCOUNT SHOULD BE DEBITED WITH THE ADVANCE ADJUSTED AMOUNT.
	 */
		INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED,REF_BILL_NO,REF_BILL_DATE )   
		SELECT C.AC_CODE
			  ,SUM(E.AMOUNT) AS AMOUNT
			  ,'ADVANCE ADJUSTMENT IN SALES MEMO NO. : ' + A.CM_NO AS NARRATION
			  ,A.CM_NO AS CM_NO
			  ,A.CM_DT
			  ,a.location_Code  AS DEPT_ID   
			  ,A.CANCELLED,LTRIM(RTRIM(F.ADV_REC_NO)) AS REF_BILL_NO,F.ADV_REC_DT AS REF_BILL_DATE
		  FROM CMM01106 A (NOLOCK)  
		  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
		  JOIN CUSTDYM C (NOLOCK) ON C.CUSTOMER_CODE=A.CUSTOMER_CODE  
		  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID
		  JOIN ARC01106 F (NOLOCK) ON E.ADJ_MEMO_ID=F.ADV_REC_ID
		  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000002' AND E.AMOUNT<>0 
		  GROUP BY A.CM_DT,a.location_Code , A.CM_NO, C.AC_CODE,A.CANCELLED ,LTRIM(RTRIM(F.ADV_REC_NO)),F.ADV_REC_DT
	 END 
	 ELSE  
	 IF @BPOSTCONTROLACSALEENTRIESBILLBYBILL=1
	 BEGIN
								SET @CSTEP='359.14'
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

	 /*
		CUSTOMER CONTROL ACCOUNT SHOULD BE DEBITED BILL BY BILL WITH THE ADVANCE ADJUSTED AMOUNT.
	 */
		INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,REF_BILL_NO,REF_BILL_DATE,CANCELLED ) 
		SELECT	@CCUSTOMERCONTROLACCODESALE AS AC_CODE
				,SUM(B.AMOUNT) AS AMOUNT
				,'ADVANCE '+(C.ADV_REC_NO)+' ADJUSTMENT IN SALES MEMO NO. : ' + A.CM_NO AS NARRATION
				,A.CM_NO AS CM_NO, A.CM_DT
				,a.location_Code  AS DEPT_ID
				,LTRIM(RTRIM(C.ADV_REC_NO)),C.ADV_REC_DT
				,A.CANCELLED
		FROM CMM01106 A  (NOLOCK)
		JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
		JOIN PAYMODE_XN_DET B (NOLOCK) ON A.CM_ID = B.MEMO_ID 
		JOIN ARC01106 C (NOLOCK) ON B.ADJ_MEMO_ID=C.ADV_REC_ID
		WHERE B.XN_TYPE='SLS' AND B.PAYMODE_CODE='0000002' AND B.AMOUNT<>0 
		GROUP BY A.CM_DT,a.location_Code ,A.CM_NO,C.ADV_REC_NO,A.CANCELLED,C.ADV_REC_DT
	END	
	ELSE
	IF ISNULL(@BPOSTCONTROLACSALEENTRIESBILLBYBILL,0)=0		 
	BEGIN 
								SET @CSTEP='359.15'
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

	/*
		AGGREGATE THE ADVANCE ADJUSTED AMOUNT AT EACH DATE 
		AND DEBIT THE CUSTOMER CONTROL ACCOUNT FOR EACH DATE.
	*/
		INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )   
		  SELECT @CCUSTOMERCONTROLACCODESALE AS AC_CODE
				,SUM(E.AMOUNT) AS AMOUNT,   
			'ADVANCE ADJUSTMENT IN SALES' AS NARRATION,  
			A.CM_NO, A.CM_DT,a.location_Code  AS DEPT_ID   
			,A.CANCELLED
		  FROM CMM01106 A (NOLOCK)  
		  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
		  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID 
		  WHERE E.XN_TYPE='SLS' AND E.PAYMODE_CODE='0000002' AND E.AMOUNT<>0  AND A.CANCELLED=0
		  GROUP BY A.CM_DT,A.CM_NO,a.location_Code  ,A.CANCELLED 
	END	
	
							SET @CSTEP='359.16'
	PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	
	IF OBJECT_ID('TEMPDB..#V_ADV_REVERSAL','U') IS NOT NULL
		DROP TABLE #V_ADV_REVERSAL
		  
	------ PUT THE REVERSE ENTRY OF ADVANCE RECEIVED A/C IF ADVANCE ISSUED IN GST REGIME IS ADJUSTED
	DECLARE @BPOSTADVREVBILLBYBILL BIT
	
	IF @BCREATELEDGERFORCUSTOMER = 1  OR  @BPOSTCONTROLACSALEENTRIESBILLBYBILL=1
		SET @BPOSTADVREVBILLBYBILL=1
	ELSE
		SET @BPOSTADVREVBILLBYBILL=0
	
	INSERT INTO @VCHC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )  	
	SELECT CONVERT(CHAR(10),@CADVGSTRCVACCODE) AS AC_CODE
		  ,SUM(E.AMOUNT)*-1 AS AMOUNT
		  ,'1'+(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END)  AS NARRATION
		  ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN A.CM_NO ELSE '' END) AS CM_NO
		  ,A.CM_DT
		  ,a.location_Code  AS DEPT_ID   
		  ,A.CANCELLED
	  FROM CMM01106 A (NOLOCK)  
	  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
	  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID
	  JOIN ARC01106 ARC (NOLOCK) ON ARC.ADV_REC_ID=E.ADJ_MEMO_ID
	  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000002' AND E.AMOUNT<>0 
	  AND (ISNULL(ARC.IGST_AMOUNT,0)+ISNULL(ARC.CGST_AMOUNT,0)+ISNULL(ARC.IGST_AMOUNT,0))<>0 
	  GROUP BY A.CM_DT,A.CM_NO,a.location_Code ,A.CANCELLED 
	  ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END) 

	  UNION ALL
	  SELECT GAC.LGST_REVENUE_AC_CODE AS AC_CODE
		  ,SUM(ARC.TAXABLE_VALUE) AS AMOUNT
		  ,'2'+(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END) AS NARRATION
		  ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN A.CM_NO ELSE '' END)
		  ,A.CM_DT
		  ,a.location_Code  AS DEPT_ID   
		  ,A.CANCELLED
	  FROM CMM01106 A (NOLOCK)  
	  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
	  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID
	  JOIN ARC01106 ARC (NOLOCK) ON ARC.ADV_REC_ID=E.ADJ_MEMO_ID
	  JOIN GST_ACCOUNTS_CONFIG_DET_REVENUE GAC ON ARC.GST_PERCENTAGE=GAC.GST_PERCENTAGE
	  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000002' AND E.AMOUNT<>0 AND ISNULL(ARC.CGST_AMOUNT,0)<>0 
	  AND GAC.XN_TYPE='ARC'
	  GROUP BY A.CM_DT,A.CM_NO,a.location_Code 
	  ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END)
	  ,GAC.LGST_REVENUE_AC_CODE,A.CANCELLED  

	  UNION ALL
	  SELECT GAC.IGST_REVENUE_AC_CODE  AS AC_CODE 
		  ,SUM(ARC.TAXABLE_VALUE) AS AMOUNT
		  ,'3'+(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END) AS NARRATION
		  ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN A.CM_NO ELSE '' END)
		  ,A.CM_DT
		  ,a.location_Code  AS DEPT_ID   
		  ,A.CANCELLED
	  FROM CMM01106 A (NOLOCK)  
	 JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
	  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID
	  JOIN ARC01106 ARC (NOLOCK) ON ARC.ADV_REC_ID=E.ADJ_MEMO_ID
	  JOIN GST_ACCOUNTS_CONFIG_DET_REVENUE GAC ON ARC.GST_PERCENTAGE=GAC.GST_PERCENTAGE
	  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000002' AND E.AMOUNT<>0 AND ISNULL(ARC.IGST_AMOUNT,0)<>0
	  AND GAC.XN_TYPE='ARC'
	  GROUP BY A.CM_DT,A.CM_NO,a.location_Code ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN A.CM_NO ELSE '' END),
	  GAC.IGST_REVENUE_AC_CODE,A.CANCELLED  		  		  
		,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END)
			
	  UNION ALL
	  SELECT GAC.CGST_TAX_AC_CODE  AS AC_CODE
		  ,SUM(ARC.CGST_AMOUNT) AS AMOUNT
		  ,'4'+(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END) AS NARRATION
		  ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN A.CM_NO ELSE '' END)
		  ,A.CM_DT
		  ,a.location_Code  AS DEPT_ID   
		  ,A.CANCELLED
	  FROM CMM01106 A (NOLOCK)  
	  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
	  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID
	  JOIN ARC01106 ARC (NOLOCK) ON ARC.ADV_REC_ID=E.ADJ_MEMO_ID
	  JOIN GST_ACCOUNTS_CONFIG_DET_REVENUE GAC ON ARC.GST_PERCENTAGE=GAC.GST_PERCENTAGE
	  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000002' AND E.AMOUNT<>0 AND ISNULL(ARC.CGST_AMOUNT,0)<>0
	  AND GAC.XN_TYPE='ARC'
	  GROUP BY A.CM_DT,A.CM_NO,a.location_Code 
	  , GAC.CGST_TAX_AC_CODE,A.CANCELLED  
	  ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END)
			
	  UNION ALL
	  SELECT GAC.SGST_TAX_AC_CODE  AS AC_CODE
		  ,SUM(ARC.SGST_AMOUNT) AS AMOUNT
		  ,'5'+(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END) AS NARRATION
		  ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN A.CM_NO ELSE '' END)
		  ,A.CM_DT
		  ,a.location_Code  AS DEPT_ID   
		  ,A.CANCELLED
	  FROM CMM01106 A (NOLOCK)  
	  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
	  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID
	  JOIN ARC01106 ARC (NOLOCK) ON ARC.ADV_REC_ID=E.ADJ_MEMO_ID
	  JOIN GST_ACCOUNTS_CONFIG_DET_REVENUE GAC ON ARC.GST_PERCENTAGE=GAC.GST_PERCENTAGE
	  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000002' AND E.AMOUNT<>0 AND ISNULL(ARC.SGST_AMOUNT,0)<>0  
	  AND GAC.XN_TYPE='ARC'
	  GROUP BY A.CM_DT,A.CM_NO,a.location_Code 
	  , GAC.SGST_TAX_AC_CODE,A.CANCELLED  		  		  
	  ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END)
			
	  UNION ALL
	  SELECT GAC.IGST_TAX_AC_CODE  AS AC_CODE
		  ,SUM(ARC.IGST_AMOUNT) AS AMOUNT
		  		  ,'6'+(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END) AS NARRATION
		  ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN A.CM_NO ELSE '' END)
		  ,A.CM_DT
		  ,a.location_Code  AS DEPT_ID   
		  ,A.CANCELLED
	  FROM CMM01106 A (NOLOCK)  
	  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
	  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID
	  JOIN ARC01106 ARC (NOLOCK) ON ARC.ADV_REC_ID=E.ADJ_MEMO_ID
	  JOIN GST_ACCOUNTS_CONFIG_DET_REVENUE GAC ON ARC.GST_PERCENTAGE=GAC.GST_PERCENTAGE
	  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000002' AND E.AMOUNT<>0 AND ISNULL(ARC.IGST_AMOUNT,0)<>0 
	  AND GAC.XN_TYPE='ARC'
	  GROUP BY A.CM_DT,A.CM_NO,a.location_Code 
	  , GAC.IGST_TAX_AC_CODE,A.CANCELLED  		  		  
	  ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END)	
	 				  	
	
	SELECT @CCM_NO='',@DCM_DT='',@CXNTYPE='SLS',@CAC_CODE='',@NCTR=1,@DOLDCMDT=''


	SET @CSTEP = 370
							
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

	--CREATING VOUCHER FOR CONTRA ENTRY
	IF OBJECT_ID('#CONTRAENTRY','U') IS NOT NULL
		DROP TABLE #CONTRAENTRY

	CREATE TABLE #CONTRAENTRY(SALE_AC_CODE VARCHAR(10), TAX_AC_CODE VARCHAR(10), SALE_AMOUNT NUMERIC(12,2),   
	TAX_AMOUNT NUMERIC(12,2), SALE_NARRATION VARCHAR(1000), TAX_NARRATION VARCHAR(1000),   
	XN_NO VARCHAR(50), XN_DT DATETIME, DEPT_ID VARCHAR(4))


	SET @CSTEP = 372



			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

	
	SET @CSTEP=375
	
	PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	
	--SELECT 'CHECK #V_PROCESS',* FROM  #V_PROCESS WHERE SALE_AMOUNT<>0 AND CGST_AMOUNT<>0
					
	INSERT #CONTRAENTRY(SALE_AC_CODE, TAX_AC_CODE, SALE_AMOUNT, TAX_AMOUNT, SALE_NARRATION,
						TAX_NARRATION, XN_NO, XN_DT, DEPT_ID)
	
	SELECT SALE_AC_CODE,TAX_AC_CODE,SUM(SALE_AMOUNT) AS SALE_AMOUNT,SUM(TAX_AMOUNT) AS TAX_AMOUNT,
	SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID 
	FROM 
	(
	SELECT SALE_AC_CODE,0 AS SALE_AMOUNT,TAX_AC_CODE,SUM(TAX_AMOUNT) AS TAX_AMOUNT,
	SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID FROM 
	#V_PROCESS WHERE TAX_AMOUNT<>0
	GROUP BY SALE_AC_CODE,TAX_AC_CODE,SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID 
	UNION ALL
	SELECT (CASE WHEN SALE_AC_CODE NOT IN ('','0000000000') THEN SALE_AC_CODE ELSE LGST_REVENUE_AC_CODE END),SUM(SALE_AMOUNT) AS SALE_AMOUNT,'' AS TAX_AC_CODE,0 AS TAX_AMOUNT,
	SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID FROM 
	#V_PROCESS WHERE SALE_AMOUNT<>0 AND IGST_AMOUNT=0 AND CGST_AMOUNT=0
	GROUP BY (CASE WHEN SALE_AC_CODE NOT IN ('','0000000000') THEN SALE_AC_CODE ELSE LGST_REVENUE_AC_CODE END)
	,SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID 
	UNION ALL
	SELECT IGST_REVENUE_AC_CODE,SUM(SALE_AMOUNT) AS SALE_AMOUNT,'' AS TAX_AC_CODE,0 AS TAX_AMOUNT,
	SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID FROM 
	#V_PROCESS WHERE SALE_AMOUNT<>0 AND IGST_AMOUNT<>0
	GROUP BY IGST_REVENUE_AC_CODE,SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID 
	UNION ALL
	SELECT '' AS SALE_AC_CODE,0 AS SALE_AMOUNT,IGST_TAX_AC_CODE AS TAX_AC_CODE,SUM(IGST_AMOUNT) AS TAX_AMOUNT,
	SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID FROM 
	#V_PROCESS WHERE IGST_AMOUNT<>0
	GROUP BY IGST_TAX_AC_CODE,SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID
	UNION ALL
	SELECT LGST_REVENUE_AC_CODE,SUM(SALE_AMOUNT) AS SALE_AMOUNT,'' AS TAX_AC_CODE,0 AS TAX_AMOUNT,
	SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID FROM  
	#V_PROCESS WHERE SALE_AMOUNT<>0 AND CGST_AMOUNT<>0
	GROUP BY LGST_REVENUE_AC_CODE,SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID 
	UNION ALL
	SELECT '' AS SALE_AC_CODE,0 AS SALE_AMOUNT,CGST_TAX_AC_CODE AS TAX_AC_CODE,SUM(CGST_AMOUNT) AS TAX_AMOUNT,
	SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID FROM  
	#V_PROCESS WHERE CGST_AMOUNT<>0
	GROUP BY CGST_TAX_AC_CODE,SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID 		
	UNION ALL
	SELECT '' AS SALE_AC_CODE,0 AS SALE_AMOUNT,SGST_TAX_AC_CODE AS TAX_AC_CODE,SUM(SGST_AMOUNT) AS TAX_AMOUNT,
	SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID FROM  
	#V_PROCESS WHERE SGST_AMOUNT<>0
	GROUP BY SGST_TAX_AC_CODE,SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID 			
	UNION ALL
	SELECT '' AS SALE_AC_CODE,0 AS SALE_AMOUNT,GST_CESS_AC_CODE AS TAX_AC_CODE,SUM(GST_CESS_AMOUNT) AS TAX_AMOUNT,
	SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID FROM  
	#V_PROCESS WHERE ISNULL(GST_CESS_AMOUNT,0)<>0
	GROUP BY GST_CESS_AC_CODE,SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID 			
	) A
	GROUP BY SALE_AC_CODE,TAX_AC_CODE,SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID 
		SET @CSTEP = 380
		PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
			
		SET @CSTEP = 520
		PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
		
		INSERT @VDC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE, 
					  VS_AC_CODE,REF_BILL_NO,REF_BILL_DATE,AC_NAME,VCH_ENTRY_ID )
		SELECT a.XN_NO as vm_id
			, 'LATER-V'+CONVERT(VARCHAR,ROW_NUMBER() OVER(PARTITION BY a.XN_NO ORDER BY A.AC_CODE)) AS VD_ID
			, A.AC_CODE
			, A.NARRATION
			,SUM(CASE WHEN (AMOUNT)>0 THEN (AMOUNT) ELSE 0 END) AS DEBIT_AMOUNT
			,SUM(CASE WHEN (AMOUNT)<0 THEN ABS((AMOUNT)) ELSE 0 END) AS CREDIT_AMOUNT
			,(CASE WHEN (AMOUNT) > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE
			,'0000000000'
			,A.REF_BILL_NO,A.REF_BILL_DATE
			,B.AC_NAME,(CASE WHEN ISNULL(C.BILL_BY_BILL,0)=1 THEN  A.ENTRY_ID ELSE '' END) AS ENTRY_ID
		FROM @VCHC A
		JOIN LM01106 (NOLOCK) B ON A.AC_CODE=B.AC_CODE
		LEFT OUTER JOIN LMP01106 C (NOLOCK) ON A.AC_CODE=C.AC_CODE

		
		GROUP BY a.XN_NO,A.AC_CODE, A.NARRATION,A.REF_BILL_NO,B.AC_NAME,A.REF_BILL_DATE,
		(CASE WHEN ISNULL(C.BILL_BY_BILL,0)=1 THEN  A.ENTRY_ID ELSE '' END),
		(CASE WHEN (AMOUNT) > 0 THEN 'DR' ELSE 'CR' END)
		ORDER BY X_TYPE
		
		SET @NROWSAFFECTED=@@ROWCOUNT	
		
				
		SET @CSTEP = 530	
		PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
		INSERT @TBILL_BY_BILL_REF
			(VD_ID,REF_NO,AMOUNT,LAST_UPDATE,X_TYPE,CR_DAYS,VM_ID)
		SELECT C.VD_ID
			  ,(CASE WHEN ISNULL(A.REF_BILL_NO,'')='' THEN (CASE WHEN A.XN_NO='' THEN DEPT_ID+CONVERT(VARCHAR,A.XN_DT,112) 
			  ELSE 	DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,A.XN_NO,A.XN_DT,(CASE WHEN C.DEBIT_AMOUNT<>0 THEN 'DR' ELSE 'CR' END),a.xn_no) END) 
					ELSE DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,A.REF_BILL_NO,A.REF_BILL_DATE,
					(CASE WHEN C.DEBIT_AMOUNT<>0 THEN 'DR' ELSE 'CR' END),a.xn_no) END) AS REF_NO
			  ,ABS(SUM(A.AMOUNT)),GETDATE()
			  ,(CASE WHEN C.DEBIT_AMOUNT<>0 THEN 'DR' ELSE 'CR' END) AS X_TYPE
			  ,0
			  ,a.xn_no
		FROM @VCHC A 
		JOIN LMP01106 B (NOLOCK) ON A.AC_CODE=B.AC_CODE
		JOIN @VDC C ON C.VCH_ENTRY_ID=A.ENTRY_ID

		
		WHERE B.BILL_BY_BILL=1
		GROUP BY a.xn_no,(CASE WHEN ISNULL(A.REF_BILL_NO,'')='' THEN (CASE WHEN A.XN_NO='' THEN DEPT_ID+CONVERT(VARCHAR,A.XN_DT,112) 
			  ELSE 	DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,A.XN_NO,A.XN_DT,(CASE WHEN C.DEBIT_AMOUNT<>0 THEN 'DR' ELSE 'CR' END),a.XN_NO) END) 
					ELSE DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,A.REF_BILL_NO,A.REF_BILL_DATE,
					(CASE WHEN C.DEBIT_AMOUNT<>0 THEN 'DR' ELSE 'CR' END),a.xn_no) END),C.VD_ID,C.DEBIT_AMOUNT

		SELECT @CXNTYPE='CSLS' /*CSLS FOR CONTRA ENTRY*/
	
		--SELECT 'CHECK CONTRA',* FROM 	
		--(	SELECT A.DEPT_ID,A.XN_DT,SALE_AC_CODE AS AC_CODE, SALE_AMOUNT AS AMOUNT, SALE_NARRATION AS NARRATION
		--	FROM #CONTRAENTRY A
		--	WHERE SALE_AMOUNT<>0
		--	UNION ALL
		--	SELECT A.DEPT_ID,A.XN_DT,TAX_AC_CODE AS AC_CODE, TAX_AMOUNT AS AMOUNT, TAX_NARRATION AS NARRATION
		--	FROM #CONTRAENTRY A 
		--) A
		--ORDER BY XN_DT
		
		SET @CSTEP = 540
		PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
		INSERT @VDC (VM_ID, VD_ID,  AC_CODE, NARRATION, CREDIT_AMOUNT, DEBIT_AMOUNT
					, X_TYPE, VS_AC_CODE, VAT_ENTRY,AC_NAME)
		SELECT a.xn_no
			, 'LATER-W'+CONVERT(VARCHAR,ROW_NUMBER() OVER(PARTITION BY a.xn_no ORDER BY A.AC_CODE)) AS VD_ID
			, A.AC_CODE
			, A.NARRATION
			,SUM(CASE WHEN (AMOUNT)<0 THEN ABS((AMOUNT)) ELSE 0 END) AS CREDIT_AMOUNT
			,SUM(CASE WHEN (AMOUNT)>0 THEN (AMOUNT) ELSE 0 END) AS DEBIT_AMOUNT
			,(CASE WHEN (AMOUNT) > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE
			,'0000000000'
			,1
			,B.AC_NAME
		FROM 	
		(
			SELECT a.xn_no,A.DEPT_ID,A.XN_DT,SALE_AC_CODE AS AC_CODE, SALE_AMOUNT AS AMOUNT, SALE_NARRATION AS NARRATION
			FROM #CONTRAENTRY A
			WHERE SALE_AMOUNT<>0
			UNION ALL
			SELECT a.XN_NO,A.DEPT_ID,A.XN_DT,TAX_AC_CODE AS AC_CODE, TAX_AMOUNT AS AMOUNT, TAX_NARRATION AS NARRATION
			FROM #CONTRAENTRY A 
		)A	
		JOIN LM01106 B (NOLOCK) ON A.AC_CODE=B.AC_CODE
		GROUP BY  a.XN_NO,  A.AC_CODE, A.NARRATION,(CASE WHEN (AMOUNT) > 0 THEN 'DR' ELSE 'CR' END),B.AC_NAME
		ORDER BY X_TYPE
		
		
		SET @CSTEP = 560
		PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
		
		INSERT @VMC	( VM_ID, VOUCHER_NO, VOUCHER_DT, VOUCHER_CODE, DEPT_ID,   
					  BILL_TYPE, BILL_NO, BILL_DT, CRTOTAL, DRTOTAL,CASH_VOUCHER,   
					  SALE_VOUCHER, QUANTITY, ANGADIA_CODE, LR_NO, LR_DT, CANCELLED, PARTY_NAME,VM_ORDER)
		SELECT  a.xn_no,a.xn_no AS VOUCHER_NO,A.XN_DT,@CVOUCHERCODE,A.DEPT_ID,'SLS',A.XN_NO,A.XN_DT
			  ,SUM(CASE WHEN (AMOUNT)<0 THEN ABS((AMOUNT)) ELSE 0 END) AS crtotal
			,SUM(CASE WHEN (AMOUNT)>0 THEN (AMOUNT) ELSE 0 END) AS drtotal,0,0,0,'0000000', '', '', 0
			  , 'RETAIL SALE FOR ' + CONVERT(VARCHAR,A.XN_DT,105)
			  ,2
		FROM 	
		(
			SELECT a.xn_no,A.DEPT_ID,A.XN_DT,SALE_AC_CODE AS AC_CODE, SALE_AMOUNT AS AMOUNT, SALE_NARRATION AS NARRATION
			FROM #CONTRAENTRY A
			WHERE SALE_AMOUNT<>0
			UNION ALL
			SELECT a.XN_NO,A.DEPT_ID,A.XN_DT,TAX_AC_CODE AS AC_CODE, TAX_AMOUNT AS AMOUNT, TAX_NARRATION AS NARRATION
			FROM #CONTRAENTRY A 
		)A	 
		GROUP BY A.XN_NO,A.XN_DT,A.DEPT_ID
		



		SET @CSTEP = 565
		PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
		
	SET @CSTEP = 575


INSERT @VMC	( VM_ID, VOUCHER_NO, VOUCHER_DT, VOUCHER_CODE, DEPT_ID,   
					  BILL_TYPE, BILL_NO, BILL_DT, CRTOTAL, DRTOTAL,CASH_VOUCHER,   
					  SALE_VOUCHER, QUANTITY, ANGADIA_CODE, LR_NO, LR_DT, CANCELLED, PARTY_NAME,VM_ORDER)
		SELECT  a.vm_id,a.vm_id AS VOUCHER_NO,@DCM_DT as voucher_dt ,@CVOUCHERCODE,@CDEPTID ,'SLS',A.vm_id,
		@DCM_DT
			  ,SUM(credit_amount) AS crtotal
			,SUM(DEBIT_AMOUNT) AS drtotal,0,0,0,'0000000', '', '', 0
			  , 'RETAIL SALE FOR ' + CONVERT(VARCHAR,@DCM_DT,105)
			  ,2
		from @VDC a left join @VMC b on a.VM_ID=b.vm_id
		where b.VM_ID is null		
		group by a.vm_id
			      
    PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)			    		
		
		UPDATE A SET DRTOTAL=B.DRTOTAL,CRTOTAL=B.CRTOTAL FROM @VMC A
		JOIN (SELECT VM_ID,SUM(DEBIT_AMOUNT) AS DRTOTAL,SUM(CREDIT_AMOUNT) AS CRTOTAL FROM @VDC GROUP BY VM_ID) B ON A.VM_ID=B.VM_ID
		
		--SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM @VDC
		--WHERE VM_ID = @CVMID
					
   

    SET @CSTEP = 580
		
	--SELECT AC_NAME,SUM(CREDIT_AMOUNT-DEBIT_AMOUNT) AS NET_AMOUNT, SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT,SUM(DEBIT_AMOUNT) AS DEBIT_AMOUNT
	-- FROM @VDC A JOIN @VMC B ON A.VM_ID=B.VM_ID 
	-- GROUP BY AC_NAME
	
	--SELECT 'CHECK @VDC', A.* FROM @VDC A JOIN @VMC B ON A.VM_ID=B.VM_ID 
	-- WHERE B.BILL_NO='07HO-11123'
	 	 
	--SELECT 'DIFF CONTRA ENTRY',A.*,B.CM_NO,B.NET_AMOUNT,B.ROUND_OFF,B.ATD_CHARGES,B.GST_ROUND_OFF FROM 
	--CMM01106  B
	--LEFT OUTER JOIN (SELECT B.BILL_NO,BILL_DT,SUM(CREDIT_AMOUNT-DEBIT_AMOUNT) AS POSTED_AMOUNT
	-- FROM @VDC A JOIN @VMC B ON A.VM_ID=B.VM_ID 
	-- WHERE VAT_ENTRY=1
	-- GROUP BY B.BILL_NO,B.BILL_DT ) A ON A.BILL_NO=B.CM_NO AND A.BILL_DT=B.CM_DT
	-- WHERE B.CM_DT=@DTTO AND LEFT(CM_ID,2)=@CDEPTID AND CANCELLED=0
	-- AND ABS(ISNULL(A.POSTED_AMOUNT,0)-(B.NET_AMOUNT-B.ROUND_OFF-B.ATD_CHARGES-ISNULL(B.GST_ROUND_OFF,0)))>.02
	 

	 
	IF OBJECT_ID('TEMPDB..#DIFFVMS','U') IS NOT NULL
		DROP TABLE #DIFFVMS
		
	SELECT A.VM_ID INTO #DIFFVMS FROM 
	(SELECT A.VM_ID,SUM(ISNULL(CREDIT_AMOUNT,0)) AS CREDIT_AMOUNT,SUM(isnull(DEBIT_AMOUNT,0)) AS DEBIT_AMOUNT
	 FROM @VDC A LEFT JOIN @VMC B ON A.VM_ID=B.VM_ID 
	 GROUP BY A.VM_ID HAVING abs(SUM(ISNULL(DEBIT_AMOUNT,0)-ISNULL(CREDIT_AMOUNT,0)))>0.1) A
	 
	 --SELECT A.VM_ID,SUM(ISNULL(CREDIT_AMOUNT,0)) AS CREDIT_AMOUNT,SUM(isnull(DEBIT_AMOUNT,0)) AS DEBIT_AMOUNT
	 --FROM @VDC A JOIN @VMC B ON A.VM_ID=B.VM_ID 
	 --group by a.vm_id
	 --select 'check vmc',* from @vmc
	 --select 'check vdc',* from @vdc
	 
	 --select ac_name,sum(debit_amount),sum(credit_amount) from @VDC a
	 --join @vmc b on a.VM_ID=b.vm_id
	 --group by ac_name
	 
	 --SELECT A.VM_ID,SUM(ISNULL(CREDIT_AMOUNT,0)) AS CREDIT_AMOUNT,SUM(isnull(DEBIT_AMOUNT,0)) AS DEBIT_AMOUNT
	 --FROM @VDC A left JOIN @VMC B ON A.VM_ID=B.VM_ID 
	 --where b.vm_id is null
	 --group by a.vm_id
	 
	 
	 --SELECT 'CHECK 01011180000001  -08585',BILL_NO, A.* FROM @VDC A
	 --JOIN @VMC B ON A.VM_ID=B.VM_ID WHERE BILL_NO='01  -08585'
	 
	PRINT 'START POSTING SLS-3:'+CONVERT(VARCHAR,GETDATE(),113)
 	DELETE A FROM @VMC A LEFT OUTER JOIN  #DIFFVMS B ON A.VM_ID=B.VM_ID
	WHERE B.VM_ID IS NULL
	    
    --SELECT 'CHECK VOUCHER',C.AC_NAME,A.* FROM @VDC A JOIN @VMC B ON A.VM_ID=B.VM_ID 
    --JOIN LM01106 C ON C.AC_CODE=A.AC_CODE
    --WHERE VOUCHER_DT='2017-07-25'
        
	PRINT 'START POSTING SLS-2:'+CONVERT(VARCHAR,GETDATE(),113)
    
    PRINT 'START POSTING SLS-4:'+CONVERT(VARCHAR,GETDATE(),113)
    SET @CSTEP = 595

	
    GOTO END_STEPS
     
END TRY

BEGIN CATCH
	SET @CERRORMSG='POSTACT_GST_SLS : STEP:- '+@CSTEP+' '+ERROR_MESSAGE()
	GOTO END_STEPS
END CATCH

END_STEPS:
	
	PRINT 'START POSTING SLS-9:'+CONVERT(VARCHAR,GETDATE(),113)
	
	
	PRINT 'START POSTING SLS-10:'+CONVERT(VARCHAR,GETDATE(),113)
	IF ISNULL(@CERRORMSG,'')<>''		        
		SELECT @CERRORMSG AS ERROR_MSG
	ELSE
	BEGIN

		UPDATE A SET DRTOTAL=B.DRTOTAL,CRTOTAL=B.CRTOTAL FROM @VMC A
		JOIN (SELECT VM_ID,SUM(ISNULL(DEBIT_AMOUNT,0)) AS DRTOTAL,SUM(ISNULL(CREDIT_AMOUNT,0)) AS CRTOTAL FROM 
			  @VDC GROUP BY VM_ID) B ON A.VM_ID=B.VM_ID

		PRINT 'START POSTING SLS-11:'+CONVERT(VARCHAR,GETDATE(),113)
		SELECT CONVERT(BIT,1) AS CHK,A.* FROM @VMC A
		ORDER BY BILL_DT,BILL_ID,VM_ORDER ASC

		SET @CSTEP = 590

		UPDATE @VDC SET DEBIT_AMOUNT=(CASE WHEN DEBIT_AMOUNT<>0 THEN DEBIT_AMOUNT ELSE NULL END),
		CREDIT_AMOUNT=(CASE WHEN CREDIT_AMOUNT<>0 THEN CREDIT_AMOUNT ELSE NULL END)
		
			  
		PRINT 'START POSTING SLS-12:'+CONVERT(VARCHAR,GETDATE(),113)
		SELECT A.* FROM @VDC A left JOIN @VMC B ON A.VM_ID=B.VM_ID
		--LEFT OUTER JOIN @ERRORS C ON B.VOUCHER_DT=C.XN_DT
		WHERE (DEBIT_AMOUNT<>0 OR CREDIT_AMOUNT<>0)
		ORDER BY A.VM_ID
		-- C.ERR_DESC IS NULL AND
	    
		SELECT * FROM @ERRORS WHERE 1=2
	    
		SELECT A.* FROM @VLINK A 
		JOIN @VMC B ON A.VM_ID=B.VM_ID
		--LEFT OUTER JOIN @ERRORS C ON B.VOUCHER_DT=C.XN_DT
		--WHERE C.ERR_DESC IS NULL
		ORDER BY VM_ID
	    
		SELECT B.AC_NAME,A.*,A.REF_NO AS BILL_NO FROM @TBILL_BY_BILL_REF A
		JOIN @VDC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID
		JOIN @VMC C ON B.VM_ID=C.VM_ID
		--LEFT OUTER JOIN @ERRORS D ON C.VOUCHER_DT=D.XN_DT
		--WHERE D.ERR_DESC IS NULL
	END
	    	

END_PROC: 
	
	IF ISNULL(@CERRORMSG,'')<>''
		SELECT @CERRORMSG AS ERRMSG

END		