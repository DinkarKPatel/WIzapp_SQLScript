create PROCEDURE SP_PCO         
(                
 @NQUERYID NUMERIC(3,0),                
 @CDEPT_ID VARCHAR(4) = '',                
 @NMODE NUMERIC(1,0) = 1,                
 @CWHERE VARCHAR(100) ='',
 @CWHERE1 VARCHAR(100) ='' 
 ) 
--WITH ENCRYPTION
               
AS                
BEGIN                
  --(dinkar) Replace  left(memoid,2) to Location_code 
 DECLARE @TOPBALDT TABLE (OPENING_BALANCE NUMERIC(18,2)) 
   
 DECLARE @TOPBAL TABLE (XN_DT DATETIME,OPENING_BALANCE NUMERIC(18,2),DEPT_ID VARCHAR(20))   
   
 DECLARE @DMEMODT DATETIME  ,@DMEMODTPARA DATETIME  ,@CDEPTIDCUR CHAR(2) ,@CFILTERCONDITION VARCHAR(MAX),@DTSSQL NVARCHAR(MAX)
         
 IF @NQUERYID = 1                
  GOTO LBLGETLOCATION             
      
 ELSE IF @NQUERYID=2        
  GOTO LBLLOCATIONADDRESS        
      
 ELSE IF @NQUERYID=3        
  GOTO LBLLOOKUP        
      
 ELSE IF @NQUERYID=4        
  GOTO TBLPCOUT        
       
 ELSE IF @NQUERYID=5        
  GOTO TBLPCILOOKUP        
      
 ELSE IF @NQUERYID=6        
  GOTO TBLPCIN        
      
 ELSE IF @NQUERYID=13       
  GOTO LBLPCOUTDTL       
      
 ELSE IF @NQUERYID=7        
  GOTO OPENINGBALANCE        
      
 ELSE IF @NQUERYID=8        
  GOTO RECEIVEDAMOUNT        
      
 ELSE IF @NQUERYID=9        
  GOTO TBLXNMSTLOOKUP1        
      
 ELSE IF @NQUERYID=10        
  GOTO TBLXNDETLOOKUP        
      
 ELSE IF @NQUERYID=11        
  GOTO TBLXNMSTLOOKUP          
      
 ELSE IF @NQUERYID=12        
  GOTO TBLLVM        
        
 ELSE IF @NQUERYID=14        
  GOTO TBLPCOUTRPT        
       
 ELSE IF @NQUERYID=15        
  GOTO TBLPCINRPT       
 ELSE                
  GOTO LAST                
           
         
 LBLLOCATIONADDRESS:                
      
  SELECT DEPT_ID,DEPT_ID+' - '+DEPT_NAME AS DEPT_DTL,MAJOR_DEPT_ID,DEPT_NAME,      
  DEPT_NAME +(CASE ADDRESS1 WHEN '' THEN '' ELSE ', '+ ADDRESS1 END) +         
  (CASE ADDRESS2 WHEN '' THEN '' ELSE ', '+ADDRESS2 END) AS [LOCATION]       
  FROM LOCATION       
  WHERE DEPT_ID=@CWHERE        
      
  GOTO LAST                
      
 LBLGETLOCATION:        
  SELECT DEPT_ID,DEPT_ID+' - '+DEPT_NAME AS [DEPT_DTL],MAJOR_DEPT_ID,DEPT_NAME       
  FROM LOCATION       
  WHERE DEPT_ID=MAJOR_DEPT_ID 
  AND INACTIVE = 0    
  AND DEPT_ID<> @CWHERE        
  GOTO LAST        
      
 LBLLOOKUP:      
  SELECT T1.MEMO_ID,T1.MEMO_NO,T2.DEPT_NAME AS [SOURCE_LOCATION],T3.DEPT_NAME AS [TARGET_LOCATION] ,T1.MEMO_DT,T1.AMOUNT,T1.REMARKS,T1.FIN_YEAR,T4.USERNAME      
  FROM PCO_MST T1      
  JOIN LOCATION T2 ON t1.location_Code =T2.DEPT_ID      
  JOIN LOCATION T3 ON t1.target_location_Code =T3.DEPT_ID      
  JOIN USERS T4 ON T4.USER_CODE=T1.USER_CODE  
  WHERE T1.FIN_YEAR=  @CWHERE   AND ( @CDEPT_ID= '' OR t1.location_Code=@CDEPT_ID )
  ORDER BY T1.MEMO_DT,T1.MEMO_ID,T2.DEPT_NAME       
  GOTO LAST      
      
 TBLPCOUT:        
  SELECT A.*,B.AC_NAME AS BANK_AC_NAME          ,T4.username
  FROM PCO_MST  A 
  JOIN USERS T4 ON T4.USER_CODE=A.USER_CODE       
  LEFT OUTER JOIN LM01106 B ON A.BANK_AC_CODE= B.AC_CODE 
  WHERE A.MEMO_ID =@CWHERE         
  GOTO LAST         
       
 TBLPCOUTRPT:      
  SELECT T1.MEMO_ID,T1.MEMO_NO,T2.DEPT_NAME AS [SOURCE_LOCATION],T3.DEPT_NAME AS [TARGET_LOCATION] ,T1.MEMO_DT,T1.AMOUNT,T1.REMARKS,T1.FIN_YEAR,T4.USERNAME      
  FROM PCO_MST T1      
  JOIN LOCATION T2 ON t1.location_Code =T2.DEPT_ID      
  JOIN LOCATION T3 ON t1.target_location_Code=T3.DEPT_ID      
  JOIN USERS T4 ON T4.USER_CODE=T1.USER_CODE       
  WHERE 1=2
  ORDER BY T2.DEPT_NAME DESC      
  GOTO LAST      
       
 TBLPCILOOKUP:        
  SELECT T1.MEMO_ID,T1.MEMO_NO,T2.DEPT_NAME AS [SOURCE LOCATION],T3.DEPT_NAME AS [TARGET LOCATION] ,T1.MEMO_DT,T1.AMOUNT,      
  T1.REMARKS,T1.FIN_YEAR,T4.USERNAME      
  FROM PCI_MST T1      
  JOIN LOCATION T2 ON t1.location_Code =T2.DEPT_ID      
  JOIN LOCATION T3 ON t1.source_location_code =T3.DEPT_ID      
  JOIN USERS T4 ON T4.USER_CODE=T1.USER_CODE      
  WHERE T1.RECEIPT_DT<>'' 
   AND ( @CDEPT_ID= '' OR t1.location_code=@CDEPT_ID )   
  AND (@CWHERE1='' OR T1.USER_CODE=@CWHERE1)
  ORDER BY MEMO_DT DESC        
  GOTO LAST         
      
 TBLPCIN:        
  SELECT P.*,T4.username
  FROM PCI_MST P
  JOIN USERS T4 ON T4.USER_CODE=P.USER_CODE      
  WHERE MEMO_ID=@CWHERE          
  GOTO LAST         
      
 LBLPCOUTDTL:        
        
  SELECT MEMO_ID,MEMO_NO,LEFT(MEMO_NO,4) AS MEMO_PREFIX, (RIGHT(MEMO_NO,6)) AS SERIES,      
  MEMO_DT,AMOUNT,REMARKS      
  FROM PCO_MST       
         
  GROUP BY MEMO_ID, MEMO_NO,MEMO_DT,AMOUNT, REMARKS      
  GOTO LAST      
      
 TBLPCINRPT:      
  SELECT T1.MEMO_ID,T1.MEMO_NO,T2.DEPT_NAME AS [SOURCE LOCATION],T3.DEPT_NAME AS [TARGET LOCATION] ,T1.MEMO_DT,T1.AMOUNT,      
  T1.REMARKS,T1.FIN_YEAR,T4.USERNAME      
  FROM PCI_MST T1      
  JOIN LOCATION T2 ON t1.location_Code =T2.DEPT_ID      
  JOIN LOCATION T3 ON t1.source_location_code =T3.DEPT_ID      
  JOIN USERS T4 ON T4.USER_CODE=T1.USER_CODE   
  WHERE 1=2
  ORDER BY MEMO_DT DESC      
  GOTO LAST      
        
 OPENINGBALANCE:        
    
  SET @DMEMODT=CONVERT(DATETIME,@CWHERE,110)-1  
    
  INSERT @TOPBALDT  
  EXEC SP_CASHXN @CDEPT_ID,'',@DMEMODT,0,0,1  
  
  SELECT OPENING_BALANCE FROM @TOPBALDT  
  GOTO LAST        
      
 RECEIVEDAMOUNT:    
       
  DECLARE @NNET_AMOUNT NUMERIC(18,2)    
  DECLARE @NWSLNET_AMOUNT NUMERIC(18,2)    
  DECLARE @NARCNET_AMOUNT NUMERIC(18,2)    
      
  SELECT @NNET_AMOUNT=SUM(C.AMOUNT)   
  FROM CMM01106 A (NOLOCK)  
  JOIN PAYMODE_XN_DET C (NOLOCK) ON C.MEMO_ID=A.CM_ID AND C.XN_TYPE='SLS'
  JOIN PAYMODE_MST D1 (NOLOCK) ON D1.PAYMODE_CODE=C.PAYMODE_CODE
  JOIN PAYMODE_GRP_MST D (NOLOCK) ON D.PAYMODE_GRP_CODE=D1.PAYMODE_GRP_CODE
  JOIN CONFIG ON 1=1 AND CONFIG_OPTION= 'CONSIDER_ALL_CASH_RECEIPTS'  AND VALUE=1 
  WHERE CANCELLED=0 AND CM_DT=@CWHERE AND D.PAYMODE_GRP_CODE ='0000001'  
  
  SELECT @NWSLNET_AMOUNT=SUM(C.AMOUNT)   
  FROM INM01106 A (NOLOCK)  
  JOIN PAYMODE_XN_DET C (NOLOCK) ON C.MEMO_ID=A.INV_ID AND C.XN_TYPE='WSL'
  JOIN PAYMODE_MST D1 (NOLOCK) ON D1.PAYMODE_CODE=C.PAYMODE_CODE
  JOIN PAYMODE_GRP_MST D (NOLOCK) ON D.PAYMODE_GRP_CODE=D1.PAYMODE_GRP_CODE
  JOIN CONFIG ON 1=1 AND CONFIG_OPTION= 'CONSIDER_ALL_CASH_RECEIPTS'  AND VALUE=1 
  WHERE CANCELLED=0 AND D.PAYMODE_GRP_CODE ='0000001'  AND INV_DT= @CWHERE  

  SELECT @NARCNET_AMOUNT=SUM(CASE WHEN ARC_TYPE=1 THEN C.AMOUNT ELSE -1 * C.AMOUNT END)   
  FROM ARC01106 A (NOLOCK)  
  JOIN PAYMODE_XN_DET C (NOLOCK) ON C.MEMO_ID=A.ADV_REC_ID AND C.XN_TYPE='ARC'
  JOIN PAYMODE_MST D1 (NOLOCK) ON D1.PAYMODE_CODE=C.PAYMODE_CODE
  JOIN PAYMODE_GRP_MST D (NOLOCK) ON D.PAYMODE_GRP_CODE=D1.PAYMODE_GRP_CODE
  JOIN CONFIG ON 1=1 AND CONFIG_OPTION= 'CONSIDER_ALL_CASH_RECEIPTS'  AND VALUE=1
  WHERE CANCELLED=0 AND D.PAYMODE_GRP_CODE ='0000001'  AND ADV_REC_DT= @CWHERE  
   
  SELECT ISNULL(SUM(AMOUNT),0)+ISNULL(@NNET_AMOUNT,0) + ISNULL(@NWSLNET_AMOUNT,0)+ ISNULL(@NARCNET_AMOUNT,0)  AS [RECEIVE_AMOUNT]   
  FROM PCI_MST(NOLOCK) A    
  WHERE A.MEMO_DT=@CWHERE;     
        
  GOTO LAST       
      
 TBLXNMSTLOOKUP1:        

    --DECLARE @CHOID CHAR(2)
    --SELECT @CHOID =VALUE FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'
    
  --IF CURSOR_STATUS('GLOBAL','PTCOPNCUR') IN (0,1)  
  --BEGIN  
	 --CLOSE PTCOPNCUR  
	 --DEALLOCATE PTCOPNCUR  
  --END  
    
  --DECLARE PTCOPNCUR CURSOR 
  --FOR 
  SELECT TOP 1 @DMEMODT=PEM_MEMO_DT ,@CDEPTIDCUR=location_Code 
  FROM PEM01106    
  WHERE PEM_MEMO_ID=LTRIM(RTRIM(@CWHERE))  
  --AND LEFT(PEM_MEMO_ID,2)=CASE WHEN @CDEPT_ID=@CHOID THEN LEFT(PEM_MEMO_ID,2) ELSE 
    
  --OPEN PTCOPNCUR  
  --FETCH NEXT FROM PTCOPNCUR INTO @DMEMODT ,@CDEPTIDCUR 
  --WHILE @@FETCH_STATUS=0  
  --BEGIN  
   SET @DMEMODTPARA=@DMEMODT-1   
   INSERT @TOPBALDT  
   EXEC SP_CASHXN @CDEPTIDCUR,'',@DMEMODTPARA,0,0,1  
     
   INSERT @TOPBAL  
   SELECT @DMEMODT,OPENING_BALANCE,@CDEPTIDCUR FROM @TOPBALDT  
     
   DELETE FROM @TOPBALDT  
      
  -- FETCH NEXT FROM PTCOPNCUR INTO @DMEMODT  ,@CDEPTIDCUR
  --END  
  
  --CLOSE PTCOPNCUR  
  --DEALLOCATE PTCOPNCUR  
  declare @NCASH_RECEIPTS NUMERIC(18,2),@CCONSIDERALLCASHXN VARCHAR(1)
  	SELECT TOP 1 @CCONSIDERALLCASHXN=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='CONSIDER_ALL_CASH_RECEIPTS'
	SET @CCONSIDERALLCASHXN=ISNULL(@CCONSIDERALLCASHXN,0)
	SET @NCASH_RECEIPTS=0
	
	IF @CCONSIDERALLCASHXN=1
	BEGIN
	--OTHER_SOURCE
	--GET ALL THE CASH IN FROM OTHER TRANSACTIONS...
		 --NET CASH FROM SALES
		SELECT @NCASH_RECEIPTS=SUM(CR.IN_AMOUNT)
		FROM
		(
			 SELECT SUM(D.CASH_AMOUNT) AS IN_AMOUNT
			 FROM CMM01106 A  
			 JOIN VW_BILL_PAYMODE D ON A.CM_ID = D.MEMO_ID AND D.XN_TYPE = 'SLS'  
			 WHERE A.CANCELLED = 0 AND A.CM_DT = @DMEMODT
			 AND  a.location_Code  = @CDEPT_ID 
			 AND   ISNULL(D.CASH_AMOUNT,0) <> 0  
			 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
			 UNION ALL   
			 --NET CASH FROM RECEIPTS
			 SELECT SUM(CASE WHEN ARC_TYPE=1 THEN D.CASH_AMOUNT ELSE -D.CASH_AMOUNT END ) AS IN_AMOUNT 
			 FROM ARC01106 A  
			 JOIN VW_BILL_PAYMODE D ON A.ADV_REC_ID = D.MEMO_ID AND D.XN_TYPE = 'ARC'  
			 WHERE A.CANCELLED = 0  AND D.CASH_AMOUNT <> 0  
			 AND   a.location_Code =@CDEPT_ID
			 AND   A.ADV_REC_DT = @DMEMODT
			 UNION ALL  
			 --NET CASH FROM WHOLE SALE TRANSACTION
			 SELECT SUM(D.CASH_AMOUNT) AS IN_AMOUNT
			 FROM INM01106 A  
			 JOIN VW_BILL_PAYMODE D ON A.INV_ID = D.MEMO_ID AND D.XN_TYPE = 'WSL'  
			 WHERE A.CANCELLED = 0 AND 
			 a.location_Code  = @CDEPT_ID AND D.CASH_AMOUNT <> 0  
			 AND INV_DT = @DMEMODT
			 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
			 UNION ALL   
			 --NET CASH OUT FROM WHOLE SALE RETURN TRANSACTION
			 SELECT SUM(-D.CASH_AMOUNT) AS IN_AMOUNT  
			 FROM CNM01106 A  
			 JOIN VW_BILL_PAYMODE D ON A.CN_ID = D.MEMO_ID AND D.XN_TYPE = 'WSR'  
			 WHERE a.location_Code  = @CDEPT_ID AND D.CASH_AMOUNT <> 0  
			 AND CANCELLED = 0  
			 AND CN_DT = @DMEMODT
			 AND ISNULL(A.MEMO_TYPE,0) IN(0,1)
		 )CR
	END

    
  SELECT A.*,C.OPENING_BALANCE,      
  ISNULL(X.[RECEIVE_AMOUNT],0)+isnull(@NCASH_RECEIPTS,0) AS [RECEIVE_AMOUNT],
   LOC.DEPT_ID+'-'+LOC.DEPT_NAME AS [DEPT_NAME],U.username
  FROM  PEM01106   A      
  LEFT OUTER JOIN      
  (      
   SELECT MEMO_DT,ISNULL(SUM(AMOUNT),0) AS [RECEIVE_AMOUNT]       
   FROM PCI_MST WHERE RECEIPT_DT<>''   
   and source_location_code =@CDEPT_ID
   GROUP BY MEMO_DT      
  )X ON CONVERT(DATETIME, X.MEMO_DT,111)=CONVERT(DATETIME, A.PEM_MEMO_DT,111)    
    
  left JOIN @TOPBAL C ON C.XN_DT=A.PEM_MEMO_DT AND C.DEPT_ID= a.location_Code 
  left JOIN LOCATION LOC ON LOC.DEPT_ID=a.location_Code 
  left JOIN USERS U ON U.user_code=A.user_code
  WHERE A.PEM_MEMO_ID =@CWHERE       
  ORDER BY PEM_MEMO_DT,PEM_MEMO_NO DESC
   

  GOTO LAST         
      
 TBLXNMSTLOOKUP:        
  --SELECT PEM_MEMO_ID, PEM_MEMO_NO,PEM_MEMO_DT,FIN_YEAR, SENT_TO_HO,        
  --USER_CODE,CANCELLED,LAST_UPDATE,TS,POSTEDINAC FROM      PEM01106         
  --WHERE PEM_MEMO_ID=@CWHERE       
  SELECT *,CAST(0 AS NUMERIC(14,2)) AS [OPENING_BALANCE],CAST(0 AS NUMERIC(14,2)) AS [RECEIVE_AMOUNT]  ,'' AS DEPT_NAME,'' AS USERNAME    
  FROM  PEM01106  WHERE 1=2        
  GOTO LAST         
      

 TBLXNDETLOOKUP:        


SET @CFILTERCONDITION=''
IF @CWHERE1=''
SET @CFILTERCONDITION=' A.PEM_MEMO_ID='''+@CWHERE+''''
IF @CWHERE1<>''
SET @CFILTERCONDITION=' A.PEM_MEMO_ID='''+@CWHERE+''' AND A.ROW_ID='''+@CWHERE1+''''	
  

SET @DTSSQL=N'SELECT A.*,B.AC_NAME,CAST(0  AS BIT) AS [PRINT]
,(CASE WHEN ISNULL(C.VALUE,'''')='''' OR ISNULL(A.REF_NO,'''')='''' THEN '''' ELSE C.VALUE+''PTC\''+''PTC_''+RTRIM(LTRIM(STR(A.SNO)))+''_''+A.PEM_MEMO_ID+''_''+A.REF_NO+''.JPG'' END) AS IMAGE_PATH ,
(CASE WHEN XN_TYPE= ''CR'' THEN ''RECEIPT'' ELSE ''PAYMENT'' END) AS DISPLAY_XN_TYPE
FROM  PED01106 A        
JOIN LMV01106 B ON B.AC_CODE=A.AC_CODE AND B.AC_CODE<>''0000000000''     
LEFT JOIN
(
SELECT TOP 1 VALUE FROM CONFIG 
WHERE   CONFIG_OPTION=''DOC_PATH'' AND ISNULL(VALUE,'''')<>''''
) C ON 1=1
WHERE '+@CFILTERCONDITION+'     
ORDER BY TS'
PRINT @DTSSQL
EXEC SP_EXECUTESQL @DTSSQL    
GOTO LAST       

    
        
 TBLLVM:      
       
 DECLARE @CHEAD_CODE VARCHAR(MAX)     
 SET @CHEAD_CODE=''--'''0000000014'''    
 SELECT @CHEAD_CODE=ISNULL(@CHEAD_CODE,'') +DBO.FN_ACT_TRAVTREE(HEAD_CODE)      
 FROM PETTY_CASH_AC (NOLOCK)    
 SELECT AC_CODE,AC_NAME,HEAD_CODE        
 FROM LMV01106   
 WHERE (CHARINDEX(HEAD_CODE,@CHEAD_CODE)>0 OR @CHEAD_CODE='' )  AND  INACTIVE=0 AND AC_CODE<>'0000000000'
 ORDER BY AC_NAME    
  GOTO LAST         
      
 LBLPCINMAX:        
 SELECT MEMO_ID,MEMO_NO,MEMO_DT,AMOUNT,LAST_UPDATE,REMARKS,TS,FIN_YEAR,USER_CODE        
  FROM PCO_MST  WHERE MEMO_NO LIKE(@CWHERE+'%')      
  GOTO LAST      
      
 LAST:                
END
