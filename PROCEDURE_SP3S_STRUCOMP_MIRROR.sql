CREATE PROCEDURE SP3S_STRUCOMP_MIRROR
@CDEPTID VARCHAR(5),
@CERRORMSG VARCHAR(MAX) OUTPUT
--WITH ENCRYPTION
AS
BEGIN
	
	BEGIN TRY
	
		DECLARE @CCMD NVARCHAR(MAX),@NAME VARCHAR(200),@CCMDPARA NVARCHAR(MAX),@CMIRRORDBNAME VARCHAR(300),
		@CPROCNAME VARCHAR(200),@COBJTYPE VARCHAR(5),@NSTEP INT,@CCURDBNAME VARCHAR(200),
		@CMIRRORDB VARCHAR(300),@DPRIMARYDBEXETIME DATETIME,@DMIRRORDBEXETIME DATETIME,
		@CMIRRORINGENABLED VARCHAR(2)
		
		SET @CERRORMSG=''
		
		SET @NSTEP = 10

		SELECT TOP 1 @CMIRRORINGENABLED=VALUE FROM CONFIG WHERE CONFIG_OPTION='MIRRORING_ENABLED'
		
		IF ISNULL(@CMIRRORINGENABLED,'')<>'1'
			GOTO END_PROC
		
		SELECT @CMIRRORDBNAME='WIZAPP3S_MIRROR_'+@CDEPTID,
			   @CMIRRORDB='WIZAPP3S_MIRROR_'+@CDEPTID+'.DBO.'	
			   
		SET @CCMD=N'SELECT @DMIRRORDBEXETIME=LAST_UPDATE FROM '+@CMIRRORDB+'EXE_TIME'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@DMIRRORDBEXETIME DATETIME OUTPUT',@DMIRRORDBEXETIME OUTPUT

		SELECT TOP 1 @DPRIMARYDBEXETIME=LAST_UPDATE FROM EXE_TIME
		
		IF ISNULL(@DPRIMARYDBEXETIME,'')=ISNULL(@DMIRRORDBEXETIME,'')
			RETURN
					
		IF CURSOR_STATUS('GLOBAL','STRUCUR') IN (0,1)
		BEGIN
			CLOSE STRUCUR
			DEALLOCATE STRUCUR
		END
		
		SET @CCURDBNAME=DB_NAME()
		
		SET @NSTEP=10
		
				
		DECLARE STRUCUR CURSOR FOR 
		SELECT 'P' AS TYPE,P.NAME,DEFINITION
		FROM [SYS].[PROCEDURES] P
		INNER JOIN SYS.SQL_MODULES M ON P.OBJECT_ID = M.OBJECT_ID
		WHERE P.NAME IN ('SP_STRUCOMP','SP3S_RENAME')
		UNION
		SELECT 'FN' AS TYPE,B.NAME,TEXT FROM SYSCOMMENTS A JOIN SYSOBJECTS B ON A.ID=B.ID
		WHERE B.XTYPE='FN' AND B.NAME IN ('FN_CHECKNAMESLOC')
		
		OPEN STRUCUR
	
		SET @NSTEP=30
		FETCH NEXT FROM STRUCUR INTO @COBJTYPE,@CPROCNAME,@CCMDPARA

		WHILE @@FETCH_STATUS = 0 
		BEGIN
		   
		   SET @NSTEP=40
		   SET @CCMD=N'USE [' + @CMIRRORDBNAME + '];
					   IF OBJECT_ID('''+@CMIRRORDB+@CPROCNAME+''','''+@COBJTYPE+''') IS NOT NULL
							DROP '+(CASE WHEN @COBJTYPE='P' THEN 'PROCEDURE ' ELSE 'FUNCTION ' END)+
							@CPROCNAME
		   PRINT @CCMD					
		   EXEC SP_EXECUTESQL @CCMD
		   
		   SET @NSTEP=50
		   SET @CCMDPARA = REPLACE(@CCMDPARA,'''','''''')
		   
		   SET @CCMD = N'USE [' + @CMIRRORDBNAME + ']; EXEC(''' + @CCMDPARA + ''')'
			
		   PRINT @CCMD	
		   EXEC SP_EXECUTESQL @CCMD

		   FETCH NEXT FROM STRUCUR INTO @COBJTYPE,@CPROCNAME,@CCMDPARA
		END             
		
		SET @NSTEP=60
		CLOSE STRUCUR
		DEALLOCATE STRUCUR
		
		SET @NSTEP=70
		SET @CCMD=N'USE [' + @CMIRRORDBNAME + ']; EXEC SP_STRUCOMP 1,1'
		EXEC SP_EXECUTESQL @CCMD
		
		SET @NSTEP=80
		SET @CCMD=N'USE [' + @CMIRRORDBNAME + ']; EXEC SP_STRUCOMP 1,0'
		EXEC SP_EXECUTESQL @CCMD
		
		SET @NSTEP=90
		SET @CCMD=N'USE [' + @CMIRRORDBNAME + ']; EXEC SP_STRUCOMP 2,0'
		EXEC SP_EXECUTESQL @CCMD		
		
		SET @NSTEP=100
		SET @CCMD=N'IF NOT EXISTS (SELECT TOP 1 * FROM '+@CMIRRORDB+'EXE_TIME)
						INSERT '+@CMIRRORDB+'EXE_TIME (LAST_UPDATE)
						SELECT LAST_UPDATE FROM '+@CCURDBNAME+'.DBO.EXE_TIME
					ELSE		
						UPDATE A SET LAST_UPDATE=B.LAST_UPDATE FROM '+@CMIRRORDB+'EXE_TIME A
						JOIN '+@CCURDBNAME+'.DBO.EXE_TIME B ON 1=1'
		PRINT @CCMD				
		EXEC SP_EXECUTESQL @CCMD
		
		GOTO END_PROC		
	END TRY
	
	BEGIN CATCH
		PRINT 'ENTER CATCH BLOCK'	
		SELECT @CERRORMSG='PROCEDURE SP3S_STRUCOMP_MIRROR : '+ISNULL(ERROR_PROCEDURE(),'NULL P')+'STEP :'+STR(ISNULL(@NSTEP,0))+ ' LINE NO. :'+
		ISNULL(LTRIM(RTRIM(STR(ERROR_LINE()))),'NULL LINE')+'MSG :'+ISNULL(ERROR_MESSAGE(),'NULL MSG')
		
		GOTO END_PROC
	END CATCH

END_PROC:
	PRINT 'LAST STEP :'+STR(@NSTEP)

	IF ISNULL(@CERRORMSG,'')<>''
		INSERT MIRROR_MERGE_LOG (MEMO_ID,ERRMSG,LAST_UPDATE)
		SELECT @CDEPTID+'-STRUCOMP' AS MEMO_ID,ISNULL(@CERRORMSG,'') AS ERRMSG,GETDATE() AS LAST_UPDATE
	
END
