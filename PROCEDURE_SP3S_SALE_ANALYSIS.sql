CREATE  PROCEDURE SP3S_SALE_ANALYSIS
(
	  @DPROCESS DATETIME	
	 ,@BREPROCESS BIT=0
	 ,@CPROCESSID VARCHAR(50) OUTPUT
	 ,@CERRORMSG VARCHAR(500) OUTPUT
)	
--WITH ENCRYPTION
AS
SET NOCOUNT ON
/*
208:
CREATION DATE:
DESCRIPTION:
	THIS PROCEDURE PREPARES REPORT DATA FOR HO'S MANAGEMENT DASHBOARD'S POS ANALYSIS METRICS FOR ALL ACTIVE LOCATIONS.
	METRICS:
	1. SALE ANALYSIS WITH REPECT TO TARGET ASSIGNED TO LOCATIONS
*/
BEGIN
	DECLARE @CCURFINYEAR VARCHAR(10),@NCURMONTH NUMERIC(2),@NCURYEAR NUMERIC(4)
			,@CSTEP VARCHAR(5),@NTOTALSALE NUMERIC(18,4),@NTOTALGM NUMERIC(18,4),@NDAYS NUMERIC(3)
			,@NPREYEAR NUMERIC(4),@DFROMDT DATETIME,@NCUM_CURMONTH NUMERIC(2),@DCUM_PROCESSDT DATETIME
	
	BEGIN TRY	   
	
	 SET @CCURFINYEAR='01'+DBO.FN_GETFINYEAR(@DPROCESS)  
	 SET @NCURMONTH=DATEPART(MM,@DPROCESS)  
	 SET @NCURYEAR=DATEPART(YY,@DPROCESS)   
	 SET @NPREYEAR=@NCURYEAR-1
	 SELECT @DFROMDT=DBO.FN_GETFINYEARDATE(@CCURFINYEAR,1)
	 SET @NDAYS=DATEDIFF(DD,@DFROMDT,@DPROCESS)
	 
	 /*
		CONSIDERATION FOR CUMULATIVE CALCULATION:
		***IF SALE ANALYSIS IS BEING BUILT FOR APRIL,CUMULATIVE WILL INCLUDE ONLY APRIL DATA OF THIS FINANCIAL YEAR.
		***FOR ANY OTHER DATE IN SALE ANALYSIS CALCULATION,CUMULATIVE WILL BE CALCULATED FROM APRIL TO LAST DATE OF 
		   PREVIOUS MONTH OF THE DATE SELECTED FOR SALE ANALYSIS PROCESSING.
	 */
	 ---IF CURRENT MONTH IS APRIL, THERE WILL BE NO DATA FOR CUMULATIVE,SO DONOT PROCESS
	 IF @NCURMONTH=4
	 BEGIN
		SET @NCUM_CURMONTH=@NCURMONTH
		SET @DCUM_PROCESSDT=@DPROCESS
	 END	
	 ELSE
	 BEGIN
		--IF SELECTED DATE FALLS IN JANUARY,CUMULATIVE SHOULD BE TILL DECEMBER
		IF @NCURMONTH=1
			SET @NCUM_CURMONTH=12
		ELSE
			SET @NCUM_CURMONTH=@NCURMONTH-1
			
		SET @DCUM_PROCESSDT=DATEADD(DD,-1,LTRIM(RTRIM(STR(@NCURYEAR)))+'-'+LTRIM(RTRIM(STR(@NCURMONTH)))+'-'+'01')		
	 END
	 
	 --SELECT @NCUM_CURMONTH,@DCUM_PROCESSDT
	 
	--DATE CONSIDERED FOR DATA PROCESSING	   
	/*1. SALE ANALYSIS WITH REPECT TO TARGET ASSIGNED TO LOCATIONS*/
		/*[I].CURRENT MONTH SALE ACHIEVED PERCENTAGE */		   
			   /*CURRENT MONTH SALE FOR ALL ACTIVE LOCATIONS*/			

			   SET @CSTEP=20
			   SELECT @CPROCESSID=PROCESS_ID FROM SALE_ANALYSIS WHERE PROCESS_DT=@DPROCESS 
			   SET @CSTEP=30
			   IF @BREPROCESS=1 AND ISNULL(@CPROCESSID,'')<>''
			   BEGIN
					DELETE SALE_ANALYSIS WHERE PROCESS_ID=@CPROCESSID
			   END
			   ELSE IF @BREPROCESS=0 AND ISNULL(@CPROCESSID,'')<>''
					RETURN
			   SET @CSTEP=40				   
			   IF OBJECT_ID('TEMPDB..#CURRENT_MONTH_SALE','U') IS NOT NULL
					DROP TABLE #CURRENT_MONTH_SALE
			
				SET @CSTEP=50	
				SELECT LOC.DEPT_ID 
					  ,CONVERT(VARCHAR(2),DATEPART(MM,CMM.CM_DT)) AS MONTH
					  ,CMM.FIN_YEAR
					  ,CONVERT(NUMERIC(18,4),(SUM(CMD.RFNET))) AS SALE_VALUE  
					  ,CONVERT(NUMERIC(18,4),(SUM(CMD.QUANTITY*(SKU.PURCHASE_PRICE+(CASE WHEN FORM.POST_TAX_SEPARATELY=0 
						THEN ISNULL(SKU_OH.TAX_AMOUNT,0) ELSE 0 END)-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0)))))
						AS SOLD_PURCHASE_VALUE
				 INTO #CURRENT_MONTH_SALE	  
				 FROM CMM01106 CMM (NOLOCK)  
				 JOIN CMD01106 CMD (NOLOCK) ON CMM.CM_ID=CMD.CM_ID
				 JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=CMD.PRODUCT_CODE
				 LEFT JOIN SKU_OH (NOLOCK) ON SKU_OH.PRODUCT_CODE=SKU.PRODUCT_CODE
				 JOIN FORM (NOLOCK) ON SKU.FORM_ID=FORM.FORM_ID
				 JOIN LOCATION LOC (NOLOCK) ON CMM.location_Code =LOC.DEPT_ID
				 WHERE LOC.INACTIVE=0 AND DATEPART(MM,CMM.CM_DT)=@NCURMONTH 
				 AND CM_DT<=@DPROCESS AND FIN_YEAR=@CCURFINYEAR AND CMM.CANCELLED=0 AND CM_MODE=1  
				 GROUP BY LOC.DEPT_ID,CONVERT(VARCHAR(2),DATEPART(MM,CMM.CM_DT)),FIN_YEAR  	
				
				SET @CSTEP=60 
			   /*CURRENT MONTH TARGET SALE FOR ALL ACTIVE LOCATIONS*/			
			   IF OBJECT_ID('TEMPDB..#CURRENTMONTHTARGET','U') IS NOT NULL
					DROP TABLE #CURRENTMONTHTARGET
			     
			     SET @CSTEP=70 
			     SELECT  LOC.DEPT_ID 
					  ,CONVERT(VARCHAR(2),LST.TARGET_MONTH) AS MONTH
					  ,LST.FIN_YEAR
					  ,CONVERT(NUMERIC(18,4),LST.TARGET_AMOUNT) AS TARGET
				 INTO #CURRENTMONTHTARGET
				 FROM LOC_SALE_TARGET LST (NOLOCK)  
				 JOIN LOCATION LOC (NOLOCK) ON LST.DEPT_ID=LOC.DEPT_ID
				 WHERE LOC.INACTIVE=0 AND LST.TARGET_MONTH=@NCURMONTH 
				 AND LST.FIN_YEAR=@CCURFINYEAR 
				
				SET @CSTEP=80 
			   /*ACHIEVED PERCENTAGE= (ACTUAL SALE/TARGET SALE)*100 % */
			   SELECT @NTOTALSALE=SUM(SALE_VALUE),@NTOTALGM=SUM(SALE_VALUE-SOLD_PURCHASE_VALUE) FROM #CURRENT_MONTH_SALE
			   
			   SET @CSTEP=90 
			   IF OBJECT_ID('TEMPDB..#SALE_ANALYSIS_MONTH','U') IS NOT NULL
					DROP TABLE #SALE_ANALYSIS_MONTH
			   
			   SELECT S.DEPT_ID,S.MONTH,S.FIN_YEAR,S.SALE_VALUE,S.SOLD_PURCHASE_VALUE,T.TARGET
					 ,CONVERT(NUMERIC(18,4),(CASE WHEN ISNULL(T.TARGET,0)=0 THEN 0 ELSE ((S.SALE_VALUE/T.TARGET)*100) END)) AS SAP
					 ,CONVERT(NUMERIC(18,4),(CASE WHEN ISNULL(@NTOTALSALE,0)=0 THEN 0 ELSE ((S.SALE_VALUE/@NTOTALSALE)*100) END)) AS SCP
					 ,CONVERT(NUMERIC(18,4),(S.SALE_VALUE-S.SOLD_PURCHASE_VALUE)) AS GM 
					 ,CONVERT(NUMERIC(18,4),(CASE WHEN ISNULL(@NTOTALGM,0)=0 THEN 0 ELSE (((S.SALE_VALUE-S.SOLD_PURCHASE_VALUE)/@NTOTALGM)*100) END)) AS GMCP
			   INTO #SALE_ANALYSIS_MONTH  	
			   FROM #CURRENT_MONTH_SALE S
			   LEFT JOIN #CURRENTMONTHTARGET T ON S.DEPT_ID=T.DEPT_ID AND S.MONTH=T.MONTH AND S.FIN_YEAR=T.FIN_YEAR
			
			SET @CSTEP=100 
			IF OBJECT_ID('TEMPDB..#CUMULATIVE_SALE','U') IS NOT NULL
						DROP TABLE #CUMULATIVE_SALE
			
			SET @CSTEP=110 		
			IF OBJECT_ID('TEMPDB..#CUMULATIVE_TARGET','U') IS NOT NULL
						DROP TABLE #CUMULATIVE_TARGET   
			
			SET @CSTEP=120 
			IF OBJECT_ID('TEMPDB..#SALE_ANALYSIS_CUMULATIVE','U') IS NOT NULL
						DROP TABLE #SALE_ANALYSIS_CUMULATIVE
					
					SET @CSTEP=130 
					SELECT	LOC.DEPT_ID 
						  ,CMM.FIN_YEAR
						  ,CONVERT(NUMERIC(18,4),(SUM(CMD.RFNET))) AS SALE_VALUE  
						  ,(CASE WHEN ISNULL(LOC.AREA_COVERED,1)=0 THEN 1 ELSE ISNULL(LOC.AREA_COVERED,1) END) AS AREA_COVERED
						  ,CONVERT(NUMERIC(18,4),(SUM(CMD.QUANTITY*(SKU.PURCHASE_PRICE+(CASE WHEN FORM.POST_TAX_SEPARATELY=0 
							THEN ISNULL(SKU_OH.TAX_AMOUNT,0) ELSE 0 END)-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0))))) AS SOLD_PURCHASE_VALUE
						  ,COUNT(DISTINCT CMM.CM_DT) AS SALEDAYS	
					INTO #CUMULATIVE_SALE	  
					FROM CMM01106 CMM (NOLOCK)  
					JOIN CMD01106 CMD (NOLOCK) ON CMM.CM_ID=CMD.CM_ID
					JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=CMD.PRODUCT_CODE
					LEFT JOIN SKU_OH (NOLOCK) ON SKU_OH.PRODUCT_CODE=SKU.PRODUCT_CODE
					JOIN FORM (NOLOCK) ON SKU.FORM_ID=FORM.FORM_ID
					JOIN LOCATION LOC (NOLOCK) ON CMM.location_Code =LOC.DEPT_ID
					WHERE LOC.INACTIVE=0 AND CM_DT<=@DCUM_PROCESSDT AND FIN_YEAR=@CCURFINYEAR 
					AND CMM.CANCELLED=0 AND CM_MODE=1  
					GROUP BY LOC.DEPT_ID,FIN_YEAR,ISNULL(LOC.AREA_COVERED,1)  	
			
			SET @CSTEP=140 
			SELECT @NTOTALSALE=SUM(SALE_VALUE),@NTOTALGM=SUM(SALE_VALUE-SOLD_PURCHASE_VALUE) FROM #CUMULATIVE_SALE
			
			SET @CSTEP=150 
			SELECT DEPT_ID,FIN_YEAR,CONVERT(NUMERIC(18,4),0) AS TARGET INTO #CUMULATIVE_TARGET FROM LOC_SALE_TARGET WHERE 1=2
	
			SET @CSTEP=160 
			/*[II]. CURRENT FIN_YEAR CUMULATIVE SALE ACHIEVED PERCENTAGE */		      
			IF @NCUM_CURMONTH>3  
				BEGIN  
					SET @CSTEP=170
					INSERT #CUMULATIVE_TARGET(DEPT_ID,FIN_YEAR,TARGET)
					SELECT  LOC.DEPT_ID 
						  ,LST.FIN_YEAR
						  ,CONVERT(NUMERIC(18,4),(SUM(LST.TARGET_AMOUNT))) AS TARGET
					 FROM LOC_SALE_TARGET LST (NOLOCK)  
					 JOIN LOCATION LOC (NOLOCK) ON LST.DEPT_ID=LOC.DEPT_ID
					 WHERE LOC.INACTIVE=0 AND LST.TARGET_MONTH<=@NCUM_CURMONTH
					 AND LST.FIN_YEAR=@CCURFINYEAR AND TARGET_YEAR=@NCURYEAR
					 GROUP BY LOC.DEPT_ID,LST.FIN_YEAR
							    
				END  
			ELSE  
				BEGIN  
					SET @CSTEP=180 
					INSERT #CUMULATIVE_TARGET(DEPT_ID,FIN_YEAR,TARGET)
					SELECT T.DEPT_ID,T.FIN_YEAR,SUM(TARGET) AS TARGET 
					FROM (
							SELECT  LOC.DEPT_ID 
								  ,LST.FIN_YEAR
								  ,CONVERT(NUMERIC(18,4),(SUM(LST.TARGET_AMOUNT))) AS TARGET
							 FROM LOC_SALE_TARGET LST (NOLOCK)  
							 JOIN LOCATION LOC (NOLOCK) ON LST.DEPT_ID=LOC.DEPT_ID
							 WHERE LOC.INACTIVE=0 AND LST.TARGET_MONTH<=@NCUM_CURMONTH
							 AND LST.FIN_YEAR=@CCURFINYEAR AND TARGET_YEAR=@NCURYEAR
							 GROUP BY LOC.DEPT_ID,LST.FIN_YEAR
							UNION ALL
							SELECT  LOC.DEPT_ID 
								  ,LST.FIN_YEAR
								  ,CONVERT(NUMERIC(18,4),SUM(LST.TARGET_AMOUNT)) AS TARGET
							 FROM LOC_SALE_TARGET LST (NOLOCK)  
							 JOIN LOCATION LOC (NOLOCK) ON LST.DEPT_ID=LOC.DEPT_ID
							 WHERE LOC.INACTIVE=0 AND LST.TARGET_MONTH>=4
							 AND LST.FIN_YEAR=@CCURFINYEAR AND TARGET_YEAR=@NPREYEAR
							 GROUP BY LOC.DEPT_ID,LST.FIN_YEAR
						)T GROUP BY T.DEPT_ID,T.FIN_YEAR
				END 		
				
				SET @CSTEP=190 
				
				SELECT S.DEPT_ID,S.FIN_YEAR,S.SALE_VALUE,S.SALEDAYS,S.AREA_COVERED
					  ,S.SOLD_PURCHASE_VALUE,T.TARGET AS CTARGET
					  ,CONVERT(NUMERIC(18,4),(CASE WHEN ISNULL(T.TARGET,0)=0 THEN 0 ELSE ((S.SALE_VALUE/T.TARGET)*100) END)) AS CSAP
					  ,CONVERT(NUMERIC(18,4),(CASE WHEN ISNULL(@NTOTALSALE,0)=0 THEN 0 ELSE ((S.SALE_VALUE/@NTOTALSALE)*100) END)) AS CSCP
					  ,CONVERT(NUMERIC(18,4),(S.SALE_VALUE-S.SOLD_PURCHASE_VALUE)) AS CGM 
					  ,CONVERT(NUMERIC(18,4),(CASE WHEN ISNULL(@NTOTALGM,0)=0 THEN 0 ELSE (((S.SALE_VALUE-S.SOLD_PURCHASE_VALUE)/@NTOTALGM)*100) END)) AS CGMCP
					  ,@NDAYS AS DAYS
			    INTO #SALE_ANALYSIS_CUMULATIVE  	
			    FROM #CUMULATIVE_SALE S 
			    LEFT JOIN #CUMULATIVE_TARGET T ON S.DEPT_ID=T.DEPT_ID AND S.FIN_YEAR=T.FIN_YEAR
				WHERE ISNULL(S.SALE_VALUE,0)<>0
				
				SET @CSTEP=200
				IF EXISTS(SELECT TOP 1 'U' FROM #SALE_ANALYSIS_CUMULATIVE) 
						OR EXISTS(SELECT TOP 1 'U' FROM #SALE_ANALYSIS_MONTH)
					SET @CPROCESSID='PA'+CONVERT(VARCHAR(40),NEWID())
				
				SET @CSTEP=210
				IF ISNULL(@CPROCESSID,'')<>''
				BEGIN
					INSERT SALE_ANALYSIS	( PROCESS_ID, PROCESS_DT, DEPT_ID, MONTH, FIN_YEAR, CM_SALE_VALUE, CM_SOLD_PURCHASE_VALUE
						, CM_TARGET_VALUE, CM_SAP, CM_SCP, CM_GM, CM_GMCP, CUM_SALE_VALUE, CUM_SOLD_PURCHASE_VALUE
						, CUM_TARGET_VALUE, CUM_SALE_DAYS, CUM_SAP, CUM_SCP, CUM_GM, CUM_GMCP, CUM_TOTAL_DAYS
						, DEPT_AREA_COVERED)  
					SELECT 	 @CPROCESSID AS PROCESS_ID,@DPROCESS AS  PROCESS_DT,ISNULL(SC.DEPT_ID,SM.DEPT_ID) AS DEPT_ID
					,@NCURMONTH AS MONTH,ISNULL(SC.FIN_YEAR,SM.FIN_YEAR) AS FIN_YEAR
					,ISNULL(SM.SALE_VALUE,0) AS CM_SALE_VALUE,ISNULL(SM.SOLD_PURCHASE_VALUE,0) AS CM_SOLD_PURCHASE_VALUE
					,ISNULL(SM.TARGET,0) AS CM_TARGET_VALUE
					,ISNULL(SM.SAP,0) AS CM_SAP, ISNULL(SM.SCP,0) AS CM_SCP,ISNULL(SM.GM,0) AS CM_GM
					,ISNULL(SM.GMCP,0) AS CM_GMCP,ISNULL(SC.SALE_VALUE,0) AS CUM_SALE_VALUE
					,ISNULL(SC.SOLD_PURCHASE_VALUE,0) AS CUM_SOLD_PURCHASE_VALUE,ISNULL(SC.CTARGET,0) AS CUM_TARGET_VALUE
					,ISNULL(SC.SALEDAYS,0) AS CUM_SALE_DAYS
					,ISNULL(SC.CSAP,0) AS CUM_SAP,ISNULL(SC.CSCP,0) AS CUM_SCP,ISNULL(SC.CGM,0) AS CUM_GM,ISNULL(SC.CGMCP,0) AS CUM_GMCP
					,ISNULL(SC.DAYS,0) AS CUM_TOTAL_DAYS,ISNULL(SC.AREA_COVERED,0) AS DEPT_AREA_COVERED
					FROM #SALE_ANALYSIS_CUMULATIVE SC	
					FULL JOIN #SALE_ANALYSIS_MONTH SM ON SC.DEPT_ID=SM.DEPT_ID AND SC.FIN_YEAR=SM.FIN_YEAR
				END
	END TRY
	BEGIN CATCH
		SET @CERRORMSG='P:SP3S_SALE_ANALYSIS,STEP: '+@CSTEP+', MESSAGE : '+ERROR_MESSAGE()
	END CATCH		   
	
EXIT_PROC:
	
END
---END OF PROCEDURE - SP3S_SALE_ANALYSIS
