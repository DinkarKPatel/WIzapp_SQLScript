CREATE PROCEDURE GETNEXTKEY_RPS  
	@CPREFIX	VARCHAR(200) = '',   
	@CFINYEAR	VARCHAR(40) = '',	  
	@CNEWKEYVAL VARCHAR(200) OUTPUT  
AS  
BEGIN  
	DECLARE @NLASTKEYVAL	BIGINT,
			@NTEMPLASTKEYVAL BIGINT,
			@NVALLEN		INTEGER,
			@NTEMPWIDTH		INTEGER,
			@CZEROS			VARCHAR(40),
			@CCMD			NVARCHAR(MAX),
			@CKEYSTABLE		VARCHAR(20),
			@CLASTKEYVAL	VARCHAR(200),
			@NBOOL			BIT ,
			@CCHKNEWKEYVAL	VARCHAR(200),
			@NCOUNT			INTEGER,
			@NTMPROWCOUNT	INTEGER,
			@CMANUALPREFIX  VARCHAR(10) ,@NWIDTH INT	 

	set @NWIDTH=12

	SET @CKEYSTABLE ='KEYS_CMM' 

    --PRINT REPLICATE('*',10)+CHAR(13)+@CKEYSTABLE+CHAR(13)+REPLICATE('*',10)
	
	IF NOT EXISTS (   SELECT LASTKEYVAL FROM KEYS_CMM (nolock) 
								    WHERE TABLENAME	= 'rps_mst' 
								    AND COLUMNNAME	= 'cm_no'  
 									AND PREFIX		= @CPREFIX
 									AND FINYEAR		=  @CFINYEAR  )
		INSERT KEYS_CMM ( TABLENAME, COLUMNNAME, PREFIX, FINYEAR, LASTKEYVAL )   
 		VALUES ( 'rps_mst' ,  'cm_no' , @CPREFIX, @CFINYEAR, '')
	
	SET @NTEMPWIDTH = @NWIDTH

	SELECT @NVALLEN = @NTEMPWIDTH - LEN(REPLACE(@CPREFIX,' ','0'))  
	
	IF @NVALLEN < 0  
		SELECT  @NVALLEN = 0  


	SELECT TOP 1 @NTEMPLASTKEYVAL = CAST(SUBSTRING( LASTKEYVAL,LEN(@CPREFIX)+1,len(LASTKEYVAL) ) AS BIGINT )   
	FROM KEYS_CMM (nolock)  WHERE TABLENAME	= 'rps_mst' AND COLUMNNAME	= 'cm_no'  AND PREFIX= @CPREFIX
	AND FINYEAR= @CFINYEAR
	

	SET @NLASTKEYVAL = (@NTEMPLASTKEYVAL + 1)
	SELECT @CZEROS = REPLICATE('0', @NVALLEN - LEN(@NLASTKEYVAL))  
	
	SET @CZEROS=ISNULL(@CZEROS,'')
   
	SELECT  @CNEWKEYVAL = @CPREFIX + @CZEROS + LTRIM(RTRIM(CAST(@NLASTKEYVAL AS VARCHAR(200))))

	IF @CNEWKEYVAL IS NOT NULL 
	BEGIN
		UPDATE KEYS_CMM  WITH (ROWlock) 
		SET LASTKEYVAL  = @CNEWKEYVAL
		WHERE TABLENAME	= 'rps_mst' 
		AND COLUMNNAME	= 'cm_no'  
 		AND PREFIX		= @CPREFIX
 		AND FINYEAR		=  @CFINYEAR 
	END

	SELECT @CNEWKEYVAL = (CASE WHEN @CNEWKEYVAL IS NULL THEN 'NULL' ELSE @CNEWKEYVAL END )
END
