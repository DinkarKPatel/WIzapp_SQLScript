create Procedure SP3SWOW_GENERATE_BATCHBARCODE_GRNPS
(
 @cLocId	  VARCHAR(5)='',
 @cErrorMsg VARCHAR(MAX) OUTPUT 
)
as
begin
     

	 BEGIN TRY 

	    Declare @NSTEP numeric(5,0),@CNEXTPRODUCTSR NUMERIC(12,0),@CLASTPRODUCTSR NUMERIC(12,0)
		      

		set @NSTEP=10

	   SELECT B.ROW_ID AS PID_ROW_ID,B.PRODUCT_CODE,CAST(0 AS INT) AS SR_NO ,
			  SKU.BATCH_NO,SKU.EXPIRY_DT,SKU.MRP,SKU.PURCHASE_PRICE,
			  ISNULL(ART.PERISHABLE,0) AS PERISHABLE,CAST('' AS VARCHAR(100)) AS NEW_PRODUCT_CODE,
			  sku.barcode_coding_scheme as CODING_SCHEME
		 into #tmpGenerateBarcode
		FROM #tblGRNPSDET  B (NOLOCK) 
		JOIN SKU (NOLOCK) ON B.PRODUCT_CODE =SKU.PRODUCT_CODE 
		JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE
		join sectionD  sd (nolock) on sd.sub_section_code =art.sub_section_code 
		join sectionm sm (nolock) on sm.section_code =sd.section_code 
		WHERE ISNULL(SKU.BARCODE_CODING_SCHEME,0)=1 
        AND ISNULL(ART.STOCK_NA,0)=0
		AND charindex('@',b.product_code)=0
	    and isnull(sm.ITEM_TYPE,0)<>2

		 IF NOT EXISTS(SELECT TOP 1 'U' FROM #tmpGenerateBarcode (nolock))
		 	GOTO END_PROC

		SET @NSTEP=20

		 --IF EXISTS(SELECT TOP 1 'U'  FROM #tmpGenerateBarcode WHERE  ISNULL(product_code ,'')='')
		 --BEGIN
		 --  SET @CERRORMSG='EAN REQUIRED FOR BATCH BARCODE'    
		 --   GOTO END_PROC  
		 --END

		 --set @NSTEP=30

		 --IF EXISTS(SELECT TOP 1 'U'  FROM #tmpGenerateBarcode WHERE ISNULL(PERISHABLE,0)=1 AND ISNULL(EXPIRY_DT,'')='')
		 --BEGIN
		 --  SET @CERRORMSG='EXPIRY DATE CAN NOT BE BLANK OF PERISHABLE ITEM'    
		 --  GOTO END_PROC  
		 --END

		 --set @NSTEP=40

		 --IF EXISTS(SELECT TOP 1 'U'  FROM #tmpGenerateBarcode  WHERE   ISNULL(PERISHABLE,0)=1 AND ISNULL(EXPIRY_DT,'')<CONVERT(VARCHAR(10),GETDATE(),121))
		 --BEGIN
		 --  SET @CERRORMSG='EXPIRY DATE CAN NOT BE LESS THAN TODAY DATE'    
		 --  GOTO END_PROC  
		 --END
		  
		 SET @NSTEP=45

		 EXEC GETNEXTKEY 'SKU', 'PRODUCT_CODE', 50, '', 0, '',0,@CNEXTPRODUCTSR OUTPUT     
		IF @CNEXTPRODUCTSR IS NULL    
		BEGIN
			SET @CERRORMSG='Error getting Next Product Code in FIX CODE GENERATION OF PERISHABLE ITEM'    
			GOTO END_PROC  
		END 
			 
		SET @NSTEP=50
	
	
		SET @CNEXTPRODUCTSR=@CNEXTPRODUCTSR-1

		
		  SET @NSTEP=60

			WHILE EXISTS (SELECT TOP 1 'U' FROM #tmpGenerateBarcode  WHERE  ISNULL(NEW_PRODUCT_CODE,'')='')
			BEGIN 
			      
				  
				UPDATE #tmpGenerateBarcode SET NEW_PRODUCT_CODE=RTRIM(LTRIM(PRODUCT_CODE))+'@'+@cLocId +CAST(@CNEXTPRODUCTSR AS VARCHAR(100)) ,
											@CNEXTPRODUCTSR=@CNEXTPRODUCTSR+1
				WHERE  ISNULL(NEW_PRODUCT_CODE,'')=''

				UPDATE A SET NEW_PRODUCT_CODE='' FROM  #tmpGenerateBarcode A
				JOIN SKU B (NOLOCK) ON A.NEW_PRODUCT_CODE =B.PRODUCT_CODE 
				WHERE ISNULL(A.NEW_PRODUCT_CODE,'') <>''
			     
			     
			    SET @CLASTPRODUCTSR=@CNEXTPRODUCTSR
			    PRINT 'CHECKING PERISHABLE ROW ID :'
			 
			 
			END

			SET @NSTEP=65

			IF EXISTS(SELECT TOP 1 'U'  FROM #tmpGenerateBarcode WHERE  charindex('@',NEW_PRODUCT_CODE)=0)
			 BEGIN
			   SET @CERRORMSG='Batch generation Error in Against  Ean Code '    
			   GOTO END_PROC  
			 END
 


			SET @NSTEP=70

				UPDATE  A SET LASTKEYVAL =@CLASTPRODUCTSR
				FROM KEYS_PMT A (NOLOCK)
				WHERE TABLENAME ='SKU' AND COLUMNNAME ='PRODUCT_CODE'
				AND PREFIX='' AND FINYEAR =''
			
			     	-- INSERTING RECORDS IN SKU    
				INSERT SKU ( PRODUCT_CODE,PRODUCT_NAME,ARTICLE_CODE, PARA1_CODE, PARA2_CODE, PARA3_CODE,PARA4_CODE, PARA5_CODE, PARA6_CODE,    
				PURCHASE_PRICE, MRP,  LAST_UPDATE,INV_NO,INV_DT, RECEIPT_DT, AC_CODE,FORM_ID,WS_PRICE,ER_FLAG,CHALLAN_NO,BARCODE_CODING_SCHEME,EMP_CODE,VENDOR_EAN_NO,HSN_CODE,FIX_MRP,GST_PERCENTAGE  
				,BATCH_NO ,EXPIRY_DT  )    
				SELECT  DISTINCT BC.NEW_PRODUCT_CODE AS  PRODUCT_CODE,A.PRODUCT_NAME, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, A.PARA3_CODE, A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE,    
				A.PURCHASE_PRICE AS PURCHASE_PRICE,
				A.MRP,  GETDATE() AS LAST_UPDATE,     
				mst.MEMO_NO AS INV_NO, MST.MEMO_DT, MST.MEMO_DT AS RECEIPT_DT, MST.AC_CODE,     
				A.FORM_ID,A.WS_PRICE,A.ER_FLAG,A.CHALLAN_NO,A.BARCODE_CODING_SCHEME,  
				ISNULL(A.EMP_CODE,'') AS EMP_CODE,A.VENDOR_EAN_NO ,ISNULL(A.HSN_CODE,'0000000000') ,A.FIX_MRP,A.GST_PERCENTAGE  
				,A.BATCH_NO ,A.EXPIRY_DT  
				FROM SKU A
			    JOIN #tblGRNPSDET B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE 
			    JOIN #tblGRNPSmst MST (NOLOCK) ON B.MEMO_ID =MST.MEMO_ID 
				JOIN #tmpGenerateBarcode BC (NOLOCK) ON B.ROW_ID   = BC.PID_ROW_ID    
				LEFT OUTER JOIN SKU D ON BC.NEW_PRODUCT_CODE = D.PRODUCT_CODE    
				WHERE D.PRODUCT_CODE IS NULL    
				AND ISNULL(BC.NEW_PRODUCT_CODE,'')<>''
				          
				SET @NSTEP=80    
				     
				     
				-- INSERTING RECORDS IN SKU_OH    
				INSERT SKU_OH ( PRODUCT_CODE, DISCOUNT_AMOUNT, TAX_AMOUNT, FREIGHT, OTHER_CHARGES, ROUND_OFF, VALUE_ADD )    
				SELECT DISTINCT BC.NEW_PRODUCT_CODE AS  PRODUCT_CODE, SKU_OH.DISCOUNT_AMOUNT, SKU_OH.TAX_AMOUNT, SKU_OH.FREIGHT, SKU_OH.OTHER_CHARGES,     
				SKU_OH.ROUND_OFF, SKU_OH.VALUE_ADD   
				FROM #tblGRNPSDET A      
				JOIN SKU_OH ON A.PRODUCT_CODE =SKU_OH.PRODUCT_CODE 
				JOIN #tmpGenerateBarcode BC (NOLOCK) ON A.ROW_ID  = BC.PID_ROW_ID 
				LEFT OUTER JOIN SKU_OH B ON BC.NEW_PRODUCT_CODE = B.PRODUCT_CODE    
				WHERE   B.PRODUCT_CODE IS NULL 
				AND ISNULL(BC.PRODUCT_CODE,'')<>''
				   
				   
				UPDATE A SET PRODUCT_CODE =B.NEW_PRODUCT_CODE 
				FROM #tblGRNPSDET A WITH (ROWLOCK)
				JOIN #tmpGenerateBarcode B (NOLOCK) ON A.ROW_ID=B.PID_ROW_ID 
			
					

	     	Drop table if exists #tmpGenerateBarcode


	END TRY         
	BEGIN CATCH    		    
	  SET @CERRORMSG = 'PROCEDURE GENERATE_BATCHBARCODE_GRNPS : STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()    
    
	END CATCH    
     
	END_PROC:  



end