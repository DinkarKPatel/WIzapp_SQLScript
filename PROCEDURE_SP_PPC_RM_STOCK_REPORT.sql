CREATE PROCEDURE SP_PPC_RM_STOCK_REPORT
(
 @DFM_DT DATETIME='',
 @DTO_DT DATETIME='',
 @CAC_CODE VARCHAR(MAX)='',
 @CARTICLE_CODE VARCHAR(MAX)='',
 @NCBS INT=1,
 @CSECTION_CODE VARCHAR(MAX)='',
 @CSUB_SECTION_CODE VARCHAR(MAX)=''
)
AS
BEGIN
    DECLARE @DTSQL NVARCHAR(MAX) ,@CFILTER VARCHAR(MAX)
    SET @CFILTER=''
   
IF @CARTICLE_CODE<>''
   SET @CFILTER =@CFILTER+' AND ART.ARTICLE_CODE '+@CARTICLE_CODE+''
IF @CAC_CODE<>''
   SET @CFILTER =@CFILTER+' AND A.AC_CODE '+@CAC_CODE+''
IF @CSECTION_CODE<>''
   SET @CFILTER =@CFILTER+' AND SM.SECTION_CODE '+@CSECTION_CODE+''
IF @CSUB_SECTION_CODE<>''
   SET @CFILTER =@CFILTER+' AND SD.SUB_SECTION_CODE '+@CSUB_SECTION_CODE+''
       
  
    IF OBJECT_ID('TEMPDB..#TMPSTK','U') IS NOT NULL
       DROP TABLE #TMPSTK
 
    SELECT A.AC_CODE,
           B.ARTICLE_CODE , 
           C.PRODUCT_CODE ,C.PRODUCT_UID ,
           C.QUANTITY AS IN_QTY,
           A.RECEIPT_DT AS MEMO_DT 
    INTO #TMPSTK
    FROM PPC_PIM01106 A
    JOIN PPC_PID01106 B ON A.MRR_ID =B.MRR_ID 
    JOIN PPC_PID01106_BARCODE C ON B.ROW_ID =C.PID_ROW_ID 
    WHERE A.CANCELLED =0
  
    
     IF OBJECT_ID('TEMPDB..#TMPOUTSTK','U') IS NOT NULL
       DROP TABLE #TMPOUTSTK
    
    
    SELECT C.AC_CODE,
           A.PRODUCT_UID ,C.PRODUCT_CODE ,C.ARTICLE_CODE,A.QUANTITY AS OUT_QTY,
           CONVERT(VARCHAR(10),B.MEMO_DT,121) AS MEMO_DT  
    INTO #TMPOUTSTK
    FROM PPC_AGENCY_ISSUE_MATERIAL_DET  A
    JOIN PPC_AGENCY_ISSUE_MATERIAL_MST B ON A.MEMO_ID =B.MEMO_ID 
    JOIN PPC_SKU C ON A.PRODUCT_UID =C.PRODUCT_UID 
    WHERE B.CANCELLED =0 
    UNION ALL
    SELECT C.AC_CODE,
           A.PRODUCT_UID ,C.PRODUCT_CODE ,C.ARTICLE_CODE,A.QUANTITY AS OUT_QTY,
           B.RM_DT  AS MEMO_DT  
    FROM PPC_RMD01106  A
    JOIN PPC_RMM01106 B ON A.RM_ID =B.RM_ID 
    JOIN PPC_SKU C ON A.PRODUCT_UID =C.PRODUCT_UID 
    WHERE B.CANCELLED =0 
   
  SET @DTSQL=N'SELECT LM.AC_NAME,
          SM.SECTION_NAME ,SD.SUB_SECTION_NAME , ART.ARTICLE_NO ,
          ART.ARTICLE_NAME,
          A.PRODUCT_CODE , 
          SUM(A.OPS_IN-A.OPS_OUT_QTY) AS OPS_QTY,
          SUM(A.IN_QTY ) AS IN_QTY ,
          SUM(A.OUT_QTY ) AS OUT_QTY,
          BAL_QTY= SUM(A.OPS_IN+A.IN_QTY )-SUM(A.OPS_OUT_QTY+A.OUT_QTY ),
          UOM.UOM_NAME AS STOCK_UOM
   FROM 
   (
    SELECT A.AC_CODE,
           A.ARTICLE_CODE,A.PRODUCT_CODE ,
           SUM(CASE WHEN A.MEMO_DT<'''+CONVERT(VARCHAR(11),@DFM_DT,120)+'''  THEN IN_QTY ELSE 0 END) AS OPS_IN,
           SUM(CASE WHEN A.MEMO_DT BETWEEN  '''+CONVERT(VARCHAR(11),@DFM_DT,120)+''' AND  '''+CONVERT(VARCHAR(11),@DTO_DT,120)+'''   THEN IN_QTY ELSE 0 END) AS IN_QTY ,
           CAST(0 AS NUMERIC(10,3)) AS OPS_OUT_QTY ,
           CAST(0 AS NUMERIC(10,3)) AS OUT_QTY 
    FROM #TMPSTK A
    GROUP BY A.AC_CODE,A.ARTICLE_CODE,A.PRODUCT_CODE 
    UNION ALL
    SELECT A.AC_CODE,
			A.ARTICLE_CODE ,A.PRODUCT_CODE ,
			0 AS OPS_IN_QTY ,
			0 AS IN_QTY ,
			SUM(CASE WHEN A.MEMO_DT<'''+CONVERT(VARCHAR(11),@DFM_DT,120)+'''  THEN A.OUT_QTY ELSE 0 END) AS OPS_OUT_QTY,
			SUM(CASE WHEN A.MEMO_DT BETWEEN  '''+CONVERT(VARCHAR(11),@DFM_DT,120)+''' AND  '''+CONVERT(VARCHAR(11),@DTO_DT,120)+'''   THEN A.OUT_QTY ELSE 0 END) AS OUT_QTY 
			
    FROM #TMPOUTSTK A
    GROUP BY A.AC_CODE,A.ARTICLE_CODE ,A.PRODUCT_CODE
    ) A
    JOIN ARTICLE ART ON ART.ARTICLE_CODE=A.ARTICLE_CODE 
    JOIN SECTIOND SD ON SD.SUB_SECTION_CODE =ART.SUB_SECTION_CODE 
    JOIN SECTIONM SM ON SM.SECTION_CODE =SD.SECTION_CODE 
    JOIN LM01106 LM ON LM.AC_CODE=A.AC_CODE
    JOIN UOM ON UOM.UOM_CODE=ART.UOM_CODE
    WHERE 1=1  
    '+@CFILTER
    +' GROUP BY LM.AC_NAME,SM.SECTION_NAME ,SD.SUB_SECTION_NAME , ART.ARTICLE_NO ,
    ART.ARTICLE_NAME,A.PRODUCT_CODE ,UOM.UOM_NAME
    HAVING ('''+RTRIM(LTRIM(STR(@NCBS)))+'''=''0'' OR (SUM(A.OPS_IN+A.IN_QTY )-SUM(A.OPS_OUT_QTY+A.OUT_QTY ))>0) 
    ORDER BY LM.AC_NAME,SM.SECTION_NAME ,SD.SUB_SECTION_NAME ,ART.ARTICLE_NO ,A.PRODUCT_CODE '
    
    PRINT @DTSQL
    EXEC SP_EXECUTESQL @DTSQL
    
    
END
