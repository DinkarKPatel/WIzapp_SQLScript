CREATE PROCEDURE POSTACT_GST_SLS
(
	@DTTO DATETIME,
	@CDEPTID VARCHAR(4)='',
	@NSPID INT = 0,
	@NLOOP NUMERIC(1,0),
	@BLOC BIT=0	
)
AS
BEGIN
	PRINT 'START POSTING SLS-1:'+CONVERT(VARCHAR,GETDATE(),113)
	
	DECLARE @DGSTCUTOFFDATE DATETIME='2017-07-01'
							
	truncate table  sls_posting_log
		
    DECLARE @CSTEP VARCHAR(10),@BPOSTDISCOUNTSEPARATELY BIT,@CDISCACCODE VARCHAR(10),@BPOSTFREIGHTSEPARATELY	BIT,
			@CUPDATESALEATMRP VARCHAR(10),@BPOSTOCTROISEPARATELY BIT,@bRetainCustomerLedger BIT,@cRetainCustomerLedger VARCHAR(2),
			@BPOSTINSURANCESEPARATELY BIT,@CINSURANCEACCODE VARCHAR(10),@BBLANKACFOUND BIT,
			@BPOSTOTHERCHARGESSEPARATELY BIT,@COTHERCHARGESACCODE VARCHAR(10),@BPOSTROUNDOFFSEPARATELY BIT,@NCTR NUMERIC(10,0),
			@NSUBTOTAL NUMERIC(14,2),@NTAXAMOUNT NUMERIC(14,2), @CPURACCODE VARCHAR(50),@CTAXACCODE VARCHAR(100),
			@LPOSTTAXSEPARATELY NUMERIC(14,2),@CCM_NO VARCHAR(50),@DCM_DT DATETIME,@LOUTSTATIONPARTY BIT,@TMPDR NUMERIC(14,2),
			@TMPCR NUMERIC(14,2),@CCURSTATECODE	VARCHAR(10),@CVMID	VARCHAR(40),
			@CLASTBILLNO VARCHAR(40),@DTMPVENDORBILLDT DATETIME,@CRMLIST VARCHAR(300),@NTMPCREDITDAYS NUMERIC(10),
			@NTMPCRDISCOUNTPERCENTAGE NUMERIC(14,2),@DLASTINVDT	DATETIME,@CVOUCHERCODE VARCHAR(10),
			@COLDBILLTYPE VARCHAR(10),@CLASTACCODE VARCHAR(10),@CLASTPARTYNAME VARCHAR(100),@NTOTQUANTITY NUMERIC(14,2),
			@NTOTNETAMOUNT NUMERIC(14,2),@CDEPTNAME VARCHAR(100),@CVOUCHERNO VARCHAR(10),@CCONTRADEPTID VARCHAR(20),
			@CSLSDEPTID VARCHAR(20),@CERRORMSG VARCHAR(MAX),@CWIZCLIPGVSACCODE CHAR(10),@NROWSAFFECTED INT,
			@NRETAILSALECRAMT NUMERIC(10,2),@NRETAILSALEDRAMT NUMERIC(10,2),@CSETOFFACCODE CHAR(10),
			@cFirstName VARCHAR(100),@cLastName VARCHAR(100),@cMobile VARCHAR(100),@cUserCustCode VARCHAR(50),
			@cNewAcname VARCHAR(100),@cPostingonCustCode VARCHAR(2)
			
	SET @CSTEP=10

	DECLARE @tAdjLocs TABLE (loc_mode NUMERIC(1,0))

	INSERT @tAdjLocs
	SELECT 1 --- Source Loc dR
	UNION
	SELECT 2 --- Target Loc cR
	UNION
	SELECT 3 --- Target Loc DR

	insert sls_posting_log (sls_step,last_update)
	select @cStep,getdate()

	DECLARE @CPARTYACCODE VARCHAR(10),@CPARTYSTATECODE VARCHAR(10),@NNETAMOUNT NUMERIC(14,2),
			@NDISCAMOUNT NUMERIC(14,2),@NFREIGHT NUMERIC(14,2),	@NOTHER NUMERIC(14,2),@NROUNDOFF NUMERIC(14,2),
			@NDRTOTAL NUMERIC(14,2),@NCRTOTAL NUMERIC(14,2),@DCUTOFFDATE VARCHAR(20),@CXNTYPE VARCHAR(10)
			,@CAC_CODE VARCHAR(20),@CVDID VARCHAR(40),@CFINYEARSLS VARCHAR(10)
			,@cCREATELEDGERFORCUSTOMER varchar(2),@BCREATELEDGERFORCUSTOMER BIT,@CFINYEARFORLEDGERGEN VARCHAR(10) 
			,@CPREFIXFORLEDGERGEN VARCHAR(10),@BPOSTCONTROLACSALEENTRIESBILLBYBILL BIT,@BPOSTCONTROLACCNENTRIESBILLBYBILL BIT,@CLASTVDID INT,@NARCT INT
			,@CPOSTACCODE VARCHAR(20),@NARCTYPE	NUMERIC(2),@CNARRATION VARCHAR(500)
			,@CROFFACCODE CHAR(10),@CCASHACCODE CHAR(10),@CCUSTOMERCONTROLACCODESALE CHAR(10)
			,@CCUSTOMERCONTROLACCODECN CHAR(10),@CADVGSTRCVACCODE CHAR(10)
			,@DOLDCMDT DATETIME,@COLDCMNO VARCHAR(15),@CCURLOCID VARCHAR(5),@CHOLOCID VARCHAR(5)
			,@CRETAILSALEACCODE CHAR(10),@CFINYEARPOSTING VARCHAR(10),@CPOSTSALESPERSONINFO VARCHAR(2)
					
	
	SELECT @CHOLOCID =LTRIM(VALUE) FROM CONFIG 
	WHERE CONFIG_OPTION='HO_LOCATION_ID'

	SELECT @CCURLOCID = DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID
	
	IF @CCURLOCID IS NULL
		SELECT @CCURLOCID = LTRIM(VALUE) FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='HO_LOCATION_ID'

	SELECT @CRETAILSALEACCODE=VALUE FROM GST_ACCOUNTS_CONFIG_DET_1 WHERE XN_TYPE='SLS'
	AND COLUMNNAME='RETAIL_SALE_AC_CODE'

	SET @CRETAILSALEACCODE=ISNULL(@CRETAILSALEACCODE,'')

	SELECT TOP 1 @CPOSTSALESPERSONINFO = VALUE FROM CONFIG WHERE  CONFIG_OPTION='POST_SALESPERSON_INFO'
	SET @cPostingonCustCode=''
	
	SET @CPOSTSALESPERSONINFO=ISNULL(@CPOSTSALESPERSONINFO,'')
	
	SET @CFINYEARPOSTING='01'+DBO.FN_GETFINYEAR(@DTTO)			
	
	SET @CUPDATESALEATMRP=''			
	
    SET @CSTEP=20

	insert sls_posting_log (sls_step,last_update)
	select @cStep,getdate()

	IF OBJECT_ID('TEMPDB..#ERRORS','U') IS NOT NULL
		DROP TABLE #ERRORS    
		
    --THIS TABLE VARIABLE STORE ERROR OF OF MEMO ID
    CREATE TABLE #ERRORS
	(
		XN_TYPE VARCHAR(10),SOURCE_TABLE VARCHAR(200),COLUMNNAME VARCHAR(200),GST_PERCENTAGE NUMERIC(6,2),ERR_DESC VARCHAR(500)
	)   
    
    SET @CSTEP=30
	IF OBJECT_ID('TEMPDB..#VCHC','U') IS NOT NULL
		DROP TABLE #VCHC

    CREATE TABLE  #VCHC
	(
		AC_CODE CHAR(10),NARRATION VARCHAR(200),XN_NO VARCHAR(30),
		XN_DT DATETIME,DEPT_ID VARCHAR(4),AMOUNT NUMERIC(14,4),XN_ID VARCHAR(50),
		REF_BILL_NO VARCHAR(50),REF_BILL_DATE DATETIME,	ENTRY_ID INT IDENTITY
		,CRDAYS NUMERIC(5),CANCELLED BIT,cost_center_dept_id VARCHAR(4)
	)
	
	SET @CSTEP=40
	insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()

	IF OBJECT_ID('tempdb..#VDC','u') IS NOT NULL
		DROP TABLE #VDC

	CREATE TABLE #VDC
	(
		VD_ID VARCHAR(100),				VM_ID VARCHAR(40),				AC_CODE CHAR(10), 
		NARRATION VARCHAR(200),			DEBIT_AMOUNT NUMERIC(14,4),		CREDIT_AMOUNT NUMERIC(14,4),
		X_TYPE CHAR(2), 				VS_AC_CODE CHAR(10),	 		REF_BILL_NO VARCHAR(40), 
		CREDIT_DAYS NUMERIC(10),		CR_DISCOUNT_PERCENTAGE NUMERIC(14,2),		
		VAT_ENTRY BIT,REF_BILL_DATE DATETIME, AC_NAME VARCHAR(100),VCH_ENTRY_ID INT,cost_center_dept_id VARCHAR(4),
		location_code VARCHAR(4)
	)

	create index ind_vdc_vmidaccode on #vdc (vm_id,ac_code)

	
	SET @CSTEP=50
	IF OBJECT_ID('tempdb..#VMC','u') IS NOT NULL
		DROP TABLE #VMC

	CREATE TABLE #VMC
	(
		VM_ID VARCHAR(400), 			VOUCHER_NO VARCHAR(400), 		VOUCHER_DT DATETIME, 
		VOUCHER_CODE CHAR(10), 		DEPT_ID VARCHAR(4),				BILL_TYPE VARCHAR(300),
		BILL_NO VARCHAR(200), 			BILL_ID VARCHAR(220), 			BILL_DT DATETIME, 
		BILL_AC_CODE VARCHAR(100),		DRTOTAL NUMERIC(20,2),			CRTOTAL NUMERIC(20,2), 
		CASH_VOUCHER BIT, 				SALE_VOUCHER BIT, 				QUANTITY NUMERIC(20,2), 
		ANGADIA_CODE CHAR(70), 			LR_NO VARCHAR(500), 			LR_DT DATETIME,
		PARTY_NAME VARCHAR(1000),		NET_AMOUNT NUMERIC(20,2), 		BILL_STATUS VARCHAR(1000),
		RM_LIST VARCHAR(3000), 		CANCELLED BIT,					DEPT_NAME VARCHAR(100),
		VOUCHER_TYPE VARCHAR(100),VM_ORDER NUMERIC(1)
	)
	
	SET @CSTEP=60
	IF OBJECT_ID('tempdb..#VLINK','u') IS NOT NULL
		DROP TABLE #VLINK

	CREATE TABLE #VLINK 
	(
		VM_ID VARCHAR(100),MEMO_ID VARCHAR(100),XN_TYPE VARCHAR(20),LAST_UPDATE DATETIME
	)
	
	IF OBJECT_ID('tempdb..#TBILL_BY_BILL_REF','u') IS NOT NULL
		DROP TABLE #TBILL_BY_BILL_REF

	CREATE TABLE #TBILL_BY_BILL_REF (VD_ID VARCHAR(40),REF_NO VARCHAR(40),AMOUNT NUMERIC(18,4),LAST_UPDATE DATETIME
									,X_TYPE VARCHAR(20),CR_DAYS NUMERIC(5),VM_ID VARCHAR(100))
	
	
	SELECT TOP 1 @DCUTOFFDATE=CUTOFFDATE FROM GST_ACCOUNTS_CONFIG_MST WHERE XN_TYPE='SLS'
	
	IF @DCUTOFFDATE<@DGSTCUTOFFDATE-1
		SET @DCUTOFFDATE='2017-06-30'
			
	SET @CFINYEARFORLEDGERGEN=@CCURLOCID+DBO.FN_GETFINYEAR(@DTTO)  
	SET @CPREFIXFORLEDGERGEN=@CFINYEARFORLEDGERGEN
	
	SET @DCUTOFFDATE=ISNULL(@DCUTOFFDATE,'')
	
	SET @CSTEP=70
	insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()

	SET @CVOUCHERCODE = '0000000007'
    BEGIN TRY
			SET @CSTEP=72


			--GETTING CASH MEMO DATES FOR WHOM POSTING HAVE TO BE DONE...
			IF OBJECT_ID('#POSTINGDATES','U') IS NOT NULL
				DROP TABLE #POSTINGDATES


			CREATE TABLE #POSTINGDATES(DT DATETIME,POSTED_MEMO_ID VARCHAR(20),LAST_UPDATE DATETIME,location_code VARCHAR(4))

			PRINT 'START POSTING SLS-1.1:'+CONVERT(VARCHAR,GETDATE(),113)
			
			--SELECT ACCOUNTS_POSTING_DEPT_ID,DEPT_ID FROM LOCATION
			
			--SELECT @DCUTOFFDATE AS DCUTOFFDATE,@CCURLOCID AS CCURLOCID,@CDEPTID AS CDEPTID,@DGSTCUTOFFDATE AS DGSTCUTOFFDATE,@DTTO AS DTTO,@CFINYEARPOSTING AS CFINYEARPOSTING
							
			SET @CSTEP=74
			INSERT #POSTINGDATES(DT,POSTED_MEMO_ID,LAST_UPDATE,location_code )
			SELECT A.CM_DT,A.POSTED_MEMO_ID,A.MAX_LUPD,a.location_Code 
			FROM (
			SELECT a.location_Code +CONVERT(VARCHAR(10),A.CM_DT,112) AS POSTED_MEMO_ID,MAX(A.LAST_UPDATE) AS MAX_LUPD,A.CM_DT,SUM(NET_AMOUNT) AS NET_AMOUNT,
			       a.location_Code 
	        FROM CMM01106 A (NOLOCK)
	        JOIN LOCATION B (NOLOCK) ON A.location_Code =B.DEPT_ID
			LEFT JOIN loc_accounting_company lac1 (NOLOCK) ON lac1.pan_no=b.PAN_NO
			LEFT JOIN loc_accounting_company lac2 (NOLOCK) ON lac2.pan_no=SUBSTRING(b.loc_gst_no,3,10)
	        WHERE (@CDEPTID='' OR A.location_Code =@CDEPTID)
	        AND B.ACCOUNTS_POSTING_DEPT_ID=@CCURLOCID
	        AND A.CANCELLED=0 AND A.CM_MODE=1
	        /*RECEIPTS/PAYMENTS CM_DT IS LESS THAN THE SPECIFIED DATE.*/
	        AND A.CM_DT BETWEEN @DGSTCUTOFFDATE AND @DTTO AND A.FIN_YEAR=@CFINYEARPOSTING
	        /*IF CUTOFF DATE IS SPECIFIED, CONSIDER RECEIPTS/PAYMENTS AFTER THE CUTOFF DATE*/
	        AND (ISNULL(@DCUTOFFDATE,'')='' OR A.CM_DT>@DCUTOFFDATE) 
			AND (lac1.pan_no IS NOT NULL OR lac2.pan_no IS NOT NULL)
	        /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/
	        GROUP BY A.CM_DT,A.location_Code ) A
			
			
--			SELECT 'CHECK SLSPOSTINGDATES',* FROM #POSTINGDATES
			
			PRINT 'START POSTING SLS-1.2:'+CONVERT(VARCHAR,GETDATE(),113)	      	
			

			SET @CSTEP=80
			insert sls_posting_log (sls_step,last_update)
			select @cStep,getdate()

			IF OBJECT_ID('TEMPDB..#SLSTABLE','U') IS NOT NULL
				DROP TABLE #SLSTABLE 
			
			SET @CSTEP=90
			--THIS TABLE STORE ALL PENDING MEMO_ID 
			CREATE TABLE #SLSTABLE(MEMO_ID VARCHAR(30),CM_NO VARCHAR(20),CM_DT DATETIME,MODE VARCHAR(10),customer_ac_code CHAR(10),customer_code VARCHAR(15))
			
			SET @CSTEP=100
			--GETTING LIST OF RECEIPTS/PAYMENTS THAT QUALIFY FOR VOUCHER POSTING
			INSERT INTO #SLSTABLE (MEMO_ID,CM_NO,CM_DT,MODE,customer_code)
	        SELECT A.CM_ID,A.CM_NO,A.CM_DT,'SLS' AS MODE,a.CUSTOMER_CODE
	        FROM CMM01106 A (NOLOCK)
	        JOIN LOCATION SL (NOLOCK) ON SL.DEPT_ID =A.location_Code 
	        JOIN #POSTINGDATES B ON A.CM_DT=B.DT AND b.location_code =a.location_Code 
	        WHERE A.CANCELLED=0 AND A.CM_MODE=1
	        /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO LOCATION.*/
	        AND ISNULL(memo_type,0) IN (0,1)

		    SET @CSTEP=160
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
				
		   SELECT @CCASHACCODE = VALUE
		   FROM GST_ACCOUNTS_CONFIG_DET_PAYMODES WHERE COLUMNNAME='CASH_AC_CODE'
		   
		   SELECT @CCUSTOMERCONTROLACCODESALE = VALUE
		   FROM config (nolock) WHERE config_option='CUSTOMER_CONTROL_AC_CODE'

		   SET @CCUSTOMERCONTROLACCODECN = @CCUSTOMERCONTROLACCODESALE

		   SELECT TOP 1 @CWIZCLIPGVSACCODE = VALUE FROM GST_ACCOUNTS_CONFIG_DET_PAYMODES WHERE COLUMNNAME='WIZCLIP_GVS_AC_CODE'
		   		   		   
		   SELECT @CROFFACCODE = VALUE
		   FROM GST_ACCOUNTS_CONFIG_DET_OTHERS WHERE XN_TYPE='SLS' AND COLUMNNAME='ROFF_AC_CODE'
		   
		   SELECT TOP 1 @cCREATELEDGERFORCUSTOMER= value  FROM config (NOLOCK) WHERE config_option='CREATE_LEDGER_FOR_EACHCUSTOMER'
		   		   
		   SET @BCREATELEDGERFORCUSTOMER=0
		   IF ISNULL(@cCREATELEDGERFORCUSTOMER,'')='1'
			 SET @BCREATELEDGERFORCUSTOMER=1
		   
		   SET @bRetainCustomerLedger=0
		   IF @BCREATELEDGERFORCUSTOMER=0
		   BEGIN
			   SELECT TOP 1 @cRetainCustomerLedger=value FROM config (NOLOCK) WHERE config_option='RetainCustomerLedgerInPosting'
			   IF ISNULL(@cRetainCustomerLedger,'')='1'
			   BEGIN
					SET @bRetainCustomerLedger=1
					UPDATE a SET customer_ac_code=b.ac_code FROM #SLSTABLE a JOIN custdym b (NOLOCK) ON b.customer_code=a.customer_code
					WHERE ISNULL(b.ac_code,'') NOT IN ('','0000000000')

					UPDATE a SET customer_ac_code=b.ac_code FROM #SLSTABLE a
					JOIN lmp01106 b (NOLOCK) ON b.CUSTOMER_CODE=a.customer_code
					WHERE ISNULL(b.customer_code,'') NOT IN ('','0000000000','000000000000')
			   END
		   END

		   SELECT TOP 1 @CADVGSTRCVACCODE=VALUE FROM GST_ACCOUNTS_CONFIG_DET_OTHERS 
		   WHERE XN_TYPE='ARC' AND COLUMNNAME='GST_ADVANCE_RECEIVED_AC_CODE'
					   		    		   
		    SET @CSTEP=180
	    insert sls_posting_log (sls_step,last_update)
		select @cStep,getdate()

		    /*
				IF CREATE LEDGER FOR EACH CUSTOMER IS SELECTED, THEN LEDGER ACCOUNT FOR EACH CUSTOMER WOULD BE 
				POSTED WITH ACCOUNT ELSE CUSTOMER CONTROL ACCOUNT WOULD BE POSTED.SO, IF CREATE LEDGER FOR
				EACH CUSTOMER IS FALSE, DONOT PROCEED IF CUSTOMER CONTROL ACCOUNT IS NOT DEFINED.
			*/
		    SET @CSTEP=300
		    PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
					    
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
			
			CREATE INDEX IX_TEMP_ARCTABLE_RM_ID ON #SLSTABLE(MEMO_ID)

		   SET @CSTEP=310
			---GETTING LIST OF ALL ERROR FROM RECEIPTS/PAYMENTS AND CONVERT MRN TO BILL
		   	   
		   IF OBJECT_ID('TEMPDB..#V_PROCESS_PAYMODES','U') IS NOT NULL
				DROP TABLE #V_PROCESS_PAYMODES		
		   		   		   
		   SELECT A.PAYMODE_CODE, PAYMODE_GRP_CODE,
		   CONVERT(VARCHAR(50),A.PAYMODE_CODE+'_DOC') AS COLUMNNAME,
		   '0000000000' AS AC_CODE,CONVERT(VARCHAR(200),' A/C') AS COLUMNDESC 
		   INTO #V_PROCESS_PAYMODES FROM PAYMODE_XN_DET A
		   JOIN #SLSTABLE B ON A.MEMO_ID=B.MEMO_ID
		   JOIN PAYMODE_MST C ON C.PAYMODE_CODE=A.PAYMODE_CODE
		   WHERE A.XN_TYPE='SLS' AND A.PAYMODE_CODE NOT IN('0000001','0000004','CMR0001') AND C.PAYMODE_GRP_CODE NOT IN ('0000001')
		   GROUP BY A.PAYMODE_CODE,PAYMODE_GRP_CODE
	   	  
	   	   
	   	   SET @CSTEP=312	
		   INSERT #V_PROCESS_PAYMODES (PAYMODE_CODE, COLUMNNAME,PAYMODE_GRP_CODE,AC_CODE,COLUMNDESC)
		   SELECT PAYMODE_CODE,PAYMODE_CODE+'_COMM' AS COLUMNNAME,PAYMODE_GRP_CODE,'0000000000' AS AC_CODE,
		   ' COMMISSION A/C'
		   FROM #V_PROCESS_PAYMODES A WHERE PAYMODE_GRP_CODE='0000002'
			
		   SET @CSTEP=315
		   insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()
		   
		   INSERT #V_PROCESS_PAYMODES (PAYMODE_CODE,PAYMODE_GRP_CODE,COLUMNNAME,COLUMNDESC,AC_CODE)
		   SELECT TOP 1 '' AS PAYMODE_CODE,'' AS PAYMODE_GRP_CODE,
		   'CASH_AC_CODE' AS COLUMNNAME,'CASH A/C' AS COLUMNDESC,'0000000000' AS AC_CODE 
		   FROM PAYMODE_XN_DET A
		   JOIN #SLSTABLE B ON A.MEMO_ID=B.MEMO_ID
		   JOIN PAYMODE_MST C ON C.PAYMODE_CODE=A.PAYMODE_CODE
		   WHERE A.XN_TYPE='SLS' AND C.PAYMODE_GRP_CODE='0000001'
		  
		   		   
		   SET @CSTEP=320	
		   insert sls_posting_log (sls_step,last_update)
		   select @cStep,getdate()

		   IF OBJECT_ID('TEMPDB..#TMPSLRVAT','U') IS NOT NULL
				DROP TABLE #TMPSLRVAT
			
			SELECT ROW_ID INTO 	#TMPSLRVAT FROM CMD01106 A (NOLOCK)
			JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID 
			WHERE ISNULL(A.REF_SLS_MEMO_DT,'')<@DGSTCUTOFFDATE
			AND ISNULL(A.REF_SLS_MEMO_DT,'')<>'' AND A.QUANTITY<0 
			AND (ISNULL(A.IGST_AMOUNT,0)+ISNULL(A.CGST_AMOUNT,0)+ISNULL(A.SGST_AMOUNT,0))=0
			AND ISNULL(A.TAX_AMOUNT,0)<>0

		   SET @CSTEP=325	
		   insert sls_posting_log (sls_step,last_update)
		   select @cStep,getdate()
			
			IF OBJECT_ID('TEMPDB..#V_PROCESS','U') IS NOT NULL
				DROP TABLE #V_PROCESS

		   SET @CSTEP=330
		   insert sls_posting_log (sls_step,last_update)
		   select @cStep,getdate()			
			--CREATE INDEX IND_SLRVAT ON #TMPSLRVAT (ROW_ID)
			SELECT 'SLS' AS POSTING_XN_TYPE
				  ,SC.SALE_AC_CODE
				  ,SC.TAX_AC_CODE
				  ,CONVERT(NUMERIC(6,2),0) AS GST_PERCENTAGE
				  ,CONVERT(NUMERIC(6,2),0) AS OTHER_CHARGES_GST_PERCENTAGE
				  ,CONVERT(NUMERIC(10,2),SUM(B.TAX_AMOUNT*-1)) AS TAX_AMOUNT
				  ,'0000000000' AS IGST_REVENUE_AC_CODE
				  ,'0000000000' AS IGST_TAX_AC_CODE
				  ,CONVERT(NUMERIC(10,2),0) AS IGST_AMOUNT
				  ,'0000000000' AS LGST_REVENUE_AC_CODE
				  ,'0000000000' AS CGST_TAX_AC_CODE
				   ,'0000000000' AS SGST_TAX_AC_CODE
				  ,'0000000000' AS OTHER_CHARGES_IGST_REVENUE_AC_CODE
				   ,'0000000000' AS OTHER_CHARGES_IGST_TAX_AC_CODE
				  ,'0000000000' AS OTHER_CHARGES_LGST_REVENUE_AC_CODE
				  ,'0000000000' AS OTHER_CHARGES_CGST_TAX_AC_CODE
				  ,'0000000000' AS OTHER_CHARGES_SGST_TAX_AC_CODE
				  ,CONVERT(NUMERIC(10,2),0) AS CGST_AMOUNT
				  ,CONVERT(NUMERIC(10,2),0) AS SGST_AMOUNT
				  ,CONVERT(NUMERIC(10,2),SUM( ((B.NET-ISNULL(B.CMM_DISCOUNT_AMOUNT,0)+(CASE WHEN TAX_METHOD=2 
				  THEN B.TAX_AMOUNT ELSE 0 END))
				   - B.TAX_AMOUNT)*-1 )) AS SALE_AMOUNT			  
				  ,CONVERT(NUMERIC(10,2),0) AS  OTHERCHARGES
				  ,'RETAIL SALES FOR DATE :'+CONVERT(VARCHAR,A.CM_DT,105) AS SALE_NARRATION
				  ,'SALES TAX FOR DATE :'+CONVERT(VARCHAR,A.CM_DT,105) AS TAX_NARRATION
				  ,'' AS CM_NO, A.CM_DT, A.location_Code  AS DEPT_ID
				  ,SECTION_CODE,ART.SUB_SECTION_CODE,null AS GST_CESS_AMOUNT
				  ,CONVERT(NUMERIC(6,2),0) GST_CESS_PERCENTAGE,convert(varchar(10),'0000000000') AS GST_CESS_AC_CODE

			INTO #V_PROCESS FROM CMM01106 A (NOLOCK)   
			JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID    
			JOIN SLSCONFIGDET_1 SC ON B.TAX_PERCENTAGE = SC.TAX_PERCENTAGE
			JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID
			JOIN #TMPSLRVAT C ON C.ROW_ID=B.ROW_ID
			JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=B.PRODUCT_CODE
			JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE
			JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE
			GROUP BY A.CM_DT,a.location_Code ,SC.SALE_AC_CODE,SC.TAX_AC_CODE,SECTION_CODE,ART.SUB_SECTION_CODE  
			

		   SET @CSTEP=335
		   insert sls_posting_log (sls_step,last_update)
		   select @cStep,getdate()			
			
			INSERT #V_PROCESS (POSTING_XN_TYPE,SALE_AC_CODE,TAX_AC_CODE,GST_PERCENTAGE,OTHER_CHARGES_GST_PERCENTAGE,TAX_AMOUNT,
			IGST_REVENUE_AC_CODE,IGST_TAX_AC_CODE,IGST_AMOUNT,LGST_REVENUE_AC_CODE,CGST_TAX_AC_CODE,SGST_TAX_AC_CODE
				   ,OTHER_CHARGES_IGST_REVENUE_AC_CODE,OTHER_CHARGES_IGST_TAX_AC_CODE,OTHER_CHARGES_LGST_REVENUE_AC_CODE
				  ,OTHER_CHARGES_CGST_TAX_AC_CODE,OTHER_CHARGES_SGST_TAX_AC_CODE,CGST_AMOUNT,SGST_AMOUNT,SALE_AMOUNT			  
				  ,OTHERCHARGES,SALE_NARRATION,TAX_NARRATION,CM_NO,CM_DT,DEPT_ID,SECTION_CODE,SUB_SECTION_CODE) 	
			SELECT 'SLS' AS POSTING_XN_TYPE,
				 '' AS SALE_AC_CODE,
				   '' AS TAX_AC_CODE,	
				   ISNULL(B.GST_PERCENTAGE,0),
				  CONVERT(NUMERIC(6,2),0) AS OTHER_CHARGES_GST_PERCENTAGE,				   
				   0 AS TAX_AMOUNT,
				   '0000000000' AS IGST_REVENUE_AC_CODE,
				   '0000000000' AS IGST_TAX_AC_CODE,
				   0 AS IGST_AMOUNT,	
				   '0000000000' AS LGST_REVENUE_AC_CODE
				  ,'0000000000' AS CGST_TAX_AC_CODE,
				  '0000000000' AS SGST_TAX_AC_CODE,
				  '0000000000' AS OTHER_CHARGES_IGST_REVENUE_AC_CODE,
				   '0000000000' AS OTHER_CHARGES_IGST_TAX_AC_CODE,
				   '0000000000' AS OTHER_CHARGES_LGST_REVENUE_AC_CODE,
				  '0000000000' AS OTHER_CHARGES_CGST_TAX_AC_CODE,
				  '0000000000' AS OTHER_CHARGES_SGST_TAX_AC_CODE
				  ,SUM(CGST_AMOUNT)*-1 AS CGST_AMOUNT
				  ,SUM(SGST_AMOUNT)*-1 AS SGST_AMOUNT
				  ,SUM(XN_VALUE_WITHOUT_GST*-1) AS SALE_AMOUNT		
				  ,0 AS OTHERCHARGES			  		  	  		  
				  ,'RETAIL SALES (LOCAL) FOR DATE :'+CONVERT(VARCHAR,A.CM_DT,105)
				  ,'LOCAL GST FOR DATE :'+CONVERT(VARCHAR,A.CM_DT,105)
				  ,'' AS CM_NO, A.CM_DT, A.location_Code  AS DEPT_ID  
				  ,SECTION_CODE,ART.SUB_SECTION_CODE  
			FROM CMM01106 A (NOLOCK)   
			JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID    
			JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
			JOIN CUSTDYM CUS (NOLOCK) ON CUS.CUSTOMER_CODE=A.CUSTOMER_CODE
			JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=A.location_Code 
			LEFT OUTER JOIN #TMPSLRVAT C  ON C.ROW_ID=B.ROW_ID
			JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=B.PRODUCT_CODE
			JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE
			JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE
			WHERE C.ROW_ID IS NULL	AND (B.GST_PERCENTAGE=0 OR IGST_AMOUNT=0)
			GROUP BY A.CM_DT,a.location_Code ,B.GST_PERCENTAGE,SECTION_CODE,ART.SUB_SECTION_CODE  	

		   SET @CSTEP=340
		   insert sls_posting_log (sls_step,last_update)
		   select @cStep,getdate()			


			INSERT #V_PROCESS (POSTING_XN_TYPE,SALE_AC_CODE,TAX_AC_CODE,GST_PERCENTAGE,OTHER_CHARGES_GST_PERCENTAGE,TAX_AMOUNT,
			IGST_REVENUE_AC_CODE,IGST_TAX_AC_CODE,IGST_AMOUNT,LGST_REVENUE_AC_CODE,CGST_TAX_AC_CODE,SGST_TAX_AC_CODE
				   ,OTHER_CHARGES_IGST_REVENUE_AC_CODE,OTHER_CHARGES_IGST_TAX_AC_CODE,OTHER_CHARGES_LGST_REVENUE_AC_CODE
				  ,OTHER_CHARGES_CGST_TAX_AC_CODE,OTHER_CHARGES_SGST_TAX_AC_CODE,CGST_AMOUNT,SGST_AMOUNT,SALE_AMOUNT			  
				  ,OTHERCHARGES,SALE_NARRATION,TAX_NARRATION,CM_NO,CM_DT,DEPT_ID,SECTION_CODE,SUB_SECTION_CODE) 	
			SELECT 'SLS' AS POSTING_XN_TYPE,
				   '' AS SALE_AC_CODE,
				   '' AS TAX_AC_CODE,
				   ISNULL(B.GST_PERCENTAGE,0),	
				   CONVERT(NUMERIC(6,2),0) AS OTHER_CHARGES_GST_PERCENTAGE,
				   0 AS TAX_AMOUNT,
				   '0000000000' AS IGST_REVENUE_AC_CODE,
				   '0000000000' AS IGST_TAX_AC_CODE,
				   SUM(IGST_AMOUNT)*-1 AS IGST_AMOUNT,	
				   '0000000000' AS LGST_REVENUE_AC_CODE,
				  '0000000000' AS CGST_TAX_AC_CODE,
				  '0000000000' AS SGST_TAX_AC_CODE,
				   '0000000000' AS OTHER_CHARGES_IGST_REVENUE_AC_CODE,
				   '0000000000' AS OTHER_CHARGES_IGST_TAX_AC_CODE,
				   '0000000000' AS OTHER_CHARGES_LGST_REVENUE_AC_CODE,
				  '0000000000' AS OTHER_CHARGES_CGST_TAX_AC_CODE,
				  '0000000000' AS OTHER_CHARGES_SGST_TAX_AC_CODE				  
				  ,0 AS CGST_AMOUNT
				  ,0 AS SGST_AMOUNT
				  ,SUM(XN_VALUE_WITHOUT_GST*-1) AS SALE_AMOUNT
				  ,CONVERT(NUMERIC(10,2),0) AS  OTHERCHARGES
				  ,'RETAIL SALES (IGST) FOR DATE :'+CONVERT(VARCHAR,A.CM_DT,105)
				  ,'IGST FOR DATE :'+CONVERT(VARCHAR,A.CM_DT,105)
				  ,'' AS CM_NO, A.CM_DT, A.location_Code  AS DEPT_ID,SECTION_CODE,ART.SUB_SECTION_CODE    
			FROM CMM01106 A (NOLOCK)   
			JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID    
			JOIN CUSTDYM CUS (NOLOCK) ON CUS.CUSTOMER_CODE=A.CUSTOMER_CODE
			JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=A.location_Code 
			JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
			LEFT OUTER JOIN #TMPSLRVAT C  ON C.ROW_ID=B.ROW_ID
			JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=B.PRODUCT_CODE
			JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE
			JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE
			WHERE C.ROW_ID IS NULL AND IGST_AMOUNT<>0
			GROUP BY A.CM_DT,a.location_Code ,B.GST_PERCENTAGE,SECTION_CODE,ART.SUB_SECTION_CODE  	

		   SET @CSTEP=345
		   insert sls_posting_log (sls_step,last_update)
		   select @cStep,getdate()			

				
			INSERT #V_PROCESS (POSTING_XN_TYPE,SALE_AC_CODE,TAX_AC_CODE,GST_PERCENTAGE,OTHER_CHARGES_GST_PERCENTAGE,TAX_AMOUNT,
			IGST_REVENUE_AC_CODE,IGST_TAX_AC_CODE,IGST_AMOUNT,LGST_REVENUE_AC_CODE,CGST_TAX_AC_CODE,SGST_TAX_AC_CODE
				   ,OTHER_CHARGES_IGST_REVENUE_AC_CODE,OTHER_CHARGES_IGST_TAX_AC_CODE,OTHER_CHARGES_LGST_REVENUE_AC_CODE
				  ,OTHER_CHARGES_CGST_TAX_AC_CODE,OTHER_CHARGES_SGST_TAX_AC_CODE,CGST_AMOUNT,SGST_AMOUNT,SALE_AMOUNT			  
				  ,OTHERCHARGES,SALE_NARRATION,TAX_NARRATION,CM_NO,CM_DT,DEPT_ID,SECTION_CODE,SUB_SECTION_CODE) 	
			SELECT 'SLS' AS POSTING_XN_TYPE,
			       '' AS SALE_AC_CODE,
				   '' AS TAX_AC_CODE,	
				   A.OTHER_CHARGES_GST_PERCENTAGE AS GST_PERCENTAGE,
				   A.OTHER_CHARGES_GST_PERCENTAGE AS OTHER_CHARGES_GST_PERCENTAGE,
				   0 AS TAX_AMOUNT,
				   '0000000000' AS IGST_REVENUE_AC_CODE,
				   '0000000000' AS IGST_TAX_AC_CODE,
				   SUM(A.OTHER_CHARGES_IGST_AMOUNT*-1) AS IGST_AMOUNT,	
				   '0000000000' AS LGST_REVENUE_AC_CODE,
				  '0000000000' AS CGST_TAX_AC_CODE,
				  '0000000000' AS SGST_TAX_AC_CODE,
				   '0000000000' AS OTHER_CHARGES_IGST_REVENUE_AC_CODE,
				   '0000000000' AS OTHER_CHARGES_IGST_TAX_AC_CODE,
				   '0000000000' AS OTHER_CHARGES_LGST_REVENUE_AC_CODE,
				  '0000000000' AS OTHER_CHARGES_CGST_TAX_AC_CODE,
				  '0000000000' AS OTHER_CHARGES_SGST_TAX_AC_CODE,
				  SUM(A.OTHER_CHARGES_CGST_AMOUNT*-1) AS CGST_AMOUNT,
				  SUM(A.OTHER_CHARGES_SGST_AMOUNT*-1) AS SGST_AMOUNT,
				  0 AS SALE_AMOUNT,			  
				  SUM(A.OTHER_CHARGES_TAXABLE_VALUE) AS OTHERCHARGES ,
				  '',

				  'LOCAL GST FOR DATE :'+CONVERT(VARCHAR,A.CM_DT,105),
				  '' AS CM_NO, A.CM_DT, A.location_Code  AS DEPT_ID,'' AS SECTION_CODE,'' AS SUB_SECTION_CODE    
			FROM CMM01106 A (NOLOCK)   
			JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
			JOIN CUSTDYM CUS (NOLOCK) ON CUS.CUSTOMER_CODE=A.CUSTOMER_CODE
			JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=A.location_Code 
			WHERE ISNULL(A.OTHER_CHARGES_TAXABLE_VALUE,0)<>0
			GROUP BY A.CM_DT,a.location_Code ,
			A.OTHER_CHARGES_GST_PERCENTAGE

		   SET @CSTEP=347
		   insert sls_posting_log (sls_step,last_update)
		   select @cStep,getdate()			

			INSERT #V_PROCESS (POSTING_XN_TYPE,SALE_AC_CODE,TAX_AC_CODE,GST_CESS_PERCENTAGE,OTHER_CHARGES_GST_PERCENTAGE,TAX_AMOUNT,
			IGST_REVENUE_AC_CODE,IGST_TAX_AC_CODE,IGST_AMOUNT,LGST_REVENUE_AC_CODE,CGST_TAX_AC_CODE,SGST_TAX_AC_CODE
				   ,OTHER_CHARGES_IGST_REVENUE_AC_CODE,OTHER_CHARGES_IGST_TAX_AC_CODE,OTHER_CHARGES_LGST_REVENUE_AC_CODE
				  ,OTHER_CHARGES_CGST_TAX_AC_CODE,OTHER_CHARGES_SGST_TAX_AC_CODE,CGST_AMOUNT,SGST_AMOUNT,GST_CESS_AMOUNT,SALE_AMOUNT			  
				  ,OTHERCHARGES,SALE_NARRATION,TAX_NARRATION,CM_NO,CM_DT,DEPT_ID,SECTION_CODE,SUB_SECTION_CODE) 	
			SELECT 'SLS' AS POSTING_XN_TYPE,
				   '' AS SALE_AC_CODE,
				   '' AS TAX_AC_CODE,
				   b.GST_cess_PERCENTAGE,	
				   CONVERT(NUMERIC(6,2),0) AS OTHER_CHARGES_GST_PERCENTAGE,
				   0 AS TAX_AMOUNT,
				   '0000000000' AS IGST_REVENUE_AC_CODE,
				   '0000000000' AS IGST_TAX_AC_CODE,
				   0 AS IGST_AMOUNT,	
				   '0000000000' AS LGST_REVENUE_AC_CODE,
				  '0000000000' AS CGST_TAX_AC_CODE,
				  '0000000000' AS SGST_TAX_AC_CODE,
				   '0000000000' AS OTHER_CHARGES_IGST_REVENUE_AC_CODE,
				   '0000000000' AS OTHER_CHARGES_IGST_TAX_AC_CODE,
				   '0000000000' AS OTHER_CHARGES_LGST_REVENUE_AC_CODE,
				  '0000000000' AS OTHER_CHARGES_CGST_TAX_AC_CODE,
				  '0000000000' AS OTHER_CHARGES_SGST_TAX_AC_CODE				  
				  ,0 AS CGST_AMOUNT
				  ,0 AS SGST_AMOUNT
				  ,SUM(GST_CESS_AMOUNT)*-1 GST_CESS_AMOUNT
				  ,0 AS SALE_AMOUNT
				  ,0 AS  OTHERCHARGES
				  ,'RETAIL SALES (GST Cess) FOR DATE :'+CONVERT(VARCHAR,A.CM_DT,105)
				  ,'GST Cess FOR DATE :'+CONVERT(VARCHAR,A.CM_DT,105)
				  ,'' AS CM_NO, A.CM_DT, A.location_Code  AS DEPT_ID,SECTION_CODE,ART.SUB_SECTION_CODE    
			FROM CMM01106 A (NOLOCK)   
			JOIN CMD01106 B (NOLOCK) ON A.CM_ID=B.CM_ID    
			JOIN CUSTDYM CUS (NOLOCK) ON CUS.CUSTOMER_CODE=A.CUSTOMER_CODE
			JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=A.location_Code 
			JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
			LEFT OUTER JOIN #TMPSLRVAT C  ON C.ROW_ID=B.ROW_ID
			JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=B.PRODUCT_CODE
			JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE
			JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE
			WHERE ISNULL(gst_cess_AMOUNT,0)<>0
			GROUP BY A.CM_DT,a.location_Code ,B.GST_CESS_PERCENTAGE,SECTION_CODE,ART.SUB_SECTION_CODE  	


		   SET @CSTEP = 350
		   insert sls_posting_log (sls_step,last_update)
		   select @cStep,getdate()	
		   
			IF OBJECT_ID('TEMPDB..#V_PROCESS_OTHERS','U') IS NOT NULL
				DROP TABLE #V_PROCESS_OTHERS


			SELECT TOP  1 'SLS' AS  XN_TYPE,'ROFF_AC_CODE' AS  COLUMNNAME,'ROUND OFF A/C' AS COLUMNDESC
			INTO #V_PROCESS_OTHERS FROM #SLSTABLE A
			JOIN CMM01106 B (NOLOCK) ON A.MEMO_ID=B.CM_ID 
			UNION ALL
			SELECT TOP  1 'ARC' AS  XN_TYPE,'GST_ADVANCE_RECEIVED_AC_CODE' AS  COLUMNNAME,'GST ADVANCE RECEIVED A/C' AS COLUMNDESC
			FROM #SLSTABLE A
			JOIN PAYMODE_XN_DET B (NOLOCK) ON A.MEMO_ID=B.MEMO_ID
			JOIN ARC01106 C (NOLOCK) ON C.ADV_REC_ID=B.ADJ_MEMO_ID
			WHERE XN_TYPE='SLS' AND ( ISNULL(C.IGST_AMOUNT,0)<>0 OR ISNULL(C.CGST_AMOUNT,0)<>0)
			AND PAYMODE_CODE='0000002' AND ISNULL(@CADVGSTRCVACCODE,'') IN ('','0000000000')	
				
			
		   --SELECT 'CHECK #V_PROCESS_OTHERS',* FROM #V_PROCESS_OTHERS
		   
		   SET @CSTEP = 352
		   insert sls_posting_log (sls_step,last_update)
		   select @cStep,getdate()	
		 
		EXEC SP3S_GET_POSTING_BLANKAC
			@CXNTYPE='SLS',
			@NLOOP=@NLOOP,
			@CERRORMSG=@CERRORMSG OUTPUT,
			@BBLANKACFOUND=@BBLANKACFOUND OUTPUT		
		
		IF @BBLANKACFOUND=1 OR @CERRORMSG<>'' OR @NLOOP=0
			GOTO END_PROC

		
		--SELECT 'CHECK #V_PROCESS',* FROM #V_PROCESS	
					   		   
		   IF @BCREATELEDGERFORCUSTOMER<>1
		   BEGIN
				SELECT @BPOSTCONTROLACSALEENTRIESBILLBYBILL=BILL_BY_BILL FROM LMP01106 A
				WHERE AC_CODE=@CCUSTOMERCONTROLACCODESALE
			
				
				SELECT @BPOSTCONTROLACCNENTRIESBILLBYBILL=BILL_BY_BILL FROM LMP01106 A
				WHERE AC_CODE=@CCUSTOMERCONTROLACCODECN
				
		   END

			
	        SET @CSTEP = 350
			insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()
	        PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	        
	        /*IF CREATE LEDGER FOR EACH CUSTOMER OPTION IS SELECTED, THEN CREATE LEDGER FOR EACH CUSTOMERS WHOSE
	          LEDGER IS NOT CREATED FOR THE QUALIFIED RECEIPTS/PAYMENTS MEMOS*/
	        IF @BCREATELEDGERFORCUSTOMER=1
	        BEGIN

				SELECT TOP 1 @cPostingonCustCode=VALUE FROM config (NOLOCK) 
				WHERE config_option='sls_posting_on_custcode'

				SET @cPostingonCustCode=ISNULL(@cPostingonCustCode,'')

	        --START OF LEDGER CREATION FOR NEW CUSTOMERS
				SET @CSTEP=352
				insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()

				--CHECK IF ANY CUSTOMER EXISTS WHOSE LEDGER CREATION IS PENDING
				IF OBJECT_ID('TEMPDB..#NEWCUSTOMERS','U') IS NOT NULL
					DROP TABLE #NEWCUSTOMERS
				
				SELECT DISTINCT A.CUSTOMER_CODE
				INTO #NEWCUSTOMERS
				FROM CMM01106 A (NOLOCK)  
				JOIN PAYMODE_XN_DET B (NOLOCK) ON A.CM_ID = B.MEMO_ID
				JOIN #SLSTABLE TS ON A.CM_ID=TS.MEMO_ID AND TS.MODE='SLS' 
				JOIN CUSTDYM C ON C.CUSTOMER_CODE=A.CUSTOMER_CODE
				LEFT OUTER JOIN LMP01106 D ON D.CUSTOMER_CODE=C.CUSTOMER_CODE
				WHERE  B.XN_TYPE = 'SLS'  AND A.CUSTOMER_CODE NOT IN ('000000000000','')   
				AND B.PAYMODE_CODE IN ('0000004','0000002','0000001','CMR0001')
				AND ISNULL(C.AC_CODE,'') IN ('0000000000','') AND D.AC_CODE IS NULL

				SET @CSTEP=352.5
				insert sls_posting_log (sls_step,last_update)
				select @cStep,getdate()				
				
				IF @cPostingonCustCode<>'1'
					delete A FROM #NEWCUSTOMERS a 
					JOIN custdym B ON A.CUSTOMER_CODE=B.CUSTOMER_CODE
					JOIN custdym c ON c.mobile=b.mobile
					WHERE c.customer_code<>b.customer_code AND isnull(c.ac_code,'') not in  ('','0000000000')
					AND c.mobile<>''

				SET @CSTEP=352.7
				insert sls_posting_log (sls_step,last_update)
				select @cStep,getdate()
				UPDATE A SET AC_CODE=C.AC_CODE FROM CUSTDYM A
				JOIN CMM01106 B ON B.CUSTOMER_CODE=A.CUSTOMER_CODE
			    JOIN #SLSTABLE TS ON B.CM_ID=TS.MEMO_ID AND TS.MODE='SLS' 							
			    JOIN LMP01106 C ON C.CUSTOMER_CODE=A.CUSTOMER_CODE
			    WHERE A.AC_CODE<>C.AC_CODE AND ISNULL(c.ac_code,'') NOT IN ('','0000000000')

				SET @CSTEP=352.9
				insert sls_posting_log (sls_step,last_update)
				select @cStep,getdate()
				
				IF @cPostingonCustCode<>'1'
					UPDATE A SET AC_CODE=C.AC_CODE FROM CUSTDYM A
					JOIN CMM01106 B ON B.CUSTOMER_CODE=A.CUSTOMER_CODE
					JOIN #SLSTABLE TS ON B.CM_ID=TS.MEMO_ID AND TS.MODE='SLS' 							
					JOIN custdym d (NOLOCK) ON d.mobile=a.mobile
					JOIN LMP01106 C ON C.CUSTOMER_CODE=D.CUSTOMER_CODE
					WHERE A.AC_CODE<>C.AC_CODE AND ISNULL(c.ac_code,'') NOT IN ('','0000000000')			    
					AND d.customer_code<>a.customer_code AND ISNULL(a.mobile,'')<>''

				DECLARE @CNEWCUSTOMER VARCHAR(20),@CNEWACCODE VARCHAR(20)
				

				--NOW PROCEED FOR GENERATION LEDGER FOR EACH CUSTOMER
				WHILE EXISTS(SELECT TOP 1 'U' FROM #NEWCUSTOMERS)
				BEGIN
				SET @CSTEP=355
				insert sls_posting_log (sls_step,last_update)
			select @cStep,getdate()
					
					SELECT @CNEWCUSTOMER='',@CNEWACCODE=''
					SELECT TOP 1 @CNEWCUSTOMER=CUSTOMER_CODE FROM #NEWCUSTOMERS
					
					
					PRINT 'POSTING SLS-1.4 FOR CUSTOMER ID :'+@CNEWCUSTOMER+' '+CONVERT(VARCHAR,GETDATE(),113)
					
					
					GENKEY:
					EXEC GETNEXTKEY 
									 @CTABLENAME='LMV01106'
									,@CCOLNAME='AC_CODE'
									,@NWIDTH=10
									,@CPREFIX=@CPREFIXFORLEDGERGEN
									,@NLZEROS=1
									,@CFINYEAR=@CFINYEARFORLEDGERGEN
									,@NROWCOUNT=0
									,@CNEWKEYVAL=@CNEWACCODE OUTPUT
					
					IF EXISTS(SELECT TOP 1 'B' FROM LM01106 WHERE AC_CODE=@CNEWACCODE)
						GOTO GENKEY
					
					IF ISNULL(@CNEWACCODE,'')=''
					BEGIN
						INSERT #ERRORS(XN_TYPE,ERR_DESC)
						SELECT 'SLS','ERROR GENERATING LEDGER FOR CUSTOMERS.'
						GOTO END_STEPS
					END
					
					SELECT @cFirstName=CUSTOMER_FNAME,@cLastName=CUSTOMER_LNAME,@cUserCustCode=ISNULL(user_customer_code,''),
					@cMobile=isnull(mobile,'') FROM custdym (NOLOCK)
					WHERE CUSTOMER_CODE = @CNEWCUSTOMER

					SET @cNewAcname=@cFirstName+' '+@cLastName
					
					IF @cPostingonCustCode<>'1'
					BEGIN
						IF EXISTS (SELECT TOP 1 ac_code FROM lm01106 (NOLOCK) WHERE ac_name=@cNewAcname)
							AND @cMobile<>''
							SET @cNewAcname=@cFirstName+' '+@cLastName+' ('+@cMobile+')'

						IF EXISTS (SELECT TOP 1 ac_code FROM lm01106 (NOLOCK) WHERE ac_name=@cNewAcname)
							AND @cUserCustCode<>''
							SET @cNewAcname=@cFirstName+' '+@cLastName+' ('+@cUserCustCode+')'
					END

					IF EXISTS (SELECT TOP 1 ac_code FROM lm01106 (NOLOCK) WHERE ac_name=@cNewAcname)
						OR @cPostingonCustCode='1'
						SET @cNewAcname=@cFirstName+' '+@cLastName+' ('+@CNEWCUSTOMER+')'
						

						
					INSERT LMV01106 ( AC_CODE, AC_NAME, ALIAS, HEAD_CODE, CLOSING_BALANCE, CLOSING_BALANCE_CR_DR
									, PRINT_LEDGER,LAST_UPDATE, PRINT_NAME, ADDRESS0, ADDRESS1, ADDRESS2, AREA_CODE
									, AREA_NAME, PINCODE,CITY_CODE, CITY, STATE, CST_NO, CST_DT, SST_NO, SST_DT
									, TIN_NO, TIN_DT, PHONES_R,PHONES_O, PHONES_FAX, MOBILE, E_MAIL, TAX_CODE
									, CREDIT_DAYS, DISCOUNT_PERCENTAGE,BILL_BY_BILL, ON_HOLD, THROUGH_BROKER
									, BROKER_AC_CODE, BROKER_COMM_PERCENT,CREDIT_LIMIT, ALLOW_CREDITOR_DEBTOR
									, DPWEF_DT,CST_PERCENTAGE, PAN_NO, FORM_ID, CUSTOMER_CODE,GLN_NO
									, MP_PERCENTAGE, MRP_CALC_MODE,TDS_CODE, INACTIVE,OUTSTATION_PARTY
									,INV_RATE_TYPE,COMPANY_CODE,MAJOR_AC_CODE,ac_gst_no,ac_gst_state_code)   
					SELECT @CNEWACCODE AS AC_CODE, @cNewAcname AS AC_NAME
						  ,'' AS ALIAS, '0000000018' AS HEAD_CODE, 0 AS CLOSING_BALANCE, '' AS CLOSING_BALANCE_CR_DR
						  , 0 AS PRINT_LEDGER,GETDATE() AS LAST_UPDATE, CUSTOMER_FNAME+' '+CUSTOMER_LNAME AS PRINT_NAME
						  , '' AS ADDRESS0, ADDRESS1,ADDRESS2, '0000000' AS AREA_COCE, '' AS AREA_NAME, '' AS PINCODE
						  , '0000000' AS CITY_CODE,'' AS CITY, '' AS STATE, '' AS CST_NO, '' AS CST_DT, '' AS SST_NO
						  , '' AS SST_DT,'' AS TIN_NO, '' AS TIN_DT, PHONE1 AS PHONES_R, PHONE2 AS PHONES_O
						  , '' AS PHONES_FAX,MOBILE, EMAIL AS E_MAIL, '0000000' AS TAX_CODE, 0 AS CREDIT_DAYS
						  , 0 AS DISCOUNT_PERCENTAGE,ISNULL(BILL_BY_BILL,0) AS BILL_BY_BILL, 0 AS ON_HOLD, 0 AS THROUGH_BROKER, '0000000000' AS BROKER_AC_CODE
						  , 0 AS BROKER_COMM_PERCENT,0 AS CREDIT_LIMIT, 0 AS ALLOW_CREDITOR_DEBTOR
						  ,	'' AS DPWEF_DT, 0 AS CST_PERCENTAGE, '' AS PAN_NO, '0000000' AS FORM_ID
						  , CUSTOMER_CODE, '' AS GLN_NO,0 AS MP_PERCENTAGE, 0 AS MRP_CALC_MODE,'0000000' AS TDS_CODE
						  , 0 AS INACTIVE,0 AS OUTSTATION_PARTY,1 AS INV_RATE_TYPE,'01' AS COMPANY_CODE,
						  @CNEWACCODE AS MAJOR_AC_CODE,cus_gst_no,cus_gst_state_code
					FROM CUSTDYM   
					WHERE CUSTOMER_CODE = @CNEWCUSTOMER
							
					
					UPDATE CUSTDYM SET AC_CODE=@CNEWACCODE WHERE CUSTOMER_CODE=@CNEWCUSTOMER
					
					DELETE #NEWCUSTOMERS WHERE CUSTOMER_CODE=@CNEWCUSTOMER
				END
	        --END OF LEDGER CREATION FOR NEW CUSTOMERS
	        END
			
			SET @CSTEP=357

				insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()

			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
			
			/*
				IF UPDATE SALE AT MRP IS TRUE THEN TOTAL ITEM LEVEL DISCOUNT AT EACH DATE SHOULD 
				BE POSTED TO DISCOUNT A/C SHOULD BE DEBITED. 
			ITEM LEVEL DISCOUNT SHOULD NOT BE POSTED AS PER SANJAY SIR....
			IF @CUPDATESALEATMRP = 1  
			  INSERT INTO #vchC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )   
			  SELECT @CDISCACCODE AS AC_CODE, SUM(A.DISCOUNT_AMOUNT) AS AMOUNT,   
					 'ITEM LEVEL DISCOUNT' AS NARRATION, '' AS CM_NO, A.CM_DT
					 ,@CDEPTID AS DEPT_ID,B.CANCELLED   
			  FROM CMD01106 A   
			  JOIN CMM01106 B ON A.CM_ID=B.CM_ID   
			  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS'
			  WHERE ABS(A.DISCOUNT_AMOUNT)>0 AND B.CANCELLED=0   
			  GROUP BY A.CM_DT,B.CANCELLED   
			*/
			 --OTHER CHARGES IN CASH MEMO SHOULD BE CREDITED TO OTHER CHARGES A/C
			 INSERT INTO #vchC (AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )   
			 SELECT (CASE WHEN ISNULL(A.IGST_AMOUNT,0)<>0 THEN 
					  A.OTHER_CHARGES_IGST_REVENUE_AC_CODE ELSE A.OTHER_CHARGES_LGST_REVENUE_AC_CODE END) AS AC_CODE,  
					SUM(A.OTHERCHARGES)*-1 AS AMOUNT,  
					'OTHER CHARGES' AS NARRATION,  
			 '' AS CM_NO, CM_DT,DEPT_ID   
			   ,0 AS CANCELLED
			 FROM #V_PROCESS A
			 WHERE OTHERCHARGES<>0 
			 GROUP BY A.CM_DT,DEPT_ID,(CASE WHEN ISNULL(A.IGST_AMOUNT,0)<>0 THEN 
					  A.OTHER_CHARGES_IGST_REVENUE_AC_CODE ELSE A.OTHER_CHARGES_LGST_REVENUE_AC_CODE END)
			
			 INSERT INTO #vchC (AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )   
			 SELECT @CROFFACCODE AS AC_CODE,  
					SUM(A.ROUND_OFF+ISNULL(A.GST_ROUND_OFF,0))*-1 AS AMOUNT,  
					'ROUND OFF' AS NARRATION,  
			   '' AS CM_NO, A.CM_DT,a.location_Code  AS DEPT_ID   
			   ,A.CANCELLED
			 FROM CMM01106 A (NOLOCK)
			 JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS'
			 WHERE (A.ROUND_OFF+ISNULL(A.GST_ROUND_OFF,0))<>0 AND A.CANCELLED=0
			 GROUP BY A.CM_DT,A.location_Code ,A.CANCELLED  	 
			  
			 /*
				CASH RECEIVED IN SALES SHOULD BE DEBITED TO CORRESPONDING CASH A/C
				CONFIGURED FOR CURRENCY PAYMENT MODE OR THE TILL ACCOUNT FOR WHOM THE SHIFT
				WAS OPEN.
			 */
			 set @cStep=360
				insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()			 							 
			 INSERT INTO #vchC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )   
			 SELECT (CASE WHEN ISNULL(TM.AC_CODE,'') IN ('','0000000000') THEN @CCASHACCODE ELSE TM.AC_CODE END)
					,SUM(ISNULL(B.AMOUNT,0)) AS AMOUNT
				   ,'CASH SALES FOR DATE:'+ CONVERT(VARCHAR,A.CM_DT,105) AS NARRATION,'' AS CM_NO, A.CM_DT
				   ,A.location_Code  AS DEPT_ID  
				   ,A.CANCELLED
			 FROM CMM01106 A (NOLOCK)   
			  JOIN PAYMODE_XN_DET B (NOLOCK) ON A.CM_ID = B.MEMO_ID
			   JOIN PAYMODE_MST C (NOLOCK) ON C.PAYMODE_CODE=B.PAYMODE_CODE
			     JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS'
			      LEFT JOIN TILL_SHIFT_MST TSM (NOLOCK) ON A.SHIFT_ID=TSM.SHIFT_ID
			       LEFT JOIN TILL_MST TM (NOLOCK) ON TSM.TILL_ID=TM.TILL_ID
					WHERE B.XN_TYPE = 'SLS'  AND  ISNULL(B.AMOUNT,0)<>0 AND A.CANCELLED=0
						AND C.PAYMODE_GRP_CODE='0000001'  
							GROUP BY (CASE WHEN ISNULL(TM.AC_CODE,'') IN ('','0000000000') THEN @CCASHACCODE ELSE TM.AC_CODE END),
				a.location_Code ,A.CM_DT,A.CANCELLED
			 
			 /*
				CARD SALES(DEBIT/CREDIT CARDS) SHOULD BE DEBITED TO CONFIGURED A/C
			 */
			
			SET @CSTEP=362

				insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()			 							 

			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113) 
			 DECLARE @CDAYCLOSEACCWISE VARCHAR(2)
			 
			 SELECT TOP 1 @CDAYCLOSEACCWISE=VALUE FROM CONFIG (NOLOCK) WHERE  CONFIG_OPTION='DAYCLOSE_ACC_WISE'
			 
			 IF ISNULL(@CDAYCLOSEACCWISE,'')<>'1'
				 INSERT INTO #vchC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED,REF_BILL_NO,REF_BILL_DATE )   
				 SELECT V.AC_CODE AS BANK_AC_CODE,SUM(C.AMOUNT) - ROUND( SUM( (C.AMOUNT*D.COMMISSION_PERCENTAGE/100) +   
							(C.AMOUNT*D.COMMISSION_PERCENTAGE/100) *  
					   D.SERVICE_TAX_PERCENTAGE/100 ),2) AS AMOUNT,  
				   'CREDIT CARD SALES ' AS NARRATION,  
				   '' AS CM_NO, A.CM_DT,A.location_Code  AS DEPT_ID,A.CANCELLED,
				   ISNULL(CCB.BATCH_CLOSING_NO,'') AS REF_BILL_NO,A.CM_DT AS REF_BILL_DATE  
				 FROM CMM01106 A (NOLOCK)   
				 JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS'
				 JOIN PAYMODE_XN_DET C (NOLOCK) ON C.MEMO_ID = A.CM_ID
				 JOIN PAYMODE_MST D (NOLOCK) ON C.PAYMODE_CODE= D.PAYMODE_CODE
				 JOIN #V_PROCESS_PAYMODES V ON V.COLUMNNAME=D.PAYMODE_CODE+'_DOC'
				 LEFT OUTER JOIN CC_BATCH_COLLECTION CCB (NOLOCK) ON CCB.DEPT_ID=A.location_Code  AND CCB.PAYMODE_CODE=C.PAYMODE_CODE
				 AND CCB.BATCH_DT=A.CM_DT			 
				 WHERE C.XN_TYPE='SLS' AND D.PAYMODE_GRP_CODE='0000002'
				 AND C.AMOUNT<>0  AND A.CANCELLED=0
				 GROUP BY A.CM_DT,a.location_Code ,V.AC_CODE,A.CANCELLED,ISNULL(CCB.BATCH_CLOSING_NO,'')
			  ELSE
				INSERT INTO #vchC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED,REF_BILL_NO )   
				SELECT V.AC_CODE,SUM(C.AMOUNT)  AS AMOUNT,  
			   'CREDIT CARD SALES ' AS NARRATION,'' AS CM_NO, A.CM_DT,A.location_Code  AS DEPT_ID,A.CANCELLED,
			   '' AS REF_BILL_NO  
			   FROM CMM01106 A (NOLOCK)   
			   JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS'
			   JOIN PAYMODE_XN_DET C (NOLOCK) ON C.MEMO_ID = A.CM_ID
			   JOIN PAYMODE_MST D (NOLOCK) ON C.PAYMODE_CODE= D.PAYMODE_CODE
			   JOIN #V_PROCESS_PAYMODES V ON V.COLUMNNAME=D.PAYMODE_CODE+'_DOC'
			   JOIN CC_BATCH_COLLECTION CCB (NOLOCK) ON CCB.DEPT_ID=A.location_Code  AND CCB.PAYMODE_CODE=C.PAYMODE_CODE
			   AND CCB.BATCH_DT=A.CM_DT			 
			   WHERE C.XN_TYPE='SLS' AND D.PAYMODE_GRP_CODE='0000002' 
			   AND C.AMOUNT<>0  AND A.CANCELLED=0
			   GROUP BY A.CM_DT,a.location_Code ,V.AC_CODE,A.CANCELLED,ISNULL(CCB.BATCH_CLOSING_NO,'')
							 			 			  
			 /*
				THE CONFIGURED COMMISSION ACCOUNT IN PAYMODE MASTER
			 */

set @cStep=364	
				insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()			 							 
	 
			 -----COMMISSION A/C TO BE POSTED ONLY IF DAY CLOSE BATCH COLLECTION IS NOT DONE BANK A/C WISE
			 IF ISNULL(@CDAYCLOSEACCWISE,'')<>'1'
				 INSERT INTO #vchC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )   
				 SELECT V.AC_CODE AS COMMISSION_AC_CODE,  
						ROUND(SUM((C.AMOUNT*D.COMMISSION_PERCENTAGE/100) +   
							(C.AMOUNT*D.COMMISSION_PERCENTAGE/100)*D.SERVICE_TAX_PERCENTAGE/100),2) AS AMOUNT
						,'CREDIT CARD SALES COMMISSION ','' AS CM_NO, A.CM_DT,A.location_Code  AS DEPT_ID   
						,A.CANCELLED
				 FROM CMM01106 A (NOLOCK)   
				 JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS'
				 JOIN PAYMODE_XN_DET C (NOLOCK) ON C.MEMO_ID = A.CM_ID 
				 JOIN PAYMODE_MST D (NOLOCK) ON C.PAYMODE_CODE= D.PAYMODE_CODE 
				 JOIN #V_PROCESS_PAYMODES V ON V.COLUMNNAME=D.PAYMODE_CODE+'_COMM'
				 LEFT OUTER JOIN CC_BATCH_COLLECTION CCB (NOLOCK) ON CCB.DEPT_ID=A.location_Code  AND CCB.PAYMODE_CODE=C.PAYMODE_CODE
				 AND CCB.BATCH_DT=A.CM_DT			 
				 WHERE C.XN_TYPE='SLS' AND D.PAYMODE_GRP_CODE='0000002'
				 AND C.AMOUNT<>0 AND A.CANCELLED=0
				 AND D.COMMISSION_PERCENTAGE>0   
				 GROUP BY A.CM_DT,a.location_Code ,A.CANCELLED,V.AC_CODE	
			 			  
		    SET @CSTEP=366
				insert sls_posting_log (sls_step,last_update)
		select @cStep,getdate()			 							 

			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

			 ---FOR MISC SALES, DEBIT THE CONFIGURED ACCOUNT WITH THE MISC AMOUNT  
			  INSERT INTO #vchC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )
			  SELECT V.AC_CODE
					,SUM(C.AMOUNT) AS AMOUNT
					,D.PAYMODE_NAME+ 'SALES' AS NARRATION
					,'' AS CM_NO, A.CM_DT,A.location_Code  AS DEPT_ID   
					,A.CANCELLED
			  FROM CMM01106 A (NOLOCK)
			  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS'  
			  JOIN PAYMODE_XN_DET C (NOLOCK) ON A.CM_ID=C.MEMO_ID AND C.XN_TYPE='SLS'
			  JOIN PAYMODE_MST D (NOLOCK) ON C.PAYMODE_CODE= D.PAYMODE_CODE
			  JOIN #V_PROCESS_PAYMODES V ON V.COLUMNNAME=D.PAYMODE_CODE+'_DOC'
			  WHERE D.PAYMODE_GRP_CODE NOT IN ('0000001','0000002','0000004') AND C.AMOUNT<>0  AND A.CANCELLED=0 
			  AND C.PAYMODE_CODE NOT IN ('0000002','0000001')
			  GROUP BY A.CM_DT,a.location_Code ,V.AC_CODE,D.PAYMODE_NAME,A.CANCELLED
			  
			 UNION ALL
			 SELECT @CWIZCLIPGVSACCODE
					,SUM(C.AMOUNT) AS AMOUNT
					,D.PAYMODE_NAME+ 'SALES' AS NARRATION
					,'' AS CM_NO, A.CM_DT,A.location_Code  AS DEPT_ID   
					,A.CANCELLED
			  FROM CMM01106 A (NOLOCK)
			  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS'  
			  JOIN PAYMODE_XN_DET C (NOLOCK) ON A.CM_ID=C.MEMO_ID AND C.XN_TYPE='SLS'
			  JOIN PAYMODE_MST D (NOLOCK) ON C.PAYMODE_CODE= D.PAYMODE_CODE
			  WHERE D.PAYMODE_GRP_CODE='WCGV001' AND C.AMOUNT<>0  AND A.CANCELLED=0 
			  GROUP BY A.CM_DT,a.location_Code ,D.PAYMODE_NAME,A.CANCELLED			 			   			
			
		 IF @BCREATELEDGERFORCUSTOMER =1  
		 BEGIN
			SET @CSTEP=366.1
			
				insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()			 							 
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
		 /*
			CUSTOMER'S LEDGER ACCOUNT SHOULD BE DEBITED WITH CREDIT SALES AMOUNT.
		 */

			 -- SELECT ISNULL(B.AC_CODE,D.AC_CODE), SUM(ISNULL(E.AMOUNT,0)) AS AMOUNT,  
				--'CREDIT SALES AGST. BILL NO. : ' + A.CM_NO+
				-- (CASE WHEN @CPOSTSALESPERSONINFO='1' THEN  ' BY : '+DBO.FN_GETCMM_EMP(A.CM_ID) ELSE '' END) AS NARRATION,					
				--A.CM_NO, A.CM_DT,LEFT(A.CM_ID,2) AS DEPT_ID   
				--,A.CANCELLED
			 -- FROM CMM01106 A (NOLOCK)  
			 -- JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
			 -- LEFT OUTER JOIN LMP01106 (NOLOCK) B ON A.CUSTOMER_CODE=B.CUSTOMER_CODE    
			 -- JOIN CUSTDYM C (NOLOCK) ON C.CUSTOMER_CODE=A.CUSTOMER_CODE  
			 -- LEFT OUTER JOIN LM01106 D (NOLOCK) ON D.AC_NAME=C.CUSTOMER_FNAME+' '+C.CUSTOMER_LNAME+' ('+C.USER_CUSTOMER_CODE+')'  
			 -- JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID  
			 -- WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000004' AND AMOUNT >0   
			 -- GROUP BY A.CM_DT,LEFT(A.CM_ID,2), A.CM_NO, ISNULL(B.AC_CODE,D.AC_CODE) ,A.CANCELLED 
			  
			  INSERT INTO #vchC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )   
			  SELECT C.AC_CODE, SUM(ISNULL(E.AMOUNT,0)) AS AMOUNT,  
				'CREDIT SALES AGAINST BILL NO. : ' + A.CM_NO+
				 (CASE WHEN @CPOSTSALESPERSONINFO='1' THEN  
				 (CASE WHEN DBO.FN_GETCMM_EMP(A.CM_ID)<>'' THEN ' BY : '+DBO.FN_GETCMM_EMP(A.CM_ID) ELSE '' END) ELSE '' END) AS NARRATION,					
				A.CM_NO, A.CM_DT,A.location_Code  AS DEPT_ID   
				,A.CANCELLED
			  FROM CMM01106 A (NOLOCK)  
			  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
			  JOIN CUSTDYM C (NOLOCK) ON C.CUSTOMER_CODE=A.CUSTOMER_CODE  
			  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID  
			  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000004' AND AMOUNT >0   
			  AND A.PARTY_TYPE<>2
			  GROUP BY A.CM_ID,A.CM_DT,a.location_Code , A.CM_NO,C.AC_CODE ,A.CANCELLED 
			  
			  UNION ALL
			  SELECT C.AC_CODE, SUM(ISNULL(E.AMOUNT,0)) AS AMOUNT,  
				'CREDIT SALES AGAINST BILL NO. : ' + A.CM_NO+
				 (CASE WHEN @CPOSTSALESPERSONINFO='1' THEN  
				 (CASE WHEN DBO.FN_GETCMM_EMP(A.CM_ID)<>'' THEN ' BY : '+DBO.FN_GETCMM_EMP(A.CM_ID) ELSE '' END) ELSE '' END) AS NARRATION,					
				A.CM_NO, A.CM_DT,A.location_Code  AS DEPT_ID   
				,A.CANCELLED
			  FROM CMM01106 A (NOLOCK)  
			  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
			  JOIN LM01106 C (NOLOCK) ON C.AC_CODE=A.AC_CODE
			  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID  
			  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000004' AND AMOUNT >0   
			  AND A.PARTY_TYPE=2
			  GROUP BY A.CM_ID,A.CM_DT,a.location_Code , A.CM_NO,C.AC_CODE ,A.CANCELLED 			  
		 END	  
		 ELSE
		 IF @BPOSTCONTROLACSALEENTRIESBILLBYBILL=1
		 BEGIN
						SET @CSTEP=366.3

				insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()			 							 

			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

		 /*
			IF CREATE LEDGER FOR EACH CUSTOMER IS FALSE AND POST BILL_BY_BILL IS TRUE FOR CUSTOMER
			CONTROL ACCOUNT THEN CUSTOMER CONTROL ACCOUNT SHOULD BE DEBITED WITH THE CREDIT AMOUNT 
			FOR EACH BILL SEPARATELY
		 */
		 	INSERT INTO #vchC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED ) 
			SELECT	ISNULL(stb.customer_ac_code,@CCUSTOMERCONTROLACCODESALE) AS AC_CODE
					,SUM(E.AMOUNT) AS AMOUNT

					,'CREDIT SALES AGST BILL NO. : ' + A.CM_NO+
				 (CASE WHEN @CPOSTSALESPERSONINFO='1' THEN  
				 (CASE WHEN DBO.FN_GETCMM_EMP(A.CM_ID)<>'' THEN ' BY : '+DBO.FN_GETCMM_EMP(A.CM_ID) ELSE '' END) ELSE '' END) AS NARRATION,					
					A.CM_NO, A.CM_DT,A.location_Code  AS DEPT_ID 
					,A.CANCELLED
			FROM CMM01106 A (NOLOCK) 
			JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS'
			JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID  
			WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000004' AND AMOUNT >0   
			GROUP BY ISNULL(stb.customer_ac_code,@CCUSTOMERCONTROLACCODESALE),A.CM_DT,A.location_Code ,A.CM_NO,A.CM_ID,A.CANCELLED
		 END	
		 ELSE  
		 IF ISNULL( @BPOSTCONTROLACSALEENTRIESBILLBYBILL,0)=0
		 BEGIN
			SET @CSTEP=366.4

				insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()			 							 
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

		 /*
			IF CREATE LEDGER FOR EACH CUSTOMER IS FALSE AND BILL_BY_BILL IS FALSE FOR THE CUSTOMER 
			CONTROL A/C THEN CLUB CREDIT AMOUNT AT EACH DATE AND DEBIT THE CUSTOMER CONTROL ACCOUNT
			FOR EACH DISTINCT DATE.
		 */
			INSERT INTO #vchC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,A.CANCELLED )   
			  SELECT ISNULL(stb.customer_ac_code,@CCUSTOMERCONTROLACCODESALE) AS AC_CODE
					,SUM(E.AMOUNT) AS AMOUNT
					,'CREDIT SALES' AS NARRATION
					,'' AS CM_NO, A.CM_DT,A.location_Code  AS DEPT_ID   
					,A.CANCELLED
			  FROM CMM01106 A (NOLOCK) 
			  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS'  
			  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID  
			  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000004' AND AMOUNT >0   
			  GROUP BY ISNULL(stb.customer_ac_code,@CCUSTOMERCONTROLACCODESALE),A.CM_DT,a.location_Code ,A.CANCELLED
          END		  
 
		 IF @BCREATELEDGERFORCUSTOMER = 1  
		 BEGIN
						SET @CSTEP=366.5

				insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()			 							 
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

		 /*
			CUSTOMER'S LEDGER ACCOUNT SHOULD BE CREDITED WITH THE CREDIT REFUND AMOUNT.	
		 */
			 INSERT INTO #vchC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED,REF_BILL_NO,REF_BILL_DATE )   
			  SELECT C.AC_CODE,SUM(E.AMOUNT) AS AMOUNT
					,'CREDIT REFUND AGST. SALES BILL NO. : ' + A.CM_NO+
				 (CASE WHEN @CPOSTSALESPERSONINFO='1' THEN  
				 (CASE WHEN DBO.FN_GETCMM_EMP(A.CM_ID)<>'' THEN ' BY : '+DBO.FN_GETCMM_EMP(A.CM_ID) ELSE '' END) ELSE '' END) AS NARRATION					
					,A.CM_NO, A.CM_DT,A.location_Code  AS DEPT_ID   
					,A.CANCELLED,LTRIM(RTRIM(ISNULL(F.CM_NO,''))) AS REF_BILL_NO,ISNULL(F.CM_DT,'') AS REF_BILL_DATE
			  FROM CMM01106 A (NOLOCK)  
			  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
			  JOIN CUSTDYM C (NOLOCK) ON C.CUSTOMER_CODE=A.CUSTOMER_CODE  
			  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID AND E.XN_TYPE='SLS'
			  LEFT OUTER JOIN CMM01106 F (NOLOCK) ON F.CM_ID=E.ADJ_MEMO_ID
			  WHERE (E.PAYMODE_CODE='CMR0001' AND E.AMOUNT<0) 
			  GROUP BY A.CM_ID, A.CM_DT,a.location_Code , A.CM_NO, C.AC_CODE,A.CANCELLED,LTRIM(RTRIM(ISNULL(F.CM_NO,''))),ISNULL(F.CM_DT,'')
		 END	  
		 ELSE
		 IF @BPOSTCONTROLACSALEENTRIESBILLBYBILL=1
		 BEGIN
						SET @CSTEP=366.7
insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	

			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

		 /*
			CREDIT CUSTOMER CONTROL ACCOUNT BILL BY BILL WITH THE CREDIT REFUND AMOUNT
		 */
			INSERT INTO #vchC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,REF_BILL_NO,REF_BILL_DATE,CANCELLED ) 
			SELECT	ISNULL(stb.customer_ac_code,@CCUSTOMERCONTROLACCODESALE) AS AC_CODE,SUM(B.AMOUNT) AS AMOUNT
					,'CREDIT REFUND AGST. SALES BILL NO. : ' + ISNULL(D.CM_NO,A.CM_NO)+
				 (CASE WHEN @CPOSTSALESPERSONINFO='1' THEN  
				 (CASE WHEN DBO.FN_GETCMM_EMP(A.CM_ID)<>'' THEN ' BY : '+DBO.FN_GETCMM_EMP(A.CM_ID) ELSE '' END) ELSE '' END) AS NARRATION,					
					A.CM_NO, A.CM_DT,A.location_Code  AS DEPT_ID
					,LTRIM(RTRIM(ISNULL(D.CM_NO,''))),D.CM_DT
					,A.CANCELLED
			FROM CMM01106 A (NOLOCK) 
			JOIN PAYMODE_XN_DET B (NOLOCK) ON A.CM_ID = B.MEMO_ID
			LEFT OUTER JOIN CMM01106 D (NOLOCK) ON D.CM_ID=B.ADJ_MEMO_ID
			JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
			WHERE (B.XN_TYPE='SLS' AND B.PAYMODE_CODE='CMR0001' AND B.AMOUNT<0) 
			GROUP BY ISNULL(stb.customer_ac_code,@CCUSTOMERCONTROLACCODESALE),A.CM_DT,a.location_Code ,A.CM_ID,A.CM_NO,ISNULL(D.CM_NO,A.CM_NO),ISNULL(D.CM_NO,''),A.CANCELLED,D.CM_DT
		END	
	    ELSE  
	    IF ISNULL(@BPOSTCONTROLACSALEENTRIESBILLBYBILL,0)=0
		BEGIN  
						SET @CSTEP=366.8
insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	

			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

		/*
			CREDIT THE CUSTOMER CONTROL ACCOUNT DATEWISE WITH THE TOTAL CREDIT REFUND AMOUNT.
		*/
			 INSERT INTO #vchC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )   
			  SELECT ISNULL(stb.customer_ac_code,@CCUSTOMERCONTROLACCODESALE) AS AC_CODE, SUM(E.AMOUNT) AS AMOUNT,   
				'CREDIT REFUND IN SALES' AS NARRATION,   
				'' AS CM_NO, A.CM_DT,A.location_Code  AS DEPT_ID   
				,A.CANCELLED
			  FROM CMM01106 A (NOLOCK)  
			  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
			  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID AND E.XN_TYPE='SLS'
			  WHERE (E.PAYMODE_CODE='CMR0001' AND E.AMOUNT<0) 
			  AND A.CANCELLED=0
			  GROUP BY ISNULL(stb.customer_ac_code,@CCUSTOMERCONTROLACCODESALE),A.CM_DT,A.location_Code  ,A.CANCELLED 
	   END
  
		 IF @BCREATELEDGERFORCUSTOMER = 1  
		 BEGIN
						SET @CSTEP=367.1
insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	

			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

			 /*
				CUSTOMER'S LEDGER ACCOUNT SHOULD BE CREDITED WITH THE CREDIT NOTE AMOUNT 
				FOR EACH BILL AS BILL NO SHOULD BE INCLUDED IN NARRATION
			 */
			  INSERT INTO #vchC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )   
			  SELECT C.AC_CODE
					,SUM(E.AMOUNT) AS AMOUNT
					,'CREDIT NOTE ISSUE IN SALES MEMO NO. : ' + A.CM_NO+
				 (CASE WHEN @CPOSTSALESPERSONINFO='1' THEN  
				 (CASE WHEN DBO.FN_GETCMM_EMP(A.CM_ID)<>'' THEN ' BY : '+DBO.FN_GETCMM_EMP(A.CM_ID) ELSE '' END) ELSE '' END) AS NARRATION					
					,A.CM_NO, A.CM_DT,A.location_Code  AS DEPT_ID   
					,A.CANCELLED
			  FROM CMM01106 A (NOLOCK)  
			  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
			  JOIN CUSTDYM C (NOLOCK) ON C.CUSTOMER_CODE=A.CUSTOMER_CODE  
			  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID  
			  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000004' AND AMOUNT <0   
			  AND   SUBSTRING(A.CM_NO,5,1)='N'   
			  GROUP BY A.CM_ID,A.CM_DT,A.location_Code , A.CM_NO,C.AC_CODE  ,A.CANCELLED
		 END 
		 ELSE
		 IF @BPOSTCONTROLACSALEENTRIESBILLBYBILL=1
		 BEGIN
												SET @CSTEP=367.2
insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	

			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

			 /*
				CUSTOMER CONTROL ACCOUNT SHOULD BE CREDITED WITH THE CREDIT NOTE AMOUNT BILL BY BILL
			 */
				INSERT INTO #vchC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED ) 
				SELECT	ISNULL(stb.customer_ac_code,@CCUSTOMERCONTROLACCODECN) AS AC_CODE
						,SUM(B.AMOUNT) AS AMOUNT
						,'CREDIT NOTE ISSUE IN SALES MEMO NO. : ' + A.CM_NO+
				 (CASE WHEN @CPOSTSALESPERSONINFO='1' THEN  
				 (CASE WHEN DBO.FN_GETCMM_EMP(A.CM_ID)<>'' THEN ' BY : '+DBO.FN_GETCMM_EMP(A.CM_ID) ELSE '' END) ELSE '' END) AS NARRATION,					
						A.CM_NO, A.CM_DT,A.location_Code  AS DEPT_ID 
						,A.CANCELLED
				FROM CMM01106 A (NOLOCK) 
				JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 	
			    JOIN PAYMODE_XN_DET B (NOLOCK) ON A.CM_ID = B.MEMO_ID  
			    WHERE B.XN_TYPE = 'SLS' AND B.PAYMODE_CODE='0000004' AND AMOUNT <0   
				GROUP BY ISNULL(stb.customer_ac_code,@CCUSTOMERCONTROLACCODECN),A.CM_DT,a.location_Code ,A.CM_NO,A.CM_ID,A.CANCELLED
		 END	
		 ELSE    
		 IF ISNULL(@BPOSTCONTROLACSALEENTRIESBILLBYBILL,0)=0	 
		 BEGIN 
															SET @CSTEP=367.3
insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	

			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

				/*
					AT EACH DATE CREDIT NOTE AMOUNT SHOULD BE AGGREGATED AND 
					CUSTOMER CONTROL ACCOUNT SHOULD BE CREDITED WITH THE AMOUNT.
				*/
				INSERT INTO #vchC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )   
				SELECT ISNULL(stb.customer_ac_code,@CCUSTOMERCONTROLACCODECN) AS AC_CODE
					  ,SUM(E.AMOUNT) AS AMOUNT
					  ,'CREDIT NOTE ISSUE IN SALES' AS NARRATION
					  ,'' AS CM_NO, A.CM_DT,A.location_Code  AS DEPT_ID   
					  ,A.CANCELLED
				FROM CMM01106 A (NOLOCK)  
				JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 	
			    JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID  
			    WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000004' AND E.AMOUNT <0   
				AND  SUBSTRING(A.CM_NO,5,1)='N' AND A.CANCELLED=0
				GROUP BY ISNULL(stb.customer_ac_code,@CCUSTOMERCONTROLACCODECN),A.CM_DT,A.location_Code ,A.CANCELLED
		END
		
		--- CREDIT NOTE ADJUSTMENT IN SALES  
		IF @BCREATELEDGERFORCUSTOMER = 1  
		BEGIN
			SET @CSTEP=367.4
			insert sls_posting_log (sls_step,last_update)
			select @cStep,getdate()	

			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

		/*
			CUSTOMER'S LEDGER ACCOUNT SHOULD BE DEBITED WITH THE CREDIT NOTE ADJUSTED AMOUNT.
		*/

			
			INSERT INTO #vchC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,cost_Center_Dept_id,CANCELLED,REF_BILL_NO,REF_BILL_DATE )   
			SELECT C.AC_CODE
				 , SUM(E.AMOUNT*(CASE WHEN loc_mode=2 THEN -1 ELSE 1 END))  AS AMOUNT
				 , 'CREDIT NOTE ADJUSTMENT IN SALES MEMO NO: ' + A.CM_NO+
				 (CASE WHEN @CPOSTSALESPERSONINFO='1' THEN  
				 (CASE WHEN DBO.FN_GETCMM_EMP(A.CM_ID)<>'' THEN ' BY : '+DBO.FN_GETCMM_EMP(A.CM_ID) ELSE '' END) ELSE '' END) AS NARRATION					
				 , A.CM_NO AS CM_NO, A.CM_DT,A.location_Code  AS DEPT_ID
				 ,(CASE WHEN loc_mode IN(2,3) THEN A.location_Code  ELSE E.adj_location_Code END) AS cost_center_DEPT_ID
				 , A.CANCELLED,LTRIM(RTRIM(F.CM_NO)) AS REF_BILL_NO,F.CM_DT AS REF_BILL_DATE
			  FROM CMM01106 A (NOLOCK)  
			  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 	
			  JOIN CUSTDYM C (NOLOCK) ON C.CUSTOMER_CODE=A.CUSTOMER_CODE  
			  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID 
			  LEFT OUTER JOIN CMM01106 F (NOLOCK) ON E.ADJ_MEMO_ID=F.CM_ID,@tAdjLocs tal 
			  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000001' AND E.AMOUNT > 0   
			  AND (tal.loc_mode=1 OR e.adj_location_code <>a.location_Code )
			  GROUP BY A.CM_ID, A.CM_DT,a.location_Code ,(CASE WHEN loc_mode IN(2,3) THEN a.location_Code 
			  ELSE e.adj_location_code  END) , A.CM_NO, C.AC_CODE,A.CANCELLED,LTRIM(RTRIM(F.CM_NO)),F.CM_DT,loc_mode
			  			  
		 END 
		 ELSE  
		 IF @BPOSTCONTROLACSALEENTRIESBILLBYBILL=1
		 BEGIN

			SET @CSTEP=367.4
			insert sls_posting_log (sls_step,last_update)
			select @cStep,getdate()	

			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

		 /*
			CUSTOMER CONTROL ACCOUNT SHOULD BE DEBITED WITH THE CREDIT NOTE ADJUSTED AMOUNT BILL BY BILL.
		 */

		 
			INSERT INTO #vchC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,cost_Center_Dept_id,REF_BILL_NO,REF_BILL_DATE,CANCELLED ) 
			SELECT	ISNULL(stb.customer_ac_code,@CCUSTOMERCONTROLACCODECN) AS AC_CODE
						, SUM(B.AMOUNT*(CASE WHEN loc_mode=2 THEN -1 ELSE 1 END))  AS AMOUNT,
						'CREDIT NOTE '+ISNULL(C.CM_NO,'')+' ADJUSTMENT IN SALES MEMO NO: ' + A.CM_NO+
				 (CASE WHEN @CPOSTSALESPERSONINFO='1' THEN  
				 (CASE WHEN DBO.FN_GETCMM_EMP(A.CM_ID)<>'' THEN ' BY : '+DBO.FN_GETCMM_EMP(A.CM_ID) ELSE '' END) ELSE '' END) AS NARRATION					
						,A.CM_NO AS CM_NO, A.CM_DT
						,A.location_Code   as dept_id
						,(CASE WHEN loc_mode IN(2,3) THEN A.location_Code  ELSE B.ADJ_lOCATION_CODE END) AS cost_center_DEPT_ID
						,LTRIM(RTRIM(C.CM_NO)),C.CM_DT
						,A.CANCELLED
				FROM CMM01106 A  (NOLOCK)
				JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
				JOIN PAYMODE_XN_DET B (NOLOCK) ON A.CM_ID = B.MEMO_ID AND B.XN_TYPE='SLS'
				JOIN CMM01106 C (NOLOCK) ON B.ADJ_MEMO_ID=C.CM_ID,@tAdjLocs tal
				WHERE B.PAYMODE_CODE='0000001' AND  B.AMOUNT>0 
				AND (tal.loc_mode=1 OR b.adj_location_code  <>a.location_Code )
				GROUP BY ISNULL(stb.customer_ac_code,@CCUSTOMERCONTROLACCODECN),A.CM_ID,A.CM_DT,a.location_Code ,(CASE WHEN loc_mode IN(2,3) THEN a.location_Code  ELSE b.adj_location_code  END) ,A.CM_NO,C.CM_NO,A.CANCELLED,C.CM_DT,loc_mode
		 END	
	  ELSE
	  IF ISNULL( @BPOSTCONTROLACSALEENTRIESBILLBYBILL,0)=0		
	  BEGIN
						SET @CSTEP=367.5
insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	

			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

		  INSERT INTO #vchC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,cost_Center_Dept_id,CANCELLED )   
		  SELECT ISNULL(stb.customer_ac_code,@CCUSTOMERCONTROLACCODECN) AS AC_CODE
				,SUM(E.AMOUNT*(CASE WHEN loc_mode=2 THEN -1 ELSE 1 END))  AS AMOUNT
				,'CREDIT NOTE ADJUSTMENT IN SALES' AS NARRATION
				,'' AS CM_NO, A.CM_DT
				,a.location_Code   as dept_id
				,(CASE WHEN loc_mode IN(2,3) THEN a.location_Code  ELSE e.adj_Location_code  END) AS cost_center_DEPT_ID

				,A.CANCELLED
		  FROM CMM01106 A (NOLOCK)  
		  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
		  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID,@tAdjLocs tal 
		  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000001' AND ISNULL(E.AMOUNT,0) > 0   
		  AND A.CANCELLED=0  AND (tal.loc_mode=1 OR e.adj_location_code <>a.location_Code )
		  GROUP BY ISNULL(stb.customer_ac_code,@CCUSTOMERCONTROLACCODECN),A.CM_DT,a.location_Code ,(CASE WHEN loc_mode IN(2,3) THEN a.location_Code  ELSE e.adj_location_code  END) ,A.CANCELLED,loc_mode  
	 END	  
	  
	 --- ADVANCE ADJUSTMENT IN SALES  
	 IF @BCREATELEDGERFORCUSTOMER = 1  
	 BEGIN
						SET @CSTEP=367.6
insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	

			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

	 /*
		CUSTOMER'S LEDGER ACCOUNT SHOULD BE DEBITED WITH THE ADVANCE ADJUSTED AMOUNT.
	 */
		INSERT INTO #vchC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,cost_Center_Dept_id,CANCELLED,REF_BILL_NO,REF_BILL_DATE )   
		SELECT C.AC_CODE
			  ,SUM(E.AMOUNT*(CASE WHEN loc_mode=2 THEN -1 ELSE 1 END))  AS AMOUNT
			  ,'ADVANCE ADJUSTMENT IN SALES MEMO NO. : ' + A.CM_NO AS NARRATION
			  ,A.CM_NO AS CM_NO
			  ,A.CM_DT
			  ,a.location_Code   as dept_id
			  ,(CASE WHEN loc_mode IN(2,3) THEN a.location_Code  ELSE e.adj_location_Code END) AS cost_center_DEPT_ID
			  ,A.CANCELLED,LTRIM(RTRIM(F.ADV_REC_NO)) AS REF_BILL_NO,F.ADV_REC_DT AS REF_BILL_DATE
		  FROM CMM01106 A (NOLOCK)  
		  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
		  JOIN CUSTDYM C (NOLOCK) ON C.CUSTOMER_CODE=A.CUSTOMER_CODE  
		  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID
		  JOIN ARC01106 F (NOLOCK) ON E.ADJ_MEMO_ID=F.ADV_REC_ID,@tAdjLocs tal
		  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000002' AND E.AMOUNT<>0 
		  AND (tal.loc_mode=1 OR e.adj_location_code <>a.location_Code )

		  GROUP BY A.CM_DT,a.location_Code ,(CASE WHEN loc_mode IN(2,3) THEN a.location_Code  ELSE e.adj_location_code  END), A.CM_NO, C.AC_CODE,A.CANCELLED ,LTRIM(RTRIM(F.ADV_REC_NO)),F.ADV_REC_DT,loc_mode
	 END 
	 ELSE  
	 IF @BPOSTCONTROLACSALEENTRIESBILLBYBILL=1
	 BEGIN
						SET @CSTEP=367.6
insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	

			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

	 /*
		CUSTOMER CONTROL ACCOUNT SHOULD BE DEBITED BILL BY BILL WITH THE ADVANCE ADJUSTED AMOUNT.
	 */
		INSERT INTO #vchC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,cost_Center_Dept_id,REF_BILL_NO,REF_BILL_DATE,CANCELLED ) 
		SELECT	ISNULL(stb.customer_ac_code,@CCUSTOMERCONTROLACCODESALE) AS AC_CODE
				,SUM(B.AMOUNT*(CASE WHEN loc_mode=2 THEN -1 ELSE 1 END))  AS AMOUNT
				,'ADVANCE '+(C.ADV_REC_NO)+' ADJUSTMENT IN SALES MEMO NO. : ' + A.CM_NO AS NARRATION
				,A.CM_NO AS CM_NO, A.CM_DT
				,a.location_Code   as dept_id
				,(CASE WHEN loc_mode IN(2,3) THEN a.location_Code  ELSE b.adj_location_code  END) AS cost_center_DEPT_ID
				,LTRIM(RTRIM(C.ADV_REC_NO)),C.ADV_REC_DT
				,A.CANCELLED
		FROM CMM01106 A  (NOLOCK)
		JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
		JOIN PAYMODE_XN_DET B (NOLOCK) ON A.CM_ID = B.MEMO_ID 
		JOIN ARC01106 C (NOLOCK) ON B.ADJ_MEMO_ID=C.ADV_REC_ID,@tAdjLocs tal
		WHERE B.XN_TYPE='SLS' AND B.PAYMODE_CODE='0000002' AND B.AMOUNT<>0 
		AND (tal.loc_mode=1 OR b.adj_location_code <>a.location_Code )

		GROUP BY ISNULL(stb.customer_ac_code,@CCUSTOMERCONTROLACCODESALE),A.CM_DT,a.location_Code ,(CASE WHEN loc_mode IN(2,3) THEN a.location_Code  ELSE b.adj_location_code  END) ,A.CM_NO,C.ADV_REC_NO,A.CANCELLED,C.ADV_REC_DT,loc_mode
	END	
	ELSE
	IF ISNULL(@BPOSTCONTROLACSALEENTRIESBILLBYBILL,0)=0		 
	BEGIN 
						SET @CSTEP=367.7
insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	

			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

	/*
		AGGREGATE THE ADVANCE ADJUSTED AMOUNT AT EACH DATE 
		AND DEBIT THE CUSTOMER CONTROL ACCOUNT FOR EACH DATE.
	*/
		INSERT INTO #vchC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,cost_Center_Dept_id,CANCELLED )   
		  SELECT ISNULL(stb.customer_ac_code,@CCUSTOMERCONTROLACCODESALE) AS AC_CODE
				,SUM(E.AMOUNT*(CASE WHEN loc_mode=2 THEN -1 ELSE 1 END))  AS AMOUNT,
			'ADVANCE ADJUSTMENT IN SALES' AS NARRATION,  
			'' AS CM_NO, A.CM_DT
			,a.location_Code   as dept_id
			,(CASE WHEN loc_mode IN(2,3) THEN a.location_Code  ELSE e.adj_location_code  END) AS cost_center_DEPT_ID
			,A.CANCELLED
		  FROM CMM01106 A (NOLOCK)  
		  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
		  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID,@tAdjLocs tal 
		  WHERE E.XN_TYPE='SLS' AND E.PAYMODE_CODE='0000002' AND E.AMOUNT<>0  AND A.CANCELLED=0
		  AND (tal.loc_mode=1 OR e.adj_location_code <>a.location_Code )

		  GROUP BY ISNULL(stb.customer_ac_code,@CCUSTOMERCONTROLACCODESALE),A.CM_DT,a.location_Code ,(CASE WHEN loc_mode IN(2,3) THEN a.location_Code  ELSE e.adj_location_code END)  ,A.CANCELLED,loc_mode 
	END	
	
		SET @CSTEP=367.8
insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	
	PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	
	IF OBJECT_ID('TEMPDB..#V_ADV_REVERSAL','U') IS NOT NULL
		DROP TABLE #V_ADV_REVERSAL
		  
	------ PUT THE REVERSE ENTRY OF ADVANCE RECEIVED A/C IF ADVANCE ISSUED IN GST REGIME IS ADJUSTED
	DECLARE @BPOSTADVREVBILLBYBILL BIT
	
	IF @BCREATELEDGERFORCUSTOMER = 1  OR  @BPOSTCONTROLACSALEENTRIESBILLBYBILL=1
		SET @BPOSTADVREVBILLBYBILL=1
	ELSE
		SET @BPOSTADVREVBILLBYBILL=0
	
							SET @CSTEP=367.8
insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	
	INSERT INTO #vchC ( AC_CODE, AMOUNT, NARRATION, XN_NO, XN_DT, DEPT_ID,CANCELLED )  	
	SELECT CONVERT(CHAR(10),@CADVGSTRCVACCODE) AS AC_CODE
		  ,SUM(E.AMOUNT)*-1 AS AMOUNT
		  ,'1'+(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END)  AS NARRATION
		  ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN A.CM_NO ELSE '' END) AS CM_NO
		  ,A.CM_DT
		  ,a.location_Code  AS DEPT_ID   
		  ,A.CANCELLED
	  FROM CMM01106 A (NOLOCK)  
	  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
	  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID
	  JOIN ARC01106 ARC (NOLOCK) ON ARC.ADV_REC_ID=E.ADJ_MEMO_ID
	  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000002' AND E.AMOUNT<>0 
	  AND (ISNULL(ARC.IGST_AMOUNT,0)+ISNULL(ARC.CGST_AMOUNT,0)+ISNULL(ARC.IGST_AMOUNT,0))<>0 
	  GROUP BY A.CM_DT,a.location_Code ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN A.CM_NO ELSE '' END),A.CANCELLED 
	  ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END) 

	  UNION ALL
	  SELECT GAC.LGST_REVENUE_AC_CODE AS AC_CODE
		  ,SUM(ARC.TAXABLE_VALUE) AS AMOUNT
		  ,'2'+(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END) AS NARRATION
		  ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN A.CM_NO ELSE '' END)
		  ,A.CM_DT
		  ,a.location_Code  AS DEPT_ID   
		  ,A.CANCELLED
	  FROM CMM01106 A (NOLOCK)  
	  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
	  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID
	  JOIN ARC01106 ARC (NOLOCK) ON ARC.ADV_REC_ID=E.ADJ_MEMO_ID
	  JOIN GST_ACCOUNTS_CONFIG_DET_REVENUE GAC ON ARC.GST_PERCENTAGE=GAC.GST_PERCENTAGE
	  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000002' AND E.AMOUNT<>0 AND ISNULL(ARC.CGST_AMOUNT,0)<>0 
	  AND GAC.XN_TYPE='ARC'
	  GROUP BY A.CM_DT,a.location_Code ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN A.CM_NO ELSE '' END)
	  ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END)
	  ,GAC.LGST_REVENUE_AC_CODE,A.CANCELLED  

	  UNION ALL
	  SELECT GAC.IGST_REVENUE_AC_CODE  AS AC_CODE 
		  ,SUM(ARC.TAXABLE_VALUE) AS AMOUNT
		  ,'3'+(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END) AS NARRATION
		  ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN A.CM_NO ELSE '' END)
		  ,A.CM_DT
		  ,a.location_code AS DEPT_ID   
		  ,A.CANCELLED
	  FROM CMM01106 A (NOLOCK)  
	  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
	  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID
	  JOIN ARC01106 ARC (NOLOCK) ON ARC.ADV_REC_ID=E.ADJ_MEMO_ID
	  JOIN GST_ACCOUNTS_CONFIG_DET_REVENUE GAC ON ARC.GST_PERCENTAGE=GAC.GST_PERCENTAGE
	  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000002' AND E.AMOUNT<>0 AND ISNULL(ARC.IGST_AMOUNT,0)<>0
	  AND GAC.XN_TYPE='ARC'
	  GROUP BY A.CM_DT,a.location_Code ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN A.CM_NO ELSE '' END),
	  GAC.IGST_REVENUE_AC_CODE,A.CANCELLED  		  		  
		,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END)
			
	  UNION ALL
	  SELECT GAC.CGST_TAX_AC_CODE  AS AC_CODE
		  ,SUM(ARC.CGST_AMOUNT) AS AMOUNT
		  ,'4'+(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END) AS NARRATION
		  ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN A.CM_NO ELSE '' END)
		  ,A.CM_DT
		  ,a.location_Code  AS DEPT_ID   
		  ,A.CANCELLED
	  FROM CMM01106 A (NOLOCK)  
	  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
	  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID
	  JOIN ARC01106 ARC (NOLOCK) ON ARC.ADV_REC_ID=E.ADJ_MEMO_ID
	  JOIN GST_ACCOUNTS_CONFIG_DET_REVENUE GAC ON ARC.GST_PERCENTAGE=GAC.GST_PERCENTAGE
	  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000002' AND E.AMOUNT<>0 AND ISNULL(ARC.CGST_AMOUNT,0)<>0
	  AND GAC.XN_TYPE='ARC'
	  GROUP BY A.CM_DT,a.location_Code ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN A.CM_NO ELSE '' END)
	  , GAC.CGST_TAX_AC_CODE,A.CANCELLED  
	  ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END)
			
	  UNION ALL
	  SELECT GAC.SGST_TAX_AC_CODE  AS AC_CODE
		  ,SUM(ARC.SGST_AMOUNT) AS AMOUNT
		  ,'5'+(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END) AS NARRATION
		  ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN A.CM_NO ELSE '' END)
		  ,A.CM_DT
		  ,a.location_Code  AS DEPT_ID   
		  ,A.CANCELLED
	  FROM CMM01106 A (NOLOCK)  
	  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
	  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID
	  JOIN ARC01106 ARC (NOLOCK) ON ARC.ADV_REC_ID=E.ADJ_MEMO_ID
	  JOIN GST_ACCOUNTS_CONFIG_DET_REVENUE GAC ON ARC.GST_PERCENTAGE=GAC.GST_PERCENTAGE
	  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000002' AND E.AMOUNT<>0 AND ISNULL(ARC.SGST_AMOUNT,0)<>0  
	  AND GAC.XN_TYPE='ARC'
	  GROUP BY A.CM_DT,a.location_Code ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN A.CM_NO ELSE '' END)
	  , GAC.SGST_TAX_AC_CODE,A.CANCELLED  		  		  
	  ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END)
			
	  UNION ALL
	  SELECT GAC.IGST_TAX_AC_CODE  AS AC_CODE
		  ,SUM(ARC.IGST_AMOUNT) AS AMOUNT
		  		  ,'6'+(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END) AS NARRATION
		  ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN A.CM_NO ELSE '' END)
		  ,A.CM_DT
		  ,a.location_Code  AS DEPT_ID   
		  ,A.CANCELLED
	  FROM CMM01106 A (NOLOCK)  
	  JOIN #SLSTABLE STB ON A.CM_ID=STB.MEMO_ID AND STB.MODE='SLS' 
	  JOIN PAYMODE_XN_DET E (NOLOCK) ON A.CM_ID = E.MEMO_ID
	  JOIN ARC01106 ARC (NOLOCK) ON ARC.ADV_REC_ID=E.ADJ_MEMO_ID
	  JOIN GST_ACCOUNTS_CONFIG_DET_REVENUE GAC ON ARC.GST_PERCENTAGE=GAC.GST_PERCENTAGE
	  WHERE E.XN_TYPE = 'SLS' AND E.PAYMODE_CODE='0000002' AND E.AMOUNT<>0 AND ISNULL(ARC.IGST_AMOUNT,0)<>0 
	  AND GAC.XN_TYPE='ARC'
	  GROUP BY A.CM_DT,a.location_Code ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN A.CM_NO ELSE '' END)
	  , GAC.IGST_TAX_AC_CODE,A.CANCELLED  		  		  
	  ,(CASE WHEN @BPOSTADVREVBILLBYBILL=1 THEN 'ADVANCE ADJUSTMENT REVERSED IN SALES MEMO NO. : ' + A.CM_NO
			ELSE 'ADVANCE ADJUSTMENT REVERSED' END)	
	 				  	
	
	SELECT @CCM_NO='',@DCM_DT='',@CXNTYPE='SLS',@CAC_CODE='',@NCTR=1,@DOLDCMDT=''


	SET @CSTEP = 370
						
insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	
							
			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

	--CREATING VOUCHER FOR CONTRA ENTRY
	IF OBJECT_ID('#CONTRAENTRY','U') IS NOT NULL
		DROP TABLE #CONTRAENTRY

	CREATE TABLE #CONTRAENTRY(SALE_AC_CODE VARCHAR(10), TAX_AC_CODE VARCHAR(10), SALE_AMOUNT NUMERIC(12,2),   
	TAX_AMOUNT NUMERIC(12,2), SALE_NARRATION VARCHAR(1000), TAX_NARRATION VARCHAR(1000),   
	XN_NO VARCHAR(50), XN_DT DATETIME, DEPT_ID VARCHAR(4),memo_id_str varchar(20))

	CREATE INDEX IND_CONTRAENTRY ON #CONTRAENTRY (DEPT_ID,XN_DT)

	SET @CSTEP = 372



			PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

	
	SET @CSTEP=375
	
						
insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	
	PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	
	--SELECT 'CHECK #V_PROCESS',* FROM  #V_PROCESS WHERE SALE_AMOUNT<>0 AND IGST_AMOUNT<>0
					
	INSERT #CONTRAENTRY(SALE_AC_CODE, TAX_AC_CODE, SALE_AMOUNT, TAX_AMOUNT, SALE_NARRATION,
						TAX_NARRATION, XN_NO, XN_DT, DEPT_ID)
	
	SELECT SALE_AC_CODE,TAX_AC_CODE,SUM(SALE_AMOUNT) AS SALE_AMOUNT,SUM(TAX_AMOUNT) AS TAX_AMOUNT,
	SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID 
	FROM 
	(
	SELECT SALE_AC_CODE,0 AS SALE_AMOUNT,TAX_AC_CODE,SUM(TAX_AMOUNT) AS TAX_AMOUNT,
	SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID FROM 
	#V_PROCESS WHERE TAX_AMOUNT<>0
	GROUP BY SALE_AC_CODE,TAX_AC_CODE,SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID 
	UNION ALL
	SELECT (CASE WHEN SALE_AC_CODE NOT IN ('','0000000000') THEN SALE_AC_CODE ELSE LGST_REVENUE_AC_CODE END),SUM(SALE_AMOUNT) AS SALE_AMOUNT,'' AS TAX_AC_CODE,0 AS TAX_AMOUNT,
	SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID FROM 
	#V_PROCESS WHERE SALE_AMOUNT<>0 AND IGST_AMOUNT=0 AND CGST_AMOUNT=0
	GROUP BY (CASE WHEN SALE_AC_CODE NOT IN ('','0000000000') THEN SALE_AC_CODE ELSE LGST_REVENUE_AC_CODE END)
	,SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID 
	UNION ALL
	SELECT IGST_REVENUE_AC_CODE,SUM(SALE_AMOUNT) AS SALE_AMOUNT,'' AS TAX_AC_CODE,0 AS TAX_AMOUNT,
	SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID FROM 
	#V_PROCESS WHERE SALE_AMOUNT<>0 AND IGST_AMOUNT<>0
	GROUP BY IGST_REVENUE_AC_CODE,SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID 
	UNION ALL
	SELECT '' AS SALE_AC_CODE,0 AS SALE_AMOUNT,IGST_TAX_AC_CODE AS TAX_AC_CODE,SUM(IGST_AMOUNT) AS TAX_AMOUNT,
	SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID FROM 
	#V_PROCESS WHERE IGST_AMOUNT<>0
	GROUP BY IGST_TAX_AC_CODE,SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID
	UNION ALL
	SELECT LGST_REVENUE_AC_CODE,SUM(SALE_AMOUNT) AS SALE_AMOUNT,'' AS TAX_AC_CODE,0 AS TAX_AMOUNT,
	SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID FROM  
	#V_PROCESS WHERE SALE_AMOUNT<>0 AND CGST_AMOUNT<>0
	GROUP BY LGST_REVENUE_AC_CODE,SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID 
	UNION ALL
	SELECT '' AS SALE_AC_CODE,0 AS SALE_AMOUNT,CGST_TAX_AC_CODE AS TAX_AC_CODE,SUM(CGST_AMOUNT) AS TAX_AMOUNT,
	SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID FROM  
	#V_PROCESS WHERE CGST_AMOUNT<>0
	GROUP BY CGST_TAX_AC_CODE,SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID 		
	UNION ALL
	SELECT '' AS SALE_AC_CODE,0 AS SALE_AMOUNT,SGST_TAX_AC_CODE AS TAX_AC_CODE,SUM(SGST_AMOUNT) AS TAX_AMOUNT,
	SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID FROM  
	#V_PROCESS WHERE SGST_AMOUNT<>0
	GROUP BY SGST_TAX_AC_CODE,SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID 			
	UNION ALL
	SELECT '' AS SALE_AC_CODE,0 AS SALE_AMOUNT,GST_CESS_AC_CODE AS TAX_AC_CODE,SUM(GST_CESS_AMOUNT) AS TAX_AMOUNT,
	SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID FROM  
	#V_PROCESS WHERE ISNULL(GST_CESS_AMOUNT,0)<>0
	GROUP BY GST_CESS_AC_CODE,SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID 			
	) A
	GROUP BY SALE_AC_CODE,TAX_AC_CODE,SALE_NARRATION,TAX_NARRATION, CM_NO, CM_DT, DEPT_ID 
		SET @CSTEP = 380

						
insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	

		PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
			
		INSERT INTO #vlink(VM_ID ,MEMO_ID,XN_TYPE,LAST_UPDATE )
		SELECT ISNULL(B.VM_ID,'LATER-'+A.POSTED_MEMO_ID) AS VM_ID,A.POSTED_MEMO_ID,'SLS',LAST_UPDATE 
		FROM #POSTINGDATES A
		LEFT OUTER JOIN 
		(SELECT A.MEMO_ID,A.VM_ID FROM POSTACT_VOUCHER_LINK A (NOLOCK) 
		 JOIN VM01106 VM (NOLOCK) ON A.VM_ID=VM.VM_ID
		 JOIN #POSTINGDATES B ON A.MEMO_ID=B.POSTED_MEMO_ID
		 WHERE VM.CANCELLED=0 AND A.XN_TYPE='SLS'
		) B ON B.MEMO_ID=A.POSTED_MEMO_ID
			
		SET @CSTEP = 520
						
insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	
		PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
		
		--if @@spid=61
		--begin
		--	select 'start check'
		--	select 'check vchc',* from #vchc where xn_Dt='2022-02-22'
		--end

		INSERT #vdC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE, 
					  VS_AC_CODE,REF_BILL_NO,REF_BILL_DATE,AC_NAME,VCH_ENTRY_ID,cost_center_dept_id,location_code  )
		SELECT VL.VM_ID
			, 'LATER-V'+CONVERT(VARCHAR,ROW_NUMBER() OVER(PARTITION BY VL.VM_ID ORDER BY A.AC_CODE)) AS VD_ID
			, A.AC_CODE
			, A.NARRATION
			,SUM(CASE WHEN (AMOUNT)>0 THEN (AMOUNT) ELSE 0 END) AS DEBIT_AMOUNT
			,SUM(CASE WHEN (AMOUNT)<0 THEN ABS((AMOUNT)) ELSE 0 END) AS CREDIT_AMOUNT
			,(CASE WHEN (AMOUNT) > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE
			,'0000000000'
			,A.REF_BILL_NO,A.REF_BILL_DATE
			,B.AC_NAME,(CASE WHEN ISNULL(C.BILL_BY_BILL,0)=1 THEN  A.ENTRY_ID ELSE '' END) AS ENTRY_ID
			,ISNULL(a.cost_center_dept_id,a.dept_id) as cost_center_dept_id,a.DEPT_ID 
		FROM #vchC A
		JOIN LM01106 (NOLOCK) B ON A.AC_CODE=B.AC_CODE
		LEFT OUTER JOIN LMP01106 C (NOLOCK) ON A.AC_CODE=C.AC_CODE
		JOIN #vlink VL ON VL.MEMO_ID=LTRIM(RTRIM(A.dept_id))+LTRIM(RTRIM(CONVERT(VARCHAR(10),A.XN_DT,112)))
		
		GROUP BY VL.VM_ID,A.AC_CODE, A.NARRATION,A.REF_BILL_NO,B.AC_NAME,A.REF_BILL_DATE,
		(CASE WHEN ISNULL(C.BILL_BY_BILL,0)=1 THEN  A.ENTRY_ID ELSE '' END),
		(CASE WHEN (AMOUNT) > 0 THEN 'DR' ELSE 'CR' END),ISNULL(a.cost_center_dept_id,a.dept_id),a.DEPT_ID 
		ORDER BY X_TYPE
		
		SET @NROWSAFFECTED=@@ROWCOUNT	
		
				

		SET @CSTEP = 530	

insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	

		PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
		INSERT #TBILL_BY_BILL_REF
			(VD_ID,REF_NO,AMOUNT,LAST_UPDATE,X_TYPE,CR_DAYS,VM_ID)
		SELECT C.VD_ID
			  ,(CASE WHEN ISNULL(A.REF_BILL_NO,'')='' THEN (CASE WHEN A.XN_NO='' THEN DEPT_ID+CONVERT(VARCHAR,A.XN_DT,112) 
			  ELSE 	DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,A.XN_NO,A.XN_DT,(CASE WHEN C.DEBIT_AMOUNT<>0 THEN 'DR' ELSE 'CR' END),VL.VM_ID) END) 
					ELSE DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,A.REF_BILL_NO,A.REF_BILL_DATE,
					(CASE WHEN C.DEBIT_AMOUNT<>0 THEN 'DR' ELSE 'CR' END),VL.VM_ID) END) AS REF_NO
			  ,ABS(SUM(A.AMOUNT)),GETDATE()
			  ,(CASE WHEN C.DEBIT_AMOUNT<>0 THEN 'DR' ELSE 'CR' END) AS X_TYPE
			  ,0
			  ,VL.VM_ID
		FROM #vchC A 
		JOIN LMP01106 B (NOLOCK) ON A.AC_CODE=B.AC_CODE
		JOIN #vdC C ON C.VCH_ENTRY_ID=A.ENTRY_ID
		JOIN #vlink VL ON VL.MEMO_ID=LTRIM(RTRIM(A.DEPT_ID))+LTRIM(RTRIM(CONVERT(VARCHAR(10),A.XN_DT,112)))
		
		WHERE B.BILL_BY_BILL=1
		GROUP BY VL.VM_ID,(CASE WHEN ISNULL(A.REF_BILL_NO,'')='' THEN (CASE WHEN A.XN_NO='' THEN DEPT_ID+CONVERT(VARCHAR,A.XN_DT,112) 
			  ELSE 	DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,A.XN_NO,A.XN_DT,(CASE WHEN C.DEBIT_AMOUNT<>0 THEN 'DR' ELSE 'CR' END),VL.VM_ID) END) 
					ELSE DBO.FN_GETBILLBYBILL_REFNO(A.AC_CODE,A.REF_BILL_NO,A.REF_BILL_DATE,
					(CASE WHEN C.DEBIT_AMOUNT<>0 THEN 'DR' ELSE 'CR' END),VL.VM_ID) END),C.VD_ID,C.DEBIT_AMOUNT

		SELECT @CXNTYPE='CSLS' /*CSLS FOR CONTRA ENTRY*/
	
		--SELECT 'CHECK CONTRA',* FROM 	
		--(	SELECT A.DEPT_ID,A.XN_DT,SALE_AC_CODE AS AC_CODE, SALE_AMOUNT AS AMOUNT, SALE_NARRATION AS NARRATION
		--	FROM #CONTRAENTRY A
		--	WHERE SALE_AMOUNT<>0
		--	UNION ALL
		--	SELECT A.DEPT_ID,A.XN_DT,TAX_AC_CODE AS AC_CODE, TAX_AMOUNT AS AMOUNT, TAX_NARRATION AS NARRATION
		--	FROM #CONTRAENTRY A 
		--) A
		--ORDER BY XN_DT
		
		SET @CSTEP = 540
						
insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	
		PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
		INSERT #vdC (VM_ID, VD_ID,  AC_CODE, NARRATION, CREDIT_AMOUNT, DEBIT_AMOUNT
					, X_TYPE, VS_AC_CODE, VAT_ENTRY,AC_NAME)
		SELECT VL.VM_ID
			, 'LATER-W'+CONVERT(VARCHAR,ROW_NUMBER() OVER(PARTITION BY VL.VM_ID ORDER BY A.AC_CODE)) AS VD_ID
			, A.AC_CODE
			, A.NARRATION
			,SUM(CASE WHEN (AMOUNT)<0 THEN ABS((AMOUNT)) ELSE 0 END) AS CREDIT_AMOUNT
			,SUM(CASE WHEN (AMOUNT)>0 THEN (AMOUNT) ELSE 0 END) AS DEBIT_AMOUNT
			,(CASE WHEN (AMOUNT) > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE
			,'0000000000'
			,1
			,B.AC_NAME
		FROM 	
		(
			SELECT A.DEPT_ID,A.XN_DT,SALE_AC_CODE AS AC_CODE, SALE_AMOUNT AS AMOUNT, SALE_NARRATION AS NARRATION
			FROM #CONTRAENTRY A
			WHERE SALE_AMOUNT<>0
			UNION ALL
			SELECT A.DEPT_ID,A.XN_DT,TAX_AC_CODE AS AC_CODE, TAX_AMOUNT AS AMOUNT, TAX_NARRATION AS NARRATION
			FROM #CONTRAENTRY A 
		)A	
		JOIN LM01106 B (NOLOCK) ON A.AC_CODE=B.AC_CODE
		JOIN #vlink VL ON VL.MEMO_ID=LTRIM(RTRIM(A.DEPT_ID))+LTRIM(RTRIM(CONVERT(VARCHAR(10),A.XN_DT,112)))
		GROUP BY  VL.VM_ID, A.AC_CODE, A.NARRATION,(CASE WHEN (AMOUNT) > 0 THEN 'DR' ELSE 'CR' END),B.AC_NAME
		ORDER BY X_TYPE
		
		set @cstep=550
insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	
		update #contraentry set memo_id_str=DEPT_ID+LTRIM(RTRIM(CONVERT(VARCHAR(10),XN_DT,112)))
		
		SET @CSTEP = 560
						
insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	
		PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
		
		INSERT #vmC	( VM_ID, VOUCHER_NO, VOUCHER_DT, VOUCHER_CODE, DEPT_ID,   
					  BILL_TYPE, BILL_NO, BILL_DT, DRTOTAL, CRTOTAL, CASH_VOUCHER,   
					  SALE_VOUCHER, QUANTITY, ANGADIA_CODE, LR_NO, LR_DT, CANCELLED, PARTY_NAME,VM_ORDER)
		SELECT  VL.VM_ID,ISNULL(VM.VOUCHER_NO,'LATER') AS VOUCHER_NO,A.XN_DT,@CVOUCHERCODE,A.DEPT_ID,'SLS',A.XN_NO,A.XN_DT
			  ,SUM(DEBIT_AMOUNT) AS DRTOTAL,SUM(CREDIT_AMOUNT) AS CRTOTAL,0,0,0,'0000000', '', '', 0
			  , 'RETAIL SALE FOR ' + CONVERT(VARCHAR,A.XN_DT,105)
			  ,2
		FROM #CONTRAENTRY A 
		JOIN #vlink VL ON VL.MEMO_ID=A.memo_id_str
		LEFT OUTER JOIN VM01106 VM ON VM.VM_ID=VL.VM_ID
		JOIN #vdC D ON D.VM_ID=VL.VM_ID
		GROUP BY VL.VM_ID,A.XN_NO,A.XN_DT,A.DEPT_ID,ISNULL(VM.VOUCHER_NO,'LATER')
		
		UNION ALL
		SELECT VL.VM_ID,ISNULL(VM.VOUCHER_NO,'LATER') AS VOUCHER_NO,right(vl.MEMO_ID,8) voucher_DT,
		@CVOUCHERCODE,a.location_code   DEPT_ID,'SLS','' XN_NO,right(vl.MEMO_ID,8) XN_DT
		,SUM(DEBIT_AMOUNT) AS DRTOTAL,SUM(CREDIT_AMOUNT) AS CRTOTAL,0,0,0,'0000000', '', '', 0
		, 'RETAIL SALE FOR ' + CONVERT(VARCHAR,right(vl.MEMO_ID,8),105)
		,2 from #vdC a
		JOIN #vlink VL ON VL.vm_id=a.vm_id
		LEFT JOIN #CONTRAENTRY c ON VL.MEMO_ID=c.memo_id_str
		LEFT OUTER JOIN VM01106 VM ON VM.VM_ID=VL.VM_ID
		WHERE c.memo_id_str IS NULL
		GROUP BY VL.VM_ID,a.location_code ,ISNULL(VM.VOUCHER_NO,'LATER'),right(vl.MEMO_ID,8)
		

		SET @CSTEP = 565
						
insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	
		PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
		
		IF OBJECT_ID('TEMPDB..#TMPVDDIFF','U') IS NOT NULL
			DROP TABLE #TMPVDDIFF
		
		SELECT voucher_dt,b.VM_ID,b.dept_id,SUM(DEBIT_AMOUNT) AS DRTOTAL,SUM(CREDIT_AMOUNT) AS CRTOTAL
		INTO #TMPVDDIFF
		FROM #vdC a
		JOIN #vmC b ON a.vm_id=b.vm_id GROUP BY voucher_dt,b.VM_ID,b.dept_id
		HAVING ABS(SUM(DEBIT_AMOUNT-CREDIT_AMOUNT))<=50 AND SUM(DEBIT_AMOUNT-CREDIT_AMOUNT)<>0
		
		
		--if @@spid=234
		--	select 'chck #TMPVDDIFF', * from #TMPVDDIFF				 

		SET @CSTEP = 570
						
		insert sls_posting_log (sls_step,last_update)
		select @cStep,getdate()					 	

		INSERT #vdC (VM_ID, VD_ID, AC_CODE, NARRATION, DEBIT_AMOUNT, CREDIT_AMOUNT, X_TYPE, 
							  CREDIT_DAYS, CR_DISCOUNT_PERCENTAGE,AC_NAME,REF_BILL_NO,cost_center_Dept_id)
				SELECT A.VM_ID
					, 'LATER-'+@CROFFACCODE AS VD_ID
					, @CROFFACCODE AS AC_CODE
					,'RETAIL SALES (ROUND OFF) FOR DATE :'+CONVERT(VARCHAR,@DCM_DT,105)
					,(CASE WHEN (DRTOTAL-CRTOTAL)<0 THEN ABS(DRTOTAL-CRTOTAL) ELSE 0 END) AS DEBIT_AMOUNT
					,(CASE WHEN (DRTOTAL-CRTOTAL)>0 THEN (DRTOTAL-CRTOTAL) ELSE 0 END) AS CREDIT_AMOUNT
					,(CASE WHEN (DRTOTAL-CRTOTAL) > 0 THEN 'DR' ELSE 'CR' END) AS X_TYPE
					,0 AS CRDAYS
					,0
					,AC_NAME,'' AS REF_BILL_NO,dept_id as cost_center_Dept_id
			    
	    FROM #TMPVDDIFF A
	    JOIN LM01106 B ON B.AC_CODE=@CROFFACCODE
		
		--if @@spid=234
		--	SELECT voucher_dt,a.VM_ID,cost_center_Dept_id,SUM(DEBIT_AMOUNT) AS DRTOTAL,SUM(CREDIT_AMOUNT) AS CRTOTAL
		--	FROM #vdC a join #vmC b on a.vm_id=b.vm_id where voucher_dt='2020-02-01' and b.dept_id='sf'
		--	GROUP BY voucher_dt,a.VM_ID,cost_center_Dept_id
		--	having SUM(DEBIT_AMOUNT-CREDIT_AMOUNT)<>0

	SET @CSTEP = 575

		insert sls_posting_log (sls_step,last_update)
		select @cStep,getdate()					 	

    
    PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)			    		
		
		UPDATE A SET DRTOTAL=B.DRTOTAL,CRTOTAL=B.CRTOTAL FROM #vmC A
		JOIN (SELECT VM_ID,SUM(DEBIT_AMOUNT) AS DRTOTAL,SUM(CREDIT_AMOUNT) AS CRTOTAL FROM #vdC GROUP BY VM_ID) B ON A.VM_ID=B.VM_ID
		
		--SELECT @NDRTOTAL =SUM(DEBIT_AMOUNT),@NCRTOTAL=SUM(CREDIT_AMOUNT) FROM #vdC
		--WHERE VM_ID = @CVMID
					
   

    SET @CSTEP = 577
						
insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	
    
    PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
    --SELECT 'CHECK VLINK',* FROM #vlink
    
    --SELECT 'CHECK VOUCHER',C.AC_NAME,A.* FROM #vdC A JOIN #vmC B ON A.VM_ID=B.VM_ID 
    --JOIN LM01106 C ON C.AC_CODE=A.AC_CODE
    ----WHERE VOUCHER_DT='2017-07-25'
        
	
	IF OBJECT_ID('TEMPDB..#DIFFVMS','U') IS NOT NULL
		DROP TABLE #DIFFVMS

	IF OBJECT_ID('TEMPDB..#DIFFVMS1','U') IS NOT NULL
		DROP TABLE #DIFFVMS1

	IF OBJECT_ID('TEMPDB..#DIFFVMS2','U') IS NOT NULL
		DROP TABLE #DIFFVMS2				

    SET @CSTEP = 579
				
	insert sls_posting_log (sls_step,last_update)
	select @cStep,getdate()	
	
	UPDATE a SET cost_center_dept_id=b.dept_id FROM #VDC a
	JOIN #VMC b ON a.vm_id=b.vm_id 
	WHERE a.cost_center_depT_ID IS NULL

    SET @CSTEP = 580
				
	insert sls_posting_log (sls_step,last_update)
	select @cStep,getdate()	
		
	SELECT a.AC_CODE,VOUCHER_DT,b.DEPT_ID,SUM(CREDIT_AMOUNT-DEBIT_AMOUNT) AS AMOUNT INTO #DIFFVMS1
	FROM #vdC A JOIN #vmC B ON A.VM_ID=B.VM_ID 
	GROUP BY a.AC_CODE,VOUCHER_DT,b.DEPT_ID
	
	SET @CSTEP = 581
	insert sls_posting_log (sls_step,last_update)
	select @cStep,getdate()	
		
	CREATE INDEX IND_DIFFVMS1 ON #DIFFVMS1 (ac_code,voucher_dt,dept_id)
	
    SET @CSTEP = 583
				
	insert sls_posting_log (sls_step,last_update)
	select @cStep,getdate()	

	SELECT a.AC_CODE,B.VOUCHER_DT,b.DEPT_ID,SUM(CREDIT_AMOUNT-DEBIT_AMOUNT) AS AMOUNT INTO #DIFFVMS2
	FROM VD01106 A (NOLOCK) JOIN VM01106 B (NOLOCK) ON A.VM_ID=B.VM_ID
	JOIN #vmC C ON C.DEPT_ID=B.DEPT_ID AND C.VOUCHER_DT=B.VOUCHER_DT
	WHERE B.BILL_TYPE='SLS' AND B.CANCELLED=0
	GROUP BY a.AC_CODE,B.VOUCHER_DT,b.DEPT_Id


	--if @@spid=61
	--begin
	--	select 'check vdc and diffvms1'
	--	select a.* from #vdc a join #vmc b on a.VM_ID=b.vm_id where voucher_Dt='2022-02-22'
	--	select 'check #DIFFVMS1',* from #DIFFVMS1 where voucher_Dt='2022-02-22'
		
	--end

	SET @CSTEP = 585
	insert sls_posting_log (sls_step,last_update)
	select @cStep,getdate()	
	
	CREATE INDEX IND_DIFFVMS2 ON #DIFFVMS2 (ac_code,voucher_dt,dept_id)
	
    SET @CSTEP = 587
				
	insert sls_posting_log (sls_step,last_update)
	select @cStep,getdate()				
	SELECT A.VOUCHER_DT,A.DEPT_ID INTO #DIFFVMS FROM 
	#DIFFVMS1 A LEFT OUTER JOIN #DIFFVMS2  B ON A.AC_CODE=B.AC_CODE AND A.VOUCHER_DT=B.VOUCHER_DT
	AND A.DEPT_ID=B.DEPT_ID 
	WHERE ABS(ISNULL(A.AMOUNT,0)-ISNULL(B.AMOUNT,0))>=1 AND a.ac_code<>@CRETAILSALEACCODE
		--if @@spid=485
	--begin
	--	select 'check #vdC',b.DEPT_ID, a.* FROM #vdC A JOIN #vmC B ON A.VM_ID=B.VM_ID 
	--	where VOUCHER_DT='2019-08-16' and b.DEPT_ID='02'
	--	order by a.ac_code
		
	--	select 'check diffvms1',ac_name,a.* from #diffvms1 a join lm01106 b on a.ac_code=b.ac_code where voucher_dt='2019-08-16' and dept_id='02'
	--	order by ac_name
	--	select 'check diffvms2',ac_name,a.* from #diffvms2 a join lm01106 b on a.ac_code=b.ac_code 
	--	where voucher_dt='2019-08-16' and dept_id='02'
	--	order by ac_name
	--end	
	
	SET @CSTEP=590

	insert sls_posting_log (sls_step,last_update)
	select @cStep,getdate()	

	INSERT #DIFFVMS
	SELECT A.VOUCHER_DT,A.DEPT_ID FROM 
	(SELECT AC_CODE,VOUCHER_DT,DEPT_ID,BB.REF_NO,SUM(CASE WHEN BB.X_TYPE='CR' THEN AMOUNT ELSE 0 END) AS CREDIT_AMOUNT,
	 SUM(CASE WHEN BB.X_TYPE='DR' THEN AMOUNT ELSE 0 END) AS DEBIT_AMOUNT
	 FROM #TBILL_BY_BILL_REF BB JOIN #vdC A ON A.VD_ID=BB.VD_ID AND A.VM_ID=BB.VM_ID
	 JOIN #vmC B ON A.VM_ID=B.VM_ID 
	 WHERE A.AC_CODE<>@CRETAILSALEACCODE
	 GROUP BY BB.REF_NO,AC_CODE,VOUCHER_DT,DEPT_ID) A
	 LEFT OUTER JOIN 						  
	(SELECT AC_CODE,B.VOUCHER_DT,B.DEPT_ID,BB.REF_NO,SUM(CASE WHEN BB.X_TYPE='CR' THEN AMOUNT ELSE 0 END) AS CREDIT_AMOUNT,
	 SUM(CASE WHEN BB.X_TYPE='DR' THEN AMOUNT ELSE 0 END) AS DEBIT_AMOUNT
	 FROM VD01106 A (NOLOCK) JOIN VM01106 B (NOLOCK) ON A.VM_ID=B.VM_ID
	 JOIN BILL_BY_BILL_REF BB (NOLOCK) ON BB.VD_ID=A.VD_ID
	 JOIN #vmC C ON C.DEPT_ID=B.DEPT_ID AND C.VOUCHER_DT=B.VOUCHER_DT
	 WHERE B.BILL_TYPE='SLS' AND B.CANCELLED=0 AND A.AC_CODE<>@CRETAILSALEACCODE
	 GROUP BY BB.REF_NO,AC_CODE,B.VOUCHER_DT,B.DEPT_ID) B ON A.AC_CODE=B.AC_CODE AND A.VOUCHER_DT=B.VOUCHER_DT
	 AND A.DEPT_ID=B.DEPT_ID AND A.REF_NO=B.REF_NO WHERE ABS(ISNULL(A.CREDIT_AMOUNT+A.DEBIT_AMOUNT,0)-
	 ISNULL(B.DEBIT_AMOUNT+B.CREDIT_AMOUNT,0))>=1
	
	SET @CSTEP=592
	PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	
 	DELETE A FROM #vmC A LEFT OUTER JOIN  #DIFFVMS B ON A.VOUCHER_DT=B.VOUCHER_DT AND A.DEPT_ID=B.DEPT_ID
	WHERE B.DEPT_ID IS NULL

SET @CSTEP=595
	PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	IF OBJECT_ID('TEMPDB..#UNBALANCEVMS','U') IS NOT NULL
		DROP TABLE #UNBALANCEVMS
		
	SELECT A.VM_ID,'DEBUG' AS DEBUG_STR INTO #UNBALANCEVMS FROM 
	(SELECT A.VM_ID,SUM(CREDIT_AMOUNT) AS CREDIT_AMOUNT,SUM(DEBIT_AMOUNT) AS DEBIT_AMOUNT
	 FROM #vdC A JOIN #vmC B ON A.VM_ID=B.VM_ID 
	 GROUP BY A.VM_ID HAVING SUM(DEBIT_AMOUNT)<>SUM(CREDIT_AMOUNT)) A
	    
    BEGIN TRAN
    SET @CSTEP=597
	PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)

insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	    

    IF @NSPID=0
		SET @NSPID=@@SPID
		
	DELETE FROM ACT_VM01106_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_VD01106_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_BILL_BY_BILL_REF_UPLOAD WHERE SP_ID=@NSPID
	DELETE FROM ACT_POSTACT_VOUCHER_LINK_UPLOAD WHERE SP_ID=@NSPID
	
	SET @CSTEP = 600
	
	PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
    INSERT ACT_VM01106_UPLOAD	(location_code, ANGADIA_CODE, APPROVED, APPROVEDLEVELNO, ATTACHMENT_FILE, AUDITED_DT, 
    AUDITED_USER_CODE, BILL_AC_CODE, BILL_DT, BILL_ID, BILL_NO, BILL_TYPE, CANCELLED, CASH_VOUCHER, COMPANY_CODE, 
    CRTOTAL, DEPT_ID, DRTOTAL, EDT_USER_CODE, FIN_YEAR, FREEZE, LAST_UPDATE, LR_DT, LR_NO, MEMO, MRR_LIST, OP_ENTRY,
    QUANTITY, REF_NO, REF_VM_ID, REMINDER_DAYS, SALE_VOUCHER, SENT_FOR_RECON, SENT_TO_HO, SMS_SENT, SR_NO, 
    UPLOADED_TO_ACTIVSTREAM, USER_CODE, VM_ID, VM_NO, VOUCHER_CODE, VOUCHER_DT, VOUCHER_NO, SP_ID,TEMP_VM_ID )  
    SELECT dept_id location_code,  ANGADIA_CODE,0 AS APPROVED,0 AS APPROVEDLEVELNO,'' AS ATTACHMENT_FILE,'' AS AUDITED_DT, 
    '' AS AUDITED_USER_CODE, BILL_AC_CODE,BILL_DT, ISNULL(BILL_ID,'') AS BILL_ID,ISNULL( BILL_NO,'') AS BILL_NO,
     BILL_TYPE,0 AS CANCELLED, 
    0 AS CASH_VOUCHER, '01' AS COMPANY_CODE, CRTOTAL, DEPT_ID, DRTOTAL,'' AS EDT_USER_CODE,@CFINYEARPOSTING AS FIN_YEAR, 
    0 AS FREEZE,GETDATE() AS  LAST_UPDATE,'' AS LR_DT,'' AS LR_NO,0 AS MEMO,'' AS MRR_LIST,0 AS  OP_ENTRY,
    QUANTITY, '' AS REF_NO,'' AS REF_VM_ID,0 AS  REMINDER_DAYS,1 AS SALE_VOUCHER,0 AS  SENT_FOR_RECON,0 AS SENT_TO_HO, 
    0 AS SMS_SENT,0 AS SR_NO,0 AS UPLOADED_TO_ACTIVSTREAM,'0000000' AS USER_CODE,
    VM_ID,'' AS VM_NO, VOUCHER_CODE, VOUCHER_DT,VOUCHER_NO, @NSPID AS SP_ID,'' AS TEMP_VM_ID 
    FROM #vmC A 
    --LEFT OUTER JOIN #ERRORS B ON A.VOUCHER_DT=B.XN_DT
    --WHERE B.ERR_DESC IS NULL
	
	
	SET @CSTEP = 610

insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	

	PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_VD01106_UPLOAD	( AC_CODE, AUTOENTRY, CHK_RECON, COMPANY_CODE, CONTROL_AC, COST_CENTER_AC_CODE, COST_CENTER_DEPT_ID, 
	CREDIT_AMOUNT, DEBIT_AMOUNT, LAST_UPDATE, NARRATION, RECON_DT, SECONDARY_NARRATION, VAT_ENTRY, VD_ID, VM_ID, VS_AC_CODE, X_TYPE, SP_ID,TEMP_VD_ID )
	SELECT AC_CODE,0 AS AUTOENTRY,0 AS CHK_RECON,'01' AS COMPANY_CODE,0 AS CONTROL_AC,'0000000000' AS COST_CENTER_AC_CODE, 
	ISNULL(cost_center_Dept_id,@CDEPTID) AS COST_CENTER_DEPT_ID,CREDIT_AMOUNT, DEBIT_AMOUNT,GETDATE() AS LAST_UPDATE,ISNULL(NARRATION,'') AS NARRATION,'' AS RECON_DT, 
	'' AS SECONDARY_NARRATION, 0 AS VAT_ENTRY,VD_ID,A.VM_ID,ISNULL(VS_AC_CODE,'0000000000') AS VS_AC_CODE,
	X_TYPE, @NSPID AS SP_ID,'' AS TEMP_VD_ID 
	FROM #vdC A
	JOIN #vmC B ON A.VM_ID=B.VM_ID
--    LEFT OUTER JOIN #ERRORS C ON B.VOUCHER_DT=C.XN_DT
    WHERE (DEBIT_AMOUNT<>0 OR CREDIT_AMOUNT<>0)
    ---C.ERR_DESC IS NULL AND 

	
	SET @CSTEP = 615
	PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_BILL_BY_BILL_REF_UPLOAD	( ADJ_REMARKS, AMOUNT, BB_ROW_ID, CR_DAYS, LAST_UPDATE, PAYMENT_ADJ_REF_NO, 
	REF_NO,  REMARKS, VD_ID, X_TYPE, SP_ID ,VM_ID)  
	SELECT '' AS ADJ_REMARKS,AMOUNT,'' AS BB_ROW_ID,0 AS CR_DAYS,GETDATE() AS LAST_UPDATE,'' AS PAYMENT_ADJ_REF_NO, 
	REF_NO, '' AS REMARKS,A.VD_ID,A.X_TYPE,@NSPID AS SP_ID,A.VM_ID FROM #TBILL_BY_BILL_REF A
    JOIN #vdC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID
    JOIN #vmC C ON B.VM_ID=C.VM_ID
    WHERE A.AMOUNT<>0
--    LEFT OUTER JOIN #ERRORS D ON C.VOUCHER_DT=D.XN_DT
    --WHERE D.ERR_DESC IS NULL
	
	SET @CSTEP = 620


insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	
	
	PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
	INSERT ACT_POSTACT_VOUCHER_LINK_UPLOAD	( LAST_UPDATE, MEMO_ID, VM_ID, XN_TYPE, SP_ID )  
	SELECT 	GETDATE() AS LAST_UPDATE, MEMO_ID, A.VM_ID, A.XN_TYPE, @NSPID AS SP_ID FROM #vlink A
    JOIN #vmC B ON A.VM_ID=B.VM_ID
    --LEFT OUTER JOIN #ERRORS C ON B.VOUCHER_DT=C.XN_DT
    --WHERE C.ERR_DESC IS NULL


	
    GOTO END_STEPS
     
END TRY

BEGIN CATCH
	SET @CERRORMSG='POSTACT_GST_SLS : STEP:- '+@CSTEP+' '+ERROR_MESSAGE()
	GOTO END_STEPS
END CATCH

END_STEPS:
	
	PRINT 'START POSTING SLS-9:'+CONVERT(VARCHAR,GETDATE(),113)
	
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')=''
		BEGIN
			COMMIT
			PRINT 'COMMIT POSTING SLS'
		END	
		ELSE
		BEGIN
			PRINT 'ROLLBACK POSTING SLS'
			ROLLBACK	
		END	
	END	
	
	PRINT 'START POSTING SLS-10:'+CONVERT(VARCHAR,GETDATE(),113)
	IF ISNULL(@CERRORMSG,'')<>''		        
		SELECT @CERRORMSG AS ERROR_MSG
	ELSE
	BEGIN
		SET @CSTEP=625

insert sls_posting_log (sls_step,last_update)
select @cStep,getdate()	

		PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
		
		SELECT CONVERT(BIT,1) AS CHK,@nSpid sp_id, CONVERT(BIT,1) optimized,A.*,CONVERT(BIT,0) AS ERROR_FLAG,CONVERT(VARCHAR(500),'') AS ERROR_DESC,
		ISNULL(B.DEBUG_STR,'') AS DEBUG_STR FROM #vmC A
		-- LEFT OUTER JOIN #ERRORS B ON A.VOUCHER_DT=B.XN_DT
		--WHERE B.ERR_DESC IS NULL
		LEFT OUTER JOIN #UNBALANCEVMS B ON A.VM_ID=B.VM_ID
		
		ORDER BY BILL_DT,BILL_ID,VM_ORDER ASC

		SET @CSTEP = 630
		PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
		UPDATE #vdC SET DEBIT_AMOUNT=(CASE WHEN DEBIT_AMOUNT<>0 THEN DEBIT_AMOUNT ELSE NULL END),
		CREDIT_AMOUNT=(CASE WHEN CREDIT_AMOUNT<>0 THEN CREDIT_AMOUNT ELSE NULL END)
		
		SET @CSTEP=635
		PRINT 'START POSTING SLS:'+@CSTEP+' '+CONVERT(VARCHAR,GETDATE(),113)
		SELECT A.* FROM #vdC A JOIN #vmC B ON A.VM_ID=B.VM_ID
		--LEFT OUTER JOIN #ERRORS C ON B.VOUCHER_DT=C.XN_DT
		WHERE (DEBIT_AMOUNT<>0 OR CREDIT_AMOUNT<>0)  
		ORDER BY A.VM_ID
		-- C.ERR_DESC IS NULL AND
	    
		SELECT * FROM #ERRORS WHERE 1=2
	    
		SELECT A.* FROM #vlink A 
		JOIN #vmC B ON A.VM_ID=B.VM_ID
		--LEFT OUTER JOIN #ERRORS C ON B.VOUCHER_DT=C.XN_DT
		--WHERE C.ERR_DESC IS NULL
		ORDER BY VM_ID
	    
		SELECT B.AC_NAME,A.*,A.REF_NO AS BILL_NO FROM #TBILL_BY_BILL_REF A
		JOIN #vdC B ON A.VD_ID=B.VD_ID AND A.VM_ID=B.VM_ID
		JOIN #vmC C ON B.VM_ID=C.VM_ID
		--LEFT OUTER JOIN #ERRORS D ON C.VOUCHER_DT=D.XN_DT
		--WHERE D.ERR_DESC IS NULL
	END

END_PROC: 
	
	IF ISNULL(@CERRORMSG,'')<>''
		SELECT @CERRORMSG AS ERRMSG

END
