CREATE PROCEDURE SP3S_GENINDENTS_DATA
@CLOCID CHAR(2),
@CSEASONID VARCHAR(10),
@CFINYEAR VARCHAR(5),
@NGROWTHFACTOR INT,
@CFILTERCRITERIA VARCHAR(4000)=''
AS
BEGIN
	--ALTER TABLE ARSPLAN_IMPORT_UPLOAD ADD ARTICLE_NAME VARCHAR(200)
    SET NOCOUNT ON
	DECLARE @CCMD NVARCHAR(MAX),@CRFDBNAME VARCHAR(500),@CACCODE CHAR(10),@CRFTABLENAME VARCHAR(500),
	@DFROMDT DATETIME,@DTODT DATETIME,@BINCLUDEYEARINDATE BIT,@DNEWFROMDT DATETIME,@DNEWTODT DATETIME
	
	SELECT TOP 1 @BINCLUDEYEARINDATE=INCLUDEYEARINDATE,	@DFROMDT=PERIOD_FROM,@DTODT=PERIOD_TO FROM SEASON_MST WHERE SEASON_ID=@CSEASONID
		
	IF ISNULL(@BINCLUDEYEARINDATE,0)=0
	BEGIN

		SELECT @DTODT=(CASE WHEN MONTH(@DTODT) IN (1,2,3) THEN DATEADD(YY,1, @DTODT) ELSE @DTODT END)
		SELECT @CFINYEAR='0'+LTRIM(RTRIM(STR(CONVERT(INT,@CFINYEAR)-1)))

		SELECT @DNEWFROMDT=DATEADD(YY,DATEDIFF(YY,@DFROMDT,DBO.FN_GETFINYEARDATE(@CFINYEAR,1)),@DFROMDT)
		SELECT @DNEWTODT=DATEADD(YY,DATEDIFF(YY,@DFROMDT,DBO.FN_GETFINYEARDATE(@CFINYEAR,1)),@DTODT)
		
		SELECT @DFROMDT=@DNEWFROMDT,@DTODT=@DNEWTODT
	
	END
	--SELECT @CRFDBNAME=DB_NAME()+'_RFOPT.DBO.',@CRFTABLENAME='RF_OPT_ARS'
	SELECT @CRFDBNAME=DB_NAME()+'.DBO.',@CRFTABLENAME='VW_ARS_RF'
			
	SET @DFROMDT=ISNULL(@DFROMDT,'1900-01-01')
	SET @DTODT=ISNULL(@DTODT,'1900-01-01')
	
    IF OBJECT_ID('TEMPDB..#TMPSLS','U') IS NOT NULL
		DROP TABLE #TMPSLS
	
	IF @CFILTERCRITERIA=''
		SET @CFILTERCRITERIA=' 1=1 '
		
	SELECT 	ARTICLE_CODE,PARA1_CODE,PARA2_CODE,QUANTITY_IN_STOCK AS SLS_QTY,QUANTITY_IN_STOCK AS STOCK_QTY,
	QUANTITY_IN_STOCK AS ORDERS_IN_HAND,QUANTITY_IN_STOCK AS GIT_QTY INTO 
	#TMPSLS FROM PMT01106 A JOIN SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE
	WHERE 1=2
	
	SET @CCMD=N'SELECT SKU.ARTICLE_CODE,SKU.PARA1_CODE,SKU.PARA2_CODE
	    ,SUM(ISNULL(A.SALES_QTY,0)) AS NSLS
	    ,0,0,0
		FROM '+@CRFDBNAME+@CRFTABLENAME+' A (NOLOCK)     
		JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
		JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE=SKU.ARTICLE_CODE
		JOIN PARA1 (NOLOCK) ON PARA1.PARA1_CODE=SKU.PARA1_CODE
		JOIN PARA2 (NOLOCK) ON PARA2.PARA2_CODE=SKU.PARA2_CODE
		JOIN PARA3 (NOLOCK) ON PARA3.PARA3_CODE=SKU.PARA3_CODE
		JOIN PARA4 (NOLOCK) ON PARA4.PARA4_CODE=SKU.PARA4_CODE
		JOIN PARA5 (NOLOCK) ON PARA5.PARA5_CODE=SKU.PARA5_CODE
		JOIN PARA6 (NOLOCK) ON PARA6.PARA6_CODE=SKU.PARA6_CODE
		JOIN SECTIOND (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE
		JOIN SECTIONM (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE
		WHERE DEPT_ID='''+LTRIM(RTRIM(@CLOCID))+'''
		 AND A.XN_MODE=''SALE''
		 AND XN_DT BETWEEN '''+REPLACE(CONVERT(VARCHAR,@DFROMDT,102),'.','-')+''' AND '''+REPLACE(CONVERT(VARCHAR,@DTODT,102),'.','-')+'''
		 AND '+@CFILTERCRITERIA+'
		GROUP BY SKU.ARTICLE_CODE,SKU.PARA1_CODE,SKU.PARA2_CODE
		HAVING SUM(ISNULL(A.SALES_QTY,0))>0'
	PRINT @CCMD
	
	INSERT #TMPSLS (ARTICLE_CODE,PARA1_CODE,PARA2_CODE,SLS_QTY,STOCK_QTY,ORDERS_IN_HAND,GIT_QTY)
	EXEC SP_EXECUTESQL @CCMD
	
	IF OBJECT_ID('TEMPDB..#TMPSTOCK','U') IS NOT NULL
		DROP TABLE #TMPSTOCK

	SELECT ARTICLE_CODE,PARA1_CODE,PARA2_CODE,QUANTITY_IN_STOCK AS STOCK_QTY,QUANTITY_IN_STOCK AS GIT_QTY INTO 
	#TMPSTOCK FROM PMT01106 A JOIN SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE
	WHERE 1=2
				
	SET @CCMD=N'SELECT SKU.ARTICLE_CODE,SKU.PARA1_CODE,SKU.PARA2_CODE
			   ,SUM(ISNULL(A.STOCK_QTY,0)+ISNULL(A.OPS_QTY,0))AS CBS
			   ,SUM(ISNULL(A.GIT_QTY,0)) AS GIT_QTY
			   FROM '+@CRFDBNAME+@CRFTABLENAME+' A (NOLOCK)     
			   JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
		       JOIN #TMPSLS B ON SKU.ARTICLE_CODE=B.ARTICLE_CODE AND SKU.PARA1_CODE=B.PARA1_CODE AND SKU.PARA2_CODE=B.PARA2_CODE
		       WHERE A.DEPT_ID='''+@CLOCID+''' 
		       AND A.XN_DT = '''+REPLACE(CONVERT(VARCHAR,GETDATE(),102),'.','-')+'''
		       AND A.XN_MODE=''STOCK''
		       GROUP BY SKU.ARTICLE_CODE,SKU.PARA1_CODE,SKU.PARA2_CODE 
		       HAVING NOT 
		       (
		         SUM(ISNULL(A.STOCK_QTY,0)+ISNULL(A.OPS_QTY,0))=0 
		         AND SUM(ISNULL(A.GIT_QTY,0))=0
		       )'
	
	PRINT @CCMD
	
	INSERT #TMPSTOCK (ARTICLE_CODE,PARA1_CODE,PARA2_CODE,STOCK_QTY,GIT_QTY)
	EXEC SP_EXECUTESQL @CCMD
	
	
	SELECT @CACCODE=DEPT_AC_CODE FROM LOCATION WHERE DEPT_ID=@CLOCID
	
	UPDATE A SET GIT_QTY=CONVERT(NUMERIC(10,2),B.GIT_QTY),STOCK_QTY=CONVERT(NUMERIC(10,2),B.STOCK_QTY) 
	FROM #TMPSLS A 
	JOIN #TMPSTOCK B ON A.ARTICLE_CODE=B.ARTICLE_CODE AND A.PARA1_CODE=B.PARA1_CODE AND A.PARA2_CODE=B.PARA2_CODE 
	
	UPDATE A SET ORDERS_IN_HAND=CONVERT(NUMERIC(10,2),B.PENDING_QTY) 
	FROM #TMPSLS A
	JOIN 
	(SELECT A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE,ORDER_QTY-ISNULL(B.WSL_QTY,0) AS PENDING_QTY
	 FROM 
	 (SELECT ARTICLE_CODE,PARA1_CODE,PARA2_CODE,SUM(QUANTITY) AS ORDER_QTY 
	  FROM BUYER_ORDER_DET A (NOLOCK)
	  JOIN BUYER_ORDER_MST B (NOLOCK) ON A.ORDER_ID=B.ORDER_ID
	 WHERE (AC_CODE=@CACCODE OR DEPT_ID=@CLOCID) GROUP BY ARTICLE_CODE,PARA1_CODE,PARA2_CODE
	 ) A
	 LEFT OUTER JOIN 
	 (SELECT ARTICLE_CODE,PARA1_CODE,PARA2_CODE,SUM(QUANTITY) AS WSL_QTY 
	  FROM IND01106 A (NOLOCK)
	  JOIN INM01106 B (NOLOCK) ON A.INV_ID=B.INV_ID
	  JOIN BUYER_ORDER_MST C (NOLOCK) ON C.ORDER_ID=A.ORDER_ID
	  JOIN SKU D (NOLOCK) ON D.PRODUCT_CODE=A.PRODUCT_CODE
	  LEFT OUTER JOIN WPS_MST E (NOLOCK) ON E.PS_ID=A.PS_ID
	  WHERE C.AC_CODE=@CACCODE AND B.CANCELLED=0 AND (ISNULL(A.ORDER_ID,'')<>'' OR ISNULL(E.ENTRY_MODE,0) IN (3,4) OR B.ENTRY_MODE=4)
	  GROUP BY ARTICLE_CODE,PARA1_CODE,PARA2_CODE
	 )B ON A.ARTICLE_CODE=B.ARTICLE_CODE AND A.PARA1_CODE=B.PARA1_CODE AND A.PARA2_CODE=B.PARA2_CODE
	)B ON A.ARTICLE_CODE=B.ARTICLE_CODE AND A.PARA1_CODE=B.PARA1_CODE AND A.PARA2_CODE=B.PARA2_CODE
	  	 	 	
	SELECT CAST(1 AS BIT) AS CHK, ARTICLE_NO,B.ARTICLE_NAME,PARA1_NAME,PARA2_NAME,A.*,@NGROWTHFACTOR AS GROWTH_FACTOR,
	CONVERT(NUMERIC(10,0),ROUND(A.SLS_QTY+(A.SLS_QTY*@NGROWTHFACTOR/100),0)) AS ESTIMATED_SALES,
	CONVERT(NUMERIC(10,0),ROUND((A.SLS_QTY+(A.SLS_QTY*@NGROWTHFACTOR/100))-(ISNULL(A.STOCK_QTY,0)+ISNULL(A.ORDERS_IN_HAND,0)+
	ISNULL(A.GIT_QTY,0)),0)) AS ORDER_QTY,
	'ROW_'+A.ARTICLE_CODE+C.PARA1_CODE+D.PARA2_CODE AS ROW_ID,UOM_NAME
	FROM #TMPSLS A
	JOIN ARTICLE B (NOLOCK) ON A.ARTICLE_CODE=B.ARTICLE_CODE
	JOIN PARA1 C (NOLOCK) ON C.PARA1_CODE=A.PARA1_CODE
	JOIN PARA2 D (NOLOCK) ON D.PARA2_CODE=A.PARA2_CODE
	JOIN UOM (NOLOCK) ON UOM.UOM_CODE=B.UOM_CODE
	WHERE ((A.SLS_QTY+(A.SLS_QTY*@NGROWTHFACTOR/100))-(ISNULL(A.STOCK_QTY,0)+ISNULL(A.ORDERS_IN_HAND,0)+
	ISNULL(A.GIT_QTY,0)))>0
	
	SET NOCOUNT OFF	
END
