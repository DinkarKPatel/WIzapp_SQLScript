create PROCEDURE GETNEXTEANCODE
	-- THESE ARE THE INPUT PARAMETERS   
	@NWIDTH		INTEGER,  
	@CPREFIX	VARCHAR(40) = '',   
	@NLZEROS	BIT = 1,  
	@CFINYEAR	VARCHAR(40) = '',
	@NROWCOUNT	INTEGER = 0 ,	  
	@CSOURCETABLENAME VARCHAR(200),
	@CXNID VARCHAR(50),
	@CERRORMSG VARCHAR(MAX) OUTPUT  
--WITH ENCRYPTION
AS  
BEGIN  
	BEGIN TRY
	
	DECLARE @NLASTKEYVAL	BIGINT,
			@NTEMPLASTKEYVAL BIGINT,
			@NVALLEN		INTEGER,
			@NTEMPWIDTH		INTEGER,
			@CZEROS			VARCHAR(40),
			@CCMD			NVARCHAR(MAX),
			@CKEYSTABLE		VARCHAR(20),
			@CLASTKEYVAL	VARCHAR(40),
			@NBOOL			BIT ,
			@CCHKNEWKEYVAL	VARCHAR(40),
			@NCOUNT			INTEGER,
			@NTMPROWCOUNT	INTEGER	 ,
			@CTABLENAME		VARCHAR(100),
			@CCOLNAME		VARCHAR(100),
			@NSTEP			INT,
			@CNEWKEYVAL		VARCHAR(100),
			@CPIDROWID		VARCHAR(40),
			@NNEXTKEYVALUE	INT,
			@CNEXTPRODUCTCODE	VARCHAR(50),
			@CMASTERTABLENAME VARCHAR(200),
			@CKEYFIELD VARCHAR(200),
			@CBILLNOCOL VARCHAR(200),
			@CBILLDTCOL VARCHAR(200),
			@CRECEIPTDTCOL VARCHAR(200),
			@SNC_MEMO  VARCHAR(100)
			
	
	SET @CERRORMSG=''
	
	PRINT 'GETNEXTEAN-1'
	SET @NSTEP=10
	
	SELECT @CKEYSTABLE = 'KEYS_PMT',@CTABLENAME='SKU',@CCOLNAME='PRODUCT_CODE'
	
	SET @CCMD = N'IF NOT EXISTS (   SELECT LASTKEYVAL FROM ' + @CKEYSTABLE + 
								 '  (NOLOCK)  WHERE TABLENAME	= ''SKU''
								    AND COLUMNNAME	= ''PRODUCT_CODE''
 									AND PREFIX		= ''' + @CPREFIX + ''' 
 									AND FINYEAR		= ''' + @CFINYEAR + ''' )
				  INSERT ' + @CKEYSTABLE + ' ( TABLENAME, COLUMNNAME, PREFIX, FINYEAR, LASTKEYVAL )   
 									  VALUES ( ''' + @CTABLENAME + ''', ''' + @CCOLNAME + ''', ''' + @CPREFIX + ''',
											   ''' + @CFINYEAR + ''', '''') '
	EXEC SP_EXECUTESQL @CCMD


	PRINT 'GETNEXTEAN-2'	
	IF @NLZEROS = 0       -- ZERO SUFFING IS NOT ENABLED  
	BEGIN   
		SET @NSTEP=20
		SET @CCMD = N'SELECT TOP 1 @NTEMPWIDTH = LEN( LASTKEYVAL )  
					  FROM ' + @CKEYSTABLE + '  (NOLOCK)
					  WHERE TABLENAME = ''' + @CTABLENAME + '''  
					  AND COLUMNNAME  = ''' + @CCOLNAME + '''  
					  AND PREFIX	  = ''' + @CPREFIX + '''  
					  AND FINYEAR	  = ''' + @CFINYEAR + ''''

		EXEC SP_EXECUTESQL @CCMD, N'@NTEMPWIDTH INTEGER OUTPUT', @NTEMPWIDTH OUTPUT
	END   
	ELSE
		SET @NTEMPWIDTH = @NWIDTH

	SET @NSTEP=30
	
	PRINT 'GETNEXTEAN-3'
	SELECT @NVALLEN = @NTEMPWIDTH - LEN(@CPREFIX)  
	
	IF @NVALLEN < 0  
		SELECT  @NVALLEN = 0  

	
	SET @NSTEP=40
	SET @CCMD = N' SELECT TOP 1 @NTEMPLASTKEYVAL = CAST( RIGHT( LASTKEYVAL, '+STR(@NVALLEN)+' ) AS BIGINT )   
				   FROM ' + @CKEYSTABLE + '   (NOLOCK)
				   WHERE TABLENAME = ''' + @CTABLENAME + '''  
				   AND COLUMNNAME  = ''' + @CCOLNAME + '''  
				   AND PREFIX	   = ''' + @CPREFIX + '''  
				   AND FINYEAR     = ''' + @CFINYEAR + ''''

	EXEC SP_EXECUTESQL @CCMD, N'@NTEMPLASTKEYVAL BIGINT OUTPUT', @NTEMPLASTKEYVAL OUTPUT

PRINT 'GETNEXTEAN-4'
	SET @NLASTKEYVAL = (@NTEMPLASTKEYVAL + 1)
	
	SET @NSTEP=50
	
   
	------------ START OF THE LOOP FOR GENERATION OF KEY CODES
		------------ START OF THE LOOP FOR GENERATION OF KEY CODES
	
	SET @NSTEP=60


	DECLARE @CARTICLE_CODE VARCHAR(MAX),@CPARA1_CODE VARCHAR(MAX),@CPARA2_CODE VARCHAR(MAX),@CPURCHASE_PRICE NUMERIC(14,2)
	DECLARE @CARTICLE_CODE1 VARCHAR(MAX),@CPARA1_CODE1 VARCHAR(MAX),@CPARA2_CODE1 VARCHAR(MAX),@CPURCHASE_PRICE1 NUMERIC(14,2)
	
	SELECT @CARTICLE_CODE1='',@CPARA1_CODE1='',@CPARA2_CODE1=''

	IF CURSOR_STATUS('GLOBAL','PID_CUR') IN (0,1)
	BEGIN
		CLOSE PID_CUR
		DEALLOCATE PID_CUR
	END					   
	
	IF @CSOURCETABLENAME='PID01106'
	BEGIN
		INSERT #BARCODES ( PID_ROW_ID, PRODUCT_CODE )
		SELECT A.PID_ROW_ID,C.PRODUCT_CODE FROM #PIDROWS A
		JOIN PID01106 B (NOLOCK) ON A.PID_ROW_ID=B.ROW_ID
		JOIN SKU C  (NOLOCK)  ON C.ARTICLE_CODE=B.ARTICLE_CODE AND C.PARA1_CODE=B.PARA1_CODE AND C.PARA2_CODE=B.PARA2_CODE
		WHERE A.GEN_EAN_CODES=1 AND C.PRODUCT_CODE<>''
		and CHARINDEX ('@',C.product_code )=0
		
		DECLARE PID_CUR CURSOR FOR 
		SELECT  A.PID_ROW_ID, A.ARTICLE_CODE,b.PARA1_CODE,b.PARA2_CODE
		FROM #PIDROWS A JOIN PID01106 B (NOLOCK) ON A.PID_ROW_ID=B.ROW_ID
		LEFT OUTER JOIN #BARCODES C ON C.PID_ROW_ID=A.PID_ROW_ID 
		WHERE GEN_EAN_CODES=1 AND C.PID_ROW_ID IS NULL
		ORDER BY   A.ARTICLE_CODE,PARA1_CODE,PARA2_CODE
	END
	ELSE
	IF @CSOURCETABLENAME='PO_POD01106_UPLOAD'
	BEGIN
	
	    IF EXISTS (SELECT TOP 1 'U ' FROM GENBARCODE_ROWS A (NOLOCK)
					JOIN PO_POD01106_UPLOAD B (NOLOCK) ON A.PID_ROW_ID=B.ROW_ID AND a.sp_id=b.sp_id
					JOIN SKU C  (NOLOCK)  ON C.ARTICLE_CODE=B.ARTICLE_CODE AND C.PARA1_CODE=B.PARA1_CODE AND C.PARA2_CODE=B.PARA2_CODE
					WHERE a.sp_id=@CXNID AND A.GEN_EAN_CODES=1 AND C.PRODUCT_CODE<>''
					AND B.PRODUCT_CODE <>''	AND C.PRODUCT_CODE <>B.PRODUCT_CODE)
		BEGIN
		    SET @CERRORMSG='ARTICLE/COLOR/SIZE CAN NOT BE CHANGE AFTER GENERATE EAN'
		    RETURN
		END
		
	
		INSERT #BARCODES ( PID_ROW_ID, PRODUCT_CODE )
		SELECT A.PID_ROW_ID,C.PRODUCT_CODE FROM GENBARCODE_ROWS A (NOLOCK)
		JOIN PO_POD01106_UPLOAD B (NOLOCK) ON A.PID_ROW_ID=B.ROW_ID AND a.sp_id=b.sp_id
		JOIN SKU C  (NOLOCK)  ON C.ARTICLE_CODE=B.ARTICLE_CODE AND C.PARA1_CODE=B.PARA1_CODE AND C.PARA2_CODE=B.PARA2_CODE
		WHERE a.sp_id=@CXNID AND A.GEN_EAN_CODES=1 AND C.PRODUCT_CODE<>''
		and CHARINDEX ('@',C.product_code )=0
		
		DECLARE PID_CUR CURSOR FOR 
		SELECT  A.PID_ROW_ID, A.ARTICLE_CODE,a.PARA1_CODE,a.PARA2_CODE
		FROM GENBARCODE_ROWS A (NOLOCK) JOIN PO_POD01106_UPLOAD B (NOLOCK) ON A.PID_ROW_ID=B.ROW_ID AND a.sp_id=b.sp_id
		LEFT OUTER JOIN #BARCODES C ON C.PID_ROW_ID=A.PID_ROW_ID 
		WHERE a.sp_id=@CXNID AND GEN_EAN_CODES=1 AND C.PID_ROW_ID IS NULL
		ORDER BY   A.ARTICLE_CODE,a.PARA1_CODE,a.PARA2_CODE	
	END	
	ELSE
	IF @CSOURCETABLENAME='IRD01106'
	BEGIN
		INSERT #BARCODES ( PID_ROW_ID, PRODUCT_CODE )
		SELECT A.PID_ROW_ID,C.PRODUCT_CODE FROM #PIDROWS A
		JOIN IRD01106 B (NOLOCK) ON A.PID_ROW_ID=B.ROW_ID
		JOIN SKU C  (NOLOCK)  ON C.ARTICLE_CODE=B.ARTICLE_CODE AND C.PARA1_CODE=B.PARA1_CODE AND C.PARA2_CODE=B.PARA2_CODE
		WHERE A.GEN_EAN_CODES=1 AND C.PRODUCT_CODE<>''
		and CHARINDEX ('@',C.product_code )=0
		
		DECLARE PID_CUR CURSOR FOR 
		SELECT  A.PID_ROW_ID, A.ARTICLE_CODE,b.PARA1_CODE,b.PARA2_CODE
		FROM #PIDROWS A JOIN IRD01106 B (NOLOCK) ON A.PID_ROW_ID=B.ROW_ID
		LEFT OUTER JOIN #BARCODES C ON C.PID_ROW_ID=A.PID_ROW_ID 
		WHERE GEN_EAN_CODES=1 AND C.PID_ROW_ID IS NULL
		ORDER BY   A.ARTICLE_CODE,PARA1_CODE,PARA2_CODE	
	END	
	ELSE
	IF @CSOURCETABLENAME='SNC_DET'
	BEGIN
		INSERT #BARCODES ( PID_ROW_ID, PRODUCT_CODE )
		SELECT A.PID_ROW_ID,C.PRODUCT_CODE FROM #PIDROWS A
		JOIN SNC_DET B (NOLOCK) ON A.PID_ROW_ID=B.ROW_ID
		JOIN SKU C  (NOLOCK)  ON C.ARTICLE_CODE=B.ARTICLE_CODE AND C.PARA1_CODE=B.PARA1_CODE AND C.PARA2_CODE=B.PARA2_CODE
		WHERE A.GEN_EAN_CODES=1 AND C.PRODUCT_CODE<>''
		and CHARINDEX ('@',C.product_code )=0 and c.barcode_coding_scheme=1
		
		DECLARE PID_CUR CURSOR FOR 
		SELECT  A.PID_ROW_ID, A.ARTICLE_CODE,b.PARA1_CODE,b.PARA2_CODE
		FROM #PIDROWS A JOIN SNC_DET B (NOLOCK) ON A.PID_ROW_ID=B.ROW_ID
		LEFT OUTER JOIN #BARCODES C ON C.PID_ROW_ID=A.PID_ROW_ID 
		WHERE GEN_EAN_CODES=1 AND C.PID_ROW_ID IS NULL
		ORDER BY   A.ARTICLE_CODE,PARA1_CODE,PARA2_CODE	
	END	
	ELSE
	IF @CSOURCETABLENAME='ORD_PLAN_DET'
	BEGIN
		INSERT #BARCODES ( PID_ROW_ID, PRODUCT_CODE )
		SELECT A.PID_ROW_ID,C.PRODUCT_CODE FROM #PIDROWS A
		JOIN ord_plan_DET B (NOLOCK) ON A.PID_ROW_ID=B.ROW_ID
		JOIN SKU C  (NOLOCK)  ON C.ARTICLE_CODE=B.ARTICLE_CODE AND C.PARA1_CODE=B.PARA1_CODE AND C.PARA2_CODE=B.PARA2_CODE
		WHERE A.GEN_EAN_CODES=1 AND C.PRODUCT_CODE<>''
		and CHARINDEX ('@',C.product_code )=0 and a.CODING_SCHEME=1
		
		DECLARE PID_CUR CURSOR FOR 
		SELECT  A.PID_ROW_ID, A.ARTICLE_CODE,b.PARA1_CODE,b.PARA2_CODE
		FROM #PIDROWS A JOIN ORD_PLAN_DET B (NOLOCK) ON A.PID_ROW_ID=B.ROW_ID
		LEFT OUTER JOIN #BARCODES C ON C.PID_ROW_ID=A.PID_ROW_ID 
		WHERE GEN_EAN_CODES=1 AND C.PID_ROW_ID IS NULL
		ORDER BY   A.ARTICLE_CODE,PARA1_CODE,PARA2_CODE	
	END	
	ELSE
	IF @CSOURCETABLENAME='#TMPMASTERSENC'
	BEGIN
		
			
		INSERT #BARCODES ( PID_ROW_ID, PRODUCT_CODE )
		SELECT DISTINCT  A.PID_ROW_ID,C.PRODUCT_CODE 
		FROM #PIDROWS A
		JOIN #TMPMASTERSENC B ON A.PID_ROW_ID=B.ROW_ID
		JOIN SKU C  (NOLOCK)  ON C.ARTICLE_CODE=B.ARTICLE_CODE AND C.PARA1_CODE=B.PARA1_CODE AND C.PARA2_CODE=B.PARA2_CODE
		WHERE A.GEN_EAN_CODES=1 AND C.PRODUCT_CODE<>''
		and CHARINDEX ('@',C.product_code )=0
				--AND CHARINDEX('@',C.product_code)=0
				  
	
		DECLARE PID_CUR CURSOR FOR 
		SELECT  A.PID_ROW_ID, a.ARTICLE_CODE,a.PARA1_CODE,a.PARA2_CODE
		FROM #PIDROWS A 
		LEFT OUTER JOIN #BARCODES C ON C.PID_ROW_ID=A.PID_ROW_ID 
		WHERE A.GEN_EAN_CODES=1 AND C.PID_ROW_ID IS NULL
		ORDER BY   A.ARTICLE_CODE,PARA1_CODE,PARA2_CODE	
		
		
	END		
	
			
	--PRINT 'GETNEXTEAN-5'
	OPEN PID_CUR
	
	FETCH NEXT FROM PID_CUR INTO @CPIDROWID,@CARTICLE_CODE,@CPARA1_CODE,@CPARA2_CODE
	WHILE @@FETCH_STATUS = 0
	BEGIN
		IF @CARTICLE_CODE1<>@CARTICLE_CODE OR @CPARA1_CODE1<>@CPARA1_CODE OR @CPARA2_CODE1<>@CPARA2_CODE
		BEGIN

			SELECT @CARTICLE_CODE1=@CARTICLE_CODE,@CPARA1_CODE1=@CPARA1_CODE,@CPARA2_CODE1=@CPARA2_CODE

			SET @NCOUNT = 1	
			SET @NBOOL = 0

			WHILE (@NBOOL=0) 
			BEGIN
				
				PRINT 'GETNEXTEAN-6'
				SET @NSTEP=70	
				
				IF @NLZEROS = 1  
					SELECT @CZEROS = REPLICATE('0', @NVALLEN - LEN(@NLASTKEYVAL))  
				ELSE  
					SELECT @CZEROS = ''  
				
				SET @NSTEP=80
				
				--SELECT  @CPREFIX + @CZEROS + LTRIM(RTRIM(CAST(@NLASTKEYVAL AS VARCHAR(40))))
				
				--SELECT @CNEWKEYVAL+DBO.FN_CREATECHECKDIGIT(@CNEWKEYVAL)
				
				
				SELECT @CNEWKEYVAL = @CPREFIX + @CZEROS + LTRIM(RTRIM(CAST(@NLASTKEYVAL AS VARCHAR(40))))
				
				SELECT @CNEXTPRODUCTCODE = @CNEWKEYVAL+RTRIM(LTRIM(DBO.FN_CREATECHECKDIGIT(@CNEWKEYVAL)))
				
				
				
				PRINT 'GETNEXTEAN-7'
				IF NOT EXISTS (SELECT TOP 1 PRODUCT_CODE FROM SKU (NOLOCK) WHERE SUBSTRING(PRODUCT_CODE,1,LEN(PRODUCT_CODE)-1)=
							   SUBSTRING(@CNEWKEYVAL,1,LEN(LTRIM(RTRIM(@CNEWKEYVAL)))-1) AND LEN(PRODUCT_CODE)=13)
					AND NOT EXISTS (SELECT TOP 1 PRODUCT_CODE FROM SKU (NOLOCK) WHERE PRODUCT_CODE=@CNEXTPRODUCTCODE)
				   SET @NBOOL = 1
				SET @NLASTKEYVAL = @NLASTKEYVAL + 1   
			END   
			------------ END OF THE LOOP FOR GENERATION OF KEY CODES 
					
		END
		PRINT 'GETNEXTEAN-8'
		INSERT #BARCODES ( PID_ROW_ID, PRODUCT_CODE )
		VALUES   ( @CPIDROWID, @CNEXTPRODUCTCODE )
		
		SET @NSTEP=140		
		FETCH NEXT FROM PID_CUR INTO @CPIDROWID,@CARTICLE_CODE,@CPARA1_CODE,@CPARA2_CODE
		
	
	END
	CLOSE PID_CUR
	DEALLOCATE PID_CUR
	

	IF @CNEWKEYVAL IS NOT NULL 
	BEGIN
		 SET @NSTEP=150
		 
		 PRINT 'GETNEXTEAN-9'
		 SET @CCMD = N' UPDATE ' + @CKEYSTABLE + '
						SET LASTKEYVAL  = ''' + @CNEWKEYVAL + '''  
						WHERE TABLENAME = ''' + @CTABLENAME + '''  
						AND COLUMNNAME	= ''' + @CCOLNAME + '''  
						AND PREFIX		= ''' + @CPREFIX + '''  
						AND FINYEAR		= ''' + @CFINYEAR + ''''  

		  EXEC SP_EXECUTESQL @CCMD     
	END
	
	SET @NSTEP=163


	--In Jobcard ean code insert into in sku so retun to jobcard Proc
	IF @CSOURCETABLENAME='ORD_PLAN_DET'
	   GOTO END_PROC

	SELECT @CMASTERTABLENAME=(CASE WHEN @CSOURCETABLENAME='PID01106' THEN 'PIM01106' 
	                          WHEN @CSOURCETABLENAME='PO_POD01106_UPLOAD' THEN 'PO_POM01106_UPLOAD' 
	                          WHEN @CSOURCETABLENAME='SNC_DET' THEN 'SNC_MST'  ELSE 'IRM01106' END),
		          @CKEYFIELD=(CASE WHEN  @CSOURCETABLENAME='PID01106' THEN 'MRR_ID' 
		                           WHEN  @CSOURCETABLENAME='PO_POD01106_UPLOAD' THEN 'SP_ID' 
		                           WHEN  @CSOURCETABLENAME='SNC_DET' THEN 'MEMO_ID' ELSE 'IRM_MEMO_ID' END)
		                      	

	SELECT @CBILLNOCOL=(CASE WHEN  @CSOURCETABLENAME='PID01106' THEN 'BILL_NO' 
	                         WHEN  @CSOURCETABLENAME='PO_POD01106_UPLOAD' THEN 'PO_NO' 
	                         WHEN  @CSOURCETABLENAME='SNC_DET' THEN 'MEMO_NO' ELSE '' END),		
		   @CBILLDTCOL=(CASE WHEN  @CSOURCETABLENAME='PID01106' THEN 'B.INV_DT' 
		                     WHEN  @CSOURCETABLENAME='PO_POD01106_UPLOAD' THEN 'PO_DT' 
		                     WHEN  @CSOURCETABLENAME='SNC_DET' THEN 'B.RECEIPT_DT' ELSE '' END),		
		   @CRECEIPTDTCOL=(CASE WHEN  @CSOURCETABLENAME='PID01106' THEN 'B.RECEIPT_DT' 
		                        WHEN  @CSOURCETABLENAME='PO_POD01106_UPLOAD' THEN 'B.PO_DT' 
		                        WHEN  @CSOURCETABLENAME='SNC_DET' THEN 'B.RECEIPT_DT' ELSE '' END)
	
		SET @NSTEP=165	
	
	IF @CMASTERTABLENAME='IRM01106' 
	   SET @SNC_MEMO =' B.MEMO_TYPE '
	ELSE
	   SET @SNC_MEMO =' 1 '
	   
	   
	   --SELECT * FROM #BARCODES
	   --SELECT PRODUCT_CODE, * FROM #TMPMASTERSENC
	   
	IF @cSourceTableName='#TMPMASTERSENC'  
	BEGIN 
    
	      UPDATE A SET PRODUCT_CODE=B.product_code  
	      FROM #TMPMASTERSENC A
	      JOIN #BARCODES B ON A.ROW_ID =B.PID_ROW_ID 
	      WHERE A.PRODUCT_CODE<>B.product_code 
	      
		 SET @CCMD=N'INSERT SKU ( PRODUCT_CODE,PRODUCT_NAME,ARTICLE_CODE, PARA1_CODE, PARA2_CODE, PARA3_CODE,PARA4_CODE, PARA5_CODE, PARA6_CODE,  
		 PURCHASE_PRICE, MRP, WS_PRICE,LAST_UPDATE,INV_NO,INV_DT, RECEIPT_DT, AC_CODE,FORM_ID,BARCODE_CODING_SCHEME)  
		  SELECT DISTINCT A.PRODUCT_CODE,C.ARTICLE_NAME,c.ARTICLE_CODE, p1.PARA1_CODE, p2.PARA2_CODE, p3.PARA3_CODE, 
		     p4.PARA4_CODE, p5.PARA5_CODE, p6.PARA6_CODE,  
			 A.PURCHASE_PRICE as PURCHASE_PRICE, A.MRP as MRP, A.WS_PRICE as WS_Price, GETDATE() AS LAST_UPDATE,   
			 '''' as INV_NO,'''' as INV_DT,'''' as RECEIPT_DT,''0000000000'' as AC_CODE,
			 ''0000000'' as FORM_ID,C.CODING_SCHEME  
		  FROM '+@CSOURCETABLENAME+' A  
		  JOIN ARTICLE C (NOLOCK) ON A.ARTICLE_CODE = C.ARTICLE_CODE
		  JOIN para1 p1 (NOLOCK) ON p1.para1_CODE=a.para1_CODE
		  JOIN para2 p2 (NOLOCK) ON p2.para2_CODE=a.para2_CODE
		  JOIN para3 p3 (NOLOCK) ON p3.para3_name=a.para3_name
		  JOIN para4 p4 (NOLOCK) ON p4.para4_name=a.para4_name
		  JOIN para5 p5 (NOLOCK) ON p5.para5_name=a.para5_name
		  JOIN para6 p6 (NOLOCK) ON p6.para6_name=a.para6_name
		  JOIN #BARCODES BC ON A.PRODUCT_CODE = BC.PRODUCT_CODE  
		  LEFT OUTER JOIN SKU D (NOLOCK) ON A.PRODUCT_CODE = D.PRODUCT_CODE
		  WHERE D.PRODUCT_CODE IS NULL' 
    END
	ELSE		
	IF @CMASTERTABLENAME='IRM01106'
		 SET @CCMD=N'INSERT SKU ( PRODUCT_CODE,PRODUCT_NAME,ARTICLE_CODE, PARA1_CODE, PARA2_CODE, PARA3_CODE,PARA4_CODE, PARA5_CODE, PARA6_CODE,  
		 PURCHASE_PRICE, MRP, WS_PRICE,LAST_UPDATE,INV_NO,INV_DT, RECEIPT_DT, AC_CODE,FORM_ID,BARCODE_CODING_SCHEME)  
		  SELECT DISTINCT A.NEW_PRODUCT_CODE,C.ARTICLE_NAME,A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, A.PARA3_CODE, A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE,  
			 E.PURCHASE_PRICE, A.NEW_MRP, A.NEW_WSP, GETDATE() AS LAST_UPDATE,   
			 E.INV_NO AS INV_NO,E.INV_DT,E.RECEIPT_DT,E.AC_CODE,E.FORM_ID,C.CODING_SCHEME  
		  FROM '+@CSOURCETABLENAME+' A (NOLOCK)  
		  JOIN ARTICLE C (NOLOCK) ON A.ARTICLE_CODE = C.ARTICLE_CODE  
		  JOIN #BARCODES BC (NOLOCK) ON A.NEW_PRODUCT_CODE = BC.PRODUCT_CODE  
		  LEFT OUTER JOIN SKU D (NOLOCK) ON A.NEW_PRODUCT_CODE = D.PRODUCT_CODE  
		  JOIN SKU E (NOLOCK) ON E.PRODUCT_CODE=A.PRODUCT_CODE  
		  WHERE A.IRM_MEMO_ID='''+@CXNID+''' AND A.NEW_PRODUCT_CODE<>'''' AND D.PRODUCT_CODE IS NULL
		  AND A.ROW_ID
		  =(SELECT TOP 1 ROW_ID FROM '+@CSOURCETABLENAME+' E (NOLOCK)  WHERE E.IRM_MEMO_ID='''+@CXNID+''' AND 
			E.ARTICLE_CODE=A.ARTICLE_CODE AND E.PARA1_CODE=A.PARA1_CODE AND E.PARA2_CODE=A.PARA2_CODE)' 
	    
	ELSE
		SET @CCMD=N'INSERT SKU ( PRODUCT_CODE,PRODUCT_NAME,ARTICLE_CODE, PARA1_CODE, PARA2_CODE, PARA3_CODE,PARA4_CODE, PARA5_CODE, PARA6_CODE,
								 PURCHASE_PRICE, MRP,  LAST_UPDATE,INV_NO,INV_DT, RECEIPT_DT, AC_CODE,FORM_ID,WS_PRICE,ER_FLAG,
								 BARCODE_CODING_SCHEME)
		  SELECT BC.PRODUCT_CODE,C.ARTICLE_NAME, A.ARTICLE_CODE, A.PARA1_CODE, A.PARA2_CODE, A.PARA3_CODE, A.PARA4_CODE, A.PARA5_CODE, A.PARA6_CODE,
							 A.PURCHASE_PRICE, A.MRP,  GETDATE() AS LAST_UPDATE, 
							 '+@CBILLNOCOL+' AS INV_NO,'+@CBILLDTCOL+' AS INV_DT,'+@CRECEIPTDTCOL+' AS RECEIPT_DT,
							 B.AC_CODE,A.FORM_ID,A.WHOLESALE_PRICE,'+@SNC_MEMO+' AS ER_FLAG,C.CODING_SCHEME
		  FROM '+@CSOURCETABLENAME+' A (NOLOCK)  
		  JOIN '+@CMASTERTABLENAME+' B (NOLOCK) ON A.'+@CKEYFIELD+'= B.'+@CKEYFIELD+'
		  JOIN ARTICLE C (NOLOCK) ON A.ARTICLE_CODE = C.ARTICLE_CODE  
		  JOIN #BARCODES BC ON A.ROW_ID = BC.PID_ROW_ID
		  LEFT OUTER JOIN SKU D (NOLOCK) ON BC.PRODUCT_CODE = D.PRODUCT_CODE  
 		  WHERE B.'+@CKEYFIELD+' = '''+@CXNID+'''  
 		  AND ISNULL(C.GEN_EAN_CODES,0)=1 	  AND   D.PRODUCT_CODE IS NULL
		  AND A.ROW_ID
		  =(SELECT TOP 1 ROW_ID FROM '+@CSOURCETABLENAME+' E (NOLOCK)  WHERE E.'+@CKEYFIELD+'='''+@CXNID+''' AND 
			E.ARTICLE_CODE=A.ARTICLE_CODE AND E.PARA1_CODE=A.PARA1_CODE AND E.PARA2_CODE=A.PARA2_CODE)'    
   
	PRINT @CCMD	
	EXEC SP_EXECUTESQL @CCMD
	
	SET @NSTEP=167
	END TRY
	
	BEGIN CATCH
		print 'catch in getnexteancodes at step#'+LTRIM(STR(@NSTEP))+' '+error_message()
		SET @CERRORMSG = 'PROCEDURE GETNEXTEANCODES : STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
	END CATCH

	end_proc:
	
END