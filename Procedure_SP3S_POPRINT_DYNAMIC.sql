create  PROCEDURE SP3S_POPRINT_DYNAMIC  
(  
@cMemoId VARCHAR(40)  
)  
AS  
BEGIN  
  
  
    DECLARE @cCmdCols VARCHAR(MAX),@cCmd NVARCHAR(MAX),@cCols NVARCHAR(MAX),@cCmd1 NVARCHAR(MAX),@cCmd2 NVARCHAR(MAX),@cCmd3 NVARCHAR(MAX),@cCmdIMG NVARCHAR(MAX)  
    ,@PARA1 NVARCHAR(10),@PARA2 NVARCHAR(10),@PARA3 NVARCHAR(10),@PARA4 NVARCHAR(10),@PARA5 NVARCHAR(10),@PARA6 NVARCHAR(10),  
    @cnullableCols VARCHAR(max),@CERRMSG VARCHAR(1000)  
      
     DECLARE @IMG_SECTION BIT,@IMG_SUB_SECTION BIT,@IMG_ARTICLE BIT,@IMG_PARA1 BIT,@IMG_PARA2 BIT,@IMG_PARA3 BIT,@IMG_PARA4 BIT,@IMG_PARA5 BIT,@IMG_PARA6 BIT,@IMG_PRODUCT BIT  
  SELECT @IMG_SECTION=SECTION,@IMG_SUB_SECTION=SUB_SECTION,@IMG_ARTICLE=ARTICLE          
  ,@IMG_PARA1=PARA1 ,@IMG_PARA2=PARA2, @IMG_PARA3=PARA3,@IMG_PARA4=PARA4          
  ,@IMG_PARA5=PARA5 ,@IMG_PARA6=PARA6, @IMG_PRODUCT=PRODUCT          
  FROM DBO.IMAGE_INFO_CONFIG WITH(NOLOCK)    
   
    SET @CERRMSG=''  
  DECLARE @NTAXABLEVALUE NUMERIC(14,2),@NIGST_AMOUNT NUMERIC(14,2),@NCGST_AMOUNT NUMERIC(14,2),@NSGST_AMOUNT NUMERIC(14,2)  
    
  SELECT  @NTAXABLEVALUE=ISNULL(pod.XN_VALUE_WITHOUT_GST,0)+ ISNULL(pom.OTHER_CHARGES_TAXABLE_VALUE,0)+ISNULL(pom.FREIGHT_TAXABLE_VALUE,0),  
       @NIGST_AMOUNT=ISNULL(pod.IGST_AMOUNT,0)+ISNULL(pom.OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(pom.FREIGHT_IGST_AMOUNT,0),  
       @NCGST_AMOUNT=ISNULL(pod.CGST_AMOUNT,0)+ISNULL(pom.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(pom.FREIGHT_CGST_AMOUNT,0),  
       @NSGST_AMOUNT=ISNULL(pod.SGST_AMOUNT,0)+ ISNULL(pom.OTHER_CHARGES_SGST_AMOUNT,0)+ISNULL(pom.FREIGHT_SGST_AMOUNT,0)  
  FROM pom01106  pom (NOLOCK)  
  JOIN   
  (   
     SELECT PO_Id ,  
            SUM(XN_VALUE_WITHOUT_GST) AS XN_VALUE_WITHOUT_GST,  
      SUM(IGST_AMOUNT ) AS IGST_AMOUNT,  
      SUM(CGST_AMOUNT ) AS CGST_AMOUNT,  
      SUM(SGST_AMOUNT) AS SGST_AMOUNT  
     FROM pod01106 pod (NOLOCK)  
     WHERE pod.PO_Id=@CMEMOID  
     GROUP BY PO_Id  
   ) pod ON pom.PO_Id =pod.PO_Id   
   WHERE pom.PO_Id=@cMemoId   
  
  
        SELECT TOP 1 @PARA1=VALUE FROM CONFIG WHERE config_option='PARA1_caption' AND ISNULL(VALUE,'') <>''  
        SELECT TOP 1 @PARA2=VALUE FROM CONFIG WHERE config_option='PARA2_caption' AND ISNULL(VALUE,'') <>''  
        SELECT TOP 1 @PARA3=VALUE FROM CONFIG WHERE config_option='PARA3_caption' AND ISNULL(VALUE,'') <>''  
        SELECT TOP 1 @PARA4=VALUE FROM CONFIG WHERE config_option='PARA4_caption' AND ISNULL(VALUE,'') <>''  
        SELECT TOP 1 @PARA5=VALUE FROM CONFIG WHERE config_option='PARA5_caption' AND ISNULL(VALUE,'') <>''  
        SELECT TOP 1 @PARA6=VALUE FROM CONFIG WHERE config_option='PARA6_caption' AND ISNULL(VALUE,'') <>''  
     SET @PARA1=CASE WHEN ISNULL(@PARA1,'')='' THEN 'Para1' ELSE ISNULL(@PARA1,'') END  
     SET @PARA2=CASE WHEN ISNULL(@PARA2,'')='' THEN 'Para2' ELSE ISNULL(@PARA2,'') END  
     SET @PARA3=CASE WHEN ISNULL(@PARA3,'')='' THEN 'Para3' ELSE ISNULL(@PARA3,'') END  
     SET @PARA4=CASE WHEN ISNULL(@PARA4,'')='' THEN 'Para4' ELSE ISNULL(@PARA4,'') END  
     SET @PARA5=CASE WHEN ISNULL(@PARA5,'')='' THEN 'Para5' ELSE ISNULL(@PARA5,'') END  
     SET @PARA6=CASE WHEN ISNULL(@PARA6,'')='' THEN 'Para6' ELSE ISNULL(@PARA6,'') END  
      
     SELECT @cCols=COALESCE(@cCols+',','')+column_name+' ['+DISPLAY_COLUMN_NAME+']'   
     FROM dynamic_print_cols   
     WHERE LTRIM(RTRIM(xn_type))='po' AND selected=1  
     and DISPLAY_COLUMN_NAME<>'SizeQtyString'  
  
  
  SELECT @cnullableCols=COALESCE(@cnullableCols+',','')+'NULL as '+' ['+DISPLAY_COLUMN_NAME+']'   
  FROM dynamic_print_cols   
     WHERE LTRIM(RTRIM(xn_type))='PO' AND selected=0  
  SET @cnullableCols=ISNULL(@cnullableCols,'')  
  IF ISNULL(@cnullableCols,'')<>''  
     SET @cnullableCols=','+ISNULL(@cnullableCols,'')  
    
    select  username   into #TmpApprovalUsers from users where 1=2   
      
    IF EXISTS (SELECT TOP 1 'U' FROM DYNAMIC_PRINT_COLS WHERE XN_TYPE='PO' AND DISPLAY_COLUMN_NAME='APPROVED_USER' AND SELECTED=1)  
    BEGIN  
  
    ;WITH cte AS  
  (  
   SELECT  user_code ,  
           SR=ROW_NUMBER() OVER ( PARTITION BY XN_ID ORDER BY LAST_UPDATE DESC)    
   FROM  TRANSACTION_APPROVAL_DET   
   WHERE XN_TYPE='PO' and xn_id=@CMEMOID  
  )  
          
  INSERT INTO #TmpApprovalUsers (username)  
  SELECT top 1 username   
  FROM CTE a  
  join users u on u.user_code =a.USER_CODE   
  WHERE a.SR=1    
  
    
     
   END  
  
  
      
 if object_id('tempdb..#tmpBod','u') Is not null   
    Drop table #tmpBod  
     
 SELECT POD.ROW_ID AS POD_ROW_ID,  FROM_UOM_NAME,TO_UOM_NAME,   
     AREA_LENGTH,AREA_WIDTH,AREA_SQARE,AREA_RATE_PP,RATE_AREA_SQUARE  
 into #tmpBod  
 FROM BUYER_ORDER_DET A (NOLOCK)  
 JOIN POD01106 POD (NOLOCK) ON POD.WOD_ROW_ID =A.ROW_ID   
 LEFT JOIN STANDARD_UOM SUOM (NOLOCK) ON SUOM.UOM_CODE=A.AREA_UOM_CODE  
 where POD.po_id=@CMEMOID  
   
   
    if object_id ('tempdb..#tmpWSLordmeasurement','u') is not null  
        drop table #tmpWSLordmeasurement  
          
        select row_id ,MEASURMENT_VALUE=CAST('' as varchar(max))  
          into #tmpWSLordmeasurement  
        from WSL_ORDER_DET a (nolock)  
        where 1=2  
            
   
  
      IF EXISTS (SELECT TOP 1 'U' FROM DYNAMIC_PRINT_COLS WHERE XN_TYPE='PO' AND DISPLAY_COLUMN_NAME='MEASURMENT_VALUE' AND SELECTED=1)  
    BEGIN  
      
       if object_id ('tempdb..#tmpmeasurement','u') is not null  
          drop table #tmpmeasurement  
  
     SELECT pod.row_id, D.M_NAME+'-'+B.MEASURMENT AS MEASURMENT_NAME ,B.MEASURMENT ,B.PREV_MEASURE, B.TMD_ROW_ID,d.M_CODE AS ATTRIBUTE_CODE    
       into #tmpmeasurement  
     FROM WSL_ORDER_DET (NOLOCK) A    
     JOIN POD01106 POD (NOLOCK) ON POD.WOD_ROW_ID =A.ROW_ID   
     JOIN TDD01106 (NOLOCK) B ON B.TMD_ROW_ID = A.ROW_ID  
     JOIN MEASUREMENT_MST (NOLOCK) D ON B.attribute_code=D.M_CODE  
     WHERE D.INACTIVE = 0    
     and pod.po_id=@CMEMOID  
         
         insert into #tmpWSLordmeasurement(ROW_ID,MEASURMENT_VALUE)  
   SELECT  A.ROW_ID ,  
    MEASURMENT_VALUE=(SELECT STUFF((SELECT CASE WHEN ISNULL(MEASURMENT_NAME,'') <> '' THEN ' , ' ELSE '' END +MEASURMENT_NAME FROM #TMPMEASUREMENT  B  WHERE A.ROW_ID  =B.ROW_ID   
    GROUP BY MEASURMENT_NAME  FOR XML PATH('')),1,2,''))        
   FROM #TMPMEASUREMENT A  
   GROUP BY A.ROW_ID  
    
    end  
  
  
  
   DECLARE @CSPID VARCHAR(100),@CTABLENAME VARCHAR(100)  
  
  SET @CSPID=LTRIM(RTRIM(STR(@@SPID )))  
  SET @CTABLENAME  ='##TMPPOPRINT'+@CSPID  
  
 SET @CCMD = N'IF OBJECT_ID(''TEMPDB..'+@CTABLENAME+''',''U'') IS NOT NULL  
            DROP TABLE '+@CTABLENAME+''  
 PRINT @CCMD  
    EXEC SP_EXECUTESQL @CCMD  
  
   
  
    
  --select @cCols  
    SET @cCmdCols=N'  
    SELECT '+@cCols+', POM.LOCATION_CODE, 
    '''+@para1 +''' AS PARA1_CONFIG,'''+@PARA2 +''' AS PARA2_CONFIG,'''+@PARA3 +''' AS PARA3_CONFIG,  
    '''+@PARA4 +''' AS PARA4_CONFIG,'''+@PARA5 +''' AS PARA5_CONFIG,'''+@PARA6 +''' AS PARA6_CONFIG,  
    DBO.FN_CONVERTAMOUNTINWORDS(pom.total_amount) AS  NET_AMOUNT_IN_WORDS,  
    '+RTRIM(LTRIM(STR(@NTAXABLEVALUE ,14,2)))+' as Total_Taxable_value,  
    '+RTRIM(LTRIM(STR(@NIGST_AMOUNT,14,2)))+' as Total_Igst_Amount,  
    '+RTRIM(LTRIM(STR(@NSGST_AMOUNT,14,2)))+' as Total_Sgst_Amount,  
    '+RTRIM(LTRIM(STR(@NCGST_AMOUNT,14,2)))+' as Total_Cgst_amount  
     '+@cnullableCols  
    +'  INTO '+@CTABLENAME+'  '  
    SET @cCmd=N' FROM POM01106 POM (NOLOCK)    
      JOIN LMV01106 lmv (NOLOCK) ON POM.AC_CODE = lmv.AC_CODE    
      JOIN USERS (NOLOCK) ON POM.USER_CODE = USERS.USER_CODE    
      JOIN POD01106 POD (NOLOCK) ON POM.PO_ID = POD.PO_ID    
      JOIN PARA1 P1 (NOLOCK) ON POD.PARA1_CODE = P1.PARA1_CODE    
      JOIN PARA2 P2 (NOLOCK) ON POD.PARA2_CODE = P2.PARA2_CODE    
      JOIN PARA3 P3 (NOLOCK) ON POD.PARA3_CODE = P3.PARA3_CODE    
      JOIN PARA4 P4 (NOLOCK) ON POD.PARA4_CODE = P4.PARA4_CODE    
      JOIN PARA5 P5 (NOLOCK) ON POD.PARA5_CODE = P5.PARA5_CODE    
      JOIN PARA6 P6 (NOLOCK) ON POD.PARA6_CODE = P6.PARA6_CODE    
      JOIN ARTICLE ART (NOLOCK) ON POD.ARTICLE_CODE = ART.ARTICLE_CODE    
   LEFT OUTER JOIN ARTICLE_FIX_ATTR ATTR  (NOLOCK) ON ART.ARTICLE_CODE = ATTR.ARTICLE_CODE   
   LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE  
   LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE  
   LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE  
   LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE  
   LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE  
   LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE  
   LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE  
   LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE  
   LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE  
   LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE  
   LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE  
   LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE  
   LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE  
   LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE  
   LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE  
   LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE  
   LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE  
   LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE  
   LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE  
   LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE  
   LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE  
   LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE  
   LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE  
   LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE  
   LEFT OUTER JOIN ATTR25_MST AT25(NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE    
   JOIN UOM UOM (NOLOCK) ON ART.UOM_CODE = UOM.UOM_CODE    
      LEFT OUTER JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE = POD.PRODUCT_CODE    
      JOIN COMPANY CMP (NOLOCK) ON POM.COMPANY_CODE=CMP.COMPANY_CODE    
      LEFT JOIN AREA CA (NOLOCK) ON CMP.AREA_CODE=CA.AREA_CODE    
      LEFT  JOIN CITY CC (NOLOCK) ON CA.CITY_CODE=CC.CITY_CODE    
      LEFT  JOIN [STATE] CS (NOLOCK) ON CC.CITY_CODE=CS.STATE_CODE    
      LEFT  JOIN REGIONM CRG (NOLOCK) ON CS.REGION_CODE=CRG.REGION_CODE    
      JOIN LOCATION LCT (NOLOCK) ON POM.DEPT_ID=LCT.DEPT_ID    
      JOIN AREA LA (NOLOCK) ON LCT.AREA_CODE=LA.AREA_CODE    
      JOIN CITY LC (NOLOCK) ON LA.CITY_CODE=LC.CITY_CODE    
      JOIN [STATE] LS (NOLOCK) ON LC.STATE_CODE=LS.STATE_CODE    
      JOIN REGIONM LRG (NOLOCK) ON LS.REGION_CODE=LRG.REGION_CODE    
      JOIN HD01106 HD (NOLOCK) ON lmv.HEAD_CODE=HD.HEAD_CODE    
      JOIN SECTIOND SD (NOLOCK) ON ART.SUB_SECTION_CODE=SD.SUB_SECTION_CODE    
      JOIN SECTIONM SM (NOLOCK) ON SD.SECTION_CODE=SM.SECTION_CODE 
      left join #TmpApprovalUsers TMPAPR ON 1=1   
      LEFT JOIN LM_BANK_DETAIL BD (NOLOCK) ON BD.AC_CODE =POM.AC_CODE 
      left join Employee Emp (nolock) on emp.emp_code=pom.po_emp_code
      '    
       
SET @cCmd1=N'LEFT JOIN MBQ_DET MBQ ON MBQ.PRODUCT_CODE = pod.PRODUCT_CODE    
     AND MBQ.MONTH=DATEPART(MONTH ,pom.PO_DT) AND MBQ.YEAR= DATEPART(YEAR ,pom.PO_DT)    
     AND MBQ.DEPT_ID = POM.location_code    
     LEFT OUTER JOIN LOCATION TLOC (NOLOCK)  ON TLOC.DEPT_ID=pom.PO_FOR_DEPT_ID   
     JOIN AREA TLA (NOLOCK) ON TLOC.AREA_CODE=TLA.AREA_CODE    
     JOIN CITY TLC (NOLOCK) ON TLA.CITY_CODE=TLC.CITY_CODE    
     JOIN [STATE] TLS (NOLOCK) ON TLC.STATE_CODE=TLS.STATE_CODE    
     left join #tmpBod BOD ON BOD.POD_ROW_ID=pod.ROW_ID   
      Left join PO_TYPE_MST (nolock) on PO_TYPE_MST.PO_TYPE_ID=pom.PO_TYPE_ID  
      LEFT JOIN LM01106 SHLM (NOLOCK) ON SHLM.AC_CODE =POM.SHIPPING_AC_CODE   
      LEFT JOIN LMP01106 SHLMP (NOLOCK) ON SHLMP.AC_CODE =SHLM.AC_CODE   
      LEFT JOIN AREA SHAR (NOLOCK) ON SHLMP.AREA_CODE=SHAR.AREA_CODE                          
      LEFT JOIN CITY SHCT (NOLOCK) ON SHAR.CITY_CODE=SHCT.CITY_CODE    
      LEFT JOIN GST_STATE_MST SHCS (NOLOCK) ON SHCS.GST_STATE_CODE=SHLMP.AC_GST_STATE_CODE   
      left join #tmpWSLordmeasurement ordm on ordm.row_id=pod.row_id  
     '  
       
   IF CHARINDEX('PROD_IMAGE',@CCOLS)>0  
     SET @cCmdIMG=N'LEFT OUTER JOIN ' + DB_NAME()+ '_IMAGE..IMAGE_INFO IMG (NOLOCK) ON 1=1 ' +  
      (CASE WHEN @IMG_SECTION = 1 THEN 'AND IMG.SECTION_CODE=SM.SECTION_CODE' ELSE ''  END) +  
      (CASE WHEN @IMG_SUB_SECTION = 1 THEN ' AND IMG.SUB_SECTION_CODE=SD.SUB_SECTION_CODE' ELSE '' END) +  
      (CASE WHEN @IMG_ARTICLE = 1 THEN ' AND IMG.ARTICLE_CODE=ART.ARTICLE_CODE' ELSE '' END) +  
      (CASE WHEN @IMG_PARA1 = 1 THEN ' AND IMG.PARA1_CODE=P1.PARA1_CODE' ELSE '' END) +  
      (CASE WHEN @IMG_PARA2 = 1 THEN ' AND IMG.PARA2_CODE=P2.PARA2_CODE' ELSE '' END) +  
      (CASE WHEN @IMG_PARA3 = 1 THEN ' AND IMG.PARA3_CODE=P3.PARA3_CODE' ELSE '' END) +  
      (CASE WHEN @IMG_PARA4 = 1 THEN  ' AND IMG.PARA4_CODE=P4.PARA4_CODE' ELSE '' END) +  
      (CASE WHEN @IMG_PARA5 = 1 THEN  ' AND IMG.PARA5_CODE=P5.PARA5_CODE' ELSE '' END) +  
      (CASE WHEN @IMG_PARA6 = 1 THEN  ' AND IMG.PARA6_CODE=P6.PARA6_CODE' ELSE '' END) +  
      (CASE WHEN @IMG_PRODUCT = 1 THEN  'AND IMG.PRODUCT_CODE=SKU.PRODUCT_CODE' ELSE '' END)  
   +' WHERE POM.PO_ID='''+@cMemoId+''''         
     ELSE  
           SET @cCmdIMG=N' WHERE POM.PO_ID='''+@cMemoId+''''  
         
         
      
       print 'cCmdCols '+@cCmdCols  
       print @cCmd  
    print @cCmd1  
    print @cCmdIMG  
       
       EXEC(@cCmdCols+@cCmd+@cCmd1+@cCmdIMG)  
  
       declare @CsizeQTY VARCHAR(max)  
        SET @CsizeQTY=''  
  
        IF EXISTS (SELECT TOP 1 'U'  FROM dynamic_print_cols WHERE LTRIM(RTRIM(xn_type))='PO' AND selected=1 and DISPLAY_COLUMN_NAME='SizeQtyString')  
    BEGIN  
         SET @CsizeQTY=N',(SELECT STUFF((SELECT CASE WHEN ISNULL(para2_name,'''') <> '''' THEN ''  '' ELSE '''' END +para2_name+ ''/''+RTRIM(LTRIM(STR((SUM(QUANTITY)))))    
       FROM '+@CTABLENAME+'  B  WHERE A.article_no  =B.article_no AND A.para1_name =B.para1_name AND A.purchase_price=B.purchase_price  
    GROUP BY ARTICLE_no,PARA1_NAME,purchase_price,CASE WHEN ISNULL(para2_name,'''') <> '''' THEN ''  '' ELSE '''' END +para2_name  FOR XML PATH('''')),1,2,''''))    as [SIZEQTY]'  
  END  
    
   
      
 END_PROC:  
         
    IF ISNULL(@CERRMSG,'')<>''   
    BEGIN  
     SELECT @CERRMSG AS ERRMSG   
    END  
    ELSE   
    BEGIN  
           
   SET @CCMD = N'SELECT * '+@CsizeQTY+'  
   FROM '+@CTABLENAME+' A '  
   PRINT @CCMD  
   EXEC SP_EXECUTESQL @CCMD      
    END  
  
      
  SET @CCMD = N'IF OBJECT_ID(''TEMPDB..'+@CTABLENAME+''',''U'') IS NOT NULL  
       DROP TABLE '+@CTABLENAME+''  
  PRINT @CCMD  
  EXEC SP_EXECUTESQL @CCMD  
  
  
END  
  
  
/*  
exec SP3S_WSLPRINT_DYNAMIC 'JM01120000JM/IS-000006'  
  
  
  
*/  