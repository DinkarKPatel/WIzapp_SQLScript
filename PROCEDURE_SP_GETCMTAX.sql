create  PROCEDURE SP_GETCMTAX
@CUSERCODE CHAR(7),
@DXNDT DATETIME,
@NBILLLEVELDISCAMT NUMERIC(10,2)=0,
@NWSLTAXMETHOD INT=0,
@BCALLEDFROMCASHMEMO BIT=0,
@BSALESSETUPINEFFECT BIT=0,
@CDTCODE CHAR(7)='',
@BSALESSETUPDISABLED BIT=0,
@BUPDATEONLYTAXAMOUNT BIT=0,
@CLOCIDPARA VARCHAR(5)='',
@BDEBUGMODE BIT=0,
@BGSTBILL BIT=0,
@BNONGSTSLR BIT=0,
@NSPID VARCHAR(40)='0',
@BMRPEXCHANGEBILL BIT=0
----WITH ENCRYPTION
AS
BEGIN
	BEGIN TRY
		
		PRINT 'ENTER SP_GETCMTAX BY SANJAY'
		EXEC SP_CHKXNSAVELOG 'SCH_GETCMTAX',1,0,@@SPID,1

		DECLARE @NSTEP INT,@CERRORMSG VARCHAR(MAX),@CLOCSSTMEMOID VARCHAR(40),@CSUBSECTIONCODE CHAR(7),
				@NNET NUMERIC(10,2),@NMRP NUMERIC(10,2),@NQTY NUMERIC(10,3),@CHOLOCID CHAR(2),
				@CLOCATIONID CHAR(4),@CSTATECODE CHAR(7),@CCMD NVARCHAR(MAX),@CCMLOCID CHAR(2),
				@NSLSSUBTOTAL NUMERIC(10,2),@NSLRSUBTOTAL NUMERIC(10,2),@NSUBTOTAL NUMERIC(10,2),@CEXCLTAXSTR VARCHAR(500),				
		        @NEXCLTAXTODISC NUMERIC(7,3),@NEXCLTAXTODISCTITLE NUMERIC(7,3),@BAPPLYEXCLTAXONDISCITEMS BIT,@CAPPLYNEWEOSS VARCHAR(2),
		        @BDONOTUPDATEAC BIT,@CPICKLASTSLSTAX VARCHAR(2),@BWIZCLIPDISCOUNT BIT,@CERRTAXSTRU VARCHAR(1000),
		        @BAPPLYEXCLTAXONDISCITEMSLOC BIT,@CTEXT VARCHAR(200),@NTOTALCMMDISCAMT NUMERIC(10,3),@NDIFF NUMERIC(5,3),
		        @CAPPLYEXCLTAXONDISCITEMSLOC VARCHAR(20)



		SELECT TOP 1 @CHOLOCID=VALUE FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'
					
		DECLARE @CSALESSETUPDISABLED VARCHAR(5),@CGSTSLRTAXPICKINGMODE VARCHAR(2),@BAPPLYONLINEEOSSFROMHO BIT
		 
		SET @CSALESSETUPDISABLED=(CASE WHEN @BSALESSETUPDISABLED=1 THEN 'SLS-DISABLED' ELSE 'SLS-ENABLED' END)
		
		SELECT TOP 1 @BAPPLYONLINEEOSSFROMHO=APPLY_ONLINE_EOSS_FROM_HO FROM LOCATION WHERE DEPT_ID=@CLOCIDPARA
		
		IF @BSALESSETUPDISABLED=0 AND  	@BSALESSETUPINEFFECT=0 AND (ISNULL(@BAPPLYONLINEEOSSFROMHO,0)=0 OR @CHOLOCID=@CLOCIDPARA)
			SET @BSALESSETUPDISABLED=1
			 	
		PRINT 'SP_GETCMTAX-1-'+@CSALESSETUPDISABLED
		DECLARE @TRETMSG TABLE  (ERRMSG VARCHAR(MAX))
		
		SET @CERRORMSG=''
		
		--SET @BDEBUGMODE=1
		SET @NSTEP=10
		
		IF @BUPDATEONLYTAXAMOUNT<>1
		BEGIN		
			
			IF OBJECT_ID('TEMPDB..#TMPSLSNOTFOUND','U') IS NOT NULL
				DROP TABLE #TMPSLSNOTFOUND
			
			SELECT DISTINCT B.PRODUCT_CODE INTO #TMPSLSNOTFOUND
			FROM #TMPCMDTAX A
			JOIN SLS_CMD01106_UPLOAD B ON A.ROW_ID=B.ROW_ID
			LEFT OUTER JOIN CMD01106 C ON C.PRODUCT_CODE=B.PRODUCT_CODE AND C.QUANTITY>0
			WHERE B.SP_ID=@NSPID AND B.QUANTITY<0 AND B.REF_SLS_MEMO_DT<='2017-06-30' AND  C.CM_ID IS NULL
			
			SELECT TOP 1 @CLOCATIONID=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 

			
			IF @CLOCIDPARA<>''
				SET @CLOCATIONID=@CLOCIDPARA				

			IF @BNONGSTSLR=1
			BEGIN
				IF EXISTS (SELECT TOP 1 PRODUCT_CODE FROM SLS_CMD01106_UPLOAD WHERE DATEDIFF(DD,REF_SLS_MEMO_DT,@DXNDT)<=180 
						   AND @DXNDT>REF_SLS_MEMO_DT AND REF_SLS_MEMO_DT<>'' AND QUANTITY<0)
					SET @BNONGSTSLR = 0	
			END
				
			IF @BGSTBILL=0 OR @BNONGSTSLR=1
			BEGIN
				EXEC SP_CHKXNSAVELOG 'SCH_GETCMTAX',5,0,@@SPID,1
				---- WE NEED TO DO THIS BECAUSE THIS COLUMN MAPPING IN WHOLESALE IS OPPOSITE TO THAT IN CMD01106
				
                DECLARE @CSHOW_SALE_RETURN_POPUP VARCHAR(10)
                SELECT TOP 1 @CSHOW_SALE_RETURN_POPUP=VALUE  FROM CONFIG WHERE CONFIG_OPTION ='SHOW_SALE_RETURN_POPUP' 
				
				
				IF @NWSLTAXMETHOD<>0
					SET @NWSLTAXMETHOD=(CASE WHEN @NWSLTAXMETHOD=1 THEN 2 ELSE 1 END)
					
				PRINT 'SP_GETCMTAX-2'
				SELECT @CSTATECODE=STATE_CODE FROM LOC_VIEW WHERE DEPT_ID=@CLOCATIONID

				SELECT TOP 1 @CLOCSSTMEMOID = LTRIM(RTRIM(A.MEMO_ID)) FROM LOCSST_MST A
				JOIN LOCSST B ON A.MEMO_ID=B.MEMO_ID WHERE STATE_CODE=@CSTATECODE AND
				FROM_DT<=@DXNDT  ORDER BY FROM_DT DESC
					
				DECLARE @CFORMID CHAR(7)
				
				EXEC SP_CHKXNSAVELOG 'SCH_GETCMTAX',10,0,@@SPID,1
  				SELECT TOP 1 @CFORMID=FORM_ID FROM #TMPCMDTAX -----CHANGES FORM FORMID
			    
				IF ISNULL(@CFORMID,'')='0000000'
					SET @CFORMID=''
				
				IF ISNULL(@CLOCSSTMEMOID,'') = ''  AND ISNULL(@CFORMID,'')= ''  AND ISNULL(@CSHOW_SALE_RETURN_POPUP,'')='1'
				BEGIN
					PRINT 'NO TAX STRU DEFINED'
					SELECT @CERRORMSG='NO TAX STRUCTURE DEFINED FOR CURRENT LOCATION ID :'+@CLOCATIONID+' HAVING STATE :'+STATE.STATE+'..... PLEASE CHECK'
					FROM STATE WHERE STATE_CODE=@CSTATECODE
					
					GOTO END_PROC
				END
				
				EXEC SP_CHKXNSAVELOG 'SCH_GETCMTAX',15,0,@@SPID,1

				PRINT 'CHECK ERRTAX STRU:'+@CLOCSSTMEMOID
				
				IF   ISNULL(@CSHOW_SALE_RETURN_POPUP,'')='1'
				BEGIN
				IF @BCALLEDFROMCASHMEMO=1 AND @BGSTBILL=1
					SELECT TOP 1 @CERRTAXSTRU='NO TAX STRUCTURE DEFINED FOR ITEM CODE: '+A.PRODUCT_CODE+' HAVING SUB SECTION: '+SUB_SECTION_NAME
					FROM #TMPCMDTAX A
					JOIN SLS_CMD01106_UPLOAD D ON A.ROW_ID=D.ROW_ID
					LEFT OUTER JOIN 
					(SELECT B.SUB_SECTION_CODE FROM #TMPCMDTAX A 
					 JOIN LOCSST B (NOLOCK) ON B.SUB_SECTION_CODE=A.SUB_SECTION_CODE
					 WHERE B.MEMO_ID=@CLOCSSTMEMOID) B ON B.SUB_SECTION_CODE=A.SUB_SECTION_CODE
					JOIN SECTIOND C (NOLOCK) ON C.SUB_SECTION_CODE=A.SUB_SECTION_CODE 
					WHERE B.SUB_SECTION_CODE IS NULL AND D.SP_ID=@NSPID
					AND D.QUANTITY<0 AND D.REF_SLS_MEMO_DT<='2017-06-30'
				ELSE
					SELECT TOP 1 @CERRTAXSTRU='NO TAX STRUCTURE DEFINED FOR ITEM CODE: '+A.PRODUCT_CODE+' HAVING SUB SECTION: '+SUB_SECTION_NAME
					FROM #TMPCMDTAX A
					LEFT OUTER JOIN 
					(SELECT B.SUB_SECTION_CODE FROM #TMPCMDTAX A 
					 JOIN LOCSST B (NOLOCK) ON B.SUB_SECTION_CODE=A.SUB_SECTION_CODE
					 WHERE B.MEMO_ID=@CLOCSSTMEMOID) B ON B.SUB_SECTION_CODE=A.SUB_SECTION_CODE
					JOIN SECTIOND C (NOLOCK) ON C.SUB_SECTION_CODE=A.SUB_SECTION_CODE 
					WHERE B.SUB_SECTION_CODE IS NULL
				
				END				
				IF ISNULL(@CERRTAXSTRU,'')<>''
				BEGIN
					EXEC SP_CHKXNSAVELOG 'SCH_GETCMTAX',20,0,@@SPID,1
					PRINT 'GET ERRTAX STRU:'
					SET @CERRORMSG=@CERRTAXSTRU
					GOTO END_PROC
				END
			END
						
			SET @NSTEP=30		
			
			EXEC SP_CHKXNSAVELOG 'SCH_GETCMTAX',25,0,@@SPID,1
			
			IF OBJECT_ID('TEMPDB..#TDENYEXCLTAX','U') IS NOT NULL
				DROP TABLE #TDENYEXCLTAX
			
			PRINT 'SP_GETCMTAX-4'
			SELECT USER_CODE INTO #TDENYEXCLTAX FROM USERS WHERE 1=2	
			
			SELECT TOP 1 @CPICKLASTSLSTAX=LTRIM(RTRIM(VALUE)) FROM CONFIG WHERE  CONFIG_OPTION='PICK_LAST_SLS_TAX'
			
			SET @CPICKLASTSLSTAX = ISNULL(@CPICKLASTSLSTAX,'')

			SET @CAPPLYNEWEOSS='1'
							
			SELECT @NEXCLTAXTODISC=0,@NEXCLTAXTODISCTITLE=0
			
			EXEC SP_CHKXNSAVELOG 'SCH_GETCMTAX',30,0,@@SPID,1	
			
			SET @BAPPLYEXCLTAXONDISCITEMSLOC=0

			SELECT TOP 1 @BAPPLYEXCLTAXONDISCITEMSLOC=ISNULL(EXCLUSIVE_VAT,0),
			@NEXCLTAXTODISC=ISNULL(EXCLUSIVE_VAT_TO_DISC,0)	FROM LOCATION (NOLOCK) WHERE DEPT_ID=@CLOCATIONID
			
			--SELECT 'BEFORE APPLYING TAX2:',* FROM #TMPCMDTAX
						
			DECLARE @CAPPLYEXCLTAXONDISCITEMS VARCHAR(50)
			 
			SET @CAPPLYEXCLTAXONDISCITEMS=(CASE WHEN @BAPPLYEXCLTAXONDISCITEMS=1 THEN 'APPLY EXCLUSIVE' ELSE 'APPLY INCLUSIVE' END)
			
			PRINT @CAPPLYEXCLTAXONDISCITEMS
			
							
			IF EXISTS (SELECT TOP 1 ROW_ID FROM #TMPCMDTAX WHERE ISNULL(APPLY_EXCLUSIVE_TAX,0)=1)
			OR @BAPPLYEXCLTAXONDISCITEMSLOC=1
			BEGIN			
				INSERT #TDENYEXCLTAX
				SELECT USER_CODE FROM USER_ROLE_DET A
				JOIN USERS B ON A.ROLE_ID=B.ROLE_ID WHERE FORM_OPTION='DONOT_CALC_EXCLTAX_DISCITEMS'
				AND VALUE='1' AND USER_CODE<>'0000000'
			END
		
		END
		
		SET @CAPPLYEXCLTAXONDISCITEMSLOC=(CASE WHEN  @BAPPLYEXCLTAXONDISCITEMSLOC=1 THEN 'APPLYEXCLLOC-1' ELSE 'APPLYEXCLLOC-0' END)	
		
		EXEC SP_CHKXNSAVELOG 'SCH_GETCMTAX',35,0,@@SPID,1			
		
		PRINT 'BILL DISCOUNT:'+STR(@NBILLLEVELDISCAMT)
		SELECT @NSLSSUBTOTAL=SUM(NET) FROM #TMPCMDTAX WHERE NET>0
		SELECT @NSLRSUBTOTAL=SUM(NET) FROM #TMPCMDTAX WHERE NET<0
		
		SET @NSUBTOTAL=ISNULL(@NSLSSUBTOTAL,0)+ISNULL(@NSLRSUBTOTAL,0)
		
		SET @BWIZCLIPDISCOUNT=0
		EXEC SP_CHKXNSAVELOG 'SCH_GETCMTAX',40,0,@@SPID,1 
		SELECT @BDONOTUPDATEAC=UPDATE_AC,@BWIZCLIPDISCOUNT=ISNULL(WIZCLIP_DISCOUNT,0)
		FROM DTM (NOLOCK) WHERE DT_CODE=@CDTCODE
		
		DECLARE @CUPDATEONLYTAXAMOUNT VARCHAR(2)
		
		SET @CUPDATEONLYTAXAMOUNT=(CASE WHEN @BUPDATEONLYTAXAMOUNT=1 THEN '1' ELSE '0' END)
		--SELECT 'BEFORE',@BUPDATEONLYTAXAMOUNT
		
		PRINT 'SP_GETCMTAX-4.5:'+@CUPDATEONLYTAXAMOUNT

		IF @BDEBUGMODE=1
			SELECT 'CHECK #TMPCMDTAX',* FROM #TMPCMDTAX
			
		IF @BUPDATEONLYTAXAMOUNT<>1
		BEGIN

			SELECT TOP 1 @CGSTSLRTAXPICKINGMODE=VALUE FROM CONFIG WHERE CONFIG_OPTION='GST_SLR_TAXPICKINGMODE'
			
			IF ISNULL(@CGSTSLRTAXPICKINGMODE,'')=''
				SET @CGSTSLRTAXPICKINGMODE='1'
				--@CPICKLASTSLSTAX='1' AND
			PRINT 'SP_GETCMTAX-5'
			IF  @BCALLEDFROMCASHMEMO=1
			BEGIN	
				EXEC SP_CHKXNSAVELOG 'SCH_GETCMTAX',45,0,@@SPID,1
				PRINT 'PICK LAST SLS TAX'
				
				IF @BGSTBILL=0
				BEGIN								
					UPDATE A SET TAX_PERCENTAGE=B.TAX_PERCENTAGE,TAX_METHOD=B.TAX_METHOD,TAX_AMOUNT=B.TAX_AMOUNT/A.QUANTITY
					FROM #TMPCMDTAX A JOIN CMD01106 B (NOLOCK) ON B.PRODUCT_CODE=A.PRODUCT_CODE
					JOIN CMM01106 C (NOLOCK) ON C.CM_ID=B.CM_ID
					JOIN SLS_CMD01106_UPLOAD D ON D.ROW_ID=A.ROW_ID
					WHERE c.location_Code =@CLOCATIONID AND  B.ROW_ID=(SELECT TOP 1 D.ROW_ID FROM CMD01106 D (NOLOCK)
					JOIN CMM01106 E (NOLOCK) ON D.CM_ID=E.CM_ID	WHERE D.PRODUCT_CODE=A.PRODUCT_CODE 
					AND E.CANCELLED=0 AND D.QUANTITY>0  
					ORDER BY E.CM_DT DESC ,E.CM_TIME DESC)
					AND D.SP_ID=@NSPID AND (@BGSTBILL=0 OR D.REF_SLS_MEMO_DT<='2017-06-30')				
					AND A.QUANTITY<0  AND ISNULL(A.MANUAL_TAX_METHOD,0)<>1
				END				
				ELSE
					UPDATE A SET TAX_PERCENTAGE=B.TAX_PERCENTAGE,TAX_METHOD=B.TAX_METHOD,TAX_AMOUNT=B.TAX_AMOUNT/A.QUANTITY
					FROM #TMPCMDTAX A JOIN SLS_CMD01106_UPLOAD D ON D.ROW_ID=A.ROW_ID
					JOIN CMD01106 B (NOLOCK) ON B.PRODUCT_CODE=A.PRODUCT_CODE
					JOIN CMM01106 C (NOLOCK) ON C.CM_ID=B.CM_ID AND C.CM_NO=D.REF_SLS_MEMO_NO AND C.CM_DT=D.REF_SLS_MEMO_DT
					WHERE c.location_Code =@CLOCATIONID 
					AND D.SP_ID=@NSPID AND D.REF_SLS_MEMO_DT<='2017-06-30' AND DATEDIFF(DD,C.CM_DT,@DXNDT)<=180				
					AND A.QUANTITY<0 AND ISNULL(A.MANUAL_TAX_METHOD,0)<>1 

				
				IF @CGSTSLRTAXPICKINGMODE='1'
					UPDATE A SET TAX_METHOD=B.TAX_METHOD
					FROM #TMPCMDTAX A JOIN CMD01106 B (NOLOCK) ON B.PRODUCT_CODE=A.PRODUCT_CODE
					JOIN CMM01106 C (NOLOCK) ON C.CM_ID=B.CM_ID
					JOIN SLS_CMD01106_UPLOAD D ON D.ROW_ID=A.ROW_ID
					WHERE c.location_Code =@CLOCATIONID AND  B.ROW_ID=(SELECT TOP 1 D.ROW_ID FROM CMD01106 D (NOLOCK)
					JOIN CMM01106 E (NOLOCK) ON D.CM_ID=E.CM_ID	WHERE D.PRODUCT_CODE=A.PRODUCT_CODE 
					 AND E.CANCELLED=0 AND D.QUANTITY>0  
					ORDER BY E.CM_DT DESC ,E.CM_TIME DESC)
					AND D.SP_ID=@NSPID AND @BGSTBILL=1 AND D.REF_SLS_MEMO_DT>'2017-06-30' AND DATEDIFF(DD,C.CM_DT,@DXNDT)<=180				
					AND A.QUANTITY<0  AND ISNULL(A.MANUAL_TAX_METHOD,0)<>1 AND ISNULL(A.TAX_METHOD,0)=0
									
				--PRINT 'AFTER PICK LAST SLS TAX:'+STR(@@ROWCOUNT)+':'+@CLOCATIONID
				
			END
				
			PRINT 'SP_GETCMTAX-6:'+STR(@NEXCLTAXTODISC)

			
			IF @BDEBUGMODE=1
				SELECT 'CHECK TAX VALUE AFTER LAST PICKED UP',* FROM #TMPCMDTAX
				
			DECLARE @NCMMDISC NUMERIC(10,2)
			
			SELECT TOP 1 @NCMMDISC=CMM_DISCOUNT_AMOUNT FROM #TMPCMDTAX WHERE QUANTITY>0
						
			SET @CTEXT='SCH_GETCMTAX_'+STR(@NEXCLTAXTODISC)+'_'+STR(@NCMMDISC,10,2)+'_'+
			(CASE WHEN @BAPPLYEXCLTAXONDISCITEMSLOC=1 THEN '1' ELSE '0' END)
			
			EXEC SP_CHKXNSAVELOG @CTEXT,50,0,@@SPID,1
						
			PRINT 'CMM DISC AMT:'+STR(@NCMMDISC,10,2)+'EXCL TAXTO DISC TITLE:'+STR(@NEXCLTAXTODISCTITLE)+'EXCL TAXTO DISC:'+STR(@NEXCLTAXTODISC)
			
			PRINT 'UPDATE TAX METHOD NOW'
			
			DECLARE @CTAXPC VARCHAR(50)
			
			
			PRINT 'SELECTED TAXPC:'+ISNULL(@CTAXPC,'')+@CAPPLYEXCLTAXONDISCITEMSLOC+' FOR LOC:'+ISNULL(@CLOCATIONID,'NULL LOCID')
			
			--SELECT 'CHECK SLSCMDUPLOAD', SLSDET_ROW_ID,DISCOUNT_PERCENTAGE,BASIC_DISCOUNT_PERCENTAGE FROM SLS_CMD01106_UPLOAD WHERE SP_ID=@NSPID
			
			--SELECT @NSPID AS SP_ID,@BGSTBILL AS BGSTBILL,CMD.DISCOUNT_PERCENTAGE, @BSALESSETUPDISABLED AS SALESSETUPDISABLED,
			--CMD.DISCOUNT_PERCENTAGE,CMD.SLSDET_ROW_ID,CMD.ROW_ID,A.ROW_ID, (CASE WHEN (A.DISCOUNT_PERCENTAGE >=A.EXCLUSIVE_VAT_TO_DISC AND A.DISCOUNT_PERCENTAGE<>0 AND A.APPLY_EXCLUSIVE_TAX=1)
			--		THEN '1'	
			--	 WHEN  (A.DISCOUNT_PERCENTAGE >= @NEXCLTAXTODISC AND @BAPPLYEXCLTAXONDISCITEMSLOC=1 
			--		 AND (@BSALESSETUPDISABLED=1 OR ISNULL(CMD.SLSDET_ROW_ID,'')='')) THEN '2'
			--	 WHEN ((A.CMM_DISCOUNT_AMOUNT<>0 AND @BAPPLYEXCLTAXONDISCITEMSLOC=1) AND ABS(((A.CMD_DISCOUNT_AMOUNT+
			--		  A.CMM_DISCOUNT_AMOUNT)/A.MRP)*100) >=@NEXCLTAXTODISC ) THEN '3' ELSE '4' END) AS TRUE_CONDITION
			--FROM #TMPCMDTAX A 
			--JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
			--JOIN ARTICLE C (NOLOCK) ON C.ARTICLE_CODE=B.ARTICLE_CODE  
			--LEFT OUTER JOIN FORM (NOLOCK) ON FORM.FORM_ID=A.FORM_ID
			--LEFT OUTER JOIN
			--(
			--   SELECT B.TAX_PERCENTAGE,B.TAX_AC_CODE,  
			--   B.SALE_AC_CODE,B.TAX_METHOD,B.SUB_SECTION_CODE,C.MIN_MRP,C.MAX_MRP,
			--   C.TAX_PERCENTAGE AS ADD_TAX_PERCENTAGE 
			--   FROM LOCSST B (NOLOCK)    
			--   LEFT OUTER JOIN LOCSSTADD C (NOLOCK) ON C.LOCSST_ROW_ID =B.ROW_ID   
			--   WHERE  B.MEMO_ID =@CLOCSSTMEMOID
			--)X ON X.SUB_SECTION_CODE=C.SUB_SECTION_CODE 
			--LEFT OUTER JOIN RPS_MST R (NOLOCK) ON R.CM_ID=A.PACK_SLIP_ID
			--LEFT OUTER JOIN #TDENYEXCLTAX T ON T.USER_CODE=ISNULL(R.USER_CODE,@CUSERCODE) 
			--LEFT OUTER JOIN SLS_CMD01106_UPLOAD CMD ON CMD.ROW_ID=A.ROW_ID AND CMD.SP_ID=@NSPID
			--LEFT OUTER JOIN #TMPSLSNOTFOUND SNF ON SNF.PRODUCT_CODE=CMD.PRODUCT_CODE
			--WHERE  ((X.MIN_MRP IS NOT NULL AND  ABS((A.NET/A.QUANTITY)-(A.CMM_DISCOUNT_AMOUNT/A.QUANTITY))  
			--		 BETWEEN X.MIN_MRP AND X.MAX_MRP) OR X.MIN_MRP IS NULL)
			--AND (A.QUANTITY>0 OR @CPICKLASTSLSTAX<>'1')
			--AND (ISNULL(A.TAX_METHOD,0)=0 OR A.TAX_PERCENTAGE=0)
			--AND (X.SUB_SECTION_CODE IS NOT NULL OR @BGSTBILL=1)
			--AND (A.QUANTITY>0 OR  DATEDIFF(DD,'2017-07-01',@DXNDT)<=180)
			
			IF OBJECT_ID('TEMPDB..#TMPCMD','U') IS NULL
				SELECT A.PRODUCT_CODE,CONVERT(CHAR(7),'') AS SUB_SECTION_CODE,A.QUANTITY,A.DISCOUNT_AMOUNT,A.QUANTITY AS SCHEME_APPLIED_QTY,
				A.DISCOUNT_AMOUNT AS SCHEME_APPLIED_AMOUNT,A.SLSDET_ROW_ID AS SCHEME_SETUP_DET_ROW_ID,A.SLSDET_ROW_ID AS SCHEME_ID,
				A.DISCOUNT_PERCENTAGE,A.MRP,A.NET,A.ROW_ID AS CMD_ROW_ID,A.PACK_SLIP_ID,CONVERT(CHAR(7),'') AS USER_CODE,
				A.DISCOUNT_PERCENTAGE AS BILL_LEVEL_DISCOUNT_PERCENTAGE,B.SCHEME_NAME AS SLS_TITLE,A.QUANTITY AS BNGN_QTY,
				A.DISCOUNT_AMOUNT AS BNGN_DISCOUNT,A.DISCOUNT_PERCENTAGE AS WEIGHTED_AVG_DISC_PCT,A.DISCOUNT_AMOUNT AS WEIGHTED_AVG_DISC_AMT,
				A.ITEM_ROUND_OFF,B.APPLY_EXCLUSIVE_TAX,B.EXCLUSIVE_VAT_TO_DISC,CONVERT(BIT,0) AS CARD_DISCOUNT,
				A.DISCOUNT_AMOUNT AS BILL_LEVEL_DISCOUNT_AMOUNT, CONVERT(CHAR(7),'') AS FORM_ID,A.ROW_ID AS PACK_SLIP_ROW_ID,
				MANUAL_TAX_METHOD,A.CARD_DISCOUNT_PERCENTAGE,A.BASIC_DISCOUNT_PERCENTAGE,A.CARD_DISCOUNT_AMOUNT,A.BASIC_DISCOUNT_AMOUNT,
				B.ROW_ID AS BNGN_ROW_ID
				INTO #TMPCMD FROM CMD01106 A JOIN SCHEME_SETUP_DET B ON B.ROW_ID=A.SLSDET_ROW_ID WHERE 1=2

			--SELECT @BGSTBILL, 'CHECK PLEASE #TMPCMDTAX',@NWSLTAXMETHOD,@NEXCLTAXTODISC,@BAPPLYEXCLTAXONDISCITEMSLOC,@BSALESSETUPDISABLED,
			--@BAPPLYEXCLTAXONDISCITEMSLOC,@NEXCLTAXTODISC,* FROM #TMPCMDTAX A 

			--SELECT @NWSLTAXMETHOD,@NWSLTAXMETHOD
			--SELECT 'CHECK TAX CALC',@BSALESSETUPDISABLED AS BSALESSETUPDISABLED,A.DISCOUNT_PERCENTAGE,@NEXCLTAXTODISC AS
			--NEXCLTAXTODISC,@BAPPLYEXCLTAXONDISCITEMSLOC AS BAPPLYEXCLTAXONDISCITEMSLOC,
			--TC.SCHEME_SETUP_DET_ROW_ID,
			--(CASE WHEN ISNULL(A.FORM_ID,'') NOT IN ('','0000000') THEN '1'
			--WHEN (A.MANUAL_TAX_METHOD=1 AND A.TAX_METHOD<>0) OR (@BGSTBILL=1 AND A.QUANTITY<0 AND REF_SLS_MEMO_DT>'2017-06-30' AND @CGSTSLRTAXPICKINGMODE='1') 
			--THEN '2' 
			--WHEN (ISNULL(A.DISCOUNT_PERCENTAGE,0) >=ISNULL(A.EXCLUSIVE_VAT_TO_DISC,0) AND ISNULL(A.DISCOUNT_PERCENTAGE,0)<>0 
			--		AND ISNULL(A.APPLY_EXCLUSIVE_TAX,0)=1) THEN '2.1'
			--	 WHEN (ISNULL(A.DISCOUNT_PERCENTAGE,0) >= @NEXCLTAXTODISC AND @BAPPLYEXCLTAXONDISCITEMSLOC=1 
			--		 AND (@BSALESSETUPDISABLED=1 OR ISNULL(TC.SCHEME_SETUP_DET_ROW_ID,'')='')) THEN '2.2'
			--	 WHEN ((ISNULL(A.CMM_DISCOUNT_AMOUNT,0)<>0 AND @BAPPLYEXCLTAXONDISCITEMSLOC=1) AND 
			--		  ABS(((ISNULL(A.CMD_DISCOUNT_AMOUNT,0)+
			--		  ISNULL(A.CMM_DISCOUNT_AMOUNT,0))/ISNULL(A.MRP,0))*100) >=@NEXCLTAXTODISC )
			--THEN '2.3' 
			--WHEN @BGSTBILL=1 THEN '4' ELSE  '5' END)

			--FROM #TMPCMDTAX A 
			--JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
			--JOIN ARTICLE C (NOLOCK) ON C.ARTICLE_CODE=B.ARTICLE_CODE  
			--LEFT OUTER JOIN FORM (NOLOCK) ON FORM.FORM_ID=A.FORM_ID
			--LEFT OUTER JOIN
			--(
			--   SELECT B.TAX_PERCENTAGE,B.TAX_AC_CODE,  
			--   B.SALE_AC_CODE,B.TAX_METHOD,B.SUB_SECTION_CODE,C.MIN_MRP,C.MAX_MRP,
			--   C.TAX_PERCENTAGE AS ADD_TAX_PERCENTAGE 
			--   FROM LOCSST B (NOLOCK)    
			--   LEFT OUTER JOIN LOCSSTADD C (NOLOCK) ON C.LOCSST_ROW_ID =B.ROW_ID   
			--   WHERE  B.MEMO_ID =@CLOCSSTMEMOID
			--)X ON X.SUB_SECTION_CODE=C.SUB_SECTION_CODE 
			--LEFT OUTER JOIN RPS_MST R (NOLOCK) ON R.CM_ID=A.PACK_SLIP_ID
			--LEFT OUTER JOIN #TDENYEXCLTAX T ON T.USER_CODE=ISNULL(R.USER_CODE,@CUSERCODE) 
			--LEFT OUTER JOIN SLS_CMD01106_UPLOAD CMD ON CMD.ROW_ID=A.ROW_ID AND CMD.SP_ID=@NSPID
			--LEFT OUTER JOIN #TMPSLSNOTFOUND SNF ON SNF.PRODUCT_CODE=CMD.PRODUCT_CODE
			--LEFT OUTER JOIN #TMPCMD TC ON TC.CMD_ROW_ID=A.ROW_ID
			----WHERE  --  ((X.MIN_MRP IS NOT NULL AND  ABS((A.NET/A.QUANTITY)-(A.CMM_DISCOUNT_AMOUNT/A.QUANTITY))  
			--	   --	BETWEEN X.MIN_MRP AND X.MAX_MRP) OR X.MIN_MRP IS NULL OR @BGSTBILL=1) AND
			-- --(A.QUANTITY>0 OR @CPICKLASTSLSTAX<>'1') AND
			-- --(ISNULL(A.TAX_METHOD,0)=0 OR A.TAX_PERCENTAGE=0) AND
			-- --(X.SUB_SECTION_CODE IS NOT NULL OR @BGSTBILL=1) AND
			-- --(A.QUANTITY>0 OR  DATEDIFF(DD,'2017-07-01',@DXNDT)<=180)
			
						
			UPDATE A SET TAX_PERCENTAGE=(CASE WHEN @BGSTBILL=1 AND (ISNULL(CMD.QUANTITY,0)>0 OR CMD.REF_SLS_MEMO_DT>'2017-06-30'
			OR SNF.PRODUCT_CODE IS NULL)   THEN (CASE WHEN A.QUANTITY<0 THEN  A.TAX_PERCENTAGE ELSE 0 END)
			WHEN ISNULL(A.FORM_ID,'') NOT IN ('','0000000') THEN  ISNULL(FORM.TAX_PERCENTAGE,0)
			ELSE ISNULL(X.ADD_TAX_PERCENTAGE,X.TAX_PERCENTAGE)  END),
			TAX_METHOD=(CASE WHEN ISNULL(A.FORM_ID,'') NOT IN ('','0000000') THEN 2
			WHEN (A.MANUAL_TAX_METHOD=1 AND A.TAX_METHOD<>0) OR (@BGSTBILL=1 AND A.QUANTITY<0 AND REF_SLS_MEMO_DT>'2017-06-30' AND @CGSTSLRTAXPICKINGMODE='1') 
			THEN A.TAX_METHOD  ELSE
			(CASE WHEN @NWSLTAXMETHOD<>0 THEN @NWSLTAXMETHOD WHEN  T.USER_CODE IS NULL
		    AND  ((A.DISCOUNT_PERCENTAGE >=A.EXCLUSIVE_VAT_TO_DISC AND A.DISCOUNT_PERCENTAGE<>0 AND A.APPLY_EXCLUSIVE_TAX=1)
				 OR (A.DISCOUNT_PERCENTAGE >= @NEXCLTAXTODISC AND @BAPPLYEXCLTAXONDISCITEMSLOC=1 
					 AND (@BSALESSETUPDISABLED=1 OR ISNULL(TC.SCHEME_SETUP_DET_ROW_ID,'')=''))
				 OR ((A.CMM_DISCOUNT_AMOUNT<>0 AND @BAPPLYEXCLTAXONDISCITEMSLOC=1) AND ABS(((A.CMD_DISCOUNT_AMOUNT+
					  A.CMM_DISCOUNT_AMOUNT)/A.MRP)*100) >=@NEXCLTAXTODISC ))
			THEN 2 
			WHEN @BGSTBILL=1 THEN 1 ELSE  X.TAX_METHOD END) END)
			
			FROM #TMPCMDTAX A 
			JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
			JOIN ARTICLE C (NOLOCK) ON C.ARTICLE_CODE=B.ARTICLE_CODE  
			LEFT OUTER JOIN FORM (NOLOCK) ON FORM.FORM_ID=A.FORM_ID
			LEFT OUTER JOIN
			(
			   SELECT B.TAX_PERCENTAGE,B.TAX_AC_CODE,  
			   B.SALE_AC_CODE,B.TAX_METHOD,B.SUB_SECTION_CODE,C.MIN_MRP,C.MAX_MRP,
			   C.TAX_PERCENTAGE AS ADD_TAX_PERCENTAGE 
			   FROM LOCSST B (NOLOCK)    
			   LEFT OUTER JOIN LOCSSTADD C (NOLOCK) ON C.LOCSST_ROW_ID =B.ROW_ID   
			   WHERE  B.MEMO_ID =@CLOCSSTMEMOID
			)X ON X.SUB_SECTION_CODE=C.SUB_SECTION_CODE 
			LEFT OUTER JOIN RPS_MST R (NOLOCK) ON R.CM_ID=A.PACK_SLIP_ID
			LEFT OUTER JOIN #TDENYEXCLTAX T ON T.USER_CODE=ISNULL(R.USER_CODE,@CUSERCODE) 
			LEFT OUTER JOIN SLS_CMD01106_UPLOAD CMD ON CMD.ROW_ID=A.ROW_ID AND CMD.SP_ID=@NSPID
			LEFT OUTER JOIN #TMPSLSNOTFOUND SNF ON SNF.PRODUCT_CODE=CMD.PRODUCT_CODE
			LEFT OUTER JOIN #TMPCMD TC ON TC.CMD_ROW_ID=A.ROW_ID
			WHERE  ((X.MIN_MRP IS NOT NULL AND  ABS((A.NET/A.QUANTITY)-(A.CMM_DISCOUNT_AMOUNT/A.QUANTITY))  
					 BETWEEN X.MIN_MRP AND X.MAX_MRP) OR X.MIN_MRP IS NULL)
			AND (A.QUANTITY>0 OR @CPICKLASTSLSTAX<>'1')
			AND (ISNULL(A.TAX_METHOD,0)=0 OR A.TAX_PERCENTAGE=0)
			AND (X.SUB_SECTION_CODE IS NOT NULL OR @BGSTBILL=1)
			AND (A.QUANTITY>0 OR  DATEDIFF(DD,'2017-07-01',@DXNDT)<=180)
			
			SET @CAPPLYEXCLTAXONDISCITEMS=''
			SELECT TOP 1 @CAPPLYEXCLTAXONDISCITEMS=(CASE WHEN APPLY_EXCLUSIVE_TAX=1 THEN '1' ELSE '0' END)
			FROM #TMPCMDTAX WHERE QUANTITY<0

			IF @BDEBUGMODE=1
				SELECT 'CHECK NEW TAX VALUE',* FROM #TMPCMDTAX
							
			PRINT 'CMM APPLY EXCLS TAX :'+@CAPPLYEXCLTAXONDISCITEMS
			
		END
				
		PRINT 'SP_GETCMTAX-7'		
		
		EXEC SP_CHKXNSAVELOG 'SCH_GETCMTAX',55,0,@@SPID,1
		
		IF @BMRPEXCHANGEBILL=1
			UPDATE #TMPCMDTAX SET TAX_METHOD=1
			
		IF @BGSTBILL=0 
			UPDATE #TMPCMDTAX SET TAX_AMOUNT=CONVERT(NUMERIC(10,2),(NET-(CASE WHEN @BDONOTUPDATEAC=1 THEN 0 ELSE CMM_DISCOUNT_AMOUNT END))*TAX_PERCENTAGE/
			(CASE WHEN TAX_METHOD<>2 THEN (100+TAX_PERCENTAGE) ELSE 100 END))
		ELSE
		IF @BGSTBILL=1 AND @BNONGSTSLR=1 
			UPDATE A SET TAX_AMOUNT=CONVERT(NUMERIC(10,2),(A.NET-(CASE WHEN @BDONOTUPDATEAC=1 THEN 0 ELSE A.CMM_DISCOUNT_AMOUNT END))*A.TAX_PERCENTAGE/
			(CASE WHEN A.TAX_METHOD<>2 THEN (100+A.TAX_PERCENTAGE) ELSE 100 END))
			FROM #TMPCMDTAX A JOIN SLS_CMD01106_UPLOAD B ON A.ROW_ID=B.ROW_ID
			WHERE B.SP_ID=@NSPID AND B.QUANTITY<0 AND REF_SLS_MEMO_DT<='2017-06-30'
			  	
		--SELECT 'AFTER',@BAPPLYEXCLTAXONDISCITEMS,* FROM #TMPCMDTAX
		
	END TRY
	
	BEGIN CATCH
		
		SET @CERRORMSG = 'SP_GETCMTAX : STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		
		PRINT 'ENTER CATCH OF SP_GETCMTAX'
	END CATCH

END_PROC:
	
	EXEC SP_CHKXNSAVELOG 'SCH_GETCMTAX',60,0,@@SPID,1
	
	INSERT @TRETMSG
	SELECT @CERRORMSG
	
	SELECT * FROM @TRETMSG
	
END
---- 'END OF CREATING PROCEDURE  SP_GETCMTAX (RECALCULATE TAX AMOUNT IN THE RETAIL BILLS) '
