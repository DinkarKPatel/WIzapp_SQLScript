CREATE PROCEDURE SP_WSLINV_23--(LocId 3 digit change only increased the parameter width by Sanjay:04-11-2024)
	@CMEMOID	VARCHAR(40) = '',
	@CWHERE1	VARCHAR(500) = '',
	@NNAVMODE	NUMERIC(1,0) = 0,
	@CWHERE2	NVARCHAR(MAX)='',
	@DMEMODT DATETIME='',
	@CLOCID		VARCHAR(4)=''
----WITH ENCRYPTION
AS
BEGIN
	
	    DECLARE @LEVEL_NO INT
		SELECT TOP 1 @LEVEL_NO=LEVEL_NO  FROM XN_APPROVAL_CHECKLIST_LEVEL_USERS A  
		WHERE A.XN_TYPE ='WSLORD'	AND DEPT_ID =@CLOCID


	IF @NNAVMODE=1
	BEGIN

				SELECT CAST(0 AS BIT) AS CHK,0 AS ADD_QTY,D.ARTICLE_NAME
				,A.ORDER_ID,B.PARA1_CODE AS PACKSLIP_PARA1_CODE,B.PARA2_CODE AS PACKSLIP_PARA2_CODE
				,(CASE WHEN MEMO_TYPE<>2 THEN B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END) AS QUANTITY,
				B.ROW_ID,B.LAST_UPDATE,B.WS_PRICE,B.RFNET,B.ARTICLE_CODE AS PACKSLIP_ARTICLE_CODE
				,B.GROSS_WSP,B.DISCOUNT_PERCENTAGE,B.DISCOUNT_AMOUNT,B.REMARKS,B.PRODUCT_CODE,B.MANUAL_DISCOUNT	
				,SD.SUB_SECTION_NAME,SM.SECTION_NAME,D.ARTICLE_NO,P1.PARA1_NAME,P2.PARA2_NAME,P3.PARA3_NAME	
				 ,P4.PARA4_NAME,P5.PARA5_NAME,P6.PARA6_NAME,P1.PARA1_ORDER,P2.PARA2_ORDER
				 ,((CASE WHEN MEMO_TYPE<>2 THEN B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END)*B.WS_PRICE) AS AMOUNT,
				 UOM.UOM_CODE,UOM.UOM_NAME,UOM.UOM_TYPE
				 ,D.DT_CREATED,D.CODING_SCHEME,D.PARA1_SET,D.PARA2_SET,D.ALIAS AS ARTICLE_ALIAS
				,B.QUANTITY as order_qty,b.PL_QTY,ISNULL(B.INV_QTY,0) AS INVOICE_QTY,isnull(b.adj_qty,0) adj_qty
				,((CASE WHEN MEMO_TYPE<>2 THEN B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END)-ISNULL(b.INV_QTY,0)) AS PENDING_invoice_Qty--already reduce adj qty in qty
				,((CASE WHEN MEMO_TYPE<>2 THEN B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END)-ISNULL(b.INV_QTY,0)) AS PENDING_quantity
				,0 as pending_quantity1 --- (Had to take these 2 columns pending_quantity,pending_quantity1 due to application refeering this for unknown REason by request of Anil (Date:20-08-2021)
				,(CASE WHEN MEMO_TYPE<>2 THEN 0 ELSE  B.QUANTITY-ISNULL(b.pl_qty,0) END) AS PENDING_pl_qty,0 AS XN_STOCK
				 ,A.ORDER_NO,0 AS RECEIVE_QUANTITY
				 ,B.ROW_ID AS BO_DET_ROW_ID
				 ,ISNULL(A1.ATTR1_KEY_NAME,'') as ATTR1_KEY_NAME   ,ISNULL(A2.ATTR2_KEY_NAME,'')  as ATTR2_KEY_NAME
				,ISNULL(A3.ATTR3_KEY_NAME,'') as ATTR3_KEY_NAME  ,ISNULL(A4.ATTR4_KEY_NAME,'') as ATTR4_KEY_NAME
				,ISNULL(A5.ATTR5_KEY_NAME,'') as ATTR5_KEY_NAME,ISNULL(A6.ATTR6_KEY_NAME,'') as ATTR6_KEY_NAME
				,ISNULL(A7.ATTR7_KEY_NAME,'')  ATTR7_KEY_NAME ,ISNULL(A8.ATTR8_KEY_NAME,'')  ATTR8_KEY_NAME
				,ISNULL(A9.ATTR9_KEY_NAME,'')  ATTR9_KEY_NAME ,ISNULL(A10.ATTR10_KEY_NAME,'') ATTR10_KEY_NAME
				,ISNULL(A11.ATTR11_KEY_NAME,'') ATTR11_KEY_NAME,ISNULL(A12.ATTR12_KEY_NAME,'') ATTR12_KEY_NAME
				,ISNULL(A13.ATTR13_KEY_NAME,'') ATTR13_KEY_NAME ,ISNULL(A14.ATTR14_KEY_NAME,'') ATTR14_KEY_NAME
				,ISNULL(A15.ATTR15_KEY_NAME,'') ATTR15_KEY_NAME     
				,ISNULL(A16.ATTR16_KEY_NAME,'') ATTR16_KEY_NAME,ISNULL(A17.ATTR17_KEY_NAME,'') ATTR17_KEY_NAME
				,ISNULL(A18.ATTR18_KEY_NAME,'') ATTR18_KEY_NAME,ISNULL(A19.ATTR19_KEY_NAME,'') ATTR19_KEY_NAME
				,ISNULL(A20.ATTR20_KEY_NAME,'')  ATTR20_KEY_NAME  ,ISNULL(A21.ATTR21_KEY_NAME,'') ATTR21_KEY_NAME
				 ,ISNULL(A22.ATTR22_KEY_NAME,'') as ATTR22_KEY_NAME,ISNULL(A23.ATTR23_KEY_NAME,'') as ATTR23_KEY_NAME
				 ,ISNULL(A24.ATTR24_KEY_NAME,'') ATTR24_KEY_NAME,ISNULL(A25.ATTR25_KEY_NAME,'')  ATTR25_KEY_NAME     	  
				 ,B.ATTR1_KEY_CODE,B.ATTR2_KEY_CODE,B.ATTR3_KEY_CODE,B.ATTR4_KEY_CODE,B.ATTR5_KEY_CODE
				 ,B.ATTR6_KEY_CODE,B.ATTR7_KEY_CODE,B.ATTR8_KEY_CODE,B.ATTR9_KEY_CODE,B.ATTR10_KEY_CODE
				 ,B.ATTR11_KEY_CODE,B.ATTR12_KEY_CODE,B.ATTR13_KEY_CODE,B.ATTR14_KEY_CODE,B.ATTR15_KEY_CODE
				 ,B.ATTR16_KEY_CODE,B.ATTR17_KEY_CODE,B.ATTR18_KEY_CODE,B.ATTR19_KEY_CODE,B.ATTR20_KEY_CODE
				 ,B.ATTR21_KEY_CODE,B.ATTR22_KEY_CODE,B.ATTR23_KEY_CODE,B.ATTR24_KEY_CODE,B.ATTR25_KEY_CODE
				 ,B.SUB_SECTION_CODE,B.SECTION_CODE,B.From_mrp,B.to_mrp,
				 b.para3_code ,B.PARA4_CODE ,B.PARA5_CODE ,B.PARA6_CODE 

				FROM BUYER_ORDER_MST A (NOLOCK)
				JOIN BUYER_ORDER_DET B (NOLOCK) ON A.ORDER_ID=B.ORDER_ID
				JOIN ARTICLE D(NOLOCK) ON D.ARTICLE_CODE = B.ARTICLE_CODE
				JOIN SECTIOND SD(NOLOCK) ON sD.SUB_SECTION_CODE=CASE WHEN b.SUB_SECTION_CODE <>'0000000' THEN b.SUB_SECTION_CODE ELSE d.SUB_SECTION_CODE END
				JOIN SECTIONM SM(NOLOCK) ON Sm.SECTION_CODE=CASE WHEN b.SECTION_CODE <>'0000000' THEN b.SECTION_CODE ELSE sd.SECTION_CODE END
				JOIN PARA1 P1(NOLOCK) ON B.PARA1_CODE=P1.PARA1_CODE
				JOIN PARA2 P2(NOLOCK) ON B.PARA2_CODE=P2.PARA2_CODE
				jOIN PARA3 P3 (NOLOCK) ON P3.PARA3_CODE=B.PARA3_CODE
				JOIN PARA4 P4 (NOLOCK) ON P4.PARA4_CODE =B.PARA4_CODE 
				JOIN PARA5 P5 (NOLOCK) ON P5.PARA5_CODE =B.PARA5_CODE 
				JOIN PARA6 P6 (NOLOCK) ON P6.para6_code =B.PARA6_CODE
				JOIN UOM (NOLOCK) ON D.UOM_CODE=UOM.UOM_CODE
				LEFT JOIN ATTR1_MST A1 (NOLOCK) ON A1.ATTR1_KEY_CODE=B.attr1_KEY_CODE      
				LEFT JOIN ATTR2_MST A2 (NOLOCK) ON A2.ATTR2_KEY_CODE=B.attr2_KEY_CODE      
				LEFT JOIN ATTR3_MST A3 (NOLOCK) ON A3.ATTR3_KEY_CODE=B.attr3_KEY_CODE      
				LEFT JOIN ATTR4_MST A4 (NOLOCK) ON A4.ATTR4_KEY_CODE=B.attr4_KEY_CODE      
				LEFT JOIN ATTR5_MST A5 (NOLOCK) ON A5.ATTR5_KEY_CODE=B.attr5_KEY_CODE      
				LEFT JOIN ATTR6_MST A6 (NOLOCK) ON A6.ATTR6_KEY_CODE=B.attr6_KEY_CODE      
				LEFT JOIN ATTR7_MST A7 (NOLOCK) ON A7.ATTR7_KEY_CODE=B.attr7_KEY_CODE      
				LEFT JOIN ATTR8_MST A8 (NOLOCK) ON A8.ATTR8_KEY_CODE=B.attr8_KEY_CODE      
				LEFT JOIN ATTR9_MST A9 (NOLOCK) ON A9.ATTR9_KEY_CODE=B.attr9_KEY_CODE      
				LEFT JOIN ATTR10_MST A10 (NOLOCK) ON A10.ATTR10_KEY_CODE=B.attr10_KEY_CODE      
				LEFT JOIN ATTR11_MST A11 (NOLOCK) ON A11.ATTR11_KEY_CODE=B.attr11_KEY_CODE      
				LEFT JOIN ATTR12_MST A12 (NOLOCK) ON A12.ATTR12_KEY_CODE=B.attr12_KEY_CODE      
				LEFT JOIN ATTR13_MST A13 (NOLOCK) ON A13.ATTR13_KEY_CODE=B.attr13_KEY_CODE      
				LEFT JOIN ATTR14_MST A14 (NOLOCK) ON A14.ATTR14_KEY_CODE=B.attr14_KEY_CODE      
				LEFT JOIN ATTR15_MST A15 (NOLOCK) ON A15.ATTR15_KEY_CODE=B.attr15_KEY_CODE      
				LEFT JOIN ATTR16_MST A16 (NOLOCK) ON A16.ATTR16_KEY_CODE=B.attr16_KEY_CODE      
				LEFT JOIN ATTR17_MST A17 (NOLOCK) ON A17.ATTR17_KEY_CODE=B.attr17_KEY_CODE      
				LEFT JOIN ATTR18_MST A18 (NOLOCK) ON A18.ATTR18_KEY_CODE=B.attr18_KEY_CODE      
				LEFT JOIN ATTR19_MST A19 (NOLOCK) ON A19.ATTR19_KEY_CODE=B.attr19_KEY_CODE      
				LEFT JOIN ATTR20_MST A20 (NOLOCK) ON A20.ATTR20_KEY_CODE=B.attr20_KEY_CODE      
				LEFT JOIN ATTR21_MST A21 (NOLOCK) ON A21.ATTR21_KEY_CODE=B.attr21_KEY_CODE      
				LEFT JOIN ATTR22_MST A22 (NOLOCK) ON A22.ATTR22_KEY_CODE=B.attr22_KEY_CODE      
				LEFT JOIN ATTR23_MST A23 (NOLOCK) ON A23.ATTR23_KEY_CODE=B.attr23_KEY_CODE      
				LEFT JOIN ATTR24_MST A24 (NOLOCK) ON A24.ATTR24_KEY_CODE=B.attr24_KEY_CODE      
				LEFT JOIN ATTR25_MST A25 (NOLOCK) ON A25.ATTR25_KEY_CODE=B.ATTR25_KEY_CODE 
				WHERE (
				A.MEMO_TYPE IN (1,2) AND A.CANCELLED = 0 
				AND A.AC_CODE = @CWHERE1 
				AND  ApprovedLevelNo=99
				and (CASE WHEN memo_type<>2 THEN B.QUANTITY ELSE ISNULL(PL_QTY,0) END)> ISNULL(b.INV_QTY,0) --MASTER LEVEL CONDITION 
				--AND B.QUANTITY > ISNULL(b.INV_QTY,0) 
				)
				and (ISNULL(A.Short_close,0)  <> 1 OR memo_type<>1)
				AND (@CLOCID='' OR ISNULL(WBO_FOR_DEPT_ID,A.location_code)=@CLOCID)
				ORDER BY A.ORDER_ID
	END
	ELSE
	BEGIN
				SELECT (CASE WHEN C1.ORDER_ID IS NULL THEN 0 ELSE 1 END) AS CHK,0 AS ADD_QTY,D.ARTICLE_NAME
				,A.ORDER_ID,B.PARA1_CODE AS PACKSLIP_PARA1_CODE,B.PARA2_CODE AS PACKSLIP_PARA2_CODE
				,B.ROW_ID,B.LAST_UPDATE,B.WS_PRICE,B.RFNET,B.ARTICLE_CODE AS PACKSLIP_ARTICLE_CODE
				,B.GROSS_WSP,B.DISCOUNT_PERCENTAGE,B.DISCOUNT_AMOUNT,B.REMARKS,B.PRODUCT_CODE,B.MANUAL_DISCOUNT	
				,SD.SUB_SECTION_NAME,SM.SECTION_NAME,D.ARTICLE_NO,P1.PARA1_NAME,P2.PARA2_NAME,P3.PARA3_NAME	
				 ,P4.PARA4_NAME,P5.PARA5_NAME,P6.PARA6_NAME,P1.PARA1_ORDER,P2.PARA2_ORDER
				 ,((CASE WHEN MEMO_TYPE<>2 THEN  B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END)*B.WS_PRICE) AS AMOUNT,
				 UOM.UOM_CODE,UOM.UOM_NAME,UOM.UOM_TYPE
				 ,D.DT_CREATED,D.CODING_SCHEME,D.PARA1_SET,D.PARA2_SET,D.ALIAS AS ARTICLE_ALIAS
				,B.QUANTITY as order_qty,b.PL_QTY,ISNULL(B.INV_QTY,0) AS INVOICE_QTY,isnull(b.adj_qty,0) adj_qty
				,((CASE WHEN MEMO_TYPE<>2 THEN B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END)-ISNULL(b.INV_QTY,0)-isnull(b.adj_qty,0)) AS PENDING_invoice_Qty
				,((CASE WHEN MEMO_TYPE<>2 THEN B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END)-ISNULL(b.INV_QTY,0)-isnull(b.adj_qty,0)) AS PENDING_quantity
				,0 as pending_quantity1 --- (Had to take these 2 columns pending_quantity,pending_quantity1 due to application refeering this for unknown REason by request of Anil (Date:20-08-2021)
				,(CASE WHEN MEMO_TYPE<>2 THEN 0 ELSE  B.QUANTITY-ISNULL(b.pl_qty,0) END) AS PENDING_pl_qty,0 AS XN_STOCK
				 ,A.ORDER_NO,0 AS RECEIVE_QUANTITY
				 ,B.ROW_ID AS BO_DET_ROW_ID,
				 ISNULL(A1.ATTR1_KEY_NAME,'') as ATTR1_KEY_NAME   ,ISNULL(A2.ATTR2_KEY_NAME,'')  as ATTR2_KEY_NAME
				,ISNULL(A3.ATTR3_KEY_NAME,'') as ATTR3_KEY_NAME  ,ISNULL(A4.ATTR4_KEY_NAME,'') as ATTR4_KEY_NAME
				,ISNULL(A5.ATTR5_KEY_NAME,'') as ATTR5_KEY_NAME,ISNULL(A6.ATTR6_KEY_NAME,'') as ATTR6_KEY_NAME
				,ISNULL(A7.ATTR7_KEY_NAME,'')  ATTR7_KEY_NAME ,ISNULL(A8.ATTR8_KEY_NAME,'')  ATTR8_KEY_NAME
				,ISNULL(A9.ATTR9_KEY_NAME,'')  ATTR9_KEY_NAME ,ISNULL(A10.ATTR10_KEY_NAME,'') ATTR10_KEY_NAME
				,ISNULL(A11.ATTR11_KEY_NAME,'') ATTR11_KEY_NAME,ISNULL(A12.ATTR12_KEY_NAME,'') ATTR12_KEY_NAME
				,ISNULL(A13.ATTR13_KEY_NAME,'') ATTR13_KEY_NAME ,ISNULL(A14.ATTR14_KEY_NAME,'') ATTR14_KEY_NAME
				,ISNULL(A15.ATTR15_KEY_NAME,'') ATTR15_KEY_NAME     
				,ISNULL(A16.ATTR16_KEY_NAME,'') ATTR16_KEY_NAME,ISNULL(A17.ATTR17_KEY_NAME,'') ATTR17_KEY_NAME
				,ISNULL(A18.ATTR18_KEY_NAME,'') ATTR18_KEY_NAME,ISNULL(A19.ATTR19_KEY_NAME,'') ATTR19_KEY_NAME
				,ISNULL(A20.ATTR20_KEY_NAME,'')  ATTR20_KEY_NAME  ,ISNULL(A21.ATTR21_KEY_NAME,'') ATTR21_KEY_NAME
				 ,ISNULL(A22.ATTR22_KEY_NAME,'') as ATTR22_KEY_NAME,ISNULL(A23.ATTR23_KEY_NAME,'') as ATTR23_KEY_NAME
				 ,ISNULL(A24.ATTR24_KEY_NAME,'') ATTR24_KEY_NAME,ISNULL(A25.ATTR25_KEY_NAME,'')  ATTR25_KEY_NAME     	  
				 ,B.ATTR1_KEY_CODE,B.ATTR2_KEY_CODE,B.ATTR3_KEY_CODE,B.ATTR4_KEY_CODE,B.ATTR5_KEY_CODE
				 ,B.ATTR6_KEY_CODE,B.ATTR7_KEY_CODE,B.ATTR8_KEY_CODE,B.ATTR9_KEY_CODE,B.ATTR10_KEY_CODE
				 ,B.ATTR11_KEY_CODE,B.ATTR12_KEY_CODE,B.ATTR13_KEY_CODE,B.ATTR14_KEY_CODE,B.ATTR15_KEY_CODE
				 ,B.ATTR16_KEY_CODE,B.ATTR17_KEY_CODE,B.ATTR18_KEY_CODE,B.ATTR19_KEY_CODE,B.ATTR20_KEY_CODE
				 ,B.ATTR21_KEY_CODE,B.ATTR22_KEY_CODE,B.ATTR23_KEY_CODE,B.ATTR24_KEY_CODE,B.ATTR25_KEY_CODE
				 ,B.SUB_SECTION_CODE,B.SECTION_CODE,B.From_mrp,B.to_mrp,
				 b.para3_code ,B.PARA4_CODE ,B.PARA5_CODE ,B.PARA6_CODE 
				FROM BUYER_ORDER_MST A (NOLOCK)
				JOIN BUYER_ORDER_DET B (NOLOCK) ON A.ORDER_ID=B.ORDER_ID
				LEFT OUTER JOIN
				(
					SELECT DISTINCT B.ORDER_ID AS ORDER_ID,B.BO_DET_ROW_ID
					FROM IND01106 B 
					JOIN INM01106 C ON B.INV_ID = C.INV_ID
					WHERE C.CANCELLED=0  AND C.INV_ID=@CMEMOID
					AND C.AC_CODE=@CWHERE1   
					GROUP BY B.INV_ID,B.ORDER_ID,B.BO_DET_ROW_ID
				)C1 ON  A.ORDER_ID = C1.ORDER_ID
				AND B.row_id  =C1.BO_DET_ROW_ID
				JOIN ARTICLE D(NOLOCK) ON D.ARTICLE_CODE = B.ARTICLE_CODE
				JOIN SECTIOND SD(NOLOCK) ON SD.sub_section_code = CASE WHEN b.SUB_SECTION_CODE <>'0000000' THEN b.SUB_SECTION_CODE ELSE d.SUB_SECTION_CODE END
				JOIN SECTIONM SM(NOLOCK) ON SM.SECTION_CODE = CASE WHEN b.SECTION_CODE <>'0000000' THEN b.SECTION_CODE ELSE SD.SECTION_CODE END
				JOIN PARA1 P1(NOLOCK) ON B.PARA1_CODE=P1.PARA1_CODE
				JOIN PARA2 P2(NOLOCK) ON B.PARA2_CODE=P2.PARA2_CODE
				JOIN UOM (NOLOCK) ON D.UOM_CODE=UOM.UOM_CODE
				jOIN PARA3 P3 (NOLOCK) ON P3.PARA3_CODE=B.PARA3_CODE
				JOIN PARA4 P4 (NOLOCK) ON P4.PARA4_CODE =B.PARA4_CODE 
				JOIN PARA5 P5 (NOLOCK) ON P5.PARA5_CODE =B.PARA5_CODE 
				JOIN PARA6 P6 (NOLOCK) ON P6.para6_code =B.PARA6_CODE
				LEFT JOIN ATTR1_MST A1 (NOLOCK) ON A1.ATTR1_KEY_CODE=B.attr1_KEY_CODE      
				LEFT JOIN ATTR2_MST A2 (NOLOCK) ON A2.ATTR2_KEY_CODE=B.attr2_KEY_CODE      
				LEFT JOIN ATTR3_MST A3 (NOLOCK) ON A3.ATTR3_KEY_CODE=B.attr3_KEY_CODE      
				LEFT JOIN ATTR4_MST A4 (NOLOCK) ON A4.ATTR4_KEY_CODE=B.attr4_KEY_CODE      
				LEFT JOIN ATTR5_MST A5 (NOLOCK) ON A5.ATTR5_KEY_CODE=B.attr5_KEY_CODE      
				LEFT JOIN ATTR6_MST A6 (NOLOCK) ON A6.ATTR6_KEY_CODE=B.attr6_KEY_CODE      
				LEFT JOIN ATTR7_MST A7 (NOLOCK) ON A7.ATTR7_KEY_CODE=B.attr7_KEY_CODE      
				LEFT JOIN ATTR8_MST A8 (NOLOCK) ON A8.ATTR8_KEY_CODE=B.attr8_KEY_CODE      
				LEFT JOIN ATTR9_MST A9 (NOLOCK) ON A9.ATTR9_KEY_CODE=B.attr9_KEY_CODE      
				LEFT JOIN ATTR10_MST A10 (NOLOCK) ON A10.ATTR10_KEY_CODE=B.attr10_KEY_CODE      
				LEFT JOIN ATTR11_MST A11 (NOLOCK) ON A11.ATTR11_KEY_CODE=B.attr11_KEY_CODE      
				LEFT JOIN ATTR12_MST A12 (NOLOCK) ON A12.ATTR12_KEY_CODE=B.attr12_KEY_CODE      
				LEFT JOIN ATTR13_MST A13 (NOLOCK) ON A13.ATTR13_KEY_CODE=B.attr13_KEY_CODE      
				LEFT JOIN ATTR14_MST A14 (NOLOCK) ON A14.ATTR14_KEY_CODE=B.attr14_KEY_CODE      
				LEFT JOIN ATTR15_MST A15 (NOLOCK) ON A15.ATTR15_KEY_CODE=B.attr15_KEY_CODE      
				LEFT JOIN ATTR16_MST A16 (NOLOCK) ON A16.ATTR16_KEY_CODE=B.attr16_KEY_CODE      
				LEFT JOIN ATTR17_MST A17 (NOLOCK) ON A17.ATTR17_KEY_CODE=B.attr17_KEY_CODE      
				LEFT JOIN ATTR18_MST A18 (NOLOCK) ON A18.ATTR18_KEY_CODE=B.attr18_KEY_CODE      
				LEFT JOIN ATTR19_MST A19 (NOLOCK) ON A19.ATTR19_KEY_CODE=B.attr19_KEY_CODE      
				LEFT JOIN ATTR20_MST A20 (NOLOCK) ON A20.ATTR20_KEY_CODE=B.attr20_KEY_CODE      
				LEFT JOIN ATTR21_MST A21 (NOLOCK) ON A21.ATTR21_KEY_CODE=B.attr21_KEY_CODE      
				LEFT JOIN ATTR22_MST A22 (NOLOCK) ON A22.ATTR22_KEY_CODE=B.attr22_KEY_CODE      
				LEFT JOIN ATTR23_MST A23 (NOLOCK) ON A23.ATTR23_KEY_CODE=B.attr23_KEY_CODE      
				LEFT JOIN ATTR24_MST A24 (NOLOCK) ON A24.ATTR24_KEY_CODE=B.attr24_KEY_CODE      
				LEFT JOIN ATTR25_MST A25 (NOLOCK) ON A25.ATTR25_KEY_CODE=B.ATTR25_KEY_CODE 
				WHERE (A.MEMO_TYPE IN (1,2) AND A.CANCELLED = 0 
				AND A.AC_CODE = @CWHERE1  
				AND (B.QUANTITY > ISNULL(b.INV_QTY,0) OR C1.ORDER_ID IS NOT NULL)) 
				and (ISNULL(A.Short_close,0)  <> 1 OR memo_type<>1)
				AND (@CLOCID='' OR ISNULL(WBO_FOR_DEPT_ID,A.location_code)=@CLOCID)
				ORDER BY A.ORDER_ID

	END

END
