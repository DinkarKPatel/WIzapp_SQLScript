-- PROCEDURE TO SAVE A SPLIT AND COMBINE FROM TEMPORARY TABLES TO ACTUAL TABLES  
CREATE PROCEDURE SAVETRAN_PRD_SNC  
(  
 @NUPDATEMODE    NUMERIC(1,0),  
 @NSPID      INT,  
 @CMEMONOPREFIX    VARCHAR(50),  
 @CFINYEAR     VARCHAR(10),  
 @CMACHINENAME    VARCHAR(100)='',  
 @CWINDOWUSERNAME   VARCHAR(100)='',  
 @CWIZAPPUSERCODE   VARCHAR(10)='0000000',  
 @CMEMOID     VARCHAR(40)='',  
 @CMEMODT     DATETIME='',  
 @CLOCID      VARCHAR(2)='',  
 @LGENERATEBARCODES BIT=0,    
 @CBARCODEPREFIX  VARCHAR(20)=''
)  
--WITH ENCRYPTION
AS  
BEGIN  
 -- @NUPDATEMODE: 1- NEW RETAIL SALE ADDED,   
 --     2- NOT APPLICABLE,   
 --     3- CURRENT RETAIL SALE CANCELLED,   
 --     4- EXISTING RETAIL SALE EDITED  
   
 -- @CMEMOID:  MEMOID IS REQUIRED IF @NUPDATEMODE IS 3 (FROM CANCELLATION)  
 DECLARE @CTEMPDBNAME   VARCHAR(100),  
   @CMASTERTABLENAME  VARCHAR(100),  
   @CDETAILTABLENAME  VARCHAR(100),  
   @CDETAILTABLENAME2  VARCHAR(100),  
   @CTEMPMASTERTABLENAME VARCHAR(100),  
   @CTEMPDETAILTABLENAME VARCHAR(100),  
   @CTEMPDETAILTABLENAME2 VARCHAR(100),  
   @CTEMPMASTERTABLE  VARCHAR(100),  
   @CTEMPDETAILTABLE  VARCHAR(100),  
   @CTEMPDETAILTABLE2  VARCHAR(100),  
   @CERRORMSG    VARCHAR(500),  
   @LDONOTUPDATESTOCK  BIT,  
   @CKEYFIELD1    VARCHAR(50),  
   @CKEYFIELDVAL1   VARCHAR(50),  
   @CKEYFIELD1_DETAIL2  VARCHAR(50),  
   @CMEMONO    VARCHAR(20),  
   @NMEMONOLEN    NUMERIC(20,0),  
   @CMEMONOVAL    VARCHAR(50),  
   @CMEMODEPTID   VARCHAR(2),  
   @CLOCATIONID   VARCHAR(2),  
   @CHODEPTID    VARCHAR(2),  
   @CCMD     NVARCHAR(4000),  
   @CCMDOUTPUT    NVARCHAR(4000),  
   @NSAVETRANLOOP   BIT,  
   @CREFAPPMEMOID   VARCHAR(40),@CAPRMEMOID VARCHAR(40),  
   @NSTEP     INT,@BINSERTONLY BIT,  
   @BNEGSTOCKFOUND BIT,  
   @CKEYSTABLE VARCHAR(100),@CUSERALIAS VARCHAR(100),  
   @BESTIMATEMEMO NUMERIC(1),@CDEPT_ID CHAR(2),@BALLOWNEGSTOCK BIT,  
   @CMEMONOLEN VARCHAR(5),@CDONOTENFORCEDAYCLOSE VARCHAR(2),@DCURRENTDATE DATETIME  
  

 SET @NSTEP = 5  -- DO VALIDATIONS ON INPUT DATA BY USER  
   
 DECLARE @CRETVAL VARCHAR(MAX)  
   
 DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(100))  
   
 SET @CREFAPPMEMOID = ''  
   
 SET @NSTEP = 7  -- SETTTING UP ENVIRONMENT  
  -- TEMPORARY DATABASE Discarded now onwards as per Meeting on 30-10-2020 mentioned in Client issues List
  SET @CTEMPDBNAME = ''  
  
 SET @CMASTERTABLENAME = 'PRD_SNC_MST'  
 SET @CDETAILTABLENAME = 'PRD_SNC_DET'  
 SET @CDETAILTABLENAME2 = 'PRD_SNC_CONSUMABLE_DET'  
 
 SET @CTEMPMASTERTABLENAME = 'TEMP_PRD_SNC_MST_'+LTRIM(RTRIM(STR(@NSPID)))  
 SET @CTEMPDETAILTABLENAME = 'TEMP_PRD_SNC_DET_'+LTRIM(RTRIM(STR(@NSPID)))  
 SET @CTEMPDETAILTABLENAME2 = 'TEMP_PRD_SNC_CONSUMABLE_DET_'+LTRIM(RTRIM(STR(@NSPID)))  
   
 SET @CTEMPMASTERTABLE = @CTEMPDBNAME + @CTEMPMASTERTABLENAME  
 SET @CTEMPDETAILTABLE = @CTEMPDBNAME + @CTEMPDETAILTABLENAME  
 SET @CTEMPDETAILTABLE2 = @CTEMPDBNAME + @CTEMPDETAILTABLENAME2  
   
 SET @CERRORMSG   = ''  
 SET @LDONOTUPDATESTOCK = 0  
 SET @CKEYFIELD1   = 'MEMO_ID'  
 SET @CKEYFIELD1_DETAIL2 = 'MEMO_ID'  
  
 SET @CMEMONO   = 'MEMO_NO'  
 SET @NMEMONOLEN   = 10  
 
 SET @CCMD = N'IF OBJECT_ID('''+@CTEMPDETAILTABLE+''',''U'') IS NOT NULL
					DELETE FROM '+@CTEMPDETAILTABLE+' WHERE ISNULL(ARTICLE_CODE,'''') = '''''
 PRINT @CCMD
 EXEC SP_EXECUTESQL @CCMD
 
 SET @CCMD = N'IF OBJECT_ID('''+@CTEMPDETAILTABLE2+''',''U'') IS NOT NULL
					DELETE FROM '+@CTEMPDETAILTABLE2+' WHERE ISNULL(PRODUCT_CODE,'''') = '''''
 PRINT @CCMD
 EXEC SP_EXECUTESQL @CCMD
  
 IF ISNULL(@CLOCID,'')=''  
	SELECT @CLOCATIONID = [VALUE] FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'  
 ELSE  
	SELECT @CLOCATIONID=@CLOCID  
    
 SELECT @CHODEPTID  = [VALUE] FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'    
   
 --SELECT @BALLOWNEGSTOCK =VALUE FROM MODULES   
 --WHERE USER_CODE=@CWIZAPPUSERCODE   
 --AND FORM_NAME='FRMSALE'   
 --AND FORM_OPTION='ALLOW_NEG_STOCK'    
   
 SET @BALLOWNEGSTOCK =ISNULL(@BALLOWNEGSTOCK,0)  
   
   
 SET @NSTEP = 10  -- GETTING DEPTID INFO FROM TEMP TABLE  
  
    
 BEGIN TRY  
  
	  IF OBJECT_ID('TEMPDB..#TMPPMT','U') IS NOT NULL  
	   DROP TABLE #TMPPMT  
	    
	  SELECT PRODUCT_CODE INTO #TMPPMT FROM SKU WHERE 1=2  
	  
	  IF OBJECT_ID('TEMPDB..#TMPXNSTK','U') IS NOT NULL  
	   DROP TABLE #TMPXNSTK           
	    
	  SELECT PRODUCT_CODE,QUANTITY_IN_STOCK AS XN_STOCK INTO #TMPXNSTK FROM PMT01106 WHERE 1=2  
	  
	  IF @NUPDATEMODE=1  
		 SET @BINSERTONLY=1  
	  ELSE  
		 SET @BINSERTONLY=0  
	      
	  BEGIN TRANSACTION  
	  
	  EXEC SP_CHKXNSAVELOG 'SNC',@NSTEP,1,@NSPID  
	  
	    
	  IF @NUPDATEMODE<>3  
	  BEGIN  
		   SET @NSTEP = 15  
		   EXEC SP_CHKXNSAVELOG 'SNC',@NSTEP,1,@NSPID  
		     
		   SELECT @CDONOTENFORCEDAYCLOSE=VALUE FROM CONFIG WHERE CONFIG_OPTION='DO_NOT_ENFORCE_LAST_RUN_DT'  
		  
		   SET @CDONOTENFORCEDAYCLOSE=ISNULL(@CDONOTENFORCEDAYCLOSE,'')  
		  
		   IF @CDONOTENFORCEDAYCLOSE<>'1'  
		   BEGIN  
				SELECT TOP 1 @DCURRENTDATE=dbo.fn_getlastrundate()
				SET @DCURRENTDATE=DATEADD(DD,1,@DCURRENTDATE)  
		   END   
		   ELSE  
		   BEGIN  
				SET @CCMD=N'SELECT @DCURRENTDATE=RECEIPT_DT FROM '+@CTEMPMASTERTABLE  
				EXEC SP_EXECUTESQL @CCMD,N'@DCURRENTDATE DATETIME OUTPUT',@DCURRENTDATE OUTPUT  
		   END 
    
		  SET @NSTEP = 20  --UPDATING AC_CODE INTO TEMP TABLES  
		  EXEC SP_CHKXNSAVELOG 'SNC',@NSTEP,0,@NSPID  
		    
		  SET @CCMD = 'IF OBJECT_ID('''+@CTEMPMASTERTABLE+''',''U'') IS NOT NULL '+  
			 ' UPDATE ' + @CTEMPMASTERTABLE + ' SET AC_CODE=''0000000000'' WHERE ISNULL(AC_CODE,'''') ='''''  
		  PRINT @CCMD  
		  EXEC SP_EXECUTESQL @CCMD  
		  
		  SET @NSTEP = 25	
		  SET @CCMD = 'IF OBJECT_ID('''+@CTEMPDETAILTABLE+''',''U'') IS NOT NULL '+  
			 ' DELETE FROM ' + @CTEMPDETAILTABLE + ' WHERE ISNULL(ARTICLE_CODE,'''') IN ('''', ''000000000'')' 
		  PRINT @CCMD  
		  EXEC SP_EXECUTESQL @CCMD
		  
		  SET @NSTEP = 30
		  SET @CCMD = 'IF OBJECT_ID('''+@CTEMPDETAILTABLE2+''',''U'') IS NOT NULL '+  
			 ' DELETE FROM ' + @CTEMPDETAILTABLE2 + ' WHERE ISNULL(PRODUCT_CODE,'''') = '''''
		  PRINT @CCMD  
		  EXEC SP_EXECUTESQL @CCMD
		  
		  SET @NSTEP = 35
		  SET @CCMD = 'IF OBJECT_ID('''+@CTEMPDETAILTABLE2+''',''U'') IS NOT NULL '+  
			 ' UPDATE ' + @CTEMPDETAILTABLE2 + ' SET REF_ROW_ID=NULL WHERE 1=(SELECT SNC_MST_MODE FROM  '+@CTEMPMASTERTABLE+')'
		  PRINT @CCMD  
		  EXEC SP_EXECUTESQL @CCMD
		  
		  SET @NSTEP = 40  
		  EXEC SP_CHKXNSAVELOG 'SNC',@NSTEP,0,@NSPID  
		    
		  -- GETTING DEPT_ID FROM TEMP MASTER TABLE  
		  SET @CCMD = 'SELECT @CMEMODEPTID = LEFT(' + @CMEMONO + ',2) FROM '   
			 + (CASE WHEN @NUPDATEMODE=3 THEN @CMASTERTABLENAME ELSE @CTEMPMASTERTABLE END )  
		  EXEC SP_EXECUTESQL @CCMD, N'@CMEMODEPTID VARCHAR(2) OUTPUT',   
				 @CMEMODEPTID OUTPUT  
		  IF (@CMEMODEPTID IS NULL )  
		  BEGIN  
			 SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE SAVED... INCORRECT PARAMETER'  
			 GOTO END_PROC      
		  END	  
	  END
	  		  
	  -- START UPDATING XN TABLES   
	  IF @NUPDATEMODE = 1 -- ADDMODE   
	  BEGIN   
	     
		   SET @NSTEP = 45  -- GENERATING NEW KEY  
		   EXEC SP_CHKXNSAVELOG 'SNC',@NSTEP,0,@NSPID     
		     
		   -- GENERATING NEW JOB ORDER NO    
		   SET @NSAVETRANLOOP=0  
		   WHILE @NSAVETRANLOOP=0  
		   BEGIN  
				SET @NSTEP = 50
      			SET @CCMD=N'SELECT TOP 1 @CUSERALIASOUT=USER_ALIAS FROM '+@CTEMPMASTERTABLE+' A JOIN USERS B ON A.USER_CODE=B.USER_CODE'  
				EXEC SP_EXECUTESQL @CCMD,N'@CUSERALIASOUT VARCHAR(5) OUTPUT',@CUSERALIASOUT=@CUSERALIAS OUTPUT  
			      
				SET @CKEYSTABLE='KEYS_SNM_'+LTRIM(RTRIM(@CUSERALIAS))  
			    
			    SET @NSTEP = 55  
				EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1,  
					@CFINYEAR,0,@CMEMONOVAL OUTPUT     
			      
				PRINT @CMEMONOVAL  
				SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+ @CMASTERTABLENAME +'   
										  WHERE '+@CMEMONO+'='''+@CMEMONOVAL+'''   
										  AND FIN_YEAR = '''+@CFINYEAR+''' )  
								SET @NLOOPOUTPUT=0  
						    ELSE  
								SET @NLOOPOUTPUT=1'  
				PRINT @CCMD  
				EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT  
		   END  
		  
		   IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%'
		   BEGIN  
			  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'   
			  GOTO END_PROC      
		   END  
		  
		   SET @NSTEP = 60  -- GENERATING NEW ID  
		   EXEC SP_CHKXNSAVELOG 'SNC',@NSTEP,0,@NSPID  
		     
		   -- GENERATING NEW JOB ORDER ID  
		   SET @CKEYFIELDVAL1 = @CLOCATIONID + @CFINYEAR+ REPLICATE('0', 15-LEN(LTRIM(RTRIM(@CMEMONOVAL)))) + LTRIM(RTRIM(@CMEMONOVAL))  
		   IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'    
		   BEGIN  
			  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'  
			  -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'  
			  GOTO END_PROC  
		   END  
		  
		   SET @NSTEP = 65  -- UPDATING NEW ID INTO TEMP TABLES  
		     
		   EXEC SP_CHKXNSAVELOG 'SNC',@NSTEP,0,@NSPID  
		     
		   -- UPDATING NEWLY GENERATED JOB ORDER NO AND JOB ORDER ID IN PIM AND PID TEMP TABLES  
		   SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' +   
			  @CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''''  
		   PRINT @CCMD  
		   EXEC SP_EXECUTESQL @CCMD  
		       
		     
		   SET @NSTEP = 70  
		   EXEC SP_CHKXNSAVELOG 'SNC',@NSTEP,0,@NSPID  
		     
		   SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''''  
		   PRINT @CCMD  
		   EXEC SP_EXECUTESQL @CCMD  
		     
		   SET @NSTEP = 75  
		   EXEC SP_CHKXNSAVELOG 'SNC',@NSTEP,0,@NSPID  
		     
		   SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE2 + ' SET '+@CKEYFIELD1_DETAIL2+' = '''+@CKEYFIELDVAL1+''''  
		   PRINT @CCMD  
		   EXEC SP_EXECUTESQL @CCMD  
		      
		   --EXEC SP_EXECUTESQL @CCMD  
	  END     -- END OF ADDMODE  
	  
	  ELSE    -- CALLED FROM EDITMODE  
	  BEGIN    -- START OF EDITMODE  
	    
		   SET @NSTEP = 80  -- GETTING ID INFO FROM TEMP TABLE  
		     
		   EXEC SP_CHKXNSAVELOG 'SNC',@NSTEP,0,@NSPID  
		     
		   -- GETTING CM ID WHICH IS BEING EDITED  
		   SET @CCMD = 'SELECT @CKEYFIELDVAL1 = ' + @CKEYFIELD1 + ', @CMEMONOVAL = ' + @CMEMONO + ' FROM '  
			  + (CASE WHEN @NUPDATEMODE=3 THEN @CMASTERTABLENAME + ' WHERE MEMO_ID = ''' + @CMEMOID + ''''   
				ELSE @CTEMPMASTERTABLE END )  
		     
		   EXEC SP_EXECUTESQL @CCMD, N'@CKEYFIELDVAL1 VARCHAR(50) OUTPUT, @CMEMONOVAL VARCHAR(50) OUTPUT',   
				  @CKEYFIELDVAL1 OUTPUT, @CMEMONOVAL OUTPUT  
		   IF (@CKEYFIELDVAL1 IS NULL ) OR (@CMEMONOVAL IS NULL )  
		   BEGIN  
			  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'  
			  GOTO END_PROC      
		   END  
	
			SET @NSTEP = 82
			EXEC SP3SBuildPRDSNC
			@cXnID=@CKEYFIELDVAL1
			,@nUpdateMode=3
			,@cErrMsg=@CERRORMSG OUTPUT  
			
			IF ISNULL(@CERRORMSG,'')<>''
				GOTO END_PROC

	     
		   IF @NUPDATEMODE = 3     
		   BEGIN  
				SET @NSTEP=85  
				-- UPDATING SENTTOHO FLAG  
				SET @CCMD = N'UPDATE ' + @CMASTERTABLENAME + ' SET CANCELLED = 1,LAST_UPDATE=GETDATE() ' +   
				   N' WHERE ' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + ''''  
				EXEC SP_EXECUTESQL @CCMD  
		   END  
		     
		   ELSE  
		   BEGIN  
  				SET @NSTEP = 90  -- UPDATING SENT_TO_HO FLAG TEMP TABLE  
			      
				EXEC SP_CHKXNSAVELOG 'SNC',@NSTEP,0,@NSPID  
			      
				-- UPDATING SENTTOHO FLAG  
				SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' SET SENT_TO_HO = 0, LAST_UPDATE=GETDATE() '  
				EXEC SP_EXECUTESQL @CCMD  
		         
		   END  
		  
		   -- REVERTING BACK THE STOCK OF PMT W.R.T CURRENT ISSUE  
		   SET @NSTEP = 100  -- REVERTING STOCK  
		     
		   EXEC SP_CHKXNSAVELOG 'SNC',@NSTEP,0,@NSPID  
		   
		   	 
			--SELECT * FROM PMT01106 WHERE PRODUCT_CODE='CRP80'
		    EXEC UPDATEPMT_PRD_SNC   
			   @CXNTYPE   = 'SNC'  
			 , @CXNNO   = @CMEMONOVAL  
			 , @CXNID   = @CKEYFIELDVAL1  
			 , @NREVERTFLAG  = 1  
			 , @NALLOWNEGSTOCK = @BALLOWNEGSTOCK  
			 , @NCHKDELBARCODES = 1  
			 , @NUPDATEMODE  = @NUPDATEMODE      
			 , @CCMD    = @CCMDOUTPUT OUTPUT  
		   -- SELECT @CCMDOUTPUT  
		   --SELECT * FROM PMT01106 WHERE PRODUCT_CODE='CRP80'
		   IF (@NUPDATEMODE = 3)   
		   BEGIN
				 SET @NSTEP = 105 
				 IF @CCMDOUTPUT <> ''  
				 BEGIN  
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR UPDATING THE STOCK STATUS IN PMT....'  
					  SET @BNEGSTOCKFOUND=1  
					  PRINT 'NEGATIVE STOCK FOUND-1'  
					  PRINT ISNULL(@CCMDOUTPUT,'@CCMDOUTPUT : NULL')  
					  EXEC SP_EXECUTESQL @CCMDOUTPUT  
    			  END   
				 GOTO END_PROC  
		   END  
		   ELSE  
		   IF (@NUPDATEMODE = 2)   
		   BEGIN  
				 SET @NSTEP = 110
				 IF OBJECT_ID('TEMPDB..#TEMPBARCODES','U') IS NOT NULL  
				  DROP TABLE #TEMPBARCODES  
			      
				 SELECT DISTINCT A.DEPT_ID,C.PRODUCT_CODE,A.DEPARTMENT_ID 
				 INTO #TEMPBARCODES FROM PRD_SNC_MST  A
				 JOIN PRD_SNC_DET B ON B.MEMO_ID=A.MEMO_ID  
				 JOIN PRD_SNC_BARCODE_DET C ON C.REFROW_ID=B.ROW_ID
				 WHERE A.MEMO_ID=@CKEYFIELDVAL1  
		   END  
	  END     -- END OF EDITMODE  
	  
	  SET @NSTEP = 115  
	    
	  -- RECHECKING IF ID IS STILL LATER  
	  IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
	  BEGIN  
	   SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'  
	   GOTO END_PROC  
	  END  
	  
	  -- UPDATING MASTER TABLE (PIM01106) FROM TEMP TABLE  
	  SET @NSTEP = 120  -- UPDATING MASTER TABLE     
	     
	  EXEC SP_CHKXNSAVELOG 'SNC',@NSTEP,0,@NSPID  
	     
	  EXEC UPDATEMASTERXN   
		  @CSOURCEDB = @CTEMPDBNAME  
		, @CSOURCETABLE = @CTEMPMASTERTABLENAME  
		, @CDESTDB  = ''  
		, @CDESTTABLE = @CMASTERTABLENAME  
		, @CKEYFIELD1 = @CKEYFIELD1  
		, @LINSERTONLY  = @BINSERTONLY  
		, @BALWAYSUPDATE = 1  
	      
	  
	  -- UPDATING TRANSACTION TABLE (PID01106) FROM TEMP TABLE  
	  SET @NSTEP = 130  -- UPDATING TRANSACTION TABLE  

	  DECLARE @CSNCDETROWID VARCHAR(50)
	  SET @CSNCDETROWID='SNCDETROWID'+LTRIM(RTRIM(@NSPID))
	  SET @CCMD = N'IF OBJECT_ID('''+@CSNCDETROWID+''',''U'') IS NOT NULL
						DROP TABLE '+@CSNCDETROWID
	  EXEC SP_EXECUTESQL @CCMD  
	   
	  SET @NSTEP = 135 
	  SET @CCMD = N'SELECT ROW_ID,ROW_ID AS OLD_ROW_ID INTO '+@CSNCDETROWID+' FROM ' + @CTEMPDETAILTABLE + ' WHERE LEFT(ROW_ID,5) = ''LATER'''  
	  EXEC SP_EXECUTESQL @CCMD  
	   
	  SET @NSTEP = 140
	  -- UPDATING ROW_ID IN TEMP TABLES - CMD01106  
	  SET @CCMD = N'UPDATE '+@CSNCDETROWID+' SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(40), NEWID())  +'''''
	  EXEC SP_EXECUTESQL @CCMD 

	  SET @NSTEP = 145
	  -- UPDATING ROW_ID IN TEMP TABLES - CMD01106  
	  SET @CCMD = N'UPDATE A SET ROW_ID = B.ROW_ID
					FROM ' + @CTEMPDETAILTABLE + ' A
					JOIN  '+@CSNCDETROWID+' B ON B.OLD_ROW_ID=A.ROW_ID'
					          
	  EXEC SP_EXECUTESQL @CCMD 
  
	  SET @NSTEP = 155
	  -- UPDATING ROW_ID IN TEMP TABLES - CMD01106  
	  SET @CCMD = N'UPDATE A SET A.REF_ROW_ID = B.ROW_ID
					FROM ' + @CTEMPDETAILTABLE2 + ' A
					JOIN  '+@CSNCDETROWID+' B ON B.OLD_ROW_ID=A.REF_ROW_ID'
	          
	  EXEC SP_EXECUTESQL @CCMD 
	  
	  IF @NUPDATEMODE=2  
	  BEGIN  
			-- DELETING EXISTING ENTRIES FROM PID01106 TABLE WHERE ROW_ID NOT FOUND IN TEMPTABLE  
			SET @NSTEP = 165  -- UPDATING TRANSACTION TABLE - DELETING EXISTING ENTRIES  
		      
			EXEC SP_CHKXNSAVELOG 'SNC',@NSTEP,0,@NSPID  
			-- CMD01106  
			SET @CCMD = N'DELETE FROM ' + @CDETAILTABLENAME + '   
			   WHERE ' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''  
			   AND ROW_ID IN   
			   (  
				SELECT A.ROW_ID   
				FROM ' + @CDETAILTABLENAME + ' A   
				LEFT OUTER JOIN ' + @CTEMPDETAILTABLE + ' B ON A.ROW_ID = B.ROW_ID  
				WHERE A.' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + '''  
				AND   B.ROW_ID IS NULL  
			   )'  
			PRINT @CCMD     
			EXEC SP_EXECUTESQL @CCMD  
		      
			SET @NSTEP = 170  
		      
			EXEC SP_CHKXNSAVELOG 'SNC',@NSTEP,0,@NSPID  
		      
			-- PAYMODE_XN_DET  
			SET @CCMD = N'DELETE FROM ' + @CDETAILTABLENAME2 + '   
			   WHERE ' + @CKEYFIELD1_DETAIL2 + ' = ''' + @CKEYFIELDVAL1 + '''  
			   AND ROW_ID IN   
			   (  
				SELECT A.ROW_ID   
				FROM ' + @CDETAILTABLENAME2 + ' A   
				LEFT OUTER JOIN ' + @CTEMPDETAILTABLE2 + ' B ON A.ROW_ID = B.ROW_ID  
				WHERE A.' + @CKEYFIELD1_DETAIL2 + ' = ''' + @CKEYFIELDVAL1 + '''  
				AND   B.ROW_ID IS NULL  
			   )'  
			PRINT @CCMD        
			EXEC SP_EXECUTESQL @CCMD  
		      
	   END  
	     
	   -- INSERTING/UPDATING THE ENTRIES IN PRD_JID TABLE FROM TEMPTABLE  
	   SET @NSTEP = 175  -- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES  
	     
	   EXEC SP_CHKXNSAVELOG 'SNC',@NSTEP,0,@NSPID  

	   -- CMD01106  
	   EXEC UPDATEMASTERXN 
		  @CSOURCEDB = @CTEMPDBNAME  
		, @CSOURCETABLE = @CTEMPDETAILTABLENAME  
		, @CDESTDB  = ''  
		, @CDESTTABLE = @CDETAILTABLENAME  
		, @CKEYFIELD1 = 'ROW_ID'  
		, @LINSERTONLY  = @BINSERTONLY      
		, @BALWAYSUPDATE = 1  

  	   	     
	   SET @NSTEP = 180  
	     
	   EXEC SP_CHKXNSAVELOG 'SNC',@NSTEP,0,@NSPID  
	     
	   -- SNC_CONSUMABLE_DET  
	   EXEC UPDATEMASTERXN  
		  @CSOURCEDB = @CTEMPDBNAME  
		, @CSOURCETABLE = @CTEMPDETAILTABLENAME2  
		, @CDESTDB  = ''  
		, @CDESTTABLE = @CDETAILTABLENAME2  
		, @CKEYFIELD1 = 'ROW_ID'  
		, @LINSERTONLY  = @BINSERTONLY      
		, @BALWAYSUPDATE = 1      
	     
	  
  	  	SET @LGENERATEBARCODES=1
	     
	   IF @LGENERATEBARCODES = 1    
	   BEGIN    
		   PRINT 'GENERATING BARCODES'    
		   SET @NSTEP = 185  
		       
		       
		   EXEC SAVETRAN_GENBARCODES_PRD_SNC    
			  @CXNID  = @CKEYFIELDVAL1    
			, @CPREFIX  = @CBARCODEPREFIX    
			, @NMODE  = 4     
			, @LOCID  = @CLOCATIONID     
			, @CERRORMSG = @CERRORMSG OUTPUT    


		   IF ISNULL(@CERRORMSG,'')<>''    
				GOTO END_PROC    
		        
		   -- CHECK WHETHER BARCODE HAS SUCCESSFULLY GENERATED OR NOT    
		   IF EXISTS ( SELECT TOP 1 B.PRODUCT_CODE FROM PRD_SNC_DET A 
		              JOIN PRD_SNC_BARCODE_DET B ON A.ROW_ID=B.REFROW_ID    
					  WHERE MEMO_ID = @CKEYFIELDVAL1 AND B.PRODUCT_CODE = '' )    
		   BEGIN
				SET @NSTEP = 190      
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR GENERATING NEW BARCODES....'    
				-- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'            
				GOTO END_PROC    
		   END    
		    
		   -- CHECK ALL BARCODES INSERTED INTO PID    
		   IF EXISTS ( SELECT TOP 1 B.PRODUCT_CODE FROM SNC_DET A 
		              JOIN PRD_SNC_BARCODE_DET B ON A.ROW_ID=B.REFROW_ID        
					  LEFT OUTER JOIN PRD_SKU C ON B.PRODUCT_UID = C.PRODUCT_UID    
					  WHERE A.MEMO_ID = @CKEYFIELDVAL1     
					  AND C.PRODUCT_CODE IS NULL )    
		   BEGIN    
				SET @NSTEP=200    
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR GENERATING NEW BARCODES... NEW CODES NOT GENERATED'    
				-- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'    
			        
				GOTO END_PROC    
		   END    
	   END 
	 
	   SET @NSTEP = 205
	    --SELECT * FROM PMT01106 WHERE PRODUCT_CODE='CRP80'
	    
	   EXEC UPDATEPMT_PRD_SNC   
		  @CXNTYPE		= 'SNC'  
		, @CXNNO		= @CMEMONOVAL  
		, @CXNID		= @CKEYFIELDVAL1  
		, @NREVERTFLAG  = 0  
		, @NALLOWNEGSTOCK = @BALLOWNEGSTOCK  
		, @NCHKDELBARCODES = 1  
		, @NUPDATEMODE  = @NUPDATEMODE      
		, @CCMD    = @CCMDOUTPUT OUTPUT  
	     --SELECT @CCMDOUTPUT
	     --SELECT * FROM PMT01106 WHERE PRODUCT_CODE='CRP80'
	   IF @CCMDOUTPUT <> ''  
	   BEGIN  
			 SET @NSTEP = 210  
			 SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR UPDATING THE STOCK STATUS IN PMT....'  
		       
			 SET @BNEGSTOCKFOUND=1      
		       
			 PRINT 'NEGATIVE STOCK FOUND-2-'+@CCMDOUTPUT  
		       
			 EXEC SP_EXECUTESQL @CCMDOUTPUT  
			 GOTO END_PROC  
	   END  
	    
	   SET @NSTEP = 215  

	   IF EXISTS (SELECT TOP 1 ERRMSG FROM @OUTPUT WHERE ISNULL(ERRMSG,'')<>'')  
			SELECT TOP 1 @CERRORMSG= ERRMSG FROM @OUTPUT WHERE ISNULL(ERRMSG,'')<>''  
	   ELSE  
			DELETE FROM @OUTPUT   
	   
	   IF @NUPDATEMODE<>3
	    EXEC SAVETRAN_PUR_UPDSKU_PRD_SNC	@CMEMOID =@CKEYFIELDVAL1,	@NMODE =1,@BCANCELBILL =0,@CERRORMSG =@CERRORMSG OUTPUT
	      
	      --SELECT * FROM PMT01106 WHERE PRODUCT_CODE IN
	      --( SELECT PRODUCT_CODE  FROM PRD_SNC_CONSUMABLE_DET WHERE MEMO_ID ='WH0111800000WH00000013' )
	      
	            
	      --SELECT * FROM PRD_PMT WHERE PRODUCT_CODE IN
	      --(    SELECT A.PRODUCT_CODE  FROM PRD_SNC_BARCODE_DET A
	      --JOIN PRD_SNC_DET B ON A.REFROW_ID =B.ROW_ID 
	      --WHERE B.MEMO_ID ='WH0111800000WH00000014' )
	    
	      --SELECT A.PRODUCT_CODE , A.* FROM PRD_SNC_BARCODE_DET A
	      --JOIN PRD_SNC_DET B ON A.REFROW_ID =B.ROW_ID 
	      --WHERE B.MEMO_ID ='WH0111800000WH00000014'
	       
	      --SELECT * FROM PRD_SNC_MST WHERE MEMO_ID ='WH0111800000WH00000014' 
	      --SELECT * FROM PRD_SNC_DET  WHERE MEMO_ID ='WH0111800000WH00000014' 
	      --SELECT * FROM PRD_SNC_CONSUMABLE_DET WHERE MEMO_ID ='WH0111800000WH00000014' 
	    
	    
	
	   GOTO END_PROC  
   
END TRY  
BEGIN CATCH  
	  SET @CERRORMSG = 'PROCEDURE SAVETRAN_SNC: STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()  
	  -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG, '''' AS MEMO_ID'  
	    
	  GOTO END_PROC  
END CATCH  
   
END_PROC:  
  	 IF ISNULL(@CERRORMSG,'')=''
  	 BEGIN

		DECLARE @NRFUPDATEMODE INT
	    SET @NRFUPDATEMODE=(CASE WHEN @NUPDATEMODE>3 THEN 2 ELSE @NUPDATEMODE END)				
	 		
		EXEC SP3SBUILDPRDSNC
				@CXNID=@CKEYFIELDVAL1
				,@NUPDATEMODE=@NRFUPDATEMODE
				,@CERRMSG=@CERRORMSG OUTPUT  
	 END
  	  	
  	
  	  	 
	 IF @@TRANCOUNT>0  
	 BEGIN  
		  EXEC SP_CHKXNSAVELOG 'SNC',@NSTEP,0,@NSPID  
		  IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')='' AND ISNULL(@BNEGSTOCKFOUND,0)=0  
		  BEGIN
			UPDATE PRD_SNC_MST SET LAST_UPDATE=GETDATE() WHERE MEMO_ID=@CKEYFIELDVAL1
			COMMIT TRANSACTION
		  END	
		  ELSE  
				ROLLBACK  
	 END  
	  
	 IF ISNULL(@BNEGSTOCKFOUND,0)=0  
	 BEGIN  
		  INSERT @OUTPUT ( ERRMSG, MEMO_ID)  
		   VALUES ( ISNULL(@CERRORMSG,''), ISNULL(@CKEYFIELDVAL1,''))  
		  
		  SELECT * FROM @OUTPUT   
	 END   

	SET @CCMD = N'IF OBJECT_ID( ''' + @CTEMPDETAILTABLE + ''',''U'') IS NOT NULL
                  DROP TABLE ' + @CTEMPDETAILTABLE
	EXEC SP_EXECUTESQL @CCMD
	
	SET @CCMD = N'IF OBJECT_ID( ''' + @CTEMPDETAILTABLE2 + ''',''U'') IS NOT NULL
                  DROP TABLE ' + @CTEMPDETAILTABLE2
	EXEC SP_EXECUTESQL @CCMD

    SET @CCMD = N'IF OBJECT_ID( ''' + @CTEMPMASTERTABLE + ''',''U'') IS NOT NULL
                  DROP TABLE ' + @CTEMPMASTERTABLE
	EXEC SP_EXECUTESQL @CCMD
			
------------------------------------------------------ END OF PROCEDURE SAVETRAN_SNC  
END

