create PROCEDURE SP_DSR_PETTYCASHREG
(
	@CLOCID CHAR(4),
	@DTFDATE DATETIME,
	@DTTODATA DATETIME 
)
--WITH ENCRYPTION
AS
BEGIN
--(dinkar) Replace  left(memoid,2) to Location_code 

    DECLARE @TOPBALDT TABLE (OPENINGBAL NUMERIC(14,2))
    DECLARE @NOP_BAL NUMERIC(14,2),@NMAXSR INT,@NMINSR INT, @NDBAMT NUMERIC(14,2),@NCRAMT NUMERIC(14,2),@NCLOSAMT NUMERIC(14,2)
    DECLARE @DTOPDATE DATETIME
    
    SET @DTOPDATE = (SELECT DATEADD (DD,-1,@DTFDATE))
    
    INSERT INTO @TOPBALDT(OPENINGBAL)
    EXEC SP_CASHXN @CLOCID,'',@DTOPDATE,0,0,1
    
    SELECT TOP 1 @NOP_BAL = ISNULL(OPENINGBAL,0) FROM @TOPBALDT
    
    IF OBJECT_ID('#TEMP_REPORT','U') IS NOT NULL
			DROP TABLE #TEMP_REPORT
    
	 SELECT ROW_NUMBER() OVER (ORDER BY PEM_MEMO_DT ) AS SR_NO,@NOP_BAL AS OPENING_BAL, PEM_MEMO_DT,C.AC_NAME,
	(CASE WHEN A.XN_TYPE='DR' THEN XN_AMOUNT ELSE 0 END) AS DEBIT_AMOUNT,
	(CASE WHEN A.XN_TYPE='CR' THEN XN_AMOUNT ELSE 0 END) AS CREDIT_AMOUNT,
	CONVERT (NUMERIC(14,2),0) AS CLOSSING_BAL 
	 INTO #TEMP_REPORT FROM PED01106 A  
	JOIN PEM01106 B ON A.PEM_MEMO_ID = B.PEM_MEMO_ID
	JOIN LM01106 C ON A.AC_CODE = C.AC_CODE
	WHERE B.CANCELLED = 0 AND b.location_Code  = @CLOCID
	AND PEM_MEMO_DT BETWEEN @DTFDATE AND @DTTODATA
	ORDER BY PEM_MEMO_DT 
	
	SELECT @NMAXSR = MAX(SR_NO) FROM #TEMP_REPORT
	SET @NMINSR = 1
	WHILE (@NMINSR <= @NMAXSR)
	BEGIN 
	
		SELECT @NDBAMT=DEBIT_AMOUNT, @NCRAMT=CREDIT_AMOUNT FROM #TEMP_REPORT WHERE SR_NO = @NMINSR
		IF @NMINSR = 1 
		BEGIN
			UPDATE #TEMP_REPORT SET CLOSSING_BAL =@NOP_BAL+@NCRAMT-@NDBAMT WHERE SR_NO = @NMINSR 
		END
		ELSE 
		BEGIN
			SELECT @NCLOSAMT = CLOSSING_BAL FROM #TEMP_REPORT WHERE SR_NO = @NMINSR-1
			UPDATE #TEMP_REPORT SET CLOSSING_BAL =@NCLOSAMT+@NCRAMT-@NDBAMT WHERE SR_NO = @NMINSR  
		END 
		SET @NMINSR = @NMINSR+1
	END
	
	SELECT SR_NO,OPENING_BAL,CONVERT(VARCHAR(10),PEM_MEMO_DT,105) AS PEM_MEMO_DT,AC_NAME,DEBIT_AMOUNT,CREDIT_AMOUNT,CLOSSING_BAL FROM #TEMP_REPORT
END
