CREATE PROCEDURE SP3S_TRANSFER_TO_TRADING_GETDATA
(
 @NQUERYID	NUMERIC (3,0)=1,
 @CSP_ID VARCHAR(100) 
 
)
AS
BEGIN
    
   
   DECLARE @CERRMSG VARCHAR(100)
  
	SET @CERRMSG=''   

	--IF EXISTS (SELECT TOP 1 'U' FROM  TRANSFER_TO_TRADING_UPLOAD WHERE SP_ID=@CSP_ID AND PRODUCT_CODE<>'')
	--   SET @NQUERYID=1
	
 IF @NQUERYID=1
  GOTO LBLDETAILS
 ELSE IF @NQUERYID=2
 GOTO LBWOBARCODELDETAILS

  LBWOBARCODELDETAILS:
                  



            SELECT A.PRODUCT_CODE ,A.DEPT_ID ,'000' BIN_ID ,1 REQUIRED_QTY ,0 INPUT_QTY ,0 OUT_QTY ,
		          ART.ARTICLE_NO,  P1.PARA1_CODE, P1.PARA1_NAME ,P2.PARA2_CODE, P2.PARA2_NAME ,
		         ''  AS ERRMSG
	        FROM TRANSFER_TO_TRADING_UPLOAD A (NOLOCK)
            JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =A.ARTICLE_CODE 
			JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE =A.PARA1_CODE 
			JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE =A.PARA2_CODE 
			JOIN UOM (NOLOCK) ON UOM.UOM_CODE =ART .UOM_CODE 
			JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE =A.AC_CODE
		    WHERE 1=2
			 

			 IF OBJECT_ID ('TEMPDB..#TMPBARCODE','U') IS NOT NULL
			    DROP TABLE #TMPBARCODE
          
		   	  SELECT CAST('LATER' AS VARCHAR(22)) AS  MEMO_ID, 
			   ART.ARTICLE_CODE,ART.ARTICLE_NO,  
			   P1.PARA1_CODE, P1.PARA1_NAME ,
			   P2.PARA2_CODE, P2.PARA2_NAME ,
			   '0000000' PARA3_CODE, CAST('' AS VARCHAR(100)) PARA3_NAME,
			   '0000000' PARA4_CODE, CAST('' AS VARCHAR(100)) PARA4_NAME ,
			   '00000000' PARA5_CODE,CAST('' AS VARCHAR(100)) PARA5_NAME ,
			   '0000000' PARA6_CODE, CAST('' AS VARCHAR(100)) PARA6_NAME ,
			   A.PRODUCT_CODE, DEPT_ID, BIN_ID,
			   ROW_NUMBER() OVER (ORDER BY A.PRODUCT_CODE) AS  SR_NO, 
			   CAST('LATER'  AS VARCHAR(40)) ROW_ID, 
			   GETDATE() AS LAST_UPDATE,A.QUANTITY  AS  QUANTITY, 
			   ART.PURCHASE_PRICE AS PURCHASE_PRICE,
			   art.FIX_MRP,
			   art.mrp  AS MRP,
			   art.wholesale_price  AS WS_PRICE,
			   cast((art.purchase_price*a.QUANTITY ) as numeric(14,2)) AS AMOUNT ,
			   UOM.UOM_CODE ,UOM_NAME ,
			   A.AC_CODE,LM.AC_NAME ,
			   CAST(0 AS NUMERIC(10,2)) AS OH_COST_PERCENTAGE,
			   CAST(0 AS NUMERIC(10,2)) AS OH_Cost_Amount,
			   CAST(0 AS NUMERIC(14,2)) AS ARTICLE_PP,
			   CAST(0 AS NUMERIC(14,2)) AS ACTUAL_COST
			   INTO #TMPBARCODE
			   FROM TRANSFER_TO_TRADING_UPLOAD A (NOLOCK)
			   JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =A.ARTICLE_CODE 
			   JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE =A.PARA1_CODE 
			   JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE =A.PARA2_CODE 
			   JOIN UOM (NOLOCK) ON UOM.UOM_CODE =ART .UOM_CODE 
			   JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE =A.AC_CODE
			   where a.sp_id =@CSP_ID 

			   UPDATE A SET ARTICLE_PP =CASE WHEN ISNULL(B.purchase_price,0)<> 0 THEN B.purchase_price ELSE A.PURCHASE_PRICE END
			   FROM #TMPBARCODE A
			   LEFT JOIN art_det B (NOLOCK) ON A.article_code =B.article_code AND A.para2_code =B.para2_code 

			   SELECT * FROM #TMPBARCODE



			   SELECT CAST('LATER' AS VARCHAR(22)) AS MEMO_ID, 
			   CAST('LATER'  AS VARCHAR(40)) AS REF_ROW_ID,
			   A. PRODUCT_CODE,A.QUANTITY QUANTITY,CAST('LATER' AS VARCHAR(40)) ROW_ID, 
			   GETDATE() AS LAST_UPDATE, DEPT_ID, BIN_ID,
			   ART.ARTICLE_CODE,ART.ARTICLE_NO,  
			   P1.PARA1_CODE, P1.PARA1_NAME ,
			   P2.PARA2_CODE, P2.PARA2_NAME ,
			   '' PARA3_CODE, '' PARA3_NAME,
			   '' PARA4_CODE, '' PARA4_NAME ,
			   '' PARA5_CODE, '' PARA5_NAME ,
			   '' PARA6_CODE, ''PARA6_NAME ,
			   UOM.UOM_CODE ,UOM_NAME,
			   A.AC_CODE,LM.AC_NAME ,
			   CAST(0 AS NUMERIC(10,2)) AS OH_COST_PERCENTAGE,
			   CAST(0 AS NUMERIC(10,2)) AS OH_Cost_Amount
			   FROM TRANSFER_TO_TRADING_UPLOAD A
			   JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =A.ARTICLE_CODE 
			   JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE =A.PARA1_CODE 
			   JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE =A.PARA2_CODE 
			   JOIN UOM (NOLOCK) ON UOM.UOM_CODE =ART .UOM_CODE 
			   JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE =A.AC_CODE
			   WHERE a.sp_id =@CSP_ID AND 1=2
			   


				SELECT CAST('LATER' AS VARCHAR(22)) AS MEMO_ID,
				'' AS JOB_CODE ,'' AS JOB_NAME,0 JOB_RATE ,
				0 AS QUANTITY,
				CONVERT(NUMERIC(10,2),0) AS NET_JOB_RATE,
				CONVERT(VARCHAR(40),NEWID()) AS ROW_ID
				WHERE 1=2

						
				SELECT  CAST('LATER' AS VARCHAR(22)) AS MEMO_ID,
				        '' ARTICLE_CODE ,'' ARTICLE_NO ,'' UOM_NAME,
				        '' PARA1_CODE ,'' PARA1_NAME,'' PARA2_CODE ,'' PARA2_NAME,0 AS AVG_QTY,
				        0 AS REQ_QTY,
				        0 AS ISSUED_QTY,
	                    0 AS PENDING_QTY,
	                    CONVERT(NUMERIC(10,2),0) AS AMOUNT,
	                    CONVERT(VARCHAR(40),NEWID()) AS ROW_ID
			    WHERE 1=2


			  
			    GOTO END_PROC
	


  
  LBLDETAILS:
  
		
   
           PRINT '1 ARRANGE SET PRODUCT CODE'
           
           IF OBJECT_ID ('TEMPDB..#TMPSET','U') IS NOT NULL
              DROP TABLE #TMPSET
              
		   SELECT A.AC_CODE, A.PRODUCT_CODE,SUM(QUANTITY) AS QUANTITY,A.DEPT_ID,
                  A.BIN_ID,A.SP_ID
		   INTO #TMPSET
		   FROM TRANSFER_TO_TRADING_UPLOAD A (NOLOCK)
		   JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =A.PRODUCT_CODE
		   JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE  
		   WHERE SP_ID =@CSP_ID  
		   AND ART.ARTICLE_PRD_MODE =2
		   GROUP BY A.AC_CODE,A.PRODUCT_CODE,A.DEPT_ID,A.BIN_ID,A.SP_ID
		   
		   
		 
		    PRINT '2 ARRANGE SET WITH ALL COMPONENT BARCODE'
		    
		    IF OBJECT_ID ('TEMPDB..#TMPSETCOMPONENT','U') IS NOT NULL
              DROP TABLE #TMPSETCOMPONENT
              
		   SELECT A.AC_CODE, SUBSTRING(B.PRODUCT_CODE,1,LEN(A.PRODUCT_CODE)) AS SET_PRODUCT_CODE, 
		   B.PRODUCT_CODE,B.DEPT_ID ,B.BIN_ID ,
		   b.QUANTITY_IN_STOCK AS QUANTITY_IN_STOCK ,
		   SUM(A.QUANTITY)   AS REQUIRED_QTY 
		   INTO #TMPSETCOMPONENT
		   FROM #TMPSET A
		   JOIN JOBWORK_PMT B ON A.PRODUCT_CODE=SUBSTRING(B.PRODUCT_CODE,1,LEN(A.PRODUCT_CODE))
		   WHERE ISNULL(LEFT(REPLACE(B.PRODUCT_CODE ,A.PRODUCT_CODE,''),1),'')  IN('','-')
		   GROUP BY A.AC_CODE, SUBSTRING(B.PRODUCT_CODE,1,LEN(A.PRODUCT_CODE)) , 
		   B.PRODUCT_CODE,B.DEPT_ID ,B.BIN_ID, b.QUANTITY_IN_STOCK
		   
		
		   
		    PRINT '3 LIST OF ALL REQIRED ,INPUT & OUTPUT QTY '
		    
		     IF OBJECT_ID ('TEMPDB..#TMPFINAL','U') IS NOT NULL
              DROP TABLE #TMPFINAL
              
		   SELECT A.AC_CODE, A.SET_PRODUCT_CODE , A.PRODUCT_CODE,A.DEPT_ID ,A.BIN_ID ,
		   A.QUANTITY_IN_STOCK,A.REQUIRED_QTY ,
		   SUM(ISNULL(B.QUANTITY,0)) AS INPUT_QTY,
		   CAST(0 AS NUMERIC(10,3)) AS OUT_QTY,
		   CAST(0 AS NUMERIC(10,2)) AS PURCHASE_PRICE,
		   CAST(0 AS NUMERIC(14,2)) AS ARTICLE_PP,
		   CAST(0 AS NUMERIC(14,2)) AS ACTUAL_COST
		   INTO #TMPFINAL
		   FROM #TMPSETCOMPONENT A
		   LEFT JOIN 
		   (
		    SELECT A.PRODUCT_CODE,SUM(QUANTITY) AS QUANTITY,A.DEPT_ID,
                  A.BIN_ID,A.SP_ID
            FROM TRANSFER_TO_TRADING_UPLOAD A (NOLOCK)
            GROUP BY A.PRODUCT_CODE,A.DEPT_ID,A.BIN_ID,A.SP_ID
		   ) B ON A.PRODUCT_CODE =B.PRODUCT_CODE
		   AND A.DEPT_ID =B.DEPT_ID AND A.BIN_ID =B.BIN_ID AND B.SP_ID =@CSP_ID
		   GROUP BY A.AC_CODE,A.SET_PRODUCT_CODE , A.PRODUCT_CODE,A.DEPT_ID ,A.BIN_ID ,
		   A.QUANTITY_IN_STOCK,A.REQUIRED_QTY
		   
		   
		   --CHECK STOCK OF COMPONENT 
		   UPDATE  #TMPFINAL SET INPUT_QTY =CASE WHEN QUANTITY_IN_STOCK > REQUIRED_QTY THEN REQUIRED_QTY
		   ELSE QUANTITY_IN_STOCK END
		   WHERE SET_PRODUCT_CODE <>PRODUCT_CODE 
		   
		   PRINT '4 UPDATE SET WITH COMPONENT QTY '
		   
		   UPDATE A SET OUT_QTY =ISNULL(B.INPUT_QTY  ,0)
		   FROM #TMPFINAL A
		   LEFT JOIN
		   (
		    SELECT SET_PRODUCT_CODE,MIN(ISNULL(INPUT_QTY,0)) AS INPUT_QTY
		    FROM #TMPFINAL
		    GROUP BY SET_PRODUCT_CODE
		   ) B ON A.SET_PRODUCT_CODE =B.SET_PRODUCT_CODE 
		   
		   PRINT '5 ARRANGE ALL ERROR LIST WHICH SET & COMPONENT QTY MISMATCH '
		
		     IF OBJECT_ID ('TEMPDB..#TMPERROR','U') IS NOT NULL
              DROP TABLE #TMPERROR
		      
		   SELECT SET_PRODUCT_CODE, PRODUCT_CODE ,DEPT_ID,BIN_ID,REQUIRED_QTY,INPUT_QTY
		   INTO #TMPERROR
		   FROM #TMPFINAL
		   WHERE  CASE WHEN ISNULL(INPUT_QTY,0)>REQUIRED_QTY THEN  'ACCESS QTY'
		        WHEN ISNULL(INPUT_QTY,0)<REQUIRED_QTY THEN  'LESS QTY'
		        ELSE '' END<>''
		   
		   
		     
		   INSERT INTO #TMPFINAL(AC_CODE,SET_PRODUCT_CODE ,PRODUCT_CODE,DEPT_ID ,BIN_ID ,QUANTITY_IN_STOCK,REQUIRED_QTY ,INPUT_QTY,OUT_QTY)
		   SELECT A.AC_CODE, A.PRODUCT_CODE  SET_PRODUCT_CODE ,A.PRODUCT_CODE,DEPT_ID ,BIN_ID ,0 AS QUANTITY_IN_STOCK,
		   SUM(A.QUANTITY) AS REQUIRED_QTY ,SUM(A.QUANTITY) AS INPUT_QTY,SUM(A.QUANTITY) AS  OUT_QTY
		    FROM TRANSFER_TO_TRADING_UPLOAD A (NOLOCK)
		   JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =A.PRODUCT_CODE
		   JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE  
		   WHERE SP_ID =@CSP_ID  
		   AND ART.ARTICLE_PRD_MODE =1
		   GROUP BY A.AC_CODE,A.PRODUCT_CODE,DEPT_ID ,BIN_ID
		   
		     
		   --  SELECT * INTO TMPFINAL FROM #TMPFINAL
		   --  RETURN
		   ------validate max job work again enforce job card
		   
		   IF OBJECT_ID ('TEMPDB..#MAXJOB','U') IS NOT NULL
		      DROP TABLE #MAXJOB
		   
		    SELECT MST.MEMO_ID , A.PRODUCT_CODE , C.ARTICLE_CODE,MX.JOB_CODE 
		    INTO #MAXJOB
		    FROM #TMPFINAL A
		    JOIN ORD_PLAN_BARCODE_DET B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE 
		    JOIN ORD_PLAN_DET C  (NOLOCK) ON B.REFROW_ID=C.ROW_ID 
		    JOIN ORD_PLAN_MST MST (NOLOCK) ON C.MEMO_ID =MST.MEMO_ID  
		    LEFT JOIN
		    (
		     SELECT A.MEMO_ID,A.ARTICLE_CODE ,JOB_CODE  
		     FROM ORD_PLAN_JOB A (NOLOCK)
		     WHERE A.JOB_ORDER=
		     (SELECT MAX(JOB_ORDER) FROM ORD_PLAN_JOB B (NOLOCK) WHERE A.MEMO_ID=B.MEMO_ID AND A.ARTICLE_CODE=B.ARTICLE_CODE )
		    
		    ) MX ON MST.MEMO_ID=MX.MEMO_ID AND C.ARTICLE_CODE =MX.ARTICLE_CODE 
		    WHERE  MST .CANCELLED =0 AND ISNULL(ENFORCE_JOB_ORDER,0)=1
		    
		  IF EXISTS(SELECT TOP 1 'U' FROM #MAXJOB)
		  BEGIN
		      
		      
		      UPDATE A SET AC_CODE= AM.AC_CODE  
		      FROM #TMPFINAL A
		      JOIN #MAXJOB MJ ON A.PRODUCT_CODE =MJ.PRODUCT_CODE
		      JOIN JOBWORK_ISSUE_DET ID (NOLOCK) ON ID.PRODUCT_CODE =MJ.PRODUCT_CODE AND ID.JOB_CODE =MJ.JOB_CODE 
		      JOIN JOBWORK_ISSUE_MST IM (NOLOCK) ON IM.ISSUE_ID =ID.ISSUE_ID
		      JOIN PRD_AGENCY_MST AM ON AM.AGENCY_CODE =IM.AGENCY_CODE 
		      WHERE IM.CANCELLED=0
		  
		  END
		  else
		  BEGIN
		      
		      UPDATE A SET AC_CODE=B.AC_CODE FROM #TMPFINAL A
		      JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
		  
		  END
		    
		    
		  
		   IF OBJECT_ID ('TEMPDB..#MAXJOBerror','U') IS NOT NULL
		      DROP TABLE #MAXJOBerror
		      
		    SELECT a.* into #MAXJOBerror FROM #MAXJOB A
		    LEFT JOIN JOBWORK_PMT B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE AND A.JOb_CODE =B.JOB_CODE
		    WHERE B.PRODUCT_CODE IS NULL
		    
		
		   --
	 
		   
		   PRINT '6 LIST OF DISPLAY ALL ERROR WITH SET & COMPONENT ITEM '
		
		   
		   SELECT A.PRODUCT_CODE ,A.DEPT_ID ,A.BIN_ID ,A.REQUIRED_QTY ,A.INPUT_QTY ,A.OUT_QTY ,
		   ART.ARTICLE_NO,  
		   P1.PARA1_CODE, P1.PARA1_NAME ,
		   P2.PARA2_CODE, P2.PARA2_NAME ,
		   CASE WHEN A.SET_PRODUCT_CODE =B.PRODUCT_CODE THEN  'MISMATCH WITH SET ITEM'
		   ELSE 
		   CASE WHEN ISNULL(INPUT_QTY,0)>REQUIRED_QTY THEN  'ACCESS QTY'
		        WHEN ISNULL(INPUT_QTY,0)<REQUIRED_QTY THEN  'LESS QTY'
		        ELSE '' END END AS ERRMSG
		   FROM #TMPFINAL A
		   JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE  
		   JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =B.ARTICLE_CODE 
		   JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE =B.PARA1_CODE 
		   JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE =B.PARA2_CODE 
		   JOIN 
		   (SELECT DISTINCT SET_PRODUCT_CODE FROM #TMPERROR 
		   )ERR ON A.SET_PRODUCT_CODE=ERR.SET_PRODUCT_CODE 
		   union all
		    SELECT A.PRODUCT_CODE ,'' as DEPT_ID ,'' as BIN_ID ,0 as REQUIRED_QTY ,0 as INPUT_QTY ,0 as OUT_QTY ,
		   ART.ARTICLE_NO,  
		   P1.PARA1_CODE, P1.PARA1_NAME ,
		   P2.PARA2_CODE, P2.PARA2_NAME ,
		   'JOB WORK HAS BEEN PENDING CAN NOT TRANSFER ' AS ERRMSG
		   FROM #MAXJOBerror A
		   JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE  
		   JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =B.ARTICLE_CODE 
		   JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE =B.PARA1_CODE 
		   JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE =B.PARA2_CODE 
		   
		   
		   
		
		   PRINT' JOB WORK DETAILS'
			
			IF OBJECT_ID('TEMPDB..#TMPJOBWORK','U') IS NOT NULL
			   DROP TABLE #TMPJOBWORK
					   
			SELECT D.ISSUE_ID, D.ISSUE_NO ,D.ISSUE_DT ,C.JOB_CODE ,JOBS.JOB_NAME ,
				   A.PRODUCT_CODE,A.JOB_RATE ,TMP.OUT_QTY AS QUANTITY ,
				   ART.ARTICLE_CODE,ART.ARTICLE_NO, ART.ARTICLE_PRD_MODE, 
				   P1.PARA1_CODE, P1.PARA1_NAME ,
				   P2.PARA2_CODE, P2.PARA2_NAME ,
				   P3.PARA3_CODE, P3.PARA3_NAME,
				   P4.PARA4_CODE, P4.PARA4_NAME ,
				   P5.PARA5_CODE, P5.PARA5_NAME ,
				   P6.PARA6_CODE, P6.PARA6_NAME ,
				   UOM.UOM_CODE ,UOM_NAME 
		    INTO #TMPJOBWORK
			FROM #TMPFINAL TMP
			JOIN JOBWORK_RECEIPT_DET A (NOLOCK) ON TMP.PRODUCT_CODE =A.PRODUCT_CODE 
			JOIN JOBWORK_RECEIPT_MST  B (NOLOCK) ON A.RECEIPT_ID =B.RECEIPT_ID 
			JOIN JOBWORK_ISSUE_DET C (NOLOCK) ON A.REF_ROW_ID =C.ROW_ID 
			JOIN JOBWORK_ISSUE_MST D (NOLOCK) ON C.ISSUE_ID =D.ISSUE_ID 
			JOIN JOBS (NOLOCK) ON JOBS.JOB_CODE =C.JOB_CODE 
			JOIN SKU  (NOLOCK) ON A.PRODUCT_CODE =SKU.PRODUCT_CODE  
			JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =SKU.ARTICLE_CODE 
			JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE =SKU.PARA1_CODE 
			JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE =SKU.PARA2_CODE 
			JOIN PARA3 P3 (NOLOCK) ON P3.PARA3_CODE =SKU.PARA3_CODE 
			JOIN PARA4 P4 (NOLOCK) ON P4.PARA4_CODE =SKU.PARA4_CODE 
			JOIN PARA5 P5 (NOLOCK) ON P5.PARA5_CODE =SKU.PARA5_CODE 
			JOIN PARA6 P6 (NOLOCK) ON P6.PARA6_CODE =SKU.PARA6_CODE 
			JOIN UOM (NOLOCK) ON UOM.UOM_CODE =ART .UOM_CODE 
			WHERE B.CANCELLED =0 AND D.CANCELLED =0
			AND TMP.OUT_QTY<>0
			
			

			  PRINT' PENDING RAW MATERIAL DETAILS WITH PRODUCT CODE WISE'

			  
			        IF OBJECT_ID ('TEMPDB..#TEMPMATERIALREQ','U') IS NOT NULL
                  DROP TABLE #TEMPMATERIALREQ

				 SELECT MST.ISSUE_ID  ,SUM(B.QUANTITY) AS  TRANSFER_QTY
				 into #TEMPMATERIALREQ
				 FROM #TMPFINAL A
				 JOIN JOBWORK_ISSUE_DET B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE
				 JOIN JOBWORK_ISSUE_MST MST (NOLOCK) ON MST.ISSUE_ID =B.ISSUE_ID 
				 WHERE MST.CANCELLED =0
				 GROUP BY MST.ISSUE_ID 
 
				
				 IF OBJECT_ID ('TEMPDB..#TEMPISSUED','U') IS NOT NULL
                  DROP TABLE #TEMPISSUED
				
				SELECT A1.ARTICLE_CODE ,A1.PARA1_CODE ,A1.PARA2_CODE,A1.AVG_QUANTITY+ISNULL(A1.ADD_AVG_QUANTITY,0) AS  AVG_QUANTITY,
				SUM((case when isnull(a5.issue_type,0)=0 then 1  else -1 end )*
				 CASE WHEN ISNULL(UC.CONVERSION_VALUE,0) =0 THEN ISNULL(A6.QUANTITY,0)
	             ELSE (ISNULL(A6.QUANTITY,0))/ISNULL(UC.CONVERSION_VALUE,0) END) ISSUED_QTY,
				SUM((CASE WHEN ISNULL(A5.ISSUE_TYPE,0)=0 THEN 1  ELSE -1 END )*
				 CASE WHEN ISNULL(UC.CONVERSION_VALUE,0) =0 THEN ISNULL(A6.QUANTITY,0)
	             ELSE (ISNULL(A6.QUANTITY,0))/ISNULL(UC.CONVERSION_VALUE,0) END*A4.PURCHASE_PRICE)  AS RATE,
				ART.UOM_CODE ,A5.JOBWORK_ISSUE_ID ,TRANSFER_QTY  AS TRANSFER_QTY,
				CAST(0 AS NUMERIC(10,3)) AS TOTAL_FG_QTY
				INTO #TEMPISSUED
				FROM BOM_ISSUE_DET A4 (NOLOCK) 
				JOIN BOM_ISSUE_MST A5  (NOLOCK) ON A5.ISSUE_ID=A4.ISSUE_ID
				JOIN BOM_ISSUE_REF A6  (NOLOCK) ON A5.ISSUE_ID=A6.BOM_ISSUE_ID AND A4.ROW_ID=A6.BOM_DET_ROW_ID
				JOIN ORD_PLAN_BOM_DET A1  (NOLOCK) ON A1.ROW_ID=A6.ORD_PLAN_BOM_DET_ROW_ID
				JOIN
				(
				 SELECT   ISSUE_ID,TRANSFER_QTY 
				 FROM #TEMPMATERIALREQ
				 group by issue_id,TRANSFER_QTY 
				) TMP ON TMP.issue_id =A5.JOBWORK_ISSUE_ID
				JOIN SKU ON SKU.PRODUCT_CODE =A4.PRODUCT_CODE 
				JOIN article art  (NOLOCK) ON art.article_code   = a1.ARTICLE_CODE 
				LEFT OUTER JOIN UOM_CONVERSION UC (NOLOCK) ON UC.UOM_CODE=art.UOM_CODE
                LEFT OUTER JOIN BOM_UOM BU (NOLOCK) ON BU.CONVERSION_UOM_CODE=UC.CONVERSION_UOM_CODE  
				WHERE A5.CANCELLED =0
				GROUP BY A1.ARTICLE_CODE ,A1.PARA1_CODE ,A1.PARA2_CODE,A1.AVG_QUANTITY+ISNULL(A1.ADD_AVG_QUANTITY,0),
				ART.uom_code ,A5.JOBWORK_ISSUE_ID ,A4.job_code ,TRANSFER_QTY
				
			
				
				UPDATE A SET RATE =RATE /QTY,TOTAL_FG_QTY=QTY  
				FROM  #TEMPISSUED A
				JOIN 
				(
				SELECT ISSUE_ID ,SUM(QUANTITY) AS QTY 
				FROM JOBWORK_ISSUE_DET  (NOLOCK)
				GROUP BY ISSUE_ID
				)B ON A.JOBWORK_ISSUE_ID =B.ISSUE_ID 


	
				
				
				IF OBJECT_ID('TEMPDB..#TMPMATERIALDETAILS','U') IS NOT NULL
				   DROP TABLE #TMPMATERIALDETAILS
				
				SELECT ART.ARTICLE_CODE, ART.ARTICLE_NO,UOM.UOM_NAME ,
				       P1.PARA1_CODE ,P1.PARA1_NAME,P2.PARA2_CODE  ,P2.PARA2_NAME , 
			           A.AVG_QUANTITY AS AVG_QTY ,
			           SUM(CONVERT(NUMERIC(10,3),A.AVG_QUANTITY*A.TRANSFER_QTY))  AS BOM_REQ_QTY,
					   SUM(CONVERT(NUMERIC(10,3),A.AVG_QUANTITY*a.TOTAL_FG_QTY))  AS TOTAL_ISSUED_QTY,
			           CAST(0 AS NUMERIC(14,3)) AS REQ_QTY,
			           CAST(0 AS NUMERIC(14,3)) AS ISSUED_QTY,
			           CAST(0 AS NUMERIC(14,3)) AS PENDING_QTY,
			           CONVERT(NUMERIC(10,2),ISNULL(a.RATE,0)) AS RATE,
			           ISNULL(UC.Conversion_Value ,0) AS Conversion_Value,
					   SUM(A.TRANSFER_QTY) AS TRANSFER_QTY
			    INTO #TMPMATERIALDETAILS
				FROM #TEMPISSUED A
				JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =A.ARTICLE_CODE 
			    JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE =A.PARA1_CODE 
			    JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE =A.PARA2_CODE 
			    JOIN UOM (NOLOCK) ON UOM.UOM_CODE =ART .UOM_CODE 
			    LEFT OUTER JOIN UOM_CONVERSION UC (NOLOCK) ON UC.UOM_CODE=art.UOM_CODE
                LEFT OUTER JOIN BOM_UOM BU (NOLOCK) ON BU.CONVERSION_UOM_CODE=UC.CONVERSION_UOM_CODE 
			    GROUP BY ART.ARTICLE_CODE,ART.ARTICLE_NO,UOM.UOM_NAME ,
				P1.PARA1_CODE ,P1.PARA1_NAME,P2.PARA2_CODE  ,P2.PARA2_NAME , 
				A.AVG_QUANTITY,CONVERT(NUMERIC(10,2),ISNULL(a.RATE,0)),ISNULL(UC.Conversion_Value ,0)
				
				
				
				UPDATE #TMPMATERIALDETAILS SET 
				REQ_QTY=CASE WHEN ISNULL(Conversion_Value,0)=0 THEN BOM_REQ_QTY ELSE BOM_REQ_QTY/ISNULL(Conversion_Value,0) END
				
				UPDATE #TMPMATERIALDETAILS SET 
				ISSUED_QTY=CASE WHEN REQ_QTY<TOTAL_ISSUED_QTY THEN  REQ_QTY ELSE TOTAL_ISSUED_QTY END
				
				UPDATE #TMPMATERIALDETAILS SET PENDING_QTY=REQ_QTY-ISSUED_QTY
		
                  DECLARE @CPICK_PP_IN_TRANSFER_TO_TRADING  VARCHAR(10)
                  SELECT TOP 1 @CPICK_PP_IN_TRANSFER_TO_TRADING=value  FROM CONFIG WHERE config_option ='PICK_PP_IN_TRANSFER_TO_TRADING'
                  
				      UPDATE A SET PURCHASE_PRICE =0,
					          ARTICLE_PP=CASE WHEN ISNULL(B.PURCHASE_PRICE,0)<> 0 THEN B.PURCHASE_PRICE ELSE ART.PURCHASE_PRICE END,
							  ACTUAL_COST =CONVERT(NUMERIC(10,2),isnull(c.FG_VALUE,0) +ISNULL(C.BOM_VALUE,0))
					   FROM #TMPFINAL A
					   JOIN SKU  (NOLOCK) ON A.PRODUCT_CODE =SKU.PRODUCT_CODE 
					   JOIN ARTICLE ART (NOLOCK ) ON SKU.ARTICLE_CODE =ART.ARTICLE_CODE
					   JOIN JOBWORK_PMT  C (NOLOCK)  ON A.PRODUCT_CODE =C.PRODUCT_CODE 
					   LEFT JOIN ART_DET B (NOLOCK) ON SKU.ARTICLE_CODE =B.ARTICLE_CODE AND SKU.PARA2_CODE =B.PARA2_CODE 

                
                  IF ISNULL(@CPICK_PP_IN_TRANSFER_TO_TRADING,'')='1'
                  BEGIN
                      
                      UPDATE A SET PURCHASE_PRICE =a.ARTICLE_PP  
                      FROM #TMPFINAL A
                      --JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE =B.product_code 
                  
                  END
			      ELSE
			      BEGIN
			        
					 UPDATE A SET PURCHASE_PRICE =a.ACTUAL_COST  
                     FROM #TMPFINAL A
				

					   IF OBJECT_ID('TEMPDB..#TMPFGMATERIAL','U') IS NOT NULL
				          DROP TABLE #TMPFGMATERIAL

						 SELECT A.PRODUCT_CODE, BOM.ROW_ID ,
						  D.ARTICLE_CODE ,ART.ARTICLE_NO ,UOM.UOM_NAME,
						  P1.PARA1_CODE ,P1.PARA1_NAME ,
						  P2.PARA2_CODE ,P2.PARA2_NAME,
						  ISNULL(d.AVG_QUANTITY,0)+ ISNULL(D.ADD_AVG_QUANTITY,0) AS AVG_QTY,
						  ISNULL(d.AVG_QUANTITY,0)+ ISNULL(D.ADD_AVG_QUANTITY,0)  AS BOM_REQ_QTY,
						  ISNULL(d.AVG_QUANTITY,0)+ ISNULL(D.ADD_AVG_QUANTITY,0)  AS TOTAL_ISSUE_ID_QTY,
						  ISNULL(d.AVG_QUANTITY,0)+ ISNULL(D.ADD_AVG_QUANTITY,0) AS REQ_QTY,
						  ISNULL(d.AVG_QUANTITY,0)+ ISNULL(D.ADD_AVG_QUANTITY,0)  AS ISSUED_QTY,
						  0 AS PENDING_QTY,
						  D.PURCHASE_PRICE AS RATE,
						  0 AS CONVERSION_VALUE
						 INTO #TMPFGMATERIAL
						 FROM TRANSFER_TO_TRADING_UPLOAD A (NOLOCK)
						 JOIN JOBWORK_RECEIPT_DET B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE 
						 JOIN JOBWORK_RECEIPT_MST  C (NOLOCK) ON B.RECEIPT_ID =C.RECEIPT_ID 
						 JOIN JOBWORK_RECEIVE_BOM_DET D (NOLOCK) ON C.RECEIPT_ID =D.RECEIPT_ID AND B.ref_row_id =D.REF_ROW_ID 
						 JOIN JOBWORK_ISSUE_DET ID ON ID.ROW_ID =D.REF_ROW_ID 
						 JOIN JOBWORK_ISSUE_MST IM ON IM.ISSUE_ID =ID.ISSUE_ID 
						 JOIN ORD_PLAN_BARCODE_DET OB ON OB.PRODUCT_CODE =ID.PRODUCT_CODE 
						 JOIN ORD_PLAN_DET OD ON OD.ROW_ID =OB.REFROW_ID 
						 JOIN ORD_PLAN_MST OM ON  OM.MEMO_ID =OD.MEMO_ID 
						 JOIN ORD_PLAN_BOM_DET BOM ON BOM.REF_ROW_ID=OD.ROW_ID 
						 JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =D.ARTICLE_CODE
						 JOIN UOM (NOLOCK) ON UOM.UOM_CODE =ART.UOM_CODE 
						 JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE =D.PARA1_CODE 
						 JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE =D.PARA2_CODE 
						 WHERE SP_ID=@CSP_ID
						 AND C.CANCELLED =0 AND IM.CANCELLED =0 AND OM.CANCELLED =0


						 --UPDATE A SET PURCHASE_PRICE=A.PURCHASE_PRICE +(RATE*AVG_QTY)
						 --FROM #TMPFINAL A
						 --JOIN #TMPFGMATERIAL B ON A.PRODUCT_CODE =B.PRODUCT_CODE 

						 INSERT INTO #TMPMATERIALDETAILS(	ARTICLE_CODE,	ARTICLE_NO,	UOM_NAME,	
	                      PARA1_CODE,	PARA1_NAME,	PARA2_CODE,	PARA2_NAME,	AVG_QTY,	
		                  BOM_REQ_QTY,	TOTAL_ISSUED_QTY,	REQ_QTY,	ISSUED_QTY,	PENDING_QTY,	
		                  RATE,	Conversion_Value)

					  SELECT	ARTICLE_CODE,	ARTICLE_NO,	UOM_NAME,	
					   PARA1_CODE,	PARA1_NAME,	PARA2_CODE,	PARA2_NAME,	AVG_QTY,	
					   BOM_REQ_QTY,	TOTAL_ISSUE_ID_QTY ,	REQ_QTY,	ISSUED_QTY,	PENDING_QTY,	
					  CASE WHEN ISNULL(AVG_QTY,0)=0 THEN 0 ELSE  RATE/AVG_QTY END,	Conversion_Value

                     FROM #TMPFGMATERIAL
					  GROUP BY  	ARTICLE_CODE,	ARTICLE_NO,	UOM_NAME,	
					 PARA1_CODE,	PARA1_NAME,	PARA2_CODE,	PARA2_NAME,	AVG_QTY,	
					 BOM_REQ_QTY,	TOTAL_ISSUE_ID_QTY ,	REQ_QTY,	ISSUED_QTY,	PENDING_QTY,	
					 CASE WHEN ISNULL(AVG_QTY,0)=0 THEN 0 ELSE  RATE/AVG_QTY END,	Conversion_Value
	                

					IF EXISTS (SELECT TOP 1 'U' FROM #TMPFGMATERIAL)
					BEGIN
					    UPDATE A SET PURCHASE_PRICE=ISNULL(B.BOM_VALUE,0) +ISNULL(B.FG_VALUE,0)
						FROM #TMPFINAL A
						JOIN JOBWORK_PMT B ON A.PRODUCT_CODE =B.PRODUCT_CODE 

					END

				END

					
			
				----
				--DISPLAY LIST----------
			   
			   SELECT CAST('LATER' AS VARCHAR(22)) AS  MEMO_ID, 
			   ART.ARTICLE_CODE,ART.ARTICLE_NO,  
			   P1.PARA1_CODE, P1.PARA1_NAME ,
			   P2.PARA2_CODE, P2.PARA2_NAME ,
			   P3.PARA3_CODE, P3.PARA3_NAME,
			   P4.PARA4_CODE, P4.PARA4_NAME ,
			   P5.PARA5_CODE, P5.PARA5_NAME ,
			   P6.PARA6_CODE, P6.PARA6_NAME ,
			   A.PRODUCT_CODE, DEPT_ID, BIN_ID,
			   ROW_NUMBER() OVER (ORDER BY A.PRODUCT_CODE) AS  SR_NO, 
			   CAST('LATER'+SET_PRODUCT_CODE  AS VARCHAR(40)) ROW_ID, 
			   GETDATE() AS LAST_UPDATE,A.OUT_QTY  AS  QUANTITY, 
			   isnull(A.PURCHASE_PRICE,0) as PURCHASE_PRICE,
			   B.FIX_MRP,
			   B.MRP,
			   CASE WHEN ISNULL(WS.BO_WS_PRICE,0)>0 THEN ISNULL(WS.BO_WS_PRICE,0)
			   ELSE ISNULL(B.WS_PRICE,0) END AS WS_PRICE,
			   0 AS AMOUNT ,
			   UOM.UOM_CODE ,UOM_NAME ,
			   A.AC_CODE,LM.AC_NAME ,
			   CAST(0 AS NUMERIC(10,2)) AS OH_COST_PERCENTAGE,
			   CAST(0 AS NUMERIC(10,2)) AS OH_Cost_Amount,
			   CAST('' AS VARCHAR(50)) AS JOBCARD_ID,
			   a.ARTICLE_PP,
			   a.ACTUAL_COST
			   FROM #TMPFINAL A
			   JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE  
			   JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =B.ARTICLE_CODE 
			   JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE =B.PARA1_CODE 
			   JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE =B.PARA2_CODE 
			   JOIN PARA3 P3 (NOLOCK) ON P3.PARA3_CODE =B.PARA3_CODE 
			   JOIN PARA4 P4 (NOLOCK) ON P4.PARA4_CODE =B.PARA4_CODE 
			   JOIN PARA5 P5 (NOLOCK) ON P5.PARA5_CODE =B.PARA5_CODE 
			   JOIN PARA6 P6 (NOLOCK) ON P6.PARA6_CODE =B.PARA6_CODE 
			   JOIN UOM (NOLOCK) ON UOM.UOM_CODE =ART .UOM_CODE 
			   JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE =A.AC_CODE
			   LEFT JOIN
			   (
			    SELECT C.PRODUCT_CODE ,B.WS_PRICE AS BO_WS_PRICE 
			    FROM BUYER_ORDER_MST A
			    JOIN BUYER_ORDER_DET B ON A.ORDER_ID  =B.ORDER_ID
			    JOIN BUYER_ORDER_BARCODE_DET C ON A.ORDER_ID =C.ORDER_ID AND B.ROW_ID =C.REF_ROW_ID 
			    WHERE A.CANCELLED =0
			    GROUP BY C.PRODUCT_CODE ,B.WS_PRICE 
			   ) WS ON WS.PRODUCT_CODE =A.PRODUCT_CODE 
			   WHERE A.PRODUCT_CODE =A.SET_PRODUCT_CODE 
			   AND A.OUT_QTY<>0

			   

			   SELECT CAST('LATER' AS VARCHAR(22)) AS MEMO_ID, 
			   CAST('LATER'+SET_PRODUCT_CODE  AS VARCHAR(40)) AS REF_ROW_ID,
			   A. PRODUCT_CODE,A.OUT_QTY QUANTITY,CAST('LATER' AS VARCHAR(40)) ROW_ID, 
			   GETDATE() AS LAST_UPDATE, DEPT_ID, BIN_ID,
			   ART.ARTICLE_CODE,ART.ARTICLE_NO,  
			   P1.PARA1_CODE, P1.PARA1_NAME ,
			   P2.PARA2_CODE, P2.PARA2_NAME ,
			   P3.PARA3_CODE, P3.PARA3_NAME,
			   P4.PARA4_CODE, P4.PARA4_NAME ,
			   P5.PARA5_CODE, P5.PARA5_NAME ,
			   P6.PARA6_CODE, P6.PARA6_NAME ,
			   UOM.UOM_CODE ,UOM_NAME,
			   A.AC_CODE,LM.AC_NAME ,
			   CAST(0 AS NUMERIC(10,2)) AS OH_COST_PERCENTAGE,
			   CAST(0 AS NUMERIC(10,2)) AS OH_Cost_Amount,
			   CAST('' AS VARCHAR(50)) AS JOBCARD_ID
			   FROM #TMPFINAL A
			   JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE  
			   JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =B.ARTICLE_CODE 
			   JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE =B.PARA1_CODE 
			   JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE =B.PARA2_CODE 
			   JOIN PARA3 P3 (NOLOCK) ON P3.PARA3_CODE =B.PARA3_CODE 
			   JOIN PARA4 P4 (NOLOCK) ON P4.PARA4_CODE =B.PARA4_CODE 
			   JOIN PARA5 P5 (NOLOCK) ON P5.PARA5_CODE =B.PARA5_CODE 
			   JOIN PARA6 P6 (NOLOCK) ON P6.PARA6_CODE =B.PARA6_CODE 
			   JOIN UOM (NOLOCK) ON UOM.UOM_CODE =ART .UOM_CODE 
			   JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE =A.AC_CODE
			   WHERE A.PRODUCT_CODE <>A.SET_PRODUCT_CODE 
			   AND A.OUT_QTY<>0


			   
				SELECT CAST('LATER' AS VARCHAR(22)) AS MEMO_ID,
				JOB_CODE , JOB_NAME,JOB_RATE ,
				SUM(QUANTITY) AS QUANTITY,
				CONVERT(NUMERIC(10,2),SUM(JOB_RATE*QUANTITY)) AS NET_JOB_RATE,
				CONVERT(VARCHAR(40),NEWID()) AS ROW_ID
				FROM #TMPJOBWORK
				GROUP BY JOB_CODE,JOB_NAME,JOB_RATE
				ORDER BY JOB_NAME,JOB_RATE
				


				
				SELECT  CAST('LATER' AS VARCHAR(22)) AS MEMO_ID,
				        ARTICLE_CODE , ARTICLE_NO ,UOM_NAME,
				        PARA1_CODE , PARA1_NAME,PARA2_CODE , PARA2_NAME,AVG_QTY,
				        SUM(REQ_QTY) AS REQ_QTY,
				        SUM(ISSUED_QTY) AS ISSUED_QTY,
	                    SUM(PENDING_QTY) AS PENDING_QTY,
	                    CONVERT(NUMERIC(10,2),SUM(RATE*TRANSFER_QTY )) AS AMOUNT,
	                    CONVERT(VARCHAR(40),NEWID()) AS ROW_ID
				FROM #TMPMATERIALDETAILS
				GROUP BY ARTICLE_CODE,ARTICLE_NO ,UOM_NAME,
				PARA1_CODE,PARA1_NAME,PARA2_CODE,PARA2_NAME,AVG_QTY
			  
			    
	       DELETE FROM TRANSFER_TO_TRADING_UPLOAD WHERE SP_ID =@CSP_ID 

          GOTO END_PROC




 
  
  END_PROC:


END



