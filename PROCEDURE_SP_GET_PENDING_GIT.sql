CREATE PROCEDURE SP_GET_PENDING_GIT    
@CUSERCODE   VARCHAR(50) ='0000000',  
@NAGEING INT =0,  
@NSUMMARY INT=0,
@BLOCWISESUMMARY BIT=0,
@cLocId char(4)=''
AS    
BEGIN    
--(dinkar) Replace  left(memoid,2) to Location_code 

  DECLARE @CCUTOFFDATE VARCHAR(100),@CHOLOCID VARCHAR(10),@CLOCationID VARCHAR(10)    
      
  SELECT TOP 1 @CCUTOFFDATE=VALUE FROM CONFIG WHERE CONFIG_OPTION='GIT_CUT_OFF_DATE'    
  
  SELECT TOP 1 @CHOLOCID=VALUE FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'   
  
  IF @cLocId=''
		SELECT @CLOCATIONID		= DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
  ELSE
		SET @CLOCATIONId=@cLocId
      
  SET @CCUTOFFDATE=ISNULL(@CCUTOFFDATE,'')    
   
       
       
  IF @CLOCATIONID=@CHOLOCID  
  BEGIN  
     
	   SELECT 'WSL' AS XN_TYPE,A.INV_ID AS MEMO_ID INTO #TMPCHGIT FROM INM01106 A (NOLOCK)   
	   JOIN PARCEL_DET PB WITH (NOLOCK) ON PB.REF_MEMO_ID=A.INV_ID
	   JOIN PARCEL_MST PM WITH (NOLOCK) ON PM.PARCEL_MEMO_ID=PB.PARCEL_MEMO_ID
	   JOIN LOCATION L ON L.DEPT_ID=A.location_Code 
	   LEFT OUTER JOIN PIM01106 B (NOLOCK) ON A.INV_ID=B.INV_ID    
	   WHERE A.INV_DT>=(CASE WHEN @CCUTOFFDATE<>'' THEN @CCUTOFFDATE ELSE A.INV_DT END)     
	   AND (ISNULL(B.RECEIPT_DT,'')='')    
	   AND A.CANCELLED=0  AND A.INV_MODE=2 AND ISNULL(L.SIS_LOC,0)=0  AND L.INACTIVE =0
	   AND A.INV_DT>='2014-04-01'
	   AND A.APPROVED=(CASE WHEN L.STN_APPROVAL = 1 THEN 2 ELSE A.APPROVED END) 
		AND PM.XN_TYPE='WSL'
	   UNION    
	   SELECT 'PRT' AS XN_TYPE,A.RM_ID AS MEMO_ID FROM RMM01106 A (NOLOCK)  
	   JOIN PARCEL_DET PB WITH (NOLOCK) ON PB.REF_MEMO_ID=A.rm_ID
	   JOIN PARCEL_MST PM WITH (NOLOCK) ON PM.PARCEL_MEMO_ID=PB.PARCEL_MEMO_ID
	   JOIN LOCATION L (NOLOCK) ON A.location_Code =L.DEPT_ID      
	   LEFT OUTER JOIN CNM01106 B (NOLOCK) ON A.RM_ID=B.RM_ID    
	   WHERE  A.RM_DT>=(CASE WHEN @CCUTOFFDATE<>'' THEN @CCUTOFFDATE ELSE A.RM_DT END)    
	   AND (ISNULL(B.RECEIPT_DT,'')='' )    
	   AND A.CANCELLED=0  AND A.MODE =2 AND ISNULL(L.SIS_LOC,0)=0  AND L.INACTIVE =0
	   AND A.RM_DT>='2014-04-01'
	   AND A.APPROVED=(CASE WHEN L.STN_APPROVAL = 1 THEN 2 ELSE A.APPROVED END) 
	   AND PM.XN_TYPE='PRT'
	       
	   CREATE INDEX IND_TMPCHGIT ON #TMPCHGIT (XN_TYPE,MEMO_ID)    
	        
	   SELECT  C.DEPT_ID AS [TARGET_LA],   
		 C1.DEPT_ID AS [SOURCE_LA],        
		 A.INV_NO AS MEMO_NO,    
		 A.NET_AMOUNT AS NET_AMOUNT,  
		 CAST(IND.QTY AS NUMERIC(18,2)) AS TOTAL_QTY      
		  ,DATEDIFF(DD,A.INV_DT,GETDATE ()) AS AGEING     
		   INTO #TMPGIT_HO    
		   FROM #TMPCHGIT B    
	      
	   JOIN     
	   (    
		SELECT INV_ID ,SUM(QUANTITY) AS [QTY]     
		FROM IND01106  A JOIN #TMPCHGIT B ON A.INV_ID=B.MEMO_ID    
		WHERE XN_TYPE='WSL'  GROUP BY INV_ID    
	   )IND ON IND.INV_ID=B.MEMO_ID    
	   JOIN INM01106 A ON A.INV_ID=B.MEMO_ID    
	   JOIN LOCATION C ON C.DEPT_ID=A.PARTY_DEPT_ID    
	   JOIN LOCATION C1 ON C1.DEPT_ID=A.location_Code    
	   WHERE XN_TYPE='WSL'  AND   (@NAGEING=0 OR DATEDIFF(DD,A.INV_DT,GETDATE())>=@NAGEING)  
	   UNION    
	   SELECT     C.DEPT_ID AS [TARGET_DEPT_ID],  
		 C1.DEPT_ID AS [SOURCE_DEPT_ID],      
		 A.RM_NO AS SOURCE_CHALLAN_NO,    
		 A.TOTAL_AMOUNT AS CAL_GIT_VALUE,  
		 CAST(RMD.QTY AS NUMERIC(18,2)) AS CAL_GIT_QTY      
		   ,DATEDIFF(DD,A.RM_DT,GETDATE ()) AS DUEDAYS      
		   FROM #TMPCHGIT B      
	   JOIN     
	   (    
		SELECT RM_ID ,SUM(QUANTITY) AS [QTY]     
		FROM RMD01106  A JOIN #TMPCHGIT B ON A.RM_ID=B.MEMO_ID    
		WHERE XN_TYPE='PRT'  GROUP BY RM_ID    
	   )RMD ON RMD.RM_ID=B.MEMO_ID    
	   JOIN RMM01106 A ON A.RM_ID=B.MEMO_ID    
	   JOIN LOCATION C ON C.DEPT_ID=A.PARTY_DEPT_ID    
	   JOIN LOCATION C1 ON C1.DEPT_ID=A.location_Code    
	   WHERE XN_TYPE='PRT'  AND   (@NAGEING=0 OR DATEDIFF(DD,A.RM_DT,GETDATE ())>=@NAGEING)  
	     
	   IF @NSUMMARY=1  
	   BEGIN  
            SELECT 'GIT' AS TYPE,COUNT(*) AS TOTAL_MEMOES,  
			ISNULL(SUM(ISNULL(NET_AMOUNT,0)),0) AS AMOUNT,  
			SUM(ISNULL(TOTAL_QTY,0)) AS QUANTITY   
			FROM #TMPGIT_HO  
	   END  
	   ELSE
	   IF @BLOCWISESUMMARY=1  
	   BEGIN  
            SELECT TARGET_LA,'GIT' AS TYPE,COUNT(*) AS TOTAL_MEMOES,  
			ISNULL(SUM(ISNULL(NET_AMOUNT,0)),0) AS AMOUNT,  
			SUM(ISNULL(TOTAL_QTY,0)) AS QUANTITY   
			FROM #TMPGIT_HO  
			GROUP BY TARGET_LA
	   END 	   
	   ELSE  
	   BEGIN  
     	    SELECT  TOP 100 * FROM #TMPGIT_HO  
		    ORDER BY AGEING DESC --SOURCE_DEPT_ID,SOURCE_CHALLAN_DT    
	   END  
	    
     
  END  
       
END
