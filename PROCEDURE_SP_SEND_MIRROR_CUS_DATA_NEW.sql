CREATE PROCEDURE SP_SEND_MIRROR_CUS_DATA_NEW  --(LocId 3 digit change by Sanjay:30-10-2024)
(  
 @CUSER_CUSTOMER_CODE VARCHAR(100)='',  
 @CCUSTOMERCODE VARCHAR(20)='',  
 @BACKNOWLEDGE BIT=0,  
 @CERRMSG VARCHAR(1000) OUTPUT  
)  
----WITH ENCRYPTION  
AS  
BEGIN  

--select @CUSER_CUSTOMER_CODE as u,  
-- @CCUSTOMERCODE as c,  
-- @BACKNOWLEDGE b,  
-- @CERRMSG e 
-- into tmp1
 
 
     DECLARE @CTEMPDBNAME VARCHAR(100),@CSTEP VARCHAR(10),@CFILTERCONDITION VARCHAR(100),@CTABLENAME VARCHAR(100),  
             @CTEMPTABLE VARCHAR(100),@DTSQL NVARCHAR(MAX),@CTEMPDETAILTABLE VARCHAR(100),  
             @CTEMPAREATABLE VARCHAR(100),@CTEMPCITYTABLE VARCHAR(100),@CTEMPSTATETABLE VARCHAR(100),  
             @CTEMPREGIONMTABLE VARCHAR(100),@CLOCATION_ID VARCHAR(4),@CHOLOCATION_ID VARCHAR(4),  
             @CMEMOID VARCHAR(100),@TEMP_TABLENAME VARCHAR(500)  
       
     SET @CERRMSG= ''  
     BEGIN TRY  
     
  
  
  SET @CSTEP=0  
 SET @CTEMPDBNAME=''
   
 SET @CSTEP=10  
 SET @CFILTERCONDITION=''  
 
    
 --SET VALIDATION  
 IF ISNULL(@CUSER_CUSTOMER_CODE,'') = '' AND  ISNULL(@CCUSTOMERCODE,'') = ''  
 BEGIN  
  SET @CERRMSG ='USER CUSTOMER CODE AND CUSTOMER CODE PARAMATERS ARE NOT NULL ONE IS MAENDATORY'  
  GOTO END_PROC;  
 END   
 --SELECT CURRENT LOCATION   
 SELECT @CLOCATION_ID = VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'  
--SELECT HO LOCATION   
SELECT @CHOLOCATION_ID= VALUE FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'  
   
   
 IF @BACKNOWLEDGE=1  
  GOTO END_PROC  
      
    SET @CSTEP=11  
    --SELECT CUSTOMER_CODE BASED ON CUSTOME CODE AND USER CUSTOMER CODE AND SET VALUE INTO @CMEMOID VARIABLE  
   IF ISNULL(@CCUSTOMERCODE,'') <> '' AND ISNULL(@CUSER_CUSTOMER_CODE,'') = ''  
    BEGIN  
      IF EXISTS(SELECT * FROM DBO.CUSTDYM WITH(NOLOCK) WHERE CUSTOMER_CODE = @CCUSTOMERCODE)  
        SET @CMEMOID= @CCUSTOMERCODE  
      ELSE  
      BEGIN  
        SET @CERRMSG ='CUSTOMER NOT FOUND';  
        GOTO END_PROC;  
      END  
    END  
    ELSE IF ISNULL(@CUSER_CUSTOMER_CODE,'') <> '' AND ISNULL(@CCUSTOMERCODE,'') = ''  
    BEGIN  
      SELECT @CMEMOID = CUSTOMER_CODE FROM DBO.CUSTDYM WITH(NOLOCK) WHERE USER_CUSTOMER_CODE = @CUSER_CUSTOMER_CODE  
      IF ISNULL(@CMEMOID,'') =''  
      BEGIN  
        SET @CERRMSG ='CUSTOMER NOT FOUND';  
        GOTO END_PROC;  
      END  
    END  
    ELSE IF ISNULL(@CUSER_CUSTOMER_CODE,'') <> '' AND ISNULL(@CCUSTOMERCODE,'') <> ''  
    BEGIN  
     IF EXISTS(SELECT * FROM DBO.CUSTDYM WITH(NOLOCK)   
              WHERE USER_CUSTOMER_CODE  = @CUSER_CUSTOMER_CODE AND CUSTOMER_CODE = @CCUSTOMERCODE )  
       SET @CMEMOID= @CCUSTOMERCODE  
     ELSE  
     BEGIN  
      SET @CERRMSG ='CUSTOMER NOT FOUND';  
      GOTO END_PROC;  
     END  
    END  
          
    IF ISNULL(@CMEMOID,'') = ''  
    BEGIN  
     SET @CERRMSG ='CUSTOMER NOT FOUND';  
     GOTO END_PROC;  
    END  
    --SELECT @CMEMOID  
  
 SET @CSTEP=15  
 
  
    SET @CSTEP=12  
    --1 SEND THE CUSTDYM   TABLE  
	--SELECT DISTINCT @CMEMOID AS check_customer_code, A.*,'CUS_CUSTDYM_UPLOAD'  AS TARGET_TABLENAME 
	SELECT DISTINCT @CMEMOID AS check_customer_code,A.* ,AREA.AREA_NAME ,CITY.CITY,STATE.STATE,REGIONM.REGION_NAME,(CASE WHEN ISNULL(AREA.PINCODE,'')='' THEN A.PIN ELSE AREA.PINCODE END) AS PINCODE,P.PREFIX_NAME,
	(CASE WHEN ISNULL(A.ADDRESS9,'')='' THEN ISNULL(A.ADDRESS1,'')+' '+ISNULL(A.ADDRESS2,'') ELSE ISNULL(A.ADDRESS9,'') END) AS ALLADDRESS,
	A1.USER_CUSTOMER_CODE AS [REF_USER_CUSTOMER_CODE],
	A1.CUSTOMER_TITLE+' ' +ISNULL(A1.CUSTOMER_FNAME,'')+' '+ISNULL(A1.CUSTOMER_LNAME,'')+' '+
	(CASE WHEN ISNULL(A1.ADDRESS9,'')='' THEN ISNULL(A1.ADDRESS1,'')+' '+ISNULL(A1.ADDRESS2,'') ELSE ISNULL(A1.ADDRESS9,'') END) AS REF_ADDRESS,
	GST.GST_STATE_CODE + ' ' + GST.GST_STATE_NAME AS GST_STATE_NAME,
	BM.CARD_NAME AS DISCOUNTED_CARD_TYPE,CT.COUNTRY_CODE,CT.COUNTRY_NAME
	,CITY.CITY_CODE,state.state_code,regionM.region_code,area.area_name as area,'CUS_CUSTDYM_UPLOAD'  AS TARGET_TABLENAME 
	FROM CUSTDYM A 
	JOIN AREA ON AREA.AREA_CODE=A.AREA_CODE
	JOIN CITY ON CITY.CITY_CODE=AREA.CITY_CODE
	JOIN STATE ON STATE.STATE_CODE=CITY.STATE_CODE
	JOIN REGIONM ON REGIONM.REGION_CODE=STATE.REGION_CODE
	LEFT OUTER JOIN PREFIX P ON P.PREFIX_CODE = A.PREFIX_CODE
	LEFT JOIN CUSTDYM A1 ON A1.CUSTOMER_CODE=A.REF_CUSTOMER_CODE
	LEFT JOIN AREA AR1 ON AR1.AREA_CODE=A1.AREA_CODE
	LEFT JOIN CITY C1 ON C1.CITY_CODE=AR1.CITY_CODE
	LEFT JOIN STATE S1 ON S1.STATE_CODE=C1.STATE_CODE
	LEFT JOIN REGIONM R1 ON R1.REGION_CODE=S1.REGION_CODE
	LEFT OUTER JOIN PREFIX P1 ON P1.PREFIX_CODE = A1.PREFIX_CODE
	LEFT OUTER JOIN GST_STATE_MST GST ON GST.GST_STATE_CODE = A.CUS_GST_STATE_CODE
	LEFT OUTER JOIN BWD_MST BM ON BM.MEMO_ID=A.CARD_CODE
	LEFT OUTER JOIN COUNTRY CT ON CT.COUNTRY_CODE=R1.COUNTRY_CODE
	--FROM CUSTDYM A (NOLOCK) 
	WHERE A.CUSTOMER_CODE=@CMEMOID

    SET @CSTEP=15  
    --1 SEND THE AREA   TABLE  
 
	SELECT DISTINCT @CMEMOID AS check_customer_code,AREA.*,'CUS_AREA_UPLOAD'  AS TARGET_TABLENAME FROM CUSTDYM A (NOLOCK) 
	JOIN AREA  (NOLOCK) ON A.area_code =AREA.area_code 
	WHERE A.CUSTOMER_CODE=@CMEMOID
      
  
    SET @CSTEP=30  
    --1 SEND THE CITY   TABLE  
   
	SELECT DISTINCT @CMEMOID AS check_customer_code,CITY.*,'CUS_city_UPLOAD'  AS TARGET_TABLENAME FROM CUSTDYM A (NOLOCK) 
	JOIN AREA  (NOLOCK) ON A.area_code =AREA.area_code 
	JOIN CITY (NOLOCK) ON AREA.CITY_CODE =CITY.CITY_CODE
	WHERE A.CUSTOMER_CODE=@CMEMOID
      
  
   
    SET @CSTEP=50  
    --1 SEND THE CITY   TABLE  
  
   
	SELECT DISTINCT @CMEMOID AS check_customer_code, STATE.*,'CUS_state_UPLOAD'  AS TARGET_TABLENAME 
	FROM CUSTDYM A (NOLOCK) 
	JOIN AREA  (NOLOCK) ON A.area_code =AREA.area_code 
	JOIN CITY (NOLOCK) ON AREA.CITY_CODE =CITY.CITY_CODE
	JOIN STATE (NOLOCK) ON STATE.state_code =CITY.state_code 
	WHERE A.CUSTOMER_CODE=@CMEMOID
      
      
      
    SET @CSTEP=60  
    
    --1 SEND THE CITY   TABLE  
    SET @CTABLENAME ='CUS_REGIONM_UPLOAD'  
    SELECT DISTINCT @CMEMOID AS check_customer_code, REGIONM.*,'CUS_REGIONM_UPLOAD'  AS TARGET_TABLENAME 
	FROM CUSTDYM A (NOLOCK) 
	JOIN AREA  (NOLOCK) ON A.AREA_CODE =AREA.AREA_CODE 
	JOIN CITY (NOLOCK) ON AREA.CITY_CODE =CITY.CITY_CODE
	JOIN STATE (NOLOCK) ON STATE.STATE_CODE =CITY.STATE_CODE 
	JOIN REGIONM (NOLOCK) ON REGIONM.REGION_CODE =STATE.REGION_CODE
	WHERE A.CUSTOMER_CODE=@CMEMOID
      

	  SET @CSTEP=67
    --1 SEND THE CITY   TABLE  
 --   SET @CTABLENAME ='CUS_ATTRM_UPLOAD'  
 --   SELECT DISTINCT @CMEMOID AS check_customer_code, A.*,'CUS_ATTRM_UPLOAD'  AS TARGET_TABLENAME 
	--FROM ATTRM A (NOLOCK) 
	--JOIN CUST_ATTR B (NOLOCK) ON A.ATTRIBUTE_CODE =B.ATTRIBUTE_CODE 
	--WHERE B.CUSTOMER_CODE=@CMEMOID
      
	--  SET @CSTEP=69 
 --   --1 SEND THE CITY   TABLE  
 --   SET @CTABLENAME ='CUS_ATTR_KEY_UPLOAD'  
 --   SELECT DISTINCT @CMEMOID AS check_customer_code, A.*,'CUS_ATTR_KEY_UPLOAD'  AS TARGET_TABLENAME 
	--FROM Attr_key A (NOLOCK) 
	--JOIN CUST_ATTR  B (NOLOCK) ON B.attribute_code=a.attribute_code  AND A.key_code =B.key_code 
	--WHERE B.CUSTOMER_CODE=@CMEMOID
      

	--SET @CSTEP=71 
 --   --1 SEND THE CITY   TABLE  
 --   SET @CTABLENAME ='CUS_CUST_ATTR_UPLOAD'  
 --   SELECT DISTINCT @CMEMOID AS check_customer_code, CA.*,'CUS_CUST_ATTR_UPLOAD'  AS TARGET_TABLENAME 
	--FROM CUST_ATTR CA 
	--join attrM cm ON CA.ATTRIBUTE_CODE=CM.ATTRIBUTE_CODE
 --   JOIN Attr_key AK ON AK.ATTRIBUTE_CODE=CA.ATTRIBUTE_CODE AND CA.key_code =AK.key_code 
	--WHERE CA.CUSTOMER_CODE=@CMEMOID


	--ATTRIBUTER SEND ONLY IN CASE OF onDemand CUSTOMER FETCH FROM HO
	 
	 IF @CLOCATION_ID=@CHOLOCATION_ID
	 BEGIN
	     
			DECLARE @NCOUNT INT,@BLOOP INT,@CCMD NVARCHAR(MAX)
			SET @NCOUNT=25
			SET @BLOOP=1
			WHILE (@BLOOP <=@NCOUNT )
			BEGIN
	      
				    SET @CCMD=N'   
						SELECT  DISTINCT '''+@CMEMOID+''' as check_customer_code, ''Cus_cust_attr'+RTRIM(LTRIM(RTRIM(LTRIM(STR(@BLOOP)))))+'_MST_upload'' AS TARGET_TABLENAME,cust_attr'+RTRIM(LTRIM(STR(@BLOOP)))+'_MST.*   
						FROM cust_attr'+RTRIM(LTRIM(STR(@BLOOP)))+'_MST(NOLOCK)  
						JOIN customer_fix_attr A (NOLOCK) ON cust_attr'+RTRIM(LTRIM(STR(@BLOOP)))+'_MST.cust_attr'+RTRIM(LTRIM(STR(@BLOOP)))+'_key_code=A.cust_attr'+RTRIM(LTRIM(STR(@BLOOP)))+'_key_code  
						where a.customer_code='''+@CMEMOID+'''
						and A.cust_attr'+RTRIM(LTRIM(STR(@BLOOP)))+'_key_code  <>''0000000''
						'  
					 PRINT  @CCMD  
					 EXEC SP_EXECUTESQL @CCMD  
	       
				   SET @BLOOP=@BLOOP +1
			 END


			SELECT DISTINCT @CMEMOID AS check_customer_code,a.*,'CUS_customer_fix_attr_UPLOAD'  AS TARGET_TABLENAME FROM customer_fix_attr A (NOLOCK) 
          	WHERE A.CUSTOMER_CODE=@CMEMOID
      

	 END



    SET @CSTEP=80  
  
  END TRY  
BEGIN CATCH  
 SET @CERRMSG='P: SP_SEND_MIRROR_CUS_DATA_NEW, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()  
 GOTO END_PROC  
END CATCH    
   
END_PROC:  
 
 
END  
--- 'END OF PROCEDURE SP_SEND_MIRROR_CUS_DATA' new 
