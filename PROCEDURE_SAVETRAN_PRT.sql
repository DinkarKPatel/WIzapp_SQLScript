create PROCEDURE SAVETRAN_PRT --(LocId 3 digit change by Sanjay:06-11-2024)
	@NUPDATEMODE		NUMERIC(2,0),
	@NSPID				varchar(40),
	@CMEMONOPREFIX		VARCHAR(50)='',
	@CFINYEAR			VARCHAR(10)='',
	@CMACHINENAME		VARCHAR(100)='',
	@CWINDOWUSERNAME	VARCHAR(100)='',
	@CWIZAPPUSERCODE	VARCHAR(10)='0000000',
	@CMEMOID			VARCHAR(40)='',
	@NPRTMODE			INT=1,-- 1.SINGLE DEBIT NOTE,2.MULTIPLE DEBIT NOTE
	@CPRTCONFIGMODE		VARCHAR(4)='1', -- 1.PARTY & BILL NO. WISE 2.PARTY WISE,
	@NAPPROVEMODE		NUMERIC(1,0)=0,
	@CCOMPUTERIP		VARCHAR(20)='',
	@CPSNO				VARCHAR(50)='',
	@NBOXNO				NUMERIC(3,0)=0,
	@bCalledfromPackSlip BIT=0,
	@CPRODUCTCODE		VARCHAR(50)='',
	@EDIT_CLICKED	    BIT=0,
	@bcheckcreditlimit bit=0,
	@NLEDGER_BALANCE NUMERIC(14,2)=0,
	@DMEMODTPARA		DATETIME='',
	@NBOXUPDATEMODE		NUMERIC(1,0)=1,
	@BALLOWNEGSTOCK bit=0  
AS
BEGIN
    SET @EDIT_CLICKED=ISNULL(@EDIT_CLICKED,0)
	-- @NUPDATEMODE:	1- NEW PURCHASE RETURN ADDED, 
	--					2- NOT APPLICABLE, 
	--					3- CURRENT PURCHASE RETURN CANCELLED, 
	--					4- EXISTING PURCHASE RETURN EDITED
	--					10- DELETE AN EXISTING BOX
	--					11- DELETE AN EXISTING ITEM IN ALL BOXES
	-- 	---             15 - INSERT DATA INTO UPLOAD XNS AND DOC TABLES 

	
	DECLARE @COL VARCHAR(MAX)
	IF @EDIT_CLICKED=1
	BEGIN
	SET @COL='IF OBJECT_ID(''TEMPDB..##RMM_'+CAST(@@SPID AS VARCHAR)+'_'+@CMEMOID+''',''U'') IS NOT NULL'+CHAR(13)+' DROP TABLE [##RMM_'+CAST(@@SPID AS VARCHAR)+'_'+@CMEMOID+'];'+CHAR(13)+'SELECT RM_ID OLD_RM_ID,RM_ID NEW_RM_ID,'
	SELECT @COL=COALESCE(@COL,'')+FIELD_NAME+' OLD_'+FIELD_NAME+','+FIELD_NAME+' NEW_'+FIELD_NAME+',' FROM XN_AUDIT_TRIAL_MST (NOLOCK) WHERE TABLE_NAME='RMM01106' AND TRIG='UPDATE' ORDER BY ORDER_ID
	SET @COL=LEFT(@COL,LEN(@COL)-1)+CHAR(13)+'INTO [##RMM_'+CAST(@@SPID AS VARCHAR)+'_'+@CMEMOID+']'+CHAR(13)+'FROM RMM01106 (NOLOCK) WHERE RM_ID='''+@CMEMOID+''';'
	--PRINT @COL
	EXEC(@COL)
	SET @COL='IF OBJECT_ID(''TEMPDB..##RMD_'+CAST(@@SPID AS VARCHAR)+'_'+@CMEMOID+''',''U'') IS NOT NULL'+CHAR(13)+' DROP TABLE [##RMD_'+CAST(@@SPID AS VARCHAR)+'_'+@CMEMOID+'];'+CHAR(13)+'SELECT RM_ID OLD_RM_ID, RM_ID NEW_RM_ID,'
	SELECT @COL=COALESCE(@COL,'')+FIELD_NAME+' OLD_'+FIELD_NAME+','+FIELD_NAME+' NEW_'+FIELD_NAME+',' FROM XN_AUDIT_TRIAL_MST (NOLOCK) WHERE TABLE_NAME='RMD01106' AND TRIG='UPDATE' ORDER BY ORDER_ID
	SET @COL=LEFT(@COL,LEN(@COL)-1)+CHAR(13)+'INTO [##RMD_'+CAST(@@SPID AS VARCHAR)+'_'+@CMEMOID+']'+CHAR(13)+'FROM RMD01106 (NOLOCK) WHERE RM_ID='''+@CMEMOID+''';'
	--PRINT @COL
	EXEC(@COL)
	END
	--xnBoxDetails
	DECLARE @CTEMPDBNAME			VARCHAR(100),
			@CMASTERTABLENAME		VARCHAR(100),
			@CDETAILTABLENAME		VARCHAR(100),
			@CxnBoxDetails		    VARCHAR(100),

			@CTEMPMASTERTABLENAME	VARCHAR(100),
			@CTEMPDETAILTABLENAME	VARCHAR(100),
			@CTEMPXNBOXDETAILSNAME	VARCHAR(100),

			@CTEMPMASTERTABLE		VARCHAR(100),
			@CTEMPDETAILTABLE		VARCHAR(100),
			@CTEMPxnBoxDetails		VARCHAR(100),

			@CERRORMSG				VARCHAR(max),
			@LDONOTUPDATESTOCK		BIT,
			@NRFUPDATEMODE INT,
			@CKEYFIELD1				VARCHAR(50),
			@CKEYFIELDVAL1			VARCHAR(50),
			@CMEMONO				VARCHAR(20),
			@NMEMONOLEN				NUMERIC(20,0),
			@CMEMONOVAL				VARCHAR(50),
			@CMEMODEPTID			VARCHAR(4),
			@CLOCATIONID			VARCHAR(4),
			@CHODEPTID				VARCHAR(4),
			@CCMD					NVARCHAR(MAX),@bReUpdateAllRmd BIT,
			@CCMDOUTPUT				NVARCHAR(MAX),@lUpdateonly bit,@lInsertonlt bit,
			@NSAVETRANLOOP			BIT,@nBillChallanMode NUMERIC(1,0),
			@cStep					VARCHAR(5),@NENTRYMODE NUMERIC(1,0),
			@LENABLETEMPDATABASE	BIT,@NLOTNO INT,
			@BNEGSTOCKFOUND BIT,@CMEMOPREFIXPROC VARCHAR(25),@cJoinStr varchar(2000),@cInsSpId varchar(50),
			@CPSID VARCHAR(22),@nPurCdPct NUMERIC(10,2),
			@CNEXTACCODE CHAR(10),@CNEXTBILLNO VARCHAR(30),@CSTATUSMSG VARCHAR(1000),
			@CFIRSTDNNO VARCHAR(20),@CLASTDNNO VARCHAR(20),@NMULTIDNCNT INT,@CNEXTFORMID CHAR(7),@CCURLOCID VARCHAR(5),
			@CBATCHNOVAL VARCHAR(10),@CDNACCODE CHAR(10),@NOPENINGBAL NUMERIC(14,2),@DDNDATE DATETIME,
			@NDNSUPPLIERAMOUNT NUMERIC(10,2),@BDRACCOUNTSTATUSCHECKED BIT,@BCANCELLED BIT,@NTAXFLAG INT,
			@CCHECKACSTATUS BIT, @nDnType INT,@NERFLAG INT,@CMEMONOPREFIX_ES VARCHAR(50),@NMEMO_TYPE NUMERIC(1,0),
			@BGENERATEAUTOSERIES BIT,@CTARGETLOCID VARCHAR(4),@NTARGETLOCTYPE INT,@NSOURCELOCTYPE INT,@NMODE INT,
			@BTARGETPURLOC BIT,@BPURLOC BIT,@BENFORCEBILLINGRULES BIT,@DSTARTTIME DATETIME,@bBlankBillDetails BIT,
			@CFILTERMULTIDN VARCHAR(500),@NEXCISEDUTY NUMERIC(14,4),@ERP_CONFIG VARCHAR(10),@BDONOTSENDCHALLANWITHOUTDISPATCH BIT,
			@CWHERECLAUSE VARCHAR(1000),@CXNTYPEPARA VARCHAR(10),@bPendingForPostingError BIT ,@cErrProductcode VARCHAR(50) ,
			@cSHIPPING_FROM_AC_CODE varchar(20),@NSHIPPING_mode int,@CMULTIPLRM_ID varchar(1000),@cparty_dept_id varCHAR(4),
			@cDonotPickCdinDN VARCHAR(4),@CCANCELLEDMEMO VARCHAR(1000)
    
	SELECT @bPendingForPostingError=0,@bBlankBillDetails=0

    SET @DSTARTTIME=GETDATE()

	SELECT TOP 1 @cDonotPickCdinDN=VALUE from config (NOLOCK) WHERE config_option='DonotPickCdinDN'
	
	SET @cDonotPickCdinDN=ISNULL(@cDonotPickCdinDN,'')

	DECLARE @OUTPUT TABLE ( ERRMSG VARCHAR(2000), MEMO_ID VARCHAR(1000),STATUSMSG VARCHAR(max))
	DECLARE @STOCKCHECKC TABLE ( PRODUCT_CODE VARCHAR(50), DEPT_ID VARCHAR(4), QUANTITY NUMERIC(10,3),BIN_ID VARCHAR(10) )

	SELECT @cStep = 0,@NMULTIDNCNT=0	-- SETTTING UP ENVIRONMENT
	
	SET @CTEMPDBNAME = ''
	
	SET	@cStep = 2
	

	
	SET @CMASTERTABLENAME	= 'RMM01106'
	SET @CDETAILTABLENAME	= 'RMD01106'
	set @CxnBoxDetails      =  'xnBoxDetails'
		
	--SET @CTEMPMASTERTABLENAME	= 'TEMP_RMM01106_'+LTRIM(RTRIM(@NSPID))
	--SET @CTEMPDETAILTABLENAME	= 'TEMP_RMD01106_'+LTRIM(RTRIM(@NSPID))
	SET @CTEMPMASTERTABLENAME	= 'PRT_RMM01106_UPLOAD'
	SET @CTEMPDETAILTABLENAME	= 'PRT_RMD01106_UPLOAD'
	set @CTEMPXNBOXDETAILSNAME  =  'Prt_xnBoxDetails_UPLOAD'
	
			
	SET @CTEMPMASTERTABLE	= @CTEMPDBNAME + @CTEMPMASTERTABLENAME
	SET @CTEMPDETAILTABLE	= @CTEMPDBNAME + @CTEMPDETAILTABLENAME
	set @CTEMPxnBoxDetails  = @CTEMPDBNAME + @CTEMPXNBOXDETAILSNAME
	
	SET	@cStep = 3
	
	IF @NUPDATEMODE IN (1,2)
		SELECT TOP 1 @CLOCATIONID	= location_code FROM PRT_rmm01106_UPLOAD (nolock) WHERE SP_ID=@NSPID
	ELSE
		SELECT TOP 1 @CLOCATIONID	= location_code FROM RMM01106 (nolock) WHERE rm_id=@CMEMOID

	SET @cStep=3.2

		IF ISNULL(@CLOCATIONID,'')=''
	 BEGIN
		SET @CERRORMSG =' LOCATION ID CAN NOT BE BLANK  '  
		GOTO END_PROC    
	 END
	

	IF  @NUPDATEMODE=15 AND ISNULL(@CMEMOID,'')<>''
	BEGIN
		SET @CKEYFIELDVAL1=@CMEMOID
		GOTO  LBLINSERTUPLOADMIRRORDOC	
	END
		

	BEGIN TRANSACTION

	IF @NUPDATEMODE<>1
	BEGIN
		SET @cStep=3.5
		IF @NUPDATEMODE=2
			SELECT TOP 1 @cMemoId=rm_id FROM  prt_rmm01106_UPLOAD (NOLOCK) WHERE sp_id=@nSpId

	END

	IF @NUPDATEMODE IN (1,2)
	BEGIN
		
		SET @cStep=3.7
		IF @cDonotPickCdinDN='1'
			UPDATE PRT_rmd01106_UPLOAD WITH (ROWLOCK) SET pur_cd_percentage=0
			WHERE sp_id=@nSpId
		
		SET @cStep=3.72
		--SET @nBoxUpdatemode=(CASE WHEN @nBoxno>0 THEN 1 ELSE 0 END)

		-- GETTING JOB ORDER ID WHICH IS BEING EDITED
		SELECT @CKEYFIELDVAL1 = rm_id,@NENTRYMODE=ENTRY_MODE,@nMode=mode,@nBillChallanMode=bill_challan_mode
		from PRT_rmm01106_UPLOAD (NOLOCK) WHERE sp_id=@nSPId

		IF (@CKEYFIELDVAL1 IS NULL )
		BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' ERROR ACCESSING THE RECORD TO BE MODIFIED...'
				GOTO END_PROC  		
		END

		SET @cStep = 3.75

	    IF ISNULL(@NENTRYMODE,0) <=0
		BEGIN
		     SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + 'INVALID ENTRY MODE'+str(@NENTRYMODE)
			 GOTO END_PROC  
		END

		SET @cStep = 3.5
		DELETE FROM prt_rmd01106_upload with (rowlock) WHERE SP_ID=@NSPID and PRODUCT_CODE=''
		
		IF @nMode=1
		BEGIN

	
			SET @cStep=3.6
			 EXEC SP3S_VALIDATE_PRT_BILLCHALLANMODE
			 @nBillChallanMode=@nBillChallanMode,
			 @cSourceTable='prt_rmd01106_upload',
			 @cSpid=@nSpId,
			 @cErrormsg=@cErrormsg OUTPUT

			 IF ISNULL(@cErrormsg,'')<>''
			 BEGIN
				GOTO END_PROC
			 END	


        END
		SET @cStep = 3.9
		SET @CWHERECLAUSE=' AND SP_ID='''+ LTRIM(RTRIM(@NSPID))+''''

		PRINT 'NOW VALIDATE SECTION ITEM TYPE'

		EXEC SP3S_VALIDATEXN_ITEMTYPE
		@CTEMPMASTERTABLE='PRT_RMM01106_UPLOAD',
		@CTEMPDETAILTABLE='PRT_RMD01106_UPLOAD',
		@CWHERECLAUSE=@CWHERECLAUSE,
		@CERRORMSG=@CERRORMSG OUTPUT


		IF ISNULL(@CERRORMSG,'')<>''
			GOTO END_PROC
		
		-- UPDATING MASTER TABLE (PIM01106) FROM TEMP TABLE
		SET @cStep = 100		-- UPDATING MASTER TABLE
			
		UPDATE prt_rmm01106_upload with (rowlock) SET DN_TYPE=1 WHERE SP_ID=LTRIM(RTRIM(@NSPID)) and isnull(DN_TYPE,0) NOT IN (1,2)

		UPDATE prt_rmm01106_upload with (rowlock) SET xn_item_type=1 WHERE SP_ID=LTRIM(RTRIM(@NSPID)) and isnull(xn_item_type,0) =0

		---- Need to update this column becuase application not giving this column's vallue in  case of
		---- Financial Debit note (Ticket#03-1258 Date :12-03-2021)
		UPDATE prt_rmd01106_upload with (rowlock) SET dept_id=@cLocationId WHERE SP_ID=LTRIM(RTRIM(@NSPID)) 
		AND ISNULL(dept_id,'')=''

		SELECT @nDnType=dn_type from prt_rmm01106_upload (nolock) where sp_id=@nSpId

		INSERT @OUTPUT (ERRMSG,MEMO_ID,STATUSMSG)
		EXEC SP3S_CHKPRT_WO_PURPOSTING @nSpId,@CLOCATIONID
	
	
		IF EXISTS (SELECT TOP 1 * FROM @OUTPUT)
		BEGIN
			SET @bPendingForPostingError=1
			GOTO END_PROC
		END	


	END

	SELECT TOP 1 @CHODEPTID = [VALUE] FROM CONFIG(NOLOCK) WHERE CONFIG_OPTION='HO_LOCATION_ID'		
	
	SELECT TOP 1 @CCHECKACSTATUS=VALUE FROM CONFIG(NOLOCK) WHERE CONFIG_OPTION='CHECK_SUPPLIER_BALANCE'
	SET @CCHECKACSTATUS=ISNULL(@CCHECKACSTATUS,'')
	
	SELECT @BDONOTSENDCHALLANWITHOUTDISPATCH=1
	
		 

	BEGIN TRY	
	
   		IF OBJECT_ID('TEMPDB..#BARCODE_NETQTY','U') IS NOT NULL
			DROP TABLE #BARCODE_NETQTY

		SELECT DEPT_ID,BIN_ID,PRODUCT_CODE,quantity_in_stock AS XN_QTY
		,CONVERT(BIT,0) AS new_entry
		INTO #BARCODE_NETQTY FROM PMT01106 (NOLOCK) WHERE 1=2
	
			
		SET @BALLOWNEGSTOCK =ISNULL(@BALLOWNEGSTOCK,0)
			
		
		PRINT 'START NORMALIZE_FIX_PRODUCT_CODE '
		IF @NUPDATEMODE<>3 AND ISNULL(@NDNTYPE,0) IN(0,1) AND @NENTRYMODE <>2
		BEGIN
	
		  EXEC SP3S_NORMALIZE_FIX_PRODUCT_CODE 'PRT',@NSPID,@NUPDATEMODE,
		  @CTEMPDETAILTABLE,@CMEMOID,@CERRORMSG OUTPUT,@CTEMPMASTERTABLE,@cLocationId,@CWIZAPPUSERCODE,@NPRTMODE

		  	
		  IF ISNULL(@CERRORMSG,'')<>''
		  BEGIN
			   SET @CERRORMSG='ERROR IN NORMALIZATION'+@CERRORMSG
			   GOTO END_PROC
		  END
		  
		   Update a set amount =(purchase_price *quantity )
		   FROM PRT_rmd01106_UPLOAD a (NOLOCK) WHERE SP_ID =@NSPID AND (purchase_price *quantity )<>amount 
		  
		  
		END  
        
    

	   IF @NUPDATEMODE IN (2,3,5,10,11,12) AND NOT (@nUpdatemode=2 AND @nBoxUpdatemode=1)
	   BEGIN
			SET @cStep=37.1
			EXEC SP_CHKXNSAVELOG 'PRT',@cStep,0,@NSPID,'',1

			IF @nUpdatemode=2
				 SELECT TOP 1 @cMemoId=rm_id,@NENTRYMODE=Entry_Mode,@nDnType=dn_type FROM prt_rmm01106_upload	(NOLOCK) where SP_ID=@NsPiD
			ELSE
				SELECT @NENTRYMODE=entry_mode,@nDnType=dn_type FROM rmm01106 (NOLOCK) WHERE rm_id=@cMemoId

			IF ISNULL(@CMEMOID,'') = ''
			BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' MEMO ID REQUIRED .....CANNOT PROCEED'
				GOTO END_PROC  		
			END
			
			SET @CKEYFIELDVAL1=@CMEMOID
			
			SET @cStep = 13

			IF @NUPDATEMODE=5 AND ISNULL(@CPSNO,'')=''
			BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' PACK SLIP NO. REQUIRED .....CANNOT PROCEED'
				GOTO END_PROC  		
			END
			ELSE						
			IF @NUPDATEMODE=10 AND ISNULL(@NBOXNO,0)=0
			BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' BOX NO. REQUIRED .....CANNOT PROCEED'
				GOTO END_PROC  		
			END
			ELSE
			IF @NUPDATEMODE=11 AND ISNULL(@CPRODUCTCODE,'')=''
			BEGIN
				SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' BAR CODE NO. REQUIRED .....CANNOT PROCEED'
				GOTO END_PROC  		
			END
			ELSE
			IF @NUPDATEMODE=12 
			BEGIN
				IF ISNULL(@dMemoDtPara,'')=''
				BEGIN
					SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' New Memo Date required to be changed .....CANNOT PROCEED'
					GOTO END_PROC  		
				END

				GOTO lblUpdatedate
			END			
					    
			
			IF @nUpdatemode=5
				SELECT TOP 1 @cPsId=ps_id FROM dnps_mst (NOLOCK) where ps_no=@CPSNO AND fin_year=@CFINYEAR

			SET @cCmd=N'SELECT b.location_code as DEPT_ID,A.BIN_ID,A.PRODUCT_CODE,SUM(A.QUANTITY)*-1,0 as new_entry
			FROM rmd01106 A (NOLOCK)
			JOIN rmm01106 b (NOLOCK) ON a.rm_id=b.rm_id
			JOIN SKU_names c (NOLOCK) ON A.product_code=c.product_code
			WHERE A.rm_ID='''+@cMemoid+'''  '+
			(CASE   WHEN @nUpdatemode=5 THEN ' and ps_id='''+LTRIM(RTRIM(@cPsId))+''''
			        WHEN @nUpdatemode=10 OR @nBoxUpdatemode=2 THEN ' and box_no='+LTRIM(RTRIM(STR(@nBoxNo))) --chnge for edit box
					WHEN @nUpdatemode=11 THEN ' and a.product_code='''+LTRIM(RTRIM(@CPRODUCTCODE))+''''
					ELSE ' AND 1=1 ' END)+' GROUP BY b.location_code,A.BIN_ID,A.PRODUCT_CODE'
			
			print @cCmd

			INSERT #BARCODE_NETQTY(DEPT_ID,BIN_ID,PRODUCT_CODE,XN_QTY,new_entry)	
			EXEC SP_EXECUTESQL @cCmd


			EXEC SP3S_UPDATE_PMTSTOCK_PRT
			@cMemoId=@cMemoId,
			@bREvertFlag=1,
			@NENTRYMODE=@NENTRYMODE,
			@nDnType=@nDnType ,
			@BALLOWNEGSTOCK=@BALLOWNEGSTOCK,
			@nSpId=@nSpId,
			@CERRORMSG=@CERRORMSG OUTPUT,
			@BNEGSTOCKFOUND=@BNEGSTOCKFOUND OUTPUT

		
			IF ISNULL(@cErrormsg,'')<>''
				GOTO END_PROC

		END


		IF @NUPDATEMODE=4
			GOTO LBLAPPROVEPRT


		IF @NUPDATEMODE IN (1,2)
		BEGIN
			INSERT #BARCODE_NETQTY(DEPT_ID,BIN_ID,PRODUCT_CODE,XN_QTY,new_entry)	
			SELECT @CLOCATIONID as DEPT_ID,BIN_ID,PRODUCT_CODE,SUM(quantity) as XN_QTY,1 as new_entry 
			FROM prt_rmd01106_upload (NOLOCK) WHERE sp_id=@nSpId
			GROUP BY BIN_ID,PRODUCT_CODE
		
		SET @bReUpdateAllRmd=0

		IF @NUPDATEMODE=2 AND (@NBOXUPDATEMODE>=1 AND @bCalledfromPackSlip=0) 
		BEGIN
			SET @cStep = 12.4	
			DECLARE @cUploadTableName VARCHAR(200),@CFILTERCONDITION varchar(300)

			
			IF EXISTS (SELECT TOP 1 a.rm_id FROM PRT_rmm01106_upload a (NOLOCK) JOIN rmm01106 b (NOLOCK) ON a.rm_id=b.rm_id  
			WHERE a.sp_id=@nSpId AND (a.discount_percentage<>0 or b.DISCOUNT_PERCENTAGE<>0))   
				SET @bReUpdateAllRmd=1

			SELECT @cUploadTableName='prt_rmd01106_upload'
			SET @CFILTERCONDITION=' b.rm_id='''+@CKEYFIELDVAL1+''''	+
			(CASE WHEN @NBOXUPDATEMODE=2 THEN ' AND box_no<>'''+ltrim(rtrim(str(@nBoxNo)))+'''' ELSE '' END)	--new add
			set @CINSSPID=LEFT(@nSpId,38)+'ZZZ'

			print 'enter extra rmd entry done to handle Scenario mentioned as prt#1 in File doc_scenarios'

			EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB='',@CSOURCETABLE='rmd01106',@CDESTDB=''
									,@CDESTTABLE=@cUploadTableName,@CKEYFIELD1='rm_id',@CKEYFIELD2='',@CKEYFIELD3=''
									,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
									,@BALWAYSUPDATE=0,@BUPDATEXNS=1,@CINSSPID=@CINSSPID,@CINSSPIDCol=''
									,@CSEARCHTABLE='rmd01106',@cXnType='PRT'
			print 'enter extra rmd entry inserted'
		END

		END
			  
        
		IF @NPRTMODE=2
			SET @CMEMONOPREFIX_ES=@CMEMONOPREFIX		
	
		IF @NUPDATEMODE IN (3,5,10,11)
		BEGIN

			IF @NUPDATEMODE = 3			
			BEGIN
				
				SET @cStep = 60
			
				-- UPDATING SENTTOHO FLAG
				UPDATE rmm01106 WITH (ROWLOCK) SET CANCELLED = 1,LAST_UPDATE=GETDATE()   WHERE rm_id = @CKEYFIELDVAL1 
				
				
				EXEC SP3S_CAPTURE_AUDIT_TRAIL 'PRT',@CMEMOID,@CTEMPMASTERTABLE,@CTEMPDETAILTABLE,0,@CMACHINENAME,@CWINDOWUSERNAME,@CWIZAPPUSERCODE,1,'1900-01-01',@EDIT_CLICKED
				
				UPDATE B SET PRTAMOUNT_CREDITED=0,PRTAMOUNT=0
				FROM RMM01106 (NOLOCK) A 
				JOIN PID01106 (NOLOCK) B ON A.REFMEMOID =B.MRR_ID
				JOIN PIM01106 C ON B.MRR_ID=C.MRR_ID
				WHERE ISNULL (REFMEMOID,'')<>'' AND C.CANCELLED=0
				AND A.RM_ID=@CKEYFIELDVAL1


				SET @cStep = 70 
				EXEC SP_CHKXNSAVELOG 'PRT',@cStep,1,@nSpId,'',1	 									
				UPDATE A SET PRT_RM_ID='' FROM DNPS_MST A WITH (ROWLOCK)  JOIN 
				rmm01106 B WITH (NOLOCK)  ON A.PRT_RM_ID=B.RM_ID
				WHERE b.RM_id = @CKEYFIELDVAL1

			   SET @cStep = 215
		   
			   EXEC SP3S_CANCEL_AUTOVOUCHERS
			   @cXnType='PRT',
			   @CMEMOID=@CKEYFIELDVAL1     

			  GOTO lblValidate
				
			END

			ELSE		
			IF @NUPDATEMODE=5
			BEGIN
				SET @cStep = 300
				IF EXISTS (SELECT TOP 1 PS_NO FROM RMD01106 A(NOLOCK) JOIN DNPS_MST B(NOLOCK) ON A.PS_ID=B.PS_ID
						   WHERE RM_ID=@CMEMOID AND PS_NO=@CPSNO)
				BEGIN
					SELECT TOP 1 @CPSID=A.PS_ID FROM RMD01106 A(NOLOCK) JOIN DNPS_MST B(NOLOCK) ON A.PS_ID=B.PS_ID
					WHERE RM_ID=@CMEMOID AND PS_NO=@CPSNO
				
					SET @cStep = 305
				
					SET @CCMD = N'DELETE FROM RMD01106 with (rowlock) WHERE RM_ID = ''' +@CMEMOID + ''' AND
								  PS_ID='''+@CPSID+''''
					EXEC SP_EXECUTESQL @CCMD

					SET @cStep = 310
					UPDATE DNPS_MST WITH (ROWLOCK) SET PRT_RM_ID='' WHERE ps_id=@cPsId
									
					SET @CKEYFIELDVAL1=@CMEMOID
				END
				ELSE
				BEGIN
					SET @cStep = 320
					SET @CERRORMSG='INVALID PACKING SLIP NO PROVIDED.....PLEASE CHECK'
					GOTO END_PROC	
				END	
			END
			ELSE
			IF @NUPDATEMODE=10
			BEGIN
				SET @cStep = 24
				IF EXISTS (SELECT TOP 1 BOX_NO FROM RMD01106(NOLOCK) WHERE RM_ID=@CMEMOID AND BOX_NO=@NBOXNO)
				BEGIN
					SET @CCMD = N'DELETE FROM RMD01106 with (rowlock) WHERE RM_ID = ''' +@CMEMOID + ''' AND
								  BOX_NO='+LTRIM(RTRIM(STR(@NBOXNO)))
					EXEC SP_EXECUTESQL @CCMD

					--NEW ADD UNMERGED DATE: 11-JUL-2014
					SET @CCMD = N'UPDATE RMM01106 with (rowlock) SET LAST_UPDATE = GETDATE() WHERE RM_ID = '''+@CMEMOID+''''
					PRINT @CCMD	
					EXEC SP_EXECUTESQL @CCMD	
					
					IF EXISTS (SELECT TOP 1 'U'FROM XNBOXDETAILS A (NOLOCK) WHERE REF_MEMO_ID =@CMEMOID AND BOX_NO =@NBOXNO AND XN_TYPE='PRT')
					BEGIN
					      DELETE A  FROM XNBOXDETAILS A (NOLOCK) WHERE REF_MEMO_ID =@CMEMOID AND BOX_NO =@NBOXNO AND XN_TYPE='PRT'

					END


				END
				ELSE
				BEGIN
					SET @CERRORMSG='INVALID BOX NO. PROVIDED.....PLEASE CHECK'
					GOTO END_PROC
				END	
			END			
			ELSE
			IF @NUPDATEMODE=11
			BEGIN
			    
				 

				SET @cStep = 27
				SET @CCMD = N'DELETE FROM RMD01106 with (rowlock) WHERE RM_ID = ''' +@CMEMOID + ''' AND
							  PRODUCT_CODE='''+@CPRODUCTCODE+''''
				EXEC SP_EXECUTESQL @CCMD
				--NEW ADD UNMERGED DATE: 11-JUL-2014
					SET @CCMD = N'UPDATE RMM01106 with (rowlock) SET LAST_UPDATE = GETDATE() WHERE RM_ID = '''+@CMEMOID+''''
					PRINT @CCMD	
					EXEC SP_EXECUTESQL @CCMD	
				
				   IF EXISTS (SELECT TOP 1 'U' FROM XNBOXDETAILS A (NOLOCK) WHERE REF_MEMO_ID =@CMEMOID AND BOX_NO =@NBOXNO AND XN_TYPE='PRT')
					BEGIN

					      declare @ntotalXNITEMWEIGHT numeric(10,3)
						  select @ntotalXNITEMWEIGHT=sum(XNITEMWEIGHT)  FROM rmd01106  A (NOLOCK) 
						  WHERE rm_id =@CMEMOID AND BOX_NO =@NBOXNO 

						  UPDATE A SET  XNITEMWEIGHT=@ntotalXNITEMWEIGHT
						  FROM XNBOXDETAILS A (NOLOCK) WHERE REF_MEMO_ID =@CMEMOID AND BOX_NO =@NBOXNO AND XN_TYPE='PRT'

					END
				
			END	
			
			GOTO LBLCALTOT
		END
					
		IF OBJECT_ID('TEMPDB..#TMPDNSUPPLIER','U') IS NOT NULL
			DROP TABLE #TMPDNSUPPLIER
		
		SELECT AC_CODE,CONVERT(BIT,0) AS CANCELLED,CAST('' AS VARCHAR(20)) AS Shipping_from_Ac_code 
		INTO #TMPDNSUPPLIER 
		FROM LM01106  (NOLOCK) WHERE 1=2	
		
				
		LBLGENMULTIDN:

		SET @CPRTCONFIGMODE=''
		SELECT TOP 1 @CPRTCONFIGMODE=VALUE FROM CONFIG(NOLOCK) WHERE CONFIG_OPTION='DN_TYPE'
		
		SET @CPRTCONFIGMODE=ISNULL(@CPRTCONFIGMODE,'')
		
		declare @CFILTERCONDITIONmulti varchar(200)
		IF @NPRTMODE=2
		BEGIN	
			IF ISNULL(@CNEXTACCODE,'')=''
			BEGIN
				SET	@cStep = 29
				
				set @CFILTERCONDITIONmulti=' sp_id= '''+ltrim(rtrim(@nSpId))+''''
				SET @cInsSpId=ltrim(rtrim(@nSPId))+@CLOCATIONID
				EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB='',@CSOURCETABLE='prt_rmd01106_upload',@CDESTDB=''
								,@CDESTTABLE='prt_rmd01106_upload',@CKEYFIELD1='sp_id',@CKEYFIELD2='',@CKEYFIELD3=''
								,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITIONmulti,@LUPDATEONLY=0
								,@BALWAYSUPDATE=0,@BUPDATEXNS=1,@CINSSPID=@CINSSPID,@CINSSPIDCol=''
								,@CSEARCHTABLE='rmd01106',@cXnType='PRT'
				
				
					SET	@cStep = 29.2
				DELETE FROM prt_rmd01106_upload WITH (ROWLOCK) where sp_id=@nSpId

				-- GENERATING NEW MULTIPLE DEBIT NOTE BATCH NO		
				SET @NSAVETRANLOOP=0
				WHILE @NSAVETRANLOOP=0
				BEGIN
					SET	@cStep = 29.4
					EXEC GETNEXTKEY @CMASTERTABLENAME,'BATCH_NO',7,@CLOCATIONID, 1,@CFINYEAR,2, @CBATCHNOVAL OUTPUT   
					
					SET	@cStep = 10
					SET @CCMD=N'IF EXISTS ( SELECT BATCH_NO FROM RMM01106  (NOLOCK) WHERE BATCH_NO='''+@CBATCHNOVAL+''' 
											AND FIN_YEAR = '''+@CFINYEAR+''' )
									SET @NLOOPOUTPUT=0
								ELSE
									SET @NLOOPOUTPUT=1'
					PRINT @CCMD
					EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
				END

				IF @CBATCHNOVAL IS NULL  
				BEGIN
					  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' ERROR CREATING NEXT BATCH NO....'	
					  GOTO END_PROC  		
				END

				SET @CCMD=N'SELECT DISTINCT B.AC_CODE,0 AS CANCELLED,b.SHIPPING_FROM_AC_CODE FROM prt_rmd01106_upload A  (NOLOCK)
							JOIN SKU B(NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
							where a.sp_id='''+@cInsSpId+''''
							
				INSERT #TMPDNSUPPLIER			
				EXEC SP_EXECUTESQL @CCMD			

				--this Code is shifted step 25 in Mulple DN After Suppler allocate then check Debit Balance of Supplier
				--IF @CCHECKACSTATUS='1'		
				--BEGIN
				--	EXEC SP3S_VALIDATE_SUPPLIERDRBALANCE
				--	@CLOCATIONID=@CLOCATIONID ,
				--	@cFinyear=@cFinyear ,
				--	@nPrtMode=2,
				--	@nSpId=@cInsSpId,
				--	@cErrormsg=@cErrormsg OUTPUT

				--	IF ISNULL(@cErrormsg,'')<>''
				--		goto end_proc
				--END

			END
			
			SET	@cStep = 12
			
			SET @CNEXTACCODE=''
			if @nMode<>2
			 begin	

				SELECT TOP 1 @CNEXTACCODE=B.AC_CODE,@CNEXTBILLNO=B.INV_NO,@CNEXTFORMID=B.FORM_ID,
							 @NERFLAG=B.ER_FLAG,@NLOTNO=isnull(A.LOT_NO,0),@nPurCdPct=ISNULL(pur_cd_percentage,0),
							 @cSHIPPING_FROM_AC_CODE=b.SHIPPING_FROM_AC_CODE
							 FROM prt_rmd01106_upload A (NOLOCK) 
							 JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
				WHERE sp_id=@cInsSpId

	
			END
			ELSE
			BEGIN
			       

				   SELECT top 1 @CNEXTACCODE=ISNULL(PIM.AC_CODE,L.DEPT_AC_CODE),  @CPARTY_DEPT_ID=ISNULL(PIM.challan_source_location_code,B.challan_source_location_code) 
				   FROM PRT_RMD01106_UPLOAD A (NOLOCK)
				   LEFT JOIN PIM01106 PIM (NOLOCK) ON A.mrr_id =PIM.mrr_id 
				   LEFT JOIN SKU_XFP B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE 
				   LEFT JOIN LOCATION L (NOLOCK) ON L.DEPT_ID =B.dept_id 
				   WHERE SP_ID=@CINSSPID
				   ORDER BY ISNULL(PIM.RECEIPT_DT ,B.RECEIPT_DT),ISNULL(PIM.INV_NO,B.GROUP_INV_NO) DESC

				 IF NOT  EXISTS (SELECT TOP 1 'U' FROM LOCATION  A (NOLOCK) WHERE DEPT_ID =ISNULL(@CPARTY_DEPT_ID,''))
				 BEGIN
				     
					 SELECT @CERRORMSG='SOURCE LOCATION NOT FOUND'
					 GOTO END_PROC

				 END

				 IF @cLocationId=@CPARTY_DEPT_ID
				 BEGIN
				    
					 SELECT @CERRORMSG='Target Location must be different from souce Location.'
					 GOTO END_PROC

				 END


				 SELECT @CJOINSTR='  LEFT JOIN PIM01106 PIM (NOLOCK) ON B.MRR_ID =PIM.MRR_ID 
				   LEFT JOIN SKU_XFP XFP (NOLOCK) ON XFP.PRODUCT_CODE =B.PRODUCT_CODE 
				   LEFT JOIN LOCATION L (NOLOCK) ON L.DEPT_ID =XFP.DEPT_ID ',
					@CWHERECLAUSE=' SP_ID='''+@CINSSPID+''' AND ISNULL(PIM.AC_CODE,L.DEPT_AC_CODE) ='''+@CNEXTACCODE+''' AND ISNULL(PIM.challan_source_location_code,XFP.challan_source_location_code) ='''+@CPARTY_DEPT_ID+'''  '

			     UPDATE A SET PARTY_DEPT_ID=@CPARTY_DEPT_ID,AC_CODE=@CNEXTACCODE FROM PRT_RMM01106_UPLOAD A (NOLOCK)  WHERE SP_ID=LTRIM(RTRIM(@NSPID))	

			  end
		

			IF ISNULL(@CSHIPPING_FROM_AC_CODE,'') IN('','0000000000')
			    SET @CSHIPPING_FROM_AC_CODE=''
			
	
			IF ISNULL(@CNEXTACCODE,'')=''
			BEGIN
				SET @CLASTDNNO=@CMEMONOVAL
				
				-- AFTER SUCCESSFUL SAVING , JUST DROP THE TEMP TABLES CREATED BY APPLICATION
				SET @cStep = 14
		        DELETE FROM PRT_RMM01106_UPLOAD with (rowlock)  WHERE SP_ID=LTRIM(RTRIM(@NSPID))
		        DELETE FROM PRT_RMD01106_UPLOAD with (rowlock) WHERE SP_ID=LTRIM(RTRIM(@NSPID))
				
				GOTO END_PROC
			END
			
			SET	@cStep = 15
			
			SET @NMULTIDNCNT=@NMULTIDNCNT+1
			
			DELETE FROM PRT_RMD01106_UPLOAD with (rowlock) WHERE SP_ID=LTRIM(RTRIM(@NSPID))	
	
			SET	@cStep = 17
			
			IF @NMODE <>2
			BEGIN

				SET @CFILTERMULTIDN=(CASE WHEN @CPRTCONFIGMODE<>'2' THEN ' AND sku.INV_NO='''+@CNEXTBILLNO+'''' ELSE 
				' AND sku.ac_code='''+@CNEXTACCODE+''' AND ISNULL(pur_cd_percentage,0)='+str(@nPurCdPct,10,2) END)
			     
				 if isnull(@CSHIPPING_FROM_AC_CODE,'')<>''
				 SET @CFILTERMULTIDN=@CFILTERMULTIDN+' and case when isnull(sku.SHIPPING_FROM_AC_CODE,'''') in('''',''0000000000'') then '''' else sku.SHIPPING_FROM_AC_CODE end ='''+@CSHIPPING_FROM_AC_CODE+''' '
				 
			
							
				  select @cJoinStr=' JOIN SKU  (NOLOCK) ON sku.PRODUCT_CODE=B.PRODUCT_CODE',
						@CWHERECLAUSE=' sp_id='''+@cInsSPId+'''  
						and sku.AC_CODE='''+@CNEXTACCODE+''' AND ((ER_FLAG IN (0,1) AND '+LTRIM(STR(@NERFLAG))+' IN (0,1)) OR 
						ER_FLAG='+LTRIM(RTRIM(STR(@NERFLAG)))+')'+@CFILTERMULTIDN 
              
			  END

            set @NSHIPPING_mode=0
			IF @CSHIPPING_FROM_AC_CODE<>''
			    set @NSHIPPING_mode=3

			
			EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB='',@CSOURCETABLE='prt_rmd01106_upload',@CDESTDB=''
								,@CDESTTABLE='prt_rmd01106_upload',@CKEYFIELD1='sp_id',@CKEYFIELD2='',@CKEYFIELD3=''
								,@LINSERTONLY=1,@CFILTERCONDITION=@CWHERECLAUSE,@LUPDATEONLY=0,@cJoinStr=@cJoinStr
								,@BALWAYSUPDATE=0,@BUPDATEXNS=1,@CINSSPID=@nSpId,@CINSSPIDCol=''
								,@CSEARCHTABLE='rmd01106',@cXnType='PRT'
			
			SET	@cStep = 19
			
			DELETE a FROM prt_rmd01106_upload a WITH (ROWLOCK) 
			JOIN prt_rmd01106_upload b (NOLOCK) ON a.product_code=b.product_code
			WHERE a.sp_id=@cInsSpId AND b.sp_id=@nSpId

			SET	@cStep = 19.2
			DELETE FROM #BARCODE_NETQTY

			INSERT #BARCODE_NETQTY(DEPT_ID,BIN_ID,PRODUCT_CODE,XN_QTY,new_entry)	
			SELECT @CLOCATIONID as DEPT_ID,BIN_ID,PRODUCT_CODE,SUM(quantity) as XN_QTY,1 as new_entry 
			FROM prt_rmd01106_upload (NOLOCK) WHERE sp_id=@nSpId
			GROUP BY BIN_ID,PRODUCT_CODE
						
			SET	@cStep = 21
		
			
			IF ISNULL(@NDNTYPE,0)<>2
			BEGIN

				SET @CCMD=N'UPDATE '+@CTEMPMASTERTABLE+' SET AC_CODE='''+@CNEXTACCODE+''',
						BATCH_NO='''+@CBATCHNOVAL+''',SUBTOTAL=ISNULL(B.SUBTOTAL,0),
						MEMO_TYPE='+LTRIM(RTRIM(STR(@NERFLAG)))+',
						OTHER_CHARGES=B.OTHER_CHARGES,
						TOTAL_AMOUNT=ISNULL(B.SUBTOTAL,0)+ISNULL(B.OTHER_CHARGES,0),
						LOT_NO='+STR(@NLOTNO)+' 
 						FROM (SELECT SUM(A.purchase_price*INVOICE_QUANTITY) AS SUBTOTAL,SUM(QUANTITY) AS QUANTITY,
							  SUM(ISNULL(C.OTHER_CHARGES,0)*A.INVOICE_QUANTITY) AS OTHER_CHARGES
							  FROM '+@CTEMPDETAILTABLE+' A (NOLOCK) JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
							  LEFT OUTER JOIN SKU_OH C (NOLOCK) ON C.PRODUCT_CODE=B.PRODUCT_CODE
							  WHERE A.SP_ID='''+LTRIM(RTRIM(@NSPID))+''') B
							  WHERE SP_ID='''+LTRIM(RTRIM(@NSPID))+''' '						  						
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD

					
				if @CSHIPPING_FROM_AC_CODE<>''
				begin
				
					SET @CCMD=N'UPDATE a SET oem_ac_code='''+@CSHIPPING_FROM_AC_CODE+'''
							from '+@CTEMPMASTERTABLE+' a
							LEFT JOIN  LMV01106 LMV (NOLOCK) on lmv.ac_code='''+@CSHIPPING_FROM_AC_CODE+'''
 							WHERE SP_ID='''+LTRIM(RTRIM(@NSPID))+''' '						  						
					PRINT @CCMD
					EXEC SP_EXECUTESQL @CCMD


				end
				
			END
		End
		
		---- CHECK FOR OVERALL DEBIT BALANCE OF SUPPLIER BASED UPON WHICH 
		---- THAT SUPPLIER'S DEBIT NOTE WILL BE SAVED AS CANCELLED IN CASE OF MULTIPLE DEBITNOTES
		---- AND NOT ALLOWED TO SAVE IN CASE OF SINGLE DEBIT NOTE
		
	
		SET @BDRACCOUNTSTATUSCHECKED=1

		LBLSTART:
		
		IF ISNULL(@NPRTMODE,0)=2
		BEGIN
		
		    UPDATE A SET BROKER_AC_CODE =ISNULL(LM.AC_CODE,'0000000000')
		    FROM PRT_rmm01106_UPLOAD A with (rowlock)
		    JOIN LMP01106 B ON A.ac_code =B.AC_CODE 
		    LEFT JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE =B.BROKER_AC_CODE 
		    WHERE A.SP_ID=LTRIM(RTRIM(@NSPID))
		
		END
		
	   DECLARE @CALLOW_BLANK_BILLDETAILS VARCHAR(10)
	   SELECT @CALLOW_BLANK_BILLDETAILS=VALUE  FROM CONFIG WHERE CONFIG_OPTION ='ALLOW_BLANK_BILLDETAILS'

		   
        IF @NUPDATEMODE in( 1 ,2)
		begin

			SELECT TOP 1 @cErrPRODUCTCODE=product_code from PRT_rmd01106_UPLOAD a (NOLOCK)
			JOIN prt_rmm01106_upload b (NOLOCK) ON a.sp_id=b.sp_id
			WHERE a.sp_id=@nSpId AND (isnull(bill_no,'')='' or isnull(bill_dt,'')='') 
			AND ISNULL(xn_item_type,0) IN (0,1) AND ISNULL(dn_type,0)<>2 AND ISNULL(bill_challan_mode,0)<>1
			and ISNULL(@CALLOW_BLANK_BILLDETAILS,'')<>'1'
		
			IF ISNULL(@cErrProductCode,'')<>''
			BEGIN
				SELECT @cErrormsg='Blank Bill details not allowed'
			
				SELECT A.PRODUCT_CODE,0 QUANTITY_IN_STOCK,'Blank Bill details not allowed' AS ERRMSG
				FROM PRT_rmd01106_UPLOAD a (NOLOCK) WHERE sp_id=@nSpId AND (isnull(bill_no,'')='' or isnull(bill_dt,'')='')

				SET @bBlankBillDetails =1
				GOTO END_PROC
			END	


			SELECT TOP 1 @CERRPRODUCTCODE=A.PRODUCT_CODE FROM PRT_RMD01106_UPLOAD A
			JOIN PRT_RMM01106_UPLOAD rmm (NOLOCK) ON A.SP_ID=rmm.SP_ID
			WHERE a.sp_id=@nSpId AND  A.PURCHASE_PRICE<=0 AND rmm.mode=1

			IF ISNULL(@cErrProductCode,'')<>''
			BEGIN
			    
				SELECT @cErrormsg='Zero Rate  not allowed'

				SELECT A.PRODUCT_CODE,0 QUANTITY_IN_STOCK,'Rate can not Be Zero' AS ERRMSG
				FROM PRT_rmd01106_UPLOAD a (NOLOCK) WHERE sp_id=@nSpId AND  A.PURCHASE_PRICE<=0
				SET @bBlankBillDetails =1
				GOTO END_PROC

			END	

			
			

		end

	
		
		SET @CERRORMSG			= ''
		SET @LDONOTUPDATESTOCK	= 0
		SET @CKEYFIELD1			= 'RM_ID'
		SET @CMEMONO			= 'RM_NO'
		
		
		SET @cStep = 26
		
		
		SELECT @BGENERATEAUTOSERIES=0,@BENFORCEBILLINGRULES=0

		-- START UPDATING XN TABLES	
		IF @NUPDATEMODE = 1 -- ADDMODE	
		BEGIN	
			
			SET @CCMD=N'SELECT @NMODE=MODE,@CTARGETLOCID=PARTY_DEPT_ID FROM '+@CTEMPMASTERTABLE+' (NOLOCK) WHERE SP_ID='''+LTRIM(RTRIM(@NSPID))+''''
			EXEC SP_EXECUTESQL @CCMD,N'@NMODE INT OUTPUT,@CTARGETLOCID VARCHAR(4) OUTPUT',
			@NMODE OUTPUT,@CTARGETLOCID OUTPUT
			
			SET @cStep=27
			
			SET @CXNTYPEPARA=(CASE WHEN @NMODE=1 THEN 'PRT' ELSE 'PRT_GRP' END)
			set @CTARGETLOCID=isnull(@CTARGETLOCID,'')
			IF @NDNTYPE=2
			SET @CXNTYPEPARA='FDN'


			EXEC SAVETRAN_GETMEMOPREFIX
				@CXNTYPE=@CXNTYPEPARA,
				@CUSERCODE=@CWIZAPPUSERCODE,
				@CFINYEAR=@CFINYEAR,
				@CSOURCELOCID=@CLOCATIONID,
				@CTARGETLOCID=@CTARGETLOCID,
				@CMANUALPREFIX=@CMEMONOPREFIX,
				@NSPID=@NSPID,
				@CMEMOPREFIX=@CMEMOPREFIXPROC OUTPUT,
				@CERRORMSG=@CERRORMSG OUTPUT


			IF ISNULL(@CERRORMSG,'')<>''
				GOTO END_PROC
			
			
			SET @NMEMONOLEN			= LEN(@CMEMOPREFIXPROC)+6
													
			-- GENERATING NEW DEBIT NOTE NO		
			SET @NSAVETRANLOOP=0
			WHILE @NSAVETRANLOOP=0
			BEGIN
				
				SET @cStep = 28		-- GENERATING NEW KEY

				EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMOPREFIXPROC,1,
								@CFINYEAR,0, @CMEMONOVAL OUTPUT   
				
				PRINT @CMEMONOVAL
				SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+' (NOLOCK) 
										WHERE '+@CMEMONO+'='''+@CMEMONOVAL+''' 
										AND FIN_YEAR = '''+@CFINYEAR+''' )
								SET @NLOOPOUTPUT=0
							ELSE
								SET @NLOOPOUTPUT=1'
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT
			END

			IF @CMEMONOVAL IS NULL  OR @CMEMONOVAL LIKE '%LATER%' OR ISNUMERIC(RIGHT(@CMEMONOVAL,6))=0
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' ERROR CREATING NEXT MEMO NO....'	
				  GOTO END_PROC  		
			END

			SET @cStep = 30		-- GENERATING NEW ID

			-- GENERATING NEW JOB ORDER ID
			SET @CKEYFIELDVAL1 = @CLOCATIONID + RIGHT(@CFINYEAR,2)+ LTRIM(RTRIM(@CMEMONOVAL))
			
			IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
			BEGIN
				  SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' ERROR CREATING NEXT MEMO ID....'
				  -- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG,'''' AS MEMO_ID'
				  GOTO END_PROC
			END

			SET @cStep = 38		-- UPDATING NEW ID INTO TEMP TABLES


			EXEC SP3S_CHECK_prt_PREVMEMO
			@CFINYEAR=@CFINYEAR,
			@CMEMONO=@CMEMONOVAL,
			@CMEMOPREFIX=@CMEMOPREFIXPROC,
			@cSourceLocationCode=@cLocationId,
			@CERRORMSG=@CERRORMSG  OUTPUT
			

		
			
			IF ISNULL(@CERRORMSG,'')<>''
				GOTO END_PROC
			
			PRINT @CCMD
			
			-- UPDATING NEWLY GENERATED JOB ORDER NO AND JOB ORDER ID IN PIM AND PID TEMP TABLES
			SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' + 
						@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' WHERE   SP_ID='''+LTRIM(RTRIM(@NSPID))+''''
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD

					
			SET @cStep = 45
			SET @CCMD = 'UPDATE ' + @CTEMPDETAILTABLE + ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+'''
			WHERE SP_ID='''+LTRIM(RTRIM(@NSPID))+''' '
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD
			
			IF @NPRTMODE=2 AND ISNULL(@CFIRSTDNNO,'')=''
				SET @CFIRSTDNNO=@CMEMONOVAL


		END					-- END OF ADDMODE
		ELSE				-- CALLED FROM EDITMODE
		BEGIN				-- START OF EDITMODE
			SET @cStep = 65
			-- UPDATING SENTTOHO FLAG
			SET @CCMD = N'UPDATE ' + @CTEMPMASTERTABLE + ' SET LAST_UPDATE=GETDATE() WHERE  SP_ID='''+LTRIM(RTRIM(@NSPID))+''''
			EXEC SP_EXECUTESQL @CCMD
								
			-- ENTRY IN AUDIT TRAIL (ONLY WHEN USER EXPLICITLY CLICKED ON EDIT BUTTON)
					-- AUDIT TRIAL ENTRY
							
		END					-- END OF EDITMODE

		SET @cStep = 95
		
		-- RECHECKING IF ID IS STILL LATER
		IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' ERROR CREATING NEXT MEMO ID....'
			GOTO END_PROC
		END

		
		SET @cStep = 103		-- UPDATING MASTER TABLE
			
		UPDATE prt_rmm01106_upload with (rowlock) SET PARTY_DEPT_ID=(CASE WHEN PARTY_DEPT_ID='' THEN NULL 
		ELSE PARTY_DEPT_ID END),accounts_dept_id=(CASE WHEN ISNULL(accounts_dept_id,'')='' THEN @cLocationId ELSE accounts_dept_id END)
		WHERE SP_ID=LTRIM(RTRIM(@NSPID))
		
		SET @cStep=125
		
		
		SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE + ' SET RM_ID = ''' + @CKEYFIELDVAL1 + ''' WHERE  SP_ID='''+LTRIM(RTRIM(@NSPID))+''''
		EXEC SP_EXECUTESQL @CCMD

		SET @CWHERECLAUSE = ' SP_ID='''+LTRIM(RTRIM(@NSPID))+''''

lblCaltot:		 
		SET @cStep=125.2

		
		EXEC SP3S_CALTOTALS_PRT
		@nUpdatemode=@nUpdatemode,
		@nSpId = @nSpId,
		@cRmId = @ckEYFIELDVAL1 ,
		@NBOXUPDATEMODE=@NBOXUPDATEMODE, 
		@bcalledfrompackslip=@bcalledfrompackslip,
		@CERRORMSG=@CERRORMSG OUTPUT,
		@cLocationId=@cLocationId

		
		IF ISNULL(@cErrormsg,'')<>''
			GOTO END_PROC

		IF @nUpdatemode IN (1,2)
		BEGIN
			SET @cStep = 127		-- SETTTING UP ENVIRONMENT
			EXEC SP_CHKXNSAVELOG 'PRT',@cStep,1,@nSpId,'',1	 

			EXEC SP3S_upd_qty_lastupdate
			@nUpdateMode=@NUPDATEMODE,
			@cXnType='PRT',
			@nSpId=@nSpId,
			@cMasterTable='rmm01106',
			@cMemoIdCol='rm_id',
			@cXnDtCol='rm_dt',
			@CERRORMSG=@CERRORMSG OUTPUT
	
			IF ISNULL(@cErrormsg,'')<>''
				GOTO END_PROC
		END

		IF @NUPDATEMODE NOT IN (1,2)
			GOTO lblUpdatePmt

		--validate ledger balance in single debit note and multiple debitnote

		IF @CCHECKACSTATUS='1'		
		BEGIN

			 IF @NPRTMODE =1
			 BEGIN

				SET @CCMD=N'SELECT A.AC_CODE,0 AS CANCELLED,A.SHIPPING_AC_CODE 
				FROM '+@CTEMPMASTERTABLE+' A (NOLOCK) 
				WHERE SP_ID='''+LTRIM(RTRIM(@NSPID))+''''
				INSERT #TMPDNSUPPLIER			
				EXEC SP_EXECUTESQL @CCMD

				EXEC SP3S_VALIDATE_SUPPLIERDRBALANCE
					@CLOCATIONID=@CLOCATIONID ,
					@cFinyear=@cFinyear ,
					@nPrtMode=1,
					@nSpId=@nSpId,
					@cErrormsg=@cErrormsg OUTPUT

					IF ISNULL(@cErrormsg,'')<>''
						goto end_proc

					

			 END	
			 ELSE
			 BEGIN
			  
			  if @NUPDATEMODE =1
			  begin

				EXEC SP3S_VALIDATE_SUPPLIERDRBALANCE
					@CLOCATIONID=@CLOCATIONID ,
					@cFinyear=@cFinyear ,
					@nPrtMode=2,
					@nSpId=@nSpId,
					@cErrormsg=@cErrormsg OUTPUT

				IF ISNULL(@cErrormsg,'')<>''
					goto end_proc

				   IF EXISTS (SELECT TOP 1 'U' FROM #TMPDNSUPPLIER WHERE CANCELLED=1)
					BEGIN
						SET @cStep=105

						SET @CCMD=N'UPDATE A  SET CANCELLED=B.CANCELLED,REMARKS=(CASE WHEN B.CANCELLED=1 THEN
									''CANCELLED IN MULTIPLE DEBIT NOTE SAVING DUE TO NET DEBIT BALANCE STANDING...'' ELSE REMARKS END)
									FROM '+@CTEMPMASTERTABLE+' A
									JOIN #TMPDNSUPPLIER B ON A.AC_CODE=B.AC_CODE 
									WHERE A.SP_ID='''+LTRIM(RTRIM(@NSPID))+''' '
						EXEC SP_EXECUTESQL @CCMD	
				
						SET @cStep=110
						--no any stock reduce in case of cancelled memo in multiple DN
						Delete a from #BARCODE_NETQTY a
						where new_entry =1

						IF ISNULL(@CCANCELLEDMEMO,'')=''
						   SET @CCANCELLEDMEMO=@CKEYFIELDVAL1
						ELSE 
						 SET @CCANCELLEDMEMO=@CCANCELLEDMEMO+','+@CKEYFIELDVAL1
				
						  IF NOT EXISTS(SELECT TOP 1 'U' FROM PRT_RMD01106_UPLOAD A (NOLOCK) 
						  WHERE SP_ID=@CINSSPID)
						  begin
				     
							   IF not EXISTS (SELECT TOP 1 'U' FROM #TMPDNSUPPLIER WHERE CANCELLED=0)
							   BEGIN
									 set @cErrormsg='MULTIPLE DEBIT NOTE CAN NOT BE SAVED DUE TO NET DEBIT BALANCE STANDING...'
									 SELECT '('+ LM.AC_NAME+')'+ 'MULTIPLE DEBIT NOTE CAN NOT BE SAVED DUE TO NET DEBIT BALANCE STANDING...' AS ERRMSG ,
											'' AS STATUSMSG,'LATER' AS MEMO_ID
									 FROM #TMPDNSUPPLIER A
									 JOIN LM01106 LM (NOLOCK) ON A.AC_CODE =LM.AC_CODE 
									 WHERE A.CANCELLED =1
									 GOTO END_PROC
								END
						   END
					   END
			       END
			   END --END OF ELSE 
		 END --END OF SUPPLIER BALANCE CHECK
			
	
		IF @NUPDATEMODE=2 
		BEGIN

			SET @cStep = 195		-- SETTTING UP ENVIRONMENT
			EXEC SP_CHKXNSAVELOG 'PUR',@cStep,1,@nSpId,'',1	 
			

			IF @bReUpdateAllRmd=1 OR @nBoxupdatemode=0
				update rmd01106 with (rowlock) SET rm_id='XXXXXXXXXX',row_id=@CLOCATIONID + CONVERT(VARCHAR(40), NEWID()) WHERE rm_id=@CKEYFIELDVAL1
			ELSE
				update rmd01106 with (rowlock) SET rm_id='XXXXXXXXXX',row_id=@CLOCATIONID + CONVERT(VARCHAR(40), NEWID()) WHERE rm_id=@CKEYFIELDVAL1 AND box_no=@NBOXNO

		END
		
		SET @cStep=125.6

		declare @lInsertonly bit

		SET @lInsertonly = (CASE WHEN @NUPDATEMODE=1 THEN 1 ELSE 0 END)
		SElect @lUpdateonly=0

		IF @nEntrymode=2
		BEGIN
			SET @cStep=125.8
			UPDATE dnps_mst WITH  (ROWLOCK)  SET prt_rm_id= @CKEYFIELDVAL1 FROM 
			(SELECT DISTINCT PS_ID FROM  PRT_rmd01106_upload a (NOLOCK)  
				WHere SP_ID=@nSpId) B WHERE B.PS_ID=dnps_MST.PS_ID
		END
		
		SET @cStep=126.2
	
		--SELECT TOP 1 @nPurCdPct=pur_cd_percentage FROM prt_rmd01106_upload (NOLOCK) WHERE sp_id=@nSpId
		--UPDATE prt_rmm01106_upload WITH (ROWLOCK) SET cd_percentage=@nPurCdPct  WHERE sp_id=@nSpId
		
		SET @cStep=127.2
		EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPMASTERTABLENAME
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CMASTERTABLENAME
			, @CKEYFIELD1	= @CKEYFIELD1
			, @BALWAYSUPDATE = 1
			, @CFILTERCONDITION=@cWhereClause
			, @LUPDATEONLY = @LUPDATEONLY
			, @LINSERTONLY =  @lINSERTONLY
			, @LUPDATEXNS =  @lINSERTONLY   


		--at the time of multiple debinote problem in memo prefix so update update memo_prefix in  rmm

		IF @NUPDATEMODE =1
			UPDATE A SET Auto_prefix =@CMEMOPREFIXPROC FROM RMM01106 A (NOLOCK) WHERE RM_ID=@CKEYFIELDVAL1
   
 
		-- UPDATING TRANSACTION TABLE (PID01106) FROM TEMP TABLE
		SET @cStep = 130		-- UPDATING TRANSACTION TABLE

		-- UPDATING ROW_ID IN TEMP TABLES
		SET @CCMD = N'UPDATE ' + @CTEMPDETAILTABLE + ' SET ROW_ID = ''' + @CLOCATIONID + ''' + CONVERT(VARCHAR(40), NEWID())
					  WHERE SP_ID='''+LTRIM(RTRIM(@NSPID))+''' and LEFT(ROW_ID,5) = ''LATER'''
		EXEC SP_EXECUTESQL @CCMD
		
		-- INSERTING/UPDATING THE ENTRIES IN PRD_JID TABLE FROM TEMPTABLE
		SET @cStep = 140		-- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES
		DECLARE @CWHERECLAUSERmd VARCHAR(500)

		SET @cStep = 272.9		-- UPDATING TRANSACTION TABLE - INSERTING NEW ENTRIES
		EXEC SP_CHKXNSAVELOG 'PUR',@cStep,0,@nSpId,'',1

		SET @CWHERECLAUSERmd = @CWHERECLAUSE 
		IF @bReUpdateAllRmd=1
			SET @CWHERECLAUSERmd = ' (SP_ID='''+LTRIM(RTRIM(@NSPID))+''' OR SP_ID='''+left(LTRIM(RTRIM(@nSPID)),38)+'ZZZ'')'
			
		EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN
				@CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPDETAILTABLENAME
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CDETAILTABLENAME
			, @CKEYFIELD1	= 'ROW_ID'
			, @BALWAYSUPDATE = 1
			, @LINSERTONLY =  1
			, @LUPDATEXNS =  1
			, @lUpdateonly = @lUpdateonly
			, @CFILTERCONDITION=@CWHERECLAUSERmd

			
		IF @cDonotPickCdinDN<>'1'
			UPDATE A SET A.PUR_CD_PERCENTAGE=B.cr_discount_percentage
			FROM RMD01106 A
			JOIN PIM01106 B ON A.mrr_id=B.mrr_id
			WHERE ISNULL(A.mrr_id,'') <>''
			AND A.RM_ID=@cKeyfieldval1
		

		if exists ( SELECT TOP 1 'U' FROM PRT_XNBOXDETAILS_UPLOAD WHERE SP_ID=@NSPID)
		begin
		   
		   SET @LINSERTONLY=1
		   SET @LUPDATEONLY=0
		   IF @NUPDATEMODE <>1 AND  EXISTS (SELECT TOP 1'U' FROM XNBOXDETAILS A (NOLOCK) WHERE A.REF_MEMO_ID =@CKEYFIELDVAL1 
		        AND A.XN_TYPE ='PRT' AND BOX_NO =@NBOXNO)
			BEGIN
			   SET @LUPDATEONLY=1
			   SET @LINSERTONLY=0
			END

			UPDATE PRT_XNBOXDETAILS_UPLOAD SET REF_MEMO_ID =@CKEYFIELDVAL1 WHERE SP_ID=@NSPID
		 
		   EXEC UPDATEMASTERXN_OPT--UPDATEMASTERXN 
			  @CSOURCEDB	= @CTEMPDBNAME
			, @CSOURCETABLE = @CTEMPXNBOXDETAILSNAME
			, @CDESTDB		= ''
			, @CDESTTABLE	= @CxnBoxDetails
			, @CKEYFIELD1	= 'Ref_memo_id'
			, @CKEYFIELD2    ='xn_type'
			, @CKEYFIELD3   ='Box_no'
			, @BALWAYSUPDATE = 1
			, @CFILTERCONDITION=@cWhereClause
			, @LINSERTONLY =  @LINSERTONLY
		    ,@LUPDATEONLY  =@LUPDATEONLY
		    , @LUPDATEXNS =  1 



		end



		SET @cStep=142

						
LBLUPDATEPMT:
			
		
		-- UPDATING STOCK OF PMT W.R.T. CURRENT MEMO
		EXEC SP3S_UPDATE_PMTSTOCK_PRT
		@cMemoId=@cMemoId,
		@bREvertFlag=0,
		@NENTRYMODE=@NENTRYMODE,
		@nDnType=@nDnType ,
		@BALLOWNEGSTOCK=@BALLOWNEGSTOCK,
		@nSpId=@nSpId,
		@CERRORMSG=@CERRORMSG OUTPUT,
		@BNEGSTOCKFOUND=@BNEGSTOCKFOUND OUTPUT

		

		IF  @BNEGSTOCKFOUND=1 OR @CERRORMSG<>''
			GOTO END_PROC

LBLVALIDATE:		
		
		 set @cStep=150
		  
	
	--discarded as per sanjiv sir 10-07-2021 call after complete memo saving
		----IF @NUPDATEMODE IN (1,2,5,10,11) and ISNULL(@cErrormsg,'')=''
		----	EXEC SP3S_UPDATERFNET_PRT @cKeyfieldVal1

	 IF @NUPDATEMODE <>3
	 BEGIN
		SET @cStep = 155		-- VALIDATING ENTRIES
		EXEC VALIDATEXN
			  @CXNTYPE	= 'PRT'
			, @CXNID	= @CKEYFIELDVAL1
			, @NUPDATEMODE = @NUPDATEMODE
			, @CCMD		= @CCMDOUTPUT OUTPUT
			, @CUSERCODE = @CWIZAPPUSERCODE
			,@CDEPT_ID=@CLOCATIONID 

		IF @CCMDOUTPUT <> ''
		BEGIN
			SET @CERRORMSG = 'STEP- ' + LTRIM(STR(@cStep)) + ' DATA VALIDATION FAILED : ' + @CCMDOUTPUT + '...'
			GOTO END_PROC
		END


		IF @NPRTMODE=1
		BEGIN
			SET @cStep = 156		-- VALIDATING ENTRIES
			EXEC SP3S_VALIDATE_DN_CDPCT
			@cMemoId=@CKEYFIELDVAL1,
			@cErrormsg=@cErrormsg OUTPUT 

			IF ISNULL(@cErrormsg,'')<>''
			GOTO END_PROC
		END	

	END


	

			-- in case of sis location direct Receive challan & update pmt

    LBLAUTORECEIVECHALLAN:
	 DECLARE  @CMRRID VARCHAR(50),@DRECEIPTDT DATETIME
	 
	 SELECT TOP 1 @DRECEIPTDT=RM_DT,@NMODE=mode FROM RMM01106 (NOLOCK) WHERE RM_ID=@CKEYFIELDVAL1

	IF @NUPDATEMODE<>1 and @NMODE=2
		BEGIN
			SET @cStep = 157 --cancelled handle in this proc
			EXEC SP3S_VALIDATE_SERVERLOCSTOCK_PRT @CKEYFIELDVAL1,@CERRORMSG OUTPUT ,@NUPDATEMODE

			IF @CERRORMSG<>''
			GOTO END_PROC


			 IF EXISTS(SELECT TOP 1 'U' FROM PARCEL_MST A (nolock) JOIN parcel_det B (nolock) ON A.parcel_memo_id=B.parcel_memo_id
                            WHERE REF_MEMO_ID=@CKEYFIELDVAL1 AND A.XN_TYPE='PRT')
		 BEGIN	
				SET @cStep = 159
				IF EXISTS( SELECT TOP 1 'U' FROM   RMM01106  A (NOLOCK) JOIN LOCATION L (NOLOCK) ON a.location_Code=L.DEPT_ID 
	        		JOIN LOCATION L1 (NOLOCK) ON A.PARTY_DEPT_ID  =L1.DEPT_ID 
	         		WHERE A.RM_ID=@CKEYFIELDVAL1 AND ISNULL(L.SERVER_LOC,0)=1  AND ISNULL(L1.SERVER_LOC,0)=1 
	        		AND (ISNULL(L1.SIS_LOC ,0)=1 OR ISNULL(L.SIS_LOC ,0)=1 ) AND A.MODE =2 and CANCELLED=0
			   )
			  BEGIN
			       
			       EXEC SP3S_INS_DOC_MIRROR_TABLES  2, @CKEYFIELDVAL1  
				   

				   SET @cStep = 161
					 EXEC SAVETRAN_MERGE_MIRROR_DOCPRT_DATA 
						@CMEMOID = @CKEYFIELDVAL1,  
						@DRECEIPTDT = @DRECEIPTDT, 
						@DLOGINDT = @DRECEIPTDT, 
						@CMEMONOPREFIX = '', 
						@CWIZAPPUSERCODE = '0000000', 
						@CERRMSG = @CERRORMSG OUTPUT, 
	
					    @BNEGSTOCKFOUND = @BNEGSTOCKFOUND OUTPUT, 
						@CCNID = @CMRRID OUTPUT ,
						@BCALLEDFORSISLOC=1
					

				end

		
	 END   

	 --END SIS LOCATION CHALLANS

	   END

		SET @cStep = 165
		IF @NPRTMODE=2
		BEGIN
		     if isnull(@CMULTIPLRM_ID,'')=''
			    SET @CMULTIPLRM_ID=@CKEYFIELDVAL1
			 ELSE 
			   SET @CMULTIPLRM_ID=@CMULTIPLRM_ID+','+@CKEYFIELDVAL1

			GOTO LBLGENMULTIDN
		END

	
	   GOTO END_PROC
		
LBLAPPROVEPRT:
		
		SET @cStep = 165
		
		DECLARE @NAPPROVALSTATUS NUMERIC(1,0)
		
		SELECT @BPURLOC=PUR_LOC FROM LOCATION (NOLOCK) WHERE DEPT_ID=@CLOCATIONID
		
		IF @CMEMOID=''
		BEGIN
			SET @CERRORMSG='MEMO ID REQUIRED FOR DEBIT NOTE APPROVAL......CANNOT PROCEED'
			GOTO END_PROC
		END
		
		SET @cStep = 170
		
				
		IF @CLOCATIONID<>@CHODEPTID
		BEGIN
		
			SET @cStep = 175
			
			SELECT @NAPPROVALSTATUS=APPROVED FROM RMM01106 (NOLOCK) WHERE RM_ID=@CMEMOID
			
			IF @NAPPROVALSTATUS<>0
				SET @CERRORMSG='DEBIT NOTE IS ALREADY '+(CASE WHEN @NAPPROVALSTATUS=1 THEN ' MARKED FOR REQUEST OF APPROVAL FROM HO ' 
								WHEN @NAPPROVALSTATUS=2 THEN 'APPROVED BY HO' ELSE 'DISAPPROVED BY HO' END)
			ELSE					
				UPDATE RMM01106 SET  APPROVED=1,LAST_UPDATE=GETDATE()
			    WHERE RM_ID=@CMEMOID
			
		END	
	 	ELSE
	 	BEGIN
	 		SET @cStep = 180
	 		
			UPDATE RMM01106 SET  APPROVED=(CASE WHEN @NAPPROVEMODE=1 THEN 2 ELSE 3 END),LAST_UPDATE=GETDATE()
			WHERE RM_ID=@CMEMOID
			
			INSERT XN_APPROVAL_DET	( XN_TYPE, XN_ID, APPROVED_BY_USER_CODE, APPROVED_ON, APPROVED_BY_USER_IP,
			 APPROVED_BY_USER_COMPUTERNAME,APPROVED_BY_WINDOWUSER_NAME,APPROVED )  
			 SELECT 'XNSPRT' AS XN_TYPE,@CMEMOID AS XN_ID,@CWIZAPPUSERCODE AS APPROVED_BY_USER_CODE,
			 GETDATE() AS APPROVED_ON,@CCOMPUTERIP AS APPROVED_BY_USER_IP,@CMACHINENAME AS APPROVED_BY_USER_COMPUTERNAME,
			 @CWINDOWUSERNAME AS APPROVED_BY_WINDOWUSER_NAME,@NAPPROVEMODE AS APPROVED
			 
		END
				
 		SET @CKEYFIELDVAL1=@CMEMOID


		GOTO END_PROC


lblUPDATEDATE:
	IF @NUPDATEMODE = 12
	BEGIN
		  

		SET @cStep = 190

		EXEC SP3S_CAPTURE_AUDIT_TRAIL 'PRT',@CMEMOID,@CTEMPMASTERTABLE,@CTEMPDETAILTABLE,@NSPID,@CMACHINENAME,@CWINDOWUSERNAME,@CWIZAPPUSERCODE,4,@DMEMODTpARA
			
		DECLARE @DOLDMemoDT DATETIME
		SET @cStep = 200
			
		SELECT TOP 1 @DOLDMemoDT=RM_DT FROM RMM01106 (NOLOCK) WHERE RM_ID=@CMEMOID
			
		UPDATE RMM01106 WITH (ROWLOCK) SET RM_DT=@dMEMODTPara,LAST_UPDATE=GETDATE() WHERE RM_ID=@CMEMOID
		SET @CKEYFIELDVAL1=@CMEMOID
			
		SET @CERRORMSG = ''
			
		SET @cStep = 210
		EXEC SP_CHKXNSAVELOG 'SLS',@cStep,0,@NSPID,1
			
		EXEC VALIDATE_XN_DATA_FREEZE  'PRT',@CWIZAPPUSERCODE,@CMEMOID ,@DMEMODTPARA,@CERRORMSG OUTPUT
		IF @CERRORMSG <> '' 
			GOTO END_PROC
			
			
			
		SET @cStep = 220
		EXEC SP_VALIDATE_MEMODATE_OPT
		@CXNTYPE='PRT',
		@CXNID=@CMEMOID,
		@CERRORMSG=@CERRORMSG OUTPUT
			
		IF @CERRORMSG <> ''
			GOTO END_PROC

	END


	END TRY
	BEGIN CATCH
		print 'enter catch of savetran_prt'
		SET @CERRORMSG = 'Error in Savetran_prt at STEP- ' + LTRIM(RTRIM(@cStep)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		
		GOTO END_PROC
	END CATCH

	
END_PROC:
	
	

	UPDATE rmm01106 WITH (ROWLOCk) SET last_update=getdate() WHERE rm_id=@CKEYFIELDVAL1

	PRINT 'LAST STEP oa apr : '+STR(@cStep)	
	IF @NPRTMODE=2
		SET @CSTATUSMSG=LTRIM(RTRIM(STR(@NMULTIDNCNT)))+' NO. OF DEBIT NOTES ('+@CFIRSTDNNO+'-'+@CLASTDNNO+') GENERATED'
	
	DECLARE @CGSTDEPT_ID VARCHAR(4)

	SELECT @CGSTDEPT_ID=CASE WHEN ISNULL(ACCOUNTS_DEPT_ID,'')<>'' THEN ACCOUNTS_DEPT_ID ELSE location_code END FROM RMM01106 (NOLOCK) WHERE RM_ID=@CKEYFIELDVAL1
	
	IF ISNULL(@CERRORMSG,'')='' AND @NUPDATEMODE<>3
	begin

	   EXEC SP3S_VALIDATE_GST_PERCENTAGE @CXNTYPE='PRT',@CXNID=@CKEYFIELDVAL1,@CCURDEPT_ID=@CGSTDEPT_ID,@CERRORMSG=@CERRORMSG OUTPUT  

	end
	IF @@TRANCOUNT>0
	BEGIN

		IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')='' and isnull(@BNEGSTOCKFOUND,0)=0
		BEGIN
			
			IF @EDIT_CLICKED=1
			   EXEC SP3S_CAPTURE_AUDIT_TRAIL 'PRT',@CMEMOID,'','',@@SPID,@CMACHINENAME,@CWINDOWUSERNAME,@CWIZAPPUSERCODE,0,'1900-01-01',@EDIT_CLICKED
			
			commit TRANSACTION
		    DELETE A  FROM XNTYPE_CHECKSUM_MST A  WITH (ROWLOCK)  WHERE SP_ID=@NSPID
			update rmm01106 with (rowlock) set LAST_UPDATE=GETDATE(),reconciled=0 WHERE rm_id=@CKEYFIELDVAL1


		END	
		ELSE
		BEGIN
		    ROLLBACK	
			DELETE A  FROM XNTYPE_CHECKSUM_MST A  WITH (ROWLOCK)  WHERE SP_ID=@NSPID
		END
	END	
	
	
	
	IF @bPendingForPostingError=0 AND @bBlankBillDetails=0 AND ISNULL(@bNegstockfound,0)=0
	BEGIN
		INSERT @OUTPUT ( ERRMSG, MEMO_ID,STATUSMSG)
				VALUES ( ISNULL(@CERRORMSG,''),CASE WHEN ISNULL(@CMULTIPLRM_ID,'')<>'' THEN @CMULTIPLRM_ID ELSE ISNULL(@CKEYFIELDVAL1,'') END ,
				       ISNULL(@CSTATUSMSG,'') +(CASE WHEN ISNULL(@CCANCELLEDMEMO,'')<>'(Cancelled:'+@CCANCELLEDMEMO+')' THEN '' ELSE ''END) )
		
		SELECT * FROM @OUTPUT	
	END	
	ELSE
	IF @bPendingForPostingError=1
	BEGIN
		SELECT '' AS PRODUCT_CODE,* FROM  @OUTPUT	
	END	
	
	DECLARE @CINVMODE VARCHAR(10)
	SELECT @CINVMODE = MODE FROM RMM01106 (NOLOCK) WHERE RM_ID=@CKEYFIELDVAL1
	
	-----CHANGES BY SUMIT ON 28082017 FOR INSERT DATA INTO UPLOAD MIRROR TABLES-----------
LBLINSERTUPLOADMIRRORDOC:

	IF ISNULL(@CERRORMSG,'')='' 
    BEGIN
			 
		 IF EXISTS(SELECT TOP 1'U' FROM location (NOLOCK) WHERE DEPT_ID=@cLocationId  AND server_loc=1) 
         AND EXISTS(SELECT TOP 1 'U' FROM location A  (NOLOCK)
                    JOIN rmm01106 B (NOLOCK) ON A.dept_id=B.party_dept_id
                    JOIN LOCATION C (NOLOCK) ON C.DEPT_ID=b.location_Code   
					 WHERE A.server_loc=1 AND RM_ID=@CKEYFIELDVAL1 AND MODE=2
							  AND B.APPROVED=(CASE WHEN C.STN_APPROVAL = 1 THEN 2 ELSE B.APPROVED END) and isnull(a.SIS_LOC,0)=0  and  isnull(c.SIS_LOC,0)=0)
				 BEGIN
						 IF (@bdonotsendchallanwithoutdispatch=1 and @NUPDATEMODE <>3
						 AND EXISTS(SELECT TOP 1 'U' FROM PARCEL_MST A (NOLOCK) JOIN parcel_det B (NOLOCK) ON A.parcel_memo_id=B.parcel_memo_id
									WHERE REF_MEMO_ID=@CKEYFIELDVAL1 AND A.XN_TYPE='PRT')) OR (@bdonotsendchallanwithoutdispatch=0)
						EXEC SP3S_INS_DOC_MIRROR_TABLES  2, @CKEYFIELDVAL1    
						 Else if @NUPDATEMODE =3
						 begin
						     
							     Delete a from DOCPRT_rmm01106_MIRROR a (nolock) where rm_id=@CKEYFIELDVAL1
								 Delete a from DOCPRT_rmd01106_MIRROR a (nolock) where rm_id=@CKEYFIELDVAL1

								 IF EXISTS (SELECT TOP 1 'U' FROM rmm01106 A (NOLOCK)
								 JOIN cnm01106 B (NOLOCK) ON  A.rm_id =B.rm_id 
								  WHERE A.rm_id =@CKEYFIELDVAL1 AND B.CANCELLED =0 AND B.RECEIPT_DT <>'')
								  BEGIN
						       
									   	EXEC SP3S_INS_DOC_MIRROR_TABLES  2, @CKEYFIELDVAL1      

								  END


						 end

				 END
			 ELSE
				BEGIN
				         IF EXISTS( SELECT * FROM LOCATION (NOLOCK) WHERE DEPT_ID =@CLOCATIONID AND ISNULL(SERVER_LOC,0) =1)
				           SET @CLOCATIONID=@CHODEPTID
			 END
			 
			 
			 
         
           
    END  
	declare @nInSSpid varchar(45)
	EXEC SP_DELETEUPLOADTABLES 'PRT',@nSpId
	set @nInsSpId=@nSpid+@CLOCATIONID

    EXEC SP_DELETEUPLOADTABLES 'PRT',@nInsSpId
	
	DELETE FROM PRT_XNBOXDETAILS_UPLOAD WHERE SP_ID=@NSPID
---------------------------------------------
	--LOG STARTTIME/ENDTIME
	IF ISNULL(@CERRORMSG,'')='' AND ISNULL(@CCMDOUTPUT,'')='' AND ISNULL(@BNEGSTOCKFOUND,0)=0	AND @bBlankBillDetails=0
		EXEC SP3S_LOGPROCESSTIME 'PRT','SAVETRAN EXECUTION',@CKEYFIELDVAL1,@NSPID,1,@DSTARTTIME,@NUPDATEMODE


END--SAVETRAN_PRT
------------------------------------------------------ END OF PROCEDURE SAVETRAN_PRT