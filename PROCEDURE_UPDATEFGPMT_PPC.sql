CREATE PROCEDURE UPDATEFGPMT_PPC
		@CXNTYPE VARCHAR(10),
		@CXNNO VARCHAR(40),
		@CXNID VARCHAR(40),
		@NREVERTFLAG BIT = 0,
		@NALLOWNEGSTOCK BIT = 0,
		@NCHKDELBARCODES BIT = 0,
		@NUPDATEMODE INT=0,	
		@CCMD NVARCHAR(4000) OUTPUT

		--*** PARAMETERS :
		--*** @CXNTYPE - TRANSACTION TYPE (MODULE SPECIFIC)
		--*** @CXNNO - TRANSACTION NO ( MEMO NO OF MASTER TABLE )
		--*** @CXNID - TRANSACTION ID ( MEMO ID OF MASTER TABLE )
		--*** @NREVERTFLAG - A FLAG TO INDICATE WHETHER THIS PROCEDURE IS CALLED TO REVERT STOCK
		--*** @NALLOWNEGSTOCK - FLAG TO INDICATE WHETHER OR NOT ALLOW NEGATIVE STOCK
		--*** @NRETVAL - OUTPUT PARAMETER RETURNED BY THIS PROCEDURE (BIT 1-SUCCESS, 0-UNSUCCESS)
--WITH ENCRYPTION
AS
BEGIN



	DECLARE @NOUTFLAG INT, @NRETVAL BIT,@CXNTABLE VARCHAR(50),@CEXPR NVARCHAR(500),@CXNIDPARA VARCHAR(50),
			@BCANCELLED BIT
	
	SET @NRETVAL = 0
	SET @CCMD = ''

		
	--*** STARTING STOCK UPDATION FOR PURCHASE 
	IF @CXNTYPE IN ('FGISS')				-- PURCHASE INVOICE
	BEGIN
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = 1
		ELSE
			SET @NOUTFLAG = -1

		UPDATE PPC_FG_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_CODE, SUM(QUANTITY) AS QUANTITY 
				FROM PPC_AGENCY_ISSUE_FG_DET B
				JOIN PPC_AGENCY_ISSUE_FG_MST C ON C.MEMO_ID=B.MEMO_ID
				WHERE B.MEMO_ID = @CXNID 
				GROUP BY B.PRODUCT_CODE
			) B
			WHERE PPC_FG_PMT.PRODUCT_CODE = B.PRODUCT_CODE 
			

		SET @NRETVAL = 1		--*** SUCCESS
		
		SELECT @BCANCELLED=CANCELLED FROM PPC_AGENCY_ISSUE_FG_MST WHERE MEMO_ID=@CXNID
		
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1 OR @NUPDATEMODE IN (4,5)
		BEGIN
			--PRINT 'CHECKING FOR NEGATIVE STOCK'
			PRINT 'PMT NEGATIVE START'
			IF EXISTS ( SELECT A.PRODUCT_CODE FROM PPC_FG_PMT A JOIN
						(SELECT B.PRODUCT_CODE, SUM(B.QUANTITY) AS QUANTITY 
						FROM PPC_AGENCY_ISSUE_FG_DET B
						JOIN PPC_AGENCY_ISSUE_FG_MST C ON C.MEMO_ID=B.MEMO_ID
						WHERE B.MEMO_ID = @CXNID
						GROUP BY B.PRODUCT_CODE
						) B ON B.PRODUCT_CODE=A.PRODUCT_CODE 
						WHERE A.QUANTITY_IN_STOCK < 0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK FROM PPC_FG_PMT A  JOIN
						(SELECT B.PRODUCT_CODE, SUM(B.QUANTITY) AS QUANTITY 
						FROM PPC_AGENCY_ISSUE_FG_DET B
						JOIN PPC_AGENCY_ISSUE_FG_MST C ON C.MEMO_ID=B.MEMO_ID
						WHERE B.MEMO_ID = '''+@CXNID+''' 
						GROUP BY B.PRODUCT_CODE) B ON B.PRODUCT_CODE=A.PRODUCT_CODE 
						WHERE A.QUANTITY_IN_STOCK < 0 '
			END
		END	
	    
	END			-- END OF LABEL FG ISSUE
	
	
	
	IF @CXNTYPE IN ('ISSPR')				--FOR ISSUE BARCODE PRINT
	BEGIN
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = 1
		ELSE
			SET @NOUTFLAG = -1
        
        	

		UPDATE PPC_FG_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_CODE, SUM(QUANTITY) AS QUANTITY 
				FROM PPC_AGENCY_ISSUE_FG_FIRST_DET B
				JOIN PPC_AGENCY_ISSUE_FG_FIRST_MST C ON C.MEMO_ID=B.MEMO_ID
				WHERE B.MEMO_ID = @CXNID 
				GROUP BY B.PRODUCT_CODE
			) B
			WHERE PPC_FG_PMT.PRODUCT_CODE = B.PRODUCT_CODE 
			

		SET @NRETVAL = 1		--*** SUCCESS
		
		SELECT @BCANCELLED=CANCELLED FROM PPC_AGENCY_ISSUE_FG_MST WHERE MEMO_ID=@CXNID
		
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1 OR @NUPDATEMODE IN (4,5)
		BEGIN
			--PRINT 'CHECKING FOR NEGATIVE STOCK'
			PRINT 'PMT NEGATIVE START'
			IF EXISTS ( SELECT A.PRODUCT_CODE FROM PPC_FG_PMT A JOIN
						(SELECT B.PRODUCT_CODE, SUM(B.QUANTITY) AS QUANTITY 
						FROM PPC_AGENCY_ISSUE_FG_FIRST_DET B
						JOIN PPC_AGENCY_ISSUE_FG_FIRST_MST C ON C.MEMO_ID=B.MEMO_ID
						WHERE B.MEMO_ID = @CXNID
						GROUP BY B.PRODUCT_CODE
						) B ON B.PRODUCT_CODE=A.PRODUCT_CODE 
						WHERE A.QUANTITY_IN_STOCK < 0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK FROM PPC_FG_PMT A  JOIN
						(SELECT B.PRODUCT_CODE, SUM(B.QUANTITY) AS QUANTITY 
						FROM PPC_AGENCY_ISSUE_FG_FIRST_DET B
						JOIN PPC_AGENCY_ISSUE_FG_FIRST_MST C ON C.MEMO_ID=B.MEMO_ID
						WHERE B.MEMO_ID = '''+@CXNID+''' 
						GROUP BY B.PRODUCT_CODE) B ON B.PRODUCT_CODE=A.PRODUCT_CODE 
						WHERE A.QUANTITY_IN_STOCK < 0 '
			END
		END	
	    
	END			-- END OF LABEL FG ISSUE
    
   --FOR WHOLE SALE INVOICE START
    IF @CXNTYPE IN ('PPCWSL')				--FOR ISSUE BARCODE PRINT
	BEGIN
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = 1
		ELSE
			SET @NOUTFLAG = -1
        
        	

		UPDATE PPC_FG_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_CODE, SUM(QUANTITY) AS QUANTITY 
				FROM PPC_IND01106 B
				JOIN PPC_INM01106 C ON C.INV_ID=B.INV_ID
				WHERE B.INV_ID = @CXNID 
				GROUP BY B.PRODUCT_CODE
			) B
			WHERE PPC_FG_PMT.PRODUCT_CODE = B.PRODUCT_CODE 
			

		SET @NRETVAL = 1		--*** SUCCESS
		
		SELECT @BCANCELLED=CANCELLED FROM PPC_INM01106 WHERE INV_ID=@CXNID
		
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1 OR @NUPDATEMODE IN (4,5)
		BEGIN
			--PRINT 'CHECKING FOR NEGATIVE STOCK'
			PRINT 'PMT NEGATIVE START'
			IF EXISTS ( SELECT A.PRODUCT_CODE FROM PPC_FG_PMT A JOIN
						(SELECT B.PRODUCT_CODE, SUM(B.QUANTITY) AS QUANTITY 
						FROM PPC_IND01106 B
						JOIN PPC_INM01106 C ON C.INV_ID=B.INV_ID
						WHERE B.INV_ID = @CXNID
						GROUP BY B.PRODUCT_CODE
						) B ON B.PRODUCT_CODE=A.PRODUCT_CODE 
						WHERE A.QUANTITY_IN_STOCK < 0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK FROM PPC_FG_PMT A  JOIN
						(SELECT B.PRODUCT_CODE, SUM(B.QUANTITY) AS QUANTITY 
						FROM PPC_IND01106 B
						JOIN PPC_INM01106 C ON C.INV_ID=B.INV_ID
						WHERE B.INV_ID = '''+@CXNID+''' 
						GROUP BY B.PRODUCT_CODE) B ON B.PRODUCT_CODE=A.PRODUCT_CODE 
						WHERE A.QUANTITY_IN_STOCK < 0 '
			END
		END	
	    
	END

   -- FOE WHOLESALE END
   
   
    --FOR TRANSFER TO TRADING
    IF @CXNTYPE IN ('PPCTTM')
	BEGIN
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = 1
		ELSE
			SET @NOUTFLAG = -1
        
        	

		UPDATE PPC_FG_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_CODE, SUM(QUANTITY) AS QUANTITY 
				FROM PPC_TRANSFER_TO_TRADING_DET B
				JOIN PPC_TRANSFER_TO_TRADING_MST  C ON C.MEMO_ID =B.MEMO_ID
				WHERE B.MEMO_ID = @CXNID 
				GROUP BY B.PRODUCT_CODE
			) B
			WHERE PPC_FG_PMT.PRODUCT_CODE = B.PRODUCT_CODE 
			

		SET @NRETVAL = 1		--*** SUCCESS
		
		SELECT @BCANCELLED=CANCELLED FROM PPC_INM01106 WHERE INV_ID=@CXNID
		
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1 OR @NUPDATEMODE IN (4,5)
		BEGIN
			--PRINT 'CHECKING FOR NEGATIVE STOCK'
			PRINT 'PMT NEGATIVE START'
			IF EXISTS ( SELECT A.PRODUCT_CODE FROM PPC_FG_PMT A JOIN
						(SELECT B.PRODUCT_CODE, SUM(B.QUANTITY) AS QUANTITY 
						FROM PPC_TRANSFER_TO_TRADING_DET B
						JOIN PPC_TRANSFER_TO_TRADING_MST C ON C.MEMO_ID =B.MEMO_ID
						WHERE B.MEMO_ID = @CXNID
						GROUP BY B.PRODUCT_CODE
						) B ON B.PRODUCT_CODE=A.PRODUCT_CODE 
						WHERE A.QUANTITY_IN_STOCK < 0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK FROM PPC_FG_PMT A  JOIN
						(SELECT B.PRODUCT_CODE, SUM(B.QUANTITY) AS QUANTITY 
						FROM PPC_TRANSFER_TO_TRADING_DET B
						JOIN PPC_TRANSFER_TO_TRADING_MST C ON C.MEMO_ID=B.MEMO_ID
						WHERE B.MEMO_ID = '''+@CXNID+''' 
						GROUP BY B.PRODUCT_CODE) B ON B.PRODUCT_CODE=A.PRODUCT_CODE 
						WHERE A.QUANTITY_IN_STOCK < 0 '
			END
		END	
		
		
		
	 IF ISNULL(@CCMD,'')<>''
	   GOTO END_PROC
		---MAIN PMT	
		
		PRINT 'ENTER TTM STOCK UPDATE MAIN PMT '
		
		UPDATE PMT01106 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK + ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_CODE,LEFT(C.MEMO_ID,2) AS DEPT_ID, SUM(B.QUANTITY ) AS QUANTITY 
				FROM PPC_TRANSFER_TO_TRADING_DET B
				JOIN PPC_TRANSFER_TO_TRADING_MST  C ON C.MEMO_ID=B.MEMO_ID
				JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
				JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
				WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
				GROUP BY B.PRODUCT_CODE,LEFT(C.MEMO_ID,2)
			) B
			WHERE PMT01106.PRODUCT_CODE = B.PRODUCT_CODE 
			AND PMT01106.DEPT_ID = B.DEPT_ID



	  SET @NRETVAL = 1		--*** SUCCESS

      PRINT 'ENTER BFP STOCK UPDATE-3'
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		
		SELECT @BCANCELLED=CANCELLED FROM PPC_TRANSFER_TO_TRADING_MST WHERE MEMO_ID=@CXNID
		
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1
		BEGIN
			PRINT 'ENTER XFR STOCK UPDATE-4'
			
			IF EXISTS ( SELECT A.PRODUCT_CODE FROM PMT01106 A JOIN
						(
							SELECT B.PRODUCT_CODE,LEFT(C.MEMO_ID,2) AS DEPT_ID, SUM(B.QUANTITY ) AS QUANTITY 
							FROM PPC_TRANSFER_TO_TRADING_DET  B
							JOIN PPC_TRANSFER_TO_TRADING_MST C ON C.MEMO_ID=B.MEMO_ID
							JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = @CXNID AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_CODE,LEFT(C.MEMO_ID,2)
						) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID =A.DEPT_ID
						WHERE A.QUANTITY_IN_STOCK < 0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS
				
				
				PRINT 'ENTER XFR STOCK UPDATE-5'
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK FROM PMT01106 A  JOIN
						(
							SELECT B.PRODUCT_CODE,LEFT(C.MEMO_ID,2) AS DEPT_ID, SUM(B.QUANTITY) AS QUANTITY 
							FROM PPC_TRANSFER_TO_TRADING_DET B
							JOIN PPC_TRANSFER_TO_TRADING_MST C ON C.MEMO_ID=B.MEMO_ID
							JOIN SKU D ON B.PRODUCT_CODE = D.PRODUCT_CODE
							JOIN ARTICLE E ON D.ARTICLE_CODE = E.ARTICLE_CODE
							WHERE B.MEMO_ID = '''+@CXNID+''' AND E.STOCK_NA=0
							GROUP BY B.PRODUCT_CODE,LEFT(C.MEMO_ID,2)
						) B ON B.PRODUCT_CODE=A.PRODUCT_CODE AND B.DEPT_ID =A.DEPT_ID
						WHERE A.QUANTITY_IN_STOCK < 0 '
			END
				--PRINT @CCMD
		END	
	    
	END

   -- FOE WHOLESALE END
 
	
    --*** STARTING STOCK UPDATION FOR PURCHASE 
   IF @CXNTYPE IN ('FGREC')				-- PURCHASE INVOICE
	BEGIN
		IF @NREVERTFLAG = 1
			SET @NOUTFLAG = 1
		ELSE
			SET @NOUTFLAG = -1
        
        	
		UPDATE PPC_FG_PMT 
			SET QUANTITY_IN_STOCK = QUANTITY_IN_STOCK - ( @NOUTFLAG * B.QUANTITY )
			FROM 
			(	SELECT B.PRODUCT_CODE, SUM(QUANTITY) AS QUANTITY 
				FROM PPC_AGENCY_REC_FG_DET B
				JOIN PPC_AGENCY_REC_FG_MST C ON C.MEMO_ID=B.MEMO_ID
				WHERE B.MEMO_ID = @CXNID 
				GROUP BY B.PRODUCT_CODE
			) B
			WHERE PPC_FG_PMT.PRODUCT_CODE = B.PRODUCT_CODE 
			

		SET @NRETVAL = 1		--*** SUCCESS
		
		SELECT @BCANCELLED=CANCELLED FROM PPC_AGENCY_REC_FG_MST WHERE MEMO_ID=@CXNID
		
		--*** CHECKING FOR NEGATIVE STOCK
		--*** IF USER OPTED NOT TO ALLOW NEGATIVE STOCK AND STOCK IS GOING OUT
		IF (@NREVERTFLAG = 0 AND @NALLOWNEGSTOCK = 0 AND @NOUTFLAG = 1) OR @BCANCELLED=1 OR @NUPDATEMODE IN (4,5)
		BEGIN
			--PRINT 'CHECKING FOR NEGATIVE STOCK'
			PRINT 'PMT NEGATIVE START'
			IF EXISTS ( SELECT A.PRODUCT_CODE FROM PPC_FG_PMT A JOIN
						(SELECT B.PRODUCT_CODE, SUM(B.QUANTITY) AS QUANTITY 
						FROM PPC_AGENCY_REC_FG_DET B
						JOIN PPC_AGENCY_REC_FG_MST C ON C.MEMO_ID=B.MEMO_ID
						WHERE B.MEMO_ID = @CXNID
						GROUP BY B.PRODUCT_CODE
						) B ON B.PRODUCT_CODE=A.PRODUCT_CODE 
						WHERE A.QUANTITY_IN_STOCK < 0)
			BEGIN
				SET @NRETVAL = 0		--*** UNSUCCESS
				SET @CCMD = N'SELECT DISTINCT A.PRODUCT_CODE, A.QUANTITY_IN_STOCK FROM PPC_FG_PMT A  JOIN
						(SELECT B.PRODUCT_CODE, SUM(B.QUANTITY) AS QUANTITY 
						FROM PPC_AGENCY_REC_FG_DET B
						JOIN PPC_AGENCY_REC_FG_MST C ON C.MEMO_ID=B.MEMO_ID
						WHERE B.MEMO_ID = '''+@CXNID+''' 
						GROUP BY B.PRODUCT_CODE) B ON B.PRODUCT_CODE=A.PRODUCT_CODE 
						WHERE A.QUANTITY_IN_STOCK < 0 '
			END
		END	
	    
	END			-- END OF LABEL FG ISSUE
 
END_PROC:
	
	IF @CCMD<>''
	BEGIN
		DECLARE @NSPID INT
		SET @NSPID=@@SPID
		DELETE FROM NEGPMTMSG WHERE SP_ID=@@SPID
		
		INSERT NEGPMTMSG (PRODUCT_UID,QUANTITY_IN_STOCK)
		EXEC SP_EXECUTESQL @CCMD
		
		
		UPDATE NEGPMTMSG SET SP_ID=@@SPID WHERE SP_ID IS NULL
		
		SET @CCMD=N'SELECT PRODUCT_UID AS PRODUCT_CODE,QUANTITY_IN_STOCK FROM 
					NEGPMTMSG A (NOLOCK)
					WHERE SP_ID='+LTRIM(RTRIM(STR(@NSPID)))+''
					
	END

END
