CREATE PROCEDURE SP3S_PREPARE_ARS_ID_UPLOAD_DETAIL
(
 @cPlan_Name VARCHAR(100),@DT VARCHAR(10)='',@LOC VARCHAR(MAX)
)          
AS          
BEGIN          
 
SET NOCOUNT ON          
--DECLARE @cPlan_Name VARCHAR(100)='kanpur',@DT VARCHAR(10)='',@LOC VARCHAR(MAX)='IN (''56'',''56'',''56'')'    
DECLARE @AUTO_CAL BIT=0,@CAL_DAYS INT=0,@SQL VARCHAR(MAX),@ARS_ID varchar(10),@FIELDS VARCHAR(MAX)=''          
,@cRfDbName VARCHAR(500)    
,@RF_TABLE VARCHAR(100)='VW_ARS_RF'    
,@SEASON_PERIOD_EXISTS BIT=0,@CATTR VARCHAR(MAX)='',@SALEJN VARCHAR(MAX)='',@SALESEL VARCHAR(MAX)=''          
,@LOCS VARCHAR(MAX),@fdate varchar(10),@tdate varchar(10),@TIME DATETIME=GETDATE(),@MSG VARCHAR(1000)
    
SELECT TOP 1 @ARS_ID=ARS_ID,  
--@SEASON_PERIOD_EXISTS=CASE WHEN YEAR(ISNULL(FROM_DT,''))=1900 THEN 0 ELSE 1 END     
@SEASON_PERIOD_EXISTS=CASE WHEN CONVERT(DATE,GETDATE()) BETWEEN FROM_DT AND TO_DT THEN 1 ELSE 0 END     
FROM ARS_MST (NOLOCK)     
WHERE PLAN_NAME=@cPlan_Name AND INACTIVE=0          
IF @ARS_ID IS NULL          
   GOTO END_PROC          
    
    
SET @cRfDbName=DB_NAME()+'.DBO.'     
SET @LOC=REPLACE(REPLACE(@LOC,'IN (',''),')','')    
    
    
SELECT TOP 1 @AUTO_CAL=ISNULL(AUTO_CALCULATE_TARGET_SALES,0),@CAL_DAYS=ISNULL(TARGET_DAYS,0)     
FROM ARS_MST (NOLOCK) WHERE ARS_ID=@ARS_ID    
    
IF @AUTO_CAL=0 GOTO MAIN_PROC_DEFINATION    
DECLARE @TAB VARCHAR(1000)='##VW_'+REPLACE(CONVERT(VARCHAR,GETDATE(),102),'.','')+REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','')

IF OBJECT_ID('TEMPDB..#VW') IS NOT NULL DROP TABLE #VW
IF OBJECT_ID('TEMPDB..#JOIN') IS NOT NULL DROP TABLE #JOIN

SELECT @FDATE=REPLACE(CONVERT(VARCHAR,DATEADD(DD,1-@CAL_DAYS,GETDATE()),102),'.','-')
,@TDATE=REPLACE(CONVERT(VARCHAR,GETDATE(),102),'.','-')

SET @MSG='Starting '+CONVERT(VARCHAR,DATEDIFF(SS,@TIME,GETDATE()))
RAISERROR(@MSG,0,1) WITH NOWAIT
SET @TIME=GETDATE()

EXEC PR_ARS_TEMP_VW_DATA @cRfDbName,@RF_TABLE,@TAB,@FDATE,@TDATE

SET @MSG='STEP 1 '+CONVERT(VARCHAR,DATEDIFF(SS,@TIME,GETDATE()))
RAISERROR(@MSG,0,1) WITH NOWAIT
SET @TIME=GETDATE()

SELECT TOP 0 CAST('' AS VARCHAR(10)) DEPT_ID
,SKU.ARTICLE_CODE,SKU.PARA1_CODE,SKU.PARA2_CODE,SKU.PARA3_CODE,SKU.PARA4_CODE,SKU.PARA5_CODE,SKU.PARA6_CODE
,CAST(0 AS FLOAT) SALES_QTY
INTO #VW
FROM SKU (NOLOCK) 
JOIN PARA1 (NOLOCK) ON PARA1.PARA1_CODE=SKU.PARA1_CODE    
JOIN PARA2 (NOLOCK) ON PARA2.PARA2_CODE=SKU.PARA2_CODE    
JOIN PARA3 (NOLOCK) ON PARA3.PARA3_CODE=SKU.PARA3_CODE    
JOIN PARA4 (NOLOCK) ON PARA4.PARA4_CODE=SKU.PARA4_CODE    
JOIN PARA5 (NOLOCK) ON PARA5.PARA5_CODE=SKU.PARA5_CODE    
JOIN PARA6 (NOLOCK) ON PARA6.PARA6_CODE=SKU.PARA6_CODE  

SET @SQL='INSERT #VW
SELECT A.DEPT_ID,SKU.ARTICLE_CODE,SKU.PARA1_CODE,SKU.PARA2_CODE,SKU.PARA3_CODE,SKU.PARA4_CODE,SKU.PARA5_CODE,SKU.PARA6_CODE,A.SALES_QTY
FROM '+@TAB+' A (NOLOCK)    
JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=A.PRODUCT_CODE    
JOIN PARA1 (NOLOCK) ON PARA1.PARA1_CODE=SKU.PARA1_CODE --AND ISNULL(PARA1.INACTIVE,0)=0   
JOIN PARA2 (NOLOCK) ON PARA2.PARA2_CODE=SKU.PARA2_CODE --AND ISNULL(PARA2.INACTIVE,0)=0    
JOIN PARA3 (NOLOCK) ON PARA3.PARA3_CODE=SKU.PARA3_CODE --AND ISNULL(PARA3.INACTIVE,0)=0    
JOIN PARA4 (NOLOCK) ON PARA4.PARA4_CODE=SKU.PARA4_CODE --AND ISNULL(PARA4.INACTIVE,0)=0    
JOIN PARA5 (NOLOCK) ON PARA5.PARA5_CODE=SKU.PARA5_CODE --AND ISNULL(PARA5.INACTIVE,0)=0    
JOIN PARA6 (NOLOCK) ON PARA6.PARA6_CODE=SKU.PARA6_CODE --AND ISNULL(PARA6.INACTIVE,0)=0' 
EXEC(@SQL)

SET @MSG='STEP 2 '+CONVERT(VARCHAR,DATEDIFF(SS,@TIME,GETDATE()))
RAISERROR(@MSG,0,1) WITH NOWAIT
SET @TIME=GETDATE()

SELECT A.DEPT_ID,ARTICLE.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE,A.PARA3_CODE,A.PARA4_CODE,A.PARA5_CODE,A.PARA6_CODE    
  ,SECTIONM.SECTION_CODE,SECTIOND.SUB_SECTION_CODE,AF.ATTR1_KEY_CODE,AF.ATTR2_KEY_CODE,AF.ATTR3_KEY_CODE,AF.ATTR4_KEY_CODE,AF.ATTR5_KEY_CODE    
  ,AF.ATTR6_KEY_CODE,AF.ATTR7_KEY_CODE,AF.ATTR8_KEY_CODE,AF.ATTR9_KEY_CODE,AF.ATTR10_KEY_CODE,AF.ATTR11_KEY_CODE,AF.ATTR12_KEY_CODE,AF.ATTR13_KEY_CODE    
  ,AF.ATTR14_KEY_CODE,AF.ATTR15_KEY_CODE,AF.ATTR16_KEY_CODE,AF.ATTR17_KEY_CODE,AF.ATTR18_KEY_CODE,AF.ATTR19_KEY_CODE,AF.ATTR20_KEY_CODE    
  ,AF.ATTR21_KEY_CODE,AF.ATTR22_KEY_CODE,AF.ATTR23_KEY_CODE,AF.ATTR24_KEY_CODE,AF.ATTR25_KEY_CODE    
  ,SUM(ISNULL(A.SALES_QTY,0))SLS
  INTO #JOIN
  FROM #VW A (NOLOCK)    
  JOIN ARTICLE (NOLOCK)    
  JOIN SECTIOND (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE    
  JOIN SECTIONM (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE    
  JOIN ARTICLE_FIX_ATTR AF (NOLOCK) ON AF.ARTICLE_CODE=ARTICLE.ARTICLE_CODE    
  JOIN ATTR1_MST (NOLOCK) ON ATTR1_MST.ATTR1_KEY_CODE=AF.ATTR1_KEY_CODE    
  JOIN ATTR2_MST (NOLOCK) ON ATTR2_MST.ATTR2_KEY_CODE=AF.ATTR2_KEY_CODE    
  JOIN ATTR3_MST (NOLOCK) ON ATTR3_MST.ATTR3_KEY_CODE=AF.ATTR3_KEY_CODE    
  JOIN ATTR4_MST (NOLOCK) ON ATTR4_MST.ATTR4_KEY_CODE=AF.ATTR4_KEY_CODE    
  JOIN ATTR5_MST (NOLOCK) ON ATTR5_MST.ATTR5_KEY_CODE=AF.ATTR5_KEY_CODE    
  JOIN ATTR6_MST (NOLOCK) ON ATTR6_MST.ATTR6_KEY_CODE=AF.ATTR6_KEY_CODE    
  JOIN ATTR7_MST (NOLOCK) ON ATTR7_MST.ATTR7_KEY_CODE=AF.ATTR7_KEY_CODE    
  JOIN ATTR8_MST (NOLOCK) ON ATTR8_MST.ATTR8_KEY_CODE=AF.ATTR8_KEY_CODE    
  JOIN ATTR9_MST (NOLOCK) ON ATTR9_MST.ATTR9_KEY_CODE=AF.ATTR9_KEY_CODE    
  JOIN ATTR10_MST (NOLOCK) ON ATTR10_MST.ATTR10_KEY_CODE=AF.ATTR10_KEY_CODE    
  JOIN ATTR11_MST (NOLOCK) ON ATTR11_MST.ATTR11_KEY_CODE=AF.ATTR11_KEY_CODE    
  JOIN ATTR12_MST (NOLOCK) ON ATTR12_MST.ATTR12_KEY_CODE=AF.ATTR12_KEY_CODE    
  JOIN ATTR13_MST (NOLOCK) ON ATTR13_MST.ATTR13_KEY_CODE=AF.ATTR13_KEY_CODE    
  JOIN ATTR14_MST (NOLOCK) ON ATTR14_MST.ATTR14_KEY_CODE=AF.ATTR14_KEY_CODE    
  JOIN ATTR15_MST (NOLOCK) ON ATTR15_MST.ATTR15_KEY_CODE=AF.ATTR15_KEY_CODE    
  JOIN ATTR16_MST (NOLOCK) ON ATTR16_MST.ATTR16_KEY_CODE=AF.ATTR16_KEY_CODE    
  JOIN ATTR17_MST (NOLOCK) ON ATTR17_MST.ATTR17_KEY_CODE=AF.ATTR17_KEY_CODE    
  JOIN ATTR18_MST (NOLOCK) ON ATTR18_MST.ATTR18_KEY_CODE=AF.ATTR18_KEY_CODE    
  JOIN ATTR19_MST (NOLOCK) ON ATTR19_MST.ATTR19_KEY_CODE=AF.ATTR19_KEY_CODE    
  JOIN ATTR20_MST (NOLOCK) ON ATTR20_MST.ATTR20_KEY_CODE=AF.ATTR20_KEY_CODE    
  JOIN ATTR21_MST (NOLOCK) ON ATTR21_MST.ATTR21_KEY_CODE=AF.ATTR21_KEY_CODE    
  JOIN ATTR22_MST (NOLOCK) ON ATTR22_MST.ATTR22_KEY_CODE=AF.ATTR22_KEY_CODE    
  JOIN ATTR23_MST (NOLOCK) ON ATTR23_MST.ATTR23_KEY_CODE=AF.ATTR23_KEY_CODE    
  JOIN ATTR24_MST (NOLOCK) ON ATTR24_MST.ATTR24_KEY_CODE=AF.ATTR24_KEY_CODE    
  JOIN ATTR25_MST (NOLOCK) ON ATTR25_MST.ATTR25_KEY_CODE=AF.ATTR25_KEY_CODE    
  ON A.ARTICLE_CODE=ARTICLE.ARTICLE_CODE    
GROUP BY A.DEPT_ID,ARTICLE.ARTICLE_CODE    
  ,A.PARA1_CODE,A.PARA2_CODE,A.PARA3_CODE,A.PARA4_CODE,A.PARA5_CODE,A.PARA6_CODE    
  ,SECTIONM.SECTION_CODE,SECTIOND.SUB_SECTION_CODE    
  ,AF.ATTR1_KEY_CODE,AF.ATTR2_KEY_CODE,AF.ATTR3_KEY_CODE,AF.ATTR4_KEY_CODE,AF.ATTR5_KEY_CODE    
  ,AF.ATTR6_KEY_CODE,AF.ATTR7_KEY_CODE,AF.ATTR8_KEY_CODE,AF.ATTR9_KEY_CODE,AF.ATTR10_KEY_CODE    
  ,AF.ATTR11_KEY_CODE,AF.ATTR12_KEY_CODE,AF.ATTR13_KEY_CODE,AF.ATTR14_KEY_CODE,AF.ATTR15_KEY_CODE    
  ,AF.ATTR16_KEY_CODE,AF.ATTR17_KEY_CODE,AF.ATTR18_KEY_CODE,AF.ATTR19_KEY_CODE,AF.ATTR20_KEY_CODE    
  ,AF.ATTR21_KEY_CODE,AF.ATTR22_KEY_CODE,AF.ATTR23_KEY_CODE,AF.ATTR24_KEY_CODE,AF.ATTR25_KEY_CODE
SET @MSG='STEP 3 JOIN '+CONVERT(VARCHAR,DATEDIFF(SS,@TIME,GETDATE()))
RAISERROR(@MSG,0,1) WITH NOWAIT
SET @TIME=GETDATE()


IF OBJECT_ID('tempdb..#PLAN_MAPPED_EXCEL_FILEDS') IS NOT NULL DROP TABLE #PLAN_MAPPED_EXCEL_FILEDS    
CREATE TABLE #PLAN_MAPPED_EXCEL_FILEDS(FIELD VARCHAR(1000))    
SET @SQL=''
SELECT @SQL=COALESCE(@SQL,'')+'IF NOT EXISTS(SELECT TOP 1 '+NAME+' FROM '+OBJECT_NAME(ID)+' WHERE '+NAME+' LIKE ''0000000%'' AND ARS_ID='''+CAST(@ARS_ID AS VARCHAR)+''')    
INSERT #PLAN_MAPPED_EXCEL_FILEDS SELECT '''+NAME+''';'+CHAR(13)     
FROM SYSCOLUMNS WHERE OBJECT_NAME(ID)='ARS_DET' AND name LIKE '%CODE'    
--PRINT @SQL    
EXEC(@SQL)    
SET @MSG='STEP 4 PLAN_MAPPED_EXCEL_FILEDS '+CONVERT(VARCHAR,DATEDIFF(SS,@TIME,GETDATE()))
RAISERROR(@MSG,0,1) WITH NOWAIT
SET @TIME=GETDATE()

SET @FIELDS=''    
SELECT @FIELDS=COALESCE(@FIELDS,'')+'ARS.'+FIELD+'=S.'+FIELD+' AND '    
FROM #PLAN_MAPPED_EXCEL_FILEDS    
SET @FIELDS=ISNULL(@FIELDS,'')+'ARS.DEPT_ID=S.DEPT_ID'    
IF OBJECT_ID('tempdb..#PLAN_MAPPED_EXCEL_FILEDS') IS NOT NULL DROP TABLE #PLAN_MAPPED_EXCEL_FILEDS    
     
SET @SQL='UPDATE ARS SET ARS.TARGET_DAILY_SALE=ISNULL(S.SLS,0)/'+CAST(@CAL_DAYS AS VARCHAR)+'    
FROM ARS_DET ARS WITH (ROWLOCK)    
JOIN #JOIN S ON '+@FIELDS+'    
WHERE ARS.ARS_ID='''+CAST(@ARS_ID AS VARCHAR)+''';'    
--IF @AUTO_CAL=1 PRINT @SQL    
IF @AUTO_CAL=1 EXEC(@SQL)    
SET @MSG='STEP 5 UPDATE DONE '+CONVERT(VARCHAR,DATEDIFF(SS,@TIME,GETDATE()))
RAISERROR(@MSG,0,1) WITH NOWAIT
SET @TIME=GETDATE()


MAIN_PROC_DEFINATION:         

DECLARE @GROUP VARCHAR(MAX),@JOIN VARCHAR(MAX),@JOIN_SELECT VARCHAR(MAX),@WHERE VARCHAR(MAX),@AF VARCHAR(MAX)          
,@SALE VARCHAR(MAX),@STOCK VARCHAR(MAX)='',@WH_STOCK VARCHAR(MAX)='',@PUR_LOC VARCHAR(MAX)=''          
,@SALE1 VARCHAR(MAX),@SALE2 VARCHAR(MAX),@SALE3 VARCHAR(MAX),@SALE4 VARCHAR(MAX),@SALER VARCHAR(MAX)          
,@DAYS INT          
,@WEEKF1 DATETIME,@WEEKT1 DATETIME          
,@WEEKF2 DATETIME,@WEEKT2 DATETIME          
,@WEEKF3 DATETIME,@WEEKT3 DATETIME          
,@WEEKF4 DATETIME,@WEEKT4 DATETIME          
,@ADJOIN VARCHAR(MAX),@ATTR_GROUP VARCHAR(MAX)='',@PARA_SET BIT=0,@SEL VARCHAR(MAX),@WH_JOIN VARCHAR(MAX)=''          
          
IF EXISTS(SELECT TOP 1 PARA1_SET,PARA2_SET FROM ARTICLE (NOLOCK) WHERE PARA1_SET=1 OR PARA2_SET=1) and 1=2    
   SET @PARA_SET=1      
         
IF OBJECT_ID('TEMPDB..#LOC') IS NOT NULL DROP TABLE #LOC          
CREATE TABLE #LOC (LOC VARCHAR(5))      
      
    
INSERT #LOC SELECT DISTINCT DEPT_ID FROM ARS_DET (NOLOCK) WHERE ARS_ID=@ARS_ID  
SELECT @SQL=''''+REPLACE(@LOC,',',''',''')+''''    
SET @SQL='DELETE #LOC WHERE LOC NOT IN ('+@LOC+')'    
EXEC(@SQL)      
  
SET @STOCK=',SUM(CASE WHEN RF.DEPT_ID=AD.DEPT_ID AND RF.XN_MODE=''STOCK'' THEN RF.STOCK_QTY ELSE 0 END) Stock'           
        
SET @PUR_LOC=''          
SELECT @PUR_LOC=COALESCE(@PUR_LOC,'')+''''+L.DEPT_ID+''',' FROM LOCATION L (NOLOCK) WHERE PUR_LOC=1 AND L.DEPT_ID<>'F1'         
IF @@ROWCOUNT=0 SET @PUR_LOC='' ELSE SET @PUR_LOC='('+LEFT(@PUR_LOC,LEN(@PUR_LOC)-1)+')'          
          
IF @PUR_LOC=''    
   SET @WH_Stock=',0 AS WH_Stock'    
ELSE    
BEGIN    
 SET @WH_STOCK=',SUM(CASE WHEN RF.DEPT_ID IN '+@PUR_LOC+' AND RF.XN_MODE=''STOCK'' THEN RF.STOCK_QTY ELSE 0 END) WH_Stock'    
END    
          
IF OBJECT_ID('tempdb..##tPlan') IS NOT NULL DROP TABLE ##tPlan    
CREATE TABLE ##tPlan (ARS_ID CHAR(7),Season_From datetime,Season_Till datetime,DYS INT,WeekF1 DATETIME,WeekT1 DATETIME,WeekF2 DATETIME,WeekT2 DATETIME,WeekF3 DATETIME,WeekT3 DATETIME,WeekF4 DATETIME,WeekT4 DATETIME,DATE_CAL_REQ BIT)    
          
IF @SEASON_PERIOD_EXISTS=0    
   INSERT ##tPlan (ARS_ID,SEASON_FROM,SEASON_TILL,DATE_CAL_REQ)    
   SELECT DISTINCT TOP 1 AM.ARS_ID          
   ,DBO.GET_SEASON_DT(SM.Season_Id,'FROM')          
   ,DBO.GET_SEASON_DT(SM.Season_Id,'TILL')          
   ,CASE SM.IncludeYearInDate WHEN 0 THEN 1 ELSE 0 END          
   FROM ARS_MST AM (NOLOCK)          
   JOIN ARS_DET AD (NOLOCK) ON AM.ARS_ID=AD.ARS_ID          
   JOIN #LOC ON #LOC.LOC=AD.DEPT_ID    
   JOIN SEASON_MST SM (NOLOCK) ON SM.Season_Id=AM.Season_Id          
   WHERE AM.INACTIVE=0 AND AM.ARS_ID=@ARS_ID    
   --AND CONVERT(DATE,AM.LAST_UPDATE)=@DT          
ELSE    
   INSERT ##tPlan (ARS_ID,SEASON_FROM,SEASON_TILL,DATE_CAL_REQ)    
   SELECT TOP 1 ARS_ID,FROM_DT,TO_DT,0    
   FROM ARS_MST AM (NOLOCK)    
   WHERE AM.INACTIVE=0 AND AM.ARS_ID=@ARS_ID    
   
   UPDATE A SET SEASON_FROM= CONVERT(VARCHAR(10),LAST_UPDATE-45+1,121)
   ,SEASON_TILL=CONVERT(VARCHAR(10),LAST_UPDATE,121) 
   FROM ##tPlan A
   JOIN ARS_MST B ON A.ARS_ID=B.ARS_ID 
   UPDATE ##tPlan SET DYS=DATEDIFF(DD,Season_From,Season_Till)+1	   
   
   --UPDATE ##tPlan SET  SEASON_TILL='',
   UPDATE ##tPlan SET Season_From=@FDATE,Season_Till=@tdate,DYS=@CAL_DAYS WHERE @AUTO_CAL=1



IF @SEASON_PERIOD_EXISTS=1     
--14MAR19     
AND EXISTS (SELECT TOP 1 * FROM ##tPlan WHERE SEASON_TILL>CONVERT(DATE,GETDATE()))
   UPDATE ##tPlan SET Season_Till=CASE WHEN Season_Till>CONVERT(DATE,GETDATE()) THEN CONVERT(DATE,GETDATE()) ELSE Season_Till END     
  
UPDATE ##tPlan SET WeekF1=DATEADD(DD,-6,Season_Till),WeekT1=Season_Till    
IF EXISTS(SELECT TOP 1 DYS FROM ##tPlan where DYS<0)    
   UPDATE ##tPlan SET DYS=0,WeekF1=DATEADD(DD,21,Season_From),WeekT1=DATEADD(DD,27,Season_From)    
UPDATE ##tPlan SET WeekF2=DATEADD(DD,-7,WEEKF1),WeekT2=DATEADD(DD,-1,WEEKF1)          
UPDATE ##tPlan SET WeekF3=DATEADD(DD,-7,WEEKF2),WeekT3=DATEADD(DD,-1,WEEKF2)          
UPDATE ##tPlan SET WeekF4=DATEADD(DD,-7,WEEKF3),WeekT4=DATEADD(DD,-1,WEEKF3)          
  
SET @MSG='STEP 6 '+CONVERT(VARCHAR,DATEDIFF(SS,@TIME,GETDATE()))
RAISERROR(@MSG,0,1) WITH NOWAIT
SET @TIME=GETDATE()

IF @AUTO_CAL=1    
   BEGIN    
      UPDATE ##tPlan SET DYS=TARGET_DAYS FROM ARS_MST A (NOLOCK) WHERE A.ARS_ID=##tPlan.ARS_ID AND A.ARS_ID=@ARS_ID     
      UPDATE ##tPlan SET Season_From=DATEADD(DD,-DYS+1,Season_Till)    
   END    

IF @SEASON_PERIOD_EXISTS=0     
   UPDATE ##tPlan SET WeekF1=NULL,WeekT1=NULL,WeekF2=NULL,WeekT2=NULL,WeekF3=NULL,WeekT3=NULL,WeekF4=NULL,WeekT4=NULL  
    
SET @SALE =',SUM(CASE WHEN RF.XN_MODE=''SALE'' AND RF.XN_DT BETWEEN T.Season_From AND T.Season_Till AND RF.DEPT_ID=AD.DEPT_ID THEN RF.SALES_QTY ELSE 0 END) Qty_Sold'          
SET @SALE1=',SUM(CASE WHEN RF.XN_MODE=''SALE'' AND RF.XN_DT BETWEEN T.WEEKF1 AND T.WEEKT1 AND RF.DEPT_ID=AD.DEPT_ID THEN RF.SALES_QTY ELSE 0 END) Week1_Sale'          
SET @SALE2=',SUM(CASE WHEN RF.XN_MODE=''SALE'' AND RF.XN_DT BETWEEN T.WEEKF2 AND T.WEEKT2 AND RF.DEPT_ID=AD.DEPT_ID THEN RF.SALES_QTY ELSE 0 END) Week2_Sale'          
SET @SALE3=',SUM(CASE WHEN RF.XN_MODE=''SALE'' AND RF.XN_DT BETWEEN T.WEEKF3 AND T.WEEKT3 AND RF.DEPT_ID=AD.DEPT_ID THEN RF.SALES_QTY ELSE 0 END) Week3_Sale'          
SET @SALE4=',SUM(CASE WHEN RF.XN_MODE=''SALE'' AND RF.XN_DT BETWEEN T.WEEKF4 AND T.WEEKT4 AND RF.DEPT_ID=AD.DEPT_ID THEN RF.SALES_QTY ELSE 0 END) Week4_Sale'          
SET @SALER=',SUM(CASE WHEN RF.XN_MODE=''SALE'' AND RF.XN_DT>=T.Season_From AND RF.XN_DT<T.WEEKT4 AND RF.DEPT_ID=AD.DEPT_ID THEN RF.SALES_QTY ELSE 0 END) Rest_Sale'          
    
SET @JOIN=CHAR(13)+'JOIN #LOC ON #LOC.LOC=RF.DEPT_ID'    
   +CHAR(13)+'JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=RF.PRODUCT_CODE'    
   +CHAR(13)+'JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE'    
SET @WHERE='WHERE AD.ARS_ID='''+@ARS_ID+''''          
SET @GROUP='GROUP BY AD.ARS_ID,AD.DEPT_ID,MINIMUM_DAYS,TARGET_DAYS,MAXIMUM_DAYS,'          
SET @ADJOIN='ART.ARTICLE_CODE=AD.ARTICLE_CODE AND '       

   
    
SELECT @LOCS=COALESCE(@LOCS,'')+''''+LOC+''',' FROM #LOC     
IF @LOCS<>'' SET @LOCS=LEFT(@LOCS,LEN(@LOCS)-1)    
--PRINT 'LOCS '+@LOC    
DECLARE @BOTH INT=0    
IF EXISTS(SELECT * FROM ARS_STOCK_LEVEL_MST WHERE ARS_ID=@ARS_ID AND STK_LEVEL_PARA_NAME='SECTION_NAME')    
AND EXISTS(SELECT * FROM ARS_STOCK_LEVEL_MST WHERE ARS_ID=@ARS_ID AND STK_LEVEL_PARA_NAME='SUB_SECTION_NAME')    
   SET @BOTH=2    
    
IF EXISTS(SELECT * FROM ARS_STOCK_LEVEL_MST WHERE ARS_ID=@ARS_ID AND STK_LEVEL_PARA_NAME='SECTION_NAME')    
AND NOT EXISTS(SELECT * FROM ARS_STOCK_LEVEL_MST WHERE ARS_ID=@ARS_ID AND STK_LEVEL_PARA_NAME='SUB_SECTION_NAME')    
   SET @BOTH=2    
       
IF NOT EXISTS(SELECT * FROM ARS_STOCK_LEVEL_MST WHERE ARS_ID=@ARS_ID AND STK_LEVEL_PARA_NAME='SECTION_NAME')    
AND EXISTS(SELECT * FROM ARS_STOCK_LEVEL_MST WHERE ARS_ID=@ARS_ID AND STK_LEVEL_PARA_NAME='SUB_SECTION_NAME')    
 SET @BOTH=1--ONLY SUB    
   
SELECT @JOIN=COALESCE(@JOIN,'')+JN          
      ,@AF=COALESCE(@AF,'')+CASE WHEN ISNULL(AF,'')<>'' THEN AF+CHAR(13) ELSE '' END         
      ,@JOIN_SELECT=COALESCE(@JOIN_SELECT,'')+SEL+','          
      ,@SEL=COALESCE(@SEL,'')+SL+','          
      ,@ATTR_GROUP=COALESCE(@ATTR_GROUP,'')+GRP+','          
      ,@ADJOIN=COALESCE(@ADJOIN,'')+AD+CASE AD WHEN '' THEN '' ELSE ' AND ' END          
      ,@SALEJN=COALESCE(@SALEJN,'')+SALEJN+' AND '    
      ,@SALESEL=COALESCE(@SALESEL,'')+SALESEL+','    
FROM          
(SELECT JN= CASE when STK_LEVEL_PARA_NAME like 'PARA%' and (SUBSTRING(stk_level_para_name,5,1) not in ('1','2') OR @PARA_SET=0) then CHAR(13)+'JOIN '+REPLACE(stk_level_para_name,'_NAME','')+' P'+SUBSTRING(stk_level_para_name,5,1)+' (NOLOCK) ON P'+SUBSTRING(stk_level_para_name,5,1)+'.PARA'+SUBSTRING(stk_level_para_name,5,1)+'_CODE=SKU.PARA'+SUBSTRING(stk_level_para_name,5,1)+'_CODE AND ISNULL(P'+SUBSTRING(stk_level_para_name,5,1)+'.INACTIVE,0)IN(0,1)'      
				 when STK_LEVEL_PARA_NAME like 'PARA%' and SUBSTRING(stk_level_para_name,5,1) in ('1') and @PARA_SET=1 then CHAR(13)+'JOIN ART_PARA1 P1 (NOLOCK) ON P1.ARTICLE_CODE=ART.ARTICLE_CODE AND P1.PARA1_CODE=SKU.PARA1_CODE'      
				 when STK_LEVEL_PARA_NAME like 'PARA%' and SUBSTRING(stk_level_para_name,5,1) in ('2') and @PARA_SET=1 then CHAR(13)+'JOIN ART_DET P2 (NOLOCK) ON P2.ARTICLE_CODE=ART.ARTICLE_CODE AND P2.PARA2_CODE=SKU.PARA2_CODE JOIN PARA2 (NOLOCK) ON PARA2.PARA2_CODE=P2.PARA2_CODE'      
				 when STK_LEVEL_PARA_NAME like 'SUB_SECTION_NAME' AND @BOTH=1 then CHAR(13)+'JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE'    
				 when STK_LEVEL_PARA_NAME like 'SECTION_NAME' AND @BOTH=2 then CHAR(13)+'JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=ART.SUB_SECTION_CODE'+CHAR(13)+'JOIN SECTIONM SM (NOLOCK) ON SD.SECTION_CODE=SM.SECTION_CODE'    
     ELSE '' end          
 ,SEL=CASE  when STK_LEVEL_PARA_NAME like 'PARA%' and SUBSTRING(stk_level_para_name,5,1) not in ('1','2') then 'P'+SUBSTRING(stk_level_para_name,5,1)+'.PARA'+SUBSTRING(stk_level_para_name,5,1)+'_CODE,'+'P'+SUBSTRING(stk_level_para_name,5,1)+'.PARA'+SUBSTRING(stk_level_para_name,5,1)+'_NAME'      
   when STK_LEVEL_PARA_NAME like 'PARA%' and SUBSTRING(stk_level_para_name,5,1) in ('1') then 'P1.PARA1_CODE,P1.PARA1_'+CASE WHEN @PARA_SET=1 THEN 'DESC' ELSE 'NAME' END+' AS PARA1_NAME'      
   when STK_LEVEL_PARA_NAME like 'PARA%' and SUBSTRING(stk_level_para_name,5,1) in ('2') then 'P2.PARA2_CODE,'+CASE WHEN @PARA_SET=1 THEN 'PARA2' ELSE 'P2' END+'.PARA2_NAME'      
   when STK_LEVEL_PARA_NAME like 'ATTR%' then 'A'+SUBSTRING(stk_level_para_name,5,1)+'.ATTR'+SUBSTRING(stk_level_para_name,5,1)+'_KEY_CODE,'+'A'+SUBSTRING(stk_level_para_name,5,1)+'.ATTR'+SUBSTRING(stk_level_para_name,5,1)+'_KEY_NAME'          
   when STK_LEVEL_PARA_NAME like 'SECTION_NAME' then 'SM.SECTION_CODE,SM.SECTION_NAME'      
   when STK_LEVEL_PARA_NAME like 'SUB_SECTION_NAME' then 'SD.SUB_SECTION_CODE,SD.SUB_SECTION_NAME'      
   when STK_LEVEL_PARA_NAME like '%ARTICLE%' then 'ART.ARTICLE_CODE,ART.ARTICLE_NO'      
   ELSE '' end                
 ,SL=CASE   when STK_LEVEL_PARA_NAME like 'PARA%' then 'PARA'+SUBSTRING(stk_level_para_name,5,1)+'_CODE,PARA'+SUBSTRING(stk_level_para_name,5,1)+'_NAME'      
   when STK_LEVEL_PARA_NAME like 'ATTR%' then 'ATTR'+SUBSTRING(stk_level_para_name,5,1)+'_KEY_CODE,ATTR'+SUBSTRING(stk_level_para_name,5,1)+'_KEY_NAME'          
   when STK_LEVEL_PARA_NAME like 'SECTION_NAME' then 'SECTION_CODE,SECTION_NAME'      
   when STK_LEVEL_PARA_NAME like 'SUB_SECTION_NAME' then 'SUB_SECTION_CODE,SUB_SECTION_NAME'      
   when STK_LEVEL_PARA_NAME like '%ARTICLE%' then 'ARTICLE_CODE,ARTICLE_NO'      
   ELSE '' end                
 ,GRP=CASE  when STK_LEVEL_PARA_NAME like 'PARA%' and SUBSTRING(stk_level_para_name,5,1) not in ('1','2') then 'P'+SUBSTRING(stk_level_para_name,5,1)+'.PARA'+SUBSTRING(stk_level_para_name,5,1)+'_CODE,'+'P'+SUBSTRING(stk_level_para_name,5,1)+'.PARA'+SUBSTRING(stk_level_para_name,5,1)+'_NAME'          
   when STK_LEVEL_PARA_NAME like 'PARA%' and SUBSTRING(stk_level_para_name,5,1) in ('1') then 'P1.PARA1_CODE,P1.PARA1_'+CASE WHEN @PARA_SET=1 THEN 'DESC' ELSE 'NAME' END      
   when STK_LEVEL_PARA_NAME like 'PARA%' and SUBSTRING(stk_level_para_name,5,1) in ('2') then 'P2.PARA2_CODE,'+CASE WHEN @PARA_SET=1 THEN 'PARA2' ELSE 'P2' END+'.PARA2_NAME'      
   when STK_LEVEL_PARA_NAME like 'ATTR%' then 'A'+SUBSTRING(stk_level_para_name,5,1)+'.ATTR'+SUBSTRING(stk_level_para_name,5,1)+'_KEY_CODE,'+'A'+SUBSTRING(stk_level_para_name,5,1)+'.ATTR'+SUBSTRING(stk_level_para_name,5,1)+'_KEY_NAME'          
   when STK_LEVEL_PARA_NAME like 'SECTION_NAME' then 'SM.SECTION_CODE,SM.SECTION_NAME'          
   when STK_LEVEL_PARA_NAME like 'SUB_SECTION_NAME' then 'SD.SUB_SECTION_CODE,SD.SUB_SECTION_NAME'          
   when STK_LEVEL_PARA_NAME like '%ARTICLE%' then 'ART.ARTICLE_CODE,ART.ARTICLE_NO'          
   end                
           
 ,AF=CASE when STK_LEVEL_PARA_NAME like 'ATTR%' then ' JOIN '+REPLACE(stk_level_para_name,'_key_name','_MST')+' A'+SUBSTRING(stk_level_para_name,5,1)+' (NOLOCK) ON A'+SUBSTRING(stk_level_para_name,5,1)        
             +'.ATTR'+SUBSTRING(stk_level_para_name,5,1)+'_KEY_CODE=AD.ATTR'+SUBSTRING(stk_level_para_name,5,1)+'_KEY_CODE'          
   ELSE '' END          
               
 ,AD=CASE WHEN STK_LEVEL_PARA_NAME like 'PARA%' then 'P'+SUBSTRING(stk_level_para_name,5,1)+'.'+REPLACE(stk_level_para_name,'_NAME','_CODE')+'=AD.PARA'+SUBSTRING(stk_level_para_name,5,1)+'_CODE'      
   WHEN STK_LEVEL_PARA_NAME like 'SECTION_NAME' then 'SM.SECTION_CODE=AD.SECTION_CODE'          
   WHEN STK_LEVEL_PARA_NAME like 'SUB_SECTION_NAME' then 'SD.SUB_SECTION_CODE=AD.SUB_SECTION_CODE'          
    ELSE '' END          
    
 ,SALESEL=CASE when STK_LEVEL_PARA_NAME like 'PARA%' then 'SKU.PARA'+SUBSTRING(stk_level_para_name,5,1)+'_CODE'      
   when STK_LEVEL_PARA_NAME like 'ATTR%' then 'ATTR'+SUBSTRING(stk_level_para_name,5,1)+'_KEY_CODE'          
   when STK_LEVEL_PARA_NAME like 'SECTION_NAME' then 'SECTIONM.SECTION_CODE'      
   when STK_LEVEL_PARA_NAME like 'SUB_SECTION_NAME' then 'SECTIOND.SUB_SECTION_CODE'      
   when STK_LEVEL_PARA_NAME like '%ARTICLE%' then 'SKU.ARTICLE_CODE'      
   ELSE '' end                
 ,SALEJN=CASE when STK_LEVEL_PARA_NAME like 'PARA%' then 'S.PARA'+SUBSTRING(stk_level_para_name,5,1)+'_CODE=RPT.PARA'+SUBSTRING(stk_level_para_name,5,1)+'_CODE'      
   when STK_LEVEL_PARA_NAME like 'ATTR%' then 'S.ATTR'+SUBSTRING(stk_level_para_name,5,1)+'_KEY_CODE=RPT.ATTR'+SUBSTRING(stk_level_para_name,5,1)+'_KEY_CODE'          
   when STK_LEVEL_PARA_NAME like 'SECTION_NAME' then 'S.SECTION_CODE=RPT.SECTION_CODE'      
   when STK_LEVEL_PARA_NAME like 'SUB_SECTION_NAME' then 'S.SUB_SECTION_CODE=RPT.SUB_SECTION_CODE'      
   when STK_LEVEL_PARA_NAME like '%ARTICLE%' then 'S.ARTICLE_CODE=RPT.ARTICLE_CODE'      
   ELSE '' end                
FROM ARS_MST AM (NOLOCK)     
JOIN ARS_STOCK_LEVEL_MST SM (NOLOCK) ON AM.ARS_ID=SM.ARS_ID          
WHERE AM.ARS_ID=@ARS_ID          
)T          
SET @GROUP=@GROUP+ISNULL(@ATTR_GROUP,'')          
     
SET @JOIN_SELECT=CASE WHEN RIGHT(@JOIN_SELECT,1)=',' THEN LEFT(@JOIN_SELECT,LEN(@JOIN_SELECT)-1) ELSE ISNULL(@JOIN_SELECT,'') END          
SET @JOIN_SELECT=@JOIN_SELECT+CHAR(13)+@SALE+CHAR(13)+@STOCK+CHAR(13)+@SALE1+CHAR(13)+@SALE2+CHAR(13)+@SALE3+CHAR(13)+@SALE4      
--+CHAR(13)+@SALER      
+CHAR(13)+@WH_STOCK          
SET @JOIN_SELECT=CASE WHEN RIGHT(@JOIN_SELECT,1)=',' THEN LEFT(@JOIN_SELECT,LEN(@JOIN_SELECT)-1) ELSE ISNULL(@JOIN_SELECT,'') END          
SET @GROUP=CASE WHEN RIGHT(@GROUP,1)=',' THEN LEFT(@GROUP,LEN(@GROUP)-1) ELSE ISNULL(@GROUP,'') END          
          
WHILE RIGHT(RTRIM(@ADJOIN),3)='AND'          
BEGIN          
   SET @ADJOIN=CASE RIGHT(RTRIM(@ADJOIN),3) WHEN 'AND' THEN LEFT(@ADJOIN,LEN(@ADJOIN)-3) ELSE @ADJOIN END          
END     
  
DECLARE @REPORT VARCHAR(100),@REPORT_PLAN VARCHAR(100),@MYSQL VARCHAR(MAX) 
SET @REPORT='tempdb..##REPORT_'+@ARS_ID  
SET @REPORT_PLAN='tempdb..##REPORT_PLAN_'+@ARS_ID  
  
SET @MYSQL='IF OBJECT_ID('''+@REPORT+''') IS NOT NULL DROP TABLE '+REPLACE(@REPORT,'tempdb..','')+';'  
EXEC(@MYSQL)  
SET @MYSQL='IF OBJECT_ID('''+@REPORT_PLAN+''') IS NOT NULL DROP TABLE '+REPLACE(@REPORT_PLAN,'tempdb..','')+';'  
EXEC(@MYSQL)  
  
SET @JOIN_SELECT=REPLACE(LTRIM(RTRIM(ISNULL(@JOIN_SELECT,''))),CHAR(13),'')    
IF LEFT(@JOIN_SELECT,1)=',' SET @JOIN_SELECT=SUBSTRING(@JOIN_SELECT,2,LEN(@JOIN_SELECT)-1)    
--PRINT ''+@JOIN_SELECT    
  
SET @MSG='STEP 7 '+CONVERT(VARCHAR,DATEDIFF(SS,@TIME,GETDATE()))
RAISERROR(@MSG,0,1) WITH NOWAIT
SET @TIME=GETDATE()

--SET INDENT QTY
IF OBJECT_ID('tempdb..#GITLOC','U') IS NOT NULL DROP TABLE #GITLOC
CREATE TABLE #GITLOC(LOC VARCHAR(20))
INSERT #GITLOC SELECT LOC FROM #LOC

IF OBJECT_ID('tempdb..#GITQTY','U') IS NOT NULL DROP TABLE #GITQTY
CREATE TABLE #GITQTY(LOC VARCHAR(20),PRODUCT_CODE VARCHAR(1000),QTY FLOAT)

SET @SQL=REPLACE(CONVERT(varchar,GETDATE(),102),'.','-')
INSERT #GITQTY EXEC SP_RPT_GITARS @DTODT=@SQL
SET @MSG='STEP 7.1 '+CONVERT(VARCHAR,DATEDIFF(SS,@TIME,GETDATE()))
RAISERROR(@MSG,0,1) WITH NOWAIT
SET @TIME=GETDATE()
--SET INDENT QTY


SET @SQL='SELECT AD.DEPT_ID,AD.ARS_ID,L.DEPT_NAME,Minimum_Days,Target_Days,Maximum_Days'    
+CASE WHEN LEN(@JOIN_SELECT)>0 THEN CHAR(13)+','+REPLACE(@JOIN_SELECT,',SUM',CHAR(13)+',SUM') ELSE '' END          
+',T.DYS SeasonDays          
,L.LEAD_DAYS          
,ISNULL(AD.Safety_Level,0)AS Safety_Level          
,ISNULL(AD.Target_Daily_Sale,0) AS Target_Daily_Sale          
,CEILING(Minimum_Days*ISNULL(AD.Target_Daily_Sale,0)) AS Minimum_Order          
,CEILING(Target_Days*ISNULL(AD.Target_Daily_Sale,0)*(1.0+ISNULL(AD.SAFETY_LEVEL,0)/100.0)) AS Re_Order          
,CEILING(Maximum_Days*ISNULL(AD.Target_Daily_Sale,0)) AS Maximum_Order          
,SUM(ISNULL(GIT.QTY,0))AS Indent_Stock'    
+CHAR(13)+REPLACE(@SALE,'Qty_Sold','')+'/CASE T.DYS WHEN 0 THEN 1 ELSE T.DYS END AQSPD'          
+CHAR(13)+'INTO '+REPLACE(@REPORT,'tempdb..','')+          
+CHAR(13)+'FROM '+REPLACE(REPLACE(REPLACE(@JOIN,'JOIN #LOC ON #LOC.LOC=RF.DEPT_ID',''),'ON SKU.PRODUCT_CODE=RF.PRODUCT_CODE',''),'JOIN SKU','SKU')         
+CASE WHEN ISNULL(@AF,'')='' THEN '' ELSE CHAR(13)+'JOIN ARTICLE_FIX_ATTR AF (NOLOCK) ON AF.ARTICLE_CODE=ART.ARTICLE_CODE' END        
+CHAR(13)+'JOIN ARS_DET AD (NOLOCK)'           
+CHAR(13)+'JOIN LOCATION L (NOLOCK) ON AD.DEPT_ID=L.DEPT_ID'       
+CHAR(13)+'JOIN #LOC TMPLOC ON TMPLOC.LOC=L.DEPT_ID '           
+CASE ISNULL(@AF,'') WHEN '' THEN '' ELSE CHAR(13)+REPLACE(LTRIM(RTRIM(@AF)),CHAR(13),'') END          
+CHAR(13)+'ON '+CASE LEN(ISNULL(@ADJOIN,'')) WHEN 0 THEN '1=1' ELSE @ADJOIN END          
+CHAR(13)+'JOIN ##tPlan T ON T.ARS_ID=AD.ARS_ID'   
+CHAR(13)+'LEFT JOIN '+@cRfDbName+@RF_TABLE+' RF (NOLOCK) ON RF.PRODUCT_CODE=SKU.PRODUCT_CODE AND RF.DEPT_ID=AD.DEPT_ID'   
+CHAR(13)+'LEFT JOIN #GITQTY GIT (NOLOCK) ON GIT.PRODUCT_CODE=SKU.PRODUCT_CODE AND GIT.LOC=AD.DEPT_ID'   
+CHAR(13)+@WHERE    
+CHAR(13)+REPLACE(@GROUP,'AD.DEPT_ID','L.DEPT_NAME')+',T.DYS,L.LEAD_DAYS,AD.DEPT_ID'+',ISNULL(AD.SAFETY_LEVEL,0),ISNULL(AD.TARGET_DAILY_SALE,0)'          
SET @SQL=REPLACE(@SQL,'THEN +','THEN')    
SET @SQL=REPLACE(@SQL,'VW_ARS_RF','VW_ARS_SALES')
PRINT REPLICATE('*',100)+CHAR(13)+@SQL+CHAR(13)+REPLICATE('*',100)          
EXEC(@SQL)     

SET @MSG='STEP 8 '+CONVERT(VARCHAR,DATEDIFF(SS,@TIME,GETDATE()))
RAISERROR(@MSG,0,1) WITH NOWAIT
SET @TIME=GETDATE()

SET @MYSQL='UPDATE '+REPLACE(@REPORT,'tempdb..','')+' SET AQSPD=ISNULL(Qty_Sold,0)/(SELECT TOP 1 CASE T.DYS WHEN 0 THEN 1 ELSE T.DYS END FROM ##tPlan T)'  
EXEC(@MYSQL)    

--    
SET @SQL=''    
SELECT @SQL=COALESCE(@SQL,'')+'RF.'+COLUMN_NAME+'=WH.'+COLUMN_NAME+' AND '     
FROM TEMPDB.INFORMATION_SCHEMA.COLUMNS    
WHERE TABLE_NAME LIKE REPLACE(@REPORT,'tempdb..','') AND (COLUMN_NAME='ARTICLE_CODE' OR COLUMN_NAME LIKE 'PARA%CODE')    
    
SET @SQL=RTRIM(@SQL)    
    
IF LEN(@SQL)>3 SET @SQL=LEFT(@SQL,LEN(@SQL)-3)    
    
IF ISNULL(@SQL,'')='' SET @SQL='1=1'    
    
--LOC_STOCK    
DECLARE @TABSTK VARCHAR(1000)='##VW_STOCK_'+REPLACE(CONVERT(VARCHAR,GETDATE(),102),'.','')+REPLACE(CONVERT(VARCHAR,GETDATE(),108),':','')
EXEC PR_ARS_TEMP_VW_STOCK_DATA @cRfDbName,@RF_TABLE,@TABSTK
SET @MSG='STEP 8.1 '+CONVERT(VARCHAR,DATEDIFF(SS,@TIME,GETDATE()))
RAISERROR(@MSG,0,1) WITH NOWAIT
SET @TIME=GETDATE()


DECLARE @JN VARCHAR(MAX)    
SET @JN=REPLACE(REPLACE(@JOIN,'ARTICLE ART','ARTICLE'),'ART.','ARTICLE.')    
--PRINT REPLICATE('*',100)+CHAR(13)+ISNULL(@JN,'')+CHAR(13)+REPLICATE('*',100)    
SET @SQL='UPDATE RPT SET RPT.STOCK=ISNULL(S.Stock,0)+ISNULL(S.OPS_Stock,0)    
,RPT.WH_STOCK=ISNULL(S.WH_Stock,0)+ISNULL(S.WH_OPS,0)    
--,RPT.Indent_Stock=ISNULL(S.GIT_QTY,0)
FROM     
(SELECT '+CASE WHEN ISNULL(@SALESEL,'')='' THEN '' ELSE REPLACE(@SALESEL,'SECTIONM','SM')+'' END    
+CHAR(13)+' '+REPLACE(REPLACE(REPLACE(SUBSTRING(REPLACE(REPLACE(REPLACE(@STOCK,'AD.DEPT_ID','#LOC.LOC'),'RF.','RF.'),'WH_STOCK',''),2,4000),'RF.STOCK_QTY','RF.OPS_QTY'),') Stock',') OPS_Stock'),'=#LOC.LOC',' IN ('+@LOCS+')')    
+CHAR(13)+','+REPLACE(SUBSTRING(REPLACE(REPLACE(REPLACE(@STOCK,'AD.DEPT_ID','#LOC.LOC'),'RF.','RF.'),'WH_STOCK',''),2,4000),'=#LOC.LOC',' IN ('+@LOCS+')')    
+CHAR(13)+','+SUBSTRING(REPLACE(REPLACE(@WH_STOCK,'RF.','RF.'),'WH_STOCK',''),2,4000)+' WH_Stock'    
+CHAR(13)+','+REPLACE(SUBSTRING(REPLACE(REPLACE(@WH_STOCK,'RF.','RF.'),'WH_STOCK',''),2,4000),'RF.STOCK_QTY','RF.OPS_QTY')+' WH_OPS'    
+CHAR(13)+', '+REPLACE(REPLACE(REPLACE(SUBSTRING(REPLACE(REPLACE(REPLACE(@STOCK,'AD.DEPT_ID','#LOC.LOC'),'RF.','RF.'),'WH_STOCK',''),2,4000),'RF.STOCK_QTY','RF.GIT_QTY'),') Stock',') GIT_QTY'),'=#LOC.LOC',' IN ('+@LOCS+')')    
+CHAR(13)+' FROM '+@TABSTK+' RF (NOLOCK)'    
--+CHAR(13)+'JOIN #LOC ON #LOC.LOC=RF.DEPT_ID'    
+CHAR(13)+'JOIN loc_view ON loc_view.MAJOR_DEPT_ID=RF.DEPT_ID'    
+REPLACE(REPLACE(@JN,'JOIN #LOC ON #LOC.LOC=RF.DEPT_ID',''),'ON SKU.PRODUCT_CODE=RF.PRODUCT_CODE','')    
+CHAR(13)+CASE CHARINDEX('ARTICLE',@JN) WHEN 0 THEN CHAR(13)+'JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE=SKU.ARTICLE_CODE' ELSE '' END    
+CHAR(13)+CASE CHARINDEX('SECTIOND',@JN) WHEN 0 THEN CHAR(13)+'JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE = SECTIOND.SUB_SECTION_CODE' ELSE '' END    
+CHAR(13)+CASE CHARINDEX('SECTIONM',@JN) WHEN 0 THEN CHAR(13)+'JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE = SECTIONM.SECTION_CODE ' ELSE '' END    
+CHAR(13)+CASE WHEN @SALESEL LIKE '%ATTR%KEY_CODE%' THEN 'JOIN ARTICLE_FIX_ATTR AF (NOLOCK)ON AF.ARTICLE_CODE=ARTICLE.ARTICLE_CODE ' ELSE '' END    
+CHAR(13)+'ON SKU.PRODUCT_CODE=RF.PRODUCT_CODE'    
+CHAR(13)+'WHERE SKU.ER_FLAG IN (''0'',''1'') AND loc_view.REPORT_BLOCKED=0 AND SM.ITEM_TYPE=1 AND loc_view.INACTIVE=0 '    
+CHAR(13)+CASE WHEN ISNULL(@SALESEL,'')='' THEN '' ELSE CHAR(13)+'GROUP BY '+REPLACE(LEFT(@SALESEL,LEN(@SALESEL)-1),'SECTIONM','SM')+'' END    
+CHAR(13)+')S    
JOIN '+REPLACE(@REPORT,'tempdb..','')+' RPT    
ON '+CASE ISNULL(@SALEJN,'') WHEN '' THEN '1=1' ELSE LEFT(RTRIM(@SALEJN),LEN(RTRIM(@SALEJN))-3) END    
--SET @SQL=REPLACE(REPLACE(@SQL,'SECTIONM.','SM.'),'SECTIOND.','SD.')    
PRINT '418 ALL'+CHAR(13)+@SQL    
EXEC(@SQL)    
SET @MSG='STEP 9 '+CONVERT(VARCHAR,DATEDIFF(SS,@TIME,GETDATE()))
RAISERROR(@MSG,0,1) WITH NOWAIT
SET @TIME=GETDATE()
    
SET @SQL=''          
SELECT @SQL=COALESCE(@SQL,'')+'R.'+T.CODE+'=AD.'+T.CODE+' AND '          
FROM          
(SELECT V.CODE          
FROM ARS_MST AM (NOLOCK) JOIN ARS_STOCK_LEVEL_MST SM (NOLOCK) ON AM.ARS_ID=SM.ARS_ID          
JOIN VW_ATTRIBUTES V ON V.COLNAME=STK_LEVEL_PARA_NAME          
WHERE AM.PLAN_NAME=@cPlan_Name AND V.CODE NOT LIKE 'ATTR%')T          
    
SET @CATTR=''    
SELECT @CATTR=COALESCE(@CATTR,'')+'R.'+T.CODE+'='+T.TABLE_NAME+'.'+T.CODE+' AND '          
FROM          
(SELECT V.CODE,V.TABLE_NAME          
FROM ARS_MST AM (NOLOCK) JOIN ARS_STOCK_LEVEL_MST SM (NOLOCK) ON AM.ARS_ID=SM.ARS_ID          
JOIN VW_ATTRIBUTES V ON V.COLNAME=STK_LEVEL_PARA_NAME          
WHERE AM.PLAN_NAME=@cPlan_Name AND V.CODE LIKE 'ATTR%' AND 1=1)T          
    
IF LEN(ISNULL(@SQL,''))>3 SET @SQL=LEFT(RTRIM(@SQL),LEN(@SQL)-3)    
IF ISNULL(@SQL,'')='' SET @SQL='1=1'    
    
SET @SQL='UPDATE R SET R.INDENT_STOCK=ISNULL(R.INDENT_STOCK,0)+ISNULL(D.quantity,0)'    
   +CHAR(13)+'FROM '+REPLACE(@REPORT,'tempdb..','')+' R'    
   +CHAR(13)+'LEFT JOIN BUYER_ORDER_MST M (NOLOCK)'     
   +CHAR(13)+' JOIN BUYER_ORDER_DET D (NOLOCK) ON M.ORDER_ID=D.ORDER_ID AND ISNULL(M.CANCELLED,0)=0 AND ISNULL(M.APPROVED,0)=1'    
   --+CASE WHEN ISNULL(@CATTR,'')='' THEN '' ELSE     
   +CHAR(13)+' JOIN ARTICLE (NOLOCK)'    
   +CHAR(13)+' JOIN SECTIOND (NOLOCK) ON SECTIOND.SUB_SECTION_CODE=ARTICLE.SUB_SECTION_CODE'    
   +CHAR(13)+' JOIN SECTIONM (NOLOCK) ON SECTIONM.SECTION_CODE=SECTIOND.SECTION_CODE'    
   +CHAR(13)+' JOIN ARTICLE_FIX_ATTR AF (NOLOCK) ON AF.ARTICLE_CODE=ARTICLE.ARTICLE_CODE'    
   +CHAR(13)+' JOIN ATTR1_MST (NOLOCK) ON ATTR1_MST.ATTR1_KEY_CODE=AF.ATTR1_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR2_MST (NOLOCK) ON ATTR2_MST.ATTR2_KEY_CODE=AF.ATTR2_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR3_MST (NOLOCK) ON ATTR3_MST.ATTR3_KEY_CODE=AF.ATTR3_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR4_MST (NOLOCK) ON ATTR4_MST.ATTR4_KEY_CODE=AF.ATTR4_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR5_MST (NOLOCK) ON ATTR5_MST.ATTR5_KEY_CODE=AF.ATTR5_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR6_MST (NOLOCK) ON ATTR6_MST.ATTR6_KEY_CODE=AF.ATTR6_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR7_MST (NOLOCK) ON ATTR7_MST.ATTR7_KEY_CODE=AF.ATTR7_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR8_MST (NOLOCK) ON ATTR8_MST.ATTR8_KEY_CODE=AF.ATTR8_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR9_MST (NOLOCK) ON ATTR9_MST.ATTR9_KEY_CODE=AF.ATTR9_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR10_MST (NOLOCK) ON ATTR10_MST.ATTR10_KEY_CODE=AF.ATTR10_KEY_CODE'   
   +CHAR(13)+' JOIN ATTR11_MST (NOLOCK) ON ATTR11_MST.ATTR11_KEY_CODE=AF.ATTR11_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR12_MST (NOLOCK) ON ATTR12_MST.ATTR12_KEY_CODE=AF.ATTR12_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR13_MST (NOLOCK) ON ATTR13_MST.ATTR13_KEY_CODE=AF.ATTR13_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR14_MST (NOLOCK) ON ATTR14_MST.ATTR14_KEY_CODE=AF.ATTR14_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR15_MST (NOLOCK) ON ATTR15_MST.ATTR15_KEY_CODE=AF.ATTR15_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR16_MST (NOLOCK) ON ATTR16_MST.ATTR16_KEY_CODE=AF.ATTR16_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR17_MST (NOLOCK) ON ATTR17_MST.ATTR17_KEY_CODE=AF.ATTR17_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR18_MST (NOLOCK) ON ATTR18_MST.ATTR18_KEY_CODE=AF.ATTR18_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR19_MST (NOLOCK) ON ATTR19_MST.ATTR19_KEY_CODE=AF.ATTR19_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR20_MST (NOLOCK) ON ATTR20_MST.ATTR20_KEY_CODE=AF.ATTR20_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR21_MST (NOLOCK) ON ATTR21_MST.ATTR21_KEY_CODE=AF.ATTR21_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR22_MST (NOLOCK) ON ATTR22_MST.ATTR22_KEY_CODE=AF.ATTR22_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR23_MST (NOLOCK) ON ATTR23_MST.ATTR23_KEY_CODE=AF.ATTR23_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR24_MST (NOLOCK) ON ATTR24_MST.ATTR24_KEY_CODE=AF.ATTR24_KEY_CODE'    
   +CHAR(13)+' JOIN ATTR25_MST (NOLOCK) ON ATTR25_MST.ATTR25_KEY_CODE=AF.ATTR25_KEY_CODE'    
   +CHAR(13)+'ON ARTICLE.ARTICLE_CODE=D.ARTICLE_CODE'    
   --END    
    +CHAR(13)+'ON '+ISNULL(@CATTR,'')+'R.DEPT_ID=M.DEPT_ID AND '+REPLACE(@SQL,'AD.','D.')          
SET @SQL=REPLACE(REPLACE(@SQL,'D.SUB_SECTION_CODE','SECTIOND.SUB_SECTION_CODE'),'D.SECTION_CODE','SECTIONM.SECTION_CODE')        
SET @SQL=REPLACE(REPLACE(@SQL,'SECTIONSECTIOND.','SECTIOND.'),'SECTIONSECTIONM.','SECTIONM.')    
--PRINT CHAR(13)+@SQL    
EXEC(@SQL)          
  
SET @MSG='STEP 10 '+CONVERT(VARCHAR,DATEDIFF(SS,@TIME,GETDATE()))
RAISERROR(@MSG,0,1) WITH NOWAIT
SET @TIME=GETDATE()

--25 JUN 2019
DECLARE @ACAL CHAR(1)
--SET @ACAL='1'
--SELECT TOP 1 @ACAL=AUTO_CALCULATE_TARGET_SALES FROM ARS_MST WHERE PLAN_NAME=@cPlan_Name
--IF ISNULL(@ACAL,'')='' SET @ACAL='0'
SET @ACAL='0'
--25 JUN 2019
SET @MYSQL='SELECT '''+@cPlan_Name+''' PLANNAME,*          
,Stock CBS          
,FLOOR(CONVERT(NUMERIC(18,2),ROUND(Stock/CASE AQSPD WHEN 0 THEN 1 ELSE AQSPD END,2))) as Days_of_Stock          
          
,SOS_Variance=CASE WHEN Stock<Minimum_Order THEN ABS(Minimum_Order-Stock-WH_STOCK) ELSE 0 END          
,ReOrder_Variance=CASE WHEN Stock BETWEEN Minimum_Order AND Re_Order THEN ABS(Re_Order-Stock-WH_STOCK) ELSE 0 END          
,MaxLevel_Variance=CASE WHEN Stock>Maximum_Order THEN ABS(Maximum_Order-Stock-WH_STOCK) ELSE 0 END          
          
,ReOrder_Qty=    
   CASE WHEN Stock<Re_Order THEN Re_Order-Stock-'+@ACAL+'*WH_STOCK-Indent_Stock    
     WHEN Stock>Maximum_Order THEN 0*(Stock-Maximum_Order)           
     ELSE 0 END          
          
,Suggested_ReOrder_Qty=    
    CASE WHEN Stock<Re_Order THEN Re_Order-Stock-'+@ACAL+'*WH_STOCK-Indent_Stock    
      WHEN Stock>Maximum_Order THEN 0*(Stock-Maximum_Order)           
      ELSE 0 END    
,'+CAST(@@SPID AS VARCHAR)+' AS SP_ID          
,CAST(ROUND(LEAD_DAYS*AQSPD,2) AS NUMERIC(14,2))Forecast_Sale          
,CAST(ROUND(Stock-(LEAD_DAYS*AQSPD),2) AS NUMERIC(14,2)) Forecast_Stock          
,CEILING((Stock-(LEAD_DAYS*AQSPD))/CASE AQSPD WHEN 0 THEN 1 ELSE AQSPD END) Forecast_Days_of_Stock          
INTO '+REPLACE(@REPORT_PLAN,'tempdb..','')+'  
FROM '+REPLACE(@REPORT,'tempdb..','')+' R'          
PRINT @MYSQL  
EXEC(@MYSQL)    
  
    
SET @MSG='STEP 11 '+CONVERT(VARCHAR,DATEDIFF(SS,@TIME,GETDATE()))
RAISERROR(@MSG,0,1) WITH NOWAIT
SET @TIME=GETDATE()


DECLARE @INSERT VARCHAR(MAX),@SELECT VARCHAR(MAX)          
IF OBJECT_ID('TEMPDB..#FIELDS') IS NOT NULL DROP TABLE #FIELDS          
          
SELECT * INTO #FIELDS          
FROM          
(          
 SELECT U.COLUMN_NAME COL          
,SEL=CASE WHEN T.COLUMN_NAME IS NULL THEN           
          CASE WHEN U.CHARACTER_MAXIMUM_LENGTH IS NOT NULL AND U.COLUMN_NAME LIKE '%CODE' AND U.COLUMN_NAME NOT LIKE '%ARTICLE%' THEN '''0000000'' AS '+U.COLUMN_NAME           
               WHEN U.CHARACTER_MAXIMUM_LENGTH IS NOT NULL AND U.COLUMN_NAME LIKE '%CODE' AND U.COLUMN_NAME LIKE '%ARTICLE%'     THEN '''00000000'' AS '+U.COLUMN_NAME          
               WHEN U.CHARACTER_MAXIMUM_LENGTH IS NOT NULL THEN ''''' AS '+U.COLUMN_NAME          
               WHEN U.DATETIME_PRECISION IS NOT NULL THEN '''1900-01-01'' AS '+U.COLUMN_NAME    
               WHEN U.NUMERIC_PRECISION IS NOT NULL THEN 'ISNULL('+U.COLUMN_NAME+',0) AS '+U.COLUMN_NAME           
          END           
          ELSE U.COLUMN_NAME           
     END          
,INS=U.COLUMN_NAME          
FROM (SELECT * FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='ARS_ARS_PLAN_DETAIL_UPLOAD' AND COLUMN_NAME NOT IN ('INV_MODE','MEMO_TYPE','REF_NO'))U          
LEFT JOIN (SELECT * FROM TEMPDB.INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME=REPLACE(@REPORT_PLAN,'tempdb..',''))T ON U.COLUMN_NAME=T.COLUMN_NAME          
)T          
ORDER BY CAST(CASE WHEN T.COL LIKE '%SECTION%' OR T.COL LIKE '%PARA%' OR T.COL LIKE '%ATTR%' OR T.COL LIKE '%ARTICLE%' THEN 1 ELSE 0 END AS INT)          
    
SET @MSG='STEP 12 '+CONVERT(VARCHAR,DATEDIFF(SS,@TIME,GETDATE()))
RAISERROR(@MSG,0,1) WITH NOWAIT
SET @TIME=GETDATE()


SELECT @SELECT=COALESCE(@SELECT,'')+SEL+',',@INSERT=COALESCE(@INSERT,'')+INS+','          
FROM #FIELDS --WHERE SEL           
    
DECLARE @ORDER VARCHAR(MAX)='ORDER BY '    
IF @SEL LIKE '%ARTICLE%' SET @ORDER+='ARTICLE_NO'    
IF @SEL LIKE '%PARA1%' SET @ORDER+=',PARA1_NAME'    
IF @SEL LIKE '%PARA2%' SET @ORDER+=',PARA2_NAME'    
IF @SEL LIKE '%PARA3%' SET @ORDER+=',PARA3_NAME'    
IF @SEL LIKE '%PARA4%' SET @ORDER+=',PARA4_NAME'    
IF @SEL LIKE '%PARA5%' SET @ORDER+=',PARA5_NAME'    
IF @SEL LIKE '%PARA6%' SET @ORDER+=',PARA6_NAME'    
IF @SEL LIKE '%SECTION_NAME%' SET @ORDER+=',SECTION_NAME'    
IF @SEL LIKE '%SUB_SECTION_NAME%' SET @ORDER+=',SUB_SECTION_NAME'    
    
SET @SELECT=REPLACE(@SELECT,''''' AS INDENT_ID,','')          
SET @SELECT=REPLACE(REPLACE(REPLACE(@SELECT,''''' AS DEPT_ID','DEPT_NAME'),''''' AS PLANNAME','PLANNAME'),'0 AS SP_ID','@@SPID AS SP_ID')          
SET @SELECT=@SELECT    
--+CASE LEN(@SEL) WHEN 0 THEN '' ELSE REPLACE(@SEL,'ARTICLE_NO,','') END          
+'DEPT_NAME,Safety_Level,Qty_Sold,Stock,CONVERT(DECIMAL(18,4),ROUND(ISNULL(AQSPD,0),4)) AS Sell_Thru,Days_of_Stock          
 ,Lead_Days,Forecast_Sale,Forecast_Stock,Forecast_Days_of_Stock        
 ,Week1_Sale,Week2_Sale,Week3_Sale,Week4_Sale/*,Rest_Sale*/,WH_Stock          
 ,ReOrder_Qty,Suggested_ReOrder_Qty,''0000000''User_Code,CAST(0 AS BIT) Cancelled,CAST(0 AS BIT) Approved          
 ,CAST(2 AS INT) INV_MODE,CAST(1 AS INT)MEMO_TYPE,''''REF_NO,NEWID() ROW_ID,'          
          
SET @SELECT=LEFT(@SELECT,LEN(@SELECT)-1)          
SET @INSERT=LEFT(@INSERT,LEN(@INSERT)-1)          
SET @SELECT=REPLACE(@SELECT,'MINIMUM_REORDER','RE_ORDER')          
SET @INSERT=REPLACE(@INSERT,'MINIMUM_REORDER','RE_ORDER')          
SET @SEL=ISNULL(@SEL,'')    
    
SET @SELECT=REPLACE(REPLACE(REPLACE(@SELECT,'RE_ORDER,',''),'MINIMUM_ORDER,',''),'MAXIMUM_ORDER,','')     

DECLARE @TMP VARCHAR(100),@ORD VARCHAR(MAX)=REPLACE(@ORDER,'ORDER BY','')+','    
WHILE CHARINDEX(',',@ORD)>0    
 BEGIN    
    SET @TMP=LTRIM(LEFT(@ORD,CHARINDEX(',',@ORD)))    
    SET @ORD=REPLACE(@ORD,@TMP,'')     
    SET @SELECT=REPLACE(@SELECT,@TMP,'')    
    SET @SELECT=@TMP+@SELECT    
 END    

--SET @SELECT=REPLACE(@SELECT,'SUB_','SUB_SECTION_NAME,')    
SET @SELECT=REPLACE(@SELECT,'SUB_','')    
SET @SELECT=REPLACE(@SELECT,'AND R.SUB_SECTION_NAME,SECTION_CODE=SECTIOND.SUB_SECTION_NAME,SECTION_CODE','AND R.SUB_SECTION_CODE=SECTIOND.SUB_SECTION_CODE')     
SET @SELECT=REPLACE(@SELECT,'ARTICLE_NO','R.ARTICLE_NO,A.ARTICLE_NAME')    
SET @SELECT=REPLACE(@SELECT,'ARTICLE_CODE','R.ARTICLE_CODE')    
SET @SELECT=REPLACE(@SELECT,'PARA1_CODE','R.PARA1_CODE')    
SET @SELECT=REPLACE(@SELECT,'PARA2_CODE','R.PARA2_CODE')    
SET @SELECT=REPLACE(@SELECT,','''' AS '''' AS',','''' AS')     

SET @SQL='SELECT '''+@cPlan_Name+''' PlanName,'''+@ARS_ID+'''ARS_ID,DEPT_ID,'    
    --+REPLACE(@SELECT,',ISNULL(SELL_THRU,0) AS SELL_THRU','')    
    +REPLACE(REPLACE(@SELECT,',ISNULL(SELL_THRU,0) AS SELL_THRU',''),'AS R.',' AS ')    
    +CHAR(13)+' FROM '+REPLACE(@REPORT_PLAN,'tempdb..','')+' R'     
    +CHAR(13)+CASE WHEN CHARINDEX('ARTICLE_NO',@SELECT)>0 THEN 'JOIN ARTICLE A ON A.ARTICLE_NO=R.ARTICLE_NO' ELSE '' END    
    +CHAR(13)+' WHERE REORDER_QTY>=0 '+CASE LEN(@SEL) WHEN 0 THEN '' ELSE CHAR(13)+@ORDER END    
SET @SQL=REPLACE(@SQL,'AND R.SUB_SECTION_NAME,SECTION_CODE=SECTIOND.SUB_SECTION_NAME,SECTION_CODE','AND R.SUB_SECTION_NAME=SECTIOND.SUB_SECTION_NAME')     
PRINT '619 '+@SQL    
EXEC(@SQL)          
    
END_PROC:          
IF @ARS_ID IS NULL           
   SELECT 'NO PLAN FOUND' ERRMSG          
ELSE           
   SELECT '' ERRMSG          
SET NOCOUNT OFF          
/*
EXEC SP3S_ARS_GETDATA 15,@cFilterCriteria='SUMMER',@CCOLUMNNAME='IN (''DM'',''WH'')',@CCOLUMNORDER='2019-01-22'    
EXEC SP3S_PREPARE_ARS_ID_UPLOAD_DETAIL 'SUMMER','2019-01-22','IN (''DM'',''WH'')'    
EXEC SP3S_ARS_GETDATA 15,@cFilterCriteria='RFOPT',@CCOLUMNNAME='IN (''DM'')'    
SP3S_PREPARE_ARS_ID_UPLOAD_DETAIL @cPlan_Name='test44',@loc='IN (''11'')'
*/
END