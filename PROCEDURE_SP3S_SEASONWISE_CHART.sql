CREATE PROCEDURE SP3S_SEASONWISE_CHART
(
    @NMODE			       INT=1, --- 1 FOR NRV --2 FOR QUANTITY AND 3 FOR GROSS MARGIN
	@DTODATE 			   VARCHAR(50)='', --DATE PASS OF FILTER
	@CCONVERSIONFACTOR	   INT=1,--1 FOR DIVIDE BY THOUSAND 2 FOR 10 THOUSAND 3 FOR LAKH   
	@LASTYEARCOMPERISION   INT=0,--0 FOR CURRENT YEAR VALUE AND 1 FOR CUR YEAR PREV YEAR AND CONVERSION FACTOR
	@CDEPTID               VARCHAR(5)=''--LOCATION FILTER
	
)
--WITH ENCRYPTION
AS
BEGIN  
    DECLARE @DSDATE VARCHAR(50),@TNRV NUMERIC(18,2),@NCONVERSIONAMOUNT NUMERIC(12,0),@TQTY NUMERIC(10,2),@TGM NUMERIC(18,2),@TPREVGM NUMERIC(18,2) 
    
    DECLARE @TMPNRV TABLE (SEASON_NAME VARCHAR(50), CUR_YEAR_NRV NUMERIC(18,2),CUR_CONT_PER NUMERIC(10,0),PREV_YEAR_NRV NUMERIC(18,2),PREV_CONT_PER NUMERIC(10,0))
    DECLARE @TMPQTY TABLE (SEASON_NAME VARCHAR(50), CUR_YEAR_QTY NUMERIC(18,2),CUR_CONT_PER NUMERIC(10,0),PREV_YEAR_QTY NUMERIC(18,2),PREV_CONT_PER NUMERIC(10,0))
    
	SET @DSDATE=CONVERT(VARCHAR(11),(SELECT DATEADD(DD,0, DATEDIFF(DD,0, DATEADD( MM, -(((12 + DATEPART(M, @DTODATE)) - 4)%12), 
	@DTODATE ) - DATEPART(D,DATEADD(	MM,	-(((12 + DATEPART(M, @DTODATE)) - 4)%12),@DTODATE ))+1 ) )),120)
    
    
	    
	IF @CCONVERSIONFACTOR=0
	SET @CCONVERSIONFACTOR=1

	IF @CCONVERSIONFACTOR=1
		 SET @NCONVERSIONAMOUNT=1000
	ELSE IF @CCONVERSIONFACTOR=2
		 SET @NCONVERSIONAMOUNT=100000
	ELSE IF @CCONVERSIONFACTOR=3
		 SET @NCONVERSIONAMOUNT=10000000
		 
	 IF OBJECT_ID('TEMPDB..#TMP_CUR_SEASON','U' ) IS NOT NULL
	       DROP TABLE #TMP_CUR_SEASON
	    
		SELECT SEASON_NAME, CONVERT(DATETIME,CAST(CASE WHEN MONTH(PERIOD_FROM) BETWEEN 1 AND 3 THEN YEAR(GETDATE()) ELSE YEAR(GETDATE())-1 END AS VARCHAR(100))+'-'+CAST(MONTH(PERIOD_FROM) AS VARCHAR(10))+'-'+CAST(DAY(PERIOD_FROM) AS VARCHAR(10))) AS PERIOD_FROM,
			   CONVERT(DATETIME,CAST(CASE WHEN MONTH(PERIOD_TO) BETWEEN 1 AND 3 THEN YEAR(GETDATE()) ELSE YEAR(GETDATE())-1 END AS VARCHAR(100))+'-'+CAST(MONTH(PERIOD_TO) AS VARCHAR(10))+'-'+CAST(DAY(PERIOD_TO) AS VARCHAR(10))) AS PERIOD_TO
		INTO #TMP_CUR_SEASON
		FROM SEASON_MST
        
        IF OBJECT_ID('TEMPDB..#TMP_PREV_SEASON','U' ) IS NOT NULL
	       DROP TABLE #TMP_PREV_SEASON
	       
		SELECT SEASON_NAME, CONVERT(DATETIME,CAST(CASE WHEN MONTH(PERIOD_FROM) BETWEEN 1 AND 3 THEN YEAR(GETDATE())-1 ELSE YEAR(GETDATE())-2 END AS VARCHAR(100))+'-'+CAST(MONTH(PERIOD_FROM) AS VARCHAR(10))+'-'+CAST(DAY(PERIOD_FROM) AS VARCHAR(10))) AS PERIOD_FROM,
			   CONVERT(DATETIME,CAST(CASE WHEN MONTH(PERIOD_TO) BETWEEN 1 AND 3 THEN YEAR(GETDATE())-1 ELSE YEAR(GETDATE())-2 END AS VARCHAR(100))+'-'+CAST(MONTH(PERIOD_TO) AS VARCHAR(10))+'-'+CAST(DAY(PERIOD_TO) AS VARCHAR(10))) AS PERIOD_TO
	    INTO #TMP_PREV_SEASON
		FROM SEASON_MST 
		      
	IF @NMODE=1
	BEGIN
	    
	     INSERT INTO @TMPNRV(SEASON_NAME,CUR_YEAR_NRV)
	     SELECT S.SEASON_NAME AS SEASON_NAME,SUM(NET_AMOUNT ) AS NET_AMOUNT 
	     FROM CMM01106 A (NOLOCK)
	     JOIN
		 (
		 SELECT SEASON_NAME, PERIOD_FROM,PERIOD_TO
		 FROM #TMP_CUR_SEASON 
		 ) S ON A.CM_DT BETWEEN PERIOD_FROM AND PERIOD_TO
         JOIN LOCATION B (NOLOCK) ON A.location_Code =B.DEPT_ID 
         WHERE B.INACTIVE =0 AND A.CANCELLED =0
         AND A.CM_DT BETWEEN @DSDATE AND @DTODATE
         AND (@CDEPTID='' OR A.location_Code =@CDEPTID)
         GROUP BY SEASON_NAME
         
      IF @LASTYEARCOMPERISION=1
      BEGIN
         SET @DSDATE=(SELECT DATEADD(YEAR,-1,@DSDATE))
         SET @DTODATE=CONVERT(VARCHAR(11),(SELECT DATEADD(YEAR,-1,@DTODATE)),120)
         
         INSERT INTO @TMPNRV(SEASON_NAME,PREV_YEAR_NRV )
         SELECT S.SEASON_NAME AS SEASON_NAME,SUM(NET_AMOUNT ) AS NET_AMOUNT 
	     FROM CMM01106 A (NOLOCK)
	     JOIN
		 (
		 SELECT SEASON_NAME, PERIOD_FROM,PERIOD_TO
		 FROM #TMP_PREV_SEASON 
		 ) S ON A.CM_DT BETWEEN PERIOD_FROM AND PERIOD_TO
         JOIN LOCATION B (NOLOCK) ON A.location_Code =B.DEPT_ID 
         WHERE B.INACTIVE =0 AND A.CANCELLED =0
         AND A.CM_DT BETWEEN @DSDATE AND @DTODATE
         AND (@CDEPTID='' OR A.location_Code =@CDEPTID)
         GROUP BY SEASON_NAME
        
        IF OBJECT_ID ('TEMPDB..#TMPNRV','U') IS NOT NULL
            DROP TABLE #TMPNRV
            
         SELECT SEASON_NAME,SUM(ISNULL(CUR_YEAR_NRV,0)) AS CUR_YEAR_NRV,
                SUM(ISNULL(PREV_YEAR_NRV,0)) AS PREV_YEAR_NRV,
                SUM(ISNULL(CUR_CONT_PER,0)) AS CUR_CONT_PER,
                SUM(ISNULL(PREV_CONT_PER,0)) AS PREV_CONT_PER
         INTO #TMPNRV
         FROM @TMPNRV
         GROUP BY SEASON_NAME
         
         
         
         SELECT @TNRV=SUM(ISNULL(CUR_YEAR_NRV ,0)) FROM #TMPNRV
		 UPDATE #TMPNRV SET CUR_CONT_PER =(CUR_YEAR_NRV *100)/CASE WHEN @TNRV=0 THEN 1 ELSE @TNRV END  
		 UPDATE #TMPNRV SET CUR_YEAR_NRV=CUR_YEAR_NRV/@NCONVERSIONAMOUNT
		 
         SELECT @TNRV=SUM(ISNULL(PREV_YEAR_NRV ,0)) FROM #TMPNRV
		 UPDATE #TMPNRV SET PREV_CONT_PER =(PREV_YEAR_NRV *100)/CASE WHEN @TNRV=0 THEN 1 ELSE @TNRV END  
		 UPDATE #TMPNRV SET PREV_YEAR_NRV=PREV_YEAR_NRV/@NCONVERSIONAMOUNT
         
         SELECT A.SEASON_NAME,ISNULL(CUR_YEAR_NRV,0) AS CUR_YEAR_NRV ,
         ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER,
         ISNULL(PREV_YEAR_NRV,0) AS PREV_YEAR_NRV ,
         ISNULL(PREV_CONT_PER ,0) AS PREV_CONT_PER
         FROM #TMPNRV A
         
         GOTO END_PROC
         
      END 
      
      IF OBJECT_ID ('TEMPDB..#TMPNRV_CUR','U') IS NOT NULL
            DROP TABLE #TMPNRV_CUR
            
          SELECT SEASON_NAME,SUM(ISNULL(CUR_YEAR_NRV,0)) AS CUR_YEAR_NRV,
                SUM(ISNULL(CUR_CONT_PER,0)) AS CUR_CONT_PER
         INTO #TMPNRV_CUR
         FROM @TMPNRV
         GROUP BY SEASON_NAME
         
         SELECT @TNRV=SUM(ISNULL(CUR_YEAR_NRV ,0)) FROM #TMPNRV_CUR
		 UPDATE #TMPNRV_CUR SET CUR_CONT_PER =(CUR_YEAR_NRV *100)/CASE WHEN @TNRV=0 THEN 1 ELSE @TNRV END  
		 UPDATE #TMPNRV_CUR SET CUR_YEAR_NRV=CUR_YEAR_NRV/@NCONVERSIONAMOUNT
		 
		 SELECT A.SEASON_NAME,ISNULL(CUR_YEAR_NRV,0) AS CUR_YEAR_NRV ,
         ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER
         FROM #TMPNRV_CUR A
         
         GOTO END_PROC 
        

	END
ELSE IF @NMODE=2
BEGIN
          
         INSERT INTO @TMPQTY(SEASON_NAME,CUR_YEAR_QTY )
	     SELECT S.SEASON_NAME AS SEASON_NAME,SUM(QUANTITY  ) AS QUANTITY 
	     FROM CMM01106 A (NOLOCK)
	     JOIN CMD01106 CMD (NOLOCK) ON A.CM_ID =CMD.CM_ID 
	     JOIN
		 (
		 SELECT SEASON_NAME, PERIOD_FROM,PERIOD_TO
		 FROM #TMP_CUR_SEASON 
		 ) S ON A.CM_DT BETWEEN PERIOD_FROM AND PERIOD_TO
         JOIN LOCATION B (NOLOCK) ON A.location_Code =B.DEPT_ID 
         WHERE B.INACTIVE =0 AND 
         A.CANCELLED =0
         AND A.CM_DT BETWEEN @DSDATE AND @DTODATE
         AND (@CDEPTID='' OR A.location_Code=@CDEPTID)
         GROUP BY SEASON_NAME
        
         
     IF @LASTYEARCOMPERISION=1
     BEGIN
         SET @DSDATE=(SELECT DATEADD(YEAR,-1,@DSDATE))
         SET @DTODATE=CONVERT(VARCHAR(11),(SELECT DATEADD(YEAR,-1,@DTODATE)),120)
         
         INSERT INTO @TMPQTY(SEASON_NAME,PREV_YEAR_QTY )
         SELECT S.SEASON_NAME AS SEASON_NAME,SUM(QUANTITY ) AS QUANTITY 
	     FROM CMM01106 A (NOLOCK)
	     JOIN CMD01106 CMD (NOLOCK) ON A.CM_ID =CMD.CM_ID 
	     JOIN
	     (
		 SELECT SEASON_NAME, PERIOD_FROM,PERIOD_TO
		 FROM #TMP_PREV_SEASON 
		 ) S ON A.CM_DT BETWEEN PERIOD_FROM AND PERIOD_TO
         JOIN LOCATION B (NOLOCK) ON A.location_Code =B.DEPT_ID 
         WHERE B.INACTIVE =0 AND 
         A.CANCELLED =0
         AND A.CM_DT BETWEEN @DSDATE AND @DTODATE
         AND (@CDEPTID='' OR A.location_Code=@CDEPTID)
         GROUP BY SEASON_NAME
         
         IF OBJECT_ID ('TEMPDB..#TMPQTY','U') IS NOT NULL
            DROP TABLE #TMPQTY
        
         
         SELECT SEASON_NAME,SUM(ISNULL(CUR_YEAR_QTY,0)) AS CUR_YEAR_QTY,
                CONVERT(NUMERIC(12,2),SUM(ISNULL(PREV_YEAR_QTY,0))) AS PREV_YEAR_QTY,
                CONVERT(NUMERIC(12,2),SUM(ISNULL(CUR_CONT_PER,0))) AS CUR_CONT_PER,
                CONVERT(NUMERIC(12,2),SUM(ISNULL(PREV_CONT_PER,0))) AS PREV_CONT_PER
         INTO #TMPQTY
         FROM @TMPQTY
         GROUP BY SEASON_NAME
  
         SELECT @TQTY=SUM(ISNULL(CUR_YEAR_QTY ,0)) FROM #TMPQTY
		 UPDATE #TMPQTY SET CUR_CONT_PER =(CUR_YEAR_QTY *100)/CASE WHEN @TQTY=0 THEN 1 ELSE @TQTY END  
		 
         SELECT @TQTY=SUM(ISNULL(PREV_YEAR_QTY ,0)) FROM #TMPQTY
		 UPDATE #TMPQTY SET PREV_CONT_PER =(PREV_YEAR_QTY *100)/CASE WHEN @TQTY=0 THEN 1 ELSE @TQTY END  
         
         SELECT A.SEASON_NAME,ISNULL(CUR_YEAR_QTY,0) AS CUR_YEAR_QTY ,
         ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER,
         ISNULL(PREV_YEAR_QTY,0) AS PREV_YEAR_QTY ,
         ISNULL(PREV_CONT_PER ,0) AS PREV_CONT_PER
         FROM #TMPQTY A
         
         GOTO END_PROC
         
     END 
      IF OBJECT_ID ('TEMPDB..#TMPQTY_CUR','U') IS NOT NULL
            DROP TABLE #TMPQTY_CUR
        
         
         SELECT SEASON_NAME,SUM(ISNULL(CUR_YEAR_QTY,0)) AS CUR_YEAR_QTY,
                SUM(ISNULL(CUR_CONT_PER,0)) AS CUR_CONT_PER
         INTO #TMPQTY_CUR
         FROM @TMPQTY
         GROUP BY SEASON_NAME
  
         SELECT @TQTY=SUM(ISNULL(CUR_YEAR_QTY ,0)) FROM #TMPQTY_CUR
		 UPDATE #TMPQTY_CUR SET CUR_CONT_PER =(CUR_YEAR_QTY *100)/CASE WHEN @TQTY=0 THEN 1 ELSE @TQTY END  
		 
		 SELECT A.SEASON_NAME,ISNULL(CUR_YEAR_QTY,0) AS CUR_YEAR_QTY ,
         ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER
         FROM #TMPQTY_CUR A
		GOTO END_PROC  

END
ELSE
BEGIN
    
       IF OBJECT_ID ('TEMPDB..#TMP_CUR_YEAR_GM','U') IS NOT NULL
           DROP TABLE #TMP_CUR_YEAR_GM
           
     SELECT SEASON_NAME,
	 CONVERT(NUMERIC(18,2),SUM(RFNET)) AS SALE_VALUE,
	 SUM(B.QUANTITY*(SKU.PURCHASE_PRICE+(CASE WHEN FORM.POST_TAX_SEPARATELY=0 
			         THEN ISNULL(SKU_OH.TAX_AMOUNT,0) ELSE 0 END)-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0))) AS SOLD_PURCHASE_VALUE,
	 CONVERT(NUMERIC(18,2),0) AS PREV_SALE_VALUE,
	 CONVERT(NUMERIC(18,2),0) PREV_SOLD_PURCHASE_VALUE
	 INTO #TMP_CUR_YEAR_GM
	 FROM CMM01106 A (NOLOCK)
	 JOIN CMD01106 B (NOLOCK) ON A.CM_ID =B.CM_ID 
	 JOIN
	 (
		 SELECT SEASON_NAME, PERIOD_FROM,PERIOD_TO
		 FROM #TMP_CUR_SEASON 
	 ) S ON A.CM_DT BETWEEN PERIOD_FROM AND PERIOD_TO
	 JOIN LOCATION D (NOLOCK) ON A.location_Code=D.DEPT_ID
	 JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =B.PRODUCT_CODE 
	 LEFT JOIN SKU_OH (NOLOCK) ON SKU.PRODUCT_CODE =SKU_OH .PRODUCT_CODE 
	 JOIN FORM (NOLOCK) ON SKU.FORM_ID=FORM.FORM_ID
	 WHERE A.CANCELLED =0 AND D.INACTIVE=0
	 AND A.CM_DT BETWEEN @DSDATE AND @DTODATE
	 AND (@CDEPTID='' OR A.location_Code=@CDEPTID)
	 GROUP BY SEASON_NAME
		
	
	IF @LASTYEARCOMPERISION=1
	  BEGIN
	     SET @DSDATE=(SELECT DATEADD(YEAR,-1,@DSDATE))
         SET @DTODATE=CONVERT(VARCHAR(11),(SELECT DATEADD(YEAR,-1,@DTODATE)),120)
         
	 INSERT INTO #TMP_CUR_YEAR_GM 
	  SELECT SEASON_NAME,
	 0 AS SALE_VALUE,
	 0 AS SOLD_PURCHASE_VALUE,
	 CONVERT(NUMERIC(18,2),SUM(RFNET)) AS PREV_SOLD_PURCHASE_VALUE,
	 SUM(B.QUANTITY*(SKU.PURCHASE_PRICE+(CASE WHEN FORM.POST_TAX_SEPARATELY=0 
			         THEN ISNULL(SKU_OH.TAX_AMOUNT,0) ELSE 0 END)-ISNULL(SKU_OH.DISCOUNT_AMOUNT,0))) AS SOLD_PURCHASE_VALUE
	 
	 FROM CMM01106 A (NOLOCK)
	 JOIN CMD01106 B (NOLOCK) ON A.CM_ID =B.CM_ID 
	 JOIN
	 (
		 SELECT SEASON_NAME, PERIOD_FROM,PERIOD_TO
		 FROM #TMP_PREV_SEASON 
	 ) S ON A.CM_DT BETWEEN PERIOD_FROM AND PERIOD_TO
	 JOIN LOCATION D (NOLOCK) ON A.location_Code =D.DEPT_ID
	 JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =B.PRODUCT_CODE 
	 LEFT JOIN SKU_OH (NOLOCK) ON SKU.PRODUCT_CODE =SKU_OH .PRODUCT_CODE 
	 JOIN FORM (NOLOCK) ON SKU.FORM_ID=FORM.FORM_ID
	 WHERE A.CANCELLED =0 AND D.INACTIVE=0
	 AND A.CM_DT BETWEEN @DSDATE AND @DTODATE
	 AND (@CDEPTID='' OR A.location_Code =@CDEPTID)
	 GROUP BY SEASON_NAME
	 
	
	 END
		
	----
	  IF OBJECT_ID ('TEMPDB..#TMP_GROSSMARGIN','U') IS NOT NULL
        DROP TABLE #TMP_CUR_YEAR_GM
         SELECT SEASON_NAME,
                CONVERT(NUMERIC(12,2),SUM(ISNULL(SALE_VALUE,0))) AS SALE_VALUE,
                CONVERT(NUMERIC(12,2),SUM(ISNULL(SOLD_PURCHASE_VALUE,0))) AS SOLD_PURCHASE_VALUE,
                CONVERT(NUMERIC(12,2),SUM(ISNULL(PREV_SALE_VALUE,0))) AS PREV_SALE_VALUE,
                CONVERT(NUMERIC(12,2),SUM(ISNULL(PREV_SOLD_PURCHASE_VALUE,0))) AS PREV_SOLD_PURCHASE_VALUE,
               CUR_GROSS_MARGIN=CONVERT(NUMERIC(18,2),0),
	           PREV_GROSS_MARGIN= CONVERT(NUMERIC(18,2),0),
	           CUR_CONT_PER=CONVERT(NUMERIC(18,2),0),
	           PREV_CONT_PER=CONVERT(NUMERIC(18,2),0)
         INTO #TMP_GROSSMARGIN
         FROM #TMP_CUR_YEAR_GM
         GROUP BY SEASON_NAME
         	
	  UPDATE 	#TMP_GROSSMARGIN SET CUR_GROSS_MARGIN=SALE_VALUE-SOLD_PURCHASE_VALUE     
	  WHERE SALE_VALUE>SOLD_PURCHASE_VALUE	
	   
	  SELECT @TGM=SUM(ISNULL(CUR_GROSS_MARGIN ,0)) FROM #TMP_GROSSMARGIN
	  
	  UPDATE #TMP_GROSSMARGIN SET CUR_CONT_PER =(CUR_GROSS_MARGIN *100)/CASE WHEN @TGM=0 THEN 1 ELSE @TGM END 
	  UPDATE #TMP_GROSSMARGIN SET CUR_GROSS_MARGIN=CUR_GROSS_MARGIN/@NCONVERSIONAMOUNT
      
      IF @LASTYEARCOMPERISION=1
	  BEGIN
	  UPDATE 	#TMP_GROSSMARGIN SET PREV_GROSS_MARGIN=PREV_SALE_VALUE-PREV_SOLD_PURCHASE_VALUE
	  WHERE PREV_SALE_VALUE>PREV_SOLD_PURCHASE_VALUE
	   
      SELECT @TPREVGM=SUM(ISNULL(PREV_GROSS_MARGIN ,0)) FROM #TMP_GROSSMARGIN
      UPDATE #TMP_GROSSMARGIN SET PREV_CONT_PER =(PREV_GROSS_MARGIN *100)/CASE WHEN @TPREVGM=0 THEN 1 ELSE @TPREVGM END 
	  UPDATE #TMP_GROSSMARGIN SET PREV_GROSS_MARGIN=PREV_GROSS_MARGIN/@NCONVERSIONAMOUNT
	       
      SELECT  SEASON_NAME,ISNULL(CUR_GROSS_MARGIN,0) AS CUR_GROSS_MARGIN,ISNULL(CUR_CONT_PER,0) AS CUR_CONT_PER ,
              ISNULL(PREV_GROSS_MARGIN,0) AS PREV_GROSS_MARGIN,ISNULL(PREV_CONT_PER,0) AS PREV_CONT_PER 
      FROM #TMP_GROSSMARGIN A
      ORDER BY SEASON_NAME
     END
     ELSE
     BEGIN
      SELECT  SEASON_NAME,ISNULL(CUR_GROSS_MARGIN,0) AS CUR_GROSS_MARGIN,ISNULL(CUR_CONT_PER,0) AS CUR_CONT_PER         
      FROM #TMP_GROSSMARGIN A
      ORDER BY SEASON_NAME
     
     END
     
	GOTO END_PROC	
  
END
    
 END_PROC:      



END
