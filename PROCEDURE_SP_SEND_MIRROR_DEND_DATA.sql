create PROCEDURE SP_SEND_MIRROR_DEND_DATA
(
     @CUPLOADEDXNID VARCHAR(50)=''
	,@CCURLOCID VARCHAR(5)	 
	,@CERRMSG VARCHAR(1000) OUTPUT
)
--WITH ENCRYPTION
AS
BEGIN
	DECLARE @DTSQL NVARCHAR(MAX),@NSPID INT,@CTEMPTABLE VARCHAR(500),@CMEMOID VARCHAR(50),
	@CTEMPEMPLOYEETABLE VARCHAR(200),@DMEMOLASTUPDATE DATETIME,@CTABLENAME VARCHAR(100),
	@BRECFOUND BIT,@CSTEP VARCHAR(5),@CFILTERCONDITION VARCHAR(MAX),@CCUTOFFDATE VARCHAR(20),
	@CTEMPMASTERTABLE VARCHAR(200),@CTEMPDETAILTABLE VARCHAR(200),@CTEMPLMTABLE VARCHAR(200),
	@CTEMPLMPTABLE VARCHAR(200),@CTEMPAREATABLE VARCHAR(200),@CTEMPCITYTABLE VARCHAR(200),
	@CTEMPSKUTABLE VARCHAR(200),@CTEMPARTTABLE VARCHAR(200),@CTEMPSDTABLE VARCHAR(200),
	@CTEMPARTATTRTABLE VARCHAR(200),@DTLOGDATE DATETIME
	DECLARE @TXNSSENDINFO TABLE (ORG_TABLENAME VARCHAR(50),TMP_TABLENAME VARCHAR(50),XN_ID VARCHAR(40)) 
BEGIN TRY
	---- CALL ACKNOWLEDGEMENT OF MEMO SUCCESSFUL MERGING AT MIRRORING SERVER
	
	DECLARE @CTEMPDBNAME1 VARCHAR(40),@CTEMPDBNAME VARCHAR(40)
	SET @CTEMPDBNAME1 = DB_NAME() + '_TEMP'		
	SET @CSTEP=0
	IF DB_ID(@CTEMPDBNAME1) IS NOT NULL
		SET @CTEMPDBNAME = DB_NAME() + '_TEMP.DBO.'
	ELSE
	  BEGIN
	  SET @CERRMSG='STEP- ' + LTRIM(STR(@CSTEP)) + ' ERROR TEMP DATABASE NOT EXISTS.'          
			GOTO END_PROC
	  END	
	
	
	SET @CSTEP=00
	IF @CUPLOADEDXNID<>''
		GOTO LBLTABLEINFO

		
	SET @CSTEP=10

    DECLARE @CXNSSENDINGCUTOFFDAYS VARCHAR(10)		
    
    SET @CXNSSENDINGCUTOFFDAYS='370'
    
	SET @CFILTERCONDITION=''
	SET @CSTEP=20

	SET @CSTEP=30
	---- CHECK FOR THE PENDING MEMO TO BE SENT TO MIRRORING SERVER
		
	SET @DTSQL=N'SELECT TOP 1 @DTLOGDATE=LOG_DATE,@DMEMOLASTUPDATE=A.LAST_UPDATE FROM DAYCLOSE_LOG A 
				 LEFT OUTER JOIN MIRRORLOG B (NOLOCK) ON  B.XN_ID= '''+@CCURLOCID+'''+CONVERT(VARCHAR,A.LOG_DATE,112) 
				 AND B.XN_TYPE=''DEND''
				 WHERE B.XN_ID IS NULL AND ISNULL(A.ENDTIME_LOCAL,'''')<>''''
				 AND DATEDIFF(DD,A.LOG_DATE,GETDATE())<='+@CXNSSENDINGCUTOFFDAYS+' ORDER BY LOG_DATE'
	
	PRINT @DTSQL
	EXEC SP_EXECUTESQL @DTSQL,N'@DTLOGDATE DATETIME OUTPUT,@DMEMOLASTUPDATE DATETIME OUTPUT',
	@DTLOGDATE OUTPUT,@DMEMOLASTUPDATE OUTPUT

	SET @CSTEP=40
	---- IF NO MEMO FOUND , JUST END THE PROCESS
	IF ISNULL(@DTLOGDATE,'')=''
		GOTO END_PROC
	
	LBLTABLEINFO:	
	INSERT @TXNSSENDINFO (ORG_TABLENAME) VALUES ('DAYCLOSE_LOG')
	INSERT @TXNSSENDINFO (ORG_TABLENAME) VALUES ('CC_BATCH_COLLECTION')
	INSERT @TXNSSENDINFO (ORG_TABLENAME) VALUES ('saleperson_wise_custwalkin')
	
	
	SET @CSTEP=60
	IF @CUPLOADEDXNID<>''
		GOTO LBLSETFLAG	
	
	
	IF CURSOR_STATUS('GLOBAL','CUR_SENDDEND') IN (0,1)
	BEGIN
		CLOSE CUR_SENDDEND
		DEALLOCATE CUR_SENDDEND
	END
	
	
	SET @CSTEP=70
	---- DROP THE TEMPORARY TABLES ALREADY EXISTING
	SET @CMEMOID=@CCURLOCID+CONVERT(VARCHAR,@DTLOGDATE,112)
	
	DECLARE CUR_SENDDEND CURSOR FOR SELECT ORG_TABLENAME FROM @TXNSSENDINFO
	OPEN CUR_SENDDEND
	SET @CSTEP=90
	FETCH NEXT FROM CUR_SENDDEND INTO @CTABLENAME
	WHILE @@FETCH_STATUS=0
	BEGIN
		SET @CSTEP=100
		SET @CTEMPTABLE=@CTEMPDBNAME + '[TMP_DEND_'+@CTABLENAME+'_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))+']'
		
		
		SET @DTSQL=N'IF OBJECT_ID('''+@CTEMPTABLE+''',''U'') IS NOT NULL  
						DROP TABLE '+@CTEMPTABLE+''
		PRINT @DTSQL
		EXEC SP_EXECUTESQL @DTSQL			
	
		FETCH NEXT FROM CUR_SENDDEND INTO @CTABLENAME
	END

	CLOSE CUR_SENDDEND
	DEALLOCATE CUR_SENDDEND
	
	SET @CSTEP=110
	---- SEND THE DAYCLOSE_LOG MEMO MASTER TABLE
	SET @CTEMPMASTERTABLE=@CTEMPDBNAME +'[TMP_DEND_DAYCLOSE_LOG_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))+']'
	--SET @CTEMPMASTERTABLE='TMP_DEND_DAYCLOSE_LOG_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))
	SET @DTSQL=N'SELECT TOP 1 * INTO '+@CTEMPMASTERTABLE+' FROM  DAYCLOSE_LOG WHERE DEPT_ID = '''+@CCURLOCID+''' AND LOG_DATE = '''+CONVERT(VARCHAR,@DTLOGDATE,111)+''''
	PRINT @DTSQL
	EXEC SP_EXECUTESQL @DTSQL
	
	SET @CSTEP=120
	SET @CTEMPTABLE=@CTEMPDBNAME +'[TMP_DEND_CC_BATCH_COLLECTION_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))+']'
	--SET @CTEMPTABLE='TMP_DEND_CC_BATCH_COLLECTION_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))
	SET @DTSQL=N'SELECT * INTO '+@CTEMPTABLE+' FROM  CC_BATCH_COLLECTION WHERE DEPT_ID = '''+@CCURLOCID+''' 
	AND BATCH_DT = '''+CONVERT(VARCHAR,@DTLOGDATE,111)+''''
	PRINT @DTSQL
	EXEC SP_EXECUTESQL @DTSQL
	
	SET @CSTEP=130
	SET @CTEMPTABLE=@CTEMPDBNAME +'[TMP_DEND_saleperson_wise_custwalkin_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))+']'
	SET @DTSQL=N'SELECT * INTO '+@CTEMPTABLE+' FROM  saleperson_wise_custwalkin where log_date = '''+CONVERT(VARCHAR,@DTLOGDATE,111)+''''
	PRINT @DTSQL
	EXEC SP_EXECUTESQL @DTSQL
	
	SET @CSTEP=432
	DECLARE CUR_SENDDEND CURSOR FOR SELECT ORG_TABLENAME FROM @TXNSSENDINFO
	OPEN CUR_SENDDEND
	
	FETCH NEXT FROM CUR_SENDDEND INTO @CTABLENAME
	WHILE @@FETCH_STATUS=0
	BEGIN
		SET @CSTEP=435
		--SET @CTEMPTABLE='TMP_DEND_'+@CTABLENAME+'_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))
		SET @CTEMPTABLE=@CTEMPDBNAME +'[TMP_DEND_'+@CTABLENAME+'_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_')))+']'
		SET @CSTEP=440
		SET @DTSQL=N'IF OBJECT_ID('''+@CTEMPTABLE+''',''U'') IS NOT NULL
					BEGIN
					IF EXISTS (SELECT TOP 1 * FROM '+@CTEMPTABLE+')
						SET @BRECFOUND=1
					ELSE
						SET @BRECFOUND=0
					END'
		PRINT @DTSQL			
		EXEC SP_EXECUTESQL @DTSQL,N'@BRECFOUND BIT OUTPUT',@BRECFOUND OUTPUT
		
		
		SET @CSTEP=450
		
	
		IF ISNULL(@BRECFOUND,0)=0
			DELETE FROM @TXNSSENDINFO WHERE ORG_TABLENAME=@CTABLENAME

		SET @BRECFOUND=0							
		
		FETCH NEXT FROM CUR_SENDDEND INTO @CTABLENAME	
	END			

	CLOSE CUR_SENDDEND
	DEALLOCATE CUR_SENDDEND
	
	SET @CSTEP=460
	UPDATE @TXNSSENDINFO SET TMP_TABLENAME='TMP_DEND_'+ORG_TABLENAME+'_'+LTRIM(RTRIM(REPLACE(@CMEMOID,'-','_'))),
	XN_ID=@CMEMOID
	
    GOTO END_PROC
    
    LBLSETFLAG:
	SET @CSTEP=470	
		SET @CSTEP=470	
	SET @DTSQL=N'UPDATE MIRRORLOG SET LAST_UPDATE=B.LAST_UPDATE FROM '+@CTEMPDBNAME+'[TMP_DEND_DAYCLOSE_LOG_'+LTRIM(RTRIM(REPLACE(@CUPLOADEDXNID,'-','_')))+'] B
				WHERE MIRRORLOG.XN_ID='''+@CUPLOADEDXNID+''' AND XN_TYPE=''DEND'''
	PRINT @DTSQL			
	EXEC SP_EXECUTESQL @DTSQL
	
	SET @CSTEP=480
	SET @DTSQL=N'INSERT MIRRORLOG( XN_TYPE, XN_ID, LAST_UPDATE ) 
	SELECT ''DEND'' AS  XN_TYPE,'''+@CUPLOADEDXNID+''' AS XN_ID,A.LAST_UPDATE FROM '+@CTEMPDBNAME+'[TMP_DEND_DAYCLOSE_LOG_'+LTRIM(RTRIM(REPLACE(@CUPLOADEDXNID,'-','_')))+'] A (NOLOCK)
	LEFT OUTER JOIN MIRRORLOG B ON '''+@CUPLOADEDXNID+''' =B.XN_ID AND B.XN_TYPE=''DEND'' WHERE B.XN_ID IS NULL'
	PRINT @DTSQL
	EXEC SP_EXECUTESQL @DTSQL
	
	SET @CSTEP=490
	DECLARE CUR_SENDDEND CURSOR FOR SELECT ORG_TABLENAME FROM @TXNSSENDINFO
	OPEN CUR_SENDDEND
	
	SET @CSTEP=500
	FETCH NEXT FROM CUR_SENDDEND INTO @CTABLENAME
	WHILE @@FETCH_STATUS=0
	BEGIN
		SET @CSTEP=510
		SET @CTEMPTABLE=@CTEMPDBNAME + '[TMP_DEND_'+@CTABLENAME+'_'+LTRIM(RTRIM(REPLACE(@CUPLOADEDXNID,'-','_')))+']'
		--SET @CTEMPTABLE='TMP_DEND_'+@CTABLENAME+'_'+LTRIM(RTRIM(REPLACE(@CUPLOADEDXNID,'-','_')))
		SET @DTSQL=N'IF OBJECT_ID('''+@CTEMPTABLE+''',''U'') IS NOT NULL  
						DROP TABLE '+@CTEMPTABLE+''
		PRINT @DTSQL				
		EXEC SP_EXECUTESQL @DTSQL		
		
		SET @CSTEP=520
		FETCH NEXT FROM CUR_SENDDEND INTO @CTABLENAME
	END

	CLOSE CUR_SENDDEND
	DEALLOCATE CUR_SENDDEND
	GOTO END_PROC			

END TRY
BEGIN CATCH
			SET @CERRMSG='P: SP_SEND_MIRROR_DEND_DATA, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
			GOTO END_PROC
END CATCH	
END_PROC:
			IF @CUPLOADEDXNID='' AND ISNULL(@CERRMSG,'')=''
				SELECT * FROM @TXNSSENDINFO	
			
END
