CREATE PROCEDURE SP_PRD_TRANSFER_STK_WIP_TO_TRADING    
(    
  @NQUERYID INT,    
  @NMEMO_ID VARCHAR(50)='',    
  @CDEPARTMENT_ID VARCHAR(100) ,   
  @NSPID INT =0   
 -- ,@A INT   
)    
AS    
BEGIN    
        
IF @NQUERYID=1    
   GOTO LBLORDERWIP    
ELSE IF @NQUERYID=2    
   GOTO LBLORDERWIPORDDET    
ELSE IF @NQUERYID=3    
   GOTO LBLORDERWIPRMDET    
ELSE IF @NQUERYID=4    
   GOTO LBLRMDETAILS    
ELSE IF @NQUERYID=5    
   GOTO LBLMST    
ELSE IF @NQUERYID=6    
   GOTO LBLNAVIGATE    
     
       
DECLARE @DTSQL NVARCHAR(MAX),@CTABLENAME VARCHAR(100)    
    
    
LBLNAVIGATE:    
 SET @DTSQL=N'SELECT MEMO_ID,MEMO_NO FROM PRD_TRANSFER_MAIN_MST '+(CASE WHEN ISNULL(@CDEPARTMENT_ID,'')='' THEN ''            
 ELSE ' WHERE '+@CDEPARTMENT_ID END)            
 PRINT @DTSQL            
 EXEC SP_EXECUTESQL @DTSQL        
    
    
GOTO END_PROC    
    
LBLORDERWIP:    
   ---ONLY FG COMPLETED FROM WIP    
       
   IF @CDEPARTMENT_ID<>'DEF0001'    
      GOTO END_PROC    
             
    SELECT MST.MEMO_ID AS ORDER_ID,MST.MEMO_NO AS ORDER_NO,    
 MST.MEMO_DT  AS ORDER_DT,CAST(0 AS BIT) AS CHK    
 FROM PRD_WO_MST MST (NOLOCK)     
 JOIN         
 (    
   SELECT WORK_ORDER_ID FROM PRD_SKU A (NOLOCK)    
   JOIN PRD_PMT B (NOLOCK) ON A.PRODUCT_UID=B.PRODUCT_UID    
   WHERE B.DEPARTMENT_ID=@CDEPARTMENT_ID AND    
   B.QUANTITY_IN_STOCK >0    
   GROUP BY WORK_ORDER_ID    
 ) PMT ON MST.MEMO_ID=PMT.WORK_ORDER_ID    
 WHERE  MST.CANCELLED=0    
    GROUP BY MST.MEMO_ID,MST.MEMO_NO ,MST.MEMO_DT      
       
GOTO END_PROC    
          
LBLORDERWIPORDDET:    
    
 IF @NMEMO_ID<>''    
 BEGIN    
            
      SELECT B.MEMO_ID AS ORDER_ID,B.MEMO_NO AS ORDER_NO,    
           AR.ARTICLE_NO AS FG_ARTICLE_NO,    
        A.MEMO_ID AS [REF_PRD_WORKORDER_MEMOID],    
        A.ARTICLE_CODE AS ARTICLE_CODE,    
        AR.ARTICLE_NAME AS FG_ARTICLE_NAME,    
        P1.PARA1_CODE,    
        P1.PARA1_NAME AS COLOR,    
        P2.PARA2_CODE,    
        P2.PARA2_NAME AS SIZE,    
        A.WO_QTY,A.QTY AS QTY ,    
        A.ROW_ID  AS ROW_ID,    
        A.MEMO_ID  AS MEMO_ID,    
        P1.PARA1_NAME AS COLOR,    
        P2.PARA2_NAME AS SIZE,    
     P3.PARA3_NAME  AS PARA3_NAME    
    ,P4.PARA4_NAME AS PARA4_NAME    
    ,P5.PARA5_NAME AS PARA5_NAME    
    ,P6.PARA6_NAME AS PARA6_NAME    
    ,SD.SUB_SECTION_NAME    
    ,SM.SECTION_NAME,    
    A.PRODUCT_CODE    
    ,A.COST_PRICE    
    ,A.INCREASE_PER    
    ,A.PURCHASE_PRICE    
    ,A.MRP    
    ,A.WS_PRICE    
    ,A.AMOUNT    
    ,A.TOTAL_COST_PRICE    
    ,A.PRINT_LABEL        
    ,OP1.PARA1_NAME AS OLD_PARA1_NAME    
    ,OP2.PARA2_NAME AS OLD_PARA2_NAME    
    ,OP3.PARA3_NAME  AS OLD_PARA3_NAME    
    ,OP4.PARA4_NAME AS OLD_PARA4_NAME    
    ,OP5.PARA5_NAME AS OLD_PARA5_NAME    
    ,OP6.PARA6_NAME AS OLD_PARA6_NAME      
     ,A.OLD_PARA1_CODE    
    ,A.OLD_PARA2_CODE    
    ,A.OLD_PARA3_CODE    
    ,A.OLD_PARA4_CODE    
    ,A.OLD_PARA5_CODE    
    ,A.OLD_PARA6_CODE 
    ,A.WIP_PRODUCT_CODE    
    ,LM.AC_NAME
        FROM PRD_TRANSFER_MAIN_DET (NOLOCK) A     
        JOIN PRD_WO_MST (NOLOCK) B ON A.REF_PRD_WORKORDER_MEMOID=B.MEMO_ID    
        JOIN ARTICLE (NOLOCK) AR ON A.ARTICLE_CODE=AR.ARTICLE_CODE    
        JOIN SECTIOND SD ON SD.SUB_SECTION_CODE=AR.SUB_SECTION_CODE    
        JOIN SECTIONM SM ON SD.SECTION_CODE=SM.SECTION_CODE    
        JOIN PARA1 P1 ON P1.PARA1_CODE=A.PARA1_CODE    
        JOIN PARA2 P2 ON P2.PARA2_CODE=A.PARA2_CODE    
        JOIN PARA3 P3 ON P3.PARA3_CODE=A.PARA3_CODE    
        JOIN PARA4 P4 ON P4.PARA4_CODE=A.PARA4_CODE    
        JOIN PARA5 P5 ON P5.PARA5_CODE=A.PARA5_CODE    
        JOIN PARA6 P6 ON P6.PARA6_CODE=A.PARA6_CODE   
          
        LEFT OUTER JOIN PARA1 OP1 ON OP1.PARA1_CODE=A.OLD_PARA1_CODE    
        LEFT OUTER JOIN PARA2 OP2 ON OP2.PARA2_CODE=A.OLD_PARA2_CODE    
        LEFT OUTER JOIN PARA3 OP3 ON OP3.PARA3_CODE=A.OLD_PARA3_CODE    
        LEFT OUTER JOIN PARA4 OP4 ON OP4.PARA4_CODE=A.OLD_PARA4_CODE    
        LEFT OUTER JOIN PARA5 OP5 ON OP5.PARA5_CODE=A.OLD_PARA5_CODE    
        LEFT OUTER JOIN PARA6 OP6 ON OP6.PARA6_CODE=A.OLD_PARA6_CODE  
        LEFT OUTER JOIN PRD_UPCPMT PMT ON PMT.PRODUCT_CODE=A.WIP_PRODUCT_CODE 
        LEFT OUTER JOIN BUYER_ORDER_MST MST ON MST.ORDER_ID=PMT.ORDER_ID
        LEFT OUTER JOIN LM01106 LM ON LM.AC_CODE=ISNULL(MST.AC_CODE  ,B.AC_CODE)
        WHERE A.MEMO_ID=@NMEMO_ID    
            
    
 END      
 ELSE    
 BEGIN
          
    IF OBJECT_ID('TEMPDB..#TMPORD','U') IS NOT NULL    
    DROP TABLE #TMPORD  
          
    IF OBJECT_ID('TEMPDB..#TMPORDDET','U') IS NOT NULL    
    DROP TABLE #TMPORDDET    
        
    SELECT   MST.MEMO_ID AS ORDER_ID,MST.MEMO_NO AS ORDER_NO    
   ,MST.MEMO_DT  AS ORDER_DT,MST.ARTICLE_SET_CODE    
   ,AR1.ARTICLE_NAME AS FG_ARTICLE_NAME    
   ,AR1.ARTICLE_NO AS FG_ARTICLE_NO,AR1.ARTICLE_CODE AS FG_ARTICLE_CODE    
   ,AR1.GENERATE_BARCODES_WITHARTICLE_PREFIX,AR1.CODING_SCHEME    
   ,DET.QUANTITY AS WO_QTY,PARA1.PARA1_CODE,PARA1.PARA1_NAME    
   ,PARA2.PARA2_CODE,PARA2.PARA2_NAME,UOM.UOM_NAME    
   ,AR1.MRP,AR1.WHOLESALE_PRICE AS WS_PRICE    
   ,CAST(0 AS BIT) AS CHK    
   ,CAST(0 AS INT) AS PRINT_LABEL,  
    PARA1.PARA1_CODE AS OLD_PARA1_CODE,PARA1.PARA1_NAME  AS OLD_PARA1_NAME   
   ,PARA2.PARA2_CODE AS OLD_PARA2_CODE,PARA2.PARA2_NAME AS OLD_PARA2_NAME  
   ,LM.AC_NAME    
 INTO #TMPORD     
 FROM PRD_WO_ART_BOM A (NOLOCK)          
 JOIN PRD_WO_DET B (NOLOCK) ON A.REF_ROW_ID = B.ROW_ID    
 JOIN PRD_WO_MST MST (NOLOCK) ON B.MEMO_ID=MST.MEMO_ID    
 JOIN ARTICLE AR (NOLOCK) ON AR.ARTICLE_CODE =B.ARTICLE_CODE    
 JOIN ARTICLE AR1 (NOLOCK) ON AR1.ARTICLE_CODE =MST.ARTICLE_SET_CODE         
 JOIN ARTICLE C (NOLOCK) ON A.BOM_ARTICLE_CODE = C.ARTICLE_CODE     
 JOIN UOM ON UOM.UOM_CODE=C.UOM_CODE    
 JOIN    
 (    
  SELECT PARA1_CODE,PARA2_CODE,REF_ROW_ID,SUM(QUANTITY) AS QUANTITY     
  FROM PRD_WO_SUB_DET C    
  GROUP BY REF_ROW_ID,PARA1_CODE,PARA2_CODE    
 ) DET ON B.ROW_ID=DET.REF_ROW_ID    
 JOIN    
 (    
  SELECT  REF_ROW_ID,SUM(QUANTITY) AS QUANTITY     
  FROM PRD_WO_SUB_DET C    
  GROUP BY REF_ROW_ID    
 ) DET1 ON B.ROW_ID=DET1.REF_ROW_ID    
 JOIN PARA1  (NOLOCK) ON DET.PARA1_CODE=PARA1.PARA1_CODE    
 JOIN PARA2  (NOLOCK) ON DET.PARA2_CODE=PARA2.PARA2_CODE    
 JOIN    
 (    
   SELECT WORK_ORDER_ID,ARTICLE_CODE,COMPONENT_CODE,COM_PARA1_CODE,COM_PARA2_CODE FROM PRD_SKU A (NOLOCK)    
   JOIN PRD_PMT B (NOLOCK) ON A.PRODUCT_UID=B.PRODUCT_UID    
   WHERE B.DEPARTMENT_ID=@CDEPARTMENT_ID  AND    
   B.QUANTITY_IN_STOCK >0    
   GROUP BY WORK_ORDER_ID,ARTICLE_CODE,COMPONENT_CODE,COM_PARA1_CODE,COM_PARA2_CODE    
 ) PMT ON MST.MEMO_ID=PMT.WORK_ORDER_ID    
 AND PMT.ARTICLE_CODE=A.BOM_ARTICLE_CODE    
 AND PARA1.PARA1_CODE=PMT.COM_PARA1_CODE    
 AND PARA2.PARA2_CODE=PMT.COM_PARA2_CODE  
 LEFT OUTER JOIN LM01106 LM ON LM.AC_CODE= MST.AC_CODE 
     
 --WHERE  ('AS'='' OR MST.MEMO_ID ='HO0111700000HO00000558') 
 DECLARE @ENABLED_UPC VARCHAR(10)   
   
 SELECT TOP 1 @ENABLED_UPC=VALUE  FROM CONFIG WHERE CONFIG_OPTION ='ENABLED_UPC'
 
 
 SELECT * INTO #TMPORDDET FROM #TMPORD WHERE 1=2
 IF ISNULL(@ENABLED_UPC,'')='1'
 BEGIN
   INSERT INTO #TMPORDDET
   SELECT  A.*      FROM #TMPORD A
   JOIN
   (
   
	 SELECT A.WO_ID,A.PARA1_CODE ,A.PARA2_CODE  FROM PRD_UPCPMT A
	 JOIN
	 (
	 SELECT PRODUCT_CODE 
	 FROM PRD_AGENCY_MATERIAL_RECEIPT_UPC  A
	 JOIN PRD_AGENCY_MATERIAL_RECEIPT_MST B ON A.MEMO_ID =B.MEMO_ID 
	 WHERE B.CANCELLED =0
	 GROUP BY PRODUCT_CODE
	 ) B ON A.PRODUCT_CODE =B.PRODUCT_CODE 
	 WHERE 
	--- A.WO_ID='0101117000000100001261' AND
	  A.QUANTITY_IN_STOCK =1
	 GROUP BY A.WO_ID,A.PARA1_CODE ,A.PARA2_CODE
  ) B ON A.ORDER_ID =B.WO_ID 
  AND A.PARA1_CODE=B.PARA1_CODE AND A.PARA2_CODE =B.PARA2_CODE 
  
  
  END
  ELSE
  BEGIN
    
    INSERT INTO #TMPORDDET
    SELECT *   FROM #TMPORD
  
  END
 
    
 SELECT A.ORDER_ID,A.ORDER_NO,FG_ARTICLE_NO,    
        A.ORDER_ID AS [REF_PRD_WORKORDER_MEMOID],    
        A.ARTICLE_SET_CODE AS ARTICLE_CODE,    
        A.FG_ARTICLE_NAME,    
        A.GENERATE_BARCODES_WITHARTICLE_PREFIX,    
        A.CODING_SCHEME,    
        A.PARA1_CODE,    
        A.PARA1_NAME AS COLOR,    
        A.PARA2_CODE,    
        A.PARA2_NAME AS SIZE,   
        A.OLD_PARA1_CODE,  
        A.OLD_PARA1_NAME,   
        A.OLD_PARA2_CODE,  
        A.OLD_PARA2_NAME,   
        A.WO_QTY,    
        TRF.TRF_QTY,    
        A.WO_QTY-ISNULL(TRF.TRF_QTY,0) AS PENDING_QTY,    
        CAST(0 AS NUMERIC(12,2)) AS QTY ,    
        CAST('LATER'+CAST(NEWID() AS VARCHAR(100)) AS VARCHAR(100))  AS ROW_ID,    
        CAST('LATER' AS VARCHAR(22))  AS MEMO_ID,    
        [LAST_UPDATE]=GETDATE(),    
        CAST(0 AS NUMERIC(10,2)) AS [INCREASE_PER],    
        CAST(0 AS BIT) AS CHK    
        ,P3.PARA3_CODE AS PARA3_CODE    
     ,CAST('NA' AS VARCHAR(100)) AS PARA3_NAME    
     ,P4.PARA4_CODE AS PARA4_CODE    
     ,CAST('NA' AS VARCHAR(100)) AS PARA4_NAME    
     ,P5.PARA5_CODE AS PARA5_CODE    
     ,CAST('NA' AS VARCHAR(100)) AS PARA5_NAME    
     ,P6.PARA6_CODE AS PARA6_CODE    
     ,CAST('NA' AS VARCHAR(100)) AS PARA6_NAME    
     ,CAST('' AS VARCHAR(100)) AS [PRODUCT_CODE]    
        ,CAST(0 AS NUMERIC(12,2)) AS [PURCHASE_PRICE]     
        ,A.MRP AS [MRP]     
        ,A.WS_PRICE AS  [WS_PRICE]    
        ,CAST(0 AS NUMERIC(12,2)) AS [COST_PRICE]     
        ,CAST(0 AS BIT) AS [PRINT_LABEL]     
        ,CAST(0 AS NUMERIC(12,2)) AS [AMOUNT]    
        ,CAST(0 AS NUMERIC(12,2)) AS [TOTAL_COST_PRICE] ,  
          
   P3.PARA3_CODE AS OLD_PARA3_CODE    
     ,CAST('NA' AS VARCHAR(100)) AS OLD_PARA3_NAME    
     ,P4.PARA4_CODE AS OLD_PARA4_CODE    
     ,CAST('NA' AS VARCHAR(100)) AS OLD_PARA4_NAME    
     ,P5.PARA5_CODE AS OLD_PARA5_CODE    
     ,CAST('NA' AS VARCHAR(100)) AS OLD_PARA5_NAME    
     ,P6.PARA6_CODE AS OLD_PARA6_CODE    
     ,CAST('NA' AS VARCHAR(100)) AS OLD_PARA6_NAME    
     ,CAST('' AS VARCHAR(100)) AS WIP_PRODUCT_CODE     
     ,A.AC_NAME     
          
            
 FROM #TMPORDDET A    
 JOIN PARA3 P3 ON P3.PARA3_CODE='0000000'    
 JOIN PARA4 P4 ON P4.PARA4_CODE='0000000'    
 JOIN PARA5 P5 ON P5.PARA5_CODE='0000000'    
 JOIN PARA6 P6 ON P6.PARA6_CODE='0000000'     
 LEFT OUTER JOIN    
 (    
          
  SELECT REF_PRD_WORKORDER_MEMOID ,PARA1_CODE ,PARA2_CODE ,SUM(QTY) AS TRF_QTY    
  FROM PRD_TRANSFER_MAIN_MST A    
  JOIN PRD_TRANSFER_MAIN_DET B ON A.MEMO_ID=B.MEMO_ID    
  WHERE A.CANCELLED=0    
  GROUP BY REF_PRD_WORKORDER_MEMOID ,PARA1_CODE ,PARA2_CODE     
 ) TRF ON TRF.REF_PRD_WORKORDER_MEMOID=A.ORDER_ID     
 AND TRF.PARA1_CODE =A.PARA1_CODE    
 AND TRF.PARA2_CODE =A.PARA2_CODE    
 GROUP BY A.ORDER_ID,A.ORDER_NO,FG_ARTICLE_NO,    
        A.PARA1_NAME ,A.PARA2_NAME ,    
        A.WO_QTY, A.GENERATE_BARCODES_WITHARTICLE_PREFIX,    
        A.CODING_SCHEME,A.ARTICLE_SET_CODE,A.PARA1_CODE,A.PARA2_CODE,A.FG_ARTICLE_NAME,    
        A.MRP ,A.WS_PRICE,P3.PARA3_CODE,P4.PARA4_CODE    
        ,P5.PARA5_CODE,P6.PARA6_CODE,TRF.TRF_QTY  ,  
        A.OLD_PARA1_NAME,A.OLD_PARA2_NAME,A.OLD_PARA1_CODE,A.OLD_PARA2_CODE  ,A.AC_NAME
          
            
END            
GOTO END_PROC    
        
LBLORDERWIPRMDET:    
    
 IF @NMEMO_ID<>''    
 BEGIN    
            
          SELECT A.*,B.DEPARTMENT_NAME FROM PRD_TRANSFER_MAIN_MST A    
           JOIN PRD_DEPARTMENT_MST B ON A.SOURCE_DEPARTMENT_ID=B.DEPARTMENT_ID     
          WHERE MEMO_ID=@NMEMO_ID    
            
 END      
 ELSE    
 BEGIN      
     
    IF @CDEPARTMENT_ID<>'DEF0001'    
      GOTO END_PROC    
        
    SET @CTABLENAME='TEMP_PRD_TRANSFER_MAIN_DET'+'_'+LTRIM(RTRIM(STR(@NSPID)))    
         
    IF OBJECT_ID('TEMPDB..#TMPDETAILS','U') IS NOT NULL    
    DROP TABLE #TMPDETAILS    
     
     
 SELECT  MST.MEMO_ID AS ORDER_ID,MST.MEMO_NO AS ORDER_NO    
   ,MST.MEMO_DT  AS ORDER_DT,MST.ARTICLE_SET_CODE    
   ,C.ARTICLE_NO AS BM_ARTICLE_NO,C.ARTICLE_NAME AS BM_ARTICLE_NAME    
   ,C.ARTICLE_CODE  AS BM_ARTICLE_CODE,AR.ARTICLE_CODE AS COMP_CODE    
   ,AR.ARTICLE_NO AS ARTICLE_NO,AR1.ARTICLE_NAME AS FG_ARTICLE_NAME    
   ,AR1.ARTICLE_NO AS FG_ARTICLE_NO,AR1.ARTICLE_CODE AS FG_ARTICLE_CODE    
   ,DET1.QUANTITY AS WO_QTY,PARA1.PARA1_CODE,PARA1.PARA1_NAME    
   ,PARA2.PARA2_CODE,PARA2.PARA2_NAME,UOM.UOM_NAME,DET.QUANTITY    
      ,AVG_QTY+ISNULL(ADD_AVG_QTY,0) AS AVG_QTY    
      ,CONVERT(NUMERIC(12,2),(AVG_QTY+ISNULL(ADD_AVG_QTY,0)) * DET.QUANTITY) AS REQUIRED_QTY    
    INTO #TMPDETAILS    
 FROM PRD_WO_ART_BOM A (NOLOCK)          
 JOIN PRD_WO_DET B (NOLOCK) ON A.REF_ROW_ID = B.ROW_ID    
 JOIN PRD_WO_MST MST (NOLOCK) ON B.MEMO_ID=MST.MEMO_ID    
 JOIN ARTICLE AR (NOLOCK) ON AR.ARTICLE_CODE =B.ARTICLE_CODE    
 JOIN ARTICLE AR1 (NOLOCK) ON AR1.ARTICLE_CODE =MST.ARTICLE_SET_CODE         
 JOIN PARA1 P1 (NOLOCK) ON A.PARA1_CODE=P1.PARA1_CODE    
 JOIN PARA2 P2 (NOLOCK) ON A.PARA2_CODE=P2.PARA2_CODE    
 JOIN    
 (    
  SELECT PARA1_CODE,PARA2_CODE,REF_ROW_ID,SUM(QUANTITY) AS QUANTITY     
  FROM PRD_WO_SUB_DET C    
  GROUP BY REF_ROW_ID,PARA1_CODE,PARA2_CODE    
 ) DET ON B.ROW_ID=DET.REF_ROW_ID    
 JOIN ARTICLE C (NOLOCK) ON A.BOM_ARTICLE_CODE = C.ARTICLE_CODE     
 JOIN UOM ON UOM.UOM_CODE=C.UOM_CODE    
 JOIN    
 (    
  SELECT  REF_ROW_ID,SUM(QUANTITY) AS QUANTITY     
  FROM PRD_WO_SUB_DET C    
  GROUP BY REF_ROW_ID    
 ) DET1 ON B.ROW_ID=DET1.REF_ROW_ID    
 JOIN PARA1  (NOLOCK) ON DET.PARA1_CODE=PARA1.PARA1_CODE    
 JOIN PARA2  (NOLOCK) ON DET.PARA2_CODE=PARA2.PARA2_CODE    
    WHERE 1=2    
    
    SET @DTSQL=N'SELECT  MST.MEMO_ID AS ORDER_ID,MST.MEMO_NO AS ORDER_NO    
   ,MST.MEMO_DT  AS ORDER_DT,MST.ARTICLE_SET_CODE    
   ,C.ARTICLE_NO AS BM_ARTICLE_NO,C.ARTICLE_NAME AS BM_ARTICLE_NAME    
   ,C.ARTICLE_CODE  AS BM_ARTICLE_CODE,AR.ARTICLE_CODE AS COMP_CODE    
   ,AR.ARTICLE_NO AS ARTICLE_NO,AR1.ARTICLE_NAME AS FG_ARTICLE_NAME    
   ,AR1.ARTICLE_NO AS FG_ARTICLE_NO,AR1.ARTICLE_CODE AS FG_ARTICLE_CODE    
   ,DET1.QUANTITY AS WO_QTY,PARA1.PARA1_CODE,PARA1.PARA1_NAME    
   ,PARA2.PARA2_CODE,PARA2.PARA2_NAME,UOM.UOM_NAME,DET.QUANTITY    
      ,AVG_QTY+ISNULL(ADD_AVG_QTY,0) AS AVG_QTY    
      ,CONVERT(NUMERIC(12,2),(AVG_QTY+ISNULL(ADD_AVG_QTY,0)) * TMP.QTY) AS REQUIRED_QTY    
 FROM PRD_WO_ART_BOM A (NOLOCK)          
 JOIN PRD_WO_DET B (NOLOCK) ON A.REF_ROW_ID = B.ROW_ID    
 JOIN PRD_WO_MST MST (NOLOCK) ON B.MEMO_ID=MST.MEMO_ID    
 JOIN ARTICLE AR (NOLOCK) ON AR.ARTICLE_CODE =B.ARTICLE_CODE    
 JOIN ARTICLE AR1 (NOLOCK) ON AR1.ARTICLE_CODE =MST.ARTICLE_SET_CODE         
 JOIN PARA1 P1 (NOLOCK) ON A.PARA1_CODE=P1.PARA1_CODE    
 JOIN PARA2 P2 (NOLOCK) ON A.PARA2_CODE=P2.PARA2_CODE    
 JOIN    
 (    
  SELECT PARA1_CODE,PARA2_CODE,REF_ROW_ID,SUM(QUANTITY) AS QUANTITY     
  FROM PRD_WO_SUB_DET C    
  GROUP BY REF_ROW_ID,PARA1_CODE,PARA2_CODE    
 ) DET ON B.ROW_ID=DET.REF_ROW_ID    
 JOIN ARTICLE C (NOLOCK) ON A.BOM_ARTICLE_CODE = C.ARTICLE_CODE     
 JOIN UOM ON UOM.UOM_CODE=C.UOM_CODE    
 JOIN    
 (    
  SELECT  REF_ROW_ID,SUM(QUANTITY) AS QUANTITY     
  FROM PRD_WO_SUB_DET C    
  GROUP BY REF_ROW_ID    
 ) DET1 ON B.ROW_ID=DET1.REF_ROW_ID    
 JOIN PARA1  (NOLOCK) ON DET.PARA1_CODE=PARA1.PARA1_CODE    
 JOIN PARA2  (NOLOCK) ON DET.PARA2_CODE=PARA2.PARA2_CODE    
 JOIN '+@CTABLENAME+' TMP ON TMP.REF_PRD_WORKORDER_MEMOID=MST.MEMO_ID    
 AND PARA1.PARA1_CODE=TMP.PARA1_CODE AND  PARA2.PARA2_CODE=TMP.PARA2_CODE    
 '    
      
 PRINT  @DTSQL    
 INSERT INTO #TMPDETAILS    
 EXEC SP_EXECUTESQL @DTSQL    
    
  --.1 TO .30 IGNORE IF REQUIRE QTY     
 SELECT  A.ORDER_ID ,A.ORDER_NO,A.FG_ARTICLE_NO,    
 A.ARTICLE_NO AS COMP_NO,    
 A.BM_ARTICLE_NO,A.UOM_NAME ,A.AVG_QTY ,    
 A.REQUIRED_QTY ,    
 ISNULL(QUANTITY_IN_STOCK,0) AS QUANTITY_IN_STOCK,    
 ISNULL(QUANTITY_IN_STOCK,0)-A.REQUIRED_QTY  AS DIFF_QTY     
 FROM #TMPDETAILS A    
 LEFT OUTER JOIN     
 (    
   SELECT WORK_ORDER_ID,A.ARTICLE_CODE,    
    A.COMPONENT_CODE,A.COM_PARA1_CODE ,A.COM_PARA2_CODE ,    
    SUM(B.QUANTITY_IN_STOCK) AS  QUANTITY_IN_STOCK    
   FROM PRD_SKU A (NOLOCK)    
   JOIN PRD_PMT B (NOLOCK) ON A.PRODUCT_UID=B.PRODUCT_UID    
   WHERE B.DEPARTMENT_ID=@CDEPARTMENT_ID AND    
   B.QUANTITY_IN_STOCK >0    
   GROUP BY WORK_ORDER_ID,A.ARTICLE_CODE,    
    A.COMPONENT_CODE,A.COM_PARA1_CODE ,A.COM_PARA2_CODE     
 ) B ON A.ORDER_ID =B.WORK_ORDER_ID    
 AND A.BM_ARTICLE_CODE=B.ARTICLE_CODE    
 AND A.COMP_CODE=B.COMPONENT_CODE     
 AND A.PARA1_CODE =B.COM_PARA1_CODE     
 AND A.PARA2_CODE =B.COM_PARA2_CODE     
 WHERE (ISNULL(QUANTITY_IN_STOCK,0)-REQUIRED_QTY)<0  
     
END           
GOTO END_PROC    
    
    
LBLRMDETAILS:    
    
      IF @CDEPARTMENT_ID<>'DEF0001'    
      GOTO END_PROC    
          
    SET @CTABLENAME='TEMP_PRD_TRANSFER_MAIN_DET'+'_'+LTRIM(RTRIM(STR(@NSPID)))    
        
          
    IF OBJECT_ID('TEMPDB..#TMPDETAILS_RM','U') IS NOT NULL    
    DROP TABLE #TMPDETAILS    
     
 SELECT  MST.MEMO_ID AS ORDER_ID,MST.MEMO_NO AS ORDER_NO    
   ,MST.MEMO_DT  AS ORDER_DT,MST.ARTICLE_SET_CODE    
   ,C.ARTICLE_NO AS BM_ARTICLE_NO,C.ARTICLE_NAME AS BM_ARTICLE_NAME    
   ,C.ARTICLE_CODE  AS BM_ARTICLE_CODE,AR.ARTICLE_CODE AS COMP_CODE    
   ,AR.ARTICLE_NO AS ARTICLE_NO,AR1.ARTICLE_NAME AS FG_ARTICLE_NAME    
   ,AR1.ARTICLE_NO AS FG_ARTICLE_NO,AR1.ARTICLE_CODE AS FG_ARTICLE_CODE    
   ,DET1.QUANTITY AS WO_QTY,PARA1.PARA1_CODE,PARA1.PARA1_NAME    
   ,PARA2.PARA2_CODE,PARA2.PARA2_NAME,UOM.UOM_NAME,DET.QUANTITY    
      ,AVG_QTY AS AVG_QTY    
      ,CONVERT(NUMERIC(12,2),(AVG_QTY+ISNULL(ADD_AVG_QTY,0)) * DET.QUANTITY) AS REQUIRED_QTY    
      ,CAST(0 AS INT) AS PCS    
    INTO #TMPDETAILS_RM    
 FROM PRD_WO_ART_BOM A (NOLOCK)          
 JOIN PRD_WO_DET B (NOLOCK) ON A.REF_ROW_ID = B.ROW_ID    
 JOIN PRD_WO_MST MST (NOLOCK) ON B.MEMO_ID=MST.MEMO_ID    
 JOIN ARTICLE AR (NOLOCK) ON AR.ARTICLE_CODE =B.ARTICLE_CODE    
 JOIN ARTICLE AR1 (NOLOCK) ON AR1.ARTICLE_CODE =MST.ARTICLE_SET_CODE         
 JOIN PARA1 P1 (NOLOCK) ON A.PARA1_CODE=P1.PARA1_CODE    
 JOIN PARA2 P2 (NOLOCK) ON A.PARA2_CODE=P2.PARA2_CODE    
 JOIN    
 (    
  SELECT PARA1_CODE,PARA2_CODE,REF_ROW_ID,SUM(QUANTITY) AS QUANTITY     
  FROM PRD_WO_SUB_DET C    
  GROUP BY REF_ROW_ID,PARA1_CODE,PARA2_CODE    
 ) DET ON B.ROW_ID=DET.REF_ROW_ID    
 JOIN ARTICLE C (NOLOCK) ON A.BOM_ARTICLE_CODE = C.ARTICLE_CODE     
 JOIN UOM ON UOM.UOM_CODE=C.UOM_CODE    
 JOIN    
 (    
  SELECT  REF_ROW_ID,SUM(QUANTITY) AS QUANTITY     
  FROM PRD_WO_SUB_DET C    
  GROUP BY REF_ROW_ID    
 ) DET1 ON B.ROW_ID=DET1.REF_ROW_ID    
 JOIN PARA1  (NOLOCK) ON DET.PARA1_CODE=PARA1.PARA1_CODE    
 JOIN PARA2  (NOLOCK) ON DET.PARA2_CODE=PARA2.PARA2_CODE    
    WHERE 1=2    
    
    SET @DTSQL=N'SELECT  MST.MEMO_ID AS ORDER_ID,MST.MEMO_NO AS ORDER_NO    
   ,MST.MEMO_DT  AS ORDER_DT,MST.ARTICLE_SET_CODE    
   ,C.ARTICLE_NO AS BM_ARTICLE_NO,C.ARTICLE_NAME AS BM_ARTICLE_NAME    
   ,C.ARTICLE_CODE  AS BM_ARTICLE_CODE,AR.ARTICLE_CODE AS COMP_CODE    
   ,AR.ARTICLE_NO AS ARTICLE_NO,AR1.ARTICLE_NAME AS FG_ARTICLE_NAME    
   ,AR1.ARTICLE_NO AS FG_ARTICLE_NO,AR1.ARTICLE_CODE AS FG_ARTICLE_CODE    
   ,DET1.QUANTITY AS WO_QTY,PARA1.PARA1_CODE,PARA1.PARA1_NAME    
   ,PARA2.PARA2_CODE,PARA2.PARA2_NAME,UOM.UOM_NAME,DET.QUANTITY    
      ,AVG_QTY AS AVG_QTY    
      ,CONVERT(NUMERIC(12,2),(AVG_QTY+ISNULL(ADD_AVG_QTY,0)) * TMP.QTY) AS REQUIRED_QTY    
      ,TMP.QTY AS PCS    
 FROM PRD_WO_ART_BOM A (NOLOCK)          
 JOIN PRD_WO_DET B (NOLOCK) ON A.REF_ROW_ID = B.ROW_ID    
 JOIN PRD_WO_MST MST (NOLOCK) ON B.MEMO_ID=MST.MEMO_ID    
 JOIN ARTICLE AR (NOLOCK) ON AR.ARTICLE_CODE =B.ARTICLE_CODE    
 JOIN ARTICLE AR1 (NOLOCK) ON AR1.ARTICLE_CODE =MST.ARTICLE_SET_CODE         
 JOIN PARA1 P1 (NOLOCK) ON A.PARA1_CODE=P1.PARA1_CODE    
 JOIN PARA2 P2 (NOLOCK) ON A.PARA2_CODE=P2.PARA2_CODE    
 JOIN    
 (    
  SELECT PARA1_CODE,PARA2_CODE,REF_ROW_ID,SUM(QUANTITY) AS QUANTITY     
  FROM PRD_WO_SUB_DET C    
  GROUP BY REF_ROW_ID,PARA1_CODE,PARA2_CODE    
 ) DET ON B.ROW_ID=DET.REF_ROW_ID    
 JOIN ARTICLE C (NOLOCK) ON A.BOM_ARTICLE_CODE = C.ARTICLE_CODE     
 JOIN UOM ON UOM.UOM_CODE=C.UOM_CODE    
 JOIN    
 (    
  SELECT  REF_ROW_ID,SUM(QUANTITY) AS QUANTITY     
  FROM PRD_WO_SUB_DET C    
  GROUP BY REF_ROW_ID    
 ) DET1 ON B.ROW_ID=DET1.REF_ROW_ID     
 JOIN PARA1  (NOLOCK) ON DET.PARA1_CODE=PARA1.PARA1_CODE    
 JOIN PARA2  (NOLOCK) ON DET.PARA2_CODE=PARA2.PARA2_CODE    
 JOIN     
 (SELECT REF_PRD_WORKORDER_MEMOID,PARA1_CODE,PARA2_CODE,SUM(QTY) AS QTY    
 FROM     
 '+@CTABLENAME+'     
 GROUP BY REF_PRD_WORKORDER_MEMOID,PARA1_CODE,PARA2_CODE    
 )TMP ON TMP.REF_PRD_WORKORDER_MEMOID=MST.MEMO_ID    
 AND PARA1.PARA1_CODE=TMP.PARA1_CODE AND  PARA2.PARA2_CODE=TMP.PARA2_CODE    
 '    
      
 PRINT  @DTSQL    
 INSERT INTO #TMPDETAILS_RM    
 EXEC SP_EXECUTESQL @DTSQL    
        
        
        
        
--PRD_PRD_TRANSFER_MAIN_SUB_DET    
IF OBJECT_ID('TEMPDB..#TMPBARCODEDET','U') IS NOT NULL    
    DROP TABLE #TMPBARCODEDET    
        
           
SELECT B.*,A.PARA1_CODE AS FG_PARA1_CODE,A.PARA2_CODE AS FG_PARA2_CODE    
, A.ORDER_ID ,A.ORDER_NO,A.FG_ARTICLE_NO,    
 A.ARTICLE_NO AS COMP_NO,    
 A.BM_ARTICLE_NO,A.UOM_NAME ,A.AVG_QTY ,    
 A.REQUIRED_QTY,    
 A.PCS,    
 SR=CAST(ROW_NUMBER() OVER (PARTITION BY A.ORDER_ID,ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE,COMPONENT_CODE,FG_ARTICLE_NO ORDER BY  A.ORDER_ID,ARTICLE_CODE,A.PARA1_CODE,COMPONENT_CODE,FG_ARTICLE_NO,B.QUANTITY_IN_STOCK DESC) AS INT)    
  INTO #TMPBARCODEDET    
 FROM #TMPDETAILS_RM A    
 LEFT OUTER JOIN     
 (    
   SELECT A.*,B.QUANTITY_IN_STOCK    
   FROM PRD_SKU A (NOLOCK)    
   JOIN PRD_PMT B (NOLOCK) ON A.PRODUCT_UID=B.PRODUCT_UID    
   WHERE B.DEPARTMENT_ID='DEF0001' AND    
   B.QUANTITY_IN_STOCK >0    
 ) B ON A.ORDER_ID =B.WORK_ORDER_ID    
 AND A.BM_ARTICLE_CODE=B.ARTICLE_CODE    
 AND A.COMP_CODE=B.COMPONENT_CODE     
 AND A.PARA1_CODE =B.COM_PARA1_CODE     
 AND A.PARA2_CODE =B.COM_PARA2_CODE    
 -- WHERE ARTICLE_CODE ='HO0000069'    
 ORDER BY ARTICLE_NO,BM_ARTICLE_NO,B.QUANTITY_IN_STOCK DESC    
        
        
 IF OBJECT_ID('TEMPDB..#TMPFINISHBARCODEDET','U') IS NOT NULL    
    DROP TABLE #TMPFINISHBARCODEDET    
           
    SELECT A.ORDER_ID,A.ARTICLE_CODE,A.FG_PARA1_CODE AS PARA1_CODE,A.COMPONENT_CODE,A.FG_ARTICLE_NO,    
           A.PRODUCT_UID,A.SR,A.REQUIRED_QTY,A.QUANTITY_IN_STOCK    
           ,SUM(B.QUANTITY_IN_STOCK) AS CUMM_QTY    
           ,CASE WHEN A.QUANTITY_IN_STOCK >=A.REQUIRED_QTY AND SUM(B.QUANTITY_IN_STOCK)-(A.QUANTITY_IN_STOCK+A.REQUIRED_QTY)<0   THEN A.REQUIRED_QTY     
    WHEN A.QUANTITY_IN_STOCK <A.REQUIRED_QTY AND SUM(B.QUANTITY_IN_STOCK)<=A.REQUIRED_QTY THEN A.QUANTITY_IN_STOCK    
    WHEN A.QUANTITY_IN_STOCK <A.REQUIRED_QTY AND SUM(B.QUANTITY_IN_STOCK)>A.REQUIRED_QTY AND A.QUANTITY_IN_STOCK-(SUM(B.QUANTITY_IN_STOCK)-A.REQUIRED_QTY)>0 THEN A.QUANTITY_IN_STOCK-(SUM(B.QUANTITY_IN_STOCK)-A.REQUIRED_QTY)     
     ELSE 0 END AS QUANTITY     
    INTO #TMPFINISHBARCODEDET    
    FROM #TMPBARCODEDET A    
    JOIN #TMPBARCODEDET B ON A.ORDER_ID=B.ORDER_ID     
    AND A.ARTICLE_CODE =B.ARTICLE_CODE     
    AND A.FG_PARA1_CODE=B.FG_PARA1_CODE AND     
    A.COMPONENT_CODE=B.COMPONENT_CODE AND A.FG_ARTICLE_NO=B.FG_ARTICLE_NO    
    AND B.SR<=A.SR    
    GROUP BY A.ORDER_ID,A.ARTICLE_CODE,A.FG_PARA1_CODE,A.COMPONENT_CODE,A.FG_ARTICLE_NO,    
           A.REQUIRED_QTY ,A.PRODUCT_UID,A.SR,A.QUANTITY_IN_STOCK     
    ORDER BY A.ORDER_ID,ARTICLE_CODE,A.FG_PARA1_CODE,COMPONENT_CODE,FG_ARTICLE_NO,A.SR     
        
    DELETE FROM #TMPFINISHBARCODEDET WHERE QUANTITY=0    
        
      
        
    SELECT A.COMPONENT_CODE AS REF_COMPONENT_ARTICLE_CODE,    
           A.PURCHASE_PRICE ,    
           CONVERT(NUMERIC(12,2),(A.PURCHASE_PRICE*B.QUANTITY)) AS AMOUNT,    
   A.PRODUCT_UID,    
    B.QUANTITY AS QUANTITY ,    
   ROW_ID=CAST(NEWID() AS VARCHAR(100)),    
   LAST_UPDATE=GETDATE(),    
   A.ARTICLE_CODE AS ARTICLE_CODE,    
   A.AVG_QTY,    
   MEMO_ID=CAST('LATER' AS VARCHAR(100)),    
   REF_PRD_WORKORDER_MEMOID=A.ORDER_ID,    
   A.PCS,    
   A.FG_PARA1_CODE AS PARA1_CODE,    
   A.FG_PARA2_CODE AS PARA2_CODE    
    FROM    
    #TMPBARCODEDET A    
    JOIN #TMPFINISHBARCODEDET B ON A.PRODUCT_UID=B.PRODUCT_UID    
    LEFT OUTER JOIN     
 (    
   SELECT WORK_ORDER_ID,A.ARTICLE_CODE,    
    A.COMPONENT_CODE,A.COM_PARA1_CODE ,A.COM_PARA2_CODE ,A.PRODUCT_UID,    
    SUM(B.QUANTITY_IN_STOCK) AS  QUANTITY_IN_STOCK    
   FROM PRD_SKU A (NOLOCK)    
   JOIN PRD_PMT B (NOLOCK) ON A.PRODUCT_UID=B.PRODUCT_UID    
   WHERE B.DEPARTMENT_ID=@CDEPARTMENT_ID AND    
   B.QUANTITY_IN_STOCK >0    
   GROUP BY WORK_ORDER_ID,A.ARTICLE_CODE,A.PRODUCT_UID,    
    A.COMPONENT_CODE,A.COM_PARA1_CODE ,A.COM_PARA2_CODE     
 ) C ON A.ORDER_ID =C.WORK_ORDER_ID    
 AND A.ARTICLE_CODE=C.ARTICLE_CODE    
 AND A.COMPONENT_CODE=C.COMPONENT_CODE     
 AND A.FG_PARA1_CODE =C.COM_PARA1_CODE     
 AND A.FG_PARA2_CODE =C.COM_PARA2_CODE     
 AND A.PRODUCT_UID=C.PRODUCT_UID    
        
    --.30    
    
GOTO END_PROC    
    
LBLMST:    
  IF @NMEMO_ID<>''    
 BEGIN    
            
          SELECT A.*,B.DEPARTMENT_NAME FROM PRD_TRANSFER_MAIN_MST A    
           JOIN PRD_DEPARTMENT_MST B ON A.SOURCE_DEPARTMENT_ID=B.DEPARTMENT_ID     
          WHERE MEMO_ID=@NMEMO_ID    
            
 END      
 ELSE    
 BEGIN      
     
        SELECT MEMO_ID=CAST('LATER' AS VARCHAR(22)),    
        FIN_YEAR=CAST('' AS VARCHAR(10)),    
        MEMO_NO=CAST('LATER' AS VARCHAR(22)),    
        MEMO_DT=CAST('' AS DATETIME),LAST_UPDATE=GETDATE(),    
        USER_CODE=CAST('' AS VARCHAR(10)),    
        [TRANSFER_BY]=CAST('' AS VARCHAR(100)),    
        [REMARKS]=CAST('' AS VARCHAR(100)),    
        CANCELLED=0,    
        SOURCE_DEPARTMENT_ID=CAST('' AS VARCHAR(100)),    
        [SUBTOTAL] =CAST(0 AS NUMERIC(12,2)),    
        [ROUNDOFF] =CAST(0 AS NUMERIC(12,2)),   
        NET_AMOUNT =CAST(0 AS NUMERIC(12,2)) ,
        CAST(0 AS INT) AS MODE  
END    
    
    
GOTO END_PROC    
    
    
    
END_PROC:    
END
