CREATE PROCEDURE SP_CASHIERMODULE
@NQUERYID INT,
@CWHERE VARCHAR(MAX)='',
@DFILTERDATE DATETIME='',
@cLOC varchar(5)='',
@DLOGINDATE DATETIME=''/* for Selling Days*/
with Recompile
--WITH ENCRYPTION
AS
BEGIN
--(dinkar) Replace  left(memoid,2) to Location_code 

DECLARE @CFINYEAR VARCHAR(5),@cCutoffDate DATETIME
SELECT @CFINYEAR='01'+DBO.FN_GETFINYEAR(@DFILTERDATE)
	
	IF @NQUERYID=1
		GOTO LBLGETPACKSLIPDATA
	ELSE
	IF @NQUERYID=2  
		GOTO LBLGETPACKSLIP
	ELSE
		GOTO LAST

LBLGETPACKSLIPDATA:
		
	--DECLARE  @TABLECM_ID TABLE (CM_ID VARCHAR(50))

	--INSERT INTO @TABLECM_ID
	--SELECT CM_ID
	--FROM RPS_MST (NOLOCK) WHERE CM_DT<=@DFILTERDATE AND CANCELLED = 0 AND REF_CM_ID = ''
	DECLARE @CLOCID VARCHAR(5)	
	
	IF @cLOC='' 
	   SELECT @CLOCID =DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID   
	ELSE
	 SELECT @CLOCID= @cLOC
	  	  
	SELECT TOP  1 @cCutoffDate=value FROM config WHERE config_option='cashier_rps_cutoff_date'
	SET @cCutoffDate=ISNULL(@cCutoffDate,'')
	 
	PRINT 'RPS-1:'+CONVERT(VARCHAR,GETDATE(),113)
	
	IF OBJECT_ID('TEMPDB..#TMPRPS','U') IS NOT NULL
		DROP TABLE #TMPRPS
	
	SELECT A.CM_ID,A.LAST_UPDATE ,A.location_Code 
	INTO #TMPRPS
	FROM  RPS_MST  A (NOLOCK) 
	--FROM  RPS_DET  A (NOLOCK) 
	--JOIN  RPS_MST  B (NOLOCK) ON B.CM_ID=A.CM_ID
	WHERE A.location_Code =@CLOCID AND A.CM_DT<=@DFILTERDATE AND A.CANCELLED = 0 
	AND a.CM_DT>=@cCutoffDate
	AND isnull(a.ref_cm_id,'')=''
	
	PRINT 'RPS-2:'+CONVERT(VARCHAR,GETDATE(),113)
	
	IF OBJECT_ID('TEMPDB..#TMPRPSDET','U') IS NOT NULL
		DROP TABLE #TMPRPSDET
		
	SELECT A.*,B.*,DBO.FN_CONVERTINTOHOURSMINS(DATEDIFF(MI,A.LAST_UPDATE,GETDATE())) AS [DELAY] ,
    (CUSTOMER_FNAME + ' ' + CUSTOMER_LNAME  + ' (' + USER_CUSTOMER_CODE + ')') AS CUSTOMER_NAME
	FROM RPS_MST A (NOLOCK) 
	JOIN #TMPRPS C (NOLOCK) ON A.CM_ID=C.CM_ID
	JOIN USERS B (NOLOCK) ON A.USER_CODE = B.USER_CODE 
	LEFT OUTER JOIN CUSTDYM CUST (NOLOCK)  ON A.CUSTOMER_CODE= CUST.CUSTOMER_CODE
	ORDER BY A.CM_NO
	
	PRINT 'RPS-3:'+CONVERT(VARCHAR,GETDATE(),113)
	
	SELECT B.LOCATION_CODE,(CASE WHEN ISNULL(sx.receipt_dt,C.RECEIPT_DT)<>'' AND ISNULL(sx.receipt_dt,C.RECEIPT_DT)<>@DLOGINDATE THEN  DATEDIFF(DAY,ISNULL(sx.receipt_dt,C.RECEIPT_DT),@DLOGINDATE) ELSE 1 END) AS selling_days, 
	A.* 
	INTO #TMPRPSDET 
	FROM RPS_DET A WITH (NOLOCK,INDEX=IX_RPS_DET_CM_ID)
	JOIN #TMPRPS B (NOLOCK) ON A.CM_ID=B.CM_ID
	JOIN SKU C (NOLOCK) ON C.PRODUCT_CODE=A.PRODUCT_CODE
	LEFT JOIN sku_xfp sx (NOLOCK) ON sx.product_code=a.product_code AND sx.dept_id=@CLOCID

	PRINT 'RPS-4:'+CONVERT(VARCHAR,GETDATE(),113)
	
	IF OBJECT_ID('TEMPDB..#TMPRPSFINALDET','U') IS NOT NULL
		DROP TABLE #TMPRPSFINALDET
			
	SELECT B.LAST_UPDATE AS RPS_LAST_UPDATE, A.*,ROW_NUMBER() OVER (ORDER BY A.TS) AS SRNO,
	I.EMP_NAME,D.ARTICLE_NO,D.ARTICLE_CODE,D.ARTICLE_NAME,
	P1.PARA1_NAME,P2.PARA2_NAME,P3.PARA3_NAME,P4.PARA4_NAME,P5.PARA5_NAME,P6.PARA6_NAME,
	P1.PARA1_CODE,P2.PARA2_CODE,P3.PARA3_CODE,P4.PARA4_CODE,P5.PARA5_CODE,P6.PARA6_CODE,
	U.UOM_NAME,U.UOM_CODE,C.BARCODE_CODING_SCHEME AS CODING_SCHEME,D.INACTIVE,C.PURCHASE_PRICE,C.WS_PRICE,
	E.SUB_SECTION_NAME,F.SECTION_NAME,U.UOM_TYPE,P3.DT_CREATED AS PARA3_DT_CREATED,D.DT_CREATED AS ART_DT_CREATED,
	C.DT_CREATED AS SKU_DT_CREATED,D.STOCK_NA, 
	CONVERT (BIT,(CASE WHEN A.QUANTITY <0 THEN 1 ELSE 0 END)) AS SALERETURN ,CAST(0 AS BIT) AS CREDIT_REFUND,
	I1.EMP_NAME AS EMP_NAME1 ,I2.EMP_NAME AS EMP_NAME2 ,
	'' AS HOLD_ID,'' AS CMD_HOLD_ROW_ID,(CASE WHEN ISNULL(A.HOLD_FOR_ALTER,0)=0 THEN 'N' ELSE 'Y' END) AS [HOLD_FOR_ALTER_TXT],
	CONVERT(NUMERIC(6,2),0) AS LAST_SLS_DISCOUNT_PERCENTAGE,RTRIM(C.HSN_CODE) AS HSN_CODE,cast(1 as int) as item_type,ISNULL(D.ARTICLE_PACK_SIZE,1) AS ARTICLE_PACK_SIZE
	,A.SLS_TITLE AS SCHEME_NAME,A.rps_weighted_avg_disc_pct as weighted_avg_disc_pct,A.rps_weighted_avg_disc_amt as weighted_avg_disc_amt
	
	INTO #TMPRPSFINALDET 
	
	FROM  #TMPRPSDET  A 
	JOIN #TMPRPS B ON A.CM_ID=B.CM_ID 
	JOIN SKU C(NOLOCK) ON A.PRODUCT_CODE = C.PRODUCT_CODE
	
	JOIN ARTICLE D (NOLOCK) ON C.ARTICLE_CODE = D.ARTICLE_CODE
	JOIN PARA1 P1 (NOLOCK)  ON C.PARA1_CODE = P1.PARA1_CODE
	JOIN PARA2 P2 (NOLOCK)  ON C.PARA2_CODE = P2.PARA2_CODE
	JOIN PARA3 P3 (NOLOCK)  ON C.PARA3_CODE = P3.PARA3_CODE
	JOIN PARA4 P4 (NOLOCK)  ON C.PARA4_CODE = P4.PARA4_CODE
	JOIN PARA5 P5 (NOLOCK)  ON C.PARA5_CODE = P5.PARA5_CODE
	JOIN PARA6 P6 (NOLOCK)  ON C.PARA6_CODE = P6.PARA6_CODE
	JOIN EMPLOYEE I (NOLOCK) ON A.EMP_CODE = I.EMP_CODE 
	JOIN UOM U (NOLOCK) ON U.UOM_CODE = D.UOM_CODE
	JOIN SECTIOND E (NOLOCK)  ON D.SUB_SECTION_CODE = E.SUB_SECTION_CODE
	JOIN SECTIONM F (NOLOCK)  ON F.SECTION_CODE = E.SECTION_CODE
	LEFT OUTER JOIN EMPLOYEE I1 (NOLOCK) ON A.EMP_CODE1 = I1.EMP_CODE 
	LEFT OUTER JOIN EMPLOYEE I2 (NOLOCK) ON A.EMP_CODE2 = I2.EMP_CODE 
 	ORDER BY SRNO


	 ;WITH CTE AS 
	 (
	  SELECT A.ROW_ID,E.CM_NO,E.CM_DT,
	          SR=ROW_NUMBER() OVER (PARTITION BY A.PRODUCT_CODE,E.location_Code  ORDER BY E.CM_DT DESC,E.CM_NO DESC)
	   FROM #TMPRPSFINALDET A
	   JOIN CMD01106 D WITH (NOLOCK) ON A.PRODUCT_CODE=D.PRODUCT_CODE  
	   JOIN CMM01106 E ON E.CM_ID=D.CM_ID AND E.location_Code =A.location_Code 
	   WHERE  D.QUANTITY>0 AND CANCELLED=0
	  )

	  SELECT  * into #tmpcmid FROM CTE WHERE SR=1

	
	UPDATE A SET REF_SLS_MEMO_NO=b.CM_NO,REF_SLS_MEMO_DT=b.CM_DT
	FROM #TMPRPSFINALDET A
	join #tmpcmid b ON A.ROW_ID  =B.ROW_ID 
	WHERE ISNULL(A.REF_SLS_MEMO_NO,'')=''   AND A.QUANTITY<0 

	--join (
	--   SELECT A.ROW_ID,E.CM_NO,E.CM_DT,
	--          SR=ROW_NUMBER() OVER (PARTITION BY A.PRODUCT_CODE,LEFT(D.CM_ID,2) ORDER BY E.CM_DT DESC,E.CM_NO DESC)
	--   FROM #TMPRPSFINALDET A
	--   JOIN CMD01106 D WITH (NOLOCK) ON A.PRODUCT_CODE=D.PRODUCT_CODE  AND LEFT(D.CM_ID,2)=LEFT(A.CM_ID,2)
	--   JOIN CMM01106 E ON E.CM_ID=D.CM_ID
	--   WHERE  D.QUANTITY>0 AND CANCELLED=0
	--) 
	


	--very slow Query on BACHOOMAL SONS Replace by upper query 16052022

	--UPDATE A SET REF_SLS_MEMO_NO=C.CM_NO,REF_SLS_MEMO_DT=C.CM_DT
	--FROM #TMPRPSFINALDET A
	--JOIN CMD01106 B WITH (INDEX=IXCMD_PRODUCT_CODE,NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
	--JOIN CMM01106 C (NOLOCK) ON C.CM_ID=B.CM_ID
	--WHERE ISNULL(A.REF_SLS_MEMO_NO,'')='' AND LEFT(A.CM_ID,2)=LEFT(B.CM_ID,2) AND CANCELLED=0 AND A.QUANTITY<0 AND B.QUANTITY>0
	--AND C.CM_ID=(SELECT TOP 1 D.CM_ID FROM CMD01106 D JOIN CMM01106 E ON E.CM_ID=D.CM_ID
	--			 WHERE D.PRODUCT_CODE=A.PRODUCT_CODE AND LEFT(D.CM_ID,2)=LEFT(B.CM_ID,2)
	--			 AND D.QUANTITY>0 AND CANCELLED=0
	--			 ORDER BY E.CM_DT DESC,E.CM_NO DESC)


	IF OBJECT_ID('temdb..#tmpcri','U') IS NOT NULL
		DROP TABLE #tmpcri

	SELECT DISTINCT a.cm_id into #tmpcri from  coupon_redemption_info a (NOLOCK)  
	JOIN cmm01106 b (NOLOCK) ON a.cm_id=b.cm_id
	JOIN cmd01106 c (NOLOCK) ON c.cm_id=b.cm_id
	JOIN #TMPRPSFINALDET d ON d.product_code=c.product_code
	WHERE b.cancelled=0 AND campaign_code='00009'			

	UPDATE A SET LAST_SLS_DISCOUNT_PERCENTAGE=(CASE WHEN isnull(b.old_net,0)<>0 and isnull(c.patchup_run,0)=1 and b.old_net<>b.net
						THEN  ((((b.OLD_MRP*b.quantity)-b.OLD_NET)*100)/(b.OLD_MRP*b.quantity))
						WHEN b.old_mrp<>b.mrp AND ISNULL(b.Old_mrp,0)<>0 THEN 
						(100-(((b.old_mrp-(b.old_mrp*ISNULL(b.basic_discount_percentage,0)/100))
						-((b.old_mrp-(b.old_mrp*ISNULL(b.basic_discount_percentage,0)/100))*(CASE WHEN cri.cm_id IS NULL 
						THEN c.discount_percentage ELSE 0 END)/100))/b.old_mrp)*100) 
						WHEN b.weighted_avg_disc_pct<>0  AND NOT (ISNULL(b.manual_discount,0)=1 OR ISNULL(b.manual_dp,0)=1)
						THEN ((b.weighted_avg_disc_amt+(CASE WHEN cri.cm_id IS NULL AND ISNULL(c.patchup_run,0)=0 THEN 
						ISNULL(cmm_discount_amount,0) ELSE 0 END))/(b.MRP*b.QUANTITY))*100
						ELSE (100-((((b.mrp-(b.mrp*(ISNULL(b.basic_discount_percentage,0)+ISNULL(b.card_discount_percentage,0))/100))-
						(CASE WHEN cri.cm_id IS NULL AND ISNULL(c.patchup_run,0)=0 THEN b.cmm_Discount_amount ELSE 0 END)))/b.mrp)*100) END) 
	FROM #TMPRPSFINALDET A
	JOIN CMM01106 C (NOLOCK) ON CM_NO=A.REF_SLS_MEMO_NO AND C.CM_DT=A.REF_SLS_MEMO_DT
	JOIN CMD01106 B WITH (INDEX=IXCMD_PRODUCT_CODE,NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
	AND c.cm_id=b.cm_id
	LEFT OUTER JOIN #tmpcri cri ON cri.cm_id=c.cm_id



		 
	PRINT 'RPS-5:'+CONVERT(VARCHAR,GETDATE(),113)
	
	SELECT * FROM #TMPRPSFINALDET c
	JOIN sku_names sn (NOLOCK) ON sn.product_code=c.product_code
	GOTO LAST  
	
LBLGETPACKSLIP:  
    
	 --DECLARE  @TABCM_ID TABLE (CM_ID VARCHAR(50))  
	  
	 --INSERT INTO @TABCM_ID  
	 --SELECT CM_ID  
	 --FROM RPS_MST (NOLOCK) WHERE CANCELLED = 0 AND REF_CM_ID = '' AND CM_DT < @CWHERE
	 
	 SELECT A.*,B.*,DBO.FN_CONVERTINTOHOURSMINS(DATEDIFF(MI,A.LAST_UPDATE,GETDATE())) AS [DELAY] ,
	  (CUSTOMER_FNAME + ' ' + CUSTOMER_LNAME  + ' (' + USER_CUSTOMER_CODE + ')') AS CUSTOMER_NAME
	 FROM RPS_MST A (NOLOCK) 
	 JOIN USERS B (NOLOCK) ON A.USER_CODE = B.USER_CODE   
	 LEFT OUTER JOIN CUSTDYM CUST ON A.CUSTOMER_CODE= CUST.CUSTOMER_CODE
	 WHERE LEFT(A.CM_ID,2)=@CLOCID AND A.CANCELLED = 0 
	 AND isnull(a.ref_cm_id,'')=''  AND A.CM_DT < @CWHERE --A.CM_ID IN (SELECT CM_ID FROM @TABCM_ID)
	 ORDER BY A.CM_NO
	 GOTO LAST  
LAST:

END

/*
select SP_ID,last_update as lupd, * from SLS_CMM01106_UPLOAD order by LAST_UPDATE desc

select PRODUCT_CODE, last_sls_discount_percentage, * from SLS_cmd01106_UPLOAD where sp_id='183f37fef18-a227-420d-a365-bc27356c545c'

exec SAVETRAN_SLS_BEFORESAVE 2,'f37fef18-a227-420d-a365-bc27356c545c','',''

update SLS_cmd01106_UPLOAD set last_sls_discount_percentage=45 where sp_id='183f37fef18-a227-420d-a365-bc27356c545c'
select LAST_UPDATE, * from RPS_DET where product_code='JM234442'

select (100-(((B.MRP-(B.MRP*ISNULL(B.BASIC_DISCOUNT_PERCENTAGE,0)/100))-((B.MRP-(B.MRP*
	   ISNULL(B.BASIC_DISCOUNT_PERCENTAGE,0)/100))*a.DISCOUNT_PERCENTAGE/100))/B.MRP)*100) as last_slsdp,
	   weighted_avg_disc_pct,cm_no,cm_dt,a.discount_percentage,a.discount_amount,a.* 
from cmd01106 b join cmm01106 a on a.cm_id=b.cm_id where product_code='JM234442'

exec SP_RETAILSALE_21 0,'JM234442','','jm'

exec SP_CASHIERMODULE
@NQUERYID=1,
@DFILTERDATE='2019-07-29',
@cLOC='jm'

select * from pack_sliP_f where pack_slip_id='JM0112000000JMMM-00004'
*/