create PROCEDURE SP_PICKLIST    
@NQUERYID NUMERIC(2,0),           
@CMEMOID  NVARCHAR(MAX),      
@CWHERE VARCHAR(100)='',
@NMODE NUMERIC(3,0),
@cLocId char(4)=''
--WITH ENCRYPTION
AS      
BEGIN      
--(dinkar) Replace  left(memoid,2) to Location_code 
DECLARE @CLOCationID CHAR(4) ,@CCMD NVARCHAR(MAX),@CCMD1 NVARCHAR(MAX),@CDBNAME VARCHAR(100),@cHEAD_CODE VARCHAR(MAX),@cHEAD_CODE1 VARCHAR(MAX)
      
IF @NQUERYID = 1      
GOTO LBLGETMST      
      
ELSE IF @NQUERYID = 2      
GOTO LBLGETDETAILS   

ELSE IF @NQUERYID = 3      
GOTO LBLPENDINGMST

ELSE IF @NQUERYID = 4     
GOTO LBLPENDINGDET   
                 
ELSE IF @NQUERYID = 5     
GOTO LBLCUSTOMER  

ELSE      
GOTO LAST      

LBLGETMST:     
	SELECT A.*,  U.USERNAME,LM.AC_NAME,
	ISNULL(LMP.ADDRESS0,'') + ' ' + ISNULL(LMP.ADDRESS1,'') + ' ' + ISNULL(LMP.ADDRESS2,'') + ', ' + ISNULL(AREA.AREA_NAME,'') + ' ' + ISNULL(CITY.CITY,'') + ' ' +   ISNULL(STATE.STATE,'') AS 'SUPP_ADDRESS'
	FROM WSL_PICKLIST_MST A     
	LEFT OUTER JOIN LM01106 LM  ON LM.AC_CODE=A.AC_CODE 
	LEFT OUTER JOIN LMP01106 LMP   ON LMP.AC_CODE=LM.AC_CODE
	LEFT OUTER JOIN FORM F ON F.FORM_ID=LMP.FORM_ID
	LEFT OUTER JOIN AREA ON ( LMP.AREA_CODE = AREA.AREA_CODE )  
	LEFT OUTER JOIN CITY ON ( AREA.CITY_CODE = CITY.CITY_CODE )  
	LEFT OUTER JOIN STATE ON ( CITY.STATE_CODE = STATE.STATE_CODE )  
	LEFT OUTER JOIN REGIONM  ON STATE.REGION_CODE = REGIONM.REGION_CODE         
	JOIN USERS U ON U.USER_CODE = A.USER_CODE 
	WHERE A.PICK_LIST_ID = @CMEMOID  
	         
 GOTO LAST      
 LBLGETDETAILS:   
 
	SELECT  B.ARTICLE_NAME,DET.*,CC.SUB_SECTION_NAME,DD.SECTION_NAME,    
    B.ARTICLE_NO,C.PARA1_NAME,D.PARA2_NAME,E.PARA3_NAME, F.PARA4_NAME, G.PARA5_NAME, H.PARA6_NAME,D.PARA2_ORDER,C.PARA1_ORDER ,  
    (A.QUANTITY * A.WS_PRICE) AS AMOUNT,B.UOM_CODE,U.UOM_NAME,U.UOM_TYPE,B.DT_CREATED,A.QUANTITY AS ORDER_QUANTITY,  
    B.CODING_SCHEME,B.PARA1_SET,B.PARA2_SET,A.ROW_ID AS BO_ROW_ID,R.ORDER_NO,(PICK_LIST_QTY+ADD_QTY) AS TOTAL_QUANTITY,
    B.ALIAS AS ARTICLE_ALIAS       
    FROM WSL_PICKLIST_DET DET (NOLOCK)
    JOIN BUYER_ORDER_DET A (NOLOCK) ON A.ORDER_ID=DET.ORDER_ID AND A.ARTICLE_CODE= DET.ARTICLE_CODE  AND A.PARA1_CODE= DET.PARA1_CODE  AND A.PARA2_CODE= DET.PARA2_CODE  
    JOIN ARTICLE B (NOLOCK)  ON A.ARTICLE_CODE = B.ARTICLE_CODE
    JOIN SECTIOND CC ON CC.SUB_SECTION_CODE = B.SUB_SECTION_CODE
	JOIN SECTIONM DD ON DD.SECTION_CODE = CC.SECTION_CODE      
    JOIN PARA1 C (NOLOCK)  ON A.PARA1_CODE = C.PARA1_CODE      
    JOIN PARA2 D (NOLOCK)  ON A.PARA2_CODE = D.PARA2_CODE       
    JOIN PARA3 E (NOLOCK)  ON B.PARA3_CODE = E.PARA3_CODE       
    JOIN PARA4 F (NOLOCK)  ON B.PARA4_CODE = F.PARA4_CODE       
    JOIN PARA5 G (NOLOCK)  ON B.PARA5_CODE = G.PARA5_CODE       
    JOIN PARA6 H (NOLOCK) ON B.PARA6_CODE = H.PARA6_CODE      
    JOIN BUYER_ORDER_MST R (NOLOCK) ON  R.ORDER_ID= A.ORDER_ID  
    JOIN UOM U (NOLOCK) ON U.UOM_CODE = B.UOM_CODE  
    WHERE DET.PICK_LIST_ID = @CMEMOID  
      

GOTO LAST                
   
   
LBLPENDINGMST:  

IF @NMODE = 1 
BEGIN
		    SELECT CAST(0 AS BIT) AS CHK,A.ORDER_ID,A.ORDER_NO,A.ORDER_DT,A.ORDER_TIME,A.REF_NO,
		    a.TOTAL_QUANTITY, CAST(0 AS NUMERIC(18,2)) AS RECEIVED_QTY,CAST(0 AS NUMERIC(18,2)) AS PENDING_QTY
			FROM BUYER_ORDER_MST A
			JOIN BUYER_ORDER_DET B ON A.ORDER_ID = B.ORDER_ID
			JOIN 
			(
				SELECT B.ORDER_ID,SUM(B.QUANTITY) AS TOTAL_QUANTITY FROM
				BUYER_ORDER_DET B  GROUP BY B.ORDER_ID
			)B1 ON B1.ORDER_ID =A.ORDER_ID 
			LEFT OUTER JOIN
			(
				SELECT AC_CODE,ORDER_ID,ARTICLE_CODE,PARA1_CODE,PARA2_CODE,SUM(A.PICK_LIST_QTY) AS PICK_LIST_QTY 
				FROM WSL_PICKLIST_DET A 
				JOIN WSL_PICKLIST_MST B ON A.PICK_LIST_ID = B.PICK_LIST_ID
				WHERE B.CANCELLED=0 AND B.AC_CODE=@CWHERE  
				GROUP BY AC_CODE,ARTICLE_CODE,PARA1_CODE,PARA2_CODE,ORDER_ID
			)C ON C.AC_CODE = A.AC_CODE AND B.ARTICLE_CODE = C.ARTICLE_CODE AND B.PARA1_CODE = C.PARA1_CODE 
			AND B.PARA2_CODE = C.PARA2_CODE AND B.ORDER_ID = C.ORDER_ID
			WHERE A.MEMO_TYPE = 2 AND A.CANCELLED = 0 AND A.AC_CODE = @CWHERE  AND B.QUANTITY <> ISNULL(C.PICK_LIST_QTY,0) 
			GROUP BY A.ORDER_ID,A.ORDER_NO,A.ORDER_DT,A.ORDER_TIME,A.REF_NO,a.TOTAL_QUANTITY
		
END
ELSE
BEGIN
		SELECT CAST(0 AS BIT) AS CHK,A.ORDER_ID,A.ORDER_NO,A.ORDER_DT,A.ORDER_TIME,A.REF_NO,
		a.TOTAL_QUANTITY,CAST(0 AS NUMERIC(18,2)) AS RECEIVED_QTY,CAST(0 AS NUMERIC(18,2)) AS PENDING_QTY
		FROM BUYER_ORDER_MST A
		JOIN BUYER_ORDER_DET B ON A.ORDER_ID = B.ORDER_ID
		JOIN 
		(
			SELECT B.ORDER_ID,SUM(B.QUANTITY) AS TOTAL_QUANTITY FROM
			BUYER_ORDER_DET B  GROUP BY B.ORDER_ID
		)B1 ON B1.ORDER_ID =A.ORDER_ID 
		LEFT OUTER JOIN
		(
			SELECT AC_CODE,ARTICLE_CODE,ORDER_ID,PARA1_CODE,PARA2_CODE,A.PICK_LIST_ID
			FROM WSL_PICKLIST_DET A 
			JOIN WSL_PICKLIST_MST B ON A.PICK_LIST_ID = B.PICK_LIST_ID
			WHERE B.CANCELLED=0 AND B.AC_CODE=@CWHERE 
		)C ON C.AC_CODE = A.AC_CODE AND 
			  B.ARTICLE_CODE = C.ARTICLE_CODE AND 
			  B.PARA1_CODE = C.PARA1_CODE AND 
			  B.PARA2_CODE = C.PARA2_CODE AND
			  B.ORDER_ID   = C.ORDER_ID
		WHERE A.MEMO_TYPE = 2 AND A.CANCELLED = 0 AND A.AC_CODE =@CWHERE AND (C.PICK_LIST_ID = @CMEMOID OR C.ORDER_ID IS NULL) 
		GROUP BY A.ORDER_ID,A.ORDER_NO,A.ORDER_DT,A.ORDER_TIME,A.REF_NO,a.TOTAL_QUANTITY 
END
GOTO LAST     

LBLPENDINGDET:    

	SET @CLOCATIONId=@cLocId

IF OBJECT_ID ('#PICLIST','U') IS NOT NULL
	DROP TABLE #PICLIST

IF OBJECT_ID('TEMPDB..#PICKLIST_QTY','U') IS NOT NULL
	DROP TABLE #PICKLIST_QTY

--SET @CARTICLECODE='010000008'
SELECT X.ARTICLE_CODE,X.PARA1_CODE,X.PARA2_CODE
	  ,SUM(X.PICK_LIST_QTY+X.ADD_QTY-ISNULL(Y.QTY,0)) AS PICKLIST_QTY
INTO #PICKLIST_QTY	  
FROM WSL_PICKLIST_DET X
LEFT OUTER JOIN 
(
	SELECT A.ROW_ID AS PICKLIST_ROW_ID,SUM(B.QUANTITY) AS QTY 
	FROM WSL_PICKLIST_DET A 
    JOIN IND01106 B ON A.PICK_LIST_ID=B.PICK_LIST_ID AND A.ARTICLE_CODE=B.PICKLIST_ARTICLE_CODE
	AND A.PARA1_CODE=B.PICKLIST_PARA1_CODE AND A.PARA2_CODE=B.PICKLIST_PARA2_CODE
	JOIN INM01106 C ON B.INV_ID = C.INV_ID
	WHERE C.CANCELLED = 0 
	GROUP BY A.ROW_ID
)Y ON X.ROW_ID = Y.PICKLIST_ROW_ID
JOIN WSL_PICKLIST_MST Z ON X.PICK_LIST_ID = Z.PICK_LIST_ID
WHERE Z.CANCELLED = 0 AND X.PICK_LIST_QTY+X.ADD_QTY > ISNULL(Y.QTY,0)
GROUP BY X.ARTICLE_CODE,X.PARA1_CODE,X.PARA2_CODE

SELECT B.ARTICLE_CODE,B.PARA1_CODE,B.PARA2_CODE,DEPT_ID,SUM(A.QUANTITY_IN_STOCK)-ISNULL(C.PICKLIST_QTY,0) AS XN_STOCK 
INTO #PICLIST 
FROM PMT01106 A
JOIN SKU B ON A.PRODUCT_CODE = B.PRODUCT_CODE 
LEFT JOIN #PICKLIST_QTY C ON B.ARTICLE_CODE=C.ARTICLE_CODE AND B.PARA1_CODE=C.PARA1_CODE AND B.PARA2_CODE=C.PARA2_CODE
WHERE DEPT_ID = @CLOcationId
GROUP BY B.ARTICLE_CODE,B.PARA1_CODE,B.PARA2_CODE,DEPT_ID,ISNULL(C.PICKLIST_QTY,0)

SET @CCMD = N'SELECT CONVERT(BIT,'+(CASE WHEN @NMODE= 1 THEN ' 0 ' ELSE ' (CASE WHEN C.ORDER_ID IS NULL AND C.ARTICLE_CODE IS NULL AND C.PARA1_CODE IS NULL AND C.PARA2_CODE IS NULL THEN 0 ELSE 1 END)' END)+') AS CHK,CONVERT(NUMERIC,0) AS ADD_QTY,
			D.ARTICLE_NAME,B.*,E.SUB_SECTION_NAME,F.SECTION_NAME,D.ARTICLE_NO,
			G.PARA1_NAME,H.PARA2_NAME,I.PARA3_NAME, J.PARA4_NAME, K.PARA5_NAME, L.PARA6_NAME,G.PARA1_ORDER,H.PARA2_ORDER,
			(B.QUANTITY * B.WS_PRICE)  AS AMOUNT ,D.UOM_CODE,U.UOM_NAME,U.UOM_TYPE,D.DT_CREATED,D.CODING_SCHEME,
			D.PARA1_SET,D.PARA2_SET,D.ALIAS AS ARTICLE_ALIAS,ISNULL(C.PICK_LIST_QTY,0) AS PICK_LIST_QTY,(B.QUANTITY-ISNULL(C.PICK_LIST_QTY,0)) AS PENDING_QUANTITY
			,(B.QUANTITY-ISNULL(C.PICK_LIST_QTY,0))+'+(CASE WHEN @NMODE = 1 THEN '0' ELSE 'ISNULL(C.PICK_LIST_QTY,0)' END)+' AS PENDING_QUANTITY1 ,ISNULL(X.XN_STOCK,0) AS XN_STOCK,A.ORDER_NO, '+(CASE WHEN @NMODE = 1 THEN '0' ELSE 'ISNULL(C.PICK_LIST_QTY,0)' END)+' AS RECEIVE_QUANTITY
			'+(CASE WHEN @NMODE= 1 THEN ' ,(B.QUANTITY-ISNULL(C.PICK_LIST_QTY,0)) AS PENDING_QUANTITY1 ' ELSE '' END)+' FROM BUYER_ORDER_MST A
			JOIN BUYER_ORDER_DET B ON A.ORDER_ID = B.ORDER_ID
			LEFT OUTER JOIN 
			(
			  SELECT ARTICLE_CODE,PARA1_CODE,PARA2_CODE,SUM(A.PICK_LIST_QTY) AS PICK_LIST_QTY,A.ORDER_ID FROM WSL_PICKLIST_DET A 
			  JOIN WSL_PICKLIST_MST B ON A.PICK_LIST_ID = B.PICK_LIST_ID
			  WHERE B.CANCELLED=0 AND B.AC_CODE='''+@CWHERE+''' 
			  AND '+(CASE WHEN @NMODE = 1 THEN '1 =1' ELSE 'B.PICK_LIST_ID = '''+@CMEMOID+'''' END)+' 
			  GROUP BY ARTICLE_CODE,PARA1_CODE,PARA2_CODE,ORDER_ID
			)  C ON B.ORDER_ID = C.ORDER_ID AND B.ARTICLE_CODE = C.ARTICLE_CODE AND B.PARA1_CODE = C.PARA1_CODE AND B.PARA2_CODE = C.PARA2_CODE
			JOIN ARTICLE D ON D.ARTICLE_CODE = B.ARTICLE_CODE
			JOIN SECTIOND E ON E.SUB_SECTION_CODE = D.SUB_SECTION_CODE
			JOIN SECTIONM F ON F.SECTION_CODE = E.SECTION_CODE
			JOIN PARA1 G ON G.PARA1_CODE = B.PARA1_CODE
			JOIN PARA2 H ON H.PARA2_CODE = B.PARA2_CODE
			JOIN PARA3 I ON I.PARA3_CODE = D.PARA3_CODE
			JOIN PARA4 J ON J.PARA4_CODE = D.PARA4_CODE
			JOIN PARA5 K ON K.PARA5_CODE = D.PARA5_CODE
			JOIN PARA6 L ON L.PARA6_CODE = D.PARA6_CODE
			JOIN UOM U (NOLOCK) ON U.UOM_CODE = D.UOM_CODE  
			LEFT OUTER JOIN #PICLIST X ON X.ARTICLE_CODE = B.ARTICLE_CODE AND  X.PARA1_CODE = B.PARA1_CODE AND X.PARA2_CODE = B.PARA2_CODE	
			WHERE A.MEMO_TYPE = 2 AND
			A.CANCELLED = 0 AND A.AC_CODE = '''+@CWHERE+''' AND '
			+(CASE WHEN @NMODE = 1 THEN 'B.QUANTITY  > ISNULL(C.PICK_LIST_QTY,0)' ELSE '1=1'END)

		  PRINT @CCMD
		 IF (@NMODE = 1)
	      BEGIN 
			 SET @CCMD1 = @CCMD
		  END
		  ELSE 
		  BEGIN
				
				SET @CCMD1 = N' SELECT P.CHK,P.ADD_QTY, P.ARTICLE_NAME, P.ORDER_ID, P.PARA1_CODE, P.PARA2_CODE, P.QUANTITY, P.ROW_ID, P.LAST_UPDATE, P.WS_PRICE, P.RFNET, P.ARTICLE_CODE, P.GROSS_WSP, P.DISCOUNT_PERCENTAGE, 
								P.DISCOUNT_AMOUNT, P.REMARKS, P.MANUAL_DISCOUNT, P.SUB_SECTION_NAME, P.SECTION_NAME, P.ARTICLE_NO, P.PARA1_NAME, P.PARA2_NAME, P.PARA3_NAME, P.PARA4_NAME, P.PARA5_NAME, P.PARA6_NAME,
								PARA1_ORDER, P.PARA2_ORDER, P.AMOUNT, P.UOM_CODE, P.UOM_NAME, P.UOM_TYPE, P.DT_CREATED, P.CODING_SCHEME, P.PARA1_SET, P.PARA2_SET, P.ARTICLE_ALIAS, P.PICK_LIST_QTY, P.XN_STOCK, P.ORDER_NO, P.RECEIVE_QUANTITY,
								( CASE WHEN 
								  Q.ARTICLE_CODE IS NULL 
								  AND Q.PARA1_CODE IS NULL 
								  AND Q.PARA2_CODE IS NULL 
								  AND Q.ORDER_ID IS NULL 
								  THEN P.QUANTITY-P.RECEIVE_QUANTITY ELSE (P.QUANTITY-ISNULL(Q.PICK_LIST_QTY,0)) END) AS PENDING_QUANTITY,(P.QUANTITY-ISNULL(Q.PICK_LIST_QTY,0))+ P.RECEIVE_QUANTITY AS PENDING_QUANTITY1
								FROM ( '+@CCMD+' ) P LEFT OUTER JOIN 
							(	SELECT ARTICLE_CODE,PARA1_CODE,PARA2_CODE,SUM(A.PICK_LIST_QTY) AS PICK_LIST_QTY,A.ORDER_ID FROM WSL_PICKLIST_DET A 
								JOIN WSL_PICKLIST_MST B ON A.PICK_LIST_ID = B.PICK_LIST_ID
								WHERE B.CANCELLED=0 AND B.AC_CODE='''+@CWHERE+''' 
								AND B.PICK_LIST_ID <> '''+@CMEMOID+'''  
								GROUP BY ARTICLE_CODE,PARA1_CODE,PARA2_CODE,ORDER_ID
							) Q ON P.ARTICLE_CODE = Q.ARTICLE_CODE AND P.PARA1_CODE = Q.PARA1_CODE AND P.PARA2_CODE = Q.PARA2_CODE AND P.ORDER_ID = Q.ORDER_ID AND P.CHK=0
							WHERE ((Q.ARTICLE_CODE IS NULL AND Q.PARA1_CODE IS NULL AND Q.PARA2_CODE IS NULL AND Q.ORDER_ID IS NULL) OR (P.QUANTITY > Q.PICK_LIST_QTY))'
		  END	
		  PRINT @CCMD1
		  EXEC SP_EXECUTESQL @CCMD1
		
GOTO LAST   


LBLCUSTOMER:    
  
  SELECT @cHEAD_CODE  = DBO.FN_ACT_TRAVTREE ('0000000018') ----ADD VARIABLE BY GAURI ON 17/4/2019
  SELECT @cHEAD_CODE1 = DBO.FN_ACT_TRAVTREE ('0000000001') ----ADD VARIABLE BY GAURI ON 17/4/2019
    
 SELECT  A.AC_CODE,A.HEAD_CODE,  A.AC_NAME, ISNULL(A.CREDIT_DAYS, 0) AS CREDIT_DAYS,    
    ISNULL(A.DISCOUNT_PERCENTAGE, 0) AS DISCOUNT_PERCENTAGE, A.CITY, A.ADDRESS0 + ' ' +    
    A.ADDRESS1 + ' ' + A.ADDRESS2 + ' ' + A.AREA_NAME + ' ' + A.CITY + ' ' +    
    A.STATE + ' ' + A.MOBILE + ' ' AS SUPP_ADDRESS, AC_NAME AS REPCOLNAME,DEFAULT_RATE_TYPE,
    DISCOUNT_PERCENTAGE    
    FROM LMV01106 A (NOLOCK)           
    WHERE ( CHARINDEX ( HEAD_CODE, @cHEAD_CODE)>0		----REPLACE VARIABLE FROM FUNCTION BY GAURI ON 17/4/2019
		   OR	CHARINDEX ( HEAD_CODE, @cHEAD_CODE1)>0	----REPLACE VARIABLE FROM FUNCTION BY GAURI ON 17/4/2019
    OR ALLOW_CREDITOR_DEBTOR = 1 )           
    AND INACTIVE = 0 AND A.AC_CODE <> '0000000000' AND (A.HEAD_CODE = '0000000018' OR A.HEAD_CODE = '0000000001') 
    AND ISNULL(A.AC_NAME,'')<>'' 
    
GOTO LAST    
LAST:      
END