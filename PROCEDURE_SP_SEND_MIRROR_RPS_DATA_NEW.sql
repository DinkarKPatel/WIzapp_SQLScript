create PROCEDURE SP_SEND_MIRROR_RPS_DATA_NEW  
(   
  @CUPLOADEDXNID VARCHAR(50)  
 ,@CCURLOCID VARCHAR(5)  
 ,@BDONOTCHKPENDINGCUST BIT=0
 ,@BACKNOWLEDGE BIT =0     
 ,@CERRMSG VARCHAR(1000) OUTPUT  
 
)   
--WITH ENCRYPTION  
AS  
/*  
 SP_SEND_MIRROR_RPS_DATA_NEW_208_05_02_14 : THIS PROCEDURE WILL SEND APPROVAL RETURN DATA FROM LOCATION TO HO.  
*/  
BEGIN  
 DECLARE @CSPID VARCHAR(10),@CMEMOID VARCHAR(50),@CSTEP VARCHAR(5)  
   
   
BEGIN TRY    
 ---- CALL ACKNOWLEDGEMENT OF MEMO SUCCESSFUL MERGING AT MIRRORING SERVER  
 DECLARE @CTEMPDBNAME1 VARCHAR(40),@CTEMPDBNAME VARCHAR(40),@BPENDINGMSTFOUND BIT  
   
 IF @BDONOTCHKPENDINGCUST=1
		PRINT 'DO NOT CHECK CUST'
	ELSE
		PRINT 'CHECK CUST'	
		
    --CHANGE BY BAIJNATH  
 SET @CMEMOID=@CUPLOADEDXNID  
 ---- IF NO MEMO FOUND , JUST END THE PROCESS  
 IF ISNULL(@CMEMOID,'')=''  
  GOTO END_PROC  
  
  
  DECLARE @CPRINTTEXT VARCHAR(100)
	
	SET @CPRINTTEXT='CHECK MST BEFORE SENDING SLS :'+(CASE WHEN @BDONOTCHKPENDINGCUST=1 THEN 'DO NOT CHECK CUST' ELSE 'CHECK CUST' END)
	
	PRINT @CPRINTTEXT
	
	SET @BPENDINGMSTFOUND=0
	
	IF @BDONOTCHKPENDINGCUST=0
		EXEC SP_SEND_MIRROR_XNSMST_DATA_NEW 'RPS',@CMEMOID,@CCURLOCID,@BDONOTCHKPENDINGCUST
		,@BPENDINGMSTFOUND OUTPUT
		,@CERRMSG OUTPUT
	
	PRINT (CASE WHEN @BPENDINGMSTFOUND=1 THEN 'PMST-Y' ELSE 'PMST-N' END)
	
	IF ISNULL(@BPENDINGMSTFOUND,0)=1
	BEGIN
		PRINT 'PENDING MASTER FOUND'
		GOTO END_PROC
	END
  
  
LBLTABLEINFO:  
  
 SET @CSTEP=50   
 ---- SEND THE RPS MEMO MASTER TABLE  
 SELECT DISTINCT 'RPS_RPS_MST_MIRROR'  AS TARGET_TABLENAME,A.* ,@CMEMOID AS XN_ID FROM RPS_MST A WHERE A.CM_ID=@CMEMOID  
   
 SET @CSTEP=55  
 ---- SEND THE RPS_DET RELATED TO RPS TABLE  
 SELECT DISTINCT 'RPS_RPS_DET_MIRROR' AS TARGET_TABLENAME, A.* FROM RPS_DET A WHERE A.CM_ID=@CMEMOID
 
  SET @CSTEP=56  
 ---- SEND THE RPS_DET RELATED TO RPS TABLE  
 SELECT DISTINCT 'RPS_PMT01106_MIRROR' AS TARGET_TABLENAME, @CMEMOID AS rps_MEMO_ID,A.DEPT_ID,A.product_code,A.BIN_ID,A.quantity_in_stock FROM PMT01106 A (NOLOCK)
 JOIN RPS_DET B (NOLOCK) ON B.PRODUCT_CODE=A.product_code
 WHERE B.CM_ID=@CMEMOID    
   
END TRY  
BEGIN CATCH  
 SET @CERRMSG='P: SP_SEND_MIRROR_RPS_DATA_NEW, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()  
 GOTO END_PROC  
END CATCH     
END_PROC:  
   
END  
---END OF PROCEDURE - SP_SEND_MIRROR_RPS_DATA_NEW  