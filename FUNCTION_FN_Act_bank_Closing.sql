CREATE FUNCTION FN_ACT_BANK_CLOSING ( @CACCODE VARCHAR(20), @CDEPTID VARCHAR(5), @DCLOSINGDT DATETIME, @CFINYEAR VARCHAR(10), @CCOMPANYCODE VARCHAR(2) )
RETURNS NUMERIC(14,2)
--WITH ENCRYPTION
AS 
BEGIN
	DECLARE @NOPENING NUMERIC(14,2), 
			@NCLOSING NUMERIC(14,2)
			

	SET @NOPENING = 0
	SET @NCLOSING = 0

	-- TEMP TABLE TO STORED THE LIST OF LOCATIONS CURRENTLY SELECTED
	-- JOIN THIS TABLE IN EACH QUERY TO GET THE RESULT FOR SINGLE, MULTIPLE OR ALL LOCATIONS
	DECLARE @LOCLISTC TABLE ( DEPT_ID VARCHAR(5) )
	
	IF @CDEPTID <> ''
		INSERT @LOCLISTC VALUES ( @CDEPTID )
	ELSE
	BEGIN
		IF EXISTS ( SELECT TOP 1 DEPT_ID FROM ACT_FILTER_LOC WHERE SP_ID = @@SPID AND dept_id<>'')
			INSERT @LOCLISTC
			SELECT DEPT_ID FROM ACT_FILTER_LOC WHERE SP_ID = @@SPID AND dept_id<>''
		ELSE
			INSERT @LOCLISTC
			SELECT DEPT_ID FROM LOCATION WHERE LOC_TYPE=1 AND INACTIVE=0 AND DEPT_ID=MAJOR_DEPT_ID
	END


	-- GETTING OPENING BALANCE FROM FIRST ENTRY OF LOCOB
	IF EXISTS(SELECT * FROM BANK_OP_BALANCE WHERE BANK_AC_CODE =@CACCODE)
	BEGIN
		SELECT @NOPENING = CASE WHEN OP_BALANCE_TYPE ='DR' THEN 1 ELSE -1 END * OP_BALANCE 
		FROM BANK_OP_BALANCE WHERE BANK_AC_CODE =@CACCODE
	END 
	ELSE
	BEGIN
			IF @CDEPTID <> ''
			BEGIN
				SELECT @CFINYEAR = DBO.FN_GETMINFINYEARLOCOB(@CDEPTID, @CACCODE)
				IF @CFINYEAR IS NULL
					GOTO NEXT_PROC

				SELECT @NOPENING = SUM(CASE WHEN OPENING_BALANCE_CR_DR='CR' THEN -1 ELSE 1 END * OPENING_BALANCE)
					FROM LOCOB WHERE AC_CODE = @CACCODE 
					AND DEPT_ID = @CDEPTID
					AND FIN_YEAR = @CFINYEAR
			END
			ELSE
			BEGIN	
				SELECT @NOPENING = SUM(CASE WHEN OPENING_BALANCE_CR_DR='CR' THEN -1 ELSE 1 END * OPENING_BALANCE)
				FROM LOCOB 
				JOIN 
				(
					SELECT LOC.DEPT_ID, DBO.FN_GETMINFINYEARLOCOB(LOC.DEPT_ID, @CACCODE) AS FIN_YEAR 
					FROM LOCATION LOC 
					JOIN @LOCLISTC LOCLIST ON LOC.DEPT_ID = LOCLIST.DEPT_ID
					WHERE LOC.LOC_TYPE = 1
					AND LOC.INACTIVE = 0
					AND LOC.DEPT_ID = LOC.MAJOR_DEPT_ID
					AND DBO.FN_GETMINFINYEARLOCOB(LOC.DEPT_ID, @CACCODE) IS NOT NULL
				) FIRST_FIN_YEAR
				ON LOCOB.DEPT_ID = FIRST_FIN_YEAR.DEPT_ID AND LOCOB.FIN_YEAR = FIRST_FIN_YEAR.FIN_YEAR
				WHERE AC_CODE = @CACCODE 
			END
END 
NEXT_PROC:

		SET @NCLOSING = ISNULL( @NOPENING, 0 )

		IF @DCLOSINGDT <> ''
		BEGIN
			
			--RETURN @NCLOSING
			SELECT @NCLOSING = @NCLOSING + ISNULL((SUM(  DEBIT_AMOUNT ) -
			SUM( CREDIT_AMOUNT ))  ,0)
			FROM VD01106 VA 
			JOIN VM01106 VB ON VA.VM_ID=VB.VM_ID 
			JOIN @LOCLISTC LOCLIST ON VB.DEPT_ID = LOCLIST.DEPT_ID
			WHERE(VB.CANCELLED = 0 AND ISNULL(VB.OP_ENTRY, 0) = 0  AND ISNULL(VB.MEMO,0)=0 )
			AND VA.RECON_DT<=@DCLOSINGDT
			AND VA.AC_CODE=@CACCODE AND  VA.RECON_DT<>'' 
			-- AND VB.DEPT_ID = ( CASE WHEN @CDEPTID <> '' THEN @CDEPTID ELSE VB.DEPT_ID END )
			GROUP BY VA.AC_CODE 
	
-- GETTING OPENING AMOUNT OF OPENING CHEQUES
	SELECT  @NCLOSING =  ISNULL(@NCLOSING,0) + 
	ISNULL(CASE WHEN CHQ_AMT_TYPE ='DR' THEN 1 ELSE -1 END * CHQ_AMT  ,0) 
	FROM BANK_OP_CHQ  
	JOIN LM01106 B ON BANK_OP_CHQ.BANK_AC_CODE = B.AC_CODE 
	WHERE BANK_AC_CODE = @CACCODE AND RECON_DT <> '' AND RECON_DT <=@DCLOSINGDT
	
	
	END

END_PROC:
	RETURN ISNULL(@NCLOSING,0)
END
