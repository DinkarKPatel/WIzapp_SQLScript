CREATE PROCEDURE [DBO].[SAVETRAN_PARA6]   
(  
 @PARA6_CODE    VARCHAR(9) = '',  
 @PARA6_NAME    VARCHAR(300)='',  
 @ALIAS       VARCHAR(50) = '',  
 @INACTIVE      BIT = 0,       
 @REMARKS      VARCHAR(500) = '',  
 @ERRMSG_OUT    VARCHAR(MAX) OUT ,
 @BDELETE BIT=0
)  
AS  
BEGIN  
 DECLARE @CSTEP INT ,@CERRMSG VARCHAR(1000) 
 DECLARE @TEMP_PARA6_CODE VARCHAR(9) = ''  
   
 BEGIN TRY  
  SET @ERRMSG_OUT = '' 
  SET @CERRMSG='' 
  SET @CSTEP=''
  
  IF @BDELETE=1
	BEGIN
		 IF @PARA6_CODE='0000000'
	   BEGIN
		   SET @CERRMSG='DEFAULT PARA6 CAN NOT BE DELETED'
		   GOTO END_PROC
	   END
	   DELETE FROM PARA6 WHERE PARA6_CODE =@PARA6_CODE
	   GOTO END_PROC
	END	
    
  IF (RTRIM(LTRIM(@PARA6_CODE)) = '')  
  BEGIN  
   IF EXISTS(SELECT [PARA6_NAME] FROM [PARA6] WHERE [PARA6_NAME] = @PARA6_NAME)  
   BEGIN  
    SET @CSTEP=5  
    SET @ERRMSG_OUT = 'PARA6 NAME: '+@PARA6_NAME + ' ALREADY EXIST.'  
    PRINT @ERRMSG_OUT  
    SET @CERRMSG=@ERRMSG_OUT
   END  
   ELSE  
   BEGIN  
    SET @CSTEP=10  
    EXEC DBO.GETNEXTKEY 'PARA6', 'PARA6_CODE', 7, '00', 1, '', 2, @TEMP_PARA6_CODE OUTPUT   
      
    PRINT 'PARA6 CODE: ' + @TEMP_PARA6_CODE  
      
    SET @CSTEP=15  
    INSERT PARA6 (PARA6_CODE, PARA6_NAME, LAST_UPDATE, ALIAS, INACTIVE, REMARKS, LAST_MODIFIED_ON)  
    VALUES (@TEMP_PARA6_CODE, @PARA6_NAME, GETDATE(), @ALIAS, @INACTIVE, @REMARKS, GETDATE())  
      
    SET @ERRMSG_OUT = 'PARA6: '+ @PARA6_NAME +' CREATED SUCCESSFULLY.'  
    PRINT @ERRMSG_OUT  
   END  
  END  
  ELSE  
  BEGIN  
   SET @TEMP_PARA6_CODE = @PARA6_CODE  
   IF NOT EXISTS(SELECT [PARA6_CODE] FROM [PARA6] WHERE [PARA6_CODE] = @PARA6_CODE)  
   BEGIN  
    IF EXISTS(SELECT [PARA6_NAME] FROM [PARA6] WHERE [PARA6_NAME] = @PARA6_NAME)  
    BEGIN  
     SET @CSTEP=20  
     SET @ERRMSG_OUT = 'PARA6 NAME: '+@PARA6_NAME + ' ALREADY EXIST.'  
     PRINT @ERRMSG_OUT  
     SET @CERRMSG=@ERRMSG_OUT
    END  
    ELSE  
    BEGIN  
     SET @CSTEP=25  
     EXEC DBO.GETNEXTKEY 'PARA6', 'PARA6_CODE', 7, '00', 1, '', 2, @TEMP_PARA6_CODE OUTPUT   
       
     PRINT 'PARA6 CODE: ' + @TEMP_PARA6_CODE  
       
     SET @CSTEP=30  
     INSERT PARA6 (PARA6_CODE, PARA6_NAME, LAST_UPDATE, ALIAS, INACTIVE, REMARKS, LAST_MODIFIED_ON)  
     VALUES (@TEMP_PARA6_CODE, @PARA6_NAME, GETDATE(), @ALIAS, @INACTIVE, @REMARKS, GETDATE())  
       
     SET @ERRMSG_OUT = 'PARA6: '+ @PARA6_NAME +' CREATED SUCCESSFULLY.'  
     PRINT @ERRMSG_OUT  
    END  
   END  
   ELSE  
   BEGIN  
    SET @CSTEP=35  
    PRINT 'PARA6 CODE: ' + @TEMP_PARA6_CODE  
    
    IF EXISTS(SELECT [PARA6_NAME] FROM [PARA6] WHERE [PARA6_NAME] = @PARA6_NAME AND PARA6_CODE <> @TEMP_PARA6_CODE)
	BEGIN
		SET @CSTEP=20
		SET @ERRMSG_OUT = 'PARA6 NAME: '+@PARA6_NAME + ' ALREADY EXIST.'
		PRINT @ERRMSG_OUT
		SET @CERRMSG=@ERRMSG_OUT
	END
	ELSE
	BEGIN			  
    UPDATE [PARA6]  
    SET [PARA6_NAME] = @PARA6_NAME,   
      LAST_UPDATE = GETDATE(),   
      ALIAS = @ALIAS,   
      INACTIVE = @INACTIVE,   
      REMARKS = @REMARKS,   
      LAST_MODIFIED_ON = GETDATE()  
    WHERE PARA6_CODE = @TEMP_PARA6_CODE  
      
    SET @ERRMSG_OUT = 'PARA6: '+ @PARA6_NAME +' UPDTED SUCCESSFULLY.'  
    PRINT @ERRMSG_OUT 
   END 
   END  
  END  
 END TRY    
 BEGIN CATCH    
  SET @ERRMSG_OUT='ERROR: [P]: SAVETRAN_PARA6, [STEP]: '+CAST(@CSTEP AS VARCHAR(5))+', [MESSAGE]: ' + ERROR_MESSAGE()  
  PRINT @ERRMSG_OUT  
  SET @CERRMSG=@ERRMSG_OUT  
  GOTO END_PROC    
 END CATCH     
  
END_PROC:    
   SELECT @CERRMSG AS ERRMSG
   
   
END
