

-- LOOK UP TABLE FOR ALL TRANSACTION MODULES
CREATE PROCEDURE SP_WL_LOOKUP  
(  
 @NMODE INT,  
 @CXNTYPE VARCHAR(10),  
 @CFINYEAR VARCHAR(10),  
 @CWIZAPPUSERCODE VARCHAR(10),  
 @CREFMEMOID VARCHAR(40)='',  
 @CREFMEMODT DATETIME=''  
) 
--WITH ENCRYPTION 
AS  
BEGIN  
 -- @NMODE :  1 - TOP RECORD  
 --    2 - NEXT RECORD (@CREFMEMOID AND @CREFMEMODT IS MANDATORY)  
 --    3 - PREVIOUS RECORD (@CREFMEMOID AND @CREFMEMODT IS MANDATORY)  
 --    4 - LAST RECORD  
 --    5 - CURRENT RECORD  
  
 DECLARE @CCMD NVARCHAR(MAX),  
   @CREFMEMOSTR NVARCHAR(MAX),  
   @CTABLENAME VARCHAR(20),  
   @CCOLXNID VARCHAR(20),  
   @CCOLXNNO VARCHAR(20),  
   @CCOLXNDT VARCHAR(20),  
   @CDFMXNTYPE VARCHAR(10),  
   @CDFMDATE DATETIME,  
   @CDFMSTR NVARCHAR(50),  
   @CFROMTOPORDER VARCHAR(5),  
   @CWHERECLAUSE NVARCHAR(MAX)  
   
 DECLARE @OUTPUTC TABLE ( XN_ID VARCHAR(40), XN_NO VARCHAR(20), XN_DT DATETIME )  
    
 SET @CCMD = N''  
 SET @CREFMEMOSTR = N''  
 SET @CDFMSTR = N''  
 SET @CWHERECLAUSE = N''  
  
 SET @CFROMTOPORDER = (CASE WHEN @NMODE IN (1,2) THEN ' ASC ' ELSE ' DESC ' END )  
  
    
 IF @CXNTYPE = 'SLS'  
 BEGIN  
  SET @CTABLENAME = 'CMM01106'  
  SET @CCOLXNID = 'CM_ID'  
  SET @CCOLXNNO = 'CM_NO'  
  SET @CCOLXNDT = 'CM_DT'  
  SET @CDFMXNTYPE = 'SLS'   -- MODULE TYPE OF DATAFREEZING - SLS : RETAIL SALES  
 END  
  
 IF @CXNTYPE = 'PUR'  
 BEGIN  
  SET @CTABLENAME = 'PIM01106'  
  SET @CCOLXNID = 'MRR_ID'  
  SET @CCOLXNNO = 'MRR_NO'  
  SET @CCOLXNDT = 'RECEIPT_DT'  
  SET @CDFMXNTYPE = 'PUR'   -- MODULE TYPE OF DATAFREEZING - PUR : PURCHASE  
 END  
  
 IF @CXNTYPE = 'PRT'  
 BEGIN  
  SET @CTABLENAME = 'RMM01106'  
  SET @CCOLXNID = 'RM_ID'  
  SET @CCOLXNNO = 'RM_NO'  
  SET @CCOLXNDT = 'RM_DT'  
  SET @CDFMXNTYPE = 'PRT'   -- MODULE TYPE OF DATAFREEZING - PUR : PURCHASE  
 END  
  
 IF @CXNTYPE = 'CNC'  
 BEGIN  
  SET @CTABLENAME = 'ICM01106'  
  SET @CCOLXNID = 'CNC_MEMO_ID'  
  SET @CCOLXNNO = 'CNC_MEMO_NO'  
  SET @CCOLXNDT = 'CNC_MEMO_DT'  
  SET @CDFMXNTYPE = 'CNC'   -- MODULE TYPE OF DATAFREEZING - CNC : CANCELLATION  
 END  
  
 IF @CXNTYPE = 'CHO'  
 BEGIN  
  SET @CTABLENAME = 'COM01106'  
  SET @CCOLXNID = 'CHALLAN_ID'  
  SET @CCOLXNNO = 'CHALLAN_NO'  
  SET @CCOLXNDT = 'CHALLAN_DT'  
  SET @CDFMXNTYPE = 'CHO'   -- MODULE TYPE OF DATAFREEZING - CHO : CHALLANOUT  
 END  
  
 IF @CXNTYPE = 'CHI'  
 BEGIN  
  SET @CTABLENAME = 'CIM01106'  
  SET @CCOLXNID = 'CHALLAN_ID'  
  SET @CCOLXNNO = 'CHALLAN_NO'  
  SET @CCOLXNDT = 'CHALLAN_DT'  
  SET @CDFMXNTYPE = 'CHO'   -- MODULE TYPE OF DATAFREEZING - CHO : CHALLANOUT  
 END  
  
 IF @CXNTYPE = 'IRR'  
 BEGIN  
  SET @CTABLENAME = 'IRM01106'  
  SET @CCOLXNID = 'IRM_MEMO_ID'  
  SET @CCOLXNNO = 'IRM_MEMO_NO'  
  SET @CCOLXNDT = 'IRM_MEMO_DT'  
  SET @CDFMXNTYPE = 'IRR'   -- MODULE TYPE OF DATAFREEZING - CHO : CHALLANOUT  
 END  
 IF @CXNTYPE = 'ARC'  
 BEGIN  
  SET @CTABLENAME = 'ARC01106'  
  SET @CCOLXNID = 'ADV_REC_ID'  
  SET @CCOLXNNO = 'ADV_REC_NO'  
  SET @CCOLXNDT = 'ADV_REC_DT'  
  SET @CDFMXNTYPE = 'ARC'   -- MODULE TYPE OF DATAFREEZING - CHO : CHALLANOUT  
 END  
 -- GETTING FREEZING DATE FOR THE CURRENT USER FOR GIVEN MODULE  
 SELECT @CDFMDATE = A.FREEZING_DATE   
 FROM DFMSETUP A  
 JOIN USERS B ON A.USER_CODE = B.USER_CODE  
 WHERE B.VIEW_DATA_AFTER_DFM = 0  
 AND A.MODULE_NAME = @CDFMXNTYPE  
 AND A.USER_CODE = @CWIZAPPUSERCODE  
 AND A.FREEZING_DATE <> ''  
  
 IF @CDFMDATE IS NOT NULL  
  SET @CDFMSTR = N' AND A.' + @CCOLXNDT + ' > ''' + CONVERT(VARCHAR, @CDFMDATE,101) + ''''  
   
 IF (@NMODE IN (2,3)) AND (@CREFMEMOID<>'' AND @CREFMEMODT<>'')  
 BEGIN  
  IF @NMODE = 2  
   SET @CREFMEMOSTR = N' AND A.' + @CCOLXNID + ' > ''' + @CREFMEMOID +   
        ''' AND A.' + @CCOLXNDT + ' >= ''' + CONVERT(VARCHAR, @CREFMEMODT) + ''''  
  ELSE   
   SET @CREFMEMOSTR = N' AND A.' + @CCOLXNID + ' < ''' + @CREFMEMOID +   
        ''' AND A.' + @CCOLXNDT + ' <= ''' + CONVERT(VARCHAR, @CREFMEMODT) + ''''  
 END  
 IF (@NMODE =0) AND (@CREFMEMOID<>'' AND @CREFMEMODT<>'')  
 BEGIN  
  --IF @NMODE = 2  
   SET @CREFMEMOSTR = N' AND A.' + @CCOLXNID + ' = ''' + @CREFMEMOID +   
        ''' AND A.' + @CCOLXNDT + ' = ''' + CONVERT(VARCHAR, @CREFMEMODT) + ''''  
  --ELSE   
  -- SET @CREFMEMOSTR = N' AND A.' + @CCOLXNID + ' < ''' + @CREFMEMOID +   
  --      ''' AND A.' + @CCOLXNDT + ' <= ''' + CONVERT(VARCHAR, @CREFMEMODT) + ''''  
 END  
 SET @CCMD = N'  
    SELECT X.' + @CCOLXNID + ', X.' + @CCOLXNNO + ', X.' + @CCOLXNDT + '  
    FROM  
    (  
     SELECT TOP 1 A.' + @CCOLXNID +', A.' + @CCOLXNNO + ', A.' + @CCOLXNDT + '  
     FROM ' + @CTABLENAME +' A   
     WHERE A.FIN_YEAR = ''' + @CFINYEAR + '''' +   
     @CREFMEMOSTR +   
     @CDFMSTR +  
     @CWHERECLAUSE +  
     N' ORDER BY A.' + @CCOLXNDT + @CFROMTOPORDER + ', A.' + @CCOLXNNO + @CFROMTOPORDER + '  
    ) X  
    ORDER BY X.' + @CCOLXNDT +', X.' + @CCOLXNNO + ''  
  
 PRINT @CCMD  
 INSERT @OUTPUTC  
 EXEC SP_EXECUTESQL @CCMD  
   
 IF NOT EXISTS ( SELECT XN_ID FROM @OUTPUTC )  
 BEGIN  
  IF (@NMODE IN (2,3)) AND (@CREFMEMOID<>'' AND @CREFMEMODT<>'')  
  BEGIN  
   IF @NMODE = 2  
    SET @CREFMEMOSTR = N' AND A.' + @CCOLXNID + ' <> ''' + @CREFMEMOID +   
         ''' AND A.' + @CCOLXNDT + ' > ''' + CONVERT(VARCHAR, @CREFMEMODT) + ''''  
   ELSE   
    SET @CREFMEMOSTR = N' AND A.' + @CCOLXNID + ' <> ''' + @CREFMEMOID +   
         ''' AND A.' + @CCOLXNDT + ' < ''' + CONVERT(VARCHAR, @CREFMEMODT) + ''''  
  END  
  IF (@NMODE =0) AND (@CREFMEMOID<>'' AND @CREFMEMODT<>'')  
  BEGIN  
   SET @CREFMEMOSTR = N' AND A.' + @CCOLXNID + ' = ''' + @CREFMEMOID +   
         ''' AND A.' + @CCOLXNDT + ' = ''' + CONVERT(VARCHAR, @CREFMEMODT) + ''''  
  END  
  SET @CCMD = N'  
     SELECT X.' + @CCOLXNID + ', X.' + @CCOLXNNO + ', X.' + @CCOLXNDT + '  
     FROM  
     (  
      SELECT TOP 1 A.' + @CCOLXNID +', A.' + @CCOLXNNO + ', A.' + @CCOLXNDT + '  
      FROM ' + @CTABLENAME +' A   
      WHERE A.FIN_YEAR = ''' + @CFINYEAR + '''' +   
      @CREFMEMOSTR +   
      @CDFMSTR +  
      @CWHERECLAUSE +  
      N' ORDER BY A.' + @CCOLXNDT + @CFROMTOPORDER + ', A.' + @CCOLXNNO + @CFROMTOPORDER + '  
     ) X  
     ORDER BY X.' + @CCOLXNDT +', X.' + @CCOLXNNO + ''  
    
  PRINT @CCMD  
  INSERT @OUTPUTC  
  EXEC SP_EXECUTESQL @CCMD  
 END  
  
END_PROC:  
 SELECT * FROM @OUTPUTC  
END  
