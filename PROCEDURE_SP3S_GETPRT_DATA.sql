create PROCEDURE SP3S_GETPRT_DATA    
(      
    @CACCODE      VARCHAR(10)=''     
   ,@XN_ITEM_TYPE NUMERIC(1,0)=1    
   ,@ninv_mode int=0    
   ,@CSP_ID varchar(40)=''    
   ,@BESTIMATEMODE numeric(1,0)=1    
   ,@DRM_DT DATETIME=''    
   ,@CDEPTID VARCHAR(5)='',    
   @CTARGET_DEPT_ID VARCHAR(5)='',    
   @CUSERCODE VARCHAR(10)='',    
   @MEMO_TYPE numeric(5,0)=1,    
   @bmultipledn bit=0,  
   @NAGAINSTPACKSLIP NUMERIC(1,0)=0,  
   @nBilllevelTaxMethodPara NUMERIC(1,0)=1,  
   @nBillChallanMode NUMERIC(1,0)=0,  
   @BPASTE BIT=0,  
   @BFINANCIALDN BIT=0,  
   @CSHIPPINGAc_CODE varchar(15)='',  
   @nshippintMode int=0,  
   @BAgainstProforma bit=0,
   @BALLOWNEGSTOCK bit=0  
  )      
AS       
BEGIN     
  
    
        
  DECLARE @DLASTPURCHASEDATE DATETIME,@CPURCHASEDAYS VARCHAR(5),@DFROMDATE DATETIME,@CSTEP VARCHAR(10),      
  @CSEARCHPRODUCTCODE VARCHAR(100),@CCURLOCID VARCHAR(5),@CSTATECODE CHAR(7),@CLOCSSTMEMOID VARCHAR(40),    
  @CTMPTABLE VARCHAR(40),@CERRORMSG VARCHAR(MAX),@BVATFOUND BIT,@CFORMID CHAR(7),@BLOCALDEBITNOTE BIT,    
  @NBILLLEVELTAXMETHOD INT,@CMRRID VARCHAR(40),@CCMD NVARCHAR(MAX),@NBILL_CHALLAN_MODE INT,    
  @cDbName VARCHAR(max),@cpREVDbName VARCHAR(200),@cDnPc varchar(50),@NMRPWS INT,  
  @cBarCodeSeparator VARCHAR(5)  
      
    
BEGIN TRY    
    
   if @CACCODE='0000000000'  
      set @bmultipledn=1  
    
  if isnull(@BESTIMATEMODE,0)=0    
 set @BESTIMATEMODE=1    
    
  SET @CSTEP=10      
  SET @BLOCALDEBITNOTE=0    
      
  set @cDbName=''    
  set @cpREVDbName=''    
            
    
    
  DECLARE @CLOC_ID VARCHAR(5),@CDONOTCHECKSTOCK VARCHAR(10)    
  IF ISNULL(@CDEPTID,'')=''     
     SELECT TOP 1 @CLOC_ID=VALUE FROM CONFIG (NOLOCK) WHERE  CONFIG_OPTION='LOCATION_ID'    
  ELSE    
     SELECT @CLOC_ID= @CDEPTID    
  
 SELECT TOP 1 @cBarCodeSeparator = value from config (NOLOCK) WHERE config_option='barcode_separator'  
  
 IF ISNULL(@cBarCodeSeparator,'')<>''  
 BEGIN  
  IF EXISTS (SELECT TOP 1 product_code FROM PRT_ITEM_DETAILS (NOLOCK) WHERE SP_ID=@CSP_ID   
   AND CHARINDEX(@cBarCodeSeparator,product_code)>0)  
   UPDATE PRT_ITEM_DETAILS WITH (ROWLOCK) SET product_code=SUBSTRING(product_code,1,CHARINDEX(@cBarCodeSeparator,product_code)-1)  
   WHERE SP_ID=@CSP_ID AND CHARINDEX(@cBarCodeSeparator,product_code)>0  
 END  
    
  SET @CSTEP=10.5      
  UPDATE A SET ERRMSG = 'Barcode Not Available IN sku Please Check'    
  FROM PRT_ITEM_DETAILS A  (nolock)   
  left JOIN SKU B (NOLOCK) ON a.PRODUCT_CODE=B.PRODUCT_CODE     
  WHERE A.SP_ID=@CSP_ID  
  AND B.product_code is null  
    
 IF EXISTS (SELECT TOP 1 'U' FROM PRT_ITEM_DETAILS WHERE ISNULL(ERRMSG,'')<>'' AND SP_ID=@cSP_ID)    
 BEGIN    
     GOTO END_PROC    
 END     
    
  SET @CSTEP=12     
  PRINT 'XN ITEM TYPE VALIDATION'    
  UPDATE A SET ERRMSG=  CASE WHEN  @XN_ITEM_TYPE=1 AND ITEM_TYPE=2 THEN 'CONSUMABLE ITEM NOT ALLOWED IN INVENTORY TRANSCTION'    
                      WHEN  @XN_ITEM_TYPE=1 AND ITEM_TYPE=3 THEN 'ASSESTS    ITEM NOT ALLOWED IN INVENTORY TRANSCTION'    
                      WHEN  @XN_ITEM_TYPE=1 AND ITEM_TYPE=4 THEN 'SERVICE    ITEM NOT ALLOWED IN INVENTORY TRANSCTION'    
                          
                      WHEN  @XN_ITEM_TYPE=2 AND ITEM_TYPE=1 THEN 'INVENTORY  ITEM NOT ALLOWED IN CONSUMBLE TRANSCTION'    
                      WHEN  @XN_ITEM_TYPE=2 AND ITEM_TYPE=3 THEN 'ASSESTS    ITEM NOT ALLOWED IN CONSUMBLE TRANSCTION'    
                      WHEN  @XN_ITEM_TYPE=2 AND ITEM_TYPE=4 THEN 'SERVICE    ITEM NOT ALLOWED IN CONSUMBLE TRANSCTION'    
                          
                      WHEN  @XN_ITEM_TYPE=3 AND ITEM_TYPE=1 THEN 'INVENTORY  ITEM NOT ALLOWED IN ASSESTS   TRANSCTION'    
                      WHEN  @XN_ITEM_TYPE=3 AND ITEM_TYPE=2 THEN 'CONSUMABLE ITEM NOT ALLOWED IN ASSESTS   TRANSCTION'    
                      WHEN  @XN_ITEM_TYPE=3 AND ITEM_TYPE=4 THEN 'SERVICE    ITEM NOT ALLOWED IN ASSESTS   TRANSCTION'    
                          
                          
                      WHEN  @XN_ITEM_TYPE=4 AND ITEM_TYPE=1 THEN 'INVENTORY  ITEM NOT ALLOWED IN SERVICE   TRANSCTION'    
                      WHEN  @XN_ITEM_TYPE=4 AND ITEM_TYPE=2 THEN 'CONSUMBLE  ITEM NOT ALLOWED IN SERVICE   TRANSCTION'    
                      WHEN  @XN_ITEM_TYPE=4 AND ITEM_TYPE=3 THEN 'ASSESTS    ITEM NOT ALLOWED IN SERVICE   TRANSCTION '      
       END    
 FROM PRT_ITEM_DETAILS  A (NOLOCK)    
 JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE     
 JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE =B.ARTICLE_CODE     
 JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE =ART.SUB_SECTION_CODE     
 JOIN SECTIONM SM (NOLOCK) ON SM.SECTION_CODE =SD.SECTION_CODE     
 WHERE CASE WHEN ISNULL(SM.ITEM_TYPE,0) IN(0,1) THEN 1 ELSE SM.ITEM_TYPE END  <>@XN_ITEM_TYPE    
 AND A.SP_ID=@cSP_ID    
  
   
  SET @CSTEP=15     
   UPDATE PRT_ITEM_DETAILS SET ROW_ID =CAST('LATER'+CAST(NEWID() AS VARCHAR(40)) AS VARCHAR(40))  
    WHERE SP_ID=@cSP_ID  AND isnull(row_id,'')=''  
    
 IF EXISTS (SELECT TOP 1 'U' FROM PRT_ITEM_DETAILS WHERE ISNULL(ERRMSG,'')<>'' AND SP_ID=@cSP_ID)    
 BEGIN    
     GOTO END_PROC    
 END    
  
 
    
  SET @CSTEP=20     
 PRINT '2BARCODE VALIDATE IN SKU'    
  DECLARE @CALLOWWSLINACTIVESTOCKNAARTICLES VARCHAR(2)    
  SELECT TOP 1 @CALLOWWSLINACTIVESTOCKNAARTICLES= VALUE FROM CONFIG (NOLOCK) WHERE     
  CONFIG_OPTION='ALLOW_WSL_INACTIVESTOCKNA_ARTICLES'    
    
   UPDATE A SET ERRMSG=case when @BESTIMATEMODE=1 then  'REGULAR DEBIT NOTE  CAN NOTE SCAN ESTMATE BARCODE PLEASE CHECK '     
        else 'ESTMATE DEBIT NOTE  CAN NOTE SCAN REGULAR BARCODE PLEASE CHECK '  end     
   FROM PRT_ITEM_DETAILS A (NOLOCK)    
   JOIN SKU (NOLOCK) ON A.PRODUCT_CODE =SKU.product_code     
   WHERE A.SP_ID=@cSP_ID and CASE WHEN SKU.ER_FLAG IN (0,1) THEN 1 ELSE 2 END<>@BESTIMATEMODE    
    
    
    
 IF EXISTS (SELECT TOP 1 'U' FROM PRT_ITEM_DETAILS WHERE ISNULL(ERRMSG,'')<>'' AND SP_ID=@cSP_ID)    
 BEGIN    
    GOTO END_PROC    
 END    
    
 
  
   
  
  SET @CSTEP=30     
  PRINT '4.EXPIRT DATE VALIDATE VALIDATE '    
  UPDATE A SET ERRMSG = 'THIS BATCH OF ITEM EXPIRED ON :'+CONVERT(VARCHAR,B.EXPIRY_DT ,105)+'....PLEASE CHECK'    
  FROM PRT_ITEM_DETAILS A  (nolock)   
  JOIN SKU B (NOLOCK) ON a.PRODUCT_CODE=B.PRODUCT_CODE     
  WHERE A.SP_ID=@CSP_ID AND B.EXPIRY_DT <@DRM_DT     
  AND B.EXPIRY_DT <>''    
    
 IF EXISTS (SELECT TOP 1 'U' FROM PRT_ITEM_DETAILS WHERE ISNULL(ERRMSG,'')<>'' AND SP_ID=@cSP_ID)    
 BEGIN    
     GOTO END_PROC    
 END    
    
  SET @CSTEP=35     
 
     
    
     
  SET @CSTEP=60     
  DECLARE @CHECK_SUPPLIER_DN VARCHAR(5)  
  SELECT  TOP 1 @CHECK_SUPPLIER_DN=VALUE FROM CONFIG WHERE CONFIG_OPTION ='CHECK_SUPPLIER_DN'  
  
    IF @NINV_MODE=2  
    SELECT  TOP 1 @CHECK_SUPPLIER_DN=VALUE FROM CONFIG WHERE CONFIG_OPTION ='GROUP_DN_CHECK_SUPPLIER'  
  
  SET @CHECK_SUPPLIER_DN=ISNULL(@CHECK_SUPPLIER_DN,'')  
  
  
    
    
  SELECT A.ROW_ID, PRODUCT_CODE ,CAST('' AS VARCHAR(100)) AS DbNAME,             MRR_ID =CAST('' AS VARCHAR(50)),BILL_CHALLAN_MODE=CAST(0 AS INT),    
   A.QUANTITY  ,ISNULL(A.PS_ID,'') AS PS_ID,isnull(A.BIN_ID,'') as BIN_ID,bm.BIN_NAME ,dn.PS_NO,dn.PS_DT,  
    CAST('' AS VARCHAR(50)) AS PID_ROW_ID,  
 CAST(0 AS NUMERIC(12,2)) AS MRP,  
    CAST('' AS VARCHAR(15)) AS AC_CODE,  
 CAST('' AS VARCHAR(15)) AS shipping_AC_CODE,  
 A.PRODUCT_CODE AS STOCK_PRODUCT_CODE,  
 CAST('' AS VARCHAR(50)) AS DNPF_ROW_ID   
   INTO #TMPPURDETAILS    
  FROM PRT_ITEM_DETAILS A    
  LEFT JOIN DNPS_MST DN (NOLOCK) ON A.PS_ID =DN.PS_ID   
  left join bin bm (nolock) on a.bin_id= bm.bin_id   
  WHERE SP_ID=@CSP_ID     
  
     
  
     
  
   SET @CSTEP=64  
  EXEC SP3S_CALPARTYDN_RATES  
 @CACCODE=@CACCODE  
 ,@NAGAINSTPACKSLIP=@NAGAINSTPACKSLIP  
 ,@nBillLevelTaxmethod=@nBillLevelTaxmethodPara  
 ,@nBillChallanMode=@nBillChallanMode  
 ,@ninv_mode=@ninv_mode  
 ,@CLOC_ID=@CLOC_ID  
 ,@CSP_ID=@CSP_ID  
 ,@cErrormsg=@cErrormsg OUTPUT  
 ,@BPASTE=@BPASTE  
 ,@DRM_DT =@DRM_DT   
 ,@bmultipledn =@bmultipledn  
 ,@CUSERCODE=@CUSERCODE  
 ,@CSHIPPINGAc_CODE =@CSHIPPINGAc_CODE  
 ,@nshippintMode =@nshippintMode  
 ,@BAgainstProforma=@BAgainstProforma
 ,@BALLOWNEGSTOCK=@BALLOWNEGSTOCK
   
 
  IF ISNULL(@cErrormsg,'')<>''  
  BEGIN  
    SET @CSTEP=70     
	 if not exists (select top 1 'u' from PRT_item_details  where sp_id =@CSP_ID  and isnull(errmsg,'')<>'')  
		update PRT_item_details with (rowlock) set errmsg=@CERRORMSG where sp_id =@CSP_ID   
	 GOTO END_PROC  
  END   
  
  if Exists (select top 1 'U' from PRT_item_details where sp_id =@CSP_ID  and ISNULL(stock_na,0)=1)
  Update  PRT_item_details set QUANTITY_IN_STOCK =999 where sp_id =@CSP_ID   and ISNULL(stock_na,0)=1
  


  UPDATE PRT_ITEM_DETAILS SET ER_FLAG =1 WHERE ISNULL(ER_FLAG,0)=0 AND SP_ID =@CSP_ID   
  
     SET @CSTEP=75     
   
SELECT A.PRODUCT_CODE into #tmpbarcodenotfound  FROM PRT_ITEM_DETAILS A    
 where isnull( a.ac_code,'')<>@CACCODE and isnull(@CHECK_SUPPLIER_DN,'')='1'  
 and isnull(@CACCODE,'') not in('','0000000000') and a.SP_ID =@CSP_ID  
  
   
 --OR (B.PRODUCT_CODE LIKE ''+@CPRODUCTCODE+'@%' AND  ISNULL(@NAGAINSTPACKSLIP,0)=0))    
  IF exists(select top 1 'u' from #tmpbarcodenotfound)   and ISNULL(@BMULTIPLEDN,0)<>1 AND ISNULL(@BFINANCIALDN,0)<>1  
  BEGIN      
    SET @CSTEP=80     
    update b set errmsg= 'NO PURCHASE DETAILS FOUND FOR THE BARCODE AGAINST THE SELECTED SUPPLIER.TRY AGAINST OTHER SUPPLIERS.'      
    from #tmpbarcodenotfound a    
    join PRT_ITEM_DETAILS b on a.PRODUCT_CODE =b.PRODUCT_CODE     
    where b.SP_ID=@CSP_ID     
      
  IF @NINV_MODE=2  
 begin  
        
   UPDATE a SET ERRMSG = 'Barcode is available for Return only Location id:- '+PIM.location_Code   
   FROM PRT_ITEM_DETAILS A (NOLOCK)  
   JOIN pid01106 B (NOLOCK) ON A.PRODUCT_CODE =B.product_code   
   JOIN pim01106 PIM (NOLOCK) ON B.mrr_id =PIM.mrr_id   
   where A.SP_ID=@CSP_ID  AND A.ERRMSG <>'' AND PIM.INV_MODE =2  
  
 end  
  
    GOTO END_PROC      
  END       
    
     SET @CSTEP=85     
  update A set ERRMSG ='BARCODE NOT FOUND' FROM PRT_ITEM_DETAILS A    
  LEFT JOIN SKU B ON A.PRODUCT_CODE =B.PRODUCT_CODE     
  WHERE B.PRODUCT_CODE IS NULL  and a.sp_id =@CSP_ID  
    
  IF @@ROWCOUNT >0    
   GOTO END_PROC      
      
  SET @CTMPTABLE='PRT_ITEM_DETAILS'    

  -- Update box Weight

  UPDATE A SET XNITEMWEIGHT=ISNULL(B.BOXWEIGHT,0)
  FROM PRT_ITEM_DETAILS A (NOLOCK)
  JOIN SKU_NAMES  B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE 
  WHERE  A.SP_ID =@CSP_ID AND ISNULL(B.BOXWEIGHT,0)<>0


IF @ninv_mode =1    
    GOTO END_PROC    
 ---apply party rate    
    
  SET @CSTEP=90      
 DECLARE @BGSTBILL BIT,@CGSTCUTOFFDATE VARCHAR(20)    
  SET @BGSTBILL=0    
     
  SELECT TOP 1  @CGSTCUTOFFDATE=VALUE FROM CONFIG WHERE CONFIG_OPTION='GST_CUT_OFF_DATE'    
  IF ISNULL(@CGSTCUTOFFDATE,'')<>''    
  BEGIN    
  IF @DRM_DT >=CONVERT(DATE,@CGSTCUTOFFDATE)    
   SET @BGSTBILL=1    
    
  END    
    
  SET @CSTEP=95       
 DECLARE @CHOLOCID VARCHAR(5),@CLOCSTATE CHAR(7),@CHOSTATE CHAR(7) ,@DINVDT datetime     
      
 SET @CTMPTABLE='PRT_ITEM_DETAILS'    
      
 SELECT TOP 1 @CCURLOCID=VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'        
 SELECT TOP 1 @CHOLOCID=VALUE FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'        
    
  SET @CSTEP=100       
  DECLARE @BENFORCEBILLINGRULES BIT,@NINVTYPE INT,@NXFRTYPE INT,@CLBRROWID VARCHAR(50),      
  @NLOCTYPE INT,@NFRTYPE INT,@NCUSTOMRATETYPE INT , @CCONFIGMODE int,@CPARTYRATE int    
  set @CPARTYRATE=0    
      
   SELECT @CCONFIGMODE=VALUE FROM CONFIG WHERE CONFIG_OPTION='GROUP_DEBIT_NOTE_RATE_MODE'      
      
 SELECT AC_CODE ,PARTY_DEPT_ID   
 INTO #TMPPARTYRATE  
 FROM INM01106 (NOLOCK) WHERE 1=2   
   
 IF @BMULTIPLEDN=1  and @ninv_mode=2  
 BEGIN  
  
      ;with cte as  
   (  
   SELECT ISNULL(PIM.AC_CODE,L.DEPT_AC_CODE) as AC_CODE,  ISNULL(PIM.challan_source_location_code,B.challan_source_location_code)  as party_dept_id,  
       sr=ROW_NUMBER () over (partition by ISNULL(PIM.AC_CODE,L.DEPT_AC_CODE) ,  ISNULL(PIM.challan_source_location_code,B.challan_source_location_code)  
       ORDER BY ISNULL(PIM.RECEIPT_DT ,B.RECEIPT_DT),ISNULL(PIM.INV_NO,B.GROUP_INV_NO) DESC)  
   FROM prt_item_details A (NOLOCK)  
   LEFT JOIN PIM01106 PIM (NOLOCK) ON A.mrr_id =PIM.mrr_id   
   LEFT JOIN SKU_XFP B (NOLOCK) ON A.PRODUCT_CODE =B.PRODUCT_CODE   
   LEFT JOIN LOCATION L (NOLOCK) ON L.DEPT_ID =B.dept_id   
   WHERE SP_ID=@CSP_ID  
      )  
   INSERT INTO #TMPPARTYRATE(AC_CODE,party_dept_id)  
   SELECT AC_CODE,party_dept_id  FROM CTE WHERE SR=1  
  
 end  
  
  
   
 LBLBPARTYRATE:  
     IF @BMULTIPLEDN=1  and @ninv_mode=2  
     SELECT TOP 1 @CTARGET_DEPT_ID=PARTY_DEPT_ID FROM #TMPPARTYRATE  
  
   
    SET @CSTEP=110        
    set @DINVDT=@DRM_DT     
       
    DECLARE @TERRMSG TABLE (ERRMSG VARCHAR(MAX))       
    IF NOT EXISTS (SELECT TOP 1 PARTY_RATE_MEMO_ID FROM WSL_INV_SETTINGS WHERE SP_ID=@CSP_ID)      
    BEGIN      
  SET @CSTEP=115  
       
            
  SELECT TOP 1 @CACCODE=DEPT_AC_CODE FROM LOCATION WHERE DEPT_ID=@CCURLOCID      
      
       
    INSERT @TERRMSG      
    EXEC SP3S_POPULATE_WSLINV_SETTINGS      
    @NSPID=@CSP_ID,      
    @CCURLOCID=@CTARGET_DEPT_ID,     
    @CTARGETLOCID=@CCURLOCID,      
    @CPARTYACCODE=@CACCODE,      
    @DINVDT=@DINVDT,      
    @NINVMODE=2,      
    @NBILLDISCOUNTPCT=0      
            
    SELECT TOP 1 @CERRORMSG=ERRMSG FROM @TERRMSG      
  
    
            
    IF ISNULL(@CERRORMSG,'')<>''      
  GOTO END_PROC      
    END       
  
   IF ( EXISTS (SELECT TOP 1 PARTY_RATE_MEMO_ID FROM WSL_INV_SETTINGS WHERE SP_ID=@CSP_ID AND  PARTY_RATE_MEMO_ID IS  NULL)    
       AND EXISTS (SELECT TOP 1 'U' FROM PRT_ITEM_DETAILS    WHERE SP_ID=@CSP_ID and isnull(mrr_id ,'')=''  ))  
   begin  
        set @CERRORMSG='Please define party Rate '  
       update A set ERRMSG ='Please define party Rate ' FROM PRT_ITEM_DETAILS A    
           where isnull(mrr_id,'')=''  
  
          GOTO END_PROC    
  
   end  
     
   declare @bpartyratefound bit 
   set @bpartyratefound=0
       
    IF EXISTS (SELECT TOP 1 PARTY_RATE_MEMO_ID FROM WSL_INV_SETTINGS WHERE SP_ID=@CSP_ID AND  PARTY_RATE_MEMO_ID IS NOT NULL)      
    BEGIN     
    set @bpartyratefound=1
   
       SET @CSTEP=120              
    DELETE FROM WSL_ITEM_DETAILS WHERE SP_ID=@CSP_ID      
             
    INSERT WSL_ITEM_DETAILS (PRODUCT_CODE,SP_ID,INVOICE_QUANTITY,QUANTITY,SECTION_CODE,SUB_SECTION_CODE,ARTICLE_CODE,    
    PARA1_CODE,PARA2_CODE,PARA3_CODE,PARA4_CODE,PARA5_CODE,PARA6_CODE,row_id )      
    SELECT isnull(tmp.STOCK_PRODUCT_CODE, PRT.PRODUCT_CODE) as PRODUCT_CODE ,  
       @CSP_ID ,PRT.QUANTITY ,PRT.QUANTITY  ,SECTION_CODE,B.SUB_SECTION_CODE,A.ARTICLE_CODE,    
    A.PARA1_CODE,A.PARA2_CODE,A.PARA3_CODE,A.PARA4_CODE,A.PARA5_CODE,A.PARA6_CODE ,prt.ROW_ID   
    FROM PRT_ITEM_DETAILS PRT     
    JOIN SKU A ON PRT.PRODUCT_CODE =A.product_code     
    JOIN ARTICLE B ON A.ARTICLE_CODE=B.ARTICLE_CODE    
    JOIN SECTIOND C ON C.SUB_SECTION_CODE=B.SUB_SECTION_CODE    
    left join #TMPPURDETAILS tmp on prt.ROW_ID =tmp.ROW_ID and isnull(tmp.STOCK_PRODUCT_CODE,'')<>''  
    WHERE SP_ID=@CSP_ID     
    AND ISNULL(PRT.MRR_ID,'')=CASE WHEN @CCONFIGMODE=1 THEN '' ELSE ISNULL(PRT.MRR_ID,'') end  
          
    
            
    SET @CSTEP=125  
    EXEC SP3S_GETWSL_DATA      
    @NSPID=@CSP_ID ,      
    @NMODE=1 ,      
    @NUPDATEMODE=1,      
    @CXNTYPE='PRT'   
	

 IF @CCONFIGMODE=2  
  BEGIN  
         
    DECLARE @NTAX_METHOD INT  
  
    SELECT @NTAX_METHOD=B.TAX_METHOD   
    FROM  WSL_INV_SETTINGS A (nolock)  
    JOIN PARTY_RATE_MST B (nolock) ON A.PARTY_RATE_MEMO_ID =B.MEMO_ID  
    WHERE A.SP_ID=@CSP_ID  
  

  --Party Rate inclusive calculate taxable value 
    if @NTAX_METHOD=2
	begin

	     DELETE FROM GST_TAXINFO_CALC WHERE SP_ID=@CSP_ID
		 INSERT GST_TAXINFO_CALC	(PRODUCT_CODE, SP_ID, NET_VALUE,ROW_ID,TAX_METHOD,QUANTITY,HSN_CODE,MRP,memo_dt) 
		  SELECT 	  A.PRODUCT_CODE,sp_id,NET_RATE ,
		 A.ROW_ID,2 as TAX_METHOD ,A.QUANTITY,
		 CASE WHEN ISNULL(sku.HSN_CODE,'') IN('','0000000000') THEN  art.HSN_CODE ELSE sku.HSN_CODE END AS HSN_CODE,
		 A.MRP,convert (varchar(10),Getdate(),121)
		 FROM wsl_item_details  a (nolock) 
		 join sku (nolock) on a.PRODUCT_CODE =sku.product_code 
		 join article art on art.article_code =sku.article_code 
		 where a.sp_id=@CSP_ID
		

			IF OBJECT_ID('TEMPDB..#TMPHSN','U') IS NOT NULL
			   DROP TABLE #TMPHSN

		;WITH CTE AS
		(
		SELECT B.HSN_CODE,(CASE WHEN isnull(a.gst_percentage,0)=0 THEN ISNULL(C.TAX_PERCENTAGE,0) ELSE a.gst_percentage END)  AS TAX_PERCENTAGE,ISNULL(C.RATE_CUTOFF,0) AS RATE_CUTOFF,
		       ISNULL(C.RATE_CUTOFF_TAX_PERCENTAGE,0) AS RATE_CUTOFF_TAX_PERCENTAGE,
		      ISNULL(C.WEF,'') AS WEF,ISNULL(B.TAXABLE_ITEM,'') AS TAXABLE_ITEM,ISNULL(B.HSN_TYPE ,'') AS HSN_TYPE  ,
			  SR=ROW_NUMBER() OVER (PARTITION BY A.ROW_ID ORDER BY C.WEF DESC),
			  ISNULL(C.GST_CAL_BASIS,1) AS GST_CAL_BASIS,
			  A.LOC_STATE_CODE,A.PARTY_STATE_CODE 
		FROM GST_TAXINFO_CALC A (NOLOCK)
		JOIN HSN_MST B (NOLOCK) ON A.HSN_CODE =B.HSN_CODE 
		LEFT JOIN HSN_DET C (NOLOCK) ON B.HSN_CODE =C.HSN_CODE AND C.WEF  <=MEMO_DT 
		WHERE A.SP_ID =@CSP_ID 
		)
		SELECT * INTO #TMPHSN FROM CTE WHERE SR=1
	

	
	   UPDATE TMP SET  NET_VALUE_WOTAX= ROUND(NET_VALUE-(NET_VALUE*(CASE WHEN TAX_METHOD=2 THEN (HM.RATE_CUTOFF_TAX_PERCENTAGE/  
												   (100 + HM.RATE_CUTOFF_TAX_PERCENTAGE)) ELSE 0 END)),2)
	   FROM GST_TAXINFO_CALC TMP (NOLOCK)
	   JOIN #TMPHSN HM (NOLOCK) ON HM.HSN_CODE=TMP.HSN_CODE 
	   WHERE TMP.SP_ID=@CSP_ID
	   
	   SET @CSTEP=126	
	   
	   UPDATE TMP SET GST_PERCENTAGE=ISNULL(CASE WHEN HM.RATE_CUTOFF<ABS(TMP.NET_VALUE_WOTAX)/ABS(TMP.QUANTITY) 
	   THEN HM.TAX_PERCENTAGE ELSE RATE_CUTOFF_TAX_PERCENTAGE END ,0),
	   IGST_AMOUNT=0,
	   SGST_AMOUNT=0
	   FROM GST_TAXINFO_CALC TMP (NOLOCK)
	   JOIN #TMPHSN HM (NOLOCK) ON HM.HSN_CODE=TMP.HSN_CODE 
	   WHERE TMP.SP_ID=@CSP_ID

		 SET @CSTEP=127
		UPDATE TMP SET XN_VALUE_WITHOUT_GST =ROUND(NET_VALUE-(NET_VALUE*(CASE WHEN TAX_METHOD=2 THEN ((ISNULL(TMP.GST_PERCENTAGE,0))/  
		(100 + ISNULL(TMP.GST_PERCENTAGE,0))) ELSE 0 END)),2)
		FROM GST_TAXINFO_CALC TMP
		WHERE TMP.SP_ID=@CSP_ID

		UPDATE TMP SET igst_amount =XN_VALUE_WITHOUT_GST*GST_PERCENTAGE/100
		FROM GST_TAXINFO_CALC TMP
		WHERE TMP.SP_ID=@CSP_ID

		

		 SET @CSTEP=127

		UPDATE A SET NET_RATE =B.XN_VALUE_WITHOUT_GST ,
		ITEM_TAX_AMOUNT=b.igst_amount
		FROM WSL_ITEM_DETAILS A
		JOIN GST_TAXINFO_CALC B ON A.ROW_ID =B.ROW_ID 
		WHERE A.SP_ID =@CSP_ID and B.SP_ID =@CSP_ID



	end
  
  END  
  
    --after party rate call barcode shift on original barcode  
  UPDATE A SET PRODUCT_CODE =B.PRODUCT_CODE   
  FROM WSL_ITEM_DETAILS A WITH (NOLOCK)  
  JOIN #TMPPURDETAILS B ON A.ROW_ID=B.ROW_ID   

    SET @CSTEP=130      
    SET @CCMD=N'UPDATE A SET GROSS_PURCHASE_PRICE=ISNULL(B.RATE,0),  
                             PURCHASE_PRICE=ISNULL(B.NET_RATE,0),  
                             DN_DISCOUNT_PERCENTAGE=isnull(B.DISCOUNT_PERCENTAGE,0),      
                             DN_DISCOUNT_AMOUNT=isnull(B.DISCOUNT_AMOUNT ,0),  
							PUR_DISCOUNT_PERCENTAGE=0,  
							PUR_DISCOUNT_AMOUNT=0,  
							PUR_GROSS_PURCHASE_PRICE=ISNULL(B.RATE,0),  
							PUR_PURCHASE_PRICE=ISNULL(B.RATE,0) ,
							BILL_LEVEL_TAX_METHOD=1,
							ITEM_TAX_AMOUNT=b.ITEM_TAX_AMOUNT
          
    FROM '+@CTMPTABLE+' A      
    JOIN WSL_ITEM_DETAILS B ON A.PRODUCT_CODE=B.PRODUCT_CODE  AND A.SP_ID=B.SP_ID     
    WHERE B.SP_ID='+LTRIM(RTRIM(STR(@CSP_ID )))     
    PRINT  @CCMD    
    EXEC SP_EXECUTESQL @CCMD  
    
    
    
     --current Location un registerd and challan source location registered then add tax amount 
   
   if exists (select top 1 'U' from location (nolock) where dept_id =@CDEPTID and isnull(registered_gst,0) <>1 )
     and exists (select top 1 'U' from location (nolock) where dept_id =@CTARGET_DEPT_ID and isnull(registered_gst,0) =1 )
    begin
    
     UPDATE A SET GROSS_PURCHASE_PRICE =isnull(GROSS_PURCHASE_PRICE,0)+ isnull(PUR_TAX_AMOUNT ,0),
                  Amount = Amount+isnull(PUR_TAX_AMOUNT ,0)
	 FROM  PRT_ITEM_DETAILS A (nolock)  
	 WHERE SP_ID=@CSP_ID  


    end 

 --add gst Amount in case of party rate Inclusive because as discuss with sir dn always calculate exclusive 28-11-2022
 if @NTAX_METHOD=2 and @CCONFIGMODE=2
 begin
     
	 UPDATE A SET DN_DISCOUNT_AMOUNT=isnull(DN_DISCOUNT_AMOUNT,0)+ isnull(ITEM_TAX_AMOUNT,0)
	 FROM  PRT_ITEM_DETAILS A (nolock)  
	 WHERE SP_ID=@CSP_ID  

	 UPDATE A SET DN_DISCOUNT_PERCENTAGE=isnull(DN_DISCOUNT_AMOUNT,0)*100/(GROSS_PURCHASE_PRICE)
	 FROM  PRT_ITEM_DETAILS A (nolock)  
	 WHERE SP_ID=@CSP_ID  and isnull(GROSS_PURCHASE_PRICE,0)<>0

 end
	

  IF @BMULTIPLEDN=1  and @ninv_mode=2  
  BEGIN  
       DELETE  FROM #TMPPARTYRATE WHERE PARTY_DEPT_ID=@CTARGET_DEPT_ID  
      
    IF EXISTS (SELECT TOP 1'U' FROM #TMPPARTYRATE)  
       GOTO LBLBPARTYRATE  
  END  
      
  
 END      
 
 if @bpartyratefound=0
 begin
      
       if exists (select top 1 'U' from location (nolock) where dept_id =@CDEPTID and isnull(registered_gst,0) <>1 )
     and exists (select top 1 'U' from location (nolock) where dept_id =@CTARGET_DEPT_ID and isnull(registered_gst,0) =1 )
    begin
    
     UPDATE A SET GROSS_PURCHASE_PRICE =isnull(GROSS_PURCHASE_PRICE,0)+ isnull(PUR_TAX_AMOUNT ,0),
                  Amount = Amount+isnull(PUR_TAX_AMOUNT ,0)
	 FROM  PRT_ITEM_DETAILS A (nolock)  
	 WHERE SP_ID=@CSP_ID  


    end 
 
 end
  
    --DISCUSS WITH ROHIT SIR FRONTEND PURCHASE PRICE COLUMN BIND TO NET RATE   
 --SO update purchase price with gross purchase - dn_discount_amount //26022022  
 UPDATE A SET PURCHASE_PRICE=(GROSS_PURCHASE_PRICE-ISNULL(DN_DISCOUNT_AMOUNT,0) /QUANTITY)  
 FROM  PRT_ITEM_DETAILS A (nolock)  
 WHERE SP_ID=@CSP_ID  
   
 
  
   
 --end of gro    
          
  SELECT TOP 1 @BENFORCEBILLINGRULES=ENFORCE_BILLING_RULES FROM LOCATION WHERE DEPT_ID=@CCURLOCID      
        
  IF @BENFORCEBILLINGRULES=1  AND @BGSTBILL=0    
  BEGIN      
    SET @CSTEP=135       
    SELECT @NINVTYPE=APPLICABLE_INV_TYPE,@NXFRTYPE=APPLICABLE_XFER_TYPE,@CLBRROWID=ROW_ID,      
    @NBILLLEVELTAXMETHOD=APPLICABLE_BILL_LEVEL_TAX_METHOD  FROM LOC_BILLING_RULES       
    WHERE TARGET_DEPT_ID=@CCURLOCID    AND SOURCE_DEPT_ID=@CTARGET_DEPT_ID    
          
    IF @NINVTYPE=1      
  SET @BLOCALDEBITNOTE=1         
          
    IF @NXFRTYPE=2      
    BEGIN      
  SET @CSTEP=140  
  SET @CCMD=N'UPDATE '+@CTMPTABLE+' SET ITEM_TAX_PERCENTAGE=0,ITEM_TAX_AMOUNT=0,    
  ITEM_FORM_ID=''0000000'',FORM_NAME='''''    
          
  EXEC SP_EXECUTESQL @CCMD      
  SET @BLOCALDEBITNOTE=0      
    END       
    ELSE      
    IF @NINVTYPE=2      
    BEGIN      
  SET @CSTEP=145  
  SET @CCMD=N'UPDATE A SET ITEM_TAX_PERCENTAGE=C.TAX_PERCENTAGE,ITEM_TAX_AMOUNT=PURCHASE_PRICE*C.TAX_PERCENTAGE/(100+C.TAX_PERCENTAGE),      
     ITEM_FORM_ID=B.FORM_ID,BILL_LEVEL_TAX_METHOD = 1,FORM_NAME=C.FORM_NAME FROM '+@CTMPTABLE+' A JOIN LOC_BILLING_RULES_FORM B ON 1=1      
     JOIN FORM C ON C.FORM_ID=B.FORM_ID      
     WHERE B.REF_ROW_ID='''+@CLBRROWID+''''      
                
  EXEC SP_EXECUTESQL @CCMD      
     END      
  END      
  ELSE      
  IF @BGSTBILL=0    
  BEGIN      
 SET @CSTEP=150       
 SELECT @NLOCTYPE=LOC_TYPE,@NFRTYPE=FR_TYPE FROM LOCATION WHERE DEPT_ID=@CCURLOCID      
 IF @NLOCTYPE=2 AND @NFRTYPE=2      
    BEGIN      
    SET @CSTEP=155  
    SELECT @CLOCSTATE=STATE_CODE FROM LOCATION A       
    JOIN AREA B ON A.AREA_CODE=B.AREA_CODE      
    JOIN CITY C ON C.CITY_CODE=B.CITY_CODE      
    WHERE DEPT_ID=@CCURLOCID      
        
    SELECT @CHOSTATE=STATE_CODE FROM LOCATION A       
    JOIN AREA B ON A.AREA_CODE=B.AREA_CODE      
    JOIN CITY C ON C.CITY_CODE=B.CITY_CODE      
    WHERE DEPT_ID=@CHOLOCID          
            
    IF @CLOCSTATE=@CHOSTATE      
   SET @BLOCALDEBITNOTE=1      
    ELSE      
  BEGIN      
    SET @CSTEP=160  
    SET @CCMD=N'SELECT TOP 1 @CFORMIDOUT=ITEM_FORM_ID FROM '+@CTMPTABLE      
    EXEC SP_EXECUTESQL @CCMD,N'@CFORMIDOUT CHAR(7) OUTPUT',@CFORMIDOUT=@CFORMID OUTPUT      
               
    IF @CFORMID IN ('','0000000')      
    BEGIN      
   SET @CERRORMSG='INVALID TAX TYPE FOR OUTSTATION FRANCHISE DEBIT NOTE..... PLEASE CHECK'      
   GOTO END_PROC      
    END           
  END       
    END      
  END      
    
    
    
        
 IF @BLOCALDEBITNOTE=1  AND @BGSTBILL=0    
 BEGIN      
        
   SET @CSTEP=165       
        
   SELECT TOP 1 @CSTATECODE=STATE_CODE FROM LOCATION A       
   JOIN AREA B ON A.AREA_CODE=B.AREA_CODE      
   JOIN CITY C ON C.CITY_CODE=B.CITY_CODE      
   WHERE A.DEPT_ID=@CCURLOCID      
        
   SELECT TOP 1 @CLOCSSTMEMOID=MEMO_ID FROM LOCSST_MST WHERE STATE_CODE=@CSTATECODE AND FROM_DT<=@DINVDT      
   ORDER BY FROM_DT DESC      
        
   SET @CSTEP=170             
        
   SET @CCMD=N'UPDATE A SET ITEM_TAX_PERCENTAGE=(CASE WHEN A.MRP BETWEEN ISNULL(LSADD.MIN_MRP,0) AND ISNULL(LSADD.MAX_MRP,0) AND A.MRP>0      
   THEN LSADD.TAX_PERCENTAGE ELSE LS.TAX_PERCENTAGE END),ITEM_FORM_ID=ISNULL(LS.FORM_ID,''0000000''), FORM_NAME= ISNULL(D.FORM_NAME,'''')    
   ,LOCALVATFOUND=1,LOCSST_ROW_ID=LS.ROW_ID,BILL_LEVEL_TAX_METHOD='+      
   (CASE WHEN @NBILLLEVELTAXMETHOD IS NOT NULL THEN LTRIM(RTRIM(STR(@NBILLLEVELTAXMETHOD))) ELSE '2' END)+'      
   FROM '+@CTMPTABLE+' A      
   JOIN SKU ON A.PRODUCT_CODE=SKU.PRODUCT_CODE      
   JOIN ARTICLE B ON B.ARTICLE_CODE=SKU.ARTICLE_CODE      
   JOIN LOCSST LS ON LS.SUB_SECTION_CODE=B.SUB_SECTION_CODE      
   LEFT OUTER JOIN FORM D ON D.FORM_ID=LS.FORM_ID    
   LEFT OUTER JOIN LOCSSTADD LSADD ON LSADD.LOCSST_ROW_ID=LS.ROW_ID       
   WHERE LS.MEMO_ID='''+@CLOCSSTMEMOID+''''      
   PRINT @CCMD         
   EXEC SP_EXECUTESQL @CCMD         
        
      SET @CSTEP=175  
   SET @CCMD=N'SELECT TOP 1 @CFORMID=ITEM_FORM_ID,@BVATFOUND=ISNULL(LOCALVATFOUND,0) FROM  '+@CTMPTABLE      
   EXEC SP_EXECUTESQL @CCMD,N'@CFORMID CHAR(7) OUTPUT,@BVATFOUND BIT OUTPUT',@CFORMID OUTPUT,@BVATFOUND OUTPUT      
        
   IF @BVATFOUND=0      
   BEGIN      
    SET @CERRORMSG='LOCAL TAX STRUCURE NOT FOUND FOR PICKING THE TAX AMOUNT..... PLEASE CHECK'      
    GOTO END_PROC      
   END      
      
   IF @CFORMID IN ('','0000000')      
   BEGIN      
    SET @CERRORMSG='INVALID TAX TYPE FOR LOCAL TAX STRUCURE..... PLEASE CHECK'      
    GOTO END_PROC      
   END      
          
   SET @CSTEP=180       
   SET @CCMD=N'UPDATE '+@CTMPTABLE+' SET ITEM_TAX_AMOUNT=PURCHASE_PRICE*ITEM_TAX_PERCENTAGE/(100+      
   (CASE WHEN BILL_LEVEL_TAX_METHOD=2 THEN ITEM_TAX_PERCENTAGE ELSE 0 END)),      
   TAX_METHOD_NAME=(CASE WHEN BILL_LEVEL_TAX_METHOD = 1 THEN ''EXCLUSIVE'' ELSE ''INCLUSIVE'' END)'      
   PRINT @CCMD      
   EXEC SP_EXECUTESQL @CCMD           
        
 END       
    
    
 GOTO END_PROC      
END TRY    
    
BEGIN CATCH    
 SET @CERRORMSG='PROCEDURE SP3S_GETPRT_DATA STEP#'+@CSTEP+ERROR_MESSAGE()    
 GOTO END_PROC      
END CATCH    
    
END_PROC:    
         
   
  
  print 'last step:'+@cStep  
  DECLARE @CDO_NOT_ENFORCE_BILL_SELECTION VARCHAR(5)  
  
  SELECT @CDO_NOT_ENFORCE_BILL_SELECTION=VALUE  FROM CONFIG WHERE CONFIG_OPTION='DO_NOT_ENFORCE_BILL_SELECTION'  
  --SELECT ISNULL(@CERRORMSG,'') AS ERRMSG    
  if ISNULL(@CERRORMSG,'')<>'' and not exists (select top 1 'u' from  PRT_ITEM_DETAILS  WHERE sp_id=@CSP_ID and isnull(errmsg,'')<>'')  
  update PRT_ITEM_DETAILS set errmsg=@CERRORMSG WHERE sp_id=@CSP_ID and isnull(errmsg,'')=''  
  
  if exists (select top 1 'u' from PRT_item_details where sp_id =@CSP_ID and ISNULL(errmsg,'')<>'')    
  begin    
   SELECT  ERRMSG ,*  ,MRP as mrp_batch
    FROM PRT_item_details (nolock) WHERE SP_ID =@CSP_ID AND ISNULL(ERRMSG,'')<>''    
    
  end    
  else     
  begin    
        
   IF ISNULL(@CDO_NOT_ENFORCE_BILL_SELECTION,'')='1' AND ISNULL(@BPASTE,0) =0 and isnull(@NAGAINSTPACKSLIP,0)=0  
      AND EXISTS (SELECT TOP 1 'U' FROM PRT_item_details (nolock) WHERE SP_ID =@CSP_ID  AND ISNULL(CODING_SCHEME,0)<>1)  
   BEGIN  
          
     SELECT TOP 1  *,MRP as mrp_batch FROM PRT_item_details (nolock) WHERE SP_ID =@CSP_ID    
     ORDER BY BILL_DT DESC ,BILL_NO DESC  
  
  
   END  
   ELSE  
   SELECT *,MRP as mrp_batch FROM PRT_item_details (nolock) WHERE SP_ID =@CSP_ID    
  
  end    
    
   
 DELETE FROM prt_item_details with (rowlock) where sp_id=@CSP_ID  
    
    
    
END  
  