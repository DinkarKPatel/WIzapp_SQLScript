CREATE PROCEDURE SP_PROCESS_IMPORTDATA--(LocId 3 digit change by Sanjay:06-11-2024)
@CSOURCETABLE VARCHAR(30),
@CTARGETTABLE VARCHAR(30),
@CXNTYPEPARA VARCHAR(10)='PUR',
@BAGAINSTPO BIT=0,
@NSPID varchar(50)='',
@cLocId VARCHAR(4)=''

AS
BEGIN
	
	BEGIN TRY

		DECLARE @OUTPUT TABLE(TYPE VARCHAR(50),MESSAGE VARCHAR(200),VALUE VARCHAR(200)) 
		
		DECLARE @TERROR TABLE(SORTORDER INT,TYPE VARCHAR(50),MESSAGE VARCHAR(200),VALUE VARCHAR(200)) 
		
		DECLARE @TNUMCOLUM TABLE (NUMERICCOLUMN VARCHAR(100))

		DECLARE @CCMD NVARCHAR(MAX),@NSTEP INT,@CERRORMSG VARCHAR(MAX),@CCOLNAME VARCHAR(100),@BPROCEED BIT
		,@BDONOTCREATEMASTER BIT,@CPARA1NAME VARCHAR(50),@CPARA2NAME VARCHAR(50),@CPARA3NAME VARCHAR(50)
		,@CPARA4NAME VARCHAR(50),@CPARA5NAME VARCHAR(50),@CPARA6NAME VARCHAR(50),@CPOROWID VARCHAR(MAX),
		 @BDONOTOVERWRITE VARCHAR(10),@PICK_CODING_SCHEME_FROM_IMPORTFILE varchar(5),@CHECK_UNIQUE_STOCK VARCHAR(5)
		
		SELECT  @BDONOTOVERWRITE = ISNULL(VALUE,0) FROM CONFIG WHERE CONFIG_OPTION = 'OVERWRITE_MASTERS_IN_FILE_IMPORT' 
		
		SELECT @CHECK_UNIQUE_STOCK = ISNULL(VALUE,1) FROM CONFIG WHERE CONFIG_OPTION ='ALLOW_STOCK_UNIQUE>1' 
		
		SET @NSTEP=10
		IF @CXNTYPEPARA IN ('PUR','PO')
		BEGIN
			--IF STOCK_NA AND GEN_EAN_CODES DO NOT EXISTS IN SOURCE, CREATE IT WITH FALSE VALUE
			SET @CCMD=N'IF NOT EXISTS(SELECT TOP 1 ''U'' FROM SYSCOLUMNS WHERE ID=OBJECT_ID('''+@CSOURCETABLE+''')
									  AND NAME=''STOCK_NA'')		
						ALTER TABLE '+@CSOURCETABLE+' ADD STOCK_NA BIT NOT NULL DEFAULT 0'
			EXEC SP_EXECUTESQL @CCMD
			
			SET @NSTEP=20	
			SET @CCMD=N'IF NOT EXISTS(SELECT TOP 1 ''U'' FROM SYSCOLUMNS WHERE ID=OBJECT_ID('''+@CSOURCETABLE+''')
									  AND NAME=''GEN_EAN_CODES'')		
						ALTER TABLE '+@CSOURCETABLE+' ADD GEN_EAN_CODES BIT NOT NULL DEFAULT 0'
			EXEC SP_EXECUTESQL @CCMD
			
					
			SET @CCMD=N'SELECT  1,''Product_code'',A.Product_code,''UNIQUE BARCODE HAS MORE THAN ONE QTY IN STOCK....PLEASE CHECK.''
			FROM '+@CSOURCETABLE+' A
			LEFT JOIN pmt01106  B (nolock) ON A.product_code=B.product_code and b.dept_id='''+@cLocId+''' and b.bin_id not in(''777'',''888'',''999'')
			where a.coding_scheme=3 and isnull(A.Product_code,'''')<>'''' AND ''1''<>'''+ISNULL(@CHECK_UNIQUE_STOCK,'')+ ''' 
			group by A.Product_code
			having (SUM(cast(a.Quantity as numeric(10,3)))+sum(ISNULL(b.quantity_in_stock,0)))>1   '
			print @CCMD
			INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
			EXEC SP_EXECUTESQL @CCMD	
			
			SET @CCMD=N'SELECT  2,''Product_code'',A.Product_code,''BARCODE  FIX CODING SCHEME CAN NOT BE CHANGE''
			FROM '+@CSOURCETABLE+' A
			JOIN SKU_NAMES   B (nolock) ON A.product_code=SUBSTRING(B.PRODUCT_CODE,1,CHARINDEX(''@'',B.PRODUCT_CODE)-1)
			where b.product_code like ''%@%''
			and a.CODING_SCHEME<>1
			group by A.Product_code '
			print @CCMD
			INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
			EXEC SP_EXECUTESQL @CCMD	
			
			
          IF EXISTS  (SELECT TOP 1 'U' FROM @TERROR) 		
			 GOTO END_PROC
			 
			--as discuss with sir always pick coding scheme from excel sheet
		  --    SELECT @PICK_CODING_SCHEME_FROM_IMPORTFILE=value FROM CONFIG WHERE CONFIG_OPTION ='PICK_CODING_SCHEME_FROM_IMPORTFILE'	

		  --  	IF ISNULL(@PICK_CODING_SCHEME_FROM_IMPORTFILE,'')<>'1'
				--BEGIN

				--	SET @CCMD=N' UPDATE '+@CSOURCETABLE+'  SET CODING_SCHEME=1 WHERE ISNULL(CODING_SCHEME,0)<>1  and isnull(product_code,'''')<>'''' '
				--	EXEC SP_EXECUTESQL @CCMD

				--END
			

			INSERT INTO @TNUMCOLUM 
			SELECT 'GEN_EAN_CODES' UNION
			SELECT 'STOCK_NA'
		END
		
		IF ISNULL(@BAGAINSTPO,0)=1
		BEGIN
		
		   SET @NSTEP=22
		   SET @CCMD=N'SELECT TOP 1 @CPOROWID = ISNULL(PO_ROW_ID,''LATER'') FROM '+@CSOURCETABLE+' WHERE ISNULL(PO_ROW_ID,''LATER'')<>'' '''  
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD,N'@CPOROWID VARCHAR(MAX) OUTPUT',@CPOROWID OUTPUT  
		
		
		IF LTRIM(RTRIM(ISNULL(@CPOROWID,'LATER'))) <> 'LATER'      
		BEGIN   
		SET @NSTEP=25
		
		SET @CCMD=N'SELECT DISTINCT 14,''ROW_ID'',A.PO_ROW_ID,''ROW_ID DOESNOT EXISTS.''
			FROM '+@CSOURCETABLE+' A
			LEFT JOIN POD01106 B ON A.PO_ROW_ID=B.ROW_ID
			WHERE B.ROW_ID IS NULL '
			INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
			EXEC SP_EXECUTESQL @CCMD	
		END	
		END
		
		
		SET @NSTEP=30
		---VALIDATION ON NUMERIC COLUMN ARTICLE
		
		IF @CXNTYPEPARA IN ('WOD')
			INSERT INTO @TNUMCOLUM 
			SELECT 'INVOICE_QUANTITY'
		ELSE
			INSERT INTO @TNUMCOLUM 
			SELECT 'GEN_EAN_CODES' UNION
			SELECT 'STOCK_NA' UNION
			SELECT 'CODING_SCHEME' UNION
			SELECT 'PURCHASE_PRICE' UNION
			SELECT 'MRP' UNION
			SELECT 'SRNO' UNION
			SELECT 'WHOLESALE_PRICE' UNION
			SELECT 'GROSS_PURCHASE_PRICE' UNION
			SELECT 'DISCOUNT_PERCENTAGE' UNION
			SELECT 'DISCOUNT_AMOUNT' UNION
			SELECT 'BOX_NO' UNION
			SELECT 'INVOICE_QUANTITY' UNION
			SELECT 'SCHEME_QUANTITY' UNION
			SELECT 'TAX_PERCENTAGE' UNION
			SELECT 'TAX_AMOUNT' UNION
			SELECT 'RFNET' UNION
			SELECT 'RFNET_WOTAX' UNION
			SELECT 'FIX_MRP' UNION
			SELECT 'MD_PERCENTAGE' UNION
			SELECT 'WD_PERCENTAGE' UNION
			SELECT 'WSP_PERCENTAGE' UNION
			SELECT 'MP_PERCENTAGE' UNION
			SELECT 'AUTO_SRNO' 
		
		SET @NSTEP=40
		WHILE EXISTS (SELECT TOP 1 * FROM  @TNUMCOLUM)
		BEGIN
			 SET @CCOLNAME = (SELECT TOP 1 NUMERICCOLUMN FROM @TNUMCOLUM)

			 SET @CCMD=N'IF EXISTS(SELECT TOP 1 ''U'' FROM SYSCOLUMNS WHERE ID=OBJECT_ID('''+@CSOURCETABLE+''')
									   AND NAME='''+@CCOLNAME+''')		
							SET @BPROCEED=1
						 ELSE
							SET @BPROCEED=0'
			 EXEC SP_EXECUTESQL  @CCMD,N'@BPROCEED BIT OUTPUT',@BPROCEED OUTPUT
			 
			 SET @NSTEP=50
			 IF @BPROCEED=1
			 BEGIN
			 					 	 			   		 
				 SET @CCMD = N'SELECT ''ALERT'' AS TYPE, '''+@CCOLNAME+' SHOULD BE NUMERIC AND NOT NEGATIVE'' AS MESSAGE,'+@CCOLNAME+' AS VALUE
							   FROM '+@CSOURCETABLE+' WHERE (ISNUMERIC('+@CCOLNAME+') = 0 OR LEFT(LTRIM('+@CCOLNAME+'),1) = ''-'' OR CHARINDEX('','','+@CCOLNAME+')>0) AND '+@CCOLNAME+' IS NOT NULL' 
				 PRINT @CCMD
				 INSERT INTO @TERROR(TYPE,MESSAGE,VALUE)
				 EXEC SP_EXECUTESQL @CCMD
				 
				 SET @NSTEP=60
				 IF @CCOLNAME IN ('DISCOUNT_PERCENTAGE','TAX_PERCENTAGE','MD_PERCENTAGE','WD_PERCENTAGE') AND (SELECT TOP 1 'U' FROM @TERROR) <> 'U'
				 BEGIN
						
						 SET @CCMD = N'SELECT ''ALERT'' AS TYPE, '''+@CCOLNAME+' SHOULD BE BETWEEN 0 AND 100'' AS MESSAGE,'+@CCOLNAME+' AS VALUE
								  FROM '+@CSOURCETABLE+' WHERE CONVERT(NUMERIC(10,2),'+@CCOLNAME+') BETWEEN 0 AND 100 ) AND '+@CCOLNAME+' IS NOT NULL'  
						 PRINT @CCMD
						 INSERT INTO @TERROR(TYPE,MESSAGE,VALUE)
						 EXEC SP_EXECUTESQL @CCMD
				 END
				 
				IF @CCOLNAME IN ('CODING_SCHEME') --AND (SELECT TOP 1 'U' FROM @TERROR) <> 'U'
				BEGIN
						SET @NSTEP=70
						 SET @CCMD = N'SELECT ''ALERT'' AS TYPE,''CODING SCHEME SHOULD BE BETWEEN 1 AND 3 for Article no.:''+article_no+'''' AS MESSAGE,CODING_SCHEME AS VALUE
									 FROM '+@CSOURCETABLE+' WHERE (CODING_SCHEME >3 OR CODING_SCHEME < 1 OR coding_scheme IS NULL) '
						 PRINT @CCMD
						 INSERT INTO @TERROR(TYPE,MESSAGE,VALUE)
						 EXEC SP_EXECUTESQL @CCMD
				END
			 END
			
			 DELETE FROM @TNUMCOLUM WHERE NUMERICCOLUMN= @CCOLNAME
		END
		
		IF EXISTS (SELECT TOP 1 * FROM @TERROR)
			GOTO END_PROC
			
		IF @CXNTYPEPARA IN ('PO','PUR')
		BEGIN
				SET @NSTEP=70
		           
			                
				IF NOT EXISTS (SELECT TOP 1 'U' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME   =@CSOURCETABLE AND COLUMN_NAME ='ROW_ID')
				BEGIN
				   SET @CCMD=N'ALTER TABLE  '+@CSOURCETABLE+' ADD ROW_ID VARCHAR(50) '
					PRINT @CCMD
					EXEC SP_EXECUTESQL @CCMD

				END


/*
as Tiaga Ticketno (198) Remove validation for big shop Ranchi (sonu) this validation is not available in pur
				IF @CXNTYPEPARA='PO'
				BEGIN

					DECLARE @CNEWCOLNAME varchar(100), @CTMPCOLMNNAME VARCHAR(MAX),@DTSQL NVARCHAR(MAX),
					        @CDUPLICATEBARCODE varchar(100)

                   SET @DTSQL=N' SELECT TOP 1 @CDUPLICATEBARCODE=PRODUCT_CODE  FROM '+@CSOURCETABLE+'
							GROUP BY PRODUCT_CODE HAVING COUNT(*)>1 '
                    EXEC SP_EXECUTESQL @DTSQL, N'@CDUPLICATEBARCODE VARCHAR(100) OUTPUT',@CDUPLICATEBARCODE=@CDUPLICATEBARCODE OUTPUT


					IF ISNULL(@CDUPLICATEBARCODE,'')<>''
					BEGIN

					  
						 SET @DTSQL=N' SELECT  0, ''BARCODE'' , PRODUCT_CODE,''DUPLICATE BARCODE FOUND NEED TO CLUBBED ITEM OR DUPLICATE RECORD''   
						      FROM '+@CSOURCETABLE+'
							GROUP BY PRODUCT_CODE HAVING COUNT(*)>1'
						    INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
							EXEC SP_EXECUTESQL  @DTSQL
							GOTO END_PROC

				



			

			end

		end

*/

				SET @CCMD=N'UPDATE '+@CSOURCETABLE+' SET ROW_ID=''LATER_''+LTRIM(RTRIM(NEWID()))'
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD
				
				print 'impot target'
				SET @NSTEP=80
				EXEC UPDATEMASTERXN '',@CSOURCETABLE,'',@CTARGETTABLE,'PRODUCT_CODE','','',0,'',0,'',0,'',1

				PRINT 'END IMPOT TARGET'

		

				
				SET @NSTEP=90
				SET @CCMD=N'UPDATE '+@CTARGETTABLE+' SET CODING_SCHEME=B.CODING_SCHEME FROM ARTICLE B WHERE B.ARTICLE_NO='+
							@CTARGETTABLE+'.ARTICLE_NO AND ISNULL('+@CTARGETTABLE+'.CODING_SCHEME,0)=0'

				EXEC SP_EXECUTESQL @CCMD
				
				SET @NSTEP=93
				SET @CCMD=N'UPDATE '+@CTARGETTABLE+' SET SUB_SECTION_ALIAS=B.ALIAS FROM SECTIOND B WHERE B.SUB_SECTION_NAME='+
							@CTARGETTABLE+'.SUB_SECTION_NAME AND ISNULL('+@CTARGETTABLE+'.SUB_SECTION_ALIAS,'''')='''''

				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD

				SET @CCMD=N'UPDATE '+@CTARGETTABLE+' SET LABEL_COPIES=B.LABEL_COPIES FROM SECTIOND B WHERE B.SUB_SECTION_NAME='+
							@CTARGETTABLE+'.SUB_SECTION_NAME '

				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD


				
					SET @NSTEP=95
				SET @CCMD=N'UPDATE '+@CTARGETTABLE+' SET SECTION_ALIAS=B.ALIAS FROM SECTIONM B WHERE B.SECTION_NAME='+
							@CTARGETTABLE+'.SECTION_NAME AND ISNULL('+@CTARGETTABLE+'.SECTION_ALIAS,'''')='''''

				EXEC SP_EXECUTESQL @CCMD
				
			
				SET @NSTEP=100
				IF OBJECT_ID('TEMPDB..#TTARGETCOL','U') IS NOT NULL
					DROP TABLE #TTARGETCOL
				
				SET @NSTEP=110
				CREATE TABLE #TTARGETCOL (COLNAME VARCHAR(100),COLTYPE VARCHAR(20),SOURCECOLNAME VARCHAR(100),ISNULLABLE BIT)

				SET @CCMD='SELECT A.NAME AS COLNAME, B.NAME AS COLTYPE,E.NAME AS SOURCECOLNAME,A.ISNULLABLE
						   FROM SYSCOLUMNS A 
						   JOIN SYSTYPES B ON A.XTYPE = B.XTYPE AND B.NAME<>''SYSNAME''
						 JOIN SYSOBJECTS C ON C.ID = A.ID 
						   JOIN  SYSOBJECTS D ON D.NAME = '''+@CSOURCETABLE+'''
						   LEFT OUTER JOIN SYSCOLUMNS E ON E.ID = D.ID AND E.NAME=A.NAME
							LEFT OUTER JOIN SYS.IDENTITY_COLUMNS F ON F.OBJECT_ID=A.ID AND F.NAME=A.NAME			   
						   WHERE A.ID = ( SELECT ID FROM SYSOBJECTS 
										WHERE NAME = '''+@CTARGETTABLE+'''
										AND XTYPE = ''U'') 
						 AND   C.NAME = '''+@CTARGETTABLE+''' 
						 AND   A.NAME <> ''TS'' AND F.OBJECT_ID IS NULL'
				
				INSERT #TTARGETCOL
				EXEC SP_EXECUTESQL @CCMD		
				
				SET @NSTEP=120
				DECLARE @CDEFAULTCODINGSCHEME VARCHAR(1),@NQTY NUMERIC(10,3),@CROWID VARCHAR(200),@CFILTER VARCHAR(200),
						@NLOOP INT

				SELECT TOP 1 @CDEFAULTCODINGSCHEME=VALUE FROM CONFIG WHERE CONFIG_OPTION='DEFAULT_CODING_SCHEME'
				
				
				SET @NSTEP=180  

			   SET @CCMD=N'UPDATE '+@CTARGETTABLE+' SET INVOICE_QUANTITY=ISNULL(INVOICE_QUANTITY,0),  
				 ARTICLE_CODE=ISNULL(ARTICLE_CODE,''''),PARA1_CODE=ISNULL(PARA1_CODE,''0000000''),PARA2_CODE=ISNULL(PARA2_CODE,''0000000''),  
				 PARA3_CODE=ISNULL(PARA3_CODE,''0000000''),PARA4_CODE=ISNULL(PARA4_CODE,''0000000''),PARA5_CODE=ISNULL(PARA5_CODE,''0000000''),  
				 PARA6_CODE=ISNULL(PARA6_CODE,''0000000''),FIX_MRP=ISNULL(FIX_MRP,0),BIN_ID=ISNULL(BIN_ID,''000''),
				 ARTICLE_NAME=ISNULL(ARTICLE_NAME,''''),FORM_ID=ISNULL(FORM_ID,''''),SCHEME_QUANTITY = ISNULL(SCHEME_QUANTITY,0)'  
			  PRINT @CCMD  
			  EXEC SP_EXECUTESQL @CCMD 

			  --if para1 to para6 not mapped 

		SET @CCMD=N'UPDATE A SET PARA1_NAME=P1.PARA1_NAME
		FROM '+@CTARGETTABLE +' A
		JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE=a.PARA1_CODE
		WHERE A.PARA1_NAME IS NULL '
		PRINT @CCMD                              
		EXEC SP_EXECUTESQL @CCMD 

		SET @CCMD=N'UPDATE A SET PARA2_NAME=P2.PARA2_NAME
		FROM '+@CTARGETTABLE +' A
		JOIN PARA2 P2 (NOLOCK)  ON P2.PARA2_CODE=a.PARA1_CODE
		WHERE A.PARA2_NAME IS NULL '
		PRINT @CCMD                              
		EXEC SP_EXECUTESQL @CCMD 


		SET @CCMD=N'UPDATE A SET PARA3_NAME=P3.PARA3_NAME
		FROM '+@CTARGETTABLE +' A
		JOIN PARA3 P3 (NOLOCK) ON P3.PARA3_CODE=a.PARA3_CODE
		WHERE A.PARA3_NAME IS NULL '
		PRINT @CCMD                              
		EXEC SP_EXECUTESQL @CCMD 


		SET @CCMD=N'UPDATE A SET PARA4_NAME=P4.PARA4_NAME
		FROM '+@CTARGETTABLE +' A
		JOIN PARA4 P4 (NOLOCK) ON P4.PARA4_CODE=a.PARA4_CODE
		WHERE A.PARA4_NAME IS NULL '
		PRINT @CCMD                              
		EXEC SP_EXECUTESQL @CCMD 

		SET @CCMD=N'UPDATE A SET PARA5_NAME=P5.PARA5_NAME
		FROM '+@CTARGETTABLE +' A
		JOIN PARA5 P5 (NOLOCK) ON P5.PARA5_CODE=A.PARA5_CODE
		WHERE A.PARA5_NAME IS NULL '
		PRINT @CCMD                              
		EXEC SP_EXECUTESQL @CCMD 

		SET @CCMD=N'UPDATE A SET PARA6_NAME=P6.PARA6_NAME
		FROM '+@CTARGETTABLE +' A
		JOIN PARA6 P6 (NOLOCK)  ON P6.PARA6_CODE=A.PARA6_CODE
		WHERE A.PARA6_NAME IS NULL '
		PRINT @CCMD                              
		EXEC SP_EXECUTESQL @CCMD 

--END OF PARA UPDATE
			  
			  
	 SET @NSTEP=185
	 IF @BDONOTOVERWRITE=1
      BEGIN 
		SET @CCMD=N'UPDATE A SET SECTION_NAME=E.SECTION_NAME,SUB_SECTION_NAME=D.SUB_SECTION_NAME,
			ARTICLE_NO=C.ARTICLE_NO,PARA1_NAME=P1.PARA1_NAME,PARA2_NAME=P2.PARA2_NAME,PARA3_NAME=P3.PARA3_NAME,        
			PARA4_NAME=P4.PARA4_NAME,PARA5_NAME=P5.PARA5_NAME,PARA6_NAME=P6.PARA6_NAME,     
			PURCHASE_PRICE=B.PURCHASE_PRICE,MRP=B.MRP,WHOLESALE_PRICE=B.WS_PRICE,        
			CODING_SCHEME=B.BARCODE_CODING_SCHEME,PRODUCT_CODE=B.PRODUCT_CODE,UOM_NAME=U.UOM_NAME,        
			ARTICLE_NAME=C.ARTICLE_NAME,FORM_NAME=FRM.FORM_NAME,ARTICLE_ALIAS=C.ALIAS
			FROM '+@CTARGETTABLE +' A
			JOIN SKU B ON B.PRODUCT_CODE=A.PRODUCT_CODE
			JOIN ARTICLE C ON C.ARTICLE_CODE=B.ARTICLE_CODE
			JOIN SECTIOND D ON D.SUB_SECTION_CODE  =C.SUB_SECTION_CODE
			JOIN SECTIONM E ON E.SECTION_CODE=D.SECTION_CODE
			JOIN PARA1 P1 ON P1.PARA1_CODE=B.PARA1_CODE
			JOIN PARA2 P2 ON P2.PARA2_CODE=B.PARA2_CODE
			JOIN PARA3 P3 ON P3.PARA3_CODE=B.PARA3_CODE
			JOIN PARA4 P4 ON P4.PARA4_CODE=B.PARA4_CODE
			JOIN PARA5 P5 ON P5.PARA5_CODE=B.PARA5_CODE
			JOIN PARA6 P6 ON P6.PARA6_CODE=B.PARA6_CODE
			JOIN UOM	U ON U.UOM_CODE=C.UOM_CODE
			JOIN FORM FRM ON FRM.FORM_ID=B.FORM_ID
			where  isnull(a.PRODUCT_CODE,'''')<>'''' '

		PRINT @CCMD                              
		EXEC SP_EXECUTESQL @CCMD 
      END 

		  SET @NSTEP=190  
		  
		  
		  
		  
		  SET @CCMD=N'INSERT #TMPMASTERSENC (SECTION_NAME,SUB_SECTION_NAME,ARTICLE_NO,PARA1_NAME,PARA2_NAME,PARA3_NAME,  
				 PARA4_NAME,PARA5_NAME,PARA6_NAME,PURCHASE_PRICE,MRP,WS_PRICE,  
				 CODING_SCHEME,PRODUCT_CODE,UOM_NAME,AC_NAME,ROW_ID,STOCK_NA,FIX_MRP,  
				 PRODUCT_NAME,GEN_EAN_CODES,BIN_ID,ARTICLE_NAME,FORM_NAME,ARTICLE_ALIAS,
				 SUB_SECTION_ALIAS,SECTION_ALIAS,HSN_CODE,PARA1_SET,PARA2_SET,P1_SET,P2_SET,PERISHABLE,article_desc)  
				 
			   SELECT  ISNULL(SECTION_NAME,''''),ISNULL(SUB_SECTION_NAME,''''),ISNULL(ARTICLE_NO,''''),  
			   ISNULL(PARA1_NAME,''''),ISNULL(PARA2_NAME,''''),ISNULL(PARA3_NAME,''''),  
			   ISNULL(PARA4_NAME,''''),ISNULL(PARA5_NAME,''''),ISNULL(PARA6_NAME,''''),  
			   ISNULL(PURCHASE_PRICE,0),ISNULL(MRP,0),ISNULL(WHOLESALE_PRICE,0) AS WS_PRICE,  
			   ISNULL(CONVERT(NUMERIC(5,0),CODING_SCHEME),0),ISNULL(PRODUCT_CODE,''''),ISNULL(UOM_NAME,''''),  
			   '''' AS AC_NAME,ISNULL(ROW_ID,''''),ISNULL(STOCK_NA,0),  
			   ISNULL(FIX_MRP,0),ISNULL(PRODUCT_NAME,''''),ISNULL(GEN_EAN_CODES,0),  
			   ISNULL(BIN_ID,''000''),ISNULL(ARTICLE_NAME,''''),ISNULL(FORM_NAME,'''') ,ISNULL(ARTICLE_ALIAS,'''') ,
			   ISNULL(SUB_SECTION_ALIAS,''''),ISNULL(SECTION_ALIAS,''''),ISNULL(HSN_CODE,'''')
			   ,LTRIM(RTRIM(ISNULL(PARA1_SET,0))) ,LTRIM(RTRIM(ISNULL(PARA2_SET,0))) 
			   ,LTRIM(RTRIM(ISNULL(P1_SET,0))) ,LTRIM(RTRIM(ISNULL(P2_SET,0))) ,isnull(PERISHABLE,0),isnull(article_desc,'''')
			  FROM '+@CTARGETTABLE 
			  PRINT      @CCMD                     
			  EXEC SP_EXECUTESQL @CCMD                         
				
			   SET @NSTEP=200
				
				SET @CCMD=N'UPDATE '+@CTARGETTABLE+' SET FORM_ID=B.FORM_ID FROM FORM B WHERE B.FORM_NAME='+@CTARGETTABLE+'.FORM_NAME'
				EXEC SP_EXECUTESQL @CCMD
				
				
				 SET @NSTEP=205
				
				SET @CCMD=N'UPDATE '+@CTARGETTABLE+' SET PO_ID=B.PO_ID FROM 
				POM01106 B WHERE B.PO_NO='+@CTARGETTABLE+'.PO_ID'
				EXEC SP_EXECUTESQL @CCMD
		
		END		
				
		/*FOR PURCHASE TRANSACTION, READ THE CONFIG TO KNOW IF NEW MASTERS SHOULD BE CREATED BY THE IMPORT
		  PROCESS,IF MASTER SHOULD NOT BE CREATED THEN NEW MASTERS SHOULD BE RETURNED WITH ERROR MESSAGE*/
		IF @CXNTYPEPARA='PUR'
		BEGIN
			SET @NSTEP=210
			
			DECLARE @CDONOTCREATESECTION	CHAR(1)
				   ,@CDONOTCREATESUBSECTION CHAR(1)
				   ,@CDONOTCREATEARTICLE	CHAR(1)
				   ,@CDONOTCREATEPARA1		CHAR(1)
				   ,@CDONOTCREATEPARA2		CHAR(1)
				   ,@CDONOTCREATEPARA3		CHAR(1)
				   ,@CDONOTCREATEPARA4		CHAR(1)
				   ,@CDONOTCREATEPARA5		CHAR(1)
				   ,@CDONOTCREATEPARA6		CHAR(1)
				   ,@CDONOTCREATEUOM		CHAR(1)
				   ,@CDONOTCREATELEDGER		CHAR(1)
				   ,@CDONOTCREATEBIN		CHAR(1)
				   ,@CDONOTCREATEFORM		CHAR(1)
			
			SELECT @CDONOTCREATESECTION=ISNULL(VALUE,0) 
				FROM CONFIG 
					WHERE  CONFIG_OPTION='CREATE_SECTION_MASTERS_IN_FILE_IMPORT'
			SET @CDONOTCREATESECTION=ISNULL(@CDONOTCREATESECTION,0)
			
			SELECT @CDONOTCREATESUBSECTION=ISNULL(VALUE,0) 
				FROM CONFIG 
					WHERE CONFIG_OPTION='CREATE_SECTION_MASTERS_IN_FILE_IMPORT'
			SET @CDONOTCREATESUBSECTION=ISNULL(@CDONOTCREATESUBSECTION,0)
			
			SELECT @CDONOTCREATEARTICLE=ISNULL(VALUE,0) 
				FROM CONFIG 
					WHERE  CONFIG_OPTION='CREATE_SECTION_MASTERS_IN_FILE_IMPORT'
			SET @CDONOTCREATEARTICLE=ISNULL(@CDONOTCREATEARTICLE,0)
			
			SELECT @CDONOTCREATEPARA1=ISNULL(VALUE,0) 
				FROM CONFIG 
					WHERE  CONFIG_OPTION='CREATE_SECTION_MASTERS_IN_FILE_IMPORT'
			SET @CDONOTCREATEPARA1=ISNULL(@CDONOTCREATEPARA1,0)
			
			SELECT @CDONOTCREATEPARA2=ISNULL(VALUE,0) 
				FROM CONFIG 
					WHERE  CONFIG_OPTION='CREATE_SECTION_MASTERS_IN_FILE_IMPORT'
			SET @CDONOTCREATEPARA2=ISNULL(@CDONOTCREATEPARA2,0)
			
			SELECT @CDONOTCREATEPARA3=ISNULL(VALUE,0) 
				FROM CONFIG 
					WHERE  CONFIG_OPTION='CREATE_SECTION_MASTERS_IN_FILE_IMPORT'
			SET @CDONOTCREATEPARA3=ISNULL(@CDONOTCREATEPARA3,0)
			
			SELECT @CDONOTCREATEPARA4=ISNULL(VALUE,0) 
				FROM CONFIG 
					WHERE  CONFIG_OPTION='CREATE_SECTION_MASTERS_IN_FILE_IMPORT'
			SET @CDONOTCREATEPARA4=ISNULL(@CDONOTCREATEPARA4,0)
			
			SELECT @CDONOTCREATEPARA5=ISNULL(VALUE,0) 
				FROM CONFIG 
					WHERE  CONFIG_OPTION='CREATE_SECTION_MASTERS_IN_FILE_IMPORT'
			SET @CDONOTCREATEPARA5=ISNULL(@CDONOTCREATEPARA5,0)
			
			SELECT @CDONOTCREATEPARA6=ISNULL(VALUE,0) 
				FROM CONFIG 
					WHERE  CONFIG_OPTION='CREATE_SECTION_MASTERS_IN_FILE_IMPORT'
			SET @CDONOTCREATEPARA6=ISNULL(@CDONOTCREATEPARA6,0)
			
			SELECT @CDONOTCREATEUOM=ISNULL(VALUE,0) 
				FROM CONFIG 
					WHERE CONFIG_OPTION='CREATE_SECTION_MASTERS_IN_FILE_IMPORT'
			SET @CDONOTCREATEUOM=ISNULL(@CDONOTCREATEUOM,0)
			
			SELECT @CDONOTCREATELEDGER=ISNULL(VALUE,0) 
				FROM CONFIG 
					WHERE  CONFIG_OPTION='CREATE_SECTION_MASTERS_IN_FILE_IMPORT'
			SET @CDONOTCREATELEDGER=ISNULL(@CDONOTCREATELEDGER,0)
			
			SELECT @CDONOTCREATEBIN=ISNULL(VALUE,0) 
				FROM CONFIG 
					WHERE  CONFIG_OPTION='DONOT_CREATE_BIN_MASTERS_IN_FILE_IMPORT'
			SET @CDONOTCREATEBIN=ISNULL(@CDONOTCREATEBIN,0)
			
			SELECT @CDONOTCREATEFORM=ISNULL(VALUE,0) 
				FROM CONFIG 
					WHERE  CONFIG_OPTION='DONOT_CREATE_FORM_MASTERS_IN_FILE_IMPORT'
			SET @CDONOTCREATEFORM=ISNULL(@CDONOTCREATEFORM,0)
			
			
			IF @CDONOTCREATESECTION=1	
			BEGIN
				SET @NSTEP=220
				--RETURN THE LIST OF MASTERS THAT ARE NEW TO THE SYSTEM.
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				--LIST OF NEW SECTION NAMES
				SELECT DISTINCT 1,'SECTION',A.SECTION_NAME,'SECTION DOESNOT EXISTS.'
				FROM #TMPMASTERSENC A
				LEFT JOIN SECTIONM B ON A.SECTION_NAME=B.SECTION_NAME
				WHERE B.SECTION_NAME IS NULL
			END
			IF @CDONOTCREATESUBSECTION=1
			BEGIN
				SET @NSTEP=230
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				--LIST OF NEW SUB SECTIONS
				SELECT DISTINCT 2,'SUBSECTION',A.SUB_SECTION_NAME+'('+A.SECTION_NAME+')','SUBSECTION DOESNOT EXISTS.'
				FROM #TMPMASTERSENC A
				LEFT JOIN SECTIOND B ON A.SUB_SECTION_NAME=B.SUB_SECTION_NAME
				LEFT JOIN SECTIONM C ON B.SECTION_CODE=C.SECTION_CODE
				WHERE (B.SUB_SECTION_NAME IS NULL OR A.SECTION_NAME<>C.SECTION_NAME)
			END
			IF @CDONOTCREATEARTICLE=1	
			BEGIN
				SET @NSTEP=240
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				--LIST OF NEW ARTICLES
				SELECT DISTINCT 3,'ARTICLE',A.ARTICLE_NO+'('+A.SUB_SECTION_NAME+')','ARTICLE DOESNOT EXISTS.'
				FROM #TMPMASTERSENC A
				LEFT JOIN ARTICLE B ON A.ARTICLE_NO=B.ARTICLE_NO
				LEFT JOIN SECTIOND C ON B.SUB_SECTION_CODE=C.SUB_SECTION_CODE
				WHERE (B.ARTICLE_NO IS NULL OR A.SUB_SECTION_NAME<>C.SUB_SECTION_NAME)
			END
			IF @CDONOTCREATEPARA1=1
			BEGIN
				SET @NSTEP=250
				SELECT TOP 1 @CPARA1NAME=VALUE FROM CONFIG WHERE  CONFIG_OPTION='PARA1_caption'
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				--LIST OF NEW PARA1 NAMES
				SELECT DISTINCT 4,@CPARA1NAME,A.PARA1_NAME,@CPARA1NAME+' DOESNOT EXISTS.'
				FROM #TMPMASTERSENC A
				LEFT JOIN PARA1 B ON A.PARA1_NAME=B.PARA1_NAME
				WHERE B.PARA1_NAME IS NULL
			END
								
			IF @CDONOTCREATEPARA2=1		
			BEGIN
				SET @NSTEP=260
				SELECT TOP 1 @CPARA2NAME=VALUE FROM CONFIG WHERE CONFIG_OPTION='PARA2_caption'
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				--LIST OF NEW PARA2 NAMES
				SELECT DISTINCT 5,@CPARA2NAME,A.PARA2_NAME,@CPARA2NAME+' DOESNOT EXISTS.'
				FROM #TMPMASTERSENC A
				LEFT JOIN PARA2 B ON A.PARA2_NAME=B.PARA2_NAME
				WHERE B.PARA2_NAME IS NULL
			END
			IF @CDONOTCREATEPARA3=1		
			BEGIN
				SET @NSTEP=270
				SELECT TOP 1 @CPARA3NAME=VALUE FROM CONFIG WHERE CONFIG_OPTION='PARA3_caption'
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				--LIST OF NEW PARA3 NAMES
				SELECT DISTINCT 6,@CPARA3NAME,A.PARA3_NAME,@CPARA3NAME+' DOESNOT EXISTS.'
				FROM #TMPMASTERSENC A
				LEFT JOIN PARA3 B ON A.PARA3_NAME=B.PARA3_NAME
				WHERE B.PARA3_NAME IS NULL			
			END
			IF @CDONOTCREATEPARA4=1		
			BEGIN
				SET @NSTEP=280
				SELECT TOP 1 @CPARA4NAME=VALUE FROM CONFIG WHERE  CONFIG_OPTION='PARA4_caption'
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				--LIST OF NEW PARA4 NAMES
				SELECT DISTINCT 7,@CPARA4NAME,A.PARA4_NAME,@CPARA4NAME+' DOESNOT EXISTS.'
				FROM #TMPMASTERSENC A
				LEFT JOIN PARA4 B ON A.PARA4_NAME=B.PARA4_NAME
				WHERE B.PARA4_NAME IS NULL			
			END
			IF @CDONOTCREATEPARA5=1		
			BEGIN
				SET @NSTEP=290
				SELECT TOP 1 @CPARA5NAME=VALUE FROM CONFIG WHERE CONFIG_OPTION='PARA5_caption'
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				--LIST OF NEW PARA5 NAMES
				SELECT DISTINCT 8,@CPARA5NAME,A.PARA5_NAME,@CPARA5NAME+' DOESNOT EXISTS.'
				FROM #TMPMASTERSENC A
				LEFT JOIN PARA5 B ON A.PARA5_NAME=B.PARA5_NAME
				WHERE B.PARA5_NAME IS NULL			
			END
			IF @CDONOTCREATEPARA6=1		
			BEGIN
				SET @NSTEP=300
				SELECT TOP 1 @CPARA6NAME=VALUE FROM CONFIG WHERE  CONFIG_OPTION='PARA6_caption'		
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				--LIST OF NEW PARA6 NAMES
				SELECT DISTINCT 9,@CPARA6NAME,A.PARA6_NAME,@CPARA6NAME+' DOESNOT EXISTS.'
				FROM #TMPMASTERSENC A
				LEFT JOIN PARA6 B ON A.PARA6_NAME=B.PARA6_NAME
				WHERE B.PARA6_NAME IS NULL
			END
			IF @CDONOTCREATEUOM=1	
			BEGIN
				SET @NSTEP=310
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				--LIST OF NEW UOMS
				SELECT DISTINCT 10,'UOM',A.UOM_NAME,'UOM DOESNOT EXISTS.'
				FROM #TMPMASTERSENC A
				LEFT JOIN UOM B ON A.UOM_NAME=B.UOM_NAME
				WHERE B.UOM_NAME IS NULL			
			END
			IF @CDONOTCREATELEDGER=1		
			BEGIN
				SET @NSTEP=320
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				--LIST OF NEW LEDGERS
				SELECT DISTINCT 11,'LEDGER',A.AC_NAME,'LEDGER DOESNOT EXISTS.'
				FROM #TMPMASTERSENC A
				LEFT JOIN LM01106 B ON A.AC_NAME=B.AC_NAME
				WHERE B.AC_NAME IS NULL			
			END
			IF @CDONOTCREATEBIN=1		
			BEGIN
				SET @NSTEP=330
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				--LIST OF NEW BINS
				SELECT DISTINCT 12,'BIN',A.BIN_ID,'BIN DOESNOT EXISTS.'
				FROM #TMPMASTERSENC A
				LEFT JOIN BIN B ON A.BIN_ID=B.BIN_ID
				WHERE B.BIN_ID IS NULL			
			END
			IF @CDONOTCREATEFORM=1
			BEGIN
				SET @NSTEP=340
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				SELECT DISTINCT 13,'FORM',A.FORM_NAME,'FORM DOESNOT EXISTS.'
				FROM #TMPMASTERSENC A
				LEFT JOIN FORM B ON A.FORM_NAME=B.FORM_NAME
				WHERE B.FORM_NAME IS NULL			
			END		


			
		
		IF @BAGAINSTPO =1 AND EXISTS (SELECT TOP 1 'U' FROM PIM_POID_UPLOAD WHERE SP_ID=@NSPID)
		BEGIN
		 
			 Print 'one to many rows Pur Qty against Po (Jayshoes) 29072022'

			 EXEC  SP3S_normalize_PURQTY @CTARGETTABLE,@NSPID, @CERRORMSG OUTPUT  

			 if isnull(@CERRORMSG,'')<>''
			 	GOTO END_PROC

		END
				
		END
		ELSE
		IF @CXNTYPEPARA='WOD'
		BEGIN
			
					
				
			IF NOT EXISTS (SELECT TOP 1 'U' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME   =@CSOURCETABLE AND COLUMN_NAME ='ROW_ID')
			BEGIN
				SET @CCMD=N'ALTER TABLE  '+@CSOURCETABLE+' ADD ROW_ID VARCHAR(50) '
				PRINT @CCMD
				EXEC SP_EXECUTESQL @CCMD

			END

			SET @CCMD=N'UPDATE '+@CSOURCETABLE+' SET ROW_ID=NEWID()'
			EXEC SP_EXECUTESQL @CCMD


			SET @NSTEP=350
			SET @CCMD=N' UPDATE A 
			SET ARTICLE_NO=ART.ARTICLE_NO,
			PARA1_NAME=P1.PARA1_NAME,
			PARA2_NAME=P2.PARA2_NAME,
			ARTICLE_CODE=ART.ARTICLE_CODE,
			PARA1_CODE=P1.PARA1_CODE,
			PARA2_CODE=P2.PARA2_CODE
			FROM '+@CSOURCETABLE+' A 
			JOIN SKU (NOLOCK) ON A.PRODUCT_CODE=SKU.PRODUCT_CODE
			JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=SKU.ARTICLE_CODE
			JOIN PARA1 P1 ON P1.PARA1_CODE =SKU.PARA1_CODE 
            JOIN PARA2 P2 ON P2.PARA2_CODE =SKU.PARA2_CODE 
            WHERE ISNULL(A.PRODUCT_CODE,'''')<>'''' '
            EXEC SP_EXECUTESQL @CCMD
			
			EXEC UPDATEMASTERXN '',@CSOURCETABLE,'',@CTARGETTABLE,'ROW_ID','','',0,'',0,'',0,'',1
			SET @NSTEP=355

		
			
			
			DECLARE @CONSIDER_PARA1 BIT,@CONSIDER_PARA2 BIT,@CONSIDER_PARA3 BIT,@CONSIDER_PARA4 BIT, @CONSIDER_PARA5 BIT,@CONSIDER_PARA6 VARCHAR(6),
			        @CONSIDER_PRODUCT_CODE BIT,@CONSIDER_SECTION BIT,@CONSIDER_SUB_SECTION BIT,@CONSIDER_ARTICLE BIT
               

			

			SELECT @CONSIDER_PRODUCT_CODE=0,
			       @CONSIDER_ARTICLE=0 ,
				   @CONSIDER_SECTION=0 ,
				   @CONSIDER_SUB_SECTION=0 ,
				   @CONSIDER_PARA1=0 ,
				   @CONSIDER_PARA2=0 ,
				   @CONSIDER_PARA3=0,
				   @CONSIDER_PARA4=0 ,
				   @CONSIDER_PARA5=0 ,
				   @CONSIDER_PARA6=0


		

			IF EXISTS (SELECT TOP 1'U' FROM CONFIG_BUYERORDER WHERE ISNULL(OPEN_KEY,0)=1 AND COLUMN_NAME='PRODUCT_CODE')
			SET @CONSIDER_PRODUCT_CODE=1
			IF EXISTS (SELECT TOP 1'U' FROM CONFIG_BUYERORDER WHERE ISNULL(OPEN_KEY,0)=1 AND COLUMN_NAME='ARTICLE_NO')
			SET @CONSIDER_ARTICLE=1
			IF EXISTS (SELECT TOP 1'U' FROM CONFIG_BUYERORDER WHERE ISNULL(OPEN_KEY,0)=1 AND COLUMN_NAME='SECTION_NAME')
			SET @CONSIDER_SECTION=1
			IF EXISTS (SELECT TOP 1'U' FROM CONFIG_BUYERORDER WHERE ISNULL(OPEN_KEY,0)=1 AND COLUMN_NAME='SUB_SECTION_NAME')
			SET @CONSIDER_SUB_SECTION=1
			IF EXISTS (SELECT TOP 1'U' FROM CONFIG_BUYERORDER WHERE ISNULL(OPEN_KEY,0)=1 AND COLUMN_NAME='PARA1_NAME')
			SET @CONSIDER_PARA1=1
			IF EXISTS (SELECT TOP 1'U' FROM CONFIG_BUYERORDER WHERE ISNULL(OPEN_KEY,0)=1 AND COLUMN_NAME='PARA2_NAME')
			SET @CONSIDER_PARA2=1
			IF EXISTS (SELECT TOP 1'U' FROM CONFIG_BUYERORDER WHERE ISNULL(OPEN_KEY,0)=1 AND COLUMN_NAME='PARA3_NAME')
			SET @CONSIDER_PARA3=1
			IF EXISTS (SELECT TOP 1'U' FROM CONFIG_BUYERORDER WHERE ISNULL(OPEN_KEY,0)=1 AND COLUMN_NAME='PARA4_NAME')
			SET @CONSIDER_PARA4=1
			IF EXISTS (SELECT TOP 1'U' FROM CONFIG_BUYERORDER WHERE ISNULL(OPEN_KEY,0)=1 AND COLUMN_NAME='PARA5_NAME')
			SET @CONSIDER_PARA5=1
			IF EXISTS (SELECT TOP 1'U' FROM CONFIG_BUYERORDER WHERE ISNULL(OPEN_KEY,0)=1 AND COLUMN_NAME='PARA6_NAME')
			SET @CONSIDER_PARA6=1

		
	
		

		SET @CCMD=N' UPDATE A SET SECTION_CODE=SM.SECTION_CODE, SUB_SECTION_CODE=SD.SUB_SECTION_CODE,PARA1_CODE=P1.PARA1_CODE,PARA2_CODE=P2.PARA2_CODE, PARA3_CODE=P3.PARA3_CODE,PARA4_CODE=P4.PARA4_CODE,PARA5_CODE=P5.PARA5_CODE,PARA6_CODE=P6.PARA6_CODE 
			 FROM '+@CTARGETTABLE+' A 
			LEFT JOIN ARTICLE ART (NOLOCK) ON A.ARTICLE_NO=ART.ARTICLE_NO 
			LEFT JOIN SECTIOND SD (NOLOCK) ON A.SUB_SECTION_NAME=SD.SUB_SECTION_NAME 
			LEFT JOIN SECTIONM SM (NOLOCK) ON A.SECTION_NAME=SM.SECTION_NAME
			LEFT JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_NAME=A.PARA1_NAME
			LEFT JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_NAME=A.PARA2_NAME
			LEFT JOIN PARA3 P3 (NOLOCK) ON P3.PARA3_NAME=A.PARA3_NAME 
			LEFT JOIN PARA4 P4 (NOLOCK) ON P4.PARA4_NAME=A.PARA4_NAME 
			LEFT JOIN PARA5 P5 (NOLOCK) ON P5.PARA5_NAME=A.PARA5_NAME 
			LEFT JOIN PARA6 P6 (NOLOCK) ON P6.PARA6_NAME=A.PARA6_NAME 
			where isnull(a.product_code,'''')=''''  '
			PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD

			
				--	set @CONSIDER_ARTICLE=0

			SET @CCMD=N'UPDATE A SET ARTICLE_CODE=B.ARTICLE_CODE,
			WS_PRICE=(CASE WHEN ISNULL(sf.article_code,'''')<>'''' THEN sf.ws_price 
			               WHEN ISNULL(a.WS_PRICE,0)<>0 then a.WS_PRICE
						   WHEN ISNULL(AD.WS_PRICE,0)<>0 THEN  AD.WS_PRICE ELSE B.wholesale_price END) ,
			GROSS_WSP=(CASE WHEN ISNULL(sf.article_code,'''')<>'''' THEN sf.ws_price 
			                WHEN ISNULL(a.GROSS_WSP,0)<>0 then a.GROSS_WSP 
						    WHEN ISNULL(AD.WS_PRICE,0)<>0 THEN  AD.WS_PRICE ELSE B.wholesale_price END) ,						   
			UOM_CODE=B.UOM_CODE,
			UOM_NAME=UOM.UOM_NAME
			FROM '+@CTARGETTABLE+' A 
			JOIN ARTICLE B ON A.ARTICLE_NO=B.ARTICLE_NO
			JOIN UOM ON UOM.UOM_CODE=B.UOM_CODE
			LEFT OUTER JOIN ART_DET AD ON B.ARTICLE_CODE=AD.ARTICLE_CODE AND A.PARA2_CODE=AD.PARA2_CODE 
			LEFT OUTER JOIN 
			(SELECT SKU.article_code,fc_RATE as ws_price FROM sku_fc_prices sf (NOLOCK)
			 JOIN sku (NOLOCK) ON sku.product_code=sf.product_code
			 JOIN article art (NOLOCK) ON art.article_code=sku.article_code
			 JOIN '+@CTARGETTABLE+' c ON c.article_no=art.article_no
			 JOIN location loc (NOLOCK) ON 1=1
			 WHERE loc.dept_id='''+@cLocId+''' AND loc.fc_code=sf.fc_code) sf ON sf.article_code=b.article_code
			'
            PRINT @CCMD
			EXEC SP_EXECUTESQL @CCMD

			
			--VALIDATION ACCORDING TO CONFIG
			SELECT TOP 1 @CPARA1NAME=VALUE FROM CONFIG WHERE CONFIG_OPTION='PARA1_caption'
			SELECT TOP 1 @CPARA2NAME=VALUE FROM CONFIG WHERE CONFIG_OPTION='PARA2_caption'
			SELECT TOP 1 @CPARA3NAME=VALUE FROM CONFIG WHERE CONFIG_OPTION='PARA3_caption'
			SELECT TOP 1 @CPARA4NAME=VALUE FROM CONFIG WHERE CONFIG_OPTION='PARA4_caption'
			SELECT TOP 1 @CPARA5NAME=VALUE FROM CONFIG WHERE CONFIG_OPTION='PARA5_caption'
			SELECT TOP 1 @CPARA6NAME=VALUE FROM CONFIG WHERE CONFIG_OPTION='PARA6_caption'

			IF ISNULL(@CONSIDER_PRODUCT_CODE,0)=1
			BEGIN
				SET @NSTEP=355			
				SET @CCMD=N'SELECT DISTINCT 1,''ITEM CODE'',A.PRODUCT_CODE,''ITEM CODE DOESNOT EXISTS.''
				FROM '+@CSOURCETABLE+' A
				LEFT JOIN SKU B ON A.PRODUCT_CODE=B.PRODUCT_CODE
				WHERE   B.PRODUCT_CODE IS NULL '
			
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				EXEC SP_EXECUTESQL @CCMD

			END
		
			IF ISNULL(@CONSIDER_ARTICLE,0)='1'
			begin
			    SET @NSTEP=360
				SET @CCMD=N'SELECT DISTINCT 2,''ARTICLE'',A.ARTICLE_NO,''ARTICLE DOESNOT EXISTS.''
				FROM '+@CSOURCETABLE+' A
				LEFT JOIN ARTICLE B ON A.ARTICLE_NO=B.ARTICLE_NO
				WHERE  B.ARTICLE_NO IS NULL '
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				EXEC SP_EXECUTESQL @CCMD

			end
			IF ISNULL(@CONSIDER_SECTION,0)='1'
			begin
			    SET @NSTEP=365
				SET @CCMD=N'SELECT DISTINCT 3,''SECTION'',A.SECTION_NAME,''SECTION DOESNOT EXISTS.''
				FROM '+@CSOURCETABLE+' A
				LEFT JOIN sectionm B ON A.section_name=B.section_name
				WHERE  B.section_name IS NULL '
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				EXEC SP_EXECUTESQL @CCMD

			end

			IF ISNULL(@CONSIDER_SUB_SECTION,0)='1'
			begin
			    SET @NSTEP=370
				SET @CCMD=N'SELECT DISTINCT 4,''SUB_SECTION'',A.SUB_SECTION_NAME,''SUB_SECTION DOESNOT EXISTS.''
				FROM '+@CSOURCETABLE+' A
				LEFT JOIN SECTIOND B ON A.SUB_SECTION_NAME=B.SUB_SECTION_NAME
				WHERE  B.SUB_SECTION_NAME IS NULL '
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				EXEC SP_EXECUTESQL @CCMD

			end

			
			IF ISNULL(@CONSIDER_PARA1,'')='1'
			begin

				SET @NSTEP=400
				SET @CCMD=N'SELECT 5,'''+@CPARA1NAME+''',a.PARA1_NAME,'''+@CPARA1NAME+' NOT FOUND'' 
				FROM '+@CSOURCETABLE+' A
				LEFT JOIN para1 P1 (NOLOCK) ON A.PARA1_NAME=P1.PARA1_NAME
				WHERE  P1.PARA1_NAME IS NULL '
				
				PRINT @CCMD
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				EXEC SP_EXECUTESQL @CCMD
				
			end 

			
			
			IF ISNULL(@CONSIDER_PARA2,'')='1'
			BEGIN
				SET @NSTEP=405
				SET @CCMD=N'SELECT DISTINCT 6,'''+@CPARA2NAME+''',A.PARA2_NAME,'''+@CPARA2NAME+' DOESNOT EXISTS '' 
				FROM '+@CSOURCETABLE+' A
				LEFT JOIN PARA2 B ON A.PARA2_NAME=B.PARA2_NAME
				WHERE  B.PARA2_NAME IS NULL'
				
				PRINT @CCMD
				
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				EXEC SP_EXECUTESQL @CCMD
			
			END
			
			IF ISNULL(@CONSIDER_PARA3,'')='1'
			BEGIN
				SET @NSTEP=410
				SET @CCMD=N'SELECT DISTINCT 7,'''+@CPARA3NAME+''',A.PARA3_NAME,'''+@CPARA3NAME+' DOESNOT EXISTS '' 
				FROM '+@CSOURCETABLE+' A
				LEFT JOIN PARA3 B ON A.PARA3_NAME=B.PARA3_NAME
				WHERE  B.PARA3_NAME IS NULL'
				
				PRINT @CCMD
				
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				EXEC SP_EXECUTESQL @CCMD
			
			END
			
		   IF ISNULL(@CONSIDER_PARA4,'')='1'
			begin
			
				SET @NSTEP=415
				SET @CCMD=N'SELECT DISTINCT 8,'''+@CPARA4NAME+''',A.PARA4_NAME,'''+@CPARA4NAME+' DOESNOT EXISTS '' 
				FROM '+@CSOURCETABLE+' A
				LEFT JOIN PARA4 B ON A.PARA4_NAME=B.PARA4_NAME
				WHERE  B.PARA4_NAME IS NULL'
				
				PRINT @CCMD
				
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				EXEC SP_EXECUTESQL @CCMD
				
			end 
			
			IF ISNULL(@CONSIDER_PARA5,'')='1'
			begin
			
				SET @NSTEP=420
				SET @CCMD=N'SELECT DISTINCT 9,'''+@CPARA5NAME+''',A.PARA5_NAME,'''+@CPARA5NAME+' DOESNOT EXISTS '' 
				FROM '+@CSOURCETABLE+' A
				LEFT JOIN PARA5 B (nolock) ON A.PARA5_NAME=B.PARA5_NAME
				WHERE  B.PARA5_NAME IS NULL'
				
				PRINT @CCMD
				
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				EXEC SP_EXECUTESQL @CCMD
				
			end 
			
			IF ISNULL(@CONSIDER_PARA6,'')='1'
			begin
			
				SET @NSTEP=425
				SET @CCMD=N'SELECT DISTINCT 10,'''+@CPARA6NAME+''',A.PARA6_NAME,'''+@CPARA6NAME+' DOESNOT EXISTS '' 
				FROM '+@CSOURCETABLE+' A
				LEFT JOIN PARA6 B (nolock) ON A.PARA6_NAME=B.PARA6_NAME
				WHERE  B.PARA6_NAME IS NULL'
				
				PRINT @CCMD
				
				INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
				EXEC SP_EXECUTESQL @CCMD
				
			end 



           IF OBJECT_ID('TEMPDB..#TMPATTR','U') IS NOT NULL
		      DROP TABLE #TMPATTR

			SELECT * 
			INTO #TMPATTR 
			FROM CONFIG_BUYERORDER 
			WHERE OPEN_KEY=1 AND
			COLUMN_NAME LIKE 'ATTR%'
			AND RIGHT(COLUMN_NAME,9)='_KEY_NAME'
	        
			DECLARE @NSR INT,@CCOLUMNCAPTION VARCHAR(20),@CATTRTABLENAME VARCHAR(20),
			@CCOLUMNNAME VARCHAR(50)
			SET @NSR=1
			WHILE EXISTS (SELECT TOP 1'U' FROM #TMPATTR)
			BEGIN
			    
				SELECT  @CCOLUMNCAPTION='',@CCOLUMNNAME='',@CATTRTABLENAME=''

			     SELECT TOP 1 @CCOLUMNCAPTION=COLUMN_CAPTION,@CCOLUMNNAME=COLUMN_NAME ,
				              @CATTRTABLENAME=REPLACE(COLUMN_NAME,'KEY_NAME','MST')
				 FROM #TMPATTR

			

				IF ISNULL(@CATTRTABLENAME,'')<>''
				 BEGIN

					SET @NSTEP=450
					SET @CCMD=N'SELECT DISTINCT 10,'''+@CCOLUMNCAPTION+''',A.'+@CCOLUMNNAME+','''+@CCOLUMNCAPTION+' DOESNOT EXISTS '' 
					FROM '+@CSOURCETABLE+' A
					LEFT JOIN '+@CATTRTABLENAME+' B (nolock) ON A.'+@CCOLUMNNAME+'=B.'+@CCOLUMNNAME+'
					WHERE  B.'+@CCOLUMNNAME+' IS NULL'
				
					PRINT @CCMD
				
					INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
					EXEC SP_EXECUTESQL @CCMD

				END

				DELETE FROM #TMPATTR WHERE COLUMN_NAME=@CCOLUMNNAME

			END
		
		SET @NSTEP=410
		SET @CCMD=N'UPDATE '+@CTARGETTABLE+' SET ROW_ID=NEWID()'
		EXEC SP_EXECUTESQL @CCMD
		
	
	END
				
		GOTO END_PROC
		
	END TRY
	
	BEGIN CATCH
		SET @CERRORMSG = 'PROCEDURE SP_PROCESS_IMPORTDATA : STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		
		
		GOTO END_PROC
	END CATCH
	
END_PROC:

IF ISNULL (@CERRORMSG,'') = ''
	INSERT @OUTPUT ( TYPE, MESSAGE,VALUE) VALUES('SUCCESS',@CERRORMSG,'')
ELSE
	INSERT @OUTPUT ( TYPE, MESSAGE,VALUE) VALUES('ERROR',@CERRORMSG,'')
IF @CXNTYPEPARA<>'WOD'		
SET @CCMD=N'SELECT DISTINCT ROW_NUMBER()OVER(PARTITION BY 1 ORDER BY A.HSN_CODE)AS R,''CREATE'',A.HSN_CODE,''HSN CODE NOT FOUND'' 
            FROM ['+@CSOURCETABLE+'] A 
            LEFT JOIN HSN_MST B (NOLOCK) ON A.HSN_CODE=B.HSN_CODE 
            WHERE ISNULL(A.HSN_CODE,'''')<>'''' AND B.HSN_CODE IS NULL'
            
IF @CXNTYPEPARA IN ('PUR') AND @BAGAINSTPO=0
   INSERT @TERROR(SORTORDER,TYPE,VALUE,MESSAGE)
   EXEC(@CCMD)


IF (SELECT TOP 1 'U' FROM @TERROR) = 'U'
	SELECT TYPE,VALUE,MESSAGE FROM @TERROR
	ORDER BY SORTORDER
 ELSE	
	SELECT * FROM @OUTPUT
END
---END OF PROCEDURE - SP_PROCESS_IMPORTDATA


