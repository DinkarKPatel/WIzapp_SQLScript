CREATE PROCEDURE SAVETRAN_EOSSSOR
(  
	 @NUPDATEMODE  NUMERIC(1,0),  
	 @NSPID  VARCHAR(40),  
	 @CMEMONOPREFIX  VARCHAR(50),  
	 @CFINYEAR   VARCHAR(10),  
	 @CMEMOID   VARCHAR(40)=''
	 
)  
--WITH ENCRYPTION
AS  
BEGIN  
 DECLARE   @CTEMPDBNAME   VARCHAR(100),  
		   @CMASTERTABLENAME  VARCHAR(100),  
		   @CDETAILTABLENAME  VARCHAR(100),  
		   @CTEMPMASTERTABLENAME VARCHAR(100),  
		   @CTEMPDETAILTABLENAME VARCHAR(100),  
		   @CTEMPMASTERTABLE  VARCHAR(100),@cFilterCondition VARCHAR(500),  
		   @CTEMPDETAILTABLE  VARCHAR(100),  
		   @CERRMSG    VARCHAR(500),  
		   @CKEYFIELD1    VARCHAR(50),  
		   @CKEYFIELDVAL1   VARCHAR(50),  
		   @CMEMONO    VARCHAR(20),  
		   @NMEMONOLEN    NUMERIC(20,0),  
		   @CMEMONOVAL    VARCHAR(50),  
		   @CCMD     NVARCHAR(4000),  
		   @CCMDOUTPUT    NVARCHAR(4000),  
		   @NSAVETRANLOOP   BIT,  
		   @NSTEP    INT,  
		   @CDEPT_ID   VARCHAR(4),  
		   @CMEMODEPTID   VARCHAR(4),
		   @CPETYENABLE	  BIT,
		   @CPETTYTYPE    VARCHAR(2),@cErrPc VARCHAR(50),@CLOCID VARCHAR(4)  
  
  DECLARE @OUTPUT TABLE (MEMO_ID VARCHAR(30),ERRMSG VARCHAR(500)) 
  
  SET @NSTEP = 0  -- SETTTING UP ENVIRONMENT  

 -- TEMPORARY DATABASE Discarded now onwards as per Meeting on 30-10-2020 mentioned in Client issues List  
 SET @CTEMPDBNAME = ''  
  
  
 SET @CMASTERTABLENAME = 'EOSSSORM'  
 SET @CDETAILTABLENAME = 'EOSSSORD'  
  
 SET @CTEMPMASTERTABLENAME = 'SOR_EOSSSORM_upload'
 SET @CTEMPDETAILTABLENAME = 'SOR_EOSSSORd_upload'
   
 SET @CTEMPMASTERTABLE = @CTEMPDBNAME + @CTEMPMASTERTABLENAME  
 SET @CTEMPDETAILTABLE = @CTEMPDBNAME + @CTEMPDETAILTABLENAME  
   
 SET @CERRMSG   = ''  
 SET @CKEYFIELD1   = 'MEMO_ID'  
  
 SET @CMEMONO   = 'MEMO_NO'  
 SET @NMEMONOLEN   = 10  


select @CLOCID=location_code from SOR_EOSSSORM_upload where SP_ID=@NSPID 

if @NUPDATEMODE=3
BEGIN
	select @CLOCID=location_code from EOSSSORM where MEMO_ID=@CMEMOID 
END

SELECT @CDEPT_ID=@CLOCID

 --SELECT @CDEPT_ID	= DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
 
 BEGIN TRY  
  BEGIN TRANSACTION   
   IF @NUPDATEMODE IN (1,3)
   BEGIN
		SET @CERRMSG=''
   END

  IF ISNULL(@CDEPT_ID,'')=''
 BEGIN
    SET @CERRMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' LOCATION ID CAN NOT BE BLANK  '  
	GOTO END_PROC    
 END
 
 
 IF EXISTS (SELECT TOP 1 sp_id FROM SOR_EOSSSORd_upload (NOLOCK) where sp_id=@nSpId AND ISNULL(sor_terms_code,'') IN ('','000'))
 BEGIN
	SELECT TOP 1 @cErrPc=product_code FROM SOR_EOSSSORd_upload (NOLOCK) where sp_id=@nSpId AND ISNULL(sor_terms_code,'') IN ('','000')

	SET @CERRMSG = 'Sor Terms Code for Item code:'+@cErrPc+' is going blank ....Cannot save'  
	GOTO END_PROC    	
 END
   
   IF @NUPDATEMODE = 3			
   BEGIN
		DECLARE @cFcnNo VARCHAR(20),@cFdnNo VARCHAR(20)

		IF EXISTS (SELECT TOP 1 cn_id FROM cnm01106 (NOLOCK) WHERE refmemoid='SOR'+@cMemoId AND cancelled=0)
		BEGIN
			SELECT TOP 1 @cFcnNo=cn_no FROM cnm01106 (NOLOCK) WHERE refmemoid='SOR'+@cMemoId AND cancelled=0
			SET @CERRMSG='FCN no. :'+@cFcnNo+' generated against this SOR...Cannot cancel'
			GOTO END_PROC
		END

		IF EXISTS (SELECT TOP 1 rm_id FROM rmm01106 (NOLOCK) WHERE refmemoid='SOR'+@cMemoId AND cancelled=0)
		BEGIN	
			SELECT TOP 1 @cFdnNo=rm_no FROM rmm01106 (NOLOCK) WHERE refmemoid='SOR'+@cMemoId AND cancelled=0

			SET @CERRMSG='FCN no. :'+@cFdnNo+' generated against this SOR...Cannot cancel'
			GOTO END_PROC
		END

		SET @NSTEP = 10
		SET @CKEYFIELDVAL1=@CMEMOID
					
		IF @CKEYFIELDVAL1=''
		BEGIN
			SET @CERRMSG='MEMO ID REQUIRED FOR CANCELLATION.CANNOT PROCEED'
			GOTO END_PROC
		END
		
		SET @NSTEP = 20
		-- UPDATING SENTTOHO FLAG
		UPDATE EOSSSORM with (rowlock) SET CANCELLED = 1,LAST_UPDATE=GETDATE() 
		WHERE MEMO_ID = @CKEYFIELDVAL1 
		
		GOTO END_PROC
   END 
    
  -- START UPDATING XN TABLES   
  IF @NUPDATEMODE = 1 -- ADDMODE   
  BEGIN   
	   SET @NSTEP = 50  -- GENERATING NEW KEY  
     
	  UPDATE SOR_EOSSSORM_upload WITH (ROWLOCK) SET fin_year='01'+dbo.fn_getfinyear(memo_dt)
	  WHERE sp_id=@nSpId

	   SET @NSTEP = 55  -- GENERATING NEW KEY  
     
	  UPDATE A WITH (ROWLOCK) SET ac_code=b.dept_ac_code from SOR_EOSSSORM_upload A 
	  JOIN location b ON a.party_dept_id=b.dept_id
	  WHERE sp_id=@nSpId AND ISNULL(ac_code,'')=''

	   -- GENERATING NEW JOB ORDER NO    
	   SET @NSAVETRANLOOP=0  
	   WHILE @NSAVETRANLOOP=0  
	   BEGIN  
		EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1, @CFINYEAR, 0, @CMEMONOVAL OUTPUT     
      
		SET @NSTEP = 60  
		PRINT @CMEMONOVAL  
		SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+' (nolock)   
								WHERE '+@CMEMONO+'='''+@CMEMONOVAL+'''   
								AND FIN_YEAR = '''+@CFINYEAR+''' )  
					SET @NLOOPOUTPUT=0  
				   ELSE  
					SET @NLOOPOUTPUT=1'  
		PRINT @CCMD  
		EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT  
	   END  
  
	   SET @NSTEP = 70
	   IF @CMEMONOVAL IS NULL OR @CMEMONOVAL LIKE '%LATER%'
	   BEGIN  
		  SET @CERRMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'   
		  GOTO END_PROC      
	   END  
  
	   SET @NSTEP = 80    
	   SET @CKEYFIELDVAL1 = @CDEPT_ID + RIGHT(@CFINYEAR,2)+REPLICATE('0', (22-LEN(@CDEPT_ID + RIGHT(@CFINYEAR,2)))-LEN(LTRIM(RTRIM(@CMEMONOVAL))))  + LTRIM(RTRIM(@CMEMONOVAL))
	  
						  
	   IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'    
	   BEGIN  
		  SET @CERRMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'  
		  GOTO END_PROC  
	   END  
  
	   SET @NSTEP = 90  -- UPDATING NEW ID INTO TEMP TABLES  
	   UPDATE SOR_EOSSSORM_UPLOAD with (rowlock) SET memo_no=@CMEMONOVAL,
	   memo_id = @CKEYFIELDVAL1 WHERE sp_id=@nSpId
   
	   SET @NSTEP = 95 
	   UPDATE SOR_EOSSSORD_UPLOAD WITH (ROWLOCK) SET memo_id = @CKEYFIELDVAL1,
	   ROW_ID=@CDEPT_ID+CONVERT(VARCHAR(40),NEWID())  WHERE sp_id=@nSpId

  END     -- END OF ADDMODE  
  
  IF @NUPDATEMODE=2
  BEGIN
		SELECT @CKEYFIELDVAL1=memo_id FROM SOR_EOSSSORd_upload (NOLOCK) WHERE sp_id=@nSpId
		SET @NSTEP = 100
		UPDATE SOR_EOSSSORM_UPLOAD WITH (ROWLOCK)   SET DASHBOARD_BUILT=0
		where  sp_id=@nSpId

		SET @NSTEP = 105
		DELETE FROM  eosssord with (ROWLOCK) WHERE memo_id=@CKEYFIELDVAL1
  END	

  SET @nStep=110

  UPDATE SOR_EOSSSORM_UPLOAD WITH (ROWLOCK)  SET payment_advice_amount=b.net_payable,
			  vendor_amount=b.net_payable-ISNULL(advance_adjusted,0),last_update=getdate() FROM 
			  (SELECT SUM(net_payable) as net_payable from SOR_EOSSSORD_UPLOAD WITH (ROWLOCK)
			   WHERE sp_id=@nSpId) b
  where  sp_id=@nSpId  	

  SET @NSTEP = 130
  -- RECHECKING IF ID IS STILL LATER  
  IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
  BEGIN  
	 SET @CERRMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'  
	 GOTO END_PROC  
  END
  
  SET @cFilterCondition=' b.sp_id='''+@nSpId+''''

  DECLARE @bAddmode BIT
  SET @bAddmode=(CASE WHEN @NUPDATEMODE=1 THEN 1 ELSE 0 END)

  SET @NSTEP = 140  -- UPDATING MASTER TABLE  
  EXEC UPDATEMASTERXN_OPT   
      @CSOURCEDB = ''  
    , @CSOURCETABLE = 'SOR_EOSSSORM_UPLOAD'
    , @CDESTDB  = ''  
    , @CDESTTABLE = 'EOSSSORM'
    , @CKEYFIELD1 = 'memo_id'
    , @BALWAYSUPDATE = 1  
    , @cFilterCondition=@cFilterCondition
	, @lInsertonly= @bAddmode
  
  SET @NSTEP = 150  -- UPDATING MASTER TABLE  
  EXEC UPDATEMASTERXN_OPT   
      @CSOURCEDB = ''
    , @CSOURCETABLE = 'SOR_EOSSSORD_UPLOAD'
    , @CDESTDB  = ''  
    , @CDESTTABLE = 'EOSSSORD'
    , @CKEYFIELD1 = 'ROW_ID'  
    , @BALWAYSUPDATE = 1
    , @cFilterCondition=@cFilterCondition
	, @lInsertonly= @bAddmode

 END TRY  
 BEGIN CATCH  
    SET @CERRMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
 END CATCH 
   
END_PROC:  
	INSERT INTO @OUTPUT(MEMO_ID,ERRMSG)
	SELECT @CKEYFIELDVAL1,ISNULL(@CERRMSG,'') 
  
IF @@TRANCOUNT>0  
 BEGIN  
  IF ISNULL(@CERRMSG,'')='' 
  BEGIN
	COMMIT TRANSACTION 
  END
  ELSE  
	ROLLBACK  
  END  
  

  DELETE FROM  SOR_EOSSSORM_UPLOAD WITH (ROWLOCK) WHERE sp_id=@nSpId					
  DELETE FROM  SOR_EOSSSORD_UPLOAD WITH (ROWLOCK) WHERE sp_id=@nSpId
  
  SELECT * FROM @OUTPUT

END        
---------- END OF PROCEDURE SAVETRAN_EOSSSOR
