create PROCEDURE SP3S_BILLS_PAYMODES_TAXES--(LocId 3 digit change by Sanjay:04-11-2024)
@MODE INT,
@CDEPT_ID VARCHAR(5)='',
@FROMDT VARCHAR(20),
@TODT VARCHAR(20),
@TAXPERCENTAGE VARCHAR(1000)='',
@NCLUBBEDMODE INT=1,
@NEST NUMERIC(1)=0 -- 1 FOR DEFAULT 2 FOR BILL_DATE WISE CLUBBED
--WITH ENCRYPTION
AS
BEGIN
IF @MODE=0 OR @MODE>2
   GOTO ENDPROC
   
    DECLARE @TAX NUMERIC(10,2),@QRY NVARCHAR(MAX),@CASHMODE VARCHAR(100),@TEMP_NAME VARCHAR(100),
					@VATR VARCHAR(100),@CERRMSGOUT VARCHAR(500),@COLNAME NVARCHAR(MAX),@COUNTSR INT,
					@TOTALCOUNT INT,@COLNAME1 NVARCHAR(MAX),@CFILTER INT
					
					
   SET @CFILTER=''
  IF @NEST=1
   SET @CFILTER=0 
  IF @NEST=0
   SET @CFILTER=1
   
   
	
	 IF @MODE=1
    SET @NCLUBBEDMODE=2
    IF @MODE=2
    SET @NCLUBBEDMODE=1 
    				
	SET @COLNAME=''				
	SET @COUNTSR=0
	/*
		CALL THIS PROCEDURE TO CHECK IF SOME BILLS ARE PENDING FOR CASHER. EITHER FROM CASH MEMO TO CASHIER OR
		PACKSLIP TO CASHMEMO.	   
   */
   EXEC SP3S_CHECK_PENDING_BILLS 
     @DFROM_DT=@FROMDT
	,@DTO_DT=@TODT
	,@CDEPT_ID=@CDEPT_ID
	,@BESTIMATEENABLED=0
	,@CUSERCODE=''
	,@CBINID=''
	,@CERRMSGOUT=@CERRMSGOUT OUTPUT

	IF ISNULL(@TAXPERCENTAGE,'')=''
		SET @TAXPERCENTAGE='1000'
  
	 SET @VATR = 'VAT'

	IF OBJECT_ID ('TEMPDB..#TEMP_AMT_DET','U' ) IS NOT NULL 
					   DROP TABLE #TEMP_AMT_DET 
				
			CREATE TABLE #TEMP_AMT_DET (CM_ID2 VARCHAR(100))
				
			SET @QRY=N'SELECT DISTINCT CMM.CM_ID AS CM_ID2  
				FROM CMD01106 CMD
				JOIN CMM01106 CMM ON CMD.CM_ID=CMM.CM_ID
				WHERE  CMM.CM_DT BETWEEN '''+@FROMDT+''' AND '''+@TODT+''' AND 
				('''+@TAXPERCENTAGE+'''=''1000'' OR TAX_PERCENTAGE IN('+@TAXPERCENTAGE+'))
				AND CMM.LOCATION_CODE = (CASE WHEN ISNULL('''+@CDEPT_ID+''','''') = '''' THEN CMM.LOCATION_CODE ELSE '''+@CDEPT_ID+''' END)'
				
             PRINT @QRY
             INSERT INTO #TEMP_AMT_DET
             EXEC SP_EXECUTESQL @QRY

		SELECT CM.CM_ID,LOCATION=LL.DEPT_ID,LL.DEPT_NAME AS LOCATION_ALIAS,LL.DEPT_NAME AS LOCATION_NAME,
		CASE WHEN MEMO_TYPE=1 THEN 'RETAIL' ELSE 'TAX' END AS [RETAIL_TAX],
		CM_NO AS BILL_NO,CM_DT AS BILL_DATE,
		CASE WHEN CANCELLED=0 THEN 'NO' ELSE 'YES' END AS [CANCELLED],
		CASE WHEN PARTY_TYPE =1 THEN 'CUSTOMER' ELSE 'LEDGER' END [CUSTOMER_LEDGER],
		LM.AC_NAME,
		(CASE WHEN ISNULL (CUS.CUSTOMER_FNAME,'') <> '' THEN CUS.CUSTOMER_FNAME+' '+CUS.CUSTOMER_LNAME ELSE USER_CUSTOMER_CODE END) AS CUSTOMER_NAME,
		ROUND_OFF,
		CM.DISCOUNT_AMOUNT AS DISCOUNT_AMOUNT,CM.DISCOUNT_PERCENTAGE AS DISCOUNT_PERCENT,ST.STATE AS LOCATION_STATE,
		CM.NET_AMOUNT AS BILL_AMOUNT,
		CM.NET_AMOUNT-SUM(CD.TAX_AMOUNT)+SUM(CASE WHEN UPDATE_AC=1 THEN CMM_DISCOUNT_AMOUNT ELSE 0 END)  AS SALE_AMOUNT,
		DEL.LAST_UPDATE AS LAST_DAY_CLOSE  
		INTO #TEMP_MAIN 
		FROM CMM01106 CM
		JOIN #TEMP_AMT_DET TCMM ON CM.CM_ID=TCMM.CM_ID2
		INNER JOIN CMD01106 CD ON CM.CM_ID = CD.CM_ID 
		INNER JOIN LOCATION LL ON LL.DEPT_ID=CM.location_code
		INNER JOIN LM01106 LM ON LM.AC_CODE = CM.AC_CODE 
		INNER JOIN CUSTDYM CUS ON CUS.CUSTOMER_CODE = CM.CUSTOMER_CODE
		INNER JOIN AREA AR ON AR.AREA_CODE = LL.AREA_CODE 
		INNER JOIN CITY CC ON CC.CITY_CODE = AR.CITY_CODE 
		INNER JOIN STATE ST ON ST.STATE_CODE = CC.STATE_CODE 
		LEFT OUTER JOIN DAYENDLOG AS DEL ON DEL.DEPT_ID = LL.DEPT_ID 
		JOIN DTM ON DTM.DT_CODE=CM.DT_CODE
		WHERE (@CFILTER=0 OR CM.MEMO_TYPE=@CFILTER)
		GROUP BY CM.CM_ID,LL.DEPT_ID,LL.DEPT_NAME,LL.DEPT_NAME ,MEMO_TYPE,
		CM_NO,CM_DT,CANCELLED,PARTY_TYPE,CUSTOMER_FNAME,CUSTOMER_LNAME,USER_CUSTOMER_CODE,
		LM.AC_NAME,
		ROUND_OFF,
		ST.STATE,
		DEL.LAST_UPDATE,CM.SUBTOTAL ,CM.DISCOUNT_AMOUNT,CM.DISCOUNT_PERCENTAGE,CM.NET_AMOUNT 

				IF OBJECT_ID ('TEMPDB..#TEMP_AMT_DET1','U' ) IS NOT NULL 
					   DROP TABLE #TEMP_AMT_DET1
					   
			 CREATE TABLE #TEMP_AMT_DET1(PAYMODE_GRP_CODE VARCHAR(100),COLUMN_NAME VARCHAR(100))
  IF @MODE=1
  GOTO LBLDETAILS 
  --GOTO LBLSUMMARY
  IF @MODE =2
  GOTO LBLDETAILS 	
 	
		LBLSUMMARY:	
				INSERT INTO #TEMP_AMT_DET1
				SELECT DISTINCT GM.PAYMODE_GRP_CODE, --MM.PAYMODE_NAME,
				'ZZ'+REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(CASE WHEN GM.PAYMODE_GRP_NAME='01. CURRENCY' THEN '01_CASH_AMOUNT'
				                                                   WHEN GM.PAYMODE_GRP_NAME='02. CREDIT/DEBIT CARDS' THEN '02_CC_AMOUNT' 
				                                                        ELSE GM.PAYMODE_GRP_NAME END
				,' ','_'),'/','_'),'\','_'),'-','_'),'.','') AS COLUMN_NAME
				----'A'+REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(GM.PAYMODE_GRP_NAME,' ','_'),'/','_'),'\','_'),'-','_')+'__'+REPLACE(REPLACE(REPLACE(REPLACE(MM.PAYMODE_NAME,' ','_'),'/','_'),'\','_'),'-','_'),'.','')  AS COLUMN_NAME 
				--INTO #TEMP_AMT_DET1 
				FROM PAYMODE_XN_DET PP 
				JOIN PAYMODE_MST MM ON PP.PAYMODE_CODE = MM.PAYMODE_CODE 
				JOIN CMM01106 CMM ON CMM.CM_ID = PP.MEMO_ID 
				JOIN #TEMP_AMT_DET TMM ON TMM.CM_ID2=CMM.CM_ID
				JOIN PAYMODE_GRP_MST GM ON GM.PAYMODE_GRP_CODE = MM.PAYMODE_GRP_CODE
				WHERE PP.XN_TYPE ='SLS' 
				
				IF CURSOR_STATUS('GLOBAL','CURR') IN (0,1)  
				BEGIN  
				   CLOSE CURR  
				   DEALLOCATE CURR  
				END
				
				SET @TOTALCOUNT=(SELECT COUNT(*) FROM #TEMP_AMT_DET1)
				
				DECLARE CURR CURSOR FOR 
				SELECT * FROM #TEMP_AMT_DET1 ORDER BY COLUMN_NAME
				OPEN CURR
				FETCH NEXT FROM CURR INTO @CASHMODE,@TEMP_NAME
				WHILE @@FETCH_STATUS =0
				BEGIN
				        SET @COUNTSR=@COUNTSR+1
				        IF @COUNTSR<@TOTALCOUNT
				        SET @COLNAME=@COLNAME+'SUM(ISNULL(['+@TEMP_NAME+'],0)) AS ['+@TEMP_NAME+'],'
				        ELSE
				        SET @COLNAME=@COLNAME+'SUM(ISNULL(['+@TEMP_NAME+'],0)) AS ['+@TEMP_NAME+']'
				        
				         
						SET @QRY = N'ALTER TABLE #TEMP_AMT_DET ADD ['+@TEMP_NAME+'] NUMERIC(18,4)'
						PRINT @QRY
						EXEC SP_EXECUTESQL @QRY 
					
						SET @QRY = N' UPDATE AA SET ['+@TEMP_NAME+'] = AMT FROM #TEMP_AMT_DET AA JOIN (
						SELECT  CMM.CM_ID ,(CASE WHEN CMM.CANCELLED = 0 THEN SUM(AMOUNT) ELSE 0 END) AS AMT 
						FROM PAYMODE_XN_DET PP 
						JOIN PAYMODE_MST MM ON PP.PAYMODE_CODE = MM.PAYMODE_CODE 
						JOIN CMM01106 CMM ON CMM.CM_ID = PP.MEMO_ID WHERE PP.XN_TYPE =''SLS'' AND 
						MM.PAYMODE_GRP_CODE ='''+@CASHMODE+'''
						AND  CMM.CM_DT BETWEEN '''+@FROMDT+''' AND '''+@TODT+'''
						GROUP BY CMM.CM_ID,CMM.CANCELLED ) BB ON AA.CM_ID2 = BB.CM_ID   '
						PRINT @QRY
						EXEC SP_EXECUTESQL @QRY 
					FETCH NEXT FROM CURR INTO @CASHMODE,@TEMP_NAME	
				END
				CLOSE CURR
				DEALLOCATE CURR
		
		GOTO LAST
		 -----------**********************---------------------
		 
		 LBLDETAILS:
		     INSERT INTO #TEMP_AMT_DET1
				 SELECT DISTINCT  MM.PAYMODE_CODE ,
				'A_'+REPLACE(REPLACE(REPLACE(REPLACE(REPLACE(CASE WHEN GM.PAYMODE_GRP_NAME='01. CURRENCY' THEN '01_CASH_AMOUNT'
				                                                   WHEN GM.PAYMODE_GRP_NAME='02. CREDIT/DEBIT CARDS' THEN '02_CC_AMOUNT' 
				                                                        ELSE GM.PAYMODE_GRP_NAME END ,' ','_'),'/','_'),'\','_'),'-','_')+'__'+REPLACE(REPLACE(REPLACE(REPLACE(MM.PAYMODE_NAME,' ','_'),'/','_'),'\','_'),'-','_'),'.','')  AS COLUMN_NAME 
				FROM PAYMODE_XN_DET PP 
				JOIN PAYMODE_MST MM ON PP.PAYMODE_CODE = MM.PAYMODE_CODE 
				JOIN CMM01106 CMM ON CMM.CM_ID = PP.MEMO_ID 
				JOIN #TEMP_AMT_DET TMM ON TMM.CM_ID2=CMM.CM_ID
				JOIN PAYMODE_GRP_MST GM ON GM.PAYMODE_GRP_CODE = MM.PAYMODE_GRP_CODE
				WHERE PP.XN_TYPE ='SLS' 
				
				IF CURSOR_STATUS('GLOBAL','CURR') IN (0,1)  
				BEGIN  
				   CLOSE CURR  
				   DEALLOCATE CURR  
				END
				SET @TOTALCOUNT=(SELECT COUNT(*) FROM #TEMP_AMT_DET1)
				
				DECLARE CURR CURSOR FOR 
				SELECT * FROM #TEMP_AMT_DET1 ORDER BY COLUMN_NAME
				OPEN CURR
				FETCH NEXT FROM CURR INTO @CASHMODE,@TEMP_NAME
				WHILE @@FETCH_STATUS =0
				BEGIN
				        SET @COUNTSR=@COUNTSR+1
				        IF @COUNTSR<@TOTALCOUNT
				        SET @COLNAME=@COLNAME+'SUM(ISNULL(['+@TEMP_NAME+'],0)) AS ['+@TEMP_NAME+'],'
				        ELSE
				        SET @COLNAME=@COLNAME+'SUM(ISNULL(['+@TEMP_NAME+'],0)) AS ['+@TEMP_NAME+']'
				        
						SET @QRY = N'ALTER TABLE #TEMP_AMT_DET ADD ['+@TEMP_NAME+'] NUMERIC(18,4)'
						PRINT @QRY
						EXEC SP_EXECUTESQL @QRY 
					
						SET @QRY = N' UPDATE AA SET ['+@TEMP_NAME+'] = AMT FROM #TEMP_AMT_DET AA JOIN (
						SELECT  CMM.CM_ID ,(CASE WHEN CMM.CANCELLED = 0 THEN SUM(AMOUNT) ELSE 0 END) AS AMT 
						FROM PAYMODE_XN_DET PP 
						JOIN PAYMODE_MST MM ON PP.PAYMODE_CODE = MM.PAYMODE_CODE 
						JOIN CMM01106 CMM ON CMM.CM_ID = PP.MEMO_ID 
						JOIN #TEMP_AMT_DET TMM ON TMM.CM_ID2=CMM.CM_ID
						WHERE PP.XN_TYPE =''SLS'' AND 
						MM.PAYMODE_CODE ='''+@CASHMODE+'''
						GROUP BY CMM.CM_ID,CMM.CANCELLED ) BB ON AA.CM_ID2 = BB.CM_ID '
						
						PRINT @QRY
						EXEC SP_EXECUTESQL @QRY 
					FETCH NEXT FROM CURR INTO @CASHMODE,@TEMP_NAME	
				END
				CLOSE CURR
				DEALLOCATE CURR 
		    
		 GOTO LAST
		 
         LAST:
			IF CURSOR_STATUS('GLOBAL','CURR') IN (0,1)  
			BEGIN  
			   CLOSE CURR  
			   DEALLOCATE CURR  
			END  
			
			IF OBJECT_ID ('TEMPDB..#TEMP_PERCENTAGE','U' ) IS NOT NULL 
					   DROP TABLE #TEMP_PERCENTAGE
		
		    CREATE TABLE  #TEMP_PERCENTAGE(TAX_PERCENTAGE NUMERIC(18,2))
		
		    SET @QRY =N'SELECT DISTINCT CAST(TAX_PERCENTAGE AS NUMERIC(18,2)) AS TT   
		    FROM CMD01106 A JOIN CMM01106 B ON A.CM_ID = B.CM_ID 
		    JOIN #TEMP_AMT_DET TMM ON TMM.CM_ID2=B.CM_ID'
			
			PRINT @QRY
			INSERT INTO #TEMP_PERCENTAGE
			EXEC SP_EXECUTESQL @QRY	
           
            SET @COUNTSR=0
            SET @TOTALCOUNT=(SELECT COUNT(*) FROM #TEMP_PERCENTAGE)
            SET @COLNAME1=''
            
			DECLARE CURR CURSOR FOR 
			SELECT * FROM #TEMP_PERCENTAGE
			ORDER BY TAX_PERCENTAGE
			
			--SELECT DISTINCT TAX_PERCENTAGE AS TT   FROM CMD01106 A JOIN CMM01106 B ON A.CM_ID = B.CM_ID 
			--WHERE CM_DT BETWEEN @FROMDT AND  @TODT 
			--AND CMM.location_codeB.CM_ID,2) = (CASE WHEN ISNULL(@CDEPT_ID,'') = '' THEN CMM.location_codeB.CM_ID,2) ELSE @CDEPT_ID END)
			--ORDER BY TAX_PERCENTAGE
			
			OPEN CURR
			FETCH NEXT FROM CURR INTO @TAX
			WHILE @@FETCH_STATUS =0
			BEGIN 
			       SET @COUNTSR=@COUNTSR+1
				   IF @COUNTSR<=@TOTALCOUNT
				   BEGIN
				   SET @COLNAME1=@COLNAME1+'SUM(ISNULL(['+@VATR+REPLACE(RTRIM(LTRIM(STR(@TAX,10,2))),'.','_')+'_QTY],0)) AS ['+@VATR+REPLACE(RTRIM(LTRIM(STR(@TAX,10,2))),'.','_')+'_QTY],'
				   SET @COLNAME1=@COLNAME1+'SUM(ISNULL(['+@VATR+REPLACE(RTRIM(LTRIM(STR(@TAX,10,2))),'.','_')+'_VAL],0)) AS ['+@VATR+REPLACE(RTRIM(LTRIM(STR(@TAX,10,2))),'.','_')+'_VAL],'
				   SET @COLNAME1=@COLNAME1+'SUM(ISNULL(['+@VATR+REPLACE(RTRIM(LTRIM(STR(@TAX,10,2))),'.','_')+'_TAX],0)) AS ['+@VATR+REPLACE(RTRIM(LTRIM(STR(@TAX,10,2))),'.','_')+'_TAX],'
				   END
				   
				   IF @COUNTSR<@TOTALCOUNT
				   SET @COLNAME1=@COLNAME1+'SUM(ISNULL(['+@VATR+REPLACE(RTRIM(LTRIM(STR(@TAX,10,2))),'.','_')+'_TOTAL],0)) AS ['+@VATR+REPLACE(RTRIM(LTRIM(STR(@TAX,10,2))),'.','_')+'_TOTAL],'
				   ELSE
				   SET @COLNAME1=@COLNAME1+'SUM(ISNULL(['+@VATR+REPLACE(RTRIM(LTRIM(STR(@TAX,10,2))),'.','_')+'_TOTAL],0)) AS ['+@VATR+REPLACE(RTRIM(LTRIM(STR(@TAX,10,2))),'.','_')+'_TOTAL]'
				     
					PRINT @TAX
					SET @QRY = N'ALTER TABLE #TEMP_AMT_DET ADD ['+@VATR+REPLACE(RTRIM(LTRIM(STR(@TAX,10,2))),'.','_')+'_QTY]  NUMERIC(14,2) '
					PRINT @QRY
					EXEC SP_EXECUTESQL @QRY 
					SET @QRY = N'ALTER TABLE #TEMP_AMT_DET ADD ['+@VATR+REPLACE(RTRIM(LTRIM(STR(@TAX,10,2))),'.','_')+'_VAL]  NUMERIC(14,2) '
					PRINT @QRY
					EXEC SP_EXECUTESQL @QRY 
					SET @QRY = N'ALTER TABLE #TEMP_AMT_DET ADD ['+@VATR+REPLACE(RTRIM(LTRIM(STR(@TAX,10,2))),'.','_')+'_TAX]  NUMERIC(14,2) '
					PRINT @QRY
					EXEC SP_EXECUTESQL @QRY
					SET @QRY = N'ALTER TABLE #TEMP_AMT_DET ADD ['+@VATR+REPLACE(RTRIM(LTRIM(STR(@TAX,10,2))),'.','_')+'_TOTAL]  NUMERIC(14,2) '
					PRINT @QRY
					EXEC SP_EXECUTESQL @QRY
					
					PRINT 'PRINT'
					SET @QRY = N'UPDATE AA SET ['+@VATR+''+REPLACE(RTRIM(LTRIM(STR(@TAX,10,2))),'.','_')+'_VAL] = ISNULL(SAL_VAL,0), ['+@VATR+''+REPLACE(RTRIM(LTRIM(STR(@TAX,10,2))),'.','_')+'_QTY]= SAL_QTY ,
					['+@VATR+''+REPLACE(RTRIM(LTRIM(STR(@TAX,10,2))),'.','_')+'_TAX] = SAL_PCT ,
					['+@VATR+''+REPLACE(RTRIM(LTRIM(STR(@TAX,10,2))),'.','_')+'_TOTAL]=ISNULL(SAL_VAL,0)+ISNULL(SAL_PCT,0)
					FROM #TEMP_AMT_DET AA LEFT OUTER JOIN (
					SELECT CM_ID, SUM(SAL_VAL) AS SAL_VAL, SUM(SAL_QTY) AS SAL_QTY,SUM(SAL_PCT) AS SAL_PCT, SUM(INC_TAX_AMT) AS INC_TAX_AMT FROM 	
					(
					SELECT CD.CM_ID, CM.CM_DT,
					RFNET-CD.TAX_AMOUNT+(CASE WHEN UPDATE_AC=1 THEN CMM_DISCOUNT_AMOUNT ELSE 0 END) AS SAL_VAL,
					(CASE WHEN CANCELLED = 0 THEN CD.QUANTITY ELSE 0 END) AS SAL_QTY,
					(CASE WHEN CANCELLED = 0 THEN CD.TAX_AMOUNT ELSE 0 END) AS SAL_PCT,
					(CASE WHEN CANCELLED = 0 AND CD.TAX_METHOD=2 THEN CD.TAX_AMOUNT ELSE 0 END) AS INC_TAX_AMT
					FROM CMD01106 CD JOIN CMM01106 CM ON CD.CM_ID = CM.CM_ID 
					JOIN DTM ON DTM.DT_CODE=CM.DT_CODE
					JOIN LOCATION C ON  CM.location_code = C.DEPT_ID
					JOIN SKU D ON D.PRODUCT_CODE = CD.PRODUCT_CODE
					JOIN ARTICLE E ON E.ARTICLE_CODE = D.ARTICLE_CODE
					JOIN SECTIOND F ON E.SUB_SECTION_CODE = F.SUB_SECTION_CODE
					JOIN SECTIONM G ON G.SECTION_CODE = F.SECTION_CODE 
					LEFT JOIN 
					(
					SELECT DISTINCT CM_ID FROM DSD01106 DSD(NOLOCK) JOIN DSM01106 DSM(NOLOCK) ON DSD.DS_ID=DSM.DS_ID
					WHERE DSM.CANCELLED=0
					)DSD ON CD.CM_ID=DSD.CM_ID
					
					WHERE CM.CANCELLED = 0 
					AND TAX_PERCENTAGE = '+RTRIM(LTRIM(STR(@TAX,7,3)))+'	
					AND  CM.CM_DT BETWEEN '''+@FROMDT+''' AND '''+@TODT+''' 
				 ) A GROUP BY CM_ID) CC ON AA.CM_ID2 = CC.CM_ID '
					 
			     -- SELECT CD.CM_ID,
				 --   (CASE WHEN CANCELLED = 0 THEN SUM(RFNET-(CASE WHEN UPDATE_AC=1 THEN 0 ELSE CMM_DISCOUNT_AMOUNT END))-((CASE WHEN TAX_TYPE<>2 THEN SUM(CD.TAX_AMOUNT) ELSE 0 END )) ELSE 0 END) AS SAL_VAL,
				 --   (CASE WHEN CANCELLED = 0 THEN SUM(CD.QUANTITY) ELSE 0 END) AS SAL_QTY,
				 --   (CASE WHEN CANCELLED = 0 THEN SUM(CD.TAX_AMOUNT) ELSE 0 END) AS SAL_PCT,
				 --   SUM((CASE WHEN CANCELLED = 0 AND CD.TAX_METHOD=2 THEN CD.TAX_AMOUNT ELSE 0 END)) AS INC_TAX_AMT
					--FROM CMD01106 CD JOIN CMM01106 CM ON CD.CM_ID = CM.CM_ID 
					--JOIN DTM ON DTM.DT_CODE=CM.DT_CODE
					--WHERE TAX_PERCENTAGE = '+RTRIM(LTRIM(STR(@TAX,7,3)))+'	
					--AND  CM.CM_DT BETWEEN '''+@FROMDT+''' AND '''+@TODT+''' 
					--GROUP BY CD.CM_ID,CD.TAX_TYPE,CANCELLED,CM.DISCOUNT_PERCENTAGE 
				PRINT @QRY			  
				EXEC SP_EXECUTESQL @QRY 
				
				FETCH NEXT FROM CURR INTO @TAX	
			END
			CLOSE CURR
			DEALLOCATE CURR 
			----LAST PRINTING
			
		IF @NCLUBBEDMODE=1
		BEGIN
		 --IF @TAXPERCENTAGE <> '1000' AND @TAXPERCENTAGE <> '0.000,5.000'  AND @TAXPERCENTAGE <> ''
		 -- BEGIN
			--DECLARE @DTUSQL NVARCHAR(MAX)
			--SET @DTUSQL = N'UPDATE T2 SET  T2.['+@VATR+''+REPLACE(RTRIM(LTRIM(STR(@TAX,10,2))),'.','_')+'_VAL] = T1.SALE_AMOUNT  , 
			--T2.['+@VATR+''+REPLACE(RTRIM(LTRIM(STR(@TAX,10,2))),'.','_')+'_TOTAL] =(CASE WHEN [CANCELLED] = ''YES'' THEN 0 ELSE T1.SALE_AMOUNT END) +  T2.['+@VATR+''+REPLACE(RTRIM(LTRIM(STR(@TAX,10,2))),'.','_')+'_TAX] 
			--FROM #TEMP_MAIN T1 RIGHT OUTER JOIN #TEMP_AMT_DET T2 ON T1.CM_ID = T2.CM_ID2'	
			--EXEC SP_EXECUTESQL @DTUSQL	
			--PRINT @DTUSQL
		 --  END
			
			SELECT LOCATION_STATE AS STATE,LOCATION_NAME AS LOCATION,LAST_DAY_CLOSE AS LAST_DAY_CLOSE_DT,RETAIL_TAX AS [TYPE],
			BILL_DATE,BILL_NO,
			(CASE WHEN [CUSTOMER_LEDGER] = 'CUSTOMER' THEN CUSTOMER_NAME WHEN [CUSTOMER_LEDGER] = 'LEDGER' THEN AC_NAME END)AS CUSTOMER_NAME,
			(CASE WHEN [CANCELLED] = 'YES' THEN 0 ELSE T1 .BILL_AMOUNT END) AS BILL_AMOUNT,
			(CASE WHEN [CANCELLED] = 'YES' THEN 0 ELSE T1 .SALE_AMOUNT END) AS SALE_AMOUNT,
			(CASE WHEN [CANCELLED] = 'YES' THEN 'CANCELLED' ELSE '' END) AS STATUS,T2.* 
			FROM #TEMP_MAIN T1 
			JOIN #TEMP_AMT_DET T2 ON T1.CM_ID = T2.CM_ID2
			ORDER BY BILL_DATE,BILL_NO
		END	
		ELSE
		BEGIN
		    DECLARE @DTSQL NVARCHAR(MAX)
		    
		    SET @DTSQL=N'SELECT LOCATION_STATE AS STATE,LOCATION_NAME AS LOCATION,
		         LAST_DAY_CLOSE AS LAST_DAY_CLOSE_DT,RETAIL_TAX AS [TYPE],
		         BILL_DATE,BILL_NO=CONVERT(VARCHAR(100),''''),
				 SUM((CASE WHEN [CANCELLED] = ''YES'' THEN 0 ELSE T1.BILL_AMOUNT END)) AS BILL_AMOUNT,
				 SUM((CASE WHEN [CANCELLED] = ''YES'' THEN 0 ELSE T1.SALE_AMOUNT END)) AS SALE_AMOUNT'
				  +CASE WHEN @COLNAME<>'' THEN ',' ELSE '' END+ +@COLNAME+
				  +CASE WHEN @COLNAME1<>'' THEN ',' ELSE '' END+ +@COLNAME1+'
			 FROM #TEMP_MAIN T1 
			 JOIN #TEMP_AMT_DET T2 ON T1.CM_ID = T2.CM_ID2
			 GROUP BY LOCATION_STATE ,LOCATION_NAME ,LAST_DAY_CLOSE ,RETAIL_TAX ,BILL_DATE
			 ORDER BY BILL_DATE'
			 PRINT @DTSQL
			 EXEC SP_EXECUTESQL @DTSQL
			  --(CASE WHEN [CANCELLED] = 'YES' THEN 0 ELSE T1 .BILL_AMOUNT END) ,
			 -- (CASE WHEN [CANCELLED] = 'YES' THEN 0 ELSE T1 .SALE_AMOUNT END) 
		END
			SELECT ISNULL(@CERRMSGOUT,'') AS ALERT_MESSAGE				
ENDPROC:				
END				
--******************************** END OF PROCEDURE - SP3S_BILLS_PAYMODES_TAXES
