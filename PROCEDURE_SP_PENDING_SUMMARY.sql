create PROCEDURE SP_PENDING_SUMMARY
(
  @CUSTOMER_CODE VARCHAR(20)='',
  @MEMO_DATE DATETIME='',
  @LOC_ID VARCHAR(10)='',
  @BESTIMATEENABLED BIT = 1,
  @NAGEING INT =0,
  @BADVANCES BIT=0,
  @BAPPROVAL BIT=0,
  @BCREDIT_ISSUE BIT=0,
  @BCREDIT_NOTE BIT=0,
  @BGIT BIT=1
)
AS
BEGIN
--(dinkar) Replace  left(memoid,2) to Location_code 

    
    IF @MEMO_DATE=''
    SET @MEMO_DATE=GETDATE()
    
    
    IF OBJECT_ID('TEMPDB..#PENDING_SUMMARY','U') IS NOT NULL
			   DROP TABLE #PENDING_SUMMARY
			SELECT TYPE=CAST('' AS VARCHAR(50)),TOTAL_MEMOES=CAST(0 AS NUMERIC(18,0)),
			       AMOUNT=CAST(0 AS NUMERIC(18,2)),QUANTITY=CAST(0 AS NUMERIC(18,0))
			INTO #PENDING_SUMMARY
			WHERE 1=2
	 --1. CREDIT NOTES	
	 IF ISNULL(@BCREDIT_NOTE,1)=1	
	 BEGIN
	 INSERT INTO #PENDING_SUMMARY(TYPE,TOTAL_MEMOES,AMOUNT,QUANTITY)  		
     EXEC SP_DSR_PENDING_CREDITNOTES
          @CUSTOMER_CODE ='',
          @MEMO_DATE =@MEMO_DATE,
          @BSHOW =1,
          @LOC_ID =@LOC_ID,
          @BCALLEDFROMAPI =1,
          @NAGEING  =10,
          @SUMMARY =1
     END
     
       --2. CREDIT ISSUE
      IF ISNULL(@BCREDIT_ISSUE,0)=1
      BEGIN
       INSERT INTO #PENDING_SUMMARY(TYPE,TOTAL_MEMOES,AMOUNT,QUANTITY)    
       EXEC SP_DSR_PENDING_CREDITISSUE
	   @DTODT=@MEMO_DATE,
	   @CCUSTOMERCODE ='',
	   @NMODE  = 1,
	   @BSHOW =1,
	   @LOC_ID =@LOC_ID,
	   @BCALLEDFROMAPI=1,
	   @NAGEING  =@NAGEING,
	   @NSUMMARY =1 
	  END
	   
	    --3. CREDIT PENDING_ADVANCES
	  IF ISNULL(@BADVANCES,0)=1
	  BEGIN
	   INSERT INTO #PENDING_SUMMARY(TYPE,TOTAL_MEMOES,AMOUNT,QUANTITY) 
	   EXEC SP_DSR_PENDING_ADVANCES
	   @DTODT =@MEMO_DATE,
	   @CCUSTOMERCODE ='',
	   @BESTIMATEENABLED  = 1,
	   @BSHOW =1,
	   @LOC_ID ='',
	   @BCALLEDFROMAPI =1,
	   @NAGEING  =@NAGEING,
	   @NSUMMARY =1 
	  
	  END 
	   --3. CREDIT PENDING_GIT
	  IF ISNULL(@BGIT,0)=1
	  BEGIN
       INSERT INTO #PENDING_SUMMARY(TYPE,TOTAL_MEMOES,AMOUNT,QUANTITY)  
       EXEC SP_GET_PENDING_GIT @NSUMMARY=1
      END
      
      IF ISNULL(@BAPPROVAL,0)=1
	  BEGIN
        DECLARE @CCUSTOMER_NAME VARCHAR(100),@DATE VARCHAR(20),@CCMD NVARCHAR(MAX)
	    SELECT @CCUSTOMER_NAME = CUSTOMER_FNAME+' '+CUSTOMER_LNAME FROM CUSTDYM WHERE CUSTOMER_CODE = @CUSTOMER_CODE
		SET @DATE=@MEMO_DATE
		
			
		IF OBJECT_ID('DSR_PENDING_CREDITNOTES_TEMP','U') IS NOT NULL
		DROP TABLE DSR_PENDING_CREDITNOTES_TEMP
		
		IF OBJECT_ID('TEMPDB..#PENDING_APPROVAL_1','U') IS NOT NULL
			DROP TABLE #PENDING_APPROVAL_1
		CREATE TABLE #PENDING_APPROVAL_1 (dept_id varchar(4), MEMO_ID VARCHAR(100),MEMO_NO VARCHAR(100),CUSTOMER_CODE VARCHAR(100),MEMO_DT DATETIME,ROW_ID VARCHAR(100),QUANTITY NUMERIC(14,2),REMARKS VARCHAR(MAX))
		SET @DATE = CONVERT(VARCHAR,@MEMO_DATE,120)

		SET @CCMD = N'SELECT a.location_code dept_id, CAST(A.MEMO_ID AS VARCHAR(100)) AS MEMO_ID ,CAST(MEMO_NO AS VARCHAR(100)) AS MEMO_NO 
					 ,CUSTOMER_CODE,CAST(MEMO_DT AS DATETIME) AS MEMO_DT,CAST(B.ROW_ID AS VARCHAR(100)) ROW_ID
					 ,CAST(B.QUANTITY AS NUMERIC(14,2)) QUANTITY,REMARKS   
					 FROM APM01106  A (NOLOCK) JOIN APD01106 B (NOLOCK) ON A.MEMO_ID = B.MEMO_ID
					 WHERE MEMO_DT <= '''+@DATE+''' AND CANCELLED = 0 
					 AND ('''+@LOC_ID+'''='''' OR a.location_code='''+@LOC_ID+''')'
		PRINT @CCMD
		INSERT INTO #PENDING_APPROVAL_1
		EXEC SP_EXECUTESQL @CCMD
		--SELECT * FROM #PENDING_APPROVAL_1
		

		IF OBJECT_ID('TEMPDB..#PENDING_APPROVAL_2','U') IS NOT NULL
			DROP TABLE #PENDING_APPROVAL_2
		
		SELECT A.APD_ROW_ID,SUM(A.QUANTITY) AS QUANTITY 
		INTO #PENDING_APPROVAL_2 
		FROM APPROVAL_RETURN_DET A (NOLOCK)
		JOIN APPROVAL_RETURN_MST B (NOLOCK) ON A.MEMO_ID=B.MEMO_ID
		WHERE B.CANCELLED=0 AND (@LOC_ID='' OR b.location_Code =@LOC_ID)
		GROUP BY A.APD_ROW_ID
		
		
		
		IF OBJECT_ID('TEMPDB..#PENDING_AMOUNT1','U') IS NOT NULL
			DROP TABLE #PENDING_AMOUNT1
			
		SELECT A.MEMO_ID,SUM((A.QUANTITY - ISNULL(B.QUANTITY,0))*MRP) AS PENDING_AMOUNT 
		INTO #PENDING_AMOUNT1  
		FROM APD01106 A (NOLOCK)
		JOIN APM01106 APM (NOLOCK) ON A.MEMO_ID=APM.MEMO_ID
		LEFT OUTER JOIN 
		(
			SELECT B.APD_ROW_ID,SUM(B.QUANTITY) AS QUANTITY
			FROM APPROVAL_RETURN_MST A (NOLOCK)
			JOIN APPROVAL_RETURN_DET B (NOLOCK) ON A.MEMO_ID=B.MEMO_ID
			WHERE A.CANCELLED=0 AND (@LOC_ID='' OR a.location_Code =@LOC_ID)
			AND (@CUSTOMER_CODE='' OR A.CUSTOMER_CODE=@CUSTOMER_CODE)
			GROUP BY B.APD_ROW_ID
		)B ON A.ROW_ID = B.APD_ROW_ID
		WHERE A.QUANTITY-ISNULL(B.QUANTITY,0) > 0
		AND (@LOC_ID='' OR apm.location_Code =@LOC_ID)
		AND (@CUSTOMER_CODE='' OR APM.CUSTOMER_CODE=@CUSTOMER_CODE)
		GROUP BY A.MEMO_ID
	
		IF OBJECT_ID('TEMPDB..#PENDING_APPROVAL_3','U') IS NOT NULL
			DROP TABLE #PENDING_APPROVAL_3
		
		
		SELECT A.MEMO_ID,A.MEMO_NO,C.CUSTOMER_FNAME+' '+C.CUSTOMER_LNAME AS CUSTOMER_NAME,C.USER_CUSTOMER_CODE
			  ,A.MEMO_DT,A.ROW_ID,ISNULL(A.QUANTITY,0) AS ISS_QUANTITY,B.APD_ROW_ID,B.QUANTITY AS RET_QUANTITY
			  ,a.REMARKS ,a.dept_id  
		INTO #PENDING_APPROVAL_3 
		FROM #PENDING_APPROVAL_1 A 
		LEFT OUTER JOIN #PENDING_APPROVAL_2 B ON A.ROW_ID = B.APD_ROW_ID 
		LEFT OUTER JOIN CUSTDYM C(NOLOCK) ON A.CUSTOMER_CODE = C.CUSTOMER_CODE
		
		--SELECT * FROM #PENDING_APPROVAL_3
		
		
		IF OBJECT_ID('TEMPDB..#PENDING_AMOUNT2','U') IS NOT NULL
			DROP TABLE #PENDING_AMOUNT2
	
		SELECT A.MEMO_ID,A.CUSTOMER_NAME,A.USER_CUSTOMER_CODE,(B.PENDING_AMOUNT) AS PENDING_AMOUNT,REMARKS  
		INTO #PENDING_AMOUNT2 
		FROM #PENDING_APPROVAL_3 A 
		JOIN #PENDING_AMOUNT1 B ON A.MEMO_ID = B.MEMO_ID;
		
		WITH CTE(MEMO_ID,CUSTOMER_NAME,USER_CUSTOMER_CODE,PENDING_AMOUNT,ROW_ID)
		AS
		(
			SELECT MEMO_ID,CUSTOMER_NAME,USER_CUSTOMER_CODE,PENDING_AMOUNT,ROW_NUMBER()OVER( PARTITION BY MEMO_ID ORDER BY MEMO_ID) AS ROW_ID 
			FROM #PENDING_AMOUNT2 	
		)
		DELETE FROM CTE WHERE ROW_ID > 1
		
		
		IF OBJECT_ID('TEMPDB..#PENDING_AMOUNT_APR','U') IS NOT NULL
			DROP TABLE #PENDING_AMOUNT_APR
			
		SELECT a.dept_id   AS DEPT_ID,MEMO_NO,MEMO_DT,A.CUSTOMER_NAME,A.USER_CUSTOMER_CODE AS CUSTOMER_ID,REMARKS,CC.PENDING_AMOUNT 
		,SUM(ISS_QUANTITY) AS ISS_QUANTITY,ISNULL (SUM(RET_QUANTITY),0) AS RET_QUANTITY
		,SUM(ISS_QUANTITY)-ISNULL (SUM(RET_QUANTITY),0) AS PEN_QUANTITY
		,DATEDIFF(DD,MEMO_DT,@MEMO_DATE) AS AGEING
		INTO #PENDING_AMOUNT_APR
		FROM #PENDING_APPROVAL_3 A 
		LEFT OUTER JOIN 
		(
			SELECT CUSTOMER_NAME,USER_CUSTOMER_CODE,SUM(PENDING_AMOUNT)AS PENDING_AMOUNT  
			FROM #PENDING_AMOUNT2 
			GROUP BY CUSTOMER_NAME,USER_CUSTOMER_CODE 
		) CC
		ON CC.CUSTOMER_NAME = A.CUSTOMER_NAME AND CC.USER_CUSTOMER_CODE = A.USER_CUSTOMER_CODE
		WHERE DATEDIFF(DD,MEMO_DT,@MEMO_DATE)>=@NAGEING
		GROUP BY MEMO_NO,MEMO_DT,A.CUSTOMER_NAME,a.dept_id ,A.USER_CUSTOMER_CODE,CC.PENDING_AMOUNT,A.REMARKS
		HAVING SUM(ISS_QUANTITY)-ISNULL(SUM(RET_QUANTITY),0) > 0 
		
       
     INSERT INTO #PENDING_SUMMARY(TYPE,TOTAL_MEMOES,AMOUNT,QUANTITY)
	 SELECT 'APPROVAL' AS TYPE,COUNT(*) AS TOTAL_MEMOES,
	 ISNULL(SUM(ISNULL(PENDING_AMOUNT,0)),0) AS AMOUNT,
	 ISNULL(SUM(ISNULL(PEN_QUANTITY,0)),0) AS QUANTITY 
	 FROM #PENDING_AMOUNT_APR
     END
      
     SELECT TYPE,TOTAL_MEMOES,AMOUNT,QUANTITY FROM #PENDING_SUMMARY 
     ORDER BY TYPE   
          
    
END
