create PROCEDURE SP3S_GETWSL_DATA_AGAINSTPS
(        
 @NSPID int,
 @NMODE INT=1 ,
 @cLOCID varchar(5)='',
 @CXNTYPE varchar(10)='wsl'
)                      
AS                        
BEGIN                        
	  
      DECLARE @CPARTYRATEFILTER VARCHAR(1000),@CTERMSCODE VARCHAR(20),@NCUSTOMRATETYPE INT,
      @CTARGETLOCID VARCHAR(5),@CSOURCELOCID VARCHAR(5),@NDEFAULTRATETYPE INT,@BENABLEEXCISDUTY BIT,
      @BCUSTOMPROCEXISTS BIT,@CSTEP VARCHAR(5),@CUTERRORMSG VARCHAR(MAX),@CTERRMSG VARCHAR(MAX),
      @CERRPC VARCHAR(50),@CERRORMSG VARCHAR(MAX),@NINVTYPE INT,@NBILLLEVELTAXMETHOD INT,@NRATEPICKINGMETHOD INT,
      @NPARTYDISCPCT NUMERIC(7,3),@CPRODUCTCODE VARCHAR(50),@BPARTYRATEFILTERAPPLICABLE BIT,@BDONOTCALEXCISE BIT,
      @CPARTYRATEMEMOID VARCHAR(40),@NCALMODE INT,@NLOTPRICE NUMERIC(10,2),@NXFERTYPE INT,@CROUNDNETRATE VARCHAR(2),
      @CCURLOCID VARCHAR(5),@BGSTBILL BIT,@DINVDT DATETIME,@CPARTYSTATECODE CHAR(7),@BGROUPINV BIT,@XN_ITEM_TYPE NUMERIC(2,0),
	  @NMEMOTYPE NUMERIC(1,0),@tmptblname varchar(100),@dtsql nvarchar(max)
	
	
	  BEGIN TRY
	  	  SET @CSTEP=10
		  SET @CUTERRORMSG=''

		    SELECT TOP 1 @CROUNDNETRATE=VALUE FROM CONFIG WHERE CONFIG_OPTION='WSL_ITEM_LEVEL_ROUND_OFF'
		   
          set @CCURLOCID= @cLOCID           
		  
		  			
		  SET @CROUNDNETRATE=ISNULL(@CROUNDNETRATE,'')
		  
		  SELECT @CPARTYRATEMEMOID=PARTY_RATE_MEMO_ID FROM WSL_INV_SETTINGS WHERE SP_ID=@NSPID
		  		  		  
		  SELECT TOP 1 @NINVTYPE=ISNULL(INV_TYPE,1),@NXFERTYPE=ISNULL(XFER_TYPE,0),@NDEFAULTRATETYPE=DEFAULT_RATE_TYPE,@NCUSTOMRATETYPE=ISNULL(A.CUSTOM_RATE_TYPE,0),
		  @BPARTYRATEFILTERAPPLICABLE=ISNULL(PARTYRATE_FILTER_APPLICABLE,0),@CTERMSCODE=ISNULL(TERMS_CODE,''), 
		  @CTARGETLOCID=TARGET_LOCATION_ID,@CSOURCELOCID=A.LOCATION_ID,
		  @BENABLEEXCISDUTY=ISNULL(ENABLE_EXCISE_DUTY,0),@BCUSTOMPROCEXISTS=ISNULL(CUSTOM_PROC_EXISTS,0),
		  @NBILLLEVELTAXMETHOD=BILL_LEVEL_TAX_METHOD,@NRATEPICKINGMETHOD=ISNULL(C.RATE_PICKING_METHOD,0),
		  @NPARTYDISCPCT=(CASE WHEN ISNULL(DISCOUNT_PICKING_MODE,0)=2 THEN 0 ELSE PARTY_DISCOUNT_PCT END),
		  --@NPARTYDISCPCT=(CASE WHEN ISNULL(DISCOUNT_PICKING_MODE,0)=2 THEN 0 ELSE C.VALUE END),
		  @NCALMODE=MST_CAL_MODE,@BDONOTCALEXCISE=ISNULL(DONOT_CALC_EXCISE,0),
		  @NLOTPRICE=A.LOT_PRICE,@BGSTBILL=ISNULL(GST_BILL,0),@DINVDT=INV_DT,
		  @CPARTYSTATECODE=PARTY_STATE_CODE,
		  @XN_ITEM_TYPE=A.XN_ITEM_TYPE,@nmemotype=memo_type
		  FROM WSL_INV_SETTINGS A (NOLOCK)
		  LEFT OUTER JOIN LOCATION B ON A.LOCATION_ID=B.DEPT_ID
		  LEFT OUTER JOIN 
		  (SELECT M.MEMO_ID,RATE_PICKING_METHOD,DISCOUNT_PICKING_MODE,MST_CAL_MODE--,D.VALUE 
		   FROM PARTY_RATE_MST M 
		   --JOIN PARTY_RATE_DET D ON M.MEMO_ID=D.MEMO_ID
		   WHERE M.MEMO_ID=@CPARTYRATEMEMOID) C ON C.MEMO_ID=A.PARTY_RATE_MEMO_ID
		  WHERE SP_ID=@NSPID

		  IF ISNULL(@nmemotype,0)=0
		  SET @nmemotype=1
		  
		  IF ISNULL(@CPARTYRATEMEMOID,'')=''
		  BEGIN
				SELECT @NDEFAULTRATETYPE=1,@NPARTYDISCPCT=0
		  END
		  
		  IF ISNULL(@XN_ITEM_TYPE,0)=0
		  SET @XN_ITEM_TYPE=1
			
		  IF @NRATEPICKINGMETHOD=1 AND ISNULL(@CTERMSCODE,'')=''
		  BEGIN
				SET @CERRORMSG='PLEASE SELECT A VALID TERMS NAME FOR INVOICING'
				GOTO END_PROC
		  END

		 UPDATE A SET UOM_TYPE =  U.UOM_TYPE, 		STOCK_NA =  B.STOCK_NA, 		CODING_SCHEME = 
		   ISNULL(sku.barcode_coding_scheme,B.CODING_SCHEME), 
		   PURCHASE_PRICE = SKU.purchase_price ,MRP =SKU.MRP , 	WS_PRICE =A.ws_price , 
		   ER_FLAG =  SKU.ER_FLAG, 		FIX_MRP =  B.FIX_MRP, 		ARTICLE_NO =  B.ARTICLE_NO, 		
		   ARTICLE_NAME =  B.ARTICLE_NAME, 		PARA1_NAME =  C.PARA1_NAME, 		PARA2_NAME =  D.PARA2_NAME, 		
		   PARA3_NAME =  F.PARA3_NAME, 		ONLINE_BAR_CODE = SKU.ONLINE_PRODUCT_CODE, 		VENDOR_EAN_NO = SKU.VENDOR_EAN_NO, 		
		   PRODUCT_NAME =  SKU.PRODUCT_NAME, 		ARTICLE_ALIAS =  B.ALIAS, 		BIN_NAME =  BIN.BIN_NAME, 		PARA6_NAME =  I.PARA6_NAME, 		
		   ART_DT_CREATED = B.DT_CREATED, PARA3_DT_CREATED = F.DT_CREATED, 		SKU_DT_CREATED = SKU.DT_CREATED, 		
		   UOM_NAME = U.UOM_NAME, 		SECTION_NAME =  SM.SECTION_NAME, 		SECTION_CODE =  SM.SECTION_CODE,
		   SUB_SECTION_CODE =  SD.SUB_SECTION_CODE, 		SUB_SECTION_NAME =  SD.SUB_SECTION_NAME, 		
		   PARA4_NAME =  G.PARA4_NAME, 		PARA5_NAME =  H.PARA5_NAME,ARTICLE_CODE = B.ARTICLE_CODE, 		
		   PARA1_CODE =  SKU.PARA1_CODE, 		PARA2_CODE =  SKU.PARA2_CODE, 		
		   PARA3_CODE =  SKU.PARA3_CODE, 		PARA4_CODE =  SKU.PARA4_CODE, 		
		   PARA5_CODE =  SKU.PARA5_CODE, 		PARA6_CODE =  SKU.PARA6_CODE, 	
	   		UOM_CODE =  U.UOM_CODE,
			RATE=(CASE WHEN ISNULL(MANUAL_RATE,0)=1 THEN RATE WHEN @NLOTPRICE<>0 THEN @NLOTPRICE 
					 WHEN sf.product_code IS NOT NULL THEN sf.ws_price  	
					 WHEN ISNULL(ST.MRP_WSP_MODE,0)=2 OR @NDEFAULTRATETYPE=1 AND ISNULL(SKU.WS_PRICE,0)>0 THEN 
					 SKU.WS_PRICE
					 WHEN @NDEFAULTRATETYPE=3 THEN SKU.PURCHASE_PRICE
					  ELSE 
					 CASE WHEN ISNULL(A.DONOT_UPDATE_MRP,0)=0 THEN  SKU.MRP else a.mrp end 
					  END),
		  DISCOUNT_AMOUNT=0,DISCOUNT_PERCENTAGE=(CASE WHEN @NLOTPRICE<>0 THEN 0 ELSE ISNULL(@NPARTYDISCPCT,0)*
		  (CASE WHEN ISNULL(@NCALMODE,3)=1 THEN -1 ELSE 1 END) END)
			  ,HSN_CODE=SKU.HSN_CODE
		FROM [WSL_ITEM_DETAILS] A
		JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
		LEFT OUTER JOIN SKU_OH (NOLOCK) ON SKU_OH.PRODUCT_CODE=SKU.PRODUCT_CODE
		LEFT JOIN FORM (NOLOCK) ON FORM.FORM_ID=SKU.FORM_ID
		JOIN ARTICLE B  (NOLOCK) ON B.ARTICLE_CODE = SKU.ARTICLE_CODE        
		JOIN SECTIOND SD  (NOLOCK) ON B.SUB_SECTION_CODE = SD.SUB_SECTION_CODE      
		JOIN SECTIONM SM  (NOLOCK) ON SD.SECTION_CODE = SM.SECTION_CODE      
		JOIN PARA1 C  (NOLOCK) ON SKU.PARA1_CODE = C.PARA1_CODE        
		JOIN PARA2 D  (NOLOCK) ON SKU.PARA2_CODE = D.PARA2_CODE        
		JOIN PARA3 F  (NOLOCK) ON SKU.PARA3_CODE = F.PARA3_CODE        
		JOIN PARA4 G  (NOLOCK) ON SKU.PARA4_CODE = G.PARA4_CODE        
		JOIN PARA5 H  (NOLOCK) ON SKU.PARA5_CODE = H.PARA5_CODE        
		JOIN PARA6 I  (NOLOCK) ON SKU.PARA6_CODE = I.PARA6_CODE     
		LEFT OUTER JOIN UOM U  (NOLOCK) ON B.UOM_CODE = U.UOM_CODE   
		JOIN BIN (NOLOCK) ON BIN.BIN_ID=A.BIN_ID
		LEFT JOIN WSL_INV_SETTINGS ST ON A.SP_ID=ST.SP_ID
		LEFT OUTER JOIN 
		  (SELECT sfp.product_code,fc_rate as ws_price FROM sku_fc_prices sfp (NOLOCK)
		  JOIN location loc (NOLOCK) ON 1=1
		  JOIN wsl_item_details c (NOLOCK) ON c.PRODUCT_CODE=sfp.product_code
		  WHERE c.sp_id=@NSPID and loc.dept_id= @cLOCID AND sfp.fc_code=loc.fc_code         
		  ) SF ON sf.product_code=a.PRODUCT_CODE
		WHERE A.SP_ID=@NSPID AND ISNULL(ERRMSG,'')=''

		  UPDATE WSL_ITEM_DETAILS SET DISCOUNT_AMOUNT=(RATE * INVOICE_QUANTITY * DISCOUNT_PERCENTAGE) / 100,
		  NET_RATE=RATE-(RATE * DISCOUNT_PERCENTAGE/ 100)
		  WHERE SP_ID=@NSPID AND ISNULL(MANUAL_NET_RATE,0)=0

					  
		  SET @CSTEP=45	
	
		  SELECT TOP 1 @CPRODUCTCODE=PRODUCT_CODE FROM WSL_ITEM_DETAILS 
		  WHERE SP_ID=@NSPID AND ISNULL(MANUAL_RATE,0)=0 AND ISNULL(MANUAL_NET_RATE,0)=0 AND ISNULL(MANUAL_DISCOUNT,0)=0		
		  	  
		  	  
		  IF @NLOTPRICE=0
		  BEGIN
			  --SELECT @NRATEPICKINGMETHOD,@CTERMSCODE,@CPRODUCTCODE,@BPARTYRATEFILTERAPPLICABLE	
			  IF @NRATEPICKINGMETHOD=1 AND ISNULL(@CTERMSCODE,'')<>'' AND ISNULL(@CPRODUCTCODE,'')<>''
			  BEGIN
			  
					PRINT 'UPDATE RATES FOR TERMS'
					SET @CSTEP=60			  
					IF @BGSTBILL=1
						EXEC SP3S_GETINVRATE_TERMS_GST  @NSPID,'WSL',@CERRORMSG OUTPUT					
					ELSE	
						EXEC SP3S_GETINVRATE_TERMS_NEW @NSPID,'WSL',@CERRORMSG OUTPUT
					
					IF ISNULL(@CERRORMSG,'')<>''
						GOTO END_PROC
			  END		
			  ELSE
			  IF @NRATEPICKINGMETHOD=2 AND @BCUSTOMPROCEXISTS=1 AND ISNULL(@CPRODUCTCODE,'')<>''
			  BEGIN
			  
					PRINT 'UPDATE RATES FOR CUSTOM PROC'
					SET @CSTEP=70			  
					EXEC SP3S_GETINVRATE_CUSTOM @NSPID
			  END	
			  ELSE
			  IF @NRATEPICKINGMETHOD=3 AND @BPARTYRATEFILTERAPPLICABLE=1 AND ISNULL(@CPRODUCTCODE,'')<>''
			  BEGIN
			
			  
					PRINT 'UPDATE RATES FOR PARTY RATE:'+STR(@NSPID)
					SET @CSTEP=65			  
					EXEC SP3S_APPLY_PARTY_RATE_NEW @NSPID,@CERRORMSG OUTPUT
					
					IF ISNULL(@CERRORMSG,'')<>''
						GOTO END_PROC
			  END		
			  ELSE
				PRINT 'UPDATE BASIC RATES'
		  END
		  			  
LBLRECALAMOUNT:		  		  		  
		  

		  SET @CSTEP=140  	
		
			  SET @CSTEP=125
			  UPDATE WSL_ITEM_DETAILS SET NET_RATE=(CASE WHEN INVOICE_QUANTITY=0 THEN 0 ELSE (RATE-(DISCOUNT_AMOUNT/INVOICE_QUANTITY)) END)
			  WHERE SP_ID=@NSPID AND ISNULL(MANUAL_NET_RATE,0)=0
			  
			  SET @CSTEP=130			  
			  IF @CROUNDNETRATE='1'
				  UPDATE WSL_ITEM_DETAILS SET NET_RATE=ROUND(NET_RATE,0) WHERE SP_ID=@NSPID
				  AND ISNULL(MANUAL_NET_RATE,0)=0

			  UPDATE A SET  BASEAMOUNT_FOR_TAX = NET_RATE - (NET_RATE*B.BILL_DISC_PCT/100)
			  FROM WSL_ITEM_DETAILS A JOIN WSL_INV_SETTINGS B ON A.SP_ID=B.SP_ID
			  WHERE A.SP_ID=@NSPID   

		  UPDATE WSL_ITEM_DETAILS SET AMOUNT=NET_RATE*INVOICE_QUANTITY,
		                              AMOUNT_MRP=mrp*INVOICE_QUANTITY
		  WHERE SP_ID=@NSPID 

		    --Einvoiceing Enable doen not upload negative Amount changes discuss with sanjay sir Instruction with sanjiv sir (19042022)
		  if exists (select top 1'u' from location (nolock) where dept_id=@cLOCID and isnull(Enable_EInvoice,0)=1)
		  begin
		       
			  UPDATE A  set Rate=RATE+(ABS(DISCOUNT_AMOUNT)/invoice_quantity),DISCOUNT_AMOUNT=0,DISCOUNT_PERCENTAGE=0
			  FROM WSL_ITEM_DETAILS A (NOLOCK)  WHERE SP_ID=@NSPID AND DISCOUNT_AMOUNT<0

		  end
		  
		  	 	  
		  GOTO END_PROC
	  END TRY
	  
	  BEGIN CATCH
			PRINT 'ENTER CATCH BLOCK'
			SET @CUTERRORMSG='ERROR IN PROCEDURE SP3S_GETWSL_DATA : STEP #'+@CSTEP+' '+ERROR_MESSAGE()
			GOTO END_PROC 
	  END CATCH

END_PROC:
		PRINT 'LAST STEP:'+@CSTEP
		
	  IF ISNULL(@CUTERRORMSG,'')<>''
			UPDATE WSL_ITEM_DETAILS SET ERRMSG=@CUTERRORMSG WHERE SP_ID=@NSPID
	  ELSE
	  IF ISNULL(@CERRORMSG,'')<>'' and not exists (select  top 1 'u' from WSL_ITEM_DETAILS where   SP_ID=@NSPID and ISNULL (errmsg,'')<>'')
	  		UPDATE WSL_ITEM_DETAILS SET ERRMSG=@CERRORMSG WHERE SP_ID=@NSPID
	  
	  IF ISNULL(@CUTERRORMSG,'')='' AND ISNULL(@CUTERRORMSG,'')=''
			SELECT TOP 1 @CERRORMSG=ERRMSG FROM  WSL_ITEM_DETAILS WHERE SP_ID=@NSPID AND ISNULL(ERRMSG,'')<>''
		
	  
	
	  		
END
------------- END OF PROCEDURE SP3S_GETWSL_DATA

