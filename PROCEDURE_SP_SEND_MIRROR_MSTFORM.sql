CREATE PROCEDURE SP_SEND_MIRROR_MSTFORM
@CTARGETLOCID VARCHAR(5)
--WITH ENCRYPTION
AS
BEGIN

RETURN
--DISCARDED PROC IF REQUIRED CHANGES IN MIRROR TABLES 

    DECLARE @DTSQL NVARCHAR(MAX),@CSTEP VARCHAR(10),@CFILTERCONDITION NVARCHAR(MAX),@DMEMOLASTUPDATE DATETIME
           ,@CXNTYPE VARCHAR(10),@CMEMOID VARCHAR(100),@CTABLENAME VARCHAR(100),@CTEMPTABLE VARCHAR(100)
           ,@BRECFOUND BIT,@CTEMPSKUTABLE VARCHAR(100),@CTEMPLMTABLE VARCHAR(100),@TMP_AREA VARCHAR(100)
           ,@CTEMPLMPTABLE VARCHAR(100),@CTEMPDBNAME VARCHAR(200),@CLOCMSTLUPD VARCHAR(20),@CCURDEPTID VARCHAR(5)
           ,@CHODEPTID VARCHAR(5),@NRECCOUNT INT,@CERRORMSG VARCHAR(MAX),@CREPLOCTABLE VARCHAR(500),@NLOCTYPE INT
           
    DECLARE @TXNSSENDINFO TABLE (ORG_TABLENAME VARCHAR(100),TMP_TABLENAME VARCHAR(100),ERRMSG VARCHAR(MAX)) 
    
    BEGIN TRY
    
	SET @CSTEP=0

	SET @CTEMPDBNAME = DB_NAME() + '_TEMP.DBO.'
	SET @CSTEP=10
	
	PRINT @CSTEP+':'+CONVERT(VARCHAR,GETDATE(),113)
	SET @CFILTERCONDITION=''
	SET @CSTEP=20

	SELECT @CCURDEPTID = VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'
	SELECT @CHODEPTID = VALUE FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'		
	
	SELECT @NLOCTYPE=LOC_TYPE FROM LOCATION WHERE DEPT_ID=@CTARGETLOCID
	
	PRINT @CSTEP+':'+CONVERT(VARCHAR,GETDATE(),113)
	
	IF @CCURDEPTID<>@CHODEPTID
	BEGIN
		SELECT '' AS LAST_UPDATE,'' AS ERRMSG
		GOTO END_PROC
	END		
	
	--INSERT TEMP MSTFORM
	SET @CSTEP =100
	SET @CTABLENAME ='FORM'
	SET @CTEMPTABLE =@CTEMPDBNAME + 'TMP_MSTFORM_'+@CTABLENAME+'_'+@CTARGETLOCID 
	SET @DTSQL =N'IF OBJECT_ID('''+@CTEMPTABLE+''',''U'') IS NOT NULL 
	               DROP TABLE '+@CTEMPTABLE+
		' SELECT DISTINCT A.* INTO '+@CTEMPTABLE +' FROM '+@CTABLENAME+' A (NOLOCK)'
	INSERT INTO @TXNSSENDINFO(ORG_TABLENAME,TMP_TABLENAME) SELECT @CTABLENAME,@CTEMPTABLE
	
	EXEC SP_EXECUTESQL @DTSQL
	
	SET @CSTEP=140
	
	UPDATE @TXNSSENDINFO SET TMP_TABLENAME='TMP_MSTFORM_'+ORG_TABLENAME+'_'+@CTARGETLOCID,ERRMSG=''
		
	GOTO END_PROC

END TRY

BEGIN CATCH
	SET @CERRORMSG='P: SP_SEND_MIRROR_MSTFORM, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO END_PROC
END CATCH 	
	
END_PROC:

	  IF ISNULL(@CERRORMSG,'') = ''
       SELECT * FROM @TXNSSENDINFO
    ELSE
       SELECT '' AS ORG_TABLENAME , '' AS TMP_TABLENAME,@CERRORMSG AS [ERRMSG]
 END

------------- END OF PROCEDURE SP_SEND_MIRROR_MSTFORM
