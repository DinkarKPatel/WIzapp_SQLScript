CREATE PROCEDURE SP3s_SYNCH_UPLOADDATA_PO_OPT
(
   @nSpId VARCHAR(50),
   @CERRMSG VARCHAR(MAX) OUTPUT
)
--WITH ENCRYPTION
AS
BEGIN

DECLARE @CSTEP VARCHAR(100),@DTSQL NVARCHAR(MAX),@NMERGE_ORDER NUMERIC(5),@cUpdatestr VARCHAR(4000),@bCancelled BIT
	   ,@CTABLENAME VARCHAR(200),@CTABLE_SUFFIX VARCHAR(50),@CKEYFIELD VARCHAR(200),@CDEL_ID VARCHAR(50),@CTMP_TABLENAME VARCHAR(200),@LINSERTONLY VARCHAR(1)
	   ,@CFILTERCONDITION VARCHAR(200),@LUPDATEONLY VARCHAR(1),@BALWAYSUPDATE VARCHAR(1),@FDEL CHAR(1)
	   ,@CERRMSGOUT VARCHAR(1000),@CTABLESSTR VARCHAR(MAX),@CMIRRORINGENABLED VARCHAR(5)
	   ,@CCURDEPTID VARCHAR(5),@CTEMPMASTERTABLE VARCHAR(200),@CTEMPDETAILTABLE1 VARCHAR(200),@CTEMPDETAILTABLE2 VARCHAR(200)
	   ,@CTEMPPAYMODETABLE VARCHAR(200),@CTEMPTABLE VARCHAR(100),@CDONOTRESETPOSTEDINAC VARCHAR(1)
	   ,@BADDMODE BIT,@CCUTOFFDATE VARCHAR(20),@CWHERECLAUSE VARCHAR(2000),@CMEMONOLEN VARCHAR(5),@NMEMONOLEN INT
	   ,@DMINMEMODT DATETIME,@DMAXMEMODT DATETIME,@CFINYEAR VARCHAR(5),@CMEMOPREFIX VARCHAR(10)
	   ,@CMINMEMONO VARCHAR(20),@CMAXMEMONO VARCHAR(20),@CSOURCEDB VARCHAR(200),@CMERGEDB VARCHAR(200)
	   ,@BMSTINSERTONLY BIT,@CMEMOID VARCHAR(40),@CPREVMEMONO VARCHAR(20)
	   ,@NPREVMEMONO NUMERIC(5,0),@NLENVALUE INT,@CPREVMEMONOSEARCH VARCHAR(20),@CMEMOIDSEARCH VARCHAR(40)
	   ,@CRETPRODUCTCODE VARCHAR(50),@NVERSIONNO INT,@CTEMPSKUTABLE VARCHAR(500)
	   ,@CPARTYDEPTID VARCHAR(5),@CFILTERCONDITION3 VARCHAR(500)
	   ,@CCMD NVARCHAR(MAX),@CKEYFIELD1 VARCHAR(200),@CWHERE varchar(100),@bshortclose BIT,
	   @cLocId varchar(5)
	

BEGIN TRY
	   
     SELECT @CSOURCEDB='',@CMERGEDB='',@BMSTINSERTONLY=1,@CERRMSG=''
	 SELECT TOP 1 @CCURDEPTID=VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='LOCATION_ID'

	SELECT @CTEMPMASTERTABLE=@CSOURCEDB+'Po_Pom01106_Upload',
		   @CTEMPDETAILTABLE1=@CSOURCEDB+'Po_Pod01106_Upload'

			
LBLSTART:
    
    BEGIN TRANSACTION
    SELECT @CMEMOID='',@NVERSIONNO=0
    
    
	SELECT TOP 1 @CMEMOID = B.PO_ID ,@bCancelled=cancelled,@bshortclose=b.Short_close ,@cLocId=B.location_Code 
    FROM PO_POM01106_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId

	SET @CSTEP=17
  
    SET @CFILTERCONDITION = 'B.sp_ID='''+@nSpId+''''
		
	SET @CMEMOIDSEARCH=''
	SELECT TOP 1 @CMEMOIDSEARCH=A.PO_ID FROM pom01106 A (NOLOCK) WHERE A.PO_ID=@CMEMOID

	SET @CSTEP=19
  
		
	IF ISNULL(@CMEMOIDSEARCH,'')<>''
		SET @BADDMODE=0
	ELSE
		SET @BADDMODE=1


	IF @BADDMODE=0
	BEGIN

		SET @CSTEP=19.4

		IF @bCancelled=1
		BEGIN
			UPDATE pom01106 WITH (ROWLOCK) SET cancelled=1 WHERE po_id=@cMemoid
			GOTO EXIT_PROC
		END
		ELSE IF @BSHORTCLOSE=1
		BEGIN
		   UPDATE POM01106 WITH (ROWLOCK) SET SHORT_CLOSE =1 WHERE PO_ID=@CMEMOID
		   GOTO SHORTCLOSE_PROC
		
		END
	

		SET @CSTEP=21

	
		IF EXISTS (SELECT TOP 1 TABLENAME FROM SAVETRAN_UPDCOLS_UPDATESTR (NOLOCK) WHERE SP_ID=@NSPID)
			DELETE FROM SAVETRAN_UPDCOLS_UPDATESTR WITH (ROWLOCK) WHERE SP_ID=@NSPID

		INSERT savetran_updcols_updatestr (sp_id,tablename,updatestr)
		SELECT @nSPId as sp_id,tablename,'' from mirrorxnsinfo (NOLOCK)
		WHERE tablename IN ('pOm01106','pOd01106','sku')

		
		SET @CSTEP=23

		EXEC SP3S_VERIFY_PODATA_MERGE_CHANGES
		@nSpId=@nSpId,
		@CMEMOID=@CMEMOID
		
	END

	DECLARE @cMissingRowId VARCHAR(40)

	IF @BADDMODE=0
	BEGIN	

		SET @CSTEP=27

		SELECT TOP 1 @CMISSINGROWID=A.ROW_ID FROM POD01106 A (NOLOCK) 
		LEFT JOIN 
		(SELECT ROW_ID FROM PO_POD01106_UPLOAD B (NOLOCK) WHERE SP_ID=@NSPID) B
		ON A.ROW_ID =B.ROW_ID WHERE A.PO_ID =@CMEMOID AND B.ROW_ID IS NULL

		IF ISNULL(@cMissingRowId,'')<>''
		BEGIN		
			SET @CSTEP=30

          IF EXISTS (SELECT TOP 1 'U'   FROM PO_ADJ_DET ADJ (NOLOCK)
			JOIN POD01106 A (NOLOCK) ON ADJ.PO_ROW_ID=A.ROW_ID 
			LEFT JOIN 
			(SELECT ROW_ID FROM PO_POD01106_UPLOAD B (NOLOCK) WHERE SP_ID=@NSPID) B
			ON A.ROW_ID =B.ROW_ID WHERE A.PO_ID =@CMEMOID AND B.ROW_ID IS NULL
			)
			BEGIN

				DELETE ADJ FROM PO_ADJ_DET ADJ (NOLOCK)
				JOIN POD01106 A ON ADJ.PO_ROW_ID=A.ROW_ID 
				LEFT JOIN 
				(SELECT ROW_ID FROM PO_POD01106_UPLOAD B (NOLOCK) WHERE SP_ID=@NSPID) B
				ON A.ROW_ID =B.ROW_ID WHERE A.PO_ID =@CMEMOID AND B.ROW_ID IS NULL

			END
			
			


			 DELETE A FROM pod01106 A WITH (ROWLOCK) LEFT JOIN 
			(SELECT row_id FROM PO_POD01106_UPLOAD B (NOLOCK) WHERE sp_id=@nSpId) b
			ON A.row_ID =B.row_ID WHERE A.po_id =@CMEMOID AND b.row_id IS NULL
			
			
			
		END

	
	END
	
LBLMERGE:


	SET @CWHERE=' AND A.sp_ID='''+@nSpId+''''

	IF EXISTS (SELECT TOP 1 'U' FROM PO_UOM_UPLOAD A (NOLOCK)
	   LEFT JOIN UOM (NOLOCK) B ON A.UOM_CODE =B.UOM_CODE 
	   WHERE A.SP_ID=@NSPID AND B.UOM_CODE IS NULL)
	   BEGIN
	     
		 SET @CTABLENAME='UOM'
		SET @CTMP_TABLENAME='PO_UOM_UPLOAD'
		SET @CKEYFIELD='UOM_CODE'

		EXEC UPDATEMASTERXN_OPT @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1 

	   END
	
	IF EXISTS (SELECT TOP 1 a.section_code FROM po_Sectionm_upload a (NOLOCK)
				LEFT OUTER JOIN sectionm b (NOLOCK) ON a.section_code=b.section_code
				WHERE a.sp_id=@nSpId AND b.section_code IS NULL)
	BEGIN
		SET @CSTEP=37

		SET @CTABLENAME='SECTIONM'
		SET @CTMP_TABLENAME='Po_SECTIONM_upload'
		SET @CKEYFIELD='SECTION_CODE'

		EXEC SP3S_INACTIVE_MASTERS @CTEMPTABLE=@CTMP_TABLENAME,@CTABLENAME=@CTABLENAME,@CCOLNAME='SECTION_NAME',
		@CCOLKEYNAME=@CKEYFIELD,@CWHERE=@CWHERE
	
		SET @CSTEP=45

		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1 
	END

	IF EXISTS (SELECT TOP 1 a.section_code FROM po_Sectiond_upload a (NOLOCK)
			LEFT OUTER JOIN sectiond b (NOLOCK) ON a.sub_section_code=b.sub_section_code
			WHERE a.sp_id=@nSpId AND b.sub_section_code IS NULL)
	BEGIN

	
		SET @CSTEP=50

		SET @CTABLENAME='SECTIOND'
		SET @CTMP_TABLENAME='PO_SECTIOND_UPLOAD'
		SET @CKEYFIELD='SUB_SECTION_CODE'

		EXEC SP3S_INACTIVE_MASTERS @CTEMPTABLE=@CTMP_TABLENAME,@CTABLENAME=@CTABLENAME,@CCOLNAME='SUB_SECTION_NAME',@CCOLKEYNAME=@CKEYFIELD,@CWHERE=@CWHERE

		SET @CSTEP=52


		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1 
	END						  

	IF EXISTS (SELECT TOP 1 a.article_code FROM Po_ARTICLE_upload a (NOLOCK) 
				LEFT OUTER JOIN article b (NOLOCK) ON a.article_code=b.article_code
			    WHERE a.sp_id=@nSpId AND b.article_code IS NULL)	
	BEGIN

   		SET @CSTEP=55

		SET @CTABLENAME='ARTICLE'
		SET @CTMP_TABLENAME='Po_ARTICLE_upload'
		SET @CKEYFIELD='ARTICLE_CODE'

		EXEC SP3S_INACTIVE_MASTERS @CTEMPTABLE=@CTMP_TABLENAME,@CTABLENAME=@CTABLENAME,@CCOLNAME='ARTICLE_NO',@CCOLKEYNAME=@CKEYFIELD,@CWHERE=@CWHERE

   		SET @CSTEP=57
		
		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
									,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
									,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
									,@BALWAYSUPDATE=1 
							  
	END
	
	DECLARE @CATTR_KEY_NAME VARCHAR(100),@bParaTable  BIT,@nParaCnt NUMERIC(2,0),@cColName VARCHAR(20)							  

	DECLARE @NCOUNT INT,@BLOOP INT,@CCMD1 NVARCHAR(MAX),@bExists bit
	SET @NCOUNT=31
	SET @BLOOP=1
	WHILE (@BLOOP <=@NCOUNT )
	BEGIN

			SET @CSTEP=65
		
	      
		    SET @bParaTable = (CASE WHEN @bLoop<=25 then 0 ELSE 1 END)

			IF @bParaTable=0
			BEGIN
				SET @CTABLENAME='ATTR'+RTRIM(LTRIM(STR(@BLOOP)))+'_MST'
				SET @CTMP_TABLENAME='Po_ATTR'+RTRIM(LTRIM(STR(@BLOOP)))+'_MST_upload'
				SET @CKEYFIELD='ATTR'+RTRIM(LTRIM(STR(@BLOOP)))+'_KEY_CODE'
			END
			ELSE
			BEGIN
				SET @nParaCnt=@bLoop-25
				SET @CTABLENAME='PARA'+RTRIM(LTRIM(STR(@nParaCnt)))
				SET @CTMP_TABLENAME='Po_PARA'+RTRIM(LTRIM(STR(@nParaCnt)))+'_upload'
				SET @CKEYFIELD='PARA'+RTRIM(LTRIM(STR(@nParaCnt)))+'_CODE'
			END

			SET @cCmd=N'IF EXISTS (SELECT TOP 1 '+@CKEYFIELD+' FROM '+@CTMP_TABLENAME+'(NOLOCK) WHERE sp_id='''+@nSpId+'''
							AND '+@cKeyField+'<>''0000000'')
							SET @bExists=1
						ELSE
							SET @bExists=0'
			PRINT @cCmd
			EXEC SP_EXECUTESQL @cCmd,N'@bExists BIT OUTPUT' ,@bExists=@bExists OUTPUT

		  	----FOR DUPLICATE ATTRIBUTE 
			
			IF @bExists=1
			BEGIN
				SET @CSTEP=70
				

				SET @cCmd=N'IF EXISTS (SELECT TOP 1 a.'+@CKEYFIELD+' FROM '+@CTMP_TABLENAME+' a (NOLOCK)
									   LEFT OUTER JOIN '+@CTABLENAME+' b (NOLOCK) ON a.'+@CKEYFIELD+'=b.'+@CKEYFIELD+'
									   WHERE sp_id='''+@nSpId+''' AND b.'+@CKEYFIELD+' IS NULL)
							SET @bExists=1
						ELSE
							SET @bExists=0'
				EXEC SP_EXECUTESQL @cCmd,N'@bExists BIT OUTPUT' ,@bExists=@bExists OUTPUT

		
				IF @bExists=1
				BEGIN

					IF @bParaTable=1
					BEGIN
						SET @CSTEP=72
						SET @cColName='PARA'+LTRIM(RTRIM(STR(@nParaCnt)))+'_name'
						EXEC SP3S_INACTIVE_MASTERS @CTEMPTABLE=@CTMP_TABLENAME,@CTABLENAME=@CTABLENAME,@CCOLNAME=@cColName,@CCOLKEYNAME=@CKEYFIELD,@CWHERE=@CWHERE
					END

					SET @CSTEP=75

					 EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB        
					 ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''        
					 ,@LINSERTONLY=1,@LUPDATEONLY=0        
					 ,@BALWAYSUPDATE=1
					 ,@CFILTERCONDITION=@CFILTERCONDITION 
				END
			END
			
		

	       
		   SET @BLOOP=@BLOOP +1  			
	END
    
	IF EXISTS (SELECT TOP 1 a.article_code FROM Po_ARTICLE_FIX_ATTR_upload a (NOLOCK)
				LEFT OUTER JOIN  ARTICLE_FIX_ATTR b (NOLOCK) ON a.article_code=b.article_code
			   WHERE a.sp_ID=@nSpId AND b.article_code IS NULL)
	BEGIN
		SET @CSTEP=80
	  
		SET @CTABLENAME='ARTICLE_FIX_ATTR'
		SET @CTMP_TABLENAME='Po_'+@CTABLENAME+'_upload'
		SET @CKEYFIELD='ARTICLE_CODE'
		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB        
			 ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='ARTICLE_CODE',@CKEYFIELD3=''        
			 ,@LINSERTONLY=1,@LUPDATEONLY=0 ,@BALWAYSUPDATE=1,@CFILTERCONDITION=@CFILTERCONDITION        
    END            							  
	
	
	SET @CSTEP=140
 
	
	--DECLARE @bINSERTSKUONLY INT 
	--SET @bINSERTSKUONLY=0
	
	--SET @CSTEP=145
 
	
 --   IF EXISTS (SELECT TOP 1 'U' FROM Po_SKU_upload A (NOLOCK) JOIN IRD01106 B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
	--		   JOIN IRM01106 C (NOLOCK) ON B.IRM_MEMO_ID=C.IRM_MEMO_ID 
	--		   WHERE sp_ID=@nSpId AND C.TYPE IN (1,3,4) AND ISNULL(b.new_product_code,'')='')
 --   BEGIN
	--	SET @CSTEP=150
	

 --     SET @bINSERTSKUONLY=1
 --     UPDATE A SET ARTICLE_CODE=B.ARTICLE_CODE,PARA1_CODE=B.PARA1_CODE,PARA2_CODE=B.PARA2_CODE,
 --                PARA3_CODE=B.PARA3_CODE,PARA4_CODE=B.PARA4_CODE,PARA5_CODE=B.PARA5_CODE,
 --                PARA6_CODE=B.PARA6_CODE ,MRP=B.MRP,ws_price=b.ws_price 
 --                FROM PO_SKU_UPLOAD A (NOLOCK) 
 --                JOIN SKU B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
 --                JOIN IRD01106 C (NOLOCK) ON C.product_code=A.product_code
 --                JOIN irm01106 D (NOLOCK) ON D.irm_memo_id=C.irm_memo_id
 --                WHERE  sp_ID=@nSpId AND D.TYPE IN (1,3,4) AND ISNULL(c.new_product_code,'')=''
 --   END
    
	--SET @CSTEP=155
 

	
	SET @CSTEP=157
	
	IF EXISTS (SELECT TOP 1 a.product_code FROM Po_SKU_upload a (NOLOCK) LEFT OUTER JOIN 
			   sku b (NOLOCK) ON a.product_code=b.product_code
			   WHERE a.sp_ID=@nSpId AND b.product_code IS NULL) 
	BEGIN
		SET @CSTEP=160

		SET @CTABLENAME='SKU'
		SET @CTMP_TABLENAME='PO_SKU_UPLOAD'
		SET @CKEYFIELD='PRODUCT_CODE'

	
		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1 
	END


	IF EXISTS (SELECT TOP 1 a.product_code FROM Po_SKU_OH_upload a (NOLOCK) LEFT OUTER JOIN 
			   sku_oh b (NOLOCK) ON a.product_code=b.product_code
			   WHERE a.sp_ID=@nSpId AND b.product_code IS NULL) 
	BEGIN
		SET @CSTEP=160

		SET @CTABLENAME='SKU_OH'
		SET @CTMP_TABLENAME='PO_SKU_OH_UPLOAD'
		SET @CKEYFIELD='PRODUCT_CODE'

	
		EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=1 
	END
								  

LBLDELETETEMPDATA:
 
	IF @BADDMODE=0
		PRINT 'ADDMODE:N'
	ELSE
		PRINT 'ADDMODE:Y'	
	
	SET @CSTEP=165
  

	---UPDATING TRANSACTION TABLES
	SET @CTABLENAME='pom01106'
	SET @CTMP_TABLENAME='Po_Pom01106_UPLOAD'
	SET @CKEYFIELD='po_id'

	SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nspid and tablename='pom01106'
	SET @LUPDATEONLY = (CASE WHEN @BADDMODE=0 THEN 1 ELSE 0 END)	

	EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@LUPDATEONLY
							  ,@BALWAYSUPDATE=1,@lUpdateXns=1,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1  


	SET @CSTEP=170
  
	
	SET @CTABLENAME='POD01106'
	SET @CTMP_TABLENAME='Po_POD01106_UPLOAD'
	SET @CKEYFIELD='ROW_ID'
	
	
	SELECT @cMissingRowId='',@lUpdateonly=0
	IF @BADDMODE=0
	BEGIN
		SET @CSTEP=185

		SELECT TOP 1 @cMissingRowId=b.row_id FROM 
		(SELECT row_id  FROM PO_POD01106_UPLOAD (NOLOCK) WHERE sp_id=(@nSpId+@cLocId )) A
		RIGHT OUTER JOIN 
		(SELECT row_id FROM PO_POD01106_UPLOAD (NOLOCK) WHERE sp_id=@nSpId) b ON 
		a.row_id=b.row_id WHERE a.row_id IS NULL

		--SELECT 'check @cMissingRowId of pid',@cMissingRowId

		IF ISNULL(@cMissingRowId,'')='' 
		begin
			SET @lUpdateonly=1

		end
	END

	SET @CSTEP=190
 
	
	--select 'check @lUpdateonly',@lUpdateonly as lUpdateonly,@cMissingRowId as MissingRowId
   SELECT @cUpdatestr=updatestr FROM  savetran_updcols_updatestr (NOLOCK) WHERE sp_id=@nspid and tablename='pod01106'
  
	set @cUpdatestr=isnull(@cUpdatestr,'')
	EXEC UPDATEMASTERXN_opt @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
							  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
							  ,@LINSERTONLY=@BADDMODE,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=@lUpdateonly
							  ,@BALWAYSUPDATE=1,@lUpdateXns=@BADDMODE,@cUpdatestrPara=@cUpdatestr,@bThruUpdatestrPara=1 



    IF EXISTS (SELECT TOP 1'U' FROM PO_XN_AUDIT_TRIAL_DET_UPLOAD (NOLOCK) WHERE SP_ID=@NSPID)
	BEGIN
	    
		
		DELETE A FROM PO_XN_AUDIT_TRIAL_DET_UPLOAD A (NOLOCK) 
		JOIN XN_AUDIT_TRIAL_DET B (NOLOCK) ON A.XN_TYPE =B.XN_TYPE AND A.XN_ID =B.XN_ID AND A.ID=B.ID 
		WHERE A.SP_ID =@nSpId 

	    SET @CTABLENAME='XN_AUDIT_TRIAL_DET'
		SET @CTMP_TABLENAME='PO_XN_AUDIT_TRIAL_DET_UPLOAD'
		SET @CKEYFIELD='XN_ID'

		EXEC UPDATEMASTERXN_MIRROR @CSOURCEDB=@CSOURCEDB,@CSOURCETABLE=@CTMP_TABLENAME,@CDESTDB=@CMERGEDB
								  ,@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD,@CKEYFIELD2='',@CKEYFIELD3=''
								  ,@LINSERTONLY=1,@CFILTERCONDITION=@CFILTERCONDITION,@LUPDATEONLY=0
								  ,@BALWAYSUPDATE=0,@BUPDATEXNS =1						  
	

	END
	   
	   
	  if @BADDMODE=0
	  begin
	  DELETE A FROM PURCHASEORDERPROCESSINGNEW A (NOLOCK)
	  JOIN POD01106 B (NOLOCK) ON A.ROWID =B.ROW_ID 
	  WHERE A.XNTYPE ='PURCHASEORDER' AND B.PO_ID =@CMEMOID 
	  end
	
	  INSERT INTO PURCHASEORDERPROCESSINGNEW(XNTYPE,ROWID,REFROWID,QTY)
	  SELECT 'PURCHASEORDER' AS XNTYPE, B.ROW_ID ROWID,B.ROW_ID REFROWID,
	          B.QUANTITY +
			 CEILING((ISNULL(B.INVOICE_QUANTITY,0) * ISNULL(B.TOLERANCE_PERCENTAGE,0))/100)
	  FROM POM01106 A (NOLOCK)
	  JOIN POD01106 B (NOLOCK) ON A.PO_ID =B.PO_ID 
	  WHERE A.CANCELLED =0 AND A.PO_ID =@CMEMOID
	
SHORTCLOSE_PROC:
      
      if @bshortclose =1
      begin
      
		   IF EXISTS (SELECT TOP 1 'U'  FROM PURCHASEORDERPROCESSINGNEW A (NOLOCK)
		   JOIN POD01106 B (NOLOCK) ON A.ROWID    =B.ROW_ID 
		   WHERE  B.PO_ID =@CMEMOID  AND A.XNTYPE ='POSHORTCLOSE')
	       BEGIN
	       
			   DELETE A  FROM PURCHASEORDERPROCESSINGNEW A (NOLOCK)
			   JOIN POD01106 B (NOLOCK) ON A.ROWID    =B.ROW_ID 
			   WHERE  B.PO_ID =@CMEMOID  AND A.XNTYPE ='POSHORTCLOSE'
			   
		   END
	      
          INSERT INTO PURCHASEORDERPROCESSINGNEW(XNTYPE,ROWID,REFROWID,QTY)
          select 'POSHORTCLOSE' AS XNTYPE, B.ROW_ID ROWID,B.ROW_ID REFROWID ,
                 (CASE WHEN A.XNTYPE='PURCHASEORDER' THEN B.QUANTITY ELSE -1*QTY END) as QTY
          from PURCHASEORDERPROCESSINGNEW A (nolock)
          JOIN POD01106 B (NOLOCK) ON A.RefRowId   =B.row_id 
          WHERE  b.PO_ID =@CMEMOID  
          and  (CASE WHEN A.XNTYPE='PURCHASEORDER' THEN B.QUANTITY ELSE -1*QTY END)>0
          
      end
      
	
Validate:
	   
END TRY
BEGIN CATCH
	SET @CERRMSG='P:SP3s_SYNCH_UPLOADDATA_PO_OPT, MEMO ID :'+@CMEMOID+' STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO EXIT_PROC
END CATCH

EXIT_PROC:
   
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRMSG,'')='' 
			commit
		ELSE
			ROLLBACK
    END
	
	DECLARE @nSpIdCopy VARCHaR(50)
	SET @nSpIdCopy=@nSpId+@cLocId 
	SET @CSTEP=200
	EXEC SP3S_DELETEupload_pomerge_TABLES @nSpId,@nSpIdCopy


	
END	

