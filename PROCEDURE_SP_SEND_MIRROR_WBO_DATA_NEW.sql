CREATE PROCEDURE SP_SEND_MIRROR_WBO_DATA_NEW
(	
	 @CUPLOADEDXNID VARCHAR(50)
	,@CCURLOCID VARCHAR(5)
	,@BACKNOWLEDGE BIT=0	 
	,@CERRMSG VARCHAR(1000) OUTPUT
)	
--WITH ENCRYPTION
AS
/*
	SP_SEND_MIRROR_WBO_DATA_NEW_208_05_02_14 : THIS PROCEDURE WILL SEND WHOLESALE ORDER DATA FROM LOCATION TO HO.
*/
BEGIN
	DECLARE @DTSQL NVARCHAR(MAX),@CSPID VARCHAR(10),@CTEMPTABLE VARCHAR(500),@CMEMOID VARCHAR(50),
	@CTEMPMASTERTABLE VARCHAR(200),@CTEMPLMTABLE VARCHAR(200),@CTEMPLMPTABLE VARCHAR(200)
	,@CTEMPAREATABLE VARCHAR(200),@CTEMPCITYTABLE VARCHAR(200),@CTEMPDETTABLE VARCHAR(200),@CTEMPEMPTABLE VARCHAR(200)
	,@CTEMPPAYTABLE VARCHAR(200),@CTEMPPMSTTABLE VARCHAR(200)
	,@DMEMOLASTUPDATE DATETIME,@CTABLENAME VARCHAR(100),@BRECFOUND BIT,@CSTEP VARCHAR(5),@CFILTERCONDITION VARCHAR(MAX)
	,@CKEYFIELD VARCHAR(100)

	DECLARE @TXNSSENDINFO TABLE (ORG_TABLENAME VARCHAR(500),TMP_TABLENAME VARCHAR(500),XN_ID VARCHAR(40))  	
BEGIN TRY 	
	---- CALL ACKNOWLEDGEMENT OF MEMO SUCCESSFUL MERGING AT MIRRORING SERVER
	SET @CSTEP=0
	DECLARE @CTEMPDBNAME VARCHAR(40)
	
	set @CTEMPDBNAME=''
		--CHNAGE BY BAIJNATH
	SET @CMEMOID=@CUPLOADEDXNID
	

	---- IF NO MEMO FOUND , JUST END THE PROCESS
	IF ISNULL(@CMEMOID,'')=''
		GOTO END_PROC
LBLTABLEINFO:
	SET @CSTEP=50
	---- POPULATE LIST OF TABLES 

	SET @CSTEP=220
	---- SEND THE WBO MEMO MASTER TABLE
	SELECT DISTINCT  A.*,'WBO_BUYER_ORDER_MST_UPLOAD' AS TARGET_TABLENAME FROM BUYER_ORDER_MST A (NOLOCK)  WHERE A.ORDER_ID=@CMEMOID
	
	SET @CSTEP=245
	---- SEND THE BUYER_ORDER_DET RELATED TO WBO TABLE
	SELECT DISTINCT  A.*,'WBO_BUYER_ORDER_DET_UPLOAD' AS TARGET_TABLENAME FROM BUYER_ORDER_DET A (NOLOCK)  WHERE A.ORDER_ID=@CMEMOID
	
	SET @CSTEP=320
	---- SEND THE ARTICLE RELATED TO WBO TABLE
	SELECT DISTINCT  ARTICLE.*,'WBO_ARTICLE_UPLOAD' AS TARGET_TABLENAME,@CMEMOID AS WBO_MEMO_ID FROM BUYER_ORDER_DET A (NOLOCK) 
	JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE=A.ARTICLE_CODE
	WHERE A.ORDER_ID=@CMEMOID

	
	SET @CSTEP=330
	---- SEND THE PARA1 RELATED TO WBO TABLE
	SELECT DISTINCT  PARA1.*,'WBO_PARA1_UPLOAD' AS TARGET_TABLENAME,@CMEMOID AS WBO_MEMO_ID FROM BUYER_ORDER_DET A (NOLOCK) 
	JOIN PARA1 (NOLOCK) ON PARA1.PARA1_CODE=A.PARA1_CODE
	WHERE A.ORDER_ID=@CMEMOID

	
	SET @CSTEP=340
	---- SEND THE PARA2 RELATED TO WBO TABLE
	SELECT DISTINCT  PARA2.*,'WBO_PARA2_UPLOAD' AS TARGET_TABLENAME,@CMEMOID AS WBO_MEMO_ID FROM BUYER_ORDER_DET A (NOLOCK) 
	JOIN PARA2 (NOLOCK) ON PARA2.PARA2_CODE=A.PARA2_CODE
	WHERE A.ORDER_ID=@CMEMOID
	
	SET @CSTEP=345
	---- SEND THE PARA3 RELATED TO WBO TABLE
	SELECT DISTINCT  PARA3.*,'WBO_PARA3_UPLOAD' AS TARGET_TABLENAME,@CMEMOID AS WBO_MEMO_ID FROM BUYER_ORDER_DET A (NOLOCK) 
	JOIN PARA3 (NOLOCK) ON PARA3.PARA3_CODE=A.PARA3_CODE
	WHERE A.ORDER_ID=@CMEMOID

	SET @CSTEP=350
	---- SEND THE PARA3 RELATED TO WBO TABLE
	SELECT DISTINCT  PARA4.*,'WBO_PARA4_UPLOAD' AS TARGET_TABLENAME,@CMEMOID AS WBO_MEMO_ID FROM BUYER_ORDER_DET A (NOLOCK) 
	JOIN PARA4 (NOLOCK) ON PARA4.PARA4_CODE=A.PARA4_CODE
	WHERE A.ORDER_ID=@CMEMOID

	SET @CSTEP=355
	---- SEND THE PARA3 RELATED TO WBO TABLE
	SELECT DISTINCT  PARA5.*,'WBO_PARA5_UPLOAD' AS TARGET_TABLENAME,@CMEMOID AS WBO_MEMO_ID FROM BUYER_ORDER_DET A (NOLOCK) 
	JOIN PARA5 (NOLOCK) ON PARA5.PARA5_CODE=A.PARA5_CODE
	WHERE A.ORDER_ID=@CMEMOID

	SET @CSTEP=360
	---- SEND THE PARA3 RELATED TO WBO TABLE
	SELECT DISTINCT  PARA6.*,'WBO_PARA6_UPLOAD' AS TARGET_TABLENAME,@CMEMOID AS WBO_MEMO_ID FROM BUYER_ORDER_DET A (NOLOCK) 
	JOIN PARA6 (NOLOCK) ON PARA6.PARA6_CODE=A.PARA6_CODE
	WHERE A.ORDER_ID=@CMEMOID



	SET @CSTEP=390
	---- SEND THE EMPLOYEE RELATED TO WBO TABLE
	SELECT DISTINCT  EMPLOYEE.*,'WBO_EMPLOYEE_UPLOAD' AS TARGET_TABLENAME,@CMEMOID AS WBO_MEMO_ID FROM BUYER_ORDER_mst A (NOLOCK) 
	JOIN EMPLOYEE (NOLOCK) ON EMPLOYEE.emp_code=A.emp_code
	WHERE A.ORDER_ID=@CMEMOID
	
	
	GOTO END_PROC
		
END TRY
BEGIN CATCH
	SET @CERRMSG='P: SP_SEND_MIRROR_WBO_DATA_NEW, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO END_PROC
END CATCH 		

END_PROC:
	IF ISNULL(@CERRMSG,'')=''
		SELECT * FROM @TXNSSENDINFO	
END
---END OF PROCEDURE - SP_SEND_MIRROR_WBO_DATA_NEW
