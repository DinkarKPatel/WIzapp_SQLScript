CREATE PROCEDURE SP_PYMTDETAILS     --(LocId 3 digit change by Sanjay:06-11-2024) 
(      
 @NQUERYID NUMERIC(1)=1,      
 @CXNTYPE VARCHAR(40)='',      
 @CMEMOID VARCHAR(50)='',  
 @CWHERE VARCHAR(1000)='',
 @CWIZAPPUSERCODE	VARCHAR(10)=''
)
--WITH ENCRYPTION 
AS     
BEGIN      
 IF @NQUERYID=1  
 BEGIN
	DECLARE @bAllowPatchedView BIT
	SELECT @bAllowPatchedView =VALUE FROM USER_ROLE_DET A (NOLOCK)--ADDED
				JOIN USERS B (NOLOCK)--ADDED
				ON A.ROLE_ID=B.ROLE_ID 
				WHERE USER_CODE=@CWIZAPPUSERCODE 
				AND FORM_NAME='FRMSALE' 
				AND FORM_OPTION='ALLOW_VIEW_PATCH_DATA'		

	IF OBJECT_ID('TEMPDB..#TMPPYMT_PATCH','U') IS NOT NULL
		DROP TABLE #TMPPYMT_PATCH
	SELECT MEMO_ID AS CM_ID,ROW_ID,AMOUNT 
	INTO #TMPPYMT_PATCH FROM paymode_xn_det WHERE 1=2

	INSERT INTO #TMPPYMT_PATCH(CM_ID,ROW_ID,AMOUNT)
	SELECT A.MEMO_ID,ROW_ID,A.AMOUNT
	FROM paymode_xn_det  A
	JOIN CMM01106 B ON B.cm_id=A.memo_id
	WHERE A.XN_TYPE ='SLS' --AND ISNULL(b.patchup_run,0)=0
	AND A.MEMO_ID=@CMEMOID 
	AND (ISNULL(b.patchup_run,0)=0 OR (ISNULL(b.patchup_run,0)=1 AND ISNULL(@bAllowPatchedView,0)=1)) 

	INSERT INTO #TMPPYMT_PATCH(CM_ID,ROW_ID,AMOUNT)
	SELECT A.MEMO_ID,ROW_ID,ISNULL(A.OLD_AMOUNT,0)
	FROM paymode_xn_det  A
	JOIN CMM01106 B ON B.cm_id=A.memo_id
	WHERE A.XN_TYPE ='SLS' --AND ISNULL(b.patchup_run,0)=1 
	AND  A.MEMO_ID=@CMEMOID 
	AND ISNULL(b.patchup_run,0)=1 AND ISNULL(@bAllowPatchedView,0)=0

	INSERT INTO #TMPPYMT_PATCH(CM_ID,ROW_ID,AMOUNT)
	SELECT A.MEMO_ID,ROW_ID,ISNULL(A.AMOUNT,0)
	FROM paymode_xn_det  A
	WHERE A.XN_TYPE <>'SLS' 
	AND A.XN_TYPE =@CXNTYPE AND A.MEMO_ID=@CMEMOID 
	--SELECT * FROM #TMPPYMT_PATCH
  SELECT D1.amount, A.*,B.PAYMODE_NAME,C.* ,CAST(0 AS BIT ) AS DELETED,      
  (CASE WHEN A.CURRENCY_CONVERSION_RATE> 0 THEN     
  CAST(D1.AMOUNT/A.CURRENCY_CONVERSION_RATE AS NUMERIC(10,2)) ELSE D1.AMOUNT END ) AS BASIC_AMOUNT,
  ISNULL(S.CM_DT,ISNULL(R.ADV_REC_DT,'')) AS ADJ_MEMO_DT ,CAST('' AS VARCHAR(40))AS  SP_ID
  FROM PAYMODE_XN_DET A  (NOLOCK)   
  JOIN #TMPPYMT_PATCH D1 ON D1.CM_ID=A.memo_id AND A.row_id=D1.row_id
  JOIN PAYMODE_MST B (NOLOCK) ON B.PAYMODE_CODE=A.PAYMODE_CODE      
  JOIN PAYMODE_GRP_MST C (NOLOCK) ON C.PAYMODE_GRP_CODE=B.PAYMODE_GRP_CODE      
  LEFT OUTER JOIN CMM01106 S (NOLOCK) ON S.CM_ID=A.ADJ_MEMO_ID AND SUBSTRING(S.CM_NO,LEN(S.LOCATION_CODE)+3,1)='N'
  LEFT OUTER JOIN ARC01106 R (NOLOCK) ON R.ADV_REC_ID=A.ADJ_MEMO_ID AND R.ARC_TYPE=2  
  WHERE A.XN_TYPE =@CXNTYPE AND A.MEMO_ID=@CMEMOID       
   
END 
 ELSE IF @NQUERYID=2  
 BEGIN  
	IF @CWHERE=''  
	BEGIN
		IF @CXNTYPE IN ('WSL','WSR')
		BEGIN
			SELECT A.PAYMODE_CODE,A.PAYMODE_NAME ,B.*,A.CURRENCY_CONVERSION_RATE      
			FROM PAYMODE_MST A  (NOLOCK)    
			JOIN PAYMODE_GRP_MST B (NOLOCK) ON B.PAYMODE_GRP_CODE=A.PAYMODE_GRP_CODE      
			WHERE INACTIVE=0 AND PAYMODE_NAME<>'' AND A.PAYMODE_GRP_CODE NOT IN ('WCGV001'  ,'0000003')
			ORDER BY A.PAYMODE_GRP_CODE,A.PAYMODE_NAME
		END
		ELSE
		BEGIN
			SELECT A.PAYMODE_CODE,A.PAYMODE_NAME ,B.*,A.CURRENCY_CONVERSION_RATE      
			FROM PAYMODE_MST A  (NOLOCK)    
			JOIN PAYMODE_GRP_MST B (NOLOCK) ON B.PAYMODE_GRP_CODE=A.PAYMODE_GRP_CODE      
			WHERE INACTIVE=0 AND PAYMODE_NAME<>'' 
			--AND ( @CXNTYPE='' OR PAYMODE_CODE <> 'GVC0001' )  
			AND A.PAYMODE_GRP_CODE<>'WCGV001'  
			ORDER BY A.PAYMODE_GRP_CODE,A.PAYMODE_NAME
	  END
	END
	ELSE
		BEGIN
			DECLARE @CCMD NVARCHAR(4000)
			SET @CCMD=N' SELECT A.PAYMODE_CODE,A.PAYMODE_NAME ,B.*,A.CURRENCY_CONVERSION_RATE      
			  FROM PAYMODE_MST A  (NOLOCK)    
			  JOIN PAYMODE_GRP_MST B (NOLOCK) ON B.PAYMODE_GRP_CODE=A.PAYMODE_GRP_CODE      
			  WHERE INACTIVE=0 AND PAYMODE_NAME<>''''   AND A.PAYMODE_GRP_CODE IN (' + @CWHERE +')    
			  ORDER BY A.PAYMODE_GRP_CODE,A.PAYMODE_NAME' 
			PRINT @cCMD
			EXEC SP_EXECUTESQL @CCMD
		END
 END
 ELSE IF @NQUERYID=3      
  
    EXEC SP_WL_PENDINGCN @CXNTYPE,@CMEMOID   
 ELSE IF @NQUERYID=4      
	SELECT *,CONVERT(BIT,0) AS   [GV_SOLD]
	,CAST('' AS VARCHAR(100)) AS CUSTOMER_CODE 
	,CAST('' AS VARCHAR(100)) AS USER_CUSTOMER_CODE
	,CAST('' AS VARCHAR(100)) AS MOBILE,b.memo_id as cm_id
	FROM GV_GEN_DET A
	JOIN GV_GEN_MST B ON B.MEMO_ID=A.MEMO_ID
	WHERE 1=2
END
