CREATE PROCEDURE SP_RPT_EXCESS_INVOICE_QTY
(
 @DFM_DT DATETIME='',
 @DTO_DT DATETIME='',
 @CPARTY_NAME VARCHAR(MAX)=''
)
AS
BEGIN
    
    DECLARE @DTSQL NVARCHAR(MAX)
     IF OBJECT_ID ('TEMPDB..#TMPINV','U') IS NOT NULL
       DROP TABLE #TMPINV
    
      SELECT B.AC_CODE, WPS.ORDER_ID, A.PS_ID, SKU.ARTICLE_CODE,SKU.PARA1_CODE,SKU.PARA2_CODE,
           SUM(A.QUANTITY) AS INVOICE_QTY
     INTO #TMPINV 
     FROM IND01106 A
     JOIN INM01106 B ON A.INV_ID =B.INV_ID 
     JOIN SKU SKU ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
     JOIN
     (
       SELECT  A.ORDER_ID, A.PS_ID ,SKU.ARTICLE_CODE,SKU.PARA1_CODE,SKU.PARA2_CODE,
		 SUM(A.QUANTITY) AS WPS_QTY
		 FROM WPS_DET A
		 JOIN WPS_MST B ON A.PS_ID =B.PS_ID
		 JOIN SKU SKU ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
		 WHERE B.CANCELLED=0
		 AND A.ORDER_ID<>''
		 GROUP BY A.ORDER_ID,A.PS_ID ,SKU.ARTICLE_CODE,SKU.PARA1_CODE,SKU.PARA2_CODE
     ) WPS ON WPS.PS_ID=A.PS_ID
     AND WPS.ARTICLE_CODE =SKU.ARTICLE_CODE
     AND WPS.PARA1_CODE  =SKU.PARA1_CODE
     AND WPS.PARA2_CODE =SKU.PARA2_CODE
     WHERE 1=2
     GROUP BY B.AC_CODE,WPS.ORDER_ID,A.PS_ID, SKU.ARTICLE_CODE,SKU.PARA1_CODE,SKU.PARA2_CODE
     
       
    SET @DTSQL=N' SELECT B.AC_CODE,WPS.ORDER_ID, A.PS_ID, SKU.ARTICLE_CODE,SKU.PARA1_CODE,SKU.PARA2_CODE,
           SUM(A.QUANTITY) AS INVOICE_QTY 
     FROM IND01106 A
     JOIN INM01106 B ON A.INV_ID =B.INV_ID 
     JOIN SKU SKU ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
     LEFT JOIN
     (
         SELECT  A.ORDER_ID, A.PS_ID ,SKU.ARTICLE_CODE,SKU.PARA1_CODE,SKU.PARA2_CODE,
		 SUM(A.QUANTITY) AS WPS_QTY
		 FROM WPS_DET A
		 JOIN WPS_MST B ON A.PS_ID =B.PS_ID
		 JOIN SKU SKU ON SKU.PRODUCT_CODE=A.PRODUCT_CODE
		 WHERE B.CANCELLED=0
		 AND B.ENTRY_MODE=3
		 GROUP BY A.ORDER_ID,A.PS_ID ,SKU.ARTICLE_CODE,SKU.PARA1_CODE,SKU.PARA2_CODE
     ) WPS ON WPS.PS_ID=A.PS_ID
     AND WPS.ARTICLE_CODE =SKU.ARTICLE_CODE
     AND WPS.PARA1_CODE  =SKU.PARA1_CODE
     AND WPS.PARA2_CODE =SKU.PARA2_CODE
     JOIN LM01106 LM ON LM.AC_CODE=B.AC_CODE
     WHERE A.PS_ID <>''''
     AND B.INV_DT BETWEEN '''+CONVERT(VARCHAR(10),@DFM_DT,121)+'''
     AND '''+CONVERT(VARCHAR(10),@DTO_DT,121)+'''
     AND ('''+@CPARTY_NAME+'''='''' OR LM.AC_NAME LIKE ''%'+@CPARTY_NAME+'%'')
     GROUP BY B.AC_CODE,WPS.ORDER_ID,A.PS_ID, SKU.ARTICLE_CODE,SKU.PARA1_CODE,SKU.PARA2_CODE '
      INSERT INTO #TMPINV
     EXEC SP_EXECUTESQL @DTSQL
    PRINT @DTSQL
    
    
    
    SELECT LM.AC_NAME,
          ISNULL(A.ORDER_ID,'') AS ORDER_ID, ART.ARTICLE_NO,
           P1.PARA1_NAME,P2.PARA2_NAME,
           ISNULL(B.ORDER_QTY,0) AS CAL_ORDER_QTY,
           A.INVOICE_QTY AS CAL_INVOICE_QTY,
           CASE WHEN A.INVOICE_QTY- ISNULL(B.ORDER_QTY,0)>0 THEN A.INVOICE_QTY- ISNULL(B.ORDER_QTY,0)
           ELSE 0 END AS CAL_EXCESS_QTY
           
    FROM 
    (
    SELECT A.AC_CODE, A.ORDER_ID, A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE,
           SUM(A.INVOICE_QTY) AS INVOICE_QTY 
    FROM #TMPINV A
    GROUP BY A.AC_CODE,A.ORDER_ID, A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE
    ) A
    LEFT JOIN
    (
     SELECT A.ORDER_ID,A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE,
           SUM(A.QUANTITY ) AS ORDER_QTY  
     FROM BUYER_ORDER_DET A
     JOIN BUYER_ORDER_MST B ON A.ORDER_ID =B.ORDER_ID 
     WHERE B.CANCELLED =0
     GROUP BY A.ORDER_ID,A.ARTICLE_CODE,A.PARA1_CODE,A.PARA2_CODE
    )  B ON A.ORDER_ID=B.ORDER_ID
    AND A.ARTICLE_CODE=B.ARTICLE_CODE 
    AND A.PARA1_CODE=B.PARA1_CODE
    AND A.PARA2_CODE=B.PARA2_CODE
    JOIN ARTICLE ART (NOLOCK) ON ART.ARTICLE_CODE=A.ARTICLE_CODE
    JOIN PARA1 P1 (NOLOCK) ON P1.PARA1_CODE=A.PARA1_CODE
    JOIN PARA2 P2 (NOLOCK) ON P2.PARA2_CODE=A.PARA2_CODE
    JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE=A.AC_CODE
    ORDER BY  LM.AC_NAME,CASE WHEN ISNULL(A.ORDER_ID,'')<>'' THEN 1 ELSE 2 END,
   ORDER_ID,ART.ARTICLE_NO,P1.PARA1_NAME,P2.PARA2_NAME


END
