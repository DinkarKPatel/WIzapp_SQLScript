CREATE PROCEDURE SP3SPRINTREPORT
(	
	 @CXNTYPE VARCHAR(10)='SLS'
	,@CPRINTID VARCHAR(40)='SLS0000001'
	,@CXNID VARCHAR(40)
)
AS
BEGIN
SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED  
  
DECLARE @CMSTCOLS NVARCHAR(MAX),@CDETCOLS NVARCHAR(MAX),@CMSTCMD NVARCHAR(MAX),@CDETCMD NVARCHAR(MAX)  
        ,@CMSTSALEPERSON NVARCHAR(MAX),@CMSTPAYMODES NVARCHAR(MAX),@CSEPARATOR VARCHAR(2),@CDESC VARCHAR(MAX),
        @CDESC1 VARCHAR(MAX),@CDESC2 VARCHAR(MAX),@CDESC3 VARCHAR(MAX)   
        ,@COUTQTYSUMMARY VARCHAR(1000),@CINQTYSUMMARY VARCHAR(1000),@CSHOWBILLDISCOUNT CHAR(1)  
        ,@CCMD NVARCHAR(MAX),@REFPRINTID VARCHAR(MAX)  
        , @BPICKALIAS VARCHAR(1),@NPRINTLENGTH VARCHAR(3),@CDETTRANSPORT NVARCHAR(MAX),@SALEPERSON VARCHAR(100)  
  
IF @CXNTYPE='SLS'  
 GOTO RETAILSALEPRINT  
IF @CXNTYPE='WSL'  
    GOTO WHOLESALEPRINT  
IF @CXNTYPE='PRT'  
    GOTO DEBITNOTEPRINT  
    
ELSE  
 GOTO ENDPROC  
  
RETAILSALEPRINT:  
 --DETAILS FROM COMPANY MASTER  
 SET @CMSTCOLS='CMP.COMPANY_NAME,CMP.ADDRESS1,CMP.ADDRESS2,CMP.CITY+''-''+CMP.PIN AS CITY,CMP.PHONES_FAX,CMP.TIN_NO,CMP.TAN_NO  
            ,CMP.CIN,CMP.LOGO_PATH'  
  
 --DETAILS FROM CUSTOMER MASTER  
 SET @CMSTCOLS=@CMSTCOLS+',RTRIM(LTRIM(CUS.CUSTOMER_TITLE+'' ''+CUS.CUSTOMER_FNAME+'' ''+CUS.CUSTOMER_LNAME)) AS CUSTOMER  
        ,RTRIM(LTRIM(CUS.ADDRESS1+'' ''+CUS.ADDRESS2+'' ''+CUSCT.CITY+'' ''+ CASE WHEN CUS.MOBILE<>'''' THEN ''MOB:-''+CUS.MOBILE ELSE '''' END)) AS CUSTOMERADDRESS'  
   
 --FIX DETAILS FROM CMM01106  
 SET @CMSTCOLS=@CMSTCOLS+',CMM.CM_NO AS NO,CONVERT(VARCHAR,CMM.CM_DT,105) AS DATE,RIGHT(CONVERT(VARCHAR,CMM.CM_TIME,100),7) AS TIME,(CMM.SUBTOTAL+CMM.SUBTOTAL_R) AS SUBTOTAL  
        ,CMM.NET_AMOUNT,CMM.REMARKS,CONVERT(NUMERIC(18,2),CMM.DISCOUNT_PERCENTAGE) AS DISCOUNT_PERCENTAGE  
        ,CONVERT(NUMERIC(18,2),CMM.DISCOUNT_AMOUNT) AS DISCOUNT_AMOUNT,CMM.ATD_CHARGES AS OTHERCHARGES,ROUND_OFF AS ROUNDOFF'  
   
 --GET THE SALE PERSON FOR MASTER CURSOR  
 IF OBJECT_ID('TEMPDB..#MSTSALEPERSON','U') IS NOT NULL  
  DROP TABLE #MSTSALEPERSON  
  
 SELECT TOP 1 EMP_CODE,EMP_CODE1,EMP_CODE2  
 INTO #MSTSALEPERSON       
 FROM CMD01106 CMD(NOLOCK)  
 JOIN CMM01106 CMM(NOLOCK) ON CMD.CM_ID=CMM.CM_ID   
 WHERE CMM.CM_ID=@CXNID  
 ORDER BY EMP_CODE DESC,EMP_CODE1 DESC,EMP_CODE2 DESC  
   
 --DECLARE @BPICKALIAS VARCHAR(1),@NPRINTLENGTH VARCHAR(3)  
    
 SELECT @BPICKALIAS=PICKALIAS,@NPRINTLENGTH=COLUMNPRINTLENGTH  
 FROM PRINTDESCRIPTION  
 WHERE PRINTID=@CPRINTID AND VALUENAME='SALEPERSON'   
   
 SELECT @BPICKALIAS=ISNULL(@BPICKALIAS,0),@NPRINTLENGTH=ISNULL(@NPRINTLENGTH,0)  
    
 IF @BPICKALIAS=0  
 BEGIN  
  SET @CCMD=N'SELECT @CMSTSALEPERSON=(CASE WHEN ISNULL(EMP.EMP_NAME,'''')<>'''' THEN   
        '+(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE 'LEFT(' END)+'EMP.EMP_NAME'  
        +(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE ','+@NPRINTLENGTH+')' END)  
        +'+''/'' ELSE '''' END)  
           
           
   FROM #MSTSALEPERSON SP  
  LEFT JOIN EMPLOYEE EMP ON SP.EMP_CODE=EMP.EMP_CODE  
  LEFT JOIN EMPLOYEE EMP1 ON SP.EMP_CODE1=EMP1.EMP_CODE  
  LEFT JOIN EMPLOYEE EMP2 ON SP.EMP_CODE2=EMP2.EMP_CODE'  
  PRINT @CCMD  
  EXEC SP_EXECUTESQL @CCMD,N'@CMSTSALEPERSON VARCHAR(500) OUTPUT',@CMSTSALEPERSON OUTPUT  
 END  
 ELSE  
 BEGIN  
  --PICK ALIAS OF EMPLOYEES  
  SET @CCMD=N'SELECT @CMSTSALEPERSON=(CASE WHEN ISNULL(EMP.EMP_ALIAS,'''')<>'''' THEN   
        '+(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE 'LEFT(' END)+'EMP.EMP_ALIAS'  
        +(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE ','+@NPRINTLENGTH+')' END)  
        +'+''/'' ELSE '''' END)  
          
  FROM #MSTSALEPERSON SP  
  LEFT JOIN EMPLOYEE EMP ON SP.EMP_CODE=EMP.EMP_CODE  
  LEFT JOIN EMPLOYEE EMP1 ON SP.EMP_CODE1=EMP1.EMP_CODE  
  LEFT JOIN EMPLOYEE EMP2 ON SP.EMP_CODE2=EMP2.EMP_CODE'  
  PRINT @CCMD  
  EXEC SP_EXECUTESQL @CCMD,N'@CMSTSALEPERSON VARCHAR(500) OUTPUT',@CMSTSALEPERSON OUTPUT  
 END  
   
 SET @CMSTSALEPERSON=LTRIM(RTRIM(ISNULL(@CMSTSALEPERSON,'')))  
   
 IF RIGHT(@CMSTSALEPERSON,1)='/'  
  SET @CMSTSALEPERSON=SUBSTRING(@CMSTSALEPERSON,1,LEN(@CMSTSALEPERSON)-1)  
  
 SET @CMSTCOLS=@CMSTCOLS+','''+@CMSTSALEPERSON+''' AS SALEPERSON '  
   
 SET @SALEPERSON=@CMSTSALEPERSON  
-------------------------- GET THE SALE PERSON 1-----  
 IF @BPICKALIAS=0  
 BEGIN  
  SET @CCMD=N'SELECT @CMSTSALEPERSON=(CASE WHEN ISNULL(EMP1.EMP_NAME,'''')<>'''' THEN   
        '+(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE 'LEFT(' END)+'EMP1.EMP_NAME'  
        +(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE ','+@NPRINTLENGTH+')' END)  
        +'+''/'' ELSE '''' END)  
           
   FROM #MSTSALEPERSON SP  
  LEFT JOIN EMPLOYEE EMP ON SP.EMP_CODE=EMP.EMP_CODE  
  LEFT JOIN EMPLOYEE EMP1 ON SP.EMP_CODE1=EMP1.EMP_CODE  
  LEFT JOIN EMPLOYEE EMP2 ON SP.EMP_CODE2=EMP2.EMP_CODE'  
  PRINT @CCMD  
  EXEC SP_EXECUTESQL @CCMD,N'@CMSTSALEPERSON VARCHAR(500) OUTPUT',@CMSTSALEPERSON OUTPUT  
 END  
 ELSE  
 BEGIN  
  --PICK ALIAS OF EMPLOYEES  
  SET @CCMD=N'SELECT @CMSTSALEPERSON=(CASE WHEN ISNULL(EMP1.EMP_ALIAS,'''')<>'''' THEN   
        '+(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE 'LEFT(' END)+'EMP1.EMP_ALIAS'  
        +(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE ','+@NPRINTLENGTH+')' END)  
        +'+''/'' ELSE '''' END)  
          
           
   FROM #MSTSALEPERSON SP  
  LEFT JOIN EMPLOYEE EMP ON SP.EMP_CODE=EMP.EMP_CODE  
  LEFT JOIN EMPLOYEE EMP1 ON SP.EMP_CODE1=EMP1.EMP_CODE  
  LEFT JOIN EMPLOYEE EMP2 ON SP.EMP_CODE2=EMP2.EMP_CODE'  
  PRINT @CCMD  
  EXEC SP_EXECUTESQL @CCMD,N'@CMSTSALEPERSON VARCHAR(500) OUTPUT',@CMSTSALEPERSON OUTPUT  
 END  
   
 SET @CMSTSALEPERSON=LTRIM(RTRIM(ISNULL(@CMSTSALEPERSON,'')))  
   
 IF RIGHT(@CMSTSALEPERSON,1)='/'  
  SET @CMSTSALEPERSON=SUBSTRING(@CMSTSALEPERSON,1,LEN(@CMSTSALEPERSON)-1)  
  
 SET @CMSTCOLS=@CMSTCOLS+','''+@CMSTSALEPERSON+''' AS SALEPERSON2'  
  
   
 -------------------------- GET THE SALE PERSON 2 -----------------------  
 IF @BPICKALIAS=0  
 BEGIN  
  SET @CCMD=N'SELECT @CMSTSALEPERSON=(CASE WHEN ISNULL(EMP2.EMP_NAME,'''')<>'''' THEN   
        '+(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE 'LEFT(' END)+'EMP2.EMP_NAME'  
        +(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE ','+@NPRINTLENGTH+')' END)  
        +'+''/'' ELSE '''' END)  
           
   FROM #MSTSALEPERSON SP  
  LEFT JOIN EMPLOYEE EMP ON SP.EMP_CODE=EMP.EMP_CODE  
  LEFT JOIN EMPLOYEE EMP1 ON SP.EMP_CODE1=EMP1.EMP_CODE  
  LEFT JOIN EMPLOYEE EMP2 ON SP.EMP_CODE2=EMP2.EMP_CODE'  
  PRINT @CCMD  
  EXEC SP_EXECUTESQL @CCMD,N'@CMSTSALEPERSON VARCHAR(500) OUTPUT',@CMSTSALEPERSON OUTPUT  
 END  
 ELSE  
 BEGIN  
  --PICK ALIAS OF EMPLOYEES  
  SET @CCMD=N'SELECT @CMSTSALEPERSON=(CASE WHEN ISNULL(EMP2.EMP_ALIAS,'''')<>'''' THEN   
        '+(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE 'LEFT(' END)+'EMP2.EMP_ALIAS'  
        +(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE ','+@NPRINTLENGTH+')' END)  
        +'+''/'' ELSE '''' END)  
          
           
   FROM #MSTSALEPERSON SP  
  LEFT JOIN EMPLOYEE EMP ON SP.EMP_CODE=EMP.EMP_CODE  
  LEFT JOIN EMPLOYEE EMP1 ON SP.EMP_CODE1=EMP1.EMP_CODE  
  LEFT JOIN EMPLOYEE EMP2 ON SP.EMP_CODE2=EMP2.EMP_CODE'  
  PRINT @CCMD  
  EXEC SP_EXECUTESQL @CCMD,N'@CMSTSALEPERSON VARCHAR(500) OUTPUT',@CMSTSALEPERSON OUTPUT  
 END  
   
 SET @CMSTSALEPERSON=LTRIM(RTRIM(ISNULL(@CMSTSALEPERSON,'')))  
   
 IF RIGHT(@CMSTSALEPERSON,1)='/'  
  SET @CMSTSALEPERSON=SUBSTRING(@CMSTSALEPERSON,1,LEN(@CMSTSALEPERSON)-1)  
  
 SET @CMSTCOLS=@CMSTCOLS+','''+@CMSTSALEPERSON+''' AS SALEPERSON3'  
 ----------------------------------  
   
  
 --SET @CMSTCOLS=@CMSTCOLS+','''+@CMSTSALEPERSON+''' AS SALEPERSON3'     
   
  IF OBJECT_ID('#PAYMENTS','U') IS NOT NULL  
  DROP TABLE #PAYMENTS  
 --GET THE PAYMENT MODES FOR THIS TRANSACTION   
     SELECT   
   (CASE WHEN PM.PAYMODE_GRP_CODE='0000001' THEN 1  
      WHEN PM.PAYMODE_GRP_CODE='0000002' THEN 2  
      ELSE 3 END) AS PAYORDER       
  ,(CASE WHEN PM.PAYMODE_GRP_CODE='0000001' THEN PAYMODE_NAME  
      WHEN PM.PAYMODE_GRP_CODE='0000002' THEN PAYMODE_NAME  
      ELSE PAYMODE_NAME END) AS PAYMODES    
  ,(CASE WHEN PM.PAYMODE_GRP_CODE='0000001' THEN SUM(AMOUNT)  
      WHEN PM.PAYMODE_GRP_CODE='0000002' THEN SUM(AMOUNT)  
      ELSE SUM(AMOUNT) END) AS PAYAMOUNT  
  INTO #PAYMENTS  
  FROM PAYMODE_XN_DET PXD  
  JOIN PAYMODE_MST PM ON PXD.PAYMODE_CODE=PM.PAYMODE_CODE  
  WHERE PXD.MEMO_ID=@CXNID AND PXD.XN_TYPE='SLS'   
  GROUP BY PM.PAYMODE_GRP_CODE,PM.PAYMODE_NAME  
  ORDER BY PAYORDER  
   
 SET @CMSTPAYMODES=''  
 SELECT @CMSTPAYMODES=@CMSTPAYMODES+ '' +PAYMODES+ ':' +LTRIM(RTRIM(STR(PAYAMOUNT,18,2)))  
 FROM #PAYMENTS  
   
   
   
 SET @CMSTCOLS=@CMSTCOLS+','''+@CMSTPAYMODES+''' AS PAYMENTS'  
   
 ---GET THE QUANTITY SUMMARY FOR THE CASH MEMO  
 IF OBJECT_ID('TEMPDB..#QUANTITYSUM','U') IS NOT NULL  
  DROP TABLE #QUANTITYSUM  
   
 SELECT ART.DISCON,' '+UOM.UOM_NAME AS UOM_NAME  
    ,SUM(CASE WHEN CMD.QUANTITY>=0 THEN CMD.QUANTITY ELSE 0 END) AS OUT_QUANTITY  
    ,SUM(CASE WHEN CMD.QUANTITY<0 THEN ABS(CMD.QUANTITY) ELSE 0 END) AS IN_QUANTITY  
    ,COUNT(CMD.ROW_ID) AS ITEMCOUNT  
 INTO #QUANTITYSUM  
 FROM CMD01106 CMD  
 JOIN SKU ON CMD.PRODUCT_CODE=SKU.PRODUCT_CODE  
 JOIN ARTICLE ART ON SKU.ARTICLE_CODE=ART.ARTICLE_CODE  
 JOIN UOM ON UOM.UOM_CODE=ART.UOM_CODE  
 WHERE CMD.CM_ID=@CXNID  
 GROUP BY ART.DISCON,UOM.UOM_NAME  
 ORDER BY ART.DISCON  
   
 IF EXISTS(SELECT TOP 1 'U' FROM #QUANTITYSUM WHERE OUT_QUANTITY<>0)  
 BEGIN  
  SET @COUTQTYSUMMARY='OUT :'  
   SELECT @COUTQTYSUMMARY=@COUTQTYSUMMARY+' '+LTRIM(RTRIM(STR(OUT_QUANTITY,18,2)))+' '+UOM_NAME   
         +(CASE WHEN DISCON=2 THEN '/('+LTRIM(RTRIM(STR(ITEMCOUNT)))+')' ELSE '' END)    
  FROM #QUANTITYSUM  
  WHERE OUT_QUANTITY<>0  
 END  
 ELSE   
  SET @COUTQTYSUMMARY='OUT : 0'  
   
 SET @CMSTCOLS=@CMSTCOLS+','''+@COUTQTYSUMMARY+''' AS OUTQUANTITY'  
    
 IF EXISTS(SELECT TOP 1 'U' FROM #QUANTITYSUM WHERE IN_QUANTITY<>0)  
 BEGIN  
  SET @CINQTYSUMMARY='IN :'  
    SELECT @CINQTYSUMMARY=@CINQTYSUMMARY+' '+LTRIM(RTRIM(STR(IN_QUANTITY,18,2)))+' '+UOM_NAME    
         +(CASE WHEN DISCON=2 THEN '/('+LTRIM(RTRIM(STR(ITEMCOUNT)))+')' ELSE '' END)    
  FROM #QUANTITYSUM  
  WHERE IN_QUANTITY<>0  
 END  
 ELSE   
  SET @CINQTYSUMMARY='RET: 0'   
   
   
 SET @CMSTCOLS=@CMSTCOLS+','''+@CINQTYSUMMARY+''' AS INQUANTITY'  
   
 --FINAL PRINT MASTER CURSOR  
  --FINAL PRINT MASTER CURSOR  
 SET @CMSTCMD=N'SELECT '+@CMSTCOLS  
     +',CMP.EMAIL_ID,U.USERNAME,CUS.USER_CUSTOMER_CODE,CMM.CASH_TENDERED,CMM.PAYBACK,  
     CMM.CM_DT,CMD.EXCLUSIVEAMOUNT AS TAX_AMOUNT,  
     --CMD.TAX_AMOUNT,  
     CMD.INCLUSIVEAMOUNT,CMD.EXCLUSIVEAMOUNT,   
     ISNULL(PD.ISVISIBLE,0) AS ISVISIBLE,CMP.BL_COMPANY_NAME
    ,DBO.FN_CASHMEMO_HEADER_CAPTION('''+@CXNID+''') AS CASHMEMO_HEADER_CAPTION
       
       FROM CMM01106 CMM  
        LEFT OUTER JOIN  
        (  
         SELECT CM_ID, SUM(TAX_AMOUNT) AS TAX_AMOUNT,  
         SUM (CASE WHEN TAX_METHOD=1 THEN (TAX_AMOUNT)ELSE 0 END)AS INCLUSIVEAMOUNT,  
                     SUM (CASE WHEN TAX_METHOD=2 THEN (TAX_AMOUNT)ELSE 0 END)AS EXCLUSIVEAMOUNT   
                     FROM CMD01106      
                     GROUP BY CM_ID) CMD ON CMD.CM_ID = CMM.CM_ID     
        JOIN USERS U ON U.USER_CODE=CMM.USER_CODE  
        JOIN COMPANY CMP ON CMP.COMPANY_CODE=''01''  
        JOIN CUSTDYM CUS ON CMM.CUSTOMER_CODE=CUS.CUSTOMER_CODE  
        JOIN AREA CUSAR ON CUS.AREA_CODE=CUSAR.AREA_CODE  
        JOIN CITY CUSCT ON CUSAR.CITY_CODE=CUSCT.CITY_CODE  
        JOIN PRINTDETAIL PD (NOLOCK) ON PD.PRINTID='''+@CPRINTID+''' AND DISPLAYNAME=''SALE PERSON''  
        WHERE CMM.CM_ID='''+@CXNID+''''  
          
        
  ------FOR SAMPLE----  
  IF (@CXNID='SAMPLE')  
  BEGIN  
  SET @CMSTCMD=N'SELECT COMPANY_NAME,ADDRESS1,ADDRESS2,CITY,PHONES_FAX,TIN_NO,TAN_NO,CIN,  
    LOGO_PATH,''PRAJ''CUSTOMER,''NOIDA''CUSTOMERADDRESS,''SAMPLE''NO  
    ,''06-01-2015''DATE,''5:09PM''TIME,''7800.00''SUBTOTAL,''7421.00''NET_AMOUNT,''SSS123''REMARKS,  
    ''10.00''DISCOUNT_PERCENTAGE,''780.00''DISCOUNT_AMOUNT,''50.00''OTHERCHARGES,''0.01''ROUNDOFF,''PRAKASH''SALEPERSON,  
    ''SETTLEMENT:''PAYMENTS,''OUT PCS 3''OUTQUANTITY,''RET : 0''INQUANTITY FROM COMPANY WHERE COMPANY_CODE=''01'''   
  END         
    
 PRINT @CMSTCMD  
   
 --SELECT * FROM PRINTDESCRIPTION  
   
 --START OF PREPARATION OF PRINT DETAIL CURSOR  
   SELECT @CDESC=ISNULL(@CDESC+'+'' '+COLUMNSEPARATOR+' ''+','')  
  +(CASE WHEN ISNULL(COLUMNPRINTLENGTH,0)=0 THEN '' ELSE 'LEFT(' END)+SOURCENAME+'.'+COLUMNNAME  
  +(CASE WHEN ISNULL(COLUMNPRINTLENGTH,0)=0 THEN '' ELSE ','+COLUMNPRINTLENGTH+')' END)  
   FROM PRINTDESCRIPTION   
   WHERE PRINTID=@CPRINTID AND VALUENAME='PARTICULARS'  
   AND ISVISIBLE=1 AND ISMASTERDATA=0  
   ORDER BY DISPLAYORDER  
   PRINT @CDESC  
   
   
   
   -------- CHANGE FOR 80 MM (LUCKNOW)
   
   SELECT @CDESC2= SOURCENAME+'.'+COLUMNNAME  
   FROM PRINTDESCRIPTION   
   WHERE PRINTID=@CPRINTID AND VALUENAME='PARTICULARS'  
   AND ISVISIBLE=1 AND ISMASTERDATA=0 AND DISPLAYNAME = 'BARCODE' 
   PRINT @CDESC2
   
   SELECT @CDESC3=ISNULL(@CDESC3+'+'' '+COLUMNSEPARATOR+' ''+','')  
  +(CASE WHEN ISNULL(COLUMNPRINTLENGTH,0)=0 THEN '' ELSE 'LEFT(' END)+SOURCENAME+'.'+COLUMNNAME  
  +(CASE WHEN ISNULL(COLUMNPRINTLENGTH,0)=0 THEN '' ELSE ','+COLUMNPRINTLENGTH+')' END)  
   FROM PRINTDESCRIPTION   
   WHERE PRINTID=@CPRINTID AND VALUENAME='PARTICULARS'  
   AND ISVISIBLE=1 AND ISMASTERDATA=0 AND DISPLAYNAME <> 'BARCODE' 
   ORDER BY DISPLAYORDER  
   PRINT @CDESC3

   -------------- 
   
   
  SELECT @REFPRINTID=REFPRINTID FROM PRINTMASTER WHERE PRINTID=@CPRINTID 
    IF @REFPRINTID='SLS0000005'
   BEGIN
	   SELECT @CDESC1=ISNULL(@CDESC1+'+'' '+COLUMNSEPARATOR+' ''+','')  
	  +(CASE WHEN ISNULL(COLUMNPRINTLENGTH,0)=0 THEN '' 
	  ELSE 'LEFT(' END)+SOURCENAME+'.'+(CASE WHEN COLUMNNAME='PRODUCT_CODE' THEN  +COLUMNNAME ELSE 'BL_'+COLUMNNAME END) 
	  +(CASE WHEN ISNULL(COLUMNPRINTLENGTH,0)=0 THEN '' ELSE ','+COLUMNPRINTLENGTH+')' END)  
	   FROM PRINTDESCRIPTION   
	   WHERE PRINTID=@CPRINTID AND VALUENAME='PARTICULARS'  
	   AND ISVISIBLE=1 AND ISMASTERDATA=0  
	   ORDER BY DISPLAYORDER  
	   PRINT @CDESC1 
   END	    
   /*  
  IF SHOW BILL DISCOUNT IS FALSE,DISCOUNT SHOULD BE SHIFTED AT ITEM LEVEL AND THUS  
  ITEM LEVEL DISCOUNT PERCENTAGE,DISCOUNT AMOUNT AND AMOUNT SHOULD BE RECALCULATED.  
   */  
   SELECT @CSHOWBILLDISCOUNT=ISMASTERDATA  
   FROM PRINTDETAIL  
   WHERE PRINTID=@CPRINTID AND DISPLAYNAME='BILL DISC' AND ISVISIBLE=1  
     
   SET @CSHOWBILLDISCOUNT=ISNULL(@CSHOWBILLDISCOUNT,1)  
     
   /*  
  TAX_METHOD : 1 IS INCLUSIVE ELSE EXCLUSIVE  
   */  
     
    SELECT @REFPRINTID=REFPRINTID FROM PRINTMASTER WHERE PRINTID=@CPRINTID 
    IF @REFPRINTID='SLS0000005'
    BEGIN
   SET @CDETCMD=N'SELECT ROW_NUMBER() OVER(ORDER BY CMD01106.SR_NO) AS SNO,SECTIOND.SUB_SECTION_NAME,ARTICLE_NAME,  
     '+(CASE WHEN @CDESC='' THEN '' ELSE  +'(CASE WHEN CMD01106.TAX_METHOD=1 THEN ' 
     + @CDESC+ ' ELSE ''*'' + ' +  @CDESC+   ' END)  AS PARTICULARS,' END)
     
  
     --+'(CASE WHEN ARTICLE.DISCON=1   THEN CAST(ROUND(CONVERT(DECIMAL(18),SUM(CMD01106.QUANTITY)),1) AS VARCHAR(20))  
     --     WHEN ARTICLE.DISCON=2 THEN CAST(ROUND(CONVERT(NUMERIC(18,2),SUM(CMD01106.QUANTITY)),1)  AS VARCHAR(20)) END) AS QUANTITY   
     +'(CAST(ROUND(CONVERT(NUMERIC(18,2),SUM(CMD01106.QUANTITY)),3)  AS VARCHAR(20))) AS QUANTITY   
      ----,'''+@SALEPERSON+''' AS SALEPERSON
      ,EMPLOYEE.EMP_NAME AS SALEPERSON  
      ,CMD01106.MRP AS RATE  
      ,CONVERT(NUMERIC(18,2),'+(CASE WHEN @CSHOWBILLDISCOUNT=1 THEN 'CMD01106.DISCOUNT_PERCENTAGE'  
    ELSE '(SUM(CMD01106.DISCOUNT_AMOUNT+CMD01106.CMM_DISCOUNT_AMOUNT)/SUM(CMD01106.QUANTITY*CMD01106.MRP))*100'  
    END)+') AS DISCOUNT_PERCENTAGE   
      ,CONVERT(NUMERIC(18,2),  
    '+(CASE WHEN @CSHOWBILLDISCOUNT=1 THEN 'SUM(CMD01106.DISCOUNT_AMOUNT)'   
       ELSE 'SUM(CMD01106.DISCOUNT_AMOUNT+CMD01106.CMM_DISCOUNT_AMOUNT)' END)+') AS DISCOUNT_AMOUNT   
      ,CONVERT(NUMERIC(18,2),CMD01106.TAX_PERCENTAGE) AS  TAX_PERCENTAGE  
      ,CONVERT(NUMERIC(18,2),SUM(CMD01106.TAX_AMOUNT)) AS TAX_AMOUNT  
      ,CONVERT(NUMERIC(18,2),  
      '+(CASE WHEN @CSHOWBILLDISCOUNT=1 THEN 'SUM(CMD01106.NET)'   
        ELSE 'SUM(CMD01106.NET-CMD01106.CMM_DISCOUNT_AMOUNT)' END)+') AS AMOUNT  
      ,(CASE WHEN CMD01106.TAX_METHOD=1 THEN 0 ELSE 1 END) AS ISTAXEXCLUSIVE,
      SECTIOND.BL_SUB_SECTION_NAME,BL_ARTICLE_NAME
      ,(CASE WHEN CMD01106.TAX_METHOD=1 THEN '+ @CDESC1+' 
      ELSE ''*'' + ' +  @CDESC1+   ' END) AS BL_PARTICULARS

  FROM CMD01106 (NOLOCK)  
  JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =CMD01106.PRODUCT_CODE   
  JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE =SKU.ARTICLE_CODE   
  JOIN UOM (NOLOCK) ON UOM.UOM_CODE =ARTICLE.UOM_CODE   
  JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE=SECTIOND.SUB_SECTION_CODE  
  JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE=SECTIONM.SECTION_CODE  
  JOIN PARA1 (NOLOCK) ON PARA1.PARA1_CODE =SKU.PARA1_CODE   
  JOIN PARA2 (NOLOCK) ON PARA2.PARA2_CODE =SKU.PARA2_CODE   
  JOIN PARA3 (NOLOCK) ON PARA3.PARA3_CODE =SKU.PARA3_CODE   
  JOIN PARA4 (NOLOCK) ON PARA4.PARA4_CODE =SKU.PARA4_CODE   
  JOIN PARA5 (NOLOCK) ON PARA5.PARA5_CODE =SKU.PARA5_CODE   
  JOIN PARA6 (NOLOCK) ON PARA6.PARA6_CODE =SKU.PARA6_CODE  
LEFT OUTER JOIN ARTICLE_FIX_ATTR ATTR  (NOLOCK) ON ARTICLE.ARTICLE_CODE = ATTR.ARTICLE_CODE 
LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE
LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE
LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE
LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE
LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE
LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE
LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE
LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE
LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE
LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE
LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE
LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE
LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE
LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE
LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE
LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE
LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE
LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE
LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE
LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE
LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE
LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE
LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE
LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE
LEFT OUTER JOIN ATTR25_MST AT25(NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE  LEFT JOIN EMPLOYEE ON EMPLOYEE.EMP_CODE=CMD01106.EMP_CODE  
  WHERE CMD01106.CM_ID='''+@CXNID+'''  
  GROUP BY '+(CASE WHEN @CDESC='' THEN '' ELSE  +'(CASE WHEN CMD01106.TAX_METHOD=1 
  THEN ' + @CDESC+ ' ELSE ''*'' + ' +  @CDESC+   ' END) ,' END)  
  +'CMD01106.MRP,CMD01106.DISCOUNT_PERCENTAGE,CMD01106.TAX_PERCENTAGE,SECTIOND.SUB_SECTION_NAME,
  ARTICLE_NAME,EMPLOYEE.EMP_NAME,CMD01106.SR_NO,CMD01106.TAX_METHOD,ARTICLE.DISCON,SECTIOND.BL_SUB_SECTION_NAME,
  BL_ARTICLE_NAME,(CASE WHEN CMD01106.TAX_METHOD=1 THEN '+ @CDESC1+' 
      ELSE ''*'' + ' +  @CDESC1+   ' END) 
  ORDER BY CMD01106.SR_NO'  
  END
  ELSE 
  BEGIN
    SET @CDETCMD=N'SELECT ROW_NUMBER() OVER(ORDER BY CMD01106.SR_NO) AS SNO,SECTIOND.SUB_SECTION_NAME,ARTICLE_NAME,  
     '+(CASE WHEN @CDESC='' THEN '' ELSE  +'(CASE WHEN CMD01106.TAX_METHOD=1 THEN ' 
     + @CDESC+ ' ELSE ''*'' + ' +  @CDESC+   ' END)  AS PARTICULARS,' END)
     
  
     --+'(CASE WHEN ARTICLE.DISCON=1   THEN CAST(ROUND(CONVERT(DECIMAL(18),SUM(CMD01106.QUANTITY)),1) AS VARCHAR(20))  
     --     WHEN ARTICLE.DISCON=2 THEN CAST(ROUND(CONVERT(NUMERIC(18,2),SUM(CMD01106.QUANTITY)),1)  AS VARCHAR(20)) END) AS QUANTITY   
     +'(CAST(ROUND(CONVERT(NUMERIC(18,2),SUM(CMD01106.QUANTITY)),3)  AS VARCHAR(20))) AS QUANTITY   
      ----,'''+@SALEPERSON+''' AS SALEPERSON 
      ,EMPLOYEE.EMP_NAME AS SALEPERSON 
      ,CMD01106.MRP AS RATE  
      ,CONVERT(NUMERIC(18,2),'+(CASE WHEN @CSHOWBILLDISCOUNT=1 THEN 'CMD01106.DISCOUNT_PERCENTAGE'  
    ELSE '(SUM(CMD01106.DISCOUNT_AMOUNT+CMD01106.CMM_DISCOUNT_AMOUNT)/SUM(CMD01106.QUANTITY*CMD01106.MRP))*100'  
    END)+') AS DISCOUNT_PERCENTAGE   
      ,CONVERT(NUMERIC(18,2),  
    '+(CASE WHEN @CSHOWBILLDISCOUNT=1 THEN 'SUM(CMD01106.DISCOUNT_AMOUNT)'   
       ELSE 'SUM(CMD01106.DISCOUNT_AMOUNT+CMD01106.CMM_DISCOUNT_AMOUNT)' END)+') AS DISCOUNT_AMOUNT   
      ,CONVERT(NUMERIC(18,2),CMD01106.TAX_PERCENTAGE) AS  TAX_PERCENTAGE  
      ,CONVERT(NUMERIC(18,2),SUM(CMD01106.TAX_AMOUNT)) AS TAX_AMOUNT  
      ,CONVERT(NUMERIC(18,2),  
      '+(CASE WHEN @CSHOWBILLDISCOUNT=1 THEN 'SUM(CMD01106.NET)'   
        ELSE 'SUM(CMD01106.NET-CMD01106.CMM_DISCOUNT_AMOUNT)' END)+') AS AMOUNT  
      ,(CASE WHEN CMD01106.TAX_METHOD=1 THEN 0 ELSE 1 END) AS ISTAXEXCLUSIVE,
      SECTIOND.BL_SUB_SECTION_NAME,BL_ARTICLE_NAME,ISNULL(SECTIOND.ALIAS,'''') AS ALIAS
      ,EMPLOYEE.EMP_NAME AS SALEPERSON1 
      ,EMPLOYEE1.EMP_NAME AS SALEPERSON2 
      ,EMPLOYEE2.EMP_NAME AS SALEPERSON3
       ,'+ @CDESC2+' AS PARTICULARSNEW
       ,(CASE WHEN CMD01106.TAX_METHOD=1 THEN '+ @CDESC3+' 
      ELSE ''*'' + ' +  @CDESC3+   ' END) AS SUBSECTIONNEW
------ ALIAS COLUMN SHOULD NOT BE STRICTLY REMOVED AS PER DISCUSSED WITH ALOK ON 05-04-2016 
  FROM CMD01106 (NOLOCK)  
  JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =CMD01106.PRODUCT_CODE   
  JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE =SKU.ARTICLE_CODE   
  JOIN UOM (NOLOCK) ON UOM.UOM_CODE =ARTICLE.UOM_CODE   
  JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE=SECTIOND.SUB_SECTION_CODE  
  JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE=SECTIONM.SECTION_CODE  
  JOIN PARA1 (NOLOCK) ON PARA1.PARA1_CODE =SKU.PARA1_CODE   
  JOIN PARA2 (NOLOCK) ON PARA2.PARA2_CODE =SKU.PARA2_CODE   
  JOIN PARA3 (NOLOCK) ON PARA3.PARA3_CODE =SKU.PARA3_CODE   
  JOIN PARA4 (NOLOCK) ON PARA4.PARA4_CODE =SKU.PARA4_CODE   
  JOIN PARA5 (NOLOCK) ON PARA5.PARA5_CODE =SKU.PARA5_CODE   
  JOIN PARA6 (NOLOCK) ON PARA6.PARA6_CODE =SKU.PARA6_CODE  
LEFT OUTER JOIN ARTICLE_FIX_ATTR ATTR  (NOLOCK) ON ARTICLE.ARTICLE_CODE = ATTR.ARTICLE_CODE 
LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE
LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE
LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE
LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE
LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE
LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE
LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE
LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE
LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE
LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE
LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE
LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE
LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE
LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE
LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE
LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE
LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE
LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE
LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE
LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE
LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE
LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE
LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE
LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE
LEFT OUTER JOIN ATTR25_MST AT25(NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE  LEFT JOIN EMPLOYEE ON EMPLOYEE.EMP_CODE=CMD01106.EMP_CODE 
  LEFT JOIN EMPLOYEE EMPLOYEE1 ON EMPLOYEE1.EMP_CODE=CMD01106.EMP_CODE1 
  LEFT JOIN EMPLOYEE EMPLOYEE2 ON EMPLOYEE2.EMP_CODE=CMD01106.EMP_CODE2  
  WHERE CMD01106.CM_ID='''+@CXNID+'''  
  GROUP BY '+(CASE WHEN @CDESC='' THEN '' ELSE  +'(CASE WHEN CMD01106.TAX_METHOD=1 
  THEN ' + @CDESC+ ' ELSE ''*'' + ' +  @CDESC+   ' END) ,' END)  
  +'CMD01106.MRP,CMD01106.DISCOUNT_PERCENTAGE,CMD01106.TAX_PERCENTAGE,SECTIOND.SUB_SECTION_NAME,
  ARTICLE_NAME,EMPLOYEE.EMP_NAME,EMPLOYEE1.EMP_NAME,EMPLOYEE2.EMP_NAME,CMD01106.SR_NO,CMD01106.TAX_METHOD,ARTICLE.DISCON,SECTIOND.BL_SUB_SECTION_NAME,
  BL_ARTICLE_NAME,SECTIOND.ALIAS,'+ @CDESC2+' 
       ,(CASE WHEN CMD01106.TAX_METHOD=1 THEN '+ @CDESC3+' 
      ELSE ''*'' + ' +  @CDESC3+   ' END) 
  ORDER BY CMD01106.SR_NO' 
  END
 -- '+(CASE WHEN @CDESC='' THEN '' ELSE @CDESC+' ,' END)  
  ------FOR SAMPLE----  
     
  IF (@CXNID='SAMPLE')  
  BEGIN  
 SET @CDETCMD=N'SELECT ''1''SNO,''VP1 - BOYS - BABA SUIT''PARTICULARS,'''' ALIAS,''1.00''QUANTITY,''PRAKASH''SALEPERSON,CONVERT(NUMERIC(18,2),''200.00'')RATE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_PERCENTAGE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_AMOUNT,CONVERT(NUMERIC(18,2),''5.00'')TAX_PERCENTAGE,CONVERT(NUMERIC(18,2),''9.52'')TAX_AMOUNT,CONVERT(NUMERIC(18,2),''200.00'')AMOUNT,''0''ISTAXEXCLUSIVE  
    UNION ALL  
    SELECT ''2''SNO,''VP6 - MENS - SHIRT''PARTICULARS,'''' ALIAS,''1.00''QUANTITY,''PRAKASH''SALEPERSON,CONVERT(NUMERIC(18,2),''1500.00'')RATE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_PERCENTAGE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_AMOUNT,CONVERT(NUMERIC(18,2),''5.00'')TAX_PERCENTAGE,CONVERT(NUMERIC(18,2),''71.43'')TAX_AMOUNT,CONVERT(NUMERIC(18,2),''1500.00'')AMOUNT,''0''ISTAXEXCLUSIVE  
    UNION ALL  
    SELECT ''3''SNO,''VP5 - MENS - SHIRT''PARTICULARS,'''' ALIAS,''1.00''QUANTITY,''PRAKASH''SALEPERSON,CONVERT(NUMERIC(18,2),''1500.00'')RATE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_PERCENTAGE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_AMOUNT,CONVERT(NUMERIC(18,2),''5.00'')TAX_PERCENTAGE,CONVERT(NUMERIC(18,2),''71.43'')TAX_AMOUNT,CONVERT(NUMERIC(18,2),''1500.00'')AMOUNT,''0''ISTAXEXCLUSIVE  
    UNION ALL  
    SELECT ''4''SNO,''PZ001 - BAG - PANT SUIT''PARTICULARS,'''' ALIAS,''1.00''QUANTITY,''PRAKASH''SALEPERSON,CONVERT(NUMERIC(18,2),''500.00'')RATE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_PERCENTAGE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_AMOUNT,CONVERT(NUMERIC(18,2),''5.00'')TAX_PERCENTAGE,CONVERT(NUMERIC(18,2),''26.19'')TAX_AMOUNT,CONVERT(NUMERIC(18,2),''550.00'')AMOUNT,''0''ISTAXEXCLUSIVE  
    UNION ALL  
    SELECT ''5''SNO,''PZ002 - BAG - PANT SUIT''PARTICULARS,'''' ALIAS,''1.00''QUANTITY,''PRAKASH''SALEPERSON,CONVERT(NUMERIC(18,2),''600.00'')RATE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_PERCENTAGE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_AMOUNT,CONVERT(NUMERIC(18,2),''5.00'')TAX_PERCENTAGE,CONVERT(NUMERIC(18,2),''28.57'')TAX_AMOUNT,CONVERT(NUMERIC(18,2),''600.00'')AMOUNT,''0''ISTAXEXCLUSIVE  
    UNION ALL  
    SELECT ''6''SNO,''PZ003 - BAG - PANT SUIT''PARTICULARS,'''' ALIAS,''1.00''QUANTITY,''PRAKASH''SALEPERSON,CONVERT(NUMERIC(18,2),''650.00'')RATE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_PERCENTAGE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_AMOUNT,CONVERT(NUMERIC(18,2),''5.00'')TAX_PERCENTAGE,CONVERT(NUMERIC(18,2),''30.95'')TAX_AMOUNT,CONVERT(NUMERIC(18,2),''650.00'')AMOUNT,''0''ISTAXEXCLUSIVE  
    UNION ALL  
    SELECT ''7''SNO,''PZ004 - BAG - PANT SUIT''PARTICULARS,'''' ALIAS,''1.00''QUANTITY,''PRAKASH''SALEPERSON,CONVERT(NUMERIC(18,2),''700.00'')RATE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_PERCENTAGE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_AMOUNT,CONVERT(NUMERIC(18,2),''5.00'')TAX_PERCENTAGE,CONVERT(NUMERIC(18,2),''33.33'')TAX_AMOUNT,CONVERT(NUMERIC(18,2),''700.00'')AMOUNT,''0''ISTAXEXCLUSIVE  
    UNION ALL  
    SELECT ''8''SNO,''PZ005 - BAG - PANT SUIT''PARTICULARS,'''' ALIAS,''1.00''QUANTITY,''PRAKASH''SALEPERSON,CONVERT(NUMERIC(18,2),''500.00'')RATE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_PERCENTAGE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_AMOUNT,CONVERT(NUMERIC(18,2),''5.00'')TAX_PERCENTAGE,CONVERT(NUMERIC(18,2),''26.19'')TAX_AMOUNT,CONVERT(NUMERIC(18,2),''550.00'')AMOUNT,''0''ISTAXEXCLUSIVE  
    UNION ALL  
    SELECT ''9''SNO,''00VP3510 - LADIES - SAREES''PARTICULARS,'''' ALIAS,''1.00''QUANTITY,''PRAKASH''SALEPERSON,CONVERT(NUMERIC(18,2),''1100.00'')RATE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_PERCENTAGE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_AMOUNT,CONVERT(NUMERIC(18,2),''0.00'')TAX_PERCENTAGE,CONVERT(NUMERIC(18,2),''0.00'')TAX_AMOUNT,CONVERT(NUMERIC(18,2),''1100.00'')AMOUNT,''1''ISTAXEXCLUSIVE  
    UNION ALL  
    SELECT ''10''SNO,''Z010 - BAG - KURTA SUIT''PARTICULARS,'''' ALIAS,''1.00''QUANTITY,''PRAKASH''SALEPERSON,CONVERT(NUMERIC(18,2),''700.00'')RATE,CONVERT(NUMERIC(18,2),''40.00'')DISCOUNT_PERCENTAGE,CONVERT(NUMERIC(18,2),''280.00'')DISCOUNT_AMOUNT,CONVERT(NUMERIC(18,2),''0.00'')TAX_PERCENTAGE,CONVERT(NUMERIC(18,2),''0.00'')TAX_AMOUNT,CONVERT(NUMERIC(18,2),''420.00'')AMOUNT,''1''ISTAXEXCLUSIVE  
'  
  END  
    
  PRINT @CDETCMD  
    
  SELECT * FROM PRINTMASTER WHERE PRINTID=@CPRINTID  
  SELECT * FROM PRINTDETAIL WHERE PRINTID=@CPRINTID  
  EXEC SP_EXECUTESQL @CMSTCMD  
  EXEC SP_EXECUTESQL @CDETCMD  
    
   SET @CDETCMD =N'SELECT RPS.NET_AMOUNT AS PACKSLIPAMOUNT,RPS.CM_NO AS PACKSLIPNO  
   FROM  RPS_MST RPS 
   WHERE P.REF_CM_ID='''+@CXNID+''' '  
  EXEC SP_EXECUTESQL @CDETCMD  
    
 GOTO ENDPROC   
  ----------------------------FOR WHOLE SALE-----------------------------  
WHOLESALEPRINT:  
  
   --DETAILS FROM COMPANY MASTER  
 SET @CMSTCOLS='CMP.COMPANY_NAME,CMP.ADDRESS1,CMP.ADDRESS2,CMP.CITY,CMP.PHONES_FAX,CMP.TIN_NO,CMP.TAN_NO  
            ,CMP.CIN,CMP.LOGO_PATH'  
  
 --DETAILS FROM CUSTOMER MASTER  
 SET @CMSTCOLS=@CMSTCOLS+',RTRIM(LTRIM(LM.AC_NAME)) AS CUSTOMER  
        ,RTRIM(LTRIM(LMP.ADDRESS1+'' ''+LMP.ADDRESS2+'' ''+CUSCT.CITY)) AS CUSTOMERADDRESS'  
   
 --FIX DETAILS FROM INM01106  
 SET @CMSTCOLS=@CMSTCOLS+',INM.INV_NO AS NO,CONVERT(VARCHAR,INM.INV_DT,105) AS DATE,RIGHT(CONVERT(VARCHAR,INM.INV_TIME,100),7) AS TIME,(INM.SUBTOTAL) AS SUBTOTAL  
        ,INM.NET_AMOUNT,INM.REMARKS,CONVERT(NUMERIC(18,2),INM.DISCOUNT_PERCENTAGE) AS DISCOUNT_PERCENTAGE  
        ,CONVERT(NUMERIC(18,2),INM.DISCOUNT_AMOUNT) AS DISCOUNT_AMOUNT,INM.OTHER_CHARGES AS OTHERCHARGES,ROUND_OFF AS ROUNDOFF'  
   
 --GET THE SALE PERSON FOR MASTER CURSOR  
 IF OBJECT_ID('TEMPDB..#MSTSALEPERSON1','U') IS NOT NULL  
  DROP TABLE #MSTSALEPERSON1  
  
 SELECT TOP 1 IND.EMP_CODE,EMP_CODE1,EMP_CODE2  
 INTO #MSTSALEPERSON1       
 FROM IND01106 IND(NOLOCK)  
 JOIN INM01106 INM(NOLOCK) ON IND.INV_ID=INM.INV_ID   
 WHERE INM.INV_ID=@CXNID  
 ORDER BY IND.EMP_CODE DESC,EMP_CODE1 DESC,EMP_CODE2 DESC  
   
    
 SELECT @BPICKALIAS=PICKALIAS,@NPRINTLENGTH=COLUMNPRINTLENGTH  
 FROM PRINTDESCRIPTION  
 WHERE PRINTID=@CPRINTID AND VALUENAME='SALEPERSON'   
   
 SELECT @BPICKALIAS=ISNULL(@BPICKALIAS,0),@NPRINTLENGTH=ISNULL(@NPRINTLENGTH,0)  
    
 IF @BPICKALIAS=0  
 BEGIN  
  SET @CCMD=N'SELECT @CMSTSALEPERSON=(CASE WHEN ISNULL(EMP.EMP_NAME,'''')<>'''' THEN   
        '+(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE 'LEFT(' END)+'EMP.EMP_NAME'  
        +(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE ','+@NPRINTLENGTH+')' END)  
        +'+''/'' ELSE '''' END)  
         +(CASE WHEN ISNULL(EMP1.EMP_NAME,'''')<>'''' THEN   
        '+(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE 'LEFT(' END)+'EMP1.EMP_NAME'  
        +(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE ','+@NPRINTLENGTH+')' END)  
        +'+''/'' ELSE '''' END)+'  
         +(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE 'LEFT(' END)+'ISNULL(EMP2.EMP_NAME,'''')'  
         +(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE ','+@NPRINTLENGTH+')' END)  
  +' FROM #MSTSALEPERSON1 SP  
  LEFT JOIN EMPLOYEE EMP ON SP.EMP_CODE=EMP.EMP_CODE  
  LEFT JOIN EMPLOYEE EMP1 ON SP.EMP_CODE1=EMP1.EMP_CODE  
  LEFT JOIN EMPLOYEE EMP2 ON SP.EMP_CODE2=EMP2.EMP_CODE'  
  PRINT @CCMD  
  EXEC SP_EXECUTESQL @CCMD,N'@CMSTSALEPERSON VARCHAR(500) OUTPUT',@CMSTSALEPERSON OUTPUT  
 END  
 ELSE  
 BEGIN  
  --PICK ALIAS OF EMPLOYEES  
  SET @CCMD=N'SELECT @CMSTSALEPERSON=(CASE WHEN ISNULL(EMP.EMP_ALIAS,'''')<>'''' THEN   
        '+(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE 'LEFT(' END)+'EMP.EMP_ALIAS'  
        +(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE ','+@NPRINTLENGTH+')' END)  
        +'+''/'' ELSE '''' END)  
         +(CASE WHEN ISNULL(EMP1.EMP_ALIAS,'''')<>'''' THEN   
        '+(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE 'LEFT(' END)+'EMP1.EMP_ALIAS'  
        +(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE ','+@NPRINTLENGTH+')' END)  
        +'+''/'' ELSE '''' END)+'  
         +(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE 'LEFT(' END)+'ISNULL(EMP2.EMP_ALIAS,'''')'  
         +(CASE WHEN ISNULL(@NPRINTLENGTH,0)=0 THEN '' ELSE ','+@NPRINTLENGTH+')' END)  
  +' FROM #MSTSALEPERSON1 SP  
  LEFT JOIN EMPLOYEE EMP ON SP.EMP_CODE=EMP.EMP_CODE  
  LEFT JOIN EMPLOYEE EMP1 ON SP.EMP_CODE1=EMP1.EMP_CODE  
  LEFT JOIN EMPLOYEE EMP2 ON SP.EMP_CODE2=EMP2.EMP_CODE'  
  PRINT @CCMD  
  EXEC SP_EXECUTESQL @CCMD,N'@CMSTSALEPERSON VARCHAR(500) OUTPUT',@CMSTSALEPERSON OUTPUT  
 END  
   
 SET @CMSTSALEPERSON=LTRIM(RTRIM(ISNULL(@CMSTSALEPERSON,'')))  
   
 IF RIGHT(@CMSTSALEPERSON,1)='/'  
  SET @CMSTSALEPERSON=SUBSTRING(@CMSTSALEPERSON,1,LEN(@CMSTSALEPERSON)-1)  
  
 SET @CMSTCOLS=@CMSTCOLS+','''+@CMSTSALEPERSON+''' AS SALEPERSON '     
   
  IF OBJECT_ID('#PAYMENTS1','U') IS NOT NULL  
  DROP TABLE #PAYMENTS1  
 --GET THE PAYMENT MODES FOR THIS TRANSACTION   
     SELECT   
   (CASE WHEN PM.PAYMODE_GRP_CODE='0000001' THEN 1  
      WHEN PM.PAYMODE_GRP_CODE='0000002' THEN 2  
      ELSE 3 END) AS PAYORDER       
  ,(CASE WHEN PM.PAYMODE_GRP_CODE='0000001' THEN 'CASH: '  
      WHEN PM.PAYMODE_GRP_CODE='0000002' THEN '  CC: '  
      ELSE '  OTHERS: ' END) AS PAYMODES    
  ,(CASE WHEN PM.PAYMODE_GRP_CODE='0000001' THEN SUM(AMOUNT)  
      WHEN PM.PAYMODE_GRP_CODE='0000002' THEN SUM(AMOUNT)  
      ELSE SUM(AMOUNT) END) AS PAYAMOUNT  
  INTO #PAYMENTS1  
  FROM PAYMODE_XN_DET PXD  
  JOIN PAYMODE_MST PM ON PXD.PAYMODE_CODE=PM.PAYMODE_CODE  
  WHERE PXD.MEMO_ID=@CXNID AND PXD.XN_TYPE='WSL'   
  GROUP BY PM.PAYMODE_GRP_CODE  
  ORDER BY PAYORDER  
   
 SET @CMSTPAYMODES='SETTLEMENT: '  
 SELECT @CMSTPAYMODES=@CMSTPAYMODES+PAYMODES+LTRIM(RTRIM(STR(PAYAMOUNT,18,2)))  
 FROM #PAYMENTS1  
   
   
   
 SET @CMSTCOLS=@CMSTCOLS+','''+@CMSTPAYMODES+''' AS PAYMENTS'  
   
 ---GET THE QUANTITY SUMMARY FOR THE CASH MEMO  
 IF OBJECT_ID('TEMPDB..#QUANTITYSUM1','U') IS NOT NULL  
  DROP TABLE #QUANTITYSUM1  
  
 SELECT ART.DISCON,' '+UOM.UOM_NAME AS UOM_NAME  
    ,SUM(CASE WHEN IND.QUANTITY>=0 THEN IND.QUANTITY ELSE 0 END) AS OUT_QUANTITY  
    ,SUM(CASE WHEN IND.QUANTITY<0 THEN ABS(IND.QUANTITY) ELSE 0 END) AS IN_QUANTITY  
    ,COUNT(IND.ROW_ID) AS ITEMCOUNT  
 INTO #QUANTITYSUM1  
 FROM IND01106 IND  
 JOIN SKU ON IND.PRODUCT_CODE=SKU.PRODUCT_CODE  
 JOIN ARTICLE ART ON SKU.ARTICLE_CODE=ART.ARTICLE_CODE  
 JOIN UOM ON UOM.UOM_CODE=ART.UOM_CODE  
 WHERE IND.INV_ID=@CXNID  
 GROUP BY ART.DISCON,UOM.UOM_NAME  
 ORDER BY ART.DISCON  
   
 IF EXISTS(SELECT TOP 1 'U' FROM #QUANTITYSUM1 WHERE OUT_QUANTITY<>0)  
 BEGIN  
  SET @COUTQTYSUMMARY='OUT :'  
  SELECT @COUTQTYSUMMARY=@COUTQTYSUMMARY+UOM_NAME+' '+LTRIM(RTRIM(STR(OUT_QUANTITY)))  
         +(CASE WHEN DISCON=2 THEN '/('+LTRIM(RTRIM(STR(ITEMCOUNT)))+')' ELSE '' END)  
  FROM #QUANTITYSUM1  
  WHERE OUT_QUANTITY<>0  
 END  
 ELSE   
  SET @COUTQTYSUMMARY='OUT : 0'  
   
 SET @CMSTCOLS=@CMSTCOLS+','''+@COUTQTYSUMMARY+''' AS OUTQUANTITY'  
    
 IF EXISTS(SELECT TOP 1 'U' FROM #QUANTITYSUM1 WHERE IN_QUANTITY<>0)  
 BEGIN  
  SET @CINQTYSUMMARY='IN :'  
  SELECT @CINQTYSUMMARY=@CINQTYSUMMARY+UOM_NAME+LTRIM(RTRIM(STR(OUT_QUANTITY,18,2)))  
         +(CASE WHEN DISCON=2 THEN '/('+LTRIM(RTRIM(STR(ITEMCOUNT)))+')' ELSE '' END)  
  FROM #QUANTITYSUM1  
  WHERE IN_QUANTITY<>0  
 END  
 ELSE   
  SET @CINQTYSUMMARY='RET: 0'   
   
   
 SET @CMSTCOLS=@CMSTCOLS+','''+@CINQTYSUMMARY+''' AS INQUANTITY'  
   
 --FINAL PRINT MASTER CURSOR  
  --SELECT * FROM CUSTDYM  
  --SELECT * FROM LM01106  
  --SELECT * FROM LMP01106  
    
  --SELECT * FROM INM01106  
    
  IF OBJECT_ID('TEMPDB..#TMPHEADERDISPLAY','U') IS NOT NULL   
   DROP TABLE #TMPHEADERDISPLAY  
     
   DECLARE @CCOLS VARCHAR(MAX),@CCOLS1 VARCHAR(MAX)  
    SELECT DISPLAYNAME=REPLACE(DISPLAYNAME,' ','') ,ISVISIBLE=CAST(ISNULL(ISVISIBLE,0) AS VARCHAR(10))  
 INTO #TMPHEADERDISPLAY   
 FROM PRINTDETAIL WHERE PRINTID =@CPRINTID AND ISDISPLAY =1  
   
 SELECT @CCOLS=ISNULL(@CCOLS+',','')+QUOTENAME(DISPLAYNAME)  
 FROM #TMPHEADERDISPLAY  
 ORDER BY DISPLAYNAME ASC  
  
  
 IF OBJECT_ID('TEMPDB..#TMPHEADERVALUE','U') IS NOT NULL   
    DROP TABLE #TMPHEADERVALUE  
      
    SELECT COLUMNNAME ,COLUMNVALUE=ISNULL(COLUMNVALUE,'')  
    INTO #TMPHEADERVALUE   
    FROM PRINTHEADER  WHERE PRINTID =@CPRINTID   
  
 SELECT @CCOLS1=ISNULL(@CCOLS1+',','')+QUOTENAME(COLUMNNAME)  
 FROM #TMPHEADERVALUE  
 ORDER BY COLUMNNAME ASC  
  --''REF NO: '' +  
 SET @CMSTCMD=N'SELECT  '+@CMSTCOLS  
     +', '+@CCOLS+','+@CCOLS1+'   
     ,''REF NO: '' +  INM.MANUAL_INV_NO AS REFNOVALUE  
       ,CASE WHEN INM.INV_TYPE=1 THEN ''RETAIL INVOICE'' ELSE ''TAX INVOICE'' END AS INVOICETYPE    
       ,''SHIPPING ADDRESS: ''+ISNULL(INM.SHIPPING_ADDRESS,'''') AS SHIPPING_ADDRESS  
       ,''SHIPPING ADDRESS2: ''+ISNULL(INM.SHIPPING_ADDRESS2,'''') AS SHIPPING_ADDRESS2  
       ,''SHIPPING ADDRESS3: ''+ISNULL(INM.SHIPPING_ADDRESS3,'''') AS SHIPPING_ADDRESS3  
       FROM INM01106 INM   
       JOIN  
       (  
       SELECT SR=1, '+@CCOLS+'   
          FROM #TMPHEADERDISPLAY   
          PIVOT(MAX(ISVISIBLE) FOR DISPLAYNAME IN ('+@CCOLS+')) AS PTABLE  
          )HD ON HD.SR=1  
          JOIN  
          (  
           SELECT SR=1, '+@CCOLS1+'   
      FROM #TMPHEADERVALUE   
      PIVOT(MAX(COLUMNVALUE) FOR COLUMNNAME IN ('+@CCOLS1+')) AS PTABLE1  
          ) HV ON HV.SR=1  
       JOIN COMPANY CMP ON CMP.COMPANY_CODE=''01''  
                   JOIN LMP01106 LMP ON LMP.AC_CODE=INM.AC_CODE  
       JOIN LM01106 LM ON LM.AC_CODE=LMP.AC_CODE  
       JOIN AREA CUSAR ON LMP.AREA_CODE=CUSAR.AREA_CODE  
       JOIN CITY CUSCT ON CUSAR.CITY_CODE=CUSCT.CITY_CODE  
       WHERE INM.INV_ID='''+@CXNID+''''  
          
 PRINT @CMSTCMD  
   
   
  ------FOR SAMPLE----  
  IF (@CXNID='SAMPLE')  
  BEGIN  
  SET @CMSTCMD=N'SELECT COMPANY_NAME,ADDRESS1,ADDRESS2,CITY,PHONES_FAX,TIN_NO,TAN_NO,CIN,  
    LOGO_PATH,''PRAJ''CUSTOMER,''NOIDA''CUSTOMERADDRESS,''SAMPLE''NO  
    ,''06-01-2015''DATE,''5:09PM''TIME,''7800.00''SUBTOTAL,''7421.00''NET_AMOUNT,''SSS123''REMARKS,  
    ''10.00''DISCOUNT_PERCENTAGE,''780.00''DISCOUNT_AMOUNT,''50.00''OTHERCHARGES,''0.01''ROUNDOFF,''PRAKASH''SALEPERSON,  
    ''SETTLEMENT:''PAYMENTS,''OUT PCS 3''OUTQUANTITY,''RET : 0''INQUANTITY,  
    ''RETAILINVOICE''INVOICETYPE, 1 AS DOCUMENTCOPIES, 1 AS DOCUMENTNAME,1 AS REFNO,'''' AS DOC1,'''' AS DOC2,'''' AS DOC3,'''' AS REFNOVALUE  
    FROM COMPANY WHERE COMPANY_CODE=''01'''   
  END         
  PRINT @CMSTCMD  
   
 --SELECT * FROM PRINTDESCRIPTION  
   
 --START OF PREPARATION OF PRINT DETAIL CURSOR  
    SELECT @CDESC=ISNULL(@CDESC+'+'' '+COLUMNSEPARATOR+' ''+','')  
  +(CASE WHEN ISNULL(COLUMNPRINTLENGTH,0)=0 THEN '' ELSE 'LEFT(' END)+SOURCENAME+'.'+COLUMNNAME  
  +(CASE WHEN ISNULL(COLUMNPRINTLENGTH,0)=0 THEN '' ELSE ','+COLUMNPRINTLENGTH+')' END)  
   FROM PRINTDESCRIPTION   
   WHERE PRINTID=@CPRINTID AND VALUENAME='PARTICULARS'  
   AND ISVISIBLE=1 AND ISMASTERDATA=0  
   ORDER BY DISPLAYORDER  
   PRINT @CDESC  
   /*  
  IF SHOW BILL DISCOUNT IS FALSE,DISCOUNT SHOULD BE SHIFTED AT ITEM LEVEL AND THUS  
  ITEM LEVEL DISCOUNT PERCENTAGE,DISCOUNT AMOUNT AND AMOUNT SHOULD BE RECALCULATED.  
   */  
   SELECT @CSHOWBILLDISCOUNT=ISMASTERDATA  
   FROM PRINTDETAIL  
   WHERE PRINTID=@CPRINTID AND DISPLAYNAME='BILL DISC' AND ISVISIBLE=1  
     
   SET @CSHOWBILLDISCOUNT=ISNULL(@CSHOWBILLDISCOUNT,1)  
     
   /*  
  TAX_METHOD : 1 IS INCLUSIVE ELSE EXCLUSIVE  
   */  
     
    SELECT @REFPRINTID=REFPRINTID FROM PRINTMASTER WHERE PRINTID=@CPRINTID 
   -- IF @REFPRINTID='SLS0000005'
    BEGIN
   SET @CDETCMD=N'SELECT ROW_NUMBER() OVER(ORDER BY IND01106.PRODUCT_CODE) AS SNO,  
     '+(CASE WHEN @CDESC='' THEN '' ELSE  +'(CASE WHEN INM01106.BILL_LEVEL_TAX_METHOD=1 THEN ' + @CDESC+ ' ELSE ''*'' + ' +  @CDESC+   ' END)  AS PARTICULARS,' END)  
     +'(CASE WHEN ARTICLE.DISCON=1   THEN CAST(ROUND(CONVERT(DECIMAL(18),SUM(IND01106.QUANTITY)),1) AS VARCHAR(20))  
          WHEN ARTICLE.DISCON=2 THEN CAST(ROUND(CONVERT(NUMERIC(18,2),SUM(IND01106.QUANTITY)),1)  AS VARCHAR(20)) END) AS QUANTITY   
      ,'''+@CMSTSALEPERSON+''' AS SALEPERSON  
      ,IND01106.MRP AS RATE  
      ,CONVERT(NUMERIC(18,2),'+(CASE WHEN @CSHOWBILLDISCOUNT=1 THEN 'IND01106.DISCOUNT_PERCENTAGE'  
    ELSE '(SUM(IND01106.DISCOUNT_AMOUNT+IND01106.DISCOUNT_AMOUNT)/SUM(IND01106.QUANTITY*IND01106.MRP))*100'  
    END)+') AS DISCOUNT_PERCENTAGE   
      ,CONVERT(NUMERIC(18,2),  
    '+(CASE WHEN @CSHOWBILLDISCOUNT=1 THEN 'SUM(IND01106.DISCOUNT_AMOUNT)'   
       ELSE 'SUM(IND01106.DISCOUNT_AMOUNT+IND01106.DISCOUNT_AMOUNT)' END)+') AS DISCOUNT_AMOUNT   
      ,CONVERT(NUMERIC(18,2),IND01106.ITEM_TAX_PERCENTAGE) AS  TAX_PERCENTAGE  
      ,CONVERT(NUMERIC(18,2),SUM(IND01106.ITEM_TAX_AMOUNT)) AS TAX_AMOUNT  
      ,CONVERT(NUMERIC(18,2),  
      '+(CASE WHEN @CSHOWBILLDISCOUNT=1 THEN 'SUM(IND01106.RFNET)'   
        ELSE 'SUM(IND01106.RFNET-IND01106.DISCOUNT_AMOUNT)' END)+') AS AMOUNT  
      ,(CASE WHEN INM01106.BILL_LEVEL_TAX_METHOD=1 THEN 0 ELSE 1 END) AS ISTAXEXCLUSIVE  
  FROM IND01106 (NOLOCK) JOIN INM01106 (NOLOCK) ON IND01106.INV_ID=INM01106.INV_ID  
  JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =IND01106.PRODUCT_CODE   
  JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE =SKU.ARTICLE_CODE   
  JOIN UOM (NOLOCK) ON UOM.UOM_CODE =ARTICLE.UOM_CODE   
  JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE=SECTIOND.SUB_SECTION_CODE  
  JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE=SECTIONM.SECTION_CODE  
  JOIN PARA1 (NOLOCK) ON PARA1.PARA1_CODE =SKU.PARA1_CODE   
  JOIN PARA2 (NOLOCK) ON PARA2.PARA2_CODE =SKU.PARA2_CODE   
  JOIN PARA3 (NOLOCK) ON PARA3.PARA3_CODE =SKU.PARA3_CODE   
  JOIN PARA4 (NOLOCK) ON PARA4.PARA4_CODE =SKU.PARA4_CODE   
  JOIN PARA5 (NOLOCK) ON PARA5.PARA5_CODE =SKU.PARA5_CODE   
  JOIN PARA6 (NOLOCK) ON PARA6.PARA6_CODE =SKU.PARA6_CODE  
  JOIN FORM (NOLOCK) ON FORM.FORM_ID =IND01106 .ITEM_FORM_ID   
LEFT OUTER JOIN ARTICLE_FIX_ATTR ATTR  (NOLOCK) ON ARTICLE.ARTICLE_CODE = ATTR.ARTICLE_CODE 
LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE
LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE
LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE
LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE
LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE
LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE
LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE
LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE
LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE
LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE
LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE
LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE
LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE
LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE
LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE
LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE
LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE
LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE
LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE
LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE
LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE
LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE
LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE
LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE
LEFT OUTER JOIN ATTR25_MST AT25(NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE  LEFT JOIN EMPLOYEE ON EMPLOYEE.EMP_CODE=IND01106.EMP_CODE  
  WHERE IND01106.INV_ID='''+@CXNID+'''  
  GROUP BY '+(CASE WHEN @CDESC='' THEN '' ELSE  +'(CASE WHEN INM01106.BILL_LEVEL_TAX_METHOD=1 THEN ' + @CDESC+ ' ELSE ''*'' + ' +  @CDESC+   ' END) ,' END)  
    
    
  +'IND01106.MRP,IND01106.DISCOUNT_PERCENTAGE,IND01106.ITEM_TAX_PERCENTAGE,IND01106.PRODUCT_CODE,INM01106.BILL_LEVEL_TAX_METHOD,ARTICLE.DISCON  
  ORDER BY IND01106.PRODUCT_CODE' 
  END
 -- '+(CASE WHEN @CDESC='' THEN '' ELSE @CDESC+' ,' END)  
 ------FOR SAMPLE----  
     
  IF (@CXNID='SAMPLE')  
  BEGIN  
 SET @CDETCMD=N'SELECT ''1''SNO,''VP1 - BOYS - BABA SUIT''PARTICULARS,''1.00''QUANTITY,''PRAKASH''SALEPERSON,CONVERT(NUMERIC(18,2),''200.00'')RATE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_PERCENTAGE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_AMOUNT,CONVERT(NUMERIC(18,2),
 ''5.00'')TAX_PERCENTAGE,CONVERT(NUMERIC(18,2),''9.52'')TAX_AMOUNT,CONVERT(NUMERIC(18,2),''200.00'')AMOUNT,''0''ISTAXEXCLUSIVE  
    UNION ALL  
    SELECT ''2''SNO,''VP6 - MENS - SHIRT''PARTICULARS,''1.00''QUANTITY,''PRAKASH''SALEPERSON,CONVERT(NUMERIC(18,2),''1500.00'')RATE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_PERCENTAGE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_AMOUNT,CONVERT(NUMERIC(18,2),
    ''5.00'')TAX_PERCENTAGE,CONVERT(NUMERIC(18,2),''71.43'')TAX_AMOUNT,CONVERT(NUMERIC(18,2),''1500.00'')AMOUNT,''0''ISTAXEXCLUSIVE  
    UNION ALL  
    SELECT ''3''SNO,''VP5 - MENS - SHIRT''PARTICULARS,''1.00''QUANTITY,''PRAKASH''SALEPERSON,CONVERT(NUMERIC(18,2),''1500.00'')RATE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_PERCENTAGE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_AMOUNT,CONVERT(NUMERIC(18,2),
    ''5.00'')TAX_PERCENTAGE,CONVERT(NUMERIC(18,2),''71.43'')TAX_AMOUNT,CONVERT(NUMERIC(18,2),''1500.00'')AMOUNT,''0''ISTAXEXCLUSIVE  
    UNION ALL  
    SELECT ''4''SNO,''PZ001 - BAG - PANT SUIT''PARTICULARS,''1.00''QUANTITY,''PRAKASH''SALEPERSON,CONVERT(NUMERIC(18,2),''500.00'')RATE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_PERCENTAGE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_AMOUNT,CONVERT(NUMERIC(18,2)
,''5.00'')TAX_PERCENTAGE,CONVERT(NUMERIC(18,2),''26.19'')TAX_AMOUNT,CONVERT(NUMERIC(18,2),''550.00'')AMOUNT,''0''ISTAXEXCLUSIVE  
    UNION ALL  
    SELECT ''5''SNO,''PZ002 - BAG - PANT SUIT''PARTICULARS,''1.00''QUANTITY,''PRAKASH''SALEPERSON,CONVERT(NUMERIC(18,2),''600.00'')RATE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_PERCENTAGE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_AMOUNT,CONVERT(NUMERIC(18,2)
,''5.00'')TAX_PERCENTAGE,CONVERT(NUMERIC(18,2),''28.57'')TAX_AMOUNT,CONVERT(NUMERIC(18,2),''600.00'')AMOUNT,''0''ISTAXEXCLUSIVE  
    UNION ALL  
    SELECT ''6''SNO,''PZ003 - BAG - PANT SUIT''PARTICULARS,''1.00''QUANTITY,''PRAKASH''SALEPERSON,CONVERT(NUMERIC(18,2),''650.00'')RATE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_PERCENTAGE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_AMOUNT,CONVERT(NUMERIC(18,2)
,''5.00'')TAX_PERCENTAGE,CONVERT(NUMERIC(18,2),''30.95'')TAX_AMOUNT,CONVERT(NUMERIC(18,2),''650.00'')AMOUNT,''0''ISTAXEXCLUSIVE  
    UNION ALL  
    SELECT ''7''SNO,''PZ004 - BAG - PANT SUIT''PARTICULARS,''1.00''QUANTITY,''PRAKASH''SALEPERSON,CONVERT(NUMERIC(18,2),''700.00'')RATE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_PERCENTAGE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_AMOUNT,CONVERT(NUMERIC(18,2)
,''5.00'')TAX_PERCENTAGE,CONVERT(NUMERIC(18,2),''33.33'')TAX_AMOUNT,CONVERT(NUMERIC(18,2),''700.00'')AMOUNT,''0''ISTAXEXCLUSIVE  
    UNION ALL  
    SELECT ''8''SNO,''PZ005 - BAG - PANT SUIT''PARTICULARS,''1.00''QUANTITY,''PRAKASH''SALEPERSON,CONVERT(NUMERIC(18,2),''500.00'')RATE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_PERCENTAGE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_AMOUNT,CONVERT(NUMERIC(18,2)
,''5.00'')TAX_PERCENTAGE,CONVERT(NUMERIC(18,2),''26.19'')TAX_AMOUNT,CONVERT(NUMERIC(18,2),''550.00'')AMOUNT,''0''ISTAXEXCLUSIVE  
    UNION ALL  
    SELECT ''9''SNO,''00VP3510 - LADIES - SAREES''PARTICULARS,''1.00''QUANTITY,''PRAKASH''SALEPERSON,CONVERT(NUMERIC(18,2),''1100.00'')RATE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_PERCENTAGE,CONVERT(NUMERIC(18,2),''0.00'')DISCOUNT_AMOUNT,CONVERT(NUMERIC(18,2),
    ''0.00'')TAX_PERCENTAGE,CONVERT(NUMERIC(18,2),''0.00'')TAX_AMOUNT,CONVERT(NUMERIC(18,2),''1100.00'')AMOUNT,''1''ISTAXEXCLUSIVE  
    UNION ALL  
    SELECT ''10''SNO,''Z010 - BAG - KURTA SUIT''PARTICULARS,''1.00''QUANTITY,''PRAKASH''SALEPERSON,CONVERT(NUMERIC(18,2),''700.00'')RATE,CONVERT(NUMERIC(18,2),''40.00'')DISCOUNT_PERCENTAGE,CONVERT(NUMERIC(18,2),''280.00'')DISCOUNT_AMOUNT,CONVERT(NUMERIC(18,2),
    ''0.00'')TAX_PERCENTAGE,CONVERT(NUMERIC(18,2),''0.00'')TAX_AMOUNT,CONVERT(NUMERIC(18,2),''420.00'')AMOUNT,''1''ISTAXEXCLUSIVE  
    '     
  END  
    
  PRINT @CDETCMD  
    
  SELECT * FROM PRINTMASTER WHERE PRINTID=@CPRINTID  
  SELECT * FROM PRINTDETAIL WHERE PRINTID=@CPRINTID  
  EXEC SP_EXECUTESQL @CMSTCMD  
  EXEC SP_EXECUTESQL @CDETCMD   
    
     SET @CDETCMD =N'SELECT RPS.NET_AMOUNT AS PACKSLIPAMOUNT,RPS.CM_NO AS PACKSLIPNO  
   FROM RPS_MST RPS 
   WHERE P.REF_CM_ID='''+@CXNID+''' '  
  EXEC SP_EXECUTESQL @CDETCMD  
  
IF OBJECT_ID ('TEMPDB..#TMPFOOTERDETAILS','U') IS NOT NULL  
   DROP TABLE #TMPFOOTERDETAILS  
     
 SELECT SR=CAST(0 AS INT),COLUMN1=CAST('' AS VARCHAR(MAX)),COLUMN2=CAST('' AS VARCHAR(MAX))  
   INTO #TMPFOOTERDETAILS  
   WHERE 1=2  
  
IF (@CXNID<>'SAMPLE')  
BEGIN  
           
IF OBJECT_ID ('TEMPDB..#TMPDETAILS','U') IS NOT NULL  
   DROP TABLE #TMPDETAILS  
     
   SELECT SR=CAST(0 AS INT),COLUMN1=CAST('' AS VARCHAR(MAX)),COLUMN2=CAST('' AS VARCHAR(MAX)),  
          DISPLAYNAME ,DISPLAYWIDTH ,ISMASTERDATA,SUBDETAIL ,ISVISIBLE  
   INTO #TMPDETAILS  
   FROM PRINTDETAIL   
   WHERE PRINTID =@CPRINTID AND ISDISPLAY=2 AND ISVISIBLE=1  
   
   DECLARE @MINSR INT,@MAXSR INT,@INSERTSR INT,@COLUMNSTR VARCHAR(MAX)  
   SET @MINSR=1  
   SET @MAXSR=13  
   SET @INSERTSR=0  
   SET @COLUMNSTR=''  
   WHILE @MINSR <=@MAXSR  
   BEGIN  
       INSERT INTO #TMPFOOTERDETAILS(SR,COLUMN1,COLUMN2)  
       SELECT @MINSR,'',''  
       SET @MINSR=@MINSR+1  
         
       ----FOR TOTAL   
   END  
      
   ---1.FOR TOTOL  
     
    SET @INSERTSR=0  
    IF (EXISTS (SELECT TOP 1 'U'  FROM #TMPDETAILS  WHERE  DISPLAYNAME ='QUANTITY' ) OR EXISTS (SELECT TOP 1 'U'  FROM #TMPDETAILS  WHERE DISPLAYNAME ='MRP VALUE' ) OR EXISTS (SELECT TOP 1 'U'  FROM #TMPDETAILS  WHERE DISPLAYNAME ='WSP VALUE'))  
    BEGIN  
    DECLARE @QTY VARCHAR(50),@MRP NUMERIC(18,2),@WS_PRICE NUMERIC(18,2)  
    SET @COLUMNSTR=''  
    SELECT  @QTY=  
   STUFF((SELECT  ',   ' + CASE WHEN UOM_NAME='PCS' THEN LEFT(CAST(SUM(QUANTITY) AS VARCHAR(100)),CHARINDEX('.',CAST(SUM(QUANTITY) AS VARCHAR(100)))-1) ELSE CAST(SUM(QUANTITY) AS VARCHAR(100)) END  
         +' '+UOM_NAME  
      FROM    IND01106 B   
   JOIN SKU C ON B.PRODUCT_CODE=C.PRODUCT_CODE   
   JOIN ARTICLE D ON C.ARTICLE_CODE =D.ARTICLE_CODE   
   JOIN UOM E ON D.UOM_CODE =E.UOM_CODE      
   WHERE  
   A.INV_ID = B.INV_ID GROUP BY UOM_NAME FOR XML PATH('')),1,1,''  )  
   FROM    INM01106  A   
    WHERE INV_ID=@CXNID   
    SELECT @MRP=SUM(MRP),@WS_PRICE=SUM(WS_PRICE) FROM IND01106 WHERE INV_ID=@CXNID  
      
    IF ISNULL(@QTY,'')<>'' AND @MRP<>0 AND @WS_PRICE<>0  
    BEGIN  
      UPDATE #TMPFOOTERDETAILS SET COLUMN1='TOTAL:- ' WHERE SR =@INSERTSR+1  
        
      IF EXISTS (SELECT TOP 1 'U'  FROM #TMPDETAILS  WHERE  DISPLAYNAME ='QUANTITY' ) AND ISNULL(@QTY,'')<>''  
      BEGIN     
       SET @COLUMNSTR=(SELECT COLUMN1 FROM #TMPFOOTERDETAILS WHERE SR =@INSERTSR+1 )  
       UPDATE #TMPFOOTERDETAILS SET COLUMN1=@COLUMNSTR+'QTY: '+ @QTY  
       WHERE SR =@INSERTSR+1        
      END      
   
   
      IF EXISTS (SELECT TOP 1 'U'  FROM #TMPDETAILS  WHERE  DISPLAYNAME ='MRP VALUE') AND @MRP<>0  
      BEGIN  
       SET @COLUMNSTR=(SELECT COLUMN1 FROM #TMPFOOTERDETAILS WHERE SR =@INSERTSR+1 )  
       UPDATE #TMPFOOTERDETAILS SET COLUMN1=@COLUMNSTR+'   MRP VALUE:   '+ CAST(@MRP AS VARCHAR(20))  
       WHERE SR =@INSERTSR+1     
      END     
        
      IF EXISTS (SELECT TOP 1 'U'  FROM #TMPDETAILS  WHERE  DISPLAYNAME ='WSP VALUE') AND @WS_PRICE<>0  
      BEGIN  
       SET @COLUMNSTR=(SELECT COLUMN1 FROM #TMPFOOTERDETAILS WHERE SR =@INSERTSR+1 )  
       UPDATE #TMPFOOTERDETAILS SET COLUMN1=@COLUMNSTR+'   WSP VALUE:   '+ CAST(@WS_PRICE AS VARCHAR(20))  
       WHERE SR =@INSERTSR+1     
      END      
      SET @INSERTSR=@INSERTSR+1  
   END  
   END  
    
     DECLARE @REMARKS VARCHAR(MAX)--,@LENREM INT ,@CNT INT,@FSR INT,@TEXTLEN INT  
     SET @REMARKS=(SELECT REMARKS  FROM INM01106 WHERE INV_ID=@CXNID)  
   
 ---2.FOR REMARKS  
   IF EXISTS (SELECT TOP 1 'U'  FROM #TMPDETAILS WHERE   DISPLAYNAME ='REMARKS') AND ISNULL(@REMARKS,'')<>''  
   BEGIN  
         
      UPDATE #TMPFOOTERDETAILS SET COLUMN1='REMARKS: '+ @REMARKS--LEFT (@REMARKS,54)  
      WHERE SR =@INSERTSR+1   
          
       SET @INSERTSR=@INSERTSR+1  
   END  
     
     
    ---3.MODE OF PAYMENT  
   IF EXISTS (SELECT TOP 1 'U'  FROM #TMPDETAILS WHERE  DISPLAYNAME ='MODE OF PAYMENT')  
   BEGIN  
      UPDATE #TMPFOOTERDETAILS SET COLUMN1='MODE OF PAYMENT: '+ CAST((SELECT CASE WHEN PAY_MODE=1 THEN 'CASH'   
             WHEN PAY_MODE=2 THEN 'CREDIT CARD'  
             WHEN PAY_MODE=3 THEN 'OTHER'  
             WHEN PAY_MODE=4 THEN 'CREDIT'  
             ELSE 'COMPOSIT' END  
       AS MODEOFPAYMENT  FROM INM01106 WHERE INV_ID=@CXNID) AS VARCHAR(20))  
      WHERE SR =@INSERTSR+1     
      SET @INSERTSR=@INSERTSR+1  
   END  
     
   
       
 ---4.FOR DISPATCHDETAIL  
    DECLARE @TRANSPORTER VARCHAR(MAX),@GR_NO VARCHAR(100),@DT VARCHAR(20),@BOXES VARCHAR(20),@WT VARCHAR(50)  
         
       SELECT  @TRANSPORTER=ISNULL(TRANSPORTER,''),@GR_NO=ISNULL(GR_NO,''),@DT=CONVERT (VARCHAR,DT,105),  
       @BOXES=ISNULL(TOTAL_BOXES,''),@WT=ISNULL(WEIGHT,'')  
       FROM INM01106 INM  
    LEFT JOIN  
    (     
   SELECT b.REF_MEMO_ID,SUM(B.QUANTITY) AS QUANTITY, CAST(0 AS VARCHAR(100)) AS TOTAL_BOXES ,  
   D.ANGADIA_NAME AS TRANSPORTER,  
   A.GATE_ENTRY_NO AS GR_NO,A.PARCEL_MEMO_DT AS DT,CAST(SUM(QTY) AS VARCHAR(10))+' '+E.UOM_NAME AS WEIGHT   
   FROM PARCEL_MST  A  
   JOIN PARCEL_DET B ON A.PARCEL_MEMO_ID =B.PARCEL_MEMO_ID   
   JOIN ANGM D ON D.ANGADIA_CODE =A.ANGADIA_CODE   
   JOIN UOM E ON E.UOM_CODE =B.UOM_CODE  
   WHERE A.CANCELLED =0 AND A.XN_TYPE ='WSL'  
   GROUP BY b.REF_MEMO_ID,D.ANGADIA_NAME,A.GATE_ENTRY_NO,A.PARCEL_MEMO_DT,E.UOM_NAME  
  ) PARCEL ON PARCEL.REF_MEMO_ID=INM.INV_ID  
  WHERE INV_ID=@CXNID  
   
   
   IF EXISTS (SELECT TOP 1 'U'  FROM #TMPDETAILS WHERE  DISPLAYNAME ='DISPATCH DETAIL') AND ISNULL (@TRANSPORTER,'')<>''  
   BEGIN  
      UPDATE #TMPFOOTERDETAILS SET COLUMN1='DISPATCH DETAIL: '  
      WHERE SR =@INSERTSR+1     
      SET @INSERTSR=@INSERTSR+1  
        
    
   UPDATE #TMPFOOTERDETAILS SET COLUMN1='TRANSPORTER: '+ISNULL(@TRANSPORTER,'')  
      WHERE SR =@INSERTSR+1     
      SET @INSERTSR=@INSERTSR+1  
        
      UPDATE #TMPFOOTERDETAILS SET COLUMN1='GRNO: '+ISNULL(@GR_NO,'') +' DT: '+ISNULL(@DT,'')  
      WHERE SR =@INSERTSR+1     
      SET @INSERTSR=@INSERTSR+1  
        
       UPDATE #TMPFOOTERDETAILS SET COLUMN1='#BOXES: '+ISNULL(@BOXES,'') +' WT: '+ISNULL(@WT,'')  
      WHERE SR =@INSERTSR+1     
      SET @INSERTSR=@INSERTSR+1  
        
   END  
   
   
  ---5.FOR TERMS & CONDITION  
   IF EXISTS (SELECT TOP 1 'U'  FROM PRINTMASTER WHERE PRINTID=@CPRINTID AND PRINTCOMPANYTERMS<>0)  
   BEGIN  
      UPDATE #TMPFOOTERDETAILS SET COLUMN1='TERMS & CONDITION: '  
      WHERE SR =@INSERTSR+1     
      SET @INSERTSR=@INSERTSR+1  
  
      UPDATE #TMPFOOTERDETAILS SET COLUMN1=(SELECT COMPANYTERMS  FROM PRINTMASTER WHERE PRINTID=@CPRINTID )  
      WHERE SR =@INSERTSR+1     
      SET @INSERTSR=@INSERTSR+1  
        
      UPDATE #TMPFOOTERDETAILS SET COLUMN1=(SELECT COMPANYTERMS1  FROM PRINTMASTER WHERE PRINTID=@CPRINTID )  
      WHERE SR =@INSERTSR+1     
      SET @INSERTSR=@INSERTSR+1  
        
      UPDATE #TMPFOOTERDETAILS SET COLUMN1=(SELECT COMPANYTERMS2  FROM PRINTMASTER WHERE PRINTID=@CPRINTID )  
      WHERE SR =@INSERTSR+1     
      SET @INSERTSR=@INSERTSR+1  
        
      UPDATE #TMPFOOTERDETAILS SET COLUMN1=(SELECT COMPANYTERMS3  FROM PRINTMASTER WHERE PRINTID=@CPRINTID )  
      WHERE SR =@INSERTSR+1     
      SET @INSERTSR=@INSERTSR+1  
        
       UPDATE #TMPFOOTERDETAILS SET COLUMN1=(SELECT COMPANYTERMS4  FROM PRINTMASTER WHERE PRINTID=@CPRINTID )  
      WHERE SR =@INSERTSR+1     
      SET @INSERTSR=@INSERTSR+1  
        
        
   END  
    
     
  ----FOR COLUMN 2  
  SET @INSERTSR=3  
  ---FOR SUBTOTAL  
   IF EXISTS (SELECT TOP 1 'U'  FROM #TMPDETAILS WHERE  DISPLAYNAME ='SUBTOTAL')  
   BEGIN  
      UPDATE #TMPFOOTERDETAILS SET COLUMN2='SUBTOTAL: '+ CAST((SELECT SUBTOTAL  FROM INM01106 WHERE INV_ID=@CXNID) AS VARCHAR(20))  
      WHERE SR =@INSERTSR+1     
      SET @INSERTSR=@INSERTSR+1  
   END  
     
   DECLARE @DISPER NUMERIC(18,2)  
   SET @DISPER=(SELECT DISCOUNT_PERCENTAGE   FROM INM01106 WHERE INV_ID=@CXNID)  
     
   IF EXISTS (SELECT TOP 1 'U'  FROM #TMPDETAILS WHERE  DISPLAYNAME ='DISCOUNT PER') AND ISNULL(@DISPER,0)<>0  
   BEGIN  
      UPDATE #TMPFOOTERDETAILS SET COLUMN2='DISCOUNT %:  '+ CAST(@DISPER AS VARCHAR(20))  
      WHERE SR =@INSERTSR+1    
        
   END  
     
   IF EXISTS (SELECT TOP 1 'U'  FROM #TMPDETAILS WHERE  DISPLAYNAME ='DISCOUNT AMOUNT') AND ISNULL(@DISPER,0)<>0  
   BEGIN  
       SET @COLUMNSTR=(SELECT COLUMN2 FROM #TMPFOOTERDETAILS WHERE SR =@INSERTSR+1 )  
      UPDATE #TMPFOOTERDETAILS SET COLUMN2=@COLUMNSTR+'  DISCOUNT AMOUNT:  '+ CAST((SELECT DISCOUNT_AMOUNT   FROM INM01106 WHERE INV_ID=@CXNID) AS VARCHAR(20))  
      WHERE SR =@INSERTSR+1    
       SET @INSERTSR=@INSERTSR+1  
   END  
     
     DECLARE @FORMNAME VARCHAR(MAX),@TAXAMOUNT VARCHAR(MAX)  
        
      SELECT @FORMNAME=   
      STUFF((SELECT  ',     ' + FORM_NAME  
      FROM    IND01106 B   
      JOIN FORM C ON B.ITEM_FORM_ID =C.FORM_ID     
      WHERE A.INV_ID = B.INV_ID GROUP BY FORM_NAME FOR XML PATH('')),1,1,''  ) ,  
      @TAXAMOUNT=STUFF((SELECT  ',     ' + CAST(SUM(ITEM_TAX_AMOUNT) AS VARCHAR(50))  
      FROM    IND01106 B   
      JOIN FORM C ON B.ITEM_FORM_ID =C.FORM_ID     
      WHERE A.INV_ID = B.INV_ID GROUP BY FORM_NAME FOR XML PATH('')),1,1,''  )   
      FROM    INM01106  A   
      WHERE INV_ID=@CXNID   
      
   IF EXISTS (SELECT TOP 1 'U'  FROM #TMPDETAILS WHERE  DISPLAYNAME ='TAX NAME') OR EXISTS (SELECT TOP 1 'U'  FROM #TMPDETAILS WHERE  DISPLAYNAME ='TAX AMOUNT')  
   BEGIN  
        
      IF ISNULL(@FORMNAME,'')<>''  
      BEGIN  
      UPDATE #TMPFOOTERDETAILS SET COLUMN2='TAX DETAILS '  
      WHERE SR =@INSERTSR+1    
      SET @INSERTSR=@INSERTSR+1  
        
        
     IF EXISTS (SELECT TOP 1 'U'  FROM #TMPDETAILS WHERE  DISPLAYNAME ='TAX NAME')  
      BEGIN  
           UPDATE #TMPFOOTERDETAILS SET COLUMN2='TAX FORM NAME:'+@FORMNAME  
           WHERE SR =@INSERTSR+1    
      END  
      IF EXISTS (SELECT TOP 1 'U'  FROM #TMPDETAILS WHERE  DISPLAYNAME ='TAX AMOUNT')  
      BEGIN  
           SET @COLUMNSTR=(SELECT COLUMN2 FROM #TMPFOOTERDETAILS WHERE SR =@INSERTSR+1 )  
           UPDATE #TMPFOOTERDETAILS SET COLUMN2=@COLUMNSTR+'   TAX AMT:'+@TAXAMOUNT  
           WHERE SR =@INSERTSR+1    
      END  
      SET @INSERTSR=@INSERTSR+1  
   END  
   END  
     
   DECLARE @OCTROI_AMOUNT NUMERIC(18,2)  
   SET @OCTROI_AMOUNT=(SELECT OCTROI_AMOUNT    FROM INM01106 WHERE INV_ID=@CXNID)  
     
   IF EXISTS (SELECT TOP 1 'U'  FROM #TMPDETAILS WHERE  DISPLAYNAME ='OCTRAI') AND ISNULL(@OCTROI_AMOUNT,0)<>0  
   BEGIN  
        UPDATE #TMPFOOTERDETAILS SET COLUMN2='OCTROI: '+ CAST(@OCTROI_AMOUNT AS VARCHAR(20))  
        WHERE SR =@INSERTSR+1    
        SET @INSERTSR=@INSERTSR+1  
   END  
     
   DECLARE @FREIGHT NUMERIC(18,2)  
   SET @FREIGHT=(SELECT FREIGHT    FROM INM01106 WHERE INV_ID=@CXNID)  
     
   IF EXISTS (SELECT TOP 1 'U'  FROM #TMPDETAILS WHERE  DISPLAYNAME ='FREIGHT') AND ISNULL(@FREIGHT,0)<>0  
   BEGIN  
        UPDATE #TMPFOOTERDETAILS SET COLUMN2='FREIGHT: '+ CAST(@FREIGHT AS VARCHAR(20))  
        WHERE SR =@INSERTSR+1    
        SET @INSERTSR=@INSERTSR+1  
   END  
     
   DECLARE @OTHER_CHARGES NUMERIC(18,2)  
   SET @OTHER_CHARGES=(SELECT OTHER_CHARGES    FROM INM01106 WHERE INV_ID=@CXNID)  
     
   IF EXISTS (SELECT TOP 1 'U'  FROM #TMPDETAILS WHERE  DISPLAYNAME ='OTHER CHARGE') AND ISNULL(@OTHER_CHARGES,0)<>0  
   BEGIN  
        UPDATE #TMPFOOTERDETAILS SET COLUMN2='OTHER CHARGE: '+ CAST(@OTHER_CHARGES AS VARCHAR(20))  
        WHERE SR =@INSERTSR+1    
        SET @INSERTSR=@INSERTSR+1  
   END  
     
   DECLARE @INSURANCE NUMERIC(18,2)  
   SET @INSURANCE=(SELECT INSURANCE    FROM INM01106 WHERE INV_ID=@CXNID)  
     
     
   IF EXISTS (SELECT TOP 1 'U'  FROM #TMPDETAILS WHERE  DISPLAYNAME ='INSURANCE') AND ISNULL(@INSURANCE,0)<>0  
   BEGIN  
        UPDATE #TMPFOOTERDETAILS SET COLUMN2='INSURANCE: '+ CAST(@INSURANCE AS VARCHAR(20))  
        WHERE SR =@INSERTSR+1    
        SET @INSERTSR=@INSERTSR+1  
   END  
     
    
        UPDATE #TMPFOOTERDETAILS SET COLUMN2='NET AMOUNT: '+ CAST((SELECT NET_AMOUNT    FROM INM01106 WHERE INV_ID=@CXNID) AS VARCHAR(20))  
        WHERE SR =@INSERTSR+1    
        SET @INSERTSR=@INSERTSR+1  
   
 DELETE FROM #TMPFOOTERDETAILS WHERE COLUMN1 ='' AND COLUMN2 =''  
     
SELECT COLUMN1 ,COLUMN2 FROM #TMPFOOTERDETAILS  
ORDER BY SR  
  
  
END  
  
IF @CXNID='SAMPLE'  
BEGIN  
    
 INSERT INTO #TMPFOOTERDETAILS(SR,COLUMN1,COLUMN2)  
 SELECT 1, 'TOTAL:- QTY:    3 PCS   MRP VALUE:   4350.00   WSP VALUE:   1950.00','' UNION ALL  
 SELECT 2,'MODE OF PAYMENT: CREDIT','' UNION ALL  
 SELECT 3,'TEST----------------------------------------------TEST','TEST' UNION ALL  
 SELECT 4,'DISPATCH DETAIL: ','SUBTOTAL: 1950.00' UNION ALL  
 SELECT 5,'TRANSPORTER: FEDEX','DISCOUNT %:  0.00  DISCOUNT AMOUNT:  0.00' UNION ALL  
 SELECT 6,'GRNO: 154 DT: 30-09-2015','TAX DETAILS ' UNION ALL  
 SELECT 7,'#BOXES: 0.00 WT: 15.00 KGS','TAX FORM NAME:     CST 2%   TAX AMT:     39.0000' UNION ALL  
 SELECT 8,'TERMS & CONDITION: ','OCTROI: 0.00' UNION ALL  
 SELECT 9,'TERM & CONDITION  1','FREIGHT: 0.00' UNION ALL  
 SELECT 10,'TERM & CONDITION  2','OTHER CHARGE: 0.00' UNION ALL  
 SELECT 11,'TERM & CONDITION  3','INSURANCE: 0.00' UNION ALL  
 SELECT 12,'TERM & CONDITION  4','NET AMOUNT: 1989.00' UNION ALL  
 SELECT 13,'TERM & CONDITION  5',''   
   
 SELECT * FROM #TMPFOOTERDETAILS  
 ORDER BY SR  
  
END  
  
  
GOTO ENDPROC  
  
---------------------FOR DEBIT NOTE-----------------------------------------------------------  
  
DEBITNOTEPRINT:  
--DETAILS FROM COMPANY MASTER  
 SET @CMSTCOLS='CMP.COMPANY_NAME,CMP.ADDRESS1,CMP.ADDRESS2,CMP.CITY,CMP.PHONES_FAX,CMP.TIN_NO,CMP.TAN_NO  
            ,CMP.CIN,CMP.LOGO_PATH'  
  
 --DETAILS FROM CUSTOMER MASTER  
 SET @CMSTCOLS=@CMSTCOLS+'--,RTRIM(LTRIM(CUS.CUSTOMER_TITLE+'' ''+CUS.CUSTOMER_FNAME+'' ''+CUS.CUSTOMER_LNAME)) AS CUSTOMER  
        ,RTRIM(LTRIM(LMP.ADDRESS1+'' ''+LMP.ADDRESS2+'' ''+CUSCT.CITY)) AS CUSTOMERADDRESS'  
 --SELECT  * FROM RMM01106  
 --FIX DETAILS FROM RMM01106  
 SET @CMSTCOLS=@CMSTCOLS+',RMM.RM_NO AS NO,CONVERT(VARCHAR,RMM.RM_DT,105) AS DATE,RIGHT(CONVERT(VARCHAR,RMM.RM_TIME,100),7) AS TIME,(RMM.SUBTOTAL) AS SUBTOTAL  
        ,RMM.TOTAL_AMOUNT,RMM.REMARKS,CONVERT(NUMERIC(18,2),RMM.DISCOUNT_PERCENTAGE) AS DISCOUNT_PERCENTAGE  
        ,CONVERT(NUMERIC(18,2),RMM.DISCOUNT_AMOUNT) AS DISCOUNT_AMOUNT'  
   
 --GET THE SALE PERSON FOR MASTER CURSOR  
 IF OBJECT_ID('TEMPDB..#MSTSALEPERSON2','U') IS NOT NULL  
  DROP TABLE #MSTSALEPERSON2  
  
 SELECT TOP 1 RMM.AC_CODE  
 INTO #MSTSALEPERSON2       
 FROM RMD01106 RMD(NOLOCK)  
 JOIN RMM01106 RMM(NOLOCK) ON RMD.RM_ID=RMM.RM_ID   
 WHERE RMM.RM_ID=@CXNID  
 ORDER BY AC_CODE DESC  
   
 --DECLARE @BPICKALIAS VARCHAR(1),@NPRINTLENGTH VARCHAR(3)  
    
 SELECT @BPICKALIAS=PICKALIAS,@NPRINTLENGTH=COLUMNPRINTLENGTH  
 FROM PRINTDESCRIPTION  
 WHERE PRINTID=@CPRINTID AND VALUENAME='SUPPLIER'   
   
 SET @CMSTSALEPERSON=LTRIM(RTRIM(ISNULL(@CMSTSALEPERSON,'')))  
   
 IF RIGHT(@CMSTSALEPERSON,1)='/'  
 SET @CMSTSALEPERSON=SUBSTRING(@CMSTSALEPERSON,1,LEN(@CMSTSALEPERSON)-1)  
  
 SET @CMSTCOLS=@CMSTCOLS+','''+@CMSTSALEPERSON+''' AS SUPPLIER '     
   
  IF OBJECT_ID('#PAYMENTS2','U') IS NOT NULL  
  DROP TABLE #PAYMENTS2  
 --GET THE PAYMENT MODES FOR THIS TRANSACTION   
     SELECT   
   (CASE WHEN PM.PAYMODE_GRP_CODE='0000001' THEN 1  
      WHEN PM.PAYMODE_GRP_CODE='0000002' THEN 2  
      ELSE 3 END) AS PAYORDER       
  ,(CASE WHEN PM.PAYMODE_GRP_CODE='0000001' THEN 'CASH: '  
      WHEN PM.PAYMODE_GRP_CODE='0000002' THEN '  CC: '  
      ELSE '  OTHERS: ' END) AS PAYMODES    
  ,(CASE WHEN PM.PAYMODE_GRP_CODE='0000001' THEN SUM(AMOUNT)  
      WHEN PM.PAYMODE_GRP_CODE='0000002' THEN SUM(AMOUNT)  
      ELSE SUM(AMOUNT) END) AS PAYAMOUNT  
  INTO #PAYMENTS2  
  FROM PAYMODE_XN_DET PXD  
  JOIN PAYMODE_MST PM ON PXD.PAYMODE_CODE=PM.PAYMODE_CODE  
  WHERE PXD.MEMO_ID=@CXNID AND PXD.XN_TYPE='SLS'   
  GROUP BY PM.PAYMODE_GRP_CODE  
  ORDER BY PAYORDER  
   
 SET @CMSTPAYMODES='SETTLEMENT: '  
 SELECT @CMSTPAYMODES=@CMSTPAYMODES+PAYMODES+LTRIM(RTRIM(STR(PAYAMOUNT,18,2)))  
 FROM #PAYMENTS2  
   
   
   
 SET @CMSTCOLS=@CMSTCOLS+','''+@CMSTPAYMODES+''' AS PAYMENTS'  
   
 ---GET THE QUANTITY SUMMARY FOR THE DEBIT NOTE  
 IF OBJECT_ID('TEMPDB..#QUANTITYSUM2','U') IS NOT NULL  
  DROP TABLE #QUANTITYSUM2  
   
 SELECT ART.DISCON,' '+UOM.UOM_NAME AS UOM_NAME  
    ,SUM(CASE WHEN RMD.QUANTITY>=0 THEN RMD.QUANTITY ELSE 0 END) AS OUT_QUANTITY  
    ,SUM(CASE WHEN RMD.QUANTITY<0 THEN ABS(RMD.QUANTITY) ELSE 0 END) AS IN_QUANTITY  
    ,COUNT(RMD.ROW_ID) AS ITEMCOUNT  
 INTO #QUANTITYSUM2  
 FROM RMD01106 RMD  
 JOIN SKU ON RMD.PRODUCT_CODE=SKU.PRODUCT_CODE  
 JOIN ARTICLE ART ON SKU.ARTICLE_CODE=ART.ARTICLE_CODE  
 JOIN UOM ON UOM.UOM_CODE=ART.UOM_CODE  
 WHERE RMD.RM_ID=@CXNID  
 GROUP BY ART.DISCON,UOM.UOM_NAME  
 ORDER BY ART.DISCON  
   
 IF EXISTS(SELECT TOP 1 'U' FROM #QUANTITYSUM2 WHERE OUT_QUANTITY<>0)  
 BEGIN  
  SET @COUTQTYSUMMARY='OUT :'  
  SELECT @COUTQTYSUMMARY=@COUTQTYSUMMARY+UOM_NAME+' '+LTRIM(RTRIM(STR(OUT_QUANTITY)))  
         +(CASE WHEN DISCON=2 THEN '/('+LTRIM(RTRIM(STR(ITEMCOUNT)))+')' ELSE '' END)  
  FROM #QUANTITYSUM2  
  WHERE OUT_QUANTITY<>0  
 END  
 ELSE   
  SET @COUTQTYSUMMARY='OUT : 0'  
   
 SET @CMSTCOLS=@CMSTCOLS+','''+@COUTQTYSUMMARY+''' AS OUTQUANTITY'  
    
 IF EXISTS(SELECT TOP 1 'U' FROM #QUANTITYSUM2 WHERE IN_QUANTITY<>0)  
 BEGIN  
  SET @CINQTYSUMMARY='IN :'  
  SELECT @CINQTYSUMMARY=@CINQTYSUMMARY+UOM_NAME+LTRIM(RTRIM(STR(OUT_QUANTITY,18,2)))  
         +(CASE WHEN DISCON=2 THEN '/('+LTRIM(RTRIM(STR(ITEMCOUNT)))+')' ELSE '' END)  
  FROM #QUANTITYSUM2  
  WHERE IN_QUANTITY<>0  
 END  
 ELSE   
  SET @CINQTYSUMMARY='RET: 0'   
   
   
 SET @CMSTCOLS=@CMSTCOLS+','''+@CINQTYSUMMARY+''' AS INQUANTITY'  
   
 --FINAL PRINT MASTER CURSOR  
 SET @CMSTCMD=N'SELECT '+@CMSTCOLS  
     +' FROM RMM01106 RMM  
        JOIN COMPANY CMP ON CMP.COMPANY_CODE=''01''  
        JOIN LMP01106 LMP ON LMP.AC_CODE=RMM.AC_CODE  
        JOIN LM01106 LM ON LM.AC_CODE=LMP.AC_CODE  
        --JOIN CUSTDYM CUS ON CMM.CUSTOMER_CODE=CUS.CUSTOMER_CODE  
        JOIN AREA CUSAR ON LMP.AREA_CODE=CUSAR.AREA_CODE  
        JOIN CITY CUSCT ON CUSAR.CITY_CODE=CUSCT.CITY_CODE  
        WHERE RMM.RM_ID='''+@CXNID+''''  
   
   
 --SELECT * FROM PRINTDESCRIPTION  
   
 --START OF PREPARATION OF PRINT DETAIL CURSOR  
    SELECT @CDESC=ISNULL(@CDESC+'+'' '+COLUMNSEPARATOR+' ''+','')  
  +(CASE WHEN ISNULL(COLUMNPRINTLENGTH,0)=0 THEN '' ELSE 'LEFT(' END)+SOURCENAME+'.'+COLUMNNAME  
  +(CASE WHEN ISNULL(COLUMNPRINTLENGTH,0)=0 THEN '' ELSE ','+COLUMNPRINTLENGTH+')' END)  
   FROM PRINTDESCRIPTION   
   WHERE PRINTID=@CPRINTID AND VALUENAME='PARTICULARS'  
   AND ISVISIBLE=1 AND ISMASTERDATA=0  
   ORDER BY DISPLAYORDER  
   PRINT @CDESC  
   /*  
  IF SHOW BILL DISCOUNT IS FALSE,DISCOUNT SHOULD BE SHIFTED AT ITEM LEVEL AND THUS  
  ITEM LEVEL DISCOUNT PERCENTAGE,DISCOUNT AMOUNT AND AMOUNT SHOULD BE RECALCULATED.  
   */  
   SELECT @CSHOWBILLDISCOUNT=ISMASTERDATA  
   FROM PRINTDETAIL  
   WHERE PRINTID=@CPRINTID AND DISPLAYNAME='BILL DISC' AND ISVISIBLE=1  
     
   SET @CSHOWBILLDISCOUNT=ISNULL(@CSHOWBILLDISCOUNT,1)  
     
   /*  
  TAX_METHOD : 1 IS INCLUSIVE ELSE EXCLUSIVE  
   */  
  --SELECT SRNO,* FROM RMD01106  
   SET @CDETCMD=N'SELECT ROW_NUMBER() OVER(ORDER BY RMD01106.SRNO) AS SNO,  
     '+(CASE WHEN @CDESC='' THEN '' ELSE  +'(CASE WHEN RMD01106.BILL_LEVEL_TAX_METHOD=1 THEN ' + @CDESC+ ' ELSE ''*'' + ' +  @CDESC+   ' END)  AS PARTICULARS,' END)  
     --+'(CASE WHEN ARTICLE.DISCON=1   THEN CAST(ROUND(CONVERT(DECIMAL(18),SUM(RMD01106.QUANTITY)),1) AS VARCHAR(20))  
     --     WHEN ARTICLE.DISCON=2 THEN CAST(ROUND(CONVERT(NUMERIC(18,2),SUM(RMD01106.QUANTITY)),1)  AS VARCHAR(20)) END) AS QUANTITY   
     +'(CAST(ROUND(CONVERT(NUMERIC(18,2),SUM(CMD01106.QUANTITY)),3)  AS VARCHAR(20))) AS QUANTITY   
      ,'''+@CMSTSALEPERSON+''' AS SALEPERSON  
      ,RMD01106.PURCHASE_PRICE AS RATE  
      ,CONVERT(NUMERIC(18,2),'+(CASE WHEN @CSHOWBILLDISCOUNT=1 THEN 'RMD01106.DISCOUNT_PERCENTAGE'  
    ELSE '(SUM(RMD01106.DISCOUNT_AMOUNT+RMD01106.DN_DISCOUNT_AMOUNT)/SUM(RMD01106.QUANTITY*RMD01106.PURCHASE_PRICE))*100'  
    END)+') AS DISCOUNT_PERCENTAGE   
      ,CONVERT(NUMERIC(18,2),  
    '+(CASE WHEN @CSHOWBILLDISCOUNT=1 THEN 'SUM(RMD01106.DISCOUNT_AMOUNT)'   
       ELSE 'SUM(RMD01106.DISCOUNT_AMOUNT+RMD01106.DN_DISCOUNT_AMOUNT)' END)+') AS DISCOUNT_AMOUNT   
      ,CONVERT(NUMERIC(18,2),RMD01106.ITEM_TAX_PERCENTAGE) AS  TAX_PERCENTAGE  
      ,CONVERT(NUMERIC(18,2),SUM(RMD01106.ITEM_TAX_AMOUNT)) AS TAX_AMOUNT  
      ,CONVERT(NUMERIC(18,2),  
      '+(CASE WHEN @CSHOWBILLDISCOUNT=1 THEN 'SUM(RMD01106.AMOUNT)'   
        ELSE 'SUM(CMD01106.AMOUNT-CMD01106.DN_DISCOUNT_AMOUNT)' END)+') AS AMOUNT  
      ,(CASE WHEN RMD01106.BILL_LEVEL_TAX_METHOD=1 THEN 0 ELSE 1 END) AS ISTAXEXCLUSIVE  
  FROM RMD01106 (NOLOCK)  
  JOIN SKU (NOLOCK) ON SKU.PRODUCT_CODE =RMD01106.PRODUCT_CODE   
  JOIN ARTICLE (NOLOCK) ON ARTICLE.ARTICLE_CODE =SKU.ARTICLE_CODE   
  JOIN UOM (NOLOCK) ON UOM.UOM_CODE =ARTICLE.UOM_CODE   
  JOIN SECTIOND (NOLOCK) ON ARTICLE.SUB_SECTION_CODE=SECTIOND.SUB_SECTION_CODE  
  JOIN SECTIONM (NOLOCK) ON SECTIOND.SECTION_CODE=SECTIONM.SECTION_CODE  
  JOIN PARA1 (NOLOCK) ON PARA1.PARA1_CODE =SKU.PARA1_CODE   
  JOIN PARA2 (NOLOCK) ON PARA2.PARA2_CODE =SKU.PARA2_CODE   
  JOIN PARA3 (NOLOCK) ON PARA3.PARA3_CODE =SKU.PARA3_CODE   
  JOIN PARA4 (NOLOCK) ON PARA4.PARA4_CODE =SKU.PARA4_CODE   
  JOIN PARA5 (NOLOCK) ON PARA5.PARA5_CODE =SKU.PARA5_CODE   
  JOIN PARA6 (NOLOCK) ON PARA6.PARA6_CODE =SKU.PARA6_CODE  
LEFT OUTER JOIN ARTICLE_FIX_ATTR ATTR  (NOLOCK) ON ARTICLE.ARTICLE_CODE = ATTR.ARTICLE_CODE 
LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE
LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE
LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE
LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE
LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE
LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE
LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE
LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE
LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE
LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE
LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE
LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE
LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE
LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE
LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE
LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE
LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE
LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE
LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE
LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE
LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE
LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE
LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE
LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE
LEFT OUTER JOIN ATTR25_MST AT25(NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE  --LEFT JOIN EMPLOYEE ON EMPLOYEE.EMP_CODE=CMD01106.EMP_CODE  
  WHERE RMD01106.RM_ID='''+@CXNID+'''  
  GROUP BY '+(CASE WHEN @CDESC='' THEN '' ELSE  +'(CASE WHEN RMD01106.BILL_LEVEL_TAX_METHOD=1 THEN ' + @CDESC+ ' ELSE ''*'' + ' +  @CDESC+   ' END) ,' END)  
    
    
  +'RMD01106.PURCHASE_PRICE,RMD01106.DISCOUNT_PERCENTAGE,RMD01106.ITEM_TAX_PERCENTAGE,RMD01106.SRNO,RMD01106.BILL_LEVEL_TAX_METHOD,ARTICLE.DISCON  
  ORDER BY RMD01106.SRNO'  
 -- '+(CASE WHEN @CDESC='' THEN '' ELSE @CDESC+' ,' END)  
   
  --PRINT'FOR'  
 PRINT @CDETCMD  
  
  
  --PRINT'RK'  
  SELECT * FROM PRINTMASTER WHERE PRINTID=@CPRINTID  
  SELECT * FROM PRINTDETAIL WHERE PRINTID=@CPRINTID  
  EXEC SP_EXECUTESQL @CMSTCMD  
  EXEC SP_EXECUTESQL @CDETCMD  
    
    SET @CDETCMD =N'SELECT RPS.NET_AMOUNT AS PACKSLIPAMOUNT,RPS.CM_NO AS PACKSLIPNO  
   FROM RPS_MST RPS 
   WHERE P.REF_CM_ID='''+@CXNID+''' '  
  EXEC SP_EXECUTESQL @CDETCMD  
    
 GOTO ENDPROC   
  
ENDPROC:   
END  
--END OF PROCEDURE - SP3SPRINTREPORT
