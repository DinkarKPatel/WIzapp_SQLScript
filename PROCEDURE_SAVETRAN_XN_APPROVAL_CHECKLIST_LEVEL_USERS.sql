create PROCEDURE SAVETRAN_XN_APPROVAL_CHECKLIST_LEVEL_USERS
(
	 @CSPID			VARCHAR(50)
)
--WITH ENCRYPTION
AS
BEGIN
DECLARE @CERRMSG VARCHAR(500),@CSTEP VARCHAR(10)
	   ,@CCMD NVARCHAR(MAX),@BREFEXISTS BIT
	  

DECLARE @TOUTPUT TABLE(XN_TYPE VARCHAR(10),LEVEL_CODE VARCHAR(50),USER_CODE VARCHAR(50),ERRMSG VARCHAR(500))

---LIST OF TABLES TO SAVE
DECLARE @TXN_APPROVAL_CHECKLIST_LEVEL_USERS VARCHAR(100)
SET @TXN_APPROVAL_CHECKLIST_LEVEL_USERS='MSTLOC_XN_APPROVAL_CHECKLIST_LEVEL_USERS_UPLOAD'


BEGIN TRY
BEGIN TRANSACTION
		    SET @CSTEP=10
           
		    --SET @CCMD =N'DELETE A FROM XN_APPROVAL_CHECKLIST_LEVEL_USERS A
		    --JOIN '+@TXN_APPROVAL_CHECKLIST_LEVEL_USERS+' B ON A.LEVEL_CODE=B.LEVEL_CODE AND A.XN_TYPE=B.XN_TYPE 
		    --WHERE ISNULL(B.[CHK_LEVEL],0)=0'
		    --PRINT @CCMD
		    --EXEC SP_EXECUTESQL @CCMD
		    
		    SET @CSTEP=20
            SET @CCMD = N'DELETE A FROM '+@TXN_APPROVAL_CHECKLIST_LEVEL_USERS+' A  WHERE ISNULL(A.[CHK_LEVEL],0)=0 AND SP_ID= '''+@CSPID+''' '
		    PRINT @CCMD
		    EXEC SP_EXECUTESQL @CCMD
		    
			--VALIDATION FOR BLANK CHECKLIST_DESC
			SET @CCMD=N'IF EXISTS(SELECT TOP 1 ''U'' FROM '+@TXN_APPROVAL_CHECKLIST_LEVEL_USERS+' WHERE  ISNULL(LEVEL_CODE,'''')='''' OR ISNULL(USER_CODE,'''')='''' OR ISNULL(XN_TYPE,'''')=''''  AND SP_ID= '''+@CSPID+''')
					        SET @CERRMSG=''LEVEL CODE OR USER_CODE OR XN_TYPE  CANNOT BE BLANK.'''
			PRINT @CCMD					        
			EXEC SP_EXECUTESQL @CCMD,N'@CERRMSG VARCHAR(500) OUTPUT',@CERRMSG OUTPUT
			
			IF ISNULL(@CERRMSG,'')<>''
				GOTO END_PROC
			
			SET @CSTEP=70
			--VALIDATION FOR UNIQUE CHECKLISTDESC

SET @CCMD=N'DELETE A FROM  XN_APPROVAL_CHECKLIST_LEVEL_USERS A 
            JOIN '+@TXN_APPROVAL_CHECKLIST_LEVEL_USERS+' B ON  A.XN_TYPE=B.XN_TYPE AND A.DEPT_ID=B.DEPT_ID
			WHERE  B.SP_ID= '''+@CSPID+''' '
PRINT @CCMD				        
EXEC SP_EXECUTESQL @CCMD
		
		
		 DECLARE @CWHERECLAUSE VARCHAR(1000)
        SET @CWHERECLAUSE = ' SP_ID='''+LTRIM(RTRIM((@CSPID)))+''''
		--DECLARE @CFILTERCONDITION VARCHAR(100)
		--SET @CFILTERCONDITION=' A.DEPT_ID=B.DEPT_ID'
 
		
	
	SET @CSTEP=160
	--UPDATING XN_APPROVAL_CHECKLIST_MST MASTER
	EXEC UPDATEMASTERXN 
			 @CSOURCEDB=''
			,@CSOURCETABLE=@TXN_APPROVAL_CHECKLIST_LEVEL_USERS
			,@CDESTDB=''
			,@CDESTTABLE='XN_APPROVAL_CHECKLIST_LEVEL_USERS'
			,@CKEYFIELD1='LEVEL_CODE'
			,@CKEYFIELD2='USER_CODE'
			,@CKEYFIELD3='DEPT_ID'
			,@LINSERTONLY=0
			,@CFILTERCONDITION=@CWHERECLAUSE
			,@LUPDATEXNS=0
			,@CXNTYPE=''
			,@LUPDATEONLY=0
			,@CUSERID=''
			,@BALWAYSUPDATE=1
		
  
	
	
END TRY
BEGIN CATCH 
	SET @CERRMSG='SAVETRAN_XN_APPROVAL_CHECKLIST_LEVEL_USERS: STEP - '+ISNULL(@CSTEP,'')+', MESSAGE - '+ERROR_MESSAGE() 
END CATCH

END_PROC:


IF @@TRANCOUNT>0  
 BEGIN  
  IF ISNULL(@CERRMSG,'')='' 
   COMMIT TRANSACTION  
  ELSE  

   ROLLBACK  
 END  
IF @CERRMSG<>''
BEGIN
 INSERT @TOUTPUT(XN_TYPE,LEVEL_CODE,USER_CODE   ,ERRMSG)		
 SELECT '','','',@CERRMSG
END
ELSE
BEGIN
SET @CCMD=N'SELECT XN_TYPE,LEVEL_CODE,USER_CODE,'''' AS ERRMSG FROM '+@TXN_APPROVAL_CHECKLIST_LEVEL_USERS+''
PRINT @CCMD	
INSERT @TOUTPUT(XN_TYPE,LEVEL_CODE,USER_CODE   ,ERRMSG)				        
EXEC SP_EXECUTESQL @CCMD

IF (SELECT COUNT(*) FROM @TOUTPUT)=0
BEGIN
INSERT @TOUTPUT(XN_TYPE,LEVEL_CODE,USER_CODE   ,ERRMSG)		
 SELECT 'SUCESS','','',@CERRMSG
END
END
 

 DELETE A FROM MSTLOC_XN_APPROVAL_CHECKLIST_LEVEL_USERS_UPLOAD A (NOLOCK) WHERE SP_ID=@CSPID


SELECT * FROM @TOUTPUT
END
--END OF PROCEDURE - XN_APPROVAL_CHECKLIST_LEVEL_USERS
