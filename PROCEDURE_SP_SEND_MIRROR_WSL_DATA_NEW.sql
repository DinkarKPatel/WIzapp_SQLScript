CREATE PROCEDURE SP_SEND_MIRROR_WSL_DATA_NEW--(LocId 3 digit change only increased the parameter width by Sanjay:01-11-2024)
	 @CUPLOADEDXNID VARCHAR(50)
	,@CCURLOCID VARCHAR(4)	
	,@BDONOTCHKPENDINGLM BIT=0
	,@BACKNOWLEDGE BIT=0
	,@CERRMSG VARCHAR(1000) OUTPUT
--WITH ENCRYPTION	
AS
/*
	SP_SEND_MIRROR_WSL_DATA_NEW_208_29_1_14 : THIS PROCEDURE WILL SEND WHOLESALE DATA FROM LOCATION TO HO.
*/
BEGIN
	DECLARE @CMEMOID VARCHAR(50),@CSTEP VARCHAR(5),@BPENDINGMSTFOUND BIT
BEGIN TRY 	
	SET @CSTEP=0
	
	SET @CMEMOID = @CUPLOADEDXNID
	---- IF NO MEMO FOUND , JUST END THE PROCESS
	IF ISNULL(@CMEMOID,'')=''
	GOTO END_PROC

	IF NOT EXISTS (SELECT TOP 1 * FROM INM01106 WHERE INV_ID=@CMEMOID)
	BEGIN
		SET @CERRMSG='INVALID MEMO ID :'+@CMEMOID
		GOTO END_PROC
	END


	SET @BPENDINGMSTFOUND=0
	
	IF @BDONOTCHKPENDINGLM=0
	BEGIN
		DECLARE @nInvMode NUMERIC(1,0)
		SELECT @nInvMode=inv_mode FROM inm01106 (NOLOCK) WHERE inv_id=@CUPLOADEDXNID

		IF @nInvMode<>2
			EXEC SP_SEND_MIRROR_XNSMST_DATA_NEW 'WSL',@CMEMOID,@CCURLOCID,@BDONOTCHKPENDINGLM
			,@BPENDINGMSTFOUND OUTPUT
			,@CERRMSG OUTPUT
	END
	PRINT (CASE WHEN @BPENDINGMSTFOUND=1 THEN 'PMST-Y' ELSE 'PMST-N' END)
	
	IF ISNULL(@BPENDINGMSTFOUND,0)=1
	BEGIN
		PRINT 'PENDING MASTER FOUND'
		GOTO END_PROC
	END

LBLTABLEINFO:
	SET @CSTEP=50
	---- POPULATE LIST OF TABLES 

	IF @BACKNOWLEDGE=1
		GOTO END_PROC
		
	SET @CSTEP=55
	
/*INM01106,IND01106,INM01106_AUDIT,IND01106_AUDIT,PAYMODE_XN_DET,PAYMODE_MST,PAYMODE_GRP_MST
,EMPLOYEE,EMPLOYEE,EMPLOYEE,LM01106,HD01106,,LMP01106,AREA,CITY,STATE,FORM*/
	
	---- SEND THE WHOLESALE MEMO MASTER TABLE
	SELECT DISTINCT 'WSL_INM01106_MIRROR' AS TARGET_TABLENAME,A.*,@CMEMOID AS XN_ID FROM INM01106 A (NOLOCK) WHERE A.INV_ID=@CMEMOID
	
	SET @CSTEP=60
	---- SEND THE WHOLESALE MEMO DETAIL TABLE
	SELECT DISTINCT 'WSL_IND01106_MIRROR' AS TARGET_TABLENAME,A.* FROM IND01106 A (NOLOCK) 
	WHERE A.INV_ID=@CMEMOID

	SET @CSTEP=65
	---- SEND THE PAYMENT DETAILS RELATED TO GIVEN WHOLESALE MEMO
	SELECT DISTINCT 'WSL_PAYMODE_XN_DET_MIRROR' AS TARGET_TABLENAME,A.* FROM PAYMODE_XN_DET A (NOLOCK)
	WHERE A.XN_TYPE='WSL' AND  A.MEMO_ID=@CMEMOID 
	
	
	SET @CSTEP=66
	---- SEND THE PAYMENT DETAILS RELATED TO GIVEN WHOLESALE MEMO
	SELECT DISTINCT 'WSL_PMT01106_MIRROR' AS TARGET_TABLENAME,A.DEPT_ID,A.product_code,A.BIN_ID,A.quantity_in_stock,
	@CMEMOID AS WSL_MEMO_ID FROM PMT01106 A (NOLOCK)
	JOIN IND01106 (NOLOCK)B ON B.PRODUCT_CODE=A.product_code  
	WHERE  B.INV_ID=@CMEMOID 
	
	---- SEND THE PARCEL_MST RELATED TO GIVEN WHOLESALE MEMO
	SELECT 	DISTINCT 'WSL_PARCEL_MST_MIRROR' AS TARGET_TABLENAME,A.* ,@CMEMOID AS WSL_MEMO_ID FROM PARCEL_MST A (NOLOCK)
	JOIN PARCEL_DET B (NOLOCK) ON B.PARCEL_MEMO_ID=A.PARCEL_MEMO_ID
	WHERE B.REF_MEMO_ID=@CMEMOID AND A.XN_TYPE='WSL'
			
	---- SEND THE PARCEL_DET RELATED TO GIVEN WHOLESALE MEMO
	SELECT 	DISTINCT 'WSL_PARCEL_DET_MIRROR' AS TARGET_TABLENAME,A.*,@CMEMOID AS WSL_MEMO_ID FROM PARCEL_DET A (NOLOCK)
	JOIN PARCEL_MST C (NOLOCK) ON C.PARCEL_MEMO_ID=A.PARCEL_MEMO_ID
	WHERE A.REF_MEMO_ID=@CMEMOID AND C.XN_TYPE='WSL'
	
	SELECT 	DISTINCT 'WSL_ANGM_MIRROR' AS TARGET_TABLENAME,A.*,@CMEMOID AS WSL_MEMO_ID FROM ANGM A (NOLOCK)
    JOIN PARCEL_MST C (NOLOCK) ON C.ANGADIA_CODE=A.ANGADIA_CODE
	JOIN PARCEL_DET B (NOLOCK) ON B.PARCEL_MEMO_ID=C.PARCEL_MEMO_ID
	WHERE B.REF_MEMO_ID=@CMEMOID AND C.XN_TYPE='WSL'


	SELECT DISTINCT 'WSL_BUYER_ORDER_WSL_LINK_MIRROR' AS TARGET_TABLENAME,A.* FROM  BUYER_ORDER_WSL_LINK a (nolock)
	join IND01106 b (NOLOCK)  on a.IND_ROW_ID =b.ROW_ID 
	WHERE b.INV_ID=@CMEMOID

	SET @CSTEP=140

	SELECT 'WSL_XN_AUDIT_TRIAL_DET_MIRROR' AS TARGET_TABLENAME,A.*,@CMEMOID AS WSL_MEMO_ID FROM XN_AUDIT_TRIAL_DET A WHERE XN_TYPE ='WSL' AND XN_ID=@CMEMOID



	 
	
END TRY
BEGIN CATCH
	SET @CERRMSG='P: SP_SEND_MIRROR_WSL_DATA_NEW, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO END_PROC
END CATCH 		

END_PROC:

END
---END OF PROCEDURE - SP_SEND_MIRROR_WSL_DATA_NEW

