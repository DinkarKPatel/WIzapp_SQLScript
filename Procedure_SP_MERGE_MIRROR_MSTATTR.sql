create PROCEDURE SP_MERGE_MIRROR_MSTATTR
 (
   @NMODE INT
  ,@XN_TYPE VARCHAR(50) ='MSTATTR'
 )
AS
 BEGIN
       DECLARE @CSTEP VARCHAR(100),@DTSQL NVARCHAR(MAX),@NMERGE_ORDER NUMERIC(5)
              ,@CTEMPLOCTABLE VARCHAR(100),@CSTATECODEOUT CHAR(7),@CSTATECODE VARCHAR(10)
              ,@CCURDEPTID VARCHAR(10),@CHODEPTID VARCHAR(10),@BHOLOC BIT,@NLOCTYPE VARCHAR(50)
              ,@BPURLOC VARCHAR(10),@CTABLENAME VARCHAR(100),@CTMP_TABLENAME VARCHAR(100)
              ,@CKEYFIELD1 VARCHAR(100),@CTEMPLOCSSTTABLE VARCHAR(500),@CTEMPTABLE VARCHAR(500)
              ,@CTEMPLOCSSTMSTTABLE VARCHAR(500),@BPROCEED BIT,@CKEYFIELD2 VARCHAR(500),@CKEYFIELD3 VARCHAR(500) 
	          ,@CSOURCETABLE VARCHAR(1000),@NXNSMERGINGORDER INT,@CSOURCEDB VARCHAR(200),@CERRORMSG VARCHAR(MAX)	
BEGIN TRY
	  SELECT @CSOURCEDB=''	
	  
	  --VALIDATE DATE 
	  IF ISNULL(@XN_TYPE,'')  = ''
	     BEGIN
	       SET @CERRORMSG ='XN_TYPE IS NOT NULL. PLEASE PASS XN TYPE INTO PARAMATER'
	       GOTO END_PROC;
	     END
	  
	  IF ISNULL(@NMODE,0) = 1
         GOTO END_PROC;	
	  
	  BEGIN TRANSACTION
      
      SET @CSTEP = 00  
               
	  SELECT @CCURDEPTID = VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='LOCATION_ID'  
	  SELECT @CHODEPTID = VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='HO_LOCATION_ID'  
	  
	  IF @CCURDEPTID=@CHODEPTID
	  BEGIN
			SET @CERRORMSG='P:SP_MERGE_MIRROR_MSTATTR, CANNOT CALL MERGING PROC AT HEAD OFFICE'
			GOTO END_PROC
  	  END					

           
	  SET @CSTEP = 10   

	  --DELETE ALREADY EXISTING RECORDS FOR [MASTER TABLE
	   	DELETE FROM SD_ATTR_AVATAR
     
	   SET @CKEYFIELD2 =''
	   SET @CKEYFIELD3 =''

	   --INSERT SECTION Master
	   
	   SET @CSTEP = 20
	   SET @CTABLENAME = 'Sectionm'
	   SET @CSOURCETABLE ='MSTATTR_Sectionm_MIRROR'
	   SET @CKEYFIELD1='SECTION_CODE'
	   EXEC UPDATEMASTERXN
	   @CSOURCEDB=@CSOURCEDB, @CSOURCETABLE=@CSOURCETABLE,
	   @CDESTDB='',@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD1,
	   @CKEYFIELD2=@CKEYFIELD2,@CKEYFIELD3=@CKEYFIELD3,@LINSERTONLY=0,
	   @CFILTERCONDITION='',@LUPDATEONLY=0,@BALWAYSUPDATE=1
	   

	  --INSERT SECTION Master
	   
	   SET @CSTEP = 30
	   SET @CTABLENAME = 'SectionD'
	   SET @CSOURCETABLE ='MSTATTR_SectionD_MIRROR'
	   SET @CKEYFIELD1='Sub_SECTION_CODE'
	   EXEC UPDATEMASTERXN
	   @CSOURCEDB=@CSOURCEDB, @CSOURCETABLE=@CSOURCETABLE,
	   @CDESTDB='',@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD1,
	   @CKEYFIELD2=@CKEYFIELD2,@CKEYFIELD3=@CKEYFIELD3,@LINSERTONLY=0,
	   @CFILTERCONDITION='',@LUPDATEONLY=0,@BALWAYSUPDATE=1
	   
	  
	DECLARE @NCOUNT INT,@BLOOP INT,@CCMD1 NVARCHAR(MAX)
	SET @NCOUNT=25
	SET @BLOOP=1
	WHILE (@BLOOP <=@NCOUNT )
	BEGIN
	     

			SET @CTABLENAME='ATTR'+RTRIM(LTRIM(STR(@BLOOP)))+'_MST'
			SET @CTMP_TABLENAME='MSTATTR_ATTR'+RTRIM(LTRIM(STR(@BLOOP)))+'_MST_MIRROR'
			SET @CKEYFIELD1='ATTR'+RTRIM(LTRIM(STR(@BLOOP)))+'_KEY_CODE'
		

		 EXEC UPDATEMASTERXN
		   @CSOURCEDB=@CSOURCEDB, @CSOURCETABLE=@CSOURCETABLE,
		   @CDESTDB='',@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD1,
		   @CKEYFIELD2=@CKEYFIELD2,@CKEYFIELD3=@CKEYFIELD3,@LINSERTONLY=0,
		   @CFILTERCONDITION='',@LUPDATEONLY=0,@BALWAYSUPDATE=1
	       
			SET @BLOOP=@BLOOP +1  			
	END
	

	   SET @CSTEP = 40
	   SET @CTABLENAME = 'SD_ATTR_AVATAR'
	   SET @CSOURCETABLE ='MSTATTR_SD_ATTR_AVATAR_MIRROR'
	   SET @CKEYFIELD1='SUB_SECTION_CODE'
	   EXEC UPDATEMASTERXN
	   @CSOURCEDB=@CSOURCEDB, @CSOURCETABLE=@CSOURCETABLE,
	   @CDESTDB='',@CDESTTABLE=@CTABLENAME,@CKEYFIELD1=@CKEYFIELD1,
	   @CKEYFIELD2=@CKEYFIELD2,@CKEYFIELD3=@CKEYFIELD3,@LINSERTONLY=0,
	   @CFILTERCONDITION='',@LUPDATEONLY=0,@BALWAYSUPDATE=1
	   
	
	   
    
    GOTO END_PROC
END TRY

BEGIN CATCH
	SET @CERRORMSG='P:SP_MERGE_MIRROR_MSTATTR, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()
	GOTO END_PROC
END CATCH

END_PROC:
	
	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL(@CERRORMSG,'')='' 
			COMMIT
		ELSE
			ROLLBACK	
	END
	
	IF ISNULL(@CERRORMSG,'')='' 
	BEGIN   
		--DROP TEMP TABLE RELATED TO TILL_MST
	    
		DELETE A FROM MSTATTR_Sectionm_MIRROR A  WITH (ROWLOCK) 
		DELETE A FROM MSTATTR_SectionD_MIRROR A  WITH (ROWLOCK) 
		DELETE A FROM MSTATTR_SD_ATTR_AVATAR_MIRROR A  WITH (ROWLOCK) 
		DELETE A FROM MSTATTR_attr1_mst_MIRROR A WITH (ROWLOCK) 
		DELETE A FROM MSTATTR_attr2_mst_MIRROR A WITH (ROWLOCK)  
		DELETE A FROM MSTATTR_attr3_mst_MIRROR A WITH (ROWLOCK) 
		DELETE A FROM MSTATTR_attr4_mst_MIRROR A WITH (ROWLOCK) 
		DELETE A FROM MSTATTR_attr5_mst_MIRROR A WITH (ROWLOCK) 
		DELETE A FROM MSTATTR_attr6_mst_MIRROR A WITH (ROWLOCK) 
		DELETE A FROM MSTATTR_attr7_mst_MIRROR A WITH (ROWLOCK)  
		DELETE A FROM MSTATTR_attr8_mst_MIRROR A WITH (ROWLOCK) 
		DELETE A FROM MSTATTR_attr9_mst_MIRROR A WITH (ROWLOCK)  
		DELETE A FROM MSTATTR_attr10_mst_MIRROR A WITH (ROWLOCK)  
		DELETE A FROM MSTATTR_attr11_mst_MIRROR A WITH (ROWLOCK) 
		DELETE A FROM MSTATTR_attr12_mst_MIRROR A WITH (ROWLOCK)  
		DELETE A FROM MSTATTR_attr13_mst_MIRROR A WITH (ROWLOCK)  
		DELETE A FROM MSTATTR_attr14_mst_MIRROR A WITH (ROWLOCK)  
		DELETE A FROM MSTATTR_attr15_mst_MIRROR A WITH (ROWLOCK) 
		DELETE A FROM MSTATTR_attr16_mst_MIRROR A WITH (ROWLOCK) 
		DELETE A FROM MSTATTR_attr17_mst_MIRROR A WITH (ROWLOCK)  
		DELETE A FROM MSTATTR_attr18_mst_MIRROR A WITH (ROWLOCK)  
		DELETE A FROM MSTATTR_attr19_mst_MIRROR A WITH (ROWLOCK)  
		DELETE A FROM MSTATTR_attr20_mst_MIRROR A WITH (ROWLOCK) 
		DELETE A FROM MSTATTR_attr21_mst_MIRROR A WITH (ROWLOCK) 
		DELETE A FROM MSTATTR_attr22_mst_MIRROR A WITH (ROWLOCK)  
		DELETE A FROM MSTATTR_attr23_mst_MIRROR A WITH (ROWLOCK) 
		DELETE A FROM MSTATTR_attr24_mst_MIRROR A WITH (ROWLOCK)  
		DELETE A FROM MSTATTR_attr25_mst_MIRROR A WITH (ROWLOCK)  
		

	   
	END
		
	SELECT @XN_TYPE AS MEMO_ID,@CERRORMSG AS ERRMSG   	  
END
--END PROCEDURE SP_MERGE_MIRROR_MSTATTR
