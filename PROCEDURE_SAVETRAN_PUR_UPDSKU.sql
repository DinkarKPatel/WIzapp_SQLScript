CREATE PROCEDURE SAVETRAN_PUR_UPDSKU
(
	@NsPiD VARCHAR(40),
	@NMODE INT=1,
	@BCANCELBILL BIT=0,
	@cXntype VARCHAR(20)='PUR',
	@nUpdateMode NUMERIC(2,0)=2,
	@bCalledfromEkaya BIT=0,
	@CERRORMSG VARCHAR(MAX) OUTPUT
	
)
--WITH ENCRYPTION
AS
BEGIN
    BEGIN TRY

	
	
   
	DECLARE @CCMD NVARCHAR(MAX),@CDETAILTABLE VARCHAR(100),@CMASTERTABLE VARCHAR(100),@CMEMOIDCOL VARCHAR(100) ,
	@CQTYCOL VARCHAR(100),@NSTEP varchar(10),@NMATERIALCOST NUMERIC(10,2),@CDISTRIBUTEEXCISEONALLITEMS VARCHAR(2),
	@CEXCISEFILTER VARCHAR(100),@CPAYMODEFILTER VARCHAR(100),@DBILLDT DATETIME,@nCompayFreight numeric(14,2),@cmrrid varchar(30)

	SET @NSTEP = 287.2	-- SETTTING UP ENVIRONMENT
	EXEC SP_CHKXNSAVELOG 'PUR',@NStep,1,@nSpId,'',1	 	
	
	SELECT TOP 1 @CDISTRIBUTEEXCISEONALLITEMS=VALUE FROM CONFIG (nolock) WHERE CONFIG_OPTION='DISTRIBUTE_EXCISE_ALL_ITEMS'
	
	SET @CEXCISEFILTER=(CASE WHEN ISNULL(@CDISTRIBUTEEXCISEONALLITEMS,'')='1' THEN ' 1=1 ' ELSE ' B.TAX_AMOUNT<>0 ' END)
	
	SET @CERRORMSG=''
	
	IF @CXNTYPE='PUR'
	begin
		--company fright add in freight amount and landed cost as per ved ji (20240925)
		
		 SELECT @CMRRID=MRR_ID FROM PUR_PIM01106_UPLOAD A (NOLOCK) WHERE SP_ID=@NSPID
		 
		 SELECT @NCOMPAYFREIGHT=b.total_amount  FROM PUR_PARCEL_DET_UPLOAD A (NOLOCK) 
		 JOIN PARCEL_MST B (NOLOCK) ON A.PARCEL_MEMO_ID =B.PARCEL_MEMO_ID 
		 WHERE SP_ID=@NSPID  and pay_type =1
		
		
	end
	
	set @NCOMPAYFREIGHT=ISNULL(@NCOMPAYFREIGHT,0)
	
	SET @NSTEP = 287.4	-- SETTTING UP ENVIRONMENT
	EXEC SP_CHKXNSAVELOG 'PUR',@NStep,1,@nSpId,'',1	 	
	
	IF @cXntype='PUR'
		SELECT @CDETAILTABLE='pur_PID01106_upload',@CMASTERTABLE='pur_PIM01106_upload',@CMEMOIDCOL='sp_ID',@CQTYCOL='INVOICE_QUANTITY',@CPAYMODEFILTER='ISNULL(C.FRIGHT_PAY_MODE,0) IN (0,1)'
	else
		SELECT @CDETAILTABLE='PID01106',@CMASTERTABLE='PIM01106',@CMEMOIDCOL='MRR_ID',@CQTYCOL='INVOICE_QUANTITY',@CPAYMODEFILTER='ISNULL(C.FRIGHT_PAY_MODE,0) IN (0,1)'
	
	PRINT 'UPDSKUOH-1'
	-- UPDATING OVERHEADS IN SKU_OH TABLE
	SET @CCMD=N';with cte_skuoh as 
	(
	    select  b.product_code ,	
		DISCOUNT_AMOUNT	= ROUND((( B.PURCHASE_PRICE*C.DISCOUNT_PERCENTAGE/100 )+ (ISNULL(B.DISCOUNT_AMOUNT,0)/B.'+@CQTYCOL+')),2),  	
		TAX_AMOUNT 		= (CASE WHEN B.'+@CQTYCOL+'<>0 THEN ROUND(B.TAX_AMOUNT/B.'+@CQTYCOL+',2)+
		ROUND((ISNULL(B.IGST_AMOUNT,0)+ISNULL(B.CGST_AMOUNT,0)+ISNULL(B.SGST_AMOUNT,0))/B.'+@CQTYCOL+',2) 
		+ROUND((CASE WHEN GTOT.GROSS_TOTAL<>0 THEN ((ISNULL(C.OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(C.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(C.OTHER_CHARGES_SGST_AMOUNT,0))/GTOT.GROSS_TOTAL)*B.PURCHASE_PRICE ELSE 0 END ),2)
		+CASE WHEN '+@CPAYMODEFILTER+' THEN  ROUND((CASE WHEN GTOT.GROSS_TOTAL<>0 THEN ((ISNULL(C.FREIGHT_IGST_AMOUNT,0)+ISNULL(C.FREIGHT_CGST_AMOUNT,0)+ISNULL(C.FREIGHT_SGST_AMOUNT,0))/GTOT.GROSS_TOTAL)*B.PURCHASE_PRICE ELSE 0 END ),2) ELSE 0 END
		ELSE 0 END),  	
		FREIGHT			= ISNULL(ROUND((CASE WHEN GTOT.GROSS_TOTAL<>0 THEN ( ('+str(isnull(@NCOMPAYFREIGHT,0),14,2)+' +ISNULL(C.FREIGHT_TAXABLE_VALUE,0))/GTOT.GROSS_TOTAL)*B.PURCHASE_PRICE ELSE 0 END ),2),0),  	
		OTHER_CHARGES 	=ISNULL( ROUND(( CASE WHEN GTOT.GROSS_TOTAL<>0 THEN (ISNULL(C.OTHER_CHARGES_TAXABLE_VALUE,0)/GTOT.GROSS_TOTAL)*B.PURCHASE_PRICE ELSE 0 END ),2),0),  	
		ROUND_OFF		=isnull( (CASE WHEN GTOT.GROSS_TOTAL<>0 THEN (C.ROUND_OFF/GTOT.GROSS_TOTAL)*B.PURCHASE_PRICE ELSE 0 END ),0),
		EXCISE_DUTY_AMOUNT=	ROUND(( CASE WHEN GTOT.GROSS_TOTAL<>0 AND '+@CEXCISEFILTER+' THEN (C.EXCISE_DUTY_AMOUNT/GTOT.GROSS_TAXABLE_PUR)*B.PURCHASE_PRICE 
		ELSE 0 END ),2)	  ,
		Gst_Cess_amount 		= (CASE WHEN B.'+@CQTYCOL+'<>0 THEN ROUND(B.Gst_Cess_amount/B.'+@CQTYCOL+',2) else 0 end ),
		CustomdutyAmt 		= (CASE WHEN B.'+@CQTYCOL+'<>0 THEN ROUND(B.Forex_CustomdutyAmt/B.'+@CQTYCOL+',2) else 0 end )
	FROM '+@CDETAILTABLE+' B  (nolock)
	JOIN '+@CMASTERTABLE+' C (nolock) ON B.'+@CMEMOIDCOL+' = C.'+@CMEMOIDCOL+'
	JOIN 
	( 	
		SELECT 	'+@CMEMOIDCOL+' AS MEMO_ID, SUM('+(CASE WHEN @NMODE=1 THEN ' INVOICE_QUANTITY' ELSE 'QUANTITY' END)+'*PURCHASE_PRICE) AS GROSS_TOTAL,
		SUM(CASE WHEN '+@CEXCISEFILTER+' THEN '+(CASE WHEN @NMODE=1 THEN ' INVOICE_QUANTITY' ELSE 'QUANTITY' END)+'*PURCHASE_PRICE ELSE 0 END) AS GROSS_TAXABLE_PUR 	
		FROM '+@CDETAILTABLE+' B (NOLOCK)
		WHERE '+@CMEMOIDCOL+' = '''+@nSpid+'''
		GROUP BY '+@CMEMOIDCOL+'  
	) GTOT 
	ON B.'+@CMEMOIDCOL+' = GTOT.MEMO_ID
	WHERE B.'+@CMEMOIDCOL+' = '''+@nSpId+'''
	AND B.'+@CQTYCOL+'<>0
	)
	
	Update a set  DISCOUNT_AMOUNT	= b.DISCOUNT_AMOUNT,  	
		TAX_AMOUNT 		= b.TAX_AMOUNT,  	
		FREIGHT			=b.FREIGHT ,  	
		OTHER_CHARGES 	=b.OTHER_CHARGES,  	
		ROUND_OFF		=b.ROUND_OFF,
		EXCISE_DUTY_AMOUNT=	b.EXCISE_DUTY_AMOUNT ,
		Gst_Cess_amount = b.Gst_Cess_amount,
		CustomdutyAmt =b.CustomdutyAmt
	FROM SKU_OH A
	join cte_skuoh b on a.product_code =b.product_code 
	where ( isnull(a.DISCOUNT_AMOUNT,0)<> isnull(b.DISCOUNT_AMOUNT,0) or 
		    isnull(a.TAX_AMOUNT,0) 	<> isnull(b.TAX_AMOUNT, 0) or 
			isnull(a.FREIGHT,0)	<>isnull(b.FREIGHT ,0) or  	
			isnull(a.OTHER_CHARGES,0) <>isnull(b.OTHER_CHARGES,0) or  	
			isnull(a.ROUND_OFF,0)	<>isnull(b.ROUND_OFF,0) or 
			isnull(a.EXCISE_DUTY_AMOUNT,0)<>	isnull(b.EXCISE_DUTY_AMOUNT ,0) or 
			isnull(a.Gst_Cess_amount,0) <> isnull(b.Gst_Cess_amount,0) or 
			isnull(a.CustomdutyAmt,0) <>isnull(b.Gst_Cess_amount,0)
			)
	' 
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD

	SET @NSTEP = 287.5	-- SETTTING UP ENVIRONMENT
	EXEC SP_CHKXNSAVELOG 'PUR',@NStep,1,@nSpId,'',1	 	

	DECLARE @CFREIGHT_ADD_IN_PP VARCHAR(5)
	SELECT @CFREIGHT_ADD_IN_PP=value  FROM CONFIG (NOLOCK) WHERE config_option ='FREIGHT_ADD_IN_PP'
	

	--- We have to re-update these columns as gst is calculated only afgter bar code generation
	;with cte as
	(
	select b.product_code, purchase_price=(CASE WHEN B.INVOICE_QUANTITY =0 THEN 0 ELSE b.xn_value_without_gst/B.INVOICE_QUANTITY END)+
	 (CASE WHEN ISNULL(@CFREIGHT_ADD_IN_PP,'')='1' THEN ISNULL(SKU_OH .FREIGHT,0) ELSE 0 END )
	 +isnull(sku_oh.excise_duty_amount,0),
	 gst_percentage=b.gst_percentage,
	hsn_code=(B.HSN_CODE)
	FROM pur_pid01106_upload b (NOLOCK) 
	LEFT JOIN  SKU_OH (NOLOCK) ON SKU_OH.PRODUCT_CODE=B.PRODUCT_CODE
	WHERE sp_id=@nSpId	AND ISNULL(b.product_code,'')<>''
	)

	select a.product_code, PURCHASE_PRICE=a.PURCHASE_PRICE , 
	HSN_CODE=(CASE WHEN ISNULL(A.HSN_CODE,'') NOT IN('','0000000000') THEN A.HSN_CODE ELSE B.HSN_CODE END),
	GST_PERCENTAGE=a.GST_PERCENTAGE
	into #TMPSKUPP
	FROM CTE A
	JOIN SKU B ON A.PRODUCT_CODE =B.PRODUCT_CODE 
	WHERE (A.PURCHASE_PRICE<>ISNULL(B.PURCHASE_PRICE,0) 
	       OR ISNULL(A.GST_PERCENTAGE,0)<>ISNULL(B.GST_PERCENTAGE,0) 
		   OR (ISNULL(A.HSN_CODE,'')<> ISNULL(b.HSN_CODE,'') AND ISNULL(A.HSN_CODE,'') NOT IN('','0000000000')) 
		   )



	SET @NSTEP = 287.6	-- SETTTING UP ENVIRONMENT
	EXEC SP_CHKXNSAVELOG 'PUR',@NStep,1,@nSpId,'',1	 	
	PRINT 'UPDSKUOH-2'
	DECLARE @NTOTALSKUOHAMT NUMERIC(14,5),@NTOTALPURAMT NUMERIC(14,2),@CPRODUCTCODE VARCHAR(50),
	@NRO NUMERIC(12,5),@NQTY NUMERIC(10,3)
	
	IF @NMODE IN (1,3)
		SELECT @NMATERIALCOST=SUM(MATERIAL_COST) FROM PUR_PID01106_UPLOAD (NOLOCK) WHERE sp_ID=@nSpId
	

	SET @NSTEP = 287.7	-- SETTTING UP ENVIRONMENT
	EXEC SP_CHKXNSAVELOG 'PUR',@NStep,1,@nSpId,'',1	 	
		SELECT a.product_code,a.product_code as Org_product_code
			 INTO #tDiffPc 
		FROM SKU A (NOLOCK)
		JOIN PUR_pid01106_UPLOAD B (nolock) ON A.PRODUCT_CODE = B.PRODUCT_CODE
		JOIN PUR_pim01106_UPLOAD C (nolock) ON B.sp_ID = C.sp_ID  
		LEFT OUTER JOIN SKU_OH D (nolock) ON A.PRODUCT_CODE = D.PRODUCT_CODE
		WHERE B.sp_ID = @nSpId and isnull(a.product_code,'')<>'' 
		AND (a.article_code<>b.article_code OR a.para1_code<>b.para1_code
		OR a.para2_code<>b.para2_code OR a.para3_code<>b.para3_code OR a.para4_code<>b.para4_code
		OR a.para5_code<>b.para5_code OR a.para6_code<>b.para6_code OR a.ac_code<>c.ac_code
		OR a.para1_code<>b.para1_code OR a.inv_no<>c.bill_no OR a.challan_no<>c.inv_no OR a.inv_dt<>c.inv_dt
		OR a.receipt_dt<>c.receipt_dt 
		OR	a.EMP_CODE<>C.EMP_CODE OR a.ER_FLAG<>C.MEMO_TYPE
		OR a.FIX_MRP<>B.FIX_MRP OR a.BATCH_NO<>B.BATCH_NO 
		OR isnull(a.VENDOR_EAN_NO,'')<>B.VENDOR_EAN_NO 
		OR a.EXPIRY_DT <>B.EXPIRY_DT OR a.mrp<>b.mrp OR a.ws_price<>b.wholesale_price or b.gross_purchase_price<>a.basic_purchase_price 
		or isnull(a.SHIPPING_FROM_AC_CODE,'')<>isnull(c.SHIPPING_FROM_AC_CODE,'') 
		or isnull(a.Pur_Broker_Ac_code ,'')<>isnull(c.BROKER_AC_CODE ,'') 
		) 
		
		--those barcode which is pp and hsn code are diff from sku
		INSERT INTO #TDIFFPC(PRODUCT_CODE,ORG_PRODUCT_CODE)
		SELECT A.PRODUCT_CODE  ,A.PRODUCT_CODE 
		FROM #TMPSKUPP A
		LEFT JOIN #TDIFFPC B ON A.PRODUCT_CODE =B.PRODUCT_CODE 
		WHERE B.PRODUCT_CODE IS NULL
		
		
		-- as Per discuss with sir overwrite base barcode for nagarmal (12042023)
	    INSERT INTO #TDIFFPC(PRODUCT_CODE,Org_product_code )
		SELECT LEFT(A.PRODUCT_CODE, CHARINDEX('@', A.PRODUCT_CODE)-1) AS PRODUCT_CODE,a.product_code as Org_product_code
		FROM PUR_PID01106_UPLOAD A (NOLOCK)  
		WHERE A.SP_ID = @NSPID AND ISNULL(A.PRODUCT_CODE,'')<>''   
		AND CHARINDEX('@',A.PRODUCT_CODE)>0   
		GROUP BY LEFT(A.PRODUCT_CODE, CHARINDEX('@', A.PRODUCT_CODE)-1) ,a.product_code  
			    
	
		---end of changes 
		
	if @nUpdateMode=1 AND @bCalledfromEkaya=0 and not exists (select top 1 'u' from #tDiffPc) --- Special case of ekaya where purchase add is called fom Custom Procedure
		GOTO END_PROC
		
		
		SELECT tmp.product_code, ARTICLE_CODE = B.ARTICLE_CODE,  	
			PARA1_CODE = B.PARA1_CODE,  	
			PARA2_CODE = B.PARA2_CODE,  	
			PARA3_CODE = B.PARA3_CODE,  	
			PARA4_CODE = B.PARA4_CODE,  	
			PARA5_CODE = B.PARA5_CODE,  	
			PARA6_CODE = B.PARA6_CODE,  	
			AC_CODE		= C.AC_CODE, 	
			INV_NO		= C.BILL_NO, 
			INV_DT		= C.INV_DT,
			RECEIPT_DT	= C.RECEIPT_DT, 
			CHALLAN_NO=c.INV_NO,
			EMP_CODE= C.EMP_CODE,
			ER_FLAG=C.MEMO_TYPE,
			FIX_MRP=B.FIX_MRP,
			BATCH_NO =B.BATCH_NO ,
			EXPIRY_DT =B.EXPIRY_DT ,
			MRP=B.MRP,
			WS_PRICE=B.WHOLESALE_PRICE,
			BASIC_PURCHASE_PRICE =B.GROSS_PURCHASE_PRICE ,
			SHIPPING_FROM_AC_CODE=C.SHIPPING_FROM_AC_CODE,
			VENDOR_EAN_NO =B.VENDOR_EAN_NO ,c.bill_challan_mode ,
			b.FORM_ID,b.alternate_uom_code,
			b.alt_uom_conversion_factor,
			c.Broker_Ac_code,
			c.mrr_no 
			into #tmppid
         FROM  PUR_PID01106_UPLOAD B (NOLOCK) 
		 JOIN PUR_PIM01106_UPLOAD C (NOLOCK) ON B.SP_ID = C.SP_ID  
		 join #TDIFFPC tmp on b.product_code =tmp.Org_product_code 
		 WHERE B.sp_ID = @nSpId 
   
		--at the time challan saving of bill challan no going blank in pim so challan no update only in case of challan
	-- UPDATING MASTER INFORMATION AND OTHER DETAILS IN SKU TABLE
	IF @NMODE=1
	BEGIN
		DECLARE @cDiffPc VARCHAR(100)
		
		
		SET @NSTEP = 287.75	-- SETTTING UP ENVIRONMENT
		EXEC SP_CHKXNSAVELOG 'PUR',@NStep,1,@nSpId,'',1	 		
		UPDATE A  SET  	
			ARTICLE_CODE = B.ARTICLE_CODE,  	
			PARA1_CODE = B.PARA1_CODE,  	
			PARA2_CODE = B.PARA2_CODE,  	
			PARA3_CODE = B.PARA3_CODE,  	
			PARA4_CODE = B.PARA4_CODE,  	
			PARA5_CODE = B.PARA5_CODE,  	
			PARA6_CODE = B.PARA6_CODE,  	
			AC_CODE		= b.AC_CODE, 	
			CHALLAN_NO		=(CASE WHEN ISNULL(b.BILL_CHALLAN_MODE,0)=1 THEN  b.CHALLAN_NO  ELSE a.CHALLAN_NO END) , 
			INV_NO		= b.INV_NO, 
			INV_DT		= b.INV_DT,
			RECEIPT_DT	= b.RECEIPT_DT, 
			EMP_CODE= b.EMP_CODE,
			ER_FLAG=b.ER_FLAG,
			FIX_MRP=B.FIX_MRP,
			BATCH_NO =B.BATCH_NO ,
			EXPIRY_DT =B.EXPIRY_DT ,
			mrp=b.mrp,
			ws_price=b.ws_price,
			basic_purchase_price =b.basic_purchase_price ,
			SHIPPING_FROM_AC_CODE=b.SHIPPING_FROM_AC_CODE,
			VENDOR_EAN_NO =b.VENDOR_EAN_NO,
			PURCHASE_PRICE=isnull(c.PURCHASE_PRICE ,a.purchase_price), 
			HSN_CODE=isnull(c.HSN_CODE ,a.HSN_CODE),
			GST_PERCENTAGE=isnull(c.GST_PERCENTAGE ,a.GST_PERCENTAGE),
			Pur_Broker_Ac_code=b.Broker_Ac_code,
			pur_mrr_no =b.mrr_no 
		FROM SKU A WITH (ROWLOCK)
		JOIN #tmppid B (nolock) ON A.PRODUCT_CODE = B.PRODUCT_CODE
	    left join #TMPSKUPP c on a.product_code =c.product_code 
	END
	ELSE 
	IF @NMODE=3
		UPDATE A  SET  	
			ARTICLE_CODE = (CASE WHEN IR.PRODUCT_CODE IS NULL THEN B.ARTICLE_CODE ELSE A.ARTICLE_CODE END),  	
			PARA1_CODE = (CASE WHEN IR.PRODUCT_CODE IS NULL THEN B.PARA1_CODE ELSE A.PARA1_CODE END),  	
			PARA2_CODE = (CASE WHEN IR.PRODUCT_CODE IS NULL THEN B.PARA2_CODE ELSE A.PARA2_CODE END),  	
			PARA3_CODE = (CASE WHEN IR.PRODUCT_CODE IS NULL THEN B.PARA3_CODE ELSE A.PARA3_CODE END),  	
			PARA4_CODE = (CASE WHEN IR.PRODUCT_CODE IS NULL THEN B.PARA4_CODE ELSE A.PARA4_CODE END),  	  	
			PARA5_CODE = (CASE WHEN IR.PRODUCT_CODE IS NULL THEN B.PARA5_CODE ELSE A.PARA5_CODE END),  	
			PARA6_CODE = (CASE WHEN IR.PRODUCT_CODE IS NULL THEN B.PARA6_CODE ELSE A.PARA6_CODE END),  	
			MRP		   = (CASE WHEN IR.PRODUCT_CODE IS NULL THEN B.MRP ELSE A.MRP END),  		
			WS_PRICE   = (CASE WHEN IR.PRODUCT_CODE IS NULL THEN B.WS_PRICE 
							   ELSE A.WS_PRICE END),  		
			AC_CODE		= b.AC_CODE, 	
			FORM_ID		= B.FORM_ID,
			INV_NO		= b.INV_NO, 
			challan_NO		= (CASE WHEN ISNULL(b.BILL_CHALLAN_MODE,0)=1 THEN  b.CHALLAN_NO ELSE a.CHALLAN_NO END), 
			INV_DT		= b.INV_DT,  	
			RECEIPT_DT	= b.RECEIPT_DT, 
			EMP_CODE= b.EMP_CODE,
			ER_FLAG=b.ER_FLAG,
			PURCHASE_PRICE=isnull(c.PURCHASE_PRICE ,a.purchase_price), 
			HSN_CODE=isnull(c.HSN_CODE ,a.HSN_CODE),
			GST_PERCENTAGE=isnull(c.GST_PERCENTAGE ,a.GST_PERCENTAGE),
			FIX_MRP=B.FIX_MRP,
			BATCH_NO =B.BATCH_NO ,
			EXPIRY_DT =B.EXPIRY_DT ,
			basic_purchase_price =b.basic_purchase_price ,
			SHIPPING_FROM_AC_CODE=b.SHIPPING_FROM_AC_CODE,
			VENDOR_EAN_NO =b.VENDOR_EAN_NO,
			alternate_uom_code=b.alternate_uom_code,
			alt_uom_conversion_factor=b.alt_uom_conversion_factor,
			Pur_Broker_Ac_code=b.Broker_Ac_code,
			pur_mrr_no =b.mrr_no 
		FROM SKU A WITH (ROWLOCK)
		JOIN #tmppid B (nolock) ON A.PRODUCT_CODE = B.PRODUCT_CODE
	    left join #TMPSKUPP c on a.product_code =c.product_code 
		LEFT OUTER JOIN
		( 
			SELECT DISTINCT IRD.PRODUCT_CODE 
			FROM IRM01106 IRM (NOLOCK)
			JOIN IRD01106 IRD (NOLOCK) ON IRM.IRM_MEMO_ID=IRD.IRM_MEMO_ID
			JOIN PUR_pid01106_UPLOAD PID (nolock) ON IRD.PRODUCT_CODE=PID.PRODUCT_CODE
			WHERE PID.SP_ID = @NSpId and IRM.TYPE<>2 and isnull(new_product_code,'')=''
		)IR ON B.PRODUCT_CODE=IR.PRODUCT_CODE
	ELSE
		UPDATE A SET FORM_ID = B.FORM_ID, 	
		INV_NO		= C.BILL_NO, 
		challan_NO		=(CASE WHEN ISNULL(C.BILL_CHALLAN_MODE,0)=1 THEN  C.INV_NO ELSE CHALLAN_NO END), 
		INV_DT		= C.INV_DT,  	
		PURCHASE_PRICE = B.xn_value_without_gst/B.INVOICE_QUANTITY,
		HSN_CODE=CASE WHEN ISNULL(B.HSN_CODE,'') NOT IN('','0000000000') THEN B.HSN_CODE ELSE A.HSN_CODE END,
		GST_PERCENTAGE= B.GST_PERCENTAGE,
		BATCH_NO =B.BATCH_NO ,
		EXPIRY_DT =B.EXPIRY_DT 			
		FROM SKU A WITH (ROWLOCK)
		JOIN PUR_pid01106_UPLOAD B (NOLOCK) ON A.PRODUCT_CODE = B.PRODUCT_CODE
		JOIN pur_PIM01106_upload C (nolock) ON B.MRR_ID = C.MRR_ID
		LEFT OUTER JOIN SKU_OH D (NOLOCK) ON A.PRODUCT_CODE = D.PRODUCT_CODE
		WHERE B.sp_id = @nSpId

	SET @NSTEP = 287.8	-- SETTTING UP ENVIRONMENT
	EXEC SP_CHKXNSAVELOG 'PUR',@NStep,1,@nSpId,'',1	 	
	SET @CCMD=N'SELECT @NTOTALSKUOHAMT=SUM((C.PURCHASE_PRICE+
				A.TAX_AMOUNT+FREIGHT+OTHER_CHARGES+ROUND_OFF+A.EXCISE_DUTY_AMOUNT)*QUANTITY)
				FROM SKU_OH A (NOLOCK) JOIN '+@CDETAILTABLE+' B (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE
				JOIN SKU C WITH (NOLOCK)  ON C.PRODUCT_CODE=A.PRODUCT_CODE
				WHERE '+@CMEMOIDCOL+'='''+@nSpid+''''
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD,N'@NTOTALSKUOHAMT NUMERIC(10,2) OUTPUT',@NTOTALSKUOHAMT OUTPUT

	SET @NSTEP = 287.12	-- SETTTING UP ENVIRONMENT
	EXEC SP_CHKXNSAVELOG 'PUR',@NStep,1,@nSpId,'',1	 	
	PRINT 'UPDSKUOH-3'
	SET @CCMD=N'SELECT @NTOTALPURAMT=TOTAL_AMOUNT FROM '+@CMASTERTABLE+'  (NOLOCK) WHERE '+@CMEMOIDCOL+'='''+@nSpId+''''
	PRINT @CCMD
	EXEC SP_EXECUTESQL @CCMD,N'@NTOTALPURAMT NUMERIC(14,2) OUTPUT',@NTOTALPURAMT OUTPUT
	

	
	
	
	IF ABS(ISNULL(@NTOTALPURAMT,0)-ISNULL(@NTOTALSKUOHAMT,0))<1
	BEGIN
		SET @NSTEP = 287.14	-- SETTTING UP ENVIRONMENT
		EXEC SP_CHKXNSAVELOG 'PUR',@NStep,1,@nSpId,'',1	 		
		PRINT 'UPDSKUOH-4'
		SET @CCMD=N'SELECT TOP 1 @CPRODUCTCODE=A.PRODUCT_CODE,@NQTY=B.'+@CQTYCOL+'  FROM SKU_OH A  (NOLOCK)
					JOIN  '+@CDETAILTABLE+' B (nolock) ON A.PRODUCT_CODE=B.PRODUCT_CODE
					WHERE '+@CMEMOIDCOL+'= '''+@NspiD+''' AND PURCHASE_PRICE<>0 AND '+@CQTYCOL+'<>0'
		PRINT @CCMD
		EXEC SP_EXECUTESQL @CCMD,N'@CPRODUCTCODE VARCHAR(50) OUTPUT,@NQTY NUMERIC(10,3) OUTPUT',
		@CPRODUCTCODE OUTPUT,@NQTY OUTPUT
		
		SET @NSTEP = 287.16	-- SETTTING UP ENVIRONMENT
		EXEC SP_CHKXNSAVELOG 'PUR',@NStep,1,@nSpId,'',1	 	

		PRINT 'UPDSKUOH-5'
		UPDATE SKU_OH SET ROUND_OFF=isnull(ROUND_OFF+((@NTOTALPURAMT-@NTOTALSKUOHAMT)/@NQTY),0) WHERE PRODUCT_CODE=@CPRODUCTCODE
		
		SET @NSTEP = 287.18	-- SETTTING UP ENVIRONMENT
		EXEC SP_CHKXNSAVELOG 'PUR',@NStep,1,@nSpId,'',1	 	
	END
	
	
	END TRY
	
	BEGIN CATCH
		SET @CERRORMSG = 'PROCEDURE SAVETRAN_PUR_UPDSKU: STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
		-- SET @CRETCMD= N'SELECT '''+@CERRORMSG+''' AS ERRMSG, '''' AS MEMO_ID'
			
		GOTO END_PROC
	END CATCH
	
END_PROC:

END
--************************************************** END OF PROCEDURE SAVETRAN_PUR_UPDSKU
