create PROCEDURE SAVETRAN_GENBARCODES_PUR   
 @cManualPrefix VARCHAR(50),    
 @nPim_mode NUMERIC(1,0),
 @NSPID VARCHAR(40),
 @cLocId VARCHAR(4)='',    
 @nMode NUMERIC(1,0),
 @BTHROUGHIMPORT BIT,
 @nUpdateMode NUMERIC(1,0),
 @CERRORMSG VARCHAR(MAX) OUTPUT    
AS     
BEGIN    
	 -- @NMODE : SOURCE OF BARCODE GENERATION, 1- FROM PURCHASE, 2- FROM PO    
	 --PRINT 'ROHIT 1'    
	 -- THIS PROCEDURE ASSUMES THAT THE PID TABLE IS NORMALIZED FOR UNIQUE CODING    
	 -- IF IT IS NOT NORMALIZED THEN THE PROCESS WILL FAIL    
	     
BEGIN TRY    
	     
	 DECLARE @NROWS    BIGINT,    
	   @NEANROWS   BIGINT,    
	   @NFIXROWS   BIGINT,    
	   @NCTR    BIGINT,    
	   @CPIDROWID   VARCHAR(50),    
	   @CNEXTPRODUCTCODE VARCHAR(50),    
	   @NNEXTKEYVALUE  NUMERIC(30,0),    
	   @CPIMDEPTID   VARCHAR(5),  
	   @CBIN_ALIAS	VARCHAR(10),  
		@CCMD NVARCHAR(MAX),@CTEMPIRDTABLE VARCHAR(MAX),@NWHCOUNT INT,    
	   @CBARCODEPREFIX VARCHAR(100),@CADDPREFIX VARCHAR(50),@DMEMODT DATETIME,    
	   @CPREFIXYEARCODE BIT,@CPREFIXLOCID BIT,@CYEARCODE CHAR(2),@CADDLOCIDPREFIX CHAR(2),    
	   @CTEMPIRMTABLE VARCHAR(500),@CCUSTOMPREFIX VARCHAR(50),@BLOOP BIT,@NPURLOCCNT INT,    
	   @NBARCODELEN INT,@CARTICLENO VARCHAR(300),@CARTPREFIX VARCHAR(50),    
	   @BGENEANCODES BIT,@CGENEANCODES VARCHAR(5),    
	   @CEANPREFIX VARCHAR(10),@NEANLENGTH INT,@CEANLENGTH VARCHAR(5),@CPREFIXFLOORID VARCHAR(10),  
	   @CADDFLOORIDPREFIX VARCHAR(10),@BBARCODEGENERATED BIT,@bOnlyInsBarCodes BIT,
	   @CPREFIXMONTHCODE VARCHAR(10),@MONTHCODE VARCHAR(2),
	   @CREATE_MANUAL_BARCODE BIT,@cMultipleFc VARCHAR(2),@cSTEP VARCHAR(10)
	  
	  set @cStep=10
	     print 'enter genbarcodes_pur-1'     
	 SELECT @CYEARCODE='',@CADDLOCIDPREFIX='',@CERRORMSG=''    
	 
	 IF NOT EXISTS (SELECT TOP 1 product_code FROM pur_pid01106_upload (nolock) where sp_id=@nSpId AND isnull(product_code,'')='')
	 BEGIN
		 DECLARE @cFixArt varchar(20)
	
	    
		SET @cCmd=N'SELECT TOP 1 @cFixArt=a.article_code from PUR_pid01106_UPLOAD a (NOLOCK)
		left join sku (nolock) on a.product_code =sku.product_code 
		JOIN article b (NOLOCK) ON a.article_code=b.article_code '+
		(CASE WHEN @nUpdateMode=2 THEN ' LEFT OUTER JOIN #tmppI c ON c.row_id=a.row_id ' ELSE '' END)+'
		WHERE a.sp_id='''+@nSpId+''' and ISNULL(SKU.BARCODE_CODING_SCHEME,B.CODING_SCHEME)=1  '+
		(case WHEN @nUpdatemode=2 THEN ' AND c.row_id IS NULL ' ELSE '' END)

		EXEC SP_EXECUTESQL @cCmd , N'@cFixArt VARCHAR(20) OUTPUT',@cFixArt OUTPUT

		IF ISNULL(@cFixArt,'')=''
		BEGIN
			IF @nPim_mode IN (2,3,6) OR @BTHROUGHIMPORT=1 
				GOTO lblInsSkuOh
				
			RETURN
		END
     END

	 set @cstep=20
     SELECT TOP 1 @CREATE_MANUAL_BARCODE= VALUE FROM CONFIG (NOLOCK) WHERE CONFIG_OPTION='CREATE_MANUAL_BARCODE' 
     SET @CREATE_MANUAL_BARCODE=ISNULL(@CREATE_MANUAL_BARCODE,0) 
	 
	 IF ISNULL(@CREATE_MANUAL_BARCODE,'')='1'
		goto ins_SKU

	 SET @cSTEP=170.2
	 EXEC SP_CHKXNSAVELOG 'PUR',@cSTEP,0,@NSPID,'',1


	 SET @cSTEP=170.4
	 EXEC SP_CHKXNSAVELOG 'PUR',@cSTEP,0,@NSPID,'',1	
	 IF OBJECT_ID('TEMPDB..#BARCODES','U') IS NOT NULL    
		DROP TABLE #BARCODES    

     IF OBJECT_ID('TEMPDB..#BARCODES_ART','U') IS NOT NULL    
		DROP TABLE #BARCODES_ART
		
	 DELETE FROM GENBARCODE_ROWS WITH  (ROWLOCK) WHERE sp_id=@nSpId

	 SET @cSTEP=170.6
	 EXEC SP_CHKXNSAVELOG 'PUR',@cSTEP,0,@NSPID,'',1

	 SELECT A.ROW_ID AS PID_ROW_ID,A.PRODUCT_CODE,CAST(0 AS NUMERIC(9,0)) AS SRNO,convert(varchar(25),'') as genbc_prefix INTO #BARCODES FROM PID01106 A (NOLOCK) WHERE 1=2    

	 select SRNO ,PID_ROW_ID,PRODUCT_CODe into #BARCODES_art from #BARCODES

	 SET @NROWS = 0    
	 SET @NFIXROWS = 0    
	 SET @NEANROWS = 0    
	     
	 SET @cSTEP=171
	 EXEC SP_CHKXNSAVELOG 'PUR',@cSTEP,0,@NSPID,'',1
	     
	
		 SELECT @CLOCID = @cLocId     

	 SET @cSTEP=171.2
	 EXEC SP_CHKXNSAVELOG 'PUR',@cSTEP,0,@NSPID,'',1

	
	IF ISNULL(@CLOCID,'')=''
	 BEGIN
		SET @CERRORMSG ='5 LOCATION ID CAN NOT BE BLANK  '  
		GOTO END_PROC    
	 END        

	SELECT @CPIMDEPTID = DEPT_ID,@DMEMODT=receipt_DT,@DMEMODT=mrr_dt,
	@CBIN_ALIAS=isnull(b.bin_alias,'') FROM pur_PiM01106_upload a (nolock)
	LEFT OUTER JOIN BIN B ON B.BIN_ID=A.BIN_ID
	WHERE SP_ID = @nSpId
   	
	IF ISNULL(@CPIMDEPTID,'') = ''    
		GOTO END_PROC    
	 

	 exec SAVETRAN_GENBARCODES_COMMONSTEPS
	   @cXnType='PUR',
	   @NmODE=1,
	 @nSpId=@nSpId,
	@cManualPrefix=@cManualPrefix,
	@cLocId=@cLocId,
	@CBIN_ALIAS=@CBIN_ALIAS,
	@dMemoDt=@DMEMODT,
	@cErrormsg =@cErrormsg OUTPUT

	if isnull(@cErrormsg,'')<>''
		GOTO END_PROC

	
		
	    
	 	
	DECLARE @dLastUpdate DATETIME
	SELECT @dLastUpdate=getdate()

INS_SKU:

         SELECT PRODUCT_CODE ,PARA7_CODE , PARA7_NAME=CAST('' AS VARCHAR(100))
           INTO #TMPPARA7_DET
		  FROM SKU (NOLOCK)
		  WHERE 1=2

   IF EXISTS (SELECT TOP 1 'U' FROM INV_SKU_COL_LIST A  (NOLOCK) WHERE FOR_SKU=1 )  
   BEGIN  
        
       EXEC SP3S_INSERT_PARA7   
      @CXNTYPE='PUR',  
      @CSP_ID=@NSPID,  
      @CLOCID=@cLocId,  
      @CERRORMSG=@CERRORMSG OUTPUT   
  
       IF ISNULL(@CERRORMSG,'')<>''  
           GOTO END_PROC  
  
   END  



	   declare @nCompayFreight numeric(14,2),@GROSS_TOTAL numeric(14,2)
		
		DECLARE @CFREIGHT_ADD_IN_PP VARCHAR(5)
	    SELECT @CFREIGHT_ADD_IN_PP=value  FROM CONFIG (NOLOCK) WHERE config_option ='FREIGHT_ADD_IN_PP'
	    
	    
	    SELECT 	 @GROSS_TOTAL=SUM( INVOICE_QUANTITY*PURCHASE_PRICE)  
		FROM pur_PID01106_upload B (NOLOCK)
		WHERE sp_ID = @nSpId
		
	
	 SET @cSTEP=171.5
	 EXEC SP_CHKXNSAVELOG 'PUR',@cSTEP,0,@NSPID,'',1

	IF EXISTS (SELECT TOP 1 a.mrr_id FROM pur_pid01106_upload a (NOLOCK) JOIN article b (NOLOCK) ON a.ARTICLE_CODE=b.article_code
			WHERE a.sp_id=@nSpId AND ISNULL(b.alternate_uom_applicable,0)=1 AND ISNULL(a.alternate_uom_code,'')='')
		UPDATE a WITH (ROWLOCK) SET  alternate_uom_code=b.alternate_uom_code,alt_uom_conversion_factor=b.alt_uom_conversion_factor
		FROM pur_pid01106_upload a  JOIN article b (NOLOCK) ON a.ARTICLE_CODE=b.article_code
		WHERE a.sp_id=@nSpId AND ISNULL(b.alternate_uom_applicable,0)=1 AND ISNULL(a.alternate_uom_code,'')=''

	 SET @cSTEP=171.6
	 EXEC SP_CHKXNSAVELOG 'PUR',@cSTEP,0,@NSPID,'',1
	 
	 if ISNULL(@CFREIGHT_ADD_IN_PP,'')<>'1'
	 begin

		INSERT SKU (PRODUCT_CODE, ARTICLE_CODE, PARA1_CODE, PARA2_CODE, PARA3_CODE,PARA4_CODE, PARA5_CODE, PARA6_CODE
		,PURCHASE_PRICE, MRP, LAST_UPDATE,challan_no,INV_NO,INV_DT, RECEIPT_DT, AC_CODE,emp_code
		,FORM_ID,WS_PRICE,BARCODE_CODING_SCHEME,PRODUCT_NAME,HSN_CODE,FIX_MRP,EXPIRY_DT ,BATCH_NO,er_flag,
		BASIC_PURCHASE_PRICE,vendor_ean_no,online_product_code ,SHIPPING_FROM_AC_CODE,gst_percentage,alternate_uom_code,alt_uom_conversion_factor,
		purchaseLocId,pur_mrr_no,para7_code,Pur_Broker_Ac_code )    
		SELECT DISTINCT a.PRODUCT_CODE, a.ARTICLE_CODE, a.PARA1_CODE, a.PARA2_CODE, a.PARA3_CODE,a.PARA4_CODE, a.PARA5_CODE, a.PARA6_CODE,
		purchase_price=(a.xn_value_without_gst/a.INVOICE_QUANTITY), 
		a.MRP,@dLastUpdate as LAST_UPDATE,b.inv_no as challan_no, b.bill_no as INV_NO,b.INV_DT,b.RECEIPT_DT,
		b.AC_CODE,b.emp_code,'0000000' as FORM_ID,a.wholesale_price as WS_PRICE,
		case when isnull(d.CODING_SCHEME,0)=0 then  c.CODING_SCHEME else d.CODING_SCHEME end as CODING_SCHEME ,
		C.ARTICLE_NAME  as PRODUCT_NAME,
		 CASE WHEN ISNULL(A.HSN_CODE,'')='' THEN C.HSN_CODE ELSE  A.HSN_CODE END ,a.Fix_mrp ,a.expiry_dt ,
		 a.BATCH_NO,B.MEMO_TYPE,a.GROSS_PURCHASE_PRICE,a.vendor_ean_no,a.online_product_code,b.SHIPPING_FROM_AC_CODE,
		 a.gst_percentage,a.alternate_uom_code,a.alt_uom_conversion_factor,B.DEPT_ID AS purchaseLocId,b.mrr_no,p7.para7_code,b.BROKER_AC_CODE   
		FROM pur_pid01106_upload A (NOLOCK)   
		JOIN pur_pim01106_upload B (NOLOCK) ON A.SP_ID = B.SP_ID    
		JOIN ARTICLE C (NOLOCK) ON A.ARTICLE_CODE = C.ARTICLE_CODE    
		JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=C.SUB_SECTION_CODE
		JOIN (SELECT DISTINCT pid_row_id,isnull(CODING_SCHEME,0) as CODING_SCHEME FROM GENBARCODE_ROWS (NOLOCK) WHERE sp_id=@nSpId) d ON d.PID_ROW_ID=a.row_id
		LEFT JOIN #TMPPARA7_DET P7 ON P7.PRODUCT_CODE =A.PRODUCT_CODE 
		WHERE B.SP_ID = @nSpId  AND ISNULL(A.PRODUCT_CODE,'')<>''  
    
    end 
    else
    begin
    
    
		 SELECT @NCOMPAYFREIGHT=b.total_amount  FROM PUR_PARCEL_DET_UPLOAD A (NOLOCK) 
		 JOIN PARCEL_MST B (NOLOCK) ON A.PARCEL_MEMO_ID =B.PARCEL_MEMO_ID 
		 WHERE SP_ID=@NSPID  and pay_type =1
		 
		
		
        INSERT SKU (PRODUCT_CODE, ARTICLE_CODE, PARA1_CODE, PARA2_CODE, PARA3_CODE,PARA4_CODE, PARA5_CODE, PARA6_CODE
		,PURCHASE_PRICE, MRP, LAST_UPDATE,challan_no,INV_NO,INV_DT, RECEIPT_DT, AC_CODE,emp_code
		,FORM_ID,WS_PRICE,BARCODE_CODING_SCHEME,PRODUCT_NAME,HSN_CODE,FIX_MRP,EXPIRY_DT ,BATCH_NO,er_flag,
		BASIC_PURCHASE_PRICE,vendor_ean_no,online_product_code ,SHIPPING_FROM_AC_CODE,gst_percentage,alternate_uom_code,alt_uom_conversion_factor,
		purchaseLocId,pur_mrr_no,para7_code,Pur_Broker_Ac_code )    
		SELECT DISTINCT a.PRODUCT_CODE, a.ARTICLE_CODE, a.PARA1_CODE, a.PARA2_CODE, a.PARA3_CODE,a.PARA4_CODE, a.PARA5_CODE, a.PARA6_CODE,
		
		purchase_price=(a.xn_value_without_gst/a.INVOICE_QUANTITY)+
		 (CASE WHEN ISNULL(@CFREIGHT_ADD_IN_PP,'')='1' THEN ISNULL(ROUND(( ( (ISNULL(@nCompayFreight,0)+ISNULL(b.FREIGHT_TAXABLE_VALUE,0))/@GROSS_TOTAL )*a.PURCHASE_PRICE),2),0)   ELSE 0 END ), 
		 
		a.MRP,@dLastUpdate as LAST_UPDATE,b.inv_no as challan_no, b.bill_no as INV_NO,b.INV_DT,b.RECEIPT_DT,
		b.AC_CODE,b.emp_code,'0000000' as FORM_ID,a.wholesale_price as WS_PRICE,
		case when isnull(d.CODING_SCHEME,0)=0 then  c.CODING_SCHEME else d.CODING_SCHEME end as CODING_SCHEME ,
		C.ARTICLE_NAME  as PRODUCT_NAME,
		 CASE WHEN ISNULL(A.HSN_CODE,'')='' THEN C.HSN_CODE ELSE  A.HSN_CODE END ,a.Fix_mrp ,a.expiry_dt ,
		 a.BATCH_NO,B.MEMO_TYPE,a.GROSS_PURCHASE_PRICE,a.vendor_ean_no,a.online_product_code,b.SHIPPING_FROM_AC_CODE,
		 a.gst_percentage,a.alternate_uom_code,a.alt_uom_conversion_factor,B.DEPT_ID AS purchaseLocId,b.mrr_no ,p7.para7_code ,b.BROKER_AC_CODE   
		FROM pur_pid01106_upload A (NOLOCK)   
		JOIN pur_pim01106_upload B (NOLOCK) ON A.SP_ID = B.SP_ID    
		JOIN ARTICLE C (NOLOCK) ON A.ARTICLE_CODE = C.ARTICLE_CODE    
		JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=C.SUB_SECTION_CODE
		JOIN (SELECT DISTINCT pid_row_id,isnull(CODING_SCHEME,0) as CODING_SCHEME FROM GENBARCODE_ROWS (NOLOCK) WHERE sp_id=@nSpId) d ON d.PID_ROW_ID=a.row_id
		LEFT JOIN #TMPPARA7_DET P7 ON P7.PRODUCT_CODE =A.PRODUCT_CODE 
		WHERE B.SP_ID = @nSpId  AND ISNULL(A.PRODUCT_CODE,'')<>''  
    
    end
	
	if exists (select top 1 'U' from #TMPPARA7_DET)
	begin
		
		UPDATE B SET para7_name  =A.para7_name  
		FROM #TMPPARA7_DET A  
		JOIN sku_names  B WITH (NOLOCK) ON A.PRODUCT_CODE=B.PRODUCT_CODE  
		
	end

lblInsSkuOh:
	IF @nPim_mode IN (1,2,3,6) OR @BTHROUGHIMPORT=1
		insert GENBARCODE_ROWS (pid_row_id,sp_id)
		SELECT row_id ,a.sp_id FROM PUR_pid01106_UPLOAD a (NOLOCK) 
		LEFT OUTER JOIN GENBARCODE_ROWS b (NOLOCK) ON a.row_id=b.PID_ROW_ID AND b.sp_id=a.SP_ID
		WHERE a.sp_id=@NSPID AND b.sp_id IS NULL
		
	;WITH CTE_SKUOH AS 
	(	
	SELECT B.PRODUCT_CODE,
		DISCOUNT_AMOUNT	= ROUND((( B.PURCHASE_PRICE*C.DISCOUNT_PERCENTAGE/100 )+ (ISNULL(B.DISCOUNT_AMOUNT,0)/B.INVOICE_QUANTITY)),2),  	
		TAX_AMOUNT 		= (ROUND(B.TAX_AMOUNT/B.INVOICE_QUANTITY,2)+
		ROUND((ISNULL(B.IGST_AMOUNT,0)+ISNULL(B.CGST_AMOUNT,0)+ISNULL(B.SGST_AMOUNT,0))/B.INVOICE_QUANTITY,2) 
		+ROUND(( ((ISNULL(C.OTHER_CHARGES_IGST_AMOUNT,0)+ISNULL(C.OTHER_CHARGES_CGST_AMOUNT,0)+ISNULL(C.OTHER_CHARGES_SGST_AMOUNT,0))/@GROSS_TOTAL)*B.PURCHASE_PRICE ),2)
		+CASE WHEN ISNULL(C.FRIGHT_PAY_MODE,0) IN (0,1) THEN  ROUND((((ISNULL(C.FREIGHT_IGST_AMOUNT,0)+ISNULL(C.FREIGHT_CGST_AMOUNT,0)+ISNULL(C.FREIGHT_SGST_AMOUNT,0))/@GROSS_TOTAL)*B.PURCHASE_PRICE ),2) ELSE 0 END
		),  	
		FREIGHT			= ISNULL(ROUND(( ( ( 0.00 +ISNULL(C.FREIGHT_TAXABLE_VALUE,0))/@GROSS_TOTAL)*B.PURCHASE_PRICE  ),2),0),  	
		OTHER_CHARGES 	=ISNULL( ROUND(( (ISNULL(C.OTHER_CHARGES_TAXABLE_VALUE,0)/@GROSS_TOTAL)*B.PURCHASE_PRICE  ),2),0),  	
		ROUND_OFF		=ISNULL( ((C.ROUND_OFF/@GROSS_TOTAL)*B.PURCHASE_PRICE ),0),	
		GST_CESS_AMOUNT 		= (ROUND(B.GST_CESS_AMOUNT/B.INVOICE_QUANTITY,2) ),
		CUSTOMDUTYAMT 		= (ROUND(B.FOREX_CUSTOMDUTYAMT/B.INVOICE_QUANTITY,2) )
	FROM PUR_PID01106_UPLOAD B  (NOLOCK)
	JOIN PUR_PIM01106_UPLOAD C (NOLOCK) ON B.SP_ID = C.SP_ID
	WHERE B.SP_ID = @NSPID
	AND  B.INVOICE_QUANTITY<>0 AND PRODUCT_CODE <>'' AND B.PURCHASE_PRICE <>0	
	)
		
	-- INSERTING RECORDS IN SKU_OH    
	INSERT SKU_OH ( PRODUCT_CODE, DISCOUNT_AMOUNT, TAX_AMOUNT, FREIGHT, OTHER_CHARGES, ROUND_OFF, VALUE_ADD,EXCISE_DUTY_AMOUNT )    
	SELECT DISTINCT A.PRODUCT_CODE, ISNULL(oh.DISCOUNT_AMOUNT ,0)  AS DISCOUNT_AMOUNT, ISNULL(oh.TAX_AMOUNT  ,0) AS TAX_AMOUNT, 
	ISNULL(oh.FREIGHT  ,0) AS FREIGHT, ISNULL(oh.OTHER_CHARGES  ,0) AS OTHER_CHARGES,     
	ISNULL(oh.ROUND_OFF  ,0) AS ROUND_OFF, 0 AS VALUE_ADD ,0 AS EXCISE_DUTY_AMOUNT   
	FROM pur_pid01106_upload A (NOLOCK) 
	left join CTE_SKUOH oh on a.product_code =oh.product_code 
	LEFT OUTER JOIN SKU_OH B (NOLOCK) ON A.PRODUCT_CODE = B.PRODUCT_CODE    
	JOIN (SELECT DISTINCT pid_row_id FROM GENBARCODE_ROWS (NOLOCK) WHERE sp_id=@nSpId
		   ) d ON d.PID_ROW_ID=a.row_id
	WHERE a.sp_id=@nSpId AND ISNULL(A.PRODUCT_CODE,'')<>''  AND  B.PRODUCT_CODE IS NULL   

	INSERT PMT01106 (PRODUCT_CODE,  QUANTITY_IN_STOCK, DEPT_ID,BIN_ID,LAST_UPDATE,bo_order_id )    
	SELECT DISTINCT A.PRODUCT_CODE,  0 AS QUANTITY_IN_STOCK,B.DEPT_ID AS DEPT_ID,A.BIN_ID, GETDATE() AS LAST_UPDATE  ,a.Order_id   
	FROM pur_pid01106_upload A     (NOLOCK)
	JOIN PUR_pim01106_UPLOAD b (NOLOCK) ON a.sp_id=b.sp_id
	JOIN (SELECT DISTINCT pid_row_id FROM GENBARCODE_ROWS (NOLOCK) WHERE sp_id=@nSpId) c ON c.PID_ROW_ID=a.row_id
	LEFT OUTER JOIN PMT01106 D ON A.PRODUCT_CODE = D.PRODUCT_CODE AND D.BIN_ID = B.BIN_ID    AND d.dept_id=b.dept_id 
	WHERE B.sp_id = @nSpId	AND D.PRODUCT_CODE IS NULL 	
	
END TRY     
     
BEGIN CATCH    
	
	
  SET @CERRORMSG = 'PROCEDURE SAVETRAN_GENBARCODES_Pur: STEP- ' + LTRIM(@cstep)  + ERROR_MESSAGE()    
  
  print 'enter catch of savetran_genbarcodes_pur'+@cErrormsg
END CATCH    
     
END_PROC:    
     
END 
