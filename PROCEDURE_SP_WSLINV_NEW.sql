CREATE PROCEDURE SP_WSLINV_NEW --(LocId 3 digit change by Sanjay:04-11-2024)

	@NQUERYID	NUMERIC (3,0) ,
	@CMEMOID	VARCHAR(40) = '',
	@CWHERE1	VARCHAR(500) = '',
	@NNAVMODE	NUMERIC(1,0) = 0,
	@CWHERE2	NVARCHAR(MAX)='',
	@DMEMODT DATETIME='',
	@CLOCID		VARCHAR(4)=''
----WITH ENCRYPTION
AS
BEGIN
  
DECLARE @CCMD NVARCHAR(MAX), @CCMD1 NVARCHAR(MAX)
DECLARE @CLOC_ID	VARCHAR(5)
DECLARE @CHO_ID		VARCHAR(5)
DECLARE @BCO_OWNED	BIT
DECLARE @BPUR_LOC	BIT
DECLARE @BPOS	BIT
DECLARE @CSENDPARA6 VARCHAR(10)
DECLARE @CHEADCODESTR VARCHAR(1000)
DECLARE @ENFORCE_PL_QTY VARCHAR(10)

SELECT @ENFORCE_PL_QTY=value  FROM CONFIG WHERE config_option ='ENFORCE_PL_QTY_DURING_INVOICING' 


SET @BPOS=1
SET @BCO_OWNED=0
SET @BPUR_LOC=0


IF @CLOCID =''
    SELECT @CLOC_ID=DEPT_ID FROM NEW_APP_LOGIN_INFO (nolock) WHERE SPID=@@SPID 
ELSE
    SELECT @CLOC_ID = @CLOCID

SELECT @CHO_ID=VALUE FROM CONFIG WHERE CONFIG_OPTION='HO_LOCATION_ID'

SELECT @BCO_OWNED=(CASE WHEN ISNULL(LOC_TYPE,0)=1 THEN 1 ELSE 0 END ) FROM LOCATION WHERE DEPT_ID=@CLOC_ID 

SELECT @BPUR_LOC=(CASE WHEN ISNULL(PUR_LOC,0)=1 THEN 1 ELSE 0 END ) FROM LOCATION WHERE DEPT_ID=@CLOC_ID

IF @CLOC_ID<>@CHO_ID
	SET @BPOS=0
	
IF @NQUERYID = 1
 GOTO LBLNAVIGATE

ELSE IF @NQUERYID = 2
 GOTO LBLGETMASTER

ELSE IF @NQUERYID = 3
 GOTO LBLGETDETAIL

ELSE IF @NQUERYID = 4
 GOTO LBLFORMS

ELSE IF @NQUERYID = 5
 GOTO LBLCUSTOMER

ELSE IF @NQUERYID = 6
 GOTO LBLSTOCKDETAILS

ELSE IF @NQUERYID = 7
 GOTO LBLSALESEMPLOYEE

ELSE IF @NQUERYID = 8
 GOTO LBLREPORTS

ELSE IF @NQUERYID = 9
 GOTO LBLPRODUCTCODELIST

ELSE IF @NQUERYID = 10
 GOTO LBLBOXLISTING

ELSE IF @NQUERYID = 11
 GOTO LBLITVDETAILS

ELSE IF @NQUERYID = 12
GOTO LBLPSMST

ELSE IF @NQUERYID = 13
GOTO LBLPSDET

ELSE IF @NQUERYID=14  
  GOTO LBLPAYMENTDETAILS  
 

ELSE IF @NQUERYID=16 
GOTO LBLARTICLELIST
  
ELSE IF @NQUERYID=17
GOTO LBLCOLORLIST

ELSE IF @NQUERYID=18
GOTO LBLSIZELIST

ELSE IF @NQUERYID=19
GOTO LBLPENDINGPICKLISTMST

ELSE IF @NQUERYID=20
GOTO LBLPENDINGPICKLISTDET

ELSE IF @NQUERYID=21
GOTO LBLINVDETAIL

ELSE IF @NQUERYID=22
	GOTO LBLPENDING_BUYER_ORDERS_MST

ELSE IF @NQUERYID=23
	GOTO LBLPENDINGDET_BUYER_ORDERS_DET

ELSE IF @NQUERYID=24
	GOTO LBLGETSHIPPINGADDRESS
	
ELSE IF @NQUERYID=25
	GOTO LBLCHKREPEATITEMSEND
ELSE
    GOTO LAST
  
LBLNAVIGATE:

	EXECUTE SP_NAVIGATE 'INM01106',@NNAVMODE,@CMEMOID,@CWHERE2,'INV_NO','INV_DT','INV_ID',@CWHERE1

GOTO LAST

LBLGETMASTER:
 
 	
	 IF OBJECT_ID('#TEMPDB..#TMPGPMEMO','U') IS NOT NULL
		DROP TABLE #TMPGPMEMO
	 
	 ;WITH CTE AS
	 (
	 SELECT B.INV_ID,A.MEMO_NO AS GP_ISSUE_NO ,A.MEMO_ID AS GP_ISSUE_ID,A.MEMO_DT ,
			ROW_NUMBER() OVER (PARTITION BY B.INV_ID ORDER BY A.LAST_UPDATE DESC) AS SR
	 FROM TBL_GP_ISSUE_MST A
	 JOIN   TBL_GP_ISSUE_DET B ON A.MEMO_ID=B.MEMO_ID
	 JOIN INM01106 INM ON INM.INV_ID=B.INV_ID 
	 WHERE A.CANCELLED =0 AND INM.INV_ID=@CMEMOID
	 )
	 SELECT * INTO #TMPGPMEMO FROM CTE WHERE SR=1
	--
	
	SELECT T1.*,T2.USERNAME,
	 T4.AC_NAME,T4.ADDRESS0,T4.ADDRESS1,T4.ADDRESS2,         
	 T4.AREA_NAME,T4.CITY,T4.[STATE],T4.PINCODE, T5.EMP_NAME,ISNULL(T6.DEPT_NAME,'') AS 

	DEPT_NAME        
	 ,ISNULL(DTM.DT_NAME,'') AS DT_NAME,ISNULL(T7.AC_NAME,'') AS BROKER_AC_NAME,  
	 CONVERT(NUMERIC(10,2), 0 )AS TAX_AMOUNT, BIN.BIN_NAME,CONVERT(NUMERIC(10,2), 0 )AS 

	TOTAL_CUSTOM_DUTY_AMOUNT, 
	 T4.INV_RATE_TYPE, T4.DISCOUNT_PERCENTAGE AS 

	 LEDGER_DISCOUNT_PERCENTAGE,T4.RESTRICT_PUR_ENTRY,
	 T4.DEFAULT_RATE_TYPE AS LEDGER_DEFAULT_RATE_TYPE ,ISNULL(T4.WSL_RATE_CALC_METHOD,1) AS WSL_RATE_CALC_METHOD         
	 ,T1.SHIPPING_AREA_NAME
	 ,T1.SHIPPING_CITY_NAME
	 ,T1.SHIPPING_STATE_NAME,ISNULL(T4.PURCHASE_AGAINST_TERMS,0) AS [PURCHASE_AGAINST_TERMS],
	 T.TERMS_NAME ,T4.E_MAIL,
	 ISNULL(GP.GP_ISSUE_NO,'') AS GP_ISSUE_NO,
	 ISNULL(GP.GP_ISSUE_ID,'') AS GP_ISSUE_ID,ST.GST_STATE_NAME AS PARTY_STATE_NAME,
	 CAST(0 AS INT) AS SP_ID
	 FROM INM01106 T1  (NOLOCK)       
	 LEFT OUTER JOIN USERS T2 (NOLOCK) ON T1.USER_CODE = T2.USER_CODE  
	 LEFT OUTER JOIN BIN (NOLOCK) ON BIN.BIN_ID=T1.TARGET_BIN_ID               
	 JOIN LMV01106 T4 (NOLOCK) ON T4.AC_CODE = T1.AC_CODE        
	 LEFT OUTER JOIN EMPLOYEE T5 (NOLOCK) ON T5.EMP_CODE = T1.EMP_CODE        
	 LEFT OUTER JOIN LOCATION T6 (NOLOCK) ON T6.DEPT_ID = T1.PARTY_DEPT_ID          
	 LEFT JOIN DTM (NOLOCK) ON DTM.DT_CODE = T1.DT_CODE 
	 LEFT OUTER JOIN LMV01106 T7 (NOLOCK) ON T7.AC_CODE = T1.BROKER_AC_CODE   
	 LEFT OUTER JOIN LEDGER_TERMS T ON T.TERMS_CODE=T1.TERMS_CODE  
	 LEFT OUTER JOIN #TMPGPMEMO GP ON GP.INV_ID=T1.INV_ID     
	 --LEFT JOIN AREA AR ON T1.SHIPPING_AREA_CODE=AR.AREA_CODE
	 --LEFT JOIN CITY CT ON CT.CITY_CODE=AR.CITY_CODE
	   LEFT OUTER JOIN GST_STATE_MST ST ON T1.PARTY_STATE_CODE=ST.GST_STATE_CODE
	 WHERE T1.INV_ID = @CMEMOID            
	
GOTO LAST

LBLGETDETAIL:

	SELECT T1.*,ROW_NUMBER() OVER (ORDER BY T1.BOX_NO,T1.PS_ID) AS S_NO,
	T1.PRODUCT_CODE, B.ARTICLE_CODE, B.ARTICLE_NO, B.ARTICLE_NAME, S.PARA1_CODE,  
	C.PARA1_NAME, S.PARA2_CODE, D.PARA2_NAME, S.PARA3_CODE, F.PARA3_NAME, E.UOM_NAME,    

	T1.DEPT_ID, S.BARCODE_CODING_SCHEME AS CODING_SCHEME, B.INACTIVE, 
	ISNULL(P.QUANTITY_IN_STOCK,0) AS QUANTITY_IN_STOCK,  
	S.PURCHASE_PRICE,  '' AS SCHEME_ID, SM.SECTION_NAME, SD.SUB_SECTION_NAME,  
	S.PARA4_CODE,S.PARA5_CODE,S.PARA6_CODE,  
	G.PARA4_NAME,H.PARA5_NAME,I.PARA6_NAME,E.UOM_CODE,ISNULL(E.UOM_TYPE,0) AS [UOM_TYPE],  
	B.DT_CREATED AS [ART_DT_CREATED],F.DT_CREATED AS [PARA3_DT_CREATED],S.DT_CREATED AS [SKU_DT_CREATED],  
	B.STOCK_NA,(T1.INVOICE_QUANTITY*T1.NET_RATE) AS AMOUNT, BIN.BIN_NAME,(T1.INVOICE_QUANTITY*T1.MRP) AS AMOUNT_MRP,    
    T1.INVOICE_QUANTITY  AS PREVQTY,S.FIX_MRP,
    (CASE WHEN S.BARCODE_CODING_SCHEME=1 THEN S.PRODUCT_NAME ELSE B.ARTICLE_NAME END) AS [PRODUCT_NAME]
    ,J.FORM_NAME,
	WPSM.PS_NO,WPSM.PS_DT ,EMP.EMP_NAME, EMP1.EMP_NAME AS EMP_NAME1,
	EMP2.EMP_NAME AS EMP_NAME2 ,B1.BIN_ID,B1.BIN_NAME 
	,ORDMST.ORDER_NO,ORDMST.ORDER_DT,OB.ARTICLE_NO AS ORDER_ARTICLE_NO,OSD.SUB_SECTION_NAME AS ORDER_SUB_SECTION_NAME,
	 OSM.SECTION_NAME AS ORDER_SECTION_NAME,OC.PARA1_NAME AS 

     ORDER_PARA1_NAME,OD.PARA2_NAME AS ORDER_PARA2_NAME,
	 OF3.PARA3_NAME AS ORDER_PARA3_NAME,OG.PARA4_NAME AS ORDER_PARA4_NAME,OH.PARA5_NAME 

     AS ORDER_PARA5_NAME,
	 OI.PARA6_NAME AS ORDER_PARA6_NAME,ISNULL(ORDDET.QUANTITY,0) AS 

ORDER_QUANTITY,REFORD.ORDER_ROW_ID,REFORD.WSL_ROW_ID,
	 ORDDET.GROSS_WSP AS ORDER_RATE,B.ALIAS AS 

ARTICLE_ALIAS,B.ARTICLE_NAME,OB.ARTICLE_NAME, RIGHT(T1.W8_CHALLAN_ID,10) AS CHALLAN_NO,
ISNULL(J.FORM_TYPE,1) AS FORM_TYPE,S.ONLINE_PRODUCT_CODE AS ONLINE_BAR_CODE,S.VENDOR_EAN_NO AS VENDOR_EAN_NO,
CAST(0 AS INT) AS SP_ID,
T1.PRODUCT_CODE AS ORG_PRODUCT_CODE, 
 CAST(CASE WHEN CHARINDEX('@',T1.PRODUCT_CODE)=0 THEN '' ELSE 
(SUBSTRING(T1.PRODUCT_CODE,CHARINDEX('@',T1.PRODUCT_CODE)+1,15)) END  AS VARCHAR(100)) AS BATCH_LOT_NO,
   S.BATCH_NO,S.EXPIRY_DT 
  ,AT1.attr1_key_name,AT2.attr2_key_name,AT3.attr3_key_name,AT4.attr4_key_name,AT5.attr5_key_name,AT6.attr6_key_name,
   AT7.attr7_key_name,AT8.attr8_key_name,AT9.attr9_key_name,AT10.attr10_key_name,AT11.attr11_key_name,AT12.attr12_key_name,
   AT13.attr13_key_name,AT14.attr14_key_name,AT15.attr15_key_name,AT16.attr16_key_name,AT17.attr17_key_name,AT18.attr18_key_name,
   AT19.attr19_key_name,AT20.attr20_key_name,AT21.attr21_key_name,AT22.attr22_key_name,AT23.attr23_key_name,AT24.attr24_key_name,
	AT25.attr25_key_name ,
	T1.picklist_article_code AS packslip_article_code,
   T1.picklist_PARA1_CODE AS packslip_para1_code,
    T1.picklist_PARA2_CODE AS packslip_para2_code
	FROM IND01106 T1 (NOLOCK)
	LEFT OUTER JOIN PMT01106 P (NOLOCK) ON T1.PRODUCT_CODE = P.PRODUCT_CODE AND 
    P.DEPT_ID=T1.DEPT_ID  AND P.BIN_ID=T1.BIN_ID
	JOIN SKU S (NOLOCK) ON S.PRODUCT_CODE = T1.PRODUCT_CODE   
	JOIN ARTICLE B (NOLOCK) ON S.ARTICLE_CODE = B.ARTICLE_CODE    
	JOIN SECTIOND SD (NOLOCK) ON B.SUB_SECTION_CODE = SD.SUB_SECTION_CODE  
	JOIN SECTIONM SM (NOLOCK) ON SD.SECTION_CODE = SM.SECTION_CODE  
	JOIN PARA1 C (NOLOCK) ON S.PARA1_CODE = C.PARA1_CODE    
	JOIN PARA2 D (NOLOCK) ON S.PARA2_CODE = D.PARA2_CODE    
	JOIN PARA3 F (NOLOCK) ON S.PARA3_CODE = F.PARA3_CODE    
	JOIN PARA4 G (NOLOCK) ON S.PARA4_CODE = G.PARA4_CODE    
	JOIN PARA5 H (NOLOCK) ON S.PARA5_CODE = H.PARA5_CODE    
	JOIN PARA6 I (NOLOCK) ON S.PARA6_CODE = I.PARA6_CODE    
	JOIN UOM   E (NOLOCK) ON B.UOM_CODE = E.UOM_CODE 
	JOIN FORM J (NOLOCK)ON T1.ITEM_FORM_ID= J.FORM_ID
	LEFT OUTER JOIN BIN (NOLOCK) ON BIN.BIN_ID=T1.BIN_ID 	
	LEFT OUTER JOIN WPS_MST WPSM (NOLOCK) ON T1.PS_ID= WPSM.PS_ID  
	LEFT OUTER JOIN EMPLOYEE EMP (NOLOCK) ON T1.EMP_CODE= EMP.EMP_CODE    
    LEFT OUTER JOIN EMPLOYEE EMP1 (NOLOCK) ON T1.EMP_CODE1= EMP1.EMP_CODE    
    LEFT OUTER JOIN EMPLOYEE EMP2 (NOLOCK) ON T1.EMP_CODE2= EMP2.EMP_CODE    
	JOIN BIN B1 ON B1.BIN_ID=ISNULL(T1.BIN_ID,'000')
	LEFT OUTER JOIN WSL_ORDER_REF REFORD (NOLOCK) ON REFORD.WSL_ROW_ID=T1.ROW_ID  
    LEFT OUTER JOIN WSL_ORDER_DET ORDDET (NOLOCK) ON ORDDET.ROW_ID=REFORD.ORDER_ROW_ID 
    LEFT OUTER JOIN WSL_ORDER_MST ORDMST (NOLOCK) ON ORDMST.ORDER_ID=ORDDET.ORDER_ID
    LEFT OUTER JOIN ARTICLE OB (NOLOCK) ON ORDDET.ARTICLE_CODE = OB.ARTICLE_CODE      
    LEFT OUTER JOIN SECTIOND OSD (NOLOCK) ON OB.SUB_SECTION_CODE = OSD.SUB_SECTION_CODE    
    LEFT OUTER JOIN SECTIONM OSM (NOLOCK) ON OSD.SECTION_CODE = OSM.SECTION_CODE    
    LEFT OUTER JOIN PARA1 OC (NOLOCK) ON ORDDET.PARA1_CODE = OC.PARA1_CODE      
    LEFT OUTER JOIN PARA2 OD (NOLOCK) ON ORDDET.PARA2_CODE = OD.PARA2_CODE      
    LEFT OUTER JOIN PARA3 OF3 (NOLOCK) ON ORDDET.PARA3_CODE = OF3.PARA3_CODE      
    LEFT OUTER JOIN PARA4 OG (NOLOCK) ON ORDDET.PARA4_CODE = OG.PARA4_CODE      
    LEFT OUTER JOIN PARA5 OH (NOLOCK) ON ORDDET.PARA5_CODE = OH.PARA5_CODE      
    LEFT OUTER JOIN PARA6 OI (NOLOCK) ON ORDDET.PARA6_CODE = OI.PARA6_CODE  
LEFT OUTER JOIN ARTICLE_FIX_ATTR ATTR  (NOLOCK) ON B.ARTICLE_CODE = ATTR.ARTICLE_CODE 
LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE
LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE
LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE
LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE
LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE
LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE
LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE
LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE
LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE
LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE
LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE
LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE
LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE
LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE
LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE
LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE
LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE
LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE
LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE
LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE
LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE
LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE
LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE
LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE
LEFT OUTER JOIN ATTR25_MST AT25(NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE	WHERE T1.INV_ID = @CMEMOID    
	ORDER BY AUTO_SRNO,T1.TS 
	
	GOTO LAST

LBLFORMS:

	IF(@CWHERE1 = '1')
		SELECT * FROM FORM (NOLOCK) WHERE FORM_ID <> '0000000' AND 

EXCISE_ACCESSIBLE_PERCENTAGE > 0
		AND INACTIVE=0
	ELSE
		SELECT * FROM FORM (NOLOCK) WHERE FORM_ID <> '0000000' AND 

EXCISE_ACCESSIBLE_PERCENTAGE = 0
		AND INACTIVE=0


GOTO LAST

LBLCUSTOMER:

	SELECT @CHEADCODESTR = DBO.FN_ACT_TRAVTREE('0000000018')
	SELECT LMV.AC_CODE, LMV.AC_NAME, LMV.ADDRESS0,LMV.ADDRESS1,LMV.ADDRESS2 AREA_NAME , LMV.CITY, LMV.[STATE],LMV.PINCODE ,
	ISNULL(LMV.DISCOUNT_PERCENTAGE,0) AS DISCOUNT_PERCENTAGE,LMV.INV_RATE_TYPE,LMV.FORM_ID, 
	ISNULL(LMV.DEFAULT_RATE_TYPE,1) AS DEFAULT_RATE_TYPE,LMV.BROKER_AC_CODE,LMV.RESTRICT_PUR_ENTRY,
	ISNULL(LMV.WSL_RATE_CALC_METHOD,1)AS WSL_RATE_CALC_METHOD
	,ISNULL(B.MBO_COUNTER,0) AS MBO_COUNTER
	,ISNULL(B.BIN_ID,'') AS BIN_ID
	,ISNULL(B.BIN_NAME,'') AS BIN_NAME
	,ISNULL(B.BIN_ALIAS,'') AS BIN_ALIAS,CREDIT_DAYS,
	ISNULL(LMV.PURCHASE_AGAINST_TERMS,0) AS [PURCHASE_AGAINST_TERMS]
	FROM LMV01106  LMV (NOLOCK)
	LEFT JOIN BIN B (NOLOCK) ON LMV.AC_CODE=B.MBO_LEDGER_AC_CODE
	WHERE (CHARINDEX(LMV.HEAD_CODE,@CHEADCODESTR)>0
	OR LMV.ALLOW_CREDITOR_DEBTOR=1) AND LMV.AC_CODE <>'0000000000' AND ISNULL(LMV.AC_NAME,'')<>''
	AND LMV.INACTIVE=0
	ORDER BY LMV.AC_NAME 
		
GOTO LAST

LBLSTOCKDETAILS:

	--SELECT *
	--FROM PMT01106 T1
	--JOIN PMV01106 T2 ON T1.PRODUCT_CODE = T2.PRODUCT_CODE
	--WHERE T1.QUANTITY_IN_STOCK > 0
	SELECT T1.*,T1.PRODUCT_CODE, B.ARTICLE_CODE, B.ARTICLE_NO, B.ARTICLE_NAME, 

S.PARA1_CODE,  
	   C.PARA1_NAME, S.PARA2_CODE, D.PARA2_NAME, S.PARA3_CODE, F.PARA3_NAME, E.UOM_NAME, 

    
	   T1.DEPT_ID, S.BARCODE_CODING_SCHEME AS CODING_SCHEME,  B.INACTIVE, 

T1.QUANTITY_IN_STOCK,  
	   S.PURCHASE_PRICE,  S.MRP,S.WS_PRICE,  '' AS SCHEME_ID, SM.SECTION_NAME, 

SD.SUB_SECTION_NAME,  
	   S.PARA4_CODE,S.PARA5_CODE,S.PARA6_CODE,  
	   PARA4_NAME,PARA5_NAME,PARA6_NAME,E.UOM_CODE,ISNULL(E.UOM_TYPE,0) AS [UOM_TYPE],  
	   B.DT_CREATED AS [ART_DT_CREATED],F.DT_CREATED AS [PARA3_DT_CREATED],S.DT_CREATED 

AS [SKU_DT_CREATED],  
	   B.STOCK_NA,S.FIX_MRP,S.PRODUCT_NAME,B.ALIAS AS ARTICLE_ALIAS,B.ARTICLE_NAME 
	FROM PMT01106 T1 (NOLOCK)
	JOIN SKU S (NOLOCK) ON T1.PRODUCT_CODE = S.PRODUCT_CODE   
	JOIN ARTICLE B (NOLOCK) ON S.ARTICLE_CODE = B.ARTICLE_CODE    
	JOIN SECTIOND SD (NOLOCK) ON B.SUB_SECTION_CODE = SD.SUB_SECTION_CODE  
	JOIN SECTIONM SM (NOLOCK) ON SD.SECTION_CODE = SM.SECTION_CODE  
	JOIN PARA1 C (NOLOCK) ON S.PARA1_CODE = C.PARA1_CODE    
	JOIN PARA2 D (NOLOCK) ON S.PARA2_CODE = D.PARA2_CODE    
	JOIN PARA3 F (NOLOCK) ON S.PARA3_CODE = F.PARA3_CODE    
	JOIN PARA4 G (NOLOCK) ON S.PARA4_CODE = G.PARA4_CODE    
	JOIN PARA5 H (NOLOCK) ON S.PARA5_CODE = H.PARA5_CODE    
	JOIN PARA6 I (NOLOCK) ON S.PARA6_CODE = I.PARA6_CODE    
	JOIN UOM   E (NOLOCK) ON B.UOM_CODE = E.UOM_CODE   
	JOIN BIN B1 ON B1.BIN_ID=T1.BIN_ID
	WHERE T1.QUANTITY_IN_STOCK > 0
GOTO LAST

LBLSALESEMPLOYEE:

	    SELECT EMP_CODE, EMP_NAME, EMP_NAME AS EMP_NAME_ORG,0 AS ALIASENTRY   
        FROM EMPLOYEE  (NOLOCK)  
        WHERE INACTIVE = 0  AND EMP_TYPE IN (1,3)
        UNION   
        SELECT EMP_CODE, EMP_ALIAS AS EMP_NAME, EMP_NAME AS EMP_NAME_ORG,1 AS ALIASENTRY    
        FROM EMPLOYEE  (NOLOCK)  
        WHERE INACTIVE = 0  AND EMP_TYPE IN (1,3) AND EMP_ALIAS <>''  
        ORDER BY EMP_NAME   

GOTO LAST


LBLPAYMENTDETAILS:  

  EXEC SP_PYMTDETAILS 1,'WSL',@CMEMOID  
  GOTO LAST  
  
LBLREPORTS:

	SELECT * FROM VW_WL_WSLINV (NOLOCK) WHERE MST_MEMO_NO = @CMEMOID

GOTO LAST

LBLPRODUCTCODELIST:

	 SELECT 

T3.ARTICLE_NO,T1.PRODUCT_CODE,T4.SUB_SECTION_NAME,T5.SECTION_NAME,T3.ARTICLE_CODE,
	 T3.ALIAS AS ARTICLE_ALIAS   
	 FROM SKU T1  (NOLOCK) 
	 JOIN PMT01106 T2 (NOLOCK) ON T1.PRODUCT_CODE = T2.PRODUCT_CODE  
	 JOIN ARTICLE T3 (NOLOCK) ON T1.ARTICLE_CODE = T3.ARTICLE_CODE  
	 JOIN SECTIOND T4 (NOLOCK) ON T3.SUB_SECTION_CODE = T4.SUB_SECTION_CODE  
	 JOIN SECTIONM T5 (NOLOCK) ON T5.SECTION_CODE = T4.SECTION_CODE 
	 WHERE T1.PRODUCT_CODE <> '' AND T2.QUANTITY_IN_STOCK > 0 AND T2.DEPT_ID=@CWHERE1
	 ORDER BY T1.PRODUCT_CODE  
	
	GOTO LAST
	
LBLBOXLISTING:

	SELECT DISTINCT BOX_NO,CONVERT(INT,0) AS CHKVALUE FROM IND01106 (NOLOCK) WHERE 
INV_ID = @CMEMOID AND BOX_NO <>  0	

	GOTO LAST
	
LBLITVDETAILS:
	
	SELECT @CSENDPARA6 = VALUE FROM CONFIG WHERE CONFIG_OPTION = 'SENT_SUPPLIER_NAME_PARA6'
	SELECT @CSENDPARA6=ISNULL(@CSENDPARA6,'')
	
	SELECT LEFT( S1.PRODUCT_CODE, ISNULL(NULLIF(CHARINDEX ('@', S1.PRODUCT_CODE)-1,-1),LEN( S1.PRODUCT_CODE ))) PRODUCT_CODE,
	T1.RATE AS PURCHASE_PRICE,B1.ARTICLE_NO,B1.ARTICLE_NAME
	,S1.BARCODE_CODING_SCHEME AS CODING_SCHEME,D.SECTION_NAME,C1.SUB_SECTION_NAME,E.PARA1_NAME,F.PARA2_NAME 
    ,G.PARA3_NAME,FR.FORM_NAME,H.PARA4_NAME,I.PARA5_NAME
    ,(CASE WHEN @CSENDPARA6= '1' THEN L.AC_NAME ELSE J.PARA6_NAME END) AS PARA6_NAME  
    ,B1.ARTICLE_DESC,B.INV_NO,B.INV_DT,
	UOM.UOM_NAME,T1.QUANTITY,S1.MRP,T1.RATE AS 
	WS_PRICE,T1.DISCOUNT_PERCENTAGE,T1.DISCOUNT_AMOUNT,
	B1.ALIAS AS ARTICLE_ALIAS,B1.ARTICLE_NAME,S1.ONLINE_PRODUCT_CODE,S1.VENDOR_EAN_NO	,
	T1.HSN_CODE,T1.WS_PRICE,(CASE WHEN CHARINDEX('@',S1.PRODUCT_CODE)>1 THEN LEFT(S1.PRODUCT_CODE,CHARINDEX('@',S1.PRODUCT_CODE)-1) ELSE S1.PRODUCT_CODE END) AS PRODUCT_CODE1 
	FROM IND01106 T1 (NOLOCK)
	JOIN INM01106 B (NOLOCK)  ON B.INV_ID=T1.INV_ID	
	JOIN SKU S1 (NOLOCK) ON S1.PRODUCT_CODE=T1.PRODUCT_CODE   
	JOIN ARTICLE B1 (NOLOCK) ON B1.ARTICLE_CODE = S1.ARTICLE_CODE  
	JOIN SECTIOND C1 (NOLOCK) ON C1.SUB_SECTION_CODE = B1.SUB_SECTION_CODE  
	JOIN SECTIONM D (NOLOCK) ON D.SECTION_CODE = C1.SECTION_CODE  
LEFT OUTER JOIN ARTICLE_FIX_ATTR ATTR  (NOLOCK) ON B1.ARTICLE_CODE = ATTR.ARTICLE_CODE 
LEFT OUTER JOIN ATTR1_MST AT1 (NOLOCK) ON AT1.ATTR1_KEY_CODE=ATTR.ATTR1_KEY_CODE
LEFT OUTER JOIN ATTR2_MST AT2 (NOLOCK) ON AT2.ATTR2_KEY_CODE=ATTR.ATTR2_KEY_CODE
LEFT OUTER JOIN ATTR3_MST AT3 (NOLOCK) ON AT3.ATTR3_KEY_CODE=ATTR.ATTR3_KEY_CODE
LEFT OUTER JOIN ATTR4_MST AT4 (NOLOCK) ON AT4.ATTR4_KEY_CODE=ATTR.ATTR4_KEY_CODE
LEFT OUTER JOIN ATTR5_MST AT5 (NOLOCK) ON AT5.ATTR5_KEY_CODE=ATTR.ATTR5_KEY_CODE
LEFT OUTER JOIN ATTR6_MST AT6 (NOLOCK) ON AT6.ATTR6_KEY_CODE=ATTR.ATTR6_KEY_CODE
LEFT OUTER JOIN ATTR7_MST AT7 (NOLOCK) ON AT7.ATTR7_KEY_CODE=ATTR.ATTR7_KEY_CODE
LEFT OUTER JOIN ATTR8_MST AT8 (NOLOCK) ON AT8.ATTR8_KEY_CODE=ATTR.ATTR8_KEY_CODE
LEFT OUTER JOIN ATTR9_MST AT9 (NOLOCK) ON AT9.ATTR9_KEY_CODE=ATTR.ATTR9_KEY_CODE
LEFT OUTER JOIN ATTR10_MST AT10 (NOLOCK) ON AT10.ATTR10_KEY_CODE=ATTR.ATTR10_KEY_CODE
LEFT OUTER JOIN ATTR11_MST AT11 (NOLOCK) ON AT11.ATTR11_KEY_CODE=ATTR.ATTR11_KEY_CODE
LEFT OUTER JOIN ATTR12_MST AT12 (NOLOCK) ON AT12.ATTR12_KEY_CODE=ATTR.ATTR12_KEY_CODE
LEFT OUTER JOIN ATTR13_MST AT13 (NOLOCK) ON AT13.ATTR13_KEY_CODE=ATTR.ATTR13_KEY_CODE
LEFT OUTER JOIN ATTR14_MST AT14 (NOLOCK) ON AT14.ATTR14_KEY_CODE=ATTR.ATTR14_KEY_CODE
LEFT OUTER JOIN ATTR15_MST AT15 (NOLOCK) ON AT15.ATTR15_KEY_CODE=ATTR.ATTR15_KEY_CODE
LEFT OUTER JOIN ATTR16_MST AT16 (NOLOCK) ON AT16.ATTR16_KEY_CODE=ATTR.ATTR16_KEY_CODE
LEFT OUTER JOIN ATTR17_MST AT17 (NOLOCK) ON AT17.ATTR17_KEY_CODE=ATTR.ATTR17_KEY_CODE
LEFT OUTER JOIN ATTR18_MST AT18 (NOLOCK) ON AT18.ATTR18_KEY_CODE=ATTR.ATTR18_KEY_CODE
LEFT OUTER JOIN ATTR19_MST AT19 (NOLOCK) ON AT19.ATTR19_KEY_CODE=ATTR.ATTR19_KEY_CODE
LEFT OUTER JOIN ATTR20_MST AT20 (NOLOCK) ON AT20.ATTR20_KEY_CODE=ATTR.ATTR20_KEY_CODE
LEFT OUTER JOIN ATTR21_MST AT21 (NOLOCK) ON AT21.ATTR21_KEY_CODE=ATTR.ATTR21_KEY_CODE
LEFT OUTER JOIN ATTR22_MST AT22 (NOLOCK) ON AT22.ATTR22_KEY_CODE=ATTR.ATTR22_KEY_CODE
LEFT OUTER JOIN ATTR23_MST AT23 (NOLOCK) ON AT23.ATTR23_KEY_CODE=ATTR.ATTR23_KEY_CODE
LEFT OUTER JOIN ATTR24_MST AT24 (NOLOCK) ON AT24.ATTR24_KEY_CODE=ATTR.ATTR24_KEY_CODE
LEFT OUTER JOIN ATTR25_MST AT25(NOLOCK) ON AT25.ATTR25_KEY_CODE=ATTR.ATTR25_KEY_CODE	JOIN PARA1 E (NOLOCK) ON E.PARA1_CODE = S1.PARA1_CODE  
	JOIN PARA2 F (NOLOCK) ON F.PARA2_CODE = S1.PARA2_CODE  
	JOIN PARA3 G (NOLOCK) ON G.PARA3_CODE = S1.PARA3_CODE  
	JOIN PARA4 H (NOLOCK) ON H.PARA4_CODE = S1.PARA4_CODE  
	JOIN PARA5 I (NOLOCK) ON I.PARA5_CODE = S1.PARA5_CODE  
	JOIN PARA6 J (NOLOCK) ON J.PARA6_CODE = S1.PARA6_CODE  
	JOIN LM01106 K (NOLOCK) ON K.AC_CODE=S1.AC_CODE   
	JOIN UOM (NOLOCK) ON UOM.UOM_CODE=B1.UOM_CODE
	JOIN FORM FR (NOLOCK)ON T1.ITEM_FORM_ID= FR.FORM_ID 
	JOIN LM01106 L (NOLOCK) ON L.AC_CODE = S1.AC_CODE 
	WHERE T1.INV_ID = @CMEMOID

GOTO LAST

LBLPSMST:
 
    DECLARE @CURDEPT_ID VARCHAR(5)
    
    IF @CLOC_ID=''
      SELECT TOP 1 @CURDEPT_ID=VALUE FROM CONFIG WHERE  CONFIG_OPTION='LOCATION_ID'
	ELSE
	   SELECT @CURDEPT_ID = @CLOC_ID
	

	SELECT CAST(0 AS BIT) AS BILLCHECK, B.PS_ID,B.PS_NO,B.PS_DT,0 AS SR,
           SUM(QUANTITY) AS TOTAL_QTY,  
           CAST('' AS NVARCHAR(10)) AS SRNO ,B.REMARKS,ISNULL(B.LOTTYPE,1) AS LOTTYPE,B.HEAD_COUNT  
    FROM WPS_DET A (NOLOCK)  
    JOIN WPS_MST B (NOLOCK) ON A.PS_ID= B.PS_ID   
    Join LMV01106 C on B. ac_code = C.ac_code      
    WHERE (B.AC_CODE=@CWHERE1 or c.BROKER_AC_CODE= @CWHERE1)  
    AND B.PS_MODE=@NNAVMODE AND CANCELLED=0 AND ISNULL(B.WSL_INV_ID,'')=''
	AND ISNULL(B.LOTTYPE,1)=@CWHERE2 AND b.location_Code=@CURDEPT_ID     
	AND (@DMEMODT='' OR B.PS_DT<=@DMEMODT) --AND S.PS_ID IS NULL
    GROUP BY  B.PS_ID,B.PS_NO,B.PS_DT ,B.REMARKS,ISNULL(B.LOTTYPE,1),B.HEAD_COUNT
    ORDER BY B.PS_DT,B.PS_NO

	GOTO LAST
	
LBLPSDET:


    DECLARE @CQRY1 NVARCHAR(MAX),@CAPPLYWSPRATE VARCHAR(4)
	SELECT TOP 1 @CAPPLYWSPRATE=VALUE FROM CONFIG WHERE  CONFIG_OPTION='APPLY_WSP_RATE'
		
	SET @CQRY1=N'INSERT WSL_ITEM_DETAILS	(ROW_ID,BOX_NO, BOX_DT,PRODUCT_CODE,INVOICE_QUANTITY, ITEM_FORM_ID, SP_ID,PS_ID,
	AUTO_SRNO,RATE,MANUAL_RATE,BIN_ID )
	SELECT (''LATER''+LEFT(CONVERT(VARCHAR(38),NEWID()),35)) AS ROW_ID,BOX_NO,'''' AS BOX_DT,PRODUCT_CODE,
	QUANTITY AS INVOICE_QUANTITY,''0000000'' AS ITEM_FORM_ID,'+LTRIM(RTRIM(STR(@@SPID)))+' AS SP_ID,
	PS_ID,0 AS AUTO_SRNO,RATE,'+(CASE WHEN ISNULL(@CAPPLYWSPRATE,'')='1' THEN '1' ELSE '0' END)+' AS MANUAL_RATE, BIN_ID FROM WPS_DET  A (NOLOCK)   
	WHERE A.PS_ID IN ('+@CWHERE2+')'
		 
	PRINT @CQRY1
	EXEC SP_EXECUTESQL @CQRY1

 --     DECLARE @CQRY1 NVARCHAR(MAX)
      
	--  SET @CQRY1=N' SELECT    
	--  CAST(0 AS BIT) AS BILLCHECK  
	-- ,W1.PS_ID  
	-- ,W2.PS_NO  
	-- ,W2.PS_DT  
	-- ,W1.PRODUCT_CODE  
	-- ,W1.QUANTITY  
	-- ,W1.RATE  
	-- ,A.ARTICLE_CODE  
	-- ,B.ARTICLE_NO  
	-- ,B.ARTICLE_NAME  
	-- ,A.PARA1_CODE  
	-- ,C.PARA1_NAME  
	-- ,A.PARA2_CODE  
	-- ,D.PARA2_NAME  
	-- ,A.PARA3_CODE  
	-- ,F.PARA3_NAME  
	-- ,E.UOM_NAME  
	-- ,W1.DEPT_ID  
	-- ,A.BARCODE_CODING_SCHEME AS CODING_SCHEME 
	-- ,B.INACTIVE  
	-- ,A.PURCHASE_PRICE  
	-- ,W1.MRP  
	-- ,W1.WS_PRICE  
	-- ,'''' AS SCHEME_ID  
	-- ,SM.SECTION_NAME  
	-- ,SD.SUB_SECTION_NAME  
	-- ,A.PARA4_CODE  
	-- ,A.PARA5_CODE  
	-- ,A.PARA6_CODE  
	-- ,PARA4_NAME  
	-- ,PARA5_NAME  
	-- ,PARA6_NAME  
	-- ,B.UOM_CODE  
	-- ,ISNULL(E.UOM_TYPE,0) AS [UOM_TYPE]  
	-- ,ISNULL(B.DT_CREATED,'''') AS [ART_DT_CREATED]  
	-- ,F.DT_CREATED AS [PARA3_DT_CREATED]  
	-- ,A.DT_CREATED AS [SKU_DT_CREATED]  
	-- ,B.STOCK_NA  
	-- ,W1.ITEM_FORM_ID  
	-- ,W1.ROW_ID AS REF_WPS_DET_ROWID
	-- ,F1.FORM_NAME  
	-- ,F1.TAX_PERCENTAGE   
	-- ,A.PRODUCT_NAME 
	-- ,W1.TAX_AMOUNT
	-- ,EMP.EMP_NAME, EMP1.EMP_NAME AS EMP_NAME1,  
 --    EMP2.EMP_NAME AS EMP_NAME2,W1.EMP_CODE2,W1.EMP_CODE1,W1.EMP_CODE  
 --    ,B1.BIN_ID,B1.BIN_NAME,B.ALIAS AS ARTICLE_ALIAS,B.ARTICLE_NAME,
 --    (A.PURCHASE_PRICE+ISNULL(SKU_OH.TAX_AMOUNT,0)+ ISNULL(SKU_OH.OTHER_CHARGES,0) +   
	-- ISNULL(SKU_OH.ROUND_OFF,0) + ISNULL(SKU_OH.FREIGHT,0)- ISNULL(SKU_OH.DISCOUNT_AMOUNT,0) +
	-- ISNULL(SKU_OH.EXCISE_DUTY_AMOUNT,0)) AS LANDED_COST ,W1.BOX_NO,W1.BOX_DT         
	-- FROM WPS_DET  W1 (NOLOCK)   
	-- JOIN WPS_MST W2 (NOLOCK) ON W1.PS_ID= W2.PS_ID               
	-- JOIN SKU A       (NOLOCK) ON A.PRODUCT_CODE=W1.PRODUCT_CODE        
	-- LEFT OUTER JOIN SKU_OH  (NOLOCK) ON SKU_OH.PRODUCT_CODE=A.PRODUCT_CODE 
	-- JOIN ARTICLE B   (NOLOCK) ON A.ARTICLE_CODE = B.ARTICLE_CODE            
	-- JOIN SECTIOND SD (NOLOCK) ON B.SUB_SECTION_CODE = SD.SUB_SECTION_CODE          
	-- JOIN SECTIONM SM (NOLOCK) ON SD.SECTION_CODE = SM.SECTION_CODE          
	-- JOIN PARA1 C (NOLOCK) ON A.PARA1_CODE = C.PARA1_CODE            
	-- JOIN PARA2 D (NOLOCK) ON A.PARA2_CODE = D.PARA2_CODE            
	-- JOIN PARA3 F (NOLOCK) ON A.PARA3_CODE = F.PARA3_CODE            
	-- JOIN PARA4 G (NOLOCK) ON A.PARA4_CODE = G.PARA4_CODE            
	-- JOIN PARA5 H (NOLOCK) ON A.PARA5_CODE = H.PARA5_CODE            
	-- JOIN PARA6 I (NOLOCK) ON A.PARA6_CODE = I.PARA6_CODE            
	-- LEFT OUTER JOIN UOM E (NOLOCK) ON B.UOM_CODE = E.UOM_CODE       
	-- JOIN FORM F1 (NOLOCK) ON W1.ITEM_FORM_ID= F1.FORM_ID 
	-- LEFT OUTER JOIN EMPLOYEE EMP ON W1.EMP_CODE= EMP.EMP_CODE      
 --    LEFT OUTER JOIN EMPLOYEE EMP1 ON W1.EMP_CODE1= EMP1.EMP_CODE      
 --    LEFT OUTER JOIN EMPLOYEE EMP2 ON W1.EMP_CODE2= EMP2.EMP_CODE  
 --    JOIN BIN B1 ON B1.BIN_ID=ISNULL(W1.BIN_ID   ,''000'')
 --    WHERE W2.PS_ID IN ('+@CWHERE2+') ORDER BY W2.PS_NO,SRNO'
	
		 
	--PRINT @CQRY1  
	--EXEC SP_EXECUTESQL @CQRY1   	
	GOTO LAST
  
LBLPAYMODEMST:    

  EXEC SP_PYMTDETAILS 2,'','',''  
  GOTO LAST
   
 LBLARTICLELIST:
  
	SELECT DISTINCT S.ARTICLE_CODE ,A.ARTICLE_NO 
	FROM SKU S (NOLOCK) JOIN  ARTICLE A (NOLOCK) ON S.ARTICLE_CODE = A.ARTICLE_CODE 
	JOIN PARA1 P1 (NOLOCK) ON S.PARA1_CODE = P1.PARA1_CODE 
	JOIN PARA2 P2 (NOLOCK) ON S.PARA2_CODE = P2.PARA2_CODE 
	WHERE SUBSTRING(S.PRODUCT_CODE,3,3) = 'XNS'
	
  GOTO LAST
  
   LBLCOLORLIST:
	
	SELECT DISTINCT S.PARA1_CODE ,P1.PARA1_NAME 
	FROM SKU S (NOLOCK) JOIN  ARTICLE A ON S.ARTICLE_CODE = A.ARTICLE_CODE 
	JOIN PARA1 P1 (NOLOCK) ON S.PARA1_CODE = P1.PARA1_CODE 
	JOIN PARA2 P2 (NOLOCK) ON S.PARA2_CODE = P2.PARA2_CODE 
	WHERE SUBSTRING(S.PRODUCT_CODE,3,3) = 'XNS'
	
  GOTO LAST
  
   LBLSIZELIST:
   
	SELECT DISTINCT S.PARA2_CODE ,P2.PARA2_NAME
	FROM SKU S (NOLOCK) JOIN  ARTICLE A (NOLOCK) ON S.ARTICLE_CODE = A.ARTICLE_CODE 
	JOIN PARA1 P1 (NOLOCK) ON S.PARA1_CODE = P1.PARA1_CODE 
	JOIN PARA2 P2 (NOLOCK) ON S.PARA2_CODE = P2.PARA2_CODE 
	WHERE SUBSTRING(S.PRODUCT_CODE,3,3) = 'XNS'
	
  GOTO LAST

LBLPENDINGPICKLISTMST:
	IF (@NNAVMODE = 1)
	BEGIN
		--SELECT  DISTINCT CONVERT(BIT,0) AS CHK,F.AC_NAME,A.PICK_LIST_ID,A.PICK_LIST_DT,A.PICK_LIST_NO 
		--FROM WSL_PICKLIST_DET B
		--JOIN WSL_PICKLIST_MST  A ON A.PICK_LIST_ID =  B.PICK_LIST_ID
		--LEFT OUTER JOIN 
		--(
		--	SELECT A.ROW_ID AS PICKLIST_ROW_ID,SUM(B.QUANTITY) AS QTY 
		--	FROM WSL_PICKLIST_DET A 
		--	JOIN IND01106 B  ON A.PICK_LIST_ID=B.PICK_LIST_ID AND A.ARTICLE_CODE=B.PICKLIST_ARTICLE_CODE
		--	AND A.PARA1_CODE=B.PICKLIST_PARA1_CODE AND A.PARA2_CODE=B.PICKLIST_PARA2_CODE
		--	JOIN INM01106 C ON C.INV_ID = B.INV_ID
		--	WHERE AC_CODE = @CWHERE1 AND CANCELLED = 0 GROUP BY A.ROW_ID
		--)C ON C.PICKLIST_ROW_ID = B.ROW_ID
		--JOIN BUYER_ORDER_MST E  ON E.ORDER_ID = B.ORDER_ID 
		--JOIN LM01106 F ON F.AC_CODE = A.AC_CODE
		--WHERE A.AC_CODE = @CWHERE1 AND  A.CANCELLED = 0 AND B.PICK_LIST_QTY+B.ADD_QTY > ISNULL(C.QTY,0)
		SELECT  DISTINCT CONVERT(BIT,0) AS CHK,F.AC_NAME,B.MEMO_ID AS PICK_LIST_ID,A.MEMO_DT AS PICK_LIST_DT,A.MEMO_NO AS PICK_LIST_NO 
		FROM PLD01106 B
		JOIN PLM01106  A ON A.MEMO_ID =  B.MEMO_ID
		LEFT OUTER JOIN 
		(
			SELECT A.ROW_ID AS PICKLIST_ROW_ID,SUM(B.QUANTITY) AS QTY 
			FROM PLD01106 A 
			JOIN IND01106 B  ON A.ROW_ID=B.PICK_LIST_ROW_ID 
			--AND A.ARTICLE_CODE=B.PICKLIST_ARTICLE_CODE
			--AND A.PARA1_CODE=B.PICKLIST_PARA1_CODE AND A.PARA2_CODE=B.PICKLIST_PARA2_CODE
			JOIN INM01106 C ON C.INV_ID = B.INV_ID
			WHERE AC_CODE = @CWHERE1 AND CANCELLED = 0 
			GROUP BY A.ROW_ID
		)C ON C.PICKLIST_ROW_ID = B.ROW_ID
		JOIN BUYER_ORDER_DET E1  ON E1.ROW_ID = B.ORD_ROW_ID
		JOIN BUYER_ORDER_MST E  ON E.ORDER_ID = E1.ORDER_ID
		JOIN LM01106 F ON F.AC_CODE = E.AC_CODE
		WHERE  E.MEMO_TYPE=2 AND  A.CANCELLED = 0 AND (B.QUANTITY-ISNULL(C.QTY,0))>0 AND E.AC_CODE = @CWHERE1 
	END
	ELSE
	BEGIN
		SELECT DISTINCT CONVERT (BIT,(CASE WHEN C.PICK_LIST_ID IS NULL THEN 0 ELSE 1 END)) AS CHK
		,F.AC_NAME,A.PICK_LIST_ID,A.PICK_LIST_DT,A.PICK_LIST_NO 
		FROM WSL_PICKLIST_DET B 
		JOIN WSL_PICKLIST_MST  A ON A.PICK_LIST_ID =  B.PICK_LIST_ID
		LEFT OUTER JOIN 
		(
			SELECT DISTINCT IND.PICK_LIST_ID
			FROM IND01106 IND
			JOIN INM01106 INM ON IND.INV_ID=INM.INV_ID
			WHERE INM.CANCELLED=0 AND INM.INV_ID=@CMEMOID
			 /*
			 SELECT A.ROW_ID AS PICKLIST_ROW_ID,SUM(B.QUANTITY) AS QTY 
			 FROM WSL_PICKLIST_DET A 
			 JOIN IND01106 B ON A.PICK_LIST_ID=B.PICK_LIST_ID AND A.ARTICLE_CODE=B.PICKLIST_ARTICLE_CODE
			 AND A.PARA1_CODE=B.PICKLIST_PARA1_CODE AND A.PARA2_CODE=B.PICKLIST_PARA2_CODE 
			 JOIN INM01106 C ON C.INV_ID = B.INV_ID
			 WHERE CANCELLED = 0 AND C.INV_ID = @CMEMOID  GROUP BY A.ROW_ID
			 */
		)C ON C.PICK_LIST_ID = B.PICK_LIST_ID
		LEFT OUTER JOIN 
		(
			SELECT A.ROW_ID AS PICKLIST_ROW_ID,SUM(B.QUANTITY) AS QTY 
			FROM WSL_PICKLIST_DET A 
			JOIN IND01106 B  ON A.PICK_LIST_ID=B.PICK_LIST_ID AND A.ARTICLE_CODE=B.PICKLIST_ARTICLE_CODE
			AND A.PARA1_CODE=B.PICKLIST_PARA1_CODE AND A.PARA2_CODE=B.PICKLIST_PARA2_CODE
			JOIN INM01106 C ON C.INV_ID = B.INV_ID
			WHERE AC_CODE = @CWHERE1 AND CANCELLED = 0 AND C.INV_ID<>@CMEMOID
			GROUP BY A.ROW_ID
		)C1 ON C1.PICKLIST_ROW_ID = B.ROW_ID
		JOIN BUYER_ORDER_MST E ON E.ORDER_ID = B.ORDER_ID 
		JOIN LM01106 F ON F.AC_CODE = A.AC_CODE
		WHERE A.AC_CODE = @CWHERE1 AND  A.CANCELLED = 0 
		AND B.PICK_LIST_QTY+B.ADD_QTY > ISNULL(C1.QTY,0)
	END
	GOTO LAST
	
LBLPENDINGPICKLISTDET:
	IF (@NNAVMODE = 1)
	BEGIN
		SELECT CONVERT(BIT,0) AS CHK,(X.QUANTITY-ISNULL(Y.QTY,0)) AS PENDING_QUANTITY
		,X.QUANTITY AS QUANTITY ,X.ROW_ID,X.MEMO_ID AS PICK_LIST_ID,BOM.ORDER_ID,BOM.ORDER_NO
		,ART.ARTICLE_NO,SD.SUB_SECTION_NAME,SM.SECTION_NAME,P1.PARA1_NAME,P2.PARA2_NAME,P3.PARA3_NAME
		,P4.PARA4_NAME,P5.PARA5_NAME,P6.PARA6_NAME,ART.ARTICLE_CODE AS PICKLIST_ARTICLE_CODE ,
		P1.PARA1_CODE AS PICKLIST_PARA1_CODE ,P2.PARA2_CODE AS PICKLIST_PARA2_CODE,X.ROW_ID AS PICK_LIST_ROW_ID 
		FROM PLD01106 X
		LEFT OUTER JOIN 
		(
			SELECT A.ROW_ID AS PICKLIST_ROW_ID,SUM(B.QUANTITY) AS QTY 
			FROM PLD01106 A 
		    JOIN IND01106 B ON A.ROW_ID=B.PICK_LIST_ROW_ID 
		 --   AND A.ARTICLE_CODE=B.PICKLIST_ARTICLE_CODE
			--AND A.PARA1_CODE=B.PICKLIST_PARA1_CODE AND A.PARA2_CODE=B.PICKLIST_PARA2_CODE
			JOIN INM01106 C ON B.INV_ID = C.INV_ID
			WHERE C.CANCELLED = 0 
			AND C.AC_CODE=@CWHERE1
			GROUP BY A.ROW_ID
		)Y ON X.ROW_ID = Y.PICKLIST_ROW_ID
		JOIN PLM01106 Z ON X.MEMO_ID = Z.MEMO_ID
		JOIN BUYER_ORDER_DET BOM1 ON X.ORD_ROW_ID = BOM1.ROW_ID
		JOIN BUYER_ORDER_MST BOM ON BOM1.ORDER_ID = BOM.ORDER_ID
		JOIN ARTICLE ART ON ART.ARTICLE_CODE =BOM1.ARTICLE_CODE
		JOIN SECTIOND SD ON SD.SUB_SECTION_CODE = ART.SUB_SECTION_CODE
		JOIN SECTIONM SM ON SM.SECTION_CODE = SD.SECTION_CODE
		JOIN PARA1 P1 ON BOM1.PARA1_CODE = P1.PARA1_CODE
		JOIN PARA2 P2 ON BOM1.PARA2_CODE = P2.PARA2_CODE
		JOIN PARA3 P3 ON ART.PARA3_CODE = P3.PARA3_CODE
		JOIN PARA4 P4 ON ART.PARA4_CODE = P4.PARA4_CODE
		JOIN PARA5 P5 ON ART.PARA5_CODE = P5.PARA5_CODE
		JOIN PARA6 P6 ON ART.PARA6_CODE = P6.PARA6_CODE
		WHERE BOM.MEMO_TYPE=2 AND Z.CANCELLED = 0 AND BOM.AC_CODE = @CWHERE1  AND (X.QUANTITY-ISNULL(Y.QTY,0))>0
		--SELECT CONVERT(BIT,0) AS CHK,(X.PICK_LIST_QTY+X.ADD_QTY-ISNULL(Y.QTY,0)) AS PENDING_QUANTITY
		--,X.PICK_LIST_QTY+ADD_QTY AS QUANTITY ,X.ROW_ID,X.PICK_LIST_ID,BOM.ORDER_ID,BOM.ORDER_NO
		--,ART.ARTICLE_NO,SD.SUB_SECTION_NAME,SM.SECTION_NAME,P1.PARA1_NAME,P2.PARA2_NAME,P3.PARA3_NAME
		--,P4.PARA4_NAME,P5.PARA5_NAME,P6.PARA6_NAME,X.ARTICLE_CODE AS PICKLIST_ARTICLE_CODE ,
		--X.PARA1_CODE AS PICKLIST_PARA1_CODE ,X.PARA2_CODE AS PICKLIST_PARA2_CODE 
		--FROM WSL_PICKLIST_DET X
		--LEFT OUTER JOIN 
		--(
		--	SELECT A.ROW_ID AS PICKLIST_ROW_ID,SUM(B.QUANTITY) AS QTY 
		--	FROM WSL_PICKLIST_DET A 
		--    JOIN IND01106 B ON A.PICK_LIST_ID=B.PICK_LIST_ID AND A.ARTICLE_CODE=B.PICKLIST_ARTICLE_CODE
		--	AND A.PARA1_CODE=B.PICKLIST_PARA1_CODE AND A.PARA2_CODE=B.PICKLIST_PARA2_CODE
		--	JOIN INM01106 C ON B.INV_ID = C.INV_ID
		--	WHERE C.CANCELLED = 0 AND C.AC_CODE=@CWHERE1
		--	GROUP BY A.ROW_ID
		--)Y ON X.ROW_ID = Y.PICKLIST_ROW_ID
		--JOIN WSL_PICKLIST_MST Z ON X.PICK_LIST_ID = Z.PICK_LIST_ID
		--JOIN BUYER_ORDER_MST BOM ON X.ORDER_ID = BOM.ORDER_ID
		--JOIN ARTICLE ART ON ART.ARTICLE_CODE =X.ARTICLE_CODE
		--JOIN SECTIOND SD ON SD.SUB_SECTION_CODE = ART.SUB_SECTION_CODE
		--JOIN SECTIONM SM ON SM.SECTION_CODE = SD.SECTION_CODE
		--JOIN PARA1 P1 ON X.PARA1_CODE = P1.PARA1_CODE
		--JOIN PARA2 P2 ON X.PARA2_CODE = P2.PARA2_CODE
		--JOIN PARA3 P3 ON ART.PARA3_CODE = P3.PARA3_CODE
		--JOIN PARA4 P4 ON ART.PARA4_CODE = P4.PARA4_CODE
		--JOIN PARA5 P5 ON ART.PARA5_CODE = P5.PARA5_CODE
		--JOIN PARA6 P6 ON ART.PARA6_CODE = P6.PARA6_CODE
		--WHERE Z.CANCELLED = 0 AND Z.AC_CODE = @CWHERE1  AND X.PICK_LIST_QTY+X.ADD_QTY > ISNULL(Y.QTY,0)
	END
	ELSE
	BEGIN
		SELECT  CONVERT(BIT,(CASE WHEN Y.PICKLIST_ROW_ID IS NULL THEN 0 ELSE 1 END)) AS CHK
		,(X.PICK_LIST_QTY+ADD_QTY-ISNULL(Y.QTY,0)-ISNULL(Y1.QTY,0)) AS PENDING_QUANTITY,X.PICK_LIST_QTY+ADD_QTY AS QUANTITY 
		,X.ROW_ID,X.PICK_LIST_ID,BOM.ORDER_ID,BOM.ORDER_NO
		,ART.ARTICLE_NO,SD.SUB_SECTION_NAME,SM.SECTION_NAME,P1.PARA1_NAME,P2.PARA2_NAME
		,P3.PARA3_NAME,P4.PARA4_NAME,P5.PARA5_NAME,P6.PARA6_NAME ,X.ARTICLE_CODE AS PICKLIST_ARTICLE_CODE 
		,X.PARA1_CODE AS PICKLIST_PARA1_CODE ,X.PARA2_CODE AS PICKLIST_PARA2_CODE 
		FROM WSL_PICKLIST_DET X
		LEFT OUTER JOIN 
		(
			SELECT A.ROW_ID AS PICKLIST_ROW_ID,SUM(B.QUANTITY) AS QTY 
			FROM WSL_PICKLIST_DET A 
			JOIN IND01106 B ON A.PICK_LIST_ID=B.PICK_LIST_ID AND A.ARTICLE_CODE=B.PICKLIST_ARTICLE_CODE
			AND A.PARA1_CODE=B.PICKLIST_PARA1_CODE AND A.PARA2_CODE=B.PICKLIST_PARA2_CODE
			JOIN INM01106 C ON B.INV_ID = C.INV_ID
			WHERE C.CANCELLED = 0 AND C.INV_ID = @CMEMOID
			GROUP BY A.ROW_ID
		) Y ON X.ROW_ID = Y.PICKLIST_ROW_ID
		LEFT OUTER JOIN 
		(
			SELECT A.ROW_ID AS PICKLIST_ROW_ID,SUM(B.QUANTITY) AS QTY 
			FROM WSL_PICKLIST_DET A 
		    JOIN IND01106 B ON A.PICK_LIST_ID=B.PICK_LIST_ID AND A.ARTICLE_CODE=B.PICKLIST_ARTICLE_CODE
			AND A.PARA1_CODE=B.PICKLIST_PARA1_CODE AND A.PARA2_CODE=B.PICKLIST_PARA2_CODE
			JOIN INM01106 C ON B.INV_ID = C.INV_ID
			WHERE C.CANCELLED = 0 AND C.AC_CODE=@CWHERE1 AND C.INV_ID <> @CMEMOID
			GROUP BY A.ROW_ID
		)Y1 ON X.ROW_ID = Y1.PICKLIST_ROW_ID
		JOIN WSL_PICKLIST_MST Z ON X.PICK_LIST_ID = Z.PICK_LIST_ID
		JOIN BUYER_ORDER_MST BOM ON X.ORDER_ID = BOM.ORDER_ID
		JOIN ARTICLE ART ON ART.ARTICLE_CODE =X.ARTICLE_CODE
		JOIN SECTIOND SD ON SD.SUB_SECTION_CODE = ART.SUB_SECTION_CODE
		JOIN SECTIONM SM ON SM.SECTION_CODE = SD.SECTION_CODE
		JOIN PARA1 P1 ON X.PARA1_CODE = P1.PARA1_CODE
		JOIN PARA2 P2 ON X.PARA2_CODE = P2.PARA2_CODE
		JOIN PARA3 P3 ON ART.PARA3_CODE = P3.PARA3_CODE
		JOIN PARA4 P4 ON ART.PARA4_CODE = P4.PARA4_CODE
		JOIN PARA5 P5 ON ART.PARA5_CODE = P5.PARA5_CODE
		JOIN PARA6 P6 ON ART.PARA6_CODE = P6.PARA6_CODE
		WHERE Z.CANCELLED = 0 AND Z.AC_CODE = @CWHERE1
		AND X.PICK_LIST_QTY+X.ADD_QTY > ISNULL(Y1.QTY,0)
	END
	
	GOTO LAST
	
LBLINVDETAIL:
     DECLARE @CCOL VARCHAR(40), @CRETCOLSTR NVARCHAR(MAX)  
 SET @CRETCOLSTR = N''  
   
 DECLARE CUR_CT CURSOR FOR  
 SELECT ATTRIBUTE_NAME FROM ATTRM  
  WHERE ATTRIBUTE_TYPE = 1 AND ATTRIBUTE_NAME<>'' ORDER BY ATTRIBUTE_NAME  
   
 OPEN CUR_CT  
 FETCH NEXT FROM CUR_CT INTO @CCOL  
 WHILE @@FETCH_STATUS = 0  
 BEGIN  
  SET @CRETCOLSTR = @CRETCOLSTR + ( CASE WHEN @CRETCOLSTR<>'' THEN N', ' ELSE '' END ) + N'  
        MAX(CASE WHEN B.ATTRIBUTE_NAME = ''' + @CCOL + ''' THEN C.KEY_NAME ELSE '''' END) AS [' + @CCOL + '] '  
  
  
  FETCH NEXT FROM CUR_CT INTO @CCOL  
 END  
 CLOSE CUR_CT  
 DEALLOCATE CUR_CT  
   
   
   
 IF OBJECT_ID ('TEMPDB..#TMPSKU','U') IS NOT NULL  
    DROP TABLE #TMPSKU  
        
 SELECT B.* INTO #TMPSKU FROM IND01106 T1 (NOLOCK)  
 JOIN SKU B (NOLOCK) ON T1.PRODUCT_CODE =B.PRODUCT_CODE   
 WHERE T1.INV_ID= @CMEMOID  
---------------------  
 IF @NNAVMODE = 1  
 BEGIN  
   SET @CCMD = N'IF OBJECT_ID('''+@CWHERE1+''',''U'') IS NOT NULL  
       DROP TABLE '+@CWHERE1+''   
   PRINT @CCMD   
   EXEC SP_EXECUTESQL @CCMD      
 END   
  
 SET @CCMD =N'SELECT DISTINCT(T2.PRODUCT_CODE ) AS MST_PRODUCT_CODE , T1.INV_ID,    
   T1.INV_DT AS MST_XN_DT,    
   T1.INV_NO AS MST_MEMO_NO,    
   T1.SUBTOTAL AS MST_SUBTOTAL,    
   T1.DISCOUNT_PERCENTAGE AS MST_DISCOUNT_PERCENTAGE ,    
   T1.DISCOUNT_AMOUNT AS MST_DISCOUNT_AMOUNT ,    
   T1.FREIGHT AS MST_FREIGHT ,    
   T1.OTHER_CHARGES AS MST_OTHER_CHARGES ,    
   T1.NET_AMOUNT AS MST_NET_AMOUNT ,    
   CONVERT(NUMERIC(18,2),T1.ROUND_OFF) AS MST_ROUNDOFF,    
   T1.REMARKS AS MST_REMARKS ,    
   T1.GRLR_DATE AS MST_GRLR_DATE ,    
   T1.BANDALS AS MST_BANDALS ,    
   T1.THROUGH AS MST_THROUGH ,    
   T1.INSURANCE AS MST_INSURANCE ,    
 T2.ITEM_TAX_PERCENTAGE AS MST_TAX_PERCENTAGE ,    
   CONVERT(NUMERIC(18,2),T2.ITEM_TAX_AMOUNT) AS MST_TAX_AMOUNT ,    
   T1.OCTROI_PERCENTAGE AS MST_OCTROI_PERCENTAGE,    
   T1.OCTROI_AMOUNT AS MST_OCTROI_AMOUNT,    
   T1.PARTY_DA_NO AS MST_PARTY_DA_NO ,    
   T1.PARTY_PO_NO AS MST_PARTY_PO_NO ,    
   T1.MANUAL_INV_NO AS MST_MANUAL_INV_NO,    
   T1.SHIPPING_ADDRESS,    
   T1.SHIPPING_ADDRESS2,    
   T1.SHIPPING_ADDRESS3,
   T1.SHIPPING_AREA_NAME,        
   T1.SHIPPING_CITY_NAME,        
   T1.SHIPPING_STATE_NAME,        
   T1.SHIPPING_PIN,        
   --T2.PRODUCT_CODE AS MST_PRODUCT_CODE,    
   T2.QUANTITY AS CAL_QUANTITY,  
   T2.PARTY_MRP,    
   T2.RATE AS CAL_RATE,    
   T2.DISCOUNT_PERCENTAGE AS CAL_DISCOUNT_PERCENTAGE,    
   T2.DISCOUNT_AMOUNT AS CAL_DISCOUNT_AMOUNT,   
     
   T2.MARGIN_PERCENTAGE AS CAL_MARGIN_PERCENTAGE,    
   T2.MARGIN_AMOUNT AS CAL_MARGIN_AMOUNT,    
      
   CONVERT(NUMERIC(18,2),(T2.QUANTITY*T2.RATE)-T2.DISCOUNT_AMOUNT) AS CAL_AMOUNT,    
   T2.QUANTITY*T6.MRP AS CAL_AMOUNT_MRP,    
   T3.AC_NAME AS MST_AC_NAME,     
   T3.ADDRESS0,T3.ADDRESS1,T3.ADDRESS2,T3.AREA_NAME,T3.PINCODE,    
   T3.CITY,T3.STATE,T3.CST_NO,T3.CST_DT,T3.SST_NO,T3.SST_DT,T3.TIN_NO,T3.TIN_DT,    
   T3.PHONES_R,T3.PHONES_O,T3.PHONES_FAX,T3.MOBILE,T3.E_MAIL,T3.TAX_CODE,    
   T4.FORM_NAME AS MST_FORM_NAME,    
   T5.EMP_NAME AS MST_EMP_NAME,    
   T6.MRP AS CAL_MRP,    
   (CASE WHEN T1.CANCELLED = 1 THEN ''CANCELLED'' ELSE '''' END) AS MST_CANCELLED,    
   T2.BOX_NO,SECTION_NAME,SUB_SECTION_NAME,ARTICLE_NO,ARTICLE_DESC,ARTICLE_NAME,    
   PARA1_NAME,PARA2_NAME,PARA3_NAME,PARA4_NAME,PARA5_NAME,PARA6_NAME,    
   P2.PARA2_ORDER,UOM.UOM_NAME,UOM.UOM_TYPE,    
   T1.EXCISE_ACCESSIBLE_PERCENTAGE,T1.EXCISE_ACCESSIBLE_AMOUNT,T1.EXCISE_DUTY_PERCENTAGE,T1.EXCISE_DUTY_AMOUNT,    
   T1.EXCISE_EDU_CESS_PERCENTAGE,T1.EXCISE_EDU_CESS_AMOUNT,T1.EXCISE_HEDU_CESS_PERCENTAGE,T1.EXCISE_HEDU_CESS_AMOUNT,    
   T1.DEPT_ID,T1.EXCISE_INVOICE   
   ,T1.RECEIVING_PARTY_ADDRESS  
   ,T1.AC_CODE    
   ,T1.INV_NO    
   ,T1.INV_DT    
   ,T1.SUBTOTAL    
   ,T1.DISCOUNT_PERCENTAGE    
   ,T1.DISCOUNT_AMOUNT    
   ,T1.FREIGHT    
   ,T1.PACKING  AS MST_PACKING   
   ,T1.OTHER_CHARGES    
   ,T1.NET_AMOUNT    
   ,T2.REMARKS    
   ,T1.ROUND_OFF    
   ,T1.CANCELLED    
   ,T1.CHECKED_BY    
,T1.SENT_BY    
   ,T1.COMPANY_CODE    
   ,T1.USER_CODE    
   ,T1.LAST_UPDATE    
   ,T1.TS    
   ,T1.GRLR_NO    
   ,T1.GRLR_DATE    
   ,T1.FIN_YEAR    
   ,T1.BANDALS    
   ,T1.THROUGH    
   ,T1.FORM_NO    
   ,T1.SENT_TO_HO    
   ,T1.UPLOADED_TO_ACTIVSTREAM    
   ,T1.BROKER_AC_CODE    
   ,T1.BROKER_COMM_PERCENTAGE    
   ,T1.BROKER_COMM_AMOUNT    
   ,T1.ROUTE_FORM1    
   ,T1.ROUTE_FORM2    
   ,T1.PARTY_DA_NO    
   ,T1.PARTY_PO_NO    
   ,T1.PAY_MODE  
   ,T1.INSURANCE    
   ,T1.EMP_CODE    
   ,T1.DT_CODE    
   ,T1.POSTEDINAC    
   ,T1.EDT_USER_CODE    
   ,T1.INV_TIME    
   ,T1.SMS_SENT    
   ,T1.MANUAL_INV_NO    
   ,T2.ITEM_TAX_PERCENTAGE AS TAX_PERCENTAGE    
   ,CAST(T2.ITEM_TAX_AMOUNT AS NUMERIC(18,2))  AS TAX_AMOUNT  
   ,T2.ITEM_TAX_PERCENTAGE   
   ,T2.ITEM_TAX_AMOUNT    
   ,T1.OCTROI_PERCENTAGE    
   ,T1.OCTROI_AMOUNT    
   ,T1.INV_MODE    
   ,T1.EXPORTED   
   ,T1.EXPORTED_TIME   
   ,T1.PARTY_DEPT_ID    
   ,T1.APPROVED    
   ,T1.INV_TYPE  
   ,T1.XFER_TYPE   
   ,T1.BUYER_ORDER_NO  
   ,T2.PRODUCT_CODE    
   ,T2.QUANTITY    
   ,T2.RATE    
   ,T2.ROW_ID    
   ,T2.PRINT_LABEL    
   ,T2.RFNET    
   ,T2.RFNET_WOTAX    
   ,CONVERT(NUMERIC(18,2),T2.NET_RATE) AS NET_RATE  
   ,CAST((CASE WHEN T1.BILL_LEVEL_TAX_METHOD=2 THEN T2.NET_RATE - (T2.ITEM_TAX_AMOUNT/T2.QUANTITY) ELSE T2.NET_RATE END) AS NUMERIC(18,2))  
             AS NET_RATE_WOT  
     ,T2.MRP    
   ,T2.BOX_DT    
   ,T3.AC_NAME    
   ,T3.ALIAS    
   ,T3.HEAD_CODE    
   ,T3.CLOSING_BALANCE    
   ,T3.CLOSING_BALANCE_CR_DR 
   ,T3.PRINT_LEDGER    
   ,T3.PRINT_NAME    
   ,T3.AREA_CODE    
   ,T3.CITY_CODE    
   ,T3.STATE_CODE    
   ,T3.CREDIT_DAYS    
   ,T3.BILL_BY_BILL    
   ,T3.ON_HOLD   
   ,T1.TARGET_BIN_ID'   
     
   SET @CCMD1=N',T3.THROUGH_BROKER    
   ,T3.BROKER_COMM_PERCENT    
   ,T3.CREDIT_LIMIT    
   ,T3.ALLOW_CREDITOR_DEBTOR    
   ,T3.DPWEF_DT    
   ,T3.CST_PERCENTAGE    
   ,T3.PAN_NO    
   ,T3.GLN_NO    
   ,T3.MP_PERCENTAGE    
   ,T3.MRP_CALC_MODE    
   ,T3.TDS_CODE    
   ,T3.INV_RATE_TYPE    
   ,T3.OUTSTATION_PARTY    
   ,T3.SALES_AC_CODE    
   ,T3.USERNAME    
   ,T3.EDT_USERNAME    
   ,T4.FORM_NAME    
   ,T4.PURCHASE_AC_CODE    
   ,T4.SALE_AC_CODE    
   ,T4.TAX_AC_CODE    
   ,T4.POST_TAX_SEPARATELY    
   ,T4.PUR_RETURN_AC_CODE    
   ,T4.SALE_RETURN_AC_CODE    
   ,T4.PHYSICAL_FORM    
   ,T4.SERIES    
   ,T4.EXCISE_EDU_CESS_AC_CODE    
   ,T4.EXCISE_HEDU_CESS_AC_CODE    
   ,T4.EXCISE_DUTY_AC_CODE    
   ,T5.EMP_NAME    
   ,T5.EMP_ALIAS    
   ,T5.EMP_HEAD    
   ,T6.PARA1_CODE    
   ,T2.AUTO_SRNO   
   ,T6.PARA2_CODE    
   ,T6.PURCHASE_PRICE    
   ,T6.PARA3_CODE    
   ,T6.RECEIPT_DT    
   ,T6.PARA4_CODE    
   ,T6.PARA5_CODE    
   ,T6.PARA6_CODE    
   ,T6.DT_CREATED    
   ,T6.WS_PRICE    
   ,T6.IMAGE_NAME    
   ,T6.CHALLAN_NO    
   ,T6.FIX_MRP    
   ,T7.CODING_SCHEME    
   ,T7.UOM_CODE    
   ,T7.PARA1_SET    
   ,T7.PARA2_SET    
   ,T7.INACTIVE    
   ,T7.SKU_CODE    
   ,T7.SUB_SECTION_CODE    
   ,T7.DISCON    
   ,T7.WHOLESALE_PRICE    
   ,T7.WSP_PERCENTAGE    
   ,T7.MIN_PRICE    
   ,T7.STOCK_NA    
   ,T7.ARTICLE_TYPE    
   ,T7.CREATED_ON    
   ,T7.ARTICLE_GROUP_CODE    
   ,T7.GENERATE_BARCODES_WITHARTICLE_PREFIX    
   ,T7.ARTICLE_GEN_MODE    
   ,T7.ARTICLE_PRD_MODE    
   ,T7.ARTICLE_SET_CODE    
   ,T7.OH_PERCENTAGE    
   ,T7.OH_AMOUNT    
   ,T8.SECTION_CODE    
   ,T8.MFG_CATEGORY   
   ,T8.REMARKS AS SUB_SECTION_REMARKS   
   ,USERS.MAJOR_USER_CODE    
   ,USERS.USER_ALIAS    
   ,USERS.DISCOUNT_PERCENTAGE_LEVEL    
   ,USERS.VIEW_DATA_AFTER_DFM    
   ,USERS.EMAIL    
   ,LCT.DEPT_NAME    
   ,LCT.MAJOR_DEPT_ID    
   ,LCT.LOC_TYPE    
   ,LCT.DATE_OF_OPENING    
   ,LCT.REPORT_BLOCKED    
   ,LCT.ACCOUNTS_POSTING_DEPT_ID    
   ,LCT.CONTROL_AC_CODE    
   ,LCT.UPD_PURINFO    
   ,LCT.SSPL_REG_KEY    
   ,LCT.WIZCOM_ENABLED    
   ,LCT.EXCISABLE    
   ,LCT.FR_TYPE    
   ,LCT.PRIMARY_EMAIL_PORT    
   ,LCT.PRIMARY_EMAIL    
   ,LCT.PRIMARY_EMAIL_SMTP    
   ,LCT.PRIMARY_EMAIL_PWD    
   ,LCT.PRIMARY_EMAIL_SSL    
   ,LCT.SSPL_GRP_CODE    
   ,LCT.PUR_LOC    
   ,LCT.ADDRESS1 AS LOCATION_ADDRESS1    
   ,LCT.ADDRESS2 AS LOCATION_ADDRESS2    
   ,LCT.DEPT_AC_CODE    
   ,LCT.LST_NO    
   ,LCT.LST_DT    
   ,LCT.DEPT_ALIAS    
   ,LCT.PHONE    
   ,LA.AREA_NAME AS LOCATION_AREA    
   ,LC.CITY AS LOCATION_CITY    
   ,LS.STATE AS LOCATION_STATE    
   ,LRG.REGION_NAME AS LOCATION_REGION    
   ,EU.USERNAME AS EDIT_USER,T6.PRODUCT_NAME  
   ,ISNULL(PAY.CURRENCY_CONVERSION_RATE,1) AS CURRENCY_CONVERSION_RATE   
   ,T1.BILL_LEVEL_TAX_METHOD  
   ,PM1.REMARKS AS PARCEL_REMARKS  
   ,PM1.TOTAL_AMOUNT AS PARCEL_TOTAL_AMOUNT  
   ,PM1.BILTY_NO AS PARCEL_BILTY_NO  
   ,PM1.HANDLED_BY  
   ,PM1.GATE_ENTRY_NO  
   ,PM1.PAY_TYPE AS PAY_TYPE
   ,PD1.TOTALQUANTITY   
   ,0 AS TOTAL_BOXES  
   ,PM1.RECEIPT_DT AS BILTY_DT  
   ,LMT.TERMS_NAME  
   ,T2.ITEM_EXCISE_ACCESSIBLE_PERCENTAGE  
   ,T2.ITEM_EXCISE_ACCESSIBLE_AMOUNT  
   ,T2.ITEM_EXCISE_DUTY_PERCENTAGE  
   ,T2.ITEM_EXCISE_DUTY_AMOUNT  
   ,T2.ITEM_EXCISE_EDU_CESS_PERCENTAGE  
   ,T2.ITEM_EXCISE_EDU_CESS_AMOUNT  
   ,T2.ITEM_EXCISE_HEDU_CESS_PERCENTAGE  
   ,T2.ITEM_EXCISE_HEDU_CESS_AMOUNT  
   ,T2.ITEM_EXCISE_MRP  
   ,T6.ONLINE_PRODUCT_CODE  
   ,T6.VENDOR_EAN_NO  
   ,BRD.AC_NAME AS BROKER_NAME
   ,LCT1.ADDRESS1 AS TARGET_LOCATION_ADDRESS1    
   ,LCT1.ADDRESS2 AS TARGET_LOCATION_ADDRESS2  
   ,LCT1.TIN_NO AS TARGET_LOCATION_TIN_NO  
   ,LCT1.TAN_NO AS TARGET_LOCATION_TAN_NO  
   ,LCT1.PHONE AS TARGET_LOCATION_PHONE  
   ,LA1.AREA_NAME AS TARGET_LOCATION_AREA    
   ,LA1.PINCODE AS TARGET_LOCATION_PINCODE  
   ,LC1.CITY AS TARGET_LOCATION_CITY    
   ,LS1.STATE AS TARGET_LOCATION_STATE    
   ,LRG1.REGION_NAME AS TARGET_LOCATION_REGION    
     
   ,(''20''+RIGHT((T1.FIN_YEAR -1),2)+''- 20''+ RIGHT(T1.FIN_YEAR,2)) AS FIN_PRINT  
   ,USERS.USERNAME AS BILLUSER  
   ,PM1.PARCEL_MEMO_NO  
   ,PM1.PARCEL_MEMO_DT,PB.PARTY_INV_NO AS BILL_CHALLAN_NO  
   ,COMP.PAN_NO AS COMP_PAN_NO ,COMP.TIN_NO AS COMP_TIN_NO,COMP.TAN_NO AS COMP_TAN_NO,COMP.CST_NO AS COMP_CST_NO  
   ,ISNULL(WPS.PS_NO,'''') AS PACK_SLIP_NO,ISNULL(WPS.PS_ID,'''') AS PACK_SLIP_ID,ISNULL(WPS.QUANTITY,0) AS PACK_SLIP_QTY  
   ,ATTRV.*,WP.PS_ID,WP.PS_NO,WP.PS_DT,COMP.PAN_NO AS COMPANY_PAN_NO,COMP.EMAIL_ID AS COMPANY_EMAIL_ID  
   ,COMP.PWD AS COMPANY_PWD,COMP.STATE AS COMPANY_STATE,COMP.COUNTRY AS COMPANY_COUNTRY,COMP.MOBILE AS COMPANY_MOBILE  
   ,COMP.CONTACT_NAME AS COMPANY_CONTACT_NAME,COMP.TDS_AC_NO AS COMPANY_TDS_AC_NO,COMP.COMPANY_CODE AS COMPANY_COMPANY_CODE  
   ,COMP.COMPANY_NAME AS COMPANY_COMPANY_NAME,COMP.ALIAS AS COMPANY_ALIAS,COMP.ADDRESS1 AS COMPANY_ADDRESS1  
   ,COMP.ADDRESS2 AS COMPANY_ADDRESS2,COMP.CITY AS COMPANY_CITY,COMP.TIN_NO AS COMPANY_TIN_NO,COMP.TAN_NO AS COMPANY_TAN_NO  
   ,COMP.PHONES_FAX AS COMPANY_PHONES_FAX,COMP.CST_NO AS COMPANY_CST_NO,COMP.CST_DT AS COMPANY_CST_DT,COMP.SST_NO AS COMPANY_SST_NO  
   ,COMP.SST_DT AS COMPANY_SST_DT,COMP.GRP_CODE AS COMPANY_GRP_CODE,COMP.ADDRESS9 AS COMPANY_ADDRESS9,COMP.PRINT_ADDRESS AS COMPANY_PRINT_ADDRESS  
   ,COMP.WORKABLE AS COMPANY_WORKABLE,COMP.PIN AS COMPANY_PIN,COMP.LOGO_PATH AS COMPANY_LOGO_PATH,COMP.WEB_ADDRESS AS COMPANY_WEB_ADDRESS  
   ,PS_NO_DETAILS=STUFF((SELECT DISTINCT  '',''+ RTRIM(LTRIM(WPS.PS_NO)) FROM  IND01106 IND JOIN  WPS_MST  WPS ON IND.PS_ID=WPS.PS_ID   
	WHERE IND.INV_ID  =T1.INV_ID FOR XML PATH('''')),1,1,'''')	
   ,COMP.SSPL_FIRST_HDSR AS COMPANY_SSPL_FIRST_HDSR,COMP.POLICY_NO AS COMPANY_POLICY_NO,COMP.GRP_NAME AS COMPANY_GRP_NAME,COMP.CIN AS COMPANY_CIN   
   '+RTRIM(LTRIM((CASE WHEN @NNAVMODE = 1 THEN ' INTO '+@CWHERE1+' ' ELSE ' ' END)))+'  
   
   FROM INM01106 T1    
   JOIN IND01106 T2 ON T1.INV_ID = T2.INV_ID    
   LEFT JOIN WPS_MST WP ON T2.PS_ID=WP.PS_ID  
   JOIN LMV01106 T3 ON T3.AC_CODE = T1.AC_CODE 
   LEFT OUTER JOIN LMV01106 BRD ON T1.BROKER_AC_CODE = BRD.AC_CODE 
   JOIN FORM   T4 ON T4.FORM_ID = T2.ITEM_FORM_ID     
   LEFT OUTER JOIN   
   (SELECT * FROM (SELECT ROW_NUMBER() OVER (PARTITION BY MEMO_ID ORDER BY   
   CURRENCY_CONVERSION_RATE) AS SNO,MEMO_ID,CURRENCY_CONVERSION_RATE FROM   
   PAYMODE_XN_DET A JOIN INM01106 T1 ON T1.INV_ID=A.MEMO_ID  
   JOIN IND01106 T2 ON T2.INV_ID=T1.INV_ID '+@CWHERE2+' AND   
    XN_TYPE=''WSL'' ) A WHERE A.SNO =1)   
   PAY ON T1.INV_ID = PAY.MEMO_ID    
     
   LEFT OUTER JOIN EMPLOYEE T5 ON T5.EMP_CODE = T1.EMP_CODE    
   JOIN #TMPSKU T6 ON T6.PRODUCT_CODE = T2.PRODUCT_CODE    
   JOIN ARTICLE T7 ON T7.ARTICLE_CODE=T6.ARTICLE_CODE  
  
   LEFT OUTER JOIN   
   (  
    SELECT ATTR.ARTICLE_CODE '  
    + (CASE WHEN @CRETCOLSTR<>'' THEN ', ' ELSE '' END) + @CRETCOLSTR +   
    ' FROM ART_ATTR ATTR  
      JOIN ATTRM B ON ATTR.ATTRIBUTE_CODE = B.ATTRIBUTE_CODE  
      JOIN ATTR_KEY C ON ATTR.KEY_CODE = C.KEY_CODE  
      GROUP BY ATTR.ARTICLE_CODE  
   )   
   ATTRV ON ATTRV.ARTICLE_CODE = T6.ARTICLE_CODE  
   LEFT JOIN  
   (  
      
    SELECT B.ROW_ID , A.PS_NO ,A.PS_ID ,QUANTITY  AS QUANTITY FROM WPS_MST A (NOLOCK)  
    JOIN WPS_DET B  (NOLOCK) ON A.PS_ID=B.PS_ID   
    WHERE A.CANCELLED =0  
   ) WPS ON WPS.ROW_ID=T2.REF_WPS_DET_ROWID    
   JOIN SECTIOND T8 ON T8.SUB_SECTION_CODE=T7.SUB_SECTION_CODE    
   JOIN SECTIONM T9 ON T9.SECTION_CODE=T8.SECTION_CODE    
   JOIN PARA1 P1 ON P1.PARA1_CODE=T6.PARA1_CODE    
   JOIN PARA2 P2 ON P2.PARA2_CODE=T6.PARA2_CODE    
   JOIN PARA3 P3 ON P3.PARA3_CODE=T6.PARA3_CODE    
   JOIN PARA4 P4 ON P4.PARA4_CODE=T6.PARA4_CODE    
   JOIN PARA5 P5 ON P5.PARA5_CODE=T6.PARA5_CODE    
   JOIN PARA6 P6 ON P6.PARA6_CODE=T6.PARA6_CODE    
   JOIN UOM ON UOM.UOM_CODE = T7.UOM_CODE    
   JOIN USERS ON T1.USER_CODE=USERS.USER_CODE    
   JOIN LOCATION LCT ON T1.DEPT_ID=LCT.DEPT_ID    
   JOIN AREA LA ON LCT.AREA_CODE=LA.AREA_CODE    
   JOIN CITY LC ON LA.CITY_CODE=LC.CITY_CODE    
   JOIN STATE LS ON LC.STATE_CODE=LS.STATE_CODE    
   JOIN REGIONM LRG ON LS.REGION_CODE=LRG.REGION_CODE   
   LEFT JOIN LOCATION LCT1 ON T1.PARTY_DEPT_ID=LCT1.DEPT_ID   
   LEFT  JOIN AREA LA1 ON LCT1.AREA_CODE=LA1.AREA_CODE    
   LEFT  JOIN CITY LC1 ON LA1.CITY_CODE=LC1.CITY_CODE    
   LEFT  JOIN STATE LS1 ON LC1.STATE_CODE=LS1.STATE_CODE    
   LEFT  JOIN REGIONM LRG1 ON LS1.REGION_CODE=LRG1.REGION_CODE       
   JOIN USERS EU ON T1.EDT_USER_CODE=EU.USER_CODE    
   LEFT OUTER JOIN PARCEL_DET PB ON PB.REF_MEMO_ID=T1.INV_ID  
      LEFT OUTER JOIN COMPANY COMP ON COMP.COMPANY_CODE=T1.COMPANY_CODE  
   LEFT JOIN LM_TERMS LM ON LM.TERMS_CODE=T1.TERMS_CODE  
   LEFT JOIN LEDGER_TERMS LMT ON LMT.USER_CODE=LM.TERMS_CODE  
      LEFT OUTER JOIN  
      (  
       SELECT PARCEL_MEMO_ID,SUM(QUANTITY) AS TOTALQUANTITY FROM PARCEL_DET (NOLOCK) GROUP BY PARCEL_MEMO_ID  
      )PD1 ON PD1.PARCEL_MEMO_ID=PB.PARCEL_MEMO_ID  
   LEFT OUTER JOIN PARCEL_MST PM1 ON  PM1.PARCEL_MEMO_ID=PB.PARCEL_MEMO_ID '+@CWHERE2+'ORDER BY T2.AUTO_SRNO'  
             
            
  SET  @CCMD = @CCMD+@CCMD1
    
  PRINT @CCMD  
  EXEC SP_EXECUTESQL @CCMD       
    
   SELECT  (CASE WHEN PM.PAYMODE_GRP_CODE='0000001' THEN PAYMODE_NAME    
    WHEN PM.PAYMODE_GRP_CODE='0000002' THEN PAYMODE_NAME    
    ELSE PAYMODE_NAME END) AS PAYMODES      
   ,(CASE WHEN PM.PAYMODE_GRP_CODE='0000001' THEN SUM(AMOUNT)    
    WHEN PM.PAYMODE_GRP_CODE='0000002' THEN SUM(AMOUNT)    
    ELSE SUM(AMOUNT) END) AS PAYAMOUNT    
   FROM PAYMODE_XN_DET PXD    
   JOIN PAYMODE_MST PM ON PXD.PAYMODE_CODE=PM.PAYMODE_CODE    
   WHERE PXD.XN_TYPE='WSL' AND PXD.MEMO_ID=''+@CMEMOID+''    
   GROUP BY PM.PAYMODE_GRP_CODE,PM.PAYMODE_NAME ,PXD.MEMO_ID   
    
 GOTO LAST 
--BEGIN 
--EXEC SP3S_WSLPRINT_DYNAMIC @CMEMOID=@CMEMOID 
--END
--GOTO LAST

LBLPENDING_BUYER_ORDERS_MST:
	/*
	   @NNAVMODE : 1 IS FOR ADD MODE, RETURN ALL PENDING WSL ORDERS WHOSE INVOICE HAS NOT BEEN RAISED.
				   2 IS FOR EDIT MODE, RETURN ALL PENDING WSL ORDERS AND CURRENT INVOICE WSL ORDER DETAILS 		
	   @CMEMOID  : REQUIRED IF CALLED FOR EDIT MODE.
	*/
	IF @NNAVMODE=1
	BEGIN
			SELECT DISTINCT CAST(0 AS BIT) AS CHK,A.ORDER_ID,A.ORDER_NO,A.ORDER_DT,A.ORDER_TIME,A.REF_NO,
		    a.TOTAL_QUANTITY, CAST(0 AS NUMERIC(18,2)) AS RECEIVED_QTY,CAST(0 AS NUMERIC(18,2)) AS PENDING_QTY
			FROM BUYER_ORDER_MST A (NOLOCK)
			JOIN 
			(
				SELECT B.ORDER_ID,
				SUM(CASE WHEN ISNULL(@ENFORCE_PL_QTY,'')<>'1' THEN B.QUANTITY ELSE ISNULL(PL_QTY,0) END) AS TOTAL_QUANTITY FROM
				BUYER_ORDER_DET B (NOLOCK)  GROUP BY B.ORDER_ID
			)B1 ON B1.ORDER_ID =A.ORDER_ID 
			LEFT OUTER JOIN
			(
				SELECT B.ORDER_ID AS ORDER_ID,
				SUM(B.INVOICE_QUANTITY) AS INVOICE_QTY 
				FROM IND01106 B 
				JOIN INM01106 C ON B.INV_ID = C.INV_ID
				WHERE C.CANCELLED=0  AND ISNULL(B.ORDER_ID,'')<>'' 
				AND C.AC_CODE=@CWHERE1   
				GROUP BY B.ORDER_ID
			)C ON  A.ORDER_ID = C.ORDER_ID
			WHERE (A.MEMO_TYPE = 1 AND A.CANCELLED = 0 
			AND A.AC_CODE = @CWHERE1  AND APPROVED=1
			AND B1.TOTAL_QUANTITY > ISNULL(C.INVOICE_QTY,0) ) and ISNULL(A.Short_close,0)  <> 1
			AND (@CLOCID='' OR ISNULL(WBO_FOR_DEPT_ID,a.location_Code)=@CLOCID)
			ORDER BY A.ORDER_DT,A.ORDER_ID
			
			GOTO LAST
	END
	ELSE 
	BEGIN
			SELECT DISTINCT (CASE WHEN C1.ORDER_ID IS NULL THEN 0 ELSE 1 END)  AS CHK,A.ORDER_ID,A.ORDER_NO,A.ORDER_DT,A.ORDER_TIME,A.REF_NO,
			a.TOTAL_QUANTITY,CAST(0 AS NUMERIC(18,2)) AS RECEIVED_QTY,CAST(0 AS NUMERIC(18,2)) AS PENDING_QTY
			FROM BUYER_ORDER_MST A
			JOIN 
			(
				SELECT B.ORDER_ID,
				SUM(CASE WHEN ISNULL(@ENFORCE_PL_QTY,'')<>'1' THEN B.QUANTITY ELSE ISNULL(PL_QTY,0) END) AS TOTAL_QUANTITY
				--SUM(B.QUANTITY) AS TOTAL_QUANTITY 
				FROM
				BUYER_ORDER_DET B  GROUP BY B.ORDER_ID
			)B1 ON B1.ORDER_ID =A.ORDER_ID 
			LEFT OUTER JOIN
			(
				SELECT B.ORDER_ID AS ORDER_ID,SUM(B.INVOICE_QUANTITY) AS INVOICE_QTY 
				FROM IND01106 B 
				JOIN INM01106 C ON B.INV_ID = C.INV_ID
				WHERE C.CANCELLED=0  AND ISNULL(B.ORDER_ID,'')<>'' 
				AND C.AC_CODE=@CWHERE1   
				GROUP  BY C.INV_ID,B.ORDER_ID
			)C ON A.ORDER_ID   = C.ORDER_ID
			LEFT OUTER JOIN
			(
				SELECT DISTINCT B.ORDER_ID
				FROM IND01106 B 
				JOIN INM01106 C ON B.INV_ID = C.INV_ID
				WHERE C.CANCELLED=0  AND C.INV_ID=@CMEMOID
			)C1 ON A.ORDER_ID   = C1.ORDER_ID
			WHERE (A.MEMO_TYPE = 1 AND A.CANCELLED = 0 
			AND A.AC_CODE =@CWHERE1 
			AND (B1.TOTAL_QUANTITY>ISNULL(C.INVOICE_QTY,0) OR C1.ORDER_ID IS NOT NULL)) and ISNULL(A.Short_close,0)  <> 1
			AND (@CLOCID='' OR ISNULL(WBO_FOR_DEPT_ID,a.location_Code)=@CLOCID)
			ORDER BY A.ORDER_DT,A.ORDER_ID
	END
GOTO LAST

LBLPENDINGDET_BUYER_ORDERS_DET:

IF @NNAVMODE=1
BEGIN

			SELECT CAST(0 AS BIT) AS CHK,0 AS ADD_QTY,D.ARTICLE_NAME
			,A.ORDER_ID,B.PARA1_CODE AS PACKSLIP_PARA1_CODE,B.PARA2_CODE AS PACKSLIP_PARA2_CODE
			,CASE WHEN ISNULL(@ENFORCE_PL_QTY,'')<>'1' THEN B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END AS QUANTITY,
			--,B.QUANTITY,
			B.ROW_ID,B.LAST_UPDATE,B.WS_PRICE,B.RFNET,B.ARTICLE_CODE AS PACKSLIP_ARTICLE_CODE
			,B.GROSS_WSP,B.DISCOUNT_PERCENTAGE,B.DISCOUNT_AMOUNT,B.REMARKS,B.PRODUCT_CODE,B.MANUAL_DISCOUNT	
			,SD.SUB_SECTION_NAME,SM.SECTION_NAME,D.ARTICLE_NO,P1.PARA1_NAME,P2.PARA2_NAME,'NA' AS PARA3_NAME	
			 ,'NA' AS PARA4_NAME,'NA' AS PARA5_NAME,'NA' AS PARA6_NAME,P1.PARA1_ORDER,P2.PARA2_ORDER
			 ,(CASE WHEN ISNULL(@ENFORCE_PL_QTY,'')<>'1' THEN B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END*B.WS_PRICE) AS AMOUNT,
			 UOM.UOM_CODE,UOM.UOM_NAME,UOM.UOM_TYPE
			 ,D.DT_CREATED,D.CODING_SCHEME,D.PARA1_SET,D.PARA2_SET,D.ALIAS AS ARTICLE_ALIAS
			 ,ISNULL(C.INVOICE_QTY,0) AS INVOICE_QTY,
			  CASE WHEN ISNULL(@ENFORCE_PL_QTY,'')<>'1' THEN B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END-ISNULL(C.INVOICE_QTY,0) AS PENDING_QUANTITY
			 ,CASE WHEN ISNULL(@ENFORCE_PL_QTY,'')<>'1' THEN B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END-ISNULL(C.INVOICE_QTY,0) AS PENDING_QUANTITY1,0 AS XN_STOCK
			 ,A.ORDER_NO,0 AS RECEIVE_QUANTITY
			 ,B.ROW_ID AS BO_DET_ROW_ID
			FROM BUYER_ORDER_MST A (NOLOCK)
			JOIN BUYER_ORDER_DET B (NOLOCK) ON A.ORDER_ID=B.ORDER_ID
			LEFT OUTER JOIN
			(
				SELECT B.ORDER_ID AS ORDER_ID,B.BO_DET_ROW_ID
						,SUM(B.INVOICE_QUANTITY) AS INVOICE_QTY 
				FROM IND01106 B 
				JOIN INM01106 C ON B.INV_ID = C.INV_ID
				WHERE C.CANCELLED=0  AND ISNULL(B.ORDER_ID,'')<>'' 
				AND C.AC_CODE=@CWHERE1   
				GROUP BY B.ORDER_ID,B.BO_DET_ROW_ID
			)C ON  A.ORDER_ID = C.ORDER_ID
			AND B.row_id  =C.BO_DET_ROW_ID
			JOIN ARTICLE D(NOLOCK) ON D.ARTICLE_CODE = B.ARTICLE_CODE
			JOIN SECTIOND SD(NOLOCK) ON D.SUB_SECTION_CODE=SD.SUB_SECTION_CODE
			JOIN SECTIONM SM(NOLOCK) ON SD.SECTION_CODE=SM.SECTION_CODE 
			JOIN PARA1 P1(NOLOCK) ON B.PARA1_CODE=P1.PARA1_CODE
			JOIN PARA2 P2(NOLOCK) ON B.PARA2_CODE=P2.PARA2_CODE
			JOIN UOM (NOLOCK) ON D.UOM_CODE=UOM.UOM_CODE
			WHERE (A.MEMO_TYPE = 1 AND A.CANCELLED = 0 
			AND A.AC_CODE = @CWHERE1 AND APPROVED=1 
			AND B.QUANTITY > ISNULL(C.INVOICE_QTY,0) )and ISNULL(A.Short_close,0)  <> 1
			AND (@CLOCID='' OR ISNULL(WBO_FOR_DEPT_ID,a.location_code)=@CLOCID)
			ORDER BY A.ORDER_ID
END
ELSE
BEGIN
			SELECT (CASE WHEN C1.ORDER_ID IS NULL THEN 0 ELSE 1 END) AS CHK,0 AS ADD_QTY,D.ARTICLE_NAME
			,A.ORDER_ID,B.PARA1_CODE AS PACKSLIP_PARA1_CODE,B.PARA2_CODE AS PACKSLIP_PARA2_CODE
			,CASE WHEN ISNULL(@ENFORCE_PL_QTY,'')<>'1' THEN B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END AS QUANTITY,
			--,B.QUANTITY,
			B.ROW_ID,B.LAST_UPDATE,B.WS_PRICE,B.RFNET,B.ARTICLE_CODE AS PACKSLIP_ARTICLE_CODE
			,B.GROSS_WSP,B.DISCOUNT_PERCENTAGE,B.DISCOUNT_AMOUNT,B.REMARKS,B.PRODUCT_CODE,B.MANUAL_DISCOUNT	
			,SD.SUB_SECTION_NAME,SM.SECTION_NAME,D.ARTICLE_NO,P1.PARA1_NAME,P2.PARA2_NAME,'NA' AS PARA3_NAME	
			 ,'NA' AS PARA4_NAME,'NA' AS PARA5_NAME,'NA' AS PARA6_NAME,P1.PARA1_ORDER,P2.PARA2_ORDER
			 ,(CASE WHEN ISNULL(@ENFORCE_PL_QTY,'')<>'1' THEN B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END*B.WS_PRICE) AS AMOUNT,
			 UOM.UOM_CODE,UOM.UOM_NAME,UOM.UOM_TYPE
			 ,D.DT_CREATED,D.CODING_SCHEME,D.PARA1_SET,D.PARA2_SET,D.ALIAS AS ARTICLE_ALIAS
			 ,ISNULL(C.INVOICE_QTY,0) AS INVOICE_QTY,
			 CASE WHEN ISNULL(@ENFORCE_PL_QTY,'')<>'1' THEN B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END-ISNULL(C.INVOICE_QTY,0) AS PENDING_QUANTITY
			 ,CASE WHEN ISNULL(@ENFORCE_PL_QTY,'')<>'1' THEN B.QUANTITY ELSE ISNULL(B.PL_QTY,0) END-ISNULL(C.INVOICE_QTY,0) AS PENDING_QUANTITY1,0 AS XN_STOCK
			 ,A.ORDER_NO,0 AS RECEIVE_QUANTITY
			 ,B.ROW_ID AS BO_DET_ROW_ID
			FROM BUYER_ORDER_MST A (NOLOCK)
			JOIN BUYER_ORDER_DET B (NOLOCK) ON A.ORDER_ID=B.ORDER_ID
			LEFT OUTER JOIN
			(
				SELECT B.ORDER_ID AS ORDER_ID,B.BO_DET_ROW_ID
						,SUM(B.INVOICE_QUANTITY) AS INVOICE_QTY 
				FROM IND01106 B 
				JOIN INM01106 C ON B.INV_ID = C.INV_ID
				WHERE C.CANCELLED=0  AND ISNULL(B.ORDER_ID,'')<>'' 
				AND C.AC_CODE=@CWHERE1   
				GROUP BY B.ORDER_ID,B.BO_DET_ROW_ID
			)C ON  A.ORDER_ID = C.ORDER_ID
			AND B.row_id  =C.BO_DET_ROW_ID
			LEFT OUTER JOIN
			(
				SELECT DISTINCT B.ORDER_ID AS ORDER_ID,B.BO_DET_ROW_ID
				FROM IND01106 B 
				JOIN INM01106 C ON B.INV_ID = C.INV_ID
				WHERE C.CANCELLED=0  AND C.INV_ID=@CMEMOID
				AND C.AC_CODE=@CWHERE1   
				GROUP BY B.INV_ID,B.ORDER_ID,B.BO_DET_ROW_ID
			)C1 ON  A.ORDER_ID = C1.ORDER_ID
			AND B.row_id  =C.BO_DET_ROW_ID
			JOIN ARTICLE D(NOLOCK) ON D.ARTICLE_CODE = B.ARTICLE_CODE
			JOIN SECTIOND SD(NOLOCK) ON D.SUB_SECTION_CODE=SD.SUB_SECTION_CODE
			JOIN SECTIONM SM(NOLOCK) ON SD.SECTION_CODE=SM.SECTION_CODE 
			JOIN PARA1 P1(NOLOCK) ON B.PARA1_CODE=P1.PARA1_CODE
			JOIN PARA2 P2(NOLOCK) ON B.PARA2_CODE=P2.PARA2_CODE
			JOIN UOM (NOLOCK) ON D.UOM_CODE=UOM.UOM_CODE
			WHERE (A.MEMO_TYPE = 1 AND A.CANCELLED = 0 
			AND A.AC_CODE = @CWHERE1  
			AND (B.QUANTITY > ISNULL(C.INVOICE_QTY,0) OR C1.ORDER_ID IS NOT NULL)) and ISNULL(A.Short_close,0)  <> 1
			AND (@CLOCID='' OR ISNULL(WBO_FOR_DEPT_ID,a.location_code)=@CLOCID)
			ORDER BY A.ORDER_ID

END
		
GOTO LAST

LBLGETSHIPPINGADDRESS:
	SELECT A.ADDRESS1 
		  ,A.ADDRESS2
		  ,A.ADDRESS3 	 
		  ,A.PIN
		  ,A.AREA_CODE
		  ,A.AREA_NAME
		  ,A.CITY AS CITY_NAME
		  ,A.STATE AS STATE_NAME
		  ,A.CITY+','+A.STATE+','+A.PIN AS LOCATION
		  ,A.ADDRESS1+','+A.ADDRESS2+','+A.ADDRESS3 AS [ADDRESS]	 
		  ,CONVERT(VARCHAR(40),NEWID()) AS ROW_ID
	FROM LM_SHIPPING_DETAILS A	
	--JOIN AREA B ON A.AREA_CODE=B.AREA_CODE
	--JOIN CITY C ON B.CITY_CODE=C.CITY_CODE
	--JOIN STATE D ON C.STATE_CODE=D.STATE_CODE
	WHERE A.AC_CODE=@CMEMOID
	
GOTO LAST

LBLCHKREPEATITEMSEND:

	EXEC SP3S_VALIDATE_CHALLAN_ITEM
	@CPRODUCTCODE=@CWHERE1,
	@CTARGETLOCID=@CWHERE2,
	@CDEPT_ID=@CLOCID	

GOTO LAST
	
LAST:
END
--END OF PROCEDURE - SP_WSLINV_NEW
