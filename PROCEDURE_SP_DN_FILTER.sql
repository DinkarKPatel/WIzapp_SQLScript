CREATE PROCEDURE SP_DN_FILTER  
(        
  @DNTTYPE NUMERIC(1)=0 -- DN_TYPE --0 ALL RECORDS, 1 OR 2 APPLY FILTER        
 ,@DNMODE NUMERIC(1)=0 --- MODE --0 ALL, 1 OR 2 APPLY FILTER        
 ,@TAXMETHOD NUMERIC(1)=0--BILL_LEVEL_TAX_METHOD --0 FOR ALL AND 1 OR 2 APPKLY FILTER        
 ,@ACTSTATUS NUMERIC(1)=0-- POSTEDINAC :0 THEN ALL ELSE APPLY FILTER.         
 ,@FRMDT DATETIME--RM_DT        
 ,@TODT DATETIME--RM_DT        
 ,@AC_CODE VARCHAR(10)--IF BLANK THEN ALL ELSE APPLY FILTER        
 ,@DEPT_ID VARCHAR(4)--IF BLANK THEN ALL ELSE APPLY FILTER        
 ,@BROKERACCODE VARCHAR(10)=''--IF BLANK THEN ALL ELSE APPLY FILTER        
 ,@CANCEL NUMERIC(1)=2--2 THEN ALL ELSE APPLY FILTER.         
 ,@APPROVED BIT=0--0 FOR ALL AND 1 FOR APPROVED.         
 ,@BMEMOTYPE BIT=0--FOR REGULAR AS WELL AS ESTIMATE; 1=REGULAR        
 ,@TAXFORM VARCHAR(7)=''--'' FOR ALL ELSE FILTERED (ITEM_FORM_ID)        
 ,@TAXSTORAGEMODE NUMERIC(1)=''--0 FOR ALL ELSE 1 OR 2 APPLY FILTER.        
 ,@LOC VARCHAR(4)=''        
 ,@nEntry_Mode INT=0
 ,@nXnItemType INT=0
 ,@nbill_challan_mode INT=2
 ,@NDOCATTACH NUMERIC(1)=0 /* : 1 ATTACH  0 NOT ATTACH */   
 ,@oem_ac_code VARCHAR(10)
)        
WITH RECOMPILE
AS       
BEGIN        

--(dinkar) Replace  left(memoid,2) to Location_code 
	DECLARE @DTSQL NVARCHAR(MAX),@CERRMSG VARCHAR(500),@CSTEP VARCHAR(5),@CONFIG_VALUE INT,@cCmd NVARCHAR(MAX),@cCmd1 NVARCHAR(MAX),
	@cTableName VARCHAR(400)
	        
BEGIN TRY     



	 ---FILTERING DEBITNOTES AS PER THE DEFINED ITEM_FORM_ID        
	IF OBJECT_ID('TEMPDB..#FILTER_RMM','U') IS NOT NULL        
		DROP TABLE #FILTER_RMM        
	          
	 IF OBJECT_ID('TEMPDB..#FILTER_PARCEL','U') IS NOT NULL        
		DROP TABLE #FILTER_PARCEL    
		
	IF OBJECT_ID('TEMPDB..#rmmlist','U') IS NOT NULL        
		DROP TABLE #rmmlist       
	         
	-- SELECT @CONFIG_VALUE=ISNULL(VALUE,0) FROM CONFIG WHERE CONFIG_OPTION='NEW_ACCOUNT_SYSTEM'        
	CREATE TABLE  #FILTER_RMM        (RM_ID VARCHAR(100) ,AC_CODE VARCHAR(100))
	CREATE TABLE #FILTER_PARCEL(REF_MEMO_ID VARCHAR(100),PARCEL_MEMO_ID VARCHAR(100),PARCEL_MEMO_DT DATETIME,PARCEL_MEMO_NO  VARCHAR(100),Angadia_name varchar(1000),
	bilty_No varchar(100),RECEIPT_NO VARCHAR(100),BILTY_DT DATETIME)
	
	CREATE TABLE #rmmlist  
 (  
  Enable_EInvoice BIT, loc_gst_no VARCHAR(100), [PARTY_GST_NO]  VARCHAR(100) ,MEMO_ID VARCHAR(100),AC_NAME VARCHAR(100),CITY VARCHAR(100),MEMO_DT VARCHAR(100)  
  ,MEMO_NO VARCHAR(100),DN_TYPE VARCHAR(100),mode  INT,APPROVED BIT,CANCELLED BIT,SUBTOTAL NUMERIC(20,2),DISCOUNT_AMOUNT NUMERIC(20,2),FREIGHT NUMERIC(20,2)  
  ,OTHER_CHARGES  NUMERIC(20,2),TOTAL_AMOUNT NUMERIC(20,2),broker_ac_name VARCHAR(1000),DISCOUNT_PERCENTAGE  NUMERIC(20,2),ROUND_OFF NUMERIC(20,2),REMARKS  VARCHAR(1000)     
  ,CN_NO VARCHAR(100),cd_percentage NUMERIC(20,2),CN_AMOUNT  NUMERIC(20,2),TOTAL_QUANTITY NUMERIC(20,2),USERNAME  VARCHAR(100),EDT_USERNAME VARCHAR(100)  
  ,FIN_YEAR VARCHAR(100),COMPANY_CODE VARCHAR(100),ESTIMATE_REGULAR NUMERIC(2),LOC_ID VARCHAR(100),LOC_NAME VARCHAR(1000),PARCEL_AC_NAME VARCHAR(1000)  
  ,PARCEL_MEMO_NO VARCHAR(1000),pmemo_Dt   DATETIME,Parcel_Transporter_name VARCHAR(1000),bilty_No VARCHAR(1000),bilty_dt DATETIME,DIFFAMOUNT NUMERIC(20,2),  
  EDIT_COUNT  NUMERIC(20),total_boxes   NUMERIC(20),DN_CN_NO VARCHAR(100),Total_Gst_Amount  NUMERIC(20,2),totqtystr  VARCHAR(1000),Total_Gst_Cess_Amount  NUMERIC(20,2),  
  [EINV_IRN_NO] VARCHAR(1000),XN_ITEM_TYPE VARCHAR(1000),EMP_NAME VARCHAR(100),OEM_AC_NAME VARCHAR(1000),receipt_no VARCHAR(1000),AUTO_EWAYBILL_NO VARCHAR(1000),  
   freight_gst_amount  NUMERIC(20,2),other_charges_gst_amount  NUMERIC(20,2)  
 ) 
	

	CREATE INDEX IX_1 ON #FILTER_RMM(RM_ID)
		CREATE INDEX IX_2 ON #FILTER_RMM(AC_CODE)
		CREATE INDEX IX_3 ON #FILTER_PARCEL(REF_MEMO_ID)
		CREATE INDEX IX_4 ON #FILTER_PARCEL(PARCEL_MEMO_ID) 
		CREATE INDEX IX_5 ON #FILTER_PARCEL(PARCEL_MEMO_DT)
		CREATE INDEX IX_6 ON #FILTER_PARCEL(PARCEL_MEMO_NO)

	INSERT INTO #FILTER_RMM        (RM_ID ,AC_CODE)        
	SELECT  RMM.RM_ID ,RMM.AC_CODE        
	FROM RMM01106 RMM(NOLOCK)        
	WHERE   RMM.RM_DT BETWEEN @FRMDT AND @TODT   
	 AND ISNULL(rmm.DocAttach,0) = 
	 (CASE wHEN @NDOCATTACH =2 then ISNULL(rmm.DocAttach,0) else @NDOCATTACH end)


	 INSERT INTO #FILTER_PARCEL(REF_MEMO_ID,PARCEL_MEMO_ID ,PARCEL_MEMO_DT,PARCEL_MEMO_NO,Angadia_name  ,bilty_No ,RECEIPT_NO ,BILTY_DT    )  
	 SELECT DISTINCT REF_MEMO_ID,C.PARCEL_MEMO_ID ,C.PARCEL_MEMO_DT,C.PARCEL_MEMO_NO  ,ANGM.Angadia_name ,c.bilty_No      ,C.cash_receipt_no
	 ,C.receipt_dt as bilty_dt
	 --INTO #FILTER_PARCEL         
	 FROM parcel_det  PB        
	 JOIN #FILTER_RMM RM ON RM.RM_ID=PB.REF_MEMO_ID AND PB.AC_CODE=RM.AC_CODE        
	 JOIN PARCEL_MST C ON C.PARCEL_MEMO_ID=PB.PARCEL_MEMO_ID 
	 LEFT JOIN ANGM (NOLOCK) ON ANGM.Angadia_code =C.angadia_code 
	 WHERE  C.XN_TYPE='PRT' and c.cancelled =0


	        
	         


	 --SET @cTablename='rmmlist_'+LTRIM(rtrim(str(@@spid)))
	 
	 --if OBJECT_ID(@cTablename,'u') is not null
	 --begin
		--set @cCmd=N'DROP TABLE '+@cTablename
		--exec sp_executesql @cCmd
	 --end

	 DECLARE @CACPOSTEDFILTER VARCHAR(1000)
	 set @CACPOSTEDFILTER=''
	 IF @ACTSTATUS=2
	         SET @CACPOSTEDFILTER=' where (CASE WHEN V.MEMO_ID IS NOT NULL THEN ''POSTED'' ELSE ''PENDING'' END) =''POSTED'' '
	 ELSE IF @ACTSTATUS=1
	        SET @CACPOSTEDFILTER= 'where (CASE WHEN V.MEMO_ID IS NOT NULL THEN ''POSTED'' ELSE ''PENDING'' END) =''PENDING'' '

	SET @CSTEP=10

	SET @cCmd=N'SELECT CAST((CASE WHEN T1.XN_ITEM_TYPE IN (1,4) THEN ISNULL(L.Enable_EInvoice,0) ELSE 0 END) AS BIT) AS Enable_EInvoice,
	ISNULL(L.loc_gst_no,'''') AS loc_gst_no, (CASE WHEN T1.mode=2 THEN ISNULL(L1.loc_gst_no,'') ELSE ISNULL(T33.Ac_gst_no,'') END) AS [PARTY_GST_NO]
	,T1.RM_ID AS MEMO_ID,T3.AC_NAME,city.CITY,convert(varchar(10),T1.RM_DT,105) AS MEMO_DT        
		,T1.RM_NO AS MEMO_NO,T1.DN_TYPE,T1.mode,T1.APPROVED,T1.CANCELLED ,T1.SUBTOTAL,T1.DISCOUNT_AMOUNT,T1.FREIGHT
		,T1.OTHER_CHARGES ,T1.TOTAL_AMOUNT,F.AC_NAME as broker_ac_name,      
		T1.DISCOUNT_PERCENTAGE ,T1.ROUND_OFF,T1.REMARKS        
		,T1.CN_NO
		,t1.cd_percentage
		,T1.CN_AMOUNT AS CN_AMOUNT,T1.TOTAL_QUANTITY       
		,u.username as USERNAME      
		,u1.username as EDT_USERNAME       
		,T1.FIN_YEAR        
		,COM.COMPANY_CODE        
		,T1.MEMO_TYPE AS ESTIMATE_REGULAR        
		,L.DEPT_ID AS LOC_ID        
		,L.DEPT_NAME AS LOC_NAME         
		,LM.AC_NAME AS  PARCEL_AC_NAME        
		,PB1.PARCEL_MEMO_NO,PARCEL_MEMO_DT as pmemo_Dt       
		,pb1.Angadia_name as Parcel_Transporter_name
		,pb1.bilty_No,pb1.bilty_dt
		,T1.DIFFAMOUNT,T1.EDIT_COUNT,T1.TOTAL_BOX_NO as total_boxes  ,      
		T1.CN_NO AS DN_CN_NO,T1.Total_Gst_Amount,t1.TOTAL_QUANTITY_STR as totqtystr ,
		T1.Total_Gst_Cess_Amount ,ISNULL(T1.EINV_IRN_NO,'''') AS [EINV_IRN_NO],XNTYPE.DisplayMember XN_ITEM_TYPE,
		ISNULL(EMP.EMP_NAME,'''') AS EMP_NAME,ISNULL(OEM1.AC_NAME,'''') AS OEM_AC_NAME,pb1.receipt_no,T1.AUTO_EWAYBILL_NO,
		 (T1.freight_igst_amount + T1.freight_cgst_amount + T1.freight_sgst_amount ) as freight_gst_amount ,
		 (T1.other_charges_cgst_amount + T1.other_charges_igst_amount + T1.other_charges_sgst_amount ) as other_charges_gst_amount
	 FROM RMM01106 T1 (NOLOCK)         
	 JOIN
	 (
		SELECT ''Inventory'' AS DisplayMember,1 AS XN_ITEM_TYPE
		UNION
		SELECT ''Consumable'' AS DisplayMember,2 AS XN_ITEM_TYPE
		UNION
		SELECT ''Assets'' AS DisplayMember,3 AS XN_ITEM_TYPE
		UNION 
		SELECT ''Services'' AS DisplayMember,4 AS XN_ITEM_TYPE
		UNION 
		SELECT ''Repair/Defective'' AS DisplayMember,5 AS XN_ITEM_TYPE
	 )XNTYPE ON XNTYPE.XN_ITEM_TYPE=isnull(T1.XN_ITEM_TYPE,1)  '
  SET @ccmd1=N'
	 JOIN #FILTER_RMM FT1 (NOLOCK) ON T1.RM_ID=FT1.RM_ID        
	 JOIN LM01106 T3 (NOLOCK) ON T3.AC_CODE = T1.AC_CODE 
	 LEFT OUTER JOIN   LMP01106 T33 (NOLOCK) ON T3.AC_CODE = T33.AC_CODE 
	 LEFT OUTER JOIN city city(NOLOCK) ON city.CITY_CODE=t33.CITY_CODE
	 left JOIN LM01106 F(NOLOCK) ON T1.BROKER_AC_CODE= F.AC_CODE      
	 JOIN users U (NOLOCK) ON T1.user_code=U.user_code      
	 LEFT OUTER JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE=T3.AC_CODE     
	 LEFT OUTER JOIN COMPANY COM ON 1=1 AND COM.COMPANY_CODE=''01''            
	 LEFT OUTER JOIN LOCATION  L (NOLOCK) ON T1.location_code = L.DEPT_ID         
	 LEFT OUTER JOIN LOCATION  L1 (NOLOCK) ON T1.PARTY_DEPT_ID = L1.DEPT_ID         
	 LEFT OUTER JOIN #FILTER_PARCEL PB1 ON PB1.REF_MEMO_ID=T1.RM_ID        
	 LEFT OUTER JOIN users u1 (NOLOCK) ON T1.edt_user_code=U1.user_code        
	 left join employee emp (nolock) on emp.emp_code =t1.emp_code
	 LEFT OUTER JOIN LM01106 OEM1 (NOLOCK) ON T1.OEM_AC_CODE=OEM1.AC_CODE
	 --LEFT OUTER JOIN LM01106 OEM (NOLOCK) ON T1.SHIPPING_AC_CODE=OEM.AC_CODE AND T1.SHIPPING_MODE=3
	 WHERE T1.RM_DT BETWEEN '''+CONVERT(VARCHAR,@FRMDT,110)+''' AND '''+CONVERT(VARCHAR,@TODT,110)+'''
	 AND T1.DN_TYPE='+(CASE WHEN ISNULL(@DNTTYPE,0)=0 THEN 'T1.DN_TYPE' ELSE  STR(@DNTTYPE) END)+'
	 AND T1.MODE='+(CASE WHEN ISNULL(@DNMODE,0)=0 THEN 'T1.MODE' ELSE  STR(@DNMODE) END)+'   
	 AND T1.AC_CODE='+(CASE WHEN ISNULL(@AC_CODE,'')='' THEN  'T1.AC_CODE' ELSE ''''+@AC_CODE+'''' END)+' 
	 AND isnull(T1.OEM_AC_CODE,'''')='+(CASE WHEN ISNULL(@oem_ac_code,'')='' THEN  'isnull(T1.OEM_AC_CODE,'''')' ELSE ''''+@oem_ac_code+'''' END)+'
	 AND T1.LOCATION_CODE ='+(CASE WHEN ISNULL(@DEPT_ID,'')='' THEN  'T1.LOCATION_CODE' ELSE ''''+@DEPT_ID+'''' END)+'
	 AND isnull(T1.BROKER_AC_CODE,'''')='+(CASE WHEN ISNULL(@BROKERACCODE,'')='' THEN  'isnull(T1.BROKER_AC_CODE,'''')' ELSE 
	 ''+@BROKERACCODE+'' END)+'
	 AND T1.CANCELLED='+(CASE WHEN ISNULL(@CANCEL,0)=2 THEN 'T1.CANCELLED' ELSE str(@CANCEL) END)+'	
	 AND T1.APPROVED='+(CASE WHEN ISNULL(@APPROVED,0)=0 THEN 'T1.APPROVED' ELSE '1' END)+'
	 AND T1.TAXFORM_STORAGE_MODE='+(CASE WHEN ISNULL(@TAXSTORAGEMODE,0)=0 THEN  'T1.TAXFORM_STORAGE_MODE' 
	 ELSE str(@TAXSTORAGEMODE) END)+'
	 AND T1.LOCATION_CODE='+(CASE WHEN @LOC='' THEN  'T1.LOCATION_CODE' ELSE ''''+@LOC+'''' END)+'         
	 AND T1.MEMO_TYPE ='+(CASE WHEN @BMEMOTYPE=0 THEN  'T1.MEMO_TYPE' ELSE '1' END) +' 
	 AND T1.Entry_Mode ='+(CASE WHEN @nEntry_Mode=0 THEN  'T1.Entry_Mode' ELSE rtrim(ltrim(str(@nEntry_Mode))) END)	+ ' 
	 AND isnull(T1.XN_ITEM_TYPE,1) ='+(CASE WHEN @nXnItemType=0 THEN  'isnull(T1.XN_ITEM_TYPE,1)' ELSE rtrim(ltrim(str(@nXnItemType))) END) + ' 
	 AND isnull(T1.bill_challan_mode,0) ='+(CASE WHEN @nbill_challan_mode=2 THEN  'isnull(T1.bill_challan_mode,0)' ELSE rtrim(ltrim(str(@nbill_challan_mode))) END) 
	 --+' 
	 --AND T1.bill_level_tax_method ='+(CASE WHEN @taxmethod=0 THEN  'T1.bill_level_tax_method' ELSE rtrim(ltrim(str(@taxmethod))) END)
	
	 print @cCmd  
 print @cCmd1  
 SET @cCmd=@cCmd+@cCmd1
	INSERT INTO #rmmlist (Enable_EInvoice,loc_gst_no,PARTY_GST_NO,MEMO_ID,AC_NAME,CITY,MEMO_DT,MEMO_NO,DN_TYPE,mode,APPROVED,CANCELLED,SUBTOTAL,DISCOUNT_AMOUNT,FREIGHT,OTHER_CHARGES,TOTAL_AMOUNT,
	broker_ac_name,DISCOUNT_PERCENTAGE,ROUND_OFF,REMARKS,CN_NO,cd_percentage,CN_AMOUNT,TOTAL_QUANTITY,USERNAME,EDT_USERNAME,FIN_YEAR,COMPANY_CODE,ESTIMATE_REGULAR,LOC_ID,LOC_NAME,
	PARCEL_AC_NAME,PARCEL_MEMO_NO,pmemo_Dt,Parcel_Transporter_name,bilty_No,bilty_dt,DIFFAMOUNT,EDIT_COUNT,total_boxes,DN_CN_NO,Total_Gst_Amount,totqtystr,Total_Gst_Cess_Amount,EINV_IRN_NO,
	XN_ITEM_TYPE,EMP_NAME,OEM_AC_NAME,receipt_no,AUTO_EWAYBILL_NO,freight_gst_amount,other_charges_gst_amount)
	EXEC SP_EXECUTESQL @cCmd 

	--set @cCmd=N'SELECT 	* from '+@cTableName
	--EXEC SP_EXECUTESQL @cCmd 

	--SELECT @cTableName
	SET @CSTEP=20
	SET @cCmd=N'SELECT CONVERT(VARCHAR,pMEMO_DT,105) as parcel_memo_dt,AC_NAME+CASE WHEN ISNULL(CITY,'''') <> '''' THEN '' - ''+ ISNULL(CITY,'''') ELSE '''' END  AS SUPPLIER_NAME
		,(CASE WHEN DN_TYPE=1 THEN ''REGULAR'' WHEN DN_TYPE=2 THEN ''FINANCIAL'' ELSE '''' END) AS [MEMO_TYPE]            
		,(CASE WHEN MODE=1  THEN ''PARTY DEBIT NOTE'' WHEN MODE=2 THEN ''GROUP DEBIT NOTE'' ELSE '''' END) AS MEMO_MODE            
		,(CASE WHEN APPROVED=1 OR APPROVED=0 THEN ''PENDING FOR APPROVAL'' WHEN APPROVED=2 THEN ''APPROVED''
		  WHEN APPROVED=3 THEN ''DISAPPROVED'' ELSE '''' END) AS [STATUS]             
		,(CASE WHEN CANCELLED = 0 THEN SUBTOTAL ELSE 0 END) AS GROSS_RETURN_VALUE        
		,(CASE WHEN CANCELLED = 0 THEN DISCOUNT_AMOUNT ELSE 0 END) AS DISCOUNT_AMOUNT         
		,(CASE WHEN CANCELLED = 0 THEN FREIGHT ELSE 0 END) AS FREIGHT        
		,(CASE WHEN CANCELLED = 0 THEN OTHER_CHARGES ELSE 0 END) AS OTHER_CHARGES        
		,(CASE WHEN CANCELLED = 0 THEN TOTAL_AMOUNT ELSE 0 END) AS NET_RETURN_VALUE      
		,(CASE WHEN ISNULL(CN_NO,'''')='''' THEN ''NOT RECEIVED''  ELSE ''RECEIVED'' END) AS CN_RECEIVE        
		,(CASE WHEN CANCELLED = 1 OR DN_TYPE=2 THEN 0 ELSE ISNULL(TOTAL_QUANTITY,0) END) AS TOTAL_QUANTITY        
		,(CASE WHEN CANCELLED = 1 OR DN_TYPE=2 THEN '''' ELSE ISNULL(totqtystr,'''') END) AS TOTAL_QUANTITY_STR        
		,(CASE WHEN CANCELLED = 1 THEN ''CANCELLED'' ELSE '''' END) AS CANCELLED         
		,(CASE WHEN v.memo_id is not null THEN ''POSTED'' ELSE ''PENDING'' END) AS AC_POSTED        
		,(CASE WHEN ISNULL(EDIT_COUNT,0)>0 THEN ''EDITED ('' + RTRIM(LTRIM(STR(EDIT_COUNT)))+ '')'' ELSE '''' END ) AS EDIT_COUNT        
		,(CASE WHEN CANCELLED = 1 OR DN_TYPE=2 THEN 0 ELSE ISNULL(TOTAL_BOXes,0) END) AS TOTAL_BOX_NO   
		,*
		 from #rmmlist a
		 LEFT JOIN
		 (SELECT pvl.memo_id FROM VM01106 V (NOLOCK) 
		  JOIN POSTACT_VOUCHER_LINK PVL  (NOLOCK) ON PVL.vm_ID=v.vm_id
		  JOIN #rmmlist b ON b.MEMO_ID=pvl.memo_id
		  where PVL.XN_TYPE IN (''PRT'',''PRTCHO'') AND v.cancelled=0        
		 ) v on  v.memo_id=a.memo_id 
		  '	+@CACPOSTEDFILTER

	  print @cCmd  
	 EXEC SP_EXECUTESQL @cCmd        

END TRY        
BEGIN CATCH        
	 SET @CERRMSG='PROCEDURE - SP_DN_FILTER, STEP - '+@CSTEP+', ERROR MESSAGE - '+ERROR_MESSAGE()        
END CATCH         

IF @CERRMSG<>''        
  SELECT @CERRMSG AS [ERROR_MESSAGE]         
END        
---END OF PROCEDURE - SP_DN_FILTER 

/*
CREATE PROCEDURE SP_DN_FILTER  
(        
  @DNTTYPE NUMERIC(1)=0 -- DN_TYPE --0 ALL RECORDS, 1 OR 2 APPLY FILTER        
 ,@DNMODE NUMERIC(1)=0 --- MODE --0 ALL, 1 OR 2 APPLY FILTER        
 ,@TAXMETHOD NUMERIC(1)=0--BILL_LEVEL_TAX_METHOD --0 FOR ALL AND 1 OR 2 APPKLY FILTER        
 ,@ACTSTATUS NUMERIC(1)=0-- POSTEDINAC :0 THEN ALL ELSE APPLY FILTER.         
 ,@FRMDT DATETIME--RM_DT        
 ,@TODT DATETIME--RM_DT        
 ,@AC_CODE VARCHAR(10)--IF BLANK THEN ALL ELSE APPLY FILTER        
 ,@DEPT_ID VARCHAR(3)--IF BLANK THEN ALL ELSE APPLY FILTER        
 ,@BROKERACCODE VARCHAR(10)=''--IF BLANK THEN ALL ELSE APPLY FILTER        
 ,@CANCEL NUMERIC(1)=2--2 THEN ALL ELSE APPLY FILTER.         
 ,@APPROVED BIT=0--0 FOR ALL AND 1 FOR APPROVED.         
 ,@BMEMOTYPE BIT=0--FOR REGULAR AS WELL AS ESTIMATE; 1=REGULAR        
 ,@TAXFORM VARCHAR(7)=''--'' FOR ALL ELSE FILTERED (ITEM_FORM_ID)        
 ,@TAXSTORAGEMODE NUMERIC(1)=''--0 FOR ALL ELSE 1 OR 2 APPLY FILTER.        
 ,@LOC VARCHAR(2)=''        
 ,@nEntry_Mode INT=0
 ,@nXnItemType INT=0
 ,@nbill_challan_mode INT=2
 ,@NDOCATTACH NUMERIC(1)=0 /* : 1 ATTACH  0 NOT ATTACH */   
 ,@oem_ac_code VARCHAR(10)
)        
WITH RECOMPILE
AS       
BEGIN        
	DECLARE @DTSQL NVARCHAR(MAX),@CERRMSG VARCHAR(500),@CSTEP VARCHAR(5),@CONFIG_VALUE INT,@cCmd NVARCHAR(MAX),
	@cTableName VARCHAR(400)
	        
BEGIN TRY     



	 ---FILTERING DEBITNOTES AS PER THE DEFINED ITEM_FORM_ID        
	IF OBJECT_ID('TEMPDB..#FILTER_RMM','U') IS NOT NULL        
		DROP TABLE #FILTER_RMM        
	          
	 IF OBJECT_ID('TEMPDB..#FILTER_PARCEL','U') IS NOT NULL        
		DROP TABLE #FILTER_PARCEL        
	         
	 SELECT @CONFIG_VALUE=ISNULL(VALUE,0) FROM CONFIG WHERE CONFIG_OPTION='NEW_ACCOUNT_SYSTEM'        
	CREATE TABLE  #FILTER_RMM        (RM_ID VARCHAR(100) ,AC_CODE VARCHAR(100))
	CREATE TABLE #FILTER_PARCEL(REF_MEMO_ID VARCHAR(100),PARCEL_MEMO_ID VARCHAR(100),PARCEL_MEMO_DT DATETIME,PARCEL_MEMO_NO  VARCHAR(100),Angadia_name varchar(1000),
	bilty_No varchar(100),RECEIPT_NO VARCHAR(100),BILTY_DT DATETIME)

	CREATE INDEX IX_1 ON #FILTER_RMM(RM_ID)
		CREATE INDEX IX_2 ON #FILTER_RMM(AC_CODE)
		CREATE INDEX IX_3 ON #FILTER_PARCEL(REF_MEMO_ID)
		CREATE INDEX IX_4 ON #FILTER_PARCEL(PARCEL_MEMO_ID) 
		CREATE INDEX IX_5 ON #FILTER_PARCEL(PARCEL_MEMO_DT)
		CREATE INDEX IX_6 ON #FILTER_PARCEL(PARCEL_MEMO_NO)

	INSERT INTO #FILTER_RMM        (RM_ID ,AC_CODE)        
	SELECT  RMM.RM_ID ,RMM.AC_CODE        
	FROM RMM01106 RMM(NOLOCK)        
	WHERE   RMM.RM_DT BETWEEN @FRMDT AND @TODT   
	 AND ISNULL(rmm.DocAttach,0) = 
	 (CASE wHEN @NDOCATTACH =2 then ISNULL(rmm.DocAttach,0) else @NDOCATTACH end)


	 INSERT INTO #FILTER_PARCEL(REF_MEMO_ID,PARCEL_MEMO_ID ,PARCEL_MEMO_DT,PARCEL_MEMO_NO,Angadia_name  ,bilty_No ,RECEIPT_NO ,BILTY_DT    )  
	 SELECT DISTINCT REF_MEMO_ID,C.PARCEL_MEMO_ID ,C.PARCEL_MEMO_DT,C.PARCEL_MEMO_NO  ,ANGM.Angadia_name ,c.bilty_No      ,C.cash_receipt_no
	 ,C.receipt_dt as bilty_dt
	 --INTO #FILTER_PARCEL         
	 FROM parcel_det  PB        
	 JOIN #FILTER_RMM RM ON RM.RM_ID=PB.REF_MEMO_ID AND PB.AC_CODE=RM.AC_CODE        
	 JOIN PARCEL_MST C ON C.PARCEL_MEMO_ID=PB.PARCEL_MEMO_ID 
	 LEFT JOIN ANGM (NOLOCK) ON ANGM.Angadia_code =C.angadia_code 
	 WHERE  C.XN_TYPE='PRT' and c.cancelled =0


	        
	         


	 SET @cTablename='rmmlist_'+LTRIM(rtrim(str(@@spid)))
	 
	 if OBJECT_ID(@cTablename,'u') is not null
	 begin
		set @cCmd=N'DROP TABLE '+@cTablename
		exec sp_executesql @cCmd
	 end

	 DECLARE @CACPOSTEDFILTER VARCHAR(1000)
	 set @CACPOSTEDFILTER=''
	 IF @ACTSTATUS=2
	         SET @CACPOSTEDFILTER=' where (CASE WHEN V.MEMO_ID IS NOT NULL THEN ''POSTED'' ELSE ''PENDING'' END) =''POSTED'' '
	 ELSE IF @ACTSTATUS=1
	        SET @CACPOSTEDFILTER= 'where (CASE WHEN V.MEMO_ID IS NOT NULL THEN ''POSTED'' ELSE ''PENDING'' END) =''PENDING'' '

	SET @CSTEP=10

	SET @cCmd=N'SELECT CAST((CASE WHEN T1.XN_ITEM_TYPE IN (1,4) THEN ISNULL(L.Enable_EInvoice,0) ELSE 0 END) AS BIT) AS Enable_EInvoice,
	ISNULL(L.loc_gst_no,'''') AS loc_gst_no, (CASE WHEN T1.mode=2 THEN ISNULL(L1.loc_gst_no,'') ELSE ISNULL(T33.Ac_gst_no,'') END) AS [PARTY_GST_NO]
	,T1.RM_ID AS MEMO_ID,T3.AC_NAME,city.CITY,convert(varchar(10),T1.RM_DT,105) AS MEMO_DT        
		,T1.RM_NO AS MEMO_NO,T1.DN_TYPE,T1.mode,T1.APPROVED,T1.CANCELLED ,T1.SUBTOTAL,T1.DISCOUNT_AMOUNT,T1.FREIGHT
		,T1.OTHER_CHARGES ,T1.TOTAL_AMOUNT,F.AC_NAME as broker_ac_name,      
		T1.DISCOUNT_PERCENTAGE ,T1.ROUND_OFF,T1.REMARKS        
		,T1.CN_NO
		,t1.cd_percentage
		,T1.CN_AMOUNT AS CN_AMOUNT,T1.TOTAL_QUANTITY       
		,u.username as USERNAME      
		,u1.username as EDT_USERNAME       
		,T1.FIN_YEAR        
		,COM.COMPANY_CODE        
		,T1.MEMO_TYPE AS ESTIMATE_REGULAR        
		,L.DEPT_ID AS LOC_ID        
		,L.DEPT_NAME AS LOC_NAME         
		,LM.AC_NAME AS  PARCEL_AC_NAME        
		,PB1.PARCEL_MEMO_NO,PARCEL_MEMO_DT as pmemo_Dt       
		,pb1.Angadia_name as Parcel_Transporter_name
		,pb1.bilty_No,pb1.bilty_dt
		,T1.DIFFAMOUNT,T1.EDIT_COUNT,T1.TOTAL_BOX_NO as total_boxes  ,      
		T1.CN_NO AS DN_CN_NO,T1.Total_Gst_Amount,t1.TOTAL_QUANTITY_STR as totqtystr ,
		T1.Total_Gst_Cess_Amount ,ISNULL(T1.EINV_IRN_NO,'''') AS [EINV_IRN_NO],XNTYPE.DisplayMember XN_ITEM_TYPE,
		ISNULL(EMP.EMP_NAME,'''') AS EMP_NAME,ISNULL(OEM1.AC_NAME,'''') AS OEM_AC_NAME,pb1.receipt_no,T1.AUTO_EWAYBILL_NO,
		 (T1.freight_igst_amount + T1.freight_cgst_amount + T1.freight_sgst_amount ) as freight_gst_amount ,
		 (T1.other_charges_cgst_amount + T1.other_charges_igst_amount + T1.other_charges_sgst_amount ) as other_charges_gst_amount
	  INTO '+@cTablename+'      
	 FROM RMM01106 T1 (NOLOCK)         
	 JOIN
	 (
		SELECT ''Inventory'' AS DisplayMember,1 AS XN_ITEM_TYPE
		UNION
		SELECT ''Consumable'' AS DisplayMember,2 AS XN_ITEM_TYPE
		UNION
		SELECT ''Assets'' AS DisplayMember,3 AS XN_ITEM_TYPE
		UNION 
		SELECT ''Services'' AS DisplayMember,4 AS XN_ITEM_TYPE
		UNION 
		SELECT ''Repair/Defective'' AS DisplayMember,5 AS XN_ITEM_TYPE
	 )XNTYPE ON XNTYPE.XN_ITEM_TYPE=isnull(T1.XN_ITEM_TYPE,1)
	 JOIN #FILTER_RMM FT1 (NOLOCK) ON T1.RM_ID=FT1.RM_ID        
	 JOIN LM01106 T3 (NOLOCK) ON T3.AC_CODE = T1.AC_CODE 
	 LEFT OUTER JOIN         LMP01106 T33 (NOLOCK) ON T3.AC_CODE = T33.AC_CODE 
	 LEFT OUTER JOIN city city(NOLOCK) ON city.CITY_CODE=t33.CITY_CODE
	 left JOIN LM01106 F(NOLOCK) ON T1.BROKER_AC_CODE= F.AC_CODE      
	 JOIN users U (NOLOCK) ON T1.user_code=U.user_code      
	 LEFT OUTER JOIN LM01106 LM (NOLOCK) ON LM.AC_CODE=T3.AC_CODE     
	 LEFT OUTER JOIN COMPANY COM ON 1=1 AND COM.COMPANY_CODE=''01''            
	 LEFT OUTER JOIN LOCATION  L (NOLOCK) ON LEFT(T1.RM_ID,2) = L.DEPT_ID         
	 LEFT OUTER JOIN LOCATION  L1 (NOLOCK) ON T1.PARTY_DEPT_ID = L1.DEPT_ID         
	 LEFT OUTER JOIN #FILTER_PARCEL PB1 ON PB1.REF_MEMO_ID=T1.RM_ID        
	 LEFT OUTER JOIN users u1 (NOLOCK) ON T1.edt_user_code=U1.user_code        
	 left join employee emp (nolock) on emp.emp_code =t1.emp_code
	 LEFT OUTER JOIN LM01106 OEM1 (NOLOCK) ON T1.OEM_AC_CODE=OEM1.AC_CODE
	 --LEFT OUTER JOIN LM01106 OEM (NOLOCK) ON T1.SHIPPING_AC_CODE=OEM.AC_CODE AND T1.SHIPPING_MODE=3
	 WHERE T1.RM_DT BETWEEN '''+CONVERT(VARCHAR,@FRMDT,110)+''' AND '''+CONVERT(VARCHAR,@TODT,110)+'''
	 AND T1.DN_TYPE='+(CASE WHEN ISNULL(@DNTTYPE,0)=0 THEN 'T1.DN_TYPE' ELSE  STR(@DNTTYPE) END)+'
	 AND T1.MODE='+(CASE WHEN ISNULL(@DNMODE,0)=0 THEN 'T1.MODE' ELSE  STR(@DNMODE) END)+'   
	 AND T1.AC_CODE='+(CASE WHEN ISNULL(@AC_CODE,'')='' THEN  'T1.AC_CODE' ELSE ''''+@AC_CODE+'''' END)+' 
	 AND isnull(T1.OEM_AC_CODE,'''')='+(CASE WHEN ISNULL(@oem_ac_code,'')='' THEN  'isnull(T1.OEM_AC_CODE,'''')' ELSE ''''+@oem_ac_code+'''' END)+'
	 AND LEFT(T1.RM_ID,2)='+(CASE WHEN ISNULL(@DEPT_ID,'')='' THEN  'LEFT(T1.RM_ID,2)' ELSE ''''+@DEPT_ID+'''' END)+'
	 AND isnull(T1.BROKER_AC_CODE,'''')='+(CASE WHEN ISNULL(@BROKERACCODE,'')='' THEN  'isnull(T1.BROKER_AC_CODE,'''')' ELSE 
	 ''+@BROKERACCODE+'' END)+'
	 AND T1.CANCELLED='+(CASE WHEN ISNULL(@CANCEL,0)=2 THEN 'T1.CANCELLED' ELSE str(@CANCEL) END)+'	
	 AND T1.APPROVED='+(CASE WHEN ISNULL(@APPROVED,0)=0 THEN 'T1.APPROVED' ELSE '1' END)+'
	 AND T1.TAXFORM_STORAGE_MODE='+(CASE WHEN ISNULL(@TAXSTORAGEMODE,0)=0 THEN  'T1.TAXFORM_STORAGE_MODE' 
	 ELSE str(@TAXSTORAGEMODE) END)+'
	 AND LEFT(T1.RM_ID,2)='+(CASE WHEN @LOC='' THEN  'LEFT(T1.RM_ID,2)' ELSE ''''+@LOC+'''' END)+'         
	 AND T1.MEMO_TYPE ='+(CASE WHEN @BMEMOTYPE=0 THEN  'T1.MEMO_TYPE' ELSE '1' END) +' 
	 AND T1.Entry_Mode ='+(CASE WHEN @nEntry_Mode=0 THEN  'T1.Entry_Mode' ELSE rtrim(ltrim(str(@nEntry_Mode))) END)	+ ' 
	 AND isnull(T1.XN_ITEM_TYPE,1) ='+(CASE WHEN @nXnItemType=0 THEN  'isnull(T1.XN_ITEM_TYPE,1)' ELSE rtrim(ltrim(str(@nXnItemType))) END) + ' 
	 AND isnull(T1.bill_challan_mode,0) ='+(CASE WHEN @nbill_challan_mode=2 THEN  'isnull(T1.bill_challan_mode,0)' ELSE rtrim(ltrim(str(@nbill_challan_mode))) END) 
	 --+' 
	 --AND T1.bill_level_tax_method ='+(CASE WHEN @taxmethod=0 THEN  'T1.bill_level_tax_method' ELSE rtrim(ltrim(str(@taxmethod))) END)
	
	print @cCmd
	EXEC SP_EXECUTESQL @cCmd 

	--set @cCmd=N'SELECT 	* from '+@cTableName
	--EXEC SP_EXECUTESQL @cCmd 

	--SELECT @cTableName
	SET @CSTEP=20
	SET @cCmd=N'SELECT CONVERT(VARCHAR,pMEMO_DT,105) as parcel_memo_dt,AC_NAME+CASE WHEN ISNULL(CITY,'''') <> '''' THEN '' - ''+ ISNULL(CITY,'''') ELSE '''' END  AS SUPPLIER_NAME
		,(CASE WHEN DN_TYPE=1 THEN ''REGULAR'' WHEN DN_TYPE=2 THEN ''FINANCIAL'' ELSE '''' END) AS [MEMO_TYPE]            
		,(CASE WHEN MODE=1  THEN ''PARTY DEBIT NOTE'' WHEN MODE=2 THEN ''GROUP DEBIT NOTE'' ELSE '''' END) AS MEMO_MODE            
		,(CASE WHEN APPROVED=1 OR APPROVED=0 THEN ''PENDING FOR APPROVAL'' WHEN APPROVED=2 THEN ''APPROVED''
		  WHEN APPROVED=3 THEN ''DISAPPROVED'' ELSE '''' END) AS [STATUS]             
		,(CASE WHEN CANCELLED = 0 THEN SUBTOTAL ELSE 0 END) AS GROSS_RETURN_VALUE        
		,(CASE WHEN CANCELLED = 0 THEN DISCOUNT_AMOUNT ELSE 0 END) AS DISCOUNT_AMOUNT         
		,(CASE WHEN CANCELLED = 0 THEN FREIGHT ELSE 0 END) AS FREIGHT        
		,(CASE WHEN CANCELLED = 0 THEN OTHER_CHARGES ELSE 0 END) AS OTHER_CHARGES        
		,(CASE WHEN CANCELLED = 0 THEN TOTAL_AMOUNT ELSE 0 END) AS NET_RETURN_VALUE      
		,(CASE WHEN ISNULL(CN_NO,'''')='''' THEN ''NOT RECEIVED''  ELSE ''RECEIVED'' END) AS CN_RECEIVE        
		,(CASE WHEN CANCELLED = 1 OR DN_TYPE=2 THEN 0 ELSE ISNULL(TOTAL_QUANTITY,0) END) AS TOTAL_QUANTITY        
		,(CASE WHEN CANCELLED = 1 OR DN_TYPE=2 THEN '''' ELSE ISNULL(totqtystr,'''') END) AS TOTAL_QUANTITY_STR        
		,(CASE WHEN CANCELLED = 1 THEN ''CANCELLED'' ELSE '''' END) AS CANCELLED         
		,(CASE WHEN v.memo_id is not null THEN ''POSTED'' ELSE ''PENDING'' END) AS AC_POSTED        
		,(CASE WHEN ISNULL(EDIT_COUNT,0)>0 THEN ''EDITED ('' + RTRIM(LTRIM(STR(EDIT_COUNT)))+ '')'' ELSE '''' END ) AS EDIT_COUNT        
		,(CASE WHEN CANCELLED = 1 OR DN_TYPE=2 THEN 0 ELSE ISNULL(TOTAL_BOXes,0) END) AS TOTAL_BOX_NO   
		,*
		 from '+@cTableName+' a
		 LEFT JOIN
		 (SELECT pvl.memo_id FROM VM01106 V (NOLOCK) 
		  JOIN POSTACT_VOUCHER_LINK PVL  (NOLOCK) ON PVL.vm_ID=v.vm_id
		  JOIN '+@cTableName+' b ON b.MEMO_ID=pvl.memo_id
		  where PVL.XN_TYPE IN (''PRT'',''PRTCHO'') AND v.cancelled=0        
		 ) v on  v.memo_id=a.memo_id 
		  '	+@CACPOSTEDFILTER

	  print @cCmd  
	 EXEC SP_EXECUTESQL @cCmd        

END TRY        
BEGIN CATCH        
	 SET @CERRMSG='PROCEDURE - SP_DN_FILTER, STEP - '+@CSTEP+', ERROR MESSAGE - '+ERROR_MESSAGE()        
END CATCH         

IF @CERRMSG<>''        
  SELECT @CERRMSG AS [ERROR_MESSAGE]         
END        
---END OF PROCEDURE - SP_DN_FILTER 
*/