CREATE PROCEDURE SP_SEND_MIRROR_MSTLOC_OPT--(LocId 3 digit change by Sanjay:06-11-2024)
(
 @CTARGETLOCID VARCHAR(5)
)
AS
 BEGIN
   DECLARE @DTSQL NVARCHAR(MAX),@CSTEP VARCHAR(10),@CFILTERCONDITION NVARCHAR(MAX)
           ,@CTABLENAME VARCHAR(100),@CTEMPTABLE VARCHAR(100),@CTEMPLMTABLE VARCHAR(100)
           ,@CTEMPLMPTABLE VARCHAR(100),@CTEMPDBNAME VARCHAR(200),@CCURDEPTID VARCHAR(5)
           ,@CHODEPTID VARCHAR(5),@CERRORMSG VARCHAR(MAX),@CREPLOCTABLE VARCHAR(500),@NLOCTYPE INT
           ,@CLOCMERGINGTHRUWIZCOM VARCHAR(4),@JOINMASTERTABLE VARCHAR(200),@JOINTEMPTABLE VARCHAR(200),
           @CTEMPLMTABLE1 VARCHAR(100),@JOINTEMPTABLE1 VARCHAR(200),@CCOUNTRYCODE CHAR(7),@NCOUNTRYTYPE BIT,
		   @NFLOWXONFIG BIT

    
    BEGIN TRY
    
	SET @CSTEP=10

	
	
	 
	SET @CSTEP=20

	SELECT @CCURDEPTID = VALUE FROM CONFIG WHERE CONFIG_OPTION='LOCATION_ID'
	SELECT @CHODEPTID = VALUE FROM CONFIG WHERE  CONFIG_OPTION='HO_LOCATION_ID'		
	
	IF @CCURDEPTID<>@CHODEPTID
	BEGIN
		SELECT '' AS LAST_UPDATE,'' AS ERRMSG
		
		GOTO END_PROC
	END	
	


		SET @CSTEP=40--LOCATION
			SELECT 'MSTLOC_LOCATION_MIRROR' AS TARGET_TABLENAME,*,1 AS PICK_FROM_CURRENT_DB FROM LOCATION(NOLOCK)


		SET @CSTEP=50--CONFIG_ATTR
			SELECT 'MSTLOC_CONFIG_ATTR_MIRROR' AS TARGET_TABLENAME,*,1 AS PICK_FROM_CURRENT_DB FROM CONFIG_ATTR(NOLOCK)

			SELECT 'MSTLOC_CONFIG_BUYERORDER_MIRROR' AS TARGET_TABLENAME,*,1 AS PICK_FROM_CURRENT_DB FROM CONFIG_BUYERORDER(NOLOCK)		
		SET @CSTEP =52
		SELECT TOP 1 @CCOUNTRYCODE=COUNTRY_CODE,@NFLOWXONFIG= isnull(A.ENFORCE_OTP_BASED_GR,0) FROM LOCATION A(NOLOCK) 
		JOIN AREA B(NOLOCK) ON A.AREA_CODE=B.AREA_CODE
		JOIN CITY C(NOLOCK) ON C.CITY_CODE=B.CITY_CODE
		JOIN STATE D(NOLOCK) ON D.STATE_CODE=C.STATE_CODE
		JOIN REGIONM E(NOLOCK) ON E.REGION_CODE=D.REGION_CODE
		WHERE DEPT_ID=@CTARGETLOCID

		IF ISNULL(@CCOUNTRYCODE,'') NOT IN ('0000000','')
		BEGIN
			SET @NCOUNTRYTYPE=1
		END	

		DECLARE @CDONOT_MERGE_LOYALTY_USERID_PWD_FROM_HO VARCHAR(10)

		SELECT @CDONOT_MERGE_LOYALTY_USERID_PWD_FROM_HO=value  FROM config WHERE  config_option ='DONOT_MERGE_LOYALTY_USERID_PWD_FROM_HO'
		
			

		SET @CSTEP=60--CONFIG
			SELECT DISTINCT 'MSTLOC_CONFIG_MIRROR' AS TARGET_TABLENAME,config_option,value,row_id,last_update,TS, 
			@CTARGETLOCID AS DEPT_ID,REMARKS,1 AS PICK_FROM_CURRENT_DB FROM CONFIG A (NOLOCK) 
			WHERE ISNULL(SET_AT_HO,0)=1 OR config_option='NEW_DATA_ARCHIVING_DATE'
			
			--- FRANCHISE_LOC_LEDGER_SETUP
			--select * from config where config_option like '%cam%'
			
		SET @CSTEP=65
		SELECT DISTINCT 'MSTLOC_FRANCHISE_LOC_LEDGER_SETUP_MIRROR' AS TARGET_TABLENAME,
		LM.*,1 AS PICK_FROM_CURRENT_DB  FROM FRANCHISE_LOC_LEDGER_SETUP LM WITH(NOLOCK) 
		


		SET @CSTEP=70
			SELECT DISTINCT 'MSTLOC_LM01106_MIRROR' AS TARGET_TABLENAME,LM.*,1 AS PICK_FROM_CURRENT_DB  FROM LM01106 LM WITH(NOLOCK) 
			JOIN LOCATION L WITH(NOLOCK) ON LM.AC_CODE = L.DEPT_AC_CODE

		SET @CSTEP=80
			SELECT DISTINCT 'MSTLOC_LMP01106_MIRROR' AS TARGET_TABLENAME,A.*,1 AS PICK_FROM_CURRENT_DB FROM DBO.LMP01106 A WITH(NOLOCK) 
			JOIN  LM01106 LM WITH(NOLOCK) ON LM.AC_CODE=A.AC_CODE
			JOIN LOCATION L WITH(NOLOCK) ON LM.AC_CODE = L.DEPT_AC_CODE

		SET @CSTEP=90
			SELECT DISTINCT 'MSTLOC_HD01106_MIRROR' AS TARGET_TABLENAME,A.*,1 AS PICK_FROM_CURRENT_DB  FROM DBO.HD01106 A WITH(NOLOCK) 
			WHERE A.HEAD_CODE NOT BETWEEN '0000000001' AND '0000000031'


		SET @CSTEP=100
			SELECT DISTINCT 'MSTLOC_BIN_MIRROR' AS TARGET_TABLENAME,*,1 AS PICK_FROM_CURRENT_DB FROM DBO.BIN WITH(NOLOCK)

		SET @CSTEP=110  
			SELECT 'MSTLOC_BIN_LOC_MIRROR' AS TARGET_TABLENAME,*,1 AS PICK_FROM_CURRENT_DB  FROM DBO.BIN_LOC WITH(NOLOCK)
		  

		SET @CSTEP=120
			SELECT 'MSTLOC_AREA_MIRROR' AS TARGET_TABLENAME,A.*,1 AS PICK_FROM_CURRENT_DB FROM AREA A WITH(NOLOCK) JOIN LOCATION L WITH(NOLOCK) ON A.AREA_CODE = L.AREA_CODE
			UNION
			SELECT 'MSTLOC_AREA_MIRROR' AS TARGET_TABLENAME,A.*,1 AS PICK_FROM_CURRENT_DB FROM AREA A WITH(NOLOCK) 
			JOIN LMP01106 LP WITH(NOLOCK) ON A.AREA_CODE = LP.AREA_CODE
			JOIN LM01106 LM WITH(NOLOCK) ON LM.AC_CODE=LP.AC_CODE
			JOIN LOCATION L WITH(NOLOCK) ON LM.AC_CODE = L.DEPT_AC_CODE


		SET @CSTEP=130
			SELECT DISTINCT 'MSTLOC_CITY_MIRROR' AS TARGET_TABLENAME,A.*,1 AS PICK_FROM_CURRENT_DB FROM CITY A WITH(NOLOCK) 
			JOIN AREA  WITH(NOLOCK) ON AREA.city_code=A.CITY_CODE
			JOIN LOCATION L WITH(NOLOCK) ON AREA.AREA_CODE = L.AREA_CODE
			UNION
			SELECT DISTINCT 'MSTLOC_CITY_MIRROR' AS TARGET_TABLENAME,A.* ,1 AS PICK_FROM_CURRENT_DB FROM CITY A WITH(NOLOCK) 
			JOIN AREA B WITH(NOLOCK) ON B.city_code=A.CITY_CODE
			JOIN LMP01106 LP WITH(NOLOCK) ON B.AREA_CODE = LP.AREA_CODE
			JOIN LM01106 LM WITH(NOLOCK) ON LM.AC_CODE=LP.AC_CODE
			JOIN LOCATION L WITH(NOLOCK) ON LM.AC_CODE = L.DEPT_AC_CODE



		SET @CSTEP=140
			SELECT DISTINCT 'MSTLOC_STATE_MIRROR' AS TARGET_TABLENAME,A.*,1 AS PICK_FROM_CURRENT_DB FROM STATE A
			JOIN CITY  WITH(NOLOCK) ON CITY.state_code=a.state_code 
			JOIN AREA  WITH(NOLOCK) ON AREA.city_code=CITY.CITY_CODE
			JOIN LOCATION L WITH(NOLOCK) ON AREA.AREA_CODE = L.AREA_CODE
			UNION
			SELECT DISTINCT 'MSTLOC_STATE_MIRROR' AS TARGET_TABLENAME,A.*,1 AS PICK_FROM_CURRENT_DB FROM STATE A WITH(NOLOCK)
			JOIN CITY WITH(NOLOCK) ON CITY.state_code=A.state_code
			JOIN AREA B WITH(NOLOCK) ON B.city_code=CITY.CITY_CODE
			JOIN LMP01106 LP WITH(NOLOCK) ON B.AREA_CODE = LP.AREA_CODE
			JOIN LM01106 LM WITH(NOLOCK) ON LM.AC_CODE=LP.AC_CODE
			JOIN LOCATION L WITH(NOLOCK) ON LM.AC_CODE = L.DEPT_AC_CODE


		SET @CSTEP=150--REGIONM
			SELECT DISTINCT 'MSTLOC_REGIONM_MIRROR' AS TARGET_TABLENAME,A.*,1 AS PICK_FROM_CURRENT_DB FROM REGIONM A(NOLOCK)
			JOIN STATE (NOLOCK) ON STATE.region_code=A.region_code
			JOIN CITY  WITH(NOLOCK) ON CITY.state_code=state.state_CODE 
			JOIN AREA  WITH(NOLOCK) ON AREA.city_code=CITY.CITY_CODE
			JOIN LOCATION L WITH(NOLOCK) ON AREA.AREA_CODE = L.AREA_CODE
			UNION
			SELECT DISTINCT 'MSTLOC_REGIONM_MIRROR' AS TARGET_TABLENAME,A.*,1 AS PICK_FROM_CURRENT_DB  FROM REGIONM A WITH(NOLOCK)
			JOIN STATE  WITH(NOLOCK) ON state.region_code=A.region_code
			JOIN CITY WITH(NOLOCK) ON CITY.state_code=STATE.state_code
			JOIN AREA B WITH(NOLOCK) ON B.city_code=CITY.CITY_CODE
			JOIN LMP01106 LP WITH(NOLOCK) ON B.AREA_CODE = LP.AREA_CODE
			JOIN LM01106 LM WITH(NOLOCK) ON LM.AC_CODE=LP.AC_CODE
			JOIN LOCATION L WITH(NOLOCK) ON LM.AC_CODE = L.DEPT_AC_CODE


		SET @CSTEP=160
			SELECT DISTINCT 'MSTLOC_GST_TNC_MIRROR' AS TARGET_TABLENAME,*,1 AS PICK_FROM_CURRENT_DB FROM GST_TNC(NOLOCK)
		SET @CSTEP=170
			SELECT DISTINCT 'MSTLOC_GST_QUOTATION_MST_MIRROR' AS TARGET_TABLENAME,*,1 AS PICK_FROM_CURRENT_DB FROM GST_QUOTATION_MST(NOLOCK)
		SET @CSTEP=180
			SELECT 'MSTLOC_GST_REPORT_CONFIG_MIRROR' AS TARGET_TABLENAME,*,1 AS PICK_FROM_CURRENT_DB FROM GST_REPORT_CONFIG(NOLOCK)
		SET @CSTEP=190
			SELECT 'MSTLOC_GST_COMPANY_CONFIG_MIRROR' AS TARGET_TABLENAME,*,1 AS PICK_FROM_CURRENT_DB FROM GST_COMPANY_CONFIG(NOLOCK)
		SET @CSTEP=195	
			SELECT 'MSTLOC_GST_SLS_CUSTOMER_CONFIG_MIRROR' AS TARGET_TABLENAME,*,1 AS PICK_FROM_CURRENT_DB FROM GST_SLS_CUSTOMER_CONFIG(NOLOCK)
		SET @CSTEP=200
			SELECT 'MSTLOC_GST_XN_FORMAT_MIRROR' AS TARGET_TABLENAME,*,1 AS PICK_FROM_CURRENT_DB FROM GST_XN_FORMAT(NOLOCK)
		SET @CSTEP=210
			SELECT 'MSTLOC_GST_XN_DETAIL_MIRROR' AS TARGET_TABLENAME,*,1 AS PICK_FROM_CURRENT_DB FROM GST_XN_DETAIL(NOLOCK)
		SET @CSTEP=220
			SELECT 'MSTLOC_LUCKY_DRAW_LOC_MIRROR' AS TARGET_TABLENAME,*,1 AS PICK_FROM_CURRENT_DB FROM DBO.LUCKY_DRAW_LOC(NOLOCK)
		SET @CSTEP=230
			SELECT 'MSTLOC_LUCKY_DRAW_SETUP_MIRROR' AS TARGET_TABLENAME,*,1 AS PICK_FROM_CURRENT_DB FROM DBO.LUCKY_DRAW_SETUP(NOLOCK)
		SET @CSTEP=231
	        SELECT  'MSTLOC_MEASUREMENT_MST_MIRROR' AS TARGET_TABLENAME,*,1 AS PICK_FROM_CURRENT_DB FROM MEASUREMENT_MST(NOLOCK)
		--SET @CSTEP=235
		--	SELECT 'MSTLOC_GST_XN_FORMAT_MIRROR' AS TARGET_TABLENAME,*,1 AS PICK_FROM_CURRENT_DB FROM DBO.LUCKY_DRAW_SETUP(NOLOCK)

		DECLARE @BMAINTAINSERIESSETUPATHO BIT,@CTEMPSERIESTABLE VARCHAR(200)

		SELECT TOP 1 @BMAINTAINSERIESSETUPATHO=ISNULL(MAINTAIN_SERIES_SETUP_AT_HO,0) FROM LOCATION WHERE DEPT_ID=@CTARGETLOCID

		IF @BMAINTAINSERIESSETUPATHO=1 OR @CTARGETLOCID=@CCURDEPTID
		BEGIN
			SET @CSTEP=240
				SELECT 'MSTLOC_SERIES_SETUP_MST_MIRROR' AS TARGET_TABLENAME,*,1 AS PICK_FROM_CURRENT_DB FROM SERIES_SETUP_MST 
				WHERE (@CTARGETLOCID=@CCURDEPTID) OR (  DEPT_ID=@CTARGETLOCID)

			SET @CSTEP=250
				SELECT 'MSTLOC_SERIES_SETUP_MANUAL_DET_MIRROR' AS TARGET_TABLENAME,*,1 AS PICK_FROM_CURRENT_DB FROM SERIES_SETUP_MANUAL_DET A 
				JOIN SERIES_SETUP_MST B ON A.memo_id=B.memo_id
				WHERE B.DEPT_ID=@CTARGETLOCID		
		END

		--NEW ADD FOR ALTERATION SETUP 
		  SELECT  'MSTLOC_ALTERATIONSETUP_MIRROR' AS TARGET_TABLENAME,*,1 AS PICK_FROM_CURRENT_DB FROM ALTERATIONSETUP (NOLOCK)
		  WHERE (isnull(DEPT_ID,'')='' or DEPT_ID= @CTARGETLOCID)

		  SELECT DISTINCT   'MSTLOC_SECTIOND_MIRROR' AS TARGET_TABLENAME,B.*,1 AS PICK_FROM_CURRENT_DB FROM ALTERATIONSETUP (NOLOCK) A
		  JOIN SECTIOND  B (NOLOCK) ON A.SUB_SECTION_CODE =B.SUB_SECTION_CODE
		  WHERE (ISNULL(A.DEPT_ID,'')='' OR A.DEPT_ID= @CTARGETLOCID)


		  SET @CSTEP=260
		  SELECT DISTINCT   'MSTLOC_SECTIONM_MIRROR' AS TARGET_TABLENAME,B.*,1 AS PICK_FROM_CURRENT_DB FROM ALTERATIONSETUP (NOLOCK) A
		  JOIN SECTIONM  B (NOLOCK) ON A.SECTION_CODE =B.SECTION_CODE
		  WHERE (ISNULL(A.DEPT_ID,'')='' OR A.DEPT_ID= @CTARGETLOCID)
		  UNION
		  SELECT DISTINCT   'MSTLOC_SECTIONM_MIRROR' AS TARGET_TABLENAME,SM.*,1 AS PICK_FROM_CURRENT_DB FROM ALTERATIONSETUP (NOLOCK) A
		  JOIN SECTIOND  B (NOLOCK) ON A.SUB_SECTION_CODE =B.SUB_SECTION_CODE
		  JOIN SECTIONM SM ON SM.section_code =B.section_code 
		  WHERE (ISNULL(A.DEPT_ID,'')='' OR A.DEPT_ID= @CTARGETLOCID)

          SET @CSTEP=270

		  SELECT DISTINCT   'MSTLOC_JOBS_MIRROR' AS TARGET_TABLENAME,B.*,1 AS PICK_FROM_CURRENT_DB FROM ALTERATIONSETUP (NOLOCK) A
		  JOIN JOBS  B (NOLOCK) ON A.JOB_CODE =B.JOB_CODE
		  WHERE (ISNULL(A.DEPT_ID,'')='' OR A.DEPT_ID= @CTARGETLOCID)

		  SELECT  'MSTLOC_PREFIX_MIRROR' AS TARGET_TABLENAME,*,1 AS PICK_FROM_CURRENT_DB FROM prefix(NOLOCK)

		  --Now onwards COnfig_loc table data should not be flown to Pos as discussed in Evening meeting (12-02-2022)
		  --We have to retain this step to return blank becuase of Error in case Ho gets upgraded but Pos does not
		

		  --END OF ALTERATION SETUP

		   SET @CSTEP=280
		    SELECT DISTINCT   'MSTLOC_LM_BANK_DETAIL_MIRROR' AS TARGET_TABLENAME,B.*,1 AS PICK_FROM_CURRENT_DB FROM LOCATION A
			JOIN LM_BANK_DETAIL B (NOLOCK) ON A.CONTROL_AC_CODE =B.AC_CODE 
			WHERE A.DEPT_ID =@CTARGETLOCID


		    SELECT DISTINCT   'MSTLOC_UOM_MIRROR' AS TARGET_TABLENAME,a.*,1 AS PICK_FROM_CURRENT_DB FROM uom  A

			SELECT DISTINCT   'MSTLOC_MSTPOSCATEGORY_MIRROR' AS TARGET_TABLENAME,a.*,1 AS PICK_FROM_CURRENT_DB FROM MSTPOSCATEGORY A (NOLOCK)
			
			SELECT DISTINCT   'MSTLOC_POSCATEGORYSTKRESTRICTIONS_MIRROR' AS TARGET_TABLENAME,a.*,1 AS PICK_FROM_CURRENT_DB FROM POSCATEGORYSTKRESTRICTIONS A (NOLOCK)
			

		    SELECT DISTINCT   'MSTLOC_TILL_DENO_MST_MIRROR' AS TARGET_TABLENAME,a.*,1 AS PICK_FROM_CURRENT_DB FROM TILL_DENO_MST  A (nolock) where inactive =0

			SET @CSTEP=290

			SELECT DISTINCT  'MSTLOC_LOC_BILLING_RULES_MIRROR' AS TARGET_TABLENAME,LOC_BILLING_RULES.*,1 AS PICK_FROM_CURRENT_DB FROM LOC_BILLING_RULES (NOLOCK)
			
			SELECT DISTINCT  'MSTLOC_LOC_BILLING_RULES_ALLLOC_MIRROR' AS TARGET_TABLENAME,LOC_BILLING_RULES_allloc.*,1 AS PICK_FROM_CURRENT_DB FROM LOC_BILLING_RULES_allloc (NOLOCK) where source_dept_id =@CTARGETLOCID
   
            SELECT DISTINCT  'MSTLOC_LOC_BILLING_RULES_FORM_MIRROR' AS TARGET_TABLENAME,LOC_BILLING_RULES_FORM.*,1 AS PICK_FROM_CURRENT_DB FROM LOC_BILLING_RULES_FORM (NOLOCK)

            SELECT DISTINCT  'MSTLOC_LOC_BILLING_RULES_SERIES_MIRROR' AS TARGET_TABLENAME,LOC_BILLING_RULES_SERIES.*,1 AS PICK_FROM_CURRENT_DB FROM LOC_BILLING_RULES_SERIES (NOLOCK)

			SELECT DISTINCT  'MSTLOC_IMAGE_INFO_CONFIG_MIRROR' AS TARGET_TABLENAME,IMAGE_INFO_CONFIG.*,1 AS PICK_FROM_CURRENT_DB FROM IMAGE_INFO_CONFIG (NOLOCK)
			
			SELECT DISTINCT  'MSTLOC_SHIPPING_MODE_MIRROR' AS TARGET_TABLENAME,SHIPPING_MODE.*,1 AS PICK_FROM_CURRENT_DB FROM SHIPPING_MODE (NOLOCK)			
		   
     
END TRY
	
BEGIN CATCH
	    SET @CERRORMSG='P: SP_SEND_MIRROR_MSTLOC_NEW, STEP:'+@CSTEP+', MESSAGE:'+ERROR_MESSAGE()+ 'ERROR QUERY || '+@DTSQL
	    GOTO END_PROC
END CATCH 
    
END_PROC:
    
    IF ISNULL(@CERRORMSG,'') <> ''
      SELECT ISNULL(@CERRORMSG,'') AS ERRMSG
    ELSE
      SELECT '' AS ERRMSG
    --ELSE
    --   SELECT '' AS ORG_TABLENAME , '' AS TMP_TABLENAME,@CERRORMSG AS [ERRMSG]
END
