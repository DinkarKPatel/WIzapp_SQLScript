CREATE PROCEDURE [DBO].[TIMESLOT_READ] 
(
    @NMODE			       INT=1, --- 1 FOR NRV --2 FOR QUANTITY AND 3 FOR GROSS MARGIN
	@CCONVERSIONFACTOR	   INT=1,--1 FOR DIVIDE BY THOUSAND 2 FOR 10 THOUSAND 3 FOR LAKH   
	@LASTYEARCOMPERISION   INT=0,--0 FOR CURRENT YEAR VALUE AND 1 FOR CUR YEAR PREV YEAR AND CONVERSION FACTOR
	@CDEPTID               VARCHAR(5)='',--LOCATION FILTER
	@I_DATE                DATETIME --DATE FILTER             
)
AS
BEGIN
	SET NOCOUNT ON;

    DECLARE --@ROW_COUNT INT, @TIME_DIFF INT, @STR_TIME DATETIME, @END_TIME DATETIME, @ROW_ID INT,
    @TNRV NUMERIC(18,2),
    @NCONVERSIONAMOUNT NUMERIC(10,0),@TQTY NUMERIC(18,2)
      
    DECLARE @SLSRF TABLE ( XN_DT DATETIME, XN_TIME DATETIME, XN_ID VARCHAR(40), XN_QTY NUMERIC(10,2), XN_NET NUMERIC(10,2) ) 
    DECLARE @SLSPREVRF TABLE ( XN_DT DATETIME, XN_TIME DATETIME, XN_ID VARCHAR(40), XN_QTY NUMERIC(10,2), XN_NET NUMERIC(10,2) )   
      
      
--    SET @STR_TIME = (SELECT START_TIME FROM TIMESLOT);
--    SET @END_TIME = (SELECT END_TIME FROM TIMESLOT);
    
    DECLARE @TBLTIME TABLE ( DSTIME DATETIME, DETIME DATETIME )
    INSERT @TBLTIME SELECT CONVERT(VARCHAR(50),START_TIME),CONVERT(VARCHAR(50),END_TIME) FROM TIMESLOT
    
    IF @CCONVERSIONFACTOR=0
SET @CCONVERSIONFACTOR=1

IF @CCONVERSIONFACTOR=1
       SET @NCONVERSIONAMOUNT=1000
    ELSE IF @CCONVERSIONFACTOR=2
       SET @NCONVERSIONAMOUNT=100000
    ELSE IF @CCONVERSIONFACTOR=3
       SET @NCONVERSIONAMOUNT=10000000
    
IF @NMODE=1
BEGIN
    INSERT @SLSRF ( XN_DT, XN_TIME, XN_ID,  XN_NET ) 
    SELECT	CM_DT, CM_TIME, A.CM_ID,NET_AMOUNT  AS XN_NET
    FROM CMM01106 A (NOLOCK)
    JOIN LOCATION B (NOLOCK) ON A.Location_code/*LEFT(A.CM_ID,2)*//*Rohit 06-11-2024*/=B.DEPT_ID
--
    JOIN TIMESLOT C (NOLOCK) ON A.CM_TIME BETWEEN 
    CAST(CONVERT(DATE,@I_DATE) AS VARCHAR(20))+' '+CAST(CAST(C.START_TIME AS TIME)AS CHAR(12)) AND 
    CAST(CONVERT(DATE,@I_DATE) AS VARCHAR(20))+' '+CAST(CAST(C.END_TIME AS TIME)AS CHAR(12))
    WHERE B.INACTIVE =0
    --AND A.CM_DT BETWEEN @STR_TIME AND @END_TIME
    
    IF @LASTYEARCOMPERISION=1
    BEGIN
--         SET @STR_TIME=(SELECT DATEADD(YEAR,-1,@STR_TIME))
--         SET @END_TIME=(SELECT DATEADD(YEAR,-1,@END_TIME))

         IF OBJECT_ID ('TEMPDB..#TMP_TIMESLOT') IS NOT NULL
         DROP TABLE #TMP_TIMESLOT

    CREATE TABLE #TMP_TIMESLOT(TS VARCHAR(10),START_TIME DATETIME,END_TIME DATETIME) 
    INSERT INTO #TMP_TIMESLOT SELECT * FROM TIMESLOT
--
    UPDATE #TMP_TIMESLOT SET START_TIME = CAST(DATEADD(YEAR,-1,CAST(@I_DATE AS DATE)) AS VARCHAR(20))+' '+CAST(CAST(START_TIME AS TIME)AS CHAR(12))
    UPDATE #TMP_TIMESLOT SET END_TIME =   CAST(DATEADD(YEAR,-1,CAST(@I_DATE AS DATE)) AS VARCHAR(20))+' '+CAST(CAST(END_TIME AS TIME)AS CHAR(12))
       
         INSERT @SLSPREVRF ( XN_DT, XN_TIME, XN_ID,  XN_NET ) 
         SELECT	CM_DT, CM_TIME, A.CM_ID,NET_AMOUNT  AS XN_NET
         FROM CMM01106 A (NOLOCK)
         JOIN LOCATION B (NOLOCK) ON A.Location_code/*LEFT(A.CM_ID,2)*//*Rohit 06-11-2024*/=B.DEPT_ID
         JOIN #TMP_TIMESLOT C ON A.CM_TIME BETWEEN C.START_TIME AND C.END_TIME
         WHERE B.INACTIVE =0 AND A.CANCELLED =0
         --AND A.CM_DT BETWEEN @STR_TIME AND @END_TIME
         
         
            IF OBJECT_ID ('TEMPDB..#TMPNRV','U') IS NOT NULL
            DROP TABLE #TMPNRV
--
         SELECT TIMELINE,SUM(CUR_BILL_AMOUNT) AS CUR_YEAR_NRV,
                CUR_CONT_PER=CAST(0 AS NUMERIC(10,0)),
                SUM(PREV_BILL_AMOUNT) AS PREV_YEAR_NRV,
                PREV_CONT_PER=CAST(0 AS NUMERIC(10,0))
         INTO #TMPNRV
         FROM
         (
         SELECT  LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)AS TIMELINE, 
                 SUM(CASE WHEN DBO.FN_GETTIME( XN_TIME ) BETWEEN DBO.FN_GETTIME( DSTIME ) AND DBO.FN_GETTIME( DETIME ) THEN XN_NET ELSE 0 END ) AS CUR_BILL_AMOUNT,
                 0 AS PREV_BILL_AMOUNT
         FROM @SLSRF, @TBLTIME
         GROUP BY LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)
         UNION ALL
         SELECT  LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)AS TIMELINE, 
                 0 AS CUR_BILL_AMOUNT,
                 SUM(CASE WHEN DBO.FN_GETTIME( XN_TIME ) BETWEEN DBO.FN_GETTIME( DSTIME ) AND DBO.FN_GETTIME( DETIME ) THEN XN_NET ELSE 0 END )  AS PREV_BILL_AMOUNT
         FROM @SLSPREVRF, @TBLTIME
         GROUP BY LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)
         ) A
         GROUP BY TIMELINE
         
         SELECT @TNRV=SUM(ISNULL(CUR_YEAR_NRV ,0)) FROM #TMPNRV
		 UPDATE #TMPNRV SET CUR_CONT_PER =(CUR_YEAR_NRV *100)/CASE WHEN @TNRV=0 THEN 1 ELSE @TNRV END  
		 UPDATE #TMPNRV SET CUR_YEAR_NRV=CUR_YEAR_NRV/@NCONVERSIONAMOUNT
		 
         SELECT @TNRV=SUM(ISNULL(PREV_YEAR_NRV ,0)) FROM #TMPNRV
		 UPDATE #TMPNRV SET PREV_CONT_PER =(PREV_YEAR_NRV *100)/CASE WHEN @TNRV=0 THEN 1 ELSE @TNRV END  
		 UPDATE #TMPNRV SET PREV_YEAR_NRV=PREV_YEAR_NRV/@NCONVERSIONAMOUNT
         
         SELECT STUFF(STUFF(A.TIMELINE,3,0,':'),9,0,':') AS TIMELINE,ISNULL(CUR_YEAR_NRV,0) AS CUR_YEAR_NRV ,
         ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER,
         ISNULL(PREV_YEAR_NRV,0) AS PREV_YEAR_NRV ,
         ISNULL(PREV_CONT_PER ,0) AS PREV_CONT_PER
         FROM #TMPNRV A
         
         GOTO END_PROC
    END  

 ELSE
    BEGIN       
       IF OBJECT_ID ('TEMPDB..#TMPNRV_CUR','U') IS NOT NULL
           DROP TABLE #TMPNRV_CUR
        
        SELECT TIMELINE,SUM(CUR_BILL_AMOUNT) AS CUR_YEAR_NRV,
                CUR_CONT_PER=CAST(0 AS NUMERIC(10,0)),
                SUM(PREV_BILL_AMOUNT) AS PREV_YEAR_NRV,
                PREV_CONT_PER=CAST(0 AS NUMERIC(10,0))
         INTO #TMPNRV_CUR
         FROM
         (
         SELECT  LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)AS TIMELINE, 
                 SUM(CASE WHEN DBO.FN_GETTIME( XN_TIME ) BETWEEN DBO.FN_GETTIME( DSTIME ) AND DBO.FN_GETTIME( DETIME ) THEN XN_NET ELSE 0 END ) AS CUR_BILL_AMOUNT,
                 0 AS PREV_BILL_AMOUNT
         FROM @SLSRF, @TBLTIME
         GROUP BY LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)
         ) A
         GROUP BY TIMELINE
         
		 SELECT @TNRV=SUM(ISNULL(CUR_YEAR_NRV ,0)) FROM #TMPNRV_CUR
		 UPDATE #TMPNRV_CUR SET CUR_CONT_PER =(CUR_YEAR_NRV *100)/CASE WHEN @TNRV=0 THEN 1 ELSE @TNRV END  
		 UPDATE #TMPNRV_CUR SET CUR_YEAR_NRV=CUR_YEAR_NRV/@NCONVERSIONAMOUNT
         
		 SELECT STUFF(STUFF(A.TIMELINE,3,0,':'),9,0,':') AS TIMELINE,ISNULL(CUR_YEAR_NRV,0) AS CUR_YEAR_NRV ,
         ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER
         FROM #TMPNRV_CUR A
		
		
        GOTO END_PROC
       END
END

  ELSE IF @NMODE=2
BEGIN
       
	INSERT @SLSRF ( XN_DT, XN_TIME, XN_ID, XN_QTY ) 
	SELECT	CM_DT, CM_TIME, D.CM_ID, 
			 SUM(QUANTITY) AS XN_QTY
	FROM CMD01106 A (NOLOCK)
	JOIN CMM01106  D (NOLOCK) ON A.CM_ID = D.CM_ID  
	JOIN LOCATION B (NOLOCK) ON D.Location_code/*LEFT(A.CM_ID,2)*//*Rohit 06-11-2024*/=B.DEPT_ID 
	JOIN TIMESLOT C ON D.CM_TIME BETWEEN
--
    CAST(CONVERT(DATE,@I_DATE) AS VARCHAR(20))+' '+CAST(CAST(C.START_TIME AS TIME)AS CHAR(12)) AND 
    CAST(CONVERT(DATE,@I_DATE) AS VARCHAR(20))+' '+CAST(CAST(C.END_TIME AS TIME)AS CHAR(12))
	WHERE B.INACTIVE =0 AND D.CANCELLED =0
--	AND D.CM_DT BETWEEN @STR_TIME AND @END_TIME
    GROUP BY CM_DT, CM_TIME, D.CM_ID
    
    
    IF @LASTYEARCOMPERISION=1
    BEGIN
 --        SET @STR_TIME=(SELECT DATEADD(YEAR,-1,@STR_TIME))
 --        SET @END_TIME=(SELECT DATEADD(YEAR,-1,@END_TIME))
         IF OBJECT_ID ('TEMPDB..#TMP_TIMESLOT_PREV') IS NOT NULL
         DROP TABLE #TMP_TIMESLOT_PREV
 
         CREATE TABLE #TMP_TIMESLOT_PREV(TS VARCHAR(10),START_TIME DATETIME,END_TIME DATETIME) 
         INSERT INTO #TMP_TIMESLOT_PREV SELECT * FROM TIMESLOT
--
    UPDATE #TMP_TIMESLOT SET START_TIME = CAST(DATEADD(YEAR,-1,CAST(@I_DATE AS DATE)) AS VARCHAR(20))+' '+CAST(CAST(START_TIME AS TIME)AS CHAR(12))
    UPDATE #TMP_TIMESLOT SET END_TIME =   CAST(DATEADD(YEAR,-1,CAST(@I_DATE AS DATE)) AS VARCHAR(20))+' '+CAST(CAST(END_TIME AS TIME)AS CHAR(12))
  
       
       
         INSERT @SLSPREVRF ( XN_DT, XN_TIME, XN_ID,  XN_QTY  ) 
         SELECT	CM_DT, CM_TIME, D.CM_ID, 
		 SUM(QUANTITY) AS XN_QTY
		 FROM CMD01106 A (NOLOCK)
		 JOIN CMM01106  D (NOLOCK) ON A.CM_ID = D.CM_ID  
		 JOIN LOCATION B (NOLOCK) ON D.Location_code/*LEFT(A.CM_ID,2)*//*Rohit 06-11-2024*/=B.DEPT_ID
		 JOIN #TMP_TIMESLOT_PREV C ON D.CM_TIME BETWEEN C.START_TIME AND C.END_TIME
		 WHERE B.INACTIVE =0 AND D.CANCELLED =0
--		 AND D.CM_DT BETWEEN @STR_TIME AND @END_TIME
		 GROUP BY CM_DT, CM_TIME, D.CM_ID
         
          IF OBJECT_ID ('TEMPDB..#TMPQTY','U') IS NOT NULL
            DROP TABLE #TMPQTY
            
         SELECT TIMELINE,SUM(CUR_QTY) AS CUR_YEAR_QTY,
                CUR_CONT_PER=CAST(0 AS NUMERIC(10,0)),
                SUM(PREV_QTY) AS PREV_YEAR_QTY,
                PREV_CONT_PER=CAST(0 AS NUMERIC(10,0))
         INTO #TMPQTY
         FROM
         (
         SELECT  LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)AS TIMELINE, 
                 SUM(CASE WHEN DBO.FN_GETTIME( XN_TIME ) BETWEEN DBO.FN_GETTIME( DSTIME ) AND DBO.FN_GETTIME( DETIME ) THEN XN_QTY  ELSE 0 END ) AS CUR_QTY,
                 0 AS PREV_QTY
         FROM @SLSRF, @TBLTIME
         GROUP BY LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)
         UNION ALL
         SELECT  LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)AS TIMELINE, 
                 0 AS CUR_BILL_AMOUNT,
                 SUM(CASE WHEN DBO.FN_GETTIME( XN_TIME ) BETWEEN DBO.FN_GETTIME( DSTIME ) AND DBO.FN_GETTIME( DETIME ) THEN XN_QTY ELSE 0 END )  AS PREV_QTY
         FROM @SLSPREVRF, @TBLTIME
         GROUP BY LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)
         ) A
         GROUP BY TIMELINE
         
         SELECT @TQTY=SUM(ISNULL(CUR_YEAR_QTY ,0)) FROM #TMPQTY
		 UPDATE #TMPQTY SET CUR_CONT_PER =(CUR_YEAR_QTY *100)/CASE WHEN @TNRV=0 THEN 1 ELSE @TNRV END
		 
         SELECT @TQTY=SUM(ISNULL(PREV_YEAR_QTY ,0)) FROM #TMPQTY
		 UPDATE #TMPQTY SET PREV_CONT_PER =(PREV_YEAR_QTY *100)/CASE WHEN @TQTY =0 THEN 1 ELSE @TQTY END  
		 UPDATE #TMPQTY SET PREV_YEAR_QTY=PREV_YEAR_QTY/@NCONVERSIONAMOUNT
         
         SELECT STUFF(STUFF(A.TIMELINE,3,0,':'),9,0,':') AS TIMELINE,ISNULL(CUR_YEAR_QTY,0) AS CUR_YEAR_QTY ,
         ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER,
         ISNULL(PREV_YEAR_QTY,0) AS PREV_YEAR_QTY ,
         ISNULL(PREV_CONT_PER ,0) AS PREV_CONT_PER
         FROM #TMPQTY A
         
         GOTO END_PROC
    END
    ELSE
    BEGIN       
       IF OBJECT_ID ('TEMPDB..#TMPQTY_CUR','U') IS NOT NULL
           DROP TABLE TMPQTY_CUR
        
        SELECT TIMELINE,SUM(CUR_QTY ) AS CUR_YEAR_QTY,
                CUR_CONT_PER=CAST(0 AS NUMERIC(10,0))
         INTO #TMPQTY_CUR
         FROM
         (
         SELECT  LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)AS TIMELINE, 
                 SUM(CASE WHEN DBO.FN_GETTIME( XN_TIME ) BETWEEN DBO.FN_GETTIME( DSTIME ) AND DBO.FN_GETTIME( DETIME ) THEN XN_QTY ELSE 0 END ) AS CUR_QTY,
                 0 AS PREV_BILL_AMOUNT
         FROM @SLSRF, @TBLTIME
         GROUP BY LEFT(DBO.FN_GETTIME( DSTIME ),4) + '-' + LEFT(DBO.FN_GETTIME( DETIME ),4)
         ) A
         GROUP BY TIMELINE
         
		 SELECT @TQTY=SUM(ISNULL(CUR_YEAR_QTY ,0)) FROM #TMPQTY_CUR
		 UPDATE #TMPQTY_CUR SET CUR_CONT_PER =(CUR_YEAR_QTY *100)/CASE WHEN @TNRV=0 THEN 1 ELSE @TNRV END  
		-- UPDATE #TMPQTY_CUR SET CUR_YEAR_QTY=CUR_YEAR_QTY/@NCONVERSIONAMOUNT
         
		 SELECT STUFF(STUFF(A.TIMELINE,3,0,':'),9,0,':') AS TIMELINE,ISNULL(CUR_YEAR_QTY,0) AS CUR_YEAR_QTY ,
         ISNULL(CUR_CONT_PER ,0) AS CUR_CONT_PER
         FROM #TMPQTY_CUR A
		
		
        GOTO END_PROC
       END

GOTO END_PROC
END

END_PROC:

	
END
