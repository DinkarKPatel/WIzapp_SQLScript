CREATE PROCEDURE [DBO].[SAVETRAN_SECTIONM] ---CREATED BY  PPC FRON END DEVELOPER    
(    
 @SECTIONCODE   VARCHAR(7) = '',    
 @SECTIONNAME   VARCHAR(300) = '',    
 @ALIAS      VARCHAR(50) ='',    
 @ISACTIVE     BIT=0 ,    
 @REMARKS     VARCHAR(50)= '',    
 @ERRMSG_OUT   VARCHAR(MAX) OUT ,
 @BDELETE BIT=0   
)    
AS    
BEGIN    
 DECLARE @CSTEP INT,@ERRMSG VARCHAR(1000)    
 DECLARE @TEMP_SECTIONCODE VARCHAR(7) = ''    
     
 BEGIN TRY  
 BEGIN TRANSACTION  
 SET @ERRMSG_OUT = ''    
 SET @ERRMSG=''
 SET @CSTEP=''
	
  IF @BDELETE=1
    BEGIN
    
	 IF @SECTIONCODE='0000000'
	   BEGIN
		   SET @ERRMSG='DEFAULT SECTION CAN NOT BE DELETED'
		   GOTO END_PROC
	   END
	   DELETE FROM SECTIONM WHERE SECTION_CODE  =@SECTIONCODE
	   GOTO END_PROC
    END	
     
  IF (RTRIM(LTRIM(@SECTIONCODE)) = '')    
  BEGIN    
   IF EXISTS(SELECT [SECTION_NAME] FROM [SECTIONM] WHERE [SECTION_NAME] = @SECTIONNAME)    
   BEGIN    
    SET @CSTEP=5    
    SET @ERRMSG_OUT = 'SECTION NAME: '+@SECTIONNAME + ' ALREADY EXIST.'    
    PRINT @ERRMSG_OUT 
    SET @ERRMSG=@ERRMSG_OUT   
   END    
   ELSE    
   BEGIN    
    SET @CSTEP=10    
    EXEC DBO.GETNEXTKEY 'SECTIONM', 'SECTION_CODE', 7, '00', 1, '', 2, @TEMP_SECTIONCODE OUTPUT     
        
    PRINT 'SECTION CODE: ' + @TEMP_SECTIONCODE    
        
    SET @CSTEP=15    
    INSERT SECTIONM ( SECTION_CODE, SECTION_NAME, LAST_UPDATE, ALIAS, INACTIVE, REMARKS, TRIAL_DT, LAST_MODIFIED_ON )        
    VALUES (@TEMP_SECTIONCODE, @SECTIONNAME, GETDATE(), @ALIAS, @ISACTIVE, @REMARKS, GETDATE(), GETDATE())    
        
    SET @ERRMSG_OUT = 'SECTION MASTER: '+ @SECTIONNAME +' CREATED SUCCESSFULLY.'    
    PRINT @ERRMSG_OUT    
   END    
  END    
  ELSE    
  BEGIN    
   SET @TEMP_SECTIONCODE = @SECTIONCODE    
   IF NOT EXISTS(SELECT [SECTION_CODE] FROM [SECTIONM] WHERE [SECTION_CODE] = @SECTIONCODE)    
   BEGIN    
    IF EXISTS(SELECT [SECTION_NAME] FROM [SECTIONM] WHERE [SECTION_NAME] = @SECTIONNAME)    
    BEGIN    
     SET @CSTEP=20    
     SET @ERRMSG_OUT = 'SECTION NAME: '+@SECTIONNAME + ' ALREADY EXIST.'    
     PRINT @ERRMSG_OUT 
     SET @ERRMSG=@ERRMSG_OUT   
    END    
    ELSE    
    BEGIN    
     SET @CSTEP=25    
     EXEC DBO.GETNEXTKEY 'SECTIONM', 'SECTION_CODE', 7, '00', 1, '', 2, @TEMP_SECTIONCODE OUTPUT     
         
     PRINT 'SECTION CODE: ' + @TEMP_SECTIONCODE    
         
     SET @CSTEP=30    
     INSERT SECTIONM ( SECTION_CODE, SECTION_NAME, LAST_UPDATE, ALIAS, INACTIVE, REMARKS, TRIAL_DT, LAST_MODIFIED_ON )        
     VALUES (@TEMP_SECTIONCODE, @SECTIONNAME, GETDATE(), @ALIAS, @ISACTIVE, @REMARKS, GETDATE(), GETDATE())    
         
     SET @ERRMSG_OUT = 'SECTION MASTER: '+ @SECTIONNAME +' CREATED SUCCESSFULLY.'    
     PRINT @ERRMSG_OUT    
    END    
   END    
   ELSE    
   BEGIN    
    SET @CSTEP=30    
    PRINT 'SECTION CODE: ' + @TEMP_SECTIONCODE    
    IF EXISTS(SELECT [SECTION_NAME] FROM [SECTIONM] WHERE [SECTION_NAME] = @SECTIONNAME AND [SECTION_CODE]  <> @TEMP_SECTIONCODE)
	BEGIN
		SET @CSTEP=20
		SET @ERRMSG_OUT = 'SECTION NAME: '+@SECTIONNAME + ' ALREADY EXIST.'
		PRINT @ERRMSG_OUT
		SET @ERRMSG=@ERRMSG_OUT
	END
	ELSE
	BEGIN	   
    UPDATE [SECTIONM]    
    SET [SECTION_NAME] = @SECTIONNAME,     
      LAST_UPDATE = GETDATE(),     
      ALIAS = @ALIAS,     
      INACTIVE = @ISACTIVE,     
      REMARKS = @REMARKS,     
      TRIAL_DT = GETDATE(),     
      LAST_MODIFIED_ON = GETDATE()    
    WHERE SECTION_CODE = @TEMP_SECTIONCODE    
    
    END     
    SET @ERRMSG_OUT = 'SECTION MASTER: '+ @SECTIONNAME +' UPDTED SUCCESSFULLY.'    
    PRINT @ERRMSG_OUT    
   END    
  END    
 END TRY      
 BEGIN CATCH      
  SET @ERRMSG_OUT='ERROR: [P]: SAVETRAN_SECTIONM, [STEP]: '+CAST(@CSTEP AS VARCHAR(5))+', [MESSAGE]: ' + ERROR_MESSAGE()    
  PRINT @ERRMSG_OUT  
  SET @ERRMSG=@ERRMSG_OUT   
  GOTO END_PROC      
 END CATCH       
    
END_PROC:

	IF @@TRANCOUNT>0
	BEGIN
		IF ISNULL( @ERRMSG,'')='' 
			COMMIT TRANSACTION
			
		ELSE
			ROLLBACK
	END

	SELECT @ERRMSG AS ERRMSG
		
     
END
