create PROCEDURE SP_PENDING_VOUCHER
(
 @CDEPTID VARCHAR(4)='',
 @CACCODE VARCHAR(10)=''
)
--WITH ENCRYPTION
AS
BEGIN
--(dinkar) Replace  left(memoid,2) to Location_code 
       DECLARE @CCUTOFFDATE DATETIME,@CFINYEAR VARCHAR(10),@CCUTOFFDATE_PRT DATETIME
       
       SELECT TOP 1 @CCUTOFFDATE=CUTOFFDATE FROM PURCONFIGMST
	   SELECT TOP 1 @CCUTOFFDATE_PRT=CUTOFFDATE FROM PRTCONFIGMST
	   SELECT @CFINYEAR='01'+CAST(DBO.FN_GETFINYEAR(GETDATE()) AS VARCHAR(10))
	   
	  
       IF OBJECT_ID('TEMPDB..#TMPPENDING','U') IS NOT NULL
				DROP TABLE #TMPPENDING 
			
			--THIS TABLE STORE ALL PENDING MEMO_ID 
  CREATE TABLE #TMPPENDING (SR INT,AC_NAME VARCHAR(100),MEMO_ID VARCHAR(100),MODE VARCHAR(10),BILL_NO VARCHAR(100),BILL_DT DATETIME,AMOUNT NUMERIC(12,2),TYPE VARCHAR(20))
			
  INSERT INTO #TMPPENDING(SR,AC_NAME,MEMO_ID  ,MODE ,BILL_NO ,BILL_DT,AMOUNT ,TYPE)
  SELECT 1,LM.AC_NAME, A.MRR_ID,'PUR' AS MODE,A.BILL_NO,A.INV_DT,A.TOTAL_AMOUNT,
         CASE WHEN VM.LAST_UPDATE IS NOT NULL THEN 'RE POSTING' 
              WHEN VM.LAST_UPDATE IS NULL AND A.APPROVEDLEVELNO=99 THEN 'APPROVED' 
              ELSE 'NOT APPROVED' END AS TYPE 
	        FROM PIM01106 A
	        JOIN LM01106 LM ON A.AC_CODE =LM.AC_CODE 
	        LEFT OUTER JOIN 
	        (
				SELECT B.MEMO_ID,B.LAST_UPDATE
				FROM POSTACT_VOUCHER_LINK B 
				JOIN VM01106 C ON C.VM_ID = B.VM_ID 
				WHERE C.CANCELLED=0 AND B.XN_TYPE = 'PUR' 
	        )VM  ON A.MRR_ID = VM.MEMO_ID  
	        WHERE  
	        A.MEMO_TYPE=1
	        /*PURCHASE IS NOT CANCELLED OR PURCHASE IS CANCELLED AND VOUCHER IS NOT CANCELLED.*/
	        AND ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)	 
	        /*PURCHASE IS FINAL BILL FOR SUPPLIER.*/
	        AND A.BILL_CHALLAN_MODE=0 
	       -- AND ISNULL(A.PIM_MODE,0)<>5
	        /*PURCHASE INV_DT IS LESS THAN THE SPECIFIED DATE.*/
	        --AND A.FIN_YEAR  =@CFINYEAR
	        /*IF CUTOFF DATE IS SPECIFIED, CONSIDER PURCHASE AFTER THE CUTOFF DATE*/
	        AND (ISNULL(@CCUTOFFDATE,'')='' OR A.INV_DT>@CCUTOFFDATE)
	        /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO THAT ELSE APPLY IT TO MRR_NO FOR LOCATION.*/
	        AND (ISNULL(@CDEPTID,'')='' OR 
				(CASE WHEN ISNULL(A.ACCOUNTS_DEPT_ID,'')='' 
					THEN a.location_Code  
					ELSE A.ACCOUNTS_DEPT_ID END)=@CDEPTID)
	        /*PURCHASE IS NOT GROUP/BRANCH PURCHASE*/
	        AND A.INV_MODE<>2 
	        /*PURCHASE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/
	        AND (VM.MEMO_ID IS  NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE) 
	        AND (@CACCODE='' OR A.AC_CODE=@CACCODE)
	     
	   --     UNION ALL
	   --     --GET LIST OF PURCHASE BILLS FROM CONVERT MRN TO BILL MODULE FOR LOCATIONS WHERE APPROVAL IS ENABLED
	   --     SELECT 2,LM.AC_NAME, A.MRR_ID AS  MEMO_ID,'PBM' AS MODE,A.INV_NO AS BILL_NO,A. INV_DT AS BILL_DT ,PIM.PUR_TOTAL_AMOUNT AS TOTAL_AMOUNT,
	   --     CASE WHEN VM.LAST_UPDATE IS NOT NULL THEN 'RE POSTING' 
    --        WHEN VM.LAST_UPDATE IS NULL AND A.APPROVEDLEVELNO=99 THEN 'APPROVED' 
    --        ELSE 'NOT APPROVED' END AS TYPE 
	   --     FROM PIM01106  A
	   --     JOIN LM01106 LM ON A.AC_CODE =LM.AC_CODE 
	   --     LEFT OUTER JOIN 
	   --     (
				--SELECT B.MEMO_ID,B.LAST_UPDATE
				--FROM POSTACT_VOUCHER_LINK B 
				--JOIN VM01106 C ON C.VM_ID = B.VM_ID 
				--WHERE C.CANCELLED=0 AND B.XN_TYPE = 'PBM' 
	   --     )VM  ON A.MRR_ID = VM.MEMO_ID 
	   --     JOIN
	   --     (
	   --     SELECT A.MRR_ID AS MEMO_ID,SUM(TOTAL_AMOUNT) AS PUR_TOTAL_AMOUNT
	   --     FROM PIM01106 A JOIN
	   --     ( 
	   --     SELECT MRR_ID AS  REF_MRR_ID
	   --     FROM PID01106 
	   --     ) B ON A.MRR_ID=B.REF_MRR_ID
	   --    -- WHERE MEMO_ID='0101118000000100000016'
	   --     GROUP BY A.MRR_ID
	        
	   --     )PIM ON PIM.MEMO_ID=A.MRR_ID  
	   --     WHERE  ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)	
	   --     AND ISNULL(A.PIM_MODE,0)=5 
	   --     AND (ISNULL(@CCUTOFFDATE,'')='' OR A.INV_DT >@CCUTOFFDATE)
	   --     /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO THAT ELSE APPLY IT TO MEMO_NO FOR LOCATION.*/
	   --     AND (ISNULL(@CDEPTID,'')='' OR LEFT(A.MRR_NO ,2)=@CDEPTID)
	   --     /*PURCHASE IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/
	   --     AND (VM.MEMO_ID  IS  NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE) 
	   --     AND (@CACCODE='' OR A.AC_CODE=@CACCODE)
	        UNION ALL
	        
	        SELECT 3,LM.AC_NAME, A.RM_ID,'PRT' AS MODE ,RM_NO AS BILL_NO,RM_DT AS BILL_DT,A.TOTAL_AMOUNT,
	        CASE WHEN VM.LAST_UPDATE IS NOT NULL THEN 'RE POSTING' 
            WHEN VM.LAST_UPDATE IS NULL AND A.APPROVEDLEVELNO=99 THEN 'APPROVED' 
            ELSE 'NOT APPROVED' END AS TYPE 
	        FROM RMM01106 A
	        JOIN LM01106 LM ON A.AC_CODE =LM.AC_CODE 
	        JOIN LOCATION SL ON a.location_Code =SL.DEPT_ID
	        LEFT JOIN LOCATION TL ON A.PARTY_DEPT_ID=TL.DEPT_ID
	        LEFT OUTER JOIN 
	        (
				SELECT B.MEMO_ID,B.LAST_UPDATE
				FROM POSTACT_VOUCHER_LINK B 
				JOIN VM01106 C ON C.VM_ID = B.VM_ID 
				WHERE C.CANCELLED=0 AND B.XN_TYPE = 'PRT' 
	        )VM  ON A.RM_ID = VM.MEMO_ID  
	        WHERE  A.MEMO_TYPE=1
	        /*PURCHASE RETURN IS NOT CANCELLED.*/
	        AND ((A.CANCELLED=1 AND VM.MEMO_ID IS NOT NULL) OR A.CANCELLED=0)	 
	        AND (ISNULL(@CCUTOFFDATE_PRT,'')='' OR A.RM_DT>@CCUTOFFDATE_PRT)
	        /*IF ACCOUNTS_DEPT_ID IS FILLED UP APPLY FILTER TO THAT ELSE APPLY IT TO RM_NO FOR LOCATION.*/
	        AND (ISNULL(@CDEPTID,'')='' OR 
				(CASE WHEN ISNULL(A.ACCOUNTS_DEPT_ID,'')='' THEN a.location_Code  ELSE A.ACCOUNTS_DEPT_ID END)=@CDEPTID)
	        /*PURCHASE RETURN IS NOT GROUP/BRANCH PURCHASE RETURN*/
	        AND (ISNULL(A.PARTY_DEPT_ID,'')='' OR SL.LOC_TYPE=2 OR TL.LOC_TYPE=2)	  
	        /*PURCHASE RETURN IS NOT POSTED OR CORRESPONDING VOUCHER IS NOT CANCELLED*/
	        AND (VM.MEMO_ID IS NULL OR VM.LAST_UPDATE <> A.LAST_UPDATE) 
	        AND (@CACCODE='' OR A.AC_CODE=@CACCODE)
	       
	       
	       SELECT * FROM #TMPPENDING
	       ORDER BY AC_NAME,MEMO_ID 
	      

END
