CREATE PROCEDURE SAVETRAN_EOSSDN  
(  
	 @NUPDATEMODE  NUMERIC(1,0),  
	 @NSPID    VARCHAR(40),  
	 @CMEMONOPREFIX  VARCHAR(50),  
	 @CFINYEAR   VARCHAR(10),  
	 @CMEMOID   VARCHAR(40)=''
	
)  
--WITH ENCRYPTION
AS  
BEGIN  
 DECLARE   @CTEMPDBNAME   VARCHAR(100),  
		   @CMASTERTABLENAME  VARCHAR(100),  
		   @CDETAILTABLENAME  VARCHAR(100),  
		   @CTEMPMASTERTABLENAME VARCHAR(100),  
		   @CTEMPDETAILTABLENAME VARCHAR(100),  
		   @CTEMPMASTERTABLE  VARCHAR(100),  
		   @CTEMPDETAILTABLE  VARCHAR(100),  
		   @CERRMSG    VARCHAR(500),  
		   @CKEYFIELD1    VARCHAR(50),  
		   @CKEYFIELDVAL1   VARCHAR(50),  
		   @CMEMONO    VARCHAR(20),  
		   @NMEMONOLEN    NUMERIC(20,0),  
		   @CMEMONOVAL    VARCHAR(50),  
		   @CCMD     NVARCHAR(4000),  
		   @CCMDOUTPUT    NVARCHAR(4000),  
		   @NSAVETRANLOOP   BIT,  
		   @NSTEP    INT,  
		   @LENABLETEMPDATABASE BIT,  
		   @CDEPT_ID   VARCHAR(4),  
		   @CMEMODEPTID   VARCHAR(4),
		   @CPETYENABLE	  BIT,
		   @CPETTYTYPE    VARCHAR(2) , @cLocId CHAR(4) 
  
  DECLARE @OUTPUT TABLE (MEMO_ID VARCHAR(30),ERRMSG VARCHAR(500)) 
  
  SET @NSTEP = 0  -- SETTTING UP ENVIRONMENT  
  
 -- TEMPORARY DATABASE Discarded now onwards as per Meeting on 30-10-2020 mentioned in Client issues List
  SET @CTEMPDBNAME = ''  
  
 SET @CMASTERTABLENAME = 'EOSSDNM'  
 SET @CDETAILTABLENAME = 'EOSSDND'  
  
 SET @CTEMPMASTERTABLENAME = 'TEMP_EOSSDNM_'+LTRIM(RTRIM(STR(@NSPID)))  
 SET @CTEMPDETAILTABLENAME = 'TEMP_EOSSDND_'+LTRIM(RTRIM(STR(@NSPID)))  
   
 SET @CTEMPMASTERTABLE = @CTEMPDBNAME + @CTEMPMASTERTABLENAME  
 SET @CTEMPDETAILTABLE = @CTEMPDBNAME + @CTEMPDETAILTABLENAME  
   
 SET @CERRMSG   = ''  
 SET @CKEYFIELD1   = 'MEMO_ID'  
  
 SET @CMEMONO   = 'MEMO_NO'  
 SET @NMEMONOLEN   = 10  

SET @CCMD = 'SELECT @CLOCID = location_code  FROM '+@CTEMPMASTERTABLE
				EXEC SP_EXECUTESQL @CCMD, N'@CLOCID VARCHAR(4) OUTPUT', @CLOCID OUTPUT
				

	SET @CDEPT_ID=@cLocId
 
 BEGIN TRY  
  BEGIN TRANSACTION   
   IF @NUPDATEMODE IN (1,3)
   BEGIN
		SET @CERRMSG=''
   END

  IF ISNULL(@CDEPT_ID,'')=''
 BEGIN
    SET @CERRMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' LOCATION ID CAN NOT BE BLANK  '  
	GOTO END_PROC    
 END
   
   IF @NUPDATEMODE = 3			
   BEGIN
		SET @NSTEP = 10
		SET @CKEYFIELDVAL1=@CMEMOID
					
		IF @CKEYFIELDVAL1=''
		BEGIN
			SET @CERRMSG='MEMO ID REQUIRED FOR CANCELLATION.CANNOT PROCEED'
			GOTO END_PROC
		END
		
		SET @NSTEP = 20
		-- UPDATING SENTTOHO FLAG
		SET @CCMD = N' UPDATE ' + @CMASTERTABLENAME + ' SET CANCELLED = 1,LAST_UPDATE=GETDATE()' 
				  + N' WHERE ' + @CKEYFIELD1 + ' = ''' + @CKEYFIELDVAL1 + ''''
		EXEC SP_EXECUTESQL @CCMD
		
		GOTO END_PROC
   END 
    
  -- START UPDATING XN TABLES   
  IF @NUPDATEMODE = 1 -- ADDMODE   
  BEGIN   
   SET @NSTEP = 50  -- GENERATING NEW KEY  
     
   -- GENERATING NEW JOB ORDER NO    
   SET @NSAVETRANLOOP=0  
   WHILE @NSAVETRANLOOP=0  
   BEGIN  
    EXEC GETNEXTKEY @CMASTERTABLENAME, @CMEMONO, @NMEMONOLEN, @CMEMONOPREFIX, 1, @CFINYEAR, 0, @CMEMONOVAL OUTPUT     
      
    SET @NSTEP = 60  
    PRINT @CMEMONOVAL  
    SET @CCMD=N'IF EXISTS ( SELECT '+@CMEMONO+' FROM '+@CMASTERTABLENAME+'   
							WHERE '+@CMEMONO+'='''+@CMEMONOVAL+'''   
							AND FIN_YEAR = '''+@CFINYEAR+''' )  
				SET @NLOOPOUTPUT=0  
			   ELSE  
				SET @NLOOPOUTPUT=1'  
    PRINT @CCMD  
    EXEC SP_EXECUTESQL @CCMD, N'@NLOOPOUTPUT BIT OUTPUT',@NLOOPOUTPUT=@NSAVETRANLOOP OUTPUT  
   END  
  
   SET @NSTEP = 70
   IF @CMEMONOVAL IS NULL OR @CMEMONOVAL LIKE '%LATER%'
   BEGIN  
      SET @CERRMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO NO....'   
      GOTO END_PROC      
   END  
  
   SET @NSTEP = 80   
   SET @CKEYFIELDVAL1 = @CDEPT_ID + RIGHT(@CFINYEAR,2)+REPLICATE('0', (22-LEN(@CDEPT_ID + RIGHT(@CFINYEAR,2)))-LEN(LTRIM(RTRIM(@CMEMONOVAL))))  + LTRIM(RTRIM(@CMEMONOVAL)) 
   
   
   IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'    
   BEGIN  
      SET @CERRMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'  
      GOTO END_PROC  
   END  
  
   SET @NSTEP = 90  -- UPDATING NEW ID INTO TEMP TABLES  
   SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET ' + @CMEMONO+'=''' + @CMEMONOVAL+''',' 
						 +@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+''' '  
   PRINT @CCMD  
   EXEC SP_EXECUTESQL @CCMD  
   
   SET @NSTEP = 95 
   SET @CCMD = 'UPDATE '+ @CTEMPDETAILTABLE+ ' SET '+@CKEYFIELD1+' = '''+@CKEYFIELDVAL1+'''
					      ,ROW_ID='''+@CDEPT_ID+'''+CONVERT(VARCHAR(40),NEWID())'  
   PRINT @CCMD  
   EXEC SP_EXECUTESQL @CCMD  
  
  END     -- END OF ADDMODE  
  
  
  
  SET @NSTEP = 130
  -- RECHECKING IF ID IS STILL LATER  
  IF @CKEYFIELDVAL1 IS NULL OR @CKEYFIELDVAL1 LIKE '%LATER%'  
  BEGIN  
	 SET @CERRMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' ERROR CREATING NEXT MEMO ID....'  
	 GOTO END_PROC  
  END
  
   SET @CCMD = 'UPDATE ' + @CTEMPMASTERTABLE + ' SET BILL_LEVEL_TAX_METHOD=1  ' 
   PRINT @CCMD  
   EXEC SP_EXECUTESQL @CCMD 
  
  SET @NSTEP = 140  -- UPDATING MASTER TABLE  
  EXEC UPDATEMASTERXN   
      @CSOURCEDB = @CTEMPDBNAME  
    , @CSOURCETABLE = @CTEMPMASTERTABLENAME  
    , @CDESTDB  = ''  
    , @CDESTTABLE = @CMASTERTABLENAME  
    , @CKEYFIELD1 = @CKEYFIELD1  
    , @BALWAYSUPDATE = 1  
  
    
  SET @NSTEP = 150  -- UPDATING MASTER TABLE  
  EXEC UPDATEMASTERXN   
      @CSOURCEDB = @CTEMPDBNAME  
    , @CSOURCETABLE = @CTEMPDETAILTABLE  
    , @CDESTDB  = ''  
    , @CDESTTABLE = @CDETAILTABLENAME
    , @CKEYFIELD1 = 'ROW_ID'  
    , @BALWAYSUPDATE = 1
    
    DECLARE @CPARTYSTATECODE VARCHAR(2),@BGSTBILL BIT,@DMEMO_DT DATETIME,
    @CPARTY_GSTN_NO VARCHAR(20),@BREGISTERED INT,@CGSTCUTOFFDATE VARCHAR(10)
  
 END TRY  
 BEGIN CATCH  
    SET @CERRMSG = 'STEP- ' + LTRIM(STR(@NSTEP)) + ' SQL ERROR: #' + LTRIM(STR(ERROR_NUMBER())) + ' ' + ERROR_MESSAGE()
 END CATCH 
   
END_PROC:  
	INSERT INTO @OUTPUT(MEMO_ID,ERRMSG)
	SELECT @CKEYFIELDVAL1,ISNULL(@CERRMSG,'') 
  
IF @@TRANCOUNT>0  
 BEGIN  
  IF ISNULL(@CERRMSG,'')='' 
  BEGIN
	COMMIT TRANSACTION 
  END
  ELSE  
	ROLLBACK  
  END  

--DROPPING THE TEMP TABLES
SET @CCMD=N'IF OBJECT_ID('''+@CTEMPMASTERTABLENAME+''',''U'') IS NOT NULL
				DROP TABLE '+@CTEMPMASTERTABLENAME	
			+' IF OBJECT_ID('''+@CTEMPDETAILTABLENAME+''',''U'') IS NOT NULL
				DROP TABLE '+@CTEMPDETAILTABLENAME
PRINT @CCMD
EXEC SP_EXECUTESQL @CCMD				
				
SELECT * FROM @OUTPUT

END        
---------- END OF PROCEDURE SAVETRAN_EOSSDN