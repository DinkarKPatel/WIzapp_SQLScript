CREATE PROCEDURE SP_VALIDATE_FIXIRR      
(                
 @NQUERYID NUMERIC(3,0) ,    
 @NSPID NUMERIC(5,0)                                        
) 
--WITH ENCRYPTION                
               
AS
BEGIN        
    DECLARE @CTABLENAME NVARCHAR(200)    
DECLARE @CCMD NVARCHAR(MAX)    
    
SET @CTABLENAME=N'TEMP_IRREXCEL_'+LTRIM(RTRIM(STR(@NSPID)))    
SET @CCMD=N''    
IF @NQUERYID=1     
   GOTO LBLEXISTANCE                   
ELSE IF @NQUERYID=2                    
   GOTO LBLFIXCODE                           
ELSE IF @NQUERYID=3                    
   GOTO LBLWSP              
ELSE IF @NQUERYID=4                   
   GOTO LBLMRP     
ELSE IF @NQUERYID=5                  
   GOTO LBLAPPROVE    
ELSE IF @NQUERYID=6                  
   GOTO   LBLSCAN    
ELSE                 
 GOTO LAST     
    
    
 LBLEXISTANCE:   --PRODUCT CODE NOT FOUND    
 SET @CCMD=N'SELECT PRODUCT_CODE,NEW_MRP,NEW_WSP,NEW_FIX_MRP  FROM '+@CTABLENAME+    
         ' WHERE PRODUCT_CODE NOT IN (SELECT LTRIM(RTRIM(PRODUCT_CODE))  FROM SKU  (NOLOCK))'    
 GOTO LAST    
    
LBLFIXCODE:---ONLY FIX PRODUCT ALLOWED.    
 SET @CCMD=N'SELECT  PRODUCT_CODE,NEW_MRP,NEW_WSP,NEW_FIX_MRP FROM  '+@CTABLENAME+    
 ' WHERE PRODUCT_CODE NOT IN (SELECT PRODUCT_CODE FROM SKU S (NOLOCK)       
  JOIN ARTICLE A (NOLOCK) ON A.ARTICLE_CODE=S.ARTICLE_CODE         
  WHERE  A.CODING_SCHEME=1)'    
GOTO LAST    
    
LBLWSP: --MRP OR WSP SHOULD BE GREATER THAN 0    
  SET @CCMD=N'SELECT  PRODUCT_CODE,NEW_MRP,NEW_WSP,NEW_FIX_MRP FROM '+@CTABLENAME+    
  ' WHERE NEW_MRP=0 AND NEW_WSP=0'    
  GOTO LAST    
    
LBLMRP:    --MRP SHOULD BE GREATER THAN 0    
  SET @CCMD=N'SELECT   PRODUCT_CODE,NEW_MRP,NEW_WSP,NEW_FIX_MRP FROM '+@CTABLENAME+    
  ' WHERE NEW_MRP=0'    
  GOTO LAST    
    
 LBLAPPROVE:------PRODUCT CODE ALLREADY EXIST IN PREVIOUS MEMO.     
   SET @CCMD=N'SELECT DISTINCT DEL.PRODUCT_CODE,MST.MEMO_NO,T.NEW_MRP,T.NEW_WSP,T.NEW_FIX_MRP     
   FROM  FIXITEM_RATE_REVISION_DET DEL      
   JOIN FIXITEM_RATE_REVISION_MST MST ON MST.MEMO_ID=DEL.MEMO_ID      
   JOIN  '+@CTABLENAME+' T ON T.PRODUCT_CODE=DEL.PRODUCT_CODE    
   WHERE MST.APPROVED=0 AND MST.TYPE=1'     
 GOTO LAST    
     
  LBLSCAN:                
  SET @CCMD=N'SELECT DISTINCT S.*,A.ARTICLE_NO,A.ARTICLE_NAME,SM.SECTION_NAME, SD.SUB_SECTION_NAME,A.CODING_SCHEME,        
  P1.PARA1_NAME,P2.PARA2_NAME,P3.PARA3_NAME,P4.PARA4_NAME,P5.PARA5_NAME,P6.PARA6_NAME,T.NEW_MRP,T.NEW_FIX_MRP,    
  T.NEW_WSP,ROW_NUMBER() OVER(ORDER BY T.PRODUCT_CODE) AS SRNO ,(''LATER''+ CONVERT(VARCHAR(50),    
  ROW_NUMBER() OVER(ORDER BY T.PRODUCT_CODE))) AS ROW_ID,    
  ISNULL(R.OLD_MRP,S.MRP) AS OLD_MRP,ISNULL(R.OLD_WSP,S.WS_PRICE) AS OLD_WSP ,
  ISNULL(R.OLD_FIX_MRP,S.FIX_MRP) AS OLD_FIX_MRP    
  FROM SKU S (NOLOCK)       
  JOIN ARTICLE A (NOLOCK) ON A.ARTICLE_CODE=S.ARTICLE_CODE         
  JOIN SECTIOND SD (NOLOCK) ON SD.SUB_SECTION_CODE=A.SUB_SECTION_CODE        
  JOIN SECTIONM SM (NOLOCK) ON SM.SECTION_CODE=SD.SECTION_CODE        
  JOIN PARA1 P1 (NOLOCK) ON S.PARA1_CODE=P1.PARA1_CODE        
  JOIN PARA2 P2 (NOLOCK) ON S.PARA2_CODE=P2.PARA2_CODE        
  JOIN PARA3 P3 (NOLOCK) ON S.PARA3_CODE=P3.PARA3_CODE        
  JOIN PARA4 P4 (NOLOCK) ON S.PARA4_CODE=P4.PARA4_CODE        
  JOIN PARA5 P5 (NOLOCK) ON S.PARA5_CODE=P5.PARA5_CODE        
  JOIN PARA6 P6 (NOLOCK) ON S.PARA6_CODE=P6.PARA6_CODE        
  JOIN '+@CTABLENAME+' T (NOLOCK) ON  T.PRODUCT_CODE=S.PRODUCT_CODE       
  LEFT OUTER JOIN    
   (     
    SELECT TOP 1 LOC.DEPT_ID, LOC.DEPT_NAME, L.PRODUCT_CODE,S.MRP,S.WS_PRICE ,        
    ISNULL(L.MRP,0) AS OLD_MRP,ISNULL(L.WS_PRICE,0) AS OLD_WSP , ISNULL(S.FIX_MRP,0) AS OLD_FIX_MRP     
    FROM SKU S (NOLOCK)        
    JOIN LOCSKUSP L (NOLOCK) ON L.PRODUCT_CODE=S.PRODUCT_CODE        
    LEFT OUTER JOIN LOCATION LOC (NOLOCK) ON LOC.DEPT_ID=L.DEPT_ID          
    ORDER BY L.FROM_DT DESC ,L.LAST_UPDATE DESC    
    )R ON R.PRODUCT_CODE=S.PRODUCT_CODE ORDER BY S.PRODUCT_CODE'    
      
  GOTO LAST     
     
 LAST:        
 IF(ISNULL(@CCMD,'')<>'')    
    PRINT  @CCMD     
 EXEC SP_EXECUTESQL @CCMD    
 END
